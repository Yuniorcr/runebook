<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="c9437069daf0eba6b0ed6cadb0ac1ade765a4898" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glReadBuffer.xhtml&quot;&gt;glReadBuffer()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glReadBuffer.xhtml&quot;&gt;glReadBuffer ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a62454e5494c98cd828cd839652a91a4d2657ee2" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glRenderbufferStorageMultisample.xhtml&quot;&gt;glRenderbufferStorageMultisample()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glRenderbufferStorageMultisample.xhtml&quot;&gt;glRenderbufferStorageMultisample ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac36543aafe62d4c4f2b76709bf215e19eb22ac5" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glResumeTransformFeedback.xhtml&quot;&gt;glResumeTransformFeedback()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glResumeTransformFeedback.xhtml&quot;&gt;glResumeTransformFeedback ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="994e7cf1057ab8d645b7807cec55bcf957e0c8ed" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSampleMaski.xhtml&quot;&gt;glSampleMaski()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSampleMaski.xhtml&quot;&gt;glSampleMaski ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0ebab6290da21e9944369358be77364487b88cf2" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSamplerParameter.xhtml&quot;&gt;glSamplerParameterf()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSamplerParameter.xhtml&quot;&gt;glSamplerParameterf ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0187adaa9f1e3b34ac66d846dee6afb07ceabe16" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSamplerParameter.xhtml&quot;&gt;glSamplerParameterfv()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSamplerParameter.xhtml&quot;&gt;glSamplerParameterfv ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c85a45f6af465c819b0e42cf902ebc6250d9b267" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSamplerParameter.xhtml&quot;&gt;glSamplerParameteri()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSamplerParameter.xhtml&quot;&gt;glSamplerParameteri ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0b2cfc95c59ce91a371f70a1b2416c7c903838db" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSamplerParameter.xhtml&quot;&gt;glSamplerParameteriv()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glSamplerParameter.xhtml&quot;&gt;glSamplerParameteriv ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0cb976104ecb51a757a31e6f6f79e1ee45dd17c5" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexImage3D.xhtml&quot;&gt;glTexImage3D()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexImage3D.xhtml&quot;&gt;glTexImage3D ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bed7703cf18a5a86a3304ed091d1d512616aafe5" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexStorage2D.xhtml&quot;&gt;glTexStorage2D()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexStorage2D.xhtml&quot;&gt;glTexStorage2D ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7060f25872d68855189a2ccc4b12fc808c253b53" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexStorage2DMultisample.xhtml&quot;&gt;glTexStorage2DMultisample()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexStorage2DMultisample.xhtml&quot;&gt;glTexStorage2DMultisample ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f3047fd33fbf54d8cb1004c1adf23f4f8235121b" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexStorage3D.xhtml&quot;&gt;glTexStorage3D()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexStorage3D.xhtml&quot;&gt;glTexStorage3D ()&lt;/a&gt; 의 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="326a8d24b040afd0e1b3916e870d6c071b3e07e4" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexSubImage3D.xhtml&quot;&gt;glTexSubImage3D()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTexSubImage3D.xhtml&quot;&gt;glTexSubImage3D ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b672fc4540ff283e51f1f9942156934c1ba750d7" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTransformFeedbackVaryings.xhtml&quot;&gt;glTransformFeedbackVaryings()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glTransformFeedbackVaryings.xhtml&quot;&gt;glTransformFeedbackVaryings ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc25a78a22956d9b4eb13950f23d94d59b4ae853" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform1ui()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform1ui ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="586996228299fafadd5042783483bb088576e11c" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform1uiv()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform1uiv ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4555b16523148ba25f0ede38710d9c9796daecba" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform2ui()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform2ui ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7daf88711c6f0fb7c66817ef495c9296a948dca5" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform2uiv()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform2uiv ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf354134c9cb079faefefcb7fdb8954557094c6a" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform3ui()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform3ui ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6bc3fc6b760d57d7fbf07c010a07c3bc62c98e33" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform3uiv()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform3uiv ()&lt;/a&gt; 의 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="64f58d3d1236e07ce61caf660908d5f70f9c4249" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform4ui()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform4ui ()&lt;/a&gt; 용 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0dd6d4c359aebdf997f72d8b9c2d2cda0d21e115" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform4uiv()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniform4uiv ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="db992cba7c5a4d51e72f321cf3329533a836f545" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix2x3fv()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix2x3fv ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c81f31c18dc9a8b602394a36ecaeeda14fa08bf6" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix2x4fv()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix2x4fv ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1351e4c0a5f6f8af86fd40c427fc881e094680e9" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix3x2fv()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix3x2fv ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="44555b1762949a66de1d62f95b4332469aa91cdb" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix3x4fv()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix3x4fv ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9790c75ef0c7ed9b4587d4c55231a209ac972c8b" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix4x2fv()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix4x2fv ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ec24a2924c5c725cf5e5d7cb01008723927d7dc" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix4x3fv()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniform.xhtml&quot;&gt;glUniformMatrix4x3fv ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="199bbe61fc6e80e4a8e1ed7efc9c3530cc92831f" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniformBlockBinding.xhtml&quot;&gt;glUniformBlockBinding()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUniformBlockBinding.xhtml&quot;&gt;glUniformBlockBinding ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5f9179a5b158a9e4c6a7eea34d4d14cf01475240" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUnmapBuffer.xhtml&quot;&gt;glUnmapBuffer()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUnmapBuffer.xhtml&quot;&gt;glUnmapBuffer ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4ca782a479c90f98160e7bfcf41c80985d87e1f6" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUseProgramStages.xhtml&quot;&gt;glUseProgramStages()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glUseProgramStages.xhtml&quot;&gt;glUseProgramStages ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2ed7b0907a4d238bf68527a92eb5e68e9805dd46" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glValidateProgramPipeline.xhtml&quot;&gt;glValidateProgramPipeline()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glValidateProgramPipeline.xhtml&quot;&gt;glValidateProgramPipeline ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ae50090d7ff1797d79a48c42faa9b7ba10a3e5f" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml&quot;&gt;glVertexAttribI4i()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml&quot;&gt;glVertexAttribI4i ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a15ad46a2837691555443c31c5d25ac43d1a3b81" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml&quot;&gt;glVertexAttribI4iv()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml&quot;&gt;glVertexAttribI4iv ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f6c2a784cf0890ffd6c283af27b608d171a5c00e" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml&quot;&gt;glVertexAttribI4ui()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml&quot;&gt;glVertexAttribI4ui ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="194df5dbb78e8c67d22c0da8f5126200adb05087" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml&quot;&gt;glVertexAttribI4uiv()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttrib.xhtml&quot;&gt;glVertexAttribI4uiv ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1a740d8ff35362b65aa970cb6389c798412a8d77" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribBinding.xhtml&quot;&gt;glVertexAttribBinding()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribBinding.xhtml&quot;&gt;glVertexAttribBinding ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a7f6d99518299718e6b666e3f1825309758f9d2c" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribDivisor.xhtml&quot;&gt;glVertexAttribDivisor()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribDivisor.xhtml&quot;&gt;glVertexAttribDivisor ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="62d9458a34b12404e47119b6fb1eb8d40ed56bcf" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribFormat.xhtml&quot;&gt;glVertexAttribFormat()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribFormat.xhtml&quot;&gt;glVertexAttribFormat ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc742647e9b370895d48fed489229b38629691c1" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribIFormat.xhtml&quot;&gt;glVertexAttribIFormat()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexAttribIFormat.xhtml&quot;&gt;glVertexAttribIFormat ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="32dc3f41b6a70a607b596ebc08b6e62b14232f17" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexBindingDivisor.xhtml&quot;&gt;glVertexBindingDivisor()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glVertexBindingDivisor.xhtml&quot;&gt;glVertexBindingDivisor ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4e0fc243e8c66cb615777adddfd6e10154a7953c" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glWaitSync.xhtml&quot;&gt;glWaitSync()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/es3/html/glWaitSync.xhtml&quot;&gt;glWaitSync ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee8d22968291eda6f7071aa894a784add50d14cb" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGet.xhtml&quot;&gt;glGetBooleani_v()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glGet.xhtml&quot;&gt;glGetBooleani_v ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c38987d9f26d6d24fbecad26748cab928e5d9871" translate="yes" xml:space="preserve">
          <source>For more information, see the OpenGL ES 3.x documentation for &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glVertexAttribPointer.xhtml&quot;&gt;glVertexAttribIPointer()&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://www.khronos.org/registry/OpenGL-Refpages/gl4/html/glVertexAttribPointer.xhtml&quot;&gt;glVertexAttribIPointer ()에&lt;/a&gt; 대한 OpenGL ES 3.x 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="09197ca2d7f7af626a18d78c61053c525f7a12e9" translate="yes" xml:space="preserve">
          <source>For more information, see the documentation of the &lt;a href=&quot;#if-command&quot;&gt;\if&lt;/a&gt; command.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#if-command&quot;&gt;\ if&lt;/a&gt; 명령 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="12389deeb53ba0ae17447a9439f41c3c351713bd" translate="yes" xml:space="preserve">
          <source>For more information, see the documentation of the &lt;a href=&quot;12-0-qdoc-commands-miscellaneous#if-command&quot;&gt;\if&lt;/a&gt; command.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;12-0-qdoc-commands-miscellaneous#if-command&quot;&gt;\ if&lt;/a&gt; 명령 의 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="512984b646987d8467a4cd61aa6fc8122fa51a9b" translate="yes" xml:space="preserve">
          <source>For more information, take a look at the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquickcontrols-flatstyle-example.html#&quot;&gt;Flat Style example&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquickcontrols-flatstyle-example.html#&quot;&gt;플랫 스타일 예제를&lt;/a&gt; 살펴보십시오 .</target>
        </trans-unit>
        <trans-unit id="2f71c4d770bc34da470aeeb99e0261f457166037" translate="yes" xml:space="preserve">
          <source>For more information, take a look at the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquickcontrols-flatstyle-example.html&quot;&gt;Flat Style example&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquickcontrols-flatstyle-example.html&quot;&gt;플랫 스타일 예제를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d94bc43d2b2667f20dcc920fa6a917440c1de0e7" translate="yes" xml:space="preserve">
          <source>For more information, visit the &lt;a href=&quot;https://doc.qt.io/qt-5.13/topics-network-connectivity.html#&quot;&gt;Networking and Connectivity&lt;/a&gt; and &lt;a href=&quot;mobiledevelopment#&quot;&gt;Mobile APIs&lt;/a&gt; pages.</source>
          <target state="translated">자세한 내용을 보려면 &lt;a href=&quot;https://doc.qt.io/qt-5.13/topics-network-connectivity.html#&quot;&gt;네트워킹 및 연결&lt;/a&gt; 및 &lt;a href=&quot;mobiledevelopment#&quot;&gt;모바일 API&lt;/a&gt; 페이지를 방문하십시오 .</target>
        </trans-unit>
        <trans-unit id="3066dbfa97a04347f402ef8d3a342da987011b62" translate="yes" xml:space="preserve">
          <source>For more information, visit the &lt;a href=&quot;https://doc.qt.io/qt-5.15/topics-network-connectivity.html&quot;&gt;Networking and Connectivity&lt;/a&gt; and &lt;a href=&quot;mobiledevelopment&quot;&gt;Mobile APIs&lt;/a&gt; pages.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://doc.qt.io/qt-5.15/topics-network-connectivity.html&quot;&gt;네트워킹 및 연결&lt;/a&gt; 및 &lt;a href=&quot;mobiledevelopment&quot;&gt;모바일 API&lt;/a&gt; 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5f5e97702696ec620b0d8a9b07a1e7c26fbe3570" translate="yes" xml:space="preserve">
          <source>For more information, visit the &lt;a href=&quot;qtquick-modelviewsdata-cppmodels#changing-model-data&quot;&gt;Using C++ Models with Qt Quick Views&lt;/a&gt; article.</source>
          <target state="translated">자세한 내용 &lt;a href=&quot;qtquick-modelviewsdata-cppmodels#changing-model-data&quot;&gt;은 Qt 빠른보기와 함께 C ++ 모델 사용&lt;/a&gt; 기사를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9bb4f53cd4c1833440e0a5dfd92f4e6794ddafff" translate="yes" xml:space="preserve">
          <source>For more information, visit the &lt;a href=&quot;supported-platforms&quot;&gt;supported platforms&lt;/a&gt; page.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;supported-platforms&quot;&gt;지원되는 플랫폼&lt;/a&gt; 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5945be5f9f6fc75acf72925bb2805ddde7314405" translate="yes" xml:space="preserve">
          <source>For more information, visit the &lt;a href=&quot;supported-platforms#&quot;&gt;supported platforms&lt;/a&gt; page.</source>
          <target state="translated">자세한 정보는 &lt;a href=&quot;supported-platforms#&quot;&gt;지원되는 플랫폼&lt;/a&gt; 페이지를 방문 하십시오.</target>
        </trans-unit>
        <trans-unit id="dc6a39f96f12010f490c6bf5f58390befdc171a1" translate="yes" xml:space="preserve">
          <source>For more precise control, use &lt;a href=&quot;qsslconfiguration#addCaCertificate&quot;&gt;addCaCertificate&lt;/a&gt;().</source>
          <target state="translated">보다 정확한 제어를 위해 &lt;a href=&quot;qsslconfiguration#addCaCertificate&quot;&gt;addCaCertificate&lt;/a&gt; ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee5ad52f90c3516f2ab5bbcad1cda5e26822843a" translate="yes" xml:space="preserve">
          <source>For more precise control, use &lt;a href=&quot;qsslsocket#addCaCertificate&quot;&gt;addCaCertificate&lt;/a&gt;().</source>
          <target state="translated">보다 정확한 제어를 위해 &lt;a href=&quot;qsslsocket#addCaCertificate&quot;&gt;addCaCertificate&lt;/a&gt; ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b47275863816a1192f0ad4f748edf18e7fb92fa" translate="yes" xml:space="preserve">
          <source>For more sophisticated applications, reimplementing &lt;a href=&quot;qwidget#dragMoveEvent&quot;&gt;dragMoveEvent()&lt;/a&gt; and &lt;a href=&quot;qwidget#dragLeaveEvent&quot;&gt;dragLeaveEvent()&lt;/a&gt; will let you make certain parts of your widgets sensitive to drop events, and give you more control over drag and drop in your application.</source>
          <target state="translated">보다 복잡한 응용 프로그램의 경우 &lt;a href=&quot;qwidget#dragMoveEvent&quot;&gt;dragMoveEvent ()&lt;/a&gt; 및 &lt;a href=&quot;qwidget#dragLeaveEvent&quot;&gt;dragLeaveEvent ()를&lt;/a&gt; 다시 구현 하면 위젯의 특정 부분을 놓기 이벤트에 민감하게 만들 수 있으며 응용 프로그램에서 끌어서 놓기를보다 강력하게 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74d7a0174b6885535b11e7322d1a8710a79d4791" translate="yes" xml:space="preserve">
          <source>For most applications, the default growing algorithm provided by Qt does the trick. If you need more control, &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt;, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;&amp;lt;Key, T&amp;gt;, &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt;, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, and &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; provide a trio of functions that allow you to check and specify how much memory to use to store the items:</source>
          <target state="translated">대부분의 응용 프로그램에서 Qt가 제공하는 기본 확장 알고리즘은 트릭을 수행합니다. 더 많은 제어가 필요한 경우 &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; &amp;lt;T&amp;gt;, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; &amp;lt;Key, T&amp;gt;, &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt;, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 및 &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; 는 항목을 저장하는 데 사용할 메모리 양을 확인하고 지정할 수있는 함수 트리오를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="265c78d5e9261d22f9f588493f1019bb903c99ca" translate="yes" xml:space="preserve">
          <source>For most purposes, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; is the right class to use. Its index-based API is more convenient than &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt;'s iterator-based API, and it is usually faster than &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; because of the way it stores its items in memory (see &lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;Algorithmic Complexity&lt;/a&gt; for details). It also expands to less code in your executable.</source>
          <target state="translated">대부분의 경우 &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; 는 사용하기에 적합한 클래스입니다. 인덱스 기반 API는 &lt;a href=&quot;qlinkedlist&quot;&gt;QLinkedList&lt;/a&gt; 반복자 기반 API보다 편리하며 일반적으로 항목을 메모리에 저장하는 방식 때문에 &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; 보다 빠릅니다 (자세한 내용은 &lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;알고리즘 복잡도&lt;/a&gt; 참조). 또한 실행 파일에서 더 적은 코드로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="e70bb98b741444df96cf148016d833e62d671515" translate="yes" xml:space="preserve">
          <source>For most purposes, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; is the right class to use. Its index-based API is more convenient than QLinkedList's iterator-based API, and it is usually faster than &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; because of the way it stores its items in memory (see &lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;Algorithmic Complexity&lt;/a&gt; for details). It also expands to less code in your executable.</source>
          <target state="translated">대부분의 경우 &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; 는 사용하기에 적합한 클래스입니다. 인덱스 기반 API는 QLinkedList의 반복자 기반 API보다 더 편리하며, 메모리에 항목을 저장하는 방식 때문에 일반적으로 &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; 보다 빠릅니다 (자세한 내용은 &lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;알고리즘 복잡성&lt;/a&gt; 참조). 또한 실행 파일에서 더 적은 코드로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="98fc0bf3ef64bad84bba41558e528e0e5f9feacf" translate="yes" xml:space="preserve">
          <source>For most real world use cases, it is recommended to use &lt;a href=&quot;qml-qt-labs-qmlmodels-delegatechooser&quot;&gt;DelegateChooser&lt;/a&gt; as the delegate of a &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt; that uses TableModel. This allows you to use specific roles in the relevant delegates. For example, the snippet above can be rewritten to use &lt;a href=&quot;qml-qt-labs-qmlmodels-delegatechooser&quot;&gt;DelegateChooser&lt;/a&gt; like so:</source>
          <target state="translated">대부분의 실제 사용 사례에서는 &lt;a href=&quot;qml-qt-labs-qmlmodels-delegatechooser&quot;&gt;DelegateChooser&lt;/a&gt; 를 TableModel을 사용 하는 &lt;a href=&quot;qml-qtquick-tableview&quot;&gt;TableView&lt;/a&gt; 의 대리자 로 사용하는 것이 좋습니다 . 이를 통해 관련 대리인에서 특정 역할을 사용할 수 있습니다. 예를 들어 위의 스 니펫은 다음 과 같이 &lt;a href=&quot;qml-qt-labs-qmlmodels-delegatechooser&quot;&gt;DelegateChooser&lt;/a&gt; 를 사용하도록 다시 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9bc58383a628be2e820aea06d596bf5ded5157ef" translate="yes" xml:space="preserve">
          <source>For most use cases, this is both expected and necessary, as it minimizes the possibility of text in the user interface being undisplayable. In some cases, however, more direct control over the process might be useful. It is for these use cases the &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; class exists.</source>
          <target state="translated">대부분의 사용 사례에서 이는 사용자 인터페이스의 텍스트를 표시 할 수없는 가능성을 최소화하므로 예상 및 필요합니다. 그러나 경우에 따라 프로세스를보다 직접적으로 제어하는 ​​것이 유용 할 수 있습니다. 이러한 사용 사례의 경우 &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; 클래스가 존재합니다.</target>
        </trans-unit>
        <trans-unit id="6f906b9b9c3cfa150b745cbdfdbc4150db0fc00e" translate="yes" xml:space="preserve">
          <source>For most use cases, this is both expected and necessary, as it minimizes the possibility of text in the user interface being undisplayable. In some cases, however, more direct control over the process might be useful. It is for these use cases the QRawFont class exists.</source>
          <target state="translated">대부분의 사용 사례에서 이는 사용자 인터페이스의 텍스트가 표시되지 않을 가능성을 최소화하기 때문에 예상되고 필요합니다. 그러나 어떤 경우에는 프로세스를보다 직접적으로 제어하는 ​​것이 유용 할 수 있습니다. 이러한 사용 사례를 위해 QRawFont 클래스가 존재합니다.</target>
        </trans-unit>
        <trans-unit id="3a076e301a74a4a811208dfe5d85f6dc8a034462" translate="yes" xml:space="preserve">
          <source>For most users, there are no semantic benefits to using &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; instead of &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; since &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; requires attention to be paid to memory management issues, potentially making code more complex to write and maintain.</source>
          <target state="translated">&lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; 는 메모리 관리 문제에주의를 기울여야하기 때문에 코드 작성 및 유지 관리가 더욱 복잡해 지기 때문에 대부분의 사용자에게는 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 대신 &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; 를 사용 하면 의미 상 이점이 없습니다 .</target>
        </trans-unit>
        <trans-unit id="35aa2a85a73885ae4f54986d86983359ead8f8dd" translate="yes" xml:space="preserve">
          <source>For most users, there are no semantic benefits to using QStringRef instead of &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; since QStringRef requires attention to be paid to memory management issues, potentially making code more complex to write and maintain.</source>
          <target state="translated">대부분의 사용자의 경우 QStringRef는 메모리 관리 문제에주의를 기울여야하기 때문에 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 대신 QStringRef를 사용하는 것이 의미 론적 이점이 없으므로 코드를 작성하고 유지 관리하는 것이 더 복잡해질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d93b0b8fd311223cc5ad4cd54a75a3da2b7f46cc" translate="yes" xml:space="preserve">
          <source>For most uses &lt;a href=&quot;qhash-iterator&quot;&gt;QHash::iterator&lt;/a&gt; and &lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash::const_iterator&lt;/a&gt; should be used, you can easily access the key by calling &lt;a href=&quot;qhash-iterator#key&quot;&gt;QHash::iterator::key&lt;/a&gt;():</source>
          <target state="translated">대부분의 경우 &lt;a href=&quot;qhash-iterator&quot;&gt;QHash :: iterator&lt;/a&gt; 및 &lt;a href=&quot;qhash-const-iterator&quot;&gt;QHash :: const_iterator를&lt;/a&gt; 사용해야하는 경우 &lt;a href=&quot;qhash-iterator#key&quot;&gt;QHash :: iterator :: key&lt;/a&gt; () 를 호출하여 키에 쉽게 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ecd4353393dcadff9c2a393314a05edf98620c9f" translate="yes" xml:space="preserve">
          <source>For most uses &lt;a href=&quot;qmap-iterator&quot;&gt;QMap::iterator&lt;/a&gt; and &lt;a href=&quot;qmap-const-iterator&quot;&gt;QMap::const_iterator&lt;/a&gt; should be used, you can easily access the key by calling &lt;a href=&quot;qmap-iterator#key&quot;&gt;QMap::iterator::key&lt;/a&gt;():</source>
          <target state="translated">대부분의 경우 &lt;a href=&quot;qmap-iterator&quot;&gt;QMap :: iterator&lt;/a&gt; 및 &lt;a href=&quot;qmap-const-iterator&quot;&gt;QMap :: const_iterator를&lt;/a&gt; 사용해야하는 경우 &lt;a href=&quot;qmap-iterator#key&quot;&gt;QMap :: iterator :: key&lt;/a&gt; () 를 호출하여 키에 쉽게 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="28cd2da267f7bc40465c067aa8343582c490f3b4" translate="yes" xml:space="preserve">
          <source>For mouse-over effects, &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; dispatches</source>
          <target state="translated">마우스 오버 효과를 위해 &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; 디스패치</target>
        </trans-unit>
        <trans-unit id="e10b93a05f16a08662e382dbf2ed8d14a0415a26" translate="yes" xml:space="preserve">
          <source>For mouse-over effects, QGraphicsScene dispatches</source>
          <target state="translated">마우스 오버 효과의 경우 QGraphicsScene이</target>
        </trans-unit>
        <trans-unit id="6712e488a5558a0e86871bc47c484ef8ae70e6ac" translate="yes" xml:space="preserve">
          <source>For multi-tap gestures (double-tap, triple-tap etc.), the distance moved must not exceed &lt;a href=&quot;qplatformtheme#ThemeHint-enum&quot;&gt;QPlatformTheme::MouseDoubleClickDistance&lt;/a&gt; with mouse and &lt;a href=&quot;qplatformtheme#ThemeHint-enum&quot;&gt;QPlatformTheme::TouchDoubleTapDistance&lt;/a&gt; with touch, and the time between taps must not exceed &lt;a href=&quot;qstylehints#mouseDoubleClickInterval-prop&quot;&gt;QStyleHints::mouseDoubleClickInterval()&lt;/a&gt;.</source>
          <target state="translated">멀티탭 제스처 (더블 탭, 트리플 탭 등)의 경우 이동 한 거리는 &lt;a href=&quot;qplatformtheme#ThemeHint-enum&quot;&gt;QPlatformTheme :: MouseDoubleClickDistance (&lt;/a&gt; 마우스 및 &lt;a href=&quot;qplatformtheme#ThemeHint-enum&quot;&gt;QPlatformTheme :: TouchDoubleTapDistance&lt;/a&gt; 와 터치시 거리)를 초과하지 않아야 하며 탭 사이의 시간은 &lt;a href=&quot;qstylehints#mouseDoubleClickInterval-prop&quot;&gt;QStyleHints :: mouseDoubleClickInterval ( )&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f403ee85f56fc91259af6573f7322d9ea911e91" translate="yes" xml:space="preserve">
          <source>For multi-tap gestures (double-tap, triple-tap etc.), the distance moved must not exceed &lt;a href=&quot;qstylehints#mouseDoubleClickDistance-prop&quot;&gt;QStyleHints::mouseDoubleClickDistance()&lt;/a&gt; with mouse and &lt;a href=&quot;qstylehints#touchDoubleTapDistance-prop&quot;&gt;QStyleHints::touchDoubleTapDistance()&lt;/a&gt; with touch, and the time between taps must not exceed &lt;a href=&quot;qstylehints#mouseDoubleClickInterval-prop&quot;&gt;QStyleHints::mouseDoubleClickInterval()&lt;/a&gt;.</source>
          <target state="translated">멀티탭 제스처 (두 번 탭, 세 번 탭 등)의 경우 이동 된 거리는 마우스로 &lt;a href=&quot;qstylehints#mouseDoubleClickDistance-prop&quot;&gt;QStyleHints :: mouseDoubleClickDistance ()&lt;/a&gt; 를 초과하지 않아야 하고 터치로 &lt;a href=&quot;qstylehints#touchDoubleTapDistance-prop&quot;&gt;QStyleHints :: touchDoubleTapDistance ()&lt;/a&gt; 를 초과하지 않아야하며 탭 사이의 시간은 &lt;a href=&quot;qstylehints#mouseDoubleClickInterval-prop&quot;&gt;QStyleHints를&lt;/a&gt; 초과하지 않아야 합니다. :: mouseDoubleClickInterval () .</target>
        </trans-unit>
        <trans-unit id="7de9adf6236c2777e474b38499658efaff11c058" translate="yes" xml:space="preserve">
          <source>For multiple items, &lt;a href=&quot;qlistwidget#insertItems&quot;&gt;insertItems&lt;/a&gt;() can be used instead. The number of items in the list is found with the &lt;a href=&quot;qlistwidget#count-prop&quot;&gt;count&lt;/a&gt;() function. To remove items from the list, use &lt;a href=&quot;qlistwidget#takeItem&quot;&gt;takeItem&lt;/a&gt;().</source>
          <target state="translated">여러 항목의 경우 &lt;a href=&quot;qlistwidget#insertItems&quot;&gt;insertItems&lt;/a&gt; ()를 대신 사용할 수 있습니다. 목록의 항목 수는 &lt;a href=&quot;qlistwidget#count-prop&quot;&gt;count&lt;/a&gt; () 함수로 찾을 수 있습니다. 목록에서 항목을 제거하려면 &lt;a href=&quot;qlistwidget#takeItem&quot;&gt;takeItem&lt;/a&gt; ()을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2f305049186b00cafff8f1009c909839ea3a0e39" translate="yes" xml:space="preserve">
          <source>For multisample framebuffer objects a color render buffer is created, otherwise a texture with the specified texture target is created. The color render buffer or texture will have the specified internal format, and will be bound to the &lt;code&gt;GL_COLOR_ATTACHMENT0&lt;/code&gt; attachment in the framebuffer object.</source>
          <target state="translated">멀티 샘플 프레임 버퍼 객체의 경우 컬러 렌더 버퍼가 생성되고, 그렇지 않으면 지정된 텍스처 대상이있는 텍스처가 생성됩니다. 컬러 렌더 버퍼 또는 텍스처는 지정된 내부 형식을 가지며 프레임 버퍼 객체 의 &lt;code&gt;GL_COLOR_ATTACHMENT0&lt;/code&gt; 첨부 파일에 바인딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="db50479932cb5893812e37641cf2ec81c9dd9b44" translate="yes" xml:space="preserve">
          <source>For multisampled framebuffer objects the samples are resolved using the &lt;code&gt;GL_EXT_framebuffer_blit&lt;/code&gt; extension. If the extension is not available, the contents of the returned image is undefined.</source>
          <target state="translated">멀티 샘플링 된 프레임 버퍼 객체의 경우 &lt;code&gt;GL_EXT_framebuffer_blit&lt;/code&gt; 확장을 사용하여 샘플을 분석 합니다. 확장명을 사용할 수 없으면 반환 된 이미지의 내용이 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="141f1675eefbc65c06c849237bad54f5cf200c85" translate="yes" xml:space="preserve">
          <source>For multisampling to take effect, the render target must have been allocated with multisampling enabled:</source>
          <target state="translated">멀티 샘플링을 적용하려면 렌더링 대상에 멀티 샘플링이 활성화되어 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="73cca51db75ffdadb6e8ed2ae1f87d2f405fa805" translate="yes" xml:space="preserve">
          <source>For no border, use a width of 0 or a transparent color.</source>
          <target state="translated">테두리가없는 경우 너비 0 또는 투명 색상을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b55e337d7f34be7899e14d6cbddd78ef4ef19f9c" translate="yes" xml:space="preserve">
          <source>For no line, use a width of 0 or a transparent color.</source>
          <target state="translated">선이없는 경우 너비 0 또는 투명 색상을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1a8e93c6e13120c6fd88b2052ae12f08888c0f41" translate="yes" xml:space="preserve">
          <source>For nodes created by &lt;a href=&quot;qdomdocument#setContent&quot;&gt;QDomDocument::setContent&lt;/a&gt;(), this function returns the column number in the XML document where the node was parsed. Otherwise, -1 is returned.</source>
          <target state="translated">&lt;a href=&quot;qdomdocument#setContent&quot;&gt;QDomDocument :: setContent&lt;/a&gt; ()로 작성된 노드의 경우이 함수는 노드가 구문 분석 된 XML 문서의 열 번호를 리턴합니다. 그렇지 않으면 -1이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="32c1e7f5e8add5140e0ac97cbbcc98ccb9dd69c1" translate="yes" xml:space="preserve">
          <source>For nodes created by &lt;a href=&quot;qdomdocument#setContent&quot;&gt;QDomDocument::setContent&lt;/a&gt;(), this function returns the line number in the XML document where the node was parsed. Otherwise, -1 is returned.</source>
          <target state="translated">&lt;a href=&quot;qdomdocument#setContent&quot;&gt;QDomDocument :: setContent&lt;/a&gt; ()로 작성된 노드의 경우이 함수는 노드가 구문 분석 된 XML 문서의 행 번호를 리턴합니다. 그렇지 않으면 -1이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="73a3912322c85c1be8249f74090c0c00681061c2" translate="yes" xml:space="preserve">
          <source>For non-const iterator types, the return value of the unary &lt;code&gt;*&lt;/code&gt; operator can be used on the left side of the assignment operator.</source>
          <target state="translated">비 const 반복자 유형의 경우, 단항 &lt;code&gt;*&lt;/code&gt; 연산자 의 반환 값은 대입 연산자의 왼쪽에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c027589afd6d7529017a8824fc85cccb96e60e21" translate="yes" xml:space="preserve">
          <source>For non-cubemap type targets this will return 1.</source>
          <target state="translated">비 큐브 맵 유형 대상의 경우 1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ecdf12168779a2d1a8b1eb93068e8f5b49e8a043" translate="yes" xml:space="preserve">
          <source>For non-directed, connectable advertising. Advertising is not directed to one specific device and a device seeing the advertisement can connect to the advertising device or send scan requests.</source>
          <target state="translated">연결되지 않은 연결 가능한 광고의 경우. 광고는 하나의 특정 장치로 향하지 않으며 광고를 보는 장치는 광고 장치에 연결하거나 스캔 요청을 보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="523abff3a435074c2d20e1f3b39194578a836fd6" translate="yes" xml:space="preserve">
          <source>For non-directed, non-connectable advertising. Advertising is not directed to one specific device. A device seeing the advertisement cannot connect to the advertising device, nor can it send a scan request. This mode thus implies pure broadcasting.</source>
          <target state="translated">방향이 지정되지 않고 연결할 수없는 광고의 경우 광고는 하나의 특정 장치를 대상으로하지 않습니다. 광고를보고있는 장치는 광고 장치에 연결할 수 없으며 스캔 요청을 보낼 수 없습니다. 따라서이 모드는 순수한 방송을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="61a768e926f40467846c0c87cffa9c6404966d36" translate="yes" xml:space="preserve">
          <source>For non-directed, scannable advertising. Advertising is not directed to one specific device and a device seeing the advertisement can send a scan request to the advertising device, but cannot connect to it.</source>
          <target state="translated">검색되지 않은 스캔 가능한 광고의 경우. 광고는 하나의 특정 장치로 전송되지 않으며 광고를보고있는 장치는 광고 요청을 스캔 장치로 보낼 수 있지만 연결할 수는 없습니다.</target>
        </trans-unit>
        <trans-unit id="f0f021d10334640e4f5ba8479f7a1309d1e1b94e" translate="yes" xml:space="preserve">
          <source>For non-hierarchical schemes, the path will be everything following the scheme declaration, as in the following example:</source>
          <target state="translated">비 계층 구조의 경우 경로는 다음 예와 같이 체계 선언 다음에 오는 모든 경로가됩니다.</target>
        </trans-unit>
        <trans-unit id="21036d9b7e6d6b244bbdc6badb808baa34dbf315" translate="yes" xml:space="preserve">
          <source>For non-text items, a default baseline offset of 0 is used.</source>
          <target state="translated">텍스트가 아닌 항목의 경우 기본 기준선 오프셋 0이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1994d09ad72c084f8d67483000f34244d4c0fabc" translate="yes" xml:space="preserve">
          <source>For notes about the performance on &lt;a href=&quot;qml-qtlocation-maproute&quot;&gt;MapRoute&lt;/a&gt;, refer to the documentation for &lt;a href=&quot;qml-qtlocation-mappolyline&quot;&gt;MapPolyline&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtlocation-maproute&quot;&gt;MapRoute&lt;/a&gt; 의 성능에 대한 메모는 &lt;a href=&quot;qml-qtlocation-mappolyline&quot;&gt;MapPolyline&lt;/a&gt; 의 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f65adb44b513d4a2bef4b57a16218be93afa867" translate="yes" xml:space="preserve">
          <source>For notes about the performance on MapRoute, refer to the documentation for &lt;a href=&quot;qml-qtlocation-mappolyline&quot;&gt;MapPolyline&lt;/a&gt;.</source>
          <target state="translated">MapRoute의 성능에 대한 참고 사항은 &lt;a href=&quot;qml-qtlocation-mappolyline&quot;&gt;MapPolyline&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ea4bfd796cfb0c68134f3a61374c801f0311361c" translate="yes" xml:space="preserve">
          <source>For objects that are created via the &lt;a href=&quot;qml-qtqml-component#createObject-method&quot;&gt;createObject()&lt;/a&gt; function of &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt;, the &lt;a href=&quot;qml-qttest-testcase#createTemporaryObject-method&quot;&gt;createTemporaryObject()&lt;/a&gt; function can be used.</source>
          <target state="translated">&lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt; 의 &lt;a href=&quot;qml-qtqml-component#createObject-method&quot;&gt;createObject ()&lt;/a&gt; 함수를 통해 생성 된 객체의 경우 &lt;a href=&quot;qml-qttest-testcase#createTemporaryObject-method&quot;&gt;createTemporaryObject ()&lt;/a&gt; 함수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b0328188dc426c3bbb29619a269103f526bd379d" translate="yes" xml:space="preserve">
          <source>For objects that are created via the &lt;a href=&quot;qml-qtqml-component#createObject-method&quot;&gt;createObject()&lt;/a&gt; function of &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt;, the &lt;a href=&quot;qml-testcase#createTemporaryObject-method&quot;&gt;createTemporaryObject()&lt;/a&gt; function can be used.</source>
          <target state="translated">&lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt; 의 &lt;a href=&quot;qml-qtqml-component#createObject-method&quot;&gt;createObject ()&lt;/a&gt; 함수를 통해 생성 된 객체의 경우 &lt;a href=&quot;qml-testcase#createTemporaryObject-method&quot;&gt;createTemporaryObject ()&lt;/a&gt; 함수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e760d1912e0032f90a1d7f0f62c2e52ba5713f3b" translate="yes" xml:space="preserve">
          <source>For objects that are used to manipulate a value, for example slider or scroll bar.</source>
          <target state="translated">값을 조작하는 데 사용되는 객체 (예 : 슬라이더 또는 스크롤 막대)</target>
        </trans-unit>
        <trans-unit id="6021527882a6b30c8317d796076157450377ad93" translate="yes" xml:space="preserve">
          <source>For open random-access devices, this function returns the size of the device. For open sequential devices, &lt;a href=&quot;qiodevice#bytesAvailable&quot;&gt;bytesAvailable&lt;/a&gt;() is returned.</source>
          <target state="translated">개방형 랜덤 액세스 장치의 경우이 함수는 장치의 크기를 반환합니다. 열린 순차 장치의 경우 &lt;a href=&quot;qiodevice#bytesAvailable&quot;&gt;bytesAvailable&lt;/a&gt; ()이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="5f2d647f70478d2523bafacf5685294e942f88f1" translate="yes" xml:space="preserve">
          <source>For opening the source view in the current tab, URLs with &lt;a href=&quot;https://www.iana.org/assignments/uri-schemes/prov/view-source&quot;&gt;view-source URI scheme&lt;/a&gt; are also supported. For example, you can type the following URL to the URL bar to view the HTML source of the qt.io web page:</source>
          <target state="translated">현재 탭에서 소스보기를 열려면 소스보기 &lt;a href=&quot;https://www.iana.org/assignments/uri-schemes/prov/view-source&quot;&gt;URI 스킴&lt;/a&gt; 이있는 URL 도 지원됩니다. 예를 들어, qt.io 웹 페이지의 HTML 소스를 보려면 URL 표시 줄에 다음 URL을 입력 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="723bd7d9f5c8e1f91c5e3bef3a1dac92a1a717af" translate="yes" xml:space="preserve">
          <source>For opening the source view in the current tab, URLs with &lt;a href=&quot;https://www.iana.org/assignments/uri-schemes/prov/view-source#&quot;&gt;view-source URI scheme&lt;/a&gt; are also supported. For example, you can type the following URL to the URL bar to view the HTML source of the qt.io web page:</source>
          <target state="translated">현재 탭에서 소스 뷰를 열려면 뷰 &lt;a href=&quot;https://www.iana.org/assignments/uri-schemes/prov/view-source#&quot;&gt;소스 URI 스킴&lt;/a&gt; 이있는 URL 도 지원됩니다. 예를 들어, URL 표시 줄에 다음 URL을 입력하여 qt.io 웹 페이지의 HTML 소스를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1ad97c2f81a91bbda6e4cd7fb7e78253db37e73" translate="yes" xml:space="preserve">
          <source>For optimization purposes, if</source>
          <target state="translated">최적화를 위해</target>
        </trans-unit>
        <trans-unit id="7d4ce81e399d592597df4a9f120ff0b98c2b97a0" translate="yes" xml:space="preserve">
          <source>For options found by the parser, the last value found for that option is returned. If the option wasn't specified on the command line, the default value is returned.</source>
          <target state="translated">파서가 찾은 옵션의 경우 해당 옵션에 대해 마지막으로 찾은 값이 반환됩니다. 명령 행에 옵션을 지정하지 않은 경우 기본값이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="4439b8b695c93fe6c22907d4a90d02a18ef85efb" translate="yes" xml:space="preserve">
          <source>For options found by the parser, the list will contain an entry for each time the option was encountered by the parser. If the option wasn't specified on the command line, the default values are returned.</source>
          <target state="translated">파서가 찾은 옵션의 경우, 파서가 옵션을 발견 할 때마다 목록에 항목이 포함됩니다. 명령 행에 옵션을 지정하지 않으면 기본값이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="08e8bfa43b9f0095da070aa02a606dd8654bc67b" translate="yes" xml:space="preserve">
          <source>For orientable sensors, the &lt;a href=&quot;qsensor#axesOrientationMode-prop&quot;&gt;axesOrientationMode&lt;/a&gt; property controls how the orientation affects the reading values.</source>
          <target state="translated">방향 센서의 경우 &lt;a href=&quot;qsensor#axesOrientationMode-prop&quot;&gt;axesOrientationMode&lt;/a&gt; 속성은 방향이 판독 값에 미치는 영향을 제어합니다.</target>
        </trans-unit>
        <trans-unit id="ae623bf7948f4faa438692582e35f8045cf7b705" translate="yes" xml:space="preserve">
          <source>For other Unix-type systems, this function usually returns &quot;unknown&quot;.</source>
          <target state="translated">다른 Unix 유형 시스템의 경우이 함수는 일반적으로 &quot;알 수 없음&quot;을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0a3528409d11abd774ea7a7cdafe2ccc0ea9e210" translate="yes" xml:space="preserve">
          <source>For other platforms, it is recommended to display help texts and error messages using a &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt;. To preserve the formatting of the help text, rich text with &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; elements should be used:</source>
          <target state="translated">다른 플랫폼의 경우 &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox를&lt;/a&gt; 사용하여 도움말 텍스트 및 오류 메시지를 표시하는 것이 좋습니다 . 도움말 텍스트의 형식을 유지하려면 &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt; 요소가있는 서식있는 텍스트를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="dffb57226b1ca838d17f62be5426436b511467c7" translate="yes" xml:space="preserve">
          <source>For other types not listed above, a conversion to string will be attempted, usually but not always by calling &lt;a href=&quot;qvariant#toString&quot;&gt;QVariant::toString&lt;/a&gt;(). If the conversion fails the value is replaced by a null JSON value. Note that &lt;a href=&quot;qvariant#toString&quot;&gt;QVariant::toString&lt;/a&gt;() is also lossy for the majority of types. For example, if the passed &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; is representing raw byte array data, it is recommended to pre-encode it to &lt;a href=&quot;https://www.ietf.org/rfc/rfc4648.txt&quot;&gt;Base64&lt;/a&gt; (or another lossless encoding), otherwise a lossy conversion using &lt;a href=&quot;qstring#fromUtf8&quot;&gt;QString::fromUtf8&lt;/a&gt;() will be used.</source>
          <target state="translated">위에 나열되지 않은 다른 유형의 경우 일반적으로 &lt;a href=&quot;qvariant#toString&quot;&gt;QVariant :: toString&lt;/a&gt; () 을 호출하여 문자열로 변환을 시도하지만 항상 그런 것은 아닙니다 . 변환에 실패하면 값이 널 JSON 값으로 대체됩니다. 참고 &lt;a href=&quot;qvariant#toString&quot;&gt;QVariant :: toString는&lt;/a&gt; ()도 유형의 대부분을 손실이다. 예를 들어 전달 된 &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 가 원시 바이트 배열 데이터를 나타내는 경우 &lt;a href=&quot;https://www.ietf.org/rfc/rfc4648.txt&quot;&gt;Base64&lt;/a&gt; (또는 다른 무손실 인코딩) 로 미리 인코딩하는 것이 좋습니다 . 그렇지 않으면 &lt;a href=&quot;qstring#fromUtf8&quot;&gt;QString :: fromUtf8&lt;/a&gt; ()을 사용한 손실 변환이 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="2d63a1b7e96821059953bd9507b9af2a4f02b421" translate="yes" xml:space="preserve">
          <source>For other types not listed above, a conversion to string will be attempted, usually but not always by calling &lt;a href=&quot;qvariant#toString&quot;&gt;QVariant::toString&lt;/a&gt;(). If the conversion fails the value is replaced by an Undefined CBOR value. Note that &lt;a href=&quot;qvariant#toString&quot;&gt;QVariant::toString&lt;/a&gt;() is also lossy for the majority of types.</source>
          <target state="translated">위에 나열되지 않은 다른 유형의 경우 일반적으로 &lt;a href=&quot;qvariant#toString&quot;&gt;QVariant :: toString&lt;/a&gt; () 을 호출하여 문자열로 변환을 시도하지만 항상 그런 것은 아닙니다 . 변환이 실패하면 값은 정의되지 않은 CBOR 값으로 대체됩니다. 참고 &lt;a href=&quot;qvariant#toString&quot;&gt;QVariant :: toString는&lt;/a&gt; ()도 유형의 대부분을 손실이다.</target>
        </trans-unit>
        <trans-unit id="d7ffd7e4297e5bef7699347a59c7b3c75b07e485" translate="yes" xml:space="preserve">
          <source>For out-of-process executable servers you can implement a main() function to instantiate a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object and enter the event loop just like any normal Qt application. By default the application will start as a standard Qt application, but if you pass &lt;code&gt;-activex&lt;/code&gt; on the command line it will start as an ActiveX server. Use &lt;a href=&quot;qaxfactory#isServer&quot;&gt;QAxFactory::isServer&lt;/a&gt;() to create and run a standard application interface, or to prevent a stand-alone execution:</source>
          <target state="translated">Out-of-process 실행 서버의 경우 main () 함수를 구현하여 &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; 객체 를 인스턴스화하고 일반 Qt 애플리케이션과 마찬가지로 이벤트 루프를 입력 할 수 있습니다. 기본적으로 응용 프로그램은 표준 Qt 응용 프로그램으로 시작되지만 명령 줄에서 &lt;code&gt;-activex&lt;/code&gt; 를 전달 하면 ActiveX 서버로 시작됩니다. 사용 &lt;a href=&quot;qaxfactory#isServer&quot;&gt;QAxFactory :: isServer&lt;/a&gt; ()을 생성하고 실행 표준 응용 프로그램 인터페이스 또는 독립형 실행을 방지하기 위해 :</target>
        </trans-unit>
        <trans-unit id="da8271df4d7263fdf87d8c19eb933745ee8702da" translate="yes" xml:space="preserve">
          <source>For out-of-process servers this is the same as &lt;a href=&quot;qcoreapplication#applicationDirPath&quot;&gt;QCoreApplication::applicationDirPath&lt;/a&gt;(). For in-process servers that function returns the directory that contains the hosting application.</source>
          <target state="translated">Out-of-process 서버의 경우 &lt;a href=&quot;qcoreapplication#applicationDirPath&quot;&gt;QCoreApplication :: applicationDirPath&lt;/a&gt; () 와 동일 합니다. In-process 서버의 경우 해당 기능이 호스팅 응용 프로그램이 포함 된 디렉토리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e9381a6dca2f0087d475a821cffb011b0e300c4e" translate="yes" xml:space="preserve">
          <source>For out-of-process servers this is the same as &lt;a href=&quot;qcoreapplication#applicationFilePath&quot;&gt;QCoreApplication::applicationFilePath&lt;/a&gt;(). For in-process servers that function returns the file path of the hosting application.</source>
          <target state="translated">Out-of-process 서버의 경우 &lt;a href=&quot;qcoreapplication#applicationFilePath&quot;&gt;QCoreApplication :: applicationFilePath&lt;/a&gt; () 와 동일 합니다. 처리중인 서버의 경우 해당 기능이 호스팅 응용 프로그램의 파일 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7bd56a1edd7e4a11307624394d37ec2b46e0c01e" translate="yes" xml:space="preserve">
          <source>For outgoing datagrams, this function can be used to set the address the datagram should be sent to. It can be the unicast address used to communicate with the peer or a broadcast or multicast address to send to a group of devices.</source>
          <target state="translated">발신 데이터 그램의 경우이 기능을 사용하여 데이터 그램을 보내야 할 주소를 설정할 수 있습니다. 피어와 통신하는 데 사용되는 유니 캐스트 주소이거나 장치 그룹에 보내는 브로드 캐스트 또는 멀티 캐스트 주소 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a496415abc767cd9bd43f48dac5ecd5e220168de" translate="yes" xml:space="preserve">
          <source>For outgoing datagrams, this function can be used to set the address the datagram should carry. The address</source>
          <target state="translated">발신 데이터 그램의 경우이 기능을 사용하여 데이터 그램이 전달해야하는 주소를 설정할 수 있습니다. 주소</target>
        </trans-unit>
        <trans-unit id="f302317ec28bcbcfec70b6be6bbc67ba9b3a576d" translate="yes" xml:space="preserve">
          <source>For parallel state groups, the &lt;a href=&quot;qml-qtqml-statemachine-state#finished-signal&quot;&gt;State::finished&lt;/a&gt; signal is emitted when</source>
          <target state="translated">병렬 상태 그룹의 경우 &lt;a href=&quot;qml-qtqml-statemachine-state#finished-signal&quot;&gt;State :: finished&lt;/a&gt; 신호는</target>
        </trans-unit>
        <trans-unit id="80a1c2c864fdc1d52ee0e053bca3f4047a97e665" translate="yes" xml:space="preserve">
          <source>For parallel state groups, the &lt;a href=&quot;qstate#finished&quot;&gt;QState::finished&lt;/a&gt;() signal is emitted when</source>
          <target state="translated">병렬 상태 그룹의 경우 &lt;a href=&quot;qstate#finished&quot;&gt;QState :: finished&lt;/a&gt; () 신호가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a01e72ddddff74feceedcfe6a6e3ea0bc7d3f6d0" translate="yes" xml:space="preserve">
          <source>For percentage spacing a value of 100 indicates default spacing; a value of 200 doubles the amount of space a letter takes.</source>
          <target state="translated">백분율 간격의 경우 값 100은 기본 간격을 나타냅니다. 값이 200이면 글자가 차지하는 공간이 두 배가됩니다.</target>
        </trans-unit>
        <trans-unit id="96db63bc5dd274e5dba02a019fffc3c2549f9499" translate="yes" xml:space="preserve">
          <source>For performance reasons, the access to the member variables is direct (i.e., using the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;-&amp;gt;&lt;/code&gt; operator).</source>
          <target state="translated">성능상의 이유로 멤버 변수에 대한 액세스는 직접적입니다 (즉, &lt;code&gt;.&lt;/code&gt; 또는 &lt;code&gt;-&amp;gt;&lt;/code&gt; 연산자 사용).</target>
        </trans-unit>
        <trans-unit id="05a60c141c5a5c5aaa28c105ef825cb982631910" translate="yes" xml:space="preserve">
          <source>For performance reasons, the access to the member variables is direct (i.e., using the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;-&amp;gt;&lt;/code&gt; operator). This low-level feel makes the structures straightforward to use and emphasizes that these are simply parameters used by the style functions.</source>
          <target state="translated">성능상의 이유로 멤버 변수에 대한 액세스는 직접적입니다 (즉, &lt;code&gt;.&lt;/code&gt; 또는 &lt;code&gt;-&amp;gt;&lt;/code&gt; 연산자 사용). 이 낮은 수준의 느낌은 구조를 간단하게 사용하도록하며 스타일 함수가 사용하는 단순한 매개 변수임을 강조합니다.</target>
        </trans-unit>
        <trans-unit id="c72b07d10a543a6fb8c64f31ca82f2716470620a" translate="yes" xml:space="preserve">
          <source>For performance reasons, the access to the member variables is direct (i.e., using the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;-&amp;gt;&lt;/code&gt; operator). This low-level feel makes the structures straightforward to use and emphasizes that these are simply parameters.</source>
          <target state="translated">성능상의 이유로 멤버 변수에 대한 액세스는 직접적입니다 (즉, &lt;code&gt;.&lt;/code&gt; 또는 &lt;code&gt;-&amp;gt;&lt;/code&gt; 연산자 사용). 이 낮은 수준의 느낌은 구조를 사용하기 쉽고 구조가 단순한 매개 변수임을 강조합니다.</target>
        </trans-unit>
        <trans-unit id="c1db67ff409715ceaf331daf5ebd1faa4da36b83" translate="yes" xml:space="preserve">
          <source>For performance reasons, there are few member functions and the access to the member variables is direct (i.e., using the &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;-&amp;gt;&lt;/code&gt; operator). This low-level feel makes the structures straightforward to use and emphasizes that these are simply parameters used by the style functions.</source>
          <target state="translated">성능상의 이유로 멤버 함수는 거의 없으며 멤버 변수에 대한 액세스는 직접적입니다 (예 : &lt;code&gt;.&lt;/code&gt; 또는 &lt;code&gt;-&amp;gt;&lt;/code&gt; 연산자 사용). 이 낮은 수준의 느낌은 구조를 간단하게 사용하도록하며 스타일 함수가 사용하는 단순한 매개 변수임을 강조합니다.</target>
        </trans-unit>
        <trans-unit id="fd18d8e88ad2ee2ee79dff50cacb0504ce2964dd" translate="yes" xml:space="preserve">
          <source>For performance reasons, you can only anchor an item to its siblings and direct parent. For example, the following anchor is invalid and would produce a warning:</source>
          <target state="translated">성능상의 이유로 항목을 형제 및 직접 상위 항목에만 고정 할 수 있습니다. 예를 들어, 다음 앵커는 유효하지 않으며 경고를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="21b00d979180e8475ba750f8507ec74dcadf00ec" translate="yes" xml:space="preserve">
          <source>For platforms where this id might be useful, the value returned will uniquely represent the window inside the corresponding screen.</source>
          <target state="translated">이 ID가 유용한 플랫폼의 경우, 반환 된 값은 해당 화면 내의 창을 고유하게 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ff8121b44b987a71e50c046441f33e5296947a77" translate="yes" xml:space="preserve">
          <source>For platforms without high-resolution touchpad support, pixelDelta will always be (0,0), and &lt;a href=&quot;qml-qtquick-pointerscrollevent#angleDelta-prop&quot;&gt;angleDelta&lt;/a&gt; should be used instead.</source>
          <target state="translated">고해상도 터치 패드가 지원되지 않는 플랫폼의 경우 pixelDelta는 항상 (0,0) 이되며 대신 &lt;a href=&quot;qml-qtquick-pointerscrollevent#angleDelta-prop&quot;&gt;angleDelta를&lt;/a&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="03792ab9759ae90e4841cc775ade2ec23fe58de1" translate="yes" xml:space="preserve">
          <source>For platforms without high-resolution trackpad support, pixelDelta will always be (0,0), and &lt;a href=&quot;qml-qtquick-wheelevent#angleDelta-prop&quot;&gt;angleDelta&lt;/a&gt; should be used instead.</source>
          <target state="translated">고해상도 트랙 패드를 지원하지 않는 플랫폼의 경우 pixelDelta는 항상 (0,0)이되고 대신 &lt;a href=&quot;qml-qtquick-wheelevent#angleDelta-prop&quot;&gt;angleDelta를&lt;/a&gt; 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="c23dfa23b2cd3cd525a864641204d0ec9ab0b336" translate="yes" xml:space="preserve">
          <source>For polar charts,</source>
          <target state="translated">극좌표 형 차트의 경우</target>
        </trans-unit>
        <trans-unit id="7edd2e4a4373b88ca25a25dd39a81dc38d55de7c" translate="yes" xml:space="preserve">
          <source>For possible replacements of the word, see &lt;a href=&quot;qwebenginecontextmenudata#spellCheckerSuggestions&quot;&gt;spellCheckerSuggestions&lt;/a&gt;().</source>
          <target state="translated">단어를 대체 할 수있는 경우 &lt;a href=&quot;qwebenginecontextmenudata#spellCheckerSuggestions&quot;&gt;spellCheckerSuggestions&lt;/a&gt; ()를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7dda4ae339f3cc379bd458b42c0226b797167be4" translate="yes" xml:space="preserve">
          <source>For presses on the &lt;a href=&quot;qml-qtquick-controls2-swipedelegate&quot;&gt;SwipeDelegate&lt;/a&gt; itself, use its &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#pressed-signal&quot;&gt;pressed&lt;/a&gt; property.</source>
          <target state="translated">온 프레스 &lt;a href=&quot;qml-qtquick-controls2-swipedelegate&quot;&gt;SwipeDelegate&lt;/a&gt; 자체, 그 사용 &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#pressed-signal&quot;&gt;프레스&lt;/a&gt; 속성을.</target>
        </trans-unit>
        <trans-unit id="442a1d3a50bcdc0bea7af6c8d7202c518888a8b5" translate="yes" xml:space="preserve">
          <source>For print pagination:</source>
          <target state="translated">인쇄 페이지 매김 :</target>
        </trans-unit>
        <trans-unit id="a2fb6825e8a11fdd30dd53bd3564ce2541963a45" translate="yes" xml:space="preserve">
          <source>For processing instructions, the string value is the data section(excluding any whitespace appearing between the name and the data).</source>
          <target state="translated">처리 명령의 경우 문자열 값은 데이터 섹션입니다 (이름과 데이터 사이에 나타나는 공백은 제외).</target>
        </trans-unit>
        <trans-unit id="12a6af365da6bd211c823f49424a179e32f4144d" translate="yes" xml:space="preserve">
          <source>For production applications, the class can be used to display messages which the user only needs to see once. To use &lt;a href=&quot;qerrormessage&quot;&gt;QErrorMessage&lt;/a&gt; like this, you create the dialog in the usual way, and show it by calling the &lt;a href=&quot;qerrormessage#showMessage&quot;&gt;showMessage&lt;/a&gt;() slot or connecting signals to it.</source>
          <target state="translated">프로덕션 응용 프로그램의 경우이 클래스를 사용하면 사용자가 한 번만 볼 수있는 메시지를 표시 할 수 있습니다. 이와 같은 &lt;a href=&quot;qerrormessage&quot;&gt;QErrorMessage&lt;/a&gt; 를 사용하려면 일반적인 방법으로 대화 상자를 작성하고 &lt;a href=&quot;qerrormessage#showMessage&quot;&gt;showMessage&lt;/a&gt; () 슬롯 을 호출 하거나 신호를 연결하여 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="67ce9310515e6607e1e262eef9caf192d021cd68" translate="yes" xml:space="preserve">
          <source>For production applications, the class can be used to display messages which the user only needs to see once. To use QErrorMessage like this, you create the dialog in the usual way, and show it by calling the &lt;a href=&quot;qerrormessage#showMessage&quot;&gt;showMessage&lt;/a&gt;() slot or connecting signals to it.</source>
          <target state="translated">프로덕션 애플리케이션의 경우 클래스를 사용하여 사용자가 한 번만 볼 수있는 메시지를 표시 할 수 있습니다. 이와 같이 QErrorMessage를 사용하려면 일반적인 방법으로 대화 상자를 만들고 &lt;a href=&quot;qerrormessage#showMessage&quot;&gt;showMessage&lt;/a&gt; () 슬롯 을 호출 하거나 신호를 연결하여 표시합니다.</target>
        </trans-unit>
        <trans-unit id="088c0ad46ec526744912cd1a843bdb9deb76aa90" translate="yes" xml:space="preserve">
          <source>For projects where the build target is a &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, iOS, tvOS, or watchOS framework, this variable is used to specify the version number that will be applied to the framework that is built.</source>
          <target state="translated">빌드 대상이 &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; , iOS, tvOS 또는 watchOS 프레임 워크 인 프로젝트의 경우이 변수는 빌드 된 프레임 워크에 적용될 버전 번호를 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6643579d5f8ddfdf3fdffb79dfbf78f05978c436" translate="yes" xml:space="preserve">
          <source>For projects where the build target is a macOS, iOS, tvOS, or watchOS framework, this variable is used to specify the version number that will be applied to the framework that is built.</source>
          <target state="translated">빌드 대상이 macOS, iOS, tvOS 또는 watchOS 프레임 워크 인 프로젝트의 경우이 변수는 빌드되는 프레임 워크에 적용될 버전 번호를 지정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e1f0fc86adbf8f24337913fa3e06a7365814c8fc" translate="yes" xml:space="preserve">
          <source>For projects where the same source files are used in building several programs, it may be more appropriate to build the shared classes into a dynamically-linked (or shared object) library that each program, including the test programs, can load at run-time. Again, having the compiled code in a library helps to avoid duplication in the description of which components to combine to make the various programs.</source>
          <target state="translated">여러 프로그램을 빌드하는 데 동일한 소스 파일이 사용되는 프로젝트의 경우, 테스트 프로그램을 포함하여 각 프로그램이 런타임에로드 할 수있는 동적으로 연결된 (또는 공유 객체) 라이브러리로 공유 클래스를 빌드하는 것이 더 적절할 수 있습니다. . 다시 말하지만, 컴파일 된 코드를 라이브러리에두면 다양한 프로그램을 만들기 위해 결합 할 구성 요소에 대한 설명이 중복되는 것을 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc81f40bb9915ee61c55aaff5bae4b6469d4bf6d" translate="yes" xml:space="preserve">
          <source>For properties of type string, the &lt;code&gt;&amp;lt;stringpropertyspecification&amp;gt;&lt;/code&gt; tag can be used. This tag has the following attributes:</source>
          <target state="translated">문자열 유형의 속성에는 &lt;code&gt;&amp;lt;stringpropertyspecification&amp;gt;&lt;/code&gt; 태그를 사용할 수 있습니다. 이 태그에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbcde94c7e1707c980c0d80ab76dc04421c8dfe0" translate="yes" xml:space="preserve">
          <source>For properties that have overloaded signals, QDoc groups the overloaded notifiers together. To refer to a specific version of a notifier or signal, simply refer to the property and mention that there are different versions of the notifier.</source>
          <target state="translated">과부하 된 신호가있는 특성의 경우 QDoc은 과부하 된 알리미를 그룹화합니다. 특정 버전의 알리미 또는 신호를 참조하려면 속성을 참조하고 다른 버전의 알리미가 있다고 언급하면됩니다.</target>
        </trans-unit>
        <trans-unit id="de369e3e48c0b13fb8d0b4e97eae9186ab7b2190" translate="yes" xml:space="preserve">
          <source>For prototyping and displaying very simple data (from a web API, for example), &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel&quot;&gt;TableModel&lt;/a&gt; can be used:</source>
          <target state="translated">프로토 타이핑 및 매우 간단한 데이터 (예 : 웹 API)를 표시하기 위해 &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel&quot;&gt;TableModel을&lt;/a&gt; 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48bf5171d1369eb6d977ffad25fba7684775775e" translate="yes" xml:space="preserve">
          <source>For random-access devices, skip() can be used to seek forward from the current position. Negative</source>
          <target state="translated">랜덤 액세스 장치의 경우 skip ()을 사용하여 현재 위치에서 앞으로 탐색 할 수 있습니다. 부정</target>
        </trans-unit>
        <trans-unit id="f489f939d154612911f038cfe6ae91ed5b07d2af" translate="yes" xml:space="preserve">
          <source>For random-access devices, this function returns the position that data is written to or read from. For sequential devices or closed devices, where there is no concept of a &quot;current position&quot;, 0 is returned.</source>
          <target state="translated">랜덤 액세스 장치의 경우이 함수는 데이터를 쓰거나 읽는 위치를 반환합니다. &quot;현재 위치&quot;개념이없는 순차 장치 또는 닫힌 장치의 경우 0이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="f39124c92a4f485cfaa28770c86e9fe46164b95d" translate="yes" xml:space="preserve">
          <source>For random-access devices, this function sets the current position to</source>
          <target state="translated">랜덤 액세스 장치의 경우이 기능은 현재 위치를</target>
        </trans-unit>
        <trans-unit id="cf2c57728e58c9cbc653cd9f08c029c0c4e8267c" translate="yes" xml:space="preserve">
          <source>For read requests as well as combined read/write requests send via &lt;a href=&quot;qmodbusclient#sendReadWriteRequest&quot;&gt;QModbusClient::sendReadWriteRequest&lt;/a&gt;() it contains the values read from the server instance.</source>
          <target state="translated">&lt;a href=&quot;qmodbusclient#sendReadWriteRequest&quot;&gt;QModbusClient :: sendReadWriteRequest&lt;/a&gt; () 를 통해 전송 된 읽기 / 쓰기 요청뿐만 아니라 읽기 요청의 경우 서버 인스턴스에서 읽은 값이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="1b1d7bb4508aebd214f1f0cc49b01ba175c8e177" translate="yes" xml:space="preserve">
          <source>For read-only access, an alternative syntax is to use &lt;a href=&quot;qbytearray#at&quot;&gt;at&lt;/a&gt;():</source>
          <target state="translated">읽기 전용 액세스의 경우 대체 구문은 &lt;a href=&quot;qbytearray#at&quot;&gt;at&lt;/a&gt; () 을 사용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="bef8571d471d94c07abab6acd7629ad39008c386" translate="yes" xml:space="preserve">
          <source>For read-only access, an alternative syntax is to use &lt;a href=&quot;qvector#at&quot;&gt;at&lt;/a&gt;():</source>
          <target state="translated">읽기 전용 액세스의 경우 대체 구문은 &lt;a href=&quot;qvector#at&quot;&gt;at&lt;/a&gt; () 을 사용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="43ed82f6e56204c24e59a8131ef14870a9650553" translate="yes" xml:space="preserve">
          <source>For read-only access, an alternative syntax is to use the &lt;a href=&quot;qstring#at&quot;&gt;at&lt;/a&gt;() function:</source>
          <target state="translated">읽기 전용 액세스의 경우 대체 구문은 &lt;a href=&quot;qstring#at&quot;&gt;at&lt;/a&gt; () 함수 를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7efd209cb70adcd896be48ab7e0dbe31d0a7d457" translate="yes" xml:space="preserve">
          <source>For read-only access, you can use const_iterator, &lt;a href=&quot;qlist#constBegin&quot;&gt;constBegin()&lt;/a&gt;, and &lt;a href=&quot;qlist#constEnd&quot;&gt;constEnd()&lt;/a&gt;. For example:</source>
          <target state="translated">읽기 전용 액세스의 경우 const_iterator, &lt;a href=&quot;qlist#constBegin&quot;&gt;constBegin ()&lt;/a&gt; 및 &lt;a href=&quot;qlist#constEnd&quot;&gt;constEnd ()를&lt;/a&gt; 사용할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="701f88892ff1d092651aca1c9cfbada00991939b" translate="yes" xml:space="preserve">
          <source>For reading small pieces of data, use &lt;a href=&quot;qhttppart#setBody&quot;&gt;setBody&lt;/a&gt;(); for larger data blocks like e.g. images, use &lt;a href=&quot;qhttppart#setBodyDevice&quot;&gt;setBodyDevice&lt;/a&gt;(). The latter method saves memory by not copying the data internally, but reading directly from the device. This means that the device must be opened and readable at the moment when the multipart message containing the body part is sent on the network via &lt;a href=&quot;qnetworkaccessmanager#post&quot;&gt;QNetworkAccessManager::post&lt;/a&gt;().</source>
          <target state="translated">작은 데이터를 읽으려면 &lt;a href=&quot;qhttppart#setBody&quot;&gt;setBody&lt;/a&gt; ()를 사용하십시오. 이미지와 같은 더 큰 데이터 블록의 경우 &lt;a href=&quot;qhttppart#setBodyDevice&quot;&gt;setBodyDevice&lt;/a&gt; ()를 사용 하십시오 . 후자의 방법은 내부적으로 데이터를 복사하지 않고 장치에서 직접 읽음으로써 메모리를 절약합니다. 이는 본문 부분을 포함하는 다중 부분 메시지가 &lt;a href=&quot;qnetworkaccessmanager#post&quot;&gt;QNetworkAccessManager :: post&lt;/a&gt; () 를 통해 네트워크에서 전송 될 때 장치를 열고 읽을 수 있어야 함을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="ec5bf06d5432ed8a00b49bd152619c24c856aeb0" translate="yes" xml:space="preserve">
          <source>For regular empty files on Unix (e.g. those in &lt;code&gt;/proc&lt;/code&gt;), this function returns 0; the contents of such a file are generated on demand in response to you calling &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;().</source>
          <target state="translated">유닉스의 빈 파일 (예 : &lt;code&gt;/proc&lt;/code&gt; 파일 )의 경우이 함수는 0을 반환합니다. 이러한 파일의 내용은 &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt; () 호출에 대한 응답으로 요청시 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="195362308191e4b1cebdc8495fbb1764ae71e45e" translate="yes" xml:space="preserve">
          <source>For regular empty files on Unix (e.g. those in &lt;code&gt;/proc&lt;/code&gt;), this function returns &lt;code&gt;true&lt;/code&gt;, since the file system reports that the size of such a file is 0. Therefore, you should not depend on atEnd() when reading data from such a file, but rather call &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() until no more data can be read.</source>
          <target state="translated">Unix의 빈 파일 (예 : &lt;code&gt;/proc&lt;/code&gt; 파일)의 경우 파일 시스템에서 해당 파일의 크기가 0이라고보고 하므로이 함수는 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 따라서 이러한 파일에서 데이터를 읽을 때 atEnd ()에 의존해서는 안됩니다 더 이상 데이터를 읽을 수 없을 때까지 &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt; ()를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="43ff32a69e021444d5a7b532c8626cebe14007e6" translate="yes" xml:space="preserve">
          <source>For regular expressions containing &lt;a href=&quot;qregexp#capturing-parentheses&quot;&gt;capturing parentheses&lt;/a&gt;, occurrences of &lt;b&gt;\1&lt;/b&gt;, &lt;b&gt;\2&lt;/b&gt;, ..., in</source>
          <target state="translated">&lt;a href=&quot;qregexp#capturing-parentheses&quot;&gt;괄호 캡처가&lt;/a&gt; 포함 된 정규식 의 경우 &lt;b&gt;\ 1&lt;/b&gt; , &lt;b&gt;\ 2&lt;/b&gt; , ...</target>
        </trans-unit>
        <trans-unit id="b2e5d831ff4eb121f0d7ab885a93faa118cf56a6" translate="yes" xml:space="preserve">
          <source>For regular expressions containing capturing groups, occurrences of &lt;b&gt;\1&lt;/b&gt;, &lt;b&gt;\2&lt;/b&gt;, ..., in</source>
          <target state="translated">캡처 그룹을 포함하는 정규식의 경우 &lt;b&gt;\ 1&lt;/b&gt; , &lt;b&gt;\ 2&lt;/b&gt; , ...</target>
        </trans-unit>
        <trans-unit id="a4bfaebfc6ff391c57c539030b3bff61ae4a7853" translate="yes" xml:space="preserve">
          <source>For regular expressions that contain &lt;a href=&quot;qregexp#capturing-parentheses&quot;&gt;capturing parentheses&lt;/a&gt;, occurrences of &lt;b&gt;\1&lt;/b&gt;, &lt;b&gt;\2&lt;/b&gt;, ..., in</source>
          <target state="translated">&lt;a href=&quot;qregexp#capturing-parentheses&quot;&gt;캡처 괄호&lt;/a&gt; 가 포함 된 정규 표현식 의 경우 &lt;b&gt;\ 1&lt;/b&gt; , &lt;b&gt;\ 2&lt;/b&gt; , ...</target>
        </trans-unit>
        <trans-unit id="ae910bac251c1b5efc1e5c62cad38003e38b57ad" translate="yes" xml:space="preserve">
          <source>For regular expressions that contain capturing groups, occurrences of &lt;b&gt;\1&lt;/b&gt;, &lt;b&gt;\2&lt;/b&gt;, ..., in</source>
          <target state="translated">캡처 그룹이 포함 된 정규식의 경우 &lt;b&gt;\ 1&lt;/b&gt; , &lt;b&gt;\ 2&lt;/b&gt; , ...</target>
        </trans-unit>
        <trans-unit id="82b2230eeef2bb606b615d9e602c96b52a47c7b2" translate="yes" xml:space="preserve">
          <source>For relational columns,</source>
          <target state="translated">관계형 열의 경우</target>
        </trans-unit>
        <trans-unit id="c719323a18796330a9934cce2156d2165f0ae0e8" translate="yes" xml:space="preserve">
          <source>For rendernodes covering the entire area of a corresponding &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; the return value will be (0, 0, item-&amp;gt;width(), item-&amp;gt;height()).</source>
          <target state="translated">해당 &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; 의 전체 영역을 덮는 렌더 노드의 경우 반환 값은 (0, 0, item-&amp;gt; width (), item-&amp;gt; height ())입니다.</target>
        </trans-unit>
        <trans-unit id="2638a22780fc979dc6335c34a9978a6245ec569a" translate="yes" xml:space="preserve">
          <source>For reporting critical errors.</source>
          <target state="translated">중대한 오류를보고합니다.</target>
        </trans-unit>
        <trans-unit id="c8d8ec7161be0a14aacbf9661b8cfe109c1acd49" translate="yes" xml:space="preserve">
          <source>For reporting information about normal operations.</source>
          <target state="translated">일반 작업에 대한 정보를보고합니다.</target>
        </trans-unit>
        <trans-unit id="596bff57ecf455ec4c315a3d7b508ae39f7ff5ce" translate="yes" xml:space="preserve">
          <source>For reporting non-critical errors.</source>
          <target state="translated">중요하지 않은 오류를보고합니다.</target>
        </trans-unit>
        <trans-unit id="69423da71998a0245561d718de2b9cb3b007b4a3" translate="yes" xml:space="preserve">
          <source>For representing an image as a shape to affectors and emitters. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">이미지를 이펙터 및 이미 터에 대한 모양으로 나타냅니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0251583871d7ef3a6deacfd22f576e0f9bff16a2" translate="yes" xml:space="preserve">
          <source>For right-to-left languages such as Arabic and Hebrew, the layout of horizontal splitters is reversed.</source>
          <target state="translated">아랍어 및 히브리어와 같은 오른쪽에서 왼쪽으로 쓰는 언어의 경우 가로 스플리터의 레이아웃이 반전됩니다.</target>
        </trans-unit>
        <trans-unit id="8a19414f32e6ceedb3e4240cdf73efdfce7e166a" translate="yes" xml:space="preserve">
          <source>For right-to-left languages such as Arabic and Hebrew, the layout of horizontal splitters is reversed. Positions are then measured from the right edge of the widget.</source>
          <target state="translated">아랍어 및 히브리어와 같은 오른쪽에서 왼쪽으로 쓰는 언어의 경우 가로 스플리터의 레이아웃이 반전됩니다. 그런 다음 위젯의 오른쪽 가장자리에서 위치를 측정합니다.</target>
        </trans-unit>
        <trans-unit id="df664faa31cc66c3b6a4927f6ac445117b3514e5" translate="yes" xml:space="preserve">
          <source>For right-to-left languages such as Arabic and Hebrew, the layout of horizontal splitters is reversed. The handle will be to the right of the widget at</source>
          <target state="translated">아랍어 및 히브리어와 같은 오른쪽에서 왼쪽으로 쓰는 언어의 경우 가로 스플리터의 레이아웃이 반전됩니다. 핸들은 위젯 오른쪽에 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca6bddac69359149a6abb657603cfd978eff7e37" translate="yes" xml:space="preserve">
          <source>For running Qt applications on your Mac or in the simulator that comes with Xcode, this is all you need. However, for running applications on a mobile device and/or publishing your applications in the App Store, you must join the &lt;a href=&quot;https://developer.apple.com/programs/&quot;&gt;Apple Developer Program&lt;/a&gt;, and set up developer certificates and provisioning profiles. The easiest solution is to use a profile that takes any App ID (a &lt;code&gt;*&lt;/code&gt;).</source>
          <target state="translated">Mac 또는 Xcode와 함께 제공되는 시뮬레이터에서 Qt 애플리케이션을 실행하는 데 필요한 모든 것입니다. 그러나 모바일 장치에서 응용 프로그램을 실행하거나 App Store에 응용 프로그램을 게시하려면 &lt;a href=&quot;https://developer.apple.com/programs/&quot;&gt;Apple Developer Program에&lt;/a&gt; 가입하고 개발자 인증서 및 프로비저닝 프로파일을 설정해야합니다. 가장 쉬운 해결책은 모든 앱 ID ( &lt;code&gt;*&lt;/code&gt; ) 를 사용하는 프로필을 사용하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="9fed7e0df2ee8622f3438bbc1be9aa5ca3768492" translate="yes" xml:space="preserve">
          <source>For running Qt applications on your Mac or in the simulator that comes with Xcode, this is all you need. However, for running applications on a mobile device and/or publishing your applications in the App Store, you must join the &lt;a href=&quot;https://developer.apple.com/programs/#&quot;&gt;Apple Developer Program&lt;/a&gt;, and set up developer certificates and provisioning profiles. The easiest solution is to use a profile that takes any App ID (a &lt;code&gt;*&lt;/code&gt;).</source>
          <target state="translated">Mac 또는 Xcode와 함께 제공되는 시뮬레이터에서 Qt 응용 프로그램을 실행하려면이 모든 것이 필요합니다. 그러나 모바일 장치에서 응용 프로그램을 실행하거나 응용 프로그램을 App Store에 게시하려면 &lt;a href=&quot;https://developer.apple.com/programs/#&quot;&gt;Apple Developer Program에&lt;/a&gt; 가입하고 개발자 인증서 및 프로비저닝 프로파일을 설정해야합니다. 가장 쉬운 해결책은 앱 ID (a &lt;code&gt;*&lt;/code&gt; ) 를 사용하는 프로파일을 사용하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="11ef69aa3ecb8d456ac99887ade0b821cbf48c57" translate="yes" xml:space="preserve">
          <source>For sequential devices, all data recorded in the internal buffer during the transaction will be discarded.</source>
          <target state="translated">순차 장치의 경우 트랜잭션 중 내부 버퍼에 기록 된 모든 데이터가 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="0bbe1449399236abac03fb5739ec25826b0bdaf8" translate="yes" xml:space="preserve">
          <source>For server sockets, calling this function is the only way to initiate the SSL handshake. Most servers will call this function immediately upon receiving a connection, or as a result of having received a protocol-specific command to enter SSL mode (e.g, the server may respond to receiving the string &quot;STARTTLS\r\n&quot; by calling this function).</source>
          <target state="translated">서버 소켓의 경우이 기능을 호출하는 것이 SSL 핸드 셰이크를 시작하는 유일한 방법입니다. 대부분의 서버는 연결을 수신하거나 SSL 모드로 들어가기위한 프로토콜 별 명령을 수신 한 결과로이 함수를 즉시 호출합니다 (예 : 서버는이 함수를 호출하여 &quot;STARTTLS \ r \ n&quot;문자열 수신에 응답 할 수 있음) ).</target>
        </trans-unit>
        <trans-unit id="4d63a69087231586818e6cd7055552aa58ea78c4" translate="yes" xml:space="preserve">
          <source>For setting attributes on a logical particle group. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">논리 입자 그룹에서 속성을 설정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6b0101be221f839230ec62ae217b235a7e6f0539" translate="yes" xml:space="preserve">
          <source>For setting headers, use &lt;a href=&quot;qhttppart#setHeader&quot;&gt;setHeader&lt;/a&gt;() and &lt;a href=&quot;qhttppart#setRawHeader&quot;&gt;setRawHeader&lt;/a&gt;(), which behave exactly like &lt;a href=&quot;qnetworkrequest#setHeader&quot;&gt;QNetworkRequest::setHeader&lt;/a&gt;() and &lt;a href=&quot;qnetworkrequest#setRawHeader&quot;&gt;QNetworkRequest::setRawHeader&lt;/a&gt;().</source>
          <target state="translated">설정 헤더를 사용에 대한 &lt;a href=&quot;qhttppart#setHeader&quot;&gt;setHeader&lt;/a&gt; () 및 &lt;a href=&quot;qhttppart#setRawHeader&quot;&gt;setRawHeader&lt;/a&gt; (), 정확히처럼 행동 &lt;a href=&quot;qnetworkrequest#setHeader&quot;&gt;QNetworkRequest :: setHeader&lt;/a&gt; () 및 &lt;a href=&quot;qnetworkrequest#setRawHeader&quot;&gt;QNetworkRequest :: setRawHeader&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="18109e78adaa9bab094626b557692f2111f91a56" translate="yes" xml:space="preserve">
          <source>For shared libraries, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/sharedlibrary.html&quot;&gt;Creating Shared Libraries&lt;/a&gt;.</source>
          <target state="translated">공유 라이브러리의 경우 공유 라이브러리 &lt;a href=&quot;https://doc.qt.io/qt-5.13/sharedlibrary.html&quot;&gt;작성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b82621dd718b0acf8013b9b01104abc281677ca4" translate="yes" xml:space="preserve">
          <source>For shared libraries, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/sharedlibrary.html&quot;&gt;Creating Shared Libraries&lt;/a&gt;.</source>
          <target state="translated">공유 라이브러리의 경우 공유 라이브러리 &lt;a href=&quot;https://doc.qt.io/qt-5.15/sharedlibrary.html&quot;&gt;만들기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fbb5470027817aee205fe2a4c6a6987f311c8a02" translate="yes" xml:space="preserve">
          <source>For signals with default parameters, this function will always return the index with all parameters, regardless of which was used with &lt;a href=&quot;qobject#connect&quot;&gt;connect&lt;/a&gt;(). For example, the signal &lt;code&gt;destroyed(QObject *obj = 0)&lt;/code&gt; will have two different indexes (with and without the parameter), but this function will always return the index with a parameter. This does not apply when overloading signals with different parameters.</source>
          <target state="translated">기본 매개 변수가있는 신호의 경우이 함수는 &lt;a href=&quot;qobject#connect&quot;&gt;connect&lt;/a&gt; () 에 사용 된 것과 관계없이 항상 모든 매개 변수가있는 인덱스를 반환합니다 . 예를 들어, &lt;code&gt;destroyed(QObject *obj = 0)&lt;/code&gt; 신호 는 매개 변수가 있거나없는 두 개의 서로 다른 색인을 가지지 만이 함수는 항상 매개 변수가있는 색인을 리턴합니다. 다른 파라미터로 신호를 오버로드 할 때는 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6b0aaa12028ab5031888a8f7cd3c32d7bab1cc2d" translate="yes" xml:space="preserve">
          <source>For signals with default parameters, this function will always return the index with all parameters, regardless of which was used with &lt;a href=&quot;qobject#connect&quot;&gt;connect&lt;/a&gt;(). For example, the signal &lt;code&gt;destroyed(QObject *obj = \nullptr)&lt;/code&gt; will have two different indexes (with and without the parameter), but this function will always return the index with a parameter. This does not apply when overloading signals with different parameters.</source>
          <target state="translated">기본 매개 변수가있는 신호의 경우이 함수는 &lt;a href=&quot;qobject#connect&quot;&gt;connect&lt;/a&gt; () 와 함께 사용 된 매개 변수에 관계없이 항상 모든 매개 변수가있는 색인을 리턴합니다 . 예를 들어, &lt;code&gt;destroyed(QObject *obj = \nullptr)&lt;/code&gt; 된 신호 (QObject * obj = \ nullptr) 에는 두 개의 다른 인덱스 (매개 변수 포함 및 제외)가 있지만이 함수는 항상 매개 변수가있는 인덱스를 반환합니다. 매개 변수가 다른 신호를 과부하 할 때는 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d4e0e18060378651ab109e8a6c29a0c1053d7827" translate="yes" xml:space="preserve">
          <source>For simple animations that simply animate an item's movement to its final destination, this interruption is unlikely to require additional consideration. However, if a transition changes other properties, this interruption may cause unwanted side effects. Consider the first example on this page, repeated below for convenience:</source>
          <target state="translated">항목의 움직임을 최종 대상으로 애니메이션하는 단순한 애니메이션의 경우이 중단은 추가 고려가 필요하지 않습니다. 그러나 전환으로 인해 다른 속성이 변경되면이 중단으로 인해 원하지 않는 부작용이 발생할 수 있습니다. 편의를 위해이 페이지의 첫 번째 예를 아래에서 반복하십시오.</target>
        </trans-unit>
        <trans-unit id="bab43fd672f2feeee99c382fe3b699c3f9c01c57" translate="yes" xml:space="preserve">
          <source>For simple control of event processing use &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;QCoreApplication::processEvents&lt;/a&gt;().</source>
          <target state="translated">이벤트 처리를 간단하게 제어하려면 &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;QCoreApplication :: processEvents&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="027eedd67c0c0321d92a67f3ad9d8a441069c8e2" translate="yes" xml:space="preserve">
          <source>For simplicity, we are only interested in the items in the first column of the model. We examine each row in turn, obtaining a model index for the first item in each row, and read the data stored for that item in the model.</source>
          <target state="translated">편의상 모델의 첫 번째 열에있는 항목에만 관심이 있습니다. 각 행을 차례로 검사하여 각 행의 첫 번째 항목에 대한 모델 색인을 얻고 해당 항목에 저장된 데이터를 모델에서 읽습니다.</target>
        </trans-unit>
        <trans-unit id="ccdb35a963cb39f115d762c7ec6cd5cd46ae865f" translate="yes" xml:space="preserve">
          <source>For singlesampled framebuffers the contents is retrieved via &lt;code&gt;glReadPixels&lt;/code&gt;. This is a potentially expensive and inefficient operation. Therefore it is recommended that this function is used as seldom as possible.</source>
          <target state="translated">단일 샘플 프레임 버퍼의 경우 내용은 &lt;code&gt;glReadPixels&lt;/code&gt; 를 통해 검색됩니다 . 이것은 잠재적으로 비싸고 비효율적 인 작업입니다. 따라서이 기능은 가능한 한 드물게 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="39f3fda9876f433f742a09dc70aa40fc95a100b4" translate="yes" xml:space="preserve">
          <source>For sliders, scrollbars and other numerical value selectors &lt;a href=&quot;qaccessiblevalueinterface&quot;&gt;QAccessibleValueInterface&lt;/a&gt; should be implemented.</source>
          <target state="translated">슬라이더의 경우 스크롤 막대 및 기타 숫자 값 선택기 &lt;a href=&quot;qaccessiblevalueinterface&quot;&gt;QAccessibleValueInterface&lt;/a&gt; 를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="b49bf622b5a947267f7a7a3cc26abb0671bf162c" translate="yes" xml:space="preserve">
          <source>For slots or notifiers, the condition when they are executed or triggered by a signal should be documented.</source>
          <target state="translated">슬롯 또는 알리미의 경우 신호에 의해 실행되거나 트리거 될 때의 상태를 문서화해야합니다.</target>
        </trans-unit>
        <trans-unit id="72fb2c9ca73f347ea65d5db2085efc40d14cf0c4" translate="yes" xml:space="preserve">
          <source>For smooth scaling between mip maps, use &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Linear&lt;/a&gt;. For normal scaling, use &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Nearest&lt;/a&gt;.</source>
          <target state="translated">밉맵 간의 부드러운 스케일링을 위해 &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Linear를&lt;/a&gt; 사용 하십시오 . 일반 스케일링의 경우 &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Nearest를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a7931324760c85e312d99f48d54a74e26783075e" translate="yes" xml:space="preserve">
          <source>For smooth scaling, use &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Linear&lt;/a&gt;. For normal scaling, use &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Nearest&lt;/a&gt;.</source>
          <target state="translated">부드러운 스케일링을 위해 &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Linear를&lt;/a&gt; 사용 하십시오 . 일반 스케일링의 경우 &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Nearest를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="87ef95122ae5d789554235d4c4e6c579e5ab8e94" translate="yes" xml:space="preserve">
          <source>For smooth scaling, use &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Linear&lt;/a&gt;; for normal scaling, use &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture::Nearest&lt;/a&gt;.</source>
          <target state="translated">부드러운 스케일링을 위해 &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Linear&lt;/a&gt; ; 일반 스케일링의 경우 &lt;a href=&quot;qsgtexture#Filtering-enum&quot;&gt;QSGTexture :: Nearest를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="acb11561ae96a7fbe72cce759b4b208214d48e01" translate="yes" xml:space="preserve">
          <source>For some custom QML object types, it may be beneficial to delay the initialization of particular data until the object has been created and all of its properties have been set. For example, this may be the case if the initialization is costly, or if the initialization should not be performed until all property values have been initialized.</source>
          <target state="translated">일부 사용자 정의 QML 객체 유형의 경우 객체가 생성되고 모든 속성이 설정 될 때까지 특정 데이터의 초기화를 지연시키는 것이 유리할 수 있습니다. 예를 들어, 초기화 비용이 많이 들거나 모든 속성 값이 초기화 될 때까지 초기화를 수행하지 않아야하는 경우가 여기에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="95a3bb2b2c531637ada6a5f5b7ac95ddaf2570f5" translate="yes" xml:space="preserve">
          <source>For some databases, if an active query that is a &lt;code&gt;SELECT&lt;/code&gt; statement exists when you call &lt;a href=&quot;qsqldatabase#commit&quot;&gt;commit()&lt;/a&gt; or &lt;a href=&quot;qsqldatabase#rollback&quot;&gt;rollback()&lt;/a&gt;, the commit or rollback will fail. See &lt;a href=&quot;qsqlquery#isActive&quot;&gt;isActive&lt;/a&gt;() for details.</source>
          <target state="translated">일부 데이터베이스의 경우 &lt;a href=&quot;qsqldatabase#commit&quot;&gt;commit ()&lt;/a&gt; 또는 &lt;a href=&quot;qsqldatabase#rollback&quot;&gt;rollback ()&lt;/a&gt; 을 호출 할 때 &lt;code&gt;SELECT&lt;/code&gt; 문인 활성 쿼리 가 있으면 커밋 또는 롤백이 실패합니다. 자세한 내용은 &lt;a href=&quot;qsqlquery#isActive&quot;&gt;isActive&lt;/a&gt; ()를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fb5cbc7c56a624ef4f888624d791184ee2ccafc3" translate="yes" xml:space="preserve">
          <source>For some devices, atEnd() can return true even though there is more data to read. This special case only applies to devices that generate data in direct response to you calling &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() (e.g., &lt;code&gt;/dev&lt;/code&gt; or &lt;code&gt;/proc&lt;/code&gt; files on Unix and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;, or console input / &lt;code&gt;stdin&lt;/code&gt; on all platforms).</source>
          <target state="translated">일부 장치의 경우 읽을 데이터가 더 있어도 atEnd ()가 true를 반환 할 수 있습니다. 이 특별한 경우는 &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt; () 호출에 직접 응답하여 데이터를 생성하는 장치에만 적용됩니다 (예 : Unix 및 &lt;a href=&quot;internationalization#macos&quot;&gt;macOS의 &lt;/a&gt; &lt;code&gt;/dev&lt;/code&gt; 또는 &lt;code&gt;/proc&lt;/code&gt; 파일 또는 모든 플랫폼의 콘솔 입력 / &lt;code&gt;stdin&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="8ed0eb99d3139f21eb8d3705cfc5db35fbaea548" translate="yes" xml:space="preserve">
          <source>For some devices, atEnd() can return true even though there is more data to read. This special case only applies to devices that generate data in direct response to you calling &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() (e.g., &lt;code&gt;/dev&lt;/code&gt; or &lt;code&gt;/proc&lt;/code&gt; files on Unix and macOS, or console input / &lt;code&gt;stdin&lt;/code&gt; on all platforms).</source>
          <target state="translated">일부 장치의 경우 읽을 데이터가 더 많은 경우에도 atEnd ()가 true를 반환 할 수 있습니다. 이 특별한 경우는 &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt; () 호출에 대한 직접 응답으로 데이터를 생성하는 장치에만 적용됩니다 (예 : Unix 및 macOS의 &lt;code&gt;/dev&lt;/code&gt; 또는 &lt;code&gt;/proc&lt;/code&gt; 파일 또는 모든 플랫폼의 콘솔 입력 / &lt;code&gt;stdin&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="601191c363f472648c84e80f6355902f097c0817" translate="yes" xml:space="preserve">
          <source>For some resistive, single-touch touch screens it may be necessary to fall back to using &lt;code&gt;tslib&lt;/code&gt; instead of relying on the Linux multi-touch protocol and the event devices. For modern touch screens this is not necessary. &lt;code&gt;tslib&lt;/code&gt; support can be enabled by setting the environment variable &lt;code&gt;QT_QPA_EGLFS_TSLIB&lt;/code&gt; or &lt;code&gt;QT_QPA_FB_TSLIB&lt;/code&gt; to 1. To change the device, set the environment variable &lt;code&gt;TSLIB_TSDEVICE&lt;/code&gt; or pass the device name on the command-line. Note that the &lt;code&gt;tslib&lt;/code&gt; input handler generates mouse events and supports single touch only, as opposed to &lt;code&gt;evdevtouch&lt;/code&gt; which generates true multi-touch &lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt; events too.</source>
          <target state="translated">일부 저항성 단일 터치 터치 스크린의 경우 Linux 멀티 터치 프로토콜 및 이벤트 장치에 의존하지 않고 &lt;code&gt;tslib&lt;/code&gt; 를 사용하는 것으로 대체 해야 할 수도 있습니다 . 최신 터치 스크린의 경우에는 필요하지 않습니다. 환경 변수 &lt;code&gt;QT_QPA_EGLFS_TSLIB&lt;/code&gt; 또는 &lt;code&gt;QT_QPA_FB_TSLIB&lt;/code&gt; 를 1 로 설정하여 &lt;code&gt;tslib&lt;/code&gt; 지원을 사용할 수 있습니다 . 장치를 변경하려면 환경 변수 &lt;code&gt;TSLIB_TSDEVICE&lt;/code&gt; 를 설정 하거나 명령 행에서 장치 이름을 전달하십시오. 있습니다 &lt;code&gt;tslib&lt;/code&gt; 의 입력 핸들러는 반대로 마우스가 이벤트와 지원 단일 터치 생성 &lt;code&gt;evdevtouch&lt;/code&gt; 진정한 멀티 터치 생성 &lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent의&lt;/a&gt; 도 이벤트를.</target>
        </trans-unit>
        <trans-unit id="111cc4d8f8c8cda09306b27896193ad2f17ed812" translate="yes" xml:space="preserve">
          <source>For some specialized forms of tables it is useful to be able to convert between row and column indexes and widget coordinates. The &lt;a href=&quot;qtableview#rowAt&quot;&gt;rowAt&lt;/a&gt;() function provides the y-coordinate within the view of the specified row; the row index can be used to obtain a corresponding y-coordinate with &lt;a href=&quot;qtableview#rowViewportPosition&quot;&gt;rowViewportPosition&lt;/a&gt;(). The &lt;a href=&quot;qtableview#columnAt&quot;&gt;columnAt&lt;/a&gt;() and &lt;a href=&quot;qtableview#columnViewportPosition&quot;&gt;columnViewportPosition&lt;/a&gt;() functions provide the equivalent conversion operations between x-coordinates and column indexes.</source>
          <target state="translated">일부 특수화 된 테이블 형식의 경우 행 및 열 인덱스와 위젯 좌표간에 변환 할 수있는 것이 유용합니다. &lt;a href=&quot;qtableview#rowAt&quot;&gt;rowAt&lt;/a&gt; () 함수는 지정된 행의 관점에서, Y 좌표를 제공한다; 행 인덱스는 &lt;a href=&quot;qtableview#rowViewportPosition&quot;&gt;rowViewportPosition&lt;/a&gt; () 을 사용하여 해당 y 좌표를 얻는 데 사용할 수 있습니다 . &lt;a href=&quot;qtableview#columnAt&quot;&gt;columnAt&lt;/a&gt; () 및 &lt;a href=&quot;qtableview#columnViewportPosition&quot;&gt;columnViewportPosition&lt;/a&gt; () 함수는 x 좌표와 열 인덱스 간의 등가 변환 동작을 제공한다.</target>
        </trans-unit>
        <trans-unit id="eb98b98b577ab32a03d3ff4bc79946a2f352c103" translate="yes" xml:space="preserve">
          <source>For sophisticated session managers provided on Unix/X11, &lt;a href=&quot;qsessionmanager&quot;&gt;QSessionManager&lt;/a&gt; offers further possibilities to fine-tune an application's session management behavior: &lt;a href=&quot;qsessionmanager#setRestartCommand&quot;&gt;setRestartCommand&lt;/a&gt;(), &lt;a href=&quot;qsessionmanager#setDiscardCommand&quot;&gt;setDiscardCommand&lt;/a&gt;(), &lt;a href=&quot;qsessionmanager#setRestartHint&quot;&gt;setRestartHint&lt;/a&gt;(), &lt;a href=&quot;qobject#setProperty&quot;&gt;setProperty&lt;/a&gt;(), &lt;a href=&quot;qsessionmanager#requestPhase2&quot;&gt;requestPhase2&lt;/a&gt;(). See the respective function descriptions for further details.</source>
          <target state="translated">Unix / X11에서 제공되는 정교한 세션 관리자를 위해 &lt;a href=&quot;qsessionmanager&quot;&gt;QSessionManager&lt;/a&gt; 는 &lt;a href=&quot;qsessionmanager#setRestartCommand&quot;&gt;setRestartCommand&lt;/a&gt; (), &lt;a href=&quot;qsessionmanager#setDiscardCommand&quot;&gt;setDiscardCommand&lt;/a&gt; (), &lt;a href=&quot;qsessionmanager#setRestartHint&quot;&gt;setRestartHint&lt;/a&gt; (), &lt;a href=&quot;qobject#setProperty&quot;&gt;setProperty&lt;/a&gt; (), &lt;a href=&quot;qsessionmanager#requestPhase2&quot;&gt;requestPhase2&lt;/a&gt; ()와 같이 응용 프로그램의 세션 관리 동작을 미세 조정할 수있는 추가 가능성을 제공합니다 . 자세한 내용은 해당 기능 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="341523555ce8352eb83ac194314386ffd5d0335c" translate="yes" xml:space="preserve">
          <source>For sophisticated session managers provided on Unix/X11, QSessionManager offers further possibilities to fine-tune an application's session management behavior: &lt;a href=&quot;qsessionmanager#setRestartCommand&quot;&gt;setRestartCommand&lt;/a&gt;(), &lt;a href=&quot;qsessionmanager#setDiscardCommand&quot;&gt;setDiscardCommand&lt;/a&gt;(), &lt;a href=&quot;qsessionmanager#setRestartHint&quot;&gt;setRestartHint&lt;/a&gt;(), &lt;a href=&quot;qobject#setProperty&quot;&gt;setProperty&lt;/a&gt;(), &lt;a href=&quot;qsessionmanager#requestPhase2&quot;&gt;requestPhase2&lt;/a&gt;(). See the respective function descriptions for further details.</source>
          <target state="translated">Unix / X11에서 제공되는 정교한 세션 관리자를 위해 QSessionManager는 응용 프로그램의 세션 관리 동작을 미세 조정할 수있는 추가 가능성을 제공합니다. &lt;a href=&quot;qsessionmanager#setRestartCommand&quot;&gt;setRestartCommand&lt;/a&gt; (), &lt;a href=&quot;qsessionmanager#setDiscardCommand&quot;&gt;setDiscardCommand&lt;/a&gt; (), &lt;a href=&quot;qsessionmanager#setRestartHint&quot;&gt;setRestartHint&lt;/a&gt; (), &lt;a href=&quot;qobject#setProperty&quot;&gt;setProperty&lt;/a&gt; (), &lt;a href=&quot;qsessionmanager#requestPhase2&quot;&gt;requestPhase2&lt;/a&gt; (). 자세한 내용은 각 기능 설명을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f207811dc727b33f664d0d35871def5ed8cff827" translate="yes" xml:space="preserve">
          <source>For specialized widgets that do not share a common API with standard Qt widgets, it is worth considering adapting a custom widget for use in</source>
          <target state="translated">표준 Qt 위젯과 공통 API를 공유하지 않는 특수 위젯의 경우 다음에서 사용하기 위해 사용자 정의 위젯을 적용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="87bada2e7bb1bbc3242d712f4bb3bfd7eee356e6" translate="yes" xml:space="preserve">
          <source>For specific QDoc information, consult the &lt;a href=&quot;qdoc-index&quot;&gt;QDoc Manual&lt;/a&gt;.</source>
          <target state="translated">특정 QDoc 정보는 &lt;a href=&quot;qdoc-index&quot;&gt;QDoc 매뉴얼을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5aefc8f0f84287ff884434af8bb0194a3e1bdc84" translate="yes" xml:space="preserve">
          <source>For specific QDoc information, consult the &lt;a href=&quot;qdoc-index#&quot;&gt;QDoc Manual&lt;/a&gt;.</source>
          <target state="translated">특정 QDoc 정보는 &lt;a href=&quot;qdoc-index#&quot;&gt;QDoc 매뉴얼을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cee91a2994015f2f1a2ee4ea602d4f265186c1ee" translate="yes" xml:space="preserve">
          <source>For specifying a delegate to paint particles. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">파티클을 페인트 할 델리게이트를 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="dcada01be27e609ff9bf3e409bc439d0b1f5b4b9" translate="yes" xml:space="preserve">
          <source>For specifying a direction made of other directions. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">다른 방향으로 만들어진 방향을 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d18a0776ae31dc09b84fd43c43a6e5fed320147a" translate="yes" xml:space="preserve">
          <source>For specifying a direction that varies in angle. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">각도가 다른 방향을 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d5adc638747b67f4dc9a2edfb57eff3eda461e4" translate="yes" xml:space="preserve">
          <source>For specifying a direction that varies in x and y components. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">x 및 y 구성 요소가 다른 방향을 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57f0893bb9b2199c25c349ef3365976574b9054a" translate="yes" xml:space="preserve">
          <source>For specifying a direction towards the target point. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">대상 점을 향한 방향을 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a20d7fa85332a10f8b592615c3acf4e3e195aa5a" translate="yes" xml:space="preserve">
          <source>For specifying a grid view of items provided by a model. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">모델이 제공하는 항목의 격자보기를 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="639b1d93991fd4d92c9b4f13c5a6ea99e47f7409" translate="yes" xml:space="preserve">
          <source>For specifying a list of media to be played</source>
          <target state="translated">재생할 미디어 목록을 지정하려면</target>
        </trans-unit>
        <trans-unit id="f6754581fc17518bcc9ad331bc582b5c1206be5c" translate="yes" xml:space="preserve">
          <source>For specifying a list of media to be played.</source>
          <target state="translated">재생할 미디어 목록을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="f90de790b7ef368514778a26402ba874ca2f37b2" translate="yes" xml:space="preserve">
          <source>For specifying a list of media to be played. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">재생할 미디어 목록을 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d968b1ab172370c64051d7a0725ef7956d01d17a" translate="yes" xml:space="preserve">
          <source>For specifying a read-only model using XPath expressions. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">XPath 표현식을 사용하여 읽기 전용 모델을 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db66047828d04d4cfe427f5ab2a0b8a8e7af35cb" translate="yes" xml:space="preserve">
          <source>For specifying a role to an &lt;a href=&quot;qml-qtquick-xmllistmodel-xmllistmodel&quot;&gt;XmlListModel&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-xmllistmodel-xmllistmodel&quot;&gt;XmlListModel에&lt;/a&gt; 대한 역할을 지정합니다 . &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="811df84d29274d076ea101c86efb8caf61664d5a" translate="yes" xml:space="preserve">
          <source>For specifying a vector space. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">벡터 공간을 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3fa5c842caf9a468c1f1b91cd617c68d78c4a993" translate="yes" xml:space="preserve">
          <source>For specifying advanced transformations on Items. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">항목에 고급 변환을 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3203e79d799e7bb4a55ee8114ed2e17138581e1c" translate="yes" xml:space="preserve">
          <source>For specifying an area for affectors and emitter. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">이펙터 및 이미 터 영역을 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="374c8ea9b832578178b3ef779eedb6d89523a6b3" translate="yes" xml:space="preserve">
          <source>For specifying an area for affectors and emitters. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">이펙터와 이미 터의 영역을 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="693a693a67d5c037ef5c94bb5e105a42faab04fe" translate="yes" xml:space="preserve">
          <source>For specifying drag and drop events for moved Items. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">이동 한 항목에 대해 끌어서 놓기 이벤트를 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc71b060f2b09572327b36fc6180d52a2fb4da15" translate="yes" xml:space="preserve">
          <source>For specifying drag and drop handling in an area. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">영역에서 끌어서 놓기 처리를 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a5fe70129ad03fbc6e64e4c45ec4d0113f1a0edc" translate="yes" xml:space="preserve">
          <source>For specifying how to paint particles. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">파티클 페인트 방법을 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a3173759b14fb0be0076c624de788a52541ae35e" translate="yes" xml:space="preserve">
          <source>For specifying information about a pinch event. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">핀치 이벤트에 대한 정보를 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7de91f8639fc686cc4f1afe20f10abfadc3cd06c" translate="yes" xml:space="preserve">
          <source>For specifying shaders to paint particles. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">파티클을 페인트 할 셰이더를 지정합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="db0f3700bca277b39dea4765ca1c9613e487bbcd" translate="yes" xml:space="preserve">
          <source>For split items themselves, use the attached &lt;a href=&quot;qml-qtquick-controls2-splitview&quot;&gt;SplitView&lt;/a&gt; properties.</source>
          <target state="translated">분할 항목 자체의 경우 연결된 &lt;a href=&quot;qml-qtquick-controls2-splitview&quot;&gt;SplitView&lt;/a&gt; 속성을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9766712c5369af313d444892fd856babd5bf0771" translate="yes" xml:space="preserve">
          <source>For stand-alone test applications, the convenience macro &lt;a href=&quot;qtest#QTEST_MAIN&quot;&gt;QTEST_MAIN&lt;/a&gt;() can be used to declare a main() function that parses the command line arguments and executes the tests, avoiding the need to call this function explicitly.</source>
          <target state="translated">독립형 테스트 애플리케이션의 경우 편의 매크로 &lt;a href=&quot;qtest#QTEST_MAIN&quot;&gt;QTEST_MAIN&lt;/a&gt; ()을 사용하여 명령 행 인수를 구문 분석하고 테스트를 실행하는 main () 함수를 선언하여이 함수를 명시 적으로 호출 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="4c7f2a8e50128fb80292887dc05133a51bf2691c" translate="yes" xml:space="preserve">
          <source>For stand-alone test applications, this function should not be called more than once, as command-line options for logging test output to files and executing individual test functions will not behave correctly.</source>
          <target state="translated">독립형 테스트 응용 프로그램의 경우 테스트 출력을 파일에 기록하고 개별 테스트 기능을 실행하기위한 명령 줄 옵션이 올바르게 작동하지 않으므로이 기능을 두 번 이상 호출하면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="c26e2aadc6170ebe6336ec1dbf22cc59e496324d" translate="yes" xml:space="preserve">
          <source>For standard shortcuts, a &lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;standard key&lt;/a&gt; can be used to request the platform-specific key sequence associated with each shortcut.</source>
          <target state="translated">표준 단축키의 경우 &lt;a href=&quot;qkeysequence#StandardKey-enum&quot;&gt;표준 키&lt;/a&gt; 를 사용하여 각 단축키와 관련된 플랫폼 별 키 시퀀스를 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1055bc27f49982abd08e6cabc719435ad6f872f4" translate="yes" xml:space="preserve">
          <source>For styling complex widgets, it is necessary to access subcontrols of the widget, such as the drop-down button of a &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; or the up and down arrows of a &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;. Selectors may contain</source>
          <target state="translated">복잡한 위젯을 스타일링하려면 &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; 의 드롭 다운 버튼 또는 &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt; 의 위쪽 및 아래쪽 화살표와 같은 위젯의 하위 컨트롤에 액세스 해야합니다 . 선택기에는</target>
        </trans-unit>
        <trans-unit id="9a79ee830b4807ee7c1db3530c4f6b8b907241c5" translate="yes" xml:space="preserve">
          <source>For subclasses of &lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout&lt;/a&gt;, this is the central function where a large portion of the work to lay out and position document contents is done.</source>
          <target state="translated">&lt;a href=&quot;qabstracttextdocumentlayout&quot;&gt;QAbstractTextDocumentLayout의&lt;/a&gt; 서브 클래스의 경우 , 이는 문서 내용을 배치하고 배치하는 작업의 많은 부분이 수행되는 중심 함수입니다.</target>
        </trans-unit>
        <trans-unit id="483f1058e2fa562a22bba3ce8ad817d0f64b84d3" translate="yes" xml:space="preserve">
          <source>For subclasses, you might also need the &lt;a href=&quot;qtabbar#tabRect&quot;&gt;tabRect&lt;/a&gt;() functions which returns the visual geometry of a single tab.</source>
          <target state="translated">서브 클래스 의 경우 단일 탭의 시각적 지오메트리를 반환하는 &lt;a href=&quot;qtabbar#tabRect&quot;&gt;tabRect&lt;/a&gt; () 함수 가 필요할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4891950ea85f07f0c45fceba88757d42dbb2b76a" translate="yes" xml:space="preserve">
          <source>For sublayouts the default margins are 0.</source>
          <target state="translated">서브 레이아웃의 경우 기본 여백은 0입니다.</target>
        </trans-unit>
        <trans-unit id="881787c602921f1bc1c82b0ecca5cc7ebb1cc0a6" translate="yes" xml:space="preserve">
          <source>For such an object, the &lt;a href=&quot;qsqlrelation#tableName&quot;&gt;tableName&lt;/a&gt;(), &lt;a href=&quot;qsqlrelation#indexColumn&quot;&gt;indexColumn&lt;/a&gt;(), and &lt;a href=&quot;qsqlrelation#displayColumn&quot;&gt;displayColumn&lt;/a&gt;() functions return an empty string.</source>
          <target state="translated">이러한 객체의 경우 &lt;a href=&quot;qsqlrelation#tableName&quot;&gt;tableName&lt;/a&gt; (), &lt;a href=&quot;qsqlrelation#indexColumn&quot;&gt;indexColumn&lt;/a&gt; () 및 &lt;a href=&quot;qsqlrelation#displayColumn&quot;&gt;displayColumn&lt;/a&gt; () 함수는 빈 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="743472f0e197a193935b85922f50898c76f9e0df" translate="yes" xml:space="preserve">
          <source>For such cases, instead of creating a semi-transparent layer in your image editing tool, create a layer with no transparency at all, setting the RGB value for every pixel you care about. Then, save the alpha information in a fourth channel.</source>
          <target state="translated">이러한 경우 이미지 편집 도구에서 반투명 레이어를 만드는 대신 투명도가 전혀없는 레이어를 만들고 관심있는 모든 픽셀에 대해 RGB 값을 설정합니다. 그런 다음 네 번째 채널에 알파 정보를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="87c994057bdc339a5c192648a73271c1b8aa138e" translate="yes" xml:space="preserve">
          <source>For systems integrators and distributors, information related to making Qt Location available for a new platform.</source>
          <target state="translated">시스템 통합 업체 및 유통 업체의 경우 새로운 플랫폼에서 Qt Location을 사용할 수있게하는 것과 관련된 정보입니다.</target>
        </trans-unit>
        <trans-unit id="2e259cd200c4fc56beaa6bccf2d9dfdf240d333f" translate="yes" xml:space="preserve">
          <source>For targets that do not support array layers this function has no effect.</source>
          <target state="translated">배열 레이어를 지원하지 않는 대상의 경우이 기능은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="48ee98fb0954f53377c2a920ca389830f6a6a6f6" translate="yes" xml:space="preserve">
          <source>For targets that do not support multisampling this function has no effect.</source>
          <target state="translated">멀티 샘플링을 지원하지 않는 대상의 경우이 기능이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0427739f63110d77067f1484310a31d6fe2dc755" translate="yes" xml:space="preserve">
          <source>For technical details about this approach, check out &lt;a href=&quot;https://wiki.qt.io/Qt_for_Embedded_Linux/XDC2014RitgerEGLNonMesa&quot;&gt;this presentation&lt;/a&gt;.</source>
          <target state="translated">이 방법에 대한 기술적 세부 사항은 &lt;a href=&quot;https://wiki.qt.io/Qt_for_Embedded_Linux/XDC2014RitgerEGLNonMesa&quot;&gt;이 프리젠 테이션을&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="69324059ef5a45459baaa9b092751edc28d20c24" translate="yes" xml:space="preserve">
          <source>For technical reasons, it is more efficient to use &lt;a href=&quot;qbitarray#testBit&quot;&gt;testBit&lt;/a&gt;() and &lt;a href=&quot;qbitarray#setBit&quot;&gt;setBit&lt;/a&gt;() to access bits in the array than operator[](). For example:</source>
          <target state="translated">기술적 인 이유로, operator [] ()보다 &lt;a href=&quot;qbitarray#testBit&quot;&gt;testBit&lt;/a&gt; () 및 &lt;a href=&quot;qbitarray#setBit&quot;&gt;setBit&lt;/a&gt; ()를 사용하여 배열의 비트에 액세스 하는 것이 더 효율적 입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aa8666334db8afda73aa4d8f50e50e0799a3e2ab" translate="yes" xml:space="preserve">
          <source>For technical reasons, the model count must be equal to or greater than &lt;a href=&quot;qml-qtquick-controls-styles-tumblerstyle#visibleItemCount-prop&quot;&gt;visibleItemCount&lt;/a&gt; plus one. The &lt;a href=&quot;qml-qtquick-controls-styles-tumblerstyle#visibleItemCount-prop&quot;&gt;visibleItemCount&lt;/a&gt; must also be an odd number.</source>
          <target state="translated">기술적 인 이유로 모델 수는 &lt;a href=&quot;qml-qtquick-controls-styles-tumblerstyle#visibleItemCount-prop&quot;&gt;visibleItemCount&lt;/a&gt; 에 1을 더한 값보다 크 거나 같아야합니다 . &lt;a href=&quot;qml-qtquick-controls-styles-tumblerstyle#visibleItemCount-prop&quot;&gt;visibleItemCount는&lt;/a&gt; 또한 홀수해야합니다.</target>
        </trans-unit>
        <trans-unit id="5d0d7d267d166e1f904a0cbf7f1a96478f142e38" translate="yes" xml:space="preserve">
          <source>For testcase projects, qmake will insert a &lt;code&gt;check&lt;/code&gt; target into the generated Makefile. This target will run the application. The test is considered to pass if it terminates with an exit code equal to zero.</source>
          <target state="translated">테스트 케이스 프로젝트의 경우 qmake는 &lt;code&gt;check&lt;/code&gt; 대상을 생성 된 Makefile에 삽입합니다 . 이 대상은 응용 프로그램을 실행합니다. 테스트는 종료 코드가 0 인 것으로 종료되면 통과 한 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="181fd81f9e8b403e20ebb4adf77b2b99f8f50310" translate="yes" xml:space="preserve">
          <source>For text nodes, the string value equals the text node.</source>
          <target state="translated">텍스트 노드의 경우 문자열 값은 텍스트 노드와 같습니다.</target>
        </trans-unit>
        <trans-unit id="bbc9787c8ad3e0ea235d720d0b9153dc3e73cd0f" translate="yes" xml:space="preserve">
          <source>For text that supports selections or is more than one line. Simple labels do not need to implement this interface.</source>
          <target state="translated">선택을 지원하거나 두 줄 이상인 텍스트 간단한 레이블은이 인터페이스를 구현할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="6339a2ae34f0095a75a2747e482232633811bcfc" translate="yes" xml:space="preserve">
          <source>For text-entry widgets, potential solutions include disabling the cursor blinking behavior (if the API provides that feature), waiting for the cursor to be in a known state before capturing a bitmap (for example, by subscribing to an appropriate signal if the API provides one), or excluding the area containing the cursor from the bitmap comparison.</source>
          <target state="translated">텍스트 입력 위젯의 경우 잠재적 인 솔루션에는 커서 깜박임 동작 비활성화 (API가 해당 기능을 제공하는 경우), 비트 맵을 캡처하기 전에 커서가 알려진 상태가 될 때까지 기다리는 것 (예 : API가 적절한 신호를 구독하는 방식)이 포함됩니다. 하나 제공) 또는 비트 맵 비교에서 커서가 포함 된 영역을 제외합니다.</target>
        </trans-unit>
        <trans-unit id="ffa28b914fa8bd5202f8e41b6a547620267d21d9" translate="yes" xml:space="preserve">
          <source>For texture targets that do not support array layers this will return 1.</source>
          <target state="translated">배열 레이어를 지원하지 않는 텍스처 대상의 경우 1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8895aae90d4db28b675a9898fe9546566974fd91" translate="yes" xml:space="preserve">
          <source>For texture targets that do not support multisampling this will return 0.</source>
          <target state="translated">멀티 샘플링을 지원하지 않는 텍스처 대상의 경우 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fb96c245a99332fa62f57a6279c2b687ce41248f" translate="yes" xml:space="preserve">
          <source>For texture targets that do not support multisampling this will return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">멀티 샘플링을 지원하지 않는 텍스처 대상의 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="416a1c3d5849e58f9c13b9787717dbe6568601a9" translate="yes" xml:space="preserve">
          <source>For texture targets that support mipmaps, this function sets the requested number of mipmap</source>
          <target state="translated">밉맵을 지원하는 텍스처 대상의 경우이 함수는 요청 된 밉맵 수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="53327dae67000c0296cd8c8ee066e91a0e2aa7c2" translate="yes" xml:space="preserve">
          <source>For that reason, &lt;a href=&quot;qurlquery&quot;&gt;QUrlQuery&lt;/a&gt; never encodes the space character to &quot;+&quot; and will never decode &quot;+&quot; to a space character. Instead, space characters will be rendered &quot;%20&quot; in encoded form.</source>
          <target state="translated">이러한 이유로, &lt;a href=&quot;qurlquery&quot;&gt;QUrlQuery는&lt;/a&gt; 결코 &quot;+&quot;및 디코딩하지 않습니다 &quot;+&quot;공백 문자로 공백 문자를 인코딩하지 않습니다. 대신 공백 문자는 &quot;% 20&quot;으로 인코딩 된 형태로 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="bfb3d8deb0e4cb6b4361a6db8284962c976cc1ab" translate="yes" xml:space="preserve">
          <source>For that reason, QUrlQuery never encodes the space character to &quot;+&quot; and will never decode &quot;+&quot; to a space character. Instead, space characters will be rendered &quot;%20&quot; in encoded form.</source>
          <target state="translated">따라서 QUrlQuery는 공백 문자를 &quot;+&quot;로 인코딩하지 않으며 &quot;+&quot;를 공백 문자로 디코딩하지 않습니다. 대신 공백 문자는 인코딩 된 형식으로 &quot;% 20&quot;으로 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="30671d116d9598e756d84aa41c1076299fbc02a7" translate="yes" xml:space="preserve">
          <source>For that reason, it is not adviseable to create a copy of &lt;a href=&quot;qrandomgenerator#global&quot;&gt;QRandomGenerator::global&lt;/a&gt;(). If one needs an exclusive deterministic generator, consider instead using &lt;a href=&quot;qrandomgenerator#securelySeeded&quot;&gt;securelySeeded&lt;/a&gt;() to obtain a new object that shares no relationship with the &lt;a href=&quot;qrandomgenerator#global&quot;&gt;QRandomGenerator::global&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator#global&quot;&gt;따라서 QRandomGenerator :: global&lt;/a&gt; () 의 사본을 작성하지 않는 것이 좋습니다 . 하나는, 대신에 사용하는 것을 고려 독점 결정 발전기가 필요한 경우 &lt;a href=&quot;qrandomgenerator#securelySeeded&quot;&gt;securelySeeded을&lt;/a&gt; () 새로운 객체를 얻기 위해 그 공유와 전혀 관계 &lt;a href=&quot;qrandomgenerator#global&quot;&gt;QRandomGenerator : 글로벌&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="ff5ddc5f2da58a3319794f23eae76cb7527d6c45" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; specific post-processing steps to work the server has to meet some requirements:</source>
          <target state="translated">를 들어 &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt의&lt;/a&gt; 특정 후 처리 단계는 서버를 작동하는 것은 몇 가지 요구 사항을 충족해야합니다 :</target>
        </trans-unit>
        <trans-unit id="f74def40d1dc2678e86a0f55bcf46396c0c6f0c5" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; specific post-processing steps to work the server has to meet some requirements:</source>
          <target state="translated">를 들어 &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt의&lt;/a&gt; 특정 후 처리 단계는 서버를 작동하는 것은 몇 가지 요구 사항을 충족해야합니다 :</target>
        </trans-unit>
        <trans-unit id="75fa00e214be8aa042631e943e15492dff76e0fb" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; on the left, we set its &lt;a href=&quot;qml-qtquick-item#clip-prop&quot;&gt;clip&lt;/a&gt; property to &lt;code&gt;true&lt;/code&gt;. For the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; on right, we also set each delegate's &lt;a href=&quot;qml-qtquick-item#clip-prop&quot;&gt;clip&lt;/a&gt; property to &lt;code&gt;true&lt;/code&gt; to illustrate the effects of clipping on batching.</source>
          <target state="translated">왼쪽 의 &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; 의 경우 &lt;a href=&quot;qml-qtquick-item#clip-prop&quot;&gt;clip&lt;/a&gt; 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정했습니다 . 오른쪽 의 &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; 의 &lt;code&gt;true&lt;/code&gt; 일괄 처리에서 클리핑 효과를 설명 하기 위해 각 대리자의 &lt;a href=&quot;qml-qtquick-item#clip-prop&quot;&gt;clip&lt;/a&gt; 속성을 true 로 설정했습니다 .</target>
        </trans-unit>
        <trans-unit id="b9ab28dcda5e63174529141067f813ecb0fdcc47" translate="yes" xml:space="preserve">
          <source>For the &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-column&quot;&gt;Column&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-grid&quot;&gt;Grid&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-flow&quot;&gt;Flow&lt;/a&gt; positioner types, which operate with collections of child items rather than data models, the following properties are used instead:</source>
          <target state="translated">데이터 모델이 아닌 하위 항목의 콜렉션과 함께 작동 하는 &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-column&quot;&gt;Column&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-grid&quot;&gt;Grid&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-flow&quot;&gt;Flow&lt;/a&gt; 포지셔너 유형의 경우 다음 특성이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="749270035a793a12a68f004b0620715b52e68b51" translate="yes" xml:space="preserve">
          <source>For the Oracle 9 ODBC driver (Windows), it is necessary to check &quot;SQL_WCHAR support&quot; in the ODBC driver manager otherwise Oracle will convert all Unicode strings to local 8-bit.</source>
          <target state="translated">Oracle 9 ODBC 드라이버 (Windows)의 경우, ODBC 드라이버 관리자에서 &quot;SQL_WCHAR 지원&quot;을 확인해야합니다. 그렇지 않으면 Oracle은 모든 유니 코드 문자열을 로컬 8 비트로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="41448f0a514ee7b73df69bf2ffa1a2b2578349a8" translate="yes" xml:space="preserve">
          <source>For the QML engine to know that the &lt;code&gt;Bar&lt;/code&gt; type has a &lt;code&gt;baz&lt;/code&gt; property, we have to make &lt;code&gt;Bar&lt;/code&gt; known:</source>
          <target state="translated">QML 엔진이 &lt;code&gt;Bar&lt;/code&gt; 유형에 &lt;code&gt;baz&lt;/code&gt; 특성 이 있음을 알기 위해서는 &lt;code&gt;Bar&lt;/code&gt; 를 알려야합니다.</target>
        </trans-unit>
        <trans-unit id="f15410c02d2ebc476338dd155f0376cf90f4f149" translate="yes" xml:space="preserve">
          <source>For the QOCI (Oracle) driver, the database name is the TNS Service Name.</source>
          <target state="translated">QOCI (Oracle) 드라이버의 경우 데이터베이스 이름은 TNS 서비스 이름입니다.</target>
        </trans-unit>
        <trans-unit id="993b2e19719afc5651d9c290925932afc3db9b99" translate="yes" xml:space="preserve">
          <source>For the QODBC driver, the</source>
          <target state="translated">QODBC 드라이버의 경우</target>
        </trans-unit>
        <trans-unit id="4e4f0ede3e86182357e983b9af6055ce78fbed94" translate="yes" xml:space="preserve">
          <source>For the QSQLITE driver, if the database name specified does not exist, then it will create the file for you unless the QSQLITE_OPEN_READONLY option is set.</source>
          <target state="translated">QSQLITE 드라이버의 경우 지정된 데이터베이스 이름이 존재하지 않으면 QSQLITE_OPEN_READONLY 옵션이 설정되지 않은 경우 파일이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="2f4b0c7e0ffda439720a305bb2db477e2781251c" translate="yes" xml:space="preserve">
          <source>For the above snippet, QDoc renders the word</source>
          <target state="translated">위 스 니펫의 경우 QDoc은 단어를 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="56baff0163742f40b76734d4a9a4f05f418fdb3c" translate="yes" xml:space="preserve">
          <source>For the basic classes in Qt, a class's module is determined by its location, namely its directory. However, for extensions like &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; and Qt Designer, a class must be related to a module explicitly.</source>
          <target state="translated">Qt의 기본 클래스의 경우 클래스 모듈은 위치, 즉 디렉토리에 따라 결정됩니다. 그러나 &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; 및 Qt Designer와 같은 확장의 경우 클래스는 모듈과 명시 적으로 관련되어야합니다.</target>
        </trans-unit>
        <trans-unit id="3f65a2fce853648944e44c4a2a1c960bdc65a896" translate="yes" xml:space="preserve">
          <source>For the buttons, &lt;a href=&quot;qstyleoptionbutton&quot;&gt;QStyleOptionButton&lt;/a&gt; is used (see &lt;a href=&quot;#tool-buttons&quot;&gt;Tool Buttons&lt;/a&gt; for content description). The dock widget resize handle has a plain &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt;.</source>
          <target state="translated">버튼에는 &lt;a href=&quot;qstyleoptionbutton&quot;&gt;QStyleOptionButton&lt;/a&gt; 이 사용됩니다 ( 컨텐츠 설명 은 &lt;a href=&quot;#tool-buttons&quot;&gt;툴 버튼&lt;/a&gt; 참조 ). 도크 위젯 크기 조정 핸들에는 일반 &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption이&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="7ac50a1a0a1a3879c7153a89111ae47681a20a66" translate="yes" xml:space="preserve">
          <source>For the buttons, &lt;a href=&quot;qstyleoptionbutton&quot;&gt;QStyleOptionButton&lt;/a&gt; is used (see &lt;a href=&quot;style-reference#tool-buttons&quot;&gt;Tool Buttons&lt;/a&gt; for content description). The dock widget resize handle has a plain &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt;.</source>
          <target state="translated">버튼의 경우 &lt;a href=&quot;qstyleoptionbutton&quot;&gt;QStyleOptionButton&lt;/a&gt; 이 사용됩니다 ( 콘텐츠 설명 은 &lt;a href=&quot;style-reference#tool-buttons&quot;&gt;도구 버튼&lt;/a&gt; 참조 ). 독 위젯 크기 조정 핸들에는 일반 &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption이&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="06eff76d7fecf9ab9a1d11c3a00d8fe63eac6395" translate="yes" xml:space="preserve">
          <source>For the color that is set when the dialog is accepted, use the &lt;a href=&quot;qml-qtquick-dialogs-colordialog#color-prop&quot;&gt;color&lt;/a&gt; property.</source>
          <target state="translated">대화 상자가 승인 될 때 ​​설정되는 &lt;a href=&quot;qml-qtquick-dialogs-colordialog#color-prop&quot;&gt;색상에&lt;/a&gt; 대해 색상 속성을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="37c86062998c04c2a2d73cfe18d2e006dec45406" translate="yes" xml:space="preserve">
          <source>For the common case of a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; property change, &lt;a href=&quot;qt3dcore-qnode&quot;&gt;QNode&lt;/a&gt; handles this for you automatically by sending a &lt;a href=&quot;qt3dcore-qpropertyupdatedchange&quot;&gt;QPropertyUpdatedChange&lt;/a&gt; event to the backend nodes. You only need to call this function if you wish to send a specific type of change in place of the automatic handling.</source>
          <target state="translated">&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 특성 변경 의 일반적인 경우 , &lt;a href=&quot;qt3dcore-qnode&quot;&gt;QNode&lt;/a&gt; 는 &lt;a href=&quot;qt3dcore-qpropertyupdatedchange&quot;&gt;QPropertyUpdatedChange&lt;/a&gt; 이벤트를 백엔드 노드 로 전송하여 이를 자동으로 처리합니다 . 자동 처리 대신 특정 유형의 변경을 보내려는 경우에만이 기능을 호출하면됩니다.</target>
        </trans-unit>
        <trans-unit id="81682ad318eaa4e85928c2c8043fc248d41f8456" translate="yes" xml:space="preserve">
          <source>For the common case, the default index method &lt;a href=&quot;qgraphicsscene#ItemIndexMethod-enum&quot;&gt;BspTreeIndex&lt;/a&gt; works fine. If your scene uses many animations and you are experiencing slowness, you can disable indexing by calling &lt;code&gt;setItemIndexMethod(NoIndex)&lt;/code&gt;.</source>
          <target state="translated">일반적인 경우 기본 인덱스 방법 &lt;a href=&quot;qgraphicsscene#ItemIndexMethod-enum&quot;&gt;BspTreeIndex가 제대로&lt;/a&gt; 작동합니다. 장면에서 많은 애니메이션을 사용하고 속도가 느려 &lt;code&gt;setItemIndexMethod(NoIndex)&lt;/code&gt; 호출하여 인덱싱을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fe6d83c4ead6af8967b20e6957072d299f55061e" translate="yes" xml:space="preserve">
          <source>For the complete example, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-webengine-quicknanobrowser-example.html#&quot;&gt;WebEngine Quick Nano Browser&lt;/a&gt;.</source>
          <target state="translated">완전한 예제는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-webengine-quicknanobrowser-example.html#&quot;&gt;WebEngine Quick Nano Browser를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="226f4d3495d00158ee98166ac6435f7a2b99e3d4" translate="yes" xml:space="preserve">
          <source>For the complete example, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-webengine-quicknanobrowser-example.html&quot;&gt;WebEngine Quick Nano Browser&lt;/a&gt;.</source>
          <target state="translated">전체 예제는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-webengine-quicknanobrowser-example.html&quot;&gt;WebEngine Quick Nano Browser를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="44a79b9a01770180f74ce06ba40e327ace8e106b" translate="yes" xml:space="preserve">
          <source>For the complete list, see &lt;a href=&quot;qcborvalue#Type-enum&quot;&gt;QCborValue::Type&lt;/a&gt;. The type of a &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; can be queried using &lt;a href=&quot;qcborvalue#type&quot;&gt;type&lt;/a&gt;() or one of the &quot;isXxxx&quot; functions.</source>
          <target state="translated">전체 목록은 &lt;a href=&quot;qcborvalue#Type-enum&quot;&gt;QCborValue :: Type을&lt;/a&gt; 참조하십시오 . &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; 의 유형은 &lt;a href=&quot;qcborvalue#type&quot;&gt;유형&lt;/a&gt; () 또는 &quot;isXxxx&quot;함수 중 하나를 사용하여 쿼리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="b39a076b116379486c2f4b6e85e0db226fd4209b" translate="yes" xml:space="preserve">
          <source>For the complete list, see &lt;a href=&quot;qcborvalue#Type-enum&quot;&gt;QCborValue::Type&lt;/a&gt;. The type of a QCborValue can be queried using &lt;a href=&quot;qcborvalue#type&quot;&gt;type&lt;/a&gt;() or one of the &quot;isXxxx&quot; functions.</source>
          <target state="translated">전체 목록은 &lt;a href=&quot;qcborvalue#Type-enum&quot;&gt;QCborValue :: Type을&lt;/a&gt; 참조하십시오 . QCborValue의 유형은 &lt;a href=&quot;qcborvalue#type&quot;&gt;유형&lt;/a&gt; () 또는 &quot;isXxxx&quot;함수 중 하나를 사용하여 쿼리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="a29e8102d76f9b48d46c04c9554c3f4e030b4651" translate="yes" xml:space="preserve">
          <source>For the convenience of generating encoded URL strings or query strings, there are two static functions called &lt;a href=&quot;qurl#fromPercentEncoding&quot;&gt;fromPercentEncoding&lt;/a&gt;() and &lt;a href=&quot;qurl#toPercentEncoding&quot;&gt;toPercentEncoding&lt;/a&gt;() which deal with percent encoding and decoding of &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; objects.</source>
          <target state="translated">인코딩 된 URL 문자열 또는 쿼리 문자열을 편리하게 생성 할 수 있도록 &lt;a href=&quot;qurl#fromPercentEncoding&quot;&gt;fromPercentEncoding&lt;/a&gt; () 및 &lt;a href=&quot;qurl#toPercentEncoding&quot;&gt;toPercentEncoding&lt;/a&gt; () 이라는 두 가지 정적 함수가 있으며 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 객체 의 백분율 인코딩 및 디코딩을 처리 합니다.</target>
        </trans-unit>
        <trans-unit id="f1708cceb115f8159917283c387e61d9683168b6" translate="yes" xml:space="preserve">
          <source>For the desktop, VAOs are supported as a core feature in OpenGL 3.0 or newer and by the GL_ARB_vertex_array_object for older versions. On OpenGL ES 2, VAOs are provided by the optional GL_OES_vertex_array_object extension. You can check the version of OpenGL with QOpenGLContext::surfaceFormat() and check for the presence of extensions with &lt;a href=&quot;qopenglcontext#hasExtension&quot;&gt;QOpenGLContext::hasExtension&lt;/a&gt;().</source>
          <target state="translated">데스크톱의 경우 VAO는 OpenGL 3.0 이상에서 핵심 기능으로, 그리고 이전 버전의 경우 GL_ARB_vertex_array_object에서 지원됩니다. OpenGL ES 2에서 VAO는 선택적인 GL_OES_vertex_array_object 확장에 의해 제공됩니다. 당신이 확장의 존재에 대한 QOpenGLContext와의 OpenGL 버전 : surfaceFormat () 체크를 확인하실 수 있습니다 &lt;a href=&quot;qopenglcontext#hasExtension&quot;&gt;QOpenGLContext :: hasExtension을&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="f283afdba0d5a7e0d134e99ba28af49661a68612" translate="yes" xml:space="preserve">
          <source>For the element named</source>
          <target state="translated">이름이 지정된 요소의 경우</target>
        </trans-unit>
        <trans-unit id="408c9dee0725bf2ef66c78bcb8fce1d3e2fa836c" translate="yes" xml:space="preserve">
          <source>For the following example, we assume a model &lt;code&gt;myModel&lt;/code&gt; that has two columns: the first one contains the names of people in a group, and the second column contains their ages. The first column is mapped to the &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;&lt;code&gt;nameLineEdit&lt;/code&gt;, and the second is mapped to the &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;&lt;code&gt;ageSpinBox&lt;/code&gt;:</source>
          <target state="translated">다음 예에서는 두 개의 열이있는 &lt;code&gt;myModel&lt;/code&gt; 모델을 가정합니다 . 첫 번째 열에는 그룹의 사람 이름이 포함되고 두 번째 열에는 연령이 포함됩니다. 첫 번째 열은 &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit &lt;/a&gt; &lt;code&gt;nameLineEdit&lt;/code&gt; 에 매핑되고 두 번째 열은 &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox &lt;/a&gt; &lt;code&gt;ageSpinBox&lt;/code&gt; 에 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="bc4774760b16d36ddfbe863881ffec472ea6b774" translate="yes" xml:space="preserve">
          <source>For the full list of available font properties, see the &lt;a href=&quot;qml-font&quot;&gt;font QML Basic Type&lt;/a&gt; documentation.</source>
          <target state="translated">사용 가능한 글꼴 속성의 전체 목록은 &lt;a href=&quot;qml-font&quot;&gt;글꼴 QML 기본 유형&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8597151829f7be49db485647601159a8f577287e" translate="yes" xml:space="preserve">
          <source>For the full list of available palette colors, see the &lt;a href=&quot;qml-palette#qtquickcontrols2-palette&quot;&gt;palette QML Basic Type&lt;/a&gt; documentation.</source>
          <target state="translated">사용 가능한 팔레트 색상의 전체 목록은 &lt;a href=&quot;qml-palette#qtquickcontrols2-palette&quot;&gt;팔레트 QML 기본 유형&lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4ea8ba3e283e0019b9f8c31449ac2fa0f5fd45ad" translate="yes" xml:space="preserve">
          <source>For the full list of devations, please refer to the file &lt;code&gt;unsupported_features.txt&lt;/code&gt; in the source code.</source>
          <target state="translated">전체 개발 목록은 소스 코드에서 &lt;code&gt;unsupported_features.txt&lt;/code&gt; 파일을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="aa4df036925b58370860b6b0daa33fdf04e8d7bb" translate="yes" xml:space="preserve">
          <source>For the homogeneously typed multipart geometry objects (&lt;code&gt;MultiPoint&lt;/code&gt;, &lt;code&gt;MultiLineString&lt;/code&gt;, &lt;code&gt;MultiPolygon&lt;/code&gt;) the value corresponding to the &lt;code&gt;data&lt;/code&gt; key is a &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt;. Each element of the list is a &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; of one of the above listed types. The elements in this list will be all of the same GeoJSON type:</source>
          <target state="translated">동종 유형의 멀티 파트 지오메트리 객체 ( &lt;code&gt;MultiPoint&lt;/code&gt; , &lt;code&gt;MultiLineString&lt;/code&gt; , &lt;code&gt;MultiPolygon&lt;/code&gt; )의 경우 &lt;code&gt;data&lt;/code&gt; 키에 해당하는 값 은 &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; 입니다. 목록의 각 요소 는 위에 나열된 유형 중 하나의 &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; 입니다. 이 목록의 요소는 모두 동일한 GeoJSON 유형입니다.</target>
        </trans-unit>
        <trans-unit id="bab86b24212bc819606f600d070cbc235a1ba50a" translate="yes" xml:space="preserve">
          <source>For the icons to be used, the filenames also have to be listed in the Info.plist. The best way is to list all icon files using the &lt;code&gt;CFBundleIconFiles&lt;/code&gt; key. The iPad specific version can be given using the &lt;code&gt;CFBundleIcons~ipad&lt;/code&gt; key, by adding something like the following code snippet to Info.plist:</source>
          <target state="translated">아이콘을 사용하려면 파일 이름도 Info.plist에 나열되어야합니다. 가장 좋은 방법은 &lt;code&gt;CFBundleIconFiles&lt;/code&gt; 키를 사용하여 모든 아이콘 파일을 나열하는 것 입니다. &lt;code&gt;CFBundleIcons~ipad&lt;/code&gt; 키를 사용하여 iPad 전용 버전을 제공 할 수 있습니다 . Info.plist에 다음 코드 스 니펫과 같은 것을 추가하면됩니다.</target>
        </trans-unit>
        <trans-unit id="6986d71d2a1c7e7b0b64d5ac7f80e8368243f026" translate="yes" xml:space="preserve">
          <source>For the last two, the offset at this date and time will be returned, taking account of Daylight-Saving Offset unless the date precedes the start of 1970. The offset is the difference between the local time or time in the given time-zone and UTC time; it is positive in time-zones ahead of UTC (East of The Prime Meridian), negative for those behind UTC (West of The Prime Meridian).</source>
          <target state="translated">마지막 2 개의 경우 날짜가 1970 년의 시작보다 이전 인 경우를 제외하고 일광 절약 오프셋을 고려하여이 날짜 및 시간의 오프셋이 반환됩니다. 오프셋은 지정된 시간대의 현지 시간 또는 시간과 UTC 시간; UTC (Prime Meridian의 동쪽) 앞의 시간대에서는 양수이고 UTC (The Prime Meridian의 서쪽) 뒤에있는 시간대에서는 음수입니다.</target>
        </trans-unit>
        <trans-unit id="6086f5397432247ed6769bb9869425951eb9bac8" translate="yes" xml:space="preserve">
          <source>For the minor tickmarks, we'll only show those which are not higher than &lt;code&gt;80&lt;/code&gt;:</source>
          <target state="translated">작은 눈금 표시의 경우 &lt;code&gt;80&lt;/code&gt; 보다 크지 않은 눈금 만 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="4cafb1d86bdb7dc154718a4275a7a6164e4a6b0c" translate="yes" xml:space="preserve">
          <source>For the moment, &lt;code&gt;moc&lt;/code&gt; will extract and record all tags, but it will not handle any of them specially. You can use the tags to annotate your methods differently, and treat them according to the specific needs of your application.</source>
          <target state="translated">현재 &lt;code&gt;moc&lt;/code&gt; 는 모든 태그를 추출하고 기록하지만 특별히 처리하지는 않습니다. 태그를 사용하여 메소드에 다르게 주석을 달고 애플리케이션의 특정 요구에 따라 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="15768e18613297f3d8aa03cf36b114d70399832a" translate="yes" xml:space="preserve">
          <source>For the most common MIME types, &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; provides convenience functions to access the data:</source>
          <target state="translated">가장 일반적인 MIME 유형의 경우 &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; 는 데이터에 액세스 할 수있는 편리한 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ad94286b335cfc6cf388b3c5bfbb48216e897b6d" translate="yes" xml:space="preserve">
          <source>For the most common MIME types, QMimeData provides convenience functions to access the data:</source>
          <target state="translated">가장 일반적인 MIME 유형의 경우 QMimeData는 데이터에 액세스 할 수있는 편리한 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="79453a62b44595a79bd950002acd1f5acd866fa4" translate="yes" xml:space="preserve">
          <source>For the most common types of data, you can call the higher-level functions &lt;a href=&quot;qmimedata#hasText&quot;&gt;hasText&lt;/a&gt;(), &lt;a href=&quot;qmimedata#hasHtml&quot;&gt;hasHtml&lt;/a&gt;(), &lt;a href=&quot;qmimedata#hasUrls&quot;&gt;hasUrls&lt;/a&gt;(), &lt;a href=&quot;qmimedata#hasImage&quot;&gt;hasImage&lt;/a&gt;(), and &lt;a href=&quot;qmimedata#hasColor&quot;&gt;hasColor&lt;/a&gt;() instead.</source>
          <target state="translated">가장 일반적인 데이터 유형의 경우 상위 수준의 함수 &lt;a href=&quot;qmimedata#hasText&quot;&gt;hasText&lt;/a&gt; (), &lt;a href=&quot;qmimedata#hasHtml&quot;&gt;hasHtml&lt;/a&gt; (), &lt;a href=&quot;qmimedata#hasUrls&quot;&gt;hasUrls&lt;/a&gt; (), &lt;a href=&quot;qmimedata#hasImage&quot;&gt;hasImage&lt;/a&gt; () 및 &lt;a href=&quot;qmimedata#hasColor&quot;&gt;hasColor&lt;/a&gt; ()를 대신 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="20926f202b31fd3bae17bb359b79166a20a7ce1f" translate="yes" xml:space="preserve">
          <source>For the most common types of data, you can call the higher-level functions &lt;a href=&quot;qmimedata#setText&quot;&gt;setText&lt;/a&gt;(), &lt;a href=&quot;qmimedata#setHtml&quot;&gt;setHtml&lt;/a&gt;(), &lt;a href=&quot;qmimedata#setUrls&quot;&gt;setUrls&lt;/a&gt;(), &lt;a href=&quot;qmimedata#setImageData&quot;&gt;setImageData&lt;/a&gt;(), and &lt;a href=&quot;qmimedata#setColorData&quot;&gt;setColorData&lt;/a&gt;() instead.</source>
          <target state="translated">가장 일반적인 유형의 데이터의 경우 대신 상위 수준의 함수 &lt;a href=&quot;qmimedata#setText&quot;&gt;setText&lt;/a&gt; (), &lt;a href=&quot;qmimedata#setHtml&quot;&gt;setHtml&lt;/a&gt; (), &lt;a href=&quot;qmimedata#setUrls&quot;&gt;setUrls&lt;/a&gt; (), &lt;a href=&quot;qmimedata#setImageData&quot;&gt;setImageData&lt;/a&gt; () 및 &lt;a href=&quot;qmimedata#setColorData&quot;&gt;setColorData&lt;/a&gt; ()를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="df9baf6a70a0479ba102aa42f4af8be93378ebed" translate="yes" xml:space="preserve">
          <source>For the most part, Qt applications will work without problems. For example, in qmake, the Qt mkspecs set &lt;a href=&quot;qmake-variable-reference#qmake-ios-deployment-target&quot;&gt;QMAKE_IOS_DEPLOYMENT_TARGET&lt;/a&gt;, &lt;a href=&quot;qmake-variable-reference#qmake-macosx-deployment-target&quot;&gt;QMAKE_MACOSX_DEPLOYMENT_TARGET&lt;/a&gt;, &lt;a href=&quot;qmake-variable-reference#qmake-tvos-deployment-target&quot;&gt;QMAKE_TVOS_DEPLOYMENT_TARGET&lt;/a&gt;, or &lt;a href=&quot;qmake-variable-reference#qmake-watchos-deployment-target&quot;&gt;QMAKE_WATCHOS_DEPLOYMENT_TARGET&lt;/a&gt; to the minimum version that Qt itself supports. Similarly, in Qbs, the Qt modules set &lt;code&gt;cpp.minimumIosVersion&lt;/code&gt;, &lt;code&gt;cpp.minimumMacosVersion&lt;/code&gt;, &lt;code&gt;cpp.minimumTvosVersion&lt;/code&gt;, or &lt;code&gt;cpp.minimumWatchosVersion&lt;/code&gt; to the minimum version that Qt itself supports.</source>
          <target state="translated">대부분의 경우 Qt 애플리케이션은 문제없이 작동합니다. 예를 들어, qmake에서 Qt mkspecs는 &lt;a href=&quot;qmake-variable-reference#qmake-ios-deployment-target&quot;&gt;QM&lt;/a&gt; 자체가 지원하는 최소 버전으로 QMAKE_IOS_DEPLOYMENT_TARGET , &lt;a href=&quot;qmake-variable-reference#qmake-macosx-deployment-target&quot;&gt;QMAKE_MACOSX_DEPLOYMENT_TARGET&lt;/a&gt; , &lt;a href=&quot;qmake-variable-reference#qmake-tvos-deployment-target&quot;&gt;QMAKE_TVOS_DEPLOYMENT_TARGET&lt;/a&gt; 또는 &lt;a href=&quot;qmake-variable-reference#qmake-watchos-deployment-target&quot;&gt;QMAKE_WATCHOS_DEPLOYMENT_TARGET&lt;/a&gt; 을 설정했습니다. 마찬가지로 Qbs에서 Qt 모듈은 &lt;code&gt;cpp.minimumIosVersion&lt;/code&gt; , &lt;code&gt;cpp.minimumMacosVersion&lt;/code&gt; , &lt;code&gt;cpp.minimumTvosVersion&lt;/code&gt; 또는 &lt;code&gt;cpp.minimumWatchosVersion&lt;/code&gt; 을 Qt 자체가 지원하는 최소 버전으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="759b7e8ab6d16459bce27c240279d6a67d6931e7" translate="yes" xml:space="preserve">
          <source>For the object-based types (including Date and RegExp), use the newT() functions in &lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt; (e.g. &lt;a href=&quot;qjsengine#newObject&quot;&gt;QJSEngine::newObject&lt;/a&gt;()) to create a &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; of the desired type. For the primitive types, use one of the &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; constructor overloads. For other types, e.g. registered gadget types such as &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;, you can use &lt;a href=&quot;qjsengine#toScriptValue&quot;&gt;QJSEngine::toScriptValue&lt;/a&gt;.</source>
          <target state="translated">(날짜 및 정규식 포함) 오브젝트 기반 유형의 경우에 뉴트 () 함수를 사용 &lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt; (예 &lt;a href=&quot;qjsengine#newObject&quot;&gt;QJSEngine :: NewObject를&lt;/a&gt; 크리에이트 ()로) &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue를&lt;/a&gt; 원하는 타입. 기본 유형의 경우 &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; 생성자 과부하 중 하나를 사용하십시오 . &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; 와 같은 등록 된 가젯 유형과 같은 다른 유형의 경우 &lt;a href=&quot;qjsengine#toScriptValue&quot;&gt;QJSEngine :: toScriptValue를&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="aa05121ec8a6274ca92ebf79933e1c85f05411d1" translate="yes" xml:space="preserve">
          <source>For the object-based types (including Date and RegExp), use the newT() functions in &lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt; (e.g. &lt;a href=&quot;qjsengine#newObject&quot;&gt;QJSEngine::newObject&lt;/a&gt;()) to create a QJSValue of the desired type. For the primitive types, use one of the QJSValue constructor overloads. For other types, e.g. registered gadget types such as &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt;, you can use &lt;a href=&quot;qjsengine#toScriptValue&quot;&gt;QJSEngine::toScriptValue&lt;/a&gt;.</source>
          <target state="translated">(날짜 및 정규식 포함) 오브젝트 기반 유형의 경우에 뉴트 () 함수를 사용 &lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt; (예 &lt;a href=&quot;qjsengine#newObject&quot;&gt;QJSEngine :: NewObject를&lt;/a&gt; 원하는 형식의 QJSValue을 만드는 () 참조). 기본 유형의 경우 QJSValue 생성자 오버로드 중 하나를 사용하십시오. &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; 와 같은 등록 된 가젯 유형과 같은 다른 유형의 경우 &lt;a href=&quot;qjsengine#toScriptValue&quot;&gt;QJSEngine :: toScriptValue를&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d338e8c3d07bf54c48e4d79f174c32cc8fe637a5" translate="yes" xml:space="preserve">
          <source>For the one-parameter version, the braces can often be omitted. The \l command supports several ways of linking:</source>
          <target state="translated">한 매개 변수 버전의 경우 중괄호는 종종 생략 할 수 있습니다. \ l 명령은 여러 가지 연결 방법을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="c71ece461ad0489c3f629baf53c9cca8ee1d8ba3" translate="yes" xml:space="preserve">
          <source>For the outermost transaction, discards the restoration point and any internally duplicated data of the stream. Will not affect the current read position of the stream.</source>
          <target state="translated">가장 바깥 쪽 트랜잭션의 경우, 복원 지점과 스트림의 내부 복제 데이터를 버립니다. 스트림의 현재 읽기 위치에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c8b77e454be4f5f064dfc981709cf4a9aa0c3ce5" translate="yes" xml:space="preserve">
          <source>For the outermost transaction, restores the stream data to the point of the &lt;a href=&quot;qdatastream#startTransaction&quot;&gt;startTransaction&lt;/a&gt;() call. If the data stream has read corrupt data or any of the inner transactions was aborted, this function aborts the transaction.</source>
          <target state="translated">가장 바깥 쪽 트랜잭션의 경우 스트림 데이터를 &lt;a href=&quot;qdatastream#startTransaction&quot;&gt;startTransaction&lt;/a&gt; () 호출 지점으로 복원합니다 . 데이터 스트림이 손상된 데이터를 읽거나 내부 트랜잭션이 중단 된 경우이 기능은 트랜잭션을 중단합니다.</target>
        </trans-unit>
        <trans-unit id="138b607cb9527a1946d1035a624f5e10d9d7f608" translate="yes" xml:space="preserve">
          <source>For the progress dialog to work as expected, you should initially set this property to &lt;a href=&quot;qprogressdialog#minimum-prop&quot;&gt;QProgressDialog::minimum&lt;/a&gt;() and finally set it to &lt;a href=&quot;qprogressdialog#maximum-prop&quot;&gt;QProgressDialog::maximum&lt;/a&gt;(); you can call setValue() any number of times in-between.</source>
          <target state="translated">진행률 대화 상자가 예상대로 작동하려면 &lt;a href=&quot;qprogressdialog#minimum-prop&quot;&gt;먼저이&lt;/a&gt; 속성을 QProgressDialog :: minimum ()으로 설정하고 마지막으로 &lt;a href=&quot;qprogressdialog#maximum-prop&quot;&gt;QProgressDialog :: maximum&lt;/a&gt; () 으로 설정해야합니다 . 중간에 여러 번 setValue ()를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="676b0a06436f301145eb64a0270e476948f63eb1" translate="yes" xml:space="preserve">
          <source>For the purposes of this property, the scene as a whole is assumed to act like a focus scope. On a practical level, that means the following QML will give active focus to &lt;code&gt;input&lt;/code&gt; on startup.</source>
          <target state="translated">이 속성의 목적 상 장면 전체가 초점 범위처럼 작동한다고 가정합니다. 실제로는 다음 QML이 시작시 &lt;code&gt;input&lt;/code&gt; 에 적극적으로 초점을 맞출 것 입니다.</target>
        </trans-unit>
        <trans-unit id="e41e1058245b934e5574b1c4d666e93496f225db" translate="yes" xml:space="preserve">
          <source>For the reduce function, function objects are not directly supported. Function objects can, however, be used when the type of the reduction result is explicitly specified:</source>
          <target state="translated">축소 기능의 경우 함수 객체가 직접 지원되지 않습니다. 그러나 축소 결과 유형이 명시 적으로 지정된 경우 함수 객체를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66e792da14f21688d00e0320d8193daf97235430" translate="yes" xml:space="preserve">
          <source>For the sake of consistency, subclasses should describe the specific details of the associated areas in terms of &lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; instances and distances in meters.</source>
          <target state="translated">일관성을 유지하기 위해 서브 클래스는 &lt;a href=&quot;qgeocoordinate&quot;&gt;QGeoCoordinate&lt;/a&gt; 인스턴스 및 거리 (미터)로 관련 영역의 특정 세부 사항을 설명해야합니다 .</target>
        </trans-unit>
        <trans-unit id="79911bc5d3a3e06a7756155561e294752a12875a" translate="yes" xml:space="preserve">
          <source>For the sake of efficiency, there are no functions to access a field by name (unless you use prepared queries with names, as explained below). To convert a field name into an index, use &lt;a href=&quot;qsqlquery#record&quot;&gt;record&lt;/a&gt;().&lt;a href=&quot;qsqlrecord#indexOf&quot;&gt;indexOf()&lt;/a&gt;, for example:</source>
          <target state="translated">효율성을 위해 이름으로 필드에 액세스하는 기능은 없습니다 (아래 설명 된대로 이름이있는 준비된 쿼리를 사용하지 않는 한). 필드 이름을 색인으로 변환하려면 &lt;a href=&quot;qsqlquery#record&quot;&gt;record&lt;/a&gt; ()를 사용하십시오. &lt;a href=&quot;qsqlrecord#indexOf&quot;&gt;indexOf ()&lt;/a&gt; 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7cdd87ff530b372a0c8dca890bce42f3ce23a13c" translate="yes" xml:space="preserve">
          <source>For the same reason, new types introduced in later versions should be tagged with the &lt;a href=&quot;qqmlengine#QML_ADDED_IN_MINOR_VERSION&quot;&gt;QML_ADDED_IN_MINOR_VERSION&lt;/a&gt; macro.</source>
          <target state="translated">같은 이유로 이후 버전에 도입 된 새로운 유형은 &lt;a href=&quot;qqmlengine#QML_ADDED_IN_MINOR_VERSION&quot;&gt;QML_ADDED_IN_MINOR_VERSION&lt;/a&gt; 매크로 로 태그를 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0815407580e63d80f921e19c2e6ae41b2b62ebeb" translate="yes" xml:space="preserve">
          <source>For the same reason, new types introduced in later versions should use the minor version argument of &lt;a href=&quot;qqmlengine#qmlRegisterType&quot;&gt;qmlRegisterType&lt;/a&gt;.</source>
          <target state="translated">같은 이유로, 이후 버전에서 도입 된 새로운 유형은 부 버전 인수 &lt;a href=&quot;qqmlengine#qmlRegisterType&quot;&gt;qmlRegisterType&lt;/a&gt; 을 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="d67ec672cf6785502a178f16815e2e6dab42f2c3" translate="yes" xml:space="preserve">
          <source>For the service to be usable in an Android app, you must declare it in the &lt;code&gt;AndroidManifest.xml&lt;/code&gt; file. Let's start with adding the service section:</source>
          <target state="translated">Android 앱에서 서비스를 사용할 수 있으려면 &lt;code&gt;AndroidManifest.xml&lt;/code&gt; 파일 에서 선언해야 합니다. 서비스 섹션 추가부터 시작하겠습니다.</target>
        </trans-unit>
        <trans-unit id="c81aa62afceffb36c9db3a6115506cb824c8ddbe" translate="yes" xml:space="preserve">
          <source>For the single type geometry objects (&lt;code&gt;Point&lt;/code&gt;, &lt;code&gt;LineString&lt;/code&gt;, and &lt;code&gt;Polygon&lt;/code&gt;), the value corresponding to the &lt;code&gt;data&lt;/code&gt; key is a &lt;a href=&quot;qgeoshape&quot;&gt;QGeoShape&lt;/a&gt;:</source>
          <target state="translated">단일 유형 도형 객체 ( &lt;code&gt;Point&lt;/code&gt; , &lt;code&gt;LineString&lt;/code&gt; , &lt;code&gt;Polygon&lt;/code&gt; )의 경우 &lt;code&gt;data&lt;/code&gt; 키에 해당하는 값 은 &lt;a href=&quot;qgeoshape&quot;&gt;QGeoShape입니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="55720944c6ab196cf0c5957ee512fed2c2924aee" translate="yes" xml:space="preserve">
          <source>For the size in surface coordinates, use &lt;a href=&quot;qml-qtwayland-compositor-waylandsurface#destinationSize-prop&quot;&gt;destinationSize&lt;/a&gt; instead.</source>
          <target state="translated">표면 좌표의 크기에는 &lt;a href=&quot;qml-qtwayland-compositor-waylandsurface#destinationSize-prop&quot;&gt;destinationSize를&lt;/a&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="541658563e26e3ce9e494869deb7d1b561c8a78d" translate="yes" xml:space="preserve">
          <source>For the size in surface coordinates, use &lt;a href=&quot;qwaylandsurface#destinationSize-prop&quot;&gt;destinationSize&lt;/a&gt; instead.</source>
          <target state="translated">표면 좌표의 크기에는 &lt;a href=&quot;qwaylandsurface#destinationSize-prop&quot;&gt;destinationSize를&lt;/a&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="79578008e7be6e989ac935beaca34ba78a0ecbe9" translate="yes" xml:space="preserve">
          <source>For the standard Qt source build, the .qhp file is generated and placed in the same directory as the HTML pages.</source>
          <target state="translated">표준 Qt 소스 빌드의 경우 .qhp 파일이 생성되어 HTML 페이지와 동일한 디렉토리에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="d6ae8b2f532777816279fc67d339c30f730e52ed" translate="yes" xml:space="preserve">
          <source>For the use case of protecting a resource over a long time, you should therefore call &lt;a href=&quot;qlockfile#setStaleLockTime&quot;&gt;setStaleLockTime&lt;/a&gt;(0), and when &lt;a href=&quot;qlockfile#tryLock&quot;&gt;tryLock&lt;/a&gt;() returns &lt;a href=&quot;qlockfile#LockError-enum&quot;&gt;LockFailedError&lt;/a&gt;, inform the user that the document is locked, possibly using &lt;a href=&quot;qlockfile#getLockInfo&quot;&gt;getLockInfo&lt;/a&gt;() for more details.</source>
          <target state="translated">오랜 시간 동안 자원을 보호하는 유스 케이스의 경우, &lt;a href=&quot;qlockfile#setStaleLockTime&quot;&gt;setStaleLockTime&lt;/a&gt; (0)을 호출해야하며 &lt;a href=&quot;qlockfile#tryLock&quot;&gt;tryLock&lt;/a&gt; ()이 &lt;a href=&quot;qlockfile#LockError-enum&quot;&gt;LockFailedError를&lt;/a&gt; 리턴 하면 , 자세한 내용은 &lt;a href=&quot;qlockfile#getLockInfo&quot;&gt;getLockInfo&lt;/a&gt; ()를 사용하여 문서가 잠겨 있음을 사용자에게 알리십시오 .</target>
        </trans-unit>
        <trans-unit id="43b5d2418c725737443601f81fee82ff8e80eb38" translate="yes" xml:space="preserve">
          <source>For the web engine view to be rendered, the web engine must be initialized by using &lt;a href=&quot;qtwebengine#initialize&quot;&gt;QtWebEngine::initialize&lt;/a&gt; in the application main source file, as illustrated by the following code snippet:</source>
          <target state="translated">웹 엔진보기를 렌더링 하려면 다음 코드 스 니펫에 표시된대로 애플리케이션 기본 소스 파일에서 &lt;a href=&quot;qtwebengine#initialize&quot;&gt;QtWebEngine :: initialize&lt;/a&gt; 를 사용하여 웹 엔진을 초기화해야합니다 .</target>
        </trans-unit>
        <trans-unit id="12bfa34e9f694693e02de98335bc2e163199e6c9" translate="yes" xml:space="preserve">
          <source>For these reasons, Qt Objects should be treated as identities, not as values. Identities are cloned, not copied or assigned, and cloning an identity is a more complex operation than copying or assigning a value. Therefore, &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and all subclasses of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; (direct or indirect) have their &lt;a href=&quot;qobject#no-copy-constructor&quot;&gt;copy constructor and assignment operator&lt;/a&gt; disabled.</source>
          <target state="translated">이러한 이유로 Qt 개체는 값이 아닌 ID로 처리해야합니다. ID는 복제, 복사 또는 할당되지 않으며 ID 복제는 값을 복사하거나 할당하는 것보다 더 복잡한 작업입니다. 따라서, &lt;a href=&quot;qobject&quot;&gt;QObject를&lt;/a&gt; 하고 모든 서브 클래스 &lt;a href=&quot;qobject&quot;&gt;QObject를&lt;/a&gt; (직접 또는 간접)는 자신이 &lt;a href=&quot;qobject#no-copy-constructor&quot;&gt;복사 생성자와 대입 연산자는&lt;/a&gt; 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="3661a61f7f928bb3745e7d73d8a12211dd037daa" translate="yes" xml:space="preserve">
          <source>For this approach, we'll copy the background code from the default style's &lt;code&gt;Button.qml&lt;/code&gt;. This file can be found in the following path in your Qt installation:</source>
          <target state="translated">이 방법을 위해 기본 스타일의 &lt;code&gt;Button.qml&lt;/code&gt; 에서 배경 코드를 복사합니다 . 이 파일은 Qt 설치의 다음 경로에 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e884e9a470e85e06b661b5dfe331234108c5714" translate="yes" xml:space="preserve">
          <source>For this effect to work well, you need to adjust the &lt;a href=&quot;qml-qtquick3d-perspectivecamera#clipFar-prop&quot;&gt;clipFar&lt;/a&gt; and &lt;a href=&quot;qml-qtquick3d-perspectivecamera#clipNear-prop&quot;&gt;clipNear&lt;/a&gt; properties of the camera for the scene to frame the content. You ideally want the largest possible value for &lt;a href=&quot;qml-qtquick3d-perspectivecamera#clipNear-prop&quot;&gt;clipNear&lt;/a&gt; and the smallest possible value for &lt;a href=&quot;qml-qtquick3d-perspectivecamera#clipFar-prop&quot;&gt;clipFar&lt;/a&gt;. Next, adjust the properties of the effect for the desired result.</source>
          <target state="translated">이 효과가 제대로 작동 하려면 장면이 콘텐츠를 프레임 할 수 있도록 카메라 의 &lt;a href=&quot;qml-qtquick3d-perspectivecamera#clipFar-prop&quot;&gt;clipFar&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick3d-perspectivecamera#clipNear-prop&quot;&gt;clipNear&lt;/a&gt; 속성 을 조정해야 합니다. 이상적으로는 &lt;a href=&quot;qml-qtquick3d-perspectivecamera#clipNear-prop&quot;&gt;clipNear에&lt;/a&gt; 대해 가능한 가장 큰 값과 clipFar에 대해 가능한 가장 작은 값을 &lt;a href=&quot;qml-qtquick3d-perspectivecamera#clipFar-prop&quot;&gt;원합니다&lt;/a&gt; . 다음으로 원하는 결과에 대한 효과의 속성을 조정합니다.</target>
        </trans-unit>
        <trans-unit id="ca63e70354eb863dd5712fb7d4712a907ac02824" translate="yes" xml:space="preserve">
          <source>For this function, the only ambiguous delimiter is the hash (&quot;#&quot;), as in URLs it is used to separate the query string from the fragment that may follow.</source>
          <target state="translated">이 함수의 경우 URL에서 쿼리 문자열을 뒤에 오는 조각과 구분하는 데 사용되는 것과 같이 모호한 구분 기호 만 해시 ( &quot;#&quot;)입니다.</target>
        </trans-unit>
        <trans-unit id="db7449477c7713f96fe9e3d6f85913f130780746" translate="yes" xml:space="preserve">
          <source>For this kind of completion to work, &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; needs to be able to split the path into a list of strings that are matched at each level. For &lt;code&gt;C:\Windows\Sy&lt;/code&gt;, it needs to be split as &quot;C:&quot;, &quot;Windows&quot; and &quot;Sy&quot;. The default implementation of &lt;a href=&quot;qcompleter#splitPath&quot;&gt;splitPath&lt;/a&gt;(), splits the &lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;completionPrefix&lt;/a&gt; using &lt;a href=&quot;qdir#separator&quot;&gt;QDir::separator&lt;/a&gt;() if the model is a &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt;.</source>
          <target state="translated">이러한 종류의 완료가 작동하려면 &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; 가 경로를 각 레벨에서 일치하는 문자열 목록으로 분할 할 수 있어야합니다. 를 들어 &lt;code&gt;C:\Windows\Sy&lt;/code&gt; , &quot;윈도우&quot;와 &quot;싸이&quot;, 그것은 &quot;C&quot;로 분할 할 필요가있다. &lt;a href=&quot;qcompleter#splitPath&quot;&gt;splitPath&lt;/a&gt; () 의 기본 구현은 모델이 &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel 인&lt;/a&gt; 경우 &lt;a href=&quot;qdir#separator&quot;&gt;QDir :: separator&lt;/a&gt; ()를 사용 하여 &lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;completionPrefix&lt;/a&gt; 를 분할합니다 .</target>
        </trans-unit>
        <trans-unit id="df9f9736302c649189985fb8ba867976225b8f76" translate="yes" xml:space="preserve">
          <source>For this kind of completion to work, QCompleter needs to be able to split the path into a list of strings that are matched at each level. For &lt;code&gt;C:\Windows\Sy&lt;/code&gt;, it needs to be split as &quot;C:&quot;, &quot;Windows&quot; and &quot;Sy&quot;. The default implementation of &lt;a href=&quot;qcompleter#splitPath&quot;&gt;splitPath&lt;/a&gt;(), splits the &lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;completionPrefix&lt;/a&gt; using &lt;a href=&quot;qdir#separator&quot;&gt;QDir::separator&lt;/a&gt;() if the model is a &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt;.</source>
          <target state="translated">이러한 종류의 완성이 작동하려면 QCompleter가 경로를 각 레벨에서 일치하는 문자열 목록으로 분할 할 수 있어야합니다. 를 들어 &lt;code&gt;C:\Windows\Sy&lt;/code&gt; , &quot;윈도우&quot;와 &quot;싸이&quot;, 그것은 &quot;C&quot;로 분할 할 필요가있다. 의 기본 구현 &lt;a href=&quot;qcompleter#splitPath&quot;&gt;splitPath는&lt;/a&gt; (), 스플릿 &lt;a href=&quot;qcompleter#completionPrefix-prop&quot;&gt;completionPrefix&lt;/a&gt; 사용 &lt;a href=&quot;qdir#separator&quot;&gt;QDir :: 세퍼레이터&lt;/a&gt; 모델이있는 경우 () &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="09dfb89f0894587d21d6cb8f4671f3265046f2d2" translate="yes" xml:space="preserve">
          <source>For this kind of customization, style sheets are much more powerful than &lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt;. For example, it might be tempting to set the &lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette::Button&lt;/a&gt; role to red for a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; to obtain a red push button. However, this wasn't guaranteed to work for all styles, because style authors are restricted by the different platforms' guidelines and (on Windows and &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;) by the native theme engine.</source>
          <target state="translated">이런 종류의 커스터마이징에서 스타일 시트는 &lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt; 보다 훨씬 강력 합니다. 예를 들어, &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; 이 빨간색 푸시 버튼을 얻기 위해 &lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette :: Button&lt;/a&gt; 역할을 빨간색 으로 설정하려는 유혹이있을 수 있습니다 . 그러나 스타일 작성자가 다른 플랫폼의 지침에 따라 (및 Windows 및 &lt;a href=&quot;internationalization#macos&quot;&gt;macOS에서&lt;/a&gt; ) 기본 테마 엔진에 의해 제한되기 때문에 모든 스타일에서 작동하지는 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8c4fea048bdc39ee874b4d68cf6f97c4d85436cc" translate="yes" xml:space="preserve">
          <source>For this kind of customization, style sheets are much more powerful than &lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt;. For example, it might be tempting to set the &lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette::Button&lt;/a&gt; role to red for a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; to obtain a red push button. However, this wasn't guaranteed to work for all styles, because style authors are restricted by the different platforms' guidelines and (on Windows and macOS) by the native theme engine.</source>
          <target state="translated">이러한 종류의 사용자 정의의 경우 스타일 시트가 &lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt; 보다 훨씬 강력 합니다. 예를 들어, &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; 이 빨간색 누름 버튼을 얻기 위해 &lt;a href=&quot;qpalette#ColorRole-enum&quot;&gt;QPalette :: Button&lt;/a&gt; 역할을 빨간색 으로 설정하고 싶을 수 있습니다 . 그러나 스타일 작성자는 다른 플랫폼의 지침과 기본 테마 엔진 (Windows 및 macOS)에 의해 제한되기 때문에 모든 스타일에서 작동한다고 보장되지는 않았습니다.</target>
        </trans-unit>
        <trans-unit id="cdd809502816773e16d9c61f79cd03774eb5103a" translate="yes" xml:space="preserve">
          <source>For this mechanism to work, the application must run in an event loop. You start an event loop with &lt;a href=&quot;qapplication#exec&quot;&gt;QApplication::exec&lt;/a&gt;(). When a timer fires, the application sends a &lt;a href=&quot;qtimerevent&quot;&gt;QTimerEvent&lt;/a&gt;, and the flow of control leaves the event loop until the timer event is processed. This implies that a timer cannot fire while your application is busy doing something else. In other words: the accuracy of timers depends on the granularity of your application.</source>
          <target state="translated">이 메커니즘이 작동하려면 응용 프로그램이 이벤트 루프에서 실행되어야합니다. &lt;a href=&quot;qapplication#exec&quot;&gt;QApplication :: exec&lt;/a&gt; ()를 사용하여 이벤트 루프를 시작합니다 . 타이머가 발생하면 응용 프로그램은 &lt;a href=&quot;qtimerevent&quot;&gt;QTimerEvent를&lt;/a&gt; 보내고 타이머 흐름이 처리 될 때까지 제어 흐름이 이벤트 루프를 떠납니다. 이는 응용 프로그램이 다른 작업을 수행하는 동안 타이머가 실행될 수 없음을 의미합니다. 즉, 타이머의 정확성은 응용 프로그램의 세분성에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="9380fb205d2751cb77f5179016fc5235371bfa8d" translate="yes" xml:space="preserve">
          <source>For this reason, it is better to use a relative URL (that is, no scheme) for relative file paths:</source>
          <target state="translated">이러한 이유로 상대 파일 경로에 상대 URL을 사용하는 것이 좋습니다 (즉, 스키마 없음).</target>
        </trans-unit>
        <trans-unit id="f4e10fe81d3c173e5e2f2a353faa6a6003d01059" translate="yes" xml:space="preserve">
          <source>For those new to QML and Qt Quick, please see &lt;a href=&quot;qmlapplications&quot;&gt;QML Applications&lt;/a&gt; for an introduction to writing QML applications.</source>
          <target state="translated">QML 및 Qt Quick을 처음 사용하는 사용자는 QML 애플리케이션 작성에 대한 소개는 &lt;a href=&quot;qmlapplications&quot;&gt;QML 애플리케이션&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2fe80d63df73552e68b6cbd1983fecee9dc7be09" translate="yes" xml:space="preserve">
          <source>For traversing the items stored in a container, you can use one of two types of iterators: &lt;a href=&quot;#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; and &lt;a href=&quot;#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt;. The Java-style iterators are easier to use and provide high-level functionality, whereas the STL-style iterators are slightly more efficient and can be used together with Qt's and STL's &lt;a href=&quot;qtalgorithms&quot;&gt;generic algorithms&lt;/a&gt;.</source>
          <target state="translated">컨테이너에 저장된 항목을 순회하려면 &lt;a href=&quot;#java-style-iterators&quot;&gt;Java&lt;/a&gt; 유형 반복기 및 &lt;a href=&quot;#stl-style-iterators&quot;&gt;STL &lt;/a&gt;스타일 반복기 의 두 가지 반복기 중 하나를 사용할 수 있습니다 . Java 스타일 반복기는 사용하기 쉽고 높은 수준의 기능을 제공하는 반면 STL 스타일 반복자는 약간 더 효율적이며 Qt 및 STL의 &lt;a href=&quot;qtalgorithms&quot;&gt;일반 알고리즘&lt;/a&gt; 과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="94cebf28e81a56c2e1538d3b1e1b39c6a1b216dd" translate="yes" xml:space="preserve">
          <source>For traversing the items stored in a container, you can use one of two types of iterators: &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt; and &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-style iterators&lt;/a&gt;. The Java-style iterators are easier to use and provide high-level functionality, whereas the STL-style iterators are slightly more efficient and can be used together with Qt's and STL's &lt;a href=&quot;qtalgorithms&quot;&gt;generic algorithms&lt;/a&gt;.</source>
          <target state="translated">컨테이너에 저장된 항목을 탐색하려면 &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java 스타일 반복기&lt;/a&gt; 와 &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL &lt;/a&gt;스타일 반복기 의 두 가지 유형의 반복자 중 하나를 사용할 수 있습니다 . Java 스타일 반복자는 사용하기 쉽고 높은 수준의 기능을 제공하는 반면 STL 스타일 반복자는 약간 더 효율적이며 Qt 및 STL의 &lt;a href=&quot;qtalgorithms&quot;&gt;일반 알고리즘&lt;/a&gt; 과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e1ee28ffe11db93c3fddc4c84c4d4485b63729d2" translate="yes" xml:space="preserve">
          <source>For troubleshooting it might be useful to enable debug logs from the KMS/DRM backend. To do this, enable the &lt;code&gt;qt.qpa.eglfs.kms&lt;/code&gt; categorized logging rule.</source>
          <target state="translated">문제 해결을 위해 KMS / DRM 백엔드에서 디버그 로그를 활성화하는 것이 유용 할 수 있습니다. 이렇게하려면 &lt;code&gt;qt.qpa.eglfs.kms&lt;/code&gt; 분류 로깅 규칙을 활성화합니다 .</target>
        </trans-unit>
        <trans-unit id="cc995549335c329d24efefe93721e662050bc546" translate="yes" xml:space="preserve">
          <source>For troubleshooting it might be useful to enable debug logs from the KMS/DRM backend. To do this, enable the categorized logging rule, &lt;code&gt;qt.qpa.eglfs.kms&lt;/code&gt;.</source>
          <target state="translated">문제 해결을 위해 KMS / DRM 백엔드에서 디버그 로그를 활성화하는 것이 유용 할 수 있습니다. 이를 수행하려면 분류 된 로깅 규칙 &lt;code&gt;qt.qpa.eglfs.kms&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d82518d05bcee29aece112c1b9f2f5032958ef1" translate="yes" xml:space="preserve">
          <source>For troubleshooting, enable the logging category &lt;code&gt;qt.vulkan&lt;/code&gt;. Critical errors are printed via &lt;a href=&quot;#qWarning&quot;&gt;qWarning&lt;/a&gt;() automatically.</source>
          <target state="translated">문제점 해결을 위해 로깅 카테고리 &lt;code&gt;qt.vulkan&lt;/code&gt; 을 사용하십시오 . 심각한 오류는 &lt;a href=&quot;#qWarning&quot;&gt;qWarning&lt;/a&gt; ()을 통해 자동으로 인쇄 됩니다.</target>
        </trans-unit>
        <trans-unit id="10da168c51dc5b0454c749e1518f3172ad056ce9" translate="yes" xml:space="preserve">
          <source>For troubleshooting, enable the logging category &lt;code&gt;qt.vulkan&lt;/code&gt;. Critical errors are printed via &lt;a href=&quot;qtglobal#qWarning&quot;&gt;qWarning&lt;/a&gt;() automatically.</source>
          <target state="translated">문제 해결을 위해 로깅 범주 &lt;code&gt;qt.vulkan&lt;/code&gt; 을 활성화하십시오 . 심각한 오류는 &lt;a href=&quot;qtglobal#qWarning&quot;&gt;qWarning&lt;/a&gt; ()을 통해 자동으로 인쇄 됩니다.</target>
        </trans-unit>
        <trans-unit id="30a63aa74cbab99f3f7f5adf3658c26c820645fb" translate="yes" xml:space="preserve">
          <source>For unassigned, private-use, noncharacter, and surrogate code points.</source>
          <target state="translated">할당되지 않은 개인용 문자가 아닌 대리 코드 포인트의 경우.</target>
        </trans-unit>
        <trans-unit id="187b972906388d04582cbbcd84caf64e9a486790" translate="yes" xml:space="preserve">
          <source>For unparsed entities this function returns the name of the notation for the entity. For parsed entities this function returns an empty string.</source>
          <target state="translated">구문 분석되지 않은 엔티티의 경우이 함수는 엔티티의 표기법 이름을 리턴합니다. 구문 분석 된 엔티티의 경우이 함수는 빈 문자열을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9ae7d98e6bd042a4e8f8abafac62505b1a354c56" translate="yes" xml:space="preserve">
          <source>For unscaled output the size of</source>
          <target state="translated">스케일링되지 않은 출력의 경우</target>
        </trans-unit>
        <trans-unit id="3830355bb62aa9cd14891515dc3b7022f71446ac" translate="yes" xml:space="preserve">
          <source>For use-cases which do not need to transition between animations, consider the &lt;a href=&quot;qml-qtquick-animatedsprite&quot;&gt;AnimatedSprite&lt;/a&gt; type. This type displays sprite animations with the same input format, but only one at a time. It also provides more fine-grained manual control, as there is no sprite engine managing the timing and transitions behind the scenes.</source>
          <target state="translated">애니메이션간에 전환 할 필요가없는 사용 사례의 경우 &lt;a href=&quot;qml-qtquick-animatedsprite&quot;&gt;AnimatedSprite&lt;/a&gt; 유형을 고려하십시오 . 이 형식은 입력 형식은 같지만 한 번에 하나씩 만 스프라이트 애니메이션을 표시합니다. 또한 배경 뒤의 타이밍과 전환을 관리하는 스프라이트 엔진이 없기 때문에보다 세밀한 수동 제어 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9b00088fd394f335029aa6a5c81e6f89c79c18ff" translate="yes" xml:space="preserve">
          <source>For user interfaces with multiple visual states, independent of the application's logical state, consider using QML States and Transitions.</source>
          <target state="translated">애플리케이션의 논리적 상태와 무관하게 여러 시각적 상태를 가진 사용자 인터페이스의 경우 QML 상태 및 전환 사용을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="bcdafaa805a7c08b5e146a92031a176c0ec1ab78" translate="yes" xml:space="preserve">
          <source>For user options, it is up to the developer to decide which types to use and ensure that components use the correct types when accessing and setting values.</source>
          <target state="translated">사용자 옵션의 경우 사용할 유형을 결정하고 값을 액세스하고 설정할 때 구성 요소가 올바른 유형을 사용하도록하는 것은 개발자의 몫입니다.</target>
        </trans-unit>
        <trans-unit id="21f3fa6724996d91330d96838edda57aaa8274d4" translate="yes" xml:space="preserve">
          <source>For user roles, it is up to the developer to decide which types to use and ensure that components use the correct types when accessing and setting data.</source>
          <target state="translated">사용자 역할의 경우 사용할 유형을 결정하고 데이터에 액세스하고 데이터를 설정할 때 구성 요소가 올바른 유형을 사용하도록하는 것은 개발자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="6b8884c2659dcc2722908f806c34e191b70a13d1" translate="yes" xml:space="preserve">
          <source>For users of &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt; subclasses or of &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; there is seldom any need to use the basic functions provided by &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;, such as &lt;a href=&quot;qlayout#sizeConstraint-prop&quot;&gt;setSizeConstraint&lt;/a&gt;() or &lt;a href=&quot;qlayout#setMenuBar&quot;&gt;setMenuBar&lt;/a&gt;(). See &lt;a href=&quot;layout#&quot;&gt;Layout Management&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt; 서브 클래스 또는 &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; 사용자의 경우 &lt;a href=&quot;qlayout#sizeConstraint-prop&quot;&gt;setSizeConstraint&lt;/a&gt; () 또는 &lt;a href=&quot;qlayout#setMenuBar&quot;&gt;setMenuBar&lt;/a&gt; () 와 같이 &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt; 에서 제공하는 기본 기능을 사용할 필요가 거의 없습니다 . 자세한 내용은 &lt;a href=&quot;layout#&quot;&gt;레이아웃 관리&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="59c13cd8aadb7ecc313491a7ddee6bd7e766a048" translate="yes" xml:space="preserve">
          <source>For users of QLayout subclasses or of &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; there is seldom any need to use the basic functions provided by QLayout, such as &lt;a href=&quot;qlayout#sizeConstraint-prop&quot;&gt;setSizeConstraint&lt;/a&gt;() or &lt;a href=&quot;qlayout#setMenuBar&quot;&gt;setMenuBar&lt;/a&gt;(). See &lt;a href=&quot;layout&quot;&gt;Layout Management&lt;/a&gt; for more information.</source>
          <target state="translated">QLayout 하위 클래스 또는 &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; 사용자의 경우 &lt;a href=&quot;qlayout#sizeConstraint-prop&quot;&gt;setSizeConstraint&lt;/a&gt; () 또는 &lt;a href=&quot;qlayout#setMenuBar&quot;&gt;setMenuBar&lt;/a&gt; () 와 같은 QLayout에서 제공하는 기본 함수를 사용할 필요가 거의 없습니다 . 자세한 내용은 &lt;a href=&quot;layout&quot;&gt;레이아웃 관리&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="be012c8c6c98a77121e764d19af1b08e29196e15" translate="yes" xml:space="preserve">
          <source>For users who just want to apply custom shading to a QML Item type, it is possible to do this directly in QML using the &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; type.</source>
          <target state="translated">QML 항목 유형에 사용자 정의 음영을 적용하려는 사용자의 경우 &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; 유형을 사용하여 QML에서 직접이 작업을 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bb90a83ba843fe7ae3c7ad7539f0fe2a9f8949be" translate="yes" xml:space="preserve">
          <source>For versions prior to &lt;a href=&quot;qdatastream#Version-enum&quot;&gt;Qt_4_6&lt;/a&gt;, the precision of floating point numbers in the data stream depends on the stream operator called.</source>
          <target state="translated">&lt;a href=&quot;qdatastream#Version-enum&quot;&gt;Qt_4_6&lt;/a&gt; 이전 버전의 경우 데이터 스트림의 부동 소수점 숫자의 정밀도는 호출 된 스트림 연산자에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="f3e1ab622b1290abf3ca7e4f9f41b66ea6da2ed3" translate="yes" xml:space="preserve">
          <source>For very simple cases simply setting the &lt;code&gt;focus&lt;/code&gt; property is sometimes sufficient. If we run the following example with &lt;a href=&quot;qtquick-qmlscene&quot;&gt;qmlscene&lt;/a&gt;, we see that the &lt;code&gt;keyHandler&lt;/code&gt; type has active focus and pressing the &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, or &lt;code&gt;C&lt;/code&gt; keys modifies the text appropriately.</source>
          <target state="translated">매우 간단한 경우 &lt;code&gt;focus&lt;/code&gt; 속성을 설정하는 것만 으로도 충분합니다. 우리가 다음 예제를 실행하면 &lt;a href=&quot;qtquick-qmlscene&quot;&gt;qmlscene&lt;/a&gt; , 우리는 볼 &lt;code&gt;keyHandler&lt;/code&gt; 유형이 활성화 초점과 압박이 , &lt;code&gt;B&lt;/code&gt; 또는 &lt;code&gt;C&lt;/code&gt; 의 텍스트를 적절하게 키 수정합니다. &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b6eb9f7ae096b4c610f44b5cc2251b519a540617" translate="yes" xml:space="preserve">
          <source>For visible widgets, this is an approximation of the area not covered by other widgets; otherwise, this is an empty region.</source>
          <target state="translated">보이는 위젯의 경우 이는 다른 위젯에서 다루지 않는 영역의 근사값입니다. 그렇지 않으면 빈 영역입니다.</target>
        </trans-unit>
        <trans-unit id="2f529ac2ed90a80a4234cbccd663c1836400c1ee" translate="yes" xml:space="preserve">
          <source>For visual explanations of the various modes, see the &lt;a href=&quot;qml-qtquick-controls2-slider#snapMode-prop&quot;&gt;snapMode&lt;/a&gt; documentation of &lt;a href=&quot;qml-qtquick-controls2-slider&quot;&gt;Slider&lt;/a&gt;.</source>
          <target state="translated">다양한 모드에 대한 시각적 설명 은 &lt;a href=&quot;qml-qtquick-controls2-slider&quot;&gt;슬라이더&lt;/a&gt; 의 &lt;a href=&quot;qml-qtquick-controls2-slider#snapMode-prop&quot;&gt;snapMode&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="677f8f54149a2359b2c4f5833237c5564c57954f" translate="yes" xml:space="preserve">
          <source>For visualizing logical particles using an image. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">이미지를 사용하여 논리 입자를 시각화합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="669540cb2dc76248f45e5b12cf9ecbd0102f6d18" translate="yes" xml:space="preserve">
          <source>For widgets that need to distinguish between mouse clicks and drags, it is useful to reimplement the widget's &lt;a href=&quot;qwidget#mousePressEvent&quot;&gt;mousePressEvent()&lt;/a&gt; function to record to start position of the drag:</source>
          <target state="translated">마우스 클릭과 드래그를 구분해야하는 위젯의 경우 위젯의 &lt;a href=&quot;qwidget#mousePressEvent&quot;&gt;mousePressEvent ()&lt;/a&gt; 함수를 다시 구현 하여 드래그의 시작 위치에 기록 하는 것이 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="782e6ba861b4e717104be77eecbd10173bd85ce7" translate="yes" xml:space="preserve">
          <source>For widgets that use contents propagation, a scroll will cause an update of the entire scroll area.</source>
          <target state="translated">컨텐츠 전파를 사용하는 위젯의 경우 스크롤로 인해 전체 스크롤 영역이 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="dccf7e874aeaf8bfe3b7a3425b9f57e05f408fb2" translate="yes" xml:space="preserve">
          <source>For windows, the screen size is also taken into account. If the &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint&lt;/a&gt;() is less than (200, 100) and the size policy is &lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;expanding&lt;/a&gt;, the window will be at least (200, 100). The maximum size of a window is 2/3 of the screen's width and height.</source>
          <target state="translated">윈도우의 경우 화면 크기도 고려됩니다. 는 IF &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;힌트 (sizehint)는&lt;/a&gt; () (200, 100) 및 크기의 정책 것보다 적은 &lt;a href=&quot;qsizepolicy#Policy-enum&quot;&gt;확대&lt;/a&gt; , 윈도우가 될 것 적어도 (200, 100). 창의 최대 크기는 화면 너비와 높이의 2/3입니다.</target>
        </trans-unit>
        <trans-unit id="484ea6912a83621d10b52267c9e8fd1cde55f937" translate="yes" xml:space="preserve">
          <source>For writing plugins to support additional codecs refer to:</source>
          <target state="translated">추가 코덱을 지원하는 플러그인 작성에 대해서는 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="57e429eb7146adbdc8e47383e488a68d350e06fe" translate="yes" xml:space="preserve">
          <source>For your own classes, you can use &lt;a href=&quot;qtest#toString&quot;&gt;QTest::toString&lt;/a&gt;() to format values for outputting into the test log.</source>
          <target state="translated">자체 클래스의 경우 &lt;a href=&quot;qtest#toString&quot;&gt;QTest :: toString&lt;/a&gt; ()을 사용하여 테스트 로그에 출력 할 값의 형식을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3d1625c5119694a5915b084ee40b338f321d148e" translate="yes" xml:space="preserve">
          <source>For zero-length matches, pos() always returns -1. (For example, if cap(4) would return an empty string, pos(4) returns -1.) This is a feature of the implementation.</source>
          <target state="translated">길이가 0 인 일치의 경우 pos ()는 항상 -1을 반환합니다. 예를 들어, cap (4)가 빈 문자열을 반환하면 pos (4)는 -1을 반환합니다. 이는 구현의 기능입니다.</target>
        </trans-unit>
        <trans-unit id="531a5efb8750001a60baf13a7537c7c4ca81e477" translate="yes" xml:space="preserve">
          <source>Force 32bit integer values. In case of floating point numbers, the fractional part is silently discarded.</source>
          <target state="translated">32 비트 정수 값을 사용하십시오. 부동 소수점 숫자의 경우 소수 부분은 자동으로 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="664572cc6dc219ca026f31f7f68560c0ac7f092a" translate="yes" xml:space="preserve">
          <source>Force 64bit integer values. In case of floating point numbers, the fractional part is silently discarded.</source>
          <target state="translated">64 비트 정수 값을 사용하십시오. 부동 소수점 숫자의 경우 소수 부분은 자동으로 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="fc909fdfbf8f630991cec162c3758105898fc179" translate="yes" xml:space="preserve">
          <source>Force &lt;code&gt;double&lt;/code&gt; values. This is the default policy.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 값을 강제 합니다. 이것이 기본 정책입니다.</target>
        </trans-unit>
        <trans-unit id="6e01adc12411ca85c6601765940d32ff475fd35e" translate="yes" xml:space="preserve">
          <source>Force any in-progress incubation to finish synchronously. Once this call returns, the incubator will not be in the Loading state.</source>
          <target state="translated">진행중인 배양이 동시에 완료되도록합니다. 이 호출이 돌아 오면 인큐베이터는 Loading 상태가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="d4a60be20e3a739c3cae5ad13e9319ea9f23641c" translate="yes" xml:space="preserve">
          <source>Force the generation of an &lt;code&gt;#include&lt;/code&gt; statement in the output. This is the default for header files whose extension starts with &lt;code&gt;H&lt;/code&gt; or &lt;code&gt;h&lt;/code&gt;. This option is useful if you have header files that do not follow the standard naming conventions. The &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; part is optional.</source>
          <target state="translated">출력에 &lt;code&gt;#include&lt;/code&gt; 문을 강제로 생성 하십시오. 확장자가 &lt;code&gt;H&lt;/code&gt; 또는 &lt;code&gt;h&lt;/code&gt; 로 시작하는 헤더 파일의 기본값입니다 . 이 옵션은 표준 명명 규칙을 따르지 않는 헤더 파일이있는 경우 유용합니다. &lt;code&gt;&amp;lt;file&amp;gt;&lt;/code&gt; 부분은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="3b3c5eef0d649ff913b76f756b9e2225bac254d1" translate="yes" xml:space="preserve">
          <source>Force the view to discard its current buffer, to allow it to be reused on the client side.</source>
          <target state="translated">클라이언트 측에서 재사용 할 수 있도록보기에서 현재 버퍼를 강제로 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="a3240e83f417fc978a43c1f2ec196d9580ffe256" translate="yes" xml:space="preserve">
          <source>ForceMono</source>
          <target state="translated">ForceMono</target>
        </trans-unit>
        <trans-unit id="ff3ef0cf13e260a7f578b437d437854b1dea7ffd" translate="yes" xml:space="preserve">
          <source>ForceStereo</source>
          <target state="translated">ForceStereo</target>
        </trans-unit>
        <trans-unit id="d27728ec37d8bdea8c349cb73033073d34dbf640" translate="yes" xml:space="preserve">
          <source>Forces Qt to generate paint events when the mouse enters or leaves the widget. This feature is typically used when implementing custom styles; see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-widgets-styles-example.html&quot;&gt;Styles&lt;/a&gt; example for details.</source>
          <target state="translated">마우스가 위젯에 들어가거나 나올 때 Qt가 페인트 이벤트를 생성하도록합니다. 이 기능은 일반적으로 사용자 정의 스타일을 구현할 때 사용됩니다. 자세한 내용은 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-widgets-styles-example.html&quot;&gt;스타일&lt;/a&gt; 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2e54b40a53ff69efa05e982a07b0e509306a6349" translate="yes" xml:space="preserve">
          <source>Forces Qt to generate paint events when the mouse enters or leaves the widget. This feature is typically used when implementing custom styles; see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-widgets-styles-example.html&quot;&gt;Styles&lt;/a&gt; example for details.</source>
          <target state="translated">마우스가 위젯에 들어가거나 나갈 때 Qt가 페인트 이벤트를 생성하도록합니다. 이 기능은 일반적으로 사용자 정의 스타일을 구현할 때 사용됩니다. 자세한 내용은 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-widgets-styles-example.html&quot;&gt;스타일&lt;/a&gt; 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="01b8c573dcfba1a916b217c299420787f4c78c8a" translate="yes" xml:space="preserve">
          <source>Forces active focus on the item with the given</source>
          <target state="translated">주어진 항목으로 항목에 적극적으로 집중</target>
        </trans-unit>
        <trans-unit id="ff1f18bb73051bb9a002cb7de0adb3cda2d72b30" translate="yes" xml:space="preserve">
          <source>Forces active focus on the item.</source>
          <target state="translated">항목에 강제로 초점을 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="e4cc1b2d58c964342919d9610e9f66260abd4b8d" translate="yes" xml:space="preserve">
          <source>Forces active focus on the popup with the given</source>
          <target state="translated">주어진 팝업에 적극적으로 초점을 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="aec3f82a574a420eec4f9e2254699ef3be2e0b2d" translate="yes" xml:space="preserve">
          <source>Forces specific OpenGL backend. This integer value can be used to force the use of specific OpenGL backend provided it is supported.</source>
          <target state="translated">특정 OpenGL 백엔드를 강제합니다. 이 정수 값은 지원되는 특정 OpenGL 백엔드를 강제로 사용하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="acb2cc9b27d6bdf42861abebb3c3500f9489e66c" translate="yes" xml:space="preserve">
          <source>Forces the current thread to sleep for</source>
          <target state="translated">현재 스레드를 강제로 대기시킵니다.</target>
        </trans-unit>
        <trans-unit id="d7cd7ce94bf952bd74cf39a6fc20c39a5c7e8df5" translate="yes" xml:space="preserve">
          <source>Forces the radio to play the station in mono, converting the sound signal if necessary</source>
          <target state="translated">라디오가 방송국을 모노로 강제 재생하여 필요한 경우 사운드 신호를 변환합니다.</target>
        </trans-unit>
        <trans-unit id="a0786c6667b1a23b4f2d8573a047fda53acface4" translate="yes" xml:space="preserve">
          <source>Forces the radio to play the station in stereo, converting the sound signal if necessary</source>
          <target state="translated">라디오가 방송국을 스테레오로 재생하도록 강제하고 필요한 경우 사운드 신호를 변환합니다</target>
        </trans-unit>
        <trans-unit id="13bf3c4d9eecce7ae9386707c99d14e76b066468" translate="yes" xml:space="preserve">
          <source>Forces the search engine to reindex all documentation files.</source>
          <target state="translated">검색 엔진이 모든 문서 파일을 다시 색인화하도록합니다.</target>
        </trans-unit>
        <trans-unit id="c2fa323281c7fbb8f749ea2f7447cbe05f445780" translate="yes" xml:space="preserve">
          <source>Forces the usage of OpenGL ES 2.0 or higher on platforms that use dynamic loading of the OpenGL implementation. This attribute must be set before &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; is constructed. This value was added in Qt 5.3.</source>
          <target state="translated">OpenGL 구현의 동적 로딩을 사용하는 플랫폼에서 OpenGL ES 2.0 이상을 사용하도록합니다. 이 속성은 &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; 을 구성 하기 전에 설정해야합니다 . 이 값은 Qt 5.3에서 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="d3fd1b92ff91ff5492ce645333a2271e1cb832fb" translate="yes" xml:space="preserve">
          <source>Forces the usage of a software based OpenGL implementation on platforms that use dynamic loading of the OpenGL implementation. This will typically be a patched build of &lt;a href=&quot;http://www.mesa3d.org/llvmpipe.html&quot;&gt;Mesa llvmpipe&lt;/a&gt;, providing OpenGL 2.1. The value may have no effect if no such OpenGL implementation is available. The default name of this library is &lt;code&gt;opengl32sw.dll&lt;/code&gt; and can be overridden by setting the environment variable</source>
          <target state="translated">OpenGL 구현의 동적 로딩을 사용하는 플랫폼에서 소프트웨어 기반 OpenGL 구현을 사용하도록합니다. 이것은 일반적으로 OpenGL 2.1을 제공 하는 패치 된 &lt;a href=&quot;http://www.mesa3d.org/llvmpipe.html&quot;&gt;Mesa llvmpipe&lt;/a&gt; 빌드입니다 . 이러한 OpenGL 구현을 사용할 수없는 경우 값이 적용되지 않을 수 있습니다. 이 라이브러리의 기본 이름은 &lt;code&gt;opengl32sw.dll&lt;/code&gt; 이며 환경 변수를 설정하여 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c750cedbad922cae5010ca2f2e39d7b3115955af" translate="yes" xml:space="preserve">
          <source>Forces the usage of desktop OpenGL (for example,</source>
          <target state="translated">데스크톱 OpenGL을 강제로 사용합니다 (예 :</target>
        </trans-unit>
        <trans-unit id="a7e8f17b7b8b3fcc4570795402a5e6aa6d828e74" translate="yes" xml:space="preserve">
          <source>ForeachInfo Struct</source>
          <target state="translated">ForeachInfo 구조</target>
        </trans-unit>
        <trans-unit id="d1ec9bf5735a0d6847053ba742124dd3e47e781d" translate="yes" xml:space="preserve">
          <source>ForeachInfo::array</source>
          <target state="translated">ForeachInfo::array</target>
        </trans-unit>
        <trans-unit id="53a91346e6c67b9b5e1fe51857144709625595ad" translate="yes" xml:space="preserve">
          <source>ForeachInfo::context</source>
          <target state="translated">ForeachInfo::context</target>
        </trans-unit>
        <trans-unit id="b0d140fe90e89cc497dc9343e91f87318dabff44" translate="yes" xml:space="preserve">
          <source>ForeachInfo::index</source>
          <target state="translated">ForeachInfo::index</target>
        </trans-unit>
        <trans-unit id="992b6e7d38dc471281f4a0cef053737b61d384dc" translate="yes" xml:space="preserve">
          <source>ForeachInfo::item</source>
          <target state="translated">ForeachInfo::item</target>
        </trans-unit>
        <trans-unit id="3224a3de48b4863e9ef6281cada77e9b85a71045" translate="yes" xml:space="preserve">
          <source>ForeachLoopBody Class</source>
          <target state="translated">ForeachLoopBody 클래스</target>
        </trans-unit>
        <trans-unit id="23ebbe3c699755f91bdf3823a7abf50e9abb05e8" translate="yes" xml:space="preserve">
          <source>ForeachLoopBody::ForeachLoopBody()</source>
          <target state="translated">ForeachLoopBody::ForeachLoopBody()</target>
        </trans-unit>
        <trans-unit id="80446347ede53cf9ce56b3d59fda4b5c96dc25c4" translate="yes" xml:space="preserve">
          <source>Form</source>
          <target state="translated">Form</target>
        </trans-unit>
        <trans-unit id="bda935261b73660abd7e733b6130b8b99bd81e1e" translate="yes" xml:space="preserve">
          <source>Form editing</source>
          <target state="translated">양식 편집</target>
        </trans-unit>
        <trans-unit id="b68eb2daaba320955356c28255cb253733cf0368" translate="yes" xml:space="preserve">
          <source>FormValidationMessageRequest (QML type)</source>
          <target state="translated">FormValidationMessageRequest (QML 유형)</target>
        </trans-unit>
        <trans-unit id="c14f5eea95739a2c4299a76747c8ee981dd2895f" translate="yes" xml:space="preserve">
          <source>FormValidationMessageRequest QML Type</source>
          <target state="translated">FormValidationMessageRequest QML 유형</target>
        </trans-unit>
        <trans-unit id="3feadc2ecd20d9c6fbc4469d03ddef208abaab90" translate="yes" xml:space="preserve">
          <source>FormValidationMessageRequest.accepted</source>
          <target state="translated">FormValidationMessageRequest.accepted</target>
        </trans-unit>
        <trans-unit id="40039cbf484f2ebf8a4a7e2055d786ef5b7c0369" translate="yes" xml:space="preserve">
          <source>FormValidationMessageRequest.anchor</source>
          <target state="translated">FormValidationMessageRequest.anchor</target>
        </trans-unit>
        <trans-unit id="5f8c6eff47db98d9578f7c7e410f6cd077391b39" translate="yes" xml:space="preserve">
          <source>FormValidationMessageRequest.subText</source>
          <target state="translated">FormValidationMessageRequest.subText</target>
        </trans-unit>
        <trans-unit id="51cdf6eacfb03e6f1f906fe52e0ba66a92bfec13" translate="yes" xml:space="preserve">
          <source>FormValidationMessageRequest.text</source>
          <target state="translated">FormValidationMessageRequest.text</target>
        </trans-unit>
        <trans-unit id="fde8ba1d4b79fddcf6dcd4f7c3e7cd101d53e8b3" translate="yes" xml:space="preserve">
          <source>FormValidationMessageRequest.type</source>
          <target state="translated">FormValidationMessageRequest.type</target>
        </trans-unit>
        <trans-unit id="041a5dec481d6bf0724caeaa84bc135d7d9062d4" translate="yes" xml:space="preserve">
          <source>Format</source>
          <target state="translated">Format</target>
        </trans-unit>
        <trans-unit id="8c37a9faefafc14d5c8be927bb2a7b1d16579269" translate="yes" xml:space="preserve">
          <source>Format Enumeration Values</source>
          <target state="translated">열거 형 값 형식 지정</target>
        </trans-unit>
        <trans-unit id="150d9f841097f64a42b925806fe3290abd9bc35d" translate="yes" xml:space="preserve">
          <source>Format String</source>
          <target state="translated">형식 문자열</target>
        </trans-unit>
        <trans-unit id="f82f3ba2d1f13d26a5fb68ab9ee065f776ab30d9" translate="yes" xml:space="preserve">
          <source>Format Strings</source>
          <target state="translated">형식 문자열</target>
        </trans-unit>
        <trans-unit id="9c334d4efee52a1bce465305caea2d205f8493db" translate="yes" xml:space="preserve">
          <source>Format and Location</source>
          <target state="translated">형식과 위치</target>
        </trans-unit>
        <trans-unit id="dda60dda49e4ee3b3cc1742779be44927352d7cd" translate="yes" xml:space="preserve">
          <source>Format error.</source>
          <target state="translated">형식 오류.</target>
        </trans-unit>
        <trans-unit id="92072a59ec922347ae5a8c0a0533b4ff215006cd" translate="yes" xml:space="preserve">
          <source>Format independent interface for reading images from files or other devices</source>
          <target state="translated">파일 또는 다른 장치에서 이미지를 읽기위한 형식 독립적 인 인터페이스</target>
        </trans-unit>
        <trans-unit id="81135fe211b1cfe4c6d1d6997928c61d559fb191" translate="yes" xml:space="preserve">
          <source>Format independent interface for writing images to files or other devices</source>
          <target state="translated">파일 또는 다른 장치에 이미지를 기록하기위한 형식 독립적 인 인터페이스</target>
        </trans-unit>
        <trans-unit id="e3a25e9fe886b5689318e78f3511568a83379b7d" translate="yes" xml:space="preserve">
          <source>Format names are always given in lower case.</source>
          <target state="translated">형식 이름은 항상 소문자로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="5c6377a283504aeac5d72e02235635a2c5bfe6fb" translate="yes" xml:space="preserve">
          <source>Format not supported.</source>
          <target state="translated">형식이 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="22444a1a505e515bd96e70b6ef29ed384e2133c9" translate="yes" xml:space="preserve">
          <source>Format related</source>
          <target state="translated">형식 관련</target>
        </trans-unit>
        <trans-unit id="8b353a29adc598852e35d4fdedcd83d83de8b659" translate="yes" xml:space="preserve">
          <source>Format-independent interface for writing a QTextDocument to files or other devices</source>
          <target state="translated">파일 또는 기타 장치에 QTextDocument를 작성하기위한 형식 독립적 인터페이스</target>
        </trans-unit>
        <trans-unit id="32e3619de64199c5bc469ed60aa229dfeb9b4bca" translate="yes" xml:space="preserve">
          <source>Format-specific Configuration Variables</source>
          <target state="translated">형식 별 구성 변수</target>
        </trans-unit>
        <trans-unit id="598ebe6ebe678a88375bfa2bfc217b36c3d341d2" translate="yes" xml:space="preserve">
          <source>FormatError</source>
          <target state="translated">FormatError</target>
        </trans-unit>
        <trans-unit id="5db5e55f45fe5bd44f616de0e0468f5b6eb6ba5f" translate="yes" xml:space="preserve">
          <source>FormatNotSupportedError</source>
          <target state="translated">FormatNotSupportedError</target>
        </trans-unit>
        <trans-unit id="ab91b4a9fd52e475e534a297b48262d3a8c537c7" translate="yes" xml:space="preserve">
          <source>FormatRange Struct</source>
          <target state="translated">FormatRange Struct</target>
        </trans-unit>
        <trans-unit id="bcbeee63877099cff7b5203536dbd3915c5637d3" translate="yes" xml:space="preserve">
          <source>FormatRange::format</source>
          <target state="translated">FormatRange::format</target>
        </trans-unit>
        <trans-unit id="8bbc692edfc42a1127c4c99ddd07c0b1fdc55633" translate="yes" xml:space="preserve">
          <source>FormatRange::length</source>
          <target state="translated">FormatRange::length</target>
        </trans-unit>
        <trans-unit id="ebe6d8f9306e490ba90f6f5d0f208a2d8c2c1a0a" translate="yes" xml:space="preserve">
          <source>FormatRange::operator!=()</source>
          <target state="translated">FormatRange::operator!=()</target>
        </trans-unit>
        <trans-unit id="cd1a3e0f66e9831a62ac9e464da9a01bfd86272c" translate="yes" xml:space="preserve">
          <source>FormatRange::operator==()</source>
          <target state="translated">FormatRange::operator==()</target>
        </trans-unit>
        <trans-unit id="7c34e3eec584cb4e2ba5aeeed62cd522ceddcb69" translate="yes" xml:space="preserve">
          <source>FormatRange::start</source>
          <target state="translated">FormatRange::start</target>
        </trans-unit>
        <trans-unit id="6ea58f9d64cc125f567e756ef286721c2711db1d" translate="yes" xml:space="preserve">
          <source>Format_ARGB32</source>
          <target state="translated">Format_ARGB32</target>
        </trans-unit>
        <trans-unit id="099c0d61d865e646c7b7b954dd93d831103af9ad" translate="yes" xml:space="preserve">
          <source>Format_ARGB32_Premultiplied</source>
          <target state="translated">Format_ARGB32_Premultiplied</target>
        </trans-unit>
        <trans-unit id="a2f7bcb69ae31da6ae5500bc54d4c7c296fd8aaa" translate="yes" xml:space="preserve">
          <source>Format_RGB32</source>
          <target state="translated">Format_RGB32</target>
        </trans-unit>
        <trans-unit id="aa666e5a3ce820cce5d8a2a1c4611145cbdb2d26" translate="yes" xml:space="preserve">
          <source>Format_RGBA8888</source>
          <target state="translated">Format_RGBA8888</target>
        </trans-unit>
        <trans-unit id="ed866940093b6d3726e2f1a8e608392128dcd8df" translate="yes" xml:space="preserve">
          <source>Format_RGBA8888_Premultiplied</source>
          <target state="translated">Format_RGBA8888_Premultiplied</target>
        </trans-unit>
        <trans-unit id="cfad45b6d0542de9510c6536b86eb02b05324052" translate="yes" xml:space="preserve">
          <source>Format_RGBX8888</source>
          <target state="translated">Format_RGBX8888</target>
        </trans-unit>
        <trans-unit id="2804d9f16a38553f8238529c90d66e7d7426c150" translate="yes" xml:space="preserve">
          <source>Formats</source>
          <target state="translated">Formats</target>
        </trans-unit>
        <trans-unit id="821762722e9dc72f602c0dc56804362bfb8698d4" translate="yes" xml:space="preserve">
          <source>Formats without separators (e.g. &quot;ddMM&quot;) are supported but must be used with care, as the resulting strings aren't always reliably readable (e.g. if &quot;dM&quot; produces &quot;212&quot; it could mean either the 2nd of December or the 21st of February).</source>
          <target state="translated">구분 기호가없는 형식 (예 : &quot;ddMM&quot;)은 지원되지만 결과 문자열을 항상 읽을 수있는 것은 아니기 때문에주의해서 사용해야합니다 (예 : &quot;dM&quot;이 &quot;212&quot;를 생성하는 경우 12 월 2 일 또는 21 일을 의미 할 수 있음) 이월).</target>
        </trans-unit>
        <trans-unit id="7c2dc2e6b3923022b30cc0fea274ab9780880fb1" translate="yes" xml:space="preserve">
          <source>Formatting Options</source>
          <target state="translated">서식 옵션</target>
        </trans-unit>
        <trans-unit id="0b9e0e6c1a39be6ced70e4a9f004135e8de30746" translate="yes" xml:space="preserve">
          <source>Formatting and drawing a paragraph of plain text is straightforward. The example below will lay out a paragraph of text, using a single font, around the right hand edge of a circle.</source>
          <target state="translated">일반 텍스트 단락의 서식을 지정하고 그리는 것은 간단합니다. 아래 예제는 원의 오른쪽 가장자리 주위에 단일 글꼴을 사용하여 텍스트 단락을 배치합니다.</target>
        </trans-unit>
        <trans-unit id="b8131bd8ed599627cca0a5839bdeedafade33470" translate="yes" xml:space="preserve">
          <source>Formatting can be applied to the current text document using the &lt;a href=&quot;qtextcursor#setCharFormat&quot;&gt;setCharFormat&lt;/a&gt;(), &lt;a href=&quot;qtextcursor#mergeCharFormat&quot;&gt;mergeCharFormat&lt;/a&gt;(), &lt;a href=&quot;qtextcursor#setBlockFormat&quot;&gt;setBlockFormat&lt;/a&gt;() and &lt;a href=&quot;qtextcursor#mergeBlockFormat&quot;&gt;mergeBlockFormat&lt;/a&gt;() functions. The 'set' functions will replace the cursor's current character or block format, while the 'merge' functions add the given format properties to the cursor's current format. If the cursor has a selection, the given format is applied to the current selection. Note that when only a part of a block is selected, the block format is applied to the entire block. The text at the current character position can be turned into a list using &lt;a href=&quot;qtextcursor#createList&quot;&gt;createList&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qtextcursor#setCharFormat&quot;&gt;setCharFormat&lt;/a&gt; (), &lt;a href=&quot;qtextcursor#mergeCharFormat&quot;&gt;mergeCharFormat&lt;/a&gt; (), &lt;a href=&quot;qtextcursor#setBlockFormat&quot;&gt;setBlockFormat&lt;/a&gt; () 및 &lt;a href=&quot;qtextcursor#mergeBlockFormat&quot;&gt;mergeBlockFormat&lt;/a&gt; () 함수를 사용하여 현재 텍스트 문서에 서식을 적용 할 수 있습니다 . 'set'함수는 커서의 현재 문자 또는 블록 형식을 대체하는 반면 'merge'함수는 주어진 형식 속성을 커서의 현재 형식에 추가합니다. 커서에 선택 항목이 있으면 주어진 형식이 현재 선택 항목에 적용됩니다. 블록의 일부만 선택하면 블록 형식이 전체 블록에 적용됩니다. &lt;a href=&quot;qtextcursor#createList&quot;&gt;createList&lt;/a&gt; ()를 사용하여 현재 문자 위치의 텍스트를 목록으로 바꿀 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="db97aee41875cf3afed92439a4bcfb157de4a6cf" translate="yes" xml:space="preserve">
          <source>Formatting information for a QTextDocument</source>
          <target state="translated">QTextDocument에 대한 정보 포맷</target>
        </trans-unit>
        <trans-unit id="96fdb0cd1caf828137f137aaf3898a2cff0ec2c0" translate="yes" xml:space="preserve">
          <source>Formatting information for blocks of text in a QTextDocument</source>
          <target state="translated">QTextDocument에서 텍스트 블록에 대한 정보 형식화</target>
        </trans-unit>
        <trans-unit id="a94448f21cb42b1ac80bf77c4193accaf9a409b5" translate="yes" xml:space="preserve">
          <source>Formatting information for characters in a QTextDocument</source>
          <target state="translated">QTextDocument에서 문자에 대한 정보 형식화</target>
        </trans-unit>
        <trans-unit id="68603335c66269158ab31301543032856a36d7b9" translate="yes" xml:space="preserve">
          <source>Formatting information for frames in a QTextDocument</source>
          <target state="translated">QTextDocument에서 프레임 정보 포맷</target>
        </trans-unit>
        <trans-unit id="b3c1db904fc439d1049bc7f091e95983fc6426f7" translate="yes" xml:space="preserve">
          <source>Formatting information for images in a QTextDocument</source>
          <target state="translated">QTextDocument에서 이미지에 대한 정보 형식화</target>
        </trans-unit>
        <trans-unit id="82fe63945ca7355ff7f33cac4d0313706dc2fcf9" translate="yes" xml:space="preserve">
          <source>Formatting information for lists in a QTextDocument</source>
          <target state="translated">QTextDocument에서리스트의 형식 정보</target>
        </trans-unit>
        <trans-unit id="d855d2c6ecf517cd742e596c2bea7337de4645ea" translate="yes" xml:space="preserve">
          <source>Formatting information for table cells in a QTextDocument</source>
          <target state="translated">QTextDocument에서 테이블 셀에 대한 정보 형식화</target>
        </trans-unit>
        <trans-unit id="c68946bcfe1cc6d46d30cb29da53bbc19cc53444" translate="yes" xml:space="preserve">
          <source>Formatting information for tables in a QTextDocument</source>
          <target state="translated">QTextDocument에서 테이블에 대한 정보 형식화</target>
        </trans-unit>
        <trans-unit id="515a8233b9fbdd9464b6647de800b809378ed40b" translate="yes" xml:space="preserve">
          <source>Formatting of very large or very small &lt;code&gt;xs:double&lt;/code&gt;, &lt;code&gt;xs:float&lt;/code&gt;, and &lt;code&gt;xs:decimal&lt;/code&gt; values may be incorrect.</source>
          <target state="translated">매우 크거나 매우 작은 &lt;code&gt;xs:double&lt;/code&gt; , &lt;code&gt;xs:float&lt;/code&gt; 및 &lt;code&gt;xs:decimal&lt;/code&gt; 값의 형식이 올바르지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68d06bf16be8c67030d75fcf3cd633b31f19b871" translate="yes" xml:space="preserve">
          <source>Forms created in</source>
          <target state="translated">에서 만든 양식</target>
        </trans-unit>
        <trans-unit id="dd8b1f162d66a6b0e75108ce8a73568738ea97e4" translate="yes" xml:space="preserve">
          <source>Forms created with</source>
          <target state="translated">로 만든 양식</target>
        </trans-unit>
        <trans-unit id="dd3699314d03ccd362e988509e6c96d0ce06503d" translate="yes" xml:space="preserve">
          <source>Fortunately .NET provides a generic wrapper for COM objects, the</source>
          <target state="translated">다행히 .NET은 COM 개체에 대한 일반적인 래퍼를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c005499309629c2dd1540384f9d88388c2791d54" translate="yes" xml:space="preserve">
          <source>Forums</source>
          <target state="translated">Forums</target>
        </trans-unit>
        <trans-unit id="ba4e72261283258434788542ba397135c10f39d8" translate="yes" xml:space="preserve">
          <source>Forward</source>
          <target state="translated">Forward</target>
        </trans-unit>
        <trans-unit id="6d7cae7a5193709f3968d9862d4fbeb511b47730" translate="yes" xml:space="preserve">
          <source>Forward Declared Pointers</source>
          <target state="translated">전달 선언 포인터</target>
        </trans-unit>
        <trans-unit id="4ebaa9dee10515b24881ac9bb750c83a9f0dbf99" translate="yes" xml:space="preserve">
          <source>Forward Iterator</source>
          <target state="translated">순방향 반복자</target>
        </trans-unit>
        <trans-unit id="773e59b851cae890ae571219d5418b70b1ec7f4f" translate="yes" xml:space="preserve">
          <source>Forward Iterators</source>
          <target state="translated">순방향 반복자</target>
        </trans-unit>
        <trans-unit id="81ee647947e28a67259a4d7a76af75e3d3486e2a" translate="yes" xml:space="preserve">
          <source>Forward Remote Objects from another network</source>
          <target state="translated">다른 네트워크에서 원격 객체 전달</target>
        </trans-unit>
        <trans-unit id="b2e9a3d2994b0a901c011754ffad0522f5c23d5a" translate="yes" xml:space="preserve">
          <source>Forward Remote Objects to another network</source>
          <target state="translated">원격 객체를 다른 네트워크로 전달</target>
        </trans-unit>
        <trans-unit id="47754b8e3e971532dbafc6385368ca4a55e2129a" translate="yes" xml:space="preserve">
          <source>Forward diagonal lines.</source>
          <target state="translated">전방 대각선.</target>
        </trans-unit>
        <trans-unit id="e877334ae9532bac1dfdae68841164386607e433" translate="yes" xml:space="preserve">
          <source>Forward direction (Default)</source>
          <target state="translated">정방향 (기본값)</target>
        </trans-unit>
        <trans-unit id="b6aa9cb79d8e02976f813385d72d25820fd966a7" translate="yes" xml:space="preserve">
          <source>Forward only mode can be (depending on the driver) more memory efficient since results do not need to be cached. It will also improve performance on some databases. For this to be true, you must call &lt;code&gt;setForwardOnly()&lt;/code&gt; before the query is prepared or executed. Note that the constructor that takes a query and a database may execute the query.</source>
          <target state="translated">결과를 캐시 할 필요가 없으므로 정방향 전용 모드 (드라이버에 따라 다름)의 메모리 효율성이 향상 될 수 있습니다. 또한 일부 데이터베이스의 성능을 향상시킵니다. 이것이 사실이 되려면 쿼리를 준비하거나 실행하기 전에 &lt;code&gt;setForwardOnly()&lt;/code&gt; 를 호출해야합니다 . 쿼리와 데이터베이스를 생성하는 생성자가 쿼리를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e41728f3783b0a48fcd1b6dac7d9490a3ea8844" translate="yes" xml:space="preserve">
          <source>Forward only mode is off by default.</source>
          <target state="translated">전달 전용 모드는 기본적으로 해제되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="163876d0bf2ea263db045f1e983877a39d791bbc" translate="yes" xml:space="preserve">
          <source>Forward rendering is what OpenGL traditionally uses. It renders directly to the backbuffer one object at a time shading each one as it goes.</source>
          <target state="translated">포워드 렌더링은 OpenGL이 전통적으로 사용하는 방식입니다. 한 번에 하나의 오브젝트를 음영 처리하여 백 버퍼에 직접 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="46f9332935c35e73d9fec678e37754c900e3c551" translate="yes" xml:space="preserve">
          <source>Forward rendering is when you use OpenGL in its traditional manner and render directly to the backbuffer one object at a time shading each one as we go. This is opposed to &lt;a href=&quot;#deferred-renderer&quot;&gt;deferred rendering&lt;/a&gt; where we render to an intermediate</source>
          <target state="translated">순방향 렌더링은 기존 방식으로 OpenGL을 사용하고 각 객체를 음영 처리 할 때 한 번에 하나씩 객체를 백 버퍼로 직접 렌더링하는 것입니다. 이것은 중간에 렌더링하는 &lt;a href=&quot;#deferred-renderer&quot;&gt;지연 렌더링&lt;/a&gt; 과 반대입니다.</target>
        </trans-unit>
        <trans-unit id="9e3ae680df5c0805e6498abb1b15579e64b8318c" translate="yes" xml:space="preserve">
          <source>Forward rendering is when you use OpenGL in its traditional manner and render directly to the backbuffer one object at a time shading each one as we go. This is opposed to &lt;a href=&quot;qt3drender-framegraph#deferred-renderer&quot;&gt;deferred rendering&lt;/a&gt; where we render to an intermediate</source>
          <target state="translated">포워드 렌더링은 OpenGL을 기존 방식으로 사용하고 한 번에 하나씩 백 버퍼에 직접 렌더링하여 각 개체를 음영 처리하는 것입니다. 이것은 중간에 렌더링하는 &lt;a href=&quot;qt3drender-framegraph#deferred-renderer&quot;&gt;지연된 렌더링&lt;/a&gt; 과 반대입니다.</target>
        </trans-unit>
        <trans-unit id="55834bc470e38e1b4edacd9030b408d83cf1d79f" translate="yes" xml:space="preserve">
          <source>Forward-declares a Core Foundation</source>
          <target state="translated">핵심 재단을 선포</target>
        </trans-unit>
        <trans-unit id="93ae785d325f955f26898226dfc4c18d8042d2e7" translate="yes" xml:space="preserve">
          <source>Forward-declares a mutable Core Foundation</source>
          <target state="translated">가변 핵심 재단을 앞으로 선언</target>
        </trans-unit>
        <trans-unit id="0a9b890982b5a27ab7c7e93335a4ca737c201e32" translate="yes" xml:space="preserve">
          <source>Forward-declares an Objective-C</source>
          <target state="translated">Objective-C를 앞으로 선언</target>
        </trans-unit>
        <trans-unit id="d20ad82aae2db29c22a21b949116979b4c894590" translate="yes" xml:space="preserve">
          <source>ForwardRenderer</source>
          <target state="translated">ForwardRenderer</target>
        </trans-unit>
        <trans-unit id="cfa5b49905b925941c7a23d207e5a59d8b619642" translate="yes" xml:space="preserve">
          <source>ForwardRenderer (QML type)</source>
          <target state="translated">ForwardRenderer (QML 유형)</target>
        </trans-unit>
        <trans-unit id="e478a9414850144d1dced15f292c1958823b6460" translate="yes" xml:space="preserve">
          <source>ForwardRenderer QML Type</source>
          <target state="translated">ForwardRenderer QML 유형</target>
        </trans-unit>
        <trans-unit id="a9860cc28bcf3091740f78d95aee4d3b79eefa5c" translate="yes" xml:space="preserve">
          <source>ForwardRenderer is a single leaf &lt;a href=&quot;qt3drender-framegraph&quot;&gt;FrameGraph&lt;/a&gt; tree which contains a Viewport, a &lt;a href=&quot;qml-qt3d-render-cameraselector&quot;&gt;CameraSelector&lt;/a&gt;, and a &lt;a href=&quot;qml-qt3d-render-clearbuffers&quot;&gt;ClearBuffers&lt;/a&gt;. The ForwardRenderer has a default requirement filter key whose name is &quot;renderingStyle&quot; and value &quot;forward&quot;. If you need to filter out your techniques, you should do so based on that filter key.</source>
          <target state="translated">ForwardRenderer는 Viewport, &lt;a href=&quot;qml-qt3d-render-cameraselector&quot;&gt;CameraSelector&lt;/a&gt; 및 &lt;a href=&quot;qml-qt3d-render-clearbuffers&quot;&gt;ClearBuffers&lt;/a&gt; 를 포함 하는 단일 리프 &lt;a href=&quot;qt3drender-framegraph&quot;&gt;FrameGraph&lt;/a&gt; 트리입니다 . ForwardRenderer에는 이름이 &quot;renderingStyle&quot;이고 값이 &quot;forward&quot;인 기본 요구 사항 필터 키가 있습니다. 기술을 필터링해야하는 경우 해당 필터 키를 기반으로해야합니다.</target>
        </trans-unit>
        <trans-unit id="025e81f4fb2eda9c6f0805d805c330c5a4cd04a9" translate="yes" xml:space="preserve">
          <source>ForwardRenderer.buffersToClear</source>
          <target state="translated">ForwardRenderer.buffersToClear</target>
        </trans-unit>
        <trans-unit id="798ab501f5ae17fd2f32e8f3f50cf650da7e831d" translate="yes" xml:space="preserve">
          <source>ForwardRenderer.camera</source>
          <target state="translated">ForwardRenderer.camera</target>
        </trans-unit>
        <trans-unit id="203bc03c1dd7f441c7955e265528efa0b7a68271" translate="yes" xml:space="preserve">
          <source>ForwardRenderer.clearColor</source>
          <target state="translated">ForwardRenderer.clearColor</target>
        </trans-unit>
        <trans-unit id="c923afc0ea2989c2b2ece9befa1e9aa33edd03a5" translate="yes" xml:space="preserve">
          <source>ForwardRenderer.externalRenderTargetSize</source>
          <target state="translated">ForwardRenderer.externalRenderTargetSize</target>
        </trans-unit>
        <trans-unit id="7ceda23efa3d88cafd50d56b1a1009f4f38e7a01" translate="yes" xml:space="preserve">
          <source>ForwardRenderer.frustumCulling</source>
          <target state="translated">ForwardRenderer.frustumCulling</target>
        </trans-unit>
        <trans-unit id="08196b316901ec5b218832870870b00be19625cb" translate="yes" xml:space="preserve">
          <source>ForwardRenderer.gamma</source>
          <target state="translated">ForwardRenderer.gamma</target>
        </trans-unit>
        <trans-unit id="33cf451ab7ad36c189b76bf9b0d272a9d6dda872" translate="yes" xml:space="preserve">
          <source>ForwardRenderer.showDebugOverlay</source>
          <target state="translated">ForwardRenderer.showDebugOverlay</target>
        </trans-unit>
        <trans-unit id="d295c947a780c49067e34dee119372e7e12433a3" translate="yes" xml:space="preserve">
          <source>ForwardRenderer.surface</source>
          <target state="translated">ForwardRenderer.surface</target>
        </trans-unit>
        <trans-unit id="294875901290ca1a0394d835ac910bbf1e4b3e5e" translate="yes" xml:space="preserve">
          <source>ForwardRenderer.viewportRect</source>
          <target state="translated">ForwardRenderer.viewportRect</target>
        </trans-unit>
        <trans-unit id="5c76ec687a8f2bd9225af307ea7de50c1263c506" translate="yes" xml:space="preserve">
          <source>Forwards remote objects to another network.</source>
          <target state="translated">원격 개체를 다른 네트워크로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="a90b14b0ed1454f035978f03a7977f3258c95435" translate="yes" xml:space="preserve">
          <source>Four axes that each contain one node only.</source>
          <target state="translated">각각 하나의 노드 만 포함하는 네 개의 축.</target>
        </trans-unit>
        <trans-unit id="eda3d18308ae2a45e02e48a97ccb30a1b1569050" translate="yes" xml:space="preserve">
          <source>Four-sided pyramid.</source>
          <target state="translated">사면 피라미드.</target>
        </trans-unit>
        <trans-unit id="00491e8d57e1b077d4395dcfb17d7930d0b7df35" translate="yes" xml:space="preserve">
          <source>Fragment shader</source>
          <target state="translated">프래그먼트 셰이더</target>
        </trans-unit>
        <trans-unit id="73519ee38be259d76b937382c01b0824b9f0421a" translate="yes" xml:space="preserve">
          <source>Fragment shader written in the OpenGL Shading Language (GLSL).</source>
          <target state="translated">GLSL (OpenGL Shading Language)로 작성된 조각 쉐이더.</target>
        </trans-unit>
        <trans-unit id="f853cf392460465b5ab597bc33d19f0a79cd1350" translate="yes" xml:space="preserve">
          <source>Fragment world position.</source>
          <target state="translated">조각 세계 위치.</target>
        </trans-unit>
        <trans-unit id="353998cb48f0357f4bf63a595cacc6f66fdef464" translate="yes" xml:space="preserve">
          <source>Fragmentation</source>
          <target state="translated">Fragmentation</target>
        </trans-unit>
        <trans-unit id="3500b3b478ec5ea8149e766a5b856fb9a9cce262" translate="yes" xml:space="preserve">
          <source>Fragmentation can be avoided by utilizing pool allocators (and other contiguous memory allocators), by reducing the amount of memory which is allocated at any one time by carefully managing object lifetimes, by periodically cleansing and rebuilding caches, or by utilizing a memory-managed runtime with garbage collection (such as JavaScript).</source>
          <target state="translated">풀 할당 자 (및 기타 인접한 메모리 할당 자)를 사용하거나, 오브젝트 수명을 신중하게 관리하여, 한 번에 할당되는 메모리 양을 줄이거 나, 정기적으로 캐시를 정리 및 재 구축하거나, 메모리 관리 런타임을 사용하여 조각화를 피할 수 있습니다. 가비지 수집 (예 : JavaScript)</target>
        </trans-unit>
        <trans-unit id="c61d1ea834bc197584ceb0ac6f15ef3a911866f8" translate="yes" xml:space="preserve">
          <source>Fragmentation is a C++ development issue. If the application developer is not defining any C++ types or plugins, they may safely ignore this section.</source>
          <target state="translated">조각화는 C ++ 개발 문제입니다. 응용 프로그램 개발자가 C ++ 유형 또는 플러그인을 정의하지 않으면이 섹션을 무시해도됩니다.</target>
        </trans-unit>
        <trans-unit id="91b0658329efa06d4da89c23a162b41dfcee5202" translate="yes" xml:space="preserve">
          <source>Frame</source>
          <target state="translated">Frame</target>
        </trans-unit>
        <trans-unit id="4d9f51860029c639dd7f317237ee2cc77a0979be" translate="yes" xml:space="preserve">
          <source>Frame (QML type)</source>
          <target state="translated">프레임 (QML 타입)</target>
        </trans-unit>
        <trans-unit id="5de36d1f43c6c92b18d9d0fe6d2311846d9fbd93" translate="yes" xml:space="preserve">
          <source>Frame Control</source>
          <target state="translated">프레임 컨트롤</target>
        </trans-unit>
        <trans-unit id="1c1f0c6745e627c3f582905d143cdcf8496e30da" translate="yes" xml:space="preserve">
          <source>Frame QML Type</source>
          <target state="translated">프레임 QML 유형</target>
        </trans-unit>
        <trans-unit id="524d16420964f93cf56b71b5952b388373886281" translate="yes" xml:space="preserve">
          <source>Frame around a MDI window or a docking window.</source>
          <target state="translated">MDI 창 또는 도킹 창 주위의 프레임.</target>
        </trans-unit>
        <trans-unit id="27c59b41abd4fb077c85f2e8565e881ec0aa93dc" translate="yes" xml:space="preserve">
          <source>Frame consists of one visual item: &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt;.</source>
          <target state="translated">프레임은 하나의 시각적 항목으로 구성됩니다 : &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0ebbd3e839146e7f424b79fd4a38b03b2e12a39e" translate="yes" xml:space="preserve">
          <source>Frame for an item of a status bar; see also &lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar&lt;/a&gt;.</source>
          <target state="translated">상태 표시 줄의 항목에 대한 프레임. &lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bddf18e402dc9a1be687e265baf22466f3b6cfee" translate="yes" xml:space="preserve">
          <source>Frame for popup windows/menus; see also &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt;.</source>
          <target state="translated">팝업 창 / 메뉴 용 프레임; &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d93da82e1b9a259fc24b2cd8ff73d314b6e53d5c" translate="yes" xml:space="preserve">
          <source>Frame for tab widgets.</source>
          <target state="translated">탭 위젯 용 프레임.</target>
        </trans-unit>
        <trans-unit id="1a809fad440bfa5ccce048fc44ac6f7e908f0e2c" translate="yes" xml:space="preserve">
          <source>Frame graph node for render capture</source>
          <target state="translated">렌더 캡처를위한 프레임 그래프 노드</target>
        </trans-unit>
        <trans-unit id="70ce20108d4b1057e00594d5f001cb376aef6e55" translate="yes" xml:space="preserve">
          <source>Frame graph node for render capture. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">렌더 캡처를위한 프레임 그래프 노드. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="07dc5fccb0946eff73240cf45adad450cfe9268e" translate="yes" xml:space="preserve">
          <source>Frame graph node for render capture. &lt;a href=&quot;qt3drender-qrendercapture#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">렌더 캡처를위한 프레임 그래프 노드. &lt;a href=&quot;qt3drender-qrendercapture#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="91084ccc66d375bb53d24dd8c5c0317e78034d69" translate="yes" xml:space="preserve">
          <source>Frame is used to layout a logical group of controls together within a visual frame. Frame does not provide a layout of its own, but requires you to position its contents, for instance by creating a &lt;a href=&quot;qml-qtquick-layouts-rowlayout&quot;&gt;RowLayout&lt;/a&gt; or a &lt;a href=&quot;qml-qtquick-layouts-columnlayout&quot;&gt;ColumnLayout&lt;/a&gt;.</source>
          <target state="translated">프레임은 시각적 프레임 내에서 논리적 컨트롤 그룹을 함께 레이아웃하는 데 사용됩니다. 프레임 자체의 레이아웃을 제공하지만, 만들어 예를 들어, 그 내용을 위치하도록 요구하지 않습니다 &lt;a href=&quot;qml-qtquick-layouts-rowlayout&quot;&gt;RowLayout&lt;/a&gt; 또는 &lt;a href=&quot;qml-qtquick-layouts-columnlayout&quot;&gt;columnLayout도를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d09919a4601aa3a6d45ccb2587fdcd2593381baf" translate="yes" xml:space="preserve">
          <source>Frame number of the end of the animation. The value is available after the animation has been loaded and ready to play.</source>
          <target state="translated">애니메이션 끝의 프레임 번호입니다. 애니메이션이로드되고 재생할 준비가되면이 값을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c8c17ef99f431c0b70d63683cb404bcb41ae6fd" translate="yes" xml:space="preserve">
          <source>Frame number of the start of the animation. The value is available after the animation has been loaded and ready to play.</source>
          <target state="translated">애니메이션 시작의 프레임 번호입니다. 애니메이션이로드되고 재생할 준비가되면이 값을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="447a4c4f3878bd7da036a234a2e748cf6be32792" translate="yes" xml:space="preserve">
          <source>Frame or iframe.</source>
          <target state="translated">프레임 또는 iframe.</target>
        </trans-unit>
        <trans-unit id="4cd8ea545ae4741b41cc89927decee72424933d2" translate="yes" xml:space="preserve">
          <source>Frame size is 16384 octets</source>
          <target state="translated">프레임 크기는 16384 옥텟입니다.</target>
        </trans-unit>
        <trans-unit id="784c4fc606f5f56c9546b766403519676b6ee5be" translate="yes" xml:space="preserve">
          <source>Frame width of a combo box, defaults to PM_DefaultFrameWidth.</source>
          <target state="translated">콤보 상자의 프레임 너비는 기본적으로 PM_DefaultFrameWidth입니다.</target>
        </trans-unit>
        <trans-unit id="734de2b6ae41fa53e5542425b14041632670fb8e" translate="yes" xml:space="preserve">
          <source>Frame width of a dock window.</source>
          <target state="translated">독 창의 프레임 너비.</target>
        </trans-unit>
        <trans-unit id="e561a4323295f4044d60e9c8e68f65061f480d22" translate="yes" xml:space="preserve">
          <source>Frame width of a menu bar, defaults to PM_DefaultFrameWidth.</source>
          <target state="translated">메뉴 막대의 프레임 너비이며 기본값은 PM_DefaultFrameWidth입니다.</target>
        </trans-unit>
        <trans-unit id="9250416784be03fc1dc8fd4cb6602a8fae1e9408" translate="yes" xml:space="preserve">
          <source>Frame width of a spin box, defaults to PM_DefaultFrameWidth.</source>
          <target state="translated">스핀 상자의 프레임 너비는 기본적으로 PM_DefaultFrameWidth입니다.</target>
        </trans-unit>
        <trans-unit id="bd608ddffceaad86e861a1553a2925ad3fbe7558" translate="yes" xml:space="preserve">
          <source>Frame width of an MDI window.</source>
          <target state="translated">MDI 창의 프레임 너비</target>
        </trans-unit>
        <trans-unit id="7ecaa913f10e5c0188e7ee32dff66b77d80e1d19" translate="yes" xml:space="preserve">
          <source>FrameAction</source>
          <target state="translated">FrameAction</target>
        </trans-unit>
        <trans-unit id="d8ccaab221fab8e763609419aa9d18ede877a287" translate="yes" xml:space="preserve">
          <source>FrameAction (QML type)</source>
          <target state="translated">FrameAction (QML 유형)</target>
        </trans-unit>
        <trans-unit id="b8a256ea0cc706ff974aba17a7f656d30fc6058b" translate="yes" xml:space="preserve">
          <source>FrameAction QML Type</source>
          <target state="translated">FrameAction QML 유형</target>
        </trans-unit>
        <trans-unit id="5f121e7fc3024c365d8fb9d7eb0962eab58243cc" translate="yes" xml:space="preserve">
          <source>FrameAction.triggered()</source>
          <target state="translated">FrameAction.triggered()</target>
        </trans-unit>
        <trans-unit id="17e843ae2d31b06c1349b190efbe97f5e520ae0b" translate="yes" xml:space="preserve">
          <source>FrameGraph Rules</source>
          <target state="translated">프레임 그래프 규칙</target>
        </trans-unit>
        <trans-unit id="2c4861a5f5b7ae18389187b878db7dfbd02dae31" translate="yes" xml:space="preserve">
          <source>FrameGraph node offers a way of specifying a set of QRenderState objects to be applied during the execution of a framegraph branch</source>
          <target state="translated">FrameGraph 노드는 프레임 그래프 분기 실행 중에 적용될 QRenderState 객체 세트를 지정하는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="702ccf7e12ee5d34d3098084b3636fe656e9326d" translate="yes" xml:space="preserve">
          <source>FrameGraph node to issue work for the compute shader on GPU</source>
          <target state="translated">GPU에서 컴퓨팅 셰이더에 대한 작업을 발행 할 FrameGraph 노드</target>
        </trans-unit>
        <trans-unit id="ba025b39de3924970add3204e853390e736557eb" translate="yes" xml:space="preserve">
          <source>FrameGraph node to issue work for the compute shader on GPU. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">GPU에서 컴퓨팅 셰이더에 대한 작업을 발행 할 FrameGraph 노드 &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="21dfed317270f9f94cc61e5773c26e006b4f02ec" translate="yes" xml:space="preserve">
          <source>FrameGraph node to issue work for the compute shader on GPU. &lt;a href=&quot;qt3drender-qdispatchcompute#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">GPU에서 컴퓨팅 셰이더에 대한 작업을 발행 할 FrameGraph 노드 &lt;a href=&quot;qt3drender-qdispatchcompute#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="278cb5ddeb8c418a3bb71c7aadc0bdf1c036b4b6" translate="yes" xml:space="preserve">
          <source>FrameGraph node to transfer a rectangle of pixel values from one region of a render target to another</source>
          <target state="translated">렌더링 대상의 한 영역에서 다른 영역으로 픽셀 값의 사각형을 전송하는 FrameGraph 노드</target>
        </trans-unit>
        <trans-unit id="8d1f51cc21b362c33728c7880044e4b895ab097a" translate="yes" xml:space="preserve">
          <source>FrameGraph node to transfer a rectangle of pixel values from one region of a render target to another. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">렌더링 대상의 한 영역에서 다른 영역으로 픽셀 값의 사각형을 전송하는 FrameGraph 노드. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4858f8929d5be6995a58691040660610b9e57353" translate="yes" xml:space="preserve">
          <source>FrameGraph node to transfer a rectangle of pixel values from one region of a render target to another. &lt;a href=&quot;qt3drender-qblitframebuffer#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">렌더링 대상의 한 영역에서 다른 영역으로 픽셀 값의 사각형을 전송하는 FrameGraph 노드. &lt;a href=&quot;qt3drender-qblitframebuffer#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="49a086ee366d7e38c7dad1f5458d5c045148ea18" translate="yes" xml:space="preserve">
          <source>FrameGraphNode</source>
          <target state="translated">FrameGraphNode</target>
        </trans-unit>
        <trans-unit id="a3b5b88fd640e59c6885cb45ad70dc7f4cded58e" translate="yes" xml:space="preserve">
          <source>FrameGraphNode (QML type)</source>
          <target state="translated">FrameGraphNode (QML 유형)</target>
        </trans-unit>
        <trans-unit id="4a7d14e940bcc0818c877dd4cbb1c9f7e67c7165" translate="yes" xml:space="preserve">
          <source>FrameGraphNode QML Type</source>
          <target state="translated">FrameGraphNode QML 유형</target>
        </trans-unit>
        <trans-unit id="100f4646a9273832dfccc386647382a34b27d694" translate="yes" xml:space="preserve">
          <source>FrameGraphNode used to insert a fence in the graphics command stream</source>
          <target state="translated">그래픽 명령 스트림에 울타리를 삽입하는 데 사용되는 FrameGraphNode</target>
        </trans-unit>
        <trans-unit id="fea915acd64b04732ab071a46cf9e662824ccba0" translate="yes" xml:space="preserve">
          <source>FrameGraphNode used to wait for a fence in the graphics command stream to become signaled</source>
          <target state="translated">그래픽 명령 스트림의 펜스가 신호를 받기를 기다리는 데 사용되는 FrameGraphNode</target>
        </trans-unit>
        <trans-unit id="4bc81b3c15fa58bb38350d37c67ab8da5aa55ed1" translate="yes" xml:space="preserve">
          <source>FrameRateRange Struct</source>
          <target state="translated">FrameRateRange Struct</target>
        </trans-unit>
        <trans-unit id="60dfc47df54605c64da42ae53a0990acb799cbeb" translate="yes" xml:space="preserve">
          <source>FrameRateRange::FrameRateRange()</source>
          <target state="translated">FrameRateRange::FrameRateRange()</target>
        </trans-unit>
        <trans-unit id="775d7a55010628ce21b78bb77ef89cd3f2e17f89" translate="yes" xml:space="preserve">
          <source>FrameRateRange::FrameRateRange(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">FrameRateRange::FrameRateRange(&lt;a href=&quot;#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="63437e28b84f3101a0d57b785ef224a7c80e8f70" translate="yes" xml:space="preserve">
          <source>FrameRateRange::FrameRateRange(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">FrameRateRange::FrameRateRange(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3f852cfebe794bd2e49dab23a80630cebbf299e2" translate="yes" xml:space="preserve">
          <source>FrameRateRange::maximumFrameRate</source>
          <target state="translated">FrameRateRange::maximumFrameRate</target>
        </trans-unit>
        <trans-unit id="470a9cefee0732491e7876c9c10aee5dd1a85fb8" translate="yes" xml:space="preserve">
          <source>FrameRateRange::minimumFrameRate</source>
          <target state="translated">FrameRateRange::minimumFrameRate</target>
        </trans-unit>
        <trans-unit id="250b85de7d619f7caa71749debacd80002c4dc76" translate="yes" xml:space="preserve">
          <source>Framebuffer device (FBDEV)</source>
          <target state="translated">프레임 버퍼 장치 (FBDEV)</target>
        </trans-unit>
        <trans-unit id="543d94b44c4341d0cc585bbebc8a302aa5cfaa4a" translate="yes" xml:space="preserve">
          <source>Framegraph Examples</source>
          <target state="translated">프레임 그래프 예</target>
        </trans-unit>
        <trans-unit id="e3e7a3833d19706ebf33b2c3baf8e05deeed7bca" translate="yes" xml:space="preserve">
          <source>Frames</source>
          <target state="translated">Frames</target>
        </trans-unit>
        <trans-unit id="ecd018439bef821ff1c6bca7bc39c3fc7740c85b" translate="yes" xml:space="preserve">
          <source>Frames are inserted by calling &lt;a href=&quot;qtextcursor#insertFrame&quot;&gt;insertFrame&lt;/a&gt;() with a specified format.</source>
          <target state="translated">지정된 형식으로 &lt;a href=&quot;qtextcursor#insertFrame&quot;&gt;insertFrame&lt;/a&gt; ()을 호출하여 프레임을 삽입 합니다.</target>
        </trans-unit>
        <trans-unit id="8c9df42e6d001783d5903f5dbea580a04d703deb" translate="yes" xml:space="preserve">
          <source>Frames are inserted into a document using the cursor, and will be placed within the cursor's current frame</source>
          <target state="translated">커서를 사용하여 프레임이 문서에 삽입되고 커서의 현재 프레임 내에 배치됩니다</target>
        </trans-unit>
        <trans-unit id="e11c307e1baefb85d5a82f56ba10a16c39727671" translate="yes" xml:space="preserve">
          <source>Frames are provided by the &lt;a href=&quot;qtextframe&quot;&gt;QTextFrame&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;qtextframe&quot;&gt;QTextFrame&lt;/a&gt; 클래스 에서 프레임을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="a6ecf5535ba16eeb3d47a17fe983cb7f1c17bdb4" translate="yes" xml:space="preserve">
          <source>Frames are used to enclose and group widgets, as well as to provide decoration. They are used as the foundation for more complex containers, but they can also be used as placeholders in forms.</source>
          <target state="translated">프레임은 장식을 제공 할뿐 아니라 위젯을 묶고 그룹화하는 데 사용됩니다. 이들은 더 복잡한 컨테이너의 기초로 사용되지만 형식의 자리 표시 자로도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1da73ff18f59e681520afad570793e7fece80ca0" translate="yes" xml:space="preserve">
          <source>Frames can be used to create hierarchical structures in rich text documents. Each document has a root frame (&lt;a href=&quot;qtextdocument#rootFrame&quot;&gt;QTextDocument::rootFrame&lt;/a&gt;()), and each frame beneath the root frame has a parent frame and a (possibly empty) list of child frames. The parent frame can be found with &lt;a href=&quot;qtextframe#parentFrame&quot;&gt;parentFrame&lt;/a&gt;(), and the &lt;a href=&quot;qtextframe#childFrames&quot;&gt;childFrames&lt;/a&gt;() function provides a list of child frames.</source>
          <target state="translated">프레임을 사용하여 서식있는 텍스트 문서에서 계층 구조를 만들 수 있습니다. 각 문서에는 루트 프레임 ( &lt;a href=&quot;qtextdocument#rootFrame&quot;&gt;QTextDocument :: rootFrame&lt;/a&gt; ())이 있으며 루트 프레임 아래의 각 프레임에는 부모 프레임과 (아마도 비어있는) 자식 프레임 목록이 있습니다. 부모 프레임은 &lt;a href=&quot;qtextframe#parentFrame&quot;&gt;parentFrame&lt;/a&gt; () 으로 찾을 수 있으며 &lt;a href=&quot;qtextframe#childFrames&quot;&gt;childFrames&lt;/a&gt; () 함수는 자식 프레임 목록을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4546d60658949b027c103b2de57eabca8a81e32f" translate="yes" xml:space="preserve">
          <source>Frames of type &lt;a href=&quot;qcanbusframe#FrameType-enum&quot;&gt;RemoteRequestFrame&lt;/a&gt; (RTR) do not have a payload. However they have to provide an indication of the responses expected payload length. To set the length expection it is necessary to set a fake payload whose length matches the expected payload length of the response. One way of doing this might be as follows:</source>
          <target state="translated">RTR ( &lt;a href=&quot;qcanbusframe#FrameType-enum&quot;&gt;RemoteRequestFrame&lt;/a&gt; ) 유형의 프레임 에는 페이로드가 없습니다. 그러나 응답 예상 페이로드 길이의 표시를 제공해야합니다. 길이 예상을 설정하려면 응답의 예상 페이로드 길이와 길이가 일치하는 가짜 페이로드를 설정해야합니다. 이를 수행하는 한 가지 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0d0b09dfb5d45add0e2f90ec8b193d96ace76d0c" translate="yes" xml:space="preserve">
          <source>Frames per second</source>
          <target state="translated">초당 프레임</target>
        </trans-unit>
        <trans-unit id="b4ff89116c5de5207f2560e79891888ebfe9a03d" translate="yes" xml:space="preserve">
          <source>Frames per second to show in the animation. Values below 0 are invalid.</source>
          <target state="translated">애니메이션에 표시 할 초당 프레임입니다. 0 미만의 값은 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1585752e07f4fe0ecd3630751daf4c235e41810f" translate="yes" xml:space="preserve">
          <source>Frames per second to show in the animation. Values less than or equal to &lt;code&gt;0&lt;/code&gt; are invalid.</source>
          <target state="translated">애니메이션에 표시 할 초당 프레임입니다. &lt;code&gt;0&lt;/code&gt; 보다 작거나 같은 값 은 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="90bd90a3dc64046506a2ff82526dc6bac346dda8" translate="yes" xml:space="preserve">
          <source>Frames within one animation must be the same size. However, multiple animations within the same file do not. Sprites without a &lt;a href=&quot;qml-qtquick-sprite#frameCount-prop&quot;&gt;frameCount&lt;/a&gt; specified assume that they take the entire file, and you must specify the frame size. Sprites without a frame size assume that they are square and take the entire file without wrapping, and you must specify a frame count.</source>
          <target state="translated">한 애니메이션 내의 프레임은 크기가 같아야합니다. 그러나 동일한 파일 내의 여러 애니메이션은 그렇지 않습니다. &lt;a href=&quot;qml-qtquick-sprite#frameCount-prop&quot;&gt;frameCount가&lt;/a&gt; 지정 되지 않은 스프라이트 는 전체 파일을 사용한다고 가정하고 프레임 크기를 지정해야합니다. 프레임 크기가없는 스프라이트는 정사각형으로 가정하고 줄 바꿈없이 전체 파일을 가져 오므로 프레임 수를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="af39dd055c3ef8226fbe929d048cafb094dc8a51" translate="yes" xml:space="preserve">
          <source>Frameworks</source>
          <target state="translated">Frameworks</target>
        </trans-unit>
        <trans-unit id="8ed8a84bef8f0b8c2a61ac128bf5a29f8425eeae" translate="yes" xml:space="preserve">
          <source>Frameworks &amp;amp; Libraries</source>
          <target state="translated">프레임 워크 및 라이브러리</target>
        </trans-unit>
        <trans-unit id="e1390541ea2476ad42f7c95b564ce2ae1481613a" translate="yes" xml:space="preserve">
          <source>Framing error detected by the hardware while reading data. This value is obsolete. We strongly advise against using it in new code.</source>
          <target state="translated">데이터를 읽는 중 하드웨어에서 프레임 오류를 감지했습니다. 이 값은 더 이상 사용되지 않습니다. 새로운 코드에서는 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="db17eb0663b4a693380fef920a6a1f3c8c7a0a3d" translate="yes" xml:space="preserve">
          <source>Free form text string</source>
          <target state="translated">자유 형식의 텍스트 문자열</target>
        </trans-unit>
        <trans-unit id="b845fdaff1bf49c014dff506cfa6bdc63dadd835" translate="yes" xml:space="preserve">
          <source>FreeBSD</source>
          <target state="translated">FreeBSD</target>
        </trans-unit>
        <trans-unit id="23d5e9ab7baab508cd6e0dca44cb0ee0e8a5705e" translate="yes" xml:space="preserve">
          <source>FreeBSD strtoll and strtoull, version 18b29f3fb8abee5d57ed8f4a44f806bec7e0eeff</source>
          <target state="translated">FreeBSD strtoll 및 strtoull, 버전 18b29f3fb8abee5d57ed8f4a44f806bec7e0eeff</target>
        </trans-unit>
        <trans-unit id="f233d2fb77313fb209443ed073263be71183888f" translate="yes" xml:space="preserve">
          <source>FreeTDS, a free implementation of the TDS protocol (&lt;a href=&quot;http://www.freetds.org&quot;&gt;http://www.freetds.org&lt;/a&gt;).</source>
          <target state="translated">TDS 프로토콜의 무료 구현 인 FreeTDS ( &lt;a href=&quot;http://www.freetds.org&quot;&gt;http://www.freetds.org&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="40293b3e02253eb68cf357321931bc1ef5ef5c88" translate="yes" xml:space="preserve">
          <source>FreeType</source>
          <target state="translated">FreeType</target>
        </trans-unit>
        <trans-unit id="d4697569ac5c9a357d77df4d84de55f40412e7b1" translate="yes" xml:space="preserve">
          <source>FreeType Formats</source>
          <target state="translated">프리 타입 형식</target>
        </trans-unit>
        <trans-unit id="158a0a94695f95d79be086075980190d3b9b44c2" translate="yes" xml:space="preserve">
          <source>Frees all graphics resources held by the blitter. Assumes that the OpenGL context, or another context sharing resources with it, that was current on the thread when invoking &lt;a href=&quot;qopengltextureblitter#create&quot;&gt;create&lt;/a&gt;() is current.</source>
          <target state="translated">블 리터가 보유한 모든 그래픽 리소스를 해제합니다. &lt;a href=&quot;qopengltextureblitter#create&quot;&gt;create&lt;/a&gt; () 를 호출 할 때 스레드에서 최신 상태 인 OpenGL 컨텍스트 또는 다른 컨텍스트와 자원을 공유하는 것으로 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="9d29fe2129a3c0d639654e59a44e81058c501d49" translate="yes" xml:space="preserve">
          <source>Frees the resources associated with the &lt;a href=&quot;qnetworkconfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;qnetworkconfiguration&quot;&gt;QNetworkConfiguration&lt;/a&gt; 오브젝트 와 연관된 자원을 해제 합니다.</target>
        </trans-unit>
        <trans-unit id="1a9149f82c1434d2bd77764907401c697767ee62" translate="yes" xml:space="preserve">
          <source>Frees the resources associated with the &lt;a href=&quot;qnetworkconfigurationmanager&quot;&gt;QNetworkConfigurationManager&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;qnetworkconfigurationmanager&quot;&gt;QNetworkConfigurationManager&lt;/a&gt; 객체 와 관련된 리소스를 해제 합니다.</target>
        </trans-unit>
        <trans-unit id="262cae5161e6ce3cc1d0d881bc15cc702fb34c7d" translate="yes" xml:space="preserve">
          <source>Frees the resources associated with the &lt;a href=&quot;qnetworkinterface&quot;&gt;QNetworkInterface&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;qnetworkinterface&quot;&gt;QNetworkInterface&lt;/a&gt; 오브젝트 와 연관된 자원을 해제 합니다.</target>
        </trans-unit>
        <trans-unit id="3845ddea269e752cd27f9d62f22806f170964a99" translate="yes" xml:space="preserve">
          <source>Frees the resources associated with the &lt;a href=&quot;qnetworksession&quot;&gt;QNetworkSession&lt;/a&gt; object.</source>
          <target state="translated">&lt;a href=&quot;qnetworksession&quot;&gt;QNetworkSession&lt;/a&gt; 객체 와 관련된 리소스를 해제 합니다.</target>
        </trans-unit>
        <trans-unit id="0bc906ed1175d5e9ca8e7691b02782c837b1932a" translate="yes" xml:space="preserve">
          <source>Frees the resources associated with this &lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; object.</source>
          <target state="translated">이 &lt;a href=&quot;qprocessenvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; 오브젝트 와 연관된 자원을 해제 합니다.</target>
        </trans-unit>
        <trans-unit id="67eb78c6ad34c700cc9b9a743c8dd28b93d5bc43" translate="yes" xml:space="preserve">
          <source>Frees up window system resources. Destroys the widget window if</source>
          <target state="translated">창 시스템 리소스를 비 웁니다. 다음과 같은 경우 위젯 창을 삭제합니다</target>
        </trans-unit>
        <trans-unit id="3738c332d9da04326b1e0b9da46bfc92147f1120" translate="yes" xml:space="preserve">
          <source>Freetype 2 - Bitmap Distribution Format (BDF) support</source>
          <target state="translated">프리 타입 2-BDF (Bitmap Distribution Format) 지원</target>
        </trans-unit>
        <trans-unit id="0c6426a7a04321c88791b7e77a167da4e3b3ceee" translate="yes" xml:space="preserve">
          <source>Freetype 2 - Portable Compiled Format (PCF) support</source>
          <target state="translated">Freetype 2-PCF (Portable Compiled Format) 지원</target>
        </trans-unit>
        <trans-unit id="56e02d5b091bf554fb59d16890c5f7f18dfafe31" translate="yes" xml:space="preserve">
          <source>Freetype 2 - zlib</source>
          <target state="translated">자유형 2-zlib</target>
        </trans-unit>
        <trans-unit id="6e264860336ad0553c445c4c2fd35076407ea738" translate="yes" xml:space="preserve">
          <source>Freetype 2, version 2.10.1</source>
          <target state="translated">Freetype 2, 버전 2.10.1</target>
        </trans-unit>
        <trans-unit id="6e94539577ff3095e9960a175638619ca46fbca5" translate="yes" xml:space="preserve">
          <source>Freetype 2, version 2.9.1</source>
          <target state="translated">프리 타입 2, 버전 2.9.1</target>
        </trans-unit>
        <trans-unit id="86ebb824e53d350ea08dae57472d2dcff22bd311" translate="yes" xml:space="preserve">
          <source>Freetype Project License or GNU General Public License v2.0 only</source>
          <target state="translated">프리 타입 프로젝트 라이센스 또는 GNU General Public License v2.0 전용</target>
        </trans-unit>
        <trans-unit id="44389f6a466eaabf5c1db729e369511134e2b03b" translate="yes" xml:space="preserve">
          <source>French</source>
          <target state="translated">French</target>
        </trans-unit>
        <trans-unit id="0957918c68ec3c521ba0aa562518af4aaf908a63" translate="yes" xml:space="preserve">
          <source>French (Canadian)</source>
          <target state="translated">프랑스어 (캐나다)</target>
        </trans-unit>
        <trans-unit id="328e4159124c80607e8d39c8d50f000f0e0c5a52" translate="yes" xml:space="preserve">
          <source>French - Canada</source>
          <target state="translated">프랑스어-캐나다</target>
        </trans-unit>
        <trans-unit id="b07fdbe0234dc2c5e98ee0de9742f52626859bfb" translate="yes" xml:space="preserve">
          <source>French - France</source>
          <target state="translated">프랑스어-프랑스</target>
        </trans-unit>
        <trans-unit id="f58f9f02549d8211217801bb6eaf28369041b873" translate="yes" xml:space="preserve">
          <source>French Layout</source>
          <target state="translated">프랑스어 레이아웃</target>
        </trans-unit>
        <trans-unit id="8f432ff0e57d9727180a6844e91f700588229032" translate="yes" xml:space="preserve">
          <source>French Layout (Canadian)</source>
          <target state="translated">프랑스어 레이아웃 (캐나다)</target>
        </trans-unit>
        <trans-unit id="d790b402d79ac1a723c790313bcd679999474630" translate="yes" xml:space="preserve">
          <source>Frequently Asked Questions</source>
          <target state="translated">자주 묻는 질문</target>
        </trans-unit>
        <trans-unit id="e7a4b4aa097b3ca7f05fc45d3b806a8d8e2e34f0" translate="yes" xml:space="preserve">
          <source>Fresnel power of the material. Default is &lt;code&gt;1.0&lt;/code&gt;.</source>
          <target state="translated">소재의 프레 넬 파워. 기본값은 &lt;code&gt;1.0&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3d28f8747f13ff9c728ab948edddf68934615ee9" translate="yes" xml:space="preserve">
          <source>Friction (QML type)</source>
          <target state="translated">마찰 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="1fb16a0be94b9bd18852ab961970dceb5450e277" translate="yes" xml:space="preserve">
          <source>Friction QML Type</source>
          <target state="translated">마찰 QML 유형</target>
        </trans-unit>
        <trans-unit id="cbf9d4ee07344cb6635d0dcabe881a7e2843daf4" translate="yes" xml:space="preserve">
          <source>Friction.factor</source>
          <target state="translated">Friction.factor</target>
        </trans-unit>
        <trans-unit id="020502da16f716bcf833c55ab668c32f129211e5" translate="yes" xml:space="preserve">
          <source>Friction.threshold</source>
          <target state="translated">Friction.threshold</target>
        </trans-unit>
        <trans-unit id="3e17065c4af7c83c4041e2e80fee29d8ec4e251d" translate="yes" xml:space="preserve">
          <source>Fridge Magnets</source>
          <target state="translated">냉장고 자석</target>
        </trans-unit>
        <trans-unit id="bee7e5ad1cd52d79197e8394451bc9e1d4f0d331" translate="yes" xml:space="preserve">
          <source>From 20 to 4084, it advances by doubling the size each time. More precisely, it advances to the next power of two, minus 12. (Some memory allocators perform worst when requested exact powers of two, because they use a few bytes per block for book-keeping.)</source>
          <target state="translated">20에서 4084까지 매번 크기를 두 배로 늘려갑니다. 보다 정확하게는, 12를 뺀 2의 다음 제곱으로 전진합니다. (일부 메모리 할당자는 정확한 2의 제곱을 요구할 때 최악의 성능을 발휘합니다. 이들은 블록을 유지하기 위해 블록 당 몇 바이트를 사용하기 때문입니다.)</target>
        </trans-unit>
        <trans-unit id="e5f76b425009c509fb2310082939b8f1a1411458" translate="yes" xml:space="preserve">
          <source>From 4.3 and above, any designable &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; can be set using the qproperty-&amp;lt;property name&amp;gt; syntax.</source>
          <target state="translated">4.3 이상에서 설계 가능한 &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; 에서 qproperty- &amp;lt;property name&amp;gt; 구문을 사용하여 를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81ac9e109dbccbd8597eb6a53471bc43833adacc" translate="yes" xml:space="preserve">
          <source>From 4084 on, it advances by blocks of 2048 characters (4096 bytes). This makes sense because modern operating systems don't copy the entire data when reallocating a buffer; the physical memory pages are simply reordered, and only the data on the first and last pages actually needs to be copied.</source>
          <target state="translated">4084부터 2048 자 (4096 바이트) 단위로 진행됩니다. 이것은 최신 운영 체제가 버퍼를 재 할당 할 때 전체 데이터를 복사하지 않기 때문에 의미가 있습니다. 실제 메모리 페이지는 단순히 재정렬되며 첫 페이지와 마지막 페이지의 데이터 만 실제로 복사하면됩니다.</target>
        </trans-unit>
        <trans-unit id="45aa15556263138f050033ad36b6035c03d9d993" translate="yes" xml:space="preserve">
          <source>From Qt 4.2, dynamic properties can be added to and removed from &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; instances at run-time. Dynamic properties do not need to be declared at compile-time, yet they provide the same advantages as static properties and are manipulated using the same API - using &lt;a href=&quot;qobject#property&quot;&gt;property&lt;/a&gt;() to read them and &lt;a href=&quot;qobject#setProperty&quot;&gt;setProperty&lt;/a&gt;() to write them.</source>
          <target state="translated">Qt 4.2부터는 런타임에 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 인스턴스에 동적 속성을 추가하거나 제거 할 수 있습니다 . 동적 속성은 컴파일 타임에 선언 할 필요는 없지만 정적 속성과 동일한 장점을 제공하며 동일한 API를 사용하여 &lt;a href=&quot;qobject#property&quot;&gt;속성&lt;/a&gt; ()을 사용하여 속성 을 읽고 &lt;a href=&quot;qobject#setProperty&quot;&gt;setProperty&lt;/a&gt; ()를 사용하여 조작 합니다.</target>
        </trans-unit>
        <trans-unit id="94c6d67c3c85c324024ab2d8f0b4f90491c43155" translate="yes" xml:space="preserve">
          <source>From Qt 4.2, dynamic properties can be added to and removed from QObject instances at run-time. Dynamic properties do not need to be declared at compile-time, yet they provide the same advantages as static properties and are manipulated using the same API - using &lt;a href=&quot;qobject#property&quot;&gt;property&lt;/a&gt;() to read them and &lt;a href=&quot;qobject#setProperty&quot;&gt;setProperty&lt;/a&gt;() to write them.</source>
          <target state="translated">Qt 4.2부터는 런타임에 QObject 인스턴스에 동적 속성을 추가하거나 제거 할 수 있습니다. 동적 속성은 컴파일 타임에 선언 할 필요가 없지만 정적 속성과 동일한 이점을 제공하며 동일한 API를 사용하여 조작합니다. &lt;a href=&quot;qobject#property&quot;&gt;속성&lt;/a&gt; ()을 사용하여 읽고 작성하려면 &lt;a href=&quot;qobject#setProperty&quot;&gt;setProperty&lt;/a&gt; ()를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b26d1090533e72948b8660180754d70dc915d22f" translate="yes" xml:space="preserve">
          <source>From Qt 4.3, dynamic properties are supported by &lt;a href=&quot;designer-widget-mode#the-property-editor&quot;&gt;Qt Designer&lt;/a&gt;, and both standard Qt widgets and user-created forms can be given dynamic properties.</source>
          <target state="translated">Qt 4.3부터 Qt &lt;a href=&quot;designer-widget-mode#the-property-editor&quot;&gt;Designer&lt;/a&gt; 는 동적 속성을 지원합니다 하며 표준 Qt 위젯과 사용자 작성 양식 모두 동적 속성을 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3620ca815a704916debb4ff3f77fd1e7d1dc19be" translate="yes" xml:space="preserve">
          <source>From Qt 4.5, you can include the function name plus '()' as a parameter to the &lt;b&gt;\overload&lt;/b&gt; command, which will include a standard</source>
          <target state="translated">Qt 4.5부터는 함수 이름에 '()'를 &lt;b&gt;\ overload&lt;/b&gt; 명령 의 매개 변수로 포함시킬 수 있습니다. 여기에는 표준이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c83638ab283c9af8a6f0bd33dede89b5d158dce1" translate="yes" xml:space="preserve">
          <source>From Qt 4.8 onwards, it is possible to deallocate objects that live in a thread that has just ended, by connecting the &lt;a href=&quot;qthread#finished&quot;&gt;finished&lt;/a&gt;() signal to &lt;a href=&quot;qobject#deleteLater&quot;&gt;QObject::deleteLater&lt;/a&gt;().</source>
          <target state="translated">Qt 4.8부터는 &lt;a href=&quot;qthread#finished&quot;&gt;완료된&lt;/a&gt; () 신호를 &lt;a href=&quot;qobject#deleteLater&quot;&gt;QObject :: deleteLater&lt;/a&gt; () 에 연결하여 방금 종료 한 스레드에있는 객체를 할당 해제 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0af4fca5f7c37bda5e0732871216dc577de8dee0" translate="yes" xml:space="preserve">
          <source>From Qt 5.0 onwards, Qt offers two different ways to write &lt;a href=&quot;https://doc.qt.io/qt-5.13/exceptionsafety.html#signals-and-slots&quot;&gt;signal-slot connections&lt;/a&gt; in C++: The</source>
          <target state="translated">Qt 5.0부터 Qt는 C ++에서 &lt;a href=&quot;https://doc.qt.io/qt-5.13/exceptionsafety.html#signals-and-slots&quot;&gt;신호 슬롯 연결&lt;/a&gt; 을 작성하는 두 가지 방법을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="43acfe5f82f8788d5fd4375e91e3c36db96820b1" translate="yes" xml:space="preserve">
          <source>From Qt 5.0 onwards, Qt offers two different ways to write &lt;a href=&quot;https://doc.qt.io/qt-5.15/exceptionsafety.html#signals-and-slots&quot;&gt;signal-slot connections&lt;/a&gt; in C++: The</source>
          <target state="translated">Qt 5.0부터 Qt는 C ++에서 &lt;a href=&quot;https://doc.qt.io/qt-5.15/exceptionsafety.html#signals-and-slots&quot;&gt;신호 슬롯 연결&lt;/a&gt; 을 작성하는 두 가지 방법을 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="4aed2f6706160309849829fed2d5af24d7d2def0" translate="yes" xml:space="preserve">
          <source>From Qt 5.10 and onwards, the only allowed values are 0 and -1. Passing the value -1 will reinitialize the global &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; seed to a random value, while the value of 0 is used to request a stable algorithm for C++ primitive types types (like &lt;code&gt;int&lt;/code&gt;) and string types (&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;).</source>
          <target state="translated">Qt 5.10부터는 허용되는 값은 0과 -1뿐입니다. -1 값을 전달하면 전역 &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; 시드가 임의의 값으로 다시 초기화되고 0 값은 C ++ 기본 유형 유형 ( &lt;code&gt;int&lt;/code&gt; 와 같은 ) 및 문자열 유형 ( &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; , &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; )에 대해 안정적인 알고리즘을 요청하는 데 사용됩니다 )에 .</target>
        </trans-unit>
        <trans-unit id="9f250ea49dad3800261471c8d99faa61c3ed99a5" translate="yes" xml:space="preserve">
          <source>From Qt 5.14 onwards, the default adaptation gains the option of rendering via a graphics abstraction layer, the Qt Rendering Hardware Interface (RHI), provided by the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtgui-module.html&quot;&gt;QtGui&lt;/a&gt; module. When enabled, no direct OpenGL calls are made. Rather, the scene graph renders by using the APIs provided by the abstraction layer, which is then translated into OpenGL, Vulkan, Metal, or Direct 3D calls. Shader handling is also unified by writing shader code once, compiling to &lt;a href=&quot;https://www.khronos.org/spir/&quot;&gt;SPIR-V&lt;/a&gt;, and then translating to the language appropriate for the various graphics APIs.</source>
          <target state="translated">Qt 5.14부터 기본 적응은 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtgui-module.html&quot;&gt;QtGui&lt;/a&gt; 모듈 에서 제공하는 그래픽 추상화 계층 인 Qt 렌더링 하드웨어 인터페이스 (RHI)를 통해 렌더링하는 옵션을 얻습니다 . 활성화되면 직접 OpenGL 호출이 수행되지 않습니다. 오히려 장면 그래프는 추상화 계층에서 제공하는 API를 사용하여 렌더링 한 다음 OpenGL, Vulkan, Metal 또는 Direct 3D 호출로 변환됩니다. 셰이더 처리는 셰이더 코드를 한 번 작성하고 &lt;a href=&quot;https://www.khronos.org/spir/&quot;&gt;SPIR-V로&lt;/a&gt; 컴파일 한 다음 다양한 그래픽 API에 적합한 언어로 번역하여 통합됩니다 .</target>
        </trans-unit>
        <trans-unit id="beda58a0701a52bdd40ba935dafb1aebc6f3b1e7" translate="yes" xml:space="preserve">
          <source>From Qt 5.3 and onwards, configure does not link Qt Core against ICU libraries anymore by default. This reduces the size of a self-contained application package considerably.</source>
          <target state="translated">Qt 5.3 이상부터 configure는 기본적으로 더 이상 ICU 라이브러리에 대해 Qt Core를 연결하지 않습니다. 이것은 자체 포함 된 응용 프로그램 패키지의 크기를 상당히 줄여줍니다.</target>
        </trans-unit>
        <trans-unit id="05a3524470b9d4a8524e8c0bd66c5fdc8a4dde38" translate="yes" xml:space="preserve">
          <source>From Qt 5.8 onwards, Qt Quick also supports rendering in software, with &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt;, and with Direct3D 12. This is realized by having additional scene graph adaptations, either in form of plugins (d3d12, openvg) or built-in to the Qt Quick library (software). The default adaptation continues to rely directly on OpenGL.</source>
          <target state="translated">Qt 5.8부터 Qt Quick은 &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; 및 Direct3D 12와 함께 소프트웨어에서 렌더링을 지원합니다 . 이는 플러그인 형태 (d3d12, openvg) 또는 Qt Quick 라이브러리에 내장 된 추가 장면 그래프 조정을 통해 실현됩니다. (소프트웨어). 기본 적응은 계속해서 OpenGL에 직접 의존합니다.</target>
        </trans-unit>
        <trans-unit id="980d2c8bb9db3aae13fd34375f01a085f89bfb55" translate="yes" xml:space="preserve">
          <source>From Qt 5.9 onwards, the Green Hills Software &lt;a href=&quot;http://www.ghs.com/products/rtos/integrity.html&quot;&gt;INTEGRITY&lt;/a&gt; Real-Time Operating System (RTOS) is a supported platform.</source>
          <target state="translated">Qt 5.9부터 Green Hills Software &lt;a href=&quot;http://www.ghs.com/products/rtos/integrity.html&quot;&gt;INTEGRITY&lt;/a&gt; RTOS (Real-Time Operating System)는 지원되는 플랫폼입니다.</target>
        </trans-unit>
        <trans-unit id="d80dc7f5859093336f82b9bdc179919a6c204f19" translate="yes" xml:space="preserve">
          <source>From Qt version 5.6 onwards, the officially supported version for OpenSSL is 1.0.0 or later.</source>
          <target state="translated">Qt 버전 5.6부터 공식적으로 지원되는 OpenSSL 버전은 1.0.0 이상입니다.</target>
        </trans-unit>
        <trans-unit id="7e15f8991b5e19bf100d46f86616ad50a72e64c5" translate="yes" xml:space="preserve">
          <source>From a system perspective though, selecting which sensor should be the default gets tricky. The sensors library uses the first registered identifier as the default. This means that the order in which the sensor backends are registered, is important so the system will allow a config file to determine the default instead.</source>
          <target state="translated">그러나 시스템 관점에서 볼 때 어떤 센서를 기본값으로 선택해야하는지 까다로워집니다. 센서 라이브러리는 첫 번째로 등록 된 식별자를 기본값으로 사용합니다. 이는 센서 백엔드가 등록되는 순서가 중요하므로 시스템에서 구성 파일이 기본값을 결정하도록 허용합니다.</target>
        </trans-unit>
        <trans-unit id="dea7fc03c90f91a8c33d233fbb6664452b6244a7" translate="yes" xml:space="preserve">
          <source>From the QDoc comment above, QDoc generates the HTML &lt;a href=&quot;qobject&quot;&gt;QObject class reference&lt;/a&gt; page.</source>
          <target state="translated">위의 QDoc 주석에서 QDoc은 HTML &lt;a href=&quot;qobject&quot;&gt;QObject 클래스 참조&lt;/a&gt; 페이지를 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="018b88c217dbd2618514c96375da8433ff61d47a" translate="yes" xml:space="preserve">
          <source>From the beginning of the string, match one digit, followed immediately by 0 or 1 more digit, followed immediately by end of string</source>
          <target state="translated">문자열의 시작 부분에서 한 자릿수와 일치 한 다음 즉시 0 또는 1 자릿수의 숫자를 더한 다음 즉시 문자열 끝을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="b65dd02e0f28161d3aeb96890e2e44fbf0b49796" translate="yes" xml:space="preserve">
          <source>From the check box in the panel, check also &lt;b&gt;Rotation&lt;/b&gt; and &lt;b&gt;Scale&lt;/b&gt;.</source>
          <target state="translated">패널의 확인란에서 &lt;b&gt;Rotation&lt;/b&gt; and &lt;b&gt;Scale도 선택&lt;/b&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="f8ef94ba6454947d57c3c14f45e90ee5c3830688" translate="yes" xml:space="preserve">
          <source>From the earlier Qt version, run &lt;code&gt;qmake &amp;amp;&amp;amp; make (&amp;amp;&amp;amp; make install)&lt;/code&gt;.</source>
          <target state="translated">이전 Qt 버전에서 &lt;code&gt;qmake &amp;amp;&amp;amp; make (&amp;amp;&amp;amp; make install)&lt;/code&gt; 을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="59fc2d03aee3f3884842b381b3f4b0533cc8ac84" translate="yes" xml:space="preserve">
          <source>From the file menu, select &lt;b&gt;File &amp;gt; Export &amp;gt; Collada (.dae)&lt;/b&gt;.</source>
          <target state="translated">파일 메뉴에서 &lt;b&gt;파일&amp;gt; 내보내기&amp;gt; Collada (.dae)를 선택&lt;/b&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="72f32f428f8aa6eef7c98e2ae86bf3fc8c3ef3b4" translate="yes" xml:space="preserve">
          <source>From the menu bar, select &lt;b&gt;File &amp;gt; Export As&lt;/b&gt;.</source>
          <target state="translated">메뉴 모음에서 &lt;b&gt;파일&amp;gt; 다른 이름으로 내보내기를&lt;/b&gt; 선택 &lt;b&gt;합니다&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="49fb30e417ad311170e9e14a16686396d8c16325" translate="yes" xml:space="preserve">
          <source>From the perspective of an application development platform, Qt runs on top of &lt;a href=&quot;http://www.qnx.com/products/neutrino-rtos/neutrino-rtos.html&quot;&gt;QNX Neutrino RTOS&lt;/a&gt;. System integrators and application developers use a QNX SDP (Software Development Platform) which includes QNX Neutrino RTOS components for various targets and a full set of development tools.</source>
          <target state="translated">애플리케이션 개발 플랫폼의 관점에서 Qt는 &lt;a href=&quot;http://www.qnx.com/products/neutrino-rtos/neutrino-rtos.html&quot;&gt;QNX Neutrino RTOS&lt;/a&gt; 위에서 실행됩니다 . 시스템 통합 업체 및 애플리케이션 개발자는 다양한 대상 및 전체 개발 도구 세트를위한 QNX Neutrino RTOS 구성 요소가 포함 된 QNX SDP (Software Development Platform)를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="dcbd51499ac7294984ce266069e3d9ba27ff0880" translate="yes" xml:space="preserve">
          <source>From the start of the string, match a digit, followed immediately by 0 or 1 digits</source>
          <target state="translated">문자열의 시작 부분에서 숫자를 일치시키고 0 또는 1 자리 숫자를 즉시 ​​찾습니다</target>
        </trans-unit>
        <trans-unit id="de902783b55249f7ccacd1e72b23c84fbbeff43f" translate="yes" xml:space="preserve">
          <source>From then on, &lt;code&gt;processOneThing()&lt;/code&gt; will be called repeatedly. It should be written in such a way that it always returns quickly (typically after processing one data item) so that Qt can deliver events to the user interface and stop the timer as soon as it has done all its work. This is the traditional way of implementing heavy work in GUI applications, but as multithreading is nowadays becoming available on more and more platforms, we expect that zero-millisecond &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; objects will gradually be replaced by &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt;s.</source>
          <target state="translated">그때부터 &lt;code&gt;processOneThing()&lt;/code&gt; 이 반복적으로 호출됩니다. Qt가 이벤트를 사용자 인터페이스에 전달하고 모든 작업을 완료하자마자 타이머를 중지 할 수 있도록 항상 빠르게 (일반적으로 하나의 데이터 항목을 처리 한 후) 리턴하는 방식으로 작성해야합니다. 이것은 GUI 애플리케이션에서 많은 작업을 수행하는 전통적인 방법이지만, 오늘날 점점 더 많은 플랫폼에서 멀티 스레딩을 사용할 수있게되면 0 밀리 초 &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; 객체가 점차 &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; 로 대체 될 것으로 예상 됩니다 .</target>
        </trans-unit>
        <trans-unit id="34cbcecd62ac3567df82b8f388fd6634bc92b5e4" translate="yes" xml:space="preserve">
          <source>From then on, &lt;code&gt;processOneThing()&lt;/code&gt; will be called repeatedly. It should be written in such a way that it always returns quickly (typically after processing one data item) so that Qt can deliver events to the user interface and stop the timer as soon as it has done all its work. This is the traditional way of implementing heavy work in GUI applications, but as multithreading is nowadays becoming available on more and more platforms, we expect that zero-millisecond QTimer objects will gradually be replaced by &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt;s.</source>
          <target state="translated">그때부터 &lt;code&gt;processOneThing()&lt;/code&gt; 이 반복적으로 호출됩니다. Qt가 사용자 인터페이스에 이벤트를 전달하고 모든 작업을 완료하자마자 타이머를 중지 할 수 있도록 항상 빠르게 (일반적으로 하나의 데이터 항목을 처리 한 후) 반환되도록 작성해야합니다. 이것은 GUI 애플리케이션에서 무거운 작업을 구현하는 전통적인 방법이지만, 멀티 스레딩이 점점 더 많은 플랫폼에서 사용 가능 해짐에 따라 0 밀리 초 QTimer 객체가 점차 &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; 로 대체 될 것으로 예상됩니다 .</target>
        </trans-unit>
        <trans-unit id="c140ea552fe762ff14cb7385ee3b817119bb48fa" translate="yes" xml:space="preserve">
          <source>From then on, the &lt;code&gt;update()&lt;/code&gt; slot is called every second.</source>
          <target state="translated">그때부터 &lt;code&gt;update()&lt;/code&gt; 슬롯이 1 초마다 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="399aa187720270080fc7b3457475287875bd3e37" translate="yes" xml:space="preserve">
          <source>From this result, it is possible to allocate the state of the desired signal by applying a mask &quot;AND&quot;, where the mask is the desired enumeration value from &lt;a href=&quot;qserialport#PinoutSignal-enum&quot;&gt;QSerialPort::PinoutSignals&lt;/a&gt;.</source>
          <target state="translated">이 결과로부터 마스크 &quot;AND&quot;를 적용하여 원하는 신호의 상태를 할당 할 수 있습니다. 여기서 마스크는 &lt;a href=&quot;qserialport#PinoutSignal-enum&quot;&gt;QSerialPort :: PinoutSignals&lt;/a&gt; 의 원하는 열거 값입니다 .</target>
        </trans-unit>
        <trans-unit id="7ca025b80031701d7a6f0309f6c8e668b6a0aff5" translate="yes" xml:space="preserve">
          <source>FromBase64Result Class</source>
          <target state="translated">FromBase64Result 클래스</target>
        </trans-unit>
        <trans-unit id="7aa52fa26708cf1436174f30af3f3f387117901f" translate="yes" xml:space="preserve">
          <source>Front Applies to front faces only</source>
          <target state="translated">전면 전면에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="13eab1f63ede7a63f6c0bffcf9d69b37319517ed" translate="yes" xml:space="preserve">
          <source>Front End, Back End</source>
          <target state="translated">프론트 엔드, 백엔드</target>
        </trans-unit>
        <trans-unit id="8e13ac179bfc0865da8d8b8651df4e98178669d1" translate="yes" xml:space="preserve">
          <source>FrontAndBack Applies to front and back faces</source>
          <target state="translated">FrontAndBack 앞면과 뒷면에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="07417e7d42b31e3c7a591920e3ba9e09f7d22026" translate="yes" xml:space="preserve">
          <source>FrontFace</source>
          <target state="translated">FrontFace</target>
        </trans-unit>
        <trans-unit id="b3eba241fbc680fc6ad3a5186b86e6641a334cfe" translate="yes" xml:space="preserve">
          <source>FrontFace (QML type)</source>
          <target state="translated">FrontFace (QML 유형)</target>
        </trans-unit>
        <trans-unit id="20fa1a6e7615cbcee751b5992301dce35011d738" translate="yes" xml:space="preserve">
          <source>FrontFace QML Type</source>
          <target state="translated">FrontFace QML 유형</target>
        </trans-unit>
        <trans-unit id="f1ff985db1fd4d61af9c838d7bfd58c212108e28" translate="yes" xml:space="preserve">
          <source>FrontFace means polygons' winding is clockwise in window coordinates and BackFace means otherwise.</source>
          <target state="translated">FrontFace는 다각형의 감기가 창 좌표에서 시계 방향임을 의미하고 BackFace는 그렇지 않은 경우를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="abbce55b7d2475ec2e1735416f4aa8bf111f9719" translate="yes" xml:space="preserve">
          <source>FrontFace.direction</source>
          <target state="translated">FrontFace.direction</target>
        </trans-unit>
        <trans-unit id="15a9831a0e03cede923b781954bfbf4b0c5d76f2" translate="yes" xml:space="preserve">
          <source>FrontToBack - sort the objects from front to back. The opposite of BackToFront.</source>
          <target state="translated">FrontToBack-개체를 앞에서 뒤로 정렬합니다. BackToFront의 반대입니다.</target>
        </trans-unit>
        <trans-unit id="0fe6a47d1ccd510f8b3f801a35510f42b994b41c" translate="yes" xml:space="preserve">
          <source>Frontface will not be rendered.</source>
          <target state="translated">Frontface는 렌더링되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5a003f26a021d39b980f5e5da23efd9719cf0739" translate="yes" xml:space="preserve">
          <source>Frosted Glass material. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">젖빛 유리 소재. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bb818351c8a74172a33cafccb414ff6a8d32d064" translate="yes" xml:space="preserve">
          <source>Frosted Glass single-pass material. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">젖빛 유리 단일 패스 재료. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b6cf136589aacd9938bc611f268be1146a5c9084" translate="yes" xml:space="preserve">
          <source>FrostedGlassMaterial (QML type)</source>
          <target state="translated">FrostedGlassMaterial (QML 유형)</target>
        </trans-unit>
        <trans-unit id="86b5a138e2553c6e4d148dfd012bf20690a62fc4" translate="yes" xml:space="preserve">
          <source>FrostedGlassMaterial QML Type</source>
          <target state="translated">FrostedGlassMaterial QML 유형</target>
        </trans-unit>
        <trans-unit id="344aea2ade101089c350d318e19723029a350c1c" translate="yes" xml:space="preserve">
          <source>FrostedGlassSinglePassMaterial (QML type)</source>
          <target state="translated">FrostedGlassSinglePassMaterial (QML 유형)</target>
        </trans-unit>
        <trans-unit id="2804891377a936e3bf8a3ede7afaaa1ee18097dd" translate="yes" xml:space="preserve">
          <source>FrostedGlassSinglePassMaterial QML Type</source>
          <target state="translated">FrostedGlassSinglePassMaterial QML 유형</target>
        </trans-unit>
        <trans-unit id="a67c69e42cf679c21e21cf6bb0d01364105bdcfc" translate="yes" xml:space="preserve">
          <source>Frustum projection</source>
          <target state="translated">절두체 투영</target>
        </trans-unit>
        <trans-unit id="3c3c441f5b29776c2b23a9766a1c57fddfa14c81" translate="yes" xml:space="preserve">
          <source>FrustumCamera</source>
          <target state="translated">FrustumCamera</target>
        </trans-unit>
        <trans-unit id="813668817fb9ec3a0272abe128c36661aea7bf00" translate="yes" xml:space="preserve">
          <source>FrustumCamera (QML type)</source>
          <target state="translated">FrustumCamera (QML 유형)</target>
        </trans-unit>
        <trans-unit id="8cc699eae1e74f9a73b29b97e94988a6ab3e2e07" translate="yes" xml:space="preserve">
          <source>FrustumCamera QML Type</source>
          <target state="translated">FrustumCamera QML 유형</target>
        </trans-unit>
        <trans-unit id="f34a31db798696725f66d6aef30df351c71b796f" translate="yes" xml:space="preserve">
          <source>FrustumCamera.bottom</source>
          <target state="translated">FrustumCamera.bottom</target>
        </trans-unit>
        <trans-unit id="ed406eab9d2d57a422adc73e6c26af606e020fde" translate="yes" xml:space="preserve">
          <source>FrustumCamera.left</source>
          <target state="translated">FrustumCamera.left</target>
        </trans-unit>
        <trans-unit id="73ee43d59e16da0f6f487b8a3800d9b84142cd0e" translate="yes" xml:space="preserve">
          <source>FrustumCamera.right</source>
          <target state="translated">FrustumCamera.right</target>
        </trans-unit>
        <trans-unit id="32f5cd00f146251196836bd12b2da334f66af8c9" translate="yes" xml:space="preserve">
          <source>FrustumCamera.top</source>
          <target state="translated">FrustumCamera.top</target>
        </trans-unit>
        <trans-unit id="9602e5fba9b59283e1d77dad9bb95c046ad444d5" translate="yes" xml:space="preserve">
          <source>FrustumCulling</source>
          <target state="translated">FrustumCulling</target>
        </trans-unit>
        <trans-unit id="1a083ba7469e7dfd9eb11103b84c556a1e91c6d2" translate="yes" xml:space="preserve">
          <source>FrustumCulling (QML type)</source>
          <target state="translated">프러스 텀 컬링 (QML 타입)</target>
        </trans-unit>
        <trans-unit id="fa0c9034e0628ac6b5303de6b87a0b260eb69681" translate="yes" xml:space="preserve">
          <source>FrustumCulling QML Type</source>
          <target state="translated">프러스 텀 컬링 QML 타입</target>
        </trans-unit>
        <trans-unit id="674b47688434f3c115265593a37b1016ca639a9e" translate="yes" xml:space="preserve">
          <source>Full decoding</source>
          <target state="translated">전체 디코딩</target>
        </trans-unit>
        <trans-unit id="13f6d6c9d37016f61064a4951ebafb4ffe1f2a69" translate="yes" xml:space="preserve">
          <source>Full hinting</source>
          <target state="translated">전체 힌트</target>
        </trans-unit>
        <trans-unit id="91d0ecb09cabb070eaef496b84f6216948e7a599" translate="yes" xml:space="preserve">
          <source>Full list of C++ classes and methods of the Qt Location APIs</source>
          <target state="translated">Qt 위치 API의 C ++ 클래스 및 메소드의 전체 목록</target>
        </trans-unit>
        <trans-unit id="8c0385dc26ee754b9c7dc668aec860c04daddf35" translate="yes" xml:space="preserve">
          <source>Full list of C++ classes and methods of the Qt Location APIs sorted by domain</source>
          <target state="translated">도메인별로 정렬 된 Qt 위치 API의 C ++ 클래스 및 메소드의 전체 목록</target>
        </trans-unit>
        <trans-unit id="dc844d254993dae306af0a8f8b5c96f78ba13cca" translate="yes" xml:space="preserve">
          <source>Full list of QML components in the Qt Location API</source>
          <target state="translated">Qt Location API의 QML 구성 요소 전체 목록</target>
        </trans-unit>
        <trans-unit id="3a38645119d7414bd8a40d244b7b0a57fba91213" translate="yes" xml:space="preserve">
          <source>Full modality support.</source>
          <target state="translated">완전한 양식 지원.</target>
        </trans-unit>
        <trans-unit id="b0923d93cfeab3344e42edf611efa89ef1384f13" translate="yes" xml:space="preserve">
          <source>Full support for non-power-of-two textures including texture repeat modes</source>
          <target state="translated">텍스처 반복 모드를 포함하여 2의 제곱이 아닌 텍스처를 완벽하게 지원</target>
        </trans-unit>
        <trans-unit id="a05ca9ec8708270dab9045523c76e4b8690ff0d2" translate="yes" xml:space="preserve">
          <source>Full-screen mode works fine under Windows, but has certain problems under X. These problems are due to limitations of the ICCCM protocol that specifies the communication between X11 clients and the window manager. ICCCM simply does not understand the concept of non-decorated full-screen windows. Therefore, the best we can do is to request a borderless window and place and resize it to fill the entire screen. Depending on the window manager, this may or may not work. The borderless window is requested using MOTIF hints, which are at least partially supported by virtually all modern window managers.</source>
          <target state="translated">전체 화면 모드는 Windows에서는 제대로 작동하지만 X에서는 특정 문제가 있습니다. 이러한 문제는 X11 클라이언트와 창 관리자 간의 통신을 지정하는 ICCCM 프로토콜의 제한으로 인해 발생합니다. ICCCM은 단순히 장식되지 않은 전체 화면 창의 개념을 이해하지 못합니다. 따라서 우리가 할 수있는 최선의 방법은 경계가없는 창을 요청하고 전체 화면을 채우도록 배치하고 크기를 조정하는 것입니다. 창 관리자에 따라이 기능이 작동하거나 작동하지 않을 수 있습니다. 경계가없는 창은 MOTIF 힌트를 사용하여 요청되는데, 이는 거의 모든 최신 창 관리자가 적어도 부분적으로 지원합니다.</target>
        </trans-unit>
        <trans-unit id="b5bb2d9463c70cf7742a086b24d5abdc100f7be5" translate="yes" xml:space="preserve">
          <source>FullScreen</source>
          <target state="translated">FullScreen</target>
        </trans-unit>
        <trans-unit id="25e6c479b85b4295f2e41d64348681a565c9451b" translate="yes" xml:space="preserve">
          <source>FullScreenRequest (QML type)</source>
          <target state="translated">FullScreenRequest (QML 유형)</target>
        </trans-unit>
        <trans-unit id="a0fe49a085a3e1881ed0b2f30fe5ac560a4a4cc8" translate="yes" xml:space="preserve">
          <source>FullScreenRequest QML Type</source>
          <target state="translated">FullScreenRequest QML 유형</target>
        </trans-unit>
        <trans-unit id="be9de1efcb33eae94c677aa3d8c7216578556791" translate="yes" xml:space="preserve">
          <source>FullScreenRequest.accept()</source>
          <target state="translated">FullScreenRequest.accept()</target>
        </trans-unit>
        <trans-unit id="aa467f047122b9f9fab0e1efb24a98cff8ae9db8" translate="yes" xml:space="preserve">
          <source>FullScreenRequest.origin</source>
          <target state="translated">FullScreenRequest.origin</target>
        </trans-unit>
        <trans-unit id="45cd40c9b983e223ccb83abfd677a163ef7a1657" translate="yes" xml:space="preserve">
          <source>FullScreenRequest.reject()</source>
          <target state="translated">FullScreenRequest.reject()</target>
        </trans-unit>
        <trans-unit id="a3d235b0560747c896537a32dd44cbf2e23e0b68" translate="yes" xml:space="preserve">
          <source>FullScreenRequest.toggleOn</source>
          <target state="translated">FullScreenRequest.toggleOn</target>
        </trans-unit>
        <trans-unit id="bb08d10b00a6114f53ac03b662cd5c0fa2fadf2c" translate="yes" xml:space="preserve">
          <source>Fullscreen</source>
          <target state="translated">Fullscreen</target>
        </trans-unit>
        <trans-unit id="55d050edae26d24cc822c7a7b3d9b4f00cc44f8f" translate="yes" xml:space="preserve">
          <source>Fullscreen Mode</source>
          <target state="translated">전체 화면으로보기</target>
        </trans-unit>
        <trans-unit id="5c3f07d90f94929675b99123ffedcb2017f95f34" translate="yes" xml:space="preserve">
          <source>Fullscreen OpenGL Based Windows</source>
          <target state="translated">전체 화면 OpenGL 기반 윈도우</target>
        </trans-unit>
        <trans-unit id="4bc7618ed69663e034810d47e895117ee010662c" translate="yes" xml:space="preserve">
          <source>Fullscreen viewport defined</source>
          <target state="translated">전체 화면 뷰포트 정의</target>
        </trans-unit>
        <trans-unit id="7badbc64d18f3877071c5eb6370f9fba811a5488" translate="yes" xml:space="preserve">
          <source>Fullwidth latin input mode for East Asian languages.</source>
          <target state="translated">동아시아 언어의 전각 라틴 입력 모드.</target>
        </trans-unit>
        <trans-unit id="f1e410ad1472b42cb42cc98962428637290b6706" translate="yes" xml:space="preserve">
          <source>Function</source>
          <target state="translated">Function</target>
        </trans-unit>
        <trans-unit id="11b754fb6b07cdde423bd66ce10b3da0d997f5e7" translate="yes" xml:space="preserve">
          <source>Function Documentation</source>
          <target state="translated">기능 문서</target>
        </trans-unit>
        <trans-unit id="0ca544d7457648c14cce40272868cda27ebf4451" translate="yes" xml:space="preserve">
          <source>Function Objects</source>
          <target state="translated">함수 객체</target>
        </trans-unit>
        <trans-unit id="5d39bcc9482008930e53ba2a4772bbd6790e2a17" translate="yes" xml:space="preserve">
          <source>Function Pointers Cannot Be Signal or Slot Parameters</source>
          <target state="translated">함수 포인터가 신호 또는 슬롯 매개 변수 일 수 없음</target>
        </trans-unit>
        <trans-unit id="0a4fd94ee92f5229558da011c1abd9efb25d2955" translate="yes" xml:space="preserve">
          <source>Function Properties</source>
          <target state="translated">기능 속성</target>
        </trans-unit>
        <trans-unit id="7d914a0074cfd21a9ba76cd9ca1326d52a742b7b" translate="yes" xml:space="preserve">
          <source>Function Prototype</source>
          <target state="translated">함수 프로토 타입</target>
        </trans-unit>
        <trans-unit id="aaf3cb50f1c0e4f30015bda7ee2f61c25a4f78b1" translate="yes" xml:space="preserve">
          <source>Function Reference</source>
          <target state="translated">기능 참조</target>
        </trans-unit>
        <trans-unit id="bf6b2899a039d230b750dde3d63c1d9001bd5503" translate="yes" xml:space="preserve">
          <source>Function Signature</source>
          <target state="translated">기능 서명</target>
        </trans-unit>
        <trans-unit id="3b05ae237ff32289fdd1685dd9a19f39932a2e32" translate="yes" xml:space="preserve">
          <source>Function code is not supported by device.</source>
          <target state="translated">장치에서 기능 코드를 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3c3ba48f028a7deaafdb5d00a7a619eee4db3192" translate="yes" xml:space="preserve">
          <source>Function objects (objects for which &lt;a href=&quot;qjsvalue#isCallable&quot;&gt;isCallable&lt;/a&gt;()) returns true) can be invoked by calling &lt;a href=&quot;qjsvalue#call&quot;&gt;call&lt;/a&gt;(). Constructor functions can be used to construct new objects by calling &lt;a href=&quot;qjsvalue#callAsConstructor&quot;&gt;callAsConstructor&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qjsvalue#call&quot;&gt;call&lt;/a&gt; ()을 호출하여 함수 객체 ( &lt;a href=&quot;qjsvalue#isCallable&quot;&gt;isCallable&lt;/a&gt; ())가 true를 반환 하는 객체를 호출 할 수 있습니다 . 생성자 함수는 &lt;a href=&quot;qjsvalue#callAsConstructor&quot;&gt;callAsConstructor&lt;/a&gt; () 를 호출하여 새 객체를 생성하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="82e1b141ba2d9c64de3ff0225ba3ab569d937d78" translate="yes" xml:space="preserve">
          <source>Function that can be used to sync Qt state with the Window Systems state.</source>
          <target state="translated">Qt 상태를 Window Systems 상태와 동기화하는 데 사용할 수있는 기능입니다.</target>
        </trans-unit>
        <trans-unit id="c1d92f092cd9c1210713d119ddacbbc2e057e240" translate="yes" xml:space="preserve">
          <source>Function type for &lt;a href=&quot;qeglfsfunctions#loadKeymap&quot;&gt;loadKeymap&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qeglfsfunctions#loadKeymap&quot;&gt;loadKeymap의&lt;/a&gt; 함수 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="a71df6dcd23a9dffaa5b74f7426a08708a39eab5" translate="yes" xml:space="preserve">
          <source>Function type for &lt;a href=&quot;qlinuxfbfunctions#loadKeymap&quot;&gt;loadKeymap&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qlinuxfbfunctions#loadKeymap&quot;&gt;loadKeymap의&lt;/a&gt; 함수 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="79fde2ac8490ff2b99ac9c9890e046fdff6e3659" translate="yes" xml:space="preserve">
          <source>Functionality</source>
          <target state="translated">Functionality</target>
        </trans-unit>
        <trans-unit id="855676de798942cc9e6b35b96824583ea9151017" translate="yes" xml:space="preserve">
          <source>Functionality deprecated in &lt;a href=&quot;qsurfaceformat#RenderableType-enum&quot;&gt;OpenGL&lt;/a&gt; version 3.0 is not available.</source>
          <target state="translated">&lt;a href=&quot;qsurfaceformat#RenderableType-enum&quot;&gt;OpenGL&lt;/a&gt; 버전 3.0 에서 폐기 된 기능 은 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9027194017a085152c75af84da40d490276f6b22" translate="yes" xml:space="preserve">
          <source>Functionality deprecated in OpenGL version 3.0 is not available.</source>
          <target state="translated">OpenGL 버전 3.0에서 더 이상 사용되지 않는 기능은 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1639a5fec4a6e74fb71bf5f75b24cdf5233a1fa0" translate="yes" xml:space="preserve">
          <source>Functionality from earlier &lt;a href=&quot;qsurfaceformat#RenderableType-enum&quot;&gt;OpenGL&lt;/a&gt; versions is available.</source>
          <target state="translated">이전 &lt;a href=&quot;qsurfaceformat#RenderableType-enum&quot;&gt;OpenGL&lt;/a&gt; 버전의 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62358e86b7199e3c0e3077438c39059f59b6bbd7" translate="yes" xml:space="preserve">
          <source>Functionality from earlier OpenGL versions is available.</source>
          <target state="translated">이전 OpenGL 버전의 기능을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b961dea1dc0c60ddf9a2c8e9d090f6f7d082483" translate="yes" xml:space="preserve">
          <source>Functions</source>
          <target state="translated">Functions</target>
        </trans-unit>
        <trans-unit id="d59262a2a9be9f98118b914e36eb5ef0fa2b7310" translate="yes" xml:space="preserve">
          <source>Functions and Properties</source>
          <target state="translated">기능과 속성</target>
        </trans-unit>
        <trans-unit id="693ea51cfb51e5dd0a6c8712f3c8c1911353e8e1" translate="yes" xml:space="preserve">
          <source>Functions defined in a JavaScript file</source>
          <target state="translated">JavaScript 파일에 정의 된 함수</target>
        </trans-unit>
        <trans-unit id="f0c566c41dbaec6e02a33922021d0fbc3d8b33bb" translate="yes" xml:space="preserve">
          <source>Functions for creating and managing OpenGL buffer objects</source>
          <target state="translated">OpenGL 버퍼 객체 생성 및 관리를위한 기능</target>
        </trans-unit>
        <trans-unit id="643320166973fa24c8a47af5b6e167f42670d6e2" translate="yes" xml:space="preserve">
          <source>Functions like &lt;a href=&quot;qcbormap-constiterator#key&quot;&gt;key&lt;/a&gt;(), &lt;a href=&quot;qcbormap-constiterator#value&quot;&gt;value&lt;/a&gt;(), and operator++() must not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="translated">초기화되지 않은 반복자에서 &lt;a href=&quot;qcbormap-constiterator#key&quot;&gt;키&lt;/a&gt; (), &lt;a href=&quot;qcbormap-constiterator#value&quot;&gt;값&lt;/a&gt; () 및 연산자 ++ ()와 같은 함수를 호출하면 안됩니다. 사용하기 전에 operator = ()를 사용하여 값을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="2ddd8035719d86cde6c83912ea4495663117fa7e" translate="yes" xml:space="preserve">
          <source>Functions like &lt;a href=&quot;qcbormap-iterator#key&quot;&gt;key&lt;/a&gt;(), &lt;a href=&quot;qcbormap-iterator#value&quot;&gt;value&lt;/a&gt;(), and operator++() must not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="translated">초기화되지 않은 반복자에서 &lt;a href=&quot;qcbormap-iterator#key&quot;&gt;키&lt;/a&gt; (), &lt;a href=&quot;qcbormap-iterator#value&quot;&gt;값&lt;/a&gt; () 및 연산자 ++ ()와 같은 함수를 호출하면 안됩니다. 사용하기 전에 operator = ()를 사용하여 값을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="d75de0c20af22d25a71058f7b0202b4da295cc17" translate="yes" xml:space="preserve">
          <source>Functions like &lt;a href=&quot;qhash-const-iterator#key&quot;&gt;key&lt;/a&gt;(), &lt;a href=&quot;qhash-const-iterator#value&quot;&gt;value&lt;/a&gt;(), and operator++() must not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="translated">초기화되지 않은 반복자에서 &lt;a href=&quot;qhash-const-iterator#key&quot;&gt;키&lt;/a&gt; (), &lt;a href=&quot;qhash-const-iterator#value&quot;&gt;값&lt;/a&gt; () 및 연산자 ++ ()와 같은 함수를 호출하면 안됩니다. 사용하기 전에 operator = ()를 사용하여 값을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="eb2ba76c4c8d1186805594dacd2b3ae6b1937a72" translate="yes" xml:space="preserve">
          <source>Functions like &lt;a href=&quot;qhash-iterator#key&quot;&gt;key&lt;/a&gt;(), &lt;a href=&quot;qhash-iterator#value&quot;&gt;value&lt;/a&gt;(), and operator++() must not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="translated">초기화되지 않은 반복자에서 &lt;a href=&quot;qhash-iterator#key&quot;&gt;키&lt;/a&gt; (), &lt;a href=&quot;qhash-iterator#value&quot;&gt;값&lt;/a&gt; () 및 연산자 ++ ()와 같은 함수를 호출하면 안됩니다. 사용하기 전에 operator = ()를 사용하여 값을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="362152447b6d229295b33fa3df17fd7f0fea153a" translate="yes" xml:space="preserve">
          <source>Functions like &lt;a href=&quot;qjsonobject-const-iterator#key&quot;&gt;key&lt;/a&gt;(), &lt;a href=&quot;qjsonobject-const-iterator#value&quot;&gt;value&lt;/a&gt;(), and operator++() must not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="translated">초기화되지 않은 반복자에서 &lt;a href=&quot;qjsonobject-const-iterator#key&quot;&gt;키&lt;/a&gt; (), &lt;a href=&quot;qjsonobject-const-iterator#value&quot;&gt;값&lt;/a&gt; () 및 연산자 ++ ()와 같은 함수를 호출하면 안됩니다. 사용하기 전에 operator = ()를 사용하여 값을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="edb9ed0e03af111a12df99e3bc2a1b2833b7d0e3" translate="yes" xml:space="preserve">
          <source>Functions like &lt;a href=&quot;qjsonobject-iterator#key&quot;&gt;key&lt;/a&gt;(), &lt;a href=&quot;qjsonobject-iterator#value&quot;&gt;value&lt;/a&gt;(), and operator++() must not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="translated">초기화되지 않은 반복자에서 &lt;a href=&quot;qjsonobject-iterator#key&quot;&gt;키&lt;/a&gt; (), &lt;a href=&quot;qjsonobject-iterator#value&quot;&gt;값&lt;/a&gt; () 및 연산자 ++ ()와 같은 함수를 호출하면 안됩니다. 사용하기 전에 operator = ()를 사용하여 값을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="a3bb6f93f56da0a7b05f1ee1333140761fd0a53b" translate="yes" xml:space="preserve">
          <source>Functions like &lt;a href=&quot;qmap-const-iterator#key&quot;&gt;key&lt;/a&gt;(), &lt;a href=&quot;qmap-const-iterator#value&quot;&gt;value&lt;/a&gt;(), and operator++() must not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="translated">초기화되지 않은 반복자에서 &lt;a href=&quot;qmap-const-iterator#key&quot;&gt;키&lt;/a&gt; (), &lt;a href=&quot;qmap-const-iterator#value&quot;&gt;값&lt;/a&gt; () 및 연산자 ++ ()와 같은 함수를 호출하면 안됩니다. 사용하기 전에 operator = ()를 사용하여 값을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="9092442c6fd71e50865852ae6247e0e93e5bf6b4" translate="yes" xml:space="preserve">
          <source>Functions like &lt;a href=&quot;qmap-iterator#key&quot;&gt;key&lt;/a&gt;(), &lt;a href=&quot;qmap-iterator#value&quot;&gt;value&lt;/a&gt;(), and operator++() must not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="translated">초기화되지 않은 반복자에서 &lt;a href=&quot;qmap-iterator#key&quot;&gt;키&lt;/a&gt; (), &lt;a href=&quot;qmap-iterator#value&quot;&gt;값&lt;/a&gt; () 및 연산자 ++ ()와 같은 함수를 호출하면 안됩니다. 사용하기 전에 operator = ()를 사용하여 값을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="04e4f1ec1ef5a49e2e87bc43866213d007970f30" translate="yes" xml:space="preserve">
          <source>Functions like operator*() and operator++() should not be called on an uninitialized iterartor. Use operator=() to assign a value to it before using it.</source>
          <target state="translated">초기화되지 않은 iterartor에서 operator * () 및 operator ++ ()와 같은 함수를 호출하면 안됩니다. 사용하기 전에 operator = ()를 사용하여 값을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="46f958d8dacb17411e1acb207f3d42f73f27a8b4" translate="yes" xml:space="preserve">
          <source>Functions like operator*() and operator++() should not be called on an uninitialized iterator. Use operator=() to assign a value to it before using it.</source>
          <target state="translated">초기화되지 않은 반복자에서 operator * () 및 operator ++ ()와 같은 함수를 호출하면 안됩니다. 사용하기 전에 operator = ()를 사용하여 값을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="c200f4df88c1cfa3165b6fc9657a333c599785b7" translate="yes" xml:space="preserve">
          <source>Functions provided by script engines that don't support introspection are not available and must be called directly using &lt;a href=&quot;qaxscript#call&quot;&gt;QAxScript::call&lt;/a&gt;() on the respective &lt;a href=&quot;qaxscriptmanager#script&quot;&gt;script&lt;/a&gt; object.</source>
          <target state="translated">내부 검사를 지원하지 않는 스크립트 엔진에서 제공하는 기능은 사용할 수 없으며 해당 &lt;a href=&quot;qaxscriptmanager#script&quot;&gt;스크립트&lt;/a&gt; 객체 에서 &lt;a href=&quot;qaxscript#call&quot;&gt;QAxScript :: call&lt;/a&gt; ()을 사용하여 직접 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="61321256e1d819c8ae975ab74d07be8f18bd1442" translate="yes" xml:space="preserve">
          <source>Functions that accept a &lt;code&gt;format&lt;/code&gt; argument take either Locale.LongFormat, Locale.ShortFormat, Locale.NarrowFormat enumeration values, or a string specifying the format.</source>
          <target state="translated">&lt;code&gt;format&lt;/code&gt; 인수 를 허용하는 함수 는 Locale.LongFormat, Locale.ShortFormat, Locale.NarrowFormat 열거 형 값 또는 형식을 지정하는 문자열을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="7723e5252beb3b6b39b1b1c3d11f52f6e1c3e1a9" translate="yes" xml:space="preserve">
          <source>Functions that accept a locale format may be either an enumeration value:</source>
          <target state="translated">로케일 형식을 허용하는 함수는 열거 형 값일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="65f496275ba841dd78f91057fc9efada99934cd1" translate="yes" xml:space="preserve">
          <source>Functions that perform conversions between numeric data types and strings are performed in the C locale, irrespective of the user's locale settings. Use &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to perform locale-aware conversions between numbers and strings.</source>
          <target state="translated">숫자 데이터 유형과 문자열 간의 변환을 수행하는 기능은 사용자의 로캘 설정에 관계없이 C 로캘에서 수행됩니다. 숫자와 문자열 사이에서 로케일 인식 변환을 수행 하려면 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="947091bcddd7eec91e595b14f7b9248576e913c9" translate="yes" xml:space="preserve">
          <source>Functions that use Filter enum values to filter lists of files and directories will include symbolic links to files and directories unless you set the NoSymLinks value.</source>
          <target state="translated">필터 열거 형 값을 사용하여 파일 및 디렉토리 목록을 필터링하는 기능에는 NoSymLinks 값을 설정하지 않는 한 파일 및 디렉토리에 대한 기호 링크가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="d1432be0a78a278222a513bc7432eb7c560f91e0" translate="yes" xml:space="preserve">
          <source>Functions to manipulate and describe database indexes</source>
          <target state="translated">데이터베이스 인덱스를 조작하고 설명하는 함수</target>
        </trans-unit>
        <trans-unit id="9720a9b61f7c44e27f1097ce58983addb97d3643" translate="yes" xml:space="preserve">
          <source>Functions whose names start with &quot;benchmark_&quot; will be run multiple times with the Qt benchmark framework, with an average timing value reported for the runs. This is equivalent to using the &lt;code&gt;QBENCHMARK&lt;/code&gt; macro in the C++ version of &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtest-overview.html&quot;&gt;QTestLib&lt;/a&gt;.</source>
          <target state="translated">이름이 &quot;benchmark_&quot;로 시작하는 함수는 Qt 벤치 마크 프레임 워크에서 여러 번 실행되며 실행에 대한 평균 타이밍 값이보고됩니다. 이것은 사용하는 것과 같습니다 &lt;code&gt;QBENCHMARK&lt;/code&gt; 의 의 C ++ 버전에서 매크로 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtest-overview.html&quot;&gt;QTestLib을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0e00411eba1fdea715698da663792fe1a726d06a" translate="yes" xml:space="preserve">
          <source>Functions whose names start with &quot;benchmark_&quot; will be run multiple times with the Qt benchmark framework, with an average timing value reported for the runs. This is equivalent to using the &lt;code&gt;QBENCHMARK&lt;/code&gt; macro in the C++ version of &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtest-overview.html&quot;&gt;QTestLib&lt;/a&gt;.</source>
          <target state="translated">이름이 &quot;benchmark_&quot;로 시작하는 함수는 실행에 대해보고 된 평균 타이밍 값과 함께 Qt 벤치 마크 프레임 워크로 여러 번 실행됩니다. 이것은 사용하는 것과 같습니다 &lt;code&gt;QBENCHMARK&lt;/code&gt; 의 의 C ++ 버전에서 매크로 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtest-overview.html&quot;&gt;QTestLib을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5013cf5953587f0a1a5a7828d26ec67f7410be91" translate="yes" xml:space="preserve">
          <source>Functions whose names start with &quot;benchmark_&quot; will be run multiple times with the Qt benchmark framework, with an average timing value reported for the runs. This is equivalent to using the &lt;code&gt;QBENCHMARK&lt;/code&gt; macro in the C++ version of QTestLib.</source>
          <target state="translated">이름이 &quot;benchmark_&quot;로 시작하는 함수는 Qt 벤치 마크 프레임 워크에서 여러 번 실행되며 실행에 대한 평균 타이밍 값이보고됩니다. 이것은 &lt;code&gt;QBENCHMARK&lt;/code&gt; ++의 C ++ 버전에서 QBENCHMARK 매크로 를 사용하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="b055f63512e6a3288bdaadb81f8594a5c67bbd4e" translate="yes" xml:space="preserve">
          <source>Functions whose names start with &quot;test_&quot; are treated as test cases to be executed. The &lt;a href=&quot;qml-qttest-testcase#name-prop&quot;&gt;name&lt;/a&gt; property is used to prefix the functions in the output:</source>
          <target state="translated">이름이 &quot;test_&quot;로 시작하는 함수는 실행할 테스트 사례로 취급됩니다. &lt;a href=&quot;qml-qttest-testcase#name-prop&quot;&gt;이름&lt;/a&gt; 속성은 출력 기능을 접두사로 사용된다 :</target>
        </trans-unit>
        <trans-unit id="2565ce780e3351877af4e2a0085e7e901bcecbc0" translate="yes" xml:space="preserve">
          <source>Functions whose names start with &quot;test_&quot; are treated as test cases to be executed. The &lt;a href=&quot;qml-testcase#name-prop&quot;&gt;name&lt;/a&gt; property is used to prefix the functions in the output:</source>
          <target state="translated">이름이 &quot;test_&quot;로 시작하는 함수는 실행할 테스트 사례로 취급됩니다. &lt;a href=&quot;qml-testcase#name-prop&quot;&gt;이름&lt;/a&gt; 속성은 출력 기능을 접두사로 사용된다 :</target>
        </trans-unit>
        <trans-unit id="4d6fca4fb2a66abace869e8d6bb6417d06c8d9cc" translate="yes" xml:space="preserve">
          <source>Functions whose names start with &lt;code&gt;test_&lt;/code&gt; are treated as test cases to be executed. See the documentation for the &lt;a href=&quot;qml-qttest-testcase&quot;&gt;TestCase&lt;/a&gt; and &lt;a href=&quot;qml-qttest-signalspy&quot;&gt;SignalSpy&lt;/a&gt; types for more information on writing test cases.</source>
          <target state="translated">이름이 &lt;code&gt;test_&lt;/code&gt; 로 시작하는 함수는 실행될 테스트 사례로 취급됩니다. 테스트 케이스 작성에 대한 자세한 정보 는 &lt;a href=&quot;qml-qttest-testcase&quot;&gt;TestCase&lt;/a&gt; 및 &lt;a href=&quot;qml-qttest-signalspy&quot;&gt;SignalSpy&lt;/a&gt; 유형 의 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf5a0c8672a8cfdd38dd0c49de54779584af909e" translate="yes" xml:space="preserve">
          <source>Functor</source>
          <target state="translated">Functor</target>
        </trans-unit>
        <trans-unit id="773e9674841b13995664cdb1517eae8aba73e461" translate="yes" xml:space="preserve">
          <source>Functor-based</source>
          <target state="translated">Functor-based</target>
        </trans-unit>
        <trans-unit id="608dda75ed3383a552fdb306573a5c8fa05175e3" translate="yes" xml:space="preserve">
          <source>Functor-based connections do not support this feature.</source>
          <target state="translated">Functor 기반 연결은이 기능을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="669174087b9bbb07e556f8eda6679016d67b42c9" translate="yes" xml:space="preserve">
          <source>Further Information</source>
          <target state="translated">추가 정보</target>
        </trans-unit>
        <trans-unit id="4040f22a3cf8f82bcaacb214bd595e587090e918" translate="yes" xml:space="preserve">
          <source>Further Notes</source>
          <target state="translated">추가 사항</target>
        </trans-unit>
        <trans-unit id="bafd4b54282745a2bed1442852b73f4b3189a77a" translate="yes" xml:space="preserve">
          <source>Further Reading</source>
          <target state="translated">추가 자료</target>
        </trans-unit>
        <trans-unit id="e0044da9400cc68bac5eabfa2da0ad36ec25c14a" translate="yes" xml:space="preserve">
          <source>Further information about the types of extensions certificates can contain can be found in RFC 5280.</source>
          <target state="translated">인증서에 포함될 수있는 확장 유형에 대한 추가 정보는 RFC 5280에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9643b071eaa404ffba2b07120a030c0749e8a44" translate="yes" xml:space="preserve">
          <source>Further information for writing QML applications:</source>
          <target state="translated">QML 애플리케이션 작성에 대한 추가 정보 :</target>
        </trans-unit>
        <trans-unit id="0e44c8b638baa470dbb5f127964c092cc77ea465" translate="yes" xml:space="preserve">
          <source>Further reading</source>
          <target state="translated">추가 자료</target>
        </trans-unit>
        <trans-unit id="eccdfd4d16fa7dfb91718f31bc07dec9a141b9a6" translate="yes" xml:space="preserve">
          <source>Further selectors will be added from the &lt;code&gt;QT_FILE_SELECTORS&lt;/code&gt; environment variable, which when set should be a set of comma separated selectors. Note that this variable will only be read once; selectors may not update if the variable changes while the application is running. The initial set of selectors are evaluated only once, on first use.</source>
          <target state="translated">추가 선택기는 &lt;code&gt;QT_FILE_SELECTORS&lt;/code&gt; 환경 변수 에서 추가되며, 설정시 쉼표로 구분 된 선택기 세트 여야합니다. 이 변수는 한 번만 읽습니다. 응용 프로그램이 실행되는 동안 변수가 변경되면 선택기가 업데이트되지 않을 수 있습니다. 초기 선택기 세트는 처음 사용할 때 한 번만 평가됩니다.</target>
        </trans-unit>
        <trans-unit id="befeb2aeca2262ee9a02adb33ff699fcd699d3f9" translate="yes" xml:space="preserve">
          <source>Further structure categories into common areas by using dots.</source>
          <target state="translated">점을 사용하여 공통 영역으로 추가 구조 범주.</target>
        </trans-unit>
        <trans-unit id="82bbe7c13644f3b9e5bbd7aaf34bd4a52e7b51f4" translate="yes" xml:space="preserve">
          <source>Further write operations are possible after calling this method, but none of it will have any effect, the written file will be discarded.</source>
          <target state="translated">이 메소드를 호출 한 후에는 추가 쓰기 조작이 가능하지만 아무런 영향을 미치지 않으며 작성된 파일은 버려집니다.</target>
        </trans-unit>
        <trans-unit id="52023b20f8acc0e7bdd48b522829a542e9eeb593" translate="yes" xml:space="preserve">
          <source>Further, development packages for &lt;code&gt;khr&lt;/code&gt; and &lt;code&gt;libcap&lt;/code&gt; need to be installed.</source>
          <target state="translated">또한 &lt;code&gt;khr&lt;/code&gt; 및 &lt;code&gt;libcap&lt;/code&gt; 용 개발 패키지를 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="57ebb2af6c6b324b1e763fec8cf6b4480142662a" translate="yes" xml:space="preserve">
          <source>Further, the shader code must use multisampling sampler types and texelFetch() instead of texture().</source>
          <target state="translated">또한 셰이더 코드는 texture () 대신 멀티 샘플링 샘플러 유형과 texelFetch ()를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="0c47e45c4e0c45ea1688aceb48e7f6c5bac3ca3e" translate="yes" xml:space="preserve">
          <source>Further, the state may change by assigning the &lt;code&gt;state&lt;/code&gt; property with the appropriate signal state. A state switch could be in a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; type, assigning a different state whenever the signal receives a mouse click.</source>
          <target state="translated">또한, &lt;code&gt;state&lt;/code&gt; 속성을 적절한 신호 상태 로 할당함으로써 상태가 변경 될 수있다 . 상태 스위치는 &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; 유형일 수 있으며 신호가 마우스 클릭을받을 때마다 다른 상태를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="b6a65948043e94e810c2f3d58a481c9b7dfffbd7" translate="yes" xml:space="preserve">
          <source>Furthermore Qt 3D contains third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt 3D에는 다음과 같은 허가 라이센스에 따라 타사 모듈이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e089b3b31f6f071f14e9466e9e97a81062aefd4" translate="yes" xml:space="preserve">
          <source>Furthermore Qt Image Formats potentially contains third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt 이미지 형식에는 다음과 같은 허가 라이센스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="886ce1821ab42a5e2e872a21ae665a28311bb07d" translate="yes" xml:space="preserve">
          <source>Furthermore Qt Location potentially contains third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt Location에는 다음과 같은 허가 라이센스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b0437bdb244f6887e5797d290b0941b22a473d8" translate="yes" xml:space="preserve">
          <source>Furthermore Qt Purchasing on Android contains third party modules under the following permissive licenses:</source>
          <target state="translated">또한 Android에서의 Qt 구매에는 다음과 같은 허가 라이센스에 따라 타사 모듈이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="b437eb8dacec773e1215300c50b8642238042973" translate="yes" xml:space="preserve">
          <source>Furthermore Qt QML in Qt 5.13.0 may contain third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt 5.13.0의 Qt QML에는 다음 허가 라이센스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7f2cded25f61f2cc638299612fdf8bb632334d3" translate="yes" xml:space="preserve">
          <source>Furthermore Qt QML in Qt 5.15.1 may contain third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt 5.15.1의 Qt QML에는 다음 허용 라이선스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="115d42715a6b250fbb93a87bc23abd89b1d091d5" translate="yes" xml:space="preserve">
          <source>Furthermore Qt Quick 3D potentially contains third party modules under the following permissive licenses:</source>
          <target state="translated">또한 Qt Quick 3D에는 다음과 같은 허용 라이선스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80da8fc9a43010b945f4919ffe7e202ec273d0f5" translate="yes" xml:space="preserve">
          <source>Furthermore Qt Quick Controls 2 potentially contains third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt Quick Controls 2에는 다음과 같은 허가 라이센스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e18e6f47c8fff9e2d9f9e80a0a62c9ff811a7ad" translate="yes" xml:space="preserve">
          <source>Furthermore Qt Quick Controls potentially contains third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt Quick Controls에는 다음 허용 라이선스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b39d40bfc6b6485b55287375bb6acade410efee7" translate="yes" xml:space="preserve">
          <source>Furthermore Qt SVG contains third party code under following permissive licenses:</source>
          <target state="translated">또한 Qt SVG에는 다음과 같은 허가 라이센스에 따른 타사 코드가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8324a72315d9ed51aae3bef6ef1663ad584b5a0" translate="yes" xml:space="preserve">
          <source>Furthermore Qt Virtual Keyboard potentially contains third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt Virtual Keyboard에는 다음과 같은 허가 라이센스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="785579248360e4ee49442a43da2fbb5f29176326" translate="yes" xml:space="preserve">
          <source>Furthermore, &lt;a href=&quot;qt3drender-qlayer&quot;&gt;Qt3DRender::QLayer&lt;/a&gt; components can be used to control how entities, or entity sub-graphs, react to ray casting.</source>
          <target state="translated">또한 &lt;a href=&quot;qt3drender-qlayer&quot;&gt;Qt3DRender :: QLayer&lt;/a&gt; 구성 요소를 사용하여 엔터티 또는 엔터티 하위 그래프가 레이 캐스팅에 반응하는 방식을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0eed2e5dcd65fdaaffa8624f48111cb5d7e6df00" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt Core in Qt 5.13.0 may contain third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt 5.13.0의 Qt Core에는 다음과 같은 허가 라이센스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10eb7cec1d0ae1895285454f21c538750b0adea1" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt Core in Qt 5.15.1 may contain third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt 5.15.1의 Qt Core에는 다음 허용 라이선스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2a8ccbe055477c1cf6df634dcd7bbaea32870d9" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt D-Bus in Qt 5.13.0 may contain third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt 5.13.0의 Qt D-Bus에는 다음과 같은 허가 라이센스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3fefca5f287f9d810b742f25301b3f8f80aabc12" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt D-Bus in Qt 5.15.1 may contain third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt 5.15.1의 Qt D-Bus에는 다음 허용 라이선스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d75e13b620059ed412e537a5f6821170b9a3dc0" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt GUI in Qt 5.13.0 may contain third-party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt 5.13.0의 Qt GUI에는 다음과 같은 허가 라이센스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e101eb8204efd2d2619bee98bbf059948bfb424" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt GUI in Qt 5.15.1 may contain third-party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt 5.15.1의 Qt GUI에는 다음 허용 라이선스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="510e3bc5e73c162bbb9e3b6f576016bbdf9c70e2" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt SQL in Qt 5.13.0 may contain third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt 5.13.0의 Qt SQL에는 다음과 같은 허가 라이센스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8a9702761980f0127b870550385aaea1a9856d6" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt SQL in Qt 5.15.1 may contain third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt 5.15.1의 Qt SQL에는 다음 허용 라이센스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e263d9cb38c1410b7f8149c91d9ae359ca8ecdc1" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt Test in Qt 5.13.0 may contain third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt 5.13.0의 Qt Test에는 다음과 같은 허가 라이센스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b17c87df2d1900177ccc926e10966be2a9df44c" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt Test in Qt 5.15.1 may contain third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt 5.15.1의 Qt 테스트에는 다음 허용 라이선스에 따라 타사 모듈이 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4eb9b4cc10e98ea54c14967b01936672734221c" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt XML Patterns in Qt 5.13.0 contain third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt 5.13.0의 Qt XML 패턴에는 다음과 같은 허가 라이센스에 따라 타사 모듈이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="ae6fa4c337a21a9f9103f938c384962ba1b819bd" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt XML Patterns in Qt 5.15.1 contain third party modules under following permissive licenses:</source>
          <target state="translated">또한 Qt 5.15.1의 Qt XML 패턴에는 다음 허용 라이선스에 따라 타사 모듈이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e1b6aff9bf83634e0c2d66a0bd3a84134b7350a" translate="yes" xml:space="preserve">
          <source>Furthermore, Qt3D.Render::Layer components can be used to control how entities, or entity sub-graphs, react to ray casting.</source>
          <target state="translated">또한 Qt3D.Render :: Layer 구성 요소를 사용하여 엔터티 또는 엔터티 하위 그래프가 레이 캐스팅에 반응하는 방식을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0aba3a9ede288d919074e4be9d82ca28f968a57" translate="yes" xml:space="preserve">
          <source>Furthermore, a toolkit cannot simply place windows on the screen. All Qt can do is to send certain hints to the window manager. The window manager, a separate process, may either obey, ignore or misunderstand them. Due to the partially unclear Inter-Client Communication Conventions Manual (ICCCM), window placement is handled quite differently in existing window managers.</source>
          <target state="translated">또한 툴킷은 단순히 화면에 창을 배치 할 수 없습니다. Qt가 할 수있는 일은 창 관리자에게 특정 힌트를 보내는 것입니다. 별도의 프로세스 인 창 관리자는이를 준수, 무시 또는 오해 할 수 있습니다. ICCCM (Inter-Client Communication Conventions Manual)이 불분명하기 때문에 기존 창 관리자에서 창 배치가 상당히 다르게 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="c0804b49a474a54b34729afdeed0fe2b7af757dc" translate="yes" xml:space="preserve">
          <source>Furthermore, currentTime() only increases within each day; it shall drop by 24 hours each time midnight passes; and, beside this, changes in it may not correspond to elapsed time, if a daylight-saving transition intervenes.</source>
          <target state="translated">또한 currentTime ()은 매일 증가합니다. 자정이 지나갈 때마다 24 시간 줄어 듭니다. 일광 절약 시간제 전환이 개입되는 경우이 외에도 변경 사항이 경과 시간과 일치하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a2711e5d4497fcf8f04fd89daf3d86a98a0bde1" translate="yes" xml:space="preserve">
          <source>Furthermore, if either of</source>
          <target state="translated">또한</target>
        </trans-unit>
        <trans-unit id="4d68f7d121323cc13a14a10dffcfcb681bc3a6d5" translate="yes" xml:space="preserve">
          <source>Furthermore, the selected</source>
          <target state="translated">또한, 선택된</target>
        </trans-unit>
        <trans-unit id="bd740463f8b4294b83ac7f5d326402c5d2500a91" translate="yes" xml:space="preserve">
          <source>Furthermore, there will be one JavaScript heap allocated for use in the main thread, and optionally one other JavaScript heap allocated for use in the &lt;a href=&quot;qml-qtqml-workerscript&quot;&gt;WorkerScript&lt;/a&gt; thread. If an application does not use a &lt;a href=&quot;qml-qtqml-workerscript&quot;&gt;WorkerScript&lt;/a&gt; element, that overhead will not be incurred. The JavaScript heap can be several megabytes in size, and so applications written for memory-constrained devices may be best served by avoiding the &lt;a href=&quot;qml-qtqml-workerscript&quot;&gt;WorkerScript&lt;/a&gt; element despite its usefulness in populating list models asynchronously.</source>
          <target state="translated">또한 메인 스레드에서 사용하도록 할당 된 하나의 JavaScript 힙과 선택적으로 &lt;a href=&quot;qml-qtqml-workerscript&quot;&gt;WorkerScript&lt;/a&gt; 스레드 에서 사용하도록 할당 된 다른 JavaScript 힙이 있습니다 . 응용 프로그램에서 &lt;a href=&quot;qml-qtqml-workerscript&quot;&gt;WorkerScript&lt;/a&gt; 요소를 사용하지 않으면 해당 오버 헤드가 발생하지 않습니다. JavaScript 힙의 크기는 몇 메가 바이트 일 수 있으므로 메모리가 제한된 장치 용으로 작성된 응용 프로그램은 목록 모델을 비동기 적으로 채우는 데 유용하더라도 &lt;a href=&quot;qml-qtqml-workerscript&quot;&gt;WorkerScript&lt;/a&gt; 요소 를 사용하지 않는 것이 가장 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="ada1a5940f79198de731c5c51d3c7abac8775ee3" translate="yes" xml:space="preserve">
          <source>Furthermore, there will be one JavaScript heap allocated for use in the main thread, and optionally one other JavaScript heap allocated for use in the &lt;a href=&quot;qml-qtqml-workerscript-workerscript&quot;&gt;WorkerScript&lt;/a&gt; thread. If an application does not use a &lt;a href=&quot;qml-qtqml-workerscript-workerscript&quot;&gt;WorkerScript&lt;/a&gt; element, that overhead will not be incurred. The JavaScript heap can be several megabytes in size, and so applications written for memory-constrained devices may be best served by avoiding the &lt;a href=&quot;qml-qtqml-workerscript-workerscript&quot;&gt;WorkerScript&lt;/a&gt; element despite its usefulness in populating list models asynchronously.</source>
          <target state="translated">또한 기본 스레드에서 사용하기 위해 할당 된 하나의 JavaScript 힙이 있고, 선택적으로 &lt;a href=&quot;qml-qtqml-workerscript-workerscript&quot;&gt;WorkerScript&lt;/a&gt; 스레드 에서 사용하기 위해 할당 된 다른 하나의 JavaScript 힙이 있습니다 . 응용 프로그램이 &lt;a href=&quot;qml-qtqml-workerscript-workerscript&quot;&gt;WorkerScript&lt;/a&gt; 요소를 사용하지 않는 경우 해당 오버 헤드가 발생하지 않습니다. JavaScript 힙의 크기는 수 메가 바이트 일 수 있으므로 목록 모델을 비동기 적으로 채우는 데 유용함에도 불구하고 &lt;a href=&quot;qml-qtqml-workerscript-workerscript&quot;&gt;WorkerScript&lt;/a&gt; 요소 를 사용하지 않으면 메모리가 제한된 장치 용으로 작성된 응용 프로그램이 가장 잘 제공 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="71c7cf01329bb24948462d16941a784ad9d1b3cd" translate="yes" xml:space="preserve">
          <source>Furthermore, this class features a &lt;a href=&quot;qaccelerometer#reading&quot;&gt;reading&lt;/a&gt;() function that returns a &lt;a href=&quot;qaccelerometerreading&quot;&gt;QAccelerometerReading&lt;/a&gt; instead of a &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt;.</source>
          <target state="translated">또한,이 클래스는 기능 &lt;a href=&quot;qaccelerometer#reading&quot;&gt;읽기&lt;/a&gt; () 함수가 리턴 &lt;a href=&quot;qaccelerometerreading&quot;&gt;QAccelerometerReading&lt;/a&gt; 대신 &lt;a href=&quot;qsensorreading&quot;&gt;QSensorReading&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="357029dd522472f1d38afc9dcf16c9bb5f839c08" translate="yes" xml:space="preserve">
          <source>Fusion Style</source>
          <target state="translated">퓨전 스타일</target>
        </trans-unit>
        <trans-unit id="82b42cfb2dda7b159bf8155b4c92130efd985a45" translate="yes" xml:space="preserve">
          <source>Fxaa (QML type)</source>
          <target state="translated">Fxaa (QML 유형)</target>
        </trans-unit>
        <trans-unit id="c0b49ca50a3806e2756ac007db82ff2ce2e1b0b2" translate="yes" xml:space="preserve">
          <source>Fxaa QML Type</source>
          <target state="translated">Fxaa QML 유형</target>
        </trans-unit>
        <trans-unit id="22d1fa873df41507c128ef1d990cd8f9950136bf" translate="yes" xml:space="preserve">
          <source>Fxaa does not have adjustable properties.</source>
          <target state="translated">Fxaa에는 조정 가능한 속성이 없습니다.</target>
        </trans-unit>
        <trans-unit id="a36a6718f54524d846894fb04b5b885b4e43e63b" translate="yes" xml:space="preserve">
          <source>G</source>
          <target state="translated">G</target>
        </trans-unit>
        <trans-unit id="99e9700ad6dc50cc8a61a5319722ea83a5f97647" translate="yes" xml:space="preserve">
          <source>G-buffer</source>
          <target state="translated">G-buffer</target>
        </trans-unit>
        <trans-unit id="18c76ea9fef1b6abd436cfd21dc149ec600edfd3" translate="yes" xml:space="preserve">
          <source>GB18030</source>
          <target state="translated">GB18030</target>
        </trans-unit>
        <trans-unit id="7786d722df13736e8b48c83a5df7ec1e7e798e18" translate="yes" xml:space="preserve">
          <source>GBK Text Codec</source>
          <target state="translated">GBK 텍스트 코덱</target>
        </trans-unit>
        <trans-unit id="c8cc46668d9b27613276769721ca00e091d2adfa" translate="yes" xml:space="preserve">
          <source>GBK has been superseded by the new Chinese national standard GB 18030-2000, which added a 4-byte encoding while remaining compatible with GB2312 and GBK. The new GB 18030-2000 may be described as a special encoding of Unicode 3.x and ISO-10646-1.</source>
          <target state="translated">GBK는 GB2312 및 GBK와의 호환성을 유지하면서 4 바이트 인코딩을 추가 한 새로운 중국 국가 표준 GB 18030-2000으로 대체되었습니다. 새로운 GB 18030-2000은 유니 코드 3.x 및 ISO-10646-1의 특수 인코딩으로 설명 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92984f9d2e2edaacaf26605ab0b5d45570e86ff1" translate="yes" xml:space="preserve">
          <source>GBK, formally the Chinese Internal Code Specification, is a commonly used extension of GB 2312-80. Microsoft Windows uses it under the name codepage 936.</source>
          <target state="translated">GBK (공식적으로 중국 내부 코드 사양)는 GB 2312-80의 일반적으로 사용되는 확장입니다. Microsoft Windows는 이름 코드 페이지 936에서이 이름을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="e26ba39ff809fe3384726df9f987c7a8a4b16182" translate="yes" xml:space="preserve">
          <source>GCC (5 or later), ICC 18.x</source>
          <target state="translated">GCC (5 이상), ICC 18.x</target>
        </trans-unit>
        <trans-unit id="4ee5633510d7000ce330c69765904190b19bca81" translate="yes" xml:space="preserve">
          <source>GCC (MinGW-builds)</source>
          <target state="translated">GCC (MinGW 빌드)</target>
        </trans-unit>
        <trans-unit id="c7e2652a2ef22aae032040056ffa758b404a651b" translate="yes" xml:space="preserve">
          <source>GCC 3.4 and above</source>
          <target state="translated">GCC 3.4 이상</target>
        </trans-unit>
        <trans-unit id="905a421e0db5bfdece09131d0643ecb32705e816" translate="yes" xml:space="preserve">
          <source>GCC 4.8, GCC 4.9, GCC 5, GCC 6, GCC 7</source>
          <target state="translated">GCC 4.8, GCC 4.9, GCC 5, GCC 6, GCC 7</target>
        </trans-unit>
        <trans-unit id="681a6d05ae424f6f135ee309a62622e5d3a446d2" translate="yes" xml:space="preserve">
          <source>GCC 4.9.2 fails to build Qt:</source>
          <target state="translated">GCC 4.9.2가 Qt를 빌드하지 못함 :</target>
        </trans-unit>
        <trans-unit id="74e8a81724434eadb1666cca5d61439bbcad27fd" translate="yes" xml:space="preserve">
          <source>GCC 5 or later, &lt;b&gt;GCC 10&lt;/b&gt;</source>
          <target state="translated">GCC 5 이상, &lt;b&gt;GCC 10&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="9f15582873e303d19e06afb57ab7306d3386a54c" translate="yes" xml:space="preserve">
          <source>GCC 5 or later, &lt;b&gt;GCC 7&lt;/b&gt;, &lt;b&gt;ICC 19.1&lt;/b&gt;</source>
          <target state="translated">GCC 5 이상, &lt;b&gt;GCC 7&lt;/b&gt; , &lt;b&gt;ICC 19.1&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="532d3ee47776a15f6a5780ebc0f65f96ea37a6e5" translate="yes" xml:space="preserve">
          <source>GCC 5 or later, &lt;b&gt;GCC 9&lt;/b&gt;</source>
          <target state="translated">GCC 5 이상, &lt;b&gt;GCC 9&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="cdf2e4e86f0be2103e7f1e2853e628f84723ae4b" translate="yes" xml:space="preserve">
          <source>GCC 5.2.1: Nested structs do not get their constructors called under some circumstances:</source>
          <target state="translated">GCC 5.2.1 : 중첩 된 구조체는 어떤 상황에서 생성자가 호출되지 않습니다 :</target>
        </trans-unit>
        <trans-unit id="7d146a3361501cfbc06688b8248e8a070e088e78" translate="yes" xml:space="preserve">
          <source>GCC as provided by Canonical, &lt;b&gt;GCC 7.3.0&lt;/b&gt;</source>
          <target state="translated">Canonical, &lt;b&gt;GCC 7.3.0에서&lt;/b&gt; 제공하는 &lt;b&gt;GCC&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="e03fe2f2b15b645c8cf5459b516ef4523b045a40" translate="yes" xml:space="preserve">
          <source>GCC as provided by Canonical, GCC 5.4.0</source>
          <target state="translated">Canonical, GCC 5.4.0에서 제공하는 GCC</target>
        </trans-unit>
        <trans-unit id="dce9536e9a4cc0e7fd25e097cdc81e77a1ff20f8" translate="yes" xml:space="preserve">
          <source>GCC toolchain</source>
          <target state="translated">GCC 툴체인</target>
        </trans-unit>
        <trans-unit id="d2b04a5a87dc20f5bf65dcfec475aeaf0d3f192d" translate="yes" xml:space="preserve">
          <source>GET method.</source>
          <target state="translated">GET 방법.</target>
        </trans-unit>
        <trans-unit id="758f6c9347b91091c38ad698a8eba6aeac47b9c4" translate="yes" xml:space="preserve">
          <source>GIF</source>
          <target state="translated">GIF</target>
        </trans-unit>
        <trans-unit id="ea6f0defe696628dca20893d2b174b6ab9d7989d" translate="yes" xml:space="preserve">
          <source>GLSL Type</source>
          <target state="translated">GLSL 유형</target>
        </trans-unit>
        <trans-unit id="d8e1eacd285ad413150ce5490270dcf3402c667b" translate="yes" xml:space="preserve">
          <source>GLSL declaration</source>
          <target state="translated">GLSL 선언</target>
        </trans-unit>
        <trans-unit id="e25c49fb83ef5c66088e1edd665e7db194d124b5" translate="yes" xml:space="preserve">
          <source>GLSL or GLSL ES</source>
          <target state="translated">GLSL 또는 GLSL ES</target>
        </trans-unit>
        <trans-unit id="3e50ba82159f88952f0e8c21830467a813d923bd" translate="yes" xml:space="preserve">
          <source>GLSL shaders are able to reorder the components of the vec4 returned by texture functions. It is also desirable to be able to control this reordering from CPU side code. This is made possible by swizzle masks since OpenGL 3.3.</source>
          <target state="translated">GLSL 쉐이더는 텍스처 함수에 의해 반환 된 vec4의 컴포넌트를 재정렬 할 수 있습니다. 또한 CPU 측 코드에서이 순서를 제어 할 수있는 것이 바람직합니다. 이것은 OpenGL 3.3 이후 swizzle 마스크로 가능합니다.</target>
        </trans-unit>
        <trans-unit id="b34bf40aea00e3646da8e7bcaf8908dcef42b8a2" translate="yes" xml:space="preserve">
          <source>GLTF2 (.gltf, .glb)</source>
          <target state="translated">GLTF2 (.gltf, .glb)</target>
        </trans-unit>
        <trans-unit id="699f429c081b1ca517aca5ede69f604d3bd872b3" translate="yes" xml:space="preserve">
          <source>GL_ALPHA</source>
          <target state="translated">GL_ALPHA</target>
        </trans-unit>
        <trans-unit id="6a2f23129e97d2eadc2674bbdc4f287f591eb024" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_R11_EAC</source>
          <target state="translated">GL_COMPRESSED_R11_EAC</target>
        </trans-unit>
        <trans-unit id="7ff93b2a8830781ec9016810d2cab778f85ed574" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RED_RGTC1</source>
          <target state="translated">GL_COMPRESSED_RED_RGTC1</target>
        </trans-unit>
        <trans-unit id="5c298be1718b37c10f78e7809ccd4bd6883188f3" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RG11_EAC</source>
          <target state="translated">GL_COMPRESSED_RG11_EAC</target>
        </trans-unit>
        <trans-unit id="4b6ab3efc00f3dee0a65283761916d90d3acb73b" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGB8_ETC2</source>
          <target state="translated">GL_COMPRESSED_RGB8_ETC2</target>
        </trans-unit>
        <trans-unit id="c997a685752d301f76886f69d70f711c7bb75f8d" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2</source>
          <target state="translated">GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2</target>
        </trans-unit>
        <trans-unit id="b160814572821ea0905d34442a56339fb5077982" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGBA8_ETC2_EAC</source>
          <target state="translated">GL_COMPRESSED_RGBA8_ETC2_EAC</target>
        </trans-unit>
        <trans-unit id="c742676de44a162cfee6bb02198e78cb8de6f9c1" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGBA_BPTC_UNORM_ARB</source>
          <target state="translated">GL_COMPRESSED_RGBA_BPTC_UNORM_ARB</target>
        </trans-unit>
        <trans-unit id="43c0717ab66acb571aa3b1878faa8d02d5a1aa3e" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGBA_S3TC_DXT1_EXT</source>
          <target state="translated">GL_COMPRESSED_RGBA_S3TC_DXT1_EXT</target>
        </trans-unit>
        <trans-unit id="93dbfa8fe19f1e83f1c11e016cb5db7d057dd6f5" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGBA_S3TC_DXT3_EXT</source>
          <target state="translated">GL_COMPRESSED_RGBA_S3TC_DXT3_EXT</target>
        </trans-unit>
        <trans-unit id="a88ccec9a9e05501c9e4cb40a191d5d67b22cfe6" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGBA_S3TC_DXT5_EXT</source>
          <target state="translated">GL_COMPRESSED_RGBA_S3TC_DXT5_EXT</target>
        </trans-unit>
        <trans-unit id="dfc599759cc2d9735836ad35199b31f2d33da0b3" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB</source>
          <target state="translated">GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB</target>
        </trans-unit>
        <trans-unit id="317e54baa4b8ae2894f9906ca170871d529bd8d2" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB</source>
          <target state="translated">GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB</target>
        </trans-unit>
        <trans-unit id="05f4d41824ba34e049d9d28f1b4ad41c793fe1b2" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RGB_S3TC_DXT1_EXT</source>
          <target state="translated">GL_COMPRESSED_RGB_S3TC_DXT1_EXT</target>
        </trans-unit>
        <trans-unit id="05bd69cfb73b118a4e00ce1c2698fe00cba289d3" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_RG_RGTC2</source>
          <target state="translated">GL_COMPRESSED_RG_RGTC2</target>
        </trans-unit>
        <trans-unit id="2edeb2956f39e2c78b9f3cc5d94c0e5a7bf1efcc" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SIGNED_R11_EAC</source>
          <target state="translated">GL_COMPRESSED_SIGNED_R11_EAC</target>
        </trans-unit>
        <trans-unit id="c3f7f2f7a353cf74ec9be61efac4bb2e709e9268" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SIGNED_RED_RGTC1</source>
          <target state="translated">GL_COMPRESSED_SIGNED_RED_RGTC1</target>
        </trans-unit>
        <trans-unit id="cf0f1bd5bced3e1bd0793eed2a0542ec9e828e0d" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SIGNED_RG11_EAC</source>
          <target state="translated">GL_COMPRESSED_SIGNED_RG11_EAC</target>
        </trans-unit>
        <trans-unit id="ab2206b6d6bd0fcd805deac0741a5dde1c12201a" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SIGNED_RG_RGTC2</source>
          <target state="translated">GL_COMPRESSED_SIGNED_RG_RGTC2</target>
        </trans-unit>
        <trans-unit id="fbdafc371a2bfb973daaf6d41b62fa8c7da4102a" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC</source>
          <target state="translated">GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC</target>
        </trans-unit>
        <trans-unit id="c37bcbb38243151937073687e97d4515c6a6f865" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SRGB8_ETC2</source>
          <target state="translated">GL_COMPRESSED_SRGB8_ETC2</target>
        </trans-unit>
        <trans-unit id="3371554790fa00d6f55938aecdd377d81d38e075" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2</source>
          <target state="translated">GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2</target>
        </trans-unit>
        <trans-unit id="e304cb75d2e57bd188286bcc1e27e2096cd28600" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB</source>
          <target state="translated">GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB</target>
        </trans-unit>
        <trans-unit id="a20a9d598a9d89ebb265c37218cc79fd0c07935d" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT</source>
          <target state="translated">GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT</target>
        </trans-unit>
        <trans-unit id="d7d35b5477a08fa4e1ef6db9b79f12767d17b90a" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT</source>
          <target state="translated">GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT</target>
        </trans-unit>
        <trans-unit id="fd5d135530f7de237f1f431661859a1b5c0fb270" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT</source>
          <target state="translated">GL_COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT</target>
        </trans-unit>
        <trans-unit id="e4ff37347b212338e010d560ee1df9c806e1c5ad" translate="yes" xml:space="preserve">
          <source>GL_COMPRESSED_SRGB_S3TC_DXT1_EXT</source>
          <target state="translated">GL_COMPRESSED_SRGB_S3TC_DXT1_EXT</target>
        </trans-unit>
        <trans-unit id="a6b3c3235f45bb2f9fe2ce3b601e3e87e161679f" translate="yes" xml:space="preserve">
          <source>GL_CONSTANT_ALPHA</source>
          <target state="translated">GL_CONSTANT_ALPHA</target>
        </trans-unit>
        <trans-unit id="929c26f36ca3ca264fb569de50d9b2a87ba4464b" translate="yes" xml:space="preserve">
          <source>GL_DEPTH24_STENCIL8</source>
          <target state="translated">GL_DEPTH24_STENCIL8</target>
        </trans-unit>
        <trans-unit id="3370225565350e68674358663988a705e103eeb4" translate="yes" xml:space="preserve">
          <source>GL_DEPTH32F_STENCIL8</source>
          <target state="translated">GL_DEPTH32F_STENCIL8</target>
        </trans-unit>
        <trans-unit id="6f8c953d6c168e7b73cd64ae7d8eeb0e9c09892f" translate="yes" xml:space="preserve">
          <source>GL_DEPTH_COMPONENT</source>
          <target state="translated">GL_DEPTH_COMPONENT</target>
        </trans-unit>
        <trans-unit id="1e877eaf15aeb8f62245a2fd79a910e81201b106" translate="yes" xml:space="preserve">
          <source>GL_DEPTH_COMPONENT16</source>
          <target state="translated">GL_DEPTH_COMPONENT16</target>
        </trans-unit>
        <trans-unit id="5f74746d9de958f66b93c60fded77eb82119b5fc" translate="yes" xml:space="preserve">
          <source>GL_DEPTH_COMPONENT24</source>
          <target state="translated">GL_DEPTH_COMPONENT24</target>
        </trans-unit>
        <trans-unit id="1d0f0cce4d5abed8cb2f8771b60435c37ca4c9df" translate="yes" xml:space="preserve">
          <source>GL_DEPTH_COMPONENT32</source>
          <target state="translated">GL_DEPTH_COMPONENT32</target>
        </trans-unit>
        <trans-unit id="a06773ab7a0262799d47d53f335414a52a926328" translate="yes" xml:space="preserve">
          <source>GL_DEPTH_COMPONENT32F</source>
          <target state="translated">GL_DEPTH_COMPONENT32F</target>
        </trans-unit>
        <trans-unit id="094b988dd5ffd5728baa01675bd8d10669c8c4f7" translate="yes" xml:space="preserve">
          <source>GL_DST_ALPHA</source>
          <target state="translated">GL_DST_ALPHA</target>
        </trans-unit>
        <trans-unit id="2a5cb92d98dc3cf674ebaa846eb1c094e8cc539a" translate="yes" xml:space="preserve">
          <source>GL_DST_COLOR</source>
          <target state="translated">GL_DST_COLOR</target>
        </trans-unit>
        <trans-unit id="0d98d8e7c368dcbb44863f1971372d5cd0064a8d" translate="yes" xml:space="preserve">
          <source>GL_DYNAMIC_COPY</source>
          <target state="translated">GL_DYNAMIC_COPY</target>
        </trans-unit>
        <trans-unit id="13d529c7113f047b7c685332a6809dc7f896d5f8" translate="yes" xml:space="preserve">
          <source>GL_DYNAMIC_DRAW</source>
          <target state="translated">GL_DYNAMIC_DRAW</target>
        </trans-unit>
        <trans-unit id="dba6ac72b166edd7535921b709fad7af83498c22" translate="yes" xml:space="preserve">
          <source>GL_DYNAMIC_READ</source>
          <target state="translated">GL_DYNAMIC_READ</target>
        </trans-unit>
        <trans-unit id="d5c0f980333286e2d9e3e06c8db07c1f72906e9f" translate="yes" xml:space="preserve">
          <source>GL_ETC1_RGB8_OES</source>
          <target state="translated">GL_ETC1_RGB8_OES</target>
        </trans-unit>
        <trans-unit id="5a09879fde832b3edc9d02b5475eee1c46e37265" translate="yes" xml:space="preserve">
          <source>GL_FUNC_ADD</source>
          <target state="translated">GL_FUNC_ADD</target>
        </trans-unit>
        <trans-unit id="d17a4384baf4f06db398b7024c936a8c485708f7" translate="yes" xml:space="preserve">
          <source>GL_FUNC_REVERSE_SUBTRACT</source>
          <target state="translated">GL_FUNC_REVERSE_SUBTRACT</target>
        </trans-unit>
        <trans-unit id="4840be8232118648e6859e74da3a681b238730ce" translate="yes" xml:space="preserve">
          <source>GL_FUNC_SUBTRACT</source>
          <target state="translated">GL_FUNC_SUBTRACT</target>
        </trans-unit>
        <trans-unit id="72ac82bde74d9ea411f7043568f4465a8323d590" translate="yes" xml:space="preserve">
          <source>GL_IMAGE_1D</source>
          <target state="translated">GL_IMAGE_1D</target>
        </trans-unit>
        <trans-unit id="6850fed80fe6e197742bd4a3ed1e959396b3c692" translate="yes" xml:space="preserve">
          <source>GL_IMAGE_1D_ARRAY</source>
          <target state="translated">GL_IMAGE_1D_ARRAY</target>
        </trans-unit>
        <trans-unit id="6b51c98adc5b8257141ad4d1bcfd86f1e0054aa3" translate="yes" xml:space="preserve">
          <source>GL_IMAGE_2D</source>
          <target state="translated">GL_IMAGE_2D</target>
        </trans-unit>
        <trans-unit id="a8a9a7cf9ff5f13780a5be72444fdbbefbce87fb" translate="yes" xml:space="preserve">
          <source>GL_IMAGE_2D_ARRAY</source>
          <target state="translated">GL_IMAGE_2D_ARRAY</target>
        </trans-unit>
        <trans-unit id="2875aad341a0d370c8c691fef148ac207edd2c90" translate="yes" xml:space="preserve">
          <source>GL_IMAGE_2D_MULTISAMPLE</source>
          <target state="translated">GL_IMAGE_2D_MULTISAMPLE</target>
        </trans-unit>
        <trans-unit id="646ea57a7bf109397215fe3effe0a0ec1c4894a0" translate="yes" xml:space="preserve">
          <source>GL_IMAGE_2D_MULTISAMPLE_ARRAY</source>
          <target state="translated">GL_IMAGE_2D_MULTISAMPLE_ARRAY</target>
        </trans-unit>
        <trans-unit id="f00ae5ce9f53819999d4c28d8c8f2f792188d894" translate="yes" xml:space="preserve">
          <source>GL_IMAGE_2D_RECT</source>
          <target state="translated">GL_IMAGE_2D_RECT</target>
        </trans-unit>
        <trans-unit id="cde5b247543da4ee43d0c002796abb2ab8322398" translate="yes" xml:space="preserve">
          <source>GL_IMAGE_3D</source>
          <target state="translated">GL_IMAGE_3D</target>
        </trans-unit>
        <trans-unit id="42f80c32e7bf6e79e4d2d9695ce1d7f24afe6c20" translate="yes" xml:space="preserve">
          <source>GL_IMAGE_BUFFER</source>
          <target state="translated">GL_IMAGE_BUFFER</target>
        </trans-unit>
        <trans-unit id="8ca91f5c9ead49f713f376a2c55143fc8419b7b3" translate="yes" xml:space="preserve">
          <source>GL_IMAGE_CUBE</source>
          <target state="translated">GL_IMAGE_CUBE</target>
        </trans-unit>
        <trans-unit id="e9e6679e54318d22b81887f078343f9397e80fe9" translate="yes" xml:space="preserve">
          <source>GL_IMAGE_CUBE_MAP_ARRAY</source>
          <target state="translated">GL_IMAGE_CUBE_MAP_ARRAY</target>
        </trans-unit>
        <trans-unit id="e9e48fd672318f0b4f68f992fb4e3d6150ce756d" translate="yes" xml:space="preserve">
          <source>GL_INT_IMAGE_1D</source>
          <target state="translated">GL_INT_IMAGE_1D</target>
        </trans-unit>
        <trans-unit id="5f2a0353d0b9a2d19c7d39b037b5b5894a250954" translate="yes" xml:space="preserve">
          <source>GL_INT_IMAGE_1D_ARRAY</source>
          <target state="translated">GL_INT_IMAGE_1D_ARRAY</target>
        </trans-unit>
        <trans-unit id="2bff5c6d2ce51d2ec89530fac4484ec386e85d5a" translate="yes" xml:space="preserve">
          <source>GL_INT_IMAGE_2D</source>
          <target state="translated">GL_INT_IMAGE_2D</target>
        </trans-unit>
        <trans-unit id="212eb1b638835450faa53126eb52fbb482be9d8a" translate="yes" xml:space="preserve">
          <source>GL_INT_IMAGE_2D_ARRAY</source>
          <target state="translated">GL_INT_IMAGE_2D_ARRAY</target>
        </trans-unit>
        <trans-unit id="54213dee539cd70182ea12dcc63c8eb254edeb54" translate="yes" xml:space="preserve">
          <source>GL_INT_IMAGE_2D_MULTISAMPLE</source>
          <target state="translated">GL_INT_IMAGE_2D_MULTISAMPLE</target>
        </trans-unit>
        <trans-unit id="0e707b310a96cce5062dadcc7222107e59103ccd" translate="yes" xml:space="preserve">
          <source>GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY</source>
          <target state="translated">GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY</target>
        </trans-unit>
        <trans-unit id="275c263c3a0a86853af8a92df283e40519e5e02e" translate="yes" xml:space="preserve">
          <source>GL_INT_IMAGE_2D_RECT</source>
          <target state="translated">GL_INT_IMAGE_2D_RECT</target>
        </trans-unit>
        <trans-unit id="27230ddcafb0f2d267a25b2459868ee2d8832da7" translate="yes" xml:space="preserve">
          <source>GL_INT_IMAGE_3D</source>
          <target state="translated">GL_INT_IMAGE_3D</target>
        </trans-unit>
        <trans-unit id="f4155a40dba5035c47a32e3782945b3c0cc94e3b" translate="yes" xml:space="preserve">
          <source>GL_INT_IMAGE_BUFFER</source>
          <target state="translated">GL_INT_IMAGE_BUFFER</target>
        </trans-unit>
        <trans-unit id="467adc273dd5fef556db67c2b1e6a1f4ca33ef65" translate="yes" xml:space="preserve">
          <source>GL_INT_IMAGE_CUBE</source>
          <target state="translated">GL_INT_IMAGE_CUBE</target>
        </trans-unit>
        <trans-unit id="b3aa0a366d80a87003f37bf616ee6f64ed5b6e0d" translate="yes" xml:space="preserve">
          <source>GL_INT_IMAGE_CUBE_MAP_ARRAY</source>
          <target state="translated">GL_INT_IMAGE_CUBE_MAP_ARRAY</target>
        </trans-unit>
        <trans-unit id="f0a339a82bc28c7bf32a5467ec9a6b86a02b747e" translate="yes" xml:space="preserve">
          <source>GL_LINEAR</source>
          <target state="translated">GL_LINEAR</target>
        </trans-unit>
        <trans-unit id="d9366de68e4f0faba9fed7ad39df5fb657b620d4" translate="yes" xml:space="preserve">
          <source>GL_LINEAR_MIPMAP_LINEAR</source>
          <target state="translated">GL_LINEAR_MIPMAP_LINEAR</target>
        </trans-unit>
        <trans-unit id="9c5e93409f7326f86e1084228d151efc044581a2" translate="yes" xml:space="preserve">
          <source>GL_LINEAR_MIPMAP_NEAREST</source>
          <target state="translated">GL_LINEAR_MIPMAP_NEAREST</target>
        </trans-unit>
        <trans-unit id="051cc28b3a44241ace9d510ba5476ff238f2d5c4" translate="yes" xml:space="preserve">
          <source>GL_LUMINANCE</source>
          <target state="translated">GL_LUMINANCE</target>
        </trans-unit>
        <trans-unit id="f2af61640cc587dbf3f5556117079fc19c84d4e2" translate="yes" xml:space="preserve">
          <source>GL_MAX</source>
          <target state="translated">GL_MAX</target>
        </trans-unit>
        <trans-unit id="b09ac64fc9f924b3e9d972798eef253f28a992a0" translate="yes" xml:space="preserve">
          <source>GL_MIN</source>
          <target state="translated">GL_MIN</target>
        </trans-unit>
        <trans-unit id="46210c2f564cbc54d04a82cb20bf3d9fb3cafe38" translate="yes" xml:space="preserve">
          <source>GL_NEAREST</source>
          <target state="translated">GL_NEAREST</target>
        </trans-unit>
        <trans-unit id="deca253cac56d684e9ed9a2513e83a9b42608993" translate="yes" xml:space="preserve">
          <source>GL_NEAREST_MIPMAP_LINEAR</source>
          <target state="translated">GL_NEAREST_MIPMAP_LINEAR</target>
        </trans-unit>
        <trans-unit id="af4ac704e1c42139608e3be8b0c7731f00167917" translate="yes" xml:space="preserve">
          <source>GL_NEAREST_MIPMAP_NEAREST</source>
          <target state="translated">GL_NEAREST_MIPMAP_NEAREST</target>
        </trans-unit>
        <trans-unit id="ea7b9ef969c2a70704cdad2c8d62b624921f3450" translate="yes" xml:space="preserve">
          <source>GL_NONE</source>
          <target state="translated">GL_NONE</target>
        </trans-unit>
        <trans-unit id="76593b2cae4b788603bdb14d8a29d1b4c7713fff" translate="yes" xml:space="preserve">
          <source>GL_ONE</source>
          <target state="translated">GL_ONE</target>
        </trans-unit>
        <trans-unit id="2bc0aeff3290b0b8cd4bcc8a4a5948100457d403" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_CONSTANT_ALPHA</source>
          <target state="translated">GL_ONE_MINUS_CONSTANT_ALPHA</target>
        </trans-unit>
        <trans-unit id="34b10b015aa26cb9f2977169a871521d104174dc" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_CONSTANT_COLOR</source>
          <target state="translated">GL_ONE_MINUS_CONSTANT_COLOR</target>
        </trans-unit>
        <trans-unit id="c63f4f66e7713124395e9d9301d77e8874db1cb8" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_DST_ALPHA</source>
          <target state="translated">GL_ONE_MINUS_DST_ALPHA</target>
        </trans-unit>
        <trans-unit id="e778ea86fb02819677df69d729c3248c68680c98" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_DST_COLOR</source>
          <target state="translated">GL_ONE_MINUS_DST_COLOR</target>
        </trans-unit>
        <trans-unit id="3ac84a8a2ea7e1bdedb2005d9772b173cd956887" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_SRC1_ALPHA</source>
          <target state="translated">GL_ONE_MINUS_SRC1_ALPHA</target>
        </trans-unit>
        <trans-unit id="0aedf04b8256dca9021b07cbf2d3c0ae376fd57e" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_SRC1_COLOR</source>
          <target state="translated">GL_ONE_MINUS_SRC1_COLOR</target>
        </trans-unit>
        <trans-unit id="2a4be77208ccc18ee38542be998a0446a3d09254" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_SRC1_COLOR (deprecated)</source>
          <target state="translated">GL_ONE_MINUS_SRC1_COLOR (더 이상 사용되지 않음)</target>
        </trans-unit>
        <trans-unit id="3e764c871721bfacfcc1e7b1604f1a808fe64a67" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_SRC_ALPHA</source>
          <target state="translated">GL_ONE_MINUS_SRC_ALPHA</target>
        </trans-unit>
        <trans-unit id="e07d0dc9efc7907d53f125daf1ad0b8b54e8de03" translate="yes" xml:space="preserve">
          <source>GL_ONE_MINUS_SRC_COLOR</source>
          <target state="translated">GL_ONE_MINUS_SRC_COLOR</target>
        </trans-unit>
        <trans-unit id="23c5e662b50bf8526fc6d27238160d36ea573d11" translate="yes" xml:space="preserve">
          <source>GL_R11F_G11F_B10F</source>
          <target state="translated">GL_R11F_G11F_B10F</target>
        </trans-unit>
        <trans-unit id="4546b85dfa83ea995902240cddbbbd4c4d5c8763" translate="yes" xml:space="preserve">
          <source>GL_R11F_G11F_B10F (GLSL type r11f_g11f_b10f, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_R11F_G11F_B10F (GLSL 유형 r11f_g11f_b10f, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="afe5ee77c3a41b4f73354a2c57cb918491b80cce" translate="yes" xml:space="preserve">
          <source>GL_R16</source>
          <target state="translated">GL_R16</target>
        </trans-unit>
        <trans-unit id="04ab0434f2ff797ed1386a01ffa1c82d6bef9f4b" translate="yes" xml:space="preserve">
          <source>GL_R16 (GLSL type r16, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_R16 (GLSL 유형 r16, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="c8cba7c55be4bb743868eaa6a9ac14f114c93c91" translate="yes" xml:space="preserve">
          <source>GL_R16F</source>
          <target state="translated">GL_R16F</target>
        </trans-unit>
        <trans-unit id="3d2bcdd6f7ed7c2b3451685b3356008363871e9e" translate="yes" xml:space="preserve">
          <source>GL_R16F (GLSL type r16f, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_R16F (GLSL 유형 r16f, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="47f3f698dd9305323b2a100d2acdfd1495db8b4b" translate="yes" xml:space="preserve">
          <source>GL_R16I</source>
          <target state="translated">GL_R16I</target>
        </trans-unit>
        <trans-unit id="cb401283bf2f990f837f5660c31f09e99826323c" translate="yes" xml:space="preserve">
          <source>GL_R16I (GLSL type r16i, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_R16I (GLSL 유형 r16i, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="c081750490d8e4e9abe69e21222c991b070c1665" translate="yes" xml:space="preserve">
          <source>GL_R16UI</source>
          <target state="translated">GL_R16UI</target>
        </trans-unit>
        <trans-unit id="16c50925d177b08fa5229bc42593bc655a5d8971" translate="yes" xml:space="preserve">
          <source>GL_R16UI (GLSL type r16ui, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_R16UI (GLSL 유형 r16ui, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="c52b8671e8c09cf7a53e4129f6349ebddfa56042" translate="yes" xml:space="preserve">
          <source>GL_R16_SNORM</source>
          <target state="translated">GL_R16_SNORM</target>
        </trans-unit>
        <trans-unit id="c6318a85f586bb703e82ab6bcadf3c8c0f043f36" translate="yes" xml:space="preserve">
          <source>GL_R16_SNORM (GLSL type r16_snorm, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_R16_SNORM (GLSL 유형 r16_snorm, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="0fa157de6ee34d19f727a89d22b39a125ac87b18" translate="yes" xml:space="preserve">
          <source>GL_R32F</source>
          <target state="translated">GL_R32F</target>
        </trans-unit>
        <trans-unit id="5a43bef3fa528c97d34bcf828e80d97b941bb995" translate="yes" xml:space="preserve">
          <source>GL_R32F (GLSL type r32f, supported by OpenGL 4.2+, OpenGL ES 3.1+)</source>
          <target state="translated">GL_R32F (GLSL 유형 r32f, OpenGL 4.2+, OpenGL ES 3.1+에서 지원)</target>
        </trans-unit>
        <trans-unit id="c89fe50b062eaf0d7e3a917afb029716578726f6" translate="yes" xml:space="preserve">
          <source>GL_R32I</source>
          <target state="translated">GL_R32I</target>
        </trans-unit>
        <trans-unit id="81881870a2556991ff702bd5f817c25819442393" translate="yes" xml:space="preserve">
          <source>GL_R32I (GLSL type r32i, supported by OpenGL 4.2+, OpenGL ES 3.1+)</source>
          <target state="translated">GL_R32I (GLSL 유형 r32i, OpenGL 4.2+, OpenGL ES 3.1+에서 지원)</target>
        </trans-unit>
        <trans-unit id="2edade79a59425bc1df9fdfbc329d182464ad90b" translate="yes" xml:space="preserve">
          <source>GL_R32UI</source>
          <target state="translated">GL_R32UI</target>
        </trans-unit>
        <trans-unit id="8a817c35ce7b06319ba3db73359aa6b35a8c1d99" translate="yes" xml:space="preserve">
          <source>GL_R32UI (GLSL type r32ui, supported by OpenGL 4.2+, OpenGL ES 3.1)</source>
          <target state="translated">GL_R32UI (GLSL 유형 r32ui, OpenGL 4.2+, OpenGL ES 3.1에서 지원)</target>
        </trans-unit>
        <trans-unit id="8ecb2586cc3417b8748cfd751a4c562c107c938a" translate="yes" xml:space="preserve">
          <source>GL_R3_G3_B2</source>
          <target state="translated">GL_R3_G3_B2</target>
        </trans-unit>
        <trans-unit id="3d69ab84cabbb9b3123d4e10affbd47ca561b049" translate="yes" xml:space="preserve">
          <source>GL_R8</source>
          <target state="translated">GL_R8</target>
        </trans-unit>
        <trans-unit id="84df21d9338823fee9597165e442ce318383f287" translate="yes" xml:space="preserve">
          <source>GL_R8 (GLSL type r8, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_R8 (GLSL 유형 r8, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="dc0e918b50efc690c8784a9707846ab392944a25" translate="yes" xml:space="preserve">
          <source>GL_R8I</source>
          <target state="translated">GL_R8I</target>
        </trans-unit>
        <trans-unit id="ad860cd0bae0431a095cf79afbff455ef31dbc53" translate="yes" xml:space="preserve">
          <source>GL_R8I (GLSL type r8i, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_R8I (GLSL 유형 r8i, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="98734db8dfa5e46393e7c582179194671ccedf7b" translate="yes" xml:space="preserve">
          <source>GL_R8UI</source>
          <target state="translated">GL_R8UI</target>
        </trans-unit>
        <trans-unit id="bac3eda2db7cda82390228faa6edfe77fa97293f" translate="yes" xml:space="preserve">
          <source>GL_R8UI (GLSL type r8ui, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_R8UI (GLSL 유형 r8ui, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="69ec80258902389ab79821ec03ee72653080fb0f" translate="yes" xml:space="preserve">
          <source>GL_R8_SNORM</source>
          <target state="translated">GL_R8_SNORM</target>
        </trans-unit>
        <trans-unit id="d8230ee7d42923eff1f16a37ca678da2bf8e1726" translate="yes" xml:space="preserve">
          <source>GL_R8_SNORM (GLSL type r8_snorm, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_R8_SNORM (GLSL 유형 r8_snorm, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="f074b81d61024ebca0b6401962f62f994d0c5f33" translate="yes" xml:space="preserve">
          <source>GL_RG16</source>
          <target state="translated">GL_RG16</target>
        </trans-unit>
        <trans-unit id="87870a4b2e16053ced95ea2aede83dd7ba2e5ce6" translate="yes" xml:space="preserve">
          <source>GL_RG16 (GLSL type rg16, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_RG16 (GLSL 유형 rg16, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="39e472739144bf1f5a4454594298cb8f9746b464" translate="yes" xml:space="preserve">
          <source>GL_RG16F</source>
          <target state="translated">GL_RG16F</target>
        </trans-unit>
        <trans-unit id="5d074459f222c295bb298b2898394ab04109f350" translate="yes" xml:space="preserve">
          <source>GL_RG16F (GLSL type rg16f, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_RG16F (GLSL 유형 rg16f, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="82cdd5aa3adbfff907b8c8ac0ec94635abd2f41e" translate="yes" xml:space="preserve">
          <source>GL_RG16I</source>
          <target state="translated">GL_RG16I</target>
        </trans-unit>
        <trans-unit id="9c62b319b691c48c1acb38f0624c1271386a4956" translate="yes" xml:space="preserve">
          <source>GL_RG16I (GLSL type rg16i, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_RG16I (GLSL 유형 rg16i, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="4ae677f5587faeac3768a69338857bba0b03cefd" translate="yes" xml:space="preserve">
          <source>GL_RG16UI</source>
          <target state="translated">GL_RG16UI</target>
        </trans-unit>
        <trans-unit id="4f543034bbd4215ccaf0739b153fdc178d7a8759" translate="yes" xml:space="preserve">
          <source>GL_RG16UI (GLSL type rg16ui, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_RG16UI (GLSL 유형 rg16ui, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="8281c1030dd40b034b087436c3430860cbbfce36" translate="yes" xml:space="preserve">
          <source>GL_RG16_SNORM</source>
          <target state="translated">GL_RG16_SNORM</target>
        </trans-unit>
        <trans-unit id="00a31d02822152f2d11ec97bb966b2b056d700bd" translate="yes" xml:space="preserve">
          <source>GL_RG16_SNORM (GLSL type rg16_snorm, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_RG16_SNORM (GLSL 유형 rg16_snorm, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="562e3b89093e419463929c6e458ce817284ba890" translate="yes" xml:space="preserve">
          <source>GL_RG32F</source>
          <target state="translated">GL_RG32F</target>
        </trans-unit>
        <trans-unit id="2da0b9d42922ab333b7475fb6e9df5a2f9aea8d3" translate="yes" xml:space="preserve">
          <source>GL_RG32F (GLSL type rg32f, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_RG32F (GLSL 유형 rg32f, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="fcd76d39ab50506ac93a84f6c2b8d44ec073bf40" translate="yes" xml:space="preserve">
          <source>GL_RG32I</source>
          <target state="translated">GL_RG32I</target>
        </trans-unit>
        <trans-unit id="25dcc8b448a028e677efccba9bc5d2d257e279c5" translate="yes" xml:space="preserve">
          <source>GL_RG32I (GLSL type rg32i, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_RG32I (GLSL 유형 rg32i, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="b6376f3fec6158d1153bf4a93857e3cab649f9f1" translate="yes" xml:space="preserve">
          <source>GL_RG32UI</source>
          <target state="translated">GL_RG32UI</target>
        </trans-unit>
        <trans-unit id="500ace44333e520061315c654f494e56e01dd6cc" translate="yes" xml:space="preserve">
          <source>GL_RG32UI (GLSL type rg32ui, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_RG32UI (GLSL 유형 rg32ui, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="0df57f8713f2d0f42ef761d6d4532edebb04114f" translate="yes" xml:space="preserve">
          <source>GL_RG8</source>
          <target state="translated">GL_RG8</target>
        </trans-unit>
        <trans-unit id="a6ea70f940b79fc15113a846455758a0ca7643a0" translate="yes" xml:space="preserve">
          <source>GL_RG8 (GLSL type rg8, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_RG8 (GLSL 유형 rg8, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="7d1a2fa4beb8ae876c017fef36d31a55b29bb39b" translate="yes" xml:space="preserve">
          <source>GL_RG8I</source>
          <target state="translated">GL_RG8I</target>
        </trans-unit>
        <trans-unit id="557861a0d1bef1622856871f38d957fd1cc5c9da" translate="yes" xml:space="preserve">
          <source>GL_RG8I (GLSL type rg8i, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_RG8I (GLSL 유형 rg8i, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="0221497975ce7689f560caf4d1820f09c2ea84f8" translate="yes" xml:space="preserve">
          <source>GL_RG8UI</source>
          <target state="translated">GL_RG8UI</target>
        </trans-unit>
        <trans-unit id="d58ce9624f276565c98246c96d58aab1276df2f7" translate="yes" xml:space="preserve">
          <source>GL_RG8UI (GLSL type rg8ui, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_RG8UI (GLSL 유형 rg8ui, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="a49173ed42d7a179e50204eab8fa40c844c0b45f" translate="yes" xml:space="preserve">
          <source>GL_RG8_SNORM</source>
          <target state="translated">GL_RG8_SNORM</target>
        </trans-unit>
        <trans-unit id="2d741407512760ae0de40b0fbae1e0b837e45214" translate="yes" xml:space="preserve">
          <source>GL_RG8_SNORM (GLSL type rg8_snorm, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_RG8_SNORM (GLSL 유형 rg8_snorm, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="0e01ec88bca206008f16013de612773fa3c16e05" translate="yes" xml:space="preserve">
          <source>GL_RGB</source>
          <target state="translated">GL_RGB</target>
        </trans-unit>
        <trans-unit id="d802153cf2ca8df683e43e7f2450b501b30df115" translate="yes" xml:space="preserve">
          <source>GL_RGB10_A2</source>
          <target state="translated">GL_RGB10_A2</target>
        </trans-unit>
        <trans-unit id="b9f419da8bbe4cbd8f381c68fce75b954bf7bea1" translate="yes" xml:space="preserve">
          <source>GL_RGB10_A2 (GLSL type rgb10_a2, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_RGB10_A2 (GLSL 유형 rgb10_a2, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="238bba0cc44af315b925c90aa7b9d7f36fcc29cd" translate="yes" xml:space="preserve">
          <source>GL_RGB10_A2UI</source>
          <target state="translated">GL_RGB10_A2UI</target>
        </trans-unit>
        <trans-unit id="a9d39879e12e0247cb1f3e925386e5b9756b6175" translate="yes" xml:space="preserve">
          <source>GL_RGB10_A2UI (GLSL type rgb10_a2ui, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_RGB10_A2UI (GLSL 유형 rgb10_a2ui, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="93b0e582f7b6d6e81fc221920a810f3e36ee5bce" translate="yes" xml:space="preserve">
          <source>GL_RGB16</source>
          <target state="translated">GL_RGB16</target>
        </trans-unit>
        <trans-unit id="bf37f1bf6caf5b4dbd6a87846ee91ee2e92ae060" translate="yes" xml:space="preserve">
          <source>GL_RGB16F</source>
          <target state="translated">GL_RGB16F</target>
        </trans-unit>
        <trans-unit id="73ff372ce5c212c145f7cae0d1d9607ab6c5366f" translate="yes" xml:space="preserve">
          <source>GL_RGB16I</source>
          <target state="translated">GL_RGB16I</target>
        </trans-unit>
        <trans-unit id="4772b4aefaaaedd8c3b0353c430e639689acb5fd" translate="yes" xml:space="preserve">
          <source>GL_RGB16UI</source>
          <target state="translated">GL_RGB16UI</target>
        </trans-unit>
        <trans-unit id="07138e680e539db086f5f556c04835f9d7d45989" translate="yes" xml:space="preserve">
          <source>GL_RGB16_SNORM</source>
          <target state="translated">GL_RGB16_SNORM</target>
        </trans-unit>
        <trans-unit id="8e6282f3d7b5690bce86d5e397bbfcd7f23419bc" translate="yes" xml:space="preserve">
          <source>GL_RGB32F</source>
          <target state="translated">GL_RGB32F</target>
        </trans-unit>
        <trans-unit id="21d67f158cdfa6d24a05c63ea77f500217f239ec" translate="yes" xml:space="preserve">
          <source>GL_RGB32I</source>
          <target state="translated">GL_RGB32I</target>
        </trans-unit>
        <trans-unit id="d5f0a2442764b5464bbbe462d5b05a4be661bd36" translate="yes" xml:space="preserve">
          <source>GL_RGB32UI</source>
          <target state="translated">GL_RGB32UI</target>
        </trans-unit>
        <trans-unit id="8e99bd59ed9fac6f4b84bda0a2371615355d8dd8" translate="yes" xml:space="preserve">
          <source>GL_RGB565</source>
          <target state="translated">GL_RGB565</target>
        </trans-unit>
        <trans-unit id="345c129c7bfe52a95d4c8b5a3e7143ae7a46e1e6" translate="yes" xml:space="preserve">
          <source>GL_RGB5_A1</source>
          <target state="translated">GL_RGB5_A1</target>
        </trans-unit>
        <trans-unit id="7e9c1b9aa62b53a477a1d0b6b2b298c3cc40939f" translate="yes" xml:space="preserve">
          <source>GL_RGB8</source>
          <target state="translated">GL_RGB8</target>
        </trans-unit>
        <trans-unit id="2e6f9299898b35d6e9a8626207de1a3d265a9425" translate="yes" xml:space="preserve">
          <source>GL_RGB8I</source>
          <target state="translated">GL_RGB8I</target>
        </trans-unit>
        <trans-unit id="62d21d7be7e563b7c41cc565ffe3ed4a1b65729b" translate="yes" xml:space="preserve">
          <source>GL_RGB8UI</source>
          <target state="translated">GL_RGB8UI</target>
        </trans-unit>
        <trans-unit id="4676a59dd78fb15e29f695be86b5e122b0b0a396" translate="yes" xml:space="preserve">
          <source>GL_RGB8_SNORM</source>
          <target state="translated">GL_RGB8_SNORM</target>
        </trans-unit>
        <trans-unit id="2359ede59294c17f36d45750daa1fb041b1533d5" translate="yes" xml:space="preserve">
          <source>GL_RGB9_E5</source>
          <target state="translated">GL_RGB9_E5</target>
        </trans-unit>
        <trans-unit id="d2f7d65e3804862022b4a976a7d27091fc288ebb" translate="yes" xml:space="preserve">
          <source>GL_RGBA</source>
          <target state="translated">GL_RGBA</target>
        </trans-unit>
        <trans-unit id="76aeebdc261f6722a20b50443be5bdc86bcd1af4" translate="yes" xml:space="preserve">
          <source>GL_RGBA16</source>
          <target state="translated">GL_RGBA16</target>
        </trans-unit>
        <trans-unit id="3da5d1f85de17f98b18503556af517121ad6fd15" translate="yes" xml:space="preserve">
          <source>GL_RGBA16 (GLSL type rgba16, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_RGBA16 (GLSL 유형 rgba16, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="54eebe4486dbefa8f60dd33526f92176ca86725e" translate="yes" xml:space="preserve">
          <source>GL_RGBA16F</source>
          <target state="translated">GL_RGBA16F</target>
        </trans-unit>
        <trans-unit id="671de63f558842c47f349c1e4114abfb2d21823a" translate="yes" xml:space="preserve">
          <source>GL_RGBA16F (GLSL type rgba16f, supported by OpenGL 4.2+, OpenGL ES 3.1+)</source>
          <target state="translated">GL_RGBA16F (GLSL 유형 rgba16f, OpenGL 4.2+, OpenGL ES 3.1+에서 지원)</target>
        </trans-unit>
        <trans-unit id="e729a40eeed3a0316a8db348c478ec4f4af391ea" translate="yes" xml:space="preserve">
          <source>GL_RGBA16I</source>
          <target state="translated">GL_RGBA16I</target>
        </trans-unit>
        <trans-unit id="97d8400de467961dc43c958ce2fb3a8990cfc1c9" translate="yes" xml:space="preserve">
          <source>GL_RGBA16I (GLSL type rgba16i, supported by OpenGL 4.2+, OpenGL ES 3.1)</source>
          <target state="translated">GL_RGBA16I (GLSL 유형 rgba16i, OpenGL 4.2+, OpenGL ES 3.1에서 지원)</target>
        </trans-unit>
        <trans-unit id="6ab1c945f1875820ba25ed0589167844f7cf3686" translate="yes" xml:space="preserve">
          <source>GL_RGBA16UI</source>
          <target state="translated">GL_RGBA16UI</target>
        </trans-unit>
        <trans-unit id="198b33b62962417a3b0a2aae7e51186c66d177c5" translate="yes" xml:space="preserve">
          <source>GL_RGBA16UI (GLSL type rgba16ui, supported by OpenGL 4.2+, OpenGL ES 3.1+)</source>
          <target state="translated">GL_RGBA16UI (GLSL 유형 rgba16ui, OpenGL 4.2+, OpenGL ES 3.1+에서 지원)</target>
        </trans-unit>
        <trans-unit id="4a978a0ac951ef9cfdc1a124ca4117c5bd2b72b5" translate="yes" xml:space="preserve">
          <source>GL_RGBA16_SNORM</source>
          <target state="translated">GL_RGBA16_SNORM</target>
        </trans-unit>
        <trans-unit id="162dd48ce3576b6d40b6e3855c0036ad3935ee48" translate="yes" xml:space="preserve">
          <source>GL_RGBA16_SNORM (GLSL type rgba16_snorm, supported by OpenGL 4.2+)</source>
          <target state="translated">GL_RGBA16_SNORM (GLSL 유형 rgba16_snorm, OpenGL 4.2 이상에서 지원)</target>
        </trans-unit>
        <trans-unit id="1bad5d09b31fc0cd7c4385de56b550600aad7e06" translate="yes" xml:space="preserve">
          <source>GL_RGBA32F</source>
          <target state="translated">GL_RGBA32F</target>
        </trans-unit>
        <trans-unit id="de28327e96867daf1fde4da4ad8199c073212919" translate="yes" xml:space="preserve">
          <source>GL_RGBA32F (GLSL type rgba32f, supported by OpenGL 4.2+, OpenGL ES 3.1+)</source>
          <target state="translated">GL_RGBA32F (GLSL 유형 rgba32f, OpenGL 4.2+, OpenGL ES 3.1+에서 지원)</target>
        </trans-unit>
        <trans-unit id="db1350c3506818eaf096325c941b60b5b9422a11" translate="yes" xml:space="preserve">
          <source>GL_RGBA32I</source>
          <target state="translated">GL_RGBA32I</target>
        </trans-unit>
        <trans-unit id="acf3741a7e8e3f1c9bfb232facf60f58c7b0618f" translate="yes" xml:space="preserve">
          <source>GL_RGBA32I (GLSL type rgba32i, supported by OpenGL 4.2+, OpenGL ES 3.1+)</source>
          <target state="translated">GL_RGBA32I (GLSL 유형 rgba32i, OpenGL 4.2+, OpenGL ES 3.1+에서 지원)</target>
        </trans-unit>
        <trans-unit id="9faada4200248d6e1b0f9cc056c9067b6176f809" translate="yes" xml:space="preserve">
          <source>GL_RGBA32UI</source>
          <target state="translated">GL_RGBA32UI</target>
        </trans-unit>
        <trans-unit id="bdb1f0199b0a3bc80a80f8f417be1a5af6445608" translate="yes" xml:space="preserve">
          <source>GL_RGBA32UI (GLSL type rgba32ui, supported by OpenGL 4.2+, OpenGL ES 3.1+)</source>
          <target state="translated">GL_RGBA32UI (GLSL 유형 rgba32ui, OpenGL 4.2+, OpenGL ES 3.1+에서 지원)</target>
        </trans-unit>
        <trans-unit id="fc6293330a5dad96e9b68c2a5cab49722bff71f5" translate="yes" xml:space="preserve">
          <source>GL_RGBA4</source>
          <target state="translated">GL_RGBA4</target>
        </trans-unit>
        <trans-unit id="42cda0a22551d00fcad1c79001ad43cbfa299b73" translate="yes" xml:space="preserve">
          <source>GL_RGBA8</source>
          <target state="translated">GL_RGBA8</target>
        </trans-unit>
        <trans-unit id="990c684aedbc134529cd101d867037194803b83c" translate="yes" xml:space="preserve">
          <source>GL_RGBA8 (GLSL type rgba8, supported by OpenGL 4.2+, OpenGL ES 3.1+)</source>
          <target state="translated">GL_RGBA8 (GLSL 유형 rgba8, OpenGL 4.2+, OpenGL ES 3.1+에서 지원)</target>
        </trans-unit>
        <trans-unit id="e3436356e216b545e1eb6ba6f442c2777bcb8bb4" translate="yes" xml:space="preserve">
          <source>GL_RGBA8I</source>
          <target state="translated">GL_RGBA8I</target>
        </trans-unit>
        <trans-unit id="1ebdb39472ba1e042abc347be94c6530ce76ad17" translate="yes" xml:space="preserve">
          <source>GL_RGBA8I (GLSL type rgba8i, supported by OpenGL 4.2+, OpenGL ES 3.1+)</source>
          <target state="translated">GL_RGBA8I (GLSL 유형 rgba8i, OpenGL 4.2+, OpenGL ES 3.1+에서 지원)</target>
        </trans-unit>
        <trans-unit id="175188a6fae39451efd94142a7263f3a8e4bb909" translate="yes" xml:space="preserve">
          <source>GL_RGBA8UI</source>
          <target state="translated">GL_RGBA8UI</target>
        </trans-unit>
        <trans-unit id="27c2b667f1075fc6865c5b73e1cfb49500ea916e" translate="yes" xml:space="preserve">
          <source>GL_RGBA8UI (GLSL type rgba8ui, supported by OpenGL 4.2+, OpenGL ES 3.1+)</source>
          <target state="translated">GL_RGBA8UI (GLSL 유형 rgba8ui, OpenGL 4.2+, OpenGL ES 3.1+에서 지원)</target>
        </trans-unit>
        <trans-unit id="eb5ba0b7f8300443322c05f5e438de374dfe9241" translate="yes" xml:space="preserve">
          <source>GL_RGBA8_SNORM</source>
          <target state="translated">GL_RGBA8_SNORM</target>
        </trans-unit>
        <trans-unit id="78d24ea66d6f33320c3a80ac6fda4f93254595d6" translate="yes" xml:space="preserve">
          <source>GL_RGBA8_SNORM (GLSL type rgba8_snorm, supported by OpenGL 4.2+, OpenGL ES 3.1+)</source>
          <target state="translated">GL_RGBA8_SNORM (GLSL 유형 rgba8_snorm, OpenGL 4.2+, OpenGL ES 3.1+에서 지원)</target>
        </trans-unit>
        <trans-unit id="8d7da015e09d6e1177c30d7f477c1c0cf5c0b275" translate="yes" xml:space="preserve">
          <source>GL_SRC1_ALPHA</source>
          <target state="translated">GL_SRC1_ALPHA</target>
        </trans-unit>
        <trans-unit id="119e01e771a015e166cb185d6e137915d86478a6" translate="yes" xml:space="preserve">
          <source>GL_SRC1_COLOR</source>
          <target state="translated">GL_SRC1_COLOR</target>
        </trans-unit>
        <trans-unit id="aee7cf52498635a6080adac59062524288fcee28" translate="yes" xml:space="preserve">
          <source>GL_SRC_ALPHA</source>
          <target state="translated">GL_SRC_ALPHA</target>
        </trans-unit>
        <trans-unit id="4e8f36e06d4029fc0194a6bbba3fd1cd064430e6" translate="yes" xml:space="preserve">
          <source>GL_SRC_ALPHA_SATURATE</source>
          <target state="translated">GL_SRC_ALPHA_SATURATE</target>
        </trans-unit>
        <trans-unit id="e129b4237037f613444b13107693c015d259e5a7" translate="yes" xml:space="preserve">
          <source>GL_SRC_COLOR</source>
          <target state="translated">GL_SRC_COLOR</target>
        </trans-unit>
        <trans-unit id="da6f3b2e024b74a7f8cf5015a837ec895219b084" translate="yes" xml:space="preserve">
          <source>GL_SRGB8</source>
          <target state="translated">GL_SRGB8</target>
        </trans-unit>
        <trans-unit id="cf115d61d5b3d2bb9183770093cffbd168891e1c" translate="yes" xml:space="preserve">
          <source>GL_SRGB8_ALPHA8</source>
          <target state="translated">GL_SRGB8_ALPHA8</target>
        </trans-unit>
        <trans-unit id="4d7a18534bcefd30918884fa31f6931390f32517" translate="yes" xml:space="preserve">
          <source>GL_STATIC_COPY</source>
          <target state="translated">GL_STATIC_COPY</target>
        </trans-unit>
        <trans-unit id="1bc5ee3ced56b2ff7dd3d723a41d793a0d399ace" translate="yes" xml:space="preserve">
          <source>GL_STATIC_DRAW</source>
          <target state="translated">GL_STATIC_DRAW</target>
        </trans-unit>
        <trans-unit id="6a4a3c7a3cd965beff8c30ddfb194ed3ac3ee4dc" translate="yes" xml:space="preserve">
          <source>GL_STATIC_READ</source>
          <target state="translated">GL_STATIC_READ</target>
        </trans-unit>
        <trans-unit id="1b89c596957ed035e440bcfad0c961368a6f8839" translate="yes" xml:space="preserve">
          <source>GL_STREAM_COPY</source>
          <target state="translated">GL_STREAM_COPY</target>
        </trans-unit>
        <trans-unit id="8cc0dc0ac50c11f27ff7c6385a404b47f1ae0cc3" translate="yes" xml:space="preserve">
          <source>GL_STREAM_DRAW</source>
          <target state="translated">GL_STREAM_DRAW</target>
        </trans-unit>
        <trans-unit id="6816b72f540a12b2541408b43b35578423f81718" translate="yes" xml:space="preserve">
          <source>GL_STREAM_READ</source>
          <target state="translated">GL_STREAM_READ</target>
        </trans-unit>
        <trans-unit id="d34e589582f809f48fd8a5fcd98b3f97acaaeb35" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_1D</source>
          <target state="translated">GL_TEXTURE_1D</target>
        </trans-unit>
        <trans-unit id="86c49a7c0f384b768d2c1d0d896b65c95a635560" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_1D_ARRAY</source>
          <target state="translated">GL_TEXTURE_1D_ARRAY</target>
        </trans-unit>
        <trans-unit id="0833c3932827341e0a442383b0531ff60ea1578d" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_2D</source>
          <target state="translated">GL_TEXTURE_2D</target>
        </trans-unit>
        <trans-unit id="c0c679c4b2ec16373a060caa7c1e12c929df5e4d" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_2D_ARRAY</source>
          <target state="translated">GL_TEXTURE_2D_ARRAY</target>
        </trans-unit>
        <trans-unit id="9754a2359994f90ddbd2f8d7904982ddf343d45e" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_2D_MULTISAMPLE</source>
          <target state="translated">GL_TEXTURE_2D_MULTISAMPLE</target>
        </trans-unit>
        <trans-unit id="3741e005f4d7bf84df4d9617f85b974f8729f66e" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_2D_MULTISAMPLE_ARRAY</source>
          <target state="translated">GL_TEXTURE_2D_MULTISAMPLE_ARRAY</target>
        </trans-unit>
        <trans-unit id="e6f94970a89edc86e2954920418c61d21d2d8ac5" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_3D</source>
          <target state="translated">GL_TEXTURE_3D</target>
        </trans-unit>
        <trans-unit id="a2e711990ca91877e2c44730fd776fbddebacd1a" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_BUFFER</source>
          <target state="translated">GL_TEXTURE_BUFFER</target>
        </trans-unit>
        <trans-unit id="466a1b38387857745c3af042889d3dbd91791b78" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_CUBE_MAP</source>
          <target state="translated">GL_TEXTURE_CUBE_MAP</target>
        </trans-unit>
        <trans-unit id="ce6426dbdf720778295e9c5513db2dc0d60c93d6" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_CUBE_MAP_ARRAY</source>
          <target state="translated">GL_TEXTURE_CUBE_MAP_ARRAY</target>
        </trans-unit>
        <trans-unit id="bfbfdb448d1521fad6ebd0bf44598bf5f6863f5c" translate="yes" xml:space="preserve">
          <source>GL_TEXTURE_RECTANGLE</source>
          <target state="translated">GL_TEXTURE_RECTANGLE</target>
        </trans-unit>
        <trans-unit id="4152620e98a3ec5f56626858596548a009239d2b" translate="yes" xml:space="preserve">
          <source>GL_UNSIGNED_INT_IMAGE_1D</source>
          <target state="translated">GL_UNSIGNED_INT_IMAGE_1D</target>
        </trans-unit>
        <trans-unit id="ece3f2d80decb484eaf5d1776fce0aac38edbfd3" translate="yes" xml:space="preserve">
          <source>GL_UNSIGNED_INT_IMAGE_1D_ARRAY</source>
          <target state="translated">GL_UNSIGNED_INT_IMAGE_1D_ARRAY</target>
        </trans-unit>
        <trans-unit id="34168e99d4091625222d5da7063e0ba7097506a3" translate="yes" xml:space="preserve">
          <source>GL_UNSIGNED_INT_IMAGE_2D</source>
          <target state="translated">GL_UNSIGNED_INT_IMAGE_2D</target>
        </trans-unit>
        <trans-unit id="52cf45f85c8d93b92ec2fb74787a64221c94cfd7" translate="yes" xml:space="preserve">
          <source>GL_UNSIGNED_INT_IMAGE_2D_ARRAY</source>
          <target state="translated">GL_UNSIGNED_INT_IMAGE_2D_ARRAY</target>
        </trans-unit>
        <trans-unit id="35c0b6c16e39ce25aa25f663f8db64dfbc3aa5a9" translate="yes" xml:space="preserve">
          <source>GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE</source>
          <target state="translated">GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE</target>
        </trans-unit>
        <trans-unit id="e79639632e3a9b8e74de88fe4a1c7addd3182b75" translate="yes" xml:space="preserve">
          <source>GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY</source>
          <target state="translated">GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY</target>
        </trans-unit>
        <trans-unit id="8763d0a8e12104611253a67313723ee96bc14567" translate="yes" xml:space="preserve">
          <source>GL_UNSIGNED_INT_IMAGE_2D_RECT</source>
          <target state="translated">GL_UNSIGNED_INT_IMAGE_2D_RECT</target>
        </trans-unit>
        <trans-unit id="db1fd7cd608abccd7063b412167db34fc07dd0d4" translate="yes" xml:space="preserve">
          <source>GL_UNSIGNED_INT_IMAGE_3D</source>
          <target state="translated">GL_UNSIGNED_INT_IMAGE_3D</target>
        </trans-unit>
        <trans-unit id="458710273502ba89a05c08e855087c31a6f61d0b" translate="yes" xml:space="preserve">
          <source>GL_UNSIGNED_INT_IMAGE_BUFFER</source>
          <target state="translated">GL_UNSIGNED_INT_IMAGE_BUFFER</target>
        </trans-unit>
        <trans-unit id="b42841efb3c4251536db1d1bd91b92a0a7d0d563" translate="yes" xml:space="preserve">
          <source>GL_UNSIGNED_INT_IMAGE_CUBE</source>
          <target state="translated">GL_UNSIGNED_INT_IMAGE_CUBE</target>
        </trans-unit>
        <trans-unit id="b7c01c97f5d3a5f659e6affa50544eeb27e89827" translate="yes" xml:space="preserve">
          <source>GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY</source>
          <target state="translated">GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY</target>
        </trans-unit>
        <trans-unit id="e11c0fd3f964b50d10da13cedf0e414cec7602c4" translate="yes" xml:space="preserve">
          <source>GL_ZERO</source>
          <target state="translated">GL_ZERO</target>
        </trans-unit>
        <trans-unit id="19978c583123db471d322f8538c01889cdab90a2" translate="yes" xml:space="preserve">
          <source>GLboolean</source>
          <target state="translated">GLboolean</target>
        </trans-unit>
        <trans-unit id="7ea9ed0a38a7714b4b8ec3e15b3495fc69a6fe98" translate="yes" xml:space="preserve">
          <source>GLboolean QOpenGLExtraFunctions::glIsEnabledi(GLenum</source>
          <target state="translated">GLboolean QOpenGLExtraFunctions :: glIsEnabledi (GLenum</target>
        </trans-unit>
        <trans-unit id="394056db4940199281485391ee482563b7fb6e9f" translate="yes" xml:space="preserve">
          <source>GLboolean QOpenGLExtraFunctions::glIsProgramPipeline(GLuint</source>
          <target state="translated">GLboolean QOpenGLExtraFunctions :: glIsProgramPipeline (GLuint</target>
        </trans-unit>
        <trans-unit id="d993b6642eb06723e1983f2c6fecd9b14e38526a" translate="yes" xml:space="preserve">
          <source>GLboolean QOpenGLExtraFunctions::glIsQuery(GLuint</source>
          <target state="translated">GLboolean QOpenGLExtraFunctions :: glIsQuery (GLuint</target>
        </trans-unit>
        <trans-unit id="f04db84c65e500b13ff1ca08da8e7e0244a3523f" translate="yes" xml:space="preserve">
          <source>GLboolean QOpenGLExtraFunctions::glIsSampler(GLuint</source>
          <target state="translated">GLboolean QOpenGLExtraFunctions :: glIsSampler (GLuint</target>
        </trans-unit>
        <trans-unit id="11365614aa66dbbbf1318fbeb5ada8951a500d6d" translate="yes" xml:space="preserve">
          <source>GLboolean QOpenGLExtraFunctions::glIsSync(GLsync</source>
          <target state="translated">GLboolean QOpenGLExtraFunctions :: glIsSync (GLsync</target>
        </trans-unit>
        <trans-unit id="8a544f9025b3f7d1412508316432ca548b909a41" translate="yes" xml:space="preserve">
          <source>GLboolean QOpenGLExtraFunctions::glIsTransformFeedback(GLuint</source>
          <target state="translated">GLboolean QOpenGLExtraFunctions :: glIsTransformFeedback (GLuint</target>
        </trans-unit>
        <trans-unit id="5618bacb8b0578188fa9f66612bbb33433bca35c" translate="yes" xml:space="preserve">
          <source>GLboolean QOpenGLExtraFunctions::glIsVertexArray(GLuint</source>
          <target state="translated">GLboolean QOpenGLExtraFunctions :: glIsVertexArray (GLuint</target>
        </trans-unit>
        <trans-unit id="50cfd121be8068d01b60229d5522e4260932c890" translate="yes" xml:space="preserve">
          <source>GLboolean QOpenGLExtraFunctions::glUnmapBuffer(GLenum</source>
          <target state="translated">GLboolean QOpenGLExtraFunctions :: glUnmapBuffer (GLenum</target>
        </trans-unit>
        <trans-unit id="d0c41fcced75e15922ac01f1124958ba05a7678b" translate="yes" xml:space="preserve">
          <source>GLenum</source>
          <target state="translated">GLenum</target>
        </trans-unit>
        <trans-unit id="928b8d5f70200fca57411a2764db4cbbc3033415" translate="yes" xml:space="preserve">
          <source>GLenum QOpenGLExtraFunctions::glClientWaitSync(GLsync</source>
          <target state="translated">GLenum QOpenGLExtraFunctions :: glClientWaitSync (GLsync</target>
        </trans-unit>
        <trans-unit id="941b1f79accada491f96de9e9d3b46d6f1f7e3a1" translate="yes" xml:space="preserve">
          <source>GLenum QOpenGLExtraFunctions::glGetGraphicsResetStatus()</source>
          <target state="translated">GLenum QOpenGLExtraFunctions :: glGetGraphicsResetStatus ()</target>
        </trans-unit>
        <trans-unit id="ab0a8008520e2a299867d10e5c3634012d4ae5b6" translate="yes" xml:space="preserve">
          <source>GLenum QOpenGLFramebufferObjectFormat::internalTextureFormat() const</source>
          <target state="translated">GLenum QOpenGLFramebufferObjectFormat :: internalTextureFormat () const</target>
        </trans-unit>
        <trans-unit id="21e982bae3cb0c1942cbe4ce8a0ded62df440486" translate="yes" xml:space="preserve">
          <source>GLenum QOpenGLFramebufferObjectFormat::textureTarget() const</source>
          <target state="translated">GLenum QOpenGLFramebufferObjectFormat :: textureTarget () const</target>
        </trans-unit>
        <trans-unit id="187fdc5989b191fe9d766632ffc50bb806c3a1fd" translate="yes" xml:space="preserve">
          <source>GLenum QOpenGLWidget::textureFormat() const</source>
          <target state="translated">GLenum QOpenGLWidget :: textureFormat () const</target>
        </trans-unit>
        <trans-unit id="c57699860deeef923f76c962c1a3de9167dbbce6" translate="yes" xml:space="preserve">
          <source>GLint</source>
          <target state="translated">GLint</target>
        </trans-unit>
        <trans-unit id="4c5af786623058bd1988f61fb47900fd219bdd88" translate="yes" xml:space="preserve">
          <source>GLint QOpenGLExtraFunctions::glGetFragDataLocation(GLuint</source>
          <target state="translated">GLint QOpenGLExtraFunctions :: glGetFragDataLocation (GLuint</target>
        </trans-unit>
        <trans-unit id="93a002f516285a71c345270a18518561c93531ee" translate="yes" xml:space="preserve">
          <source>GLint QOpenGLExtraFunctions::glGetProgramResourceLocation(GLuint</source>
          <target state="translated">GLint QOpenGLExtraFunctions :: glGetProgramResourceLocation (GLuint</target>
        </trans-unit>
        <trans-unit id="db96c527aa70df0d41a7a6357c7ec84875b78785" translate="yes" xml:space="preserve">
          <source>GLsync</source>
          <target state="translated">GLsync</target>
        </trans-unit>
        <trans-unit id="24783898985db79a09c04fc14fe3add6a0f6661e" translate="yes" xml:space="preserve">
          <source>GLsync QOpenGLExtraFunctions::glFenceSync(GLenum</source>
          <target state="translated">GLsync QOpenGLExtraFunctions :: glFenceSync (GLenum</target>
        </trans-unit>
        <trans-unit id="344bbe66f8b1950786e16971fca203271ca3d141" translate="yes" xml:space="preserve">
          <source>GLuint</source>
          <target state="translated">GLuint</target>
        </trans-unit>
        <trans-unit id="d7fd0b15c09e7946f67f46a9e396d2874975f7c2" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLBuffer::bufferId() const</source>
          <target state="translated">GLuint QOpenGLBuffer :: bufferId () const</target>
        </trans-unit>
        <trans-unit id="97880d18bfd2fde3a45aa29d3872f2c484608a02" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLContext::defaultFramebufferObject() const</source>
          <target state="translated">GLuint QOpenGLContext :: defaultFramebufferObject () const</target>
        </trans-unit>
        <trans-unit id="7a8972ec2ad00839a1fee72882545d48c3a9cf1e" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLDebugMessage::id() const</source>
          <target state="translated">GLuint QOpenGLDebugMessage :: id () const</target>
        </trans-unit>
        <trans-unit id="aa406c5c3166b3e5d43aa44092387e56dda9542b" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLExtraFunctions::glCreateShaderProgramv(GLenum</source>
          <target state="translated">GLuint QOpenGLExtraFunctions :: glCreateShaderProgramv (GLenum</target>
        </trans-unit>
        <trans-unit id="5eaf3355855b7614b9ccb6328a59c5c1f246da4d" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLExtraFunctions::glGetDebugMessageLog(GLuint</source>
          <target state="translated">GLuint QOpenGLExtraFunctions :: glGetDebugMessageLog (GLuint</target>
        </trans-unit>
        <trans-unit id="04f0f2b68d78285ffd43c8697ebaffc3c1cadda0" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLExtraFunctions::glGetProgramResourceIndex(GLuint</source>
          <target state="translated">GLuint QOpenGLExtraFunctions :: glGetProgramResourceIndex (GLuint</target>
        </trans-unit>
        <trans-unit id="63c86790de8cbce9753926d076bb4f7aed469099" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLExtraFunctions::glGetUniformBlockIndex(GLuint</source>
          <target state="translated">GLuint QOpenGLExtraFunctions :: glGetUniformBlockIndex (GLuint</target>
        </trans-unit>
        <trans-unit id="31c5168e765a282ac561038d5916160f096ec594" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLFramebufferObject::handle() const</source>
          <target state="translated">GLuint QOpenGLFramebufferObject :: handle () const</target>
        </trans-unit>
        <trans-unit id="b3b36c1d0933ef95e2cf6d1641c1aa24d4663709" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLFramebufferObject::takeTexture()</source>
          <target state="translated">GLuint QOpenGLFramebufferObject :: takeTexture ()</target>
        </trans-unit>
        <trans-unit id="add5e2a0aa049bca07488506e96bb4e761c499e3" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLFramebufferObject::takeTexture(int</source>
          <target state="translated">GLuint QOpenGLFramebufferObject :: takeTexture (int</target>
        </trans-unit>
        <trans-unit id="5f2f6e239ac4a8846a09f1702c18639ac99cfd99" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLFramebufferObject::texture() const</source>
          <target state="translated">GLuint QOpenGLFramebufferObject :: texture () const</target>
        </trans-unit>
        <trans-unit id="13ce3355ed08094fb2610bca18b3ccd0984e22a2" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLShader::shaderId() const</source>
          <target state="translated">GLuint QOpenGLShader :: shaderId () const</target>
        </trans-unit>
        <trans-unit id="182cab7c253e013c0cbf2abdcd25920b73d46ac6" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLShaderProgram::programId() const</source>
          <target state="translated">GLuint QOpenGLShaderProgram :: programId () const</target>
        </trans-unit>
        <trans-unit id="1c6502af2b22d5db635efe6b61c409164c953b13" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLTexture::textureId() const</source>
          <target state="translated">GLuint QOpenGLTexture :: textureId () const</target>
        </trans-unit>
        <trans-unit id="acd2d04839830dc553cb590ed16e03781ae78c12" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLTimerQuery::objectId() const</source>
          <target state="translated">GLuint QOpenGLTimerQuery :: objectId () const</target>
        </trans-unit>
        <trans-unit id="baf5ed74af81326812fd96b50ef01ac737df1a4d" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLVertexArrayObject::objectId() const</source>
          <target state="translated">GLuint QOpenGLVertexArrayObject :: objectId () const</target>
        </trans-unit>
        <trans-unit id="f0f509abaf975e7612b93e715741bc00c3495b01" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLWidget::defaultFramebufferObject() const</source>
          <target state="translated">GLuint QOpenGLWidget :: defaultFramebufferObject () const</target>
        </trans-unit>
        <trans-unit id="84c29b6914623d0fd08c73473ac02c1211a4f4b0" translate="yes" xml:space="preserve">
          <source>GLuint QOpenGLWindow::defaultFramebufferObject() const</source>
          <target state="translated">GLuint QOpenGLWindow :: defaultFramebufferObject () const</target>
        </trans-unit>
        <trans-unit id="2e46d050caefbeecab92be481cce5a9eb51a8efc" translate="yes" xml:space="preserve">
          <source>GLuint64</source>
          <target state="translated">GLuint64</target>
        </trans-unit>
        <trans-unit id="9691079a091a9f4e5fdd532e5fc1a989f66e7b71" translate="yes" xml:space="preserve">
          <source>GLuint64 QOpenGLTimerQuery::waitForResult() const</source>
          <target state="translated">GLuint64 QOpenGLTimerQuery :: waitForResult () const</target>
        </trans-unit>
        <trans-unit id="5cb26b00d15e44088a1288077de825204be49378" translate="yes" xml:space="preserve">
          <source>GLuint64 QOpenGLTimerQuery::waitForTimestamp() const</source>
          <target state="translated">GLuint64 QOpenGLTimerQuery :: waitForTimestamp () const</target>
        </trans-unit>
        <trans-unit id="84abb4e7909f64bc187f2734fe98576848f7dffd" translate="yes" xml:space="preserve">
          <source>GNOME</source>
          <target state="translated">GNOME</target>
        </trans-unit>
        <trans-unit id="c15892d53e4fc0ff6c64ab3743b3d59f4e3c0557" translate="yes" xml:space="preserve">
          <source>GNU Emacs Style Key Sequences</source>
          <target state="translated">GNU Emacs 스타일 키 시퀀스</target>
        </trans-unit>
        <trans-unit id="db478898bffc0d34f134f2787ba79413a59e7191" translate="yes" xml:space="preserve">
          <source>GNU General Public License v2.0 only (This does not force user code to be GPL'ed. For more info see details.)</source>
          <target state="translated">GNU General Public License v2.0 전용 (이것은 사용자 코드를 강제로 GPL하지 않습니다. 자세한 정보는 세부 사항을 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="3242a7226af93c26b7fe93b57a63548b68b400f1" translate="yes" xml:space="preserve">
          <source>GNU General Public License v2.0 only with Linux Syscall Note</source>
          <target state="translated">Linux Syscall을 사용하는 GNU General Public License v2.0 만 해당</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
