<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="c6ab0aa584df247f5d378d1f252993e18a54302b" translate="yes" xml:space="preserve">
          <source>The ellipsis should appear at the beginning of the text.</source>
          <target state="translated">줄임표는 텍스트의 시작 부분에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="fa30930b8e93aa8e8cfa6132ecb27a1c119ec948" translate="yes" xml:space="preserve">
          <source>The ellipsis should appear at the end of the text.</source>
          <target state="translated">텍스트 끝에 줄임표가 나타나야합니다.</target>
        </trans-unit>
        <trans-unit id="402bdfd72e13146c9556ad7dbf39e7149865ad37" translate="yes" xml:space="preserve">
          <source>The ellipsis should appear in the middle of the text.</source>
          <target state="translated">줄임표는 텍스트 중간에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="2d4c3c4e3a557d3e1e2beab56b83aa7539cc2eac" translate="yes" xml:space="preserve">
          <source>The email address associated with the certificate</source>
          <target state="translated">인증서와 관련된 이메일 주소</target>
        </trans-unit>
        <trans-unit id="109c2b9e13da9bdc75da327a085a3d24e6276ff7" translate="yes" xml:space="preserve">
          <source>The embedded widget overrides the proxy widget cursor. The proxy cursor changes depending on which embedded subwidget is currently under the mouse.</source>
          <target state="translated">임베디드 위젯은 프록시 위젯 커서를 대체합니다. 프록시 커서는 현재 마우스 아래에있는 포함 된 하위 위젯에 따라 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="424d034c77252bbd57638923e38806846cb0fafb" translate="yes" xml:space="preserve">
          <source>The emissive aluminum material has the following properties:</source>
          <target state="translated">발광 알루미늄 소재는 다음과 같은 특성을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="fa2e647ded51f54976067aa33b478e44993d0558" translate="yes" xml:space="preserve">
          <source>The emissive texture map mask. Default is a &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt; with source &lt;code&gt;&quot;maps/emissive_mask.png&quot;&lt;/code&gt;.</source>
          <target state="translated">이미 시브 텍스처 맵 마스크입니다. 기본값은 소스가 &lt;code&gt;&quot;maps/emissive_mask.png&quot;&lt;/code&gt; 인&lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;텍스처&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="9ec4815c32e8303758531c9b2d970953670e77c3" translate="yes" xml:space="preserve">
          <source>The emissive texture map. Default is a &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt; with source &lt;code&gt;&quot;maps/emissive.png&quot;&lt;/code&gt;.</source>
          <target state="translated">이미 시브 텍스처 맵입니다. 기본값은 소스가 &lt;code&gt;&quot;maps/emissive.png&quot;&lt;/code&gt; 인&lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;텍스처&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="1840aa46fa7aba16b36afa1909f346a93f9dc9fa" translate="yes" xml:space="preserve">
          <source>The empty area of a &lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qmenubar&quot;&gt;QMenuBar&lt;/a&gt; 의 빈 영역입니다 .</target>
        </trans-unit>
        <trans-unit id="2d498004ce85cdff2f5439a8d34aed0178c79c4e" translate="yes" xml:space="preserve">
          <source>The empty area of the menu.</source>
          <target state="translated">메뉴의 빈 영역</target>
        </trans-unit>
        <trans-unit id="a8af533b61b8623da90303095e6d0a59eacab10a" translate="yes" xml:space="preserve">
          <source>The empty label is the topmost element in the list of commands, which represents the state of the document before any commands were pushed on the stack. The default is the string &quot;&amp;lt;empty&amp;gt;&quot;.</source>
          <target state="translated">빈 레이블은 명령 목록에서 맨 위에있는 요소로, 명령이 스택에서 푸시되기 전의 문서 상태를 나타냅니다. 기본값은 문자열 &quot;&amp;lt;empty&amp;gt;&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="95040e66f6b6b73c02518e0f5efd586f639f8bc2" translate="yes" xml:space="preserve">
          <source>The enabled state of the group affects the enabled state of each item in the group, except that explicitly disabled items are not enabled even if the group is enabled.</source>
          <target state="translated">그룹의 활성화 상태는 그룹이 활성화 된 경우에도 명시 적으로 비활성화 된 항목이 활성화되지 않는 것을 제외하고 그룹의 각 항목의 활성화 된 상태에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="e6b9007fd7edd59e6489381c651cb939d2d296bc" translate="yes" xml:space="preserve">
          <source>The enabled/disabled state of the &lt;b&gt;Next&lt;/b&gt; and/or &lt;b&gt;Finish&lt;/b&gt; buttons is one way to perform validation on the user input. Another way is to reimplement &lt;a href=&quot;qwizard#validateCurrentPage&quot;&gt;validateCurrentPage&lt;/a&gt;() (or &lt;a href=&quot;qwizardpage#validatePage&quot;&gt;QWizardPage::validatePage&lt;/a&gt;()) to perform some last-minute validation (and show an error message if the user has entered incomplete or invalid information). If the function returns &lt;code&gt;true&lt;/code&gt;, the next page is shown (or the wizard finishes); otherwise, the current page stays up.</source>
          <target state="translated">&lt;b&gt;다음&lt;/b&gt; 및 / 또는 &lt;b&gt;완료&lt;/b&gt; 단추 의 활성화 / 비활성화 상태 는 사용자 입력에 대한 유효성 검증을 수행하는 한 가지 방법입니다. 또 다른 방법은 &lt;a href=&quot;qwizard#validateCurrentPage&quot;&gt;validateCurrentPage&lt;/a&gt; () (또는 &lt;a href=&quot;qwizardpage#validatePage&quot;&gt;QWizardPage :: validatePage&lt;/a&gt; ()) 를 다시 구현 하여 마지막 순간의 유효성 검사를 수행하고 사용자가 불완전하거나 잘못된 정보를 입력 한 경우 오류 메시지를 표시하는 것입니다. 함수가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 다음 페이지가 표시되거나 마법사가 완료됩니다. 그렇지 않으면 현재 페이지가 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="3e761359f054baf5c8fdc120e80fed770d442164" translate="yes" xml:space="preserve">
          <source>The encoded query string can be obtained again using &lt;a href=&quot;qurlquery#query&quot;&gt;query&lt;/a&gt;(). This will take all the internally-stored items and encode the string using the delimiters.</source>
          <target state="translated">인코딩 된 쿼리 문자열은 &lt;a href=&quot;qurlquery#query&quot;&gt;query&lt;/a&gt; ()를 사용하여 다시 얻을 수 있습니다 . 내부에 저장된 모든 항목을 가져 와서 구분 기호를 사용하여 문자열을 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="9d984263fdcc8872be7fd2f2ad554ba506344cc5" translate="yes" xml:space="preserve">
          <source>The encoder converts Unicode into another format, remembering any state that is required between calls.</source>
          <target state="translated">인코더는 유니 코드를 다른 형식으로 변환하여 호출간에 필요한 상태를 기억합니다.</target>
        </trans-unit>
        <trans-unit id="7db735184ff679e5252ec6dce99f46ce4598d122" translate="yes" xml:space="preserve">
          <source>The encoder remembers any state that is required between calls, so converting data received in chunks, for example, when receiving it over a network, is just as easy, by calling the encoder whenever new data is available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="05fae25d52fe683cca6b42fc8a9b778368cf6f62" translate="yes" xml:space="preserve">
          <source>The encoding information is stored in the initial xml tag which gets written when you call &lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument&lt;/a&gt;(). Call this function before calling &lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument&lt;/a&gt;().</source>
          <target state="translated">인코딩 정보는 &lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument&lt;/a&gt; () 를 호출 할 때 기록되는 초기 xml 태그에 저장됩니다 . &lt;a href=&quot;qxmlstreamwriter#writeStartDocument-1&quot;&gt;writeStartDocument&lt;/a&gt; () 를 호출하기 전에이 함수를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="e67420893a9aab0625964b83512548335bd3f51f" translate="yes" xml:space="preserve">
          <source>The encoding is fetched from the &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;.</source>
          <target state="translated">인코딩은 &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; 에서 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="8e15a940567cdf980267aefde0fe4fd8803f54dd" translate="yes" xml:space="preserve">
          <source>The encoding is fetched from the document.</source>
          <target state="translated">문서에서 인코딩을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="661f34dcb7a353a52aa7e655afabd9787338bf87" translate="yes" xml:space="preserve">
          <source>The encoding of the &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; in</source>
          <target state="translated">의 부호화 &lt;a href=&quot;xmlprocessing&quot;&gt;는 XQuery&lt;/a&gt; 에서</target>
        </trans-unit>
        <trans-unit id="1ea020eb7c7c084118f2cfced41342079d7879e4" translate="yes" xml:space="preserve">
          <source>The encoding of the &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; in</source>
          <target state="translated">의 부호화 &lt;a href=&quot;xmlprocessing#&quot;&gt;는 XQuery&lt;/a&gt; 에서</target>
        </trans-unit>
        <trans-unit id="5b893fa7e4511862e9b68ac0c0e0d73de501df64" translate="yes" xml:space="preserve">
          <source>The encoding options from &lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl::ComponentFormattingOption&lt;/a&gt; don't make much sense for this method, nor does &lt;a href=&quot;qurl#UrlFormattingOption-enum&quot;&gt;QUrl::PreferLocalFile&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qurl#ComponentFormattingOption-enum&quot;&gt;QUrl :: ComponentFormattingOption&lt;/a&gt; 의 인코딩 옵션은 이 메소드에 적합하지 않으며 &lt;a href=&quot;qurl#UrlFormattingOption-enum&quot;&gt;QUrl :: PreferLocalFile&lt;/a&gt; 도 중요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="62a178bf3b8d6341baebd9d47e478445a364d0a1" translate="yes" xml:space="preserve">
          <source>The end of the device data is detected.</source>
          <target state="translated">장치 데이터의 끝이 감지되었습니다.</target>
        </trans-unit>
        <trans-unit id="0c6edc9ab8e6291c45a61685222951963ab772bc" translate="yes" xml:space="preserve">
          <source>The end of the input stream was unexpectedly reached while processing an element.</source>
          <target state="translated">요소를 처리하는 동안 입력 스트림의 끝에 예기치 않게 도달했습니다.</target>
        </trans-unit>
        <trans-unit id="df0f70dd44eaaec3d9ac90200a9c283c2186011b" translate="yes" xml:space="preserve">
          <source>The end of the timeline.</source>
          <target state="translated">타임 라인의 끝입니다.</target>
        </trans-unit>
        <trans-unit id="ad8d0d7049c4ff8ea50271ca8ae32cb76da4f40a" translate="yes" xml:space="preserve">
          <source>The end position of the display text for a hypertext link has changed.</source>
          <target state="translated">하이퍼 텍스트 링크에 ​​대한 표시 텍스트의 끝 위치가 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="1ece2cd2d6f834c597dc293144fff2e47d908c5b" translate="yes" xml:space="preserve">
          <source>The end result looks like the following:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3247f67cf3bc0f249c493ff7c60e4b0dc582d980" translate="yes" xml:space="preserve">
          <source>The end result:</source>
          <target state="translated">최종 결과 :</target>
        </trans-unit>
        <trans-unit id="f93cd9e10ee38e8343575bc3472e2e9e55624ace" translate="yes" xml:space="preserve">
          <source>The endianness of the image. Certain image formats can be stored as BigEndian or LittleEndian. A handler that supports Endianness uses the value of this option to determine how the image should be stored.</source>
          <target state="translated">이미지의 엔디안. 특정 이미지 형식은 BigEndian 또는 LittleEndian으로 저장할 수 있습니다. 엔디안을 지원하는 핸들러는이 옵션의 값을 사용하여 이미지 저장 방법을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="bad04f573d7f9a9088e6c60308d3a6dafa6b9bcc" translate="yes" xml:space="preserve">
          <source>The ending angle of the pie.</source>
          <target state="translated">파이의 끝 각도.</target>
        </trans-unit>
        <trans-unit id="02e16ccdfe04a16295ef1401736157039b47ec90" translate="yes" xml:space="preserve">
          <source>The ending location, in pixels from the upper-left corner of the page, from which to find selected text. This can be bound to the &lt;code&gt;centroid.position&lt;/code&gt; of a &lt;a href=&quot;qml-qtquick-draghandler&quot;&gt;DragHandler&lt;/a&gt; to end selection of text at the position where the user is currently dragging the mouse, for example.</source>
          <target state="translated">선택한 텍스트를 찾을 끝 위치 (페이지의 왼쪽 위 모서리부터 픽셀)입니다. 예를 들어 이것은 사용자가 현재 마우스를 끌고있는 위치에서 텍스트 선택을 끝내기 위해 &lt;a href=&quot;qml-qtquick-draghandler&quot;&gt;DragHandler&lt;/a&gt; 의 &lt;code&gt;centroid.position&lt;/code&gt; 에 바인딩 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e90622ba6b1a39f2a360f9bec3029564299aefc5" translate="yes" xml:space="preserve">
          <source>The engine allows the registration of both instantiable and non-instantiable types. Once a class is registered as a QML type, it can be used as a data type for exchanging data between QML and C++. See &lt;a href=&quot;qtqml-cppintegration-definetypes#registering-c-types-with-the-qml-type-system&quot;&gt;Registering C++ types with the QML type system&lt;/a&gt; for further details on type registration.</source>
          <target state="translated">엔진을 사용하면 인스턴스화 가능 유형과 인스턴스화 불가능 유형을 모두 등록 할 수 있습니다. 클래스가 QML 유형으로 등록되면 QML과 C ++간에 데이터를 교환하기위한 데이터 유형으로 사용될 수 있습니다. 유형 등록에 대한 자세한 내용 &lt;a href=&quot;qtqml-cppintegration-definetypes#registering-c-types-with-the-qml-type-system&quot;&gt;은 QML 유형 시스템&lt;/a&gt; 에 C ++ 유형 등록을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="720139e6ac703c3043f5d959258cd9a45414c4f9" translate="yes" xml:space="preserve">
          <source>The engine allows the registration of both instantiable and non-instantiable types. Registering an instantiable type enables a C++ class to be used as the definition of a QML object type, allowing it to be used in object declarations from QML code to create objects of this type. Registration also provides the engine with additional type metadata, enabling the type (and any enums declared by the class) to be used as a data type for property values, method parameters and return values, and signal parameters that are exchanged between QML and C++.</source>
          <target state="translated">엔진을 통해 인스턴스화 가능 유형과 인스턴스화 불가능 유형을 모두 등록 할 수 있습니다. 인스턴스화 가능 유형을 등록하면 C ++ 클래스를 QML 오브젝트 유형의 정의로 사용하여이 유형의 오브젝트를 작성하기 위해 QML 코드의 오브젝트 선언에 사용할 수 있습니다. 등록은 엔진에 추가 형식 메타 데이터를 제공하여 형식 (및 클래스에서 선언 한 모든 열거 형)을 속성 값, 메서드 매개 변수 및 반환 값 및 QML과 C ++간에 교환되는 신호 매개 변수의 데이터 형식으로 사용할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="51d863387a04e972ffcd5d6d2784f77dbf76557c" translate="yes" xml:space="preserve">
          <source>The engine behavior can be further tweaked by using the inherited methods from &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; 의 상속 된 메소드를 사용하여 엔진 작동을 추가로 조정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cfc8c4dcd154899362805dd36fc1c185de8b1d33" translate="yes" xml:space="preserve">
          <source>The engine can alpha blend primitives.</source>
          <target state="translated">엔진은 프리미티브를 알파 블렌딩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c7804cedb9d0d97075666543a2a21b7f25fd044b" translate="yes" xml:space="preserve">
          <source>The engine can transform pixmaps, including rotation and shearing.</source>
          <target state="translated">엔진은 회전 및 전단을 포함하여 픽스맵을 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2054896ebe86335faca2aa5407e39419c85cd10" translate="yes" xml:space="preserve">
          <source>The engine can use antialising to improve the appearance of rendered primitives.</source>
          <target state="translated">엔진은 앤티 앨리어싱을 사용하여 렌더링 된 프리미티브의 모양을 개선 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1366a5920352a5b477d36518b3915e820778f5a3" translate="yes" xml:space="preserve">
          <source>The engine has native support for gradients with coordinate mode &lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;QGradient::ObjectBoundingMode&lt;/a&gt;. Otherwise, if QPaintEngine::PatternTransform is supported, object bounding mode gradients are converted to gradients with coordinate mode &lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;QGradient::LogicalMode&lt;/a&gt; and a brush transform for the coordinate mapping.</source>
          <target state="translated">엔진은 좌표 모드 &lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;QGradient :: ObjectBoundingMode로&lt;/a&gt; 그라디언트를 기본적으로 지원합니다 . 그렇지 않으면 QPaintEngine :: PatternTransform이 지원되는 경우 객체 경계 모드 그라디언트는 좌표 모드 &lt;a href=&quot;qgradient#CoordinateMode-enum&quot;&gt;QGradient :: LogicalMode&lt;/a&gt; 및 좌표 매핑을위한 브러시 변환을 사용하여 그라디언트로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="1f19e23cff640288b5fd681bc6e3de50c2881d45" translate="yes" xml:space="preserve">
          <source>The engine has path support.</source>
          <target state="translated">엔진은 경로를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="7544e249c01a8bb51b7adba13492dd21c2084354" translate="yes" xml:space="preserve">
          <source>The engine has support for performing perspective transformations on primitives.</source>
          <target state="translated">엔진은 프리미티브에서 원근 변환을 수행하도록 지원합니다.</target>
        </trans-unit>
        <trans-unit id="aa8edcfaa325e6b34cc91845dd06f9d610179e43" translate="yes" xml:space="preserve">
          <source>The engine has support for transforming brush patterns.</source>
          <target state="translated">엔진은 브러시 패턴 변환을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="2002e317c350cbc01793a8304d2cd49afc1a825e" translate="yes" xml:space="preserve">
          <source>The engine has support for transforming drawing primitives.</source>
          <target state="translated">엔진은 도면 프리미티브 변환을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ddb881e11767e2fede628fcb54feecbae516a838" translate="yes" xml:space="preserve">
          <source>The engine is capable of painting outside of paint events.</source>
          <target state="translated">엔진은 페인트 이벤트 외부에서 페인팅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="00164342113ddf2cd8b998d5e81afc937ea0aebb" translate="yes" xml:space="preserve">
          <source>The engine is capable of rendering brushes that has a texture with an alpha channel or a mask.</source>
          <target state="translated">엔진은 알파 채널 또는 마스크가있는 텍스처가있는 브러시를 렌더링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d0001750fbd738e633b7a10463c5dc04363b945" translate="yes" xml:space="preserve">
          <source>The engine is capable of rendering brushes with the brush patterns specified in &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt::BrushStyle&lt;/a&gt;.</source>
          <target state="translated">엔진은 &lt;a href=&quot;qt#BrushStyle-enum&quot;&gt;Qt :: BrushStyle에&lt;/a&gt; 지정된 브러시 패턴으로 브러시를 렌더링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99d00682fb052e82177021b0ec567cd923b23a28" translate="yes" xml:space="preserve">
          <source>The engine supports Porter-Duff operations</source>
          <target state="translated">엔진은 포터 더프 작동을 지원합니다</target>
        </trans-unit>
        <trans-unit id="87ded81b061b2946f13287d597756e46943c9084" translate="yes" xml:space="preserve">
          <source>The engine supports bitwise raster operations.</source>
          <target state="translated">엔진은 비트 단위 래스터 작업을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="65bb85077b4d6fa1dccb275571cafc4af1db315b" translate="yes" xml:space="preserve">
          <source>The engine supports blending modes.</source>
          <target state="translated">엔진은 혼합 모드를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="fc9b4b46a13d3128c545d2a4e7c259c86fad03a2" translate="yes" xml:space="preserve">
          <source>The engine supports conical gradient fills.</source>
          <target state="translated">엔진은 원추형 그래디언트 채우기를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="506bfc270bf86930ca3dcefd249379c64e9cc7f8" translate="yes" xml:space="preserve">
          <source>The engine supports drawing strokes that contain brushes as fills, not just solid colors (e.g. a dashed gradient line of width 2).</source>
          <target state="translated">엔진은 단색뿐만 아니라 브러시를 채우기로 포함하는 그리기 선을 지원합니다 (예 : 폭 2의 점선 그라데이션 선).</target>
        </trans-unit>
        <trans-unit id="0998fa11cfa09716b0e03b4c9a80580c38d06385" translate="yes" xml:space="preserve">
          <source>The engine supports linear gradient fills.</source>
          <target state="translated">엔진은 선형 그래디언트 채우기를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="376be70242c7b62769dc21e8a2f1d6b4314e3bf6" translate="yes" xml:space="preserve">
          <source>The engine supports radial gradient fills.</source>
          <target state="translated">엔진은 방사형 그래디언트 채우기를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ce76db00f5bcaa85ee59925df635704a8e8bd985" translate="yes" xml:space="preserve">
          <source>The engine supports the feature provided by &lt;a href=&quot;qpainter#setOpacity&quot;&gt;QPainter::setOpacity&lt;/a&gt;().</source>
          <target state="translated">엔진은 &lt;a href=&quot;qpainter#setOpacity&quot;&gt;QPainter :: setOpacity&lt;/a&gt; ()에서 제공하는 기능을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="78b86e1b20096a3c228ae77b51d14884a762ccba" translate="yes" xml:space="preserve">
          <source>The entire Latin-1 string is returned if</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fcbe868d6c9bb17053d1fe53e54b994792f0764f" translate="yes" xml:space="preserve">
          <source>The entire byte array is returned if</source>
          <target state="translated">다음과 같은 경우 전체 바이트 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="44dd94095c084496acc266bb75cddef50c586e15" translate="yes" xml:space="preserve">
          <source>The entire content of the document is set with &lt;a href=&quot;qdomdocument#setContent&quot;&gt;setContent&lt;/a&gt;(). This function parses the string it is passed as an XML document and creates the DOM tree that represents the document. The root element is available using &lt;a href=&quot;qdomdocument#documentElement&quot;&gt;documentElement&lt;/a&gt;(). The textual representation of the document can be obtained using &lt;a href=&quot;qdomdocument#toString&quot;&gt;toString&lt;/a&gt;().</source>
          <target state="translated">문서의 전체 내용은 &lt;a href=&quot;qdomdocument#setContent&quot;&gt;setContent&lt;/a&gt; ()로 설정됩니다 . 이 함수는 XML 문서로 전달 된 문자열을 구문 분석하고 문서를 나타내는 DOM 트리를 만듭니다. 루트 요소는 &lt;a href=&quot;qdomdocument#documentElement&quot;&gt;documentElement&lt;/a&gt; ()를 사용하여 사용할 수 있습니다 . 문서의 텍스트 표현은 &lt;a href=&quot;qdomdocument#toString&quot;&gt;toString&lt;/a&gt; ()을 사용하여 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="166ba4bdb552f1e9af70d535181f424010e63e3c" translate="yes" xml:space="preserve">
          <source>The entire path to be navigated.</source>
          <target state="translated">탐색 할 전체 경로입니다.</target>
        </trans-unit>
        <trans-unit id="0981124fa2317c1d56882ff4e369f2d3be8d39fc" translate="yes" xml:space="preserve">
          <source>The entire string is returned if</source>
          <target state="translated">다음과 같은 경우 전체 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="aedbd873cf1161c1f33e4eba05fa5f12907cd49f" translate="yes" xml:space="preserve">
          <source>The entities using the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D&lt;/a&gt; can be associated with the type to enable interaction with the item; if an entity has an &lt;a href=&quot;qml-qt3d-render-objectpicker&quot;&gt;ObjectPicker&lt;/a&gt; component, the pick events from that picker are sent to the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D&lt;/a&gt; and converted to mouse events and finally sent to the item.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D를&lt;/a&gt; 사용하는 엔터티 는 유형과 연결되어 항목과 상호 작용할 수 있습니다. 엔터티에 &lt;a href=&quot;qml-qt3d-render-objectpicker&quot;&gt;ObjectPicker&lt;/a&gt; 구성 요소 가있는 경우 해당 선택기의 pick 이벤트가 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qt3dscene2d-module.html#scene2d&quot;&gt;Scene2D&lt;/a&gt; 로 전송 되고 마우스 이벤트로 변환되어 최종적으로 항목으로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="530504d4e52a8143b9fae1d68c4c2800946a2374" translate="yes" xml:space="preserve">
          <source>The entities using the &lt;a href=&quot;qt3drender-quick-qscene2d&quot;&gt;QScene2D&lt;/a&gt; can be associated with the class to enable interaction with the item; if an entity has a &lt;a href=&quot;qt3drender-qobjectpicker&quot;&gt;QObjectPicker&lt;/a&gt; component, the pick events from that picker are sent to the &lt;a href=&quot;qt3drender-quick-qscene2d&quot;&gt;QScene2D&lt;/a&gt; and converted to mouse events and finally sent to the item.</source>
          <target state="translated">&lt;a href=&quot;qt3drender-quick-qscene2d&quot;&gt;QScene2D를&lt;/a&gt; 사용하는 엔티티 는 클래스와 연관되어 항목과 상호 작용할 수 있습니다. 엔터티에 &lt;a href=&quot;qt3drender-qobjectpicker&quot;&gt;QObjectPicker&lt;/a&gt; 구성 요소 가있는 경우 해당 선택기의 pick 이벤트는 &lt;a href=&quot;qt3drender-quick-qscene2d&quot;&gt;QScene2D&lt;/a&gt; 로 전송 되고 마우스 이벤트로 변환되어 최종적으로 항목으로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="1608dfbfd1c511c0d48f4bade18ca3a555b16e60" translate="yes" xml:space="preserve">
          <source>The entities using the QScene2D can be associated with the class to enable interaction with the item; if an entity has a &lt;a href=&quot;qt3drender-qobjectpicker&quot;&gt;QObjectPicker&lt;/a&gt; component, the pick events from that picker are sent to the QScene2D and converted to mouse events and finally sent to the item.</source>
          <target state="translated">QScene2D를 사용하는 엔티티는 항목과 상호 작용할 수 있도록 클래스와 연결될 수 있습니다. 엔터티에 &lt;a href=&quot;qt3drender-qobjectpicker&quot;&gt;QObjectPicker&lt;/a&gt; 구성 요소 가 있으면 해당 선택기의 선택 이벤트가 QScene2D로 전송되고 마우스 이벤트로 변환 된 후 마지막으로 항목으로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="792268b95359987f40571bcc5c056331f536df06" translate="yes" xml:space="preserve">
          <source>The entities using the Scene2D can be associated with the type to enable interaction with the item; if an entity has an &lt;a href=&quot;qml-qt3d-render-objectpicker&quot;&gt;ObjectPicker&lt;/a&gt; component, the pick events from that picker are sent to the Scene2D and converted to mouse events and finally sent to the item.</source>
          <target state="translated">Scene2D를 사용하는 엔티티는 항목과 상호 작용할 수 있도록 유형과 연결될 수 있습니다. 엔터티에 &lt;a href=&quot;qml-qt3d-render-objectpicker&quot;&gt;ObjectPicker&lt;/a&gt; 구성 요소 가 있으면 해당 선택기의 선택 이벤트가 Scene2D로 전송되고 마우스 이벤트로 변환 된 후 마지막으로 항목으로 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="047edff496dbe5ba90326a3dbe9f6e06737125fb" translate="yes" xml:space="preserve">
          <source>The entity can be positionned in the scene by adding a transform component.</source>
          <target state="translated">변환 컴포넌트를 추가하여 장면에서 엔티티를 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1021f16fa2cf35765282bb9918a660554cdacbd9" translate="yes" xml:space="preserve">
          <source>The entity that the picked geometry belongs to.</source>
          <target state="translated">선택한 형상이 속한 엔티티입니다.</target>
        </trans-unit>
        <trans-unit id="32780723d84c51e7407a879de34eaebd2c6b1e2a" translate="yes" xml:space="preserve">
          <source>The entries have the following meaning:</source>
          <target state="translated">항목의 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a0ab92439009d345743a4e1d94f8990476b4e2d6" translate="yes" xml:space="preserve">
          <source>The entry point library is statically linked with the application. To avoid issues with static linking and the &lt;a href=&quot;https://doc.qt.io/qt-6.0/lgpl.html&quot;&gt;GNU Lesser General Public License (LGPL)&lt;/a&gt;, it is licensed both under the commercial licenses, and the &lt;a href=&quot;https://spdx.org/licenses/BSD-3-Clause.html&quot;&gt;BSD 3-clause &quot;New&quot; or &quot;Revised&quot; License&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a577f506b49f1b757f4fbfd8f0364361e2361b2e" translate="yes" xml:space="preserve">
          <source>The enum describes attributes of a type supported by &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt;.</source>
          <target state="translated">열거 형은 &lt;a href=&quot;qmetatype&quot;&gt;QMetaType이&lt;/a&gt; 지원하는 유형의 속성을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="56f2ed7a23f96e219eee11a231a4e886d28da5b0" translate="yes" xml:space="preserve">
          <source>The enum describes attributes of a type supported by &lt;a href=&quot;qtcore-changes-qt6#qmetatype&quot;&gt;QMetaType&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8f85e45fae6a8617a57fd58de98feee1f55ee710" translate="yes" xml:space="preserve">
          <source>The enum specifies the kinds of test log messages.</source>
          <target state="translated">열거 형은 테스트 로그 메시지의 종류를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="bb6efa8cea701e8cebce64731b732971471bbf78" translate="yes" xml:space="preserve">
          <source>The enum value &lt;a href=&quot;qt#WindowState-enum&quot;&gt;Qt::WindowActive&lt;/a&gt; is not an accepted parameter.</source>
          <target state="translated">열거 형 값 &lt;a href=&quot;qt#WindowState-enum&quot;&gt;Qt :: WindowActive&lt;/a&gt; 는 허용되는 매개 변수가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="ce5bb651c5d506e895c9756374580a7fba48a30e" translate="yes" xml:space="preserve">
          <source>The enum value &lt;a href=&quot;qt#WindowState-enum&quot;&gt;Qt::WindowActive&lt;/a&gt; should not be set.</source>
          <target state="translated">열거 형 값 &lt;a href=&quot;qt#WindowState-enum&quot;&gt;Qt :: WindowActive&lt;/a&gt; 를 설정하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="e396ae7af1b3b869415528600e5b94935cb6f017" translate="yes" xml:space="preserve">
          <source>The enum values are the same as in &lt;a href=&quot;qmessagebox#Icon-enum&quot;&gt;QMessageBox::Icon&lt;/a&gt;.</source>
          <target state="translated">열거 형 값은 &lt;a href=&quot;qmessagebox#Icon-enum&quot;&gt;QMessageBox :: Icon&lt;/a&gt; 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="05cd4b54141681f75bf3d2d29334357aa43b8b7c" translate="yes" xml:space="preserve">
          <source>The enum values are the same as in &lt;a href=&quot;qmessagebox#StandardButton-enum&quot;&gt;QMessageBox::StandardButtons&lt;/a&gt;.</source>
          <target state="translated">열거 형 값은 &lt;a href=&quot;qmessagebox#StandardButton-enum&quot;&gt;QMessageBox :: StandardButtons&lt;/a&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="65e70534fbac463c12c74e8c87349af9ecf41410" translate="yes" xml:space="preserve">
          <source>The enumeration values are mapped from and must match &lt;a href=&quot;qpagesize#PageSizeId-enum&quot;&gt;QPageSize::PageSizeId&lt;/a&gt;. They are also duplicated in &lt;a href=&quot;qpagedpaintdevice&quot;&gt;QPagedPaintDevice&lt;/a&gt; and &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt;.</source>
          <target state="translated">열거 형 값은 &lt;a href=&quot;qpagesize#PageSizeId-enum&quot;&gt;QPageSize :: PageSizeId&lt;/a&gt; 와 매핑되고 일치해야합니다 . 또한 &lt;a href=&quot;qpagedpaintdevice&quot;&gt;QPagedPaintDevice&lt;/a&gt; 및 &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; 에도 복제됩니다 .</target>
        </trans-unit>
        <trans-unit id="396eef62edbdfe5276a89f6d85a88d47f263f0d1" translate="yes" xml:space="preserve">
          <source>The environment and working directory are inherited from the calling process.</source>
          <target state="translated">환경 및 작업 디렉토리는 호출 프로세스에서 상속됩니다.</target>
        </trans-unit>
        <trans-unit id="53ad95327c77f4d3266824e405f84fad84000b94" translate="yes" xml:space="preserve">
          <source>The environment of the calling process can be obtained using &lt;a href=&quot;qprocessenvironment#systemEnvironment&quot;&gt;QProcessEnvironment::systemEnvironment&lt;/a&gt;().</source>
          <target state="translated">호출 프로세스의 환경은 &lt;a href=&quot;qprocessenvironment#systemEnvironment&quot;&gt;QProcessEnvironment :: systemEnvironment&lt;/a&gt; ()를 사용하여 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="84d9719df7f3ee8ceb0916769043beae4ef1f87a" translate="yes" xml:space="preserve">
          <source>The environment texture map. Enabled when &lt;code&gt;uEnvironmentMappingEnabled&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;. Default is a &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt; with source &lt;code&gt;&quot;maps/spherical_checker.png&quot;&lt;/code&gt;.</source>
          <target state="translated">환경 텍스처 맵. &lt;code&gt;uEnvironmentMappingEnabled&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 일 때 활성화됩니다 . 기본값은 소스가 &lt;code&gt;&quot;maps/spherical_checker.png&quot;&lt;/code&gt; 인&lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;텍스처&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="f94352f94a6536f71b782212fc69159270cff8ec" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;QT_MULTIMEDIA_PREFERRED_PLUGINS&lt;/code&gt; can be used to control the priority of the plugins. For example, setting it to &quot;windowsmediafoundation&quot; or &quot;directshow&quot; will cause the corresponding plugin to be the preferred one.</source>
          <target state="translated">환경 변수 &lt;code&gt;QT_MULTIMEDIA_PREFERRED_PLUGINS&lt;/code&gt; 를 사용하여 플러그인의 우선 순위를 제어 할 수 있습니다. 예를 들어 &quot;windowsmediafoundation&quot;또는 &quot;directshow&quot;로 설정하면 해당 플러그인이 선호되는 플러그인이됩니다.</target>
        </trans-unit>
        <trans-unit id="93a4fc89ef1bf056e38a0d0801cd0fcef8e62db6" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the JIS, Shift-JIS, and EUC-JP codecs. The &lt;a href=&quot;codecs-jis&quot;&gt;ISO 2022-JP (JIS) Text Codec&lt;/a&gt; documentation describes how to use this variable.</source>
          <target state="translated">환경 변수 &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; 를 사용하여 JIS, Shift-JIS 및 EUC-JP 코덱을 미세 조정할 수 있습니다. &lt;a href=&quot;codecs-jis&quot;&gt;ISO 2022-JP (JIS) 텍스트 코덱&lt;/a&gt; 문서는이 변수를 사용하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="c25ed68ca569b4e35fadaac699f5e19aa837cbb5" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the JIS, Shift-JIS, and EUC-JP codecs. The &lt;a href=&quot;codecs-jis#&quot;&gt;ISO 2022-JP (JIS) Text Codec&lt;/a&gt; documentation describes how to use this variable.</source>
          <target state="translated">환경 변수 &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; 를 사용하여 JIS, Shift-JIS 및 EUC-JP 코덱을 미세 조정할 수 있습니다. &lt;a href=&quot;codecs-jis#&quot;&gt;ISO 2022-JP (JIS) 텍스트 코덱&lt;/a&gt; 문서는이 변수를 사용하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="e0a28a7f1b00af61083f66a6359a0b0cbae0ff46" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the JIS, Shift-JIS, and EUC-JP codecs. The mapping names are as for the Japanese XML working group's &lt;a href=&quot;http://www.y-adagio.com/public/standards/tr_xml_jpf/toc.htm&quot;&gt;XML Japanese Profile&lt;/a&gt;, because it names and explains all the widely used mappings. Here are brief descriptions, written by Serika Kurusugawa:</source>
          <target state="translated">환경 변수 &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; 를 사용하여 JIS, Shift-JIS 및 EUC-JP 코덱을 미세 조정할 수 있습니다. 매핑 이름은 널리 사용되는 모든 매핑의 이름을 지정하고 설명하므로 일본어 XML 작업 그룹의 &lt;a href=&quot;http://www.y-adagio.com/public/standards/tr_xml_jpf/toc.htm&quot;&gt;XML 일본어 프로필&lt;/a&gt; 과 같습니다. 다음은 Serika Kurusugawa가 작성한 간단한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="7a060837d9d758a80e9d9c5c406a57ccff7d9c01" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the JIS, Shift-JIS, and EUC-JP codecs. The mapping names are as for the Japanese XML working group's &lt;a href=&quot;http://www.y-adagio.com/public/standards/tr_xml_jpf/toc.htm#&quot;&gt;XML Japanese Profile&lt;/a&gt;, because it names and explains all the widely used mappings. Here are brief descriptions, written by Serika Kurusugawa:</source>
          <target state="translated">환경 변수 &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; 를 사용하여 JIS, Shift-JIS 및 EUC-JP 코덱을 미세 조정할 수 있습니다. 매핑 이름은 널리 사용되는 모든 매핑의 이름을 지정하고 설명하기 때문에 일본어 XML 작업 그룹의 &lt;a href=&quot;http://www.y-adagio.com/public/standards/tr_xml_jpf/toc.htm#&quot;&gt;XML 일본어 프로필&lt;/a&gt; 과 같습니다. 다음은 Serika Kurusugawa가 작성한 간단한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="d708f5d851beb0a48a9dea8ff4a8cd7d42daa411" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the codec. The &lt;a href=&quot;codecs-jis&quot;&gt;ISO 2022-JP (JIS) Text Codec&lt;/a&gt; documentation describes how to use this variable.</source>
          <target state="translated">환경 변수 &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; 를 사용하여 코덱을 미세 조정할 수 있습니다. &lt;a href=&quot;codecs-jis&quot;&gt;ISO 2022-JP (JIS) 텍스트 코덱&lt;/a&gt; 문서는이 변수를 사용하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="adad2c8160b5117447f41a5b4bee830ef7282fd3" translate="yes" xml:space="preserve">
          <source>The environment variable &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; can be used to fine-tune the codec. The &lt;a href=&quot;codecs-jis#&quot;&gt;ISO 2022-JP (JIS) Text Codec&lt;/a&gt; documentation describes how to use this variable.</source>
          <target state="translated">환경 변수 &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; 를 사용하여 코덱을 미세 조정할 수 있습니다. &lt;a href=&quot;codecs-jis#&quot;&gt;ISO 2022-JP (JIS) 텍스트 코덱&lt;/a&gt; 문서는이 변수를 사용하는 방법에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="9f58fa8d1650c05c837cdbb2e9b0ae6a4eab32a8" translate="yes" xml:space="preserve">
          <source>The ephemeral key is only available when running in client mode, i.e. &lt;a href=&quot;qsslsocket#SslMode-enum&quot;&gt;QSslSocket::SslClientMode&lt;/a&gt;. When running in server mode or using a cipher algorithm without forward secrecy a null key is returned. The ephemeral server key will be set before emitting the encrypted() signal.</source>
          <target state="translated">임시 키는 클라이언트 모드에서 실행할 때만 사용할 수 있습니다. &lt;a href=&quot;qsslsocket#SslMode-enum&quot;&gt; QSslSocket :: SslClientMode)&lt;/a&gt; . 서버 모드에서 실행하거나 정방향 보안없이 암호 알고리즘을 사용하면 null 키가 반환됩니다. 암호화 된 () 신호를 방출하기 전에 임시 서버 키가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="686c08f3dceb6e4347b2690c6d3c818eb2219c69" translate="yes" xml:space="preserve">
          <source>The epsilon is the rate and amount of change in the value which is close enough to 0 to be considered equal to zero. This will depend on the usage of the value. For pixel positions, 0.25 would suffice. For scale, 0.005 will suffice.</source>
          <target state="translated">엡실론은 0에 가까운 것으로 간주 될 정도로 0에 가까운 값의 변화율 및 양이다. 이는 값의 사용법에 따라 다릅니다. 픽셀 위치의 경우 0.25가 충분합니다. 스케일의 경우 0.005이면 충분합니다.</target>
        </trans-unit>
        <trans-unit id="ad3222344fb2917a904860620045a4157f0afdfe" translate="yes" xml:space="preserve">
          <source>The equality operators of &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt; have been removed. They were comparing the underlying d-pointers instead of comparing the results, which is not what users might expect. If you need to compare &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt; objects, use &lt;code&gt;QFuture::result()&lt;/code&gt; or &lt;code&gt;QFuture::takeResult()&lt;/code&gt; methods. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3bf4cd7ad649db9d1daf54e345ad9e8f3ebcc9c5" translate="yes" xml:space="preserve">
          <source>The equivalent of Perl's &lt;code&gt;/i&lt;/code&gt; option is &lt;a href=&quot;qregexp#setCaseSensitivity&quot;&gt;setCaseSensitivity&lt;/a&gt;(&lt;a href=&quot;qt#CaseSensitivity-enum&quot;&gt;Qt::CaseInsensitive&lt;/a&gt;).</source>
          <target state="translated">Perl의 &lt;code&gt;/i&lt;/code&gt; 옵션에 해당하는 것은 &lt;a href=&quot;qregexp#setCaseSensitivity&quot;&gt;setCaseSensitivity&lt;/a&gt; ( &lt;a href=&quot;qt#CaseSensitivity-enum&quot;&gt;Qt :: CaseInsensitive)&lt;/a&gt; )입니다.</target>
        </trans-unit>
        <trans-unit id="075dc8b10128e21ebf43ad3ef9f61e4ff9c4652e" translate="yes" xml:space="preserve">
          <source>The error code is set to the default &lt;a href=&quot;qserialport#SerialPortError-enum&quot;&gt;QSerialPort::NoError&lt;/a&gt; after a call to clearError()</source>
          <target state="translated">오류 코드는 기본 &lt;a href=&quot;qserialport#SerialPortError-enum&quot;&gt;QSerialPort :: NoError로&lt;/a&gt; 설정됩니다. clearError ()를 호출 한 후</target>
        </trans-unit>
        <trans-unit id="d66aacbc92ca28156f0ee63de478eb1ea9755b67" translate="yes" xml:space="preserve">
          <source>The error code of the error that occurred.</source>
          <target state="translated">발생한 오류의 오류 코드.</target>
        </trans-unit>
        <trans-unit id="bf53247c28f57a7307c7f1d88ee60fe369328b59" translate="yes" xml:space="preserve">
          <source>The error message is sent to the &lt;a href=&quot;qxmlquery#messageHandler&quot;&gt;messageHandler&lt;/a&gt;().</source>
          <target state="translated">오류 메시지는 &lt;a href=&quot;qxmlquery#messageHandler&quot;&gt;messageHandler&lt;/a&gt; ()로 전송됩니다 .</target>
        </trans-unit>
        <trans-unit id="5fab51d0197686c970d7c8559b0cd6d4d203e28c" translate="yes" xml:space="preserve">
          <source>The error message returned by this function is technical in nature and may not be understood by end users. It is mostly useful to developers trying to understand why &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; will not accept some input.</source>
          <target state="translated">이 기능에 의해 반환되는 오류 메시지는 본질적으로 기술적 인 것이며 최종 사용자가 이해하지 못할 수 있습니다. &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; 이 입력을받지 않는 이유를 이해하려는 개발자에게 주로 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="2a484483bf7f032de82ccc58aa5ffdc72775b605" translate="yes" xml:space="preserve">
          <source>The error state of this state.</source>
          <target state="translated">이 상태의 오류 상태입니다.</target>
        </trans-unit>
        <trans-unit id="5534b3b34687787fed7e7dccf95ed094dfa2923d" translate="yes" xml:space="preserve">
          <source>The error status is never reset. Writes happening after the error occurred may be ignored, even if the error condition is cleared.</source>
          <target state="translated">오류 상태는 재설정되지 않습니다. 오류가 발생한 후에 발생하는 쓰기는 오류 조건이 해제 되더라도 무시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1696116f5a99b699cfcebefdbfe850aecb610ab" translate="yes" xml:space="preserve">
          <source>The error string of this state machine.</source>
          <target state="translated">이 상태 머신의 오류 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="fa5bee8fec3fecee4cec028c93c3c43506c68838" translate="yes" xml:space="preserve">
          <source>The error will be described by the error code</source>
          <target state="translated">오류는 오류 코드로 설명됩니다</target>
        </trans-unit>
        <trans-unit id="861106b5cdb21f0cfd7c8f1cdbe030687c145674" translate="yes" xml:space="preserve">
          <source>The errors are derived from &lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;QBluetoothSocket::SocketError&lt;/a&gt;. This property is read-only.</source>
          <target state="translated">오류는 &lt;a href=&quot;qbluetoothsocket#SocketError-enum&quot;&gt;QBluetoothSocket :: SocketError&lt;/a&gt; 에서 파생됩니다 . 이 속성은 읽기 전용입니다.</target>
        </trans-unit>
        <trans-unit id="c7f17013e5024ccf3812a68c681b22b8ffd9aebe" translate="yes" xml:space="preserve">
          <source>The errors that can occur are serious problems, such as these:</source>
          <target state="translated">발생할 수있는 오류는 다음과 같은 심각한 문제입니다.</target>
        </trans-unit>
        <trans-unit id="eaa681aac73600ba737617cff2a14e202d51fada" translate="yes" xml:space="preserve">
          <source>The escape button (the button activated when &lt;b&gt;Esc&lt;/b&gt; is pressed) can be specified using &lt;a href=&quot;qmessagebox#setEscapeButton&quot;&gt;setEscapeButton&lt;/a&gt;(). If an escape button is not specified, &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt; tries to find one using these rules:</source>
          <target state="translated">이스케이프 버튼 ( &lt;b&gt;Esc&lt;/b&gt; 를 누를 때 활성화 된 버튼 )은 &lt;a href=&quot;qmessagebox#setEscapeButton&quot;&gt;setEscapeButton&lt;/a&gt; ()을 사용하여 지정할 수 있습니다 . 이스케이프 버튼을 지정하지 않으면 &lt;a href=&quot;qmessagebox&quot;&gt;QMessageBox&lt;/a&gt; 는 다음 규칙을 사용하여 하나를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="ea38361d62a30c8d3a141b8c4069ad66db6ca671" translate="yes" xml:space="preserve">
          <source>The escape button (the button activated when &lt;b&gt;Esc&lt;/b&gt; is pressed) can be specified using &lt;a href=&quot;qmessagebox#setEscapeButton&quot;&gt;setEscapeButton&lt;/a&gt;(). If an escape button is not specified, QMessageBox tries to find one using these rules:</source>
          <target state="translated">이스케이프 버튼 ( &lt;b&gt;Esc&lt;/b&gt; 를 누를 때 활성화되는 버튼 )은 &lt;a href=&quot;qmessagebox#setEscapeButton&quot;&gt;setEscapeButton&lt;/a&gt; ()을 사용하여 지정할 수 있습니다 . 이스케이프 버튼이 지정되지 않은 경우 QMessageBox는 다음 규칙을 사용하여 하나를 찾으려고합니다.</target>
        </trans-unit>
        <trans-unit id="b4915fe4d33cd0e7001f6b1f2f047fa1a335c613" translate="yes" xml:space="preserve">
          <source>The evaluation of</source>
          <target state="translated">평가</target>
        </trans-unit>
        <trans-unit id="b21e33caa12852166948635429af3f31e647e8cb" translate="yes" xml:space="preserve">
          <source>The evdev keyboard handler supports the following extra parameters:</source>
          <target state="translated">evdev 키보드 핸들러는 다음과 같은 추가 매개 변수를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="61c4e5321be488393232ebfc2c998015598d95d3" translate="yes" xml:space="preserve">
          <source>The event</source>
          <target state="translated">이벤트</target>
        </trans-unit>
        <trans-unit id="08af4c2779a1f2648e7c1a3ceae97e16e7784d3f" translate="yes" xml:space="preserve">
          <source>The event changed the internal state of the recognizer, but it isn't clear yet if it is a gesture or not. The recognizer needs to filter more events to decide. Gesture recognizers in the MayBeGesture state may be reset automatically if they take too long to recognize gestures.</source>
          <target state="translated">이벤트가 인식기의 내부 상태를 변경했지만 제스처인지 여부는 아직 명확하지 않습니다. 인식기는 더 많은 이벤트를 필터링하여 결정해야합니다. MayBeGesture 상태의 제스처 인식기는 제스처를 인식하는 데 너무 오래 걸리면 자동으로 재설정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fb92028b4d4098b6c9bd6cb5c72c3b45381c040" translate="yes" xml:space="preserve">
          <source>The event contains a &lt;a href=&quot;qpaintevent#region&quot;&gt;region&lt;/a&gt;() that needs to be updated, and a &lt;a href=&quot;qpaintevent#rect&quot;&gt;rect&lt;/a&gt;() that is the bounding rectangle of that region. Both are provided because many widgets cannot make much use of &lt;a href=&quot;qpaintevent#region&quot;&gt;region&lt;/a&gt;(), and &lt;a href=&quot;qpaintevent#rect&quot;&gt;rect&lt;/a&gt;() can be much faster than &lt;a href=&quot;qpaintevent#region&quot;&gt;region&lt;/a&gt;().boundingRect().</source>
          <target state="translated">이벤트에는 업데이트해야하는 &lt;a href=&quot;qpaintevent#region&quot;&gt;리전&lt;/a&gt; ()과 해당 리전의 경계 사각형 인 &lt;a href=&quot;qpaintevent#rect&quot;&gt;rect&lt;/a&gt; ()가 포함됩니다. 많은 위젯이 &lt;a href=&quot;qpaintevent#region&quot;&gt;region&lt;/a&gt; () 을 많이 사용할 수 없으므로 &lt;a href=&quot;qpaintevent#rect&quot;&gt;rect&lt;/a&gt; ()가 &lt;a href=&quot;qpaintevent#region&quot;&gt;region&lt;/a&gt; 보다 훨씬 빠를 수 있기 때문에 둘 다 제공됩니다. () .boundingRect () .</target>
        </trans-unit>
        <trans-unit id="a6839f078ec346eec5b960376ac591c222a2eab4" translate="yes" xml:space="preserve">
          <source>The event does not change the state of the recognizer.</source>
          <target state="translated">이벤트는 인식기의 상태를 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a016c01cdbba3e638ecff77863fe569dd20bb7ed" translate="yes" xml:space="preserve">
          <source>The event during which the media was captured.</source>
          <target state="translated">미디어가 캡처 된 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="f55e097bd36ac0a1e3ec0603f9ef8b03b2e6d0d8" translate="yes" xml:space="preserve">
          <source>The event filter</source>
          <target state="translated">이벤트 필터</target>
        </trans-unit>
        <trans-unit id="826d53f3051c5a1841aa838511286042365a72b3" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qobject#timerEvent&quot;&gt;QObject::timerEvent&lt;/a&gt;() receives timer events.</source>
          <target state="translated">이벤트 핸들러 &lt;a href=&quot;qobject#timerEvent&quot;&gt;QObject :: timerEvent&lt;/a&gt; ()는 타이머 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="abead7fbd352c7383ea7c482942b4723653f2af6" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwidget#closeEvent&quot;&gt;QWidget::closeEvent&lt;/a&gt;() receives close events. The default implementation of this event handler accepts the close event. If you do not want your widget to be hidden, or want some special handling, you should reimplement the event handler and &lt;a href=&quot;qevent#ignore&quot;&gt;ignore&lt;/a&gt;() the event.</source>
          <target state="translated">이벤트 핸들러 &lt;a href=&quot;qwidget#closeEvent&quot;&gt;QWidget :: closeEvent&lt;/a&gt; ()는 닫기 이벤트를 수신합니다. 이 이벤트 핸들러의 기본 구현은 close 이벤트를 승인합니다. 위젯을 숨기거나 특별한 처리를 원하지 않으면 이벤트 핸들러를 다시 구현하고 이벤트를 &lt;a href=&quot;qevent#ignore&quot;&gt;무시&lt;/a&gt; ()해야합니다.</target>
        </trans-unit>
        <trans-unit id="d3abe2ec387f9013cfb56fafa7abc3020cc29a3e" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwidget#moveEvent&quot;&gt;QWidget::moveEvent&lt;/a&gt;() receives move events.</source>
          <target state="translated">이벤트 핸들러 &lt;a href=&quot;qwidget#moveEvent&quot;&gt;QWidget :: moveEvent&lt;/a&gt; ()는 이동 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="5dd325abadeab5c50a9499098f2e1f8096622657" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwidget#resizeEvent&quot;&gt;QWidget::resizeEvent&lt;/a&gt;() receives resize events.</source>
          <target state="translated">이벤트 핸들러 &lt;a href=&quot;qwidget#resizeEvent&quot;&gt;QWidget :: resizeEvent&lt;/a&gt; ()는 크기 조정 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="671578ea2a5bd7feef77c3fcf12c9cd7285cd191" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwidget#tabletEvent&quot;&gt;QWidget::tabletEvent&lt;/a&gt;() receives &lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletPress&lt;/a&gt;, &lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletRelease&lt;/a&gt; and &lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletMove&lt;/a&gt; events. Qt will first send a tablet event, then if it is not accepted by any widget, it will send a mouse event. This allows users of applications that are not designed for tablets to use a tablet like a mouse. However high-resolution drawing applications should handle the tablet events, because they can occur at a higher frequency, which is a benefit for smooth and accurate drawing. If the tablet events are rejected, the synthetic mouse events may be compressed for efficiency.</source>
          <target state="translated">이벤트 핸들러 &lt;a href=&quot;qwidget#tabletEvent&quot;&gt;QWidget :: tabletEvent&lt;/a&gt; ()는 &lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletPress&lt;/a&gt; , &lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletRelease&lt;/a&gt; 및 &lt;a href=&quot;qevent#Type-enum&quot;&gt;TabletMove&lt;/a&gt; 이벤트를 수신 합니다. Qt는 먼저 태블릿 이벤트를 보낸 다음 위젯에서 수락하지 않으면 마우스 이벤트를 보냅니다. 따라서 태블릿 용으로 설계되지 않은 응용 프로그램 사용자는 마우스와 같은 태블릿을 사용할 수 있습니다. 그러나 고해상도 그리기 응용 프로그램은 태블릿 이벤트가 더 높은 빈도로 발생할 수 있으므로 부드럽고 정확한 그리기에 도움이되므로 태블릿 이벤트를 처리해야합니다. 태블릿 이벤트가 거부되면 합성 마우스 이벤트가 압축되어 효율성이 높아질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f28c16ebcfb93ab1612f20609ed8496088e1b5d" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwidget#wheelEvent&quot;&gt;QWidget::wheelEvent&lt;/a&gt;() receives wheel events.</source>
          <target state="translated">이벤트 핸들러 &lt;a href=&quot;qwidget#wheelEvent&quot;&gt;QWidget :: wheelEvent&lt;/a&gt; ()는 휠 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="5e837443d824e8c3bb2db5cce0cb5dec73bf186b" translate="yes" xml:space="preserve">
          <source>The event handler &lt;a href=&quot;qwindow#exposeEvent&quot;&gt;QWindow::exposeEvent&lt;/a&gt;() receives expose events.</source>
          <target state="translated">이벤트 핸들러 &lt;a href=&quot;qwindow#exposeEvent&quot;&gt;QWindow :: exposeEvent&lt;/a&gt; ()는 노출 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="1c394912e86c09b0aef10d8c3704c14e0c183e3c" translate="yes" xml:space="preserve">
          <source>The event handlers &lt;a href=&quot;qwidget#focusInEvent&quot;&gt;QWidget::focusInEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#focusOutEvent&quot;&gt;QWidget::focusOutEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#focusInEvent&quot;&gt;QGraphicsItem::focusInEvent&lt;/a&gt; and &lt;a href=&quot;qgraphicsitem#focusOutEvent&quot;&gt;QGraphicsItem::focusOutEvent&lt;/a&gt;() receive focus events.</source>
          <target state="translated">이벤트 핸들러 &lt;a href=&quot;qwidget#focusInEvent&quot;&gt;QWidget :: focusInEvent&lt;/a&gt; (), &lt;a href=&quot;qwidget#focusOutEvent&quot;&gt;QWidget :: focusOutEvent&lt;/a&gt; (), &lt;a href=&quot;qgraphicsitem#focusInEvent&quot;&gt;QGraphicsItem :: focusInEvent&lt;/a&gt; 및 &lt;a href=&quot;qgraphicsitem#focusOutEvent&quot;&gt;QGraphicsItem :: focusOutEvent&lt;/a&gt; ()는 포커스 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="5fac5755d1112b61138f2fe0d7652d63d2794903" translate="yes" xml:space="preserve">
          <source>The event handlers &lt;a href=&quot;qwidget#keyPressEvent&quot;&gt;QWidget::keyPressEvent&lt;/a&gt;(), &lt;a href=&quot;qwidget#keyReleaseEvent&quot;&gt;QWidget::keyReleaseEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#keyPressEvent&quot;&gt;QGraphicsItem::keyPressEvent&lt;/a&gt;() and &lt;a href=&quot;qgraphicsitem#keyReleaseEvent&quot;&gt;QGraphicsItem::keyReleaseEvent&lt;/a&gt;() receive key events.</source>
          <target state="translated">이벤트 핸들러 &lt;a href=&quot;qwidget#keyPressEvent&quot;&gt;QWidget :: keyPressEvent&lt;/a&gt; (), &lt;a href=&quot;qwidget#keyReleaseEvent&quot;&gt;QWidget :: keyReleaseEvent&lt;/a&gt; (), &lt;a href=&quot;qgraphicsitem#keyPressEvent&quot;&gt;QGraphicsItem :: keyPressEvent&lt;/a&gt; () 및 &lt;a href=&quot;qgraphicsitem#keyReleaseEvent&quot;&gt;QGraphicsItem :: keyReleaseEvent&lt;/a&gt; ()는 키 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="3f6a3297ea86f83ad4069552d5b1b096c17aa0ba" translate="yes" xml:space="preserve">
          <source>The event has high priority.</source>
          <target state="translated">이벤트 우선 순위가 높습니다.</target>
        </trans-unit>
        <trans-unit id="affde00e5992937ecf05d63205b5571d00dd5a9a" translate="yes" xml:space="preserve">
          <source>The event has normal priority.</source>
          <target state="translated">이벤트의 우선 순위가 보통입니다.</target>
        </trans-unit>
        <trans-unit id="1b336b760676bd7a01be3c72accf409df58e16d8" translate="yes" xml:space="preserve">
          <source>The event interface ID. No signals are exposed as COM events if not specified.</source>
          <target state="translated">이벤트 인터페이스 ID 지정하지 않으면 COM 이벤트로 신호가 노출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5a39a04e1e8f531e2e769a14fa37f53412466964" translate="yes" xml:space="preserve">
          <source>The event is</source>
          <target state="translated">이벤트는</target>
        </trans-unit>
        <trans-unit id="ac2d476d5e8bf78ff0d4c23af919e8dbc61fc527" translate="yes" xml:space="preserve">
          <source>The event is &lt;a href=&quot;qevent#ignore&quot;&gt;QEvent::ignore&lt;/a&gt;()d for items that are neither &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;movable&lt;/a&gt; nor &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;selectable&lt;/a&gt;.</source>
          <target state="translated">이벤트는 &lt;a href=&quot;qevent#ignore&quot;&gt;QEvent :: ignore&lt;/a&gt; () d로 &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;움직일 수&lt;/a&gt; 없거나 &lt;a href=&quot;qgraphicsitem#GraphicsItemFlag-enum&quot;&gt;선택할 수&lt;/a&gt; 없는 항목입니다 .</target>
        </trans-unit>
        <trans-unit id="99d9820e08de97d0252f4d547e2bc4f0d9ee75b6" translate="yes" xml:space="preserve">
          <source>The event is a wrapper for, i.e., contains, another event (&lt;a href=&quot;qstatemachine-wrappedevent&quot;&gt;QStateMachine::WrappedEvent&lt;/a&gt;).</source>
          <target state="translated">이벤트는 다른 이벤트 ( &lt;a href=&quot;qstatemachine-wrappedevent&quot;&gt;QStateMachine :: WrappedEvent&lt;/a&gt; )를 포함하는 래퍼입니다 .</target>
        </trans-unit>
        <trans-unit id="4336ed9accb643cc1507854e2f3640cca86e4486" translate="yes" xml:space="preserve">
          <source>The event is a wrapper for, i.e., contains, another event (QStateMachine::WrappedEvent).</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="42301aa5af9d57ce290d1f7b3bf689a51515831b" translate="yes" xml:space="preserve">
          <source>The event is accepted by default, so it is not necessary to explicitly accept the event if you reimplement this function. If you don't accept the event, call &lt;code&gt;event-&amp;gt;ignore()&lt;/code&gt;.</source>
          <target state="translated">이벤트는 기본적으로 허용되므로이 기능을 다시 구현하는 경우 명시 적으로 이벤트를 수락하지 않아도됩니다. 이벤트를 수락하지 않으면 &lt;code&gt;event-&amp;gt;ignore()&lt;/code&gt; 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="40b63b9ff234225ebbd42faa6495062b10059e36" translate="yes" xml:space="preserve">
          <source>The event is delivered in sync with the display vsync on platforms where this is possible. Otherwise, the event is delivered after a delay of 5 ms. The additional time is there to give the event loop a bit of idle time to gather system events, and can be overridden using the QT_QPA_UPDATE_IDLE_TIME environment variable.</source>
          <target state="translated">이벤트는 가능한 플랫폼에서 디스플레이 vsync와 동기화되어 제공됩니다. 그렇지 않으면 이벤트가 5ms 지연된 후에 전달됩니다. 추가 시간은 시스템 이벤트를 수집하기 위해 이벤트 루프에 약간의 유휴 시간을 제공하며 QT_QPA_UPDATE_IDLE_TIME 환경 변수를 사용하여 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8eced82aeebdce54e5cec70ec689e9f2be9fa721" translate="yes" xml:space="preserve">
          <source>The event is sent only if the item is enabled.</source>
          <target state="translated">항목이 활성화 된 경우에만 이벤트가 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="4bbece77219752dc9cdea38009d6537b8cb61b4e" translate="yes" xml:space="preserve">
          <source>The event loop is started with a call to &lt;a href=&quot;qcoreapplication#exec&quot;&gt;exec&lt;/a&gt;(). Long-running operations can call &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;() to keep the application responsive.</source>
          <target state="translated">이벤트 루프는 &lt;a href=&quot;qcoreapplication#exec&quot;&gt;exec&lt;/a&gt; () 호출로 시작됩니다 . 장기 실행 작업은 &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt; ()를 호출 하여 응용 프로그램의 응답 성을 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e56ad83688ee0c6418e9fe82030789b9423d170" translate="yes" xml:space="preserve">
          <source>The event made it clear that it is not a gesture. If the gesture recognizer was in GestureTriggered state before, then the gesture is canceled and the appropriate &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; object will be delivered to the target as a part of a &lt;a href=&quot;qgestureevent&quot;&gt;QGestureEvent&lt;/a&gt;.</source>
          <target state="translated">이 행사는 그것이 제스처가 아님을 분명히했다. 제스처 인식기 GestureTriggered 전 상태에있는 경우, 그 동작은 취소되고 적절한 &lt;a href=&quot;qgesture&quot;&gt;QGesture의&lt;/a&gt; 목적은 (A)의 일부로서 대상에게 전달 될 것이다 &lt;a href=&quot;qgestureevent&quot;&gt;QGestureEvent&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="696b03750a8d73dddec3592d8410d51c4af0ab01" translate="yes" xml:space="preserve">
          <source>The event must be allocated on the heap since the post event queue will take ownership of the event and delete it once it has been posted. It is</source>
          <target state="translated">사후 이벤트 큐가 이벤트의 소유권을 가져 와서 게시 된 후에 삭제하므로 이벤트는 힙에 할당되어야합니다. 그것은</target>
        </trans-unit>
        <trans-unit id="4b857998cc7d89771720dc7ab176e1ca33cd9d9b" translate="yes" xml:space="preserve">
          <source>The event point currently being handled. When no point is currently being handled, this object is reset to default values (all coordinates are 0).</source>
          <target state="translated">현재 처리중인 이벤트 지점. 현재 처리중인 점이 없으면이 객체는 기본값으로 재설정됩니다 (모든 좌표는 0 임).</target>
        </trans-unit>
        <trans-unit id="085c39ff994a55ff19691c02015c7733b463f94d" translate="yes" xml:space="preserve">
          <source>The event point did not move.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4fc2aa1f8b69c552fa776d1a89bb4781a02e422" translate="yes" xml:space="preserve">
          <source>The event point was updated.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0825b9bf62fe2d0832950e6d03549b46913cb20a" translate="yes" xml:space="preserve">
          <source>The event type is one of the values of &lt;a href=&quot;qaccessible#Event-enum&quot;&gt;QAccessible::Event&lt;/a&gt;. There are a number of subclasses that should be used to provide more details about the event.</source>
          <target state="translated">이벤트 유형은 &lt;a href=&quot;qaccessible#Event-enum&quot;&gt;QAccessible :: Event&lt;/a&gt; 값 중 하나입니다 . 이벤트에 대한 자세한 정보를 제공하는 데 사용해야하는 여러 서브 클래스가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2f5a88fab38d29660044c3328ad25032b8f1573" translate="yes" xml:space="preserve">
          <source>The event was sent by some other means (i.e. not by the mouse or keyboard).</source>
          <target state="translated">이벤트는 다른 방법으로 (예 : 마우스 나 키보드가 아닌) 전송되었습니다.</target>
        </trans-unit>
        <trans-unit id="72c1f32d58eff8d9700be5edfa255e4dee6420cd" translate="yes" xml:space="preserve">
          <source>The event will be sent to the &lt;a href=&quot;qml-qttest-testcase&quot;&gt;TestCase&lt;/a&gt; window or, in case of multiple windows, to the current active window. See &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication::focusWindow()&lt;/a&gt; for more details.</source>
          <target state="translated">이벤트는 &lt;a href=&quot;qml-qttest-testcase&quot;&gt;TestCase&lt;/a&gt; 창 또는 여러 창이있는 경우 현재 활성 창으로 전송됩니다. 자세한 내용은 &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication :: focusWindow ()&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="59223ce11af6cfe10f591bb2a37c99706430e373" translate="yes" xml:space="preserve">
          <source>The event will be sent to the &lt;a href=&quot;qml-testcase&quot;&gt;TestCase&lt;/a&gt; window or, in case of multiple windows, to the current active window. See &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication::focusWindow()&lt;/a&gt; for more details.</source>
          <target state="translated">이벤트는 &lt;a href=&quot;qml-testcase&quot;&gt;TestCase&lt;/a&gt; 창 또는 여러 창이있는 경우 현재 활성 창으로 전송됩니다. 자세한 내용은 &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication :: focusWindow ()&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="66f8b568bddf13cf4070a88085140b44e3cc3d97" translate="yes" xml:space="preserve">
          <source>The event() function can be reimplemented to customize the behavior of an object.</source>
          <target state="translated">event () 함수는 객체의 동작을 사용자 정의하기 위해 다시 구현 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84984bb966924c79b11bcb068cb5c5280dc4fb69" translate="yes" xml:space="preserve">
          <source>The events are</source>
          <target state="translated">이벤트는</target>
        </trans-unit>
        <trans-unit id="dbe39191d76e3a330b73caff8817f69879b96319" translate="yes" xml:space="preserve">
          <source>The events are of interest to authors of keyboard entry widgets who want to be able to correctly handle languages with complex character input. Text input in such languages is usually a three step process:</source>
          <target state="translated">이 이벤트는 복잡한 문자 입력으로 언어를 올바르게 처리 할 수있는 키보드 입력 위젯 작성자에게 관심이 있습니다. 이러한 언어로 된 텍스트 입력은 일반적으로 3 단계 프로세스입니다.</target>
        </trans-unit>
        <trans-unit id="0bd1d33ea8cec83b6692908b56d918b703605221" translate="yes" xml:space="preserve">
          <source>The events in the lexical handler apply to the entire document, not just to the document element, and all lexical handler events appear between the content handler's startDocument and endDocument events.</source>
          <target state="translated">어휘 핸들러의 이벤트는 문서 요소뿐만 아니라 전체 문서에 적용되며 모든 어휘 핸들러 이벤트는 컨텐츠 핸들러의 startDocument 및 endDocument 이벤트 사이에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="aa80f52f030ead3963f0707eb6647c53c6d6403a" translate="yes" xml:space="preserve">
          <source>The example above defines a toString() specialization for a class called &lt;code&gt;MyPoint&lt;/code&gt;. Whenever a comparison of two instances of &lt;code&gt;MyPoint&lt;/code&gt; fails, &lt;a href=&quot;qtest#QCOMPARE&quot;&gt;QCOMPARE&lt;/a&gt;() will call this function to output the contents of &lt;code&gt;MyPoint&lt;/code&gt; to the test log.</source>
          <target state="translated">위의 예제는 &lt;code&gt;MyPoint&lt;/code&gt; 라는 클래스에 대한 toString () 전문화를 정의합니다 . &lt;code&gt;MyPoint&lt;/code&gt; 의 두 인스턴스 비교가 실패 할 때마다 &lt;a href=&quot;qtest#QCOMPARE&quot;&gt;QCOMPARE&lt;/a&gt; ()는이 함수를 호출하여 &lt;code&gt;MyPoint&lt;/code&gt; 의 컨텐츠를 테스트 로그 에 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="d7ad1ee5595d42e11968618a848dd4bfb2384e33" translate="yes" xml:space="preserve">
          <source>The example above inserts four new rows into &lt;code&gt;myTable&lt;/code&gt;:</source>
          <target state="translated">위의 예제는 &lt;code&gt;myTable&lt;/code&gt; 에 네 개의 새로운 행을 삽입합니다 .</target>
        </trans-unit>
        <trans-unit id="e4ce9b39dae7f6284e224bb1f91732bb0fb631fb" translate="yes" xml:space="preserve">
          <source>The example above shows a simple QML component that displays a rich text title string at the top, and a smaller copy of the same text at the bottom. The first &lt;code&gt;Text&lt;/code&gt; type directly accesses the component's &lt;code&gt;title&lt;/code&gt; property when forming the text to display. That the root type's properties are directly accessible makes it trivial to distribute data throughout the component.</source>
          <target state="translated">위의 예는 맨 위에 리치 텍스트 제목 문자열을 표시하고 맨 아래에 동일한 텍스트의 작은 사본을 표시하는 간단한 QML 구성 요소를 보여줍니다. 첫 번째 &lt;code&gt;Text&lt;/code&gt; 유형 은 표시 할 텍스트를 구성 할 때 구성 요소의 &lt;code&gt;title&lt;/code&gt; 속성에 직접 액세스합니다 . 루트 유형의 속성에 직접 액세스 할 수 있으므로 구성 요소 전체에 데이터를 배포하는 것이 쉽지 않습니다.</target>
        </trans-unit>
        <trans-unit id="da9898f7f8aa20b0b0e72d1d3a91db46fc9eeb26" translate="yes" xml:space="preserve">
          <source>The example above shows the minimum code necessary to add &lt;a href=&quot;qml-qtquick-controls-exclusivegroup&quot;&gt;ExclusiveGroup&lt;/a&gt; support to any item.</source>
          <target state="translated">위의 예는 모든 항목에 &lt;a href=&quot;qml-qtquick-controls-exclusivegroup&quot;&gt;ExclusiveGroup&lt;/a&gt; 지원을 추가하는 데 필요한 최소 코드를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c09c7da9aa34484a32efd91509a7d0f43575eb60" translate="yes" xml:space="preserve">
          <source>The example above shows the minimum code necessary to add ExclusiveGroup support to any item.</source>
          <target state="translated">위의 예는 모든 항목에 ExclusiveGroup 지원을 추가하는 데 필요한 최소 코드를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c0fcf9d5d4468f7b83f2a731049444314551962a" translate="yes" xml:space="preserve">
          <source>The example above simulates clicking &lt;code&gt;a&lt;/code&gt; on &lt;code&gt;myWidget&lt;/code&gt; without any keyboard modifiers and without delay of the test.</source>
          <target state="translated">시뮬레이트 위의 예는 클릭 에 &lt;code&gt;myWidget&lt;/code&gt; 을 키보드의 아무 수정없이 시험 지체없이. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e2bb7d754676fcb070c1ddfa7a42fb9c230e70d" translate="yes" xml:space="preserve">
          <source>The example above simulates clicking &lt;code&gt;a&lt;/code&gt; on &lt;code&gt;myWindow&lt;/code&gt; without any keyboard modifiers and without delay of the test.</source>
          <target state="translated">시뮬레이트 위의 예는 클릭 에 &lt;code&gt;myWindow&lt;/code&gt; 을 키보드의 아무 수정없이 시험 지체없이. &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b4d1593d1c0ea78891ea7a115ebc0a2837cfc67d" translate="yes" xml:space="preserve">
          <source>The example above simulates clicking the sequence of keys representing &quot;hello world&quot; on &lt;code&gt;myWidget&lt;/code&gt; without any keyboard modifiers and without delay of the test.</source>
          <target state="translated">위의 예제는 키보드 수정 자없이 테스트 지연없이 &lt;code&gt;myWidget&lt;/code&gt; 에서 &quot;hello world&quot;를 나타내는 일련의 키 클릭을 시뮬레이션 합니다.</target>
        </trans-unit>
        <trans-unit id="b3c74859e50485743824a62c48e2fed9103d1c7e" translate="yes" xml:space="preserve">
          <source>The example above simulates the user entering the character &lt;code&gt;a&lt;/code&gt; followed by a backspace, waiting for 200 milliseconds and repeating it.</source>
          <target state="translated">위의 예제는 사용자가 문자 &lt;code&gt;a&lt;/code&gt; 를 입력 한 다음 백 스페이스를 입력하여 200 밀리 초 동안 기다렸다가 반복하는 것을 시뮬레이션 합니다.</target>
        </trans-unit>
        <trans-unit id="35447f18d02880527b06a0e3968bc544854214af" translate="yes" xml:space="preserve">
          <source>The example above tests that &lt;a href=&quot;qdir#mkdir&quot;&gt;QDir::mkdir&lt;/a&gt;() outputs the right warning when invoked with an invalid file name.</source>
          <target state="translated">위의 예제는 &lt;a href=&quot;qdir#mkdir&quot;&gt;QDir :: mkdir&lt;/a&gt; ()이 유효하지 않은 파일 이름으로 호출 될 때 올바른 경고를 출력 하는지 테스트합니다 .</target>
        </trans-unit>
        <trans-unit id="4afc31d2b7202cef7a48490ca5a94a6273596a6d" translate="yes" xml:space="preserve">
          <source>The example above uses a function called &lt;code&gt;readElementAsString&lt;/code&gt; to read the map's keys and obtain a string. That is because CBOR maps may contain any type as keys, not just strings. User code needs to either perform this conversion, reject non-string keys, or instead use a different container besides &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; and &lt;a href=&quot;qvariant#QVariantHash-typedef&quot;&gt;QVariantHash&lt;/a&gt;. For example, if the map is expected to contain integer keys, which is recommended as it reduces stream size and parsing, the correct container would be &lt;code&gt;\l{QMap}&amp;lt;int, QVariant&amp;gt;&lt;/code&gt; or &lt;code&gt;\l{QHash}&amp;lt;int, QVariant&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">위의 예제는 &lt;code&gt;readElementAsString&lt;/code&gt; 이라는 함수를 사용 하여 맵의 키를 읽고 문자열을 얻습니다. CBOR 맵에는 문자열뿐만 아니라 모든 유형의 키가 포함될 수 있기 때문입니다. 사용자 코드는이 변환을 수행하거나 문자열이 아닌 키를 거부하거나 &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; 및 &lt;a href=&quot;qvariant#QVariantHash-typedef&quot;&gt;QVariantHash&lt;/a&gt; 이외의 다른 컨테이너를 사용해야합니다 . 예를 들어, 맵에 정수 키가 포함되어 스트림 크기와 구문 분석을 줄 &lt;code&gt;\l{QMap}&amp;lt;int, QVariant&amp;gt;&lt;/code&gt; 권장되는 경우 올바른 컨테이너는 \ l {QMap} &amp;lt;int, QVariant&amp;gt; 또는 &lt;code&gt;\l{QHash}&amp;lt;int, QVariant&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7374f726b806a841149e87a12ff101afd13bd2ca" translate="yes" xml:space="preserve">
          <source>The example assumes &lt;code&gt;myeffect.vert&lt;/code&gt; and &lt;code&gt;myeffect.frag&lt;/code&gt; contain Vulkan-style GLSL code, processed by the &lt;code&gt;qsb&lt;/code&gt; tool in order to generate the &lt;code&gt;.qsb&lt;/code&gt; files.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="03c31d2e5be8490900aeb08320d09c38a018f802" translate="yes" xml:space="preserve">
          <source>The example below catches a signal from a custom object:</source>
          <target state="translated">아래 예제는 커스텀 객체의 신호를 포착합니다.</target>
        </trans-unit>
        <trans-unit id="78b9a3975c8ca8a01b8d8a259585467cc5162f61" translate="yes" xml:space="preserve">
          <source>The example below creates a Package containing two named items;</source>
          <target state="translated">아래 예제는 두 개의 명명 된 항목을 포함하는 패키지를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7901ddd2588150db7f85a2a8505c43e0412e1f04" translate="yes" xml:space="preserve">
          <source>The example below creates a high voltage symbol by adding each path of the symbol to the list of paths. The coordinates of the vertices are normalized, and through the containing shape's &lt;a href=&quot;qml-qtquick-path#scale-prop&quot;&gt;scale&lt;/a&gt; property, the path will be rescaled together with its containing shape.</source>
          <target state="translated">아래 예는 기호의 각 경로를 경로 목록에 추가하여 고전압 기호를 만듭니다. 정점의 좌표가 정규화되고 포함하는 모양의 &lt;a href=&quot;qml-qtquick-path#scale-prop&quot;&gt;크기 조정&lt;/a&gt; 속성을 통해 경로가 포함 된 모양과 함께 크기 가 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="c501c01371b080fb52ab1c57f63188ba99c32bf1" translate="yes" xml:space="preserve">
          <source>The example below creates a list with one item, showing the color of the</source>
          <target state="translated">아래 예제는 하나의 항목으로 목록을 작성하고</target>
        </trans-unit>
        <trans-unit id="f5a132f95418baf1c6b1efd84372798496f54272" translate="yes" xml:space="preserve">
          <source>The example below creates a path consisting of a straight line from 0,100 to 200,100:</source>
          <target state="translated">아래 예제는 0,100에서 200,100까지의 직선으로 구성된 경로를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="3aace1dd1ee0e4384396f86285c4626daaee3585" translate="yes" xml:space="preserve">
          <source>The example below creates a path consisting of two horizontal lines with some empty space between them. All three segments have a width of 100:</source>
          <target state="translated">아래 예제는 두 개의 수평선으로 구성된 경로를 만들고 그 사이에 빈 공간이 있습니다. 세 세그먼트 모두 너비가 100입니다.</target>
        </trans-unit>
        <trans-unit id="b3ca4f895b7a4408d2bbda15d3c6076bc2e724d7" translate="yes" xml:space="preserve">
          <source>The example below creates a triangular path consisting of four vertices on the edge of the containing Shape's bounding box. Through the containing shape's &lt;a href=&quot;qml-qtquick-path#scale-prop&quot;&gt;scale&lt;/a&gt; property, the path will be rescaled together with its containing shape.</source>
          <target state="translated">아래 예제에서는 포함하는 Shape의 경계 상자 가장자리에 4 개의 정점으로 구성된 삼각형 경로를 만듭니다. 포함하는 모양의 &lt;a href=&quot;qml-qtquick-path#scale-prop&quot;&gt;크기 조정&lt;/a&gt; 속성을 통해 경로는 포함하는 모양과 함께 크기 가 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="ce14b19b09623e33db9c4037bb88f0d6172efd30" translate="yes" xml:space="preserve">
          <source>The example below demonstrates how the error handling can be done without using exceptions. Let's say we want to send a network request to obtain a large file from a network location. Then we want to write it to the file system and return its location in case of a success. Both of these operations may fail with different errors. So, we use std::variant to keep the result or error:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9dffe32796ec2c8e17d2771e1dc2e01c8fdf0d4d" translate="yes" xml:space="preserve">
          <source>The example below demonstrates how this could be done.</source>
          <target state="translated">아래 예제는이를 수행하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="5db8f7b02af2ff9817933b37e0f4799761aa2469" translate="yes" xml:space="preserve">
          <source>The example below demonstrates how to call two different static functions.</source>
          <target state="translated">아래 예제는 서로 다른 두 가지 정적 함수를 호출하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="dd2feae7be254bb0a3f44e485af25eb345eeb794" translate="yes" xml:space="preserve">
          <source>The example below demonstrates how to use the struct:</source>
          <target state="translated">아래 예제는 구조체를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6877420a6dbd5dbec220239f72fc58e1d8be5eb0" translate="yes" xml:space="preserve">
          <source>The example below displays a large red rectangle and a small blue rectangle, side by side. When the &lt;code&gt;blueRect&lt;/code&gt; is clicked, it changes to the &quot;reparented&quot; state: its parent is changed to &lt;code&gt;redRect&lt;/code&gt; and it is positioned at (10, 10) within the red rectangle, as specified in the &lt;a href=&quot;qml-qtquick-parentchange&quot;&gt;ParentChange&lt;/a&gt;.</source>
          <target state="translated">아래 예는 큰 빨간색 사각형과 작은 파란색 사각형을 나란히 표시합니다. 때 &lt;code&gt;blueRect&lt;/code&gt; 가 클릭하면, 그것은 &quot;다시 부모&quot;상태로 변경한다 : 부모가 변화 &lt;code&gt;redRect&lt;/code&gt; 에 지정된 바와 같이, 적색 사각형 내 (10, 10)에 그리고이 위치 &lt;a href=&quot;qml-qtquick-parentchange&quot;&gt;ParentChange&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="570b1e8ede54f123925835562fa681aeaae908b3" translate="yes" xml:space="preserve">
          <source>The example below displays a large red rectangle and a small blue rectangle, side by side. When the &lt;code&gt;blueRect&lt;/code&gt; is clicked, it changes to the &quot;reparented&quot; state: its parent is changed to &lt;code&gt;redRect&lt;/code&gt; and it is positioned at (10, 10) within the red rectangle, as specified in the ParentChange.</source>
          <target state="translated">아래 예는 큰 빨간색 직사각형과 작은 파란색 직사각형을 나란히 표시합니다. 때 &lt;code&gt;blueRect&lt;/code&gt; 가 클릭하면, 그것은 &quot;다시 부모&quot;상태로 변경한다 : 부모가 변화 &lt;code&gt;redRect&lt;/code&gt; ParentChange에 지정된 적색 사각형 내 (10, 10)에 그리고이 위치된다.</target>
        </trans-unit>
        <trans-unit id="a4e9d4b8a9b72286c4a0934a4691239222383706" translate="yes" xml:space="preserve">
          <source>The example below filters on PNG and JPEG files:</source>
          <target state="translated">아래 예는 PNG 및 JPEG 파일을 필터링합니다.</target>
        </trans-unit>
        <trans-unit id="fbc6c175a4f9005fb81519695b93b6dea4839d8c" translate="yes" xml:space="preserve">
          <source>The example below illustrates using a &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt; with a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;.</source>
          <target state="translated">아래 예제 는 &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; 와 함께 &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt; 사용을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="cadbcd64aa78e090ecca9b02c609787ab5f63bc4" translate="yes" xml:space="preserve">
          <source>The example below illustrates using a DelegateModel with a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;.</source>
          <target state="translated">아래 예제는 &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; 와 함께 DelegateModel 사용을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="39086c3a77ddadeaa6c512c5d702bbf60816b786" translate="yes" xml:space="preserve">
          <source>The example below places three colored rectangles in a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;.</source>
          <target state="translated">아래 예제는 &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; 에 3 개의 색상 사각형을 배치합니다 .</target>
        </trans-unit>
        <trans-unit id="1302c959d22a54ed0907a64ae8515a33522457d6" translate="yes" xml:space="preserve">
          <source>The example below shows a fairly typical relationship between two MouseAreas, with &lt;code&gt;mouseArea2&lt;/code&gt; on top of &lt;code&gt;mouseArea1&lt;/code&gt;. Moving the mouse into &lt;code&gt;mouseArea2&lt;/code&gt; from &lt;code&gt;mouseArea1&lt;/code&gt; will cause &lt;code&gt;mouseArea1&lt;/code&gt; to emit the &lt;code&gt;exited&lt;/code&gt; signal.</source>
          <target state="translated">예를 보여주는 아래 두 MouseAreas 사이 상당히 전형적인 관계 &lt;code&gt;mouseArea2&lt;/code&gt; 위에 &lt;code&gt;mouseArea1&lt;/code&gt; . &lt;code&gt;mouseArea2&lt;/code&gt; 에서 &lt;code&gt;mouseArea1&lt;/code&gt; 로 마우스를 이동 하면 &lt;code&gt;mouseArea1&lt;/code&gt; 이 &lt;code&gt;exited&lt;/code&gt; 신호 를 방출합니다 .</target>
        </trans-unit>
        <trans-unit id="e91ac17a2ecbec260a778a1b805af83e4fd610ef" translate="yes" xml:space="preserve">
          <source>The example below shows a path with the items scaled to 30% with opacity 50% at the top of the path and scaled 100% with opacity 100% at the bottom. Note the use of the &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt;.iconScale and &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt;.iconOpacity attached properties to set the scale and opacity of the delegate.</source>
          <target state="translated">아래 예는 경로 상단에 불투명도가 50 % 인 항목이 30 %로, 하단이 불투명도가 100 % 인 경우 100 %로 조정 된 경로를 보여줍니다. 의 사용을 참고 &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; .iconScale 및 &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; 대리인의 규모와 불투명도를 설정할 수 .iconOpacity 연결된 속성을.</target>
        </trans-unit>
        <trans-unit id="b544648bf21471a2fc6063674f764be3e1ed542e" translate="yes" xml:space="preserve">
          <source>The example below shows how different localizations can affect the user interface. When a localization requires more space for longer text strings the Qt layout automatically scales to accommodate this, while ensuring that the user interface looks presentable and still matches the platform guidelines.</source>
          <target state="translated">아래 예는 다른 지역화가 사용자 인터페이스에 미치는 영향을 보여줍니다. 현지화에 더 긴 텍스트 문자열을위한 더 많은 공간이 필요한 경우 Qt 레이아웃은이를 수용 할 수 있도록 자동으로 확장되며 사용자 인터페이스는 표시 가능하고 플랫폼 가이드 라인과 여전히 일치합니다.</target>
        </trans-unit>
        <trans-unit id="8b2aafc6948d44288d4f0ca9933bc172da0bc682" translate="yes" xml:space="preserve">
          <source>The example below uses an item's contents as a drag image:</source>
          <target state="translated">아래 예제는 항목의 내용을 드래그 이미지로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d83767c45ad9a2e3fd5bf1406d97c14b2dacc3f6" translate="yes" xml:space="preserve">
          <source>The example code creates a polygon with three points (4,5), (6,7) and (8,9), by expanding the polygon from 1 to 3 points:</source>
          <target state="translated">예제 코드는 다각형을 1에서 3으로 확장하여 3 개의 점 (4,5), (6,7) 및 (8,9)로 다각형을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="8d5f881ad62463d92d06ca710912aa3e3d217e7d" translate="yes" xml:space="preserve">
          <source>The example code creates a polygon with two points (10, 20) and (30, 40):</source>
          <target state="translated">예제 코드는 두 개의 점 (10, 20) 및 (30, 40)으로 다각형을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6a2fc46d796001fda75fda7e03843fe0792378d8" translate="yes" xml:space="preserve">
          <source>The example code will display the text &quot;See the &lt;a href=&quot;http://qt-project.org&quot;&gt;Qt Project website&lt;/a&gt;.&quot;</source>
          <target state="translated">예제 코드는 &quot; &lt;a href=&quot;http://qt-project.org&quot;&gt;Qt Project 웹 사이트&lt;/a&gt; 참조&quot;텍스트를 표시합니다 .</target>
        </trans-unit>
        <trans-unit id="3bc375fc1b97407ed42b1655588dd79e2427ccb5" translate="yes" xml:space="preserve">
          <source>The example demonstrates the standard pattern for using a subclass of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; in combination with &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; to perform an &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt;.</source>
          <target state="translated">예는 서브 클래스를 사용하는 표준 패턴을 보여 &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel을&lt;/a&gt; 조합하여 &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; 수행 &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2cb45fcfa5bab580acabbcc90c3f2ec2e90c9ffa" translate="yes" xml:space="preserve">
          <source>The example demonstrates the standard pattern for using a subclass of QAbstractXmlNodeModel in combination with &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; to perform an &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt;.</source>
          <target state="translated">이 예제는 QAbstractXmlNodeModel의 하위 클래스를 &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; 와 함께 사용하여 &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; 를 수행하는 표준 패턴을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="56406b0077c72e613bdbb4a39cfa95f41ac968b6" translate="yes" xml:space="preserve">
          <source>The example here from &lt;a href=&quot;qml-qtquick3d-materials-coppermaterial&quot;&gt;CopperMaterial&lt;/a&gt; shows how the material is built. First, the shader parameters are specified as properties. The names and types must match the names in the shader code. Textures use &lt;a href=&quot;qml-qtquick3d-textureinput&quot;&gt;TextureInput&lt;/a&gt; to assign &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;texture&lt;/a&gt; into the shader variable. The &lt;a href=&quot;qml-qtquick3d-materials-custommaterial#shaderInfo-prop&quot;&gt;shaderInfo&lt;/a&gt; property specifies more information about the shader and also configures some of its features on or off when the custom material is built by &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick3d-qmlmodule.html&quot;&gt;QtQuick3D&lt;/a&gt; shader generator. Then the material can use Shader type to specify shader source and shader stage. These are used with &lt;a href=&quot;qml-qtquick3d-pass&quot;&gt;passes&lt;/a&gt; to create the resulting material. The passes can contain multiple rendering passes and also other commands. Normally only the fragment shader needs to be passed to a pass. The material library generates the vertex shader for the material. The material can also create &lt;a href=&quot;qml-qtquick3d-buffer&quot;&gt;buffers&lt;/a&gt; to store intermediate rendering results. Here is an example from &lt;a href=&quot;qml-qtquick3d-materials-glassrefractivematerial&quot;&gt;GlassRefractiveMaterial&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick3d-materials-coppermaterial&quot;&gt;CopperMaterial&lt;/a&gt; 의 예제 는 머티리얼이 어떻게 만들어 지는지 보여줍니다. 먼저 셰이더 매개 변수가 속성으로 지정됩니다. 이름과 유형은 셰이더 코드의 이름과 일치해야합니다. 텍스처는 &lt;a href=&quot;qml-qtquick3d-textureinput&quot;&gt;TextureInput&lt;/a&gt; 을 사용 하여 &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;텍스처&lt;/a&gt; 를 셰이더 변수 에 할당 합니다. &lt;a href=&quot;qml-qtquick3d-materials-custommaterial#shaderInfo-prop&quot;&gt;shaderInfo의&lt;/a&gt; 속성을 지정 더 쉐이더에 대한 정보도 또는 사용자 정의 재료에 의해 작성 될 때 떨어져 일부 기능 구성 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick3d-qmlmodule.html&quot;&gt;QtQuick3D의&lt;/a&gt; 쉐이더 생성기를. 그런 다음 머티리얼은 셰이더 유형을 사용하여 셰이더 소스 및 셰이더 단계를 지정할 수 있습니다. &lt;a href=&quot;qml-qtquick3d-pass&quot;&gt;패스&lt;/a&gt; 와 함께 사용됩니다.결과물을 만듭니다. 패스에는 여러 렌더링 패스와 기타 명령이 포함될 수 있습니다. 일반적으로 조각 셰이더 만 패스로 전달하면됩니다. 재질 라이브러리는 재질에 대한 정점 셰이더를 생성합니다. 재료는 중간 렌더링 결과를 저장하기 위해 &lt;a href=&quot;qml-qtquick3d-buffer&quot;&gt;버퍼&lt;/a&gt; 를 생성 할 수도 있습니다 . 다음은 &lt;a href=&quot;qml-qtquick3d-materials-glassrefractivematerial&quot;&gt;GlassRefractiveMaterial&lt;/a&gt; 의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="c390fcc3a14f94dcb796729bc331020cbcbca9cf" translate="yes" xml:space="preserve">
          <source>The example illustrates the two typical uses, that of sending error replies and that of delayed replies.</source>
          <target state="translated">이 예는 오류 응답을 보내는 것과 지연된 응답을 보내는 두 가지 일반적인 용도를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="044e20559eb0affaab9ed998f58ef27b96ba92fa" translate="yes" xml:space="preserve">
          <source>The example removes all (key, value) pairs where the key and the value are the same.</source>
          <target state="translated">이 예제에서는 키와 값이 동일한 모든 (키, 값) 쌍을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="5b771d7ad9e9c8791bd12cef2ead96ae69f5e948" translate="yes" xml:space="preserve">
          <source>The example scene here has a Sphere at position &lt;code&gt;(0, 0, 0)&lt;/code&gt; and an AxisHelper object. With the &lt;a href=&quot;qml-qtquick3d-helpers-wasdcontroller&quot;&gt;WasdController&lt;/a&gt; helper one can conveniently navigate the scene.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="22aa706b0e1f6d5a161421b227b746975b41fd0f" translate="yes" xml:space="preserve">
          <source>The example shows a battery level characteristic which updates the central on every value change. The notifications are provided via the &lt;a href=&quot;qlowenergyservice#characteristicChanged&quot;&gt;characteristicChanged&lt;/a&gt;() signal. More details about this mechanism are provided by the &lt;a href=&quot;https://developer.bluetooth.org/gatt/descriptors/Pages/DescriptorViewer.aspx?u=org.bluetooth.descriptor.gatt.client_characteristic_configuration.xml&quot;&gt;Bluetooth Specification&lt;/a&gt;.</source>
          <target state="translated">이 예는 모든 값 변경시 중심을 업데이트하는 배터리 수준 특성을 보여줍니다. 통지가 통해 제공되어 &lt;a href=&quot;qlowenergyservice#characteristicChanged&quot;&gt;characteristicChanged&lt;/a&gt; () 신호. 이 메커니즘에 대한 자세한 내용은 &lt;a href=&quot;https://developer.bluetooth.org/gatt/descriptors/Pages/DescriptorViewer.aspx?u=org.bluetooth.descriptor.gatt.client_characteristic_configuration.xml&quot;&gt;Bluetooth 사양에서&lt;/a&gt; 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="a2acd17a244723bcf7d4e6eb8e826b9edd6a488d" translate="yes" xml:space="preserve">
          <source>The example shows how to retrieve all available filesystems, skipping read-only ones.</source>
          <target state="translated">이 예제는 사용 가능한 모든 파일 시스템을 검색하여 읽기 전용 파일 시스템을 건너 뛰는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="da58a6b66ea20e8730c1cfaa0a25c5be053e5c37" translate="yes" xml:space="preserve">
          <source>The example shows how to use signals and slots to implement the functionality of a calculator widget, and how to use QGridLayout to place child widgets in a grid.</source>
          <target state="translated">이 예제는 신호와 슬롯을 사용하여 계산기 위젯의 기능을 구현하는 방법과 QGridLayout을 사용하여 자식 위젯을 그리드에 배치하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="debbf02e4ddfdb4813ee0988b4587ccc0d6b1c6c" translate="yes" xml:space="preserve">
          <source>The example traverses a list, replacing negative numbers with their absolute values, and eliminating zeroes.</source>
          <target state="translated">이 예제는 목록을 탐색하여 음수를 절대 값으로 바꾸고 0을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="7fb5c20b454aec9bcd86d7ff6fb7f5c45240e709" translate="yes" xml:space="preserve">
          <source>The example traverses a vector, replacing negative numbers with their absolute values, and eliminating zeroes.</source>
          <target state="translated">이 예에서는 벡터를 탐색하여 음수를 절대 값으로 바꾸고 0을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="2cceeaf7c4424d0ab364e4846d40a4aa5741bcbe" translate="yes" xml:space="preserve">
          <source>The example uses &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; to match the first paragraph of an XML document and then &lt;a href=&quot;qxmlserializer&quot;&gt;output the result&lt;/a&gt; to a device as XML.</source>
          <target state="translated">이 예제는 &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; 를 사용 하여 XML 문서의 첫 번째 단락을 일치시킨 다음 XML로 장치에 &lt;a href=&quot;qxmlserializer&quot;&gt;결과&lt;/a&gt; 를 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="c03ff169223daaa4f14aa38d4436678c795e66dc" translate="yes" xml:space="preserve">
          <source>The example uses QXmlQuery to match the first paragraph of an XML document and then &lt;a href=&quot;qxmlserializer&quot;&gt;output the result&lt;/a&gt; to a device as XML.</source>
          <target state="translated">이 예제에서는 QXmlQuery를 사용하여 XML 문서의 첫 번째 단락을 일치시킨 다음 &lt;a href=&quot;qxmlserializer&quot;&gt;결과&lt;/a&gt; 를 장치에 XML로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="8905d57d7e26d7afbb3dc0cb737ab0874c69a9b6" translate="yes" xml:space="preserve">
          <source>The example uses a script that is an ECMAScript module, because it has the &quot;.mjs&quot; extension. It can use import statements to access functionality from other modules and it is run in JavaScript strict mode.</source>
          <target state="translated">이 예는 &quot;.mjs&quot;확장자를 갖기 때문에 ECMAScript 모듈 인 스크립트를 사용합니다. import 문을 사용하여 다른 모듈의 기능에 액세스 할 수 있으며 JavaScript 엄격 모드에서 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="890c681856263f054fd3c6f1de0967df2cab3e42" translate="yes" xml:space="preserve">
          <source>The example will output 1, 2, 3 in that order.</source>
          <target state="translated">이 예는 1, 2, 3을 순서대로 출력합니다.</target>
        </trans-unit>
        <trans-unit id="683ff0c7c0661873021f7367a26cc755d614df35" translate="yes" xml:space="preserve">
          <source>The example will output 3, 2, 1 in that order.</source>
          <target state="translated">이 예는 3, 2, 1을 순서대로 출력합니다.</target>
        </trans-unit>
        <trans-unit id="c0d997cb199a9af4955bf219b99b18709e05f651" translate="yes" xml:space="preserve">
          <source>The examples are packaged with the &lt;a href=&quot;gettingstarted&quot;&gt;Qt installers&lt;/a&gt; and are accessed through Qt Creator. For more information about running examples in Qt Creator, visit the &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-build-example-application.html&quot;&gt;Building and Running an Example&lt;/a&gt; page.</source>
          <target state="translated">예제는 &lt;a href=&quot;gettingstarted&quot;&gt;Qt 설치 프로그램&lt;/a&gt; 과 함께 제공되며 Qt Creator를 통해 액세스 할 수 있습니다. Qt Creator에서 예제를 실행하는 방법에 대한 자세한 내용은 예제 &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-build-example-application.html&quot;&gt;빌드 및 실행&lt;/a&gt; 페이지를 방문 하십시오.</target>
        </trans-unit>
        <trans-unit id="286efee015f31b6b39c9832ec8c9ce6e54ef74b7" translate="yes" xml:space="preserve">
          <source>The examples below show the normal distribution of items along a path compared to a distribution which places 50% of the items along the &lt;a href=&quot;qml-qtquick-pathline&quot;&gt;PathLine&lt;/a&gt; section of the path.</source>
          <target state="translated">아래 예제는 경로의 &lt;a href=&quot;qml-qtquick-pathline&quot;&gt;PathLine&lt;/a&gt; 섹션을 따라 50 %의 항목을 배치하는 분포와 비교하여 경로를 따라 품목의 정규 분포를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="beca088c54139c17ca7bb84f94b4a58688117a06" translate="yes" xml:space="preserve">
          <source>The examples below will show both &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt;-compiled static objects and dynamic source objects. The examples will also show direct connections as well as connections using a &lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;Registry&lt;/a&gt; between nodes.</source>
          <target state="translated">아래 예제는 &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt; 컴파일 된 정적 객체와 동적 소스 객체를 보여줍니다 . 또한 노드 간 &lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;레지스트리&lt;/a&gt; 를 사용한 연결뿐만 아니라 직접 연결도 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9ae266dec3db2a2e58e7d935cc2b842a8dac4027" translate="yes" xml:space="preserve">
          <source>The exception is when &lt;a href=&quot;qxmlstreamreader#error&quot;&gt;error&lt;/a&gt;() returns &lt;a href=&quot;qxmlstreamreader#Error-enum&quot;&gt;PrematureEndOfDocumentError&lt;/a&gt;. This error is reported when the end of an otherwise well-formed chunk of XML is reached, but the chunk doesn't represent a complete XML document. In that case, parsing</source>
          <target state="translated">&lt;a href=&quot;qxmlstreamreader#error&quot;&gt;error&lt;/a&gt; ()가 &lt;a href=&quot;qxmlstreamreader#Error-enum&quot;&gt;PrematureEndOfDocumentError를&lt;/a&gt; 반환 하는 경우는 예외입니다 . 이 오류는 올바르게 구성된 XML 청크 끝에 도달했지만 청크가 완전한 XML 문서를 나타내지 않을 때보고됩니다. 이 경우 파싱</target>
        </trans-unit>
        <trans-unit id="fb3bfbdcb1730e31f0a11b63959356eb56ebc63e" translate="yes" xml:space="preserve">
          <source>The exception status byte offset of the server. &lt;code&gt;quint16&lt;/code&gt;</source>
          <target state="translated">서버의 예외 상태 바이트 오프셋. &lt;code&gt;quint16&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eaba812fa7f09d8e931907794cec497f57e46e34" translate="yes" xml:space="preserve">
          <source>The exceptions are the objects returned by &lt;a href=&quot;qrandomgenerator#global&quot;&gt;QRandomGenerator::global&lt;/a&gt;() and &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;(): those objects are thread-safe and may be used by any thread without external locking. Note that thread-safety does not extend to copying those objects: they should always be used by reference.</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator#global&quot;&gt;QRandomGenerator :: global&lt;/a&gt; () 및 &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator :: system&lt;/a&gt; ()에 의해 리턴 된 오브젝트는 예외입니다 . 해당 오브젝트는 스레드로부터 안전하며 외부 잠금없이 모든 스레드에서 사용할 수 있습니다. 스레드 안전성은 이러한 객체를 복사하는 데까지 확장되지 않으며 항상 참조로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="94e7c7df3a9aae616ea37709fd3ad10b2f3d08dd" translate="yes" xml:space="preserve">
          <source>The exclusive grabber is an object that has chosen to receive all future update events and the release event containing the same point that this event carries.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a9a024dcba130e7c09cc3f7a9cd0db43f7f7b8bb" translate="yes" xml:space="preserve">
          <source>The execution of the &lt;code&gt;check&lt;/code&gt; target may be customized by certain Makefile variables. These variables are:</source>
          <target state="translated">&lt;code&gt;check&lt;/code&gt; 대상 의 실행은 특정 Makefile 변수에 의해 사용자 정의 될 수 있습니다. 이러한 변수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="57d04137eb90a4e604977c52433beb80d8911543" translate="yes" xml:space="preserve">
          <source>The existence of specific drag types can be determined using the &lt;a href=&quot;qml-qtquick-dragevent#hasColor-prop&quot;&gt;hasColor&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-dragevent#hasHtml-prop&quot;&gt;hasHtml&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-dragevent#hasText-prop&quot;&gt;hasText&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-dragevent#hasUrls-prop&quot;&gt;hasUrls&lt;/a&gt; properties.</source>
          <target state="translated">특정 드래그 유형의 존재는 &lt;a href=&quot;qml-qtquick-dragevent#hasColor-prop&quot;&gt;hasColor&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-dragevent#hasHtml-prop&quot;&gt;hasHtml&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-dragevent#hasText-prop&quot;&gt;hasText&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-dragevent#hasUrls-prop&quot;&gt;hasUrls&lt;/a&gt; 속성을 사용하여 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="04ac281a986a85343e1a5374b782d87dbe36d021" translate="yes" xml:space="preserve">
          <source>The existing actions held by a menu can be found with &lt;a href=&quot;qwidget#actions&quot;&gt;actions&lt;/a&gt;().</source>
          <target state="translated">메뉴에서 보유한 기존 작업은 &lt;a href=&quot;qwidget#actions&quot;&gt;작업&lt;/a&gt; () 으로 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a8f14c38669cb2ae397a13ffaed40d2ccb27896f" translate="yes" xml:space="preserve">
          <source>The existing build targets that the custom build target depends on.</source>
          <target state="translated">사용자 정의 빌드 대상이 의존하는 기존 빌드 대상</target>
        </trans-unit>
        <trans-unit id="ae4b0da5e85b97fe52c13fba92d32d45da2cca38" translate="yes" xml:space="preserve">
          <source>The existing handlers for each scheme can be removed with the &lt;a href=&quot;qdesktopservices#unsetUrlHandler&quot;&gt;unsetUrlHandler&lt;/a&gt;() function. This returns the handling behavior for the given scheme to the default behavior.</source>
          <target state="translated">&lt;a href=&quot;qdesktopservices#unsetUrlHandler&quot;&gt;unsetUrlHandler&lt;/a&gt; () 함수를 사용하여 각 체계에 대한 기존 처리기를 제거 할 수 있습니다 . 지정된 스키마에 대한 처리 동작을 기본 동작으로 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="2550353120c1ecadafe129a43c57242844e8178d" translate="yes" xml:space="preserve">
          <source>The exit code of the automated test will be ignored. Only relevant if &lt;code&gt;testcase&lt;/code&gt; is also set.</source>
          <target state="translated">자동 테스트의 종료 코드는 무시됩니다. &lt;code&gt;testcase&lt;/code&gt; 가 설정된 경우에만 해당됩니다 .</target>
        </trans-unit>
        <trans-unit id="3d909f1f3fd0f968529698df55a378b5f15ceb96" translate="yes" xml:space="preserve">
          <source>The exit code of the test will be ignored during &lt;code&gt;make check&lt;/code&gt;.</source>
          <target state="translated">테스트의 종료 코드는 &lt;code&gt;make check&lt;/code&gt; 동안 무시됩니다 .</target>
        </trans-unit>
        <trans-unit id="d6c023bf7d6876aa19d8bb732e011dab401a0e81" translate="yes" xml:space="preserve">
          <source>The expected value range for the probeHorizon property is between 0.0 and 1.0. Any value outside of this range will be clamped to the expected range.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5a3924108fd29746b7c8322f2fbe53f1c1f3b240" translate="yes" xml:space="preserve">
          <source>The experimental Qt Labs Calendar module provides a set of types that can be used to build calendars in Qt Quick. The module was introduced in Qt 5.7.</source>
          <target state="translated">실험용 Qt Labs 캘린더 모듈은 Qt Quick에서 캘린더를 작성하는 데 사용할 수있는 일련의 유형을 제공합니다. 이 모듈은 Qt 5.7에 도입되었습니다.</target>
        </trans-unit>
        <trans-unit id="6bc36f91d9c0a825b2b82dc87c3dd2ed6aa33300" translate="yes" xml:space="preserve">
          <source>The experimental Qt Labs Platform module provides QML types for native platform extensions. The module was introduced in Qt 5.8.</source>
          <target state="translated">실험적인 Qt Labs 플랫폼 모듈은 기본 플랫폼 확장을위한 QML 유형을 제공합니다. 이 모듈은 Qt 5.8에서 도입되었습니다.</target>
        </trans-unit>
        <trans-unit id="aa77b5e94e1a114f256f49f4e01d63942c38f275" translate="yes" xml:space="preserve">
          <source>The experimental Qt Labs modules use import version 1.0.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6c41ce5d9e5bc759540fad7876eec9a05f6705bb" translate="yes" xml:space="preserve">
          <source>The expiration date corresponds to the parameters of the &quot;expires&quot; entry in the cookie string.</source>
          <target state="translated">만료 날짜는 쿠키 문자열에서 &quot;만료&quot;항목의 매개 변수에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="c8ff44f2e7d87b2392f1b5354c1cb9c8bbe86492" translate="yes" xml:space="preserve">
          <source>The explicit state is also symmetric.</source>
          <target state="translated">명시 적 상태도 대칭입니다.</target>
        </trans-unit>
        <trans-unit id="68ba39a3b9c7ebcc711fa1193e08616a564f1d8e" translate="yes" xml:space="preserve">
          <source>The exporter accepts the &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; returned by the &lt;a href=&quot;qgeojson#importing-geojson&quot;&gt;importer&lt;/a&gt;, and returns a JSON document. The exporter is complementary to the importer because it executes the inverse action.</source>
          <target state="translated">수출은 받아 &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList가&lt;/a&gt; 에 의해 반환 된 &lt;a href=&quot;qgeojson#importing-geojson&quot;&gt;수입&lt;/a&gt; 및 JSON 문서를 반환합니다. 수출자는 역 행동을 수행하기 때문에 수입업자를 보완합니다.</target>
        </trans-unit>
        <trans-unit id="ccd7ad1492e3ff151894efb5dcee06599d9cd187" translate="yes" xml:space="preserve">
          <source>The expose event (</source>
          <target state="translated">노출 이벤트 (</target>
        </trans-unit>
        <trans-unit id="7be7f6b1536dfc8b655f6c0ccbdd6ebd7441191b" translate="yes" xml:space="preserve">
          <source>The exposure bias. The unit is the APEX (Additive System of Photographic Exposure) setting.</source>
          <target state="translated">노출 편향. 단위는 APEX (Additive System of Photographic Exposure) 설정입니다.</target>
        </trans-unit>
        <trans-unit id="d7e24f79eded79cd2b6f31b29775b3c436b79ab5" translate="yes" xml:space="preserve">
          <source>The expressions that don't have leading zeroes (d, M, h, m, s, z) will be greedy. This means that they will use two digits (or three, for z) even if this will put them outside the range and/or leave too few digits for other sections.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="efe24ea9cd9b41a675c9d4b47d0c845a29739407" translate="yes" xml:space="preserve">
          <source>The extended RGB color model, also known as the scRGB color space, is the same the RGB color model except it allows values under 0.0, and over 1.0. This makes it possible to represent colors that would otherwise be outside the range of the RGB colorspace but still use the same values for colors inside the RGB colorspace.</source>
          <target state="translated">scRGB 색상 공간이라고도하는 확장 RGB 색상 모델은 0.0 미만 및 1.0 이상의 값을 허용한다는 점을 제외하면 RGB 색상 모델과 동일합니다. 이렇게하면 RGB 색상 공간의 범위를 벗어나지 만 RGB 색상 공간 내부의 색상에 대해 동일한 값을 사용하는 색상을 표현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be490840d35de4ad82644243e076467fdc03daee" translate="yes" xml:space="preserve">
          <source>The extended attributes and rich content of places are not permitted to be saved. For QML this is related to &lt;a href=&quot;qml-qtlocation-place#extendedAttributes-prop&quot;&gt;Place::extendedAttributes&lt;/a&gt;, &lt;a href=&quot;qml-qtlocation-imagemodel&quot;&gt;ImageModel&lt;/a&gt;, &lt;a href=&quot;qml-qtlocation-reviewmodel&quot;&gt;ReviewModel&lt;/a&gt;, and &lt;a href=&quot;qml-qtlocation-editorialmodel&quot;&gt;EditorialModel&lt;/a&gt;. For C++ this relates to &lt;a href=&quot;qplace#extendedAttribute&quot;&gt;QPlace::extendedAttribute&lt;/a&gt;(), &lt;a href=&quot;qplace#content&quot;&gt;QPlace::content&lt;/a&gt;() and &lt;a href=&quot;qplacemanager#getPlaceContent&quot;&gt;QPlaceManager::getPlaceContent&lt;/a&gt;().</source>
          <target state="translated">확장 된 속성 및 장소의 풍부한 콘텐츠는 저장할 수 없습니다. QML의 경우 이는 &lt;a href=&quot;qml-qtlocation-place#extendedAttributes-prop&quot;&gt;Place :: extendedAttributes&lt;/a&gt; , &lt;a href=&quot;qml-qtlocation-imagemodel&quot;&gt;ImageModel&lt;/a&gt; , &lt;a href=&quot;qml-qtlocation-reviewmodel&quot;&gt;ReviewModel&lt;/a&gt; 및 &lt;a href=&quot;qml-qtlocation-editorialmodel&quot;&gt;EditorialModel&lt;/a&gt; 과 관련이 있습니다 . C ++의 경우 이는 &lt;a href=&quot;qplace#extendedAttribute&quot;&gt;QPlace :: extendedAttribute&lt;/a&gt; (), &lt;a href=&quot;qplace#content&quot;&gt;QPlace :: content&lt;/a&gt; () 및 &lt;a href=&quot;qplacemanager#getPlaceContent&quot;&gt;QPlaceManager :: getPlaceContent&lt;/a&gt; ()와 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="27487702ff25cf3cc3efb1a52dac1f2b011ac1d2" translate="yes" xml:space="preserve">
          <source>The extensions are given as standard wildcard expressions. You can add a file extension to the filter using '+='. For example:</source>
          <target state="translated">확장은 표준 와일드 카드 표현식으로 제공됩니다. '+ ='를 사용하여 파일 확장자를 필터에 추가 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="419d8aaff850915b38bda9d98e2bad3496ad5b99" translate="yes" xml:space="preserve">
          <source>The extensions are installed on the given</source>
          <target state="translated">확장은 주어진에 설치됩니다</target>
        </trans-unit>
        <trans-unit id="a20d0533162d80710437020c3ae20cbf4942e69c" translate="yes" xml:space="preserve">
          <source>The extensions currently supported, and the structure of the value returned are as follows:</source>
          <target state="translated">현재 지원되는 확장 및 반환되는 값의 구조는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="11a1ed4512f5fdd02f81ea48df8a40f2f4dab4f0" translate="yes" xml:space="preserve">
          <source>The external appearance of this device. The values are composed of a category (10-bits) and sub-categories (6-bits).</source>
          <target state="translated">이 장치의 외관입니다. 값은 범주 (10 비트)와 하위 범주 (6 비트)로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="a5fcf64ea9a5a3cf41af649502541b94058d3ca6" translate="yes" xml:space="preserve">
          <source>The extra &lt;code&gt;const&lt;/code&gt; makes the entire definition read-only, which is slightly more efficient (e.g., when the code is in a shared library) and able to be stored in ROM with the application.</source>
          <target state="translated">여분의 &lt;code&gt;const&lt;/code&gt; 는 전체 정의를 읽기 전용으로 만들어서 약간 더 효율적이며 (예 : 코드가 공유 라이브러리에있을 때) 응용 프로그램과 함께 ROM에 저장 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b03091ddd7401af2a97ecd350684494ead0c8be" translate="yes" xml:space="preserve">
          <source>The extra &lt;code&gt;const&lt;/code&gt; makes the entire definition read-only, which is slightly more efficient (for example, when the code is in a shared library) and ROMable when the application is to be stored in ROM.</source>
          <target state="translated">여분의 &lt;code&gt;const&lt;/code&gt; 는 전체 정의를 읽기 전용으로 만들어 응용 프로그램이 ROM에 저장 될 때 약간 더 효율적입니다 (예 : 코드가 공유 라이브러리에있을 때).</target>
        </trans-unit>
        <trans-unit id="e94fa010245c44408e32e290c5c7d1a4d0eab9bd" translate="yes" xml:space="preserve">
          <source>The extra data required to describe a curve in a CurveToElement element.</source>
          <target state="translated">CurveToElement 요소에서 곡선을 설명하는 데 필요한 추가 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="e00f9b6a4a06d496b8d33601ca2053e8b7f0cd18" translate="yes" xml:space="preserve">
          <source>The extra information takes the form of a</source>
          <target state="translated">추가 정보는</target>
        </trans-unit>
        <trans-unit id="ec8ddacd4a5656a7ba084394b938fd2c9673edbf" translate="yes" xml:space="preserve">
          <source>The factory function should return a null node.</source>
          <target state="translated">팩토리 함수는 널 노드를 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="e1409fe9edcb06844ff54c55c17ee1d0f9c3c0b2" translate="yes" xml:space="preserve">
          <source>The factory must be set before executing the engine.</source>
          <target state="translated">엔진을 실행하기 전에 공장을 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="7320f8a548fafc3037a14c84ca46b1649ddd5619" translate="yes" xml:space="preserve">
          <source>The factory that produces accessibility interfaces for QObjects is a function of type &lt;a href=&quot;qaccessible#InterfaceFactory-typedef&quot;&gt;QAccessible::InterfaceFactory&lt;/a&gt;. It is possible to have several factories installed. The last factory installed will be the first to be asked for interfaces. &lt;a href=&quot;qaccessible#queryAccessibleInterface&quot;&gt;queryAccessibleInterface()&lt;/a&gt; uses the factories to create interfaces for &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;s. Normally, you need not be concerned about factories because you can implement plugins that produce interfaces. We will give examples of both approaches later.</source>
          <target state="translated">QObject에 대한 접근성 인터페이스를 생성하는 팩토리는 &lt;a href=&quot;qaccessible#InterfaceFactory-typedef&quot;&gt;QAccessible :: InterfaceFactory&lt;/a&gt; 유형의 함수입니다 . 여러 개의 공장을 설치할 수 있습니다. 마지막으로 설치된 공장 출하시 가장 먼저 인터페이스를 요청합니다. &lt;a href=&quot;qaccessible#queryAccessibleInterface&quot;&gt;queryAccessibleInterface ()&lt;/a&gt; 는 팩토리를 사용하여 &lt;a href=&quot;qobject&quot;&gt;QObject에&lt;/a&gt; 대한 인터페이스를 작성 합니다 . 일반적으로 인터페이스를 생성하는 플러그인을 구현할 수 있으므로 팩토리에 대해 걱정할 필요가 없습니다. 우리는 나중에 두 가지 접근법의 예를 제공 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="081dde1c924d6fd751e45b13911caed844eee9bd" translate="yes" xml:space="preserve">
          <source>The failures will be reported as warning messages in the &lt;code&gt;qt.modeltest&lt;/code&gt; logging category.</source>
          <target state="translated">실패는 &lt;code&gt;qt.modeltest&lt;/code&gt; 로깅 범주 에서 경고 메시지로보고됩니다 .</target>
        </trans-unit>
        <trans-unit id="de7784fbee2f1ce0759143b6c45de08a63fe3909" translate="yes" xml:space="preserve">
          <source>The failures will be reported through &lt;a href=&quot;https://doc.qt.io/qt-5.13/qttest-module.html&quot;&gt;QtTest&lt;/a&gt;'s logging mechanism.</source>
          <target state="translated">실패는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qttest-module.html&quot;&gt;QtTest&lt;/a&gt; 의 로깅 메커니즘을 통해보고됩니다 .</target>
        </trans-unit>
        <trans-unit id="ae83f930a32fcda281b0b0049ef449f512d5d125" translate="yes" xml:space="preserve">
          <source>The failures will be reported through &lt;a href=&quot;https://doc.qt.io/qt-5.15/qttest-module.html&quot;&gt;QtTest&lt;/a&gt;'s logging mechanism.</source>
          <target state="translated">실패는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qttest-module.html&quot;&gt;QtTest&lt;/a&gt; 의 로깅 메커니즘을 통해보고됩니다 .</target>
        </trans-unit>
        <trans-unit id="07e261f875c5df8051b729a15939fbad7bb0113b" translate="yes" xml:space="preserve">
          <source>The failures will be reported through &lt;a href=&quot;https://doc.qt.io/qt-6.0/qttest-module.html&quot;&gt;QtTest&lt;/a&gt;'s logging mechanism.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="dd3743ec3b198f6c96268e2bc565e3adb016a773" translate="yes" xml:space="preserve">
          <source>The fallback style can be also specified by setting the &lt;code&gt;QT_QUICK_CONTROLS_FALLBACK_STYLE&lt;/code&gt;&lt;a href=&quot;qtquickcontrols2-environment&quot;&gt;environment variable&lt;/a&gt;.</source>
          <target state="translated">대체 스타일은 &lt;code&gt;QT_QUICK_CONTROLS_FALLBACK_STYLE&lt;/code&gt; &lt;a href=&quot;qtquickcontrols2-environment&quot;&gt;환경 변수를&lt;/a&gt; 설정하여 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7af16c0965c7ddf13399c8519438b0c6223b25f1" translate="yes" xml:space="preserve">
          <source>The fallback style can be also specified by setting the &lt;code&gt;QT_QUICK_CONTROLS_FALLBACK_STYLE&lt;/code&gt;&lt;a href=&quot;qtquickcontrols2-environment#&quot;&gt;environment variable&lt;/a&gt;.</source>
          <target state="translated">대체 스타일은 &lt;code&gt;QT_QUICK_CONTROLS_FALLBACK_STYLE&lt;/code&gt; &lt;a href=&quot;qtquickcontrols2-environment#&quot;&gt;환경 변수를&lt;/a&gt; 설정하여 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c695b98c8ef6133f47df0a1c6d5d3c1f21b96724" translate="yes" xml:space="preserve">
          <source>The family name is case insensitive and may optionally include a foundry name, e.g. &quot;Helvetica [Cronyx]&quot;. If the family is available from more than one foundry and the foundry isn't specified, an arbitrary foundry is chosen. If the family isn't available a family will be set using the font matching algorithm.</source>
          <target state="translated">성은 대소 문자를 구분하지 않으며 선택적으로 파운드리 이름 (예 : &quot;Helvetica [Cronyx]&quot;)을 포함 할 수 있습니다. 패밀리가 둘 이상의 파운드리에서 사용 가능하고 파운드리가 지정되지 않은 경우 임의의 파운드리가 선택됩니다. 제품군을 사용할 수없는 경우 글꼴 일치 알고리즘을 사용하여 제품군을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7c9de3bad49fa50ba1a1193d09c6c4715c9c6430" translate="yes" xml:space="preserve">
          <source>The family name of the font that has been resolved for the current font and &lt;a href=&quot;qml-qtquick-text#fontSizeMode-prop&quot;&gt;fontSizeMode&lt;/a&gt;.</source>
          <target state="translated">현재 글꼴 및 &lt;a href=&quot;qml-qtquick-text#fontSizeMode-prop&quot;&gt;fontSizeMode에&lt;/a&gt; 대해 해결 된 글꼴의 제품군 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="ed817248c7744f6a7e612abc2da0de1d37fd08d4" translate="yes" xml:space="preserve">
          <source>The feature file needs to be injected into each subproject, for example by .qmake.conf:</source>
          <target state="translated">기능 파일은 .qmake.conf와 같이 각 서브 프로젝트에 주입되어야합니다.</target>
        </trans-unit>
        <trans-unit id="89367d7a675cd8fa3aea31a7b21fd216582687e5" translate="yes" xml:space="preserve">
          <source>The feature is not supported.</source>
          <target state="translated">이 기능은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="be0c38b405788b555c74fb6ac649ce0d398fa092" translate="yes" xml:space="preserve">
          <source>The feature is probably supported.</source>
          <target state="translated">이 기능은 아마도 지원 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="e3529dc1e8cbfe0aacdb5abcc186c70c7d738bd7" translate="yes" xml:space="preserve">
          <source>The feature may be supported.</source>
          <target state="translated">기능이 지원 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d632d7204272182e505ccac2ca91680a91af1aa5" translate="yes" xml:space="preserve">
          <source>The features common to all sensor types are:</source>
          <target state="translated">모든 센서 유형에 공통적 인 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c8c07ebb9de2053f2eaf44333421590b0ae3a6cb" translate="yes" xml:space="preserve">
          <source>The features of &lt;a href=&quot;qaccelerometer&quot;&gt;QAccelerometer&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;qaccelerometer&quot;&gt;QAccelerometer&lt;/a&gt; 의 기능은 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e5083f6590c34035d84c3c061cc6b51d55fe9308" translate="yes" xml:space="preserve">
          <source>The features of &lt;a href=&quot;qlightsensor&quot;&gt;QLightSensor&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;qlightsensor&quot;&gt;QLightSensor&lt;/a&gt; 의 기능은 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9b71dfd6fbe33473f441a8e639af0bc10a3daf15" translate="yes" xml:space="preserve">
          <source>The features of &lt;a href=&quot;qmagnetometer&quot;&gt;QMagnetometer&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;qmagnetometer&quot;&gt;QMagnetometer&lt;/a&gt; 의 기능은 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d1fa64e038a2d67bf78d6b36c840ab819aae1517" translate="yes" xml:space="preserve">
          <source>The features of &lt;a href=&quot;qpressuresensor&quot;&gt;QPressureSensor&lt;/a&gt; are:</source>
          <target state="translated">&lt;a href=&quot;qpressuresensor&quot;&gt;QPressureSensor&lt;/a&gt; 의 기능은 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cb8dddff1869e7da8628f8f12e7a7b4f65b467dd" translate="yes" xml:space="preserve">
          <source>The features of all orientable sensors are:</source>
          <target state="translated">모든 방향 센서의 특징은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="668b59d8088c757547347d4f29fef8529894a5c6" translate="yes" xml:space="preserve">
          <source>The fetch macro creates a local variable named</source>
          <target state="translated">가져 오기 매크로는 이름이 지정된 로컬 변수를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="ca2c7b0e49784c7c955679dcfbf3f777dccbf8a2" translate="yes" xml:space="preserve">
          <source>The fewer elements that are in a delegate, the faster they can be created, and thus the faster the view can be scrolled.</source>
          <target state="translated">델리게이트에있는 요소가 적을수록 더 빠르게 만들 수 있으므로 뷰를 더 빠르게 스크롤 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dc70528f0bb76c7e0db594b3efe04fb6e8aab212" translate="yes" xml:space="preserve">
          <source>The fibonacci function is run whenever the &lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;TapHandler&lt;/a&gt; emits a &lt;code&gt;tapped&lt;/code&gt; signal.</source>
          <target state="translated">피보나치 함수는 &lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;TapHandler&lt;/a&gt; 가 &lt;code&gt;tapped&lt;/code&gt; 신호를 방출 할 때마다 실행 됩니다.</target>
        </trans-unit>
        <trans-unit id="93715eb9d91478ab6a8d62b940cdf02e19c10b9c" translate="yes" xml:space="preserve">
          <source>The field layouts for the DCE versions listed in the table above are specified in the &lt;a href=&quot;http://www.ietf.org/rfc/rfc4122.txt&quot;&gt;Network Working Group UUID Specification&lt;/a&gt;.</source>
          <target state="translated">위 표에 나열된 DCE 버전의 필드 레이아웃은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc4122.txt&quot;&gt;네트워크 작업 그룹 UUID 사양에&lt;/a&gt; 지정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a5ace88dd35cb522e512b8e4598020831d059d4" translate="yes" xml:space="preserve">
          <source>The field must be specified when inserting records.</source>
          <target state="translated">레코드를 삽입 할 때 필드를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="c2ded0882fd026a5c419d0941f9c37e913903bff" translate="yes" xml:space="preserve">
          <source>The fields are numbered from left to right using the text of the &lt;code&gt;SELECT&lt;/code&gt; statement, e.g. in</source>
          <target state="translated">필드는 &lt;code&gt;SELECT&lt;/code&gt; 문의 텍스트를 사용하여 왼쪽에서 오른쪽으로 번호가 매겨집니다 ( 예 :</target>
        </trans-unit>
        <trans-unit id="a705dae1d4aada45995947a3d6b26ee8a8838e3f" translate="yes" xml:space="preserve">
          <source>The fields doesn't have to be specified when inserting records.</source>
          <target state="translated">레코드를 삽입 할 때 필드를 지정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="9668959dce390adf51ef8bf9cbf2e7037c112711" translate="yes" xml:space="preserve">
          <source>The fields never grow beyond their &lt;a href=&quot;qwidgetitem#sizeHint&quot;&gt;effective size hint&lt;/a&gt;. This is the default for QMacStyle.</source>
          <target state="translated">필드는 &lt;a href=&quot;qwidgetitem#sizeHint&quot;&gt;효과적인 크기 힌트를&lt;/a&gt; 넘어 성장하지 않습니다 . 이것이 QMacStyle의 기본값입니다.</target>
        </trans-unit>
        <trans-unit id="413827f9146e09327e10578cb4a3a901cd0b3e7a" translate="yes" xml:space="preserve">
          <source>The fields of any page are accessible from any other page. For example:</source>
          <target state="translated">모든 페이지의 필드는 다른 페이지에서 액세스 할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="20171732ed95203eeee69c2baaa55fa1987b2748" translate="yes" xml:space="preserve">
          <source>The figure shows the exclusive or of two elliptical regions.</source>
          <target state="translated">그림은 배타적이거나 두 개의 타원형 영역을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e280c08422a6e6ab92a49e27d2b7ae96b7292601" translate="yes" xml:space="preserve">
          <source>The figure shows the intersection of two elliptical regions.</source>
          <target state="translated">그림은 두 타원형 영역의 교차점을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="74d7e9d212d652f86f56bcc0427b413a1ce2ed03" translate="yes" xml:space="preserve">
          <source>The figure shows the result when the ellipse on the right is subtracted from the ellipse on the left (&lt;code&gt;left - right&lt;/code&gt;).</source>
          <target state="translated">그림은 오른쪽의 타원을 왼쪽의 타원에서 빼면 ( &lt;code&gt;left - right&lt;/code&gt; ) 결과를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="24f0e0195aa6d69b7d8d97f712ac81cd5cdb7e9d" translate="yes" xml:space="preserve">
          <source>The figure shows the union of two elliptical regions.</source>
          <target state="translated">그림은 두 개의 타원형 영역이 합쳐진 모습입니다.</target>
        </trans-unit>
        <trans-unit id="04fbc7508d5d457aedc840547581d13fb785d13c" translate="yes" xml:space="preserve">
          <source>The file</source>
          <target state="translated">파일</target>
        </trans-unit>
        <trans-unit id="87b8bb0d506174c10132f9b154047e227fadc07a" translate="yes" xml:space="preserve">
          <source>The file can either be a local file or in a &lt;a href=&quot;resources&quot;&gt;resource&lt;/a&gt;.</source>
          <target state="translated">파일은 로컬 파일이거나 &lt;a href=&quot;resources&quot;&gt;리소스&lt;/a&gt; 에있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b7f92d71bca12ea4eb379423da9a3fff5e5e13b1" translate="yes" xml:space="preserve">
          <source>The file cannot be written locally, due to access restrictions.</source>
          <target state="translated">액세스 제한으로 인해 파일을 로컬로 쓸 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="17a29bd38d8731d1238d1f090aa4db91cfeee762" translate="yes" xml:space="preserve">
          <source>The file content is used to look for a match</source>
          <target state="translated">파일 내용은 일치하는 것을 찾는 데 사용됩니다</target>
        </trans-unit>
        <trans-unit id="289d08fb6086ce7f84fd8608ebb75393e410ea13" translate="yes" xml:space="preserve">
          <source>The file could not be accessed.</source>
          <target state="translated">파일에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c6781003b0d485483594ddf4be6950de9167e23a" translate="yes" xml:space="preserve">
          <source>The file could not be copied.</source>
          <target state="translated">파일을 복사 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ace801f7ac43821b215005cc7963f51a41366f3a" translate="yes" xml:space="preserve">
          <source>The file could not be opened.</source>
          <target state="translated">파일을 열 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="97a70e37571728ba37e51a44c9f1629967feaf10" translate="yes" xml:space="preserve">
          <source>The file could not be removed.</source>
          <target state="translated">파일을 제거 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="46323538908f56bcc6322b88467249ea5c0e32be" translate="yes" xml:space="preserve">
          <source>The file could not be renamed.</source>
          <target state="translated">파일 이름을 바꿀 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ffa64cc5e00ef6a4c9a9121bd85ac47c080c00c3" translate="yes" xml:space="preserve">
          <source>The file could not be resized.</source>
          <target state="translated">파일 크기를 조정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6de0e789e4869da84fda442f9d9a569e7760bf41" translate="yes" xml:space="preserve">
          <source>The file dialog has two view modes: &lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;List&lt;/a&gt; and &lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;Detail&lt;/a&gt;. &lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;List&lt;/a&gt; presents the contents of the current directory as a list of file and directory names. &lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;Detail&lt;/a&gt; also displays a list of file and directory names, but provides additional information alongside each name, such as the file size and modification date. Set the mode with &lt;a href=&quot;qfiledialog#viewMode-prop&quot;&gt;setViewMode&lt;/a&gt;():</source>
          <target state="translated">파일 대화 상자에는 &lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;List&lt;/a&gt; 및 &lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;Detail의&lt;/a&gt; 두 가지보기 모드가 있습니다 . &lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;목록&lt;/a&gt; 은 현재 디렉토리의 내용을 파일 및 디렉토리 이름 목록으로 표시합니다. &lt;a href=&quot;qfiledialog#ViewMode-enum&quot;&gt;Detail&lt;/a&gt; 은 또한 파일 및 디렉토리 이름 목록을 표시하지만 파일 크기 및 수정 날짜와 같은 각 이름과 함께 추가 정보를 제공합니다. &lt;a href=&quot;qfiledialog#viewMode-prop&quot;&gt;setViewMode&lt;/a&gt; ()로 모드를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb319ead782636ae34c098a5e5c515388203236f" translate="yes" xml:space="preserve">
          <source>The file dialog will then look like this:</source>
          <target state="translated">파일 대화 상자는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8f8d5852011cc348fc09a4dd8d06984e8b30e934" translate="yes" xml:space="preserve">
          <source>The file dialog's working directory will be set to</source>
          <target state="translated">파일 대화 상자의 작업 디렉토리가</target>
        </trans-unit>
        <trans-unit id="dea6ec74a83b82907426f38c113761d189da5d6d" translate="yes" xml:space="preserve">
          <source>The file format is XML-based. For a better understanding of the format we will discuss the following example:</source>
          <target state="translated">파일 형식은 XML 기반입니다. 형식에 대한 이해를 돕기 위해 다음 예를 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="e745a0ac2ccd6f20c4ae3226590b48293ba4e830" translate="yes" xml:space="preserve">
          <source>The file format support is provided transparently, through plugins for Qt's image I/O system. As such, this module provides no API of its own. Instead, the functionality is accessed in the same way as other image I/O in Qt: through &lt;a href=&quot;qimage#load&quot;&gt;QImage::load&lt;/a&gt;() and &lt;a href=&quot;qimage#save&quot;&gt;QImage::save&lt;/a&gt;(). Or, for more detailed control, through &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; and &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter&lt;/a&gt;.</source>
          <target state="translated">파일 형식 지원은 Qt의 이미지 I / O 시스템 용 플러그인을 통해 투명하게 제공됩니다. 따라서이 모듈은 자체 API를 제공하지 않습니다. 대신 Qt :의 &lt;a href=&quot;qimage#load&quot;&gt;QImage :: load&lt;/a&gt; () 및 &lt;a href=&quot;qimage#save&quot;&gt;QImage :: save&lt;/a&gt; ()를 통해 다른 이미지 I / O와 동일한 방식으로 기능에 액세스합니다 . 또는 &lt;a href=&quot;qimagereader&quot;&gt;QImageReader&lt;/a&gt; 및 &lt;a href=&quot;qimagewriter&quot;&gt;QImageWriter를&lt;/a&gt; 통해보다 자세한 제어가 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="ae6e6d3aa5638b389d0f06ddd264a5ab4a87f94f" translate="yes" xml:space="preserve">
          <source>The file formats accepted by the sprite engine are the same as the file formats accepted by other QML types, such as &lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt;. In order to animate the image, however, the sprite engine requires the image file to contain all of the frames of the animation. They should be arranged in a contiguous line, which may wrap from the right edge of the file to a lower row starting from the left edge of the file (and which is placed directly below the previous row).</source>
          <target state="translated">스프라이트 엔진에서 허용되는 파일 형식은 &lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt; 와 같은 다른 QML 유형에서 허용되는 파일 형식과 동일합니다 . 그러나 이미지에 애니메이션을 적용하려면 스프라이트 엔진에 이미지 파일에 애니메이션의 모든 프레임이 포함되어 있어야합니다. 파일의 오른쪽 가장자리에서 파일의 왼쪽 가장자리부터 시작하여 아래쪽 행까지 줄 바꿈 (이전 행 바로 아래에 배치) 할 수있는 연속 선으로 배열해야합니다.</target>
        </trans-unit>
        <trans-unit id="c47796e6a5bcf6195c81d42bbec97b436cab59d3" translate="yes" xml:space="preserve">
          <source>The file handle passed into &lt;a href=&quot;qiodevice#open&quot;&gt;open&lt;/a&gt;() should be closed by &lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;(), the default behavior is that close just flushes the file and the application is responsible for closing the file handle. When opening a file by name, this flag is ignored as Qt always owns the file handle and must close it.</source>
          <target state="translated">&lt;a href=&quot;qiodevice#open&quot;&gt;open&lt;/a&gt; () 으로 전달 된 파일 핸들은 &lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt; () 로 닫아야 합니다. 기본 동작은 close가 파일을 플러시하고 응용 프로그램이 파일 핸들을 닫는 것입니다. 이름으로 파일을 열 때 Qt는 항상 파일 핸들을 소유하고 닫아야하기 때문에이 플래그는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="89ebe3a5abf90e1f1d9b0397f1aafe659fdd15fb" translate="yes" xml:space="preserve">
          <source>The file icon.</source>
          <target state="translated">파일 아이콘.</target>
        </trans-unit>
        <trans-unit id="afa85386d788fb0d7fff3b7e5741d5a921e6f033" translate="yes" xml:space="preserve">
          <source>The file info icon in a file dialog.</source>
          <target state="translated">파일 대화 상자의 파일 정보 아이콘</target>
        </trans-unit>
        <trans-unit id="b81c9975252c0e516aa5ffbb352e8f60c7c1ec06" translate="yes" xml:space="preserve">
          <source>The file is closed before it is removed.</source>
          <target state="translated">파일은 제거되기 전에 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="982cfb714bac8dc9c048460ce089c9a0dbbb9a93" translate="yes" xml:space="preserve">
          <source>The file is closed before it is renamed.</source>
          <target state="translated">파일 이름이 바뀌기 전에 파일이 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="8c9565d7547b0c97710ee573412b8bb14e389d8a" translate="yes" xml:space="preserve">
          <source>The file is executable by anyone.</source>
          <target state="translated">파일은 누구나 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0aa41dc5fbccda08ab119783bd9257a6181e13b9" translate="yes" xml:space="preserve">
          <source>The file is executable by the group.</source>
          <target state="translated">파일은 그룹에 의해 실행 가능합니다.</target>
        </trans-unit>
        <trans-unit id="443038a845cf12682c8c5e5da53ca0b0956371f6" translate="yes" xml:space="preserve">
          <source>The file is executable by the owner of the file.</source>
          <target state="translated">파일 소유자가 파일을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f53084bc2769836579a360e203e609b9910bfcfd" translate="yes" xml:space="preserve">
          <source>The file is executable by the user.</source>
          <target state="translated">파일은 사용자가 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d39c65ac65e71fa0090e698b565d4cad4cbaea3f" translate="yes" xml:space="preserve">
          <source>The file is expected to contain a serialized QRhiShader.</source>
          <target state="translated">파일은 직렬화 된 QRhiShader를 포함 할 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="67b2f788912499ba7b6fb389854817bee3fb6210" translate="yes" xml:space="preserve">
          <source>The file is expected to contain a serialized QShader.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="516c92d23c55c12c9399e3c1f1da3c104cbdbad9" translate="yes" xml:space="preserve">
          <source>The file is infected with a virus.</source>
          <target state="translated">파일이 바이러스에 감염되었습니다.</target>
        </trans-unit>
        <trans-unit id="b0245d29a06621f24fcb73bbd611e934b6311355" translate="yes" xml:space="preserve">
          <source>The file is opened with &lt;a href=&quot;qfile#open&quot;&gt;open&lt;/a&gt;(), closed with &lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;(), and flushed with &lt;a href=&quot;qfiledevice#flush&quot;&gt;flush&lt;/a&gt;(). Data is usually read and written using &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; or &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;, but you can also call the &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;-inherited functions &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;(), &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;(), &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;(), &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;(). &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; also inherits &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;(), &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;(), and &lt;a href=&quot;qiodevice#ungetChar&quot;&gt;ungetChar&lt;/a&gt;(), which work one character at a time.</source>
          <target state="translated">파일은 &lt;a href=&quot;qfile#open&quot;&gt;열기&lt;/a&gt; () 로 열리고 &lt;a href=&quot;qfiledevice#close&quot;&gt;닫기&lt;/a&gt; ()로 닫히고 &lt;a href=&quot;qfiledevice#flush&quot;&gt;플러시&lt;/a&gt; () 로 플러시 됩니다. 데이터는 일반적으로 &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; 또는 &lt;a href=&quot;qtextstream&quot;&gt;QTextStream을&lt;/a&gt; 사용하여 읽고 쓰지만 &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; 상속 함수 &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt; (), &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt; (), &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt; (), &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt; ()를 호출 할 수도 있습니다 . &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; 은 또한 한 번에 한 문자 씩 작동하는 &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt; (), &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt; () 및 &lt;a href=&quot;qiodevice#ungetChar&quot;&gt;ungetChar&lt;/a&gt; ()를 상속 합니다.</target>
        </trans-unit>
        <trans-unit id="a98035dfe527362ccc75d55e5e4e186d578a4ffe" translate="yes" xml:space="preserve">
          <source>The file is opened with &lt;a href=&quot;qfile#open&quot;&gt;open&lt;/a&gt;(), closed with &lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;(), and flushed with &lt;a href=&quot;qfiledevice#flush&quot;&gt;flush&lt;/a&gt;(). Data is usually read and written using &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; or &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;, but you can also call the &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;-inherited functions &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;(), &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;(), &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;(), &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;(). QFile also inherits &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt;(), &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;(), and &lt;a href=&quot;qiodevice#ungetChar&quot;&gt;ungetChar&lt;/a&gt;(), which work one character at a time.</source>
          <target state="translated">파일은 &lt;a href=&quot;qfile#open&quot;&gt;열기&lt;/a&gt; () 로 열고 &lt;a href=&quot;qfiledevice#close&quot;&gt;닫기&lt;/a&gt; () 로 닫고 &lt;a href=&quot;qfiledevice#flush&quot;&gt;플러시&lt;/a&gt; () 로 플러시 합니다. 데이터는 일반적으로 &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; 또는 &lt;a href=&quot;qtextstream&quot;&gt;QTextStream을&lt;/a&gt; 사용하여 읽고 쓰지만 &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; 상속 함수 &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt; (), &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt; (), &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt; (), &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt; ()를 호출 할 수도 있습니다 . QFile은 한 번에 한 문자 씩 작동하는 &lt;a href=&quot;qiodevice#getChar&quot;&gt;getChar&lt;/a&gt; (), &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt; () 및 &lt;a href=&quot;qiodevice#ungetChar&quot;&gt;ungetChar&lt;/a&gt; () 도 상속 합니다.</target>
        </trans-unit>
        <trans-unit id="eaccbcbbe1966f0ecd4d1ee4623ad28195e8def9" translate="yes" xml:space="preserve">
          <source>The file is readable by anyone.</source>
          <target state="translated">누구나 읽을 수있는 파일입니다.</target>
        </trans-unit>
        <trans-unit id="43a15110b7509f5d7b670b8ff3f6a632d8fed2df" translate="yes" xml:space="preserve">
          <source>The file is readable by the group.</source>
          <target state="translated">그룹이 파일을 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="722abac4e42d21969d135844160eae2a1fe94c43" translate="yes" xml:space="preserve">
          <source>The file is readable by the owner of the file.</source>
          <target state="translated">파일 소유자가 파일을 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbbab456259833f10f65b10c415d51fe271dea4b" translate="yes" xml:space="preserve">
          <source>The file is readable by the user.</source>
          <target state="translated">사용자가 파일을 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb640cb9db20736720461cb520679e61679607da" translate="yes" xml:space="preserve">
          <source>The file is then accessible as &lt;code&gt;:/cut-img.png&lt;/code&gt; from the application. It is also possible to specify a path prefix for all files in the &lt;code&gt;.qrc&lt;/code&gt; file using the &lt;code&gt;qresource&lt;/code&gt; tag's &lt;code&gt;prefix&lt;/code&gt; attribute:</source>
          <target state="translated">그런 다음 응용 프로그램에서 파일을 &lt;code&gt;:/cut-img.png&lt;/code&gt; 로 액세스 할 수 있습니다 . &lt;code&gt;qresource&lt;/code&gt; 태그의 &lt;code&gt;prefix&lt;/code&gt; 속성을 사용하여 &lt;code&gt;.qrc&lt;/code&gt; 파일의 모든 파일에 대한 경로 접두사를 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="68c29315f7113874a6bf775ac3a596e41d0ee7c7" translate="yes" xml:space="preserve">
          <source>The file is writable by anyone.</source>
          <target state="translated">파일은 누구나 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69e8ad90f794f4caf0a458a450f4786e2d69a6bc" translate="yes" xml:space="preserve">
          <source>The file is writable by the group.</source>
          <target state="translated">파일은 그룹이 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ecd454f5284aebfac91f735a168651b68580e8e" translate="yes" xml:space="preserve">
          <source>The file is writable by the owner of the file.</source>
          <target state="translated">파일 소유자가 파일을 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a3726362d6c3aaeb5dd7bc5c39aed12a3918e9f" translate="yes" xml:space="preserve">
          <source>The file is writable by the user.</source>
          <target state="translated">사용자가 파일을 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4842c74e8be618bd5d85d8111452641ea3a2df0e" translate="yes" xml:space="preserve">
          <source>The file mode defines the number and type of items that the user is expected to select in the dialog.</source>
          <target state="translated">파일 모드는 사용자가 대화 상자에서 선택해야하는 항목 수와 유형을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="0af5a6a4619125359c00d8fc1ae35bf7e3b51c1e" translate="yes" xml:space="preserve">
          <source>The file must reference a TrueType or OpenType font.</source>
          <target state="translated">파일은 트루 타입 또는 오픈 타입 글꼴을 참조해야합니다.</target>
        </trans-unit>
        <trans-unit id="cba7c43d020e049525e6b24706c643c90aa4b520" translate="yes" xml:space="preserve">
          <source>The file name can either refer to an actual file on disk or to one of the application's embedded resources. See the &lt;a href=&quot;resources&quot;&gt;Resource System&lt;/a&gt; overview for details on how to embed images and other resource files in the application's executable.</source>
          <target state="translated">파일 이름은 디스크의 실제 파일 또는 응용 프로그램의 내장 리소스 중 하나를 참조 할 수 있습니다. 응용 프로그램의 실행 파일에 이미지 및 기타 리소스 파일을 포함하는 방법에 대한 자세한 내용은 &lt;a href=&quot;resources&quot;&gt;리소스 시스템&lt;/a&gt; 개요를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d6f1bce46d0313d1d9d1d6b571d69189e3e972cb" translate="yes" xml:space="preserve">
          <source>The file name can either refer to an actual file on disk or to one of the application's embedded resources. See the &lt;a href=&quot;resources&quot;&gt;Resource System&lt;/a&gt; overview for details on how to embed pixmaps and other resource files in the application's executable.</source>
          <target state="translated">파일 이름은 디스크의 실제 파일 또는 응용 프로그램의 내장 리소스 중 하나를 참조 할 수 있습니다. 응용 프로그램의 실행 파일에 pixmap 및 기타 리소스 파일을 포함하는 방법에 대한 자세한 내용은 &lt;a href=&quot;resources&quot;&gt;리소스 시스템&lt;/a&gt; 개요를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0f8956d85a1bd69e0e0e70386a0969b26bee3925" translate="yes" xml:space="preserve">
          <source>The file name can refer to an actual file on disk or to one of the application's embedded resources. See the &lt;a href=&quot;resources&quot;&gt;Resource System&lt;/a&gt; overview for details on how to embed images and other resource files in the application's executable.</source>
          <target state="translated">파일 이름은 디스크의 실제 파일 또는 응용 프로그램의 내장 리소스 중 하나를 나타낼 수 있습니다. 응용 프로그램의 실행 파일에 이미지 및 기타 리소스 파일을 포함하는 방법에 대한 자세한 내용은 &lt;a href=&quot;resources&quot;&gt;리소스 시스템&lt;/a&gt; 개요를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c18e8813eab0e372abf488d58b0832e6dcd6fd1e" translate="yes" xml:space="preserve">
          <source>The file name is used for error reporting and for resolving relative path URIs.</source>
          <target state="translated">파일 이름은 오류보고 및 상대 경로 URI 확인에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="76f0a934d296e541342b5ef7f42be2027247ba01" translate="yes" xml:space="preserve">
          <source>The file name is usually passed in the constructor, but it can be set at any time using &lt;a href=&quot;qfile#setFileName&quot;&gt;setFileName&lt;/a&gt;(). &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; expects the file separator to be '/' regardless of operating system. The use of other separators (e.g., '\') is not supported.</source>
          <target state="translated">파일 이름은 일반적으로 생성자에 전달되지만 &lt;a href=&quot;qfile#setFileName&quot;&gt;setFileName&lt;/a&gt; ()을 사용하여 언제든지 설정할 수 있습니다 . &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; 은 파일 구분자가 운영 체제와 상관없이 '/'일 것으로 예상합니다. 다른 구분 기호 (예 : '\')는 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bf69d031901b33afef27fbee56fe1a28e1df50b5" translate="yes" xml:space="preserve">
          <source>The file name is usually passed in the constructor, but it can be set at any time using &lt;a href=&quot;qfile#setFileName&quot;&gt;setFileName&lt;/a&gt;(). QFile expects the file separator to be '/' regardless of operating system. The use of other separators (e.g., '\') is not supported.</source>
          <target state="translated">파일 이름은 일반적으로 생성자에 전달되지만 &lt;a href=&quot;qfile#setFileName&quot;&gt;setFileName&lt;/a&gt; ()을 사용하여 언제든지 설정할 수 있습니다 . QFile은 운영 체제에 관계없이 파일 구분 기호가 '/'일 것으로 예상합니다. 다른 구분 기호 (예 : '\')의 사용은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="76560e8016b96254ccd4a34bd7dcaf02a68c5dbb" translate="yes" xml:space="preserve">
          <source>The file name of the temporary file can be found by calling &lt;a href=&quot;qtemporaryfile#fileName&quot;&gt;fileName&lt;/a&gt;(). Note that this is only defined after the file is first opened; the function returns an empty string before this.</source>
          <target state="translated">임시 파일의 파일 이름은 &lt;a href=&quot;qtemporaryfile#fileName&quot;&gt;fileName&lt;/a&gt; () 을 호출하여 찾을 수 있습니다 . 이것은 파일을 처음 연 후에 만 ​​정의됩니다. 이 함수는이 전에 빈 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="9d0ca0cfcf6aa3686cf27fa63705c73f1ec87a65" translate="yes" xml:space="preserve">
          <source>The file path is empty if no translation was loaded yet, the loading failed, or if the translation was not loaded from a file.</source>
          <target state="translated">번역이 아직로드되지 않았거나로드에 실패했거나 파일에서 번역이로드되지 않은 경우 파일 경로는 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc92d732eb84487ccd02784ba46bd680728446c6" translate="yes" xml:space="preserve">
          <source>The file referenced should be linear PCM (WAV format).</source>
          <target state="translated">참조 된 파일은 선형 PCM (WAV 형식)이어야합니다.</target>
        </trans-unit>
        <trans-unit id="0402f97df0361fb30604378f2be48a4872ea4e0e" translate="yes" xml:space="preserve">
          <source>The file search attempts to look for compressed texture container file extensions first. If the search is unsuccessful, it attempts to search with the file extensions for the &lt;a href=&quot;qimagereader#supportedImageFormats&quot;&gt;conventional image file types&lt;/a&gt;. For example:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="16b9e5ca37f860e9c916612d228be84e9d4a9e3f" translate="yes" xml:space="preserve">
          <source>The file should have a &lt;code&gt;Paths&lt;/code&gt; group which contains the entries that correspond to each value of the &lt;a href=&quot;qlibraryinfo#LibraryLocation-enum&quot;&gt;QLibraryInfo::LibraryLocation&lt;/a&gt; enum. See the &lt;a href=&quot;qlibraryinfo&quot;&gt;QLibraryInfo&lt;/a&gt; documentation for details on the meaning of the various locations.</source>
          <target state="translated">파일 에는 &lt;a href=&quot;qlibraryinfo#LibraryLocation-enum&quot;&gt;QLibraryInfo :: LibraryLocation&lt;/a&gt; 열거 형 의 각 값에 해당하는 항목이 포함 된 &lt;code&gt;Paths&lt;/code&gt; 그룹 이 있어야합니다 . 다양한 위치의 의미에 대한 자세한 내용은 &lt;a href=&quot;qlibraryinfo&quot;&gt;QLibraryInfo&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b47701c46e0b800d0dd8e0190bd1e5a19c2fcb5e" translate="yes" xml:space="preserve">
          <source>The file should have a &lt;code&gt;Paths&lt;/code&gt; group which contains the entries that correspond to each value of the QLibraryInfo::LibraryLocation enum. See the &lt;a href=&quot;qlibraryinfo&quot;&gt;QLibraryInfo&lt;/a&gt; documentation for details on the meaning of the various locations.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ce76b5a74d570300449990c23aea2977705937f3" translate="yes" xml:space="preserve">
          <source>The file size exceeds the file system limitation.</source>
          <target state="translated">파일 크기가 파일 시스템 제한을 초과합니다.</target>
        </trans-unit>
        <trans-unit id="770f5847642a8b9fe5bc330359a27b3fe682324e" translate="yes" xml:space="preserve">
          <source>The file system is usually encoded in UTF-8 on all modern Linux distributions and should not pose a problem. File I/O defaults to UTF-8.</source>
          <target state="translated">파일 시스템은 일반적으로 모든 최신 Linux 배포판에서 UTF-8로 인코딩되며 문제를 일으키지 않아야합니다. 파일 I / O의 기본값은 UTF-8입니다.</target>
        </trans-unit>
        <trans-unit id="e3f76ecb61bc795df43d9106b7edc7d417a108d9" translate="yes" xml:space="preserve">
          <source>The file that the &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; works on is set in the constructor or later with &lt;a href=&quot;qfileinfo#setFile&quot;&gt;setFile&lt;/a&gt;(). Use &lt;a href=&quot;qfileinfo#exists&quot;&gt;exists&lt;/a&gt;() to see if the file exists and &lt;a href=&quot;qfileinfo#size&quot;&gt;size&lt;/a&gt;() to get its size.</source>
          <target state="translated">&lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo가&lt;/a&gt; 작동 하는 파일 은 생성자에서 설정되거나 나중에 &lt;a href=&quot;qfileinfo#setFile&quot;&gt;setFile&lt;/a&gt; ()로 설정됩니다. &lt;a href=&quot;qfileinfo#exists&quot;&gt;존재&lt;/a&gt; ()를 사용 하여 파일이 존재하는지 확인하고 &lt;a href=&quot;qfileinfo#size&quot;&gt;크기&lt;/a&gt; ()를 사용하여 크기를 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7f8728bc6896fec6079ad50ff6d3cbce00b5f4dd" translate="yes" xml:space="preserve">
          <source>The file that the QFileInfo works on is set in the constructor or later with &lt;a href=&quot;qfileinfo#setFile&quot;&gt;setFile&lt;/a&gt;(). Use &lt;a href=&quot;qfileinfo#exists&quot;&gt;exists&lt;/a&gt;() to see if the file exists and &lt;a href=&quot;qfileinfo#size&quot;&gt;size&lt;/a&gt;() to get its size.</source>
          <target state="translated">QFileInfo가 작동하는 파일은 생성자에 설정되거나 나중에 &lt;a href=&quot;qfileinfo#setFile&quot;&gt;setFile&lt;/a&gt; ()을 사용하여 설정됩니다 . 파일이 있는지 확인 하려면 &lt;a href=&quot;qfileinfo#exists&quot;&gt;exists&lt;/a&gt; ()를 사용 하고 &lt;a href=&quot;qfileinfo#size&quot;&gt;크기&lt;/a&gt; 를 확인하려면 size ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="aec1dc260e13d2946c6e7668a2c0d9af4e5541b4" translate="yes" xml:space="preserve">
          <source>The file was blocked due to local policy.</source>
          <target state="translated">로컬 정책으로 인해 파일이 차단되었습니다.</target>
        </trans-unit>
        <trans-unit id="68a10fb14dff51881ae2ec9b65a46be2030e1752" translate="yes" xml:space="preserve">
          <source>The file will start playing assuming that the audio system and output device support it. If you run out of luck, check what's up with the &lt;a href=&quot;qaudiooutput#error&quot;&gt;error&lt;/a&gt;() function.</source>
          <target state="translated">오디오 시스템 및 출력 장치가이를 지원한다고 가정하면 파일이 재생되기 시작합니다. 운이 떨어지면 &lt;a href=&quot;qaudiooutput#error&quot;&gt;error&lt;/a&gt; () 함수의 상태를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a3ac39201e58098b5bf97b970df018ec51e712d4" translate="yes" xml:space="preserve">
          <source>The file's contents is rendered in a separate paragraph, using a monospace font and the standard indentation. The code is shown verbatim.</source>
          <target state="translated">파일 내용은 모노 스페이스 글꼴과 표준 들여 쓰기를 사용하여 별도의 단락으로 렌더링됩니다. 코드는 그대로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="b9473ce53bf62875482d029c2f8783cd2c191df4" translate="yes" xml:space="preserve">
          <source>The file's dates are returned by &lt;a href=&quot;qfileinfo#birthTime&quot;&gt;birthTime&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#lastModified&quot;&gt;lastModified&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#lastRead&quot;&gt;lastRead&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#fileTime&quot;&gt;fileTime&lt;/a&gt;(). Information about the file's access permissions is obtained with &lt;a href=&quot;qfileinfo#isReadable&quot;&gt;isReadable&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#isWritable&quot;&gt;isWritable&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#isExecutable&quot;&gt;isExecutable&lt;/a&gt;(). The file's ownership is available from &lt;a href=&quot;qfileinfo#owner&quot;&gt;owner&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#ownerId&quot;&gt;ownerId&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#group&quot;&gt;group&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#groupId&quot;&gt;groupId&lt;/a&gt;(). You can examine a file's permissions and ownership in a single statement using the &lt;a href=&quot;qfileinfo#permission&quot;&gt;permission&lt;/a&gt;() function.</source>
          <target state="translated">파일의 날짜는 &lt;a href=&quot;qfileinfo#birthTime&quot;&gt;birthTime&lt;/a&gt; (), &lt;a href=&quot;qfileinfo#lastModified&quot;&gt;lastModified&lt;/a&gt; (), &lt;a href=&quot;qfileinfo#lastRead&quot;&gt;lastRead&lt;/a&gt; () 및 &lt;a href=&quot;qfileinfo#fileTime&quot;&gt;fileTime&lt;/a&gt; ()에 의해 반환됩니다 . 파일의 액세스 권한에 대한 정보는 &lt;a href=&quot;qfileinfo#isReadable&quot;&gt;isReadable&lt;/a&gt; (), &lt;a href=&quot;qfileinfo#isWritable&quot;&gt;isWritable&lt;/a&gt; () 및 &lt;a href=&quot;qfileinfo#isExecutable&quot;&gt;isExecutable&lt;/a&gt; ()을 사용 하여 얻습니다 . 파일의 소유권은 &lt;a href=&quot;qfileinfo#owner&quot;&gt;소유자&lt;/a&gt; (), &lt;a href=&quot;qfileinfo#ownerId&quot;&gt;ownerId&lt;/a&gt; (), &lt;a href=&quot;qfileinfo#group&quot;&gt;그룹&lt;/a&gt; () 및 &lt;a href=&quot;qfileinfo#groupId&quot;&gt;groupId&lt;/a&gt; ()에서 사용할 수 있습니다. &lt;a href=&quot;qfileinfo#permission&quot;&gt;permission&lt;/a&gt; () 함수를 사용하여 단일 문에서 파일의 권한과 소유권을 검사 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9f0e78131cd8bed43d0c23737fcdf76080d25c59" translate="yes" xml:space="preserve">
          <source>The file's dates are returned by created(), &lt;a href=&quot;qfileinfo#lastModified&quot;&gt;lastModified&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#lastRead&quot;&gt;lastRead&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#fileTime&quot;&gt;fileTime&lt;/a&gt;(). Information about the file's access permissions is obtained with &lt;a href=&quot;qfileinfo#isReadable&quot;&gt;isReadable&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#isWritable&quot;&gt;isWritable&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#isExecutable&quot;&gt;isExecutable&lt;/a&gt;(). The file's ownership is available from &lt;a href=&quot;qfileinfo#owner&quot;&gt;owner&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#ownerId&quot;&gt;ownerId&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#group&quot;&gt;group&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#groupId&quot;&gt;groupId&lt;/a&gt;(). You can examine a file's permissions and ownership in a single statement using the &lt;a href=&quot;qfileinfo#permission&quot;&gt;permission&lt;/a&gt;() function.</source>
          <target state="translated">파일 날짜는 created (), &lt;a href=&quot;qfileinfo#lastModified&quot;&gt;lastModified&lt;/a&gt; (), &lt;a href=&quot;qfileinfo#lastRead&quot;&gt;lastRead&lt;/a&gt; () 및 &lt;a href=&quot;qfileinfo#fileTime&quot;&gt;fileTime&lt;/a&gt; ()에 의해 반환됩니다 . 파일의 액세스 권한에 대한 정보는 &lt;a href=&quot;qfileinfo#isReadable&quot;&gt;isReadable&lt;/a&gt; (), &lt;a href=&quot;qfileinfo#isWritable&quot;&gt;isWritable&lt;/a&gt; () 및 &lt;a href=&quot;qfileinfo#isExecutable&quot;&gt;isExecutable&lt;/a&gt; ()을 사용하여 얻을 수 있습니다. 파일의 소유권은 &lt;a href=&quot;qfileinfo#owner&quot;&gt;owner&lt;/a&gt; (), &lt;a href=&quot;qfileinfo#ownerId&quot;&gt;ownerId&lt;/a&gt; (), &lt;a href=&quot;qfileinfo#group&quot;&gt;group&lt;/a&gt; () 및 &lt;a href=&quot;qfileinfo#groupId&quot;&gt;groupId&lt;/a&gt; ()에서 사용할 수 있습니다. &lt;a href=&quot;qfileinfo#permission&quot;&gt;permission&lt;/a&gt; () 함수를 사용하여 단일 명령문으로 파일의 권한과 소유권을 검사 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1c2ac615e1ab1f8b79c2d68294a17e1d9fb61476" translate="yes" xml:space="preserve">
          <source>The file's type is obtained with &lt;a href=&quot;qfileinfo#isFile&quot;&gt;isFile&lt;/a&gt;(), &lt;a href=&quot;qfileinfo#isDir&quot;&gt;isDir&lt;/a&gt;() and &lt;a href=&quot;qfileinfo#isSymLink&quot;&gt;isSymLink&lt;/a&gt;(). The &lt;a href=&quot;qfileinfo#symLinkTarget&quot;&gt;symLinkTarget&lt;/a&gt;() function provides the name of the file the symlink points to.</source>
          <target state="translated">파일 형식은 &lt;a href=&quot;qfileinfo#isFile&quot;&gt;isFile&lt;/a&gt; (), &lt;a href=&quot;qfileinfo#isDir&quot;&gt;isDir&lt;/a&gt; () 및 &lt;a href=&quot;qfileinfo#isSymLink&quot;&gt;isSymLink&lt;/a&gt; ()를 사용 하여 얻습니다 . &lt;a href=&quot;qfileinfo#symLinkTarget&quot;&gt;symLinkTarget&lt;/a&gt; () 함수는 심볼릭 링크가 가리키는 파일의 이름을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a9e33e8712649581ddc060a2bf56125a60991c61" translate="yes" xml:space="preserve">
          <source>The filename (i.e. everything after the last '/' in the path) is removed. The trailing '/' is kept, unless StripTrailingSlash is set. Only valid if RemovePath is not set.</source>
          <target state="translated">파일 이름 (즉, 경로에서 마지막 '/'뒤의 모든 것)이 제거됩니다. StripTrailingSlash가 설정되어 있지 않으면 후행 '/'가 유지됩니다. RemovePath가 설정되지 않은 경우에만 유효합니다.</target>
        </trans-unit>
        <trans-unit id="d8f8c656699bfdab741f34e4d657f8c3737a4e4d" translate="yes" xml:space="preserve">
          <source>The filename or source of the image.</source>
          <target state="translated">이미지의 파일 이름 또는 소스입니다.</target>
        </trans-unit>
        <trans-unit id="5b59fc0a6132c7d17fdc1bfbebf1ca218dc2e573" translate="yes" xml:space="preserve">
          <source>The filename that is created from the custom compiler.</source>
          <target state="translated">사용자 정의 컴파일러에서 작성된 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="8893d1706c9be794247f1c0a5dfddfda62099613" translate="yes" xml:space="preserve">
          <source>The files &lt;code&gt;qaxserver.rc&lt;/code&gt; and &lt;code&gt;qaxserver.def&lt;/code&gt; are part of the framework and can be used from their usual location (specify a path in the &lt;code&gt;.pro&lt;/code&gt; file), or copied into the project directory. You can modify these files as long as it includes any file as the type library entry, ie. you can add version information or specify a different toolbox icon.</source>
          <target state="translated">&lt;code&gt;qaxserver.rc&lt;/code&gt; 및 &lt;code&gt;qaxserver.def&lt;/code&gt; 파일 은 프레임 워크의 일부이며 일반적인 위치 ( &lt;code&gt;.pro&lt;/code&gt; 파일 의 경로 지정 )에서 사용하거나 프로젝트 디렉토리로 복사 할 수 있습니다. 파일을 형식 라이브러리 항목으로 포함하는 한이 파일을 수정할 수 있습니다. 버전 정보를 추가하거나 다른 도구 상자 아이콘을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="92fee63d2a5af9b89f1ccfefa9fa58da602b91f0" translate="yes" xml:space="preserve">
          <source>The files added to your project are:</source>
          <target state="translated">프로젝트에 추가 된 파일은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="825e433162a80c586eb8062b829d6aa9df3cb6de" translate="yes" xml:space="preserve">
          <source>The files must be in a directory in the filesystem or in the &lt;a href=&quot;resources&quot;&gt;resource system&lt;/a&gt;.</source>
          <target state="translated">파일은 파일 시스템 또는 &lt;a href=&quot;resources&quot;&gt;자원 시스템&lt;/a&gt; 의 디렉토리에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="305116f2fb410181c74836860f600542a3eeac9f" translate="yes" xml:space="preserve">
          <source>The files must be in a directory that is findable via the &lt;a href=&quot;qtqml-syntax-imports#qml-import-path&quot;&gt;QML Import Path&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="acf3e99396fda9962e8a0858b6dc3d16e90bb8a6" translate="yes" xml:space="preserve">
          <source>The files to be selected are placed in directories named with a &lt;code&gt;'+'&lt;/code&gt; and a selector name. In the above example you could have the platform configurations selected by placing them in the following locations:</source>
          <target state="translated">선택할 파일은 &lt;code&gt;'+'&lt;/code&gt; 및 선택기 이름으로 이름이 지정된 디렉토리에 있습니다. 위의 예에서 플랫폼 구성을 다음 위치에 배치하여 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="868964705b30f1901fe92e61ffe16758f2b309a2" translate="yes" xml:space="preserve">
          <source>The fill (brush) color of the axis shades.</source>
          <target state="translated">축 음영의 채우기 (브러쉬) 색상입니다.</target>
        </trans-unit>
        <trans-unit id="b7d44bfbe5728c3f5e289c8480f88b17785c72ec" translate="yes" xml:space="preserve">
          <source>The fill (brush) color of the bar set.</source>
          <target state="translated">막대 세트의 채우기 (브러쉬) 색상입니다.</target>
        </trans-unit>
        <trans-unit id="553b02c912031f130c2f29bfc692302539f18576" translate="yes" xml:space="preserve">
          <source>The fill (brush) color of the slice.</source>
          <target state="translated">슬라이스의 칠 (브러시) 색상입니다.</target>
        </trans-unit>
        <trans-unit id="c5733dc70615bc0e56a53874caa8e12f7bd0a73e" translate="yes" xml:space="preserve">
          <source>The filter can modify the reading.</source>
          <target state="translated">필터는 판독 값을 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="33e5b6182a24936979dc8e63596c8cba17da2e36" translate="yes" xml:space="preserve">
          <source>The filter engine allows for adding new filters and changing the existing filters' data through the &lt;a href=&quot;qhelpfilterengine#setFilterData&quot;&gt;setFilterData&lt;/a&gt;() method. An existing filter can be removed through the &lt;a href=&quot;qhelpfilterengine#removeFilter&quot;&gt;removeFilter&lt;/a&gt;() method.</source>
          <target state="translated">필터 엔진을 사용하면 &lt;a href=&quot;qhelpfilterengine#setFilterData&quot;&gt;setFilterData&lt;/a&gt; () 메소드를 통해 새 필터를 추가하고 기존 필터 데이터를 변경할 수 있습니다 . 기존 필터는 &lt;a href=&quot;qhelpfilterengine#removeFilter&quot;&gt;removeFilter&lt;/a&gt; () 메소드를 통해 제거 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a44f23ace8e9953d62f0222e6150ee596c913548" translate="yes" xml:space="preserve">
          <source>The filter engine allows the management of filters associated with a &lt;a href=&quot;qhelpenginecore&quot;&gt;QHelpEngineCore&lt;/a&gt; instance. The help engine internally creates an instance of the filter engine, which can be accessed by calling &lt;a href=&quot;qhelpenginecore#filterEngine&quot;&gt;QHelpEngineCore::filterEngine&lt;/a&gt;(). Therefore, the public constructor of this class is disabled.</source>
          <target state="translated">필터 엔진을 사용하면 &lt;a href=&quot;qhelpenginecore&quot;&gt;QHelpEngineCore&lt;/a&gt; 인스턴스 와 관련된 필터를 관리 할 수 ​​있습니다 . 도움말 엔진은 내부적으로 &lt;a href=&quot;qhelpenginecore#filterEngine&quot;&gt;QHelpEngineCore :: filterEngine&lt;/a&gt; () 을 호출하여 액세스 할 수있는 필터 엔진 인스턴스를 작성합니다 . 따라서이 클래스의 공용 생성자는 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e0d4bc3125aef7c21fe298cb367b393849770de" translate="yes" xml:space="preserve">
          <source>The filter function must be of the form:</source>
          <target state="translated">필터 기능은 다음과 같은 형식이어야합니다.</target>
        </trans-unit>
        <trans-unit id="4d54bddf2e1b434d87011febd774ca0af87588e4" translate="yes" xml:space="preserve">
          <source>The filter is a SQL &lt;code&gt;WHERE&lt;/code&gt; clause without the keyword &lt;code&gt;WHERE&lt;/code&gt; (for example, &lt;code&gt;name='Josephine')&lt;/code&gt;.</source>
          <target state="translated">필터는 키워드 &lt;code&gt;WHERE&lt;/code&gt; 가 없는 SQL &lt;code&gt;WHERE&lt;/code&gt; 절입니다 (예 : &lt;code&gt;name='Josephine')&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a3a1cebe74b94bb2dc48932dbc3342ba4e66ec08" translate="yes" xml:space="preserve">
          <source>The filter might be called from different threads, but never concurrently. The filter shall not call any static functions of &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory&lt;/a&gt;.</source>
          <target state="translated">필터는 다른 스레드에서 호출 될 수 있지만 동시에는 수행되지 않습니다. 필터는 &lt;a href=&quot;qloggingcategory&quot;&gt;QLoggingCategory의&lt;/a&gt; 정적 함수를 호출하지 않아야 합니다.</target>
        </trans-unit>
        <trans-unit id="9f43548552a57a2f6ab2db0c5ee4b2f772ef8a6e" translate="yes" xml:space="preserve">
          <source>The filter should be case sensitive.</source>
          <target state="translated">필터는 대소 문자를 구분해야합니다.</target>
        </trans-unit>
        <trans-unit id="5b4920d6bad6e0d2b28c43f0ad0b970d5e026eb2" translate="yes" xml:space="preserve">
          <source>The filtering mode is set on the texture instance just before the texture is bound for rendering.</source>
          <target state="translated">텍스처가 렌더링을 위해 바인딩되기 직전에 텍스처 인스턴스에서 필터링 모드가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="4bc83e005e4bbd0cdc333278a9404167626687f8" translate="yes" xml:space="preserve">
          <source>The filters are identified by a filter name string. Filter details are described by the &lt;a href=&quot;qhelpfilterdata&quot;&gt;QHelpFilterData&lt;/a&gt; class.</source>
          <target state="translated">필터는 필터 이름 문자열로 식별됩니다. 필터 세부 사항은 &lt;a href=&quot;qhelpfilterdata&quot;&gt;QHelpFilterData&lt;/a&gt; 클래스 로 설명됩니다 .</target>
        </trans-unit>
        <trans-unit id="fb3445c4984fbf8ccd1b41230c636dfdf7e90974" translate="yes" xml:space="preserve">
          <source>The final appearance of a paused progress indicator depends on the active Windows theme. Typically, a paused progress indicator turns yellow to indicate that the progress is currently paused. Unlike a &lt;a href=&quot;qwintaskbarprogress#stopped-prop&quot;&gt;stopped&lt;/a&gt; progress indicator, a paused progress should not be used to indicate an error.</source>
          <target state="translated">일시 중지 된 진행률 표시기의 최종 모양은 활성 Windows 테마에 따라 다릅니다. 일반적으로 일시 중지 된 진행률 표시기는 노란색으로 바뀌어 진행률이 현재 일시 중지되었음을 나타냅니다. &lt;a href=&quot;qwintaskbarprogress#stopped-prop&quot;&gt;중지 된&lt;/a&gt; 진행률 표시기 와 달리 일시 중지 된 진행률을 사용하여 오류를 나타내면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="83b59d3c9d98b206219dc424663cf51e143bdb8b" translate="yes" xml:space="preserve">
          <source>The final appearance of a stopped progress indicator depends on the active Windows theme. Typically, a stopped progress indicator turns red to indicate that the progress is currently stopped. Unlike a &lt;a href=&quot;qwintaskbarprogress#paused-prop&quot;&gt;paused&lt;/a&gt; progress indicator, a stopped progress may be used to indicate an error.</source>
          <target state="translated">중지 된 진행률 표시기의 최종 모양은 활성 Windows 테마에 따라 다릅니다. 일반적으로 중지 된 진행률 표시기는 빨간색으로 바뀌어 진행률이 현재 중지되었음을 나타냅니다. &lt;a href=&quot;qwintaskbarprogress#paused-prop&quot;&gt;일시 중지 된&lt;/a&gt; 진행률 표시기 와 달리 중지 된 진행률을 사용하여 오류를 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0ff08c092a13ab85ecb55f1065fefa61e1c4fd04" translate="yes" xml:space="preserve">
          <source>The final step is to run the example application with your custom style:</source>
          <target state="translated">마지막 단계는 사용자 정의 스타일로 예제 애플리케이션을 실행하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c54ac6f0d1251abaf1aa7e8267cc3e54b680cd9d" translate="yes" xml:space="preserve">
          <source>The final step is to use the &lt;code&gt;QMAKE_EXTRA_TARGETS&lt;/code&gt; variable to instruct qmake that this object is a target to be built:</source>
          <target state="translated">마지막 단계는 &lt;code&gt;QMAKE_EXTRA_TARGETS&lt;/code&gt; 변수 를 사용하여 qmake에게이 오브젝트가 빌드 될 대상임을 지시합니다.</target>
        </trans-unit>
        <trans-unit id="1e679b89cdb4c2ac43fb8717455ba0f51b35cf7d" translate="yes" xml:space="preserve">
          <source>The finished product:</source>
          <target state="translated">완제품 :</target>
        </trans-unit>
        <trans-unit id="b6cb2c534ec2e20be9da399f5fc21fa1eb9df2b4" translate="yes" xml:space="preserve">
          <source>The first '\n' character is read.</source>
          <target state="translated">첫 번째 '\ n'문자를 읽습니다.</target>
        </trans-unit>
        <trans-unit id="28d324a240bf361f38714c29315ec9fadad6b539" translate="yes" xml:space="preserve">
          <source>The first and last tick mark on an angular &lt;a href=&quot;qml-qtcharts-valueaxis&quot;&gt;ValueAxis&lt;/a&gt; are co-located at a 0/360 degree angle.</source>
          <target state="translated">각도 &lt;a href=&quot;qml-qtcharts-valueaxis&quot;&gt;ValueAxis&lt;/a&gt; 의 첫 번째 및 마지막 눈금 은 0/360도 각도로 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="cb6f560797736264a953ddb2b22e4c702fe6fd60" translate="yes" xml:space="preserve">
          <source>The first and last tick mark on an angular &lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt; are co-located at a 0/360 degree angle.</source>
          <target state="translated">각도 &lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt; 의 첫 번째 및 마지막 눈금 은 0/360도 각도로 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="daa5d163982af16a52507ae4c73764b4f2fbc5dd" translate="yes" xml:space="preserve">
          <source>The first argument is the string of QML to create. Just like in a new file, you will need to import any types you wish to use. The second argument is the parent object for the new object, and the parent argument semantics which apply to components are similarly applicable for &lt;code&gt;createQmlObject()&lt;/code&gt;. The third argument is the file path to associate with the new object; this is used for error reporting.</source>
          <target state="translated">첫 번째 인수는 작성할 QML의 문자열입니다. 새 파일에서와 마찬가지로 사용하려는 모든 유형을 가져와야합니다. 두 번째 인수는 새 객체의 상위 객체이며 구성 요소에 적용되는 상위 인수 시맨틱은 &lt;code&gt;createQmlObject()&lt;/code&gt; 유사하게 적용됩니다 . 세 번째 인수는 새 객체와 연결할 파일 경로입니다. 이것은 오류보고에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5e5f3bfbf052aa89c5b19a0bfee21bbb08862692" translate="yes" xml:space="preserve">
          <source>The first argument to &lt;a href=&quot;qsqltablemodel#removeRows&quot;&gt;QSqlTableModel::removeRows&lt;/a&gt;() is the index of the first row to delete.</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel#removeRows&quot;&gt;QSqlTableModel :: removeRows&lt;/a&gt; () 의 첫 번째 인수 는 삭제할 첫 번째 행의 색인입니다.</target>
        </trans-unit>
        <trans-unit id="fbb3df0828e8cadf50a633491f04c4543382e25c" translate="yes" xml:space="preserve">
          <source>The first available value for user defined resource types.</source>
          <target state="translated">사용자 정의 자원 유형에 사용 가능한 첫 번째 값.</target>
        </trans-unit>
        <trans-unit id="f988ecb145d27773b92f9e06ffd0f9a163923195" translate="yes" xml:space="preserve">
          <source>The first child added is the &lt;a href=&quot;qlist#first&quot;&gt;first&lt;/a&gt; object in the list and the last child added is the &lt;a href=&quot;qlist#last&quot;&gt;last&lt;/a&gt; object in the list, i.e. new children are appended at the end.</source>
          <target state="translated">추가 된 첫 번째 자식 은 목록 의 &lt;a href=&quot;qlist#first&quot;&gt;첫 번째&lt;/a&gt; 개체이고 추가 된 마지막 자식 은 목록 의 &lt;a href=&quot;qlist#last&quot;&gt;마지막&lt;/a&gt; 개체입니다. 즉, 새 자식이 끝에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="b93b22efe02fa3c2df8717527d3b00cde733641b" translate="yes" xml:space="preserve">
          <source>The first child of the context node</source>
          <target state="translated">컨텍스트 노드의 첫 번째 자식</target>
        </trans-unit>
        <trans-unit id="09a04284732e4460cb7827816c51cae01ed33ff4" translate="yes" xml:space="preserve">
          <source>The first column lists all types available in &lt;a href=&quot;qtquickcontrols1-index&quot;&gt;Qt Quick Controls 1&lt;/a&gt;, &lt;a href=&quot;qtquickdialogs-index&quot;&gt;Qt Quick Dialogs&lt;/a&gt;, and &lt;a href=&quot;qtquickextras-index&quot;&gt;Qt Quick Extras&lt;/a&gt;. The second column documents the respective type in Qt Quick Controls 2. When a direct alternative is not available, the third column contains an alternative that provides related functionality. The last column contains some remarks about the differences between the types in the different modules.</source>
          <target state="translated">첫 번째 열에는 &lt;a href=&quot;qtquickcontrols1-index&quot;&gt;Qt Quick Controls 1&lt;/a&gt; , &lt;a href=&quot;qtquickdialogs-index&quot;&gt;Qt Quick Dialogs&lt;/a&gt; 및 &lt;a href=&quot;qtquickextras-index&quot;&gt;Qt Quick Extras&lt;/a&gt; 에서 사용할 수있는 모든 유형이 나열됩니다 . 두 번째 열은 Qt Quick Controls 2의 각 유형을 설명합니다. 직접 대안을 사용할 수없는 경우 세 번째 열에는 관련 기능을 제공하는 대안이 포함됩니다. 마지막 열에는 다른 모듈의 유형 간 차이점에 대한 설명이 있습니다.</target>
        </trans-unit>
        <trans-unit id="4235febdbf662cbc4cfb9e8c4279759dd8353ff0" translate="yes" xml:space="preserve">
          <source>The first column lists all types available in &lt;a href=&quot;qtquickcontrols1-index&quot;&gt;Qt Quick Controls 1&lt;/a&gt;, &lt;a href=&quot;qtquickdialogs-index&quot;&gt;Qt Quick Dialogs&lt;/a&gt;, and &lt;a href=&quot;qtquickextras-index&quot;&gt;Qt Quick Extras&lt;/a&gt;. The second column documents the respective type in Qt Quick Controls. When a direct alternative is not available, the third column contains an alternative that provides related functionality. The last column contains some remarks about the differences between the types in the different modules.</source>
          <target state="translated">첫 번째 열에는 &lt;a href=&quot;qtquickcontrols1-index&quot;&gt;Qt Quick Controls 1&lt;/a&gt; , &lt;a href=&quot;qtquickdialogs-index&quot;&gt;Qt Quick Dialogs&lt;/a&gt; 및 &lt;a href=&quot;qtquickextras-index&quot;&gt;Qt Quick Extras&lt;/a&gt; 에서 사용할 수있는 모든 유형이 나열됩니다 . 두 번째 열은 Qt Quick Controls의 각 유형을 문서화합니다. 직접 대안을 사용할 수없는 경우 세 번째 열에는 관련 기능을 제공하는 대안이 포함됩니다. 마지막 열에는 다른 모듈의 유형 간의 차이점에 대한 몇 가지 설명이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="26c5c6aa86503d74ed6ed1dda1e06974585d2150" translate="yes" xml:space="preserve">
          <source>The first cube is writing 0.5 to the alpha value of the color but it does not bring visible results since alpha blending is not enabled. The second cube enables simple alpha blending via the &lt;a href=&quot;qml-qtquick3d-custommaterial&quot;&gt;CustomMaterial&lt;/a&gt; properties. The third one also assigns an opacity of 0.5 to the Model, which means that the effective opacity is 0.25.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4c15c2f568ab7afe9cef57d55b72e89a501c20c" translate="yes" xml:space="preserve">
          <source>The first element in the pair.</source>
          <target state="translated">쌍의 첫 번째 요소.</target>
        </trans-unit>
        <trans-unit id="2cc48778ee738c240b2c59f6c3a9c3bb6a195dd1" translate="yes" xml:space="preserve">
          <source>The first example above simulates clicking the &lt;code&gt;escape&lt;/code&gt; key on &lt;code&gt;myWidget&lt;/code&gt; without any keyboard modifiers and without delay. The second example simulates clicking &lt;code&gt;shift-escape&lt;/code&gt; on &lt;code&gt;myWidget&lt;/code&gt; following a 200 ms delay of the test.</source>
          <target state="translated">위의 첫 번째 예는 키보드 수정 자없이 지연없이 &lt;code&gt;myWidget&lt;/code&gt; 에서 &lt;code&gt;escape&lt;/code&gt; 키를 클릭하는 것을 시뮬레이션합니다 . 두 번째 예 는 200ms의 테스트 지연 후 &lt;code&gt;myWidget&lt;/code&gt; 에서 클릭 &lt;code&gt;shift-escape&lt;/code&gt; 클릭을 시뮬레이션 합니다.</target>
        </trans-unit>
        <trans-unit id="edb4467d19af406d10730a4715a5f223c08c5944" translate="yes" xml:space="preserve">
          <source>The first example above simulates clicking the &lt;code&gt;escape&lt;/code&gt; key on &lt;code&gt;myWindow&lt;/code&gt; without any keyboard modifiers and without delay. The second example simulates clicking &lt;code&gt;shift-escape&lt;/code&gt; on &lt;code&gt;myWindow&lt;/code&gt; following a 200 ms delay of the test.</source>
          <target state="translated">위의 첫 번째 예는 키보드 수정 자없이 지연없이 &lt;code&gt;myWindow&lt;/code&gt; 에서 &lt;code&gt;escape&lt;/code&gt; 키를 클릭하는 것을 시뮬레이션합니다 . 두 번째 예 는 200ms의 테스트 지연 후 &lt;code&gt;myWindow&lt;/code&gt; 에서 클릭 &lt;code&gt;shift-escape&lt;/code&gt; 클릭을 시뮬레이션 합니다.</target>
        </trans-unit>
        <trans-unit id="11fda7d38d8154e036a7fc8ae78fff26351efed8" translate="yes" xml:space="preserve">
          <source>The first example demonstrates the simplest usage of &lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt;.</source>
          <target state="translated">첫 번째 예제는 가장 간단한 &lt;a href=&quot;qml-qtquick-controls2-scrollview&quot;&gt;ScrollView&lt;/a&gt; 사용법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="a95baa0133851c6a2ffe7ff91114afdca6431488" translate="yes" xml:space="preserve">
          <source>The first example demonstrates the simplest usage of ScrollView.</source>
          <target state="translated">첫 번째 예제는 ScrollView의 가장 간단한 사용법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="327e93d4edb11c8904aa8170ab8a6ac08d818af4" translate="yes" xml:space="preserve">
          <source>The first group of functions insert block-level elements, and update the cursor position, but they do not return the element that was inserted:</source>
          <target state="translated">첫 번째 함수 그룹은 블록 레벨 요소를 삽입하고 커서 위치를 업데이트하지만 삽입 된 요소는 리턴하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c564c45eb40718aa95fe324af06a38e4dc0dd84a" translate="yes" xml:space="preserve">
          <source>The first is the parent for the new object. The parent can be a graphical object (i.e. of the &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; type) or non-graphical object (i.e. of the &lt;a href=&quot;qml-qtqml-qtobject&quot;&gt;QtObject&lt;/a&gt; or C++ &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; type). Only graphical objects with graphical parent objects will be rendered to the &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; visual canvas. If you wish to set the parent later you can safely pass &lt;code&gt;null&lt;/code&gt; to this function.</source>
          <target state="translated">첫 번째는 새 개체의 부모입니다. 부모는 그래픽 객체 (즉, &lt;a href=&quot;qml-qtquick-item&quot;&gt;아이템&lt;/a&gt; 타입) 또는 비 그래픽 객체 (즉, &lt;a href=&quot;qml-qtqml-qtobject&quot;&gt;QtObject&lt;/a&gt; 또는 C ++ &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 타입) 일 수 있습니다. 그래픽 부모 개체가있는 그래픽 개체 만 &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; 비주얼 캔버스 로 렌더링됩니다 . 나중에 부모를 설정하려면 이 함수에 &lt;code&gt;null&lt;/code&gt; 을 안전하게 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="154aef0d831a4d87aaddbeef5a1b063b857cc96c" translate="yes" xml:space="preserve">
          <source>The first isolated world to be used by scripts set by users if the application is not making use of more worlds. As a rule of thumb, if that functionality is exposed to the application users, each individual script should probably get its own isolated world.</source>
          <target state="translated">응용 프로그램이 더 많은 세계를 사용하지 않는 경우 사용자가 설정 한 스크립트에서 사용하는 최초의 격리 된 세계입니다. 일반적으로 해당 기능이 응용 프로그램 사용자에게 노출되는 경우 각 개별 스크립트는 고유 한 격리 된 세계를 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="24ce409ea2a6d5fc171a9ab2df71d0ef952e7d83" translate="yes" xml:space="preserve">
          <source>The first item in the list is the most preferred one.</source>
          <target state="translated">목록의 첫 번째 항목이 가장 선호되는 항목입니다.</target>
        </trans-unit>
        <trans-unit id="951fde176698c58abb83a5702aff8b468cbed78d" translate="yes" xml:space="preserve">
          <source>The first item that should be shown when the &lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt; is created.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-stackview&quot;&gt;StackView&lt;/a&gt; 가 작성 될 때 표시되어야하는 첫 번째 항목입니다 .</target>
        </trans-unit>
        <trans-unit id="2546748da1a0ea931a556608f61ef52e9aadb6dd" translate="yes" xml:space="preserve">
          <source>The first line creates the connection object, and the last line opens it for use. In between, we initialize some connection information, including the &lt;a href=&quot;qsqldatabase#setDatabaseName&quot;&gt;database name&lt;/a&gt;, the &lt;a href=&quot;qsqldatabase#setHostName&quot;&gt;host name&lt;/a&gt;, the &lt;a href=&quot;qsqldatabase#setUserName&quot;&gt;user name&lt;/a&gt;, and the &lt;a href=&quot;qsqldatabase#setPassword&quot;&gt;password&lt;/a&gt;. In this case, we are connecting to the MySQL database &lt;code&gt;flightdb&lt;/code&gt; on the host &lt;code&gt;bigblue&lt;/code&gt;. The &lt;code&gt;&quot;QMYSQL&quot;&lt;/code&gt; argument to &lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;addDatabase()&lt;/a&gt; specifies the type of database driver to use for the connection. The set of database drivers included with Qt are shown in the table of &lt;a href=&quot;sql-driver#supported-databases&quot;&gt;supported database drivers&lt;/a&gt;.</source>
          <target state="translated">첫 번째 줄은 연결 개체를 만들고 마지막 줄은 사용하기 위해 엽니 다. 그 사이에 &lt;a href=&quot;qsqldatabase#setDatabaseName&quot;&gt;데이터베이스 이름&lt;/a&gt; , &lt;a href=&quot;qsqldatabase#setHostName&quot;&gt;호스트 이름&lt;/a&gt; , &lt;a href=&quot;qsqldatabase#setUserName&quot;&gt;사용자 이름&lt;/a&gt; 및 &lt;a href=&quot;qsqldatabase#setPassword&quot;&gt;비밀번호를&lt;/a&gt; 포함한 일부 연결 정보를 초기화 합니다 . 이 경우, 우리는 MySQL 데이터베이스에 연결하는 &lt;code&gt;flightdb&lt;/code&gt; 호스트에 &lt;code&gt;bigblue&lt;/code&gt; . &lt;a href=&quot;qsqldatabase#addDatabase&quot;&gt;addDatabase ()&lt;/a&gt; 의 &lt;code&gt;&quot;QMYSQL&quot;&lt;/code&gt; 인수 는 연결에 사용할 데이터베이스 드라이버 유형을 지정합니다. Qt에 포함 된 데이터베이스 드라이버 세트는 &lt;a href=&quot;sql-driver#supported-databases&quot;&gt;지원되는 데이터베이스 드라이버&lt;/a&gt; 테이블에 표시 됩니다 .</target>
        </trans-unit>
        <trans-unit id="67aa8bb55f9ed9c7e4f2ee092c8754a721afbacb" translate="yes" xml:space="preserve">
          <source>The first linking step has to link a dummy type library into the executable that can later be replaced by idc. Add a resource file with a type library to your project as demonstrated in the examples.</source>
          <target state="translated">첫 번째 연결 단계는 더미 유형 라이브러리를 실행 파일에 연결해야하며 나중에 실행 파일은 idc로 대체 될 수 있습니다. 예제에 설명 된대로 유형 라이브러리가있는 자원 파일을 프로젝트에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="fdd760c7804ff4b330fbdacc74e5fb6a5f6d8c3f" translate="yes" xml:space="preserve">
          <source>The first macro defines the \gui command to render its argument using a bold font. The second macro defines the \raisedaster command to render a superscript asterisk, but only when generating HTML.</source>
          <target state="translated">첫 번째 매크로는 \ gui 명령을 정의하여 굵은 글꼴을 사용하여 인수를 렌더링합니다. 두 번째 매크로는 \ raisedaster 명령을 정의하여 HTML을 생성 할 때만 위첨자 별표를 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="a27081eeb76b5693672503f544e1a04499bf4b4b" translate="yes" xml:space="preserve">
          <source>The first object controls the second object.</source>
          <target state="translated">첫 번째 개체는 두 번째 개체를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="5b36183f6f24dbfa76d4777566056d2f7f2ee001" translate="yes" xml:space="preserve">
          <source>The first object is controlled by the second object.</source>
          <target state="translated">첫 번째 개체는 두 번째 개체에 의해 제어됩니다.</target>
        </trans-unit>
        <trans-unit id="0f82dfcd3e257be0012a0a1ca747d4ebe594e4a3" translate="yes" xml:space="preserve">
          <source>The first object is labelled by the second object.</source>
          <target state="translated">첫 번째 개체는 두 번째 개체로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="7cfd6e98366e71b20981f793f5dd13aca18d45ae" translate="yes" xml:space="preserve">
          <source>The first object is the label of the second object.</source>
          <target state="translated">첫 번째 개체는 두 번째 개체의 레이블입니다.</target>
        </trans-unit>
        <trans-unit id="7b19098f4e0905451ef211035dcfa03ead4f6230" translate="yes" xml:space="preserve">
          <source>The first object that can be used for application-specific purposes.</source>
          <target state="translated">응용 프로그램 별 목적으로 사용할 수있는 첫 번째 개체입니다.</target>
        </trans-unit>
        <trans-unit id="79802702a1e2a094fd94475aa69d6d01fa9676bf" translate="yes" xml:space="preserve">
          <source>The first option that can be used for user-specific purposes.</source>
          <target state="translated">사용자 별 목적으로 사용할 수있는 첫 번째 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="e267d632b2e626b77c4d977aa272d2df75523629" translate="yes" xml:space="preserve">
          <source>The first page in a document does not need to be preceded by a call to &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;(). You only need to calling &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;() after &lt;a href=&quot;qpainter#begin&quot;&gt;QPainter::begin&lt;/a&gt;() if you need to insert a blank page at the beginning of a printed document. Similarly, calling &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt;() after the last page in a document is painted will result in a trailing blank page appended to the end of the printed document.</source>
          <target state="translated">문서의 첫 페이지 앞에 &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt; ()를 호출 할 필요는 없습니다 . 인쇄 된 문서의 시작 부분에 빈 페이지를 삽입해야하는 경우 &lt;a href=&quot;qpainter#begin&quot;&gt;QPainter :: begin&lt;/a&gt; () 다음에 &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt; () 를 호출 하면됩니다. 마찬가지로, 문서의 마지막 페이지가 페인트 된 후 &lt;a href=&quot;qprinter#newPage&quot;&gt;newPage&lt;/a&gt; ()를 호출 하면 인쇄 된 문서의 끝에 빈 페이지가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="4538ec64f8ec2b1ffdb5f9a00f6ba1fadbc56157" translate="yes" xml:space="preserve">
          <source>The first parameter that can be used for user-specific purposes. &lt;code&gt;QVariant&lt;/code&gt;</source>
          <target state="translated">사용자 별 목적으로 사용할 수있는 첫 번째 매개 변수입니다. &lt;code&gt;QVariant&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ac463776739c5c91e6aefa43e2247bdfdc77fec" translate="yes" xml:space="preserve">
          <source>The first part of the function, which we have omitted, uses the current &lt;a href=&quot;qstyle&quot;&gt;style&lt;/a&gt; to calculate the slider handle's bounding rectangle; it is stored in &lt;code&gt;srect&lt;/code&gt;. Notice that child 0, covered in the default case in the above code, is the slider itself, so we can simply return the &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; bounding rectangle obtained from the superclass, which is effectively the value obtained from &lt;a href=&quot;qaccessiblewidget#rect&quot;&gt;QAccessibleWidget::rect&lt;/a&gt;().</source>
          <target state="translated">생략 한 함수의 첫 번째 부분은 현재 &lt;a href=&quot;qstyle&quot;&gt;스타일&lt;/a&gt; 을 사용하여 슬라이더 핸들의 경계 사각형을 계산합니다. &lt;code&gt;srect&lt;/code&gt; 에 저장됩니다 . 위의 코드에서 기본 사례에서 다루는 child 0은 슬라이더 자체이므로 수퍼 클래스에서 얻은 &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; 경계 사각형을 간단히 반환 할 수 있습니다 . 이는 실제로 &lt;a href=&quot;qaccessiblewidget#rect&quot;&gt;QAccessibleWidget :: rect&lt;/a&gt; () 에서 얻은 값 입니다.</target>
        </trans-unit>
        <trans-unit id="1ba33c845e57254781098f1fbfea501d02d4ccb1" translate="yes" xml:space="preserve">
          <source>The first pass allows for optimal z-culling for normal opaque 3D objects and the second pass allows for correct blending of transparent objects.</source>
          <target state="translated">첫 번째 패스는 정상적인 불투명 3D 개체에 대한 최적의 z-culling을 허용하고 두 번째 패스는 투명한 개체의 올바른 블렌딩을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="e302406e06f31c8dc885df504140e5b320d6b21e" translate="yes" xml:space="preserve">
          <source>The first point is implicitly connected to the last point, and the polygon is filled with the current &lt;a href=&quot;qpainter#brush&quot;&gt;brush&lt;/a&gt;().</source>
          <target state="translated">첫 번째 점은 마지막 점에 암시 적으로 연결되며 다각형은 현재 &lt;a href=&quot;qpainter#brush&quot;&gt;브러시&lt;/a&gt; ()로 채워집니다 .</target>
        </trans-unit>
        <trans-unit id="d5e697648dac9738c5612614fc4418811388ec05" translate="yes" xml:space="preserve">
          <source>The first point is implicitly connected to the last point, and the polygon is filled with the current &lt;a href=&quot;qpainter#brush&quot;&gt;brush&lt;/a&gt;(). If the supplied polygon is not convex, i.e. it contains at least one angle larger than 180 degrees, the results are undefined.</source>
          <target state="translated">첫 번째 점은 마지막 점에 암시 적으로 연결되며 다각형은 현재 &lt;a href=&quot;qpainter#brush&quot;&gt;브러시&lt;/a&gt; ()로 채워집니다 . 제공된 다각형이 볼록하지 않은 경우 (즉, 180 도보 다 큰 각도가 하나 이상 포함 된 경우) 결과는 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3e7cf2e5136b76965afeda9d720b65e99caa6567" translate="yes" xml:space="preserve">
          <source>The first point of the line will be on the origin.</source>
          <target state="translated">선의 첫 번째 점은 원점에 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d18b952a7b0019def24d59b2b6f719b2c990b52" translate="yes" xml:space="preserve">
          <source>The first position in a string is always a valid boundary and refers to the position before the first character. The last position at the length of the string is also valid and refers to the position after the last character.</source>
          <target state="translated">문자열의 첫 번째 위치는 항상 유효한 경계이며 첫 번째 문자 앞의 위치를 ​​나타냅니다. 문자열 길이의 마지막 위치도 유효하며 마지막 문자 뒤의 위치를 ​​나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8599d3fa03dae88293ae228e3762a282638ff6d2" translate="yes" xml:space="preserve">
          <source>The first requirement when using &lt;code&gt;CMake&lt;/code&gt; is to use &lt;code&gt;find_package&lt;/code&gt; to locate the libraries and header files shipped with Qt. These libraries and header files can then be used to build libraries and applications based on Qt.</source>
          <target state="translated">&lt;code&gt;CMake&lt;/code&gt; 를 사용할 때 첫 번째 요구 사항 은 &lt;code&gt;find_package&lt;/code&gt; 를 사용 하여 Qt와 함께 제공되는 라이브러리 및 헤더 파일을 찾는 것입니다. 이러한 라이브러리와 헤더 파일을 사용하여 Qt를 기반으로 라이브러리와 애플리케이션을 빌드 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41a1ee4893b0b0bf6d3cb0d45b24d44bf77b04c2" translate="yes" xml:space="preserve">
          <source>The first role that can be used for application-specific purposes.</source>
          <target state="translated">응용 프로그램 별 목적으로 사용할 수있는 첫 번째 역할입니다.</target>
        </trans-unit>
        <trans-unit id="2378d5834e47b9e1c494bc1c67839735262521d6" translate="yes" xml:space="preserve">
          <source>The first semantic is conceptually correct, given that a particular script might be imported by any number of QML files. The second semantic is retained for the purposes of backwards-compatibility. The third semantic remains unchanged from the current semantics for shared scripts, but is clarified here in respect to the newly possible case (where the script imports other scripts or modules).</source>
          <target state="translated">첫 번째 의미는 개념적으로 정확합니다. 특정 스크립트를 여러 QML 파일로 가져올 수 있다는 점입니다. 두 번째 의미론은 이전 버전과의 호환성을 위해 유지됩니다. 세 번째 시맨틱은 공유 스크립트에 대한 현재 시맨틱과 동일하게 유지되지만 새로 가능한 경우 (스크립트가 다른 스크립트 또는 모듈을 가져 오는 경우)와 관련하여 여기에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="b54d86b22e7dd6521c594f04f02ff05fe687e503" translate="yes" xml:space="preserve">
          <source>The first set of texture coordinates from the input mesh data, or all zeroes if there were no UV values provided. As with VERTEX and NORMAL, the value can altered.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e16739955f8ec6a0b63cfd01f657927c40cbe7a8" translate="yes" xml:space="preserve">
          <source>The first step in designing the style was to select the base class. We chose to subclass &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt;. This class implements most of the functionality we need, other than performing the actual drawing.</source>
          <target state="translated">스타일을 디자인하는 첫 단계는 기본 클래스를 선택하는 것이 었습니다. 우리는 &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; 을 서브 클래스로 선택했습니다 . 이 클래스는 실제 드로잉을 수행하는 것 외에 필요한 대부분의 기능을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="cd7d5a3202533670c7ccf591f8250d79d0d12328" translate="yes" xml:space="preserve">
          <source>The first step in the rendering process is to determine and set up the scene render target. Depending on which properties are set in the &lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;SceneEnvironment&lt;/a&gt;, the actual render target will vary. The first decision is whether content is being rendered directly to a window surface, or to an offscreen texture. By default, &lt;a href=&quot;qml-qtquick3d-view3d&quot;&gt;View3D&lt;/a&gt; will render to an offscreen texture. When using post processing effects, rendering to an offscreen texture is mandatory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaf1164e08eb381d06a4c7b1ba65690e06b06c68" translate="yes" xml:space="preserve">
          <source>The first step in the static approach is to pick one of the styles provided by Qt from which you will build your custom style. Your choice of &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; class will depend on which style resembles your desired style the most. The most general class that you can use as a base is &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; (not &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;). This is because Qt requires its styles to be &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt;s.</source>
          <target state="translated">정적 접근 방식의 첫 번째 단계는 Qt에서 제공하는 스타일 중 하나를 선택하여 사용자 정의 스타일을 빌드하는 것입니다. &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; 클래스 의 선택은 원하는 스타일과 가장 유사한 스타일에 따라 다릅니다. 기본으로 사용할 수있는 가장 일반적인 클래스는 &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; ( &lt;a href=&quot;qstyle&quot;&gt;QStyle 아님&lt;/a&gt; )입니다. Qt의 스타일이 &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle이어야&lt;/a&gt; 하기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="a9bb5308054d2b22284762efe45dc8a422c17fc6" translate="yes" xml:space="preserve">
          <source>The first step in the static approach is to pick one of the styles provided by Qt from which you will build your custom style. Your choice of QStyle class will depend on which style resembles your desired style the most. The most general class that you can use as a base is &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; (not QStyle). This is because Qt requires its styles to be &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt;s.</source>
          <target state="translated">정적 접근 방식의 첫 번째 단계는 사용자 지정 스타일을 구축 할 Qt에서 제공하는 스타일 중 하나를 선택하는 것입니다. QStyle 클래스 선택은 원하는 스타일과 가장 유사한 스타일에 따라 달라집니다. 기본으로 사용할 수있는 가장 일반적인 클래스는 &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle&lt;/a&gt; (QStyle이 아님)입니다. Qt는 스타일이 &lt;a href=&quot;qcommonstyle&quot;&gt;QCommonStyle이어야&lt;/a&gt; 하기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="cdff64ae77e8d4a08c2c7fd9cc992a2725cc8fd0" translate="yes" xml:space="preserve">
          <source>The first step is to &lt;a href=&quot;http://doc.qt.io/qtcreator/quick-projects.html&quot;&gt;create a new Qt Quick Controls 2 application&lt;/a&gt; in Qt Creator. After that, we &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-project-creating.html#creating-c-classes&quot;&gt;add a C++ type&lt;/a&gt; that stores the elevation. Since the type will be used for every control supported by our style, and because we may wish to add other attached properties later on, we'll call it MyStyle. Here is &lt;code&gt;MyStyle.h&lt;/code&gt;:</source>
          <target state="translated">첫 번째 단계는 Qt Creator에서 &lt;a href=&quot;http://doc.qt.io/qtcreator/quick-projects.html&quot;&gt;새로운 Qt Quick Controls 2 응용 프로그램&lt;/a&gt; 을 만드는 것 입니다. 그런 다음 고도를 저장 &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-project-creating.html#creating-c-classes&quot;&gt;하는 C ++ 유형&lt;/a&gt; 을 추가합니다 . 이 유형은 스타일이 지원하는 모든 컨트롤에 사용되므로 나중에 다른 첨부 된 속성을 추가 할 수 있으므로 MyStyle이라고합니다. &lt;code&gt;MyStyle.h&lt;/code&gt; 는 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="4ec4fc1f6779894d37d97ca049f4fcadc9f52b7c" translate="yes" xml:space="preserve">
          <source>The first step is to &lt;a href=&quot;https://doc.qt.io/qtcreator/creator-project-creating.html#selecting-project-type&quot;&gt;create a new Qt Quick Controls application&lt;/a&gt; in Qt Creator. After that, we &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-project-creating.html#creating-c-classes&quot;&gt;add a C++ type&lt;/a&gt; that stores the elevation. Since the type will be used for every control supported by our style, and because we may wish to add other attached properties later on, we'll call it MyStyle. Here is &lt;code&gt;MyStyle.h&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e4f64faf0e07500065a210625385355a29130a51" translate="yes" xml:space="preserve">
          <source>The first step is to create a Qt Help Collection Project file. Since a Qt help collection stores primarily references to compressed help files, the project</source>
          <target state="translated">첫 번째 단계는 Qt 도움말 수집 프로젝트 파일을 만드는 것입니다. Qt 도움말 모음은 주로 압축 도움말 파일에 대한 참조를 저장하므로 프로젝트</target>
        </trans-unit>
        <trans-unit id="9efbec90cb81676c8d16c25bd92235031881a782" translate="yes" xml:space="preserve">
          <source>The first step is to enable dependency tracking in the library itself. To do this you must tell qmake to save information about the library:</source>
          <target state="translated">첫 번째 단계는 라이브러리 자체에서 종속성 추적을 활성화하는 것입니다. 이렇게하려면 라이브러리에 대한 정보를 저장하도록 qmake에 지시해야합니다.</target>
        </trans-unit>
        <trans-unit id="f1e7b148b0ed34a75cfc8dd5a98a11810da4fbb2" translate="yes" xml:space="preserve">
          <source>The first step is to get a publisher account, if you do not already have one. Go to &lt;a href=&quot;https://play.google.com/apps/publish/&quot;&gt;the Google Play developer console&lt;/a&gt;, log in with the Google account of your choice, and follow the steps as directed.</source>
          <target state="translated">첫 번째 단계는 아직 게시자 계정이없는 경우 게시자 계정을 만드는 것입니다. &lt;a href=&quot;https://play.google.com/apps/publish/&quot;&gt;Google Play 개발자 콘솔로&lt;/a&gt; 이동 하여 선택한 Google 계정으로 로그인 한 다음 지시에 따라 단계를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="7825236b8f5dc60810c60e960e51d6a8ea36ea39" translate="yes" xml:space="preserve">
          <source>The first string in the list is the entire matched string. Each subsequent list element contains a string that matched a (capturing) subexpression of the regexp.</source>
          <target state="translated">목록의 첫 번째 문자열은 일치하는 전체 문자열입니다. 각 후속 목록 요소에는 정규식의 (캡처) 하위 표현식과 일치하는 문자열이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c31beaafb102ab3d8430697fc50b72bd45871f68" translate="yes" xml:space="preserve">
          <source>The first thing that is done is to determine the global common state for all content. If the &lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;SceneEnvironment&lt;/a&gt; defines a &lt;a href=&quot;qml-qtquick3d-sceneenvironment#lightProbe-prop&quot;&gt;lightProbe&lt;/a&gt;, then it checks if the environment map associated with that light probe texture is loaded, and if its not, a new environment map is is loaded or generated. The generation of an environment will itself be a set of passes to convolve the source texture into a cube map. This cube map will contain both specular reflection information as well as irradiance, which is used for material shading.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e21b10440a61a3512646f36ce0c125f59b9ca46c" translate="yes" xml:space="preserve">
          <source>The first thing we did in the &lt;code&gt;main()&lt;/code&gt; function was to create a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object &lt;code&gt;app&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;main()&lt;/code&gt; 함수 에서 가장 먼저 한 일은 &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; 객체 &lt;code&gt;app&lt;/code&gt; 을 만드는 것이 었습니다 .</target>
        </trans-unit>
        <trans-unit id="9a998c1523d70f0673dcdd599bc0f4bba42ae5cc" translate="yes" xml:space="preserve">
          <source>The first thing you need to do is resize your image to be</source>
          <target state="translated">가장 먼저해야 할 일은 이미지 크기를</target>
        </trans-unit>
        <trans-unit id="8917ebbca80bb52a7bc56c7c30d909a8b09cb1e3" translate="yes" xml:space="preserve">
          <source>The first time your App makes a request to the sandbox App Store it will request that you login. This is where you should log in using your iTunes test user credentials.</source>
          <target state="translated">앱이 샌드 박스 App Store에 처음 요청하면 로그인을 요청합니다. 여기서 iTunes 테스트 사용자 자격 증명을 사용하여 로그인해야합니다.</target>
        </trans-unit>
        <trans-unit id="6bff8abd6ed0b61faa4762e2d8b736b2194e8af4" translate="yes" xml:space="preserve">
          <source>The first two patterns can be combined, e.g. to initialize a licensed control on a remote machine:</source>
          <target state="translated">예를 들어 원격 시스템에서 라이센스가있는 컨트롤을 초기화하기 위해 처음 두 패턴을 결합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="417332cc781ae22cffabb141f5ad3e9739a19294" translate="yes" xml:space="preserve">
          <source>The first user-defined button (see also &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt;)</source>
          <target state="translated">첫 번째 사용자 정의 버튼 ( &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt; 참조 )</target>
        </trans-unit>
        <trans-unit id="b60cbdccec816968a84bb08ff6632b10a2a49169" translate="yes" xml:space="preserve">
          <source>The first value to be used for user defined roles.</source>
          <target state="translated">사용자 정의 역할에 사용되는 첫 번째 값입니다.</target>
        </trans-unit>
        <trans-unit id="bbf026464b8d91b2d86d99ea68ba8ddf926a2ae2" translate="yes" xml:space="preserve">
          <source>The first value to be used for user defined text.</source>
          <target state="translated">사용자 정의 텍스트에 사용되는 첫 번째 값입니다.</target>
        </trans-unit>
        <trans-unit id="8d661c05ceb119fc38d8215136ad225f194df723" translate="yes" xml:space="preserve">
          <source>The first way to create this button is to simply define it in-place, wherever it is needed. For example, perhaps you're not satisfied with the Basic style's Button having square corners. To make them rounded, you can override the &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt; item and set the radius property of Rectangle:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="beb32503a36ed7cc11abcaa27758c62d0bb76d97" translate="yes" xml:space="preserve">
          <source>The first way to create this button is to simply define it in-place, wherever it is needed. For example, perhaps you're not satisfied with the default style's Button having square corners. To make them rounded, you can override the &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;background&lt;/a&gt; item and set the radius property of Rectangle:</source>
          <target state="translated">이 버튼을 만드는 첫 번째 방법은 필요할 때마다 제자리에 간단히 정의하는 것입니다. 예를 들어, 사각형 모서리가있는 기본 스타일의 버튼이 마음에 들지 않을 수 있습니다. 반올림하게하려면 &lt;a href=&quot;qml-qtquick-controls2-control#background-prop&quot;&gt;배경&lt;/a&gt; 항목을 재정의하고 Rectangle의 radius 속성을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2c2859f522986b5acef90493dc4c1090c845fcf5" translate="yes" xml:space="preserve">
          <source>The five items are: An element, an atomic value (binary data encoded in base64), a date, a float, and an attribute.</source>
          <target state="translated">다섯 가지 항목은 다음과 같습니다. 요소, 원자 값 (base64로 인코딩 된 이진 데이터), 날짜, 부동 및 속성.</target>
        </trans-unit>
        <trans-unit id="55cce75df9a3b5d75ec83ef8b5823d7a5bbda191" translate="yes" xml:space="preserve">
          <source>The fixed font that the system recommends.</source>
          <target state="translated">시스템에서 권장하는 고정 글꼴</target>
        </trans-unit>
        <trans-unit id="d984be12bfdd01f44473291871cdf14d70fc058b" translate="yes" xml:space="preserve">
          <source>The flags &lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode::OwnsMaterial&lt;/a&gt;, &lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode::OwnsOpaqueMaterial&lt;/a&gt; and &lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode::OwnsGeometry&lt;/a&gt; decides whether the geometry node should also delete the materials and geometry. By default, these flags are disabled.</source>
          <target state="translated">플래그 &lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode :: OwnsMaterial&lt;/a&gt; , &lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode :: OwnsOpaqueMaterial&lt;/a&gt; 및 &lt;a href=&quot;qsgnode#Flag-enum&quot;&gt;QSGNode :: OwnsGeometry는&lt;/a&gt; 형상 노드는 또한 재료와 형상을 삭제할지 여부를 결정합니다. 기본적으로이 플래그는 비활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3772a53e01002aae29af5447eae983210a5dee6" translate="yes" xml:space="preserve">
          <source>The flags which you read from this property might differ from the ones that you set if the requested flags could not be fulfilled.</source>
          <target state="translated">이 특성에서 읽은 플래그는 요청 된 플래그를 이행 할 수없는 경우 설정 한 플래그와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47bf85ea95dc3b63185292fe358ac44c0a28cb60" translate="yes" xml:space="preserve">
          <source>The flash time is the time required to display, invert and restore the caret display. Usually the text cursor is displayed for half the cursor flash time, then hidden for the same amount of time, but this may vary.</source>
          <target state="translated">플래시 시간은 캐럿 디스플레이를 표시, 반전 및 복원하는 데 필요한 시간입니다. 일반적으로 텍스트 커서는 커서 플래시 시간의 절반 동안 표시되고 같은 시간 동안 숨겨 지지만 이는 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8152bcd56aa40699db99a9b9f7fbdd63aec639c5" translate="yes" xml:space="preserve">
          <source>The flash time is the time used to display, invert and restore the caret display. Usually the text cursor is displayed for half the cursor flash time, then hidden for the same amount of time.</source>
          <target state="translated">플래시 시간은 캐럿 디스플레이를 표시, 반전 및 복원하는 데 사용되는 시간입니다. 일반적으로 텍스트 커서는 커서 플래시 시간의 절반 동안 표시되고 같은 시간 동안 숨겨집니다.</target>
        </trans-unit>
        <trans-unit id="fa0520b97cc20fb4d7335b156d5ac20a35cbe413" translate="yes" xml:space="preserve">
          <source>The flat color material respects both current opacity and current matrix when updating its rendering state.</source>
          <target state="translated">플랫 컬러 재질은 렌더링 상태를 업데이트 할 때 현재 불투명도와 현재 매트릭스를 모두 존중합니다.</target>
        </trans-unit>
        <trans-unit id="17859886cb72234304b86345a4ad57a54e51a4af" translate="yes" xml:space="preserve">
          <source>The flat color material will fill every pixel in a geometry using a solid color. The color can contain transparency.</source>
          <target state="translated">플랫 컬러 재료는 단색을 사용하여 형상의 모든 픽셀을 채 웁니다. 색상은 투명도를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f57aa301a17bbfee15f06f62bd05b191517d07fe" translate="yes" xml:space="preserve">
          <source>The flickableItem of the &lt;a href=&quot;qml-qtquick-controls-scrollview&quot;&gt;ScrollView&lt;/a&gt;. If the &lt;a href=&quot;qml-qtquick-controls-scrollview#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; provided to the &lt;a href=&quot;qml-qtquick-controls-scrollview&quot;&gt;ScrollView&lt;/a&gt; is a Flickable, it will be the &lt;a href=&quot;qml-qtquick-controls-scrollview#contentItem-prop&quot;&gt;contentItem&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-scrollview&quot;&gt;ScrollView&lt;/a&gt; 의 flickableItem입니다 . 는 IF &lt;a href=&quot;qml-qtquick-controls-scrollview#contentItem-prop&quot;&gt;의 ContentItem&lt;/a&gt; 받는 제공된 &lt;a href=&quot;qml-qtquick-controls-scrollview&quot;&gt;있는 ScrollView가&lt;/a&gt; flickable 한, 그것은이됩니다 &lt;a href=&quot;qml-qtquick-controls-scrollview#contentItem-prop&quot;&gt;의 ContentItem&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2671c63d751427e872a0de801f69312f39694fa5" translate="yes" xml:space="preserve">
          <source>The float button of a &lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qdockwidget&quot;&gt;QDockWidget&lt;/a&gt; 의 플로트 버튼</target>
        </trans-unit>
        <trans-unit id="feb41fdec4ade060ec1f3a669c81ddc694e04b15" translate="yes" xml:space="preserve">
          <source>The float button of a dock widget.</source>
          <target state="translated">도크 위젯의 플로트 버튼.</target>
        </trans-unit>
        <trans-unit id="5d1d3e099fd263a27d8e71f89eb2b6bcf4fe1507" translate="yes" xml:space="preserve">
          <source>The floor level for the bar graph in Y-axis data coordinates.</source>
          <target state="translated">Y 축 데이터 좌표에서 막대 그래프의 바닥 수준입니다.</target>
        </trans-unit>
        <trans-unit id="e71e8194104f15a6cfccebde32e9fbe2dbc5bec9" translate="yes" xml:space="preserve">
          <source>The floppy icon.</source>
          <target state="translated">플로피 아이콘.</target>
        </trans-unit>
        <trans-unit id="dfc4524042b6f212135b13e7dd79a29ed55e46fd" translate="yes" xml:space="preserve">
          <source>The focus can be accessed using the context item expression, i.e., dot (&quot;.&quot;).</source>
          <target state="translated">컨텍스트 항목 표현식을 사용하여 초점에 액세스 할 수 있습니다 (예 : 점 ( &quot;.&quot;)).</target>
        </trans-unit>
        <trans-unit id="d502baf7b647caed0505ecaf3877ff7bfc9d1a50" translate="yes" xml:space="preserve">
          <source>The focus frame will not monitor</source>
          <target state="translated">초점 프레임이 모니터링되지 않습니다</target>
        </trans-unit>
        <trans-unit id="1744e06d7eea968c5f0c8d41f5e60d8a13103723" translate="yes" xml:space="preserve">
          <source>The focus item receives keyboard input when the scene receives a key event.</source>
          <target state="translated">장면이 키 이벤트를 수신하면 포커스 항목에 키보드 입력이 수신됩니다.</target>
        </trans-unit>
        <trans-unit id="e52ac6cd4cdba0b1514162e619cbcf5bdd502124" translate="yes" xml:space="preserve">
          <source>The focus point of the distortion. &lt;code&gt;Qt.vector2d(0.5, 0.5)&lt;/code&gt; (i.e. the center of the scene) by default.</source>
          <target state="translated">왜곡의 초점입니다. &lt;code&gt;Qt.vector2d(0.5, 0.5)&lt;/code&gt; (즉, 장면의 중심).</target>
        </trans-unit>
        <trans-unit id="dd039b61be661acaed89e4e28b69258ecd40cb7a" translate="yes" xml:space="preserve">
          <source>The focus policy is &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt::TabFocus&lt;/a&gt; if the widget accepts keyboard focus by tabbing, &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt::ClickFocus&lt;/a&gt; if the widget accepts focus by clicking, &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt::StrongFocus&lt;/a&gt; if it accepts both, and &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt::NoFocus&lt;/a&gt; (the default) if it does not accept focus at all.</source>
          <target state="translated">초점 정책은 &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt는 :: TabFocus&lt;/a&gt; 위젯 탭 이동하여 키보드 포커스를 받아들이는 경우, &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt는 :: ClickFocus이&lt;/a&gt; 위젯을 클릭하여 초점을 받아들이는 경우, &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt는 :: StrongFocus는&lt;/a&gt; 그것을 모두 수용하는 경우와 &lt;a href=&quot;qt#FocusPolicy-enum&quot;&gt;Qt는 :: NoFocus&lt;/a&gt; (기본값)는 않는 경우 초점을 전혀받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="96054cc7b4f834d567d7bffd6281301827dab790" translate="yes" xml:space="preserve">
          <source>The focus proxy</source>
          <target state="translated">포커스 프록시</target>
        </trans-unit>
        <trans-unit id="17c41709a0148ba07a5c410d3f18cf7b90169c74" translate="yes" xml:space="preserve">
          <source>The focus widget is not affected, except that it doesn't receive any keyboard events. &lt;a href=&quot;qwidget#setFocus-1&quot;&gt;setFocus&lt;/a&gt;() moves the focus as usual, but the new focus widget receives keyboard events only after &lt;a href=&quot;qwidget#releaseKeyboard&quot;&gt;releaseKeyboard&lt;/a&gt;() is called.</source>
          <target state="translated">포커스 위젯은 키보드 이벤트를받지 않는다는 점을 제외하고는 영향을받지 않습니다. &lt;a href=&quot;qwidget#setFocus-1&quot;&gt;setFocus&lt;/a&gt; ()는 평소와 같이 포커스를 이동하지만 &lt;a href=&quot;qwidget#releaseKeyboard&quot;&gt;releaseKeyboard&lt;/a&gt; ()가 호출 된 후에 만 새 포커스 위젯이 키보드 이벤트를 수신합니다 .</target>
        </trans-unit>
        <trans-unit id="accfeb65f15ff2b63fec7c8d9d461603c0e321a5" translate="yes" xml:space="preserve">
          <source>The follow example shows one &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; tracking the position of another using &lt;a href=&quot;qml-qtquick-smoothedanimation&quot;&gt;SmoothedAnimation&lt;/a&gt;. The green rectangle's &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values are bound to those of the red rectangle. Whenever these values change, the green rectangle smoothly animates to its new position:</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;qml-qtquick-smoothedanimation&quot;&gt;SmoothedAnimation을&lt;/a&gt; 사용하여 하나의 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 이 다른 Rectangle 의 위치를 ​​추적하는 것을 보여줍니다 . 녹색 사각형의 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 값은 빨간색 사각형의 값에 바인딩됩니다. 이러한 값이 변경 될 때마다 녹색 사각형이 새 위치로 부드럽게 애니메이션됩니다.</target>
        </trans-unit>
        <trans-unit id="58b7c65f8e7bbee1e3682547508d15b36ac7831e" translate="yes" xml:space="preserve">
          <source>The follow example shows one &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; tracking the position of another using SmoothedAnimation. The green rectangle's &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values are bound to those of the red rectangle. Whenever these values change, the green rectangle smoothly animates to its new position:</source>
          <target state="translated">다음 예제는 SmoothedAnimation을 사용하여 다른 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 의 위치를 ​​추적하는 하나의 Rectangle을 보여줍니다 . 녹색 사각형의 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 값은 빨간색 사각형의 값에 바인딩됩니다. 이러한 값이 변경 될 때마다 녹색 사각형이 새 위치로 부드럽게 애니메이션됩니다.</target>
        </trans-unit>
        <trans-unit id="90cbd9d9e7aca525d66ea82f95cfcc77308c0447" translate="yes" xml:space="preserve">
          <source>The following .sci file sets the borders to 10 on each side for the image &lt;code&gt;picture.png&lt;/code&gt;:</source>
          <target state="translated">다음 .sci 파일은 image &lt;code&gt;picture.png&lt;/code&gt; 의 양쪽에서 테두리를 10으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="7fe5c80fee24ced10f78c2411b6a8388fa8c2ef6" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;https://wiki.greasespot.net/Metadata_Block&quot;&gt;Greasemonkey&lt;/a&gt; attributes are supported since Qt 5.8: &lt;code&gt;@exclude&lt;/code&gt;, &lt;code&gt;@include&lt;/code&gt;, &lt;code&gt;@name&lt;/code&gt;, &lt;code&gt;@match&lt;/code&gt;, and &lt;code&gt;@run-at&lt;/code&gt;.</source>
          <target state="translated">다음 &lt;a href=&quot;https://wiki.greasespot.net/Metadata_Block&quot;&gt;Greasemonkey&lt;/a&gt; 속성은 Qt 5.8부터 지원됩니다 : &lt;code&gt;@exclude&lt;/code&gt; , &lt;code&gt;@include&lt;/code&gt; , &lt;code&gt;@name&lt;/code&gt; , &lt;code&gt;@match&lt;/code&gt; 및 &lt;code&gt;@run-at&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="39ca8ca07faf37addbefba72eaca164404821b54" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;https://wiki.greasespot.net/Metadata_Block#&quot;&gt;Greasemonkey&lt;/a&gt; attributes are supported since Qt 5.8: &lt;code&gt;@exclude&lt;/code&gt;, &lt;code&gt;@include&lt;/code&gt;, &lt;code&gt;@name&lt;/code&gt;, &lt;code&gt;@match&lt;/code&gt;, and &lt;code&gt;@run-at&lt;/code&gt;.</source>
          <target state="translated">Qt 5.8부터 &lt;code&gt;@exclude&lt;/code&gt; , &lt;code&gt;@include&lt;/code&gt; , &lt;code&gt;@name&lt;/code&gt; , &lt;code&gt;@match&lt;/code&gt; 및 &lt;code&gt;@run-at&lt;/code&gt; 와 같은 &lt;a href=&quot;https://wiki.greasespot.net/Metadata_Block#&quot;&gt;Greasemonkey&lt;/a&gt; 속성이 지원 됩니다 .</target>
        </trans-unit>
        <trans-unit id="226b4d6234a638ae67e26b517c4b33f436ab9dde" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; moves to the position of the mouse using a &lt;a href=&quot;qml-qtquick-springanimation&quot;&gt;SpringAnimation&lt;/a&gt; when the mouse is clicked. The use of the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt; on the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values indicates that whenever these values are changed, a &lt;a href=&quot;qml-qtquick-springanimation&quot;&gt;SpringAnimation&lt;/a&gt; should be applied.</source>
          <target state="translated">다음 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;사각형&lt;/a&gt; 은 마우스를 클릭 할 때 &lt;a href=&quot;qml-qtquick-springanimation&quot;&gt;SpringAnimation을&lt;/a&gt; 사용하여 마우스 위치로 이동합니다 . &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 값 에서 &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;동작&lt;/a&gt; 을 사용하면 이러한 값이 변경 될 때마다 &lt;a href=&quot;qml-qtquick-springanimation&quot;&gt;SpringAnimation&lt;/a&gt; 이 적용되어야 함을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="2301020875ce4aaef4b5b257b03d007c896993a6" translate="yes" xml:space="preserve">
          <source>The following &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; moves to the position of the mouse using a SpringAnimation when the mouse is clicked. The use of the &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;Behavior&lt;/a&gt; on the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values indicates that whenever these values are changed, a SpringAnimation should be applied.</source>
          <target state="translated">다음 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 은 마우스 클릭시 SpringAnimation을 사용하여 마우스 위치로 이동합니다. 의 사용은 &lt;a href=&quot;qml-qtquick-behavior&quot;&gt;동작&lt;/a&gt; 상의 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 값은이 값이 변경 될 때마다하는 SpringAnimation이 적용되어야 함을 나타낸다.</target>
        </trans-unit>
        <trans-unit id="4c2a1bd1143e4365535d3d1a1c8ea1c39db5b2eb" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;CONFIG&lt;/code&gt; values control compilation flags:</source>
          <target state="translated">다음 &lt;code&gt;CONFIG&lt;/code&gt; 값은 컴파일 플래그를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="907294b71f1dc063a4dcdb52cb0c1344d3187db3" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;CONFIG&lt;/code&gt; values control compiler and linker flags:</source>
          <target state="translated">다음 &lt;code&gt;CONFIG&lt;/code&gt; 값은 컴파일러 및 링커 플래그를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="bfb167ffc07db24362b3fcb91fd91ba1c08cc046" translate="yes" xml:space="preserve">
          <source>The following &lt;code&gt;Message&lt;/code&gt; class definition includes these members:</source>
          <target state="translated">다음 &lt;code&gt;Message&lt;/code&gt; 클래스 정의에는 다음 멤버가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="7e46e1884f1abd31589841203bc4af1226a78f31" translate="yes" xml:space="preserve">
          <source>The following C++ modules are in still development but are available as technology previews:</source>
          <target state="translated">다음 C ++ 모듈은 아직 개발 중이지만 기술 미리보기로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="54cf010fc5db732daad8c168f9a04830bfcba89b" translate="yes" xml:space="preserve">
          <source>The following Modbus function codes are filtered out as they are serial line only according to the Modbus Application Protocol Specification 1.1b:</source>
          <target state="translated">다음 Modbus 기능 코드는 Modbus Application Protocol Specification 1.1b에 따라 직렬 회선이므로 필터링됩니다.</target>
        </trans-unit>
        <trans-unit id="a1c838cccc27d2e05c82587f7b209c595a6f17c2" translate="yes" xml:space="preserve">
          <source>The following QML can produce either of the two illustrated arcs below by changing the value of direction.</source>
          <target state="translated">다음 QML은 방향 값을 변경하여 아래에 표시된 두 개의 호 중 하나를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="062d0f2082dfb39129bac1904d8676f6a1559866" translate="yes" xml:space="preserve">
          <source>The following QML code creates a &quot;shake&quot; and &quot;SecondCounter&quot; &lt;a href=&quot;qml-qtsensors-sensorgesture&quot;&gt;SensorGesture&lt;/a&gt; QML type, and displays the detected gesture in a text type.</source>
          <target state="translated">다음 QML 코드는 &quot;shake&quot;및 &quot;SecondCounter&quot; &lt;a href=&quot;qml-qtsensors-sensorgesture&quot;&gt;SensorGesture&lt;/a&gt; QML 유형을 작성하고 감지 된 제스처를 텍스트 유형으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="a9e6d67c42236eb350325fd59cc3fa5be6623ed1" translate="yes" xml:space="preserve">
          <source>The following QML code creates a &quot;shake&quot; and &quot;SecondCounter&quot; SensorGesture QML type, and displays the detected gesture in a text type.</source>
          <target state="translated">다음 QML 코드는 &quot;shake&quot;및 &quot;SecondCounter&quot;SensorGesture QML 유형을 생성하고 감지 된 제스처를 텍스트 유형으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="83a83e5752f88aecf92b362e09b71568611a179e" translate="yes" xml:space="preserve">
          <source>The following QML code shows how to create a chart with two simple scatter series:</source>
          <target state="translated">다음 QML 코드는 두 개의 간단한 산포 계열로 차트를 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="95e7c58385f56c5b8a06e4cc371983b417548d19" translate="yes" xml:space="preserve">
          <source>The following QML code shows how to create a polar chart with a spline and scatter series and two value axes:</source>
          <target state="translated">다음 QML 코드는 스플라인 및 분산 계열과 두 개의 값 축으로 극좌표 형 차트를 만드는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="5e831363910ede32ba38a9d62cd854e37e4740f1" translate="yes" xml:space="preserve">
          <source>The following QML code shows how to create a simple chart with one pie series:</source>
          <target state="translated">다음 QML 코드는 하나의 파이 시리즈로 간단한 차트를 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="fb9808564bf50c6b584aeae38488933cea0bc18e" translate="yes" xml:space="preserve">
          <source>The following QML code shows how to create a simple spline chart:</source>
          <target state="translated">다음 QML 코드는 간단한 스플라인 차트를 만드는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2ed13ccb6eb26d51de3072449c842bfb232e9edc" translate="yes" xml:space="preserve">
          <source>The following QML code snippet creates a bar series with three bar sets (assuming the model has at least four columns). Each bar set contains data starting from row 1. The name of a bar set is defined by the column header.</source>
          <target state="translated">다음 QML 코드 스 니펫은 3 개의 막대 세트가있는 막대 시리즈를 작성합니다 (모델에 최소 4 개의 열이 있다고 가정). 각 막대 집합에는 행 1부터 시작하는 데이터가 포함됩니다. 막대 집합의 이름은 열 머리글로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="17094c8324539da05fa1dc42ab8fe6ca1efd6279" translate="yes" xml:space="preserve">
          <source>The following QML code snippet creates a bar series with three bar sets (assuming the model has at least four rows). Each bar set contains data starting from column 1. The name of a bar set is defined by the row header.</source>
          <target state="translated">다음 QML 코드 스 니펫은 3 개의 막대 세트 (모델에 4 개 이상의 행이 있다고 가정)가있는 막대 시리즈를 작성합니다. 각 막대 집합에는 열 1부터 시작하는 데이터가 포함됩니다. 막대 집합의 이름은 행 머리글로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="417fa70588c9f7d6844efbf5dd80ae8a8a2e9589" translate="yes" xml:space="preserve">
          <source>The following QML code snippet creates a box plot series with three box-and-whiskers items (assuming the model has at least four columns). Each box-and-whiskers item contains data starting from row 1. The name of an item is defined by the column header.</source>
          <target state="translated">다음 QML 코드 스 니펫은 3 개의 상자 및 수염 항목이있는 상자 그림 시리즈를 작성합니다 (모델에 4 개 이상의 열이 있다고 가정). 각 상자 및 수염 항목에는 행 1부터 데이터가 포함됩니다. 항목 이름은 열 머리글로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="6024a2c9c1f82fa990008c6b070e49e546c9c9bc" translate="yes" xml:space="preserve">
          <source>The following QML code snippet creates a box plot series with three box-and-whiskers items (assuming the model has at least four rows). Each box-and-whiskers item contains data starting from column 1. The name of an item is defined by the row header.</source>
          <target state="translated">다음 QML 코드 스 니펫은 3 개의 상자 및 수염 항목이있는 상자 그림 시리즈를 작성합니다 (모델에 4 개 이상의 행이 있다고 가정). 각 상자 및 수염 항목에는 1 열부터 데이터가 포함됩니다. 항목 이름은 행 머리글로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="a3a2702c83e0f57e9060e89df4f1257a9c094203" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple box-and-whiskers chart:</source>
          <target state="translated">다음 QML 코드 스 니펫은 간단한 상자 및 수염 차트를 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3844b89d232cf9b21d4f673f578deb93ee5c6470" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple grouped bar chart:</source>
          <target state="translated">다음 QML 코드 스 니펫은 간단한 그룹화 된 막대 차트를 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3392aa0bb40844d525ece6431a8a269d8eaf3fad" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple horizontal bar chart:</source>
          <target state="translated">다음 QML 코드 스 니펫은 간단한 수평 막대 차트를 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c2d9ec565a943b0ce041cc51caab1860714d6698" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple horizontal percent bar chart:</source>
          <target state="translated">다음 QML 코드 스 니펫은 간단한 수평 백분율 막대 차트를 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c774990bc3b704a7db9ea8f4a8f11a3d9fce5114" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple horizontal stacked bar chart:</source>
          <target state="translated">다음 QML 코드 스 니펫은 간단한 가로 누적 막 대형 차트를 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="0a712af6b855c745f5b65cd238618691134c4d74" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to create a simple percent bar chart:</source>
          <target state="translated">다음 QML 코드 스 니펫은 간단한 퍼센트 막대 차트를 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="21a596b692cc687c74054e1ae0c272a4a225abf1" translate="yes" xml:space="preserve">
          <source>The following QML code snippet shows how to use the &lt;a href=&quot;qml-qtcharts-barseries&quot;&gt;BarSeries&lt;/a&gt; and &lt;a href=&quot;qml-qtcharts-barcategoryaxis&quot;&gt;BarCategoryAxis&lt;/a&gt; type to create a simple bar chart:</source>
          <target state="translated">다음 QML 코드 스 니펫은 &lt;a href=&quot;qml-qtcharts-barseries&quot;&gt;BarSeries&lt;/a&gt; 및 &lt;a href=&quot;qml-qtcharts-barcategoryaxis&quot;&gt;BarCategoryAxis&lt;/a&gt; 유형을 사용하여 간단한 막대 차트를 작성하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="0d953364b6323e5628960ee406f0c07ea0990705" translate="yes" xml:space="preserve">
          <source>The following QML demonstrates how different radius values can be used to change the shape of the arc:</source>
          <target state="translated">다음 QML은 서로 다른 반지름 값을 사용하여 호 모양을 변경하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1c28c443ea12f98af7e5a036c07b16d2c3f80cd3" translate="yes" xml:space="preserve">
          <source>The following QML example creates a candlestick series with three candlestick items (assuming the model has at least four columns). Each candlestick item contains data defined by the timestamp, open, high, low, and close rows. The name of an item is defined by the horizontal header of the column.</source>
          <target state="translated">다음 QML 예제는 3 개의 촛대 항목이있는 촛대 시리즈를 만듭니다 (모델에 4 개 이상의 열이 있다고 가정). 각 촛대 항목에는 타임 스탬프, 열기, 높음, 낮음 및 닫기 행으로 정의 된 데이터가 포함됩니다. 항목의 이름은 열의 가로 머리글로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="4fcf5a4813ab23b413bd1b2bd2094094988a70ea" translate="yes" xml:space="preserve">
          <source>The following QML example creates a candlestick series with three candlestick items (assuming the model has at least four rows). Each candlestick item contains data defined by the timestamp, open, high, low, and close columns. The name of an item is defined by the vertical header of the row.</source>
          <target state="translated">다음 QML 예제는 3 개의 촛대 항목이있는 촛대 시리즈를 만듭니다 (모델에 4 개 이상의 행이 있다고 가정). 각 촛대 항목에는 타임 스탬프, 열기, 높음, 낮음 및 닫기 열로 정의 된 데이터가 포함됩니다. 항목의 이름은 행의 세로 머리글로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="c82486bf68e6a5c936f42cf926aeaa77f7b7cbb7" translate="yes" xml:space="preserve">
          <source>The following QML example creates a pie series with four slices (assuming the model has at least five columns). Each slice gets a label from row 1 and a value from row 2.</source>
          <target state="translated">다음 QML 예제는 4 개의 슬라이스로 파이 시리즈를 작성합니다 (모델에 5 개 이상의 열이 있다고 가정). 각 슬라이스는 1 행에서 레이블을, 2 행에서 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="0141836a92ba9bea9ff2dc0d93898a0abcf688c2" translate="yes" xml:space="preserve">
          <source>The following QML example creates a pie series with four slices (assuming the model has at least five rows). Each slice gets a label from column 1 and a value from column 2.</source>
          <target state="translated">다음 QML 예제는 4 개의 슬라이스로 파이 시리즈를 작성합니다 (모델에 5 개 이상의 행이 있다고 가정). 각 슬라이스는 열 1에서 레이블을 가져오고 열 2에서 값을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="039fa9b418ca6fc7d163144f9131a7b77846e8bd" translate="yes" xml:space="preserve">
          <source>The following QML example shows how to create a simple line chart:</source>
          <target state="translated">다음 QML 예제는 간단한 꺾은 선형 차트를 만드는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1ce666050ef41e00442d3317324a5f7f64e6bd98" translate="yes" xml:space="preserve">
          <source>The following QML example shows how to create a simple pie chart.</source>
          <target state="translated">다음 QML 예제는 간단한 원형 차트를 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="ab8d6591bbd42c9ccf14fd748c4dee3914e66090" translate="yes" xml:space="preserve">
          <source>The following QML modules are in still development but are available as technology previews:</source>
          <target state="translated">다음 QML 모듈은 아직 개발 중이지만 기술 미리보기로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="1592f6b32c8cf11ffaf8cdc8198f782f5189d61f" translate="yes" xml:space="preserve">
          <source>The following QML produces the path shown below:</source>
          <target state="translated">다음 QML은 아래 표시된 경로를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="a40c08ad8491821cff38b05e14df666683daa396" translate="yes" xml:space="preserve">
          <source>The following QML shows how to create a simple area chart:</source>
          <target state="translated">다음 QML은 간단한 영역 차트를 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1b7f676e4c6e06f6b9d30c4431507ee0553537ad" translate="yes" xml:space="preserve">
          <source>The following QML shows how to create a simple candlestick chart:</source>
          <target state="translated">다음 QML은 간단한 촛대 차트를 만드는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9d7ff299fd6b1bdc2e4e813aa66fbea589ad7f77" translate="yes" xml:space="preserve">
          <source>The following QML shows how to create a simple stacked bar chart:</source>
          <target state="translated">다음 QML은 간단한 누적 막대 차트를 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9ac28a4e87c773bb66d36d757c1b09da2dad6e98" translate="yes" xml:space="preserve">
          <source>The following QML shows how to display an animated image and obtain information about its state, such as the current frame and total number of frames. The result is an animated image with a simple progress indicator underneath it.</source>
          <target state="translated">다음 QML은 애니메이션 이미지를 표시하고 현재 프레임 및 총 프레임 수와 같은 상태에 대한 정보를 얻는 방법을 보여줍니다. 결과는 그 아래에 간단한 진행 표시기가있는 애니메이션 이미지입니다.</target>
        </trans-unit>
        <trans-unit id="cb004f44d7b08ae9ba136bb41589c7a29bd0e0c2" translate="yes" xml:space="preserve">
          <source>The following QML snippet demonstrates how to print information about a route maneuver:</source>
          <target state="translated">다음 QML 스 니펫은 경로 조작에 대한 정보를 인쇄하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="cc03741f4e4a3621db304a4fd95c8baec5f8b583" translate="yes" xml:space="preserve">
          <source>The following QML snippet demonstrates how to print information about a route segment:</source>
          <target state="translated">다음 QML 스 니펫은 경로 세그먼트에 대한 정보를 인쇄하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7f81948a6ed552d952cc06f068e9e0a7321e3bb8" translate="yes" xml:space="preserve">
          <source>The following QML snippet illustrates how to use &lt;a href=&quot;qml-qtcharts-barcategoryaxis&quot;&gt;BarCategoryAxis&lt;/a&gt;:</source>
          <target state="translated">다음 QML 스 니펫은 &lt;a href=&quot;qml-qtcharts-barcategoryaxis&quot;&gt;BarCategoryAxis&lt;/a&gt; 사용 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="ff1b27cdb6094c440f72fb9b459715c4e7e1d58b" translate="yes" xml:space="preserve">
          <source>The following QML snippet illustrates how to use BarCategoryAxis:</source>
          <target state="translated">다음 QML 스 니펫은 BarCategoryAxis를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="779c30ae404503796a26b6ecc6120c4bff3a4441" translate="yes" xml:space="preserve">
          <source>The following Repeater creates three instances of a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; item within a &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt;:</source>
          <target state="translated">다음 리피터 는 &lt;a href=&quot;qml-qtquick-row&quot;&gt;행&lt;/a&gt; 내에 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 항목 의 세 인스턴스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="f6ae8fb03d7bb70d42d4a956620dd88727042a32" translate="yes" xml:space="preserve">
          <source>The following Windows configurations are supported in Qt 6.0:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf9ed96ba0bd26eef7655c16b0fa04124a3e9ae5" translate="yes" xml:space="preserve">
          <source>The following YouTube video gives a complete walk-through of the installation process:</source>
          <target state="translated">다음 YouTube 비디오는 설치 프로세스를 완전히 안내합니다.</target>
        </trans-unit>
        <trans-unit id="fa03151bcbf9dcd54600161f47b97c238d37545c" translate="yes" xml:space="preserve">
          <source>The following abridged code snippet shows the basic use of the class to write formatted XML with indentation:</source>
          <target state="translated">다음의 요약 된 코드 스 니펫은 클래스를 사용하여 들여 쓰기로 형식화 된 XML을 작성하는 기본 사용법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9589dd5200c84a5b85ad295a701be92c1e2eeaba" translate="yes" xml:space="preserve">
          <source>The following animation runs two number animations in parallel. The &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; moves to (50,50) by animating its &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; properties at the same time.</source>
          <target state="translated">다음 애니메이션은 두 개의 숫자 애니메이션을 병렬로 실행합니다. &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;직사각형&lt;/a&gt; 의 애니메이션 그래피 (50,50)으로 이동하는 &lt;code&gt;x&lt;/code&gt; 와 &lt;code&gt;y&lt;/code&gt; 가 동시에 등록한다.</target>
        </trans-unit>
        <trans-unit id="ef337fd25abaeb8301fc879090c517d3e313de83" translate="yes" xml:space="preserve">
          <source>The following application creates a &lt;code&gt;DataObject&lt;/code&gt; class with &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; values that will be accessible as named roles when a &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;DataObject*&amp;gt; is exposed to QML:</source>
          <target state="translated">다음 애플리케이션은 &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt;DataObject *&amp;gt;가 QML에 노출 될 때 명명 된 역할로 액세스 할 수있는 &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; 값 으로 &lt;code&gt;DataObject&lt;/code&gt; 클래스를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="7fd186ecaaa322c35ea9b054d141d78130c3b9b7" translate="yes" xml:space="preserve">
          <source>The following are examples of custom MIME types:</source>
          <target state="translated">다음은 사용자 정의 MIME 유형의 예입니다.</target>
        </trans-unit>
        <trans-unit id="d25a40c0218f9c333e6fe8d21f3ff959463dfc6b" translate="yes" xml:space="preserve">
          <source>The following are functionally equivalent:</source>
          <target state="translated">다음은 기능적으로 동일합니다.</target>
        </trans-unit>
        <trans-unit id="7168187697701fdcafd838531fa103fcad3f7d8b" translate="yes" xml:space="preserve">
          <source>The following are lists of the classes and UI components provided by the module, with example applications to demonstrate their usage:</source>
          <target state="translated">다음은 모듈에서 제공하는 클래스 및 UI 구성 요소 목록이며 사용법을 보여주는 예제 응용 프로그램입니다.</target>
        </trans-unit>
        <trans-unit id="de2a21093fd5424e8dc980220af8fc7e282b250f" translate="yes" xml:space="preserve">
          <source>The following are standard keys that are defined by the API. &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; implementations are free to define additional keys. Custom keys should be qualified by a unique prefix to avoid clashes.</source>
          <target state="translated">다음은 API에서 정의한 표준 키입니다. &lt;a href=&quot;location-places-qml#plugin&quot;&gt;플러그인&lt;/a&gt; 구현은 추가 키를 자유롭게 정의 할 수 있습니다. 사용자 정의 키는 충돌을 피하기 위해 고유 한 접두사로 규정되어야합니다.</target>
        </trans-unit>
        <trans-unit id="471e1c2baad85d69bd0069a2f15efaad2d812024" translate="yes" xml:space="preserve">
          <source>The following are the different encoding methods used:</source>
          <target state="translated">사용되는 다른 인코딩 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2cf6534505291b367e5d49e37d7ac0c3f9434b98" translate="yes" xml:space="preserve">
          <source>The following assumes InterBase or Firebird is installed in &lt;code&gt;/opt/interbase&lt;/code&gt;:</source>
          <target state="translated">다음은 InterBase 또는 Firebird가 &lt;code&gt;/opt/interbase&lt;/code&gt; 에 설치되어 있다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="c4c81ccbf930ca9c4172a9c65c63e9349b9c22c9" translate="yes" xml:space="preserve">
          <source>The following assumes InterBase or Firebird is installed in &lt;code&gt;C:\interbase&lt;/code&gt;:</source>
          <target state="translated">다음은 &lt;code&gt;C:\interbase&lt;/code&gt; 에 InterBase 또는 Firebird가 설치되어 있다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="7036ac29bf0c41e961d9de06a94d257324ab3dd7" translate="yes" xml:space="preserve">
          <source>The following attribute is supported by the &lt;code&gt;ol&lt;/code&gt; and &lt;code&gt;ul&lt;/code&gt; tags:</source>
          <target state="translated">&lt;code&gt;ol&lt;/code&gt; 및 &lt;code&gt;ul&lt;/code&gt; 태그 는 다음 속성을 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="7963a27dd2c2f52f5987c821d3f0e0cc96c3f4f8" translate="yes" xml:space="preserve">
          <source>The following attributes are supported by the &lt;code&gt;div&lt;/code&gt;, &lt;code&gt;dl&lt;/code&gt;, &lt;code&gt;dt&lt;/code&gt;, &lt;code&gt;h1&lt;/code&gt;, &lt;code&gt;h2&lt;/code&gt;, &lt;code&gt;h3&lt;/code&gt;, &lt;code&gt;h4&lt;/code&gt;, &lt;code&gt;h5&lt;/code&gt;, &lt;code&gt;h6&lt;/code&gt;, &lt;code&gt;p&lt;/code&gt; tags:</source>
          <target state="translated">&lt;code&gt;div&lt;/code&gt; , &lt;code&gt;dl&lt;/code&gt; , &lt;code&gt;dt&lt;/code&gt; , &lt;code&gt;h1&lt;/code&gt; , &lt;code&gt;h2&lt;/code&gt; , &lt;code&gt;h3&lt;/code&gt; , &lt;code&gt;h4&lt;/code&gt; , &lt;code&gt;h5&lt;/code&gt; , &lt;code&gt;h6&lt;/code&gt; , &lt;code&gt;p&lt;/code&gt; 태그 는 다음 속성을 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="5d5d61095f65042402059860f91db33b5a420a1e" translate="yes" xml:space="preserve">
          <source>The following attributes are supported by the &lt;code&gt;td&lt;/code&gt; and &lt;code&gt;th&lt;/code&gt; tags:</source>
          <target state="translated">&lt;code&gt;td&lt;/code&gt; 및 &lt;code&gt;th&lt;/code&gt; 태그 는 다음 속성을 지원 합니다.</target>
        </trans-unit>
        <trans-unit id="2161cbb02a66d68d57757bc4c59404224c7d2c55" translate="yes" xml:space="preserve">
          <source>The following backends are supported:</source>
          <target state="translated">다음과 같은 백엔드가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="73403ee03f358918f1eca9c9e082896a935f22c7" translate="yes" xml:space="preserve">
          <source>The following casts are done automatically:</source>
          <target state="translated">다음 캐스트는 자동으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="f2e2f222dbb35608d2df2df4e9473ded4c7d8cb0" translate="yes" xml:space="preserve">
          <source>The following categories are informative in Unicode:</source>
          <target state="translated">다음 범주는 유니 코드로 유익합니다.</target>
        </trans-unit>
        <trans-unit id="eaa218b35266a04e6a973de95b1b38a419143119" translate="yes" xml:space="preserve">
          <source>The following characters are normative in Unicode:</source>
          <target state="translated">다음 문자는 유니 코드에서 표준입니다.</target>
        </trans-unit>
        <trans-unit id="805897dbe8fc240097bce136949485c792f29990" translate="yes" xml:space="preserve">
          <source>The following classes add scripting capabilities to Qt applications.</source>
          <target state="translated">다음 클래스는 Qt 애플리케이션에 스크립팅 기능을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="b248fc7e8ad961a43d1e8dea544a4204c7fde123" translate="yes" xml:space="preserve">
          <source>The following classes support the selecting and setting up of printers and printing output.</source>
          <target state="translated">다음 클래스는 프린터 선택 및 설정 및 인쇄 출력을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="152a3fa1df3a1e63a479f2189ec9d3c764483535" translate="yes" xml:space="preserve">
          <source>The following code allocates and destructs an instance of &lt;code&gt;MyClass&lt;/code&gt;:</source>
          <target state="translated">다음 코드는 &lt;code&gt;MyClass&lt;/code&gt; 인스턴스를 할당하고 소멸 시킵니다 .</target>
        </trans-unit>
        <trans-unit id="29923af26a8102ea5224fa752cdeb2285d843496" translate="yes" xml:space="preserve">
          <source>The following code can be used as a skeleton for a SQL driver:</source>
          <target state="translated">다음 코드는 SQL 드라이버의 스켈레톤으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccfede9a4800993a2f29262181e6385105b7ce32" translate="yes" xml:space="preserve">
          <source>The following code can be used to create a color group with some colors specified:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b37ba9689c10ea6e7b41611b5534804a9777fadf" translate="yes" xml:space="preserve">
          <source>The following code constructs a &lt;a href=&quot;qbitarray&quot;&gt;QBitArray&lt;/a&gt; containing 200 bits initialized to false (0):</source>
          <target state="translated">다음 코드 는 false (0)로 초기화 된 200 비트를 포함 하는 &lt;a href=&quot;qbitarray&quot;&gt;QBitArray&lt;/a&gt; 를 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="17c52a5cdfe2cf03a9dd0c9879033a770dae8f91" translate="yes" xml:space="preserve">
          <source>The following code constructs a QBitArray containing 200 bits initialized to false (0):</source>
          <target state="translated">다음 코드는 false (0)로 초기화 된 200 비트를 포함하는 QBitArray를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="46d5cf67f34f8c8e9997cdd30ad3ac0200228592" translate="yes" xml:space="preserve">
          <source>The following code creates a &lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt; that manages the geometry of five &lt;a href=&quot;qpushbutton&quot;&gt;QPushButtons&lt;/a&gt;, as shown on the first screenshot above:</source>
          <target state="translated">다음 코드 는 위의 첫 번째 스크린 샷과 같이 다섯 개의 &lt;a href=&quot;qpushbutton&quot;&gt;QPushButtons&lt;/a&gt; 의 지오메트리를 관리 하는 &lt;a href=&quot;qhboxlayout&quot;&gt;QHBoxLayout&lt;/a&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="85264396902fd246c375c65bb69d739136d78a3e" translate="yes" xml:space="preserve">
          <source>The following code demonstrates how to set a single and multiple locales:</source>
          <target state="translated">다음 코드는 단일 및 다중 로캘을 설정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c4e4e05d234a7e4763a3135274cf7b3bb3b6fa61" translate="yes" xml:space="preserve">
          <source>The following code does work:</source>
          <target state="translated">다음 코드는 작동합니다.</target>
        </trans-unit>
        <trans-unit id="2a022eccd1589fa377d9f33e232b1910eec41184" translate="yes" xml:space="preserve">
          <source>The following code doubles the horizontal size of an object drawn on the canvas and halves its vertical size:</source>
          <target state="translated">다음 코드는 캔버스에 그려진 객체의 가로 크기를 두 배로 늘리고 세로 크기를 반으로 줄입니다.</target>
        </trans-unit>
        <trans-unit id="fe4e937d7a7849d700b0eb797314b2eb25a77f1c" translate="yes" xml:space="preserve">
          <source>The following code evaluates a JavaScript expression in the context of the above QML:</source>
          <target state="translated">다음 코드는 위의 QML 컨텍스트에서 JavaScript 표현식을 평가합니다.</target>
        </trans-unit>
        <trans-unit id="5301c6be98ebf4de24f7b1f5daeb206c48e946c0" translate="yes" xml:space="preserve">
          <source>The following code examples are a small part of the &lt;code&gt;map&lt;/code&gt; component in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlocation-mapviewer-example.html#&quot;&gt;Map Viewer (QML)&lt;/a&gt; example. The snippets demonstrate the declaration of the &lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt; component.</source>
          <target state="translated">다음 코드 예제는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtlocation-mapviewer-example.html#&quot;&gt;QML (Map Viewer)&lt;/a&gt; 예제 에서 &lt;code&gt;map&lt;/code&gt; 구성 요소의 일부입니다 . 스 니펫은 &lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt; 구성 요소 의 선언을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9febf8be7dbd0b9003bfb2741c874dfb3eda31d5" translate="yes" xml:space="preserve">
          <source>The following code examples are a small part of the &lt;code&gt;map&lt;/code&gt; component in the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtlocation-mapviewer-example.html&quot;&gt;Map Viewer (QML)&lt;/a&gt; example. The snippets demonstrate the declaration of the &lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt; component.</source>
          <target state="translated">The following code examples are a small part of the &lt;code&gt;map&lt;/code&gt; component in the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtlocation-mapviewer-example.html&quot;&gt;Map Viewer (QML)&lt;/a&gt; example. The snippets demonstrate the declaration of the &lt;a href=&quot;qml-qtlocation-geocodemodel&quot;&gt;GeocodeModel&lt;/a&gt; component.</target>
        </trans-unit>
        <trans-unit id="a349e1ed3604dff924e8b747530df2b1fb21f0a9" translate="yes" xml:space="preserve">
          <source>The following code fragment shows a safe way to remove all items from a layout:</source>
          <target state="translated">다음 코드 조각은 레이아웃에서 모든 항목을 제거하는 안전한 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3793f884131930e349131b4582a91bb94d382094" translate="yes" xml:space="preserve">
          <source>The following code has the same result, but here the putPoints() function overwrites rather than extends:</source>
          <target state="translated">다음 코드는 결과는 동일하지만 여기서 putPoints () 함수는 확장하지 않고 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="043e15681fa36029257711b4647dea86a27d79d2" translate="yes" xml:space="preserve">
          <source>The following code illustrates how to use &lt;a href=&quot;qbarcategoryaxis&quot;&gt;QBarCategoryAxis&lt;/a&gt;:</source>
          <target state="translated">다음 코드는 &lt;a href=&quot;qbarcategoryaxis&quot;&gt;QBarCategoryAxis&lt;/a&gt; 사용 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="03a9476347778d7aa8fc046e0ffb028739341aa9" translate="yes" xml:space="preserve">
          <source>The following code illustrates how to use QBarCategoryAxis:</source>
          <target state="translated">The following code illustrates how to use QBarCategoryAxis:</target>
        </trans-unit>
        <trans-unit id="b2a46bb338608f525ab43fbd77bc5952d090ef10" translate="yes" xml:space="preserve">
          <source>The following code instantiates the second node on the network and connects it with the source host node:</source>
          <target state="translated">다음 코드는 네트워크의 두 번째 노드를 인스턴스화하고 소스 호스트 노드와 연결합니다.</target>
        </trans-unit>
        <trans-unit id="f172e46f9d66d22472c1c0651821cba496f046f0" translate="yes" xml:space="preserve">
          <source>The following code loads this QML file as a component, creates an instance of this component using &lt;a href=&quot;qqmlcomponent#create&quot;&gt;create&lt;/a&gt;(), and then queries the &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;'s &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; value:</source>
          <target state="translated">다음 코드는이 QML 파일을 구성 요소로로드하고 &lt;a href=&quot;qqmlcomponent#create&quot;&gt;create&lt;/a&gt; ()를 사용하여이 구성 요소의 인스턴스를 만든 다음 &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; 의 &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;너비&lt;/a&gt; 값 을 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="a8198c87c631ac4a6a8ce8da78cab3e143d35189" translate="yes" xml:space="preserve">
          <source>The following code performs all those checks, except for the denormal one, which is expected to be taken into account by the system FPU or floating point emulation directly.</source>
          <target state="translated">다음 코드는 시스템 FPU 또는 부동 소수점 에뮬레이션에서 직접 고려할 것으로 예상되는 비정상적인 검사를 제외한 모든 검사를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="ac75d94af397cea73e943a7bdb23a2b1fcf80180" translate="yes" xml:space="preserve">
          <source>The following code shows how &lt;a href=&quot;qwidget#dragEnterEvent&quot;&gt;dragEnterEvent()&lt;/a&gt; can be reimplemented to tell the drag and drop system that we can only handle plain text:</source>
          <target state="translated">다음 코드는 드래그 앤 드롭 시스템에 일반 텍스트 만 처리 할 수 ​​있도록 &lt;a href=&quot;qwidget#dragEnterEvent&quot;&gt;dragEnterEvent ()&lt;/a&gt; 를 다시 구현 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="bda50a4241f6719840d500340f5419ca65684a6c" translate="yes" xml:space="preserve">
          <source>The following code shows how an image with an alpha channel can be used to generate a mask for a widget:</source>
          <target state="translated">다음 코드는 알파 채널이있는 이미지를 사용하여 위젯의 마스크를 생성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9b898e52098db9910b5be0f8a0c5dc66348d1514" translate="yes" xml:space="preserve">
          <source>The following code shows how each item of data, corresponding to a given list of indexes, is encoded as plain text and stored in a &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; object.</source>
          <target state="translated">다음 코드는 주어진 색인 목록에 해당하는 각 데이터 항목이 일반 텍스트로 인코딩되어 &lt;a href=&quot;qmimedata&quot;&gt;QMimeData&lt;/a&gt; 오브젝트에 저장되는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="1fcdb5bc79e2f8016a52495136785e15cbc462ee" translate="yes" xml:space="preserve">
          <source>The following code shows how it can be implemented; in this example we simply display a message box when &lt;code&gt;s3&lt;/code&gt; is entered, then immediately return to the previous child state of &lt;code&gt;s1&lt;/code&gt; via the history state.</source>
          <target state="translated">다음 코드는 구현 방법을 보여줍니다. 이 예에서는 &lt;code&gt;s3&lt;/code&gt; 을 입력 할 때 메시지 상자를 표시 한 다음 즉시 히스토리 상태를 통해 &lt;code&gt;s1&lt;/code&gt; 의 이전 하위 상태로 돌아갑니다 .</target>
        </trans-unit>
        <trans-unit id="b590fb955591f0b182f22cd5c3650795716b8b24" translate="yes" xml:space="preserve">
          <source>The following code shows how to display a 64x64 pixel icon:</source>
          <target state="translated">다음 코드는 64x64 픽셀 아이콘을 표시하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="cdb371047988ee1515fbe9e1266b8bf30fb2e6b5" translate="yes" xml:space="preserve">
          <source>The following code snippet demonstrates how to perform a mathematical operation of &lt;code&gt;&quot;2 + 2&quot;&lt;/code&gt; in a remote application called &lt;code&gt;com.example.Calculator&lt;/code&gt;, accessed via the session bus.</source>
          <target state="translated">다음 코드 스 니펫은 &lt;code&gt;com.example.Calculator&lt;/code&gt; 라는 원격 애플리케이션 에서 세션 버스를 통해 액세스 하는 &lt;code&gt;&quot;2 + 2&quot;&lt;/code&gt; 의 수학 연산을 수행하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="5f069042ffb2a23936d5c0a334156a911e5f751d" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates adding the series to the chart and setting up &lt;a href=&quot;qdatetimeaxis&quot;&gt;QDateTimeAxis&lt;/a&gt;:</source>
          <target state="translated">다음 코드 스 니펫은 차트에 시리즈를 추가하고 &lt;a href=&quot;qdatetimeaxis&quot;&gt;QDateTimeAxis&lt;/a&gt; 설정을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9f26c361a31c3b9976230277bc735bee880a0bb0" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates adding the series to the chart and setting up QDateTimeAxis:</source>
          <target state="translated">The following code snippet illustrates adding the series to the chart and setting up QDateTimeAxis:</target>
        </trans-unit>
        <trans-unit id="39031a87a5c922933791e9a1a9f6390d1b4d915c" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates how to create a basic scatter chart:</source>
          <target state="translated">다음 코드 스 니펫은 기본 분산 형 차트를 만드는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="27a6450f38edc567378333b6c51fcb8f6a2a3551" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates how to create a basic spline chart:</source>
          <target state="translated">다음 코드 스 니펫은 기본 스플라인 차트를 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7ce500357262455677e69d3ce7176dc98a482463" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates how to set a cookie filter:</source>
          <target state="translated">다음 코드 스 니펫은 쿠키 필터를 설정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="28d455079cdec048bb4a260f7b86ddee8e2e2c53" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates how to use &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; to draw the focus rectangle from a custom widget's paintEvent():</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; 을 사용 하여 사용자 정의 위젯의 paintEvent ()에서 초점 사각형을 그리는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="78cec12c37e053d0b1f3bbf954acb96bccdb1440" translate="yes" xml:space="preserve">
          <source>The following code snippet illustrates the main .cpp file of the project:</source>
          <target state="translated">다음 코드 스 니펫은 프로젝트의 기본 .cpp 파일을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6cdddd17dcaeb8349e957ad358a7488490690032" translate="yes" xml:space="preserve">
          <source>The following code snippet loads a library, resolves the symbol &quot;mysymbol&quot;, and calls the function if everything succeeded. If something goes wrong, e.g. the library file does not exist or the symbol is not defined, the function pointer will be &lt;code&gt;nullptr&lt;/code&gt; and won't be called.</source>
          <target state="translated">다음 코드 스 니펫은 라이브러리를로드하고 &quot;mysymbol&quot;기호를 확인한 다음 모든 것이 성공하면 함수를 호출합니다. 라이브러리 파일이 없거나 심볼이 정의되지 않은 등 무언가 잘못되면 함수 포인터는 &lt;code&gt;nullptr&lt;/code&gt; 이며 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="98f381cceec1251eb4ce86fb58d9eb779a3b21d4" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how a script function can be defined and then invoked from C++ using &lt;a href=&quot;qjsvalue#call&quot;&gt;QJSValue::call&lt;/a&gt;():</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;qjsvalue#call&quot;&gt;QJSValue :: call&lt;/a&gt; ()을 사용하여 스크립트 함수를 정의한 다음 C ++에서 호출하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="2660e5e38bb8f6b9689c658829a3ed8e20a49437" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how the &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel&lt;/a&gt; was set up:</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;qsqlrelationaltablemodel&quot;&gt;QSqlRelationalTableModel의&lt;/a&gt; 설정 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="bdfb414b5845fbef3e67ad79a35ee3c2b10f2627" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how the QSqlRelationalTableModel was set up:</source>
          <target state="translated">The following code snippet shows how the QSqlRelationalTableModel was set up:</target>
        </trans-unit>
        <trans-unit id="2d598fded3da2a6333709571182b561d0d90798a" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to use a specific &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; subclass to paint a push button:</source>
          <target state="translated">다음 코드 스 니펫은 특정 &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; 서브 클래스를 사용하여 푸시 버튼을 그리는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="b4f94882d5a0bae22fe818046c82f3c26b11114c" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to use a specific QStyleOption subclass to paint a push button:</source>
          <target state="translated">The following code snippet shows how to use a specific QStyleOption subclass to paint a push button:</target>
        </trans-unit>
        <trans-unit id="e89d58f09898697119341d12921596614c437b8c" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to write data to a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; using &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; and &lt;a href=&quot;qbuffer&quot;&gt;QBuffer&lt;/a&gt;:</source>
          <target state="translated">다음 코드 스 니펫은 &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; 및 &lt;a href=&quot;qbuffer&quot;&gt;QBuffer를&lt;/a&gt; 사용하여 &lt;a href=&quot;qbytearray&quot;&gt;QByteArray에&lt;/a&gt; 데이터를 쓰는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="032c2bda2ef9324cfb58f49341f96069c0a1dd6e" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how to write data to a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; using &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; and QBuffer:</source>
          <target state="translated">The following code snippet shows how to write data to a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; using &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt; and QBuffer:</target>
        </trans-unit>
        <trans-unit id="d52c54c334b5058d97e9cca91d5ffae062c13b61" translate="yes" xml:space="preserve">
          <source>The following code snippet shows how you could select an appropriate icon that represents the language of the current locale.</source>
          <target state="translated">다음 코드 스 니펫은 현재 로케일의 언어를 나타내는 적절한 아이콘을 선택하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="5268efeefe91998d10f64755e31fd5ef59fbbfdc" translate="yes" xml:space="preserve">
          <source>The following code snippet shows the declaration of an Address object.</source>
          <target state="translated">다음 코드 조각은 Address 객체의 선언을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="767c4a394d5ff52abc62fa8d00954645322004b4" translate="yes" xml:space="preserve">
          <source>The following code snippet shows the invocation of the test:</source>
          <target state="translated">다음 코드 스 니펫은 테스트 호출을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="4a4600e76fac58ff889a5b77cdd2ceefe29d1e8a" translate="yes" xml:space="preserve">
          <source>The following code snippets show the usage of suspension mechanism:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4eecdff8d00b92eb892303a7ebe474ba908ea027" translate="yes" xml:space="preserve">
          <source>The following code uses a custom dialog to handle the request:</source>
          <target state="translated">다음 코드는 사용자 정의 대화 상자를 사용하여 요청을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="a639eb22142b3cf48dee8ff6b83f201bf0a75a8c" translate="yes" xml:space="preserve">
          <source>The following code uses a custom menu to handle the request:</source>
          <target state="translated">다음 코드는 사용자 정의 메뉴를 사용하여 요청을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="c205a1952e147705c9a68ccb81a21b9b337e105d" translate="yes" xml:space="preserve">
          <source>The following code uses the &lt;a href=&quot;qml-qtwebengine-webengineview#action-method&quot;&gt;WebEngineView::action()&lt;/a&gt; method to check if the the copy action is enabled:</source>
          <target state="translated">다음 코드는 &lt;a href=&quot;qml-qtwebengine-webengineview#action-method&quot;&gt;WebEngineView :: action ()&lt;/a&gt; 메소드를 사용하여 복사 조치가 사용 가능한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="c669973805f8ec791d616d68fbe25e905b5a7432" translate="yes" xml:space="preserve">
          <source>The following code will create a &lt;a href=&quot;qml-qtquick-layouts-stacklayout&quot;&gt;StackLayout&lt;/a&gt; where only the 'plum' rectangle is visible.</source>
          <target state="translated">다음 코드는 'plum'사각형 만 보이는 &lt;a href=&quot;qml-qtquick-layouts-stacklayout&quot;&gt;StackLayout&lt;/a&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="926a5bf26dc168504ab08b75b68bcbff2f7e755d" translate="yes" xml:space="preserve">
          <source>The following code will create a StackLayout where only the 'plum' rectangle is visible.</source>
          <target state="translated">The following code will create a StackLayout where only the 'plum' rectangle is visible.</target>
        </trans-unit>
        <trans-unit id="5dd0c0478b45646ec6cd90bfb5b3f0d86953dccd" translate="yes" xml:space="preserve">
          <source>The following code will map the columns of the model to widgets called &lt;code&gt;mySpinBox&lt;/code&gt;, &lt;code&gt;myLineEdit&lt;/code&gt; and &lt;code&gt;myCountryChooser&lt;/code&gt;:</source>
          <target state="translated">다음 코드는 모델의 열을 &lt;code&gt;mySpinBox&lt;/code&gt; , &lt;code&gt;myLineEdit&lt;/code&gt; 및 &lt;code&gt;myCountryChooser&lt;/code&gt; 라는 위젯에 매핑합니다 .</target>
        </trans-unit>
        <trans-unit id="666faf82255da6fd3ed385bf4df72750e02a817c" translate="yes" xml:space="preserve">
          <source>The following code would create a &lt;code&gt;Button&lt;/code&gt; with a defined text string for the child &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; object:</source>
          <target state="translated">다음 코드는 자식 &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; 객체에 대해 정의 된 텍스트 문자열 로 &lt;code&gt;Button&lt;/code&gt; 을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="dfbdd901ff25d6291f838d640691dd6d62dd4884" translate="yes" xml:space="preserve">
          <source>The following colors are defined in the &lt;code&gt;QColorConstants&lt;/code&gt; namespace:</source>
          <target state="translated">The following colors are defined in the &lt;code&gt;QColorConstants&lt;/code&gt; namespace:</target>
        </trans-unit>
        <trans-unit id="6128b2739f57896afad7b7ed5e7b1bbb671d99ef" translate="yes" xml:space="preserve">
          <source>The following commands are used to render source code without formatting. The source code begins on a new line, rendered in the code.</source>
          <target state="translated">다음 명령은 형식화없이 소스 코드를 렌더링하는 데 사용됩니다. 소스 코드는 새로운 줄에서 시작하여 코드로 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="69e8c6d23a472e53d606dd9bd07f599414c67dff" translate="yes" xml:space="preserve">
          <source>The following commands enable you to include code snippets from external files. You can make QDoc include the complete contents of a file, or you can quote specific parts of the file and skip others. The typical use of the latter is to quote a file chunk by chunk.</source>
          <target state="translated">다음 명령을 사용하면 외부 파일의 코드 스 니펫을 포함 할 수 있습니다. QDoc이 파일의 전체 내용을 포함 시키거나 파일의 특정 부분을 인용하고 다른 부분은 생략 할 수 있습니다. 후자의 일반적인 용도는 파일 청크를 청크로 인용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7cf32e4edea6242b0bd00f8764dfab8ebdcd7cfa" translate="yes" xml:space="preserve">
          <source>The following compilers and configurations are supported in Qt 6.0:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ff62511c97370bc92280fbd456fa386d2aa28671" translate="yes" xml:space="preserve">
          <source>The following concepts are supported by the framework:</source>
          <target state="translated">프레임 워크에서 지원하는 개념은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="88a5c0700dcdcd92921e10d41dddbdb63a575073" translate="yes" xml:space="preserve">
          <source>The following configurations are supported.</source>
          <target state="translated">다음 구성이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="8fe90b1288f44498fb756129bc5a0a2af786bb67" translate="yes" xml:space="preserve">
          <source>The following configurations are supported:</source>
          <target state="translated">다음 구성이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="74a494ba6c43caeca0ccafe62f9a851008e8e4c4" translate="yes" xml:space="preserve">
          <source>The following constructs are illegal. All of them have alternatives which we think are usually better, so removing these limitations is not a high priority for us.</source>
          <target state="translated">다음 구성은 불법입니다. 그들 모두는 우리가 일반적으로 더 낫다고 생각하는 대안을 가지고 있기 때문에 이러한 제한을 제거하는 것이 우리에게는 우선 순위가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="6e6fcf23f5a940bb6fa265af687c9357e8989051" translate="yes" xml:space="preserve">
          <source>The following contrived example illustrates this point:</source>
          <target state="translated">다음은이 점을 잘 보여주는 예입니다.</target>
        </trans-unit>
        <trans-unit id="abfff29bd4244e0e57d6164b12aa96f10b0b5e66" translate="yes" xml:space="preserve">
          <source>The following conversions are supported by Qt:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f04fbe636c682711bdcd9e60c5df11270f5ec431" translate="yes" xml:space="preserve">
          <source>The following custom cleanup handlers exist:</source>
          <target state="translated">다음과 같은 사용자 정의 정리 핸들러가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecfa53e4c2678533026b3059637b6eb015864860" translate="yes" xml:space="preserve">
          <source>The following declares version 2.0 of a class that exposes only its own API, and is available in the &quot;Insert Objects&quot; dialog of Microsoft Office applications.</source>
          <target state="translated">다음은 자체 API 만 제공하며 Microsoft Office 응용 프로그램의 &quot;개체 삽입&quot;대화 상자에서 사용할 수있는 클래스 버전 2.0을 선언합니다.</target>
        </trans-unit>
        <trans-unit id="1508ac5b8249c498bcd3690f3eea41d2ea457487" translate="yes" xml:space="preserve">
          <source>The following demonstrates favorite removal:</source>
          <target state="translated">다음은 즐겨 찾기 제거를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="f6c3b288961376c9cea8e19e718eeea33fe045d1" translate="yes" xml:space="preserve">
          <source>The following demonstrates how to assign multiple phone numbers to a place in JavaScript:</source>
          <target state="translated">다음은 JavaScript에서 장소에 여러 전화 번호를 할당하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7591375e17b65673aba90205187132347fbe5d26" translate="yes" xml:space="preserve">
          <source>The following demonstrates how to save a new favorite instance. A call is made to create/initialize the favorite instance and then the instance is saved.</source>
          <target state="translated">다음은 새로운 즐겨 찾기 인스턴스를 저장하는 방법을 보여줍니다. 즐겨 찾는 인스턴스를 생성 / 초기화하기 위해 호출 한 다음 인스턴스가 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="4f09c99048583f695dea4483f6d9db6b244b4d98" translate="yes" xml:space="preserve">
          <source>The following dependencies are needed for using tools such as &lt;code&gt;adb&lt;/code&gt; or &lt;code&gt;gdb&lt;/code&gt; which can be used by Qt Creator:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="fd3c8dd946d0bbc02dd6d4285c7c3f9b202ec413" translate="yes" xml:space="preserve">
          <source>The following deprecated functions are removed in Qt 6:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9caf414cbaffd3c1a599a6fa1276cb80133ff9a4" translate="yes" xml:space="preserve">
          <source>The following diagram describes the steps that happen during an invocation of the &lt;code&gt;qsb&lt;/code&gt; tool:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="09ea97e5f665055fa43da3e7a758337d948f5e38" translate="yes" xml:space="preserve">
          <source>The following diagram illustrates the layout of a popup within a window:</source>
          <target state="translated">다음 다이어그램은 창 내 팝업 레이아웃을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="8ad4e192a221f0cba404da5dc9e5e281728b1827" translate="yes" xml:space="preserve">
          <source>The following diagram illustrates the layout of a typical control:</source>
          <target state="translated">다음 다이어그램은 일반적인 컨트롤의 레이아웃을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d1622058272d86d465912f50ccaa0b7e54c9a85c" translate="yes" xml:space="preserve">
          <source>The following diagram shows the configuration produced by the above code. Note that the left and right dock widgets will occupy the top and bottom corners of the main window in this layout.</source>
          <target state="translated">다음 다이어그램은 위 코드에서 생성 된 구성을 보여줍니다. 왼쪽 및 오른쪽 도크 위젯은이 레이아웃에서 기본 창의 상단 및 하단 모서리를 차지합니다.</target>
        </trans-unit>
        <trans-unit id="a8a6c288cc52a3dff47e75db8095e251df392b8e" translate="yes" xml:space="preserve">
          <source>The following diagram shows the state machine after the interrupt mechanism has been added.</source>
          <target state="translated">다음 다이어그램은 인터럽트 메커니즘이 추가 된 후 상태 머신을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9212d0bde1264613ef95585ca5def65b8e0bb41d" translate="yes" xml:space="preserve">
          <source>The following documents contain information about Qt's D-Bus integration features, and provide details about the mechanisms used to send and receive type information over the bus:</source>
          <target state="translated">다음 문서에는 Qt의 D-Bus 통합 기능에 대한 정보가 포함되어 있으며 버스를 통해 유형 정보를 송수신하는 데 사용되는 메커니즘에 대한 세부 정보가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="769d27cb354cbe0e7b29711fb4012187ccef06ce" translate="yes" xml:space="preserve">
          <source>The following entry in &lt;code&gt;project.pro&lt;/code&gt; ensures that the resources are built into the application binary, making them available when needed:</source>
          <target state="translated">&lt;code&gt;project.pro&lt;/code&gt; 의 다음 항목 은 리소스가 응용 프로그램 바이너리에 빌드되어 필요할 때 사용할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="4a321cbf3b29c620343d628dcaf485d9e7654ce9" translate="yes" xml:space="preserve">
          <source>The following enumeration values can be used as values of</source>
          <target state="translated">다음 열거 형 값을 다음과 같은 값으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35062726c8c7835d7a147656e6f2d2bd7135f019" translate="yes" xml:space="preserve">
          <source>The following example adds a button to be used with the example product in the previous section:</source>
          <target state="translated">다음 예제는 이전 섹션의 예제 제품과 함께 사용할 단추를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="0f312079a1e70935716efd12082111dcc7a20f0d" translate="yes" xml:space="preserve">
          <source>The following example animates the opacity of the popup when it enters the screen:</source>
          <target state="translated">다음 예제는 팝업이 화면에 들어갈 때 불투명도를 애니메이션으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="e2b0d5514bb42998a3f979b580bff29f328eeed9" translate="yes" xml:space="preserve">
          <source>The following example animates the opacity of the popup when it exits the screen:</source>
          <target state="translated">다음 예제는 팝업 화면이 종료 될 때 불투명도를 애니메이션으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="2007de81cf2d470bc6b7f0e9331a28aa7f12a137" translate="yes" xml:space="preserve">
          <source>The following example appends a simple string to the stream:</source>
          <target state="translated">다음 예제는 간단한 문자열을 스트림에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6e513167bdac3397fa5487a0d9820836fb9cf411" translate="yes" xml:space="preserve">
          <source>The following example appends all strings found in the &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; passed as input:</source>
          <target state="translated">다음 예제는 입력으로 전달 된 &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; 에서 찾은 모든 문자열을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="5f1507bded6dc8f04646b20de92ec8482d36cb39" translate="yes" xml:space="preserve">
          <source>The following example appends all strings found in the &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; passed as input:</source>
          <target state="translated">다음 예제는 입력으로 전달 된 &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; 에있는 모든 문자열을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="58ac2cedd3334b713ea7d2f3034b00b4cb8bad9c" translate="yes" xml:space="preserve">
          <source>The following example appends elements from the linked list of int and string pairs passed as input:</source>
          <target state="translated">다음 예제는 입력으로 전달 된 int 및 문자열 쌍의 링크 된 목록에서 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6e6967b0eea2626bc8398f7afa8cea91bb707bd3" translate="yes" xml:space="preserve">
          <source>The following example appends elements from the linked list of strings passed as input:</source>
          <target state="translated">다음 예제는 입력으로 전달 된 링크 된 문자열 목록의 요소를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="c5fa4e09dda4651ef59121fc6b77baa4fdc553df" translate="yes" xml:space="preserve">
          <source>The following example appends elements from the list of int and string pairs passed as input:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b559ca21a170d3007b90e9dd80c5983ddf38d271" translate="yes" xml:space="preserve">
          <source>The following example appends elements from the list of strings passed as input:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="e003c2419afff47850810afeb3a7e2b3217f9296" translate="yes" xml:space="preserve">
          <source>The following example attempts to store the purchase state of a consumable product using a custom made function. It only finalizes the transaction if saving the data was successful. Otherwise, it calls another custom function to display an error message to the user.</source>
          <target state="translated">다음 예는 사용자 정의 기능을 사용하여 소모품의 구매 상태를 저장하려고 시도합니다. 데이터 저장에 성공한 경우에만 트랜잭션을 완료합니다. 그렇지 않으면 다른 사용자 정의 함수를 호출하여 사용자에게 오류 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="321f9fa2f06863b13a3d5e063ab02b59ae74aacb" translate="yes" xml:space="preserve">
          <source>The following example bundles an icon theme called</source>
          <target state="translated">다음 예제는 아이콘 테마를 번들로 제공합니다.</target>
        </trans-unit>
        <trans-unit id="789a644db1d9395f4b9de02daa9780c883f500e7" translate="yes" xml:space="preserve">
          <source>The following example calls a custom function which either saves the information about the purchase or verifies that it is already saved. When the data has been verified, it finalizes the transaction. If it could not be verified, it calls another custom function to display an error message to the user. If the transaction is not finalized, the handler will be called again for the same transaction the next time the product is registered (on application start-up).</source>
          <target state="translated">다음 예는 구매에 대한 정보를 저장하거나 이미 저장되어 있는지 확인하는 사용자 정의 함수를 호출합니다. 데이터가 확인되면 트랜잭션이 완료됩니다. 확인할 수없는 경우 다른 사용자 정의 함수를 호출하여 사용자에게 오류 메시지를 표시합니다. 트랜잭션이 완료되지 않은 경우 다음에 제품을 등록 할 때 (애플리케이션 시작시) 동일한 트랜잭션에 대해 핸들러가 다시 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="6936ef2d15d1d5946cef9e61335821d72ee453fe" translate="yes" xml:space="preserve">
          <source>The following example calls custom methods to save data about a succeeded purchase so that it survives across application runs. After verifying that the data has been stored, it finalizes the transaction. When the transaction has failed, it displays information about the failure to the user and finalizes the transaction.</source>
          <target state="translated">다음 예제는 사용자 정의 메소드를 호출하여 성공한 구매에 대한 데이터를 저장하여 애플리케이션 실행시에도 지속됩니다. 데이터가 저장되었는지 확인한 후 트랜잭션을 마무리합니다. 트랜잭션이 실패하면 사용자에게 실패에 대한 정보를 표시하고 트랜잭션을 완료합니다.</target>
        </trans-unit>
        <trans-unit id="9a83bd0ff7ce1f15b046fe99b2dac1a7d14a7b2d" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the &lt;a href=&quot;qml-qtcharts-valueaxis&quot;&gt;ValueAxis&lt;/a&gt; type:</source>
          <target state="translated">다음 예제 코드는 &lt;a href=&quot;qml-qtcharts-valueaxis&quot;&gt;ValueAxis&lt;/a&gt; 유형 을 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="efe3a2c14b84c5f2ba4e0a585c768d225bb22b93" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the &lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt; class:</source>
          <target state="translated">다음 예제 코드는 &lt;a href=&quot;qvalueaxis&quot;&gt;QValueAxis&lt;/a&gt; 클래스 를 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="6308c8afbc2fb7cad7c021934cb90a1e96ed8cbd" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the &lt;a href=&quot;qwintaskbarbutton&quot;&gt;QWinTaskbarButton&lt;/a&gt; and &lt;a href=&quot;qwintaskbarprogress&quot;&gt;QWinTaskbarProgress&lt;/a&gt; classes to adjust the look of the taskbar button:</source>
          <target state="translated">다음 예제 코드는 &lt;a href=&quot;qwintaskbarbutton&quot;&gt;QWinTaskbarButton&lt;/a&gt; 및 &lt;a href=&quot;qwintaskbarprogress&quot;&gt;QWinTaskbarProgress&lt;/a&gt; 클래스를 사용 하여 작업 표시 줄 단추의 모양을 조정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="9001b0d6725de4fbc7aee65597c392b690422e16" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the QValueAxis class:</source>
          <target state="translated">The following example code illustrates how to use the QValueAxis class:</target>
        </trans-unit>
        <trans-unit id="80661600a7b4843e0b3c5876648f4daf025b6073" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the QWinTaskbarButton and &lt;a href=&quot;qwintaskbarprogress&quot;&gt;QWinTaskbarProgress&lt;/a&gt; classes to adjust the look of the taskbar button:</source>
          <target state="translated">The following example code illustrates how to use the QWinTaskbarButton and &lt;a href=&quot;qwintaskbarprogress&quot;&gt;QWinTaskbarProgress&lt;/a&gt; classes to adjust the look of the taskbar button:</target>
        </trans-unit>
        <trans-unit id="3bb0797c1ea6f6b9d13d33bfae5477e8211dcbd4" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the ValueAxis type:</source>
          <target state="translated">The following example code illustrates how to use the ValueAxis type:</target>
        </trans-unit>
        <trans-unit id="fefc97157f19f5289a81b8fed60b5df32fd5e273" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the functions in the &lt;a href=&quot;qwinthumbnailtoolbar&quot;&gt;QWinThumbnailToolBar&lt;/a&gt; and &lt;a href=&quot;qwinthumbnailtoolbutton&quot;&gt;QWinThumbnailToolButton&lt;/a&gt; class to implement a thumbnail toolbar:</source>
          <target state="translated">다음 예제 코드는 &lt;a href=&quot;qwinthumbnailtoolbar&quot;&gt;QWinThumbnailToolBar&lt;/a&gt; 및 &lt;a href=&quot;qwinthumbnailtoolbutton&quot;&gt;QWinThumbnailToolButton&lt;/a&gt; 클래스 의 함수를 사용하여 축소판 도구 모음을 구현하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="cf6f0c83480f486835856efc735f1ab84d5fd510" translate="yes" xml:space="preserve">
          <source>The following example code illustrates how to use the functions in the QWinThumbnailToolBar and &lt;a href=&quot;qwinthumbnailtoolbutton&quot;&gt;QWinThumbnailToolButton&lt;/a&gt; class to implement a thumbnail toolbar:</source>
          <target state="translated">The following example code illustrates how to use the functions in the QWinThumbnailToolBar and &lt;a href=&quot;qwinthumbnailtoolbutton&quot;&gt;QWinThumbnailToolButton&lt;/a&gt; class to implement a thumbnail toolbar:</target>
        </trans-unit>
        <trans-unit id="c33923f84776b95ca304d2788d87fdec5cc0ce1a" translate="yes" xml:space="preserve">
          <source>The following example creates a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; with five elements:</source>
          <target state="translated">다음 예제 는 다섯 개의 요소 로 &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="3958f58be50c8764f3558509b8f62f1a6bb02402" translate="yes" xml:space="preserve">
          <source>The following example creates a CustomCamera at position [0, 200, 300] in the scene, with a 30 degree downward pitch, and a custom projection matrix based on custom near and far plane distances, and a custom field of view.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3475cd308ced279e5cf614fc3a64540a1e4bbc63" translate="yes" xml:space="preserve">
          <source>The following example creates a FrustumCamera at position [0, 200, 300] in the scene, with a 30 degree downward pitch, and where the intersection of the frustum and the near plane is given by the rectangle that has a bottom left corner at [-5, -5], and a top right corner at [5, 5].</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d0e261968993681b39a8b1708461a383d91c5669" translate="yes" xml:space="preserve">
          <source>The following example creates a OrthographicCamera at position [0, 200, 300] in the scene, and with a 30 degree downward pitch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c57e8f89d207f5eb667e1b19731acf7a6aa4616" translate="yes" xml:space="preserve">
          <source>The following example creates a PerspectiveCamera at position [0, 200, 300] in the scene, a field of view of 90 degrees and with a 30 degree downward pitch.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="32d80cefdbc0088c84740e0a1b1082d3f60e3334" translate="yes" xml:space="preserve">
          <source>The following example creates a palette from the &lt;code&gt;Active&lt;/code&gt; color group and uses this to color the window and text items appropriately:</source>
          <target state="translated">다음 예제는 &lt;code&gt;Active&lt;/code&gt; 색상 그룹 에서 팔레트를 작성하고 이를 사용하여 창 및 텍스트 항목의 색상을 적절하게 지정합니다.</target>
        </trans-unit>
        <trans-unit id="078511cd623b70379909966583306c3a0ddc24df" translate="yes" xml:space="preserve">
          <source>The following example creates a vertex shader program using the supplied source &lt;code&gt;code&lt;/code&gt;. Once compiled and linked, the shader program is activated in the current &lt;a href=&quot;gui-changes-qt6#qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; by calling &lt;a href=&quot;qopenglshaderprogram#bind&quot;&gt;QOpenGLShaderProgram::bind&lt;/a&gt;():</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="90fa58ca4101a85bcd3df5a18bf54d10c96d3011" translate="yes" xml:space="preserve">
          <source>The following example creates a vertex shader program using the supplied source &lt;code&gt;code&lt;/code&gt;. Once compiled and linked, the shader program is activated in the current &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; by calling &lt;a href=&quot;qopenglshaderprogram#bind&quot;&gt;QOpenGLShaderProgram::bind&lt;/a&gt;():</source>
          <target state="translated">다음 예제는 제공된 소스 &lt;code&gt;code&lt;/code&gt; 사용하여 정점 셰이더 프로그램을 만듭니다 . 컴파일 및 링크되면 셰이더 프로그램은 &lt;a href=&quot;qopenglshaderprogram#bind&quot;&gt;QOpenGLShaderProgram :: bind&lt;/a&gt; ()를 호출 하여 현재 &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; 에서 활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="93c96c6c408a634c6e6054cbb728d2b6f1ffd18a" translate="yes" xml:space="preserve">
          <source>The following example creates a view based on an SQL data model:</source>
          <target state="translated">다음 예제는 SQL 데이터 모델을 기반으로 뷰를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="59b5d4440985280dd7578090609cbcb09f7d4c11" translate="yes" xml:space="preserve">
          <source>The following example declares a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; item with a gradient starting with red, blending to yellow at one third of the height of the rectangle, and ending with green:</source>
          <target state="translated">다음 예제 에서는 빨간색으로 시작하고 사각형 높이의 1/3에서 노란색으로 혼합되고 녹색으로 끝나는 그라디언트 로 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 항목을 선언합니다 .</target>
        </trans-unit>
        <trans-unit id="9081678b9419eb58f8254c031612400fbec8c684" translate="yes" xml:space="preserve">
          <source>The following example defines a Behavior fading out and fading in its target object when the property it controls changes:</source>
          <target state="translated">The following example defines a Behavior fading out and fading in its target object when the property it controls changes:</target>
        </trans-unit>
        <trans-unit id="6874a5fb9612a0fa6ef90bb3b79e40e2bf027db2" translate="yes" xml:space="preserve">
          <source>The following example defines two contexts - &lt;code&gt;context1&lt;/code&gt; and &lt;code&gt;context2&lt;/code&gt;. The second context overrides the &quot;b&quot; context property inherited from the first with a new value.</source>
          <target state="translated">다음 예제는 &lt;code&gt;context1&lt;/code&gt; 및 &lt;code&gt;context2&lt;/code&gt; 의 두 컨텍스트를 정의합니다 . 두 번째 컨텍스트는 첫 번째 컨텍스트에서 상속 된 &quot;b&quot;컨텍스트 특성을 새 값으로 대체합니다.</target>
        </trans-unit>
        <trans-unit id="56779f1b8c3e899ba64384a5bb4c67ffff674a17" translate="yes" xml:space="preserve">
          <source>The following example demonstrates a custom rounded button that has a styled drop shadow in the &lt;a href=&quot;qtquickcontrols2-material&quot;&gt;Material style&lt;/a&gt;, and looks flat in other styles. The files are organized so that the Material version of &lt;code&gt;CustomButton.qml&lt;/code&gt; is placed into a &lt;code&gt;+Material&lt;/code&gt; sub-directory.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f196eace9f08d98b8ec3afdb932443152cf8b9cb" translate="yes" xml:space="preserve">
          <source>The following example demonstrates a custom rounded button that has a styled drop shadow in the &lt;a href=&quot;qtquickcontrols2-material&quot;&gt;Material style&lt;/a&gt;, and looks flat in other styles. The files are organized so that the Material version of &lt;code&gt;CustomButton.qml&lt;/code&gt; is placed into a &lt;code&gt;+material&lt;/code&gt; sub-directory.</source>
          <target state="translated">The following example demonstrates a custom rounded button that has a styled drop shadow in the &lt;a href=&quot;qtquickcontrols2-material&quot;&gt;Material style&lt;/a&gt;, and looks flat in other styles. The files are organized so that the Material version of &lt;code&gt;CustomButton.qml&lt;/code&gt; is placed into a &lt;code&gt;+material&lt;/code&gt; sub-directory.</target>
        </trans-unit>
        <trans-unit id="2b5c3ce81872a0281a5c72d213bdf0961a8e0ecd" translate="yes" xml:space="preserve">
          <source>The following example demonstrates a custom rounded button that has a styled drop shadow in the &lt;a href=&quot;qtquickcontrols2-material#&quot;&gt;Material style&lt;/a&gt;, and looks flat in other styles. The files are organized so that the Material version of &lt;code&gt;CustomButton.qml&lt;/code&gt; is placed into a &lt;code&gt;+material&lt;/code&gt; sub-directory.</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;qtquickcontrols2-material#&quot;&gt;Material 스타일&lt;/a&gt; 에 스타일이있는 그림자가 있고 다른 스타일에 평평하게 보이는 사용자 정의 둥근 버튼을 보여줍니다 . &lt;code&gt;CustomButton.qml&lt;/code&gt; 의 재질 버전이 &lt;code&gt;+material&lt;/code&gt; 하위 디렉토리에 배치 되도록 파일이 구성 됩니다.</target>
        </trans-unit>
        <trans-unit id="48ab40f0d947a5a2925f13551f0d4b5f697a9a02" translate="yes" xml:space="preserve">
          <source>The following example demonstrates appending content to an editable combo box by reacting to the &lt;a href=&quot;qml-qtquick-controls2-combobox#accepted-signal&quot;&gt;accepted&lt;/a&gt; signal.</source>
          <target state="translated">다음 예제에서는 &lt;a href=&quot;qml-qtquick-controls2-combobox#accepted-signal&quot;&gt;승인 된&lt;/a&gt; 신호 에 반응하여 편집 가능한 콤보 상자에 내용을 추가하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="8b3c8b177b1a92b1349c4a8ae0c81a1bbc007b7a" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how the macro can be used to set context properties on the QML engine:</source>
          <target state="translated">다음 예제는 매크로를 사용하여 QML 엔진에서 컨텍스트 특성을 설정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2aa9fdd767515675f7d459b3c8f8961f000d2d3c" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to assign a single phone number to a place in JavaScript:</source>
          <target state="translated">다음 예제는 단일 전화 번호를 JavaScript의 장소에 지정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a270b47356ae438755a16ab33fe6cac410dff601" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to pass custom flags to &lt;code&gt;CreateProcess&lt;/code&gt;. When starting a console process B from a console process A, &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; will reuse the console window of process A for process B by default. In this example, a new console window with a custom color scheme is created for the child process B instead.</source>
          <target state="translated">다음 예제는 사용자 정의 플래그를 &lt;code&gt;CreateProcess&lt;/code&gt; 에 전달하는 방법을 보여줍니다 . 콘솔 프로세스 A에서 콘솔 프로세스 B를 시작할 때 &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; 는 기본적으로 프로세스 B에 대해 프로세스 A의 콘솔 창을 재사용합니다. 이 예에서는 대신 하위 프로세스 B에 대해 사용자 정의 색 구성표가있는 새 콘솔 창이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="97ebb7c4c3ea4aa363bc51dc603da971a12f7216" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to pass custom flags to &lt;code&gt;CreateProcess&lt;/code&gt;. When starting a console process B from a console process A, &lt;a href=&quot;qtcore-changes-qt6#qprocess&quot;&gt;QProcess&lt;/a&gt; will reuse the console window of process A for process B by default. In this example, a new console window with a custom color scheme is created for the child process B instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3c8716cd3d5e195e9e26ce67de17f84792d466d6" translate="yes" xml:space="preserve">
          <source>The following example demonstrates how to use an incubator:</source>
          <target state="translated">다음 예는 인큐베이터를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e8d610cbc5024360e7e361e6b034f5a0267b6e07" translate="yes" xml:space="preserve">
          <source>The following example demonstrates the lighting effect on an object using an HDR image vs a single directional light:</source>
          <target state="translated">The following example demonstrates the lighting effect on an object using an HDR image vs a single directional light:</target>
        </trans-unit>
        <trans-unit id="46e2e23e8c39dcb82b548f498561006250ba9caa" translate="yes" xml:space="preserve">
          <source>The following example displays a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; that can be dragged along the X-axis. The opacity of the rectangle is reduced when it is dragged to the right.</source>
          <target state="translated">다음 예제는 X 축을 따라 드래그 할 수 있는 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;사각형&lt;/a&gt; 을 표시합니다 . 사각형을 오른쪽으로 드래그하면 사각형의 불투명도가 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="72809dcb71e91c9f048109c1967c27dffd1fd78d" translate="yes" xml:space="preserve">
          <source>The following example displays a flat list of all available categories:</source>
          <target state="translated">다음 예는 사용 가능한 모든 범주의 간단한 목록을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="1b3e70b6e6e8c14fc3276fec873ace7a4359cbc5" translate="yes" xml:space="preserve">
          <source>The following example displays a single &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;. In the default state, the rectangle is colored black. In the &quot;clicked&quot; state, a &lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt; object changes the rectangle's color to red. Clicking within the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; toggles the rectangle's state between the default state and the &quot;clicked&quot; state, thus toggling the color of the rectangle between black and red.</source>
          <target state="translated">다음 예제는 단일 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle을&lt;/a&gt; 표시합니다 . 기본 상태에서 사각형은 검은 색으로 표시됩니다. &quot;클릭 된&quot;상태에서 &lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt; 객체는 사각형의 색상을 빨간색으로 변경합니다. &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; 내에서 클릭하면 사각형 상태가 기본 상태와 &quot;클릭 한&quot;상태 사이에서 전환되므로 사각형의 색상이 검정과 빨강 사이에서 전환됩니다.</target>
        </trans-unit>
        <trans-unit id="8b9ac8dff6be8dee0fefb5784d9556ccb2df9de3" translate="yes" xml:space="preserve">
          <source>The following example displays the specified number in the correct format for the default locale:</source>
          <target state="translated">다음 예제는 지정된 숫자를 기본 로케일에 대한 올바른 형식으로 표시합니다.</target>
        </trans-unit>
        <trans-unit id="5bcb14d84e4150978eb5d7781f0eab34eb80c5f8" translate="yes" xml:space="preserve">
          <source>The following example enables the pinch and pan gestures on the map, but not flicking. So the map scrolling will halt immediately on releasing the mouse button / touch.</source>
          <target state="translated">다음 예제는지도에서 핀치 및 팬 제스처를 활성화하지만 깜박이지는 않습니다. 따라서 마우스 버튼 / 터치에서 손을 떼면지도 스크롤이 즉시 중단됩니다.</target>
        </trans-unit>
        <trans-unit id="c543fccab3e6f3cb9422e2c015ff69eaae712651" translate="yes" xml:space="preserve">
          <source>The following example enables the pinch gesture on a map and reacts to the finished event.</source>
          <target state="translated">다음 예는지도에서 핀치 제스처를 활성화하고 완료된 이벤트에 반응합니다.</target>
        </trans-unit>
        <trans-unit id="f11a5072827cb9854f65cc323b8fa0d222fdd82f" translate="yes" xml:space="preserve">
          <source>The following example encodes the equivalent of this JSON content:</source>
          <target state="translated">다음 예제는이 JSON 컨텐츠와 동등한 내용을 인코딩합니다.</target>
        </trans-unit>
        <trans-unit id="d524036093e34a90a79161e6dc3192e97c564efb" translate="yes" xml:space="preserve">
          <source>The following example function takes a variable name as its only argument, extracts a list of values from the variable with the &lt;a href=&quot;qmake-test-function-reference#eval-string&quot;&gt;eval()&lt;/a&gt; built-in function, and compiles a list of files:</source>
          <target state="translated">다음 예제 함수는 변수 이름을 유일한 인수로 사용하고 &lt;a href=&quot;qmake-test-function-reference#eval-string&quot;&gt;eval ()&lt;/a&gt; 내장 함수 를 사용하여 변수에서 값 목록을 추출하고 파일 목록을 컴파일합니다.</target>
        </trans-unit>
        <trans-unit id="31b4e6b5d8e2722c3d8ee9d58963cd07c10414ff" translate="yes" xml:space="preserve">
          <source>The following example has the same effect as the previous one, but it uses a context object.</source>
          <target state="translated">다음 예제는 이전 예제와 동일한 효과를 갖지만 컨텍스트 개체를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="214783ff38465c2242067ede39dce8207156d48f" translate="yes" xml:space="preserve">
          <source>The following example illustrates dynamic insertion of items to a &lt;a href=&quot;qml-qtquick-controls2-tabbar&quot;&gt;TabBar&lt;/a&gt;, which is one of the concrete implementations of Container.</source>
          <target state="translated">The following example illustrates dynamic insertion of items to a &lt;a href=&quot;qml-qtquick-controls2-tabbar&quot;&gt;TabBar&lt;/a&gt;, which is one of the concrete implementations of Container.</target>
        </trans-unit>
        <trans-unit id="a1d028f954d51e1eaa768a2c94d1b7debdeddd99" translate="yes" xml:space="preserve">
          <source>The following example illustrates dynamic insertion of items to a &lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;TabBar&lt;/a&gt;, which is one of the concrete implementations of Container.</source>
          <target state="translated">다음 예제 는 Container의 구체적인 구현 중 하나 인 &lt;a href=&quot;qtquickcontrols2-navigation#tabbar&quot;&gt;TabBar&lt;/a&gt; 에 항목을 동적으로 삽입하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="1a46a75e8cca25bf2b466e27890d64aaedf09224" translate="yes" xml:space="preserve">
          <source>The following example illustrates how a structure containing an integer and a string can be constructed using the &lt;a href=&quot;qdbustypesystem&quot;&gt;Qt D-Bus type system&lt;/a&gt;:</source>
          <target state="translated">The following example illustrates how a structure containing an integer and a string can be constructed using the &lt;a href=&quot;qdbustypesystem&quot;&gt;Qt D-Bus type system&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="ca40164f9ec6d68590386dcdad42f196b5dd3773" translate="yes" xml:space="preserve">
          <source>The following example illustrates how a structure containing an integer and a string can be constructed using the &lt;a href=&quot;qdbustypesystem#&quot;&gt;Qt D-Bus type system&lt;/a&gt;:</source>
          <target state="translated">다음 예제는 정수 및 문자열을 포함하는 구조가 &lt;a href=&quot;qdbustypesystem#&quot;&gt;Qt D-Bus 유형 시스템을&lt;/a&gt; 사용하여 구성되는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="d6c4cdd0cf3326dfb454a3df45462585caf89c96" translate="yes" xml:space="preserve">
          <source>The following example illustrates how the combined check state of children can be bound to the check state of the parent checkbox:</source>
          <target state="translated">다음 예제는 자식의 결합 된 검사 상태를 부모 확인란의 검사 상태에 바인딩하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="cace15d6bf210e8d74cdacf78bfc9b2e3aaa9a0e" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to assign a &lt;a href=&quot;qml-qt-labs-platform-menu&quot;&gt;Menu&lt;/a&gt; to a system tray icon:</source>
          <target state="translated">다음 예 는 시스템 트레이 아이콘에 &lt;a href=&quot;qml-qt-labs-platform-menu&quot;&gt;메뉴&lt;/a&gt; 를 할당하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="8d86739b213a2f9a68f7f2d989d9f2319980d21c" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to assign a &lt;a href=&quot;qtquicklabsplatform-changes-qt6#menu&quot;&gt;Menu&lt;/a&gt; to a system tray icon:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8258dcf46b8314f3a0b64c66af0bb96b737d1fe6" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to create wizard pages and add them to a wizard. For more advanced examples, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-dialogs-classwizard-example.html#&quot;&gt;Class Wizard&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-dialogs-licensewizard-example.html#&quot;&gt;License Wizard&lt;/a&gt;.</source>
          <target state="translated">다음 예제는 마법사 페이지를 작성하여 마법사에 추가하는 방법을 보여줍니다. 고급 예제는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-dialogs-classwizard-example.html#&quot;&gt;클래스 마법사&lt;/a&gt; 및 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-dialogs-licensewizard-example.html#&quot;&gt;라이센스 마법사를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e14ea9942cf768336832a16bd124c14fa69ded42" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to create wizard pages and add them to a wizard. For more advanced examples, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-dialogs-classwizard-example.html&quot;&gt;Class Wizard&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-dialogs-licensewizard-example.html&quot;&gt;License Wizard&lt;/a&gt;.</source>
          <target state="translated">The following example illustrates how to create wizard pages and add them to a wizard. For more advanced examples, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-dialogs-classwizard-example.html&quot;&gt;Class Wizard&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-dialogs-licensewizard-example.html&quot;&gt;License Wizard&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d1f58eba2c443b8a2af9c6543db315b31c1b8231" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to create wizard pages and add them to a wizard. For more advanced examples, see &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-dialogs-classwizard-example.html&quot;&gt;Class Wizard&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-dialogs-licensewizard-example.html&quot;&gt;License Wizard&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="82968110ae89ab7dc1b61419d67c4b267a87a658" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to keep each tab button at their implicit size instead of being resized to fit the tabbar:</source>
          <target state="translated">다음 예제는 탭 막대에 맞게 크기를 조정하는 대신 각 탭 단추를 암시 적 크기로 유지하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="61c2b18dd286130d0d4274f7eb8da86c32127fb4" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to update all widgets with new data whenever the selection of a &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt; named &lt;code&gt;myTableView&lt;/code&gt; changes:</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;qtableview&quot;&gt;myTableView&lt;/a&gt; 라는 &lt;code&gt;myTableView&lt;/code&gt; 선택이 변경 될 때마다 새 데이터로 모든 위젯을 업데이트하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="abbd8aa7425bd9f6a6782fe6b02bd522cd9092ff" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; directly:</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;qlocale&quot;&gt;QLocale을&lt;/a&gt; 직접 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="f04b7c4dfc10dd1edd0ebeedc997270525959c7f" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use &lt;a href=&quot;qml-qtwinextras-taskbarbutton&quot;&gt;TaskbarButton&lt;/a&gt; in QML:</source>
          <target state="translated">다음 예제 는 QML에서 &lt;a href=&quot;qml-qtwinextras-taskbarbutton&quot;&gt;TaskbarButton&lt;/a&gt; 을 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4833ffd6f9c31280862b657e0348cc5754df8a0f" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use QLocale directly:</source>
          <target state="translated">The following example illustrates how to use QLocale directly:</target>
        </trans-unit>
        <trans-unit id="264b2968512a67703454e35352da4b63b167c995" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use TaskbarButton in QML:</source>
          <target state="translated">The following example illustrates how to use TaskbarButton in QML:</target>
        </trans-unit>
        <trans-unit id="c65a096e1eff2ce5fe13f5b9dd6c2e6b51985d3a" translate="yes" xml:space="preserve">
          <source>The following example illustrates how to use this function to calibrate a parameter to a slow operation (for example, an iteration count) so that this operation takes at least 250 milliseconds:</source>
          <target state="translated">다음 예제는이 함수를 사용하여 매개 변수를 느린 조작 (예 : 반복 횟수)으로 교정하여이 조작이 250 밀리 초 이상 걸리도록하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="bb6211c1a8f1b66d524d0c15c471892e72931709" translate="yes" xml:space="preserve">
          <source>The following example illustrates the lack of name resolution. &lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;QAudioInput::stateChanged&lt;/a&gt;() is declared with an argument of type &quot;&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt;&quot;. Thus, string-based connections must also specify &quot;&lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt;&quot;, even if &lt;code&gt;&quot;State&quot;&lt;/code&gt; is already visible. This issue does not apply to functor-based connections because argument types are not part of the connection.</source>
          <target state="translated">다음 예제는 이름 확인 부족을 보여줍니다. &lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;QAudioInput :: stateChanged&lt;/a&gt; ()는 &quot; &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: State&lt;/a&gt; &quot; 유형의 인수로 선언됩니다 . 따라서 문자열 상태 연결은 &lt;code&gt;&quot;State&quot;&lt;/code&gt; 가 이미 표시되어 있어도 &quot; &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: State&lt;/a&gt; &quot;를 지정해야합니다 . 인수 유형이 연결의 일부가 아니기 때문에이 문제는 functor 기반 연결에는 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d7b16448b5fe02d71af4908d1f4dd0eecb5b82a0" translate="yes" xml:space="preserve">
          <source>The following example illustrates the lack of name resolution. QAudioInput::stateChanged() is declared with an argument of type &quot;QAudio::State&quot;. Thus, string-based connections must also specify &quot;QAudio::State&quot;, even if &lt;code&gt;&quot;State&quot;&lt;/code&gt; is already visible. This issue does not apply to functor-based connections because argument types are not part of the connection.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b6a30af2da96b9d30dccf92a49276b388fa30fab" translate="yes" xml:space="preserve">
          <source>The following example illustrates the problem:</source>
          <target state="translated">다음 예제는 문제를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e9a17ce562e7cbe5caff950348f7ad7a745502c6" translate="yes" xml:space="preserve">
          <source>The following example illustrates the use of push and pop transitions with replace().</source>
          <target state="translated">다음 예제는 replace ()와 함께 푸시 및 팝 전환을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="cfbac71634e3a264a3fd7e6117c677184e092d18" translate="yes" xml:space="preserve">
          <source>The following example illustrates this wrong usage in context of a class that may contain invalid data:</source>
          <target state="translated">다음 예제는 유효하지 않은 데이터를 포함 할 수있는 클래스와 관련하여이 잘못된 사용법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="dcdac71fea17b7473a1a9a3d39ce385bbb8c8630" translate="yes" xml:space="preserve">
          <source>The following example illustrates using groups to select items in a model.</source>
          <target state="translated">다음 예제는 그룹을 사용하여 모델에서 항목을 선택하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7f66d896289163fb2467640c8c754a07756db892" translate="yes" xml:space="preserve">
          <source>The following example is a hypothetical role-playing game, which provides two in-app products to the user.</source>
          <target state="translated">다음 예제는 사용자에게 두 개의 인앱 상품을 제공하는 가상의 롤 플레잉 게임입니다.</target>
        </trans-unit>
        <trans-unit id="b5339db37fea7f735b72083b63132b397a5289ab" translate="yes" xml:space="preserve">
          <source>The following example keeps the contents within bounds and instead applies a flip effect when flicked over horizontal bounds:</source>
          <target state="translated">다음 예제에서는 내용을 경계 내에 유지하고 대신 수평 경계를 넘기면 뒤집기 효과를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="f9723a0265582b139ed4d722cb7eb6d860782230" translate="yes" xml:space="preserve">
          <source>The following example keeps the contents within bounds and instead applies an opacity effect when dragged over vertical bounds:</source>
          <target state="translated">다음 예제에서는 내용을 경계 내에 유지하고 세로 경계 위로 드래그 할 때 불투명도 효과를 적용합니다.</target>
        </trans-unit>
        <trans-unit id="bf2c39d611daebb3a7d083ce5cdbf30bda0f6e9a" translate="yes" xml:space="preserve">
          <source>The following example keeps the vertical scroll bar always visible:</source>
          <target state="translated">다음 예제에서는 세로 스크롤 막대를 항상 표시합니다.</target>
        </trans-unit>
        <trans-unit id="8c91ff631fb6780786f32c7615216c30c06c1da6" translate="yes" xml:space="preserve">
          <source>The following example looks for the first element in an XML document and prints the names of all the elements that are its direct children.</source>
          <target state="translated">다음 예제는 XML 문서에서 첫 번째 요소를 찾고 직접 하위 인 모든 요소의 이름을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="f1ba3897b3a0cb65804b2a61cff86e324662f925" translate="yes" xml:space="preserve">
          <source>The following example makes a copy of the char* returned by data(), but it will corrupt the heap and cause a crash because it does not allocate a byte for the '\0' at the end:</source>
          <target state="translated">다음 예제는 data ()에 의해 리턴 된 char *의 사본을 작성하지만 힙을 손상시키고 끝에 '\ 0'에 대한 바이트를 할당하지 않기 때문에 충돌을 일으 킵니다.</target>
        </trans-unit>
        <trans-unit id="6dc13d874e4a64b5442bd2955b2c504cca69382d" translate="yes" xml:space="preserve">
          <source>The following example maps the image &quot;madewithqt.png&quot; onto the default sphere mesh, and scales the UV coordinates to tile the image on the sphere surface.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="51360adb4c2868929c0ce57e1b796e0197fed192" translate="yes" xml:space="preserve">
          <source>The following example moves the Y axis of the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; items while still allowing the &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt; to lay the items out as if they had not been transformed:</source>
          <target state="translated">다음 예제에서는 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;사각형&lt;/a&gt; 항목 의 Y 축을 이동 하면서 &lt;a href=&quot;qml-qtquick-row&quot;&gt;행&lt;/a&gt; 이 변환되지 않은 것처럼 항목을 배치 할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="513269504bca412fec4ae0b14763dc29725f9ef1" translate="yes" xml:space="preserve">
          <source>The following example opens a file on the Windows file system residing on a path that contains spaces:</source>
          <target state="translated">다음 예제는 공백이 포함 된 경로에있는 Windows 파일 시스템에서 파일을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="75a44a5e4cdd0f72a0334b5df5b53297319455d0" translate="yes" xml:space="preserve">
          <source>The following example plays a WAV file on mouse click.</source>
          <target state="translated">다음 예제는 마우스 클릭시 WAV 파일을 재생합니다.</target>
        </trans-unit>
        <trans-unit id="557e57b7bb4ac250f8c4178d80ca578777bfbd8d" translate="yes" xml:space="preserve">
          <source>The following example pre-allocates a &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; given the array's size for more efficient decoding:</source>
          <target state="translated">다음 예제 에서는보다 효율적인 디코딩을 위해 배열 크기가 지정된 &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt; 를 사전 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="3af0ab72f7032b4ad36c48527b0a1d2fd9d854f0" translate="yes" xml:space="preserve">
          <source>The following example pre-allocates a &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; given the map's size for more efficient decoding:</source>
          <target state="translated">다음 예제 는 더 효율적인 디코딩을 위해 맵 크기가 지정된 &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap을&lt;/a&gt; 미리 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="2c2089a4179fec95c239c0fd321e6f3f78e4fdc9" translate="yes" xml:space="preserve">
          <source>The following example presents how to show a notification message using &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#showMessage-method&quot;&gt;showMessage()&lt;/a&gt;, and how to make use of the &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#messageClicked-signal&quot;&gt;messageClicked()&lt;/a&gt; signal:</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#showMessage-method&quot;&gt;showMessage ()를&lt;/a&gt; 사용하여 알림 메시지를 표시하는 방법 및 &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#messageClicked-signal&quot;&gt;messageClicked ()&lt;/a&gt; 신호를 사용 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="4350a2e8e7ff8ea6cf23ef5c497764c249f3fce0" translate="yes" xml:space="preserve">
          <source>The following example provides a module that can add numbers:</source>
          <target state="translated">다음 예제는 숫자를 추가 할 수있는 모듈을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c7429581e102dfb191ef654ae09ac2ab917a51c3" translate="yes" xml:space="preserve">
          <source>The following example provides key navigation for a 2x2 grid of items:</source>
          <target state="translated">다음 예제는 2x2 그리드 항목에 대한 주요 탐색 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8953d76100e0ebfa41204e302eb67adc0ebb4de9" translate="yes" xml:space="preserve">
          <source>The following example queries an unlockable product named &quot;myUnlockableProduct&quot; from the external market place.</source>
          <target state="translated">다음 예는 외부 마켓 플레이스에서 &quot;myUnlockableProduct&quot;라는 잠금 해제 가능한 제품을 쿼리합니다.</target>
        </trans-unit>
        <trans-unit id="26616f6353920f8959c6621807f02e6eae71c83a" translate="yes" xml:space="preserve">
          <source>The following example reacts to a failed purchase attempt by calling a custom function to display a message to the user.</source>
          <target state="translated">다음 예제는 사용자 정의 기능을 호출하여 사용자에게 메시지를 표시하여 실패한 구매 시도에 반응합니다.</target>
        </trans-unit>
        <trans-unit id="ae005e6ca85a3901fbe2ce93a49742de9aef1aab" translate="yes" xml:space="preserve">
          <source>The following example reads a text file line by line:</source>
          <target state="translated">다음 예제는 텍스트 파일을 한 줄씩 읽습니다.</target>
        </trans-unit>
        <trans-unit id="74bb4ba52c1627192c71b409c394fd691c4b1f14" translate="yes" xml:space="preserve">
          <source>The following example records all signal emissions for the &lt;code&gt;clicked()&lt;/code&gt; signal of a &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt;:</source>
          <target state="translated">다음 예제 는 &lt;a href=&quot;qcheckbox&quot;&gt;QCheckBox&lt;/a&gt; 의 &lt;code&gt;clicked()&lt;/code&gt; 신호에 대한 모든 신호 방출을 기록합니다 .</target>
        </trans-unit>
        <trans-unit id="ca61b8bb5c409621b5c9f6a8ba91d4c740f0da48" translate="yes" xml:space="preserve">
          <source>The following example registers a store with three products, two consumable products and one unlockable.</source>
          <target state="translated">다음 예는 3 개의 제품, 2 개의 소모품 및 1 개의 잠금 해제 가능한 제품으로 상점을 등록합니다.</target>
        </trans-unit>
        <trans-unit id="3ae624641f1701f62cdd5da464e7815b2f584503" translate="yes" xml:space="preserve">
          <source>The following example removes all (capital, country) pairs where the capital's name ends with &quot;City&quot;:</source>
          <target state="translated">다음 예제는 자본 이름이 &quot;도시&quot;로 끝나는 모든 (자본, 국가) 쌍을 제거합니다.</target>
        </trans-unit>
        <trans-unit id="4339d457d4854018d0db03920337e2b2b80ba932" translate="yes" xml:space="preserve">
          <source>The following example retrieves the most common information about the root volume of the system, and prints information about it.</source>
          <target state="translated">다음 예제는 시스템의 루트 볼륨에 대한 가장 일반적인 정보를 검색하고 이에 대한 정보를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="23de676a2cd224d8cb5359853c054281d779a552" translate="yes" xml:space="preserve">
          <source>The following example rotates a Rectangle 45 degress (PI/4):</source>
          <target state="translated">다음 예제는 Rectangle 45 degress (PI / 4)를 회전시킵니다.</target>
        </trans-unit>
        <trans-unit id="65333a7cadf6bc62d1d4c4ab90fa342719942d45" translate="yes" xml:space="preserve">
          <source>The following example rotates a Rectangle around its interior point (25, 25):</source>
          <target state="translated">다음 예제에서는 내부 점 (25, 25)을 기준으로 Rectangle을 회전합니다.</target>
        </trans-unit>
        <trans-unit id="71699ef293fec3faa7d2790bcc71f67d088a8177" translate="yes" xml:space="preserve">
          <source>The following example runs &lt;code&gt;gzip&lt;/code&gt; to compress the string &quot;Qt rocks!&quot;, without an event loop:</source>
          <target state="translated">다음 예제는 &lt;code&gt;gzip&lt;/code&gt; 을 실행 하여 이벤트 루프없이 문자열 &quot;Qt rock!&quot;을 압축합니다.</target>
        </trans-unit>
        <trans-unit id="c5dab2919a061964bc0198aedf576f2c74a4b030" translate="yes" xml:space="preserve">
          <source>The following example runs two number animations in a sequence. The &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; animates to a &lt;code&gt;x&lt;/code&gt; position of 50, then to a &lt;code&gt;y&lt;/code&gt; position of 50.</source>
          <target state="translated">다음 예제는 두 개의 숫자 애니메이션을 순서대로 실행합니다. &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;직사각형&lt;/a&gt; (A)에 애니메이션 &lt;code&gt;x&lt;/code&gt; 다음에, (50)의 위치 &lt;code&gt;y&lt;/code&gt; (50)의 위치.</target>
        </trans-unit>
        <trans-unit id="2b29151d13a941955c42ede9b81b3015f9b1ad23" translate="yes" xml:space="preserve">
          <source>The following example scales the X axis of the Rectangle, relative to its interior point (25, 25):</source>
          <target state="translated">다음 예제는 사각형의 내부 축 (25, 25)을 기준으로 사각형의 X 축을 조정합니다.</target>
        </trans-unit>
        <trans-unit id="2ac78949462a2b81a2f63c17daa9554174b55774" translate="yes" xml:space="preserve">
          <source>The following example sets a dark Holo theme, and the result can be seen in the screenshot above.</source>
          <target state="translated">다음 예제는 어두운 홀로 테마를 설정하며 결과는 위 스크린 샷에서 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2449b58c1a1ed6989f26c09f1a970ba1e971829c" translate="yes" xml:space="preserve">
          <source>The following example sets an Australian locale:</source>
          <target state="translated">다음 예제는 오스트레일리아 로케일을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b0cddd187310ec0bc7df4109b3cda105ff8c31cd" translate="yes" xml:space="preserve">
          <source>The following example shows a &lt;a href=&quot;qml-qt-labs-folderlistmodel-folderlistmodel&quot;&gt;FolderListModel&lt;/a&gt; being used to provide a list of QML files in a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;:</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; 에서 QML 파일 목록을 제공하는 데 사용되는 &lt;a href=&quot;qml-qt-labs-folderlistmodel-folderlistmodel&quot;&gt;FolderListModel을&lt;/a&gt; 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="b5f1c749b4a3dac2e8c564c65b83d1ffe025af38" translate="yes" xml:space="preserve">
          <source>The following example shows a &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; containing three elements, with the roles &quot;name&quot; and &quot;cost&quot;.</source>
          <target state="translated">다음 예제는 &quot;name&quot;및 &quot;cost&quot;역할을 가진 세 가지 요소를 포함 하는 &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; 을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="2b735c5f3c12a80dee8eab5f21df3e87ebe43489" translate="yes" xml:space="preserve">
          <source>The following example shows a Flipable item that flips whenever it is clicked, rotating about the y-axis.</source>
          <target state="translated">다음 예제는 클릭 할 때마다 y 축을 중심으로 회전하는 뒤집기 가능한 항목을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7fdec566f2c2804382d66f46214f50172b1d2637" translate="yes" xml:space="preserve">
          <source>The following example shows a Flow item containing a number of &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; child items. These are arranged in a similar way to those shown in the screenshots.</source>
          <target state="translated">다음 예제는 다수의 &lt;a href=&quot;qml-qtquick-text&quot;&gt;텍스트&lt;/a&gt; 하위 항목을 포함하는 플로우 항목을 보여줍니다 . 이들은 스크린 샷에 표시된 것과 비슷한 방식으로 배열됩니다.</target>
        </trans-unit>
        <trans-unit id="c29c72591cae91b2f007f4af64f703045b27ab75" translate="yes" xml:space="preserve">
          <source>The following example shows a FolderListModel being used to provide a list of QML files in a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;:</source>
          <target state="translated">The following example shows a FolderListModel being used to provide a list of QML files in a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="f609049f1304621e97ca95e7578d059e6e61c5e7" translate="yes" xml:space="preserve">
          <source>The following example shows a ListModel containing three elements, with the roles &quot;name&quot; and &quot;cost&quot;.</source>
          <target state="translated">The following example shows a ListModel containing three elements, with the roles &quot;name&quot; and &quot;cost&quot;.</target>
        </trans-unit>
        <trans-unit id="35c6f6b88c8eb63ab62f818c0c0e0aa7d4e4f70c" translate="yes" xml:space="preserve">
          <source>The following example shows a URL where the scheme is &quot;ftp&quot;:</source>
          <target state="translated">다음 예는 체계가 &quot;ftp&quot;인 URL을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="76b891fc64d366955a188d498567a1d26d2315bc" translate="yes" xml:space="preserve">
          <source>The following example shows a chord that will be triggered by pressing the A and S keys together with a tolerance of 10 miliseconds between presses.</source>
          <target state="translated">다음 예는 A와 S 키를 누른 상태에서 10 밀리 초의 공차를 눌렀을 때 트리거되는 코드를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="acea721b04cb6128b0fcbe58f9f5c4f78d1adcc7" translate="yes" xml:space="preserve">
          <source>The following example shows a contrived example of a material where we want to add a base color map to a material at run-time. Note that we don't actually use the MaterialRedExtended component in this case, it's purely defined for the shadergen tool to generated the needed material shaders that will be need at run-time to set the map on the &lt;code&gt;redMaterial&lt;/code&gt; material.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d6a86b66009ed3f00b52bcf4006d9a598bc33c7" translate="yes" xml:space="preserve">
          <source>The following example shows a datetime being parsed from a datetime string in a certain format using the default locale:</source>
          <target state="translated">다음 예제는 기본 로케일을 사용하여 특정 형식으로 날짜 시간 문자열에서 날짜 시간을 구문 분석하는 것을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="04821c7da1a7b444db6dab2915f87836eaca6046" translate="yes" xml:space="preserve">
          <source>The following example shows a delegate that animates a spinning rectangle. When it is pooled, the animation is temporarily paused:</source>
          <target state="translated">다음 예제는 회전 사각형에 애니메이션을 적용하는 델리게이트를 보여줍니다. 풀링되면 애니메이션이 일시적으로 일시 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="309db721a234dfdcc2e1834805c969dcecd4a034" translate="yes" xml:space="preserve">
          <source>The following example shows a number formatted for the German locale:</source>
          <target state="translated">다음 예제는 독일어 로케일에 대해 형식화 된 숫자를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="7fd59d1748028f68695a01a229f4ca317f27ef52" translate="yes" xml:space="preserve">
          <source>The following example shows a repeater used with a Grid item to arrange a set of Rectangle items. The Repeater item creates a series of 24 rectangles for the Grid item to position in a 5 by 5 arrangement.</source>
          <target state="translated">다음 예제는 Grid 항목과 함께 사용하여 Rectangle 항목 세트를 배열하는 repeater를 보여줍니다. Repeater 항목은 Grid 항목을 5 x 5 배열로 배치하기 위해 일련의 24 개의 사각형을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="a5da7652fa9d6b03fcb7a7bf452645d018e0270a" translate="yes" xml:space="preserve">
          <source>The following example shows a simple &lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource&lt;/a&gt; used to receive updates every second and print the longitude and latitude out to the console.</source>
          <target state="translated">다음 예제는 매초마다 업데이트를 받고 경도와 위도를 콘솔에 출력하는 데 사용되는 간단한 &lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource&lt;/a&gt; 를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="43949d4305f186fd39d8b548154566aeeee5ab90" translate="yes" xml:space="preserve">
          <source>The following example shows a simple Location object being declared:</source>
          <target state="translated">다음 예제는 선언 된 간단한 Location 객체를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="8382a28721e964c363d7c6e36c38fd706b4d0bbe" translate="yes" xml:space="preserve">
          <source>The following example shows a simple PositionSource used to receive updates every second and print the longitude and latitude out to the console.</source>
          <target state="translated">The following example shows a simple PositionSource used to receive updates every second and print the longitude and latitude out to the console.</target>
        </trans-unit>
        <trans-unit id="aff7f146857fb04cfd88daa9517c3c48e9fbfd9f" translate="yes" xml:space="preserve">
          <source>The following example shows a simple usage of the &lt;a href=&quot;qml-qt-labs-lottieqt-lottieanimation&quot;&gt;LottieAnimation&lt;/a&gt; type</source>
          <target state="translated">다음 예는 &lt;a href=&quot;qml-qt-labs-lottieqt-lottieanimation&quot;&gt;LottieAnimation&lt;/a&gt; 유형 의 간단한 사용법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="ce77675d624900efa11f89627f8708fa2beee61d" translate="yes" xml:space="preserve">
          <source>The following example shows a simple usage of the LottieAnimation type</source>
          <target state="translated">The following example shows a simple usage of the LottieAnimation type</target>
        </trans-unit>
        <trans-unit id="29ec72f691cedce3f675dd46cf9e9937e861e5c0" translate="yes" xml:space="preserve">
          <source>The following example shows a small view onto a large image in which the user can drag or flick the image in order to view different parts of it.</source>
          <target state="translated">다음 예는 사용자가 이미지의 다른 부분을보기 위해 이미지를 드래그하거나 튕길 수있는 작은 이미지를 작은 이미지로 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="8f2a4e71f1ccd8626eaf5fc5b14150d5c438326b" translate="yes" xml:space="preserve">
          <source>The following example shows a valid authority string:</source>
          <target state="translated">다음 예제는 유효한 권한 문자열을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a2a6ab7cc66940b6c8eb13ba102a4e9339ff5a1f" translate="yes" xml:space="preserve">
          <source>The following example shows an instantiation of the &lt;a href=&quot;location-plugin-here&quot;&gt;HERE&lt;/a&gt; plugin with a mapping API</source>
          <target state="translated">The following example shows an instantiation of the &lt;a href=&quot;location-plugin-here&quot;&gt;HERE&lt;/a&gt; plugin with a mapping API</target>
        </trans-unit>
        <trans-unit id="12b798f1249e131b3ed48ec80f9c488a0458aef6" translate="yes" xml:space="preserve">
          <source>The following example shows an instantiation of the &lt;a href=&quot;location-plugin-here#&quot;&gt;HERE&lt;/a&gt; plugin with a mapping API</source>
          <target state="translated">다음 예제는 맵핑 API를 사용 하여 &lt;a href=&quot;location-plugin-here#&quot;&gt;HERE&lt;/a&gt; 플러그인 의 인스턴스화를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2c4621627939ad17a4d97d9a89959aa825e0142b" translate="yes" xml:space="preserve">
          <source>The following example shows an sequence that will be triggered by pressing the G, D, and J keys in that order with a maximum time between key presses of 1 second and overall maximum input time of 3 seconds.</source>
          <target state="translated">다음 예는 키 누름 사이의 최대 시간이 1 초이고 전체 최대 입력 시간이 3 초인 순서로 G, D 및 J 키를 순서대로 누르면 트리거되는 시퀀스를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="26f80249134ce7c7586cdfb578ccc9192ce07be8" translate="yes" xml:space="preserve">
          <source>The following example shows how a translation is obtained for the class shown in the previous section:</source>
          <target state="translated">다음 예제는 이전 섹션에 표시된 클래스에 대한 번역을 얻는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="635a003629be3753abd2a9f44f4221e7c4586718" translate="yes" xml:space="preserve">
          <source>The following example shows how the general onPressed handler can be used to test for a certain key; in this case, the left cursor key:</source>
          <target state="translated">다음 예제는 일반 onPressed 핸들러를 사용하여 특정 키를 테스트하는 방법을 보여줍니다. 이 경우 왼쪽 커서 키 :</target>
        </trans-unit>
        <trans-unit id="5247005db1331dfb91ee0bc6e4fcd906b8a93bd0" translate="yes" xml:space="preserve">
          <source>The following example shows how the volume value from a UI volume control can be converted so that the perceived increase in loudness is the same when increasing the volume control from 0.2 to 0.3 as it is from 0.5 to 0.6:</source>
          <target state="translated">다음 예는 볼륨 컨트롤을 0.5에서 0.6으로 증가시킬 때 0.2에서 0.3으로 볼륨 컨트롤을 증가시킬 때 인식되는 음량 증가가 동일하도록 UI 볼륨 컨트롤의 볼륨 값을 변환하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="40a09f328ced922ccf3392016879abf01933b29a" translate="yes" xml:space="preserve">
          <source>The following example shows how to access all &lt;a href=&quot;qml-qtlocation-contactdetail&quot;&gt;ContactDetails&lt;/a&gt; and print them to the console:</source>
          <target state="translated">다음 예는 모든 &lt;a href=&quot;qml-qtlocation-contactdetail&quot;&gt;ContactDetails&lt;/a&gt; 에 액세스 하여 콘솔에 인쇄 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="fc227a757e94eb8762456b1d27f63af49693be1b" translate="yes" xml:space="preserve">
          <source>The following example shows how to access all &lt;a href=&quot;qml-qtlocation-placeattribute&quot;&gt;PlaceAttributes&lt;/a&gt; and print them to the console:</source>
          <target state="translated">다음 예는 모든 &lt;a href=&quot;qml-qtlocation-placeattribute&quot;&gt;PlaceAttributes&lt;/a&gt; 에 액세스 하여 콘솔에 인쇄 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="5413e88bcea080cf4e298a541c62b1a2064d5245" translate="yes" xml:space="preserve">
          <source>The following example shows how to apply the effect.</source>
          <target state="translated">다음 예제는 효과를 적용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="ae840d84d69477cf08478ae7efb8502bd6e6200c" translate="yes" xml:space="preserve">
          <source>The following example shows how to assign and modify an attribute:</source>
          <target state="translated">다음 예제는 속성을 지정하고 수정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="28eaca1949f768a0601947b34299c6cb84d7d6f4" translate="yes" xml:space="preserve">
          <source>The following example shows how to convert the volume value from a slider control before passing it to a &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer&lt;/a&gt;. As a result, the perceived increase in volume is the same when increasing the volume slider from 20 to 30 as it is from 50 to 60:</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;qmediaplayer&quot;&gt;QMediaPlayer에&lt;/a&gt; 전달하기 전에 슬라이더 컨트롤에서 볼륨 값을 변환하는 방법을 보여줍니다 . 결과적으로, 볼륨 슬라이더를 50에서 60으로 증가시키면서 볼륨 슬라이더를 20에서 30으로 증가시킬 때 인식되는 볼륨 증가는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="d993d04f08f9f2d93d82ac20fbb675c7742c844c" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a custom Rectangle component, in which the color property always needs to be specified.</source>
          <target state="translated">The following example shows how to create a custom Rectangle component, in which the color property always needs to be specified.</target>
        </trans-unit>
        <trans-unit id="c516f3c8f4a099a97af91fc2aacc905748858c84" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a model from C++ with multiple columns:</source>
          <target state="translated">다음 예제는 여러 열이있는 C ++에서 모델을 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3056b17baa68700189f119c2636a05704e1af4eb" translate="yes" xml:space="preserve">
          <source>The following example shows how to create a system tray icon, and how to make use of the &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#activated-signal&quot;&gt;activated()&lt;/a&gt; signal:</source>
          <target state="translated">다음 예는 시스템 트레이 아이콘을 만드는 방법과 &lt;a href=&quot;qml-qt-labs-platform-systemtrayicon#activated-signal&quot;&gt;enabled ()&lt;/a&gt; 신호 를 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e6bf8c2f4e2e37ae0996d21e7258185d6cc0ff8d" translate="yes" xml:space="preserve">
          <source>The following example shows how to create an OSM plugin instance with parameters supplied for an useragent, and if necessary, a custom server url plus the corresponding copyright information for the tile provider. Additionally, it is possible to choose another routing server than the public osrm one.</source>
          <target state="translated">다음 예는 useragent에 필요한 매개 변수와 필요한 경우 사용자 정의 서버 URL과 타일 제공자에 대한 해당 저작권 정보를 사용하여 OSM 플러그인 인스턴스를 작성하는 방법을 보여줍니다. 또한 공개 osrm 이외의 다른 라우팅 서버를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b62dc5ac03aedab89d662b46b331b3630f88864" translate="yes" xml:space="preserve">
          <source>The following example shows how to create and display a supplier in QML:</source>
          <target state="translated">다음 예제는 QML에서 공급 업체를 작성하고 표시하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2fc7495739a5a95d5cf16a0ee5b221f23f530a9c" translate="yes" xml:space="preserve">
          <source>The following example shows how to display a list of available cameras. The user can change the active camera by selecting one of the items in the list.</source>
          <target state="translated">다음 예는 사용 가능한 카메라 목록을 표시하는 방법을 보여줍니다. 사용자는 목록에서 항목 중 하나를 선택하여 활성 카메라를 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16b34320057472b0dde8b3849d29b59e747a8488" translate="yes" xml:space="preserve">
          <source>The following example shows how to display all attributes in a list:</source>
          <target state="translated">다음 예제는 모든 속성을 목록에 표시하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e5fbe76f534d0e808fe40a4ed2c5a32761df25d4" translate="yes" xml:space="preserve">
          <source>The following example shows how to display editorials for a place:</source>
          <target state="translated">다음 예는 장소에 대한 사설을 표시하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="05fbaf0b8a86c660a68f2e0b43b08ac75af52676" translate="yes" xml:space="preserve">
          <source>The following example shows how to display images for a place:</source>
          <target state="translated">다음 예는 장소의 이미지를 표시하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a642063a5cab284a1cd2f2e083c0d0076d92331b" translate="yes" xml:space="preserve">
          <source>The following example shows how to display information about the user who submitted an editorial:</source>
          <target state="translated">다음 예는 편집을 제출 한 사용자에 대한 정보를 표시하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="0e44540662fff7cc82086313814519a43aa5a86d" translate="yes" xml:space="preserve">
          <source>The following example shows how to find a list of child &lt;code&gt;QWidget&lt;/code&gt;s of the specified &lt;code&gt;parentWidget&lt;/code&gt; named &lt;code&gt;widgetname&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 &lt;code&gt;widgetname&lt;/code&gt; 이라는 지정된 &lt;code&gt;parentWidget&lt;/code&gt; 의 하위 &lt;code&gt;QWidget&lt;/code&gt; 목록을 찾는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="3bcccc6565c8fbfa3abbb910d5f043a0a604673c" translate="yes" xml:space="preserve">
          <source>The following example shows how to get the volume on which the application is located. It is recommended to always check that the volume is ready and valid.</source>
          <target state="translated">다음 예는 응용 프로그램이 위치한 볼륨을 얻는 방법을 보여줍니다. 볼륨이 준비되고 유효한지 항상 확인하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="d44a659e37217ad9e85507221d339e6551ae1663" translate="yes" xml:space="preserve">
          <source>The following example shows how to load a QML file from a network resource. After creating the &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent&lt;/a&gt;, it tests whether the component is loading. If it is, it connects to the &lt;a href=&quot;qqmlcomponent#statusChanged&quot;&gt;QQmlComponent::statusChanged&lt;/a&gt;() signal and otherwise calls the &lt;code&gt;continueLoading()&lt;/code&gt; method directly. Note that &lt;a href=&quot;qqmlcomponent#isLoading&quot;&gt;QQmlComponent::isLoading&lt;/a&gt;() may be false for a network component if the component has been cached and is ready immediately.</source>
          <target state="translated">다음 예제는 네트워크 자원에서 QML 파일을로드하는 방법을 보여줍니다. &lt;a href=&quot;qqmlcomponent&quot;&gt;QQmlComponent를 작성한&lt;/a&gt; 후에 는 구성 요소가로드 중인지 테스트합니다. 이 경우 &lt;a href=&quot;qqmlcomponent#statusChanged&quot;&gt;QQmlComponent :: statusChanged&lt;/a&gt; () 신호에 연결 하고 &lt;code&gt;continueLoading()&lt;/code&gt; 메소드를 직접 호출합니다 . 참고 &lt;a href=&quot;qqmlcomponent#isLoading&quot;&gt;QQmlComponent :: isLoading이&lt;/a&gt; 구성 요소가 캐시 즉시 준비가되어있는 경우 () 네트워크 구성 요소에 대한 거짓 일 수도있다.</target>
        </trans-unit>
        <trans-unit id="2369875d7c086881917a795ee8d15667fceb9083" translate="yes" xml:space="preserve">
          <source>The following example shows how to load a QML file from a network resource. After creating the QQmlComponent, it tests whether the component is loading. If it is, it connects to the &lt;a href=&quot;qqmlcomponent#statusChanged&quot;&gt;QQmlComponent::statusChanged&lt;/a&gt;() signal and otherwise calls the &lt;code&gt;continueLoading()&lt;/code&gt; method directly. Note that &lt;a href=&quot;qqmlcomponent#isLoading&quot;&gt;QQmlComponent::isLoading&lt;/a&gt;() may be false for a network component if the component has been cached and is ready immediately.</source>
          <target state="translated">The following example shows how to load a QML file from a network resource. After creating the QQmlComponent, it tests whether the component is loading. If it is, it connects to the &lt;a href=&quot;qqmlcomponent#statusChanged&quot;&gt;QQmlComponent::statusChanged&lt;/a&gt;() signal and otherwise calls the &lt;code&gt;continueLoading()&lt;/code&gt; method directly. Note that &lt;a href=&quot;qqmlcomponent#isLoading&quot;&gt;QQmlComponent::isLoading&lt;/a&gt;() may be false for a network component if the component has been cached and is ready immediately.</target>
        </trans-unit>
        <trans-unit id="8a36bfcd7a4914761e42ed9ee809b00c63e2f6d2" translate="yes" xml:space="preserve">
          <source>The following example shows how to load a XML Schema file from the network and test whether it is a valid schema document:</source>
          <target state="translated">다음 예제는 네트워크에서 XML 스키마 파일을로드하고 유효한 스키마 문서인지 테스트하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="073d2ff96ccfe9b01a399d4575a630092408ec64" translate="yes" xml:space="preserve">
          <source>The following example shows how to load a XML Schema from a local file, check whether it is a valid schema document and use it for validation of an XML instance document:</source>
          <target state="translated">다음 예제는 로컬 파일에서 XML 스키마를로드하고 유효한 스키마 문서인지 확인한 후 XML 인스턴스 문서의 유효성 검증에 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3c5f311ecc00834b657e4e01f2eb021589723b0b" translate="yes" xml:space="preserve">
          <source>The following example shows how to override the shortcut underline behavior on any platform:</source>
          <target state="translated">다음 예제는 모든 플랫폼에서 바로 가기 밑줄 동작을 대체하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="846cedadc24d199bdd626e60799d16ba56c8b0ea" translate="yes" xml:space="preserve">
          <source>The following example shows how to set a simple &lt;code&gt;columnWidthProvider&lt;/code&gt; together with a timer that modifies the values the function returns. When the array is modified, &lt;a href=&quot;qml-qtquick-tableview#forceLayout-method&quot;&gt;forceLayout&lt;/a&gt; is called to let the changes take effect:</source>
          <target state="translated">다음 예제에서는 함수가 반환하는 값을 수정하는 타이머와 함께 간단한 &lt;code&gt;columnWidthProvider&lt;/code&gt; 를 설정하는 방법을 보여 줍니다. 배열이 수정되면 &lt;a href=&quot;qml-qtquick-tableview#forceLayout-method&quot;&gt;forceLayout&lt;/a&gt; 이 호출되어 변경 사항이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="cc792c7de6358a0c1af7b1247bf6bd30b2de6e84" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModel&lt;/a&gt; to search for Pizza restaurants in close proximity of a given position. A &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchTerm-prop&quot;&gt;searchTerm&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt; are provided to the model and &lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update()&lt;/a&gt; is used to perform a lookup query. Note that the model does not incrementally fetch search results, but rather performs a single fetch when &lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update()&lt;/a&gt; is run. The &lt;a href=&quot;qml-qtlocation-placesearchmodel#count-prop&quot;&gt;count&lt;/a&gt; is set to the number of search results returned during the fetch.</source>
          <target state="translated">다음 예는 &lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModel&lt;/a&gt; 을 사용하여 지정된 위치에 근접한 피자 레스토랑을 검색 하는 방법을 보여줍니다 . &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchTerm-prop&quot;&gt;SEARCHTERM&lt;/a&gt; 및 &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchArea-prop&quot;&gt;searchArea은&lt;/a&gt; 모델 및 제공되는 &lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;() 업데이트&lt;/a&gt; 룩업 쿼리를 수행하기 위해 사용된다. 모델은 검색 결과를 점진적으로 가져 오지 않지만 &lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update ()&lt;/a&gt; 가 실행될 때 단일 가져 오기를 수행 합니다. &lt;a href=&quot;qml-qtlocation-placesearchmodel#count-prop&quot;&gt;수는&lt;/a&gt; 인출시 반환되는 검색 결과의 수를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="7ef6ea04ebb5130c4f1a824f9395a8fe545052b6" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel&quot;&gt;PlaceSearchSuggestionModel&lt;/a&gt; to get suggested search terms from a partial search term. The &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt; is set to match what would be used to perform the actual place search with &lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModel&lt;/a&gt;.</source>
          <target state="translated">다음 예는 &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel&quot;&gt;PlaceSearchSuggestionModel&lt;/a&gt; 을 사용하여 부분 검색어에서 제안 된 검색어를 가져 오는 방법을 보여줍니다 . &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#searchArea-prop&quot;&gt;searchArea가&lt;/a&gt; 와 실제 장소 검색을 수행하는 데 사용되는 것과 일치하도록 설정 &lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModel을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d40414549d0b47b6d2025dfa9ab62f6871b4eaf4" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the PlaceSearchModel to search for Pizza restaurants in close proximity of a given position. A &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchTerm-prop&quot;&gt;searchTerm&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt; are provided to the model and &lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update()&lt;/a&gt; is used to perform a lookup query. Note that the model does not incrementally fetch search results, but rather performs a single fetch when &lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update()&lt;/a&gt; is run. The &lt;a href=&quot;qml-qtlocation-placesearchmodel#count-prop&quot;&gt;count&lt;/a&gt; is set to the number of search results returned during the fetch.</source>
          <target state="translated">The following example shows how to use the PlaceSearchModel to search for Pizza restaurants in close proximity of a given position. A &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchTerm-prop&quot;&gt;searchTerm&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt; are provided to the model and &lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update()&lt;/a&gt; is used to perform a lookup query. Note that the model does not incrementally fetch search results, but rather performs a single fetch when &lt;a href=&quot;qml-qtlocation-placesearchmodel#update-method&quot;&gt;update()&lt;/a&gt; is run. The &lt;a href=&quot;qml-qtlocation-placesearchmodel#count-prop&quot;&gt;count&lt;/a&gt; is set to the number of search results returned during the fetch.</target>
        </trans-unit>
        <trans-unit id="7742f7b6e66380a5b0571853a40bfa8c4b70b1ff" translate="yes" xml:space="preserve">
          <source>The following example shows how to use the PlaceSearchSuggestionModel to get suggested search terms from a partial search term. The &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt; is set to match what would be used to perform the actual place search with &lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModel&lt;/a&gt;.</source>
          <target state="translated">The following example shows how to use the PlaceSearchSuggestionModel to get suggested search terms from a partial search term. The &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt; is set to match what would be used to perform the actual place search with &lt;a href=&quot;qml-qtlocation-placesearchmodel&quot;&gt;PlaceSearchModel&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e9a931dbb6bb1f07deb53f729e1a47f1ee757a30" translate="yes" xml:space="preserve">
          <source>The following example shows how we use a &lt;a href=&quot;qml-qtquick-controls-groupbox&quot;&gt;GroupBox&lt;/a&gt;:</source>
          <target state="translated">다음 예제는 &lt;a href=&quot;qml-qtquick-controls-groupbox&quot;&gt;GroupBox&lt;/a&gt; 사용 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="6d4ea37f9574adf9088498d74c319c969076f760" translate="yes" xml:space="preserve">
          <source>The following example shows how we use a GroupBox:</source>
          <target state="translated">The following example shows how we use a GroupBox:</target>
        </trans-unit>
        <trans-unit id="80a52dc554953c81dba84abb93c3955bb91cbaea" translate="yes" xml:space="preserve">
          <source>The following example shows how you can decide which animation to use at runtime:</source>
          <target state="translated">다음 예제는 런타임에 사용할 애니메이션을 결정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1a7597d384814347a73af63baa5e9d663e3c42cb" translate="yes" xml:space="preserve">
          <source>The following example shows mirroring in action. The &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt; below is specified as being anchored to the left of its parent. However, since mirroring has been enabled, the anchor is horizontally reversed and it is now anchored to the right. Also, since items in a &lt;a href=&quot;qml-qtquick-row&quot;&gt;Row&lt;/a&gt; are positioned from left to right by default, they are now positioned from right to left instead, as demonstrated by the numbering and opacity of the items:</source>
          <target state="translated">다음 예는 미러링이 작동하는 모습을 보여줍니다. &lt;a href=&quot;qml-qtquick-row&quot;&gt;행&lt;/a&gt; 아래로 지정된이 부모의 왼쪽에 고정된다. 그러나 미러링이 활성화되었으므로 앵커가 가로로 반전되어 이제 오른쪽에 고정됩니다. 또한 &lt;a href=&quot;qml-qtquick-row&quot;&gt;행의&lt;/a&gt; 항목은 기본적으로 왼쪽에서 오른쪽으로 배치되므로 항목의 번호 및 불투명도에 따라 오른쪽에서 왼쪽으로 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="d402059d8c36dbe819b5315607e7dedef23f1486" translate="yes" xml:space="preserve">
          <source>The following example shows rectangles with colors specified using hexadecimal and named color notation:</source>
          <target state="translated">다음 예제는 16 진수 및 명명 된 색상 표기법을 사용하여 지정된 색상의 사각형을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="4db5dc64a890badf646778767b76ad7a05941665" translate="yes" xml:space="preserve">
          <source>The following example shows the current date and time formatted for the German locale:</source>
          <target state="translated">다음 예제는 독일어 로케일에 대해 형식화 된 현재 날짜 및 시간을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="91973759e9020a30186684dc3cfb208e67a791cf" translate="yes" xml:space="preserve">
          <source>The following example shows the current date first being formatted as a date string using the default locale and format, then parsed back again in the same manner:</source>
          <target state="translated">다음 예제는 현재 날짜가 기본 로케일 및 형식을 사용하여 날짜 문자열로 형식화 된 후 동일한 방식으로 다시 구문 분석되는 것을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e2034e11544cdd6176227a3df875148e55d8b37e" translate="yes" xml:space="preserve">
          <source>The following example shows the current date formatted for the German locale:</source>
          <target state="translated">다음 예제는 독일어 로케일에 대해 형식화 된 현재 날짜를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="75e1192360977d06c3e3b821ec38bc0893139cf7" translate="yes" xml:space="preserve">
          <source>The following example shows the current time first being formatted as a time string using the default locale and a short format, then parsed back again in the same manner:</source>
          <target state="translated">다음 예제는 현재 시간을 기본 로케일과 짧은 형식을 사용하여 시간 문자열로 형식화 한 다음 동일한 방식으로 다시 구문 분석하는 것을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="40a42a1fa521820679a6a12d2f49c105b5e50386" translate="yes" xml:space="preserve">
          <source>The following example shows the current time formatted for the German locale:</source>
          <target state="translated">다음 예제는 독일어 로케일의 현재 시간 형식을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="699c1bfd3991f79158875ed35e9879ade07659af" translate="yes" xml:space="preserve">
          <source>The following example shows the definition of a simple list model defined in a file called &lt;code&gt;ContactModel.qml&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 &lt;code&gt;ContactModel.qml&lt;/code&gt; 파일에 정의 된 단순 목록 모델의 정의를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="d4399ac1c1dfdda6f023798e16e40576fb70a035" translate="yes" xml:space="preserve">
          <source>The following example shows the effects of some of the common properties on a Rectangle item, which in this case is used to create a square:</source>
          <target state="translated">다음 예제는 사각형 항목에 대한 일부 공통 속성의 효과를 보여줍니다.이 경우 사각형을 만드는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2ab771fc92edf70f704ba18229f2af0b112f72fc" translate="yes" xml:space="preserve">
          <source>The following example shows the minimum functionality that is required from an input method:</source>
          <target state="translated">다음 예제는 입력 방법에 필요한 최소 기능을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="657e082947a75eb85cbfdaf98920e1b73e69de74" translate="yes" xml:space="preserve">
          <source>The following example shows the simplest usage of the Image type.</source>
          <target state="translated">다음 예제는 가장 간단한 이미지 유형 사용법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="13a7da189b3000f41bde0f4913207873a9718d60" translate="yes" xml:space="preserve">
          <source>The following example shows the various effects of stacking order.</source>
          <target state="translated">다음 예제는 스태킹 순서의 다양한 효과를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="aae92e9d1523a16c5af60bcecb8a61911b8f6cf3" translate="yes" xml:space="preserve">
          <source>The following example snippet illustrates how to use a page-specific toolbar header and an application-wide tabbar footer.</source>
          <target state="translated">다음 예제 스 니펫은 페이지 별 도구 모음 헤더 및 애플리케이션 전체의 탭 막대 바닥 글을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c9a98dc3e96afa2d989765279ae26f84f0b1874e" translate="yes" xml:space="preserve">
          <source>The following example specifies a left margin:</source>
          <target state="translated">다음 예제는 왼쪽 여백을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="0ee51518ff0c9843299f1c6d89ee47fbdd0feb39" translate="yes" xml:space="preserve">
          <source>The following example triggers the copy action and therefore copies any selected text to the clipboard.</source>
          <target state="translated">다음 예제는 복사 작업을 트리거하므로 선택한 텍스트를 클립 보드에 복사합니다.</target>
        </trans-unit>
        <trans-unit id="0aacab094605a7af2dd1ead22c94d8c8889b02bc" translate="yes" xml:space="preserve">
          <source>The following example uses a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; in a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; that changes the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; color to red when clicked:</source>
          <target state="translated">다음 예제에서는 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 에서 &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; 를 사용하여 클릭하면 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 색상을 빨간색으로 변경합니다 .</target>
        </trans-unit>
        <trans-unit id="8c7a6609d9d7eaced8bfaeda7fa244cae300e7a0" translate="yes" xml:space="preserve">
          <source>The following example uses a MouseArea in a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; that changes the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; color to red when clicked:</source>
          <target state="translated">The following example uses a MouseArea in a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; that changes the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; color to red when clicked:</target>
        </trans-unit>
        <trans-unit id="19b089035669ef5f00d4245d925a803302d7123a" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;application&lt;/code&gt; object to indicate whether the application is currently active:</source>
          <target state="translated">다음 예제는 &lt;code&gt;application&lt;/code&gt; 객체를 사용하여 응용 프로그램이 현재 활성화되어 있는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="40190e2cf0e8e9af68d9fe47a61583c30e1b4a86" translate="yes" xml:space="preserve">
          <source>The following example uses the &lt;code&gt;styleHints&lt;/code&gt; object to determine whether an item should gain focus on mouse press or touch release:</source>
          <target state="translated">다음 예제는 &lt;code&gt;styleHints&lt;/code&gt; 객체를 사용하여 항목이 마우스 누르기 또는 터치 해제에 초점을 맞출 것인지 결정합니다.</target>
        </trans-unit>
        <trans-unit id="6007660c0fc54a99e01a2667ceda805504e61629" translate="yes" xml:space="preserve">
          <source>The following example uses the attached &lt;a href=&quot;qml-qtquick-controls2-overlay#overlay-attached-prop&quot;&gt;Overlay.overlay&lt;/a&gt; property to position a popup in the center of the window, despite the position of the button that opens the popup:</source>
          <target state="translated">다음 예제에서는 연결된 &lt;a href=&quot;qml-qtquick-controls2-overlay#overlay-attached-prop&quot;&gt;Overlay.overlay&lt;/a&gt; 속성을 사용하여 팝업을 여는 버튼의 위치에도 불구하고 창 가운데에 팝업을 배치합니다.</target>
        </trans-unit>
        <trans-unit id="ef295c974253d3e55c06abdea02bb3183b763c4d" translate="yes" xml:space="preserve">
          <source>The following example uses the three qdoc ditamap commands described above.</source>
          <target state="translated">다음 예제는 위에서 설명한 세 개의 qdoc ditamap 명령을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c6ac202097907723afb4e68e938ec64238942f6b" translate="yes" xml:space="preserve">
          <source>The following example waits up to one second for a connection to be closed:</source>
          <target state="translated">다음 예제는 연결이 닫힐 때까지 최대 1 초 동안 대기합니다.</target>
        </trans-unit>
        <trans-unit id="64c20d1663d02daeba2c1eb8c2a836f59d601afa" translate="yes" xml:space="preserve">
          <source>The following example waits up to one second for a connection to be established:</source>
          <target state="translated">다음 예제는 연결이 설정 될 때까지 최대 1 초 동안 대기합니다.</target>
        </trans-unit>
        <trans-unit id="87cf9a7f6f1a1e01b768f9e4a5fdd2736d6bba14" translate="yes" xml:space="preserve">
          <source>The following example waits up to one second for the session to be opened:</source>
          <target state="translated">다음 예제는 세션이 열릴 때까지 최대 1 초 동안 대기합니다.</target>
        </trans-unit>
        <trans-unit id="1763625c312b139f41a7fe67fde88b799b2ec9bd" translate="yes" xml:space="preserve">
          <source>The following example waits up to one second for the socket to be encrypted:</source>
          <target state="translated">다음 예제는 소켓이 암호화 될 때까지 최대 1 초 동안 대기합니다.</target>
        </trans-unit>
        <trans-unit id="b7d9a7534f49cc940990ec06d6d96bcff879e558" translate="yes" xml:space="preserve">
          <source>The following example will allow you to position an item at the end of the last line:</source>
          <target state="translated">The following example will allow you to position an item at the end of the last line:</target>
        </trans-unit>
        <trans-unit id="e42e650b927fe91957f007cca3fc9de3d0f5b0a9" translate="yes" xml:space="preserve">
          <source>The following example will load and append the contents of a file to the stream:</source>
          <target state="translated">다음 예제는 파일의 내용을로드하여 스트림에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="88b89af013c9f6ec9af6073da52fc58fc00fe1d6" translate="yes" xml:space="preserve">
          <source>The following example will run all tests in &lt;code&gt;MyTestObject&lt;/code&gt;:</source>
          <target state="translated">다음 예제는 &lt;code&gt;MyTestObject&lt;/code&gt; 에서 모든 테스트를 실행합니다 .</target>
        </trans-unit>
        <trans-unit id="d544ebc78170d4bda8affc998d490d592d025d2d" translate="yes" xml:space="preserve">
          <source>The following example will show a &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;, &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;, and &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; side by side, with two splitter handles:</source>
          <target state="translated">다음 예제는 두 개의 스플리터 핸들과 함께 &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; , &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; 및 &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit를&lt;/a&gt; 나란히 표시합니다.</target>
        </trans-unit>
        <trans-unit id="52257cae710a3a49027ee4352ba328227688e382" translate="yes" xml:space="preserve">
          <source>The following example writes a number to a byte array then returns it.</source>
          <target state="translated">다음 예제는 바이트 배열에 숫자를 쓴 다음 반환합니다.</target>
        </trans-unit>
        <trans-unit id="298684f1412c687c1d892df6f0dca627b5bdf746" translate="yes" xml:space="preserve">
          <source>The following example writes an arbitrary &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; to the stream:</source>
          <target state="translated">다음 예제는 임의의 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 을 스트림에 씁니다 .</target>
        </trans-unit>
        <trans-unit id="fcfc03cff79fe71d0b58c8b3c7a55b1cb8641019" translate="yes" xml:space="preserve">
          <source>The following example writes an empty map to a file:</source>
          <target state="translated">다음 예제는 빈 맵을 파일에 씁니다.</target>
        </trans-unit>
        <trans-unit id="7fb00fcc4df747f672853aab6b9a17fed718e236" translate="yes" xml:space="preserve">
          <source>The following example writes to elements of a reference sequence in a tight loop, resulting in bad performance:</source>
          <target state="translated">다음 예제는 엄격한 순서로 참조 시퀀스의 요소에 쓰므로 성능이 저하됩니다.</target>
        </trans-unit>
        <trans-unit id="1a50561b624bd5173117c5069e84288761c00db2" translate="yes" xml:space="preserve">
          <source>The following examples demonstrate the default values:</source>
          <target state="translated">다음 예제는 기본값을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="5120f1fd32785606924fb77a0f5182cde1f3b7e3" translate="yes" xml:space="preserve">
          <source>The following examples illustrate both &lt;a href=&quot;qtremoteobjects-repc&quot;&gt;repc&lt;/a&gt;-compiled static objects and dynamic source objects. Additionally, they also show direct connections as well as connections that use a &lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;Registry&lt;/a&gt; between nodes.</source>
          <target state="translated">The following examples illustrate both &lt;a href=&quot;qtremoteobjects-repc&quot;&gt;repc&lt;/a&gt;-compiled static objects and dynamic source objects. Additionally, they also show direct connections as well as connections that use a &lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;Registry&lt;/a&gt; between nodes.</target>
        </trans-unit>
        <trans-unit id="e387c58ab63547f192db568cd4a89a9c639b076d" translate="yes" xml:space="preserve">
          <source>The following examples show how to create a &lt;b&gt;serialnmea&lt;/b&gt;&lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource&lt;/a&gt; listening on a specific serial port</source>
          <target state="translated">The following examples show how to create a &lt;b&gt;serialnmea&lt;/b&gt;&lt;a href=&quot;qml-qtpositioning-positionsource&quot;&gt;PositionSource&lt;/a&gt; listening on a specific serial port</target>
        </trans-unit>
        <trans-unit id="e87ec247c66a8b8cd1ba87d33083718a60e53062" translate="yes" xml:space="preserve">
          <source>The following examples show the effects of the different modes on an image. Guide lines are overlaid onto the image to show the different regions of the image as described above.</source>
          <target state="translated">다음 예제는 이미지에 대한 다양한 모드의 효과를 보여줍니다. 가이드 라인은 이미지에 겹쳐서 위에서 설명한 이미지의 다른 영역을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="86e71449435524af2bc9b39d16d890059a70514d" translate="yes" xml:space="preserve">
          <source>The following feature keywords are relevant for choosing the OpenGL implementation:</source>
          <target state="translated">The following feature keywords are relevant for choosing the OpenGL implementation:</target>
        </trans-unit>
        <trans-unit id="9673c1ad43a6fcaedfb90e354b2b78a7441a1631" translate="yes" xml:space="preserve">
          <source>The following features can also be customized:</source>
          <target state="translated">다음 기능도 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c444980202e92b511a9e53c65235dffad6d3f1b" translate="yes" xml:space="preserve">
          <source>The following features directories are searched for features files:</source>
          <target state="translated">다음 기능 디렉토리는 기능 파일을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="ebc50dc839c68e9abee72e753e9e33d980a3e28a" translate="yes" xml:space="preserve">
          <source>The following filter matches NDEF messages that contain a URI, a localized piece of text and an optional JPEG image. The order of the records must be in the order specified:</source>
          <target state="translated">다음 필터는 URI, 현지화 된 텍스트 및 선택적 JPEG 이미지를 포함하는 NDEF 메시지와 일치합니다. 레코드 순서는 지정된 순서대로해야합니다.</target>
        </trans-unit>
        <trans-unit id="17d26f2e79ac6f28d3b635124e43c8e71430b0bc" translate="yes" xml:space="preserve">
          <source>The following filter matches NDEF messages that contain a single smart poster record:</source>
          <target state="translated">다음 필터는 단일 스마트 포스터 레코드가 포함 된 NDEF 메시지와 일치합니다.</target>
        </trans-unit>
        <trans-unit id="859db664d742fc7577002368751b17e8ed88e7f0" translate="yes" xml:space="preserve">
          <source>The following flags are helpful when you want to define macOS specific code:</source>
          <target state="translated">다음 플래그는 macOS 특정 코드를 정의 할 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="6b825ee5f0bede6a1d6581f7b8075a6649ea07a9" translate="yes" xml:space="preserve">
          <source>The following functions are also on the Qt object.</source>
          <target state="translated">다음 기능도 Qt 객체에 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa4719eecd2cc91df6a51ba6aed7a0b48252a786" translate="yes" xml:space="preserve">
          <source>The following functions can be implemented in a fragment shader snippet:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f8af36f233c4f6fe271544f73b26903cac7860fd" translate="yes" xml:space="preserve">
          <source>The following functions can be implemented in a vertex shader snippet:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="bf58141f06bca4f9c90384e3689869f68fd44aaa" translate="yes" xml:space="preserve">
          <source>The following functions on the global object allow you to dynamically create QML items from files or strings. See &lt;a href=&quot;qtqml-javascript-dynamicobjectcreation&quot;&gt;Dynamic QML Object Creation from JavaScript&lt;/a&gt; for an overview of their use.</source>
          <target state="translated">The following functions on the global object allow you to dynamically create QML items from files or strings. See &lt;a href=&quot;qtqml-javascript-dynamicobjectcreation&quot;&gt;Dynamic QML Object Creation from JavaScript&lt;/a&gt; for an overview of their use.</target>
        </trans-unit>
        <trans-unit id="05d7c505b691b8a3f24cbee49cd00b13710c2718" translate="yes" xml:space="preserve">
          <source>The following functions on the global object allow you to dynamically create QML items from files or strings. See &lt;a href=&quot;qtqml-javascript-dynamicobjectcreation#&quot;&gt;Dynamic QML Object Creation from JavaScript&lt;/a&gt; for an overview of their use.</source>
          <target state="translated">글로벌 오브젝트에서 다음 기능을 사용하면 파일 또는 문자열에서 QML 항목을 동적으로 작성할 수 있습니다. 사용에 대한 개요는 &lt;a href=&quot;qtqml-javascript-dynamicobjectcreation#&quot;&gt;JavaScript에서 동적 QML 객체 생성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="037ebb813eed44020b21ed050ecd8f390c75801c" translate="yes" xml:space="preserve">
          <source>The following generic sensors are supported:</source>
          <target state="translated">다음과 같은 일반 센서가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="096c999cc953248f6d87f10ffdb8cd0d80641108" translate="yes" xml:space="preserve">
          <source>The following hints are most useful when models are used that cache data, such as those that manipulate data locally in order to increase performance or conserve network bandwidth.</source>
          <target state="translated">다음 힌트는 성능을 높이거나 네트워크 대역폭을 보존하기 위해 로컬로 데이터를 조작하는 데이터와 같이 데이터를 캐시하는 모델을 사용할 때 가장 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2bd753f4fcaecd6e6abde57e85e2bd06b4e818c4" translate="yes" xml:space="preserve">
          <source>The following image displays the mydialog.ui file in Qt Creator Design mode. You can view the code in the Edit mode.</source>
          <target state="translated">다음 이미지는 Qt Creator 디자인 모드에서 mydialog.ui 파일을 표시합니다. 편집 모드에서 코드를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0da437ca94971afb12000f335d410aa04272138f" translate="yes" xml:space="preserve">
          <source>The following image formats are available in Qt. See the notes after the table.</source>
          <target state="translated">Qt에서는 다음 이미지 형식을 사용할 수 있습니다. 표 뒤의 참고 사항을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7d6fe5615b9c38b5de6416f38def2647e1d7029f" translate="yes" xml:space="preserve">
          <source>The following image formats are supported, and will be mapped to a corresponding native image type:</source>
          <target state="translated">다음 이미지 형식이 지원되며 해당 기본 이미지 유형에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="67d581876f28313f10f9f742c40e1db08dea8378" translate="yes" xml:space="preserve">
          <source>The following image illustrates the directions in which the various input modes track movement:</source>
          <target state="translated">다음 이미지는 다양한 입력 모드가 움직임을 추적하는 방향을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e1c1c41f161088ba52ff6d9b66d1fe0a6bb593ee" translate="yes" xml:space="preserve">
          <source>The following images demonstrate a flickable being flicked in various directions and the resulting &lt;a href=&quot;qml-qtquick-flickable#contentX-prop&quot;&gt;contentX&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-flickable#contentY-prop&quot;&gt;contentY&lt;/a&gt; values. The blue square represents the flickable's content, and the black border represents the bounds of the flickable.</source>
          <target state="translated">다음 이미지는 &lt;a href=&quot;qml-qtquick-flickable#contentY-prop&quot;&gt;플리커 블이&lt;/a&gt; 다양한 방향으로 튕기 는 결과 &lt;a href=&quot;qml-qtquick-flickable#contentX-prop&quot;&gt;contentX&lt;/a&gt; 및 contentY 값을 보여 줍니다. 파란색 사각형은 flickable의 내용을 나타내고 검은 색 테두리는 flickable의 경계를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="cd3e5261788d312626aa26d59ec57255338d12c3" translate="yes" xml:space="preserve">
          <source>The following images illustrate the differences between some of the controls when using the normal and dense variants:</source>
          <target state="translated">다음 이미지는 일반 및 조밀 한 변형을 사용할 때 일부 컨트롤의 차이점을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="200c82929c8da4c81bb6fb74f81a63fdfade0064" translate="yes" xml:space="preserve">
          <source>The following implementation of a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; subclass prints the path to the file that was, for example, dropped on the Dock icon of the application.</source>
          <target state="translated">다음의 &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; 서브 클래스 구현은 예를 들어 응용 프로그램의 Dock 아이콘에 놓인 파일의 경로를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="59beadcd00e0672af98b1930e5dd2bc069173d70" translate="yes" xml:space="preserve">
          <source>The following inputs are predefined:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ab4663a91babc02e7341d3f3e8d548593ede480" translate="yes" xml:space="preserve">
          <source>The following instructions guide you to build and add the OpenSSL libraries to the APK:</source>
          <target state="translated">다음 지침은 OpenSSL 라이브러리를 빌드하고 APK에 추가하도록 안내합니다.</target>
        </trans-unit>
        <trans-unit id="c9b54b31bc677a52332efb44db77be21e05130d6" translate="yes" xml:space="preserve">
          <source>The following instructions guide you to build the OpenSSL libraries manually:</source>
          <target state="translated">The following instructions guide you to build the OpenSSL libraries manually:</target>
        </trans-unit>
        <trans-unit id="6ad80cc34b9f0820839dafa8697179d8ae4416e8" translate="yes" xml:space="preserve">
          <source>The following is a code snippet illustrating how to create a red line using a &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode&lt;/a&gt;:</source>
          <target state="translated">다음은 &lt;a href=&quot;qsggeometrynode&quot;&gt;QSGGeometryNode를&lt;/a&gt; 사용하여 빨간색 선을 작성하는 방법을 보여주는 코드 스 니펫입니다 .</target>
        </trans-unit>
        <trans-unit id="bf2dc08c3f9c15e415b8a75e511b604a11cd70dc" translate="yes" xml:space="preserve">
          <source>The following is a code snippet illustrating how to create a red line using a QSGGeometryNode:</source>
          <target state="translated">The following is a code snippet illustrating how to create a red line using a QSGGeometryNode:</target>
        </trans-unit>
        <trans-unit id="afe01102b476ba26c47d1a02183848070a1a33a5" translate="yes" xml:space="preserve">
          <source>The following is a list of example applications that use UIs created by the Qt Quick Designer:</source>
          <target state="translated">다음은 Qt Quick Designer에서 만든 UI를 사용하는 예제 응용 프로그램 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d49a2f9adcfb43baebaf73ec9b22cbbb07268c70" translate="yes" xml:space="preserve">
          <source>The following is a list of important QML types and C++ classes provided by this module:</source>
          <target state="translated">다음은이 모듈에서 제공하는 중요한 QML 유형 및 C ++ 클래스 목록입니다.</target>
        </trans-unit>
        <trans-unit id="0b272cba7c0a906c07623a94e05e33b918a303b8" translate="yes" xml:space="preserve">
          <source>The following is a simple outline of how a frame gets composed with the threaded render loop.</source>
          <target state="translated">다음은 스레드 렌더링 루프로 프레임을 구성하는 방법에 대한 간단한 개요입니다.</target>
        </trans-unit>
        <trans-unit id="da0a05c567340a59423f2ffe4af8dd98728aebeb" translate="yes" xml:space="preserve">
          <source>The following is a simple outline of how a frame gets rendered with the threaded render loop and OpenGL. The steps are the same with other graphics APIs as well, apart from the OpenGL context specifics.</source>
          <target state="translated">The following is a simple outline of how a frame gets rendered with the threaded render loop and OpenGL. The steps are the same with other graphics APIs as well, apart from the OpenGL context specifics.</target>
        </trans-unit>
        <trans-unit id="fc63f291bf8798d2e5990fc0fb5b173f5c511f48" translate="yes" xml:space="preserve">
          <source>The following is a simplified illustration of the frame rendering sequence in the non-threaded renderer.</source>
          <target state="translated">다음은 스레드되지 않은 렌더러에서 프레임 렌더링 시퀀스를 단순화 한 그림입니다.</target>
        </trans-unit>
        <trans-unit id="037e3ef7c44dbf0212f9c6b7b16c32a9831f320b" translate="yes" xml:space="preserve">
          <source>The following is a snippet showing how to subclass &lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt; to wrap an NSSearchField.</source>
          <target state="translated">다음은 &lt;a href=&quot;qmaccocoaviewcontainer&quot;&gt;QMacCocoaViewContainer&lt;/a&gt; 를 서브 클래 싱 하여 NSSearchField 를 래핑하는 방법을 보여주는 스 니펫 입니다.</target>
        </trans-unit>
        <trans-unit id="7cf7f081e78324b9e4b5b294891b65e0d2de0014" translate="yes" xml:space="preserve">
          <source>The following is a snippet showing how to subclass QMacCocoaViewContainer to wrap an NSSearchField.</source>
          <target state="translated">The following is a snippet showing how to subclass QMacCocoaViewContainer to wrap an NSSearchField.</target>
        </trans-unit>
        <trans-unit id="4293d374a993a1ef7d716943a674eaa39b8067d4" translate="yes" xml:space="preserve">
          <source>The following is a statechart that uses the custom event and transition:</source>
          <target state="translated">다음은 사용자 정의 이벤트 및 전환을 사용하는 상태 차트입니다.</target>
        </trans-unit>
        <trans-unit id="81e97c86d04722e15ac7d1056dc1b2eecddc5ede" translate="yes" xml:space="preserve">
          <source>The following is an example configuration for the Raspberry Pi 2. For most Embedded Linux boards, the configure command looks similar:</source>
          <target state="translated">다음은 Raspberry Pi 2의 구성 예입니다. 대부분의 임베디드 Linux 보드의 경우 configure 명령이 비슷합니다.</target>
        </trans-unit>
        <trans-unit id="1cb757132855c05d30d5c6f62545b002304c7295" translate="yes" xml:space="preserve">
          <source>The following is an example of an &lt;a href=&quot;qml-qtquick3d-custommaterial#shadingMode-prop&quot;&gt;unshaded&lt;/a&gt; custom material.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="30a666951052515b5bda6b8270a6f24e8c88f9c9" translate="yes" xml:space="preserve">
          <source>The following is an example of the header of a simple widget class without member functions. The purpose is to show how you can utilize signals and slots in your own applications.</source>
          <target state="translated">다음은 멤버 함수가없는 간단한 위젯 클래스의 헤더 예입니다. 목적은 자체 애플리케이션에서 신호와 슬롯을 활용하는 방법을 보여주는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fe24de91c868b9f745653f906d51b82e941ca742" translate="yes" xml:space="preserve">
          <source>The following is given for each widget:</source>
          <target state="translated">각 위젯에 대해 다음이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="bbaa9dc8cacd483abf3da41db917f4a880a9196f" translate="yes" xml:space="preserve">
          <source>The following is largly based on our own experiements with ActiveX controls and client applications, and is by no means complete.</source>
          <target state="translated">다음은 ActiveX 컨트롤 및 클라이언트 응용 프로그램을 사용한 자체 경험을 기반으로하며, 완전한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="d0825aa898f7f6b1e8b7f165231a9c14546fc29f" translate="yes" xml:space="preserve">
          <source>The following is the basic outline of creating a Vulkan-capable &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;:</source>
          <target state="translated">다음은 Vulkan 가능 &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; 생성에 대한 기본 개요입니다 .</target>
        </trans-unit>
        <trans-unit id="e77a31dda49f63e97156a2aa31816ea9a49aaf7b" translate="yes" xml:space="preserve">
          <source>The following items are not supported by this module:</source>
          <target state="translated">이 모듈은 다음 항목을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d3cfd143c9bd65382e3dad9d1997d56ea72d085a" translate="yes" xml:space="preserve">
          <source>The following keys are defined in the API. &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt; implementations are free to define additional keys.</source>
          <target state="translated">다음 키는 API에 정의되어 있습니다. &lt;a href=&quot;location-places-qml#plugin&quot;&gt;플러그인&lt;/a&gt; 구현은 추가 키를 자유롭게 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b1b904af6b64aefbf1bb1acd717ac6f30f1f758" translate="yes" xml:space="preserve">
          <source>The following keys are handled specifically:</source>
          <target state="translated">다음 키는 구체적으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="4a05454995583142bf1ddaf09375e3f72bfb8288" translate="yes" xml:space="preserve">
          <source>The following keywords are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b9bc9093418d1af12a7d8df97dfc0b9acf374885" translate="yes" xml:space="preserve">
          <source>The following list enumerates all of the available type conversions:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cef43cfd41225f7cdfb12984d737f4ab2c0ff895" translate="yes" xml:space="preserve">
          <source>The following list explains the required steps of inserting a custom text object into a document:</source>
          <target state="translated">다음 목록은 문서에 사용자 정의 텍스트 객체를 삽입하는 데 필요한 단계를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ad53b33d5d180949b93c544ad215490290c46123" translate="yes" xml:space="preserve">
          <source>The following list is a good summary of things to keep in mind when designing a delegate:</source>
          <target state="translated">다음 목록은 델리게이트를 디자인 할 때 명심해야 할 사항을 요약 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="456db32cacfdb72f60fecccf7e05b1f3f0db033c" translate="yes" xml:space="preserve">
          <source>The following list presents the functional division of types that are part of Qt Graphical Effects:</source>
          <target state="translated">다음 목록은 Qt 그래픽 효과의 일부인 기능 유형을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="38051d59210aac76499969246f7f96364c06621a" translate="yes" xml:space="preserve">
          <source>The following list shows further details that may be retrieved via QPlaceManager::getDetails()</source>
          <target state="translated">다음 목록은 QPlaceManager :: getDetails ()를 통해 검색 할 수있는 추가 세부 사항을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3541edf0b714103e38aec5beecdfcd723dd75473" translate="yes" xml:space="preserve">
          <source>The following list shows what core place data is returned during a place search:</source>
          <target state="translated">다음 목록은 장소 검색 중에 반환되는 핵심 장소 데이터를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3e089ebc633a2771a543305e933fdbd42c1ad511" translate="yes" xml:space="preserve">
          <source>The following list summarizes the &lt;code&gt;built-in&lt;/code&gt; properties:</source>
          <target state="translated">다음 목록은 &lt;code&gt;built-in&lt;/code&gt; 특성을 요약 한 것입니다 .</target>
        </trans-unit>
        <trans-unit id="66e8130010797c0765271dd72a748a0a5556d8fa" translate="yes" xml:space="preserve">
          <source>The following list summarizes the available Shape rendering approaches:</source>
          <target state="translated">다음은 사용 가능한 모양 렌더링 방법을 요약 한 목록입니다.</target>
        </trans-unit>
        <trans-unit id="fa5bdfccf27d0371ccdef272c6a0351d8ca98de2" translate="yes" xml:space="preserve">
          <source>The following list summarizes what you can do with Qt for Android:</source>
          <target state="translated">다음 목록은 Android 용 Qt로 수행 할 수있는 작업을 요약 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="40c88740190849337880672448ffbca67ce11fd0" translate="yes" xml:space="preserve">
          <source>The following lists a set of useful attributes that can be used to tweak applications on macOS:</source>
          <target state="translated">다음은 macOS에서 응용 프로그램을 조정하는 데 사용할 수있는 유용한 속성 세트입니다.</target>
        </trans-unit>
        <trans-unit id="07aa2e54440e9f3134cb9805130e1fd76598de25" translate="yes" xml:space="preserve">
          <source>The following metadata example is from the Lipi-Toolkit extension plugin (lipi.json):</source>
          <target state="translated">다음 메타 데이터 예제는 Lipi-Toolkit 확장 플러그인 (lipi.json)에서 가져온 것입니다.</target>
        </trans-unit>
        <trans-unit id="80f72ca334abb8b84262125c6b2948f164b64361" translate="yes" xml:space="preserve">
          <source>The following methods return &lt;a href=&quot;qjsonvalue#qjsonvalueref&quot;&gt;QJsonValueRef&lt;/a&gt;:</source>
          <target state="translated">다음 메소드는 &lt;a href=&quot;qjsonvalue#qjsonvalueref&quot;&gt;QJsonValueRef를&lt;/a&gt; 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="59931ef3d3a60b0d7365e225c2ecabe26ccdaaee" translate="yes" xml:space="preserve">
          <source>The following model defines a series of list elements, each of which contain &quot;name&quot; and &quot;cost&quot; roles and their associated values.</source>
          <target state="translated">다음 모델은 일련의 목록 요소를 정의하며 각 요소에는 &quot;이름&quot;및 &quot;비용&quot;역할과 관련 값이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0420a76de72e25515d7c8224d8abf7bb6118a347" translate="yes" xml:space="preserve">
          <source>The following model has three roles,</source>
          <target state="translated">다음 모델에는 세 가지 역할이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f684d3e156ea685b52dc810852f5251d66d769bc" translate="yes" xml:space="preserve">
          <source>The following operating systems guarantee that the results from their random-generation API will be of at least cryptographically-safe quality, even if the entropy pool is exhausted: Apple OSes (Darwin), BSDs, Linux, Windows. Barring a system installation problem (such as &lt;code&gt;/dev/urandom&lt;/code&gt; not being readable by the current process), &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator::system&lt;/a&gt;() will therefore have the same guarantees.</source>
          <target state="translated">다음 운영 체제는 엔트로피 풀이 소진 된 경우에도 임의 생성 API의 결과가 최소한 암호화 안전 품질을 보장합니다. Apple OS (Darwin), BSD, Linux, Windows. 시스템 설치 문제점 (예 : 현재 프로세스가 &lt;code&gt;/dev/urandom&lt;/code&gt; 을 읽을 수 없음)을 제외하면 &lt;a href=&quot;qrandomgenerator#system&quot;&gt;QRandomGenerator :: system&lt;/a&gt; ()은 동일한 보증을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="fb7283886649230184530ef9293240d6bbe63254" translate="yes" xml:space="preserve">
          <source>The following option can also be defined to provide additional information about the library.</source>
          <target state="translated">라이브러리에 대한 추가 정보를 제공하기 위해 다음 옵션을 정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a2fb637a55b6d1c7cfc381880e53014fbe62871" translate="yes" xml:space="preserve">
          <source>The following options define the application or library type:</source>
          <target state="translated">다음 옵션은 응용 프로그램 또는 라이브러리 유형을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="2d6714bddc1a24373012d331661fd7300217d304" translate="yes" xml:space="preserve">
          <source>The following options define the type of project to be built.</source>
          <target state="translated">다음 옵션은 빌드 할 프로젝트 유형을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="86e96782d5732ddc4f94ca5a2e38971c51674dc0" translate="yes" xml:space="preserve">
          <source>The following options take an effect only on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;:</source>
          <target state="translated">다음 옵션은 &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; 에만 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="2f9e1a0fb9af7736ef00aa7d57585f20ef65af7e" translate="yes" xml:space="preserve">
          <source>The following options take an effect only on Linux/Unix platforms:</source>
          <target state="translated">다음 옵션은 Linux / Unix 플랫폼에서만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="2cb3e9eb12f436782b53c6ac5515b76e59afbf4b" translate="yes" xml:space="preserve">
          <source>The following options take an effect only on macOS:</source>
          <target state="translated">The following options take an effect only on macOS:</target>
        </trans-unit>
        <trans-unit id="ab0f36260c2d501385f1ed3509885c107f0ee3b5" translate="yes" xml:space="preserve">
          <source>The following pages contain information about setting up Qt Creator and how to get started with the mobile platforms:</source>
          <target state="translated">다음 페이지에는 Qt Creator 설정 및 모바일 플랫폼 시작 방법에 대한 정보가 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb668a26fed996ee065c637306d790bd03f63eb5" translate="yes" xml:space="preserve">
          <source>The following pages contain more information about QML:</source>
          <target state="translated">다음 페이지에는 QML에 대한 자세한 정보가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bc03969e83dddfd41e37a9813827ee00b82f431" translate="yes" xml:space="preserve">
          <source>The following pages provide guidelines on how to configure Qt for specific platform development:</source>
          <target state="translated">다음 페이지는 특정 플랫폼 개발을 위해 Qt를 구성하는 방법에 대한 지침을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="dae61d400f3036984f0adbb4379465973ba4286c" translate="yes" xml:space="preserve">
          <source>The following pages provide more information about Qt's core features:</source>
          <target state="translated">다음 페이지는 Qt의 핵심 기능에 대한 자세한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b79ca8636f19f6cbebe8b12de8b9a444f6c73ce2" translate="yes" xml:space="preserve">
          <source>The following pages show how to develop Qt applications using &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html&quot;&gt;Qt Creator&lt;/a&gt; and Qt Quick. The pages demonstrate various steps such as use cases and introductory material. For more information about Qt Quick Applications and related modules, visit the &lt;a href=&quot;qmlapplications&quot;&gt;QML Applications&lt;/a&gt; page.</source>
          <target state="translated">다음 페이지는 &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html&quot;&gt;Qt Creator&lt;/a&gt; 및 Qt Quick을 사용하여 Qt 애플리케이션을 개발하는 방법을 보여줍니다 . 이 페이지는 사용 사례 및 소개 자료와 같은 다양한 단계를 보여줍니다. Qt Quick Applications 및 관련 모듈에 대한 자세한 내용은 &lt;a href=&quot;qmlapplications&quot;&gt;QML Applications&lt;/a&gt; 페이지를 방문 하십시오.</target>
        </trans-unit>
        <trans-unit id="7c6dd879832d51d5371080493c2cc732a3038b14" translate="yes" xml:space="preserve">
          <source>The following parameter is available for &lt;code&gt;-platform cocoa&lt;/code&gt; (on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;):</source>
          <target state="translated">&lt;code&gt;-platform cocoa&lt;/code&gt; ( &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; ) 에 다음 매개 변수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="90e565d895eb3f62f5badaa6775eb51691fb8dfd" translate="yes" xml:space="preserve">
          <source>The following parameter is available for &lt;code&gt;-platform cocoa&lt;/code&gt; (on macOS):</source>
          <target state="translated">The following parameter is available for &lt;code&gt;-platform cocoa&lt;/code&gt; (on macOS):</target>
        </trans-unit>
        <trans-unit id="7aba8f2f652450b6b70c2180a9f0f86cbcb38a56" translate="yes" xml:space="preserve">
          <source>The following parameters are available for &lt;code&gt;-platform windows&lt;/code&gt;:</source>
          <target state="translated">- &lt;code&gt;-platform windows&lt;/code&gt; 다음 매개 변수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d0c0ca6b005d6c63318aaf9ca226d0ac29838ac1" translate="yes" xml:space="preserve">
          <source>The following parameters are for creating a QHP file (</source>
          <target state="translated">다음 매개 변수는 QHP 파일을 작성하기위한 것입니다 (</target>
        </trans-unit>
        <trans-unit id="1dedfe801606812dd1813cd156cd9ab8c343d4fe" translate="yes" xml:space="preserve">
          <source>The following platforms are supported in Qt 5.13. For support information for prior Qt releases, please consult the relevant version in the &lt;a href=&quot;http://doc.qt.io/archives/&quot;&gt;Qt Documentation Archives&lt;/a&gt;.</source>
          <target state="translated">Qt 5.13에서는 다음 플랫폼이 지원됩니다. 이전 Qt 릴리스에 대한 지원 정보는 &lt;a href=&quot;http://doc.qt.io/archives/&quot;&gt;Qt Documentation Archives&lt;/a&gt; 의 관련 버전을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a668ee60c1d1081a73ed0c4ede044cbbc1fd4a1a" translate="yes" xml:space="preserve">
          <source>The following platforms are supported in Qt 5.15. For support information for prior Qt releases, please consult the relevant version in the &lt;a href=&quot;http://doc.qt.io/archives/&quot;&gt;Qt Documentation Archives&lt;/a&gt;.</source>
          <target state="translated">The following platforms are supported in Qt 5.15. For support information for prior Qt releases, please consult the relevant version in the &lt;a href=&quot;http://doc.qt.io/archives/&quot;&gt;Qt Documentation Archives&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fb00cf09018fcae52b5f75078b6cf5303eecf7e3" translate="yes" xml:space="preserve">
          <source>The following platforms are supported in Qt 6.0. For information about prior Qt releases, please consult the relevant version in the &lt;a href=&quot;http://doc.qt.io/archives/&quot;&gt;Qt Documentation Archives&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="023412a21ebc2efa75dba7b5a4900f759e2b93b4" translate="yes" xml:space="preserve">
          <source>The following properties are also available:</source>
          <target state="translated">다음과 같은 속성도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7593412ed195effa3c1c69d10b33bcd500faae65" translate="yes" xml:space="preserve">
          <source>The following properties are available in the context of each delegate:</source>
          <target state="translated">각 대리인의 컨텍스트에서 다음 속성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82ee4dfcb65d69091f93e6ae50d7fc373037c229" translate="yes" xml:space="preserve">
          <source>The following properties are available on Google Play:</source>
          <target state="translated">Google Play에서 다음 속성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="056df19a16af6f342ef1225b1b3c2fd9426f8c69" translate="yes" xml:space="preserve">
          <source>The following properties are available to the item:</source>
          <target state="translated">항목에 사용할 수있는 속성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ef8a4eaa8a468b2135b716ffca510ae179136ae7" translate="yes" xml:space="preserve">
          <source>The following properties are imported:</source>
          <target state="translated">The following properties are imported:</target>
        </trans-unit>
        <trans-unit id="b40a67009e386dae82032c1d73eb19b760927127" translate="yes" xml:space="preserve">
          <source>The following properties can be overridden by using &lt;a href=&quot;qabstract3dseries&quot;&gt;QAbstract3DSeries&lt;/a&gt; properties to set them explicitly in the series: &lt;a href=&quot;q3dtheme#baseColors-prop&quot;&gt;baseColors&lt;/a&gt;, &lt;a href=&quot;q3dtheme#baseGradients-prop&quot;&gt;baseGradients&lt;/a&gt;, and &lt;a href=&quot;q3dtheme#colorStyle-prop&quot;&gt;colorStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qabstract3dseries&quot;&gt;QAbstract3DSeries&lt;/a&gt; 속성을 사용 하여 시리즈에서 명시 적으로 설정하면 &lt;a href=&quot;q3dtheme#baseColors-prop&quot;&gt;baseColors&lt;/a&gt; , &lt;a href=&quot;q3dtheme#baseGradients-prop&quot;&gt;baseGradients&lt;/a&gt; 및 &lt;a href=&quot;q3dtheme#colorStyle-prop&quot;&gt;colorStyle&lt;/a&gt; 속성을 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="49f911dfa2198eaa58ab62ff05c2c2a33865e8a7" translate="yes" xml:space="preserve">
          <source>The following properties can be overridden by using &lt;a href=&quot;qml-qtdatavisualization-abstract3dseries&quot;&gt;Abstract3DSeries&lt;/a&gt; properties to set them explicitly in the series: &lt;a href=&quot;qml-qtdatavisualization-theme3d#baseColors-prop&quot;&gt;baseColors&lt;/a&gt;, &lt;a href=&quot;qml-qtdatavisualization-theme3d#baseGradients-prop&quot;&gt;baseGradients&lt;/a&gt;, and &lt;a href=&quot;qml-qtdatavisualization-theme3d#colorStyle-prop&quot;&gt;colorStyle&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qml-qtdatavisualization-abstract3dseries&quot;&gt;Abstract3DSeries&lt;/a&gt; 속성을 사용하여 &lt;a href=&quot;qml-qtdatavisualization-theme3d#baseColors-prop&quot;&gt;baseColors&lt;/a&gt; , &lt;a href=&quot;qml-qtdatavisualization-theme3d#baseGradients-prop&quot;&gt;baseGradients&lt;/a&gt; 및 &lt;a href=&quot;qml-qtdatavisualization-theme3d#colorStyle-prop&quot;&gt;colorStyle&lt;/a&gt; 시리즈에서 명시 적으로 설정 하여 다음 속성을 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4fff18855976e253315b6076f712b9129fcb3fc3" translate="yes" xml:space="preserve">
          <source>The following properties of the item are used in the mapping: &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#scale-prop&quot;&gt;scale&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#rotation-prop&quot;&gt;rotation&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-item#transformOrigin-prop&quot;&gt;transformOrigin&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-item#transform-prop&quot;&gt;transform&lt;/a&gt;.</source>
          <target state="translated">항목의 다음 속성이 매핑에 사용됩니다 : &lt;a href=&quot;qml-qtquick-item#x-prop&quot;&gt;x&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-item#y-prop&quot;&gt;y&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-item#scale-prop&quot;&gt;scale&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-item#rotation-prop&quot;&gt;rotation&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-item#transformOrigin-prop&quot;&gt;transformOrigin&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-item#transform-prop&quot;&gt;transform&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5420ecbaba8e2c01df4bd5f7ad675edb2e487ce3" translate="yes" xml:space="preserve">
          <source>The following properties of the item are used in the mapping: &lt;a href=&quot;qquickitem#x-prop&quot;&gt;x&lt;/a&gt;, &lt;a href=&quot;qquickitem#y-prop&quot;&gt;y&lt;/a&gt;, &lt;a href=&quot;qquickitem#scale-prop&quot;&gt;scale&lt;/a&gt;, &lt;a href=&quot;qquickitem#rotation-prop&quot;&gt;rotation&lt;/a&gt;, &lt;a href=&quot;qquickitem#transformOrigin-prop&quot;&gt;transformOrigin&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-item#transform-prop&quot;&gt;transform&lt;/a&gt;.</source>
          <target state="translated">항목의 다음 속성이 매핑에 사용됩니다 : &lt;a href=&quot;qquickitem#x-prop&quot;&gt;x&lt;/a&gt; , &lt;a href=&quot;qquickitem#y-prop&quot;&gt;y&lt;/a&gt; , &lt;a href=&quot;qquickitem#scale-prop&quot;&gt;scale&lt;/a&gt; , &lt;a href=&quot;qquickitem#rotation-prop&quot;&gt;rotation&lt;/a&gt; , &lt;a href=&quot;qquickitem#transformOrigin-prop&quot;&gt;transformOrigin&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-item#transform-prop&quot;&gt;transform&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1f7edc66af4c0d5a1b8b9f90d6d7a31bc371e18f" translate="yes" xml:space="preserve">
          <source>The following property keys are guaranteed to be specified on all platforms:</source>
          <target state="translated">모든 플랫폼에서 다음 특성 키를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8526c31f4091eb4818a1c1ee5e5d3b1257e8484c" translate="yes" xml:space="preserve">
          <source>The following pseudo-states are supported:</source>
          <target state="translated">다음과 같은 의사 상태가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="f0ba7d11cb6cdc503c7db080f25620ebc41e357a" translate="yes" xml:space="preserve">
          <source>The following read-only properties are available within the scope of the menu button delegate:</source>
          <target state="translated">메뉴 버튼 대리 범위 내에서 다음과 같은 읽기 전용 속성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="68429ef49c89432bbd4c04f3fb9da4be31bd0b00" translate="yes" xml:space="preserve">
          <source>The following read-only property is available within the scope of the background delegate:</source>
          <target state="translated">백그라운드 읽기 범위 내에서 다음과 같은 읽기 전용 속성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a287992cf89970acc13ee2781cb1578fcfa32365" translate="yes" xml:space="preserve">
          <source>The following restrictions are enforced by the setter:</source>
          <target state="translated">The following restrictions are enforced by the setter:</target>
        </trans-unit>
        <trans-unit id="de855448328b5e9f80cc8ce9168a701f985757d7" translate="yes" xml:space="preserve">
          <source>The following rules apply:</source>
          <target state="translated">다음 규칙이 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="4798dff023274ac5c6cbef61c28b3d57736dafec" translate="yes" xml:space="preserve">
          <source>The following sample QML application loads a web page using the &lt;code&gt;url&lt;/code&gt; property:</source>
          <target state="translated">다음 샘플 QML 애플리케이션은 &lt;code&gt;url&lt;/code&gt; 특성을 사용하여 웹 페이지를로드 합니다.</target>
        </trans-unit>
        <trans-unit id="6cf48c8611b205e5eab7cccc59ae011a687fe9ce" translate="yes" xml:space="preserve">
          <source>The following sections contain guidelines for writing Qt tests:</source>
          <target state="translated">The following sections contain guidelines for writing Qt tests:</target>
        </trans-unit>
        <trans-unit id="87e287b03ea22661ea74f378588351216194acc0" translate="yes" xml:space="preserve">
          <source>The following sections describe how to resolve this.</source>
          <target state="translated">다음 섹션에서는이를 해결하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="ea21ced414504146ec7747ff86ead99587d939b3" translate="yes" xml:space="preserve">
          <source>The following sections describe the different types of elements used in project files.</source>
          <target state="translated">다음 섹션에서는 프로젝트 파일에 사용되는 다양한 유형의 요소에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="c51898f64e447bbdb32249bfddc67ae9240d0071" translate="yes" xml:space="preserve">
          <source>The following sections describe various aspects of internationalizing your QML source code. If you follow these guides for all the user interface components in your application, it becomes possible to localize every aspect of your application for different languages and local cultural conventions such as the way dates and numbers are formatted.</source>
          <target state="translated">다음 섹션에서는 QML 소스 코드 국제화의 다양한 측면에 대해 설명합니다. 응용 프로그램의 모든 사용자 인터페이스 구성 요소에 대해이 안내서를 따르면 응용 프로그램의 모든 측면을 날짜 및 숫자 형식과 같은 다른 언어 및 지역 문화 규칙에 맞게 현지화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d294e87e6f986762c7ea4b24b86f454ce504d02c" translate="yes" xml:space="preserve">
          <source>The following sections discuss common problems caused by test machine setup:</source>
          <target state="translated">The following sections discuss common problems caused by test machine setup:</target>
        </trans-unit>
        <trans-unit id="3bbff801e6f7038c401e678badbe43f46a593af4" translate="yes" xml:space="preserve">
          <source>The following sections explain how to use the model/view pattern in Qt. Each section includes an example and is followed by a section showing how to create new components.</source>
          <target state="translated">다음 섹션은 Qt에서 모델 / 뷰 패턴을 사용하는 방법을 설명합니다. 각 섹션에는 예제가 포함되어 있으며 새 구성 요소를 만드는 방법을 보여주는 섹션이 이어집니다.</target>
        </trans-unit>
        <trans-unit id="19e4a8ca9aa31feed5e566fd633480c02c2277b8" translate="yes" xml:space="preserve">
          <source>The following sections explain these differences in detail and demonstrate how to use the features unique to each connection syntax.</source>
          <target state="translated">다음 섹션에서는 이러한 차이점을 자세히 설명하고 각 연결 구문에 고유 한 기능을 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a4b6753a4d6f2dea3068166d3eb735ba8daf2ee1" translate="yes" xml:space="preserve">
          <source>The following sections list the widget classes. See the &lt;a href=&quot;gallery&quot;&gt;Qt Widget Gallery&lt;/a&gt; for some examples.</source>
          <target state="translated">The following sections list the widget classes. See the &lt;a href=&quot;gallery&quot;&gt;Qt Widget Gallery&lt;/a&gt; for some examples.</target>
        </trans-unit>
        <trans-unit id="1cf032c8514c346c1a3565e2cf02b6b7a23ad4b7" translate="yes" xml:space="preserve">
          <source>The following sections list the widget classes. See the &lt;a href=&quot;gallery#&quot;&gt;Qt Widget Gallery&lt;/a&gt; for some examples.</source>
          <target state="translated">다음 섹션에는 위젯 클래스가 나열되어 있습니다. 몇 가지 예 는 &lt;a href=&quot;gallery#&quot;&gt;Qt 위젯 갤러리&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b5411e846ad5b35a48b7ce66058ce1fa3b1cdb1f" translate="yes" xml:space="preserve">
          <source>The following sections offer guidelines for choosing the appropriate type of navigation model, depending on the use case.</source>
          <target state="translated">다음 섹션에서는 사용 사례에 따라 적절한 유형의 탐색 모델을 선택하기위한 지침을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5eee79946e8c51603a554efd08eae91902f2bcf9" translate="yes" xml:space="preserve">
          <source>The following sections provide general guidelines for writing unit tests:</source>
          <target state="translated">The following sections provide general guidelines for writing unit tests:</target>
        </trans-unit>
        <trans-unit id="23181e499a6208f4d8b698ff63cc0d3ec153df53" translate="yes" xml:space="preserve">
          <source>The following sections provide guidelines for producing readable and helpful test output:</source>
          <target state="translated">The following sections provide guidelines for producing readable and helpful test output:</target>
        </trans-unit>
        <trans-unit id="74770ae3154afc4b0a2e90e757da2446e4f45613" translate="yes" xml:space="preserve">
          <source>The following sections provide guidelines for writing code that is easy to test:</source>
          <target state="translated">The following sections provide guidelines for writing code that is easy to test:</target>
        </trans-unit>
        <trans-unit id="446a05f7e556203c200fb9fb6683941eae0569b4" translate="yes" xml:space="preserve">
          <source>The following sections provide guidelines for writing reliable tests:</source>
          <target state="translated">The following sections provide guidelines for writing reliable tests:</target>
        </trans-unit>
        <trans-unit id="b149a13b277d1478e56780c9f716344c8721dd49" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qgeoaddress&quot;&gt;QGeoAddress&lt;/a&gt; object from C++:</source>
          <target state="translated">다음 은 C ++ 의 &lt;a href=&quot;qgeoaddress&quot;&gt;QGeoAddress&lt;/a&gt; 객체를 기반으로이 객체의 속성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="1a27d5cd6b77e5d7267315bcd5eb92178f195946" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; object from C++:</source>
          <target state="translated">다음 은 C ++ 의 &lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; 객체를 기반으로이 객체의 속성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="60f32217409092a951b111b9dfa0283f8bb1ede3" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; object from C++:</source>
          <target state="translated">다음 은 C ++ 의 &lt;a href=&quot;qplace&quot;&gt;QPlace&lt;/a&gt; 객체를 기반으로이 객체의 속성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="860207d3665a82ac1cf75ab6a90b24e65fa7f758" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplaceattribute&quot;&gt;QPlaceAttribute&lt;/a&gt; object from C++:</source>
          <target state="translated">다음 은 C ++ 의 &lt;a href=&quot;qplaceattribute&quot;&gt;QPlaceAttribute&lt;/a&gt; 객체를 기반으로이 객체의 속성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="73443179f2b5c9d8b2dbf7565ddc9e1fc172c1a2" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt; object from C++:</source>
          <target state="translated">다음 은 C ++ 의 &lt;a href=&quot;qplacecategory&quot;&gt;QPlaceCategory&lt;/a&gt; 오브젝트를 기반으로이 오브젝트의 특성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="1e2d0d71923b1991fd67e6e5a506e566182b68d8" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplacecontactdetail&quot;&gt;QPlaceContactDetail&lt;/a&gt; object from C++:</source>
          <target state="translated">다음 은 C ++ 의 &lt;a href=&quot;qplacecontactdetail&quot;&gt;QPlaceContactDetail&lt;/a&gt; 객체를 기반으로이 객체의 속성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="57266419c3d3af81c0348405f6a2d39f1e03aefe" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; object from C++:</source>
          <target state="translated">다음 은 C ++ 의 &lt;a href=&quot;qplaceicon&quot;&gt;QPlaceIcon&lt;/a&gt; 오브젝트를 기반으로이 오브젝트의 특성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="9fb91bbac43aa890050c9d6643b2547055d01063" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplaceratings&quot;&gt;QPlaceRatings&lt;/a&gt; object from C++:</source>
          <target state="translated">다음 은 C ++ 의 &lt;a href=&quot;qplaceratings&quot;&gt;QPlaceRatings&lt;/a&gt; 객체를 기반으로이 객체의 속성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="2d9b409d1a4f0e83987db463f64d4e75ea56f726" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplacesupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; object from C++:</source>
          <target state="translated">다음 은 C ++ 의 &lt;a href=&quot;qplacesupplier&quot;&gt;QPlaceSupplier&lt;/a&gt; 오브젝트를 기반으로이 오브젝트의 특성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="7d0c843d7259f10ffaecf4ddf3e83be44b5e89db" translate="yes" xml:space="preserve">
          <source>The following sets the properties of this object based on a &lt;a href=&quot;qplaceuser&quot;&gt;QPlaceUser&lt;/a&gt; object from C++:</source>
          <target state="translated">다음 은 C ++ 의 &lt;a href=&quot;qplaceuser&quot;&gt;QPlaceUser&lt;/a&gt; 오브젝트를 기반으로이 오브젝트의 특성을 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="0d0aba57151c1e1af046232b1181eee17abe83e6" translate="yes" xml:space="preserve">
          <source>The following shell command:</source>
          <target state="translated">다음 쉘 명령 :</target>
        </trans-unit>
        <trans-unit id="7aca8ddf2900e7c2667d617a2f2c53d12d280810" translate="yes" xml:space="preserve">
          <source>The following shortcuts can be used:</source>
          <target state="translated">다음과 같은 단축키를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="91fcaef39929ae1e1fb7f7b23c13b1dcb5d8f846" translate="yes" xml:space="preserve">
          <source>The following shows an example of setting up a child process to run without privileges:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c2a0fc582833a6e6f7de1b6a81cee559545dd8cc" translate="yes" xml:space="preserve">
          <source>The following shows how to save a category</source>
          <target state="translated">다음은 카테고리를 저장하는 방법을 보여줍니다</target>
        </trans-unit>
        <trans-unit id="b57a11345ca7babf5268543524755c1bf982c1fe" translate="yes" xml:space="preserve">
          <source>The following snipped shows an incomplete example of creating a &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; object and setting it as the value of a &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt;'s &lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;query&lt;/a&gt; property.</source>
          <target state="translated">다음 부분은 &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; 객체 를 만들어 &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt; 의 &lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;쿼리&lt;/a&gt; 속성 값으로 설정 하는 불완전한 예를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="bd2d5fb086ce455928f817dae45b49556923eb42" translate="yes" xml:space="preserve">
          <source>The following snipped shows an incomplete example of creating a RouteQuery object and setting it as the value of a &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt;'s &lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;query&lt;/a&gt; property.</source>
          <target state="translated">The following snipped shows an incomplete example of creating a RouteQuery object and setting it as the value of a &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt;'s &lt;a href=&quot;qml-qtlocation-routemodel#query-prop&quot;&gt;query&lt;/a&gt; property.</target>
        </trans-unit>
        <trans-unit id="a916330a94cc6c6e7a2c25a693a3f223ca1907ce" translate="yes" xml:space="preserve">
          <source>The following snippet defines a simple fade transition for push and pop operations:</source>
          <target state="translated">다음 스 니펫은 푸시 및 팝 조작을위한 간단한 페이드 전환을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="f18aeb64847b50144c4541bee35fba74c4ba2285" translate="yes" xml:space="preserve">
          <source>The following snippet demonstrates a simple use case, where the &lt;code&gt;mainView&lt;/code&gt; is pushed onto and popped out of the stack on relevant button click:</source>
          <target state="translated">다음 스 니펫은 간단한 버튼을 클릭 할 때 &lt;code&gt;mainView&lt;/code&gt; 가 스택에서 밀리고 튀어 나오는 간단한 사용 사례를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="adc7a0d4aee8502dc24abbf4b840641d689b2daf" translate="yes" xml:space="preserve">
          <source>The following snippet demonstrates examples of models written in QML:</source>
          <target state="translated">다음 스 니펫은 QML로 작성된 모델의 예를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="5931c5930e18c2882738e1deea1850c25d8a036b" translate="yes" xml:space="preserve">
          <source>The following snippet demonstrates the use of this macro:</source>
          <target state="translated">다음 스 니펫은이 매크로의 사용법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a076206a61a8fc14356492da299fd0d27d5b3791" translate="yes" xml:space="preserve">
          <source>The following snippet gets the current date and time with Date(), then converts that to a string for the current locale. Then it inserts the date string into the %1 parameter for the appropriate translation.</source>
          <target state="translated">다음 코드 조각은 Date ()를 사용하여 현재 날짜와 시간을 가져온 다음 현재 로캘의 문자열로 변환합니다. 그런 다음 적절한 변환을 위해 날짜 문자열을 % 1 매개 변수에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="4cde8954c9f793924bc4360672532c6c9039bdb1" translate="yes" xml:space="preserve">
          <source>The following snippet illustrates how lists of values are assigned to variables:</source>
          <target state="translated">다음 스 니펫은 값 목록이 변수에 지정되는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d4be141a377308f6f84d25617cc6426895dadd13" translate="yes" xml:space="preserve">
          <source>The following snippet is two-part, showing firstly the declaration of objects, and secondly a short piece of procedural code using it. We set the geocodeModel's &lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; property to false, and call &lt;a href=&quot;qml-qtlocation-geocodemodel#update-method&quot;&gt;update&lt;/a&gt; once the query is set up. In this case, as we use a string value in &lt;a href=&quot;qml-qtlocation-geocodemodel#query-prop&quot;&gt;query&lt;/a&gt;, only one update would occur, even with &lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; enabled. However, if we provided an &lt;a href=&quot;qml-qtpositioning-address&quot;&gt;Address&lt;/a&gt; object we may inadvertently trigger multiple requests whilst setting its properties.</source>
          <target state="translated">다음 스 니펫은 두 부분으로 구성되어 있으며, 첫 번째는 객체 선언과 두 번째로 사용하는 간단한 절차 코드입니다. geocodeModel의 &lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; 속성을 false 로 설정하고 쿼리가 설정되면 &lt;a href=&quot;qml-qtlocation-geocodemodel#update-method&quot;&gt;update를&lt;/a&gt; 호출 합니다. 이 경우 &lt;a href=&quot;qml-qtlocation-geocodemodel#query-prop&quot;&gt;query&lt;/a&gt; 에서 문자열 값을 사용하므로 &lt;a href=&quot;qml-qtlocation-geocodemodel#autoUpdate-prop&quot;&gt;autoUpdate가&lt;/a&gt; 활성화 된 경우에도 하나의 업데이트 만 발생합니다 . 그러나 &lt;a href=&quot;qml-qtpositioning-address&quot;&gt;Address&lt;/a&gt; 개체를 제공 한 경우 속성을 설정하는 동안 실수로 여러 요청을 트리거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44660fed07f37ab0fb12cc83c1f94aa2d3ba5dce" translate="yes" xml:space="preserve">
          <source>The following snippet is two-part, showing firstly the declaration of objects, and secondly a short piece of procedural code using it. We set the routeModel's &lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; property to false, and call &lt;a href=&quot;qml-qtlocation-routemodel#update-method&quot;&gt;update&lt;/a&gt; once the query is set up, to avoid useless extra requests halfway through the set up of the query.</source>
          <target state="translated">다음 스 니펫은 두 부분으로 구성되어 있으며, 첫 번째는 객체 선언과 두 번째로 사용하는 간단한 절차 코드입니다. 우리는 routeModel의 &lt;a href=&quot;qml-qtlocation-routemodel#autoUpdate-prop&quot;&gt;autoUpdate&lt;/a&gt; 속성을 false 로 설정하고, 쿼리가 설정되는 도중에 불필요한 추가 요청을 피하기 위해 쿼리가 설정되면 &lt;a href=&quot;qml-qtlocation-routemodel#update-method&quot;&gt;update를&lt;/a&gt; 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="025f4bf8487b92f3116453d64664448fd6fdb081" translate="yes" xml:space="preserve">
          <source>The following snippet presents the default implementation of the item delegate. It can be used as a starting point for implementing custom delegates.</source>
          <target state="translated">다음 스 니펫은 항목 델리게이트의 기본 구현을 보여줍니다. 사용자 지정 대리자를 구현하기위한 시작점으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71e61df55086824eba8e08457659f60ae8d21eaf" translate="yes" xml:space="preserve">
          <source>The following snippet provides an example of saving a place to a different plugin using the &lt;a href=&quot;qml-qtlocation-place#copyFrom-method&quot;&gt;copyFrom&lt;/a&gt; method:</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;qml-qtlocation-place#copyFrom-method&quot;&gt;copyFrom&lt;/a&gt; 메소드를 사용하여 다른 플러그인에 장소를 저장하는 예를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="9041bd7a16a3ad2867825371f7c701f96b401143" translate="yes" xml:space="preserve">
          <source>The following snippet shows a &lt;a href=&quot;qml-qtlocation-mappolygon&quot;&gt;MapPolygon&lt;/a&gt; being used to display a triangle, with three vertices near Brisbane, Australia. The triangle is filled in green, with a 1 pixel black border.</source>
          <target state="translated">다음 스 니펫은 호주 브리즈번 근처에 3 개의 정점이있는 삼각형을 표시하는 데 사용되는 &lt;a href=&quot;qml-qtlocation-mappolygon&quot;&gt;MapPolygon을&lt;/a&gt; 보여줍니다 . 삼각형은 1 픽셀의 검은 색 테두리로 녹색으로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="bad9f1826f082116687b3a7a8cac15a23c6bd711" translate="yes" xml:space="preserve">
          <source>The following snippet shows a &lt;a href=&quot;qml-qtlocation-mappolyline&quot;&gt;MapPolyline&lt;/a&gt; with 4 points, making a shape like the top part of a &quot;question mark&quot; (?), near Brisbane, Australia. The line drawn is 3 pixels in width and green in color.</source>
          <target state="translated">다음 스 니펫은 호주 브리즈번 근처의 &quot;물음표&quot;(?)의 상단 부분과 같은 모양을 만드는 4 점 의 &lt;a href=&quot;qml-qtlocation-mappolyline&quot;&gt;MapPolyline&lt;/a&gt; 을 보여줍니다 . 그려진 선의 너비는 3 픽셀이며 녹색입니다.</target>
        </trans-unit>
        <trans-unit id="93eecf6fd6680ffcbbeda83a378c9bcfefcd9552" translate="yes" xml:space="preserve">
          <source>The following snippet shows a &lt;a href=&quot;qml-qtlocation-mapquickitem&quot;&gt;MapQuickItem&lt;/a&gt; containing an Image object, to display a Marker on the Map. This strategy is used to show the map markers in the MapViewer example.</source>
          <target state="translated">다음 스 니펫은 지도에 마커를 표시하기 위해 Image 객체가 포함 된 &lt;a href=&quot;qml-qtlocation-mapquickitem&quot;&gt;MapQuickItem&lt;/a&gt; 을 보여줍니다 . 이 전략은 MapViewer 예제에서 맵 마커를 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="00ad8be3a2d305949dd3dcd163ae1454364335c9" translate="yes" xml:space="preserve">
          <source>The following snippet shows a MapPolygon being used to display a triangle, with three vertices near Brisbane, Australia. The triangle is filled in green, with a 1 pixel black border.</source>
          <target state="translated">The following snippet shows a MapPolygon being used to display a triangle, with three vertices near Brisbane, Australia. The triangle is filled in green, with a 1 pixel black border.</target>
        </trans-unit>
        <trans-unit id="0d0bfb21f0c16f278028f93db09604fbe88c62c4" translate="yes" xml:space="preserve">
          <source>The following snippet shows a MapPolyline with 4 points, making a shape like the top part of a &quot;question mark&quot; (?), near Brisbane, Australia. The line drawn is 3 pixels in width and green in color.</source>
          <target state="translated">The following snippet shows a MapPolyline with 4 points, making a shape like the top part of a &quot;question mark&quot; (?), near Brisbane, Australia. The line drawn is 3 pixels in width and green in color.</target>
        </trans-unit>
        <trans-unit id="b6bcec0a70aebe545695077f48fba016f035c7e2" translate="yes" xml:space="preserve">
          <source>The following snippet shows a MapQuickItem containing an Image object, to display a Marker on the Map. This strategy is used to show the map markers in the MapViewer example.</source>
          <target state="translated">The following snippet shows a MapQuickItem containing an Image object, to display a Marker on the Map. This strategy is used to show the map markers in the MapViewer example.</target>
        </trans-unit>
        <trans-unit id="de9354e1008e6140ad6e99fac68f913f5ce3c5f2" translate="yes" xml:space="preserve">
          <source>The following snippet shows a Plugin object being created with the &lt;a href=&quot;qml-qtlocation-plugin#required-prop&quot;&gt;required&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-plugin#preferred-prop&quot;&gt;preferred&lt;/a&gt; properties set. This Plugin will attach to the first found plugin that supports both mapping and geocoding, and will prefer plugins named &quot;here&quot; or &quot;osm&quot; to any others.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;qml-qtlocation-plugin#required-prop&quot;&gt;필수&lt;/a&gt; 및 &lt;a href=&quot;qml-qtlocation-plugin#preferred-prop&quot;&gt;선호&lt;/a&gt; 특성 세트 로 작성되는 플러그인 오브젝트를 보여줍니다 . 이 플러그인은 매핑 및 지오 코딩을 모두 지원하는 첫 번째 플러그인에 연결되며 &quot;here&quot;또는 &quot;osm&quot;이라는 플러그인을 선호합니다.</target>
        </trans-unit>
        <trans-unit id="2f54e73fe44abab39f4fca6299a2a30525275919" translate="yes" xml:space="preserve">
          <source>The following snippet shows a map containing a &lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircle&lt;/a&gt;, centered at the coordinate (-27, 153) with a radius of 5km. The circle is filled in green, with a 3 pixel black border.</source>
          <target state="translated">다음 스 니펫은 반경 5km의 좌표 (-27, 153)를 중심으로 &lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircle을&lt;/a&gt; 포함하는 맵을 보여줍니다 . 원은 3 픽셀의 검은 색 테두리로 녹색으로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="ccccf95bab1d2b9eb9e35fde1c127783ac76d52c" translate="yes" xml:space="preserve">
          <source>The following snippet shows a map containing a &lt;a href=&quot;qml-qtlocation-maprectangle&quot;&gt;MapRectangle&lt;/a&gt;, spanning from (-27, 153) to (-28, 153.5), near Brisbane, Australia. The rectangle is filled in green, with a 2 pixel black border.</source>
          <target state="translated">다음 스 니펫은 호주 브리즈번 근처의 (-27, 153)에서 (-28, 153.5)에 이르는 &lt;a href=&quot;qml-qtlocation-maprectangle&quot;&gt;MapRectangle을&lt;/a&gt; 포함하는 맵을 보여줍니다 . 사각형은 2 픽셀 검은 색 테두리가있는 녹색으로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="239ac7a1dd66fe4eac9270829eb58539888cb0d9" translate="yes" xml:space="preserve">
          <source>The following snippet shows a map containing a MapCircle, centered at the coordinate (-27, 153) with a radius of 5km. The circle is filled in green, with a 3 pixel black border.</source>
          <target state="translated">The following snippet shows a map containing a MapCircle, centered at the coordinate (-27, 153) with a radius of 5km. The circle is filled in green, with a 3 pixel black border.</target>
        </trans-unit>
        <trans-unit id="630f072015c425264ffa58d39230cf9527f8886f" translate="yes" xml:space="preserve">
          <source>The following snippet shows a map containing a MapRectangle, spanning from (-27, 153) to (-28, 153.5), near Brisbane, Australia. The rectangle is filled in green, with a 2 pixel black border.</source>
          <target state="translated">The following snippet shows a map containing a MapRectangle, spanning from (-27, 153) to (-28, 153.5), near Brisbane, Australia. The rectangle is filled in green, with a 2 pixel black border.</target>
        </trans-unit>
        <trans-unit id="fd054b64debeb6b8b39fb42c0e3b242d85ac1b29" translate="yes" xml:space="preserve">
          <source>The following snippet shows a simple Map and the necessary Plugin type to use it. The map is centered over Oslo, Norway, with zoom level 14.</source>
          <target state="translated">다음 스 니펫은 간단한 맵과이를 사용하는 데 필요한 플러그인 유형을 보여줍니다. 지도는 확대 / 축소 수준이 14 인 노르웨이 오슬로를 중심으로합니다.</target>
        </trans-unit>
        <trans-unit id="49b293771eecb4dc88d31a2937e98eb6dd002151" translate="yes" xml:space="preserve">
          <source>The following snippet shows a state machine that will finish when a button is clicked:</source>
          <target state="translated">다음 스 니펫은 버튼을 클릭하면 완료되는 상태 머신을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="854f0d3d7f4fbf1f010ca33c712d0486475de3bf" translate="yes" xml:space="preserve">
          <source>The following snippet shows how a Map using this plugin can be added as an overlay to display anti-aliased map items. Note that for such an overlay Map to be transparent, it is also necessary to set its color to a transparent one, such as &lt;b&gt;transparent&lt;/b&gt;, like in the example.</source>
          <target state="translated">다음 스 니펫은이 플러그인을 사용하는지도를 오버레이로 추가하여 앤티 앨리어싱 된지도 항목을 표시하는 방법을 보여줍니다. 이러한 오버레이 맵을 투명하게 하려면 예 와 같이 색상을 투명과 같은 &lt;b&gt;투명&lt;/b&gt; 으로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f4f2c81de693f7fcfee9f2c5492755ccbb5e8e74" translate="yes" xml:space="preserve">
          <source>The following snippet shows how a WasdController object can be added. By default both key and mouse based navigation is active, so in most cases there is no further configuration needed:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b425fbeff2ffcde3322c05c3146a68aaa5215971" translate="yes" xml:space="preserve">
          <source>The following snippet shows how a server application may check for errors:</source>
          <target state="translated">다음 스 니펫은 서버 애플리케이션이 오류를 확인하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d869523b75264f126ced28de460fee4992b94525" translate="yes" xml:space="preserve">
          <source>The following snippet shows how an item can be dragged with a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;. However, dragging is not limited to mouse drags; anything that can move an item can generate drag events, including touch events, animations and bindings.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea로&lt;/a&gt; 항목을 드래그하는 방법을 보여줍니다 . 그러나 드래그는 마우스 드래그로 제한되지 않습니다. 항목을 이동할 수있는 모든 항목은 터치 이벤트, 애니메이션 및 바인딩을 포함하여 드래그 이벤트를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="417f40d6c4995a199855cef1bcaae2e8c7bcefba" translate="yes" xml:space="preserve">
          <source>The following snippet shows how these properties are used to display an image that is larger than the Flickable item itself:</source>
          <target state="translated">다음 스 니펫은 이러한 특성을 사용하여 Flickable 항목 자체보다 큰 이미지를 표시하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="18cc16f6a4dc093d09b7671b1668cc383281c0c4" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to grab an item and store the results to a file.</source>
          <target state="translated">다음 스 니펫은 항목을 가져 와서 결과를 파일에 저장하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="6687b2cd6b79c802464f98cf071b1ea28f904650" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to grab an item and use the results in another image element.</source>
          <target state="translated">다음 스 니펫은 항목을 잡고 다른 이미지 요소에서 결과를 사용하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a3a025f3b01137a984da3ddb06c8101f95002fb7" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtlocation-mapitemgroup&quot;&gt;MapItemGroup&lt;/a&gt; to create a &lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircle&lt;/a&gt;, centered at the coordinate (63, -18) with a radius of 100km, filled in red, surrounded by an ondulated green border, both contained in a semitransparent blue circle with a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; that moves the whole group. This group is defined in a separate file named PolygonGroup.qml:</source>
          <target state="translated">다음 코드 프로그램이 어떻게 사용 &lt;a href=&quot;qml-qtlocation-mapitemgroup&quot;&gt;MapItemGroup를&lt;/a&gt; 크리에이트하는 &lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircle&lt;/a&gt; (63 -18) 좌표 ondulated 녹색 테두리로 둘러싸인 적색 충전 100km 반경, 함께 중심을 둘은 함께 반투명 파란색 원에 포함 전체 그룹을 이동시키는 &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; . 이 그룹은 PolygonGroup.qml이라는 별도의 파일에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="712064e484b40bf353f13bfdbd187a01d38b54ec" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-opacityanimator&quot;&gt;OpacityAnimator&lt;/a&gt; together with a Rectangle item.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;qml-qtquick-opacityanimator&quot;&gt;OpacityAnimator를&lt;/a&gt; Rectangle 항목과 함께 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="c63016c0f83dd6a80f767adf3dd1f83f86c3222b" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-rotationanimator&quot;&gt;RotationAnimator&lt;/a&gt; together with a Rectangle item.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;qml-qtquick-rotationanimator&quot;&gt;RotationAnimator를&lt;/a&gt; Rectangle 항목과 함께 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="10c5e22e0f647686f1ee2fcb3b7c2975abf99537" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-scaleanimator&quot;&gt;ScaleAnimator&lt;/a&gt; together with a Rectangle item.</source>
          <target state="translated">다음 코드 조각은 &lt;a href=&quot;qml-qtquick-scaleanimator&quot;&gt;ScaleAnimator를&lt;/a&gt; Rectangle 항목과 함께 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="a36a9d6738e750f21047dcf447ffa54c9243f8d1" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-uniformanimator&quot;&gt;UniformAnimator&lt;/a&gt; together with a &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; item.</source>
          <target state="translated">다음 코드 쇼는 어떻게 사용하는 &lt;a href=&quot;qml-qtquick-uniformanimator&quot;&gt;UniformAnimator을&lt;/a&gt; 와 함께 &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect의&lt;/a&gt; 항목을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="aec1b765a4616a15ff772ca5db3521774bd7099b" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-xanimator&quot;&gt;XAnimator&lt;/a&gt; together with a Rectangle item.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;qml-qtquick-xanimator&quot;&gt;XAnimator를&lt;/a&gt; Rectangle 항목과 함께 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="291f9b98999a43d5ba68cd8e6688a6bb24ea5628" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a &lt;a href=&quot;qml-qtquick-yanimator&quot;&gt;YAnimator&lt;/a&gt; together with a Rectangle item.</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;qml-qtquick-yanimator&quot;&gt;YAnimator를&lt;/a&gt; Rectangle 항목과 함께 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="588189dc589068dde2e3ba6ea986c53a04daef70" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a MapItemGroup to create a &lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircle&lt;/a&gt;, centered at the coordinate (63, -18) with a radius of 100km, filled in red, surrounded by an ondulated green border, both contained in a semitransparent blue circle with a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; that moves the whole group. This group is defined in a separate file named PolygonGroup.qml:</source>
          <target state="translated">The following snippet shows how to use a MapItemGroup to create a &lt;a href=&quot;qml-qtlocation-mapcircle&quot;&gt;MapCircle&lt;/a&gt;, centered at the coordinate (63, -18) with a radius of 100km, filled in red, surrounded by an ondulated green border, both contained in a semitransparent blue circle with a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; that moves the whole group. This group is defined in a separate file named PolygonGroup.qml:</target>
        </trans-unit>
        <trans-unit id="16765b9c733b627b11263ae490ce580f8184b150" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a OpacityAnimator together with a Rectangle item.</source>
          <target state="translated">The following snippet shows how to use a OpacityAnimator together with a Rectangle item.</target>
        </trans-unit>
        <trans-unit id="151a63a57341fbd680efbe14019dfccdc8839d76" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a RotationAnimator together with a Rectangle item.</source>
          <target state="translated">The following snippet shows how to use a RotationAnimator together with a Rectangle item.</target>
        </trans-unit>
        <trans-unit id="aae84b2853ef36fcab7f3eefb41317199d4816c1" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a ScaleAnimator together with a Rectangle item.</source>
          <target state="translated">The following snippet shows how to use a ScaleAnimator together with a Rectangle item.</target>
        </trans-unit>
        <trans-unit id="04c931389ed656f76363bc9b60adc122149fe3f8" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a UniformAnimator together with a &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; item.</source>
          <target state="translated">The following snippet shows how to use a UniformAnimator together with a &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; item.</target>
        </trans-unit>
        <trans-unit id="98f4e4a406ec8ebec4026a65cedff4f2dfab747f" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a XAnimator together with a Rectangle item.</source>
          <target state="translated">The following snippet shows how to use a XAnimator together with a Rectangle item.</target>
        </trans-unit>
        <trans-unit id="d478289edf7eecc1639431f61fe72d69a5208567" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use a YAnimator together with a Rectangle item.</source>
          <target state="translated">The following snippet shows how to use a YAnimator together with a Rectangle item.</target>
        </trans-unit>
        <trans-unit id="237678c2415e59c68a7f105f2220e645f6ce8cbd" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use the &lt;a href=&quot;qml-qtquick-controls-busyindicator&quot;&gt;BusyIndicator&lt;/a&gt;:</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;qml-qtquick-controls-busyindicator&quot;&gt;BusyIndicator&lt;/a&gt; 를 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="6bc21df83bdd0e5465a5eec3b1bda7518e667d1a" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use the &lt;a href=&quot;qml-qtquick-controls2-busyindicator&quot;&gt;BusyIndicator&lt;/a&gt;:</source>
          <target state="translated">다음 스 니펫은 &lt;a href=&quot;qml-qtquick-controls2-busyindicator&quot;&gt;BusyIndicator&lt;/a&gt; 를 사용하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="48f3ffdd700d359eba8f9d3c5218011a25b4810c" translate="yes" xml:space="preserve">
          <source>The following snippet shows how to use the BusyIndicator:</source>
          <target state="translated">The following snippet shows how to use the BusyIndicator:</target>
        </trans-unit>
        <trans-unit id="11ca60418911884a52454d93829caaf3df7146b2" translate="yes" xml:space="preserve">
          <source>The following snippet shows the code needed to create such a state machine.</source>
          <target state="translated">다음 스 니펫은 이러한 상태 머신을 작성하는 데 필요한 코드를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="c368a3a285bfd83ec62f4f68aaf44a205ca2d6b2" translate="yes" xml:space="preserve">
          <source>The following snippet shows the code needed to create such a state machine. First, we create the state machine and states:</source>
          <target state="translated">다음 스 니펫은 이러한 상태 머신을 작성하는 데 필요한 코드를 보여줍니다. 먼저 상태 머신과 상태를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="637489a5b59118fc5e4c20e6a79e2d04d364181c" translate="yes" xml:space="preserve">
          <source>The following snippet uses the &lt;code&gt;icon&lt;/code&gt; property to build an &lt;code&gt;Image&lt;/code&gt; component:</source>
          <target state="translated">다음 코드 조각은 &lt;code&gt;icon&lt;/code&gt; 속성을 사용하여 &lt;code&gt;Image&lt;/code&gt; 구성 요소 를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="527d4f072e80f433c3ebb71ff383b752e5b2187f" translate="yes" xml:space="preserve">
          <source>The following snippets present examples where the Basic style's controls have been customized using the same approach as the &lt;a href=&quot;qtquickcontrols2-customize#customizing-a-control&quot;&gt;Customizing a Control&lt;/a&gt; section. The code can be used as a starting point to implement a custom look and feel.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7ece4dfe211dcce2e091158459a22b7facd86691" translate="yes" xml:space="preserve">
          <source>The following snippets present examples where the default style's controls have been customized using the same approach as the &lt;a href=&quot;#customizing-a-control&quot;&gt;Customizing a Control&lt;/a&gt; section. The code can be used as a starting point to implement a custom look and feel.</source>
          <target state="translated">다음 스 니펫은 기본 스타일의 컨트롤이 컨트롤 &lt;a href=&quot;#customizing-a-control&quot;&gt;사용자 정의&lt;/a&gt; 섹션 과 동일한 접근 방식을 사용하여 사용자 정의 된 예를 보여 줍니다. 이 코드는 사용자 정의 모양과 느낌을 구현하기위한 시작점으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9e03e4ac441c00e7bf09e08f41b70ab10d78a9f" translate="yes" xml:space="preserve">
          <source>The following snippets present examples where the default style's controls have been customized using the same approach as the &lt;a href=&quot;qtquickcontrols2-customize#customizing-a-control&quot;&gt;Customizing a Control&lt;/a&gt; section. The code can be used as a starting point to implement a custom look and feel.</source>
          <target state="translated">The following snippets present examples where the default style's controls have been customized using the same approach as the &lt;a href=&quot;qtquickcontrols2-customize#customizing-a-control&quot;&gt;Customizing a Control&lt;/a&gt; section. The code can be used as a starting point to implement a custom look and feel.</target>
        </trans-unit>
        <trans-unit id="82a52149eec07759103ac512ce56fde01ec777d8" translate="yes" xml:space="preserve">
          <source>The following special, uppercase keywords are available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9d756c1386ff5f7f8fb8e7bf197a6e9c59a0ac51" translate="yes" xml:space="preserve">
          <source>The following standard command line options are available for X11:</source>
          <target state="translated">X11에서는 다음과 같은 표준 명령 줄 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f23e350fc1a2df19479b259ced3c5e2e8d588b0a" translate="yes" xml:space="preserve">
          <source>The following statements instantiate the &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; object and pass it to the host to enable &quot;remoting&quot;, that is, making the object visible to the QtRO network:</source>
          <target state="translated">다음 문은 &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; 객체를 인스턴스화하고 호스트로 전달하여 &quot;원격&quot;을 활성화합니다. 즉, 객체를 QtRO 네트워크에 표시합니다.</target>
        </trans-unit>
        <trans-unit id="0fc560fac41804f818b01f0688c02f54fa0bcb15" translate="yes" xml:space="preserve">
          <source>The following status values are possible:</source>
          <target state="translated">다음과 같은 상태 값이 가능합니다.</target>
        </trans-unit>
        <trans-unit id="73be85388fa38b446830d119242ce2226598da39" translate="yes" xml:space="preserve">
          <source>The following strategies are available:</source>
          <target state="translated">다음과 같은 전략을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fda8d5ba303fe4745d9707b7def03e544d49f9bf" translate="yes" xml:space="preserve">
          <source>The following subclasses are available:</source>
          <target state="translated">다음과 같은 서브 클래스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="057a20ccdfbfc72915814382f1bb10af83bebbe4" translate="yes" xml:space="preserve">
          <source>The following subcontrols are available:</source>
          <target state="translated">다음과 같은 하위 컨트롤을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a96fd586f854eb2ab13be7aff194e4624cf96c5" translate="yes" xml:space="preserve">
          <source>The following table describes how to choose between &lt;a href=&quot;qtglobal#qgetenv&quot;&gt;qgetenv&lt;/a&gt;() and &lt;a href=&quot;qtglobal#qEnvironmentVariable&quot;&gt;qEnvironmentVariable&lt;/a&gt;():</source>
          <target state="translated">다음 표는 &lt;a href=&quot;qtglobal#qgetenv&quot;&gt;qgetenv&lt;/a&gt; ()와 &lt;a href=&quot;qtglobal#qEnvironmentVariable&quot;&gt;qEnvironmentVariable&lt;/a&gt; () 중에서 선택하는 방법을 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="51f90ba20ae6f53886ebf8f408106e3b048e909c" translate="yes" xml:space="preserve">
          <source>The following table explains how each handle will be resized depending on the orientation of the split view:</source>
          <target state="translated">다음 표는 분할보기의 방향에 따라 각 핸들의 크기를 조정하는 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="9479d8d85fbeb2c5c369e3a782119e6265138e3f" translate="yes" xml:space="preserve">
          <source>The following table explains what the default attribute codes are, the &lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt; types associated, the default value if said attribute is missing and whether it's used in requests or replies.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2e542c42bb2038dd0a9dafd9f5a0126d8053c505" translate="yes" xml:space="preserve">
          <source>The following table explains what the default attribute codes are, the &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; types associated, the default value if said attribute is missing and whether it's used in requests or replies.</source>
          <target state="translated">다음 표는 기본 속성 코드, 연관된 &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 유형, 해당 속성이 누락 된 경우의 기본값 및 요청 또는 응답에 사용되는지 여부를 설명합니다.</target>
        </trans-unit>
        <trans-unit id="5b4979bb341572bd08f16075ffbfd7964122236d" translate="yes" xml:space="preserve">
          <source>The following table gives an overview of the functionality provided by the &lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager&lt;/a&gt;</source>
          <target state="translated">다음 표는 &lt;a href=&quot;qplacemanager&quot;&gt;QPlaceManager가&lt;/a&gt; 제공하는 기능에 대한 개요입니다.</target>
        </trans-unit>
        <trans-unit id="0450340f1e9a783b64975da1494a886902470866" translate="yes" xml:space="preserve">
          <source>The following table gives an overview of the functionality provided by the QPlaceManager</source>
          <target state="translated">The following table gives an overview of the functionality provided by the QPlaceManager</target>
        </trans-unit>
        <trans-unit id="cbb677b7da81b1a5856d300222c4a8d95a9c4193" translate="yes" xml:space="preserve">
          <source>The following table gives examples of paths on different operating systems. The first path is the writable path (unless noted). Other, additional paths, if any, represent non-writable locations.</source>
          <target state="translated">다음 표는 다른 운영 체제에서의 경로 예입니다. 첫 번째 경로는 쓰기 가능 경로입니다 (별도의 언급이없는 경우). 다른 추가 경로 (있을 경우)는 쓸 수없는 위치를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a5b170fa7c9802b991b9960baba26906a4a09952" translate="yes" xml:space="preserve">
          <source>The following table lists examples of assets (taken from the default Imagine style assets) for all controls. The list is not exhaustive, as not all elements need assets, but it can be used as a guide when creating your own assets.</source>
          <target state="translated">다음 표는 모든 컨트롤에 대한 자산 예제 (기본 Imagine 스타일 자산에서 가져옴)를 나열합니다. 모든 요소에 자산이 필요한 것은 아니기 때문에이 목록이 완전하지는 않지만 자체 자산을 생성 할 때 가이드로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c346362c131e1d602ff9c155136dca5e5edfa313" translate="yes" xml:space="preserve">
          <source>The following table lists how the types are mapped:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1578ec4d96e4a08ca7cf2ac4533dcdc274495dd9" translate="yes" xml:space="preserve">
          <source>The following table lists mandatory parameters that</source>
          <target state="translated">다음 표는 필수 매개 변수를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="5c627caa6b97612dacc60351586ea54e554b89ee" translate="yes" xml:space="preserve">
          <source>The following table lists optional parameters that can be passed to the HERE plugin.</source>
          <target state="translated">다음 표는 HERE 플러그인으로 전달 될 수있는 선택적 매개 변수를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="296e450288f841cce8ebf769c338f7652df2200d" translate="yes" xml:space="preserve">
          <source>The following table lists optional parameters that can be passed to the Mapbox plugin.</source>
          <target state="translated">다음 표는 맵 박스 플러그인에 전달할 수있는 선택적 매개 변수를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="09b0d73aa76f6f9902967395af555554e0ff4f5d" translate="yes" xml:space="preserve">
          <source>The following table lists optional parameters that can be passed to the Open Street Map plugin.</source>
          <target state="translated">다음 표는 Open Street Map 플러그인으로 전달 될 수있는 선택적 매개 변수를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="0b51ecab486e42d262189a2f79899634e270bd20" translate="yes" xml:space="preserve">
          <source>The following table lists parameters that</source>
          <target state="translated">The following table lists parameters that</target>
        </trans-unit>
        <trans-unit id="5c7106e5cefd7b2d9fff3b4db67a47d290654678" translate="yes" xml:space="preserve">
          <source>The following table lists parts (modules) of Qt Shader Tools that incorporate code licensed under third-party open-source licenses:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="68dde8a32d2a7a1a48b929ea9d201e07af5022ac" translate="yes" xml:space="preserve">
          <source>The following table lists some frequently used variables and describes their contents. For a full list of variables and their descriptions, see &lt;a href=&quot;qmake-variable-reference&quot;&gt;Variables&lt;/a&gt;.</source>
          <target state="translated">The following table lists some frequently used variables and describes their contents. For a full list of variables and their descriptions, see &lt;a href=&quot;qmake-variable-reference&quot;&gt;Variables&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="788423691076b7c0b3103e5ee3c1de2f7b396b45" translate="yes" xml:space="preserve">
          <source>The following table lists some frequently used variables and describes their contents. For a full list of variables and their descriptions, see &lt;a href=&quot;qmake-variable-reference#&quot;&gt;Variables&lt;/a&gt;.</source>
          <target state="translated">다음 표는 자주 사용되는 변수와 그 내용을 설명합니다. 변수와 그 설명의 전체 목록을 참조 &lt;a href=&quot;qmake-variable-reference#&quot;&gt;변수&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="637f93170f3a9482803eef8e3379986a8b326751" translate="yes" xml:space="preserve">
          <source>The following table lists the CBOR features that &lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader&lt;/a&gt; supports.</source>
          <target state="translated">다음 표는 &lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader가&lt;/a&gt; 지원 하는 CBOR 기능을 나열 합니다.</target>
        </trans-unit>
        <trans-unit id="0232e9fffe997cb4280ca68b0b13fd4ff4d1c28d" translate="yes" xml:space="preserve">
          <source>The following table lists the CBOR features that &lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt; supports.</source>
          <target state="translated">다음 표는 &lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter가&lt;/a&gt; 지원 하는 CBOR 기능을 나열 합니다.</target>
        </trans-unit>
        <trans-unit id="308338146abb9454864e4dde8fe6ad75a67eebd5" translate="yes" xml:space="preserve">
          <source>The following table lists the CBOR features that &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; supports.</source>
          <target state="translated">다음 표는 &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue가&lt;/a&gt; 지원 하는 CBOR 기능을 나열 합니다.</target>
        </trans-unit>
        <trans-unit id="8ee68075e952ba37993c6110084882b98d4a5dc5" translate="yes" xml:space="preserve">
          <source>The following table lists the CBOR features that QCborStreamReader supports.</source>
          <target state="translated">The following table lists the CBOR features that QCborStreamReader supports.</target>
        </trans-unit>
        <trans-unit id="d95e7585520356d55af2fb99c51d22b94b1ece83" translate="yes" xml:space="preserve">
          <source>The following table lists the CBOR features that QCborStreamWriter supports.</source>
          <target state="translated">The following table lists the CBOR features that QCborStreamWriter supports.</target>
        </trans-unit>
        <trans-unit id="aa6eece6f4b1a3efea96f2036b1753cb509a2be1" translate="yes" xml:space="preserve">
          <source>The following table lists the CBOR features that QCborValue supports.</source>
          <target state="translated">The following table lists the CBOR features that QCborValue supports.</target>
        </trans-unit>
        <trans-unit id="68ee0ed6376c6f930d6de818ba29218244284dcc" translate="yes" xml:space="preserve">
          <source>The following table lists the CSS properties supported by Qt's &lt;a href=&quot;richtext&quot;&gt;rich text&lt;/a&gt; engine:</source>
          <target state="translated">The following table lists the CSS properties supported by Qt's &lt;a href=&quot;richtext&quot;&gt;rich text&lt;/a&gt; engine:</target>
        </trans-unit>
        <trans-unit id="b0fe0103e0418c895309529c0f30bdde950e2b49" translate="yes" xml:space="preserve">
          <source>The following table lists the CSS properties supported by Qt's &lt;a href=&quot;richtext#&quot;&gt;rich text&lt;/a&gt; engine:</source>
          <target state="translated">다음 표는 Qt의 &lt;a href=&quot;richtext#&quot;&gt;서식있는 텍스트&lt;/a&gt; 엔진이 지원하는 CSS 속성을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="5cf01b5ae1b72fc4d2d3d757b4189cacf34d95fe" translate="yes" xml:space="preserve">
          <source>The following table lists the HTML tags supported by Qt's &lt;a href=&quot;richtext&quot;&gt;rich text&lt;/a&gt; engine:</source>
          <target state="translated">The following table lists the HTML tags supported by Qt's &lt;a href=&quot;richtext&quot;&gt;rich text&lt;/a&gt; engine:</target>
        </trans-unit>
        <trans-unit id="68f4ce3ffac9b4663b61f33fe4a15a8222316f9b" translate="yes" xml:space="preserve">
          <source>The following table lists the HTML tags supported by Qt's &lt;a href=&quot;richtext#&quot;&gt;rich text&lt;/a&gt; engine:</source>
          <target state="translated">다음 표는 Qt의 &lt;a href=&quot;richtext#&quot;&gt;서식있는 텍스트&lt;/a&gt; 엔진이 지원하는 HTML 태그를 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="7c7c84fa5f826ad4fec8e59af4c7259675c78691" translate="yes" xml:space="preserve">
          <source>The following table lists the Qt widgets that can be customized using style sheets:</source>
          <target state="translated">다음 표는 스타일 시트를 사용하여 사용자 정의 할 수있는 Qt 위젯을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="7b38bca7fdfae4da81180af7943e75f6799882c9" translate="yes" xml:space="preserve">
          <source>The following table lists the available &lt;a href=&quot;http://www.w3.org/TR/SVG/types.html#ColorKeywords&quot;&gt;SVG colors&lt;/a&gt;. They are available in the &lt;code&gt;QColorConstants::Svg&lt;/code&gt; inner namespace.</source>
          <target state="translated">The following table lists the available &lt;a href=&quot;http://www.w3.org/TR/SVG/types.html#ColorKeywords&quot;&gt;SVG colors&lt;/a&gt;. They are available in the &lt;code&gt;QColorConstants::Svg&lt;/code&gt; inner namespace.</target>
        </trans-unit>
        <trans-unit id="2e7c5c4f1343821f8692f187e33865e1f0619e97" translate="yes" xml:space="preserve">
          <source>The following table lists the available &lt;a href=&quot;http://www.w3.org/TR/SVG/types.html#ColorKeywords&quot;&gt;SVG colors&lt;/a&gt;:</source>
          <target state="translated">다음 표는 사용 가능한 &lt;a href=&quot;http://www.w3.org/TR/SVG/types.html#ColorKeywords&quot;&gt;SVG 색상을&lt;/a&gt; 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="089cc8ef53ab36b0164a86ea5b0616d41cfb8ae8" translate="yes" xml:space="preserve">
          <source>The following table lists the command-line options recognized by &lt;code&gt;balsam&lt;/code&gt; when converting Qt 3D Studio projects:</source>
          <target state="translated">The following table lists the command-line options recognized by &lt;code&gt;balsam&lt;/code&gt; when converting Qt 3D Studio projects:</target>
        </trans-unit>
        <trans-unit id="33e2177f6b0111c31c348a6e126b41cb8f95d577" translate="yes" xml:space="preserve">
          <source>The following table lists the command-line options recognized by &lt;code&gt;balsam&lt;/code&gt; when converting asset files:</source>
          <target state="translated">The following table lists the command-line options recognized by &lt;code&gt;balsam&lt;/code&gt; when converting asset files:</target>
        </trans-unit>
        <trans-unit id="567c949df61caa81f10b5bc0b08162626a8b38c6" translate="yes" xml:space="preserve">
          <source>The following table lists the command-line options recognized by &lt;code&gt;uic&lt;/code&gt;.</source>
          <target state="translated">다음 표는 &lt;code&gt;uic&lt;/code&gt; 가 인식하는 명령 행 옵션을 나열합니다 .</target>
        </trans-unit>
        <trans-unit id="ca2baecfd51112166c32210cce014eaad08f9990" translate="yes" xml:space="preserve">
          <source>The following table lists the conversion this function will apply:</source>
          <target state="translated">다음 표는이 기능이 적용되는 변환 목록입니다.</target>
        </trans-unit>
        <trans-unit id="1da257bb3e1f2dce2ee14c75b42407882ce930fa" translate="yes" xml:space="preserve">
          <source>The following table lists the mapping of JSON types to CBOR types:</source>
          <target state="translated">다음 표는 JSON 유형과 CBOR 유형의 맵핑을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="05c0084c7e7e143ef61a6afd80cab5ed42e1cc45" translate="yes" xml:space="preserve">
          <source>The following table lists the mapping performed between &lt;a href=&quot;qcborvalue#Type-enum&quot;&gt;QCborValue types&lt;/a&gt; and &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;Qt meta types&lt;/a&gt;.</source>
          <target state="translated">다음 표는 &lt;a href=&quot;qcborvalue#Type-enum&quot;&gt;QCborValue 유형&lt;/a&gt; 과 &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;Qt 메타 유형&lt;/a&gt; 사이에 수행 된 맵핑을 나열합니다 .</target>
        </trans-unit>
        <trans-unit id="1e4a3fdecad311a1cfac6720a9b6eccfd0c8365b" translate="yes" xml:space="preserve">
          <source>The following table lists the properties controlled by themes and the default values for &lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;Theme3D.ThemeUserDefined&lt;/a&gt;.</source>
          <target state="translated">다음 표는 테마로 제어되는 특성 및 &lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;Theme3D.ThemeUserDefined&lt;/a&gt; 의 기본값을 나열 합니다.</target>
        </trans-unit>
        <trans-unit id="50b4c64c4085845acf52ecfdb9140fe7407e0333" translate="yes" xml:space="preserve">
          <source>The following table lists the properties controlled by themes and the default values for &lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;ThemeUserDefined&lt;/a&gt;.</source>
          <target state="translated">다음 표는 테마로 제어되는 특성 및 &lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;ThemeUserDefined&lt;/a&gt; 의 기본값을 나열 합니다.</target>
        </trans-unit>
        <trans-unit id="bdd373934c31eb139c06704e68a350ede016ead9" translate="yes" xml:space="preserve">
          <source>The following table lists the translation catalogs available for the Qt modules and tools in Qt.</source>
          <target state="translated">The following table lists the translation catalogs available for the Qt modules and tools in Qt.</target>
        </trans-unit>
        <trans-unit id="59d6fedde61260ac3e6abd49f3d454131740beb1" translate="yes" xml:space="preserve">
          <source>The following table lists values that can be used to configure the &lt;a href=&quot;qtquickcontrols2-imagine&quot;&gt;Imagine style&lt;/a&gt; in an &lt;code&gt;Imagine&lt;/code&gt; section of the configuration file:</source>
          <target state="translated">The following table lists values that can be used to configure the &lt;a href=&quot;qtquickcontrols2-imagine&quot;&gt;Imagine style&lt;/a&gt; in an &lt;code&gt;Imagine&lt;/code&gt; section of the configuration file:</target>
        </trans-unit>
        <trans-unit id="84ce62c3dab32b047b48a9e3c2a681db8e77c3b9" translate="yes" xml:space="preserve">
          <source>The following table lists values that can be used to configure the &lt;a href=&quot;qtquickcontrols2-imagine#&quot;&gt;Imagine style&lt;/a&gt; in an &lt;code&gt;Imagine&lt;/code&gt; section of the configuration file:</source>
          <target state="translated">다음 표 는 구성 파일 의 &lt;code&gt;Imagine&lt;/code&gt; 섹션 에서 &lt;a href=&quot;qtquickcontrols2-imagine#&quot;&gt;Imagine 스타일&lt;/a&gt; 을 구성하는 데 사용할 수있는 값을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="79898a1c6b471ee4e233ef5961d2350b7ec4b445" translate="yes" xml:space="preserve">
          <source>The following table lists values that can be used to configure the &lt;a href=&quot;qtquickcontrols2-material&quot;&gt;Material style&lt;/a&gt; in a &lt;code&gt;Material&lt;/code&gt; section of the configuration file:</source>
          <target state="translated">The following table lists values that can be used to configure the &lt;a href=&quot;qtquickcontrols2-material&quot;&gt;Material style&lt;/a&gt; in a &lt;code&gt;Material&lt;/code&gt; section of the configuration file:</target>
        </trans-unit>
        <trans-unit id="410edc91172074e291a8120c56f45b1e4aaf902c" translate="yes" xml:space="preserve">
          <source>The following table lists values that can be used to configure the &lt;a href=&quot;qtquickcontrols2-material#&quot;&gt;Material style&lt;/a&gt; in a &lt;code&gt;Material&lt;/code&gt; section of the configuration file:</source>
          <target state="translated">다음 표 는 구성 파일 의 &lt;code&gt;Material&lt;/code&gt; 섹션 에서 &lt;a href=&quot;qtquickcontrols2-material#&quot;&gt;재료 스타일&lt;/a&gt; 을 구성하는 데 사용할 수있는 값을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="15a83a31c39b5bf5d769996935d2397cb51b4e15" translate="yes" xml:space="preserve">
          <source>The following table lists values that can be used to configure the &lt;a href=&quot;qtquickcontrols2-universal&quot;&gt;Universal style&lt;/a&gt; in a &lt;code&gt;Universal&lt;/code&gt; section of the configuration file:</source>
          <target state="translated">The following table lists values that can be used to configure the &lt;a href=&quot;qtquickcontrols2-universal&quot;&gt;Universal style&lt;/a&gt; in a &lt;code&gt;Universal&lt;/code&gt; section of the configuration file:</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
