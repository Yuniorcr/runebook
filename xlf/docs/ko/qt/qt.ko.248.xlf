<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="7f71f29f9e07ad337efb6b88bad0f8aaabfe5c38" translate="yes" xml:space="preserve">
          <source>bool QPrinter::abort()</source>
          <target state="translated">부울 QPrinter :: abort ()</target>
        </trans-unit>
        <trans-unit id="190df5446ac348f4d4e9849545e1b4b19d965cf3" translate="yes" xml:space="preserve">
          <source>bool QPrinter::collateCopies() const</source>
          <target state="translated">bool QPrinter :: collateCopies () const</target>
        </trans-unit>
        <trans-unit id="33741e1e564052a02ae9815fab25443f06a42d63" translate="yes" xml:space="preserve">
          <source>bool QPrinter::fontEmbeddingEnabled() const</source>
          <target state="translated">bool QPrinter :: fontEmbeddingEnabled () const</target>
        </trans-unit>
        <trans-unit id="1ad8a5568aab861a07b21db0189a1b72967e35f5" translate="yes" xml:space="preserve">
          <source>bool QPrinter::fullPage() const</source>
          <target state="translated">bool QPrinter :: fullPage () const</target>
        </trans-unit>
        <trans-unit id="98edd138899a3f95db5ab43d6827fad6bad4cfdc" translate="yes" xml:space="preserve">
          <source>bool QPrinter::isValid() const</source>
          <target state="translated">bool QPrinter :: isValid () const</target>
        </trans-unit>
        <trans-unit id="dfc6a3abfc7043dde163a2a1b5adef0cc1d1adcb" translate="yes" xml:space="preserve">
          <source>bool QPrinter::setPageLayout(const &lt;a href=&quot;qpagelayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QPrinter :: setPageLayout (const &lt;a href=&quot;qpagelayout&quot;&gt;QPageLayout&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1d950e250b60b607ed24e611500876c0b4b923a6" translate="yes" xml:space="preserve">
          <source>bool QPrinter::setPageMargins(const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QPrinter :: setPageMargins (const &lt;a href=&quot;qmarginsf&quot;&gt;QMarginsF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="233a3d3acc0358029868511556e5ee859037a9f6" translate="yes" xml:space="preserve">
          <source>bool QPrinter::setPageOrientation(&lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt;</source>
          <target state="translated">부울 QPrinter :: setPageOrientation ( &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout :: Orientation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d9f002b94aaaf84f5017fb5cf1286c6735284b6f" translate="yes" xml:space="preserve">
          <source>bool QPrinter::setPageSize(const &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QPrinter :: setPageSize (const &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="23bab0b2319fc3b6bf7214838afa7a111baab91b" translate="yes" xml:space="preserve">
          <source>bool QPrinter::supportsMultipleCopies() const</source>
          <target state="translated">bool QPrinter :: supportsMultipleCopies () const</target>
        </trans-unit>
        <trans-unit id="8978a5a6a944e6585b213bc2ad2ba33cae2a53ff" translate="yes" xml:space="preserve">
          <source>bool QPrinterInfo::isDefault() const</source>
          <target state="translated">bool QPrinterInfo :: isDefault () const</target>
        </trans-unit>
        <trans-unit id="ac5c78d18b31d4427d6cedb762e47d326ada779a" translate="yes" xml:space="preserve">
          <source>bool QPrinterInfo::isNull() const</source>
          <target state="translated">bool QPrinterInfo :: isNull () const</target>
        </trans-unit>
        <trans-unit id="7cddc2e43238932b949b35a8d53dfeafe73e0fc1" translate="yes" xml:space="preserve">
          <source>bool QPrinterInfo::isRemote() const</source>
          <target state="translated">bool QPrinterInfo :: isRemote () const</target>
        </trans-unit>
        <trans-unit id="53e45ea77d67ab89fd9bb925dbeb36710e9faf64" translate="yes" xml:space="preserve">
          <source>bool QPrinterInfo::supportsCustomPageSizes() const</source>
          <target state="translated">bool QPrinterInfo :: supportsCustomPageSizes () const</target>
        </trans-unit>
        <trans-unit id="c036432210e4689feb59ff416b50881a5fb069ba" translate="yes" xml:space="preserve">
          <source>bool QProcess::startDetached(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; *</source>
          <target state="translated">bool QProcess :: startDetached ( &lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d8e72c28bc9da29a7099de495134365e781a70ff" translate="yes" xml:space="preserve">
          <source>bool QProcess::waitForFinished(int</source>
          <target state="translated">bool QProcess :: waitForFinished (int</target>
        </trans-unit>
        <trans-unit id="b99af6f0c6fadc3411b6f71ce1aee3b4685c5125" translate="yes" xml:space="preserve">
          <source>bool QProcess::waitForStarted(int</source>
          <target state="translated">bool QProcess :: waitForStarted (int</target>
        </trans-unit>
        <trans-unit id="97011ba36585ae8935ee7949cbc74cae1c4aa1b5" translate="yes" xml:space="preserve">
          <source>bool QProcessEnvironment::contains(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QProcessEnvironment :: contains (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="12cbecf95ab6b87f47746863f9748d450bd75934" translate="yes" xml:space="preserve">
          <source>bool QProcessEnvironment::isEmpty() const</source>
          <target state="translated">bool QProcessEnvironment :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="d4a40a584b8ada6f5560cbadcbcd1eced83b4438" translate="yes" xml:space="preserve">
          <source>bool QProcessEnvironment::operator!=(const &lt;a href=&quot;qprocessenvironment#QProcessEnvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QProcessEnvironment :: operator! = (const &lt;a href=&quot;qprocessenvironment#QProcessEnvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fca4a9ee0ca4da36578f5f5c99317f5581780ca1" translate="yes" xml:space="preserve">
          <source>bool QProcessEnvironment::operator==(const &lt;a href=&quot;qprocessenvironment#QProcessEnvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QProcessEnvironment :: operator == (const &lt;a href=&quot;qprocessenvironment#QProcessEnvironment&quot;&gt;QProcessEnvironment&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0d0e2e0a49eb887a8ddea048342c3cad77416488" translate="yes" xml:space="preserve">
          <source>bool QQmlComponent::isError() const</source>
          <target state="translated">bool QQmlComponent :: isError () const</target>
        </trans-unit>
        <trans-unit id="92aef4b4e09af5e369506cdbd83b550aeb5b6ae6" translate="yes" xml:space="preserve">
          <source>bool QQmlComponent::isLoading() const</source>
          <target state="translated">부울 QQmlComponent :: isLoading () const</target>
        </trans-unit>
        <trans-unit id="fdb76e501a5c9aa864e6bf50d28f8452d2b7538a" translate="yes" xml:space="preserve">
          <source>bool QQmlComponent::isNull() const</source>
          <target state="translated">bool QQmlComponent :: isNull () const</target>
        </trans-unit>
        <trans-unit id="0205df8a3d34cd90ada70794093179accb11e627" translate="yes" xml:space="preserve">
          <source>bool QQmlComponent::isReady() const</source>
          <target state="translated">bool QQmlComponent :: isReady () const</target>
        </trans-unit>
        <trans-unit id="75e9668c0a78779a55bca5b92f0130b8fbb5a03e" translate="yes" xml:space="preserve">
          <source>bool QQmlContext::isValid() const</source>
          <target state="translated">부울 QQmlContext :: isValid () const</target>
        </trans-unit>
        <trans-unit id="ca7cad0c21b8c4f4eda2dc201ff8c8edb5604cba" translate="yes" xml:space="preserve">
          <source>bool QQmlEngine::importPlugin(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QQmlEngine :: importPlugin (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0fff091d3123f829030a36647af4aaac9a1618c9" translate="yes" xml:space="preserve">
          <source>bool QQmlEngine::outputWarningsToStandardError() const</source>
          <target state="translated">bool QQmlEngine :: outputWarningsToStandardError () const</target>
        </trans-unit>
        <trans-unit id="7ebe0a0773044d1aa7f3d5513e617fa67f55756d" translate="yes" xml:space="preserve">
          <source>bool QQmlEngine::qmlProtectModule(const char *</source>
          <target state="translated">bool QQmlEngine :: qmlProtectModule (const char *</target>
        </trans-unit>
        <trans-unit id="0ec85373b9f5f5d4f044406eb27b4a860916dccf" translate="yes" xml:space="preserve">
          <source>bool QQmlError::isValid() const</source>
          <target state="translated">bool QQmlError :: isValid () const</target>
        </trans-unit>
        <trans-unit id="e09524796a4d7797549b5e6ed2297a6817adeb75" translate="yes" xml:space="preserve">
          <source>bool QQmlExpression::hasError() const</source>
          <target state="translated">bool QQmlExpression :: hasError () const</target>
        </trans-unit>
        <trans-unit id="a6a506b03b0c1c32b984d4ad1cf26d9f640b6ddc" translate="yes" xml:space="preserve">
          <source>bool QQmlExpression::notifyOnValueChanged() const</source>
          <target state="translated">bool QQmlExpression :: notifyOnValueChanged () const</target>
        </trans-unit>
        <trans-unit id="53187500c5c8902545770b0d5f321288df07cd77" translate="yes" xml:space="preserve">
          <source>bool QQmlIncubator::isError() const</source>
          <target state="translated">부울 QQmlIncubator :: isError () const</target>
        </trans-unit>
        <trans-unit id="9371092d72951b663009f5393f38fc0f7fe02eb6" translate="yes" xml:space="preserve">
          <source>bool QQmlIncubator::isLoading() const</source>
          <target state="translated">부울 QQmlIncubator :: isLoading () const</target>
        </trans-unit>
        <trans-unit id="b9f01c93f25e7f4bbb616d266fde9cf598779507" translate="yes" xml:space="preserve">
          <source>bool QQmlIncubator::isNull() const</source>
          <target state="translated">부울 QQmlIncubator :: isNull () const</target>
        </trans-unit>
        <trans-unit id="7fb8573eb4a64c2dc4c6b8e9e7fec35663e18087" translate="yes" xml:space="preserve">
          <source>bool QQmlIncubator::isReady() const</source>
          <target state="translated">부울 QQmlIncubator :: isReady () const</target>
        </trans-unit>
        <trans-unit id="ebca213584406327b2877eb0238bfc9067ec1dd3" translate="yes" xml:space="preserve">
          <source>bool QQmlListProperty::operator==(const QQmlListProperty&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">부울 QQmlListProperty :: operator == (const QQmlListProperty &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="17e6f54f6c4f12f9c159a67ab23d4ac80bded53c" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::append(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">bool QQmlListReference :: append ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2e3e291fa070add3d503d0c5cf719a2c48fa177c" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::canAppend() const</source>
          <target state="translated">bool QQmlListReference :: canAppend () const</target>
        </trans-unit>
        <trans-unit id="cb2704a6a09fa988282bdf330af1bd2d1774501e" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::canAt() const</source>
          <target state="translated">bool QQmlListReference :: canAt () const</target>
        </trans-unit>
        <trans-unit id="76bb9384cd40f167e86ce379b677f607676b42e9" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::canClear() const</source>
          <target state="translated">bool QQmlListReference :: canClear () const</target>
        </trans-unit>
        <trans-unit id="42df3e1781ad4595e2b30f649f51678f2d2b593d" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::canCount() const</source>
          <target state="translated">bool QQmlListReference :: canCount () const</target>
        </trans-unit>
        <trans-unit id="fc6b44e883b1d67916a67d8fb0a45cb9ef0bd8e4" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::canRemoveLast() const</source>
          <target state="translated">bool QQmlListReference::canRemoveLast() const</target>
        </trans-unit>
        <trans-unit id="f97907ea2fe134f3c2de94b58757a8f536ee2d0d" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::canReplace() const</source>
          <target state="translated">bool QQmlListReference::canReplace() const</target>
        </trans-unit>
        <trans-unit id="e143c5de6bd9afb304cb1db5ce921fca829cdc09" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::clear() const</source>
          <target state="translated">bool QQmlListReference :: clear () const</target>
        </trans-unit>
        <trans-unit id="c7064758f94a10689d520dd14aa556230c88ca62" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::isManipulable() const</source>
          <target state="translated">bool QQmlListReference :: isManipulable () const</target>
        </trans-unit>
        <trans-unit id="aaf69fab05937186f2096c42050af98d4fa107c3" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::isReadable() const</source>
          <target state="translated">부울 QQmlListReference :: isReadable () const</target>
        </trans-unit>
        <trans-unit id="46b5c9e72f453ac1d1aace59aab754c8b48faff1" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::isValid() const</source>
          <target state="translated">bool QQmlListReference :: isValid () const</target>
        </trans-unit>
        <trans-unit id="cc43922322641f081926b57d7e8d9a8fcfecaab8" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::removeLast() const</source>
          <target state="translated">bool QQmlListReference::removeLast() const</target>
        </trans-unit>
        <trans-unit id="53cdf4c45ab9f0db5dbe4dc31165cacab4fa8827" translate="yes" xml:space="preserve">
          <source>bool QQmlListReference::replace(int</source>
          <target state="translated">bool QQmlListReference::replace(int</target>
        </trans-unit>
        <trans-unit id="92642ee32c60e0aff988a3af8adf5fada84d0e40" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::connectNotifySignal(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">부울 QQmlProperty :: connectNotifySignal ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="14fb4e7ded305387ba6b0dd94afcfb866a154e5b" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::hasNotifySignal() const</source>
          <target state="translated">부울 QQmlProperty :: hasNotifySignal () const</target>
        </trans-unit>
        <trans-unit id="cba12679ef1d0edf543c3856c3bacfab6cb94246" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::isDesignable() const</source>
          <target state="translated">부울 QQmlProperty :: isDesignable () const</target>
        </trans-unit>
        <trans-unit id="91f30f6331c0114bc3e5aace26b60efe22832bc1" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::isProperty() const</source>
          <target state="translated">부울 QQmlProperty :: isProperty () const</target>
        </trans-unit>
        <trans-unit id="d49d68404076641f4ce9636dfaaca89eed379e60" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::isResettable() const</source>
          <target state="translated">부울 QQmlProperty :: isResettable () const</target>
        </trans-unit>
        <trans-unit id="220e002f34d1f7b3f6c6f2123d547d742f98d894" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::isSignalProperty() const</source>
          <target state="translated">부울 QQmlProperty :: isSignalProperty () const</target>
        </trans-unit>
        <trans-unit id="04c1b7cd3d8d2329b7c7ace7821f49ae91b023cd" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::isValid() const</source>
          <target state="translated">부울 QQmlProperty :: isValid () const</target>
        </trans-unit>
        <trans-unit id="a07dccb438778fb351899d515fd8ca914e700633" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::isWritable() const</source>
          <target state="translated">부울 QQmlProperty :: isWritable () const</target>
        </trans-unit>
        <trans-unit id="9bb74d557954dd78e59d66786ef08876baa03647" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::needsNotifySignal() const</source>
          <target state="translated">부울 QQmlProperty :: needsNotifySignal () const</target>
        </trans-unit>
        <trans-unit id="81b008e277f3596ebbc26da03088b0209f7ffd41" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::operator==(const &lt;a href=&quot;qqmlproperty#QQmlProperty&quot;&gt;QQmlProperty&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QQmlProperty :: operator == (const &lt;a href=&quot;qqmlproperty#QQmlProperty&quot;&gt;QQmlProperty&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c59c0b812710c18138a6393650960cd2fb7d25f0" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::reset() const</source>
          <target state="translated">부울 QQmlProperty :: reset () const</target>
        </trans-unit>
        <trans-unit id="58b293bc37e574ef3368873fd7295f0173624b1b" translate="yes" xml:space="preserve">
          <source>bool QQmlProperty::write(const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QQmlProperty :: write (const &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f0716a101e571258cbef5cf8fc7a46b5fde1f97d" translate="yes" xml:space="preserve">
          <source>bool QQmlPropertyMap::contains(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QQmlPropertyMap :: contains (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d1800943da7891ed216b9c09a37fb9596835ea03" translate="yes" xml:space="preserve">
          <source>bool QQmlPropertyMap::isEmpty() const</source>
          <target state="translated">부울 QQmlPropertyMap :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="bc90d29be76bf2c0acadc5f1376f81ef09196429" translate="yes" xml:space="preserve">
          <source>bool QQmlScriptString::booleanLiteral(bool *</source>
          <target state="translated">bool QQmlScriptString :: booleanLiteral (bool *</target>
        </trans-unit>
        <trans-unit id="60f0f3b9174446835abebc620466e3e65a32e18a" translate="yes" xml:space="preserve">
          <source>bool QQmlScriptString::isEmpty() const</source>
          <target state="translated">bool QQmlScriptString :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="e680d0a8d986721ca5e2f9e7c248d19b9aeed516" translate="yes" xml:space="preserve">
          <source>bool QQmlScriptString::isNullLiteral() const</source>
          <target state="translated">bool QQmlScriptString :: isNullLiteral () const</target>
        </trans-unit>
        <trans-unit id="dbb0d6ed037e6603ea0baa43061a2fef1a57fc28" translate="yes" xml:space="preserve">
          <source>bool QQmlScriptString::isUndefinedLiteral() const</source>
          <target state="translated">부울 QQmlScriptString :: isUndefinedLiteral () const</target>
        </trans-unit>
        <trans-unit id="3af5ee689e8b139cafb4a4dfc9bd5a7f0dcf0a88" translate="yes" xml:space="preserve">
          <source>bool QQmlScriptString::operator!=(const &lt;a href=&quot;qqmlscriptstring#QQmlScriptString&quot;&gt;QQmlScriptString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QQmlScriptString :: operator! = (const &lt;a href=&quot;qqmlscriptstring#QQmlScriptString&quot;&gt;QQmlScriptString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8f655e09205efe04c87caed549021f6ea5af5611" translate="yes" xml:space="preserve">
          <source>bool QQmlScriptString::operator==(const &lt;a href=&quot;qqmlscriptstring#QQmlScriptString&quot;&gt;QQmlScriptString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QQmlScriptString :: operator == (const &lt;a href=&quot;qqmlscriptstring#QQmlScriptString&quot;&gt;QQmlScriptString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4362aa8fe485384ef3e9dc798ccb354925865847" translate="yes" xml:space="preserve">
          <source>bool QQuaternion::isIdentity() const</source>
          <target state="translated">bool QQuaternion :: isIdentity () const</target>
        </trans-unit>
        <trans-unit id="837770d404a9a6ad0e9ba3c2d0f881b13c3a3438" translate="yes" xml:space="preserve">
          <source>bool QQuaternion::isNull() const</source>
          <target state="translated">bool QQuaternion :: isNull () const</target>
        </trans-unit>
        <trans-unit id="e7e266c324895ffe3336de6f1b8ee78538045ed9" translate="yes" xml:space="preserve">
          <source>bool QQuaternion::operator!=(const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QQuaternion :: 연산자! = (const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bc79619864afbd7783e2a57efd018c47a97722a8" translate="yes" xml:space="preserve">
          <source>bool QQuaternion::operator==(const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QQuaternion :: operator == (const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0a1a5dc60460fa366f8740c076ada51fda2d13b6" translate="yes" xml:space="preserve">
          <source>bool QQuaternion::qFuzzyCompare(const &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QQuaternion :: qFuzzyCompare (CONST의 &lt;a href=&quot;qquaternion#QQuaternion&quot;&gt;QQuaternion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4b30bbf2d83ee2ecddd87794172e6ad5147b765c" translate="yes" xml:space="preserve">
          <source>bool QQuickItem::acceptHoverEvents() const</source>
          <target state="translated">bool QQuickItem :: acceptHoverEvents () const</target>
        </trans-unit>
        <trans-unit id="ac53b7a953bcf920a241c9e8f88d411f5b9b4ac9" translate="yes" xml:space="preserve">
          <source>bool QQuickItem::acceptTouchEvents() const</source>
          <target state="translated">bool QQuickItem :: acceptTouchEvents () const</target>
        </trans-unit>
        <trans-unit id="ea6961a2683153084a3b93cb179f360103f54f95" translate="yes" xml:space="preserve">
          <source>bool QQuickItem::filtersChildMouseEvents() const</source>
          <target state="translated">bool QQuickItem :: filtersChildMouseEvents () const</target>
        </trans-unit>
        <trans-unit id="e5ffe3d723f4061579858018a9bfd90a1fd09085" translate="yes" xml:space="preserve">
          <source>bool QQuickItem::isAncestorOf(const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</source>
          <target state="translated">bool QQuickItem :: isAncestorOf (const &lt;a href=&quot;qquickitem#QQuickItem&quot;&gt;QQuickItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1712bd3924cc910c1e7cbf24991cef79dc966bfc" translate="yes" xml:space="preserve">
          <source>bool QQuickItem::isFocusScope() const</source>
          <target state="translated">bool QQuickItem :: isFocusScope () const</target>
        </trans-unit>
        <trans-unit id="4bd2ef3c006b1fccf6de2e8449bdbe1008c49c73" translate="yes" xml:space="preserve">
          <source>bool QQuickItem::keepMouseGrab() const</source>
          <target state="translated">bool QQuickItem :: keepMouseGrab () const</target>
        </trans-unit>
        <trans-unit id="ed7bcd6abccb959827822cbfa5a7c20faf0dffea" translate="yes" xml:space="preserve">
          <source>bool QQuickItem::keepTouchGrab() const</source>
          <target state="translated">bool QQuickItem :: keepTouchGrab () const</target>
        </trans-unit>
        <trans-unit id="1f20a413b1711fa2b193609e6f29d77a961f60c6" translate="yes" xml:space="preserve">
          <source>bool QQuickItemGrabResult::saveToFile(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QQuickItemGrabResult :: saveToFile (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1d4adbbaa7160214fb65c9e10bebf57437088a2c" translate="yes" xml:space="preserve">
          <source>bool QQuickPaintedItem::antialiasing() const</source>
          <target state="translated">bool QQuickPaintedItem :: antialiasing () const</target>
        </trans-unit>
        <trans-unit id="745e98ebe670964dd557dc111a1197a83455ac41" translate="yes" xml:space="preserve">
          <source>bool QQuickPaintedItem::mipmap() const</source>
          <target state="translated">bool QQuickPaintedItem :: mipmap () const</target>
        </trans-unit>
        <trans-unit id="5041c34b4a90e6583ce32fad4b11ca3849942493" translate="yes" xml:space="preserve">
          <source>bool QQuickPaintedItem::opaquePainting() const</source>
          <target state="translated">bool QQuickPaintedItem :: opaquePainting () const</target>
        </trans-unit>
        <trans-unit id="e8d0174c6b45b61aab132dfa5a70a7c2d601c9c6" translate="yes" xml:space="preserve">
          <source>bool QQuickRenderControl::sync()</source>
          <target state="translated">bool QQuickRenderControl :: sync ()</target>
        </trans-unit>
        <trans-unit id="1b66b509a53da66581f99e7cd9ac4316491619fb" translate="yes" xml:space="preserve">
          <source>bool QQuickTest::qIsPolishScheduled(const &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; *</source>
          <target state="translated">bool QQuickTest :: qIsPolishScheduled (const &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6c2b7600848640d04a630f4a8c386533908b964b" translate="yes" xml:space="preserve">
          <source>bool QQuickTest::qWaitForItemPolished(const &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; *</source>
          <target state="translated">bool QQuickTest :: qWaitForItemPolished (const &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1333d1883a1ecebe7b8162a961fb1a7def7f4492" translate="yes" xml:space="preserve">
          <source>bool QQuickWindow::clearBeforeRendering() const</source>
          <target state="translated">bool QQuickWindow :: clearBeforeRendering () const</target>
        </trans-unit>
        <trans-unit id="40bd6cc950e3f58a5d123d4c4ba237b0988e1a44" translate="yes" xml:space="preserve">
          <source>bool QQuickWindow::isPersistentOpenGLContext() const</source>
          <target state="translated">bool QQuickWindow :: isPersistentOpenGLContext () const</target>
        </trans-unit>
        <trans-unit id="89e00df2578af6e13ff82ef90dbe89695bb0a1c0" translate="yes" xml:space="preserve">
          <source>bool QQuickWindow::isPersistentSceneGraph() const</source>
          <target state="translated">bool QQuickWindow :: isPersistentSceneGraph () const</target>
        </trans-unit>
        <trans-unit id="a8e0bbf132efd352fbd40e554501d8589d5c6bd7" translate="yes" xml:space="preserve">
          <source>bool QQuickWindow::isSceneGraphInitialized() const</source>
          <target state="translated">bool QQuickWindow :: isSceneGraphInitialized () const</target>
        </trans-unit>
        <trans-unit id="fe55ba230276f6ab8b813218c36ac686b710bc79" translate="yes" xml:space="preserve">
          <source>bool QRadioTuner::isBandSupported(&lt;a href=&quot;qradiotuner#Band-enum&quot;&gt;QRadioTuner::Band&lt;/a&gt;</source>
          <target state="translated">bool QRadioTuner :: isBandSupported ( &lt;a href=&quot;qradiotuner#Band-enum&quot;&gt;QRadioTuner :: 밴드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e167e9afe7ac904c6724db36cdbb0a2e51ee93f9" translate="yes" xml:space="preserve">
          <source>bool QRandomGenerator::operator!=(const &lt;a href=&quot;qrandomgenerator#QRandomGenerator&quot;&gt;QRandomGenerator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRandomGenerator :: operator! = (const &lt;a href=&quot;qrandomgenerator#QRandomGenerator&quot;&gt;QRandomGenerator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fedde1a18546bb9d70b69b6dc9b1c4c708441097" translate="yes" xml:space="preserve">
          <source>bool QRandomGenerator::operator==(const &lt;a href=&quot;qrandomgenerator#QRandomGenerator&quot;&gt;QRandomGenerator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRandomGenerator :: operator == (const &lt;a href=&quot;qrandomgenerator#QRandomGenerator&quot;&gt;QRandomGenerator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b52721f6ebca9542d91a6a998e36f827eee1740e" translate="yes" xml:space="preserve">
          <source>bool QRawFont::advancesForGlyphIndexes(const &lt;a href=&quot;#quint32-typedef&quot;&gt;quint32&lt;/a&gt; *</source>
          <target state="translated">bool QRawFont :: advancesForGlyphIndexes (const &lt;a href=&quot;#quint32-typedef&quot;&gt;quint32&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="76e0a3d63e567324cafb1d2f7129f7652f95e17d" translate="yes" xml:space="preserve">
          <source>bool QRawFont::advancesForGlyphIndexes(const &lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt; *</source>
          <target state="translated">bool QRawFont::advancesForGlyphIndexes(const &lt;a href=&quot;qtglobal#quint32-typedef&quot;&gt;quint32&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="690a399b1839c74155bc1786eec7140a690b0e83" translate="yes" xml:space="preserve">
          <source>bool QRawFont::glyphIndexesForChars(const &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; *</source>
          <target state="translated">bool QRawFont :: glyphIndexesForChars (const &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8714eb67edbea872a3b08c5844f0bbdca4841f46" translate="yes" xml:space="preserve">
          <source>bool QRawFont::isValid() const</source>
          <target state="translated">bool QRawFont :: isValid () const</target>
        </trans-unit>
        <trans-unit id="80f9f1a6e985cf77cc5d72256088601b45685a0c" translate="yes" xml:space="preserve">
          <source>bool QRawFont::operator!=(const &lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QRawFont :: operator! = (const &lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="03a885605327c40f45d5c6b946231a62afccf659" translate="yes" xml:space="preserve">
          <source>bool QRawFont::operator==(const &lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QRawFont :: operator == (const &lt;a href=&quot;qrawfont#QRawFont&quot;&gt;QRawFont&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ae9972cefed7b31d531424a26b7773e87437e628" translate="yes" xml:space="preserve">
          <source>bool QRawFont::supportsCharacter(&lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">부울 QRawFont :: supportsCharacter ( &lt;a href=&quot;#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb93a628f283cfabc0fa83d7cc8768d94c7141c1" translate="yes" xml:space="preserve">
          <source>bool QRawFont::supportsCharacter(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">bool QRawFont :: supportsCharacter ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8aa298dc94eed33dd0da5e1e2496c42c8356ae4e" translate="yes" xml:space="preserve">
          <source>bool QRawFont::supportsCharacter(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</source>
          <target state="translated">bool QRawFont::supportsCharacter(&lt;a href=&quot;qtglobal#uint-typedef&quot;&gt;uint&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7b666a904a42673d0c80d7245278334b2bf5cde" translate="yes" xml:space="preserve">
          <source>bool QReadWriteLock::tryLockForRead()</source>
          <target state="translated">bool QReadWriteLock :: tryLockForRead ()</target>
        </trans-unit>
        <trans-unit id="ce2060419840c7e2bce70da1c31c90976eea95d2" translate="yes" xml:space="preserve">
          <source>bool QReadWriteLock::tryLockForRead(int</source>
          <target state="translated">bool QReadWriteLock :: tryLockForRead (int</target>
        </trans-unit>
        <trans-unit id="311f14e28293297a28b5528bf2f8489b9522152b" translate="yes" xml:space="preserve">
          <source>bool QReadWriteLock::tryLockForWrite()</source>
          <target state="translated">bool QReadWriteLock :: tryLockForWrite ()</target>
        </trans-unit>
        <trans-unit id="5482922307262bc64e902ad4f4216c0b066f8b15" translate="yes" xml:space="preserve">
          <source>bool QReadWriteLock::tryLockForWrite(int</source>
          <target state="translated">bool QReadWriteLock :: tryLockForWrite (int</target>
        </trans-unit>
        <trans-unit id="2deea3c28d5222859952b14a9c46c6df031553ed" translate="yes" xml:space="preserve">
          <source>bool QRect::contains(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRect :: 포함 (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b3845a81d547c3f0f7d4f8e5e0b3e243f27e5738" translate="yes" xml:space="preserve">
          <source>bool QRect::contains(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRect :: 포함 (const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c16c65a96975dbdd3b912e8e172ea8bb86ab66e3" translate="yes" xml:space="preserve">
          <source>bool QRect::contains(int</source>
          <target state="translated">bool QRect :: 포함 (int</target>
        </trans-unit>
        <trans-unit id="e6070687978021baf70450c096e9ea7c88481848" translate="yes" xml:space="preserve">
          <source>bool QRect::intersects(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRect :: 교차 (const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="eb4f12c609f57ecd8bcdf1d8ac051b4a03c72b1a" translate="yes" xml:space="preserve">
          <source>bool QRect::isEmpty() const</source>
          <target state="translated">bool QRect :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="a567b1104f255bf928638152d9b6edb2dc6f46d7" translate="yes" xml:space="preserve">
          <source>bool QRect::isNull() const</source>
          <target state="translated">bool QRect :: isNull () const</target>
        </trans-unit>
        <trans-unit id="4950f6efae8acee10b546724a93bf54093df6ceb" translate="yes" xml:space="preserve">
          <source>bool QRect::isValid() const</source>
          <target state="translated">bool QRect :: isValid () const</target>
        </trans-unit>
        <trans-unit id="bd8a0d6634853d4df342dad1a9a1dd0f6e1abe9f" translate="yes" xml:space="preserve">
          <source>bool QRect::operator!=(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRect :: operator! = ( &lt;a href=&quot;qrect#QRect&quot;&gt;정체적인 QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="586c6f0eed8c1d33bf12dc1cb0f9e4b082370781" translate="yes" xml:space="preserve">
          <source>bool QRect::operator==(const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QRect :: operator == (const &lt;a href=&quot;qrect#QRect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="65151b8340baabb598287c33fa94d6f52eebfc0a" translate="yes" xml:space="preserve">
          <source>bool QRectF::contains(&lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</source>
          <target state="translated">bool QRectF :: 포함 ( &lt;a href=&quot;qtglobal#qreal-typedef&quot;&gt;qreal&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7250b82b8ba7bbb7fc5861736543ea855d79ed2e" translate="yes" xml:space="preserve">
          <source>bool QRectF::contains(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRectF :: 포함 (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c91154878bb5611febede723458b543a5dd0045a" translate="yes" xml:space="preserve">
          <source>bool QRectF::contains(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRectF :: 포함 (const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b70d2b574c136000a357346ab2dd928001d3f483" translate="yes" xml:space="preserve">
          <source>bool QRectF::intersects(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRectF :: 교차 (const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0db381ae9d8c527e42618981fa9edda804366708" translate="yes" xml:space="preserve">
          <source>bool QRectF::isEmpty() const</source>
          <target state="translated">bool QRectF :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="1b4f306b27fa940cacb6c607ab406e91352b74c3" translate="yes" xml:space="preserve">
          <source>bool QRectF::isNull() const</source>
          <target state="translated">bool QRectF :: isNull () const</target>
        </trans-unit>
        <trans-unit id="e8403cadea9beb4f8704b442f2584a80f7b15397" translate="yes" xml:space="preserve">
          <source>bool QRectF::isValid() const</source>
          <target state="translated">bool QRectF :: isValid () const</target>
        </trans-unit>
        <trans-unit id="5a613df0f36b8682b08f2f5095cd2e23cc24553a" translate="yes" xml:space="preserve">
          <source>bool QRectF::operator!=(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRectF :: 연산자! = (const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9dfcaae17064c8fc193c8c0b30a6cd128f5a19d2" translate="yes" xml:space="preserve">
          <source>bool QRectF::operator==(const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRectF :: 연산자 == (const &lt;a href=&quot;qrectf#QRectF&quot;&gt;QRectF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="411cecbf4ea15f97c132ea725d33b4cfac55734d" translate="yes" xml:space="preserve">
          <source>bool QRegExp::exactMatch(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRegExp :: exactMatch (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="38f15228ad1ec0d1f64cb2daccc25f4afe2afdde" translate="yes" xml:space="preserve">
          <source>bool QRegExp::isEmpty() const</source>
          <target state="translated">bool QRegExp :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="f4bd25a4fae4f75a1f373981c353fe0982689aba" translate="yes" xml:space="preserve">
          <source>bool QRegExp::isMinimal() const</source>
          <target state="translated">bool QRegExp :: isMinimal () const</target>
        </trans-unit>
        <trans-unit id="bf021f7f4797729e811399f6da9cca5b707a08a1" translate="yes" xml:space="preserve">
          <source>bool QRegExp::isValid() const</source>
          <target state="translated">bool QRegExp :: isValid () const</target>
        </trans-unit>
        <trans-unit id="8377b67ec9c3b2818ac0672e2d63ce0a04889935" translate="yes" xml:space="preserve">
          <source>bool QRegExp::operator!=(const &lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRegExp :: operator! = (const &lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="44a088fe23bab3a28e4528b2147d154bfe66eb98" translate="yes" xml:space="preserve">
          <source>bool QRegExp::operator==(const &lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRegExp :: operator == (const &lt;a href=&quot;qregexp#QRegExp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8a4f4e57bbdc479fe611e4d11305a29db762a083" translate="yes" xml:space="preserve">
          <source>bool QRegion::contains(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRegion :: 포함 (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0de4a6fde42beb9a324dbe5b36ced00561a045c0" translate="yes" xml:space="preserve">
          <source>bool QRegion::contains(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRegion :: 포함 (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a8b9ba139a368d7ac48c2192d06cf37023a1ddcb" translate="yes" xml:space="preserve">
          <source>bool QRegion::intersects(const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRegion :: 교차 (const &lt;a href=&quot;qrect&quot;&gt;QRect&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="95d18f52f952966705766bd74c06e82825543b80" translate="yes" xml:space="preserve">
          <source>bool QRegion::intersects(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRegion :: 교차 (const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="06c6d37868b3a78a19171a80f4cacd754ceb5c64" translate="yes" xml:space="preserve">
          <source>bool QRegion::isEmpty() const</source>
          <target state="translated">bool QRegion :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="6ba6aad5dd89417a481858541b9b7bd2f376c6cc" translate="yes" xml:space="preserve">
          <source>bool QRegion::isNull() const</source>
          <target state="translated">bool QRegion :: isNull () const</target>
        </trans-unit>
        <trans-unit id="129b3947c887facc1d872c06b986267b79dd60bc" translate="yes" xml:space="preserve">
          <source>bool QRegion::operator!=(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRegion :: 연산자! = (const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="cb684ca25f2f00bf302e7290e53be735bd395e01" translate="yes" xml:space="preserve">
          <source>bool QRegion::operator==(const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QRegion :: operator == (const &lt;a href=&quot;qregion#QRegion&quot;&gt;QRegion&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f40bfb5bf8d06a2fe009b59fabc1a90219228876" translate="yes" xml:space="preserve">
          <source>bool QRegularExpression::isValid() const</source>
          <target state="translated">bool QRegularExpression :: isValid () const</target>
        </trans-unit>
        <trans-unit id="2bc5da7cca7e06482a60ba33d86efe329d069898" translate="yes" xml:space="preserve">
          <source>bool QRegularExpression::operator!=(const &lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRegularExpression :: 연산자! = (const &lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1aa080fe0ce61b046b1b13b39a3f9bb2588334ab" translate="yes" xml:space="preserve">
          <source>bool QRegularExpression::operator==(const &lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QRegularExpression :: operator == (const &lt;a href=&quot;qregularexpression#QRegularExpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="312a8ee0402a74ed9c48de250c6447621d8dc22c" translate="yes" xml:space="preserve">
          <source>bool QRegularExpressionMatch::hasMatch() const</source>
          <target state="translated">bool QRegularExpressionMatch :: hasMatch () const</target>
        </trans-unit>
        <trans-unit id="85a6d61cd265a4bac10f2d8d584f7c777b9bfe81" translate="yes" xml:space="preserve">
          <source>bool QRegularExpressionMatch::hasPartialMatch() const</source>
          <target state="translated">bool QRegularExpressionMatch :: hasPartialMatch () const</target>
        </trans-unit>
        <trans-unit id="11b2950f62a22045791525c16adc79d7d129a5dd" translate="yes" xml:space="preserve">
          <source>bool QRegularExpressionMatch::isValid() const</source>
          <target state="translated">bool QRegularExpressionMatch :: isValid () const</target>
        </trans-unit>
        <trans-unit id="999c18e900d59d61d82a1868a23772bdfe2e0c6a" translate="yes" xml:space="preserve">
          <source>bool QRegularExpressionMatchIterator::hasNext() const</source>
          <target state="translated">bool QRegularExpressionMatchIterator :: hasNext () const</target>
        </trans-unit>
        <trans-unit id="eb21ddb769fd002d7395ea1d1bf730f065abcf21" translate="yes" xml:space="preserve">
          <source>bool QRegularExpressionMatchIterator::isValid() const</source>
          <target state="translated">bool QRegularExpressionMatchIterator :: isValid () const</target>
        </trans-unit>
        <trans-unit id="830910ba40dbd157a0c0ca8775bba46d965bbd60" translate="yes" xml:space="preserve">
          <source>bool QRemoteObjectHostBase::disableRemoting(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">bool QRemoteObjectHostBase :: disableRemoting ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="453aa90538b0fd202fffe5546a503868cc1fe5d0" translate="yes" xml:space="preserve">
          <source>bool QRemoteObjectHostBase::enableRemoting(&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; *</source>
          <target state="translated">bool QRemoteObjectHostBase :: enableRemoting ( &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9885e82998c546cbcab97124bb6cbb12898a4bb6" translate="yes" xml:space="preserve">
          <source>bool QRemoteObjectHostBase::enableRemoting(&lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</source>
          <target state="translated">bool QRemoteObjectHostBase :: enableRemoting ( &lt;a href=&quot;qobject#QObject&quot;&gt;QObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="bf2371de1d931fba780ea503fd2241ab2658747e" translate="yes" xml:space="preserve">
          <source>bool QRemoteObjectHostBase::enableRemoting(ObjectType *</source>
          <target state="translated">bool QRemoteObjectHostBase :: enableRemoting (ObjectType *</target>
        </trans-unit>
        <trans-unit id="0860bfae644dfa24c85a0a0dee56880d7db5bfdd" translate="yes" xml:space="preserve">
          <source>bool QRemoteObjectHostBase::proxy(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRemoteObjectHostBase :: proxy (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="df97e0cf02e5fcf9acdd20a8193d7da057c0ff00" translate="yes" xml:space="preserve">
          <source>bool QRemoteObjectHostBase::reverseProxy(QRemoteObjectHostBase::RemoteObjectNameFilter</source>
          <target state="translated">부울 QRemoteObjectHostBase :: reverseProxy (QRemoteObjectHostBase :: RemoteObjectNameFilter</target>
        </trans-unit>
        <trans-unit id="d5815c071f25d4441bf946012b99b6de7323124a" translate="yes" xml:space="preserve">
          <source>bool QRemoteObjectNode::connectToNode(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QRemoteObjectNode :: connectToNode (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="13656ff8ff9c94ede4282309cd80c0d6d4d2465d" translate="yes" xml:space="preserve">
          <source>bool QRemoteObjectNode::waitForRegistry(int</source>
          <target state="translated">bool QRemoteObjectNode :: waitForRegistry (int</target>
        </trans-unit>
        <trans-unit id="0204f2857f7ce3755744a293d317c5a319c9cb17" translate="yes" xml:space="preserve">
          <source>bool QRemoteObjectPendingCall::isFinished() const</source>
          <target state="translated">bool QRemoteObjectPendingCall::isFinished() const</target>
        </trans-unit>
        <trans-unit id="7a7eb363c6c6e733d10d9f6e3bee1a245ceeecfd" translate="yes" xml:space="preserve">
          <source>bool QRemoteObjectPendingCall::waitForFinished(int</source>
          <target state="translated">bool QRemoteObjectPendingCall::waitForFinished(int</target>
        </trans-unit>
        <trans-unit id="0b87f30937bf02bf25bae0e775524498195ed4c8" translate="yes" xml:space="preserve">
          <source>bool QRemoteObjectPendingCallWatcher::isFinished() const</source>
          <target state="translated">bool QRemoteObjectPendingCallWatcher::isFinished() const</target>
        </trans-unit>
        <trans-unit id="44f87f0011db50581a49d31bca14ef5d0442d4d2" translate="yes" xml:space="preserve">
          <source>bool QRemoteObjectReplica::isInitialized() const</source>
          <target state="translated">bool QRemoteObjectReplica :: isInitialized () const</target>
        </trans-unit>
        <trans-unit id="407caeb0e93bb945d1d5046184620ffcc8f44d6e" translate="yes" xml:space="preserve">
          <source>bool QRemoteObjectReplica::isReplicaValid() const</source>
          <target state="translated">bool QRemoteObjectReplica :: isReplicaValid () const</target>
        </trans-unit>
        <trans-unit id="27cfbad23aee9a9fae0004e5ad65e7f50739832d" translate="yes" xml:space="preserve">
          <source>bool QRemoteObjectReplica::waitForSource(int</source>
          <target state="translated">bool QRemoteObjectReplica :: waitForSource (int</target>
        </trans-unit>
        <trans-unit id="ce32e11f5ca6a1001a51c6c3e5fd037c40332876" translate="yes" xml:space="preserve">
          <source>bool QRenderCaptureReply::saveImage(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QRenderCaptureReply :: saveImage (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6c30f78ef013ffa3387008289e4ee7e79f811939" translate="yes" xml:space="preserve">
          <source>bool QResource::isCompressed() const</source>
          <target state="translated">bool QResource :: isCompressed () const</target>
        </trans-unit>
        <trans-unit id="3b129f7ae4a946949601c13059e0a7b250a7aeaf" translate="yes" xml:space="preserve">
          <source>bool QResource::isValid() const</source>
          <target state="translated">bool QResource :: isValid () const</target>
        </trans-unit>
        <trans-unit id="2f298f0d09543acf847ee98518fb07e000d80164" translate="yes" xml:space="preserve">
          <source>bool QRgba64::isOpaque() const</source>
          <target state="translated">bool QRgba64 :: isOpaque () const</target>
        </trans-unit>
        <trans-unit id="82783a322307830c21d2d188674e2b2155418adf" translate="yes" xml:space="preserve">
          <source>bool QRgba64::isTransparent() const</source>
          <target state="translated">bool QRgba64 :: isTransparent () const</target>
        </trans-unit>
        <trans-unit id="3767a1832cc2dc3994790499b8043d5db9923732" translate="yes" xml:space="preserve">
          <source>bool QRunnable::autoDelete() const</source>
          <target state="translated">bool QRunnable :: autoDelete () const</target>
        </trans-unit>
        <trans-unit id="05fdbc088f7ac69db7e9d42e35fd1abc42c7ff0f" translate="yes" xml:space="preserve">
          <source>bool QSGClipNode::isRectangular() const</source>
          <target state="translated">bool QSGClipNode :: isRectangular () const</target>
        </trans-unit>
        <trans-unit id="cc5300671ba2cc859e59819de9b0475d825aa35c" translate="yes" xml:space="preserve">
          <source>bool QSGSimpleTextureNode::ownsTexture() const</source>
          <target state="translated">bool QSGSimpleTextureNode :: ownsTexture () const</target>
        </trans-unit>
        <trans-unit id="7b75d037b74e15737174f6227f779149fb0c124b" translate="yes" xml:space="preserve">
          <source>bool QSaveFile::commit()</source>
          <target state="translated">부울 QSaveFile :: commit ()</target>
        </trans-unit>
        <trans-unit id="2b87ede38a66c1df797dce5cd3a716660ca7337a" translate="yes" xml:space="preserve">
          <source>bool QSaveFile::directWriteFallback() const</source>
          <target state="translated">bool QSaveFile :: directWriteFallback () const</target>
        </trans-unit>
        <trans-unit id="07730b0098d92548e593d08348b68a5d077ae6d9" translate="yes" xml:space="preserve">
          <source>bool QScopedPointer::isNull() const</source>
          <target state="translated">bool QScopedPointer :: isNull () const</target>
        </trans-unit>
        <trans-unit id="e7c01251160f6e5fb59982423694dc6cd70d3f30" translate="yes" xml:space="preserve">
          <source>bool QScopedPointer::operator bool() const</source>
          <target state="translated">bool QScopedPointer :: 연산자 bool () const</target>
        </trans-unit>
        <trans-unit id="6d7f2aa3575c736d4d894393cdc8b0ed6f1b12f6" translate="yes" xml:space="preserve">
          <source>bool QScopedPointer::operator!() const</source>
          <target state="translated">bool QScopedPointer :: operator! () const</target>
        </trans-unit>
        <trans-unit id="863ab5744c5f0e566aaa835b77c7f2e96cf04f09" translate="yes" xml:space="preserve">
          <source>bool QScopedPointer::operator!=(</source>
          <target state="translated">bool QScopedPointer :: operator! = (</target>
        </trans-unit>
        <trans-unit id="b40fecf8d4bf44b03faddcdb32c6451bc51aef25" translate="yes" xml:space="preserve">
          <source>bool QScopedPointer::operator!=(const &lt;a href=&quot;qscopedpointer#QScopedPointer&quot;&gt;QScopedPointer&lt;/a&gt;&amp;lt;T, Cleanup&amp;gt; &amp;amp;</source>
          <target state="translated">bool QScopedPointer :: operator! = (const &lt;a href=&quot;qscopedpointer#QScopedPointer&quot;&gt;QScopedPointer&lt;/a&gt; &amp;lt;T, 정리&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f86f4adb914280af5c62a49bd2b4568179be73ac" translate="yes" xml:space="preserve">
          <source>bool QScopedPointer::operator==(</source>
          <target state="translated">부울 QScopedPointer :: operator == (</target>
        </trans-unit>
        <trans-unit id="e37e210c0c0ecf89bb0ab0695c9f2b5a88799e95" translate="yes" xml:space="preserve">
          <source>bool QScopedPointer::operator==(const &lt;a href=&quot;qscopedpointer#QScopedPointer&quot;&gt;QScopedPointer&lt;/a&gt;&amp;lt;T, Cleanup&amp;gt; &amp;amp;</source>
          <target state="translated">bool QScopedPointer :: operator == (const &lt;a href=&quot;qscopedpointer#QScopedPointer&quot;&gt;QScopedPointer&lt;/a&gt; &amp;lt;T, 정리&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2252c15ac83b54bf745c67520131dfb1fca8d739" translate="yes" xml:space="preserve">
          <source>bool QScreen::isLandscape(&lt;a href=&quot;qt#ScreenOrientation-enum&quot;&gt;Qt::ScreenOrientation&lt;/a&gt;</source>
          <target state="translated">부울 QScreen :: isLandscape ( &lt;a href=&quot;qt#ScreenOrientation-enum&quot;&gt;Qt :: ScreenOrientation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f90ece58eb3210fe47fbe322a225e7c906aa885" translate="yes" xml:space="preserve">
          <source>bool QScreen::isPortrait(&lt;a href=&quot;qt#ScreenOrientation-enum&quot;&gt;Qt::ScreenOrientation&lt;/a&gt;</source>
          <target state="translated">부울 QScreen :: isPortrait ( &lt;a href=&quot;qt#ScreenOrientation-enum&quot;&gt;Qt :: ScreenOrientation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2a78d20200f0eb168bc84b2ca7060a629202b56b" translate="yes" xml:space="preserve">
          <source>bool QScroller::handleInput(&lt;a href=&quot;qscroller#Input-enum&quot;&gt;QScroller::Input&lt;/a&gt;</source>
          <target state="translated">bool QScroller :: handleInput ( &lt;a href=&quot;qscroller#Input-enum&quot;&gt;QScroller :: 입력&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="811e143007878c003e3ef145b3f5923b0af50a4f" translate="yes" xml:space="preserve">
          <source>bool QScrollerProperties::operator!=(const &lt;a href=&quot;qscrollerproperties#QScrollerProperties&quot;&gt;QScrollerProperties&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QScrollerProperties :: operator! = (const &lt;a href=&quot;qscrollerproperties#QScrollerProperties&quot;&gt;QScroller 속성&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b8b1ef472fe1c4b0c28969bb92fdb7c2977fb3d1" translate="yes" xml:space="preserve">
          <source>bool QScrollerProperties::operator==(const &lt;a href=&quot;qscrollerproperties#QScrollerProperties&quot;&gt;QScrollerProperties&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QScrollerProperties :: operator == (const &lt;a href=&quot;qscrollerproperties#QScrollerProperties&quot;&gt;QScroller 속성&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="67474f126d6c3f1240651d34a8a2cafb6e0210e6" translate="yes" xml:space="preserve">
          <source>bool QSctpSocket::isInDatagramMode() const</source>
          <target state="translated">bool QSctpSocket :: isInDatagramMode () const</target>
        </trans-unit>
        <trans-unit id="fec01e528689ed463bcd376a8acac156a46cc0f0" translate="yes" xml:space="preserve">
          <source>bool QSctpSocket::writeDatagram(const &lt;a href=&quot;qnetworkdatagram&quot;&gt;QNetworkDatagram&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSctpSocket :: writeDatagram (const &lt;a href=&quot;qnetworkdatagram&quot;&gt;QNetworkDatagram&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4dd02391214253a143f953ee320bab6e7c932462" translate="yes" xml:space="preserve">
          <source>bool QScxmlCppDataModel::inState(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QScxmlCppDataModel :: inState (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="89e245b35f85fba91f18fc35f79c5fefffd3c9cf" translate="yes" xml:space="preserve">
          <source>bool QScxmlError::isValid() const</source>
          <target state="translated">bool QScxmlError :: isValid () const</target>
        </trans-unit>
        <trans-unit id="89c7ca65d658f7241888656e63d0e15756d79fc8" translate="yes" xml:space="preserve">
          <source>bool QScxmlEvent::isErrorEvent() const</source>
          <target state="translated">부울 QScxmlEvent :: isErrorEvent () const</target>
        </trans-unit>
        <trans-unit id="80d3bb9ded9dd5b87631e7ff59ec29c4e06f88ae" translate="yes" xml:space="preserve">
          <source>bool QScxmlStateMachine::isActive(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QScxmlStateMachine :: isActive (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e54ba4be19b41ccdba589dab03f23d3e2c1f57d8" translate="yes" xml:space="preserve">
          <source>bool QScxmlStateMachine::isDispatchableTarget(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QScxmlStateMachine :: isDispatchableTarget (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="21ff03083676299e2996745ee8f7b30f83f95f7a" translate="yes" xml:space="preserve">
          <source>bool QScxmlStateMachine::isRunning() const</source>
          <target state="translated">bool QScxmlStateMachine :: isRunning () const</target>
        </trans-unit>
        <trans-unit id="1091a8f0d0a4043f09c5099c80c0f429210ac294" translate="yes" xml:space="preserve">
          <source>bool QSemaphore::tryAcquire(int</source>
          <target state="translated">부울 QSemaphore :: tryAcquire (int</target>
        </trans-unit>
        <trans-unit id="a6d1fc1b1e557821dd5429abcbecddef165fc656" translate="yes" xml:space="preserve">
          <source>bool QSensor::connectToBackend()</source>
          <target state="translated">bool QSensor :: connectToBackend ()</target>
        </trans-unit>
        <trans-unit id="1a80be92e89a98d01424e83b470ba6917595b427" translate="yes" xml:space="preserve">
          <source>bool QSensor::isFeatureSupported(&lt;a href=&quot;qsensor#Feature-enum&quot;&gt;QSensor::Feature&lt;/a&gt;</source>
          <target state="translated">bool QSensor :: isFeatureSupported (QSensor &lt;a href=&quot;qsensor#Feature-enum&quot;&gt;:: 기능&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2f37b794a005c8680b3f60078330a74fdc3d8c22" translate="yes" xml:space="preserve">
          <source>bool QSensorGesture::isActive()</source>
          <target state="translated">bool QSensorGesture :: isActive ()</target>
        </trans-unit>
        <trans-unit id="1d6f3469ea36632bececf7df3185f247bd7a02c2" translate="yes" xml:space="preserve">
          <source>bool QSensorGestureManager::registerSensorGestureRecognizer(&lt;a href=&quot;qsensorgesturerecognizer&quot;&gt;QSensorGestureRecognizer&lt;/a&gt; *</source>
          <target state="translated">bool QSensorGestureManager :: registerSensorGestureRecognizer ( &lt;a href=&quot;qsensorgesturerecognizer&quot;&gt;QSensorGestureRecognizer&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="4781a16f5e8cadd6b30e5aeaaa6960ad033ec4de" translate="yes" xml:space="preserve">
          <source>bool QSequentialIterable::canReverseIterate() const</source>
          <target state="translated">bool QSequentialIterable :: canReverseIterate () const</target>
        </trans-unit>
        <trans-unit id="1f248db994ff9ad1a40fb57897a250ab9b4a457d" translate="yes" xml:space="preserve">
          <source>bool QSerialPort::clear(&lt;a href=&quot;qserialport#Direction-enum&quot;&gt;QSerialPort::Directions&lt;/a&gt;</source>
          <target state="translated">bool QSerialPort :: clear ( &lt;a href=&quot;qserialport#Direction-enum&quot;&gt;QSerialPort :: 방향&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="af05c4d3d17e7b9bc4cc985b6fac27558fb81eda" translate="yes" xml:space="preserve">
          <source>bool QSerialPort::flush()</source>
          <target state="translated">부울 QSerialPort :: flush ()</target>
        </trans-unit>
        <trans-unit id="ae4c9c22bf335288b86c08b52a32e4f8c0d4d6e9" translate="yes" xml:space="preserve">
          <source>bool QSerialPort::sendBreak(int</source>
          <target state="translated">bool QSerialPort :: sendBreak (int</target>
        </trans-unit>
        <trans-unit id="f2ca7d7fd51e3a08ef2a9d353bae21233c2340fd" translate="yes" xml:space="preserve">
          <source>bool QSerialPortInfo::hasProductIdentifier() const</source>
          <target state="translated">bool QSerialPortInfo :: hasProductIdentifier () const</target>
        </trans-unit>
        <trans-unit id="23a3b60e6aecf21d0bb4b268b50285feb25db2ac" translate="yes" xml:space="preserve">
          <source>bool QSerialPortInfo::hasVendorIdentifier() const</source>
          <target state="translated">bool QSerialPortInfo :: hasVendorIdentifier () const</target>
        </trans-unit>
        <trans-unit id="ac22abb9587e97c01491ed97e2add4544988683c" translate="yes" xml:space="preserve">
          <source>bool QSerialPortInfo::isBusy() const</source>
          <target state="translated">bool QSerialPortInfo :: isBusy () const</target>
        </trans-unit>
        <trans-unit id="b74b481d6259f9cf1e468c18ec9daff964fbc8cd" translate="yes" xml:space="preserve">
          <source>bool QSerialPortInfo::isNull() const</source>
          <target state="translated">bool QSerialPortInfo :: isNull () const</target>
        </trans-unit>
        <trans-unit id="d6f65eff7b133af288f2e6a66074a37b550e5864" translate="yes" xml:space="preserve">
          <source>bool QSessionManager::allowsErrorInteraction()</source>
          <target state="translated">bool QSessionManager :: allowsErrorInteraction ()</target>
        </trans-unit>
        <trans-unit id="32fb71d5dd47a7d705c70c2fed689cf102083b5b" translate="yes" xml:space="preserve">
          <source>bool QSessionManager::allowsInteraction()</source>
          <target state="translated">bool QSessionManager :: allowsInteraction ()</target>
        </trans-unit>
        <trans-unit id="4b925f8444df387d0e555d980899d32e13640ce5" translate="yes" xml:space="preserve">
          <source>bool QSessionManager::isPhase2() const</source>
          <target state="translated">bool QSessionManager :: isPhase2 () const</target>
        </trans-unit>
        <trans-unit id="aed107b95b3f559441525519a9c27b3bbf30fbdb" translate="yes" xml:space="preserve">
          <source>bool QSet::contains(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">부울 QSet :: 포함 (const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="18df502dfae32180b889f70467c3c53fe093a3ea" translate="yes" xml:space="preserve">
          <source>bool QSet::contains(const T &amp;amp;</source>
          <target state="translated">bool QSet :: 포함 (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a88640d133f4b960a6c874d93eadfcb2fd81c82f" translate="yes" xml:space="preserve">
          <source>bool QSet::empty() const</source>
          <target state="translated">bool QSet :: empty () const</target>
        </trans-unit>
        <trans-unit id="c399429b7eddee6477571a4b40717156eb34a5a1" translate="yes" xml:space="preserve">
          <source>bool QSet::intersects(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QSet :: 교차 (const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f6bddc06e839f761c6b789482970da2550f3e0a2" translate="yes" xml:space="preserve">
          <source>bool QSet::isEmpty() const</source>
          <target state="translated">bool QSet :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="1df748f22ae3f2275368cc740ec9c93ed7281eb6" translate="yes" xml:space="preserve">
          <source>bool QSet::operator!=(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QSet :: operator! = (const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1927321e0219373e5a3c6f593985d49a326c262b" translate="yes" xml:space="preserve">
          <source>bool QSet::operator==(const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">부울 QSet :: 연산자 == (const &lt;a href=&quot;qset#QSet&quot;&gt;QSet&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4463532c77ff38daf66534fa4d5e338608da3299" translate="yes" xml:space="preserve">
          <source>bool QSet::remove(const T &amp;amp;</source>
          <target state="translated">bool QSet :: 제거 (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6a2ce49d8e5f12bec031aad65b154f7709f07e06" translate="yes" xml:space="preserve">
          <source>bool QSetIterator::findNext(const T &amp;amp;</source>
          <target state="translated">부울 QSetIterator :: findNext (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2cbf7afbb43bfcd0f8650016f47e35f55c6c468e" translate="yes" xml:space="preserve">
          <source>bool QSetIterator::findPrevious(const T &amp;amp;</source>
          <target state="translated">bool QSetIterator :: find 이전 (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="810e6ff8764dcb49b63e153eeb7b57f5e781d63c" translate="yes" xml:space="preserve">
          <source>bool QSetIterator::hasNext() const</source>
          <target state="translated">bool QSetIterator :: hasNext () const</target>
        </trans-unit>
        <trans-unit id="e1478063c5e5a3a4a7df5237223ef42f8024850d" translate="yes" xml:space="preserve">
          <source>bool QSetIterator::hasPrevious() const</source>
          <target state="translated">bool QSetIterator :: hasPrevious () const</target>
        </trans-unit>
        <trans-unit id="308d947da4afabd75767eaccc94025a84de964b2" translate="yes" xml:space="preserve">
          <source>bool QSettings::contains(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSettings :: contains (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e6e47d23fdc56d6ffd3f86bb5cd4441dd417c70a" translate="yes" xml:space="preserve">
          <source>bool QSettings::fallbacksEnabled() const</source>
          <target state="translated">bool QSettings :: fallbacksEnabled () const</target>
        </trans-unit>
        <trans-unit id="d34e23abf0c216f0735ad635e1b132da00e984cf" translate="yes" xml:space="preserve">
          <source>bool QSettings::isAtomicSyncRequired() const</source>
          <target state="translated">bool QSettings :: isAtomicSyncRequired () const</target>
        </trans-unit>
        <trans-unit id="4b2ee2c06a57898666f73cf2f4c9601d17db9e6a" translate="yes" xml:space="preserve">
          <source>bool QSettings::isWritable() const</source>
          <target state="translated">bool QSettings :: isWritable () const</target>
        </trans-unit>
        <trans-unit id="eb2460082baa2b11a18d6f3d3001c64620bd434b" translate="yes" xml:space="preserve">
          <source>bool QSharedDataPointer::operator!() const</source>
          <target state="translated">bool QSharedDataPointer :: operator! () const</target>
        </trans-unit>
        <trans-unit id="07c081935b6087f2c51c840eb9d362c0b0354637" translate="yes" xml:space="preserve">
          <source>bool QSharedDataPointer::operator!=(const &lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QSharedDataPointer :: operator! = (const &lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0c1a1e6a7bc7015c8500117cd4975425232ee997" translate="yes" xml:space="preserve">
          <source>bool QSharedDataPointer::operator==(const &lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QSharedDataPointer :: operator == (const &lt;a href=&quot;qshareddatapointer#QSharedDataPointer&quot;&gt;QSharedDataPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e62a80d8d5586b0224c53d29761d57e887e1cee0" translate="yes" xml:space="preserve">
          <source>bool QSharedMemory::attach(&lt;a href=&quot;qsharedmemory#AccessMode-enum&quot;&gt;QSharedMemory::AccessMode&lt;/a&gt;</source>
          <target state="translated">bool QSharedMemory :: attach ( &lt;a href=&quot;qsharedmemory#AccessMode-enum&quot;&gt;QSharedMemory :: 액세스 모드&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b7f9f1434b40e11bea0e30e86a332ea268eb990" translate="yes" xml:space="preserve">
          <source>bool QSharedMemory::create(int</source>
          <target state="translated">bool QSharedMemory :: create (int</target>
        </trans-unit>
        <trans-unit id="a956c55302c29bbbe86205acad9af9fb87bbdcff" translate="yes" xml:space="preserve">
          <source>bool QSharedMemory::detach()</source>
          <target state="translated">bool QSharedMemory :: detach ()</target>
        </trans-unit>
        <trans-unit id="cb7c8fcea51657f40f6d92d76c340a6314f70cb3" translate="yes" xml:space="preserve">
          <source>bool QSharedMemory::isAttached() const</source>
          <target state="translated">bool QSharedMemory :: isAttached () const</target>
        </trans-unit>
        <trans-unit id="9f6f67d8440630efbb458e0066e29ecee505c0e0" translate="yes" xml:space="preserve">
          <source>bool QSharedMemory::lock()</source>
          <target state="translated">bool QSharedMemory :: lock ()</target>
        </trans-unit>
        <trans-unit id="7cbb8b330af9f71c1e20004e49ed24abcfa67e31" translate="yes" xml:space="preserve">
          <source>bool QSharedMemory::unlock()</source>
          <target state="translated">bool QSharedMemory :: unlock ()</target>
        </trans-unit>
        <trans-unit id="98693e78f9e0d34d38fba58df20ed7f136da9e84" translate="yes" xml:space="preserve">
          <source>bool QSharedPointer::isNull() const</source>
          <target state="translated">bool QSharedPointer :: isNull () const</target>
        </trans-unit>
        <trans-unit id="d2db57c9fad8c3f33882fd1750c5cb88a3a94723" translate="yes" xml:space="preserve">
          <source>bool QSharedPointer::operator bool() const</source>
          <target state="translated">bool QSharedPointer :: 연산자 bool () const</target>
        </trans-unit>
        <trans-unit id="76d0f6a9a9462b109ec9fd9615eaae34bd1760a3" translate="yes" xml:space="preserve">
          <source>bool QSharedPointer::operator!() const</source>
          <target state="translated">bool QSharedPointer :: operator! () const</target>
        </trans-unit>
        <trans-unit id="9a41110490289895907dc49f689698b5ecd4d1d1" translate="yes" xml:space="preserve">
          <source>bool QSharedPointer::operator!=(</source>
          <target state="translated">bool QSharedPointer :: 연산자! = (</target>
        </trans-unit>
        <trans-unit id="f27aa93bc3cbf7157f79785deb45f68a8c5053c5" translate="yes" xml:space="preserve">
          <source>bool QSharedPointer::operator!=(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QSharedPointer :: operator! = (const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e4021f2acad2467f38c295f3b716cf6df03be905" translate="yes" xml:space="preserve">
          <source>bool QSharedPointer::operator!=(const T *</source>
          <target state="translated">bool QSharedPointer :: operator! = (const T *</target>
        </trans-unit>
        <trans-unit id="3111bff84d0274cfbf0266dc40f1611166f8a7a7" translate="yes" xml:space="preserve">
          <source>bool QSharedPointer::operator==(</source>
          <target state="translated">부울 QSharedPointer :: operator == (</target>
        </trans-unit>
        <trans-unit id="8ab7555a4f31a019486336cf9f4c3ad4971d99f2" translate="yes" xml:space="preserve">
          <source>bool QSharedPointer::operator==(const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QSharedPointer :: operator == (const &lt;a href=&quot;qsharedpointer#QSharedPointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0de29a123cafedfc79032498d6e081bf92a84995" translate="yes" xml:space="preserve">
          <source>bool QSharedPointer::operator==(const T *</source>
          <target state="translated">부울 QSharedPointer :: operator == (const T *</target>
        </trans-unit>
        <trans-unit id="6eae6ad8ea378913c1e0bedf913302f5e857f967" translate="yes" xml:space="preserve">
          <source>bool QShortcutEvent::isAmbiguous() const</source>
          <target state="translated">bool QShortcutEvent :: isAmbiguous () const</target>
        </trans-unit>
        <trans-unit id="cb63ca72e717c140f485ad2370bff321ba172d35" translate="yes" xml:space="preserve">
          <source>bool QSignalSpy::isValid() const</source>
          <target state="translated">bool QSignalSpy :: isValid () const</target>
        </trans-unit>
        <trans-unit id="59d3cb94e9d75d36a705daebfa85f8d6ca16baa5" translate="yes" xml:space="preserve">
          <source>bool QSignalSpy::wait(int</source>
          <target state="translated">bool QSignalSpy :: wait (int</target>
        </trans-unit>
        <trans-unit id="f3b097cbc4d8173d139c02244d834c7c64f788be" translate="yes" xml:space="preserve">
          <source>bool QSize::isEmpty() const</source>
          <target state="translated">bool QSize :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="80d48e71ffc25bfcc5c2ad201951e16dba879435" translate="yes" xml:space="preserve">
          <source>bool QSize::isNull() const</source>
          <target state="translated">bool QSize :: isNull () const</target>
        </trans-unit>
        <trans-unit id="7a71472a8ea0c213d9031f75fe81f597b3fc9044" translate="yes" xml:space="preserve">
          <source>bool QSize::isValid() const</source>
          <target state="translated">bool QSize :: isValid () const</target>
        </trans-unit>
        <trans-unit id="364f4b31f614b266dbfce2a0e144a247af95617b" translate="yes" xml:space="preserve">
          <source>bool QSize::operator!=(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSize :: operator! = (const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="de8625e2fc9850141d0f1ed1d9e904a208e9fab2" translate="yes" xml:space="preserve">
          <source>bool QSize::operator==(const &lt;a href=&quot;qsize#QSize&quot;&gt;QSize&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSize :: operator == ( &lt;a href=&quot;qsize#QSize&quot;&gt;상수 QSize&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6f22326b3904d50fd043f1642a83c9dda8fc3611" translate="yes" xml:space="preserve">
          <source>bool QSizeF::isEmpty() const</source>
          <target state="translated">bool QSizeF :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="2589b4e71dca3c23f5eab45a90f8ec1b1f93d26b" translate="yes" xml:space="preserve">
          <source>bool QSizeF::isNull() const</source>
          <target state="translated">bool QSizeF :: isNull () const</target>
        </trans-unit>
        <trans-unit id="8c325c2c5a7a95dd292a57a4b25d658f9572ae72" translate="yes" xml:space="preserve">
          <source>bool QSizeF::isValid() const</source>
          <target state="translated">bool QSizeF :: isValid () const</target>
        </trans-unit>
        <trans-unit id="8ca571d67fbd581c2bbcea4dfcd6909b909fcd0f" translate="yes" xml:space="preserve">
          <source>bool QSizeF::operator!=(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSizeF :: 연산자! = (const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c83afde1ef2f8949f3fa3b3302211a09b5a87321" translate="yes" xml:space="preserve">
          <source>bool QSizeF::operator==(const &lt;a href=&quot;qsizef#QSizeF&quot;&gt;QSizeF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSizeF :: operator == ( &lt;a href=&quot;qsizef#QSizeF&quot;&gt;상수 QSizeF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="48fa02b5ad81b48a90b8182c3be9a6217d4cf661" translate="yes" xml:space="preserve">
          <source>bool QSizePolicy::hasHeightForWidth() const</source>
          <target state="translated">bool QSizePolicy :: hasHeightForWidth () const</target>
        </trans-unit>
        <trans-unit id="908a2408e1583981c818a84a3be9a3bd87303673" translate="yes" xml:space="preserve">
          <source>bool QSizePolicy::hasWidthForHeight() const</source>
          <target state="translated">bool QSizePolicy :: hasWidthForHeight () const</target>
        </trans-unit>
        <trans-unit id="dddaed36bffa71319d2b285e91de4c0a2da23211" translate="yes" xml:space="preserve">
          <source>bool QSizePolicy::operator!=(const &lt;a href=&quot;qsizepolicy#QSizePolicy&quot;&gt;QSizePolicy&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSizePolicy :: operator! = (const &lt;a href=&quot;qsizepolicy#QSizePolicy&quot;&gt;QSizePolicy&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b434b96c56253ef93ad3d776f791dab0aeeeb6ea" translate="yes" xml:space="preserve">
          <source>bool QSizePolicy::operator==(const &lt;a href=&quot;qsizepolicy#QSizePolicy&quot;&gt;QSizePolicy&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSizePolicy :: operator == (const &lt;a href=&quot;qsizepolicy#QSizePolicy&quot;&gt;QSizePolicy&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a229bcfdabbea0a92c6345f49f5b8958cce68d06" translate="yes" xml:space="preserve">
          <source>bool QSizePolicy::retainSizeWhenHidden() const</source>
          <target state="translated">bool QSizePolicy :: retainSizeWhenHidden () const</target>
        </trans-unit>
        <trans-unit id="cec7e3d15a8e34ea7d6a0a3d13fdb9e97c18f052" translate="yes" xml:space="preserve">
          <source>bool QSkeletonLoader::isCreateJointsEnabled() const</source>
          <target state="translated">bool QSkeletonLoader :: isCreateJointsEnabled () const</target>
        </trans-unit>
        <trans-unit id="6be75a92fa796aea1371ee325b3b5e06ef939414" translate="yes" xml:space="preserve">
          <source>bool QSkyboxEntity::isGammaCorrectEnabled() const</source>
          <target state="translated">bool QSkyboxEntity :: isGammaCorrectEnabled () const</target>
        </trans-unit>
        <trans-unit id="5c24cd878363bc35ae23d4ae0f5aee43a006632c" translate="yes" xml:space="preserve">
          <source>bool QSocketNotifier::isEnabled() const</source>
          <target state="translated">bool QSocketNotifier :: isEnabled () const</target>
        </trans-unit>
        <trans-unit id="c717a0322d647d28ff77e5f9c209b540aa37915a" translate="yes" xml:space="preserve">
          <source>bool QSound::isFinished() const</source>
          <target state="translated">bool QSound :: isFinished () const</target>
        </trans-unit>
        <trans-unit id="f6416184cdaca99a4a80acbd0cb31a75d84c215f" translate="yes" xml:space="preserve">
          <source>bool QSoundEffect::isLoaded() const</source>
          <target state="translated">bool QSoundEffect :: isLoaded () const</target>
        </trans-unit>
        <trans-unit id="b77c202d6e9d0608a71482a300aceedf65dca2b0" translate="yes" xml:space="preserve">
          <source>bool QSoundEffect::isMuted() const</source>
          <target state="translated">bool QSoundEffect :: isMuted () const</target>
        </trans-unit>
        <trans-unit id="2caae05cda39f550a688c503ffd8a1cf9c5ea9c1" translate="yes" xml:space="preserve">
          <source>bool QSoundEffect::isPlaying() const</source>
          <target state="translated">bool QSoundEffect :: isPlaying () const</target>
        </trans-unit>
        <trans-unit id="b4aede79f5e696a8c6960e28cd1fbc3612a99d79" translate="yes" xml:space="preserve">
          <source>bool QSourceLocation::isNull() const</source>
          <target state="translated">bool QSourceLocation :: isNull () const</target>
        </trans-unit>
        <trans-unit id="14eebe5db889d986d85b01b66a88137385adbc6a" translate="yes" xml:space="preserve">
          <source>bool QSourceLocation::operator!=(const &lt;a href=&quot;qsourcelocation#QSourceLocation&quot;&gt;QSourceLocation&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSourceLocation :: operator! = (const &lt;a href=&quot;qsourcelocation#QSourceLocation&quot;&gt;QSourceLocation&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7a412dfb26cfb224793851f588f2258f98b9fd9e" translate="yes" xml:space="preserve">
          <source>bool QSourceLocation::operator==(const &lt;a href=&quot;qsourcelocation#QSourceLocation&quot;&gt;QSourceLocation&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QSourceLocation :: operator == (const &lt;a href=&quot;qsourcelocation#QSourceLocation&quot;&gt;QSourceLocation&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="748cdb2c1fd63fd4c43b03c74d77ba91460ccc01" translate="yes" xml:space="preserve">
          <source>bool QSplitter::isCollapsible(int</source>
          <target state="translated">bool QSplitter :: isCollapsible (int</target>
        </trans-unit>
        <trans-unit id="23e6c8ff887bfda2db9d7a9fee5d10eb708ad4c7" translate="yes" xml:space="preserve">
          <source>bool QSplitter::restoreState(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSplitter :: restoreState (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c0cf469690c677a3004ecc25885cde39e0ddbb24" translate="yes" xml:space="preserve">
          <source>bool QSplitterHandle::opaqueResize() const</source>
          <target state="translated">bool QSplitterHandle :: opaqueResize () const</target>
        </trans-unit>
        <trans-unit id="6fd7d89f74ba0823c9a473486f4b9922c1a5bdd1" translate="yes" xml:space="preserve">
          <source>bool QSqlDatabase::commit()</source>
          <target state="translated">bool QSqlDatabase :: commit ()</target>
        </trans-unit>
        <trans-unit id="22f635929a85127d96a8e34ff62957b8dc047a1e" translate="yes" xml:space="preserve">
          <source>bool QSqlDatabase::isOpen() const</source>
          <target state="translated">bool QSqlDatabase :: isOpen () const</target>
        </trans-unit>
        <trans-unit id="d9b20253173b175d93a5f13fc818223d02496a2a" translate="yes" xml:space="preserve">
          <source>bool QSqlDatabase::isOpenError() const</source>
          <target state="translated">bool QSqlDatabase :: isOpenError () const</target>
        </trans-unit>
        <trans-unit id="05c2c353d807f2faa8e2031f5485ac90810f5a99" translate="yes" xml:space="preserve">
          <source>bool QSqlDatabase::isValid() const</source>
          <target state="translated">bool QSqlDatabase :: isValid () const</target>
        </trans-unit>
        <trans-unit id="5251389941ed4000dde062869e45b8b28d6187f2" translate="yes" xml:space="preserve">
          <source>bool QSqlDatabase::open()</source>
          <target state="translated">부울 QSqlDatabase :: open ()</target>
        </trans-unit>
        <trans-unit id="40404560ab1260057b43f8eff47a013a994de793" translate="yes" xml:space="preserve">
          <source>bool QSqlDatabase::open(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSqlDatabase :: open (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="12c2b5433e3c74c68cbe447defb2d9a00629fdf2" translate="yes" xml:space="preserve">
          <source>bool QSqlDatabase::rollback()</source>
          <target state="translated">bool QSqlDatabase :: rollback ()</target>
        </trans-unit>
        <trans-unit id="ef51bb6b375a5e00f0e3388088eb81bfcc162347" translate="yes" xml:space="preserve">
          <source>bool QSqlDatabase::transaction()</source>
          <target state="translated">부울 QSqlDatabase :: transaction ()</target>
        </trans-unit>
        <trans-unit id="dde979490bea49de33bfe57613dc639da9e4c5b5" translate="yes" xml:space="preserve">
          <source>bool QSqlDriver::isOpenError() const</source>
          <target state="translated">bool QSqlDriver :: isOpenError () const</target>
        </trans-unit>
        <trans-unit id="40fb8f9e14b2d204d0adcab0dd4821d8af41a5ed" translate="yes" xml:space="preserve">
          <source>bool QSqlError::isValid() const</source>
          <target state="translated">bool QSqlError :: isValid () const</target>
        </trans-unit>
        <trans-unit id="c4b85e2b732e63430056dd414fea92935d0485ad" translate="yes" xml:space="preserve">
          <source>bool QSqlError::operator!=(const &lt;a href=&quot;https://doc.qt.io/qt-5.13/qsqlerror-obsolete.html#QSqlError&quot;&gt;QSqlError&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSqlError :: operator! = (const &lt;a href=&quot;https://doc.qt.io/qt-5.13/qsqlerror-obsolete.html#QSqlError&quot;&gt;QSqlError&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="143232ab28313c58ba4ed5cf0ca8758a61fce316" translate="yes" xml:space="preserve">
          <source>bool QSqlError::operator!=(const &lt;a href=&quot;https://doc.qt.io/qt-5.15/qsqlerror-obsolete.html#QSqlError&quot;&gt;QSqlError&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSqlError::operator!=(const &lt;a href=&quot;https://doc.qt.io/qt-5.15/qsqlerror-obsolete.html#QSqlError&quot;&gt;QSqlError&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="04e41b74167c1aa8584579ce18f9c7339bb99d8a" translate="yes" xml:space="preserve">
          <source>bool QSqlError::operator==(const &lt;a href=&quot;https://doc.qt.io/qt-5.13/qsqlerror-obsolete.html#QSqlError&quot;&gt;QSqlError&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QSqlError :: operator == (const &lt;a href=&quot;https://doc.qt.io/qt-5.13/qsqlerror-obsolete.html#QSqlError&quot;&gt;QSqlError&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bdaae71b5057238d72ef8af941e7d90ab20e7775" translate="yes" xml:space="preserve">
          <source>bool QSqlError::operator==(const &lt;a href=&quot;https://doc.qt.io/qt-5.15/qsqlerror-obsolete.html#QSqlError&quot;&gt;QSqlError&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSqlError::operator==(const &lt;a href=&quot;https://doc.qt.io/qt-5.15/qsqlerror-obsolete.html#QSqlError&quot;&gt;QSqlError&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2501b75eef6a469c59072f64b8ba86e86f8756ba" translate="yes" xml:space="preserve">
          <source>bool QSqlField::isAutoValue() const</source>
          <target state="translated">부울 QSqlField :: isAutoValue () const</target>
        </trans-unit>
        <trans-unit id="7fdb8436c18ad02b75bdd3ca616f44206a16cbe1" translate="yes" xml:space="preserve">
          <source>bool QSqlField::isGenerated() const</source>
          <target state="translated">bool QSqlField :: isGenerated () const</target>
        </trans-unit>
        <trans-unit id="122af51a2df825158d9856af5b5e8b6d5e8612e7" translate="yes" xml:space="preserve">
          <source>bool QSqlField::isNull() const</source>
          <target state="translated">bool QSqlField :: isNull () const</target>
        </trans-unit>
        <trans-unit id="f09ca375b3f3e042ad2f4f2d73880a9954c66b1e" translate="yes" xml:space="preserve">
          <source>bool QSqlField::isReadOnly() const</source>
          <target state="translated">bool QSqlField :: isReadOnly () const</target>
        </trans-unit>
        <trans-unit id="4d2b726688bfcb1ec77da66e14249c41c0409256" translate="yes" xml:space="preserve">
          <source>bool QSqlField::isValid() const</source>
          <target state="translated">bool QSqlField :: isValid () const</target>
        </trans-unit>
        <trans-unit id="fa87a94eb025d599d36327ec9cb71676d59c2b3f" translate="yes" xml:space="preserve">
          <source>bool QSqlField::operator!=(const &lt;a href=&quot;qsqlfield#QSqlField&quot;&gt;QSqlField&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSqlField :: operator! = (const &lt;a href=&quot;qsqlfield#QSqlField&quot;&gt;QSqlField&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e3eedfcfb765f546d6711525627297e574b518e0" translate="yes" xml:space="preserve">
          <source>bool QSqlField::operator==(const &lt;a href=&quot;qsqlfield#QSqlField&quot;&gt;QSqlField&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QSqlField :: operator == (const &lt;a href=&quot;qsqlfield#QSqlField&quot;&gt;QSqlField&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e87d4c7567ad8a1b3e7232333e6a17b915ea99cb" translate="yes" xml:space="preserve">
          <source>bool QSqlIndex::isDescending(int</source>
          <target state="translated">bool QSqlIndex :: isDescending (int</target>
        </trans-unit>
        <trans-unit id="016580928be27d18d736bc1f9ba7872642a625a2" translate="yes" xml:space="preserve">
          <source>bool QSqlQuery::exec()</source>
          <target state="translated">bool QSqlQuery :: exec ()</target>
        </trans-unit>
        <trans-unit id="971a8b92710c82c1a39eee63732c7e448f765189" translate="yes" xml:space="preserve">
          <source>bool QSqlQuery::exec(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSqlQuery :: exec (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c12e606484666af759b50bdba01b97a8f753c3fa" translate="yes" xml:space="preserve">
          <source>bool QSqlQuery::execBatch(&lt;a href=&quot;qsqlquery#BatchExecutionMode-enum&quot;&gt;QSqlQuery::BatchExecutionMode&lt;/a&gt;</source>
          <target state="translated">부울 QSqlQuery :: execBatch ( &lt;a href=&quot;qsqlquery#BatchExecutionMode-enum&quot;&gt;QSqlQuery :: BatchExecutionMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8ef51e10ad9f6be81cf23f293ff312e6686e60d0" translate="yes" xml:space="preserve">
          <source>bool QSqlQuery::first()</source>
          <target state="translated">bool QSqlQuery :: first ()</target>
        </trans-unit>
        <trans-unit id="48f9bf8094abd6d34096bb8a0936a7822e8ff736" translate="yes" xml:space="preserve">
          <source>bool QSqlQuery::isActive() const</source>
          <target state="translated">bool QSqlQuery :: isActive () const</target>
        </trans-unit>
        <trans-unit id="28259436daf6f1284a1c78ec8cb8a8e770b6df1e" translate="yes" xml:space="preserve">
          <source>bool QSqlQuery::isForwardOnly() const</source>
          <target state="translated">bool QSqlQuery :: isForwardOnly () const</target>
        </trans-unit>
        <trans-unit id="19acd8cf883409c7dd55a7f468230ba73446e17d" translate="yes" xml:space="preserve">
          <source>bool QSqlQuery::isNull(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSqlQuery :: isNull (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a6dd1eb3c5b7bd635910d252d77a5280dab0e34e" translate="yes" xml:space="preserve">
          <source>bool QSqlQuery::isNull(int</source>
          <target state="translated">bool QSqlQuery :: isNull (int</target>
        </trans-unit>
        <trans-unit id="b4053bba781b8d9f1d54b88ac353fc406d4a6d9b" translate="yes" xml:space="preserve">
          <source>bool QSqlQuery::isSelect() const</source>
          <target state="translated">bool QSqlQuery :: isSelect () const</target>
        </trans-unit>
        <trans-unit id="cfabbab6c79dc0630e6df6966f0413330a3fe578" translate="yes" xml:space="preserve">
          <source>bool QSqlQuery::isValid() const</source>
          <target state="translated">bool QSqlQuery :: isValid () const</target>
        </trans-unit>
        <trans-unit id="1e8ff8aadbb59666e7ca9ba0aebee29855d43f23" translate="yes" xml:space="preserve">
          <source>bool QSqlQuery::last()</source>
          <target state="translated">bool QSqlQuery :: last ()</target>
        </trans-unit>
        <trans-unit id="596738cf227aceaff203a969be38826ecf12b1e8" translate="yes" xml:space="preserve">
          <source>bool QSqlQuery::next()</source>
          <target state="translated">bool QSqlQuery :: next ()</target>
        </trans-unit>
        <trans-unit id="81d9bf609952902308b9d3cc7d4d91ee812847f4" translate="yes" xml:space="preserve">
          <source>bool QSqlQuery::nextResult()</source>
          <target state="translated">bool QSqlQuery :: nextResult ()</target>
        </trans-unit>
        <trans-unit id="46c32e50b5b454850069e12dd2724b87c315edf3" translate="yes" xml:space="preserve">
          <source>bool QSqlQuery::prepare(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSqlQuery :: prepare (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a0bb4aaea75d5a511df19b1f0a72b16d7747f29e" translate="yes" xml:space="preserve">
          <source>bool QSqlQuery::previous()</source>
          <target state="translated">bool QSqlQuery :: 이전 ()</target>
        </trans-unit>
        <trans-unit id="9ede56c79fef0d16354c1b056a70022111edf191" translate="yes" xml:space="preserve">
          <source>bool QSqlQuery::seek(int</source>
          <target state="translated">bool QSqlQuery :: seek (int</target>
        </trans-unit>
        <trans-unit id="09bf0bb177fbc0065311350c04acdbef8343da0d" translate="yes" xml:space="preserve">
          <source>bool QSqlRecord::contains(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSqlRecord :: contains (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c122665efa6b0255c073b056fe31d9175eb98789" translate="yes" xml:space="preserve">
          <source>bool QSqlRecord::isEmpty() const</source>
          <target state="translated">bool QSqlRecord :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="a66f9b2dea22f3f6d0be9f58c3a3a772747e1f2e" translate="yes" xml:space="preserve">
          <source>bool QSqlRecord::isGenerated(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSqlRecord :: isGenerated (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="675443612a41ea364ce76aa15fce24e7f63d3c96" translate="yes" xml:space="preserve">
          <source>bool QSqlRecord::isGenerated(int</source>
          <target state="translated">bool QSqlRecord :: isGenerated (int</target>
        </trans-unit>
        <trans-unit id="0e20b16ff891dc7bc8a3ac088a838f8949a2bd3e" translate="yes" xml:space="preserve">
          <source>bool QSqlRecord::isNull(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSqlRecord :: isNull (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="288aa79bb02e0bff1eb70d615ac8ea848031e1fb" translate="yes" xml:space="preserve">
          <source>bool QSqlRecord::isNull(int</source>
          <target state="translated">bool QSqlRecord :: isNull (int</target>
        </trans-unit>
        <trans-unit id="2339516ffb1cd7a2e6fe58ff54604e593a03dee7" translate="yes" xml:space="preserve">
          <source>bool QSqlRecord::operator!=(const &lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSqlRecord :: operator! = (const &lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="97a457cbe10e0cfe04dd2fbab243c0bc43474acb" translate="yes" xml:space="preserve">
          <source>bool QSqlRecord::operator==(const &lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QSqlRecord :: operator == (const &lt;a href=&quot;qsqlrecord#QSqlRecord&quot;&gt;QSqlRecord&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e7cf9f0d014fd1b6a1b36e7d1307ad70073016fa" translate="yes" xml:space="preserve">
          <source>bool QSqlRelation::isValid() const</source>
          <target state="translated">bool QSqlRelation :: isValid () const</target>
        </trans-unit>
        <trans-unit id="948f823d514a32b49713fddfb69a3f705f5c318b" translate="yes" xml:space="preserve">
          <source>bool QSqlTableModel::insertRecord(int</source>
          <target state="translated">부울 QSqlTableModel :: insertRecord (int</target>
        </trans-unit>
        <trans-unit id="b448eb08238a36163434b4a9951da62abd368d00" translate="yes" xml:space="preserve">
          <source>bool QSqlTableModel::isDirty() const</source>
          <target state="translated">bool QSqlTableModel :: isDirty () const</target>
        </trans-unit>
        <trans-unit id="305e3ecedc1e12b3169d67bb7c6c4fd1c9d7b5a0" translate="yes" xml:space="preserve">
          <source>bool QSqlTableModel::isDirty(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSqlTableModel :: isDirty (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1c686b63e2529f248e663e7e20e09f57b96c2f4c" translate="yes" xml:space="preserve">
          <source>bool QSqlTableModel::setRecord(int</source>
          <target state="translated">bool QSqlTableModel :: setRecord (int</target>
        </trans-unit>
        <trans-unit id="7ac5996495907937f82d56c981db6f32e12db185" translate="yes" xml:space="preserve">
          <source>bool QSslCertificate::isBlacklisted() const</source>
          <target state="translated">bool QSslCertificate :: isBlacklisted () const</target>
        </trans-unit>
        <trans-unit id="dbecff3b046298a8fe5460c5f4944e4cc75743cb" translate="yes" xml:space="preserve">
          <source>bool QSslCertificate::isNull() const</source>
          <target state="translated">bool QSslCertificate :: isNull () const</target>
        </trans-unit>
        <trans-unit id="f6aebdfd2fe804c498b5ca82f434f88e9e26620d" translate="yes" xml:space="preserve">
          <source>bool QSslCertificate::isSelfSigned() const</source>
          <target state="translated">bool QSslCertificate :: isSelfSigned () const</target>
        </trans-unit>
        <trans-unit id="04a68164c09681220ec2775c1ab2c1636794d968" translate="yes" xml:space="preserve">
          <source>bool QSslCertificate::operator!=(const &lt;a href=&quot;qsslcertificate#QSslCertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSslCertificate :: operator! = (const &lt;a href=&quot;qsslcertificate#QSslCertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="24bcbc503879a0de3fbfce97773b567ce67cbc49" translate="yes" xml:space="preserve">
          <source>bool QSslCertificate::operator==(const &lt;a href=&quot;qsslcertificate#QSslCertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QSslCertificate :: operator == (const &lt;a href=&quot;qsslcertificate#QSslCertificate&quot;&gt;QSslCertificate&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e71f8034d486c7f9a3ede04df78184f74ddcd9f8" translate="yes" xml:space="preserve">
          <source>bool QSslCertificateExtension::isCritical() const</source>
          <target state="translated">bool QSslCertificateExtension :: isCritical () const</target>
        </trans-unit>
        <trans-unit id="7b9039eb1344b58f927ce4c8137c4d83bc758743" translate="yes" xml:space="preserve">
          <source>bool QSslCertificateExtension::isSupported() const</source>
          <target state="translated">bool QSslCertificateExtension :: isSupported () const</target>
        </trans-unit>
        <trans-unit id="3f0add12efb653bfae8e3dc4b5bdbbc7a385ca03" translate="yes" xml:space="preserve">
          <source>bool QSslCipher::isNull() const</source>
          <target state="translated">bool QSslCipher :: isNull () const</target>
        </trans-unit>
        <trans-unit id="d2a542c2b0da5781dbce155637b095d9d0b1a42e" translate="yes" xml:space="preserve">
          <source>bool QSslCipher::operator!=(const &lt;a href=&quot;qsslcipher#QSslCipher&quot;&gt;QSslCipher&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSslCipher :: operator! = (const &lt;a href=&quot;qsslcipher#QSslCipher&quot;&gt;QSslCipher&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="732c4ea323e0237e8ee2e5ffd0c4ee1ae8cc0c3a" translate="yes" xml:space="preserve">
          <source>bool QSslCipher::operator==(const &lt;a href=&quot;qsslcipher#QSslCipher&quot;&gt;QSslCipher&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QSslCipher :: operator == (const &lt;a href=&quot;qsslcipher#QSslCipher&quot;&gt;QSslCipher&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="416a6958a2d1353ee03476a849dade8f2c898e07" translate="yes" xml:space="preserve">
          <source>bool QSslConfiguration::addCaCertificates(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSslConfiguration::addCaCertificates(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="01f82d0d66b8550baa34d4017d9d0217d30017ef" translate="yes" xml:space="preserve">
          <source>bool QSslConfiguration::dtlsCookieVerificationEnabled() const</source>
          <target state="translated">bool QSslConfiguration :: dtlsCookieVerificationEnabled () const</target>
        </trans-unit>
        <trans-unit id="e013844e90d65b7399de2b863366df87200d0a9b" translate="yes" xml:space="preserve">
          <source>bool QSslConfiguration::isNull() const</source>
          <target state="translated">bool QSslConfiguration :: isNull () const</target>
        </trans-unit>
        <trans-unit id="45fe7c290c4fd90343622c505f8ed869ccc99200" translate="yes" xml:space="preserve">
          <source>bool QSslConfiguration::ocspStaplingEnabled() const</source>
          <target state="translated">bool QSslConfiguration :: ocspStaplingEnabled () const</target>
        </trans-unit>
        <trans-unit id="758cb7ce1c409e6ab4735936c43b8003ba581fd8" translate="yes" xml:space="preserve">
          <source>bool QSslConfiguration::operator!=(const &lt;a href=&quot;qsslconfiguration#QSslConfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSslConfiguration :: operator! = (const &lt;a href=&quot;qsslconfiguration#QSslConfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="56a1ad4d67b4f8353c194551e8fc90c96a7fdd51" translate="yes" xml:space="preserve">
          <source>bool QSslConfiguration::operator==(const &lt;a href=&quot;qsslconfiguration#QSslConfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSslConfiguration :: operator == (const &lt;a href=&quot;qsslconfiguration#QSslConfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="34b1599bac9cff0c5fd0019e32ec8207e31e5556" translate="yes" xml:space="preserve">
          <source>bool QSslConfiguration::testSslOption(&lt;a href=&quot;qssl#SslOption-enum&quot;&gt;QSsl::SslOption&lt;/a&gt;</source>
          <target state="translated">부울 QSslConfiguration :: testSslOption ( &lt;a href=&quot;qssl#SslOption-enum&quot;&gt;QSsl :: SslOption&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc0a5624b72228dca9b516052e2c1e2063e772c2" translate="yes" xml:space="preserve">
          <source>bool QSslDiffieHellmanParameters::isEmpty() const</source>
          <target state="translated">bool QSslDiffieHellmanParameters :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="dd47a97661c1ffe3b383cc55f5101d3493936429" translate="yes" xml:space="preserve">
          <source>bool QSslDiffieHellmanParameters::isValid() const</source>
          <target state="translated">bool QSslDiffieHellmanParameters :: isValid () const</target>
        </trans-unit>
        <trans-unit id="609fe1fc216d60aef23bec7def6d0b4a507d0a12" translate="yes" xml:space="preserve">
          <source>bool QSslDiffieHellmanParameters::operator==(const &lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSslDiffieHellmanParameters :: operator == (const &lt;a href=&quot;qssldiffiehellmanparameters#QSslDiffieHellmanParameters&quot;&gt;QSslDiffieHellmanParameters&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9adc3a93ce90205a27192c1124f274a0f94881cd" translate="yes" xml:space="preserve">
          <source>bool QSslEllipticCurve::isTlsNamedCurve() const</source>
          <target state="translated">bool QSslEllipticCurve :: isTlsNamedCurve () const</target>
        </trans-unit>
        <trans-unit id="684fe0815fd0f43949665ac00da593611b0f3b0c" translate="yes" xml:space="preserve">
          <source>bool QSslEllipticCurve::isValid() const</source>
          <target state="translated">bool QSslEllipticCurve :: isValid () const</target>
        </trans-unit>
        <trans-unit id="f059c949b2e61fd3e6e40cb8d25031618a3c4747" translate="yes" xml:space="preserve">
          <source>bool QSslEllipticCurve::operator!=(&lt;a href=&quot;qsslellipticcurve#QSslEllipticCurve&quot;&gt;QSslEllipticCurve&lt;/a&gt;</source>
          <target state="translated">bool QSslEllipticCurve :: operator! = ( &lt;a href=&quot;qsslellipticcurve#QSslEllipticCurve&quot;&gt;QSslEllipticCurve&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cd902f97a7c80d156a88dcdc8af10ea1052a1f5e" translate="yes" xml:space="preserve">
          <source>bool QSslEllipticCurve::operator==(&lt;a href=&quot;qsslellipticcurve#QSslEllipticCurve&quot;&gt;QSslEllipticCurve&lt;/a&gt;</source>
          <target state="translated">bool QSslEllipticCurve :: operator == ( &lt;a href=&quot;qsslellipticcurve#QSslEllipticCurve&quot;&gt;QSslEllipticCurve&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e72f7842c692d6cec0c35d71b73c65399f2c2819" translate="yes" xml:space="preserve">
          <source>bool QSslError::operator!=(const &lt;a href=&quot;qsslerror#QSslError&quot;&gt;QSslError&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSslError :: operator! = (const &lt;a href=&quot;qsslerror#QSslError&quot;&gt;QSslError&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6e21413e49e2c7b4fd161881fb09a44437c00cfd" translate="yes" xml:space="preserve">
          <source>bool QSslError::operator==(const &lt;a href=&quot;qsslerror#QSslError&quot;&gt;QSslError&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSslError :: operator == (const &lt;a href=&quot;qsslerror#QSslError&quot;&gt;QSslError&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5f027a6b2564da7367955244ae4473ec2e81737f" translate="yes" xml:space="preserve">
          <source>bool QSslKey::isNull() const</source>
          <target state="translated">bool QSslKey :: isNull () const</target>
        </trans-unit>
        <trans-unit id="29cf757d25ebd0bd109e6d394f311b5f998be3f5" translate="yes" xml:space="preserve">
          <source>bool QSslKey::operator!=(const &lt;a href=&quot;qsslkey#QSslKey&quot;&gt;QSslKey&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSslKey :: operator! = (const &lt;a href=&quot;qsslkey#QSslKey&quot;&gt;QSslKey&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b39f2132138bc2c97706b59e6678920e507cafe5" translate="yes" xml:space="preserve">
          <source>bool QSslKey::operator==(const &lt;a href=&quot;qsslkey#QSslKey&quot;&gt;QSslKey&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QSslKey :: operator == (const &lt;a href=&quot;qsslkey#QSslKey&quot;&gt;QSslKey&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="332c451ef0134ef79bbba89436a1d6d05c1b1efd" translate="yes" xml:space="preserve">
          <source>bool QSslPreSharedKeyAuthenticator::operator!=(const &lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSslPreSharedKeyAuthenticator :: operator! = (const &lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0f14825593654049d78acf69201dbd33bfb62d13" translate="yes" xml:space="preserve">
          <source>bool QSslPreSharedKeyAuthenticator::operator==(const &lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QSslPreSharedKeyAuthenticator :: operator == (const &lt;a href=&quot;qsslpresharedkeyauthenticator#QSslPreSharedKeyAuthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="03a145ab9f99d2516a8c6482740882e4dbb6d99a" translate="yes" xml:space="preserve">
          <source>bool QSslSocket::addCaCertificates(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSslSocket :: addCa 인증서 (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5445f4512b8ab36fbcd91c92ce2ee36f03acd7c7" translate="yes" xml:space="preserve">
          <source>bool QSslSocket::flush()</source>
          <target state="translated">부울 QSslSocket :: flush ()</target>
        </trans-unit>
        <trans-unit id="245fb5fdae41f9e4069061b323c77b25b5bb3b1f" translate="yes" xml:space="preserve">
          <source>bool QSslSocket::isEncrypted() const</source>
          <target state="translated">bool QSslSocket :: isEncrypted () const</target>
        </trans-unit>
        <trans-unit id="e401927ad44317ac803bf3e80d667382c7100c62" translate="yes" xml:space="preserve">
          <source>bool QSslSocket::waitForEncrypted(int</source>
          <target state="translated">bool QSslSocket :: waitForEncrypted (int</target>
        </trans-unit>
        <trans-unit id="d8734b9dfeb8574209421e8f3d1d2330b883ebc8" translate="yes" xml:space="preserve">
          <source>bool QStandardItem::hasChildren() const</source>
          <target state="translated">bool QStandardItem :: hasChildren () const</target>
        </trans-unit>
        <trans-unit id="19ce55380731e639ce45ebb24a53a0750f5ba6d6" translate="yes" xml:space="preserve">
          <source>bool QStandardItem::isAutoTristate() const</source>
          <target state="translated">bool QStandardItem :: isAutoTristate () const</target>
        </trans-unit>
        <trans-unit id="5c1946a38e80a07f87d6a3e0171a2c0ec7b95179" translate="yes" xml:space="preserve">
          <source>bool QStandardItem::isCheckable() const</source>
          <target state="translated">bool QStandardItem :: isCheckable () const</target>
        </trans-unit>
        <trans-unit id="6fa067afb61245dc86010a854157c2d5d1010381" translate="yes" xml:space="preserve">
          <source>bool QStandardItem::isDragEnabled() const</source>
          <target state="translated">bool QStandardItem :: isDragEnabled () const</target>
        </trans-unit>
        <trans-unit id="eff599c22c8e5139d9f20230056754756398ecb9" translate="yes" xml:space="preserve">
          <source>bool QStandardItem::isDropEnabled() const</source>
          <target state="translated">bool QStandardItem :: isDropEnabled () const</target>
        </trans-unit>
        <trans-unit id="ee39f8aebbce06bc3d2c0c49ac78474eca251cd9" translate="yes" xml:space="preserve">
          <source>bool QStandardItem::isEditable() const</source>
          <target state="translated">bool QStandardItem :: isEditable () const</target>
        </trans-unit>
        <trans-unit id="c22cd03d9a4574c3acea113a5a56bed8d663c518" translate="yes" xml:space="preserve">
          <source>bool QStandardItem::isEnabled() const</source>
          <target state="translated">bool QStandardItem :: isEnabled () const</target>
        </trans-unit>
        <trans-unit id="0a831f0fc9efe847d1ac8955100f453b1fb0df34" translate="yes" xml:space="preserve">
          <source>bool QStandardItem::isSelectable() const</source>
          <target state="translated">bool QStandardItem :: isSelectable () const</target>
        </trans-unit>
        <trans-unit id="1ff12274b74e97593db875c456eff213f51ef5d4" translate="yes" xml:space="preserve">
          <source>bool QStandardItem::isUserTristate() const</source>
          <target state="translated">bool QStandardItem :: isUserTristate () const</target>
        </trans-unit>
        <trans-unit id="766fb120b7b69cbe88f5925d86606ce9fec4cd9e" translate="yes" xml:space="preserve">
          <source>bool QStandardItemModel::clearItemData(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QStandardItemModel :: clearItemData (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c489434d938cd70c22afb3637c1a7061f96a1267" translate="yes" xml:space="preserve">
          <source>bool QStandardItemModel::insertColumn(int</source>
          <target state="translated">bool QStandardItemModel :: insertColumn (int</target>
        </trans-unit>
        <trans-unit id="ae417b411fe82819780924d9a09d52523c2fb44d" translate="yes" xml:space="preserve">
          <source>bool QStandardItemModel::insertRow(int</source>
          <target state="translated">bool QStandardItemModel :: insertRow (int</target>
        </trans-unit>
        <trans-unit id="6e8a79b1e1c8bb96cf455e28f6e414361dc2ff6f" translate="yes" xml:space="preserve">
          <source>bool QStateMachine::cancelDelayedEvent(int</source>
          <target state="translated">bool QStateMachine :: cancelDelayedEvent (int</target>
        </trans-unit>
        <trans-unit id="28abbba3835ec9536606d822768e6889420e01ba" translate="yes" xml:space="preserve">
          <source>bool QStateMachine::isAnimated() const</source>
          <target state="translated">bool QStateMachine :: isAnimated () const</target>
        </trans-unit>
        <trans-unit id="11cfbef235a238a19d89adbbaca522e071684264" translate="yes" xml:space="preserve">
          <source>bool QStaticText::operator!=(const &lt;a href=&quot;qstatictext#QStaticText&quot;&gt;QStaticText&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QStaticText :: operator! = (const &lt;a href=&quot;qstatictext#QStaticText&quot;&gt;QStaticText&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3e276067e5b5f68be505bbb2e7adfa9648d37ca1" translate="yes" xml:space="preserve">
          <source>bool QStaticText::operator==(const &lt;a href=&quot;qstatictext#QStaticText&quot;&gt;QStaticText&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QStaticText :: operator == (const &lt;a href=&quot;qstatictext#QStaticText&quot;&gt;QStaticText&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2d1662bc0e6b69ced274edb760cb07cda7ba1ee6" translate="yes" xml:space="preserve">
          <source>bool QStorageInfo::isReadOnly() const</source>
          <target state="translated">bool QStorageInfo :: isReadOnly () const</target>
        </trans-unit>
        <trans-unit id="eab07169f547c9bba8380236438aeba207da2971" translate="yes" xml:space="preserve">
          <source>bool QStorageInfo::isReady() const</source>
          <target state="translated">bool QStorageInfo :: isReady () const</target>
        </trans-unit>
        <trans-unit id="ef43a32c7aa3d66a5bfd87804be85e48b848c520" translate="yes" xml:space="preserve">
          <source>bool QStorageInfo::isRoot() const</source>
          <target state="translated">bool QStorageInfo :: isRoot () const</target>
        </trans-unit>
        <trans-unit id="f54d2674105c523559577f523bca7c5d6cc9ad50" translate="yes" xml:space="preserve">
          <source>bool QStorageInfo::isValid() const</source>
          <target state="translated">bool QStorageInfo :: isValid () const</target>
        </trans-unit>
        <trans-unit id="3faa335b5f92f336b1643eaa11c5c46257af5f78" translate="yes" xml:space="preserve">
          <source>bool QStorageInfo::operator!=(const &lt;a href=&quot;qstorageinfo#QStorageInfo&quot;&gt;QStorageInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QStorageInfo :: 연산자! = (const &lt;a href=&quot;qstorageinfo#QStorageInfo&quot;&gt;QStorageInfo&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="084d63a30c0c0585631d6e796a32c364ffa90a39" translate="yes" xml:space="preserve">
          <source>bool QStorageInfo::operator==(const &lt;a href=&quot;qstorageinfo#QStorageInfo&quot;&gt;QStorageInfo&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QStorageInfo :: operator == (const &lt;a href=&quot;qstorageinfo#QStorageInfo&quot;&gt;QStorageInfo&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="48850d0856816a92c7a38002e5eec504546db4b3" translate="yes" xml:space="preserve">
          <source>bool QString::contains(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">bool QString :: 포함 ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4950d5078763df4ff3fa62158dfd05864a1563bb" translate="yes" xml:space="preserve">
          <source>bool QString::contains(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">부울 QString :: 포함 ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e61fa6b645432ecba493226e55c8aea3f14197b7" translate="yes" xml:space="preserve">
          <source>bool QString::contains(&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: 포함 ( &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="afa5505a4ad28fd89356d3aa8962c319074a653c" translate="yes" xml:space="preserve">
          <source>bool QString::contains(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">bool QString::contains(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="69d3ec35c6dad88c78d491cae23b6367648a1f59" translate="yes" xml:space="preserve">
          <source>bool QString::contains(const &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: contains (const &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c9a3fd4809dade283f27d82071d61a096924acc3" translate="yes" xml:space="preserve">
          <source>bool QString::contains(const &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: contains (const &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5709a8103f359b2ac14c7193bc095521fcfec392" translate="yes" xml:space="preserve">
          <source>bool QString::contains(const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: 포함 (const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9e275d6f429c1a0f11828f084757d9cdbc4b0e72" translate="yes" xml:space="preserve">
          <source>bool QString::contains(const &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: contains (const &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6a88daf6ba3d51f1397d753d9ef3b286bf58af42" translate="yes" xml:space="preserve">
          <source>bool QString::endsWith(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">부울 QString :: endsWith ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="93b191d8c361a8c118a86254fc319f588f18d10b" translate="yes" xml:space="preserve">
          <source>bool QString::endsWith(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QString :: endsWith ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="6a7c81a245b709fdf77f5c5b709bfae827cb6986" translate="yes" xml:space="preserve">
          <source>bool QString::endsWith(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">부울 QString :: endsWith ( &lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b9745875ea785de50a8144d0d473b06feb6cf0cf" translate="yes" xml:space="preserve">
          <source>bool QString::endsWith(const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: endsWith (const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="683cce4262219f268cd5c8fae069852c198d185e" translate="yes" xml:space="preserve">
          <source>bool QString::endsWith(const &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: endsWith (const &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="757faf000ef3c939c7b64d6f0079686088bb53aa" translate="yes" xml:space="preserve">
          <source>bool QString::isEmpty() const</source>
          <target state="translated">bool QString :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="eac3262d366ebad44cb7ec9808a7960ecea767c4" translate="yes" xml:space="preserve">
          <source>bool QString::isLower() const</source>
          <target state="translated">bool QString :: isLower () const</target>
        </trans-unit>
        <trans-unit id="09b425bc4620c50ad877ed35513661f04e785575" translate="yes" xml:space="preserve">
          <source>bool QString::isNull() const</source>
          <target state="translated">bool QString :: isNull () const</target>
        </trans-unit>
        <trans-unit id="cc1a5bc67a1f1573ffde38edf1a7841c3b8db3f7" translate="yes" xml:space="preserve">
          <source>bool QString::isRightToLeft() const</source>
          <target state="translated">bool QString :: isRightToLeft () const</target>
        </trans-unit>
        <trans-unit id="1d507ae1530801378c311af9d7e0d7792215639c" translate="yes" xml:space="preserve">
          <source>bool QString::isUpper() const</source>
          <target state="translated">bool QString :: isUpper () const</target>
        </trans-unit>
        <trans-unit id="9811a70f29f0b6ac5e4aa585715b6f7195dccb8f" translate="yes" xml:space="preserve">
          <source>bool QString::isValidUtf16() const</source>
          <target state="translated">bool QString::isValidUtf16() const</target>
        </trans-unit>
        <trans-unit id="f1b0ff83e93c377ac14ecaef970547f1446aab2d" translate="yes" xml:space="preserve">
          <source>bool QString::operator!=(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QString :: operator! = ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf5e03ef246ce644d8e35869157058486a308d6d" translate="yes" xml:space="preserve">
          <source>bool QString::operator!=(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: operator! = (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bd996e853a56e3209c6f3fcc10010999ae6f1086" translate="yes" xml:space="preserve">
          <source>bool QString::operator!=(const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: 연산자! = (const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5da970ae5486a036ee96209414446db495aa1d4e" translate="yes" xml:space="preserve">
          <source>bool QString::operator!=(const char *</source>
          <target state="translated">bool QString :: operator! = (const char *</target>
        </trans-unit>
        <trans-unit id="6fc7e2c70937a1f4d5f196de29859f5dc5cdcc44" translate="yes" xml:space="preserve">
          <source>bool QString::operator&amp;gt;(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QString :: 연산자&amp;gt; ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c898000c3fcf17b8ec8526535767974aa92c110" translate="yes" xml:space="preserve">
          <source>bool QString::operator&amp;gt;(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: operator&amp;gt; (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="68adc28d2455c65d0f0ee0cdc5a4bce7f59effa3" translate="yes" xml:space="preserve">
          <source>bool QString::operator&amp;gt;(const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: 연산자&amp;gt; (const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c157cb2f91a6473af7d94edf097bd22a8abce8aa" translate="yes" xml:space="preserve">
          <source>bool QString::operator&amp;gt;(const char *</source>
          <target state="translated">bool QString :: operator&amp;gt; (const char *</target>
        </trans-unit>
        <trans-unit id="2bfd60a68ea3118ad3f2aacf5e5aa3577f57b62e" translate="yes" xml:space="preserve">
          <source>bool QString::operator&amp;gt;=(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QString :: operator&amp;gt; = ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72ab88ce253867818e5d4d3575222659de226870" translate="yes" xml:space="preserve">
          <source>bool QString::operator&amp;gt;=(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: operator&amp;gt; = (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="852b03092d50e8ce05e1e5df26dd0cfe35d9576f" translate="yes" xml:space="preserve">
          <source>bool QString::operator&amp;gt;=(const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: operator&amp;gt; = (const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fd85b2993f3f6a47edbefa4306e735905139941d" translate="yes" xml:space="preserve">
          <source>bool QString::operator&amp;gt;=(const char *</source>
          <target state="translated">bool QString :: operator&amp;gt; = (const char *</target>
        </trans-unit>
        <trans-unit id="27fe78f5e9eea0fd5b076c83e40797c9bc674bc5" translate="yes" xml:space="preserve">
          <source>bool QString::operator&amp;lt;(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">부울 QString :: 연산자 &amp;lt;( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="29f7e057a1381ebf1e245d7f2249f28f46279587" translate="yes" xml:space="preserve">
          <source>bool QString::operator&amp;lt;(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: operator &amp;lt;(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4f8f4589db6344e5b60c4c79bd457d91ec72f97f" translate="yes" xml:space="preserve">
          <source>bool QString::operator&amp;lt;(const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QString :: 연산자 &amp;lt;(const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e51cc4fd164fd3f9ff0f9a836a3b45375f3958e7" translate="yes" xml:space="preserve">
          <source>bool QString::operator&amp;lt;(const char *</source>
          <target state="translated">bool QString :: operator &amp;lt;(const char *</target>
        </trans-unit>
        <trans-unit id="2963cce74b84bf90e1c91e1b788253fbdcb6bafa" translate="yes" xml:space="preserve">
          <source>bool QString::operator&amp;lt;=(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">부울 QString :: 연산자 &amp;lt;= ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5b20e7b9c44f1f887b7ab764c3938748a8bb260c" translate="yes" xml:space="preserve">
          <source>bool QString::operator&amp;lt;=(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: operator &amp;lt;= (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4f8849f30f914c746f5b78a7992dfd55e73c5847" translate="yes" xml:space="preserve">
          <source>bool QString::operator&amp;lt;=(const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: 연산자 &amp;lt;= (const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e478a9923366efc63dc5c7260a42fde1056698e4" translate="yes" xml:space="preserve">
          <source>bool QString::operator&amp;lt;=(const char *</source>
          <target state="translated">bool QString :: operator &amp;lt;= (const char *</target>
        </trans-unit>
        <trans-unit id="3d853f9eb3b8293d1342bba706ac3e3bd15ff84e" translate="yes" xml:space="preserve">
          <source>bool QString::operator==(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QString :: operator == ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d6e64d3c86d921b11f436e2e30812d42749bd243" translate="yes" xml:space="preserve">
          <source>bool QString::operator==(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: operator == (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5abde56251cfb09f5341d526013fe9595b53c3bf" translate="yes" xml:space="preserve">
          <source>bool QString::operator==(const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: operator == (const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="eea121ee3728c848d8d8f4b54bbe28549414bbdb" translate="yes" xml:space="preserve">
          <source>bool QString::operator==(const char *</source>
          <target state="translated">bool QString :: operator == (const char *</target>
        </trans-unit>
        <trans-unit id="ef7cd0aee61b3dc9cf9743cac9b0876f56258d3b" translate="yes" xml:space="preserve">
          <source>bool QString::startsWith(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">부울 QString :: startsWith ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="aa78c96c913dc830ba8f840848b81c47415dca94" translate="yes" xml:space="preserve">
          <source>bool QString::startsWith(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QString :: startsWith ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4e265aa5b4868fe9bca8a0d07282e4b8f1bf701f" translate="yes" xml:space="preserve">
          <source>bool QString::startsWith(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">bool QString :: startsWith ( &lt;a href=&quot;qstringview&quot;&gt;QStringView)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7dd053585691e873bbd79fdbe39a95b9dbbfb6e7" translate="yes" xml:space="preserve">
          <source>bool QString::startsWith(const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: startsWith (const &lt;a href=&quot;qstring#QString&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="af62ff744201c2682ba831c7b0007762e011ad4e" translate="yes" xml:space="preserve">
          <source>bool QString::startsWith(const &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QString :: startsWith (const &lt;a href=&quot;qstringref&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="97bb35ed19a1a6bf5c456c4d2aab9fe19b814eb7" translate="yes" xml:space="preserve">
          <source>bool QStringList::contains(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QStringList :: contains ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8df3ff88a1c112f6e596d2e2cae7dab57aeef6e1" translate="yes" xml:space="preserve">
          <source>bool QStringList::contains(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">bool QStringList :: contains ( &lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="46ff42eefed6b2bb0f166af0f6b70b031bada9ab" translate="yes" xml:space="preserve">
          <source>bool QStringList::contains(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QStringList :: contains (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ef0457dd790fa5927f65948806c443027c8acfc9" translate="yes" xml:space="preserve">
          <source>bool QStringRef::contains(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">bool QStringRef :: contains ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bbb62c2bac490976cf7cbceb099b0a66050cf5ae" translate="yes" xml:space="preserve">
          <source>bool QStringRef::contains(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QStringRef :: contains ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="31485c46e11dd139cc0cf96f330361c1ed8a4dea" translate="yes" xml:space="preserve">
          <source>bool QStringRef::contains(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">bool QStringRef::contains(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b0ca7b872a2b31db9883c3323be406ebd520c220" translate="yes" xml:space="preserve">
          <source>bool QStringRef::contains(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QStringRef :: contains (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c4ead34f67fee4bb1947f901d105c04bc53faac0" translate="yes" xml:space="preserve">
          <source>bool QStringRef::contains(const &lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QStringRef :: contains (const &lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5018793aab2e33b40a11de580dcafe5b755074b8" translate="yes" xml:space="preserve">
          <source>bool QStringRef::endsWith(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">bool QStringRef :: endsWith ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="b20830b4595cdbf692fccc3b7fa2cfb782118492" translate="yes" xml:space="preserve">
          <source>bool QStringRef::endsWith(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QStringRef :: endsWith ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4763a489ea048db8f100402bcd73dfc8a9fa5e79" translate="yes" xml:space="preserve">
          <source>bool QStringRef::endsWith(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">bool QStringRef :: endsWith ( &lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="190ce0d6373f3c1246c904884047884a7e02a8ca" translate="yes" xml:space="preserve">
          <source>bool QStringRef::endsWith(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QStringRef :: endsWith (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c5f59aff6345d9003ec5e2c4dcf70e5006e2fd6f" translate="yes" xml:space="preserve">
          <source>bool QStringRef::endsWith(const &lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QStringRef :: endsWith (const &lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1685f583aa2bdaf47c23f789605a19cc9d90808f" translate="yes" xml:space="preserve">
          <source>bool QStringRef::isEmpty() const</source>
          <target state="translated">bool QStringRef :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="91d0ab180bd3213ff3c28e36192d240c938680c4" translate="yes" xml:space="preserve">
          <source>bool QStringRef::isNull() const</source>
          <target state="translated">bool QStringRef :: isNull () const</target>
        </trans-unit>
        <trans-unit id="8fee12acd3675f4f73f0312110306b620e6d3a5c" translate="yes" xml:space="preserve">
          <source>bool QStringRef::isRightToLeft() const</source>
          <target state="translated">bool QStringRef :: isRightToLeft () const</target>
        </trans-unit>
        <trans-unit id="4fc600183451fef5451691e3c5dae702b2002cbc" translate="yes" xml:space="preserve">
          <source>bool QStringRef::operator!=(const char *</source>
          <target state="translated">bool QStringRef :: operator! = (const char *</target>
        </trans-unit>
        <trans-unit id="997f71aff52e9b4ebabac766b2ef2b4a00d99d44" translate="yes" xml:space="preserve">
          <source>bool QStringRef::operator&amp;gt;(const &lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QStringRef :: 연산자&amp;gt; (const &lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="43f5343648c7960c8c8aff8246a04fd2329f28bd" translate="yes" xml:space="preserve">
          <source>bool QStringRef::operator&amp;gt;(const char *</source>
          <target state="translated">bool QStringRef :: operator&amp;gt; (const char *</target>
        </trans-unit>
        <trans-unit id="eed333f675846682dc4c647fe1dda36af602e26f" translate="yes" xml:space="preserve">
          <source>bool QStringRef::operator&amp;gt;=(const &lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QStringRef :: operator&amp;gt; = (const &lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="93209649f7cab8383d88d06aea2db9b503e31e7c" translate="yes" xml:space="preserve">
          <source>bool QStringRef::operator&amp;gt;=(const char *</source>
          <target state="translated">bool QStringRef :: operator&amp;gt; = (const char *</target>
        </trans-unit>
        <trans-unit id="8bd80d5d29f6b6654ccff8176ff395cfc4622332" translate="yes" xml:space="preserve">
          <source>bool QStringRef::operator&amp;lt;(const &lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QStringRef :: 연산자 &amp;lt;(const &lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="722d31f21fa5b3dd33159302b43199cd3299177e" translate="yes" xml:space="preserve">
          <source>bool QStringRef::operator&amp;lt;(const char *</source>
          <target state="translated">bool QStringRef :: operator &amp;lt;(const char *</target>
        </trans-unit>
        <trans-unit id="d54fc412afc012d5b55df9dd3571c971c71640c2" translate="yes" xml:space="preserve">
          <source>bool QStringRef::operator&amp;lt;=(const &lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QStringRef :: 연산자 &amp;lt;= (const &lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c3a5d68cded69922d4bd4053894e00c99973e676" translate="yes" xml:space="preserve">
          <source>bool QStringRef::operator&amp;lt;=(const char *</source>
          <target state="translated">bool QStringRef :: operator &amp;lt;= (const char *</target>
        </trans-unit>
        <trans-unit id="25840c874cf76454844390a6225bfed5c1a01433" translate="yes" xml:space="preserve">
          <source>bool QStringRef::operator==(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QStringRef :: operator == ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e363f93e6b114c61eba735deef8a3de7f5630760" translate="yes" xml:space="preserve">
          <source>bool QStringRef::operator==(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QStringRef :: operator == (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7945d158a00d975a5d0fff4b64faf95bb52d9d34" translate="yes" xml:space="preserve">
          <source>bool QStringRef::operator==(const &lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QStringRef :: operator == (const &lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="68dbf3e23256f7ee8f840752d3c4a40b7970d15b" translate="yes" xml:space="preserve">
          <source>bool QStringRef::operator==(const char *</source>
          <target state="translated">bool QStringRef :: operator == (const char *</target>
        </trans-unit>
        <trans-unit id="682e6cf82d3b8bb210fe9f4953bfb5af0cfa677e" translate="yes" xml:space="preserve">
          <source>bool QStringRef::startsWith(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">bool QStringRef :: startsWith ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="abadc1b0c022297ba4d3f3ad76472ff7f5dc74c8" translate="yes" xml:space="preserve">
          <source>bool QStringRef::startsWith(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QStringRef :: startsWith ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="09703132f9eeba48c001f4f1213f1dd436b55261" translate="yes" xml:space="preserve">
          <source>bool QStringRef::startsWith(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">bool QStringRef :: startsWith ( &lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ec5b29400eb558a9277bd16ec74b3464998cc560" translate="yes" xml:space="preserve">
          <source>bool QStringRef::startsWith(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QStringRef :: startsWith (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2cd437d4d1bcc5194d05c8c4d5364b97237a37c2" translate="yes" xml:space="preserve">
          <source>bool QStringRef::startsWith(const &lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QStringRef :: startsWith (const &lt;a href=&quot;qstringref#QStringRef&quot;&gt;QStringRef&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="da08fcef4ebc65ecdec32b3b509a911872d36333" translate="yes" xml:space="preserve">
          <source>bool QStringView::contains(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">bool QStringView::contains(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="74e0f3eb28a58772ecb365d6b0d3c54effd9e539" translate="yes" xml:space="preserve">
          <source>bool QStringView::contains(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QStringView::contains(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="242a2299afba526b14fb2f7c57b13325692d6abc" translate="yes" xml:space="preserve">
          <source>bool QStringView::contains(&lt;a href=&quot;qstringview#QStringView&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">bool QStringView::contains(&lt;a href=&quot;qstringview#QStringView&quot;&gt;QStringView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c2dc211dadab35f6339e857bceae80edcb90044" translate="yes" xml:space="preserve">
          <source>bool QStringView::empty() const</source>
          <target state="translated">bool QStringView :: empty () const</target>
        </trans-unit>
        <trans-unit id="3c425b6b1b070f601b15d8c7d28ccc0908ee1a44" translate="yes" xml:space="preserve">
          <source>bool QStringView::endsWith(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">부울 QStringView :: endsWith ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="491127f4a03e74eb83c2eef72d8fcc741ded75a6" translate="yes" xml:space="preserve">
          <source>bool QStringView::endsWith(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QStringView :: endsWith ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="85a1e44b365f1d506829d8a97ad3facdbf500de1" translate="yes" xml:space="preserve">
          <source>bool QStringView::endsWith(&lt;a href=&quot;qstringview#QStringView&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">부울 QStringView :: endsWith ( &lt;a href=&quot;qstringview#QStringView&quot;&gt;QStringView&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcd8a9ecc1b34f52de183b058073d8b897a3bb74" translate="yes" xml:space="preserve">
          <source>bool QStringView::isEmpty() const</source>
          <target state="translated">bool QStringView :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="2e10040ce9af6cf2a66c96b1b527a2f4d71a7c56" translate="yes" xml:space="preserve">
          <source>bool QStringView::isNull() const</source>
          <target state="translated">bool QStringView :: isNull () const</target>
        </trans-unit>
        <trans-unit id="ad70da14c450e0b67d53de9d3b43b96fdbc54fe3" translate="yes" xml:space="preserve">
          <source>bool QStringView::isRightToLeft() const</source>
          <target state="translated">bool QStringView :: isRightToLeft () const</target>
        </trans-unit>
        <trans-unit id="a9e4114a7fc3d645481c6827a401f83d74a0b682" translate="yes" xml:space="preserve">
          <source>bool QStringView::isValidUtf16() const</source>
          <target state="translated">bool QStringView::isValidUtf16() const</target>
        </trans-unit>
        <trans-unit id="024ab4812b25ed8dcaa3f4f47aad056a2eee1b8b" translate="yes" xml:space="preserve">
          <source>bool QStringView::startsWith(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">bool QStringView :: startsWith ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="ce85ae658dcae70afa6fe9038c0adcaacc8214c3" translate="yes" xml:space="preserve">
          <source>bool QStringView::startsWith(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QStringView :: startsWith ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0e8dd30f3b82285f2e937a212826b6c7a57c2ed8" translate="yes" xml:space="preserve">
          <source>bool QStringView::startsWith(&lt;a href=&quot;qstringview#QStringView&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">bool QStringView :: startsWith ( &lt;a href=&quot;qstringview#QStringView&quot;&gt;QStringView)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19f83478b38b6f48cd94eb06b3461cb561920d0a" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionComboBox::editable</source>
          <target state="translated">bool QStyleOptionComboBox :: 편집 가능</target>
        </trans-unit>
        <trans-unit id="78673d1a3a5cecb01cdfcb7fb0b0f8e205ac44c5" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionComboBox::frame</source>
          <target state="translated">bool QStyleOptionComboBox :: frame</target>
        </trans-unit>
        <trans-unit id="0a3e048d21e5ce1a1f7ca84d39c2b44109c83f52" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionDockWidget::closable</source>
          <target state="translated">bool QStyleOptionDockWidget :: closable</target>
        </trans-unit>
        <trans-unit id="90580ce5f3fd38f4d9952ccb4cc4701e45879e3f" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionDockWidget::floatable</source>
          <target state="translated">부울 QStyleOptionDockWidget :: floatable</target>
        </trans-unit>
        <trans-unit id="b1a2a099127c3f749144c7ec040fee9cbed10fec" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionDockWidget::movable</source>
          <target state="translated">bool QStyleOptionDockWidget :: movable</target>
        </trans-unit>
        <trans-unit id="b1532cfeee1c5ba4152bf5680fca72762705d0db" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionMenuItem::checked</source>
          <target state="translated">bool QStyleOptionMenuItem :: checked</target>
        </trans-unit>
        <trans-unit id="3a83d0ae4872986d6f106e2fc4b878cad2a09702" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionMenuItem::menuHasCheckableItems</source>
          <target state="translated">bool QStyleOptionMenuItem :: menuHasCheckableItems</target>
        </trans-unit>
        <trans-unit id="4d907854a4b6783c8e33bca5a980a7e10de5825e" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionProgressBar::bottomToTop</source>
          <target state="translated">bool QStyleOptionProgressBar :: bottomToTop</target>
        </trans-unit>
        <trans-unit id="f6de4a55e37be94f7bea0e492f5c8f4acaa3cc73" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionProgressBar::invertedAppearance</source>
          <target state="translated">bool QStyleOptionProgressBar :: invertedAppearance</target>
        </trans-unit>
        <trans-unit id="fc90da0922bb1371e13a799ba2b274f9cd578fa2" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionProgressBar::textVisible</source>
          <target state="translated">bool QStyleOptionProgressBar :: textVisible</target>
        </trans-unit>
        <trans-unit id="60daf0c5cca8e887dc2fcb18c9a9b45712d0ae36" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionRubberBand::opaque</source>
          <target state="translated">bool QStyleOptionRubberBand :: opaque</target>
        </trans-unit>
        <trans-unit id="f8108510c92aeb0a867f7db3851a9c258d6594ad" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionSlider::dialWrapping</source>
          <target state="translated">bool QStyleOptionSlider :: dialWrapping</target>
        </trans-unit>
        <trans-unit id="dd5e5fcf0de1f04b51648cf273aa2732805df34c" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionSlider::upsideDown</source>
          <target state="translated">bool QStyleOptionSlider :: upsideDown</target>
        </trans-unit>
        <trans-unit id="ba96b36c267b893b2891ae10648774cc9d132930" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionSpinBox::frame</source>
          <target state="translated">bool QStyleOptionSpinBox :: frame</target>
        </trans-unit>
        <trans-unit id="28090415a2e6661248cbd19649bc093e68ca61ad" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionTab::documentMode</source>
          <target state="translated">bool QStyleOptionTab :: documentMode</target>
        </trans-unit>
        <trans-unit id="059e0bbf87dd8cac2e663144ebed69272cb07b73" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionTabBarBase::documentMode</source>
          <target state="translated">bool QStyleOptionTabBarBase :: documentMode</target>
        </trans-unit>
        <trans-unit id="5f1b7ce2ccbd76b98623387e56c2c9386af51de7" translate="yes" xml:space="preserve">
          <source>bool QStyleOptionViewItem::showDecorationSelected</source>
          <target state="translated">bool QStyleOptionViewItem :: showDecorationSelected</target>
        </trans-unit>
        <trans-unit id="120e9d370e08870039baee3d83b69069b5eebe67" translate="yes" xml:space="preserve">
          <source>bool QStylePainter::begin(&lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *</source>
          <target state="translated">bool QStylePainter :: begin ( &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="11a962209b28519b38947e0e895d9f3815e31003" translate="yes" xml:space="preserve">
          <source>bool QStylePainter::begin(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">bool QStylePainter :: begin ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="872f5f8e0735dd12b60e845258a823059f557642" translate="yes" xml:space="preserve">
          <source>bool QSupportedWritingSystems::supported(&lt;a href=&quot;qfontdatabase#WritingSystem-enum&quot;&gt;QFontDatabase::WritingSystem&lt;/a&gt;</source>
          <target state="translated">bool QSupportedWritingSystems :: supported ( &lt;a href=&quot;qfontdatabase#WritingSystem-enum&quot;&gt;QFont 데이터베이스 :: WritingSystem&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e20f18f527afd881b10ddd951d4f253754cd5ae7" translate="yes" xml:space="preserve">
          <source>bool QSurface::supportsOpenGL() const</source>
          <target state="translated">bool QSurface :: supportsOpenGL () const</target>
        </trans-unit>
        <trans-unit id="23334ee43bce4cf81ac09a1ad49e9956c6486b12" translate="yes" xml:space="preserve">
          <source>bool QSurfaceFormat::hasAlpha() const</source>
          <target state="translated">bool QSurfaceFormat :: hasAlpha () const</target>
        </trans-unit>
        <trans-unit id="aebd2ed845cc9e62833e9bab3d41039ae0bf01af" translate="yes" xml:space="preserve">
          <source>bool QSurfaceFormat::operator!=(const &lt;a href=&quot;qsurfaceformat#QSurfaceFormat&quot;&gt;QSurfaceFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSurfaceFormat :: operator! = (const &lt;a href=&quot;qsurfaceformat#QSurfaceFormat&quot;&gt;QSurfaceFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c0829dda26bbe1390a15178ec17126468b045e37" translate="yes" xml:space="preserve">
          <source>bool QSurfaceFormat::operator==(const &lt;a href=&quot;qsurfaceformat#QSurfaceFormat&quot;&gt;QSurfaceFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QSurfaceFormat :: operator == (const &lt;a href=&quot;qsurfaceformat#QSurfaceFormat&quot;&gt;QSurfaceFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e452d22735564fe7a247b922f2b0b93d35c3c157" translate="yes" xml:space="preserve">
          <source>bool QSurfaceFormat::stereo() const</source>
          <target state="translated">bool QSurfaceFormat :: stereo () const</target>
        </trans-unit>
        <trans-unit id="ae284038481b2a730eb62d4336b88656351eaa1d" translate="yes" xml:space="preserve">
          <source>bool QSurfaceFormat::testOption(&lt;a href=&quot;qsurfaceformat#FormatOption-enum&quot;&gt;QSurfaceFormat::FormatOption&lt;/a&gt;</source>
          <target state="translated">부울 QSurfaceFormat :: testOption ( &lt;a href=&quot;qsurfaceformat#FormatOption-enum&quot;&gt;QSurfaceFormat :: FormatOption&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bfc78ceb02d6e862368541ffe35b7db39aa5e80e" translate="yes" xml:space="preserve">
          <source>bool QSvgRenderer::animated() const</source>
          <target state="translated">bool QSvgRenderer :: animated () const</target>
        </trans-unit>
        <trans-unit id="fb8602e1a18d95568350b39f60c784d4080feb7a" translate="yes" xml:space="preserve">
          <source>bool QSvgRenderer::elementExists(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QSvgRenderer :: elementExists (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8c1e50a41d8ea4c453b44fc3a729f28a71074288" translate="yes" xml:space="preserve">
          <source>bool QSvgRenderer::isValid() const</source>
          <target state="translated">bool QSvgRenderer :: isValid () const</target>
        </trans-unit>
        <trans-unit id="f1ac05dc235ed6bb6802e9ada1cf34e280bb0c24" translate="yes" xml:space="preserve">
          <source>bool QSystemSemaphore::acquire()</source>
          <target state="translated">부울 QSystemSemaphore :: acquire ()</target>
        </trans-unit>
        <trans-unit id="ab7aac9db26aa1f15a04a4f154293d458936ff42" translate="yes" xml:space="preserve">
          <source>bool QSystemSemaphore::release(int</source>
          <target state="translated">부울 QSystemSemaphore :: release (int</target>
        </trans-unit>
        <trans-unit id="f856b8c4189374567bde026933e409bc0b0a3879" translate="yes" xml:space="preserve">
          <source>bool QTabBar::isTabEnabled(int</source>
          <target state="translated">bool QTabBar :: isTabEnabled (int</target>
        </trans-unit>
        <trans-unit id="859fb9f88ab6794f0bf3b2470b02ff1ec557b048" translate="yes" xml:space="preserve">
          <source>bool QTabBar::isTabVisible(int</source>
          <target state="translated">bool QTabBar::isTabVisible(int</target>
        </trans-unit>
        <trans-unit id="7b2e097834665d87700e7be1384e531fdc61cbd6" translate="yes" xml:space="preserve">
          <source>bool QTabWidget::isTabEnabled(int</source>
          <target state="translated">bool QTabWidget :: isTabEnabled (int</target>
        </trans-unit>
        <trans-unit id="8dac7c432ccabf71b04b91ff0378354b1bcc187a" translate="yes" xml:space="preserve">
          <source>bool QTabWidget::isTabVisible(int</source>
          <target state="translated">bool QTabWidget::isTabVisible(int</target>
        </trans-unit>
        <trans-unit id="e6f41f12ceeddcdbb84e224f4752042f152989eb" translate="yes" xml:space="preserve">
          <source>bool QTableView::isColumnHidden(int</source>
          <target state="translated">bool QTableView :: isColumnHidden (int</target>
        </trans-unit>
        <trans-unit id="c9a6e0dfeae6cd57e3645111028df18132ce8c22" translate="yes" xml:space="preserve">
          <source>bool QTableView::isRowHidden(int</source>
          <target state="translated">bool QTableView :: isRowHidden (int</target>
        </trans-unit>
        <trans-unit id="e1445070ef2faa826cbade6e5f62640af02fa6bc" translate="yes" xml:space="preserve">
          <source>bool QTableWidget::isPersistentEditorOpen(&lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; *</source>
          <target state="translated">bool QTableWidget :: isPersistentEditorOpen ( &lt;a href=&quot;qtablewidgetitem&quot;&gt;QTableWidgetItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="914cdfbd6a0272963befbc9ec124253a096b823c" translate="yes" xml:space="preserve">
          <source>bool QTableWidgetItem::isSelected() const</source>
          <target state="translated">부울 QTableWidgetItem :: isSelected () const</target>
        </trans-unit>
        <trans-unit id="ac4abafb3f5bf26fee1c3b1c2a5cac1edb02c804" translate="yes" xml:space="preserve">
          <source>bool QTcpServer::isListening() const</source>
          <target state="translated">bool QTcpServer :: isListening () const</target>
        </trans-unit>
        <trans-unit id="9bbf3c9498cfbbe8eaf300ca5536bb9e68844060" translate="yes" xml:space="preserve">
          <source>bool QTcpServer::listen(const &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTcpServer :: listen (const &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="041f522cddc07e18910830a2881bc9f1aea157c0" translate="yes" xml:space="preserve">
          <source>bool QTcpServer::setSocketDescriptor(&lt;a href=&quot;#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt;</source>
          <target state="translated">부울 QTcpServer :: setSocketDescriptor ( &lt;a href=&quot;#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7ff4882ac07e38f676b087354ad04f3f84286b3f" translate="yes" xml:space="preserve">
          <source>bool QTcpServer::setSocketDescriptor(&lt;a href=&quot;qtglobal#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt;</source>
          <target state="translated">bool QTcpServer::setSocketDescriptor(&lt;a href=&quot;qtglobal#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c3d159fa12825685bb6d72c1faed821a30f1937" translate="yes" xml:space="preserve">
          <source>bool QTcpServer::waitForNewConnection(int</source>
          <target state="translated">bool QTcpServer :: waitForNewConnection (int</target>
        </trans-unit>
        <trans-unit id="db7af291b787e85921ee3c47a174be94f0ee3101" translate="yes" xml:space="preserve">
          <source>bool QTemporaryDir::autoRemove() const</source>
          <target state="translated">bool QTemporaryDir :: autoRemove () const</target>
        </trans-unit>
        <trans-unit id="631fe573685f218cfc145d1b5618dd761f77d4d6" translate="yes" xml:space="preserve">
          <source>bool QTemporaryDir::isValid() const</source>
          <target state="translated">bool QTemporaryDir :: isValid () const</target>
        </trans-unit>
        <trans-unit id="340bfb278be19be3a46a705e888ae73673b3d2b9" translate="yes" xml:space="preserve">
          <source>bool QTemporaryDir::remove()</source>
          <target state="translated">bool QTemporaryDir :: remove ()</target>
        </trans-unit>
        <trans-unit id="fab72cf0b73d7d5a7d7b73720cb0a38adac90b5b" translate="yes" xml:space="preserve">
          <source>bool QTemporaryFile::autoRemove() const</source>
          <target state="translated">bool QTemporaryFile :: autoRemove () const</target>
        </trans-unit>
        <trans-unit id="de8b0a2c63d2de8fa9475df56a679ecebd19f27a" translate="yes" xml:space="preserve">
          <source>bool QTemporaryFile::open()</source>
          <target state="translated">bool QTemporaryFile :: open ()</target>
        </trans-unit>
        <trans-unit id="8c8456296341bafece58ffc4750cb2ddf687b89a" translate="yes" xml:space="preserve">
          <source>bool QTest::currentTestFailed()</source>
          <target state="translated">bool QTest :: currentTestFailed ()</target>
        </trans-unit>
        <trans-unit id="75c044cd060adb4c1c40fc3e7969c8a4d7dd8f57" translate="yes" xml:space="preserve">
          <source>bool QTest::qWaitFor(Functor</source>
          <target state="translated">부울 QTest :: qWaitFor (Functor</target>
        </trans-unit>
        <trans-unit id="2779a024216f056ba1009ce2b7204dd639e5e2c0" translate="yes" xml:space="preserve">
          <source>bool QTest::qWaitForWindowActive(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">bool QTest :: qWaitForWindowActive ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1e3c1adc72c1e3d67971eb253eaac01b33b126bb" translate="yes" xml:space="preserve">
          <source>bool QTest::qWaitForWindowActive(&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="translated">bool QTest :: qWaitForWindowActive ( &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d7fed5a8ba06b2efca16d8bfc74f7b306bd91a89" translate="yes" xml:space="preserve">
          <source>bool QTest::qWaitForWindowExposed(&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">bool QTest :: qWaitForWindowExposed ( &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="fd77bf11e37bb1dc6a2ff49b81e3881c47c427f9" translate="yes" xml:space="preserve">
          <source>bool QTest::qWaitForWindowExposed(&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="translated">bool QTest :: qWaitForWindowExposed ( &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="80cc60e54f61c27f01776bf2deb4b3b59d76e8ef" translate="yes" xml:space="preserve">
          <source>bool QTextBlock::contains(int</source>
          <target state="translated">부울 QTextBlock :: contains (int</target>
        </trans-unit>
        <trans-unit id="3d84f4f3ea7b62750a992823169aff51760e856c" translate="yes" xml:space="preserve">
          <source>bool QTextBlock::isValid() const</source>
          <target state="translated">bool QTextBlock :: isValid () const</target>
        </trans-unit>
        <trans-unit id="8e43a2a770b35a85f21af5cb2a6add6c745790b5" translate="yes" xml:space="preserve">
          <source>bool QTextBlock::isVisible() const</source>
          <target state="translated">bool QTextBlock :: isVisible () const</target>
        </trans-unit>
        <trans-unit id="bec63d4e803aa0868fcbdea2b423f87e6720ec6e" translate="yes" xml:space="preserve">
          <source>bool QTextBlock::operator!=(const QTextBlock &amp;amp;</source>
          <target state="translated">bool QTextBlock :: 연산자! = (const QTextBlock &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7363bbccb51c1f78d74db30b19310745ab1c25e3" translate="yes" xml:space="preserve">
          <source>bool QTextBlock::operator&amp;lt;(const QTextBlock &amp;amp;</source>
          <target state="translated">bool QTextBlock :: operator &amp;lt;(const QTextBlock &amp;amp;</target>
        </trans-unit>
        <trans-unit id="da774fa42ad0a4bb840392a98079c8a17ee38731" translate="yes" xml:space="preserve">
          <source>bool QTextBlock::operator==(const QTextBlock &amp;amp;</source>
          <target state="translated">bool QTextBlock :: operator == (const QTextBlock &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5f51a40301cedd0d4a399d884d79bf58191fc7dc" translate="yes" xml:space="preserve">
          <source>bool QTextBlockFormat::isValid() const</source>
          <target state="translated">bool QTextBlockFormat :: isValid () const</target>
        </trans-unit>
        <trans-unit id="b066bce34291cda8bf2936f70ea99bfb9446224f" translate="yes" xml:space="preserve">
          <source>bool QTextBlockFormat::nonBreakableLines() const</source>
          <target state="translated">bool QTextBlockFormat :: nonBreakableLines () const</target>
        </trans-unit>
        <trans-unit id="feea483a925db56b8483c10f7551378e01773fa2" translate="yes" xml:space="preserve">
          <source>bool QTextBoundaryFinder::isAtBoundary() const</source>
          <target state="translated">bool QTextBoundaryFinder :: isAtBoundary () const</target>
        </trans-unit>
        <trans-unit id="a6e997a69aba46bed9b72b95f4365a80244f12b9" translate="yes" xml:space="preserve">
          <source>bool QTextBoundaryFinder::isValid() const</source>
          <target state="translated">bool QTextBoundaryFinder :: isValid () const</target>
        </trans-unit>
        <trans-unit id="4cc02686752b9954316bb5730a9179319b485c1f" translate="yes" xml:space="preserve">
          <source>bool QTextBrowser::isBackwardAvailable() const</source>
          <target state="translated">bool QTextBrowser :: isBackwardAvailable () const</target>
        </trans-unit>
        <trans-unit id="06405dcc2c79c1121cc6a438b7b6962a47e777cd" translate="yes" xml:space="preserve">
          <source>bool QTextBrowser::isForwardAvailable() const</source>
          <target state="translated">bool QTextBrowser :: isForwardAvailable () const</target>
        </trans-unit>
        <trans-unit id="56238d7f5f901c1ea1d1c20fc07394554364d53d" translate="yes" xml:space="preserve">
          <source>bool QTextCharFormat::fontFixedPitch() const</source>
          <target state="translated">bool QTextCharFormat :: fontFixedPitch () const</target>
        </trans-unit>
        <trans-unit id="fc8a586d0365d34e6de8eeea95bc75eaccf5b636" translate="yes" xml:space="preserve">
          <source>bool QTextCharFormat::fontItalic() const</source>
          <target state="translated">bool QTextCharFormat :: fontItalic () const</target>
        </trans-unit>
        <trans-unit id="5d0f219a2e2947fd1c6fbe81b52344080635f96e" translate="yes" xml:space="preserve">
          <source>bool QTextCharFormat::fontKerning() const</source>
          <target state="translated">bool QTextCharFormat :: fontKerning () const</target>
        </trans-unit>
        <trans-unit id="029fc27d9d5434de86cc6110da7c38b03045f3a3" translate="yes" xml:space="preserve">
          <source>bool QTextCharFormat::fontOverline() const</source>
          <target state="translated">bool QTextCharFormat :: fontOverline () const</target>
        </trans-unit>
        <trans-unit id="ba64d76030ddc3e8d9114b019a095aade6e5890a" translate="yes" xml:space="preserve">
          <source>bool QTextCharFormat::fontStrikeOut() const</source>
          <target state="translated">bool QTextCharFormat :: fontStrikeOut () const</target>
        </trans-unit>
        <trans-unit id="b40e9d74408ec7922e5564207a5680c9aabeddc4" translate="yes" xml:space="preserve">
          <source>bool QTextCharFormat::fontUnderline() const</source>
          <target state="translated">bool QTextCharFormat :: fontUnderline () const</target>
        </trans-unit>
        <trans-unit id="c0e369a4d740af39a934178a2bb023ce71b2ac44" translate="yes" xml:space="preserve">
          <source>bool QTextCharFormat::isAnchor() const</source>
          <target state="translated">bool QTextCharFormat :: isAnchor () const</target>
        </trans-unit>
        <trans-unit id="066d066ae290c27b084db9205ba1c355176ebef1" translate="yes" xml:space="preserve">
          <source>bool QTextCharFormat::isValid() const</source>
          <target state="translated">bool QTextCharFormat :: isValid () const</target>
        </trans-unit>
        <trans-unit id="183223167abdd0a9227a722c0a4c00ab6274d244" translate="yes" xml:space="preserve">
          <source>bool QTextCodec::canEncode(&lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</source>
          <target state="translated">부울 QTextCodec :: canEncode ( &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="24b00aaa6d6d7a6d93ef4965f84c826a801f54a4" translate="yes" xml:space="preserve">
          <source>bool QTextCodec::canEncode(&lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt;</source>
          <target state="translated">bool QTextCodec :: canEncode ( &lt;a href=&quot;qstringview&quot;&gt;QStringView)&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f963e117af7182138fecc5c69ef6bc04afc827fb" translate="yes" xml:space="preserve">
          <source>bool QTextCodec::canEncode(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextCodec :: canEncode (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8576d7a946f4a6e110e1bd22c3adb1916828c512" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::atBlockEnd() const</source>
          <target state="translated">bool QTextCursor :: atBlockEnd () const</target>
        </trans-unit>
        <trans-unit id="290392ecfd92d358422b59ded58e014ca61ad0bf" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::atBlockStart() const</source>
          <target state="translated">bool QTextCursor :: atBlockStart () const</target>
        </trans-unit>
        <trans-unit id="adbd516a3fe4ed55dd665043ebfa24e5041db4b5" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::atEnd() const</source>
          <target state="translated">bool QTextCursor :: atEnd () const</target>
        </trans-unit>
        <trans-unit id="e1177074d813a62b189aca9edeaa9613acc3cdc5" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::atStart() const</source>
          <target state="translated">bool QTextCursor :: atStart () const</target>
        </trans-unit>
        <trans-unit id="590fb9a0cfaa97beff05b8aa6ae47a4b43a198ed" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::hasComplexSelection() const</source>
          <target state="translated">bool QTextCursor :: hasComplexSelection () const</target>
        </trans-unit>
        <trans-unit id="8ae41a7a28b18c533e2060f3cb3673d0007670e7" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::hasSelection() const</source>
          <target state="translated">bool QTextCursor :: hasSelection () const</target>
        </trans-unit>
        <trans-unit id="3e3fabf0e3cd190ad1659d4de3d9a8cc1aba68cf" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::isCopyOf(const &lt;a href=&quot;qtextcursor#QTextCursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextCursor :: isCopyOf (const &lt;a href=&quot;qtextcursor#QTextCursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7c73c30d85f0ba2bbcc3596ff5584a717da34638" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::isNull() const</source>
          <target state="translated">bool QTextCursor :: isNull () const</target>
        </trans-unit>
        <trans-unit id="2503730b6fedd59a267cc37f88dc12fa5de76104" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::keepPositionOnInsert() const</source>
          <target state="translated">bool QTextCursor :: keepPositionOnInsert () const</target>
        </trans-unit>
        <trans-unit id="2f17da10afe0e1b64b55ee3fc5bc2cb6dc5458f8" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::movePosition(&lt;a href=&quot;qtextcursor#MoveOperation-enum&quot;&gt;QTextCursor::MoveOperation&lt;/a&gt;</source>
          <target state="translated">부울 QTextCursor :: movePosition ( &lt;a href=&quot;qtextcursor#MoveOperation-enum&quot;&gt;QTextCursor :: MoveOperation&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5f6a1120235ea7bbd18e651bdf9b934c23b7ac43" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::operator!=(const &lt;a href=&quot;qtextcursor#QTextCursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextCursor :: 연산자! = (const &lt;a href=&quot;qtextcursor#QTextCursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6a39c6de6c2ad515e318686fc11528c651b68d5d" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::operator&amp;gt;(const &lt;a href=&quot;qtextcursor#QTextCursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextCursor :: 연산자&amp;gt; (const &lt;a href=&quot;qtextcursor#QTextCursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="93631fa71fa7f44eae78b9130ac18bdcaaa996a6" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::operator&amp;gt;=(const &lt;a href=&quot;qtextcursor#QTextCursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextCursor :: operator&amp;gt; = (const &lt;a href=&quot;qtextcursor#QTextCursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b72fcaac9398b8afdfb7f29a5dc8108bcae28850" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::operator&amp;lt;(const &lt;a href=&quot;qtextcursor#QTextCursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextCursor :: 연산자 &amp;lt;(const &lt;a href=&quot;qtextcursor#QTextCursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bcf1cf858ec523a7859f93c0315b999357f78805" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::operator&amp;lt;=(const &lt;a href=&quot;qtextcursor#QTextCursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextCursor :: 연산자 &amp;lt;= (const &lt;a href=&quot;qtextcursor#QTextCursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="cc415bf7adc3e1d9ece34fed8cd1192289846815" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::operator==(const &lt;a href=&quot;qtextcursor#QTextCursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextCursor :: operator == (const &lt;a href=&quot;qtextcursor#QTextCursor&quot;&gt;QTextCursor&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b8f27fdd0b597ad3d02f143639dc9fb2e6ac3402" translate="yes" xml:space="preserve">
          <source>bool QTextCursor::visualNavigation() const</source>
          <target state="translated">bool QTextCursor :: visualNavigation () const</target>
        </trans-unit>
        <trans-unit id="95a00567c98c10aeb584d3a570e654442de7f8e6" translate="yes" xml:space="preserve">
          <source>bool QTextDocument::isEmpty() const</source>
          <target state="translated">bool QTextDocument :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="610251f6164d62108282b67b97047d3bbb09b992" translate="yes" xml:space="preserve">
          <source>bool QTextDocument::isRedoAvailable() const</source>
          <target state="translated">bool QTextDocument :: isRedoAvailable () const</target>
        </trans-unit>
        <trans-unit id="048793efe4548d3475775654d084b5eb481edb8d" translate="yes" xml:space="preserve">
          <source>bool QTextDocument::isUndoAvailable() const</source>
          <target state="translated">bool QTextDocument :: isUndoAvailable () const</target>
        </trans-unit>
        <trans-unit id="6c8db633c1bb11348f929bd6b5cfb1b448c92c09" translate="yes" xml:space="preserve">
          <source>bool QTextDocumentFragment::isEmpty() const</source>
          <target state="translated">bool QTextDocumentFragment :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="7c96686b741e6ba36f2ab0eb5e7e8047c944abe7" translate="yes" xml:space="preserve">
          <source>bool QTextDocumentWriter::write(const &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; *</source>
          <target state="translated">bool QTextDocumentWriter :: write (const &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="354800fe686a6ed3093ee61f8dfeeb355313d5be" translate="yes" xml:space="preserve">
          <source>bool QTextDocumentWriter::write(const &lt;a href=&quot;qtextdocumentfragment&quot;&gt;QTextDocumentFragment&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextDocumentWriter :: write (const &lt;a href=&quot;qtextdocumentfragment&quot;&gt;QTextDocumentFragment&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b2c08c399640bbfa34d12dd10aeecfa2f8984cac" translate="yes" xml:space="preserve">
          <source>bool QTextEdit::canPaste() const</source>
          <target state="translated">bool QTextEdit :: canPaste () const</target>
        </trans-unit>
        <trans-unit id="120fb50aa1c655910996ff11c4ae71609e5ce311" translate="yes" xml:space="preserve">
          <source>bool QTextEdit::find(const &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextEdit :: find (const &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="32c7a5701f30888b579cce923ebd067cf843b895" translate="yes" xml:space="preserve">
          <source>bool QTextEdit::find(const &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextEdit :: find (const &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7d0b41c05dc4125377a3bf2b8b68aa45aad43cb4" translate="yes" xml:space="preserve">
          <source>bool QTextEdit::find(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextEdit :: find (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ef7c0008aa7f77e1e52fd6cdadbad083032db2de" translate="yes" xml:space="preserve">
          <source>bool QTextEdit::fontItalic() const</source>
          <target state="translated">bool QTextEdit :: fontItalic () const</target>
        </trans-unit>
        <trans-unit id="bd8072f304cc3a7c449ca21bc95755f580636e33" translate="yes" xml:space="preserve">
          <source>bool QTextEdit::fontUnderline() const</source>
          <target state="translated">bool QTextEdit :: fontUnderline () const</target>
        </trans-unit>
        <trans-unit id="c75055976ee5624c92a9393152c6c9db7e6d0a5d" translate="yes" xml:space="preserve">
          <source>bool QTextFormat::boolProperty(int</source>
          <target state="translated">bool QTextFormat :: boolProperty (int</target>
        </trans-unit>
        <trans-unit id="398b01603325e4b02c68659efef145f98fec1de1" translate="yes" xml:space="preserve">
          <source>bool QTextFormat::hasProperty(int</source>
          <target state="translated">bool QTextFormat :: hasProperty (int</target>
        </trans-unit>
        <trans-unit id="6b14f5e60b4bb28f9b1075d56dfe4890e0c4c5a2" translate="yes" xml:space="preserve">
          <source>bool QTextFormat::isBlockFormat() const</source>
          <target state="translated">bool QTextFormat :: isBlockFormat () const</target>
        </trans-unit>
        <trans-unit id="f3c3fb4f403ff6c3f2f165085b9e08fc8d73dbcf" translate="yes" xml:space="preserve">
          <source>bool QTextFormat::isCharFormat() const</source>
          <target state="translated">bool QTextFormat :: isCharFormat () const</target>
        </trans-unit>
        <trans-unit id="1610700b6b68d2da4bfd2e439263abe96cff487c" translate="yes" xml:space="preserve">
          <source>bool QTextFormat::isEmpty() const</source>
          <target state="translated">bool QTextFormat :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="8f894b6c5700894cda8aeb2476479c67f1934e2b" translate="yes" xml:space="preserve">
          <source>bool QTextFormat::isFrameFormat() const</source>
          <target state="translated">bool QTextFormat :: isFrameFormat () const</target>
        </trans-unit>
        <trans-unit id="ec21b1a67105c9631e22aaaa0479ec62d3b7e890" translate="yes" xml:space="preserve">
          <source>bool QTextFormat::isImageFormat() const</source>
          <target state="translated">bool QTextFormat :: isImageFormat () const</target>
        </trans-unit>
        <trans-unit id="7c2e8a0fbe82edddbb29870626fa4e095a8b8090" translate="yes" xml:space="preserve">
          <source>bool QTextFormat::isListFormat() const</source>
          <target state="translated">bool QTextFormat :: isListFormat () const</target>
        </trans-unit>
        <trans-unit id="34d99cca7842b7de109cf8eff4e1bdd515a975b4" translate="yes" xml:space="preserve">
          <source>bool QTextFormat::isTableCellFormat() const</source>
          <target state="translated">bool QTextFormat :: isTableCellFormat () const</target>
        </trans-unit>
        <trans-unit id="1aec52d8a38321152cf0f582d2a72ac0c828369d" translate="yes" xml:space="preserve">
          <source>bool QTextFormat::isTableFormat() const</source>
          <target state="translated">bool QTextFormat :: isTableFormat () const</target>
        </trans-unit>
        <trans-unit id="7398ae27af4f6269c59b7886a35c049fb4bb295e" translate="yes" xml:space="preserve">
          <source>bool QTextFormat::isValid() const</source>
          <target state="translated">bool QTextFormat :: isValid () const</target>
        </trans-unit>
        <trans-unit id="565619979345bfdd26cc3a79ad461bdb29236116" translate="yes" xml:space="preserve">
          <source>bool QTextFormat::operator!=(const &lt;a href=&quot;qtextformat#QTextFormat&quot;&gt;QTextFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextFormat :: operator! = (const &lt;a href=&quot;qtextformat#QTextFormat&quot;&gt;QTextFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="88dac99887e87542284e77757abb943c7162eb18" translate="yes" xml:space="preserve">
          <source>bool QTextFormat::operator==(const &lt;a href=&quot;qtextformat#QTextFormat&quot;&gt;QTextFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextFormat :: operator == (const &lt;a href=&quot;qtextformat#QTextFormat&quot;&gt;QTextFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a0868c4588be4bfa27410dcd842498a0336e4473" translate="yes" xml:space="preserve">
          <source>bool QTextFragment::contains(int</source>
          <target state="translated">bool QTextFragment :: contains (int 포함</target>
        </trans-unit>
        <trans-unit id="c76176ee336fc24b429a6f7fc6b49269322b9e2a" translate="yes" xml:space="preserve">
          <source>bool QTextFragment::isValid() const</source>
          <target state="translated">bool QTextFragment :: isValid () const</target>
        </trans-unit>
        <trans-unit id="186affb41cd3ee865e17805b3a9f1ceb0da8c96c" translate="yes" xml:space="preserve">
          <source>bool QTextFragment::operator!=(const QTextFragment &amp;amp;</source>
          <target state="translated">bool QTextFragment :: 연산자! = (const QTextFragment &amp;amp;</target>
        </trans-unit>
        <trans-unit id="aa42d649d152656108f0421df2e92e61a75e3269" translate="yes" xml:space="preserve">
          <source>bool QTextFragment::operator&amp;lt;(const QTextFragment &amp;amp;</source>
          <target state="translated">bool QTextFragment :: operator &amp;lt;(const QTextFragment &amp;amp;</target>
        </trans-unit>
        <trans-unit id="73bd00cfefb4c1e8928310c7b26d8793ef7266b5" translate="yes" xml:space="preserve">
          <source>bool QTextFragment::operator==(const QTextFragment &amp;amp;</source>
          <target state="translated">부울 QTextFragment :: operator == (const QTextFragment &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d63318a648a556c6d1b0b9bd294365b076f9cdca" translate="yes" xml:space="preserve">
          <source>bool QTextFrameFormat::isValid() const</source>
          <target state="translated">bool QTextFrameFormat :: isValid () const</target>
        </trans-unit>
        <trans-unit id="751e65ab2cdf2e2d4cd35c366220d7546d37a62b" translate="yes" xml:space="preserve">
          <source>bool QTextImageFormat::isValid() const</source>
          <target state="translated">bool QTextImageFormat :: isValid () const</target>
        </trans-unit>
        <trans-unit id="32b883ee7801225ae46a61db225d9e3fa7cce722" translate="yes" xml:space="preserve">
          <source>bool QTextInlineObject::isValid() const</source>
          <target state="translated">bool QTextInlineObject :: isValid () const</target>
        </trans-unit>
        <trans-unit id="e470cc53097aa6f8fe1a78e3d959979f18002166" translate="yes" xml:space="preserve">
          <source>bool QTextLayout::cacheEnabled() const</source>
          <target state="translated">bool QTextLayout :: cacheEnabled () const</target>
        </trans-unit>
        <trans-unit id="65be1aefd447451ecc8b145f058245167325d7a1" translate="yes" xml:space="preserve">
          <source>bool QTextLayout::isValidCursorPosition(int</source>
          <target state="translated">bool QTextLayout :: isValidCursorPosition (int</target>
        </trans-unit>
        <trans-unit id="2f88a328fdbeafa4c4c8688643634e774f8929d0" translate="yes" xml:space="preserve">
          <source>bool QTextLength::operator!=(const &lt;a href=&quot;qtextlength#QTextLength&quot;&gt;QTextLength&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextLength :: 연산자! = (const &lt;a href=&quot;qtextlength#QTextLength&quot;&gt;QTextLength&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a8fed2a58c15eed166a3595a8a9dbd9bac4d30f2" translate="yes" xml:space="preserve">
          <source>bool QTextLength::operator==(const &lt;a href=&quot;qtextlength#QTextLength&quot;&gt;QTextLength&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextLength :: operator == (const &lt;a href=&quot;qtextlength#QTextLength&quot;&gt;QTextLength&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2b43bb0ae44046aa116a4c256a6b247ffceb6415" translate="yes" xml:space="preserve">
          <source>bool QTextLine::isValid() const</source>
          <target state="translated">bool QTextLine :: isValid () const</target>
        </trans-unit>
        <trans-unit id="7295602ca1b2d79693bfbf13868eb51bdbbe61ba" translate="yes" xml:space="preserve">
          <source>bool QTextLine::leadingIncluded() const</source>
          <target state="translated">bool QTextLine :: leadingIncluded () const</target>
        </trans-unit>
        <trans-unit id="884b5c8034dc2d5f71f26a44ef5a1c6761f46502" translate="yes" xml:space="preserve">
          <source>bool QTextListFormat::isValid() const</source>
          <target state="translated">bool QTextListFormat :: isValid () const</target>
        </trans-unit>
        <trans-unit id="1c49180324fbb96b633e03ee9521145a9e7c95c9" translate="yes" xml:space="preserve">
          <source>bool QTextOption::useDesignMetrics() const</source>
          <target state="translated">bool QTextOption :: useDesignMetrics () const</target>
        </trans-unit>
        <trans-unit id="d8dd08398924de9fd6d25a63aed94fc35cd3e62a" translate="yes" xml:space="preserve">
          <source>bool QTextStream::atEnd() const</source>
          <target state="translated">bool QTextStream :: atEnd () const</target>
        </trans-unit>
        <trans-unit id="8da27fa2e91cdd3fe4c05c9a302ef7edfa58e390" translate="yes" xml:space="preserve">
          <source>bool QTextStream::autoDetectUnicode() const</source>
          <target state="translated">bool QTextStream :: autoDetectUnicode () const</target>
        </trans-unit>
        <trans-unit id="7b554160f1ed5acfa8f7c8086cc7083b3a6f81a0" translate="yes" xml:space="preserve">
          <source>bool QTextStream::generateByteOrderMark() const</source>
          <target state="translated">bool QTextStream :: generateByteOrderMark () const</target>
        </trans-unit>
        <trans-unit id="10abb91f64441653d5ae8b8ba975eba1976db34f" translate="yes" xml:space="preserve">
          <source>bool QTextStream::readLineInto(&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; *</source>
          <target state="translated">bool QTextStream :: readLineInto ( &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2ced347762af25ba9e799e328be376cc2e858220" translate="yes" xml:space="preserve">
          <source>bool QTextStream::seek(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">bool QTextStream :: seek ( &lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e228b895ea17f48ba0676ddad7d4206b9d51ca4c" translate="yes" xml:space="preserve">
          <source>bool QTextTableCell::isValid() const</source>
          <target state="translated">bool QTextTableCell :: isValid () const</target>
        </trans-unit>
        <trans-unit id="10164493de836a188a96eb1616890154f9c49f67" translate="yes" xml:space="preserve">
          <source>bool QTextTableCell::operator!=(const &lt;a href=&quot;qtexttablecell#QTextTableCell&quot;&gt;QTextTableCell&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTextTableCell :: operator! = (const &lt;a href=&quot;qtexttablecell#QTextTableCell&quot;&gt;QTextTableCell&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6b937ea7c67366bdbbd9cf27c7bf1b717431fd79" translate="yes" xml:space="preserve">
          <source>bool QTextTableCell::operator==(const &lt;a href=&quot;qtexttablecell#QTextTableCell&quot;&gt;QTextTableCell&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QTextTableCell :: operator == (const &lt;a href=&quot;qtexttablecell#QTextTableCell&quot;&gt;QTextTableCell&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7e4c93b1f2ef6d96a4f5d4096b926d86527b039c" translate="yes" xml:space="preserve">
          <source>bool QTextTableCellFormat::isValid() const</source>
          <target state="translated">bool QTextTableCellFormat :: isValid () const</target>
        </trans-unit>
        <trans-unit id="7752deca7227eb04790bf7456915a9e7bc131cc0" translate="yes" xml:space="preserve">
          <source>bool QTextTableFormat::borderCollapse() const</source>
          <target state="translated">bool QTextTableFormat::borderCollapse() const</target>
        </trans-unit>
        <trans-unit id="0f2db4d69e0822f523168afce987180bb66a7c7d" translate="yes" xml:space="preserve">
          <source>bool QTextTableFormat::isValid() const</source>
          <target state="translated">bool QTextTableFormat :: isValid () const</target>
        </trans-unit>
        <trans-unit id="f5186c076f6b29f2abe124963a9cbe5faaf20b39" translate="yes" xml:space="preserve">
          <source>bool QTextureData::isAutoMipMapGenerationEnabled() const</source>
          <target state="translated">bool QTextureData :: isAutoMipMapGenerationEnabled () const</target>
        </trans-unit>
        <trans-unit id="c1e460bd49942bad8debeadbdc505fb2fdac79f0" translate="yes" xml:space="preserve">
          <source>bool QTextureImage::isMirrored() const</source>
          <target state="translated">bool QTextureImage :: isMirrored () const</target>
        </trans-unit>
        <trans-unit id="9f8002b9ebfc6ad005a1cdaa5b98438b6b881137" translate="yes" xml:space="preserve">
          <source>bool QTextureImageData::isCompressed() const</source>
          <target state="translated">bool QTextureImageData :: isCompressed () const</target>
        </trans-unit>
        <trans-unit id="b7ddf713c43ae95b46b396dba7f818d9beb8d7d8" translate="yes" xml:space="preserve">
          <source>bool QThread::isFinished() const</source>
          <target state="translated">bool QThread :: isFinished () const</target>
        </trans-unit>
        <trans-unit id="404d1a6c9d15733ce9f18064b9a622fbc0185c55" translate="yes" xml:space="preserve">
          <source>bool QThread::isInterruptionRequested() const</source>
          <target state="translated">bool QThread :: isInterruptionRequested () const</target>
        </trans-unit>
        <trans-unit id="5f3117dad011e77828d6f4245da23ddf137b2d88" translate="yes" xml:space="preserve">
          <source>bool QThread::isRunning() const</source>
          <target state="translated">bool QThread :: isRunning () const</target>
        </trans-unit>
        <trans-unit id="163bb3dbe45011412d5b56c09bb0782c80684e70" translate="yes" xml:space="preserve">
          <source>bool QThread::wait(&lt;a href=&quot;qdeadlinetimer&quot;&gt;QDeadlineTimer&lt;/a&gt;</source>
          <target state="translated">bool QThread::wait(&lt;a href=&quot;qdeadlinetimer&quot;&gt;QDeadlineTimer&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="34d5c881dc47e075ac38b04721e21ec72b1778a0" translate="yes" xml:space="preserve">
          <source>bool QThread::wait(unsignedlong</source>
          <target state="translated">bool QThread :: wait (부호없는 long</target>
        </trans-unit>
        <trans-unit id="2b42ca6163e39bcb7aba99aa1fbc2fc615996a2e" translate="yes" xml:space="preserve">
          <source>bool QThreadPool::contains(const &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; *</source>
          <target state="translated">bool QThreadPool::contains(const &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="188244aa9b3ca563f7501d8725bd08209c505376" translate="yes" xml:space="preserve">
          <source>bool QThreadPool::tryStart(&lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; *</source>
          <target state="translated">bool QThreadPool :: tryStart ( &lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="602d2568d792c272a34b50a4b518e9d005ee69d8" translate="yes" xml:space="preserve">
          <source>bool QThreadPool::tryStart(std::function&amp;lt;void ()&amp;gt;</source>
          <target state="translated">bool QThreadPool::tryStart(std::function&amp;lt;void ()&amp;gt;</target>
        </trans-unit>
        <trans-unit id="8a9975e9bfdb3bbfbdf380777d911d5ffbe8ea2c" translate="yes" xml:space="preserve">
          <source>bool QThreadPool::tryTake(&lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; *</source>
          <target state="translated">bool QThreadPool :: tryTake ( &lt;a href=&quot;qrunnable&quot;&gt;QRunnable&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="a232d071dc235d50f4e1c2bff07f303a24a4e496" translate="yes" xml:space="preserve">
          <source>bool QThreadPool::waitForDone(int</source>
          <target state="translated">bool QThreadPool :: waitForDone (int</target>
        </trans-unit>
        <trans-unit id="b7def648e9b9b30f474607a189ec00c72713a0a9" translate="yes" xml:space="preserve">
          <source>bool QThreadStorage::hasLocalData() const</source>
          <target state="translated">bool QThreadStorage :: hasLocalData () const</target>
        </trans-unit>
        <trans-unit id="d204e6c1cd3d40f066b391f4db27bc89b31fcecf" translate="yes" xml:space="preserve">
          <source>bool QTime::isNull() const</source>
          <target state="translated">bool QTime :: isNull () const</target>
        </trans-unit>
        <trans-unit id="a9e136b1891e34987b543ffc485ca1baff7843ec" translate="yes" xml:space="preserve">
          <source>bool QTime::isValid() const</source>
          <target state="translated">bool QTime :: isValid () const</target>
        </trans-unit>
        <trans-unit id="049053ca92ad8c17758c3ef19322e0db744a9517" translate="yes" xml:space="preserve">
          <source>bool QTime::operator!=(const QTime &amp;amp;</source>
          <target state="translated">bool QTime :: 연산자! = (const QTime &amp;amp;</target>
        </trans-unit>
        <trans-unit id="10ecdf656f903679523c0925f8f2d9bb49b5db0d" translate="yes" xml:space="preserve">
          <source>bool QTime::operator&amp;gt;(const QTime &amp;amp;</source>
          <target state="translated">bool QTime :: 연산자&amp;gt; (const QTime &amp;amp;</target>
        </trans-unit>
        <trans-unit id="00cc6b699b77e2418f898aa50c06cc042bcac2db" translate="yes" xml:space="preserve">
          <source>bool QTime::operator&amp;gt;=(const QTime &amp;amp;</source>
          <target state="translated">bool QTime :: 연산자&amp;gt; = (const QTime &amp;amp;</target>
        </trans-unit>
        <trans-unit id="126c2855bf2e928f5d1f1aa3db7612924cb14e59" translate="yes" xml:space="preserve">
          <source>bool QTime::operator&amp;lt;(const QTime &amp;amp;</source>
          <target state="translated">bool QTime :: 연산자 &amp;lt;(const QTime &amp;amp;</target>
        </trans-unit>
        <trans-unit id="85b519b733dfac6056505bb79425d5788c6a6e0d" translate="yes" xml:space="preserve">
          <source>bool QTime::operator&amp;lt;=(const QTime &amp;amp;</source>
          <target state="translated">bool QTime :: 연산자 &amp;lt;= (const QTime &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5e5fd0907efb7175f2c203bf981047ca17c0d09a" translate="yes" xml:space="preserve">
          <source>bool QTime::operator==(const QTime &amp;amp;</source>
          <target state="translated">부울 QTime :: 연산자 == (const QTime &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7429f099063baf18f1f59675fb0f3021e74d1f4c" translate="yes" xml:space="preserve">
          <source>bool QTime::setHMS(int</source>
          <target state="translated">부울 QTime :: setHMS (INT</target>
        </trans-unit>
        <trans-unit id="66b4683dbbd9637666a8aed5bab0cb07652e20ec" translate="yes" xml:space="preserve">
          <source>bool QTimeZone::hasDaylightTime() const</source>
          <target state="translated">bool QTimeZone :: hasDaylightTime () const</target>
        </trans-unit>
        <trans-unit id="9edd1d6c6a757f732532b706c9a945ea62385a52" translate="yes" xml:space="preserve">
          <source>bool QTimeZone::hasTransitions() const</source>
          <target state="translated">bool QTimeZone :: hasTransitions () const</target>
        </trans-unit>
        <trans-unit id="ab5665fd2836a402f9fef48954040c2cca245424" translate="yes" xml:space="preserve">
          <source>bool QTimeZone::isDaylightTime(const &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QTimeZone :: isDaylightTime (const &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4888d58c34314f16bd009ce9993736669aa6352a" translate="yes" xml:space="preserve">
          <source>bool QTimeZone::isValid() const</source>
          <target state="translated">bool QTimeZone :: isValid () const</target>
        </trans-unit>
        <trans-unit id="03d0b68e27d68aa58e566da5fc18d14bcf1e9151" translate="yes" xml:space="preserve">
          <source>bool QTimeZone::operator!=(const &lt;a href=&quot;qtimezone#QTimeZone&quot;&gt;QTimeZone&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTimeZone :: 연산자! = (const &lt;a href=&quot;qtimezone#QTimeZone&quot;&gt;QTimeZone&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b0bdf41b92fb7a24e2ff2885dafb2caeddf46258" translate="yes" xml:space="preserve">
          <source>bool QTimeZone::operator==(const &lt;a href=&quot;qtimezone#QTimeZone&quot;&gt;QTimeZone&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QTimeZone :: operator == (const &lt;a href=&quot;qtimezone#QTimeZone&quot;&gt;QTimeZone&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="66a987ed435ac03119218cd498cd011502b298b5" translate="yes" xml:space="preserve">
          <source>bool QTimer::isActive() const</source>
          <target state="translated">bool QTimer :: isActive () const</target>
        </trans-unit>
        <trans-unit id="3d989c2660fa8633222cd057cc64f2b45cda897b" translate="yes" xml:space="preserve">
          <source>bool QToolBar::isAreaAllowed(&lt;a href=&quot;qt#ToolBarArea-enum&quot;&gt;Qt::ToolBarArea&lt;/a&gt;</source>
          <target state="translated">부울 QToolBar :: isAreaAllowed ( &lt;a href=&quot;qt#ToolBarArea-enum&quot;&gt;Qt :: ToolBarArea&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="902bdb76bde52ad295d08b28290bc84936ea5318" translate="yes" xml:space="preserve">
          <source>bool QToolBox::isItemEnabled(int</source>
          <target state="translated">bool QToolBox :: isItemEnabled (int</target>
        </trans-unit>
        <trans-unit id="5ff3e290cb13c54f7276d6a9125d10bb10848ed4" translate="yes" xml:space="preserve">
          <source>bool QTransform::isAffine() const</source>
          <target state="translated">bool QTransform :: isAffine () const</target>
        </trans-unit>
        <trans-unit id="c0670730b6e14eee2896a379f50c203899c546f8" translate="yes" xml:space="preserve">
          <source>bool QTransform::isIdentity() const</source>
          <target state="translated">bool QTransform :: isIdentity () const</target>
        </trans-unit>
        <trans-unit id="2c3da48fdece53726b3c31bfc800f25668a76575" translate="yes" xml:space="preserve">
          <source>bool QTransform::isInvertible() const</source>
          <target state="translated">부울 QTransform :: isInvertible () const</target>
        </trans-unit>
        <trans-unit id="f8c9c420fdedd56441a458466a8353e076de9c9e" translate="yes" xml:space="preserve">
          <source>bool QTransform::isRotating() const</source>
          <target state="translated">bool QTransform :: isRotating () const</target>
        </trans-unit>
        <trans-unit id="46c664463d662ae50f8753da4b2dbf902679187a" translate="yes" xml:space="preserve">
          <source>bool QTransform::isScaling() const</source>
          <target state="translated">bool QTransform :: isScaling () const</target>
        </trans-unit>
        <trans-unit id="223f58b31d37715ceacc056f271c589c4960a11a" translate="yes" xml:space="preserve">
          <source>bool QTransform::isTranslating() const</source>
          <target state="translated">bool QTransform :: isTranslating () const</target>
        </trans-unit>
        <trans-unit id="4051871d4471f4559a56cbeb67f1325c777c0287" translate="yes" xml:space="preserve">
          <source>bool QTransform::operator!=(const QTransform &amp;amp;</source>
          <target state="translated">bool QTransform :: 연산자! = (const QTransform &amp;amp;</target>
        </trans-unit>
        <trans-unit id="18ce6a4c0083d859ad10f79e8f63c94343b6c679" translate="yes" xml:space="preserve">
          <source>bool QTransform::operator==(const QTransform &amp;amp;</source>
          <target state="translated">부울 QTransform :: 연산자 == (const QTransform &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1197c1d450f9806ba966c08c54fbe934906f4641" translate="yes" xml:space="preserve">
          <source>bool QTransform::qFuzzyCompare(const QTransform &amp;amp;</source>
          <target state="translated">부울 QTransform :: qFuzzyCompare (const QTransform &amp;amp;</target>
        </trans-unit>
        <trans-unit id="88483531786ca562a6640f776234c0de960da6c2" translate="yes" xml:space="preserve">
          <source>bool QTranslator::load(const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QTranslator :: load (const &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="63bf34a91ffe36f0dd762305687ec5304d6d9c40" translate="yes" xml:space="preserve">
          <source>bool QTranslator::load(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QTranslator :: load (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="da7b9999f42277973e3a819706d631812dfac4f8" translate="yes" xml:space="preserve">
          <source>bool QTranslator::load(const &lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt; *</source>
          <target state="translated">bool QTranslator :: load (const &lt;a href=&quot;qtglobal#uchar-typedef&quot;&gt;uchar&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="77808570b6e457111b7d7684ecdd1eea4641541c" translate="yes" xml:space="preserve">
          <source>bool QTreeView::isColumnHidden(int</source>
          <target state="translated">bool QTreeView :: isColumnHidden (int</target>
        </trans-unit>
        <trans-unit id="e59aee79282f2f9ee39586c006cec39f81298f86" translate="yes" xml:space="preserve">
          <source>bool QTreeView::isExpanded(const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QTreeView :: isExpanded (const &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d7e822b1ac6302a3a281a9cf9b49ed5aab721404" translate="yes" xml:space="preserve">
          <source>bool QTreeView::isFirstColumnSpanned(int</source>
          <target state="translated">bool QTreeView :: isFirstColumnSpanned (int</target>
        </trans-unit>
        <trans-unit id="d64c1974ea936e19f4a3540e2886e59fe54dcc94" translate="yes" xml:space="preserve">
          <source>bool QTreeView::isRowHidden(int</source>
          <target state="translated">bool QTreeView :: isRowHidden (int</target>
        </trans-unit>
        <trans-unit id="3d6cbe88f2339fdb913d875e3826189947ba3b2f" translate="yes" xml:space="preserve">
          <source>bool QTreeWidget::isPersistentEditorOpen(&lt;a href=&quot;qtreewidgetitem&quot;&gt;QTreeWidgetItem&lt;/a&gt; *</source>
          <target state="translated">bool QTreeWidget :: isPersistentEditorOpen ( &lt;a href=&quot;qtreewidgetitem&quot;&gt;QTreeWidgetItem&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="8ba2ad58bf76d5c64348d0b88f97ae2cc7df58b6" translate="yes" xml:space="preserve">
          <source>bool QTreeWidgetItem::isDisabled() const</source>
          <target state="translated">bool QTreeWidgetItem :: isDisabled () const</target>
        </trans-unit>
        <trans-unit id="6b23765f6cc33302bc86137597cd86d464a40e79" translate="yes" xml:space="preserve">
          <source>bool QTreeWidgetItem::isExpanded() const</source>
          <target state="translated">bool QTreeWidgetItem :: isExpanded () const</target>
        </trans-unit>
        <trans-unit id="0a582a3ae163b6ded0e73aa3a5876fe158e8f395" translate="yes" xml:space="preserve">
          <source>bool QTreeWidgetItem::isFirstColumnSpanned() const</source>
          <target state="translated">bool QTreeWidgetItem :: isFirstColumnSpanned () const</target>
        </trans-unit>
        <trans-unit id="1614b44bbe7b08a8d6a155197b40612e1d5bac1c" translate="yes" xml:space="preserve">
          <source>bool QTreeWidgetItem::isHidden() const</source>
          <target state="translated">bool QTreeWidgetItem :: isHidden () const</target>
        </trans-unit>
        <trans-unit id="cba97ae00985a1ce3068e6406ed1f0517d1e2d3a" translate="yes" xml:space="preserve">
          <source>bool QTreeWidgetItem::isSelected() const</source>
          <target state="translated">bool QTreeWidgetItem :: isSelected () const</target>
        </trans-unit>
        <trans-unit id="c903a5dc19501c43747bcb8f86ff977065b743cc" translate="yes" xml:space="preserve">
          <source>bool QUdpSocket::hasPendingDatagrams() const</source>
          <target state="translated">bool QUdpSocket :: hasPendingDatagrams () const</target>
        </trans-unit>
        <trans-unit id="2e6e99d903ad176994a43d93560647112bb4d556" translate="yes" xml:space="preserve">
          <source>bool QUdpSocket::joinMulticastGroup(const &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QUdpSocket :: joinMulticastGroup (const &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dc7e61775115c6bac671607258a6c45e04ef2b6b" translate="yes" xml:space="preserve">
          <source>bool QUdpSocket::leaveMulticastGroup(const &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QUdpSocket :: leaveMulticastGroup (const &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5aef1afc21e53d54975a9c59f7b3b2bc75ba1606" translate="yes" xml:space="preserve">
          <source>bool QUiLoader::isLanguageChangeEnabled() const</source>
          <target state="translated">bool QUiLoader :: isLanguageChangeEnabled () const</target>
        </trans-unit>
        <trans-unit id="7c759953060f0050c415ec6620c98315d19c68d7" translate="yes" xml:space="preserve">
          <source>bool QUndoCommand::isObsolete() const</source>
          <target state="translated">bool QUndoCommand :: isObsolete () const</target>
        </trans-unit>
        <trans-unit id="0d252aa9f9d304b1104a34edda12ed9e3b8c4ceb" translate="yes" xml:space="preserve">
          <source>bool QUndoGroup::canRedo() const</source>
          <target state="translated">bool QUndoGroup :: canRedo () const</target>
        </trans-unit>
        <trans-unit id="784f9da71e897740e34533f409feb09c1b3b989a" translate="yes" xml:space="preserve">
          <source>bool QUndoGroup::canUndo() const</source>
          <target state="translated">bool QUndoGroup :: canUndo () const</target>
        </trans-unit>
        <trans-unit id="24c4d23712dc31585bb8ae78aaf218f45c8dce90" translate="yes" xml:space="preserve">
          <source>bool QUndoGroup::isClean() const</source>
          <target state="translated">bool QUndoGroup :: isClean () const</target>
        </trans-unit>
        <trans-unit id="dbf11ae4e2d10f9145519d385fa364af1ac0cf08" translate="yes" xml:space="preserve">
          <source>bool QUndoStack::canRedo() const</source>
          <target state="translated">bool QUndoStack :: canRedo () const</target>
        </trans-unit>
        <trans-unit id="7a06b7da9d26ff7c7665e92ba10a26e7924c9e95" translate="yes" xml:space="preserve">
          <source>bool QUndoStack::canUndo() const</source>
          <target state="translated">bool QUndoStack :: canUndo () const</target>
        </trans-unit>
        <trans-unit id="cb50292d6ec970b5594046ed59597f5fd2686a26" translate="yes" xml:space="preserve">
          <source>bool QUndoStack::isClean() const</source>
          <target state="translated">bool QUndoStack :: isClean () const</target>
        </trans-unit>
        <trans-unit id="2dae2e8f08941be4ba99cf37f46e86bbe21abed1" translate="yes" xml:space="preserve">
          <source>bool QUrl::hasFragment() const</source>
          <target state="translated">부울 QUrl :: hasFragment () const</target>
        </trans-unit>
        <trans-unit id="90d4cd978f7ab09640704fc2cf7621fc099713cc" translate="yes" xml:space="preserve">
          <source>bool QUrl::hasQuery() const</source>
          <target state="translated">부울 QUrl :: hasQuery () const</target>
        </trans-unit>
        <trans-unit id="c05953175d63b5270e4af19e76393eb148e2019b" translate="yes" xml:space="preserve">
          <source>bool QUrl::isEmpty() const</source>
          <target state="translated">bool QUrl :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="dfe998e95b668a55eb8aab199789b5bdf6511f67" translate="yes" xml:space="preserve">
          <source>bool QUrl::isLocalFile() const</source>
          <target state="translated">부울 QUrl :: isLocalFile () const</target>
        </trans-unit>
        <trans-unit id="040f952bb6d2df06bcb143eb6ef940a57db4f812" translate="yes" xml:space="preserve">
          <source>bool QUrl::isParentOf(const &lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QUrl :: isParentOf (const &lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ad26dfdca67b3c5303c03305e8427178947a4f62" translate="yes" xml:space="preserve">
          <source>bool QUrl::isRelative() const</source>
          <target state="translated">부울 QUrl :: isRelative () const</target>
        </trans-unit>
        <trans-unit id="eb53051a58c84e69f1674e941dce4fb2f088621e" translate="yes" xml:space="preserve">
          <source>bool QUrl::isValid() const</source>
          <target state="translated">bool QUrl :: isValid () const</target>
        </trans-unit>
        <trans-unit id="857f7f15a6178c0fd5831ee1c3869dea64f85624" translate="yes" xml:space="preserve">
          <source>bool QUrl::matches(const &lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QUrl :: 일치 (const &lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="44e793072213e3f831e3762c3d64ec8b827268c0" translate="yes" xml:space="preserve">
          <source>bool QUrl::operator!=(const &lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QUrl :: 연산자! = (const &lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="88abb25b7b752318e4c522dca6a85f7cf73aff45" translate="yes" xml:space="preserve">
          <source>bool QUrl::operator==(const &lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QUrl :: 연산자 == (const &lt;a href=&quot;qurl#QUrl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3cb9904da696955a73f59b844898e3f5dcef61b6" translate="yes" xml:space="preserve">
          <source>bool QUrlQuery::hasQueryItem(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QUrlQuery :: hasQueryItem (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a8b8207cd0abc0c0e6049bf4ee21caddd85cdf85" translate="yes" xml:space="preserve">
          <source>bool QUrlQuery::isEmpty() const</source>
          <target state="translated">bool QUrlQuery :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="f8f49d44206b163550bdd712de93cad8d309c464" translate="yes" xml:space="preserve">
          <source>bool QUrlQuery::operator!=(const &lt;a href=&quot;qurlquery#QUrlQuery&quot;&gt;QUrlQuery&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QUrlQuery :: operator! = (const &lt;a href=&quot;qurlquery#QUrlQuery&quot;&gt;QUrlQuery&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a7cc3db34a53937215cedc7a15f746a85c993a76" translate="yes" xml:space="preserve">
          <source>bool QUrlQuery::operator==(const &lt;a href=&quot;qurlquery#QUrlQuery&quot;&gt;QUrlQuery&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QUrlQuery :: operator == (const &lt;a href=&quot;qurlquery#QUrlQuery&quot;&gt;QUrlQuery&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a017445a73c171ae83bc7e455fbaaeee5b796c64" translate="yes" xml:space="preserve">
          <source>bool QUuid::isNull() const</source>
          <target state="translated">bool QUuid :: isNull () const</target>
        </trans-unit>
        <trans-unit id="24bc64244b2f5ab9bedc8eef575f26fa312ceb8d" translate="yes" xml:space="preserve">
          <source>bool QUuid::operator!=(const GUID &amp;amp;</source>
          <target state="translated">부울 QUuid :: operator! = (const GUID &amp;amp;</target>
        </trans-unit>
        <trans-unit id="eb2ffa57b94a156cdca38a0b2fdf10995d900e2a" translate="yes" xml:space="preserve">
          <source>bool QUuid::operator!=(const QUuid &amp;amp;</source>
          <target state="translated">부울 QUuid :: operator! = (const QUuid &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6bc5d729301658cc1ffb96cbdeb8969d2b25b7b0" translate="yes" xml:space="preserve">
          <source>bool QUuid::operator&amp;gt;(const QUuid &amp;amp;</source>
          <target state="translated">bool QUuid :: 연산자&amp;gt; (const QUuid &amp;amp;</target>
        </trans-unit>
        <trans-unit id="25b00ce1ae9ad99f35d7423419b4b365a110f8f3" translate="yes" xml:space="preserve">
          <source>bool QUuid::operator&amp;gt;=(const QUuid &amp;amp;</source>
          <target state="translated">bool QUuid :: 연산자&amp;gt; = (const QUuid &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7c322d9def086f98176010c102a8a1fb434b5baa" translate="yes" xml:space="preserve">
          <source>bool QUuid::operator&amp;lt;(const QUuid &amp;amp;</source>
          <target state="translated">bool QUuid :: 연산자 &amp;lt;(const QUuid &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b462f55eeb5e356f194c7c63476971a6241bddbd" translate="yes" xml:space="preserve">
          <source>bool QUuid::operator&amp;lt;=(const QUuid &amp;amp;</source>
          <target state="translated">bool QUuid :: 연산자 &amp;lt;= (const QUuid &amp;amp;</target>
        </trans-unit>
        <trans-unit id="179ee4a627ac3f79a3ac68535aeab3f4ad5eb55b" translate="yes" xml:space="preserve">
          <source>bool QUuid::operator==(const GUID &amp;amp;</source>
          <target state="translated">부울 QUuid :: operator == (const GUID &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fe99524b9a022ffc02124171effa2d6cc49d2891" translate="yes" xml:space="preserve">
          <source>bool QUuid::operator==(const QUuid &amp;amp;</source>
          <target state="translated">부울 QUuid :: operator == (const QUuid &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5b52fcf8e85b83e04f0b1844a0c48a5b5da8f892" translate="yes" xml:space="preserve">
          <source>bool QVarLengthArray::contains(const T &amp;amp;</source>
          <target state="translated">bool QVarLengthArray :: 포함 (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="15f50aba6a25ef58fb576bced58ca2c1ee82006a" translate="yes" xml:space="preserve">
          <source>bool QVarLengthArray::empty() const</source>
          <target state="translated">bool QVarLengthArray :: empty () const</target>
        </trans-unit>
        <trans-unit id="52d7c550dae7538aed7c40f67e47d848adaa9877" translate="yes" xml:space="preserve">
          <source>bool QVarLengthArray::isEmpty() const</source>
          <target state="translated">bool QVarLengthArray :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="a5467fbd6bab196d9201a0b252f24b0cff7ea21a" translate="yes" xml:space="preserve">
          <source>bool QVarLengthArray::operator!=(const &lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt;&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="translated">bool QVarLengthArray :: operator! = (const &lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt; &amp;lt;T, Prealloc1 &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3da27ad4cd54fedbf6d319ed361857dd4ae521ad" translate="yes" xml:space="preserve">
          <source>bool QVarLengthArray::operator&amp;gt;(const &lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt;&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="translated">bool QVarLengthArray :: operator&amp;gt; (const &lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt; &amp;lt;T, Prealloc1 &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8097f521f0c12aa38f7c76aaf9db9baa34fce225" translate="yes" xml:space="preserve">
          <source>bool QVarLengthArray::operator&amp;gt;=(const &lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt;&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="translated">bool QVarLengthArray :: operator&amp;gt; = (const &lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt; &amp;lt;T, Prealloc1 &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="940b7b1eb5ae7cc8e0a5f06c62fc1ddcba9e6df6" translate="yes" xml:space="preserve">
          <source>bool QVarLengthArray::operator&amp;lt;(const &lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt;&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="translated">bool QVarLengthArray :: operator &amp;lt;(const &lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt; &amp;lt;T, Prealloc1 &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="67b0e8989be4f3636f3aa4485e7894a67d11e375" translate="yes" xml:space="preserve">
          <source>bool QVarLengthArray::operator&amp;lt;=(const &lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt;&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="translated">bool QVarLengthArray :: operator &amp;lt;= (const &lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt; &amp;lt;T, Prealloc1 &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="26c65f7bd4c1125085bd03f93e8d29371bdc553e" translate="yes" xml:space="preserve">
          <source>bool QVarLengthArray::operator==(const &lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt;&amp;lt;T, Prealloc1&amp;gt; &amp;amp;</source>
          <target state="translated">bool QVarLengthArray :: operator == (const &lt;a href=&quot;qvarlengtharray#QVarLengthArray&quot;&gt;QVarLengthArray&lt;/a&gt; &amp;lt;T, Prealloc1 &amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a704602413d38467dd529cf0ba615b5eec36e08c" translate="yes" xml:space="preserve">
          <source>bool QVariant::canConvert() const</source>
          <target state="translated">bool QVariant :: canConvert () const</target>
        </trans-unit>
        <trans-unit id="97152e5b3b9c6f9db5b4481801fa087bf0177518" translate="yes" xml:space="preserve">
          <source>bool QVariant::canConvert(int</source>
          <target state="translated">부울 QVariant :: canConvert (int</target>
        </trans-unit>
        <trans-unit id="93447af06dbca2eeb0a0e5eaf1144f705f9d9ec8" translate="yes" xml:space="preserve">
          <source>bool QVariant::convert(int</source>
          <target state="translated">부울 QVariant :: convert (int</target>
        </trans-unit>
        <trans-unit id="70c9759cb9d0b86f2d74dd1f6250a1d1f6bca1c2" translate="yes" xml:space="preserve">
          <source>bool QVariant::isNull() const</source>
          <target state="translated">bool QVariant :: isNull () const</target>
        </trans-unit>
        <trans-unit id="f3727952724b0b2ebdbb024ddd374ac51275b521" translate="yes" xml:space="preserve">
          <source>bool QVariant::isValid() const</source>
          <target state="translated">bool QVariant :: isValid () const</target>
        </trans-unit>
        <trans-unit id="35069585d5335fd4ed5d98ad067248dd022ba5ce" translate="yes" xml:space="preserve">
          <source>bool QVariant::operator!=(const &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QVariant :: operator! = (const &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="93f86837f78cce9041f52cf6f912ec14b2885e3b" translate="yes" xml:space="preserve">
          <source>bool QVariant::operator&amp;gt;(const &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVariant :: 연산자&amp;gt; (const &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a9f8509b16c5ae377ff8c163c7e45a84ee9328a1" translate="yes" xml:space="preserve">
          <source>bool QVariant::operator&amp;gt;=(const &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QVariant :: operator&amp;gt; = (const &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="11c3568ba2db37ac31796e0bbe5b7e2693629589" translate="yes" xml:space="preserve">
          <source>bool QVariant::operator&amp;lt;(const &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QVariant :: operator &amp;lt;(const &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6cc827b87231bc73e5dcee9ad1a28bda855a59e7" translate="yes" xml:space="preserve">
          <source>bool QVariant::operator&amp;lt;=(const &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QVariant :: operator &amp;lt;= (const &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6d578f74c081e1db062a666e0422c8f491c342a3" translate="yes" xml:space="preserve">
          <source>bool QVariant::operator==(const &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QVariant :: operator == (const &lt;a href=&quot;qvariant#QVariant&quot;&gt;QVariant&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bb957fbc7b7f422cd04608ccf804f0e8fd7bb9dc" translate="yes" xml:space="preserve">
          <source>bool QVariant::toBool() const</source>
          <target state="translated">bool QVariant :: toBool () const</target>
        </trans-unit>
        <trans-unit id="c528e47fa756566b02dbbdc9652a7b07e469b141" translate="yes" xml:space="preserve">
          <source>bool QVector2D::isNull() const</source>
          <target state="translated">bool QVector2D :: isNull () const</target>
        </trans-unit>
        <trans-unit id="ad62fbfb3fcd8bc215185eb9a30c28630334b9e2" translate="yes" xml:space="preserve">
          <source>bool QVector2D::operator!=(const &lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVector2D :: 연산자! = (const &lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7c48424460d2981bb65f6223a258227d25fe7adf" translate="yes" xml:space="preserve">
          <source>bool QVector2D::operator==(const &lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QVector2D :: 연산자 == (const &lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3c9a4e0bac318c9f297358a1783035a957e14764" translate="yes" xml:space="preserve">
          <source>bool QVector2D::qFuzzyCompare(const &lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVector2D :: qFuzzyCompare (const &lt;a href=&quot;qvector2d#QVector2D&quot;&gt;QVector2D&lt;/a&gt; 및</target>
        </trans-unit>
        <trans-unit id="3ed0d66860b39ac29f4eef434b1cd4cc432b5084" translate="yes" xml:space="preserve">
          <source>bool QVector3D::isNull() const</source>
          <target state="translated">bool QVector3D :: isNull () const</target>
        </trans-unit>
        <trans-unit id="83dafedb089dcce154e1272db0c10220fec07b7a" translate="yes" xml:space="preserve">
          <source>bool QVector3D::operator!=(const &lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVector3D :: 연산자! = (const &lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="25124c93baee77ad17644dc47ee3ee551b82ddb1" translate="yes" xml:space="preserve">
          <source>bool QVector3D::operator==(const &lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QVector3D :: 연산자 == (const &lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1abbfaca3ab963672063c15b2a7b8091f0c263de" translate="yes" xml:space="preserve">
          <source>bool QVector3D::qFuzzyCompare(const &lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVector3D :: qFuzzyCompare (const &lt;a href=&quot;qvector3d#QVector3D&quot;&gt;QVector3D&lt;/a&gt; 및</target>
        </trans-unit>
        <trans-unit id="20c25bd9f7c66589ba73d34dc26bd4db5f310c2a" translate="yes" xml:space="preserve">
          <source>bool QVector4D::isNull() const</source>
          <target state="translated">bool QVector4D :: isNull () const</target>
        </trans-unit>
        <trans-unit id="07f720e2bfc6fbdc52b9f6c93ef563906cec373e" translate="yes" xml:space="preserve">
          <source>bool QVector4D::operator!=(const &lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVector4D :: 연산자! = (const &lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="95c86e8ec3e9ab7df34afe3ed1575d1f3129d251" translate="yes" xml:space="preserve">
          <source>bool QVector4D::operator==(const &lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVector4D :: 연산자 == (const &lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3b7b49d2e79154784fbed12a8a3d1dca3d45b2de" translate="yes" xml:space="preserve">
          <source>bool QVector4D::qFuzzyCompare(const &lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVector4D :: qFuzzyCompare (const &lt;a href=&quot;qvector4d#QVector4D&quot;&gt;QVector4D&lt;/a&gt; 및</target>
        </trans-unit>
        <trans-unit id="0e0e07870dc6cdbc86c65cc91507c25be11af936" translate="yes" xml:space="preserve">
          <source>bool QVector::contains(const T &amp;amp;</source>
          <target state="translated">bool QVector :: 포함 (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a816b02ca0dcd8b92627023dcd0983774873a349" translate="yes" xml:space="preserve">
          <source>bool QVector::empty() const</source>
          <target state="translated">bool QVector :: empty () const</target>
        </trans-unit>
        <trans-unit id="03129d0b6c21b660545abe07e559cec34c976d7f" translate="yes" xml:space="preserve">
          <source>bool QVector::endsWith(const T &amp;amp;</source>
          <target state="translated">bool QVector :: endsWith (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6e2891acc2bf025034f8a318f145c05d51fbb4ce" translate="yes" xml:space="preserve">
          <source>bool QVector::isEmpty() const</source>
          <target state="translated">bool QVector :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="774200b60783bac8667724bc51e1c9f7e7a06b64" translate="yes" xml:space="preserve">
          <source>bool QVector::operator!=(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QVector :: operator! = (const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="82bb84901d97b0a846de151971f786542b7b069e" translate="yes" xml:space="preserve">
          <source>bool QVector::operator&amp;gt;(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QVector :: 연산자&amp;gt; (const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b2a3eb0c3f8ac767223a78ceb59ef7788289b6b9" translate="yes" xml:space="preserve">
          <source>bool QVector::operator&amp;gt;=(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QVector :: operator&amp;gt; = (const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="47e20df16f2c76d119eaa043bfb757732b4d9d19" translate="yes" xml:space="preserve">
          <source>bool QVector::operator&amp;lt;(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QVector :: 연산자 &amp;lt;(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c04bce190f132e2d09615f0cf230e0e67c45f054" translate="yes" xml:space="preserve">
          <source>bool QVector::operator&amp;lt;=(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QVector :: operator &amp;lt;= (const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c8d41bf5dd0ab6cfa99c8a6aade280687f7d99bb" translate="yes" xml:space="preserve">
          <source>bool QVector::operator==(const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QVector :: operator == (const &lt;a href=&quot;qvector#QVector&quot;&gt;QVector&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="37ba1e35b1a3e81ccba15944f2c7066e6fa7675e" translate="yes" xml:space="preserve">
          <source>bool QVector::removeOne(const T &amp;amp;</source>
          <target state="translated">부울 QVector :: removeOne (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="48657445c470fd1f1014629245a79146440af715" translate="yes" xml:space="preserve">
          <source>bool QVector::startsWith(const T &amp;amp;</source>
          <target state="translated">bool QVector :: startsWith (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="781fad645e07ba3a2ef700f5a7fefdc4c852be1d" translate="yes" xml:space="preserve">
          <source>bool QVectorIterator::findNext(const T &amp;amp;</source>
          <target state="translated">bool QVectorIterator :: findNext (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d52c1bcf2500e42ec19f70bcd2c87bd96b4dec8b" translate="yes" xml:space="preserve">
          <source>bool QVectorIterator::findPrevious(const T &amp;amp;</source>
          <target state="translated">bool QVectorIterator :: find 이전 (const T &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4b6837ed4aa0a715e2fab2b1fb7216c637d21404" translate="yes" xml:space="preserve">
          <source>bool QVectorIterator::hasNext() const</source>
          <target state="translated">bool QVectorIterator :: hasNext () const</target>
        </trans-unit>
        <trans-unit id="8cd1e691d9c67e5f2c02c594832029f24af70105" translate="yes" xml:space="preserve">
          <source>bool QVectorIterator::hasPrevious() const</source>
          <target state="translated">bool QVectorIterator :: hasPrevious () const</target>
        </trans-unit>
        <trans-unit id="8d9714adfc589df141470e20621ae59c747fca5f" translate="yes" xml:space="preserve">
          <source>bool QVersionNumber::isNormalized() const</source>
          <target state="translated">bool QVersionNumber :: isNormalized () const</target>
        </trans-unit>
        <trans-unit id="4f5656cea788f4c46bf41210b5b444cecc2f249f" translate="yes" xml:space="preserve">
          <source>bool QVersionNumber::isNull() const</source>
          <target state="translated">bool QVersionNumber :: isNull () const</target>
        </trans-unit>
        <trans-unit id="bb1573abd8b5cbd1a1a70d0bf2c5a27d3029ecf4" translate="yes" xml:space="preserve">
          <source>bool QVersionNumber::isPrefixOf(const &lt;a href=&quot;qversionnumber#QVersionNumber&quot;&gt;QVersionNumber&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QVersionNumber :: isPrefixOf (const &lt;a href=&quot;qversionnumber#QVersionNumber&quot;&gt;QVersionNumber&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c09070c40918414cf3b2f1b0f0f854be58fc177e" translate="yes" xml:space="preserve">
          <source>bool QVersionNumber::operator!=(const &lt;a href=&quot;qversionnumber#QVersionNumber&quot;&gt;QVersionNumber&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVersionNumber :: operator! = ( &lt;a href=&quot;qversionnumber#QVersionNumber&quot;&gt;상수 QVersionNumber&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3bd6878fd09079867cf3b6e6406a8d27cfbd13a4" translate="yes" xml:space="preserve">
          <source>bool QVersionNumber::operator&amp;gt;(const &lt;a href=&quot;qversionnumber#QVersionNumber&quot;&gt;QVersionNumber&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVersionNumber :: 연산자&amp;gt; (const &lt;a href=&quot;qversionnumber#QVersionNumber&quot;&gt;QVersionNumber&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="42d6c76120c710d606c30c263061e9061a9923ee" translate="yes" xml:space="preserve">
          <source>bool QVersionNumber::operator&amp;gt;=(const &lt;a href=&quot;qversionnumber#QVersionNumber&quot;&gt;QVersionNumber&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVersionNumber :: operator&amp;gt; = ( &lt;a href=&quot;qversionnumber#QVersionNumber&quot;&gt;상수 QVersionNumber&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="78fb08e666b12aac0112d21f63a3208022ae7868" translate="yes" xml:space="preserve">
          <source>bool QVersionNumber::operator&amp;lt;(const &lt;a href=&quot;qversionnumber#QVersionNumber&quot;&gt;QVersionNumber&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVersionNumber :: 연산자 &amp;lt;(const &lt;a href=&quot;qversionnumber#QVersionNumber&quot;&gt;QVersionNumber&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="832c0f692ca68418aa0ea84a2f42dfe69967e119" translate="yes" xml:space="preserve">
          <source>bool QVersionNumber::operator&amp;lt;=(const &lt;a href=&quot;qversionnumber#QVersionNumber&quot;&gt;QVersionNumber&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVersionNumber :: 연산자 &amp;lt;= (const &lt;a href=&quot;qversionnumber#QVersionNumber&quot;&gt;QVersionNumber&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="77b9fce5055983e889cb3e56e61be54384c8c146" translate="yes" xml:space="preserve">
          <source>bool QVersionNumber::operator==(const &lt;a href=&quot;qversionnumber#QVersionNumber&quot;&gt;QVersionNumber&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QVersionNumber :: operator == (const &lt;a href=&quot;qversionnumber#QVersionNumber&quot;&gt;QVersionNumber&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2d78d6781270b8c013f1155f636486ac86be6344" translate="yes" xml:space="preserve">
          <source>bool QVideoEncoderSettings::isNull() const</source>
          <target state="translated">bool QVideoEncoderSettings :: isNull () const</target>
        </trans-unit>
        <trans-unit id="4c9909c2324d01a16a9d630b735f26a137cc1d89" translate="yes" xml:space="preserve">
          <source>bool QVideoEncoderSettings::operator!=(const &lt;a href=&quot;qvideoencodersettings#QVideoEncoderSettings&quot;&gt;QVideoEncoderSettings&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVideoEncoderSettings :: operator! = (const &lt;a href=&quot;qvideoencodersettings#QVideoEncoderSettings&quot;&gt;QVideoEncoderSettings&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="afa5cb8e15d6c299fd1fdac93aba1a0d60217f91" translate="yes" xml:space="preserve">
          <source>bool QVideoEncoderSettings::operator==(const &lt;a href=&quot;qvideoencodersettings#QVideoEncoderSettings&quot;&gt;QVideoEncoderSettings&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QVideoEncoderSettings :: operator == (const &lt;a href=&quot;qvideoencodersettings#QVideoEncoderSettings&quot;&gt;QVideoEncoderSettings&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ab7b8dcdb6f29c889a143550ac40d4b593125419" translate="yes" xml:space="preserve">
          <source>bool QVideoFrame::isMapped() const</source>
          <target state="translated">bool QVideoFrame :: isMapped () const</target>
        </trans-unit>
        <trans-unit id="a6e904fb6291d3ef8be88468a7b6fdaa95c7d0c9" translate="yes" xml:space="preserve">
          <source>bool QVideoFrame::isReadable() const</source>
          <target state="translated">bool QVideoFrame :: isReadable () const</target>
        </trans-unit>
        <trans-unit id="c3aefed0e7de642cf324bbcbb204eca722abb568" translate="yes" xml:space="preserve">
          <source>bool QVideoFrame::isValid() const</source>
          <target state="translated">bool QVideoFrame :: isValid () const</target>
        </trans-unit>
        <trans-unit id="742427d27891455208a75f2f957d71f02b151c69" translate="yes" xml:space="preserve">
          <source>bool QVideoFrame::isWritable() const</source>
          <target state="translated">bool QVideoFrame :: isWritable () const</target>
        </trans-unit>
        <trans-unit id="2a72f7684ffce905b36776c12d3097c97bad5d21" translate="yes" xml:space="preserve">
          <source>bool QVideoFrame::map(&lt;a href=&quot;qabstractvideobuffer#MapMode-enum&quot;&gt;QAbstractVideoBuffer::MapMode&lt;/a&gt;</source>
          <target state="translated">bool QVideoFrame :: map ( &lt;a href=&quot;qabstractvideobuffer#MapMode-enum&quot;&gt;QAbstractVideoBuffer :: MapMode&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="03fda912dd0385d95959020f8d2d879f072f04a1" translate="yes" xml:space="preserve">
          <source>bool QVideoFrame::operator!=(const &lt;a href=&quot;qvideoframe#QVideoFrame&quot;&gt;QVideoFrame&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVideoFrame :: 연산자! = (const &lt;a href=&quot;qvideoframe#QVideoFrame&quot;&gt;QVideoFrame&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6b11ae88f886173938b0601e210dcd658b8ed89c" translate="yes" xml:space="preserve">
          <source>bool QVideoFrame::operator==(const &lt;a href=&quot;qvideoframe#QVideoFrame&quot;&gt;QVideoFrame&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVideoFrame :: operator == (const &lt;a href=&quot;qvideoframe#QVideoFrame&quot;&gt;QVideoFrame&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9c7c700021e25526605c0415cca5ceabda55e70e" translate="yes" xml:space="preserve">
          <source>bool QVideoProbe::isActive() const</source>
          <target state="translated">bool QVideoProbe :: isActive () const</target>
        </trans-unit>
        <trans-unit id="5d3c82b0ff0cb6e4a51e47edab7338b7ad965449" translate="yes" xml:space="preserve">
          <source>bool QVideoProbe::setSource(&lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; *</source>
          <target state="translated">bool QVideoProbe :: setSource ( &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6d482adcdfa7accd56de9668bdddd404c41c45ef" translate="yes" xml:space="preserve">
          <source>bool QVideoProbe::setSource(&lt;a href=&quot;qmediarecorder&quot;&gt;QMediaRecorder&lt;/a&gt; *</source>
          <target state="translated">bool QVideoProbe :: setSource ( &lt;a href=&quot;qmediarecorder&quot;&gt;QMediaRecorder&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="f4e0a9ed3c4091ad60238ec3ab82fa7427b4e8b8" translate="yes" xml:space="preserve">
          <source>bool QVideoSurfaceFormat::isMirrored() const</source>
          <target state="translated">bool QVideoSurfaceFormat :: isMirrored () const</target>
        </trans-unit>
        <trans-unit id="9675401678997a563e441d7a4de91525cfecb245" translate="yes" xml:space="preserve">
          <source>bool QVideoSurfaceFormat::isValid() const</source>
          <target state="translated">bool QVideoSurfaceFormat :: isValid () const</target>
        </trans-unit>
        <trans-unit id="587927adf5e8726d59874bb27fa1cdce52fa2a87" translate="yes" xml:space="preserve">
          <source>bool QVideoSurfaceFormat::operator!=(const &lt;a href=&quot;qvideosurfaceformat#QVideoSurfaceFormat&quot;&gt;QVideoSurfaceFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QVideoSurfaceFormat :: operator! = (const &lt;a href=&quot;qvideosurfaceformat#QVideoSurfaceFormat&quot;&gt;QVideoSurfaceFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="61003d6d1d6ff0bb5e33adcdd471a6ad504eecbb" translate="yes" xml:space="preserve">
          <source>bool QVideoSurfaceFormat::operator==(const &lt;a href=&quot;qvideosurfaceformat#QVideoSurfaceFormat&quot;&gt;QVideoSurfaceFormat&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QVideoSurfaceFormat :: operator == (const &lt;a href=&quot;qvideosurfaceformat#QVideoSurfaceFormat&quot;&gt;QVideoSurfaceFormat&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e50173908ddb8da5a6e6d3c31f6a7de2a6888137" translate="yes" xml:space="preserve">
          <source>bool QVirtualKeyboardInputEngine::reselect(int</source>
          <target state="translated">bool QVirtualKeyboardInputEngine :: reselect (int</target>
        </trans-unit>
        <trans-unit id="06a8b5f824f2d562160068e43ec21d2985e2418c" translate="yes" xml:space="preserve">
          <source>bool QVirtualKeyboardInputEngine::traceEnd(&lt;a href=&quot;qvirtualkeyboardtrace&quot;&gt;QVirtualKeyboardTrace&lt;/a&gt; *</source>
          <target state="translated">bool QVirtualKeyboardInputEngine :: traceEnd ( &lt;a href=&quot;qvirtualkeyboardtrace&quot;&gt;QVirtualKeyboardTrace&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2a879a3a83dc6e74b4618283c4f8ae44d26d900b" translate="yes" xml:space="preserve">
          <source>bool QVirtualKeyboardInputEngine::virtualKeyClick(&lt;a href=&quot;qt#Key-enum&quot;&gt;Qt::Key&lt;/a&gt;</source>
          <target state="translated">부울 QVirtualKeyboardInputEngine :: virtualKeyClick ( &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt :: Key&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1f10c3df5f99f8393a441e3352653df5916ccd33" translate="yes" xml:space="preserve">
          <source>bool QVirtualKeyboardInputEngine::virtualKeyPress(&lt;a href=&quot;qt#Key-enum&quot;&gt;Qt::Key&lt;/a&gt;</source>
          <target state="translated">부울 QVirtualKeyboardInputEngine :: virtualKeyPress ( &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt :: Key&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a71c14594c041deb578532699c4493271f55ac4c" translate="yes" xml:space="preserve">
          <source>bool QVirtualKeyboardInputEngine::virtualKeyRelease(&lt;a href=&quot;qt#Key-enum&quot;&gt;Qt::Key&lt;/a&gt;</source>
          <target state="translated">부울 QVirtualKeyboardInputEngine :: virtualKeyRelease ( &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt :: Key&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5c19226d3b14d342e9027b408ba6a4f4811b08e0" translate="yes" xml:space="preserve">
          <source>bool QVoice::operator!=(const QVoice &amp;amp;</source>
          <target state="translated">bool QVoice :: operator! = (const QVoice &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f73b86058727417846d816173f237ccdbece87fb" translate="yes" xml:space="preserve">
          <source>bool QVoice::operator==(const QVoice &amp;amp;</source>
          <target state="translated">부울 QVoice :: operator == (const QVoice &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6252ed5765fb5f0684f9cef209ce18e3f8ba4abd" translate="yes" xml:space="preserve">
          <source>bool QVulkanInstance::create()</source>
          <target state="translated">bool QVulkanInstance :: create ()</target>
        </trans-unit>
        <trans-unit id="37090ffa57b382173372ea9f5d7e1bee55901b96" translate="yes" xml:space="preserve">
          <source>bool QVulkanInstance::isValid() const</source>
          <target state="translated">bool QVulkanInstance :: isValid () const</target>
        </trans-unit>
        <trans-unit id="ed253b6e7ff55c72a1df54465f9c5c68d0931fc6" translate="yes" xml:space="preserve">
          <source>bool QVulkanInstance::supportsPresent(VkPhysicalDevice</source>
          <target state="translated">bool QVulkanInstance::supportsPresent(VkPhysicalDevice</target>
        </trans-unit>
        <trans-unit id="5efa92a73d9491d597da8590eb144f548fc70063" translate="yes" xml:space="preserve">
          <source>bool QVulkanInstance::supportsPresent(int</source>
          <target state="translated">bool QVulkanInstance :: supportsPresent (int</target>
        </trans-unit>
        <trans-unit id="de13ba9cd07451183ba5d1cc731f7325d1e379ea" translate="yes" xml:space="preserve">
          <source>bool QVulkanWindow::isValid() const</source>
          <target state="translated">bool QVulkanWindow :: isValid () const</target>
        </trans-unit>
        <trans-unit id="3c8f9ae7739e00bdf4b94bfbabf1b306c7fbb2ab" translate="yes" xml:space="preserve">
          <source>bool QVulkanWindow::supportsGrab() const</source>
          <target state="translated">bool QVulkanWindow :: supportsGrab () const</target>
        </trans-unit>
        <trans-unit id="e7096117a6cf24f3c39d194ac6169aa1f5909b46" translate="yes" xml:space="preserve">
          <source>bool QWaitCondition::wait(&lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; *</source>
          <target state="translated">bool QWaitCondition :: wait ( &lt;a href=&quot;qmutex&quot;&gt;QMutex&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="bfbc1fcedfdeb8ec128649a18d5b49bb1b22f05b" translate="yes" xml:space="preserve">
          <source>bool QWaitCondition::wait(&lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt; *</source>
          <target state="translated">bool QWaitCondition :: wait ( &lt;a href=&quot;qreadwritelock&quot;&gt;QReadWriteLock&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="99525679f8eeed63bc200d23cfa1511bf347d886" translate="yes" xml:space="preserve">
          <source>bool QWaylandBufferRef::hasBuffer() const</source>
          <target state="translated">bool QWaylandBufferRef :: hasBuffer () const</target>
        </trans-unit>
        <trans-unit id="67b71f8d081c83a45e6d4d5500e39d764cd4e3eb" translate="yes" xml:space="preserve">
          <source>bool QWaylandBufferRef::hasContent() const</source>
          <target state="translated">bool QWaylandBufferRef :: hasContent () const</target>
        </trans-unit>
        <trans-unit id="0ffa9aca36793ed0b646677bfebac3bb809f11dd" translate="yes" xml:space="preserve">
          <source>bool QWaylandBufferRef::isDestroyed() const</source>
          <target state="translated">bool QWaylandBufferRef :: isDestroyed () const</target>
        </trans-unit>
        <trans-unit id="f030123475ba5a0ab76bae7b76cf099268cc0f1c" translate="yes" xml:space="preserve">
          <source>bool QWaylandBufferRef::isNull() const</source>
          <target state="translated">bool QWaylandBufferRef :: isNull () const</target>
        </trans-unit>
        <trans-unit id="5948393a74944b347ba46a6620db8ff43dbc9e50" translate="yes" xml:space="preserve">
          <source>bool QWaylandBufferRef::isSharedMemory() const</source>
          <target state="translated">bool QWaylandBufferRef :: isSharedMemory () const</target>
        </trans-unit>
        <trans-unit id="a7a5b1910c2ce104b6e5d81515a07ba7177016b2" translate="yes" xml:space="preserve">
          <source>bool QWaylandBufferRef::operator!=(const &lt;a href=&quot;qwaylandbufferref#QWaylandBufferRef&quot;&gt;QWaylandBufferRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QWaylandBufferRef :: operator! = (const &lt;a href=&quot;qwaylandbufferref#QWaylandBufferRef&quot;&gt;QWaylandBufferRef&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7a8fc30f3da34a500583c9413cc209fad2b77ab3" translate="yes" xml:space="preserve">
          <source>bool QWaylandBufferRef::operator==(const &lt;a href=&quot;qwaylandbufferref#QWaylandBufferRef&quot;&gt;QWaylandBufferRef&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QWaylandBufferRef :: operator == (const &lt;a href=&quot;qwaylandbufferref#QWaylandBufferRef&quot;&gt;QWaylandBufferRef&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b338ccdde09862bd01753a571d10b87fccafc430" translate="yes" xml:space="preserve">
          <source>bool QWaylandOutputMode::isValid() const</source>
          <target state="translated">bool QWaylandOutputMode :: isValid () const</target>
        </trans-unit>
        <trans-unit id="e338305ac372fa3161a7f08cf5c3ccf23c5468e9" translate="yes" xml:space="preserve">
          <source>bool QWaylandOutputMode::operator!=(const QWaylandOutputMode &amp;amp;</source>
          <target state="translated">부울 QWaylandOutputMode :: operator! = (const QWaylandOutputMode &amp;amp;</target>
        </trans-unit>
        <trans-unit id="9f007db4b3e8a4985b1ccd4a73b03200ed0329f7" translate="yes" xml:space="preserve">
          <source>bool QWaylandOutputMode::operator==(const QWaylandOutputMode &amp;amp;</source>
          <target state="translated">부울 QWaylandOutputMode :: operator == (const QWaylandOutputMode &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d2f1128dd3eb6d13d16d4c9027809274a09e558b" translate="yes" xml:space="preserve">
          <source>bool QWaylandPointer::isButtonPressed() const</source>
          <target state="translated">bool QWaylandPointer :: isButtonPressed () const</target>
        </trans-unit>
        <trans-unit id="d9a38b650206d3eb85632c2ada438beae842ea2c" translate="yes" xml:space="preserve">
          <source>bool QWaylandQuickItem::inputRegionContains(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QWaylandQuickItem :: inputRegionContains (const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="62ac7f675ebfe3f6d16008efc6819a77c3c553f2" translate="yes" xml:space="preserve">
          <source>bool QWaylandQuickItem::paintEnabled() const</source>
          <target state="translated">bool QWaylandQuickItem :: paintEnabled () const</target>
        </trans-unit>
        <trans-unit id="aa0bdc6c9cc0fde53aa0c29f894384ea9dcc28f5" translate="yes" xml:space="preserve">
          <source>bool QWaylandSeat::isInitialized() const</source>
          <target state="translated">bool QWaylandSeat :: isInitialized () const</target>
        </trans-unit>
        <trans-unit id="f23f222dfa194408dd9262f6d6b057641e5ec8e4" translate="yes" xml:space="preserve">
          <source>bool QWaylandSeat::setKeyboardFocus(&lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt; *</source>
          <target state="translated">부울 QWaylandSeat :: setKeyboardFocus ( &lt;a href=&quot;qwaylandsurface&quot;&gt;QWaylandSurface&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1a18eba181970d950ab3727b0cc3a808ab6c6867" translate="yes" xml:space="preserve">
          <source>bool QWaylandSurface::inputRegionContains(const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QWaylandSurface :: inputRegionContains (const &lt;a href=&quot;qpoint&quot;&gt;QPoint&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="37eae26bfef81747ed6f9a6239a94596b2fafc04" translate="yes" xml:space="preserve">
          <source>bool QWaylandSurface::inputRegionContains(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QWaylandSurface::inputRegionContains(const &lt;a href=&quot;qpointf&quot;&gt;QPointF&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c3fcc7c0152ed69e5131b5b84a69866a362b66e4" translate="yes" xml:space="preserve">
          <source>bool QWaylandSurface::isDestroyed() const</source>
          <target state="translated">부울 QWaylandSurface :: isDestroyed () const</target>
        </trans-unit>
        <trans-unit id="2cec3e90a9d8529698fc8c3b0696d4e7e5f894d4" translate="yes" xml:space="preserve">
          <source>bool QWaylandSurface::isInitialized() const</source>
          <target state="translated">부울 QWaylandSurface :: isInitialized () const</target>
        </trans-unit>
        <trans-unit id="3ba320b4332ff689e5c68f7f8d36ea1e33c06e7b" translate="yes" xml:space="preserve">
          <source>bool QWaylandSurface::setRole(QWaylandSurfaceRole *</source>
          <target state="translated">bool QWaylandSurface :: setRole (QWaylandSurfaceRole *</target>
        </trans-unit>
        <trans-unit id="327ecc8738e9678c97a9582c8f4f571a5cda96a8" translate="yes" xml:space="preserve">
          <source>bool QWaylandView::isPrimary() const</source>
          <target state="translated">bool QWaylandView :: isPrimary () const</target>
        </trans-unit>
        <trans-unit id="d5c4bf9e3c12a754fa0e93236d2993ffb303905e" translate="yes" xml:space="preserve">
          <source>bool QWeakPointer::isNull() const</source>
          <target state="translated">bool QWeakPointer :: isNull () const</target>
        </trans-unit>
        <trans-unit id="ad66779bd46b2e5f0b1a7a3480eb7b77ccecbc48" translate="yes" xml:space="preserve">
          <source>bool QWeakPointer::operator bool() const</source>
          <target state="translated">bool QWeakPointer :: 연산자 bool () const</target>
        </trans-unit>
        <trans-unit id="605415e664f56a6e3e82b635738844b4069860f9" translate="yes" xml:space="preserve">
          <source>bool QWeakPointer::operator!() const</source>
          <target state="translated">bool QWeakPointer :: operator! () const</target>
        </trans-unit>
        <trans-unit id="a2cd48d6e3e9e4641d3ace9cfd67a33eae5418eb" translate="yes" xml:space="preserve">
          <source>bool QWeakPointer::operator!=(</source>
          <target state="translated">부울 QWeakPointer :: operator! = (</target>
        </trans-unit>
        <trans-unit id="98f4a59f295e8e93dfef919b4d4f35fd2cd5656f" translate="yes" xml:space="preserve">
          <source>bool QWeakPointer::operator!=(const &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QWeakPointer :: operator! = (const &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3f01ca9888c46488480f78e572faa4938aa45712" translate="yes" xml:space="preserve">
          <source>bool QWeakPointer::operator!=(const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QWeakPointer :: operator! = (const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f4ab274b8451d9e2c72a67e589dd151d0f75e871" translate="yes" xml:space="preserve">
          <source>bool QWeakPointer::operator==(</source>
          <target state="translated">부울 QWeakPointer :: operator == (</target>
        </trans-unit>
        <trans-unit id="f411acf5ddef5dcdf84efdac6ba48587f3cce373" translate="yes" xml:space="preserve">
          <source>bool QWeakPointer::operator==(const &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QWeakPointer :: operator == (const &lt;a href=&quot;qsharedpointer&quot;&gt;QSharedPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="48a89c339a7864bebb3d71fda7e8cccc3a669141" translate="yes" xml:space="preserve">
          <source>bool QWeakPointer::operator==(const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt;&amp;lt;T&amp;gt; &amp;amp;</source>
          <target state="translated">bool QWeakPointer :: operator == (const &lt;a href=&quot;qweakpointer#QWeakPointer&quot;&gt;QWeakPointer&lt;/a&gt; &amp;lt;T&amp;gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e2eeeb6c1b04680626be05b9b9a7d37b09efb96e" translate="yes" xml:space="preserve">
          <source>bool QWebEngineCertificateError::answered() const</source>
          <target state="translated">bool QWebEngineCertificateError::answered() const</target>
        </trans-unit>
        <trans-unit id="bb308435bd49aaf06831a674e9db5987d1c55539" translate="yes" xml:space="preserve">
          <source>bool QWebEngineCertificateError::deferred() const</source>
          <target state="translated">bool QWebEngineCertificateError::deferred() const</target>
        </trans-unit>
        <trans-unit id="9b19fdded26746d56ad0f22c2705fc8bedfae93d" translate="yes" xml:space="preserve">
          <source>bool QWebEngineCertificateError::isOverridable() const</source>
          <target state="translated">bool QWebEngineCertificateError :: isOverridable () const</target>
        </trans-unit>
        <trans-unit id="240ae6175e29c7a476b96e572a32a1871f05b4b6" translate="yes" xml:space="preserve">
          <source>bool QWebEngineContextMenuData::isContentEditable() const</source>
          <target state="translated">부울 QWebEngineContextMenuData :: isContentEditable () const</target>
        </trans-unit>
        <trans-unit id="2611aa3c526ca88d88cdc97fe5063d280668012b" translate="yes" xml:space="preserve">
          <source>bool QWebEngineContextMenuData::isValid() const</source>
          <target state="translated">bool QWebEngineContextMenuData :: isValid () const</target>
        </trans-unit>
        <trans-unit id="5c92a53f7f65377cc86bbe1b0754eb6ce2a176a6" translate="yes" xml:space="preserve">
          <source>bool QWebEngineDownloadItem::isFinished() const</source>
          <target state="translated">bool QWebEngineDownloadItem :: isFinished () const</target>
        </trans-unit>
        <trans-unit id="06d9635a8e58008cee95ada11c71bbfd6833ed58" translate="yes" xml:space="preserve">
          <source>bool QWebEngineDownloadItem::isPaused() const</source>
          <target state="translated">bool QWebEngineDownloadItem :: isPaused () const</target>
        </trans-unit>
        <trans-unit id="ea3a895be3a7fbc6fbaa325ae16dcaa8674ac3d5" translate="yes" xml:space="preserve">
          <source>bool QWebEngineDownloadItem::isSavePageDownload() const</source>
          <target state="translated">부울 QWebEngineDownloadItem :: isSavePageDownload () const</target>
        </trans-unit>
        <trans-unit id="56f14be37e6c872cc2e786f68ebca4364435ac33" translate="yes" xml:space="preserve">
          <source>bool QWebEngineFullScreenRequest::toggleOn() const</source>
          <target state="translated">bool QWebEngineFullScreenRequest :: toggleOn () const</target>
        </trans-unit>
        <trans-unit id="7e5591be82eed2f981d843e2742ca6328692a2d6" translate="yes" xml:space="preserve">
          <source>bool QWebEngineHistory::canGoBack() const</source>
          <target state="translated">bool QWebEngineHistory :: canGoBack () const</target>
        </trans-unit>
        <trans-unit id="e07e9bd401349c0897030969fdff5de2b9467016" translate="yes" xml:space="preserve">
          <source>bool QWebEngineHistory::canGoForward() const</source>
          <target state="translated">bool QWebEngineHistory :: canGoForward () const</target>
        </trans-unit>
        <trans-unit id="0f37e7bbe5eec7145fd1c75f8d447615beb58db5" translate="yes" xml:space="preserve">
          <source>bool QWebEngineHistoryItem::isValid() const</source>
          <target state="translated">bool QWebEngineHistoryItem :: isValid () const</target>
        </trans-unit>
        <trans-unit id="d7d9ba403383b4fb4a3c70d218cdec329b94ca1a" translate="yes" xml:space="preserve">
          <source>bool QWebEngineHttpRequest::hasHeader(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QWebEngineHttpRequest :: hasHeader (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e233993c7d1d18244491c1fda766bdec95c56048" translate="yes" xml:space="preserve">
          <source>bool QWebEngineHttpRequest::operator!=(const &lt;a href=&quot;qwebenginehttprequest#QWebEngineHttpRequest&quot;&gt;QWebEngineHttpRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QWebEngineHttpRequest :: operator! = (const &lt;a href=&quot;qwebenginehttprequest#QWebEngineHttpRequest&quot;&gt;QWebEngineHttpRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c854ecf31ab6fdf54a984354e39b44ddbf977f00" translate="yes" xml:space="preserve">
          <source>bool QWebEngineHttpRequest::operator==(const &lt;a href=&quot;qwebenginehttprequest#QWebEngineHttpRequest&quot;&gt;QWebEngineHttpRequest&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QWebEngineHttpRequest :: operator == (const &lt;a href=&quot;qwebenginehttprequest#QWebEngineHttpRequest&quot;&gt;QWebEngineHttpRequest&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="09467ce1771127b1f260ce8fdc6e8872aefdc295" translate="yes" xml:space="preserve">
          <source>bool QWebEngineNotification::matches(const QWebEngineNotification *</source>
          <target state="translated">bool QWebEngineNotification :: matches (const QWebEngineNotification *</target>
        </trans-unit>
        <trans-unit id="f00445a31a718f66b908f9b760eea15399f6a60a" translate="yes" xml:space="preserve">
          <source>bool QWebEngineProfile::isOffTheRecord() const</source>
          <target state="translated">bool QWebEngineProfile :: isOffTheRecord () const</target>
        </trans-unit>
        <trans-unit id="274a86a677621ee2e5be3371dda7368059da92d5" translate="yes" xml:space="preserve">
          <source>bool QWebEngineProfile::isSpellCheckEnabled() const</source>
          <target state="translated">bool QWebEngineProfile :: isSpellCheckEnabled () const</target>
        </trans-unit>
        <trans-unit id="47ccfc73cfe121e5f52684aba56a1f4fef0f558b" translate="yes" xml:space="preserve">
          <source>bool QWebEngineProfile::isUsedForGlobalCertificateVerification() const</source>
          <target state="translated">bool QWebEngineProfile :: isUsedForGlobalCertificateVerification () const</target>
        </trans-unit>
        <trans-unit id="ead785628f22c1eed30e634876db99697ade2a31" translate="yes" xml:space="preserve">
          <source>bool QWebEngineProfile::visitedLinksContainsUrl(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QWebEngineProfile :: visitedLinksContainsUrl (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="dd2cfadd40bed68fe8ebe94e30548be3625595ea" translate="yes" xml:space="preserve">
          <source>bool QWebEngineQuotaRequest::operator!=(const QWebEngineQuotaRequest &amp;amp;</source>
          <target state="translated">bool QWebEngineQuotaRequest :: operator! = (const QWebEngineQuotaRequest &amp;amp;</target>
        </trans-unit>
        <trans-unit id="44e6a3ba17181e1cc8be189a60666ea22e468557" translate="yes" xml:space="preserve">
          <source>bool QWebEngineQuotaRequest::operator==(const QWebEngineQuotaRequest &amp;amp;</source>
          <target state="translated">bool QWebEngineQuotaRequest :: operator == (const QWebEngineQuotaRequest &amp;amp;</target>
        </trans-unit>
        <trans-unit id="8fd4af5f9beaaa58fe25736a956ddb10d15dcfb5" translate="yes" xml:space="preserve">
          <source>bool QWebEngineRegisterProtocolHandlerRequest::operator!=(const QWebEngineRegisterProtocolHandlerRequest &amp;amp;</source>
          <target state="translated">bool QWebEngineRegisterProtocolHandlerRequest :: operator! = (const QWebEngineRegisterProtocolHandlerRequest &amp;amp;</target>
        </trans-unit>
        <trans-unit id="18907695ac5877e45a15fe045aed0a7d4dd4951c" translate="yes" xml:space="preserve">
          <source>bool QWebEngineRegisterProtocolHandlerRequest::operator==(const QWebEngineRegisterProtocolHandlerRequest &amp;amp;</source>
          <target state="translated">부울 QWebEngineRegisterProtocolHandlerRequest :: operator == (const QWebEngineRegisterProtocolHandlerRequest &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fdef5436e32d89f842d28d5b1db0e0e6d95f8b6c" translate="yes" xml:space="preserve">
          <source>bool QWebEngineScript::isNull() const</source>
          <target state="translated">bool QWebEngineScript :: isNull () const</target>
        </trans-unit>
        <trans-unit id="8f86789157d325865377e1d978743ba96e0c0f26" translate="yes" xml:space="preserve">
          <source>bool QWebEngineScript::operator!=(const &lt;a href=&quot;qwebenginescript#QWebEngineScript&quot;&gt;QWebEngineScript&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QWebEngineScript :: operator! = (const &lt;a href=&quot;qwebenginescript#QWebEngineScript&quot;&gt;QWebEngineScript&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7981a3823de931f15d84f5aa83c8c31371d4c51b" translate="yes" xml:space="preserve">
          <source>bool QWebEngineScript::operator==(const &lt;a href=&quot;qwebenginescript#QWebEngineScript&quot;&gt;QWebEngineScript&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QWebEngineScript :: operator == (const &lt;a href=&quot;qwebenginescript#QWebEngineScript&quot;&gt;QWebEngineScript&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7ab8f86bc601ef13b4e490f46e0f88ae1babddda" translate="yes" xml:space="preserve">
          <source>bool QWebEngineScript::runsOnSubFrames() const</source>
          <target state="translated">bool QWebEngineScript :: runsOnSubFrames () const</target>
        </trans-unit>
        <trans-unit id="3d001f189b3e8494fbdeece3ff5cadd2fc103ffe" translate="yes" xml:space="preserve">
          <source>bool QWebEngineScriptCollection::contains(const &lt;a href=&quot;qwebenginescript&quot;&gt;QWebEngineScript&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QWebEngineScriptCollection :: contains (const &lt;a href=&quot;qwebenginescript&quot;&gt;QWebEngineScript&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="eca7de2d15e8f1779f8425596798ae74a7c068a0" translate="yes" xml:space="preserve">
          <source>bool QWebEngineScriptCollection::isEmpty() const</source>
          <target state="translated">부울 QWebEngineScriptCollection :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="ea6f856917d794d6260422040d3045f97979f699" translate="yes" xml:space="preserve">
          <source>bool QWebEngineScriptCollection::remove(const &lt;a href=&quot;qwebenginescript&quot;&gt;QWebEngineScript&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QWebEngineScriptCollection :: remove (const &lt;a href=&quot;qwebenginescript&quot;&gt;QWebEngineScript&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="695bd8be40467a4495c34639a370c71b73eaf30a" translate="yes" xml:space="preserve">
          <source>bool QWebEngineSettings::testAttribute(&lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings::WebAttribute&lt;/a&gt;</source>
          <target state="translated">부울 QWebEngineSettings :: testAttribute ( &lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings :: WebAttribute&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a08d659071af284794c359acdc1f537f7ef57f6b" translate="yes" xml:space="preserve">
          <source>bool QWebEngineUrlScheme::operator!=(const &lt;a href=&quot;qwebengineurlscheme#QWebEngineUrlScheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QWebEngineUrlScheme :: operator! = (const &lt;a href=&quot;qwebengineurlscheme#QWebEngineUrlScheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f8bc3862c4ed25da36820d508837160b293745e3" translate="yes" xml:space="preserve">
          <source>bool QWebEngineUrlScheme::operator==(const &lt;a href=&quot;qwebengineurlscheme#QWebEngineUrlScheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QWebEngineUrlScheme :: operator == (const &lt;a href=&quot;qwebengineurlscheme#QWebEngineUrlScheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0a6cac9a471e347bbf9cbe8c911b9d11b625b467" translate="yes" xml:space="preserve">
          <source>bool QWebSocket::flush()</source>
          <target state="translated">부울 QWebSocket :: flush ()</target>
        </trans-unit>
        <trans-unit id="0e6e2f294243a5b60745c5fbba3c34a9d3d97b5f" translate="yes" xml:space="preserve">
          <source>bool QWebSocket::isValid() const</source>
          <target state="translated">bool QWebSocket :: isValid () const</target>
        </trans-unit>
        <trans-unit id="4ade7b1d66364285ad18924edd1da402fae2d6d6" translate="yes" xml:space="preserve">
          <source>bool QWebSocketCorsAuthenticator::allowed() const</source>
          <target state="translated">bool QWebSocketCorsAuthenticator :: allowed () const</target>
        </trans-unit>
        <trans-unit id="d71a0be67ce41a51333cd1d78fc29abf2d7833b9" translate="yes" xml:space="preserve">
          <source>bool QWebSocketServer::hasPendingConnections() const</source>
          <target state="translated">bool QWebSocketServer :: hasPendingConnections () const</target>
        </trans-unit>
        <trans-unit id="35b89304dfeed81c51dbf014abaab07bec6c2ccb" translate="yes" xml:space="preserve">
          <source>bool QWebSocketServer::isListening() const</source>
          <target state="translated">부울 QWebSocketServer :: isListening () const</target>
        </trans-unit>
        <trans-unit id="c71fe7eec64abf30743760bd5ddfe2a4d7bf987b" translate="yes" xml:space="preserve">
          <source>bool QWebSocketServer::listen(const &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QWebSocketServer :: listen (const &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7d37f427479130e01ec5cd6ea08281c470a9984d" translate="yes" xml:space="preserve">
          <source>bool QWebSocketServer::setNativeDescriptor(&lt;a href=&quot;#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt;</source>
          <target state="translated">부울 QWebSocketServer :: setNativeDescriptor ( &lt;a href=&quot;#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="28e5d74b9e396e2c450eca4d40ab2438b2cd7c26" translate="yes" xml:space="preserve">
          <source>bool QWebSocketServer::setNativeDescriptor(&lt;a href=&quot;qtglobal#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt;</source>
          <target state="translated">bool QWebSocketServer::setNativeDescriptor(&lt;a href=&quot;qtglobal#qintptr-typedef&quot;&gt;qintptr&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8a3f151d80f27537b901b0ff5318f228b2cbe922" translate="yes" xml:space="preserve">
          <source>bool QWheelEvent::inverted() const</source>
          <target state="translated">bool QWheelEvent :: inverted () const</target>
        </trans-unit>
        <trans-unit id="24251fa8d0c80f5eaf74248e7f0735457f6b97e0" translate="yes" xml:space="preserve">
          <source>bool QWheelEvent::isAccepted() const</source>
          <target state="translated">bool QWheelEvent :: isAccepted () const</target>
        </trans-unit>
        <trans-unit id="3c72935bb782ac77e80894c476e1ed25b0c1a951" translate="yes" xml:space="preserve">
          <source>bool QWidget::hasEditFocus() const</source>
          <target state="translated">bool QWidget :: hasEditFocus () const</target>
        </trans-unit>
        <trans-unit id="45435ce8b57ebdea4e74b84e6c21b8321772b6f1" translate="yes" xml:space="preserve">
          <source>bool QWidget::isAncestorOf(const &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">bool QWidget :: isAncestorOf (const &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="ddf9ebd4883078de4fd320104fd3b00c5befe558" translate="yes" xml:space="preserve">
          <source>bool QWidget::isEnabledTo(const &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">bool QWidget :: isEnabledTo (const &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="493df7452bc937fd55c236dd7a44e8a250a27216" translate="yes" xml:space="preserve">
          <source>bool QWidget::isHidden() const</source>
          <target state="translated">bool QWidget :: isHidden () const</target>
        </trans-unit>
        <trans-unit id="6e57bc1c75979f058359468f5d7531747d668727" translate="yes" xml:space="preserve">
          <source>bool QWidget::isVisibleTo(const &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</source>
          <target state="translated">bool QWidget :: isVisibleTo (const &lt;a href=&quot;qwidget#QWidget&quot;&gt;QWidget&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="6fe0a1a3c56f0b4f8680ea0beb0058108755496d" translate="yes" xml:space="preserve">
          <source>bool QWidget::isWindow() const</source>
          <target state="translated">부울 QWidget :: isWindow () const</target>
        </trans-unit>
        <trans-unit id="ec8328da13af1c1277e6c430d530404ab17e6df5" translate="yes" xml:space="preserve">
          <source>bool QWidget::restoreGeometry(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QWidget :: restoreGeometry (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5159d6e74c65ce12b384acc739d77f7ef81ea17b" translate="yes" xml:space="preserve">
          <source>bool QWidget::testAttribute(&lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WidgetAttribute&lt;/a&gt;</source>
          <target state="translated">부울 QWidget :: testAttribute ( &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WidgetAttribute&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bcef0d77f307f96e70e825d0fa7ed2c5083555aa" translate="yes" xml:space="preserve">
          <source>bool QWidget::underMouse() const</source>
          <target state="translated">bool QWidget :: underMouse () const</target>
        </trans-unit>
        <trans-unit id="f11d69f2191d9da739ac0a6159f39b11b0d44d21" translate="yes" xml:space="preserve">
          <source>bool QWinEventNotifier::isEnabled() const</source>
          <target state="translated">bool QWinEventNotifier :: isEnabled () const</target>
        </trans-unit>
        <trans-unit id="ef6cdccc45d172aa7fd4e5a2772930bff570462c" translate="yes" xml:space="preserve">
          <source>bool QWinJumpListCategory::isEmpty() const</source>
          <target state="translated">bool QWinJumpListCategory :: isEmpty () const</target>
        </trans-unit>
        <trans-unit id="5d3bbb9ab47bc1e225387b1a9f0669dd5c75fe43" translate="yes" xml:space="preserve">
          <source>bool QWinJumpListCategory::isVisible() const</source>
          <target state="translated">bool QWinJumpListCategory :: isVisible () const</target>
        </trans-unit>
        <trans-unit id="9f8778b364de2519ef2b09e2ad04b29fa1611bea" translate="yes" xml:space="preserve">
          <source>bool QWindow::isActive() const</source>
          <target state="translated">bool QWindow :: isActive () const</target>
        </trans-unit>
        <trans-unit id="8b8f6d7c5bbbe3cbe4992caab5a70c02a0415b4d" translate="yes" xml:space="preserve">
          <source>bool QWindow::isAncestorOf(const &lt;a href=&quot;qwindow#QWindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="translated">bool QWindow :: isAncestorOf (const &lt;a href=&quot;qwindow#QWindow&quot;&gt;QWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="34b5b567f872f5bf3cedf720d04858c6c49423d1" translate="yes" xml:space="preserve">
          <source>bool QWindow::isExposed() const</source>
          <target state="translated">bool QWindow :: isExposed () const</target>
        </trans-unit>
        <trans-unit id="43b72523f21819e5fef8fd25051fff498af3a50c" translate="yes" xml:space="preserve">
          <source>bool QWindow::isModal() const</source>
          <target state="translated">bool QWindow :: isModal () const</target>
        </trans-unit>
        <trans-unit id="c445c0ce2eca35375825d21ad7edd1d62befffbd" translate="yes" xml:space="preserve">
          <source>bool QWindow::isTopLevel() const</source>
          <target state="translated">bool QWindow :: isTopLevel () const</target>
        </trans-unit>
        <trans-unit id="5c031f0a5a2dcc5351e5f67778e7934025c88f9b" translate="yes" xml:space="preserve">
          <source>bool QWindow::setKeyboardGrabEnabled(bool</source>
          <target state="translated">bool QWindow :: setKeyboardGrabEnabled (bool</target>
        </trans-unit>
        <trans-unit id="8b2af30be60f73c12a351fcbc69b74f9d6e6a6f0" translate="yes" xml:space="preserve">
          <source>bool QWindow::setMouseGrabEnabled(bool</source>
          <target state="translated">bool QWindow :: setMouseGrabEnabled (bool</target>
        </trans-unit>
        <trans-unit id="a6cea3349f9ad299806bcb9b5c24353cca801b55" translate="yes" xml:space="preserve">
          <source>bool QWizard::hasVisitedPage(int</source>
          <target state="translated">부울 QWizard :: hasVisitedPage (int</target>
        </trans-unit>
        <trans-unit id="788b00d10e9efbe6b60b6ba06d7246161912eb35" translate="yes" xml:space="preserve">
          <source>bool QWizard::testOption(&lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;QWizard::WizardOption&lt;/a&gt;</source>
          <target state="translated">부울 QWizard :: testOption ( &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;QWizard :: WizardOption&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d537631328174f677fde400998f1b7f5c68bc532" translate="yes" xml:space="preserve">
          <source>bool QWizardPage::isCommitPage() const</source>
          <target state="translated">bool QWizardPage :: isCommitPage () const</target>
        </trans-unit>
        <trans-unit id="5f301549f7d2d22dca88e63f8ca1daf1db8eff70" translate="yes" xml:space="preserve">
          <source>bool QWizardPage::isFinalPage() const</source>
          <target state="translated">bool QWizardPage::isFinalPage() const</target>
        </trans-unit>
        <trans-unit id="c5ee5b50490675e5f203054e23a084d5260ecf7a" translate="yes" xml:space="preserve">
          <source>bool QXmlItem::isAtomicValue() const</source>
          <target state="translated">부울 QXmlItem :: isAtomicValue () const</target>
        </trans-unit>
        <trans-unit id="7d5ddcb45e5ca12566c31a4b8965b6111ce071f6" translate="yes" xml:space="preserve">
          <source>bool QXmlItem::isNode() const</source>
          <target state="translated">부울 QXmlItem :: isNode () const</target>
        </trans-unit>
        <trans-unit id="77c29a38d117c9732bbe999b207e9684b9f7e035" translate="yes" xml:space="preserve">
          <source>bool QXmlItem::isNull() const</source>
          <target state="translated">bool QXmlItem :: isNull () const</target>
        </trans-unit>
        <trans-unit id="dd33147fa4235f1edf9bf22faa7cf3819d66bd66" translate="yes" xml:space="preserve">
          <source>bool QXmlName::isNull() const</source>
          <target state="translated">bool QXmlName :: isNull () const</target>
        </trans-unit>
        <trans-unit id="7c748c9923b780185b55e1160b3eb2713f9adb53" translate="yes" xml:space="preserve">
          <source>bool QXmlName::operator!=(const &lt;a href=&quot;qxmlname#QXmlName&quot;&gt;QXmlName&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QXmlName :: 연산자! = (const &lt;a href=&quot;qxmlname#QXmlName&quot;&gt;QXmlName&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="896dbad17721f9393bee4a80d44b9d509c2e7f6d" translate="yes" xml:space="preserve">
          <source>bool QXmlName::operator==(const &lt;a href=&quot;qxmlname#QXmlName&quot;&gt;QXmlName&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QXmlName :: operator == (const &lt;a href=&quot;qxmlname#QXmlName&quot;&gt;QXmlName&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="43ad39733065c9e3a436e7cce62e59fccb54e65f" translate="yes" xml:space="preserve">
          <source>bool QXmlNodeModelIndex::isNull() const</source>
          <target state="translated">bool QXmlNodeModelIndex :: isNull () const</target>
        </trans-unit>
        <trans-unit id="498298a2eb8ffcac94f5ecf09d78554c1a9e6da0" translate="yes" xml:space="preserve">
          <source>bool QXmlNodeModelIndex::operator!=(const &lt;a href=&quot;qxmlnodemodelindex#QXmlNodeModelIndex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QXmlNodeModelIndex :: operator! = (const &lt;a href=&quot;qxmlnodemodelindex#QXmlNodeModelIndex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="09fa20a65c5e29f2c45d778b0fb25e4f46f1ea01" translate="yes" xml:space="preserve">
          <source>bool QXmlNodeModelIndex::operator==(const &lt;a href=&quot;qxmlnodemodelindex#QXmlNodeModelIndex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QXmlNodeModelIndex :: operator == (const &lt;a href=&quot;qxmlnodemodelindex#QXmlNodeModelIndex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ca2cc3b05433a64b507aed3ecd57c764eb0d78b2" translate="yes" xml:space="preserve">
          <source>bool QXmlQuery::evaluateTo(&lt;a href=&quot;qabstractxmlreceiver&quot;&gt;QAbstractXmlReceiver&lt;/a&gt; *</source>
          <target state="translated">bool QXmlQuery :: evaluateTo ( &lt;a href=&quot;qabstractxmlreceiver&quot;&gt;QAbstractXmlReceiver&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2c06837d823feef543e7be954989ac0666e9b215" translate="yes" xml:space="preserve">
          <source>bool QXmlQuery::evaluateTo(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">bool QXmlQuery :: evaluateTo ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="2483a439edd552f40f9647ca13f3084b65985e0d" translate="yes" xml:space="preserve">
          <source>bool QXmlQuery::evaluateTo(&lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; *</source>
          <target state="translated">bool QXmlQuery :: evaluateTo ( &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="d9f2551f9ed4c67aa8978551662458ffcd393c12" translate="yes" xml:space="preserve">
          <source>bool QXmlQuery::evaluateTo(&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; *</source>
          <target state="translated">bool QXmlQuery :: evaluateTo ( &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="9fd5ada1d3678527de68e2ebff7c5a2cefcde54e" translate="yes" xml:space="preserve">
          <source>bool QXmlQuery::isValid() const</source>
          <target state="translated">bool QXmlQuery :: isValid () const</target>
        </trans-unit>
        <trans-unit id="fc7b53d29776295d66a527abb6084d7384ce97b8" translate="yes" xml:space="preserve">
          <source>bool QXmlQuery::setFocus(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">bool QXmlQuery :: setFocus ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="fb7bb5cdeb2898d84caf866f03bd06c55d150c79" translate="yes" xml:space="preserve">
          <source>bool QXmlQuery::setFocus(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QXmlQuery :: setFocus (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d11c7f16a78f4650091c1d0b7dfb2b09446bada4" translate="yes" xml:space="preserve">
          <source>bool QXmlQuery::setFocus(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QXmlQuery :: setFocus (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="11d8ae96a8d158d4aa7724578b4c39a3f23254db" translate="yes" xml:space="preserve">
          <source>bool QXmlResultItems::hasError() const</source>
          <target state="translated">bool QXmlResultItems :: hasError () const</target>
        </trans-unit>
        <trans-unit id="d8c0243716fd77aa6a692f6b23b4434015f76b11" translate="yes" xml:space="preserve">
          <source>bool QXmlSchema::isValid() const</source>
          <target state="translated">bool QXmlSchema :: isValid () const</target>
        </trans-unit>
        <trans-unit id="83304ec9485345c3ad7a4bfb3b3ca1fcea64d10a" translate="yes" xml:space="preserve">
          <source>bool QXmlSchema::load(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">bool QXmlSchema :: load ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="c0e671668c60e4388c4a84a20325c4b2e1677269" translate="yes" xml:space="preserve">
          <source>bool QXmlSchema::load(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QXmlSchema :: load (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="26195adcf260d42c96a57b74b67ce173d69e7782" translate="yes" xml:space="preserve">
          <source>bool QXmlSchema::load(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QXmlSchema :: load (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d5d1834d3cd85496b245b59050546c46a7f5e9ec" translate="yes" xml:space="preserve">
          <source>bool QXmlSchemaValidator::validate(&lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</source>
          <target state="translated">부울 QXmlSchemaValidator :: validate ( &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="1a11b31cc13bc1214c43ddd8059ae0257d0dd5f5" translate="yes" xml:space="preserve">
          <source>bool QXmlSchemaValidator::validate(const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QXmlSchemaValidator :: validate (const &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fda2696b111bc774d511df9f16547c14ed7b826d" translate="yes" xml:space="preserve">
          <source>bool QXmlSchemaValidator::validate(const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QXmlSchemaValidator :: 확인 (const &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="67651e77d717f8eac82b7946e60d42788883ae2d" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamAttribute::isDefault() const</source>
          <target state="translated">bool QXmlStreamAttribute :: isDefault () const</target>
        </trans-unit>
        <trans-unit id="5c2cf9ff0de318cdfc3d03e9727813c0e501a155" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamAttribute::operator!=(const &lt;a href=&quot;qxmlstreamattribute#QXmlStreamAttribute&quot;&gt;QXmlStreamAttribute&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QXmlStreamAttribute :: operator! = (const &lt;a href=&quot;qxmlstreamattribute#QXmlStreamAttribute&quot;&gt;QXmlStreamAttribute&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="413c2c5828b723985701dd02dec7557558dc56bb" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamAttribute::operator==(const &lt;a href=&quot;qxmlstreamattribute#QXmlStreamAttribute&quot;&gt;QXmlStreamAttribute&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QXmlStreamAttribute :: operator == (const &lt;a href=&quot;qxmlstreamattribute#QXmlStreamAttribute&quot;&gt;QXmlStreamAttribute&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="01d22b0e168e86f9b08fff465b79e64f05ae80ba" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamAttributes::hasAttribute(&lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</source>
          <target state="translated">bool QXmlStreamAttributes :: hasAttribute ( &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="fd317bca48f5bf96b23615ac9f9f8fdac64cbda7" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamAttributes::hasAttribute(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QXmlStreamAttributes :: hasAttribute (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="706bd8c5283d91df46998d56f625f99e8239df88" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamEntityDeclaration::operator!=(const &lt;a href=&quot;qxmlstreamentitydeclaration#QXmlStreamEntityDeclaration&quot;&gt;QXmlStreamEntityDeclaration&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QXmlStreamEntityDeclaration :: operator! = (const &lt;a href=&quot;qxmlstreamentitydeclaration#QXmlStreamEntityDeclaration&quot;&gt;QXmlStreamEntityDeclaration&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="14258ceb432c5b28abfd85a87aa6bbf8045b26b8" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamEntityDeclaration::operator==(const &lt;a href=&quot;qxmlstreamentitydeclaration#QXmlStreamEntityDeclaration&quot;&gt;QXmlStreamEntityDeclaration&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QXmlStreamEntityDeclaration :: operator == (const &lt;a href=&quot;qxmlstreamentitydeclaration#QXmlStreamEntityDeclaration&quot;&gt;QXmlStreamEntityDeclaration&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d0eefc403e4388e2a02fdf746c7e257ec81648b0" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamNamespaceDeclaration::operator!=(const &lt;a href=&quot;qxmlstreamnamespacedeclaration#QXmlStreamNamespaceDeclaration&quot;&gt;QXmlStreamNamespaceDeclaration&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QXmlStreamNamespaceDeclaration :: operator! = (const &lt;a href=&quot;qxmlstreamnamespacedeclaration#QXmlStreamNamespaceDeclaration&quot;&gt;QXmlStreamNamespaceDeclaration&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d68a3f0824edc029b6d24b8b43eafc58a52e749a" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamNamespaceDeclaration::operator==(const &lt;a href=&quot;qxmlstreamnamespacedeclaration#QXmlStreamNamespaceDeclaration&quot;&gt;QXmlStreamNamespaceDeclaration&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QXmlStreamNamespaceDeclaration :: operator == (const &lt;a href=&quot;qxmlstreamnamespacedeclaration#QXmlStreamNamespaceDeclaration&quot;&gt;QXmlStreamNamespaceDeclaration&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="fe9e3e92a70969fdd4ff694c0bf1148cddc7c2ad" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamNotationDeclaration::operator!=(const &lt;a href=&quot;qxmlstreamnotationdeclaration#QXmlStreamNotationDeclaration&quot;&gt;QXmlStreamNotationDeclaration&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QXmlStreamNotationDeclaration :: operator! = (const &lt;a href=&quot;qxmlstreamnotationdeclaration#QXmlStreamNotationDeclaration&quot;&gt;QXmlStreamNotationDeclaration&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="754a4e95d375bfddb29ee3357a5d8d5054b6fc58" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamNotationDeclaration::operator==(const &lt;a href=&quot;qxmlstreamnotationdeclaration#QXmlStreamNotationDeclaration&quot;&gt;QXmlStreamNotationDeclaration&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QXmlStreamNotationDeclaration :: operator == (const &lt;a href=&quot;qxmlstreamnotationdeclaration#QXmlStreamNotationDeclaration&quot;&gt;QXmlStreamNotationDeclaration&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3d5f616eab59b23b7bcb42df94a45f37842dc816" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamReader::atEnd() const</source>
          <target state="translated">bool QXmlStreamReader :: atEnd () const</target>
        </trans-unit>
        <trans-unit id="863702d0f399e23de048e8c50f4b261abd759f95" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamReader::hasError() const</source>
          <target state="translated">bool QXmlStreamReader :: hasError () const</target>
        </trans-unit>
        <trans-unit id="ca4dda27a3a63cc73837ab29831a3f849ce7c8c4" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamReader::isCDATA() const</source>
          <target state="translated">bool QXmlStreamReader :: isCDATA () const</target>
        </trans-unit>
        <trans-unit id="8520a8b9b7ba859c31e95168909b91d30c59223e" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamReader::isCharacters() const</source>
          <target state="translated">bool QXmlStreamReader :: isCharacters () const</target>
        </trans-unit>
        <trans-unit id="82c3b161d6e0a52cb24dcc09ce374aef044932f0" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamReader::isComment() const</source>
          <target state="translated">bool QXmlStreamReader :: isComment () const</target>
        </trans-unit>
        <trans-unit id="799ed205953156387fcdcde3a52be4bb18b845fd" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamReader::isDTD() const</source>
          <target state="translated">부울 QXmlStreamReader :: isDTD () const</target>
        </trans-unit>
        <trans-unit id="63b92721b6ac120fb952c0e39ae0814fb61b027f" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamReader::isEndDocument() const</source>
          <target state="translated">bool QXmlStreamReader :: isEndDocument () const</target>
        </trans-unit>
        <trans-unit id="e769f86bfe9e3226b5240638af263ea89b65aca3" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamReader::isEndElement() const</source>
          <target state="translated">bool QXmlStreamReader :: isEndElement () const</target>
        </trans-unit>
        <trans-unit id="76562d54bc48af746f4215df7f8f9dafc54a2f95" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamReader::isEntityReference() const</source>
          <target state="translated">bool QXmlStreamReader :: isEntityReference () const</target>
        </trans-unit>
        <trans-unit id="b5417e78363e613e93fa2c7098b5fe015ffbf503" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamReader::isProcessingInstruction() const</source>
          <target state="translated">bool QXmlStreamReader :: isProcessingInstruction () const</target>
        </trans-unit>
        <trans-unit id="ad6c76a14dddda591951c94dc97bf0ff1ed8bec0" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamReader::isStandaloneDocument() const</source>
          <target state="translated">bool QXmlStreamReader :: isStandaloneDocument () const</target>
        </trans-unit>
        <trans-unit id="787a72930909767823eb995ac2203f23202af60e" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamReader::isStartDocument() const</source>
          <target state="translated">bool QXmlStreamReader :: isStartDocument () const</target>
        </trans-unit>
        <trans-unit id="69a0e7be1862a1c7703ace8ec5300355483d5cad" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamReader::isStartElement() const</source>
          <target state="translated">bool QXmlStreamReader :: isStartElement () const</target>
        </trans-unit>
        <trans-unit id="1a89fc791d5111ebb90f990492e4acace6e24924" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamReader::isWhitespace() const</source>
          <target state="translated">bool QXmlStreamReader :: isWhitespace () const</target>
        </trans-unit>
        <trans-unit id="7e874841097fdd25daf9467a0c13166efea867d9" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamReader::readNextStartElement()</source>
          <target state="translated">bool QXmlStreamReader :: readNextStartElement ()</target>
        </trans-unit>
        <trans-unit id="c4e5230bb7aefb5ac35a5a58986dad9db099f5b1" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamWriter::autoFormatting() const</source>
          <target state="translated">bool QXmlStreamWriter :: autoFormatting () const</target>
        </trans-unit>
        <trans-unit id="6ae355e73fe28cadd575857e2793c7abb155b13c" translate="yes" xml:space="preserve">
          <source>bool QXmlStreamWriter::hasError() const</source>
          <target state="translated">bool QXmlStreamWriter :: hasError () const</target>
        </trans-unit>
        <trans-unit id="83e0a8420539777543b158cee3d2957dac5dfdf9" translate="yes" xml:space="preserve">
          <source>bool Qt::mightBeRichText(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool Qt :: mightBeRichText (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="be459bcd744153cb856b3cbc70fb1a1abe65686d" translate="yes" xml:space="preserve">
          <source>bool QtAndroid::bindService(const &lt;a href=&quot;qandroidintent&quot;&gt;QAndroidIntent&lt;/a&gt; &amp;amp;</source>
          <target state="translated">부울 QtAndroid :: bindService (const &lt;a href=&quot;qandroidintent&quot;&gt;QAndroidIntent&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0e123b6cdce3caf04b71956229f5f66f1976a728" translate="yes" xml:space="preserve">
          <source>bool QtAndroid::shouldShowRequestPermissionRationale(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool QtAndroid :: shouldShowRequestPermissionRationale (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="599718404d652a0f8ffa24cedc05fb6e899ba57f" translate="yes" xml:space="preserve">
          <source>bool QtMac::isMainWindow(&lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</source>
          <target state="translated">bool QtMac :: isMainWindow ( &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; *</target>
        </trans-unit>
        <trans-unit id="3420c3ee8f3bb763bc7049e488c61b865bb27f1e" translate="yes" xml:space="preserve">
          <source>bool RenderState::isCachedMaterialDataDirty() const</source>
          <target state="translated">bool RenderState :: isCachedMaterialDataDirty () const</target>
        </trans-unit>
        <trans-unit id="079c82b1e699f94e7bea8d401e0b6587f1a27ad7" translate="yes" xml:space="preserve">
          <source>bool RenderState::isMatrixDirty() const</source>
          <target state="translated">bool RenderState :: isMatrixDirty () const</target>
        </trans-unit>
        <trans-unit id="1e0c2b149f4a7f9ceb2f23afecb7dd1cefdf4285" translate="yes" xml:space="preserve">
          <source>bool RenderState::isOpacityDirty() const</source>
          <target state="translated">bool RenderState :: isOpacityDirty () const</target>
        </trans-unit>
        <trans-unit id="5d5e49c84d6908dddabc339a1b9a31a2db87ab32" translate="yes" xml:space="preserve">
          <source>bool RequestId::isValid() const</source>
          <target state="translated">bool RequestId::isValid() const</target>
        </trans-unit>
        <trans-unit id="50f562a195699f45fb16e3f04241bd80d9f54a1b" translate="yes" xml:space="preserve">
          <source>bool Tab::operator!=(const &lt;a href=&quot;qtextoption-tab#Tab&quot;&gt;Tab&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool Tab :: operator! = (const &lt;a href=&quot;qtextoption-tab#Tab&quot;&gt;탭&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="ad9e3e27bdb91c7cd65834a908b6bfdf1bb495af" translate="yes" xml:space="preserve">
          <source>bool Tab::operator==(const &lt;a href=&quot;qtextoption-tab#Tab&quot;&gt;Tab&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool Tab :: operator == (const &lt;a href=&quot;qtextoption-tab#Tab&quot;&gt;탭&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d472dfbcb78ce807a3e32628731da50ed204df44" translate="yes" xml:space="preserve">
          <source>bool accepted - Set this to &lt;code&gt;false&lt;/code&gt; to stop the event from triggering its predefined action</source>
          <target state="translated">bool Accept- 이벤트가 사전 정의 된 조치를 트리거하지 못하게하려면 이를 &lt;code&gt;false&lt;/code&gt; 로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="0d0bfb6b06a46138eb16db0df071226903c8f434" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator!=(const &lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator! = (const &lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="eb4aa189bedc1d3d65ffd2ed1516ee20bcc6e934" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator!=(const &lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator! = (const &lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1f55c8041c2d1cece2b45ba6ae8439467c65b6a1" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator!=(const &lt;a href=&quot;qjsonarray-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator! = (const &lt;a href=&quot;qjsonarray-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="5b86d0189a0d4e56701db90a69831feff49bc9e6" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator!=(const &lt;a href=&quot;qjsonobject-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator! = (const &lt;a href=&quot;qjsonobject-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4a41b0d22ce8c2a6f8cecc6dd54e02387509b30d" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator!=(const &lt;a href=&quot;qjsonobject-iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator! = (const &lt;a href=&quot;qjsonobject-iterator&quot;&gt;반복자&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="7e2cf16814985d2f712dca16ad0548050c83e112" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator!=(const &lt;a href=&quot;qlinkedlist-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator! = (const &lt;a href=&quot;qlinkedlist-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2dd4f5db3311220b950505f0f2a5e57daea13265" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator!=(const &lt;a href=&quot;qlist-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator! = (const &lt;a href=&quot;qlist-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bcb79495d638ae8c713c56df144b0485beba9747" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator!=(const &lt;a href=&quot;qmap-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator! = (const &lt;a href=&quot;qmap-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c1124b823085da2a936c7f5f3800d9e5de474772" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator!=(const &lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator! = (const &lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="80fb3caa332835a0e15699ecf90432e57d2778c6" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator!=(const const_iterator &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator! = (const const_iterator &amp;amp;</target>
        </trans-unit>
        <trans-unit id="0b8ea09188169ce5b8e59042bba7f79cd9b6e6bb" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator&amp;gt;(const &lt;a href=&quot;qjsonarray-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator&amp;gt; (const &lt;a href=&quot;qjsonarray-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="20484639a6b47ce5f88b5d58f6f243d0cfce631b" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator&amp;gt;(const &lt;a href=&quot;qjsonobject-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator::operator&amp;gt;(const &lt;a href=&quot;qjsonobject-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a497608c0543740b0941c3f29bfbb08895f31935" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator&amp;gt;(const &lt;a href=&quot;qlist-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator&amp;gt; (const &lt;a href=&quot;qlist-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="51420ad80055f6c3b0b9ba25295bb1b88ee7e5ff" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator&amp;gt;=(const &lt;a href=&quot;qjsonarray-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator&amp;gt; = (const &lt;a href=&quot;qjsonarray-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="e555a5b410d93ae8f33a80e43d6f5973c9bc3c8f" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator&amp;gt;=(const &lt;a href=&quot;qjsonobject-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator::operator&amp;gt;=(const &lt;a href=&quot;qjsonobject-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="94d0137515c92ef56ab0c7fe647704d878f41254" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator&amp;gt;=(const &lt;a href=&quot;qlist-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator&amp;gt; = (const &lt;a href=&quot;qlist-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="201c2ead208621fc3ede13c4b858d17229ac80fb" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator&amp;lt;(const &lt;a href=&quot;qjsonarray-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator &amp;lt;(const &lt;a href=&quot;qjsonarray-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="355e8cafedc42d3efb3e5990df901219dfd17ce1" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator&amp;lt;(const &lt;a href=&quot;qjsonobject-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator::operator&amp;lt;(const &lt;a href=&quot;qjsonobject-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4eae3e1e0058c8a05e8e30921e3a2ec10093f4b9" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator&amp;lt;(const &lt;a href=&quot;qlist-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator &amp;lt;(const &lt;a href=&quot;qlist-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="3d93b93efa90e3a3ab3e3ee2e9055178c6cefeb2" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator&amp;lt;=(const &lt;a href=&quot;qjsonarray-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator &amp;lt;= (const &lt;a href=&quot;qjsonarray-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b634f1db8f03b798dcc6e4e11bf6f27c84673829" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator&amp;lt;=(const &lt;a href=&quot;qjsonobject-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator::operator&amp;lt;=(const &lt;a href=&quot;qjsonobject-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="f2623b719c9bead007f71591ffdbcd91f75de144" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator&amp;lt;=(const &lt;a href=&quot;qlist-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator &amp;lt;= (const &lt;a href=&quot;qlist-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6853034ee0eba912a8d7f397b29e70ab29e8fdd9" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator==(const &lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator == (const &lt;a href=&quot;qfuture-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="a7a7be3a86e7bc7bc4c8d9ad6d386917cc02c043" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator==(const &lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator == (const &lt;a href=&quot;qhash-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="785fe4c778bb9fc09bc09ea1e25380a763f850ef" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator==(const &lt;a href=&quot;qjsonarray-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator == (const &lt;a href=&quot;qjsonarray-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="4ed223e4ca25cbf860deb2a3c997fc6e93066a7d" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator==(const &lt;a href=&quot;qjsonobject-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator == (const &lt;a href=&quot;qjsonobject-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="bed9869fffadbace9fe50dfbaf4156f4990d3b52" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator==(const &lt;a href=&quot;qjsonobject-iterator&quot;&gt;iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator == (const &lt;a href=&quot;qjsonobject-iterator&quot;&gt;반복자&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="d446fea569dece84dea4746dad00461ba3380c76" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator==(const &lt;a href=&quot;qlinkedlist-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator == (const &lt;a href=&quot;qlinkedlist-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="2202a1e8aa4086e8b3e410e15d1b0d5e21984682" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator==(const &lt;a href=&quot;qlist-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator == (const &lt;a href=&quot;qlist-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="c3d3b0a8c60cb01b52ab2a63d1e71731704dc346" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator==(const &lt;a href=&quot;qmap-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator == (const &lt;a href=&quot;qmap-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="1d7231d01e438d20c3fac8eadeb1793ed24d74e4" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator==(const &lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator == (const &lt;a href=&quot;qset-const-iterator#const_iterator&quot;&gt;const_iterator&lt;/a&gt; &amp;amp;</target>
        </trans-unit>
        <trans-unit id="b716ee562ffe49d49623f7f1b065a267acc5fd66" translate="yes" xml:space="preserve">
          <source>bool const_iterator::operator==(const const_iterator &amp;amp;</source>
          <target state="translated">bool const_iterator :: operator == (const const_iterator &amp;amp;</target>
        </trans-unit>
        <trans-unit id="6f7cc48f345d43cd813f36ee1144467701875674" translate="yes" xml:space="preserve">
          <source>bool fuzzyEquals(matrix4x4 other, real epsilon)</source>
          <target state="translated">bool fuzzyEquals (matrix4x4 기타, 실제 엡실론)</target>
        </trans-unit>
        <trans-unit id="f387e49a20d089522df55f859c39ee6faec4dba8" translate="yes" xml:space="preserve">
          <source>bool fuzzyEquals(vector2d other, real epsilon)</source>
          <target state="translated">bool fuzzyEquals (vector2d 기타, 실제 엡실론)</target>
        </trans-unit>
        <trans-unit id="80a77e11a59c300025a7a6bd28b186ec2c14efd3" translate="yes" xml:space="preserve">
          <source>bool fuzzyEquals(vector3d other, real epsilon)</source>
          <target state="translated">bool fuzzyEquals (vector3d 기타, 실제 엡실론)</target>
        </trans-unit>
        <trans-unit id="01fcef866d37f3d00493bad1426df5370abaff76" translate="yes" xml:space="preserve">
          <source>bool fuzzyEquals(vector4d other, real epsilon)</source>
          <target state="translated">bool fuzzyEquals (vector4d 기타, 실제 엡실론)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
