<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="4656932adfb90ea204bd573035fd184215e107ea" translate="yes" xml:space="preserve">
          <source>Typically the sound effect should be reused, which allows all the parsing and preparation to be done ahead of time, and only triggered when necessary. This is easy to achieve with QML, since you can declare your &lt;a href=&quot;qml-multimedia#soundeffect&quot;&gt;SoundEffect&lt;/a&gt; instance and refer to it elsewhere.</source>
          <target state="translated">일반적으로 사운드 효과를 재사용해야합니다.이를 통해 모든 구문 분석 및 준비를 미리 수행 할 수 있으며 필요한 경우에만 트리거 할 수 있습니다. &lt;a href=&quot;qml-multimedia#soundeffect&quot;&gt;SoundEffect&lt;/a&gt; 인스턴스를 선언 하고 다른 곳에서 참조 할 수 있으므로 QML로 쉽게 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c2f6f752ff12735230d90ef999731b308e52198c" translate="yes" xml:space="preserve">
          <source>Typically the sound effect should be reused, which allows all the parsing and preparation to be done ahead of time, and only triggered when necessary. This is easy to achieve with QML, since you can declare your SoundEffect instance and refer to it elsewhere.</source>
          <target state="translated">Typically the sound effect should be reused, which allows all the parsing and preparation to be done ahead of time, and only triggered when necessary. This is easy to achieve with QML, since you can declare your SoundEffect instance and refer to it elsewhere.</target>
        </trans-unit>
        <trans-unit id="8514d0aedf5de826ecb5ea8176420b50ee52aa79" translate="yes" xml:space="preserve">
          <source>Typically this is used in conjunction with &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; to remember the size for a future session. A version number is stored as part of the data.</source>
          <target state="translated">일반적으로 이것은 향후 세션의 크기를 기억하기 위해 &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 와 함께 사용됩니다 . 버전 번호는 데이터의 일부로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="b223f570343e81e9bb64f3254a55150c6d31d52d" translate="yes" xml:space="preserve">
          <source>Typically this is used in conjunction with &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; to remember the size for a future session. A version number is stored as part of the data. Here is an example:</source>
          <target state="translated">일반적으로 이것은 향후 세션의 크기를 기억하기 위해 &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 와 함께 사용됩니다 . 버전 번호는 데이터의 일부로 저장됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="383828e6cb492a59cf6438607d0b1898eca4aabf" translate="yes" xml:space="preserve">
          <source>Typically this is used in conjunction with &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; to restore the size from a past session.</source>
          <target state="translated">일반적으로 &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 와 함께 사용 하여 과거 세션에서 크기를 복원합니다.</target>
        </trans-unit>
        <trans-unit id="21c5f1d3a34340e4d4f89965ecc02861a662c300" translate="yes" xml:space="preserve">
          <source>Typically this is used in conjunction with &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; to restore the size from a past session. Here is an example:</source>
          <target state="translated">일반적으로 &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 와 함께 사용 하여 과거 세션에서 크기를 복원합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="680eadb66f81e09930ac8bded751faefcadc116f" translate="yes" xml:space="preserve">
          <source>Typically this will include 8 and 16 bit sample sizes.</source>
          <target state="translated">일반적으로 여기에는 8 및 16 비트 샘플 크기가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="5c4d54ee48d48ed6552ac413716dd1498301e7df" translate="yes" xml:space="preserve">
          <source>Typically you would use the overload of &lt;a href=&quot;qstate#addTransition&quot;&gt;QState::addTransition&lt;/a&gt;() that takes a sender and signal as arguments, rather than creating &lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt; objects directly. &lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt; is part of &lt;a href=&quot;statemachine-api#&quot;&gt;The State Machine Framework&lt;/a&gt;.</source>
          <target state="translated">일반적으로 &lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt; 객체를 직접 만드는 대신 발신자와 신호를 인수로 취하는 &lt;a href=&quot;qstate#addTransition&quot;&gt;QState :: addTransition&lt;/a&gt; () 의 오버로드를 사용합니다 . &lt;a href=&quot;qsignaltransition&quot;&gt;QSignalTransition&lt;/a&gt; 은 &lt;a href=&quot;statemachine-api#&quot;&gt;State Machine Framework의&lt;/a&gt; 일부입니다 .</target>
        </trans-unit>
        <trans-unit id="d3f69d854b79da37c452dc3497013fe5921579d5" translate="yes" xml:space="preserve">
          <source>Typically you would use the overload of &lt;a href=&quot;qstate#addTransition&quot;&gt;QState::addTransition&lt;/a&gt;() that takes a sender and signal as arguments, rather than creating QSignalTransition objects directly. QSignalTransition is part of &lt;a href=&quot;statemachine-api&quot;&gt;The State Machine Framework&lt;/a&gt;.</source>
          <target state="translated">Typically you would use the overload of &lt;a href=&quot;qstate#addTransition&quot;&gt;QState::addTransition&lt;/a&gt;() that takes a sender and signal as arguments, rather than creating QSignalTransition objects directly. QSignalTransition is part of &lt;a href=&quot;statemachine-api&quot;&gt;The State Machine Framework&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="919855dcd26dc10738a77792e374b4653dfefb8c" translate="yes" xml:space="preserve">
          <source>Typically, &lt;a href=&quot;qprintdialog&quot;&gt;QPrintDialog&lt;/a&gt; objects are constructed with a &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object, and executed using the &lt;a href=&quot;qprintdialog#exec&quot;&gt;exec&lt;/a&gt;() function.</source>
          <target state="translated">일반적 &lt;a href=&quot;qprintdialog&quot;&gt;QPrintDialog의&lt;/a&gt; 객체는로 구성되는 &lt;a href=&quot;qprinter&quot;&gt;QPrinter의&lt;/a&gt; 목적 및 사용을 실행 &lt;a href=&quot;qprintdialog#exec&quot;&gt;간부&lt;/a&gt; () 함수.</target>
        </trans-unit>
        <trans-unit id="01a16e4571d7716bad59ff5e43bdb2d3c9db79f7" translate="yes" xml:space="preserve">
          <source>Typically, QPrintDialog objects are constructed with a &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object, and executed using the &lt;a href=&quot;qprintdialog#exec&quot;&gt;exec&lt;/a&gt;() function.</source>
          <target state="translated">Typically, QPrintDialog objects are constructed with a &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object, and executed using the &lt;a href=&quot;qprintdialog#exec&quot;&gt;exec&lt;/a&gt;() function.</target>
        </trans-unit>
        <trans-unit id="735f7579a237035408c9a58aa57a4a00351d92be" translate="yes" xml:space="preserve">
          <source>Typically, a compositor written with Qt Wayland Compositor becomes a subsystem inside a larger application manager process. Qt Wayland Compositor provides the APIs to communicate with clients and display their content on the screen. The QML APIs contain high-level APIs that easily integrate with the rest of Qt, enabling convenient animations, effects, and UI through Qt Quick. There are also C++ APIs available - if you need more low-level access.</source>
          <target state="translated">일반적으로 Qt Wayland Compositor로 작성된 컴포 지터는 더 큰 응용 프로그램 관리자 프로세스의 하위 시스템이됩니다. Qt Wayland Compositor는 클라이언트와 통신하고 컨텐츠를 화면에 표시하기위한 API를 제공합니다. QML API에는 나머지 Qt와 쉽게 통합 할 수있는 고급 API가 포함되어있어 Qt Quick을 통해 편리한 애니메이션, 효과 및 UI를 사용할 수 있습니다. 더 낮은 수준의 액세스가 필요한 경우 사용 가능한 C ++ API도 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa4f1a112667855d44236312a7011be11189a495" translate="yes" xml:space="preserve">
          <source>Typically, a request for the status bar functionality occurs in relation to a &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; object. &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; provides a main application window, with a menu bar, tool bars, dock widgets</source>
          <target state="translated">일반적으로 상태 표시 줄 기능에 대한 요청은 &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; 객체 와 관련하여 발생 합니다. &lt;a href=&quot;qmainwindow&quot;&gt;QMainWindow&lt;/a&gt; 는 메뉴 모음, 도구 모음, 독 위젯이있는 기본 응용 프로그램 창을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="66064b24ca4ade9a0e91beb036ca688ab654a2ea" translate="yes" xml:space="preserve">
          <source>Typically, a resource-definition script (.rc file) is compiled to a Windows resource file. Within the Microsoft toolchain, the RC tool generates a .res file, which can be linked with the Microsoft linker to an EXE or DLL. The &lt;a href=&quot;https://mingw-w64.org/&quot;&gt;MinGW&lt;/a&gt; toolchain uses the windres tool to generate an .o file that can be linked with the &lt;a href=&quot;https://mingw-w64.org/&quot;&gt;MinGW&lt;/a&gt; linker to an EXE or DLL.</source>
          <target state="translated">일반적으로 리소스 정의 스크립트 (.rc 파일)는 Windows 리소스 파일로 컴파일됩니다. Microsoft 도구 체인 내에서 RC 도구는 .res 파일을 생성하며이 파일은 Microsoft 링커와 EXE 또는 DLL에 연결될 수 있습니다. &lt;a href=&quot;https://mingw-w64.org/&quot;&gt;는 MinGW의&lt;/a&gt; 툴체인은 연계 할 수있는 .o 인 파일을 생성 할 수있는한데로 도구 사용 &lt;a href=&quot;https://mingw-w64.org/&quot;&gt;는 MinGW의&lt;/a&gt; EXE 파일이나 DLL에 링커를.</target>
        </trans-unit>
        <trans-unit id="e9b17239c9c31700b1026b1973c2ca70226848e4" translate="yes" xml:space="preserve">
          <source>Typically, function documentation immediately precedes the implementation of the function in the &lt;code&gt;.cpp&lt;/code&gt; file. For function documentation that is not immediately above the implementation, the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#fn-command&quot;&gt;\fn&lt;/a&gt; is needed.</source>
          <target state="translated">일반적으로 함수 설명서는 &lt;code&gt;.cpp&lt;/code&gt; 파일 의 함수 구현 직전에 있습니다. 구현 바로 위에 있지 않은 함수 문서의 경우 &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#fn-command&quot;&gt;\ fn&lt;/a&gt; 이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="182e2842c7da3244b2295b771584520c4b0a5df4" translate="yes" xml:space="preserve">
          <source>Typically, function documentation immediately precedes the implementation of the function in the &lt;code&gt;.cpp&lt;/code&gt; file. For function documentation that is not immediately above the implementation, the &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#fn-command&quot;&gt;\fn&lt;/a&gt; is needed.</source>
          <target state="translated">Typically, function documentation immediately precedes the implementation of the function in the &lt;code&gt;.cpp&lt;/code&gt; file. For function documentation that is not immediately above the implementation, the &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#fn-command&quot;&gt;\fn&lt;/a&gt; is needed.</target>
        </trans-unit>
        <trans-unit id="f8cbee459c1aa6d1625768868836b1503f8c5110" translate="yes" xml:space="preserve">
          <source>Typically, function documentation immediately precedes the implementation of the function in the &lt;code&gt;.cpp&lt;/code&gt; file. For function documentation that is not immediately above the implementation, the &lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#fn-command&quot;&gt;\fn&lt;/a&gt; is needed.</source>
          <target state="translated">일반적으로 함수 문서는 &lt;code&gt;.cpp&lt;/code&gt; 파일 의 함수 구현 바로 앞에 있습니다. 구현 바로 위에 있지 않은 함수 문서의 경우 &lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#fn-command&quot;&gt;\ fn&lt;/a&gt; 이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ff96edd00ad1c58ffb7d7146ff0b2bd7279e2607" translate="yes" xml:space="preserve">
          <source>Typically, function documentation immediately precedes the implementation of the function in the &lt;code&gt;.cpp&lt;/code&gt; file. The &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#&quot;&gt;topic command&lt;/a&gt; for functions is &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#fn-command&quot;&gt;\fn&lt;/a&gt;. For functions in QML or JavaScript, the documentation must reside immediately above the function declaration.</source>
          <target state="translated">일반적으로 함수 설명서는 &lt;code&gt;.cpp&lt;/code&gt; 파일 의 함수 구현 직전에 있습니다. 함수 의 &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#&quot;&gt;주제 명령&lt;/a&gt; 은 &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#fn-command&quot;&gt;\ fn&lt;/a&gt; 입니다. QML 또는 JavaScript의 함수의 경우 문서는 함수 선언 바로 위에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="ce0bb54c5581b3e97d5768e0037a1942267395a5" translate="yes" xml:space="preserve">
          <source>Typically, function documentation immediately precedes the implementation of the function in the &lt;code&gt;.cpp&lt;/code&gt; file. The &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html&quot;&gt;topic command&lt;/a&gt; for functions is &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#fn-command&quot;&gt;\fn&lt;/a&gt;. For functions in QML or JavaScript, the documentation must reside immediately above the function declaration.</source>
          <target state="translated">Typically, function documentation immediately precedes the implementation of the function in the &lt;code&gt;.cpp&lt;/code&gt; file. The &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html&quot;&gt;topic command&lt;/a&gt; for functions is &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#fn-command&quot;&gt;\fn&lt;/a&gt;. For functions in QML or JavaScript, the documentation must reside immediately above the function declaration.</target>
        </trans-unit>
        <trans-unit id="13cbb806c69573707f9fad8b6bdc204d734cadf7" translate="yes" xml:space="preserve">
          <source>Typically, function documentation immediately precedes the implementation of the function in the &lt;code&gt;.cpp&lt;/code&gt; file. The &lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html&quot;&gt;topic command&lt;/a&gt; for functions is &lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#fn-command&quot;&gt;\fn&lt;/a&gt;. For functions in QML or JavaScript, the documentation must reside immediately above the function declaration.</source>
          <target state="translated">일반적으로 함수 문서는 &lt;code&gt;.cpp&lt;/code&gt; 파일 의 함수 구현 바로 앞에 있습니다. &lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html&quot;&gt;주제 명령&lt;/a&gt; 기능입니다 &lt;a href=&quot;https://doc.qt.io/qt-6.0/13-qdoc-commands-topics.html#fn-command&quot;&gt;\ FN&lt;/a&gt; . QML 또는 JavaScript의 함수의 경우 문서가 함수 선언 바로 위에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="469e9dcbca4d1beac408a36e20f838b9ca52539f" translate="yes" xml:space="preserve">
          <source>Typically, implementations of the function will simply construct a new &lt;a href=&quot;qvideofilterrunnable&quot;&gt;QVideoFilterRunnable&lt;/a&gt; instance, passing &lt;code&gt;this&lt;/code&gt; to the constructor as the filter runnables must know their associated &lt;a href=&quot;qabstractvideofilter&quot;&gt;QAbstractVideoFilter&lt;/a&gt; instance to access dynamic properties and optionally emit signals.</source>
          <target state="translated">일반적으로, 함수의 구현은 단순히 새로운 &lt;a href=&quot;qvideofilterrunnable&quot;&gt;QVideoFilterRunnable&lt;/a&gt; 인스턴스 를 생성하여 필터 런너 블 &lt;code&gt;this&lt;/code&gt; 동적 속성에 액세스하고 선택적으로 신호를 내보내려면 연관된 &lt;a href=&quot;qabstractvideofilter&quot;&gt;QAbstractVideoFilter&lt;/a&gt; 인스턴스를 알아야하므로이를 생성자에 전달 합니다 .</target>
        </trans-unit>
        <trans-unit id="0fa9593f7cef1d6bbd4db0fce8cb016b4193ee95" translate="yes" xml:space="preserve">
          <source>Typically, items are statically declared as children of Container, but it is also possible to &lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;move&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qml-qtquick-controls2-container-obsolete.html#removeItem-method&quot;&gt;remove&lt;/a&gt; items dynamically. The items in a container can be accessed using &lt;a href=&quot;qml-qtquick-controls2-container#itemAt-method&quot;&gt;itemAt()&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-controls2-container#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;.</source>
          <target state="translated">일반적으로 항목은 컨테이너의 하위 항목으로 정적으로 선언되지만 항목을 동적으로 &lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;추가&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;삽입&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;이동&lt;/a&gt; 및 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qml-qtquick-controls2-container-obsolete.html#removeItem-method&quot;&gt;제거 할 수도&lt;/a&gt; 있습니다. 컨테이너의 항목은 &lt;a href=&quot;qml-qtquick-controls2-container#itemAt-method&quot;&gt;itemAt ()&lt;/a&gt; 또는 &lt;a href=&quot;qml-qtquick-controls2-container#contentChildren-prop&quot;&gt;contentChildren을&lt;/a&gt; 사용하여 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a237ad5508031b7e63045b70186d7bc514b67a23" translate="yes" xml:space="preserve">
          <source>Typically, items are statically declared as children of Container, but it is also possible to &lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;move&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qml-qtquick-controls2-container-obsolete.html#removeItem-method&quot;&gt;remove&lt;/a&gt; items dynamically. The items in a container can be accessed using &lt;a href=&quot;qml-qtquick-controls2-container#itemAt-method&quot;&gt;itemAt()&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-controls2-container#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;.</source>
          <target state="translated">Typically, items are statically declared as children of Container, but it is also possible to &lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;move&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qml-qtquick-controls2-container-obsolete.html#removeItem-method&quot;&gt;remove&lt;/a&gt; items dynamically. The items in a container can be accessed using &lt;a href=&quot;qml-qtquick-controls2-container#itemAt-method&quot;&gt;itemAt()&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-controls2-container#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="34cc83231640f9ff5320614c38cafd58a5967750" translate="yes" xml:space="preserve">
          <source>Typically, items are statically declared as children of Container, but it is also possible to &lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;move&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-container#removeItem-method&quot;&gt;remove&lt;/a&gt; items dynamically. The items in a container can be accessed using &lt;a href=&quot;qml-qtquick-controls2-container#itemAt-method&quot;&gt;itemAt()&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-controls2-container#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;.</source>
          <target state="translated">일반적으로 항목은 컨테이너의 자식으로 정적으로 선언되지만 항목을 동적으로 &lt;a href=&quot;qml-qtquick-controls2-container#addItem-method&quot;&gt;추가&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-container#insertItem-method&quot;&gt;삽입&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-container#moveItem-method&quot;&gt;이동&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-controls2-container#removeItem-method&quot;&gt;제거 할 수도&lt;/a&gt; 있습니다. 컨테이너의 항목은 &lt;a href=&quot;qml-qtquick-controls2-container#itemAt-method&quot;&gt;itemAt ()&lt;/a&gt; 또는 &lt;a href=&quot;qml-qtquick-controls2-container#contentChildren-prop&quot;&gt;contentChildren을&lt;/a&gt; 사용하여 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a9ba532539c378daf9421e18bb47ad0fe245eafe" translate="yes" xml:space="preserve">
          <source>Typically, menu items are statically declared as children of the menu, but Menu also provides API to &lt;a href=&quot;qml-qtquick-controls2-menu#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menu#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menu#moveItem-method&quot;&gt;move&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qml-qtquick-controls2-menu-obsolete.html#removeItem-method&quot;&gt;remove&lt;/a&gt; items dynamically. The items in a menu can be accessed using &lt;a href=&quot;qml-qtquick-controls2-menu#itemAt-method&quot;&gt;itemAt()&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-controls2-popup#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;.</source>
          <target state="translated">일반적으로 메뉴 항목은 메뉴의 하위로 정적으로 선언되지만 Menu는 항목을 동적으로 &lt;a href=&quot;qml-qtquick-controls2-menu#addItem-method&quot;&gt;추가&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-menu#insertItem-method&quot;&gt;삽입&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-menu#moveItem-method&quot;&gt;이동&lt;/a&gt; 및 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qml-qtquick-controls2-menu-obsolete.html#removeItem-method&quot;&gt;제거&lt;/a&gt; 하는 API도 제공합니다 . &lt;a href=&quot;qml-qtquick-controls2-menu#itemAt-method&quot;&gt;itemAt ()&lt;/a&gt; 또는 &lt;a href=&quot;qml-qtquick-controls2-popup#contentChildren-prop&quot;&gt;contentChildren을&lt;/a&gt; 사용하여 메뉴의 항목에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2c391877ccd7e59a7c91808f07450d66727db130" translate="yes" xml:space="preserve">
          <source>Typically, menu items are statically declared as children of the menu, but Menu also provides API to &lt;a href=&quot;qml-qtquick-controls2-menu#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menu#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menu#moveItem-method&quot;&gt;move&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qml-qtquick-controls2-menu-obsolete.html#removeItem-method&quot;&gt;remove&lt;/a&gt; items dynamically. The items in a menu can be accessed using &lt;a href=&quot;qml-qtquick-controls2-menu#itemAt-method&quot;&gt;itemAt()&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-controls2-popup#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;.</source>
          <target state="translated">Typically, menu items are statically declared as children of the menu, but Menu also provides API to &lt;a href=&quot;qml-qtquick-controls2-menu#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menu#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menu#moveItem-method&quot;&gt;move&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qml-qtquick-controls2-menu-obsolete.html#removeItem-method&quot;&gt;remove&lt;/a&gt; items dynamically. The items in a menu can be accessed using &lt;a href=&quot;qml-qtquick-controls2-menu#itemAt-method&quot;&gt;itemAt()&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-controls2-popup#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="31d9165ed2e2d5c567f2671f8b4224bac9161930" translate="yes" xml:space="preserve">
          <source>Typically, menu items are statically declared as children of the menu, but Menu also provides API to &lt;a href=&quot;qml-qtquick-controls2-menu#addItem-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menu#insertItem-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menu#moveItem-method&quot;&gt;move&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls2-menu#removeItem-method&quot;&gt;remove&lt;/a&gt; items dynamically. The items in a menu can be accessed using &lt;a href=&quot;qml-qtquick-controls2-menu#itemAt-method&quot;&gt;itemAt()&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-controls2-popup#contentChildren-prop&quot;&gt;contentChildren&lt;/a&gt;.</source>
          <target state="translated">일반적으로 메뉴 항목은 메뉴의 자식으로 정적으로 선언되지만 메뉴는 항목을 동적으로 &lt;a href=&quot;qml-qtquick-controls2-menu#addItem-method&quot;&gt;추가&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-menu#insertItem-method&quot;&gt;삽입&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-menu#moveItem-method&quot;&gt;이동&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-controls2-menu#removeItem-method&quot;&gt;제거&lt;/a&gt; 하는 API도 제공합니다 . 메뉴의 항목은 &lt;a href=&quot;qml-qtquick-controls2-menu#itemAt-method&quot;&gt;itemAt ()&lt;/a&gt; 또는 &lt;a href=&quot;qml-qtquick-controls2-popup#contentChildren-prop&quot;&gt;contentChildren을&lt;/a&gt; 사용하여 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="49847f0fd123a983792e0bbca9e29249fd5c49db" translate="yes" xml:space="preserve">
          <source>Typically, menus are statically declared as children of the menu bar, but &lt;a href=&quot;qml-qtquick-controls2-menubar&quot;&gt;MenuBar&lt;/a&gt; also provides API to &lt;a href=&quot;qml-qtquick-controls2-menubar#addMenu-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menubar#insertMenu-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menubar#removeMenu-method&quot;&gt;remove&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls2-menubar#takeMenu-method&quot;&gt;take&lt;/a&gt; menus dynamically. The menus in a menu bar can be accessed using &lt;a href=&quot;qml-qtquick-controls2-menubar#menuAt-method&quot;&gt;menuAt()&lt;/a&gt;.</source>
          <target state="translated">일반적으로 메뉴는 메뉴 막대의 자식으로 정적으로 선언되지만 &lt;a href=&quot;qml-qtquick-controls2-menubar&quot;&gt;MenuBar&lt;/a&gt; 는 메뉴를 동적으로 &lt;a href=&quot;qml-qtquick-controls2-menubar#addMenu-method&quot;&gt;추가&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-menubar#insertMenu-method&quot;&gt;삽입&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-menubar#removeMenu-method&quot;&gt;제거&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-controls2-menubar#takeMenu-method&quot;&gt;가져 오는&lt;/a&gt; API도 제공합니다 . 메뉴 표시 줄의 메뉴는 &lt;a href=&quot;qml-qtquick-controls2-menubar#menuAt-method&quot;&gt;menuAt ()를&lt;/a&gt; 사용하여 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="083b6aca20def8c5ef0ba71d939ef0ce396b94e1" translate="yes" xml:space="preserve">
          <source>Typically, menus are statically declared as children of the menu bar, but MenuBar also provides API to &lt;a href=&quot;qml-qtquick-controls2-menubar#addMenu-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menubar#insertMenu-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menubar#removeMenu-method&quot;&gt;remove&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls2-menubar#takeMenu-method&quot;&gt;take&lt;/a&gt; menus dynamically. The menus in a menu bar can be accessed using &lt;a href=&quot;qml-qtquick-controls2-menubar#menuAt-method&quot;&gt;menuAt()&lt;/a&gt;.</source>
          <target state="translated">Typically, menus are statically declared as children of the menu bar, but MenuBar also provides API to &lt;a href=&quot;qml-qtquick-controls2-menubar#addMenu-method&quot;&gt;add&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menubar#insertMenu-method&quot;&gt;insert&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-menubar#removeMenu-method&quot;&gt;remove&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls2-menubar#takeMenu-method&quot;&gt;take&lt;/a&gt; menus dynamically. The menus in a menu bar can be accessed using &lt;a href=&quot;qml-qtquick-controls2-menubar#menuAt-method&quot;&gt;menuAt()&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5b649f84068ed703067e48fdfba28a69435b02e5" translate="yes" xml:space="preserve">
          <source>Typically, most applications work with device independent pixels; except for OpenGL and code for raster graphics.</source>
          <target state="translated">Typically, most applications work with device independent pixels; except for OpenGL and code for raster graphics.</target>
        </trans-unit>
        <trans-unit id="0f012e27774ab57be0df50e0387c05bd92881432" translate="yes" xml:space="preserve">
          <source>Typically, one creates a &lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader&lt;/a&gt; by passing the source &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; or &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; as a parameter to the constructor, then pop elements off the stream if there were no errors in decoding. There are three kinds of CBOR types:</source>
          <target state="translated">통상적으로, 하나는 생성 &lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader를&lt;/a&gt; 소스로 전달 &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; 또는 &lt;a href=&quot;qiodevice&quot;&gt;QIODevice를&lt;/a&gt; 오류가 디코딩이 없다면 생성자 파라미터로서, 그 요소 스트림 오프 팝. CBOR 유형에는 세 가지 종류가 있습니다.</target>
        </trans-unit>
        <trans-unit id="07b5861418c9aac56f3d3cf0aafef8e0ce7c1d15" translate="yes" xml:space="preserve">
          <source>Typically, one creates a QCborStreamReader by passing the source &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; or &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; as a parameter to the constructor, then pop elements off the stream if there were no errors in decoding. There are three kinds of CBOR types:</source>
          <target state="translated">Typically, one creates a QCborStreamReader by passing the source &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; or &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; as a parameter to the constructor, then pop elements off the stream if there were no errors in decoding. There are three kinds of CBOR types:</target>
        </trans-unit>
        <trans-unit id="7d0f2e5bc917e762befba5d8d79da524d3469bc6" translate="yes" xml:space="preserve">
          <source>Typically, this class is used for reporting errors, as is the case for &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;, which uses a &lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler&lt;/a&gt; to report compile and runtime &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; errors. Hence, using a &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; as the message</source>
          <target state="translated">Typically, this class is used for reporting errors, as is the case for &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;, which uses a &lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler&lt;/a&gt; to report compile and runtime &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; errors. Hence, using a &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; as the message</target>
        </trans-unit>
        <trans-unit id="13b4dd4acbba652c0ac3f5c4e87c650ec137bba2" translate="yes" xml:space="preserve">
          <source>Typically, this class is used for reporting errors, as is the case for &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt;, which uses a &lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler&lt;/a&gt; to report compile and runtime &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; errors. Hence, using a &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; as the message</source>
          <target state="translated">의 경우와 같이 일반적으로이 클래스는 오류를보고하는 데 사용되는 &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; 사용 &lt;a href=&quot;qabstractmessagehandler&quot;&gt;QAbstractMessageHandler을&lt;/a&gt; 보고 컴파일 및 런타임에 &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery에&lt;/a&gt; 오류가 발생합니다. 따라서 &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt; 을 메시지로 사용</target>
        </trans-unit>
        <trans-unit id="347d58349ea420b4a7833b85bea3e532dc99573c" translate="yes" xml:space="preserve">
          <source>Typically, to save documents edited by the user, call setDirectWriteFallback(true), and to save application internal files (configuration files, data files, ...), keep the default setting which ensures atomicity.</source>
          <target state="translated">일반적으로 사용자가 편집 한 문서를 저장하려면 setDirectWriteFallback (true)을 호출하고 응용 프로그램 내부 파일 (구성 파일, 데이터 파일 등)을 저장하려면 원 자성을 보장하는 기본 설정을 유지하십시오.</target>
        </trans-unit>
        <trans-unit id="2cc1c877f0aba8ea745157a187963d016a9dea43" translate="yes" xml:space="preserve">
          <source>Typically, your application's &lt;code&gt;main()&lt;/code&gt; function will look like this:</source>
          <target state="translated">일반적으로 응용 프로그램의 &lt;code&gt;main()&lt;/code&gt; 함수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="141678905228dc9a8a8a9b60a500e81633c2f139" translate="yes" xml:space="preserve">
          <source>Typing causes a menu to be search for relevant items, otherwise only mnemnonic is considered.</source>
          <target state="translated">입력하면 메뉴에서 관련 항목을 검색하게되며, 그렇지 않으면 니모닉 만 고려됩니다.</target>
        </trans-unit>
        <trans-unit id="863fd5cec857afe47670d8c682fe4b4c78e0ab10" translate="yes" xml:space="preserve">
          <source>Typography in Qt is done with &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; which uses the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; API in combination with Qt's font classes, primarily &lt;a href=&quot;gui-changes-qt6#qfont&quot;&gt;QFont&lt;/a&gt;. Applications that prefer more low-level APIs to text and font handling, classes like &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-6.0/qglyphrun.html&quot;&gt;QGlyphRun&lt;/a&gt; can be used.</source>
          <target state="translated">Qt의 타이포그래피는 Qt 의 글꼴 클래스, 주로 &lt;a href=&quot;gui-changes-qt6#qfont&quot;&gt;QFont&lt;/a&gt; 와 함께 &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; API 를 사용하는 &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; 로 수행됩니다 . 텍스트 및 글꼴 처리보다 낮은 수준의 API를 선호하는 애플리케이션, &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; 및 &lt;a href=&quot;https://doc.qt.io/qt-6.0/qglyphrun.html&quot;&gt;QGlyphRun&lt;/a&gt; 과 같은 클래스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9cc2202bcdf3ee819d72846178f72cecee7f491" translate="yes" xml:space="preserve">
          <source>Typography in Qt is done with &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; which uses the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; API in combination with Qt's font classes, primarily &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;. Applications that prefer more low-level APIs to text and font handling, classes like &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qglyphrun.html&quot;&gt;QGlyphRun&lt;/a&gt; can be used.</source>
          <target state="translated">Qt의 타이포그래피 는 &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; API를 Qt의 글꼴 클래스 (주로 &lt;a href=&quot;qfont&quot;&gt;QFont)&lt;/a&gt; 와 함께 사용하는 &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; 로 수행됩니다 . &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; 및 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qglyphrun.html&quot;&gt;QGlyphRun&lt;/a&gt; 과 같은 클래스 및 텍스트 처리보다 더 낮은 수준의 API를 선호하는 응용 프로그램을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9b11ce0f773eb61ee9d7b348bf89d82e7661cbf0" translate="yes" xml:space="preserve">
          <source>Typography in Qt is done with &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; which uses the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; API in combination with Qt's font classes, primarily &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;. Applications that prefer more low-level APIs to text and font handling, classes like &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qglyphrun.html&quot;&gt;QGlyphRun&lt;/a&gt; can be used.</source>
          <target state="translated">Typography in Qt is done with &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; which uses the &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; API in combination with Qt's font classes, primarily &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt;. Applications that prefer more low-level APIs to text and font handling, classes like &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qglyphrun.html&quot;&gt;QGlyphRun&lt;/a&gt; can be used.</target>
        </trans-unit>
        <trans-unit id="b2c7c0caa10a0cca5ea7d69e54018ae0c0389dd6" translate="yes" xml:space="preserve">
          <source>U</source>
          <target state="translated">U</target>
        </trans-unit>
        <trans-unit id="152d9df0b0d88b36b3685c5840b5979a8698e27c" translate="yes" xml:space="preserve">
          <source>UCS-4 is a Unicode codec and therefore it is lossless. All characters from this string will be encoded in UCS-4. Any invalid sequence of code units in this string is replaced by the Unicode replacement character (&lt;a href=&quot;qchar#SpecialCharacter-enum&quot;&gt;QChar::ReplacementCharacter&lt;/a&gt;, which corresponds to &lt;code&gt;U+FFFD&lt;/code&gt;).</source>
          <target state="translated">UCS-4는 유니 코드 코덱이므로 손실이 없습니다. 이 문자열의 모든 문자는 UCS-4로 인코딩됩니다. 이 문자열에서 유효하지 않은 코드 단위 시퀀스는 유니 코드 대체 문자 ( &lt;a href=&quot;qchar#SpecialCharacter-enum&quot;&gt;QChar :: ReplacementCharacter&lt;/a&gt; , &lt;code&gt;U+FFFD&lt;/code&gt; 에 해당)로 대체 됩니다.</target>
        </trans-unit>
        <trans-unit id="a489c6cc2cb758b79838735678469f22a28043c2" translate="yes" xml:space="preserve">
          <source>UCS-4 is a Unicode codec and therefore it is lossless. All characters from this string will be encoded in UCS-4. Any invalid sequence of code units in this string is replaced by the Unicode's replacement character (&lt;a href=&quot;qchar#SpecialCharacter-enum&quot;&gt;QChar::ReplacementCharacter&lt;/a&gt;, which corresponds to &lt;code&gt;U+FFFD&lt;/code&gt;).</source>
          <target state="translated">UCS-4는 유니 코드 코덱이므로 손실이 없습니다. 이 문자열의 모든 문자는 UCS-4로 인코딩됩니다. 이 문자열에서 유효하지 않은 코드 단위 시퀀스는 유니 코드 대체 문자 ( &lt;a href=&quot;qchar#SpecialCharacter-enum&quot;&gt;QChar :: ReplacementCharacter&lt;/a&gt; , &lt;code&gt;U+FFFD&lt;/code&gt; 에 해당)로 대체 됩니다.</target>
        </trans-unit>
        <trans-unit id="19be8331b69f90c34f42c0e733d25cb65c0972d7" translate="yes" xml:space="preserve">
          <source>UDI protocol UUID</source>
          <target state="translated">UDI 프로토콜 UUID</target>
        </trans-unit>
        <trans-unit id="e9a6f622e340090feb219eb5c94b0df756e8e486" translate="yes" xml:space="preserve">
          <source>UDP</source>
          <target state="translated">UDP</target>
        </trans-unit>
        <trans-unit id="fe942882ad4bb406c2bbf6582a075aeda8d0fb49" translate="yes" xml:space="preserve">
          <source>UDP (User Datagram Protocol) is a lightweight, unreliable, datagram-oriented, connectionless protocol. It can be used when reliability isn't important. &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; is a subclass of &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; that allows you to send and receive UDP datagrams.</source>
          <target state="translated">UDP (User Datagram Protocol)는 가볍고 신뢰할 수없는 데이터 그램 지향의 비 연결 프로토콜입니다. 신뢰성이 중요하지 않을 때 사용할 수 있습니다. &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; 은 UDP 데이터 그램을 보내고받을 수 있는 &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; 의 서브 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="6dcf5da2ef7bbcd3aa5444ec2b0615502386aa8a" translate="yes" xml:space="preserve">
          <source>UDP (User Datagram Protocol) is a lightweight, unreliable, datagram-oriented, connectionless protocol. It can be used when reliability isn't important. For example, a server that reports the time of day could choose UDP. If a datagram with the time of day is lost, the client can simply make another request.</source>
          <target state="translated">UDP (User Datagram Protocol)는 가볍고 신뢰할 수없는 데이터 그램 지향 비 연결 프로토콜입니다. 신뢰성이 중요하지 않을 때 사용할 수 있습니다. 예를 들어, 시간을보고하는 서버는 UDP를 선택할 수 있습니다. 시간이 포함 된 데이터 그램이 손실 된 경우 클라이언트는 다른 요청을 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="19b3718804edb4e88df1772724b8749c7f97b69c" translate="yes" xml:space="preserve">
          <source>UDP (User Datagram Protocol) is a lightweight, unreliable, datagram-oriented, connectionless protocol. It can be used when reliability isn't important. QUdpSocket is a subclass of &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; that allows you to send and receive UDP datagrams.</source>
          <target state="translated">UDP (User Datagram Protocol) is a lightweight, unreliable, datagram-oriented, connectionless protocol. It can be used when reliability isn't important. QUdpSocket is a subclass of &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; that allows you to send and receive UDP datagrams.</target>
        </trans-unit>
        <trans-unit id="90ac95826844545d35820c62b67d700f09a984bd" translate="yes" xml:space="preserve">
          <source>UDP protocol UUID</source>
          <target state="translated">UDP 프로토콜 UUID</target>
        </trans-unit>
        <trans-unit id="e872cc053249282bd2a0e9f1606fc2432fd5f977" translate="yes" xml:space="preserve">
          <source>UI files (usually in &lt;a href=&quot;qmake-variable-reference#forms&quot;&gt;FORMS&lt;/a&gt;).</source>
          <target state="translated">UI 파일 (보통 &lt;a href=&quot;qmake-variable-reference#forms&quot;&gt;FORMS&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="2bb58c858e6e1e0157672e7313010d640b6f6ee4" translate="yes" xml:space="preserve">
          <source>UI files.</source>
          <target state="translated">UI 파일.</target>
        </trans-unit>
        <trans-unit id="6b72b4b431e5bb425aa07a623780ff69fb63a989" translate="yes" xml:space="preserve">
          <source>UI volume controls should usually be scaled nonlinearly. For example, using a logarithmic scale will produce linear changes in perceived loudness, which is what a user would normally expect from a volume control. See &lt;a href=&quot;qaudio#convertVolume&quot;&gt;QAudio::convertVolume&lt;/a&gt;() for more details.</source>
          <target state="translated">UI 볼륨 컨트롤은 일반적으로 비선형으로 조정해야합니다. 예를 들어, 로그 스케일을 사용하면인지 음량의 선형 변화가 발생하며, 이는 일반적으로 볼륨 컨트롤에서 사용자가 기대하는 것입니다. 자세한 내용은 &lt;a href=&quot;qaudio#convertVolume&quot;&gt;QAudio :: convertVolume&lt;/a&gt; ()을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3f47fe29416781f0664fb8f1e4330efa7c5b0b34" translate="yes" xml:space="preserve">
          <source>UI volume controls should usually be scaled nonlinearly. For example, using a logarithmic scale will produce linear changes in perceived loudness, which is what a user would normally expect from a volume control. See &lt;a href=&quot;qml-qtmultimedia-qtmultimedia#convertVolume-method&quot;&gt;QtMultimedia.convertVolume()&lt;/a&gt; for more details.</source>
          <target state="translated">UI 볼륨 컨트롤은 일반적으로 비선형으로 조정해야합니다. 예를 들어, 로그 스케일을 사용하면인지 음량의 선형 변화가 발생하며, 이는 일반적으로 볼륨 컨트롤에서 사용자가 기대하는 것입니다. 자세한 내용은 &lt;a href=&quot;qml-qtmultimedia-qtmultimedia#convertVolume-method&quot;&gt;QtMultimedia.convertVolume ()&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6ccdfc0accdb486b49b36be779c0c92fd456c710" translate="yes" xml:space="preserve">
          <source>UINT16</source>
          <target state="translated">UINT16</target>
        </trans-unit>
        <trans-unit id="db37a94db2ae5203a3708accea85d32d3c958e7e" translate="yes" xml:space="preserve">
          <source>UINT32</source>
          <target state="translated">UINT32</target>
        </trans-unit>
        <trans-unit id="3f2f073dc8e5d6347e3222fc44f034ebea308d84" translate="yes" xml:space="preserve">
          <source>UINT64</source>
          <target state="translated">UINT64</target>
        </trans-unit>
        <trans-unit id="e18f54caac1bc1872354b1a9db19e1110fdffa78" translate="yes" xml:space="preserve">
          <source>UIP - This plugin allows for projects created with Qt 3D Studio to be converted to Qt Quick 3D QML components.</source>
          <target state="translated">UIP-이 플러그인을 사용하면 Qt 3D Studio로 만든 프로젝트를 Qt Quick 3D QML 구성 요소로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99fc48c51a4fe7e6dc18ef94bfe8faa8498ecbc9" translate="yes" xml:space="preserve">
          <source>UI_DIR</source>
          <target state="translated">UI_DIR</target>
        </trans-unit>
        <trans-unit id="9b81a5f58a08d125439c4fe920735e6f93f6c26f" translate="yes" xml:space="preserve">
          <source>UInt</source>
          <target state="translated">UInt</target>
        </trans-unit>
        <trans-unit id="9b91eff346b26fc24b599a1b056c8e792133fc73" translate="yes" xml:space="preserve">
          <source>ULongLong</source>
          <target state="translated">ULongLong</target>
        </trans-unit>
        <trans-unit id="1e0a126c0104ffb27de29028325cad010314a0af" translate="yes" xml:space="preserve">
          <source>UNICHAR</source>
          <target state="translated">UNICHAR</target>
        </trans-unit>
        <trans-unit id="99ed2ea04f3de7a2912ea18daae32fb113d44f62" translate="yes" xml:space="preserve">
          <source>UNIVARCHAR</source>
          <target state="translated">UNIVARCHAR</target>
        </trans-unit>
        <trans-unit id="c5ec2a3c5bfed523cab3f8ff98e5c704311dce20" translate="yes" xml:space="preserve">
          <source>UNIX_SOCKET</source>
          <target state="translated">UNIX_SOCKET</target>
        </trans-unit>
        <trans-unit id="17c7495fdf8be3fa9699c0132e3ab42f5a000359" translate="yes" xml:space="preserve">
          <source>URI resolved against the</source>
          <target state="translated">에 대해 해결 된 URI</target>
        </trans-unit>
        <trans-unit id="7e23cd11ca94b0d4226abd29ee790346dee6aead" translate="yes" xml:space="preserve">
          <source>URI resolved using the</source>
          <target state="translated">URI를 사용하여 해결</target>
        </trans-unit>
        <trans-unit id="f110f5f2a56be6215c19c5fa16548e7f132772d7" translate="yes" xml:space="preserve">
          <source>URI was not accepted to be resolved.</source>
          <target state="translated">URI를 확인하지 못했습니다.</target>
        </trans-unit>
        <trans-unit id="5a2dc1a03dc30c42938c930d92d0add3be133438" translate="yes" xml:space="preserve">
          <source>URI, it should simply return the</source>
          <target state="translated">URI는 단순히</target>
        </trans-unit>
        <trans-unit id="b33bdd1cace0d525c10410fbd9748f506c626b74" translate="yes" xml:space="preserve">
          <source>URI.</source>
          <target state="translated">URI.</target>
        </trans-unit>
        <trans-unit id="d093bdaa782f59ac13b897f7b9054b31839f2bb9" translate="yes" xml:space="preserve">
          <source>URIError</source>
          <target state="translated">URIError</target>
        </trans-unit>
        <trans-unit id="8fef01df5c11bd037d00d722125abb207181b648" translate="yes" xml:space="preserve">
          <source>URIs are first passed to &lt;a href=&quot;qabstracturiresolver&quot;&gt;QAbstractUriResolver&lt;/a&gt;. Check &lt;a href=&quot;qxmlquery#setUriResolver&quot;&gt;QXmlQuery::setUriResolver&lt;/a&gt;() for possible rewrites.</source>
          <target state="translated">URI는 먼저 &lt;a href=&quot;qabstracturiresolver&quot;&gt;QAbstractUriResolver로&lt;/a&gt; 전달됩니다 . 재 작성 가능성에 &lt;a href=&quot;qxmlquery#setUriResolver&quot;&gt;대해서는 QXmlQuery :: setUriResolver&lt;/a&gt; ()를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3e2fa0a1de11b6f8aee80d9ab9516a6e5fa7a4d" translate="yes" xml:space="preserve">
          <source>URIs to physical ones, or it can translate obsolete or invalid URIs to valid ones.</source>
          <target state="translated">URI를 실제 URI로 또는 더 이상 사용되지 않거나 유효하지 않은 URI를 유효한 것으로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="bd670191da877dae79ac8701645fc93b167be3ee" translate="yes" xml:space="preserve">
          <source>URL Handlers</source>
          <target state="translated">URL 처리기</target>
        </trans-unit>
        <trans-unit id="81324f4bd320b6f72b74637b406c433c6a3aa93b" translate="yes" xml:space="preserve">
          <source>URL argument to limit the scope of the cookie to be deleted.</source>
          <target state="translated">삭제할 쿠키 범위를 제한하는 URL 인수입니다.</target>
        </trans-unit>
        <trans-unit id="a5439a2b55d9e5ffe53f5d1c423349ad0d119997" translate="yes" xml:space="preserve">
          <source>URL if the model contains it, or -1 if not.</source>
          <target state="translated">URL if the model contains it, or -1 if not.</target>
        </trans-unit>
        <trans-unit id="642e3183e30380eb3254c0a419ec5bb51a7259a3" translate="yes" xml:space="preserve">
          <source>URL is the same as a relative file, development of QML on regular file systems remains simple:</source>
          <target state="translated">URL은 상대 파일과 동일하며 일반 파일 시스템에서 QML의 개발은 간단합니다.</target>
        </trans-unit>
        <trans-unit id="0c9c001dc3313a29a2147988d3b95afdea1bbb06" translate="yes" xml:space="preserve">
          <source>URL path component</source>
          <target state="translated">URL 경로 구성 요소</target>
        </trans-unit>
        <trans-unit id="65eb13a6e0ea667d118f9f0faf339a24d46c757e" translate="yes" xml:space="preserve">
          <source>URL that points to the documentation on the service..</source>
          <target state="translated">서비스 문서를 가리키는 URL ..</target>
        </trans-unit>
        <trans-unit id="257bd9d3e248d2b3d841692d4a7bd36e7bc2bbe1" translate="yes" xml:space="preserve">
          <source>URL that refers to the location of an application that can be used to utilize the service.</source>
          <target state="translated">서비스를 사용하는 데 사용할 수있는 응용 프로그램의 위치를 ​​나타내는 URL입니다.</target>
        </trans-unit>
        <trans-unit id="8a2c93ebf2e4d19550a3a8890ad392e4d6407480" translate="yes" xml:space="preserve">
          <source>URL to the location of the icon representing the service.</source>
          <target state="translated">서비스를 나타내는 아이콘 위치의 URL입니다.</target>
        </trans-unit>
        <trans-unit id="0342138b6649e4cff239ba93f28ce48f0a13e990" translate="yes" xml:space="preserve">
          <source>URL to the playlist at the given</source>
          <target state="translated">지정된 재생 목록의 URL</target>
        </trans-unit>
        <trans-unit id="9606f96762782f86bbc9fc4855732239769c3920" translate="yes" xml:space="preserve">
          <source>URL to the playlist.</source>
          <target state="translated">재생 목록의 URL입니다.</target>
        </trans-unit>
        <trans-unit id="43f47f2c4440048b8237abf6d4ed2a9376bcc676" translate="yes" xml:space="preserve">
          <source>URL, file name.</source>
          <target state="translated">URL, 파일 이름</target>
        </trans-unit>
        <trans-unit id="c772f23a6efeac7a6996739bde021cc74f92802d" translate="yes" xml:space="preserve">
          <source>URL, using the default query delimiters. To parse a query string using other delimiters, you should first set them using &lt;a href=&quot;qurlquery#setQueryDelimiters&quot;&gt;setQueryDelimiters&lt;/a&gt;() and then set the query with &lt;a href=&quot;qurlquery#setQuery&quot;&gt;setQuery&lt;/a&gt;().</source>
          <target state="translated">기본 쿼리 구분 기호를 사용하는 URL 다른 구분 기호를 사용하여 쿼리 문자열을 구문 분석하려면 먼저 사용하여 설정해야 &lt;a href=&quot;qurlquery#setQueryDelimiters&quot;&gt;setQueryDelimiters를&lt;/a&gt; 가진 쿼리를 설정 한 후 () 및 &lt;a href=&quot;qurlquery#setQuery&quot;&gt;setQuery을&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="8f084d35b5bd1e6ea144f73998ad536a1d076d2a" translate="yes" xml:space="preserve">
          <source>URLs can be represented in two forms: encoded or unencoded. The unencoded representation is suitable for showing to users, but the encoded representation is typically what you would send to a web server. For example, the unencoded URL &quot;http://b&amp;uuml;hler.example.com/List of applicants.xml&quot; would be sent to the server as &quot;http://xn--bhler-kva.example.com/List%20of%20applicants.xml&quot;.</source>
          <target state="translated">URL은 인코딩 또는 인코딩되지 않은 두 가지 형식으로 표시 될 수 있습니다. 인코딩되지 않은 표현은 사용자에게 표시하기에 적합하지만 인코딩 된 표현은 일반적으로 웹 서버에 보내는 것입니다. 예를 들어, 인코딩되지 않은 URL &quot;http : //b&amp;uuml;hler.example.com/List of 신청자 .xml&quot;은 &quot;http://xn--bhler-kva.example.com/List%20of%로 서버에 전송됩니다. 20applicants.xml &quot;.</target>
        </trans-unit>
        <trans-unit id="3b1ab0c557575740842d16b25b8f5dc9b9fdd180" translate="yes" xml:space="preserve">
          <source>URLs correspond to the MIME type &lt;code&gt;text/uri-list&lt;/code&gt;.</source>
          <target state="translated">URL은 MIME 유형 &lt;code&gt;text/uri-list&lt;/code&gt; 에 해당합니다 .</target>
        </trans-unit>
        <trans-unit id="2c259bbc19d52e19b5b7851e809820cc95a9809c" translate="yes" xml:space="preserve">
          <source>URLs of back items, forward items, and the current item in the history.</source>
          <target state="translated">이전 항목, 전달 항목 및 내역의 현재 항목의 URL입니다.</target>
        </trans-unit>
        <trans-unit id="42f7c9803cdcbe2bd78d81ca409655910a5b92c5" translate="yes" xml:space="preserve">
          <source>URLs of the pages that were visited after visiting the current page.</source>
          <target state="translated">현재 페이지를 방문한 후 방문한 페이지의 URL입니다.</target>
        </trans-unit>
        <trans-unit id="42258cd60648aeba0451c9587360522a9da39b8b" translate="yes" xml:space="preserve">
          <source>URLs of visited pages.</source>
          <target state="translated">방문한 페이지의 URL</target>
        </trans-unit>
        <trans-unit id="b25145cf49cf4b74320bcc56388b1ea5d2fa3fdd" translate="yes" xml:space="preserve">
          <source>USE_ENUM keyword</source>
          <target state="translated">USE_ENUM 키워드</target>
        </trans-unit>
        <trans-unit id="55d3ac5c30b7ece1f75f1ac2e723ea1e5ee09078" translate="yes" xml:space="preserve">
          <source>UTC Offset Time Zones</source>
          <target state="translated">UTC 오프셋 시간대</target>
        </trans-unit>
        <trans-unit id="5a9da893be5fd5fae314bea8dcdeeee12beeec4b" translate="yes" xml:space="preserve">
          <source>UTF-16</source>
          <target state="translated">UTF-16</target>
        </trans-unit>
        <trans-unit id="979a19c76541f1e1114e0a03d633f4396a70caf1" translate="yes" xml:space="preserve">
          <source>UTF-16 Big Endian</source>
          <target state="translated">UTF-16 빅 엔디안</target>
        </trans-unit>
        <trans-unit id="790df07092fd36f1adb6ee3b52355117496a3d44" translate="yes" xml:space="preserve">
          <source>UTF-16 Little Endian</source>
          <target state="translated">UTF-16 리틀 엔디안</target>
        </trans-unit>
        <trans-unit id="de4a45e716017695cfee4bc84f1a4e0c8e1e9b9a" translate="yes" xml:space="preserve">
          <source>UTF-16BE</source>
          <target state="translated">UTF-16BE</target>
        </trans-unit>
        <trans-unit id="6af12beb19d40aa853839c482e864ce703f4d2a9" translate="yes" xml:space="preserve">
          <source>UTF-16LE</source>
          <target state="translated">UTF-16LE</target>
        </trans-unit>
        <trans-unit id="9d90671c2d02729e29282121f3418c32309d8132" translate="yes" xml:space="preserve">
          <source>UTF-32</source>
          <target state="translated">UTF-32</target>
        </trans-unit>
        <trans-unit id="9655e1b2ecfb65e77a40b9394215f3ba07b4f704" translate="yes" xml:space="preserve">
          <source>UTF-32 Big Endian</source>
          <target state="translated">UTF-32 빅 엔디안</target>
        </trans-unit>
        <trans-unit id="5e61fa32dec9dd80e74c34ead69e78e9668f3766" translate="yes" xml:space="preserve">
          <source>UTF-32 Little Endian</source>
          <target state="translated">UTF-32 리틀 엔디안</target>
        </trans-unit>
        <trans-unit id="9e4d8d4f017185a065b570c771eb332a1c842bec" translate="yes" xml:space="preserve">
          <source>UTF-32BE</source>
          <target state="translated">UTF-32BE</target>
        </trans-unit>
        <trans-unit id="35cabe85c31dfe3f6b86974de33fef51a0f7276a" translate="yes" xml:space="preserve">
          <source>UTF-32LE</source>
          <target state="translated">UTF-32LE</target>
        </trans-unit>
        <trans-unit id="663b90c899fa25a111067be0c22ffc64dcf581c2" translate="yes" xml:space="preserve">
          <source>UTF-8</source>
          <target state="translated">UTF-8</target>
        </trans-unit>
        <trans-unit id="c3b7c93789a279a5e067bf99f4f045ffbf81026c" translate="yes" xml:space="preserve">
          <source>UTF-8 is a Unicode codec and can represent all characters in a Unicode string like &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="translated">UTF-8은 유니 코드 코덱이며 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 과 같은 유니 코드 문자열의 모든 문자를 나타낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f80009b78ec0a8a14127b6724878f2122af35fb5" translate="yes" xml:space="preserve">
          <source>UTF-8 is a Unicode codec and can represent all characters in a Unicode string like &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;. However, invalid sequences are possible with UTF-8 and, if any such are found, they will be replaced with one or more &quot;replacement characters&quot;, or suppressed. These include non-Unicode sequences, non-characters, overlong sequences or surrogate codepoints encoded into UTF-8.</source>
          <target state="translated">UTF-8은 유니 코드 코덱이며 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 과 같은 유니 코드 문자열의 모든 문자를 나타낼 수 있습니다 . 그러나 UTF-8에서는 유효하지 않은 시퀀스가 ​​가능하며 이러한 시퀀스가 ​​발견되면 하나 이상의 &quot;대체 문자&quot;로 대체되거나 억제됩니다. 여기에는 비 유니 코드 시퀀스, 비 문자, 긴 시퀀스 또는 UTF-8로 인코딩 된 서로 게이트 코드 포인트가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="1aff4afee80b67c4ed4ecd55e84f7358c5ef58c3" translate="yes" xml:space="preserve">
          <source>UTI</source>
          <target state="translated">UTI</target>
        </trans-unit>
        <trans-unit id="6023e74c92ed2dfa4a78702f2c830da23c9e20e6" translate="yes" xml:space="preserve">
          <source>UUID that uniquely identifies the service.</source>
          <target state="translated">서비스를 고유하게 식별하는 UUID</target>
        </trans-unit>
        <trans-unit id="552e2a9608c951d1b81bf58716cdbd92eff2c512" translate="yes" xml:space="preserve">
          <source>UUIDs can be constructed from numeric values or from strings, or using the static &lt;a href=&quot;quuid#createUuid&quot;&gt;createUuid&lt;/a&gt;() function. They can be converted to a string with &lt;a href=&quot;quuid#toString&quot;&gt;toString&lt;/a&gt;(). UUIDs have a &lt;a href=&quot;quuid#variant&quot;&gt;variant&lt;/a&gt;() and a &lt;a href=&quot;quuid#version&quot;&gt;version&lt;/a&gt;(), and null UUIDs return true from &lt;a href=&quot;quuid#isNull&quot;&gt;isNull&lt;/a&gt;().</source>
          <target state="translated">UUID는 숫자 값이나 문자열 또는 정적 &lt;a href=&quot;quuid#createUuid&quot;&gt;createUuid&lt;/a&gt; () 함수를 사용하여 구성 할 수 있습니다 . &lt;a href=&quot;quuid#toString&quot;&gt;toString&lt;/a&gt; () 을 사용하여 문자열로 변환 할 수 있습니다 . UUID에는 &lt;a href=&quot;quuid#variant&quot;&gt;변형&lt;/a&gt; () 및 &lt;a href=&quot;quuid#version&quot;&gt;버전&lt;/a&gt; ()이 있으며 null UUID는 &lt;a href=&quot;quuid#isNull&quot;&gt;isNull&lt;/a&gt; () 에서 true를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d3f468dc59934a7206cd617422f59cad75d36c1a" translate="yes" xml:space="preserve">
          <source>UUIDs of service classes that the service conforms to. The most common service classes are defined in (&lt;a href=&quot;qbluetoothuuid#ServiceClassUuid-enum&quot;&gt;QBluetoothUuid::ServiceClassUuid&lt;/a&gt;)</source>
          <target state="translated">서비스가 준수하는 서비스 클래스의 UUID 가장 일반적인 서비스 클래스는 ( &lt;a href=&quot;qbluetoothuuid#ServiceClassUuid-enum&quot;&gt;QBluetoothUuid :: ServiceClassUuid&lt;/a&gt; )에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a82d492079fcd5e0a516153dafdcdd583ecf935f" translate="yes" xml:space="preserve">
          <source>UV Unwrap Models</source>
          <target state="translated">UV Unwrap Models</target>
        </trans-unit>
        <trans-unit id="d194e372a243162ea4fb30fa9217dce53447c8a4" translate="yes" xml:space="preserve">
          <source>UV coordinates for sampling &lt;code&gt;INPUT&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;INPUT&lt;/code&gt; 샘플링을위한 UV 좌표 .</target>
        </trans-unit>
        <trans-unit id="3a42ddc509b85469e3c308627d28743feae352f7" translate="yes" xml:space="preserve">
          <source>UV unwrapping your model will create a UV layout. Without a UV layout you will not be able to render any textures on your model in Qt Quick 3D.</source>
          <target state="translated">UV unwrapping your model will create a UV layout. Without a UV layout you will not be able to render any textures on your model in Qt Quick 3D.</target>
        </trans-unit>
        <trans-unit id="6f3f7752a3d94ef91e86db5663686a220d47d846" translate="yes" xml:space="preserve">
          <source>UV0</source>
          <target state="translated">UV0</target>
        </trans-unit>
        <trans-unit id="1a0fbda72cc58cc9e248d03699e2d75bf2568ca4" translate="yes" xml:space="preserve">
          <source>UV0 -&amp;gt; vec2, the first set of texture coordinates in the vertex shader. When the mesh for the associated model does not provide texture coordinates, the value is vec2(0.0).</source>
          <target state="translated">UV0-&amp;gt; vec2, 버텍스 셰이더의 첫 번째 텍스처 좌표 세트. 연관된 모델의 메쉬가 텍스처 좌표를 제공하지 않는 경우 값은 vec2 (0.0)입니다.</target>
        </trans-unit>
        <trans-unit id="ceb9dc2d4cf4670ab157cb0e0d551d4248ecb9b5" translate="yes" xml:space="preserve">
          <source>UV1 -&amp;gt; vec2, the second set of texture coordinates in the vertex shader. When the mesh for the associated model does not provide a second set of texture coordinates, the value is vec2(0.0).</source>
          <target state="translated">UV1-&amp;gt; vec2, 정점 셰이더의 두 번째 텍스처 좌표 집합입니다. 연관된 모델의 메쉬가 두 번째 텍스처 좌표 세트를 제공하지 않는 경우 값은 vec2 (0.0)입니다.</target>
        </trans-unit>
        <trans-unit id="eecbca7ee1eefd0d3731d9ea24fd8f1f0c72498e" translate="yes" xml:space="preserve">
          <source>UWP (Universal Windows Platform)</source>
          <target state="translated">UWP (Universal Windows Platform)</target>
        </trans-unit>
        <trans-unit id="f2b790a66007cf400cdd28765901c85ca50ae9db" translate="yes" xml:space="preserve">
          <source>UWP applications are UI applications by nature. This implies that console type applications will have a window created internally, which is always visible.</source>
          <target state="translated">UWP applications are UI applications by nature. This implies that console type applications will have a window created internally, which is always visible.</target>
        </trans-unit>
        <trans-unit id="f38ec51e1f2817ad43e2fad4da05583f8c591891" translate="yes" xml:space="preserve">
          <source>UWP applications must be packaged (including all dependencies) and installed or registered with the application service in order to be launched. &lt;a href=&quot;winrt-support#winrtrunner&quot;&gt;The WinRT Runner Tool&lt;/a&gt; can be used to launch these applications from the command line.</source>
          <target state="translated">UWP applications must be packaged (including all dependencies) and installed or registered with the application service in order to be launched. &lt;a href=&quot;winrt-support#winrtrunner&quot;&gt;The WinRT Runner Tool&lt;/a&gt; can be used to launch these applications from the command line.</target>
        </trans-unit>
        <trans-unit id="2aec26279dad1cfc156679979df1129f2aabda0e" translate="yes" xml:space="preserve">
          <source>Ubuntu 16.04</source>
          <target state="translated">우분투 16.04</target>
        </trans-unit>
        <trans-unit id="cd195acce4959407bbecd28a63a95b159a75424d" translate="yes" xml:space="preserve">
          <source>Ubuntu 18.04</source>
          <target state="translated">우분투 18.04</target>
        </trans-unit>
        <trans-unit id="b020aa07e2f95052c5d1d723de157959b6544ee4" translate="yes" xml:space="preserve">
          <source>Ubuntu 20.04</source>
          <target state="translated">Ubuntu 20.04</target>
        </trans-unit>
        <trans-unit id="f301189dd0e6ecd6aa5f6cd826f3ac3660574f9f" translate="yes" xml:space="preserve">
          <source>UdpSocket</source>
          <target state="translated">UdpSocket</target>
        </trans-unit>
        <trans-unit id="515451058797b204e188dd70f8d20f32dacca327" translate="yes" xml:space="preserve">
          <source>Ukrainian</source>
          <target state="translated">Ukrainian</target>
        </trans-unit>
        <trans-unit id="67c638575c0250dd22e12fb602bbc481f93dea79" translate="yes" xml:space="preserve">
          <source>Ukrainian Layout</source>
          <target state="translated">우크라이나어 레이아웃</target>
        </trans-unit>
        <trans-unit id="c07782db5dc5957edf6d3c9e049c2298d4192dce" translate="yes" xml:space="preserve">
          <source>Ulrich Drepper's excellent article: &quot;What Every Programmer Should Know About Memory&quot;, at: &lt;a href=&quot;https://people.freebsd.org/~lstewart/articles/cpumemory.pdf&quot;&gt;https://people.freebsd.org/~lstewart/articles/cpumemory.pdf&lt;/a&gt;.</source>
          <target state="translated">울리히 드레 퍼의 우수한 기사 : &quot;메모리에 대해 어떻게 모든 프로그래머한다 알고&quot;에서 : &lt;a href=&quot;https://people.freebsd.org/~lstewart/articles/cpumemory.pdf&quot;&gt;https://people.freebsd.org/~lstewart/articles/cpumemory.pdf&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f5ea62caa5956fb456ef1c7b58f9fa499900740" translate="yes" xml:space="preserve">
          <source>Unable to access the resource..</source>
          <target state="translated">리소스에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="41fb3b53057e4de258e6e2da224c31c180ea5b99" translate="yes" xml:space="preserve">
          <source>Unable to connect to the target host.</source>
          <target state="translated">대상 호스트에 연결할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="322c05f24a1a6dc986f58698e6d1e5eb33f904ac" translate="yes" xml:space="preserve">
          <source>Unable to open radio device.</source>
          <target state="translated">라디오 장치를 열 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="03121cbf18c4f7c8ffd219c43e27839b8713210d" translate="yes" xml:space="preserve">
          <source>Unable to open the file specified.</source>
          <target state="translated">지정된 파일을 열 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2c9c1f79142df1b66d7a9ed0086592e49c8cf16e" translate="yes" xml:space="preserve">
          <source>Unavailable</source>
          <target state="translated">Unavailable</target>
        </trans-unit>
        <trans-unit id="16c294856bb8c54049ed943c792ea8d2a6adbfce" translate="yes" xml:space="preserve">
          <source>UnavailableStatus</source>
          <target state="translated">UnavailableStatus</target>
        </trans-unit>
        <trans-unit id="b58d2c99d4d56241ec69a1ca67c64f0f7f76df10" translate="yes" xml:space="preserve">
          <source>Unbind (&lt;a href=&quot;qopenglvertexarrayobject#release&quot;&gt;release&lt;/a&gt;()) the VAO</source>
          <target state="translated">VAO 바인드 해제 ( &lt;a href=&quot;qopenglvertexarrayobject#release&quot;&gt;해제&lt;/a&gt; ())</target>
        </trans-unit>
        <trans-unit id="b91b9f01c961936d1a35de1ebecfac1ec578d86f" translate="yes" xml:space="preserve">
          <source>Unbind the helper object from this media object. A warning will be generated if the object was not previously bound to this object.</source>
          <target state="translated">이 매체 오브젝트에서 헬퍼 오브젝트를 바인드 해제하십시오. 객체가 이전에이 객체에 바인딩되지 않은 경우 경고가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="5668ed341a80243738a0ff434bf8c56f0304f03a" translate="yes" xml:space="preserve">
          <source>Unbinds the graphics resources used by the blitter.</source>
          <target state="translated">블 리터가 사용하는 그래픽 리소스를 바인딩 해제합니다.</target>
        </trans-unit>
        <trans-unit id="7dca2612c92a36b630a5383ef4844d7631c0dc15" translate="yes" xml:space="preserve">
          <source>Unbinds this texture from texture unit</source>
          <target state="translated">이 텍스처를 텍스처 유닛에서 바인딩 해제</target>
        </trans-unit>
        <trans-unit id="94d79a6294d4c62c225bd67e37bf3cd4a2abf434" translate="yes" xml:space="preserve">
          <source>Unbinds this texture from the currently active texture unit.</source>
          <target state="translated">이 텍스처를 현재 활성화 된 텍스처 단위에서 바인딩 해제합니다.</target>
        </trans-unit>
        <trans-unit id="d9d1d5f142906052adee4a90b3b66f71186c3439" translate="yes" xml:space="preserve">
          <source>Unbinds this vertex array object by binding the default vertex array object (id = 0).</source>
          <target state="translated">기본 정점 배열 객체 (id = 0)를 바인딩하여이 정점 배열 객체를 바인딩 해제합니다.</target>
        </trans-unit>
        <trans-unit id="582baf1a3a8492f4d5e38eff5695a353b162f889" translate="yes" xml:space="preserve">
          <source>Unbound key.</source>
          <target state="translated">언 바운드 키.</target>
        </trans-unit>
        <trans-unit id="5b91e4c4af9d2d7674ce5285b5efe36702056678" translate="yes" xml:space="preserve">
          <source>Uncomment the service part of your &lt;code&gt;AndroidManifest.xml&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AndroidManifest.xml&lt;/code&gt; 의 서비스 부분 주석 처리를 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8d37fcbc86d3491849fb0f29c7b27d24eb2ead2" translate="yes" xml:space="preserve">
          <source>Uncompresses the</source>
          <target state="translated">압축 해제</target>
        </trans-unit>
        <trans-unit id="27378b3b5273fe7f051c043f8c3eb5d3f1bead39" translate="yes" xml:space="preserve">
          <source>Uncompresses the first</source>
          <target state="translated">첫 번째 압축을 해제합니다</target>
        </trans-unit>
        <trans-unit id="8679b85f1966c3dfdbfa74e0850786cb46ceec89" translate="yes" xml:space="preserve">
          <source>Uncreatable accessor to scene rendering statistics.</source>
          <target state="translated">Uncreatable accessor to scene rendering statistics.</target>
        </trans-unit>
        <trans-unit id="30299a45358535b618a9249abb0c03b3c07087f7" translate="yes" xml:space="preserve">
          <source>Undeclared namespace prefixes won't be allowed anymore.</source>
          <target state="translated">선언되지 않은 네임 스페이스 접두사는 더 이상 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="08fe0f93d1ddb3978064a81011ec8d41148a8a16" translate="yes" xml:space="preserve">
          <source>Undefine macro.</source>
          <target state="translated">매크로를 정의하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0646f4afd90c8fdb87bbcb57b63ee1911f5a9a46" translate="yes" xml:space="preserve">
          <source>Undefined</source>
          <target state="translated">Undefined</target>
        </trans-unit>
        <trans-unit id="d5435b5e7ff24894b38f76bb733aa73026ed44a1" translate="yes" xml:space="preserve">
          <source>Undefined and null values</source>
          <target state="translated">정의되지 않은 null 값</target>
        </trans-unit>
        <trans-unit id="282f47c35a8c820f46bd979c632f5b87e9ade1cd" translate="yes" xml:space="preserve">
          <source>Undefined values are different from null values.</source>
          <target state="translated">정의되지 않은 값은 null 값과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="142f18828b9afba04afccfbac8c290d20f9c1dad" translate="yes" xml:space="preserve">
          <source>Undefined values are different from null values. While nulls are used to indicate an optional value that is not provided, Undefined is usually used to indicate that an expected value could not be provided, usually due to an error or a precondition that could not be satisfied.</source>
          <target state="translated">정의되지 않은 값은 null 값과 다릅니다. 제공되지 않는 선택적 값을 표시하기 위해 널 (null)이 사용되지만 일반적으로 정의되지 않은 오류는 충족 될 수없는 오류 또는 전제 조건으로 인해 예상 값을 제공 할 수 없음을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4e172c81a8533c4dec8f4634a01eae4367de4ef2" translate="yes" xml:space="preserve">
          <source>Undefined values are distinct from null values.</source>
          <target state="translated">정의되지 않은 값은 null 값과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="12cae0215e9e585c0d8bfb768a2325b0b773cb0e" translate="yes" xml:space="preserve">
          <source>Undefined values are represented by the &lt;a href=&quot;qtcborcommon#QCborSimpleType-enum&quot;&gt;Undefined simple type&lt;/a&gt;. Because of that, QCborValues with undefined values will also return true for &lt;a href=&quot;qcborvalue#isSimpleType&quot;&gt;isSimpleType&lt;/a&gt;() and &lt;code&gt;isSimpleType(QCborSimpleType::Undefined)&lt;/code&gt;.</source>
          <target state="translated">정의되지 않은 값은 &lt;a href=&quot;qtcborcommon#QCborSimpleType-enum&quot;&gt;정의되지 않은 단순 유형으로&lt;/a&gt; 표시됩니다 . 따라서 정의되지 않은 값을 가진 QCborValues는 &lt;a href=&quot;qcborvalue#isSimpleType&quot;&gt;isSimpleType&lt;/a&gt; () 및 &lt;code&gt;isSimpleType(QCborSimpleType::Undefined)&lt;/code&gt; 에 대해서도 true를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="7d68eb6c3eff5f9ff821225c7640afe8a9e8f544" translate="yes" xml:space="preserve">
          <source>Under &lt;b&gt;General Options&lt;/b&gt;, be sure that &lt;b&gt;OpenCOLLADA&lt;/b&gt; exporter is selected and set as the default file extension. Under &lt;b&gt;General export options&lt;/b&gt;, check that the following options are active.</source>
          <target state="translated">Under &lt;b&gt;General Options&lt;/b&gt;, be sure that &lt;b&gt;OpenCOLLADA&lt;/b&gt; exporter is selected and set as the default file extension. Under &lt;b&gt;General export options&lt;/b&gt;, check that the following options are active.</target>
        </trans-unit>
        <trans-unit id="b62de6f4677a18079946a4163205a3cf82fd783a" translate="yes" xml:space="preserve">
          <source>Under Unix, two libraries are available which support the TDS protocol:</source>
          <target state="translated">Unix에서는 TDS 프로토콜을 지원하는 두 개의 라이브러리를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6862ca930fcfc1d00c64c3ae41285869c5918a15" translate="yes" xml:space="preserve">
          <source>Under Windows this function will return the directory of the current user's profile. Typically, this is:</source>
          <target state="translated">Windows에서이 기능은 현재 사용자 프로필의 디렉토리를 반환합니다. 일반적으로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2b8c04cf02a975dfbe2d04291fd48019919f2c7a" translate="yes" xml:space="preserve">
          <source>Under non-Windows operating systems the &lt;code&gt;HOME&lt;/code&gt; environment variable is used if it exists, otherwise the path returned by the &lt;a href=&quot;qdir#rootPath&quot;&gt;rootPath&lt;/a&gt;().</source>
          <target state="translated">Windows 이외의 운영 체제에서는 &lt;code&gt;HOME&lt;/code&gt; 환경 변수가 있으면 사용하고 그렇지 않으면 &lt;a href=&quot;qdir#rootPath&quot;&gt;rootPath&lt;/a&gt; ()가 리턴 한 경로가 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="e6a6e136f6ceb162c33d7f6ec6eec416aaef567a" translate="yes" xml:space="preserve">
          <source>Under normal circumstances qmake will try to use appropriate file extensions for your platform. However, it is sometimes necessary to override the default choices for each platform and explicitly define file extensions for qmake to use. This is achieved by redefining certain built-in variables. For example, the extension used for &lt;a href=&quot;moc&quot;&gt;moc&lt;/a&gt; files can be redefined with the following assignment in a project file:</source>
          <target state="translated">일반적인 상황에서 qmake는 플랫폼에 적합한 파일 확장자를 사용하려고합니다. 그러나 때때로 각 플랫폼에 대한 기본 선택 사항을 대체하고 qmake가 사용할 파일 확장자를 명시 적으로 정의해야합니다. 이것은 특정 내장 변수를 재정의함으로써 달성됩니다. 예를 들어, &lt;a href=&quot;moc&quot;&gt;moc&lt;/a&gt; 파일에 사용 된 확장자 는 프로젝트 파일에서 다음 지정으로 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="885a99aef53abac33590caa40dde46ca2d796c8a" translate="yes" xml:space="preserve">
          <source>Under normal circumstances, there is only one tool tip visible at a time. In order to save resources, all items that use the &lt;a href=&quot;qml-qtquick-controls2-tooltip&quot;&gt;ToolTip&lt;/a&gt; attached property share the same visual tool tip label instance. Even though the visuals are shared, &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;timeout&lt;/code&gt; and &lt;code&gt;delay&lt;/code&gt; are stored individually for each item that uses the respective attached property. However, multiple items cannot make the shared tool tip visible at the same time. The shared tool tip is only shown for the last item that made it visible. The position of the shared tool tip is determined by the framework.</source>
          <target state="translated">정상적인 상황에서는 한 번에 하나의 툴팁 만 표시됩니다. 리소스를 절약하기 위해 &lt;a href=&quot;qml-qtquick-controls2-tooltip&quot;&gt;ToolTip&lt;/a&gt; 연결된 속성 을 사용하는 모든 항목 은 동일한 시각적 도구 설명 레이블 인스턴스를 공유합니다. 비주얼이 공유 되더라도 &lt;code&gt;text&lt;/code&gt; , &lt;code&gt;timeout&lt;/code&gt; 및 &lt;code&gt;delay&lt;/code&gt; 는 각각의 연결된 속성을 사용하는 각 항목에 대해 개별적으로 저장됩니다. 그러나 여러 항목을 사용하면 공유 도구 설명을 동시에 볼 수 없습니다. 공유 도구 설명은 마지막으로 표시 한 항목에 대해서만 표시됩니다. 공유 툴팁의 위치는 프레임 워크에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="6ce366c470f04f2bd430c03c75d424cef5fd8580" translate="yes" xml:space="preserve">
          <source>Under normal circumstances, there is only one tool tip visible at a time. In order to save resources, all items that use the ToolTip attached property share the same visual tool tip label instance. Even though the visuals are shared, &lt;code&gt;text&lt;/code&gt;, &lt;code&gt;timeout&lt;/code&gt; and &lt;code&gt;delay&lt;/code&gt; are stored individually for each item that uses the respective attached property. However, multiple items cannot make the shared tool tip visible at the same time. The shared tool tip is only shown for the last item that made it visible. The position of the shared tool tip is determined by the framework.</source>
          <target state="translated">Under normal circumstances, there is only one tool tip visible at a time. In order to save resources, all items that use the ToolTip attached property share the same visual tool tip label instance. Even though the visuals are shared, &lt;code&gt;text&lt;/code&gt; , &lt;code&gt;timeout&lt;/code&gt; and &lt;code&gt;delay&lt;/code&gt; are stored individually for each item that uses the respective attached property. However, multiple items cannot make the shared tool tip visible at the same time. The shared tool tip is only shown for the last item that made it visible. The position of the shared tool tip is determined by the framework.</target>
        </trans-unit>
        <trans-unit id="4d666356a99c0140a23e0132a80ac729a22f8e85" translate="yes" xml:space="preserve">
          <source>Under the &lt;b&gt;Main&lt;/b&gt; tab, set &lt;b&gt;Forward&lt;/b&gt; to &lt;code&gt;Y Forward&lt;/code&gt; and &lt;b&gt;Up&lt;/b&gt; to &lt;code&gt;Z Up&lt;/code&gt;.</source>
          <target state="translated">Under the &lt;b&gt;Main&lt;/b&gt; tab, set &lt;b&gt;Forward&lt;/b&gt; to &lt;code&gt;Y Forward&lt;/code&gt; and &lt;b&gt;Up&lt;/b&gt; to &lt;code&gt;Z Up&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="922991ef186cb101cab589ed9c25a12fd962baa0" translate="yes" xml:space="preserve">
          <source>Under the hood, conversion from a JavaScript &lt;code&gt;Date&lt;/code&gt; object to &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; is done by converting to a &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; object and calling its &lt;a href=&quot;qdatetime#time&quot;&gt;time()&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;qtime&quot;&gt;기본적&lt;/a&gt; 으로 JavaScript &lt;code&gt;Date&lt;/code&gt; 객체에서 QTime 으로의 변환은 &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; 객체 로 변환 하고 &lt;a href=&quot;qdatetime#time&quot;&gt;time ()&lt;/a&gt; 메서드를 호출하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="a323af496b1064479102eff1cbef3f2cd5c13463" translate="yes" xml:space="preserve">
          <source>Underlay</source>
          <target state="translated">Underlay</target>
        </trans-unit>
        <trans-unit id="39773aa3efa19090c918baedac1fe737dea25b92" translate="yes" xml:space="preserve">
          <source>Underline</source>
          <target state="translated">Underline</target>
        </trans-unit>
        <trans-unit id="f39467e21dc3c9f535be3fe76ee9c932556bf709" translate="yes" xml:space="preserve">
          <source>Underline text.</source>
          <target state="translated">밑줄 텍스트.</target>
        </trans-unit>
        <trans-unit id="5b2b50e3670eb759e5d9ce161630ede5e20fb13e" translate="yes" xml:space="preserve">
          <source>Underlined</source>
          <target state="translated">Underlined</target>
        </trans-unit>
        <trans-unit id="501c579e177268d6fc14ebe1881fe624c76f7501" translate="yes" xml:space="preserve">
          <source>Underlines draw drawn using &lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt::DashDotDotLine&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qt#PenStyle-enum&quot;&gt;Qt :: DashDotDotLine을&lt;/a&gt; 사용하여 밑줄을 그립니다 .</target>
        </trans-unit>
        <trans-unit id="39fc72124884d6573e4f9f89585f071ed0782696" translate="yes" xml:space="preserve">
          <source>Undo</source>
          <target state="translated">Undo</target>
        </trans-unit>
        <trans-unit id="12994b05631d471f49e70d7e3026e78432d05dd8" translate="yes" xml:space="preserve">
          <source>Undo and Redo Actions</source>
          <target state="translated">실행 취소 및 재실행 작업</target>
        </trans-unit>
        <trans-unit id="c380a5eed442f6784e65a5306e788e09aa3d9204" translate="yes" xml:space="preserve">
          <source>Undo becomes available once the user has modified the text in the line edit.</source>
          <target state="translated">사용자가 라인 편집에서 텍스트를 수정하면 실행 취소를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84236bde0f15b9c499c67afd031213d5ed31e94e" translate="yes" xml:space="preserve">
          <source>Undo is available.</source>
          <target state="translated">실행 취소가 가능합니다.</target>
        </trans-unit>
        <trans-unit id="402fe9fde3d3a2caf7d03b5057a437abc61a3044" translate="yes" xml:space="preserve">
          <source>Undo the last editing action.</source>
          <target state="translated">마지막 편집 작업을 취소하십시오.</target>
        </trans-unit>
        <trans-unit id="8b48720e1daace0d5acad80d5929694e5609c63b" translate="yes" xml:space="preserve">
          <source>Undo.</source>
          <target state="translated">Undo.</target>
        </trans-unit>
        <trans-unit id="e497c7f97cd58960f17ebda6772625d49d697340" translate="yes" xml:space="preserve">
          <source>Undo/redo of operations performed on the document can be controlled using the &lt;a href=&quot;qtextdocument#undoRedoEnabled-prop&quot;&gt;setUndoRedoEnabled&lt;/a&gt;() function. The undo/redo system can be controlled by an editor widget through the &lt;a href=&quot;qtextdocument#undo-1&quot;&gt;undo&lt;/a&gt;() and &lt;a href=&quot;qtextdocument#redo-1&quot;&gt;redo&lt;/a&gt;() slots; the document also provides &lt;a href=&quot;qtextdocument#contentsChanged&quot;&gt;contentsChanged&lt;/a&gt;(), &lt;a href=&quot;qtextdocument#undoAvailable&quot;&gt;undoAvailable&lt;/a&gt;(), and &lt;a href=&quot;qtextdocument#redoAvailable&quot;&gt;redoAvailable&lt;/a&gt;() signals that inform connected editor widgets about the state of the undo/redo system. The following are the undo/redo operations of a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;qtextdocument#undoRedoEnabled-prop&quot;&gt;setUndoRedoEnabled&lt;/a&gt; () 기능을 사용하여 문서에서 수행 된 작업의 실행 취소 / 다시 실행을 제어 할 수 있습니다 . 실행 취소 / 다시 실행 시스템은 &lt;a href=&quot;qtextdocument#undo-1&quot;&gt;실행 취소&lt;/a&gt; () 및 &lt;a href=&quot;qtextdocument#redo-1&quot;&gt;다시 실행&lt;/a&gt; () 슬롯을 통해 편집기 위젯으로 제어 할 수 있습니다 . 이 문서는 연결된 편집기 위젯에 실행 취소 / 다시 실행 시스템 상태를 알려주 는 &lt;a href=&quot;qtextdocument#contentsChanged&quot;&gt;contentsChanged&lt;/a&gt; (), &lt;a href=&quot;qtextdocument#undoAvailable&quot;&gt;undoAvailable&lt;/a&gt; () 및 &lt;a href=&quot;qtextdocument#redoAvailable&quot;&gt;redoAvailable&lt;/a&gt; () 신호도 제공합니다. 다음은 &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; 의 실행 취소 / 다시 실행 작업입니다 .</target>
        </trans-unit>
        <trans-unit id="0fe6c3b498c5f1fa97b16cf144351817876abdd2" translate="yes" xml:space="preserve">
          <source>Undo/redo of operations performed on the document can be controlled using the &lt;a href=&quot;qtextdocument#undoRedoEnabled-prop&quot;&gt;setUndoRedoEnabled&lt;/a&gt;() function. The undo/redo system can be controlled by an editor widget through the &lt;a href=&quot;qtextdocument#undo-1&quot;&gt;undo&lt;/a&gt;() and &lt;a href=&quot;qtextdocument#redo-1&quot;&gt;redo&lt;/a&gt;() slots; the document also provides &lt;a href=&quot;qtextdocument#contentsChanged&quot;&gt;contentsChanged&lt;/a&gt;(), &lt;a href=&quot;qtextdocument#undoAvailable&quot;&gt;undoAvailable&lt;/a&gt;(), and &lt;a href=&quot;qtextdocument#redoAvailable&quot;&gt;redoAvailable&lt;/a&gt;() signals that inform connected editor widgets about the state of the undo/redo system. The following are the undo/redo operations of a QTextDocument:</source>
          <target state="translated">Undo/redo of operations performed on the document can be controlled using the &lt;a href=&quot;qtextdocument#undoRedoEnabled-prop&quot;&gt;setUndoRedoEnabled&lt;/a&gt;() function. The undo/redo system can be controlled by an editor widget through the &lt;a href=&quot;qtextdocument#undo-1&quot;&gt;undo&lt;/a&gt;() and &lt;a href=&quot;qtextdocument#redo-1&quot;&gt;redo&lt;/a&gt;() slots; the document also provides &lt;a href=&quot;qtextdocument#contentsChanged&quot;&gt;contentsChanged&lt;/a&gt;(), &lt;a href=&quot;qtextdocument#undoAvailable&quot;&gt;undoAvailable&lt;/a&gt;(), and &lt;a href=&quot;qtextdocument#redoAvailable&quot;&gt;redoAvailable&lt;/a&gt;() signals that inform connected editor widgets about the state of the undo/redo system. The following are the undo/redo operations of a QTextDocument:</target>
        </trans-unit>
        <trans-unit id="b4b27024674bcee6616409b2bc8cd19cfa486c64" translate="yes" xml:space="preserve">
          <source>Undoes the command below the current command by calling &lt;a href=&quot;qundocommand#undo&quot;&gt;QUndoCommand::undo&lt;/a&gt;(). Decrements the current command index.</source>
          <target state="translated">&lt;a href=&quot;qundocommand#undo&quot;&gt;QUndoCommand :: undo&lt;/a&gt; ()를 호출하여 현재 명령 아래의 명령을 취소합니다 . 현재 명령 색인을 줄입니다.</target>
        </trans-unit>
        <trans-unit id="b10ce77aadea3ad845b5f21a88cc7a32025ad31e" translate="yes" xml:space="preserve">
          <source>Undoes the last &lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;setOverrideCursor&lt;/a&gt;().</source>
          <target state="translated">마지막 &lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;setOverrideCursor&lt;/a&gt; ()를 취소합니다 .</target>
        </trans-unit>
        <trans-unit id="11841a2181e41d5a95d4142cc399a4a03664417b" translate="yes" xml:space="preserve">
          <source>Undoes the last editing operation on the document if undo is available. The provided</source>
          <target state="translated">실행 취소가 가능한 경우 문서에서 마지막 편집 작업을 취소합니다. 제공</target>
        </trans-unit>
        <trans-unit id="e2e2e832ecfe3072d8047cba4bc61e788f51d4db" translate="yes" xml:space="preserve">
          <source>Undoes the last operation if undo is &lt;a href=&quot;qlineedit#undoAvailable-prop&quot;&gt;available&lt;/a&gt;. Deselects any current selection, and updates the selection start to the current cursor position.</source>
          <target state="translated">실행 취소를 &lt;a href=&quot;qlineedit#undoAvailable-prop&quot;&gt;사용할 수있는&lt;/a&gt; 경우 마지막 작업을 취소 합니다 . 현재 선택을 해제하고 선택 시작을 현재 커서 위치로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="8b50a3d17ac8a31e4972d0e682e32a35cf7116ce" translate="yes" xml:space="preserve">
          <source>Undoes the last operation if undo is &lt;a href=&quot;qml-qtquick-controls-textarea#canUndo-prop&quot;&gt;available&lt;/a&gt;. Deselects any current selection, and updates the selection start to the current cursor position.</source>
          <target state="translated">실행 취소를 &lt;a href=&quot;qml-qtquick-controls-textarea#canUndo-prop&quot;&gt;사용할 수있는&lt;/a&gt; 경우 마지막 작업을 취소 합니다 . 현재 선택을 해제하고 선택 시작을 현재 커서 위치로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="5baa64a72872dacf9d57a51ef77d818b82c2927e" translate="yes" xml:space="preserve">
          <source>Undoes the last operation if undo is &lt;a href=&quot;qml-qtquick-textedit#canUndo-prop&quot;&gt;available&lt;/a&gt;. Deselects any current selection, and updates the selection start to the current cursor position.</source>
          <target state="translated">실행 취소를 &lt;a href=&quot;qml-qtquick-textedit#canUndo-prop&quot;&gt;사용할 수있는&lt;/a&gt; 경우 마지막 작업을 취소 합니다 . 현재 선택을 해제하고 선택 시작을 현재 커서 위치로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="8423b2e2b93eefc10219056baa6f1ec33c9f61a4" translate="yes" xml:space="preserve">
          <source>Undoes the last operation if undo is &lt;a href=&quot;qml-qtquick-textinput#canUndo-prop&quot;&gt;available&lt;/a&gt;. Deselects any current selection, and updates the selection start to the current cursor position.</source>
          <target state="translated">실행 취소를 &lt;a href=&quot;qml-qtquick-textinput#canUndo-prop&quot;&gt;사용할 수있는&lt;/a&gt; 경우 마지막 작업을 취소 합니다 . 현재 선택을 해제하고 선택 시작을 현재 커서 위치로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="60cd8b6dc53d97d58cc01f4c6949b2b6cd66b26a" translate="yes" xml:space="preserve">
          <source>Undoes the last operation.</source>
          <target state="translated">마지막 작업을 취소합니다.</target>
        </trans-unit>
        <trans-unit id="ad28b50c1fcb9c3a35b1e24f9fda5b40546e92d4" translate="yes" xml:space="preserve">
          <source>Unexpected server response (might indicate that the responding server may not be the intended server).</source>
          <target state="translated">예기치 않은 서버 응답 (응답 서버가 의도 한 서버가 아닐 수 있음을 나타낼 수 있음).</target>
        </trans-unit>
        <trans-unit id="8af1901c6c77f71f8370af00d6108bd0c6b64a61" translate="yes" xml:space="preserve">
          <source>Unfortunately, some methods exposed by &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; returning a &lt;code&gt;QStringRef&lt;/code&gt;, could not be moved to Qt5Compat. Therefore some manually porting may be needed. If your code uses one or more of the following functions you need to port them to use &lt;a href=&quot;qtcore-changes-qt6#qstringview&quot;&gt;QStringView&lt;/a&gt; or &lt;a href=&quot;qstringtokenizer&quot;&gt;QStringTokenizer&lt;/a&gt;. It is also recommended to use &lt;a href=&quot;qstringview#tokenize&quot;&gt;QStringView::tokenize&lt;/a&gt; over &lt;a href=&quot;qstringview#split&quot;&gt;QStringView::split&lt;/a&gt; for performance critical code.</source>
          <target state="translated">불행히도 &lt;code&gt;QStringRef&lt;/code&gt; 를 반환하는 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 에 의해 노출 된 일부 메서드 는 Qt5Compat 로 이동할 수 없습니다. 따라서 일부 수동 이식이 필요할 수 있습니다. 코드에서 다음 함수 중 하나 이상을 사용하는 경우 &lt;a href=&quot;qtcore-changes-qt6#qstringview&quot;&gt;QStringView&lt;/a&gt; 또는 &lt;a href=&quot;qstringtokenizer&quot;&gt;QStringTokenizer&lt;/a&gt; 를 사용하도록 이식해야합니다 . 또한 성능에 중요한 코드를 위해 &lt;a href=&quot;qstringview#split&quot;&gt;QStringView :: split&lt;/a&gt; 보다 QStringView :: &lt;a href=&quot;qstringview#tokenize&quot;&gt;tokenize&lt;/a&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="74fc60303342f62c3d3abc055f4f95dfc73fe380" translate="yes" xml:space="preserve">
          <source>Ungrabs the gesture for the</source>
          <target state="translated">제스처를 해제</target>
        </trans-unit>
        <trans-unit id="7ac7d9bfbfce1527114b3e8f6feb5a58858b596d" translate="yes" xml:space="preserve">
          <source>Ungrabs the touch points owned by this item.</source>
          <target state="translated">이 항목이 소유 한 접촉점을 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="a0c079480e2173fb585283d639662cec9ca1b9de" translate="yes" xml:space="preserve">
          <source>Unicode Character Database (UCD), version 20</source>
          <target state="translated">UCD (유니 코드 문자 데이터베이스) 버전 20</target>
        </trans-unit>
        <trans-unit id="f0e67518874994260ed7147e75e57b4b6ef719a8" translate="yes" xml:space="preserve">
          <source>Unicode Character Database (UCD), version 26</source>
          <target state="translated">Unicode Character Database (UCD), version 26</target>
        </trans-unit>
        <trans-unit id="4f2c7ef7f43fe84d2de02fe73da14e037408e8a6" translate="yes" xml:space="preserve">
          <source>Unicode Common Locale Data Repository (CLDR), version v35.1</source>
          <target state="translated">CLDR (Unicode Common Locale Data Repository) 버전 v35.1</target>
        </trans-unit>
        <trans-unit id="e031d6cb68a281a0346bce5914e8aeb68415bc45" translate="yes" xml:space="preserve">
          <source>Unicode Common Locale Data Repository (CLDR), version v36</source>
          <target state="translated">Unicode Common Locale Data Repository (CLDR), version v36</target>
        </trans-unit>
        <trans-unit id="505ce37256284f0db60c7087ac0ad59b85a6c861" translate="yes" xml:space="preserve">
          <source>Unicode Common Locale Data Repository (CLDR), version v38</source>
          <target state="translated">유니 코드 CLDR (Common Locale Data Repository), 버전 v38</target>
        </trans-unit>
        <trans-unit id="5b264c7f869479b227cbaa0911a2c698f9e5d4ac" translate="yes" xml:space="preserve">
          <source>Unicode I/O should be used as this maximizes the portability of documents between users around the world. In many cases it is however still necessary to support other encodings as your users will need to process existing documents. The most important additional encoding to support is the one returned by &lt;a href=&quot;qtextcodec#codecForLocale&quot;&gt;QTextCodec::codecForLocale&lt;/a&gt;(), as this is the one the user is most likely to need for communicating with other people and applications (this is the codec used by local8Bit()).</source>
          <target state="translated">전 세계 사용자 간의 문서 이동성을 최대화하려면 유니 코드 I / O를 사용해야합니다. 그러나 대부분의 경우 사용자가 기존 문서를 처리해야하므로 다른 인코딩을 지원해야합니다. 지원하기 위해 가장 중요한 추가 인코딩은 &lt;a href=&quot;qtextcodec#codecForLocale&quot;&gt;QTextCodec :: codecForLocale&lt;/a&gt; ()에 의해 반환되는 것입니다. 이는 사용자가 다른 사람 및 응용 프로그램과 통신하는 데 가장 필요하기 때문입니다 (local8Bit ()에서 사용하는 코덱 임).</target>
        </trans-unit>
        <trans-unit id="2e12dcf5376b2110b6af7baf6c885063a09ef75e" translate="yes" xml:space="preserve">
          <source>Unicode License Agreement - Data Files and Software (2016)</source>
          <target state="translated">유니 코드 라이센스 계약-데이터 파일 및 소프트웨어 (2016)</target>
        </trans-unit>
        <trans-unit id="a764a1eca3bfa0c103fc62104685c7434534a68d" translate="yes" xml:space="preserve">
          <source>Unicode character string</source>
          <target state="translated">유니 코드 문자열</target>
        </trans-unit>
        <trans-unit id="5e660b4354c647e84650b0e0d9b838da111743a6" translate="yes" xml:space="preserve">
          <source>Unicode characters in the array</source>
          <target state="translated">배열의 유니 코드 문자</target>
        </trans-unit>
        <trans-unit id="804539674f604599415c23b616daeec0f3355168" translate="yes" xml:space="preserve">
          <source>Unicode class name Cc</source>
          <target state="translated">유니 코드 클래스 이름 Cc</target>
        </trans-unit>
        <trans-unit id="6f21c5391107a8995764221eeeef25ef1dff9fe4" translate="yes" xml:space="preserve">
          <source>Unicode class name Cf</source>
          <target state="translated">유니 코드 클래스 이름 Cf</target>
        </trans-unit>
        <trans-unit id="4a95f9b0036e0494d178e51053b498cd70a16aed" translate="yes" xml:space="preserve">
          <source>Unicode class name Cn</source>
          <target state="translated">유니 코드 클래스 이름 Cn</target>
        </trans-unit>
        <trans-unit id="f4d98eaef6e55b144af00eee6ac384a00ecac357" translate="yes" xml:space="preserve">
          <source>Unicode class name Co</source>
          <target state="translated">유니 코드 클래스 이름 Co</target>
        </trans-unit>
        <trans-unit id="d63ad1f34041f213a91ce33f6cf30e0e42e70dd1" translate="yes" xml:space="preserve">
          <source>Unicode class name Cs</source>
          <target state="translated">유니 코드 클래스 이름 C</target>
        </trans-unit>
        <trans-unit id="f0f8b5b3e0396ab37e864fd15fcb2646c25ba6fc" translate="yes" xml:space="preserve">
          <source>Unicode class name Ll</source>
          <target state="translated">유니 코드 클래스 이름 Ll</target>
        </trans-unit>
        <trans-unit id="c44342cfa85d9f91422edc674ab0e2ec270f67a5" translate="yes" xml:space="preserve">
          <source>Unicode class name Lm</source>
          <target state="translated">유니 코드 클래스 이름 Lm</target>
        </trans-unit>
        <trans-unit id="492190e8cb894836d498adb26231193361b54d70" translate="yes" xml:space="preserve">
          <source>Unicode class name Lo</source>
          <target state="translated">유니 코드 클래스 이름 Lo</target>
        </trans-unit>
        <trans-unit id="8465a53433e9e2c4bdb9d4d7ea6d63acfcb6c2cd" translate="yes" xml:space="preserve">
          <source>Unicode class name Lt</source>
          <target state="translated">유니 코드 클래스 이름 Lt</target>
        </trans-unit>
        <trans-unit id="7ff8a68d488ed5428cb0cc3d367c4aa515a18e12" translate="yes" xml:space="preserve">
          <source>Unicode class name Lu</source>
          <target state="translated">유니 코드 클래스 이름 Lu</target>
        </trans-unit>
        <trans-unit id="dfc9279a4a00fd48d4aa08e2ce8b8ed8fa8125aa" translate="yes" xml:space="preserve">
          <source>Unicode class name Mc</source>
          <target state="translated">유니 코드 클래스 이름 Mc</target>
        </trans-unit>
        <trans-unit id="b407b13aeb927b3308f5525ae6f63a190fc4c572" translate="yes" xml:space="preserve">
          <source>Unicode class name Me</source>
          <target state="translated">유니 코드 클래스 이름 Me</target>
        </trans-unit>
        <trans-unit id="cc6f0995f270cd17f32829b4c9455e168c0cad1d" translate="yes" xml:space="preserve">
          <source>Unicode class name Mn</source>
          <target state="translated">유니 코드 클래스 이름 Mn</target>
        </trans-unit>
        <trans-unit id="a01488631caec97c6ad53f79174e24fe3d3b2f10" translate="yes" xml:space="preserve">
          <source>Unicode class name Nd</source>
          <target state="translated">유니 코드 클래스 이름 Nd</target>
        </trans-unit>
        <trans-unit id="6724d07e62e014f40082eec71dbb4aed960b2841" translate="yes" xml:space="preserve">
          <source>Unicode class name Nl</source>
          <target state="translated">유니 코드 클래스 이름 Nl</target>
        </trans-unit>
        <trans-unit id="28ffe84c05cec0dc3739b114fe38f8a3fb57d63f" translate="yes" xml:space="preserve">
          <source>Unicode class name No</source>
          <target state="translated">유니 코드 클래스 이름</target>
        </trans-unit>
        <trans-unit id="bb12ba9fbd3e944a941d012e86925936f79a48c5" translate="yes" xml:space="preserve">
          <source>Unicode class name Pc</source>
          <target state="translated">유니 코드 클래스 이름 PC</target>
        </trans-unit>
        <trans-unit id="dada06bf3d256da032e8908335f13d97780f3d0c" translate="yes" xml:space="preserve">
          <source>Unicode class name Pd</source>
          <target state="translated">유니 코드 클래스 이름 Pd</target>
        </trans-unit>
        <trans-unit id="e08de76244bc859ba321359491b2da73e5b54691" translate="yes" xml:space="preserve">
          <source>Unicode class name Pe</source>
          <target state="translated">유니 코드 클래스 이름 Pe</target>
        </trans-unit>
        <trans-unit id="191101182f43593d205c8236568227940b038f36" translate="yes" xml:space="preserve">
          <source>Unicode class name Pf</source>
          <target state="translated">유니 코드 클래스 이름 Pf</target>
        </trans-unit>
        <trans-unit id="622e59907d49460cc17820d3f16e7a117f8f06df" translate="yes" xml:space="preserve">
          <source>Unicode class name Pi</source>
          <target state="translated">유니 코드 클래스 이름 Pi</target>
        </trans-unit>
        <trans-unit id="618ab0b4b4f9e899becb46d99b1357c37261597f" translate="yes" xml:space="preserve">
          <source>Unicode class name Po</source>
          <target state="translated">유니 코드 클래스 이름 Po</target>
        </trans-unit>
        <trans-unit id="3a5703fbb3b35a1f0d1c4dced5595851e06e7782" translate="yes" xml:space="preserve">
          <source>Unicode class name Ps</source>
          <target state="translated">유니 코드 클래스 이름 Ps</target>
        </trans-unit>
        <trans-unit id="9f31bae151f1750d348cdf7431761fc5e7559676" translate="yes" xml:space="preserve">
          <source>Unicode class name Sc</source>
          <target state="translated">유니 코드 클래스 이름 Sc</target>
        </trans-unit>
        <trans-unit id="6c3a452cd52ef3686f1a88ac30c6c9397c36a3ce" translate="yes" xml:space="preserve">
          <source>Unicode class name Sk</source>
          <target state="translated">유니 코드 클래스 이름 Sk</target>
        </trans-unit>
        <trans-unit id="f6ac846a3277fa09681d85e6e23d0a1ed9fde8b3" translate="yes" xml:space="preserve">
          <source>Unicode class name Sm</source>
          <target state="translated">유니 코드 클래스 이름 Sm</target>
        </trans-unit>
        <trans-unit id="09cf917800ba8520cc116aef75034b69d65e2e08" translate="yes" xml:space="preserve">
          <source>Unicode class name So</source>
          <target state="translated">유니 코드 클래스 이름</target>
        </trans-unit>
        <trans-unit id="819122709f4d6adb563e24a78a0c08ae91bcbf68" translate="yes" xml:space="preserve">
          <source>Unicode class name Zl</source>
          <target state="translated">유니 코드 클래스 이름 Zl</target>
        </trans-unit>
        <trans-unit id="5b4394a308af0f2f195f6a4272258df6781dc3a7" translate="yes" xml:space="preserve">
          <source>Unicode class name Zp</source>
          <target state="translated">유니 코드 클래스 이름 Zp</target>
        </trans-unit>
        <trans-unit id="3060d16c244459c61fc281c4a14b1442cc153e09" translate="yes" xml:space="preserve">
          <source>Unicode class name Zs</source>
          <target state="translated">유니 코드 클래스 이름 Zs</target>
        </trans-unit>
        <trans-unit id="7c6c87ae2a3a018f5f70c5e8ea8ee1a071022542" translate="yes" xml:space="preserve">
          <source>Unicode compliant line breaking and text rendering</source>
          <target state="translated">유니 코드 호환 줄 바꿈 및 텍스트 렌더링</target>
        </trans-unit>
        <trans-unit id="604139570f57fbe02bf36179d6d21b7eb5feae65" translate="yes" xml:space="preserve">
          <source>Unicode compliant text segmentation (&lt;a href=&quot;qtextboundaryfinder&quot;&gt;QTextBoundaryFinder&lt;/a&gt;)</source>
          <target state="translated">유니 코드 호환 텍스트 세그먼트 화 ( &lt;a href=&quot;qtextboundaryfinder&quot;&gt;QTextBoundaryFinder&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="9de4169f5152301efc38458211ca7a34be2327d2" translate="yes" xml:space="preserve">
          <source>Unicode has a certain number of code points that are classified as &quot;non-characters:&quot; that is, they can be used for internal purposes in applications but cannot be used for text interchange. Those are the last two entries each Unicode Plane ([0xfffe..0xffff], [0x1fffe..0x1ffff], etc.) as well as the entries in range [0xfdd0..0xfdef].</source>
          <target state="translated">유니 코드에는 &quot;비 문자&quot;로 분류되는 특정 수의 코드 포인트가 있습니다. 즉, 응용 프로그램에서 내부 용으로 사용할 수 있지만 텍스트 교환에는 사용할 수 없습니다. 이것들은 각 유니 코드 평면 ([0xfffe..0xffff], [0x1fffe..0x1ffff] 등)과 [0xfdd0..0xfdef] 범위의 항목 인 마지막 두 항목입니다.</target>
        </trans-unit>
        <trans-unit id="45684b5c7cabf84abcb46c2f7f8dd2bf642166e1" translate="yes" xml:space="preserve">
          <source>Unicode in Qt</source>
          <target state="translated">Qt의 유니 코드</target>
        </trans-unit>
        <trans-unit id="56a1a8b3eaac70cade8499323e40bc108dfcb36c" translate="yes" xml:space="preserve">
          <source>Unicode properties support</source>
          <target state="translated">유니 코드 속성 지원</target>
        </trans-unit>
        <trans-unit id="465d060e15f45fd6bc5f4060ec89e6cf322ad7ee" translate="yes" xml:space="preserve">
          <source>Unicode support was introduced in PostgreSQL version 7.1 and it will only work if both the server and the client library have been compiled with multibyte support. More information about how to set up a multibyte enabled PostgreSQL server can be found in the PostgreSQL Administrator Guide, Chapter 5.</source>
          <target state="translated">유니 코드 지원은 PostgreSQL 버전 7.1에서 도입되었으며 서버와 클라이언트 라이브러리가 모두 멀티 바이트 지원으로 컴파일 된 경우에만 작동합니다. 멀티 바이트 활성화 PostgreSQL 서버 설정 방법에 대한 자세한 내용은 PostgreSQL 관리자 안내서, 5 장을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c62c13cb99c22a920a8da28e378ed63c85ab2cc7" translate="yes" xml:space="preserve">
          <source>Unicode-aware UI controls.</source>
          <target state="translated">유니 코드 인식 UI 컨트롤.</target>
        </trans-unit>
        <trans-unit id="135cd3bc7c476c4107114b7dfec21d4b3429b97c" translate="yes" xml:space="preserve">
          <source>Unified view on UTF-16 strings with a read-only subset of the QString API</source>
          <target state="translated">QString API의 읽기 전용 서브 세트가있는 UTF-16 문자열에 대한 통합보기</target>
        </trans-unit>
        <trans-unit id="84c0741b768908b65554852ab185ffec58ea702c" translate="yes" xml:space="preserve">
          <source>Uniform color.</source>
          <target state="translated">균일 한 색상.</target>
        </trans-unit>
        <trans-unit id="202fcf4145dc5ccb3711160b45cc12c327a561cf" translate="yes" xml:space="preserve">
          <source>UniformAnimator (QML type)</source>
          <target state="translated">UniformAnimator (QML 유형)</target>
        </trans-unit>
        <trans-unit id="5b28e98c5466596907d0d27bd1553a98db9169f5" translate="yes" xml:space="preserve">
          <source>UniformAnimator QML Type</source>
          <target state="translated">UniformAnimator QML 유형</target>
        </trans-unit>
        <trans-unit id="9f0cd18837e5f8ec53fb2430e86226749e2dd90f" translate="yes" xml:space="preserve">
          <source>UniformAnimator.uniform</source>
          <target state="translated">UniformAnimator.uniform</target>
        </trans-unit>
        <trans-unit id="b35d07e2b4e51db1dc0af057d64b04e781d890a8" translate="yes" xml:space="preserve">
          <source>Uniforms from QML properties</source>
          <target state="translated">QML 속성의 유니폼</target>
        </trans-unit>
        <trans-unit id="8ab92fe7e6096435f4c087a6a683e1110a1d340d" translate="yes" xml:space="preserve">
          <source>Uninitialize the given</source>
          <target state="translated">주어진 초기화를 해제하십시오</target>
        </trans-unit>
        <trans-unit id="b539d7c1c8d889e69794ce3102b5978a0cc4f8c9" translate="yes" xml:space="preserve">
          <source>Union ItemChangeData is declared in class &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt;.</source>
          <target state="translated">Union ItemChangeData는 클래스 &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem에&lt;/a&gt; 선언되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9a4100ea50a71e886ef84da0972951f343cc100" translate="yes" xml:space="preserve">
          <source>Unique id of this Trace.</source>
          <target state="translated">이 추적의 고유 ID입니다.</target>
        </trans-unit>
        <trans-unit id="463610ca2657cfa2ecb71e73edc8d4b40e94ab14" translate="yes" xml:space="preserve">
          <source>Unique name identifying the geometry.</source>
          <target state="translated">Unique name identifying the geometry.</target>
        </trans-unit>
        <trans-unit id="e0f81c75b6fc32888adddd1226022d81551c4a17" translate="yes" xml:space="preserve">
          <source>Unique name identifying the geometry. This becomes the source path for the geometry. If multiple instances from the same geometry class are used, each of them must have their own unique name. Otherwise, geometry with same name will override the others. Geometry can be shared either by setting the geometry parameter for a model or using the name of the geometry as source parameter for the model.</source>
          <target state="translated">Unique name identifying the geometry. This becomes the source path for the geometry. If multiple instances from the same geometry class are used, each of them must have their own unique name. Otherwise, geometry with same name will override the others. Geometry can be shared either by setting the geometry parameter for a model or using the name of the geometry as source parameter for the model.</target>
        </trans-unit>
        <trans-unit id="048e44b2b22d2cd4f1487a297b043020b33aa11a" translate="yes" xml:space="preserve">
          <source>Uniquely identifies a &lt;a href=&quot;qt3dcore-qnode&quot;&gt;QNode&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qt3dcore-qnode&quot;&gt;QNode를&lt;/a&gt; 고유하게 식별합니다 . &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d56aa98473a39974b2ccacd60e1d7e90e9135620" translate="yes" xml:space="preserve">
          <source>Uniquely identifies a &lt;a href=&quot;qt3dcore-qnode&quot;&gt;QNode&lt;/a&gt;. &lt;a href=&quot;qt3dcore-qnodeid#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qt3dcore-qnode&quot;&gt;QNode를&lt;/a&gt; 고유하게 식별합니다 . &lt;a href=&quot;qt3dcore-qnodeid#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4acc50bf6c0a0ef5733002a45ed7568dc5102e22" translate="yes" xml:space="preserve">
          <source>Uniquely identifies a QNode</source>
          <target state="translated">QNode를 고유하게 식별</target>
        </trans-unit>
        <trans-unit id="438d23452047f4defac8e18aecae37372fcea335" translate="yes" xml:space="preserve">
          <source>Unit Testing</source>
          <target state="translated">단위 테스트</target>
        </trans-unit>
        <trans-unit id="c611c9be23218bf91d617b5dce647c1bd42033be" translate="yes" xml:space="preserve">
          <source>Unit tests are available to help in debugging new plugins.</source>
          <target state="translated">새 플러그인 디버깅에 도움이되는 단위 테스트가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="bceba8e72cb70a97b5dd99755b4f078d7589f50c" translate="yes" xml:space="preserve">
          <source>Unites this path with</source>
          <target state="translated">이 경로를</target>
        </trans-unit>
        <trans-unit id="bcd718a4579eb2e51504ab4f4ddfc8a12519d97d" translate="yes" xml:space="preserve">
          <source>Unites this rectangle with the given</source>
          <target state="translated">이 사각형을 주어진 사각형과 결합</target>
        </trans-unit>
        <trans-unit id="7a5a0a63c362a3003fcb6acf0237f40cc30e834b" translate="yes" xml:space="preserve">
          <source>Units of Unicode characters that make up what the user thinks of as a character or basic unit of the language are here called Grapheme clusters. The two unicode characters 'A' + diaeresis do for example form one grapheme cluster as the user thinks of them as one character, yet it is in this case represented by two unicode code points (see &lt;a href=&quot;http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries&quot;&gt;http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries&lt;/a&gt;).</source>
          <target state="translated">사용자가 언어의 문자 또는 기본 단위로 생각하는 것을 구성하는 유니 코드 문자 단위를 여기에서 Grapheme 클러스터라고합니다. 두 개의 유니 코드 문자 'A'+ 분음은 예를 들어 사용자가 하나의 문자로 생각할 때 하나의 그래 핀 클러스터를 형성하지만이 경우 두 개의 유니 코드 코드 포인트로 표시됩니다 ( &lt;a href=&quot;http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundaries&quot;&gt;http://www.unicode.org/ reports / tr29 / # Grapheme_Cluster_Boundaries&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="1c53b4d73c234ebbba946d4fc47af3cbc02af641" translate="yes" xml:space="preserve">
          <source>Unity (1) may be viewed as a third step size. &lt;a href=&quot;qabstractslider#value-prop&quot;&gt;setValue&lt;/a&gt;() lets you set the current value to any integer in the allowed range, not just &lt;a href=&quot;qabstractslider#minimum-prop&quot;&gt;minimum&lt;/a&gt;() +</source>
          <target state="translated">유니티 (1)는 제 3 단계 크기로 볼 수있다. &lt;a href=&quot;qabstractslider#value-prop&quot;&gt;setValue&lt;/a&gt; ()를 사용하면 현재 값을 &lt;a href=&quot;qabstractslider#minimum-prop&quot;&gt;최소값&lt;/a&gt; () +가 아니라 허용 된 범위의 정수로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d32e3d283435474dbb3282b52476c4345e4ac0b2" translate="yes" xml:space="preserve">
          <source>Universal Section</source>
          <target state="translated">유니버설 섹션</target>
        </trans-unit>
        <trans-unit id="60c6c75d44eaa7cb88962d885f159709ac994fc9" translate="yes" xml:space="preserve">
          <source>Universal Selector</source>
          <target state="translated">유니버셜 셀렉터</target>
        </trans-unit>
        <trans-unit id="a9cec691e62599fb2d3638b1160b745f45f9b575" translate="yes" xml:space="preserve">
          <source>Universal Style</source>
          <target state="translated">유니버설 스타일</target>
        </trans-unit>
        <trans-unit id="9ed5277ae4741d0fd9ab3db2ecf0ab9301cdaa7d" translate="yes" xml:space="preserve">
          <source>Universal Style.Universal.accent</source>
          <target state="translated">유니버설 스타일. 유니버설. 액센트</target>
        </trans-unit>
        <trans-unit id="1255c20d9fdc02d9486f05c2fecd5942e91afdb9" translate="yes" xml:space="preserve">
          <source>Universal Style.Universal.background</source>
          <target state="translated">유니버설 스타일. 유니버설. 배경</target>
        </trans-unit>
        <trans-unit id="8fb8754831c56218b762ff64d67ac73e42c05b70" translate="yes" xml:space="preserve">
          <source>Universal Style.Universal.foreground</source>
          <target state="translated">유니버설 스타일. 범용. 전경</target>
        </trans-unit>
        <trans-unit id="b1fb38164e11079fe75c65e4e308e9f3b1c5609f" translate="yes" xml:space="preserve">
          <source>Universal Style.Universal.theme</source>
          <target state="translated">유니버설 스타일. 유니버설 테마</target>
        </trans-unit>
        <trans-unit id="79fcc76c69aad6360736cdc2890abe7554b6f9c0" translate="yes" xml:space="preserve">
          <source>Universal Style.color()</source>
          <target state="translated">유니버설 스타일. 색상 ()</target>
        </trans-unit>
        <trans-unit id="15dd92f231c8409d0f09d681de1f1ee2278868e8" translate="yes" xml:space="preserve">
          <source>Universal Windows Platform</source>
          <target state="translated">범용 Windows 플랫폼</target>
        </trans-unit>
        <trans-unit id="3f6ecc62a33174350cf814e8930b817be31f315e" translate="yes" xml:space="preserve">
          <source>Universal Windows Platform (UWP)</source>
          <target state="translated">Universal Windows Platform (UWP)</target>
        </trans-unit>
        <trans-unit id="0a054657477bf19b340239ef67a3163fcf6bbe22" translate="yes" xml:space="preserve">
          <source>Universal Windows Platform (UWP) support</source>
          <target state="translated">Universal Windows Platform (UWP) support</target>
        </trans-unit>
        <trans-unit id="7e7f05b8d76c9054eda824afe2ab5561e06730b0" translate="yes" xml:space="preserve">
          <source>Universal Windows Platform 10</source>
          <target state="translated">범용 Windows 플랫폼 10</target>
        </trans-unit>
        <trans-unit id="fb272de0d94906bb244b24db7c9d9c9a2fc30dd6" translate="yes" xml:space="preserve">
          <source>Universal Windows Platforms include Windows 10, Windows 10 IoT devices, Xbox One, and HoloLens.</source>
          <target state="translated">범용 Windows 플랫폼에는 Windows 10, Windows 10 IoT 장치, Xbox One 및 HoloLens가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="d9104c78f4b025f0539b8f4b121e931beb51bf8e" translate="yes" xml:space="preserve">
          <source>Universal.accent : color</source>
          <target state="translated">Universal.accent : 색상</target>
        </trans-unit>
        <trans-unit id="11efa8acc6deaae2e47ab31e7a02df3d8e484ca1" translate="yes" xml:space="preserve">
          <source>Universal.background : color</source>
          <target state="translated">Universal.background : 색상</target>
        </trans-unit>
        <trans-unit id="8fe7028f8e7796115b6568a27b48b522f5071a3c" translate="yes" xml:space="preserve">
          <source>Universal.foreground : color</source>
          <target state="translated">Universal.foreground : 색상</target>
        </trans-unit>
        <trans-unit id="9c666d25e14d9c6b4a6b3b8ec6ed8376d0fb2ff3" translate="yes" xml:space="preserve">
          <source>Universal.theme : enumeration</source>
          <target state="translated">Universal.theme : 열거</target>
        </trans-unit>
        <trans-unit id="cecc0d8500754b34f5bd7f11dfabb25c3a770aaf" translate="yes" xml:space="preserve">
          <source>Unix</source>
          <target state="translated">Unix</target>
        </trans-unit>
        <trans-unit id="23057e10781a62c4f63b11ac426a8b3e07822a00" translate="yes" xml:space="preserve">
          <source>Unix Signal Handlers</source>
          <target state="translated">유닉스 신호 처리기</target>
        </trans-unit>
        <trans-unit id="be05786a6be919edb17d41a7398c4dceb6b5c975" translate="yes" xml:space="preserve">
          <source>Unix file descriptor passing is not available in all D-Bus connections. This feature is present with D-Bus library and bus daemon version 1.4 and upwards on Unix systems. Qt D-Bus automatically enables the feature if such a version was found at compile-time and run-time.</source>
          <target state="translated">모든 D- 버스 연결에서 유닉스 파일 디스크립터 전달을 사용할 수있는 것은 아닙니다. 이 기능은 Unix 시스템에서 D-Bus 라이브러리 및 버스 데몬 버전 1.4 이상에서 제공됩니다. Qt D-Bus는 이러한 버전이 컴파일 타임과 런타임에 발견되면 자동으로 기능을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="175c4d43d527957555113e79855152912a57251f" translate="yes" xml:space="preserve">
          <source>Unix handles symlinks transparently. Opening a symbolic link effectively opens the &lt;a href=&quot;qfileinfo#symLinkTarget&quot;&gt;link's target&lt;/a&gt;.</source>
          <target state="translated">Unix handles symlinks transparently. Opening a symbolic link effectively opens the &lt;a href=&quot;qfileinfo#symLinkTarget&quot;&gt;link's target&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="378f9d447de7f9fff35b8eccd2b6333dd32985f9" translate="yes" xml:space="preserve">
          <source>Unix, BSD</source>
          <target state="translated">유닉스, BSD</target>
        </trans-unit>
        <trans-unit id="2c014b33a1a11a4a986bad5ad366963382e0ffcf" translate="yes" xml:space="preserve">
          <source>Unix-specific code, destination variable is not &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; and/or is used to interface with non-Qt APIs</source>
          <target state="translated">유닉스 고유 코드, 대상 변수가 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 이 아니 거나 Qt가 아닌 API와 인터페이스하는 데 사용됨</target>
        </trans-unit>
        <trans-unit id="03f4e1d8f6320f14c5ff11542b0668c108060cb8" translate="yes" xml:space="preserve">
          <source>Unix/Linux</source>
          <target state="translated">Unix/Linux</target>
        </trans-unit>
        <trans-unit id="8d5fff79c3b62e9941b4383a334f964f3e46c0e1" translate="yes" xml:space="preserve">
          <source>Unix/X11</source>
          <target state="translated">Unix/X11</target>
        </trans-unit>
        <trans-unit id="49384d4099fc11e183e893e1822e2e492cd63c11" translate="yes" xml:space="preserve">
          <source>Unix: &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; &quot;owns&quot; the shared memory segment. When the last thread or process that has an instance of &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; attached to a particular shared memory segment detaches from the segment by destroying its instance of &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt;, the Unix kernel release the shared memory segment. But if that last thread or process crashes without running the &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; destructor, the shared memory segment survives the crash.</source>
          <target state="translated">유닉스 : &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; 는 공유 메모리 세그먼트를 &quot;소유&quot;합니다. 인스턴스가있는 마지막 스레드 또는 프로세스 때 &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory는&lt;/a&gt; 그것의 인스턴스 파괴하여 세그먼트에서 특정한 공유 메모리 세그먼트를 이탈 (분리)에 부착 &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory를&lt;/a&gt; 유닉스는 공유 메모리 영역을 해제 커널. 그러나 &lt;a href=&quot;qsharedmemory&quot;&gt;QSharedMemory&lt;/a&gt; 소멸자 를 실행하지 않고 마지막 스레드 또는 프로세스가 충돌 하면 공유 메모리 세그먼트가 충돌 후에도 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="0afc227eba032d3797688483f9984319af57671e" translate="yes" xml:space="preserve">
          <source>Unix: QSharedMemory &quot;owns&quot; the shared memory segment. When the last thread or process that has an instance of QSharedMemory attached to a particular shared memory segment detaches from the segment by destroying its instance of QSharedMemory, the Unix kernel release the shared memory segment. But if that last thread or process crashes without running the QSharedMemory destructor, the shared memory segment survives the crash.</source>
          <target state="translated">Unix: QSharedMemory &quot;owns&quot; the shared memory segment. When the last thread or process that has an instance of QSharedMemory attached to a particular shared memory segment detaches from the segment by destroying its instance of QSharedMemory, the Unix kernel release the shared memory segment. But if that last thread or process crashes without running the QSharedMemory destructor, the shared memory segment survives the crash.</target>
        </trans-unit>
        <trans-unit id="e4adc16fe3a073041e2ced4095f3b20adf9c9fff" translate="yes" xml:space="preserve">
          <source>Unknown baud. This value is obsolete. It is provided to keep old source code working. We strongly advise against using it in new code.</source>
          <target state="translated">알 수없는 보드 이 값은 더 이상 사용되지 않습니다. 이전 소스 코드가 계속 작동하도록하기 위해 제공됩니다. 새로운 코드에서는 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="142aec0abd1141473a1a6c241d5b96a43880a860" translate="yes" xml:space="preserve">
          <source>Unknown component type</source>
          <target state="translated">알 수없는 구성 요소 유형</target>
        </trans-unit>
        <trans-unit id="e5fd9aa24c9417e7332e6f25936ae2a6ec8f1524" translate="yes" xml:space="preserve">
          <source>Unknown error</source>
          <target state="translated">알수없는 오류</target>
        </trans-unit>
        <trans-unit id="c53129004bf315c94a49905134180a2b30dbce54" translate="yes" xml:space="preserve">
          <source>Unknown error occurred.</source>
          <target state="translated">알 수없는 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="9d638c8e1d6431506e5cd0b560d840a87977ba75" translate="yes" xml:space="preserve">
          <source>Unknown error, no better enum available.</source>
          <target state="translated">알 수없는 오류, 더 나은 열거 형이 없습니다.</target>
        </trans-unit>
        <trans-unit id="3716d64264f900396f1af7fc16d7b86fdf992a50" translate="yes" xml:space="preserve">
          <source>Unknown error.</source>
          <target state="translated">알수없는 오류.</target>
        </trans-unit>
        <trans-unit id="563fa578e234a984bd92a13494c6f0d99daf68bb" translate="yes" xml:space="preserve">
          <source>Unknown flow control. This value is obsolete. It is provided to keep old source code working. We strongly advise against using it in new code.</source>
          <target state="translated">알 수없는 흐름 제어. 이 값은 더 이상 사용되지 않습니다. 이전 소스 코드가 계속 작동하도록하기 위해 제공됩니다. 새로운 코드에서는 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="82232a631efc57d779bde9c4b0a27c4e9e38b3e5" translate="yes" xml:space="preserve">
          <source>Unknown number of bits. This value is obsolete. It is provided to keep old source code working. We strongly advise against using it in new code.</source>
          <target state="translated">알 수없는 비트 수 이 값은 더 이상 사용되지 않습니다. 이전 소스 코드가 계속 작동하도록하기 위해 제공됩니다. 새로운 코드에서는 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b3c8ac188a0d1e5a02551150caee5540a4271b8b" translate="yes" xml:space="preserve">
          <source>Unknown number of stop bits. This value is obsolete. It is provided to keep old source code working. We strongly advise against using it in new code.</source>
          <target state="translated">정지 비트 수를 알 수 없습니다. 이 값은 더 이상 사용되지 않습니다. 이전 소스 코드가 계속 작동하도록하기 위해 제공됩니다. 새로운 코드에서는 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="9a28a8d48271f4c44416af09895dfc1e2aeab319" translate="yes" xml:space="preserve">
          <source>Unknown or internal error occurred.</source>
          <target state="translated">알 수 없거나 내부 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="90d3fab27ce2913b14b8d91475d90b4dd8486c86" translate="yes" xml:space="preserve">
          <source>Unknown or unspecified version.</source>
          <target state="translated">알 수 없거나 지정되지 않은 버전.</target>
        </trans-unit>
        <trans-unit id="880db099e07b29c0f65f2b45e8eaafcaa48a5d99" translate="yes" xml:space="preserve">
          <source>Unknown parity. This value is obsolete. It is provided to keep old source code working. We strongly advise against using it in new code.</source>
          <target state="translated">알 수없는 패리티 이 값은 더 이상 사용되지 않습니다. 이전 소스 코드가 계속 작동하도록하기 위해 제공됩니다. 새로운 코드에서는 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="86888526fa52dc9891fd04e25741831c54d3afe6" translate="yes" xml:space="preserve">
          <source>Unknown reason</source>
          <target state="translated">알 수없는 이유</target>
        </trans-unit>
        <trans-unit id="07012bb48cea7b1e88337c2d9ff5ebc4d8bbd1d8" translate="yes" xml:space="preserve">
          <source>Unknown reason or not interrupted.</source>
          <target state="translated">알 수없는 이유 또는 중단되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="094c587c87542bda8809b1051f148ab6c191ee59" translate="yes" xml:space="preserve">
          <source>Unknown request type.</source>
          <target state="translated">알 수없는 요청 유형</target>
        </trans-unit>
        <trans-unit id="d77333b92084791a2810cb1e9f00624cd56b0516" translate="yes" xml:space="preserve">
          <source>Unknown state.</source>
          <target state="translated">알 수없는 상태입니다.</target>
        </trans-unit>
        <trans-unit id="8a040d74dd97425864fdf9a7af49f7e0a1de3c5d" translate="yes" xml:space="preserve">
          <source>Unknown, or a user defined size.</source>
          <target state="translated">알 수 없거나 사용자 정의 크기입니다.</target>
        </trans-unit>
        <trans-unit id="b76d293e11d35a74f9b9e6139e64f821dfd8a2dd" translate="yes" xml:space="preserve">
          <source>UnknownRole - the role is unknown or undefined.</source>
          <target state="translated">UnknownRole-역할을 알 수 없거나 정의되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="4ed769392307f0adf5af5e4ee014a5b3778f9a4e" translate="yes" xml:space="preserve">
          <source>UnknownStatus - the status of the media is unknown.</source>
          <target state="translated">UnknownStatus-미디어의 상태를 알 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="fc9481ccc42310377001eaf4b65f0ba7f43291d9" translate="yes" xml:space="preserve">
          <source>Unless</source>
          <target state="translated">Unless</target>
        </trans-unit>
        <trans-unit id="0a6deca0d0b5e44c32180a5e60a83b034ccdc600" translate="yes" xml:space="preserve">
          <source>Unless &lt;a href=&quot;qlibrary#unload&quot;&gt;unload&lt;/a&gt;() was called explicitly, the library stays in memory until the application terminates.</source>
          <target state="translated">&lt;a href=&quot;qlibrary#unload&quot;&gt;unload&lt;/a&gt; ()가 명시 적으로 호출 되지 않으면 응용 프로그램이 종료 될 때까지 라이브러리는 메모리에 남아 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbaf478e8d52d2e9b4eee7e00cef1c693003c876" translate="yes" xml:space="preserve">
          <source>Unless &lt;a href=&quot;qnetworkreply#close&quot;&gt;close&lt;/a&gt;() or &lt;a href=&quot;qnetworkreply#abort&quot;&gt;abort&lt;/a&gt;() have been called, the reply will be still be opened for reading, so the data can be retrieved by calls to &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() or &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;(). In particular, if no calls to &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;() were made as a result of &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;(), a call to &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;() will retrieve the full contents in a &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qnetworkreply#close&quot;&gt;close&lt;/a&gt; () 또는 &lt;a href=&quot;qnetworkreply#abort&quot;&gt;abort&lt;/a&gt; ()가 호출 되지 않는 한 , 읽기 위해 응답이 여전히 열려 있으므로 &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt; () 또는 &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt; () 에 대한 호출로 데이터를 검색 할 수 있습니다 . 특히 &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt; () 의 결과로 &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt; ()를 호출하지 않은 경우 &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt; ()을 호출 하면 &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; 의 전체 내용이 검색됩니다 .</target>
        </trans-unit>
        <trans-unit id="9fcff84e0f0775cd94285f1bd35a6ed81b7fc321" translate="yes" xml:space="preserve">
          <source>Unless &lt;a href=&quot;qpluginloader#unload&quot;&gt;unload&lt;/a&gt;() was called explicitly, the plugin stays in memory until the application terminates.</source>
          <target state="translated">&lt;a href=&quot;qpluginloader#unload&quot;&gt;unload&lt;/a&gt; ()가 명시 적으로 호출 되지 않으면 플러그인은 응용 프로그램이 종료 될 때까지 메모리에 남아 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbb69bb14b4632d2ccf1971fe83fdced7876ac96" translate="yes" xml:space="preserve">
          <source>Unless an active &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt;&lt;a href=&quot;qgeoareamonitorinfo#isPersistent&quot;&gt;isPersistent()&lt;/a&gt; an active &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; will be stopped once the current application terminates.</source>
          <target state="translated">활성 &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo &lt;/a&gt;&lt;a href=&quot;qgeoareamonitorinfo#isPersistent&quot;&gt;isPersistent ()&lt;/a&gt; 가 &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;아니면&lt;/a&gt; 현재 응용 프로그램이 종료되면 활성 QGeoAreaMonitorInfo 가 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="a96693335dda9ebfd70b6b898ab43a0817546932" translate="yes" xml:space="preserve">
          <source>Unless canceled, calls &lt;a href=&quot;qsemaphore#release&quot;&gt;QSemaphore::release&lt;/a&gt;() with the arguments provided to the constructor, or by the last move assignment.</source>
          <target state="translated">취소하지 않으면 생성자에 제공된 인수 또는 마지막 이동 지정으로 &lt;a href=&quot;qsemaphore#release&quot;&gt;QSemaphore :: release&lt;/a&gt; ()를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="681c291d642420ca2c5a04563e0163f0cf859d9a" translate="yes" xml:space="preserve">
          <source>Unless explicitly overridden, the content height is automatically calculated based on the implicit height of the items in the container.</source>
          <target state="translated">명시 적으로 재정의되지 않는 한 내용 높이는 컨테이너에있는 항목의 암시 적 높이를 기준으로 자동 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="34ac86d7d7c3cd99d9f7088696cb8f39b336ae92" translate="yes" xml:space="preserve">
          <source>Unless explicitly overridden, the content width is automatically calculated based on the implicit width of the items in the container.</source>
          <target state="translated">명시 적으로 재정의되지 않는 한 내용 너비는 컨테이너에있는 항목의 암시 적 너비를 기준으로 자동 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="21c45bf113d588b4183de403c994774aece2c31a" translate="yes" xml:space="preserve">
          <source>Unless explicitly set this returns the default value of the current style. This size is the maximum size that icons can have; icons of smaller size are not scaled up.</source>
          <target state="translated">명시 적으로 설정하지 않으면 현재 스타일의 기본값이 반환됩니다. 이 크기는 아이콘이 가질 수있는 최대 크기입니다. 더 작은 크기의 아이콘은 확대되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2f98668f3b416cbad4e4574cffa978702513f74a" translate="yes" xml:space="preserve">
          <source>Unless explicitly set, the window is automatically resolved by iterating the QML parent objects until a &lt;a href=&quot;https://doc.qt.io/qt-6.0/window-qmlmodule.html&quot;&gt;Window&lt;/a&gt; or an &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; that has a window is found.</source>
          <target state="translated">명시 적으로 설정하지 않는 한, &lt;a href=&quot;https://doc.qt.io/qt-6.0/window-qmlmodule.html&quot;&gt;창&lt;/a&gt; 또는 창이 있는 &lt;a href=&quot;qml-qtquick-item&quot;&gt;항목&lt;/a&gt; 을 찾을 때까지 QML 상위 개체를 반복하여 창을 자동으로 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="ec9b806bc596a400ab2ea46b4795644ae389e598" translate="yes" xml:space="preserve">
          <source>Unless explicitly set, the window is automatically resolved by iterating the QML parent objects until a &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;Window&lt;/a&gt; or an &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; that has a window is found.</source>
          <target state="translated">명시 적으로 설정하지 않으면 &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;창&lt;/a&gt; 또는 창이 있는 &lt;a href=&quot;qml-qtquick-item&quot;&gt;항목&lt;/a&gt; 을 찾을 때까지 QML 상위 오브젝트를 반복하여 창을 자동으로 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="1fb6355a2afc6c079c8e6c20438622bfac1966c6" translate="yes" xml:space="preserve">
          <source>Unless explicitly set, this property follows the value of &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#pressed-signal&quot;&gt;pressed&lt;/a&gt;. To return to the default value, set this property to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">명시 적으로 설정하지 않으면이 속성은 &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#pressed-signal&quot;&gt;pressed&lt;/a&gt; 의 값을 따릅니다 . 기본값으로 돌아가려면이 특성을 &lt;code&gt;undefined&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="5159bd3d222d8d6d7df23ed696dc7c63654924ac" translate="yes" xml:space="preserve">
          <source>Unless explicitly set, this property follows the value of &lt;a href=&quot;qml-qtquick-controls2-popup#modal-prop&quot;&gt;modal&lt;/a&gt;. To return to the default value, set this property to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">명시 적으로 설정하지 않으면이 속성은 &lt;a href=&quot;qml-qtquick-controls2-popup#modal-prop&quot;&gt;modal&lt;/a&gt; 값을 따릅니다 . 기본값으로 돌아가려면이 특성을 &lt;code&gt;undefined&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="c9319138c315f1cfbf4ce4ead0170f492e8c152f" translate="yes" xml:space="preserve">
          <source>Unless explicitly set, this property is &lt;code&gt;true&lt;/code&gt; when either &lt;code&gt;pressed&lt;/code&gt; or &lt;code&gt;popup.visible&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;. To return to the default value, set this property to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">명시 적으로 설정하지 않는 한,이 속성은 &lt;code&gt;true&lt;/code&gt; 어느 때 &lt;code&gt;pressed&lt;/code&gt; 또는 &lt;code&gt;popup.visible&lt;/code&gt; 이 있다 &lt;code&gt;true&lt;/code&gt; . 기본값으로 돌아가려면이 특성을 &lt;code&gt;undefined&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="10d4e45ac33b353e00ef4bcc8d9bcbfd96393124" translate="yes" xml:space="preserve">
          <source>Unless specified otherwise, Qt Sensors uses the &lt;a href=&quot;http://en.wikipedia.org/wiki/Cartesian_coordinate_system&quot;&gt;Right Hand Cartesian coordinate system&lt;/a&gt;.</source>
          <target state="translated">별도로 지정하지 않는 한 Qt 센서는 &lt;a href=&quot;http://en.wikipedia.org/wiki/Cartesian_coordinate_system&quot;&gt;오른쪽 직교 좌표계를 사용합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="71422bc5c9748f3c33b0d36d50415a87a9eb4f4b" translate="yes" xml:space="preserve">
          <source>Unless stated otherwise, the commands in this page are for the Linux platforms. On macOS and on Windows, the &lt;code&gt;PATH&lt;/code&gt; and directory structure are different, therefore the commands will vary. Also, on Windows systems, the configure script is called</source>
          <target state="translated">달리 명시되지 않는 한이 페이지의 명령은 Linux 플랫폼 용입니다. macOS 및 Windows에서는 &lt;code&gt;PATH&lt;/code&gt; 및 디렉토리 구조가 다르므로 명령이 다릅니다. 또한 Windows 시스템에서 구성 스크립트는</target>
        </trans-unit>
        <trans-unit id="ca6a8243653174f6c3e53afaf8172742e936a860" translate="yes" xml:space="preserve">
          <source>Unless tagged differently (see above), encoded as Base64url</source>
          <target state="translated">다르게 태그되지 않는 한 (위 참조) Base64url로 인코딩 됨</target>
        </trans-unit>
        <trans-unit id="aa3fa291501b6a87377bdd77d8f68bdbdced158e" translate="yes" xml:space="preserve">
          <source>Unless the current selection mode is &lt;a href=&quot;qabstractitemview#SelectionMode-enum&quot;&gt;NoSelection&lt;/a&gt;, the item is also selected. Note that this function also updates the starting position for any new selections the user performs.</source>
          <target state="translated">현재 선택 모드가 &lt;a href=&quot;qabstractitemview#SelectionMode-enum&quot;&gt;NoSelection&lt;/a&gt; 이 아니면 항목도 선택됩니다. 이 기능은 또한 사용자가 수행하는 새로운 선택의 시작 위치도 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="f22bcc5a536f02294541eb2ecfb1de95bb11a37f" translate="yes" xml:space="preserve">
          <source>Unless the data type contains a comma (e.g., &lt;code&gt;QPair&amp;lt;int, int&amp;gt;&lt;/code&gt;), the variable used for iteration can be defined within the &lt;code&gt;foreach&lt;/code&gt; statement:</source>
          <target state="translated">데이터 유형에 쉼표가 포함되어 있지 않은 경우 (예 : &lt;code&gt;QPair&amp;lt;int, int&amp;gt;&lt;/code&gt; ) 반복에 사용되는 변수는 &lt;code&gt;foreach&lt;/code&gt; 문 에서 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b7db5fed33cb6f4e91f5081d35d999844078aab4" translate="yes" xml:space="preserve">
          <source>Unless the selection mode is &lt;a href=&quot;qabstractitemview#SelectionMode-enum&quot;&gt;NoSelection&lt;/a&gt;, the item is also selected.</source>
          <target state="translated">선택 모드가 &lt;a href=&quot;qabstractitemview#SelectionMode-enum&quot;&gt;NoSelection&lt;/a&gt; 이 아니면 항목도 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="d87ed422b4595ad1995eda1d7581399ff58c9fc3" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt;, STL-style iterators point directly at items. The &lt;a href=&quot;qlist#begin&quot;&gt;begin()&lt;/a&gt; function of a container returns an iterator that points to the first item in the container. The &lt;a href=&quot;qlist#end&quot;&gt;end()&lt;/a&gt; function of a container returns an iterator to the imaginary item one position past the last item in the container. &lt;a href=&quot;qlist#end&quot;&gt;end()&lt;/a&gt; marks an invalid position; it must never be dereferenced. It is typically used in a loop's break condition. If the list is empty, &lt;a href=&quot;qlist#begin&quot;&gt;begin()&lt;/a&gt; equals &lt;a href=&quot;qlist#end&quot;&gt;end()&lt;/a&gt;, so we never execute the loop.</source>
          <target state="translated">&lt;a href=&quot;#java-style-iterators&quot;&gt;Java 스타일 반복자&lt;/a&gt; 와 달리 STL 스타일 반복자는 항목을 직접 가리 킵니다. 컨테이너 의 &lt;a href=&quot;qlist#begin&quot;&gt;begin ()&lt;/a&gt; 함수는 컨테이너의 첫 번째 항목을 가리키는 반복자를 반환합니다. 컨테이너 의 &lt;a href=&quot;qlist#end&quot;&gt;end ()&lt;/a&gt; 함수는 컨테이너의 마지막 항목보다 한 위치 아래의 가상 항목으로 반복자를 반환합니다. &lt;a href=&quot;qlist#end&quot;&gt;end ()&lt;/a&gt; 는 유효하지 않은 위치를 표시합니다. 절대 역 참조되지 않아야합니다. 일반적으로 루프 중단 조건에서 사용됩니다. 리스트가 비어 있으면 &lt;a href=&quot;qlist#begin&quot;&gt;begin ()&lt;/a&gt; 은 &lt;a href=&quot;qlist#end&quot;&gt;end ()&lt;/a&gt; 와 같으므로 루프를 실행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7e15f8387c5c4421f55a7540c18ab2890a54f0f6" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt;, STL-style iterators point directly at items. The &lt;a href=&quot;qlist#begin&quot;&gt;begin()&lt;/a&gt; function of a container returns an iterator that points to the first item in the container. The &lt;a href=&quot;qlist#end&quot;&gt;end()&lt;/a&gt; function of a container returns an iterator to the imaginary item one position past the last item in the container. &lt;a href=&quot;qlist#end&quot;&gt;end()&lt;/a&gt; marks an invalid position; it must never be dereferenced. It is typically used in a loop's break condition. If the list is empty, &lt;a href=&quot;qlist#begin&quot;&gt;begin()&lt;/a&gt; equals &lt;a href=&quot;qlist#end&quot;&gt;end()&lt;/a&gt;, so we never execute the loop.</source>
          <target state="translated">Unlike &lt;a href=&quot;containers#java-style-iterators&quot;&gt;Java-style iterators&lt;/a&gt;, STL-style iterators point directly at items. The &lt;a href=&quot;qlist#begin&quot;&gt;begin()&lt;/a&gt; function of a container returns an iterator that points to the first item in the container. The &lt;a href=&quot;qlist#end&quot;&gt;end()&lt;/a&gt; function of a container returns an iterator to the imaginary item one position past the last item in the container. &lt;a href=&quot;qlist#end&quot;&gt;end()&lt;/a&gt; marks an invalid position; it must never be dereferenced. It is typically used in a loop's break condition. If the list is empty, &lt;a href=&quot;qlist#begin&quot;&gt;begin()&lt;/a&gt; equals &lt;a href=&quot;qlist#end&quot;&gt;end()&lt;/a&gt;, so we never execute the loop.</target>
        </trans-unit>
        <trans-unit id="e54a8af669d8a5937477d1c955863cf861bcb194" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL-Style iterators&lt;/a&gt;, Java-style iterators point</source>
          <target state="translated">&lt;a href=&quot;containers#stl-style-iterators&quot;&gt;STL 스타일 반복기&lt;/a&gt; 와 달리 Java 스타일 반복자는</target>
        </trans-unit>
        <trans-unit id="ba16a239b0007eb66ca00bd5b584c764d0230933" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qabstractsocket#setReadBufferSize&quot;&gt;QAbstractSocket::setReadBufferSize&lt;/a&gt;(), &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; cannot guarantee precision in the read buffer size. That is, &lt;a href=&quot;qiodevice#bytesAvailable&quot;&gt;bytesAvailable&lt;/a&gt;() can return more than</source>
          <target state="translated">달리 &lt;a href=&quot;qabstractsocket#setReadBufferSize&quot;&gt;QAbstractSocket :: setReadBufferSize&lt;/a&gt; (), &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; 수 읽기 버퍼 크기하지 보증 정밀도. 즉 &lt;a href=&quot;qiodevice#bytesAvailable&quot;&gt;bytesAvailable&lt;/a&gt; ()은</target>
        </trans-unit>
        <trans-unit id="2847388e9b350766d1f488e96ee0900aade2d944" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qbytearray#simplified&quot;&gt;simplified&lt;/a&gt;(), trimmed() leaves internal spacing unchanged.</source>
          <target state="translated">&lt;a href=&quot;qbytearray#simplified&quot;&gt;단순화&lt;/a&gt; () 와 달리 trimmed ()는 내부 간격을 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a53b50b4cc2552a1a3a10de48f2ce6b7aea51642" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qbytearray#simplified&quot;&gt;simplified&lt;/a&gt;(), trimmed() leaves internal whitespace alone.</source>
          <target state="translated">&lt;a href=&quot;qbytearray#simplified&quot;&gt;단순화 된&lt;/a&gt; () 과 달리 trimmed ()는 내부 공백 만 남겨 둡니다.</target>
        </trans-unit>
        <trans-unit id="90d5c296b50d315fb4ab8d5fac6502d2e6ab1dfc" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qbytearraymatcher&quot;&gt;QByteArrayMatcher&lt;/a&gt;, this class calculates the internal representation at</source>
          <target state="translated">&lt;a href=&quot;qbytearraymatcher&quot;&gt;QByteArrayMatcher&lt;/a&gt; 와 달리이 클래스는 내부 표현을 계산합니다.</target>
        </trans-unit>
        <trans-unit id="fa01fd1236c8e6bb287e3ae937385d349fdc80bd" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qcborstreamreader#readByteArray&quot;&gt;readByteArray&lt;/a&gt;() and &lt;a href=&quot;qcborstreamreader#readString&quot;&gt;readString&lt;/a&gt;(), this function is not limited by implementation limits of &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; and &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qcborstreamreader#readByteArray&quot;&gt;readByteArray&lt;/a&gt; () 및 &lt;a href=&quot;qcborstreamreader#readString&quot;&gt;readString&lt;/a&gt; ()과 달리이 함수는 &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; 및 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 의 구현 한계에 의해 제한되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7c614288d804ebdd043c7485972948fa1e5f1f76" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;, calling &lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;() is not allowed. &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() replaces it. If &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() was not called and the &lt;a href=&quot;qsavefile&quot;&gt;QSaveFile&lt;/a&gt; instance is destroyed, the temporary file is discarded.</source>
          <target state="translated">&lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; 과 달리 &lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt; () 호출 은 허용되지 않습니다. &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt; ()이이를 대체합니다. 경우 &lt;a href=&quot;qsavefile#commit&quot;&gt;커밋&lt;/a&gt; 호출되지 않은 ()와 &lt;a href=&quot;qsavefile&quot;&gt;QSaveFile의&lt;/a&gt; 인스턴스가 파괴되고, 임시 파일이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="dce40a1655e1e8a5a016d1d5de0e3309bad6130f" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;, calling &lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;() is not allowed. &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() replaces it. If &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() was not called and the QSaveFile instance is destroyed, the temporary file is discarded.</source>
          <target state="translated">Unlike &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt;, calling &lt;a href=&quot;qfiledevice#close&quot;&gt;close&lt;/a&gt;() is not allowed. &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() replaces it. If &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() was not called and the QSaveFile instance is destroyed, the temporary file is discarded.</target>
        </trans-unit>
        <trans-unit id="67bcbdfa4aa5eea40011d8612ec1124b26437101" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; is not an abstract class; you can create instances of a &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; without having to subclass it. This approach is useful for widgets that only serve the purpose of organizing child widgets into a layout.</source>
          <target state="translated">달리 &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; , &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget는&lt;/a&gt; 추상 클래스 아니다; &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget의&lt;/a&gt; 인스턴스 를 서브 클래스 화하지 않고 작성할 수 있습니다 . 이 방법은 자식 위젯을 레이아웃으로 구성하는 목적으로 만 사용되는 위젯에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5ffd9331696acac343cbdde2bbdf877471bea2aa" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, QGraphicsWidget is not an abstract class; you can create instances of a QGraphicsWidget without having to subclass it. This approach is useful for widgets that only serve the purpose of organizing child widgets into a layout.</source>
          <target state="translated">Unlike &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, QGraphicsWidget is not an abstract class; you can create instances of a QGraphicsWidget without having to subclass it. This approach is useful for widgets that only serve the purpose of organizing child widgets into a layout.</target>
        </trans-unit>
        <trans-unit id="22ddbbede5bbb90be1dc89a4165b3ee92e5cd575" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qgraphicsitem#transform&quot;&gt;transform&lt;/a&gt;(), which returns only an item's local transformation, this function includes the item's (and any parents') position, and all the transfomation properties.</source>
          <target state="translated">항목의 로컬 변환 만 반환하는 &lt;a href=&quot;qgraphicsitem#transform&quot;&gt;transform&lt;/a&gt; () 과 달리이 함수에는 항목 (및 모든 부모) 위치 및 모든 트랜스 폼 속성이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="526c141fc9305eb4a6e17fa29ac1ece987d643e0" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt; provides no operator[]. Use &lt;a href=&quot;qhash#value&quot;&gt;value&lt;/a&gt;() or &lt;a href=&quot;qmultihash#replace&quot;&gt;replace&lt;/a&gt;() if you want to access the most recently inserted item with a certain key.</source>
          <target state="translated">달리 &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; , &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash가&lt;/a&gt; 어떠한 조작을 제공하지 않는다 []. 특정 키를 사용하여 가장 최근에 삽입 한 항목에 액세스 하려면 &lt;a href=&quot;qhash#value&quot;&gt;값&lt;/a&gt; () 또는 &lt;a href=&quot;qmultihash#replace&quot;&gt;바꾸기&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b5aafec3e3a14e783355dd4d55a56f1db29e2636" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, QMultiHash provides no operator[]. Use &lt;a href=&quot;qhash#value&quot;&gt;value&lt;/a&gt;() or &lt;a href=&quot;qmultihash#replace&quot;&gt;replace&lt;/a&gt;() if you want to access the most recently inserted item with a certain key.</source>
          <target state="translated">Unlike &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, QMultiHash provides no operator[]. Use &lt;a href=&quot;qhash#value&quot;&gt;value&lt;/a&gt;() or &lt;a href=&quot;qmultihash#replace&quot;&gt;replace&lt;/a&gt;() if you want to access the most recently inserted item with a certain key.</target>
        </trans-unit>
        <trans-unit id="5551954fcff8c1f2f3c123383c1e2b8eb9651df3" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, QMultiHash provides no operator[]. Use &lt;a href=&quot;qmultihash#value&quot;&gt;value&lt;/a&gt;() or &lt;a href=&quot;qmultihash#replace&quot;&gt;replace&lt;/a&gt;() if you want to access the most recently inserted item with a certain key.</source>
          <target state="translated">&lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; 와 달리 QMultiHash 는 operator []를 제공하지 않습니다. 사용 &lt;a href=&quot;qmultihash#value&quot;&gt;가치&lt;/a&gt; () 또는 &lt;a href=&quot;qmultihash#replace&quot;&gt;대체&lt;/a&gt; ()는 특정 키를 사용하여 가장 최근에 삽입 된 항목에 접근하려는 경우.</target>
        </trans-unit>
        <trans-unit id="d65c0b49b6f7984b1f2f6833d6e432c9f9dc0611" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, which stores its items in an arbitrary order, &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; stores its items ordered by key.</source>
          <target state="translated">임의의 순서로 항목을 저장하는 &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; 와 달리 &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; 은 키로 정렬 된 항목을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="7a3806d525719cd83e848ed87ba65e9116ef8c29" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, which stores its items in an arbitrary order, &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; stores its items ordered by key. Items that share the same key (because the map is a &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt;) will appear consecutively, from the most recently to the least recently inserted value.</source>
          <target state="translated">Unlike &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, which stores its items in an arbitrary order, &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; stores its items ordered by key. Items that share the same key (because the map is a &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt;) will appear consecutively, from the most recently to the least recently inserted value.</target>
        </trans-unit>
        <trans-unit id="edc757c798894333f5c691463b1ac5b3e899e16e" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, which stores its items in an arbitrary order, &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; stores its items ordered by key. Items that share the same key (because they were inserted using &lt;a href=&quot;qmap#insertMulti&quot;&gt;QMap::insertMulti&lt;/a&gt;()) will appear consecutively, from the most recently to the least recently inserted value.</source>
          <target state="translated">임의의 순서로 항목을 저장하는 &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; 와 달리 &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; 은 키별로 주문한 항목을 저장합니다. &lt;a href=&quot;qmap#insertMulti&quot;&gt;QMap :: insertMulti&lt;/a&gt; ()를 사용하여 삽입했기 때문에 동일한 키를 공유하는 항목 은 가장 최근에 삽입 된 값부터 가장 최근에 삽입 된 값까지 연속적으로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="aece43b73a252ef6e776cf50a5c48f3b74316e86" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, which stores its items in an arbitrary order, &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; stores its items ordered by key. Items that share the same key (because they were inserted using &lt;a href=&quot;qmap#insertMulti&quot;&gt;QMap::insertMulti&lt;/a&gt;(), or due to a &lt;a href=&quot;qmap#unite&quot;&gt;unite&lt;/a&gt;()) will appear consecutively, from the most recently to the least recently inserted value.</source>
          <target state="translated">임의의 순서로 항목을 저장하는 &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; 와 달리 &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; 은 키별로 주문한 항목을 저장합니다. 같은 키를 공유 항목 (그들이 사용하여 삽입 되었기 때문에 &lt;a href=&quot;qmap#insertMulti&quot;&gt;QMap :: insertMulti을&lt;/a&gt; (또는 인해)가 &lt;a href=&quot;qmap#unite&quot;&gt;뭉 칩시 다&lt;/a&gt; ()) 가장 최근에 삽입 된 값으로 가장 최근에에서 연속적으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="ba72056a5a5608aea9a67795f6d1617b816622fd" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qhash#remove&quot;&gt;remove&lt;/a&gt;() and &lt;a href=&quot;qhash#take&quot;&gt;take&lt;/a&gt;(), this function never causes &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; to rehash its internal data structure. This means that it can safely be called while iterating, and won't affect the order of items in the hash. For example:</source>
          <target state="translated">달리 &lt;a href=&quot;qhash#remove&quot;&gt;제거&lt;/a&gt; () 및 &lt;a href=&quot;qhash#take&quot;&gt;인출&lt;/a&gt; ()이 함수는 발생하지 &lt;a href=&quot;qhash#qhash&quot;&gt;QHash를&lt;/a&gt; 내부 데이터 구조를 개작 할. 즉, 반복하는 동안 안전하게 호출 할 수 있으며 해시의 항목 순서에는 영향을 미치지 않습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="09682fa5ff3accc44e8bf9b2f6ad0626fb23460c" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qlineedit#textChanged&quot;&gt;textChanged&lt;/a&gt;(), this signal is not emitted when the text is changed programmatically, for example, by calling &lt;a href=&quot;qlineedit#text-prop&quot;&gt;setText&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qlineedit#textChanged&quot;&gt;textChanged&lt;/a&gt; () 와 달리이 신호는 프로그래밍 방식으로 텍스트를 변경할 때 (예 : &lt;a href=&quot;qlineedit#text-prop&quot;&gt;setText&lt;/a&gt; () 를 호출하여) 방출되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="86a23662d37152c25cd61e8edc7215f16ada87f5" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qlineedit#textEdited&quot;&gt;textEdited&lt;/a&gt;(), this signal is also emitted when the text is changed programmatically, for example, by calling &lt;a href=&quot;qlineedit#text-prop&quot;&gt;setText&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qlineedit#textEdited&quot;&gt;textEdited&lt;/a&gt; () 와 달리이 신호는 텍스트가 프로그래밍 방식으로 변경 될 때 (예 : &lt;a href=&quot;qlineedit#text-prop&quot;&gt;setText&lt;/a&gt; () 호출 )도 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3cda421e7e2cce77a425a321de2189a416889c4b" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qlocale#toString&quot;&gt;QLocale::toString&lt;/a&gt;(), this function does not honor the user's locale settings.</source>
          <target state="translated">&lt;a href=&quot;qlocale#toString&quot;&gt;QLocale :: toString&lt;/a&gt; () 과 달리이 함수는 사용자의 로캘 설정을 따르지 않습니다.</target>
        </trans-unit>
        <trans-unit id="acb647d5b0a8aebf3ac2b5d477be969ea15b9a25" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt; provides no operator[]. Use &lt;a href=&quot;qmap#value&quot;&gt;value&lt;/a&gt;() or &lt;a href=&quot;qmultimap#replace&quot;&gt;replace&lt;/a&gt;() if you want to access the most recently inserted item with a certain key.</source>
          <target state="translated">달리 &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; , &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap가&lt;/a&gt; 어떠한 조작을 제공하지 않는다 []. 특정 키를 사용하여 가장 최근에 삽입 한 항목에 액세스 하려면 &lt;a href=&quot;qmap#value&quot;&gt;값&lt;/a&gt; () 또는 &lt;a href=&quot;qmultimap#replace&quot;&gt;바꾸기&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a22b7a77af1bf77e1af3024a68ccb22f3eaf529c" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, QMultiMap provides no operator[]. Use &lt;a href=&quot;qmap#value&quot;&gt;value&lt;/a&gt;() or &lt;a href=&quot;qmultimap#replace&quot;&gt;replace&lt;/a&gt;() if you want to access the most recently inserted item with a certain key.</source>
          <target state="translated">Unlike &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, QMultiMap provides no operator[]. Use &lt;a href=&quot;qmap#value&quot;&gt;value&lt;/a&gt;() or &lt;a href=&quot;qmultimap#replace&quot;&gt;replace&lt;/a&gt;() if you want to access the most recently inserted item with a certain key.</target>
        </trans-unit>
        <trans-unit id="3e5750075e939d828532963ab1d032f355449867" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, which orders its items by key, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; stores its items in an arbitrary order.</source>
          <target state="translated">Unlike &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, which orders its items by key, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; stores its items in an arbitrary order.</target>
        </trans-unit>
        <trans-unit id="0e8e676f631aee53c487013fbdc93ee8a463b018" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, which orders its items by key, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; stores its items in an arbitrary order. The only guarantee is that items that share the same key (because they were inserted using &lt;a href=&quot;qhash#insertMulti&quot;&gt;QHash::insertMulti&lt;/a&gt;()) will appear consecutively, from the most recently to the least recently inserted value.</source>
          <target state="translated">키별로 항목을 주문하는 &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; 과 달리 &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; 는 임의의 순서로 항목을 저장합니다. 유일한 키는 &lt;a href=&quot;qhash#insertMulti&quot;&gt;QHash :: insertMulti&lt;/a&gt; ()를 사용하여 삽입 한 동일한 키를 공유하는 항목이 가장 최근에 삽입 된 값부터 가장 최근에 삽입 된 값까지 연속적으로 표시된다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5bf098533835031d3b992a08dce143babc7405e5" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, which orders its items by key, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; stores its items in an arbitrary order. The only guarantee is that items that share the same key (because they were inserted using a &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;) will appear consecutively, from the most recently to the least recently inserted value.</source>
          <target state="translated">Unlike &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, which orders its items by key, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; stores its items in an arbitrary order. The only guarantee is that items that share the same key (because they were inserted using a &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;) will appear consecutively, from the most recently to the least recently inserted value.</target>
        </trans-unit>
        <trans-unit id="76718c719802372c8e93691e52da9287a8f2feb5" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, which orders its items by key, &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt; stores its items in an arbitrary order.</source>
          <target state="translated">키별로 항목을 &lt;a href=&quot;qmultihash&quot;&gt;정렬&lt;/a&gt; 하는 &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; 과 달리 QMultiHash 는 항목을 임의의 순서로 저장합니다.</target>
        </trans-unit>
        <trans-unit id="56d660eb9567fe19b0e2d88f8a618e3307a0b281" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, which orders its items by key, &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt; stores its items in an arbitrary order. The only guarantee is that items that share the same key (because they were inserted using a &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;) will appear consecutively, from the most recently to the least recently inserted value.</source>
          <target state="translated">키별로 항목을 &lt;a href=&quot;qmultihash&quot;&gt;정렬&lt;/a&gt; 하는 &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; 과 달리 QMultiHash 는 항목을 임의의 순서로 저장합니다. 유일한 보장은 동일한 키를 공유하는 항목 ( &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash를&lt;/a&gt; 사용하여 삽입 되었기 때문에 )이 가장 최근에서 가장 최근에 삽입 된 값까지 연속적으로 표시 된다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a1c2981512c71df04bfa31170bbbb3a6e10f52c2" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qmetaproperty&quot;&gt;QMetaProperty&lt;/a&gt; which represents a property on a class type, &lt;a href=&quot;qqmlproperty&quot;&gt;QQmlProperty&lt;/a&gt; encapsulates a property on a specific object instance. To read a property's value, programmers create a &lt;a href=&quot;qqmlproperty&quot;&gt;QQmlProperty&lt;/a&gt; instance and call the &lt;a href=&quot;qqmlproperty#read&quot;&gt;read&lt;/a&gt;() method. Likewise to write a property value the &lt;a href=&quot;qqmlproperty#write&quot;&gt;write&lt;/a&gt;() method is used.</source>
          <target state="translated">달리 &lt;a href=&quot;qmetaproperty&quot;&gt;QMetaProperty&lt;/a&gt; 클래스 타입의 속성을 나타냅니다, &lt;a href=&quot;qqmlproperty&quot;&gt;QQmlProperty는&lt;/a&gt; 특정 객체 인스턴스의 속성을 캡슐화합니다. 속성 값을 읽기 위해 프로그래머는 &lt;a href=&quot;qqmlproperty&quot;&gt;QQmlProperty&lt;/a&gt; 인스턴스를 만들고 &lt;a href=&quot;qqmlproperty#read&quot;&gt;read&lt;/a&gt; () 메서드를 호출합니다 . 마찬가지로 속성 값을 쓰려면 &lt;a href=&quot;qqmlproperty#write&quot;&gt;write&lt;/a&gt; () 메서드가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d7f713f28e2bfcac1cd4d88457757c770df8adf3" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qmetaproperty&quot;&gt;QMetaProperty&lt;/a&gt; which represents a property on a class type, QQmlProperty encapsulates a property on a specific object instance. To read a property's value, programmers create a QQmlProperty instance and call the &lt;a href=&quot;qqmlproperty#read&quot;&gt;read&lt;/a&gt;() method. Likewise to write a property value the &lt;a href=&quot;qqmlproperty#write&quot;&gt;write&lt;/a&gt;() method is used.</source>
          <target state="translated">Unlike &lt;a href=&quot;qmetaproperty&quot;&gt;QMetaProperty&lt;/a&gt; which represents a property on a class type, QQmlProperty encapsulates a property on a specific object instance. To read a property's value, programmers create a QQmlProperty instance and call the &lt;a href=&quot;qqmlproperty#read&quot;&gt;read&lt;/a&gt;() method. Likewise to write a property value the &lt;a href=&quot;qqmlproperty#write&quot;&gt;write&lt;/a&gt;() method is used.</target>
        </trans-unit>
        <trans-unit id="199703db53523f0aac4cea490c71cebe925b48dc" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qmetatype#destroy&quot;&gt;destroy&lt;/a&gt;(), this function only invokes the type's destructor, it doesn't invoke the delete operator.</source>
          <target state="translated">&lt;a href=&quot;qmetatype#destroy&quot;&gt;destroy&lt;/a&gt; () 와 달리이 함수는 형식의 소멸자 만 호출하며 delete 연산자는 호출하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9aa33046bc1fdc3550d7d2d438d01e84b21109bc" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qml-qtwebengine-webenginescript#sourceCode-prop&quot;&gt;sourceCode&lt;/a&gt;, this property allows referring to user scripts that are not already loaded in memory, for instance, when stored on disk.</source>
          <target state="translated">&lt;a href=&quot;qml-qtwebengine-webenginescript#sourceCode-prop&quot;&gt;sourceCode&lt;/a&gt; 와 달리이 속성을 사용하면 메모리에 아직로드되지 않은 사용자 스크립트 (예 : 디스크에 저장된 경우)를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2368165edcb2d09d1715aae1fad2459586d3cb95" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;, which stores its items in an arbitrary order, &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt; stores its items ordered by key. Items that share the same key will appear consecutively, from the most recently to the least recently inserted value.</source>
          <target state="translated">달리 &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt; 임의의 순서로 그 아이템을 저장, &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap는&lt;/a&gt; 그 항목 키의 지시에 저장한다. 동일한 키를 공유하는 항목은 가장 최근부터 가장 최근에 삽입 된 값까지 연속적으로 나타납니다.</target>
        </trans-unit>
        <trans-unit id="0561f64ceee037b807fcf9267a4d9c7aac63c140" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt;, QMultiHash does not provide and ordering of the inserted items. The only guarantee is that items that share the same key will appear consecutively, from the most recently to the least recently inserted value.</source>
          <target state="translated">Unlike &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt;, QMultiHash does not provide and ordering of the inserted items. The only guarantee is that items that share the same key will appear consecutively, from the most recently to the least recently inserted value.</target>
        </trans-unit>
        <trans-unit id="cbdc1ec1a811612ae8a59755192c890c7013b83f" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;, &lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngine&lt;/a&gt; does not automatically create a root window. If you are using visual items from Qt Quick, you will need to place them inside of a &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;Window&lt;/a&gt;.</source>
          <target state="translated">달리 &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; , &lt;a href=&quot;qqmlapplicationengine&quot;&gt;QQmlApplicationEngine은&lt;/a&gt; 자동으로 루트 윈도우를 생성하지 않습니다. Qt Quick의 시각적 항목을 사용하는 경우 &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;창&lt;/a&gt; 안에 배치해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="b9bf545df5a0570d61c3e02fb8c035e5d697485a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;, QQmlApplicationEngine does not automatically create a root window. If you are using visual items from Qt Quick, you will need to place them inside of a &lt;a href=&quot;https://doc.qt.io/qt-6.0/window-qmlmodule.html&quot;&gt;Window&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; 와 달리 QQmlApplicationEngine 은 루트 창을 자동으로 생성하지 않습니다. Qt Quick의 시각적 항목을 사용하는 경우 해당 항목을 &lt;a href=&quot;https://doc.qt.io/qt-6.0/window-qmlmodule.html&quot;&gt;Window&lt;/a&gt; 안에 배치해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="e9822d0d93644b884429ff0c4479854c93e24bf3" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;, QQmlApplicationEngine does not automatically create a root window. If you are using visual items from Qt Quick, you will need to place them inside of a &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;Window&lt;/a&gt;.</source>
          <target state="translated">Unlike &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;, QQmlApplicationEngine does not automatically create a root window. If you are using visual items from Qt Quick, you will need to place them inside of a &lt;a href=&quot;qml-qtquick-window-window&quot;&gt;Window&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6a9f33c1ed81f8ce928d851572c775becbd92a11" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qquickwebenginescript#sourceCode-prop&quot;&gt;sourceCode&lt;/a&gt;, this property allows referring to user scripts that are not already loaded in memory, for instance, when stored on disk.</source>
          <target state="translated">&lt;a href=&quot;qquickwebenginescript#sourceCode-prop&quot;&gt;sourceCode&lt;/a&gt; 와 달리이 속성을 사용하면 메모리에 아직로드되지 않은 사용자 스크립트 (예 : 디스크에 저장된 경우)를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ca57e642004285399a825322d8fdd5db32935c8" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qquickwindow#setSceneGraphBackend&quot;&gt;setSceneGraphBackend&lt;/a&gt;(), which can only be used to request a given backend (shipped either built-in or installed as dynamically loaded plugins), this function works with the higher level concept of graphics APIs. It covers the backends that ship with Qt Quick, and thus have corresponding values in the &lt;a href=&quot;qsgrendererinterface#GraphicsApi-enum&quot;&gt;QSGRendererInterface::GraphicsApi&lt;/a&gt; enum.</source>
          <target state="translated">주어진 백엔드를 요청하는 데만 사용할 수있는 &lt;a href=&quot;qquickwindow#setSceneGraphBackend&quot;&gt;setSceneGraphBackend&lt;/a&gt; () 와 달리 (내장되거나 동적으로로드 된 플러그인으로 설치됨)이 함수는 더 높은 수준의 그래픽 API 개념과 함께 작동합니다. Qt Quick과 함께 제공되는 백엔드를 &lt;a href=&quot;qsgrendererinterface#GraphicsApi-enum&quot;&gt;다루므로 QSGRendererInterface :: GraphicsApi&lt;/a&gt; 열거 형 에 해당 값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="88e83fcfef829b8ae1c3d4a9011490b31b5a04b7" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qset#remove&quot;&gt;remove&lt;/a&gt;(), this function never causes &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; to rehash its internal data structure. This means that it can safely be called while iterating, and won't affect the order of items in the set.</source>
          <target state="translated">&lt;a href=&quot;qset#remove&quot;&gt;remove&lt;/a&gt; () 와 달리이 함수는 &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; 가 내부 데이터 구조를 다시 해시 하지 않도록 합니다. 즉, 반복하는 동안 안전하게 호출 할 수 있으며 세트의 항목 순서에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ba955c3d3a6144c7f4ff57c5e864cd8c9c0b82b8" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt;, directly issuing state change commands with the underlying graphics API is not possible with &lt;a href=&quot;qsgmaterialrhishader&quot;&gt;QSGMaterialRhiShader&lt;/a&gt;. This is mainly because the concept of individually changeable states is considered deprecated and not supported with modern graphics APIs.</source>
          <target state="translated">Unlike &lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt;, directly issuing state change commands with the underlying graphics API is not possible with &lt;a href=&quot;qsgmaterialrhishader&quot;&gt;QSGMaterialRhiShader&lt;/a&gt;. This is mainly because the concept of individually changeable states is considered deprecated and not supported with modern graphics APIs.</target>
        </trans-unit>
        <trans-unit id="42b302429b4ce0ab76bc3fdbd770c8826d820da9" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt;, directly issuing state change commands with the underlying graphics API is not possible with &lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt;. This is mainly because the concept of individually changeable states is considered deprecated and not supported with modern graphics APIs.</source>
          <target state="translated">&lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt; 와 달리 기본 그래픽 API를 사용하여 상태 변경 명령을 직접 실행하는 것은 &lt;a href=&quot;qsgmaterialshader&quot;&gt;QSGMaterialShader&lt;/a&gt; 에서는 불가능합니다 . 이는 주로 개별적으로 변경 가능한 상태의 개념이 더 이상 사용되지 않고 최신 그래픽 API에서 지원되지 않는 것으로 간주되기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="b891971c95ed1852e1d7b3a997fe0c5ae5eb57f9" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qsgrendernode#render&quot;&gt;render&lt;/a&gt;(), this function is called before the scenegraph starts recording the render pass for the current frame on the underlying command buffer. This is useful when doing rendering with graphics APIs, such as Vulkan, where copy type of operations will need to be recorded before the render pass.</source>
          <target state="translated">&lt;a href=&quot;qsgrendernode#render&quot;&gt;render&lt;/a&gt; () 와 달리이 함수는 장면 그래프가 기본 명령 버퍼에 현재 프레임에 대한 렌더 패스 기록을 시작하기 전에 호출됩니다. 이는 Vulkan과 같은 그래픽 API로 렌더링을 수행 할 때 유용합니다. 여기서 복사 유형의 작업은 렌더 패스 전에 기록해야합니다.</target>
        </trans-unit>
        <trans-unit id="5c5b21e746e1c30d96fe59fb40b6eb5d0b8e86f6" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qsslconfiguration#setLocalCertificate&quot;&gt;QSslConfiguration::setLocalCertificate&lt;/a&gt;() this method allows you to specify any intermediate certificates required in order to validate your certificate. The first item in the list must be the leaf certificate.</source>
          <target state="translated">&lt;a href=&quot;qsslconfiguration#setLocalCertificate&quot;&gt;QSslConfiguration :: setLocalCertificate&lt;/a&gt; () 와 달리이 방법을 사용하면 인증서의 유효성을 검사하는 데 필요한 중간 인증서를 지정할 수 있습니다. 목록의 첫 번째 항목은 리프 인증서 여야합니다.</target>
        </trans-unit>
        <trans-unit id="a486ab8d1a0918cb41c0fac1d14dd5dd03cde66f" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qstring#constData&quot;&gt;constData&lt;/a&gt;() and &lt;a href=&quot;qstring#unicode&quot;&gt;unicode&lt;/a&gt;(), the returned data is always '\0'-terminated.</source>
          <target state="translated">&lt;a href=&quot;qstring#constData&quot;&gt;constData&lt;/a&gt; () 및 &lt;a href=&quot;qstring#unicode&quot;&gt;unicode&lt;/a&gt; ()와 달리 반환 된 데이터는 항상 '\ 0'으로 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="65b689a892b4e1505689947abd02c8ac7c3778b6" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qstring#resize&quot;&gt;resize&lt;/a&gt;(int), this overload initializes the new characters to</source>
          <target state="translated">&lt;a href=&quot;qstring#resize&quot;&gt;크기 조정&lt;/a&gt; (int) 과 달리이 오버로드 는 다음과 같이 새 문자를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="ce70e69e5e1b925a22c02e47187432ffd90b82b2" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qstring#resize&quot;&gt;resize&lt;/a&gt;(qsizetype), this overload initializes the new characters to</source>
          <target state="translated">&lt;a href=&quot;qstring#resize&quot;&gt;resize&lt;/a&gt; (qsizetype) 와 달리이 오버로드는 새 문자를 다음으로 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="450627429b932e118b6d21b4779a00a6d289a3de" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qstring#simplified&quot;&gt;QString::simplified&lt;/a&gt;(), trimmed() leaves internal whitespace alone.</source>
          <target state="translated">&lt;a href=&quot;qstring#simplified&quot;&gt;QString :: simplified&lt;/a&gt; () 와 달리 trimmed ()는 내부 공백 만 남겨 둡니다.</target>
        </trans-unit>
        <trans-unit id="2064cb62bbd286738fa17946f71539371a94fc06" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qstring#simplified&quot;&gt;simplified&lt;/a&gt;(), trimmed() leaves internal whitespace alone.</source>
          <target state="translated">&lt;a href=&quot;qstring#simplified&quot;&gt;단순화 된&lt;/a&gt; () 과 달리 trimmed ()는 내부 공백 만 남겨 둡니다.</target>
        </trans-unit>
        <trans-unit id="27b0cb0cb3b311039f064b0ebdb02663220636e2" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qstring#toDouble&quot;&gt;QString::toDouble&lt;/a&gt;(), this function does not fall back to the &quot;C&quot; locale if the string cannot be interpreted in this locale.</source>
          <target state="translated">&lt;a href=&quot;qstring#toDouble&quot;&gt;QString :: toDouble&lt;/a&gt; () 과 달리이 함수는 문자열이이 로케일로 해석 될 수없는 경우 &quot;C&quot;로케일로 대체 되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="69587ece70211971d66b60111a927fabe7371ad7" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qtcore-changes-qt6#qstringview&quot;&gt;QStringView&lt;/a&gt; and &lt;a href=&quot;qutf8stringview&quot;&gt;QUtf8StringView&lt;/a&gt;, QAnyStringView can hold strings of any of the following encodings: UTF-8, UTF-16, and Latin-1. The latter is supported to keep old source working efficiently. It is expected that by Qt 7, the Latin-1 support will be removed.</source>
          <target state="translated">&lt;a href=&quot;qtcore-changes-qt6#qstringview&quot;&gt;QStringView&lt;/a&gt; 및 &lt;a href=&quot;qutf8stringview&quot;&gt;QUtf8StringView&lt;/a&gt; 와 달리 QAnyStringView 는 UTF-8, UTF-16 및 Latin-1 인코딩 중 하나의 문자열을 보유 할 수 있습니다. 후자는 이전 소스가 효율적으로 작동하도록 유지하기 위해 지원됩니다. Qt 7에는 Latin-1 지원이 제거 될 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="ed0abf997fd340de527660ac2efb2a254059b40b" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qtwidgets-index&quot;&gt;Qt Widgets&lt;/a&gt;, Qt Quick Controls 1 do not use the native action bar on Android. &lt;a href=&quot;qml-qtquick-controls-toolbar&quot;&gt;ToolBar&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls-menubar&quot;&gt;MenuBar&lt;/a&gt; are offered as a cross-platform replacement. They are unified to a single &quot;action bar&quot; when assigned to the appropriate &lt;a href=&quot;qml-qtquick-controls-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt; properties.</source>
          <target state="translated">&lt;a href=&quot;qtwidgets-index&quot;&gt;Qt 위젯&lt;/a&gt; 과 달리 Qt Quick Controls 1은 Android에서 기본 작업 표시 줄을 사용하지 않습니다. &lt;a href=&quot;qml-qtquick-controls-toolbar&quot;&gt;툴바&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-controls-menubar&quot;&gt;메뉴 바&lt;/a&gt; 는 크로스 플랫폼 대체품으로 제공됩니다. 적절한 &lt;a href=&quot;qml-qtquick-controls-applicationwindow&quot;&gt;ApplicationWindow&lt;/a&gt; 속성에 할당 될 때 단일 &quot;작업 표시 줄&quot;에 통합됩니다 .</target>
        </trans-unit>
        <trans-unit id="77452b6be67b41ff36ff7b039d3fa3f10a48e69a" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; does not have the convenience functions &lt;a href=&quot;qwidget#enterEvent&quot;&gt;enterEvent()&lt;/a&gt; and &lt;a href=&quot;qwidget#leaveEvent&quot;&gt;leaveEvent()&lt;/a&gt;. Use this function to obtain those events instead.</source>
          <target state="translated">달리 &lt;a href=&quot;qwidget&quot;&gt;는 QWidget&lt;/a&gt; , &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene은&lt;/a&gt; 편의 기능이없는 &lt;a href=&quot;qwidget#enterEvent&quot;&gt;enterEvent을 ()&lt;/a&gt; 와 &lt;a href=&quot;qwidget#leaveEvent&quot;&gt;leaveEvent ()&lt;/a&gt; . 대신이 기능을 사용하여 해당 이벤트를 확보하십시오.</target>
        </trans-unit>
        <trans-unit id="cb9e894a33b28329148163b1a0d4a9aaa8f7f06e" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;, &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; allows opening a painter on itself and perform &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;-based drawing.</source>
          <target state="translated">달리 &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; , &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow는&lt;/a&gt; 자체 페인을 열고 수행 허용 &lt;a href=&quot;qpainter&quot;&gt;QPainter를이&lt;/a&gt; 도면 기반.</target>
        </trans-unit>
        <trans-unit id="d5daac330568a1eda0218409db2b137e1c4a8cc8" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;, QOpenGLWindow allows opening a painter on itself and perform &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;-based drawing.</source>
          <target state="translated">Unlike &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;, QOpenGLWindow allows opening a painter on itself and perform &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;-based drawing.</target>
        </trans-unit>
        <trans-unit id="5d38f771a38409db2113028c5caa41791c936b04" translate="yes" xml:space="preserve">
          <source>Unlike &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;, &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; does not have the convenience functions &lt;a href=&quot;qwidget#enterEvent&quot;&gt;enterEvent()&lt;/a&gt; and &lt;a href=&quot;qwidget#leaveEvent&quot;&gt;leaveEvent()&lt;/a&gt;. Use this function to obtain those events instead.</source>
          <target state="translated">달리 &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;는 QWidget&lt;/a&gt; , &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene은&lt;/a&gt; 편의 기능이없는 &lt;a href=&quot;qwidget#enterEvent&quot;&gt;enterEvent을 ()&lt;/a&gt; 와 &lt;a href=&quot;qwidget#leaveEvent&quot;&gt;leaveEvent ()&lt;/a&gt; . 대신이 기능을 사용하여 해당 이벤트를 얻으십시오.</target>
        </trans-unit>
        <trans-unit id="a74f9b04f89c272d74e6a9f2f13342ef90cde6ca" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;software&lt;/code&gt; or &lt;code&gt;d3d12&lt;/code&gt;, the RHI-based renderer is not an additional adaptation, and is always built-in. As of Qt 5.14 it can be enabled by setting the environment variable &lt;code&gt;QSG_RHI&lt;/code&gt; to a non-zero value before starting the application, or via &lt;a href=&quot;qquickwindow#setSceneGraphBackend&quot;&gt;QQuickWindow::setSceneGraphBackend&lt;/a&gt;() in combination with &lt;a href=&quot;qsgrendererinterface#GraphicsApi-enum&quot;&gt;QSGRendererInterface::GraphicsApi&lt;/a&gt;. When none of this is done, OpenGL is used directly like in previous versions.</source>
          <target state="translated">Unlike &lt;code&gt;software&lt;/code&gt; or &lt;code&gt;d3d12&lt;/code&gt; , the RHI-based renderer is not an additional adaptation, and is always built-in. As of Qt 5.14 it can be enabled by setting the environment variable &lt;code&gt;QSG_RHI&lt;/code&gt; to a non-zero value before starting the application, or via &lt;a href=&quot;qquickwindow#setSceneGraphBackend&quot;&gt;QQuickWindow::setSceneGraphBackend&lt;/a&gt;() in combination with &lt;a href=&quot;qsgrendererinterface#GraphicsApi-enum&quot;&gt;QSGRendererInterface::GraphicsApi&lt;/a&gt;. When none of this is done, OpenGL is used directly like in previous versions.</target>
        </trans-unit>
        <trans-unit id="3f7534fae6bab8042f71f12ff217dfdf9bcae0dd" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;software&lt;/code&gt;, the RHI-based renderer is not an additional adaptation, and is always built-in. As of Qt 6.0 it is always enabled. On platforms where multiple graphics APIs are available, the scenegraph makes a platform-specific choice. If this is not desired, applications can force a specified graphics API by setting the environment variable &lt;code&gt;QSG_RHI_BACKEND&lt;/code&gt; or via &lt;a href=&quot;qquickwindow#setGraphicsApi&quot;&gt;QQuickWindow::setGraphicsApi&lt;/a&gt;() in combination with &lt;a href=&quot;qsgrendererinterface#GraphicsApi-enum&quot;&gt;QSGRendererInterface::GraphicsApi&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;software&lt;/code&gt; 와 달리 RHI 기반 렌더러는 추가 조정이 아니며 항상 내장되어 있습니다. Qt 6.0부터는 항상 활성화되어 있습니다. 여러 그래픽 API를 사용할 수있는 플랫폼에서 장면 그래프는 플랫폼별로 선택합니다. 이것이 바람직하지 않은 경우 애플리케이션은 환경 변수 &lt;code&gt;QSG_RHI_BACKEND&lt;/code&gt; 를 설정 하거나 &lt;a href=&quot;qsgrendererinterface#GraphicsApi-enum&quot;&gt;QSGRendererInterface :: GraphicsApi&lt;/a&gt; 와 함께 QQuickWindow :: &lt;a href=&quot;qquickwindow#setGraphicsApi&quot;&gt;setGraphicsApi&lt;/a&gt; () 를 통해 지정된 그래픽 API를 강제 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bb30b6291ae52c3526208a0df9ba6544e615d4b5" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;stop()&lt;/code&gt;, &lt;code&gt;complete()&lt;/code&gt; immediately fast-forwards the animation to its end. In the following example,</source>
          <target state="translated">달리 &lt;code&gt;stop()&lt;/code&gt; , &lt;code&gt;complete()&lt;/code&gt; 끝 바로 빠르게 전달 애니메이션. 다음 예에서</target>
        </trans-unit>
        <trans-unit id="3fc56a5283daf59b2af28a528080e96a2cec68e3" translate="yes" xml:space="preserve">
          <source>Unlike GLSL's attributes, no names are used for vertex input elements. Therefore qt_Vertex and qt_MultiTexCoord0 are not relevant. Instead, the standard Direct3D semantics, &lt;code&gt;POSITION&lt;/code&gt; and &lt;code&gt;TEXCOORD&lt;/code&gt; (or &lt;code&gt;TEXCOORD0&lt;/code&gt;) are used for identifying the correct input layout.</source>
          <target state="translated">GLSL의 속성과 달리 정점 입력 요소에는 이름이 사용되지 않습니다. 따라서 qt_Vertex와 qt_MultiTexCoord0은 관련이 없습니다. 대신 표준 Direct3D 의미론, &lt;code&gt;POSITION&lt;/code&gt; 및 &lt;code&gt;TEXCOORD&lt;/code&gt; (또는 &lt;code&gt;TEXCOORD0&lt;/code&gt; )가 올바른 입력 레이아웃을 식별하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0935b406bf2cd387c54bb51a1ec4160b0f958e6f" translate="yes" xml:space="preserve">
          <source>Unlike GLSL's samplers, texture and sampler objects are separate in HLSL. Shaders are expected to expect 2D, non-array, non-multisample textures. Both the texture and sampler binding points are expected to be sequential and start from 0 (meaning registers &lt;code&gt;t0, t1, ...&lt;/code&gt;, and &lt;code&gt;s0, s1, ...&lt;/code&gt;, respectively). Unlike with OpenGL, samplers are not mapped to Qt Quick item properties and therefore the name of the sampler is not relevant. Instead, it is the textures that map to properties referencing &lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-shadereffectsource&quot;&gt;ShaderEffectSource&lt;/a&gt; items.</source>
          <target state="translated">GLSL의 샘플러와 달리 텍스처와 샘플러 객체는 HLSL에서 분리되어 있습니다. 셰이더는 2D, 비 배열, 비 샘플 텍스처를 기대합니다. 텍스처 및 샘플러 바인딩 포인트는 순차적이며 0부터 시작합니다 (레지스터 &lt;code&gt;t0, t1, ...&lt;/code&gt; 및 &lt;code&gt;s0, s1, ...&lt;/code&gt; ). OpenGL과 달리 샘플러는 Qt Quick 항목 속성에 매핑되지 않으므로 샘플러 이름이 관련이 없습니다. 대신 &lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt; 또는 &lt;a href=&quot;qml-qtquick-shadereffectsource&quot;&gt;ShaderEffectSource&lt;/a&gt; 항목을 참조하는 속성에 매핑되는 텍스처입니다 .</target>
        </trans-unit>
        <trans-unit id="83c05961fcbe5ca3ff41fddf96718f681084890d" translate="yes" xml:space="preserve">
          <source>Unlike JSON and &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt;, CBOR map keys can be of any type, not just strings. For that reason, &lt;a href=&quot;qcbormap&quot;&gt;QCborMap&lt;/a&gt; is effectively a map between &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; keys to &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; value elements.</source>
          <target state="translated">JSON 및 &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt; 과 달리 CBOR 맵 키는 문자열뿐만 아니라 모든 유형이 될 수 있습니다. 이러한 이유로 &lt;a href=&quot;qcbormap&quot;&gt;QCborMap&lt;/a&gt; 은 사실상 &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; 키와 &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; 값 요소 사이의 맵 입니다.</target>
        </trans-unit>
        <trans-unit id="f1314da41d6af1b0dd3460aac5fa6bf7026423ed" translate="yes" xml:space="preserve">
          <source>Unlike JSON and &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt;, CBOR map keys can be of any type, not just strings. For that reason, QCborMap is effectively a map between &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; keys to &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; value elements.</source>
          <target state="translated">Unlike JSON and &lt;a href=&quot;qvariant#QVariantMap-typedef&quot;&gt;QVariantMap&lt;/a&gt;, CBOR map keys can be of any type, not just strings. For that reason, QCborMap is effectively a map between &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; keys to &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; value elements.</target>
        </trans-unit>
        <trans-unit id="2f76a9beacf9429289b913b807b363b6a488b023" translate="yes" xml:space="preserve">
          <source>Unlike OpenGL, backends for modern APIs will typically prefer offline compilation and shipping pre-compiled bytecode with applications instead of inlined shader source strings. In this case the string properties for vertex and fragment shaders are treated as URLs referring to local files or files shipped via the Qt resource system.</source>
          <target state="translated">OpenGL과 달리 최신 API의 백엔드는 일반적으로 오프라인 컴파일 및 인라인 셰이더 소스 문자열 대신 응용 프로그램을 사용하여 미리 컴파일 된 바이트 코드를 제공하는 것을 선호합니다. 이 경우 정점 및 프래그먼트 셰이더의 문자열 속성은 로컬 파일 또는 Qt 리소스 시스템을 통해 제공된 파일을 참조하는 URL로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="4c1ac6017e0457445707d574e85f55592530f804" translate="yes" xml:space="preserve">
          <source>Unlike OpenGL, the Direct3D backend is able to perform runtime shader compilation on dedicated threads. This is managed transparently to the applications, and means that &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; items that contain HLSL source strings do not block the rendering or other parts of the application until the bytecode is ready.</source>
          <target state="translated">OpenGL과 달리 Direct3D 백엔드는 전용 스레드에서 런타임 셰이더 컴파일을 수행 할 수 있습니다. 이것은 응용 프로그램에 투명하게 관리되며 HLSL 소스 문자열을 포함 하는 &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; 항목은 바이트 코드가 준비 될 때까지 응용 프로그램의 렌더링 또는 다른 부분을 차단하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c8b118d48102aa55957010342b2e759eff8650d0" translate="yes" xml:space="preserve">
          <source>Unlike OpenGL, the Direct3D backend is able to perform runtime shader compilation on dedicated threads. This is managed transparently to the applications, and means that ShaderEffect items that contain HLSL source strings do not block the rendering or other parts of the application until the bytecode is ready.</source>
          <target state="translated">Unlike OpenGL, the Direct3D backend is able to perform runtime shader compilation on dedicated threads. This is managed transparently to the applications, and means that ShaderEffect items that contain HLSL source strings do not block the rendering or other parts of the application until the bytecode is ready.</target>
        </trans-unit>
        <trans-unit id="dc35e4b8846890f347fbcd77092f273256ab31ec" translate="yes" xml:space="preserve">
          <source>Unlike OpenGL, whenever you open a file, there is a &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; with the extra &lt;code&gt;hlsl&lt;/code&gt; selector used. This provides easy creation of &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; items that are functional across both backends, for example by placing the GLSL source code into &lt;code&gt;shaders/effect.frag&lt;/code&gt;, the HLSL source code or - preferably - pre-compiled bytecode into &lt;code&gt;shaders/+hlsl/effect.frag&lt;/code&gt;, while simply writing &lt;code&gt;fragmentShader: &quot;qrc:shaders/effect.frag&quot;&lt;/code&gt; in QML. For more details, see &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt;.</source>
          <target state="translated">파일을 열 때마다 OpenGL을 달리하는이 &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; 추가로 &lt;code&gt;hlsl&lt;/code&gt; 사용 선택. GLSL 소스 코드를 &lt;code&gt;shaders/effect.frag&lt;/code&gt; , HLSL 소스 코드에 배치하거나 사전 컴파일 된 바이트 코드를 &lt;code&gt;shaders/+hlsl/effect.frag&lt;/code&gt; /+hlsl/effect.frag 에 배치하여 두 백엔드에서 작동하는 &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; 항목을 쉽게 만들 수 있습니다. 단순히 쓰는 동안 &lt;code&gt;fragmentShader: &quot;qrc:shaders/effect.frag&quot;&lt;/code&gt; QML에서. 자세한 내용은 &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb3dfa1d32ba897e0c2243c0f971298ec969b464" translate="yes" xml:space="preserve">
          <source>Unlike QBENCHMARK, the contents of the contained code block is only run once. The elapsed time will be reported as &quot;0&quot; if it's to short to be measured by the selected backend. (Use)</source>
          <target state="translated">QBENCHMARK와 달리 포함 된 코드 블록의 내용은 한 번만 실행됩니다. 선택한 백엔드로 측정하기 위해 경과 시간이 짧으면 &quot;0&quot;으로보고됩니다. (사용하다)</target>
        </trans-unit>
        <trans-unit id="494f6427f673f96ca20ad1f28b177982a162a5b3" translate="yes" xml:space="preserve">
          <source>Unlike QDirModel, &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt; uses a separate thread to populate itself so it will not cause the main thread to hang as the file system is being queried. Calls to &lt;a href=&quot;qfilesystemmodel#rowCount&quot;&gt;rowCount&lt;/a&gt;() will return 0 until the model populates a directory.</source>
          <target state="translated">QDirModel 달리, &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel는&lt;/a&gt; 이 파일 시스템이 조회되는으로 메인 스레드가 중단 될하지 않도록 자체를 채우기 위해 별도의 스레드를 사용합니다. 모델이 디렉토리를 채울 때까지 &lt;a href=&quot;qfilesystemmodel#rowCount&quot;&gt;rowCount&lt;/a&gt; ()를 호출하면 0이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="afb31442278b3b1c3eaa13cd900c14bd5edfa4ed" translate="yes" xml:space="preserve">
          <source>Unlike QDirModel, QFileSystemModel uses a separate thread to populate itself so it will not cause the main thread to hang as the file system is being queried. Calls to &lt;a href=&quot;qfilesystemmodel#rowCount&quot;&gt;rowCount&lt;/a&gt;() will return 0 until the model populates a directory.</source>
          <target state="translated">Unlike QDirModel, QFileSystemModel uses a separate thread to populate itself so it will not cause the main thread to hang as the file system is being queried. Calls to &lt;a href=&quot;qfilesystemmodel#rowCount&quot;&gt;rowCount&lt;/a&gt;() will return 0 until the model populates a directory.</target>
        </trans-unit>
        <trans-unit id="6b715768c3bf59fa0e992c8b314aec0fe98c2630" translate="yes" xml:space="preserve">
          <source>Unlike QGLWidget, triggering a buffer swap just for the &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; is not possible since there is no real, onscreen native surface for it. Instead, it is up to the widget stack to manage composition and buffer swaps on the gui thread. When a thread is done updating the framebuffer, call &lt;a href=&quot;qwidget#update&quot;&gt;update&lt;/a&gt;() &lt;b&gt;on the GUI/main thread&lt;/b&gt; to schedule composition.</source>
          <target state="translated">QGLWidget과 달리 &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget에 대해서만&lt;/a&gt; 버퍼 스왑을 트리거 할 수는 없습니다. 실제 화면에는 기본 화면이 없기 때문입니다. 대신 GUI 스레드에서 컴포지션 및 버퍼 스왑을 관리하는 것은 위젯 스택에 달려 있습니다. 스레드가 프레임 버퍼 업데이트를 완료 &lt;b&gt;하면 GUI / 메인 스레드에서 &lt;/b&gt;&lt;a href=&quot;qwidget#update&quot;&gt;update&lt;/a&gt; () &lt;b&gt;를&lt;/b&gt; 호출 하여 컴포지션을 예약하십시오.</target>
        </trans-unit>
        <trans-unit id="0be3937d5490425df75c28573520e1c27c90ac1e" translate="yes" xml:space="preserve">
          <source>Unlike QGLWidget, triggering a buffer swap just for the QOpenGLWidget is not possible since there is no real, onscreen native surface for it. Instead, it is up to the widget stack to manage composition and buffer swaps on the gui thread. When a thread is done updating the framebuffer, call &lt;a href=&quot;qwidget#update&quot;&gt;update&lt;/a&gt;() &lt;b&gt;on the GUI/main thread&lt;/b&gt; to schedule composition.</source>
          <target state="translated">Unlike QGLWidget, triggering a buffer swap just for the QOpenGLWidget is not possible since there is no real, onscreen native surface for it. Instead, it is up to the widget stack to manage composition and buffer swaps on the gui thread. When a thread is done updating the framebuffer, call &lt;a href=&quot;qwidget#update&quot;&gt;update&lt;/a&gt;() &lt;b&gt;on the GUI/main thread&lt;/b&gt; to schedule composition.</target>
        </trans-unit>
        <trans-unit id="2270c9e1f8945fd6ebf59b1f6365051e3e738746" translate="yes" xml:space="preserve">
          <source>Unlike Qt's container iterators, &lt;a href=&quot;qdiriterator&quot;&gt;QDirIterator&lt;/a&gt; is uni-directional (i.e., you cannot iterate directories in reverse order) and does not allow random access.</source>
          <target state="translated">Qt의 컨테이너 이터레이터와 달리 &lt;a href=&quot;qdiriterator&quot;&gt;QDirIterator&lt;/a&gt; 는 단방향 (즉, 디렉토리를 역순으로 반복 할 수 없음)이며 임의 액세스를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8ae0dda9d64148745ebc4aa13a3c4e11d96af552" translate="yes" xml:space="preserve">
          <source>Unlike Qt's container iterators, QDirIterator is uni-directional (i.e., you cannot iterate directories in reverse order) and does not allow random access.</source>
          <target state="translated">Unlike Qt's container iterators, QDirIterator is uni-directional (i.e., you cannot iterate directories in reverse order) and does not allow random access.</target>
        </trans-unit>
        <trans-unit id="b78969595d39dc31ee5912f45c72b43631c691bf" translate="yes" xml:space="preserve">
          <source>Unlike STL-style iterators (covered &lt;a href=&quot;#stl-style-iterators&quot;&gt;below&lt;/a&gt;), Java-style iterators point</source>
          <target state="translated">STL 스타일 반복자와 달리 ( &lt;a href=&quot;#stl-style-iterators&quot;&gt;아래에 설명되어 있음&lt;/a&gt; ) Java 스타일 반복기는</target>
        </trans-unit>
        <trans-unit id="58da3fe18e78106fe59ea16c1ac31d9f5a1c9412" translate="yes" xml:space="preserve">
          <source>Unlike STL-style iterators (covered &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;below&lt;/a&gt;), Java-style iterators point</source>
          <target state="translated">Unlike STL-style iterators (covered &lt;a href=&quot;containers#stl-style-iterators&quot;&gt;below&lt;/a&gt;), Java-style iterators point</target>
        </trans-unit>
        <trans-unit id="6bb834feb9c501fbd50f0f60113f95d7ea19f06d" translate="yes" xml:space="preserve">
          <source>Unlike STL-style iterators, Java-style iterators point</source>
          <target state="translated">STL 스타일 반복자와 달리 Java 스타일 반복자는</target>
        </trans-unit>
        <trans-unit id="056476953dde97b3a7396d2f30f2940abcd49c4b" translate="yes" xml:space="preserve">
          <source>Unlike a view, QModelRoleDataSpan is a span, so it allows for modifications to the underlying elements.</source>
          <target state="translated">뷰와 달리 QModelRoleDataSpan은 스팬이므로 기본 요소를 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3ceedb4aab5ebd410b89bac9a1500049c12703f1" translate="yes" xml:space="preserve">
          <source>Unlike an ordinary property, an alias has the following restrictions:</source>
          <target state="translated">일반 속성과 달리 별칭에는 다음과 같은 제한이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c19c93675315a9840674fdf89d0d8372094282ca" translate="yes" xml:space="preserve">
          <source>Unlike createTextureFromId(), this function supports both direct OpenGL usage and the RHI abstracted rendering path.</source>
          <target state="translated">Unlike createTextureFromId(), this function supports both direct OpenGL usage and the RHI abstracted rendering path.</target>
        </trans-unit>
        <trans-unit id="3913537b95e25a4226d021d0cbb890bd4b22cdc4" translate="yes" xml:space="preserve">
          <source>Unlike custom materials, effects support multiple passes. For many effects this it not necessary, and when there is a need to apply multiple effects, identical results can often be achieved by chaining together multiple effects in &lt;a href=&quot;qml-qtquick3d-sceneenvironment#effects-prop&quot;&gt;the SceneEnvironment&lt;/a&gt;. This is demonstrated by the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick3d-customeffect-example.html&quot;&gt;Custom Effect example&lt;/a&gt; as well. However, passes have the possibility to request additional color buffers (texture), and specify which of these additional buffers they output to. This allows implementing more complex image processing techniques since subsequent passes can then use one or more of these additional buffers, plus the original scene's content, as their input. If necessary, these additional buffers can have an extended lifetime, meaning their content is preserved between frames, which allows implementing effects that rely on accumulating content from multiple frames, such as, motion blur.</source>
          <target state="translated">사용자 정의 재질과 달리 효과는 다중 패스를 지원합니다. 많은 효과의 경우이 작업이 필요하지 않으며 여러 효과를 적용해야하는 &lt;a href=&quot;qml-qtquick3d-sceneenvironment#effects-prop&quot;&gt;경우 SceneEnvironment&lt;/a&gt; 에서 여러 효과를 함께 연결하여 동일한 결과를 얻을 수 있습니다 . 이것은 &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtquick3d-customeffect-example.html&quot;&gt;사용자 정의 효과 예제에서 설명합니다.&lt;/a&gt;게다가. 그러나 패스는 추가 색상 버퍼 (텍스처)를 요청하고 출력 할 추가 버퍼를 지정할 수 있습니다. 이렇게하면 후속 패스가 이러한 추가 버퍼 중 하나 이상과 원본 장면의 내용을 입력으로 사용할 수 있기 때문에 더 복잡한 이미지 처리 기술을 구현할 수 있습니다. 필요한 경우 이러한 추가 버퍼의 수명이 연장 될 수 있습니다. 즉, 해당 콘텐츠가 프레임간에 보존되므로 모션 블러와 같은 여러 프레임의 콘텐츠 누적에 의존하는 효과를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dec1023e91d2fcc95339ef53a536e69712687d87" translate="yes" xml:space="preserve">
          <source>Unlike destroy(), this function only invokes the type's destructor, it doesn't invoke the delete operator.</source>
          <target state="translated">destroy ()와 달리이 함수는 유형의 소멸자 만 호출하고 delete 연산자는 호출하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="aa8f19746c8c52d5bea0009073029a2228f1059f" translate="yes" xml:space="preserve">
          <source>Unlike for Qt itself, building applications with qmake is still supported in Qt 6.0, as long as a suitable device spec is available, and the appropriate legacy arguments were passed to CMake or configure when configuring Qt. If this is all true, then running &lt;code&gt;qmake&lt;/code&gt; and &lt;code&gt;make&lt;/code&gt; will also generate an application binary for the target device.</source>
          <target state="translated">Qt 자체와는 달리, 적절한 장치 사양을 사용할 수 있고 적절한 레거시 인수가 CMake에 전달되거나 Qt를 구성 할 때 구성되는 한 qmake를 사용하여 애플리케이션을 빌드하는 것은 Qt 6.0에서 계속 지원됩니다. 이것이 모두 사실이면 &lt;code&gt;qmake&lt;/code&gt; 및 &lt;code&gt;make&lt;/code&gt; 를 실행 하면 대상 장치에 대한 응용 프로그램 바이너리도 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="7f8f1229a635c065a8eec1133ae30351264d3f49" translate="yes" xml:space="preserve">
          <source>Unlike hue and saturation properties, lightness does not set the used value, but it shifts the existing source pixel lightness value.</source>
          <target state="translated">색조 및 채도 속성과 달리 밝기는 사용 된 값을 설정하지 않지만 기존 소스 픽셀 밝기 값을 이동시킵니다.</target>
        </trans-unit>
        <trans-unit id="3d440bbc6abe67e5cfd709fd1fbfceb05f9b8490" translate="yes" xml:space="preserve">
          <source>Unlike its &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; counterpart, only numbers can be used.</source>
          <target state="translated">&lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; 와 달리 숫자 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35cde709eedc00408dd3820e961e4f4320da2d05" translate="yes" xml:space="preserve">
          <source>Unlike its macOS counterpart, only numbers can be used.</source>
          <target state="translated">Unlike its macOS counterpart, only numbers can be used.</target>
        </trans-unit>
        <trans-unit id="b35afd731265b4628de38057422b6c5d7d63d4b9" translate="yes" xml:space="preserve">
          <source>Unlike move assignment, neither of the two objects ever releases its semaphore, if any, as a consequence of swapping.</source>
          <target state="translated">이동 할당과 달리 두 객체 중 어느 것도 스와핑의 결과로 세마포어를 해제하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cccd9b2a1226d14733564afa2958f0e5c55b36aa" translate="yes" xml:space="preserve">
          <source>Unlike multiple inheritance, adaptors can be added at any time to any object (but not removed), which allows for greater flexibility when exporting existing classes. Another advantage of adaptors is to provide similar but not identical functionality in methods of the same name in different interfaces, a case which can be quite common when adding a new version of a standard interface to an object.</source>
          <target state="translated">다중 상속과 달리 어댑터는 언제든지 객체에 추가 할 수 있지만 제거 할 수는 없으므로 기존 클래스를 내보낼 때 유연성이 향상됩니다. 어댑터의 또 다른 장점은 다른 인터페이스에서 동일한 이름의 메소드에 유사하지만 동일하지 않은 기능을 제공하는 것입니다. 이는 새 버전의 표준 인터페이스를 오브젝트에 추가 할 때 매우 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="0e9e6bd8aa4ba190fba9b13cf33855c44422175b" translate="yes" xml:space="preserve">
          <source>Unlike other &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; implementations, such as &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; does not emit the &lt;a href=&quot;qiodevice#aboutToClose&quot;&gt;aboutToClose&lt;/a&gt;(), &lt;a href=&quot;qiodevice#bytesWritten&quot;&gt;bytesWritten&lt;/a&gt;(), or &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;() signals. This implementation detail means that &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; is not suitable for reading and writing certain types of files, such as device files on Unix platforms.</source>
          <target state="translated">다른 달리 &lt;a href=&quot;qiodevice&quot;&gt;QIODevice의&lt;/a&gt; 같은 구현 &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; , &lt;a href=&quot;qfile&quot;&gt;Qfile을는&lt;/a&gt; 개의 발광하지 &lt;a href=&quot;qiodevice#aboutToClose&quot;&gt;aboutToClose&lt;/a&gt; () &lt;a href=&quot;qiodevice#bytesWritten&quot;&gt;bytesWritten&lt;/a&gt; () 또는 &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt; () 신호. 이 구현 세부 사항은 &lt;a href=&quot;qfile&quot;&gt;QFile&lt;/a&gt; 이 Unix 플랫폼의 장치 파일과 같은 특정 유형의 파일을 읽고 쓰는 데 적합하지 않음을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="dac7799df4724cb31bcf6d8c9c7356d43a95e9b9" translate="yes" xml:space="preserve">
          <source>Unlike other &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; implementations, such as &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, QFile does not emit the &lt;a href=&quot;qiodevice#aboutToClose&quot;&gt;aboutToClose&lt;/a&gt;(), &lt;a href=&quot;qiodevice#bytesWritten&quot;&gt;bytesWritten&lt;/a&gt;(), or &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;() signals. This implementation detail means that QFile is not suitable for reading and writing certain types of files, such as device files on Unix platforms.</source>
          <target state="translated">Unlike other &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; implementations, such as &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt;, QFile does not emit the &lt;a href=&quot;qiodevice#aboutToClose&quot;&gt;aboutToClose&lt;/a&gt;(), &lt;a href=&quot;qiodevice#bytesWritten&quot;&gt;bytesWritten&lt;/a&gt;(), or &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead&lt;/a&gt;() signals. This implementation detail means that QFile is not suitable for reading and writing certain types of files, such as device files on Unix platforms.</target>
        </trans-unit>
        <trans-unit id="297ef39c88514af9cf49e4008074198f716d81db" translate="yes" xml:space="preserve">
          <source>Unlike other Qt classes, &lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt; uses qsizetype as its &lt;code&gt;size_type&lt;/code&gt;, to allow accepting data from &lt;code&gt;std::basic_string&lt;/code&gt; without truncation. The Qt API functions, for example &lt;a href=&quot;qstringview#length&quot;&gt;length&lt;/a&gt;(), return &lt;code&gt;int&lt;/code&gt;, while the STL-compatible functions, for example &lt;a href=&quot;qstringview#size&quot;&gt;size&lt;/a&gt;(), return &lt;code&gt;size_type&lt;/code&gt;.</source>
          <target state="translated">다른 Qt 클래스와 달리 &lt;a href=&quot;qstringview&quot;&gt;QStringView&lt;/a&gt; 는 qsizetype을 &lt;code&gt;size_type&lt;/code&gt; 으로 사용하여 절단없이 &lt;code&gt;std::basic_string&lt;/code&gt; 데이터를 허용 합니다. Qt API 함수 ( 예 : &lt;a href=&quot;qstringview#length&quot;&gt;length&lt;/a&gt; ())는 &lt;code&gt;int&lt;/code&gt; 를 반환 하고 STL 호환 함수 ( 예 : &lt;a href=&quot;qstringview#size&quot;&gt;size&lt;/a&gt; ())는 &lt;code&gt;size_type&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="e2ae5cb20b244ee2b99030f91e0ef094ff543854" translate="yes" xml:space="preserve">
          <source>Unlike other Qt classes, &lt;a href=&quot;qtcore-changes-qt6#qstringview&quot;&gt;QStringView&lt;/a&gt; uses qsizetype as its &lt;code&gt;size_type&lt;/code&gt;, to allow accepting data from &lt;code&gt;std::basic_string&lt;/code&gt; without truncation. The Qt API functions, for example &lt;a href=&quot;qstringview#length&quot;&gt;length&lt;/a&gt;(), return &lt;code&gt;int&lt;/code&gt;, while the STL-compatible functions, for example &lt;a href=&quot;qstringview#size&quot;&gt;size&lt;/a&gt;(), return &lt;code&gt;size_type&lt;/code&gt;.</source>
          <target state="translated">다른 Qt 클래스와 달리 &lt;a href=&quot;qtcore-changes-qt6#qstringview&quot;&gt;QStringView&lt;/a&gt; 는 qsizetype을 &lt;code&gt;size_type&lt;/code&gt; 으로 사용하여 잘림없이 &lt;code&gt;std::basic_string&lt;/code&gt; 데이터를 허용 합니다. Qt API 함수 ( 예 : &lt;a href=&quot;qstringview#length&quot;&gt;length&lt;/a&gt; ())는 &lt;code&gt;int&lt;/code&gt; 를 반환 하고 STL 호환 함수 ( 예 : &lt;a href=&quot;qstringview#size&quot;&gt;size&lt;/a&gt; ())는 &lt;code&gt;size_type&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="6abe2b9307142efbe445d803a3c3c3ada6b9912e" translate="yes" xml:space="preserve">
          <source>Unlike other version functions in &lt;a href=&quot;qsysinfo&quot;&gt;QSysInfo&lt;/a&gt;, &lt;a href=&quot;qoperatingsystemversion&quot;&gt;QOperatingSystemVersion&lt;/a&gt; provides access to the full version number that</source>
          <target state="translated">다른 버전의 기능과는 달리 &lt;a href=&quot;qsysinfo&quot;&gt;QSysInfo&lt;/a&gt; , &lt;a href=&quot;qoperatingsystemversion&quot;&gt;QOperatingSystemVersion은&lt;/a&gt; 전체 버전 번호가에 대한 액세스를 제공합니다</target>
        </trans-unit>
        <trans-unit id="b29c679cfd5d484cca6334b9c894e30771ef409c" translate="yes" xml:space="preserve">
          <source>Unlike other version functions in &lt;a href=&quot;qsysinfo&quot;&gt;QSysInfo&lt;/a&gt;, QOperatingSystemVersion provides access to the full version number that</source>
          <target state="translated">Unlike other version functions in &lt;a href=&quot;qsysinfo&quot;&gt;QSysInfo&lt;/a&gt;, QOperatingSystemVersion provides access to the full version number that</target>
        </trans-unit>
        <trans-unit id="6cebafa7f9f75555ec68b0a40134e8640f07c065" translate="yes" xml:space="preserve">
          <source>Unlike plain C++ arrays, QLists can be resized at any time by calling &lt;a href=&quot;qlist#resize&quot;&gt;resize&lt;/a&gt;(). If the new size is larger than the old size, QList might need to reallocate the whole list. QList tries to reduce the number of reallocations by preallocating up to twice as much memory as the actual data needs.</source>
          <target state="translated">일반 C ++ 배열과 달리 QList는 &lt;a href=&quot;qlist#resize&quot;&gt;resize&lt;/a&gt; () 를 호출하여 언제든지 크기를 조정할 수 있습니다 . 새 크기가 이전 크기보다 크면 QList가 전체 목록을 재 할당해야 할 수 있습니다. QList는 실제 데이터에 필요한 메모리를 최대 두 배까지 사전 할당하여 재 할당 횟수를 줄이려고합니다.</target>
        </trans-unit>
        <trans-unit id="f38366a7e6c5f9b610cbeb6e59174fd06acd3173" translate="yes" xml:space="preserve">
          <source>Unlike plain C++ arrays, QVectors can be resized at any time by calling &lt;a href=&quot;qvector#resize&quot;&gt;resize&lt;/a&gt;(). If the new size is larger than the old size, &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; might need to reallocate the whole vector. &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; tries to reduce the number of reallocations by preallocating up to twice as much memory as the actual data needs.</source>
          <target state="translated">일반 C ++ 배열과 달리 QVector는 &lt;a href=&quot;qvector#resize&quot;&gt;resize&lt;/a&gt; () 를 호출하여 언제든지 크기를 조정할 수 있습니다 . 새 크기가 이전 크기보다 큰 경우 &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; 는 전체 벡터를 다시 할당해야 할 수 있습니다. &lt;a href=&quot;qvector&quot;&gt;QVector&lt;/a&gt; 는 실제 데이터에 필요한 최대 2 배의 메모리를 사전 할당하여 재 할당 횟수를 줄입니다.</target>
        </trans-unit>
        <trans-unit id="cf447cd341e40d62c0b5c7aa8a8afd6cdb783ac3" translate="yes" xml:space="preserve">
          <source>Unlike plain C++ arrays, QVectors can be resized at any time by calling &lt;a href=&quot;qvector#resize&quot;&gt;resize&lt;/a&gt;(). If the new size is larger than the old size, QVector might need to reallocate the whole vector. QVector tries to reduce the number of reallocations by preallocating up to twice as much memory as the actual data needs.</source>
          <target state="translated">Unlike plain C++ arrays, QVectors can be resized at any time by calling &lt;a href=&quot;qvector#resize&quot;&gt;resize&lt;/a&gt;(). If the new size is larger than the old size, QVector might need to reallocate the whole vector. QVector tries to reduce the number of reallocations by preallocating up to twice as much memory as the actual data needs.</target>
        </trans-unit>
        <trans-unit id="9809a86d8912a13d165466024c3ec4fed0b7ad35" translate="yes" xml:space="preserve">
          <source>Unlike queued slots or invoked methods, methods called directly on the &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; object will execute in the thread that calls the method. When subclassing &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt;, keep in mind that the constructor executes in the old thread while &lt;a href=&quot;qthread#run&quot;&gt;run&lt;/a&gt;() executes in the new thread. If a member variable is accessed from both functions, then the variable is accessed from two different threads. Check that it is safe to do so.</source>
          <target state="translated">큐 슬롯 또는 호출 된 메소드와 달리 &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; 객체 에서 직접 호출 된 메소드는 메소드를 호출하는 스레드에서 실행됩니다. &lt;a href=&quot;qthread&quot;&gt;QThread를&lt;/a&gt; 서브 클래 싱 하는 경우 생성자는 이전 스레드에서 &lt;a href=&quot;qthread#run&quot;&gt;실행&lt;/a&gt; 되고 run ()은 새 스레드에서 실행됩니다. 두 함수에서 멤버 변수에 액세스하면 두 개의 다른 스레드에서 변수에 액세스합니다. 그렇게하는 것이 안전한지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="6a3d513964b735c3b35ea540b43705942f519a9d" translate="yes" xml:space="preserve">
          <source>Unlike queued slots or invoked methods, methods called directly on the QThread object will execute in the thread that calls the method. When subclassing QThread, keep in mind that the constructor executes in the old thread while &lt;a href=&quot;qthread#run&quot;&gt;run&lt;/a&gt;() executes in the new thread. If a member variable is accessed from both functions, then the variable is accessed from two different threads. Check that it is safe to do so.</source>
          <target state="translated">Unlike queued slots or invoked methods, methods called directly on the QThread object will execute in the thread that calls the method. When subclassing QThread, keep in mind that the constructor executes in the old thread while &lt;a href=&quot;qthread#run&quot;&gt;run&lt;/a&gt;() executes in the new thread. If a member variable is accessed from both functions, then the variable is accessed from two different threads. Check that it is safe to do so.</target>
        </trans-unit>
        <trans-unit id="1c3fc4f924f0b00b54c003e950e83192ccb43192" translate="yes" xml:space="preserve">
          <source>Unlike signals, method parameter types do not have to be declared as they default to the &lt;code&gt;var&lt;/code&gt; type.</source>
          <target state="translated">신호와 달리 메소드 매개 변수 유형은 기본적으로 &lt;code&gt;var&lt;/code&gt; 유형 으로 선언 될 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="596f1373007e8ace634e3745faf6530cd74e5aa2" translate="yes" xml:space="preserve">
          <source>Unlike the 2D scene graph in Qt Quick, the spatial scene graph exposes resource nodes to the user directly. So for example in Qt Quick, while &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; is public API, there is no &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; that exposes this object directly. Instead the user must either use an Image item, which describes both where the texture comes from as well as how to render it, or write C++ code to operate on the &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; itself. In Qt Quick 3D these resources are exposed directly in the QML API. This is necessary because resources are an important part of the scene state. These resources can be referenced by many objects in the scene: for example, many Materials could use the same Texture. It is also possible to set properties of a Texture at runtime that would directly change how a texture is sampled, for example.</source>
          <target state="translated">Qt Quick의 2D 장면 그래프와 달리 공간 장면 그래프는 리소스 노드를 사용자에게 직접 노출합니다. 예를 들어 Qt Quick에서는 &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; 가 공용 API이지만 이 개체를 직접 노출하는 &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; 이 없습니다 . 대신 사용자는 텍스처의 출처와 렌더링 방법을 모두 설명하는 이미지 항목을 사용하거나 &lt;a href=&quot;qsgtexture&quot;&gt;QSGTexture&lt;/a&gt; 에서 작동하는 C ++ 코드를 작성해야합니다.그 자체. Qt Quick 3D에서 이러한 리소스는 QML API에 직접 노출됩니다. 이는 리소스가 장면 상태의 중요한 부분이기 때문에 필요합니다. 이러한 리소스는 장면의 많은 오브젝트에서 참조 할 수 있습니다. 예를 들어 많은 재질이 동일한 텍스처를 사용할 수 있습니다. 예를 들어 텍스처가 샘플링되는 방식을 직접 변경하는 텍스처 속성을 런타임에 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="25515046266a73432585cab1effb47821bef7bc3" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qbluetoothdevicediscoveryagent#finished&quot;&gt;QBluetoothDeviceDiscoveryAgent::finished&lt;/a&gt;() signal this signal will even be emitted when an error occurred during the service discovery. Therefore it is recommended to check the &lt;a href=&quot;qbluetoothservicediscoveryagent#error&quot;&gt;error&lt;/a&gt;() signal to evaluate the success of the service discovery discovery.</source>
          <target state="translated">&lt;a href=&quot;qbluetoothdevicediscoveryagent#finished&quot;&gt;QBluetoothDeviceDiscoveryAgent :: finished&lt;/a&gt; () 신호 와 달리이 신호는 서비스 검색 중 오류가 발생했을 때에도 발생합니다. 따라서 서비스 발견 발견의 성공을 평가하려면 &lt;a href=&quot;qbluetoothservicediscoveryagent#error&quot;&gt;오류&lt;/a&gt; () 신호 를 점검하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="58ca4d2d93e61e9657b2457b446d024b488312a8" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; overload of &lt;a href=&quot;qcborstreamwriter#append&quot;&gt;append&lt;/a&gt;(), this function is not limited by &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt;'s size limits. However, note that neither &lt;a href=&quot;qcborstreamreader#readByteArray&quot;&gt;QCborStreamReader::readByteArray&lt;/a&gt;() nor &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; support reading CBOR streams with byte arrays larger than 2 GB.</source>
          <target state="translated">&lt;a href=&quot;qcborstreamwriter#append&quot;&gt;append&lt;/a&gt; () 의 &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; 오버로드 와 달리이 함수는 &lt;a href=&quot;qbytearray&quot;&gt;QByteArray&lt;/a&gt; 의 크기 제한에 의해 제한되지 않습니다 . 그러나 &lt;a href=&quot;qcborstreamreader#readByteArray&quot;&gt;QCborStreamReader :: readByteArray&lt;/a&gt; () 또는 &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; 는 2GB보다 큰 바이트 배열의 CBOR 스트림 읽기를 지원 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8dcd6b90627382604bf2a8129dda127b3e9289e7" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qcolor#fromRgb&quot;&gt;fromRgb&lt;/a&gt;() function, the alpha-channel specified by the given &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt; value is included.</source>
          <target state="translated">&lt;a href=&quot;qcolor#fromRgb&quot;&gt;fromRgb&lt;/a&gt; () 함수 와 달리 지정된 &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt; 값으로 지정된 알파 채널 이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="94d1958c3b100af7b2a7facd1b9731cc2d0fac6c" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt; overload of &lt;a href=&quot;qcborstreamwriter#append&quot;&gt;append&lt;/a&gt;(), this function is not limited to 2 GB. However, note that neither &lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader&lt;/a&gt; nor &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; support reading CBOR streams with text strings larger than 2 GB.</source>
          <target state="translated">&lt;a href=&quot;qcborstreamwriter#append&quot;&gt;append&lt;/a&gt; () 의 &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt; 오버로드 와 달리이 함수는 2GB로 제한되지 않습니다. 그러나 &lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader&lt;/a&gt; 나 &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; 는 2GB보다 큰 텍스트 문자열을 가진 CBOR 스트림 읽기를 지원 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="bda3eeabb9514ff86a04e87de6d1c840cc124b15" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt; overload of &lt;a href=&quot;qcborstreamwriter#append&quot;&gt;append&lt;/a&gt;(), this function is not limited to 2 GB. However, note that neither &lt;a href=&quot;qcborstreamreader#readString&quot;&gt;QCborStreamReader::readString&lt;/a&gt;() nor &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; support reading CBOR streams with text strings larger than 2 GB.</source>
          <target state="translated">&lt;a href=&quot;qcborstreamwriter#append&quot;&gt;append&lt;/a&gt; () 의 &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt; 오버로드 와 달리이 함수는 2GB로 제한되지 않습니다. 그러나 &lt;a href=&quot;qcborstreamreader#readString&quot;&gt;QCborStreamReader :: readString&lt;/a&gt; () 또는 &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; 는 2GB보다 큰 텍스트 문자열을 가진 CBOR 스트림 읽기를 지원 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9078bb39cc09f7f4bb829f4a6e097e10bc6f211f" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt; overload of append(), this function is not limited to 2 GB. However, note that neither &lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader&lt;/a&gt; nor &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; support reading CBOR streams with text strings larger than 2 GB.</source>
          <target state="translated">Unlike the &lt;a href=&quot;qlatin1string&quot;&gt;QLatin1String&lt;/a&gt; overload of append(), this function is not limited to 2 GB. However, note that neither &lt;a href=&quot;qcborstreamreader&quot;&gt;QCborStreamReader&lt;/a&gt; nor &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; support reading CBOR streams with text strings larger than 2 GB.</target>
        </trans-unit>
        <trans-unit id="c69d6fc60e20880a8fbe6eb19f795f0beded7d03" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qlocale#uiLanguages&quot;&gt;uiLanguages&lt;/a&gt;() the returned value of the bcp47Name() represents the locale name of the &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; data but not the language the user-interface should be in.</source>
          <target state="translated">&lt;a href=&quot;qlocale#uiLanguages&quot;&gt;uiLanguages&lt;/a&gt; () 와 달리 bcp47Name ()의 리턴 값은 &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; 데이터 의 로케일 이름을 나타내지 만 사용자 인터페이스의 언어는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="11b444e027f8c88f7cc59a066955b306d65dc642" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-colordialog#color-prop&quot;&gt;color&lt;/a&gt; property, the &lt;code&gt;currentColor&lt;/code&gt; property is updated while the user is selecting colors in the dialog, even before the final selection has been made.</source>
          <target state="translated">&lt;a href=&quot;qml-qt-labs-platform-colordialog#color-prop&quot;&gt;색상&lt;/a&gt; 속성 과 달리 &lt;code&gt;currentColor&lt;/code&gt; 속성은 사용자가 대화 상자에서 색상을 선택하는 동안에도 최종 선택을하기 전에 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="1fd3024210b1f9a993ee5a2e8d3efbaae1c307e9" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-colordialog#currentColor-prop&quot;&gt;currentColor&lt;/a&gt; property, the &lt;code&gt;color&lt;/code&gt; property is not updated while the user is selecting colors in the dialog, but only after the final selection has been made. That is, when the user has clicked &lt;b&gt;OK&lt;/b&gt; to accept a color. Alternatively, the &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accepted()&lt;/a&gt; signal can be handled to get the final selection.</source>
          <target state="translated">&lt;a href=&quot;qml-qt-labs-platform-colordialog#currentColor-prop&quot;&gt;currentColor&lt;/a&gt; 속성 과 달리 &lt;code&gt;color&lt;/code&gt; 속성은 사용자가 대화 상자에서 색상을 선택하는 동안 업데이트되지 않고 최종 선택이 완료된 후에 만 ​​업데이트됩니다. 즉, 사용자가 &lt;b&gt;확인&lt;/b&gt; 을 클릭 하여 색상을 수락 한 경우입니다. 또는 &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accept ()&lt;/a&gt; 신호를 처리하여 최종 선택을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc35301a924c19ed2b2a9c685c61352cacfd5445" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFile-prop&quot;&gt;currentFile&lt;/a&gt; property, the &lt;code&gt;file&lt;/code&gt; property is not updated while the user is selecting files in the dialog, but only after the final selection has been made. That is, when the user has clicked &lt;b&gt;OK&lt;/b&gt; to accept a file. Alternatively, the &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accepted()&lt;/a&gt; signal can be handled to get the final selection.</source>
          <target state="translated">&lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFile-prop&quot;&gt;currentFile&lt;/a&gt; 속성 과 달리 &lt;code&gt;file&lt;/code&gt; 속성은 사용자가 대화 상자에서 파일을 선택하는 동안 업데이트되지 않고 최종 선택이 완료된 후에 만 ​​업데이트됩니다. 즉, 사용자가 &lt;b&gt;확인&lt;/b&gt; 을 클릭 하여 파일을 수락 한 경우입니다. 또는 &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accept ()&lt;/a&gt; 신호를 처리하여 최종 선택을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51a3a42fc7ad82c1daf105fed9bbea9f0e7dd9ce" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFiles-prop&quot;&gt;currentFiles&lt;/a&gt; property, the &lt;code&gt;files&lt;/code&gt; property is not updated while the user is selecting files in the dialog, but only after the final selection has been made. That is, when the user has clicked &lt;b&gt;OK&lt;/b&gt; to accept files. Alternatively, the &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accepted()&lt;/a&gt; signal can be handled to get the final selection.</source>
          <target state="translated">&lt;a href=&quot;qml-qt-labs-platform-filedialog#currentFiles-prop&quot;&gt;currentFiles&lt;/a&gt; 속성 과 달리 &lt;code&gt;files&lt;/code&gt; 속성은 사용자가 대화 상자에서 파일을 선택하는 동안 업데이트되지 않고 최종 선택이 완료된 후에 만 ​​업데이트됩니다. 즉, 사용자가 &lt;b&gt;확인&lt;/b&gt; 을 클릭 하여 파일을 수락 한 경우입니다. 또는 &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accept ()&lt;/a&gt; 신호를 처리하여 최종 선택을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="deed6322f8a21f6e3c6a3df8bc3275a852f7d42b" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-filedialog#file-prop&quot;&gt;file&lt;/a&gt; property, the &lt;code&gt;currentFile&lt;/code&gt; property is updated while the user is selecting files in the dialog, even before the final selection has been made.</source>
          <target state="translated">&lt;a href=&quot;qml-qt-labs-platform-filedialog#file-prop&quot;&gt;파일&lt;/a&gt; 속성 과 달리 &lt;code&gt;currentFile&lt;/code&gt; 속성은 최종 선택을하기 전에도 사용자가 대화 상자에서 파일을 선택하는 동안 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="bb9f7d6a5adaaba9c6fdd0ed0038e8f9a493a96a" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-filedialog#files-prop&quot;&gt;files&lt;/a&gt; property, the &lt;code&gt;currentFiles&lt;/code&gt; property is updated while the user is selecting files in the dialog, even before the final selection has been made.</source>
          <target state="translated">&lt;a href=&quot;qml-qt-labs-platform-filedialog#files-prop&quot;&gt;files&lt;/a&gt; 속성 과 달리 &lt;code&gt;currentFiles&lt;/code&gt; 속성은 최종 선택을하기 전에도 사용자가 대화 상자에서 파일을 선택하는 동안 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="06d249183341a2c8d3aede959236848ec5371d54" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-folderdialog#currentFolder-prop&quot;&gt;currentFolder&lt;/a&gt; property, the &lt;code&gt;folder&lt;/code&gt; property is not updated while the user is selecting folders in the dialog, but only after the final selection has been made. That is, when the user has clicked &lt;b&gt;OK&lt;/b&gt; to accept a folder. Alternatively, the &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accepted()&lt;/a&gt; signal can be handled to get the final selection.</source>
          <target state="translated">&lt;a href=&quot;qml-qt-labs-platform-folderdialog#currentFolder-prop&quot;&gt;currentFolder&lt;/a&gt; 속성 과 달리, &lt;code&gt;folder&lt;/code&gt; 속성은 사용자가 대화 상자에서 폴더를 선택하는 동안 업데이트되지 않고 최종 선택이 완료된 후에 만 ​​업데이트됩니다. 즉, 사용자가 &lt;b&gt;확인&lt;/b&gt; 을 클릭 하여 폴더를 수락 한 경우입니다. 또는 &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accept ()&lt;/a&gt; 신호를 처리하여 최종 선택을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3344c27346b17b3b58e163aefe68aea5550b05f" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-folderdialog#folder-prop&quot;&gt;folder&lt;/a&gt; property, the &lt;code&gt;currentFolder&lt;/code&gt; property is updated while the user is selecting folders in the dialog, even before the final selection has been made.</source>
          <target state="translated">&lt;a href=&quot;qml-qt-labs-platform-folderdialog#folder-prop&quot;&gt;폴더&lt;/a&gt; 속성 과 달리 &lt;code&gt;currentFolder&lt;/code&gt; 속성은 최종 선택을하기 전에도 사용자가 대화 상자에서 폴더를 선택하는 동안 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="05423263e62c25e58b5c8486967c863d37b17cc2" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-fontdialog#currentFont-prop&quot;&gt;currentFont&lt;/a&gt; property, the &lt;code&gt;font&lt;/code&gt; property is not updated while the user is selecting fonts in the dialog, but only after the final selection has been made. That is, when the user has clicked &lt;b&gt;OK&lt;/b&gt; to accept a font. Alternatively, the &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accepted()&lt;/a&gt; signal can be handled to get the final selection.</source>
          <target state="translated">&lt;a href=&quot;qml-qt-labs-platform-fontdialog#currentFont-prop&quot;&gt;currentFont&lt;/a&gt; 속성 과 달리 &lt;code&gt;font&lt;/code&gt; 속성은 사용자가 대화 상자에서 글꼴을 선택하는 동안 업데이트되지 않고 최종 선택이 완료된 후에 만 ​​업데이트됩니다. 즉, 사용자가 &lt;b&gt;확인&lt;/b&gt; 을 클릭 하여 글꼴을 승인 한 경우입니다. 또는 &lt;a href=&quot;qml-qt-labs-platform-dialog#accepted-signal&quot;&gt;accept ()&lt;/a&gt; 신호를 처리하여 최종 선택을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34b17c96473f1ca98de9691c62d66b940bc01e35" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qt-labs-platform-fontdialog#font-prop&quot;&gt;font&lt;/a&gt; property, the &lt;code&gt;currentFont&lt;/code&gt; property is updated while the user is selecting fonts in the dialog, even before the final selection has been made.</source>
          <target state="translated">&lt;a href=&quot;qml-qt-labs-platform-fontdialog#font-prop&quot;&gt;글꼴&lt;/a&gt; 속성 과 달리 &lt;code&gt;currentFont&lt;/code&gt; 속성은 사용자가 대화 상자에서 글꼴을 선택하는 동안 최종 선택을하기 전에도 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="527968425300c09b06d377351bd3718e6efa8549" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;height&lt;/a&gt; properties, which scale the painting of the image, this property sets the actual number of pixels stored for the loaded image so that large images do not use more memory than necessary. For example, this ensures the image in memory is no larger than 1024x1024 pixels, regardless of the Image's &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;height&lt;/a&gt; values:</source>
          <target state="translated">이미지 그림의 크기를 &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;조절&lt;/a&gt; 하는 &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;너비&lt;/a&gt; 및 높이 속성 과 달리이 속성은로드 된 이미지에 저장된 실제 픽셀 수를 설정하여 큰 이미지가 필요한 것보다 더 많은 메모리를 사용하지 않도록합니다. 예를 들어, 이렇게하면 이미지의 &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;너비&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;높이&lt;/a&gt; 값에 관계없이 메모리의 이미지가 1024x1024 픽셀보다 크지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c9cfc45e1714c68cde96aa48259a1acf12012197" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;height&lt;/a&gt; properties, which scale the painting of the image, this property sets the maximum number of pixels stored for the loaded image so that large images do not use more memory than necessary. For example, this ensures the image in memory is no larger than 1024x1024 pixels, regardless of the Image's &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;height&lt;/a&gt; values:</source>
          <target state="translated">Unlike the &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;height&lt;/a&gt; properties, which scale the painting of the image, this property sets the maximum number of pixels stored for the loaded image so that large images do not use more memory than necessary. For example, this ensures the image in memory is no larger than 1024x1024 pixels, regardless of the Image's &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;height&lt;/a&gt; values:</target>
        </trans-unit>
        <trans-unit id="5006ab30bd6a362dc8d1fa834d59a2c58d40698b" translate="yes" xml:space="preserve">
          <source>Unlike the C++ item views such as &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; or &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt;, the &lt;code&gt;setData()&lt;/code&gt; method must be explicitly invoked from QML delegates whenever appropriate. This is done by simply assigning a new value to the corresponding model property.</source>
          <target state="translated">같은 C ++ 상품보기 달리 &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; 또는 &lt;a href=&quot;qtableview&quot;&gt;QTableView&lt;/a&gt; 상기 &lt;code&gt;setData()&lt;/code&gt; 메소드는 명시마다 적절한 QML 위임에서 호출되어야한다. 이는 단순히 해당 모델 속성에 새 값을 할당하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="643229be8682a0e3b2a521c11ffa048218ce3fc6" translate="yes" xml:space="preserve">
          <source>Unlike the Model-View-Controller pattern, the model/view design does not include a completely separate component for managing interaction with the user. Generally, the view is responsible for the presentation of model data to the user, and for processing user input. To allow some flexibility in the way this input is obtained, the interaction is performed by delegates. These components provide input capabilities and are also responsible for rendering individual items in some views. The standard interface for controlling delegates is defined in the &lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; class.</source>
          <target state="translated">Model-View-Controller 패턴과 달리 모델 / 뷰 디자인에는 사용자와의 상호 작용을 관리하기위한 완전히 별도의 구성 요소가 포함되어 있지 않습니다. 일반적으로 뷰는 모델 데이터를 사용자에게 제시하고 사용자 입력을 처리합니다. 이 입력을 얻는 방식에 약간의 유연성을 허용하기 위해 델리게이트가 상호 작용을 수행합니다. 이러한 구성 요소는 입력 기능을 제공하며 일부보기에서 개별 항목을 렌더링하는 역할도합니다. 델리게이트 제어를위한 표준 인터페이스는 &lt;a href=&quot;qabstractitemdelegate&quot;&gt;QAbstractItemDelegate&lt;/a&gt; 클래스에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c039754822dd3114359305ee7224dd7fbc58ea84" translate="yes" xml:space="preserve">
          <source>Unlike the default OpenGL Renderer, there is no built-in support to acquire an &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; context. This means that the renderer is responsible for requesting and managing the the current context. To do this, you use EGL directly in the &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; renderer. Consequently, the &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; renderer can only be used with platform plugins that support creating QWindows with support for &lt;a href=&quot;qsurfaceformat#RenderableType-enum&quot;&gt;QSurfaceFormat::OpenVG&lt;/a&gt;. From this window, the renderer can get an EGLSurface which can then be used with an EGLContext to render &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; content.</source>
          <target state="translated">기본 OpenGL 렌더러와 달리 &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; 컨텍스트 를 획득하기위한 기본 지원 기능은 없습니다 . 이는 렌더러가 현재 컨텍스트를 요청하고 관리 할 책임이 있음을 의미합니다. 이를 위해 &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; 렌더러 에서 직접 EGL을 사용 합니다. 결과적으로 &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; 렌더러는 &lt;a href=&quot;qsurfaceformat#RenderableType-enum&quot;&gt;QSurfaceFormat :: OpenVG&lt;/a&gt; 를 지원하는 QWindows 작성을 지원하는 플랫폼 플러그인에서만 사용할 수 있습니다 . 이 창에서 렌더러는 EGLSurface를 가져 와서 EGLContext와 함께 사용하여 &lt;a href=&quot;qtquick-visualcanvas-adaptations#openvg&quot;&gt;OpenVG&lt;/a&gt; 컨텐츠 를 렌더링 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="840d6573b6cc707850b0980389fb76b1ae563277" translate="yes" xml:space="preserve">
          <source>Unlike the default delegate, &lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;QSqlRelationalDelegate&lt;/a&gt; provides a combobox for fields that are foreign keys into other tables. To use the class, simply call &lt;a href=&quot;qabstractitemview#setItemDelegate&quot;&gt;QAbstractItemView::setItemDelegate&lt;/a&gt;() on the view with an instance of &lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;QSqlRelationalDelegate&lt;/a&gt;:</source>
          <target state="translated">기본 대리자와 달리 &lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;QSqlRelationalDelegate&lt;/a&gt; 는 다른 테이블에 대한 외래 키인 필드에 콤보 상자를 제공합니다. 클래스를 사용하려면 &lt;a href=&quot;qabstractitemview#setItemDelegate&quot;&gt;QSqlRelationalDelegate&lt;/a&gt; 인스턴스가있는 뷰에서 QAbstractItemView :: setItemDelegate ()를 호출하면 &lt;a href=&quot;qsqlrelationaldelegate&quot;&gt;됩니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c4d1c5283532d6dbaa0befbd19b5fadc76e9e1e0" translate="yes" xml:space="preserve">
          <source>Unlike the default delegate, QSqlRelationalDelegate provides a combobox for fields that are foreign keys into other tables. To use the class, simply call &lt;a href=&quot;qabstractitemview#setItemDelegate&quot;&gt;QAbstractItemView::setItemDelegate&lt;/a&gt;() on the view with an instance of QSqlRelationalDelegate:</source>
          <target state="translated">Unlike the default delegate, QSqlRelationalDelegate provides a combobox for fields that are foreign keys into other tables. To use the class, simply call &lt;a href=&quot;qabstractitemview#setItemDelegate&quot;&gt;QAbstractItemView::setItemDelegate&lt;/a&gt;() on the view with an instance of QSqlRelationalDelegate:</target>
        </trans-unit>
        <trans-unit id="e63ea523e2acae771407cbf1ba2fc3df1eadb821" translate="yes" xml:space="preserve">
          <source>Unlike the earlier OpenGL-only world of Qt 5, rendering with other graphics APIs requires more well-defined points of starting and ending a frame. When manually driving the rendering loop via &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt;, it now falls to the user of &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt; to specify these points.</source>
          <target state="translated">Qt 5의 이전 OpenGL 전용 세계와 달리 다른 그래픽 API로 렌더링하려면 프레임을 시작하고 종료하는 더 잘 정의 된 지점이 필요합니다. &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl을&lt;/a&gt; 통해 렌더링 루프를 수동으로 구동 할 때 이제 이러한 점을 지정하는 것은 &lt;a href=&quot;qquickrendercontrol&quot;&gt;QQuickRenderControl&lt;/a&gt; 사용자에게 맡겨 집니다.</target>
        </trans-unit>
        <trans-unit id="a9c044a53a0af26249cede66fb2f542d75a89cac" translate="yes" xml:space="preserve">
          <source>Unlike the other overload, this function can be used to perform perspective transformations on images.</source>
          <target state="translated">다른 과부하와 달리이 기능을 사용하여 이미지에 대한 원근 변환을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8af99dd2fe25058e35366a4d45bcb4f7134c4ec1" translate="yes" xml:space="preserve">
          <source>Unlike the other overload, this function creates transformation matrices that can be used to perform perspective transformations on images.</source>
          <target state="translated">다른 과부하와 달리이 함수는 이미지에서 원근 변환을 수행하는 데 사용할 수있는 변환 행렬을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="75b95af1c0e9c60f090d800df1094aaed050b52c" translate="yes" xml:space="preserve">
          <source>Unlike the other similar signals, this one is emitted on the GUI thread instead of the render thread. It can be used to synchronize external animation systems with the QML content. At the same time this means that this signal is not suitable for triggering graphics operations.</source>
          <target state="translated">다른 유사한 신호와 달리이 신호는 렌더 스레드 대신 GUI 스레드에서 방출됩니다. 외부 애니메이션 시스템을 QML 콘텐츠와 동기화하는 데 사용할 수 있습니다. 동시에 이것은이 신호가 그래픽 작업을 트리거하는 데 적합하지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="1b5aeff8abf9f826690f0ef1e92b5102080f5325" translate="yes" xml:space="preserve">
          <source>Unlike the other similar signals, this one is emitted on the gui thread instead of the render thread. It can be used to synchronize external animation systems with the QML content.</source>
          <target state="translated">다른 유사한 신호와 달리이 신호는 렌더 스레드 대신 GUI 스레드에서 방출됩니다. 외부 애니메이션 시스템을 QML 컨텐츠와 동기화하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb5fc594b1feec00bd5e274e82ee1a73f71d4e09" translate="yes" xml:space="preserve">
          <source>Unlike the other similar signals, this one is emitted on the gui thread instead of the render thread. It can be used to synchronize external animation systems with the QML content. At the same time this means that this signal is not suitable for triggering graphics operations.</source>
          <target state="translated">Unlike the other similar signals, this one is emitted on the gui thread instead of the render thread. It can be used to synchronize external animation systems with the QML content. At the same time this means that this signal is not suitable for triggering graphics operations.</target>
        </trans-unit>
        <trans-unit id="570d6bb6272b7eb218d8a793f5b7dbeed8996616" translate="yes" xml:space="preserve">
          <source>Unlike the similar &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; constructor that takes a non-const data buffer, this version will never alter the contents of the buffer. For example, calling &lt;a href=&quot;qimage#bits&quot;&gt;QImage::bits&lt;/a&gt;() will return a deep copy of the image, rather than the buffer passed to the constructor. This allows for the efficiency of constructing a &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; from raw data, without the possibility of the raw data being changed.</source>
          <target state="translated">&lt;a href=&quot;qimage&quot;&gt;상수&lt;/a&gt; 가 아닌 데이터 버퍼를 사용 하는 유사한 QImage 생성자 와 달리이 버전은 버퍼의 내용을 변경하지 않습니다. 예를 들어, &lt;a href=&quot;qimage#bits&quot;&gt;QImage :: bits&lt;/a&gt; ()를 호출 하면 생성자에 전달 된 버퍼가 아니라 이미지의 깊은 사본이 반환됩니다. 따라서 원시 데이터를 변경할 필요없이 원시 데이터에서 &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; 를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f143779d0e26db85aa59f122bbf9bc9939f8ece5" translate="yes" xml:space="preserve">
          <source>Unlike the similar QImage constructor that takes a non-const data buffer, this version will never alter the contents of the buffer. For example, calling &lt;a href=&quot;qimage#bits&quot;&gt;QImage::bits&lt;/a&gt;() will return a deep copy of the image, rather than the buffer passed to the constructor. This allows for the efficiency of constructing a QImage from raw data, without the possibility of the raw data being changed.</source>
          <target state="translated">Unlike the similar QImage constructor that takes a non-const data buffer, this version will never alter the contents of the buffer. For example, calling &lt;a href=&quot;qimage#bits&quot;&gt;QImage::bits&lt;/a&gt;() will return a deep copy of the image, rather than the buffer passed to the constructor. This allows for the efficiency of constructing a QImage from raw data, without the possibility of the raw data being changed.</target>
        </trans-unit>
        <trans-unit id="8ba1f43513e91d2d0dbbdf209bf13c8093c94912" translate="yes" xml:space="preserve">
          <source>Unlike the slider, &lt;a href=&quot;qdial&quot;&gt;QDial&lt;/a&gt; attempts to draw a &quot;nice&quot; number of notches rather than one per line step. If possible, the number of notches drawn is one per line step, but if there aren't enough pixels to draw every one, &lt;a href=&quot;qdial&quot;&gt;QDial&lt;/a&gt; will skip notches to try and draw a uniform set (e.g. by drawing every second or third notch).</source>
          <target state="translated">슬라이더와 달리 &lt;a href=&quot;qdial&quot;&gt;QDial&lt;/a&gt; 은 라인 단계 당 하나가 아닌 &quot;좋은&quot;수의 노치를 그리려고 시도합니다. 가능한 경우, 그려지는 노치의 수는 라인 단계 당 하나이지만, 매 픽셀을 그릴 수있는 픽셀이 충분하지 않으면 &lt;a href=&quot;qdial&quot;&gt;QDial&lt;/a&gt; 은 노치를 건너 뛰어 균일 한 세트를 그리려고 시도합니다 (예 : 매초 또는 세 번째 노치마다 그리기).</target>
        </trans-unit>
        <trans-unit id="61249a713bbc8745e0574797bb85d378ada436a4" translate="yes" xml:space="preserve">
          <source>Unlike the slider, QDial attempts to draw a &quot;nice&quot; number of notches rather than one per line step. If possible, the number of notches drawn is one per line step, but if there aren't enough pixels to draw every one, QDial will skip notches to try and draw a uniform set (e.g. by drawing every second or third notch).</source>
          <target state="translated">Unlike the slider, QDial attempts to draw a &quot;nice&quot; number of notches rather than one per line step. If possible, the number of notches drawn is one per line step, but if there aren't enough pixels to draw every one, QDial will skip notches to try and draw a uniform set (e.g. by drawing every second or third notch).</target>
        </trans-unit>
        <trans-unit id="dfc5640307214c31456e7eedf0e2205ade976a62" translate="yes" xml:space="preserve">
          <source>Unlike the window managers for top-level windows, all window flags (&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::WindowFlags&lt;/a&gt;) are supported by &lt;a href=&quot;qmdiarea&quot;&gt;QMdiArea&lt;/a&gt; as long as the flags are supported by the current widget style. If a specific flag is not supported by the style (e.g., the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;WindowShadeButtonHint&lt;/a&gt;), you can still shade the window with showShaded().</source>
          <target state="translated">최상위 창에 대한 창 관리자와 달리, 모든 창 플래그 ( &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: WindowFlags&lt;/a&gt; )는 현재 위젯 스타일에서 플래그가 지원 되는 한 &lt;a href=&quot;qmdiarea&quot;&gt;QMdiArea&lt;/a&gt; 에서 지원됩니다. 특정 플래그가 스타일에서 지원되지 않는 경우 (예 : &lt;a href=&quot;qt#WindowType-enum&quot;&gt;WindowShadeButtonHint&lt;/a&gt; ) showShaded ()로 창을 음영 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="4540acf6c3b750e35a80ff08bef31ae92fd42446" translate="yes" xml:space="preserve">
          <source>Unlike the window managers for top-level windows, all window flags (&lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::WindowFlags&lt;/a&gt;) are supported by QMdiArea as long as the flags are supported by the current widget style. If a specific flag is not supported by the style (e.g., the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;WindowShadeButtonHint&lt;/a&gt;), you can still shade the window with showShaded().</source>
          <target state="translated">최상위 창에 대한 창 관리자와 달리, 현재 위젯 스타일에서 플래그를 지원하는 한 모든 창 플래그 ( &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: WindowFlags&lt;/a&gt; )는 QMdiArea에서 지원됩니다. 특정 플래그가 스타일 (예 : &lt;a href=&quot;qt#WindowType-enum&quot;&gt;WindowShadeButtonHint&lt;/a&gt; )에서 지원되지 않는 경우 에도 showShaded ()를 사용하여 창을 음영 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="96efb5d5b925c09c87e082ce802ca40cbbf8f9e4" translate="yes" xml:space="preserve">
          <source>Unlike views like &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;, however, there is always a current item (when the model isn't empty). This means that when &lt;a href=&quot;qml-qtquick-controls2-tumbler#count-prop&quot;&gt;count&lt;/a&gt; is equal to &lt;code&gt;0&lt;/code&gt;, &lt;a href=&quot;qml-qtquick-controls2-tumbler#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; will be &lt;code&gt;-1&lt;/code&gt;. In all other cases, it will be greater than or equal to &lt;code&gt;0&lt;/code&gt;.</source>
          <target state="translated">그러나 &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; 와 같은 뷰와 달리 항상 현재 항목이 있습니다 (모델이 비어 있지 않은 경우). 이것은 &lt;a href=&quot;qml-qtquick-controls2-tumbler#count-prop&quot;&gt;count&lt;/a&gt; 가 &lt;code&gt;0&lt;/code&gt; 일 &lt;a href=&quot;qml-qtquick-controls2-tumbler#currentIndex-prop&quot;&gt;때 currentIndex&lt;/a&gt; 는 &lt;code&gt;-1&lt;/code&gt; 이됨을 의미합니다 . 다른 모든 경우에는 &lt;code&gt;0&lt;/code&gt; 보다 크거나 같습니다 .</target>
        </trans-unit>
        <trans-unit id="56c341e7960818b920c9bd4861e55dd836a601e8" translate="yes" xml:space="preserve">
          <source>Unlike when using normal class instances (with independent properties and signal emissions), QtRO automatically synchronizes changes to the shared object across all of its copies. With a few exceptions, these copies have the identical Qt API as the original object, and are meant to be used exactly as if the original object were available.</source>
          <target state="translated">일반 클래스 인스턴스 (독립 속성 및 신호 방출 포함)를 사용할 때와 달리 QtRO는 모든 복사본에서 공유 객체의 변경 사항을 자동으로 동기화합니다. 몇 가지 예외를 제외하고 이러한 복사본은 원본 개체와 동일한 Qt API를 가지며 원본 개체를 사용할 수있는 것처럼 정확하게 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fcced5b27282a2462513863183b0582449a58463" translate="yes" xml:space="preserve">
          <source>Unlike widgets, QWindows receive touch events always, there is no need to opt in. When working directly with a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt;, it is enough to reimplement &lt;a href=&quot;qwindow#touchEvent&quot;&gt;QWindow::touchEvent&lt;/a&gt;().</source>
          <target state="translated">위젯과 달리 QWindows는 항상 터치 이벤트를 수신하므로 옵트 인 할 필요가 없습니다. &lt;a href=&quot;qwindow&quot;&gt;QWindow로&lt;/a&gt; 직접 작업하는 경우 &lt;a href=&quot;qwindow#touchEvent&quot;&gt;QWindow :: touchEvent&lt;/a&gt; () 를 다시 구현 하면 충분합니다 .</target>
        </trans-unit>
        <trans-unit id="a0d672469a9d88e358d4e2e20255b6ca5f54a8cf" translate="yes" xml:space="preserve">
          <source>Unlike with the destructor, it is expected that &lt;a href=&quot;qsgrendernode#render&quot;&gt;render&lt;/a&gt;() can reinitialize all resources it needs when called after a call to releaseResources().</source>
          <target state="translated">소멸자와 달리 &lt;a href=&quot;qsgrendernode#render&quot;&gt;render&lt;/a&gt; ()는 releaseResources ()를 호출 한 후 호출 될 때 필요한 모든 리소스를 다시 초기화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba962d0e63f3a134b2cfb98e50ae96ad9f987972" translate="yes" xml:space="preserve">
          <source>Unloaded items are forced to load.</source>
          <target state="translated">언로드 된 항목은 강제로로드됩니다.</target>
        </trans-unit>
        <trans-unit id="13c4d22c866edcf41aac3d498ad31046d2f88d1e" translate="yes" xml:space="preserve">
          <source>Unloaded items are skipped (the callback function is not called for them).</source>
          <target state="translated">언로드 된 항목은 건너 뜁니다 (콜백 함수는 호출되지 않음).</target>
        </trans-unit>
        <trans-unit id="c1df3bc87d16d0ffb8a9f28c369808ceeda2f51f" translate="yes" xml:space="preserve">
          <source>UnloadedState</source>
          <target state="translated">UnloadedState</target>
        </trans-unit>
        <trans-unit id="7b8e8a6a43298e2055f5af5c0957994977865816" translate="yes" xml:space="preserve">
          <source>UnloadedStatus</source>
          <target state="translated">UnloadedStatus</target>
        </trans-unit>
        <trans-unit id="e688cda8fecf27364fee4ddd8ef759a05a1d2c24" translate="yes" xml:space="preserve">
          <source>UnloadingStatus</source>
          <target state="translated">UnloadingStatus</target>
        </trans-unit>
        <trans-unit id="84e112125bad0eef44f6e5312c6bc3116f46c462" translate="yes" xml:space="preserve">
          <source>Unloads the</source>
          <target state="translated">언로드</target>
        </trans-unit>
        <trans-unit id="2c077e7ac2a6d33e9f2965084f6b988c6fce52da" translate="yes" xml:space="preserve">
          <source>Unloads the &lt;code&gt;image&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;image&lt;/code&gt; 언로드합니다 .</target>
        </trans-unit>
        <trans-unit id="894b9748cf0a5ae5e47b9ddb2df9343ab32164c7" translate="yes" xml:space="preserve">
          <source>Unloads the library and returns &lt;code&gt;true&lt;/code&gt; if the library could be unloaded; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">라이브러리를 언로드하고 라이브러리를 언로드 할 수 있으면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3e3adfed6c7f2f9aeb841bd7477d6e7564f7502a" translate="yes" xml:space="preserve">
          <source>Unloads the plugin and returns &lt;code&gt;true&lt;/code&gt; if the plugin could be unloaded; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">플러그인을 언로드하고 플러그인을 언로드 할 수 있으면 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="38a20f2547d07e795cf89a7c8ec3a24aa9f0dd11" translate="yes" xml:space="preserve">
          <source>Unloads the resources specified by the &lt;code&gt;.qrc&lt;/code&gt; file with the base name</source>
          <target state="translated">기본 이름으로 &lt;code&gt;.qrc&lt;/code&gt; 파일로 지정된 자원을 언로드합니다.</target>
        </trans-unit>
        <trans-unit id="abe4bd6afda2f98096dde4c06f5468a68e1d16b8" translate="yes" xml:space="preserve">
          <source>Unlock all the requested camera locks.</source>
          <target state="translated">요청 된 모든 카메라 잠금을 잠금 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="d5a32c6628de8ad478d6162b608a5ff67d42a28c" translate="yes" xml:space="preserve">
          <source>Unlock camera</source>
          <target state="translated">카메라 잠금 해제</target>
        </trans-unit>
        <trans-unit id="5a37caff551f6ac94b0760b18aaf4d01897d9277" translate="yes" xml:space="preserve">
          <source>Unlock focus, exposure and white balance locks.</source>
          <target state="translated">초점, 노출 및 화이트 밸런스 잠금을 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="b75c53c1c77c226c09b32d92059818fdc52ccb32" translate="yes" xml:space="preserve">
          <source>Unlockable products are products that a user will buy once, and the purchase of these items will be persistent. It can typically be used for things like unlocking content or functionality in the application.</source>
          <target state="translated">잠금 해제 가능한 제품은 사용자가 한 번 구매하는 제품이며 이러한 품목의 구매는 지속적입니다. 일반적으로 응용 프로그램의 컨텐츠 또는 기능 잠금 해제와 같은 작업에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3da702582963ef24ed50bd2008f4d028a127a2b" translate="yes" xml:space="preserve">
          <source>Unlocked</source>
          <target state="translated">Unlocked</target>
        </trans-unit>
        <trans-unit id="a05c9ca3c5c3c56a04c3ac34ff43323d2705b7eb" translate="yes" xml:space="preserve">
          <source>Unlocks the camera settings specified with</source>
          <target state="translated">로 지정된 카메라 설정을 잠금 해제합니다</target>
        </trans-unit>
        <trans-unit id="c477c5a0088240e0b739f97c3391de959665a3e5" translate="yes" xml:space="preserve">
          <source>Unlocks the lock associated with this locker.</source>
          <target state="translated">이 사물함과 연관된 잠금을 잠금 해제합니다.</target>
        </trans-unit>
        <trans-unit id="f07ed116ac50190dd65d6c562ef2964933d5ee3e" translate="yes" xml:space="preserve">
          <source>Unlocks the lock.</source>
          <target state="translated">잠금을 해제합니다.</target>
        </trans-unit>
        <trans-unit id="81f5863d91739b18044814777dec3259d97635a7" translate="yes" xml:space="preserve">
          <source>Unlocks the mutex. Attempting to unlock a mutex in a different thread to the one that locked it results in an error. Unlocking a mutex that is not locked results in undefined behavior.</source>
          <target state="translated">뮤텍스를 잠금 해제합니다. 잠긴 것과 다른 스레드에서 뮤텍스를 잠금 해제하려고하면 오류가 발생합니다. 잠기지 않은 뮤텍스를 잠금 해제하면 정의되지 않은 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9fc8792f4add5b5150dc07fb2cf17a0f9840142c" translate="yes" xml:space="preserve">
          <source>Unlocks this mutex locker. You can use &lt;code&gt;relock()&lt;/code&gt; to lock it again. It does not need to be locked when destroyed.</source>
          <target state="translated">이 뮤텍스 로커를 잠금 해제합니다. &lt;code&gt;relock()&lt;/code&gt; 을 사용하여 다시 잠글 수 있습니다 . 파괴 될 때 잠글 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="847aa7a653c418d30dab6e9c116bf815e76e1f88" translate="yes" xml:space="preserve">
          <source>Unmaps the buffer after it was mapped into the application's memory space with a previous call to &lt;a href=&quot;qopenglbuffer#map&quot;&gt;map&lt;/a&gt;(). Returns &lt;code&gt;true&lt;/code&gt; if the unmap succeeded; false otherwise.</source>
          <target state="translated">이전에 &lt;a href=&quot;qopenglbuffer#map&quot;&gt;map&lt;/a&gt; ()을 호출하여 버퍼를 응용 프로그램의 메모리 공간에 매핑 한 후 버퍼를 매핑 해제합니다 . 매핑 해제에 성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그렇지 않으면 거짓.</target>
        </trans-unit>
        <trans-unit id="e462650988a80963e39388724785d23c918b819c" translate="yes" xml:space="preserve">
          <source>Unmaps the memory</source>
          <target state="translated">메모리를 매핑 해제합니다</target>
        </trans-unit>
        <trans-unit id="74902d590f1a3cdf86b22bc77ca15a1512fe5dd0" translate="yes" xml:space="preserve">
          <source>Unoptimized images can hurt the performance of your application in several ways:</source>
          <target state="translated">최적화되지 않은 이미지는 여러 가지 방식으로 애플리케이션의 성능을 저하시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbff9a36f98f283c6c4b3c4c59a263b75369225f" translate="yes" xml:space="preserve">
          <source>Unordered list</source>
          <target state="translated">정렬되지 않은 목록</target>
        </trans-unit>
        <trans-unit id="55a51ab264ac917bf1d988309d9b43b5ed813689" translate="yes" xml:space="preserve">
          <source>Unqualified accesses of properties.</source>
          <target state="translated">속성에 대한 비정규 액세스.</target>
        </trans-unit>
        <trans-unit id="3e4e8daaf712043cdbd0ee40ed5df085f3bde8b2" translate="yes" xml:space="preserve">
          <source>Unregister &lt;code&gt;object&lt;/code&gt; from the exclusive group.</source>
          <target state="translated">독점 그룹에서 &lt;code&gt;object&lt;/code&gt; 를 등록 취소 합니다 .</target>
        </trans-unit>
        <trans-unit id="67db567367a785cc6a9ac55654408ad2e48c2f8a" translate="yes" xml:space="preserve">
          <source>Unregister the COM server</source>
          <target state="translated">COM 서버 등록 해제</target>
        </trans-unit>
        <trans-unit id="3bd26ccf9401e8382ef5eeb2ad223b37be05e3ab" translate="yes" xml:space="preserve">
          <source>Unregister the backend for</source>
          <target state="translated">백엔드 등록 해제</target>
        </trans-unit>
        <trans-unit id="046193cf3a8f164eda5a96a8693a5763b9db0580" translate="yes" xml:space="preserve">
          <source>Unregister the extension specified by the given</source>
          <target state="translated">지정된 확장명을 등록 취소합니다</target>
        </trans-unit>
        <trans-unit id="2bd1e8cda86cda8a9f15760c98643c3c864fe1e3" translate="yes" xml:space="preserve">
          <source>Unregister the given</source>
          <target state="translated">주어진 등록을 취소하십시오</target>
        </trans-unit>
        <trans-unit id="db2fb50d932055ec1a171e46726487ba1ec1f6bc" translate="yes" xml:space="preserve">
          <source>Unregisters</source>
          <target state="translated">Unregisters</target>
        </trans-unit>
        <trans-unit id="96b0d4273c66718b573767e682af10def5f7ee0e" translate="yes" xml:space="preserve">
          <source>Unregisters all gesture recognizers of the specified</source>
          <target state="translated">지정된 모든 제스처 인식기를 등록 취소합니다</target>
        </trans-unit>
        <trans-unit id="50054668b28bb699d982ac1967ffecad74c661e2" translate="yes" xml:space="preserve">
          <source>Unregisters all the timers associated with the given</source>
          <target state="translated">주어진 것과 관련된 모든 타이머를 등록 해제합니다</target>
        </trans-unit>
        <trans-unit id="8297d9b64a6517dfdb836f8778d0abb81f8f995e" translate="yes" xml:space="preserve">
          <source>Unregisters an object that was registered with the &lt;a href=&quot;qdbusconnection#registerObject&quot;&gt;registerObject&lt;/a&gt;() at the object path given by</source>
          <target state="translated">주어진 객체 경로에서 &lt;a href=&quot;qdbusconnection#registerObject&quot;&gt;registerObject&lt;/a&gt; () 로 등록 된 객체를 등록 해제합니다.</target>
        </trans-unit>
        <trans-unit id="0091f9df1a0610deaa75628a129f02c8e2b8eef1" translate="yes" xml:space="preserve">
          <source>Unregisters and deletes the aspect with the given</source>
          <target state="translated">지정된 측면을 등록 취소하고 삭제합니다</target>
        </trans-unit>
        <trans-unit id="65a93df0ea2366ec048bad1c2ce3e8865cbc4c92" translate="yes" xml:space="preserve">
          <source>Unregisters and deletes the given</source>
          <target state="translated">주어진 등록을 취소하고 삭제합니다</target>
        </trans-unit>
        <trans-unit id="ce25eee4f0c3def4856f9edee68adb9a69fe59db" translate="yes" xml:space="preserve">
          <source>Unregisters any additional values for the class</source>
          <target state="translated">클래스에 대한 추가 값을 등록 취소합니다</target>
        </trans-unit>
        <trans-unit id="b53bd319de1b349507bd57373994973413a972ac" translate="yes" xml:space="preserve">
          <source>Unregisters the Qt compressed help file (.qch) identified by its</source>
          <target state="translated">로 식별되는 Qt 압축 도움말 파일 (.qch)을 등록 취소합니다.</target>
        </trans-unit>
        <trans-unit id="312efda072d3f64a1fc850882054f8d22b289915" translate="yes" xml:space="preserve">
          <source>Unregisters the given</source>
          <target state="translated">주어진 등록을 취소합니다</target>
        </trans-unit>
        <trans-unit id="b1ddacaa3e2087bdf3d25b27f8afceba43519008" translate="yes" xml:space="preserve">
          <source>Unregisters the resource with the given</source>
          <target state="translated">주어진 자원을 등록 해제합니다</target>
        </trans-unit>
        <trans-unit id="b042a1bcd602281bf80e534beecf643bfe51389a" translate="yes" xml:space="preserve">
          <source>Unregisters the server from the system registry</source>
          <target state="translated">시스템 레지스트리에서 서버를 등록 취소합니다</target>
        </trans-unit>
        <trans-unit id="4fbc9b359ab23131eec6d994f7d427c223452761" translate="yes" xml:space="preserve">
          <source>Unregisters the server from the system registry for the current user (since 5.14)</source>
          <target state="translated">현재 사용자의 시스템 레지스트리에서 서버 등록을 취소합니다 (5.14 이후).</target>
        </trans-unit>
        <trans-unit id="c7bef391888afd06bfc9604e19bcc35246e0a07b" translate="yes" xml:space="preserve">
          <source>Unregisters the service</source>
          <target state="translated">서비스 등록을 취소합니다</target>
        </trans-unit>
        <trans-unit id="0a40975d2e708d28a163ae1db4923d4c2296ad1c" translate="yes" xml:space="preserve">
          <source>Unregisters the target detect handler identified by</source>
          <target state="translated">로 식별되는 대상 탐지 핸들러를 등록 취소합니다.</target>
        </trans-unit>
        <trans-unit id="41a87a6554ff4af8c596f24d3c26fd0084334744" translate="yes" xml:space="preserve">
          <source>Unregisters the timer with the given</source>
          <target state="translated">주어진 타이머를 등록 해제합니다</target>
        </trans-unit>
        <trans-unit id="2a6e2bb3c64abe989242cd8b94285ef9447291c2" translate="yes" xml:space="preserve">
          <source>Unregisters this service with the platform's Service Discovery Protocol (SDP) implementation. After this, the service will no longer be findable by other devices through service discovery.</source>
          <target state="translated">플랫폼의 SDP (Service Discovery Protocol) 구현으로이 서비스를 등록 취소합니다. 그 후에는 서비스 검색을 통해 다른 장치에서 더 이상 서비스를 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="de50e332531f7cedccc2fc9166482ddef2a943d9" translate="yes" xml:space="preserve">
          <source>Unreserved is defined as: &lt;code&gt;ALPHA / DIGIT / &quot;-&quot; / &quot;.&quot; / &quot;_&quot; / &quot;~&quot;&lt;/code&gt;</source>
          <target state="translated">예약되지 않음은 &lt;code&gt;ALPHA / DIGIT / &quot;-&quot; / &quot;.&quot; / &quot;_&quot; / &quot;~&quot;&lt;/code&gt; 로 정의됩니다 . / &quot;_&quot;/ &quot;~&quot;</target>
        </trans-unit>
        <trans-unit id="5faa9e86f40260524b5480551444bf2827f246fa" translate="yes" xml:space="preserve">
          <source>Unresolved items are entries whose data has been &lt;a href=&quot;qml-qtqml-models-delegatemodelgroup#insert-method&quot;&gt;inserted&lt;/a&gt; into a &lt;a href=&quot;qml-qtqml-models-delegatemodelgroup&quot;&gt;DelegateModelGroup&lt;/a&gt; instead of being derived from a &lt;a href=&quot;qml-qtqml-models-delegatemodel#model-attached-prop&quot;&gt;DelegateModel::model&lt;/a&gt; index. Resolving an item will replace the item at the target index with the unresolved item. A resolved an item will reflect the data of the source model at its bound index and will move when that index moves like any other item.</source>
          <target state="translated">해결되지 않은 항목은 그 데이터 엔트리되어있는 &lt;a href=&quot;qml-qtqml-models-delegatemodelgroup#insert-method&quot;&gt;삽입&lt;/a&gt; (A) 내로 &lt;a href=&quot;qml-qtqml-models-delegatemodelgroup&quot;&gt;DelegateModelGroup&lt;/a&gt; 대신로부터 유도되는 &lt;a href=&quot;qml-qtqml-models-delegatemodel#model-attached-prop&quot;&gt;DelegateModel :: 모델&lt;/a&gt; 인덱스. 항목을 해결하면 대상 인덱스의 항목이 해결되지 않은 항목으로 바뀝니다. 해결 된 항목은 바인딩 된 인덱스에서 소스 모델의 데이터를 반영하고 해당 인덱스가 다른 항목과 같이 이동할 때 이동합니다.</target>
        </trans-unit>
        <trans-unit id="255e8fa7cae8a4ba7517aad181704c1683c380ef" translate="yes" xml:space="preserve">
          <source>Unselects</source>
          <target state="translated">Unselects</target>
        </trans-unit>
        <trans-unit id="cbf4de582ff3c5a57deb015f78cd95a972cc67b6" translate="yes" xml:space="preserve">
          <source>Unset the mask and return to normal &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; operation by passing an empty string (&quot;&quot;).</source>
          <target state="translated">마스크를 설정 해제하고 빈 문자열 ( &quot;&quot;)을 전달하여 일반 &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; 작업으로 돌아갑니다 .</target>
        </trans-unit>
        <trans-unit id="7b3500b1e4c74420fb2ef0c95a5c55f3325b0e2f" translate="yes" xml:space="preserve">
          <source>Unshade button on title bars.</source>
          <target state="translated">제목 표시 줄의 음영 버튼.</target>
        </trans-unit>
        <trans-unit id="daac457666225605fae0702b4b0bbf7baecb97d0" translate="yes" xml:space="preserve">
          <source>Unshade button.</source>
          <target state="translated">음영 버튼.</target>
        </trans-unit>
        <trans-unit id="869a3fccf4b323d32a0ea917abbb3d878c707df2" translate="yes" xml:space="preserve">
          <source>Unshaded Custom Materials</source>
          <target state="translated">음영 처리되지 않은 사용자 정의 재료</target>
        </trans-unit>
        <trans-unit id="6f846bddeb091a71ec122226b07670ccdc13bb85" translate="yes" xml:space="preserve">
          <source>Unshaded custom materials</source>
          <target state="translated">음영 처리되지 않은 사용자 정의 재료</target>
        </trans-unit>
        <trans-unit id="b0f4794a200752651afa076ecdebf40b0ae1ec2f" translate="yes" xml:space="preserve">
          <source>Unshaded materials are useful when interacting with scene lighting is not necessary or desired, and the material needs full control on the final fragment color. Notice how the example above has neither a &lt;a href=&quot;qml-qtquick3d-directionallight&quot;&gt;DirectionalLight&lt;/a&gt; nor any other lights, but the sphere with the custom material shows up as expected.</source>
          <target state="translated">음영 처리되지 않은 재질은 장면 조명과 상호 작용할 필요가 없거나 원하지 않을 때 유용하며 재질은 최종 조각 색상을 완전히 제어해야합니다. 위의 예제에는 &lt;a href=&quot;qml-qtquick3d-directionallight&quot;&gt;DirectionalLight&lt;/a&gt; 도 다른 라이트도 없지만 사용자 정의 재질이있는 구가 예상대로 표시되는 방법을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="8fff96cc1aad4f18e4b9a012fe7604aa603c66b1" translate="yes" xml:space="preserve">
          <source>Unshaded materials are useful when the object's appearance is determined completely by the custom shader code. The shaders for such materials receive minimal additions by the engine, and therefore it is completely up to the shader to determine the final fragment color. This gives more freedom, but also limits possiblities to integrate with other elements of the scene, such as lights.</source>
          <target state="translated">음영 처리되지 않은 재질은 오브젝트의 모양이 사용자 정의 셰이더 코드에 의해 완전히 결정될 때 유용합니다. 이러한 머티리얼의 셰이더는 엔진에 의해 최소한의 추가를 받기 때문에 최종 조각 색상을 결정하는 것은 셰이더에 전적으로 달려 있습니다. 이렇게하면 더 많은 자유가 제공되지만 조명과 같은 장면의 다른 요소와 통합 할 가능성도 제한됩니다.</target>
        </trans-unit>
        <trans-unit id="cdffc8a429f5bfc4b0617437a2dfb3097b9ffe56" translate="yes" xml:space="preserve">
          <source>Unsigned numbers</source>
          <target state="translated">부호없는 숫자</target>
        </trans-unit>
        <trans-unit id="a57ec99de27ba862e74c10e830ff9d865e064937" translate="yes" xml:space="preserve">
          <source>Unsorted - no sorting is applied.</source>
          <target state="translated">정렬되지 않음-정렬이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="80d62288b1fa306fe1c81d4869231838d5cc07c6" translate="yes" xml:space="preserve">
          <source>Unsubscribes the graphics object from the given</source>
          <target state="translated">주어진 그래픽 개체를 구독 취소</target>
        </trans-unit>
        <trans-unit id="245e481a2adad29d14c3924433a3fb8fd1e0cfd6" translate="yes" xml:space="preserve">
          <source>Unsubscribes the widget from a given</source>
          <target state="translated">주어진 위젯을 구독 취소</target>
        </trans-unit>
        <trans-unit id="9f36a10569e4d1790f6596cbdf630c5816c2f188" translate="yes" xml:space="preserve">
          <source>Unsupported Clients</source>
          <target state="translated">지원되지 않는 클라이언트</target>
        </trans-unit>
        <trans-unit id="768cc1881d79ca027bdc2db8e59ca4e76d29cfab" translate="yes" xml:space="preserve">
          <source>Unsupported Features</source>
          <target state="translated">지원되지 않는 기능</target>
        </trans-unit>
        <trans-unit id="d4553ab850504920ce93b214a27590a1b55000f5" translate="yes" xml:space="preserve">
          <source>Unsupported Perl-compatible Regular Expressions Features</source>
          <target state="translated">지원되지 않는 Perl 호환 정규 표현식 기능</target>
        </trans-unit>
        <trans-unit id="62fc90a3527b67c1c72226554c1cd273e0c519b9" translate="yes" xml:space="preserve">
          <source>Unsupported data</source>
          <target state="translated">지원되지 않는 데이터</target>
        </trans-unit>
        <trans-unit id="7e833d999c195e751b7ef6186885e5d0893803da" translate="yes" xml:space="preserve">
          <source>Unsupported extensions are ignored.</source>
          <target state="translated">지원되지 않는 확장은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="5dad5edfec756df0707903f5c18de5dfa36ac25e" translate="yes" xml:space="preserve">
          <source>Unsupported or partially supported XSLT features are documented in the following table. The implementation of XSLT in Qt 4.5 can be seen as XSLT 1.0 but with the data model of XPath 2.0 and XSLT 2.0, and using the using the functionality of XPath 2.0 and its accompanying function library. When Qt XML Patterns encounters an unsupported or partially support feature, it will either report a syntax error or silently continue, unless otherwise noted in the table.</source>
          <target state="translated">지원되지 않거나 부분적으로 지원되는 XSLT 기능은 다음 표에 설명되어 있습니다. Qt 4.5에서 XSLT의 구현은 XSLT 1.0으로 볼 수 있지만 XPath 2.0 및 XSLT 2.0의 데이터 모델과 XPath 2.0의 기능 및 함께 제공되는 함수 라이브러리를 사용합니다. Qt XML 패턴에서 지원되지 않거나 부분적으로 지원되는 기능이 발생하면 표에 별도로 명시되지 않는 한 구문 오류를보고하거나 자동으로 계속 진행합니다.</target>
        </trans-unit>
        <trans-unit id="5b615dba2a995705909746ba3e95bcd8a075a4ba" translate="yes" xml:space="preserve">
          <source>Unused, set to 0.</source>
          <target state="translated">사용하지 않음, 0으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="d3f5c2a5b8746ca79962e3f0a8bbb1fac9d8f8dc" translate="yes" xml:space="preserve">
          <source>Unwinding Items via Pop</source>
          <target state="translated">팝을 통한 아이템 풀기</target>
        </trans-unit>
        <trans-unit id="2038bdec9210202d0d9d74839e3925ff0cd91ba1" translate="yes" xml:space="preserve">
          <source>Up</source>
          <target state="translated">Up</target>
        </trans-unit>
        <trans-unit id="6368bf478b6e5c96be346941a009bf02f21db8e7" translate="yes" xml:space="preserve">
          <source>Up symbol for a spin widget, for example a &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt;.</source>
          <target state="translated">스핀 위젯의 위쪽 기호 (예 : &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox)&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c2ecd9c184a0c35659023813618305e9f04e69a" translate="yes" xml:space="preserve">
          <source>Up to four key codes may be entered by separating them with commas, e.g. &quot;Alt+X,Ctrl+S,Q&quot;.</source>
          <target state="translated">&quot;Alt + X, Ctrl + S, Q&quot;와 같이 쉼표로 구분하여 최대 4 개의 키 코드를 입력 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b48821f7e94fdf808a6bf01fa0d6503dc5d93757" translate="yes" xml:space="preserve">
          <source>Up, Meta+P</source>
          <target state="translated">위로, Meta + P</target>
        </trans-unit>
        <trans-unit id="98e3e4538aa3166e8775b9268aebf94a0697ad67" translate="yes" xml:space="preserve">
          <source>Up/Down move a vertical scroll bar by one single step.</source>
          <target state="translated">위 / 아래로 세로 스크롤 막대를 한 단계 씩 이동합니다.</target>
        </trans-unit>
        <trans-unit id="e68b92e4fd3d87aefbc32fafcfb247f180dbb1c5" translate="yes" xml:space="preserve">
          <source>Up/Down move a vertical slider by one single step.</source>
          <target state="translated">위 / 아래로 수직 슬라이더를 한 단계 씩 이동합니다.</target>
        </trans-unit>
        <trans-unit id="a545f5e22291ff4f1bf8c4cebed46346b96b6e2c" translate="yes" xml:space="preserve">
          <source>UpArrow</source>
          <target state="translated">UpArrow</target>
        </trans-unit>
        <trans-unit id="a26c049983a320949b50d0fd2313693471b49b46" translate="yes" xml:space="preserve">
          <source>Update any &quot;dynamic&quot; textures that were rendered by Qt Quick (&lt;a href=&quot;qtquick3d-architecture#texture-path&quot;&gt;2D in 3D Texture path&lt;/a&gt; below)</source>
          <target state="translated">Qt Quick에 의해 렌더링 된 &quot;동적&quot;텍스처 업데이트 ( 아래 &lt;a href=&quot;qtquick3d-architecture#texture-path&quot;&gt;3D 텍스처 경로의 2D&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="720e24b81fa0ca9682c5cd1326c8b2252e2afb9d" translate="yes" xml:space="preserve">
          <source>Update internal data which represents the structure of the model.</source>
          <target state="translated">모델의 구조를 나타내는 내부 데이터를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="6a30fc67d7ae3e7c01630be2a6390acea364977a" translate="yes" xml:space="preserve">
          <source>Update persistent indexes using &lt;a href=&quot;qabstractitemmodel#changePersistentIndexList&quot;&gt;changePersistentIndexList()&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qabstractitemmodel#changePersistentIndexList&quot;&gt;changePersistentIndexList ()를&lt;/a&gt; 사용하여 지속적 인덱스 업데이트</target>
        </trans-unit>
        <trans-unit id="c8fd751421b0489ebe0a195dc814cc6266d610db" translate="yes" xml:space="preserve">
          <source>Update the texture state to match the filtering, mipmap and wrap options currently set.</source>
          <target state="translated">현재 설정된 필터링, 밉맵 및 랩 옵션과 일치하도록 텍스처 상태를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="5a70fb5d096cce3cd78fd7573ab8ba8a8d8201d5" translate="yes" xml:space="preserve">
          <source>Update your internal data</source>
          <target state="translated">내부 데이터 업데이트</target>
        </trans-unit>
        <trans-unit id="b9dee6f70c97232ebabab24ad7b456108208a029" translate="yes" xml:space="preserve">
          <source>Updated once by &lt;a href=&quot;qgraphicsproxywidget#setWidget&quot;&gt;setWidget&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qgraphicsproxywidget#setWidget&quot;&gt;setWidget&lt;/a&gt; ()으로 한 번 업데이트되었습니다 .</target>
        </trans-unit>
        <trans-unit id="c76d18079a076ee34ffc62b5b9bd0909da356dce" translate="yes" xml:space="preserve">
          <source>Updates</source>
          <target state="translated">Updates</target>
        </trans-unit>
        <trans-unit id="ea2a11cc1f4e4a74ebb25cebf36dd885b1adfdc9" translate="yes" xml:space="preserve">
          <source>Updates a sub region of the texture, defined by</source>
          <target state="translated">다음에 의해 정의 된 텍스처의 하위 영역을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="6faacd6126d187a9bd143e2ef8c66a3fe3323192" translate="yes" xml:space="preserve">
          <source>Updates a subset of the index buffer.</source>
          <target state="translated">인덱스 버퍼의 하위 집합을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="1929b7b04126ccca4f2080fc005699bf219e0657" translate="yes" xml:space="preserve">
          <source>Updates a subset of the vertex buffer.</source>
          <target state="translated">정점 버퍼의 하위 집합을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="e1fd96cec0d4e87fc7231ec709e8698a0c8776d8" translate="yes" xml:space="preserve">
          <source>Updates all visible cells unless updates are disabled.</source>
          <target state="translated">업데이트를 비활성화하지 않으면 보이는 모든 셀을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="6bde39b1c40637b967c79aa9dd8a6f7db3e26811" translate="yes" xml:space="preserve">
          <source>Updates indices based on geometry properties.</source>
          <target state="translated">지오메트리 속성을 기반으로 인덱스를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="ff73b3116f4da7f0d2dd0508e91908ea7c8e8104" translate="yes" xml:space="preserve">
          <source>Updates indices based on mesh resolution.</source>
          <target state="translated">메쉬 해상도를 기준으로 인덱스를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="022d563c37ba29e836d7eb9c83b685578b6fb490" translate="yes" xml:space="preserve">
          <source>Updates indices based on mesh resolutions.</source>
          <target state="translated">메쉬 해상도를 기준으로 인덱스를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="e6f8ca8807fab4e5a94adc5082dd2f48e3d9e96f" translate="yes" xml:space="preserve">
          <source>Updates indices based on rings and slices properties.</source>
          <target state="translated">링 및 슬라이스 속성을 기반으로 인덱스를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="6f8f42b18e563b418c4ba4673185025ea1c423d9" translate="yes" xml:space="preserve">
          <source>Updates the</source>
          <target state="translated">업데이트</target>
        </trans-unit>
        <trans-unit id="a3112aff3ab4dbf392ffde036e90dd7903b22350" translate="yes" xml:space="preserve">
          <source>Updates the area occupied by the given</source>
          <target state="translated">주어진 점유 면적을 업데이트</target>
        </trans-unit>
        <trans-unit id="a3a4cbb929a8b05d3dcf1257a6dacac0e69817d1" translate="yes" xml:space="preserve">
          <source>Updates the cache meta date for the &lt;a href=&quot;qabstractnetworkcache#metaData&quot;&gt;metaData&lt;/a&gt;'s url to</source>
          <target state="translated">&lt;a href=&quot;qabstractnetworkcache#metaData&quot;&gt;metaData&lt;/a&gt; URL 의 캐시 메타 날짜를 다음으로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="26424b93300b54b9730e6c062750f807f329b370" translate="yes" xml:space="preserve">
          <source>Updates the cell specified by the given</source>
          <target state="translated">주어진 것으로 지정된 셀을 업데이트</target>
        </trans-unit>
        <trans-unit id="0a0583db12c267f96bda1ee1089d520f75c20856" translate="yes" xml:space="preserve">
          <source>Updates the changed header sections with the given</source>
          <target state="translated">지정된 헤더 섹션을 지정된 것으로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="d6a67233751f4025789eca5994451a26fbffefec" translate="yes" xml:space="preserve">
          <source>Updates the current buffer and damage region to the latest version committed by the client. Returns true if new content was committed since the previous call to advance(). Otherwise returns false.</source>
          <target state="translated">현재 버퍼 및 손상 영역을 클라이언트가 커밋 한 최신 버전으로 업데이트합니다. advance ()에 대한 이전 호출 이후 새 내용이 커밋 된 경우 true를 반환합니다. 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aa3957bea62fced9d06db404c07867d8627755ae" translate="yes" xml:space="preserve">
          <source>Updates the data by replacing it with</source>
          <target state="translated">데이터를 다음과 같이 바꿔서 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="97a429554cee9aab2a2431b3c12dfa1acd4b1492" translate="yes" xml:space="preserve">
          <source>Updates the geometry</source>
          <target state="translated">지오메트리 업데이트</target>
        </trans-unit>
        <trans-unit id="eceee37106cbc676d34ac418e459d57f6a4c58f5" translate="yes" xml:space="preserve">
          <source>Updates the geometry of the</source>
          <target state="translated">의 형상을 업데이트합니다</target>
        </trans-unit>
        <trans-unit id="0f15eb54a6a87b5bb4191205c22774cd2f103281" translate="yes" xml:space="preserve">
          <source>Updates the geometry of the child widgets of the view.</source>
          <target state="translated">뷰의 하위 위젯의 지오메트리를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="d1e9a2d38faeb4f48ef6cd227b42bd60444a2137" translate="yes" xml:space="preserve">
          <source>Updates the given</source>
          <target state="translated">주어진 업데이트</target>
        </trans-unit>
        <trans-unit id="04b8d8d24d9e0f62e0a131b1d260f1ed0c3f6e90" translate="yes" xml:space="preserve">
          <source>Updates the indices based on rings, slices, and length properties.</source>
          <target state="translated">링, 슬라이스 및 길이 속성을 기준으로 인덱스를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="770a5dca92316e8471cf3e1b38d11e7e285045bc" translate="yes" xml:space="preserve">
          <source>Updates the item's micro focus.</source>
          <target state="translated">항목의 마이크로 포커스를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="a0e6c91b9c44bfae6663e5d5da62e7272ff48a47" translate="yes" xml:space="preserve">
          <source>Updates the item's micro focus. This is slot for convenience.</source>
          <target state="translated">항목의 마이크로 포커스를 업데이트합니다. 편의를위한 슬롯입니다.</target>
        </trans-unit>
        <trans-unit id="e7248cbef254b81e35939d1cc816f7064d3da199" translate="yes" xml:space="preserve">
          <source>Updates the layout for &lt;a href=&quot;qlayout#parentWidget&quot;&gt;parentWidget&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qlayout#parentWidget&quot;&gt;parentWidget&lt;/a&gt; () 의 레이아웃을 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="872976b9763b2dcfcbc3a78d70927015a2290114" translate="yes" xml:space="preserve">
          <source>Updates the model based on the ProposedSearchResult at index</source>
          <target state="translated">인덱스에서 ProposedSearchResult를 기반으로 모델을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="34a023a47c112213e8c70183f20690b1c29f7a93" translate="yes" xml:space="preserve">
          <source>Updates the model based on the provided query parameters. The model will be populated with a list of places matching the search parameters specified by the type's properties. Search criteria is specified by setting properties such as the &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchTerm-prop&quot;&gt;searchTerm&lt;/a&gt;, &lt;a href=&quot;location-places-backend#categories&quot;&gt;categories&lt;/a&gt;, &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-placesearchmodel#limit-prop&quot;&gt;limit&lt;/a&gt;. Support for these properties may vary according to &lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt;. &lt;code&gt;update()&lt;/code&gt; then submits the set of criteria to the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt; to process.</source>
          <target state="translated">제공된 쿼리 매개 변수를 기반으로 모델을 업데이트합니다. 모델은 유형의 속성으로 지정된 검색 매개 변수와 일치하는 장소 목록으로 채워집니다. 검색 조건은 &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchTerm-prop&quot;&gt;searchTerm&lt;/a&gt; , &lt;a href=&quot;location-places-backend#categories&quot;&gt;categories&lt;/a&gt; , &lt;a href=&quot;qml-qtlocation-placesearchmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt; 및 &lt;a href=&quot;qml-qtlocation-placesearchmodel#limit-prop&quot;&gt;limit&lt;/a&gt; 과 같은 속성을 설정하여 지정됩니다 . 이러한 속성에 대한 지원은 &lt;a href=&quot;location-places-qml#plugin&quot;&gt;플러그인&lt;/a&gt; 에 따라 다를 수 있습니다 . 그런 다음 &lt;code&gt;update()&lt;/code&gt; 는 처리 할 &lt;a href=&quot;location-places-qml#plugin&quot;&gt;플러그인&lt;/a&gt; 에 기준 세트를 제출합니다 .</target>
        </trans-unit>
        <trans-unit id="319508b026c230618316041d0ec60ab2b2e942a1" translate="yes" xml:space="preserve">
          <source>Updates the model based on the provided query parameters. The model will be populated with a list of search suggestions for the partial &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#searchTerm-prop&quot;&gt;searchTerm&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#searchArea-prop&quot;&gt;searchArea&lt;/a&gt;. If the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt; supports it, other parameters such as &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#limit-prop&quot;&gt;limit&lt;/a&gt; and &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#offset-prop&quot;&gt;offset&lt;/a&gt; may be specified. &lt;code&gt;update()&lt;/code&gt; submits the set of parameters to the &lt;a href=&quot;location-places-qml#plugin&quot;&gt;plugin&lt;/a&gt; to process.</source>
          <target state="translated">제공된 쿼리 매개 변수를 기반으로 모델을 업데이트합니다. 모델은 부분 &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#searchTerm-prop&quot;&gt;searchTerm&lt;/a&gt; 및 &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#searchArea-prop&quot;&gt;searchArea에&lt;/a&gt; 대한 추천 검색어 목록으로 채워집니다 . &lt;a href=&quot;location-places-qml#plugin&quot;&gt;플러그인이&lt;/a&gt; 지원하는 경우 &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#limit-prop&quot;&gt;limit&lt;/a&gt; 및 &lt;a href=&quot;qml-qtlocation-placesearchsuggestionmodel#offset-prop&quot;&gt;offset&lt;/a&gt; 과 같은 다른 매개 변수를 지정할 수 있습니다. &lt;code&gt;update()&lt;/code&gt; 는 처리 할 &lt;a href=&quot;location-places-qml#plugin&quot;&gt;플러그인&lt;/a&gt; 에 매개 변수 세트를 제출합니다 .</target>
        </trans-unit>
        <trans-unit id="35788e4bd3d96a5b5be3ec57b599162dd289ac4b" translate="yes" xml:space="preserve">
          <source>Updates the model to display the next page of search results. If there is no next page then this method does nothing.</source>
          <target state="translated">검색 결과의 다음 페이지를 표시하도록 모델을 업데이트합니다. 다음 페이지가 없으면이 방법은 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9424375b24796995f9690377bf63802f49f7d85d" translate="yes" xml:space="preserve">
          <source>Updates the model to display the previous page of search results. If there is no previous page then this method does nothing.</source>
          <target state="translated">검색 결과의 이전 페이지를 표시하도록 모델을 업데이트합니다. 이전 페이지가 없으면이 방법으로 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fd3ec6820ffe8fd3c45e9a71901dca138dd46e2f" translate="yes" xml:space="preserve">
          <source>Updates the previous value of the managed variable to its current value.</source>
          <target state="translated">관리 변수의 이전 값을 현재 값으로 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="ae87eb5feedb202ed65a58572f31285c04e9a813" translate="yes" xml:space="preserve">
          <source>Updates the relevant status bar for the</source>
          <target state="translated">의 관련 상태 표시 줄을 업데이트</target>
        </trans-unit>
        <trans-unit id="3f429a2c0fff9718a71d2995bedb7667457110c5" translate="yes" xml:space="preserve">
          <source>Updates the relevant status bar for the UI represented by</source>
          <target state="translated">다음으로 표시되는 UI에 대한 관련 상태 표시 줄을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="888fa35eb888e4e8408c14645591220edf823527" translate="yes" xml:space="preserve">
          <source>Updates the size policy of the widget at position</source>
          <target state="translated">위치에서 위젯의 크기 정책을 업데이트합니다</target>
        </trans-unit>
        <trans-unit id="6bca3864a929446b40b4f510cafbff4bc77f3307" translate="yes" xml:space="preserve">
          <source>Updates the splitter's state. You should not need to call this function.</source>
          <target state="translated">스플리터의 상태를 업데이트합니다. 이 함수를 호출 할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="995d53d9ad8243c566a314f572993579fc469a47" translate="yes" xml:space="preserve">
          <source>Updates the surface with the compositor's retained clipboard selection. Although this is done automatically when the surface receives keyboard focus, this function is useful for updating clients which do not have keyboard focus.</source>
          <target state="translated">합성기의 유지 된 클립 보드 선택 항목으로 표면을 업데이트합니다. Surface에서 키보드 포커스를 받으면 자동으로 수행되지만이 기능은 키보드 포커스가없는 클라이언트를 업데이트하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5859407da6ad23dc039338b3eb86ff434dd33aeb" translate="yes" xml:space="preserve">
          <source>Updates the time stamp of &lt;code&gt;filename&lt;/code&gt; to match the time stamp of &lt;code&gt;reference_filename&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;reference_filename&lt;/code&gt; 의 타임 스탬프와 일치하도록 &lt;code&gt;filename&lt;/code&gt; 의 타임 스탬프를 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="31a259f32edf0edcb442456b55041645933ccfa3" translate="yes" xml:space="preserve">
          <source>Updates the vertices based on rings, slices, and length properties.</source>
          <target state="translated">링, 슬라이스 및 길이 속성을 기준으로 정점을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="574f4dcc857d217c4a84b85ea158bd6fe227a88c" translate="yes" xml:space="preserve">
          <source>Updates the widget unless updates are disabled or the widget is hidden.</source>
          <target state="translated">업데이트가 비활성화되거나 위젯이 숨겨져 있지 않으면 위젯을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="d96b73ed7c8273424c42832e16208631f53fe447" translate="yes" xml:space="preserve">
          <source>Updates the widget's micro focus and informs input methods that the state specified by</source>
          <target state="translated">위젯의 마이크로 포커스를 업데이트하고 다음으로 지정된 상태를 입력 방법에 알립니다.</target>
        </trans-unit>
        <trans-unit id="899a33978c5cd269ba1bc85c13b858ed260e7cd7" translate="yes" xml:space="preserve">
          <source>Updates the widget's micro focus.</source>
          <target state="translated">위젯의 마이크로 포커스를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="c14d1e141ec08aba3defef8612c107bd00fc6226" translate="yes" xml:space="preserve">
          <source>Updates vertices based on geometry properties.</source>
          <target state="translated">지오메트리 속성을 기반으로 정점을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="beee557288dd979b0e9c85c8aff2e3250c9adea3" translate="yes" xml:space="preserve">
          <source>Updates vertices based on mesh resolution, width, and height properties.</source>
          <target state="translated">메쉬 해상도, 너비 및 높이 속성을 기반으로 정점을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="e8a54922c5df05ba51f73a2bb221cd376b03ca31" translate="yes" xml:space="preserve">
          <source>Updates vertices based on mesh resolutions.</source>
          <target state="translated">메쉬 해상도를 기준으로 정점을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="54c424c5d970b254139d348d6c3ec9242918a56f" translate="yes" xml:space="preserve">
          <source>Updates vertices based on rings, slices, and radius properties</source>
          <target state="translated">링, 슬라이스 및 반지름 속성을 기준으로 정점 업데이트</target>
        </trans-unit>
        <trans-unit id="fe564c559aa4e9d2d2727ed67658edace9f7da65" translate="yes" xml:space="preserve">
          <source>Updates vertices based on rings, slices, and radius properties.</source>
          <target state="translated">링, 슬라이스 및 반지름 속성을 기준으로 정점을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="7a2014cee2995de811b633c8ac88b2d85b0b2478" translate="yes" xml:space="preserve">
          <source>Updating a record is similar to inserting it into a table:</source>
          <target state="translated">레코드를 업데이트하는 것은 테이블에 레코드를 삽입하는 것과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="f797da23a6c6d905d27abd519904c8e40d5954c2" translate="yes" xml:space="preserve">
          <source>Updating a selection</source>
          <target state="translated">선택 업데이트</target>
        </trans-unit>
        <trans-unit id="ac0d1279280b3423e54eca9c186eecc04799a005" translate="yes" xml:space="preserve">
          <source>Updating an existing route based on the current position is supported.</source>
          <target state="translated">현재 위치를 기반으로 기존 경로를 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5587a9ccc9c68608c73925a3f478e40c6f3f9aa7" translate="yes" xml:space="preserve">
          <source>Updating or Removing Components</source>
          <target state="translated">구성 요소 업데이트 또는 제거</target>
        </trans-unit>
        <trans-unit id="10ce904909fd370515778809bda28613856438b4" translate="yes" xml:space="preserve">
          <source>Updating or Removing Qt</source>
          <target state="translated">Qt 업데이트 또는 제거</target>
        </trans-unit>
        <trans-unit id="a7a5dbfe79463d818bbe91bdca56764b25ea494d" translate="yes" xml:space="preserve">
          <source>Updating the Android SDK</source>
          <target state="translated">Android SDK 업데이트</target>
        </trans-unit>
        <trans-unit id="2fe940641f8be7dfa0f95c3b608c81c6943d0ad2" translate="yes" xml:space="preserve">
          <source>Updating the Selection Lists</source>
          <target state="translated">선택 목록 업데이트</target>
        </trans-unit>
        <trans-unit id="d2a1e44c2f9b43578a8cb3e64e0088e3c4d7c6be" translate="yes" xml:space="preserve">
          <source>Updating the editor's geometry</source>
          <target state="translated">에디터 지오메트리 업데이트</target>
        </trans-unit>
        <trans-unit id="5a374278396e90498e8afec42cd96078fcc4585f" translate="yes" xml:space="preserve">
          <source>Updating the local transform of a joint results in the skinning matrices being recalculated and the skinned mesh vertices bound to that joint moving accordingly.</source>
          <target state="translated">조인트의 로컬 변환을 업데이트하면 스키닝 매트릭스가 다시 계산되고 스키닝 된 메쉬 정점이 해당 조인트에 바인딩되어 그에 따라 이동합니다.</target>
        </trans-unit>
        <trans-unit id="fffd0df581e6ab4b5354e1a101b096bed9a0bb4f" translate="yes" xml:space="preserve">
          <source>Upgrades a tcp</source>
          <target state="translated">TCP를 업그레이드</target>
        </trans-unit>
        <trans-unit id="65b854373d40bf72bd7c397f2bc6136cb7510f19" translate="yes" xml:space="preserve">
          <source>Uploads compressed pixel</source>
          <target state="translated">압축 픽셀을 업로드</target>
        </trans-unit>
        <trans-unit id="eb317843e570b76ff128bbca2ae56c9f97c2d934" translate="yes" xml:space="preserve">
          <source>Uploads pixel</source>
          <target state="translated">픽셀을 업로드</target>
        </trans-unit>
        <trans-unit id="4cfc2a9ecc28252dfc58fa65db8fb3330b363091" translate="yes" xml:space="preserve">
          <source>Uploads the contents of</source>
          <target state="translated">의 내용을 업로드</target>
        </trans-unit>
        <trans-unit id="5c9c31b1648fd461b71cd44298da6c8dbc410b03" translate="yes" xml:space="preserve">
          <source>Upon reception, the &lt;a href=&quot;qnetworkdatagram#senderAddress&quot;&gt;senderAddress&lt;/a&gt;() and &lt;a href=&quot;qnetworkdatagram#senderPort&quot;&gt;senderPort&lt;/a&gt;() properties contain the address and port of the peer that sent the datagram, while &lt;a href=&quot;qnetworkdatagram#destinationAddress&quot;&gt;destinationAddress&lt;/a&gt;() and &lt;a href=&quot;qnetworkdatagram#destinationPort&quot;&gt;destinationPort&lt;/a&gt;() contain the target that was contained in the datagram. That is usually an address local to the current machine, but it can also be an IPv4 broadcast address (such as &quot;255.255.255.255&quot;) or an IPv4 or IPv6 multicast address. Applications may find it useful to determine if the datagram was sent specifically to this machine via unicast addressing or whether it was sent to multiple destinations.</source>
          <target state="translated">수신시 &lt;a href=&quot;qnetworkdatagram#senderAddress&quot;&gt;senderAddress&lt;/a&gt; () 및 &lt;a href=&quot;qnetworkdatagram#senderPort&quot;&gt;senderPort&lt;/a&gt; () 속성에는 데이터 그램을 보낸 피어의 주소와 포트가 포함되며 &lt;a href=&quot;qnetworkdatagram#destinationAddress&quot;&gt;destinationAddress&lt;/a&gt; () 및 &lt;a href=&quot;qnetworkdatagram#destinationPort&quot;&gt;destinationPort&lt;/a&gt; ()에는 데이터 그램에 포함 된 대상이 포함됩니다. 일반적으로 현재 컴퓨터의 로컬 주소이지만 IPv4 브로드 캐스트 주소 (예 : &quot;255.255.255.255&quot;) 또는 IPv4 또는 IPv6 멀티 캐스트 주소 일 수도 있습니다. 응용 프로그램은 데이터 그램이 유니 캐스트 주소 지정을 통해이 컴퓨터로 특별히 전송되었는지 또는 여러 대상으로 전송되었는지 확인하는 것이 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b68d07c0b25ff9286b6291558f6314fd71f8a5a" translate="yes" xml:space="preserve">
          <source>Upon start-up of your application, connect all signals in &lt;a href=&quot;qinappstore&quot;&gt;QInAppStore&lt;/a&gt; to related slots in your own &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;. Then use the &lt;a href=&quot;qinappstore#registerProduct&quot;&gt;registerProduct&lt;/a&gt;() function to register the ID of each product you expect to find registered in the external store, as well as its type.</source>
          <target state="translated">애플리케이션을 시작할 때 &lt;a href=&quot;qinappstore&quot;&gt;QInAppStore의&lt;/a&gt; 모든 신호를 자체 &lt;a href=&quot;qobject&quot;&gt;QObject의&lt;/a&gt; 관련 슬롯에 연결하십시오 . 그런 다음 &lt;a href=&quot;qinappstore#registerProduct&quot;&gt;registerProduct&lt;/a&gt; () 함수를 사용하여 외부 상점에 등록 된 각 제품의 ID와 유형을 등록하십시오.</target>
        </trans-unit>
        <trans-unit id="a97419dcbfacc2503177d1c964b0f9b6e73158ac" translate="yes" xml:space="preserve">
          <source>Upon start-up of your application, connect all signals in QInAppStore to related slots in your own &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;. Then use the &lt;a href=&quot;qinappstore#registerProduct&quot;&gt;registerProduct&lt;/a&gt;() function to register the ID of each product you expect to find registered in the external store, as well as its type.</source>
          <target state="translated">애플리케이션을 시작할 때 QInAppStore의 모든 신호를 자체 &lt;a href=&quot;qobject&quot;&gt;QObject의&lt;/a&gt; 관련 슬롯에 연결 합니다 . 그런 다음 &lt;a href=&quot;qinappstore#registerProduct&quot;&gt;registerProduct&lt;/a&gt; () 함수를 사용하여 외부 저장소에 등록 된 제품을 찾을 것으로 예상되는 각 제품의 ID와 해당 유형을 등록합니다.</target>
        </trans-unit>
        <trans-unit id="b36e74d8f5496c5c0baf9aeb689f7015d5bc741c" translate="yes" xml:space="preserve">
          <source>Upper case letters are preferred (but not required).</source>
          <target state="translated">대문자가 바람직하지만 필수는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="0e71e22129fc5cd6ddc7147d8e6e32b3e0a2314f" translate="yes" xml:space="preserve">
          <source>Upper case text.</source>
          <target state="translated">대문자 텍스트.</target>
        </trans-unit>
        <trans-unit id="412e31909b8ad1417c4a39495653fdeba58cd034" translate="yes" xml:space="preserve">
          <source>Urdu</source>
          <target state="translated">Urdu</target>
        </trans-unit>
        <trans-unit id="a32959d6cdd4500a095ff22a20fff18ca8765db1" translate="yes" xml:space="preserve">
          <source>Url</source>
          <target state="translated">Url</target>
        </trans-unit>
        <trans-unit id="ee3b91a5a021fcc6ebd1aa66cecaed118ae7cacf" translate="yes" xml:space="preserve">
          <source>Url and String</source>
          <target state="translated">URL과 문자열</target>
        </trans-unit>
        <trans-unit id="a78045406a921da02be67d190102d6b6a5e4caa3" translate="yes" xml:space="preserve">
          <source>Url string of a custom tile server. This parameter should be set to a valid server url offering the correct osm API. To use this server, the &lt;a href=&quot;qml-qtlocation-map#activeMapType-prop&quot;&gt;Map::activeMapType&lt;/a&gt; parameter of the &lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map&lt;/a&gt; should be set to the supported map type whose type is &lt;a href=&quot;qml-qtlocation-maptype&quot;&gt;MapType&lt;/a&gt;.CustomMap. This map type is only be available if this plugin parameter is set, in which case it is always &lt;a href=&quot;qml-qtlocation-map#supportedMapTypes-prop&quot;&gt;Map::supportedMapTypes&lt;/a&gt;[supportedMapTypes.length - 1].</source>
          <target state="translated">맞춤 타일 서버의 URL 문자열입니다. 이 매개 변수는 올바른 osm API를 제공하는 유효한 서버 URL로 설정해야합니다. 이 서버를 사용하려면 &lt;a href=&quot;qml-qtlocation-map#activeMapType-prop&quot;&gt;지도 :: activeMapType의&lt;/a&gt; 의 매개 변수 &lt;a href=&quot;qml-qtlocation-map&quot;&gt;지도&lt;/a&gt; 유형이있는 지원되는지도 유형으로 설정해야합니다 &lt;a href=&quot;qml-qtlocation-maptype&quot;&gt;지도 유형&lt;/a&gt; .CustomMap. 이 맵 유형은이 플러그인 매개 변수가 설정된 경우에만 사용 가능하며,이 경우 항상 &lt;a href=&quot;qml-qtlocation-map#supportedMapTypes-prop&quot;&gt;Map :: supportedMapTypes&lt;/a&gt; [supportedMapTypes.length-1]입니다.</target>
        </trans-unit>
        <trans-unit id="fdff23e4e1729533b31eb32bfddc41282499684f" translate="yes" xml:space="preserve">
          <source>Url string set when making network requests to the geocoding server. This parameter should be set to a valid server url with the correct osm API. If not specified the default &lt;a href=&quot;http://nominatim.openstreetmap.org/&quot;&gt;url&lt;/a&gt; will be used.</source>
          <target state="translated">지오 코딩 서버에 네트워크 요청을 할 때 설정되는 URL 문자열입니다. 이 매개 변수는 올바른 osm API를 사용하여 유효한 서버 URL로 설정해야합니다. 지정하지 않으면 기본 &lt;a href=&quot;http://nominatim.openstreetmap.org/&quot;&gt;URL&lt;/a&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9191ee2caa3e18a4043a222f9ebc91afad0a6bff" translate="yes" xml:space="preserve">
          <source>Url string set when making network requests to the places server. This parameter should be set to a valid server url with the correct osm API. If not specified the default &lt;a href=&quot;http://nominatim.openstreetmap.org/search&quot;&gt;url&lt;/a&gt; will be used.</source>
          <target state="translated">작업 공간 서버에 네트워크 요청을 할 때 설정되는 URL 문자열입니다. 이 매개 변수는 올바른 osm API를 사용하여 유효한 서버 URL로 설정해야합니다. 지정하지 않으면 기본 &lt;a href=&quot;http://nominatim.openstreetmap.org/search&quot;&gt;URL&lt;/a&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="95704d40a9f557e6b5255cdc2cc1d982c6207b46" translate="yes" xml:space="preserve">
          <source>Url string set when making network requests to the routing server. This parameter should be set to a valid server url with the correct osrm API. If not specified the default &lt;a href=&quot;http://router.project-osrm.org/route/v1/driving/&quot;&gt;url&lt;/a&gt; will be used.</source>
          <target state="translated">라우팅 서버에 네트워크 요청을 할 때 설정되는 URL 문자열입니다. 이 매개 변수는 올바른 osrm API를 사용하여 유효한 서버 URL로 설정해야합니다. 지정하지 않으면 기본 &lt;a href=&quot;http://router.project-osrm.org/route/v1/driving/&quot;&gt;URL&lt;/a&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="800f37891e134b211a4138432b1cec5bd90872b8" translate="yes" xml:space="preserve">
          <source>UrlRequest</source>
          <target state="translated">UrlRequest</target>
        </trans-unit>
        <trans-unit id="89731bdbf80a5d294afe2cfc2a65e08e301faabf" translate="yes" xml:space="preserve">
          <source>Urls are resolved to be within the same directory as the target of the base URL meaning any portion of the path after the last '/' will be ignored.</source>
          <target state="translated">URL은 기본 URL의 대상과 동일한 디렉토리 내에있는 것으로 해석되어 마지막 '/'뒤의 경로 부분이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="31fdeb34a4f4bc8a7b882018ab434e09d2defd44" translate="yes" xml:space="preserve">
          <source>Usage Examples</source>
          <target state="translated">사용 예</target>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="translated">사용 예 :</target>
        </trans-unit>
        <trans-unit id="950d9c1aee5a0b8ac1664c8a9f40a8cddde14c8b" translate="yes" xml:space="preserve">
          <source>Usage examples</source>
          <target state="translated">사용 예</target>
        </trans-unit>
        <trans-unit id="e5ca6b611981d961f97ed24cda318919d84d7844" translate="yes" xml:space="preserve">
          <source>Usage is through the</source>
          <target state="translated">사용법은</target>
        </trans-unit>
        <trans-unit id="6c87b183998e0cc00b1110beba719959eb02a534" translate="yes" xml:space="preserve">
          <source>Usage is to declare &lt;code&gt;POD&lt;/code&gt; followed by the name for the generated type, followed by type and name pairs separated by commas, where the type/name pairs are wrapped in parentheses.</source>
          <target state="translated">사용법은 &lt;code&gt;POD&lt;/code&gt; 다음에 생성 된 유형의 이름, 쉼표로 구분 된 유형 및 이름 쌍 을 선언 하는 것입니다. 여기서 유형 / 이름 쌍은 괄호로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="0dcaffdd65195398529c1014283c7d707a336676" translate="yes" xml:space="preserve">
          <source>Usage is to declare &lt;code&gt;SIGNAL&lt;/code&gt; followed by the desired signature wrapped in parentheses. The void return value should be skipped.</source>
          <target state="translated">사용법은 &lt;code&gt;SIGNAL&lt;/code&gt; 을 선언 하고 괄호로 묶인 원하는 서명 을 선언 하는 것입니다. void 반환 값은 건너 뛰어야합니다.</target>
        </trans-unit>
        <trans-unit id="58b563e5ddc5d664c3b4b5ca9f034c634f2bae70" translate="yes" xml:space="preserve">
          <source>Usage is to declare &lt;code&gt;SLOT&lt;/code&gt; followed by the desired signature wrapped in parentheses. The return value can be included in the declaration. If the return value is skipped, void will be used in the generated files.</source>
          <target state="translated">사용법은 &lt;code&gt;SLOT&lt;/code&gt; 다음에 소괄호로 싸인 원하는 서명 을 선언 하는 것입니다. 반환 값은 선언에 포함될 수 있습니다. 리턴 값을 건너 뛰면 생성 된 파일에서 void가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0104238491ad2e41c39d00c7624577dad56326f7" translate="yes" xml:space="preserve">
          <source>Usage of signal handlers without a matching signal.</source>
          <target state="translated">일치하는 신호가없는 신호 처리기 사용.</target>
        </trans-unit>
        <trans-unit id="e655e8894fe2e990c48843eeea67a67385e1a5a8" translate="yes" xml:space="preserve">
          <source>Usage of with statements in QML.</source>
          <target state="translated">QML에서 with 문 사용.</target>
        </trans-unit>
        <trans-unit id="861a0e430ffac5e4ae6e11b7a947f2c32d388cf4" translate="yes" xml:space="preserve">
          <source>Usage:</source>
          <target state="translated">Usage:</target>
        </trans-unit>
        <trans-unit id="fa796ec1a0e33dff0eaf9d60125a0413caba6ac8" translate="yes" xml:space="preserve">
          <source>Usage: (&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt;)</source>
          <target state="translated">사용법 : ( &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="b75e4f9869b596d4e18b15ee2aee3548528e7139" translate="yes" xml:space="preserve">
          <source>Usage: (&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt;)</source>
          <target state="translated">사용법 : ( &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="1d4d43cc6f3a833e0340a0d1794b6d7b9958657e" translate="yes" xml:space="preserve">
          <source>Use</source>
          <target state="translated">Use</target>
        </trans-unit>
        <trans-unit id="bbb0e2f28aa25f269aadabfe447fd9d019fdf24e" translate="yes" xml:space="preserve">
          <source>Use &amp;lt;function&amp;gt; for i18n.</source>
          <target state="translated">i18n은 &amp;lt;기능&amp;gt;을 사용하세요.</target>
        </trans-unit>
        <trans-unit id="b8abf607144c84c1118a4e09384852eb40d84663" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount&lt;/a&gt;() on the parent to find out the number of children.</source>
          <target state="translated">사용 &lt;a href=&quot;qabstractitemmodel#rowCount&quot;&gt;rowCount의&lt;/a&gt; 부모에 ()는 어린이의 번호를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="250047990637e52494cf7a2b126b09fe8435b078" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qaxbase#dynamicCall&quot;&gt;QAxBase::dynamicCall&lt;/a&gt;() and &lt;a href=&quot;qaxbase#querySubObject&quot;&gt;QAxBase::querySubObject&lt;/a&gt;() as well as the &lt;a href=&quot;qobject#setProperty&quot;&gt;QObject::setProperty&lt;/a&gt;() and &lt;a href=&quot;qobject#property&quot;&gt;QObject::property&lt;/a&gt;() APIs to call the methods and properties of the COM object through their name. Use the &lt;a href=&quot;activeqt-dumpdoc&quot;&gt;dumpdoc&lt;/a&gt; tool to get the documentation of the Qt API for any COM object and its subobjects; note that not all of the COM object's APIs might be available.</source>
          <target state="translated">사용 &lt;a href=&quot;qaxbase#dynamicCall&quot;&gt;QAxBase :: dynamicCall&lt;/a&gt; ()와 &lt;a href=&quot;qaxbase#querySubObject&quot;&gt;QAxBase :: querySubObject&lt;/a&gt; ()뿐만 아니라 &lt;a href=&quot;qobject#setProperty&quot;&gt;QObject를 :: setProperty는&lt;/a&gt; ()와 &lt;a href=&quot;qobject#property&quot;&gt;QObject를 :: 부동산&lt;/a&gt; () 자신의 이름을 통해 COM 개체의 메서드와 속성을 호출하는 API. &lt;a href=&quot;activeqt-dumpdoc&quot;&gt;dumpdoc&lt;/a&gt; 도구를 사용하여 COM 개체 및 하위 개체에 대한 Qt API 문서를 가져옵니다. COM 개체의 모든 API를 사용할 수있는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="203745f45c354ca308bc01394baeb1df663c33b4" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qaxbase#dynamicCall&quot;&gt;QAxBase::dynamicCall&lt;/a&gt;() and &lt;a href=&quot;qaxbase#querySubObject&quot;&gt;QAxBase::querySubObject&lt;/a&gt;() as well as the &lt;a href=&quot;qobject#setProperty&quot;&gt;QObject::setProperty&lt;/a&gt;() and &lt;a href=&quot;qobject#property&quot;&gt;QObject::property&lt;/a&gt;() APIs to call the methods and properties of the COM object through their name. Use the &lt;a href=&quot;activeqt-dumpdoc#&quot;&gt;dumpdoc&lt;/a&gt; tool to get the documentation of the Qt API for any COM object and its subobjects; note that not all of the COM object's APIs might be available.</source>
          <target state="translated">사용 &lt;a href=&quot;qaxbase#dynamicCall&quot;&gt;QAxBase :: dynamicCall&lt;/a&gt; ()와 &lt;a href=&quot;qaxbase#querySubObject&quot;&gt;QAxBase :: querySubObject&lt;/a&gt; ()뿐만 아니라 &lt;a href=&quot;qobject#setProperty&quot;&gt;QObject를 :: setProperty는&lt;/a&gt; ()와 &lt;a href=&quot;qobject#property&quot;&gt;QObject를 :: 부동산&lt;/a&gt; () 자신의 이름을 통해 COM 개체의 메서드와 속성을 호출하는 API. &lt;a href=&quot;activeqt-dumpdoc#&quot;&gt;dumpdoc&lt;/a&gt; 도구를 사용하여 COM 개체 및 해당 하위 개체에 대한 Qt API 설명서를 얻을 수 있습니다. 모든 COM 개체의 API를 사용할 수있는 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="c7091c3f0e537a0c6438097228179d9cdd399da3" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qboxlayout#insertWidget&quot;&gt;insertWidget&lt;/a&gt;(), &lt;a href=&quot;qboxlayout#insertSpacing&quot;&gt;insertSpacing&lt;/a&gt;(), &lt;a href=&quot;qboxlayout#insertStretch&quot;&gt;insertStretch&lt;/a&gt;() or &lt;a href=&quot;qboxlayout#insertLayout&quot;&gt;insertLayout&lt;/a&gt;() to insert a box at a specified position in the layout.</source>
          <target state="translated">사용 &lt;a href=&quot;qboxlayout#insertWidget&quot;&gt;insertWidget&lt;/a&gt; (), &lt;a href=&quot;qboxlayout#insertSpacing&quot;&gt;insertSpacing&lt;/a&gt; (), &lt;a href=&quot;qboxlayout#insertStretch&quot;&gt;insertStretch&lt;/a&gt; () 또는 &lt;a href=&quot;qboxlayout#insertLayout&quot;&gt;insertLayout&lt;/a&gt; () 레이아웃의 지정된 위치에 상자를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="70d561230d418710b1b6b8e03c702c11fb16ad1d" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qdatetime#toTimeSpec&quot;&gt;toTimeSpec&lt;/a&gt;() to express a datetime in local time or UTC, &lt;a href=&quot;qdatetime#toOffsetFromUtc&quot;&gt;toOffsetFromUtc&lt;/a&gt;() to express in terms of an offset from UTC, or &lt;a href=&quot;qdatetime#toTimeZone&quot;&gt;toTimeZone&lt;/a&gt;() to express it with respect to a general time zone. You can use &lt;a href=&quot;qdatetime#timeSpec&quot;&gt;timeSpec&lt;/a&gt;() to find out what time-spec a &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; object stores its time relative to. When that is &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::TimeZone&lt;/a&gt;, you can use &lt;a href=&quot;qdatetime#timeZone&quot;&gt;timeZone&lt;/a&gt;() to find out which zone it is using.</source>
          <target state="translated">&lt;a href=&quot;qdatetime#toTimeSpec&quot;&gt;toTimeSpec&lt;/a&gt; ()을 사용 하여 날짜 시간을 현지 시간으로 표시하거나 UTC로, &lt;a href=&quot;qdatetime#toOffsetFromUtc&quot;&gt;toOffsetFromUtc&lt;/a&gt; ()를 UTC에서 오프셋으로 표시하거나 &lt;a href=&quot;qdatetime#toTimeZone&quot;&gt;toTimeZone&lt;/a&gt; ()을 사용하여 일반 시간대를 기준으로 표시하십시오. &lt;a href=&quot;qdatetime#timeSpec&quot;&gt;timeSpec&lt;/a&gt; ()을 사용 하여 &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; 객체가 시간을 저장하는 시간 사양을 확인할 수 있습니다 . 그것이 &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt :: TimeZone&lt;/a&gt; 인 경우 &lt;a href=&quot;qdatetime#timeZone&quot;&gt;timeZone&lt;/a&gt; ()을 사용하여 사용중인 영역을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f778d1b75c00e8a0999c6baf6610b8ac9c508708" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qdatetime#toTimeSpec&quot;&gt;toTimeSpec&lt;/a&gt;() to express a datetime in local time or UTC, &lt;a href=&quot;qdatetime#toOffsetFromUtc&quot;&gt;toOffsetFromUtc&lt;/a&gt;() to express in terms of an offset from UTC, or &lt;a href=&quot;qdatetime#toTimeZone&quot;&gt;toTimeZone&lt;/a&gt;() to express it with respect to a general time zone. You can use &lt;a href=&quot;qdatetime#timeSpec&quot;&gt;timeSpec&lt;/a&gt;() to find out what time-spec a QDateTime object stores its time relative to. When that is &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::TimeZone&lt;/a&gt;, you can use &lt;a href=&quot;qdatetime#timeZone&quot;&gt;timeZone&lt;/a&gt;() to find out which zone it is using.</source>
          <target state="translated">&lt;a href=&quot;qdatetime#toTimeSpec&quot;&gt;toTimeSpec&lt;/a&gt; ()을 사용 하여 날짜 시간을 현지 시간 또는 UTC 로 표현하고 &lt;a href=&quot;qdatetime#toOffsetFromUtc&quot;&gt;toOffsetFromUtc&lt;/a&gt; ()를 사용하여 UTC로부터의 오프셋 으로 표현 하거나 &lt;a href=&quot;qdatetime#toTimeZone&quot;&gt;toTimeZone&lt;/a&gt; ()을 사용하여 일반 표준 시간대에 대해 표현합니다. &lt;a href=&quot;qdatetime#timeSpec&quot;&gt;timeSpec&lt;/a&gt; ()을 사용 하여 QDateTime 객체가 자신의 시간을 상대적으로 저장하는 시간 사양을 알아낼 수 있습니다. 그것이 &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt :: TimeZone&lt;/a&gt; 인 경우 &lt;a href=&quot;qdatetime#timeZone&quot;&gt;timeZone&lt;/a&gt; ()을 사용하여 사용중인 영역을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="adb794dc208190c78f619c082568cacf3d93ad30" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qdomelement#hasAttributeNS&quot;&gt;hasAttributeNS&lt;/a&gt;() to explicitly test for attributes with specific namespaces and names.</source>
          <target state="translated">&lt;a href=&quot;qdomelement#hasAttributeNS&quot;&gt;hasAttributeNS&lt;/a&gt; ()를 사용 하여 특정 네임 스페이스 및 이름을 가진 속성을 명시 적으로 테스트하십시오.</target>
        </trans-unit>
        <trans-unit id="1bfb7921fddf6fa32f29b4b34a0c410bf28386ee" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qfontdialog#setCurrentFont&quot;&gt;setCurrentFont&lt;/a&gt;() to set the initial font attributes.</source>
          <target state="translated">사용 &lt;a href=&quot;qfontdialog#setCurrentFont&quot;&gt;setCurrentFont는&lt;/a&gt; () 초기 글꼴 속성을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f7aaa1ef563e1ffc927605a904904f302ce3a22e" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt;(const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;, &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *) to get the font metrics that are compatible with a certain paint device.</source>
          <target state="translated">사용 &lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt; (CONST &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp; &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *)는 특정 페인트 장치와 호환되는 폰트 메트릭스를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b445e3a8e00aff61214648891c06ef9f38bd486e" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qfontmetricsf&quot;&gt;QFontMetricsF&lt;/a&gt;(const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;, &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *) to get the font metrics that are compatible with a certain paint device.</source>
          <target state="translated">사용 &lt;a href=&quot;qfontmetricsf&quot;&gt;QFontMetricsF&lt;/a&gt; (CONST &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp; &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *)는 특정 페인트 장치와 호환되는 폰트 메트릭스를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ea1f64e891dc9e7b750e8282d32d24552ab756f0" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qgeocoordinate#type&quot;&gt;type&lt;/a&gt;() to determine whether a coordinate is a 2D coordinate (has latitude and longitude only) or 3D coordinate (has latitude, longitude and altitude). Use &lt;a href=&quot;qgeocoordinate#distanceTo&quot;&gt;distanceTo&lt;/a&gt;() and &lt;a href=&quot;qgeocoordinate#azimuthTo&quot;&gt;azimuthTo&lt;/a&gt;() to calculate the distance and bearing between coordinates.</source>
          <target state="translated">사용 &lt;a href=&quot;qgeocoordinate#type&quot;&gt;유형&lt;/a&gt; ()는 2 차원 좌표 좌표 여부를 결정 (단지 위도와 경도를 가지고) 또는 3D 좌표합니다 (위도, 경도 및 고도가 있습니다). 사용 &lt;a href=&quot;qgeocoordinate#distanceTo&quot;&gt;distanceTo&lt;/a&gt; () 및 &lt;a href=&quot;qgeocoordinate#azimuthTo&quot;&gt;azimuthTo는&lt;/a&gt; ()의 좌표 사이의 거리 및 방위를 산출한다.</target>
        </trans-unit>
        <trans-unit id="6fbe3ad533002b8659e4770885c51714c6581548" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qitemselection#merge&quot;&gt;merge&lt;/a&gt;() to merge one item selection into another without making overlapping ranges. Use &lt;a href=&quot;qitemselection#split&quot;&gt;split&lt;/a&gt;() to split one selection range into smaller ranges based on a another selection range.</source>
          <target state="translated">범위를 겹치지 않고 하나의 항목 선택을 다른 항목으로 병합 하려면 &lt;a href=&quot;qitemselection#merge&quot;&gt;merge&lt;/a&gt; ()를 사용하십시오 . &lt;a href=&quot;qitemselection#split&quot;&gt;split&lt;/a&gt; ()을 사용 하여 다른 선택 범위를 기준으로 한 선택 범위를 더 작은 범위로 분할합니다.</target>
        </trans-unit>
        <trans-unit id="06e02a826412107e0301529d5eb5578e79e1b1df" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qjsengine#evaluate&quot;&gt;evaluate&lt;/a&gt;() to evaluate script code.</source>
          <target state="translated">&lt;a href=&quot;qjsengine#evaluate&quot;&gt;평가&lt;/a&gt; ()를 사용 하여 스크립트 코드를 평가 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c84eccc3dd54757c7f7ea76cb6b5eeeca2c236b5" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qjsengine#newObject&quot;&gt;newObject&lt;/a&gt;() to create a JavaScript object; this is the C++ equivalent of the script statement &lt;code&gt;new Object()&lt;/code&gt;. You can use the object-specific functionality in &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; to manipulate the script object (e.g. &lt;a href=&quot;qjsvalue#setProperty&quot;&gt;QJSValue::setProperty&lt;/a&gt;()). Similarly, use &lt;a href=&quot;qjsengine#newArray&quot;&gt;newArray&lt;/a&gt;() to create a JavaScript array object.</source>
          <target state="translated">사용 &lt;a href=&quot;qjsengine#newObject&quot;&gt;NewObject에&lt;/a&gt; () 자바 스크립트 객체를 생성하기 위해; 이것은 스크립트 문 &lt;code&gt;new Object()&lt;/code&gt; 와 동등한 C ++ 입니다. &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; 의 객체 별 기능 을 사용하여 스크립트 객체를 조작 할 수 있습니다 (예 : &lt;a href=&quot;qjsvalue#setProperty&quot;&gt;QJSValue :: setProperty&lt;/a&gt; ()). 마찬가지로 &lt;a href=&quot;qjsengine#newArray&quot;&gt;newArray&lt;/a&gt; ()를 사용하여 JavaScript 배열 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="e015fd755af0f5d744f6a2e1fa36b322966ac83c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qjsengine#newQMetaObject-1&quot;&gt;newQMetaObject&lt;/a&gt;() to wrap a &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt;; this gives you a &quot;script representation&quot; of a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;-based class. &lt;a href=&quot;qjsengine#newQMetaObject-1&quot;&gt;newQMetaObject&lt;/a&gt;() returns a proxy script object; enum values of the class are available as properties of the proxy object.</source>
          <target state="translated">&lt;a href=&quot;qjsengine#newQMetaObject-1&quot;&gt;newQMetaObject&lt;/a&gt; ()를 사용 하여 &lt;a href=&quot;qmetaobject&quot;&gt;QMetaObject&lt;/a&gt; 를 래핑하십시오 . 이것은 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 기반 클래스 의 &quot;스크립트 표현&quot;을 제공합니다 . &lt;a href=&quot;qjsengine#newQMetaObject-1&quot;&gt;newQMetaObject&lt;/a&gt; ()는 프록시 스크립트 객체를 반환합니다. 클래스의 열거 형 값은 프록시 객체의 속성으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ceb2fe5ede15dc78f5979a6790984e7675ba4186" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qjsengine#newQObject&quot;&gt;newQObject&lt;/a&gt;() to wrap a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; (or subclass) pointer. &lt;a href=&quot;qjsengine#newQObject&quot;&gt;newQObject&lt;/a&gt;() returns a proxy script object; properties, children, and signals and slots of the &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; are available as properties of the proxy object. No binding code is needed because it is done dynamically using the Qt meta object system.</source>
          <target state="translated">&lt;a href=&quot;qjsengine#newQObject&quot;&gt;newQObject&lt;/a&gt; ()를 사용 하여 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; (또는 서브 클래스) 포인터 를 래핑하십시오 . &lt;a href=&quot;qjsengine#newQObject&quot;&gt;newQObject&lt;/a&gt; ()는 프록시 스크립트 객체를 반환합니다. 프록시 객체의 속성으로 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 의 속성, 자식 및 신호와 슬롯을 사용할 수 있습니다. Qt 메타 오브젝트 시스템을 사용하여 동적으로 수행되므로 바인딩 코드가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6c08c3adb0c370fde7a6fee2ad028de5aaa749ff" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qjsvalue#equals&quot;&gt;equals&lt;/a&gt;() or &lt;a href=&quot;qjsvalue#strictlyEquals&quot;&gt;strictlyEquals&lt;/a&gt;() to compare a &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; to another.</source>
          <target state="translated">사용 &lt;a href=&quot;qjsvalue#equals&quot;&gt;등호&lt;/a&gt; () 또는 &lt;a href=&quot;qjsvalue#strictlyEquals&quot;&gt;strictlyEquals는&lt;/a&gt; ()를 비교하는 &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue을&lt;/a&gt; 다른.</target>
        </trans-unit>
        <trans-unit id="e4fa4ae06277e384ae8dfd72d06438339b979ffa" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qjsvalue#equals&quot;&gt;equals&lt;/a&gt;() or &lt;a href=&quot;qjsvalue#strictlyEquals&quot;&gt;strictlyEquals&lt;/a&gt;() to compare a QJSValue to another.</source>
          <target state="translated">&lt;a href=&quot;qjsvalue#equals&quot;&gt;같음&lt;/a&gt; () 또는 &lt;a href=&quot;qjsvalue#strictlyEquals&quot;&gt;엄격하게 &lt;/a&gt;같음 ()을 사용 하여 QJSValue를 다른 값과 비교하십시오.</target>
        </trans-unit>
        <trans-unit id="ef6da67cb3bdd0e590c116dc0c1b84fa126d1578" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt;'s methods for converting dates and times to and from strings, with the &lt;a href=&quot;qlocale#FormatType-enum&quot;&gt;long format&lt;/a&gt; of &lt;a href=&quot;qlocale#system&quot;&gt;the locale used by the operating system&lt;/a&gt;.</source>
          <target state="translated">사용 &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; 's를 함께와 문자열에서 날짜와 시간을 변환하는 방법 &lt;a href=&quot;qlocale#FormatType-enum&quot;&gt;긴 형식&lt;/a&gt; 의 &lt;a href=&quot;qlocale#system&quot;&gt;운영 체제에서 사용하는 로케일&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b91cbe0082c58945ec546a55527667c691b09997" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt;'s methods for converting dates and times to and from strings, with the &lt;a href=&quot;qlocale#FormatType-enum&quot;&gt;long format&lt;/a&gt;&lt;a href=&quot;qlocale#setDefault&quot;&gt;the application's locale&lt;/a&gt;.</source>
          <target state="translated">사용 &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; 's를 함께와 문자열에서 날짜와 시간을 변환하는 방법 &lt;a href=&quot;qlocale#FormatType-enum&quot;&gt;긴 형식으로 &lt;/a&gt;&lt;a href=&quot;qlocale#setDefault&quot;&gt;응용 프로그램의 로케일&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b735e7137a70b7dd53edfc8c0a0bd414cc04a8e6" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt;'s methods for converting dates and times to and from strings, with the &lt;a href=&quot;qlocale#FormatType-enum&quot;&gt;short format&lt;/a&gt; of &lt;a href=&quot;qlocale#setDefault&quot;&gt;the application's locale&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; 의 메서드를 사용 &lt;a href=&quot;qlocale#setDefault&quot;&gt;하여 응용 프로그램 로케일&lt;/a&gt; 의 &lt;a href=&quot;qlocale#FormatType-enum&quot;&gt;짧은 형식&lt;/a&gt; 으로 날짜와 시간을 문자열간에 변환 합니다.</target>
        </trans-unit>
        <trans-unit id="07663829633e1bb820fdeef881066df6e191edb1" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt;'s methods for converting dates and times to and from strings, with the &lt;a href=&quot;qlocale#FormatType-enum&quot;&gt;short format&lt;/a&gt; of &lt;a href=&quot;qlocale#system&quot;&gt;the locale used by the operating system&lt;/a&gt;.</source>
          <target state="translated">사용 &lt;a href=&quot;qlocale&quot;&gt;QLocale&lt;/a&gt; 's를 함께와 문자열에서 날짜와 시간을 변환하는 방법 &lt;a href=&quot;qlocale#FormatType-enum&quot;&gt;짧은 형식&lt;/a&gt; 의 &lt;a href=&quot;qlocale#system&quot;&gt;운영 체제에서 사용하는 로케일&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bc257bfed596e0c341c01073ccf325fbb04f5c53" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qlocale#language&quot;&gt;language&lt;/a&gt;() and &lt;a href=&quot;qlocale#country&quot;&gt;country&lt;/a&gt;() to determine the actual language and country values used.</source>
          <target state="translated">사용 &lt;a href=&quot;qlocale#language&quot;&gt;언어&lt;/a&gt; ()와 &lt;a href=&quot;qlocale#country&quot;&gt;국가&lt;/a&gt; () 사용하는 실제 언어 및 국가 값을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="54442cceb97489d0e389f7f509947eff85773113" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qmainwindow#restoreState&quot;&gt;QMainWindow::restoreState&lt;/a&gt;() to restore the geometry and the state of toolbars and dock widgets.</source>
          <target state="translated">&lt;a href=&quot;qmainwindow#restoreState&quot;&gt;QMainWindow :: restoreState&lt;/a&gt; ()를 사용 하여 도구 모음 및 도킹 위젯의 지오메트리 및 상태를 복원하십시오.</target>
        </trans-unit>
        <trans-unit id="37dd54ee1f6c1b5c7384480f7cd51fb38890c7f0" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qmainwindow#saveState&quot;&gt;QMainWindow::saveState&lt;/a&gt;() to save the geometry and the state of toolbars and dock widgets.</source>
          <target state="translated">사용 &lt;a href=&quot;qmainwindow#saveState&quot;&gt;QMainWindow :: saveState는&lt;/a&gt; () 형상 및 도구 모음의 상태를 저장하고 위젯을 고정합니다.</target>
        </trans-unit>
        <trans-unit id="04199760abf62b7290d0198365f16e0b8cf87701" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qmetaenum#name&quot;&gt;name&lt;/a&gt;() for the enumerator's name. The enumerator's keys (names of each enumerated item) are returned by &lt;a href=&quot;qmetaenum#key&quot;&gt;key&lt;/a&gt;(); use &lt;a href=&quot;qmetaenum#keyCount&quot;&gt;keyCount&lt;/a&gt;() to find the number of keys. &lt;a href=&quot;qmetaenum#isFlag&quot;&gt;isFlag&lt;/a&gt;() returns whether the enumerator is meant to be used as a flag, meaning that its values can be combined using the OR operator.</source>
          <target state="translated">열거 자의 이름으로 &lt;a href=&quot;qmetaenum#name&quot;&gt;name&lt;/a&gt; ()을 사용하십시오 . 열거 자의 키 (각 열거 된 항목의 이름)는 &lt;a href=&quot;qmetaenum#key&quot;&gt;키&lt;/a&gt; () 로 반환됩니다 . &lt;a href=&quot;qmetaenum#keyCount&quot;&gt;keyCount&lt;/a&gt; ()를 사용 하여 키 수를 찾으십시오. &lt;a href=&quot;qmetaenum#isFlag&quot;&gt;isFlag&lt;/a&gt; ()는 열거자가 플래그로 사용되는지 여부를 리턴합니다. 즉, OR 연산자를 사용하여 해당 값을 결합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="092fec30ef6d05f4d1f05e1f182deb3fa971609f" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qml-qt3d-core-skeletonloader&quot;&gt;SkeletonLoader&lt;/a&gt; if you wish to load a whole skeleton from file rather than creating the joints yourself using Skeleton and Joints. Creating a skeleton and binding the vertices of a mesh to the skeleton is most easily performed in a 3D digital content creation tool such as Blender. The resulting skeleton and mesh can then be exported in a suitable format such as glTF 2 for consumption by Qt 3D.</source>
          <target state="translated">스켈레톤 및 조인트를 사용하여 조인트를 직접 만드는 대신 파일에서 전체 스켈레톤을로드 하려면 &lt;a href=&quot;qml-qt3d-core-skeletonloader&quot;&gt;SkeletonLoader를&lt;/a&gt; 사용하십시오 . 스켈레톤을 만들고 메시의 정점을 스켈레톤에 바인딩하는 것은 Blender와 같은 3D 디지털 컨텐츠 제작 도구에서 가장 쉽게 수행됩니다. 그런 다음 결과 스켈레톤 및 메시를 Qt 3D에서 소비하기 위해 glTF 2와 같은 적절한 형식으로 내보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3465cc8f0a003c1b7129b938f70a83ae20769855" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qml-qtlocation-dynamicparameter&quot;&gt;DynamicParameter&lt;/a&gt; instead.</source>
          <target state="translated">대신 &lt;a href=&quot;qml-qtlocation-dynamicparameter&quot;&gt;DynamicParameter&lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="41f412ceb6635349b5b6b525c92e8d5617c33875" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qml-qtqml-models-itemselectionmodel#setCurrentIndex-method&quot;&gt;setCurrentIndex()&lt;/a&gt; to set its value.</source>
          <target state="translated">&lt;a href=&quot;qml-qtqml-models-itemselectionmodel#setCurrentIndex-method&quot;&gt;setCurrentIndex ()&lt;/a&gt; 를 사용하여 값을 설정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="737d2d82eb745d741f5687e4339ea34286a95597" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qml-qtqml-workerscript&quot;&gt;WorkerScript&lt;/a&gt; to run operations in a new thread. This is useful for running operations in the background so that the main GUI thread is not blocked.</source>
          <target state="translated">&lt;a href=&quot;qml-qtqml-workerscript&quot;&gt;WorkerScript&lt;/a&gt; 를 사용 하여 새 스레드에서 작업을 실행 하십시오 . 기본 GUI 스레드가 차단되지 않도록 백그라운드에서 작업을 실행하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="2e16b3a62f0aba818c316d1ec672aee11485fec2" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qml-qtquick-item#anchors-prop&quot;&gt;anchors&lt;/a&gt; or the &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;width&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;height&lt;/a&gt; properties to specify the size of the layout against its non-layout parent item.</source>
          <target state="translated">비 레이아웃 부모 항목에 대해 레이아웃 크기를 지정 하려면 &lt;a href=&quot;qml-qtquick-item#anchors-prop&quot;&gt;앵커&lt;/a&gt; 또는 &lt;a href=&quot;qml-qtquick-item#width-prop&quot;&gt;너비&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-item#height-prop&quot;&gt;높이&lt;/a&gt; 속성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="972b12daeb84e7b667702141aa805ebaf9b3af76" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qml-qtwebengine-webengineview#userScripts-prop&quot;&gt;WebEngineView.userScripts&lt;/a&gt; to access a list of scripts attached to the web view.</source>
          <target state="translated">&lt;a href=&quot;qml-qtwebengine-webengineview#userScripts-prop&quot;&gt;WebEngineView.userScripts&lt;/a&gt; 를 사용 하여 웹보기에 첨부 된 스크립트 목록에 액세스 하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf461125db045aa345726b88900db97e2325700b" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qndefrecord#id&quot;&gt;id&lt;/a&gt;() and &lt;a href=&quot;qndefrecord#setId&quot;&gt;setId&lt;/a&gt;() to get and set the id of the NDEF record.</source>
          <target state="translated">사용 &lt;a href=&quot;qndefrecord#id&quot;&gt;ID&lt;/a&gt; ()와 &lt;a href=&quot;qndefrecord#setId&quot;&gt;setId는&lt;/a&gt; () 수와 NDEF 레코드의 ID를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="f5560f2befe6a2dec0675a33bd5ddb7545bf678f" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qndefrecord#payload&quot;&gt;payload&lt;/a&gt;() and &lt;a href=&quot;qndefrecord#setPayload&quot;&gt;setPayload&lt;/a&gt;() to get and set the NDEF record payload. &lt;a href=&quot;qndefrecord#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() can be used to test if the payload is empty.</source>
          <target state="translated">사용 &lt;a href=&quot;qndefrecord#payload&quot;&gt;페이로드&lt;/a&gt; ()와 &lt;a href=&quot;qndefrecord#setPayload&quot;&gt;위해서 setPayload는&lt;/a&gt; () 수와 NDEF 레코드 페이로드를 설정합니다. 페이로드가 비어 있는지 테스트하는 데 &lt;a href=&quot;qndefrecord#isEmpty&quot;&gt;isEmpty&lt;/a&gt; ()를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42b60d0e909f57d392b1e03cbe6e54e4e86aa85e" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qndefrecord#type&quot;&gt;type&lt;/a&gt;() and &lt;a href=&quot;qndefrecord#setType&quot;&gt;setType&lt;/a&gt;() to get and set the type of the NDEF record.</source>
          <target state="translated">사용 &lt;a href=&quot;qndefrecord#type&quot;&gt;유형&lt;/a&gt; ()와 &lt;a href=&quot;qndefrecord#setType&quot;&gt;setType은&lt;/a&gt; () 수와 NDEF 레코드의 유형을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="6d0dfe0d48573446314a768d1b14b54fea968ed1" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qndefrecord#typeNameFormat&quot;&gt;typeNameFormat&lt;/a&gt;() and &lt;a href=&quot;qndefrecord#setTypeNameFormat&quot;&gt;setTypeNameFormat&lt;/a&gt;() to get and set the type name format of the NDEF record.</source>
          <target state="translated">사용 &lt;a href=&quot;qndefrecord#typeNameFormat&quot;&gt;typeNameFormat&lt;/a&gt; ()와 &lt;a href=&quot;qndefrecord#setTypeNameFormat&quot;&gt;setTypeNameFormat는&lt;/a&gt; () 수와 NDEF 레코드의 유형 이름 형식을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="3e772d8d57de5d362d8fa08c83caa15e27a7c603" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qnmeapositioninfosource#startUpdates&quot;&gt;startUpdates&lt;/a&gt;() to start receiving regular position updates and &lt;a href=&quot;qnmeapositioninfosource#stopUpdates&quot;&gt;stopUpdates&lt;/a&gt;() to stop these updates. If you only require updates occasionally, you can call &lt;a href=&quot;qnmeapositioninfosource#requestUpdate&quot;&gt;requestUpdate&lt;/a&gt;() to request a single update.</source>
          <target state="translated">&lt;a href=&quot;qnmeapositioninfosource#startUpdates&quot;&gt;startUpdates&lt;/a&gt; ()를 사용 하여 정기적 인 위치 업데이트 수신을 시작하고 &lt;a href=&quot;qnmeapositioninfosource#stopUpdates&quot;&gt;stopUpdates&lt;/a&gt; ()를 사용하여 이러한 업데이트를 중지하십시오. 가끔 업데이트 만 필요한 경우 &lt;a href=&quot;qnmeapositioninfosource#requestUpdate&quot;&gt;requestUpdate&lt;/a&gt; ()를 호출 하여 단일 업데이트를 요청할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9d8c1247a3dd708d9b791294516095aa29417833" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;() to test whether a plugin implements a given interface.</source>
          <target state="translated">플러그인이 주어진 인터페이스를 구현하는지 테스트 하려면 &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt; ()를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9fe7466a0bfd6dfb43f4d51239ccba5068256fdd" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qpagedpaintdevice#pageRanges&quot;&gt;QPagedPaintDevice::pageRanges&lt;/a&gt;() to access the collection of page ranges associated with a paged device.</source>
          <target state="translated">사용 &lt;a href=&quot;qpagedpaintdevice#pageRanges&quot;&gt;QPagedPaintDevice :: pageRanges는&lt;/a&gt; ()는 페이징 장치와 연결된 페이지 범위의 컬렉션에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df1e686d2e07b940a3de8628769b5e2ecdd65af0" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qpainter#fontInfo&quot;&gt;QPainter::fontInfo&lt;/a&gt;() to get the font info when painting. This will give correct results also when painting on paint device that is not screen-compatible.</source>
          <target state="translated">그림을 그릴 때 글꼴 정보를 얻으려면 &lt;a href=&quot;qpainter#fontInfo&quot;&gt;QPainter :: fontInfo&lt;/a&gt; ()를 사용하십시오 . 이는 화면과 호환되지 않는 페인트 장치에 페인트 할 때도 올바른 결과를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cb7190ee690829c0bd8b4cba8c79176526ba12df" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qpixmapcache#insert&quot;&gt;QPixmapCache::insert&lt;/a&gt;() to receive an instance of Key generated by the pixmap cache. You can store the key in your own objects for a very efficient one-to-one object-to-pixmap mapping.</source>
          <target state="translated">pixmap 캐시에 의해 생성 된 Key 인스턴스를 받으려면 &lt;a href=&quot;qpixmapcache#insert&quot;&gt;QPixmapCache :: insert&lt;/a&gt; ()를 사용하십시오 . 매우 효율적인 일대일 객체 대 픽스맵 매핑을 위해 자신의 객체에 키를 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8187dfc50f39da6c36610892868cdad09e9dee5a" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt; in the application to load the plugins.</source>
          <target state="translated">애플리케이션에서 &lt;a href=&quot;qpluginloader&quot;&gt;QPluginLoader&lt;/a&gt; 를 사용 하여 플러그인을로드하십시오.</target>
        </trans-unit>
        <trans-unit id="fae69af0f4f5aa3412750574e5617d045cfef6d0" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qprogressdialog#minimum-prop&quot;&gt;setMinimum&lt;/a&gt;() and &lt;a href=&quot;qprogressdialog#maximum-prop&quot;&gt;setMaximum&lt;/a&gt;() or the constructor to set the number of &quot;steps&quot; in the operation and call &lt;a href=&quot;qprogressdialog#value-prop&quot;&gt;setValue&lt;/a&gt;() as the operation progresses. The number of steps can be chosen arbitrarily. It can be the number of files copied, the number of bytes received, the number of iterations through the main loop of your algorithm, or some other suitable unit. Progress starts at the value set by &lt;a href=&quot;qprogressdialog#minimum-prop&quot;&gt;setMinimum&lt;/a&gt;(), and the progress dialog shows that the operation has finished when you call &lt;a href=&quot;qprogressdialog#value-prop&quot;&gt;setValue&lt;/a&gt;() with the value set by &lt;a href=&quot;qprogressdialog#maximum-prop&quot;&gt;setMaximum&lt;/a&gt;() as its argument.</source>
          <target state="translated">사용 &lt;a href=&quot;qprogressdialog#minimum-prop&quot;&gt;setMinimum&lt;/a&gt; ()와 &lt;a href=&quot;qprogressdialog#maximum-prop&quot;&gt;setMaximum&lt;/a&gt; () 또는 생성자는 운영 및 호출 &quot;단계&quot;의 수를 설정합니다 &lt;a href=&quot;qprogressdialog#value-prop&quot;&gt;setValue의&lt;/a&gt; 동작 진행을 (). 단계 수는 임의로 선택할 수 있습니다. 복사 된 파일 수, 수신 된 바이트 수, 알고리즘의 메인 루프를 통한 반복 횟수 또는 기타 적절한 단위 일 수 있습니다. 진행은 &lt;a href=&quot;qprogressdialog#minimum-prop&quot;&gt;setMinimum&lt;/a&gt; ()에 의해 설정된 값에서 시작하며 진행 대화 상자는 &lt;a href=&quot;qprogressdialog#maximum-prop&quot;&gt;setMaximum&lt;/a&gt; ()에 의해 설정된 값을 인수로하여 &lt;a href=&quot;qprogressdialog#value-prop&quot;&gt;setValue&lt;/a&gt; () 를 호출 할 때 작업이 완료되었음을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="e5d96568faeebf0e561f61b9437023816a9ad10b" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsettings#beginWriteArray&quot;&gt;beginWriteArray&lt;/a&gt;() to write the array in the first place.</source>
          <target state="translated">&lt;a href=&quot;qsettings#beginWriteArray&quot;&gt;beginWriteArray&lt;/a&gt; ()를 사용 하여 처음에 배열을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="eb58b85b7d9ec5dc63901aee0355e9294419a04d" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsgimagenode#setOwnsTexture&quot;&gt;setOwnsTexture&lt;/a&gt;() to set whether the node should take ownership of the texture. By default, the node does not take ownership.</source>
          <target state="translated">&lt;a href=&quot;qsgimagenode#setOwnsTexture&quot;&gt;setOwnsTexture&lt;/a&gt; ()를 사용 하여 노드가 텍스처의 소유권을 가져야하는지 여부를 설정 하십시오 . 기본적으로 노드는 소유권을 갖지 않습니다.</target>
        </trans-unit>
        <trans-unit id="90fc1a0c12a5aad023e028072c88601cd61a73e5" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsgsimpletexturenode#setOwnsTexture&quot;&gt;setOwnsTexture&lt;/a&gt;() to set whether the node should take ownership of the texture. By default, the node does not take ownership.</source>
          <target state="translated">&lt;a href=&quot;qsgsimpletexturenode#setOwnsTexture&quot;&gt;setOwnsTexture&lt;/a&gt; ()를 사용 하여 노드가 텍스처의 소유권을 가져야하는지 여부를 설정 하십시오 . 기본적으로 노드는 소유권을 갖지 않습니다.</target>
        </trans-unit>
        <trans-unit id="59cfb9e6ae847043262a4b13b6c398fbaea62d5f" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsizepolicy#setHeightForWidth&quot;&gt;setHeightForWidth&lt;/a&gt;() if the preferred height of the widget is dependent on the width of the widget (for example, a &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; with line wrapping).</source>
          <target state="translated">위젯의 선호 높이가 위젯의 너비 (예 : 줄 바꿈이 있는 &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; )에 종속되는 경우 &lt;a href=&quot;qsizepolicy#setHeightForWidth&quot;&gt;setHeightForWidth&lt;/a&gt; ()를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c547cb8d97470f7a4140bb3ab6a1d5429485fd8c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsqlfield#isNull&quot;&gt;isNull&lt;/a&gt;() to check if the field's value is NULL.</source>
          <target state="translated">&lt;a href=&quot;qsqlfield#isNull&quot;&gt;isNull&lt;/a&gt; ()을 사용 하여 필드 값이 NULL인지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="a0628a4874fdeaa3ac830af517fbef1a11f80bc7" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsqltablemodel#record&quot;&gt;QSqlTableModel::record&lt;/a&gt;() to retrieve a row in the table, and &lt;a href=&quot;qsqltablemodel#setRecord&quot;&gt;QSqlTableModel::setRecord&lt;/a&gt;() to modify the row. For example, the following code will increase every employee's salary by 10 per cent:</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel#record&quot;&gt;QSqlTableModel :: record&lt;/a&gt; ()를 사용 하여 테이블에서 행을 검색하고 &lt;a href=&quot;qsqltablemodel#setRecord&quot;&gt;QSqlTableModel :: setRecord&lt;/a&gt; ()를 사용하여 행을 수정하십시오. 예를 들어 다음 코드는 모든 직원의 급여를 10 % 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="1ddd8306c232fce46ef9fc3459ecd3c3cd556944" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsqltablemodel#revertAll&quot;&gt;revertAll&lt;/a&gt;() to revert all pending changes for the &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnManualSubmit&lt;/a&gt; strategy or &lt;a href=&quot;qsqltablemodel#revertRow&quot;&gt;revertRow&lt;/a&gt;() to revert a specific row.</source>
          <target state="translated">사용 &lt;a href=&quot;qsqltablemodel#revertAll&quot;&gt;revertAll은&lt;/a&gt; ()에 대한 모든 보류중인 변경 되 돌리는 &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnManualSubmit의&lt;/a&gt; 전략 또는 &lt;a href=&quot;qsqltablemodel#revertRow&quot;&gt;revertRow&lt;/a&gt; 특정 행을 되돌릴 수를 ().</target>
        </trans-unit>
        <trans-unit id="751729d1392037ff22bcc5b2c9e3fc42fe3bd880" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsqltablemodel#submitAll&quot;&gt;submitAll&lt;/a&gt;() to submit all pending changes for the &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnManualSubmit&lt;/a&gt; strategy.</source>
          <target state="translated">&lt;a href=&quot;qsqltablemodel#submitAll&quot;&gt;submitAll&lt;/a&gt; ()을 사용 하여 &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnManualSubmit&lt;/a&gt; 전략에 대해 보류중인 모든 변경 사항을 제출하십시오 .</target>
        </trans-unit>
        <trans-unit id="24f83202cbc03e63d003257a0aaf421447dc3728" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; and its member functions to set these parameters, e.g.:</source>
          <target state="translated">사용 &lt;a href=&quot;qsslconfiguration&quot;&gt;QSslConfiguration&lt;/a&gt; 과 그 멤버 함수는, 예를 들어, 이러한 매개 변수를 설정합니다 :</target>
        </trans-unit>
        <trans-unit id="21d2266b00ff19d746e0ef7592ae487d87b5639b" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qstatictext#size&quot;&gt;size&lt;/a&gt;() to get the actual size of the text.</source>
          <target state="translated">텍스트의 실제 크기를 얻으려면 &lt;a href=&quot;qstatictext#size&quot;&gt;size&lt;/a&gt; ()를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="043d6644dbca31b5e4af9a55355dc4a2df6e5e0e" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt::Horizontal&lt;/a&gt; for tabular data that looks like this:</source>
          <target state="translated">다음과 같은 테이블 형식 데이터 에는 &lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt :: Horizontal&lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1f0640769d130bbca44dadeda2e9d5c32c404b0d" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt::Vertical&lt;/a&gt; for tabular data that looks like this:</source>
          <target state="translated">다음과 같은 표 형식 데이터 에는 &lt;a href=&quot;qt#Orientation-enum&quot;&gt;Qt :: Vertical&lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="30fc62850e4f06af1c4c398920e9039c6b44e469" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qt3dcore-qskeleton&quot;&gt;QSkeleton&lt;/a&gt; if you wish to manually create the joints of a skeleton for use with skinned meshes. This is mainly of use to people creating editors, tooling, or dynamic skeletons. It is more common that a Qt 3D application would simply consume an existing skeleton and skinned mesh as created in a digital content creation tool such as Blender. For this use case, please see &lt;a href=&quot;qt3dcore-qskeletonloader&quot;&gt;QSkeletonLoader&lt;/a&gt;.</source>
          <target state="translated">스킨 메시에 사용할 스켈레톤 조인트를 수동으로 만들려면 &lt;a href=&quot;qt3dcore-qskeleton&quot;&gt;QSkeleton을&lt;/a&gt; 사용하십시오 . 이것은 주로 에디터, 툴링 또는 다이내믹 스켈레톤을 만드는 사람들에게 유용합니다. Qt 3D 애플리케이션은 Blender와 같은 디지털 컨텐츠 제작 도구에서 생성 된 기존 스켈레톤 및 스킨 메시를 단순히 사용하는 것이 더 일반적입니다. 이 사용 사례는 &lt;a href=&quot;qt3dcore-qskeletonloader&quot;&gt;QSkeletonLoader&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a0eca6e0f08bef6a6fcddc48e2945b8e95692625" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qtest#QSKIP&quot;&gt;QSKIP&lt;/a&gt;() to handle cases where a whole test function is found at run-time to be inapplicable in the current test environment. When just a part of a test function is to be skipped, a conditional statement can be used, optionally with a &lt;code&gt;qDebug()&lt;/code&gt; call to report the reason for skipping the inapplicable part.</source>
          <target state="translated">&lt;a href=&quot;qtest#QSKIP&quot;&gt;QSKIP&lt;/a&gt; ()를 사용 하여 현재 테스트 환경에서 적용 할 수없는 전체 테스트 기능이 런타임에 발견되는 경우를 처리 하십시오 . 테스트 함수의 일부만 건너 뛰어야 할 때 조건문을 사용할 수 있으며, 선택적으로 &lt;code&gt;qDebug()&lt;/code&gt; 호출 과 함께 적용 할 수없는 부분을 건너 뛰는 이유를보고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7531f4c82f2fb7627db295024efe8fd1ce739e51" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qtextedit#html-prop&quot;&gt;setHtml&lt;/a&gt;() or &lt;a href=&quot;qtextedit#setPlainText&quot;&gt;setPlainText&lt;/a&gt;() directly to avoid text edit's guessing.</source>
          <target state="translated">텍스트 편집의 추측을 피 하려면 &lt;a href=&quot;qtextedit#html-prop&quot;&gt;setHtml&lt;/a&gt; () 또는 &lt;a href=&quot;qtextedit#setPlainText&quot;&gt;setPlainText&lt;/a&gt; ()를 직접 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0774ff7f64bac4ee0db4ae28e7d13daa208ad733" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qtexttospeech#say&quot;&gt;say&lt;/a&gt;() to start synthesizing text. It is possible to specify the language with &lt;a href=&quot;qtexttospeech#setLocale&quot;&gt;setLocale&lt;/a&gt;(). To select between the available voices use &lt;a href=&quot;qtexttospeech#setVoice&quot;&gt;setVoice&lt;/a&gt;(). The languages and voices depend on the available synthesizers on each platform. On Linux, &lt;code&gt;speech-dispatcher&lt;/code&gt; is used by default.</source>
          <target state="translated">&lt;a href=&quot;qtexttospeech#say&quot;&gt;say&lt;/a&gt; ()를 사용 하여 텍스트 합성을 시작하십시오. &lt;a href=&quot;qtexttospeech#setLocale&quot;&gt;setLocale&lt;/a&gt; () 을 사용하여 언어를 지정할 수 있습니다 . 사용 가능한 음성 중에서 선택하려면 &lt;a href=&quot;qtexttospeech#setVoice&quot;&gt;setVoice&lt;/a&gt; ()를 사용 하십시오 . 언어와 음성은 각 플랫폼에서 사용 가능한 신디사이저에 따라 다릅니다. Linux에서는 &lt;code&gt;speech-dispatcher&lt;/code&gt; 가 기본적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ce19158a2c7459c786adf2a771f98eb9bcc732a8" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qthread#wait&quot;&gt;wait&lt;/a&gt;() to block the calling thread, until the other thread has finished execution (or until a specified time has passed).</source>
          <target state="translated">다른 스레드가 실행을 완료 할 때까지 (또는 지정된 시간이 지날 때까지) &lt;a href=&quot;qthread#wait&quot;&gt;wait&lt;/a&gt; ()를 사용 하여 호출 스레드를 차단하십시오.</target>
        </trans-unit>
        <trans-unit id="58c9dbfbfae40617c5e8b4c649d9881837e1ce8c" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qtquick-modelviewsdata-cppmodels#qabstractitemmodel-subclass&quot;&gt;C++&lt;/a&gt; for dynamic data sets that are large or frequently modified.</source>
          <target state="translated">크거나 자주 수정되는 동적 데이터 세트 에는 &lt;a href=&quot;qtquick-modelviewsdata-cppmodels#qabstractitemmodel-subclass&quot;&gt;C ++&lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e8ff40af02a098503c575cd9b0863c314f591baf" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qvector3d#crossProduct&quot;&gt;crossProduct&lt;/a&gt;() to compute the cross-product of</source>
          <target state="translated">사용 &lt;a href=&quot;qvector3d#crossProduct&quot;&gt;벡터 곱은&lt;/a&gt; ()의 크로스 제품을 계산하기</target>
        </trans-unit>
        <trans-unit id="e8a99583c372a254fa43911ebca4251b2750b9ff" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qwebenginepage#scripts&quot;&gt;QWebEnginePage::scripts&lt;/a&gt;() and &lt;a href=&quot;qwebengineprofile#scripts&quot;&gt;QWebEngineProfile::scripts&lt;/a&gt;() to access the collection of scripts associated with a single page or a number of pages sharing the same profile.</source>
          <target state="translated">사용 &lt;a href=&quot;qwebenginepage#scripts&quot;&gt;QWebEnginePage :: 스크립트&lt;/a&gt; ()와 &lt;a href=&quot;qwebengineprofile#scripts&quot;&gt;QWebEngineProfile :: 스크립트&lt;/a&gt; () 단일 페이지 또는 동일한 프로필을 공유하는 페이지 수와 관련된 스크립트의 컬렉션에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b28907d617d8c52bc8aeb3da0f4ffe06f772632a" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qwebengineprofile#cookieStore&quot;&gt;QWebEngineProfile::cookieStore&lt;/a&gt;() and &lt;a href=&quot;qquickwebengineprofile#cookieStore&quot;&gt;QQuickWebEngineProfile::cookieStore&lt;/a&gt;() to access the cookie store object for a specific profile.</source>
          <target state="translated">사용 &lt;a href=&quot;qwebengineprofile#cookieStore&quot;&gt;QWebEngineProfile :: CookieStore에는&lt;/a&gt; ()와 &lt;a href=&quot;qquickwebengineprofile#cookieStore&quot;&gt;QQuickWebEngineProfile :: CookieStore에는&lt;/a&gt; (가) 특정 프로파일에 대한 쿠키 저장소 개체에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b427fffb0033f7a72d0ff6a579048e951dc7b14a" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qwidget#setScreen&quot;&gt;QWidget::setScreen&lt;/a&gt;() to create a &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; on a specific display; note that this does not move a widget to a screen in a virtual desktop setup.</source>
          <target state="translated">사용 &lt;a href=&quot;qwidget#setScreen&quot;&gt;는 QWidget :: setScreen는&lt;/a&gt; ()를 만들 수 &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;는 QWidget&lt;/a&gt; 특정 디스플레이를; 이것은 가상 데스크톱 설정에서 위젯을 화면으로 이동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="22c3a5ba67f4e3e2a876325083eb9253417491fa" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qwidget#windowHandle&quot;&gt;QWidget::windowHandle&lt;/a&gt;() to get a &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; pointer from a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; instance. At app startup the &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; might not have been created yet, call &lt;a href=&quot;qwidget#winId&quot;&gt;QWidget::winId&lt;/a&gt;() to make sure it is.</source>
          <target state="translated">&lt;a href=&quot;qwidget#windowHandle&quot;&gt;QWidget :: windowHandle&lt;/a&gt; ()을 사용 하여 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 인스턴스 에서 &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; 포인터 를 가져옵니다 . 앱을 시작할 때 &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; 가 아직 생성되지 않았을 수 있습니다. &lt;a href=&quot;qwidget#winId&quot;&gt;QWidget :: winId&lt;/a&gt; ()를 호출 하여 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b5aada492f6ce11c8003838bbc8202a353342de6" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qwidget#windowModality-prop&quot;&gt;QWidget::windowModality&lt;/a&gt; instead.</source>
          <target state="translated">사용 &lt;a href=&quot;qwidget#windowModality-prop&quot;&gt;는 QWidget :: windowModality&lt;/a&gt;대신 를 .</target>
        </trans-unit>
        <trans-unit id="de6b2790ab04d33dacf9986466d7adc730fe6dfa" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qxmlattributes#index&quot;&gt;index&lt;/a&gt;() to locate the position of an attribute in the list, &lt;a href=&quot;qxmlattributes#count&quot;&gt;count&lt;/a&gt;() to retrieve the number of attributes, and &lt;a href=&quot;qxmlattributes#clear&quot;&gt;clear&lt;/a&gt;() to remove the attributes. New attributes can be added with &lt;a href=&quot;qxmlattributes#append&quot;&gt;append&lt;/a&gt;(). Use &lt;a href=&quot;qxmlattributes#type&quot;&gt;type&lt;/a&gt;() to get an attribute's type and &lt;a href=&quot;qxmlattributes#value&quot;&gt;value&lt;/a&gt;() to get its value. The attribute's name is available from &lt;a href=&quot;qxmlattributes#localName&quot;&gt;localName&lt;/a&gt;() or &lt;a href=&quot;qxmlattributes#qName&quot;&gt;qName&lt;/a&gt;(), and its namespace URI from &lt;a href=&quot;qxmlattributes#uri&quot;&gt;uri&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qxmlattributes#index&quot;&gt;index&lt;/a&gt; ()를 사용 하여 목록에서 속성의 위치를 ​​찾고 &lt;a href=&quot;qxmlattributes#count&quot;&gt;count&lt;/a&gt; ()를 사용하여 속성 수를 검색하고 &lt;a href=&quot;qxmlattributes#clear&quot;&gt;clear&lt;/a&gt; ()를 사용하여 속성을 제거하십시오. &lt;a href=&quot;qxmlattributes#append&quot;&gt;추가&lt;/a&gt; ()를 사용 하여 새로운 속성을 추가 할 수 있습니다 . &lt;a href=&quot;qxmlattributes#type&quot;&gt;type&lt;/a&gt; ()을 사용 하여 속성의 유형과 &lt;a href=&quot;qxmlattributes#value&quot;&gt;값&lt;/a&gt; ()을 가져 와서 값을 가져옵니다. 속성 이름은 &lt;a href=&quot;qxmlattributes#localName&quot;&gt;localName&lt;/a&gt; () 또는 &lt;a href=&quot;qxmlattributes#qName&quot;&gt;qName&lt;/a&gt; ()에서, 네임 스페이스 URI는 &lt;a href=&quot;qxmlattributes#uri&quot;&gt;uri에서 사용할 수 있습니다.&lt;/a&gt; ()에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="139115fdd0f320627623a6dc22ae0986e00385a3" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery::bindVariable&lt;/a&gt;() to bind the &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; to &lt;code&gt;$variable name&lt;/code&gt;;</source>
          <target state="translated">&lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery :: bindVariable&lt;/a&gt; ()을 사용 하여 &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; 를 &lt;code&gt;$variable name&lt;/code&gt; 바인딩하십시오. .</target>
        </trans-unit>
        <trans-unit id="0385278e22531c08f165abe677c5742d9ae0fb07" translate="yes" xml:space="preserve">
          <source>Use &lt;b&gt;configure -list-features&lt;/b&gt; to show a list of all available features on the command line. Note that features can depend on other features, so disabling a feature might have side-effects on other features.</source>
          <target state="translated">명령 줄에서 사용 가능한 모든 기능 목록을 표시 하려면 &lt;b&gt;configure -list-features&lt;/b&gt; 를 사용하십시오 . 기능은 다른 기능에 따라 달라질 수 있으므로 기능을 비활성화하면 다른 기능에 부작용이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72864d5c94a9827128b8241a4d7a8c58f8e85790" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;&amp;lt;func&amp;gt;&lt;/code&gt; for translating strings instead of &lt;code&gt;tr()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;tr()&lt;/code&gt; 대신 문자열 번역에 &lt;code&gt;&amp;lt;func&amp;gt;&lt;/code&gt; 사용 .</target>
        </trans-unit>
        <trans-unit id="dc2dad0407df767768fdb056dc6a82101eeb1383" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;Directory&lt;/code&gt; and &lt;a href=&quot;qfiledialog#setOption&quot;&gt;setOption&lt;/a&gt;(&lt;a href=&quot;qfiledialog#Option-enum&quot;&gt;ShowDirsOnly&lt;/a&gt;, true) instead.</source>
          <target state="translated">&lt;code&gt;Directory&lt;/code&gt; 및 &lt;a href=&quot;qfiledialog#setOption&quot;&gt;setOption&lt;/a&gt; 사용 ( &lt;a href=&quot;qfiledialog#Option-enum&quot;&gt;ShowDirsOnly&lt;/a&gt; , true)을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9a91cba7aeec454a62e355e673adf00272f73cc1" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;\&lt;/code&gt; to escape the special characters listed above to use them as separators.</source>
          <target state="translated">사용 &lt;code&gt;\&lt;/code&gt; 구분 기호로 사용하는 위에 나열된 특수 문자를 탈출.</target>
        </trans-unit>
        <trans-unit id="a2dc53dbadcf704009144bd573195cc163fe289c" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;configure -list-features&lt;/code&gt; to show a list of all available features on the command line. Note that features can depend on other features, so disabling a feature might have side-effects on other features.</source>
          <target state="translated">사용 &lt;code&gt;configure -list-features&lt;/code&gt; 를 하여 명령 행에 사용 가능한 모든 기능 목록을 표시하십시오. 기능은 다른 기능에 따라 달라질 수 있으므로 기능을 비활성화하면 다른 기능에 부작용이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a58731a0cc5d2f8115dad2eb86f39e3ba77dffd" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;console.log&lt;/code&gt;, &lt;code&gt;console.debug&lt;/code&gt;, &lt;code&gt;console.info&lt;/code&gt;, &lt;code&gt;console.warn&lt;/code&gt;, or &lt;code&gt;console.error&lt;/code&gt; to print debugging information to the console.</source>
          <target state="translated">사용 &lt;code&gt;console.log&lt;/code&gt; , &lt;code&gt;console.debug&lt;/code&gt; , &lt;code&gt;console.info&lt;/code&gt; , &lt;code&gt;console.warn&lt;/code&gt; , 또는 &lt;code&gt;console.error&lt;/code&gt; 콘솔에 디버깅 정보를 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="22020c806f18e034fe2a7bcec1b246aa4ce4e1ef" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;emsdk&lt;/code&gt; to install specific &lt;code&gt;emscripten&lt;/code&gt; versions. For example, to install it for Qt 5.15, enter:</source>
          <target state="translated">&lt;code&gt;emsdk&lt;/code&gt; 를 사용 하여 특정 &lt;code&gt;emscripten&lt;/code&gt; 버전 을 설치 하십시오 . 예를 들어, Qt 5.15 용으로 설치하려면 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="91413942115417668fb1c56820f2dec631aedceb" translate="yes" xml:space="preserve">
          <source>Use &lt;code&gt;viewport-&amp;gt;update()&lt;/code&gt; to update the contents of the viewport instead of &lt;a href=&quot;qwidget#update&quot;&gt;update()&lt;/a&gt; as all painting operations take place on the viewport.</source>
          <target state="translated">사용 &lt;code&gt;viewport-&amp;gt;update()&lt;/code&gt; 대신 뷰포트의 내용을 업데이트 할 &lt;a href=&quot;qwidget#update&quot;&gt;) (업데이 트를&lt;/a&gt; 모든 그림 작업이 뷰포트에 일어날으로합니다.</target>
        </trans-unit>
        <trans-unit id="02aa394c13d3ec38c89e54fac670a1dd0212b888" translate="yes" xml:space="preserve">
          <source>Use AM/PM display.</source>
          <target state="translated">AM / PM 디스플레이를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="9a4ff2cc1d7f0468e944131a066c3fac4915de29" translate="yes" xml:space="preserve">
          <source>Use AdjustToContents or AdjustToContentsOnFirstShow instead.</source>
          <target state="translated">대신 AdjustToContents 또는 AdjustToContentsOnFirstShow를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="27d3d27c18d84a438249775409da96cd2f503284" translate="yes" xml:space="preserve">
          <source>Use AnchorAtOffsetMatchOption instead.</source>
          <target state="translated">대신 AnchorAtOffsetMatchOption을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b9731e0383485a9a2f589d96e583cdae32ebf6b3" translate="yes" xml:space="preserve">
          <source>Use Case: GPS</source>
          <target state="translated">사용 사례 : GPS</target>
        </trans-unit>
        <trans-unit id="b528f15ff0b57a71077a04f4e6a6f59d3d81fab1" translate="yes" xml:space="preserve">
          <source>Use Case: Printer Access</source>
          <target state="translated">사용 사례 : 프린터 액세스</target>
        </trans-unit>
        <trans-unit id="d980a88d434a588fa083b9d3ff9b227f1f57a16d" translate="yes" xml:space="preserve">
          <source>Use Coverage Tools</source>
          <target state="translated">적용 범위 도구 사용</target>
        </trans-unit>
        <trans-unit id="3bd19ad4a493c711463b3b5c55b0eb18e4d8f187" translate="yes" xml:space="preserve">
          <source>Use Custom Mouse Cursor Images</source>
          <target state="translated">사용자 지정 마우스 커서 이미지 사용</target>
        </trans-unit>
        <trans-unit id="b05dc2e2a4796d8575a19f7b6d25387b2db48351" translate="yes" xml:space="preserve">
          <source>Use Data-driven Testing</source>
          <target state="translated">데이터 기반 테스트 사용</target>
        </trans-unit>
        <trans-unit id="6f265c7829e76a97fd961711cab2c6e2b2b32674" translate="yes" xml:space="preserve">
          <source>Use Fixed instead.</source>
          <target state="translated">대신 고정을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c7c6ea4649c7761816224f5debe8495ec819ed0e" translate="yes" xml:space="preserve">
          <source>Use Mapbox China API base URLs and styles. Please notice that Mapbox China requires a specific access token. Contact &lt;a href=&quot;https://www.mapbox.com/contact/sales/&quot;&gt;Mapbox sales&lt;/a&gt; for more information.</source>
          <target state="translated">Mapbox China API 기본 URL 및 스타일을 사용하십시오. Mapbox China에는 특정 액세스 토큰이 필요합니다. 연락 &lt;a href=&quot;https://www.mapbox.com/contact/sales/&quot;&gt;Mapbox 판매&lt;/a&gt; 더 많은 정보를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7caf187f6f334b00b1013bb3b431792ac1653e7e" translate="yes" xml:space="preserve">
          <source>Use MyNewFunction() instead.</source>
          <target state="translated">대신 MyNewFunction ()을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="85fff89d137cc47ba1c4853cb0a4f9282239b6fa" translate="yes" xml:space="preserve">
          <source>Use NoToAll instead.</source>
          <target state="translated">대신 NoToAll을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="dd99d0fef4f0a6301300ed2c5b9948e225ed6e87" translate="yes" xml:space="preserve">
          <source>Use PM_LayoutHorizontalSpacing and PM_LayoutVerticalSpacing instead.</source>
          <target state="translated">대신 PM_LayoutHorizontalSpacing 및 PM_LayoutVerticalSpacing을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5004ddc2ce1b2acdc08725818e8a7258b4e53a4d" translate="yes" xml:space="preserve">
          <source>Use PM_LayoutLeftMargin, PM_LayoutTopMargin, PM_LayoutRightMargin, and PM_LayoutBottomMargin instead.</source>
          <target state="translated">대신 PM_LayoutLeftMargin, PM_LayoutTopMargin, PM_LayoutRightMargin 및 PM_LayoutBottomMargin을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e8194f11a29e3def3c0cdfc41cff52167ce89a38" translate="yes" xml:space="preserve">
          <source>Use QAccessible::installRootObjectHandler() to redirect the function call to a customized handler function.</source>
          <target state="translated">QAccessible :: installRootObjectHandler ()를 사용하여 함수 호출을 사용자 정의 된 핸들러 함수로 경로 재 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="bcf6fc0c5b5d7479978d83e57bc7ca5e326b12a6" translate="yes" xml:space="preserve">
          <source>Use QFontMetrics(const &lt;a href=&quot;gui-changes-qt6#qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;, &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *) to get the font metrics that are compatible with a certain paint device.</source>
          <target state="translated">QFontMetrics (const &lt;a href=&quot;gui-changes-qt6#qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;, &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *)를 사용하여 특정 페인트 장치와 호환되는 글꼴 메트릭을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="d559942d05e59162f6ff03b69517172170eb4f32" translate="yes" xml:space="preserve">
          <source>Use QFontMetrics(const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;, &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *) to get the font metrics that are compatible with a certain paint device.</source>
          <target state="translated">QFontMetrics (const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;, &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *)를 사용하여 특정 페인트 장치와 호환되는 글꼴 메트릭을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="87ffd500ae6cdcfbbc6025db5546ebc9625af8fa" translate="yes" xml:space="preserve">
          <source>Use QFontMetricsF(const &lt;a href=&quot;gui-changes-qt6#qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;, &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *) to get the font metrics that are compatible with a certain paint device.</source>
          <target state="translated">QFontMetricsF (const &lt;a href=&quot;gui-changes-qt6#qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;, &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *)를 사용하여 특정 페인트 장치와 호환되는 글꼴 메트릭을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="97cb914655a75e5f5b5fe002cb2afe5ad23d07ef" translate="yes" xml:space="preserve">
          <source>Use QFontMetricsF(const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;, &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *) to get the font metrics that are compatible with a certain paint device.</source>
          <target state="translated">QFontMetricsF (const &lt;a href=&quot;qfont&quot;&gt;QFont&lt;/a&gt; &amp;amp;, &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; *)를 사용하여 특정 페인트 장치와 호환되는 글꼴 메트릭을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="43acc6abe0c76f02739d4a36a46dd3849cbcd0e9" translate="yes" xml:space="preserve">
          <source>Use QPointers like normal pointers and you will not need to read this class documentation.</source>
          <target state="translated">일반적인 포인터와 같은 QPointer를 사용하면이 클래스 문서를 읽을 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="885d08db63ba2ff6ffeda2ff6517b5f4ce91243a" translate="yes" xml:space="preserve">
          <source>Use QSkeleton if you wish to manually create the joints of a skeleton for use with skinned meshes. This is mainly of use to people creating editors, tooling, or dynamic skeletons. It is more common that a Qt 3D application would simply consume an existing skeleton and skinned mesh as created in a digital content creation tool such as Blender. For this use case, please see &lt;a href=&quot;qt3dcore-qskeletonloader&quot;&gt;QSkeletonLoader&lt;/a&gt;.</source>
          <target state="translated">스키닝 된 메시와 함께 사용하기 위해 스켈레톤의 관절을 수동으로 생성하려면 QSkeleton을 사용하십시오. 이것은 주로 편집자, 도구 또는 동적 골격을 만드는 사람들에게 사용됩니다. Qt 3D 응용 프로그램이 Blender와 같은 디지털 콘텐츠 생성 도구에서 생성 된 기존의 스켈레톤과 스킨 메시를 단순히 사용하는 것이 더 일반적입니다. 이 사용 사례에 대해서는 &lt;a href=&quot;qt3dcore-qskeletonloader&quot;&gt;QSkeletonLoader&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a4591fb32f2e74d2818437c17173fec0ab932b8d" translate="yes" xml:space="preserve">
          <source>Use QTextFormat::TextUnderlineStyle instead.</source>
          <target state="translated">대신 QTextFormat :: TextUnderlineStyle을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a9ba3bfcca3fb6e56e60a2dbcc599aff524b202d" translate="yes" xml:space="preserve">
          <source>Use Qt Concurrent's &lt;a href=&quot;qtconcurrent#filter&quot;&gt;QtConcurrent::filter&lt;/a&gt;() function to select container elements, and the &lt;a href=&quot;qtconcurrent#map&quot;&gt;QtConcurrent::map&lt;/a&gt;() function to apply an operation to each element. To fold the output into a single result, use &lt;a href=&quot;qtconcurrent#filteredReduced&quot;&gt;QtConcurrent::filteredReduced&lt;/a&gt;() and &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent::mappedReduced&lt;/a&gt;() instead.</source>
          <target state="translated">컨테이너 요소를 선택 하려면 Qt Concurrent의 &lt;a href=&quot;qtconcurrent#filter&quot;&gt;QtConcurrent :: filter&lt;/a&gt; () 함수를 사용하고 각 요소에 작업을 적용 하려면 &lt;a href=&quot;qtconcurrent#map&quot;&gt;QtConcurrent :: map&lt;/a&gt; () 함수를 사용하십시오. 출력을 단일 결과로 접으려면 &lt;a href=&quot;qtconcurrent#filteredReduced&quot;&gt;QtConcurrent :: filteredReduced&lt;/a&gt; () 및 &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent :: mappedReduced&lt;/a&gt; ()를 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c777fa6ded4003fd4c9da1d1340728f2c55c71f6" translate="yes" xml:space="preserve">
          <source>Use Qt Creator to build both &lt;b&gt;APK&lt;/b&gt; and &lt;b&gt;AAB&lt;/b&gt; package formats, or build them manually. For more information, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/deployment-android.html&quot;&gt;Deploying an Application on Android&lt;/a&gt;.</source>
          <target state="translated">Qt Creator를 사용하여 &lt;b&gt;APK&lt;/b&gt; 및 &lt;b&gt;AAB&lt;/b&gt; 패키지 형식을 모두 빌드하거나 수동으로 빌드하십시오. 자세한 내용 &lt;a href=&quot;https://doc.qt.io/qt-5.15/deployment-android.html&quot;&gt;은 Android에 애플리케이션 배포를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c08e7f2f1b5e832867e51cb34c9f7b06f7e1784b" translate="yes" xml:space="preserve">
          <source>Use Qt Creator to build both &lt;b&gt;APK&lt;/b&gt; and &lt;b&gt;AAB&lt;/b&gt; package formats, or build them manually. For more information, see &lt;a href=&quot;https://doc.qt.io/qt-6.0/deployment-android.html&quot;&gt;Deploying an Application on Android&lt;/a&gt;.</source>
          <target state="translated">Qt Creator를 사용하여 &lt;b&gt;APK&lt;/b&gt; 및 &lt;b&gt;AAB&lt;/b&gt; 패키지 형식을 모두 빌드하거나 수동으로 빌드하십시오. 자세한 내용 &lt;a href=&quot;https://doc.qt.io/qt-6.0/deployment-android.html&quot;&gt;은 Android에 애플리케이션 배포를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="49d74496a4ef77d9b8af1c2a2dc648119ee10eb9" translate="yes" xml:space="preserve">
          <source>Use Qt's own rasterization algorithm.</source>
          <target state="translated">Qt의 자체 래스터 화 알고리즘을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="00fb0260896152dd5b74f749200a1de91a568dd7" translate="yes" xml:space="preserve">
          <source>Use Qt's standard color dialog instead of the operating system native color dialog.</source>
          <target state="translated">운영 체제 기본 색상 대화 상자 대신 Qt의 표준 색상 대화 상자를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0452ef2f1eeb5492d51384232c9beefe3ae854cc" translate="yes" xml:space="preserve">
          <source>Use Qt's standard font dialog on the Mac instead of Apple's native font panel.</source>
          <target state="translated">Apple의 기본 글꼴 패널 대신 Mac에서 Qt의 표준 글꼴 대화 상자를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f585ba34bf07e1c5f674b46f854b17cc40776b48" translate="yes" xml:space="preserve">
          <source>Use Qt::DefaultLocaleShortDate instead (or Qt::DefaultLocaleLongDate if you want long dates).</source>
          <target state="translated">Qt :: DefaultLocaleShortDate를 대신 사용하십시오 (또는 긴 날짜를 원하면 Qt :: DefaultLocaleLongDate).</target>
        </trans-unit>
        <trans-unit id="50340992dc10963eba85a6df9006bf2b69137731" translate="yes" xml:space="preserve">
          <source>Use Qt::ItemIsAutoTristate instead.</source>
          <target state="translated">Qt :: ItemIsAutoTristate를 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2cc4c35d8ccca4c527951cdc5d50467bf2885713" translate="yes" xml:space="preserve">
          <source>Use Qt::SystemLocaleShortDate instead (or Qt::SystemLocaleLongDate if you want long dates).</source>
          <target state="translated">Qt :: SystemLocaleShortDate를 대신 사용하십시오 (또는 긴 날짜를 원하면 Qt :: SystemLocaleLongDate).</target>
        </trans-unit>
        <trans-unit id="721a43abd61b1ee824a395e6012fcf20a8da9c1b" translate="yes" xml:space="preserve">
          <source>Use SVG images for small icons. While larger SVGs can be slow to render, small ones work well. Vector images avoid the need to provide several versions of an image, as is necessary with bitmap images.</source>
          <target state="translated">작은 아이콘에는 SVG 이미지를 사용하십시오. 큰 SVG는 렌더링 속도가 느릴 수 있지만 작은 SVG는 잘 작동합니다. 벡터 이미지는 비트 맵 이미지와 같이 여러 버전의 이미지를 제공 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="9f93e6e7c27295035d3b66c77ce338d55d480c9b" translate="yes" xml:space="preserve">
          <source>Use Skeleton if you wish to manually create the joints of a skeleton for use with skinned meshes. This is mainly of use to people creating editors, tooling, or dynamic skeletons. It is more common that a Qt 3D application would simply consume an existing skeleton and skinned mesh as created in a digital content creation tool such as Blender. For this use case, please see &lt;a href=&quot;qml-qt3d-core-skeletonloader&quot;&gt;SkeletonLoader&lt;/a&gt;.</source>
          <target state="translated">스킨 메시에 사용할 스켈레톤 조인트를 수동으로 생성하려면 스켈레톤을 사용하십시오. 이것은 주로 에디터, 툴링 또는 다이내믹 스켈레톤을 만드는 사람들에게 유용합니다. Qt 3D 애플리케이션은 Blender와 같은 디지털 컨텐츠 제작 도구에서 생성 된 기존 스켈레톤 및 스킨 메시를 단순히 사용하는 것이 더 일반적입니다. 이 사용 사례에 대해서는 &lt;a href=&quot;qml-qt3d-core-skeletonloader&quot;&gt;SkeletonLoader&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="45b70ed155015bde8e770e562fea17cff75d77a5" translate="yes" xml:space="preserve">
          <source>Use SkeletonLoader if you wish to load a whole skeleton from file rather than creating the joints yourself using Skeleton and Joints. Creating a skeleton and binding the vertices of a mesh to the skeleton is most easily performed in a 3D digital content creation tool such as Blender. The resulting skeleton and mesh can then be exported in a suitable format such as glTF 2 for consumption by Qt 3D.</source>
          <target state="translated">스켈레톤과 조인트를 사용하여 직접 조인트를 생성하는 대신 파일에서 전체 스켈레톤을로드하려면 SkeletonLoader를 사용하십시오. 스켈레톤을 만들고 메시의 정점을 스켈레톤에 바인딩하는 작업은 Blender와 같은 3D 디지털 콘텐츠 제작 도구에서 가장 쉽게 수행 할 수 있습니다. 그런 다음 결과 골격과 메시를 Qt 3D에서 사용할 수 있도록 glTF 2와 같은 적절한 형식으로 내보낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23f6a005752a84368bc29852bc768a261cb6a014" translate="yes" xml:space="preserve">
          <source>Use WorkerScript to run operations in a new thread. This is useful for running operations in the background so that the main GUI thread is not blocked.</source>
          <target state="translated">WorkerScript를 사용하여 새 스레드에서 작업을 실행합니다. 이것은 메인 GUI 스레드가 차단되지 않도록 백그라운드에서 작업을 실행하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="cc1a789376bd9969085f84faf590d440e40031c1" translate="yes" xml:space="preserve">
          <source>Use YesToAll instead.</source>
          <target state="translated">YesToAll을 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1b66013c64f675b1cf802530a33aca045ddda2a0" translate="yes" xml:space="preserve">
          <source>Use a &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; rather than a non-editable &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; for displaying the items set with &lt;a href=&quot;qinputdialog#comboBoxItems-prop&quot;&gt;setComboBoxItems&lt;/a&gt;().</source>
          <target state="translated">용도 &lt;a href=&quot;qlistview&quot;&gt;QListView을&lt;/a&gt; 편집 할 수없는 것이 아니라 &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; 설정 항목 표시 &lt;a href=&quot;qinputdialog#comboBoxItems-prop&quot;&gt;setComboBoxItems을&lt;/a&gt; ()로 .</target>
        </trans-unit>
        <trans-unit id="70ea517056c677680ddf5ef8447c8a3016b7dd84" translate="yes" xml:space="preserve">
          <source>Use a &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; rather than a non-editable &lt;a href=&quot;widgets-changes-qt6#qcombobox&quot;&gt;QComboBox&lt;/a&gt; for displaying the items set with &lt;a href=&quot;qinputdialog#comboBoxItems-prop&quot;&gt;setComboBoxItems&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qinputdialog#comboBoxItems-prop&quot;&gt;setComboBoxItems&lt;/a&gt; ()로 설정된 항목을 표시하려면 편집 할 수없는 &lt;a href=&quot;widgets-changes-qt6#qcombobox&quot;&gt;QComboBox&lt;/a&gt; 대신 &lt;a href=&quot;qlistview&quot;&gt;QListView를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="94368fd3d07e7e39d2512579fb7ebe2d72faa391" translate="yes" xml:space="preserve">
          <source>Use a &lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; for multiline text input. This value was introduced in 5.2.</source>
          <target state="translated">여러 &lt;a href=&quot;qplaintextedit&quot;&gt;줄로 된&lt;/a&gt; 텍스트 입력 에는 QPlainTextEdit 을 사용하십시오 . 이 값은 5.2에서 도입되었습니다.</target>
        </trans-unit>
        <trans-unit id="78bbb65808de55a65cc6217be8e0920c27df132d" translate="yes" xml:space="preserve">
          <source>Use a C++ API - Call &lt;a href=&quot;qquickwindow#setSceneGraphBackend&quot;&gt;QQuickWindow::setSceneGraphBackend&lt;/a&gt;() early on in the application's main() function.</source>
          <target state="translated">C ++ API 사용- 애플리케이션의 main () 함수에서 초기에 &lt;a href=&quot;qquickwindow#setSceneGraphBackend&quot;&gt;QQuickWindow :: setSceneGraphBackend&lt;/a&gt; ()를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="165df0cee159d3982c7d70a516a024403bd882c4" translate="yes" xml:space="preserve">
          <source>Use a Conditional to Hide QML Source From the Compiler</source>
          <target state="translated">조건부를 사용하여 컴파일러에서 QML 소스 숨기기</target>
        </trans-unit>
        <trans-unit id="f1aae0f9a156aa6d95b864325143323475c7ea0d" translate="yes" xml:space="preserve">
          <source>Use a Separate .so Lib File</source>
          <target state="translated">별도의 .so Lib 파일 사용</target>
        </trans-unit>
        <trans-unit id="a5e3c9c261a61e1a25829420f01fb347c712e50d" translate="yes" xml:space="preserve">
          <source>Use a coverage tool such as &lt;a href=&quot;https://www.froglogic.com/coco/&quot;&gt;Froglogic Coco Code Coverage&lt;/a&gt; or &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc/Gcov.html&quot;&gt;gcov&lt;/a&gt; to help write tests that cover as many statements, branches, and conditions as possible in the function or class being tested. The earlier this is done in the development cycle for a new feature, the easier it will be to catch regressions later when the code is refactored.</source>
          <target state="translated">&lt;a href=&quot;https://www.froglogic.com/coco/&quot;&gt;Froglogic Coco Code Coverage&lt;/a&gt; 또는 &lt;a href=&quot;https://gcc.gnu.org/onlinedocs/gcc/Gcov.html&quot;&gt;gcov&lt;/a&gt; 와 같은 커버리지 도구를 사용하여 테스트중인 함수 또는 클래스에서 가능한 한 많은 문, 분기 및 조건을 다루는 테스트를 작성하는 데 도움이됩니다. 새로운 기능의 개발주기에서이 작업이 일찍 수행 될수록 나중에 코드가 리팩토링 될 때 회귀를 포착하기가 더 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="91cc2a3647efe4ec5f05cecc2264e4cd32da5d2c" translate="yes" xml:space="preserve">
          <source>Use a disk cache. This is the default if &lt;code&gt;off-the-record&lt;/code&gt; is not set. Falls back to &lt;code&gt;MemoryHttpCache&lt;/code&gt; if &lt;code&gt;off-the-record&lt;/code&gt; is set.</source>
          <target state="translated">디스크 캐시를 사용하십시오. &lt;code&gt;off-the-record&lt;/code&gt; 설정되지 않은 경우 이것이 기본값 입니다. &lt;code&gt;off-the-record&lt;/code&gt; 을 설정 하면 &lt;code&gt;MemoryHttpCache&lt;/code&gt; 로 폴백 합니다 .</target>
        </trans-unit>
        <trans-unit id="334328cf61dd6cb4690bf72c02d6a4341db98a3f" translate="yes" xml:space="preserve">
          <source>Use a disk cache. This is the default if the profile is not &lt;code&gt;off-the-record&lt;/code&gt;. If set on an &lt;code&gt;off-the-record&lt;/code&gt; profile will instead set &lt;code&gt;MemoryHttpCache&lt;/code&gt;.</source>
          <target state="translated">디스크 캐시를 사용하십시오. 프로파일이 &lt;code&gt;off-the-record&lt;/code&gt; 없는 경우 이것이 기본값 입니다. 온 설정하면 &lt;code&gt;off-the-record&lt;/code&gt; 프로필 대신 설정합니다 &lt;code&gt;MemoryHttpCache&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ec966600e6331f12d9bc76cd301d9e87686dd65a" translate="yes" xml:space="preserve">
          <source>Use a lossless image rendering, whenever possible. Currently, this hint is only used when &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; is employed to output a PDF file through &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; or &lt;a href=&quot;qpdfwriter&quot;&gt;QPdfWriter&lt;/a&gt;, where &lt;a href=&quot;qpainter#drawImage&quot;&gt;drawImage&lt;/a&gt;()/&lt;a href=&quot;qpainter#drawPixmap&quot;&gt;drawPixmap&lt;/a&gt;() calls will encode images using a lossless compression algorithm instead of lossy JPEG compression. This value was added in Qt 5.13.</source>
          <target state="translated">가능하면 무손실 이미지 렌더링을 사용하십시오. 현재이 힌트는 &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; 또는 &lt;a href=&quot;qpdfwriter&quot;&gt;QPdfWriter를&lt;/a&gt; 통해 PDF 파일을 출력하기 위해 &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; 를 사용 하는 경우에만 사용됩니다 . 여기서 &lt;a href=&quot;qpainter#drawImage&quot;&gt;drawImage&lt;/a&gt; () / &lt;a href=&quot;qpainter#drawPixmap&quot;&gt;drawPixmap&lt;/a&gt; () 호출은 손실 JPEG 압축 대신 무손실 압축 알고리즘을 사용하여 이미지를 인코딩합니다. 이 값은 Qt 5.13에서 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="6fc2892247481c1f5f7542f44515242c8b967fa3" translate="yes" xml:space="preserve">
          <source>Use a lossless image rendering, whenever possible. Currently, this hint is only used when &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; is employed to output a PDF file through QPrinter or &lt;a href=&quot;qpdfwriter&quot;&gt;QPdfWriter&lt;/a&gt;, where &lt;a href=&quot;qpainter#drawImage&quot;&gt;drawImage&lt;/a&gt;()/&lt;a href=&quot;qpainter#drawPixmap&quot;&gt;drawPixmap&lt;/a&gt;() calls will encode images using a lossless compression algorithm instead of lossy JPEG compression. This value was added in Qt 5.13.</source>
          <target state="translated">가능하면 무손실 이미지 렌더링을 사용하십시오. 현재이 힌트는 &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; 를 사용하여 QPrinter 또는 &lt;a href=&quot;qpdfwriter&quot;&gt;QPdfWriter를&lt;/a&gt; 통해 PDF 파일을 출력하는 경우에만 사용됩니다 . 여기서 &lt;a href=&quot;qpainter#drawImage&quot;&gt;drawImage&lt;/a&gt; () / &lt;a href=&quot;qpainter#drawPixmap&quot;&gt;drawPixmap&lt;/a&gt; () 호출은 손실 JPEG 압축 대신 무손실 압축 알고리즘을 사용하여 이미지를 인코딩합니다. 이 값은 Qt 5.13에서 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="cab79472ff4bdbd112d3e2c0128e6548cfa9b78b" translate="yes" xml:space="preserve">
          <source>Use a policy appropriate for applications on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;internationalization#macos&quot;&gt;macOS의&lt;/a&gt; 응용 프로그램에 적합한 정책을 사용하십시오. .</target>
        </trans-unit>
        <trans-unit id="d1c327e47e48a296f5c55100ce87c93ef8c6f15a" translate="yes" xml:space="preserve">
          <source>Use a policy appropriate for applications on Android.</source>
          <target state="translated">Android 애플리케이션에 적합한 정책을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="98d0b5dc083659053954cc44ac386cad7cd512b3" translate="yes" xml:space="preserve">
          <source>Use a policy appropriate for applications on Android. This enum value was added in Qt 5.10.</source>
          <target state="translated">Android 애플리케이션에 적합한 정책을 사용하십시오. 이 열거 형 값은 Qt 5.10에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="6e3ec1897fe9971e7c2fc4d8ef8462038f15e402" translate="yes" xml:space="preserve">
          <source>Use a policy appropriate for applications on GNOME.</source>
          <target state="translated">그놈 응용 프로그램에 적합한 정책을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b091e746c641d07cf1ac33fe8194e4fb255844bc" translate="yes" xml:space="preserve">
          <source>Use a policy appropriate for applications on KDE.</source>
          <target state="translated">KDE의 응용 프로그램에 적합한 정책을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3ce2952ced21f4b07068ce0cfb6b8c41d50f43b5" translate="yes" xml:space="preserve">
          <source>Use a policy appropriate for applications on Windows.</source>
          <target state="translated">Windows의 응용 프로그램에 적합한 정책을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="26570ed595a829527b921f8980c9b0fcd46db269" translate="yes" xml:space="preserve">
          <source>Use a policy appropriate for applications on macOS.</source>
          <target state="translated">macOS의 애플리케이션에 적합한 정책을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ab45a42296c85b7a7398467959c5f971a8b18eed" translate="yes" xml:space="preserve">
          <source>Use a private a key to sign your application to publish it on Google Play. To do so, open the &lt;b&gt;Build Android APK&lt;/b&gt; in Qt Creator and add keystore information. When you are done, select &lt;b&gt;Release&lt;/b&gt; as the build configuration and deploy your project.</source>
          <target state="translated">비공개 키를 사용하여 애플리케이션에 서명하여 Google Play에 게시합니다. 그렇게하려면 Qt Creator에서 &lt;b&gt;Build Android APK&lt;/b&gt; 를 열고 키 저장소 정보를 추가하십시오. 완료되면 빌드 구성으로 &lt;b&gt;릴리스&lt;/b&gt; 를 선택 하고 프로젝트를 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="9ac30267c15e552d14fe0075fc6bcb054d77c250" translate="yes" xml:space="preserve">
          <source>Use a single &lt;a href=&quot;qml-qtquick-controls2-checkbox&quot;&gt;CheckBox&lt;/a&gt; for a yes/no choice, such as when you have to accept the terms of service agreement in a form.</source>
          <target state="translated">서비스 약관에 동의해야하는 경우와 같이 예 / 아니오 선택에 단일 &lt;a href=&quot;qml-qtquick-controls2-checkbox&quot;&gt;CheckBox&lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="2870bbfa214c69f0fcfbb2fafe6ebcaee2b61696" translate="yes" xml:space="preserve">
          <source>Use a sliding slice window to cache results, whose parameters are determined with the help of profiling</source>
          <target state="translated">슬라이딩 슬라이스 창을 사용하여 프로파일 링을 통해 매개 변수가 결정된 결과를 캐시하십시오.</target>
        </trans-unit>
        <trans-unit id="146fdfdbecdab45606b5b82e650ed51c5ebeef7e" translate="yes" xml:space="preserve">
          <source>Use a tooltip if a control has little or no descriptive text, or needs a short explanation.</source>
          <target state="translated">컨트롤에 설명 텍스트가 거의 없거나 간단한 설명이 필요한 경우 툴팁을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="809ee3f2faa8d18cfe0ba0acdcb26a62c7c3b65b" translate="yes" xml:space="preserve">
          <source>Use a tooltip only if the information on a particular control is not available elsewhere in the screen.</source>
          <target state="translated">화면의 다른 곳에서 특정 컨트롤에 대한 정보를 사용할 수없는 경우에만 툴팁을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="330a789b9fd6f844b346e7ce860f8dc7766ef545" translate="yes" xml:space="preserve">
          <source>Use a translation file to set the language.</source>
          <target state="translated">번역 파일을 사용하여 언어를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="2869b1f110cc6b91287650d3e6257509faed7b4d" translate="yes" xml:space="preserve">
          <source>Use additional caching when available. This may improve performance at a higher memory cost.</source>
          <target state="translated">가능한 경우 추가 캐싱을 사용하십시오. 이는 더 높은 메모리 비용으로 성능을 향상시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="605f8bcfe52a60599de951f2d3561dfab8f034a1" translate="yes" xml:space="preserve">
          <source>Use am/pm display.</source>
          <target state="translated">오전 / 오후 디스플레이를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f241641c8b3fdca2e0d1b48a8421911ad4c468a2" translate="yes" xml:space="preserve">
          <source>Use an environment variable - Set the &lt;code&gt;QT_QUICK_BACKEND&lt;/code&gt; or the legacy &lt;code&gt;QMLSCENE_DEVICE&lt;/code&gt; environment variable before launching applications.</source>
          <target state="translated">환경 변수 사용- 애플리케이션을 시작하기 전에 &lt;code&gt;QT_QUICK_BACKEND&lt;/code&gt; 또는 레거시 &lt;code&gt;QMLSCENE_DEVICE&lt;/code&gt; 환경 변수를 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ac68c4d3b8d9ad0cb50c1dc2117c7eea914f8a8" translate="yes" xml:space="preserve">
          <source>Use an in-memory cache. This is the default if &lt;code&gt;off-the-record&lt;/code&gt; is set.</source>
          <target state="translated">인 메모리 캐시를 사용하십시오. &lt;code&gt;off-the-record&lt;/code&gt; 가 설정된 경우 이것이 기본값 입니다.</target>
        </trans-unit>
        <trans-unit id="630d1c508e9449d184368af7ac5c24120caaf36e" translate="yes" xml:space="preserve">
          <source>Use an ordinary window, such as a &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; subclass, targeting the window's default framebuffer, meaning a &lt;code&gt;gbm_surface&lt;/code&gt; in practice:</source>
          <target state="translated">&lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; 서브 클래스 와 같은 일반적인 윈도우를 사용 하여 윈도우의 기본 프레임 버퍼를 대상으로합니다 . 실제로 &lt;code&gt;gbm_surface&lt;/code&gt; 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9e14a820859aad6e8faa8a905021388165aedfb0" translate="yes" xml:space="preserve">
          <source>Use anchors or the Qt Quick Layouts module to lay out the visual items.</source>
          <target state="translated">앵커 또는 Qt Quick Layouts 모듈을 사용하여 시각적 항목을 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="b9ca9aa40770c59855a39851737e35143f679ec2" translate="yes" xml:space="preserve">
          <source>Use application/octet-stream for the &quot;All files (*)&quot; filter, since that is the base MIME type for all files.</source>
          <target state="translated">모든 파일의 기본 MIME 유형이므로 &quot;모든 파일 (*)&quot;필터에 application / octet-stream을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0fae92805087443fd40c4b731a16f22ed1664e66" translate="yes" xml:space="preserve">
          <source>Use appropriate escaping, when characters can't be represented in the XML,</source>
          <target state="translated">XML에서 문자를 표현할 수없는 경우 적절한 이스케이프 처리를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="dbb3abcb5db082da5ad7d8ab42176c459f9eea49" translate="yes" xml:space="preserve">
          <source>Use case sensitive pattern matching.</source>
          <target state="translated">대소 문자 구분 패턴 일치.</target>
        </trans-unit>
        <trans-unit id="448d4de1d175b3cf5556e8c7e1621587ee387081" translate="yes" xml:space="preserve">
          <source>Use code like the following to obtain a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; containing the methods specific to a given class:</source>
          <target state="translated">주어진 클래스에 특정한 메소드를 포함 하는 &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; 를 얻으려면 다음과 같은 코드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="447d8bb0a8368f3184046294b4c436eb45182d93" translate="yes" xml:space="preserve">
          <source>Use code like the following to obtain a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; containing the properties specific to a given class:</source>
          <target state="translated">&lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; 를 얻으려면 다음과 같은 코드를 사용하십시오.주어진 클래스에 특정한 속성을 포함 .</target>
        </trans-unit>
        <trans-unit id="7c40237d29ddf36b002f10c9371775b6d83adec6" translate="yes" xml:space="preserve">
          <source>Use design metrics instead of hinted metrics adjusted to the resolution of the paint device. Can be OR-ed with any of the options above.</source>
          <target state="translated">페인트 장치의 해상도에 맞게 조정 된 힌트 메트릭 대신 디자인 메트릭을 사용하십시오. 위의 옵션 중 하나를 사용하여 OR-ed 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f96468e894c2a550f73c3949e60068fb788b4498" translate="yes" xml:space="preserve">
          <source>Use different FrameGraph trees depending on the nature of what you need to render for a particular region of the scene</source>
          <target state="translated">장면의 특정 영역에 렌더링해야하는 특성에 따라 다른 FrameGraph 트리를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fcf09e082a2aa2cc4cf5d0b270ad0bf61d127c84" translate="yes" xml:space="preserve">
          <source>Use dots to further structure categories into common areas.</source>
          <target state="translated">점을 사용하여 범주를 공통 영역으로 추가 구성합니다.</target>
        </trans-unit>
        <trans-unit id="f9849541893447eebf136880c5449e169a2bc078" translate="yes" xml:space="preserve">
          <source>Use flash to fillin shadows.</source>
          <target state="translated">플래시를 사용하여 그림자를 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="8e4b3d16c1790bf63a6efdd9aaf1b152425067c7" translate="yes" xml:space="preserve">
          <source>Use font-based icons, such as Font Awesome. These scale to any display resolution, and also allow colorization. The Qt Quick Controls 2 Text Editor example demonstrates this well.</source>
          <target state="translated">Font Awesome과 같은 글꼴 기반 아이콘을 사용하십시오. 이것들은 모든 디스플레이 해상도로 확장되며 채색이 가능합니다. Qt Quick Controls 2 텍스트 편집기 예제는이를 잘 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="9c35ca68ebe08f342b298e2bf80eb2f905407182" translate="yes" xml:space="preserve">
          <source>Use font-based icons, such as Font Awesome. These scale to any display resolution, and also allow colorization. The Qt Quick Controls Text Editor example demonstrates this well.</source>
          <target state="translated">Font Awesome과 같은 글꼴 기반 아이콘을 사용합니다. 이러한 크기는 모든 디스플레이 해상도로 조정되며 색상 화도 가능합니다. Qt Quick Controls Text Editor 예제는 이것을 잘 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="68c3b161bbf33126ffe0ff42ad9d16333dea28d0" translate="yes" xml:space="preserve">
          <source>Use for actions that must be triggered with care.</source>
          <target state="translated">주의해서 트리거해야하는 작업에 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8090eb72afa1616552c13b0062c32b514e8008d9" translate="yes" xml:space="preserve">
          <source>Use id based function for i18n</source>
          <target state="translated">i18n에 ID 기반 기능 사용</target>
        </trans-unit>
        <trans-unit id="76d9e2c5b0ea08e4d36e0e67bf7680828ab5559c" translate="yes" xml:space="preserve">
          <source>Use in touch user interfaces.</source>
          <target state="translated">터치 사용자 인터페이스에서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9aea80bee9c3e2aebdb31291ba00c5d1821d8f75" translate="yes" xml:space="preserve">
          <source>Use in windows with OpenGL content is not supported. This includes QGLWidget and &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt;.</source>
          <target state="translated">OpenGL 컨텐츠가있는 창에서는 사용할 수 없습니다. 여기에는 QGLWidget 및 &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; 이 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="a21d840127f887adc9e5907d61eef0f1bea4aa73" translate="yes" xml:space="preserve">
          <source>Use in windows with OpenGL content is not supported. This includes QOpenGLWidget.</source>
          <target state="translated">OpenGL 콘텐츠가있는 창에서 사용하는 것은 지원되지 않습니다. 여기에는 QOpenGLWidget이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e47785c4df6c29d1a2e154b2982ead84962ccfc0" translate="yes" xml:space="preserve">
          <source>Use individual characters as boundary.</source>
          <target state="translated">개별 문자를 경계로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="11f846149f274a8aa487c626c1dc9e8833492ddc" translate="yes" xml:space="preserve">
          <source>Use larger aperture with small depth of field.</source>
          <target state="translated">피사계 심도가 작은 더 큰 조리개를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cc6e7ba44d2750cd14afc6c781c8238f7ecd251b" translate="yes" xml:space="preserve">
          <source>Use letters and numbers only.</source>
          <target state="translated">문자와 숫자 만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="861d569452040e93df37a5d76642d5eb3c0defc2" translate="yes" xml:space="preserve">
          <source>Use libinput</source>
          <target state="translated">libinput 사용</target>
        </trans-unit>
        <trans-unit id="6063f7a68b3b869c5a19089f52e04772f622c44f" translate="yes" xml:space="preserve">
          <source>Use linear filtering.</source>
          <target state="translated">선형 필터링을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="674d2ec6103b7a412da48397ab750a902cb54461" translate="yes" xml:space="preserve">
          <source>Use nearest-neighbor filtering.</source>
          <target state="translated">최근 접 이웃 필터링을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b29d773a8b961da6f68696fe56eb625b3fb5e9d8" translate="yes" xml:space="preserve">
          <source>Use nearest-neighbor.</source>
          <target state="translated">가장 가까운 이웃을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="30a59bb1d28e5c66c17bf84b16208485740083d7" translate="yes" xml:space="preserve">
          <source>Use newlines as boundary.</source>
          <target state="translated">개행을 경계로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5e661bed52d558c04b6caa2a2bd82f84f1ff5dfc" translate="yes" xml:space="preserve">
          <source>Use of Timezones</source>
          <target state="translated">시간대 사용</target>
        </trans-unit>
        <trans-unit id="5218c2c2b59a0dd0cffbc3cc9f337190a681e448" translate="yes" xml:space="preserve">
          <source>Use of multi-process systems do bring about the following trade-offs:</source>
          <target state="translated">다중 프로세스 시스템을 사용하면 다음과 같은 상충 관계가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d5509fcb7d437d8ca84ea5d4332e9c16b16d0846" translate="yes" xml:space="preserve">
          <source>Use of other characters is not supported and may result in unexpected behaviour. &lt;a href=&quot;qurlquery&quot;&gt;QUrlQuery&lt;/a&gt; does not verify that you passed a valid delimiter.</source>
          <target state="translated">다른 문자 사용은 지원되지 않으며 예기치 않은 동작이 발생할 수 있습니다. &lt;a href=&quot;qurlquery&quot;&gt;QUrlQuery&lt;/a&gt; 는 유효한 분리 문자를 전달했는지 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9e9538960d3795e060e308c18e4e664f3c30968f" translate="yes" xml:space="preserve">
          <source>Use of other characters is not supported and may result in unexpected behaviour. QUrlQuery does not verify that you passed a valid delimiter.</source>
          <target state="translated">다른 문자의 사용은 지원되지 않으며 예기치 않은 동작이 발생할 수 있습니다. QUrlQuery는 유효한 구분 기호를 전달했는지 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="333d03c7766c22c156366edbd07a3ab972e3799e" translate="yes" xml:space="preserve">
          <source>Use of other characters is not supported and may result in unexpected behaviour. This method does not verify that you passed a valid delimiter.</source>
          <target state="translated">다른 문자 사용은 지원되지 않으며 예기치 않은 동작이 발생할 수 있습니다. 이 방법은 유효한 구분 기호를 전달했는지 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3aa969c0de216a98720798b0bb0df90d307624d3" translate="yes" xml:space="preserve">
          <source>Use of the Primary Screen</source>
          <target state="translated">기본 화면 사용</target>
        </trans-unit>
        <trans-unit id="9b294868075a7d1f6c33002e1791ff285932b307" translate="yes" xml:space="preserve">
          <source>Use of this macro can help the compiler to optimize the code.</source>
          <target state="translated">이 매크로를 사용하면 컴파일러가 코드를 최적화하는 데 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a9d2496b58593df7bf995932f21f9f2bc5e0fa1" translate="yes" xml:space="preserve">
          <source>Use only signal strength when searching.</source>
          <target state="translated">검색 할 때 신호 강도 만 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bc98a584570fd6f88c05a0e653daf1f28e6e1dfc" translate="yes" xml:space="preserve">
          <source>Use opaque primitives where possible. Opaque primitives are faster to process in the renderer and faster to draw on the GPU. For instance, PNG files will often have an alpha channel, even though each pixel is fully opaque. JPG files are always opaque. When providing images to a &lt;a href=&quot;qquickimageprovider&quot;&gt;QQuickImageProvider&lt;/a&gt; or creating images with &lt;a href=&quot;qquickwindow#createTextureFromImage&quot;&gt;QQuickWindow::createTextureFromImage&lt;/a&gt;(), let the image have &lt;a href=&quot;qimage#Format-enum&quot;&gt;QImage::Format_RGB32&lt;/a&gt;, when possible.</source>
          <target state="translated">가능한 경우 불투명 프리미티브를 사용하십시오. 불투명 프리미티브는 렌더러에서 처리 속도가 빠르고 GPU에서 더 빨리 그릴 수 있습니다. 예를 들어 각 픽셀이 완전히 불투명하더라도 PNG 파일에는 종종 알파 채널이 있습니다. JPG 파일은 항상 불투명합니다. &lt;a href=&quot;qquickimageprovider&quot;&gt;QQuickImageProvider에&lt;/a&gt; 이미지를 제공 하거나 &lt;a href=&quot;qquickwindow#createTextureFromImage&quot;&gt;QQuickWindow :: createTextureFromImage&lt;/a&gt; ()를 사용하여 이미지를 &lt;a href=&quot;qimage#Format-enum&quot;&gt;만들&lt;/a&gt; 때 가능 하면 이미지에 QImage :: Format_RGB32 가 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="0b3c92d28b1c2eaee576ee48e67024dcfc0589d7" translate="yes" xml:space="preserve">
          <source>Use paragraphs as boundary.</source>
          <target state="translated">단락을 경계로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bc2a3b502a2f115dd70da84f7935d16eccfa8600" translate="yes" xml:space="preserve">
          <source>Use properties of type &lt;a href=&quot;qml-variant&quot;&gt;variant&lt;/a&gt; to store a &lt;code&gt;coordinate&lt;/code&gt;. To create a &lt;code&gt;coordinate&lt;/code&gt; use one of the methods described below. In all cases, specifying the &lt;a href=&quot;qml-coordinate#altitude&quot;&gt;altitude&lt;/a&gt; attribute is optional.</source>
          <target state="translated">&lt;a href=&quot;qml-variant&quot;&gt;variant&lt;/a&gt; 유형의 속성을 사용 하여 &lt;code&gt;coordinate&lt;/code&gt; 를 저장합니다 . &lt;code&gt;coordinate&lt;/code&gt; 를 만들려면 아래 설명 된 방법 중 하나를 사용하십시오. 모든 경우에 &lt;a href=&quot;qml-coordinate#altitude&quot;&gt;altitude&lt;/a&gt; 특성을 지정하는 것은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="73ee6ed38fe3f271b1460b386fdd11d2eac367d0" translate="yes" xml:space="preserve">
          <source>Use properties of type &lt;a href=&quot;qml-variant&quot;&gt;variant&lt;/a&gt; to store a &lt;code&gt;geocircle&lt;/code&gt;. To create a &lt;code&gt;geocircle&lt;/code&gt; value, use the &lt;a href=&quot;qml-qtpositioning-qtpositioning#circle-method&quot;&gt;QtPositioning.circle()&lt;/a&gt; function:</source>
          <target state="translated">&lt;code&gt;geocircle&lt;/code&gt; 을 저장 하려면 &lt;a href=&quot;qml-variant&quot;&gt;variant&lt;/a&gt; 유형의 속성을 사용하십시오 . &lt;code&gt;geocircle&lt;/code&gt; 값 을 만들려면 &lt;a href=&quot;qml-qtpositioning-qtpositioning#circle-method&quot;&gt;QtPositioning.circle ()&lt;/a&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="55ed8c7765d36fcaa9e48e68dd103cc042fcbe15" translate="yes" xml:space="preserve">
          <source>Use properties of type &lt;a href=&quot;qml-variant&quot;&gt;variant&lt;/a&gt; to store a &lt;code&gt;georectangle&lt;/code&gt;. To create a &lt;code&gt;georectangle&lt;/code&gt; value, use the &lt;a href=&quot;qml-qtpositioning-qtpositioning#rectangle-method&quot;&gt;QtPositioning.rectangle()&lt;/a&gt; function:</source>
          <target state="translated">&lt;code&gt;georectangle&lt;/code&gt; 을 저장 하려면 &lt;a href=&quot;qml-variant&quot;&gt;variant&lt;/a&gt; 유형의 속성을 사용하십시오 . &lt;code&gt;georectangle&lt;/code&gt; 값 을 만들려면 &lt;a href=&quot;qml-qtpositioning-qtpositioning#rectangle-method&quot;&gt;QtPositioning.rectangle ()을&lt;/a&gt; 사용하십시오. 함수를 .</target>
        </trans-unit>
        <trans-unit id="9f754b35d266704cb05c903b7faa0ddaeee5341c" translate="yes" xml:space="preserve">
          <source>Use properties of type &lt;a href=&quot;qml-variant&quot;&gt;variant&lt;/a&gt; to store a &lt;code&gt;geoshape&lt;/code&gt;. To create a &lt;code&gt;geoshape&lt;/code&gt; use one of the methods described below.</source>
          <target state="translated">&lt;code&gt;geoshape&lt;/code&gt; 을 저장 하려면 &lt;a href=&quot;qml-variant&quot;&gt;variant&lt;/a&gt; 유형의 속성을 사용하십시오 . 만들려면 &lt;code&gt;geoshape&lt;/code&gt; 을 아래 설명 된 방법 중 하나를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5cd399582e1fd52d7ed1f0f0b06ac4d25607a95a" translate="yes" xml:space="preserve">
          <source>Use qobject_cast() to test whether a plugin implements a given interface.</source>
          <target state="translated">플러그인이 지정된 인터페이스를 구현하는지 테스트하려면 qobject_cast ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="415b6eb1f7c7d88b75a8cec0b071375b9ca97166" translate="yes" xml:space="preserve">
          <source>Use sentences as boundary.</source>
          <target state="translated">문장을 경계로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bf52d1f4e6875b12b82a5cc44dfa6f4ef279dab5" translate="yes" xml:space="preserve">
          <source>Use singleton types instead of pragma library scripts</source>
          <target state="translated">pragma 라이브러리 스크립트 대신 싱글 톤 유형을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="536d7c826c606244d8b4f65d60ed4bda6700a785" translate="yes" xml:space="preserve">
          <source>Use smaller aperture.</source>
          <target state="translated">작은 조리개를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="495cf4be0408d04e45237310628e24f4dc1ea217" translate="yes" xml:space="preserve">
          <source>Use temporary &amp;lt;file&amp;gt; for big resources.</source>
          <target state="translated">큰 리소스에는 임시 &amp;lt;파일&amp;gt;을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e51e6b1f2052f56f01324939b82dec51aa5cf34b" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;#Q_DECLARE_INTERFACE&quot;&gt;Q_DECLARE_INTERFACE&lt;/a&gt;() macro to tell Qt's &lt;a href=&quot;metaobjects&quot;&gt;meta-object system&lt;/a&gt; about the interface.</source>
          <target state="translated">&lt;a href=&quot;#Q_DECLARE_INTERFACE&quot;&gt;Q_DECLARE_INTERFACE&lt;/a&gt; () 매크로를 사용하여 Qt의 &lt;a href=&quot;metaobjects&quot;&gt;메타 오브젝트 시스템&lt;/a&gt; 에 인터페이스에 대해 알리십시오 .</target>
        </trans-unit>
        <trans-unit id="1034f18f6df28135f991b39cb54cd214b3c9a64c" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt;() macro in your application.</source>
          <target state="translated">사용 &lt;a href=&quot;#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt; 응용 프로그램에서 () 매크로를.</target>
        </trans-unit>
        <trans-unit id="8f9bcb24c3fa57a6bad874933b8645a7e672d7eb" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro to register the plugin with the Qt meta object system</source>
          <target state="translated">사용 &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA을&lt;/a&gt; Qt의 메타 오브젝트 시스템과 플러그인을 등록) (매크로</target>
        </trans-unit>
        <trans-unit id="6a14da1c1d3f4f78e78370e36f89e4a716674a43" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;#item-sub&quot;&gt;::item&lt;/a&gt; subcontrol for more fine grained control over the items in the &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; 의 항목을보다 세밀하게 제어 하려면 &lt;a href=&quot;#item-sub&quot;&gt;:: item &lt;/a&gt;하위 제어를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1edf1185802498d8006c514d62ab175f8c84aa3a" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;#item-sub&quot;&gt;::item&lt;/a&gt; subcontrol for more fine grained control over the items in the &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; 의 항목을보다 세밀하게 제어 하려면 &lt;a href=&quot;#item-sub&quot;&gt;:: item &lt;/a&gt;하위 제어를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ffb2256d96817fc27e20ecf3f240dc041ee25815" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qaxaggregated#widget&quot;&gt;widget&lt;/a&gt;() method if you need to make calls to the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; implementing the ActiveX control. You must not store that pointer in your subclass (unless you use &lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt;), as the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; can be destroyed by the &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; framework at any time.</source>
          <target state="translated">ActiveX 컨트롤을 구현하는 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 을 호출해야하는 경우 &lt;a href=&quot;qaxaggregated#widget&quot;&gt;widget&lt;/a&gt; () 메서드를 사용하십시오 . &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 은 언제든지 &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; 프레임 워크에 의해 파괴 될 수 있기 때문에 ( &lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt; 를 사용하지 않는 한) 하위 클래스에 포인터를 저장해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="4957469846e5e810143af24fbb3edd15eced9150" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qaxaggregated#widget&quot;&gt;widget&lt;/a&gt;() method if you need to make calls to the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; implementing the ActiveX control. You must not store that pointer in your subclass (unless you use &lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt;), as the &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; can be destroyed by the &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; framework at any time.</source>
          <target state="translated">ActiveX 컨트롤을 구현하는 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 을 호출해야하는 경우 &lt;a href=&quot;qaxaggregated#widget&quot;&gt;widget&lt;/a&gt; () 메소드를 사용하십시오 . &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 은 언제든지 &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; 프레임 워크에 의해 파괴 될 수 있으므로 서브 포인트에 해당 포인터를 저장하지 않아야합니다 ( &lt;a href=&quot;qpointer&quot;&gt;QPointer&lt;/a&gt; 를 사용하지 않는 한 ) .</target>
        </trans-unit>
        <trans-unit id="16cf24c7a2668451e6a5ad931421dce82602735e" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; objects &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt::color0&lt;/a&gt; and &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt::color1&lt;/a&gt; when drawing on a &lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; object (or a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; object with depth 1).</source>
          <target state="translated">&lt;a href=&quot;qbitmap&quot;&gt;QBitmap&lt;/a&gt; 객체 (또는 깊이 1 의 &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; 객체)를 그릴 때는 &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; 객체 &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt :: color0&lt;/a&gt; 및 &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt :: color1을&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a90f03e62a8931e02cceadc197628e4a92ab753f" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; objects &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt::color0&lt;/a&gt; and &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt::color1&lt;/a&gt; when drawing on a QBitmap object (or a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; object with depth 1).</source>
          <target state="translated">QBitmap 객체 (또는 깊이가 1 인 &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; 객체) 에 그릴 때 &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; 객체 &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt :: color0&lt;/a&gt; 및 &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt :: color1을&lt;/a&gt; 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="7544b22aaba620cfff2c93e90818a0cdad4c8894" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qdir#Q_INIT_RESOURCE&quot;&gt;Q_INIT_RESOURCE&lt;/a&gt;() macro in your application if the plugin ships qrc files.</source>
          <target state="translated">사용 &lt;a href=&quot;qdir#Q_INIT_RESOURCE&quot;&gt;Q_INIT_RESOURCE&lt;/a&gt; 플러그인 선박 QRC 파일의 경우 응용 프로그램에서 () 매크로를.</target>
        </trans-unit>
        <trans-unit id="188588570c5ff2d1ee11b0e35e67d639bd97d0ef" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qdir#toNativeSeparators&quot;&gt;toNativeSeparators&lt;/a&gt;() function to convert the separators to the ones that are appropriate for the underlying operating system.</source>
          <target state="translated">&lt;a href=&quot;qdir#toNativeSeparators&quot;&gt;toNativeSeparators&lt;/a&gt; () 함수를 사용하여 구분 기호를 기본 운영 체제에 적합한 구분 기호로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="51f55b4cb442f00ef9c3e944ec4831145e520058" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qfontdatabase#styleString&quot;&gt;styleString&lt;/a&gt;() to obtain a text version of a style.</source>
          <target state="translated">스타일의 텍스트 버전을 얻으려면 &lt;a href=&quot;qfontdatabase#styleString&quot;&gt;styleString&lt;/a&gt; ()을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ed7cf2c7819f7864529699d8a74734dd55ce92b" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qgraphicsblureffect#BlurHint-enum&quot;&gt;PerformanceHint&lt;/a&gt; hint to say that you want a faster blur, the &lt;a href=&quot;qgraphicsblureffect#BlurHint-enum&quot;&gt;QualityHint&lt;/a&gt; hint to say that you prefer a higher quality blur, or the &lt;a href=&quot;qgraphicsblureffect#BlurHint-enum&quot;&gt;AnimationHint&lt;/a&gt; when you want to animate the blur radius.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsblureffect#BlurHint-enum&quot;&gt;PerformanceHint&lt;/a&gt; 힌트를 사용하면 더 빠른 블러를 &lt;a href=&quot;qgraphicsblureffect#BlurHint-enum&quot;&gt;원한다고&lt;/a&gt; 말하고 QualityHint 힌트를 사용하면 더 높은 품질의 블러를 선호한다고 말하거나 &lt;a href=&quot;qgraphicsblureffect#BlurHint-enum&quot;&gt;AnimationHint&lt;/a&gt; 를 사용하여 블러 반경을 애니메이션 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad9ae56d7e66a2d9ad3fe488fadd129920f0c56e" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qguiapplication#mouseButtons&quot;&gt;QApplication::mouseButtons&lt;/a&gt;() function to get the state of the mouse buttons.</source>
          <target state="translated">사용 &lt;a href=&quot;qguiapplication#mouseButtons&quot;&gt;의 QApplication :: mouseButtons&lt;/a&gt; 마우스 버튼의 상태를 얻기 위해 () 함수를.</target>
        </trans-unit>
        <trans-unit id="8434ec315be15ab652b22b7d7b4d9deefed7d533" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qguiapplication#mouseButtons&quot;&gt;QGuiApplication::mouseButtons&lt;/a&gt;() function to get the state of the mouse buttons.</source>
          <target state="translated">사용 &lt;a href=&quot;qguiapplication#mouseButtons&quot;&gt;QGuiApplication :: mouseButtons&lt;/a&gt; 마우스 버튼의 상태를 얻기 위해 () 함수를.</target>
        </trans-unit>
        <trans-unit id="9244063427619896a9f3abdf2f716c6a5f851bdd" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qhistorystate#setDefaultState&quot;&gt;setDefaultState&lt;/a&gt;() function to set the state that should be entered if the parent state has never been entered. Example:</source>
          <target state="translated">부모 상태가 입력되지 않은 경우 입력해야하는 상태를 설정 하려면 &lt;a href=&quot;qhistorystate#setDefaultState&quot;&gt;setDefaultState&lt;/a&gt; () 함수를 사용하십시오 . 예:</target>
        </trans-unit>
        <trans-unit id="7db7d7253d476d7886fed6c6b4567004eebb39fb" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qimagereader#supportedImageFormats&quot;&gt;QImageReader::supportedImageFormats&lt;/a&gt;() and &lt;a href=&quot;qimagewriter#supportedImageFormats&quot;&gt;QImageWriter::supportedImageFormats&lt;/a&gt;() functions to retrieve a complete list of the supported file formats.</source>
          <target state="translated">사용 &lt;a href=&quot;qimagereader#supportedImageFormats&quot;&gt;QImageReader :: supportedImageFormats&lt;/a&gt; ()와 &lt;a href=&quot;qimagewriter#supportedImageFormats&quot;&gt;QImageWriter :: supportedImageFormats&lt;/a&gt; 지원되는 파일 형식의 전체 목록을 검색 할 () 함수를.</target>
        </trans-unit>
        <trans-unit id="41fcf2fd2b7fdc15d99a22d049a27550c7dc7e4a" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qml-qtqml-statemachine-historystate#defaultState-prop&quot;&gt;defaultState&lt;/a&gt; property to set the state that should be entered if the parent state has never been entered.</source>
          <target state="translated">부모 상태가 입력되지 않은 경우 입력해야하는 상태를 설정 하려면 &lt;a href=&quot;qml-qtqml-statemachine-historystate#defaultState-prop&quot;&gt;defaultState&lt;/a&gt; 속성을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8d14a710ba5b518b6fa23e2964ebbca84e140f89" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qml-qtquick-layouts-layout&quot;&gt;Layout&lt;/a&gt; attached property to set the size and alignment attributes of the layout's immediate children.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-layouts-layout&quot;&gt;레이아웃&lt;/a&gt; 첨부 속성을 사용하여 레이아웃 직계 자식의 크기 및 정렬 속성을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="881fe79fb295ad5d0f61d9a12a538b458b4bf49a" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt;() macro to specify the COM identifiers for the COM object. &lt;code&gt;ClassID&lt;/code&gt; and &lt;code&gt;InterfaceID&lt;/code&gt; are required, while &lt;code&gt;EventsID&lt;/code&gt; is only necessary when your object has signals. To generate these identifiers, use system tools like &lt;code&gt;uuidgen&lt;/code&gt; or &lt;code&gt;guidgen&lt;/code&gt;.</source>
          <target state="translated">사용 &lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt; COM 개체의 COM 식별자를 지정하는 () 매크로를. &lt;code&gt;ClassID&lt;/code&gt; 및 &lt;code&gt;InterfaceID&lt;/code&gt; 가 필요하지만 &lt;code&gt;EventsID&lt;/code&gt; 는 객체에 신호가있는 경우에만 필요합니다. 이러한 식별자를 생성하려면 &lt;code&gt;uuidgen&lt;/code&gt; 또는 &lt;code&gt;guidgen&lt;/code&gt; 과 같은 시스템 도구를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="af898ca1cc2a6e579de73e9883471e4cc7d09ecf" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro to tell Qt's &lt;a href=&quot;metaobjects&quot;&gt;meta-object system&lt;/a&gt; about the interfaces.</source>
          <target state="translated">&lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt; () 매크로를 사용하여 Qt의 &lt;a href=&quot;metaobjects&quot;&gt;메타 오브젝트 시스템&lt;/a&gt; 에 인터페이스에 대해 알리십시오 .</target>
        </trans-unit>
        <trans-unit id="a0cc2ed96fdd88efae2c326520acb16b746089a8" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt;() macro to declare properties for the ActiveX control.</source>
          <target state="translated">&lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; () 매크로를 사용하여 ActiveX 컨트롤의 속성을 선언하십시오.</target>
        </trans-unit>
        <trans-unit id="db6b8fe6f2949f4a866c2ca058e2a3b054cc6011" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qopengltimemonitor#recordSample&quot;&gt;recordSample&lt;/a&gt;() function to delimit blocks of code containing OpenGL commands that you wish to time. You can check availability of the resulting time samples and time intervals with &lt;a href=&quot;qopengltimemonitor#isResultAvailable&quot;&gt;isResultAvailable&lt;/a&gt;(). The calculated time intervals and the raw timestamp samples can be retrieved with the blocking &lt;a href=&quot;qopengltimemonitor#waitForIntervals&quot;&gt;waitForIntervals&lt;/a&gt;() and &lt;a href=&quot;qopengltimemonitor#waitForSamples&quot;&gt;waitForSamples&lt;/a&gt;() functions respectively.</source>
          <target state="translated">사용 &lt;a href=&quot;qopengltimemonitor#recordSample&quot;&gt;recordSample&lt;/a&gt; 당신은 시간에 원하는 것을 OpenGL을 명령을 포함하는 코드를 단락 블록 () 함수를. &lt;a href=&quot;qopengltimemonitor#isResultAvailable&quot;&gt;isResultAvailable&lt;/a&gt; () 을 사용하여 결과 시간 샘플 및 시간 간격의 가용성을 확인할 수 있습니다 . 계산 된 시간 간격 및 원시 타임 스탬프 샘플은 각각 &lt;a href=&quot;qopengltimemonitor#waitForIntervals&quot;&gt;waitForIntervals&lt;/a&gt; () 및 &lt;a href=&quot;qopengltimemonitor#waitForSamples&quot;&gt;waitForSamples&lt;/a&gt; () 함수를 차단하여 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="636b9d624cff571878a97588ddd6b331e1173bf5" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qqmlengine#QML_ELEMENT&quot;&gt;QML_ELEMENT&lt;/a&gt; and &lt;a href=&quot;qqmlengine#QML_NAMED_ELEMENT&quot;&gt;QML_NAMED_ELEMENT&lt;/a&gt;() macros to declare QML types.</source>
          <target state="translated">&lt;a href=&quot;qqmlengine#QML_ELEMENT&quot;&gt;QML_ELEMENT&lt;/a&gt; 및 &lt;a href=&quot;qqmlengine#QML_NAMED_ELEMENT&quot;&gt;QML_NAMED_ELEMENT&lt;/a&gt; () 매크로를 사용하여 QML 유형을 선언합니다.</target>
        </trans-unit>
        <trans-unit id="d42e7c117ac7b0ded7353421b59d5402eb51e5de" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qrect#normalized&quot;&gt;normalized&lt;/a&gt;() function to retrieve a rectangle where the corners are swapped.</source>
          <target state="translated">모서리가 바뀌는 사각형을 검색 하려면 &lt;a href=&quot;qrect#normalized&quot;&gt;normalized&lt;/a&gt; () 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="da4c49623dade939723d587e185adf3f2755b600" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qrectf#normalized&quot;&gt;normalized&lt;/a&gt;() function to retrieve a rectangle where the corners are swapped.</source>
          <target state="translated">모서리가 바뀌는 사각형을 검색 하려면 &lt;a href=&quot;qrectf#normalized&quot;&gt;normalized&lt;/a&gt; () 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="edca266b3d9fa062170a7e7104958f9ec92cc048" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qscrollarea#widget&quot;&gt;QScrollArea::widget&lt;/a&gt;() function to retrieve the contents of the viewport widget.</source>
          <target state="translated">사용 &lt;a href=&quot;qscrollarea#widget&quot;&gt;QScrollArea :: 위젯&lt;/a&gt; 뷰포트 위젯의 내용을 검색 () 함수를.</target>
        </trans-unit>
        <trans-unit id="b379acdb2967a76ed1ffdcb1a9de29865540507d" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qserialport#close&quot;&gt;close&lt;/a&gt;() method to close the port and cancel the I/O operations.</source>
          <target state="translated">&lt;a href=&quot;qserialport#close&quot;&gt;close&lt;/a&gt; () 메소드를 사용하여 포트를 닫고 I / O 조작을 취소하십시오.</target>
        </trans-unit>
        <trans-unit id="5127ca91b584580f8a2a7050eb8119735ce28af6" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qsize#expandedTo&quot;&gt;expandedTo&lt;/a&gt;() function to retrieve a size which holds the maximum height and width of</source>
          <target state="translated">&lt;a href=&quot;qsize#expandedTo&quot;&gt;expandTo&lt;/a&gt; () 함수를 사용하여 최대 높이와 ​​너비를 보유한 크기를 검색하십시오.</target>
        </trans-unit>
        <trans-unit id="564c1a00dbcbb1a154bb1380d682a2d519b3e9db" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qsizef#expandedTo&quot;&gt;expandedTo&lt;/a&gt;() function to retrieve a size which holds the maximum height and width of this size and a given size. Similarly, the &lt;a href=&quot;qsizef#boundedTo&quot;&gt;boundedTo&lt;/a&gt;() function returns a size which holds the minimum height and width of this size and a given size.</source>
          <target state="translated">&lt;a href=&quot;qsizef#expandedTo&quot;&gt;extendedTo&lt;/a&gt; () 함수를 사용 하여이 크기의 최대 높이와 ​​너비 및 주어진 크기를 보유하는 크기를 검색하십시오. 마찬가지로 &lt;a href=&quot;qsizef#boundedTo&quot;&gt;boundedTo&lt;/a&gt; () 함수는이 크기의 최소 높이와 너비 및 주어진 크기를 보유하는 크기를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="818ff4707eb8340eec7f8b957bf862804ce0f60e" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qsizepolicy#expandingDirections&quot;&gt;expandingDirections&lt;/a&gt;() function to determine whether the associated widget can make use of more space than its &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;sizeHint()&lt;/a&gt; function indicates, as well as find out in which directions it can expand.</source>
          <target state="translated">사용 &lt;a href=&quot;qsizepolicy#expandingDirections&quot;&gt;expandingDirections&lt;/a&gt; 관련 위젯은보다 더 많은 공간을 사용할 수 있는지 여부를 결정하기 위해 () 함수를 &lt;a href=&quot;qwidget#sizeHint-prop&quot;&gt;힌트 (sizehint) ()&lt;/a&gt; 뿐만 아니라, 그것을 확장 할 수있는 방향으로 찾을 나타냅니다 기능을.</target>
        </trans-unit>
        <trans-unit id="4b2fe4e4475aedeea3ca8e3f9f6a87d071127f55" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qssldiffiehellmanparameters#isValid&quot;&gt;isValid&lt;/a&gt;() method on the returned object to check whether the Diffie-Hellman parameters were valid and loaded correctly.</source>
          <target state="translated">리턴 된 오브젝트 에서 &lt;a href=&quot;qssldiffiehellmanparameters#isValid&quot;&gt;isValid&lt;/a&gt; () 메소드를 사용하여 Diffie-Hellman 매개 변수가 유효하고 올바르게로드되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5bb71d23276387d9e50d3fc05a9b184862e4feb8" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qstatemachine#addState&quot;&gt;addState&lt;/a&gt;() function to add a top-level state to the state machine. States are removed with the &lt;a href=&quot;qstatemachine#removeState&quot;&gt;removeState&lt;/a&gt;() function. Removing states while the machine is running is discouraged.</source>
          <target state="translated">&lt;a href=&quot;qstatemachine#addState&quot;&gt;addState&lt;/a&gt; () 함수를 사용하여 상태 시스템에 최상위 상태를 추가하십시오. 상태는 &lt;a href=&quot;qstatemachine#removeState&quot;&gt;removeState&lt;/a&gt; () 함수 로 제거됩니다 . 기계가 작동하는 동안 상태를 제거하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b00756f30fda2482061b05d6d783fdea90d5ebc5" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qstatusbar#currentMessage&quot;&gt;currentMessage&lt;/a&gt;() function to retrieve the temporary message currently shown. The &lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar&lt;/a&gt; class also provide the &lt;a href=&quot;qstatusbar#messageChanged&quot;&gt;messageChanged&lt;/a&gt;() signal which is emitted whenever the temporary status message changes.</source>
          <target state="translated">&lt;a href=&quot;qstatusbar#currentMessage&quot;&gt;currentMessage&lt;/a&gt; () 함수를 사용하여 현재 표시된 임시 메시지를 검색하십시오. &lt;a href=&quot;qstatusbar&quot;&gt;QStatusBar의&lt;/a&gt; 클래스는 제공 &lt;a href=&quot;qstatusbar#messageChanged&quot;&gt;messageChanged&lt;/a&gt; 임시 상태 메시지가 변경 될 때마다 방출된다 () 신호.</target>
        </trans-unit>
        <trans-unit id="972b4b7372bbc79a014d0257b60970ac56a3aea9" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qstatusbar#currentMessage&quot;&gt;currentMessage&lt;/a&gt;() function to retrieve the temporary message currently shown. The QStatusBar class also provide the &lt;a href=&quot;qstatusbar#messageChanged&quot;&gt;messageChanged&lt;/a&gt;() signal which is emitted whenever the temporary status message changes.</source>
          <target state="translated">&lt;a href=&quot;qstatusbar#currentMessage&quot;&gt;currentMessage&lt;/a&gt; () 함수를 사용하여 현재 표시된 임시 메시지를 검색합니다. QStatusBar 클래스는 임시 상태 메시지가 변경 될 때마다 발생 하는 &lt;a href=&quot;qstatusbar#messageChanged&quot;&gt;messageChanged&lt;/a&gt; () 신호 도 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="aae44b2a78132db0ac95d39d5ce8298c4155733f" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qstatusbar#showMessage&quot;&gt;showMessage&lt;/a&gt;() slot to display a</source>
          <target state="translated">&lt;a href=&quot;qstatusbar#showMessage&quot;&gt;showMessage&lt;/a&gt; () 슬롯을 사용하여</target>
        </trans-unit>
        <trans-unit id="606d2cfd02aff13c3283cf82054820fbb630316f" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qtplugin#Q_DECLARE_INTERFACE&quot;&gt;Q_DECLARE_INTERFACE&lt;/a&gt;() macro to tell Qt's &lt;a href=&quot;metaobjects&quot;&gt;meta-object system&lt;/a&gt; about the interface.</source>
          <target state="translated">&lt;a href=&quot;qtplugin#Q_DECLARE_INTERFACE&quot;&gt;Q_DECLARE_INTERFACE&lt;/a&gt; () 매크로를 사용하여 인터페이스에 대해 Qt의 &lt;a href=&quot;metaobjects&quot;&gt;Meta Object 시스템&lt;/a&gt; 에 알립니다 .</target>
        </trans-unit>
        <trans-unit id="44b0182a87c56dd4ec2aa29f87fdd2a68bc2421e" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;qtplugin#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt;() macro in your application.</source>
          <target state="translated">사용 &lt;a href=&quot;qtplugin#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt; 응용 프로그램에서 () 매크로를.</target>
        </trans-unit>
        <trans-unit id="0841c13a98bc3a718c5c97a8e380c061517a984c" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;stylesheet-reference#item-sub&quot;&gt;::item&lt;/a&gt; subcontrol for more fine grained control over the items in the &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; 의 항목을보다 세밀하게 제어 하려면 &lt;a href=&quot;stylesheet-reference#item-sub&quot;&gt;:: item &lt;/a&gt;하위 컨트롤을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0fc02687360440bab8529260036c67e66f67d8e6" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;stylesheet-reference#item-sub&quot;&gt;::item&lt;/a&gt; subcontrol for more fine grained control over the items in the &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; 의 항목을보다 세밀하게 제어 하려면 &lt;a href=&quot;stylesheet-reference#item-sub&quot;&gt;:: item &lt;/a&gt;하위 컨트롤을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6fb71f6c47541aed8c8fec5b7d8e5c1e6c9bac67" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;%{category}&lt;/code&gt; placeholder to print the category in the default message handler:</source>
          <target state="translated">&lt;code&gt;%{category}&lt;/code&gt; 플레이스 홀더를 사용하여 기본 메시지 핸들러에서 카테고리를 인쇄하십시오.</target>
        </trans-unit>
        <trans-unit id="d473db9c2d141d0896676b4502dbbf8f239b1669" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;QT_USE_NATIVE_WINDOWS=1&lt;/code&gt; in your environment.</source>
          <target state="translated">사용 &lt;code&gt;QT_USE_NATIVE_WINDOWS=1&lt;/code&gt; 을 환경에서.</target>
        </trans-unit>
        <trans-unit id="2b67131952726ec7997747fb3e71de27952b2768" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;defaultButton&lt;/code&gt; argument of &lt;a href=&quot;qmessagebox#information&quot;&gt;information&lt;/a&gt;(), &lt;a href=&quot;qmessagebox#warning&quot;&gt;warning&lt;/a&gt;(), etc. instead, or call &lt;a href=&quot;qmessagebox#setDefaultButton&quot;&gt;setDefaultButton&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qmessagebox#information&quot;&gt;정보&lt;/a&gt; (), &lt;a href=&quot;qmessagebox#warning&quot;&gt;경고&lt;/a&gt; () 등 의 &lt;code&gt;defaultButton&lt;/code&gt; 인수를 대신 사용하거나 &lt;a href=&quot;qmessagebox#setDefaultButton&quot;&gt;setDefaultButton&lt;/a&gt; ()을 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="3a34512754f145f18cb5626b6cf5731877917eb3" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;fb&lt;/code&gt; plugin parameter to specify the framebuffer device to use.</source>
          <target state="translated">사용 &lt;code&gt;fb&lt;/code&gt; 사용하는 프레임 버퍼 장치를 지정하는 매개 변수 플러그인.</target>
        </trans-unit>
        <trans-unit id="d47de119b78a9f66032ab42216844203e8882df0" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;find_package()&lt;/code&gt; command to locate the needed module components in the &lt;code&gt;Qt5&lt;/code&gt; package:</source>
          <target state="translated">&lt;code&gt;find_package()&lt;/code&gt; 명령을 사용하여 &lt;code&gt;Qt5&lt;/code&gt; 패키지 에서 필요한 모듈 구성 요소를 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="0542b334bb201a89b9cd0a1843525e2dd7168fec" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;find_package()&lt;/code&gt; command to locate the needed module components in the &lt;code&gt;Qt6&lt;/code&gt; package:</source>
          <target state="translated">&lt;code&gt;find_package()&lt;/code&gt; 명령을 사용하여 &lt;code&gt;Qt6&lt;/code&gt; 패키지 에서 필요한 모듈 구성 요소를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="e919041fb894daf9791a7ccc245e059f03e888d1" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;find_package()&lt;/code&gt; command to locate the needed module components in the Qt6 package:</source>
          <target state="translated">&lt;code&gt;find_package()&lt;/code&gt; 명령을 사용하여 Qt6 패키지에서 필요한 모듈 구성 요소를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="9303de3c03c5c07d7d32c791d23e13d49a19e86d" translate="yes" xml:space="preserve">
          <source>Use the &lt;code&gt;sdkmanager&lt;/code&gt; command line tool to update the packages list and then install the essential packages:</source>
          <target state="translated">사용 &lt;code&gt;sdkmanager&lt;/code&gt; 의 필수 패키지를 패키지 목록을 업데이트 한 다음 설치 명령 줄 도구를 :</target>
        </trans-unit>
        <trans-unit id="593c5552882e7472b1d1c0dc90dfe0664d49ef69" translate="yes" xml:space="preserve">
          <source>Use the ODBC-style positional syntax, with &quot;?&quot; as placeholders.</source>
          <target state="translated">&quot;?&quot;와 함께 ODBC 스타일 위치 구문을 사용하십시오. 자리 표시 자로</target>
        </trans-unit>
        <trans-unit id="32ec27a6623c4387789b13e1a0b8a0f42b8a5216" translate="yes" xml:space="preserve">
          <source>Use the Oracle-style syntax with named placeholders (e.g., &quot;:id&quot;)</source>
          <target state="translated">이름이 지정된 자리 표시 자와 함께 Oracle 스타일 구문을 사용하십시오 (예 : &quot;: id&quot;)</target>
        </trans-unit>
        <trans-unit id="36eef1989365264d4534f3f529c67611ecc43784" translate="yes" xml:space="preserve">
          <source>Use the Q_BINDABLE_PROPERTY macro in the class declaration to declare the property as bindable.</source>
          <target state="translated">클래스 선언에서 Q_BINDABLE_PROPERTY 매크로를 사용하여 속성을 바인딩 가능으로 선언합니다.</target>
        </trans-unit>
        <trans-unit id="b0a5e8bb83069dd2b2cf5d09cdc9a7b6a9c974a5" translate="yes" xml:space="preserve">
          <source>Use the Qt event loop to wait for a reply. This means that the user-interface will stay responsive (processing input events), but it also means other events may happen, like signal delivery and other D-Bus method calls.</source>
          <target state="translated">Qt 이벤트 루프를 사용하여 응답을 기다립니다. 이는 사용자 인터페이스가 응답 성을 유지하면서 (입력 이벤트 처리) 신호 전달 및 기타 D-Bus 메서드 호출과 같은 다른 이벤트가 발생할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="6486e71d63c25bf3f336b60c6aa08c1be93b91c9" translate="yes" xml:space="preserve">
          <source>Use the Same .so Lib File</source>
          <target state="translated">동일한 .so Lib 파일 사용</target>
        </trans-unit>
        <trans-unit id="b40b8b05a2fc0d0e2b2527bffa10748a8aebefda" translate="yes" xml:space="preserve">
          <source>Use the \qtcmakepackage command to add CMake package information to classes and namespaces. This information will then appear in a table at the top of the class or namespace documentation page. For example:</source>
          <target state="translated">\ qtcmakepackage 명령을 사용하여 클래스 및 네임 스페이스에 CMake 패키지 정보를 추가합니다. 이 정보는 클래스 또는 네임 스페이스 문서 페이지의 맨 위에있는 표에 나타납니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="00fe3d7db8c8843e4ebe112c82c5c98695b6faa1" translate="yes" xml:space="preserve">
          <source>Use the application to view the slots, signals and porperties available through the &lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt; class when instantiated with a certain ActiveX, and to test ActiveX controls you implement or want to use in your Qt application.</source>
          <target state="translated">특정 ActiveX로 인스턴스화 할 때 &lt;a href=&quot;qaxwidget&quot;&gt;QAxWidget&lt;/a&gt; 클래스를 통해 사용 가능한 슬롯, 신호 및 속성을 보고 Qt 애플리케이션에서 구현하거나 사용하려는 ActiveX 컨트롤을 테스트하려면 애플리케이션을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2f7c0974be6dad5e958d56f2d0c0d7b44f6bde07" translate="yes" xml:space="preserve">
          <source>Use the create function to construct the attribute, rather than an initialization list, to ensure that all fields are initialized.</source>
          <target state="translated">모든 필드가 초기화되도록하려면 create 함수를 사용하여 초기화 목록이 아닌 속성을 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="484d4d1a54cd92d0aa506a635865e1ef6b102285" translate="yes" xml:space="preserve">
          <source>Use the default font unless you have UI guidelines specifying otherwise.</source>
          <target state="translated">UI 지침에서 별도로 지정하지 않으면 기본 글꼴을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="72ef042376eceb28b51e8b4d91a2b42efbba6bea" translate="yes" xml:space="preserve">
          <source>Use the default font, unless you have UI guidelines specifying otherwise.</source>
          <target state="translated">UI 지침에서 별도로 지정하지 않는 한 기본 글꼴을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3d122f5afe3205a290aebbfbad73216486542fa6" translate="yes" xml:space="preserve">
          <source>Use the default font, unless you have UI guidelines that specify otherwise.</source>
          <target state="translated">달리 지정하는 UI 지침이없는 경우 기본 글꼴을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="67cc6e355aca5b879f66154f39058801983eef96" translate="yes" xml:space="preserve">
          <source>Use the default hinting level for the target platform.</source>
          <target state="translated">대상 플랫폼에 기본 힌트 수준을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5e4b62c95bf4fe043a4f2fe38dd6c1671511aa36" translate="yes" xml:space="preserve">
          <source>Use the enumeration values when you want a format that matches the locale preferences.</source>
          <target state="translated">로케일 환경 설정과 일치하는 형식을 원할 때 열거 값을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7a9cb4cae2aff5365643d44181b14b0ad824b0aa" translate="yes" xml:space="preserve">
          <source>Use the flash in conjunction with a slow shutter speed. This mode allows better exposure of distant objects and/or motion blur effect.</source>
          <target state="translated">느린 셔터 속도와 함께 플래시를 사용하십시오. 이 모드는 멀리있는 물체 및 / 또는 모션 블러 효과의 노출을 향상시킵니다.</target>
        </trans-unit>
        <trans-unit id="13d742cac6e35c1c3a421b2f518b43681356496c" translate="yes" xml:space="preserve">
          <source>Use the following &lt;code&gt;import&lt;/code&gt; statement in the QML files to access the Qt Purchasing QML types:</source>
          <target state="translated">Qt 파일에서 다음 &lt;code&gt;import&lt;/code&gt; 문을 사용하여 Qt 구매 QML 유형에 액세스하십시오.</target>
        </trans-unit>
        <trans-unit id="a3549a8ac122696aee2d3c831855376b28b87f8c" translate="yes" xml:space="preserve">
          <source>Use the following commands to install the basic requirements for building Qt applications:</source>
          <target state="translated">Qt 애플리케이션을 빌드하기위한 기본 요구 사항을 설치하려면 다음 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="4930a710f19d94514c42b37a47ea64b7f2d19ce9" translate="yes" xml:space="preserve">
          <source>Use the following include statement to access the C++ classes:</source>
          <target state="translated">다음 include 문을 사용하여 C ++ 클래스에 액세스하십시오.</target>
        </trans-unit>
        <trans-unit id="6de112bf46883a6d20ba7fbc211102b9ebbf8471" translate="yes" xml:space="preserve">
          <source>Use the global Qt color &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt::color0&lt;/a&gt; to draw 0-pixels and &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt::color1&lt;/a&gt; to draw 1-pixels in the bitmaps.</source>
          <target state="translated">전역 Qt 색상 &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt :: color0&lt;/a&gt; 을 사용하여 0 픽셀을 그리고 &lt;a href=&quot;qt#GlobalColor-enum&quot;&gt;Qt :: color1&lt;/a&gt; 을 사용하여 비트 맵에 1 픽셀을 그립니다.</target>
        </trans-unit>
        <trans-unit id="16cc79bede2387383cdb09ed630e0a2d90997b6a" translate="yes" xml:space="preserve">
          <source>Use the interface returned by &lt;a href=&quot;qaxbindable#clientSite&quot;&gt;clientSite&lt;/a&gt;() to call the ActiveX client. To implement additional COM interfaces in your ActiveX control, reimplement &lt;a href=&quot;qaxbindable#createAggregate&quot;&gt;createAggregate&lt;/a&gt;() to return a new object of a &lt;a href=&quot;qaxaggregated&quot;&gt;QAxAggregated&lt;/a&gt; subclass.</source>
          <target state="translated">&lt;a href=&quot;qaxbindable#clientSite&quot;&gt;clientSite&lt;/a&gt; ()에서 리턴 한 인터페이스를 사용하여 ActiveX 클라이언트를 호출하십시오. ActiveX 컨트롤에서 추가 COM 인터페이스를 구현하려면 &lt;a href=&quot;qaxbindable#createAggregate&quot;&gt;createAggregate&lt;/a&gt; ()를 다시 구현 하여 &lt;a href=&quot;qaxaggregated&quot;&gt;QAxAggregated&lt;/a&gt; 하위 클래스 의 새 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="193d3138ee2bb43beddbb7154462ff85ba7dc30f" translate="yes" xml:space="preserve">
          <source>Use the operating system's native rasterizer for text.</source>
          <target state="translated">텍스트에는 운영 체제의 기본 래스터 라이저를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a003e6ee5d956328416b6e5620ca208acf2b8496" translate="yes" xml:space="preserve">
          <source>Use the overload of the &lt;a href=&quot;qwidget#setParent&quot;&gt;QWidget::setParent&lt;/a&gt;() function to change the ownership of a &lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt; widget. This function allows you to explicitly set the window flags of the reparented widget; using the overloaded function will clear the window flags specifying the window-system properties for the widget (in particular it will reset the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Dialog&lt;/a&gt; flag).</source>
          <target state="translated">&lt;a href=&quot;qwidget#setParent&quot;&gt;QWidget :: setParent&lt;/a&gt; () 함수 의 오버로드를 사용하여 &lt;a href=&quot;qdialog&quot;&gt;QDialog&lt;/a&gt; 위젯 의 소유권을 변경하십시오 . 이 기능을 사용하면 상위 위젯의 창 플래그를 명시 적으로 설정할 수 있습니다. 오버로드 된 함수를 사용하면 위젯의 창 시스템 특성을 지정하는 창 플래그가 지워집니다 (특히 &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Dialog&lt;/a&gt; 플래그 가 재설정 됨 ).</target>
        </trans-unit>
        <trans-unit id="70a84a88dc04a63fe2efded4c311fabd33cc3cd8" translate="yes" xml:space="preserve">
          <source>Use the overload of the &lt;a href=&quot;qwidget#setParent&quot;&gt;QWidget::setParent&lt;/a&gt;() function to change the ownership of a QDialog widget. This function allows you to explicitly set the window flags of the reparented widget; using the overloaded function will clear the window flags specifying the window-system properties for the widget (in particular it will reset the &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt::Dialog&lt;/a&gt; flag).</source>
          <target state="translated">&lt;a href=&quot;qwidget#setParent&quot;&gt;QWidget :: setParent&lt;/a&gt; () 함수 의 오버로드를 사용하여 QDialog 위젯의 소유권을 변경합니다. 이 함수를 사용하면 상위 위젯의 창 플래그를 명시 적으로 설정할 수 있습니다. 오버로드 된 함수를 사용하면 위젯에 대한 창 시스템 속성을 지정하는 창 플래그가 지워집니다 (특히 &lt;a href=&quot;qt#WindowType-enum&quot;&gt;Qt :: Dialog&lt;/a&gt; 플래그 가 재설정 됨 ).</target>
        </trans-unit>
        <trans-unit id="c0097d7085cbbed168d9814edbfc69e834e6df78" translate="yes" xml:space="preserve">
          <source>Use the specified subdirectory instead of &lt;code&gt;SUBDIRS&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;SUBDIRS&lt;/code&gt; 값 대신 지정된 서브 디렉토리를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8dbc357a64a1671aedb9fb58eb4065ab37b45040" translate="yes" xml:space="preserve">
          <source>Use the static functions to generate a list of &lt;a href=&quot;qprinterinfo&quot;&gt;QPrinterInfo&lt;/a&gt; objects. Each &lt;a href=&quot;qprinterinfo&quot;&gt;QPrinterInfo&lt;/a&gt; object in the list represents a single printer and can be queried for name, supported paper sizes, and whether or not it is the default printer.</source>
          <target state="translated">정적 함수를 사용하여 &lt;a href=&quot;qprinterinfo&quot;&gt;QPrinterInfo&lt;/a&gt; 오브젝트 목록을 생성하십시오 . 목록의 각 &lt;a href=&quot;qprinterinfo&quot;&gt;QPrinterInfo&lt;/a&gt; 객체는 단일 프린터를 나타내며 이름, 지원되는 용지 크기 및 기본 프린터인지 여부를 쿼리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="fc4e1393f69886316d4d48d8285c2a0249c8311c" translate="yes" xml:space="preserve">
          <source>Use the static functions to generate a list of &lt;a href=&quot;qserialportinfo&quot;&gt;QSerialPortInfo&lt;/a&gt; objects. Each &lt;a href=&quot;qserialportinfo&quot;&gt;QSerialPortInfo&lt;/a&gt; object in the list represents a single serial port and can be queried for the port name, system location, description, and manufacturer. The &lt;a href=&quot;qserialportinfo&quot;&gt;QSerialPortInfo&lt;/a&gt; class can also be used as an input parameter for the setPort() method of the &lt;a href=&quot;qserialport&quot;&gt;QSerialPort&lt;/a&gt; class.</source>
          <target state="translated">정적 함수를 사용하여 &lt;a href=&quot;qserialportinfo&quot;&gt;QSerialPortInfo&lt;/a&gt; 오브젝트 목록을 생성하십시오 . 목록의 각 &lt;a href=&quot;qserialportinfo&quot;&gt;QSerialPortInfo&lt;/a&gt; 개체는 단일 직렬 포트를 나타내며 포트 이름, 시스템 위치, 설명 및 제조업체를 쿼리 할 수 ​​있습니다. &lt;a href=&quot;qserialportinfo&quot;&gt;QSerialPortInfo의&lt;/a&gt; 클래스도의 setPort () 메소드에 대한 입력 매개 변수로서 사용될 수있다 &lt;a href=&quot;qserialport&quot;&gt;QSerialPort의&lt;/a&gt; 클래스.</target>
        </trans-unit>
        <trans-unit id="2b4aa02abd6aaedd79a4d7a11bb654dfcbbbc8f3" translate="yes" xml:space="preserve">
          <source>Use the static functions to generate a list of QPrinterInfo objects. Each QPrinterInfo object in the list represents a single printer and can be queried for name, supported paper sizes, and whether or not it is the default printer.</source>
          <target state="translated">정적 함수를 사용하여 QPrinterInfo 개체 목록을 생성합니다. 목록의 각 QPrinterInfo 개체는 단일 프린터를 나타내며 이름, 지원되는 용지 크기 및 기본 프린터인지 여부를 쿼리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="2a51dd46478f03c1f32ba14ce19f7139ead20b2d" translate="yes" xml:space="preserve">
          <source>Use the static functions to generate a list of QSerialPortInfo objects. Each QSerialPortInfo object in the list represents a single serial port and can be queried for the port name, system location, description, and manufacturer. The QSerialPortInfo class can also be used as an input parameter for the setPort() method of the &lt;a href=&quot;qserialport&quot;&gt;QSerialPort&lt;/a&gt; class.</source>
          <target state="translated">정적 함수를 사용하여 QSerialPortInfo 개체 목록을 생성합니다. 목록의 각 QSerialPortInfo 개체는 단일 직렬 포트를 나타내며 포트 이름, 시스템 위치, 설명 및 제조업체를 쿼리 할 수 ​​있습니다. QSerialPortInfo 클래스도의 setPort () 메소드에 대한 입력 매개 변수로서 사용될 수있다 &lt;a href=&quot;qserialport&quot;&gt;QSerialPort의&lt;/a&gt; 클래스.</target>
        </trans-unit>
        <trans-unit id="0a08444c4729ec6cfdb4e3165e2833e90fcb5d88" translate="yes" xml:space="preserve">
          <source>Use the widget's style to draw a complex control</source>
          <target state="translated">위젯 스타일을 사용하여 복잡한 컨트롤을 그립니다.</target>
        </trans-unit>
        <trans-unit id="d92c241441b54e0053da513fe4e674d404b421d1" translate="yes" xml:space="preserve">
          <source>Use the widget's style to draw a control element</source>
          <target state="translated">위젯 스타일을 사용하여 컨트롤 요소 그리기</target>
        </trans-unit>
        <trans-unit id="d7bb6267dd39dba204feabb6277e9392e1bd1304" translate="yes" xml:space="preserve">
          <source>Use the widget's style to draw a primitive element</source>
          <target state="translated">위젯 스타일을 사용하여 기본 요소를 그립니다.</target>
        </trans-unit>
        <trans-unit id="40534a26e714378b30e911c37da194781f33999b" translate="yes" xml:space="preserve">
          <source>Use this class if you want to implement a custom input method using C/C++ language.</source>
          <target state="translated">C / C ++ 언어를 사용하여 사용자 정의 입력 메소드를 구현하려는 경우이 클래스를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="62a9f4fe702de6f3c3444103dfcfca0ee46a17d8" translate="yes" xml:space="preserve">
          <source>Use this class to describe revisions of a type. Compatible revisions can be expressed as increments of the minor version. Breaking changes can be expressed as increments of the major version. The return values of &lt;a href=&quot;qmetamethod#revision&quot;&gt;QMetaMethod::revision&lt;/a&gt;() and &lt;a href=&quot;qmetaproperty#revision&quot;&gt;QMetaProperty::revision&lt;/a&gt;() can be passed to &lt;a href=&quot;qtyperevision#fromEncodedVersion&quot;&gt;QTypeRevision::fromEncodedVersion&lt;/a&gt;(). The resulting major and minor versions specify in which Qt versions the properties and methods were added.</source>
          <target state="translated">이 클래스를 사용하여 유형의 개정을 설명합니다. 호환되는 개정은 부 버전의 증분으로 표현할 수 있습니다. 주요 변경 사항은 주 버전의 증분으로 표현할 수 있습니다. &lt;a href=&quot;qmetamethod#revision&quot;&gt;QMetaMethod :: revision&lt;/a&gt; () 및 &lt;a href=&quot;qmetaproperty#revision&quot;&gt;QMetaProperty :: revision&lt;/a&gt; () 의 반환 값은 &lt;a href=&quot;qtyperevision#fromEncodedVersion&quot;&gt;QTypeRevision :: fromEncodedVersion&lt;/a&gt; ()에 전달할 수 있습니다 . 결과 주 버전과 부 버전은 속성과 메서드가 추가 된 Qt 버전을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="96b5747408ca95d5bc45d4dee942a83a1c4f1b2f" translate="yes" xml:space="preserve">
          <source>Use this enum for JavaScript language-specific types of Error objects.</source>
          <target state="translated">JavaScript 언어 별 유형의 Error 객체에이 열거 형을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b27b1d8a7b5bf57c1deb1a98d37ce8d2c2af8d3e" translate="yes" xml:space="preserve">
          <source>Use this function if you want to report benchmark results without using the QBENCHMARK macro. Use</source>
          <target state="translated">QBENCHMARK 매크로를 사용하지 않고 벤치 마크 결과를보고하려는 경우이 기능을 사용하십시오. 사용하다</target>
        </trans-unit>
        <trans-unit id="cf4c12a8f0654db7bc7a5d6c333118690d571b15" translate="yes" xml:space="preserve">
          <source>Use this function only to implement &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;() for your own custom types. For example, here's how you could implement a &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;() overload for std::unordered_set&amp;lt;int&amp;gt;:</source>
          <target state="translated">이 함수는 사용자 정의 유형에 대해 &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt; () 를 구현할 때만 사용하십시오 . 예를 들어, std :: unordered_set &amp;lt;int&amp;gt;에 대해 &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt; () 과부하를 구현하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dc8707d1c0d2e70dcac1d084d4b5894a613a1823" translate="yes" xml:space="preserve">
          <source>Use this function only to implement &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;() for your own custom types. For example, here's how you could implement a &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt;() overload for std::vector&amp;lt;int&amp;gt;:</source>
          <target state="translated">이 함수는 사용자 정의 유형에 대해 &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt; () 를 구현할 때만 사용하십시오 . 예를 들어 std :: vector &amp;lt;int&amp;gt;에 대한 &lt;a href=&quot;qhash#qHashx&quot;&gt;qHash&lt;/a&gt; () 과부하를 구현하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="75f82e52ff1a80c84b8d437a43c104dce0312fb5" translate="yes" xml:space="preserve">
          <source>Use this function only when you don't know which window you are targeting. If you do know the target window, use &lt;a href=&quot;qwindow#devicePixelRatio&quot;&gt;QWindow::devicePixelRatio&lt;/a&gt;() instead.</source>
          <target state="translated">타겟팅하는 창을 모르는 경우에만이 기능을 사용하십시오. 대상 창을 아는 경우 &lt;a href=&quot;qwindow#devicePixelRatio&quot;&gt;QWindow :: devicePixelRatio&lt;/a&gt; ()를 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d837aebdb5f6d1634f3bc0c829d48278a120e18b" translate="yes" xml:space="preserve">
          <source>Use this function to avoid repetetive reallocation of &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s internal data if you can predict how many elements will be appended. Note that the reservation applies only to the internal pointer array.</source>
          <target state="translated">몇 개의 요소가 추가 될지 예측할 수있는 경우 &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; 내부 데이터의 반복적 인 재 할당을 피하려면이 기능을 사용하십시오 . 예약은 내부 포인터 배열에만 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="0d66543078a98602294625f8dac0bdf095f8fffd" translate="yes" xml:space="preserve">
          <source>Use this function to eliminate redundant calls to a function or signal.</source>
          <target state="translated">기능 또는 신호에 대한 중복 호출을 제거하려면이 기능을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f5717b9d6b654d0f8cb4db63b664d5d1a546f3b3" translate="yes" xml:space="preserve">
          <source>Use this function to enable or disable HTTP redirects on the manager's level.</source>
          <target state="translated">관리자 수준에서 HTTP 리디렉션을 활성화 또는 비활성화하려면이 기능을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d4f49b928b5e189958ca63513c3da7e6ce983739" translate="yes" xml:space="preserve">
          <source>Use this function to override the platform default properties returned by the default constructor. If you only want to change the scroller properties of a single scroller, use &lt;a href=&quot;qscroller#scrollerProperties-prop&quot;&gt;QScroller::setScrollerProperties&lt;/a&gt;()</source>
          <target state="translated">기본 생성자가 리턴 한 플랫폼 기본 특성을 대체하려면이 함수를 사용하십시오. 단일 스크롤러의 스크롤러 특성 만 변경하려면 &lt;a href=&quot;qscroller#scrollerProperties-prop&quot;&gt;QScroller :: setScrollerProperties&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0c3fec4bb8161891e53cc06a3b38761adb637ea1" translate="yes" xml:space="preserve">
          <source>Use this function to register an object of the given type T as a singleton type.</source>
          <target state="translated">이 함수를 사용하여 지정된 유형 T의 객체를 단일 유형으로 등록합니다.</target>
        </trans-unit>
        <trans-unit id="36812bb8edc769e88de1d7510c1213f99fbc5c0b" translate="yes" xml:space="preserve">
          <source>Use this function to return the actual network configuration currently in use by the network session.</source>
          <target state="translated">네트워크 세션에서 현재 사용중인 실제 네트워크 구성을 반환하려면이 기능을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6d1cb7ece3632a07a10f7c6ef067c0247f237d36" translate="yes" xml:space="preserve">
          <source>Use this function to set the cookie jar object to a class that implements additional features, like saving the cookies to permanent storage.</source>
          <target state="translated">쿠키 저장 오브젝트를 쿠키를 영구 저장 영역에 저장하는 것과 같은 추가 기능을 구현하는 클래스로 설정하려면이 기능을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="625812d204edfe0e925d073d9907bd6130c7bf75" translate="yes" xml:space="preserve">
          <source>Use this function to set the network cache object to a class that implements additional features, like saving the cookies to permanent storage.</source>
          <target state="translated">쿠키를 영구 저장소에 저장하는 것과 같은 추가 기능을 구현하는 클래스로 네트워크 캐시 오브젝트를 설정하려면이 기능을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1f8d88aa88778d25217e4c279871fefbc826f04e" translate="yes" xml:space="preserve">
          <source>Use this function to specify to OpenGL the number of vertices in a patch to</source>
          <target state="translated">이 함수를 사용하여 패치의 정점 수를 OpenGL에 지정합니다.</target>
        </trans-unit>
        <trans-unit id="b122ea313d1381e57d665698c7ff249ea0549117" translate="yes" xml:space="preserve">
          <source>Use this function to update the renderer with changes that have occurred in the item.</source>
          <target state="translated">이 기능을 사용하여 항목에서 발생한 변경 사항으로 렌더러를 업데이트하십시오.</target>
        </trans-unit>
        <trans-unit id="6c7d3c6d541680b6f68fe9d1c013356f416a8490" translate="yes" xml:space="preserve">
          <source>Use this function when calculating layout geometry based on the image size: &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; layoutSize = image.&lt;a href=&quot;qimage#size&quot;&gt;size&lt;/a&gt;() / image.devicePixelRatio()</source>
          <target state="translated">이미지 크기를 기준으로 레이아웃 지오메트리를 계산할 때이 기능을 사용하십시오 : &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; layoutSize = image. &lt;a href=&quot;qimage#size&quot;&gt;크기&lt;/a&gt; () /image.devicePixelRatio ()</target>
        </trans-unit>
        <trans-unit id="f9a4fcec906f40b24bc6b4bb1df5a7defc15dd02" translate="yes" xml:space="preserve">
          <source>Use this function when calculating layout geometry based on the pixmap size: &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; layoutSize = image.&lt;a href=&quot;qpixmap#size&quot;&gt;size&lt;/a&gt;() / image.devicePixelRatio()</source>
          <target state="translated">픽스맵 크기를 기준으로 레이아웃 지오메트리를 계산할 때이 기능을 사용하십시오 : &lt;a href=&quot;qsize&quot;&gt;QSize&lt;/a&gt; layoutSize = image. &lt;a href=&quot;qpixmap#size&quot;&gt;크기&lt;/a&gt; () /image.devicePixelRatio ()</target>
        </trans-unit>
        <trans-unit id="c5d429fae93061d995ff6b93a8c465072ae67b4f" translate="yes" xml:space="preserve">
          <source>Use this function when the type will not be referenced by name, specifically for C++ types that are used on the left-hand side of a property binding. To indicate to which module the type belongs use</source>
          <target state="translated">유형이 이름으로 참조되지 않을 때, 특히 속성 바인딩의 왼쪽에 사용되는 C ++ 유형에 대해이 함수를 사용합니다. 유형이 속한 모듈을 표시하려면</target>
        </trans-unit>
        <trans-unit id="4e410bbb7807143880e3d256c7f7aca9650462ab" translate="yes" xml:space="preserve">
          <source>Use this function when you want to perform an operation that requires the &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; of the item, such as &lt;a href=&quot;qabstractitemview#scrollTo&quot;&gt;QAbstractItemView::scrollTo&lt;/a&gt;(). &lt;a href=&quot;qstandarditem#index&quot;&gt;QStandardItem::index&lt;/a&gt;() is provided as convenience; it is equivalent to calling this function.</source>
          <target state="translated">&lt;a href=&quot;qabstractitemview#scrollTo&quot;&gt;QAbstractItemView :: scrollTo&lt;/a&gt; () 와 같이 항목 의 &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; 가 필요한 작업을 수행하려는 경우이 기능을 사용하십시오 . &lt;a href=&quot;qstandarditem#index&quot;&gt;QStandardItem :: index&lt;/a&gt; ()는 편의상 제공됩니다. 이 함수를 호출하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cb6b11aaf10dc8107aeeac2b8b6e94b38ed5f290" translate="yes" xml:space="preserve">
          <source>Use this function with care.</source>
          <target state="translated">이 기능은주의해서 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="851213818d642388f3d18609627f7be1539caf20" translate="yes" xml:space="preserve">
          <source>Use this macro as in the following examples.</source>
          <target state="translated">다음 예제와 같이이 매크로를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="755a4f7be73a0f3b957fef88ebe359f98294a9c4" translate="yes" xml:space="preserve">
          <source>Use this macro to replace the &lt;code&gt;emit&lt;/code&gt; keyword for emitting signals, when you want to use Qt Signals and Slots with a &lt;a href=&quot;signalsandslots#3rd-party-signals-and-slots&quot;&gt;3rd party signal/slot mechanism&lt;/a&gt;.</source>
          <target state="translated">Qt 신호 및 슬롯을 &lt;a href=&quot;signalsandslots#3rd-party-signals-and-slots&quot;&gt;타사 신호 / 슬롯 메커니즘&lt;/a&gt; 과 함께 사용하려는 경우이 매크로를 사용하여 신호 &lt;code&gt;emit&lt;/code&gt; 위한 emit 키워드 를 대체하십시오 .</target>
        </trans-unit>
        <trans-unit id="ec096813076be9a49b1ef7d069a9e815ee9bdf22" translate="yes" xml:space="preserve">
          <source>Use this macro to replace the &lt;code&gt;signals&lt;/code&gt; keyword in class declarations, when you want to use Qt Signals and Slots with a &lt;a href=&quot;signalsandslots#3rd-party-signals-and-slots&quot;&gt;3rd party signal/slot mechanism&lt;/a&gt;.</source>
          <target state="translated">Qt 신호 및 슬롯을 &lt;a href=&quot;signalsandslots#3rd-party-signals-and-slots&quot;&gt;타사 신호 / 슬롯 메커니즘&lt;/a&gt; 과 함께 사용하려는 경우 클래스 선언에서 &lt;code&gt;signals&lt;/code&gt; 키워드 를 바꾸려면이 매크로를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5e333dd26db6459473e81c0012d79d0982c9ab57" translate="yes" xml:space="preserve">
          <source>Use this macro to replace the &lt;code&gt;slots&lt;/code&gt; keyword in class declarations, when you want to use Qt Signals and Slots with a &lt;a href=&quot;signalsandslots#3rd-party-signals-and-slots&quot;&gt;3rd party signal/slot mechanism&lt;/a&gt;.</source>
          <target state="translated">Qt 신호 및 슬롯을 &lt;a href=&quot;signalsandslots#3rd-party-signals-and-slots&quot;&gt;타사 신호 / 슬롯 메커니즘&lt;/a&gt; 과 함께 사용하려는 경우 클래스 선언에서 &lt;code&gt;slots&lt;/code&gt; 키워드 를 바꾸려면이 매크로를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ffabc14d961f4459dad1ecd03d45ae8dac87225" translate="yes" xml:space="preserve">
          <source>Use this method after &lt;a href=&quot;qqmlcomponent#beginCreate&quot;&gt;beginCreate&lt;/a&gt; and before &lt;a href=&quot;qqmlcomponent#completeCreate&quot;&gt;completeCreate&lt;/a&gt; has been called. If a provided property does not exist, a warning is issued.</source>
          <target state="translated">&lt;a href=&quot;qqmlcomponent#beginCreate&quot;&gt;beginCreate&lt;/a&gt; 이후 와 &lt;a href=&quot;qqmlcomponent#completeCreate&quot;&gt;completeCreate&lt;/a&gt; 가 호출 되기 전에이 메서드를 사용합니다 . 제공된 속성이 없으면 경고가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="64dc0f773ccd9481c8ff7676efefc3fd1d1dce15" translate="yes" xml:space="preserve">
          <source>Use this method instead of setting the &lt;a href=&quot;qml-qtquick-textedit#text-prop&quot;&gt;text&lt;/a&gt; property to an empty string.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-textedit#text-prop&quot;&gt;text&lt;/a&gt; 속성을 빈 문자열 로 설정하는 대신이 방법을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ca2f4b97f98eb766b16f26d4a6c9a5cd758267d" translate="yes" xml:space="preserve">
          <source>Use this method instead of setting the &lt;a href=&quot;qml-qtquick-textinput#text-prop&quot;&gt;text&lt;/a&gt; property to an empty string.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-textinput#text-prop&quot;&gt;text&lt;/a&gt; 속성을 빈 문자열 로 설정하는 대신이 방법을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="bec357fa9492e97edf605a4c772489f9b10f52fd" translate="yes" xml:space="preserve">
          <source>Use this property to access the list model for the word candidate list.</source>
          <target state="translated">단어 후보 목록의 목록 모델에 액세스하려면이 특성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="081cca6be5c8881f908c4b813e9c639cd447d893" translate="yes" xml:space="preserve">
          <source>Use this property to block possibly unwanted</source>
          <target state="translated">이 속성을 사용하여 원치 않는 것을 차단하십시오</target>
        </trans-unit>
        <trans-unit id="8a133f3cca80cb8b53f0471d66047fb24fded270" translate="yes" xml:space="preserve">
          <source>Use this property to change the key size in the layout.</source>
          <target state="translated">레이아웃에서 키 크기를 변경하려면이 속성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ddb6a0495d55f5c71585d8a483bbb85eda191b7d" translate="yes" xml:space="preserve">
          <source>Use this property to check if the word candidate list should be visible in the UI.</source>
          <target state="translated">이 특성을 사용하여 단어 후보 목록이 UI에 표시되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="da21bf8865aec1c9911cf8872b5c936ea402d22c" translate="yes" xml:space="preserve">
          <source>Use this property to get or set the current input mode. The &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputengine#inputModes-prop&quot;&gt;InputEngine::inputModes&lt;/a&gt; property provides the list of valid input modes for the current input method and locale.</source>
          <target state="translated">현재 입력 모드를 가져 오거나 설정하려면이 속성을 사용하십시오. &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputengine#inputModes-prop&quot;&gt;InputEngine :: inputModes의&lt;/a&gt; 특성은 현재의 입력 방법 및 장소에 대한 유효한 입력 모드의 목록을 제공한다.</target>
        </trans-unit>
        <trans-unit id="323dc34192c827fbf4d1fff0efb0c3240bce9688" translate="yes" xml:space="preserve">
          <source>Use this property to get or set the current input mode. The &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputengine#inputModes-prop&quot;&gt;InputEngine::inputModes&lt;/a&gt; provides list of valid input modes for current input method and locale.</source>
          <target state="translated">현재 입력 모드를 가져 오거나 설정하려면이 속성을 사용하십시오. &lt;a href=&quot;qml-qtquick-virtualkeyboard-inputengine#inputModes-prop&quot;&gt;InputEngine :: inputModes는&lt;/a&gt; 전류 입력 방식과 로케일 유효한 입력 모드의 목록을 제공한다.</target>
        </trans-unit>
        <trans-unit id="e7612e478df1fd0c09b8b8d01513f268da455ca1" translate="yes" xml:space="preserve">
          <source>Use this property to set active the input method, or to monitor when the active input method changes.</source>
          <target state="translated">이 속성을 사용하여 활성 입력 방법을 설정하거나 활성 입력 방법이 변경되는시기를 모니터링하십시오.</target>
        </trans-unit>
        <trans-unit id="ec743443d13e0645b028258486de14747974cee8" translate="yes" xml:space="preserve">
          <source>Use this property to set the active input method, or to monitor when the active input method changes.</source>
          <target state="translated">활성 입력 방법을 설정하거나 활성 입력 방법이 변경되는시기를 모니터하려면이 특성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="17610a478dc36ce017f5e8910956ca62f983d6f3" translate="yes" xml:space="preserve">
          <source>Use this property to set the animating status, for example during UI transitioning states.</source>
          <target state="translated">UI 전환 상태와 같은 애니메이션 상태를 설정하려면이 속성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8cb7ab6790233755e8b8780a99d8787a31acc786" translate="yes" xml:space="preserve">
          <source>Use this signal if the event has parameters of unsupported data types. Otherwise, connect directly to the signal</source>
          <target state="translated">이벤트에 지원되지 않는 데이터 유형의 매개 변수가있는 경우이 신호를 사용하십시오. 그렇지 않으면 신호에 직접 연결하십시오</target>
        </trans-unit>
        <trans-unit id="4a7472113afa783d3e473bc18c6204ce0a3cf9b9" translate="yes" xml:space="preserve">
          <source>Use this static function like this:</source>
          <target state="translated">이 정적 함수를 다음과 같이 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c1b72414d64b1fd4dcc5ed340e708f0103ddf1a8" translate="yes" xml:space="preserve">
          <source>Use this status to provide an update or respond to the status change in some way. For example, you could:</source>
          <target state="translated">이 상태를 사용하여 업데이트를 제공하거나 어떤 방식으로 상태 변경에 응답하십시오. 예를 들어 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08ca42474f576121a99e75dbdff19bb6f62e3d07" translate="yes" xml:space="preserve">
          <source>Use this to set the &lt;code&gt;font.family&lt;/code&gt; property of a &lt;code&gt;Text&lt;/code&gt; item.</source>
          <target state="translated">이것을 사용 하여 &lt;code&gt;Text&lt;/code&gt; 항목 의 &lt;code&gt;font.family&lt;/code&gt; 속성 을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a9cae5ff0899038fc43150e5ba9570117524d68" translate="yes" xml:space="preserve">
          <source>Use uppercase letters for expressing digits 10 to 35 instead of lowercase.</source>
          <target state="translated">소문자 대신 10-35의 숫자를 표현하려면 대문자를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a1614a2c8f1fedc0701c876520e1d15d41b56f03" translate="yes" xml:space="preserve">
          <source>Use uppercase versions of base prefixes (&quot;0X&quot;, &quot;0B&quot;).</source>
          <target state="translated">기본 접두사 ( &quot;0X&quot;, &quot;0B&quot;)의 대문자 버전을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="72bb19d8bdd209de61b6a12176101055af224d7d" translate="yes" xml:space="preserve">
          <source>Use words as boundaries.</source>
          <target state="translated">단어를 경계로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="090fc43e989fc4fb5a929b3dad8f7c01c454db95" translate="yes" xml:space="preserve">
          <source>Used as a mask to specify that we are interesting in information about all relations</source>
          <target state="translated">모든 관계에 대한 정보가 흥미 롭다는 것을 나타내는 마스크로 사용</target>
        </trans-unit>
        <trans-unit id="28903374e4bcf9bac69d58a605e9a62042026d4b" translate="yes" xml:space="preserve">
          <source>Used as a parameter to &lt;a href=&quot;qsoundeffect#setLoopCount&quot;&gt;setLoopCount&lt;/a&gt;() for infinite looping</source>
          <target state="translated">무한 반복을 위해 &lt;a href=&quot;qsoundeffect#setLoopCount&quot;&gt;setLoopCount&lt;/a&gt; ()에 대한 매개 변수로 사용</target>
        </trans-unit>
        <trans-unit id="d392fb571aa1de21d0522d8b1bb67e374ef55571" translate="yes" xml:space="preserve">
          <source>Used as a unique type token in combination with QSGMaterial</source>
          <target state="translated">QSGMaterial과 함께 고유 한 유형 토큰으로 사용</target>
        </trans-unit>
        <trans-unit id="e8ae6fa6de496f4359028d786a9858d00c7747b9" translate="yes" xml:space="preserve">
          <source>Used as the alternate background color in item views with alternating row colors.</source>
          <target state="translated">행 색상이 번갈아 나타나는 항목보기에서 대체 배경색으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a54a6c44525fccb1eb002ce8afd800bfef480f84" translate="yes" xml:space="preserve">
          <source>Used as the alternate background color in views with alternating row colors (see &lt;a href=&quot;qabstractitemview#alternatingRowColors-prop&quot;&gt;QAbstractItemView::setAlternatingRowColors&lt;/a&gt;()).</source>
          <target state="translated">행 색이 번갈아 표시되는 뷰에서 대체 배경색으로 사용됩니다 ( &lt;a href=&quot;qabstractitemview#alternatingRowColors-prop&quot;&gt;QAbstractItemView :: setAlternatingRowColors&lt;/a&gt; () 참조).</target>
        </trans-unit>
        <trans-unit id="0fd216cbfd76a79bfde5fe59a2c6df2935263417" translate="yes" xml:space="preserve">
          <source>Used as the background color for &lt;a href=&quot;qtooltip&quot;&gt;QToolTip&lt;/a&gt; and &lt;a href=&quot;qwhatsthis&quot;&gt;QWhatsThis&lt;/a&gt;. Tool tips use the Inactive color group of &lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt;, because tool tips are not active windows.</source>
          <target state="translated">&lt;a href=&quot;qtooltip&quot;&gt;QToolTip&lt;/a&gt; 및 &lt;a href=&quot;qwhatsthis&quot;&gt;QWhatsThis의&lt;/a&gt; 배경색으로 사용됩니다 . 도구 설명 은 활성 창이 아니기 때문에 도구 설명 은 &lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt; 의 비활성 색상 그룹을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="667dc4726c31c692fe1cffe430496fc282ceb16a" translate="yes" xml:space="preserve">
          <source>Used as the background color for tooltips.</source>
          <target state="translated">툴팁의 배경색으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1fa7124d5948b968abdf786899e6c8aa9cc62deb" translate="yes" xml:space="preserve">
          <source>Used as the foreground color for &lt;a href=&quot;qtooltip&quot;&gt;QToolTip&lt;/a&gt; and &lt;a href=&quot;qwhatsthis&quot;&gt;QWhatsThis&lt;/a&gt;. Tool tips use the Inactive color group of &lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt;, because tool tips are not active windows.</source>
          <target state="translated">&lt;a href=&quot;qtooltip&quot;&gt;QToolTip&lt;/a&gt; 및 &lt;a href=&quot;qwhatsthis&quot;&gt;QWhatsThis&lt;/a&gt; 의 전경색으로 사용됩니다 . 도구 설명 은 활성 창이 아니기 때문에 도구 설명 은 &lt;a href=&quot;qpalette&quot;&gt;QPalette&lt;/a&gt; 의 비활성 색상 그룹을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="ee27c5639488af6ef8bc7eb2866cf35b684a1877" translate="yes" xml:space="preserve">
          <source>Used as the foreground color for tooltips.</source>
          <target state="translated">툴팁의 전경색으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2e5cf0a788a478f6b9c549cb963cc4b23fab7abe" translate="yes" xml:space="preserve">
          <source>Used as the placeholder color for various text input widgets. This enum value has been introduced in Qt 5.12</source>
          <target state="translated">다양한 텍스트 입력 위젯의 자리 표시 자 색상으로 사용됩니다. 이 열거 형 값은 Qt 5.12에서 도입되었습니다</target>
        </trans-unit>
        <trans-unit id="3866fcaf9c43d06a66cc46d51e1c2bc912710a81" translate="yes" xml:space="preserve">
          <source>Used by &lt;a href=&quot;qgeoroutingmanager#supportedFeatureTypes&quot;&gt;QGeoRoutingManager::supportedFeatureTypes&lt;/a&gt;() to indicate that no features will be taken into account when planning the route.</source>
          <target state="translated">에서 사용 &lt;a href=&quot;qgeoroutingmanager#supportedFeatureTypes&quot;&gt;QGeoRoutingManager :: supportedFeatureTypes&lt;/a&gt; () 경로를 계획 할 때 어떤 기능이 고려되지 않음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="46bdbdc4396992b8ab5e267617bab3f3e341f212" translate="yes" xml:space="preserve">
          <source>Used by QAbstractSocketEngine only, The last operation attempted has not finished yet (still in progress in the background).</source>
          <target state="translated">QAbstractSocketEngine 만 사용하며, 마지막으로 시도한 작업이 아직 완료되지 않았습니다 (아직 백그라운드에서 진행 중).</target>
        </trans-unit>
        <trans-unit id="dd02af16a5960b78e56f09535d8edcecbbe314ca" translate="yes" xml:space="preserve">
          <source>Used by QQuickPalette to provide different groups of colors by roles.</source>
          <target state="translated">QQuickPalette에서 역할별로 다른 색상 그룹을 제공하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a298acb38103ef6d2b8fbfcace53042603d33c2d" translate="yes" xml:space="preserve">
          <source>Used by item views to indicate if a horizontal branch should be drawn.</source>
          <target state="translated">가로보기를 그릴 지 여부를 표시하기 위해 항목보기에서 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b148a5832ea7f9bc8df9e4f5a698ed8d703e9041" translate="yes" xml:space="preserve">
          <source>Used by item views to indicate if a vertical line needs to be drawn (for siblings).</source>
          <target state="translated">항목보기에서 세로선을 그려야하는지 여부를 표시하는 데 사용됩니다 (형제 용).</target>
        </trans-unit>
        <trans-unit id="5c4c1e29270845560541ff0efe41e377e4153c7f" translate="yes" xml:space="preserve">
          <source>Used by item views to indicate if the tree branch is open.</source>
          <target state="translated">트리보기가 열려 있는지 표시하기 위해 항목보기에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4708230abd852f457f054e1fc88ed8b74c82dfda" translate="yes" xml:space="preserve">
          <source>Used by other components to obtain information about each item provided by the model. In many models, the combination of flags should include &lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt::ItemIsEnabled&lt;/a&gt; and &lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt::ItemIsSelectable&lt;/a&gt;.</source>
          <target state="translated">모델이 제공 한 각 항목에 대한 정보를 얻기 위해 다른 구성 요소에서 사용합니다. 많은 모델에서 플래그 조합에는 &lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt :: ItemIsEnabled&lt;/a&gt; 및 &lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt :: ItemIsSelectable&lt;/a&gt; 이 포함되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="935939862f3a96e36361b249540b49812cebc8a7" translate="yes" xml:space="preserve">
          <source>Used by the &lt;a href=&quot;qstatusbar#showMessage&quot;&gt;showMessage&lt;/a&gt;() and &lt;a href=&quot;qstatusbar#clearMessage&quot;&gt;clearMessage&lt;/a&gt;() functions.</source>
          <target state="translated">에 의해 사용 &lt;a href=&quot;qstatusbar#showMessage&quot;&gt;showMessage&lt;/a&gt; ()와 &lt;a href=&quot;qstatusbar#clearMessage&quot;&gt;clearMessage&lt;/a&gt; () 함수.</target>
        </trans-unit>
        <trans-unit id="4008277c7f506ed9652c3d0ae0889ef665b3d03c" translate="yes" xml:space="preserve">
          <source>Used by the system to set the</source>
          <target state="translated">시스템에서</target>
        </trans-unit>
        <trans-unit id="d3f1a0b7f2e3d628a2224b246ac50f4005d46e56" translate="yes" xml:space="preserve">
          <source>Used by visual elements to decide if the item should use antialiasing or not. In some cases items with antialiasing require more memory and are potentially slower to render (see &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer#antialiasing&quot;&gt;Antialiasing&lt;/a&gt; for more details).</source>
          <target state="translated">시각적 요소에서 항목이 앤티 앨리어싱을 사용해야하는지 여부를 결정하는 데 사용됩니다. 앤티 앨리어싱이있는 항목은 더 많은 메모리가 필요하고 렌더링 속도가 느릴 수 있습니다 ( 자세한 내용 은 &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer#antialiasing&quot;&gt;앤티 앨리어싱&lt;/a&gt; 참조).</target>
        </trans-unit>
        <trans-unit id="3c19917514accf2324dea6613a33f5390017cd16" translate="yes" xml:space="preserve">
          <source>Used currently for the &lt;code&gt;WebXML&lt;/code&gt; output format.</source>
          <target state="translated">현재 &lt;code&gt;WebXML&lt;/code&gt; 출력 형식에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7b7f1dab3f57b9de2421108c029e0fe78e81d4b1" translate="yes" xml:space="preserve">
          <source>Used for adjusting task parameters</source>
          <target state="translated">작업 매개 변수 조정에 사용</target>
        </trans-unit>
        <trans-unit id="adc605b310e60043eb4d9d6184a839cd99f2ccf4" translate="yes" xml:space="preserve">
          <source>Used for all rendered content in the scene graph</source>
          <target state="translated">장면 그래프에서 렌더링 된 모든 내용에 사용</target>
        </trans-unit>
        <trans-unit id="387286529d8b1d323043df1f09f24fad9a7c8c09" translate="yes" xml:space="preserve">
          <source>Used for pop-up widgets. Indicates that the most recent mouse press event should not be replayed when the pop-up widget closes. The flag is set by the widget's author and cleared by the Qt kernel every time the widget receives a new mouse event.</source>
          <target state="translated">팝업 위젯에 사용됩니다. 팝업 위젯이 닫힐 때 가장 최근의 마우스 누르기 이벤트가 재생되지 않아야 함을 나타냅니다. 플래그는 위젯 작성자가 설정하고 위젯이 새 마우스 이벤트를 수신 할 때마다 Qt 커널에 의해 지워집니다.</target>
        </trans-unit>
        <trans-unit id="c21e4d4cca75d95958e543471f9288a33abd118c" translate="yes" xml:space="preserve">
          <source>Used if &lt;a href=&quot;qabstract3dgraph#selectionMode-prop&quot;&gt;selectionMode&lt;/a&gt; has the &lt;code&gt;QAbstract3DGraph::SelectionItem&lt;/code&gt; flag set.</source>
          <target state="translated">&lt;a href=&quot;qabstract3dgraph#selectionMode-prop&quot;&gt;selectionMode&lt;/a&gt; 에 &lt;code&gt;QAbstract3DGraph::SelectionItem&lt;/code&gt; 플래그가 설정된 경우에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="3238cb3787f4cd42c13d5cfa779d878b89eb73a8" translate="yes" xml:space="preserve">
          <source>Used if &lt;a href=&quot;qabstract3dgraph#selectionMode-prop&quot;&gt;selectionMode&lt;/a&gt; has the &lt;code&gt;QAbstract3DGraph::SelectionRow&lt;/code&gt; or &lt;code&gt;QAbstract3DGraph::SelectionColumn&lt;/code&gt; flag set.</source>
          <target state="translated">&lt;a href=&quot;qabstract3dgraph#selectionMode-prop&quot;&gt;selectionMode&lt;/a&gt; 에 &lt;code&gt;QAbstract3DGraph::SelectionRow&lt;/code&gt; 또는 &lt;code&gt;QAbstract3DGraph::SelectionColumn&lt;/code&gt; 플래그 세트 가있는 경우에 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="95803e81385d8c10dcaa5c37e7bac9c7eaab1d5f" translate="yes" xml:space="preserve">
          <source>Used in &lt;a href=&quot;qsgnode#markDirty&quot;&gt;QSGNode::markDirty&lt;/a&gt;() to indicate how the scene graph has changed.</source>
          <target state="translated">장면 그래프가 어떻게 변경되었는지를 나타 내기 위해 &lt;a href=&quot;qsgnode#markDirty&quot;&gt;QSGNode :: markDirty&lt;/a&gt; () 에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="bf98dc8ed1d83486cc113b19ee7e160fbda44377" translate="yes" xml:space="preserve">
          <source>Used in combination with QBrush to specify a conical gradient brush</source>
          <target state="translated">QBrush와 함께 사용하여 원추형 그래디언트 브러시를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="c3a74f823fba351e67abf8295b99eabd55445b1a" translate="yes" xml:space="preserve">
          <source>Used in combination with QBrush to specify a linear gradient brush</source>
          <target state="translated">선형 그라디언트 브러시를 지정하기 위해 QBrush와 함께 사용</target>
        </trans-unit>
        <trans-unit id="18bb13fbe50c199fa7b793c6c3407e3d787b1e87" translate="yes" xml:space="preserve">
          <source>Used in combination with QBrush to specify a radial gradient brush</source>
          <target state="translated">방사형 그래디언트 브러시를 지정하기 위해 QBrush와 함께 사용</target>
        </trans-unit>
        <trans-unit id="d16964f7dfce89163dede4a14331e5f7b4c19b84" translate="yes" xml:space="preserve">
          <source>Used in combination with QBrush to specify gradient fills</source>
          <target state="translated">그라디언트 채우기를 지정하기 위해 QBrush와 함께 사용</target>
        </trans-unit>
        <trans-unit id="b74293c9501ffbfbd591c3f18354e17661e48f82" translate="yes" xml:space="preserve">
          <source>Used in conjunction with &lt;a href=&quot;qquickitem#itemChange&quot;&gt;QQuickItem::itemChange&lt;/a&gt;() to notify the item about certain types of changes.</source>
          <target state="translated">&lt;a href=&quot;qquickitem#itemChange&quot;&gt;QQuickItem :: itemChange&lt;/a&gt; () 와 함께 사용하여 특정 유형의 변경 사항을 항목에 알립니다.</target>
        </trans-unit>
        <trans-unit id="9bbf8b2edbd3ea9b72749bc84706f37df98aca69" translate="yes" xml:space="preserve">
          <source>Used mostly as the background color for text editor controls and item views. It is usually white or another light color.</source>
          <target state="translated">주로 텍스트 편집기 컨트롤 및 항목보기의 배경색으로 사용됩니다. 일반적으로 흰색 또는 다른 밝은 색상입니다.</target>
        </trans-unit>
        <trans-unit id="ec75cbf2402757a75bcdaa0d5d930eef2587dcb2" translate="yes" xml:space="preserve">
          <source>Used mostly as the background color for text editor controls and items views. It is usually white or another light color.</source>
          <target state="translated">주로 텍스트 편집기 컨트롤 및 항목보기의 배경색으로 사용됩니다. 일반적으로 흰색 또는 다른 밝은 색입니다.</target>
        </trans-unit>
        <trans-unit id="c89609524d0c51727cd5a23027693d0b7c04b8ce" translate="yes" xml:space="preserve">
          <source>Used mostly as the background color for text entry widgets, but can also be used for other painting - such as the background of combobox drop down lists and toolbar handles. It is usually white or another light color.</source>
          <target state="translated">주로 텍스트 입력 위젯의 배경색으로 사용되지만 콤보 박스 드롭 다운 목록 및 도구 모음 핸들의 배경과 같은 다른 페인팅에도 사용할 수 있습니다. 일반적으로 흰색 또는 다른 밝은 색입니다.</target>
        </trans-unit>
        <trans-unit id="fa269eee7b99315675bf0b1c7e5c899d721fd32b" translate="yes" xml:space="preserve">
          <source>Used to add new columns and items of data to table models and hierarchical models. Implementations must call &lt;a href=&quot;qabstractitemmodel#beginInsertColumns&quot;&gt;beginInsertColumns()&lt;/a&gt;</source>
          <target state="translated">테이블 모델 및 계층 모델에 새 열 및 데이터 항목을 추가하는 데 사용됩니다. 구현은 &lt;a href=&quot;qabstractitemmodel#beginInsertColumns&quot;&gt;beginInsertColumns ()를&lt;/a&gt; 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="72a6cef7479b53c8efdb6faad4a1d5a35afa6844" translate="yes" xml:space="preserve">
          <source>Used to add new rows and items of data to all types of model. Implementations must call &lt;a href=&quot;qabstractitemmodel#beginInsertRows&quot;&gt;beginInsertRows()&lt;/a&gt;</source>
          <target state="translated">모든 유형의 모델에 새 행과 데이터 항목을 추가하는 데 사용됩니다. 구현시 &lt;a href=&quot;qabstractitemmodel#beginInsertRows&quot;&gt;beginInsertRows ()를&lt;/a&gt; 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="b076394132a8d206353cd7fb7f3895bb71be6725" translate="yes" xml:space="preserve">
          <source>Used to associate custom data with blocks of text</source>
          <target state="translated">맞춤 데이터를 텍스트 블록과 연결하는 데 사용</target>
        </trans-unit>
        <trans-unit id="002f8ee969ab76c4ff72ca7ac4a906044df7c0d7" translate="yes" xml:space="preserve">
          <source>Used to calculate skinning transform matrices and set them on shaders</source>
          <target state="translated">스키닝 변환 매트릭스를 계산하고 셰이더에 설정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="92c2fd2df5c76c59e5c1071f489a0750dee4da5d" translate="yes" xml:space="preserve">
          <source>Used to calculate skinning transform matrices and set them on shaders. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">스키닝 변환 매트릭스를 계산하고 셰이더에 설정하는 데 사용됩니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="25b6cf38eae57e981263766d08de752092bd0e81" translate="yes" xml:space="preserve">
          <source>Used to calculate skinning transform matrices and set them on shaders. &lt;a href=&quot;qt3dcore-qarmature#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">스키닝 변환 매트릭스를 계산하고 셰이더에 설정하는 데 사용됩니다. &lt;a href=&quot;qt3dcore-qarmature#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="8c09e98136942827eb8d846907791651b6ded168" translate="yes" xml:space="preserve">
          <source>Used to change opacity of nodes</source>
          <target state="translated">노드의 불투명도를 변경하는 데 사용</target>
        </trans-unit>
        <trans-unit id="788a7f5011377ebb379a312224a3432b6f46e5cd" translate="yes" xml:space="preserve">
          <source>Used to create keyboard shortcuts</source>
          <target state="translated">키보드 단축키를 만드는 데 사용</target>
        </trans-unit>
        <trans-unit id="feb569d083c9c3c19977d92d4f2daa11f23deef8" translate="yes" xml:space="preserve">
          <source>Used to decide if the Rectangle should use antialiasing or not. &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer#antialiasing&quot;&gt;Antialiasing&lt;/a&gt; provides information on the performance implications of this property.</source>
          <target state="translated">Rectangle이 앤티 앨리어싱을 사용해야하는지 여부를 결정하는 데 사용됩니다. &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer#antialiasing&quot;&gt;앤티 앨리어싱&lt;/a&gt; 은이 속성의 성능 관련 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7d2469829f9ee6154b23827185fd869fc334d151" translate="yes" xml:space="preserve">
          <source>Used to decide if the Text should use antialiasing or not. Only Text with &lt;a href=&quot;qml-qtquick-text#renderType-prop&quot;&gt;renderType&lt;/a&gt; of Text.NativeRendering can disable antialiasing.</source>
          <target state="translated">텍스트가 앤티 앨리어싱을 사용해야하는지 여부를 결정하는 데 사용됩니다. &lt;a href=&quot;qml-qtquick-text#renderType-prop&quot;&gt;renderType&lt;/a&gt; 이 Text.NativeRendering 인 텍스트 만 앤티 앨리어싱을 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56523c3b5b57e2bf13a57e3ae1408914d9200d75" translate="yes" xml:space="preserve">
          <source>Used to define columns in a &lt;a href=&quot;qml-qtquick-controls-tableview&quot;&gt;TableView&lt;/a&gt; or in a &lt;a href=&quot;qml-qtquick-controls-treeview&quot;&gt;TreeView&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-controls-tableview&quot;&gt;TableView&lt;/a&gt; 또는 &lt;a href=&quot;qml-qtquick-controls-treeview&quot;&gt;TreeView&lt;/a&gt; 에서 열을 정의하는 데 사용됩니다 . &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5bc5d79db34ab577eaf0d71ea4442ac4b50ee0a4" translate="yes" xml:space="preserve">
          <source>Used to define columns in a TableView or in a TreeView</source>
          <target state="translated">TableView 또는 TreeView에서 열을 정의하는 데 사용</target>
        </trans-unit>
        <trans-unit id="5c122ec280991b18ee57fabe4c4e9d6a321bd8b4" translate="yes" xml:space="preserve">
          <source>Used to describe the parameters needed to draw a QGraphicsItem</source>
          <target state="translated">QGraphicsItem을 그리는 데 필요한 매개 변수를 설명하는 데 사용</target>
        </trans-unit>
        <trans-unit id="6f2499417215ffd4372d3a8edc22f95ddb577e3b" translate="yes" xml:space="preserve">
          <source>Used to display and edit data items from a model</source>
          <target state="translated">모델에서 데이터 항목을 표시하고 편집하는 데 사용</target>
        </trans-unit>
        <trans-unit id="202dc9806a1b9c3dfe3e1e86914961acbad88ceb" translate="yes" xml:space="preserve">
          <source>Used to draw the contents of SVG files onto paint devices</source>
          <target state="translated">SVG 파일의 내용을 페인트 장치에 그리는 데 사용</target>
        </trans-unit>
        <trans-unit id="7434a25169ac85bb894c68aafaedaa9f9fb9633b" translate="yes" xml:space="preserve">
          <source>Used to find places from one manager that match those from another. It represents a set of request parameters</source>
          <target state="translated">한 관리자에서 다른 관리자와 일치하는 장소를 찾는 데 사용됩니다. 요청 매개 변수 세트를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3fe93047af463f292b71b4ed6ae357d6724fb917" translate="yes" xml:space="preserve">
          <source>Used to generate fillable outlines for a given painter path</source>
          <target state="translated">지정된 페인터 경로에 채울 수있는 윤곽선을 생성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fa2b413a57587c3147dfb2af3877d27bed12fef5" translate="yes" xml:space="preserve">
          <source>Used to implement namespace support for a reader. Note that namespaces do not change the parsing behavior. They are only reported through the handler.</source>
          <target state="translated">리더에 대한 네임 스페이스 지원을 구현하는 데 사용됩니다. 네임 스페이스는 구문 분석 동작을 변경하지 않습니다. 핸들러를 통해서만보고됩니다.</target>
        </trans-unit>
        <trans-unit id="b908c354fa9481a5478522cdb221c28f778ccff2" translate="yes" xml:space="preserve">
          <source>Used to import and use the module's QML types. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">모듈의 QML 유형을 가져오고 사용하는 데 사용됩니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c9811dc2796ae19c485434eb0f365f384d36312b" translate="yes" xml:space="preserve">
          <source>Used to indicate a mini style Mac widget or button.</source>
          <target state="translated">미니 스타일 Mac 위젯 또는 버튼을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7ceda4d77d0db90439a52737213232b1e9d865f4" translate="yes" xml:space="preserve">
          <source>Used to indicate a preset has not been set, or the scene has been rotated freely.</source>
          <target state="translated">사전 설정이 설정되지 않았거나 장면이 자유롭게 회전했음을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="427bf781f178abce329a6ea774302b448f2feaff" translate="yes" xml:space="preserve">
          <source>Used to indicate a small style Mac widget or button.</source>
          <target state="translated">작은 스타일의 Mac 위젯 또는 버튼을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4e92844013e71bf783dc0ea8c63122bdb5278499" translate="yes" xml:space="preserve">
          <source>Used to indicate a tri-state checkbox.</source>
          <target state="translated">3 상태 확인란을 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="22ad7f1fec45a8bc2994329b36f68757d8d17a98" translate="yes" xml:space="preserve">
          <source>Used to indicate if a button is raised.</source>
          <target state="translated">버튼이 올라 왔는지 여부를 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="be9df12c1227097c8e39cdad95e5c6868a8e9935" translate="yes" xml:space="preserve">
          <source>Used to indicate if a down arrow should be visible on the widget.</source>
          <target state="translated">위젯에 아래쪽 화살표가 표시되는지 여부를 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7541e224a37f54e3a6104a55e417b41482430f38" translate="yes" xml:space="preserve">
          <source>Used to indicate if a widget is read-only.</source>
          <target state="translated">위젯이 읽기 전용인지 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2fd459ffb2fb0d863f124986f237a81091e17542" translate="yes" xml:space="preserve">
          <source>Used to indicate if a widget is selected.</source>
          <target state="translated">위젯이 선택되었는지 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fb0656f84fd12c51cccdd13ad08060be483b91d6" translate="yes" xml:space="preserve">
          <source>Used to indicate if an editor is opened on the widget.</source>
          <target state="translated">위젯이 편집기에서 열려 있는지 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="240f95b2af460750559ffd2c78a5432dacddd6de" translate="yes" xml:space="preserve">
          <source>Used to indicate if an item view branch has children.</source>
          <target state="translated">항목 뷰 분기에 자식이 있는지 여부를 나타내는 데 사용됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
