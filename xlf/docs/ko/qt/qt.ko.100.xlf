<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="8f9be24e050960d01bf72dca7b04e695ff1206f6" translate="yes" xml:space="preserve">
          <source>Asks the &lt;a href=&quot;qml-qtquick-particles-itemparticle&quot;&gt;ItemParticle&lt;/a&gt; to take over control of item positioning temporarily. It will follow the movement of a logical particle when one is available.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-particles-itemparticle&quot;&gt;ItemParticle&lt;/a&gt; 이 아이템 포지셔닝을 일시적으로 제어하도록 요청합니다 . 논리 입자가 사용 가능할 때 논리 입자의 움직임을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="18e27f0cb4e68409aaf923cd0204e0cd2a5d7cf0" translate="yes" xml:space="preserve">
          <source>Asks the session manager for permission to interact with the user. Returns true if interaction is permitted; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">세션 관리자에게 사용자와 상호 작용할 수있는 권한을 요청합니다. 상호 작용이 허용되면 true를 리턴합니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="ac6b0bbf61b969fc3b48d7387b5201f68104d2a4" translate="yes" xml:space="preserve">
          <source>Asks the window manager to not give focus to this top level window. This attribute has no effect on non-X11 platforms.</source>
          <target state="translated">창 관리자에게이 최상위 창에 초점을 두지 않도록 요청합니다. 이 속성은 X11 이외의 플랫폼에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2e97d821a923211f1a7fd1122dd8c979af132a13" translate="yes" xml:space="preserve">
          <source>AspectRatio  (surface width / surface height)</source>
          <target state="translated">AspectRatio (표면 너비 / 표면 높이)</target>
        </trans-unit>
        <trans-unit id="92200ee3f6b98bd4979778912a47cd3c07445782" translate="yes" xml:space="preserve">
          <source>AspectType</source>
          <target state="translated">AspectType</target>
        </trans-unit>
        <trans-unit id="5ff162a7839a73dff64f80c8862ffe44d4437e92" translate="yes" xml:space="preserve">
          <source>Aspects of the parsing behavior can be adapted using &lt;a href=&quot;qxmlsimplereader#setFeature&quot;&gt;setFeature&lt;/a&gt;() and &lt;a href=&quot;qxmlsimplereader#setProperty&quot;&gt;setProperty&lt;/a&gt;().</source>
          <target state="translated">구문 분석 동작의 양상은 &lt;a href=&quot;qxmlsimplereader#setFeature&quot;&gt;setFeature&lt;/a&gt; () 및 &lt;a href=&quot;qxmlsimplereader#setProperty&quot;&gt;setProperty&lt;/a&gt; ()를 사용하여 조정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4141add45a26459c4bd39909388482311f6fe29a" translate="yes" xml:space="preserve">
          <source>Assert</source>
          <target state="translated">Assert</target>
        </trans-unit>
        <trans-unit id="49bf55dc112eb3597726ba8ecf785a4fae4cbce0" translate="yes" xml:space="preserve">
          <source>Assertions</source>
          <target state="translated">Assertions</target>
        </trans-unit>
        <trans-unit id="0a0e8459185a7da2d3178427da1b3513e2713c82" translate="yes" xml:space="preserve">
          <source>Assertions make some statement about the text at the point where they occur in the regexp but they do not match any characters. In the following list &lt;b&gt;&lt;i&gt;E&lt;/i&gt;&lt;/b&gt; stands for any expression.</source>
          <target state="translated">어설 션은 정규 표현식에서 발생하지만 문자와 일치하지 않는 지점에서 텍스트에 대해 설명합니다. 다음 목록에서 &lt;b&gt;&lt;i&gt;E&lt;/i&gt;&lt;/b&gt; 는 식을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="4426afd90a77a35fb37ebd7110b9989cf7bed224" translate="yes" xml:space="preserve">
          <source>Asset</source>
          <target state="translated">Asset</target>
        </trans-unit>
        <trans-unit id="b93ea6bc7e684b128703f5ddb35f473f9ccc826b" translate="yes" xml:space="preserve">
          <source>Asset Examples</source>
          <target state="translated">자산 예</target>
        </trans-unit>
        <trans-unit id="c448cf7fe03487b8fc745327e1e39ca87845735b" translate="yes" xml:space="preserve">
          <source>Assets File System</source>
          <target state="translated">자산 파일 시스템</target>
        </trans-unit>
        <trans-unit id="2444928438f54ef4414cddff39193096c12629aa" translate="yes" xml:space="preserve">
          <source>Assign</source>
          <target state="translated">Assign</target>
        </trans-unit>
        <trans-unit id="986e599c10041bc8283187d0fc115ad5e6b627d9" translate="yes" xml:space="preserve">
          <source>Assign a &lt;a href=&quot;qml-qtquick-controls-menu&quot;&gt;Menu&lt;/a&gt; to this property to get a pull-down menu button.</source>
          <target state="translated">풀다운 메뉴 버튼을 얻으려면이 속성에 &lt;a href=&quot;qml-qtquick-controls-menu&quot;&gt;메뉴&lt;/a&gt; 를 할당하십시오 .</target>
        </trans-unit>
        <trans-unit id="657b3ebab2cb4a05a9ab4551475f9772cf932de0" translate="yes" xml:space="preserve">
          <source>Assign a topic to a QDoc comment - A comment could be a page, a property documentation, a class documentation, or any of the available &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#&quot;&gt;topic commands&lt;/a&gt;.</source>
          <target state="translated">QDoc 주석에 주제 지정-주석은 페이지, 특성 문서, 클래스 문서 또는 사용 가능한 &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#&quot;&gt;주제 명령 일&lt;/a&gt; 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1441632d366ed3ca636d23b1416a14537fec58fe" translate="yes" xml:space="preserve">
          <source>Assigning Values</source>
          <target state="translated">값 할당</target>
        </trans-unit>
        <trans-unit id="cf9105a23e3c1c0024455d955363ad4a3d5812f2" translate="yes" xml:space="preserve">
          <source>Assigning Values to Property Attributes</source>
          <target state="translated">속성 속성에 값 할당</target>
        </trans-unit>
        <trans-unit id="8f8fa75efce008484085eae902f298db122ee253" translate="yes" xml:space="preserve">
          <source>Assignment operator, assign</source>
          <target state="translated">할당 연산자, 할당</target>
        </trans-unit>
        <trans-unit id="57b7284b53bea6e095fae1d654500ee410048752" translate="yes" xml:space="preserve">
          <source>Assignment operator, assigns</source>
          <target state="translated">할당 연산자, 할당</target>
        </trans-unit>
        <trans-unit id="c60d0d4e8b3c326541217252d2e7f2cf31625cda" translate="yes" xml:space="preserve">
          <source>Assignment operator. Assigns the</source>
          <target state="translated">할당 연산자. 할당</target>
        </trans-unit>
        <trans-unit id="24c910a013b8c5906b1cd9ba41947a56e3a154e6" translate="yes" xml:space="preserve">
          <source>Assignment operator. This guarded pointer will now point to the same object that</source>
          <target state="translated">할당 연산자. 이 보호 포인터는 이제 동일한 객체를 가리 킵니다.</target>
        </trans-unit>
        <trans-unit id="07964378a8d1220311421c67d166f9a93a054a08" translate="yes" xml:space="preserve">
          <source>Assignment. Makes a copy of</source>
          <target state="translated">할당. 의 사본을 만듭니다</target>
        </trans-unit>
        <trans-unit id="0376e8f00ecf6d9a805c3ee4d46f35c9cc4bbbdb" translate="yes" xml:space="preserve">
          <source>AssignmentInfo Struct</source>
          <target state="translated">과제 정보 구조</target>
        </trans-unit>
        <trans-unit id="f3648d2f302803cec9a6936b971744757ba50945" translate="yes" xml:space="preserve">
          <source>AssignmentInfo::context</source>
          <target state="translated">AssignmentInfo::context</target>
        </trans-unit>
        <trans-unit id="589ed4a8be86536dbd1aeddad0b32db87ad648e8" translate="yes" xml:space="preserve">
          <source>AssignmentInfo::dest</source>
          <target state="translated">AssignmentInfo::dest</target>
        </trans-unit>
        <trans-unit id="f817060420efee2ff9d1a76c4643994044b01a37" translate="yes" xml:space="preserve">
          <source>AssignmentInfo::expr</source>
          <target state="translated">AssignmentInfo::expr</target>
        </trans-unit>
        <trans-unit id="9f2a0cc5f167ef3113974a9fe34af5506e805041" translate="yes" xml:space="preserve">
          <source>Assigns</source>
          <target state="translated">Assigns</target>
        </trans-unit>
        <trans-unit id="f92e5b99ea2de76eb2c44df249cb0bef49dabc28" translate="yes" xml:space="preserve">
          <source>Assigns a Windows</source>
          <target state="translated">윈도우 할당</target>
        </trans-unit>
        <trans-unit id="d45bdd4bad97015089eba0cf4ce24245724db744" translate="yes" xml:space="preserve">
          <source>Assigns a copy of</source>
          <target state="translated">의 사본을 할당합니다</target>
        </trans-unit>
        <trans-unit id="214f273d64bf82622948c8930cf9f71cf5a1dba2" translate="yes" xml:space="preserve">
          <source>Assigns a shallow copy of</source>
          <target state="translated">얕은 사본을 할당합니다</target>
        </trans-unit>
        <trans-unit id="fd31892264d57d78eaa612788450f11e1d014de2" translate="yes" xml:space="preserve">
          <source>Assigns a shallow copy of the given</source>
          <target state="translated">주어진 것의 얕은 사본을 할당합니다</target>
        </trans-unit>
        <trans-unit id="40c0762b3589ba836834cf365ef423f9c0d675c3" translate="yes" xml:space="preserve">
          <source>Assigns an</source>
          <target state="translated">할당</target>
        </trans-unit>
        <trans-unit id="85e617352338e9202319f3b82bca196a8c8fc151" translate="yes" xml:space="preserve">
          <source>Assigns another host</source>
          <target state="translated">다른 호스트를 할당</target>
        </trans-unit>
        <trans-unit id="4fa69103ae8cb16e772a9ff85090bbdb5ed3666a" translate="yes" xml:space="preserve">
          <source>Assigns character</source>
          <target state="translated">캐릭터를 할당</target>
        </trans-unit>
        <trans-unit id="f47bdc31d76b5266afbc0c2a14419aab86ba6b9f" translate="yes" xml:space="preserve">
          <source>Assigns picture</source>
          <target state="translated">사진을 할당합니다</target>
        </trans-unit>
        <trans-unit id="f6feee028389ad98aad9d6da8ed93c2722b81c26" translate="yes" xml:space="preserve">
          <source>Assigns the</source>
          <target state="translated">할당</target>
        </trans-unit>
        <trans-unit id="72cf90175289fab0fa061f23cecdbbbc413dd29f" translate="yes" xml:space="preserve">
          <source>Assigns the &lt;a href=&quot;qsslpresharedkeyauthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; object</source>
          <target state="translated">&lt;a href=&quot;qsslpresharedkeyauthenticator&quot;&gt;QSslPreSharedKeyAuthenticator&lt;/a&gt; 객체를 할당 합니다</target>
        </trans-unit>
        <trans-unit id="801a35ae06553e61d456afde92c73023c075b5dc" translate="yes" xml:space="preserve">
          <source>Assigns the Latin-1 string</source>
          <target state="translated">라틴 -1 문자열을 할당합니다</target>
        </trans-unit>
        <trans-unit id="1dd05365443bf8bb053b9389faf63030fc3336bb" translate="yes" xml:space="preserve">
          <source>Assigns the content (text and format) of the</source>
          <target state="translated">의 내용 (텍스트 및 형식)을 할당합니다</target>
        </trans-unit>
        <trans-unit id="fb89c254fd932c2786b45f91de6af5c5be0c03a8" translate="yes" xml:space="preserve">
          <source>Assigns the contents of</source>
          <target state="translated">의 내용을 할당</target>
        </trans-unit>
        <trans-unit id="d9d8f0b8c6f445b2fcbb7b3df078810009344b91" translate="yes" xml:space="preserve">
          <source>Assigns the data of</source>
          <target state="translated">의 데이터를 할당합니다</target>
        </trans-unit>
        <trans-unit id="873c8b9f541f0b268a383c6780595ff1af2d75f7" translate="yes" xml:space="preserve">
          <source>Assigns the data of the</source>
          <target state="translated">의 데이터를 할당합니다</target>
        </trans-unit>
        <trans-unit id="f34d479f5d050bccc28029787d65108a47741756" translate="yes" xml:space="preserve">
          <source>Assigns the font info in</source>
          <target state="translated">글꼴 정보를</target>
        </trans-unit>
        <trans-unit id="c05921b1ee7b5acef8bad7c36beb484e359bee74" translate="yes" xml:space="preserve">
          <source>Assigns the font metrics</source>
          <target state="translated">글꼴 메트릭을 할당합니다</target>
        </trans-unit>
        <trans-unit id="2d2e1388da966c4ba36a294a2b5d6bed24b56ef8" translate="yes" xml:space="preserve">
          <source>Assigns the given</source>
          <target state="translated">주어진 할당</target>
        </trans-unit>
        <trans-unit id="5d8210ba4c95c21960d58255001b0d0413154275" translate="yes" xml:space="preserve">
          <source>Assigns the host address</source>
          <target state="translated">호스트 주소를 할당합니다</target>
        </trans-unit>
        <trans-unit id="6aeb06a0e9c4be45c78e41a37b5477ce3da973c6" translate="yes" xml:space="preserve">
          <source>Assigns the iterator</source>
          <target state="translated">반복자를 할당합니다</target>
        </trans-unit>
        <trans-unit id="275941fc7784806d44b9d804a7c339cd785c4ea2" translate="yes" xml:space="preserve">
          <source>Assigns the match result</source>
          <target state="translated">경기 결과를 할당</target>
        </trans-unit>
        <trans-unit id="46071a015167b49375a721f0c938c2362334270a" translate="yes" xml:space="preserve">
          <source>Assigns the message</source>
          <target state="translated">메시지를 할당</target>
        </trans-unit>
        <trans-unit id="8a9a8b84d8009bad8e3bf16c836adc4fd08f1220" translate="yes" xml:space="preserve">
          <source>Assigns the object,</source>
          <target state="translated">객체를 할당하고</target>
        </trans-unit>
        <trans-unit id="34b815d741916882b0098831bd58278b18a74427" translate="yes" xml:space="preserve">
          <source>Assigns the previous value to the managed variable. This is the value at construction time, or at the last call to &lt;a href=&quot;qscopedvaluerollback#commit&quot;&gt;commit&lt;/a&gt;()</source>
          <target state="translated">이전 값을 관리 변수에 지정합니다. 이는 시공시의 값, 또는 최근 통화로하는 &lt;a href=&quot;qscopedvaluerollback#commit&quot;&gt;투입&lt;/a&gt; ) (</target>
        </trans-unit>
        <trans-unit id="5355328eb248f9644497135f1a55f68091ffcff0" translate="yes" xml:space="preserve">
          <source>Assigns the regular expression</source>
          <target state="translated">정규식을 할당합니다</target>
        </trans-unit>
        <trans-unit id="0efa8f59037690c88f785f377faf17baaed1be9a" translate="yes" xml:space="preserve">
          <source>Assigns the special address</source>
          <target state="translated">특별한 주소를 할당</target>
        </trans-unit>
        <trans-unit id="3e58888169c81cf4e97039e4d8f36831d937914b" translate="yes" xml:space="preserve">
          <source>Assigns the specified</source>
          <target state="translated">지정된 것을 할당</target>
        </trans-unit>
        <trans-unit id="40ec6bef35a847b998e9a2da7a21369f71c7f350" translate="yes" xml:space="preserve">
          <source>Assigns the value</source>
          <target state="translated">값을 할당합니다</target>
        </trans-unit>
        <trans-unit id="e77da1cd9a8cbaa3264bfe32aae6f6044b12da48" translate="yes" xml:space="preserve">
          <source>Assigns the value of</source>
          <target state="translated">의 값을 할당합니다</target>
        </trans-unit>
        <trans-unit id="8a33a76b3af75c9e791ff73e77cd3cf43fae27e7" translate="yes" xml:space="preserve">
          <source>Assigns the value of the given</source>
          <target state="translated">주어진 값을 할당</target>
        </trans-unit>
        <trans-unit id="6e076e5f7162ea14899f4ad786f6629ab5297f04" translate="yes" xml:space="preserve">
          <source>Assigns the value of the given Qt</source>
          <target state="translated">주어진 Qt의 값을 할당</target>
        </trans-unit>
        <trans-unit id="e8de2d3f3964cb86c85419b37fdfa623d80a68b5" translate="yes" xml:space="preserve">
          <source>Assigns the value of the network proxy</source>
          <target state="translated">네트워크 프록시의 값을 할당합니다</target>
        </trans-unit>
        <trans-unit id="5af7cc5287cd40cf758ee7c3298d4248d5c63741" translate="yes" xml:space="preserve">
          <source>Assigns the value of the variant</source>
          <target state="translated">변형의 값을 할당합니다</target>
        </trans-unit>
        <trans-unit id="d3f618d95957c5fd7d77847a9ebd87c45f7418de" translate="yes" xml:space="preserve">
          <source>Assigns the value stored in</source>
          <target state="translated">저장된 값을 할당합니다</target>
        </trans-unit>
        <trans-unit id="75ba477098456f34d9a243599bf4849341324961" translate="yes" xml:space="preserve">
          <source>Assigns the values from</source>
          <target state="translated">에서 값을 할당합니다</target>
        </trans-unit>
        <trans-unit id="1de97a6659207c6ba2a1461b47d5df8e6d514fb7" translate="yes" xml:space="preserve">
          <source>Assigns the values of</source>
          <target state="translated">의 값을 할당합니다</target>
        </trans-unit>
        <trans-unit id="6f6ddc5f0c27beba11482455b71b8ff4072f6d2b" translate="yes" xml:space="preserve">
          <source>Assigns the version and profile of</source>
          <target state="translated">의 버전과 프로필을 할당합니다</target>
        </trans-unit>
        <trans-unit id="be2ed2bbffb380de90fe8da01c8a3976377908bf" translate="yes" xml:space="preserve">
          <source>Assigns the weight</source>
          <target state="translated">무게를 할당</target>
        </trans-unit>
        <trans-unit id="00d9b32906c7d1516b9836bdd3a8e3ae699fe3c4" translate="yes" xml:space="preserve">
          <source>Assigns this &lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; instance to</source>
          <target state="translated">이 &lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; 인스턴스를</target>
        </trans-unit>
        <trans-unit id="422196ccf47e7f549778766e36852518c23c436e" translate="yes" xml:space="preserve">
          <source>Assigns this NDEF record to</source>
          <target state="translated">이 NDEF 레코드를</target>
        </trans-unit>
        <trans-unit id="83c5bb632378d9c2fcefdedcba306f845e8efe44" translate="yes" xml:space="preserve">
          <source>Associated Qt3D Parameter name</source>
          <target state="translated">연관된 Qt3D 파라미터 이름</target>
        </trans-unit>
        <trans-unit id="66c50dde1a468384df54a6cda924049d4d67b444" translate="yes" xml:space="preserve">
          <source>Associates the given</source>
          <target state="translated">주어진 것을 연결합니다</target>
        </trans-unit>
        <trans-unit id="fe9c8d18acae9577e029d79bdb190db244e987ff" translate="yes" xml:space="preserve">
          <source>Associates the popup menu</source>
          <target state="translated">팝업 메뉴를 연결합니다</target>
        </trans-unit>
        <trans-unit id="9b3f4788cf3d3e7c514a41891b9b613c5b1e8115" translate="yes" xml:space="preserve">
          <source>Associates this window with the specified Vulkan</source>
          <target state="translated">이 창을 지정된 Vulkan과 연관시킵니다.</target>
        </trans-unit>
        <trans-unit id="cd2a119710b8aac523a3a56655ddf1934612958a" translate="yes" xml:space="preserve">
          <source>Assume that you wanted to model a set of mutually exclusive properties of a car in a single state machine. Let's say the properties we are interested in are Clean vs Dirty, and Moving vs Not moving. It would take four mutually exclusive states and eight transitions to be able to represent and freely move between all possible combinations.</source>
          <target state="translated">단일 상태 머신에서 자동차의 상호 배타적 인 특성 세트를 모델링하려고한다고 가정하십시오. 우리가 관심있는 속성은 Clean vs Dirty, Moving vs Not moving라고 가정 해 봅시다. 가능한 모든 조합을 표현하고 자유롭게 이동할 수 있으려면 4 개의 상호 배타적 인 상태와 8 개의 전환이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="0afa1db70d14b16989ef6ff8bb02424bc2d3db32" translate="yes" xml:space="preserve">
          <source>Assume that you wanted to model a set of mutually exclusive properties of a car in a single state machine. Let's say the properties we are interested in are Clean vs Dirty, and Moving vs Not moving. It would take four mutually exclusive states and eight transitions to represent the states and freely move between all possible combinations as shown in the following state chart.</source>
          <target state="translated">단일 상태 머신에서 자동차의 상호 배타적 특성 세트를 모델링하려고한다고 가정하십시오. 우리가 관심있는 속성은 Clean vs Dirty, Moving vs Not moving라고 가정 해 봅시다. 상태를 나타내고 다음 상태 차트에 표시된대로 가능한 모든 조합간에 자유롭게 이동하려면 4 개의 상호 배타적 상태와 8 개의 전환이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="c90ff00b401683da81cdb675dce198cdea833664" translate="yes" xml:space="preserve">
          <source>Assume the existence (and prior registration into the &quot;Qt.example 1.0&quot; namespace) of the following C++ type:</source>
          <target state="translated">다음 C ++ 유형의 존재 (및 &quot;Qt.example 1.0&quot;네임 스페이스에 사전 등록)를 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="2f9904dd4cef57f901996862e1f031d1d41fac12" translate="yes" xml:space="preserve">
          <source>Assume the screen has a resolution of 96 DPI rather than using the OS-provided resolution. This will cause font rendering to be consistent in pixels-per-point across devices rather than defining 1 point as 1/72 inch.</source>
          <target state="translated">화면에 OS 제공 해상도를 사용하지 않고 96 DPI의 해상도가 있다고 가정하십시오. 이로 인해 1 포인트를 1/72 인치로 정의하지 않고 디바이스에서 포인트 당 픽셀 단위로 글꼴 렌더링이 일관되게됩니다.</target>
        </trans-unit>
        <trans-unit id="0fd4906cbc89602fa42eafbae11f6af6a69ccf24" translate="yes" xml:space="preserve">
          <source>Assume we wanted the user to be able to quit the application at any time by clicking a Quit button. In order to achieve this, we need to create a final state and make it the target of a transition associated with the Quit button's</source>
          <target state="translated">사용자가 종료 버튼을 클릭하여 언제든지 응용 프로그램을 종료 할 수 있기를 원한다고 가정합니다. 이를 위해서는 최종 상태를 생성하고 Quit 버튼과 관련된 전환 대상으로 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="851c2f1306ef9513fb28142d28a415cadad31fae" translate="yes" xml:space="preserve">
          <source>Assume we wanted the user to be able to quit the application at any time by clicking a Quit button. In order to achieve this, we need to create a final state and make it the target of a transition associated with the Quit button's &lt;a href=&quot;qabstractbutton#clicked&quot;&gt;clicked()&lt;/a&gt; signal. We could add a transition from each of &lt;code&gt;s1&lt;/code&gt;, &lt;code&gt;s2&lt;/code&gt; and &lt;code&gt;s3&lt;/code&gt;; however, this seems redundant, and one would also have to remember to add such a transition from every new state that is added in the future.</source>
          <target state="translated">사용자가 종료 버튼을 클릭하여 언제든지 응용 프로그램을 종료 할 수 있기를 원한다고 가정합니다. 이를 위해서는 최종 상태를 만들어 Quit 버튼의 &lt;a href=&quot;qabstractbutton#clicked&quot;&gt;clicked ()&lt;/a&gt; 신호 와 관련된 전환 대상으로 만들어야합니다 . &lt;code&gt;s1&lt;/code&gt; , &lt;code&gt;s2&lt;/code&gt; 및 &lt;code&gt;s3&lt;/code&gt; 각각에서 전환을 추가 할 수 있습니다 . 그러나 이것은 중복되는 것처럼 보이고 미래에 추가되는 모든 새로운 상태에서 그러한 전환을 추가해야한다는 것을 기억해야합니다.</target>
        </trans-unit>
        <trans-unit id="7916f28ff08f4e480a5afca8d1bd7571dfa918ce" translate="yes" xml:space="preserve">
          <source>Assumes the command is to be to sent back in reply to itself to the backend node.</source>
          <target state="translated">명령이 자신에게 응답하여 백엔드 노드로 다시 보내 져야한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="4ff2031d476ca68024442f42c24527548b5dc499" translate="yes" xml:space="preserve">
          <source>Assuming a Qt3DCore::Node needs to override the PropertyTrackingMode on two properties (enabled and displacement), the value should be set as shown below.</source>
          <target state="translated">Qt3DCore :: Node가 두 속성 (활성화 및 변위)에서 PropertyTrackingMode를 재정의해야한다고 가정하면 값은 아래와 같이 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="7b610154aa909ee49cffb67df60a04f72dbae7fa" translate="yes" xml:space="preserve">
          <source>Assuming a test has the following data:</source>
          <target state="translated">테스트에 다음과 같은 데이터가 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="ff43a68f140b51cad42d7e0c95e2d0bab6c68162" translate="yes" xml:space="preserve">
          <source>Assuming that red channel value 1.0 is fully red (0.0 having no red at all), this effect considers pixel component value 0.5 to cause no displacement at all. Values above 0.5 shift pixels to the left, values below 0.5 do the shift to the right. In a similar way, green channel values above 0.5 displace the pixels upwards, and values below 0.5 shift the pixels downwards. The actual amount of displacement in pixels depends on the &lt;a href=&quot;qml-qtgraphicaleffects-displace#displacement-prop&quot;&gt;displacement&lt;/a&gt; property.</source>
          <target state="translated">적색 채널 값 1.0이 완전히 적색이라고 가정하면 (0.0은 전혀 적색이 없음)이 효과는 픽셀 성분 값 0.5를 고려하여 변위가 전혀 발생하지 않도록합니다. 0.5보다 큰 값은 픽셀을 왼쪽으로 이동하고 0.5보다 작은 값은 오른쪽으로 이동합니다. 비슷한 방식으로 0.5보다 큰 녹색 채널 값은 픽셀을 위쪽으로 이동시키고 0.5 미만의 값은 픽셀을 아래쪽으로 이동시킵니다. 픽셀 단위의 실제 변위량은 &lt;a href=&quot;qml-qtgraphicaleffects-displace#displacement-prop&quot;&gt;변위&lt;/a&gt; 특성 에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="e1bf7fc148321e0e237a7bfa56cd2b15579f2f5b" translate="yes" xml:space="preserve">
          <source>Assuming that the &lt;code&gt;a&lt;/code&gt; variable does not exist in the scope chain, the following code is illegal in QML:</source>
          <target state="translated">한다고 가정 변수가 범위 체인에 존재하지 않는, 다음 코드는 QML에서 불법입니다 : &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2def80cafe7c0980ddfcdfba4b78ad5447b0122d" translate="yes" xml:space="preserve">
          <source>Assuming the z values of both items are the same, this will cause</source>
          <target state="translated">두 항목의 z 값이 같다고 가정하면</target>
        </trans-unit>
        <trans-unit id="f329190d0fd15344dac730aabc63c032720e1284" translate="yes" xml:space="preserve">
          <source>Asterisk</source>
          <target state="translated">Asterisk</target>
        </trans-unit>
        <trans-unit id="3d7fac7964f752248f02c5aa61c85fd417dcfbcf" translate="yes" xml:space="preserve">
          <source>Asynchronous</source>
          <target state="translated">Asynchronous</target>
        </trans-unit>
        <trans-unit id="e75be76667be17954eee5355523c5fda27d028e3" translate="yes" xml:space="preserve">
          <source>Asynchronous (default) The creation occurs asynchronously, assuming a QQmlIncubatorController is set on the &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;.</source>
          <target state="translated">비동기 (기본값)은 생성 된 설정 QQmlIncubatorController 가정 비동기 발생 &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c1dd52824822a5030bc87301e39aee35067fc4b2" translate="yes" xml:space="preserve">
          <source>Asynchronous Image Loading</source>
          <target state="translated">비동기 이미지 로딩</target>
        </trans-unit>
        <trans-unit id="762cc12f68657e49265d45e6f2f7caab006a5bc3" translate="yes" xml:space="preserve">
          <source>Asynchronous Interface</source>
          <target state="translated">비동기 인터페이스</target>
        </trans-unit>
        <trans-unit id="8a319250e7a62a6449653025f2ab2f88895ac77d" translate="yes" xml:space="preserve">
          <source>Asynchronous Loading</source>
          <target state="translated">비동기식 로딩</target>
        </trans-unit>
        <trans-unit id="bc275ca923ec281351bd9fe315bfe5269d968893" translate="yes" xml:space="preserve">
          <source>Asynchronous Slots</source>
          <target state="translated">비동기식 슬롯</target>
        </trans-unit>
        <trans-unit id="dac38cf1bc068ff6173e6dd303016d2512deaa69" translate="yes" xml:space="preserve">
          <source>Asynchronous image loading for providers of type other than &lt;a href=&quot;qqmlimageproviderbase#ImageType-enum&quot;&gt;ImageResponse&lt;/a&gt; are executed on a single thread per engine basis. That means that a slow image provider will block the loading of any other request. To avoid that we suggest using &lt;a href=&quot;qquickasyncimageprovider&quot;&gt;QQuickAsyncImageProvider&lt;/a&gt; and implement threading on the provider side via a &lt;code&gt;QThreadPool&lt;/code&gt; or similar. See the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-imageresponseprovider-example.html#&quot;&gt;Image Response Provider Example&lt;/a&gt; for a complete implementation.</source>
          <target state="translated">&lt;a href=&quot;qqmlimageproviderbase#ImageType-enum&quot;&gt;ImageResponse&lt;/a&gt; 이외의 유형의 공급자에 대한 비동기 이미지로드 는 엔진별로 단일 스레드로 실행됩니다. 즉, 느린 이미지 공급자는 다른 요청의로드를 차단합니다. 이를 피하기 위해 &lt;a href=&quot;qquickasyncimageprovider&quot;&gt;QQuickAsyncImageProvider를&lt;/a&gt; 사용 하고 &lt;code&gt;QThreadPool&lt;/code&gt; 또는 이와 유사한 것을 통해 공급자 측에서 스레딩을 구현 하는 것이 좋습니다 . 완전한 구현에 대해서는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-imageresponseprovider-example.html#&quot;&gt;이미지 응답 제공자 예제&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e95084984f1824fd6686f2858d97d77b54112d4d" translate="yes" xml:space="preserve">
          <source>Asynchronous incubators are controlled by a &lt;a href=&quot;qqmlincubationcontroller&quot;&gt;QQmlIncubationController&lt;/a&gt; that is set on the &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;, which lets the engine know when the application is idle and incubating objects should be processed. If an incubation controller is not set on the &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;, &lt;a href=&quot;qqmlincubator&quot;&gt;QQmlIncubator&lt;/a&gt; creates objects synchronously regardless of the specified &lt;a href=&quot;qqmlincubator#IncubationMode-enum&quot;&gt;IncubationMode&lt;/a&gt;.</source>
          <target state="translated">비동기 인큐베이터는에 의해 제어되는 &lt;a href=&quot;qqmlincubationcontroller&quot;&gt;QQmlIncubationController&lt;/a&gt; 온 설정 &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; 응용 프로그램이 유휴 상태와 배양 개체를 처리해야 할 때 엔진 노하우를 할 수 있습니다. 인큐베이션 컨트롤러가 설정되어 있지 않은 경우 &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; , &lt;a href=&quot;qqmlincubator&quot;&gt;QQmlIncubator는&lt;/a&gt; 동기 관계없이 특정의 객체를 생성 &lt;a href=&quot;qqmlincubator#IncubationMode-enum&quot;&gt;IncubationMode&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d7e47f6482fe4592a09b00832e19487c245576e5" translate="yes" xml:space="preserve">
          <source>Asynchronous loading for image providers that provide &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; is only supported in platforms that have the ThreadedPixmaps feature, in platforms where pixmaps can only be created in the main thread (i.e. ThreadedPixmaps is not supported) if &lt;a href=&quot;qml-qtquick-image#asynchronous-prop&quot;&gt;asynchronous&lt;/a&gt; is set to &lt;code&gt;true&lt;/code&gt;, the value is ignored and the image is loaded synchronously.</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; 을 제공하는 이미지 제공자에 대한 비동기 로딩 은 ThreadedPixmaps 기능이있는 플랫폼에서만 지원됩니다. &lt;a href=&quot;qml-qtquick-image#asynchronous-prop&quot;&gt;비동기식&lt;/a&gt; 이 &lt;code&gt;true&lt;/code&gt; 로 설정된 경우 픽스맵이 기본 스레드에서만 생성 될 수있는 플랫폼 (예 : ThreadedPixmaps가 지원되지 않는 플랫폼) 에서는 값이 무시되고 값이 무시됩니다. 이미지가 동 기적으로로드됩니다.</target>
        </trans-unit>
        <trans-unit id="8815a86ce7e19dae036dc727fc0eb17010cfec26" translate="yes" xml:space="preserve">
          <source>Asynchronous method to retrieve the page's content as HTML, enclosed in HTML and BODY tags. Upon successful completion,</source>
          <target state="translated">HTML 및 BODY 태그로 묶여 페이지 컨텐츠를 HTML로 검색하는 비동기 메소드입니다. 성공적으로 완료되면</target>
        </trans-unit>
        <trans-unit id="fed3108d6db768b79d5656a5db689618d8813893" translate="yes" xml:space="preserve">
          <source>Asynchronous method to retrieve the page's content converted to plain text, completely stripped of all HTML formatting. Upon successful completion,</source>
          <target state="translated">모든 HTML 형식이 완전히 제거 된 일반 텍스트로 변환 된 페이지 컨텐츠를 검색하는 비동기 메소드입니다. 성공적으로 완료되면</target>
        </trans-unit>
        <trans-unit id="ccfb9e9f12588a472c278960afe69aa2f3e59056" translate="yes" xml:space="preserve">
          <source>Asynchronous slots are marked by the keyword &lt;a href=&quot;qdbusabstractadaptor#Q_NOREPLY&quot;&gt;Q_NOREPLY&lt;/a&gt; in the method signature, before the &lt;code&gt;void&lt;/code&gt; return type and the slot name. The &lt;code&gt;quit()&lt;/code&gt; slot in the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdbus-complexpingpong-example.html#&quot;&gt;D-Bus Complex Ping Pong Example&lt;/a&gt; is an example of this.</source>
          <target state="translated">&lt;code&gt;void&lt;/code&gt; 슬롯 은 void 서명 유형과 슬롯 이름 앞에 메소드 서명에서 키워드 &lt;a href=&quot;qdbusabstractadaptor#Q_NOREPLY&quot;&gt;Q_NOREPLY&lt;/a&gt; 로 표시됩니다 . &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdbus-complexpingpong-example.html#&quot;&gt;D- 버스 복합 탁구 예제&lt;/a&gt; 의 &lt;code&gt;quit()&lt;/code&gt; 슬롯 이 이에 대한 예입니다.</target>
        </trans-unit>
        <trans-unit id="ad1320a3c8bebbef00d6eebcda7cf893e0add4b9" translate="yes" xml:space="preserve">
          <source>Asynchronous slots are those that do not normally return any reply to the caller. For that reason, they cannot take any output parameters. In most cases, by the time the first line of the slot is run, the caller function has already resumed working.</source>
          <target state="translated">비동기 슬롯은 일반적으로 발신자에게 응답을 반환하지 않는 슬롯입니다. 따라서 출력 매개 변수를 사용할 수 없습니다. 대부분의 경우 슬롯의 첫 번째 라인이 실행될 때마다 호출자 기능이 이미 작동을 재개했습니다.</target>
        </trans-unit>
        <trans-unit id="bf15448916e4418ca84783919398ce5d3bdf56e4" translate="yes" xml:space="preserve">
          <source>Asynchronously requests</source>
          <target state="translated">비동기 적으로 요청</target>
        </trans-unit>
        <trans-unit id="c9f0075e5c85468a56b797c1d1e50667af529bf8" translate="yes" xml:space="preserve">
          <source>At a high level, you have a choice of using a &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; type directly as a source or defining the desired API in a .rep template for use with the &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt; compiler.</source>
          <target state="translated">높은 수준에서, &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 유형을 소스로 직접 사용 하거나 &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt; 컴파일러 와 함께 사용할 .rep 템플리트에서 원하는 API를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42809e8d1678586fe4c28a5bfba7143493cf53de" translate="yes" xml:space="preserve">
          <source>At any given time, the &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; will be in one of four states: active, suspended, stopped, or idle. These states are described by the &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt; enum. State changes are reported through the &lt;a href=&quot;qaudiooutput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() signal. You can use this signal to, for instance, update the GUI of the application; the mundane example here being changing the state of a &lt;code&gt;play/pause&lt;/code&gt; button. You request a state change directly with &lt;a href=&quot;qaudiooutput#suspend&quot;&gt;suspend&lt;/a&gt;(), &lt;a href=&quot;qaudiooutput#stop&quot;&gt;stop&lt;/a&gt;(), &lt;a href=&quot;qaudiooutput#reset&quot;&gt;reset&lt;/a&gt;(), &lt;a href=&quot;qaudiooutput#resume&quot;&gt;resume&lt;/a&gt;(), and &lt;a href=&quot;qaudiooutput#start-1&quot;&gt;start&lt;/a&gt;().</source>
          <target state="translated">주어진 시간에 &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; 은 활성, 일시 중지, 중지 또는 유휴 상태의 4 가지 상태 중 하나입니다. 이 상태는 &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: State&lt;/a&gt; 열거 형으로 설명됩니다 . 상태 변경은 &lt;a href=&quot;qaudiooutput#stateChanged&quot;&gt;stateChanged&lt;/a&gt; () 신호를 통해보고됩니다 . 예를 들어이 신호를 사용하여 응용 프로그램의 GUI를 업데이트 할 수 있습니다. 여기서 일반적인 예는 &lt;code&gt;play/pause&lt;/code&gt; 버튼 의 상태를 변경하는 것 입니다. &lt;a href=&quot;qaudiooutput#suspend&quot;&gt;일시 중단&lt;/a&gt; (), &lt;a href=&quot;qaudiooutput#stop&quot;&gt;중지&lt;/a&gt; (), &lt;a href=&quot;qaudiooutput#reset&quot;&gt;재설정&lt;/a&gt; (), &lt;a href=&quot;qaudiooutput#resume&quot;&gt;재개&lt;/a&gt; () 및 &lt;a href=&quot;qaudiooutput#start-1&quot;&gt;시작&lt;/a&gt; () 으로 상태 변경을 직접 요청합니다 .</target>
        </trans-unit>
        <trans-unit id="d66f5a534a2f4e46e7b9aa796d01cd6db3d5263b" translate="yes" xml:space="preserve">
          <source>At any point an animation is in one of three states: &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Running&lt;/a&gt;, &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Stopped&lt;/a&gt;, or &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Paused&lt;/a&gt;--as defined by the &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;State&lt;/a&gt; enum. The current state can be changed by calling &lt;a href=&quot;qabstractanimation#start&quot;&gt;start&lt;/a&gt;(), &lt;a href=&quot;qabstractanimation#stop&quot;&gt;stop&lt;/a&gt;(), &lt;a href=&quot;qabstractanimation#pause&quot;&gt;pause&lt;/a&gt;(), or &lt;a href=&quot;qabstractanimation#resume&quot;&gt;resume&lt;/a&gt;(). An animation will always reset its &lt;a href=&quot;qabstractanimation#currentTime-prop&quot;&gt;current time&lt;/a&gt; when it is started. If paused, it will continue with the same current time when resumed. When an animation is stopped, it cannot be resumed, but will keep its current time (until started again). &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; will emit &lt;a href=&quot;qabstractanimation#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() whenever its state changes.</source>
          <target state="translated">언제든 애니메이션은 &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;State&lt;/a&gt; 열거 형에 의해 정의 된 &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Running&lt;/a&gt; , &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Stopped&lt;/a&gt; 또는 &lt;a href=&quot;qabstractanimation#State-enum&quot;&gt;Paused&lt;/a&gt; 의 3 가지 상태 중 하나입니다 . &lt;a href=&quot;qabstractanimation#start&quot;&gt;start&lt;/a&gt; (), &lt;a href=&quot;qabstractanimation#stop&quot;&gt;stop&lt;/a&gt; (), &lt;a href=&quot;qabstractanimation#pause&quot;&gt;pause&lt;/a&gt; () 또는 &lt;a href=&quot;qabstractanimation#resume&quot;&gt;resume&lt;/a&gt; () 을 호출하여 현재 상태를 변경할 수 있습니다 . 애니메이션 은 시작될 때 항상 &lt;a href=&quot;qabstractanimation#currentTime-prop&quot;&gt;현재 시간을&lt;/a&gt; 재설정합니다 . 일시 중지하면 다시 시작할 때와 동일한 현재 시간으로 계속 진행됩니다. 애니메이션이 중지되면 다시 시작할 수 없지만 현재 시간을 유지합니다 (다시 시작할 때까지). &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; 은 상태가 변경 될 때마다 &lt;a href=&quot;qabstractanimation#stateChanged&quot;&gt;stateChanged&lt;/a&gt; () 를 방출 합니다.</target>
        </trans-unit>
        <trans-unit id="97fa7c27e90979774b3a888ca02475f0f53acae3" translate="yes" xml:space="preserve">
          <source>At any point in time, &lt;a href=&quot;qaudioinput&quot;&gt;QAudioInput&lt;/a&gt; will be in one of four states: active, suspended, stopped, or idle. These states are specified by the &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio::State&lt;/a&gt; enum. You can request a state change directly through &lt;a href=&quot;qaudioinput#suspend&quot;&gt;suspend&lt;/a&gt;(), &lt;a href=&quot;qaudioinput#resume&quot;&gt;resume&lt;/a&gt;(), &lt;a href=&quot;qaudioinput#stop&quot;&gt;stop&lt;/a&gt;(), &lt;a href=&quot;qaudioinput#reset&quot;&gt;reset&lt;/a&gt;(), and &lt;a href=&quot;qaudioinput#start-1&quot;&gt;start&lt;/a&gt;(). The current state is reported by &lt;a href=&quot;qaudioinput#state&quot;&gt;state&lt;/a&gt;(). &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; will also signal you when the state changes (&lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;stateChanged&lt;/a&gt;()).</source>
          <target state="translated">어느 시점 &lt;a href=&quot;qaudioinput&quot;&gt;에서든 QAudioInput&lt;/a&gt; 은 활성, 일시 중단, 중지 또는 유휴 상태의 4 가지 상태 중 하나입니다. 이 상태는 &lt;a href=&quot;qaudio#State-enum&quot;&gt;QAudio :: State&lt;/a&gt; 열거 형으로 지정됩니다 . &lt;a href=&quot;qaudioinput#suspend&quot;&gt;일시 중단&lt;/a&gt; (), &lt;a href=&quot;qaudioinput#resume&quot;&gt;다시 시작&lt;/a&gt; (), &lt;a href=&quot;qaudioinput#stop&quot;&gt;중지&lt;/a&gt; (), &lt;a href=&quot;qaudioinput#reset&quot;&gt;재설정&lt;/a&gt; () 및 &lt;a href=&quot;qaudioinput#start-1&quot;&gt;시작&lt;/a&gt; ()을 통해 상태 변경을 직접 요청할 수 있습니다 . 현재 상태는 &lt;a href=&quot;qaudioinput#state&quot;&gt;상태&lt;/a&gt; () 로보고됩니다 . &lt;a href=&quot;qaudiooutput&quot;&gt;QAudioOutput&lt;/a&gt; 은 상태가 변경 될 때도 알려줍니다 ( &lt;a href=&quot;qaudioinput#stateChanged&quot;&gt;stateChanged&lt;/a&gt; ()).</target>
        </trans-unit>
        <trans-unit id="3c3ff16dcc213816d038cd51ace782a20de40270" translate="yes" xml:space="preserve">
          <source>At any point, the socket can emit &lt;a href=&quot;qabstractsocket#error&quot;&gt;error&lt;/a&gt;() to signal that an error occurred.</source>
          <target state="translated">언제든지 소켓은 &lt;a href=&quot;qabstractsocket#error&quot;&gt;오류&lt;/a&gt; ()를 발생시켜 오류가 발생했음을 알릴 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="74d80312364e27da53be514c37db7c915d4f7418" translate="yes" xml:space="preserve">
          <source>At any point, the socket can emit &lt;a href=&quot;qbluetoothsocket#error&quot;&gt;error&lt;/a&gt;() to signal that an error occurred.</source>
          <target state="translated">언제든지 소켓은 &lt;a href=&quot;qbluetoothsocket#error&quot;&gt;오류&lt;/a&gt; ()를 발생시켜 오류가 발생했음을 알릴 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ea6ee628887c98ac2211a407c644d6029a495ab7" translate="yes" xml:space="preserve">
          <source>At any point, you can save your form by selecting the &lt;b&gt;Save From As...&lt;/b&gt; option from the &lt;b&gt;File&lt;/b&gt; menu. The UI files saved by</source>
          <target state="translated">언제든지 &lt;b&gt;파일&lt;/b&gt; 메뉴 &lt;b&gt;에서 다른 이름으로 저장 ...&lt;/b&gt; 옵션을 선택하여 양식을 저장할 수 있습니다. 저장 한 UI 파일&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="fc778a76703643c7e9afe57573b40700efc7e170" translate="yes" xml:space="preserve">
          <source>At any time, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; has a state (returned by &lt;a href=&quot;qabstractsocket#state&quot;&gt;state&lt;/a&gt;()). The initial state is &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt;. After calling &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt;(), the socket first enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;HostLookupState&lt;/a&gt;. If the host is found, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState&lt;/a&gt; and emits the &lt;a href=&quot;qabstractsocket#hostFound&quot;&gt;hostFound&lt;/a&gt;() signal. When the connection has been established, it enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt; and emits &lt;a href=&quot;qabstractsocket#connected&quot;&gt;connected&lt;/a&gt;(). If an error occurs at any stage, &lt;a href=&quot;qabstractsocket#error&quot;&gt;error&lt;/a&gt;() is emitted. Whenever the state changes, &lt;a href=&quot;qabstractsocket#stateChanged&quot;&gt;stateChanged&lt;/a&gt;() is emitted. For convenience, &lt;a href=&quot;qabstractsocket#isValid&quot;&gt;isValid&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if the socket is ready for reading and writing, but note that the socket's state must be &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt; before reading and writing can occur.</source>
          <target state="translated">언제든지 &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; 은 상태 ( &lt;a href=&quot;qabstractsocket#state&quot;&gt;상태&lt;/a&gt; () 로 반환 됨)를 갖습니다 . 초기 상태는 &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt; 입니다. &lt;a href=&quot;qabstractsocket#connectToHost&quot;&gt;connectToHost&lt;/a&gt; ()를 호출 한 후 소켓은 먼저 &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;HostLookupState&lt;/a&gt; 로 들어 갑니다 . 호스트가 발견 된 경우, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket은&lt;/a&gt; 입사 &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectingState를&lt;/a&gt; 상기 발광 &lt;a href=&quot;qabstractsocket#hostFound&quot;&gt;hostFound&lt;/a&gt; () 신호. 접속이 확립되면,이 입사 &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt; 및 방출한다은 &lt;a href=&quot;qabstractsocket#connected&quot;&gt;접속&lt;/a&gt; (). 어떤 단계에서든 오류가 발생하면 &lt;a href=&quot;qabstractsocket#error&quot;&gt;오류&lt;/a&gt; ()가 발생합니다. 상태가 변경 될 때마다 &lt;a href=&quot;qabstractsocket#stateChanged&quot;&gt;stateChanged&lt;/a&gt; ()가 생성됩니다. 편의상 &lt;a href=&quot;qabstractsocket#isValid&quot;&gt;isValid&lt;/a&gt; ()는 &lt;code&gt;true&lt;/code&gt; 소켓은 소켓의 상태가 있어야한다는 읽기와 쓰기,하지만 노트에 대한 준비가되어있는 경우 &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt; 읽기, 쓰기가 발생할 수 있습니다 전에.</target>
        </trans-unit>
        <trans-unit id="a0b9a523686980c5115e2cd28208348628ab266c" translate="yes" xml:space="preserve">
          <source>At any time, you can create a &lt;a href=&quot;qeventloop&quot;&gt;QEventLoop&lt;/a&gt; object and call &lt;a href=&quot;qeventloop#exec&quot;&gt;exec&lt;/a&gt;() on it to start a local event loop. From within the event loop, calling &lt;a href=&quot;qeventloop#exit&quot;&gt;exit&lt;/a&gt;() will force &lt;a href=&quot;qeventloop#exec&quot;&gt;exec&lt;/a&gt;() to return.</source>
          <target state="translated">언제든지 &lt;a href=&quot;qeventloop&quot;&gt;QEventLoop&lt;/a&gt; 객체를 생성하고 &lt;a href=&quot;qeventloop#exec&quot;&gt;exec&lt;/a&gt; ()를 호출 하여 로컬 이벤트 루프를 시작할 수 있습니다. 이벤트 루프 내에서 &lt;a href=&quot;qeventloop#exit&quot;&gt;exit&lt;/a&gt; ()를 호출 하면 &lt;a href=&quot;qeventloop#exec&quot;&gt;exec&lt;/a&gt; () 가 강제 로 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="daa6a58000f8024bb9abb849cd1c6bc5b90cf05f" translate="yes" xml:space="preserve">
          <source>At compile time, the</source>
          <target state="translated">컴파일 타임에</target>
        </trans-unit>
        <trans-unit id="fac0e6dbd5badab8e273f9eada1e5d1b55cf621d" translate="yes" xml:space="preserve">
          <source>At each moment there is at most one animation that is active in the group; it is returned by &lt;a href=&quot;qsequentialanimationgroup#currentAnimation-prop&quot;&gt;currentAnimation&lt;/a&gt;(). An empty group has no current animation.</source>
          <target state="translated">매 순간마다 그룹에서 활성화되는 애니메이션이 최대 하나입니다. &lt;a href=&quot;qsequentialanimationgroup#currentAnimation-prop&quot;&gt;currentAnimation&lt;/a&gt; ()에 의해 리턴됩니다 . 빈 그룹에는 현재 애니메이션이 없습니다.</target>
        </trans-unit>
        <trans-unit id="c48b7d2b99551d3cffcfb32f1f31b3d96a3a8ff2" translate="yes" xml:space="preserve">
          <source>At first application startup, the window gets default dimensions specified as 800x600. Notice that no default position is specified - we let the window manager handle that. Later when the window geometry changes, new values will be automatically stored to the persistent settings. The second application run will get initial values from the persistent settings, bringing the window back to the previous position and size.</source>
          <target state="translated">응용 프로그램을 처음 시작할 때 창에 기본 크기는 800x600으로 지정됩니다. 기본 위치는 지정되어 있지 않습니다. 창 관리자가이를 처리하도록합니다. 나중에 창 지오메트리가 변경되면 새 값이 지속적 설정에 자동으로 저장됩니다. 두 번째 응용 프로그램 실행은 지속 설정에서 초기 값을 가져 와서 창을 이전 위치와 크기로 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="87807290c5074347670303aa4be4a27ce5a5a1d0" translate="yes" xml:space="preserve">
          <source>At item's</source>
          <target state="translated">항목에서</target>
        </trans-unit>
        <trans-unit id="fc9e79d115e6810206d506e1fc484f86bd561f77" translate="yes" xml:space="preserve">
          <source>At its heart, the framegraph is a data-driven method for configuring the Qt 3D renderer. Due to its data-driven nature, we can change configuration at runtime, allow non-C++ developers or designers to change the structure of a frame, and try out new rendering approaches without having to write thousands of lines of boiler plate code.</source>
          <target state="translated">기본적으로 프레임 그래프는 Qt 3D 렌더러를 구성하기위한 데이터 기반 방법입니다. 데이터 중심 특성으로 인해 런타임에 구성을 변경하고 비 C ++ 개발자 또는 디자이너가 프레임 구조를 변경하고 수천 줄의 보일러 플레이트 코드를 작성하지 않고도 새로운 렌더링 방식을 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc401b782cbfc97a28d7a783971e774fd968e343" translate="yes" xml:space="preserve">
          <source>At its simplest, a view transition may just animate an item to its new position following a view operation, just as the &lt;code&gt;displaced&lt;/code&gt; transition does above, or animate some item properties, as in the &lt;code&gt;add&lt;/code&gt; transition above. Additionally, a view transition may make use of the &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; attached property to customize animation behavior for different items. Following are some examples of how this can be achieved.</source>
          <target state="translated">가장 간단하게, 뷰 트랜지션은 &lt;code&gt;displaced&lt;/code&gt; 트랜지션이 위와 같이 뷰 조작 후 항목을 새로운 위치로 애니메이션하거나 위의 &lt;code&gt;add&lt;/code&gt; 트랜지션 에서와 같이 일부 항목 속성에 애니메이션을 적용 할 수 있습니다 . 또한 뷰 전환시 &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; 연결된 속성을 사용 하여 다른 항목에 대한 애니메이션 동작을 사용자 지정할 수 있습니다. 다음은 이것이 어떻게 달성 될 수 있는지에 대한 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="a19c22dff9d4cde9bd2628e6c3d56d2072a7deaf" translate="yes" xml:space="preserve">
          <source>At least one QML file whose name matches a control (for example, &lt;code&gt;Button.qml&lt;/code&gt;) must exist.</source>
          <target state="translated">이름이 컨트롤과 일치하는 이름이 하나 이상의 QML 파일 (예 : &lt;code&gt;Button.qml&lt;/code&gt; )이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="796169bf85aac57a7e0921080487ae6d4a8e086f" translate="yes" xml:space="preserve">
          <source>At minimum the layout directory must contain the files:</source>
          <target state="translated">최소한 레이아웃 디렉토리에는 파일이 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="2e9d2902edfc287dd7802b4148dde59e40d35ee7" translate="yes" xml:space="preserve">
          <source>At present the &lt;a href=&quot;qplacecontent&quot;&gt;QPlaceContent&lt;/a&gt; class is not extensible by 3rd parties.</source>
          <target state="translated">현재 &lt;a href=&quot;qplacecontent&quot;&gt;QPlaceContent&lt;/a&gt; 클래스는 타사에서 확장 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="037e15c7a413b9bf23ac5206f5480d34b46afe7b" translate="yes" xml:space="preserve">
          <source>At present, the Qt 3D Animation module provides the following blend tree node types:</source>
          <target state="translated">현재 Qt 3D 애니메이션 모듈은 다음과 같은 블렌드 트리 노드 유형을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ab91ac60011e39d43815f16993dec5b68f1f3bc8" translate="yes" xml:space="preserve">
          <source>At render time, for each leaf node of the FrameGraph a base render state is recorded by accumulating states defined by all &lt;a href=&quot;qml-qt3d-render-renderstateset&quot;&gt;RenderStateSet&lt;/a&gt; nodes in the FrameGraph branch. Each &lt;a href=&quot;qml-qt3d-render-renderpass&quot;&gt;RenderPass&lt;/a&gt; can overload this base render state by specifying its own &lt;a href=&quot;qml-renderstate&quot;&gt;RenderState&lt;/a&gt; nodes.</source>
          <target state="translated">렌더링시 FrameGraph의 각 리프 노드에 대해 기본 렌더링 상태는 FrameGraph 분기의 모든 &lt;a href=&quot;qml-qt3d-render-renderstateset&quot;&gt;RenderStateSet&lt;/a&gt; 노드에 의해 정의 된 상태를 누적하여 기록됩니다 . 각 &lt;a href=&quot;qml-qt3d-render-renderpass&quot;&gt;RenderPass&lt;/a&gt; 는 자체 &lt;a href=&quot;qml-renderstate&quot;&gt;RenderState&lt;/a&gt; 노드를 지정하여이 기본 렌더 상태를 오버로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4332a429b68b0ac4a41c160e240519e6859b47ee" translate="yes" xml:space="preserve">
          <source>At render time, for each leaf node of the FrameGraph a base render state is recorded by accumulating states defined by all &lt;a href=&quot;qt3drender-qrenderstateset&quot;&gt;QRenderStateSet&lt;/a&gt; nodes in the FrameGraph branch. Each &lt;a href=&quot;qt3drender-qrenderpass&quot;&gt;QRenderPass&lt;/a&gt; can overload this base render state by specifying its own &lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;QRenderState&lt;/a&gt; nodes.</source>
          <target state="translated">렌더링시 FrameGraph의 각 리프 노드에 대해 기본 렌더링 상태는 FrameGraph 분기의 모든 &lt;a href=&quot;qt3drender-qrenderstateset&quot;&gt;QRenderStateSet&lt;/a&gt; 노드에 의해 정의 된 상태를 누적하여 기록됩니다 . 각 &lt;a href=&quot;qt3drender-qrenderpass&quot;&gt;QRenderPass&lt;/a&gt; 는 자체 &lt;a href=&quot;qt3drender-qrenderstate&quot;&gt;QRenderState&lt;/a&gt; 노드를 지정하여이 기본 렌더링 상태를 오버로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="54a81c3421b400f49f9c78d8711420f357d5fc98" translate="yes" xml:space="preserve">
          <source>At runtime, a Qt application recognizes many environment variables, some of which can be helpful for debugging:</source>
          <target state="translated">런타임시 Qt 애플리케이션은 많은 환경 변수를 인식하며 그 중 일부는 디버깅에 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dab9d4507e7863cf2519c0cf5e644680a577be4f" translate="yes" xml:space="preserve">
          <source>At some point later on, the &lt;a href=&quot;qinappstore#transactionReady&quot;&gt;transactionReady&lt;/a&gt;() signal will be emitted for the purchase. Check &lt;a href=&quot;qinapptransaction#status-prop&quot;&gt;QInAppTransaction::status&lt;/a&gt;() to see if the purchase was completed successfully. If it was, then you must save the information about the purchase in a safe way, so that the application can restore it later.</source>
          <target state="translated">나중에 어느 시점에서 &lt;a href=&quot;qinappstore#transactionReady&quot;&gt;transactionReady&lt;/a&gt; () 신호가 구매를 위해 방출됩니다. 구매가 성공적으로 완료 되었는지 확인 &lt;a href=&quot;qinapptransaction#status-prop&quot;&gt;하려면 QInAppTransaction :: status&lt;/a&gt; ()를 확인하십시오. 그렇다면, 구매에 대한 정보를 안전한 방법으로 저장하여 응용 프로그램이 나중에이를 복원 할 수 있도록하십시오.</target>
        </trans-unit>
        <trans-unit id="b52512e5061a593208dea53cfb23d89cd05ed9e4" translate="yes" xml:space="preserve">
          <source>At some point, the user will activate a user interface component (perhaps using a particular key) where they can choose from a number of strings matching the text they have typed so far. The user can either confirm their choice cancel the input; in either case the input context will be closed.</source>
          <target state="translated">어떤 시점에서, 사용자는 사용자 인터페이스 구성 요소 (아마도 특정 키를 사용)를 활성화하여 지금까지 입력 한 텍스트와 일치하는 여러 문자열 중에서 선택할 수 있습니다. 사용자는 자신의 선택을 확인하여 입력을 취소 할 수 있습니다. 두 경우 모두 입력 컨텍스트가 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="72ba8cc9ccc86603a2ddc31bcd57b68d34d2c1f5" translate="yes" xml:space="preserve">
          <source>At that point &lt;a href=&quot;qgeocodereply#locations&quot;&gt;QGeoCodeReply::locations&lt;/a&gt;() can be used to retrieve the results, which will consist of a list of &lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; objects. These objects represent a combination of coordinate and address data.</source>
          <target state="translated">이 시점에서 &lt;a href=&quot;qgeocodereply#locations&quot;&gt;QGeoCodeReply :: locations&lt;/a&gt; ()를 사용하여 결과를 검색 할 수 있으며, &lt;a href=&quot;qgeolocation&quot;&gt;QGeoLocation&lt;/a&gt; 객체 목록으로 구성 됩니다. 이러한 객체는 좌표 및 주소 데이터의 조합을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="40ccae4b2a43fca0f3cdca72e9f94bb174cad42f" translate="yes" xml:space="preserve">
          <source>At the C++ implementation level, using a Qt module makes its headers available for inclusion and causes it to be linked to the binary.</source>
          <target state="translated">C ++ 구현 레벨에서 Qt 모듈을 사용하면 헤더를 포함 할 수 있으며 바이너리에 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="0d90be54974f6606a3a303e548ddcfeb04f3394e" translate="yes" xml:space="preserve">
          <source>At the beginining of the header</source>
          <target state="translated">헤더가 시작될 때</target>
        </trans-unit>
        <trans-unit id="8ed66d562fe594c7221f115eb44a11475ad2f6ea" translate="yes" xml:space="preserve">
          <source>At the end of a frame we can retrieve the results by calling &lt;a href=&quot;qopengltimerquery#waitForResult&quot;&gt;waitForResult&lt;/a&gt;(). As this function's name implies, it blocks CPU execution until OpenGL notifies that the timer query result is available. To avoid blocking, you can check if the query result is available by calling &lt;a href=&quot;qopengltimerquery#isResultAvailable&quot;&gt;isResultAvailable&lt;/a&gt;(). Note that modern GPUs are deeply pipelined and query results may not become available for between 1-5 frames after they were issued.</source>
          <target state="translated">프레임의 끝에서 &lt;a href=&quot;qopengltimerquery#waitForResult&quot;&gt;waitForResult&lt;/a&gt; () 를 호출하여 결과를 검색 할 수 있습니다 . 이 함수의 이름에서 알 수 있듯이 OpenGL은 타이머 쿼리 결과를 사용할 수 있음을 알릴 때까지 CPU 실행을 차단합니다. 차단을 피하기 위해 &lt;a href=&quot;qopengltimerquery#isResultAvailable&quot;&gt;isResultAvailable&lt;/a&gt; () 을 호출하여 쿼리 결과를 사용할 수 있는지 확인할 수 있습니다 . 최신 GPU는 파이프 라인이 깊으며 쿼리 결과가 발행 된 후 1-5 프레임 사이에서 사용하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3080d39bec8e79e78fb1923604be5fe6c466e9ba" translate="yes" xml:space="preserve">
          <source>At the end of the header</source>
          <target state="translated">헤더 끝에서</target>
        </trans-unit>
        <trans-unit id="75e8c90ac99703039b88fbc5e0a1beabaa46fbf6" translate="yes" xml:space="preserve">
          <source>At the same time, attention must be paid to the number of Shape elements in the scene, in particular when using this special accelerated approach for &lt;code&gt;GL_NV_path_rendering&lt;/code&gt;. The way such a Shape item is represented in the scene graph is different from an ordinary geometry-based item, and incurs a certain cost when it comes to OpenGL state changes.</source>
          <target state="translated">동시에, 특히 &lt;code&gt;GL_NV_path_rendering&lt;/code&gt; 을 위해이 특별한 가속화 된 접근 방식을 사용할 때 장면의 Shape 요소 수에주의를 기울여야합니다 . 이러한 모양 항목이 장면 그래프에 표시되는 방식은 일반적인 형상 기반 항목과 다르며 OpenGL 상태 변경시 특정 비용이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4c10f42bbe4080eec805fef67f19baa1dacce0f8" translate="yes" xml:space="preserve">
          <source>At the simplest level, text documents are made up of a string of characters, marked up in some way to represent the block structure of the text within the document. &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor&lt;/a&gt; provides a cursor-based interface that allows the contents of a &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; to be manipulated at the character level. Since the elements (blocks, frames, tables, etc.) are also encoded in the character stream, the document structure can itself be changed by the cursor.</source>
          <target state="translated">가장 간단한 수준에서 텍스트 문서는 문자열로 구성되며 문서 내에서 텍스트의 블록 구조를 나타내는 방식으로 표시됩니다. &lt;a href=&quot;qtextcursor&quot;&gt;QTextCursor은&lt;/a&gt; a의 내용을 수있는 커서 기반 인터페이스를 제공 &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument는&lt;/a&gt; 문자 수준에서 조작 할 수 있습니다. 요소 (블록, 프레임, 테이블 등)도 문자 스트림으로 인코딩되므로 커서로 문서 구조 자체를 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9dcec02d3d4c2b8f2a55dfb0ebaad329e7acdf90" translate="yes" xml:space="preserve">
          <source>At the time of release (the mouse button is released or the finger is lifted), if the event point is outside the bounds of the &lt;code&gt;parent&lt;/code&gt; Item, a tap gesture is not recognized. This corresponds to typical behavior for button widgets: you can cancel a click by dragging outside the button, and you can also change your mind by dragging back inside the button before release. Note that it's necessary for &lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;TapHandler&lt;/a&gt; take the exclusive grab on press and retain it until release in order to detect this gesture.</source>
          <target state="translated">해제 시점 (마우스 단추를 놓거나 손가락을) 때)에서 이벤트 지점이 &lt;code&gt;parent&lt;/code&gt; 항목 의 경계를 벗어나면 탭 동작이 인식되지 않습니다. 이는 버튼 위젯의 일반적인 동작에 해당합니다. 버튼 외부로 드래그하여 클릭을 취소 할 수 있으며 릴리스 전에 버튼 내부로 다시 드래그하여 마음을 바꿀 수도 있습니다. 것이 필요하다고 주 &lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;TapHandler이&lt;/a&gt; 눌러에 독점 횡령을하고이 제스처를 감지하기 위해 릴리스 때까지 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="8140bc4ff5189ac6bc25fdb8ce759b5bdba0ac67" translate="yes" xml:space="preserve">
          <source>At the time this table was generated, there were six links from &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; to &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt;. The first column of each table entry contains a link to some link in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt;. The link text as it appears in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; is shown. The second and third columns contain the source file name and line number for where qdoc saw the link in a qdoc comment.</source>
          <target state="translated">이 테이블이 생성 될 때 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; 에서 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt; 으로의 6 개의 링크가 있었습니다 . 각 테이블 항목의 첫 번째 열에는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore의&lt;/a&gt; 일부 링크에 대한 링크가 포함 됩니다 . &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore에&lt;/a&gt; 나타나는 링크 텍스트 가 표시됩니다. 두 번째 및 세 번째 열에는 qdoc이 qdoc 주석에서 링크를 본 위치의 소스 파일 이름과 행 번호가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="b73bf5286ff35474a74c26035c042d81945e9ffc" translate="yes" xml:space="preserve">
          <source>At this point there are two GeoServices plugins packaged with Qt. They are accessible using their provider names:</source>
          <target state="translated">이 시점에서 Qt로 패키지 된 두 개의 GeoServices 플러그인이 있습니다. 제공자 이름을 사용하여 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aff72b9f558b4e97e80f24407ec25f32bf5ed9e7" translate="yes" xml:space="preserve">
          <source>At this point, if we examined the &lt;code&gt;displaced&lt;/code&gt; transition that was run for the bottom displaced item (&quot;Item 0&quot;), the &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; property values provided to this transition would be as follows:</source>
          <target state="translated">이 시점 에서 맨 아래 변위 항목 ( &quot;Item 0&quot;)에 대해 실행 된 &lt;code&gt;displaced&lt;/code&gt; 전환을 검사 한 경우이 전환에 제공된 &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; 속성 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="850acecc5742a41db5fb216f29a36550106d1ff8" translate="yes" xml:space="preserve">
          <source>At this point, neither sorting nor filtering is enabled; the original data is displayed in the view. Any changes made through the &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; are applied to the original model.</source>
          <target state="translated">이 시점에서 정렬이나 필터링이 활성화되지 않았습니다. 원래 데이터가보기에 표시됩니다. &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel을&lt;/a&gt; 통해 작성된 모든 변경 사항은 원래 모델에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="1eb194f1c0f8ecd9fb1f220a29550b7e23cebb5d" translate="yes" xml:space="preserve">
          <source>At this time, drag-and-drop is not yet supported.</source>
          <target state="translated">현재 드래그 앤 드롭은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3233cbdf60e91444617d3f6d1b887957b7eaf196" translate="yes" xml:space="preserve">
          <source>Atlas based textures are created by passing &lt;a href=&quot;qquickwindow#CreateTextureOption-enum&quot;&gt;QQuickWindow::TextureCanUseAtlas&lt;/a&gt; to the &lt;a href=&quot;qquickwindow#createTextureFromImage&quot;&gt;QQuickWindow::createTextureFromImage&lt;/a&gt;().</source>
          <target state="translated">Atlas 기반 텍스처는 &lt;a href=&quot;qquickwindow#CreateTextureOption-enum&quot;&gt;QQuickWindow :: TextureCanUseAtlas&lt;/a&gt; 를 &lt;a href=&quot;qquickwindow#createTextureFromImage&quot;&gt;QQuickWindow :: createTextureFromImage&lt;/a&gt; () 에 전달하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="ca2894d7d5816986441ce1688077b4b58aca9579" translate="yes" xml:space="preserve">
          <source>Atomic API is useful when you application needs to blend content into overlays keeping all the updates within the same vsync. Still not all devices support this API and it could be unavailable on some older devices. KMS backend will by default use the legacy API, but you can enable the DRM atomic API with &lt;code&gt;QT_QPA_EGLFS_KMS_ATOMIC&lt;/code&gt; environment variable set to 1.</source>
          <target state="translated">Atomic API는 애플리케이션이 동일한 vsync 내에 모든 업데이트를 유지하면서 컨텐츠를 오버레이로 혼합해야 할 때 유용합니다. 여전히 모든 장치가이 API를 지원하는 것은 아니며 일부 구형 장치에서는 사용할 수 없습니다. KMS 백엔드는 기본적으로 레거시 API를 사용하지만 &lt;code&gt;QT_QPA_EGLFS_KMS_ATOMIC&lt;/code&gt; 환경 변수를 1로 설정 하여 DRM 아토믹 API를 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a967c27abdae3c54a1ba2eb46dfef28e4669c220" translate="yes" xml:space="preserve">
          <source>Atomic add-and-fetch.</source>
          <target state="translated">원자 추가 및 가져 오기.</target>
        </trans-unit>
        <trans-unit id="1aca8c389398c9bb150cb22baffa337508a5b375" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-add.</source>
          <target state="translated">원자 가져 오기 및 추가.</target>
        </trans-unit>
        <trans-unit id="7b4b593a63bdacca7e88ddaa3d460f979d52a59e" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-and.</source>
          <target state="translated">원자 가져 오기 및.</target>
        </trans-unit>
        <trans-unit id="dc61104378ed6ca8bef017107abe35e79e1d3418" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-or.</source>
          <target state="translated">원자 가져 오기 및 / 또는</target>
        </trans-unit>
        <trans-unit id="c7830879c704a38b11e5ddd086e77ccef500b74f" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-store.</source>
          <target state="translated">원자 가져 오기 및 저장</target>
        </trans-unit>
        <trans-unit id="29a0ea35af869894686b5620753669846139975f" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-sub.</source>
          <target state="translated">원자 가져 오기 및 서브</target>
        </trans-unit>
        <trans-unit id="677000d5ba7c628139cf77380e75ab8c46f01e22" translate="yes" xml:space="preserve">
          <source>Atomic fetch-and-xor.</source>
          <target state="translated">원자 가져 오기 및 xor.</target>
        </trans-unit>
        <trans-unit id="01a71a9c1dd30ce797dff76bda85d82b65e9c8a2" translate="yes" xml:space="preserve">
          <source>Atomic or-and-fetch.</source>
          <target state="translated">원자 또는 가져 오기.</target>
        </trans-unit>
        <trans-unit id="d7c154d6a6458aeda8686536a6877b2d6b01a013" translate="yes" xml:space="preserve">
          <source>Atomic sub-and-fetch.</source>
          <target state="translated">원자 하위 가져 오기.</target>
        </trans-unit>
        <trans-unit id="99da09e996e10b97b93284055241904724848e3b" translate="yes" xml:space="preserve">
          <source>Atomic test-and-set.</source>
          <target state="translated">원자 테스트 및 설정.</target>
        </trans-unit>
        <trans-unit id="da13c4e269f632fb37b75640d8734403073f8480" translate="yes" xml:space="preserve">
          <source>Atomic xor-and-fetch.</source>
          <target state="translated">원자 xor-and-fetch.</target>
        </trans-unit>
        <trans-unit id="8aa451b096cba27c2fae11f428437f2c14de039c" translate="yes" xml:space="preserve">
          <source>Atomically decrements the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns &lt;code&gt;true&lt;/code&gt; if the new value is non-zero, false otherwise.</source>
          <target state="translated">이 &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; 의 값을 원자 적으로 줄 입니다. 반환 &lt;code&gt;true&lt;/code&gt; 새로운 값이 0, 그렇지 않은 경우는 false 인 경우.</target>
        </trans-unit>
        <trans-unit id="8dedf8ab3c76603bbc27d23afca2d137d8064ca9" translate="yes" xml:space="preserve">
          <source>Atomically increments the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns &lt;code&gt;true&lt;/code&gt; if the new value is non-zero, false otherwise.</source>
          <target state="translated">이 &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; 의 값을 원자 적으로 증가 시킵니다 . 반환 &lt;code&gt;true&lt;/code&gt; 새로운 값이 0, 그렇지 않은 경우는 false 인 경우.</target>
        </trans-unit>
        <trans-unit id="89dd8dbf7bb7ee2579be58bf9d204dafabeb1439" translate="yes" xml:space="preserve">
          <source>Atomically loads the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; using a sequentially consistent memory ordering if possible; or &quot;Acquire&quot; ordering if not. The value is not modified in any way, but note that there's no guarantee that it remains so.</source>
          <target state="translated">가능한 경우 순차적으로 일관된 메모리 순서를 사용 하여이 &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; 의 값을 원자 적으로로드 합니다. 그렇지 않으면 &quot;취득&quot;주문. 값은 어떤 식 으로든 수정되지 않지만 그 값이 그대로 유지된다는 보장은 없습니다.</target>
        </trans-unit>
        <trans-unit id="69653e3e82a9d9b720b3e7e9b153a85f9a1e4c06" translate="yes" xml:space="preserve">
          <source>Atomically loads the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; using relaxed memory ordering. The value is not modified in any way, but note that there's no guarantee that it remains so.</source>
          <target state="translated">완화 된 메모리 순서를 사용 하여이 &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; 의 값을 원자 적으로로드합니다 . 값은 어떤 식 으로든 수정되지 않지만 그 값이 그대로 유지된다는 보장은 없습니다.</target>
        </trans-unit>
        <trans-unit id="3e0d1fd4d5c9735d46867c2448de36a6bc511cb0" translate="yes" xml:space="preserve">
          <source>Atomically loads the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; using the &quot;Acquire&quot; memory ordering. The value is not modified in any way, but note that there's no guarantee that it remains so.</source>
          <target state="translated">&quot;Acquire&quot;메모리 순서를 사용 하여이 &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; 의 값을 원자 적으로로드합니다 . 값은 어떤 식 으로든 수정되지 않지만 그 값이 그대로 유지된다는 보장은 없습니다.</target>
        </trans-unit>
        <trans-unit id="f7081ad41a53c8af225230c522a5266c56092e5e" translate="yes" xml:space="preserve">
          <source>Atomically loads the value of this &lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer&lt;/a&gt; using relaxed memory ordering. The value is not modified in any way, but note that there's no guarantee that it remains so.</source>
          <target state="translated">완화 된 메모리 순서를 사용 하여이 &lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer&lt;/a&gt; 의 값을 원자 적으로로드합니다 . 값은 어떤 식 으로든 수정되지 않지만 그 값이 그대로 유지된다는 보장은 없습니다.</target>
        </trans-unit>
        <trans-unit id="130b6d95050e9b7c2405561c3e5d460bb604614b" translate="yes" xml:space="preserve">
          <source>Atomically loads the value of this &lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer&lt;/a&gt; using the &quot;Acquire&quot; memory ordering. The value is not modified in any way, but note that there's no guarantee that it remains so.</source>
          <target state="translated">&quot;Acquire&quot;메모리 순서를 사용 하여이 &lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer&lt;/a&gt; 의 값을 원자 적으로로드합니다 . 값은 어떤 식 으로든 수정되지 않지만 그 값이 그대로 유지된다는 보장은 없습니다.</target>
        </trans-unit>
        <trans-unit id="acb94368cb5719416863f8c2367679c67c6ea331" translate="yes" xml:space="preserve">
          <source>Atomically post-decrements the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns the old value of this atomic.</source>
          <target state="translated">이 &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; 의 값을 원자 적으로 사후 감소시킵니다 . 이 아토믹의 이전 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="793812097d2bfb8c79328c7076cfcdc46657e936" translate="yes" xml:space="preserve">
          <source>Atomically post-increments the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns the old value of this atomic.</source>
          <target state="translated">이 &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; 의 값을 원자 적으로 사후 증가 시킵니다 . 이 아토믹의 이전 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d69ff82cc5d52f41982a8e0e67bfcb57d12a14c4" translate="yes" xml:space="preserve">
          <source>Atomically pre-decrements the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns the new value of this atomic.</source>
          <target state="translated">이 &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; 의 값을 원자 적으로 사전 감소시킵니다 . 이 아토믹의 새로운 값을 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="3954772cbeafee10706db508a27dcf1f5609cfe8" translate="yes" xml:space="preserve">
          <source>Atomically pre-increments the value of this &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;. Returns the new value of this atomic.</source>
          <target state="translated">이 &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; 의 값을 원자 적으로 사전 증가 시킵니다 . 이 아토믹의 새로운 값을 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="64206ad6e584ead7f08fdbf0296423b524ea37a4" translate="yes" xml:space="preserve">
          <source>Atomically stores the</source>
          <target state="translated">원자 적으로</target>
        </trans-unit>
        <trans-unit id="d28e1e1cc0c7d44ae7312f7a38a54f527c3baed2" translate="yes" xml:space="preserve">
          <source>Atomically stores the other value into this atomic type using a sequentially consistent memory ordering if possible; or &quot;Release&quot; ordering if not. This function returns a reference to this object.</source>
          <target state="translated">가능한 경우 순차적으로 일관된 메모리 순서를 사용하여 다른 값을이 원자 유형에 원자 적으로 저장합니다. 그렇지 않으면 &quot;출시&quot;주문. 이 함수는이 객체에 대한 참조를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="22cd0cbd81dee9dcd227285a4fb456261af24ea4" translate="yes" xml:space="preserve">
          <source>Atomics</source>
          <target state="translated">Atomics</target>
        </trans-unit>
        <trans-unit id="5207af8927557bdcee58799743343132b7a7e7d5" translate="yes" xml:space="preserve">
          <source>Attach a &lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt; video</source>
          <target state="translated">&lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt; 비디오 첨부</target>
        </trans-unit>
        <trans-unit id="f92e2f9fb2a11868b1807469619b32fb101a2841" translate="yes" xml:space="preserve">
          <source>Attach a &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt; video</source>
          <target state="translated">&lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt; 비디오 첨부</target>
        </trans-unit>
        <trans-unit id="d028067fa5f7a29797abf3e4197287917862fb4d" translate="yes" xml:space="preserve">
          <source>Attach the resulting type library as a binary resource to the server binary (again using the &lt;a href=&quot;activeqt-idc&quot;&gt;idc&lt;/a&gt; tool)</source>
          <target state="translated">결과 유형 라이브러리를 2 진 자원으로 서버 2 진에 첨부하십시오 ( &lt;a href=&quot;activeqt-idc&quot;&gt;idc&lt;/a&gt; 도구를 사용하여 )</target>
        </trans-unit>
        <trans-unit id="c298cc70af343c92bf071f6572d614dfd62dfa08" translate="yes" xml:space="preserve">
          <source>Attached ApplicationWindow Properties</source>
          <target state="translated">첨부 된 ApplicationWindow 속성</target>
        </trans-unit>
        <trans-unit id="9e4fd54e1f2cc2bae6fec6c2a9e32fae40754136" translate="yes" xml:space="preserve">
          <source>Attached Method Documentation</source>
          <target state="translated">첨부 된 방법 문서</target>
        </trans-unit>
        <trans-unit id="150bd1743209960f075ac0a1c57b68376f08c65c" translate="yes" xml:space="preserve">
          <source>Attached Methods</source>
          <target state="translated">첨부 된 방법</target>
        </trans-unit>
        <trans-unit id="3faba1cfe32a7f1b852cba99a63d5fe50092912f" translate="yes" xml:space="preserve">
          <source>Attached Properties</source>
          <target state="translated">첨부 된 속성</target>
        </trans-unit>
        <trans-unit id="80c902d12435291598f929f48b279385ca0a3b0d" translate="yes" xml:space="preserve">
          <source>Attached Properties and Attached Signal Handlers</source>
          <target state="translated">연결된 속성 및 연결된 신호 처리기</target>
        </trans-unit>
        <trans-unit id="bfcbfa74913c6275568001ba926cb2704e3623dd" translate="yes" xml:space="preserve">
          <source>Attached Property Documentation</source>
          <target state="translated">첨부 된 부동산 문서</target>
        </trans-unit>
        <trans-unit id="bb8b9dfdee571ec3e9f3e3ba64654906472d2254" translate="yes" xml:space="preserve">
          <source>Attached Signal Documentation</source>
          <target state="translated">첨부 된 신호 문서</target>
        </trans-unit>
        <trans-unit id="902d56ee4a25e198b3af081354e87bcf103345dd" translate="yes" xml:space="preserve">
          <source>Attached Signals</source>
          <target state="translated">첨부 된 신호</target>
        </trans-unit>
        <trans-unit id="acf29ce1d3e96304b4cb38421631b2162f2216d9" translate="yes" xml:space="preserve">
          <source>Attached Tool Tips</source>
          <target state="translated">첨부 된 툴 팁</target>
        </trans-unit>
        <trans-unit id="388c36c1ff81f7e8e3b22aeb32eba62b658c2e70" translate="yes" xml:space="preserve">
          <source>Attached properties</source>
          <target state="translated">첨부 된 속성</target>
        </trans-unit>
        <trans-unit id="37afe77cd72cd5e6db95e24e548bb2b97dbc77ed" translate="yes" xml:space="preserve">
          <source>Attached signal handlers</source>
          <target state="translated">연결된 신호 처리기</target>
        </trans-unit>
        <trans-unit id="9992fec490f826b162fce6589018884313693832" translate="yes" xml:space="preserve">
          <source>Attached signal handlers allow objects to be notified of particular signals that are significant to each individual object. If there was no &lt;code&gt;Component.onCompleted&lt;/code&gt; attached signal handler, for example, an object could not receive this notification without registering for some special signal from some special object. The</source>
          <target state="translated">연결된 신호 처리기를 사용하면 각 개별 객체에 중요한 특정 신호를 객체에 알릴 수 있습니다. 예를 들어 &lt;code&gt;Component.onCompleted&lt;/code&gt; 연결된 신호 처리기 가없는 경우 개체가 특정 개체의 일부 특수 신호를 등록하지 않으면이 알림을받을 수 없습니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="303a08095e165219a3a523d9c8272527e650f836" translate="yes" xml:space="preserve">
          <source>Attaches the axis specified by</source>
          <target state="translated">로 지정된 축을 연결합니다</target>
        </trans-unit>
        <trans-unit id="d6147383a9edc19ffbb89414d19965ec36061611" translate="yes" xml:space="preserve">
          <source>Attaches the given</source>
          <target state="translated">주어진 첨부</target>
        </trans-unit>
        <trans-unit id="8ca7c853d5101c3e585dc0c3c844b74cc739c298" translate="yes" xml:space="preserve">
          <source>Attaches the legend to a chart. The chart may adjust the layout of the legend.</source>
          <target state="translated">범례를 차트에 첨부합니다. 차트는 범례의 레이아웃을 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f743a992bb1f15351f352fa10936d767f1629c6" translate="yes" xml:space="preserve">
          <source>Attaches the toolbar to</source>
          <target state="translated">툴바를</target>
        </trans-unit>
        <trans-unit id="ad9d9b178174db92c91a2b908169bad8da80b5b7" translate="yes" xml:space="preserve">
          <source>Attaches to the media</source>
          <target state="translated">미디어에 부착</target>
        </trans-unit>
        <trans-unit id="19df2ced91da2b546054955930b5d1c8b0dfa81d" translate="yes" xml:space="preserve">
          <source>Attaching ScrollBar to a Flickable</source>
          <target state="translated">Flickable에 ScrollBar 연결</target>
        </trans-unit>
        <trans-unit id="9b6a70298d0609d1a540e191745cea169e5e464d" translate="yes" xml:space="preserve">
          <source>Attaching ScrollIndicator to a Flickable</source>
          <target state="translated">Flickable에 ScrollIndicator 연결</target>
        </trans-unit>
        <trans-unit id="8dead67aed25f8fd7485d49ecb1f92385f2f1b68" translate="yes" xml:space="preserve">
          <source>Attaching a &lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt; to a &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; allows it to display the video or image output of that media object. A &lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt; is attached to a media object by passing a pointer to the &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; to the &lt;a href=&quot;qmediabindableinterface#setMediaObject&quot;&gt;setMediaObject&lt;/a&gt;() function.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem&lt;/a&gt; 을 &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject에&lt;/a&gt; 첨부하면 해당 미디어 객체의 비디오 또는 이미지 출력을 표시 할 수 있습니다. &lt;a href=&quot;qgraphicsvideoitem&quot;&gt;QGraphicsVideoItem가&lt;/a&gt; 받는 포인터 전달하여 미디어 객체에 부착 &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject을&lt;/a&gt; 받는 &lt;a href=&quot;qmediabindableinterface#setMediaObject&quot;&gt;setMediaObject&lt;/a&gt; () 함수.</target>
        </trans-unit>
        <trans-unit id="1ab6ec34b5c35567c9a11420e8c2fe1d4d8f4d71" translate="yes" xml:space="preserve">
          <source>Attaching a &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt; to a &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; allows it to display the video or image output of that media object. A &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt; is attached to media object by passing a pointer to the &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; in its constructor, and detached by destroying the &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget&lt;/a&gt;.</source>
          <target state="translated">부착 &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget를&lt;/a&gt; (A)에 &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject하는&lt;/a&gt; 것이 그 미디어 객체의 비디오 또는 이미지 출력을 표시 할 수있다. &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget가&lt;/a&gt; 받는 포인터를 통과하여 매체 객체에 부착 &lt;a href=&quot;qmediaobject&quot;&gt;QMediaObject&lt;/a&gt; 그 생성자 및 파괴하여 분리 &lt;a href=&quot;qvideowidget&quot;&gt;QVideoWidget를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="44226621a09bb5065e011430e6963bfb12de805f" translate="yes" xml:space="preserve">
          <source>Attaching the type library corrupted the server binary. This is a bug in Windows and happens only with release builds.</source>
          <target state="translated">형식 라이브러리를 연결하면 서버 바이너리가 손상되었습니다. 이것은 Windows의 버그이며 릴리스 빌드에서만 발생합니다.</target>
        </trans-unit>
        <trans-unit id="83a56249e5cff48f561d2d725143f1fc2eb3228c" translate="yes" xml:space="preserve">
          <source>Attachment</source>
          <target state="translated">Attachment</target>
        </trans-unit>
        <trans-unit id="c03f026fdabc6f9b4fe12426c35aa115f291994c" translate="yes" xml:space="preserve">
          <source>Attempt to decode as much as possible. For individual components of the URL, this decodes every percent encoding sequence, including control characters (U+0000 to U+001F) and UTF-8 sequences found in percent-encoded form. Use of this mode may cause data loss, see below for more information.</source>
          <target state="translated">가능한 한 디코딩을 시도하십시오. URL의 개별 구성 요소의 경우 제어 문자 (U + 0000 ~ U + 001F) 및 퍼센트 인코딩 형식으로 발견 된 UTF-8 시퀀스를 포함하여 모든 퍼센트 인코딩 시퀀스를 디코딩합니다. 이 모드를 사용하면 데이터가 손실 될 수 있습니다. 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6cbd30766494fc0c81dd3665e03daf07ea2f5b9a" translate="yes" xml:space="preserve">
          <source>Attempt to read or write from socket returned an error</source>
          <target state="translated">소켓에서 읽거나 쓰려고 시도 할 때 오류가 발생했습니다</target>
        </trans-unit>
        <trans-unit id="2ca8deb77959d3489a3621ae5b4c85fb80a51a31" translate="yes" xml:space="preserve">
          <source>Attempting to change the current value to one outside the minimum-maximum range has no effect on the current value.</source>
          <target state="translated">현재 값을 최소 최대 범위 밖의 값으로 변경하려고 시도해도 현재 값에는 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5fc50e04abe6136b0423ada277c77dfdbbdae74f" translate="yes" xml:space="preserve">
          <source>Attempting to declare two methods or signals with the same name in the same type block is an error. However, a new method may reuse the name of an existing method on the type. (This should be done with caution, as the existing method may be hidden and become inaccessible.)</source>
          <target state="translated">같은 타입의 블록에서 같은 이름을 가진 두 개의 메소드 나 신호를 선언하려고하면 오류가 발생합니다. 그러나 새 메소드는 유형에서 기존 메소드의 이름을 재사용 할 수 있습니다. 기존 방법이 숨겨져 서 액세스 할 수 없게되므로주의해서 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="d751bf4cf79d2324b7c47ae29a36cee6fba89adb" translate="yes" xml:space="preserve">
          <source>Attempting to declare two signals or methods with the same name in the same type block is an error. However, a new signal may reuse the name of an existing signal on the type. (This should be done with caution, as the existing signal may be hidden and become inaccessible.)</source>
          <target state="translated">같은 타입의 블록에서 같은 이름을 가진 두 개의 신호 나 메소드를 선언하려고하면 오류가 발생합니다. 그러나 새 신호는 해당 유형의 기존 신호 이름을 재사용 할 수 있습니다. (기존 신호가 숨겨져 서 액세스 할 수 없게되므로주의해서 수행해야합니다.)</target>
        </trans-unit>
        <trans-unit id="c494aed263b98d8bd4e561a02eef380289d346c8" translate="yes" xml:space="preserve">
          <source>Attempting to set the alignment to an illegal flag combination does nothing.</source>
          <target state="translated">정렬을 잘못된 플래그 조합으로 설정하려고 시도해도 아무런 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="e9e83912432691a95cd6de5d400fbd6735883fb9" translate="yes" xml:space="preserve">
          <source>Attempting to unlock a lock that is not locked is an error, and will result in program termination.</source>
          <target state="translated">잠기지 않은 잠금을 잠금 해제하려고하면 오류가 발생하여 프로그램이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="40cb55c77af0f0fee8442a7bfdc705c6c9fa98ef" translate="yes" xml:space="preserve">
          <source>Attempts to add a new title record with title</source>
          <target state="translated">제목이있는 새 제목 레코드를 추가하려고합니다.</target>
        </trans-unit>
        <trans-unit id="a49a83143477bbe2aaa9b15d293b1789f54894b6" translate="yes" xml:space="preserve">
          <source>Attempts to add a title record</source>
          <target state="translated">타이틀 레코드 추가 시도</target>
        </trans-unit>
        <trans-unit id="75b78f9bfc8e0845fc6d273185083fbc75433f18" translate="yes" xml:space="preserve">
          <source>Attempts to allocate memory for at least</source>
          <target state="translated">최소한 메모리 할당 시도</target>
        </trans-unit>
        <trans-unit id="41717baad4c663f1fc92137bc64da06ff1152682" translate="yes" xml:space="preserve">
          <source>Attempts to attach the process to the shared memory segment identified by the key that was passed to the constructor or to a call to &lt;a href=&quot;qsharedmemory#setKey&quot;&gt;setKey&lt;/a&gt;() or &lt;a href=&quot;qsharedmemory#setNativeKey&quot;&gt;setNativeKey&lt;/a&gt;(). The access</source>
          <target state="translated">생성자에게 전달 된 키 또는 &lt;a href=&quot;qsharedmemory#setKey&quot;&gt;setKey&lt;/a&gt; () 또는 &lt;a href=&quot;qsharedmemory#setNativeKey&quot;&gt;setNativeKey&lt;/a&gt; () 에 대한 호출로 식별 된 공유 메모리 세그먼트에 프로세스를 첨부하려고 합니다 . 액세스</target>
        </trans-unit>
        <trans-unit id="64511e88279ff80ccaed16800d807495ab3d55ba" translate="yes" xml:space="preserve">
          <source>Attempts to close the socket. If there is pending data waiting to be written &lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt; will enter &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;ClosingState&lt;/a&gt; and wait until all data has been written. Eventually, it will enter &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt; and emit the &lt;a href=&quot;qbluetoothsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;() signal.</source>
          <target state="translated">소켓을 닫으려고합니다. 쓰기 대기중인 데이터가있는 경우 &lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt; 은 &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;ClosingState에&lt;/a&gt; 들어가 모든 데이터가 작성 될 때까지 기다립니다. 결국, 이는 입력한다 &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;UnconnectedState를&lt;/a&gt; 상기 발광 &lt;a href=&quot;qbluetoothsocket#disconnected&quot;&gt;끊긴&lt;/a&gt; () 신호.</target>
        </trans-unit>
        <trans-unit id="b14c101853294961a9915ce2a73be7191c42b775" translate="yes" xml:space="preserve">
          <source>Attempts to close the socket. If there is pending data waiting to be written, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; will enter &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ClosingState&lt;/a&gt; and wait until all data has been written. Eventually, it will enter &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt; and emit the &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;() signal.</source>
          <target state="translated">소켓을 닫으려고합니다. 쓰기 대기중인 데이터가있는 경우 &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; 은 &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ClosingState에&lt;/a&gt; 들어가 모든 데이터가 작성 될 때까지 기다립니다. 결국, 이는 입력한다 &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;UnconnectedState를&lt;/a&gt; 상기 발광 &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;끊긴&lt;/a&gt; () 신호.</target>
        </trans-unit>
        <trans-unit id="0cd1c41157c1d345e418d08f0ddd434ac79fa257" translate="yes" xml:space="preserve">
          <source>Attempts to close the socket. If there is pending data waiting to be written, &lt;a href=&quot;qlocalsocket&quot;&gt;QLocalSocket&lt;/a&gt; will enter &lt;a href=&quot;qlocalsocket#LocalSocketState-enum&quot;&gt;ClosingState&lt;/a&gt; and wait until all data has been written. Eventually, it will enter &lt;a href=&quot;qlocalsocket#LocalSocketState-enum&quot;&gt;UnconnectedState&lt;/a&gt; and emit the disconnectedFromServer() signal.</source>
          <target state="translated">소켓을 닫으려고합니다. 쓰기 대기중인 데이터가있는 경우 &lt;a href=&quot;qlocalsocket&quot;&gt;QLocalSocket&lt;/a&gt; 은 &lt;a href=&quot;qlocalsocket#LocalSocketState-enum&quot;&gt;ClosingState에&lt;/a&gt; 들어가 모든 데이터가 작성 될 때까지 기다립니다. 결국 &lt;a href=&quot;qlocalsocket#LocalSocketState-enum&quot;&gt;UnconnectedState로&lt;/a&gt; 들어가 disconnectedFromServer () 신호를 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="9916f61f2e95462623791d2de738f69eec08995b" translate="yes" xml:space="preserve">
          <source>Attempts to connect to the service described by</source>
          <target state="translated">에 의해 설명 된 서비스에 연결을 시도합니다</target>
        </trans-unit>
        <trans-unit id="88bd2a20888118107b44b77e054ae21e0dc25925" translate="yes" xml:space="preserve">
          <source>Attempts to create a texture view onto this texture. A texture view is somewhat analogous to a view in SQL in that it presents a restricted or reinterpreted view of the original data. Texture views do not allocate any more server-side storage, insted relying on the storage buffer of the source texture.</source>
          <target state="translated">이 텍스처에 텍스처 뷰를 작성하려고합니다. 텍스처 뷰는 원본 데이터의 제한된 뷰 또는 해석 된 뷰를 제공한다는 점에서 SQL의 뷰와 다소 유사합니다. 텍스처 뷰는 소스 텍스처의 스토리지 버퍼에 의존하여 더 이상 서버 측 스토리지를 할당하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a5135f0e103c8d9400561f2d503910a4bc82cff5" translate="yes" xml:space="preserve">
          <source>Attempts to create the OpenGL context with the current configuration.</source>
          <target state="translated">현재 구성으로 OpenGL 컨텍스트를 작성하려고합니다.</target>
        </trans-unit>
        <trans-unit id="b79e8ad7521f57df617cbd803646947bba56a32b" translate="yes" xml:space="preserve">
          <source>Attempts to create the lock file. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another process (or another thread) has created the lock file already, this function will wait for at most</source>
          <target state="translated">잠금 파일을 작성하려고합니다. 잠금이 확보되면 이 함수는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 다른 프로세스 (또는 다른 스레드)가 이미 잠금 파일을 작성한 경우이 함수는 최대 대기합니다.</target>
        </trans-unit>
        <trans-unit id="1007b5514cb8c7a3d4bf7da1cf7389f0861c2fc5" translate="yes" xml:space="preserve">
          <source>Attempts to delete this object's property of the given</source>
          <target state="translated">주어진이 객체의 속성을 삭제하려고 시도</target>
        </trans-unit>
        <trans-unit id="decebf66e3192ac44c25be7fc03e4031b12d88d2" translate="yes" xml:space="preserve">
          <source>Attempts to demarshall the contents of</source>
          <target state="translated">의 내용을 demarshall하려고합니다</target>
        </trans-unit>
        <trans-unit id="e933c7654c609a16b70a849f0259c88d1f226b37" translate="yes" xml:space="preserve">
          <source>Attempts to evaluate the query and returns the results in the</source>
          <target state="translated">검색어 평가를 시도하고 결과를</target>
        </trans-unit>
        <trans-unit id="b93aafd2c488fbd4f7028d8928d462f6f573c83f" translate="yes" xml:space="preserve">
          <source>Attempts to find a match backwards in</source>
          <target state="translated">에서 뒤로 일치하는 항목을 찾으려고합니다</target>
        </trans-unit>
        <trans-unit id="ccea7bbd5134887c359bf2454e1a7bdaf25db03e" translate="yes" xml:space="preserve">
          <source>Attempts to find a match in</source>
          <target state="translated">에서 일치하는 것을 찾으려고 시도</target>
        </trans-unit>
        <trans-unit id="8d399c1dfc647f9aec0390f27281e7ea7daa7a29" translate="yes" xml:space="preserve">
          <source>Attempts to forcefully remove an existing lock file.</source>
          <target state="translated">기존 잠금 파일을 강제로 제거하려고합니다.</target>
        </trans-unit>
        <trans-unit id="7ce1b4b5c465ce608a87c1b2bd26a5811a578030" translate="yes" xml:space="preserve">
          <source>Attempts to get the current position and emit &lt;a href=&quot;qgeopositioninfosource#positionUpdated&quot;&gt;positionUpdated&lt;/a&gt;() with this information. If the current position cannot be found within the given</source>
          <target state="translated">이 정보를 사용 하여 현재 위치를 가져오고 &lt;a href=&quot;qgeopositioninfosource#positionUpdated&quot;&gt;positionUpdated&lt;/a&gt; () 를 내 보냅니다 . 주어진 위치에서 현재 위치를 찾을 수없는 경우</target>
        </trans-unit>
        <trans-unit id="6d134c0b9da77afde32ce31bce2c2918299f81a4" translate="yes" xml:space="preserve">
          <source>Attempts to get the current satellite information and emit &lt;a href=&quot;qgeosatelliteinfosource#satellitesInViewUpdated&quot;&gt;satellitesInViewUpdated&lt;/a&gt;() and &lt;a href=&quot;qgeosatelliteinfosource#satellitesInUseUpdated&quot;&gt;satellitesInUseUpdated&lt;/a&gt;() with this information. If the current satellite information cannot be found within the given</source>
          <target state="translated">이 정보를 사용하여 현재 위성 정보를 가져오고 &lt;a href=&quot;qgeosatelliteinfosource#satellitesInViewUpdated&quot;&gt;satellitesInViewUpdated&lt;/a&gt; () 및 &lt;a href=&quot;qgeosatelliteinfosource#satellitesInUseUpdated&quot;&gt;satellitesInUseUpdated&lt;/a&gt; ()를 방출하려고합니다 . 주어진 위성에서 현재 위성 정보를 찾을 수없는 경우</target>
        </trans-unit>
        <trans-unit id="c661d770bd92fabd6239ee47e0bdabc00a179fe5" translate="yes" xml:space="preserve">
          <source>Attempts to lock for reading. If the lock was obtained, this function returns &lt;code&gt;true&lt;/code&gt;, otherwise it returns &lt;code&gt;false&lt;/code&gt; instead of waiting for the lock to become available, i.e. it does not block.</source>
          <target state="translated">읽기 위해 잠금을 시도합니다. 잠금을 얻은 경우이 함수는 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 , 그렇지 않으면 잠금을 사용할 수있을 때까지 기다리지 않고 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="1a88fb80382d1217416d7e840e918cf20b354b6e" translate="yes" xml:space="preserve">
          <source>Attempts to lock for reading. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another thread has locked for writing, this function will wait for at most</source>
          <target state="translated">읽기 위해 잠금을 시도합니다. 잠금이 확보되면 이 함수는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 다른 스레드가 쓰기를 위해 잠긴 경우이 함수는 최대 대기합니다</target>
        </trans-unit>
        <trans-unit id="cf2470f484acf6d1012c9c2ef2b5aa8b479942c2" translate="yes" xml:space="preserve">
          <source>Attempts to lock for writing. If the lock was obtained, this function returns &lt;code&gt;true&lt;/code&gt;; otherwise, it returns &lt;code&gt;false&lt;/code&gt; immediately.</source>
          <target state="translated">쓰기 위해 잠금을 시도합니다. 잠금이 확보되면이 함수는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 즉시 &lt;code&gt;false&lt;/code&gt; 를 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="7d129c86a278c6f36b5ce06526519d0734d9305e" translate="yes" xml:space="preserve">
          <source>Attempts to lock for writing. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another thread has locked for reading or writing, this function will wait for at most</source>
          <target state="translated">쓰기 위해 잠금을 시도합니다. 잠금이 확보되면 이 함수는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 다른 스레드가 읽기 또는 쓰기를 위해 잠긴 경우이 기능은 최대 대기합니다</target>
        </trans-unit>
        <trans-unit id="9851042db5ee3d962c0e65a9574ee566e3b802f8" translate="yes" xml:space="preserve">
          <source>Attempts to lock the mutex. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">뮤텍스를 잠그려고 시도합니다. 잠금이 확보되면 이 함수는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b54242a9aaaa9390b8315d197dfc5e23adc00c96" translate="yes" xml:space="preserve">
          <source>Attempts to lock the mutex. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another thread has locked the mutex, this function will wait at least until</source>
          <target state="translated">뮤텍스를 잠그려고 시도합니다. 잠금이 확보되면 이 함수는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 다른 스레드가 뮤텍스를 잠근 경우이 함수는 최소한</target>
        </trans-unit>
        <trans-unit id="103992881af09741dd2a74bdd8c2881ef04d0de6" translate="yes" xml:space="preserve">
          <source>Attempts to lock the mutex. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another thread has locked the mutex, this function will wait for at least</source>
          <target state="translated">뮤텍스를 잠그려고 시도합니다. 잠금이 확보되면 이 함수는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 다른 스레드가 뮤텍스를 잠근 경우이 함수는 최소한 기다립니다.</target>
        </trans-unit>
        <trans-unit id="0c0e3bf6432ce7cc59a4892d1e1402cde84f85c9" translate="yes" xml:space="preserve">
          <source>Attempts to lock the mutex. This function returns &lt;code&gt;true&lt;/code&gt; if the lock was obtained; otherwise it returns &lt;code&gt;false&lt;/code&gt;. If another thread has locked the mutex, this function will wait for at most</source>
          <target state="translated">뮤텍스를 잠그려고 시도합니다. 잠금이 확보되면 이 함수는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 . 다른 스레드가 뮤텍스를 잠근 경우이 함수는 최대 대기합니다</target>
        </trans-unit>
        <trans-unit id="e1cb921a9773a0e3cb28330bf381ade1b5f5db2d" translate="yes" xml:space="preserve">
          <source>Attempts to make a connection to</source>
          <target state="translated">에 연결을 시도</target>
        </trans-unit>
        <trans-unit id="99e61f7fb0798c2e70b54a7fb64150be665b1a4d" translate="yes" xml:space="preserve">
          <source>Attempts to make a connection to &lt;a href=&quot;qlocalsocket#serverName&quot;&gt;serverName&lt;/a&gt;(). &lt;a href=&quot;qlocalsocket#setServerName&quot;&gt;setServerName&lt;/a&gt;() must be called before you open the connection. Alternatively you can use connectToServer(const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp;name, &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt;&lt;a href=&quot;qiodevice#openMode&quot;&gt;openMode&lt;/a&gt;);</source>
          <target state="translated">&lt;a href=&quot;qlocalsocket#serverName&quot;&gt;serverName&lt;/a&gt; ()에 연결을 시도합니다 . 연결을 열기 전에 &lt;a href=&quot;qlocalsocket#setServerName&quot;&gt;setServerName&lt;/a&gt; ()을 호출해야합니다. 또는 connectToServer (const &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; &amp;amp; name, &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;OpenMode &lt;/a&gt;&lt;a href=&quot;qiodevice#openMode&quot;&gt;openMode&lt;/a&gt; )를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d1467e681088cb474f58c2843b2c55e1b6c057e5" translate="yes" xml:space="preserve">
          <source>Attempts to make a connection to the service identified by</source>
          <target state="translated">로 식별 된 서비스에 연결을 시도합니다.</target>
        </trans-unit>
        <trans-unit id="0a29c67e1524a0c689e5acb8ba6c9a244b1553ed" translate="yes" xml:space="preserve">
          <source>Attempts to make a connection with</source>
          <target state="translated">연결 시도</target>
        </trans-unit>
        <trans-unit id="3c9e3f8d7f41891e3dd9b073506b0acef887099f" translate="yes" xml:space="preserve">
          <source>Attempts to match the regular expression against the given</source>
          <target state="translated">주어진 정규 표현식과 정규 표현식을 일치 시키려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="199c89b542aa478a5fa190747ea0f479710986f8" translate="yes" xml:space="preserve">
          <source>Attempts to merge this command with</source>
          <target state="translated">이 명령을</target>
        </trans-unit>
        <trans-unit id="3f8cb926a2a676e8deb6f8891853236af8c54288" translate="yes" xml:space="preserve">
          <source>Attempts to open the specified &lt;code&gt;target&lt;/code&gt; url in an external application, based on the user's desktop preferences. Returns true if it succeeds, and false otherwise.</source>
          <target state="translated">사용자의 데스크탑 환경 설정에 따라 외부 애플리케이션에서 지정된 &lt;code&gt;target&lt;/code&gt; URL 을 열려고 시도합니다 . 성공하면 true를, 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6b71a6b8e24475e656383f1eb601022febdb5466" translate="yes" xml:space="preserve">
          <source>Attempts to perform a global match of the regular expression against the given</source>
          <target state="translated">주어진 정규 표현식에 대해 전체 정규 일치를 수행하려고합니다.</target>
        </trans-unit>
        <trans-unit id="9e19969ea4102dfc32af2b95d7cfe00304c63846" translate="yes" xml:space="preserve">
          <source>Attempts to read a buffer from the decoder, without blocking. Returns invalid buffer if there are no decoded buffers available, or on error.</source>
          <target state="translated">차단하지 않고 디코더에서 버퍼를 읽으려고 시도합니다. 사용 가능한 디코딩 된 버퍼가 없거나 오류가 발생하면 유효하지 않은 버퍼를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="670d36fb9755e6a0b702b6f1e33679b28e4e6152" translate="yes" xml:space="preserve">
          <source>Attempts to register the</source>
          <target state="translated">등록을 시도합니다</target>
        </trans-unit>
        <trans-unit id="cddf114bca27d7c29aa865e757e1a437c1e25fe6" translate="yes" xml:space="preserve">
          <source>Attempts to register the requested service, but do not try to replace it if another application already has it registered. Instead, simply put this application in queue, until it is given up. The &lt;a href=&quot;qdbusconnectioninterface#serviceRegistered&quot;&gt;serviceRegistered&lt;/a&gt;() signal will be emitted when that happens.</source>
          <target state="translated">요청한 서비스를 등록하려고 시도하지만 다른 응용 프로그램에 이미 등록 된 경우 교체하지 마십시오. 대신,이 응용 프로그램은 포기 될 때까지 대기열에 넣습니다. &lt;a href=&quot;qdbusconnectioninterface#serviceRegistered&quot;&gt;serviceRegistered&lt;/a&gt; 그렇게되면 () 신호를 방출한다.</target>
        </trans-unit>
        <trans-unit id="f2b74e4114e69652b3992fc01f39f461b14f78e5" translate="yes" xml:space="preserve">
          <source>Attempts to remove a title record with locale</source>
          <target state="translated">로케일로 제목 레코드를 제거하려고합니다.</target>
        </trans-unit>
        <trans-unit id="82cbc15d0be68a7a78605443ef53d19a8213c78a" translate="yes" xml:space="preserve">
          <source>Attempts to remove the icon record</source>
          <target state="translated">아이콘 레코드 제거 시도</target>
        </trans-unit>
        <trans-unit id="4cb9a4d74dba9e00fa899b614fac66cc8f2f9bfe" translate="yes" xml:space="preserve">
          <source>Attempts to remove the icon record with type</source>
          <target state="translated">유형이있는 아이콘 레코드를 제거하려고합니다.</target>
        </trans-unit>
        <trans-unit id="0fb0d400d4a26ed57afecebd971943ed09efeb83" translate="yes" xml:space="preserve">
          <source>Attempts to remove the specified</source>
          <target state="translated">지정된 제거 시도</target>
        </trans-unit>
        <trans-unit id="12126a205886d0344e790e10215c18688e51e51f" translate="yes" xml:space="preserve">
          <source>Attempts to remove the title record</source>
          <target state="translated">제목 레코드를 제거하려고합니다</target>
        </trans-unit>
        <trans-unit id="0c33a64cf188b3a0d62ad7fc2529abc93b373402" translate="yes" xml:space="preserve">
          <source>Attempts to reserve a thread to run</source>
          <target state="translated">실행할 스레드 예약을 시도합니다</target>
        </trans-unit>
        <trans-unit id="64f145a00700926a58301a1d1bfc05bfa6c811f9" translate="yes" xml:space="preserve">
          <source>Attempts to terminate the process.</source>
          <target state="translated">프로세스 종료를 시도합니다.</target>
        </trans-unit>
        <trans-unit id="2df234e38b53a6b85ab548b0f180e7f029345963" translate="yes" xml:space="preserve">
          <source>Attenuation factor is calculated as below:</source>
          <target state="translated">감쇠 계수는 다음과 같이 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="09ad0179f653d81ba82ebd5e6c304d2ba9661515" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse (QML type)</source>
          <target state="translated">AttenuationModelInverse (QML 유형)</target>
        </trans-unit>
        <trans-unit id="ce89ccd0582bca1e1fc517efde91f8aeb75cf3e7" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse QML Type</source>
          <target state="translated">감쇠 모델 역 QML 유형</target>
        </trans-unit>
        <trans-unit id="c8d22061e6bb72bae9090fae777f3aea070b6641" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse.end</source>
          <target state="translated">AttenuationModelInverse.end</target>
        </trans-unit>
        <trans-unit id="266a29a9f12223908aaa4bbd5935ee21a3f41418" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse.name</source>
          <target state="translated">AttenuationModelInverse.name</target>
        </trans-unit>
        <trans-unit id="d86aea538c0ada6639b238773dead9a47b8fe335" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse.rolloff</source>
          <target state="translated">AttenuationModelInverse.rolloff</target>
        </trans-unit>
        <trans-unit id="6bb671e72bb2861d1af041541e0b48c8935c54b8" translate="yes" xml:space="preserve">
          <source>AttenuationModelInverse.start</source>
          <target state="translated">AttenuationModelInverse.start</target>
        </trans-unit>
        <trans-unit id="b05e207d203b95883d220de8646e6c56a3d90057" translate="yes" xml:space="preserve">
          <source>AttenuationModelLinear (QML type)</source>
          <target state="translated">AttenuationModelLinear (QML 유형)</target>
        </trans-unit>
        <trans-unit id="60f353471e9c991e94cc0fae75ecd0e90354af2e" translate="yes" xml:space="preserve">
          <source>AttenuationModelLinear QML Type</source>
          <target state="translated">감쇠 모델 선형 QML 유형</target>
        </trans-unit>
        <trans-unit id="82b657d75de2579616f22d7ba172386048e8c8bd" translate="yes" xml:space="preserve">
          <source>AttenuationModelLinear.end</source>
          <target state="translated">AttenuationModelLinear.end</target>
        </trans-unit>
        <trans-unit id="42f4c1e185f05e010f031ba39647493e2323fa4f" translate="yes" xml:space="preserve">
          <source>AttenuationModelLinear.name</source>
          <target state="translated">AttenuationModelLinear.name</target>
        </trans-unit>
        <trans-unit id="1806984104313153d03add27475b3c0f86426d25" translate="yes" xml:space="preserve">
          <source>AttenuationModelLinear.start</source>
          <target state="translated">AttenuationModelLinear.start</target>
        </trans-unit>
        <trans-unit id="30f3de5d0f4d3d3444d01af4ba6d6b47140da0b9" translate="yes" xml:space="preserve">
          <source>Attibute changes when any other service attribute is added, deleted or modified.</source>
          <target state="translated">다른 서비스 속성이 추가, 삭제 또는 수정되면 Attibute가 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="296f046445dbe582b91f5aa136868365544ef00c" translate="yes" xml:space="preserve">
          <source>Attractor (QML type)</source>
          <target state="translated">어 트랙터 (QML 타입)</target>
        </trans-unit>
        <trans-unit id="6424677894dc22d22b25d8d17084b49e81b998ac" translate="yes" xml:space="preserve">
          <source>Attractor QML Type</source>
          <target state="translated">어 트랙터 QML 유형</target>
        </trans-unit>
        <trans-unit id="37e91bdd60c4c6d50a3df710ed09f06a581d07c9" translate="yes" xml:space="preserve">
          <source>Attractor.Acceleration</source>
          <target state="translated">Attractor.Acceleration</target>
        </trans-unit>
        <trans-unit id="3450f62291cb4940a34a0eb2583dda39ee0a8006" translate="yes" xml:space="preserve">
          <source>Attractor.Constant</source>
          <target state="translated">Attractor.Constant</target>
        </trans-unit>
        <trans-unit id="523c31ea9a46e9394e0c97eca30413df375af83b" translate="yes" xml:space="preserve">
          <source>Attractor.InverseLinear</source>
          <target state="translated">Attractor.InverseLinear</target>
        </trans-unit>
        <trans-unit id="550f4308046218c9d3997b7a1095de56a6bef398" translate="yes" xml:space="preserve">
          <source>Attractor.InverseQuadratic</source>
          <target state="translated">Attractor.InverseQuadratic</target>
        </trans-unit>
        <trans-unit id="eef61e37501774843c8a62fd051143c6aaee899b" translate="yes" xml:space="preserve">
          <source>Attractor.Linear</source>
          <target state="translated">Attractor.Linear</target>
        </trans-unit>
        <trans-unit id="b769d90573cbe30f194df15d878d14f75f263699" translate="yes" xml:space="preserve">
          <source>Attractor.Position</source>
          <target state="translated">Attractor.Position</target>
        </trans-unit>
        <trans-unit id="299bf07566b49ce0997d38501136b507e8c16f6e" translate="yes" xml:space="preserve">
          <source>Attractor.Quadratic</source>
          <target state="translated">Attractor.Quadratic</target>
        </trans-unit>
        <trans-unit id="427cc833289066553dd79e0e28d4749ca5bc4070" translate="yes" xml:space="preserve">
          <source>Attractor.Velocity</source>
          <target state="translated">Attractor.Velocity</target>
        </trans-unit>
        <trans-unit id="4c87b9b41fb26d8f52a9706ac5181e6eb8b6b77f" translate="yes" xml:space="preserve">
          <source>Attractor.affectedParameter</source>
          <target state="translated">Attractor.affectedParameter</target>
        </trans-unit>
        <trans-unit id="7a1b7d6854a28d0edaa4635ca87a1f0dade8f683" translate="yes" xml:space="preserve">
          <source>Attractor.proportionalToDistance</source>
          <target state="translated">Attractor.proportionalToDistance</target>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="ccc5cf4a1d9e54a958908f4ae2479773cc555b20" translate="yes" xml:space="preserve">
          <source>Attribute (QML type)</source>
          <target state="translated">속성 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="fe462099fbeb57d289ce57cd51b118b84d30152b" translate="yes" xml:space="preserve">
          <source>Attribute Class</source>
          <target state="translated">속성 클래스</target>
        </trans-unit>
        <trans-unit id="75ea40b4d4d812c5a6cc40ab6740ed2f0ffffecf" translate="yes" xml:space="preserve">
          <source>Attribute Node</source>
          <target state="translated">속성 노드</target>
        </trans-unit>
        <trans-unit id="bb1ec77d2af9d172537986d4c44c207dd6b101fe" translate="yes" xml:space="preserve">
          <source>Attribute Nodes</source>
          <target state="translated">속성 노드</target>
        </trans-unit>
        <trans-unit id="c3b5ca640bea37921e1d4fcc6cfcf47b830e2c76" translate="yes" xml:space="preserve">
          <source>Attribute QML Type</source>
          <target state="translated">속성 QML 유형</target>
        </trans-unit>
        <trans-unit id="b75fbc526e507c536f15818a635fabc424d8bb9f" translate="yes" xml:space="preserve">
          <source>Attribute Struct</source>
          <target state="translated">속성 구조</target>
        </trans-unit>
        <trans-unit id="9f4f7e4e3b34c76cbba2b04d073edb6d2fe857a8" translate="yes" xml:space="preserve">
          <source>Attribute Types</source>
          <target state="translated">속성 유형</target>
        </trans-unit>
        <trans-unit id="c934b9aa0ce3e9181f546dd3f2f1c3c3122aef7f" translate="yes" xml:space="preserve">
          <source>Attribute codes for &lt;a href=&quot;qbluetoothtransferrequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt; and &lt;a href=&quot;qbluetoothtransferreply&quot;&gt;QBluetoothTransferReply&lt;/a&gt;.</source>
          <target state="translated">에 대한 속성 코드 &lt;a href=&quot;qbluetoothtransferrequest&quot;&gt;QBluetoothTransferRequest&lt;/a&gt; 및 &lt;a href=&quot;qbluetoothtransferreply&quot;&gt;QBluetoothTransferReply&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a0acd5562d8332a5210e9cd9fd1780c7a7e346ef" translate="yes" xml:space="preserve">
          <source>Attribute codes for the &lt;a href=&quot;qnetworkrequest&quot;&gt;QNetworkRequest&lt;/a&gt; and &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt;.</source>
          <target state="translated">에 대한 속성 코드 &lt;a href=&quot;qnetworkrequest&quot;&gt;QNetworkRequest&lt;/a&gt; 및 &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f836508c2fb47e8d7e608a9c9a617b59d23ac7a6" translate="yes" xml:space="preserve">
          <source>Attribute protocol UUID</source>
          <target state="translated">속성 프로토콜 UUID</target>
        </trans-unit>
        <trans-unit id="9bdefcbfbf5c315c26fce867e5c029439ea81fd1" translate="yes" xml:space="preserve">
          <source>Attribute::Attribute(&lt;a href=&quot;qinputmethodevent#AttributeType-enum&quot;&gt;AttributeType&lt;/a&gt;</source>
          <target state="translated">Attribute::Attribute(&lt;a href=&quot;qinputmethodevent#AttributeType-enum&quot;&gt;AttributeType&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9bbf89753a05176fba5ab45059f847ee3b49ce26" translate="yes" xml:space="preserve">
          <source>Attribute::create()</source>
          <target state="translated">Attribute::create()</target>
        </trans-unit>
        <trans-unit id="4ec68433220a996a291d7abae73f2f65290d791a" translate="yes" xml:space="preserve">
          <source>Attribute::createWithAttributeType()</source>
          <target state="translated">Attribute::createWithAttributeType()</target>
        </trans-unit>
        <trans-unit id="b75a077312c8345d35851cf8e5f1bd3719959ae8" translate="yes" xml:space="preserve">
          <source>AttributeSet Struct</source>
          <target state="translated">특성 집합 구조</target>
        </trans-unit>
        <trans-unit id="5a918eacf77c88cdbb1cc9b8fa49436644e5a6fc" translate="yes" xml:space="preserve">
          <source>Attributes are extra meta-data that are used to control the behavior of the request and to pass further information from the reply back to the application. Attributes are also extensible, allowing custom implementations to pass custom values.</source>
          <target state="translated">속성은 요청의 동작을 제어하고 추가 정보를 회신에서 애플리케이션으로 다시 전달하는 데 사용되는 추가 메타 데이터입니다. 속성도 확장 가능하므로 사용자 정의 구현이 사용자 정의 값을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c81d1b952a40253bd4ee2fbac757715587dc33f" translate="yes" xml:space="preserve">
          <source>Attributes are returned by a &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; in &lt;a href=&quot;qxmlstreamreader#attributes&quot;&gt;attributes()&lt;/a&gt; when the reader reports a &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;start element&lt;/a&gt;. The class can also be used with a &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; as an argument to &lt;a href=&quot;qxmlstreamwriter#writeAttributes&quot;&gt;writeAttributes()&lt;/a&gt;.</source>
          <target state="translated">리더가 &lt;a href=&quot;qxmlstreamreader#TokenType-enum&quot;&gt;시작 요소를&lt;/a&gt; 보고 할 때 &lt;a href=&quot;qxmlstreamreader#attributes&quot;&gt;attributes ()&lt;/a&gt; 의 &lt;a href=&quot;qxmlstreamreader&quot;&gt;QXmlStreamReader&lt;/a&gt; 가 속성을 리턴합니다 . 이 클래스는 &lt;a href=&quot;qxmlstreamwriter&quot;&gt;QXmlStreamWriter&lt;/a&gt; 와 함께 &lt;a href=&quot;qxmlstreamwriter#writeAttributes&quot;&gt;writeAttributes ()&lt;/a&gt; 의 인수로 사용될 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fc8f36e82eac647fe22f284d2df1a924c673bc26" translate="yes" xml:space="preserve">
          <source>Attributes for which &lt;a href=&quot;qdomattr#specified&quot;&gt;QDomAttr::specified&lt;/a&gt;() is true are also imported, other attributes are not imported. If</source>
          <target state="translated">하는 속성 &lt;a href=&quot;qdomattr#specified&quot;&gt;QDomAttr이 :: 지정은&lt;/a&gt; ()도 수입 사실, 다른 속성은 가져 오지 않습니다. 만약</target>
        </trans-unit>
        <trans-unit id="9c35b055942db90e595b2a9f7832e56c4fefa4a1" translate="yes" xml:space="preserve">
          <source>Attributes in Object Declarations</source>
          <target state="translated">객체 선언의 속성</target>
        </trans-unit>
        <trans-unit id="42ae1ca911f09da25705c803e802dc66807bb214" translate="yes" xml:space="preserve">
          <source>Attributes of the &lt;code&gt;&amp;lt;ui&amp;gt;&lt;/code&gt; tag:</source>
          <target state="translated">&lt;code&gt;&amp;lt;ui&amp;gt;&lt;/code&gt; 태그 의 속성 :</target>
        </trans-unit>
        <trans-unit id="5d0e697c5f98e73026bf71edfa6226e1708d59ff" translate="yes" xml:space="preserve">
          <source>Attributes that declare namespaces (i.e. the attribute</source>
          <target state="translated">네임 스페이스를 선언하는 속성 (예 : 속성)</target>
        </trans-unit>
        <trans-unit id="0038b89e1b24bd41bd084d172a1fb895246dfe89" translate="yes" xml:space="preserve">
          <source>Attributes which are not specifically set will not affect the font selection algorithm, and default values will be preferred instead.</source>
          <target state="translated">특별히 설정되지 않은 속성은 글꼴 선택 알고리즘에 영향을 미치지 않으며 대신 기본값이 선호됩니다.</target>
        </trans-unit>
        <trans-unit id="a4d81396d4ea19197dfceaa774ef776332674285" translate="yes" xml:space="preserve">
          <source>Attribution</source>
          <target state="translated">Attribution</target>
        </trans-unit>
        <trans-unit id="7b647fe7f6d07531f44e887242ee0bcb549d7597" translate="yes" xml:space="preserve">
          <source>Attribution text which must be displayed when displaying the editorial.</source>
          <target state="translated">광고 문안을 표시 할 때 표시되어야하는 속성 텍스트.</target>
        </trans-unit>
        <trans-unit id="88df49eb25d5fb6c67ccecf800b4a9109a91bfb0" translate="yes" xml:space="preserve">
          <source>Attribution text which must be displayed when displaying the image.</source>
          <target state="translated">이미지를 표시 할 때 표시해야하는 속성 텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="22d2e726f6a53b1a760afeb7573e4972ac54b136" translate="yes" xml:space="preserve">
          <source>Attribution text which must be displayed when displaying the review.</source>
          <target state="translated">리뷰를 표시 할 때 표시해야하는 속성 텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="acdac205f5e24cb75113c4b281a2c13f08b75159" translate="yes" xml:space="preserve">
          <source>Audio</source>
          <target state="translated">Audio</target>
        </trans-unit>
        <trans-unit id="a7dc566772d0eb2736f817b9153166b4af101dc8" translate="yes" xml:space="preserve">
          <source>Audio (QML type)</source>
          <target state="translated">오디오 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="d7016e7c193553ab435a13fc9be640f5aeb430f7" translate="yes" xml:space="preserve">
          <source>Audio Overview</source>
          <target state="translated">오디오 개요</target>
        </trans-unit>
        <trans-unit id="7fef1324817460a4d153dfcd0886fabb6a0e2171" translate="yes" xml:space="preserve">
          <source>Audio QML Type</source>
          <target state="translated">오디오 QML 유형</target>
        </trans-unit>
        <trans-unit id="4c937bc7a554ea29bd7b4e0c8bf6151575f0600c" translate="yes" xml:space="preserve">
          <source>Audio and Video Codecs</source>
          <target state="translated">오디오 및 비디오 코덱</target>
        </trans-unit>
        <trans-unit id="82e35f426c0bee9fdae0ab9c5ae45d32d607f51c" translate="yes" xml:space="preserve">
          <source>Audio attributes</source>
          <target state="translated">오디오 속성</target>
        </trans-unit>
        <trans-unit id="1f6b31f833ca0369e9443bb43e9565fd9219c228" translate="yes" xml:space="preserve">
          <source>Audio capture devices, such as microphones.</source>
          <target state="translated">마이크와 같은 오디오 캡처 장치</target>
        </trans-unit>
        <trans-unit id="5c5c23de36b942469e47171328a4a32d1528d728" translate="yes" xml:space="preserve">
          <source>Audio data is being processed, this state is set after start() is called and while audio data is available to be processed.</source>
          <target state="translated">오디오 데이터가 처리되고 있으며,이 상태는 start ()가 호출 된 후 오디오 데이터를 처리 할 수있는 동안 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="209f6075d5e8e049519ea62f2fe16d087c632489" translate="yes" xml:space="preserve">
          <source>Audio data is not being fed to the audio device at a fast enough rate</source>
          <target state="translated">오디오 데이터가 충분한 속도로 오디오 장치에 공급되지 않습니다</target>
        </trans-unit>
        <trans-unit id="515a711e89f9d57b5922003c3e2fc908c1e1dc29" translate="yes" xml:space="preserve">
          <source>Audio feedback.</source>
          <target state="translated">오디오 피드백.</target>
        </trans-unit>
        <trans-unit id="1426e62896abd1290f70cb3c22e0e6c78f967490" translate="yes" xml:space="preserve">
          <source>Audio output volume: from 0.0 (silent) to 1.0 (maximum)</source>
          <target state="translated">오디오 출력 음량 : 0.0 (자동) ~ 1.0 (최대)</target>
        </trans-unit>
        <trans-unit id="ea96cac1f52cce651db3af56aec8c7df8d5888f0" translate="yes" xml:space="preserve">
          <source>Audio stream.</source>
          <target state="translated">오디오 스트림.</target>
        </trans-unit>
        <trans-unit id="14ae2bc082d57b7bce69bb7383fb22924348c87a" translate="yes" xml:space="preserve">
          <source>Audio.audioRole</source>
          <target state="translated">Audio.audioRole</target>
        </trans-unit>
        <trans-unit id="fe495e1b3a94a274d2f600645542d4ae12896ba5" translate="yes" xml:space="preserve">
          <source>Audio.autoLoad</source>
          <target state="translated">Audio.autoLoad</target>
        </trans-unit>
        <trans-unit id="3f2f5c670f017fd4f2ed0e4b7c73b32da8f82682" translate="yes" xml:space="preserve">
          <source>Audio.autoPlay</source>
          <target state="translated">Audio.autoPlay</target>
        </trans-unit>
        <trans-unit id="cef050f730d6d1ede632fdecad6d6b6c627e5ae6" translate="yes" xml:space="preserve">
          <source>Audio.availability</source>
          <target state="translated">Audio.availability</target>
        </trans-unit>
        <trans-unit id="9e1ae1731b54dbc698a38ae19e7bec41bf3105d6" translate="yes" xml:space="preserve">
          <source>Audio.bufferProgress</source>
          <target state="translated">Audio.bufferProgress</target>
        </trans-unit>
        <trans-unit id="60ff0d2426c87c4717a71a2a6fa331a300006206" translate="yes" xml:space="preserve">
          <source>Audio.customAudioRole</source>
          <target state="translated">Audio.customAudioRole</target>
        </trans-unit>
        <trans-unit id="497123a6ebc816ed877d00ecdf06af2057e8b50b" translate="yes" xml:space="preserve">
          <source>Audio.duration</source>
          <target state="translated">Audio.duration</target>
        </trans-unit>
        <trans-unit id="76d693f55f22c3a69402e1b172872fa2226e7378" translate="yes" xml:space="preserve">
          <source>Audio.error</source>
          <target state="translated">Audio.error</target>
        </trans-unit>
        <trans-unit id="bc259981484e31706e7b5b8022cb1c1b433bb42b" translate="yes" xml:space="preserve">
          <source>Audio.error()</source>
          <target state="translated">Audio.error()</target>
        </trans-unit>
        <trans-unit id="e3cd1d110a5e944233bd361cc299667d0428095b" translate="yes" xml:space="preserve">
          <source>Audio.errorString</source>
          <target state="translated">Audio.errorString</target>
        </trans-unit>
        <trans-unit id="6b7c7838c26f7db5bcae41a4467e0d29b2d24b45" translate="yes" xml:space="preserve">
          <source>Audio.groupmetaData.title</source>
          <target state="translated">Audio.groupmetaData.title</target>
        </trans-unit>
        <trans-unit id="a095be85d0fbec28b81dd99a7be67bca54ae5272" translate="yes" xml:space="preserve">
          <source>Audio.hasAudio</source>
          <target state="translated">Audio.hasAudio</target>
        </trans-unit>
        <trans-unit id="8cfdd4d28ac430708cfb7af93ebf904ec893e562" translate="yes" xml:space="preserve">
          <source>Audio.hasVideo</source>
          <target state="translated">Audio.hasVideo</target>
        </trans-unit>
        <trans-unit id="a9323ba5af8964166a47e5044cd402fbcf082efe" translate="yes" xml:space="preserve">
          <source>Audio.loops</source>
          <target state="translated">Audio.loops</target>
        </trans-unit>
        <trans-unit id="d8309dab28cef9b379ac0d35caf8cf310709bfde" translate="yes" xml:space="preserve">
          <source>Audio.mediaObject</source>
          <target state="translated">Audio.mediaObject</target>
        </trans-unit>
        <trans-unit id="6c3c72eee168065edaf864e46370dcb11936a4aa" translate="yes" xml:space="preserve">
          <source>Audio.muted</source>
          <target state="translated">Audio.muted</target>
        </trans-unit>
        <trans-unit id="403fcb13f7256e638d63e3715f34eccdfbb8a1fc" translate="yes" xml:space="preserve">
          <source>Audio.notifyInterval</source>
          <target state="translated">Audio.notifyInterval</target>
        </trans-unit>
        <trans-unit id="6d733b889602e22bcf797e5fe2e62acc9feb294f" translate="yes" xml:space="preserve">
          <source>Audio.pause()</source>
          <target state="translated">Audio.pause()</target>
        </trans-unit>
        <trans-unit id="91012afdd13ffc49383aba56847cd400a01a5460" translate="yes" xml:space="preserve">
          <source>Audio.paused()</source>
          <target state="translated">Audio.paused()</target>
        </trans-unit>
        <trans-unit id="663d9b04672f8f13b360ed542e814ab48c1a4a8b" translate="yes" xml:space="preserve">
          <source>Audio.play()</source>
          <target state="translated">Audio.play()</target>
        </trans-unit>
        <trans-unit id="62eb1265d0c18b526c2ffc28c5654f74bc4e1c2e" translate="yes" xml:space="preserve">
          <source>Audio.playbackRate</source>
          <target state="translated">Audio.playbackRate</target>
        </trans-unit>
        <trans-unit id="c6367e644e0d158e8217b287787b424fef5e0859" translate="yes" xml:space="preserve">
          <source>Audio.playbackState</source>
          <target state="translated">Audio.playbackState</target>
        </trans-unit>
        <trans-unit id="933fda413ba480969e06092392531ecec79ca63e" translate="yes" xml:space="preserve">
          <source>Audio.playbackStateChanged()</source>
          <target state="translated">Audio.playbackStateChanged()</target>
        </trans-unit>
        <trans-unit id="e468eecfbee118d6ddb238a67cdc81c48ccf43d9" translate="yes" xml:space="preserve">
          <source>Audio.playing()</source>
          <target state="translated">Audio.playing()</target>
        </trans-unit>
        <trans-unit id="332e525e4e361867a2b8e9ec7cfc3af8feac3419" translate="yes" xml:space="preserve">
          <source>Audio.playlist</source>
          <target state="translated">Audio.playlist</target>
        </trans-unit>
        <trans-unit id="9400c6af650d1dc9c95fcb3e6b57ebb6e3a56d6d" translate="yes" xml:space="preserve">
          <source>Audio.position</source>
          <target state="translated">Audio.position</target>
        </trans-unit>
        <trans-unit id="f66e6ee132fc5015582532632195fd3024f0399a" translate="yes" xml:space="preserve">
          <source>Audio.seek()</source>
          <target state="translated">Audio.seek()</target>
        </trans-unit>
        <trans-unit id="8b58755de12aed29183019d66f70741e14becd26" translate="yes" xml:space="preserve">
          <source>Audio.seekable</source>
          <target state="translated">Audio.seekable</target>
        </trans-unit>
        <trans-unit id="ca14124357a8b3426cba1d9db09bc952f22423ef" translate="yes" xml:space="preserve">
          <source>Audio.source</source>
          <target state="translated">Audio.source</target>
        </trans-unit>
        <trans-unit id="87c7adf361330f5648c3d9c262f2a66ba704665a" translate="yes" xml:space="preserve">
          <source>Audio.status</source>
          <target state="translated">Audio.status</target>
        </trans-unit>
        <trans-unit id="4b8f1b593a1ab764714704ba9ec2fc02d41ab53b" translate="yes" xml:space="preserve">
          <source>Audio.stop()</source>
          <target state="translated">Audio.stop()</target>
        </trans-unit>
        <trans-unit id="afc00b0e6ee90a6c57546caebd257bf586bca56e" translate="yes" xml:space="preserve">
          <source>Audio.stopped()</source>
          <target state="translated">Audio.stopped()</target>
        </trans-unit>
        <trans-unit id="3406df839d5c55d297ef73c7a109cd1c89111ccb" translate="yes" xml:space="preserve">
          <source>Audio.supportedAudioRoles()</source>
          <target state="translated">Audio.supportedAudioRoles()</target>
        </trans-unit>
        <trans-unit id="8f72de47027e6e994034d29fa1b976deb5f08795" translate="yes" xml:space="preserve">
          <source>Audio.volume</source>
          <target state="translated">Audio.volume</target>
        </trans-unit>
        <trans-unit id="5decd06bf8e616e1879544fe44bf97af3fa1e134" translate="yes" xml:space="preserve">
          <source>Audio/Video Control Transport Protocol UUID</source>
          <target state="translated">오디오 / 비디오 제어 전송 프로토콜 UUID</target>
        </trans-unit>
        <trans-unit id="c372d9c594ee32457e409f2794853dcbb973339e" translate="yes" xml:space="preserve">
          <source>Audio/Video Distribution Transport Protocol UUID</source>
          <target state="translated">오디오 / 비디오 배포 전송 프로토콜 UUID</target>
        </trans-unit>
        <trans-unit id="2e0b001b39efb0867dcc0e264a782b0249a2b04d" translate="yes" xml:space="preserve">
          <source>Audio/Video Remote Control Profile (AVRCP) UUID (service &amp;amp; profile)</source>
          <target state="translated">AVRCP (오디오 / 비디오 원격 제어 프로파일) UUID (서비스 및 프로파일)</target>
        </trans-unit>
        <trans-unit id="c3d1e040e6627e4e6ac4cb12a81a24bee1497d4d" translate="yes" xml:space="preserve">
          <source>Audio/Video Remote Control Profile (AVRCP) UUID (service)</source>
          <target state="translated">AVRCP (오디오 / 비디오 원격 제어 프로파일) UUID (서비스)</target>
        </trans-unit>
        <trans-unit id="fc1beb28de9f28bc0356cc58a5545e34f4e529e6" translate="yes" xml:space="preserve">
          <source>Audio/Video Remote Control Profile UUID (service)</source>
          <target state="translated">오디오 / 비디오 원격 제어 프로파일 UUID (서비스)</target>
        </trans-unit>
        <trans-unit id="f161ae61c892d2ea0241e169d612b03d8caeae97" translate="yes" xml:space="preserve">
          <source>AudioBitRate</source>
          <target state="translated">AudioBitRate</target>
        </trans-unit>
        <trans-unit id="7543bfd2e6a4581eaefe18f4555e78df03b4909d" translate="yes" xml:space="preserve">
          <source>AudioCategory (QML type)</source>
          <target state="translated">AudioCategory (QML 유형)</target>
        </trans-unit>
        <trans-unit id="e82123f9c1c5dcac17b93eb442519acb520a6eda" translate="yes" xml:space="preserve">
          <source>AudioCategory QML Type</source>
          <target state="translated">AudioCategory QML 유형</target>
        </trans-unit>
        <trans-unit id="a75f7c37be399131fc95476f6c3840f3be22beef" translate="yes" xml:space="preserve">
          <source>AudioCategory.name</source>
          <target state="translated">AudioCategory.name</target>
        </trans-unit>
        <trans-unit id="edf389023a74b61a6a8c0653c41377765b2b1f3f" translate="yes" xml:space="preserve">
          <source>AudioCategory.pause()</source>
          <target state="translated">AudioCategory.pause()</target>
        </trans-unit>
        <trans-unit id="58d0406145cad48cf9621f31805e3dd1c985670d" translate="yes" xml:space="preserve">
          <source>AudioCategory.stop()</source>
          <target state="translated">AudioCategory.stop()</target>
        </trans-unit>
        <trans-unit id="a7ad9f381c72e09926174fc7c3536f212c18e3da" translate="yes" xml:space="preserve">
          <source>AudioCategory.volume</source>
          <target state="translated">AudioCategory.volume</target>
        </trans-unit>
        <trans-unit id="61272d0a3123930b8bb89226efea6caebd1af833" translate="yes" xml:space="preserve">
          <source>AudioCodec</source>
          <target state="translated">AudioCodec</target>
        </trans-unit>
        <trans-unit id="0eff2798ed4add3fdd44dd8dee04ae036c6ce927" translate="yes" xml:space="preserve">
          <source>AudioEngine (QML type)</source>
          <target state="translated">AudioEngine (QML 유형)</target>
        </trans-unit>
        <trans-unit id="0dd68fc35ce487de94c1e48720e8a7543a05501c" translate="yes" xml:space="preserve">
          <source>AudioEngine QML Type</source>
          <target state="translated">AudioEngine QML 유형</target>
        </trans-unit>
        <trans-unit id="abc3dd7e6cf5ffe0c5e848c0962f82a9bf2c05bb" translate="yes" xml:space="preserve">
          <source>AudioEngine.addAttenuationModel()</source>
          <target state="translated">AudioEngine.addAttenuationModel()</target>
        </trans-unit>
        <trans-unit id="ecda478c8cbbf8acda4ef76c3541c2515967f1c6" translate="yes" xml:space="preserve">
          <source>AudioEngine.addAudioCategory()</source>
          <target state="translated">AudioEngine.addAudioCategory()</target>
        </trans-unit>
        <trans-unit id="b3ed0854576d78bab7cd09ee7377cca3011b9953" translate="yes" xml:space="preserve">
          <source>AudioEngine.addAudioSample()</source>
          <target state="translated">AudioEngine.addAudioSample()</target>
        </trans-unit>
        <trans-unit id="086a2aa1326321e50fee5e7235632c6ec3ad0259" translate="yes" xml:space="preserve">
          <source>AudioEngine.addSound()</source>
          <target state="translated">AudioEngine.addSound()</target>
        </trans-unit>
        <trans-unit id="6809e8476cc16282d512e31445be24933dd4e3af" translate="yes" xml:space="preserve">
          <source>AudioEngine.categories</source>
          <target state="translated">AudioEngine.categories</target>
        </trans-unit>
        <trans-unit id="144c87694d48f04dddbc7e3dc799b96b687f655a" translate="yes" xml:space="preserve">
          <source>AudioEngine.dopplerFactor</source>
          <target state="translated">AudioEngine.dopplerFactor</target>
        </trans-unit>
        <trans-unit id="94c9ac9a2b28948bf88cebb25e4229d6fd47fbde" translate="yes" xml:space="preserve">
          <source>AudioEngine.finishedLoading()</source>
          <target state="translated">AudioEngine.finishedLoading()</target>
        </trans-unit>
        <trans-unit id="64e535a598e2a57ff979161c577e8f5d088efdfb" translate="yes" xml:space="preserve">
          <source>AudioEngine.isLoadingChanged()</source>
          <target state="translated">AudioEngine.isLoadingChanged()</target>
        </trans-unit>
        <trans-unit id="9ca764394a8f2a8a81bd9bb905bf61f61fe0eb68" translate="yes" xml:space="preserve">
          <source>AudioEngine.listener</source>
          <target state="translated">AudioEngine.listener</target>
        </trans-unit>
        <trans-unit id="0db9cde1d7ceb8df8432df7e5f90ef51e961167e" translate="yes" xml:space="preserve">
          <source>AudioEngine.liveInstanceCountChanged()</source>
          <target state="translated">AudioEngine.liveInstanceCountChanged()</target>
        </trans-unit>
        <trans-unit id="a3c780c8685f4ae94cbc366c23da62c5bb21cd0e" translate="yes" xml:space="preserve">
          <source>AudioEngine.liveInstances</source>
          <target state="translated">AudioEngine.liveInstances</target>
        </trans-unit>
        <trans-unit id="88f82e43cbd231a76e4e5e286b7af3fdd2cdc3f8" translate="yes" xml:space="preserve">
          <source>AudioEngine.loading</source>
          <target state="translated">AudioEngine.loading</target>
        </trans-unit>
        <trans-unit id="3eafc6185deae73e78947e584fb199ded6111e2e" translate="yes" xml:space="preserve">
          <source>AudioEngine.ready()</source>
          <target state="translated">AudioEngine.ready()</target>
        </trans-unit>
        <trans-unit id="d18f598be844ac08e14c23bc228f025b11d3784f" translate="yes" xml:space="preserve">
          <source>AudioEngine.samples</source>
          <target state="translated">AudioEngine.samples</target>
        </trans-unit>
        <trans-unit id="e74d8427b95136f8fdea57244e12eca46350d834" translate="yes" xml:space="preserve">
          <source>AudioEngine.sounds</source>
          <target state="translated">AudioEngine.sounds</target>
        </trans-unit>
        <trans-unit id="6b2018c1f51763fb309bd535727e578e9ee03f2e" translate="yes" xml:space="preserve">
          <source>AudioEngine.speedOfSound</source>
          <target state="translated">AudioEngine.speedOfSound</target>
        </trans-unit>
        <trans-unit id="4b682bed9f7b034f73f1a2096eb1f36aff816bc7" translate="yes" xml:space="preserve">
          <source>AudioListener (QML type)</source>
          <target state="translated">AudioListener (QML 유형)</target>
        </trans-unit>
        <trans-unit id="65dc0356ed096e404aafff20c5b87f483ada9c16" translate="yes" xml:space="preserve">
          <source>AudioListener QML Type</source>
          <target state="translated">AudioListener QML 유형</target>
        </trans-unit>
        <trans-unit id="515771c3c41723e245d7d934e9859700951bbfb3" translate="yes" xml:space="preserve">
          <source>AudioListener.direction</source>
          <target state="translated">AudioListener.direction</target>
        </trans-unit>
        <trans-unit id="1000f5b8a2dbc1e11a18ce120efccdd5e340f415" translate="yes" xml:space="preserve">
          <source>AudioListener.engine</source>
          <target state="translated">AudioListener.engine</target>
        </trans-unit>
        <trans-unit id="2770bc287fd302ad98542ee08c00537f67b6616d" translate="yes" xml:space="preserve">
          <source>AudioListener.gain</source>
          <target state="translated">AudioListener.gain</target>
        </trans-unit>
        <trans-unit id="5160714d0b8e93accfc09dccb33c97631b753992" translate="yes" xml:space="preserve">
          <source>AudioListener.position</source>
          <target state="translated">AudioListener.position</target>
        </trans-unit>
        <trans-unit id="fe48b2a64a143dce5a9d0e40f9bdda534b6552f3" translate="yes" xml:space="preserve">
          <source>AudioListener.up</source>
          <target state="translated">AudioListener.up</target>
        </trans-unit>
        <trans-unit id="57796a4b5e5ee9fd4ab4553faaf1bc3736071b27" translate="yes" xml:space="preserve">
          <source>AudioListener.velocity</source>
          <target state="translated">AudioListener.velocity</target>
        </trans-unit>
        <trans-unit id="32458668a2f05309e8729a3f02fb5e76812427a3" translate="yes" xml:space="preserve">
          <source>AudioSample (QML type)</source>
          <target state="translated">오디오 샘플 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="2edbd5fa319b7a4229c9bff88f7111faf89fcc1a" translate="yes" xml:space="preserve">
          <source>AudioSample QML Type</source>
          <target state="translated">오디오 샘플 QML 유형</target>
        </trans-unit>
        <trans-unit id="5cfce10d346107b7e2456f97dc30bd15320b8bbe" translate="yes" xml:space="preserve">
          <source>AudioSample.load()</source>
          <target state="translated">AudioSample.load()</target>
        </trans-unit>
        <trans-unit id="7de1401602ec630ddba05e035e3c05e1a956f893" translate="yes" xml:space="preserve">
          <source>AudioSample.loaded</source>
          <target state="translated">AudioSample.loaded</target>
        </trans-unit>
        <trans-unit id="0050d1df722f31ae5a5a96c8f59ece60d3a166ca" translate="yes" xml:space="preserve">
          <source>AudioSample.loadedChanged()</source>
          <target state="translated">AudioSample.loadedChanged()</target>
        </trans-unit>
        <trans-unit id="603a2b34848e804c9cd847916169ce2d7c5949a9" translate="yes" xml:space="preserve">
          <source>AudioSample.name</source>
          <target state="translated">AudioSample.name</target>
        </trans-unit>
        <trans-unit id="aa74e77095549b2d4d1f1f90bbe143bf3f2f6466" translate="yes" xml:space="preserve">
          <source>AudioSample.preloaded</source>
          <target state="translated">AudioSample.preloaded</target>
        </trans-unit>
        <trans-unit id="3a70b21332f28afcb7ed41a7560047a9284be222" translate="yes" xml:space="preserve">
          <source>AudioSample.source</source>
          <target state="translated">AudioSample.source</target>
        </trans-unit>
        <trans-unit id="06214410aa495b30a65a8c0466cc2b1a67e75659" translate="yes" xml:space="preserve">
          <source>August (7)</source>
          <target state="translated">8 월 (7)</target>
        </trans-unit>
        <trans-unit id="43833b0ea01c6c5d5bae05c4a3af7717056f2b0f" translate="yes" xml:space="preserve">
          <source>Authentication data for pre shared keys (PSK) ciphersuites</source>
          <target state="translated">사전 공유 키 (PSK) 암호 모음의 인증 데이터</target>
        </trans-unit>
        <trans-unit id="9e63fb08fd99ec22d7e865e2889168232a8b8858" translate="yes" xml:space="preserve">
          <source>Authentication details provided to QNetworkAccessManager::authenticationRequired() must be provided immediately, so this signal cannot be connected as a &lt;a href=&quot;qt#ConnectionType-enum&quot;&gt;Qt::QueuedConnection&lt;/a&gt; (or as the default &lt;a href=&quot;qt#ConnectionType-enum&quot;&gt;Qt::AutoConnection&lt;/a&gt; from another thread).</source>
          <target state="translated">QNetworkAccessManager :: authenticationRequired ()에 제공된 인증 세부 사항을 즉시 제공해야하므로이 신호를 &lt;a href=&quot;qt#ConnectionType-enum&quot;&gt;Qt :: QueuedConnection&lt;/a&gt; (또는 다른 스레드 의 기본 &lt;a href=&quot;qt#ConnectionType-enum&quot;&gt;Qt :: AutoConnection)&lt;/a&gt; 으로 연결할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="13b52210e5e437015dcea177d45621ef6f42e51d" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest (QML type)</source>
          <target state="translated">AuthenticationDialogRequest (QML 유형)</target>
        </trans-unit>
        <trans-unit id="cd362f081c9d484cf38a7d7427a60daacdf46e0d" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest QML Type</source>
          <target state="translated">AuthenticationDialogRequest QML 유형</target>
        </trans-unit>
        <trans-unit id="bb137a48fe744b55a6c2e34197e71c9183bea5e7" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest.accepted</source>
          <target state="translated">AuthenticationDialogRequest.accepted</target>
        </trans-unit>
        <trans-unit id="414f809330c35b841039beed59458e6481dcc3d6" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest.dialogAccept()</source>
          <target state="translated">AuthenticationDialogRequest.dialogAccept()</target>
        </trans-unit>
        <trans-unit id="cbcc327266c5795c4cefde5b61be5ee574ff2677" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest.dialogReject()</source>
          <target state="translated">AuthenticationDialogRequest.dialogReject()</target>
        </trans-unit>
        <trans-unit id="2f8b523e2405cfdaeda9591f89ddd33b5f283637" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest.proxyHost</source>
          <target state="translated">AuthenticationDialogRequest.proxyHost</target>
        </trans-unit>
        <trans-unit id="d00ee7f6d99ba97884e0d801ff37dd8f6e4e2eb2" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest.realm</source>
          <target state="translated">AuthenticationDialogRequest.realm</target>
        </trans-unit>
        <trans-unit id="207a688472a8924b905f175de4566f715e2ebe54" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest.type</source>
          <target state="translated">AuthenticationDialogRequest.type</target>
        </trans-unit>
        <trans-unit id="db56b27ba5b48a1725df767f37dc66d353d1696d" translate="yes" xml:space="preserve">
          <source>AuthenticationDialogRequest.url</source>
          <target state="translated">AuthenticationDialogRequest.url</target>
        </trans-unit>
        <trans-unit id="5fda23d62015b99fb2a9f86b38bcdf2bdf7609c8" translate="yes" xml:space="preserve">
          <source>Author</source>
          <target state="translated">Author</target>
        </trans-unit>
        <trans-unit id="54f4165a5563bb8ace4876f41367e6620edc5f00" translate="yes" xml:space="preserve">
          <source>Authorization Server</source>
          <target state="translated">인증 서버</target>
        </trans-unit>
        <trans-unit id="210c2a477516d97a77920658ddd25595b7ce4d5b" translate="yes" xml:space="preserve">
          <source>Authorizes the given</source>
          <target state="translated">주어진 권한을 부여합니다</target>
        </trans-unit>
        <trans-unit id="c614ba7c453cdcd4d21b20e8286c6266c891e0c6" translate="yes" xml:space="preserve">
          <source>Auto</source>
          <target state="translated">Auto</target>
        </trans-unit>
        <trans-unit id="b9473d62b0cf047552f281305949cb419b07f11a" translate="yes" xml:space="preserve">
          <source>Auto white balance mode.</source>
          <target state="translated">자동 화이트 밸런스 모드.</target>
        </trans-unit>
        <trans-unit id="2212e9c51ee569c538028db48e03ff0176bd6b94" translate="yes" xml:space="preserve">
          <source>Auto-Connection</source>
          <target state="translated">Auto-Connection</target>
        </trans-unit>
        <trans-unit id="2ea3b13dcb5ecf75d6febc8df9eba601328f7187" translate="yes" xml:space="preserve">
          <source>Auto-completion of incomplete URLs with &lt;a href=&quot;https://www.iana.org/assignments/uri-schemes/prov/view-source#&quot;&gt;view-source URI scheme&lt;/a&gt; makes the usage of this feature more comfortable. For example, the following incomplete URL also loads the source view of the qt.io web page:</source>
          <target state="translated">&lt;a href=&quot;https://www.iana.org/assignments/uri-schemes/prov/view-source#&quot;&gt;뷰 소스 URI 체계를&lt;/a&gt; 사용하여 불완전한 URL을 자동 완성 하면이 기능을보다 편리하게 사용할 수 있습니다. 예를 들어, 다음 불완전한 URL은 qt.io 웹 페이지의 소스 뷰도로드합니다.</target>
        </trans-unit>
        <trans-unit id="52a7249dc999583af21182315f8e31b6d87b0493" translate="yes" xml:space="preserve">
          <source>Auto-remove is on by default.</source>
          <target state="translated">자동 제거는 기본적으로 켜져 있습니다.</target>
        </trans-unit>
        <trans-unit id="e06976bf50d386316359206a19dc4a1d53fcc3c2" translate="yes" xml:space="preserve">
          <source>Auto-repeat interval for spinbox key presses.</source>
          <target state="translated">스핀 박스 키 누름에 대한 자동 반복 간격.</target>
        </trans-unit>
        <trans-unit id="de5122dd1083528e05034f04e22571bb18aa6981" translate="yes" xml:space="preserve">
          <source>Auto-repeat interval for spinbox mouse clicks.</source>
          <target state="translated">스핀 박스 마우스 클릭에 대한 자동 반복 간격.</target>
        </trans-unit>
        <trans-unit id="a8fa189582dfc401e62ab0e0133416e4f3856ab4" translate="yes" xml:space="preserve">
          <source>Auto-repeat or not.</source>
          <target state="translated">자동 반복 여부.</target>
        </trans-unit>
        <trans-unit id="c47797cc87062a821944593a2f1b079d411d9bec" translate="yes" xml:space="preserve">
          <source>Auto-repeat threshold for spinbox mouse clicks.</source>
          <target state="translated">스핀 박스 마우스 클릭에 대한 자동 반복 임계 값.</target>
        </trans-unit>
        <trans-unit id="3462e7ba4f3549f14a0eb0b4da5b86a0b1853779" translate="yes" xml:space="preserve">
          <source>AutoCloseSessionTimeout</source>
          <target state="translated">AutoCloseSessionTimeout</target>
        </trans-unit>
        <trans-unit id="5acc8f895a92298ade69dc724b9e3762325c6c67" translate="yes" xml:space="preserve">
          <source>Autodesk FBX</source>
          <target state="translated">Autodesk FBX</target>
        </trans-unit>
        <trans-unit id="872fb4f5a75e8d811d8f59fa79530fa005f0725b" translate="yes" xml:space="preserve">
          <source>Automatic Clipping</source>
          <target state="translated">자동 클리핑</target>
        </trans-unit>
        <trans-unit id="e813eea5386fdaa0523579c33919a33b23d26dd8" translate="yes" xml:space="preserve">
          <source>Automatic Connections</source>
          <target state="translated">자동 연결</target>
        </trans-unit>
        <trans-unit id="8b947b2d5d02bca2382a545fb478a84922836443" translate="yes" xml:space="preserve">
          <source>Automatic Detection of File Extension</source>
          <target state="translated">파일 확장자 자동 감지</target>
        </trans-unit>
        <trans-unit id="e4d12a00bf7a292934c2f1002bbda1b30db2009c" translate="yes" xml:space="preserve">
          <source>Automatic Replies</source>
          <target state="translated">자동 회신</target>
        </trans-unit>
        <trans-unit id="e6f1d9a359797848c122857ef2907a4d624d7ed3" translate="yes" xml:space="preserve">
          <source>Automatic aspect ratio.</source>
          <target state="translated">자동 종횡비.</target>
        </trans-unit>
        <trans-unit id="6e600b567344ea6c1b9f8d1fe4abcb966f197489" translate="yes" xml:space="preserve">
          <source>Automatic capitalization and space insertion.</source>
          <target state="translated">자동 대문자 및 공간 삽입.</target>
        </trans-unit>
        <trans-unit id="ce4b03898162fc0bdf5e44384a568b0a0d3109e3" translate="yes" xml:space="preserve">
          <source>Automatic connection of signals and slots provides both a standard naming convention and an explicit interface for widget designers to work to. By providing source code that implements a given interface, user interface designers can check that their designs actually work without having to write code themselves.</source>
          <target state="translated">신호와 슬롯의 자동 연결은 표준 명명 규칙과 위젯 디자이너가 작업 할 수있는 명시 적 인터페이스를 모두 제공합니다. 지정된 인터페이스를 구현하는 소스 코드를 제공함으로써 사용자 인터페이스 디자이너는 코드를 직접 작성하지 않고도 디자인이 실제로 작동하는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ce6e3e26548f657e3e1d9fa04d6cb9b43c0af03" translate="yes" xml:space="preserve">
          <source>Automatic flash.</source>
          <target state="translated">자동 플래시.</target>
        </trans-unit>
        <trans-unit id="cb96fed2890659e3549bb2fc82195af5568ddece" translate="yes" xml:space="preserve">
          <source>Automatic layout.</source>
          <target state="translated">자동 레이아웃.</target>
        </trans-unit>
        <trans-unit id="2b4336f3a86d9b8102fd7f79a07cc25449dd5290" translate="yes" xml:space="preserve">
          <source>Automatic mode.</source>
          <target state="translated">자동 모드.</target>
        </trans-unit>
        <trans-unit id="5507e011a644e559471a2d9662d56cbffdde5197" translate="yes" xml:space="preserve">
          <source>Automatic signal relaying consists of signal-to-signal connection of the signals on the parent that have the exact same method signatue in both classes.</source>
          <target state="translated">자동 신호 릴레이는 두 클래스에서 똑같은 방법으로 신호를 보내는 상위 신호의 신호 대 신호 연결로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="3d4cfc57f67fc04d8741f11f6a5c38ee28c6a916" translate="yes" xml:space="preserve">
          <source>Automatic updates when contents change:</source>
          <target state="translated">내용이 변경 될 때 자동 업데이트 :</target>
        </trans-unit>
        <trans-unit id="3098c35578b88787a01b55a75968edf98ca0f139" translate="yes" xml:space="preserve">
          <source>Automatically Cast To</source>
          <target state="translated">자동 전송</target>
        </trans-unit>
        <trans-unit id="e85f278aae9996cb04083ce0d3216ecf201d8711" translate="yes" xml:space="preserve">
          <source>Automatically construct a &lt;a href=&quot;qdbusreply&quot;&gt;QDBusReply&lt;/a&gt; object from the asynchronous pending call</source>
          <target state="translated">비동기식 보류 호출에서 &lt;a href=&quot;qdbusreply&quot;&gt;QDBusReply&lt;/a&gt; 객체 자동 생성</target>
        </trans-unit>
        <trans-unit id="2b2589c241d444d6c120745e7e8ed4429da615d1" translate="yes" xml:space="preserve">
          <source>Automatically construct a &lt;a href=&quot;qdbusreply&quot;&gt;QDBusReply&lt;/a&gt; object from the reply message</source>
          <target state="translated">응답 메시지에서 &lt;a href=&quot;qdbusreply&quot;&gt;QDBusReply&lt;/a&gt; 오브젝트 자동 생성</target>
        </trans-unit>
        <trans-unit id="70f8daca9a271cd83a8721c456f9ceae58dd3461" translate="yes" xml:space="preserve">
          <source>Automatically create bullet lists (e.g. when the user enters an asterisk ('*') in the left most column, or presses Enter in an existing list item.</source>
          <target state="translated">글 머리 기호 목록을 자동으로 작성합니다 (예 : 사용자가 가장 왼쪽 열에 별표 ( '*')를 입력하거나 기존 목록 항목에서 Enter를 누름).</target>
        </trans-unit>
        <trans-unit id="a14ce495b8a6fa6dda9e2a3e82bb316ffbc9a576" translate="yes" xml:space="preserve">
          <source>Automatically creates the service as long as the binding exist. See &lt;a href=&quot;https://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE&quot;&gt;BIND_AUTO_CREATE&lt;/a&gt; documentation for more details.</source>
          <target state="translated">바인딩이 존재하는 한 서비스를 자동으로 만듭니다. 자세한 내용은 &lt;a href=&quot;https://developer.android.com/reference/android/content/Context.html#BIND_AUTO_CREATE&quot;&gt;BIND_AUTO_CREATE&lt;/a&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="45b2afda7ff7daaa7c310e69b42ef71048f0db81" translate="yes" xml:space="preserve">
          <source>Automatically detect if the called function has a reply.</source>
          <target state="translated">호출 된 함수에 응답이 있는지 자동으로 감지합니다.</target>
        </trans-unit>
        <trans-unit id="929982e056bef519acc62a04d6213ba5e7264355" translate="yes" xml:space="preserve">
          <source>Automatically dowloads images for web pages. When this setting is disabled, images are loaded from the cache. Enabled by default.</source>
          <target state="translated">웹 페이지의 이미지를 자동으로 다운로드합니다. 이 설정을 사용하지 않으면 이미지가 캐시에서로드됩니다. 기본적으로 활성화되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="f69ca0556c6f94c9f1d5f0d8405b9ea74cb8d152" translate="yes" xml:space="preserve">
          <source>Automatically downloads icons for web pages.</source>
          <target state="translated">웹 페이지의 아이콘을 자동으로 다운로드합니다.</target>
        </trans-unit>
        <trans-unit id="ed435f257708ab4669d8af16932f8b182cba0b65" translate="yes" xml:space="preserve">
          <source>Automatically downloads icons for web pages. Enabled by default. (Added in Qt 5.7)</source>
          <target state="translated">웹 페이지의 아이콘을 자동으로 다운로드합니다. 기본적으로 활성화되어 있습니다. (Qt 5.7에 추가)</target>
        </trans-unit>
        <trans-unit id="7136cf1e88ce89cb45dfe6b40fff1ea3ac9886e7" translate="yes" xml:space="preserve">
          <source>Automatically generates a &lt;code&gt;.cpp&lt;/code&gt; file that includes the precompiled header file specified in the .pro file.</source>
          <target state="translated">.pro 파일에 지정된 미리 컴파일 된 헤더 파일이 포함 된 &lt;code&gt;.cpp&lt;/code&gt; 파일을 자동으로 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="4c2ab71bd7e1ae1ebba6e8ad0f3d0508ed438f39" translate="yes" xml:space="preserve">
          <source>Automatically launching NDEF message handlers</source>
          <target state="translated">NDEF 메시지 핸들러 자동 실행</target>
        </trans-unit>
        <trans-unit id="06582cd157fb293ec6bc9bba92643521897e13d8" translate="yes" xml:space="preserve">
          <source>Automatically launching NDEF message handlers is supported on &lt;a href=&quot;nfc-android#&quot;&gt;Android&lt;/a&gt;.</source>
          <target state="translated">NDEF 메시지 핸들러 자동 실행은 &lt;a href=&quot;nfc-android#&quot;&gt;Android에서&lt;/a&gt; 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="23f1a5ba80e7d0fd6fbe27ae5a470920cf2bb86d" translate="yes" xml:space="preserve">
          <source>Automatically launching NDEF message handlers on Android</source>
          <target state="translated">Android에서 NDEF 메시지 핸들러 자동 실행</target>
        </trans-unit>
        <trans-unit id="17c8d5d05967c6a84f53bec5fbc4c84c480f2b99" translate="yes" xml:space="preserve">
          <source>Automatically loads images on web pages.</source>
          <target state="translated">웹 페이지에 이미지를 자동으로로드합니다.</target>
        </trans-unit>
        <trans-unit id="7df3ac6ae38e58b64cf1d761173dcff0086ebfa8" translate="yes" xml:space="preserve">
          <source>Automatically loads translation files from an i18n directory adjacent to the main QML file.</source>
          <target state="translated">기본 QML 파일에 인접한 i18n 디렉토리에서 변환 파일을 자동으로로드합니다.</target>
        </trans-unit>
        <trans-unit id="bb543e25ec5d6c4a3fe4c5854401f6a80b964a7f" translate="yes" xml:space="preserve">
          <source>Automatically select one or multiple focus points.</source>
          <target state="translated">하나 또는 여러 개의 초점 포인트를 자동으로 선택합니다.</target>
        </trans-unit>
        <trans-unit id="a5c0ae5b9ff3641c8337062893575858af0ec4c9" translate="yes" xml:space="preserve">
          <source>Automatically sets a &lt;code&gt;QQmlFileSelector&lt;/code&gt; as the url interceptor, applying file selectors to all QML files and assets.</source>
          <target state="translated">모든 QML 파일 및 자산에 파일 선택기를 적용 하여 &lt;code&gt;QQmlFileSelector&lt;/code&gt; 를 URL 인터셉터로 자동 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="e7ef53e5f4081db41588b67d1ae6febdd0d9ab1f" translate="yes" xml:space="preserve">
          <source>Automatically sets an incubation controller if the scene contains a &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt;.</source>
          <target state="translated">장면에 &lt;a href=&quot;qquickwindow&quot;&gt;QQuickWindow&lt;/a&gt; 가 포함 된 경우 인큐베이션 컨트롤러를 자동으로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="6292fd2af5fe47d9aaeee3bbf1f21816aa1034d4" translate="yes" xml:space="preserve">
          <source>Automotive Example</source>
          <target state="translated">자동차 예</target>
        </trans-unit>
        <trans-unit id="b8a6fb365c8319bc9cd99469baa7aec2545b0233" translate="yes" xml:space="preserve">
          <source>Autotests</source>
          <target state="translated">Autotests</target>
        </trans-unit>
        <trans-unit id="681b5b5ae10b994e61d9fc53cf8a95498ff0df39" translate="yes" xml:space="preserve">
          <source>Availability</source>
          <target state="translated">Availability</target>
        </trans-unit>
        <trans-unit id="67a0064590b2f746e7dd10cc243b80495677aca5" translate="yes" xml:space="preserve">
          <source>Availability of Packages</source>
          <target state="translated">패키지 가용성</target>
        </trans-unit>
        <trans-unit id="7c62a1424469b1c1cf402f254409a96a0e6770cf" translate="yes" xml:space="preserve">
          <source>Available</source>
          <target state="translated">Available</target>
        </trans-unit>
        <trans-unit id="e8fb788cf6307a8cd78a358b3227f7e4460f4896" translate="yes" xml:space="preserve">
          <source>Available Functions</source>
          <target state="translated">사용 가능한 기능</target>
        </trans-unit>
        <trans-unit id="f88501a1294ea7669dea3183bda0837bdebffa47" translate="yes" xml:space="preserve">
          <source>Available Styles</source>
          <target state="translated">사용 가능한 스타일</target>
        </trans-unit>
        <trans-unit id="057b4b33c8569c09b413019743ff85bf2e11c330" translate="yes" xml:space="preserve">
          <source>Available options:</source>
          <target state="translated">사용 가능한 옵션 :</target>
        </trans-unit>
        <trans-unit id="3470b95b1702e3c3676f46202a33bba8b0a5c6b3" translate="yes" xml:space="preserve">
          <source>Available or not (grayed out, disabled).</source>
          <target state="translated">사용 가능 또는 사용 불가능 (회색, 비활성화).</target>
        </trans-unit>
        <trans-unit id="51ed008570190eb2cf427fb7ee118aa9da9363cd" translate="yes" xml:space="preserve">
          <source>Available pre-defined colors:</source>
          <target state="translated">사용 가능한 사전 정의 된 색상 :</target>
        </trans-unit>
        <trans-unit id="f492455c1faf531411d34599ac5ee635eb1828d9" translate="yes" xml:space="preserve">
          <source>Available properties:</source>
          <target state="translated">사용 가능한 속성 :</target>
        </trans-unit>
        <trans-unit id="c53eca4e38cd259d4270cf1d0f458c06af122b85" translate="yes" xml:space="preserve">
          <source>Available reasons:</source>
          <target state="translated">사용 가능한 이유 :</target>
        </trans-unit>
        <trans-unit id="8491843e4d1cafc722bcf64a60b712373636a30e" translate="yes" xml:space="preserve">
          <source>Available states:</source>
          <target state="translated">사용 가능한 상태 :</target>
        </trans-unit>
        <trans-unit id="6012c96194ba07b17126bcdfe11c6a6f332cf037" translate="yes" xml:space="preserve">
          <source>Available subtypes for the &lt;code&gt;doc&lt;/code&gt; selector:</source>
          <target state="translated">&lt;code&gt;doc&lt;/code&gt; 선택기에 사용 가능한 하위 유형 :</target>
        </trans-unit>
        <trans-unit id="e8ae10eb73a5b8cfdd1e5a91b01684ae211b451a" translate="yes" xml:space="preserve">
          <source>Available themes:</source>
          <target state="translated">사용 가능한 테마 :</target>
        </trans-unit>
        <trans-unit id="95bda36e41849163c96616b71afeaaab69fe2a77" translate="yes" xml:space="preserve">
          <source>Available types are:</source>
          <target state="translated">사용 가능한 유형은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7bd6aef71d5c19d6c101516b635e37a3c538d16a" translate="yes" xml:space="preserve">
          <source>Available values:</source>
          <target state="translated">사용 가능한 값 :</target>
        </trans-unit>
        <trans-unit id="299533c5a9b1c169bb484c8ebd5c3e27d9a932c4" translate="yes" xml:space="preserve">
          <source>AvailableSizesArgument Struct</source>
          <target state="translated">사용 가능한 크기 Argument Struct</target>
        </trans-unit>
        <trans-unit id="08266057ab5e613d1d79be149fdc05efaa13154a" translate="yes" xml:space="preserve">
          <source>AvailableSizesArgument::mode</source>
          <target state="translated">AvailableSizesArgument::mode</target>
        </trans-unit>
        <trans-unit id="a448d60845cb58a7cac8f603319b0e51305c86ef" translate="yes" xml:space="preserve">
          <source>AvailableSizesArgument::sizes</source>
          <target state="translated">AvailableSizesArgument::sizes</target>
        </trans-unit>
        <trans-unit id="ab6d749fee3b22ab4f18aaad8ee7e3e2bef1784a" translate="yes" xml:space="preserve">
          <source>AvailableSizesArgument::state</source>
          <target state="translated">AvailableSizesArgument::state</target>
        </trans-unit>
        <trans-unit id="15f86c051ecf0b64e5f8cdc8c689552f42595942" translate="yes" xml:space="preserve">
          <source>Average</source>
          <target state="translated">Average</target>
        </trans-unit>
        <trans-unit id="625743f99c4f8aaffcc8cbce549d56f8307d9539" translate="yes" xml:space="preserve">
          <source>AverageBitRateEncoding</source>
          <target state="translated">AverageBitRateEncoding</target>
        </trans-unit>
        <trans-unit id="632b5cf66af66b57582fae15b4932ebe8379d3fe" translate="yes" xml:space="preserve">
          <source>AverageLevel</source>
          <target state="translated">AverageLevel</target>
        </trans-unit>
        <trans-unit id="0736420d35582261a294c926eeca1741a6bae474" translate="yes" xml:space="preserve">
          <source>Avoid Run-time Composition</source>
          <target state="translated">런타임 구성 방지</target>
        </trans-unit>
        <trans-unit id="80daa97850118e1f972a913ff08d53d3862fe74f" translate="yes" xml:space="preserve">
          <source>Avoid Smoothing Images</source>
          <target state="translated">이미지 스무딩 방지</target>
        </trans-unit>
        <trans-unit id="86bfe5bcb6b6b70c101e3bef1f0d770284211002" translate="yes" xml:space="preserve">
          <source>Avoid calling this function from a different thread than the one the &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; instance lives in. If you wish to use &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; from a different thread you should first make sure it's not current in the current thread, by calling &lt;a href=&quot;qopenglcontext#doneCurrent&quot;&gt;doneCurrent&lt;/a&gt;() if necessary. Then call &lt;a href=&quot;qobject#moveToThread&quot;&gt;moveToThread&lt;/a&gt;(otherThread) before using it in the other thread.</source>
          <target state="translated">하나 개가 아닌 다른 스레드에서이 함수를 호출하지 마십시오 &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext의&lt;/a&gt; 에서 인스턴스의 삶을. 사용하고자하는 경우 &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext을&lt;/a&gt; 다른 스레드에서 먼저 확인이 호출 해, 현재의 thread 현재이 아니다해야 &lt;a href=&quot;qopenglcontext#doneCurrent&quot;&gt;doneCurrent을&lt;/a&gt; () 필요한 경우. 그런 다음 다른 스레드에서 사용하기 전에 &lt;a href=&quot;qobject#moveToThread&quot;&gt;moveToThread&lt;/a&gt; (otherThread)를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c35c4f532cfccc7f2158097213828cfda765db3d" translate="yes" xml:space="preserve">
          <source>Avoid complex bindings</source>
          <target state="translated">복잡한 바인딩을 피하십시오</target>
        </trans-unit>
        <trans-unit id="27ed8c40ff6db5e1d16f317ed8a429fb5aa5a489" translate="yes" xml:space="preserve">
          <source>Avoid defining multiple identical implicit types</source>
          <target state="translated">동일한 암시 적 유형을 여러 개 정의하지 마십시오</target>
        </trans-unit>
        <trans-unit id="fea2a3ed28f6f4c5ae7e66e4a1b2c0c440a2e741" translate="yes" xml:space="preserve">
          <source>Avoid key names that are identical except for the case. For example, if you have a key called &quot;&lt;a href=&quot;designer-to-know#mainwindow&quot;&gt;MainWindow&lt;/a&gt;&quot;, don't try to save another key as &quot;mainwindow&quot;.</source>
          <target state="translated">대소 문자를 제외하고 동일한 키 이름을 사용하지 마십시오. 예를 들어 &quot; &lt;a href=&quot;designer-to-know#mainwindow&quot;&gt;MainWindow&lt;/a&gt; &quot; 라는 키가있는 경우 다른 키를 &quot;mainwindow&quot;로 저장하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="08a2ccfd1d334328cb577f14bb6d0e8ffb2899dd" translate="yes" xml:space="preserve">
          <source>Avoid painting the same area several times. Use Item as root element rather than Rectangle to avoid painting the background several times.</source>
          <target state="translated">같은 영역을 여러 번 칠하지 마십시오. 배경을 여러 번 칠하지 않으려면 사각형 대신 루트 요소로 항목을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="f7bc5e27c89d07f57fe21d7c294ca774b0f2cab5" translate="yes" xml:space="preserve">
          <source>Avoid running JavaScript during animation. For example, running a complex JavaScript expression for each frame of an x property animation should be avoided.</source>
          <target state="translated">애니메이션 중에는 JavaScript를 실행하지 마십시오. 예를 들어 x 속성 애니메이션의 각 프레임에 대해 복잡한 JavaScript 식을 실행하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="c20856517ee93c8038c4ce6e74f389f38c4863b5" translate="yes" xml:space="preserve">
          <source>Avoid the category names &lt;code&gt;debug&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warning&lt;/code&gt;, and &lt;code&gt;critical&lt;/code&gt;.</source>
          <target state="translated">범주 이름 &lt;code&gt;debug&lt;/code&gt; , &lt;code&gt;info&lt;/code&gt; , &lt;code&gt;warning&lt;/code&gt; 및 &lt;code&gt;critical&lt;/code&gt; 를 피하십시오 .</target>
        </trans-unit>
        <trans-unit id="50902c0755d35c4de938692fad8c0619ad2adc42" translate="yes" xml:space="preserve">
          <source>Avoid using &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; elements within delegates.</source>
          <target state="translated">델리게이트 내에서 &lt;a href=&quot;qml-qtquick-shadereffect&quot;&gt;ShaderEffect&lt;/a&gt; 요소를 사용하지 마십시오 .</target>
        </trans-unit>
        <trans-unit id="e728eebe835930a978a00d993ec2600851b8a6e4" translate="yes" xml:space="preserve">
          <source>Avoid using eval() if at all possible</source>
          <target state="translated">가능하면 eval ()을 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="2e661817f2180b68ec2c40dd9cecff4057c7c25b" translate="yes" xml:space="preserve">
          <source>Avoid using this function if you need to wait for a given condition to change. Instead, connect a slot to the signal that indicates the change or use an event handler (see &lt;a href=&quot;qobject#event&quot;&gt;QObject::event&lt;/a&gt;()).</source>
          <target state="translated">주어진 조건이 변경 될 때까지 기다려야하는 경우이 기능을 사용하지 마십시오. 대신, 변경을 나타내는 신호에 슬롯을 연결하거나 이벤트 핸들러를 사용하십시오 ( &lt;a href=&quot;qobject#event&quot;&gt;QObject :: event&lt;/a&gt; () 참조).</target>
        </trans-unit>
        <trans-unit id="160bbfbc4dd8c077926d6ec6a7184e57212d85a3" translate="yes" xml:space="preserve">
          <source>Axis</source>
          <target state="translated">Axis</target>
        </trans-unit>
        <trans-unit id="861c8b6cc15a4315f397724a2c5cb22c4cc0c7c5" translate="yes" xml:space="preserve">
          <source>Axis (QML type)</source>
          <target state="translated">축 (QML 타입)</target>
        </trans-unit>
        <trans-unit id="37c933ded1f70bcfaf135654110b779d1a16a185" translate="yes" xml:space="preserve">
          <source>Axis &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtcharts-chartview#axisX-method&quot;&gt;axisX&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">축축 &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtcharts-chartview#axisX-method&quot;&gt;X&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (</target>
        </trans-unit>
        <trans-unit id="da691af2c939c7d17eb395ecf08ae447746f9eb7" translate="yes" xml:space="preserve">
          <source>Axis &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtcharts-chartview#axisY-method&quot;&gt;axisY&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">축 축 &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtcharts-chartview#axisY-method&quot;&gt;Y&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (</target>
        </trans-unit>
        <trans-unit id="fac7cf990697214d5979ec03465ecb79d0e934c7" translate="yes" xml:space="preserve">
          <source>Axis QML Type</source>
          <target state="translated">축 QML 유형</target>
        </trans-unit>
        <trans-unit id="cb67434dc2053ba5942479c5b3d4df377270e72a" translate="yes" xml:space="preserve">
          <source>Axis Specifier</source>
          <target state="translated">축 지정자</target>
        </trans-unit>
        <trans-unit id="1bf19e8be082df7b9fa45b3e0639222a8ce31404" translate="yes" xml:space="preserve">
          <source>Axis Specifiers</source>
          <target state="translated">축 지정자</target>
        </trans-unit>
        <trans-unit id="30d1fed0701c80ec694f207aa266547273c0643d" translate="yes" xml:space="preserve">
          <source>Axis Steps</source>
          <target state="translated">축 단계</target>
        </trans-unit>
        <trans-unit id="b36e8a84a7006e5070159e551bccc80cc771a9df" translate="yes" xml:space="preserve">
          <source>Axis for the analog input.</source>
          <target state="translated">아날로그 입력을위한 축.</target>
        </trans-unit>
        <trans-unit id="fee7c34621ab2a9670c5c26997b06908c7d6b56a" translate="yes" xml:space="preserve">
          <source>Axis.buttons</source>
          <target state="translated">Axis.buttons</target>
        </trans-unit>
        <trans-unit id="42a575705f1ce56cddea0911599fee5d51eaa0c7" translate="yes" xml:space="preserve">
          <source>Axis.inputs</source>
          <target state="translated">Axis.inputs</target>
        </trans-unit>
        <trans-unit id="5fb376bdd42565812744c9ba6e3736137f1b5a7b" translate="yes" xml:space="preserve">
          <source>Axis.scale</source>
          <target state="translated">Axis.scale</target>
        </trans-unit>
        <trans-unit id="0c8b4529862b54ffc04fcee6d3dee9dd3317b370" translate="yes" xml:space="preserve">
          <source>Axis.value</source>
          <target state="translated">Axis.value</target>
        </trans-unit>
        <trans-unit id="a1a5a5223f38517c40bdfc940d11199f1c755b96" translate="yes" xml:space="preserve">
          <source>Axis.velocity</source>
          <target state="translated">Axis.velocity</target>
        </trans-unit>
        <trans-unit id="2af4369549fd66cf6a4cd74b2874d424779ff1d1" translate="yes" xml:space="preserve">
          <source>AxisAccumulator</source>
          <target state="translated">AxisAccumulator</target>
        </trans-unit>
        <trans-unit id="35d3e645763342a78f79371a42ea8158c903c0a7" translate="yes" xml:space="preserve">
          <source>AxisAccumulator (QML type)</source>
          <target state="translated">축 누적 기 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="cc1707b563ecc39938e22e67b33a9dd7e0393d7d" translate="yes" xml:space="preserve">
          <source>AxisAccumulator QML Type</source>
          <target state="translated">축축 적기 QML 유형</target>
        </trans-unit>
        <trans-unit id="60d40a5a7868c93758cc5d57b44345486f1fb49d" translate="yes" xml:space="preserve">
          <source>AxisAccumulator.sourceAxis</source>
          <target state="translated">AxisAccumulator.sourceAxis</target>
        </trans-unit>
        <trans-unit id="6232ff3c36f602ebee098fe3e0a697c01aaacd2f" translate="yes" xml:space="preserve">
          <source>AxisAccumulator.sourceAxisType</source>
          <target state="translated">AxisAccumulator.sourceAxisType</target>
        </trans-unit>
        <trans-unit id="4b85781b20761a5aac8ba50a5fb6a01bb092fa95" translate="yes" xml:space="preserve">
          <source>AxisAccumulator.value</source>
          <target state="translated">AxisAccumulator.value</target>
        </trans-unit>
        <trans-unit id="7bfddb4f3ed4614039d64f294e478a97f55249f8" translate="yes" xml:space="preserve">
          <source>AxisSetting</source>
          <target state="translated">AxisSetting</target>
        </trans-unit>
        <trans-unit id="a1525c2fe43f50803c0560499f09f9a4bc25aa2d" translate="yes" xml:space="preserve">
          <source>AxisSetting (QML type)</source>
          <target state="translated">축 설정 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="677671bd8c00457ce55b030a02b01639f837bc4d" translate="yes" xml:space="preserve">
          <source>AxisSetting QML Type</source>
          <target state="translated">축 설정 QML 유형</target>
        </trans-unit>
        <trans-unit id="ca5c8b8c73ff620cf04996adc4577126e4cb0d42" translate="yes" xml:space="preserve">
          <source>AxisSetting.axes</source>
          <target state="translated">AxisSetting.axes</target>
        </trans-unit>
        <trans-unit id="59c30f2f8010e0666e5f250d253e2f699023943a" translate="yes" xml:space="preserve">
          <source>AxisSetting.axis</source>
          <target state="translated">AxisSetting.axis</target>
        </trans-unit>
        <trans-unit id="2b25592736b56c3f12f1545392c345626ffcfbdb" translate="yes" xml:space="preserve">
          <source>AxisSetting.axisChanged()</source>
          <target state="translated">AxisSetting.axisChanged()</target>
        </trans-unit>
        <trans-unit id="face40d3aca221c19a163e1326ca546c654aa5ab" translate="yes" xml:space="preserve">
          <source>AxisSetting.deadZoneRadius</source>
          <target state="translated">AxisSetting.deadZoneRadius</target>
        </trans-unit>
        <trans-unit id="9d023e9ae9b29a31d3ccf6a9dbdd76137b3e69ee" translate="yes" xml:space="preserve">
          <source>AxisSetting.deadZoneRadiusChanged()</source>
          <target state="translated">AxisSetting.deadZoneRadiusChanged()</target>
        </trans-unit>
        <trans-unit id="2318e897b645e9a18a88fd68bbefc4dee9d11df1" translate="yes" xml:space="preserve">
          <source>AxisSetting.smooth</source>
          <target state="translated">AxisSetting.smooth</target>
        </trans-unit>
        <trans-unit id="f300b5f8b6749706fa546a9f0aeca08de13dddba" translate="yes" xml:space="preserve">
          <source>AxisSetting.smoothChanged()</source>
          <target state="translated">AxisSetting.smoothChanged()</target>
        </trans-unit>
        <trans-unit id="eda23b717347d5455441d9f2cb771cce28968db4" translate="yes" xml:space="preserve">
          <source>AxisaxisX(</source>
          <target state="translated">AxisaxisX(</target>
        </trans-unit>
        <trans-unit id="b39afdc752359186a208c2fb172232fc0aa55a77" translate="yes" xml:space="preserve">
          <source>AxisaxisY(</source>
          <target state="translated">AxisaxisY(</target>
        </trans-unit>
        <trans-unit id="b5ef4cad99d89e246a3f16718f4caf49804cb5f6" translate="yes" xml:space="preserve">
          <source>Azeri, Azerbaijani</source>
          <target state="translated">아제르바이잔</target>
        </trans-unit>
        <trans-unit id="3923f4a2517d3dc539da7d25692003b4ea82b738" translate="yes" xml:space="preserve">
          <source>Azimuth in this context is equivalent to a compass bearing based on true north.</source>
          <target state="translated">이와 관련하여 방위각은 진북을 기준으로 한 나침반 방위와 같습니다.</target>
        </trans-unit>
        <trans-unit id="ae4f281df5a5d0ff3cad6371f76d5c29b6d953ec" translate="yes" xml:space="preserve">
          <source>B</source>
          <target state="translated">B</target>
        </trans-unit>
        <trans-unit id="ed394f9ee514bad47fe1a5a7b440d45e4220f918" translate="yes" xml:space="preserve">
          <source>B::MouseMove</source>
          <target state="translated">B::MouseMove</target>
        </trans-unit>
        <trans-unit id="f6d9e9205688f5dde409269f0091f83d341d541b" translate="yes" xml:space="preserve">
          <source>B=0 and M=0 gives transparent.</source>
          <target state="translated">B = 0, M = 0은 투명합니다.</target>
        </trans-unit>
        <trans-unit id="d81043b63eb8992194fddecb7761faf8399fdc20" translate="yes" xml:space="preserve">
          <source>B=0 and M=1 gives white.</source>
          <target state="translated">B = 0, M = 1은 흰색을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="358e336d0ed79fff98f002d9ee67d7854d7dec7e" translate="yes" xml:space="preserve">
          <source>B=1 and M=0 gives an XOR'd result under Windows, undefined results on all other platforms.</source>
          <target state="translated">B = 1 및 M = 0은 Windows에서 XOR 결과를 제공하고 다른 모든 플랫폼에서는 정의되지 않은 결과를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8e05fe432edff8283fa87236ea68c45cc90513d2" translate="yes" xml:space="preserve">
          <source>B=1 and M=1 gives black.</source>
          <target state="translated">B = 1이고 M = 1은 검은 색입니다.</target>
        </trans-unit>
        <trans-unit id="2d0fe684054a53889de74128877e23cf3189b322" translate="yes" xml:space="preserve">
          <source>BIGINT</source>
          <target state="translated">BIGINT</target>
        </trans-unit>
        <trans-unit id="66f6387f31af8c02708fb3fe12629629f893d52c" translate="yes" xml:space="preserve">
          <source>BIGINT LONG</source>
          <target state="translated">긴 길이</target>
        </trans-unit>
        <trans-unit id="d05fb01e0b399387c3a28586f5fd296e2670d6a3" translate="yes" xml:space="preserve">
          <source>BINARY</source>
          <target state="translated">BINARY</target>
        </trans-unit>
        <trans-unit id="261b6d70eaf74bf465f2e78c1923e0b93e95e1c8" translate="yes" xml:space="preserve">
          <source>BIT</source>
          <target state="translated">BIT</target>
        </trans-unit>
        <trans-unit id="1ce04f29dadb9973458555f164627f66e504686e" translate="yes" xml:space="preserve">
          <source>BLOB</source>
          <target state="translated">BLOB</target>
        </trans-unit>
        <trans-unit id="8306a543f91f1fd548cb382031a57ef6cd3bdffb" translate="yes" xml:space="preserve">
          <source>BMP</source>
          <target state="translated">BMP</target>
        </trans-unit>
        <trans-unit id="292c7af4fff95bcd09dba6dcdd4b5f6d636b95c8" translate="yes" xml:space="preserve">
          <source>BOOL</source>
          <target state="translated">BOOL</target>
        </trans-unit>
        <trans-unit id="ab68d8e893a82cff70979ba20bec0023dbfe4be3" translate="yes" xml:space="preserve">
          <source>BOOLEAN</source>
          <target state="translated">BOOLEAN</target>
        </trans-unit>
        <trans-unit id="8207678833a3d8dd294bf08266531fcc44f68f6c" translate="yes" xml:space="preserve">
          <source>BSD 2-clause &quot;Simplified&quot; License</source>
          <target state="translated">BSD 2 절 &quot;간체 화 된&quot;라이센스</target>
        </trans-unit>
        <trans-unit id="6b20698ef27c27f136b417fc1674147ef423664e" translate="yes" xml:space="preserve">
          <source>BSD 2-clause &quot;Simplified&quot; License and Imlib2 License</source>
          <target state="translated">BSD 2 절 &quot;간체 화 된&quot;라이센스 및 Imlib2 라이센스</target>
        </trans-unit>
        <trans-unit id="0661c841852ce4be7790b811c0d826b8afbb05e5" translate="yes" xml:space="preserve">
          <source>BSD 3-clause &quot;New&quot; or &quot;Revised&quot; License</source>
          <target state="translated">BSD 3 절 &quot;신규&quot;또는 &quot;개정 된&quot;라이센스</target>
        </trans-unit>
        <trans-unit id="1af919c74cb6464a6772ccfa32fe23eec83f40a5" translate="yes" xml:space="preserve">
          <source>BSD 3-clause &quot;New&quot; or &quot;Revised&quot; Licensee</source>
          <target state="translated">BSD 3 절 &quot;신규&quot;또는 &quot;개정 된&quot;라이센스 사용자</target>
        </trans-unit>
        <trans-unit id="4095bc927536ca017d173559a0dbf28565fd47eb" translate="yes" xml:space="preserve">
          <source>BSD 4-clause &quot;Original&quot; or &quot;Old&quot; License</source>
          <target state="translated">BSD 4 절 &quot;Original&quot;또는 &quot;Old&quot;라이센스</target>
        </trans-unit>
        <trans-unit id="a997653368c55f3a8ca1251515704c9183172df5" translate="yes" xml:space="preserve">
          <source>BSTR</source>
          <target state="translated">BSTR</target>
        </trans-unit>
        <trans-unit id="1d7caa593761d5e9b3a933c7c28bf276e5fe0725" translate="yes" xml:space="preserve">
          <source>BYTE</source>
          <target state="translated">BYTE</target>
        </trans-unit>
        <trans-unit id="b52b36b7269fbfc58ec24bb724691951a3decbe8" translate="yes" xml:space="preserve">
          <source>Back</source>
          <target state="translated">Back</target>
        </trans-unit>
        <trans-unit id="a1fd701c45cd8c16d7f7564b4c08f3a15645ff4a" translate="yes" xml:space="preserve">
          <source>Back when X11 was very popular, developers wrote their own custom solutions to circumvent X11 issues. Older Qt versions had the Qt Windowing System (QWS), which is now discontinued. Today, most of these use cases are covered by Wayland, and custom solutions are becoming less and less common.</source>
          <target state="translated">X11이 매우 인기가 있었을 때 개발자들은 X11 문제를 피하기 위해 자신 만의 맞춤형 솔루션을 작성했습니다. 이전 Qt 버전에는 Qt Windowing System (QWS)이 있었으며 현재 중단되었습니다. 오늘날 이러한 사용 사례의 대부분은 Wayland에서 다루고 있으며 맞춤형 솔루션은 점점 일반화되고 있습니다.</target>
        </trans-unit>
        <trans-unit id="e758ca64563fdd62965a2b97b76d555b1a70d938" translate="yes" xml:space="preserve">
          <source>Backend</source>
          <target state="translated">Backend</target>
        </trans-unit>
        <trans-unit id="8b2e4c4c74e2c49a63d1e532547c41d496b45fb9" translate="yes" xml:space="preserve">
          <source>Backends have to implement &lt;a href=&quot;qsensorbackend#isFeatureSupported&quot;&gt;QSensorBackend::isFeatureSupported&lt;/a&gt;() to make this work.</source>
          <target state="translated">이 작업 을 수행 &lt;a href=&quot;qsensorbackend#isFeatureSupported&quot;&gt;하려면&lt;/a&gt; 백엔드에서 QSensorBackend :: isFeatureSupported () 를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="64dd60fe1a049fe6db3eb1369dec2e42bf428e21" translate="yes" xml:space="preserve">
          <source>Background</source>
          <target state="translated">Background</target>
        </trans-unit>
        <trans-unit id="a28732ef9a594fa12c9038a43b09ee48ffbd920b" translate="yes" xml:space="preserve">
          <source>Background color for elements</source>
          <target state="translated">요소의 배경색</target>
        </trans-unit>
        <trans-unit id="c6f20a07a5b649d352f00ecc7fad532efbda02a3" translate="yes" xml:space="preserve">
          <source>Background image for elements</source>
          <target state="translated">요소의 배경 이미지</target>
        </trans-unit>
        <trans-unit id="7a7a3848fa22c3edaf90f27113193beb52525ee5" translate="yes" xml:space="preserve">
          <source>Background mode:</source>
          <target state="translated">백그라운드 모드 :</target>
        </trans-unit>
        <trans-unit id="97f5dc85c2e667e3aeae3ea25d2ef135686f62d4" translate="yes" xml:space="preserve">
          <source>Background network traffic (not user initiated) should be avoided for example to save battery or data charges</source>
          <target state="translated">배터리 또는 데이터 요금을 절약하기 위해 백그라운드 네트워크 트래픽 (사용자가 시작하지 않은)을 피해야합니다.</target>
        </trans-unit>
        <trans-unit id="cc917f9c1769b34e7778f4ab4b6fb7bc2c24a7bc" translate="yes" xml:space="preserve">
          <source>Background shorthand property</source>
          <target state="translated">배경 속기 속성</target>
        </trans-unit>
        <trans-unit id="1b518b3117459f4d43e65c411af6cad1dc3ffc20" translate="yes" xml:space="preserve">
          <source>Backlight exposure mode.</source>
          <target state="translated">백라이트 노출 모드.</target>
        </trans-unit>
        <trans-unit id="88d130a66de8e5db01660642d9f23e1f0eef97dd" translate="yes" xml:space="preserve">
          <source>Backspace</source>
          <target state="translated">Backspace</target>
        </trans-unit>
        <trans-unit id="b53ac9e0a4abf3e84523ef09f70ec0a5b9416ec2" translate="yes" xml:space="preserve">
          <source>Backspace key for keyboard layouts. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">키보드 레이아웃을위한 백 스페이스 키. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f8d58053768afa85fba75056335f2e0e956f464e" translate="yes" xml:space="preserve">
          <source>BackspaceKey</source>
          <target state="translated">BackspaceKey</target>
        </trans-unit>
        <trans-unit id="ff543573dcd8923c1fb6f036b25d90d4ffe021d0" translate="yes" xml:space="preserve">
          <source>BackspaceKey (QML type)</source>
          <target state="translated">백 스페이스 키 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="208a30f26f2f186c856cff6bde33b6b5539b7c8f" translate="yes" xml:space="preserve">
          <source>BackspaceKey QML Type</source>
          <target state="translated">BackspaceKey QML 유형</target>
        </trans-unit>
        <trans-unit id="d3840230617314017318d792465069fdff45cce1" translate="yes" xml:space="preserve">
          <source>Backward diagonal lines.</source>
          <target state="translated">뒤로 대각선.</target>
        </trans-unit>
        <trans-unit id="9bc717b250e68f3012afdeae94ac54d77c43ebae" translate="yes" xml:space="preserve">
          <source>Backwards Compatibility feature</source>
          <target state="translated">이전 버전과의 호환성 기능</target>
        </trans-unit>
        <trans-unit id="fda29f9e5debd276a111c6934daab21102f47904" translate="yes" xml:space="preserve">
          <source>Bar and surface graphs support slice selection modes, where the selected row or column is drawn in a separate viewport as a pseudo-2D graph. This makes it easier to see the actual values of a single row or column.</source>
          <target state="translated">막대 및 표면 그래프는 슬라이스 선택 모드를 지원합니다. 여기서 선택한 행 또는 열이 별도의 뷰포트에 의사 -2D 그래프로 그려집니다. 따라서 단일 행 또는 열의 실제 값을보다 쉽게 ​​볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7ebe3ec043db31d7b499270f28a0d3ae41f759d" translate="yes" xml:space="preserve">
          <source>Bar graph additionally supports simply highlighting the whole row and/or column of the selected bar without opening the slice view. Bar graph also supports selecting/slicing a whole row and/or column by clicking the axis label, based on selection mode.</source>
          <target state="translated">막대 그래프는 슬라이스보기를 열지 않고 선택한 막대의 전체 행 및 / 또는 열을 강조 표시하는 기능을 추가로 지원합니다. 막대 그래프는 또한 선택 모드에 따라 축 레이블을 클릭하여 전체 행 및 / 또는 열을 선택 / 슬라이스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6652efa5506006019ebf16ba5c76b0d7279fc576" translate="yes" xml:space="preserve">
          <source>Bar spacing in X and Z dimensions.</source>
          <target state="translated">X 및 Z 치수의 바 간격.</target>
        </trans-unit>
        <trans-unit id="5b619e075bcfb281c4a07a54dfd1c6db4ad1d8ac" translate="yes" xml:space="preserve">
          <source>Bar spacing in the X and Z dimensions.</source>
          <target state="translated">X 및 Z 치수의 바 간격.</target>
        </trans-unit>
        <trans-unit id="ca2d150af64ef23d83f0ff7f6c477ebb9ab01158" translate="yes" xml:space="preserve">
          <source>Bar3DSeries</source>
          <target state="translated">Bar3DSeries</target>
        </trans-unit>
        <trans-unit id="1a54953dff77a5055a46dd68735afe5fc7562e6a" translate="yes" xml:space="preserve">
          <source>Bar3DSeries (QML type)</source>
          <target state="translated">Bar3DSeries (QML 유형)</target>
        </trans-unit>
        <trans-unit id="d5bc0fd572463b59ad9a70a8f1cd5f04e0a53c01" translate="yes" xml:space="preserve">
          <source>Bar3DSeries QML Type</source>
          <target state="translated">Bar3DSeries QML 유형</target>
        </trans-unit>
        <trans-unit id="6a48ea534185470647fc7c91c65f3de1976a4a17" translate="yes" xml:space="preserve">
          <source>Bar3DSeries.dataProxy</source>
          <target state="translated">Bar3DSeries.dataProxy</target>
        </trans-unit>
        <trans-unit id="d529e80b89cf5f91d27c81ee5385f75852b221b2" translate="yes" xml:space="preserve">
          <source>Bar3DSeries.invalidSelectionPosition</source>
          <target state="translated">Bar3DSeries.invalidSelectionPosition</target>
        </trans-unit>
        <trans-unit id="15801e0a1fd9261f95217c8f21ac6aef236d6333" translate="yes" xml:space="preserve">
          <source>Bar3DSeries.meshAngle</source>
          <target state="translated">Bar3DSeries.meshAngle</target>
        </trans-unit>
        <trans-unit id="7e7b608d7967cf3ed2ba925c314cee8fe0dbf1f3" translate="yes" xml:space="preserve">
          <source>Bar3DSeries.selectedBar</source>
          <target state="translated">Bar3DSeries.selectedBar</target>
        </trans-unit>
        <trans-unit id="531c74bb67dd7bed3fdec728081fc691cf601763" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis</source>
          <target state="translated">BarCategoryAxis</target>
        </trans-unit>
        <trans-unit id="71fea7a5bcfa3661b4cb22820193097819dc47db" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis (QML type)</source>
          <target state="translated">BarCategoryAxis (QML 유형)</target>
        </trans-unit>
        <trans-unit id="8f019e193cbb469ae74365a0b69039933f57478e" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis QML Type</source>
          <target state="translated">BarCategoryAxis QML 유형</target>
        </trans-unit>
        <trans-unit id="caced2b02c77ca54492c38b66f354e014cb35dae" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis.categories</source>
          <target state="translated">BarCategoryAxis.categories</target>
        </trans-unit>
        <trans-unit id="501ad2efb114b7b5b9d30054b63ec12dfa786432" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis.clear()</source>
          <target state="translated">BarCategoryAxis.clear()</target>
        </trans-unit>
        <trans-unit id="319080c889703231cae59bc46b10405f83787f38" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis.count</source>
          <target state="translated">BarCategoryAxis.count</target>
        </trans-unit>
        <trans-unit id="619817de8b4c27f4cdca56e273b252e1a5163358" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis.max</source>
          <target state="translated">BarCategoryAxis.max</target>
        </trans-unit>
        <trans-unit id="7040d026bcd745f11aa141c31d7629f769b144b6" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis.min</source>
          <target state="translated">BarCategoryAxis.min</target>
        </trans-unit>
        <trans-unit id="067149a96ce6984e617d2c62dffd5584dc4b1f73" translate="yes" xml:space="preserve">
          <source>BarCategoryAxis.rangeChanged()</source>
          <target state="translated">BarCategoryAxis.rangeChanged()</target>
        </trans-unit>
        <trans-unit id="ce4261920f9b489fde3df959a39b1452d84f560d" translate="yes" xml:space="preserve">
          <source>BarDataProxy</source>
          <target state="translated">BarDataProxy</target>
        </trans-unit>
        <trans-unit id="2baa2214a836294c3fbe5e9b42ead0e141cf5ed6" translate="yes" xml:space="preserve">
          <source>BarDataProxy (QML type)</source>
          <target state="translated">BarDataProxy (QML 유형)</target>
        </trans-unit>
        <trans-unit id="acc241bfdd2e24a272ab6b5ee91abe6d95fbe7f1" translate="yes" xml:space="preserve">
          <source>BarDataProxy QML Type</source>
          <target state="translated">BarDataProxy QML 유형</target>
        </trans-unit>
        <trans-unit id="283b4e569a3733f6427bdb91914ae02461a016a4" translate="yes" xml:space="preserve">
          <source>BarDataProxy.columnLabels</source>
          <target state="translated">BarDataProxy.columnLabels</target>
        </trans-unit>
        <trans-unit id="f09083cc1ccdeb6d52a48dbe986be59d9a65667c" translate="yes" xml:space="preserve">
          <source>BarDataProxy.rowCount</source>
          <target state="translated">BarDataProxy.rowCount</target>
        </trans-unit>
        <trans-unit id="326c83d46f34ba8ef347e8608a2a239f5de9aa00" translate="yes" xml:space="preserve">
          <source>BarDataProxy.rowLabels</source>
          <target state="translated">BarDataProxy.rowLabels</target>
        </trans-unit>
        <trans-unit id="bc6a517940d82fd1c7cd477fac345e2bb3f08bf9" translate="yes" xml:space="preserve">
          <source>BarDataProxy.series</source>
          <target state="translated">BarDataProxy.series</target>
        </trans-unit>
        <trans-unit id="603fca3a2492aceed1ed280b4418c7f576850aec" translate="yes" xml:space="preserve">
          <source>BarSeries</source>
          <target state="translated">BarSeries</target>
        </trans-unit>
        <trans-unit id="5e2642aec5a3369d7c627b65f1dd9a7e45bb4393" translate="yes" xml:space="preserve">
          <source>BarSeries (QML type)</source>
          <target state="translated">BarSeries (QML 유형)</target>
        </trans-unit>
        <trans-unit id="6c67dff896f33e53e257f210c57a19d8302d4bce" translate="yes" xml:space="preserve">
          <source>BarSeries QML Type</source>
          <target state="translated">BarSeries QML 유형</target>
        </trans-unit>
        <trans-unit id="fbf8fcc4b2b1e3a176ea16f3a6a935263adcd44d" translate="yes" xml:space="preserve">
          <source>BarSet</source>
          <target state="translated">BarSet</target>
        </trans-unit>
        <trans-unit id="293db4eb85aa150993f82733bc958e50592bacbc" translate="yes" xml:space="preserve">
          <source>BarSet (QML type)</source>
          <target state="translated">BarSet (QML 유형)</target>
        </trans-unit>
        <trans-unit id="23ba2da667f51ae9e85cac5488b2714d845ee37b" translate="yes" xml:space="preserve">
          <source>BarSet &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtcharts-abstractbarseries#append-method&quot;&gt;append&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">BarSet &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtcharts-abstractbarseries#append-method&quot;&gt;추가&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (</target>
        </trans-unit>
        <trans-unit id="a00d8d3acb0bfc3272e5054a9492722d354ca968" translate="yes" xml:space="preserve">
          <source>BarSet &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtcharts-abstractbarseries#at-method&quot;&gt;at&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">BarSet 나 &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtcharts-abstractbarseries#at-method&quot;&gt;에&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (</target>
        </trans-unit>
        <trans-unit id="d1856a0e2115b035719faa98ac0933947f9d8d11" translate="yes" xml:space="preserve">
          <source>BarSet &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtcharts-abstractbarseries#insert-method&quot;&gt;insert&lt;/a&gt;&lt;/b&gt;&lt;/b&gt;(</source>
          <target state="translated">바 세트 &lt;b&gt;&lt;b&gt;&lt;a href=&quot;qml-qtcharts-abstractbarseries#insert-method&quot;&gt;인서트&lt;/a&gt;&lt;/b&gt;&lt;/b&gt; (</target>
        </trans-unit>
        <trans-unit id="cf2bc4685f9b80914db04368a16710511b4dcb40" translate="yes" xml:space="preserve">
          <source>BarSet QML Type</source>
          <target state="translated">BarSet QML 유형</target>
        </trans-unit>
        <trans-unit id="e6d5310b45ae5e8d3772925d5ef1e71283d4f058" translate="yes" xml:space="preserve">
          <source>BarSet.append()</source>
          <target state="translated">BarSet.append()</target>
        </trans-unit>
        <trans-unit id="357e4e069155d4ea365acb4b96713c2a6646aca2" translate="yes" xml:space="preserve">
          <source>BarSet.at()</source>
          <target state="translated">BarSet.at()</target>
        </trans-unit>
        <trans-unit id="5b47cc20327bdd9db714f7882591b82a1067ccc4" translate="yes" xml:space="preserve">
          <source>BarSet.borderColor</source>
          <target state="translated">BarSet.borderColor</target>
        </trans-unit>
        <trans-unit id="6d1c98b56dfbe01fb927f141398adc11b30b1ab5" translate="yes" xml:space="preserve">
          <source>BarSet.borderWidth</source>
          <target state="translated">BarSet.borderWidth</target>
        </trans-unit>
        <trans-unit id="6736ddb655f696799981ce58035604b869118cec" translate="yes" xml:space="preserve">
          <source>BarSet.brushFilename</source>
          <target state="translated">BarSet.brushFilename</target>
        </trans-unit>
        <trans-unit id="7575d2f7e239fde46370e3efd8ba11b9f8cd6cf1" translate="yes" xml:space="preserve">
          <source>BarSet.clicked()</source>
          <target state="translated">BarSet.clicked()</target>
        </trans-unit>
        <trans-unit id="eb6c3440f11ee189e4cffa4f5a14a73138f53f01" translate="yes" xml:space="preserve">
          <source>BarSet.color</source>
          <target state="translated">BarSet.color</target>
        </trans-unit>
        <trans-unit id="0dcd98c36e713a3a55c8bc9f1cb10f4a77585c37" translate="yes" xml:space="preserve">
          <source>BarSet.count</source>
          <target state="translated">BarSet.count</target>
        </trans-unit>
        <trans-unit id="0a81e5feb71d4e5268429d35e52e8f95ecd7469e" translate="yes" xml:space="preserve">
          <source>BarSet.doubleClicked()</source>
          <target state="translated">BarSet.doubleClicked()</target>
        </trans-unit>
        <trans-unit id="6df08fb4f2fc594620f84788cec5a72b74e5c742" translate="yes" xml:space="preserve">
          <source>BarSet.label</source>
          <target state="translated">BarSet.label</target>
        </trans-unit>
        <trans-unit id="1c31d0ee39fd6255b92e3b95b57c21ef0efa0662" translate="yes" xml:space="preserve">
          <source>BarSet.labelColor</source>
          <target state="translated">BarSet.labelColor</target>
        </trans-unit>
        <trans-unit id="27e6a47646a561e7db3c3a9d1247a46ad0afa089" translate="yes" xml:space="preserve">
          <source>BarSet.labelFont</source>
          <target state="translated">BarSet.labelFont</target>
        </trans-unit>
        <trans-unit id="1b2c1ea883d55aec2928c48e2e6b14dc749af969" translate="yes" xml:space="preserve">
          <source>BarSet.pressed()</source>
          <target state="translated">BarSet.pressed()</target>
        </trans-unit>
        <trans-unit id="e76226d5578d6effb1c11b41abfd2a5966e25b77" translate="yes" xml:space="preserve">
          <source>BarSet.released()</source>
          <target state="translated">BarSet.released()</target>
        </trans-unit>
        <trans-unit id="452ecdaad30ca1400d2044bf7f4c519b1fbbdc64" translate="yes" xml:space="preserve">
          <source>BarSet.remove()</source>
          <target state="translated">BarSet.remove()</target>
        </trans-unit>
        <trans-unit id="8fb8ca9431030e0be0c2b659991c4c9922273aac" translate="yes" xml:space="preserve">
          <source>BarSet.replace()</source>
          <target state="translated">BarSet.replace()</target>
        </trans-unit>
        <trans-unit id="4dcae701a902cc1bd07598f56fb58aa760581d40" translate="yes" xml:space="preserve">
          <source>BarSet.valueChanged()</source>
          <target state="translated">BarSet.valueChanged()</target>
        </trans-unit>
        <trans-unit id="1d93ddc08b5c93d85042fae9cd15bf22689970fb" translate="yes" xml:space="preserve">
          <source>BarSet.values</source>
          <target state="translated">BarSet.values</target>
        </trans-unit>
        <trans-unit id="eeb7eb839de6cf0c817b87b4810134509890dfd0" translate="yes" xml:space="preserve">
          <source>BarSet.valuesAdded()</source>
          <target state="translated">BarSet.valuesAdded()</target>
        </trans-unit>
        <trans-unit id="ef6d8772494f078cba8253979df5a785347aae97" translate="yes" xml:space="preserve">
          <source>BarSet.valuesRemoved()</source>
          <target state="translated">BarSet.valuesRemoved()</target>
        </trans-unit>
        <trans-unit id="ce6f381092718e5e191d0f56a63293935cad7e5c" translate="yes" xml:space="preserve">
          <source>Barcode exposure mode. Since 5.5</source>
          <target state="translated">바코드 노출 모드. 5.5 이후</target>
        </trans-unit>
        <trans-unit id="242c0f499cf57f05bc93c33b559556824c286726" translate="yes" xml:space="preserve">
          <source>Barcode mode. Since 5.5</source>
          <target state="translated">바코드 모드. 5.5 이후</target>
        </trans-unit>
        <trans-unit id="f00c26d51aa389fcde86273b8620851c112a3f07" translate="yes" xml:space="preserve">
          <source>Bars renderer is optimized to access only data that is within the data window and thus should not suffer noticeable slowdown even if more data is continually added to the proxy.</source>
          <target state="translated">바 렌더러는 데이터 창에있는 데이터에만 액세스하도록 최적화되어 있으므로 프록시에 더 많은 데이터가 지속적으로 추가 되더라도 눈에 띄게 느려지지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="fdfd660349da1475aa715615daf956e7ae825d28" translate="yes" xml:space="preserve">
          <source>Bars3D (QML type)</source>
          <target state="translated">Bars3D (QML 유형)</target>
        </trans-unit>
        <trans-unit id="e7381a96b0b22b74463757c52a5f4222e27e8c80" translate="yes" xml:space="preserve">
          <source>Bars3D QML Type</source>
          <target state="translated">Bars3D QML 유형</target>
        </trans-unit>
        <trans-unit id="bb00904c85a53c4581f685893aedb09909174c57" translate="yes" xml:space="preserve">
          <source>Bars3D.addSeries()</source>
          <target state="translated">Bars3D.addSeries()</target>
        </trans-unit>
        <trans-unit id="5e64bea15907594dc7825ccb8a0e4c11c9b0649f" translate="yes" xml:space="preserve">
          <source>Bars3D.barSpacing</source>
          <target state="translated">Bars3D.barSpacing</target>
        </trans-unit>
        <trans-unit id="5729d18fd3f321ff78a3fe8b7e69d969c65833ad" translate="yes" xml:space="preserve">
          <source>Bars3D.barSpacingRelative</source>
          <target state="translated">Bars3D.barSpacingRelative</target>
        </trans-unit>
        <trans-unit id="54be656eb84cf5318ec98c100cf65f5e76bbb617" translate="yes" xml:space="preserve">
          <source>Bars3D.barThickness</source>
          <target state="translated">Bars3D.barThickness</target>
        </trans-unit>
        <trans-unit id="be8b821faed7324a751896b88929a4fcc4351984" translate="yes" xml:space="preserve">
          <source>Bars3D.columnAxis</source>
          <target state="translated">Bars3D.columnAxis</target>
        </trans-unit>
        <trans-unit id="9a07bb5779993995c1a53d201188643e8c220ed1" translate="yes" xml:space="preserve">
          <source>Bars3D.floorLevel</source>
          <target state="translated">Bars3D.floorLevel</target>
        </trans-unit>
        <trans-unit id="99457b34424f86d06117d141a9b59ee21eb1476d" translate="yes" xml:space="preserve">
          <source>Bars3D.insertSeries()</source>
          <target state="translated">Bars3D.insertSeries()</target>
        </trans-unit>
        <trans-unit id="b5794ea7b23aefc7c6f66fa7ff80dca522f13e92" translate="yes" xml:space="preserve">
          <source>Bars3D.multiSeriesUniform</source>
          <target state="translated">Bars3D.multiSeriesUniform</target>
        </trans-unit>
        <trans-unit id="fb611a4e0c49407875c7fa8a15e197c70ae06442" translate="yes" xml:space="preserve">
          <source>Bars3D.primarySeries</source>
          <target state="translated">Bars3D.primarySeries</target>
        </trans-unit>
        <trans-unit id="9021870b8cc66b5e642fc5b35db901d08a9c6890" translate="yes" xml:space="preserve">
          <source>Bars3D.removeSeries()</source>
          <target state="translated">Bars3D.removeSeries()</target>
        </trans-unit>
        <trans-unit id="3ea655879762f373bae2108db037de3b9839fa44" translate="yes" xml:space="preserve">
          <source>Bars3D.rowAxis</source>
          <target state="translated">Bars3D.rowAxis</target>
        </trans-unit>
        <trans-unit id="6ae3b6d04497904aad69548df806525e991cae99" translate="yes" xml:space="preserve">
          <source>Bars3D.selectedSeries</source>
          <target state="translated">Bars3D.selectedSeries</target>
        </trans-unit>
        <trans-unit id="4d038ce8bf89b4e1bfcfd1d419c612b7d461578f" translate="yes" xml:space="preserve">
          <source>Bars3D.seriesList</source>
          <target state="translated">Bars3D.seriesList</target>
        </trans-unit>
        <trans-unit id="170f86bb7f67ef11969bc8fd06f0b66f5bf42a58" translate="yes" xml:space="preserve">
          <source>Bars3D.valueAxis</source>
          <target state="translated">Bars3D.valueAxis</target>
        </trans-unit>
        <trans-unit id="077fe9c54ed5ed26fa547f4ded3ef9a9bb066d65" translate="yes" xml:space="preserve">
          <source>Base</source>
          <target state="translated">Base</target>
        </trans-unit>
        <trans-unit id="6250b2d5ba185037a32428d0470aa41b51714997" translate="yes" xml:space="preserve">
          <source>Base Class</source>
          <target state="translated">기본 클래스</target>
        </trans-unit>
        <trans-unit id="aa3af25fccb40a9ab70bc14afa4b2e03b499824c" translate="yes" xml:space="preserve">
          <source>Base Style</source>
          <target state="translated">기본 스타일</target>
        </trans-unit>
        <trans-unit id="1dbd61f556fe3f920e0c1bc1a21ce34dd73099d6" translate="yes" xml:space="preserve">
          <source>Base URL</source>
          <target state="translated">기본 URL</target>
        </trans-unit>
        <trans-unit id="9057866c348690402382cbc7195dad7d4d35179d" translate="yes" xml:space="preserve">
          <source>Base class for all Qt3D backend nodes</source>
          <target state="translated">모든 Qt3D 백엔드 노드의 기본 클래스</target>
        </trans-unit>
        <trans-unit id="12acfc3a33211ae5a4dd048e9fbcac19d77e7428" translate="yes" xml:space="preserve">
          <source>Base class for all graphics items that require signals, slots and properties</source>
          <target state="translated">신호, 슬롯 및 속성이 필요한 모든 그래픽 항목의 기본 클래스</target>
        </trans-unit>
        <trans-unit id="b0c3ef4c5e42e49987650c60b7a2d9781a16419a" translate="yes" xml:space="preserve">
          <source>Base class for all graphics view related events</source>
          <target state="translated">모든 그래픽 뷰 관련 이벤트의 기본 클래스</target>
        </trans-unit>
        <trans-unit id="44826afcd3d415a0e1fc906a120f62843e3cede9" translate="yes" xml:space="preserve">
          <source>Base class for animations</source>
          <target state="translated">애니메이션의 기본 클래스</target>
        </trans-unit>
        <trans-unit id="28a9ffd5376df7443bb6bc3bd42b692e4e35153a" translate="yes" xml:space="preserve">
          <source>Base class for changes in QClipBlendNode</source>
          <target state="translated">QClipBlendNode의 변경 사항에 대한 기본 클래스</target>
        </trans-unit>
        <trans-unit id="e1d9c81e85de361f514b766cef252b4e3ebb6b36" translate="yes" xml:space="preserve">
          <source>Base class for changes in QClipBlendNode. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">QClipBlendNode의 변경 사항에 대한 기본 클래스입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cc512138235d854ac09ba20e7fec48def1b3670b" translate="yes" xml:space="preserve">
          <source>Base class for changes in QClipBlendNode. &lt;a href=&quot;qt3danimation-qclipblendnodecreatedchangebase#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">QClipBlendNode의 변경 사항에 대한 기본 클래스입니다. &lt;a href=&quot;qt3danimation-qclipblendnodecreatedchangebase#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="c6f98f19a06ae99ba8d774260e30996f8b804394" translate="yes" xml:space="preserve">
          <source>Base class for changes that can be sent and received by Qt3D's change notification system</source>
          <target state="translated">Qt3D의 변경 알림 시스템에서 보내고받을 수있는 변경의 기본 클래스</target>
        </trans-unit>
        <trans-unit id="de05264c0e262f81143c483c9ee04a230486c0c0" translate="yes" xml:space="preserve">
          <source>Base class for different kinds of objects that can group parts of a QTextDocument together</source>
          <target state="translated">QTextDocument의 일부를 함께 그룹화 할 수있는 다양한 종류의 객체에 대한 기본 클래스</target>
        </trans-unit>
        <trans-unit id="cf4e8e0ce820c1efb78b9b94f3b591c991f0a449" translate="yes" xml:space="preserve">
          <source>Base class for effects in a Qt 3D scene</source>
          <target state="translated">Qt 3D 장면에서 효과의 기본 클래스</target>
        </trans-unit>
        <trans-unit id="a64ebc1df21eedfe7c99cd33b8c3916ce6b3f4d2" translate="yes" xml:space="preserve">
          <source>Base class for handling creation changes for QAbstractSkeleton sub-classes</source>
          <target state="translated">QAbstractSkeleton 서브 클래스의 작성 변경 사항을 처리하기위한 기본 클래스</target>
        </trans-unit>
        <trans-unit id="7056ea705e09dbce673839a045820ecbe0051937" translate="yes" xml:space="preserve">
          <source>Base class for handling creation changes for QAbstractSkeleton sub-classes. &lt;a href=&quot;qt3danimation-qchannelmappingcreatedchangebase#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">QAbstractSkeleton 서브 클래스의 작성 변경 사항을 처리하기위한 기본 클래스입니다. &lt;a href=&quot;qt3danimation-qchannelmappingcreatedchangebase#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72c86bd47ff778a8b0ed9c21c7f931aa4af5e4c7" translate="yes" xml:space="preserve">
          <source>Base class for jobs executed in an aspect</source>
          <target state="translated">측면에서 실행 된 작업의 기본 클래스</target>
        </trans-unit>
        <trans-unit id="77c77d8c33c5583f9391b9fd5999762ad6ba7b16" translate="yes" xml:space="preserve">
          <source>Base class for proxy item models that can do sorting, filtering or other data processing tasks</source>
          <target state="translated">정렬, 필터링 또는 기타 데이터 처리 작업을 수행 할 수있는 프록시 항목 모델의 기본 클래스</target>
        </trans-unit>
        <trans-unit id="34f71b6ec763abaff4f12085eacf106749ed6690" translate="yes" xml:space="preserve">
          <source>Base class for video presentation.</source>
          <target state="translated">비디오 프리젠 테이션을위한 기본 클래스.</target>
        </trans-unit>
        <trans-unit id="ba57ce7d1fa1140ea5b92758585e77299db01ea5" translate="yes" xml:space="preserve">
          <source>Base class of all FrameGraph configuration nodes</source>
          <target state="translated">모든 FrameGraph 구성 노드의 기본 클래스</target>
        </trans-unit>
        <trans-unit id="a22ead21450528b03872b44e1e12fa3d4e7b2053" translate="yes" xml:space="preserve">
          <source>Base class of all FrameGraph configuration nodes. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">모든 FrameGraph 구성 노드의 기본 클래스. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2385641df41ef98dd349eae4d302e02b8b5ec103" translate="yes" xml:space="preserve">
          <source>Base class of all FrameGraph configuration nodes. &lt;a href=&quot;qt3drender-qframegraphnode#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">모든 FrameGraph 구성 노드의 기본 클래스. &lt;a href=&quot;qt3drender-qframegraphnode#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1af3495256628d6ba5fc9e860c0e636de983d76a" translate="yes" xml:space="preserve">
          <source>Base class of native dialogs</source>
          <target state="translated">기본 대화의 기본 클래스</target>
        </trans-unit>
        <trans-unit id="179702af03c3f24916bc27640db715e1ea17e10c" translate="yes" xml:space="preserve">
          <source>Base class of scene nodes that can be aggregated by Qt3DCore::QEntity instances as a component</source>
          <target state="translated">Qt3DCore :: QEntity 인스턴스에서 컴포넌트로 집계 할 수있는 씬 노드의 기본 클래스</target>
        </trans-unit>
        <trans-unit id="e98cfdf1009e59be0cd381c89f133138bf2f16aa" translate="yes" xml:space="preserve">
          <source>Base implementation for print dialogs used to configure printers</source>
          <target state="translated">프린터 구성에 사용되는 인쇄 대화 상자의 기본 구현</target>
        </trans-unit>
        <trans-unit id="53436b3dcabf3beb5e95fbbc740907da7cdc4349" translate="yes" xml:space="preserve">
          <source>Base index for primary language text descriptors.</source>
          <target state="translated">기본 언어 텍스트 디스크립터의 기본 색인.</target>
        </trans-unit>
        <trans-unit id="93f071701216ec8373f7399119d15dda872ca11a" translate="yes" xml:space="preserve">
          <source>Base map tile service URL used by mapping manager.</source>
          <target state="translated">매핑 관리자가 사용하는 기본 맵 타일 서비스 URL</target>
        </trans-unit>
        <trans-unit id="dd844ee9921fec3a45124428e80f55fe89288843" translate="yes" xml:space="preserve">
          <source>Base proxy class for &lt;a href=&quot;q3dsurface&quot;&gt;Q3DSurface&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;q3dsurface&quot;&gt;Q3DSurface의&lt;/a&gt; 기본 프록시 클래스 . &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f194341abb2bab48c15317158920951235bc9cea" translate="yes" xml:space="preserve">
          <source>Base proxy type for &lt;a href=&quot;qml-qtdatavisualization-surface3d&quot;&gt;Surface3D&lt;/a&gt;. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qml-qtdatavisualization-surface3d&quot;&gt;Surface3D의&lt;/a&gt; 기본 프록시 유형입니다 . &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="201ec345f4b4d8f48415a3b14f4a2f1f0bb8fc1f" translate="yes" xml:space="preserve">
          <source>Base string used for makefile targets related to this subproject. Available only on platforms that use makefiles.</source>
          <target state="translated">이 서브 프로젝트와 관련된 makefile 대상에 사용되는 기본 문자열. makefile을 사용하는 플랫폼에서만 사용 가능합니다.</target>
        </trans-unit>
        <trans-unit id="7417f9710cdc013cd9059531e9e0fa20ba2e1947" translate="yes" xml:space="preserve">
          <source>Base type for 3D visualizations. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">3D 시각화를위한 기본 유형. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1d02e15c0b24b2cbee3efebd529a8f562763a041" translate="yes" xml:space="preserve">
          <source>Base type for all &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdatavisualization-qmlmodule.html&quot;&gt;QtDataVisualization&lt;/a&gt; data proxies. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">모든 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdatavisualization-qmlmodule.html&quot;&gt;QtDataVisualization&lt;/a&gt; 데이터 프록시의 기본 유형 . &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0b98d8865a7432e71ea8c080366c7cb632395e3c" translate="yes" xml:space="preserve">
          <source>Base type for all &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdatavisualization-qmlmodule.html&quot;&gt;QtDataVisualization&lt;/a&gt; input handlers. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">모든 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdatavisualization-qmlmodule.html&quot;&gt;QtDataVisualization&lt;/a&gt; 입력 핸들러의 기본 유형입니다 . &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4b012b9f647bca62aca579a8e636d2b536493288" translate="yes" xml:space="preserve">
          <source>Base type for all Qt Chart series types. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">모든 Qt 차트 시리즈 유형의 기본 유형. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="2c2b985ce24783a4907a9f79b0ca82ac0bb3590c" translate="yes" xml:space="preserve">
          <source>Base type for creating input method in QML. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">QML에서 입력 메소드를 작성하기위한 기본 유형. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="583076a4034c4c0d5baaeae3cecab3bec4ed0964" translate="yes" xml:space="preserve">
          <source>Base type of Shape fill gradients. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">도형 채우기 그라디언트의 기본 유형 &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="cf8eac1feecb1157a0db89305674bf048ec6094b" translate="yes" xml:space="preserve">
          <source>Base type of popup-like user interface controls</source>
          <target state="translated">팝업 같은 사용자 인터페이스 컨트롤의 기본 유형</target>
        </trans-unit>
        <trans-unit id="04419069153bde19bb8ed5131fd70b27b0e9acdb" translate="yes" xml:space="preserve">
          <source>Base type of popup-like user interface controls. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">팝업 같은 사용자 인터페이스 컨트롤의 기본 유형입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9c7569870f254b71e1f5506d656275efd72f451e" translate="yes" xml:space="preserve">
          <source>Base value for custom complex controls. Custom values must be greater than this value.</source>
          <target state="translated">사용자 지정 복잡한 컨트롤의 기본 값입니다. 맞춤 값은이 값보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="4ae72e7cee14c564c16f27cac3718c6a2ac7ba24" translate="yes" xml:space="preserve">
          <source>Base value for custom contents types. Custom values must be greater than this value.</source>
          <target state="translated">사용자 정의 컨텐츠 유형의 기본 값. 맞춤 값은이 값보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="521698b294ccca42e2d07ec05c31fd506aa1bc01" translate="yes" xml:space="preserve">
          <source>Base value for custom control elements; custom values must be greater than this value.</source>
          <target state="translated">사용자 정의 컨트롤 요소의 기본 값 맞춤 값은이 값보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="61ac940cfd66d66cf37788bf2932152ebaa38bbf" translate="yes" xml:space="preserve">
          <source>Base value for custom pixel metrics. Custom values must be greater than this value.</source>
          <target state="translated">맞춤 픽셀 측정 항목의 기본 값입니다. 맞춤 값은이 값보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="85cc13dedc18e9e761399aeca3a134d1bcda503c" translate="yes" xml:space="preserve">
          <source>Base value for custom primitive elements. All values above this are reserved for custom use. Custom values must be greater than this value.</source>
          <target state="translated">커스텀 프리미티브 요소의 기본 값. 이 이상의 모든 값은 사용자 정의용으로 예약되어 있습니다. 맞춤 값은이 값보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="3d9c8df1ea54d2155cf52edf65300f314d95b70a" translate="yes" xml:space="preserve">
          <source>Base value for custom standard pixmaps; custom values must be greater than this value.</source>
          <target state="translated">사용자 정의 표준 픽스맵의 기본 값. 맞춤 값은이 값보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="25c55051a85e8515021bf126ccd5b83f0d7a29dd" translate="yes" xml:space="preserve">
          <source>Base value for custom style hints. Custom values must be greater than this value.</source>
          <target state="translated">사용자 정의 스타일 힌트의 기본 값입니다. 맞춤 값은이 값보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="7fe027bfc37db05b2142077cea9793b88c36a977" translate="yes" xml:space="preserve">
          <source>Base value for custom sub-elements. Custom values must be greater than this value.</source>
          <target state="translated">사용자 정의 하위 요소의 기본 값. 맞춤 값은이 값보다 커야합니다.</target>
        </trans-unit>
        <trans-unit id="bb68f6f326f5b0b590a671adcba8047ff75e6c4b" translate="yes" xml:space="preserve">
          <source>Base value for user types</source>
          <target state="translated">사용자 유형의 기본 값</target>
        </trans-unit>
        <trans-unit id="22a6753c7ab942206abda39cab2e8f7ec0380346" translate="yes" xml:space="preserve">
          <source>Base value for vendor defined white balance modes.</source>
          <target state="translated">공급 업체 정의 화이트 밸런스 모드의 기본 값.</target>
        </trans-unit>
        <trans-unit id="df1e4494adfae0bb7f8ea1330117837b46dc3f62" translate="yes" xml:space="preserve">
          <source>Base64 Decoder</source>
          <target state="translated">Base64 디코더</target>
        </trans-unit>
        <trans-unit id="23a8013ccf1d86814ec4e4aaaf3a3c13a0ca3c6f" translate="yes" xml:space="preserve">
          <source>BaseKey</source>
          <target state="translated">BaseKey</target>
        </trans-unit>
        <trans-unit id="ef0264f460553847598d505785b4d8c848c52155" translate="yes" xml:space="preserve">
          <source>BaseKey (QML type)</source>
          <target state="translated">BaseKey (QML 유형)</target>
        </trans-unit>
        <trans-unit id="574618d5b03ff486fdf382595beb24d6efea84de" translate="yes" xml:space="preserve">
          <source>BaseKey QML Type</source>
          <target state="translated">BaseKey QML 유형</target>
        </trans-unit>
        <trans-unit id="69bcec480d0f7a7616cd43394ab8770677b80d26" translate="yes" xml:space="preserve">
          <source>BaseKey.active</source>
          <target state="translated">BaseKey.active</target>
        </trans-unit>
        <trans-unit id="841056f5e7e26232ea9aba4c2170235b6fa382a8" translate="yes" xml:space="preserve">
          <source>BaseKey.alternativeKeys</source>
          <target state="translated">BaseKey.alternativeKeys</target>
        </trans-unit>
        <trans-unit id="c3780bff43d8093f03775295841152213069fb36" translate="yes" xml:space="preserve">
          <source>BaseKey.clicked()</source>
          <target state="translated">BaseKey.clicked()</target>
        </trans-unit>
        <trans-unit id="1d88b6625b4d34cb42ce0210d960354dbabcfbde" translate="yes" xml:space="preserve">
          <source>BaseKey.displayText</source>
          <target state="translated">BaseKey.displayText</target>
        </trans-unit>
        <trans-unit id="d2b735ae4c7117089760714811a2b253b9a10641" translate="yes" xml:space="preserve">
          <source>BaseKey.effectiveAlternativeKeys</source>
          <target state="translated">BaseKey.effectiveAlternativeKeys</target>
        </trans-unit>
        <trans-unit id="1682e6c396d0e83811d5ef0ec8dcc3b8e24c37da" translate="yes" xml:space="preserve">
          <source>BaseKey.effectiveAlternativeKeysHighlightIndex</source>
          <target state="translated">BaseKey.effectiveAlternativeKeysHighlightIndex</target>
        </trans-unit>
        <trans-unit id="95dc31c79a4f7fd869a9aad889256c3d78916145" translate="yes" xml:space="preserve">
          <source>BaseKey.functionKey</source>
          <target state="translated">BaseKey.functionKey</target>
        </trans-unit>
        <trans-unit id="157de13c127f999f1ea9e8acec90f14400b77ca3" translate="yes" xml:space="preserve">
          <source>BaseKey.highlighted</source>
          <target state="translated">BaseKey.highlighted</target>
        </trans-unit>
        <trans-unit id="0c5cb7864ef42d1dbb950cbd3af29302fa000dca" translate="yes" xml:space="preserve">
          <source>BaseKey.key</source>
          <target state="translated">BaseKey.key</target>
        </trans-unit>
        <trans-unit id="c1cb738f9ffc54ecb6626f7ecc345eb96215919b" translate="yes" xml:space="preserve">
          <source>BaseKey.keyPanelDelegate</source>
          <target state="translated">BaseKey.keyPanelDelegate</target>
        </trans-unit>
        <trans-unit id="ba2459f9870c1e15f7f269df561536a19f62c2d1" translate="yes" xml:space="preserve">
          <source>BaseKey.noKeyEvent</source>
          <target state="translated">BaseKey.noKeyEvent</target>
        </trans-unit>
        <trans-unit id="f137ff48bb082dc4ac8aa52f7c7b0b1256b4990b" translate="yes" xml:space="preserve">
          <source>BaseKey.noModifier</source>
          <target state="translated">BaseKey.noModifier</target>
        </trans-unit>
        <trans-unit id="482a30aa3f35c296341b7bc7866cd3dbbac9b369" translate="yes" xml:space="preserve">
          <source>BaseKey.pressed</source>
          <target state="translated">BaseKey.pressed</target>
        </trans-unit>
        <trans-unit id="40f05e49d98a27377a0b527e6a8d35897f473357" translate="yes" xml:space="preserve">
          <source>BaseKey.repeat</source>
          <target state="translated">BaseKey.repeat</target>
        </trans-unit>
        <trans-unit id="b12fae1d4711bece5eba3474e4e7d0c47ec286a2" translate="yes" xml:space="preserve">
          <source>BaseKey.showPreview</source>
          <target state="translated">BaseKey.showPreview</target>
        </trans-unit>
        <trans-unit id="8ca6114f29bc00fb3bf19a16f16d0dbc9cf5d167" translate="yes" xml:space="preserve">
          <source>BaseKey.smallText</source>
          <target state="translated">BaseKey.smallText</target>
        </trans-unit>
        <trans-unit id="b1902caf09bf7e22417eaaaffd978d49dc393004" translate="yes" xml:space="preserve">
          <source>BaseKey.smallTextVisible</source>
          <target state="translated">BaseKey.smallTextVisible</target>
        </trans-unit>
        <trans-unit id="1869032dfa29a581bb00a778d44cc85fc89e0441" translate="yes" xml:space="preserve">
          <source>BaseKey.soundEffect</source>
          <target state="translated">BaseKey.soundEffect</target>
        </trans-unit>
        <trans-unit id="979060339f30cfafc4dc7db8cdf66281dbc35f79" translate="yes" xml:space="preserve">
          <source>BaseKey.text</source>
          <target state="translated">BaseKey.text</target>
        </trans-unit>
        <trans-unit id="3bf8c5bb706156c9a9a3de32d1816ac0bc0eade7" translate="yes" xml:space="preserve">
          <source>BaseKey.uppercased</source>
          <target state="translated">BaseKey.uppercased</target>
        </trans-unit>
        <trans-unit id="a3656dd7d9c2c986ae6000276c831ae732ee99cf" translate="yes" xml:space="preserve">
          <source>BaseKey.weight</source>
          <target state="translated">BaseKey.weight</target>
        </trans-unit>
        <trans-unit id="aa2c96dacf00c451ef465f6115a45a20bccf1256" translate="yes" xml:space="preserve">
          <source>Basic</source>
          <target state="translated">Basic</target>
        </trans-unit>
        <trans-unit id="5eab8fc3ffa32aa796174a77104a420884806a36" translate="yes" xml:space="preserve">
          <source>Basic Concepts</source>
          <target state="translated">기본 개념</target>
        </trans-unit>
        <trans-unit id="b557a9705d44b880bcdb9b3953a7984727b39294" translate="yes" xml:space="preserve">
          <source>Basic Device Identification. All objects of this category are mandatory.</source>
          <target state="translated">기본 장치 식별. 이 범주의 모든 개체는 필수입니다.</target>
        </trans-unit>
        <trans-unit id="28df83b8a3b27ef40e81f8c43d55de5eca7b9823" translate="yes" xml:space="preserve">
          <source>Basic GUI widgets such as buttons, comboboxes and scrollbars.</source>
          <target state="translated">버튼, 콤보 박스 및 스크롤바와 같은 기본 GUI 위젯.</target>
        </trans-unit>
        <trans-unit id="57a2f6a4322301a00f375726c426cdfd290519f4" translate="yes" xml:space="preserve">
          <source>Basic Imaging Profile (BIP) UUID (profile)</source>
          <target state="translated">기본 이미징 프로파일 (BIP) UUID (프로파일)</target>
        </trans-unit>
        <trans-unit id="c0c94c46dee798cc15bf55287c8c5f1787233894" translate="yes" xml:space="preserve">
          <source>Basic Imaging Profile (BIP) UUID (service)</source>
          <target state="translated">기본 이미징 프로파일 (BIP) UUID (서비스)</target>
        </trans-unit>
        <trans-unit id="500966e34a76d7ceb72e1cf225f05511c3580bdc" translate="yes" xml:space="preserve">
          <source>Basic Layouts</source>
          <target state="translated">기본 레이아웃</target>
        </trans-unit>
        <trans-unit id="54d7ce77b715d9c522f024d3bbbcfb07dcf99c1b" translate="yes" xml:space="preserve">
          <source>Basic Matrix Operations</source>
          <target state="translated">기본 매트릭스 연산</target>
        </trans-unit>
        <trans-unit id="9f88e0bef309c242090fd26f3eb1b60f772c3156" translate="yes" xml:space="preserve">
          <source>Basic Navigation</source>
          <target state="translated">기본 탐색</target>
        </trans-unit>
        <trans-unit id="6ea1d4d4917a0b33db95ec3d6c1de388e1a5db62" translate="yes" xml:space="preserve">
          <source>Basic Printing Profile (BPP) UUID (profile)</source>
          <target state="translated">기본 인쇄 프로파일 (BPP) UUID (프로파일)</target>
        </trans-unit>
        <trans-unit id="05b56c7394cccd917d359ab7d973750ac16ae4c5" translate="yes" xml:space="preserve">
          <source>Basic Printing Profile (BPP) UUID (service)</source>
          <target state="translated">기본 인쇄 프로파일 (BPP) UUID (서비스)</target>
        </trans-unit>
        <trans-unit id="21e062cf89e99a9504070bb30bbeceafa5ca2e5a" translate="yes" xml:space="preserve">
          <source>Basic Qt Data Types</source>
          <target state="translated">기본 Qt 데이터 유형</target>
        </trans-unit>
        <trans-unit id="cc9c53fff0a17bd6177f7d24f682153a9f45b7b9" translate="yes" xml:space="preserve">
          <source>Basic Type</source>
          <target state="translated">기본형</target>
        </trans-unit>
        <trans-unit id="0683d71248dcbb6ef209d3946391b3451983e5b6" translate="yes" xml:space="preserve">
          <source>Basic Types</source>
          <target state="translated">기본 유형</target>
        </trans-unit>
        <trans-unit id="f730cb85febb00ead656627a65edae12ad9f8309" translate="yes" xml:space="preserve">
          <source>Basic Types Provided By QML Modules</source>
          <target state="translated">QML 모듈이 제공하는 기본 유형</target>
        </trans-unit>
        <trans-unit id="56200d3f39ea7fd9bd5e2832e5f242f1380735ad" translate="yes" xml:space="preserve">
          <source>Basic Types Provided By The QML Language</source>
          <target state="translated">QML 언어가 제공하는 기본 유형</target>
        </trans-unit>
        <trans-unit id="b20cbc384159fd820ed034fd3615298ec09f5902" translate="yes" xml:space="preserve">
          <source>Basic Usage</source>
          <target state="translated">기본 사용법</target>
        </trans-unit>
        <trans-unit id="c8932006bc9fb215b4928a3cadf6c2845e613b82" translate="yes" xml:space="preserve">
          <source>Basic Use</source>
          <target state="translated">기본 사용</target>
        </trans-unit>
        <trans-unit id="9efdb76c776f036b2efd71761839af50a9c5d788" translate="yes" xml:space="preserve">
          <source>Basic Widget Classes</source>
          <target state="translated">기본 위젯 클래스</target>
        </trans-unit>
        <trans-unit id="03cdc9f64fd1c085bb10854b62f123e70ce40ba7" translate="yes" xml:space="preserve">
          <source>Basic Widgets</source>
          <target state="translated">기본 위젯</target>
        </trans-unit>
        <trans-unit id="c86087cd5de9786d844a650d0fa7c7b72e59f04b" translate="yes" xml:space="preserve">
          <source>Basic XSLT 2.0 processor</source>
          <target state="translated">기본 XSLT 2.0 프로세서</target>
        </trans-unit>
        <trans-unit id="171c052038dca80c273e5c6799af1d505214771c" translate="yes" xml:space="preserve">
          <source>Basic camera state management, error reporting, and simple zoom properties are available in the Camera itself. For integration with C++ code, the &lt;a href=&quot;qml-qtmultimedia-camera#mediaObject-prop&quot;&gt;mediaObject&lt;/a&gt; property allows you to access the standard Qt Multimedia camera controls.</source>
          <target state="translated">카메라 자체에서 기본 카메라 상태 관리, 오류보고 및 간단한 확대 / 축소 속성을 사용할 수 있습니다. C ++ 코드와 통합하기 위해 &lt;a href=&quot;qml-qtmultimedia-camera#mediaObject-prop&quot;&gt;mediaObject&lt;/a&gt; 속성을 사용하면 표준 Qt Multimedia 카메라 컨트롤에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4e7ae591b0abd861a75d3fa39a7cab907d2a5c8" translate="yes" xml:space="preserve">
          <source>Basic concepts</source>
          <target state="translated">기본 개념</target>
        </trans-unit>
        <trans-unit id="f1e2bc7432b8f51ffd373db7ad9d015dbf59d63d" translate="yes" xml:space="preserve">
          <source>Basic cone.</source>
          <target state="translated">기본 콘.</target>
        </trans-unit>
        <trans-unit id="3091076d3344007ddc4f5ddaf78ec0db9b24fcae" translate="yes" xml:space="preserve">
          <source>Basic cube.</source>
          <target state="translated">기본 큐브.</target>
        </trans-unit>
        <trans-unit id="8f4c731cdb1d0028354bc7461be19a982c26d086" translate="yes" xml:space="preserve">
          <source>Basic cylinder.</source>
          <target state="translated">기본 실린더.</target>
        </trans-unit>
        <trans-unit id="775e39391d93547ff1c949911bdc2e621cbb8a49" translate="yes" xml:space="preserve">
          <source>Basic functionality for camera controllers</source>
          <target state="translated">카메라 컨트롤러의 기본 기능</target>
        </trans-unit>
        <trans-unit id="7b019a6eeaa562b8ce99c3dc5a5d08dd7d15f44e" translate="yes" xml:space="preserve">
          <source>Basic identification (stream access and individual access).</source>
          <target state="translated">기본 식별 (스트림 액세스 및 개별 액세스).</target>
        </trans-unit>
        <trans-unit id="1f9d8b25367a1d6bb45b26b478fa19756beccd60" translate="yes" xml:space="preserve">
          <source>Basic identification (stream access).</source>
          <target state="translated">기본 식별 (스트림 액세스).</target>
        </trans-unit>
        <trans-unit id="86d60eac8e36db885ea50e13c9df7afb621eeff5" translate="yes" xml:space="preserve">
          <source>Basic item delegate that can be used in various views and controls. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">다양한보기 및 컨트롤에서 사용할 수있는 기본 항목 대리자입니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="72df2a8ce97b3ac1dad03857037b9a70800f64e1" translate="yes" xml:space="preserve">
          <source>Basic maneuvers will be included with the route</source>
          <target state="translated">기본 기동은 경로에 포함됩니다</target>
        </trans-unit>
        <trans-unit id="9cd24022297f2dd2af12a885be6d13266550648a" translate="yes" xml:space="preserve">
          <source>Basic manevuers will be included with the route. This will include &lt;a href=&quot;qgeomaneuver#instructionText&quot;&gt;QGeoManeuver::instructionText&lt;/a&gt;().</source>
          <target state="translated">기본 관리자가 경로에 포함됩니다. 여기에는 &lt;a href=&quot;qgeomaneuver#instructionText&quot;&gt;QGeoManeuver :: instructionText&lt;/a&gt; () 가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="1d5b02686bdbf8f5cbc1e68ab9c0ab12550264b9" translate="yes" xml:space="preserve">
          <source>Basic rectangular bar.</source>
          <target state="translated">기본 직사각형 막대.</target>
        </trans-unit>
        <trans-unit id="8292d8844411efb722bf2e801d752ff33cd7bcc6" translate="yes" xml:space="preserve">
          <source>Basic replace functions are implemented as built-in functions.</source>
          <target state="translated">기본 대체 기능은 내장 기능으로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="bde1aa04dc1d179e84e42a8509b1836f067c5ced" translate="yes" xml:space="preserve">
          <source>Basic segment data will be included with the route</source>
          <target state="translated">기본 구간 데이터가 경로에 포함됩니다</target>
        </trans-unit>
        <trans-unit id="c9029061b9cc8673ead55d447041700c043a62c7" translate="yes" xml:space="preserve">
          <source>Basic segment data will be included with the route. This will include &lt;a href=&quot;qgeoroutesegment#path&quot;&gt;QGeoRouteSegment::path&lt;/a&gt;().</source>
          <target state="translated">기본 구간 데이터가 경로에 포함됩니다. 여기에는 &lt;a href=&quot;qgeoroutesegment#path&quot;&gt;QGeoRouteSegment :: path&lt;/a&gt; () 가 포함됩니다 .</target>
        </trans-unit>
        <trans-unit id="9d80c5f9a1836abf854651f52613104dbbb7d9e8" translate="yes" xml:space="preserve">
          <source>Basic support for non-power-of-two textures</source>
          <target state="translated">2의 제곱이 아닌 텍스처에 대한 기본 지원</target>
        </trans-unit>
        <trans-unit id="56ec361548d9a22ca4fe1a48cda42336e89206f5" translate="yes" xml:space="preserve">
          <source>Basic test functions are implemented as built-in functions.</source>
          <target state="translated">기본 테스트 기능은 내장 기능으로 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="e2436b5074f110ed538e7d7a6b9a86eb80563f6c" translate="yes" xml:space="preserve">
          <source>Basic touch display based input handler. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">기본 터치 디스플레이 기반 입력 핸들러. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="27c88e18c52d04d3269ca4df8ddbceeae638f8ae" translate="yes" xml:space="preserve">
          <source>Basic types are built into the QML language, whereas object types cannot be used unless the appropriate &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-modules-topic.html&quot;&gt;module&lt;/a&gt; is imported.</source>
          <target state="translated">기본 유형은 QML 언어로 빌드되는 반면, 적절한 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-modules-topic.html&quot;&gt;모듈&lt;/a&gt; 을 가져 오지 않으면 오브젝트 유형을 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="8dafef83d784dfdd483ea7c667740fb5669ebf26" translate="yes" xml:space="preserve">
          <source>Basic types can be used to refer to:</source>
          <target state="translated">기본 유형을 사용하여 다음을 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6de600a98a08322eef3caedf0e8b6135f104ac1" translate="yes" xml:space="preserve">
          <source>Basic types: integers, floating point (double), boolean, null, etc.</source>
          <target state="translated">기본 유형 : 정수, 부동 소수점 (이중), 부울, 널 등</target>
        </trans-unit>
        <trans-unit id="348bf4c94e965c470891ef3d4553fc7d86c9f629" translate="yes" xml:space="preserve">
          <source>Basic wheel mouse based input handler. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">기본 휠 마우스 기반 입력 핸들러. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="7abc05526ef59f32f62e7b068010cd7a80b20ef9" translate="yes" xml:space="preserve">
          <source>Basis for extension.</source>
          <target state="translated">확장의 기초.</target>
        </trans-unit>
        <trans-unit id="c87df04a6212fd94333fb48d7e78e47251cb9af4" translate="yes" xml:space="preserve">
          <source>Basque</source>
          <target state="translated">Basque</target>
        </trans-unit>
        <trans-unit id="86bb289ec5f29c5574382279efff87b9a0253eaf" translate="yes" xml:space="preserve">
          <source>Batch Roots</source>
          <target state="translated">배치 뿌리</target>
        </trans-unit>
        <trans-unit id="23882b326ae5f26b2e0ffcf3a4f63f44f2373cc5" translate="yes" xml:space="preserve">
          <source>Batch up backend operations so that (potentially slow) I/O and IPC is minimized</source>
          <target state="translated">백엔드 작업을 일괄 처리하여 잠재적으로 느리게 I / O 및 IPC를 최소화</target>
        </trans-unit>
        <trans-unit id="2e659e1da84e2de06714263ed14e4f3dda132219" translate="yes" xml:space="preserve">
          <source>Batching</source>
          <target state="translated">Batching</target>
        </trans-unit>
        <trans-unit id="60e612c896519aa59c5cce9ce702a6c64464f791" translate="yes" xml:space="preserve">
          <source>Batching of alpha blended primitives requires a bit more effort in the renderer as elements that are overlapping need to be rendered in the correct order for alpha blending to look correct. Relying on the Z-buffer alone is not enough. The renderer does a pass over all alpha blended primitives and will look at their bounding rect in addition to their material state to figure out which elements can be batched and which can not.</source>
          <target state="translated">알파 블렌딩 프리미티브의 배치에는 알파 블렌딩이 올바르게 보이도록 겹치는 요소가 올바른 순서로 렌더링되어야하므로 렌더러에서 약간의 노력이 필요합니다. Z- 버퍼에만 의존하는 것만으로는 충분하지 않습니다. 렌더러는 모든 알파 블렌드 프리미티브를 통과하고 배치 할 수있는 요소와 배치 할 수없는 요소를 파악하기 위해 재질 상태 외에 경계 사각형을 살펴 봅니다.</target>
        </trans-unit>
        <trans-unit id="5239ca9ef42e95ae49a2a771ae70c44eae95d097" translate="yes" xml:space="preserve">
          <source>Batching only works for 16-bit indices. All built-in items use 16-bit indices, but a custom geometry is free to also use 32-bit indices.</source>
          <target state="translated">배치는 16 비트 인덱스에서만 작동합니다. 모든 내장 항목은 16 비트 인덱스를 사용하지만 사용자 지정 지오메트리는 32 비트 인덱스도 자유롭게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85d66b60e59ce447f53d66264f045b98f9208f08" translate="yes" xml:space="preserve">
          <source>Battery UUID (service). The Battery Service exposes the state of a battery within a device.</source>
          <target state="translated">배터리 UUID (서비스). 배터리 서비스는 장치 내의 배터리 상태를 노출시킵니다.</target>
        </trans-unit>
        <trans-unit id="94195bcd1edeb7025a97c2ef511352c687e3283f" translate="yes" xml:space="preserve">
          <source>Be as asynchronous as possible</source>
          <target state="translated">가능한 비동기</target>
        </trans-unit>
        <trans-unit id="a222f52699ffaae1546a051defc9fb8816dcdf49" translate="yes" xml:space="preserve">
          <source>Be aware of that overlapping compound items, like in the illustration above, cannot be batched.</source>
          <target state="translated">위의 그림과 같이 겹치는 복합 항목은 일괄 처리 할 수 ​​없습니다.</target>
        </trans-unit>
        <trans-unit id="87ea5892efef4623b68d60587d7a618a8ca92603" translate="yes" xml:space="preserve">
          <source>Be aware of using the correct match of &lt;code&gt;qmake&lt;/code&gt; and Visual Studio. As the Visual Studio format is generic, it does not return an immediate error if for instance you open a Windows Phone project inside Visual Studio for Windows.</source>
          <target state="translated">&lt;code&gt;qmake&lt;/code&gt; 와 Visual Studio 의 올바른 일치를 사용하십시오 . Visual Studio 형식은 일반적이므로 Visual Studio for Windows에서 Windows Phone 프로젝트를 열면 즉각적인 오류가 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a742379a9fac611b5d496bd019d71281dd0508df" translate="yes" xml:space="preserve">
          <source>Be aware that &lt;a href=&quot;qhttppart&quot;&gt;QHttpPart&lt;/a&gt; does not take ownership of the device when set, so it is the developer's responsibility to destroy it when it is not needed anymore. A good idea might be to set the multipart message as parent object for the device, as documented at the documentation for &lt;a href=&quot;qhttpmultipart&quot;&gt;QHttpMultiPart&lt;/a&gt;.</source>
          <target state="translated">주의하십시오 &lt;a href=&quot;qhttppart&quot;&gt;QHttpPart이&lt;/a&gt; 설정 때이 더 이상 필요하지 않을 때 그것을 파괴하는 개발자의 책임을하므로, 장치의 소유권을하지 않습니다. &lt;a href=&quot;qhttpmultipart&quot;&gt;QHttpMultiPart&lt;/a&gt; 문서에 설명 된대로 멀티 파트 메시지를 디바이스의 상위 오브젝트로 설정하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="ebacc993d54874faa420033aaf8b8f0375b9333e" translate="yes" xml:space="preserve">
          <source>Be aware that &lt;a href=&quot;qpixmapcache&quot;&gt;QPixmapCache&lt;/a&gt;'s cache limit may need to be changed to obtain optimal performance.</source>
          <target state="translated">주의하십시오 &lt;a href=&quot;qpixmapcache&quot;&gt;QPixmapCache&lt;/a&gt; 의 캐시 제한이 최적의 성능을 얻기 위해 변경해야 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="659339ee81ed276e9b31bd7da87c6f6a2b1710fd" translate="yes" xml:space="preserve">
          <source>Be aware that &lt;a href=&quot;qqmlparserstatus&quot;&gt;QQmlParserStatus&lt;/a&gt; methods are only called when a class is instantiated by a &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt;. If you create the same class directly from C++, these methods will not be called automatically. To avoid this problem, it is recommended that you start deferring operations from &lt;a href=&quot;qqmlparserstatus#classBegin&quot;&gt;classBegin&lt;/a&gt; instead of from the initial creation of your class. This will still prevent multiple revaluations during initial binding assignment in QML, but will not defer operations invoked from C++.</source>
          <target state="translated">주의하십시오 &lt;a href=&quot;qqmlparserstatus&quot;&gt;QQmlParserStatus의&lt;/a&gt; 클래스가 인스턴스화 될 때 방법 만이라고 &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; . C ++에서 동일한 클래스를 직접 작성하면 이러한 메소드가 자동으로 호출되지 않습니다. 이 문제를 피하려면 클래스를 처음 생성하는 대신 &lt;a href=&quot;qqmlparserstatus#classBegin&quot;&gt;classBegin&lt;/a&gt; 에서 작업을 연기하는 것이 좋습니다 . 이렇게하면 QML에서 초기 바인딩 할당 중 여러 재평가가 여전히 방지되지만 C ++에서 호출 된 작업은 연기되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5aa5abfdcf391d8a1dc4cfec35b393820121ad65" translate="yes" xml:space="preserve">
          <source>Be aware that &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; delays performing some operations. For this reason, you might want to call &lt;a href=&quot;qsettings#sync&quot;&gt;sync&lt;/a&gt;() to ensure that the data stored in &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; is written to disk before calling status().</source>
          <target state="translated">주의하십시오 &lt;a href=&quot;qsettings&quot;&gt;QSettings의&lt;/a&gt; 지연이 어떤 작업을 수행. 따라서 status ()를 호출하기 전에 &lt;a href=&quot;qsettings&quot;&gt;QSettings에&lt;/a&gt; 저장된 데이터 가 디스크에 기록 되도록 &lt;a href=&quot;qsettings#sync&quot;&gt;sync&lt;/a&gt; () 를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="500008985525893d510fe65de9357f9fb3e1f262" translate="yes" xml:space="preserve">
          <source>Be aware that if one of the fallback locations contains a setting with the same key, that setting will be visible after calling remove().</source>
          <target state="translated">대체 위치 중 하나에 동일한 키가있는 설정이 포함되어 있으면 remove ()를 호출 한 후 해당 설정이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4f9ea7d0ae499d4054ec5b13f4151d93ef51b8f9" translate="yes" xml:space="preserve">
          <source>Be aware that if the widget is hidden, it will not accept focus until it is shown.</source>
          <target state="translated">위젯이 숨겨져 있으면 표시 될 때까지 초점을 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3ab89c341bf544206e9f9142e80e5647826449a0" translate="yes" xml:space="preserve">
          <source>Be aware that not all computations can be paused. For example, the &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; returned by &lt;a href=&quot;qtconcurrent#run&quot;&gt;QtConcurrent::run&lt;/a&gt;() cannot be paused; but the &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; returned by &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent::mappedReduced&lt;/a&gt;() can.</source>
          <target state="translated">모든 계산을 일시 중지 할 수있는 것은 아닙니다. 예를 들어, &lt;a href=&quot;qtconcurrent#run&quot;&gt;QtConcurrent :: run&lt;/a&gt; ()에 의해 리턴 된 &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; 는 일시 정지 될 수 없습니다. 그러나 &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent :: mappedReduced&lt;/a&gt; ()가 반환 한 &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; 는 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23f937df4ee59848f0e9c96c2e941f638be10b1c" translate="yes" xml:space="preserve">
          <source>Be aware that not all computations can be paused. For example, the future returned by &lt;a href=&quot;qtconcurrent#run&quot;&gt;QtConcurrent::run&lt;/a&gt;() cannot be paused; but the future returned by &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent::mappedReduced&lt;/a&gt;() can.</source>
          <target state="translated">모든 계산을 일시 중지 할 수있는 것은 아닙니다. 예를 들어, &lt;a href=&quot;qtconcurrent#run&quot;&gt;QtConcurrent :: run&lt;/a&gt; ()에 의해 리턴 된 미래는 일시 정지 될 수 없습니다. 그러나 &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent :: mappedReduced&lt;/a&gt; ()가 반환 한 미래는 가능합니다.</target>
        </trans-unit>
        <trans-unit id="4fae350ed428a0c038bd928e15e864b3313d08fa" translate="yes" xml:space="preserve">
          <source>Be aware that not all computations provide a textual representation of the progress, and as such, this function may return an empty string.</source>
          <target state="translated">모든 계산이 진행 상황을 텍스트로 표시하는 것은 아니며,이 함수는 빈 문자열을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca68f49d2a33ddb97195f12976edcc403d81c948" translate="yes" xml:space="preserve">
          <source>Be aware that not all running asynchronous computations can be canceled or paused. For example, the future returned by &lt;a href=&quot;qtconcurrent#run&quot;&gt;QtConcurrent::run&lt;/a&gt;() cannot be canceled; but the future returned by &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent::mappedReduced&lt;/a&gt;() can.</source>
          <target state="translated">실행중인 모든 비동기 계산을 취소하거나 일시 중지 할 수있는 것은 아닙니다. 예를 들어, &lt;a href=&quot;qtconcurrent#run&quot;&gt;QtConcurrent :: run&lt;/a&gt; ()에 의해 리턴 된 미래는 취소 할 수 없습니다. 그러나 &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent :: mappedReduced&lt;/a&gt; ()가 반환 한 미래는 가능합니다.</target>
        </trans-unit>
        <trans-unit id="dff3d67315c784902909334a017c8eb22c126483" translate="yes" xml:space="preserve">
          <source>Be aware that not all running asynchronous computations can be canceled. For example, the &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; returned by &lt;a href=&quot;qtconcurrent#run&quot;&gt;QtConcurrent::run&lt;/a&gt;() cannot be canceled; but the &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; returned by &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent::mappedReduced&lt;/a&gt;() can.</source>
          <target state="translated">실행중인 모든 비동기 계산을 취소 할 수있는 것은 아닙니다. 예를 들어, &lt;a href=&quot;qtconcurrent#run&quot;&gt;QtConcurrent :: run&lt;/a&gt; ()에 의해 리턴 된 &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; 는 취소 할 수 없습니다. 그러나 &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent :: mappedReduced&lt;/a&gt; ()가 반환 한 &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; 는 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aae5aa40944fe9c4a4c916db141f446fb3ecf1fc" translate="yes" xml:space="preserve">
          <source>Be aware that not all running asynchronous computations can be canceled. For example, the future returned by &lt;a href=&quot;qtconcurrent#run&quot;&gt;QtConcurrent::run&lt;/a&gt;() cannot be canceled; but the future returned by &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent::mappedReduced&lt;/a&gt;() can.</source>
          <target state="translated">실행중인 모든 비동기 계산을 취소 할 수있는 것은 아닙니다. 예를 들어, &lt;a href=&quot;qtconcurrent#run&quot;&gt;QtConcurrent :: run&lt;/a&gt; ()에 의해 리턴 된 미래는 취소 할 수 없습니다. 그러나 &lt;a href=&quot;qtconcurrent#mappedReduced&quot;&gt;QtConcurrent :: mappedReduced&lt;/a&gt; ()가 반환 한 미래는 가능합니다.</target>
        </trans-unit>
        <trans-unit id="1ba77c894f6b897db96839fb71fe2b6f908ac4b5" translate="yes" xml:space="preserve">
          <source>Be aware that the computation may still be running even though this function returns &lt;code&gt;true&lt;/code&gt;. See &lt;a href=&quot;qfuture#cancel&quot;&gt;cancel&lt;/a&gt;() for more details.</source>
          <target state="translated">이 함수가 &lt;code&gt;true&lt;/code&gt; 를 반환하더라도 계산은 여전히 ​​실행 중일 수 있습니다 . 자세한 내용은 &lt;a href=&quot;qfuture#cancel&quot;&gt;취소&lt;/a&gt; ()를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6b2709388415dd5428f7d5bdff446aef5ed5eb3c" translate="yes" xml:space="preserve">
          <source>Be aware that the computation may still be running even though this function returns &lt;code&gt;true&lt;/code&gt;. See &lt;a href=&quot;qfuture#setPaused&quot;&gt;setPaused&lt;/a&gt;() for more details.</source>
          <target state="translated">이 함수가 &lt;code&gt;true&lt;/code&gt; 를 반환하더라도 계산은 여전히 ​​실행 중일 수 있습니다 . 자세한 내용은 &lt;a href=&quot;qfuture#setPaused&quot;&gt;setPaused&lt;/a&gt; ()를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ab766c398fda0ba763973e105111a7067d69c5d2" translate="yes" xml:space="preserve">
          <source>Be aware that the computation may still be running even though this function returns &lt;code&gt;true&lt;/code&gt;. See &lt;a href=&quot;qfuturewatcher#cancel&quot;&gt;cancel&lt;/a&gt;() for more details.</source>
          <target state="translated">이 함수가 &lt;code&gt;true&lt;/code&gt; 를 반환하더라도 계산은 여전히 ​​실행 중일 수 있습니다 . 자세한 내용은 &lt;a href=&quot;qfuturewatcher#cancel&quot;&gt;취소&lt;/a&gt; ()를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4490da15ea4d56e4626fda089404a584996b5a44" translate="yes" xml:space="preserve">
          <source>Be aware that the computation may still be running even though this function returns &lt;code&gt;true&lt;/code&gt;. See &lt;a href=&quot;qfuturewatcher#setPaused&quot;&gt;setPaused&lt;/a&gt;() for more details.</source>
          <target state="translated">이 함수가 &lt;code&gt;true&lt;/code&gt; 를 반환하더라도 계산은 여전히 ​​실행 중일 수 있습니다 . 자세한 내용은 &lt;a href=&quot;qfuturewatcher#setPaused&quot;&gt;setPaused&lt;/a&gt; ()를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5a2da46bd3f0c56b1e0afd0dcff464655311fb3d" translate="yes" xml:space="preserve">
          <source>Be aware, however, that a property change signal for a basic type is emitted whenever</source>
          <target state="translated">그러나 기본 유형의 속성 변경 신호는 항상 방출됩니다.</target>
        </trans-unit>
        <trans-unit id="2c25b2e319aefd9d5ec8a4c89cccb76802e17157" translate="yes" xml:space="preserve">
          <source>Be sure to disable frustum culling in the FrameGraph through which the skybox rendering happens.</source>
          <target state="translated">스카이 박스 렌더링이 발생하는 FrameGraph에서 절두체 컬링을 비활성화해야합니다.</target>
        </trans-unit>
        <trans-unit id="3b39d6437b0a43efb3dc751200bf6e474de18509" translate="yes" xml:space="preserve">
          <source>Beach exposure mode.</source>
          <target state="translated">해변 노출 모드.</target>
        </trans-unit>
        <trans-unit id="cad14508d83e450892b6fce4c8021412199a3085" translate="yes" xml:space="preserve">
          <source>Bear in mind that a &lt;code&gt;cacheBuffer&lt;/code&gt; keeps additional delegates in-memory. Therefore, the value derived from utilizing the &lt;code&gt;cacheBuffer&lt;/code&gt; must be balanced against additional memory usage. Developers should use benchmarking to find the best value for their use-case, since the increased memory pressure caused by utilizing a &lt;code&gt;cacheBuffer&lt;/code&gt; can, in some rare cases, cause reduced frame rate when scrolling.</source>
          <target state="translated">마음에 베어는 것을 &lt;code&gt;cacheBuffer&lt;/code&gt; 는 인 메모리 추가 대의원을 유지합니다. 따라서 &lt;code&gt;cacheBuffer&lt;/code&gt; 를 사용하여 파생 된 값은 추가 메모리 사용과 균형을 이루어야합니다. &lt;code&gt;cacheBuffer&lt;/code&gt; 를 사용하여 발생하는 메모리 증가로 인해 드물게 스크롤 할 때 프레임 속도가 저하 될 수 있으므로 개발자는 벤치마킹을 사용하여 사용 사례에 가장 적합한 값을 찾아야합니다 .</target>
        </trans-unit>
        <trans-unit id="0372aa31fd05bc2811b3f4b8beb8ee2a14a9e6d4" translate="yes" xml:space="preserve">
          <source>Bearer Management</source>
          <target state="translated">무기명 관리</target>
        </trans-unit>
        <trans-unit id="229abb6b1d0ae66f2b4d88fb4e169ca0aaa916a1" translate="yes" xml:space="preserve">
          <source>Bearer Management Support</source>
          <target state="translated">무기명 관리 지원</target>
        </trans-unit>
        <trans-unit id="7437d2c153097896218f74fca2cca80f145500d5" translate="yes" xml:space="preserve">
          <source>Bearer Management controls the connectivity state of the device such that the application can start or stop network interfaces and roam transparently between access points.</source>
          <target state="translated">베어러 관리는 애플리케이션이 네트워크 인터페이스를 시작 또는 중지하고 액세스 지점간에 투명하게 로밍 할 수 있도록 장치의 연결 상태를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="6e7d186b5c44cb5408c660eaa5b78432323639b2" translate="yes" xml:space="preserve">
          <source>Bearer Management controls the connectivity state of the system so that the user can start or stop interfaces or roam transparently between access points.</source>
          <target state="translated">Bearer Management는 사용자가 인터페이스를 시작 또는 중지하거나 액세스 지점간에 투명하게 로밍 할 수 있도록 시스템의 연결 상태를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="83d6c43e3a60ddc92321c343bf1bee3541fec591" translate="yes" xml:space="preserve">
          <source>Bearer2G</source>
          <target state="translated">Bearer2G</target>
        </trans-unit>
        <trans-unit id="8671cc39df8cc35b804efbc4fe27c3ba20901555" translate="yes" xml:space="preserve">
          <source>Bearer3G</source>
          <target state="translated">Bearer3G</target>
        </trans-unit>
        <trans-unit id="ddb0de1a8048b5733df457b765dfef4d4b4b0e52" translate="yes" xml:space="preserve">
          <source>Bearer4G</source>
          <target state="translated">Bearer4G</target>
        </trans-unit>
        <trans-unit id="d23590554eaa8401f281cbd4334d93f51ae9ae2b" translate="yes" xml:space="preserve">
          <source>BearerBluetooth</source>
          <target state="translated">BearerBluetooth</target>
        </trans-unit>
        <trans-unit id="892df197aef27388991946736bec897d178be99a" translate="yes" xml:space="preserve">
          <source>BearerCDMA2000</source>
          <target state="translated">BearerCDMA2000</target>
        </trans-unit>
        <trans-unit id="b95df0a446ca670283de6847781f91e408fd261a" translate="yes" xml:space="preserve">
          <source>BearerEVDO</source>
          <target state="translated">BearerEVDO</target>
        </trans-unit>
        <trans-unit id="c2973637ff427811b87382387570b9962e9da5bf" translate="yes" xml:space="preserve">
          <source>BearerEthernet</source>
          <target state="translated">BearerEthernet</target>
        </trans-unit>
        <trans-unit id="184830575b74ea5589f07aaefbb72367f61181ae" translate="yes" xml:space="preserve">
          <source>BearerHSPA</source>
          <target state="translated">BearerHSPA</target>
        </trans-unit>
        <trans-unit id="d481c210a699b66bbff42bdad051e753d6e53a56" translate="yes" xml:space="preserve">
          <source>BearerLTE</source>
          <target state="translated">BearerLTE</target>
        </trans-unit>
        <trans-unit id="3ea2a05ff6917e17991ebf8bed9acf635aa132f3" translate="yes" xml:space="preserve">
          <source>BearerType</source>
          <target state="translated">BearerType</target>
        </trans-unit>
        <trans-unit id="aa71af68ec6e36f4d4d749fbd1465774296c841e" translate="yes" xml:space="preserve">
          <source>BearerUnknown</source>
          <target state="translated">BearerUnknown</target>
        </trans-unit>
        <trans-unit id="8bf638f0ee2e7e4a0b0edb0133f3fa7790b2de6c" translate="yes" xml:space="preserve">
          <source>BearerWCDMA</source>
          <target state="translated">BearerWCDMA</target>
        </trans-unit>
        <trans-unit id="768e97cd5209d46f5713a188f9a3dd138172b8be" translate="yes" xml:space="preserve">
          <source>BearerWLAN</source>
          <target state="translated">BearerWLAN</target>
        </trans-unit>
        <trans-unit id="386c719679c662866aafa9acc3050bf3b19c59a7" translate="yes" xml:space="preserve">
          <source>BearerWiMAX</source>
          <target state="translated">BearerWiMAX</target>
        </trans-unit>
        <trans-unit id="eaebe47425c9f545a41d705608612a34bef824ca" translate="yes" xml:space="preserve">
          <source>Because</source>
          <target state="translated">Because</target>
        </trans-unit>
        <trans-unit id="1c0bf7d4cab5a1703f8116d192cbfaf60a3e489f" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qdate&quot;&gt;QDate&lt;/a&gt; is user-defined, you must include the &lt;code&gt;&amp;lt;QDate&amp;gt;&lt;/code&gt; header file with the property declaration.</source>
          <target state="translated">&lt;a href=&quot;qdate&quot;&gt;QDate&lt;/a&gt; 는 사용자 정의 이므로 특성 선언에 &lt;code&gt;&amp;lt;QDate&amp;gt;&lt;/code&gt; 헤더 파일을 포함시켜야합니다 .</target>
        </trans-unit>
        <trans-unit id="c84fc940972cf8ada135dd55d01c0a93e6d7c7b3" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qexplicitlyshareddatapointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt; does not do the automatic</source>
          <target state="translated">&lt;a href=&quot;qexplicitlyshareddatapointer&quot;&gt;QExplicitlySharedDataPointer&lt;/a&gt; 가 자동으로 수행하지 않기 때문에</target>
        </trans-unit>
        <trans-unit id="59005c50e98336720c7912ca95fc555fbaf736e5" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; inherits &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; indirectly, it already provides the same drag and drop functionality that &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; provides. In addition, as a convenience, the Graphics View framework provides drag and drop support for the scene, and for each and every item. As the view receives a drag, it translates the drag and drop events into a &lt;a href=&quot;qgraphicsscenedragdropevent&quot;&gt;QGraphicsSceneDragDropEvent&lt;/a&gt;, which is then forwarded to the scene. The scene takes over scheduling of this event, and sends it to the first item under the mouse cursor that accepts drops.</source>
          <target state="translated">때문에 &lt;a href=&quot;qgraphicsview&quot;&gt;를 QGraphicsView&lt;/a&gt; 상속 &lt;a href=&quot;qwidget&quot;&gt;는 QWidget은&lt;/a&gt; 간접적으로, 이미 같은 드래그 앤 드롭 기능을 제공 &lt;a href=&quot;qwidget&quot;&gt;는 QWidget을&lt;/a&gt; 제공합니다. 또한 편의상 Graphics View 프레임 워크는 장면과 각 항목마다 드래그 앤 드롭을 지원합니다. 뷰는 드래그를 받으면 드래그 앤 드롭 이벤트를 &lt;a href=&quot;qgraphicsscenedragdropevent&quot;&gt;QGraphicsSceneDragDropEvent&lt;/a&gt; 로 변환 한 다음 장면으로 전달됩니다. 장면은이 이벤트의 예약을 인계하여 마우스 커서 아래의 첫 번째 항목으로 전송합니다.</target>
        </trans-unit>
        <trans-unit id="547138dbf2e97255c2b553c9fd7e7338925d4352" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; is a &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; subclass, &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; can be used to draw directly onto images. When using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; on a &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, the painting can be performed in another thread than the current GUI thread.</source>
          <target state="translated">때문에 &lt;a href=&quot;qimage&quot;&gt;QImage는&lt;/a&gt; A는 &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice의&lt;/a&gt; 하위 클래스 &lt;a href=&quot;qpainter&quot;&gt;QPainter가이&lt;/a&gt; 이미지 상에 직접 묘화에 사용된다. 사용하는 경우 &lt;a href=&quot;qpainter&quot;&gt;QPainter를을&lt;/a&gt; A의 &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; , 그림은 현재의 GUI 스레드가 아닌 다른 스레드에서 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="379753f1b0f6cf1e51d4961f5d68526f4b06e7c9" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; is implemented as an array of pointers for types that are larger than a pointer or are not movable, this operation requires (&lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;constant time&lt;/a&gt;). For read-only access, an alternative syntax is to use &lt;a href=&quot;qlist#at&quot;&gt;at&lt;/a&gt;():</source>
          <target state="translated">때문에 &lt;a href=&quot;qlist&quot;&gt;QList는&lt;/a&gt; 포인터보다 크거나 이동하지 않은 타입 포인터 배열로 구현되며,이 동작은 (필요 &lt;a href=&quot;containers#algorithmic-complexity&quot;&gt;일정한 시간&lt;/a&gt; ). 읽기 전용 액세스의 경우 대체 구문은 &lt;a href=&quot;qlist#at&quot;&gt;at&lt;/a&gt; () 을 사용하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="14806886331e8dbcadcebc8cc337eec5a436c997" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt; inherits &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, all of &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;'s functionality also applies to &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt;. For example, you can use &lt;a href=&quot;qhash#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() to test whether the hash is empty, and you can traverse a &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt; using &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;'s iterator classes (for example, &lt;a href=&quot;qhashiterator&quot;&gt;QHashIterator&lt;/a&gt;). But in addition, it provides an &lt;a href=&quot;qmultihash#insert&quot;&gt;insert&lt;/a&gt;() function that corresponds to &lt;a href=&quot;qhash#insertMulti&quot;&gt;QHash::insertMulti&lt;/a&gt;(), and a &lt;a href=&quot;qmultihash#replace&quot;&gt;replace&lt;/a&gt;() function that corresponds to &lt;a href=&quot;qhash#insert&quot;&gt;QHash::insert&lt;/a&gt;(). It also provides convenient operator+() and operator+=().</source>
          <target state="translated">때문에 &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash가&lt;/a&gt; 상속 &lt;a href=&quot;qhash#qhash&quot;&gt;QHash을&lt;/a&gt; , 모든 &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; 의 기능도 적용 &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt; . 예를 들어, &lt;a href=&quot;qhash#isEmpty&quot;&gt;isEmpty&lt;/a&gt; ()를 사용 하여 해시가 비어 있는지 테스트하고 &lt;a href=&quot;qmultihash&quot;&gt;QHash&lt;/a&gt; 반복자 클래스 (예 : &lt;a href=&quot;qhashiterator&quot;&gt;QHashIterator&lt;/a&gt; ) 를 사용하여 &lt;a href=&quot;qhash#qhash&quot;&gt;QMultiHash를&lt;/a&gt; 순회 할 수 있습니다 . 또한 &lt;a href=&quot;qhash#insertMulti&quot;&gt;QHash :: insertMulti&lt;/a&gt; ()에 해당 하는 &lt;a href=&quot;qmultihash#insert&quot;&gt;insert&lt;/a&gt; () 함수 와 &lt;a href=&quot;qhash#insert&quot;&gt;QHash :: insert&lt;/a&gt; ()에 해당 하는 &lt;a href=&quot;qmultihash#replace&quot;&gt;replace&lt;/a&gt; () 함수를 제공합니다 . 또한 편리한 operator + () 및 operator + = ()를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4a6c6567649d706c699e494724fc454aa63f81d9" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt; inherits &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, all of &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;'s functionality also applies to &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt;. For example, you can use &lt;a href=&quot;qmap#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() to test whether the map is empty, and you can traverse a &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt; using &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;'s iterator classes (for example, &lt;a href=&quot;qmapiterator&quot;&gt;QMapIterator&lt;/a&gt;). But in addition, it provides an &lt;a href=&quot;qmultimap#insert&quot;&gt;insert&lt;/a&gt;() function that corresponds to &lt;a href=&quot;qmap#insertMulti&quot;&gt;QMap::insertMulti&lt;/a&gt;(), and a &lt;a href=&quot;qmultimap#replace&quot;&gt;replace&lt;/a&gt;() function that corresponds to &lt;a href=&quot;qmap#insert&quot;&gt;QMap::insert&lt;/a&gt;(). It also provides convenient operator+() and operator+=().</source>
          <target state="translated">때문에 &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap가&lt;/a&gt; 상속 &lt;a href=&quot;qmap&quot;&gt;QMap을&lt;/a&gt; , 모든 &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; 의 기능도 적용 &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt; . 예를 들어, &lt;a href=&quot;qmap#isEmpty&quot;&gt;isEmpty&lt;/a&gt; ()를 사용 하여 맵이 비어 있는지 테스트하고 &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; 의 반복자 클래스 (예 : &lt;a href=&quot;qmapiterator&quot;&gt;QMapIterator&lt;/a&gt; ) 를 사용하여 &lt;a href=&quot;qmultimap&quot;&gt;QMultiMap&lt;/a&gt; 을 순회 할 수 있습니다 . 또한 &lt;a href=&quot;qmap#insertMulti&quot;&gt;QMap :: insertMulti&lt;/a&gt; ()에 해당 하는 &lt;a href=&quot;qmultimap#insert&quot;&gt;insert&lt;/a&gt; () 함수 와 &lt;a href=&quot;qmap#insert&quot;&gt;QMap :: insert&lt;/a&gt; ()에 해당 하는 &lt;a href=&quot;qmultimap#replace&quot;&gt;replace&lt;/a&gt; () 함수를 제공합니다 . 또한 편리한 operator + () 및 operator + = ()를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8ade270c978b27ac2933c11820c2cd1452ec0902" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qoperatingsystemversion&quot;&gt;QOperatingSystemVersion&lt;/a&gt; stores both a version number and an OS type, the OS type can be taken into account when performing comparisons. For example, on a &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; system running &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; Sierra (v10.12), the following expression will return &lt;code&gt;false&lt;/code&gt; even though the major version number component of the object on the left hand side of the expression (10) is greater than that of the object on the right (9):</source>
          <target state="translated">때문에 &lt;a href=&quot;qoperatingsystemversion&quot;&gt;QOperatingSystemVersion는&lt;/a&gt; 버전 번호와 OS 유형 모두를 저장하는 비교를 수행 할 때, OS의 종류는 고려 될 수있다. 예를 들어, &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; Sierra (v10.12)를 실행 하는 &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; 시스템 에서 표현식 (10)의 왼쪽에있는 오브젝트의 주요 버전 번호 구성 요소가 오브젝트의 구성 요소보다 크더라도 다음 표현식은 &lt;code&gt;false&lt;/code&gt; 를 리턴 합니다. 오른쪽에 (9) :</target>
        </trans-unit>
        <trans-unit id="238daeb7a050278b5007c305ee57e8f6b4e8cda1" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; is string oriented, there are no \A, \Z, or \z assertions. The \G assertion is not supported but can be emulated in a loop.</source>
          <target state="translated">&lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; 는 문자열 지향 이므로 \ A, \ Z 또는 \ z 어설 션이 없습니다. \ G 어설 션은 지원되지 않지만 루프에서 에뮬레이션 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a85983caeb3ba33ab4f645a061649c748fa1cc8" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; is buffered, this function may have to seek the device to reconstruct a valid device position. This operation can be expensive, so you may want to avoid calling this function in a tight loop.</source>
          <target state="translated">&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; 이 버퍼링 되기 때문에이 함수는 유효한 장치 위치를 재구성하기 위해 장치를 찾아야 할 수도 있습니다. 이 작업은 비용이 많이들 수 있으므로이 함수를 타이트한 루프에서 호출하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="6812bd54fa11245a1a273e71811b6feb6b417aa0" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; measures time within a day and there are 86400 seconds in a day, the result is always between -86400 and 86400.</source>
          <target state="translated">&lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; 은 하루 안에 시간을 측정하고 하루에 86400 초가 있기 때문에 결과는 항상 -86400과 86400 사이입니다.</target>
        </trans-unit>
        <trans-unit id="589e938b20cb3d73232ab1f3d34804b54ff84c2a" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; measures time within a day and there are 86400 seconds in a day, the result is always between -86400000 and 86400000 ms.</source>
          <target state="translated">&lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; 은 하루 안에 시간을 측정하고 하루에 86400 초가 있기 때문에 결과는 항상 -86400000에서 86400000ms 사이입니다.</target>
        </trans-unit>
        <trans-unit id="3684e73ce8b2c2702a20f2cdc786eb23722eac6f" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; is part of the Qt Core module, it cannot provide conversion functions to data types defined in Qt GUI, such as &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;, &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, and &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;. In other words, there is no &lt;code&gt;toColor()&lt;/code&gt; function. Instead, you can use the &lt;a href=&quot;qvariant#value&quot;&gt;QVariant::value&lt;/a&gt;() or the &lt;a href=&quot;qvariant#qvariant_cast&quot;&gt;qvariant_cast&lt;/a&gt;() template function. For example:</source>
          <target state="translated">&lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 는 Qt Core 모듈의 일부 이므로 Qt GUI에 정의 된 데이터 유형 (예 : &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; , &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; 및 &lt;a href=&quot;qpixmap&quot;&gt;QPixmap)에&lt;/a&gt; 변환 기능을 제공 할 수 없습니다 . 즉, &lt;code&gt;toColor()&lt;/code&gt; 함수 가 없습니다 . 대신 &lt;a href=&quot;qvariant#value&quot;&gt;QVariant :: value&lt;/a&gt; () 또는 &lt;a href=&quot;qvariant#qvariant_cast&quot;&gt;qvariant_cast&lt;/a&gt; () 템플릿 함수를 사용할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="338e2425d4d6e9cde01f3437244c5a22e6b29685" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; is part of the Qt Core module, it cannot provide conversion functions to data types such as &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt;, &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt;, and &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt;, which are part of Qt GUI. In other words, there is no &lt;code&gt;toColor()&lt;/code&gt;, &lt;code&gt;toImage()&lt;/code&gt;, or &lt;code&gt;toPixmap()&lt;/code&gt; functions in &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;a href=&quot;qvariant&quot;&gt;QVariant은&lt;/a&gt; Qt의 코어 모듈의 일부이며, 그와 같은 데이터 형식의 변환 기능을 제공 할 수 &lt;a href=&quot;qcolor&quot;&gt;QColor&lt;/a&gt; , &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; 및 &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; Qt는 GUI의 일부이다. 즉, &lt;code&gt;toImage()&lt;/code&gt; 에는 &lt;code&gt;toColor()&lt;/code&gt; , toImage () 또는 &lt;code&gt;toPixmap()&lt;/code&gt; 함수가 &lt;a href=&quot;qvariant&quot;&gt;없습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5d93be5a8510878f37fdab404ff164074179c5c1" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex&lt;/a&gt; is intentionally a simple class, it doesn't have member functions for accessing the properties of nodes. For example, it doesn't have functions for getting a node's name or its list of attributes or child nodes. If you find that you need to retrieve this kind of information from your query results, there are two ways to proceed.</source>
          <target state="translated">때문에 &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;QXmlNodeModelIndex가&lt;/a&gt; 의도적으로 간단한 클래스, 그것은 노드의 속성에 액세스하기위한 멤버 함수가 없습니다. 예를 들어, 노드 이름이나 속성 또는 하위 노드 목록을 가져 오는 기능이 없습니다. 쿼리 결과에서 이러한 종류의 정보를 검색해야하는 경우 다음 두 가지 방법으로 진행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dbfdb6712ce7e4045efaf6e504336e484dc5dd74" translate="yes" xml:space="preserve">
          <source>Because C++ forbids unions from including types that have non-default constructors or destructors, most interesting Qt classes cannot be used in unions. Without &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;, this would be a problem for &lt;a href=&quot;qobject#property&quot;&gt;QObject::property&lt;/a&gt;() and for database work, etc.</source>
          <target state="translated">C ++은 기본이 아닌 생성자 또는 소멸자가있는 유형을 포함하지 못하게하기 때문에 가장 흥미로운 Qt 클래스는 공용체에서 사용할 수 없습니다. &lt;a href=&quot;qvariant&quot;&gt;QVariant가&lt;/a&gt; 없으면 &lt;a href=&quot;qobject#property&quot;&gt;QObject :: property&lt;/a&gt; () 및 데이터베이스 작업 등에 문제가 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bfd3e647b0b26e2b6c22143cc0cf60e5e819cb64" translate="yes" xml:space="preserve">
          <source>Because CSV files are not XML, a subclass of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; is used to present the CSV data to the XQuery engine as if it were XML. What are not shown are the subclasses of &lt;a href=&quot;qabstractxmlreceiver&quot;&gt;QAbstractXmlReceiver&lt;/a&gt; that would then send the selected elements into the DocumentRepresentation node model, and the subclasses of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; that would ultimately write the output files in each format.</source>
          <target state="translated">CSV 파일은 XML이 아니기 때문에 &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; 의 서브 클래스는 XML 데이터를 XML 인 것처럼 XQuery 엔진에 표시하는 데 사용됩니다. 어떤 표시되지 않는 것은의 서브 클래스 &lt;a href=&quot;qabstractxmlreceiver&quot;&gt;QAbstractXmlReceiver&lt;/a&gt; 다음 DocumentRepresentation 노드 모델로 선택한 요소를 보낼 것입니다, 그리고 서브 클래스 &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; 궁극적으로 각 형식으로 출력 파일을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="6be09feaaa98371d4a55c5e68e26736e91811e47" translate="yes" xml:space="preserve">
          <source>Because QML loads qmldir files for locating types, there are two URLs involved in loading a QML type. The URL of the (possibly implicit) qmldir used for locating the type and the URL of the file which defines the type. Intercepting both leads to either complex URL replacement or double URL replacements for the same file.</source>
          <target state="translated">QML은 유형을 찾기 위해 qmldir 파일을로드하기 때문에 QML 유형을로드하는 데 관련된 두 개의 URL이 있습니다. 유형을 찾는 데 사용되는 (암시적일 수있는) qmldir의 URL 및 유형을 정의하는 파일의 URL. 둘 다 가로 채면 동일한 파일에 대한 복잡한 URL 교체 또는 이중 URL 교체가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1209770145a0f1d4376e5a5d10b4d0500c7f028e" translate="yes" xml:space="preserve">
          <source>Because a Windows ID can cover several IANA IDs in several different countries, this function returns the most frequently used IANA ID with no regard for the country and should thus be used with care. It is usually best to request the default for a specific country.</source>
          <target state="translated">Windows ID는 여러 국가의 여러 IANA ID를 포괄 할 수 있으므로이 함수는 국가에 관계없이 가장 자주 사용되는 IANA ID를 반환하므로주의해서 사용해야합니다. 일반적으로 특정 국가의 기본값을 요청하는 것이 가장 좋습니다.</target>
        </trans-unit>
        <trans-unit id="6da00cdb39fc879857174ec7cbe21d66ac8b3214" translate="yes" xml:space="preserve">
          <source>Because a Windows ID can cover several IANA IDs within a given country, the most frequently used IANA ID in that country is returned.</source>
          <target state="translated">Windows ID는 특정 국가 내에서 여러 IANA ID를 처리 할 수 ​​있으므로 해당 국가에서 가장 자주 사용되는 IANA ID가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="00a160fec1379073b7384a9de5deaec770bfb12f" translate="yes" xml:space="preserve">
          <source>Because all resources are placed to one directory, you can register the directory using an XML file (AppxManifest.xml) and Windows Powershell. The reference for these manifest files can be found &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/apps/br211473.aspx&quot;&gt;here&lt;/a&gt;. The target processor architecture must be specified (as opposed to the default, 'neutral'). As soon as these requirements are met, change into your</source>
          <target state="translated">모든 리소스가 하나의 디렉터리에 배치되므로 XML 파일 (AppxManifest.xml)과 Windows Powershell을 사용하여 디렉터리를 등록 할 수 있습니다. 이러한 매니페스트 파일에 대한 참조는 &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/windows/apps/br211473.aspx&quot;&gt;여기&lt;/a&gt; 에서 찾을 수 있습니다 . 대상 프로세서 아키텍처를 지정해야합니다 (기본값 인 '중립'과 반대). 이러한 요구 사항이 충족 되 자마자</target>
        </trans-unit>
        <trans-unit id="592b8ac460b226a21fc0cb1f0b1927efd6373925" translate="yes" xml:space="preserve">
          <source>Because extra selectors are checked before platform the &lt;code&gt;+admin/background.png&lt;/code&gt; will be chosen on Windows when the admin selector is set, and &lt;code&gt;+windows/background.png&lt;/code&gt; will be chosen on Windows when the admin selector is not set. On Linux, the &lt;code&gt;+admin/+linux/background.png&lt;/code&gt; will be chosen when admin is set, and the &lt;code&gt;+linux/background.png&lt;/code&gt; when it is not.</source>
          <target state="translated">플랫폼 전에 추가 선택기가 확인되기 때문에 관리자 선택기가 설정되어 있으면 Windows 에서 &lt;code&gt;+admin/background.png&lt;/code&gt; 가 선택되고 관리자 선택기가 설정되어 있지 않으면 Windows에서 &lt;code&gt;+windows/background.png&lt;/code&gt; 가 선택됩니다. Linux에서 &lt;code&gt;+admin/+linux/background.png&lt;/code&gt; 관리자가 설정 한 경우 선택됩니다 &lt;code&gt;+linux/background.png&lt;/code&gt; 가없는 경우.</target>
        </trans-unit>
        <trans-unit id="bd3c06c57dc7f58580ee553a92f4628ffe902015" translate="yes" xml:space="preserve">
          <source>Because files can be changed by other users or programs, or even by other parts of the same program, there is a function that refreshes the file information: &lt;a href=&quot;qfileinfo#refresh&quot;&gt;refresh&lt;/a&gt;(). If you want to switch off a &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt;'s caching and force it to access the file system every time you request information from it call &lt;a href=&quot;qfileinfo#setCaching&quot;&gt;setCaching&lt;/a&gt;(false).</source>
          <target state="translated">파일은 다른 사용자 나 프로그램 또는 같은 프로그램의 다른 부분에 의해 변경 될 수 있으므로 파일 정보를 새로 고치는 기능이 있습니다 : &lt;a href=&quot;qfileinfo#refresh&quot;&gt;refresh&lt;/a&gt; (). &lt;a href=&quot;qfileinfo&quot;&gt;QFileInfo&lt;/a&gt; 의 캐싱을 끄고 정보를 요청할 때마다 파일 시스템에 액세스하도록 강제하려면 &lt;a href=&quot;qfileinfo#setCaching&quot;&gt;setCaching&lt;/a&gt; (false)을 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="35991efc086b56e2cd3c6f295fffc2922fde0046" translate="yes" xml:space="preserve">
          <source>Because it does no sorting or filtering, this class is most suitable to proxy models which transform the &lt;a href=&quot;qabstractproxymodel#data&quot;&gt;data&lt;/a&gt;() of the source model. For example, a proxy model could be created to define the font used, or the background colour, or the tooltip etc. This removes the need to implement all data handling in the same class that creates the structure of the model, and can also be used to create re-usable components.</source>
          <target state="translated">정렬 또는 필터링이 없으므로이 클래스는 소스 모델 의 &lt;a href=&quot;qabstractproxymodel#data&quot;&gt;데이터&lt;/a&gt; () 를 변환하는 프록시 모델에 가장 적합합니다 . 예를 들어, 사용 된 글꼴, 배경색 또는 툴팁 등을 정의하기 위해 프록시 모델을 작성할 수 있습니다. 이렇게하면 모델 구조를 작성하는 동일한 클래스에서 모든 데이터 처리를 구현할 필요가 없으며 재사용 가능한 구성 요소를 작성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="29ace808fbc3f30a89ab739c332f519c9006d104" translate="yes" xml:space="preserve">
          <source>Because items' position and transformation are relative to the parent, child items' coordinates are unaffected by the parent's transformation, although the parent's transformation implicitly transforms the child. In the above example, even if the parent is rotated and scaled, the child's (0, 10) point will still correspond to the parent's (10, 10) point. Relative to the scene, however, the child will follow the parent's transformation and position. If the parent is scaled (2x, 2x), the child's position will be at scene coordinate (20, 0), and its (10, 0) point will correspond to the point (40, 0) on the scene.</source>
          <target state="translated">항목의 위치와 변환은 부모를 기준으로하기 때문에 부모의 변환은 암시 적으로 자식을 변환하지만 자식 항목의 좌표는 부모의 변환에 영향을받지 않습니다. 위의 예에서 부모가 회전되고 크기가 조절 되더라도 자식의 (0, 10) 지점은 여전히 ​​부모의 (10, 10) 지점에 해당합니다. 그러나 장면과 관련하여 아이는 부모의 변화와 위치를 따릅니다. 부모의 크기가 조정되면 (2x, 2x) 자식의 위치는 장면 좌표 (20, 0)에 있으며 그 (10, 0) 점은 장면의 점 (40, 0)에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="7cede7a76cd98beec7b2ad5fb88b11db9f6b2c1c" translate="yes" xml:space="preserve">
          <source>Because node constructors are expressions, they can be used in XQueries wherever expressions are allowed.</source>
          <target state="translated">노드 생성자는 표현식이므로 표현식이 허용되는 모든 곳에서 XQueries에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac7db94ec27f49293594809069702cfe8efe73cb" translate="yes" xml:space="preserve">
          <source>Because of a bug in some OpenGL drivers, the mechanism used by Qt to cache text glyphs does not work as expected on all Android devices, causing text to appear scrambled. To remedy this, a workaround is in place, which increases memory consumption and can also affect text rendering performance. Before Qt 5.3.2, the workaround was enabled only for a particular set of devices. It is now used by default on all devices.</source>
          <target state="translated">일부 OpenGL 드라이버의 버그로 인해 Qt에서 텍스트 글리프를 캐시하는 데 사용하는 메커니즘이 모든 Android 장치에서 예상대로 작동하지 않아 텍스트가 스크램블 된 것처럼 보입니다. 이 문제를 해결하려면 해결 방법이 있으며 메모리 소비가 증가하고 텍스트 렌더링 성능에도 영향을 줄 수 있습니다. Qt 5.3.2 이전에는 해결 방법이 특정 장치 집합에 대해서만 활성화되었습니다. 이제 모든 장치에서 기본적으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="9483e0880e7e398a902370035d7649ee83c630ca" translate="yes" xml:space="preserve">
          <source>Because of a limitation in the Windows compositor, applications that show a fullscreen web engine view will not properly display popups or other top-level windows. The reason and workaround for the issue can be found at &lt;a href=&quot;windows-issues#fullscreen-opengl-based-windows&quot;&gt;Fullscreen OpenGL Based Windows&lt;/a&gt; and &lt;a href=&quot;qwindowswindowfunctions#setHasBorderInFullScreen&quot;&gt;QWindowsWindowFunctions::setHasBorderInFullScreen&lt;/a&gt;.</source>
          <target state="translated">Windows 컴포 지터의 제한으로 인해 전체 화면 웹 엔진보기를 표시하는 응용 프로그램은 팝업 또는 다른 최상위 창을 제대로 표시하지 않습니다. 이 문제의 원인과 해결 방법은 &lt;a href=&quot;windows-issues#fullscreen-opengl-based-windows&quot;&gt;Fullscreen OpenGL 기반 Windows&lt;/a&gt; 및 &lt;a href=&quot;qwindowswindowfunctions#setHasBorderInFullScreen&quot;&gt;QWindowsWindowFunctions :: setHasBorderInFullScreen&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a9b9897a9ab06107cd22be90a4e48fbc54552504" translate="yes" xml:space="preserve">
          <source>Because of binary compatibility constraints, the &lt;a href=&quot;qnetworkaccessmanager#supportedSchemes&quot;&gt;supportedSchemes&lt;/a&gt;() method (introduced in Qt 5.2) is not virtual. Instead, &lt;a href=&quot;qnetworkaccessmanager#supportedSchemes&quot;&gt;supportedSchemes&lt;/a&gt;() will dynamically detect and call this slot.</source>
          <target state="translated">바이너리 호환성 제약 때문에, &lt;a href=&quot;qnetworkaccessmanager#supportedSchemes&quot;&gt;supportedSchemes&lt;/a&gt; () 메소드 (Qt 5.2에서 도입)는 가상이 아닙니다. 대신 &lt;a href=&quot;qnetworkaccessmanager#supportedSchemes&quot;&gt;supportedSchemes&lt;/a&gt; ()가이 슬롯을 동적으로 감지하고 호출합니다.</target>
        </trans-unit>
        <trans-unit id="3bb1b0395a53256fd0baa1fbe383340ea23d371b" translate="yes" xml:space="preserve">
          <source>Because of that, from Qt 5.9 onwards, Qt WebEngine accessibility support is disabled by default on Linux. It can be re-enabled by setting the &lt;code&gt;QTWEBENGINE_ENABLE_LINUX_ACCESSIBILITY&lt;/code&gt; environment variable to a non-empty value.</source>
          <target state="translated">그 때문에 Qt 5.9부터는 Qt WebEngine 내게 필요한 옵션 지원이 Linux에서 기본적으로 비활성화되어 있습니다. &lt;code&gt;QTWEBENGINE_ENABLE_LINUX_ACCESSIBILITY&lt;/code&gt; 환경 변수를 비어 있지 않은 값 으로 설정하여 다시 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b7def7f90ac3755514fcc248c46c752dfdf07641" translate="yes" xml:space="preserve">
          <source>Because of the modularization of Qt beginning with Qt 5.0, The possibility that qdoc will have to deal with ambiguous links has increased. An ambiguous link is one that has a matching target in more than one Qt module, e.g. the same section title can appear in more than one Qt module, or the name of a C++ class in one module can also be the name of a QML type in another module. A real example in Qt5 is the name Qt itself. Qt is the name of both a C++ namespace in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; and a QML type in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-qmlmodule.html&quot;&gt;QtQml&lt;/a&gt;.</source>
          <target state="translated">Qt 5.0으로 시작하는 Qt의 모듈화로 인해 qdoc이 모호한 링크를 처리해야 할 가능성이 증가했습니다. 모호한 링크는 둘 이상의 Qt 모듈에 일치하는 대상이있는 링크입니다. 예를 들어 동일한 섹션 제목이 둘 이상의 Qt 모듈에 나타날 수 있거나 한 모듈의 C ++ 클래스 이름이 QML 유형의 이름 일 수도 있습니다. 다른 모듈에서. Qt5의 실제 예는 이름 Qt 자체입니다. Qt는에서 C ++ 네임 스페이스 모두의 이름입니다 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-module.html&quot;&gt;QtCore&lt;/a&gt; 과의 QML 유형 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-qmlmodule.html&quot;&gt;QtQml&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f5481edab98c52cda95683dc96278cc985d2c257" translate="yes" xml:space="preserve">
          <source>Because of the way JavaScript properties work, the order in which the test functions are found is unpredictable. To assist with predictability, the test framework will sort the functions on ascending order of name. This can help when there are two tests that must be run in order.</source>
          <target state="translated">JavaScript 속성이 작동하는 방식으로 인해 테스트 함수가 발견되는 순서를 예측할 수 없습니다. 예측 가능성을 돕기 위해 테스트 프레임 워크는 함수를 오름차순으로 정렬합니다. 순서대로 실행해야하는 두 가지 테스트가있을 때 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="7040d86eb6d859efd68b3a8f0675b7d392eeb2c7" translate="yes" xml:space="preserve">
          <source>Because release is considered the active setting (for feature parsing) it will be the CONFIG used to generate the build file. In the common case a second parameter is not needed, but for specific mutual exclusive tests it is invaluable.</source>
          <target state="translated">릴리스는 기능 설정의 활성 설정으로 간주되므로 빌드 파일을 생성하는 데 사용되는 CONFIG가됩니다. 일반적인 경우 두 번째 매개 변수는 필요하지 않지만 특정 상호 배타적 테스트의 경우 매우 중요합니다.</target>
        </trans-unit>
        <trans-unit id="7d62897545f3b252432fcd7eff1f1730076bc127" translate="yes" xml:space="preserve">
          <source>Because the &lt;a href=&quot;http://www.w3.org/TR/xpath-datamodel/&quot;&gt;XPath Data Model interface&lt;/a&gt; presented by &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; allows &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; to operate on non-XML data as if it were XML, implementing subclasses of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; can involve a significant amount of work. The &lt;a href=&quot;qsimplexmlnodemodel&quot;&gt;QSimpleXmlNodeModel&lt;/a&gt; class is provided to simplify the implementation for many common use cases.</source>
          <target state="translated">때문에 &lt;a href=&quot;http://www.w3.org/TR/xpath-datamodel/&quot;&gt;의 XPath 데이터 모델 인터페이스&lt;/a&gt; 가 제시 &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel는&lt;/a&gt; 수 &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery은&lt;/a&gt; 이의 서브 클래스 구현, XML 것처럼 비 XML 데이터에서 작동하도록 &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel을&lt;/a&gt; 위해 상당한 노력을 포함 할 수 있습니다. &lt;a href=&quot;qsimplexmlnodemodel&quot;&gt;QSimpleXmlNodeModel의&lt;/a&gt; 클래스는 많은 일반적인 사용 사례 구현을 단순화하기 위해 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="270786e7fd0d9b809e90a13f45159e3a7b7b057d" translate="yes" xml:space="preserve">
          <source>Because the algorithm recurses through the visual item hierarchy, any children of the green rectangle will also be drawn beneath the blue rectangle and beneath any of the blue rectangle's children.</source>
          <target state="translated">알고리즘은 시각적 항목 계층 구조를 통해 반복되므로 녹색 사각형의 하위 항목도 파란색 사각형 아래 및 파란색 사각형의 하위 항목 아래에 그려집니다.</target>
        </trans-unit>
        <trans-unit id="73e16540415ae002aeab7c61c09332bbdf499f94" translate="yes" xml:space="preserve">
          <source>Because the evaluation order of bindings is not defined, it is not recommended to change anchors via conditional bindings, as this can lead to the ordering issue described above. In the following example the Rectangle will eventually grow to the full width of its parent, because both left and right anchors will be simultaneously set during binding update.</source>
          <target state="translated">바인딩의 평가 순서가 정의되어 있지 않으므로 조건부 바인딩을 통해 앵커를 변경하지 않는 것이 좋습니다.이 경우 위에서 설명한 순서 문제가 발생할 수 있습니다. 다음 예제에서 Rectangle은 바인딩 업데이트 중에 왼쪽 및 오른쪽 앵커가 동시에 설정되므로 결국 부모의 전체 너비로 커집니다.</target>
        </trans-unit>
        <trans-unit id="5ceb48859fde8c99b22dd4383cffa1995d35f78a" translate="yes" xml:space="preserve">
          <source>Because the instance of &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; used in QVariant::Time does not include a zone offset, an instance of QVariant::Time should not be bound to an XQuery variable of type &lt;code&gt;xs:time&lt;/code&gt;, unless the &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; is UTC. When binding a non-UTC &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; to an XQuery variable, it should first be passed as a string, or converted to a &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; with an arbitrary date, and then bound to an XQuery variable of type &lt;code&gt;xs:dateTime&lt;/code&gt;.</source>
          <target state="translated">인스턴스 때문에 &lt;a href=&quot;qtime&quot;&gt;QTime가&lt;/a&gt; QVariant에 사용 :: 시간 오프셋 영역, QVariant의 인스턴스를 포함하지 않는 : 시간 유형의 XQuery에 변수에 바인딩하지 않아야 &lt;code&gt;xs:time&lt;/code&gt; 의하지 않는 한 &lt;a href=&quot;qtime&quot;&gt;QTime은&lt;/a&gt; UTC입니다. 비 UTC &lt;a href=&quot;qtime&quot;&gt;QTime&lt;/a&gt; 을 XQuery 변수에 바인딩하는 경우 먼저 문자열로 전달되거나 임의의 날짜 로 &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt; 으로 변환 된 다음 &lt;code&gt;xs:dateTime&lt;/code&gt; 유형의 XQuery 변수에 바인딩되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="5ea780c830068f8d8f11f5fa47488c304c83de68" translate="yes" xml:space="preserve">
          <source>Because the node model can be accessed concurrently by threads in the Qt XML Patterns module, subclasses of &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel&lt;/a&gt; must be written to be &lt;a href=&quot;qxmlquery#reentrancy-and-thread-safety&quot;&gt;thread-safe&lt;/a&gt;. Classes that simplify implementing thread-safety include &lt;a href=&quot;qreadlocker&quot;&gt;QReadLocker&lt;/a&gt; and &lt;a href=&quot;qwritelocker&quot;&gt;QWriteLocker&lt;/a&gt;.</source>
          <target state="translated">Qt XML 패턴 모듈의 스레드가 노드 모델에 동시에 액세스 할 수 있으므로 &lt;a href=&quot;qabstractxmlnodemodel&quot;&gt;QAbstractXmlNodeModel의&lt;/a&gt; 서브 클래스는 &lt;a href=&quot;qxmlquery#reentrancy-and-thread-safety&quot;&gt;스레드로부터 안전&lt;/a&gt; 해야합니다 . 스레드 안전성 구현을 단순화하는 클래스에는 &lt;a href=&quot;qreadlocker&quot;&gt;QReadLocker&lt;/a&gt; 및 &lt;a href=&quot;qwritelocker&quot;&gt;QWriteLocker가&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c93cfa989b03256dce20750d1f4f8ba6cab04e2" translate="yes" xml:space="preserve">
          <source>Because the peer certificate is set during the handshake phase, it is safe to access the peer certificate from a slot connected to the &lt;a href=&quot;qsslsocket#sslErrors&quot;&gt;QSslSocket::sslErrors&lt;/a&gt;() signal, &lt;a href=&quot;qnetworkreply#sslErrors&quot;&gt;QNetworkReply::sslErrors&lt;/a&gt;() signal, or the &lt;a href=&quot;qsslsocket#encrypted&quot;&gt;QSslSocket::encrypted&lt;/a&gt;() signal.</source>
          <target state="translated">핸드 셰이크 단계에서 피어 인증서가 설정되므로 &lt;a href=&quot;qsslsocket#sslErrors&quot;&gt;QSslSocket :: sslErrors&lt;/a&gt; () 신호, &lt;a href=&quot;qnetworkreply#sslErrors&quot;&gt;QNetworkReply :: sslErrors&lt;/a&gt; () 신호 또는 &lt;a href=&quot;qsslsocket#encrypted&quot;&gt;QSslSocket :: encrypted&lt;/a&gt; () 신호에 연결된 슬롯에서 피어 인증서에 액세스하는 것이 안전합니다. .</target>
        </trans-unit>
        <trans-unit id="9dded309e24f67569d9603bd418ddeaded50d3d7" translate="yes" xml:space="preserve">
          <source>Because the peer certificate is set during the handshake phase, it is safe to access the peer certificate from a slot connected to the &lt;a href=&quot;qsslsocket#sslErrors&quot;&gt;sslErrors&lt;/a&gt;() signal or the &lt;a href=&quot;qsslsocket#encrypted&quot;&gt;encrypted&lt;/a&gt;() signal.</source>
          <target state="translated">핸드 셰이크 단계에서 피어 인증서가 설정되므로 &lt;a href=&quot;qsslsocket#sslErrors&quot;&gt;sslErrors&lt;/a&gt; () 신호 또는 &lt;a href=&quot;qsslsocket#encrypted&quot;&gt;암호화 된&lt;/a&gt; () 신호에 연결된 슬롯에서 피어 인증서에 액세스하는 것이 안전합니다 .</target>
        </trans-unit>
        <trans-unit id="22f028f2627729673db99c2c9933f6e7389862d4" translate="yes" xml:space="preserve">
          <source>Because the replica is dynamically acquired, no &lt;code&gt;.rep&lt;/code&gt; file is required unlike in &lt;a href=&quot;#qtro-example1&quot;&gt;Example 1&lt;/a&gt;.</source>
          <target state="translated">복제본은 동적으로 획득되므로 &lt;a href=&quot;#qtro-example1&quot;&gt;예제 1&lt;/a&gt; 과 달리 &lt;code&gt;.rep&lt;/code&gt; 파일이 필요 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="648ca7cb74c7995cdd2aaa287b296a7214b29bc7" translate="yes" xml:space="preserve">
          <source>Because the source can be in a different process or even on a different device, there are concerns in QtRO that you won&amp;rsquo;t run into when developing without Inter-Process Communication (IPC). Specifically, what happens if the process or device isn&amp;rsquo;t there? This is where the additions to the &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; API come in. There is an &lt;a href=&quot;qremoteobjectreplica#initialized&quot;&gt;initialized()&lt;/a&gt; signal that is emitted once the replica has received the &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;source&lt;/a&gt; state from the QtRO network. There is also an &lt;a href=&quot;qremoteobjectreplica#isReplicaValid&quot;&gt;isReplicaValid&lt;/a&gt; property and a &lt;a href=&quot;qremoteobjectreplica#stateChanged&quot;&gt;stateChanged()&lt;/a&gt; signal to alert you if the connection is lost.</source>
          <target state="translated">소스는 다른 프로세스 또는 다른 장치에있을 수 있기 때문에 프로세스 간 통신 (IPC)없이 개발할 때 QtRO에서 실행되지 않을 우려가 있습니다. 프로세스 나 장치가 없으면 어떻게됩니까? &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;복제본&lt;/a&gt; API에 추가 된 부분입니다. 복제본이 QtRO 네트워크에서 &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;소스&lt;/a&gt; 상태를 수신하면 &lt;a href=&quot;qremoteobjectreplica#initialized&quot;&gt;초기화 된 ()&lt;/a&gt; 신호가 발생 합니다. &lt;a href=&quot;qremoteobjectreplica#isReplicaValid&quot;&gt;isReplicaValid&lt;/a&gt; 속성과 &lt;a href=&quot;qremoteobjectreplica#stateChanged&quot;&gt;stateChanged ()&lt;/a&gt; 신호도있어 연결이 끊어졌을 때 알려줍니다 .</target>
        </trans-unit>
        <trans-unit id="81dfd10188d68dd06502a04b9385fb6d3ec03a9d" translate="yes" xml:space="preserve">
          <source>Because there is a zero weight transition to the</source>
          <target state="translated">무게가 0으로 변하기 때문에</target>
        </trans-unit>
        <trans-unit id="4b58dae93debb15507b623fa400567a0fdca3fef" translate="yes" xml:space="preserve">
          <source>Because this example involves using a direct connection between nodes, step 2 for &lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;Registry&lt;/a&gt; creation is omitted.</source>
          <target state="translated">이 예제는 노드 간 직접 연결을 사용하므로 &lt;a href=&quot;qtremoteobjects-registry#registry&quot;&gt;레지스트리&lt;/a&gt; 작성 단계 2 는 생략됩니다.</target>
        </trans-unit>
        <trans-unit id="de66a8bf053af4007e7df360ff7a87e62790f8ce" translate="yes" xml:space="preserve">
          <source>Because this type is for convenience in QML, it does not support enumerations directly, so enumerations from &lt;code&gt;VideoOutput&lt;/code&gt; are used to access the available fill modes.</source>
          <target state="translated">이 유형은 QML에서 편리하기 때문에 열거를 직접 지원하지 않으므로 &lt;code&gt;VideoOutput&lt;/code&gt; 의 열거 가 사용 가능한 채우기 모드에 액세스하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2e743c1a87d750f030d766dda9a4823179d51a3b" translate="yes" xml:space="preserve">
          <source>Because we had the &lt;code&gt;moc&lt;/code&gt; for signals and slots, we could add other useful things to it that could not be done with templates. Among these are scoped translations via a generated &lt;code&gt;tr()&lt;/code&gt; function, and an advanced property system with introspection and extended runtime type information. The property system alone is a great advantage: a powerful and generic user interface design tool like Qt Designer would be a lot harder to write - if not impossible - without a powerful and introspective property system. But it does not end here. We also provide a dynamic &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast&lt;/a&gt;&amp;lt;T&amp;gt;() mechanism that does not rely on the system's RTTI and thus does not share its limitations. We use it to safely query interfaces from dynamically loaded components. Another application domain are dynamic meta objects. We can e.g. take ActiveX components and at runtime create a meta object around it. Or we can export Qt components as ActiveX components by exporting its meta object. You cannot do either of these things with templates.</source>
          <target state="translated">우리는 시그널과 슬롯을위한 &lt;code&gt;moc&lt;/code&gt; 을 가지고 있었기 때문에 템플릿으로는 할 수 없었던 다른 유용한 것들을 추가 할 수있었습니다. 그중에는 생성 된 &lt;code&gt;tr()&lt;/code&gt; 함수 를 통한 범위 변환 과 내성 및 확장 런타임 유형 정보가 포함 된 고급 속성 시스템이 있습니다. Qt Designer와 같은 강력하고 일반적인 사용자 인터페이스 디자인 도구는 강력하고 내성적 인 속성 시스템 없이는 작성하기가 훨씬 어렵습니다. 그러나 여기서 끝나지 않습니다. 우리는 또한 동적 &lt;a href=&quot;qobject#qobject_cast&quot;&gt;qobject_cast를&lt;/a&gt; 제공합니다시스템의 RTTI에 의존하지 않으므로 제한 사항을 공유하지 않는 &amp;lt;T&amp;gt; () 메커니즘. 동적으로로드 된 구성 요소에서 인터페이스를 안전하게 쿼리하는 데 사용합니다. 다른 응용 프로그램 도메인은 동적 메타 개체입니다. 예를 들어 ActiveX 구성 요소를 가져 와서 런타임에 메타 개체를 만들 수 있습니다. 또는 메타 객체를 내보내 Qt 구성 요소를 ActiveX 구성 요소로 내보낼 수 있습니다. 템플릿으로 이러한 작업을 수행 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="69a8c758cfa2308ff358dfa9f48e0da044444c7a" translate="yes" xml:space="preserve">
          <source>Before Qt 5.5 the default behavior of &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; was to preserve the rendered contents between &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;() calls. Since Qt 5.5 the default behavior is non-preserved because this provides better performance and the majority of applications have no need for the previous content. This also resembles the semantics of an OpenGL-based &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; and matches the default behavior of &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; in that the color and ancillary buffers are invalidated for each frame. To restore the preserved behavior, call &lt;a href=&quot;qopenglwidget#setUpdateBehavior&quot;&gt;setUpdateBehavior&lt;/a&gt;() with &lt;code&gt;PartialUpdate&lt;/code&gt;.</source>
          <target state="translated">Qt 5.5 이전에는 &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; 의 기본 동작은 &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt; () 호출 간에 렌더링 된 내용을 유지하는 것이 었습니다 . Qt 5.5 이후 기본 동작은 더 나은 성능을 제공하고 대부분의 애플리케이션이 이전 컨텐츠를 필요로하지 않기 때문에 보존되지 않습니다. 이것은 OpenGL 기반 &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; 의 의미와 유사하며 각 프레임에 대해 색상 및 보조 버퍼가 무효화된다는 점에서 &lt;a href=&quot;qopenglwindow&quot;&gt;QOpenGLWindow&lt;/a&gt; 의 기본 동작과 일치합니다 . 보존 된 동작을 복원하려면 &lt;code&gt;PartialUpdate&lt;/code&gt; 로&lt;a href=&quot;qopenglwidget#setUpdateBehavior&quot;&gt;setUpdateBehavior&lt;/a&gt; ()를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="7e859665857791046f597652e0fbbd9c2f6d054c" translate="yes" xml:space="preserve">
          <source>Before a form can be used, the objects on the form need to be placed into layouts. This ensures that the objects will be displayed properly when the form is previewed or used in an application. Placing objects in a layout also ensures that they will be resized correctly when the form is resized.</source>
          <target state="translated">양식을 사용하려면 양식의 객체를 레이아웃에 배치해야합니다. 이렇게하면 응용 프로그램에서 양식을 미리 보거나 사용할 때 개체가 올바르게 표시됩니다. 레이아웃에 객체를 배치하면 양식 크기를 조정할 때 객체의 크기가 올바르게 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="6b6c2e51a0e9f5ccf88373be4d2c59183e72b5e3" translate="yes" xml:space="preserve">
          <source>Before a row is deleted from the database, the &lt;a href=&quot;qsqltablemodel#beforeDelete&quot;&gt;beforeDelete&lt;/a&gt;() signal is emitted.</source>
          <target state="translated">데이터베이스에서 행을 삭제하기 전에 &lt;a href=&quot;qsqltablemodel#beforeDelete&quot;&gt;beforeDelete&lt;/a&gt; () 신호가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="7dbb1fe5ee0ee3b72d10e425aba820811a908afe" translate="yes" xml:space="preserve">
          <source>Before accessing the device, &lt;a href=&quot;qiodevice#open&quot;&gt;open&lt;/a&gt;() must be called to set the correct &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt; (such as &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;ReadOnly&lt;/a&gt; or &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;ReadWrite&lt;/a&gt;). You can then write to the device with &lt;a href=&quot;qiodevice#write&quot;&gt;write&lt;/a&gt;() or &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt;(), and read by calling either &lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt;(), &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt;(), or &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt;(). Call &lt;a href=&quot;qiodevice#close&quot;&gt;close&lt;/a&gt;() when you are done with the device.</source>
          <target state="translated">장치에 액세스하기 전에 올바른 &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;OpenMode&lt;/a&gt; (예 : &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;ReadOnly&lt;/a&gt; 또는 &lt;a href=&quot;qiodevice#OpenModeFlag-enum&quot;&gt;ReadWrite&lt;/a&gt; ) 를 설정하려면 &lt;a href=&quot;qiodevice#open&quot;&gt;open&lt;/a&gt; ()을 호출해야합니다 . 그런 다음 write () 또는 &lt;a href=&quot;qiodevice#putChar&quot;&gt;putChar&lt;/a&gt; ()로 장치에 &lt;a href=&quot;qiodevice#write&quot;&gt;쓰고 &lt;/a&gt;&lt;a href=&quot;qiodevice#read&quot;&gt;read&lt;/a&gt; (), &lt;a href=&quot;qiodevice#readLine&quot;&gt;readLine&lt;/a&gt; () 또는 &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll&lt;/a&gt; () 을 호출하여 읽을 수 있습니다. 장치 사용이 끝나면 &lt;a href=&quot;qiodevice#close&quot;&gt;닫기&lt;/a&gt; ()를 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="989f3b7dada54cbb3e30752b2d783b9c684c05ee" translate="yes" xml:space="preserve">
          <source>Before any Qt application can be started, the &lt;a href=&quot;http://www.qnx.com/developers/docs/7.0.0/#com.qnx.doc.screen/topic/manual/cscreen_about.html&quot;&gt;QNX Screen Graphics Subsystem&lt;/a&gt; (also called just &quot;Screen&quot;) must be running. The Screen consists not only of a driver, but also includes several utilities and other services which are used by Qt. This includes processing of mouse and keyboard events as well. You can ensure that the Screen is configured and running correctly by verifying that a graphics application, like &lt;code&gt;gles2-gears&lt;/code&gt;, can be started and runs without problems. Most of the recent sample OS build scripts in the SDP include sections with all components and start commands for the Screen. Use them as a reference.</source>
          <target state="translated">Qt 어플리케이션을 시작하기 전에 &lt;a href=&quot;http://www.qnx.com/developers/docs/7.0.0/#com.qnx.doc.screen/topic/manual/cscreen_about.html&quot;&gt;QNX 스크린 그래픽 서브 시스템&lt;/a&gt; ( &quot;스크린&quot;이라고도 함)이 실행 중이어야합니다. 화면은 드라이버뿐만 아니라 Qt에서 사용하는 여러 유틸리티 및 기타 서비스도 포함합니다. 여기에는 마우스 및 키보드 이벤트 처리도 포함됩니다. &lt;code&gt;gles2-gears&lt;/code&gt; 와 같은 그래픽 응용 프로그램을 시작하고 문제없이 실행할 수 있는지 확인하여 화면이 올바르게 구성되어 실행 중인지 확인할 수 있습니다. SDP의 최신 샘플 OS 빌드 스크립트에는 대부분 모든 구성 요소와 화면에 대한 시작 명령이 포함 된 섹션이 포함되어 있습니다. 그것들을 참조로 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2409f984abcaa5cf9769ab44bf5a840d43f2fc78" translate="yes" xml:space="preserve">
          <source>Before building any Qt applications, you should test that Xcode is set up correctly, for example, by running one of the standard Xcode application templates on your device.</source>
          <target state="translated">Qt 애플리케이션을 빌드하기 전에 디바이스에서 표준 Xcode 애플리케이션 템플리트 중 하나를 실행하여 Xcode가 올바르게 설정되었는지 테스트해야합니다.</target>
        </trans-unit>
        <trans-unit id="acd241819b08336f60056ee37cd1f6b28848db13" translate="yes" xml:space="preserve">
          <source>Before building your application, add the following statement to your &lt;code&gt;.pro&lt;/code&gt; file to link against the Qt Purchasing library:</source>
          <target state="translated">애플리케이션을 빌드하기 전에 &lt;code&gt;.pro&lt;/code&gt; 파일에 다음 명령문을 추가 하여 Qt Purchasing 라이브러리에 링크하십시오.</target>
        </trans-unit>
        <trans-unit id="537c8c757a80eedf3e34f0d1b676b9aea9278a80" translate="yes" xml:space="preserve">
          <source>Before calling any of the exposed OpenGL functions you must ensure that the object has resolved the function pointers to the OpenGL functions. This only needs to be done once per instance with initializeOpenGLFunctions(). Once initialized, the object can be used to call any OpenGL function for the corresponding version and profile. Note that initializeOpenGLFunctions() can fail in some circumstances so check the return value. Situations in which initialization can fail are if you have a functions object for a version or profile that contains functions that are not part of the context being used to resolve the function pointers.</source>
          <target state="translated">노출 된 OpenGL 함수를 호출하기 전에 오브젝트가 OpenGL 함수에 대한 함수 포인터를 분석했는지 확인해야합니다. initializeOpenGLFunctions ()를 사용하여 인스턴스 당 한 번만 수행하면됩니다. 초기화되면 객체를 사용하여 해당 버전 및 프로파일에 대한 OpenGL 함수를 호출 할 수 있습니다. 어떤 상황에서는 initializeOpenGLFunctions ()가 실패 할 수 있으므로 리턴 값을 확인하십시오. 초기화가 실패 할 수있는 상황은 함수 포인터를 해석하는 데 사용되는 컨텍스트의 일부가 아닌 함수를 포함하는 버전 또는 프로파일의 함수 오브젝트가있는 경우입니다.</target>
        </trans-unit>
        <trans-unit id="9c1e5682ba0e7be485a6736bcbfc2eaee7b87907" translate="yes" xml:space="preserve">
          <source>Before changing any state attributes, you should save the current state for future reference. The context maintains a stack of drawing states. Each state consists of the current transformation matrix, clipping region, and values of the following attributes:</source>
          <target state="translated">상태 속성을 변경하기 전에 나중에 참조 할 수 있도록 현재 상태를 저장해야합니다. 컨텍스트는 드로잉 상태 스택을 유지합니다. 각 상태는 현재 변환 행렬, 클리핑 영역 및 다음 속성 값으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="242de76890f489f5d8570299fd96ecf7b9adee2a" translate="yes" xml:space="preserve">
          <source>Before establishing a network connection, &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; and &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; perform a name lookup, translating the host name you're connecting to into an IP address. This operation is usually performed using the DNS (Domain Name Service) protocol.</source>
          <target state="translated">네트워크 연결을 설정하기 전에 &lt;a href=&quot;qtcpsocket&quot;&gt;QTcpSocket&lt;/a&gt; 및 &lt;a href=&quot;qudpsocket&quot;&gt;QUdpSocket&lt;/a&gt; 은 이름 조회를 수행하여 연결중인 호스트 이름을 IP 주소로 변환합니다. 이 작업은 일반적으로 DNS (Domain Name Service) 프로토콜을 사용하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="739d1c32e3057278848648cd15194048bb65c2ed" translate="yes" xml:space="preserve">
          <source>Before examining how selections are handled, you may find it useful to examine the concepts used in the model/view framework.</source>
          <target state="translated">선택이 처리되는 방식을 검토하기 전에 모델 / 뷰 프레임 워크에 사용 된 개념을 검토하는 것이 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2d91ccb471d722633d633f925a75d85fc445d9b" translate="yes" xml:space="preserve">
          <source>Before installing Qt, you first need to install Xcode. You will find it in the Mac App Store &lt;a href=&quot;http://itunes.apple.com/us/app/xcode/id497799835?ls=1&amp;amp;mt=12#&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Qt를 설치하기 전에 먼저 Xcode를 설치해야합니다. Mac App Store ( &lt;a href=&quot;http://itunes.apple.com/us/app/xcode/id497799835?ls=1&amp;amp;mt=12#&quot;&gt;여기)&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a9e1f339a92f43164d55a22d95b989389bf87011" translate="yes" xml:space="preserve">
          <source>Before invoking this function, the context and the framebuffer are bound, and the viewport is set up by a call to glViewport(). No other state is set and no clearing or drawing is performed by the framework.</source>
          <target state="translated">이 함수를 호출하기 전에 컨텍스트와 프레임 버퍼가 바인딩되고 glViewport ()를 호출하여 뷰포트가 설정됩니다. 다른 상태는 설정되지 않으며 프레임 워크에서 지우기 또는 그리기를 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="772393a48d62c36b41c56d87e7323dfd17c6c2ac" translate="yes" xml:space="preserve">
          <source>Before invoking this function, the context and the framebuffer, if there is one, are bound, and the viewport is set up by a call to glViewport(). No other state is set and no clearing or drawing is performed by the framework.</source>
          <target state="translated">이 함수를 호출하기 전에 컨텍스트와 프레임 버퍼 (있는 경우)가 바인딩되고 glViewport ()를 호출하여 뷰포트가 설정됩니다. 다른 상태는 설정되지 않으며 프레임 워크에서 지우기 또는 그리기를 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="441de427d2c29b02aebbfca6014d837563355a05" translate="yes" xml:space="preserve">
          <source>Before it can be used you need to set the proper format and call &lt;a href=&quot;qopenglcontext#create&quot;&gt;create&lt;/a&gt;().</source>
          <target state="translated">사용하기 전에 올바른 형식을 설정하고 &lt;a href=&quot;qopenglcontext#create&quot;&gt;create&lt;/a&gt; ()를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5a08706a08d35ac6502cd4ff9413581f6f641a32" translate="yes" xml:space="preserve">
          <source>Before items can be added to the tree widget, the number of columns must be set with &lt;a href=&quot;qtreewidget#columnCount-prop&quot;&gt;setColumnCount&lt;/a&gt;(). This allows each item to have one or more labels or other decorations. The number of columns in use can be found with the &lt;a href=&quot;qtreewidget#columnCount-prop&quot;&gt;columnCount&lt;/a&gt;() function.</source>
          <target state="translated">트리 위젯에 항목을 추가하기 전에 &lt;a href=&quot;qtreewidget#columnCount-prop&quot;&gt;setColumnCount&lt;/a&gt; () 로 열 수를 설정해야합니다 . 이를 통해 각 항목에 하나 이상의 레이블 또는 다른 장식이있을 수 있습니다. 사용중인 열 수는 &lt;a href=&quot;qtreewidget#columnCount-prop&quot;&gt;columnCount&lt;/a&gt; () 함수 로 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="819e7517a8fb185ff43bd9542779312eb943cfe6" translate="yes" xml:space="preserve">
          <source>Before items can be added to the tree widget, the number of columns must be set. For example, we could define two columns, and create a header to provide labels at the top of each column:</source>
          <target state="translated">트리 위젯에 항목을 추가하기 전에 열 수를 설정해야합니다. 예를 들어, 두 개의 열을 정의하고 각 열의 맨 위에 레이블을 제공하는 헤더를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="244a9650f1ed41aa81653c37204eab5fdd8adff8" translate="yes" xml:space="preserve">
          <source>Before performing the comparison, the two datetimes are converted to &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::UTC&lt;/a&gt; to ensure that the result is correct if daylight-saving (DST) applies to one of the two datetimes and but not the other.</source>
          <target state="translated">비교를 수행하기 전에 두 날짜 시간이 &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt :: UTC&lt;/a&gt; 로 변환되어 일광 절약 시간 (DST)이 두 날짜 시간 중 하나에 만 적용되고 다른 시간에는 적용되지 않는 경우 결과가 올바른지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="add274d548d5a6979038c3a400976ef492182ec1" translate="yes" xml:space="preserve">
          <source>Before performing the comparison, the two datetimes are converted to &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt::UTC&lt;/a&gt; to ensure that the result is correct if daylight-saving (DST) applies to one of the two datetimes but not the other.</source>
          <target state="translated">비교를 수행하기 전에 두 날짜 시간이 &lt;a href=&quot;qt#TimeSpec-enum&quot;&gt;Qt :: UTC&lt;/a&gt; 로 변환되어 일광 절약 (DST)이 두 날짜 시간 중 하나에 만 적용되고 다른 시간에는 적용되지 않는 경우 결과가 올바른지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="64e361251921cfa61245b8519573a768a5aac5a0" translate="yes" xml:space="preserve">
          <source>Before reading an picture you must set an IO device or a file name. If both an IO device and a file name have been set, the IO device will be used.</source>
          <target state="translated">그림을 읽기 전에 IO 장치 또는 파일 이름을 설정해야합니다. IO 장치와 파일 이름이 모두 설정된 경우 IO 장치가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d04113b55309caf2d9b4508811b3ddc14afbb7d8" translate="yes" xml:space="preserve">
          <source>Before rendering the graph, the renderer will do an update pass over the subtree to propagate the opacity to its children.</source>
          <target state="translated">그래프를 렌더링하기 전에 렌더러는 하위 트리를 통해 업데이트 패스를 수행하여 불투명도를 하위 항목으로 전파합니다.</target>
        </trans-unit>
        <trans-unit id="80ea9454d3d5c2f6b60b5cbdc4d85dde6f699ccd" translate="yes" xml:space="preserve">
          <source>Before rendering.</source>
          <target state="translated">렌더링하기 전에.</target>
        </trans-unit>
        <trans-unit id="4f4901595e911184ed6aa08f43e449818e698c1d" translate="yes" xml:space="preserve">
          <source>Before returning the reference: if this &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; was an array but the key is out of range, the array is first converted to a map (so that &lt;code&gt;map[i]&lt;/code&gt; is &lt;code&gt;array[i]&lt;/code&gt; for each index, &lt;code&gt;i&lt;/code&gt;, with valid &lt;code&gt;array[i]&lt;/code&gt;); otherwise, if it was not a map it will be over-written with an empty map.</source>
          <target state="translated">참조를 리턴하기 전에 :이 &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; 가 배열이지만 키가 범위를 벗어난 경우, 배열은 먼저 맵으로 변환됩니다 (따라서 유효한 &lt;code&gt;array[i]&lt;/code&gt; 가진 각 인덱스 &lt;code&gt;i&lt;/code&gt; 에 대해 &lt;code&gt;map[i]&lt;/code&gt; 는 &lt;code&gt;array[i]&lt;/code&gt; 임) ] ); 그렇지 않으면 맵이 아닌 경우 빈 맵으로 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="7adb6d28d7636e2e7fb03e45bae8dbad7037d32d" translate="yes" xml:space="preserve">
          <source>Before returning the reference: if this &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; was an array, it is first converted to a map (so that &lt;code&gt;map[i]&lt;/code&gt; is &lt;code&gt;array[i]&lt;/code&gt; for each index, &lt;code&gt;i&lt;/code&gt;, with valid &lt;code&gt;array[i]&lt;/code&gt;); otherwise, if it was not a map it will be over-written with an empty map.</source>
          <target state="translated">참조를 리턴하기 전에 :이 &lt;a href=&quot;qcborvalue&quot;&gt;QCborValue&lt;/a&gt; 가 배열 인 경우 먼저 맵으로 변환됩니다 (그래서 유효한 &lt;code&gt;array[i]&lt;/code&gt; 갖는 각 인덱스 &lt;code&gt;i&lt;/code&gt; 에 대해 &lt;code&gt;map[i]&lt;/code&gt; 은 &lt;code&gt;array[i]&lt;/code&gt; 입니다 ). 그렇지 않으면 맵이 아닌 경우 빈 맵으로 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="0e32a6a56d0460670de1f5767114c22893e77a3b" translate="yes" xml:space="preserve">
          <source>Before running QDoc, you must create a QDoc configuration file to tell QDoc where to find the source files that contain the QDoc comments. The pathname to your configuration file is passed to QDoc on the command line:</source>
          <target state="translated">QDoc을 실행하기 전에 QDoc 주석이 포함 된 소스 파일을 찾을 위치를 QDoc에 알리려면 QDoc 구성 파일을 작성해야합니다. 구성 파일의 경로 이름은 명령 행에서 QDoc으로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="080c37389cfc734e21a73b8c449b8db23c4084f2" translate="yes" xml:space="preserve">
          <source>Before running configure and building Qt 5 it is required to open</source>
          <target state="translated">Qt 5 구성 및 빌드를 실행하기 전에 열어야합니다.</target>
        </trans-unit>
        <trans-unit id="6778c5965235d30f929eb46c09bd934a18c5915e" translate="yes" xml:space="preserve">
          <source>Before synchronization.</source>
          <target state="translated">동기화하기 전에.</target>
        </trans-unit>
        <trans-unit id="ea3a70e757cce8528d377956901f17662da8b0ba" translate="yes" xml:space="preserve">
          <source>Before the first record.</source>
          <target state="translated">첫 번째 기록 전에.</target>
        </trans-unit>
        <trans-unit id="5c7ba6072dddf0e88dd72363532b937e673ab719" translate="yes" xml:space="preserve">
          <source>Before the help engine can be used, it must be initialized by calling &lt;a href=&quot;qhelpenginecore#setupData&quot;&gt;setupData&lt;/a&gt;(). At the beginning of the setup process the signal &lt;a href=&quot;qhelpenginecore#setupStarted&quot;&gt;setupStarted&lt;/a&gt;() is emitted. From this point on until the signal &lt;a href=&quot;qhelpenginecore#setupFinished&quot;&gt;setupFinished&lt;/a&gt;() is emitted, is the help data in an undefined meaning unusable state.</source>
          <target state="translated">도움말 엔진을 사용하려면 &lt;a href=&quot;qhelpenginecore#setupData&quot;&gt;setupData&lt;/a&gt; () 를 호출하여 초기화해야합니다 . 설정 프로세스 시작시 &lt;a href=&quot;qhelpenginecore#setupStarted&quot;&gt;setupStarted&lt;/a&gt; () 신호 가 방출됩니다. 이 시점부터 &lt;a href=&quot;qhelpenginecore#setupFinished&quot;&gt;setupFinished&lt;/a&gt; () 신호 가 방출 될 때까지 정의되지 않은 의미의 도움말 데이터는 사용할 수없는 상태입니다.</target>
        </trans-unit>
        <trans-unit id="cfc3ee12bae17f0586d8474c0f0f9c8c93f58062" translate="yes" xml:space="preserve">
          <source>Before the list of</source>
          <target state="translated">목록 전에</target>
        </trans-unit>
        <trans-unit id="fcb26f3bddd8b2126e161104e2cbdb5e83d6b901" translate="yes" xml:space="preserve">
          <source>Before the machine can be started, the &lt;a href=&quot;qml-qtqml-statemachine-state#initialState-prop&quot;&gt;initialState&lt;/a&gt; must be set. The initial state is the state that the machine enters when started. You can then set running property to true or &lt;a href=&quot;qml-qtqml-statemachine-statemachine#start-method&quot;&gt;start()&lt;/a&gt; the state machine. The started signal is emitted when the initial state is entered.</source>
          <target state="translated">기계를 시작하기 전에 &lt;a href=&quot;qml-qtqml-statemachine-state#initialState-prop&quot;&gt;initialState&lt;/a&gt; 를 설정해야합니다. 초기 상태는 머신이 시작될 때 시작되는 상태입니다. 그런 다음 running 속성을 true로 설정하거나 상태 시스템을 &lt;a href=&quot;qml-qtqml-statemachine-statemachine#start-method&quot;&gt;start ()&lt;/a&gt; 할 수 있습니다 . 시작 상태는 초기 상태가되면 방출됩니다.</target>
        </trans-unit>
        <trans-unit id="08d8bd0f3e893d8557c3dacb3bd162d2e9c9aba1" translate="yes" xml:space="preserve">
          <source>Before the machine can be started, the &lt;a href=&quot;qstate#initialState&quot;&gt;initial state&lt;/a&gt; must be set. The initial state is the state that the machine enters when started. You can then &lt;a href=&quot;qstatemachine#start&quot;&gt;start&lt;/a&gt;() the state machine. The &lt;a href=&quot;qstatemachine#started&quot;&gt;started&lt;/a&gt;() signal is emitted when the initial state is entered.</source>
          <target state="translated">기기를 시작하기 전에 &lt;a href=&quot;qstate#initialState&quot;&gt;초기 상태&lt;/a&gt; 를 설정해야합니다. 초기 상태는 머신이 시작될 때 시작되는 상태입니다. 그런 다음 상태 머신 을 &lt;a href=&quot;qstatemachine#start&quot;&gt;시작&lt;/a&gt; () 할 수 있습니다 . &lt;a href=&quot;qstatemachine#started&quot;&gt;시작한&lt;/a&gt; 초기 상태로 진입하면 () 신호가 방출된다.</target>
        </trans-unit>
        <trans-unit id="c7144a71f332458dc6d5d2c7db5112bb3f48cf2c" translate="yes" xml:space="preserve">
          <source>Before the rectangle is returned it must be mapped to screen coordinates.</source>
          <target state="translated">사각형을 반환하기 전에 화면 좌표에 매핑해야합니다.</target>
        </trans-unit>
        <trans-unit id="f101dbfba687c8d499d9a5eccbd977ebdd66bd53" translate="yes" xml:space="preserve">
          <source>Before the regular expression test, all the 0 bytes in the file header are converted to 1 bytes. This is done because when Qt was ASCII-based, &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; could not handle 0 bytes in strings.</source>
          <target state="translated">정규식 테스트 전에 파일 헤더의 모든 0 바이트가 1 바이트로 변환됩니다. 이것은 Qt가 ASCII 기반 일 때 &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt; 가 문자열에서 0 바이트를 처리 할 수 없기 때문에 수행 됩니다.</target>
        </trans-unit>
        <trans-unit id="c378636ec4474c8ac5e926ac729083fd3adab488" translate="yes" xml:space="preserve">
          <source>Before the search engine can be used, one has to instantiate at least a &lt;a href=&quot;qhelpenginecore&quot;&gt;QHelpEngineCore&lt;/a&gt; object that needs to be passed to the search engines constructor. This is required as the search engine needs to be connected to the help engines setupFinished() signal to know when it can start to index documentation.</source>
          <target state="translated">검색 엔진을 사용 하려면 검색 엔진 생성자에 전달 &lt;a href=&quot;qhelpenginecore&quot;&gt;해야하는 QHelpEngineCore&lt;/a&gt; 개체 를 인스턴스화 해야합니다. 검색 엔진이 도움말 엔진 setupFinished () 신호에 연결되어 문서 색인화를 시작할 수있는시기를 알아야하기 때문에이 작업이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3e8ea79c909a6c8158a422d2f96e38f89407ef9c" translate="yes" xml:space="preserve">
          <source>Before this signal has been emitted for the first time, the reading object will have uninitialized data.</source>
          <target state="translated">이 신호가 처음으로 방출되기 전에 읽기 개체에 초기화되지 않은 데이터가 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f4cece665d2e4879925a23a6bd8ce34238c0605" translate="yes" xml:space="preserve">
          <source>Before using the connection, it must be initialized. e.g., call some or all of &lt;a href=&quot;qsqldatabase#setDatabaseName&quot;&gt;setDatabaseName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setUserName&quot;&gt;setUserName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setPassword&quot;&gt;setPassword&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setHostName&quot;&gt;setHostName&lt;/a&gt;(), &lt;a href=&quot;qsqldatabase#setPort&quot;&gt;setPort&lt;/a&gt;(), and &lt;a href=&quot;qsqldatabase#setConnectOptions&quot;&gt;setConnectOptions&lt;/a&gt;(), and, finally, &lt;a href=&quot;qsqldatabase#open&quot;&gt;open&lt;/a&gt;().</source>
          <target state="translated">연결을 사용하기 전에 초기화해야합니다. 예를 들어, &lt;a href=&quot;qsqldatabase#setDatabaseName&quot;&gt;setDatabaseName&lt;/a&gt; (), &lt;a href=&quot;qsqldatabase#setUserName&quot;&gt;setUserName&lt;/a&gt; (), &lt;a href=&quot;qsqldatabase#setPassword&quot;&gt;setPassword&lt;/a&gt; (), &lt;a href=&quot;qsqldatabase#setHostName&quot;&gt;setHostName&lt;/a&gt; (), &lt;a href=&quot;qsqldatabase#setPort&quot;&gt;setPort&lt;/a&gt; () 및 &lt;a href=&quot;qsqldatabase#setConnectOptions&quot;&gt;setConnectOptions&lt;/a&gt; () 중 일부 또는 전부를 호출 하고 마지막으로 &lt;a href=&quot;qsqldatabase#open&quot;&gt;open&lt;/a&gt; ()을 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="77d6c40eb7bf5afdeda21111a251216dd4ebbe66" translate="yes" xml:space="preserve">
          <source>Before we begin, we need to ensure that the custom type we are creating meets all the requirements imposed by &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt;. In other words, it must provide:</source>
          <target state="translated">시작하기 전에 우리가 생성하는 사용자 정의 유형이 &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt; 에 의해 부과 된 모든 요구 사항을 충족하는지 확인해야합니다 . 즉, 다음을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="26a70db6020e850a49473e4cfb3f7ef70c5998a6" translate="yes" xml:space="preserve">
          <source>Before we can apply a namespace to element or attribute names we must declare it.</source>
          <target state="translated">요소 또는 속성 이름에 네임 스페이스를 적용하기 전에 선언해야합니다.</target>
        </trans-unit>
        <trans-unit id="fcb7c55ee9146b18141570dc55c0b10d90e6cf3e" translate="yes" xml:space="preserve">
          <source>Before we can start implementing the wrapper class we need a way to convert Qt's datatypes (and potentionally your own) into .NET datatypes, e.g. &lt;code&gt;QString&lt;/code&gt; objects need to be converted into objects of type &lt;code&gt;String*&lt;/code&gt;.</source>
          <target state="translated">래퍼 클래스 구현을 시작하기 전에 Qt의 데이터 유형 (및 의도적으로 자신의 데이터 유형)을 .NET 데이터 유형으로 변환하는 방법이 필요합니다. 예를 들어 &lt;code&gt;QString&lt;/code&gt; 객체는 &lt;code&gt;String*&lt;/code&gt; 유형의 객체로 변환해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2e4fe428ee78a0a17672317ee1b98057775f4a8f" translate="yes" xml:space="preserve">
          <source>Before writing an picture you must set an IO device or a file name. If both an IO device and a file name have been set, the IO device will be used.</source>
          <target state="translated">그림을 쓰기 전에 IO 장치 또는 파일 이름을 설정해야합니다. IO 장치와 파일 이름이 모두 설정된 경우 IO 장치가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d512980b3951b2a8d14a039310cf1ea1e1426a0c" translate="yes" xml:space="preserve">
          <source>Before you can operate on the products in your code, they must be registered in the QML graph. You start by making a &lt;a href=&quot;qml-qtpurchasing-store&quot;&gt;Store&lt;/a&gt; item, and then create each product as a child of this.</source>
          <target state="translated">코드에서 제품을 조작하려면 QML 그래프에 제품을 등록해야합니다. 먼저 &lt;a href=&quot;qml-qtpurchasing-store&quot;&gt;Store&lt;/a&gt; 항목을 만든 다음이 제품의 하위 항목으로 각 제품을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="73768622789dfc2dd75da4ad7483343832dd3e73" translate="yes" xml:space="preserve">
          <source>Before you can register new products available to the in-app purchasing service, you need to register your application in iTunes Connect. iTunes Connect is the place where you register an app when you want to submit it to the Apple iOS App Store.</source>
          <target state="translated">인앱 구매 서비스에 사용할 수있는 새로운 제품을 등록하기 전에 iTunes Connect에 응용 프로그램을 등록해야합니다. iTunes Connect는 앱을 Apple iOS App Store에 제출할 때 앱을 등록하는 장소입니다.</target>
        </trans-unit>
        <trans-unit id="3baa0b40586fcd76d53c402b517e8a5f263e622d" translate="yes" xml:space="preserve">
          <source>Before you can upload your application to Google Play, you must prepare it for submission.</source>
          <target state="translated">애플리케이션을 Google Play에 업로드하기 전에 제출 준비를해야합니다.</target>
        </trans-unit>
        <trans-unit id="2a21392c18ac8a8cc3d91e3706dffa7a5d4b8fa7" translate="yes" xml:space="preserve">
          <source>Before you get started, ensure that your development environment fulfills the &lt;a href=&quot;windows-requirements#&quot;&gt;requirements&lt;/a&gt;.</source>
          <target state="translated">시작하기 전에 개발 환경이 &lt;a href=&quot;windows-requirements#&quot;&gt;요구 사항을&lt;/a&gt; 충족하는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="cf5af69cae7a85cf7abb226b1bebe337621474c1" translate="yes" xml:space="preserve">
          <source>Before you start using the APIs provided by this module, ensure that the gamepad is detected by your development environment.</source>
          <target state="translated">이 모듈에서 제공하는 API를 사용하기 전에 개발 환경에서 게임 패드가 감지되는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b67fb86a12b7170121404125e185a3a671f0ce67" translate="yes" xml:space="preserve">
          <source>Begin painting operations on paint device</source>
          <target state="translated">페인트 장치에서 페인팅 작업 시작</target>
        </trans-unit>
        <trans-unit id="9fe9132f44bf9a7a5c1a4fd85368d557533f3cb0" translate="yes" xml:space="preserve">
          <source>Begin painting operations on the specified</source>
          <target state="translated">지정된 도장 작업을 시작합니다</target>
        </trans-unit>
        <trans-unit id="84bb22ac53c3dfbc3e24cad89028487f8e146fff" translate="yes" xml:space="preserve">
          <source>BeginNativeGesture ZoomNativeGesture ZoomNativeGesture ZoomNativeGesture EndNativeGesture</source>
          <target state="translated">BeginNativeGesture ZoomNativeGesture ZoomNativeGesture ZoomNativeGesture EndNativeGesture</target>
        </trans-unit>
        <trans-unit id="3472a767717d24610fcbea88ab3eb1234a01fac9" translate="yes" xml:space="preserve">
          <source>Beginning of a sequence of touch-screen or track-pad events (&lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt;).</source>
          <target state="translated">일련의 터치 스크린 또는 트랙 패드 이벤트의 시작 ( &lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="f60267254f321648699eb2a727f04e236ef3936f" translate="yes" xml:space="preserve">
          <source>Beginning with Qt 5.11 &lt;a href=&quot;qml-qtqml-models-listelement&quot;&gt;ListElement&lt;/a&gt; also allows assigning a function declaration to a role. This allows the definition of ListElements with callable actions.</source>
          <target state="translated">Qt 5.11부터 &lt;a href=&quot;qml-qtqml-models-listelement&quot;&gt;ListElement&lt;/a&gt; 는 역할에 함수 선언을 할당 할 수도 있습니다. 이를 통해 호출 가능한 조치가있는 ListElements를 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="148795fa7f40f87e4516761dcb332ca34dd9d3a9" translate="yes" xml:space="preserve">
          <source>Beginning with Qt 5.5, a new way to run QDoc is available that reduces the time it takes to generate the Qt5 documentation by as much as 90%. The new way to run QDoc is</source>
          <target state="translated">Qt 5.5부터는 Qtoc 문서를 생성하는 데 걸리는 시간을 90 %까지 단축하는 새로운 QDoc 실행 방법을 사용할 수 있습니다. QDoc을 실행하는 새로운 방법은</target>
        </trans-unit>
        <trans-unit id="1091c5f6e77da8975ee6fe8da16f9349336338fb" translate="yes" xml:space="preserve">
          <source>Begins a column insertion operation.</source>
          <target state="translated">열 삽입 작업을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="2fb78e47478b151aa74429b63777cd0e1db659ec" translate="yes" xml:space="preserve">
          <source>Begins a column move operation.</source>
          <target state="translated">열 이동 작업을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="95a081494346196bac987d08c4b12a2b265c59bc" translate="yes" xml:space="preserve">
          <source>Begins a column removal operation.</source>
          <target state="translated">열 제거 작업을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="168b894d2b71ac4035764d3ad7f6c7821c160010" translate="yes" xml:space="preserve">
          <source>Begins a model reset operation.</source>
          <target state="translated">모델 재설정 작업을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="691ac7b3acfa8cee21271cf20d76a680b9c8ded5" translate="yes" xml:space="preserve">
          <source>Begins a row insertion operation.</source>
          <target state="translated">행 삽입 작업을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="16409747c3cc3bed253e02ef0c9e5bba7112cc2a" translate="yes" xml:space="preserve">
          <source>Begins a row move operation.</source>
          <target state="translated">행 이동 작업을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="fad4aaebbbb140b6ea265f55375c90ccc55d3dde" translate="yes" xml:space="preserve">
          <source>Begins a row removal operation.</source>
          <target state="translated">행 제거 작업을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="42ab0fea0b73b73148235b0845837e541ba860f8" translate="yes" xml:space="preserve">
          <source>Begins a sequence of touch events through a simulated &lt;a href=&quot;qtouchdevice#DeviceType-enum&quot;&gt;QTouchDevice::TouchScreen&lt;/a&gt;. Events are delivered to the window containing</source>
          <target state="translated">시뮬레이션 된 &lt;a href=&quot;qtouchdevice#DeviceType-enum&quot;&gt;QTouchDevice :: TouchScreen을&lt;/a&gt; 통해 일련의 터치 이벤트를 시작합니다 . 이벤트가 포함 된 창으로 전달됩니다</target>
        </trans-unit>
        <trans-unit id="34df07d72d848789d2c788f0645d0e3c0cb4d899" translate="yes" xml:space="preserve">
          <source>Begins a transaction on the database if the driver supports transactions. Returns &lt;code&gt;true&lt;/code&gt; if the operation succeeded. Otherwise it returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">드라이버가 트랜잭션을 지원하는 경우 데이터베이스에서 트랜잭션을 시작합니다. 작업이 성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2146acdbb413ce8e85bbb1271da9940a7ac133c9" translate="yes" xml:space="preserve">
          <source>Begins composition of a macro command with the given</source>
          <target state="translated">주어진 매크로 명령의 구성을 시작합니다</target>
        </trans-unit>
        <trans-unit id="650d0734930669d8b1e5a50921ee340d19def621" translate="yes" xml:space="preserve">
          <source>Begins execution of the thread by calling &lt;a href=&quot;qthread#run&quot;&gt;run&lt;/a&gt;(). The operating system will schedule the thread according to the</source>
          <target state="translated">&lt;a href=&quot;qthread#run&quot;&gt;run&lt;/a&gt; () 을 호출하여 스레드 실행을 시작 합니다. 운영 체제는</target>
        </trans-unit>
        <trans-unit id="a4da2a3ff164340bb06277827c5e93f84936937d" translate="yes" xml:space="preserve">
          <source>Begins geocoding for a location matching</source>
          <target state="translated">위치 일치를위한 지오 코딩 시작</target>
        </trans-unit>
        <trans-unit id="54f554c02bbbc62adff852dc1c000f476ee7bb68" translate="yes" xml:space="preserve">
          <source>Begins painting on the backing store surface in the given</source>
          <target state="translated">주어진 백킹 스토어 표면에서 페인팅 시작</target>
        </trans-unit>
        <trans-unit id="62740efafd9830eee34b95937db476afb09779f0" translate="yes" xml:space="preserve">
          <source>Begins painting the paint</source>
          <target state="translated">페인트 칠을 시작합니다</target>
        </trans-unit>
        <trans-unit id="fead3f218f73813e5f1b559c7cbaaa1b5d4760ea" translate="yes" xml:space="preserve">
          <source>Begins the calculation of the route specified by</source>
          <target state="translated">로 지정된 경로의 계산을 시작합니다</target>
        </trans-unit>
        <trans-unit id="22cf2b9797a7deae3e777d5fdcb4cfc7790fe932" translate="yes" xml:space="preserve">
          <source>Begins the geocoding of</source>
          <target state="translated">지오 코딩을 시작합니다</target>
        </trans-unit>
        <trans-unit id="705e10501e3ba90db2479699bfa401e93b7bb4cc" translate="yes" xml:space="preserve">
          <source>Begins the layout process.</source>
          <target state="translated">레이아웃 프로세스를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="f80819ec27b05544c228942ab94221de0163e8c3" translate="yes" xml:space="preserve">
          <source>Begins the process of updating</source>
          <target state="translated">업데이트 프로세스를 시작합니다</target>
        </trans-unit>
        <trans-unit id="d0f333202c53aa2d6d65d517fe8d573cc92858c8" translate="yes" xml:space="preserve">
          <source>Begins the reverse geocoding of</source>
          <target state="translated">의 역 지오 코딩을 시작합니다</target>
        </trans-unit>
        <trans-unit id="13346cee30788afd37e487299a7fd00e4cd1589c" translate="yes" xml:space="preserve">
          <source>Behaves identically to &lt;a href=&quot;qtest#qExec&quot;&gt;qExec&lt;/a&gt;(&lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *, int, char**) but takes a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; of</source>
          <target state="translated">&lt;a href=&quot;qtest#qExec&quot;&gt;qExec&lt;/a&gt; ( &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; *, int, char **)와 동일하게 작동 하지만 &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; 는</target>
        </trans-unit>
        <trans-unit id="7ab5ca40920f29ec2174727123203a1960a26911" translate="yes" xml:space="preserve">
          <source>Behaves like &lt;a href=&quot;qtest#QTEST_MAIN&quot;&gt;QTEST_MAIN&lt;/a&gt;(), but doesn't instantiate a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object. Use this macro for really simple stand-alone non-GUI tests.</source>
          <target state="translated">&lt;a href=&quot;qtest#QTEST_MAIN&quot;&gt;QTEST_MAIN&lt;/a&gt; () 처럼 동작 하지만 &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; 객체를 인스턴스화하지는 않습니다 . 정말 간단한 독립형 비 GUI 테스트에는이 매크로를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="023253aa5665de4a4490d595e399cde701a6472c" translate="yes" xml:space="preserve">
          <source>Behaves like &lt;a href=&quot;qtest#QTEST_MAIN&quot;&gt;QTEST_MAIN&lt;/a&gt;(), but instantiates a &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; instead of the &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object. Use this macro if your test case doesn't need functionality offered by &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt;, but the event loop is still necessary.</source>
          <target state="translated">&lt;a href=&quot;qtest#QTEST_MAIN&quot;&gt;QTEST_MAIN&lt;/a&gt; () 처럼 동작 하지만 &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; 객체 대신 &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication을&lt;/a&gt; 인스턴스화 합니다. 테스트 케이스에 &lt;a href=&quot;qapplication&quot;&gt;QApplication이&lt;/a&gt; 제공하는 기능이 필요하지 않지만 이벤트 루프가 여전히 필요한 경우이 매크로를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="70cb647a88bd7c9c17d225eecdaf0f898261eb60" translate="yes" xml:space="preserve">
          <source>Behavior</source>
          <target state="translated">Behavior</target>
        </trans-unit>
        <trans-unit id="f591ac6ff828455fc522b863620fe9796929e9f9" translate="yes" xml:space="preserve">
          <source>Behavior (QML type)</source>
          <target state="translated">동작 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="c21db15e7a8ba9a3d088d9dbc5089adafb88e3b4" translate="yes" xml:space="preserve">
          <source>Behavior Animations</source>
          <target state="translated">행동 애니메이션</target>
        </trans-unit>
        <trans-unit id="7162a5ff7f865e814bdb874f4da57010f8284e2d" translate="yes" xml:space="preserve">
          <source>Behavior QML Type</source>
          <target state="translated">행동 QML 유형</target>
        </trans-unit>
        <trans-unit id="0eb9b35d7853f32038fbc327dc6e016bacb668cd" translate="yes" xml:space="preserve">
          <source>Behavior types for &lt;a href=&quot;qitemmodelbardataproxy#multiMatchBehavior-prop&quot;&gt;QItemModelBarDataProxy::multiMatchBehavior&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;qitemmodelbardataproxy#multiMatchBehavior-prop&quot;&gt;QItemModelBarDataProxy :: multiMatchBehavior&lt;/a&gt; 특성의 동작 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="51a0cb9edb71139ef5f883ec49216015467da954" translate="yes" xml:space="preserve">
          <source>Behavior types for &lt;a href=&quot;qitemmodelsurfacedataproxy#multiMatchBehavior-prop&quot;&gt;QItemModelSurfaceDataProxy::multiMatchBehavior&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;qitemmodelsurfacedataproxy#multiMatchBehavior-prop&quot;&gt;QItemModelSurfaceDataProxy :: multiMatchBehavior&lt;/a&gt; 특성의 동작 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="498ed0cd6756fbf6cf728d92c148f341771d2ecd" translate="yes" xml:space="preserve">
          <source>Behavior.animation</source>
          <target state="translated">Behavior.animation</target>
        </trans-unit>
        <trans-unit id="5a57ea5832adcb5e44633f1cbcbc5874e9656055" translate="yes" xml:space="preserve">
          <source>Behavior.enabled</source>
          <target state="translated">Behavior.enabled</target>
        </trans-unit>
        <trans-unit id="510a5416def320bd66e12eaff72e300504b7209b" translate="yes" xml:space="preserve">
          <source>Behavior.targetValue</source>
          <target state="translated">Behavior.targetValue</target>
        </trans-unit>
        <trans-unit id="c250fad45c604fd7f85316e2df871b83e169baa7" translate="yes" xml:space="preserve">
          <source>Behind the scene, the view calls the &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt;() virtual function on the model to reorder the data in the model. To make your data sortable, you can either implement &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt;() in your model, or use a &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; to wrap your model -- &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; provides a generic &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt;() reimplementation that operates on the &lt;a href=&quot;qsortfilterproxymodel#sortRole-prop&quot;&gt;sortRole&lt;/a&gt;() (&lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::DisplayRole&lt;/a&gt; by default) of the items and that understands several data types, including &lt;code&gt;int&lt;/code&gt;, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;, and &lt;a href=&quot;qdatetime&quot;&gt;QDateTime&lt;/a&gt;. For hierarchical models, sorting is applied recursively to all child items. String comparisons are case sensitive by default; this can be changed by setting the &lt;a href=&quot;qsortfilterproxymodel#sortCaseSensitivity-prop&quot;&gt;sortCaseSensitivity&lt;/a&gt; property.</source>
          <target state="translated">장면 뒤에서 뷰 는 모델 의 &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;정렬&lt;/a&gt; () 가상 함수를 호출 하여 모델의 데이터를 재정렬합니다. 데이터를 정렬 가능하게 만들려면 모델에서 &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;sort&lt;/a&gt; ()를 구현 하거나 &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; 을 사용 하여 모델을 래핑 할 수 있습니다. &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; 은 &lt;a href=&quot;qsortfilterproxymodel#sortRole-prop&quot;&gt;sortRole&lt;/a&gt; () 에서 작동 하는 일반 &lt;a href=&quot;qsortfilterproxymodel#sort&quot;&gt;정렬&lt;/a&gt; () 다시 구현을 제공합니다 ( 기본적으로 &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt :: DisplayRole&lt;/a&gt; ). &lt;code&gt;int&lt;/code&gt; , &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 및 &lt;a href=&quot;qdatetime&quot;&gt;QDateTime을&lt;/a&gt; 포함한 여러 데이터 유형을 이해합니다.. 계층 적 모델의 경우 정렬은 모든 하위 항목에 재귀 적으로 적용됩니다. 문자열 비교는 기본적으로 대소 문자를 구분합니다. &lt;a href=&quot;qsortfilterproxymodel#sortCaseSensitivity-prop&quot;&gt;sortCaseSensitivity&lt;/a&gt; 특성 을 설정하여 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5b0ccbe3018e8d326bf7728e43e6a6879b5985ab" translate="yes" xml:space="preserve">
          <source>Behind the scenes, &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt; automatically increments the reference count whenever an &lt;code&gt;Employee&lt;/code&gt; object is copied, assigned, or passed as a parameter. It decrements the reference count whenever an &lt;code&gt;Employee&lt;/code&gt; object is deleted or goes out of scope. The shared &lt;code&gt;EmployeeData&lt;/code&gt; object is deleted automatically if and when the reference count reaches 0.</source>
          <target state="translated">장면 뒤에서 &lt;a href=&quot;qshareddatapointer&quot;&gt;QSharedDataPointer&lt;/a&gt; 는 &lt;code&gt;Employee&lt;/code&gt; 객체를 복사, 할당 또는 매개 변수로 전달할 때마다 참조 횟수를 자동으로 증가시킵니다 . &lt;code&gt;Employee&lt;/code&gt; 개체가 삭제되거나 범위를 벗어날 때마다 참조 횟수를 줄입니다. 참조 카운트가 0에 도달하면 공유 &lt;code&gt;EmployeeData&lt;/code&gt; 객체가 자동으로 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="6bb6c1fbb291449ab6a499954ba3937d2907c091" translate="yes" xml:space="preserve">
          <source>Behind the scenes, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; uses &lt;a href=&quot;implicit-sharing#&quot;&gt;implicit sharing&lt;/a&gt; (copy-on-write) to reduce memory usage and to avoid the needless copying of data. This also helps reduce the inherent overhead of storing 16-bit characters instead of 8-bit characters.</source>
          <target state="translated">이면에서 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 은 &lt;a href=&quot;implicit-sharing#&quot;&gt;암시 적 공유&lt;/a&gt; (기록 중 복사)를 사용하여 메모리 사용을 줄이고 불필요한 데이터 복사를 피합니다. 또한 8 비트 문자 대신 16 비트 문자를 저장하는 고유의 오버 헤드를 줄이는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="f6c1e7f76bc3499b63c6505cf9b0d73a9b223ab6" translate="yes" xml:space="preserve">
          <source>Behind the scenes, Qt Remote Objects batches data() lookups and prefetches data when possible to make the model interaction as responsive as possible.</source>
          <target state="translated">뒤에서 Qt Remote Objects는 가능한 경우 데이터 () 조회를 일괄 처리하고 데이터를 프리 페치하여 모델 상호 작용을 가능한 한 신속하게 수행합니다.</target>
        </trans-unit>
        <trans-unit id="ce5219ac3afb5ef47e5fb40e6ea263d10293a9b9" translate="yes" xml:space="preserve">
          <source>Behind the scenes, the QML engine monitors the property's dependencies (that is, the variables in the binding expression). When a change is detected, the QML engine re-evaluates the binding expression and applies the new result to the property.</source>
          <target state="translated">뒤에서 QML 엔진은 속성의 종속성 (바인딩 표현식의 변수)을 모니터링합니다. 변경이 감지되면 QML 엔진은 바인딩 표현식을 다시 평가하고 새 결과를 특성에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="7141d151711ec9f5c1a412229f6213dfa16e0c25" translate="yes" xml:space="preserve">
          <source>Beijing</source>
          <target state="translated">Beijing</target>
        </trans-unit>
        <trans-unit id="f54521da7b41f3f963cef18c98c6e637e7b084e3" translate="yes" xml:space="preserve">
          <source>Being a declarative language, a piece of QML code provides minimal details about the entities defined. In such a scenario, the QML debugger is a very useful utility that enables:</source>
          <target state="translated">선언적 언어 인 QML 코드는 정의 된 엔티티에 대한 최소한의 세부 사항을 제공합니다. 이러한 시나리오에서 QML 디버거는 다음을 가능하게하는 매우 유용한 유틸리티입니다.</target>
        </trans-unit>
        <trans-unit id="9e8378494a20643eff240d4e015779c61f20e6a1" translate="yes" xml:space="preserve">
          <source>Being a strongly typed language, C++ is best suited for an application's logic. Typically, such code performs tasks such as complex calculations or data processing, which are faster in C++ than QML.</source>
          <target state="translated">C ++은 강력한 형식의 언어이므로 응용 프로그램의 논리에 가장 적합합니다. 일반적으로 이러한 코드는 복잡한 계산 또는 데이터 처리와 같은 작업을 수행하며, QML보다 C ++에서 더 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="a8baa4748f88acf655b22529fbe7f0b02321f76a" translate="yes" xml:space="preserve">
          <source>Being message-oriented, SCTP transports a sequence of messages, rather than transporting an unbroken stream of bytes as does TCP. Like in UDP, in SCTP a sender sends a message in one operation, and that exact message is passed to the receiving application process in one operation. But unlike UDP, the delivery is guaranteed.</source>
          <target state="translated">SCTP는 메시지 지향적이므로 TCP와 마찬가지로 중단되지 않은 바이트 스트림을 전송하지 않고 일련의 메시지를 전송합니다. UDP와 마찬가지로 SCTP에서 발신자는 한 번의 작업으로 메시지를 보내고 정확한 메시지는 한 번의 작업으로 수신 응용 프로그램 프로세스로 전달됩니다. 그러나 UDP와 달리 전달이 보장됩니다.</target>
        </trans-unit>
        <trans-unit id="f1a010041fc63195c5e85039d8cbf775d15a34a5" translate="yes" xml:space="preserve">
          <source>Being so central, the button widget has grown to accommodate a great many variations in the past decade. The Microsoft style guide now shows about ten different states of Windows push buttons and the text implies that there are dozens more when all the combinations of features are taken into consideration.</source>
          <target state="translated">버튼 위젯은 너무 중심적이어서 지난 10 년 동안 많은 변형을 수용 할 수 있도록 성장했습니다. Microsoft 스타일 가이드에는 이제 약 10 가지의 Windows 푸시 버튼 상태가 표시되며 모든 기능 조합을 고려할 때 수십 가지가 더 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdbf25057b953c66b82b370cbfc8860281619cea" translate="yes" xml:space="preserve">
          <source>Belarusian (Cyrillic)</source>
          <target state="translated">벨로루시 어 (키릴 자모)</target>
        </trans-unit>
        <trans-unit id="466d088bfb8331e98c02fa04090595bc45ea27d8" translate="yes" xml:space="preserve">
          <source>Below are examples of the 9-patch image being resized to one and a half times its original size in various dimensions:</source>
          <target state="translated">다음은 다양한 크기의 9 패치 이미지 크기를 원래 크기의 1.5 배로 조정 한 예입니다.</target>
        </trans-unit>
        <trans-unit id="97546b5d68ca8f6a77cd56f90e88a92171956a08" translate="yes" xml:space="preserve">
          <source>Below are more examples of the 9-patch image being resized, but this time demonstrating how the padding 9-patch lines work.</source>
          <target state="translated">아래는 9 패치 이미지의 크기를 조정하는 더 많은 예입니다. 이번에는 패딩 9 패치 라인의 작동 방식을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2a548a4973fb8ac49cac9cd0cb75d41cf4810202" translate="yes" xml:space="preserve">
          <source>Below are two &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#propertyanimation&quot;&gt;PropertyAnimation&lt;/a&gt; objects that are specified using this syntax:</source>
          <target state="translated">다음은 이 구문을 사용하여 지정된 두 개의 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#propertyanimation&quot;&gt;PropertyAnimation&lt;/a&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="a36ff47e1480154b221cc2cbd6f81c9132a058b8" translate="yes" xml:space="preserve">
          <source>Below is a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; with a &lt;code&gt;calculateHeight()&lt;/code&gt; method that is called when assigning the &lt;code&gt;height&lt;/code&gt; value:</source>
          <target state="translated">다음은 &lt;code&gt;height&lt;/code&gt; 값을 지정할 때 호출 되는 &lt;code&gt;calculateHeight()&lt;/code&gt; 메서드 가있는 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="a70b28a17b9f296a713f3851c763d8c4fb7281bd" translate="yes" xml:space="preserve">
          <source>Below is a &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; object and a &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; object. The &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; object's &lt;code&gt;id&lt;/code&gt; value is set to &quot;myTextInput&quot;. The &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; object sets its &lt;code&gt;text&lt;/code&gt; property to have the same value as the &lt;code&gt;text&lt;/code&gt; property of the &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt;, by referring to &lt;code&gt;myTextInput.text&lt;/code&gt;. Now, both items will display the same text:</source>
          <target state="translated">아래는 &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; 객체와 &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; 객체입니다. &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput 구성&lt;/a&gt; 객체의 &lt;code&gt;id&lt;/code&gt; 값 &quot;를 myTextInput&quot;로 설정되어 있습니다. &lt;a href=&quot;qml-qtquick-text&quot;&gt;텍스트&lt;/a&gt; 객체는 설정 &lt;code&gt;text&lt;/code&gt; 는 AS 같은 값을 갖는 속성을 &lt;code&gt;text&lt;/code&gt; 의 재산 &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;의 TextInput를&lt;/a&gt; 참조하여, &lt;code&gt;myTextInput.text&lt;/code&gt; . 이제 두 항목 모두 같은 텍스트가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f8efaca94961abc67a21b064135070e5500eaa23" translate="yes" xml:space="preserve">
          <source>Below is a Column that contains three rectangles of various sizes:</source>
          <target state="translated">다음은 다양한 크기의 세 개의 사각형이 포함 된 열입니다.</target>
        </trans-unit>
        <trans-unit id="35470bc9bde307efbeeb75d99be849b8b3014f92" translate="yes" xml:space="preserve">
          <source>Below is a Flow that contains various &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; items:</source>
          <target state="translated">다음은 다양한 &lt;a href=&quot;qml-qtquick-text&quot;&gt;텍스트&lt;/a&gt; 항목 이 포함 된 흐름입니다 .</target>
        </trans-unit>
        <trans-unit id="a4a3f01706464abd7a875b17b4a76231886d30cd" translate="yes" xml:space="preserve">
          <source>Below is a Row that contains three rectangles of various sizes:</source>
          <target state="translated">다음은 다양한 크기의 세 개의 사각형이 포함 된 행입니다.</target>
        </trans-unit>
        <trans-unit id="7e36a8f636410cb1e7ea23d7dc2d83e39930ef35" translate="yes" xml:space="preserve">
          <source>Below is a code snippet that shows how a &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; object can be used:</source>
          <target state="translated">아래는 &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; 객체 사용 방법을 보여주는 코드 스 니펫입니다 .</target>
        </trans-unit>
        <trans-unit id="b1c8780a3e072d747fcb4047d778858c83eea8f5" translate="yes" xml:space="preserve">
          <source>Below is a complete list of all feature macros for &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt;:</source>
          <target state="translated">다음은 &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger에&lt;/a&gt; 대한 모든 기능 매크로의 전체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="9d1d865a90dfc9188088c65cbe4d0475d5740d53" translate="yes" xml:space="preserve">
          <source>Below is a complete list of all feature macros for &lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer&lt;/a&gt;:</source>
          <target state="translated">다음은 &lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer에&lt;/a&gt; 대한 모든 기능 매크로의 전체 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="866e4eaaf83bd84e7b8f06930a8141894af38ef6" translate="yes" xml:space="preserve">
          <source>Below is a complete list of material classes:</source>
          <target state="translated">아래는 재료 등급의 전체 목록입니다.</target>
        </trans-unit>
        <trans-unit id="c96db667f84d45cae888435d740b505f996a2128" translate="yes" xml:space="preserve">
          <source>Below is a modification of the &lt;code&gt;displaced&lt;/code&gt; transition from the previous example. It adds a &lt;a href=&quot;qml-qtquick-parallelanimation&quot;&gt;ParallelAnimation&lt;/a&gt; with nested &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; objects that reference &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt;.item to access each item's &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; values at the start of their transitions. This allows each item to animate to an intermediate position relative to its starting point for the transition, before animating to its final position in the view:</source>
          <target state="translated">아래는 이전 예제에서 &lt;code&gt;displaced&lt;/code&gt; 전환 의 수정입니다 . 그것은 추가 &lt;a href=&quot;qml-qtquick-parallelanimation&quot;&gt;ParallelAnimation&lt;/a&gt; 중첩와 &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation는&lt;/a&gt; 그 참조 객체 &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; 각 항목에의 액세스를 위해 .item &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 그들의 천이의 시작 값. 이를 통해 각 항목이 뷰의 최종 위치에 애니메이션을 적용하기 전에 전환 시작점을 기준으로 중간 위치에 애니메이션을 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="690899f57953fe1742aa0ed50ca16d854bc3d0a4" translate="yes" xml:space="preserve">
          <source>Below is a more complex example involving more objects and types:</source>
          <target state="translated">다음은 더 많은 객체와 유형이 포함 된보다 복잡한 예입니다.</target>
        </trans-unit>
        <trans-unit id="fc79f9e268dc011bdddda13ace62dc414589e8c2" translate="yes" xml:space="preserve">
          <source>Below is a snippet illustrating how a geometry composed of position and color vertices can be built.</source>
          <target state="translated">아래는 위치 및 색상 정점으로 구성된 지오메트리를 작성하는 방법을 보여주는 스 니펫입니다.</target>
        </trans-unit>
        <trans-unit id="f2e7122391443a7a1755825a099174bf81faf3f1" translate="yes" xml:space="preserve">
          <source>Below is a tree of the widget's style structure:</source>
          <target state="translated">아래는 위젯 스타일 구조의 트리입니다.</target>
        </trans-unit>
        <trans-unit id="7cb84eaa9c5693ec15313c32a0daac4e0bea37a8" translate="yes" xml:space="preserve">
          <source>Below is an example configuration for the BD-SL-i.MX6. For most VxWorks boards the configure command will look very similar. By default, Qt 5 is configured to use shared libraries. To build Qt 5 statically, add &lt;code&gt;-static&lt;/code&gt; option for configure.</source>
          <target state="translated">아래는 BD-SL-i.MX6의 구성 예입니다. 대부분의 VxWorks 보드의 경우 configure 명령은 매우 유사합니다. 기본적으로 Qt 5는 공유 라이브러리를 사용하도록 구성되어 있습니다. Qt 5를 정적으로 빌드하려면 configure 에 &lt;code&gt;-static&lt;/code&gt; 옵션을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="e6de030bc79c0e6768d221104cec4c83f852d44b" translate="yes" xml:space="preserve">
          <source>Below is an example of a simple radial gradient. Here the colors are interpolated between the specified point and the end points on a circle specified by the radius:</source>
          <target state="translated">아래는 간단한 방사형 그래디언트의 예입니다. 여기에서 반지름으로 지정된 원의 지정된 점과 끝점 사이에 색상이 보간됩니다.</target>
        </trans-unit>
        <trans-unit id="5bf4c842e7bfff486fc4e62deb921184134c2fb2" translate="yes" xml:space="preserve">
          <source>Below is an example that changes the needle to a basic orange &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;:</source>
          <target state="translated">아래는 바늘을 기본 주황색 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;사각형으로&lt;/a&gt; 변경하는 예입니다 .</target>
        </trans-unit>
        <trans-unit id="5d741d7112a714204d1c0d1e0699941f00f30fcb" translate="yes" xml:space="preserve">
          <source>Below is an example that demonstrates a custom language dialog implementation:</source>
          <target state="translated">다음은 사용자 정의 언어 대화 상자 구현을 보여주는 예입니다.</target>
        </trans-unit>
        <trans-unit id="21749a8982e2656c1c04120108704942c4feeb0f" translate="yes" xml:space="preserve">
          <source>Below is the complete declaration and definition of the requestor class (&lt;code&gt;DynamicClient&lt;/code&gt; in this example):</source>
          <target state="translated">다음은 요청자 클래스 ( 이 예제에서는 &lt;code&gt;DynamicClient&lt;/code&gt; )의 완전한 선언 및 정의입니다 .</target>
        </trans-unit>
        <trans-unit id="cac5e4226ebd08ca82dc1ce6f712c29b69c4893c" translate="yes" xml:space="preserve">
          <source>Below the text.</source>
          <target state="translated">텍스트 아래.</target>
        </trans-unit>
        <trans-unit id="5f43e01cc11619a5000997c179e2a8e03aa4d7f6" translate="yes" xml:space="preserve">
          <source>Below we present some examples of validators. In practice they would normally be associated with a widget as in the example above.</source>
          <target state="translated">아래에서는 유효성 검사기의 예를 보여줍니다. 실제로는 일반적으로 위의 예와 같이 위젯과 연관됩니다.</target>
        </trans-unit>
        <trans-unit id="e889955012c40dc4299c83d25b55bc6d50a09516" translate="yes" xml:space="preserve">
          <source>Below we present the same example using each of the four different binding approaches, as well as one example of binding values to a stored procedure.</source>
          <target state="translated">아래에서는 저장 프로 시저에 값을 바인딩하는 한 가지 예뿐만 아니라 서로 다른 네 가지 바인딩 방식을 사용하는 동일한 예를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="3ac5e2aeac9ded3f6d9a19285dcd372e55ab6835" translate="yes" xml:space="preserve">
          <source>Below you can find an example of a &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; object with a &lt;a href=&quot;qml-qtquick-regexpvalidator&quot;&gt;RegExpValidator&lt;/a&gt; specified:</source>
          <target state="translated">아래 는 &lt;a href=&quot;qml-qtquick-regexpvalidator&quot;&gt;RegExpValidator가&lt;/a&gt; 지정된 &lt;a href=&quot;qml-qtquick-textinput&quot;&gt;TextInput&lt;/a&gt; 객체 의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="b1b44af4108710ebe1fd5bfe24ab7492d18b54c1" translate="yes" xml:space="preserve">
          <source>Below you can find an example taken from the index.qdoc file used to generate index.html for Qt 4.7:</source>
          <target state="translated">아래에서는 Qt 4.7 용 index.html을 생성하는 데 사용 된 index.qdoc 파일에서 예제를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d54a363a1592cf99273cfdb47216f3cd1db21aee" translate="yes" xml:space="preserve">
          <source>Below you will find practical guidelines on how and when to use the controls.</source>
          <target state="translated">아래에는 컨트롤 사용 방법과시기에 대한 실용적인 지침이 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a4a2f91ac6d4752a586182a454ec762d3fb518e" translate="yes" xml:space="preserve">
          <source>Below you will find the full contents of &lt;code&gt;qtgui.qdocconf&lt;/code&gt;. The subsequent section will discuss every statement in the qdocconf file.</source>
          <target state="translated">아래에서 &lt;code&gt;qtgui.qdocconf&lt;/code&gt; 의 전체 내용을 볼 수 있습니다. 다음 섹션에서는 qdocconf 파일의 모든 명령문에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="0f12d80e39982748f82122e7553e67d8405fb5a4" translate="yes" xml:space="preserve">
          <source>Below you will find the full contents of qtgui.qdocconf. The subsequent section will discuss every statement in the qdocconf file.</source>
          <target state="translated">아래는 qtgui.qdocconf의 전체 내용을 볼 수 있습니다. 다음 섹션에서는 qdocconf 파일의 모든 명령문에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="de8cb18cee190170c83d62c99ad3aa8cd0705c4a" translate="yes" xml:space="preserve">
          <source>Below, the &lt;code&gt;QtQuick&lt;/code&gt; module is imported into the namespace &quot;CoreItems&quot;. Now, any references to types from the &lt;code&gt;QtQuick&lt;/code&gt; module must be prefixed with the &lt;code&gt;CoreItems&lt;/code&gt; name:</source>
          <target state="translated">아래에서 &lt;code&gt;QtQuick&lt;/code&gt; 모듈은 네임 스페이스 &quot;CoreItems&quot;로 가져옵니다. 이제 &lt;code&gt;QtQuick&lt;/code&gt; 모듈 에서 형식에 대한 참조 는 &lt;code&gt;CoreItems&lt;/code&gt; 이름 으로 시작해야합니다 .</target>
        </trans-unit>
        <trans-unit id="87e6b6da0aa99cfad45805c59c75ba5e1ae593a1" translate="yes" xml:space="preserve">
          <source>Below, the &lt;code&gt;messageReceived&lt;/code&gt; signal is connected to three methods using the &lt;code&gt;connect()&lt;/code&gt; method:</source>
          <target state="translated">아래에서 &lt;code&gt;messageReceived&lt;/code&gt; 신호는 &lt;code&gt;connect()&lt;/code&gt; 메소드를 사용하여 세 가지 메소드에 연결됩니다 .</target>
        </trans-unit>
        <trans-unit id="7bf9da3ccf4290ae081509b7acfe511ab4bc4d3f" translate="yes" xml:space="preserve">
          <source>Below, you will find more information about building Qt from source.</source>
          <target state="translated">아래에서 소스에서 Qt를 빌드하는 방법에 대한 자세한 정보를 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f065f69811884899b590a9d9e799d1b1b4162b4" translate="yes" xml:space="preserve">
          <source>Below, you'll find an example of how to create a temperature gauge that changes color as its value increases:</source>
          <target state="translated">아래에는 값이 증가함에 따라 색상이 변하는 온도 게이지를 만드는 방법의 예가 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="4f46ac72b3634f96c6860b1ed26d9d4cd71d21aa" translate="yes" xml:space="preserve">
          <source>Benchmarks</source>
          <target state="translated">Benchmarks</target>
        </trans-unit>
        <trans-unit id="198e9c0851a2cebe3440bd1cafd71b98e2d83392" translate="yes" xml:space="preserve">
          <source>Bengali</source>
          <target state="translated">Bengali</target>
        </trans-unit>
        <trans-unit id="062b06ba8e755765c6b049809b7430fd54fe5b21" translate="yes" xml:space="preserve">
          <source>Berlin</source>
          <target state="translated">Berlin</target>
        </trans-unit>
        <trans-unit id="2180a7f60706ff8db31552e0aa81fa61dc3de8ea" translate="yes" xml:space="preserve">
          <source>Besides being created or deleted, services may change owners without a unregister/register operation happening. So the &lt;a href=&quot;qdbusservicewatcher#serviceRegistered&quot;&gt;serviceRegistered&lt;/a&gt;() and &lt;a href=&quot;qdbusservicewatcher#serviceUnregistered&quot;&gt;serviceUnregistered&lt;/a&gt;() signals may not be emitted if that happens.</source>
          <target state="translated">서비스는 생성 또는 삭제되는 것 외에도 등록 취소 / 등록 작업없이 소유자를 변경할 수 있습니다. 따라서 &lt;a href=&quot;qdbusservicewatcher#serviceRegistered&quot;&gt;serviceRegistered&lt;/a&gt; () 및 &lt;a href=&quot;qdbusservicewatcher#serviceUnregistered&quot;&gt;serviceUnregistered&lt;/a&gt; () 신호가 발생하면 방출되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="645a4adbe73bea08a1c73846b1454b7b517fc04b" translate="yes" xml:space="preserve">
          <source>Besides game controllers, it also supports the tvOS remote (microGamepad). The mapping for this is the following:</source>
          <target state="translated">게임 컨트롤러 외에도 tvOS 리모컨 (microGamepad)도 지원합니다. 이에 대한 매핑은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="77360814878c33ffaa7711e053dbb31a5f032cec" translate="yes" xml:space="preserve">
          <source>Besides performance, one advantage of placeholders is that you can easily specify arbitrary values without having to worry about escaping special characters.</source>
          <target state="translated">자리 표시 자의 장점 중 하나는 성능 외에도 특수 문자 이스케이프에 대해 걱정할 필요없이 임의의 값을 쉽게 지정할 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d5f44649c62b5cd305889d59a153b91f1c669848" translate="yes" xml:space="preserve">
          <source>Besides returning &lt;code&gt;false&lt;/code&gt; from &lt;a href=&quot;qvulkaninstance#create&quot;&gt;create&lt;/a&gt;() or &lt;code&gt;0&lt;/code&gt; from &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;(), critical errors will also get printed to the debug output via &lt;a href=&quot;#qWarning&quot;&gt;qWarning&lt;/a&gt;(). Additional logging can be requested by enabling debug output for the logging category &lt;code&gt;qt.vulkan&lt;/code&gt;. The actual Vulkan error code from instance creation can be retrieved by calling &lt;a href=&quot;qvulkaninstance#errorCode&quot;&gt;errorCode&lt;/a&gt;() after a failing &lt;a href=&quot;qvulkaninstance#create&quot;&gt;create&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qvulkaninstance#create&quot;&gt;create&lt;/a&gt; () 에서 &lt;code&gt;false&lt;/code&gt; 를 반환 하거나 &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt; () 에서 &lt;code&gt;0&lt;/code&gt; 을 반환하는 것 외에도 심각한 오류도 &lt;a href=&quot;#qWarning&quot;&gt;qWarning&lt;/a&gt; ()을 통해 디버그 출력에 인쇄됩니다 . 로깅 카테고리 &lt;code&gt;qt.vulkan&lt;/code&gt; 에 대한 디버그 출력을 사용 가능하게하여 추가 로깅을 요청할 수 있습니다 . 실패한 &lt;a href=&quot;qvulkaninstance#create&quot;&gt;작성&lt;/a&gt; () 후 &lt;a href=&quot;qvulkaninstance#errorCode&quot;&gt;errorCode&lt;/a&gt; () 를 호출하여 인스턴스 작성의 실제 Vulkan 오류 코드를 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ba81879d037e3c24612829943a2da91d8e87206b" translate="yes" xml:space="preserve">
          <source>Besides the &lt;code&gt;roleNames()&lt;/code&gt; and &lt;code&gt;data()&lt;/code&gt;, editable models must reimplement the &lt;a href=&quot;qabstractitemmodel#setData&quot;&gt;setData&lt;/a&gt; method to save changes to existing model data. The following version of the method checks if the given model index is valid and the &lt;code&gt;role&lt;/code&gt; is equal to &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt::EditRole&lt;/a&gt;:</source>
          <target state="translated">&lt;code&gt;roleNames()&lt;/code&gt; 및 &lt;code&gt;data()&lt;/code&gt; 외에도 편집 가능한 모델은 기존 모델 데이터의 변경 사항을 저장하기 위해 &lt;a href=&quot;qabstractitemmodel#setData&quot;&gt;setData&lt;/a&gt; 메소드를 다시 구현해야합니다 . 다음 버전의 메소드는 주어진 모델 인덱스가 유효하고 &lt;code&gt;role&lt;/code&gt; 이 &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;Qt :: EditRole&lt;/a&gt; 과 같은지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="097bc2eb803b4911747ae3b802b4722fa2dcdff3" translate="yes" xml:space="preserve">
          <source>Besides the main conceptual difference of being backed by a framebuffer object, there are a number of smaller, internal differences between &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; and the older QGLWidget:</source>
          <target state="translated">프레임 버퍼 객체에 의해 지원되는 주요 개념상의 차이 외에도 &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; 과 이전 QGLWidget 사이에는 몇 가지 더 작은 내부 차이가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="519b499658db9e7786867dff9767549a35875a25" translate="yes" xml:space="preserve">
          <source>Besides these basic UI controls offered by Qt Quick itself, a rich set of UI controls are also available with Qt Quick Controls 2. They cater to the most common use cases without any change, and offer a lot more possibilities with their customization options. In particular, Qt Quick Controls 2 provides styling options that align with the latest UI design trends. If these UI controls do not satisfy your application's needs, only then it is recommended to create a custom control.</source>
          <target state="translated">Qt Quick 자체에서 제공하는 이러한 기본 UI 컨트롤 외에도 다양한 UI 컨트롤 세트가 Qt Quick Controls 2에서도 제공됩니다. 변경없이 가장 일반적인 사용 사례를 수용하고 사용자 정의 옵션으로 더 많은 가능성을 제공합니다. 특히 Qt Quick Controls 2는 최신 UI 디자인 트렌드에 맞는 스타일 옵션을 제공합니다. 이러한 UI 컨트롤이 응용 프로그램의 요구 사항을 충족하지 않으면 사용자 지정 컨트롤을 만드는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="9497fd63409680545d14a9935e5947e4042e3285" translate="yes" xml:space="preserve">
          <source>Besides this, a QML profiler enables you to get necessary diagnostic information, allowing you to analyze the application code for performance issues. For example, too much JavaScript in each frame, long-running C++ functions, and so on.</source>
          <target state="translated">이 외에도 QML 프로파일 러를 사용하면 필요한 진단 정보를 얻을 수 있으므로 성능 문제에 대한 응용 프로그램 코드를 분석 할 수 있습니다. 예를 들어, 각 프레임에 너무 많은 JavaScript, 장시간 실행되는 C ++ 함수 등이 있습니다.</target>
        </trans-unit>
        <trans-unit id="632f2a74d5af476c5c3c9ed3816f168b157ffd45" translate="yes" xml:space="preserve">
          <source>Besides using &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;'s constructors, you can also set the device or string &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; operates on by calling &lt;a href=&quot;qtextstream#setDevice&quot;&gt;setDevice&lt;/a&gt;() or &lt;a href=&quot;qtextstream#setString&quot;&gt;setString&lt;/a&gt;(). You can seek to a position by calling &lt;a href=&quot;qtextstream#seek&quot;&gt;seek&lt;/a&gt;(), and &lt;a href=&quot;qtextstream#atEnd&quot;&gt;atEnd&lt;/a&gt;() will return true when there is no data left to be read. If you call &lt;a href=&quot;qtextstream#flush&quot;&gt;flush&lt;/a&gt;(), &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; will empty all data from its write buffer into the device and call &lt;a href=&quot;qtextstream#flush&quot;&gt;flush&lt;/a&gt;() on the device.</source>
          <target state="translated">&lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; 의 생성자를 사용하는 것 외에도 &lt;a href=&quot;qtextstream#setDevice&quot;&gt;setDevice&lt;/a&gt; () 또는 &lt;a href=&quot;qtextstream#setString&quot;&gt;setString&lt;/a&gt; () 을 호출하여 &lt;a href=&quot;qtextstream&quot;&gt;QTextStream이&lt;/a&gt; 작동 하는 장치 또는 문자열을 설정할 수도 있습니다 . &lt;a href=&quot;qtextstream#seek&quot;&gt;seek&lt;/a&gt; () 를 호출하여 위치를 탐색 할 수 있으며 읽을 데이터가 없으면 &lt;a href=&quot;qtextstream#atEnd&quot;&gt;atEnd&lt;/a&gt; ()가 true를 반환합니다. &lt;a href=&quot;qtextstream#flush&quot;&gt;flush&lt;/a&gt; () 를 호출하면 &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt; 은 쓰기 버퍼의 모든 데이터를 장치로 &lt;a href=&quot;qtextstream#flush&quot;&gt;비우고&lt;/a&gt; 장치에서 flush ()를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="cdcdb9ce10d9123ca46d421b63fddd8f24135bfc" translate="yes" xml:space="preserve">
          <source>Best Practices for QML and Qt Quick</source>
          <target state="translated">QML 및 Qt Quick에 대한 모범 사례</target>
        </trans-unit>
        <trans-unit id="9c4893c15c78ad1033d9ab14f6e5145330da8717" translate="yes" xml:space="preserve">
          <source>Between &lt;code&gt;Button&lt;/code&gt; and &lt;code&gt;Dark&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Button&lt;/code&gt; 과 &lt;code&gt;Dark&lt;/code&gt; 사이 .</target>
        </trans-unit>
        <trans-unit id="1484a2831aaa5c7b12191215fc940394696ea206" translate="yes" xml:space="preserve">
          <source>Between &lt;code&gt;Button&lt;/code&gt; and &lt;code&gt;Light&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Button&lt;/code&gt; 과 &lt;code&gt;Light&lt;/code&gt; 사이 .</target>
        </trans-unit>
        <trans-unit id="477c1d53aa819ca80842bf925082e4f9213b244d" translate="yes" xml:space="preserve">
          <source>Between &lt;code&gt;palette.button&lt;/code&gt; and &lt;code&gt;palette.dark&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;palette.button&lt;/code&gt; 과 &lt;code&gt;palette.dark&lt;/code&gt; 사이 .</target>
        </trans-unit>
        <trans-unit id="ca01f5c73d5e53a95a0d8022181399b8c0b0b001" translate="yes" xml:space="preserve">
          <source>Between &lt;code&gt;palette.button&lt;/code&gt; and &lt;code&gt;palette.light&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;palette.button&lt;/code&gt; 과 &lt;code&gt;palette.light&lt;/code&gt; 사이 .</target>
        </trans-unit>
        <trans-unit id="dfdc389e53b49fd9db94be307d638c975203faac" translate="yes" xml:space="preserve">
          <source>Between the items, the layout distributes some space. The actual amount of space depends on the managed widget's current style, but the common spacing is 4. You can also set your own spacing by calling &lt;a href=&quot;qgraphicslinearlayout#setSpacing&quot;&gt;setSpacing&lt;/a&gt;(), and get the current spacing value by calling &lt;a href=&quot;qgraphicslinearlayout#spacing&quot;&gt;spacing&lt;/a&gt;(). If you want to configure individual spacing for your items, you can call &lt;a href=&quot;qgraphicslinearlayout#setItemSpacing&quot;&gt;setItemSpacing&lt;/a&gt;().</source>
          <target state="translated">항목들 사이에서, 레이아웃은 약간의 공간을 분배합니다. 실제 공간은 관리되는 위젯의 현재 스타일에 따라 다르지만 공통 간격은 4입니다. &lt;a href=&quot;qgraphicslinearlayout#setSpacing&quot;&gt;setSpacing&lt;/a&gt; () 을 호출하여 자체 간격을 설정 하고 &lt;a href=&quot;qgraphicslinearlayout#spacing&quot;&gt;간격&lt;/a&gt; () 을 호출하여 현재 간격 값을 가져올 수도 있습니다. 항목에 대한 개별 간격을 구성하려면 &lt;a href=&quot;qgraphicslinearlayout#setItemSpacing&quot;&gt;setItemSpacing&lt;/a&gt; ()을 호출하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="7dd2da8c65866c878329b1312113d3c0f5e0125a" translate="yes" xml:space="preserve">
          <source>Beware that changing the sourceSize will cause the image to be reloaded.</source>
          <target state="translated">sourceSize를 변경하면 이미지가 다시로드됩니다.</target>
        </trans-unit>
        <trans-unit id="6d26dd8a2778e51aea0698aec586437ef3612470" translate="yes" xml:space="preserve">
          <source>Bidirectional Iterator</source>
          <target state="translated">양방향 반복자</target>
        </trans-unit>
        <trans-unit id="8c7341947224c1f44045f4176bc176db150de2f5" translate="yes" xml:space="preserve">
          <source>Bidirectional Iterators</source>
          <target state="translated">양방향 반복자</target>
        </trans-unit>
        <trans-unit id="a6ffc0c8693fd6bff3d62d39d73ebc4e7989eac2" translate="yes" xml:space="preserve">
          <source>Big-endian byte order (also called Network byte order)</source>
          <target state="translated">빅 엔디안 바이트 순서 (네트워크 바이트 순서라고도 함)</target>
        </trans-unit>
        <trans-unit id="de1698114af4355c5ccd60424049fded636df6a2" translate="yes" xml:space="preserve">
          <source>Big5</source>
          <target state="translated">Big5</target>
        </trans-unit>
        <trans-unit id="f669791103ab2e426d0fa347a9661db7861ac075" translate="yes" xml:space="preserve">
          <source>Big5 Text Codec</source>
          <target state="translated">Big5 텍스트 코덱</target>
        </trans-unit>
        <trans-unit id="38c002db58b45bf4e8ab53744068f3ffd5d129ce" translate="yes" xml:space="preserve">
          <source>Big5-HKSCS</source>
          <target state="translated">Big5-HKSCS</target>
        </trans-unit>
        <trans-unit id="513539c1e18c1a4d9a92833082336be12a292fdf" translate="yes" xml:space="preserve">
          <source>Big5-HKSCS Text Codec</source>
          <target state="translated">Big5-HKSCS 텍스트 코덱</target>
        </trans-unit>
        <trans-unit id="f3c794f007343b969bc570c5dd057212ece700be" translate="yes" xml:space="preserve">
          <source>Binaries</source>
          <target state="translated">Binaries</target>
        </trans-unit>
        <trans-unit id="66639f7d455dd71faa9147f5d69e5ce885d8bebd" translate="yes" xml:space="preserve">
          <source>Binary</source>
          <target state="translated">Binary</target>
        </trans-unit>
        <trans-unit id="d8cc5569862385c811d2602253b6889248a64e53" translate="yes" xml:space="preserve">
          <source>Binary Large Objects (BLOBs) can be read and written, but be aware that this process may require a lot of memory. You should use a forward only query to select LOB fields (see &lt;a href=&quot;qsqlquery#setForwardOnly&quot;&gt;QSqlQuery::setForwardOnly&lt;/a&gt;()).</source>
          <target state="translated">BLOB (Binary Large Objects)는 읽고 쓸 수 있지만이 프로세스에는 많은 메모리가 필요할 수 있습니다. LOB 필드를 선택하려면 정방향 쿼리를 사용해야합니다 ( &lt;a href=&quot;qsqlquery#setForwardOnly&quot;&gt;QSqlQuery :: setForwardOnly&lt;/a&gt; () 참조).</target>
        </trans-unit>
        <trans-unit id="8b26882e2cc4ff42fc3ad4f8bd32d18561eef6f7" translate="yes" xml:space="preserve">
          <source>Binary Large Objects are supported through the &lt;code&gt;BYTEA&lt;/code&gt; field type in PostgreSQL server versions &amp;gt;= 7.1.</source>
          <target state="translated">이진 큰 개체는 PostgreSQL 서버 버전&amp;gt; = 7.1에서 &lt;code&gt;BYTEA&lt;/code&gt; 필드 유형을 통해 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="d93b0c259e545d3cde201a9e3389fd883b26c263" translate="yes" xml:space="preserve">
          <source>Binary Shaders and Programs</source>
          <target state="translated">이진 셰이더 및 프로그램</target>
        </trans-unit>
        <trans-unit id="ac21b270fbb744327773c389bea23c1600338d77" translate="yes" xml:space="preserve">
          <source>Binary character permitted but not required.</source>
          <target state="translated">이진 문자는 허용되지만 필수는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="c7a4ab6632992fcba0ed945ded62694c9087eb10" translate="yes" xml:space="preserve">
          <source>Binary character required. 0-1.</source>
          <target state="translated">이진 문자가 필요합니다. 0-1.</target>
        </trans-unit>
        <trans-unit id="f1e02b0aecb818afe97ad310e29c96ffa1dc2b3e" translate="yes" xml:space="preserve">
          <source>Binary data set with &lt;a href=&quot;qjsondocument#fromRawData&quot;&gt;fromRawData&lt;/a&gt; is not freed.</source>
          <target state="translated">&lt;a href=&quot;qjsondocument#fromRawData&quot;&gt;fromRawData&lt;/a&gt; 로 설정된 이진 데이터 는 해제되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b99c1ee01902f4cd715979a83c0ff532eb964854" translate="yes" xml:space="preserve">
          <source>Binary programs may be specified using &lt;code&gt;glProgramBinaryOES()&lt;/code&gt; on the return value from &lt;a href=&quot;qopenglshaderprogram#programId&quot;&gt;programId&lt;/a&gt;(). Then the application should call &lt;a href=&quot;qopenglshaderprogram#link&quot;&gt;link&lt;/a&gt;(), which will notice that the program has already been specified and linked, allowing other operations to be performed on the shader program. The shader program's id can be explicitly created using the &lt;a href=&quot;qopenglshaderprogram#create&quot;&gt;create&lt;/a&gt;() function.</source>
          <target state="translated">바이너리 프로그램은 &lt;a href=&quot;qopenglshaderprogram#programId&quot;&gt;programId&lt;/a&gt; () 의 반환 값에 &lt;code&gt;glProgramBinaryOES()&lt;/code&gt; 를 사용하여 지정할 수 있습니다 . 그런 다음 응용 프로그램은 &lt;a href=&quot;qopenglshaderprogram#link&quot;&gt;link&lt;/a&gt; ()를 호출해야 합니다.이 프로그램은 프로그램이 이미 지정되고 링크되어 쉐이더 프로그램에서 다른 작업을 수행 할 수 있도록합니다. 셰이더 프로그램의 ID는 &lt;a href=&quot;qopenglshaderprogram#create&quot;&gt;create&lt;/a&gt; () 함수를 사용하여 명시 적으로 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c01b95be44557b471813e5b254c4acdf67420c63" translate="yes" xml:space="preserve">
          <source>Binary shaders may be specified using &lt;code&gt;glShaderBinary()&lt;/code&gt; on the return value from &lt;a href=&quot;qopenglshader#shaderId&quot;&gt;QOpenGLShader::shaderId&lt;/a&gt;(). The &lt;a href=&quot;qopenglshader&quot;&gt;QOpenGLShader&lt;/a&gt; instance containing the binary can then be added to the shader program with &lt;a href=&quot;qopenglshaderprogram#addShader&quot;&gt;addShader&lt;/a&gt;() and linked in the usual fashion with &lt;a href=&quot;qopenglshaderprogram#link&quot;&gt;link&lt;/a&gt;().</source>
          <target state="translated">이진 셰이더는 &lt;a href=&quot;qopenglshader#shaderId&quot;&gt;QOpenGLShader :: shaderId&lt;/a&gt; () 의 반환 값에 &lt;code&gt;glShaderBinary()&lt;/code&gt; 를 사용하여 지정할 수 있습니다 . &lt;a href=&quot;qopenglshader&quot;&gt;QOpenGLShader의&lt;/a&gt; 바이너리를 포함하는 인스턴스는 다음과 쉐이더 프로그램에 추가 할 수 있습니다 &lt;a href=&quot;qopenglshaderprogram#addShader&quot;&gt;addShader&lt;/a&gt; ()와 함께 일반적인 방식으로 연결 &lt;a href=&quot;qopenglshaderprogram#link&quot;&gt;링크&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="633e6c413d693121a97e754c0595994029869e95" translate="yes" xml:space="preserve">
          <source>Binary to ASCII - this function returns a base64 encoding of &lt;code&gt;data&lt;/code&gt;.</source>
          <target state="translated">바이너리를 ASCII로-이 함수는 base64 인코딩 &lt;code&gt;data&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
