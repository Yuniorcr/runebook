<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="4d5f407438a18294d657a9dc0e5896463d687c96" translate="yes" xml:space="preserve">
          <source>This variable holds the text for the progress bar</source>
          <target state="translated">이 변수는 진행률 표시 줄의 텍스트를 보유합니다</target>
        </trans-unit>
        <trans-unit id="853fec09dd275439406bb03ba33eb7c2e34eab3f" translate="yes" xml:space="preserve">
          <source>This variable holds the text for the tool box tab</source>
          <target state="translated">이 변수는 도구 상자 탭의 텍스트를 보유합니다</target>
        </trans-unit>
        <trans-unit id="09b2f951fd69bc77ed366b868ddf35a735ebe926" translate="yes" xml:space="preserve">
          <source>This variable holds the text layout direction that should be used when drawing text in the control</source>
          <target state="translated">이 변수는 컨트롤에서 텍스트를 그릴 때 사용해야하는 텍스트 레이아웃 방향을 유지합니다</target>
        </trans-unit>
        <trans-unit id="523f6cee9cd20901def1a473eaa65c42f3539719" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the button</source>
          <target state="translated">이 변수는 버튼의 텍스트를 유지합니다</target>
        </trans-unit>
        <trans-unit id="3a39d7c3e4a8698ea5e8dd72f9ea6d7c223f3c81" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the group box</source>
          <target state="translated">이 변수는 그룹 상자의 텍스트를 유지합니다</target>
        </trans-unit>
        <trans-unit id="48c9622f8e3f540a0503f2b816f5d30894feb40a" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the header</source>
          <target state="translated">이 변수는 헤더의 텍스트를 유지합니다</target>
        </trans-unit>
        <trans-unit id="93cb0bbd77b17035a422880b35900aa6cb415083" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the tab</source>
          <target state="translated">이 변수는 탭의 텍스트를 유지합니다</target>
        </trans-unit>
        <trans-unit id="2d0d923630dc87952f3037029216802a0012c3f3" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the title bar</source>
          <target state="translated">이 변수는 제목 표시 줄의 텍스트를 보유합니다</target>
        </trans-unit>
        <trans-unit id="6fa81a249db5d0412e002627691503005145eeb3" translate="yes" xml:space="preserve">
          <source>This variable holds the text of the tool button</source>
          <target state="translated">이 변수는 툴 버튼의 텍스트를 유지합니다</target>
        </trans-unit>
        <trans-unit id="6c649ea4ae5d9d43a9094f27078d596a9987aca8" translate="yes" xml:space="preserve">
          <source>This variable holds the title of the dock window</source>
          <target state="translated">이 변수는 독 창의 제목을 유지합니다</target>
        </trans-unit>
        <trans-unit id="a64b196e26a8d834883e84810dc2875bba270679" translate="yes" xml:space="preserve">
          <source>This variable holds the title of the link.</source>
          <target state="translated">This variable holds the title of the link.</target>
        </trans-unit>
        <trans-unit id="18929af6c43ce5827a0abcf433e45229c1fc302f" translate="yes" xml:space="preserve">
          <source>This variable holds the top coordinate of the source rectangle.</source>
          <target state="translated">이 변수는 소스 사각형의 상단 좌표를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="c7a010f889ab04cc96c344cf146b0b26db42c5cc" translate="yes" xml:space="preserve">
          <source>This variable holds the type of button symbols to draw for the spin box</source>
          <target state="translated">이 변수는 스핀 상자에 그릴 버튼 심볼 유형을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="a39fcfc08eef6bac68d32d26f4057974876e969c" translate="yes" xml:space="preserve">
          <source>This variable holds the type of checkmark of the menu item</source>
          <target state="translated">이 변수는 메뉴 항목의 확인 표시 유형을 보유합니다</target>
        </trans-unit>
        <trans-unit id="c165ede0b992906eb907fe80aa34c9794be07666" translate="yes" xml:space="preserve">
          <source>This variable holds the type of element</source>
          <target state="translated">이 변수는 요소의 유형을 보유합니다</target>
        </trans-unit>
        <trans-unit id="3d989080824f2b05e36159158eb16d6501fbe943" translate="yes" xml:space="preserve">
          <source>This variable holds the type of menu item</source>
          <target state="translated">이 변수는 메뉴 항목의 유형을 보유합니다</target>
        </trans-unit>
        <trans-unit id="a90ff2f672d82a211381a698ad006bcfe1562245" translate="yes" xml:space="preserve">
          <source>This variable holds the type of the frame to be filtered.</source>
          <target state="translated">이 변수는 필터링 할 프레임 유형을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="eb931adfbd237d912d4785bfd3f8297e2fbe82c6" translate="yes" xml:space="preserve">
          <source>This variable holds the type of the style hint container</source>
          <target state="translated">이 변수는 스타일 힌트 컨테이너의 유형을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="6859978bef55db2e322ed39ed3dcb99fcf466467" translate="yes" xml:space="preserve">
          <source>This variable holds the unique prefix for this invocation in the context of the state from which it is called</source>
          <target state="translated">이 변수는 호출 된 상태의 컨텍스트에서이 호출의 고유 접 두부를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="021aaaeb6d703f5bd3bcefbe121b7d800f55e35d" translate="yes" xml:space="preserve">
          <source>This variable holds the value of the slider</source>
          <target state="translated">이 변수는 슬라이더 값을 유지합니다</target>
        </trans-unit>
        <trans-unit id="51c0d0b9ec3ecf26c9c7296534abcbe0ab472ab2" translate="yes" xml:space="preserve">
          <source>This variable holds the value used for negotiating HTTP 1.1 during the Next Protocol Negotiation.</source>
          <target state="translated">이 변수는 다음 프로토콜 협상 중에 HTTP 1.1을 협상하는 데 사용되는 값을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="306a8202e617d86c5e0b881b3d788ced36873f2e" translate="yes" xml:space="preserve">
          <source>This variable holds the value used for negotiating SPDY 3.0 during the Next Protocol Negotiation.</source>
          <target state="translated">이 변수는 Next Protocol Negotiation 동안 SPDY 3.0을 협상하는 데 사용되는 값을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="e9548035a4866f5e042d41dbeb31933636673a2d" translate="yes" xml:space="preserve">
          <source>This variable holds the variant for style hints that return a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;</source>
          <target state="translated">이 변수는 &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 를 반환하는 스타일 힌트에 대한 변형을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="ad7784c974bad13e626d6a02d0f2b8e38311b9ec" translate="yes" xml:space="preserve">
          <source>This variable holds the version of the extension. This is an integer, increasing with each backward compatible change.</source>
          <target state="translated">이 변수는 확장 버전을 보유합니다. 이것은 이전 버전과 호환되는 각 변경으로 증가하는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="84281a0cbb7bdd97f96722e4eb5c44c228dbcaa1" translate="yes" xml:space="preserve">
          <source>This variable holds the version of the layer. This is an integer, increasing with each backward compatible change.</source>
          <target state="translated">이 변수는 레이어 버전을 유지합니다. 이것은 이전 버전과 호환되는 각 변경으로 증가하는 정수입니다.</target>
        </trans-unit>
        <trans-unit id="39467f142f83a2c64ad11a14fe8d43ddc2b7556d" translate="yes" xml:space="preserve">
          <source>This variable holds the version of the style hint return container</source>
          <target state="translated">이 변수는 스타일 힌트 리턴 컨테이너의 버전을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="8de0b90c4b24f8db4efb1c6617a6c1c996ec8760" translate="yes" xml:space="preserve">
          <source>This variable holds the version of the style option</source>
          <target state="translated">이 변수는 스타일 옵션의 버전을 보유합니다</target>
        </trans-unit>
        <trans-unit id="938b97f3e0d60cf5db5267f638c80728c12d0290" translate="yes" xml:space="preserve">
          <source>This variable holds the vertical scale of the target rectangle.</source>
          <target state="translated">이 변수는 대상 사각형의 수직 스케일을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="f442b7f481995f2d359805a08bc7078a912875e3" translate="yes" xml:space="preserve">
          <source>This variable holds the widget flags for the title bar</source>
          <target state="translated">이 변수는 제목 표시 줄의 위젯 플래그를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="e6e442f7c88ba3f12d1304bb16ea216b2294e7e0" translate="yes" xml:space="preserve">
          <source>This variable holds the width of the source rectangle and is used to calculate the width of the target rectangle.</source>
          <target state="translated">이 변수는 소스 사각형의 너비를 유지하며 대상 사각형의 너비를 계산하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7053bd70f8b39c0e12a0d5a55f9c63e5f81722aa" translate="yes" xml:space="preserve">
          <source>This variable holds the x coordinate of center point in the target rectangle.</source>
          <target state="translated">이 변수는 대상 사각형에서 중심점의 x 좌표를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="aa044eba093d5ffaa7b98d1130ee14a12a5c3be4" translate="yes" xml:space="preserve">
          <source>This variable holds the x coordinate of the element's position.</source>
          <target state="translated">이 변수는 요소 위치의 x 좌표를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="13a1b571b78849dee6e33ee89a4744846408292b" translate="yes" xml:space="preserve">
          <source>This variable holds the y coordinate of the center point in the target rectangle.</source>
          <target state="translated">이 변수는 대상 사각형에서 중심점의 y 좌표를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="576bb0d321b0e9eb967c589350635695d50f1b03" translate="yes" xml:space="preserve">
          <source>This variable holds the y coordinate of the element's position.</source>
          <target state="translated">이 변수는 요소 위치의 y 좌표를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="bdd96348d3bdd6ac8e816139f3ef57295255b750" translate="yes" xml:space="preserve">
          <source>This variable holds whether events should automatically be forwarded to the invoked service</source>
          <target state="translated">이 변수는 이벤트가 호출 된 서비스로 자동 전달되어야하는지 여부를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="37855af19030761ef182bebf2c3d9ca6323bb847" translate="yes" xml:space="preserve">
          <source>This variable holds whether or not the combobox is editable or not</source>
          <target state="translated">이 변수는 콤보 박스의 편집 가능 여부를 유지합니다</target>
        </trans-unit>
        <trans-unit id="0203cec19dba68cfe4d8580aaf781b182886b70e" translate="yes" xml:space="preserve">
          <source>This variable holds whether the combo box has a frame</source>
          <target state="translated">이 변수는 콤보 상자에 프레임이 있는지 여부를 유지합니다</target>
        </trans-unit>
        <trans-unit id="09b210d1795db47eed797b3becfd586764757c9d" translate="yes" xml:space="preserve">
          <source>This variable holds whether the decoration should be highlighted on selected items</source>
          <target state="translated">이 변수는 선택한 항목에서 장식을 강조 표시해야하는지 여부를 유지합니다</target>
        </trans-unit>
        <trans-unit id="2df3f716538337e3bae80f23b7652a5f87d98b35" translate="yes" xml:space="preserve">
          <source>This variable holds whether the dial should wrap or not</source>
          <target state="translated">이 변수는 다이얼을 감쌀 지 여부를 결정합니다</target>
        </trans-unit>
        <trans-unit id="c46ccb9f8830793bb96229eb79f7bf37adf0adc6" translate="yes" xml:space="preserve">
          <source>This variable holds whether the dock window is closable</source>
          <target state="translated">이 변수는 독 창을 닫을 수 있는지 여부를 유지합니다</target>
        </trans-unit>
        <trans-unit id="6242b5ccd2bb77e94cf4593e3d9df2f979ac97e8" translate="yes" xml:space="preserve">
          <source>This variable holds whether the dock window is floatable</source>
          <target state="translated">이 변수는 도크 윈도우가 플로팅 가능한지 여부를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="27542cd5b61de59960101e378fe1093b2b1d06a5" translate="yes" xml:space="preserve">
          <source>This variable holds whether the dock window is movable</source>
          <target state="translated">이 변수는 도크 윈도우가 움직일 수 있는지 여부를 유지합니다</target>
        </trans-unit>
        <trans-unit id="f07297ca0dbe2b9964cba5c1d2872abd14e9a416" translate="yes" xml:space="preserve">
          <source>This variable holds whether the menu as a whole has checkable items or not</source>
          <target state="translated">이 변수는 메뉴 전체에 확인 가능한 항목이 있는지 여부를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="8f28b292cd0d05c594db8e7b46d48244174a1223" translate="yes" xml:space="preserve">
          <source>This variable holds whether the menu item is checked or not</source>
          <target state="translated">이 변수는 메뉴 항목의 체크 여부를 유지합니다</target>
        </trans-unit>
        <trans-unit id="41163aadba9212600ba92399d7a4def334a5672f" translate="yes" xml:space="preserve">
          <source>This variable holds whether the progress bar's appearance is inverted</source>
          <target state="translated">이 변수는 진행률 막대의 모양이 반전되었는지 여부를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="9a63c5daa3a72cb9b83e0659690a10e0c03f9d86" translate="yes" xml:space="preserve">
          <source>This variable holds whether the rubber band is required to be drawn in an opaque style</source>
          <target state="translated">이 변수는 고무 밴드를 불투명 스타일로 그릴 지 여부를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="43a09a4ebbb579278440a8f535b44a2ec473683a" translate="yes" xml:space="preserve">
          <source>This variable holds whether the spin box has a frame</source>
          <target state="translated">이 변수는 스핀 상자에 프레임이 있는지 여부를 유지합니다</target>
        </trans-unit>
        <trans-unit id="0d84067b9f8c387244f116af5c1ae035930c526a" translate="yes" xml:space="preserve">
          <source>This variable holds whether the tabbar is in document mode.</source>
          <target state="translated">이 변수는 탭 막대가 문서 모드인지 여부를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="fdccf11d046e4697a8b8763c633d1d9fe922edff" translate="yes" xml:space="preserve">
          <source>This variable holds whether the text reads from bottom to top when the progress bar is vertical</source>
          <target state="translated">이 변수는 진행률 막대가 수직 일 때 텍스트를 아래에서 위로 읽을 지 여부를 유지합니다</target>
        </trans-unit>
        <trans-unit id="f9cc5790e72cf92f445e13d096f0a6d0db8854cc" translate="yes" xml:space="preserve">
          <source>This variable holds whether the toolbar is movable or not.</source>
          <target state="translated">이 변수는 툴바가 움직일 수 있는지 여부를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="311a507104498512820d2ffb5a5517ded400675b" translate="yes" xml:space="preserve">
          <source>This variable holds whether this is considered a third-party access.</source>
          <target state="translated">이 변수는 이것이 타사 액세스로 간주되는지 여부를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="241d159273bf2ea091d68215fafa718aaba850e3" translate="yes" xml:space="preserve">
          <source>This variable holds which buttons of the spin box that are enabled</source>
          <target state="translated">이 변수는 활성화 된 스핀 상자의 단추를 보유합니다</target>
        </trans-unit>
        <trans-unit id="d797ee891a7862876cc3b855f350b4d6fafbd47e" translate="yes" xml:space="preserve">
          <source>This variable holds which row the tab is currently in</source>
          <target state="translated">이 변수는 탭이 현재있는 행을 보유합니다.</target>
        </trans-unit>
        <trans-unit id="c4dcad9c35d306dc764a93c1a0102b3f6ebb2638" translate="yes" xml:space="preserve">
          <source>This variable holds which section of the header is being painted</source>
          <target state="translated">이 변수는 헤더의 어느 섹션이 그려 지는지를 유지합니다.</target>
        </trans-unit>
        <trans-unit id="f4db6b92e6f5655d316d56da93076e3c808caf23" translate="yes" xml:space="preserve">
          <source>This variable is also used to specify which additional files will be deployed to embedded devices.</source>
          <target state="translated">이 변수는 내장 장치에 배포 할 추가 파일을 지정하는 데에도 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="85efe5a4be4e32ba630f973961872a241e1aad2c" translate="yes" xml:space="preserve">
          <source>This variable is automatically populated from the &lt;a href=&quot;#sources&quot;&gt;SOURCES&lt;/a&gt; variable. The extension of each source file is replaced by .o (Unix) or .obj (Win32). You can add objects to the list.</source>
          <target state="translated">이 변수는 &lt;a href=&quot;#sources&quot;&gt;SOURCES&lt;/a&gt; 변수 에서 자동으로 채워집니다 . 각 소스 파일의 확장자는 .o (Unix) 또는 .obj (Win32)로 대체됩니다. 목록에 객체를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="227d653170ef0531f4f5990bb960401a1de71c77" translate="yes" xml:space="preserve">
          <source>This variable is automatically populated from the &lt;a href=&quot;qmake-variable-reference#sources&quot;&gt;SOURCES&lt;/a&gt; variable. The extension of each source file is replaced by .o (Unix) or .obj (Win32). You can add objects to the list.</source>
          <target state="translated">This variable is automatically populated from the &lt;a href=&quot;qmake-variable-reference#sources&quot;&gt;SOURCES&lt;/a&gt; variable. The extension of each source file is replaced by .o (Unix) or .obj (Win32). You can add objects to the list.</target>
        </trans-unit>
        <trans-unit id="7721a1d91d442572c6642ee2c5098972a3953031" translate="yes" xml:space="preserve">
          <source>This variable is currently not used and is always 0.</source>
          <target state="translated">이 변수는 현재 사용되지 않으며 항상 0입니다.</target>
        </trans-unit>
        <trans-unit id="3013bfb4bfad2d165ce23971f2463a07f675b5f8" translate="yes" xml:space="preserve">
          <source>This variable is currently unused. You can safely ignore it.</source>
          <target state="translated">이 변수는 현재 사용되지 않습니다. 안전하게 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d497a13e414cc77325888d170953cef92e53e387" translate="yes" xml:space="preserve">
          <source>This variable is not empty if the &lt;code&gt;lib&lt;/code&gt; template is specified. The value of this variable is typically handled by qmake or &lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="translated">&lt;code&gt;lib&lt;/code&gt; 템플릿이 지정된 경우이 변수는 비어 있지 않습니다 . 이 변수의 값은 일반적으로 qmake 또는 &lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf에&lt;/a&gt; 의해 처리 되므로 거의 수정하지 않아도 됩니다.</target>
        </trans-unit>
        <trans-unit id="8855d4308043ca6463ad3e5e74745607e81eecf1" translate="yes" xml:space="preserve">
          <source>This variable is not empty if the &lt;code&gt;lib&lt;/code&gt; template is specified. The value of this variable is typically handled by qmake or &lt;a href=&quot;qmake-variable-reference#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="translated">This variable is not empty if the &lt;code&gt;lib&lt;/code&gt; template is specified. The value of this variable is typically handled by qmake or &lt;a href=&quot;qmake-variable-reference#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</target>
        </trans-unit>
        <trans-unit id="b8ccb91183f875fe00d45ced05cc5efd04c5d6a2" translate="yes" xml:space="preserve">
          <source>This variable is now obsolete, Objective-C/C++ files (.m and .mm) can be added to the &lt;a href=&quot;#sources&quot;&gt;SOURCES&lt;/a&gt; variable.</source>
          <target state="translated">이 변수는 더 이상 사용되지 않으며 Objective-C / C ++ 파일 (.m 및 .mm)을 &lt;a href=&quot;#sources&quot;&gt;SOURCES&lt;/a&gt; 변수에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a2af3eed6281fd0859f55c773b9cfdafddddf6c" translate="yes" xml:space="preserve">
          <source>This variable is now obsolete, Objective-C/C++ files (.m and .mm) can be added to the &lt;a href=&quot;qmake-variable-reference#sources&quot;&gt;SOURCES&lt;/a&gt; variable.</source>
          <target state="translated">This variable is now obsolete, Objective-C/C++ files (.m and .mm) can be added to the &lt;a href=&quot;qmake-variable-reference#sources&quot;&gt;SOURCES&lt;/a&gt; variable.</target>
        </trans-unit>
        <trans-unit id="b8f7f8c0bc356fe343365bc2f81aa468f984e9fa" translate="yes" xml:space="preserve">
          <source>This variable is only used by &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html&quot;&gt;Qt Creator&lt;/a&gt;. See &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-qml-modules-with-plugins.html&quot;&gt;Qt Creator: Using QML Modules with Plugins&lt;/a&gt; for details.</source>
          <target state="translated">This variable is only used by &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html&quot;&gt;Qt Creator&lt;/a&gt;. See &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-qml-modules-with-plugins.html&quot;&gt;Qt Creator: Using QML Modules with Plugins&lt;/a&gt; for details.</target>
        </trans-unit>
        <trans-unit id="255d07988560dc9b419f8c7e88140f97930b3f4b" translate="yes" xml:space="preserve">
          <source>This variable is specific to &lt;code&gt;.vcproj&lt;/code&gt; files only; it is ignored otherwise.</source>
          <target state="translated">이 변수는 &lt;code&gt;.vcproj&lt;/code&gt; 파일에만 해당됩니다. 그렇지 않으면 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="c27e74c9a7291a3388d895a3ccfdf72aa32a9c40" translate="yes" xml:space="preserve">
          <source>This variable is used on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; when building universal binaries.</source>
          <target state="translated">이 변수는 범용 바이너리를 빌드 할 때 &lt;a href=&quot;internationalization#macos&quot;&gt;macOS에서&lt;/a&gt; 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="962ed291a4eeb5d9f8b07159a83bb4aa7c41a99d" translate="yes" xml:space="preserve">
          <source>This variable is used on macOS when building universal binaries.</source>
          <target state="translated">This variable is used on macOS when building universal binaries.</target>
        </trans-unit>
        <trans-unit id="fc6bd4037a13a2b65b0627750ccab39c4a5fef8e" translate="yes" xml:space="preserve">
          <source>This variable is used only on Mac OS to set the application icon. Please see &lt;a href=&quot;https://doc.qt.io/qt-5.13/appicon.html&quot;&gt;the application icon documentation&lt;/a&gt; for more information.</source>
          <target state="translated">이 변수는 Mac OS에서만 응용 프로그램 아이콘을 설정하는 데 사용됩니다. 자세한 내용 &lt;a href=&quot;https://doc.qt.io/qt-5.13/appicon.html&quot;&gt;은 응용 프로그램 아이콘 설명서&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3033e9100ffec2a03b8f89f264aec33e0f093d8d" translate="yes" xml:space="preserve">
          <source>This variable is used only on Mac OS to set the application icon. Please see &lt;a href=&quot;https://doc.qt.io/qt-5.15/appicon.html&quot;&gt;the application icon documentation&lt;/a&gt; for more information.</source>
          <target state="translated">This variable is used only on Mac OS to set the application icon. Please see &lt;a href=&quot;https://doc.qt.io/qt-5.15/appicon.html&quot;&gt;the application icon documentation&lt;/a&gt; for more information.</target>
        </trans-unit>
        <trans-unit id="66c0474ab441d70030b475cc10c379a82596e8fa" translate="yes" xml:space="preserve">
          <source>This variable is used only on Windows for the Visual Studio project generation to put the specified files in the Generated Files folder.</source>
          <target state="translated">이 변수는 Visual Studio 프로젝트 생성시 지정된 파일을 생성 된 파일 폴더에 저장하기 위해 Windows에서만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ac84043a3fd016c194aa4a451116e37749777d35" translate="yes" xml:space="preserve">
          <source>This variable is used only when the &lt;code&gt;warn_off&lt;/code&gt;&lt;a href=&quot;#config&quot;&gt;CONFIG&lt;/a&gt; option is set. The value of this variable is typically handled by qmake or &lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="translated">이 변수는 &lt;code&gt;warn_off&lt;/code&gt; &lt;a href=&quot;#config&quot;&gt;CONFIG&lt;/a&gt; 옵션이 설정된 경우에만 사용됩니다 . 이 변수의 값은 일반적으로 qmake 또는 &lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf에&lt;/a&gt; 의해 처리 되므로 거의 수정하지 않아도 됩니다.</target>
        </trans-unit>
        <trans-unit id="31f496684b9f7cfe3a164d06bc20a80162d75ddc" translate="yes" xml:space="preserve">
          <source>This variable is used only when the &lt;code&gt;warn_off&lt;/code&gt;&lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; option is set. The value of this variable is typically handled by qmake or &lt;a href=&quot;qmake-variable-reference#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="translated">This variable is used only when the &lt;code&gt;warn_off&lt;/code&gt; &lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; option is set. The value of this variable is typically handled by qmake or &lt;a href=&quot;qmake-variable-reference#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</target>
        </trans-unit>
        <trans-unit id="563266b877d07f820d4d309f016814dfa11745c6" translate="yes" xml:space="preserve">
          <source>This variable is used only when the &lt;code&gt;warn_on&lt;/code&gt;&lt;a href=&quot;#config&quot;&gt;CONFIG&lt;/a&gt; option is set. The value of this variable is typically handled by qmake or &lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="translated">이 변수는 &lt;code&gt;warn_on&lt;/code&gt; &lt;a href=&quot;#config&quot;&gt;CONFIG&lt;/a&gt; 옵션이 설정된 경우에만 사용됩니다 . 이 변수의 값은 일반적으로 qmake 또는 &lt;a href=&quot;#qmakespec&quot;&gt;qmake.conf에&lt;/a&gt; 의해 처리 되므로 거의 수정하지 않아도 됩니다.</target>
        </trans-unit>
        <trans-unit id="c7927ed6485556d12af7e13be7785f03171e939f" translate="yes" xml:space="preserve">
          <source>This variable is used only when the &lt;code&gt;warn_on&lt;/code&gt;&lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; option is set. The value of this variable is typically handled by qmake or &lt;a href=&quot;qmake-variable-reference#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</source>
          <target state="translated">This variable is used only when the &lt;code&gt;warn_on&lt;/code&gt; &lt;a href=&quot;qmake-variable-reference#config&quot;&gt;CONFIG&lt;/a&gt; option is set. The value of this variable is typically handled by qmake or &lt;a href=&quot;qmake-variable-reference#qmakespec&quot;&gt;qmake.conf&lt;/a&gt; and rarely needs to be modified.</target>
        </trans-unit>
        <trans-unit id="44342f2d0019a6c2c766a16febf9570627b9f40e" translate="yes" xml:space="preserve">
          <source>This variable is used to customize the list of options passed to the &lt;a href=&quot;rcc&quot;&gt;Resource Compiler&lt;/a&gt; in each of the build rules where it is used. For example, the following line ensures that the &lt;code&gt;-threshold&lt;/code&gt; and &lt;code&gt;-compress&lt;/code&gt; options are used with particular values each time that &lt;code&gt;rcc&lt;/code&gt; is invoked:</source>
          <target state="translated">이 변수는 사용되는 각 빌드 규칙에서 &lt;a href=&quot;rcc&quot;&gt;Resource Compiler&lt;/a&gt; 에 전달 된 옵션 목록을 사용자 정의하는 데 사용됩니다. 예를 들어, 다음 줄의 보장하지만이 있음을 &lt;code&gt;-threshold&lt;/code&gt; 및 &lt;code&gt;-compress&lt;/code&gt; 옵션은 특정 값으로 때마다 사용되는 &lt;code&gt;rcc&lt;/code&gt; 호출된다 :</target>
        </trans-unit>
        <trans-unit id="89dedb7e57d1f8cc4829e7c1067dc9f354b3b1da" translate="yes" xml:space="preserve">
          <source>This variable is used to customize the list of options passed to the &lt;a href=&quot;uic&quot;&gt;User Interface Compiler&lt;/a&gt; in each of the build rules where it is used.</source>
          <target state="translated">이 변수는 사용되는 각 빌드 규칙에서 &lt;a href=&quot;uic&quot;&gt;사용자 인터페이스 컴파일러&lt;/a&gt; 에 전달 된 옵션 목록을 사용자 정의하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b8dfe1d57477856cc69e295caeb52d9c4fba5611" translate="yes" xml:space="preserve">
          <source>This variable is used whenever a literal hash character (&lt;code&gt;#&lt;/code&gt;) is needed in a variable declaration, perhaps as part of a file name or in a string passed to some external application.</source>
          <target state="translated">이 변수는 파일 이름의 일부 나 외부 응용 프로그램에 전달 된 문자열로 변수 선언에 리터럴 해시 문자 ( &lt;code&gt;#&lt;/code&gt; )가 필요할 때마다 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="932d575f8090d6ad3839f2eff4dd027052d058cd" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes either the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyClipPath&lt;/a&gt; or the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyClipRegion&lt;/a&gt; flag.</source>
          <target state="translated">이 변수는 &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt; ()가 &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyClipPath&lt;/a&gt; 또는 &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyClipRegion&lt;/a&gt; 플래그 를 포함하는 조합을 리턴 할 때만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="14d6478466e95fea07b2a4ee93ae8d08bdb40ae2" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyBackground&lt;/a&gt; flag.</source>
          <target state="translated">이 변수는 &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt; ()가 &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyBackground&lt;/a&gt; 플래그 를 포함하는 조합을 반환 할 때만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4fb6bec407383ced1245d477287af433732ac9c9" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyBackgroundMode&lt;/a&gt; flag.</source>
          <target state="translated">이 변수는 &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt; ()가 &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyBackgroundMode&lt;/a&gt; 플래그 를 포함하는 조합을 반환 할 때만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="60ba8258474e76cc20f436e9e229e7d9f6f5ece4" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyBrush&lt;/a&gt; flag.</source>
          <target state="translated">이 변수는 &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt; ()가 &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyBrush&lt;/a&gt; 플래그 를 포함하는 조합을 반환 할 때만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="135d575c029f3962c57f9922e65a645ba83caad5" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyBrushOrigin&lt;/a&gt; flag.</source>
          <target state="translated">이 변수는 &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt; ()가 &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyBrushOrigin&lt;/a&gt; 플래그 를 포함하는 조합을 반환 할 때만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f88cf745c7ab3c89fd7bd46f041ce63d2807ee08" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyClipEnabled&lt;/a&gt; flag.</source>
          <target state="translated">이 변수는 &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt; ()가 &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyClipEnabled&lt;/a&gt; 플래그 를 포함하는 조합을 반환 할 때만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="88555217b5ca76efd15dd668e02df83fcfd6ce86" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyClipPath&lt;/a&gt; flag.</source>
          <target state="translated">이 변수는 &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt; ()가 &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyClipPath&lt;/a&gt; 플래그 를 포함하는 조합을 반환 할 때만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7739a8cc5642b90827ba79cec478909f46fa907d" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyClipRegion&lt;/a&gt; flag.</source>
          <target state="translated">이 변수는 &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt; ()가 &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyClipRegion&lt;/a&gt; 플래그 를 포함하는 조합을 반환 할 때만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9dc92a7f277470c4dec64fc4455b504c4edd5dc5" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyCompositionMode&lt;/a&gt; flag.</source>
          <target state="translated">이 변수는 &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt; ()가 &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyCompositionMode&lt;/a&gt; 플래그 를 포함하는 조합을 반환 할 때만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="11be25e513b50d06a4494068d9f1aa229d9ee955" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyFont&lt;/a&gt; flag.</source>
          <target state="translated">이 변수는 &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt; ()가 &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyFont&lt;/a&gt; 플래그 를 포함하는 조합을 반환 할 때만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8a56b0d61162e7d7c70156d3492f6e9c71d6eea2" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyHints&lt;/a&gt; flag.</source>
          <target state="translated">이 변수는 &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt; ()가 &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyHints&lt;/a&gt; 플래그 를 포함하는 조합을 반환 할 때만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="73c98d911c706f336c1e96fefeb8ece51d8adc33" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyPen&lt;/a&gt; flag.</source>
          <target state="translated">이 변수는 &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt; ()가 &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyPen&lt;/a&gt; 플래그 를 포함하는 조합을 반환 할 때만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="69e85f2a6d67fe86e3a62bb4b4cf80d7613012e2" translate="yes" xml:space="preserve">
          <source>This variable should only be used when the &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt;() returns a combination which includes the &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine::DirtyTransform&lt;/a&gt; flag.</source>
          <target state="translated">이 변수는 &lt;a href=&quot;qpaintenginestate#state&quot;&gt;state&lt;/a&gt; ()가 &lt;a href=&quot;qpaintengine#DirtyFlag-enum&quot;&gt;QPaintEngine :: DirtyTransform&lt;/a&gt; 플래그 를 포함하는 조합을 반환 할 때만 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4ebe50a83e7ef91b133003c8535a0088ebeb780d" translate="yes" xml:space="preserve">
          <source>This variable specifies the location of OpenGL header files to be added to &lt;a href=&quot;#includepath&quot;&gt;INCLUDEPATH&lt;/a&gt; when building a target with OpenGL ES 2 support.</source>
          <target state="translated">이 변수 는 OpenGL ES 2를 지원하는 대상을 빌드 할 때 &lt;a href=&quot;#includepath&quot;&gt;INCLUDEPATH에&lt;/a&gt; 추가 할 OpenGL 헤더 파일의 위치를 ​​지정합니다 .</target>
        </trans-unit>
        <trans-unit id="532b6f38a6875dbd8fe64a2ec88cac9802164e0f" translate="yes" xml:space="preserve">
          <source>This variable specifies the location of OpenGL header files to be added to &lt;a href=&quot;qmake-variable-reference#includepath&quot;&gt;INCLUDEPATH&lt;/a&gt; when building a target with OpenGL ES 2 support.</source>
          <target state="translated">This variable specifies the location of OpenGL header files to be added to &lt;a href=&quot;qmake-variable-reference#includepath&quot;&gt;INCLUDEPATH&lt;/a&gt; when building a target with OpenGL ES 2 support.</target>
        </trans-unit>
        <trans-unit id="3b60efa0a9902e9c0dc044059f73cc9b15d56b73" translate="yes" xml:space="preserve">
          <source>This variable stores the meta-object for the class.</source>
          <target state="translated">이 변수는 클래스의 메타 객체를 저장합니다.</target>
        </trans-unit>
        <trans-unit id="8713b1aa914dface0a8ab0a1dc35e3eba54cd652" translate="yes" xml:space="preserve">
          <source>This variable was introduced in Qt 5.13.2.</source>
          <target state="translated">This variable was introduced in Qt 5.13.2.</target>
        </trans-unit>
        <trans-unit id="ef2dc52470f2f8ea64f5447cdfb37d7b0460a064" translate="yes" xml:space="preserve">
          <source>This variable, when used with the &lt;code&gt;subdirs&lt;/code&gt;&lt;a href=&quot;#template&quot;&gt;template&lt;/a&gt; specifies the names of all subdirectories or project files that contain parts of the project that need to be built. Each subdirectory specified using this variable must contain its own project file.</source>
          <target state="translated">&lt;code&gt;subdirs&lt;/code&gt; &lt;a href=&quot;#template&quot;&gt;템플리트&lt;/a&gt; 와 함께 사용될 때이 변수는 빌드해야하는 프로젝트의 일부를 포함하는 모든 서브 디렉토리 또는 프로젝트 파일의 이름을 지정합니다. 이 변수를 사용하여 지정된 각 서브 디렉토리에는 자체 프로젝트 파일이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="9edbd39650d38b498d3ad37425495863cffba32e" translate="yes" xml:space="preserve">
          <source>This variable, when used with the &lt;code&gt;subdirs&lt;/code&gt;&lt;a href=&quot;qmake-variable-reference#template&quot;&gt;template&lt;/a&gt; specifies the names of all subdirectories or project files that contain parts of the project that need to be built. Each subdirectory specified using this variable must contain its own project file.</source>
          <target state="translated">This variable, when used with the &lt;code&gt;subdirs&lt;/code&gt; &lt;a href=&quot;qmake-variable-reference#template&quot;&gt;template&lt;/a&gt; specifies the names of all subdirectories or project files that contain parts of the project that need to be built. Each subdirectory specified using this variable must contain its own project file.</target>
        </trans-unit>
        <trans-unit id="d5d2f1f531f89c2843f8178fd8fdd4305f084788" translate="yes" xml:space="preserve">
          <source>This vector decribes the displacement from the camera (&lt;a href=&quot;qml-qt3d-render-camera#position-prop&quot;&gt;position&lt;/a&gt;) to its target (&lt;a href=&quot;qml-qt3d-render-camera#viewCenter-prop&quot;&gt;viewCenter&lt;/a&gt;).</source>
          <target state="translated">This vector decribes the displacement from the camera (&lt;a href=&quot;qml-qt3d-render-camera#position-prop&quot;&gt;position&lt;/a&gt;) to its target (&lt;a href=&quot;qml-qt3d-render-camera#viewCenter-prop&quot;&gt;viewCenter&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="2c600aedb217179c2d2f4232deaaaa4ea6c62b97" translate="yes" xml:space="preserve">
          <source>This vector decribes the displacement from the camera (&lt;a href=&quot;qt3drender-qcamera#position-prop&quot;&gt;position&lt;/a&gt;) to its target (&lt;a href=&quot;qt3drender-qcamera#viewCenter-prop&quot;&gt;viewCenter&lt;/a&gt;).</source>
          <target state="translated">This vector decribes the displacement from the camera (&lt;a href=&quot;qt3drender-qcamera#position-prop&quot;&gt;position&lt;/a&gt;) to its target (&lt;a href=&quot;qt3drender-qcamera#viewCenter-prop&quot;&gt;viewCenter&lt;/a&gt;).</target>
        </trans-unit>
        <trans-unit id="6e319b42d6c8d30be8776ff2dd387be0ddc37a40" translate="yes" xml:space="preserve">
          <source>This version adds the given</source>
          <target state="translated">이 버전은 주어진</target>
        </trans-unit>
        <trans-unit id="522e89e1f28dbb79282d329bbfaaaba3463d0ffa" translate="yes" xml:space="preserve">
          <source>This version adds the layout</source>
          <target state="translated">이 버전은 레이아웃을 추가</target>
        </trans-unit>
        <trans-unit id="8f2cb21cca9cc80bf4f7b8371033fa6b0fc1ebbd" translate="yes" xml:space="preserve">
          <source>This version of the function disregards &lt;a href=&quot;qlcdnumber#mode-prop&quot;&gt;mode&lt;/a&gt;() and &lt;a href=&quot;qlcdnumber#smallDecimalPoint-prop&quot;&gt;smallDecimalPoint&lt;/a&gt;().</source>
          <target state="translated">이 버전의 함수는 &lt;a href=&quot;qlcdnumber#mode-prop&quot;&gt;모드&lt;/a&gt; () 및 &lt;a href=&quot;qlcdnumber#smallDecimalPoint-prop&quot;&gt;smallDecimalPoint&lt;/a&gt; ()를 무시 합니다 .</target>
        </trans-unit>
        <trans-unit id="a356554250f4bcbd115d4d97d897c5a442ade6ae" translate="yes" xml:space="preserve">
          <source>This version only scrolls</source>
          <target state="translated">이 버전은 스크롤 만</target>
        </trans-unit>
        <trans-unit id="b08d9c1cec489b0443ca77438b984f68e850519a" translate="yes" xml:space="preserve">
          <source>This version produces the same result set but in the expected order:</source>
          <target state="translated">이 버전은 동일한 결과 세트를 예상 순서대로 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c4b94ef2f488af426d3211c139a4f9de4987abe1" translate="yes" xml:space="preserve">
          <source>This version repaints a rectangle</source>
          <target state="translated">이 버전은 사각형을 다시 칠합니다.</target>
        </trans-unit>
        <trans-unit id="382fe17b3497192ab88821152a1323744cd284d3" translate="yes" xml:space="preserve">
          <source>This version repaints a rectangle (</source>
          <target state="translated">이 버전은 직사각형 (</target>
        </trans-unit>
        <trans-unit id="c8c25dae0e4946a1844d1484dd2f17e737c17b40" translate="yes" xml:space="preserve">
          <source>This version repaints a region</source>
          <target state="translated">이 버전은 지역을 다시 칠합니다.</target>
        </trans-unit>
        <trans-unit id="9b7389b58125c38c756978b2bb14e1f2afacd60a" translate="yes" xml:space="preserve">
          <source>This version updates a rectangle</source>
          <target state="translated">이 버전은 사각형을 업데이트</target>
        </trans-unit>
        <trans-unit id="3a4b7917e3389f9d585adbe4129dbe98ee7ac411" translate="yes" xml:space="preserve">
          <source>This version updates a rectangle (</source>
          <target state="translated">이 버전은 직사각형을 업데이트합니다 (</target>
        </trans-unit>
        <trans-unit id="f9b476c0478f854701abdec5fd877fd5154302b7" translate="yes" xml:space="preserve">
          <source>This version uses the &lt;a href=&quot;http://www.w3.org/TR/xpath-functions/#func-not&quot;&gt;not&lt;/a&gt; and &lt;a href=&quot;http://www.w3.org/TR/xpath-functions/#func-normalize-space&quot;&gt;normalize-space()&lt;/a&gt; functions. &lt;code&gt;normalize-space(method))&lt;/code&gt; returns the contents of the method element as a string, but with all the whitespace normalized, i.e., the string value of each &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; element will have its whitespace normalized, and then all the normalized step values will be concatenated. If that string is empty, then &lt;code&gt;not()&lt;/code&gt; returns &lt;code&gt;true&lt;/code&gt; and the predicate is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 버전은 &lt;a href=&quot;http://www.w3.org/TR/xpath-functions/#func-not&quot;&gt;not&lt;/a&gt; 및 &lt;a href=&quot;http://www.w3.org/TR/xpath-functions/#func-normalize-space&quot;&gt;normalize-space ()&lt;/a&gt; 함수를 사용합니다. &lt;code&gt;normalize-space(method))&lt;/code&gt; 는 메서드 요소의 내용을 문자열로 반환하지만 모든 공백이 정규화 된 상태로, 즉 각 &lt;code&gt;&amp;lt;step&amp;gt;&lt;/code&gt; 요소 의 문자열 값에 공백이 정규화 된 다음 모든 표준화 된 단계 값이 연결되어 있습니다. 해당 문자열이 비어 있으면 &lt;code&gt;not()&lt;/code&gt; 은 &lt;code&gt;true&lt;/code&gt; 를 반환 하고 조건자는 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f8a08cd0b5f807e5dd5c09be7683f1ccf8fcd333" translate="yes" xml:space="preserve">
          <source>This version will reach its destination position in</source>
          <target state="translated">이 버전은에서 목적지 위치에 도달합니다</target>
        </trans-unit>
        <trans-unit id="85c1f0bf7c3fad18fae966ca1b2f86a16097541b" translate="yes" xml:space="preserve">
          <source>This view does not display horizontal or vertical headers; to display a list of items with a horizontal header, use &lt;a href=&quot;qtreeview&quot;&gt;QTreeView&lt;/a&gt; instead.</source>
          <target state="translated">이보기에는 가로 또는 세로 머리글이 표시되지 않습니다. 가로 머리글이있는 항목 목록을 표시하려면 &lt;a href=&quot;qtreeview&quot;&gt;QTreeView를&lt;/a&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6a9c1973b42b493b382fd9fa06b3493b70c95842" translate="yes" xml:space="preserve">
          <source>This virtual event handler receives all events for the managed widget. &lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt; uses this event handler to listen for layout related events such as geometry changes, layout changes or layout direction changes.</source>
          <target state="translated">이 가상 이벤트 핸들러는 관리 위젯에 대한 모든 이벤트를 수신합니다. &lt;a href=&quot;graphicsview#qgraphicslayout&quot;&gt;QGraphicsLayout&lt;/a&gt; 은이 이벤트 핸들러를 사용하여 지오메트리 변경, 레이아웃 변경 또는 레이아웃 방향 변경과 같은 레이아웃 관련 이벤트를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="6900842a2e401d91860300b5f752623331ad878f" translate="yes" xml:space="preserve">
          <source>This virtual function discards any cached size hint information. You should always call this function if you change the return value of the &lt;a href=&quot;qgraphicslayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;() function. Subclasses must always call the base implementation when reimplementing this function.</source>
          <target state="translated">이 가상 함수는 캐시 된 크기 힌트 정보를 삭제합니다. &lt;a href=&quot;qgraphicslayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt; () 함수 의 반환 값을 변경하면 항상이 함수를 호출해야 합니다. 서브 클래스는이 함수를 다시 구현할 때 항상 기본 구현을 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="f0f339a3db83372a623a17ae29bb3f470294d686" translate="yes" xml:space="preserve">
          <source>This virtual function is called after each invocation of &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;().</source>
          <target state="translated">이 가상 함수는 &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt; ()을 호출 할 때마다 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="63509dee1110a50d0db31d7957dbaf660dd68c6f" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; when the direction of the animation is changed. The</source>
          <target state="translated">이 가상 함수는 애니메이션 방향이 변경 될 때 &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation에&lt;/a&gt; 의해 호출됩니다 . 그만큼</target>
        </trans-unit>
        <trans-unit id="4439eba594e21fbd00a4cf3615327d51f7681d7c" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation&lt;/a&gt; when the state of the animation is changed from</source>
          <target state="translated">이 가상 함수는 애니메이션 상태가에서 변경 될 때 &lt;a href=&quot;qabstractanimation&quot;&gt;QAbstractAnimation에&lt;/a&gt; 의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="bc3d68df9aa990e7d1403087669d0a619dbe5cce" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qaxbase#control-prop&quot;&gt;setControl&lt;/a&gt;() and creates the requested COM object.</source>
          <target state="translated">이 가상 함수는 &lt;a href=&quot;qaxbase#control-prop&quot;&gt;setControl&lt;/a&gt; ()에 의해 호출되며 요청 된 COM 객체를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7f20034c3837f8ab16ee47ecceaa7f8b0b6b3ae5" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt; to notify the effect that the source has changed. If the effect applies any cache, then this cache must be purged in order to reflect the new appearance of the source.</source>
          <target state="translated">이 가상 함수는 &lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt; 에 의해 호출되어 소스가 변경되었음을 효과에 알립니다. 효과가 캐시를 적용하면 소스의 새로운 모양을 반영하기 위해이 캐시를 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="71296ee4c5f141586335f2af33fd83737e7612b2" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; to notify custom items that some part of the item's state changes. By reimplementing this function, you can react to a change, and in some cases (depending on</source>
          <target state="translated">이 가상 함수는 &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; 에 의해 호출되어 사용자 정의 항목에 항목 상태의 일부가 변경되었음을 알립니다. 이 기능을 다시 구현하면 변경에 반응 할 수 있으며 경우에 따라</target>
        </trans-unit>
        <trans-unit id="5b61b2ffc0de0ba3b6dbb62ca23b895feb6edfae" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; to draw the window frame for windows using</source>
          <target state="translated">이 가상 함수는 &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; 에 의해 호출되어</target>
        </trans-unit>
        <trans-unit id="956c762b6b2ac6b65af94931cf4fd7ae51def03d" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qlocalserver&quot;&gt;QLocalServer&lt;/a&gt; when a new connection is available.</source>
          <target state="translated">이 가상 기능은 새로운 연결이 가능할 때 &lt;a href=&quot;qlocalserver&quot;&gt;QLocalServer에&lt;/a&gt; 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="ab1fff1cbe154a34b90fef992a2c123160547ded" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer&lt;/a&gt; when a new connection is available. The</source>
          <target state="translated">이 가상 기능은 새로운 연결이 가능할 때 &lt;a href=&quot;qtcpserver&quot;&gt;QTcpServer에&lt;/a&gt; 의해 호출됩니다 . 그만큼</target>
        </trans-unit>
        <trans-unit id="0fe0e8c86e57c97b576741cc5f9c5836240e289d" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qvariantanimation&quot;&gt;QVariantAnimation&lt;/a&gt; whenever the current value changes.</source>
          <target state="translated">이 가상 함수는 현재 값이 변경 될 때마다 &lt;a href=&quot;qvariantanimation&quot;&gt;QVariantAnimation에&lt;/a&gt; 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="6c158a5454a58d2b7067c7d0ff2397603847f9b5" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; to clean up page</source>
          <target state="translated">이 가상 함수는 &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; 에 의해 호출되어 페이지를 정리합니다.</target>
        </trans-unit>
        <trans-unit id="44418bca78ab4293e572085c6e00f17e3ef86fca" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; to determine whether the &lt;b&gt;Next&lt;/b&gt; or &lt;b&gt;Finish&lt;/b&gt; button should be enabled or disabled.</source>
          <target state="translated">이 가상 기능은 &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; 에 의해 호출되어 &lt;b&gt;다음&lt;/b&gt; 또는 &lt;b&gt;완료&lt;/b&gt; 단추의 사용 가능 여부를 결정합니다 .</target>
        </trans-unit>
        <trans-unit id="1db68dacf3385a4a6dfb3201e5cb7f6417620caa" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; to find out which page to show when the user clicks the &lt;b&gt;Next&lt;/b&gt; button.</source>
          <target state="translated">이 가상 기능은 &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; 에 의해 호출되어 사용자가 &lt;b&gt;다음&lt;/b&gt; 버튼을 클릭 할 때 표시 할 페이지를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="ee9d6a8dd18f17ed3dbe3b9013475a636becbed7" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; to prepare page</source>
          <target state="translated">이 가상 함수는 &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; 에 의해 호출되어 페이지를 준비합니다.</target>
        </trans-unit>
        <trans-unit id="c774840ff114df26e52dc2f1490ca8c3dc585c0b" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; when the user clicks &lt;b&gt;Next&lt;/b&gt; or &lt;b&gt;Finish&lt;/b&gt; to perform some last-minute validation. If it returns &lt;code&gt;true&lt;/code&gt;, the next page is shown (or the wizard finishes); otherwise, the current page stays up.</source>
          <target state="translated">이 가상 기능은 사용자가 &lt;b&gt;다음&lt;/b&gt; 또는 &lt;b&gt;완료&lt;/b&gt; 를 클릭 하여 마지막 순간 유효성 검증을 수행 할 때 &lt;a href=&quot;qwizard&quot;&gt;QWizard에&lt;/a&gt; 의해 호출됩니다 . &lt;code&gt;true&lt;/code&gt; 를 반환 하면 다음 페이지가 표시되거나 마법사가 완료됩니다. 그렇지 않으면 현재 페이지가 유지됩니다.&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="41fc458329d08e7cba071ef34fa2fe045432db33" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard#cleanupPage&quot;&gt;QWizard::cleanupPage&lt;/a&gt;() when the user leaves the page by clicking &lt;b&gt;Back&lt;/b&gt; (unless the &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;QWizard::IndependentPages&lt;/a&gt; option is set).</source>
          <target state="translated">이 가상 함수는 사용자가 &lt;b&gt;뒤로&lt;/b&gt; 를 클릭하여 페이지를 떠날 때 &lt;a href=&quot;qwizard#cleanupPage&quot;&gt;QWizard :: cleanupPage&lt;/a&gt; ()에 의해 호출됩니다 ( &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;QWizard :: IndependentPages&lt;/a&gt; 옵션이 설정 되지 않은 경우 ).&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="b8f241643c89b7f827872e67662da6eaff928f5e" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard#initializePage&quot;&gt;QWizard::initializePage&lt;/a&gt;() to prepare the page just before it is shown either as a result of &lt;a href=&quot;qwizard#restart&quot;&gt;QWizard::restart&lt;/a&gt;() being called, or as a result of the user clicking &lt;b&gt;Next&lt;/b&gt;. (However, if the &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;QWizard::IndependentPages&lt;/a&gt; option is set, this function is only called the first time the page is shown.)</source>
          <target state="translated">이 가상 함수는 &lt;a href=&quot;qwizard#initializePage&quot;&gt;QWizard :: initializePage&lt;/a&gt; ()에 의해 호출되어 QWizard :: &lt;a href=&quot;qwizard#restart&quot;&gt;restart&lt;/a&gt; ()가 호출 된 결과 또는 사용자가 &lt;b&gt;다음을&lt;/b&gt; 클릭 한 결과로 표시되기 직전에 페이지를 준비합니다 . 그러나 &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;QWizard :: IndependentPages&lt;/a&gt; 옵션이 설정된 경우이 기능은 페이지가 처음 표시 될 때만 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="9c2c9d5ee24df339edb6858ee82108b82ded03a4" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard#nextId&quot;&gt;QWizard::nextId&lt;/a&gt;() to find out which page to show when the user clicks the &lt;b&gt;Next&lt;/b&gt; button.</source>
          <target state="translated">이 가상 함수는 &lt;a href=&quot;qwizard#nextId&quot;&gt;QWizard :: nextId&lt;/a&gt; ()에 의해 호출되어 사용자가 &lt;b&gt;다음&lt;/b&gt; 단추를 클릭 할 때 표시 할 페이지를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="c239fea67f69219fdac0e910808a6a4fffa5a20a" translate="yes" xml:space="preserve">
          <source>This virtual function is called by &lt;a href=&quot;qwizard#validateCurrentPage&quot;&gt;QWizard::validateCurrentPage&lt;/a&gt;() when the user clicks &lt;b&gt;Next&lt;/b&gt; or &lt;b&gt;Finish&lt;/b&gt; to perform some last-minute validation. If it returns &lt;code&gt;true&lt;/code&gt;, the next page is shown (or the wizard finishes); otherwise, the current page stays up.</source>
          <target state="translated">이 가상 함수는 사용자가 &lt;b&gt;다음&lt;/b&gt; 또는 &lt;b&gt;완료&lt;/b&gt; 를 클릭 하여 막판 유효성 검사를 수행 할 때 &lt;a href=&quot;qwizard#validateCurrentPage&quot;&gt;QWizard :: validateCurrentPage&lt;/a&gt; ()에 의해 호출됩니다 . &lt;code&gt;true&lt;/code&gt; 를 반환 하면 다음 페이지가 표시되거나 마법사가 완료됩니다. 그렇지 않으면 현재 페이지가 유지됩니다.&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="56bac9c33269a3bd4442827b04f65b772ebb58c9" translate="yes" xml:space="preserve">
          <source>This virtual function is called by the &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; if the</source>
          <target state="translated">이 가상 함수는 &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox에&lt;/a&gt; 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="8b478efddfaa34ede968666a2e20ad0a597f5a87" translate="yes" xml:space="preserve">
          <source>This virtual function is called by the &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; to determine whether</source>
          <target state="translated">이 가상 함수는 &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; 에 의해 호출되어</target>
        </trans-unit>
        <trans-unit id="841a589463889e4c5197615bc177139d102a2e98" translate="yes" xml:space="preserve">
          <source>This virtual function is called every time the animation's current value changes. The</source>
          <target state="translated">이 가상 함수는 애니메이션의 현재 값이 변경 될 때마다 호출됩니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="0578249a2d20a0f60522ed3b978da38fbc15ae26" translate="yes" xml:space="preserve">
          <source>This virtual function is called once before the first call to &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt;() or &lt;a href=&quot;qopenglwidget#resizeGL&quot;&gt;resizeGL&lt;/a&gt;(). Reimplement it in a subclass.</source>
          <target state="translated">이 가상 함수는 &lt;a href=&quot;qopenglwidget#paintGL&quot;&gt;paintGL&lt;/a&gt; () 또는 &lt;a href=&quot;qopenglwidget#resizeGL&quot;&gt;resizeGL&lt;/a&gt; () 을 처음 호출하기 전에 한 번 호출됩니다 . 서브 클래스에서 다시 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="2b8c54e05a4a1cb4a76484fde26bd2c67588f11c" translate="yes" xml:space="preserve">
          <source>This virtual function is called once before the first call to &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt;() or &lt;a href=&quot;qopenglwindow#resizeGL&quot;&gt;resizeGL&lt;/a&gt;(). Reimplement it in a subclass.</source>
          <target state="translated">이 가상 함수는 &lt;a href=&quot;qopenglwindow#paintGL&quot;&gt;paintGL&lt;/a&gt; () 또는 &lt;a href=&quot;qopenglwindow#resizeGL&quot;&gt;resizeGL&lt;/a&gt; () 을 처음 호출하기 전에 한 번 호출됩니다 . 서브 클래스에서 다시 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="a927f34505fa33b3cd0fad16c550a3cfa3d4069f" translate="yes" xml:space="preserve">
          <source>This virtual function is called once during the lifetime of the window, at some point after making it visible for the first time.</source>
          <target state="translated">이 가상 함수는 창 수명 동안 한 번 호출되며 처음으로 표시 한 후 어느 시점에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4ec5aae87d4f32d58510c151a32da5ba7db8db4a" translate="yes" xml:space="preserve">
          <source>This virtual function is called right before graphics initialization, that ends up in calling &lt;a href=&quot;qvulkanwindowrenderer#initResources&quot;&gt;initResources&lt;/a&gt;(), is about to begin.</source>
          <target state="translated">이 가상 함수는 그래픽 초기화 직전에 호출되어 &lt;a href=&quot;qvulkanwindowrenderer#initResources&quot;&gt;initResources&lt;/a&gt; () 호출로 끝나기 시작합니다.</target>
        </trans-unit>
        <trans-unit id="9d67cf8415772650cfe6ac48b554aa1d735d9885" translate="yes" xml:space="preserve">
          <source>This virtual function is called to pop up the dialog. It must be reimplemented in subclasses.</source>
          <target state="translated">이 가상 함수는 대화 상자를 팝업하기 위해 호출됩니다. 서브 클래스에서 다시 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="98bea5b49f9b6c0cc606ac3e564e7811d99443ea" translate="yes" xml:space="preserve">
          <source>This virtual function is called twice for all items by the &lt;a href=&quot;qgraphicsscene#advance&quot;&gt;QGraphicsScene::advance&lt;/a&gt;() slot. In the first phase, all items are called with</source>
          <target state="translated">이 가상 기능은 &lt;a href=&quot;qgraphicsscene#advance&quot;&gt;QGraphicsScene :: advance&lt;/a&gt; () 슬롯에 의해 모든 항목에 대해 두 번 호출됩니다 . 첫 번째 단계에서 모든 항목은</target>
        </trans-unit>
        <trans-unit id="a9fd56ec85aa7b65d3d045620f8b6724791b34f7" translate="yes" xml:space="preserve">
          <source>This virtual function is called when it is time to create the renderer's graphics resources.</source>
          <target state="translated">이 가상 함수는 렌더러의 그래픽 리소스를 생성 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="941828d233fc2c24770ed23be717d838014315cf" translate="yes" xml:space="preserve">
          <source>This virtual function is called when something has been connected to</source>
          <target state="translated">이 가상 함수는 무언가가 연결되었을 때 호출됩니다</target>
        </trans-unit>
        <trans-unit id="ce06f6e822a1d76a4c93103531bc17e5ef62ff92" translate="yes" xml:space="preserve">
          <source>This virtual function is called when something has been disconnected from</source>
          <target state="translated">이 가상 함수는 무언가 연결이 끊어졌을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="3688ee300d710ceca6a9485b0fd09ece22f601fb" translate="yes" xml:space="preserve">
          <source>This virtual function is called when swapchain, framebuffer or renderpass related initialization can be performed. Swapchain and related resources are reset and then recreated in response to window resize events, and therefore a pair of calls to &lt;a href=&quot;qvulkanwindowrenderer#initResources&quot;&gt;initResources&lt;/a&gt;() and &lt;a href=&quot;qvulkanwindowrenderer#releaseResources&quot;&gt;releaseResources&lt;/a&gt;() can have multiple calls to initSwapChainResources() and &lt;a href=&quot;qvulkanwindowrenderer#releaseSwapChainResources&quot;&gt;releaseSwapChainResources&lt;/a&gt;() calls in-between.</source>
          <target state="translated">이 가상 함수는 스왑 체인, 프레임 버퍼 또는 렌더 패스 관련 초기화를 수행 할 수있을 때 호출됩니다. Swapchain 및 관련 자원을 재설정하고 창 크기 조정 이벤트에 대한 응답으로 다시, 따라서 호출 한 쌍이다 &lt;a href=&quot;qvulkanwindowrenderer#initResources&quot;&gt;initResources&lt;/a&gt; ()와 &lt;a href=&quot;qvulkanwindowrenderer#releaseResources&quot;&gt;releaseResources&lt;/a&gt; initSwapChainResources ()를 여러 번 호출 할 수 있습니다 () &lt;a href=&quot;qvulkanwindowrenderer#releaseSwapChainResources&quot;&gt;releaseSwapChainResources를&lt;/a&gt; ()에-사이에 호출합니다.</target>
        </trans-unit>
        <trans-unit id="0ff430fb97514a894ac72a5e067d3f2ef150ab9e" translate="yes" xml:space="preserve">
          <source>This virtual function is called when swapchain, framebuffer or renderpass related resources must be released.</source>
          <target state="translated">이 가상 함수는 스왑 체인, 프레임 버퍼 또는 렌더 패스 관련 리소스를 해제해야 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d3ef7e464f42e33491a6877229f301717508e9ee" translate="yes" xml:space="preserve">
          <source>This virtual function is called when the logical device (VkDevice) is lost, meaning some operation failed with &lt;code&gt;VK_ERROR_DEVICE_LOST&lt;/code&gt;.</source>
          <target state="translated">이 가상 함수는 논리 장치 (VkDevice)가 유실 될 때 호출되며, 이는 일부 조작이 &lt;code&gt;VK_ERROR_DEVICE_LOST&lt;/code&gt; 로 실패했음을 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="cde034e660af543b35b086b3f0ce9a72c6757fda" translate="yes" xml:space="preserve">
          <source>This virtual function is called when the physical device is lost, meaning the creation of the logical device fails with &lt;code&gt;VK_ERROR_DEVICE_LOST&lt;/code&gt;.</source>
          <target state="translated">이 가상 함수는 물리적 장치가 손실 될 때 호출됩니다. 즉, 논리 장치 작성이 &lt;code&gt;VK_ERROR_DEVICE_LOST&lt;/code&gt; 로 실패합니다 .</target>
        </trans-unit>
        <trans-unit id="dc04d37894f605793081663229da204ee9aaf47c" translate="yes" xml:space="preserve">
          <source>This virtual function is called when the renderer's graphics resources must be released.</source>
          <target state="translated">이 가상 함수는 렌더러의 그래픽 리소스를 해제해야 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="84b0ef869ea87904f66359886fc9e9d7d4f1463e" translate="yes" xml:space="preserve">
          <source>This virtual function is called whenever the query changes. The default implementation does nothing.</source>
          <target state="translated">이 가상 함수는 쿼리가 변경 될 때마다 호출됩니다. 기본 구현은 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8b68db5c44313cb9b3659e59bac1c4632083edb2" translate="yes" xml:space="preserve">
          <source>This virtual function is called whenever the widget has been resized. Reimplement it in a subclass. The new size is passed in</source>
          <target state="translated">이 가상 함수는 위젯의 크기가 조정될 때마다 호출됩니다. 서브 클래스에서 다시 구현하십시오. 새로운 크기가 전달됩니다</target>
        </trans-unit>
        <trans-unit id="db0f755e6b7ae620fc79e7b65eec6ee877d4016c" translate="yes" xml:space="preserve">
          <source>This virtual function is called whenever the widget needs to be painted. Reimplement it in a subclass.</source>
          <target state="translated">이 가상 함수는 위젯을 칠해야 할 때마다 호출됩니다. 서브 클래스에서 다시 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="ae8aab40d878e290da18464e535e827c0549203e" translate="yes" xml:space="preserve">
          <source>This virtual function is called whenever the window contents needs to be painted. Reimplement it in a subclass.</source>
          <target state="translated">이 가상 함수는 창 내용을 칠해야 할 때마다 호출됩니다. 서브 클래스에서 다시 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="a4668ccebd420a018db1ede54c80cace4c92bc1a" translate="yes" xml:space="preserve">
          <source>This virtual function is used by the date time edit whenever it needs to display</source>
          <target state="translated">이 가상 기능은 표시해야 할 때마다 날짜 시간 편집에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fcf2b75f6351d98995e4ed78bc37b13d445fadbb" translate="yes" xml:space="preserve">
          <source>This virtual function is used by the datetime edit whenever it needs to interpret text entered by the user as a value.</source>
          <target state="translated">이 가상 함수는 사용자가 입력 한 텍스트를 값으로 해석해야 할 때마다 날짜 및 시간 편집에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="09f2550fa4babbe68c7842dd60a5737f98fcc228" translate="yes" xml:space="preserve">
          <source>This virtual function is used by the spin box whenever it needs to display the given</source>
          <target state="translated">이 가상 기능은 스핀 박스가 주어진 것을 표시해야 할 때마다 사용됩니다</target>
        </trans-unit>
        <trans-unit id="4d69280eefff2269c575325998a086c46761d22b" translate="yes" xml:space="preserve">
          <source>This virtual function is used by the spin box whenever it needs to interpret</source>
          <target state="translated">이 가상 기능은 스핀 박스가 해석해야 할 때마다 사용됩니다</target>
        </trans-unit>
        <trans-unit id="7c405498f9c38255177b6d74bf542ba9dcb8f4cf" translate="yes" xml:space="preserve">
          <source>This virtual function provides the</source>
          <target state="translated">이 가상 기능은</target>
        </trans-unit>
        <trans-unit id="fec2616dcd24120412b5d8942b65049210f31207" translate="yes" xml:space="preserve">
          <source>This virtual function receives events to an object and should return true if the event</source>
          <target state="translated">이 가상 함수는 객체에 이벤트를 수신하고 이벤트가 발생하면 true를 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="6672e1c9f0d3adb4dd2260d5548db14f0dda97cf" translate="yes" xml:space="preserve">
          <source>This virtual function receives events to this item. Reimplement this function to intercept events before they are dispatched to the specialized event handlers &lt;a href=&quot;qgraphicsitem#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#focusInEvent&quot;&gt;focusInEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#focusOutEvent&quot;&gt;focusOutEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#hoverEnterEvent&quot;&gt;hoverEnterEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#hoverMoveEvent&quot;&gt;hoverMoveEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#hoverLeaveEvent&quot;&gt;hoverLeaveEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#keyPressEvent&quot;&gt;keyPressEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#keyReleaseEvent&quot;&gt;keyReleaseEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt;(), &lt;a href=&quot;qgraphicsitem#mouseMoveEvent&quot;&gt;mouseMoveEvent&lt;/a&gt;(), and &lt;a href=&quot;qgraphicsitem#mouseDoubleClickEvent&quot;&gt;mouseDoubleClickEvent&lt;/a&gt;().</source>
          <target state="translated">이 가상 함수는이 항목에 대한 이벤트를 수신합니다. 이벤트가 특수 이벤트 핸들러 &lt;a href=&quot;qgraphicsitem#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt; (), &lt;a href=&quot;qgraphicsitem#focusInEvent&quot;&gt;focusInEvent&lt;/a&gt; (), &lt;a href=&quot;qgraphicsitem#focusOutEvent&quot;&gt;focusOutEvent&lt;/a&gt; (), &lt;a href=&quot;qgraphicsitem#hoverEnterEvent&quot;&gt;hoverEnterEvent&lt;/a&gt; (), &lt;a href=&quot;qgraphicsitem#hoverMoveEvent&quot;&gt;hoverMoveEvent&lt;/a&gt; (), &lt;a href=&quot;qgraphicsitem#hoverLeaveEvent&quot;&gt;hoverLeaveEvent&lt;/a&gt; (), &lt;a href=&quot;qgraphicsitem#keyPressEvent&quot;&gt;keyPressEvent&lt;/a&gt; (), &lt;a href=&quot;qgraphicsitem#keyReleaseEvent&quot;&gt;keyReleaseEvent&lt;/a&gt; (), &lt;a href=&quot;qgraphicsitem#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt; () 로 전달되기 전에 이벤트를 인터셉트하도록이 기능을 다시 구현하십시오. , &lt;a href=&quot;qgraphicsitem#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt; (), &lt;a href=&quot;qgraphicsitem#mouseMoveEvent&quot;&gt;mouseMoveEvent&lt;/a&gt; () 및 &lt;a href=&quot;qgraphicsitem#mouseDoubleClickEvent&quot;&gt;mouseDoubleClickEvent&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="c1c583bba7e245e22af676c919ca81689f423067" translate="yes" xml:space="preserve">
          <source>This virtual function returns &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt; if</source>
          <target state="translated">이 가상 함수 반환 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;잘못된를&lt;/a&gt; 하는 경우</target>
        </trans-unit>
        <trans-unit id="7556dfdcb4dc09b27eebe4c90d8139deb15c5b8b" translate="yes" xml:space="preserve">
          <source>This virtual function returns a shape representing the area where this item is opaque. An area is opaque if it is filled using an opaque brush or color (i.e., not transparent).</source>
          <target state="translated">이 가상 함수는이 항목이 불투명 한 영역을 나타내는 모양을 반환합니다. 불투명 한 브러시 또는 색상을 사용하여 채워진 영역은 불투명합니다 (즉, 투명하지 않음).</target>
        </trans-unit>
        <trans-unit id="5dd7ada00be4c60522221343cb17a5be2c783e4e" translate="yes" xml:space="preserve">
          <source>This virtual function returns the linear interpolation between variants</source>
          <target state="translated">이 가상 함수는 변형 간의 선형 보간을 반환합니다</target>
        </trans-unit>
        <trans-unit id="2c6b16ff1b43a04f8a3703c5feb07b19d379cbc0" translate="yes" xml:space="preserve">
          <source>This virtual function sets the geometry of the &lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; to</source>
          <target state="translated">이 가상 함수는 &lt;a href=&quot;qgraphicslayoutitem&quot;&gt;QGraphicsLayoutItem&lt;/a&gt; 의 지오메트리 를</target>
        </trans-unit>
        <trans-unit id="9f1c4758810e6eec4fb7cc58134afca0db174f3f" translate="yes" xml:space="preserve">
          <source>This virtual handler is called after a new item was added or inserted at position</source>
          <target state="translated">이 가상 핸들러는 새 항목이 추가되거나 위치에 삽입 된 후에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c13b944c5ab2c6654337265f9d9c7b8cf7c64503" translate="yes" xml:space="preserve">
          <source>This virtual handler is called after a new tab was added or inserted at position</source>
          <target state="translated">이 가상 핸들러는 새 탭이 추가되거나 위치에 삽입 된 후 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5cb5fad9529e2351ea0bebb9724c997310c17fca" translate="yes" xml:space="preserve">
          <source>This virtual handler is called after a tab was removed from position</source>
          <target state="translated">이 가상 핸들러는 탭이 위치에서 제거 된 후 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f74c88ee9bf748fe1f354277472491f4a0065832" translate="yes" xml:space="preserve">
          <source>This virtual handler is called after an item was removed from position</source>
          <target state="translated">이 가상 핸들러는 항목이 위치에서 제거 된 후 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="3a74d3fa9528aae922df538bdd47a6afa5d004e7" translate="yes" xml:space="preserve">
          <source>This virtual handler is called when &lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;setChecked&lt;/a&gt;() is used, unless it is called from within &lt;a href=&quot;qabstractbutton#nextCheckState&quot;&gt;nextCheckState&lt;/a&gt;(). It allows subclasses to reset their intermediate button states.</source>
          <target state="translated">이 가상 핸들러는 &lt;a href=&quot;qabstractbutton#nextCheckState&quot;&gt;nextCheckState&lt;/a&gt; () 내에서 호출되지 않는 한 &lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;setChecked&lt;/a&gt; ()가 사용될 때 호출됩니다 . 서브 클래스가 중간 버튼 상태를 재설정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61ea2758e02fe95cb122a8c0c636f7e8e83e947d" translate="yes" xml:space="preserve">
          <source>This virtual handler is called when a button is clicked. The default implementation calls &lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;setChecked&lt;/a&gt;(!&lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt;()) if the button &lt;a href=&quot;qabstractbutton#checkable-prop&quot;&gt;isCheckable&lt;/a&gt;(). It allows subclasses to implement intermediate button states.</source>
          <target state="translated">이 가상 핸들러는 버튼을 클릭하면 호출됩니다. 기본 구현 은 버튼이 &lt;a href=&quot;qabstractbutton#checkable-prop&quot;&gt;Checkable&lt;/a&gt; () 인 경우 &lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;setChecked&lt;/a&gt; (! &lt;a href=&quot;qabstractbutton#checked-prop&quot;&gt;isChecked&lt;/a&gt; ())를 호출합니다 . 서브 클래스가 중간 버튼 상태를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4754c9d8af8e9d83b1008e6455ca40b8b5c202d0" translate="yes" xml:space="preserve">
          <source>This virtual handler is called when the scroll bars are moved by</source>
          <target state="translated">이 가상 핸들러는 스크롤 막대가</target>
        </trans-unit>
        <trans-unit id="ccc57a8b2847f964748b51b0f38ae760039cd6cb" translate="yes" xml:space="preserve">
          <source>This virtual handler is called whenever the tab layout changes.</source>
          <target state="translated">이 가상 핸들러는 탭 레이아웃이 변경 될 때마다 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ac4cbaf1280a5ea681a8d5f11aa2483deb189e68" translate="yes" xml:space="preserve">
          <source>This virtual method is provided as a callback to allow re-binding a target frame buffer object or context when different &lt;a href=&quot;qopenglpaintdevice&quot;&gt;QOpenGLPaintDevice&lt;/a&gt; instances are issuing draw calls alternately.</source>
          <target state="translated">이 가상 메소드는 다른 &lt;a href=&quot;qopenglpaintdevice&quot;&gt;QOpenGLPaintDevice&lt;/a&gt; 인스턴스가 드로우 호출을 교대로 발행 할 때 대상 프레임 버퍼 오브젝트 또는 컨텍스트를 리 바인드 할 수 있도록 콜백으로 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="e0d164bea92aeb9b50de5f40b66c7436a8591859" translate="yes" xml:space="preserve">
          <source>This virtual method is provided to enable overriding the behavior of &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt;(). &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt;() is a public wrapper for this method.</source>
          <target state="translated">이 가상 메소드는 &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt; () 의 작동을 대체 할 수 있도록 제공됩니다 . &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt; ()는이 메소드의 공용 랩퍼입니다.</target>
        </trans-unit>
        <trans-unit id="6b607e31416c963de8ce7086970eb04b7f742ca2" translate="yes" xml:space="preserve">
          <source>This virtual method is provided to enable overriding the behavior of &lt;a href=&quot;qnetworkreply#setSslConfiguration&quot;&gt;setSslConfiguration&lt;/a&gt;(). &lt;a href=&quot;qnetworkreply#setSslConfiguration&quot;&gt;setSslConfiguration&lt;/a&gt;() is a public wrapper for this method. If you override this method use</source>
          <target state="translated">이 가상 메소드는 &lt;a href=&quot;qnetworkreply#setSslConfiguration&quot;&gt;setSslConfiguration&lt;/a&gt; () 의 작동을 대체 할 수 있도록 제공됩니다 . &lt;a href=&quot;qnetworkreply#setSslConfiguration&quot;&gt;setSslConfiguration&lt;/a&gt; ()은이 메소드의 공용 랩퍼입니다. 이 방법을 무시하면</target>
        </trans-unit>
        <trans-unit id="ec7a780397dcfd2b9843b16c0bb60185e881a240" translate="yes" xml:space="preserve">
          <source>This virtual method is provided to enable overriding the behavior of &lt;a href=&quot;qnetworkreply#sslConfiguration&quot;&gt;sslConfiguration&lt;/a&gt;(). &lt;a href=&quot;qnetworkreply#sslConfiguration&quot;&gt;sslConfiguration&lt;/a&gt;() is a public wrapper for this method. The configuration will be returned in</source>
          <target state="translated">이 가상 메소드는 &lt;a href=&quot;qnetworkreply#sslConfiguration&quot;&gt;sslConfiguration&lt;/a&gt; () 의 동작을 대체 할 수 있도록 제공됩니다 . &lt;a href=&quot;qnetworkreply#sslConfiguration&quot;&gt;sslConfiguration&lt;/a&gt; ()은이 메소드의 공용 래퍼입니다. 구성이 반환됩니다</target>
        </trans-unit>
        <trans-unit id="6e1614259ee5b679f75a12c05ebe2c54fbc77260" translate="yes" xml:space="preserve">
          <source>This way the service will start in the same process as &lt;code&gt;QtActivity&lt;/code&gt;, which allows you to use native C++ calls from Java code. You can run it in a separate process but that way you cannot use any native calls for communication because the Qt libraries are not loaded for that process. To run on separate process, add this to the service tag:</source>
          <target state="translated">This way the service will start in the same process as &lt;code&gt;QtActivity&lt;/code&gt; , which allows you to use native C++ calls from Java code. You can run it in a separate process but that way you cannot use any native calls for communication because the Qt libraries are not loaded for that process. To run on separate process, add this to the service tag:</target>
        </trans-unit>
        <trans-unit id="3ab2cc0db50331c8618146101da3c2a5fe2d3d2e" translate="yes" xml:space="preserve">
          <source>This widget lets the user choose a &lt;a href=&quot;qkeysequence&quot;&gt;QKeySequence&lt;/a&gt;, which is usually used as a shortcut. The recording is initiated when the widget receives the focus and ends one second after the user releases the last key.</source>
          <target state="translated">이 위젯을 통해 사용자는 &lt;a href=&quot;qkeysequence&quot;&gt;QKeySequence를&lt;/a&gt; 선택할 수 있으며 이는 보통 바로 가기로 사용됩니다. 위젯이 포커스를 받고 사용자가 마지막 키를 놓은 후 1 초가 지나면 레코딩이 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="75ed49118d938284114a599ababeab8020814f1f" translate="yes" xml:space="preserve">
          <source>This widget must enable focus setting in order to get the keyboard input focus, i.e. it must call &lt;a href=&quot;qwidget#focusPolicy-prop&quot;&gt;setFocusPolicy&lt;/a&gt;().</source>
          <target state="translated">이 위젯은 키보드 입력 포커스를 얻기 위해 포커스 설정을 활성화해야합니다. 즉 &lt;a href=&quot;qwidget#focusPolicy-prop&quot;&gt;setFocusPolicy&lt;/a&gt; ()를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="036036620494ee25eed6da897cd5436c1c63f3c7" translate="yes" xml:space="preserve">
          <source>This widget receives all keyboard events until &lt;a href=&quot;qwidget#releaseKeyboard&quot;&gt;releaseKeyboard&lt;/a&gt;() is called; other widgets get no keyboard events at all. Mouse events are not affected. Use &lt;a href=&quot;qwidget#grabMouse&quot;&gt;grabMouse&lt;/a&gt;() if you want to grab that.</source>
          <target state="translated">이 위젯은 &lt;a href=&quot;qwidget#releaseKeyboard&quot;&gt;releaseKeyboard&lt;/a&gt; ()가 호출 될 때까지 모든 키보드 이벤트를 수신합니다 . 다른 위젯은 키보드 이벤트를 전혀받지 않습니다. 마우스 이벤트는 영향을받지 않습니다. 잡으려면 &lt;a href=&quot;qwidget#grabMouse&quot;&gt;grabMouse&lt;/a&gt; ()를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9363f96107b01677909803495e64bc5811ff7cea" translate="yes" xml:space="preserve">
          <source>This widget receives all mouse events until &lt;a href=&quot;qwidget#releaseMouse&quot;&gt;releaseMouse&lt;/a&gt;() is called; other widgets get no mouse events at all. Keyboard events are not affected. Use &lt;a href=&quot;qwidget#grabKeyboard&quot;&gt;grabKeyboard&lt;/a&gt;() if you want to grab that.</source>
          <target state="translated">이 위젯은 &lt;a href=&quot;qwidget#releaseMouse&quot;&gt;releaseMouse&lt;/a&gt; ()가 호출 될 때까지 모든 마우스 이벤트를 수신합니다 . 다른 위젯은 마우스 이벤트를 전혀받지 않습니다. 키보드 이벤트는 영향을받지 않습니다. 잡으려면 &lt;a href=&quot;qwidget#grabKeyboard&quot;&gt;grabKeyboard&lt;/a&gt; ()를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ea3a8670981c22b971d10d95378de37a75441210" translate="yes" xml:space="preserve">
          <source>This widget works like the standard Windows resize handle. In the X11 version this resize handle generally works differently from the one provided by the system if the X11 window manager does not support necessary modern post-ICCCM specifications.</source>
          <target state="translated">이 위젯은 표준 Windows 크기 조정 핸들처럼 작동합니다. X11 버전에서이 크기 조정 핸들은 일반적으로 X11 창 관리자가 필요한 최신 ICCCM 사양을 지원하지 않는 경우 시스템에서 제공하는 것과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="dfedc7e87c2f263e8e0a388ac84b0e6bf71afc7f" translate="yes" xml:space="preserve">
          <source>This will access the &lt;code&gt;title&lt;/code&gt; value for the first item in the model:</source>
          <target state="translated">모델의 첫 번째 항목에 대한 &lt;code&gt;title&lt;/code&gt; 값에 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="4e147857bbca4b81d17023b8d837054f64b38fc6" translate="yes" xml:space="preserve">
          <source>This will again control which item gets resized when the user drags a handle, and which handle gets hidden when an item is told to hide.</source>
          <target state="translated">이렇게하면 사용자가 핸들을 드래그 할 때 크기가 조정될 항목과 항목을 숨기라고 지시 할 때 숨길 핸들이 다시 제어됩니다.</target>
        </trans-unit>
        <trans-unit id="b132deae3408b0cb56f26c8ee9a3dccb4f891de5" translate="yes" xml:space="preserve">
          <source>This will allow for better interoperability between &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt;, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; and friends and STL-style algorithms.</source>
          <target state="translated">이를 통해 &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; , &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; 및 프렌즈와 STL 스타일 알고리즘 간의 상호 운용성이 향상됩니다 .</target>
        </trans-unit>
        <trans-unit id="277bf4441c381bf1e386238b69f7a7da3010df7b" translate="yes" xml:space="preserve">
          <source>This will also affect copies of this &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; object.</source>
          <target state="translated">이것은이 &lt;a href=&quot;qsqldatabase&quot;&gt;QSqlDatabase&lt;/a&gt; 오브젝트의 사본에도 영향을줍니다 .</target>
        </trans-unit>
        <trans-unit id="4fe6ff0919fbc91c77431dafc0b14ba3850b76af" translate="yes" xml:space="preserve">
          <source>This will also cause &lt;a href=&quot;qgeocodereply#error&quot;&gt;error&lt;/a&gt;() and &lt;a href=&quot;qgeocodereply#finished&quot;&gt;finished&lt;/a&gt;() signals to be emitted, in that order.</source>
          <target state="translated">또한 &lt;a href=&quot;qgeocodereply#error&quot;&gt;오류&lt;/a&gt; () 및 &lt;a href=&quot;qgeocodereply#finished&quot;&gt;완료&lt;/a&gt; () 신호가 순서대로 방출됩니다.</target>
        </trans-unit>
        <trans-unit id="a670a15de482ae9bf67f9d2d4ec83c8007f6dc23" translate="yes" xml:space="preserve">
          <source>This will also cause &lt;a href=&quot;qgeoroutereply#error&quot;&gt;error&lt;/a&gt;() and &lt;a href=&quot;qgeoroutereply#finished&quot;&gt;finished&lt;/a&gt;() signals to be emitted, in that order.</source>
          <target state="translated">또한 &lt;a href=&quot;qgeoroutereply#error&quot;&gt;오류&lt;/a&gt; () 및 &lt;a href=&quot;qgeoroutereply#finished&quot;&gt;완료&lt;/a&gt; () 신호가 순서대로 방출됩니다.</target>
        </trans-unit>
        <trans-unit id="7edec0ff2c95f8d70dd606f22c875d2e07bde3eb" translate="yes" xml:space="preserve">
          <source>This will append the following declaration to the translation file, where you can fill in either &quot;LTR&quot; or &quot;RTL&quot; as the translation for the locale.</source>
          <target state="translated">로케일의 번역으로 &quot;LTR&quot;또는 &quot;RTL&quot;을 채울 수있는 번역 파일에 다음 선언이 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="15cc4de4c05eb938c588c9bfca1d469be2683ecf" translate="yes" xml:space="preserve">
          <source>This will be &lt;code&gt;1.0&lt;/code&gt; on cameras that do not support digital zoom.</source>
          <target state="translated">이 될 것입니다 &lt;code&gt;1.0&lt;/code&gt; 디지털 줌을 지원하지 않는 카메라에.</target>
        </trans-unit>
        <trans-unit id="615c3954135cb391fa54891e740c07fdd3420a6f" translate="yes" xml:space="preserve">
          <source>This will be &lt;code&gt;1.0&lt;/code&gt; on cameras that do not support optical zoom.</source>
          <target state="translated">이 될 것입니다 &lt;code&gt;1.0&lt;/code&gt; 광학 줌을 지원하지 않는 카메라에.</target>
        </trans-unit>
        <trans-unit id="1b0e707ab24edb74218ca76138e6c8f1beb18e29" translate="yes" xml:space="preserve">
          <source>This will be done in &lt;a href=&quot;qml-qt-labs-wavefrontmesh-wavefrontmesh&quot;&gt;WavefrontMesh&lt;/a&gt; by an orthographic projection onto an appropriate plane.</source>
          <target state="translated">이는 &lt;a href=&quot;qml-qt-labs-wavefrontmesh-wavefrontmesh&quot;&gt;WavefrontMesh&lt;/a&gt; 에서 적절한 평면에 직교 투영하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="c7cf2d5498481f0813874f118399dc67d50132a7" translate="yes" xml:space="preserve">
          <source>This will be the screen where QWindows are initially shown, unless otherwise specified.</source>
          <target state="translated">별도로 지정하지 않는 한 QWindows가 처음 표시되는 화면입니다.</target>
        </trans-unit>
        <trans-unit id="899c4b4536bdc80cc6987168fbe983bb79e19294" translate="yes" xml:space="preserve">
          <source>This will capture the text from the first set of capturing parentheses (counting capturing left parentheses from left to right). The parentheses are counted from 1 since cap(0) is the whole matched regexp (equivalent to '&amp;amp;' in most regexp engines).</source>
          <target state="translated">이렇게하면 첫 번째 캡처 괄호 세트에서 텍스트를 캡처합니다 (왼쪽 괄호를 왼쪽에서 오른쪽으로 계산). cap (0)이 일치하는 전체 정규 표현식 (대부분의 정규 표현식 엔진에서 '&amp;amp;'와 동일)이므로 괄호는 1부터 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="856c9ae28d54a18becaec5f4a1937d44845114db" translate="yes" xml:space="preserve">
          <source>This will cause &lt;a href=&quot;qprintpreviewwidget&quot;&gt;QPrintPreviewWidget&lt;/a&gt; to create an internal, default constructed &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object, which will be used to generate the preview.</source>
          <target state="translated">이로 인해 &lt;a href=&quot;qprintpreviewwidget&quot;&gt;QPrintPreviewWidget&lt;/a&gt; 이 내부의 기본 생성 &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; 객체를 생성하여 미리보기를 생성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b3160cd4e74611023a70f0bafe1e1d0bbf569861" translate="yes" xml:space="preserve">
          <source>This will cause QPrintPreviewWidget to create an internal, default constructed &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object, which will be used to generate the preview.</source>
          <target state="translated">This will cause QPrintPreviewWidget to create an internal, default constructed &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object, which will be used to generate the preview.</target>
        </trans-unit>
        <trans-unit id="8eddf8b5010dba06228708f8215a7d9f12343e8c" translate="yes" xml:space="preserve">
          <source>This will cause an index file called &lt;code&gt;qtcreator.index&lt;/code&gt; to be created.</source>
          <target state="translated">&lt;code&gt;qtcreator.index&lt;/code&gt; 라는 색인 파일 이 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="d7a60b9ad21421adcb796649a9b195787e0c1119" translate="yes" xml:space="preserve">
          <source>This will cause any QML which attempts to use the &quot;Game&quot; type to produce an error message:</source>
          <target state="translated">This will cause any QML which attempts to use the &quot;Game&quot; type to produce an error message:</target>
        </trans-unit>
        <trans-unit id="5e5182bb265c9238ab5299fe49ce30ec2c80bfcf" translate="yes" xml:space="preserve">
          <source>This will cause any QML which imports the &quot;MinehuntCore&quot; type namespace and attempts to use the type to produce an error message:</source>
          <target state="translated">이로 인해 &quot;MinehuntCore&quot;유형 네임 스페이스를 가져오고 해당 유형을 사용하여 오류 메시지를 생성하는 QML이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d423d949fdcbcb72b1e3e5fb713515ad7f4a437d" translate="yes" xml:space="preserve">
          <source>This will center the widget on the page and scale it so that it fits the page.</source>
          <target state="translated">그러면 위젯이 페이지 중앙에 배치되고 페이지에 맞게 크기가 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="de7faa4633ecd7c8cd9691cfbb247b4c45975a0f" translate="yes" xml:space="preserve">
          <source>This will create a global variable called &lt;code&gt;myObject&lt;/code&gt; in the script environment. The variable serves as a proxy to the underlying C++ object. Note that the name of the script variable can be anything; i.e., it is not dependent upon &lt;a href=&quot;qobject#objectName-prop&quot;&gt;QObject::objectName&lt;/a&gt;().</source>
          <target state="translated">스크립트 환경에서 &lt;code&gt;myObject&lt;/code&gt; 라는 전역 변수가 생성 됩니다. 변수는 기본 C ++ 객체에 대한 프록시 역할을합니다. 스크립트 변수의 이름은 무엇이든 가능합니다. 즉, &lt;a href=&quot;qobject#objectName-prop&quot;&gt;QObject :: objectName&lt;/a&gt; ()에 의존하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8f2ae01b624ecf2b4a4c21845e84539e20e8462a" translate="yes" xml:space="preserve">
          <source>This will create an internal &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; object, which will use the system default printer.</source>
          <target state="translated">내부 &lt;a href=&quot;qprinter&quot;&gt;QPrinter&lt;/a&gt; 객체 가 생성 되어 시스템 기본 프린터가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="677aae3d07bcdd8367ec284c0045d6e3e4b3c1cc" translate="yes" xml:space="preserve">
          <source>This will do nothing if the reply is finished.</source>
          <target state="translated">회신이 완료되면 아무것도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2d628a39e0927171621f656bb464c0262f36c69d" translate="yes" xml:space="preserve">
          <source>This will emit &lt;a href=&quot;qwebengineprofile#downloadRequested&quot;&gt;QWebEngineProfile::downloadRequested&lt;/a&gt;() after the download has started.</source>
          <target state="translated">이 방출됩니다 &lt;a href=&quot;qwebengineprofile#downloadRequested&quot;&gt;QWebEngineProfile :: downloadRequested을&lt;/a&gt; 다운로드가 시작 () 후.</target>
        </trans-unit>
        <trans-unit id="284694b874ffcc3b4d4793bffcb0c036695d5a87" translate="yes" xml:space="preserve">
          <source>This will enable proper sorting of numeric digits, so that e.g. 100 sorts after 99.</source>
          <target state="translated">이렇게하면 숫자를 올바르게 정렬 할 수 있으므로 99 뒤에 100이 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="9d8ca382dadb24c447f301b2d3d6ecfa8cfd0d41" translate="yes" xml:space="preserve">
          <source>This will export &lt;code&gt;MyWidget&lt;/code&gt; and &lt;code&gt;MyWidget2&lt;/code&gt; as COM objects that can be created by COM clients, and will register &lt;code&gt;MySubType&lt;/code&gt; as a type that can be used in properties and parameters of &lt;code&gt;MyWidget&lt;/code&gt; and &lt;code&gt;MyWidget2&lt;/code&gt;.</source>
          <target state="translated">이렇게하면 &lt;code&gt;MyWidget&lt;/code&gt; 및 &lt;code&gt;MyWidget2&lt;/code&gt; 가 COM 클라이언트에 의해 생성 될 수있는 COM 개체로 내보내 지고 &lt;code&gt;MySubType&lt;/code&gt; 를 &lt;code&gt;MyWidget&lt;/code&gt; 및 &lt;code&gt;MyWidget2&lt;/code&gt; 의 속성 및 매개 변수에 사용할 수있는 형식으로 등록 합니다.</target>
        </trans-unit>
        <trans-unit id="f89d394dc550923959a6d1b528accb7b2f6bea7f" translate="yes" xml:space="preserve">
          <source>This will flip the x and y dimensions of the rectangle</source>
          <target state="translated">이것은 사각형의 x와 y 치수를 뒤집습니다.</target>
        </trans-unit>
        <trans-unit id="476ebdd5ba4112aee7ca44cd4e1658e370f4f291" translate="yes" xml:space="preserve">
          <source>This will force cookies and HTTP cache to be in memory, but also force all other normally persistent data to be stored in memory.</source>
          <target state="translated">이렇게하면 쿠키와 HTTP 캐시가 메모리에 있어야하지만 일반적으로 다른 모든 영구 데이터는 메모리에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="849bc2e76dd7e86f7415f233f4a11d51ff0cdb4f" translate="yes" xml:space="preserve">
          <source>This will generate a &quot;tap&quot; event with the map contents available in _event.data inside the state machine. In QML:</source>
          <target state="translated">상태 머신 내부의 _event.data에서 사용 가능한 맵 컨텐츠와 함께 &quot;탭&quot;이벤트가 생성됩니다. QML에서 :</target>
        </trans-unit>
        <trans-unit id="6c3db3de14b51d84ccd920cbf22752590b083ac0" translate="yes" xml:space="preserve">
          <source>This will give the full screen window a 1-pixel border, thus enabling the other top level windows to appear on top.</source>
          <target state="translated">이렇게하면 전체 화면 창에 1 픽셀 테두리가 생겨서 다른 최상위 창을 맨 위에 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a45f037699a619d5874d66b5c257e05eff5bf38" translate="yes" xml:space="preserve">
          <source>This will give us a 200 x 200 square area, with the origin (0, 0) in the center, that we can draw on. What we draw will show up in the largest possible square that will fit in the widget.</source>
          <target state="translated">그러면 200 x 200 정사각형 영역이 생겨 중심에 원점 (0, 0)이 그려집니다. 우리가 그리는 것은 위젯에 맞는 가장 큰 사각형에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="df547cf209710a4977a4bb9f85cd2acc6a37adda" translate="yes" xml:space="preserve">
          <source>This will include the &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; class in the &lt;code&gt;io&lt;/code&gt; group, which means, for example, that &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; will appear on the list created by calling the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#group-command&quot;&gt;\group&lt;/a&gt; command with the &lt;code&gt;io&lt;/code&gt; argument.</source>
          <target state="translated">여기에는 &lt;code&gt;io&lt;/code&gt; 그룹 에 &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; 클래스 가 포함됩니다. 예를 들어 &lt;code&gt;io&lt;/code&gt; 인수 와 함께 &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#group-command&quot;&gt;\ group&lt;/a&gt; 명령을 호출하여 만든 목록에 &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; 이 나타납니다 .</target>
        </trans-unit>
        <trans-unit id="16a1b519da91ff6f5007923d3388da24353ab323" translate="yes" xml:space="preserve">
          <source>This will include the &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; class in the &lt;code&gt;io&lt;/code&gt; group, which means, for example, that &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; will appear on the list created by calling the &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#group-command&quot;&gt;\group&lt;/a&gt; command with the &lt;code&gt;io&lt;/code&gt; argument.</source>
          <target state="translated">This will include the &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; class in the &lt;code&gt;io&lt;/code&gt; group, which means, for example, that &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt; will appear on the list created by calling the &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#group-command&quot;&gt;\group&lt;/a&gt; command with the &lt;code&gt;io&lt;/code&gt; argument.</target>
        </trans-unit>
        <trans-unit id="70f61a6a0cf375c2bc778adc26ea837b44488576" translate="yes" xml:space="preserve">
          <source>This will invalidate the choice of previous configurations.</source>
          <target state="translated">이전 구성 선택이 무효화됩니다.</target>
        </trans-unit>
        <trans-unit id="389d5b2be3bfaad066fdc3c8ef80d24fecb5ddbb" translate="yes" xml:space="preserve">
          <source>This will invoke &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;(-1)</source>
          <target state="translated">이것은 &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt; 를 호출 합니다 (-1)</target>
        </trans-unit>
        <trans-unit id="8436917bc6ee82fe226655c22fd15c9c2b2b3d0b" translate="yes" xml:space="preserve">
          <source>This will invoke &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;(-10)</source>
          <target state="translated">&lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt; 를 호출 합니다 (-10).</target>
        </trans-unit>
        <trans-unit id="4da02021c15eeaca6215b4496509614b8d7b5c9c" translate="yes" xml:space="preserve">
          <source>This will invoke &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;(1)</source>
          <target state="translated">&lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt; 를 호출 합니다 (1)</target>
        </trans-unit>
        <trans-unit id="27bc2ec02f3e6bd4d3ebd42f03e6e9b5ca137d08" translate="yes" xml:space="preserve">
          <source>This will invoke &lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt;(10)</source>
          <target state="translated">&lt;a href=&quot;qabstractspinbox#stepBy&quot;&gt;stepBy&lt;/a&gt; 를 호출 합니다 (10).</target>
        </trans-unit>
        <trans-unit id="9c361f955cbee070b6e115d654627f5e0f1fd81d" translate="yes" xml:space="preserve">
          <source>This will override the default size constraints set by &lt;a href=&quot;qlayout&quot;&gt;QLayout&lt;/a&gt;.</source>
          <target state="translated">이것은 &lt;a href=&quot;qlayout&quot;&gt;QLayout에&lt;/a&gt; 의해 설정된 기본 크기 제약을 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="20ef2e3442f082330a6b8fd9a80dec814f03c190" translate="yes" xml:space="preserve">
          <source>This will reinterpret the text and emit a signal even if the value has not changed since last time a signal was emitted.</source>
          <target state="translated">이것은 신호가 마지막으로 방출 된 이후 값이 변경되지 않은 경우에도 텍스트를 해석하고 신호를 방출합니다.</target>
        </trans-unit>
        <trans-unit id="845b3953fb337f3c791fef08bf856268c771984c" translate="yes" xml:space="preserve">
          <source>This will release any system resources used and free any buffers.</source>
          <target state="translated">이렇게하면 사용 된 시스템 리소스가 모두 해제되고 버퍼가 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="d7090cff90aff46e9c484b6ef6282e925fe44b8f" translate="yes" xml:space="preserve">
          <source>This will repeat the loop continuously until it is explicitly stopped.</source>
          <target state="translated">명시 적으로 중지 될 때까지 루프를 계속 반복합니다.</target>
        </trans-unit>
        <trans-unit id="57ad79594adc71c1c87b8b8bb8b09093f27f11a0" translate="yes" xml:space="preserve">
          <source>This will reset the &lt;a href=&quot;qvideosurfaceformat#viewport&quot;&gt;viewport&lt;/a&gt;() to fill the entire frame.</source>
          <target state="translated">전체 프레임을 채우도록 &lt;a href=&quot;qvideosurfaceformat#viewport&quot;&gt;뷰포트&lt;/a&gt; () 가 재설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="ccd74e262e785f0cf32b709f41874ce3db5439b8" translate="yes" xml:space="preserve">
          <source>This will result in pressed only being &lt;code&gt;true&lt;/code&gt; upon mouse presses.</source>
          <target state="translated">이것은 누르면에만있는 발생합니다 &lt;code&gt;true&lt;/code&gt; 마우스 프레스시.</target>
        </trans-unit>
        <trans-unit id="ebc32d9cdc98bf929f6a2e73f3ee0282e561e1a6" translate="yes" xml:space="preserve">
          <source>This will result in:</source>
          <target state="translated">결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="24a36dddc522a3a3d2d645de49905bc771f9a887" translate="yes" xml:space="preserve">
          <source>This will revert any pending changes.</source>
          <target state="translated">보류중인 변경 사항을 되돌립니다.</target>
        </trans-unit>
        <trans-unit id="9ded94c11b3ce6c1de1ac4fda1deb463e30df170" translate="yes" xml:space="preserve">
          <source>This will run</source>
          <target state="translated">이 실행됩니다</target>
        </trans-unit>
        <trans-unit id="2ff457f1b772bc1df9980caf6f0cbe131da80368" translate="yes" xml:space="preserve">
          <source>This will set the amplitude of the bounce or the amplitude of the elastic &quot;spring&quot; effect. The higher the number, the higher the amplitude.</source>
          <target state="translated">바운스의 진폭 또는 탄성 &quot;스프링&quot;효과의 진폭을 설정합니다. 숫자가 높을수록 진폭이 높습니다.</target>
        </trans-unit>
        <trans-unit id="a3a446d026f83a835d044b6af3bc71dd0978adb1" translate="yes" xml:space="preserve">
          <source>This will set the value of three settings:</source>
          <target state="translated">세 가지 설정 값이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="7a81034d89ae405983d2a1a4a25f9f1cce863436" translate="yes" xml:space="preserve">
          <source>This will start recording if the format specified is supported by the input device (you can check this with &lt;a href=&quot;qaudiodeviceinfo#isFormatSupported&quot;&gt;QAudioDeviceInfo::isFormatSupported&lt;/a&gt;(). In case there are any snags, use the &lt;a href=&quot;qaudioinput#error&quot;&gt;error&lt;/a&gt;() function to check what went wrong. We stop recording in the &lt;code&gt;stopRecording()&lt;/code&gt; slot.</source>
          <target state="translated">지정된 형식이 입력 장치에서 지원되는 경우 녹음이 시작됩니다 ( &lt;a href=&quot;qaudiodeviceinfo#isFormatSupported&quot;&gt;QAudioDeviceInfo :: isFormatSupported&lt;/a&gt; () 로이를 확인할 수 있습니다 ) &lt;a href=&quot;qaudioinput#error&quot;&gt;오류&lt;/a&gt; 가있는 경우 error () 함수를 사용하여 잘못된 내용을 확인하십시오. &lt;code&gt;stopRecording()&lt;/code&gt; 슬롯.</target>
        </trans-unit>
        <trans-unit id="956453e02e41fb5d6b3c94178c58d8a36f4a874d" translate="yes" xml:space="preserve">
          <source>This will tell qmake to run</source>
          <target state="translated">이것은 qmake에게 실행을 지시합니다</target>
        </trans-unit>
        <trans-unit id="aefdda8426346ec46e84446c33d4416b4b120470" translate="yes" xml:space="preserve">
          <source>This works with both modules, and will reduce the amount of work needed when the migration begins.</source>
          <target state="translated">이는 두 모듈 모두에서 작동하며 마이그레이션이 시작될 때 필요한 작업량을 줄입니다.</target>
        </trans-unit>
        <trans-unit id="b1aa3f4e65b25c9f69327542e78e4599fe389cae" translate="yes" xml:space="preserve">
          <source>This would (internally) create a node in proxyNode, which (again internally/automatically) connects to the provided registry (given by the</source>
          <target state="translated">이것은 (내부적으로) proxyNode에 노드를 만들며,이 노드는 (내부적으로 / 자동적으로) 제공된 레지스트리에 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="4de5e94cd5685a66ff56c70c4c29bb8837caf719" translate="yes" xml:space="preserve">
          <source>This would generate the following files:</source>
          <target state="translated">This would generate the following files:</target>
        </trans-unit>
        <trans-unit id="19862f15a89457ba93c92d6e0cde7f15acb20987" translate="yes" xml:space="preserve">
          <source>This would result in an error, since objects can only be dynamically destroyed if they were dynamically created.</source>
          <target state="translated">객체가 동적으로 생성 된 경우에만 객체가 동적으로 파괴 될 수 있기 때문에 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6d8e710aec27ae55326fe38bc95b8a3eabc55f60" translate="yes" xml:space="preserve">
          <source>This would result in the following tags:</source>
          <target state="translated">결과는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="80c28aedd68e139003aba62e14864b48b10d1c08" translate="yes" xml:space="preserve">
          <source>This wrapper class can now be used in .NET code, e.g. using C++, C#, Visual Basic or any other programming language available for .NET.</source>
          <target state="translated">이 래퍼 클래스는 이제 .NET 코드에서 사용할 수 있습니다 (예 : C ++, C #, Visual Basic 또는 .NET에 사용 가능한 다른 프로그래밍 언어 사용).</target>
        </trans-unit>
        <trans-unit id="20b4e9fb6e2f48f97b31b3d601865802f6c5439a" translate="yes" xml:space="preserve">
          <source>This zone is being used for autofocusing and is currently in focus.</source>
          <target state="translated">이 영역은 자동 초점에 사용되고 있으며 현재 초점이 맞춰져 있습니다.</target>
        </trans-unit>
        <trans-unit id="f52a4a83dce0236375fe5434f42943fb5b4a77a6" translate="yes" xml:space="preserve">
          <source>This zone is currently being used for autofocusing, but is not in focus.</source>
          <target state="translated">이 영역은 현재 자동 초점에 사용되고 있지만 초점이 맞지 않습니다.</target>
        </trans-unit>
        <trans-unit id="26914f45ba244bd2884905f8fd0fe2f008f89a9f" translate="yes" xml:space="preserve">
          <source>This zone is not valid</source>
          <target state="translated">이 영역은 유효하지 않습니다</target>
        </trans-unit>
        <trans-unit id="b1f45588e59d57b8bdeae181abab634c1e924d72" translate="yes" xml:space="preserve">
          <source>This zone may be used for autofocusing, but is not currently.</source>
          <target state="translated">이 영역은 자동 초점에 사용될 수 있지만 현재는 아닙니다.</target>
        </trans-unit>
        <trans-unit id="0447f3617fd9349cab495e45c9c74400e68aa2e5" translate="yes" xml:space="preserve">
          <source>Those character classes only match ASCII characters by default when using &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression&lt;/a&gt;: for instance, &lt;code&gt;\d&lt;/code&gt; matches exactly a character in the &lt;code&gt;0-9&lt;/code&gt; ASCII range. It is possible to change this behaviour by using the &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;UseUnicodePropertiesOption&lt;/a&gt; pattern option.</source>
          <target state="translated">이러한 문자 클래스는 &lt;a href=&quot;qregularexpression&quot;&gt;QRegularExpression을&lt;/a&gt; 사용할 때 기본적으로 ASCII 문자 만 일치 합니다. 예를 들어, &lt;code&gt;\d&lt;/code&gt; 는 &lt;code&gt;0-9&lt;/code&gt; ASCII 범위 의 문자와 정확히 일치 합니다. &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;UseUnicodePropertiesOption&lt;/a&gt; 패턴 옵션 을 사용하여이 동작을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3039e2d9723e76d138399f7b3652084646bf28a5" translate="yes" xml:space="preserve">
          <source>Those character classes only match ASCII characters by default when using QRegularExpression: for instance, &lt;code&gt;\d&lt;/code&gt; matches exactly a character in the &lt;code&gt;0-9&lt;/code&gt; ASCII range. It is possible to change this behaviour by using the &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;UseUnicodePropertiesOption&lt;/a&gt; pattern option.</source>
          <target state="translated">Those character classes only match ASCII characters by default when using QRegularExpression: for instance, &lt;code&gt;\d&lt;/code&gt; matches exactly a character in the &lt;code&gt;0-9&lt;/code&gt; ASCII range. It is possible to change this behaviour by using the &lt;a href=&quot;qregularexpression#PatternOption-enum&quot;&gt;UseUnicodePropertiesOption&lt;/a&gt; pattern option.</target>
        </trans-unit>
        <trans-unit id="2d97e8e200de5c4db6f0251368b8ba8cb97a9434" translate="yes" xml:space="preserve">
          <source>Those classes that wrap creatable coclasses (i.e. coclasses that are not marked as &lt;code&gt;noncreatable&lt;/code&gt;) have a default constructor; this is typically a single class of type &lt;code&gt;Application&lt;/code&gt;.</source>
          <target state="translated">(로 표시되지 않은 즉 coclass에 랩 생성 가능한 coclass에 있음을 그 클래스 &lt;code&gt;noncreatable&lt;/code&gt; 가 ) 기본 생성자가; 일반적으로 &lt;code&gt;Application&lt;/code&gt; 유형의 단일 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="efa77051db8332dcf6b9ce4f1bd6d9eb6c27334b" translate="yes" xml:space="preserve">
          <source>Though this assumes that the origin of the childrenRect is 0,0.</source>
          <target state="translated">이것은 childrenRect의 원점이 0,0이라고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="4a85fe45efc5207d5e166f439531439a3bf96588" translate="yes" xml:space="preserve">
          <source>Thread Affinity</source>
          <target state="translated">스레드 선호도</target>
        </trans-unit>
        <trans-unit id="b66b6cbe04365929e922b75680e179e46127f3a3" translate="yes" xml:space="preserve">
          <source>Thread Safety</source>
          <target state="translated">스레드 안전</target>
        </trans-unit>
        <trans-unit id="bd7dbb9b1d7cd43de427372cc1cad6df83f4e456" translate="yes" xml:space="preserve">
          <source>Thread Support</source>
          <target state="translated">스레드 지원</target>
        </trans-unit>
        <trans-unit id="b8803d3e5c78674672f989d114e22d5045772703" translate="yes" xml:space="preserve">
          <source>Thread Support in Qt</source>
          <target state="translated">Qt의 스레드 지원</target>
        </trans-unit>
        <trans-unit id="3d8441a8e15b132b589dbea20e3462aa34aeaae1" translate="yes" xml:space="preserve">
          <source>Thread can be controlled using signals</source>
          <target state="translated">신호를 사용하여 스레드를 제어 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="f5ef0f326fcc428db4fe05c11a48baaaad932f29" translate="yes" xml:space="preserve">
          <source>Thread can be monitored through a &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;qfuture&quot;&gt;QFuture를&lt;/a&gt; 통해 스레드를 모니터링 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="ac581572a548d642723328b1049dc4349fefc89e" translate="yes" xml:space="preserve">
          <source>Thread can receive data updates through signals</source>
          <target state="translated">스레드는 신호를 통해 데이터 업데이트를 수신 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="4c664a16940b02b1131476bec0d5424eac148ffe" translate="yes" xml:space="preserve">
          <source>Thread can run an event loop</source>
          <target state="translated">스레드는 이벤트 루프를 실행할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="2d4b7c38b48824028c061b2715262f748a4ed322" translate="yes" xml:space="preserve">
          <source>Thread priority can be specified</source>
          <target state="translated">스레드 우선 순위를 지정할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="26bd4d40a8e776e33b552dabcffeb47911034ed2" translate="yes" xml:space="preserve">
          <source>Thread support is enabled. This is enabled when CONFIG includes &lt;code&gt;qt&lt;/code&gt;, which is the default.</source>
          <target state="translated">스레드 지원이 사용 가능합니다. 이것은 CONFIG 에 기본값 인 &lt;code&gt;qt&lt;/code&gt; 가 포함 된 경우 활성화됩니다 .</target>
        </trans-unit>
        <trans-unit id="70472f453d318be74d62719df909f639ad359586" translate="yes" xml:space="preserve">
          <source>Thread-Safety</source>
          <target state="translated">Thread-Safety</target>
        </trans-unit>
        <trans-unit id="e48afd792893cdd980ff448874ca186e881b8310" translate="yes" xml:space="preserve">
          <source>Thread-Support in Qt Modules</source>
          <target state="translated">Qt 모듈의 스레드 지원</target>
        </trans-unit>
        <trans-unit id="2533dafc39a8884cf4d26ce3c29a2f9eb66ad89c" translate="yes" xml:space="preserve">
          <source>Threaded Render Loop (&quot;threaded&quot;)</source>
          <target state="translated">스레드 렌더링 루프 ( &quot;스레드&quot;)</target>
        </trans-unit>
        <trans-unit id="ddbedcd4fc98fdc7c72b003acb15b95ed41dccdf" translate="yes" xml:space="preserve">
          <source>Threaded Rendering and Render Target</source>
          <target state="translated">스레드 렌더링 및 렌더링 대상</target>
        </trans-unit>
        <trans-unit id="5541d0b76d127f6a3c54bbc247ffcc1b6c2bbc25" translate="yes" xml:space="preserve">
          <source>Threading</source>
          <target state="translated">Threading</target>
        </trans-unit>
        <trans-unit id="835e9fd215f9dc523b754674da31ace0d2935df2" translate="yes" xml:space="preserve">
          <source>Threading Classes</source>
          <target state="translated">스레딩 클래스</target>
        </trans-unit>
        <trans-unit id="ecde27b345e48e3da056d368cb2fbb2fd1fba016" translate="yes" xml:space="preserve">
          <source>Threading and Concurrent Programming</source>
          <target state="translated">스레딩 및 동시 프로그래밍</target>
        </trans-unit>
        <trans-unit id="a8b8bfd64ca6f976c70417c5d82b48e34cd7f3b0" translate="yes" xml:space="preserve">
          <source>Threads and QObjects</source>
          <target state="translated">스레드와 QObject</target>
        </trans-unit>
        <trans-unit id="a21891c5fcbab7a6dfbc42562aa03c56f87692e3" translate="yes" xml:space="preserve">
          <source>Threads that are unused for</source>
          <target state="translated">사용되지 않은 스레드</target>
        </trans-unit>
        <trans-unit id="9143c4b1f873358473af2611451d630715df5ca0" translate="yes" xml:space="preserve">
          <source>Threads that are unused for a certain amount of time will expire. The default expiry timeout is 30000 milliseconds (30 seconds). This can be changed using &lt;a href=&quot;qthreadpool#expiryTimeout-prop&quot;&gt;setExpiryTimeout&lt;/a&gt;(). Setting a negative expiry timeout disables the expiry mechanism.</source>
          <target state="translated">일정 시간 동안 사용하지 않은 스레드는 만료됩니다. 기본 만기 시간 종료는 30000 밀리 초 (30 초)입니다. &lt;a href=&quot;qthreadpool#expiryTimeout-prop&quot;&gt;setExpiryTimeout&lt;/a&gt; ()을 사용하여 변경할 수 있습니다 . 음수 만료 시간 초과를 설정하면 만료 메커니즘이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="020f75643a2a2107248c5e694479886e498821dd" translate="yes" xml:space="preserve">
          <source>Three enum values are useful in applications that can be run in right-to-left mode:</source>
          <target state="translated">3 개의 열거 형 값은 오른쪽에서 왼쪽 모드로 실행할 수있는 응용 프로그램에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="0a3b28d4d8f70ab3cb09cd00360a53b06b617f52" translate="yes" xml:space="preserve">
          <source>Three important macros are:</source>
          <target state="translated">세 가지 중요한 매크로는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b43767a7f1a6f5de1ee79114a35ec5ff58e2f896" translate="yes" xml:space="preserve">
          <source>Three pixel wide pen</source>
          <target state="translated">3 픽셀 와이드 펜</target>
        </trans-unit>
        <trans-unit id="7997a0ba69821008e888f473fc1b436a68ee7d19" translate="yes" xml:space="preserve">
          <source>ThresholdMask</source>
          <target state="translated">ThresholdMask</target>
        </trans-unit>
        <trans-unit id="c138a1dc1845757c354e090b07439e2866f6f3b3" translate="yes" xml:space="preserve">
          <source>ThresholdMask (QML type)</source>
          <target state="translated">임계 값 마스크 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="f65bb37fb08b42169aac7fa73010536aa505f69c" translate="yes" xml:space="preserve">
          <source>ThresholdMask QML Type</source>
          <target state="translated">임계 값 마스크 QML 유형</target>
        </trans-unit>
        <trans-unit id="02277b4b187d971bd1305669d03b9b4aad8b563b" translate="yes" xml:space="preserve">
          <source>ThresholdMask.cached</source>
          <target state="translated">ThresholdMask.cached</target>
        </trans-unit>
        <trans-unit id="f44ee4710d1c6188665391602c1fc16a4ece8479" translate="yes" xml:space="preserve">
          <source>ThresholdMask.maskSource</source>
          <target state="translated">ThresholdMask.maskSource</target>
        </trans-unit>
        <trans-unit id="6b2e176e2d1df4dbc22be451861b3396710a8aba" translate="yes" xml:space="preserve">
          <source>ThresholdMask.source</source>
          <target state="translated">ThresholdMask.source</target>
        </trans-unit>
        <trans-unit id="1d4e6841db4a51236e1a7dec0b9a62e2d04146fa" translate="yes" xml:space="preserve">
          <source>ThresholdMask.spread</source>
          <target state="translated">ThresholdMask.spread</target>
        </trans-unit>
        <trans-unit id="a463dde102e660e0113f0d6e991c44302d271c8a" translate="yes" xml:space="preserve">
          <source>ThresholdMask.threshold</source>
          <target state="translated">ThresholdMask.threshold</target>
        </trans-unit>
        <trans-unit id="a52d5f111c4afbc84e5767cebb33e27dfde4a3a8" translate="yes" xml:space="preserve">
          <source>ThresholdType : &lt;a href=&quot;qml-enumeration&quot;&gt;enumeration&lt;/a&gt;</source>
          <target state="translated">ThresholdType : &lt;a href=&quot;qml-enumeration&quot;&gt;열거&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3c92b15f801a35369cf31e6a5edc0d98424e66bf" translate="yes" xml:space="preserve">
          <source>Throttling control is provided by the &lt;a href=&quot;qfuturewatcher#setPendingResultsLimit&quot;&gt;setPendingResultsLimit&lt;/a&gt;() function. When the number of pending &lt;a href=&quot;qfuturewatcher#resultReadyAt&quot;&gt;resultReadyAt&lt;/a&gt;() or &lt;a href=&quot;qfuturewatcher#resultsReadyAt&quot;&gt;resultsReadyAt&lt;/a&gt;() signals exceeds the limit, the computation represented by the future will be throttled automatically. The computation will resume once the number of pending signals drops below the limit.</source>
          <target state="translated">조절 제어는 &lt;a href=&quot;qfuturewatcher#setPendingResultsLimit&quot;&gt;setPendingResultsLimit&lt;/a&gt; () 함수에 의해 제공됩니다 . 보류중인 &lt;a href=&quot;qfuturewatcher#resultReadyAt&quot;&gt;resultReadyAt&lt;/a&gt; () 또는 &lt;a href=&quot;qfuturewatcher#resultsReadyAt&quot;&gt;resultsReadyAt&lt;/a&gt; () 신호 수가 한계를 초과하면 미래가 나타내는 계산이 자동으로 조절됩니다. 보류중인 신호 수가 한계 아래로 떨어지면 계산이 다시 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="4c5769c40b690a1e332cca42f1cd8b7defaece35" translate="yes" xml:space="preserve">
          <source>Through &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt;, Graphics View is able to deeply integrate the client widget features including its cursors, tooltips, mouse, tablet and keyboard events, child widgets, animations, pop-ups (e.g., &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; or &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt;), and the widget's input focus and activation. &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; even integrates the embedded widget's tab order so that you can tab in and out of embedded widgets. You can even embed a new &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; into your scene to provide complex nested scenes.</source>
          <target state="translated">&lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget을&lt;/a&gt; 통해 Graphics View는 커서, 툴팁, 마우스, 태블릿 및 키보드 이벤트, 하위 위젯, 애니메이션, 팝업 (예 : &lt;a href=&quot;qcombobox&quot;&gt;QComboBox&lt;/a&gt; 또는 &lt;a href=&quot;qcompleter&quot;&gt;QCompleter&lt;/a&gt; ), 위젯의 입력 포커스 및 활성화를 포함한 클라이언트 위젯 기능을 깊이 통합 할 수 있습니다. . &lt;a href=&quot;qgraphicsproxywidget&quot;&gt;QGraphicsProxyWidget&lt;/a&gt; 은 내장 된 위젯의 탭 순서를 통합하여 내장 된 위젯에서 안팎으로 탭할 수 있습니다. 복잡한 &lt;a href=&quot;qgraphicsview&quot;&gt;Q&lt;/a&gt; 장면을 제공하기 위해 새로운 QGraphicsView 를 장면에 포함시킬 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="002ccfbbd57d9093aaba13afbfa71b54c81f307f" translate="yes" xml:space="preserve">
          <source>Through a script engine</source>
          <target state="translated">스크립트 엔진을 통해</target>
        </trans-unit>
        <trans-unit id="dac4c6f8274f79f09bf5f3ff09e92a2beb81598a" translate="yes" xml:space="preserve">
          <source>Throughout our documentation and examples, &lt;a href=&quot;qtqml-syntax-objectattributes&quot;&gt;QML object attributes&lt;/a&gt; are always structured in the following order:</source>
          <target state="translated">설명서와 예제에서 &lt;a href=&quot;qtqml-syntax-objectattributes&quot;&gt;QML 객체 속성&lt;/a&gt; 은 항상 다음 순서로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="d13b17b5b7778b415a2152e64b89d7afb15c57d2" translate="yes" xml:space="preserve">
          <source>Throughout the documentation, the terms</source>
          <target state="translated">설명서 전체에서 용어</target>
        </trans-unit>
        <trans-unit id="b4c48fb501ba99ce70d4c3ba720bb3ac4b7d5a46" translate="yes" xml:space="preserve">
          <source>Throws a run-time error (exception) with the given</source>
          <target state="translated">주어진 시간에 런타임 오류 (예외)를 던집니다.</target>
        </trans-unit>
        <trans-unit id="6fc6880de4bd0dd8277032c198b6ced2641df8fa" translate="yes" xml:space="preserve">
          <source>Throws an error and sets</source>
          <target state="translated">오류를 던지고 설정</target>
        </trans-unit>
        <trans-unit id="91fb51be98c5e0d17bdece8530009789c41d0894" translate="yes" xml:space="preserve">
          <source>ThumbnailImage</source>
          <target state="translated">ThumbnailImage</target>
        </trans-unit>
        <trans-unit id="7c0ff893241c9f24af90152047e7deb53591e5b2" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar (QML type)</source>
          <target state="translated">ThumbnailToolBar (QML 유형)</target>
        </trans-unit>
        <trans-unit id="183375e3cb989da638012defa6030d68af15e0f5" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar QML Type</source>
          <target state="translated">ThumbnailToolBar QML 유형</target>
        </trans-unit>
        <trans-unit id="e69b0a3abd02f867774e1a9aff8042dd74e8dccd" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar.iconicLivePreviewRequested()</source>
          <target state="translated">ThumbnailToolBar.iconicLivePreviewRequested()</target>
        </trans-unit>
        <trans-unit id="4eaf9801ee040c5ecb2af1184d0b1a7f10e3527f" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar.iconicLivePreviewSource</source>
          <target state="translated">ThumbnailToolBar.iconicLivePreviewSource</target>
        </trans-unit>
        <trans-unit id="f4fefa332e3ed341e162dce0a5842e064a32878a" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar.iconicNotificationsEnabled</source>
          <target state="translated">ThumbnailToolBar.iconicNotificationsEnabled</target>
        </trans-unit>
        <trans-unit id="6cf36efc979b3d1b2cc6cec8ae9e856d3a5b47eb" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar.iconicThumbnailRequested()</source>
          <target state="translated">ThumbnailToolBar.iconicThumbnailRequested()</target>
        </trans-unit>
        <trans-unit id="00f7fa8e84d7c9961435267bcb49ac6832ed1bdc" translate="yes" xml:space="preserve">
          <source>ThumbnailToolBar.iconicThumbnailSource</source>
          <target state="translated">ThumbnailToolBar.iconicThumbnailSource</target>
        </trans-unit>
        <trans-unit id="12238375d9d613083f190c972e988cad147f185d" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton (QML type)</source>
          <target state="translated">ThumbnailToolButton (QML 유형)</target>
        </trans-unit>
        <trans-unit id="8ca14b74f1402cd558556c6abdb100139afbab5c" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton QML Type</source>
          <target state="translated">ThumbnailToolButton QML 유형</target>
        </trans-unit>
        <trans-unit id="b05830b2f5041e34f3da3e6a3d29c8cb74869e61" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.clicked()</source>
          <target state="translated">ThumbnailToolButton.clicked()</target>
        </trans-unit>
        <trans-unit id="3f6fbda0428229e44c933f41dead508216a6ef6e" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.dismissOnClick</source>
          <target state="translated">ThumbnailToolButton.dismissOnClick</target>
        </trans-unit>
        <trans-unit id="f2b4ca4b22686255eacdd954c4fb32e4a1d8fabf" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.enabled</source>
          <target state="translated">ThumbnailToolButton.enabled</target>
        </trans-unit>
        <trans-unit id="9a6d37c2bd18bba81aa1278f57c6b2ac7a6c6207" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.flat</source>
          <target state="translated">ThumbnailToolButton.flat</target>
        </trans-unit>
        <trans-unit id="6b7ade172f57ad2500c79d00cbcdffbaeb093e6a" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.iconSource</source>
          <target state="translated">ThumbnailToolButton.iconSource</target>
        </trans-unit>
        <trans-unit id="06540195376074f727e535ede7fd1cf7b95b0499" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.interactive</source>
          <target state="translated">ThumbnailToolButton.interactive</target>
        </trans-unit>
        <trans-unit id="e6d1533a55ddefb5e17f5a9de1f42d3b23116ff8" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.tooltip</source>
          <target state="translated">ThumbnailToolButton.tooltip</target>
        </trans-unit>
        <trans-unit id="bdb395b644cbdf8580ba24a5ed7f8f55619ac333" translate="yes" xml:space="preserve">
          <source>ThumbnailToolButton.visible</source>
          <target state="translated">ThumbnailToolButton.visible</target>
        </trans-unit>
        <trans-unit id="2980e11b5d0d1dd98d00c7aac7cd7bf503584c61" translate="yes" xml:space="preserve">
          <source>Thus the string finally becomes &lt;code&gt;&quot;Hello500&quot;&lt;/code&gt;.</source>
          <target state="translated">따라서 문자열은 &lt;code&gt;&quot;Hello500&quot;&lt;/code&gt; 이 됩니다.</target>
        </trans-unit>
        <trans-unit id="fec10f52b29474d42bef01a882ea4e9d05317b2f" translate="yes" xml:space="preserve">
          <source>Thus, if a QML document named &quot;MyButton.qml&quot; exists, it provides the definition of the &quot;MyButton&quot; type, which may be used in a QML application.</source>
          <target state="translated">따라서 &quot;MyButton.qml&quot;이라는 QML 문서가 존재하는 경우 QML 애플리케이션에서 사용될 수있는 &quot;MyButton&quot;유형의 정의를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a92156ef45f0e284e93eea70bf821593a335a365" translate="yes" xml:space="preserve">
          <source>Thus, in the &lt;a href=&quot;qtwebengine-platform-notes#macos&quot;&gt;macOS&lt;/a&gt; Hunspell case, Qt WebEngine will look in the</source>
          <target state="translated">따라서 &lt;a href=&quot;qtwebengine-platform-notes#macos&quot;&gt;macOS&lt;/a&gt; Hunspell의 경우 Qt WebEngine은</target>
        </trans-unit>
        <trans-unit id="9b26b93895e58b9fe755a209aea334c49fcbd706" translate="yes" xml:space="preserve">
          <source>Thus, in the macOS Hunspell case, Qt WebEngine will look in the</source>
          <target state="translated">Thus, in the macOS Hunspell case, Qt WebEngine will look in the</target>
        </trans-unit>
        <trans-unit id="8b6a4f79c67e1c0cfc398c2295408f2eb4b88ca9" translate="yes" xml:space="preserve">
          <source>Tibetan</source>
          <target state="translated">Tibetan</target>
        </trans-unit>
        <trans-unit id="9e4207afe874af7c13c701477ed16800ec9d54b5" translate="yes" xml:space="preserve">
          <source>TickCounter</source>
          <target state="translated">TickCounter</target>
        </trans-unit>
        <trans-unit id="b78cd499da296994e464c7d76ef18bedae252f69" translate="yes" xml:space="preserve">
          <source>Ticks are placed according to &lt;a href=&quot;qml-qtcharts-valueaxis#tickAnchor-prop&quot;&gt;tickAnchor&lt;/a&gt; and &lt;a href=&quot;qml-qtcharts-valueaxis#tickInterval-prop&quot;&gt;tickInterval&lt;/a&gt; values.</source>
          <target state="translated">눈금은 &lt;a href=&quot;qml-qtcharts-valueaxis#tickAnchor-prop&quot;&gt;tickAnchor&lt;/a&gt; 및 &lt;a href=&quot;qml-qtcharts-valueaxis#tickInterval-prop&quot;&gt;tickInterval&lt;/a&gt; 값 에 따라 배치 됩니다.</target>
        </trans-unit>
        <trans-unit id="136379b6caffb661288f697884852acfa67f5abc" translate="yes" xml:space="preserve">
          <source>Ticks are placed according to &lt;a href=&quot;qvalueaxis#tickAnchor-prop&quot;&gt;tickAnchor&lt;/a&gt; and &lt;a href=&quot;qvalueaxis#tickInterval-prop&quot;&gt;tickInterval&lt;/a&gt; values.</source>
          <target state="translated">눈금은 &lt;a href=&quot;qvalueaxis#tickAnchor-prop&quot;&gt;tickAnchor&lt;/a&gt; 및 &lt;a href=&quot;qvalueaxis#tickInterval-prop&quot;&gt;tickInterval&lt;/a&gt; 값 에 따라 배치 됩니다.</target>
        </trans-unit>
        <trans-unit id="6b42998e43935d3d04465715e4ce7c0857379df7" translate="yes" xml:space="preserve">
          <source>Ticks are placed evenly across the axis range. The &lt;a href=&quot;qml-qtcharts-valueaxis#tickCount-prop&quot;&gt;tickCount&lt;/a&gt; value specifies the number of ticks.</source>
          <target state="translated">틱은 축 범위에 고르게 배치됩니다. &lt;a href=&quot;qml-qtcharts-valueaxis#tickCount-prop&quot;&gt;있는 TickCount&lt;/a&gt; 값 틱의 수를 지정한다.</target>
        </trans-unit>
        <trans-unit id="de1dbf7d98c07647b8fc25c78f10bce49c508e71" translate="yes" xml:space="preserve">
          <source>Ticks are placed evenly across the axis range. The &lt;a href=&quot;qvalueaxis#tickCount-prop&quot;&gt;tickCount&lt;/a&gt; value specifies the number of ticks.</source>
          <target state="translated">틱은 축 범위에 고르게 배치됩니다. &lt;a href=&quot;qvalueaxis#tickCount-prop&quot;&gt;있는 TickCount&lt;/a&gt; 값 틱의 수를 지정한다.</target>
        </trans-unit>
        <trans-unit id="2dd2c660983753cf7cd7ed0bfc6dd2c1219c9bc2" translate="yes" xml:space="preserve">
          <source>Tile</source>
          <target state="translated">Tile</target>
        </trans-unit>
        <trans-unit id="c6cd47d4bb73d5278a94ee40065ff606037a97e1" translate="yes" xml:space="preserve">
          <source>Tile background color. Defaults to &lt;code&gt;green&lt;/code&gt;.</source>
          <target state="translated">타일 ​​배경색. 기본값은 &lt;code&gt;green&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="439446deb2e08642170a83f9665053b3b8ed4333" translate="yes" xml:space="preserve">
          <source>Tile cache</source>
          <target state="translated">타일 ​​캐시</target>
        </trans-unit>
        <trans-unit id="64c0e8266a4ef12188380a2d87169529f81ed8f4" translate="yes" xml:space="preserve">
          <source>Tile foreground (text) color. Defaults to &lt;code&gt;light&lt;/code&gt;.</source>
          <target state="translated">Tile foreground (text) color. Defaults to &lt;code&gt;light&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="54ea380b09bac1ed2b70cb8862b530ce5a74fd62" translate="yes" xml:space="preserve">
          <source>Tile foreground (text) color. Defaults to &lt;code&gt;light&lt;/code&gt;. This option is only available for Windows Store apps on Windows 8 and Windows RT.</source>
          <target state="translated">타일 ​​전경 (텍스트) 색상. 기본값은 &lt;code&gt;light&lt;/code&gt; 입니다. 이 옵션은 Windows 8 및 Windows RT의 Windows 스토어 앱에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f328e9d87e7209966b6a06a4bc96fabfe1b2ce19" translate="yes" xml:space="preserve">
          <source>TileHorizontally</source>
          <target state="translated">TileHorizontally</target>
        </trans-unit>
        <trans-unit id="d3ef36c1e8fa2e8700ba50396bd44452c4c3c0c2" translate="yes" xml:space="preserve">
          <source>TileVertically</source>
          <target state="translated">TileVertically</target>
        </trans-unit>
        <trans-unit id="9595212dd80379f9df669dfb7f5b83911e003df1" translate="yes" xml:space="preserve">
          <source>Tiling of the texture map. Default is &lt;code&gt;Qt.vector2d(8, 5)&lt;/code&gt;.</source>
          <target state="translated">Tiling of the texture map. Default is &lt;code&gt;Qt.vector2d(8, 5)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5151407d0ff11670bbac70daa08ac10e10dbedbb" translate="yes" xml:space="preserve">
          <source>Tiling repeat of the brush texture map. Default is &lt;code&gt;Qt.vector3d(3, 3, 3)&lt;/code&gt;.</source>
          <target state="translated">Tiling repeat of the brush texture map. Default is &lt;code&gt;Qt.vector3d(3, 3, 3)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5be5faa7bcca44efa627eab0fbecf97d5cdbbd04" translate="yes" xml:space="preserve">
          <source>Tiling repeat of the reflection texture map. Default is &lt;code&gt;Qt.vector3d(1, 1, 1)&lt;/code&gt;.</source>
          <target state="translated">Tiling repeat of the reflection texture map. Default is &lt;code&gt;Qt.vector3d(1, 1, 1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5c0e8c69fbbb98e53b74bd261a0fc9e7a4354695" translate="yes" xml:space="preserve">
          <source>Tiling repeat of the texture maps. Default is &lt;code&gt;Qt.vector2d(1, 1)&lt;/code&gt;.</source>
          <target state="translated">Tiling repeat of the texture maps. Default is &lt;code&gt;Qt.vector2d(1, 1)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="9b81f3aefe46229dc33100dd46883ae76bfce2f6" translate="yes" xml:space="preserve">
          <source>Tiling repeat of the texture maps. Default is &lt;code&gt;Qt.vector2d(5, 5)&lt;/code&gt;.</source>
          <target state="translated">Tiling repeat of the texture maps. Default is &lt;code&gt;Qt.vector2d(5, 5)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cc7b623df0df256f506f3321e45473f007a12d72" translate="yes" xml:space="preserve">
          <source>Tilt Sensor</source>
          <target state="translated">틸트 센서</target>
        </trans-unit>
        <trans-unit id="488a01a4d6577dfcddec95940066692710ba5cbd" translate="yes" xml:space="preserve">
          <source>TiltReading (QML type)</source>
          <target state="translated">틸트 판독 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="fe6799bec4d352c0acdaadc4278323aa15d8dd36" translate="yes" xml:space="preserve">
          <source>TiltReading QML Type</source>
          <target state="translated">틸트 판독 QML 유형</target>
        </trans-unit>
        <trans-unit id="f925c9ea69fde68de8b1b1d49ee5c4a870f89a26" translate="yes" xml:space="preserve">
          <source>TiltReading.xRotation</source>
          <target state="translated">TiltReading.xRotation</target>
        </trans-unit>
        <trans-unit id="2c5e3411813d08f41e9e1d43840ea1316763c970" translate="yes" xml:space="preserve">
          <source>TiltReading.yRotation</source>
          <target state="translated">TiltReading.yRotation</target>
        </trans-unit>
        <trans-unit id="5bfc07826ce0912b4b44d7cb4a15a824a93e3e6a" translate="yes" xml:space="preserve">
          <source>TiltSensor (QML type)</source>
          <target state="translated">틸트 센서 (QML 타입)</target>
        </trans-unit>
        <trans-unit id="038a5fd6c1a16ecaa0c1cb2602c35ff35d00afd4" translate="yes" xml:space="preserve">
          <source>TiltSensor QML Type</source>
          <target state="translated">기울기 센서 QML 유형</target>
        </trans-unit>
        <trans-unit id="0cb02b21861cb5e6aa4dbb2dcb660099089a41bd" translate="yes" xml:space="preserve">
          <source>TiltSensor.calibrate()</source>
          <target state="translated">TiltSensor.calibrate()</target>
        </trans-unit>
        <trans-unit id="e96320baaff58e4e5cf533d7d170b3d0daffae4c" translate="yes" xml:space="preserve">
          <source>TiltShift (QML type)</source>
          <target state="translated">TiltShift (QML type)</target>
        </trans-unit>
        <trans-unit id="774a2ea91c05d5a25cd55b95d36cfc10a1438dbb" translate="yes" xml:space="preserve">
          <source>TiltShift QML Type</source>
          <target state="translated">TiltShift QML Type</target>
        </trans-unit>
        <trans-unit id="9918c7c8a81842b24699e494bb8d18b3b67fa018" translate="yes" xml:space="preserve">
          <source>TiltShift.blurAmount</source>
          <target state="translated">TiltShift.blurAmount</target>
        </trans-unit>
        <trans-unit id="236c0eddb4c8b0879684cc6c869afa507b512d46" translate="yes" xml:space="preserve">
          <source>TiltShift.focusPosition</source>
          <target state="translated">TiltShift.focusPosition</target>
        </trans-unit>
        <trans-unit id="e27f4063cc5306c35943624a256932eb4a60b6dc" translate="yes" xml:space="preserve">
          <source>TiltShift.focusWidth</source>
          <target state="translated">TiltShift.focusWidth</target>
        </trans-unit>
        <trans-unit id="52aab2aa349628f1f1152a439f8d83b76dce0133" translate="yes" xml:space="preserve">
          <source>TiltShift.isInverted</source>
          <target state="translated">TiltShift.isInverted</target>
        </trans-unit>
        <trans-unit id="b768d2d8a72d7d34005730e5b011c968436f1fcc" translate="yes" xml:space="preserve">
          <source>TiltShift.isVertical</source>
          <target state="translated">TiltShift.isVertical</target>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="df9f2f189f171f2004391a431fbb4e10d42a352b" translate="yes" xml:space="preserve">
          <source>Time  (in nano seconds)</source>
          <target state="translated">시간 (나노초)</target>
        </trans-unit>
        <trans-unit id="dbe0c64294419b5fef0170f7a67cb31cb0d683dc" translate="yes" xml:space="preserve">
          <source>Time - sort by time modified</source>
          <target state="translated">시간-수정 된 시간으로 정렬</target>
        </trans-unit>
        <trans-unit id="5f86ab85e19a02d7d3c7e99d395f0a203eb9132d" translate="yes" xml:space="preserve">
          <source>Time Zone Offsets</source>
          <target state="translated">시간대 오프셋</target>
        </trans-unit>
        <trans-unit id="d458cd29adea646a8c3463a3bccc45a16b8250d4" translate="yes" xml:space="preserve">
          <source>Time attribute of the object being transferred.</source>
          <target state="translated">전송중인 오브젝트의 시간 속성</target>
        </trans-unit>
        <trans-unit id="eecacec77fd46eb2ec90c3b6a07a5f60b8e4cf81" translate="yes" xml:space="preserve">
          <source>Time stamp of GPS data.</source>
          <target state="translated">GPS 데이터의 타임 스탬프.</target>
        </trans-unit>
        <trans-unit id="0de70db1beefa1adababbd94b08c968a2d4e9f60" translate="yes" xml:space="preserve">
          <source>Time-based, by using timestamp, clock sequence, and MAC network card address (if available) for the node sections</source>
          <target state="translated">노드 섹션에 타임 스탬프, 클럭 시퀀스 및 MAC 네트워크 카드 주소 (사용 가능한 경우)를 사용하여 시간 기반</target>
        </trans-unit>
        <trans-unit id="18530197f7f6f6937126d7540f0f7aaa7f8e88f2" translate="yes" xml:space="preserve">
          <source>TimeExample QML extension plugin</source>
          <target state="translated">TimeExample QML 확장 플러그인</target>
        </trans-unit>
        <trans-unit id="ef1258d8d00628ceb619d9da1eb4d43759e2fd1a" translate="yes" xml:space="preserve">
          <source>TimeStamp</source>
          <target state="translated">TimeStamp</target>
        </trans-unit>
        <trans-unit id="0fd27374c7411b33295d582909be774e2a78db2c" translate="yes" xml:space="preserve">
          <source>TimeStamp Class</source>
          <target state="translated">타임 스탬프 클래스</target>
        </trans-unit>
        <trans-unit id="81b8c6c243681242dc92a6d859791b3ad56a6c59" translate="yes" xml:space="preserve">
          <source>TimeStamp::TimeStamp(&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">TimeStamp::TimeStamp(&lt;a href=&quot;#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d23495158341989fb87b416edd60e0a2ee4354db" translate="yes" xml:space="preserve">
          <source>TimeStamp::TimeStamp(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</source>
          <target state="translated">TimeStamp::TimeStamp(&lt;a href=&quot;qtglobal#qint64-typedef&quot;&gt;qint64&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="19ba8490e9c7d4c03208dd2253e23308c9a0136f" translate="yes" xml:space="preserve">
          <source>Timeline (QML type)</source>
          <target state="translated">Timeline (QML type)</target>
        </trans-unit>
        <trans-unit id="0e6f4c5ca4fa4bdaa5166b5bb32fd6629cc6bcb5" translate="yes" xml:space="preserve">
          <source>Timeline QML Type</source>
          <target state="translated">Timeline QML Type</target>
        </trans-unit>
        <trans-unit id="e1cacc334413ef3d92e1dd019bcd202b0733fa9f" translate="yes" xml:space="preserve">
          <source>Timeline for controlling animations</source>
          <target state="translated">애니메이션 제어를위한 타임 라인</target>
        </trans-unit>
        <trans-unit id="c7ba0b071946d47679be0fb2a8d5046b858ea719" translate="yes" xml:space="preserve">
          <source>Timeline.animations</source>
          <target state="translated">Timeline.animations</target>
        </trans-unit>
        <trans-unit id="d677a873281ea725c340a8fc85e4062ba6c6236d" translate="yes" xml:space="preserve">
          <source>Timeline.currentFrame</source>
          <target state="translated">Timeline.currentFrame</target>
        </trans-unit>
        <trans-unit id="14960e955f4f62ad9eb15849dfd4bc0f42b6caae" translate="yes" xml:space="preserve">
          <source>Timeline.enabled</source>
          <target state="translated">Timeline.enabled</target>
        </trans-unit>
        <trans-unit id="a3657c767e95f182f449ca19e8e5e60023a992d6" translate="yes" xml:space="preserve">
          <source>Timeline.endFrame</source>
          <target state="translated">Timeline.endFrame</target>
        </trans-unit>
        <trans-unit id="160c9919021a563df53d4059d84044212b782e69" translate="yes" xml:space="preserve">
          <source>Timeline.keyframes</source>
          <target state="translated">Timeline.keyframes</target>
        </trans-unit>
        <trans-unit id="3b1be07abb9ab86ab5a9d80210c2104599360cfd" translate="yes" xml:space="preserve">
          <source>Timeline.startFrame</source>
          <target state="translated">Timeline.startFrame</target>
        </trans-unit>
        <trans-unit id="5107834cade1a44eb6a3a1fcba24a76bcdf2b13d" translate="yes" xml:space="preserve">
          <source>TimelineAnimation (QML type)</source>
          <target state="translated">TimelineAnimation (QML type)</target>
        </trans-unit>
        <trans-unit id="34a58dd71f1a95f83e6357152a64dfaf24c8b85c" translate="yes" xml:space="preserve">
          <source>TimelineAnimation QML Type</source>
          <target state="translated">TimelineAnimation QML Type</target>
        </trans-unit>
        <trans-unit id="09a0836f7296f738ce5e6a1ba680a4ae4379fd81" translate="yes" xml:space="preserve">
          <source>TimelineAnimation.finished()</source>
          <target state="translated">TimelineAnimation.finished()</target>
        </trans-unit>
        <trans-unit id="7d513903f365dee487612f0a51f97c0af4e5f786" translate="yes" xml:space="preserve">
          <source>TimelineAnimation.pingPong</source>
          <target state="translated">TimelineAnimation.pingPong</target>
        </trans-unit>
        <trans-unit id="65885a7a634228e9ea2d6401b354ae3bb1b825f7" translate="yes" xml:space="preserve">
          <source>TimeoutTransition</source>
          <target state="translated">TimeoutTransition</target>
        </trans-unit>
        <trans-unit id="55a6ffceeb1e147d0ce610c500ac4544d992cce3" translate="yes" xml:space="preserve">
          <source>TimeoutTransition (QML type)</source>
          <target state="translated">타임 아웃 전환 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="a98ebcbf261e141495b4c747eefd519e988bda40" translate="yes" xml:space="preserve">
          <source>TimeoutTransition QML Type</source>
          <target state="translated">TimeoutTransition QML 유형</target>
        </trans-unit>
        <trans-unit id="4fcc01790a0659db1599ae2a60afb494cf792852" translate="yes" xml:space="preserve">
          <source>TimeoutTransition is part of &lt;a href=&quot;qmlstatemachine&quot;&gt;The Declarative State Machine Framework&lt;/a&gt;.</source>
          <target state="translated">TimeoutTransition is part of &lt;a href=&quot;qmlstatemachine&quot;&gt;The Declarative State Machine Framework&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="da970b5ad07cc1a02dc0ec779307a5f772ff0450" translate="yes" xml:space="preserve">
          <source>TimeoutTransition.timeout</source>
          <target state="translated">TimeoutTransition.timeout</target>
        </trans-unit>
        <trans-unit id="9d9cec22f36fd2bb99d5fe8c4723347bec202ca5" translate="yes" xml:space="preserve">
          <source>Timer</source>
          <target state="translated">Timer</target>
        </trans-unit>
        <trans-unit id="cf87b74e515e894f3a1db836dd9d04b0dbb942ee" translate="yes" xml:space="preserve">
          <source>Timer (QML type)</source>
          <target state="translated">타이머 (QML 타입)</target>
        </trans-unit>
        <trans-unit id="ab6f4e525fe8eaa3723f7554b2f61279c783e947" translate="yes" xml:space="preserve">
          <source>Timer QML Type</source>
          <target state="translated">타이머 QML 유형</target>
        </trans-unit>
        <trans-unit id="5bc4dfb8ac0e86d1780fa4cf1cfd3efe49a8a923" translate="yes" xml:space="preserve">
          <source>Timer events are sent at regular intervals to objects that have started one or more timers. Each timer has a unique identifier. A timer is started with &lt;a href=&quot;qobject#startTimer&quot;&gt;QObject::startTimer&lt;/a&gt;().</source>
          <target state="translated">타이머 이벤트는 정기적으로 하나 이상의 타이머를 시작한 개체로 전송됩니다. 각 타이머에는 고유 식별자가 있습니다. 타이머는 &lt;a href=&quot;qobject#startTimer&quot;&gt;QObject :: startTimer&lt;/a&gt; ()로 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="519ab8eca94f5aae9736637347aaf35527562209" translate="yes" xml:space="preserve">
          <source>Timer events for objects</source>
          <target state="translated">객체의 타이머 이벤트</target>
        </trans-unit>
        <trans-unit id="5b5b6ac99e699a92e95ebc7551671535ee232ef7" translate="yes" xml:space="preserve">
          <source>Timer types</source>
          <target state="translated">타이머 유형</target>
        </trans-unit>
        <trans-unit id="72ae00dc956dc5a1e6d4aff7c13ecbb7d79e0839" translate="yes" xml:space="preserve">
          <source>Timer.interval</source>
          <target state="translated">Timer.interval</target>
        </trans-unit>
        <trans-unit id="ec45e0cbea8d8b92cad6657591fdf2375ce1baa7" translate="yes" xml:space="preserve">
          <source>Timer.repeat</source>
          <target state="translated">Timer.repeat</target>
        </trans-unit>
        <trans-unit id="b69c30408b43f65301d2ca6bbb1d4253ff625226" translate="yes" xml:space="preserve">
          <source>Timer.restart()</source>
          <target state="translated">Timer.restart()</target>
        </trans-unit>
        <trans-unit id="dea26de05bee1dc789346800c02929ca8161f959" translate="yes" xml:space="preserve">
          <source>Timer.running</source>
          <target state="translated">Timer.running</target>
        </trans-unit>
        <trans-unit id="68fca54c892ed8115fe16a2ca295987b82732716" translate="yes" xml:space="preserve">
          <source>Timer.start()</source>
          <target state="translated">Timer.start()</target>
        </trans-unit>
        <trans-unit id="464ee22a6605fc707ee61cbe4b6acf2a62a27242" translate="yes" xml:space="preserve">
          <source>Timer.stop()</source>
          <target state="translated">Timer.stop()</target>
        </trans-unit>
        <trans-unit id="fdded1eca4bccd92062623639fb22ead2d036f83" translate="yes" xml:space="preserve">
          <source>Timer.triggered()</source>
          <target state="translated">Timer.triggered()</target>
        </trans-unit>
        <trans-unit id="b3da4b736217304342be104a49c53e113a53fbaa" translate="yes" xml:space="preserve">
          <source>Timer.triggeredOnStart</source>
          <target state="translated">Timer.triggeredOnStart</target>
        </trans-unit>
        <trans-unit id="497d4d77970dc0f8cf3c3cdf9b8eb52fc9462a39" translate="yes" xml:space="preserve">
          <source>TimerInfo Struct</source>
          <target state="translated">TimerInfo 구조</target>
        </trans-unit>
        <trans-unit id="41837d3d18a0f8ec43137476fdd1a1f438dde38e" translate="yes" xml:space="preserve">
          <source>TimerInfo::TimerInfo()</source>
          <target state="translated">TimerInfo::TimerInfo()</target>
        </trans-unit>
        <trans-unit id="c2990280c73174d6dd6bcfa47f7ffa872db60cf8" translate="yes" xml:space="preserve">
          <source>TimerInfo::TimerInfo(int</source>
          <target state="translated">TimerInfo::TimerInfo(int</target>
        </trans-unit>
        <trans-unit id="7fde205fa220e53c1f989fd481500574b7c371f1" translate="yes" xml:space="preserve">
          <source>TimerInfo::interval</source>
          <target state="translated">TimerInfo::interval</target>
        </trans-unit>
        <trans-unit id="5e0bc1c92ffd3fafc8f5364aecd3aefd01fbb69b" translate="yes" xml:space="preserve">
          <source>TimerInfo::timerId</source>
          <target state="translated">TimerInfo::timerId</target>
        </trans-unit>
        <trans-unit id="f1dff395b38157a299b7aa9757924f8c112f2473" translate="yes" xml:space="preserve">
          <source>TimerInfo::timerType</source>
          <target state="translated">TimerInfo::timerType</target>
        </trans-unit>
        <trans-unit id="841cd03a97cd854590864d79ae48ee749c5e902e" translate="yes" xml:space="preserve">
          <source>Timers</source>
          <target state="translated">Timers</target>
        </trans-unit>
        <trans-unit id="b5b491aac3bd26ca261e3f188a1a01228d0ddf6b" translate="yes" xml:space="preserve">
          <source>Timestamps values are microseconds since a fixed point. You can use timestamps to see how far apart two sensor readings are.</source>
          <target state="translated">타임 스탬프 값은 고정 소수점 이후 마이크로 초입니다. 타임 스탬프를 사용하여 두 센서 판독 값이 얼마나 떨어져 있는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ecd84ddfb662a7926d34883ae55f89c17a0f006c" translate="yes" xml:space="preserve">
          <source>Timing Considerations</source>
          <target state="translated">타이밍 고려 사항</target>
        </trans-unit>
        <trans-unit id="0df3c5d2117fe663102f4996198057ecd01aab54" translate="yes" xml:space="preserve">
          <source>Tint is most useful when a subtle change is intended to be conveyed due to some event; you can then use tinting to more effectively tune the visible color.</source>
          <target state="translated">색조는 일부 이벤트로 인해 미묘한 변화가 전달 될 때 가장 유용합니다. 그런 다음 색조를 사용하여 눈에 보이는 색상을보다 효과적으로 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d53e4d941a0d8d4d4277ad07d57d91297b8749b7" translate="yes" xml:space="preserve">
          <source>TinyCBOR, version 0.6+patches</source>
          <target state="translated">TinyCBOR, 버전 0.6+ 패치</target>
        </trans-unit>
        <trans-unit id="9f495111da803097b7b34ec71369826f0c6d2bf4" translate="yes" xml:space="preserve">
          <source>Tip end of a stylus-like device (the narrow end of the pen).</source>
          <target state="translated">스타일러스와 같은 장치의 끝 (펜의 좁은 끝)</target>
        </trans-unit>
        <trans-unit id="8911538c52924d154c723c7d1e6f7c9cb22c0e61" translate="yes" xml:space="preserve">
          <source>Tips For QML Application Developers</source>
          <target state="translated">QML 애플리케이션 개발자를위한 팁</target>
        </trans-unit>
        <trans-unit id="3f1d7cd80b33ea00a648efe4bbe44baacebce1fa" translate="yes" xml:space="preserve">
          <source>Tips for Porting Existing HTML5 Canvas Applications</source>
          <target state="translated">기존 HTML5 캔버스 응용 프로그램 포팅 팁</target>
        </trans-unit>
        <trans-unit id="dcd890ad3d53d8eb5a934d619caa4aa389f9c1a5" translate="yes" xml:space="preserve">
          <source>Tips for Using Layouts</source>
          <target state="translated">레이아웃 사용을위한 팁</target>
        </trans-unit>
        <trans-unit id="768e0c1c69573fb588f61f1308a015c11468e05f" translate="yes" xml:space="preserve">
          <source>Title</source>
          <target state="translated">Title</target>
        </trans-unit>
        <trans-unit id="bdca972c5ffd1202222bd6267a51a55f1b7c6823" translate="yes" xml:space="preserve">
          <source>Title Bar</source>
          <target state="translated">제목 표시 줄</target>
        </trans-unit>
        <trans-unit id="cda33cd4c2e9a12d11bb3188904556c81e873947" translate="yes" xml:space="preserve">
          <source>Title for the menu as a submenu or in a menubar.</source>
          <target state="translated">하위 메뉴 또는 메뉴 표시 줄의 메뉴 제목입니다.</target>
        </trans-unit>
        <trans-unit id="608fe97562074e03db3a4737b42d1567b2d29e15" translate="yes" xml:space="preserve">
          <source>Title from column axis</source>
          <target state="translated">열 축의 제목</target>
        </trans-unit>
        <trans-unit id="049f3e1ee87dde6ecea41a19b6ec22bdfecb597f" translate="yes" xml:space="preserve">
          <source>Title from row axis</source>
          <target state="translated">행 축의 제목</target>
        </trans-unit>
        <trans-unit id="aba70763c45afbe7628d9df71fb42e84afbcb149" translate="yes" xml:space="preserve">
          <source>Title from value axis</source>
          <target state="translated">가치 축의 제목</target>
        </trans-unit>
        <trans-unit id="f35e8ff8046388721784170578e6dee8fd68a29f" translate="yes" xml:space="preserve">
          <source>Title from x-axis</source>
          <target state="translated">x 축 제목</target>
        </trans-unit>
        <trans-unit id="f1a0dfcc4afcf4f96d1a178a82f77a6981428d49" translate="yes" xml:space="preserve">
          <source>Title from y-axis</source>
          <target state="translated">y 축 제목</target>
        </trans-unit>
        <trans-unit id="b5e8cd54095e433e45e8483a1d49349d827862f1" translate="yes" xml:space="preserve">
          <source>Title from z-axis</source>
          <target state="translated">z 축 제목</target>
        </trans-unit>
        <trans-unit id="3f75cecf904f02abe41d1a56b16a1a591ae2602c" translate="yes" xml:space="preserve">
          <source>To abort saving due to an application error, call &lt;a href=&quot;qsavefile#cancelWriting&quot;&gt;cancelWriting&lt;/a&gt;(), so that even a call to &lt;a href=&quot;qsavefile#commit&quot;&gt;commit&lt;/a&gt;() later on will not save.</source>
          <target state="translated">애플리케이션 오류로 인해 저장을 중단하려면 &lt;a href=&quot;qsavefile#cancelWriting&quot;&gt;cancelWriting&lt;/a&gt; ()을 호출하여 나중에 &lt;a href=&quot;qsavefile#commit&quot;&gt;커밋&lt;/a&gt; () 하기위한 호출도 저장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="97e5691d0f32e4dfd78ace3c639c1d308ab03c22" translate="yes" xml:space="preserve">
          <source>To accept or reject a request, set &lt;a href=&quot;qml-qtwebengine-webenginenavigationrequest#action-prop&quot;&gt;action&lt;/a&gt; to &lt;code&gt;WebEngineNavigationRequest.AcceptRequest&lt;/code&gt; or &lt;code&gt;WebEngineNavigationRequest.IgnoreRequest&lt;/code&gt;.</source>
          <target state="translated">요청을 승인하거나 거부하려면 &lt;a href=&quot;qml-qtwebengine-webenginenavigationrequest#action-prop&quot;&gt;조치&lt;/a&gt; 를 &lt;code&gt;WebEngineNavigationRequest.AcceptRequest&lt;/code&gt; 또는 &lt;code&gt;WebEngineNavigationRequest.IgnoreRequest&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="e293dbb3d776a5b1f2ed284c6fca2a8d3bc965bd" translate="yes" xml:space="preserve">
          <source>To accept other forms of data, these functions must be reimplemented:</source>
          <target state="translated">다른 형식의 데이터를 승인하려면 다음 기능을 다시 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="165782c939ab77fa1f04d4150188d5bff4c40caf" translate="yes" xml:space="preserve">
          <source>To access a database with &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; or &lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt;, create and open one or more database connections. Database connections are normally identified by connection name,</source>
          <target state="translated">&lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; 또는 &lt;a href=&quot;qsqlquerymodel&quot;&gt;QSqlQueryModel&lt;/a&gt; 로 데이터베이스에 액세스하려면 하나 이상의 데이터베이스 연결을 작성하고여십시오. 데이터베이스 연결은 일반적으로 연결 이름으로 식별됩니다.</target>
        </trans-unit>
        <trans-unit id="41116874bc1abc3b9f368a68ec9778bf63a52676" translate="yes" xml:space="preserve">
          <source>To access a specific row, the &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#getRow-method&quot;&gt;getRow()&lt;/a&gt; function can be used. It's also possible to access the model's JavaScript data directly via the &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#rows-prop&quot;&gt;rows&lt;/a&gt; property, but it is not possible to modify the model data this way.</source>
          <target state="translated">To access a specific row, the &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#getRow-method&quot;&gt;getRow()&lt;/a&gt; function can be used. It's also possible to access the model's JavaScript data directly via the &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#rows-prop&quot;&gt;rows&lt;/a&gt; property, but it is not possible to modify the model data this way.</target>
        </trans-unit>
        <trans-unit id="6b6c415b7285bddbdd278bf09b46c96af58892f5" translate="yes" xml:space="preserve">
          <source>To access additional functions, applications can use &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;QVulkanInstance::getInstanceProcAddr&lt;/a&gt;() and vkGetDeviceProcAddr(). Applications can also decide to link to a Vulkan library directly, as many implementations export function symbols for the core commands. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetInstanceProcAddr.html&quot;&gt;the man page for vkGetInstanceProcAddr&lt;/a&gt; for more information.</source>
          <target state="translated">추가 기능에 액세스하기 위해 응용 프로그램은 &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;QVulkanInstance :: getInstanceProcAddr&lt;/a&gt; () 및 vkGetDeviceProcAddr ()을 사용할 수 있습니다 . 많은 구현에서 핵심 명령에 대한 함수 기호를 내보내므로 응용 프로그램은 Vulkan 라이브러리에 직접 연결하도록 결정할 수도 있습니다. 자세한 내용 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetInstanceProcAddr.html&quot;&gt;은 vkGetInstanceProcAddr 매뉴얼 페이지&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6d5be5fdb6e2b3a7c9eaf46b7f8dca39c132d2e9" translate="yes" xml:space="preserve">
          <source>To access additional functions, applications can use &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;QVulkanInstance::getInstanceProcAddr&lt;/a&gt;() and vkGetDeviceProcAddr(). Applications can also decide to link to a Vulkan library directly, as platforms with an appropriate loader will typically export function symbols for the core commands. See &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetInstanceProcAddr.html&quot;&gt;the man page for vkGetInstanceProcAddr&lt;/a&gt; for more information.</source>
          <target state="translated">추가 기능에 액세스하기 위해 응용 프로그램은 &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;QVulkanInstance :: getInstanceProcAddr&lt;/a&gt; () 및 vkGetDeviceProcAddr ()을 사용할 수 있습니다 . 적절한 로더가있는 플랫폼은 일반적으로 핵심 명령에 대한 기능 기호를 내보내므로 응용 프로그램은 Vulkan 라이브러리에 직접 연결하도록 결정할 수도 있습니다. 자세한 내용 &lt;a href=&quot;https://www.khronos.org/registry/vulkan/specs/1.0/man/html/vkGetInstanceProcAddr.html&quot;&gt;은 vkGetInstanceProcAddr 매뉴얼 페이지&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f2205cee1ece12f6b7a1282a11830cf39346886e" translate="yes" xml:space="preserve">
          <source>To access array elements, use the &lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty(quint32 arrayIndex, const QJSValue &amp;amp;value)&lt;/a&gt; overload instead.</source>
          <target state="translated">배열 요소에 액세스하려면 대신 &lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty (quint32 arrayIndex, const QJSValue &amp;amp; value)&lt;/a&gt; 오버로드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b2c4c23a2465e91f3424ab7d6bb54b4b2ab91828" translate="yes" xml:space="preserve">
          <source>To access individual segments you can use standard list accessors: 'path.length' indicates the number of objects and 'path[index starting from zero]' gives the actual object.</source>
          <target state="translated">개별 세그먼트에 액세스하려면 표준 목록 접근자를 사용할 수 있습니다. 'path.length'는 객체 수를 나타내고 'path [index from zero from]]는 실제 객체를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="84ad53d66c568536d8e5fd405545ae4e9ac4aba0" translate="yes" xml:space="preserve">
          <source>To access individual segments you can use standard list accessors: 'segments.length' indicates the number of objects and 'segments[index starting from zero]' gives the actual objects.</source>
          <target state="translated">개별 세그먼트에 액세스하려면 표준 목록 접근자를 사용할 수 있습니다. 'segments.length'는 객체 수를 나타내고 'segments [index from zero]]는 실제 객체를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="0ed7ace94bb589e27eba567ca1aa49d7d1a82b12" translate="yes" xml:space="preserve">
          <source>To access the &lt;code&gt;VkInstance&lt;/code&gt; handle the &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance&lt;/a&gt; wraps, call &lt;a href=&quot;qvulkaninstance#vkInstance&quot;&gt;vkInstance&lt;/a&gt;(). To resolve Vulkan functions, call &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;getInstanceProcAddr&lt;/a&gt;(). For core Vulkan commands manual resolving is not necessary as they are provided via the &lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt; and &lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; objects accessible via &lt;a href=&quot;qvulkaninstance#functions&quot;&gt;functions&lt;/a&gt;() and &lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;deviceFunctions&lt;/a&gt;().</source>
          <target state="translated">액세스하기 위해 &lt;code&gt;VkInstance&lt;/code&gt; 의 핸들에게 &lt;a href=&quot;qvulkaninstance&quot;&gt;QVulkanInstance의&lt;/a&gt; 랩을 호출 &lt;a href=&quot;qvulkaninstance#vkInstance&quot;&gt;vkInstance을&lt;/a&gt; (). Vulkan 함수를 해결하려면 &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;getInstanceProcAddr&lt;/a&gt; ()를 호출하십시오 . 그들이 통해 제공되므로 핵심 VULKAN 명령의 매뉴얼 해결이 필요하지 않습니다 &lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt; 및 &lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; 를 통해 접근 가능한 객체 &lt;a href=&quot;qvulkaninstance#functions&quot;&gt;함수&lt;/a&gt; ()와 &lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;deviceFunctions&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="100a3fef37a40843bb19d6facfa25ce617df754a" translate="yes" xml:space="preserve">
          <source>To access the &lt;code&gt;VkInstance&lt;/code&gt; handle the QVulkanInstance wraps, call &lt;a href=&quot;qvulkaninstance#vkInstance&quot;&gt;vkInstance&lt;/a&gt;(). To resolve Vulkan functions, call &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;getInstanceProcAddr&lt;/a&gt;(). For core Vulkan commands manual resolving is not necessary as they are provided via the &lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt; and &lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; objects accessible via &lt;a href=&quot;qvulkaninstance#functions&quot;&gt;functions&lt;/a&gt;() and &lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;deviceFunctions&lt;/a&gt;().</source>
          <target state="translated">To access the &lt;code&gt;VkInstance&lt;/code&gt; handle the QVulkanInstance wraps, call &lt;a href=&quot;qvulkaninstance#vkInstance&quot;&gt;vkInstance&lt;/a&gt;(). To resolve Vulkan functions, call &lt;a href=&quot;qvulkaninstance#getInstanceProcAddr&quot;&gt;getInstanceProcAddr&lt;/a&gt;(). For core Vulkan commands manual resolving is not necessary as they are provided via the &lt;a href=&quot;qvulkanfunctions&quot;&gt;QVulkanFunctions&lt;/a&gt; and &lt;a href=&quot;qvulkandevicefunctions&quot;&gt;QVulkanDeviceFunctions&lt;/a&gt; objects accessible via &lt;a href=&quot;qvulkaninstance#functions&quot;&gt;functions&lt;/a&gt;() and &lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;deviceFunctions&lt;/a&gt;().</target>
        </trans-unit>
        <trans-unit id="2ecd238d4dc3239eae697d061e4bc002d48cbc55" translate="yes" xml:space="preserve">
          <source>To access the data returned by a query, use value(int). Each field in the data returned by a &lt;code&gt;SELECT&lt;/code&gt; statement is accessed by passing the field's position in the statement, starting from 0. This makes using &lt;code&gt;SELECT *&lt;/code&gt; queries inadvisable because the order of the fields returned is indeterminate.</source>
          <target state="translated">쿼리에서 반환 한 데이터에 액세스하려면 value (int)를 사용하십시오. &lt;code&gt;SELECT&lt;/code&gt; 문이 리턴 한 데이터의 각 필드는 0부터 시작하여 명령문의 필드 위치를 전달하여 액세스 합니다. 리턴 된 필드의 순서가 불확실하므로 &lt;code&gt;SELECT *&lt;/code&gt; 조회를 사용하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="029da581aa9bfb21eda3da3cea8f7710134bc973" translate="yes" xml:space="preserve">
          <source>To access the hierarchical category model it is necessary to use a &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt; to access the child items.</source>
          <target state="translated">계층 적 카테고리 모델에 액세스하려면 &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt; 을 사용하여 하위 항목에 액세스해야합니다.</target>
        </trans-unit>
        <trans-unit id="785f12eb79d50d7e0d3b8888c0839dd54e5b3e20" translate="yes" xml:space="preserve">
          <source>To access the hierarchical category model it is necessary to use a DelegateModel to access the child items.</source>
          <target state="translated">To access the hierarchical category model it is necessary to use a DelegateModel to access the child items.</target>
        </trans-unit>
        <trans-unit id="7a9b6c42d27b7cd15328ca9a50a97846312eb051" translate="yes" xml:space="preserve">
          <source>To access the strings in a &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; returned by an &lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;XQuery evaluation&lt;/a&gt;, the &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; must be accessed with the &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt; from the instance of &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; that was used for the evaluation.</source>
          <target state="translated">A의 문자열에 액세스 할 수 &lt;a href=&quot;qxmlname&quot;&gt;QXmlName가&lt;/a&gt; 에 의해 반환 &lt;a href=&quot;qxmlquery#evaluateTo&quot;&gt;XQuery를 평가&lt;/a&gt; 의 &lt;a href=&quot;qxmlname&quot;&gt;QXmlName는&lt;/a&gt; 에 액세스해야합니다 &lt;a href=&quot;qxmlnamepool&quot;&gt;이름 풀&lt;/a&gt; 의 인스턴스에서 &lt;a href=&quot;qxmlquery&quot;&gt;QXmlQuery&lt;/a&gt; 평가에 사용되었다.</target>
        </trans-unit>
        <trans-unit id="82adea037c6efc168185274af650eb77ab634cfe" translate="yes" xml:space="preserve">
          <source>To access top-level items in a model, specify a null model index as the parent index with &lt;code&gt;QModelIndex()&lt;/code&gt;.</source>
          <target state="translated">모델의 최상위 항목에 액세스하려면 &lt;code&gt;QModelIndex()&lt;/code&gt; 사용하여 널 모델 색인을 상위 색인으로 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a6a0224dc1e99c5a439537b98f55da8a83b7075" translate="yes" xml:space="preserve">
          <source>To accommodate new functionality, the datastream serialization format of some Qt classes has changed in some versions of Qt. If you want to read data that was created by an earlier version of Qt, or write data that can be read by a program that was compiled with an earlier version of Qt, use this function to modify the serialization format used by &lt;a href=&quot;qdatastream&quot;&gt;QDataStream&lt;/a&gt;.</source>
          <target state="translated">새로운 기능을 수용하기 위해 일부 Qt 클래스의 데이터 스트림 직렬화 형식이 일부 Qt 버전에서 변경되었습니다. 이전 버전의 Qt로 작성된 데이터를 읽거나 이전 버전의 Qt로 컴파일 된 프로그램이 읽을 수있는 데이터를 쓰려면이 함수를 사용하여 &lt;a href=&quot;qdatastream&quot;&gt;QDataStream에서&lt;/a&gt; 사용하는 직렬화 형식을 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="6519201e41ad153fe9e9b937057b005076d3ae1d" translate="yes" xml:space="preserve">
          <source>To accommodate the &quot;Ask user&quot; use case the default configuration can be of type &lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;QNetworkConfiguration::UserChoice&lt;/a&gt;. A user choice configuration is resolved as part of the &lt;a href=&quot;qnetworksession#open&quot;&gt;QNetworkSession::open&lt;/a&gt;() call. Note that a &lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;UserChoice&lt;/a&gt; configuration is only ever returned via &lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;QNetworkConfigurationManager::defaultConfiguration&lt;/a&gt;() and not &lt;a href=&quot;qnetworkconfigurationmanager#allConfigurations&quot;&gt;QNetworkConfigurationManager::allConfigurations&lt;/a&gt;().</source>
          <target state="translated">&quot;사용자에게 요청&quot;사용 사례를 수용하기 위해 기본 구성은 &lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;QNetworkConfiguration :: UserChoice 유형일&lt;/a&gt; 수 있습니다 . 사용자 선택 구성은 &lt;a href=&quot;qnetworksession#open&quot;&gt;QNetworkSession :: open&lt;/a&gt; () 호출의 일부로 해결됩니다 . &amp;bull; 그래도 참고 &lt;a href=&quot;qnetworkconfiguration#Type-enum&quot;&gt;UserChoice의&lt;/a&gt; 구성은 오직 통해 반환 &lt;a href=&quot;qnetworkconfigurationmanager#defaultConfiguration&quot;&gt;QNetworkConfigurationManager :: defaultConfiguration을&lt;/a&gt; ()하지 &lt;a href=&quot;qnetworkconfigurationmanager#allConfigurations&quot;&gt;QNetworkConfigurationManager :: allConfigurations&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="b68df3ee02ac902304a31eb7444cf0c358e42806" translate="yes" xml:space="preserve">
          <source>To activate support for client certificates, an application needs to listen to the &lt;a href=&quot;qwebenginepage#selectClientCertificate&quot;&gt;QWebEnginePage::selectClientCertificate&lt;/a&gt; or &lt;a href=&quot;qml-qtwebengine-webengineview#selectClientCertificate-signal&quot;&gt;WebEngineView.selectClientCertificate&lt;/a&gt; signals and select one of the offered certificates. For applications that can navigate to untrusted web sites, it is recommended to always give the user a choice before uniquely identifying them to a remote server.</source>
          <target state="translated">To activate support for client certificates, an application needs to listen to the &lt;a href=&quot;qwebenginepage#selectClientCertificate&quot;&gt;QWebEnginePage::selectClientCertificate&lt;/a&gt; or &lt;a href=&quot;qml-qtwebengine-webengineview#selectClientCertificate-signal&quot;&gt;WebEngineView.selectClientCertificate&lt;/a&gt; signals and select one of the offered certificates. For applications that can navigate to untrusted web sites, it is recommended to always give the user a choice before uniquely identifying them to a remote server.</target>
        </trans-unit>
        <trans-unit id="74fd8f76a0c68751f3cbb80b331461d2b50f4b9a" translate="yes" xml:space="preserve">
          <source>To activate support for client certificates, an application needs to listen to the &lt;a href=&quot;qwebenginepage#selectClientCertificate&quot;&gt;QWebEnginePage::selectClientCertificate&lt;/a&gt; signal and select one of the offered certificates. For applications that can navigate to untrusted web sites, it is recommended to always give the user a choice before uniquely identifying them to a remote server.</source>
          <target state="translated">클라이언트 인증서에 대한 지원을 활성화하려면 응용 프로그램은 &lt;a href=&quot;qwebenginepage#selectClientCertificate&quot;&gt;QWebEnginePage :: selectClientCertificate&lt;/a&gt; 신호 를 청취 하고 제공된 인증서 중 하나를 선택해야합니다. 신뢰할 수없는 웹 사이트로 이동할 수있는 응용 프로그램의 경우 원격 서버에서 고유하게 식별하기 전에 항상 사용자에게 선택권을주는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="008d2023a3e72262ce922c41fdfbfd7cb8d07295" translate="yes" xml:space="preserve">
          <source>To activate the developer tools, start an application that uses Qt WebEngine with the command-line arguments:</source>
          <target state="translated">개발자 도구를 활성화하려면 명령 행 인수와 함께 Qt WebEngine을 사용하는 애플리케이션을 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="ea17decfc6fb9b22fd5ae885d1a70a6c0c48cbc9" translate="yes" xml:space="preserve">
          <source>To actually make use of the custom URL scheme, a &lt;a href=&quot;qwebengineurlschemehandler&quot;&gt;QWebEngineUrlSchemeHandler&lt;/a&gt; must be created and registered in a profile.</source>
          <target state="translated">실제로 사용자 정의 URL 스킴을 사용하려면 &lt;a href=&quot;qwebengineurlschemehandler&quot;&gt;QWebEngineUrlSchemeHandler&lt;/a&gt; 를 작성하고 프로파일에 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="233e5076604c8d35a691dca9ba363ed57d67870b" translate="yes" xml:space="preserve">
          <source>To add &quot;What's This?&quot; text to a widget or an action, you simply call &lt;a href=&quot;qwidget#whatsThis-prop&quot;&gt;QWidget::setWhatsThis&lt;/a&gt;() or &lt;a href=&quot;qaction#whatsThis-prop&quot;&gt;QAction::setWhatsThis&lt;/a&gt;().</source>
          <target state="translated">&quot;무엇입니까?&quot;를 추가하려면 &lt;a href=&quot;qwidget#whatsThis-prop&quot;&gt;QWidget :: setWhatsThis&lt;/a&gt; () 또는 &lt;a href=&quot;qaction#whatsThis-prop&quot;&gt;QAction :: setWhatsThis&lt;/a&gt; () 를 호출하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="561cadd3bd982353e84991715bd15854465fde6e" translate="yes" xml:space="preserve">
          <source>To add a dock widget to a form, drag one from the &lt;b&gt;Containers&lt;/b&gt; section of the widget box, and drop it onto the main form area. Do not add the dock widget to an existing layout. Instead, open the &lt;b&gt;Property Editor&lt;/b&gt; and enable the &lt;b&gt;docked&lt;/b&gt; property to place it in a dock area.</source>
          <target state="translated">독 위젯을 양식에 추가하려면 위젯 상자 의 &lt;b&gt;컨테이너&lt;/b&gt; 섹션 에서 독 위젯을 끌어서 기본 양식 영역에 놓으십시오. 독 위젯을 기존 레이아웃에 추가하지 마십시오. 대신 &lt;b&gt;속성 편집기를&lt;/b&gt; 열고 &lt;b&gt;고정&lt;/b&gt; 속성을 활성화하여 &lt;b&gt;고정&lt;/b&gt; 영역에 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="35b4d064014acabeb9316dc5a73f08b604540da5" translate="yes" xml:space="preserve">
          <source>To add a dynamic property, click on the &lt;b&gt;Add&lt;/b&gt; button</source>
          <target state="translated">동적 속성을 추가하려면 &lt;b&gt;추가&lt;/b&gt; 버튼을 클릭하십시오</target>
        </trans-unit>
        <trans-unit id="a8a60b49e5dbd819d54aa15f3dd17f6a59fcd20d" translate="yes" xml:space="preserve">
          <source>To add a menu bar to the main window, we simply create the menus, and add them to the main window's menu bar. Note that the &lt;a href=&quot;qmainwindow#menuBar&quot;&gt;QMainWindow::menuBar&lt;/a&gt;() function will automatically create the menu bar the first time it is called. You can also call &lt;a href=&quot;qmainwindow#setMenuBar&quot;&gt;QMainWindow::setMenuBar&lt;/a&gt;() to use a custom menu bar in the main window.</source>
          <target state="translated">주 창에 메뉴 표시 줄을 추가하려면 메뉴를 만들고 주 창의 메뉴 표시 줄에 추가하면됩니다. 있습니다 &lt;a href=&quot;qmainwindow#menuBar&quot;&gt;QMainWindow ::의 도구 모음&lt;/a&gt; () 함수는 자동으로 메뉴 모음을 처음 호출 될 때 생성됩니다. &lt;a href=&quot;qmainwindow#setMenuBar&quot;&gt;QMainWindow :: setMenuBar&lt;/a&gt; ()를 호출 하여 주 창에서 사용자 정의 메뉴 표시 줄을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="13da36d650412cd07fe7d00c274a591a7dda9dab" translate="yes" xml:space="preserve">
          <source>To add a new page, select &lt;b&gt;Insert Page&lt;/b&gt; from the toolbox widget's context menu. You can add the page before or after the current page.</source>
          <target state="translated">새 페이지를 추가하려면 도구 상자 위젯의 상황에 맞는 메뉴에서 &lt;b&gt;페이지 삽입을&lt;/b&gt; 선택 &lt;b&gt;하십시오&lt;/b&gt; . 현재 페이지 앞이나 뒤에 페이지를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14b0e14dda6ed3e43b5d89d3c4cbdd43bcc989bb" translate="yes" xml:space="preserve">
          <source>To add a new tab:</source>
          <target state="translated">새 탭을 추가하려면</target>
        </trans-unit>
        <trans-unit id="25868537480596e4f22730b64ee229ad6be0c2b0" translate="yes" xml:space="preserve">
          <source>To add a placeholder, select an object of a suitable base class and choose &lt;b&gt;Promote to ...&lt;/b&gt; from the form's context menu. After entering the class name and header file in the lower part of the dialog, choose &lt;b&gt;Add&lt;/b&gt;. The placeholder class will now appear along with the base class in the upper list. Click the &lt;b&gt;Promote&lt;/b&gt; button to accept this choice.</source>
          <target state="translated">자리 표시자를 추가하려면 적절한 기본 클래스의 개체를 선택 하고 양식의 상황에 맞는 메뉴에서 &lt;b&gt;승격 대상을&lt;/b&gt; 선택 &lt;b&gt;하십시오&lt;/b&gt; . 대화 상자의 하단에 클래스 이름과 헤더 파일을 입력 한 후 &lt;b&gt;추가를&lt;/b&gt; 선택 &lt;b&gt;하십시오&lt;/b&gt; . 자리 표시 자 클래스가 이제 상위 목록에 기본 클래스와 함께 나타납니다. 이 선택 사항을 승인 하려면 &lt;b&gt;승격&lt;/b&gt; 단추를 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="58ed9015ce139add70c078b408b123047c1f1c8b" translate="yes" xml:space="preserve">
          <source>To add a system tray entry, create a &lt;a href=&quot;qsystemtrayicon&quot;&gt;QSystemTrayIcon&lt;/a&gt; object, call &lt;a href=&quot;qsystemtrayicon#setContextMenu&quot;&gt;setContextMenu&lt;/a&gt;() to provide a context menu for the icon, and call &lt;a href=&quot;qsystemtrayicon#show&quot;&gt;show&lt;/a&gt;() to make it visible in the system tray. Status notification messages (&quot;balloon messages&quot;) can be displayed at any time using &lt;a href=&quot;qsystemtrayicon#showMessage&quot;&gt;showMessage&lt;/a&gt;().</source>
          <target state="translated">시스템 트레이 항목을 추가하려면 &lt;a href=&quot;qsystemtrayicon&quot;&gt;QSystemTrayIcon&lt;/a&gt; 객체를 만들고 &lt;a href=&quot;qsystemtrayicon#setContextMenu&quot;&gt;setContextMenu&lt;/a&gt; ()를 호출하여 아이콘의 컨텍스트 메뉴를 제공하고 &lt;a href=&quot;qsystemtrayicon#show&quot;&gt;show&lt;/a&gt; ()를 호출 하여 시스템 트레이에 표시합니다. &lt;a href=&quot;qsystemtrayicon#showMessage&quot;&gt;showMessage&lt;/a&gt; ()를 사용하면 언제든지 상태 알림 메시지 ( &quot;풍선 메시지&quot;)를 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b9bacb7deb5913f022aa849724af968ff5bd30af" translate="yes" xml:space="preserve">
          <source>To add a system tray entry, create a QSystemTrayIcon object, call &lt;a href=&quot;qsystemtrayicon#setContextMenu&quot;&gt;setContextMenu&lt;/a&gt;() to provide a context menu for the icon, and call &lt;a href=&quot;qsystemtrayicon#show&quot;&gt;show&lt;/a&gt;() to make it visible in the system tray. Status notification messages (&quot;balloon messages&quot;) can be displayed at any time using &lt;a href=&quot;qsystemtrayicon#showMessage&quot;&gt;showMessage&lt;/a&gt;().</source>
          <target state="translated">To add a system tray entry, create a QSystemTrayIcon object, call &lt;a href=&quot;qsystemtrayicon#setContextMenu&quot;&gt;setContextMenu&lt;/a&gt;() to provide a context menu for the icon, and call &lt;a href=&quot;qsystemtrayicon#show&quot;&gt;show&lt;/a&gt;() to make it visible in the system tray. Status notification messages (&quot;balloon messages&quot;) can be displayed at any time using &lt;a href=&quot;qsystemtrayicon#showMessage&quot;&gt;showMessage&lt;/a&gt;().</target>
        </trans-unit>
        <trans-unit id="ba896642afdd8acf0fd8fdf53c25f05373dad0d2" translate="yes" xml:space="preserve">
          <source>To add a visual effect to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, for example, you can use one of the standard effects, or alternately, create your own effect by creating a subclass of &lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt;. The effect can then be installed on the item using &lt;a href=&quot;qgraphicsitem#setGraphicsEffect&quot;&gt;QGraphicsItem::setGraphicsEffect&lt;/a&gt;().</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem에&lt;/a&gt; 시각적 효과를 추가하려면 표준 효과 중 하나를 사용하거나 &lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt; 의 서브 클래스를 작성하여 직접 효과를 작성할 수 있습니다 . 그런 다음 &lt;a href=&quot;qgraphicsitem#setGraphicsEffect&quot;&gt;QGraphicsItem :: setGraphicsEffect&lt;/a&gt; ()를 사용하여 항목에 효과를 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f59fc17a85900b1d7cdc39eab7beb3419faaf471" translate="yes" xml:space="preserve">
          <source>To add a visual effect to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, for example, you can use one of the standard effects, or alternately, create your own effect by creating a subclass of QGraphicsEffect. The effect can then be installed on the item using &lt;a href=&quot;qgraphicsitem#setGraphicsEffect&quot;&gt;QGraphicsItem::setGraphicsEffect&lt;/a&gt;().</source>
          <target state="translated">To add a visual effect to a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt;, for example, you can use one of the standard effects, or alternately, create your own effect by creating a subclass of QGraphicsEffect. The effect can then be installed on the item using &lt;a href=&quot;qgraphicsitem#setGraphicsEffect&quot;&gt;QGraphicsItem::setGraphicsEffect&lt;/a&gt;().</target>
        </trans-unit>
        <trans-unit id="f1b1d0f0c7cea6647f41635633e72115c21db2de" translate="yes" xml:space="preserve">
          <source>To add an action to a menu or a toolbar, simply press the left mouse button over the action in the action editor, and drag it to the preferred location.</source>
          <target state="translated">메뉴 또는 도구 모음에 조치를 추가하려면 조치 편집기에서 조치 위에 마우스 왼쪽 단추를 누르고 원하는 위치로 끌어 놓으십시오.</target>
        </trans-unit>
        <trans-unit id="d47ec3809bf32413165beac2f60d6c251fc49a17" translate="yes" xml:space="preserve">
          <source>To add content to a group box, you can reparent it to its &lt;a href=&quot;qml-qtquick-controls-groupbox#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; property.</source>
          <target state="translated">그룹 상자에 내용을 추가하기 위해 해당 내용을 &lt;a href=&quot;qml-qtquick-controls-groupbox#contentItem-prop&quot;&gt;contentItem&lt;/a&gt; 속성으로 다시 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="22a6d502fb12e63290739a33467a08706c0717b5" translate="yes" xml:space="preserve">
          <source>To add custom types to the testdata, the type must be registered with &lt;a href=&quot;qmetatype&quot;&gt;QMetaType&lt;/a&gt; via &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qmetatype&quot;&gt;테스트 데이터&lt;/a&gt; 에 사용자 정의 유형을 추가하려면 &lt;a href=&quot;qmetatype#Q_DECLARE_METATYPE&quot;&gt;Q_DECLARE_METATYPE&lt;/a&gt; ()을 통해 유형을 QMetaType에 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="98e7f5dfddfb2cef4b2c5072880e73ac2ffa812b" translate="yes" xml:space="preserve">
          <source>To add extra buttons to the wizard (e.g., a &lt;b&gt;Print&lt;/b&gt; button), one way is to call setButton() with &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton1&lt;/a&gt; to &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton3&lt;/a&gt;, and make the buttons visible using the &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt; to &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton3&lt;/a&gt; options.</source>
          <target state="translated">마법사에 추가 버튼 (예 : &lt;b&gt;인쇄&lt;/b&gt; 버튼) 을 추가하려면 한 가지 방법은 &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton1&lt;/a&gt; ~ &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton3을&lt;/a&gt; 사용하여 setButton ()을 호출 하고 &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt; ~ &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton3&lt;/a&gt; 옵션 을 사용하여 버튼을 표시하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="e06f9796d195ee4589416c593fba8526903832e2" translate="yes" xml:space="preserve">
          <source>To add extra buttons to the wizard (e.g., a &lt;b&gt;Print&lt;/b&gt; button), one way is to call setButtonText() with &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton1&lt;/a&gt;, &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton2&lt;/a&gt;, or &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton3&lt;/a&gt; to set their text, and make the buttons visible using the &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt;, &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton2&lt;/a&gt;, and/or &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton3&lt;/a&gt; options.</source>
          <target state="translated">마법사에 추가 버튼 (예 : &lt;b&gt;인쇄&lt;/b&gt; 버튼) 을 추가하려면 &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton1&lt;/a&gt; , &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton2&lt;/a&gt; 또는 &lt;a href=&quot;qwizard#WizardButton-enum&quot;&gt;CustomButton3&lt;/a&gt; 으로 setButtonText ()를 호출 하여 텍스트를 설정하고 &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton1&lt;/a&gt; , &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton2&lt;/a&gt; 및 / 또는 &lt;a href=&quot;qwizard#WizardOption-enum&quot;&gt;HaveCustomButton3을&lt;/a&gt; 사용하여 버튼을 표시하는 방법이 있습니다. 옵션.</target>
        </trans-unit>
        <trans-unit id="5a1a13a545c6c805e0464273f1aa3a98701d6dad" translate="yes" xml:space="preserve">
          <source>To add items to a scene, you start off by constructing a &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; object. Then, you have two options: either add your existing &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; objects by calling &lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;addItem&lt;/a&gt;(), or you can call one of the convenience functions &lt;a href=&quot;qgraphicsscene#addEllipse&quot;&gt;addEllipse&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addLine&quot;&gt;addLine&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPath&quot;&gt;addPath&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPixmap&quot;&gt;addPixmap&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPolygon&quot;&gt;addPolygon&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addRect&quot;&gt;addRect&lt;/a&gt;(), or &lt;a href=&quot;qgraphicsscene#addText&quot;&gt;addText&lt;/a&gt;(), which all return a pointer to the newly added item. The dimensions of the items added with these functions are relative to the item's coordinate system, and the items position is initialized to (0, 0) in the scene.</source>
          <target state="translated">장면에 항목을 추가하려면 먼저 &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; 객체 를 구성하십시오 . 그런 다음 &lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;addItem&lt;/a&gt; () 을 호출 하여 기존 &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; 객체를 추가 하거나 &lt;a href=&quot;qgraphicsscene#addEllipse&quot;&gt;addEllipse&lt;/a&gt; (), &lt;a href=&quot;qgraphicsscene#addLine&quot;&gt;addLine&lt;/a&gt; (), &lt;a href=&quot;qgraphicsscene#addPath&quot;&gt;addPath&lt;/a&gt; (), &lt;a href=&quot;qgraphicsscene#addPixmap&quot;&gt;addPixmap&lt;/a&gt; (), &lt;a href=&quot;qgraphicsscene#addPolygon&quot;&gt;addPolygon&lt;/a&gt; (), &lt;a href=&quot;qgraphicsscene#addRect&quot;&gt;addRect&lt;/a&gt; ( ) 함수 중 하나를 호출 할 수 있습니다. ) 또는 &lt;a href=&quot;qgraphicsscene#addText&quot;&gt;addText&lt;/a&gt; ()는 새로 추가 된 항목에 대한 포인터를 반환합니다. 이러한 기능으로 추가 된 항목의 치수는 항목의 좌표계를 기준으로하며 장면에서 항목 위치가 (0, 0)으로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="f7e3032bf91747ac6350f87afd86d3a8f34b5d2f" translate="yes" xml:space="preserve">
          <source>To add items to a scene, you start off by constructing a QGraphicsScene object. Then, you have two options: either add your existing &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; objects by calling &lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;addItem&lt;/a&gt;(), or you can call one of the convenience functions &lt;a href=&quot;qgraphicsscene#addEllipse&quot;&gt;addEllipse&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addLine&quot;&gt;addLine&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPath&quot;&gt;addPath&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPixmap&quot;&gt;addPixmap&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPolygon&quot;&gt;addPolygon&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addRect&quot;&gt;addRect&lt;/a&gt;(), or &lt;a href=&quot;qgraphicsscene#addText&quot;&gt;addText&lt;/a&gt;(), which all return a pointer to the newly added item. The dimensions of the items added with these functions are relative to the item's coordinate system, and the items position is initialized to (0, 0) in the scene.</source>
          <target state="translated">To add items to a scene, you start off by constructing a QGraphicsScene object. Then, you have two options: either add your existing &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; objects by calling &lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;addItem&lt;/a&gt;(), or you can call one of the convenience functions &lt;a href=&quot;qgraphicsscene#addEllipse&quot;&gt;addEllipse&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addLine&quot;&gt;addLine&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPath&quot;&gt;addPath&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPixmap&quot;&gt;addPixmap&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addPolygon&quot;&gt;addPolygon&lt;/a&gt;(), &lt;a href=&quot;qgraphicsscene#addRect&quot;&gt;addRect&lt;/a&gt;(), or &lt;a href=&quot;qgraphicsscene#addText&quot;&gt;addText&lt;/a&gt;(), which all return a pointer to the newly added item. The dimensions of the items added with these functions are relative to the item's coordinate system, and the items position is initialized to (0, 0) in the scene.</target>
        </trans-unit>
        <trans-unit id="b453f1e6a25e6a7eaa1b1c990a34922fc7eb7771" translate="yes" xml:space="preserve">
          <source>To add multiple certificates, use &lt;a href=&quot;qsslsocket#addCaCertificates&quot;&gt;addCaCertificates&lt;/a&gt;().</source>
          <target state="translated">여러 인증서를 추가하려면 &lt;a href=&quot;qsslsocket#addCaCertificates&quot;&gt;addCaCertificates&lt;/a&gt; ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="4fe72e2400ebc265c8f829e16554193020f21d10" translate="yes" xml:space="preserve">
          <source>To add new rows, use &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#appendRow-method&quot;&gt;appendRow()&lt;/a&gt; and &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#insertRow-method&quot;&gt;insertRow()&lt;/a&gt;. To modify existing rows, use &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#setRow-method&quot;&gt;setRow()&lt;/a&gt;, &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#moveRow-method&quot;&gt;moveRow()&lt;/a&gt;, &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#removeRow-method&quot;&gt;removeRow()&lt;/a&gt;, and &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#clear-method&quot;&gt;clear()&lt;/a&gt;.</source>
          <target state="translated">To add new rows, use &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#appendRow-method&quot;&gt;appendRow()&lt;/a&gt; and &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#insertRow-method&quot;&gt;insertRow()&lt;/a&gt;. To modify existing rows, use &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#setRow-method&quot;&gt;setRow()&lt;/a&gt;, &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#moveRow-method&quot;&gt;moveRow()&lt;/a&gt;, &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#removeRow-method&quot;&gt;removeRow()&lt;/a&gt;, and &lt;a href=&quot;qml-qt-labs-qmlmodels-tablemodel#clear-method&quot;&gt;clear()&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="88bfae2ccc4b0487573533a6fd99fc094617d42f" translate="yes" xml:space="preserve">
          <source>To add or move an item to a scene, call &lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;QGraphicsScene::addItem&lt;/a&gt;().</source>
          <target state="translated">항목을 장면에 추가하거나 이동하려면 &lt;a href=&quot;qgraphicsscene#addItem&quot;&gt;QGraphicsScene :: addItem&lt;/a&gt; ()을 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="4a59b8530984a752b12a22f9dc3e1c2e98daea8b" translate="yes" xml:space="preserve">
          <source>To add sorting and filtering support to &lt;code&gt;MyItemModel&lt;/code&gt;, we need to create a &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt;, call &lt;a href=&quot;qsortfilterproxymodel#setSourceModel&quot;&gt;setSourceModel&lt;/a&gt;() with the &lt;code&gt;MyItemModel&lt;/code&gt; as argument, and install the &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; on the view:</source>
          <target state="translated">정렬 및 지원을 필터링 추가하려면 &lt;code&gt;MyItemModel&lt;/code&gt; , 우리는 만들 필요가 &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel&lt;/a&gt; , 전화 &lt;a href=&quot;qsortfilterproxymodel#setSourceModel&quot;&gt;setSourceModel&lt;/a&gt; 와 () &lt;code&gt;MyItemModel&lt;/code&gt; 인수로, 그리고 설치 &lt;a href=&quot;qsortfilterproxymodel&quot;&gt;QSortFilterProxyModel를&lt;/a&gt; 보기에 :</target>
        </trans-unit>
        <trans-unit id="709a0a3e936a9424ab4ea89d0e316de86eaf5712" translate="yes" xml:space="preserve">
          <source>To add sorting and filtering support to &lt;code&gt;MyItemModel&lt;/code&gt;, we need to create a QSortFilterProxyModel, call &lt;a href=&quot;qsortfilterproxymodel#setSourceModel&quot;&gt;setSourceModel&lt;/a&gt;() with the &lt;code&gt;MyItemModel&lt;/code&gt; as argument, and install the QSortFilterProxyModel on the view:</source>
          <target state="translated">To add sorting and filtering support to &lt;code&gt;MyItemModel&lt;/code&gt; , we need to create a QSortFilterProxyModel, call &lt;a href=&quot;qsortfilterproxymodel#setSourceModel&quot;&gt;setSourceModel&lt;/a&gt;() with the &lt;code&gt;MyItemModel&lt;/code&gt; as argument, and install the QSortFilterProxyModel on the view:</target>
        </trans-unit>
        <trans-unit id="0a585b1b5bdff862330fddcbf31d8ee821f724b2" translate="yes" xml:space="preserve">
          <source>To add support for an additional language, see &lt;a href=&quot;technical-guide#adding-new-keyboard-layouts&quot;&gt;Adding New Keyboard Layouts&lt;/a&gt;.</source>
          <target state="translated">추가 언어에 대한 지원을 추가하려면 &lt;a href=&quot;technical-guide#adding-new-keyboard-layouts&quot;&gt;새 키보드 레이아웃 추가를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="86823dd473661cd1a813e063afc2901e0ad24fb8" translate="yes" xml:space="preserve">
          <source>To add support for another encoding to Qt, make a subclass of &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; and implement the functions listed in the table below.</source>
          <target state="translated">Qt에 다른 인코딩에 대한 지원을 추가하려면 &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; 의 서브 클래스를 작성 하고 아래 표에 나열된 기능을 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="9f2dad4a39285e1d8df972bed0536265641d4e30" translate="yes" xml:space="preserve">
          <source>To add support for another encoding to Qt, make a subclass of QTextCodec and implement the functions listed in the table below.</source>
          <target state="translated">To add support for another encoding to Qt, make a subclass of QTextCodec and implement the functions listed in the table below.</target>
        </trans-unit>
        <trans-unit id="9f249c6889f0d4684fff984088d0da53c150d382" translate="yes" xml:space="preserve">
          <source>To add support for drawing of new datatypes and item data roles, it is necessary to create a custom delegate. But if you only need to support the datatypes implemented by the default delegate, a custom style does not need an accompanying delegate. The &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate&lt;/a&gt; class description gives more information on custom delegates.</source>
          <target state="translated">새 데이터 유형 및 항목 데이터 역할을 그리기위한 지원을 추가하려면 사용자 지정 대리자를 만들어야합니다. 그러나 기본 대리자가 구현 한 데이터 유형 만 지원해야하는 경우 사용자 지정 스타일에는 동반 대리자가 필요하지 않습니다. &lt;a href=&quot;qstyleditemdelegate&quot;&gt;QStyledItemDelegate의&lt;/a&gt; 클래스 설명을 사용자 정의 위임에 대한 자세한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e12e0ebfdd72480c154219ba3eb8fe2ef43ff91a" translate="yes" xml:space="preserve">
          <source>To add support for new gestures, you need to derive from &lt;a href=&quot;qgesturerecognizer&quot;&gt;QGestureRecognizer&lt;/a&gt; to create a custom recognizer class, construct an instance of this class, and register it with the application by calling &lt;a href=&quot;qgesturerecognizer#registerRecognizer&quot;&gt;QGestureRecognizer::registerRecognizer&lt;/a&gt;(). You can also subclass &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; to create a custom gesture class, or rely on dynamic properties to express specific details of the gesture you want to handle.</source>
          <target state="translated">새로운 제스처에 대한 지원을 추가하려면 &lt;a href=&quot;qgesturerecognizer&quot;&gt;QGestureRecognizer&lt;/a&gt; 에서 파생 하여 사용자 정의 인식기 클래스를 작성하고이 클래스의 인스턴스를 &lt;a href=&quot;qgesturerecognizer#registerRecognizer&quot;&gt;구성한 후 QGestureRecognizer :: registerRecognizer&lt;/a&gt; ()를 호출하여 애플리케이션에 등록해야합니다 . &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; 를 서브 클래 싱 하여 사용자 지정 제스처 클래스를 만들거나 동적 속성을 사용하여 처리하려는 제스처의 특정 세부 정보를 표현할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e570c43909c161795c53e336f51abdb562daacc5" translate="yes" xml:space="preserve">
          <source>To add support for new gestures, you need to derive from QGestureRecognizer to create a custom recognizer class, construct an instance of this class, and register it with the application by calling &lt;a href=&quot;qgesturerecognizer#registerRecognizer&quot;&gt;QGestureRecognizer::registerRecognizer&lt;/a&gt;(). You can also subclass &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; to create a custom gesture class, or rely on dynamic properties to express specific details of the gesture you want to handle.</source>
          <target state="translated">To add support for new gestures, you need to derive from QGestureRecognizer to create a custom recognizer class, construct an instance of this class, and register it with the application by calling &lt;a href=&quot;qgesturerecognizer#registerRecognizer&quot;&gt;QGestureRecognizer::registerRecognizer&lt;/a&gt;(). You can also subclass &lt;a href=&quot;qgesture&quot;&gt;QGesture&lt;/a&gt; to create a custom gesture class, or rely on dynamic properties to express specific details of the gesture you want to handle.</target>
        </trans-unit>
        <trans-unit id="60f990f02b150bfd773ce6dea0ed57068dcebf9e" translate="yes" xml:space="preserve">
          <source>To add times of precision greater than 1 millisecond, use &lt;a href=&quot;qdeadlinetimer#addNSecs&quot;&gt;addNSecs&lt;/a&gt;().</source>
          <target state="translated">1 밀리 초보다 큰 정밀도 시간을 추가하려면 &lt;a href=&quot;qdeadlinetimer#addNSecs&quot;&gt;addNSecs&lt;/a&gt; ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d5ddbde2db777dbe8defd68af3c9749e41126dd9" translate="yes" xml:space="preserve">
          <source>To aid in such situations, a &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; object can be instructed to cache the frames, at the added memory cost of keeping the frames in memory for the lifetime of the object.</source>
          <target state="translated">이러한 상황을 돕기 위해 &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; 객체는 프레임을 캐시하도록 지시 할 수 있으며, 프레임은 객체의 수명 동안 메모리에 프레임을 유지하는 추가 메모리 비용이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="46eaf35a925c107168e3bc75b42c44c3e12cf019" translate="yes" xml:space="preserve">
          <source>To aid writing a particle vertex shader, the following GLSL code is prepended to your vertex shader:</source>
          <target state="translated">파티클 버텍스 쉐이더 작성을 돕기 위해 다음 GLSL 코드가 버텍스 쉐이더 앞에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="eaf59ced55383f90bc336e2d1de3d953f4122944" translate="yes" xml:space="preserve">
          <source>To allow elements such as videos to be shown in the fullscreen mode, applications must set &lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings::FullScreenSupportEnabled&lt;/a&gt; and connect to &lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage::fullScreenRequested&lt;/a&gt;, which takes a &lt;a href=&quot;qwebenginefullscreenrequest&quot;&gt;QWebEngineFullScreenRequest&lt;/a&gt; instance as an argument.</source>
          <target state="translated">비디오와 같은 요소를 전체 화면 모드로 표시하려면 응용 프로그램에서 &lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings :: FullScreenSupportEnabled를&lt;/a&gt; 설정 하고 &lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage :: fullScreenRequested에&lt;/a&gt; 연결 해야합니다 . &lt;a href=&quot;qwebenginefullscreenrequest&quot;&gt;QWebEngineFullScreenRequest&lt;/a&gt; 인스턴스를 인수로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="799a4161751af711f231e01951e5560bf1c8d769" translate="yes" xml:space="preserve">
          <source>To allow elements such as videos to be shown in the fullscreen mode, applications must set &lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings::FullScreenSupportEnabled&lt;/a&gt; and connect to &lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage::fullScreenRequested&lt;/a&gt;, which takes a QWebEngineFullScreenRequest instance as an argument.</source>
          <target state="translated">To allow elements such as videos to be shown in the fullscreen mode, applications must set &lt;a href=&quot;qwebenginesettings#WebAttribute-enum&quot;&gt;QWebEngineSettings::FullScreenSupportEnabled&lt;/a&gt; and connect to &lt;a href=&quot;qwebenginepage#fullScreenRequested&quot;&gt;QWebEnginePage::fullScreenRequested&lt;/a&gt;, which takes a QWebEngineFullScreenRequest instance as an argument.</target>
        </trans-unit>
        <trans-unit id="312b28023a2f1c9829a19172150be05295545c31" translate="yes" xml:space="preserve">
          <source>To allow for measurements in all 6 directions, negative values are used.</source>
          <target state="translated">모든 6 방향 측정이 가능하도록 음수 값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7ce9be0b2f928ffb8698ce47f34350b16ee61b1d" translate="yes" xml:space="preserve">
          <source>To allow the user to drop either internal or external items within the view, set the view's &lt;a href=&quot;qabstractscrollarea#viewport&quot;&gt;viewport()&lt;/a&gt;'s &lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;acceptDrops&lt;/a&gt; property to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">사용자가보기 내에서 내부 또는 외부 항목을 삭제하도록하려면보기의 &lt;a href=&quot;qabstractscrollarea#viewport&quot;&gt;viewport ()&lt;/a&gt; 의 &lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;acceptDrops&lt;/a&gt; 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d551f839da29ddb5f305afe593c0fccd5bce6dc" translate="yes" xml:space="preserve">
          <source>To append columns, insert them after the last column.</source>
          <target state="translated">열을 추가하려면 마지막 열 뒤에 열을 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="a73d422347ff54dd6a4673e3cd6516f7eef7cfc7" translate="yes" xml:space="preserve">
          <source>To append rows to another parent, move them to after the last row.</source>
          <target state="translated">다른 부모에 행을 추가하려면 마지막 행 다음으로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="dcf058086e00e8943938cba4b0e39d109e2d1d39" translate="yes" xml:space="preserve">
          <source>To append rows, insert them after the last row.</source>
          <target state="translated">행을 추가하려면 마지막 행 뒤에 행을 삽입하십시오.</target>
        </trans-unit>
        <trans-unit id="c30043e0c000838853f9933b478f1575d2d6a549" translate="yes" xml:space="preserve">
          <source>To apply a layout, you can select your choice of layout from the toolbar shown on the left, or from the context menu shown below.</source>
          <target state="translated">레이아웃을 적용하려면 왼쪽에 표시된 도구 모음 또는 아래에 표시된 컨텍스트 메뉴에서 원하는 레이아웃을 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e3341387e2959d1acc8d88687351b3b1206da01" translate="yes" xml:space="preserve">
          <source>To apply a quantifier to more than just the preceding character, use parentheses to group characters together in an expression. For example, &lt;b&gt;tag+&lt;/b&gt; matches a 't' followed by an 'a' followed by at least one 'g', whereas &lt;b&gt;(tag)+&lt;/b&gt; matches at least one occurrence of 'tag'.</source>
          <target state="translated">앞의 문자 이상에 한정자를 적용하려면 괄호를 사용하여 표현식에서 문자를 그룹화하십시오. 예를 들어, &lt;b&gt;tag +&lt;/b&gt; 는 't'다음에 'a'뒤에 적어도 하나의 'g'가 일치하고 &lt;b&gt;(tag) +&lt;/b&gt; 는 하나 이상의 'tag'에 일치합니다.</target>
        </trans-unit>
        <trans-unit id="8d681eb2e8cceb01fee405a8e8a77c8a047495b5" translate="yes" xml:space="preserve">
          <source>To apply the same-origin policy to a custom URL scheme, &lt;a href=&quot;qml-qtwebengine-webengine&quot;&gt;WebEngine&lt;/a&gt; must be able to compute the origin (host and port combination) of a URL. The &lt;code&gt;Host...&lt;/code&gt; options indicate that the URL scheme conforms to the standard URL syntax (like &lt;code&gt;http&lt;/code&gt;) and automatically enable the same-origin policy. The &lt;code&gt;Path&lt;/code&gt; option indicates that the URL scheme uses a non-standard syntax and that the same-origin policy cannot be applied.</source>
          <target state="translated">동일한 출처 정책을 사용자 정의 URL 체계에 적용하려면 &lt;a href=&quot;qml-qtwebengine-webengine&quot;&gt;WebEngine이&lt;/a&gt; URL 의 출처 (호스트 및 포트 조합)를 계산할 수 있어야합니다. &lt;code&gt;Host...&lt;/code&gt; 옵션은 표준 URL의 (같은 구문에 URL 방식의 준수 함을 나타냅니다 &lt;code&gt;http&lt;/code&gt; 자동) 및 동일 출처 정책을 사용. &lt;code&gt;Path&lt;/code&gt; 옵션은 URL 방식이 아닌 표준 구문을 사용하여 동일 출처 정책을 적용 할 수 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="95617429467cc07f36769ae00641408513f1f44f" translate="yes" xml:space="preserve">
          <source>To assign a different material slot to the object, or to assign several material slots to the same object, follow the steps below.</source>
          <target state="translated">To assign a different material slot to the object, or to assign several material slots to the same object, follow the steps below.</target>
        </trans-unit>
        <trans-unit id="154f875a2f422ad52116c20e853c9e5a3c663de4" translate="yes" xml:space="preserve">
          <source>To associate a blend tree with a &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator&quot;&gt;BlendedClipAnimator&lt;/a&gt;, set the animator's &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; property to point at the root node of your blend tree:</source>
          <target state="translated">블렌드 트리를 &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator&quot;&gt;BlendedClipAnimator&lt;/a&gt; 와 연결하려면 애니메이터의 &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; 속성을 블렌드 트리의 루트 노드를 가리 키 도록 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="de7b8ca0a938cf273383d5b93f4b49e9998f03f6" translate="yes" xml:space="preserve">
          <source>To associate a blend tree with a &lt;a href=&quot;qt3danimation-qblendedclipanimator&quot;&gt;QBlendedClipAnimator&lt;/a&gt;, set the animator's &lt;a href=&quot;qt3danimation-qblendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; property to point at the root node of your blend tree:</source>
          <target state="translated">블렌드 트리를 &lt;a href=&quot;qt3danimation-qblendedclipanimator&quot;&gt;QBlendedClipAnimator&lt;/a&gt; 와 연결하려면 애니메이터의 &lt;a href=&quot;qt3danimation-qblendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; 속성을 블렌드 트리의 루트 노드를 가리 키 도록 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="b8ec3ae39866ae6770f27cc19cf618f176d7bfe3" translate="yes" xml:space="preserve">
          <source>To associate a blend tree with a BlendedClipAnimator, set the animator's &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; property to point at the root node of your blend tree:</source>
          <target state="translated">To associate a blend tree with a BlendedClipAnimator, set the animator's &lt;a href=&quot;qml-qt3d-animation-blendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; property to point at the root node of your blend tree:</target>
        </trans-unit>
        <trans-unit id="d4c90923fb40ded56d1065b8ce7165af43d65b98" translate="yes" xml:space="preserve">
          <source>To associate a blend tree with a QBlendedClipAnimator, set the animator's &lt;a href=&quot;qt3danimation-qblendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; property to point at the root node of your blend tree:</source>
          <target state="translated">To associate a blend tree with a QBlendedClipAnimator, set the animator's &lt;a href=&quot;qt3danimation-qblendedclipanimator#blendTree-prop&quot;&gt;blendTree&lt;/a&gt; property to point at the root node of your blend tree:</target>
        </trans-unit>
        <trans-unit id="1b018f5df0c693b157c3cd59c041fd1f944e039c" translate="yes" xml:space="preserve">
          <source>To associate a cursor with a widget, use &lt;a href=&quot;qwidget#cursor-prop&quot;&gt;QWidget::setCursor&lt;/a&gt;(). To associate a cursor with all widgets (normally for a short period of time), use &lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;QGuiApplication::setOverrideCursor&lt;/a&gt;().</source>
          <target state="translated">커서를 위젯과 연관 시키려면 &lt;a href=&quot;qwidget#cursor-prop&quot;&gt;QWidget :: setCursor&lt;/a&gt; ()를 사용하십시오. 커서를 모든 위젯과 연관 시키려면 (일반적으로 짧은 시간 동안) &lt;a href=&quot;qguiapplication#setOverrideCursor&quot;&gt;QGuiApplication :: setOverrideCursor&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d802e7742bada638ebe4da7c194b6d3c78904deb" translate="yes" xml:space="preserve">
          <source>To asynchronously invoke the &lt;a href=&quot;qabstractbutton#animateClick&quot;&gt;animateClick()&lt;/a&gt; slot on a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;:</source>
          <target state="translated">비동기 적으로 호출 할 &lt;a href=&quot;qabstractbutton#animateClick&quot;&gt;animateClick ()&lt;/a&gt; A의 슬롯 &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton을&lt;/a&gt; :</target>
        </trans-unit>
        <trans-unit id="13b730de938257ee3ff62ec8e1d5637705a5fa57" translate="yes" xml:space="preserve">
          <source>To automatically generate map overlay objects based on the contents of a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt; model (for example a &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; item), the &lt;a href=&quot;qml-qtlocation-mapitemview&quot;&gt;MapItemView&lt;/a&gt; type is available. It accepts any map overlay object as its delegate, and can only be created within a &lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-qmlmodule.html&quot;&gt;QtQuick&lt;/a&gt; 모델 의 컨텐츠 (예 : &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; 항목)를 기반으로 맵 오버레이 오브젝트를 자동으로 생성하기 위해 &lt;a href=&quot;qml-qtlocation-mapitemview&quot;&gt;MapItemView&lt;/a&gt; 유형을 사용할 수 있습니다. 모든지도 오버레이 객체를 델리게이트로 허용하며 &lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map&lt;/a&gt; 내에서만 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6079f43a6def834203382c7dcfb35bdcb164b54e" translate="yes" xml:space="preserve">
          <source>To automatically generate map overlay objects based on the contents of a &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; model (for example a ListModel item), the &lt;a href=&quot;qml-qtlocation-mapitemview&quot;&gt;MapItemView&lt;/a&gt; type is available. It accepts any map overlay object as its delegate, and can only be created within a &lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map&lt;/a&gt;.</source>
          <target state="translated">To automatically generate map overlay objects based on the contents of a &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquick-module.html&quot;&gt;QtQuick&lt;/a&gt; model (for example a ListModel item), the &lt;a href=&quot;qml-qtlocation-mapitemview&quot;&gt;MapItemView&lt;/a&gt; type is available. It accepts any map overlay object as its delegate, and can only be created within a &lt;a href=&quot;qml-qtlocation-map&quot;&gt;Map&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="62ed8fa1c3b52b110e11936cd2f817f4dc1b6c41" translate="yes" xml:space="preserve">
          <source>To avoid a race condition, it is important to call this function</source>
          <target state="translated">경쟁 조건을 피하려면이 함수를 호출하는 것이 중요합니다</target>
        </trans-unit>
        <trans-unit id="f8ae891408b86343e18d1f68e67581c3ea3187cb" translate="yes" xml:space="preserve">
          <source>To avoid conflicts with other scripts executed on the page, the world in which the script is run is specified by</source>
          <target state="translated">To avoid conflicts with other scripts executed on the page, the world in which the script is run is specified by</target>
        </trans-unit>
        <trans-unit id="9981b8a029072a3f501de8f7b8d459614ddd0cc2" translate="yes" xml:space="preserve">
          <source>To avoid confusion with the controls in the module itself, we'll call the file &lt;code&gt;MyButton.qml&lt;/code&gt;. To use the control in your application, refer to it by its filename:</source>
          <target state="translated">모듈 자체의 컨트롤과 혼동을 피하기 위해 &lt;code&gt;MyButton.qml&lt;/code&gt; 파일을 호출합니다 . 응용 프로그램에서 컨트롤을 사용하려면 파일 이름으로 컨트롤을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9bc91f87f8488391c70dd52a85a00bdc8ca13ccc" translate="yes" xml:space="preserve">
          <source>To avoid failures when your list can be empty, call &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() before calling other member functions. If you must pass an index value that might not be in the valid range, check that it is less than the value returned by &lt;a href=&quot;qlist#size&quot;&gt;size&lt;/a&gt;() but</source>
          <target state="translated">리스트가 비어있을 때 실패를 피하려면 다른 멤버 함수를 호출하기 전에 &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt; ()를 호출하십시오. 유효한 범위에 속하지 않는 색인 값을 전달해야하는 경우 &lt;a href=&quot;qlist#size&quot;&gt;size&lt;/a&gt; ()에서 리턴 한 값보다 작지만</target>
        </trans-unit>
        <trans-unit id="09e95b506f60a8cd8c466637a56d779a0f15991c" translate="yes" xml:space="preserve">
          <source>To avoid memory leaks, the previous chart must be deleted.</source>
          <target state="translated">메모리 누수를 방지하려면 이전 차트를 삭제해야합니다.</target>
        </trans-unit>
        <trans-unit id="957aa62e5c225e7652aa8a3818c966a33d3038ea" translate="yes" xml:space="preserve">
          <source>To avoid potential conflicts like these, give distinctive names to header files that will be precompiled.</source>
          <target state="translated">이와 같은 잠재적 인 충돌을 피하려면 미리 컴파일 될 헤더 파일에 고유 한 이름을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="27e04a7bff0648b0b326c1df2d7bb891d5ce56fe" translate="yes" xml:space="preserve">
          <source>To avoid race conditions and read/write issues from two threads it is important that the renderer and the item never read or write shared variables. Communication between the item and the renderer should primarily happen via the &lt;a href=&quot;qquickframebufferobject-renderer#synchronize&quot;&gt;QQuickFramebufferObject::Renderer::synchronize&lt;/a&gt;() function. This function will be called on the render thread while the GUI thread is blocked.</source>
          <target state="translated">경쟁 조건과 두 스레드의 읽기 / 쓰기 문제를 방지하려면 렌더러와 항목이 공유 변수를 읽거나 쓰지 않는 것이 중요합니다. 아이템과 렌더러 간의 통신은 주로 &lt;a href=&quot;qquickframebufferobject-renderer#synchronize&quot;&gt;QQuickFramebufferObject :: Renderer :: synchronize&lt;/a&gt; () 함수를 통해 이루어집니다. 이 함수는 GUI 스레드가 차단 된 동안 렌더 스레드에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2c8c1403f9d043007f4c1777ca2fc261157b5bf9" translate="yes" xml:space="preserve">
          <source>To avoid relying on dynamic array sizes, applications can use &lt;a href=&quot;qvulkanwindow#MAX_CONCURRENT_FRAME_COUNT-var&quot;&gt;MAX_CONCURRENT_FRAME_COUNT&lt;/a&gt; when declaring arrays. This is guaranteed to be always equal to or greater than the value returned from &lt;a href=&quot;qvulkanwindow#concurrentFrameCount&quot;&gt;concurrentFrameCount&lt;/a&gt;(). Such arrays can then be indexed by the value returned from this function.</source>
          <target state="translated">동적 배열 크기에 의존하지 않기 위해 응용 프로그램은 배열을 선언 할 때 &lt;a href=&quot;qvulkanwindow#MAX_CONCURRENT_FRAME_COUNT-var&quot;&gt;MAX_CONCURRENT_FRAME_COUNT&lt;/a&gt; 를 사용할 수 있습니다 . 이것은 항상 &lt;a href=&quot;qvulkanwindow#concurrentFrameCount&quot;&gt;duplicateFrameCount&lt;/a&gt; () 에서 반환 된 값보다 크거나 같아야합니다 . 그런 다음이 함수에서 반환 된 값으로 이러한 배열을 인덱싱 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="41a42386ac3ec977e79c0969af7a7bd2be274175" translate="yes" xml:space="preserve">
          <source>To avoid seeing the items loading progressively set &lt;code&gt;visible&lt;/code&gt; appropriately, e.g.</source>
          <target state="translated">점차적으로 설정 넣기 항목을보고 피하려면 &lt;code&gt;visible&lt;/code&gt; 예를 들어, 적절하게</target>
        </trans-unit>
        <trans-unit id="97433bca212c3e78ab005df4e720c46fd0a9e3d7" translate="yes" xml:space="preserve">
          <source>To avoid that, the JIT is disabled by default if you compile Qt in debug mode. It is possible to override the default and enable or disable the JIT usage (both in debug or release mode) by setting the &lt;code&gt;QT_ENABLE_REGEXP_JIT&lt;/code&gt; environment variable to a non-zero or zero value respectively.</source>
          <target state="translated">이를 피하기 위해 디버그 모드에서 Qt를 컴파일하면 JIT가 기본적으로 사용되지 않습니다. &lt;code&gt;QT_ENABLE_REGEXP_JIT&lt;/code&gt; 환경 변수를 각각 0이 아닌 값 으로 설정하여 기본값을 대체하고 JIT 사용 (디버그 또는 릴리스 모드 모두)을 사용하거나 사용하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d01c805e5387f23e7a4903c9f47d427438deefd" translate="yes" xml:space="preserve">
          <source>To avoid the loss of signal emissions it is recommend to immidiately connect to this signal once a &lt;a href=&quot;qbluetoothtransferreply&quot;&gt;QBluetoothTransferReply&lt;/a&gt; instance has been created.</source>
          <target state="translated">신호 방출 손실을 피하려면 &lt;a href=&quot;qbluetoothtransferreply&quot;&gt;QBluetoothTransferReply&lt;/a&gt; 인스턴스가 생성 되면이 신호에 즉시 연결하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="0b7c1f1ca365a926ae81d8dc9e75d954dd9ddbb3" translate="yes" xml:space="preserve">
          <source>To avoid the loss of signal emissions it is recommend to immidiately connect to this signal once a &lt;code&gt;QBluetoothTransferReply&lt;/code&gt; instance has been created.</source>
          <target state="translated">신호 방출 손실을 피하려면 &lt;code&gt;QBluetoothTransferReply&lt;/code&gt; 인스턴스가 생성 되면이 신호에 즉시 연결하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="6f092283de36ddde7aff37726fef4ccfcdf10c32" translate="yes" xml:space="preserve">
          <source>To avoid the need to know (or check) what the default sensor for a type is, the system will use the default sensor for a type. Most of the time this is what the app developer wants to do. If the app developer wants to select a specific sensor, he needs to call the &lt;a href=&quot;qsensor#identifier-prop&quot;&gt;QSensor::setIdentifier&lt;/a&gt;() method before starting the sensor so that the appropriate backend is used.</source>
          <target state="translated">유형의 기본 센서가 무엇인지 알거나 점검 할 필요가 없도록 시스템은 유형의 기본 센서를 사용합니다. 대부분의 경우 이것이 앱 개발자가 원하는 것입니다. 앱 개발자가 특정 센서를 선택 하려면 적절한 백엔드가 사용되도록 센서를 시작하기 전에 &lt;a href=&quot;qsensor#identifier-prop&quot;&gt;QSensor :: setIdentifier&lt;/a&gt; () 메소드 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5ffe4dad6e0465a198ba9c298e061050211df72c" translate="yes" xml:space="preserve">
          <source>To avoid the overhead of creating the layout the first time you draw the &lt;a href=&quot;qstatictext&quot;&gt;QStaticText&lt;/a&gt; after making changes, you can use the prepare() function and pass in the</source>
          <target state="translated">변경 후 &lt;a href=&quot;qstatictext&quot;&gt;QStaticText를&lt;/a&gt; 처음 그릴 때 레이아웃을 작성하는 오버 헤드를 피하기 위해 prepare () 함수를 사용하여</target>
        </trans-unit>
        <trans-unit id="852ddc71baa7f459435c9304ccb69b050b5d7e83" translate="yes" xml:space="preserve">
          <source>To avoid this problem, replace &lt;code&gt;hash[i]&lt;/code&gt; with &lt;code&gt;hash.value(i)&lt;/code&gt; in the code above.</source>
          <target state="translated">이 문제를 피하려면 위 코드에서 &lt;code&gt;hash[i]&lt;/code&gt; 를 &lt;code&gt;hash.value(i)&lt;/code&gt; 로 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="1da48f22fabbeb7f047c06a4f5d064ed5c108281" translate="yes" xml:space="preserve">
          <source>To avoid this problem, replace &lt;code&gt;map[i]&lt;/code&gt; with &lt;code&gt;map.value(i)&lt;/code&gt; in the code above.</source>
          <target state="translated">이 문제를 피하려면 위 코드에서 &lt;code&gt;map[i]&lt;/code&gt; 를 &lt;code&gt;map.value(i)&lt;/code&gt; 로 바꾸십시오 .</target>
        </trans-unit>
        <trans-unit id="ac46b708d7fcb58bf8706a8c1d8f6479caccfff9" translate="yes" xml:space="preserve">
          <source>To avoid this, Qt will group new touch points together using the following rules:</source>
          <target state="translated">이를 피하기 위해 Qt는 다음 규칙을 사용하여 새로운 터치 포인트를 그룹화합니다.</target>
        </trans-unit>
        <trans-unit id="a166026e97a80ebd7933e88b5571de6953aaf160" translate="yes" xml:space="preserve">
          <source>To be able to check the spelling, the spellchecker needs dictionaries. It supports dictionaries from the &lt;a href=&quot;https://sourceforge.net/projects/hunspell/&quot;&gt;Hunspell project&lt;/a&gt;, but they have to be compiled into a special binary format. A Hunspell dictionary consists of two files:</source>
          <target state="translated">To be able to check the spelling, the spellchecker needs dictionaries. It supports dictionaries from the &lt;a href=&quot;https://sourceforge.net/projects/hunspell/&quot;&gt;Hunspell project&lt;/a&gt;, but they have to be compiled into a special binary format. A Hunspell dictionary consists of two files:</target>
        </trans-unit>
        <trans-unit id="5dcef05d5ef1e46a33e99afc44bd952605060be7" translate="yes" xml:space="preserve">
          <source>To be able to check the spelling, the spellchecker needs dictionaries. It supports dictionaries from the &lt;a href=&quot;https://sourceforge.net/projects/hunspell/#&quot;&gt;Hunspell project&lt;/a&gt;, but they have to be compiled into a special binary format. A Hunspell dictionary consists of two files:</source>
          <target state="translated">맞춤법을 검사하려면 맞춤법 검사기에 사전이 필요합니다. &lt;a href=&quot;https://sourceforge.net/projects/hunspell/#&quot;&gt;Hunspell 프로젝트의&lt;/a&gt; 사전을 지원 하지만 특수 이진 형식으로 컴파일해야합니다. Hunspell 사전은 다음 두 파일로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="d0e64a52b99814817715b0b03bb149dc47feae80" translate="yes" xml:space="preserve">
          <source>To be able to receive media dropped on a widget, call &lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;setAcceptDrops(true)&lt;/a&gt; for the widget, and reimplement the &lt;a href=&quot;qwidget#dragEnterEvent&quot;&gt;dragEnterEvent()&lt;/a&gt; and &lt;a href=&quot;qwidget#dropEvent&quot;&gt;dropEvent()&lt;/a&gt; event handler functions.</source>
          <target state="translated">위젯에서 삭제 된 매체를 수신하려면 위젯에 대해 &lt;a href=&quot;qwidget#acceptDrops-prop&quot;&gt;setAcceptDrops (true)&lt;/a&gt; 를 호출 하고 &lt;a href=&quot;qwidget#dragEnterEvent&quot;&gt;dragEnterEvent ()&lt;/a&gt; 및 &lt;a href=&quot;qwidget#dropEvent&quot;&gt;dropEvent ()&lt;/a&gt; 이벤트 핸들러 함수를 다시 구현하십시오 .</target>
        </trans-unit>
        <trans-unit id="23d1045b9d70f17ba3c57dc0d2c220a91b8d925b" translate="yes" xml:space="preserve">
          <source>To be able to use your new App ID, generate a new provision profile that includes the new ID to sign and run your app. Provisioning Profiles are also managed through the &lt;b&gt;Apple Developer Certificate, Identifiers, and Profiles&lt;/b&gt; manager.</source>
          <target state="translated">새 앱 ID를 사용하려면 새 ID가 포함 된 새 프로비저닝 프로파일을 생성하여 앱에 서명하고 실행하십시오. 프로비저닝 프로파일은 &lt;b&gt;Apple 개발자 인증서, 식별자 및 프로파일&lt;/b&gt; 관리자를 통해 관리됩니다.</target>
        </trans-unit>
        <trans-unit id="ad37069b2a756eb35da98ea17b15a5581a4e278f" translate="yes" xml:space="preserve">
          <source>To be called after getting a &lt;a href=&quot;qbluetoothlocaldevice#pairingDisplayConfirmation&quot;&gt;pairingDisplayConfirmation&lt;/a&gt;(). The</source>
          <target state="translated">&lt;a href=&quot;qbluetoothlocaldevice#pairingDisplayConfirmation&quot;&gt;pairingDisplayConfirmation&lt;/a&gt; () 을 얻은 후 호출 됩니다. 그만큼</target>
        </trans-unit>
        <trans-unit id="f8d265687de97e6932807a1fc8751330f8b7b526" translate="yes" xml:space="preserve">
          <source>To be implemented by custom Modbus client implementation. The default implementation ignores</source>
          <target state="translated">맞춤형 Modbus 클라이언트 구현으로 구현됩니다. 기본 구현은 무시</target>
        </trans-unit>
        <trans-unit id="3f2fefafba9f1d93b8e36464975da9f054ee4393" translate="yes" xml:space="preserve">
          <source>To be loadable, the file's suffix must be a valid suffix for a loadable library in accordance with the platform, e.g. &lt;code&gt;.so&lt;/code&gt; on Unix, - &lt;code&gt;.dylib&lt;/code&gt; on &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; and iOS, and &lt;code&gt;.dll&lt;/code&gt; on Windows. The suffix can be verified with &lt;a href=&quot;qlibrary#isLibrary&quot;&gt;QLibrary::isLibrary&lt;/a&gt;().</source>
          <target state="translated">로드 할 수 있으려면, 파일의 접미사는 유효한 플랫폼, 예에 따라로드 가능한 라이브러리 접미사해야 &lt;code&gt;.so&lt;/code&gt; - 유닉스, &lt;code&gt;.dylib&lt;/code&gt; 에 &lt;a href=&quot;internationalization#macos&quot;&gt;맥 OS&lt;/a&gt; 와 iOS 및 &lt;code&gt;.dll&lt;/code&gt; Windows에서. 접미사는&lt;a href=&quot;qlibrary#isLibrary&quot;&gt; QLibrary :: isLibrary&lt;/a&gt; () .</target>
        </trans-unit>
        <trans-unit id="f775395b1d1c1dc7b311605235d9fce83faef1f7" translate="yes" xml:space="preserve">
          <source>To be loadable, the file's suffix must be a valid suffix for a loadable library in accordance with the platform, e.g. &lt;code&gt;.so&lt;/code&gt; on Unix, - &lt;code&gt;.dylib&lt;/code&gt; on macOS and iOS, and &lt;code&gt;.dll&lt;/code&gt; on Windows. The suffix can be verified with &lt;a href=&quot;qlibrary#isLibrary&quot;&gt;QLibrary::isLibrary&lt;/a&gt;().</source>
          <target state="translated">To be loadable, the file's suffix must be a valid suffix for a loadable library in accordance with the platform, e.g. &lt;code&gt;.so&lt;/code&gt; on Unix, - &lt;code&gt;.dylib&lt;/code&gt; on macOS and iOS, and &lt;code&gt;.dll&lt;/code&gt; on Windows. The suffix can be verified with &lt;a href=&quot;qlibrary#isLibrary&quot;&gt;QLibrary::isLibrary&lt;/a&gt;().</target>
        </trans-unit>
        <trans-unit id="65e057dbe275548f05737e527b0c6d9714d4965f" translate="yes" xml:space="preserve">
          <source>To be valid, a context must have a engine, and it's &lt;a href=&quot;qqmlcontext#contextObject&quot;&gt;contextObject&lt;/a&gt;(), if any, must not have been deleted.</source>
          <target state="translated">유효하려면 컨텍스트에 엔진이 있어야합니다. &lt;a href=&quot;qqmlcontext#contextObject&quot;&gt; contextObject&lt;/a&gt; () (있는 경우)는 삭제하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="c85d2cb52c798844bf3eccfe92387a667731b08f" translate="yes" xml:space="preserve">
          <source>To be valid, the latitude must be between -90 to 90 inclusive.</source>
          <target state="translated">유효하려면 위도는 -90에서 90 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="5f5363421e22a113fa3ee2c0f940db7688d896ca" translate="yes" xml:space="preserve">
          <source>To be valid, the longitude must be between -180 to 180 inclusive.</source>
          <target state="translated">유효하려면 경도는 -180에서 180 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="b8b65b98f45c6e4ceda4bf9ea9b73dd252de3fbc" translate="yes" xml:space="preserve">
          <source>To begin connecting objects, enter the signals and slots editing mode by opening the &lt;b&gt;Edit&lt;/b&gt; menu and selecting &lt;b&gt;Edit Signals/Slots&lt;/b&gt;, or by pressing the &lt;b&gt;F4&lt;/b&gt; key.</source>
          <target state="translated">객체 연결을 시작하려면 &lt;b&gt;편집&lt;/b&gt; 메뉴 를 열고 &lt;b&gt;신호 / 슬롯 편집을&lt;/b&gt; 선택 하거나 &lt;b&gt;F4&lt;/b&gt; 키 를 눌러 신호 및 슬롯 편집 모드로 들어 갑니다 .</target>
        </trans-unit>
        <trans-unit id="baa952e59f704bba7833c7af41a71665e4257927" translate="yes" xml:space="preserve">
          <source>To bind NULL values, a null &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; of the relevant type has to be added to the bound &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList&lt;/a&gt;; for example, &lt;code&gt;QVariant(QVariant::String)&lt;/code&gt; should be used if you are using strings.</source>
          <target state="translated">NULL 값을 바인드하려면 해당 유형 의 널 &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 를 바인드 &lt;a href=&quot;qvariant#QVariantList-typedef&quot;&gt;QVariantList에&lt;/a&gt; 추가해야합니다 . 예를 들어, &lt;code&gt;QVariant(QVariant::String)&lt;/code&gt; 사용하는 경우 QVariant (QVariant :: String)을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="62e057d6e72a2262f69afed3f0038d0389b9a84d" translate="yes" xml:space="preserve">
          <source>To bind a NULL value, use a null &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt;; for example, use &lt;code&gt;QVariant(QVariant::String)&lt;/code&gt; if you are binding a string.</source>
          <target state="translated">NULL 값을 바인드하려면 널 &lt;a href=&quot;qvariant&quot;&gt;QVariant를&lt;/a&gt; 사용하십시오 . 예를 들어, 문자열을 바인딩하는 경우 &lt;code&gt;QVariant(QVariant::String)&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8641eb7169caf9ed3873577e9c44b647a26fb3e7" translate="yes" xml:space="preserve">
          <source>To bind a value of type &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; or &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;, wrap the value in a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; such that &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt;'s &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; constructor is called.</source>
          <target state="translated">유형의 값 바인딩하려면 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 또는 &lt;a href=&quot;qurl&quot;&gt;QUrl을&lt;/a&gt; , A의 값을 랩 &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 등이 &lt;a href=&quot;qxmlitem&quot;&gt;QXmlItem&lt;/a&gt; 의 &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 생성자가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d9eef59e1de8efbb0ab3e7f73e02949fafc97c56" translate="yes" xml:space="preserve">
          <source>To break a layout, press &lt;b&gt;Ctrl+0&lt;/b&gt; or choose &lt;b&gt;Break Layout&lt;/b&gt; from the form's context menu, the &lt;b&gt;Form&lt;/b&gt; menu or the main toolbar.</source>
          <target state="translated">레이아웃을 끊으려면 &lt;b&gt;Ctrl + 0을&lt;/b&gt; 누르 거나 양식의 상황에 맞는 메뉴, &lt;b&gt;양식&lt;/b&gt; 메뉴 또는 기본 도구 모음 에서 &lt;b&gt;레이아웃 나누기를&lt;/b&gt; 선택하십시오 .&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="73b397f95db7c026bbcf06f8703b952ac1ddd8e7" translate="yes" xml:space="preserve">
          <source>To break up a string into a string list, use the &lt;a href=&quot;qstring#split&quot;&gt;QString::split&lt;/a&gt;() function:</source>
          <target state="translated">문자열을 문자열 목록으로 &lt;a href=&quot;qstring#split&quot;&gt;나누&lt;/a&gt; 려면 QString :: split () 함수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="96d5fbf8f8d413b59ecc5e91d42c6f8ed9e8f5cb" translate="yes" xml:space="preserve">
          <source>To browse the elements of a dom document use &lt;a href=&quot;qdomnode#firstChildElement&quot;&gt;firstChildElement&lt;/a&gt;(), &lt;a href=&quot;qdomnode#lastChildElement&quot;&gt;lastChildElement&lt;/a&gt;(), &lt;a href=&quot;qdomnode#nextSiblingElement&quot;&gt;nextSiblingElement&lt;/a&gt;() and &lt;a href=&quot;qdomnode#previousSiblingElement&quot;&gt;previousSiblingElement&lt;/a&gt;(). For example, to iterate over all child elements called &quot;entry&quot; in a root element called &quot;database&quot;, you can use:</source>
          <target state="translated">DOM 문서의 요소를 찾아 보려면 &lt;a href=&quot;qdomnode#firstChildElement&quot;&gt;firstChildElement&lt;/a&gt; (), &lt;a href=&quot;qdomnode#lastChildElement&quot;&gt;lastChildElement&lt;/a&gt; (), &lt;a href=&quot;qdomnode#nextSiblingElement&quot;&gt;nextSiblingElement&lt;/a&gt; () 및 &lt;a href=&quot;qdomnode#previousSiblingElement&quot;&gt;previousSiblingElement&lt;/a&gt; ()를 사용하십시오. 예를 들어 &quot;database&quot;라는 루트 요소에서 &quot;entry&quot;라는 모든 하위 요소를 반복하려면 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eea21ec9c796bfe0bb187704c42fecbdd2583472" translate="yes" xml:space="preserve">
          <source>To build &lt;code&gt;libcrypto&lt;/code&gt; and &lt;code&gt;libssl&lt;/code&gt; shared libraries that are not versioned, but with an</source>
          <target state="translated">To build &lt;code&gt;libcrypto&lt;/code&gt; and &lt;code&gt;libssl&lt;/code&gt; shared libraries that are not versioned, but with an</target>
        </trans-unit>
        <trans-unit id="00add77aed28b67caf71dda17fce457e12a73a0d" translate="yes" xml:space="preserve">
          <source>To build QDoc on Debian-based Linux distributions, it is sufficient to install the &lt;code&gt;libclang-dev&lt;/code&gt; package and its dependencies. For running QDoc, the &lt;code&gt;libclang&lt;/code&gt; package is required.</source>
          <target state="translated">데비안 기반 Linux 배포판에서 QDoc을 빌드하려면 &lt;code&gt;libclang-dev&lt;/code&gt; 패키지와 해당 종속성 을 설치하는 것으로 충분합니다 . QDoc을 실행하려면 &lt;code&gt;libclang&lt;/code&gt; 패키지가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2869b0834ba0a5387d41676a61fb3be92a1deb79" translate="yes" xml:space="preserve">
          <source>To build Qt Multimedia, you need the GStreamer library, base plugins, and development files for your system. To run applications that use Qt Multimedia, you might also need to install the following GStreamer plugins: 'good', 'ugly', 'bad', ffmpeg (0.10), and libav (1.x). These additional plugins contain various codecs for audio and video decoding, as well as the necessary components for using the camera APIs. The package names for GStreamer vary between Linux distributions; try searching for &lt;code&gt;gstreamer&lt;/code&gt; or &lt;code&gt;libgstreamer&lt;/code&gt; in your distribution's package repository to find suitable packages.</source>
          <target state="translated">Qt Multimedia를 구축하려면 시스템의 GStreamer 라이브러리, 기본 플러그인 및 개발 파일이 필요합니다. Qt Multimedia를 사용하는 응용 프로그램을 실행하려면 'good', 'ugly', 'bad', ffmpeg (0.10) 및 libav (1.x)와 같은 GStreamer 플러그인도 설치해야합니다. 이 추가 플러그인에는 오디오 및 비디오 디코딩을위한 다양한 코덱과 카메라 API 사용에 필요한 구성 요소가 포함되어 있습니다. GStreamer의 패키지 이름은 Linux 배포판마다 다릅니다. 배포판의 패키지 저장소에서 &lt;code&gt;gstreamer&lt;/code&gt; 또는 &lt;code&gt;libgstreamer&lt;/code&gt; 를 검색하여 적합한 패키지를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="0e204d395595ecb3b606d87138ab82f5940dd7df" translate="yes" xml:space="preserve">
          <source>To build Qt applications that can host COM objects and ActiveX controls link the application against the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; module by adding</source>
          <target state="translated">COM 객체 및 ActiveX 컨트롤을 호스팅 할 수있는 Qt 애플리케이션을 구축하려면 애플리케이션을 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; 모듈에 추가하여</target>
        </trans-unit>
        <trans-unit id="63f20d95a85aaff22bd169b51f7fe8065d5e09b8" translate="yes" xml:space="preserve">
          <source>To build Qt applications that can host COM objects and ActiveX controls link the application against the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; module by adding</source>
          <target state="translated">To build Qt applications that can host COM objects and ActiveX controls link the application against the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; module by adding</target>
        </trans-unit>
        <trans-unit id="d560d831d02540eb6f4ba5cf3f22dc2a9ad43141" translate="yes" xml:space="preserve">
          <source>To build a helloworld GUI executable, typical usage would be:</source>
          <target state="translated">helloworld GUI 실행 파일을 빌드하려면 일반적인 사용법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0de956a02987d444f3fc1527d2d81f847561aafa" translate="yes" xml:space="preserve">
          <source>To build a helloworld GUI executable, you need the following:</source>
          <target state="translated">To build a helloworld GUI executable, you need the following:</target>
        </trans-unit>
        <trans-unit id="99d8b9f5fba1d0957b73547db7b3557927d30ce8" translate="yes" xml:space="preserve">
          <source>To build an in-process server, use a &lt;code&gt;.pro&lt;/code&gt; file like this:</source>
          <target state="translated">인 프로세스 서버를 빌드하려면 다음과 같이 &lt;code&gt;.pro&lt;/code&gt; 파일을 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="c1614524c5909d18dc641e5b2b4285967e4046f0" translate="yes" xml:space="preserve">
          <source>To build the ActiveX server executable run &lt;code&gt;qmake&lt;/code&gt; to generate the makefile, and use your compiler's make tool as for any other Qt application. The make process will also register the controls in the system registry by calling the resulting executable with the &lt;code&gt;-regserver&lt;/code&gt; command line option.</source>
          <target state="translated">ActiveX 서버 실행 파일을 빌드하려면 &lt;code&gt;qmake&lt;/code&gt; 를 실행 하여 make 파일을 생성하고 다른 Qt 애플리케이션과 마찬가지로 컴파일러의 make 도구를 사용하십시오. make 프로세스는 또한 &lt;code&gt;-regserver&lt;/code&gt; 명령 행 옵션으로 결과 실행 파일을 호출하여 시스템 레지스트리에 제어를 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="187c3080b49928df37dc613f7d01dc6c67e42b54" translate="yes" xml:space="preserve">
          <source>To build the static libraries, change into the &lt;code&gt;activeqt&lt;/code&gt; directory (usually &lt;code&gt;QTDIR/src/activeqt&lt;/code&gt;), and run &lt;code&gt;qmake&lt;/code&gt; and your make tool in both the &lt;code&gt;container&lt;/code&gt; and the &lt;code&gt;control&lt;/code&gt; subdirectory. The &lt;code&gt;qaxcontainer&lt;/code&gt; and &lt;code&gt;qaxserver&lt;/code&gt; libraries will be linked into &lt;code&gt;QTDIR/lib&lt;/code&gt;.</source>
          <target state="translated">정적 라이브러리를 빌드하려면 &lt;code&gt;activeqt&lt;/code&gt; 디렉토리 (일반적으로 &lt;code&gt;QTDIR/src/activeqt&lt;/code&gt; )로 변경하고 &lt;code&gt;container&lt;/code&gt; 및 &lt;code&gt;control&lt;/code&gt; 서브 디렉토리 모두에서 &lt;code&gt;qmake&lt;/code&gt; 및 make 도구를 실행 하십시오 . &lt;code&gt;qaxcontainer&lt;/code&gt; 및 &lt;code&gt;qaxserver&lt;/code&gt; 라이브러리에 연결됩니다 &lt;code&gt;QTDIR/lib&lt;/code&gt; 디렉토리 .</target>
        </trans-unit>
        <trans-unit id="94f0c2be17c91e259f3e0f43ac4876760f349cf1" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; and the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt; libraries. Then run your make tool in &lt;code&gt;tools/testcon&lt;/code&gt; and run the resulting &lt;code&gt;testcon.exe&lt;/code&gt;.</source>
          <target state="translated">도구를 빌드하려면 먼저 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; 및 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt; 라이브러리를 빌드해야합니다 . 그런 다음 &lt;code&gt;tools/testcon&lt;/code&gt; 에서 make 도구를 실행하고 결과 &lt;code&gt;testcon.exe&lt;/code&gt; 를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5ff3c92c87afa5ff07c3d4a06c46484e512a7fc" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; library. Then run your make tool in &lt;code&gt;tools/dumpcpp&lt;/code&gt;.</source>
          <target state="translated">도구를 빌드하려면 먼저 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; 라이브러리를 빌드해야합니다 . 그런 다음 &lt;code&gt;tools/dumpcpp&lt;/code&gt; 에서 make 도구를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b3cc49f1dc4b398c4b35a6ccd2f0e602557c774" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; library. Then run your make tool in &lt;code&gt;tools/dumpdoc&lt;/code&gt;.</source>
          <target state="translated">도구를 빌드하려면 먼저 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; 라이브러리를 빌드해야합니다 . 그런 다음 &lt;code&gt;tools/dumpdoc&lt;/code&gt; 에서 make 도구를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="5481917c903dc495dd10e5f5d75845cee7770ffb" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; and the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt; libraries. Then run your make tool in &lt;code&gt;tools/testcon&lt;/code&gt; and run the resulting &lt;code&gt;testcon.exe&lt;/code&gt;.</source>
          <target state="translated">To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; and the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxserver-module.html&quot;&gt;QAxServer&lt;/a&gt; libraries. Then run your make tool in &lt;code&gt;tools/testcon&lt;/code&gt; and run the resulting &lt;code&gt;testcon.exe&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0f0d372c2c711889a4db972c858ca3fd4a548001" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; library. Then run your make tool in &lt;code&gt;tools/dumpcpp&lt;/code&gt;.</source>
          <target state="translated">To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; library. Then run your make tool in &lt;code&gt;tools/dumpcpp&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="44884b2c437b375b5ec38c90b635190254d0f274" translate="yes" xml:space="preserve">
          <source>To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; library. Then run your make tool in &lt;code&gt;tools/dumpdoc&lt;/code&gt;.</source>
          <target state="translated">To build the tool you must first build the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qaxcontainer-module.html&quot;&gt;QAxContainer&lt;/a&gt; library. Then run your make tool in &lt;code&gt;tools/dumpdoc&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="596d9a7c88baa44a72f65d5301d18ec6a3ed121d" translate="yes" xml:space="preserve">
          <source>To calculate the speed of the interpolation, the easing curve provides the function &lt;a href=&quot;qeasingcurve#valueForProgress&quot;&gt;valueForProgress&lt;/a&gt;(), where the</source>
          <target state="translated">보간 속도를 계산하기 위해 여유 곡선은 &lt;a href=&quot;qeasingcurve#valueForProgress&quot;&gt;valueForProgress&lt;/a&gt; () 함수를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="7ddbcfc7549b915f19e0ae88ce69f07720b295e1" translate="yes" xml:space="preserve">
          <source>To call functions of the COM object that can not be accessed via any of the above methods it is possible to request the COM interface directly using &lt;a href=&quot;qaxbase#queryInterface&quot;&gt;QAxBase::queryInterface&lt;/a&gt;(). To get a C++ definition of the respective interface classes use the &lt;code&gt;#import&lt;/code&gt; directive with the type library provided with the control; see your compiler manual for details.</source>
          <target state="translated">위의 방법을 통해 액세스 할 수없는 COM 객체의 함수를 호출하려면 &lt;a href=&quot;qaxbase#queryInterface&quot;&gt;QAxBase :: queryInterface&lt;/a&gt; ()를 사용하여 COM 인터페이스를 직접 요청할 수 있습니다 . 각 인터페이스 클래스의 C ++ 정의를 얻으려면 컨트롤과 함께 제공된 형식 라이브러리와 함께 &lt;code&gt;#import&lt;/code&gt; 지시문을 사용하십시오 . 자세한 내용은 컴파일러 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d4dd8cea10b120d22c91995eb8e1c82760069733" translate="yes" xml:space="preserve">
          <source>To call the methods of a COM interface described by the following IDL</source>
          <target state="translated">다음 IDL에 설명 된 COM 인터페이스의 메서드를 호출하려면</target>
        </trans-unit>
        <trans-unit id="6e3233e4c484d2910da29a4b4c0dfa747589a488" translate="yes" xml:space="preserve">
          <source>To cancel a prepared inserted call &lt;a href=&quot;qabstractnetworkcache#remove&quot;&gt;remove&lt;/a&gt;() on the metadata's url.</source>
          <target state="translated">준비된 삽입 된 호출을 취소하려면 메타 데이터 URL에서 ()을 &lt;a href=&quot;qabstractnetworkcache#remove&quot;&gt;제거하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bcbd7a07bdc6638917f260af881a7fd8dbda4d21" translate="yes" xml:space="preserve">
          <source>To cater for left-to-right and right-to-left languages you can set a block's direction with setDirection(). Paragraph alignment is set with &lt;a href=&quot;qtextblockformat#setAlignment&quot;&gt;setAlignment&lt;/a&gt;(). Margins are controlled by &lt;a href=&quot;qtextblockformat#setTopMargin&quot;&gt;setTopMargin&lt;/a&gt;(), &lt;a href=&quot;qtextblockformat#setBottomMargin&quot;&gt;setBottomMargin&lt;/a&gt;(), &lt;a href=&quot;qtextblockformat#setLeftMargin&quot;&gt;setLeftMargin&lt;/a&gt;(), &lt;a href=&quot;qtextblockformat#setRightMargin&quot;&gt;setRightMargin&lt;/a&gt;(). Overall indentation is set with &lt;a href=&quot;qtextblockformat#setIndent&quot;&gt;setIndent&lt;/a&gt;(), the indentation of the first line with &lt;a href=&quot;qtextblockformat#setTextIndent&quot;&gt;setTextIndent&lt;/a&gt;().</source>
          <target state="translated">왼쪽에서 오른쪽으로, 오른쪽에서 왼쪽으로 쓰는 언어를 제공하기 위해 setDirection ()을 사용하여 블록의 방향을 설정할 수 있습니다. 단락 정렬은 &lt;a href=&quot;qtextblockformat#setAlignment&quot;&gt;setAlignment&lt;/a&gt; ()로 설정됩니다 . 여백은 &lt;a href=&quot;qtextblockformat#setTopMargin&quot;&gt;setTopMargin&lt;/a&gt; (), &lt;a href=&quot;qtextblockformat#setBottomMargin&quot;&gt;setBottomMargin&lt;/a&gt; (), &lt;a href=&quot;qtextblockformat#setLeftMargin&quot;&gt;setLeftMargin&lt;/a&gt; (), &lt;a href=&quot;qtextblockformat#setRightMargin&quot;&gt;setRightMargin&lt;/a&gt; ()에 의해 제어됩니다 . 전체 들여 쓰기는 &lt;a href=&quot;qtextblockformat#setTextIndent&quot;&gt;setTextIndent&lt;/a&gt; ()로 첫 줄의 들여 쓰기 인 &lt;a href=&quot;qtextblockformat#setIndent&quot;&gt;setIndent&lt;/a&gt; () 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="1e00d24d3f10292a6dc92284633f8da4fc3e1787" translate="yes" xml:space="preserve">
          <source>To cause static plugins actually being linked and instantiated, &lt;a href=&quot;#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt;() macros are also needed in application code, but those are automatically generated by qmake and added to your application project.</source>
          <target state="translated">정적 플러그인이 실제로 링크되고 인스턴스화되도록하려면 &lt;a href=&quot;#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt; () 매크로도 애플리케이션 코드에 필요하지만 qmake가 자동으로 생성하여 애플리케이션 프로젝트에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="9cd7aea4f844daa2876f2dcc6e8e873eca587ab7" translate="yes" xml:space="preserve">
          <source>To cause static plugins actually being linked and instantiated, &lt;a href=&quot;qtplugin#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt;() macros are also needed in application code, but those are automatically generated by qmake and added to your application project.</source>
          <target state="translated">To cause static plugins actually being linked and instantiated, &lt;a href=&quot;qtplugin#Q_IMPORT_PLUGIN&quot;&gt;Q_IMPORT_PLUGIN&lt;/a&gt;() macros are also needed in application code, but those are automatically generated by qmake and added to your application project.</target>
        </trans-unit>
        <trans-unit id="d9fa74a2427a59666f310118acb8c43c5e3115c1" translate="yes" xml:space="preserve">
          <source>To change model data, you can assign updated values to the &lt;code&gt;model&lt;/code&gt; properties. The QML &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; is editable by default whereas C++ models must implement setData() to become editable. Integer and JavaScript array models are read-only.</source>
          <target state="translated">모델 데이터를 변경하기 위해 업데이트 된 값을 &lt;code&gt;model&lt;/code&gt; 속성에 할당 할 수 있습니다. QML &lt;a href=&quot;qml-qtqml-models-listmodel&quot;&gt;ListModel&lt;/a&gt; 은 기본적으로 편집 가능하지만 C ++ 모델은 편집 가능한 setData ()를 구현해야합니다. 정수 및 JavaScript 배열 모델은 읽기 전용입니다.</target>
        </trans-unit>
        <trans-unit id="0a00363765f988416bdb7cfb367b0cc2fb38426c" translate="yes" xml:space="preserve">
          <source>To change the behavior of this function, i.e. to modify what &lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit&lt;/a&gt; can paste and how it is being pasted, reimplement the virtual &lt;a href=&quot;qplaintextedit#canInsertFromMimeData&quot;&gt;canInsertFromMimeData&lt;/a&gt;() and &lt;a href=&quot;qplaintextedit#insertFromMimeData&quot;&gt;insertFromMimeData&lt;/a&gt;() functions.</source>
          <target state="translated">이 함수의 동작을 변경하려면, 즉 &lt;a href=&quot;qplaintextedit&quot;&gt;QPlainTextEdit에서&lt;/a&gt; 붙여 넣기 할 수 있는 내용 과 붙여 넣기 방법 을 수정 하려면 가상 &lt;a href=&quot;qplaintextedit#canInsertFromMimeData&quot;&gt;canInsertFromMimeData&lt;/a&gt; () 및 &lt;a href=&quot;qplaintextedit#insertFromMimeData&quot;&gt;insertFromMimeData&lt;/a&gt; () 함수를 다시 구현하십시오 .</target>
        </trans-unit>
        <trans-unit id="52f1e82bdd16cc15e2ed5d0bc080208f6abfaf46" translate="yes" xml:space="preserve">
          <source>To change the behavior of this function, i.e. to modify what &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit&lt;/a&gt; can paste and how it is being pasted, reimplement the virtual &lt;a href=&quot;qtextedit#canInsertFromMimeData&quot;&gt;canInsertFromMimeData&lt;/a&gt;() and &lt;a href=&quot;qtextedit#insertFromMimeData&quot;&gt;insertFromMimeData&lt;/a&gt;() functions.</source>
          <target state="translated">이 함수의 동작을 변경하려면, 즉 &lt;a href=&quot;qtextedit&quot;&gt;QTextEdit에서&lt;/a&gt; 붙여 넣을 수있는 것과 수정하는 방법 을 수정 하려면 virtual &lt;a href=&quot;qtextedit#canInsertFromMimeData&quot;&gt;canInsertFromMimeData&lt;/a&gt; () 및 &lt;a href=&quot;qtextedit#insertFromMimeData&quot;&gt;insertFromMimeData&lt;/a&gt; () 함수를 다시 구현하십시오 .</target>
        </trans-unit>
        <trans-unit id="becd3a6b72959ec86000882e8742c680a69d93b7" translate="yes" xml:space="preserve">
          <source>To change the position of the &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; within a &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;, use the &lt;a href=&quot;#tab-bar-sub&quot;&gt;tab-bar&lt;/a&gt; subcontrol (and set subcontrol-position).</source>
          <target state="translated">&lt;a href=&quot;qtabbar&quot;&gt;QTabWidget&lt;/a&gt; 내에서 &lt;a href=&quot;qtabwidget&quot;&gt;QTabBar&lt;/a&gt; 의 위치를 ​​변경하려면 &lt;a href=&quot;#tab-bar-sub&quot;&gt;탭 막대 &lt;/a&gt;하위 제어 를 사용하십시오 (및 하위 제어 위치 설정).</target>
        </trans-unit>
        <trans-unit id="00dfabb7928b6e13f1261d6c1f9c1eeae2717678" translate="yes" xml:space="preserve">
          <source>To change the position of the &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; within a &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;, use the &lt;a href=&quot;stylesheet-reference#tab-bar-sub&quot;&gt;tab-bar&lt;/a&gt; subcontrol (and set subcontrol-position).</source>
          <target state="translated">To change the position of the &lt;a href=&quot;qtabbar&quot;&gt;QTabBar&lt;/a&gt; within a &lt;a href=&quot;qtabwidget&quot;&gt;QTabWidget&lt;/a&gt;, use the &lt;a href=&quot;stylesheet-reference#tab-bar-sub&quot;&gt;tab-bar&lt;/a&gt; subcontrol (and set subcontrol-position).</target>
        </trans-unit>
        <trans-unit id="8c64a9defcb46a9385be110dd92f917a63a0a053" translate="yes" xml:space="preserve">
          <source>To change this position, use the &lt;a href=&quot;qml-qtmultimedia-audio#seek-method&quot;&gt;seek()&lt;/a&gt; method.</source>
          <target state="translated">이 위치를 변경하려면 &lt;a href=&quot;qml-qtmultimedia-audio#seek-method&quot;&gt;seek ()&lt;/a&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1ab847e5c531a4b8b265b3ac5dd99eff36271ed2" translate="yes" xml:space="preserve">
          <source>To change this position, use the &lt;a href=&quot;qml-qtmultimedia-mediaplayer#seek-method&quot;&gt;seek()&lt;/a&gt; method.</source>
          <target state="translated">이 위치를 변경하려면 &lt;a href=&quot;qml-qtmultimedia-mediaplayer#seek-method&quot;&gt;seek ()&lt;/a&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9720435a742525e10b9be1f28192d07456b4c60f" translate="yes" xml:space="preserve">
          <source>To change this position, use the &lt;a href=&quot;qml-qtmultimedia-video#seek-method&quot;&gt;seek()&lt;/a&gt; method.</source>
          <target state="translated">이 위치를 변경하려면 &lt;a href=&quot;qml-qtmultimedia-video#seek-method&quot;&gt;seek ()&lt;/a&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ee5d4dc8efd5128635d763bc6f5e48bc5cea72b" translate="yes" xml:space="preserve">
          <source>To check at runtime what is supported, use the &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt;.shaderSourceType and &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt;.shaderCompilationType properties. Note that these are bitmasks, because some backends may support multiple approaches.</source>
          <target state="translated">런타임에 지원되는 내용을 확인하려면 &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; .shaderSourceType 및 &lt;a href=&quot;qml-qtquick-graphicsinfo&quot;&gt;GraphicsInfo&lt;/a&gt; .shaderCompilationType 속성을 사용하십시오. 일부 백엔드는 다중 접근 방식을 지원할 수 있기 때문에 비트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="640bbe38ce134e3166250195b4b4fad9fd0ea89c" translate="yes" xml:space="preserve">
          <source>To check if a file has the expected MIME type, you should use &lt;a href=&quot;qmimetype#inherits&quot;&gt;inherits&lt;/a&gt;() rather than a simple string comparison based on the &lt;a href=&quot;qmimetype#name-prop&quot;&gt;name&lt;/a&gt;(). This is because MIME types can inherit from each other: for instance a C source file is a specific type of plain text file, so text/x-csrc inherits text/plain.</source>
          <target state="translated">파일에 예상 MIME 형식이 있는지 확인하려면 &lt;a href=&quot;qmimetype#name-prop&quot;&gt;이름&lt;/a&gt; ()을 기준으로 간단한 문자열 비교 대신 &lt;a href=&quot;qmimetype#inherits&quot;&gt;inherit&lt;/a&gt; () 를 사용해야합니다 . 이는 MIME 유형이 서로 상속 될 수 있기 때문입니다. 예를 들어 C 소스 파일은 특정 유형의 일반 텍스트 파일이므로 text / x-csrc는 text / plain을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="e66850a5141a7d46203ce1106e6dfb88e25399a8" translate="yes" xml:space="preserve">
          <source>To check if the current backend supports the feature</source>
          <target state="translated">현재 백엔드가 기능을 지원하는지 확인하려면</target>
        </trans-unit>
        <trans-unit id="9fc033fba68d185dc7bae7af0957309c9103f0de" translate="yes" xml:space="preserve">
          <source>To check if two numbers are equivalent, use normalized() on both version numbers before performing the compare.</source>
          <target state="translated">두 숫자가 동일한 지 확인하려면 비교를 수행하기 전에 두 버전 번호에서 normalized ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="21747a8db96a8d50b23ef1b8939e679ea8aab6ab" translate="yes" xml:space="preserve">
          <source>To check visibility, use !&lt;a href=&quot;qwidget#visible-prop&quot;&gt;isVisible&lt;/a&gt;() instead (notice the exclamation mark).</source>
          <target state="translated">가시성을 확인하려면!를 사용하십시오. &lt;a href=&quot;qwidget#visible-prop&quot;&gt;isVisible&lt;/a&gt; () 대신 느낌표를 주목하십시오.</target>
        </trans-unit>
        <trans-unit id="d8615a6b7aa9b08cb7180b1fddebc2cc3c03723b" translate="yes" xml:space="preserve">
          <source>To check whether a message type is enabled or not, use one of these methods: &lt;a href=&quot;qloggingcategory#isDebugEnabled&quot;&gt;isDebugEnabled&lt;/a&gt;(), &lt;a href=&quot;qloggingcategory#isInfoEnabled&quot;&gt;isInfoEnabled&lt;/a&gt;(), &lt;a href=&quot;qloggingcategory#isWarningEnabled&quot;&gt;isWarningEnabled&lt;/a&gt;(), and &lt;a href=&quot;qloggingcategory#isCriticalEnabled&quot;&gt;isCriticalEnabled&lt;/a&gt;().</source>
          <target state="translated">To check whether a message type is enabled or not, use one of these methods: &lt;a href=&quot;qloggingcategory#isDebugEnabled&quot;&gt;isDebugEnabled&lt;/a&gt;(), &lt;a href=&quot;qloggingcategory#isInfoEnabled&quot;&gt;isInfoEnabled&lt;/a&gt;(), &lt;a href=&quot;qloggingcategory#isWarningEnabled&quot;&gt;isWarningEnabled&lt;/a&gt;(), and &lt;a href=&quot;qloggingcategory#isCriticalEnabled&quot;&gt;isCriticalEnabled&lt;/a&gt;().</target>
        </trans-unit>
        <trans-unit id="20209323a4b5d4933ad26616eda6a242dd066c78" translate="yes" xml:space="preserve">
          <source>To check whether a system tray is present on the user's desktop, call the &lt;a href=&quot;qsystemtrayicon#isSystemTrayAvailable&quot;&gt;QSystemTrayIcon::isSystemTrayAvailable&lt;/a&gt;() static function.</source>
          <target state="translated">사용자 트레이에 시스템 트레이가 있는지 확인하려면 &lt;a href=&quot;qsystemtrayicon#isSystemTrayAvailable&quot;&gt;QSystemTrayIcon :: isSystemTrayAvailable&lt;/a&gt; () 정적 함수를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="cc805a6dc1c18de12edfec793bf45abfdc670417" translate="yes" xml:space="preserve">
          <source>To check whether the response came from the cache or from the network, the following can be applied:</source>
          <target state="translated">응답이 캐시 또는 네트워크에서 온 것인지 확인하기 위해 다음을 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2170dd98311055f932a1f2f3ce4aec490fb711a" translate="yes" xml:space="preserve">
          <source>To choose the name that your thread will be given (as identified by the command &lt;code&gt;ps -L&lt;/code&gt; on Linux, for example), you can call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt; before starting the thread. If you don't call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt;, the name given to your thread will be the class name of the runtime type of your thread object (for example, &lt;code&gt;&quot;RenderThread&quot;&lt;/code&gt; in the case of the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-threads-mandelbrot-example.html#&quot;&gt;Mandelbrot Example&lt;/a&gt;, as that is the name of the &lt;a href=&quot;qthread&quot;&gt;QThread&lt;/a&gt; subclass). Note that this is currently not available with release builds on Windows.</source>
          <target state="translated">예를 들어 Linux에서 &lt;code&gt;ps -L&lt;/code&gt; 명령으로 식별 되는대로 스레드에 부여 할 이름을 선택하려면 스레드 를 시작하기 전에 &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName ()을&lt;/a&gt; 호출 할 수 있습니다 . &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName ()을&lt;/a&gt; 호출하지 않으면 스레드에 지정된 이름은 스레드 객체의 런타임 유형의 클래스 이름이됩니다 ( &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtcore-threads-mandelbrot-example.html#&quot;&gt;예&lt;/a&gt; : Mandelbrot Example 의 경우 &lt;code&gt;&quot;RenderThread&quot;&lt;/code&gt; ). &lt;a href=&quot;qthread&quot;&gt;QThread의&lt;/a&gt; 서브 클래스). 현재 Windows의 릴리스 빌드에서는 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="aecb02a913a38d16d3e2c3eff90e3e0079b12f30" translate="yes" xml:space="preserve">
          <source>To choose the name that your thread will be given (as identified by the command &lt;code&gt;ps -L&lt;/code&gt; on Linux, for example), you can call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt; before starting the thread. If you don't call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt;, the name given to your thread will be the class name of the runtime type of your thread object (for example, &lt;code&gt;&quot;RenderThread&quot;&lt;/code&gt; in the case of the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-threads-mandelbrot-example.html&quot;&gt;Mandelbrot Example&lt;/a&gt;, as that is the name of the QThread subclass). Note that this is currently not available with release builds on Windows.</source>
          <target state="translated">To choose the name that your thread will be given (as identified by the command &lt;code&gt;ps -L&lt;/code&gt; on Linux, for example), you can call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt; before starting the thread. If you don't call &lt;a href=&quot;qobject#objectName-prop&quot;&gt;setObjectName()&lt;/a&gt;, the name given to your thread will be the class name of the runtime type of your thread object (for example, &lt;code&gt;&quot;RenderThread&quot;&lt;/code&gt; in the case of the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtcore-threads-mandelbrot-example.html&quot;&gt;Mandelbrot Example&lt;/a&gt;, as that is the name of the QThread subclass). Note that this is currently not available with release builds on Windows.</target>
        </trans-unit>
        <trans-unit id="fd9c381a077048f82ecac6868f9013140a3560c7" translate="yes" xml:space="preserve">
          <source>To claim support for http and https the above entry in the Info.plist file is not allowed. This is only possible when you add your domain to the Entitlements file:</source>
          <target state="translated">To claim support for http and https the above entry in the Info.plist file is not allowed. This is only possible when you add your domain to the Entitlements file:</target>
        </trans-unit>
        <trans-unit id="cb6b21e7bba8f8c702540a64a1c95c63c8ec97b8" translate="yes" xml:space="preserve">
          <source>To clear an anchor value, set it to &lt;code&gt;undefined&lt;/code&gt;.</source>
          <target state="translated">앵커 값을 지우려면 &lt;code&gt;undefined&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="1f1825b9c8a37a50d24ef3d20a57bce31df82588" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, &lt;a href=&quot;qbar3dseries#invalidSelectionPosition&quot;&gt;invalidSelectionPosition&lt;/a&gt;() is set as</source>
          <target state="translated">이 시리즈에서 선택을 지우려면 &lt;a href=&quot;qbar3dseries#invalidSelectionPosition&quot;&gt;invalidSelectionPosition&lt;/a&gt; ()이</target>
        </trans-unit>
        <trans-unit id="429aeecebcca5aeec29093c841d6e67eade5d6cf" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, &lt;a href=&quot;qml-qtdatavisualization-surface3dseries#invalidSelectionPosition-prop&quot;&gt;invalidSelectionPosition&lt;/a&gt; is set as the position. If this series is added to a graph, the graph can adjust the selection according to user interaction or if it becomes invalid.</source>
          <target state="translated">이 시리즈에서 선택을 지우려면 &lt;a href=&quot;qml-qtdatavisualization-surface3dseries#invalidSelectionPosition-prop&quot;&gt;invalidSelectionPosition&lt;/a&gt; 이 위치로 설정됩니다. 이 계열이 그래프에 추가되면 그래프는 사용자 상호 작용에 따라 또는 유효하지 않은 경우 선택을 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aaf607a23811745069fde6b201c651b4eac9d0e5" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, &lt;a href=&quot;qscatter3dseries#invalidSelectionIndex&quot;&gt;invalidSelectionIndex&lt;/a&gt;() is set as</source>
          <target state="translated">이 시리즈에서 선택을 지우려면 &lt;a href=&quot;qscatter3dseries#invalidSelectionIndex&quot;&gt;invalidSelectionIndex&lt;/a&gt; ()가</target>
        </trans-unit>
        <trans-unit id="6b4ffb34de657c74ab25a489628184b27204c799" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, &lt;a href=&quot;qsurface3dseries#invalidSelectionPosition&quot;&gt;invalidSelectionPosition&lt;/a&gt;() is set as</source>
          <target state="translated">이 시리즈에서 선택을 지우려면 &lt;a href=&quot;qsurface3dseries#invalidSelectionPosition&quot;&gt;invalidSelectionPosition&lt;/a&gt; ()이</target>
        </trans-unit>
        <trans-unit id="3547c182ba77bff841fd3ea66ba3a4f560835dac" translate="yes" xml:space="preserve">
          <source>To clear selection from this series, set &lt;a href=&quot;qml-qtdatavisualization-bar3dseries#invalidSelectionPosition-prop&quot;&gt;invalidSelectionPosition&lt;/a&gt; as the position.</source>
          <target state="translated">이 시리즈에서 선택을 지우려면 &lt;a href=&quot;qml-qtdatavisualization-bar3dseries#invalidSelectionPosition-prop&quot;&gt;invalidSelectionPosition&lt;/a&gt; 을 위치로 설정 하십시오.</target>
        </trans-unit>
        <trans-unit id="8cef577b4897a98142ef0babd4324111d6d0632b" translate="yes" xml:space="preserve">
          <source>To clear the pointer held without deleting the object it points to (and hence take ownership of the object), use &lt;a href=&quot;qscopedpointer#take&quot;&gt;take&lt;/a&gt;() instead.</source>
          <target state="translated">가리키는 객체를 삭제하지 않고 보유한 포인터를 지우려면 (따라서 객체의 소유권을 &lt;a href=&quot;qscopedpointer#take&quot;&gt;가져 오려면&lt;/a&gt; ) 대신 take ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2bb5744d865a5c89ea379146ea4bc698001057a3" translate="yes" xml:space="preserve">
          <source>To clear the search highlight, just pass an empty string.</source>
          <target state="translated">검색 하이라이트를 지우려면 빈 문자열을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="75f37ad6da3248d89d7e621c33edbd844abcbe3d" translate="yes" xml:space="preserve">
          <source>To clear the selection, just pass an empty string.</source>
          <target state="translated">선택을 지우려면 빈 문자열을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="4521bd570c5c0d10f60de205e7196927a1793b53" translate="yes" xml:space="preserve">
          <source>To close the socket, call &lt;a href=&quot;qabstractsocket#disconnectFromHost&quot;&gt;disconnectFromHost&lt;/a&gt;(). &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::ClosingState&lt;/a&gt;. After all pending data has been written to the socket, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; actually closes the socket, enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::UnconnectedState&lt;/a&gt;, and emits &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;(). If you want to abort a connection immediately, discarding all pending data, call &lt;a href=&quot;qabstractsocket#abort&quot;&gt;abort&lt;/a&gt;() instead. If the remote host closes the connection, &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; will emit error(&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket::RemoteHostClosedError&lt;/a&gt;), during which the socket state will still be &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;, and then the &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;() signal will be emitted.</source>
          <target state="translated">소켓을 닫으려면 &lt;a href=&quot;qabstractsocket#disconnectFromHost&quot;&gt;disconnectFromHost를&lt;/a&gt; 호출하십시오. ()를 . &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; 은 &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket :: ClosingState에&lt;/a&gt; 들어갑니다 . 보류중인 모든 데이터가 소켓에 기록 된 후 &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket은&lt;/a&gt; 실제로 소켓을 닫고 &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket :: UnconnectedState에&lt;/a&gt; 들어가 연결 이 &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;끊어집니다&lt;/a&gt; (). 연결을 즉시 중단하고 보류중인 모든 데이터를 삭제하려면 대신 &lt;a href=&quot;qabstractsocket#abort&quot;&gt;중단&lt;/a&gt; ()을 호출하십시오 . 원격 호스트가 연결을 닫으면 &lt;a href=&quot;qabstractsocket&quot;&gt;QAbstractSocket&lt;/a&gt; 은 오류 ( &lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket :: RemoteHostClosedError&lt;/a&gt; )를 발생시키는 동안 소켓 상태는 여전히 &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt; 이고 연결 이 &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;끊어집니다&lt;/a&gt;() 신호가 방출됩니다.</target>
        </trans-unit>
        <trans-unit id="7725608605ccfb01a9bfc276937b17a4daa42613" translate="yes" xml:space="preserve">
          <source>To close the socket, call &lt;a href=&quot;qabstractsocket#disconnectFromHost&quot;&gt;disconnectFromHost&lt;/a&gt;(). QAbstractSocket enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::ClosingState&lt;/a&gt;. After all pending data has been written to the socket, QAbstractSocket actually closes the socket, enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::UnconnectedState&lt;/a&gt;, and emits &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;(). If you want to abort a connection immediately, discarding all pending data, call &lt;a href=&quot;qabstractsocket#abort&quot;&gt;abort&lt;/a&gt;() instead. If the remote host closes the connection, QAbstractSocket will emit &lt;a href=&quot;qabstractsocket#errorOccurred&quot;&gt;errorOccurred&lt;/a&gt;(&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket::RemoteHostClosedError&lt;/a&gt;), during which the socket state will still be &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;, and then the &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;() signal will be emitted.</source>
          <target state="translated">To close the socket, call &lt;a href=&quot;qabstractsocket#disconnectFromHost&quot;&gt;disconnectFromHost&lt;/a&gt;(). QAbstractSocket enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::ClosingState&lt;/a&gt;. After all pending data has been written to the socket, QAbstractSocket actually closes the socket, enters &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;QAbstractSocket::UnconnectedState&lt;/a&gt;, and emits &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;(). If you want to abort a connection immediately, discarding all pending data, call &lt;a href=&quot;qabstractsocket#abort&quot;&gt;abort&lt;/a&gt;() instead. If the remote host closes the connection, QAbstractSocket will emit &lt;a href=&quot;qabstractsocket#errorOccurred&quot;&gt;errorOccurred&lt;/a&gt;(&lt;a href=&quot;qabstractsocket#SocketError-enum&quot;&gt;QAbstractSocket::RemoteHostClosedError&lt;/a&gt;), during which the socket state will still be &lt;a href=&quot;qabstractsocket#SocketState-enum&quot;&gt;ConnectedState&lt;/a&gt;, and then the &lt;a href=&quot;qabstractsocket#disconnected&quot;&gt;disconnected&lt;/a&gt;() signal will be emitted.</target>
        </trans-unit>
        <trans-unit id="ad76e35c696315e34a7861f3714d7bf48681d198" translate="yes" xml:space="preserve">
          <source>To communicate with a &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; or &lt;a href=&quot;qml-qtwebchannel-webchannel&quot;&gt;WebChannel&lt;/a&gt;, a client must use and set up the JavaScript API provided by &lt;code&gt;qwebchannel.js&lt;/code&gt;. For clients run inside &lt;a href=&quot;qtwebengine-index&quot;&gt;Qt WebEngine&lt;/a&gt;, you can load the file via &lt;code&gt;qrc:///qtwebchannel/qwebchannel.js&lt;/code&gt;. For external clients, you need to copy the file to your web server. Then instantiate a &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; object and pass it a transport object and a callback function, which will be invoked once the initialization of the channel finishes and the published objects become available.</source>
          <target state="translated">&lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; 또는 &lt;a href=&quot;qml-qtwebchannel-webchannel&quot;&gt;WebChannel&lt;/a&gt; 과 통신하려면 클라이언트는 &lt;code&gt;qwebchannel.js&lt;/code&gt; 에서 제공하는 JavaScript API를 사용하고 설정해야합니다 . &lt;a href=&quot;qtwebengine-index&quot;&gt;Qt &lt;/a&gt; &lt;code&gt;qrc:///qtwebchannel/qwebchannel.js&lt;/code&gt; 내에서 실행되는 클라이언트의 경우 qrc : ///qtwebchannel/qwebchannel.js 를 통해 파일을로드 할 수 있습니다 . 외부 클라이언트의 경우 파일을 웹 서버에 복사해야합니다. 그런 다음 &lt;a href=&quot;qwebchannel&quot;&gt;QWebChannel&lt;/a&gt; 객체를 인스턴스화하고 전송 객체와 콜백 함수를 전달합니다. 이는 채널 초기화가 완료되고 게시 된 객체가 사용 가능 해지면 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2d7c886843b6483c6becfe351eff0447da11db72" translate="yes" xml:space="preserve">
          <source>To compile a state machine, the following lines have to be added to a .pro file:</source>
          <target state="translated">상태 머신을 컴파일하려면 .pro 파일에 다음 행을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="385fd6ee52a45816bc30f53d324d45284678cafa" translate="yes" xml:space="preserve">
          <source>To complete the connection, select a signal from the source object and a slot from the destination object, then click &lt;b&gt;OK&lt;/b&gt;. Click &lt;b&gt;Cancel&lt;/b&gt; if you wish to abandon the connection.</source>
          <target state="translated">연결을 완료하려면 소스 객체에서 신호를 선택하고 대상 객체에서 슬롯을 선택한 다음 &lt;b&gt;확인&lt;/b&gt; 을 클릭하십시오 . 연결을 &lt;b&gt;취소&lt;/b&gt; 하려면 &lt;b&gt;취소를&lt;/b&gt; 클릭하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d4403ef3c0807c9173800f15ae382e772988187" translate="yes" xml:space="preserve">
          <source>To complete the installation, select the components that you want to install and follow the instructions of the installation program.</source>
          <target state="translated">설치를 완료하려면 설치할 구성 요소를 선택하고 설치 프로그램의 지시 사항을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="6fd982abdeefd37c9280dd7d76e4c9e45e9ee32b" translate="yes" xml:space="preserve">
          <source>To compute the value of an attribute, enclose the expression in curly braces and embed it in the attribute value:</source>
          <target state="translated">속성 값을 계산하려면 식을 중괄호로 묶고 속성 값에 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="0c44d8989e755cc8695a68173fe5504004b8cc1f" translate="yes" xml:space="preserve">
          <source>To configure Qt for cross-platform development and deployment, the development toolchain for the target platform needs to be set up. This set up varies among the &lt;a href=&quot;supported-platforms&quot;&gt;Supported Platforms&lt;/a&gt;.</source>
          <target state="translated">To configure Qt for cross-platform development and deployment, the development toolchain for the target platform needs to be set up. This set up varies among the &lt;a href=&quot;supported-platforms&quot;&gt;Supported Platforms&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="1accdd21abcb118fb19d47858fd3802dff230382" translate="yes" xml:space="preserve">
          <source>To configure Qt for cross-platform development and deployment, the development toolchain for the target platform needs to be set up. This set up varies among the &lt;a href=&quot;supported-platforms#&quot;&gt;Supported Platforms&lt;/a&gt;.</source>
          <target state="translated">크로스 플랫폼 개발 및 배포를 위해 Qt를 구성하려면 대상 플랫폼의 개발 툴체인을 설정해야합니다. 이 설정은 &lt;a href=&quot;supported-platforms#&quot;&gt;지원되는 플랫폼에&lt;/a&gt; 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="28d7dc8fb66f10c0e99b4aadc3a922818a72a339" translate="yes" xml:space="preserve">
          <source>To configure the behavior of the EGLStream object used by the backend, use the &lt;code&gt;QT_QPA_EGLFS_STREAM_FIFO_LENGTH&lt;/code&gt; environment variable. This assumes that &lt;code&gt;KHR_stream_fifo&lt;/code&gt; is supported by the target system. By default the stream operates in mailbox mode. To switch to FIFO mode, set a value of 1 or greater. The value specifies the maximum number of frames the stream can hold.</source>
          <target state="translated">백엔드가 사용하는 EGLStream 오브젝트의 작동을 구성하려면 &lt;code&gt;QT_QPA_EGLFS_STREAM_FIFO_LENGTH&lt;/code&gt; 환경 변수를 사용하십시오 . 이는 &lt;code&gt;KHR_stream_fifo&lt;/code&gt; 가 대상 시스템에서 지원 된다고 가정합니다 . 기본적으로 스트림은 사서함 모드에서 작동합니다. FIFO 모드로 전환하려면 1 이상의 값을 설정하십시오. 이 값은 스트림이 보유 할 수있는 최대 프레임 수를 지정합니다.</target>
        </trans-unit>
        <trans-unit id="348fe7189be0fc647a0f804a97da34178809c40a" translate="yes" xml:space="preserve">
          <source>To connect an object to the form itself, simply position the cursor over the form and release the mouse button. The end point of the connection changes to the electrical &quot;ground&quot; symbol.</source>
          <target state="translated">개체를 폼 자체에 연결하려면 커서를 폼 위에 놓고 마우스 단추를 놓습니다. 연결의 끝 점이 전기 &quot;접지&quot;기호로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="ecd4e0bff8add9df7b65d573b18eb28d4f311c11" translate="yes" xml:space="preserve">
          <source>To connect signals to (or receive signals from) dynamically created objects, use the signal &lt;code&gt;connect()&lt;/code&gt; method. See &lt;a href=&quot;qtqml-syntax-signals#connecting-signals-to-methods-and-signals&quot;&gt;Connecting Signals to Methods and Signals&lt;/a&gt; for more information.</source>
          <target state="translated">동적으로 생성 된 객체에 신호를 연결하거나 신호를 수신하려면 signal &lt;code&gt;connect()&lt;/code&gt; 메서드를 사용하십시오 . 자세한 내용 &lt;a href=&quot;qtqml-syntax-signals#connecting-signals-to-methods-and-signals&quot;&gt;은 방법 및 신호&lt;/a&gt; 에 신호 연결 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b8092fbe768516ca34194cc8702ac92e5d739899" translate="yes" xml:space="preserve">
          <source>To connect the &lt;code&gt;int&lt;/code&gt; version to &lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;QSlider::valueChanged&lt;/a&gt;(), the two syntaxes are:</source>
          <target state="translated">연결하려면 &lt;code&gt;int&lt;/code&gt; 버전에 &lt;a href=&quot;qabstractslider#valueChanged&quot;&gt;QSlider ::의 valueChanged을&lt;/a&gt; (), 두 구문은 다음과 같습니다 :</target>
        </trans-unit>
        <trans-unit id="f2c9772a576ce009f821c0e6f9a6307beb2b63fd" translate="yes" xml:space="preserve">
          <source>To connect the &lt;code&gt;query&lt;/code&gt; to the custom node model, we must bind a variable name used in the query to a node in the model. The variable can then be used in the query as a starting node. First, an &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;index&lt;/a&gt; for the desired starting node is retrieved by calling &lt;a href=&quot;qabstractxmlnodemodel#createIndex&quot;&gt;QAbstractXmlNodeModel::createIndex&lt;/a&gt;(). Then the index is bound to a variable name, in this case &lt;code&gt;queryRoot&lt;/code&gt;, by passing the name and the index to &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery::bindVariable&lt;/a&gt;(). The query can then use a variable reference &lt;code&gt;$queryRoot&lt;/code&gt; to refer to the starting node. Note that if the &lt;a href=&quot;qxmlquery&quot;&gt;query&lt;/a&gt; uses multiple variable references, a call to &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery::bindVariable&lt;/a&gt;() is required to bind each different variable name to a node in the model.</source>
          <target state="translated">&lt;code&gt;query&lt;/code&gt; 를 사용자 정의 노드 모델에 연결하려면 쿼리 에 사용 된 변수 이름을 모델의 노드에 바인딩해야합니다. 그런 다음 변수를 쿼리에서 시작 노드로 사용할 수 있습니다. 먼저 &lt;a href=&quot;qabstractxmlnodemodel#createIndex&quot;&gt;QAbstractXmlNodeModel :: createIndex&lt;/a&gt; ()를 호출하여 원하는 시작 노드에 대한 &lt;a href=&quot;qxmlnodemodelindex&quot;&gt;인덱스&lt;/a&gt; 를 검색합니다 . 그런 다음 이름과 색인을 &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt;QXmlQuery :: bindVariable&lt;/a&gt; () 에 전달 하여 색인이 변수 이름 (이 경우 &lt;code&gt;queryRoot&lt;/code&gt; )에 바인드됩니다 . 그런 다음 쿼리는 변수 참조를 사용할 수 있습니다 &lt;code&gt;$queryRoot&lt;/code&gt; 를 사용하여 시작 노드를 참조 할 수 있습니다. &lt;a href=&quot;qxmlquery&quot;&gt;쿼리에서&lt;/a&gt; 여러 변수 참조를 사용 하는 경우 &lt;a href=&quot;qxmlquery#bindVariable&quot;&gt; QXmlQuery :: bindVariable에&lt;/a&gt;모델의 노드에 서로 다른 변수 이름을 바인딩 하려면 ()를 호출 해야합니다.</target>
        </trans-unit>
        <trans-unit id="3cd249ed4ee2223b3e62e75f49e835ae0edc3be2" translate="yes" xml:space="preserve">
          <source>To connect the signal to the slot, we use &lt;a href=&quot;qobject#connect&quot;&gt;QObject::connect&lt;/a&gt;(). There are several ways to connect signal and slots. The first is to use function pointers:</source>
          <target state="translated">신호를 슬롯에 연결하기 위해 &lt;a href=&quot;qobject#connect&quot;&gt; 연결 QObject :: connect&lt;/a&gt; ()를 합니다 . 신호와 슬롯을 연결하는 방법에는 여러 가지가 있습니다. 첫 번째는 함수 포인터를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="c8b762b07916df9d837de8a328a5628b22eb6e9a" translate="yes" xml:space="preserve">
          <source>To connect to an already running object use the following pattern:</source>
          <target state="translated">이미 실행중인 객체에 연결하려면 다음 패턴을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a19a95cad12632ac72088c619f02487f5d463f9c" translate="yes" xml:space="preserve">
          <source>To consider a field &quot;filled&quot;, &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; simply checks that the field's current value doesn't equal the original value (the value it had when &lt;a href=&quot;qwizard#initializePage&quot;&gt;initializePage&lt;/a&gt;() was called). For &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; and &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; subclasses, &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; also checks that &lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput()&lt;/a&gt; returns true, to honor any validator or mask.</source>
          <target state="translated">필드 &quot;작성&quot;, 고려 &lt;a href=&quot;qwizard&quot;&gt;QWizard이&lt;/a&gt; 필드의 현재 값이 원래 값 (때 한 값과 동일하지 않음을 간단하게 검사를 &lt;a href=&quot;qwizard#initializePage&quot;&gt;initializePage은&lt;/a&gt; ()가 호출되었다). 용 &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; 및 &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; 서브 클래스 &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; 또한 그 검사 &lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput ()&lt;/a&gt; true를 반환은, 어떤 검증을 명예 또는 마스크합니다.</target>
        </trans-unit>
        <trans-unit id="2edee2a37dabae580c5126569c51aff2f373155d" translate="yes" xml:space="preserve">
          <source>To consider a field &quot;filled&quot;, &lt;a href=&quot;qwizard&quot;&gt;QWizard&lt;/a&gt; simply checks that their current value doesn't equal their original value (the value they had before &lt;a href=&quot;qwizardpage#initializePage&quot;&gt;initializePage&lt;/a&gt;() was called). For &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;, it also checks that &lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput()&lt;/a&gt; returns true, to honor any validator or mask.</source>
          <target state="translated">필드 &quot;작성&quot;, 고려해야 할 &lt;a href=&quot;qwizard&quot;&gt;QWizard가&lt;/a&gt; 현재 값이 원래 값과 동일하지 않음을 간단하게 검사를 (그들은 전의 값 &lt;a href=&quot;qwizardpage#initializePage&quot;&gt;initializePage을&lt;/a&gt; ()가 호출되었다). 용 &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; , 그것은 또한 그 검사&lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt; hasAcceptableInput ()는&lt;/a&gt; 어떤 검증을 존중이나 마스크, true를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="76b5a3e66196dbd5f7ebdd4ef8c7be3b3a548df5" translate="yes" xml:space="preserve">
          <source>To consider a field &quot;filled&quot;, QWizard simply checks that the field's current value doesn't equal the original value (the value it had when &lt;a href=&quot;qwizard#initializePage&quot;&gt;initializePage&lt;/a&gt;() was called). For &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; and &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; subclasses, QWizard also checks that &lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput()&lt;/a&gt; returns true, to honor any validator or mask.</source>
          <target state="translated">To consider a field &quot;filled&quot;, QWizard simply checks that the field's current value doesn't equal the original value (the value it had when &lt;a href=&quot;qwizard#initializePage&quot;&gt;initializePage&lt;/a&gt;() was called). For &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; and &lt;a href=&quot;qabstractspinbox&quot;&gt;QAbstractSpinBox&lt;/a&gt; subclasses, QWizard also checks that &lt;a href=&quot;qlineedit#acceptableInput-prop&quot;&gt;hasAcceptableInput()&lt;/a&gt; returns true, to honor any validator or mask.</target>
        </trans-unit>
        <trans-unit id="5912952d7c745121c584651eddefb7924ac9c1ba" translate="yes" xml:space="preserve">
          <source>To construct a &lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt; with content, use &lt;a href=&quot;qdomdocument#createTextNode&quot;&gt;QDomDocument::createTextNode&lt;/a&gt;().</source>
          <target state="translated">컨텐츠 로 &lt;a href=&quot;qdomtext&quot;&gt;QDomText&lt;/a&gt; 를 구성하려면 &lt;a href=&quot;qdomdocument#createTextNode&quot;&gt;QDomDocument :: createTextNode를 사용하십시오.&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="244e27a59676038dcc24c3ef5766f53925be31c8" translate="yes" xml:space="preserve">
          <source>To construct a &lt;a href=&quot;qhttppart&quot;&gt;QHttpPart&lt;/a&gt; reading from a device (e.g. a file), the following can be applied:</source>
          <target state="translated">장치 (예 : 파일)에서 &lt;a href=&quot;qhttppart&quot;&gt;QHttpPart&lt;/a&gt; 판독 값 을 구성하려면 다음을 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c162150a543bb63880b7ef25bc3548b97e779f06" translate="yes" xml:space="preserve">
          <source>To construct a &lt;a href=&quot;qhttppart&quot;&gt;QHttpPart&lt;/a&gt; with a small body, consider the following snippet (this produces the data shown in the example above):</source>
          <target state="translated">작은 몸체 로 &lt;a href=&quot;qhttppart&quot;&gt;QHttpPart&lt;/a&gt; 를 구성하려면 다음 스 니펫을 고려하십시오 (위 예제에 표시된 데이터 가 생성됨 ).</target>
        </trans-unit>
        <trans-unit id="963431f81ce778790df3cb6773edd802b35ee198" translate="yes" xml:space="preserve">
          <source>To construct a QDomText with content, use &lt;a href=&quot;qdomdocument#createTextNode&quot;&gt;QDomDocument::createTextNode&lt;/a&gt;().</source>
          <target state="translated">콘텐츠로 QDomText를 생성하려면 &lt;a href=&quot;qdomdocument#createTextNode&quot;&gt;QDomDocument :: createTextNode&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="778f189c751f9ce84b1069045c6ca737c1ad62f0" translate="yes" xml:space="preserve">
          <source>To construct a QHttpPart reading from a device (e.g. a file), the following can be applied:</source>
          <target state="translated">장치 (예 : 파일)에서 읽는 QHttpPart를 구성하려면 다음을 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99f062544bf5cbb527053196c1c9833980d4c830" translate="yes" xml:space="preserve">
          <source>To construct a QHttpPart with a small body, consider the following snippet (this produces the data shown in the example above):</source>
          <target state="translated">작은 본문으로 QHttpPart를 생성하려면 다음 스 니펫을 고려하십시오 (위 예제에 표시된 데이터를 생성 함).</target>
        </trans-unit>
        <trans-unit id="cc3c5c1cfcaedc2a4f359dbff663897263086440" translate="yes" xml:space="preserve">
          <source>To construct a URL from an encoded string, you can also use &lt;a href=&quot;qurl#fromEncoded&quot;&gt;fromEncoded&lt;/a&gt;():</source>
          <target state="translated">인코딩 된 문자열에서 URL을 구성하려면 &lt;a href=&quot;qurl#fromEncoded&quot;&gt;fromEncoded&lt;/a&gt; ()를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc38274e52cf92f9d8becfe61f16477fb11af2db" translate="yes" xml:space="preserve">
          <source>To construct an atomic value as element content, enclose an expression in curly braces and embed it in the element constructor:</source>
          <target state="translated">원자 값을 요소 컨텐츠로 구성하려면 표현식을 중괄호로 묶고 요소 생성자에 포함하십시오.</target>
        </trans-unit>
        <trans-unit id="9f12a94dd34862c121b6bab97a2a50797526acd9" translate="yes" xml:space="preserve">
          <source>To control how &lt;a href=&quot;qml-qtquick-animatedsprite&quot;&gt;AnimatedSprite&lt;/a&gt; responds to being scaled, use the &lt;a href=&quot;qml-qtquick-item#smooth-prop&quot;&gt;smooth&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-animatedsprite&quot;&gt;AnimatedSprite&lt;/a&gt; 가 크기 조정에 응답 하는 방식을 제어하려면 &lt;a href=&quot;qml-qtquick-item#smooth-prop&quot;&gt;smooth&lt;/a&gt; 속성을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d8ffe4846c01194ea5b4edc881b726ed83e75677" translate="yes" xml:space="preserve">
          <source>To control how AnimatedSprite responds to being scaled, use the &lt;a href=&quot;qml-qtquick-item#smooth-prop&quot;&gt;smooth&lt;/a&gt; property.</source>
          <target state="translated">AnimatedSprite가 크기 조정에 반응하는 방식을 제어하려면 &lt;a href=&quot;qml-qtquick-item#smooth-prop&quot;&gt;smooth&lt;/a&gt; 속성을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="39b21c078f3d7ab3db5b71cafbe99b4ab2acfbca" translate="yes" xml:space="preserve">
          <source>To control how a scene is rendered, it is necessary to define a &lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;SceneEnvironment&lt;/a&gt; to the &lt;a href=&quot;qml-qtquick3d-view3d#environment-prop&quot;&gt;environment&lt;/a&gt; property.</source>
          <target state="translated">장면이 렌더링되는 방식을 제어하려면 &lt;a href=&quot;qml-qtquick3d-view3d#environment-prop&quot;&gt;환경&lt;/a&gt; 속성에 &lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;SceneEnvironment&lt;/a&gt; 를 정의해야 합니다.</target>
        </trans-unit>
        <trans-unit id="1730513ddae2f7a26cae78ed342aed3becfdf7a6" translate="yes" xml:space="preserve">
          <source>To convert a 3D asset contained in the file &lt;code&gt;testModel.fbx&lt;/code&gt; with &lt;code&gt;balsam&lt;/code&gt; the following command would be used:</source>
          <target state="translated">파일에 포함 된 3D 자산으로 변환하려면 &lt;code&gt;testModel.fbx&lt;/code&gt; 와 &lt;code&gt;balsam&lt;/code&gt; 다음 명령이 사용됩니다를 :</target>
        </trans-unit>
        <trans-unit id="f4ad18b3df3f807a463e0902f12c6e38a95cc647" translate="yes" xml:space="preserve">
          <source>To convert a &lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; to and from HICON you can use the QtWinExtras functions QtWin::toHICON() and QtWin::fromHICON() respectively.</source>
          <target state="translated">&lt;a href=&quot;qpixmap&quot;&gt;QPixmap&lt;/a&gt; 을 HICON으로 또는 HICON으로 변환 하기 위해 QtWinExtras 함수 QtWin :: toHICON () 및 QtWin :: fromHICON ()을 각각 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="18d2274fe5235c0fee5c295f52b112a8af95aa24" translate="yes" xml:space="preserve">
          <source>To convert a QPixmap to and from HICON you can use the QtWinExtras functions QtWin::toHICON() and QtWin::fromHICON() respectively.</source>
          <target state="translated">QPixmap을 HICON으로 변환하려면 QtWinExtras 함수 QtWin :: toHICON () 및 QtWin :: fromHICON ()을 각각 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="253dc35440ac13f2db005b757af6cf58c070a3c3" translate="yes" xml:space="preserve">
          <source>To convert from one of these encodings, &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; provides &lt;a href=&quot;qstring#fromLatin1&quot;&gt;fromLatin1&lt;/a&gt;(), &lt;a href=&quot;qstring#fromUtf8&quot;&gt;fromUtf8&lt;/a&gt;(), and &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;fromLocal8Bit&lt;/a&gt;(). Other encodings are supported through the &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; class.</source>
          <target state="translated">이러한 인코딩 중 하나를 변환하기 위해 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 은 &lt;a href=&quot;qstring#fromLatin1&quot;&gt;fromLatin1&lt;/a&gt; (), &lt;a href=&quot;qstring#fromUtf8&quot;&gt;fromUtf8&lt;/a&gt; () 및 &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;fromLocal8Bit&lt;/a&gt; ()를 제공합니다. 다른 인코딩은 &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; 클래스를 통해 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="df318eb1dd20da657377e4cf527e4c8ead0624ff" translate="yes" xml:space="preserve">
          <source>To convert from one of these encodings, QString provides &lt;a href=&quot;qstring#fromLatin1&quot;&gt;fromLatin1&lt;/a&gt;(), &lt;a href=&quot;qstring#fromUtf8&quot;&gt;fromUtf8&lt;/a&gt;(), and &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;fromLocal8Bit&lt;/a&gt;(). Other encodings are supported through the &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; class.</source>
          <target state="translated">이러한 인코딩 중 하나에서 변환하기 위해 QString은 &lt;a href=&quot;qstring#fromLatin1&quot;&gt;fromLatin1&lt;/a&gt; (), &lt;a href=&quot;qstring#fromUtf8&quot;&gt;fromUtf8&lt;/a&gt; () 및 &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;fromLocal8Bit&lt;/a&gt; ()를 제공합니다. 다른 인코딩은 &lt;a href=&quot;qtextcodec&quot;&gt;QTextCodec&lt;/a&gt; 클래스를 통해 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="b9353d8e93b16276c8bb026dfd3b3e0a8224d920" translate="yes" xml:space="preserve">
          <source>To convert the data to a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; use &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;QString::fromLocal8Bit&lt;/a&gt;().</source>
          <target state="translated">데이터를 &lt;a href=&quot;qstring&quot;&gt;QString으로&lt;/a&gt; 변환하려면 &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;QString :: fromLocal8Bit를&lt;/a&gt; 사용 하십시오. ().</target>
        </trans-unit>
        <trans-unit id="8c0b98e8d438993f6225ef263a034f987f0f8408" translate="yes" xml:space="preserve">
          <source>To create a &lt;a href=&quot;qml-qtquick-controls-splitview&quot;&gt;SplitView&lt;/a&gt; with three items, and let the center item get superfluous space, one could do the following:</source>
          <target state="translated">세 개의 항목 으로 &lt;a href=&quot;qml-qtquick-controls-splitview&quot;&gt;SplitView&lt;/a&gt; 를 만들고 가운데 항목에 불필요한 공간을 확보하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="2b423b442d54e1a56f6328346069fafe0a0a62a4" translate="yes" xml:space="preserve">
          <source>To create a &lt;a href=&quot;qml-qtquick-controls2-splitview&quot;&gt;SplitView&lt;/a&gt; with three items, and let the center item get superfluous space, one could do the following:</source>
          <target state="translated">세 개의 항목 으로 &lt;a href=&quot;qml-qtquick-controls2-splitview&quot;&gt;SplitView&lt;/a&gt; 를 만들고 가운데 항목에 불필요한 공간을 확보하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="ffe94bae9af82fed893b71a5819fba6ddc4890eb" translate="yes" xml:space="preserve">
          <source>To create a &lt;a href=&quot;qml-qtquick-extras-piemenu&quot;&gt;PieMenu&lt;/a&gt; that opens after a long press and selects items upon releasing, you can combine ActivationMode.ActivateOnRelease with a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; using a Timer:</source>
          <target state="translated">길게 누를 때 열리는 &lt;a href=&quot;qml-qtquick-extras-piemenu&quot;&gt;파이 메뉴&lt;/a&gt; 를 만들고 릴리스 할 때 항목을 선택하려면 타이머를 사용하여 ActivationMode.ActivateOnRelease를 &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; 와 결합 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8859e5003561fdd4ad44e9cb0de34fe8e5e72173" translate="yes" xml:space="preserve">
          <source>To create a &lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt; object, specify the &lt;a href=&quot;qml-qtquick-propertychanges#target-prop&quot;&gt;target&lt;/a&gt; item whose properties are to be modified, and define the new property values or bindings. For example:</source>
          <target state="translated">&lt;a href=&quot;qml-qtquick-propertychanges&quot;&gt;PropertyChanges&lt;/a&gt; 객체 를 만들려면 속성을 수정할 &lt;a href=&quot;qml-qtquick-propertychanges#target-prop&quot;&gt;대상&lt;/a&gt; 항목을 지정 하고 새 속성 값 또는 바인딩을 정의하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="06f2b45a447e4fcc17ba2c84c4c41911d97f6589" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;coordinate&lt;/code&gt; value, use the &lt;a href=&quot;qml-qtpositioning-qtpositioning#coordinate-method&quot;&gt;QtPositioning.coordinate()&lt;/a&gt; function:</source>
          <target state="translated">&lt;code&gt;coordinate&lt;/code&gt; 값 을 만들려면 &lt;a href=&quot;qml-qtpositioning-qtpositioning#coordinate-method&quot;&gt;QtPositioning.coordinate ()&lt;/a&gt; 함수를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="921b58a7a20e4f1f6e42135ab076cba8b29ccca1" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;date&lt;/code&gt; value, specify it as a &quot;YYYY-MM-DDThh:mm:ss.zzzZ&quot; string. (The T is literal, YYYY is a full year number, MM and DD are month and day numbers, hh, mm and ss are hours, minutes and seconds, with .zzz as milliseconds and Z as time-zone offset. The T and following time are optional. If they are omitted, the date is handled as the start of UTC's day, which falls on other dates in some time-zones. When T is included, the :ss.zzz or just .zzz part can be omitted. With or without those, the zone offset can be omitted, in which case local time is used.) For example:</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; 를 만들려면 값 &quot;YYYY-MM-DDThh : mm : ss.zzzZ&quot;문자열로 지정하십시오. (T는 문자 그대로, YYYY는 전체 연도 숫자, MM 및 DD는 월 및 일 숫자, hh, mm 및 ss는 시간, 분 및 초이며 .zzz는 밀리 초, Z는 시간대 오프셋입니다. 생략 할 경우 날짜는 UTC 시간대의 시작으로 처리되며 일부 시간대의 다른 날짜에 해당합니다 .T가 포함 된 경우 : ss.zzz 또는 .zzz 부분 만 생략 할 수 있습니다. 이를 사용하거나 사용하지 않고 지역 오프셋을 생략 할 수 있으며이 경우 현지 시간이 사용됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="446fbb84f53b7754e237f55e86e35f80743230cd" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;geoshape&lt;/code&gt; value, specify it as a &quot;shape()&quot; string:</source>
          <target state="translated">&lt;code&gt;geoshape&lt;/code&gt; 값 을 작성하려면 &quot;shape ()&quot;문자열로 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="9cff5a876d89bee729fad48017121368e3590e27" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;point&lt;/code&gt; value, specify it as a &quot;x,y&quot; string:</source>
          <target state="translated">&lt;code&gt;point&lt;/code&gt; 값 을 만들려면 &quot;x, y&quot;문자열로 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="dc6ac9b71a1af4e698659515cce04971a111607e" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;quaternion&lt;/code&gt; value, specify it as a &quot;scalar,x,y,z&quot; string, or define the components individually, or compose it with the Qt.quaternion() function.</source>
          <target state="translated">&lt;code&gt;quaternion&lt;/code&gt; 값 을 만들려면 &quot;scalar, x, y, z&quot;문자열로 지정하거나 구성 요소를 개별적으로 정의하거나 Qt.quaternion () 함수로 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="93007e8723c47bd61271059bc879a5378661092f" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;rect&lt;/code&gt; value, specify it as a &quot;x, y, width x height&quot; string:</source>
          <target state="translated">&lt;code&gt;rect&lt;/code&gt; 값 을 만들려면 &quot;x, y, width x height&quot;문자열로 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="aab05e5352707b4948ec04985a6a1ed66e277afe" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;size&lt;/code&gt; value, specify it as a &quot;width x height&quot; string:</source>
          <target state="translated">&lt;code&gt;size&lt;/code&gt; 값 을 만들려면 &quot;폭 x 높이&quot;문자열로 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="8d1593183166c4771a8129d27a6bb4b9d3beda1f" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;vector2d&lt;/code&gt; value, specify it as a &quot;x,y&quot; string, or define the components individually, or compose it with the Qt.vector2d() function.</source>
          <target state="translated">&lt;code&gt;vector2d&lt;/code&gt; 값 을 만들려면 &quot;x, y&quot;문자열로 지정하거나 구성 요소를 개별적으로 정의하거나 Qt.vector2d () 함수로 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="3960ad797c60cbd3e7bdf33fc5e746b5446468ee" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;vector3d&lt;/code&gt; value, specify it as a &quot;x,y,z&quot; string:</source>
          <target state="translated">&lt;code&gt;vector3d&lt;/code&gt; 값 을 만들려면 &quot;x, y, z&quot;문자열로 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="ea3ab395d74001dde7ede58d72cb5712d8066d1f" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;vector4d&lt;/code&gt; value, specify it as a &quot;x,y,z,w&quot; string, or define the components individually, or compose it with the Qt.vector4d() function.</source>
          <target state="translated">&lt;code&gt;vector4d&lt;/code&gt; 값 을 만들려면 &quot;x, y, z, w&quot;문자열로 지정하거나 구성 요소를 개별적으로 정의하거나 Qt.vector4d () 함수로 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="931bc162eb1d50eb9ae02820afbe42541cae7513" translate="yes" xml:space="preserve">
          <source>To create a PieMenu that opens after a long press and selects items upon releasing, you can combine ActivationMode.ActivateOnRelease with a &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; using a Timer:</source>
          <target state="translated">길게 누른 후 열리고 놓을 때 항목을 선택하는 PieMenu를 만들려면 Timer를 사용하여 ActivationMode.ActivateOnRelease를 &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; 와 결합 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b76847880760c7c363f15e9343f1b36c20008914" translate="yes" xml:space="preserve">
          <source>To create a PropertyChanges object, specify the &lt;a href=&quot;qml-qtquick-propertychanges#target-prop&quot;&gt;target&lt;/a&gt; item whose properties are to be modified, and define the new property values or bindings. For example:</source>
          <target state="translated">PropertyChanges 개체를 만들려면 속성을 수정할 &lt;a href=&quot;qml-qtquick-propertychanges#target-prop&quot;&gt;대상&lt;/a&gt; 항목을 지정 하고 새 속성 값 또는 바인딩을 정의합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="0efb198ed1bb9f2dc77d8859c0cf44f9371e2c25" translate="yes" xml:space="preserve">
          <source>To create a QML object from an arbitrary string of QML (instead of a file), use &lt;a href=&quot;qml-qtqml-qt#createQmlObject-method&quot;&gt;Qt.createQmlObject()&lt;/a&gt;.</source>
          <target state="translated">파일 대신 임의의 QML 문자열에서 QML 오브젝트를 작성하려면 &lt;a href=&quot;qml-qtqml-qt#createQmlObject-method&quot;&gt;Qt.createQmlObject ()를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2ecca92c218ee14cfdbeaa52111b3c2c621f45a2" translate="yes" xml:space="preserve">
          <source>To create a SplitView with three items, and let the center item get superfluous space, one could do the following:</source>
          <target state="translated">세 개의 항목이있는 SplitView를 만들고 중앙 항목에 불필요한 공간을 확보하려면 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1448f444843668c38d94b9c442de50def080b5b" translate="yes" xml:space="preserve">
          <source>To create a Vulkan surface for a window, or retrieve an existing one, call &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;(). Most platforms will only create the surface via &lt;code&gt;VK_KHR_*_surface&lt;/code&gt; when first calling &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;(), but there may be platform-specific variations in the internal behavior. Once created, subsequent calls to &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt;() just return the same handle. This fits the structure of typical Vulkan-enabled &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; subclasses well.</source>
          <target state="translated">윈도우의 Vulkan 표면을 만들거나 기존 표면을 검색하려면 &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt; ()를 호출 하십시오 . 대부분의 플랫폼은 &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt; ()를 처음 호출 할 때 &lt;code&gt;VK_KHR_*_surface&lt;/code&gt; surface를 통해서만 표면을 생성 하지만 내부 동작에 플랫폼 별 변형이있을 수 있습니다. 일단 생성되면 &lt;a href=&quot;qvulkaninstance#surfaceForWindow&quot;&gt;surfaceForWindow&lt;/a&gt; ()에 대한 후속 호출 은 동일한 핸들을 반환합니다. 이것은 일반적인 Vulkan 지원 &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; 서브 클래스 의 구조에 잘 맞습니다.</target>
        </trans-unit>
        <trans-unit id="864bc9dd34c447162f88d8c6a63ddc7b5eaf9b54" translate="yes" xml:space="preserve">
          <source>To create a completely circular button (the default), use a value that is equal to half of the width or height of the button, and make the button's width and height identical.</source>
          <target state="translated">완전히 원형 인 단추 (기본값)를 만들려면 단추 너비 또는 높이의 절반과 같은 값을 사용하고 단추 너비와 높이를 동일하게 만드십시오.</target>
        </trans-unit>
        <trans-unit id="d222d8116ee7c4eec4c4ded1bca4ed02db1502da" translate="yes" xml:space="preserve">
          <source>To create a connection to a Bluetooth service, create a socket of the appropriate type and call &lt;a href=&quot;qbluetoothsocket#connectToService&quot;&gt;connectToService&lt;/a&gt;() passing the Bluetooth address and port number. &lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt; will emit the &lt;a href=&quot;qbluetoothsocket#connected&quot;&gt;connected&lt;/a&gt;() signal when the connection is established.</source>
          <target state="translated">Bluetooth 서비스에 대한 연결을 작성하려면 적절한 유형의 소켓을 작성 하고 Bluetooth 주소 및 포트 번호를 전달하여 &lt;a href=&quot;qbluetoothsocket#connectToService&quot;&gt;connectToService&lt;/a&gt; ()를 호출 하십시오. &lt;a href=&quot;qbluetoothsocket&quot;&gt;QBluetoothSocket&lt;/a&gt; 은 연결이 설정되면 &lt;a href=&quot;qbluetoothsocket#connected&quot;&gt;연결된&lt;/a&gt; () 신호를 방출합니다 .</target>
        </trans-unit>
        <trans-unit id="8b81a040b6ad2937b15b7795db85cd2c5caae383" translate="yes" xml:space="preserve">
          <source>To create a connection to a Bluetooth service, create a socket of the appropriate type and call &lt;a href=&quot;qbluetoothsocket#connectToService&quot;&gt;connectToService&lt;/a&gt;() passing the Bluetooth address and port number. QBluetoothSocket will emit the &lt;a href=&quot;qbluetoothsocket#connected&quot;&gt;connected&lt;/a&gt;() signal when the connection is established.</source>
          <target state="translated">블루투스 서비스에 대한 연결을 생성하려면 적절한 유형의 소켓을 생성 하고 블루투스 주소와 포트 번호를 전달하는 &lt;a href=&quot;qbluetoothsocket#connectToService&quot;&gt;connectToService&lt;/a&gt; ()를 호출 합니다. QBluetoothSocket은 연결이 완료되면 &lt;a href=&quot;qbluetoothsocket#connected&quot;&gt;연결된&lt;/a&gt; () 신호를 방출합니다 .</target>
        </trans-unit>
        <trans-unit id="92e7bfba5b3728581cb792d4eb623e3460f64694" translate="yes" xml:space="preserve">
          <source>To create a container extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qdesignercontainerextension&quot;&gt;QDesignerContainerExtension&lt;/a&gt;. For example:</source>
          <target state="translated">컨테이너 확장을 작성하려면 확장 클래스가 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 및 &lt;a href=&quot;qdesignercontainerextension&quot;&gt;QDesignerContainerExtension&lt;/a&gt; 모두에서 상속해야합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="00fbb5ad0c59c8ac9b4f01ebd1f93f25d057af34" translate="yes" xml:space="preserve">
          <source>To create a container extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and QDesignerContainerExtension. For example:</source>
          <target state="translated">컨테이너 확장을 만들려면 확장 클래스가 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 와 QDesignerContainerExtension 모두에서 상속되어야합니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="50fb15d63ca35b4f3540ad016b3af11e5cc696ba" translate="yes" xml:space="preserve">
          <source>To create a custom task menu extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt;. For example:</source>
          <target state="translated">사용자 정의 작업 메뉴 확장을 만들려면 확장 클래스가 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 및 &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; 에서 상속해야합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4e8b8fce88ff1623601a79f66e65dc30fd582225" translate="yes" xml:space="preserve">
          <source>To create a custom task menu extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and QDesignerTaskMenuExtension. For example:</source>
          <target state="translated">사용자 정의 작업 메뉴 확장을 만들려면 확장 클래스가 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 및 QDesignerTaskMenuExtension 모두에서 상속되어야합니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="7dc0ea98f1ab1c227f0ea7e83c76fba2411a0cba" translate="yes" xml:space="preserve">
          <source>To create a datagram suitable for sending in a reply, use &lt;a href=&quot;qnetworkdatagram#makeReply&quot;&gt;QNetworkDatagram::makeReply&lt;/a&gt;();</source>
          <target state="translated">응답 전송에 적합한 데이터 그램을 만들려면 &lt;a href=&quot;qnetworkdatagram#makeReply&quot;&gt;QNetworkDatagram :: makeReply&lt;/a&gt; ();</target>
        </trans-unit>
        <trans-unit id="2c224c1444538d57a11108f65feb0fbea82e4fde" translate="yes" xml:space="preserve">
          <source>To create a document using DOM use code like this:</source>
          <target state="translated">DOM을 사용하여 문서를 작성하려면 다음과 같은 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cfecba2b3a6932dcdf4b5f5f9302a7a6d0dea3cb" translate="yes" xml:space="preserve">
          <source>To create a menu, define at least one &lt;a href=&quot;qml-qtquick-controls-menuitem&quot;&gt;MenuItem&lt;/a&gt; as a child of it:</source>
          <target state="translated">메뉴를 만들려면 하나 이상의 &lt;a href=&quot;qml-qtquick-controls-menuitem&quot;&gt;MenuItem&lt;/a&gt; 을 자식으로 정의 하십시오.</target>
        </trans-unit>
        <trans-unit id="96ca27048ac036978c1baf8a603ee098179432c9" translate="yes" xml:space="preserve">
          <source>To create a parallel state group, pass &lt;a href=&quot;qstate#ChildMode-enum&quot;&gt;QState::ParallelStates&lt;/a&gt; to the &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; constructor.</source>
          <target state="translated">병렬 상태 그룹을 작성하려면 &lt;a href=&quot;qstate#ChildMode-enum&quot;&gt;QState :: ParallelStates&lt;/a&gt; 를 &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; 생성자에 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="d56870857a4fba8adcbc11e08fc642fd3808e56f" translate="yes" xml:space="preserve">
          <source>To create a parallel state group, set childMode to &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt;.ParallelStates.</source>
          <target state="translated">병렬 상태 그룹을 만들려면 childMode를 &lt;a href=&quot;qstate&quot;&gt;QState&lt;/a&gt; .ParallelStates로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="7583a1cee4a37ff29efd75ede35bae5ddfacb982" translate="yes" xml:space="preserve">
          <source>To create a property binding, a property is assigned a JavaScript expression that evaluates to the desired value. At its simplest, a binding may be a reference to another property. Take the following example, where the blue &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;'s height is bound to the height of its parent:</source>
          <target state="translated">속성 바인딩을 만들려면 속성에 원하는 값으로 평가되는 JavaScript식이 할당됩니다. 가장 간단하게, 바인딩은 다른 속성에 대한 참조 일 수 있습니다. 파란색 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 의 높이가 부모의 높이에 바인딩 된 다음 예제를 보자 .</target>
        </trans-unit>
        <trans-unit id="7c32bf0f82af76f299e99cc0c6bc22c865ecfbf6" translate="yes" xml:space="preserve">
          <source>To create a property sheet extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and &lt;a href=&quot;qdesignerpropertysheetextension&quot;&gt;QDesignerPropertySheetExtension&lt;/a&gt;. Then, since we are implementing an interface, we must ensure that it's made known to the meta object system using the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro:</source>
          <target state="translated">특성 시트 확장을 작성하려면 확장 클래스가 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 및 &lt;a href=&quot;qdesignerpropertysheetextension&quot;&gt;QDesignerPropertySheetExtension&lt;/a&gt; 모두에서 상속해야합니다 . 그런 다음 인터페이스를 구현하고 있으므로 &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt; () 매크로를 사용하여 메타 객체 시스템에 해당 인터페이스가 알려 지도록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7f57055df675698dac40098b34eedb81b614fffb" translate="yes" xml:space="preserve">
          <source>To create a property sheet extension, your extension class must inherit from both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and QDesignerPropertySheetExtension. Then, since we are implementing an interface, we must ensure that it's made known to the meta object system using the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro:</source>
          <target state="translated">속성 시트 확장을 만들려면 확장 클래스가 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 및 QDesignerPropertySheetExtension 모두에서 상속되어야합니다 . 그런 다음 인터페이스를 구현하고 있으므로 &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt; () 매크로를 사용하여 메타 개체 시스템에 알려 졌는지 확인해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d1c4d85861d3b5e5c4ca1fdc4fe7cda2274dda7f" translate="yes" xml:space="preserve">
          <source>To create a relatively square button that has slightly rounded corners, use a small value, such as &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">모서리가 약간 둥근 비교적 정사각형 단추를 만들려면 &lt;code&gt;3&lt;/code&gt; 과 같은 작은 값을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="06c0d7dbdf6efbf073eacf55224c1c8101c7985c" translate="yes" xml:space="preserve">
          <source>To create a service, do the following steps:</source>
          <target state="translated">서비스를 작성하려면 다음 단계를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="acd78a5e638c557eda155f6a1bd49d0933be844b" translate="yes" xml:space="preserve">
          <source>To create a state, add a &lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt; object to the item's &lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;states&lt;/a&gt; property, which holds a list of states for that item.</source>
          <target state="translated">상태를 만들려면 항목의 &lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;상태&lt;/a&gt; 속성에 &lt;a href=&quot;qml-qtquick-state&quot;&gt;상태&lt;/a&gt; 개체를 추가하십시오.이 속성 에는 해당 항목의 상태 목록이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d0adc8f65d42702c08ca00af4615175e46e786f" translate="yes" xml:space="preserve">
          <source>To create a table of contents for a manual, create a subproject with a &lt;code&gt;type&lt;/code&gt; property and set it to &lt;code&gt;manual&lt;/code&gt;. The page in the documentation referred to by the &lt;code&gt;indexTitle&lt;/code&gt; property must contain a list of links that acts as a table of contents for the whole manual. QDoc will take the information in this list and create a table of contents for the subproject.</source>
          <target state="translated">매뉴얼의 목차를 작성하려면 &lt;code&gt;type&lt;/code&gt; 특성을 사용하여 서브 프로젝트를 작성하고 &lt;code&gt;manual&lt;/code&gt; 로 설정하십시오 . &lt;code&gt;indexTitle&lt;/code&gt; 속성 이 참조하는 설명서의 페이지 에는 전체 설명서의 목차 역할을하는 링크 목록이 포함되어 있어야합니다. QDoc은이 목록의 정보를 가져 와서 서브 프로젝트에 대한 목차를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="36ea89fb7402d90c4b70f7cc90ff5236b5d88983" translate="yes" xml:space="preserve">
          <source>To create a vertical desktop space (that is, to stack top to bottom instead of left to right), add a &lt;code&gt;virtualDesktopLayout&lt;/code&gt; property after &lt;code&gt;device&lt;/code&gt; with the value of &lt;code&gt;vertical&lt;/code&gt;.</source>
          <target state="translated">수직 데스크톱 공간을 만들려면 (즉, 왼쪽에서 오른쪽 대신 위에서 아래로 &lt;code&gt;virtualDesktopLayout&lt;/code&gt; 려면) 값을 &lt;code&gt;vertical&lt;/code&gt; 로 사용하여 &lt;code&gt;device&lt;/code&gt; 뒤에 virtualDesktopLayout 속성을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3d653b42a97efdcf98a7a0fda0db4a56f6136b7" translate="yes" xml:space="preserve">
          <source>To create an action, use the action editor's &lt;b&gt;New&lt;/b&gt; button, which will then pop up an input dialog. Provide the new action with a &lt;b&gt;Text&lt;/b&gt; -- this is the text that will appear in a menu entry and as the action's tooltip. The text is also automatically added to an &quot;action&quot; prefix, creating the action's &lt;b&gt;Object Name&lt;/b&gt;.</source>
          <target state="translated">액션을 만들려면 액션 에디터의 &lt;b&gt;New&lt;/b&gt; 버튼을 사용하면 입력 대화 상자가 나타납니다. 새 액션에 &lt;b&gt;텍스트를&lt;/b&gt; 제공하십시오. 이것은 메뉴 항목에 나타나고 액션의 툴팁으로 표시되는 텍스트입니다. 텍스트는 &quot;action&quot;접두사에 자동으로 추가되어 작업의 &lt;b&gt;Object Name을&lt;/b&gt; 만듭니다.</target>
        </trans-unit>
        <trans-unit id="2c2a63ae45a1f157ad89e3395b12a12e4c3e9eda" translate="yes" xml:space="preserve">
          <source>To create an animation, use an appropriate animation type for the type of the property that is to be animated, and apply the animation depending on the type of behavior that is required.</source>
          <target state="translated">애니메이션을 만들려면 애니메이션을 적용 할 속성 유형에 적절한 애니메이션 유형을 사용하고 필요한 비헤이비어 유형에 따라 애니메이션을 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="b73aa7d03e692976c68c37bf6086ff1f95f7dee2" translate="yes" xml:space="preserve">
          <source>To create an array using &lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt;, use &lt;a href=&quot;qjsengine#newArray&quot;&gt;QJSEngine::newArray&lt;/a&gt;():</source>
          <target state="translated">&lt;a href=&quot;qjsvalue&quot;&gt;QJSValue&lt;/a&gt; 를 사용 하여 배열을 작성하려면 &lt;a href=&quot;qjsengine#newArray&quot;&gt;QJSEngine :: newArray&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7b321f5c5c0c320b77a53e11587413b91cc76b07" translate="yes" xml:space="preserve">
          <source>To create an array using QJSValue, use &lt;a href=&quot;qjsengine#newArray&quot;&gt;QJSEngine::newArray&lt;/a&gt;():</source>
          <target state="translated">QJSValue를 사용하여 배열을 만들려면 &lt;a href=&quot;qjsengine#newArray&quot;&gt;QJSEngine :: newArray&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2c6ca0e70f220cea2260c3edfb777a4ff0542ad3" translate="yes" xml:space="preserve">
          <source>To create an axis step, concatenate an axis specifier and a node test. The following sections list the axis specifiers and node tests that are available.</source>
          <target state="translated">축 단계를 만들려면 축 지정자와 노드 테스트를 연결하십시오. 다음 섹션에는 사용 가능한 축 지정자와 노드 테스트가 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a0cbeea65a93100732eaf9424fc57d690218111" translate="yes" xml:space="preserve">
          <source>To create an extension you must inherit both &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; and the appropriate base class, and reimplement its functions. Since we are implementing an interface, we must ensure that it is made known to the meta object system using the &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt;() macro in the extension class's definition. For example:</source>
          <target state="translated">확장을 만들려면 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 와 해당 기본 클래스를 모두 상속 하고 해당 기능을 다시 구현해야합니다. 인터페이스를 구현하고 있으므로 확장 클래스 정의에서 &lt;a href=&quot;qobject#Q_INTERFACES&quot;&gt;Q_INTERFACES&lt;/a&gt; () 매크로를 사용하여 메타 오브젝트 시스템에 인터페이스가 알려 지도록해야합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="16848dbe37048f97005540453d734b7b5ef1e5ef" translate="yes" xml:space="preserve">
          <source>To create an iTunes test user, log into &lt;a href=&quot;https://itunesconnect.apple.com&quot;&gt;iTunes Connect&lt;/a&gt;.</source>
          <target state="translated">iTunes 테스트 사용자를 생성하려면 &lt;a href=&quot;https://itunesconnect.apple.com&quot;&gt;iTunes Connect에&lt;/a&gt; 로그인 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ba4a830997f9fa33e068ab2f25bc6da685931092" translate="yes" xml:space="preserve">
          <source>To create an object type, a QML document should be placed into a text file named as</source>
          <target state="translated">객체 유형을 만들려면 QML 문서를 다음과 같은 이름의 텍스트 파일에 배치해야합니다.</target>
        </trans-unit>
        <trans-unit id="01bf512177d18ccb0d1bb9a0b187ebe4a421bbd2" translate="yes" xml:space="preserve">
          <source>To create and edit new forms, open the &lt;b&gt;File&lt;/b&gt; menu and select &lt;b&gt;New Form...&lt;/b&gt; or press &lt;b&gt;Ctrl+N&lt;/b&gt;. Existing forms can also be edited by selecting &lt;b&gt;Open Form...&lt;/b&gt; from the &lt;b&gt;File&lt;/b&gt; menu or pressing &lt;b&gt;Ctrl+O&lt;/b&gt;.</source>
          <target state="translated">새 양식을 작성하고 편집하려면 &lt;b&gt;파일&lt;/b&gt; 메뉴를 열고 &lt;b&gt;새 양식 ...을&lt;/b&gt; 선택 하거나 &lt;b&gt;Ctrl + N을&lt;/b&gt; 누르십시오 . &lt;b&gt;파일&lt;/b&gt; 메뉴 에서 &lt;b&gt;양식 열기 ...&lt;/b&gt; 를 선택 하거나 &lt;b&gt;Ctrl + O를&lt;/b&gt; 눌러 기존 양식을 편집 할 수도 있습니다 .&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="82a553a6445c668db1d09f8972f4910285e3188c" translate="yes" xml:space="preserve">
          <source>To create events of a custom type, you need to define an event number, which must be greater than &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::User&lt;/a&gt;, and you may need to subclass &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; in order to pass specific information about your custom event. See the &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; documentation for further details.</source>
          <target state="translated">사용자 정의 유형의 이벤트를 작성하려면 &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: User&lt;/a&gt; 보다 커야하는 이벤트 번호를 정의해야하며 사용자 정의 이벤트에 대한 특정 정보를 전달하기 위해 &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; 를 서브 클래스 화 해야 할 수도 있습니다 . 자세한 내용은 &lt;a href=&quot;qevent&quot;&gt;QEvent&lt;/a&gt; 설명서를 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="af56d9217718b5cf4e05ffb77714d10da1c0915a" translate="yes" xml:space="preserve">
          <source>To create instances of a component in code where a &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; instance is not available, you can use &lt;a href=&quot;qqmlengine#qmlContext&quot;&gt;qmlContext&lt;/a&gt;() or &lt;a href=&quot;qqmlengine#qmlEngine&quot;&gt;qmlEngine&lt;/a&gt;(). For example, in the scenario below, child items are being created within a &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; subclass:</source>
          <target state="translated">&lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; 인스턴스를 사용할 수없는 코드에서 컴포넌트의 인스턴스를 작성하려면 &lt;a href=&quot;qqmlengine#qmlContext&quot;&gt;qmlContext&lt;/a&gt; () 또는 &lt;a href=&quot;qqmlengine#qmlEngine&quot;&gt;qmlEngine&lt;/a&gt; ()을 사용할 수 있습니다 . 예를 들어, 아래 시나리오에서 하위 항목은 &lt;a href=&quot;qquickitem&quot;&gt;QQuickItem&lt;/a&gt; 서브 클래스 내에 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="de6047375051c672814ef78513a6a18676cdc441" translate="yes" xml:space="preserve">
          <source>To create material slots, follow the steps below.</source>
          <target state="translated">재료 슬롯을 만들려면 아래 단계를 따르십시오.</target>
        </trans-unit>
        <trans-unit id="befc27a6b724ef04ec2e30f8e2ff5432b6395cdf" translate="yes" xml:space="preserve">
          <source>To create models that populate incrementally, you can reimplement &lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore&lt;/a&gt;() and &lt;a href=&quot;qabstractitemmodel#canFetchMore&quot;&gt;canFetchMore&lt;/a&gt;(). If the reimplementation of &lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore&lt;/a&gt;() adds rows to the model, &lt;a href=&quot;qabstractitemmodel#beginInsertRows&quot;&gt;beginInsertRows()&lt;/a&gt; and &lt;a href=&quot;qabstractitemmodel#endInsertRows&quot;&gt;endInsertRows()&lt;/a&gt; must be called.</source>
          <target state="translated">점진적으로 채워지는 모델을 작성하기 위해 &lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore&lt;/a&gt; () 및 &lt;a href=&quot;qabstractitemmodel#canFetchMore&quot;&gt;canFetchMore&lt;/a&gt; ()를 다시 구현할 수 있습니다 . &lt;a href=&quot;qabstractitemmodel#fetchMore&quot;&gt;fetchMore&lt;/a&gt; ()를 다시 구현 하면 모델에 행이 추가되면 &lt;a href=&quot;qabstractitemmodel#beginInsertRows&quot;&gt;beginInsertRows ()&lt;/a&gt; 및 &lt;a href=&quot;qabstractitemmodel#endInsertRows&quot;&gt;endInsertRows ()&lt;/a&gt; 를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="33091be195ce3f51bf1057ca78223889e43d2741" translate="yes" xml:space="preserve">
          <source>To create submenus, declare a Menu as a child of another Menu:</source>
          <target state="translated">하위 메뉴를 만들려면 메뉴를 다른 메뉴의 자식으로 선언하십시오.</target>
        </trans-unit>
        <trans-unit id="2767df73cc666fe65bcc4086b7aaa21d6f45d320" translate="yes" xml:space="preserve">
          <source>To create the COM object when the client asks for it the server must export an implementation of a &lt;a href=&quot;qaxfactory&quot;&gt;QAxFactory&lt;/a&gt;. The easist way to do this is to use a set of macros:</source>
          <target state="translated">클라이언트가 요청할 때 COM 객체를 만들려면 서버가 &lt;a href=&quot;qaxfactory&quot;&gt;QAxFactory&lt;/a&gt; 의 구현을 내 보내야 합니다. 가장 쉬운 방법은 매크로 세트를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="dfc05acf1ac011d738c7821397030f760b6e36d9" translate="yes" xml:space="preserve">
          <source>To create these types, mark the pages by providing a &lt;code&gt;type&lt;/code&gt; argument to the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#page-command&quot;&gt;\page&lt;/a&gt; command. The &lt;code&gt;type&lt;/code&gt; argument is the second argument, with the file name being the first.</source>
          <target state="translated">이러한 유형을 작성하려면 &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#page-command&quot;&gt;\ page&lt;/a&gt; 명령에 &lt;code&gt;type&lt;/code&gt; 인수를 제공하여 페이지를 표시 하십시오 . &lt;code&gt;type&lt;/code&gt; 인수는 파일 이름이 첫 번째 인으로, 두 번째 인수입니다.</target>
        </trans-unit>
        <trans-unit id="0880526ee90e7f77eb6949ffc28800abe78b46cd" translate="yes" xml:space="preserve">
          <source>To create these types, mark the pages by providing a &lt;code&gt;type&lt;/code&gt; argument to the &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#page-command&quot;&gt;\page&lt;/a&gt; command. The &lt;code&gt;type&lt;/code&gt; argument is the second argument, with the file name being the first.</source>
          <target state="translated">이러한 유형을 작성하려면 &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#page-command&quot;&gt;\ page&lt;/a&gt; 명령에 &lt;code&gt;type&lt;/code&gt; 인수를 제공하여 페이지를 표시 하십시오 . &lt;code&gt;type&lt;/code&gt; 인수는 파일 이름이 첫 번째 인으로, 두 번째 인수입니다.</target>
        </trans-unit>
        <trans-unit id="3c36d901d4a220ea1e4fe4a5e1175f092ecd5f53" translate="yes" xml:space="preserve">
          <source>To create this &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; object, we first create the definition file, &lt;code&gt;simpleswitch.rep&lt;/code&gt;. This file describes the properties and methods for the object and is input to the &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt; utility which is part of Qt Remote Objects. Only the interfaces that need to be exposed to &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; objects are defined in this file.</source>
          <target state="translated">이 &lt;a href=&quot;qtremoteobjects-source#source&quot;&gt;Source&lt;/a&gt; 객체 를 만들려면 먼저 정의 파일 &lt;code&gt;simpleswitch.rep&lt;/code&gt; 을 만듭니다 . 이 파일은 객체의 속성과 메소드를 설명하고 Qt 원격 객체의 일부인 &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt; 유틸리티에 입력됩니다 . 이 파일에는 &lt;a href=&quot;qtremoteobjects-replica#replica&quot;&gt;Replica&lt;/a&gt; 객체에 노출되어야하는 인터페이스 만 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c0f6c8abffbd32c1f421c7de16e9910c36df192" translate="yes" xml:space="preserve">
          <source>To create your own custom effect, create a subclass of &lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt; (or any other existing effects) and reimplement the virtual function &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;(). This function is called whenever the effect needs to redraw. The &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;() function takes the painter with which to draw as an argument. For more information, refer to the documenation for &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;(). In the &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;() function you can call &lt;a href=&quot;qgraphicseffect#sourcePixmap&quot;&gt;sourcePixmap&lt;/a&gt;() to get a pixmap of the graphics effect source which you can then process.</source>
          <target state="translated">사용자 정의 효과를 만들려면 &lt;a href=&quot;qgraphicseffect&quot;&gt;QGraphicsEffect&lt;/a&gt; 의 하위 클래스 (또는 기존의 다른 효과)를 만들고 가상 함수 &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;그리기&lt;/a&gt; ()를 다시 구현하십시오 . 이 함수는 효과를 다시 그려야 할 때마다 호출됩니다. &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;연신&lt;/a&gt; () 함수는 인수로 그릴과 화가 걸린다. 자세한 내용은 &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;추첨&lt;/a&gt; 문서를 참조하십시오 (). 에서 &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;무승부&lt;/a&gt; () 함수는 호출 할 수 &lt;a href=&quot;qgraphicseffect#sourcePixmap&quot;&gt;sourcePixmap을&lt;/a&gt; 당신이 다음 처리 할 수있는 그래픽 효과 소스의 픽스맵을 얻기 위해 ().</target>
        </trans-unit>
        <trans-unit id="35dca4752e7d413a58975b36c8c53a1fc8ecdcba" translate="yes" xml:space="preserve">
          <source>To create your own custom effect, create a subclass of QGraphicsEffect (or any other existing effects) and reimplement the virtual function &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;(). This function is called whenever the effect needs to redraw. The &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;() function takes the painter with which to draw as an argument. For more information, refer to the documenation for &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;(). In the &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;draw&lt;/a&gt;() function you can call &lt;a href=&quot;qgraphicseffect#sourcePixmap&quot;&gt;sourcePixmap&lt;/a&gt;() to get a pixmap of the graphics effect source which you can then process.</source>
          <target state="translated">사용자 정의 효과를 만들려면 QGraphicsEffect의 하위 클래스 (또는 다른 기존 효과)를 만들고 가상 함수 &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;그리기&lt;/a&gt; ()를 다시 구현합니다 . 이 함수는 효과를 다시 그려야 할 때마다 호출됩니다. &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;연신&lt;/a&gt; () 함수는 인수로 그릴과 화가 걸린다. 자세한 내용은 &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;그리기&lt;/a&gt; 문서 () 를 참조하세요 . 에서 &lt;a href=&quot;qgraphicseffect#draw&quot;&gt;무승부&lt;/a&gt; () 함수는 호출 할 수 &lt;a href=&quot;qgraphicseffect#sourcePixmap&quot;&gt;sourcePixmap을&lt;/a&gt; 당신이 다음 처리 할 수있는 그래픽 효과 소스의 픽스맵을 얻기 위해 ().</target>
        </trans-unit>
        <trans-unit id="d4dbc39d98a3b7d47d8cd5e1882f44ef08ed68bd" translate="yes" xml:space="preserve">
          <source>To customize the appearance of each &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#menuItem-prop&quot;&gt;menuItem&lt;/a&gt; without having to define your own, you can use the &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#backgroundColor-prop&quot;&gt;backgroundColor&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#selectionColor-prop&quot;&gt;selectionColor&lt;/a&gt; properties. To customize the drop shadow, use the &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowColor-prop&quot;&gt;shadowColor&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowRadius-prop&quot;&gt;shadowRadius&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowSpread-prop&quot;&gt;shadowSpread&lt;/a&gt; properties.</source>
          <target state="translated">직접 정의하지 않고 각 &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#menuItem-prop&quot;&gt;menuItem&lt;/a&gt; 의 모양을 사용자 정의하려면 &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#backgroundColor-prop&quot;&gt;backgroundColor&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#selectionColor-prop&quot;&gt;selectionColor&lt;/a&gt; 속성을 사용할 수 있습니다 . 그림자를 사용자 정의하려면 &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowColor-prop&quot;&gt;shadowColor&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowRadius-prop&quot;&gt;shadowRadius&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-controls-styles-piemenustyle#shadowSpread-prop&quot;&gt;shadowSpread&lt;/a&gt; 속성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e70151e99cc8552276a9e1bfec4748811fad93de" translate="yes" xml:space="preserve">
          <source>To debug an executable server, run the application in a debugger and start with the command line parameter &lt;code&gt;-activex&lt;/code&gt;. Then start your client and create an instance of your ActiveX control. COM will use the existing process for the next client trying to create an ActiveX control.</source>
          <target state="translated">실행 서버를 디버그하려면 디버거에서 애플리케이션을 실행하고 명령 행 매개 변수 &lt;code&gt;-activex&lt;/code&gt; 로 시작하십시오 . 그런 다음 클라이언트를 시작하고 ActiveX 컨트롤 인스턴스를 만듭니다. COM은 ActiveX 컨트롤을 만들려는 다음 클라이언트에 기존 프로세스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b1a1422665b0e2d84739cf689a21e64cc0b24f35" translate="yes" xml:space="preserve">
          <source>To debug an in-process server in Visual Studio, set the server project as the active project, and specify a client &quot;executable for debug session&quot; in the project settings (e.g. use the ActiveX Test Container). You can set breakpoints in your code, and also step into &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; and Qt code if you installed the debug version.</source>
          <target state="translated">Visual Studio에서 In-process 서버를 디버깅하려면 서버 프로젝트를 활성 프로젝트로 설정하고 프로젝트 설정에서 &quot;디버그 세션에 대해 실행 가능&quot;클라이언트를 지정합니다 (예 : ActiveX 테스트 컨테이너 사용). 코드에 중단 점을 설정할 수 있으며 디버그 버전을 설치 한 경우 &lt;a href=&quot;activeqt-index&quot;&gt;ActiveQt&lt;/a&gt; 및 Qt 코드 를 실행할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="48715a0a1aa281de08597b22876c63f4417a3c88" translate="yes" xml:space="preserve">
          <source>To debug an in-process server in Visual Studio, set the server project as the active project, and specify a client &quot;executable for debug session&quot; in the project settings (e.g. use the ActiveX Test Container). You can set breakpoints in your code, and also step into &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; and Qt code if you installed the debug version.</source>
          <target state="translated">Visual Studio에서 인 프로세스 서버를 디버그하려면 서버 프로젝트를 활성 프로젝트로 설정하고 프로젝트 설정에서 &quot;디버그 세션을 위해 실행 가능한&quot;클라이언트를 지정하십시오 (예 : ActiveX 테스트 컨테이너 사용). 코드에 중단 점을 설정 하고 디버그 버전을 설치 한 경우 &lt;a href=&quot;activeqt-index#&quot;&gt;ActiveQt&lt;/a&gt; 및 Qt 코드 로 들어갈 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d6d53607b2d75e2cb48061d7d53b8d5288cd9cd" translate="yes" xml:space="preserve">
          <source>To debug your server run it with -dumpidl outputfile and check where it crashes.</source>
          <target state="translated">서버를 디버그하려면 -dumpidl outputfile을 사용하여 서버를 실행하고 충돌 위치를 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="66a5e71f4fa016e8b6a5350a6e3f9f3601bcbb0c" translate="yes" xml:space="preserve">
          <source>To declare a property, use the &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY()&lt;/a&gt; macro in a class that inherits &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;.</source>
          <target state="translated">속성을 선언하려면 &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; 를 상속하는 클래스에서 &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY ()&lt;/a&gt; 매크로를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0360b68c626ea835bebf2bfc518b0780d95c3cfa" translate="yes" xml:space="preserve">
          <source>To define a buddy widget for a label, click on the label, drag the connection to another widget on the form, and release the mouse button. The connection shown indicates how input focus is passed to the buddy widget. You can use the form preview to test the connections between each label and its buddy.</source>
          <target state="translated">레이블의 대화 상대 위젯을 정의하려면 레이블을 클릭하고 양식의 다른 위젯으로 연결을 끌어 마우스 단추를 놓으십시오. 표시된 연결은 입력 포커스가 대화 상대 위젯으로 전달되는 방법을 나타냅니다. 양식 미리보기를 사용하여 각 레이블과 해당 친구 간의 연결을 테스트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="636712b0cb3960110f9c8112889e686d6afb6ed4" translate="yes" xml:space="preserve">
          <source>To define a class use the &lt;code&gt;class&lt;/code&gt; keyword, followed by the name you want for your type, and then enclose your API in brackets like so</source>
          <target state="translated">클래스를 정의하려면 &lt;code&gt;class&lt;/code&gt; 키워드와 유형에 사용할 이름을 차례로 사용하고 API를 대괄호로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="12c2b34290a4cd4461c82e19bbc59fd22df515c8" translate="yes" xml:space="preserve">
          <source>To define a drawing area in the Canvas item set the &lt;code&gt;width&lt;/code&gt; and &lt;code&gt;height&lt;/code&gt; properties. For example, the following code creates a Canvas item which has a drawing area with a height of 100 pixels and width of 200 pixels:</source>
          <target state="translated">Canvas 항목에서 그리기 영역을 정의하려면 &lt;code&gt;width&lt;/code&gt; 및 &lt;code&gt;height&lt;/code&gt; 속성을 설정하십시오 . 예를 들어 다음 코드는 높이가 100 픽셀이고 너비가 200 픽셀 인 그리기 영역이있는 Canvas 항목을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="521230a25b19adab50149f1de957e5e1778d2cc1" translate="yes" xml:space="preserve">
          <source>To define multiple Transitions, specify &lt;a href=&quot;qml-qtquick-item#transitions-prop&quot;&gt;Item::transitions&lt;/a&gt; as a list:</source>
          <target state="translated">여러 전환을 정의하려면 &lt;a href=&quot;qml-qtquick-item#transitions-prop&quot;&gt;Item :: transitions&lt;/a&gt; 를 목록으로 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="237460d82f046cee21b9f4e182de5fb34d4888f3" translate="yes" xml:space="preserve">
          <source>To define multiple transitions, specify &lt;a href=&quot;qml-qtquick-item#transitions-prop&quot;&gt;Item::transitions&lt;/a&gt; as a list:</source>
          <target state="translated">여러 전환을 정의하려면 &lt;a href=&quot;qml-qtquick-item#transitions-prop&quot;&gt;Item :: transitions&lt;/a&gt; 를 목록으로 지정 하십시오.</target>
        </trans-unit>
        <trans-unit id="cdd1aa6229fc5dc07c802818527d5d2a5d325dc1" translate="yes" xml:space="preserve">
          <source>To define the layout direction for a particular locale, declare the dedicated string literal &lt;code&gt;QT_LAYOUT_DIRECTION&lt;/code&gt; in context &lt;code&gt;QGuiApplication&lt;/code&gt; as either &quot;LTR&quot; or &quot;RTL&quot;.</source>
          <target state="translated">특정 로케일의 레이아웃 방향을 정의하려면 전용 문자열 리터럴 선언 &lt;code&gt;QT_LAYOUT_DIRECTION&lt;/code&gt; 컨텍스트에서 &lt;code&gt;QGuiApplication&lt;/code&gt; 을 하나 &quot;LTR&quot;또는 &quot;RTL&quot;로.</target>
        </trans-unit>
        <trans-unit id="8c602695b2e00e6ebc1596ab8c081b2992c0e3ee" translate="yes" xml:space="preserve">
          <source>To delete a page, select &lt;b&gt;Delete Page&lt;/b&gt; from the toolbox widget's context menu.</source>
          <target state="translated">페이지를 삭제하려면 도구 상자 위젯의 상황에 맞는 메뉴에서 &lt;b&gt;페이지 삭제를&lt;/b&gt; 선택하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c2e5b9cf85294ed97eb4f2b0a49a9baddaa0e1d" translate="yes" xml:space="preserve">
          <source>To delete a tab:</source>
          <target state="translated">탭을 삭제하려면</target>
        </trans-unit>
        <trans-unit id="3b8e9e0d2d5bb873a528c34b89848f84f1c67828" translate="yes" xml:space="preserve">
          <source>To demonstrate how data can be retrieved from a model, using model indexes, we set up a &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt; without a view and display the names of files and directories in a widget. Although this does not show a normal way of using a model, it demonstrates the conventions used by models when dealing with model indexes.</source>
          <target state="translated">모델 인덱스를 사용하여 모델에서 데이터를 검색하는 방법을 보여주기 위해 뷰없이 &lt;a href=&quot;qfilesystemmodel&quot;&gt;QFileSystemModel&lt;/a&gt; 을 설정 하고 위젯에 파일 및 디렉토리 이름을 표시합니다. 이것은 모델을 사용하는 일반적인 방법을 보여주지는 않지만 모델 인덱스를 다룰 때 모델이 사용하는 규칙을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="23bb4f43022105d83bee84cf85192d718e4022d0" translate="yes" xml:space="preserve">
          <source>To demonstrate some of the principal features of selections, we construct an instance of a custom table model with 32 items in total, and open a table view onto its data:</source>
          <target state="translated">선택의 주요 기능 중 일부를 보여주기 위해 총 32 개의 항목이 포함 된 사용자 지정 테이블 모델 인스턴스를 생성하고 해당 데이터에 대한 테이블 뷰를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="232c2ad79105d729fe63e677713ea96eafbdd588" translate="yes" xml:space="preserve">
          <source>To demonstrate the core functionality of the State Machine API, let's look at a small example: A state machine with three states, &lt;code&gt;s1&lt;/code&gt;, &lt;code&gt;s2&lt;/code&gt; and &lt;code&gt;s3&lt;/code&gt;. The state machine is controlled by a single &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt;; when the button is clicked, the machine transitions to another state. Initially, the state machine is in state &lt;code&gt;s1&lt;/code&gt;. The statechart for this machine is as follows:</source>
          <target state="translated">State Machine API의 핵심 기능을 시연하기 위해 작은 예를 살펴 보겠습니다. 상태가 &lt;code&gt;s1&lt;/code&gt; , &lt;code&gt;s2&lt;/code&gt; 및 &lt;code&gt;s3&lt;/code&gt; 인 상태 머신 . 상태 머신은 단일 &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton에&lt;/a&gt; 의해 제어됩니다 . 버튼을 클릭하면 기기가 다른 상태로 전환됩니다. 초기 상태 머신은 상태 &lt;code&gt;s1&lt;/code&gt; 에 있습니다. 이 머신의 상태 차트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7d8c504baae60f12e60b66ca8ae4d452e033a100" translate="yes" xml:space="preserve">
          <source>To demonstrate the core functionality of the State Machine API, let's look at an example: A state machine with three states, &lt;code&gt;s1&lt;/code&gt;, &lt;code&gt;s2&lt;/code&gt; and &lt;code&gt;s3&lt;/code&gt;. The state machine is controlled by a single Button; when the button is clicked, the machine transitions to another state. Initially, the state machine is in state &lt;code&gt;s1&lt;/code&gt;. The following is a state chart showing the different states in our example.</source>
          <target state="translated">State Machine API의 핵심 기능을 시연하기 위해 예를 살펴 보겠습니다. 세 가지 상태 &lt;code&gt;s1&lt;/code&gt; , &lt;code&gt;s2&lt;/code&gt; 및 &lt;code&gt;s3&lt;/code&gt; 이 있는 상태 시스템입니다 . 상태 머신은 단일 버튼으로 제어됩니다. 버튼을 클릭하면 기기가 다른 상태로 전환됩니다. 초기 상태 머신은 상태 &lt;code&gt;s1&lt;/code&gt; 에 있습니다. 다음은이 예에서 다른 상태를 보여주는 상태 차트입니다.</target>
        </trans-unit>
        <trans-unit id="9aade4445c4a9f13cd4201b65b8311a26873dcf8" translate="yes" xml:space="preserve">
          <source>To demonstrate, we create a simple Calculator Form application. It is based on the original &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-calculatorform-example.html#&quot;&gt;Calculator Form&lt;/a&gt; example.</source>
          <target state="translated">시연하기 위해 간단한 계산기 양식 응용 프로그램을 만듭니다. 원래 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-calculatorform-example.html#&quot;&gt;계산기 양식&lt;/a&gt; 예제를 기반으로합니다 .</target>
        </trans-unit>
        <trans-unit id="be9ebb34f019d1e33e69290ec15981a99521eab0" translate="yes" xml:space="preserve">
          <source>To demonstrate, we create a simple Calculator Form application. It is based on the original &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-calculatorform-example.html&quot;&gt;Calculator Form&lt;/a&gt; example.</source>
          <target state="translated">설명하기 위해 간단한 계산기 양식 애플리케이션을 만듭니다. 원래 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-calculatorform-example.html&quot;&gt;계산기 양식&lt;/a&gt; 예제를 기반으로합니다 .</target>
        </trans-unit>
        <trans-unit id="b09875b7d23305c526572d4b5302c7b3d8cdfb7e" translate="yes" xml:space="preserve">
          <source>To demonstrate, we create two instances of our previously defined component and set the first one to have focus. The intention is that when the &lt;code&gt;A&lt;/code&gt;, &lt;code&gt;B&lt;/code&gt;, or &lt;code&gt;C&lt;/code&gt; keys are pressed, the first of the two components receives the event and responds accordingly.</source>
          <target state="translated">시연하기 위해 이전에 정의한 구성 요소의 두 인스턴스를 작성하고 첫 번째 구성 요소가 초점을 갖도록 설정합니다. 의도는 때이다 , &lt;code&gt;B&lt;/code&gt; 또는 &lt;code&gt;C&lt;/code&gt; 의 키를 누르면, 두 성분의 제 적절히 이벤트 및 응답을 수신한다. &lt;code&gt;A&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="76075a4bd6a74d00cf7c9622503b3219a28c1c87" translate="yes" xml:space="preserve">
          <source>To demonstrate, we use the Qt Widgets animation easing example.</source>
          <target state="translated">시연하기 위해 Qt 위젯 애니메이션 여유 예제를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="77915c725f4e90ed2d82ab53947eb39c04d3e920" translate="yes" xml:space="preserve">
          <source>To describe algorithmic complexity, we use the following terminology, based on the &quot;big Oh&quot; notation:</source>
          <target state="translated">알고리즘 복잡성을 설명하기 위해 &quot;big Oh&quot;표기법에 따라 다음과 같은 용어를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3d7889216337e1c79e0a700cf9e93146ec92e9c1" translate="yes" xml:space="preserve">
          <source>To detect other failures check the output of &lt;a href=&quot;qpainter#begin&quot;&gt;QPainter::begin&lt;/a&gt;() or &lt;a href=&quot;qprinter#newPage&quot;&gt;QPrinter::newPage&lt;/a&gt;().</source>
          <target state="translated">다른 장애를 감지하려면 &lt;a href=&quot;qpainter#begin&quot;&gt;QPainter :: begin&lt;/a&gt; () 또는 &lt;a href=&quot;qprinter#newPage&quot;&gt;QPrinter :: newPage&lt;/a&gt; () 의 출력을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="f5b57b0e303bce0cb02dc3888fc360ece9199c40" translate="yes" xml:space="preserve">
          <source>To detect value changes made in the UI layer you can connect to the &lt;a href=&quot;qqmlpropertymap#valueChanged&quot;&gt;valueChanged&lt;/a&gt;() signal. However, note that &lt;a href=&quot;qqmlpropertymap#valueChanged&quot;&gt;valueChanged&lt;/a&gt;() is &lt;b&gt;NOT&lt;/b&gt; emitted when changes are made by calling &lt;a href=&quot;qqmlpropertymap#insert&quot;&gt;insert&lt;/a&gt;() or &lt;a href=&quot;qqmlpropertymap#clear&quot;&gt;clear&lt;/a&gt;() - it is only emitted when a value is updated from QML.</source>
          <target state="translated">UI 레이어에서 변경된 값을 감지하려면 &lt;a href=&quot;qqmlpropertymap#valueChanged&quot;&gt;valueChanged&lt;/a&gt; () 신호에 연결할 수 있습니다 . 그러나 &lt;a href=&quot;qqmlpropertymap#insert&quot;&gt;insert&lt;/a&gt; () 또는 &lt;a href=&quot;qqmlpropertymap#clear&quot;&gt;clear&lt;/a&gt; () 를 호출하여 변경 한 경우 &lt;a href=&quot;qqmlpropertymap#valueChanged&quot;&gt;valueChanged&lt;/a&gt; ()가 생성 &lt;b&gt;되지 않습니다&lt;/b&gt; . 이는 QML에서 값이 업데이트 될 때만 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="de0644713aee6e242015906cdf56846e10af46eb" translate="yes" xml:space="preserve">
          <source>To determine the attributes of the font actually used in the window system, use a &lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt; object, e.g.</source>
          <target state="translated">윈도우 시스템에서 실제로 사용되는 폰트의 속성을 결정하려면 &lt;a href=&quot;qfontinfo&quot;&gt;QFontInfo&lt;/a&gt; 객체를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="27687f31e3222b2c704e422d9733df4344fbb379" translate="yes" xml:space="preserve">
          <source>To determine the length of the array, access the &lt;code&gt;&quot;length&quot;&lt;/code&gt; property. To access array elements, use the &lt;a href=&quot;qjsvalue#property-1&quot;&gt;property&lt;/a&gt;(quint32 arrayIndex) overload. The following code reads the array we created above back into a list:</source>
          <target state="translated">배열의 길이를 확인하려면 &lt;code&gt;&quot;length&quot;&lt;/code&gt; 속성에 액세스하십시오 . 배열 요소에 액세스하려면 &lt;a href=&quot;qjsvalue#property-1&quot;&gt;속성&lt;/a&gt; (quint32 arrayIndex) 오버로드를 사용하십시오. 다음 코드는 위에서 만든 배열을 목록으로 다시 읽습니다.</target>
        </trans-unit>
        <trans-unit id="db9bf2959b33b982ef422645bf01dc26957ebbf2" translate="yes" xml:space="preserve">
          <source>To determine the number of rows affected by a non-&lt;code&gt;SELECT&lt;/code&gt; statement, use &lt;a href=&quot;qsqlquery#numRowsAffected&quot;&gt;numRowsAffected&lt;/a&gt;().</source>
          <target state="translated">비 &lt;code&gt;SELECT&lt;/code&gt; 문의 영향을받는 행 수를 판별하려면 &lt;a href=&quot;qsqlquery#numRowsAffected&quot;&gt;numRowsAffected&lt;/a&gt; ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="49b00d09d8a313538503ace48ff3400c58d6d26d" translate="yes" xml:space="preserve">
          <source>To determine the projection of this camera a high level API is provided. First it is possible to position this Camera like any other spatial Node in the scene. This determines where the Camera is in the scene, and what direction it is facing. The default direction of the camera is such that the forward vector is looking up the +Z axis, and the up direction vector is up the +Y axis. With this in mind any transformation applied to the camera as well as the transformations inherited from it's parent Nodes you can define exactly where and in what direction your camera is facing.</source>
          <target state="translated">이 카메라의 투영을 결정하기 위해 높은 수준의 API가 제공됩니다. 먼저이 카메라를 씬의 다른 공간 노드처럼 배치 할 수 있습니다. 이것은 장면에서 카메라의 위치와 향하는 방향을 결정합니다. 카메라의 기본 방향은 정방향 벡터가 + Z 축을 바라보고 위쪽 방향 벡터가 + Y 축을 향하도록하는 것입니다. 이를 염두에두고 카메라에 적용된 모든 변환과 부모 노드에서 상속 된 변환을 염두에두고 카메라가 향하는 위치와 방향을 정확히 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d50e263753d1f900b27c6ac2089f568e593da545" translate="yes" xml:space="preserve">
          <source>To determine the projection of this camera a high level API is provided. First it is possible to position this Camera like any other spatial Node in the scene. This determines where the Camera is in the scene, and what direction it is facing. The default direction of the camera is such that the forward vector is looking up the -Z axis, and the up direction vector is up the +Y axis. With this in mind any transformation applied to the camera as well as the transformations inherited from it's parent Nodes you can define exactly where and in what direction your camera is facing.</source>
          <target state="translated">이 카메라의 투영을 결정하기 위해 높은 수준의 API가 제공됩니다. 먼저이 카메라를 씬의 다른 공간 노드처럼 배치 할 수 있습니다. 이것은 장면에서 카메라의 위치와 향하는 방향을 결정합니다. 카메라의 기본 방향은 전방 벡터가 -Z 축을 바라보고 위쪽 방향 벡터가 + Y 축을 향하도록하는 것입니다. 이를 염두에두고 카메라에 적용된 모든 변환과 부모 노드에서 상속 된 변환을 염두에두고 카메라가 향하는 위치와 방향을 정확히 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d4e793c01ffa7b30f31211ea3ee05fb08ef4b77" translate="yes" xml:space="preserve">
          <source>To determine what a &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; refers to, the</source>
          <target state="translated">&lt;a href=&quot;qxmlname&quot;&gt;QXmlName이&lt;/a&gt; 무엇을 참조 하는지 확인하려면</target>
        </trans-unit>
        <trans-unit id="78370ad8e10a5f1550b0917e4db21701059e835e" translate="yes" xml:space="preserve">
          <source>To determine what a QXmlName refers to, the</source>
          <target state="translated">QXmlName이 참조하는 내용을 확인하려면</target>
        </trans-unit>
        <trans-unit id="0de072ff5a4f8f5f27c0ba6ad638c7dc42698c91" translate="yes" xml:space="preserve">
          <source>To determine whether a database driver supports a given feature, use &lt;a href=&quot;qsqldriver#hasFeature&quot;&gt;QSqlDriver::hasFeature&lt;/a&gt;(). In the following example, we call &lt;a href=&quot;qsqlquery#size&quot;&gt;QSqlQuery::size&lt;/a&gt;() to determine the size of a result set of the underlying database supports that feature; otherwise, we navigate to the last record and use the query's position to tell us how many records there are.</source>
          <target state="translated">데이터베이스 드라이버가 지정된 기능을 지원하는지 판별하려면 &lt;a href=&quot;qsqldriver#hasFeature&quot;&gt;QSqlDriver :: hasFeature&lt;/a&gt; ()를 사용하십시오. 다음 예제에서는 &lt;a href=&quot;qsqlquery#size&quot;&gt;QSqlQuery :: size&lt;/a&gt; ()를 호출 하여 기본 데이터베이스의 결과 세트 크기를 결정하여 해당 기능을 지원합니다. 그렇지 않으면 마지막 레코드를 탐색하고 쿼리 위치를 사용하여 레코드 수를 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="f4af566d30f9855053a412d6a6ed49be993f0f25" translate="yes" xml:space="preserve">
          <source>To determine whether an error has occurred, check to see if &lt;a href=&quot;qgeocodereply#error&quot;&gt;QGeoCodeReply::error&lt;/a&gt;() is equal to &lt;a href=&quot;qgeocodereply#Error-enum&quot;&gt;QGeoCodeReply::NoError&lt;/a&gt;.</source>
          <target state="translated">오류가 발생했는지 확인하려면 &lt;a href=&quot;qgeocodereply#error&quot;&gt;QGeoCodeReply :: error&lt;/a&gt; ()가 &lt;a href=&quot;qgeocodereply#Error-enum&quot;&gt;QGeoCodeReply :: NoError와&lt;/a&gt; 같은지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="19dc0f738286f03277cfbb373d2c0e42a2d0d5d7" translate="yes" xml:space="preserve">
          <source>To determine whether an error has occurred, check to see if &lt;a href=&quot;qgeoroutereply#error&quot;&gt;QGeoRouteReply::error&lt;/a&gt;() is equal to &lt;a href=&quot;qgeoroutereply#Error-enum&quot;&gt;QGeoRouteReply::NoError&lt;/a&gt;.</source>
          <target state="translated">오류가 발생했는지 확인하려면 &lt;a href=&quot;qgeoroutereply#error&quot;&gt;QGeoRouteReply :: error&lt;/a&gt; ()가 &lt;a href=&quot;qgeoroutereply#Error-enum&quot;&gt;QGeoRouteReply :: NoError와&lt;/a&gt; 같은지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="52b2a8072d68cae4cf0f13521a3d55d8424c8bbb" translate="yes" xml:space="preserve">
          <source>To develop a simple application from scratch, see &lt;a href=&quot;http://doc.qt.io/qtcreator/qt-creator-accelbubble-example.html&quot;&gt;Qt Creator: Creating a Mobile Application&lt;/a&gt;.</source>
          <target state="translated">간단한 애플리케이션을 처음부터 개발하려면 &lt;a href=&quot;http://doc.qt.io/qtcreator/qt-creator-accelbubble-example.html&quot;&gt;Qt Creator : Creating a Mobile Application을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd8152693b302591b8d689ea068dbe289b5fc1db" translate="yes" xml:space="preserve">
          <source>To develop a simple application from scratch, see &lt;a href=&quot;http://doc.qt.io/qtcreator/qt-creator-accelbubble-example.html#&quot;&gt;Creating a Mobile Application&lt;/a&gt;.</source>
          <target state="translated">간단한 응용 프로그램을 처음부터 개발하려면 &lt;a href=&quot;http://doc.qt.io/qtcreator/qt-creator-accelbubble-example.html#&quot;&gt;모바일 응용 프로그램 만들기를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="115328fb8e6fff6dfba67f71c74424a9e9df69ae" translate="yes" xml:space="preserve">
          <source>To develop style aware widgets (i.e., widgets that conform to the style in which they are drawn), you need to draw them using the current style. This document shows how widgets draw themselves and which possibilities the style gives them.</source>
          <target state="translated">스타일 인식 위젯 (즉, 해당 스타일을 따르는 위젯)을 개발하려면 현재 스타일을 사용하여 그려야합니다. 이 문서는 위젯이 자신을 그리는 방법과 스타일이 제공하는 가능성을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2b86c4e12dd9a51c3f35a31b2899bdd694654762" translate="yes" xml:space="preserve">
          <source>To disable SSL support in a Qt build, configure Qt with the &lt;code&gt;-no-openssl&lt;/code&gt; option.</source>
          <target state="translated">Qt 빌드에서 SSL 지원을 비활성화하려면 &lt;code&gt;-no-openssl&lt;/code&gt; 옵션을 사용하여 Qt를 구성하십시오 .</target>
        </trans-unit>
        <trans-unit id="00554aac225254a9ce5222c7ed4391aff07828aa" translate="yes" xml:space="preserve">
          <source>To disable all blacklisting, set the environment variable &lt;code&gt;QT_NO_OPENGL_BUGLIST&lt;/code&gt; to any value. This will skip reading any configuration files, and instead will assume that nothing is disabled, regardless of the driver or OS.</source>
          <target state="translated">모든 블랙리스트를 비활성화하려면 환경 변수 &lt;code&gt;QT_NO_OPENGL_BUGLIST&lt;/code&gt; 를 임의의 값으로 설정하십시오 . 이렇게하면 구성 파일 읽기를 건너 뛰고 대신 드라이버 또는 OS에 관계없이 비활성화 된 항목이 없다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="81d326b8d2456c6feacc013bacffe0ed2bbd45d1" translate="yes" xml:space="preserve">
          <source>To disable mouse events for an item (i.e., make it transparent for mouse events), call setAcceptedMouseButtons(0).</source>
          <target state="translated">항목에 대해 마우스 이벤트를 비활성화하려면 (즉, 마우스 이벤트에 대해 투명하게하려면) setAcceptedMouseButtons (0)를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="b323854ba1ebb3dd7a8e3314eb85590755efe9ec" translate="yes" xml:space="preserve">
          <source>To disable the use of a proxy for this socket, use the &lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy::NoProxy&lt;/a&gt; proxy type:</source>
          <target state="translated">이 소켓에 프록시 사용을 비활성화하려면 &lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy :: NoProxy&lt;/a&gt; 프록시 유형을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9d00c974ae095cff55f1135181e516df84f9953e" translate="yes" xml:space="preserve">
          <source>To disable the use of a proxy, use the &lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy::NoProxy&lt;/a&gt; proxy type:</source>
          <target state="translated">프록시 사용을 비활성화하려면 &lt;a href=&quot;qnetworkproxy#ProxyType-enum&quot;&gt;QNetworkProxy :: NoProxy&lt;/a&gt; 프록시 유형을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6dbeb4bca6a5e3a208cf1d780f1d01de04b0e20e" translate="yes" xml:space="preserve">
          <source>To discard all standard output from the process, pass &lt;a href=&quot;qprocess#nullDevice&quot;&gt;nullDevice&lt;/a&gt;() here. This is more efficient than simply never reading the standard output, as no &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; buffers are filled.</source>
          <target state="translated">프로세스에서 모든 표준 출력을 삭제하려면 여기에 &lt;a href=&quot;qprocess#nullDevice&quot;&gt;nullDevice&lt;/a&gt; ()를 전달 하십시오. &lt;a href=&quot;qprocess&quot;&gt;QProcess&lt;/a&gt; 버퍼가 채워 지지 않기 때문에 단순히 표준 출력을 읽지 않는 것보다 효율적 입니다.</target>
        </trans-unit>
        <trans-unit id="3f52aad99eec4bf9b20f309412e90176296e7a48" translate="yes" xml:space="preserve">
          <source>To discover the nearby Bluetooth devices:</source>
          <target state="translated">주변의 블루투스 장치를 발견하려면 :</target>
        </trans-unit>
        <trans-unit id="a534004bdb54ac02295d4f983cabcde4eb345542" translate="yes" xml:space="preserve">
          <source>To display the given search results use the &lt;a href=&quot;qhelpsearchresultwidget&quot;&gt;QHelpSearchResultWidget&lt;/a&gt; or build up your own one if you need more advanced functionality. Note that the &lt;a href=&quot;qhelpsearchresultwidget&quot;&gt;QHelpSearchResultWidget&lt;/a&gt; can not be instantiated directly, you must retrieve the widget from the search engine in use as all connections will be established for you by the widget itself.</source>
          <target state="translated">주어진 검색 결과를 표시하려면 &lt;a href=&quot;qhelpsearchresultwidget&quot;&gt;QHelpSearchResultWidget을&lt;/a&gt; 사용 하거나 고급 기능이 필요한 경우 직접 검색 하십시오. 참고는 것을 &lt;a href=&quot;qhelpsearchresultwidget&quot;&gt;QHelpSearchResultWidget가&lt;/a&gt; 모든 연결이 위젯 자체에 의해 당신을 위해 설립 될 것이다 인스턴스를 직접 생성 할 수없는, 당신은 사용 검색 엔진에서 위젯을 검색해야합니다.</target>
        </trans-unit>
        <trans-unit id="102f27f6d0599b8edbfb7de3b776e4fbfe0f4450" translate="yes" xml:space="preserve">
          <source>To display the graphical scene defined by the QML document, it may be loaded with &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html&quot;&gt;Qt Creator&lt;/a&gt;. For simple UI files such as this one, select &lt;b&gt;File &amp;gt; New File or Project &amp;gt; Applications &amp;gt; Qt Quick UI&lt;/b&gt; from within Qt Creator.</source>
          <target state="translated">QML 문서에 정의 된 그래픽 장면을 표시하려면 &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html&quot;&gt;Qt Creator를 사용&lt;/a&gt; 하여로드 할 수 있습니다 . 이와 같은 간단한 UI 파일의 경우 Qt Creator 내 에서 &lt;b&gt;File&amp;gt; New File 또는 Project&amp;gt; Applications&amp;gt; Qt Quick UI&lt;/b&gt; 를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="72881948bb70802fc5e2383d56e72743a5d55d28" translate="yes" xml:space="preserve">
          <source>To display the graphical scene defined by the QML document, it may be loaded with &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html#&quot;&gt;Qt Creator&lt;/a&gt;. For simple UI files such as this one, select &lt;b&gt;File &amp;gt; New File or Project &amp;gt; Applications &amp;gt; Qt Quick UI&lt;/b&gt; from within Qt Creator.</source>
          <target state="translated">QML 문서에 의해 정의 된 그래픽 장면을 표시하기 위해 &lt;a href=&quot;http://doc.qt.io/qtcreator/index.html#&quot;&gt;Qt Creator&lt;/a&gt; 와 함께로드 될 수 있습니다 . 이와 같은 간단한 UI 파일의 경우 Qt Creator 내 에서 &lt;b&gt;파일&amp;gt; 새 파일 또는 프로젝트&amp;gt; 응용 프로그램&amp;gt; Qt Quick UI&lt;/b&gt; 를 선택하십시오 .</target>
        </trans-unit>
        <trans-unit id="9f8ca203f4829cb4103f45cd63e96a58a7425c29" translate="yes" xml:space="preserve">
          <source>To display the movie in your application, you can pass your &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; object to &lt;a href=&quot;qlabel#setMovie&quot;&gt;QLabel::setMovie&lt;/a&gt;(). Example:</source>
          <target state="translated">응용 프로그램에서 동영상을 표시하려면 &lt;a href=&quot;qmovie&quot;&gt;QMovie&lt;/a&gt; 객체를 &lt;a href=&quot;qlabel#setMovie&quot;&gt;QLabel :: &lt;/a&gt;setMovie ()에 전달하면 됩니다. 예:</target>
        </trans-unit>
        <trans-unit id="e38862d58a567650c791ee0ffc0709d24086b6ae" translate="yes" xml:space="preserve">
          <source>To display the movie in your application, you can pass your QMovie object to &lt;a href=&quot;qlabel#setMovie&quot;&gt;QLabel::setMovie&lt;/a&gt;(). Example:</source>
          <target state="translated">응용 프로그램에 동영상을 표시하려면 QMovie 객체를 &lt;a href=&quot;qlabel#setMovie&quot;&gt;QLabel ::&lt;/a&gt; setMovie ()에 전달할 수 있습니다 . 예:</target>
        </trans-unit>
        <trans-unit id="677ecf257c36ecf7200ecb35423451235ef61e86" translate="yes" xml:space="preserve">
          <source>To distinguish the</source>
          <target state="translated">구별하기 위해</target>
        </trans-unit>
        <trans-unit id="27ef7c0db92cc246e83e1d7fc6053acb2ddf2c72" translate="yes" xml:space="preserve">
          <source>To distribute the available space according to the space requirement of each column or row, call the view's &lt;a href=&quot;qtableview#resizeColumnsToContents&quot;&gt;resizeColumnsToContents&lt;/a&gt;() or &lt;a href=&quot;qtableview#resizeRowsToContents&quot;&gt;resizeRowsToContents&lt;/a&gt;() functions.</source>
          <target state="translated">각 열 또는 행의 공간 요구 사항에 따라 사용 가능한 공간을 분배하려면보기의 &lt;a href=&quot;qtableview#resizeColumnsToContents&quot;&gt;resizeColumnsToContents&lt;/a&gt; () 또는 &lt;a href=&quot;qtableview#resizeRowsToContents&quot;&gt;resizeRowsToContents&lt;/a&gt; () 함수를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="564faa3728a2dbdfd8744cb9fa46aeeaf3d47734" translate="yes" xml:space="preserve">
          <source>To do this, you have to switch to &lt;b&gt;Edit Signals/Slots&lt;/b&gt; mode, either by pressing &lt;b&gt;F4&lt;/b&gt; or selecting &lt;b&gt;Edit Signals/Slots&lt;/b&gt; from the &lt;b&gt;Edit&lt;/b&gt; menu.</source>
          <target state="translated">이렇게하려면로 전환 할 수있는 &lt;b&gt;편집 신호 / 슬롯의&lt;/b&gt; 모드 중 하나를 눌러 &lt;b&gt;F4를&lt;/b&gt; 하거나 선택 &lt;b&gt;편집 신호를 / 슬롯&lt;/b&gt; 로부터 &lt;b&gt;편집&lt;/b&gt; 메뉴를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="54de2ad84d48d9d7c293176637193c14b489bca0" translate="yes" xml:space="preserve">
          <source>To document a QML type, start by creating a QDoc comment that uses the &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#qmltype-command&quot;&gt;\qmltype&lt;/a&gt; command as its topic command.</source>
          <target state="translated">QML 유형을 문서화하려면 먼저 &lt;a href=&quot;https://doc.qt.io/qt-5.13/13-qdoc-commands-topics.html#qmltype-command&quot;&gt;\ qmltype&lt;/a&gt; 명령을 주제 명령으로 사용하는 QDoc 주석을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="7c71083be4241c38fade29157a7f49b40af4be41" translate="yes" xml:space="preserve">
          <source>To document a QML type, start by creating a QDoc comment that uses the &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#qmltype-command&quot;&gt;\qmltype&lt;/a&gt; command as its topic command.</source>
          <target state="translated">QML 유형을 문서화하려면 주제 명령으로 &lt;a href=&quot;https://doc.qt.io/qt-5.15/13-qdoc-commands-topics.html#qmltype-command&quot;&gt;\ qmltype&lt;/a&gt; 명령 을 사용하는 QDoc 주석을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="f09b990f013f9bdb513270267d1b6915af145c9e" translate="yes" xml:space="preserve">
          <source>To download and install Qt for Linux, follow the instructions on the &lt;a href=&quot;gettingstarted&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">Linux 용 Qt를 다운로드하고 설치하려면 Qt &lt;a href=&quot;gettingstarted&quot;&gt;시작하기&lt;/a&gt; 페이지 의 지침을 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="ca2d5583409e2053223dec82c1cab6ebcd21b467" translate="yes" xml:space="preserve">
          <source>To download and install Qt for Linux, follow the instructions on the &lt;a href=&quot;gettingstarted#&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">Linux 용 Qt를 다운로드하여 설치하려면 Qt &lt;a href=&quot;gettingstarted#&quot;&gt;시작하기&lt;/a&gt; 페이지 의 지시 사항을 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="ac66d564b4bd5e705f72559279700303f6deffa0" translate="yes" xml:space="preserve">
          <source>To download and install Qt for Windows, follow the instructions on the &lt;a href=&quot;gettingstarted&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">Windows 용 Qt를 다운로드하고 설치하려면 Qt &lt;a href=&quot;gettingstarted&quot;&gt;시작하기&lt;/a&gt; 페이지 의 지침을 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="6222aa165b9921f7e413be9611472ca48c9069c7" translate="yes" xml:space="preserve">
          <source>To download and install Qt for Windows, follow the instructions on the &lt;a href=&quot;gettingstarted#&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">Windows 용 Qt를 다운로드하여 설치하려면 Qt &lt;a href=&quot;gettingstarted#&quot;&gt;시작하기&lt;/a&gt; 페이지 의 지시 사항을 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="ecbd3f268c12a5a8ac1e94c135a30447563187f4" translate="yes" xml:space="preserve">
          <source>To download and install Qt for macOS, follow the instructions on the &lt;a href=&quot;gettingstarted&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">macOS 용 Qt를 다운로드하고 설치하려면 Qt &lt;a href=&quot;gettingstarted&quot;&gt;시작하기&lt;/a&gt; 페이지 의 지침을 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="04e9609377770feedc94c407c90ced6c69ada91b" translate="yes" xml:space="preserve">
          <source>To download and install Qt for macOS, follow the instructions on the &lt;a href=&quot;gettingstarted#&quot;&gt;Getting Started with Qt&lt;/a&gt; page.</source>
          <target state="translated">macOS 용 Qt를 다운로드하여 설치하려면 Qt &lt;a href=&quot;gettingstarted#&quot;&gt;시작하기&lt;/a&gt; 페이지 의 지시 사항을 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="0d6a8eb87459e3bf1e33d477cc4243f493dd3a9c" translate="yes" xml:space="preserve">
          <source>To draw an arc or circle, call the arcTo(</source>
          <target state="translated">호 또는 원을 그리려면 arcTo (</target>
        </trans-unit>
        <trans-unit id="bb88c81ea3b00b5582ff3d8ba43dda532cb5c1f9" translate="yes" xml:space="preserve">
          <source>To draw images, load them by calling the Canvas's &lt;a href=&quot;qml-qtquick-canvas#loadImage-method&quot;&gt;loadImage()&lt;/a&gt; method and then request to paint them in the &lt;code&gt;onImageLoaded&lt;/code&gt; handler.</source>
          <target state="translated">이미지를 그리려면 Canvas의 &lt;a href=&quot;qml-qtquick-canvas#loadImage-method&quot;&gt;loadImage ()&lt;/a&gt; 메소드 를 호출하여 이미지를로드 한 다음 &lt;code&gt;onImageLoaded&lt;/code&gt; 핸들러 에서 이미지를 페인트하도록 요청하십시오 .</target>
        </trans-unit>
        <trans-unit id="42cfe2184a40f7a2069a19c867e30c635c56ee3b" translate="yes" xml:space="preserve">
          <source>To draw its up and down arrows, &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt; uses the &lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;PE_IndicatorSpinUp&lt;/a&gt; and &lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;PE_IndicatorSpinDown&lt;/a&gt; primitive elements. Here's how to reimplement the &lt;a href=&quot;qstyle#drawPrimitive&quot;&gt;drawPrimitive&lt;/a&gt;() function to draw them differently:</source>
          <target state="translated">위쪽 및 아래쪽 화살표를 그리기 위해 &lt;a href=&quot;qspinbox&quot;&gt;QSpinBox&lt;/a&gt; 는 &lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;PE_IndicatorSpinUp&lt;/a&gt; 및 &lt;a href=&quot;qstyle#PrimitiveElement-enum&quot;&gt;PE_IndicatorSpinDown&lt;/a&gt; 기본 요소를 사용합니다. &lt;a href=&quot;qstyle#drawPrimitive&quot;&gt;drawPrimitive&lt;/a&gt; () 함수 를 다시 구현하여 다르게 그리는 방법은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="c451f286685115955e2bed890f44a94ede197e03" translate="yes" xml:space="preserve">
          <source>To dynamically load a component defined in a QML file, call the &lt;a href=&quot;qml-qtqml-qt#createComponent-method&quot;&gt;Qt.createComponent()&lt;/a&gt; function in the &lt;a href=&quot;qml-qtqml-qt&quot;&gt;Qt object&lt;/a&gt;. This function takes the URL of the QML file as its only argument and creates a &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt; object from this URL.</source>
          <target state="translated">QML 파일에 정의 된 컴포넌트를 동적으로로드하려면 &lt;a href=&quot;qml-qtqml-qt&quot;&gt;Qt 오브젝트&lt;/a&gt; 에서 &lt;a href=&quot;qml-qtqml-qt#createComponent-method&quot;&gt;Qt.createComponent ()&lt;/a&gt; 함수를 호출하십시오 . 이 함수는 QML 파일의 URL을 유일한 인수 로 사용하여이 URL에서 &lt;a href=&quot;qml-qtqml-component&quot;&gt;Component&lt;/a&gt; 오브젝트를 작성합니다 .</target>
        </trans-unit>
        <trans-unit id="097167f467a3974c7e89c1530d65692536a62c49" translate="yes" xml:space="preserve">
          <source>To emit a signal, invoke it as a method. Any relevant &lt;a href=&quot;#signal-handler-attributes&quot;&gt;signal handlers&lt;/a&gt; will be invoked when the signal is emitted, and handlers can use the defined signal argument names to access the respective arguments.</source>
          <target state="translated">신호를 내보내려면 메소드로 신호를 호출하십시오. 신호가 생성되면 관련 &lt;a href=&quot;#signal-handler-attributes&quot;&gt;신호 핸들러&lt;/a&gt; 가 호출되며 핸들러는 정의 된 신호 인수 이름을 사용하여 각 인수에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f53c889f6ba19e5274fd287be550737e561bab0" translate="yes" xml:space="preserve">
          <source>To emit a signal, invoke it as a method. Any relevant &lt;a href=&quot;qtqml-syntax-objectattributes#signal-handler-attributes&quot;&gt;signal handlers&lt;/a&gt; will be invoked when the signal is emitted, and handlers can use the defined signal argument names to access the respective arguments.</source>
          <target state="translated">신호를 내보내려면 신호를 메소드로 호출하십시오. 신호가 방출 될 때 모든 관련 &lt;a href=&quot;qtqml-syntax-objectattributes#signal-handler-attributes&quot;&gt;신호 핸들러&lt;/a&gt; 가 호출되고 핸들러는 정의 된 신호 인수 이름을 사용하여 각 인수에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d19a580f99381c23f452ddf3c4869e73c2d081ca" translate="yes" xml:space="preserve">
          <source>To enable &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; to be partially transparent, it needs to be stacked on top of all other widgets. This means you cannot have other widgets partially covering the chart when using accelerated series.</source>
          <target state="translated">&lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; 을 부분적으로 투명 하게하려면 다른 모든 위젯 위에 쌓아야 합니다. 이는 가속 계열을 사용할 때 차트를 부분적으로 덮는 다른 위젯을 가질 수 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="d98b5aa396be67022f1fb6f335f462dbdb0bc253" translate="yes" xml:space="preserve">
          <source>To enable &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; to do anti-aliased rendering, use &lt;a href=&quot;qquickpainteditem#setAntialiasing&quot;&gt;setAntialiasing&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; 가 앤티 앨리어싱 렌더링을 수행 할 수있게하려면 &lt;a href=&quot;qquickpainteditem#setAntialiasing&quot;&gt;setAntialiasing&lt;/a&gt; ()을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a2c22ee8c5d7f52e6d31deb54a373b18ea48e62" translate="yes" xml:space="preserve">
          <source>To enable &lt;code&gt;tslib&lt;/code&gt; support, set the &lt;code&gt;QT_QPA_EGLFS_TSLIB&lt;/code&gt; (for &lt;code&gt;eglfs&lt;/code&gt;) or &lt;code&gt;QT_QPA_FB_TSLIB&lt;/code&gt; (for &lt;code&gt;linuxfb&lt;/code&gt;) environment variable to 1. To change the device, set the &lt;code&gt;TSLIB_TSDEVICE&lt;/code&gt; environment variable or pass the device name on the command-line. Note that the &lt;code&gt;tslib&lt;/code&gt; input handler generates mouse events and supports single touch only, as opposed to &lt;code&gt;evdevtouch&lt;/code&gt; which generates true multi-touch &lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent&lt;/a&gt; events too.</source>
          <target state="translated">&lt;code&gt;tslib&lt;/code&gt; 지원 을 활성화하려면 &lt;code&gt;QT_QPA_EGLFS_TSLIB&lt;/code&gt; ( &lt;code&gt;eglfs&lt;/code&gt; 의 경우 ) 또는 &lt;code&gt;QT_QPA_FB_TSLIB&lt;/code&gt; ( &lt;code&gt;linuxfb&lt;/code&gt; 의 경우 ) 환경 변수를 1로 설정하십시오. 장치를 변경하려면 &lt;code&gt;TSLIB_TSDEVICE&lt;/code&gt; 환경 변수를 설정 하거나 명령 줄에 장치 이름을 전달하십시오. 있습니다 &lt;code&gt;tslib&lt;/code&gt; 의 입력 핸들러는 반대로 마우스가 이벤트와 지원 단일 터치 생성 &lt;code&gt;evdevtouch&lt;/code&gt; 진정한 멀티 터치 생성 &lt;a href=&quot;qtouchevent&quot;&gt;QTouchEvent의&lt;/a&gt; 도 이벤트를.</target>
        </trans-unit>
        <trans-unit id="5f9dd6084e73aed0c0f059a5ad3f096b6a66d2b1" translate="yes" xml:space="preserve">
          <source>To enable OpenGL rendering, you simply set a new &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; as the viewport of &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; by calling &lt;a href=&quot;qabstractscrollarea#setViewport&quot;&gt;QGraphicsView::setViewport&lt;/a&gt;(). If you want OpenGL with antialiasing, you need to set a &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; with the needed sample count (see &lt;a href=&quot;qsurfaceformat#setSamples&quot;&gt;QSurfaceFormat::setSamples&lt;/a&gt;()).</source>
          <target state="translated">OpenGL 렌더링을 활성화하려면 &lt;a href=&quot;qabstractscrollarea#setViewport&quot;&gt;QGraphicsView :: setViewport&lt;/a&gt; ()를 호출 하여 새 &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; 을 &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; 의 뷰포트로 설정하면 됩니다. 앤티 앨리어싱이있는 OpenGL을 원한다면 필요한 샘플 수로 &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; 을 설정해야합니다 ( &lt;a href=&quot;qsurfaceformat#setSamples&quot;&gt;QSurfaceFormat :: setSamples&lt;/a&gt; () 참조).</target>
        </trans-unit>
        <trans-unit id="874dfcc9fdaac3126976065732207effa2ed47e3" translate="yes" xml:space="preserve">
          <source>To enable OpenGL rendering, you simply set a new QGLWidget as the viewport of &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; by calling &lt;a href=&quot;qabstractscrollarea#setViewport&quot;&gt;QGraphicsView::setViewport&lt;/a&gt;(). If you want OpenGL with antialiasing, you need OpenGL sample buffer support (see QGLFormat::sampleBuffers()).</source>
          <target state="translated">OpenGL 렌더링을 사용하려면 &lt;a href=&quot;qabstractscrollarea#setViewport&quot;&gt;QGraphicsView :: setViewport&lt;/a&gt; ()를 호출 하여 새 QGLWidget을 &lt;a href=&quot;qgraphicsview&quot;&gt;QGraphicsView&lt;/a&gt; 의 뷰포트로 설정하면 됩니다. 앤티 앨리어싱과 함께 OpenGL을 사용하려면 OpenGL 샘플 버퍼 지원이 필요합니다 (QGLFormat :: sampleBuffers () 참조).</target>
        </trans-unit>
        <trans-unit id="2338d65334f9a13bbbe546f8b507c5dc7534dc1d" translate="yes" xml:space="preserve">
          <source>To enable Qt Multimedia Widgets in a project, add this directive into the C++ files:</source>
          <target state="translated">프로젝트에서 Qt 멀티미디어 위젯을 사용하려면 C ++ 파일에 다음 지시문을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="4e0ae11fd48c631a5df540e6fb36da76c615182e" translate="yes" xml:space="preserve">
          <source>To enable Qt SQL in a project, add this directive into the C++ files:</source>
          <target state="translated">프로젝트에서 Qt SQL을 사용하려면 다음 지시문을 C ++ 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="0645941442dc24eb4ff90f94b85df46b24b4017d" translate="yes" xml:space="preserve">
          <source>To enable Qt Test in a project, add this directive into the C++ files:</source>
          <target state="translated">프로젝트에서 Qt Test를 활성화하려면이 지시문을 C ++ 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="5873c6978dbf0682c31f63e9b19264330fefbb6c" translate="yes" xml:space="preserve">
          <source>To enable a project to be built in both modes, you must add the &lt;code&gt;debug_and_release&lt;/code&gt; option to the &lt;code&gt;CONFIG&lt;/code&gt; variable:</source>
          <target state="translated">두 모드에서 프로젝트를 빌드 하려면 &lt;code&gt;CONFIG&lt;/code&gt; 변수에 &lt;code&gt;debug_and_release&lt;/code&gt; 옵션을 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1ff46e8bef769bb8c1125621845ba41087f769a1" translate="yes" xml:space="preserve">
          <source>To enable additional layers and extensions, provide the list via &lt;a href=&quot;qvulkaninstance#setLayers&quot;&gt;setLayers&lt;/a&gt;() and &lt;a href=&quot;qvulkaninstance#setExtensions&quot;&gt;setExtensions&lt;/a&gt;()</source>
          <target state="translated">추가 레이어 및 확장을 활성화하려면 &lt;a href=&quot;qvulkaninstance#setLayers&quot;&gt;setLayers&lt;/a&gt; () 및 &lt;a href=&quot;qvulkaninstance#setExtensions&quot;&gt;setExtensions&lt;/a&gt; () 를 통해 목록을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="1162d7488e2af5b103ab4a85a8b657fc5cbb32da" translate="yes" xml:space="preserve">
          <source>To enable again, assign a new &lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser&lt;/a&gt;:</source>
          <target state="translated">다시 활성화하려면 새 &lt;a href=&quot;qsemaphorereleaser&quot;&gt;QSemaphoreReleaser를&lt;/a&gt; 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb1b03533866db9af8f9e815ab69ee74ae46631a" translate="yes" xml:space="preserve">
          <source>To enable also the pasting of clipboard content from JavaScript, use &lt;a href=&quot;qml-qtwebengine-webenginesettings#javascriptCanPaste-prop&quot;&gt;javascriptCanPaste&lt;/a&gt;.</source>
          <target state="translated">JavaScript에서 클립 보드 컨텐츠를 붙여 넣을 수있게하려면 &lt;a href=&quot;qml-qtwebengine-webenginesettings#javascriptCanPaste-prop&quot;&gt;javascriptCanPaste를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5e494c85ec970020aa3c30dc3d670c62740b7ecf" translate="yes" xml:space="preserve">
          <source>To enable background running, uncomment &lt;code&gt;android.app.background_running&lt;/code&gt;&lt;code&gt;meta-data&lt;/code&gt; and set it to true (&lt;code&gt;android:value=&quot;true&quot;&lt;/code&gt; ).</source>
          <target state="translated">백그라운드 실행을 활성화하려면 &lt;code&gt;android.app.background_running&lt;/code&gt; &lt;code&gt;meta-data&lt;/code&gt; 주석 처리를 제거 하고 true ( &lt;code&gt;android:value=&quot;true&quot;&lt;/code&gt; )로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="d1272d72ae29a37e07175c513526c2874f40b62e" translate="yes" xml:space="preserve">
          <source>To enable creation of objects at run-time, call the &lt;a href=&quot;qmetatype#qRegisterMetaType-1&quot;&gt;qRegisterMetaType&lt;/a&gt;() template function to register it with the meta-object system. This also makes the type available for queued signal-slot communication as long as you call it before you make the first connection that uses the type.</source>
          <target state="translated">런타임에 객체를 만들려면 &lt;a href=&quot;qmetatype#qRegisterMetaType-1&quot;&gt;qRegisterMetaType&lt;/a&gt; () 템플릿 함수를 호출 하여 메타 객체 시스템에 등록하십시오. 또한 유형을 사용하는 첫 번째 연결을 만들기 전에 호출하는 한 유형이 대기열에있는 신호 슬롯 통신에 사용 가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="25a6f872882df17687b295bad80c78ef3d2c7a2f" translate="yes" xml:space="preserve">
          <source>To enable debugging -- from the start or to attach a debugger later on -- start the application with the following arguments:</source>
          <target state="translated">처음부터 디버깅을 활성화하거나 나중에 디버거를 연결하려면 다음 인수로 응용 프로그램을 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="96c5d6206105cb45573d8cfe9d7139cb5ebf2537" translate="yes" xml:space="preserve">
          <source>To enable editing in your model, you must also implement &lt;a href=&quot;qabstractitemmodel#setData&quot;&gt;setData&lt;/a&gt;(), and reimplement &lt;a href=&quot;qabstractitemmodel#flags&quot;&gt;flags&lt;/a&gt;() to ensure that &lt;code&gt;ItemIsEditable&lt;/code&gt; is returned. You can also reimplement &lt;a href=&quot;qabstractitemmodel#headerData&quot;&gt;headerData&lt;/a&gt;() and &lt;a href=&quot;qabstractitemmodel#setHeaderData&quot;&gt;setHeaderData&lt;/a&gt;() to control the way the headers for your model are presented.</source>
          <target state="translated">모델에서 편집 할 수 있도록하려면 &lt;a href=&quot;qabstractitemmodel#setData&quot;&gt;setData&lt;/a&gt; () 및 다시 구현 &lt;a href=&quot;qabstractitemmodel#flags&quot;&gt;플래그&lt;/a&gt; ()를 구현 하여 &lt;code&gt;ItemIsEditable&lt;/code&gt; 이 반환 되도록해야합니다 . 또한 구현할 수 &lt;a href=&quot;qabstractitemmodel#headerData&quot;&gt;headerData&lt;/a&gt; ()와 &lt;a href=&quot;qabstractitemmodel#setHeaderData&quot;&gt;setHeaderData를&lt;/a&gt; 모델에 대한 헤더 제시하는 방법을 제어하기 위해 ().</target>
        </trans-unit>
        <trans-unit id="b9415e3b27fdbb1b4e2e9fbaffb3b077af4dba7f" translate="yes" xml:space="preserve">
          <source>To enable in process screen readers, all events must be sent after the change has happened.</source>
          <target state="translated">프로세스 화면 판독기를 사용하려면 변경이 발생한 후 모든 이벤트를 보내야합니다.</target>
        </trans-unit>
        <trans-unit id="6dac4223acdd40a1f7d7d600929c6a6cbb9c901d" translate="yes" xml:space="preserve">
          <source>To enable item dragging, set the view's &lt;a href=&quot;qabstractitemview#dragEnabled-prop&quot;&gt;dragEnabled&lt;/a&gt; property to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">항목 끌기를 활성화하려면보기의 &lt;a href=&quot;qabstractitemview#dragEnabled-prop&quot;&gt;dragEnabled&lt;/a&gt; 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b5a0e6494560eaf4882048760b2cf78e36cad80" translate="yes" xml:space="preserve">
          <source>To enable multisampling, set the number of requested samples on the &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; that is passed to &lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;(). On systems that do not support it the request may get ignored.</source>
          <target state="translated">멀티 샘플링을 활성화하려면 &lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt; ()에 전달 된 &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; 에서 요청 된 샘플 수를 설정하십시오 . 이를 지원하지 않는 시스템에서는 요청이 무시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="142605f19b421aaaa0c5c63389e30bd395f0d471" translate="yes" xml:space="preserve">
          <source>To enable other devices to find your service, create a &lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; with the applicable attributes for your service and register it using &lt;a href=&quot;qbluetoothserviceinfo#registerService&quot;&gt;QBluetoothServiceInfo::registerService&lt;/a&gt;(). Call &lt;a href=&quot;qbluetoothserver#serverPort&quot;&gt;serverPort&lt;/a&gt;() to get the channel number that is being used.</source>
          <target state="translated">다른 장치에서 서비스를 찾을 수있게하려면 해당 서비스에 해당하는 속성 으로 &lt;a href=&quot;qbluetoothserviceinfo&quot;&gt;QBluetoothServiceInfo&lt;/a&gt; 를 만들고 &lt;a href=&quot;qbluetoothserviceinfo#registerService&quot;&gt;QBluetoothServiceInfo :: registerService&lt;/a&gt; ()를 사용하여 등록하십시오 . 사용중인 채널 번호를 얻으려면 &lt;a href=&quot;qbluetoothserver#serverPort&quot;&gt;serverPort&lt;/a&gt; ()를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="1dec42b7d3cbb49bb6c6601b169b4fbf45629b6d" translate="yes" xml:space="preserve">
          <source>To enable the &lt;a href=&quot;qhelpengine&quot;&gt;QHelpEngine&lt;/a&gt; to retrieve the proper documentation to a given link, every documentation set has to have a unique identifier. A unique identifier also makes it possible for the help collection to keep track of a documentation set without relying on its file name. The Qt help system uses a namespace as identifier which is defined by the mandatory namespace tags. In the example above, the namespace is &quot;mycompany.com.myapplication.1.0&quot;.</source>
          <target state="translated">&lt;a href=&quot;qhelpengine&quot;&gt;QHelpEngine&lt;/a&gt; 이 주어진 링크에 대한 적절한 문서를 검색 할 수있게하려면 모든 문서 세트에 고유 식별자가 있어야합니다. 고유 식별자를 사용하면 도움말 모음에서 파일 이름에 의존하지 않고 설명서 세트를 추적 할 수 있습니다. Qt 도움말 시스템은 네임 스페이스를 필수 네임 스페이스 태그로 정의 된 식별자로 사용합니다. 위의 예에서 네임 스페이스는 &quot;mycompany.com.myapplication.1.0&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="2ed4fa65eb80d4af0440920652a583c187b1053c" translate="yes" xml:space="preserve">
          <source>To enable the user to interact with an accessible object the object must implement &lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt; in addition to &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt;. Objects that support selections can define actions to change the selection.</source>
          <target state="translated">객체가 구현해야 접근 객체와 상호 작용하는 사용자를 활성화하려면 &lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface을&lt;/a&gt; 뿐만 아니라 &lt;a href=&quot;qaccessibleinterface&quot;&gt;QAccessibleInterface&lt;/a&gt; . 선택을 지원하는 객체는 선택을 변경하기위한 동작을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d7b309bd1d9bfd39692f28a10a2ed791b10269b9" translate="yes" xml:space="preserve">
          <source>To enable the user to interact with an accessible object the object must implement &lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt; in addition to QAccessibleInterface. Objects that support selections can define actions to change the selection.</source>
          <target state="translated">사용자가 액세스 가능한 객체와 상호 작용할 수 있도록하려면 객체는 &lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleInterface&lt;/a&gt; 외에도 QAccessibleActionInterface 를 구현해야합니다 . 선택을 지원하는 개체는 선택을 변경하는 작업을 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b9a2ff5d07ec13b638513a8fbcd2ebc9ff4a2ab" translate="yes" xml:space="preserve">
          <source>To enable the user to move the items around within the view, we must set the list widget's &lt;a href=&quot;qabstractitemview#dragDropMode-prop&quot;&gt;dragDropMode&lt;/a&gt;:</source>
          <target state="translated">사용자가보기 내에서 항목을 이동할 수있게하려면 목록 위젯의 &lt;a href=&quot;qabstractitemview#dragDropMode-prop&quot;&gt;dragDropMode를&lt;/a&gt; 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ab021340b3b0172776086379b98cd71af66d1eb3" translate="yes" xml:space="preserve">
          <source>To enable this feature in a top-level widget, set its &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt::WA_TranslucentBackground&lt;/a&gt; attribute with &lt;a href=&quot;qwidget#setAttribute&quot;&gt;setAttribute&lt;/a&gt;() and ensure that its background is painted with non-opaque colors in the regions you want to be partially transparent.</source>
          <target state="translated">최상위 레벨 위젯에서이 기능을 사용하려면 &lt;a href=&quot;qwidget#setAttribute&quot;&gt;setAttribute&lt;/a&gt; ()를 사용 하여 &lt;a href=&quot;qt#WidgetAttribute-enum&quot;&gt;Qt :: WA_TranslucentBackground&lt;/a&gt; 속성을 설정 하고 배경이 부분적으로 투명하게하려는 영역에서 불투명하지 않은 색상으로 페인트되도록하십시오.</target>
        </trans-unit>
        <trans-unit id="9125277fa312542eb22ae73faebcbfe60bb02a28" translate="yes" xml:space="preserve">
          <source>To enable this instead of directly using OpenGL, the following environment variables can be used:</source>
          <target state="translated">OpenGL을 직접 사용하는 대신이를 활성화하려면 다음 환경 변수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3bd0ffcf560e599409a5dc4562e76e194ff7437b" translate="yes" xml:space="preserve">
          <source>To enable this model, use the command-line argument &lt;code&gt;--process-per-site&lt;/code&gt;. See &lt;a href=&quot;qtwebengine-debugging#using-command-line-arguments&quot;&gt;Using Command-Line Arguments&lt;/a&gt;.</source>
          <target state="translated">이 모델을 사용하려면 명령 행 인수 &lt;code&gt;--process-per-site&lt;/code&gt; 를 사용하십시오 . &lt;a href=&quot;qtwebengine-debugging#using-command-line-arguments&quot;&gt;명령 줄 인수 사용을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="93808c402beed6e0eeca237097cf151794335cb6" translate="yes" xml:space="preserve">
          <source>To enable use of &lt;a href=&quot;qgraphicsitem#qgraphicsitem_cast&quot;&gt;qgraphicsitem_cast&lt;/a&gt;() with a custom item, reimplement this function and declare a Type enum value equal to your custom item's type. Custom items must return a value larger than or equal to &lt;a href=&quot;qgraphicsitem#anonymous-enum&quot;&gt;UserType&lt;/a&gt; (65536).</source>
          <target state="translated">사용자 정의 항목과 함께 &lt;a href=&quot;qgraphicsitem#qgraphicsitem_cast&quot;&gt;qgraphicsitem_cast&lt;/a&gt; ()를 사용하려면 이 함수를 다시 구현하고 사용자 정의 항목 유형과 동일한 Type 열거 형 값을 선언하십시오. 사용자 정의 항목은 &lt;a href=&quot;qgraphicsitem#anonymous-enum&quot;&gt;UserType&lt;/a&gt; 이상의 값을 반환해야합니다 (65536).</target>
        </trans-unit>
        <trans-unit id="f4536380ce40a5e2a04b3479d6ae865efb72d096" translate="yes" xml:space="preserve">
          <source>To enable user interaction with the pie chart, some basic signals are emitted when users click pie slices or hover the mouse over them.</source>
          <target state="translated">원형 차트와 사용자의 상호 작용을 가능하게하기 위해 사용자가 원형 슬라이스를 클릭하거나 마우스를 마우스로 가리키면 일부 기본 신호가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="ab2ceb31dac20e8ca1b52170d124221fb2753b95" translate="yes" xml:space="preserve">
          <source>To ensure that drawing operations are as fast as possible, &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; and its subclasses have public data members. See the &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; class documentation for details on how to use it.</source>
          <target state="translated">&lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; 및 해당 서브 클래스에는 그리기 작업이 최대한 빨리 수행되도록하기 위해 공개 데이터 멤버가 있습니다. 사용 방법에 대한 자세한 내용은 &lt;a href=&quot;qstyleoption&quot;&gt;QStyleOption&lt;/a&gt; 클래스 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="62ff9df43f53693353d70e441423a5dcc7762b1e" translate="yes" xml:space="preserve">
          <source>To ensure that operations with &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; are efficient, e.g., copying names and comparing them, each instance of &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; is associated with a &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt;, which must be specified at &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; construction time. The three components of the &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt;, i.e., the namespace URI, the local name, and the prefix, are stored in the name pool mapped to identifiers so they can be shared. For this reason, the only way to create a valid instance of &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; is to use the class constructor, where the &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt;, local name, namespace URI, and prefix must all be specified.</source>
          <target state="translated">와 작업하도록하려면 &lt;a href=&quot;qxmlname&quot;&gt;QXmlName이&lt;/a&gt; 이름을 복사하고이를 비교, 예를 들어, 효율적이며,의 각 인스턴스 &lt;a href=&quot;qxmlname&quot;&gt;QXmlName는&lt;/a&gt; 와 관련된 &lt;a href=&quot;qxmlnamepool&quot;&gt;이름 풀&lt;/a&gt; 에 지정해야 &lt;a href=&quot;qxmlname&quot;&gt;QXmlName의&lt;/a&gt; 건설 시간. &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; 의 세 가지 구성 요소 , 즉 네임 스페이스 URI, 로컬 이름 및 접 두부가 식별자에 맵핑 된 이름 풀에 저장되어 공유 할 수 있습니다. 이러한 이유로, &lt;a href=&quot;qxmlname&quot;&gt;QXmlName&lt;/a&gt; 의 유효한 인스턴스를 작성하는 유일한 방법 은 &lt;a href=&quot;qxmlnamepool&quot;&gt;이름&lt;/a&gt; 생성자 , 로컬 이름, 네임 스페이스 URI 및 접 두부를 모두 지정해야하는 클래스 생성자를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f94d91a6637c2d7910589b0e301a66529e1daf40" translate="yes" xml:space="preserve">
          <source>To ensure that operations with QXmlName are efficient, e.g., copying names and comparing them, each instance of QXmlName is associated with a &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt;, which must be specified at QXmlName construction time. The three components of the QXmlName, i.e., the namespace URI, the local name, and the prefix, are stored in the name pool mapped to identifiers so they can be shared. For this reason, the only way to create a valid instance of QXmlName is to use the class constructor, where the &lt;a href=&quot;qxmlnamepool&quot;&gt;name pool&lt;/a&gt;, local name, namespace URI, and prefix must all be specified.</source>
          <target state="translated">예를 들어, 이름 복사 및 비교와 같이 QXmlName을 사용한 작업이 효율적인지 확인하기 위해 QXmlName의 각 인스턴스는 QXmlName 생성시 지정되어야 하는 &lt;a href=&quot;qxmlnamepool&quot;&gt;이름 풀&lt;/a&gt; 과 연결됩니다 . QXmlName의 세 가지 구성 요소, 즉 네임 스페이스 URI, 로컬 이름 및 접두사는 식별자에 매핑 된 이름 풀에 저장되므로 공유 할 수 있습니다. 따라서 QXmlName의 유효한 인스턴스를 만드는 유일한 방법은 클래스 생성자를 사용하는 것입니다. 여기서 &lt;a href=&quot;qxmlnamepool&quot;&gt;이름 pool&lt;/a&gt; , 로컬 이름, 네임 스페이스 URI 및 접두사는 모두 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="6e1e730033532e279b8bb13f9ebfce5ed261932d" translate="yes" xml:space="preserve">
          <source>To ensure that the documentation remains synchronized with the source file, a substring of the line must be specified as an argument to the command. Note that the command considers the rest of the line as part of its argument, make sure to follow the substring with a line break.</source>
          <target state="translated">문서가 소스 파일과 동기화 된 상태를 유지하려면 행의 하위 문자열을 명령의 인수로 지정해야합니다. 명령은 나머지 줄을 인수의 일부로 간주하므로 줄 바꿈으로 하위 문자열을 따라야합니다.</target>
        </trans-unit>
        <trans-unit id="c960442894010c156bf4de0977ded475c3d7f3df" translate="yes" xml:space="preserve">
          <source>To ensure that the message box does not pop up until the geometry actually reaches its final value, we can use the state's &lt;a href=&quot;qstate#propertiesAssigned&quot;&gt;propertiesAssigned()&lt;/a&gt; signal. The &lt;a href=&quot;qstate#propertiesAssigned&quot;&gt;propertiesAssigned()&lt;/a&gt; signal will be emitted when the property is assigned its final value, whether this is done immediately or after the animation has finished playing.</source>
          <target state="translated">도형이 실제로 최종 값에 도달 할 때까지 메시지 상자가 나타나지 않도록하기 위해 상태의 &lt;a href=&quot;qstate#propertiesAssigned&quot;&gt;propertiesAssigned ()&lt;/a&gt; 신호를 사용할 수 있습니다 . &lt;a href=&quot;qstate#propertiesAssigned&quot;&gt;propertiesAssigned ()&lt;/a&gt; 속성이 최종 값을 할당 할 때이 신호가 바로 수행 또는 완료 후 애니메이션 재생되고 있는지의 여부를 방출한다.</target>
        </trans-unit>
        <trans-unit id="118964b2fdc07e7f94eb8e772a998b79aad17afb" translate="yes" xml:space="preserve">
          <source>To ensure that the popup is positioned within the bounds of the enclosing window, the &lt;a href=&quot;qml-qtquick-controls2-menu#margins&quot;&gt;margins&lt;/a&gt; property can be set to a non-negative value.</source>
          <target state="translated">팝업이 둘러싸는 창의 경계 내에 위치하도록하려면 &lt;a href=&quot;qml-qtquick-controls2-menu#margins&quot;&gt;margins&lt;/a&gt; 속성을 음수가 아닌 값으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa264dc11e8254e6035f6eb159af438b211901dc" translate="yes" xml:space="preserve">
          <source>To ensure that the popup is positioned within the bounds of the enclosing window, the &lt;a href=&quot;qml-qtquick-controls2-popup#margins-prop&quot;&gt;margins&lt;/a&gt; property can be set to a non-negative value.</source>
          <target state="translated">팝업이 둘러싸는 창의 경계 내에 배치되도록하기 위해 &lt;a href=&quot;qml-qtquick-controls2-popup#margins-prop&quot;&gt;margins&lt;/a&gt; 속성은 음이 아닌 값으로 설정 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9089db3084e6a9ad462d32cf5c7c0d599a312f2d" translate="yes" xml:space="preserve">
          <source>To ensure that the representation of the data is kept separate from the way it is accessed, the concept of a</source>
          <target state="translated">데이터 표현이 데이터 접근 방식과 분리되어 유지되도록하기 위해</target>
        </trans-unit>
        <trans-unit id="7d445470a3e92e5406abb78858f44adbe012d74e" translate="yes" xml:space="preserve">
          <source>To ensure that they are laid out exactly like this in your program, you need to place these widgets into a layout. We will do this in groups of three. Select the &quot;RED&quot; label. Then, hold down &lt;b&gt;Ctrl&lt;/b&gt; while you select its corresponding spin box and slider. In the &lt;b&gt;Form&lt;/b&gt; menu, select &lt;b&gt;Lay Out in a Grid&lt;/b&gt;.</source>
          <target state="translated">프로그램에서 이와 같이 정확하게 배치되도록하려면 이러한 위젯을 레이아웃에 배치해야합니다. 우리는 이것을 세 그룹으로 할 것입니다. &quot;RED&quot;레이블을 선택하십시오. 그런 다음 &lt;b&gt;Ctrl 키&lt;/b&gt; 를 &lt;b&gt;누른&lt;/b&gt; 상태에서 해당 스핀 상자와 슬라이더를 선택하십시오. 에서 &lt;b&gt;양식&lt;/b&gt; 메뉴를 선택 &lt;b&gt;그리드에 누워 아웃&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="98260433cee8dca3516df592d80a0c6b941bb6b0" translate="yes" xml:space="preserve">
          <source>To ensure that we can use the user interface, we need to include the header file that &lt;code&gt;uic&lt;/code&gt; generates before referring to &lt;code&gt;Ui::CalculatorForm&lt;/code&gt;:</source>
          <target state="translated">사용자 인터페이스를 사용하려면 &lt;code&gt;Ui::CalculatorForm&lt;/code&gt; 참조하기 전에 &lt;code&gt;uic&lt;/code&gt; 이 생성 하는 헤더 파일을 포함시켜야합니다 .</target>
        </trans-unit>
        <trans-unit id="fcd3f4c31c7641a86a5b31694e3f5f50d29a0881" translate="yes" xml:space="preserve">
          <source>To ensure that writers aren't blocked forever by readers, readers attempting to obtain a lock will not succeed if there is a blocked writer waiting for access, even if the lock is currently only accessed by other readers. Also, if the lock is accessed by a writer and another writer comes in, that writer will have priority over any readers that might also be waiting.</source>
          <target state="translated">독자가 작성자를 영구적으로 차단하지 못하도록하기 위해 현재 다른 독자 만 잠금에 액세스 한 경우에도 액세스를 기다리는 차단 된 작성자가있는 경우 잠금을 얻으려고 시도하는 독자는 성공하지 못합니다. 또한 작성자가 잠금에 액세스하고 다른 작성자가 들어 오면 해당 작성자는 대기중인 모든 독자보다 우선 순위를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="46e3c5bc68c45c5afd2c219309eee8a57eff434b" translate="yes" xml:space="preserve">
          <source>To enter buddy editing mode, open the &lt;b&gt;Edit&lt;/b&gt; menu and select &lt;b&gt;Edit Buddies&lt;/b&gt;. This mode presents the widgets on the form in a similar way to &lt;a href=&quot;designer-connection-mode&quot;&gt;signals and slots editing mode&lt;/a&gt; but in this mode, connections must start at label widgets. Ideally, you should connect each label widget that provides a shortcut with a suitable input widget, such as a &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;.</source>
          <target state="translated">친구 편집 모드를 입력하려면 열 &lt;b&gt;편집&lt;/b&gt; 메뉴를 선택 &lt;b&gt;편집 대화 상대를&lt;/b&gt; . 이 모드는 &lt;a href=&quot;designer-connection-mode&quot;&gt;신호 및 슬롯 편집 모드와&lt;/a&gt; 유사한 방식으로 양식에 위젯을 표시 하지만이 모드에서는 레이블 위젯에서 연결을 시작해야합니다. 이상적으로는 바로 가기를 제공하는 각 레이블 위젯을 &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; 와 같은 적절한 입력 위젯과 연결해야합니다 .</target>
        </trans-unit>
        <trans-unit id="098d972e3d58b1e6fd218152d80fa5e9368bc655" translate="yes" xml:space="preserve">
          <source>To enter buddy editing mode, open the &lt;b&gt;Edit&lt;/b&gt; menu and select &lt;b&gt;Edit Buddies&lt;/b&gt;. This mode presents the widgets on the form in a similar way to &lt;a href=&quot;designer-connection-mode#&quot;&gt;signals and slots editing mode&lt;/a&gt; but in this mode, connections must start at label widgets. Ideally, you should connect each label widget that provides a shortcut with a suitable input widget, such as a &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt;.</source>
          <target state="translated">친구 편집 모드로 들어가려면 &lt;b&gt;편집&lt;/b&gt; 메뉴를 열고 친구 편집을 선택 &lt;b&gt;하십시오&lt;/b&gt; . 이 모드는 &lt;a href=&quot;designer-connection-mode#&quot;&gt;신호 및 슬롯 편집 모드와&lt;/a&gt; 유사한 방식으로 위젯을 양식에 표시 하지만이 모드에서는 레이블 위젯에서 연결을 시작해야합니다. 이상적으로는 &lt;a href=&quot;qlineedit&quot;&gt;QLineEdit&lt;/a&gt; 와 같은 적합한 입력 위젯이있는 바로 가기를 제공하는 각 레이블 위젯을 연결해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b518ef4fdcf8b4398d07eeed0ef6533f98cc04e8" translate="yes" xml:space="preserve">
          <source>To enter tab order editing mode, open the &lt;b&gt;Edit&lt;/b&gt; menu and select &lt;b&gt;Edit Tab Order&lt;/b&gt;. In this mode, each input widget in the form is shown with a number indicating its position in the tab order. So, if the user gives the first input widget the input focus and then presses the tab key, the focus will move to the second input widget, and so on.</source>
          <target state="translated">탭 순서 편집 모드로 들어가려면 &lt;b&gt;편집&lt;/b&gt; 메뉴를 열고 탭 순서 편집을 선택 &lt;b&gt;하십시오&lt;/b&gt; . 이 모드에서는 양식의 각 입력 위젯이 탭 순서에서 위치를 나타내는 숫자와 함께 표시됩니다. 따라서 사용자가 첫 번째 입력 위젯에 입력 초점을 제공 한 다음 탭 키를 누르면 초점이 두 번째 입력 위젯으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="9d8ae19a5c2e41ed3aedce48f94d039286b5ea0b" translate="yes" xml:space="preserve">
          <source>To evaluate script code, you create a &lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt; and call its evaluate() function, passing the script code (text) to evaluate as argument.</source>
          <target state="translated">스크립트 코드를 평가하려면 &lt;a href=&quot;qjsengine&quot;&gt;QJSEngine&lt;/a&gt; 을 작성 하고 평가 ()를 인수로 평가하기 위해 스크립트 코드 (텍스트)를 전달하여 평가 () 함수를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="ea690c515cc4e700e78abd5d299185d12e596e8f" translate="yes" xml:space="preserve">
          <source>To examine the list of supported sample counts, call &lt;a href=&quot;qvulkanwindow#supportedSampleCounts&quot;&gt;supportedSampleCounts&lt;/a&gt;().</source>
          <target state="translated">지원되는 샘플 수 목록을 확인하려면 &lt;a href=&quot;qvulkanwindow#supportedSampleCounts&quot;&gt;supportedSampleCounts&lt;/a&gt; ()를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="157fbcb04fe3114cddc9167166ef114dafe6dfa0" translate="yes" xml:space="preserve">
          <source>To execute C++ code before any of the QML tests are run, the &lt;a href=&quot;qquicktest#QUICK_TEST_MAIN_WITH_SETUP&quot;&gt;QUICK_TEST_MAIN_WITH_SETUP&lt;/a&gt; macro can be used. This can be useful for setting context properties on the QML engine, amongst other things.</source>
          <target state="translated">QML 테스트를 실행하기 전에 C ++ 코드를 실행하려면 &lt;a href=&quot;qquicktest#QUICK_TEST_MAIN_WITH_SETUP&quot;&gt;QUICK_TEST_MAIN_WITH_SETUP&lt;/a&gt; 매크로를 사용할 수 있습니다. 이는 무엇보다도 QML 엔진에서 컨텍스트 속성을 설정하는 데 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08bc24a870aa5d264037f07081e807cab7cc2c34" translate="yes" xml:space="preserve">
          <source>To execute an SQL statement, simply create a &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; object and call &lt;a href=&quot;qsqlquery#exec-1&quot;&gt;QSqlQuery::exec&lt;/a&gt;() like this:</source>
          <target state="translated">SQL 문을 실행하려면 &lt;a href=&quot;qsqlquery&quot;&gt;QSqlQuery&lt;/a&gt; 오브젝트 를 작성하고 다음 과 같이 &lt;a href=&quot;qsqlquery#exec-1&quot;&gt;QSqlQuery :: exec&lt;/a&gt; ()를 호출 하십시오.</target>
        </trans-unit>
        <trans-unit id="ef040a336e1aa63da77d02ac33fc20deef053cfb" translate="yes" xml:space="preserve">
          <source>To execute your own code each frame connect to the &lt;a href=&quot;qml-qt3d-logic-frameaction#triggered-signal&quot;&gt;FrameAction::triggered&lt;/a&gt; signal.</source>
          <target state="translated">각 프레임마다 고유 코드를 실행하려면 &lt;a href=&quot;qml-qt3d-logic-frameaction#triggered-signal&quot;&gt;FrameAction :: triggered&lt;/a&gt; 신호에 연결하십시오 .</target>
        </trans-unit>
        <trans-unit id="a4ba6719793a8c97c86514d91abd0adba29e08fd" translate="yes" xml:space="preserve">
          <source>To execute your own code each frame connect to the &lt;a href=&quot;qt3dlogic-qframeaction#triggered&quot;&gt;QFrameAction::triggered&lt;/a&gt; signal.</source>
          <target state="translated">각 프레임마다 고유 코드를 실행하려면 &lt;a href=&quot;qt3dlogic-qframeaction#triggered&quot;&gt;QFrameAction :: triggered&lt;/a&gt; 신호에 연결하십시오 .</target>
        </trans-unit>
        <trans-unit id="ebe2c85fbb47ed7305115c4ab50e32855eec2aa8" translate="yes" xml:space="preserve">
          <source>To explain the meaning of each value it is helpful to refer to the following diagram.</source>
          <target state="translated">각 값의 의미를 설명하려면 다음 다이어그램을 참조하면 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="75b979e23d2b01523982e9e812997edbdbde04f6" translate="yes" xml:space="preserve">
          <source>To explicitly disable sandboxing, the &lt;code&gt;QTWEBENGINE_DISABLE_SANDBOX&lt;/code&gt; environment variable can be set to 1 or alternatively the &lt;code&gt;--no-sandbox&lt;/code&gt; command line argument can be passed to the user application executable.</source>
          <target state="translated">샌드 박싱을 명시 적으로 비활성화하려면 &lt;code&gt;QTWEBENGINE_DISABLE_SANDBOX&lt;/code&gt; 환경 변수를 1로 설정하거나 &lt;code&gt;--no-sandbox&lt;/code&gt; 명령 줄 인수를 사용자 응용 프로그램 실행 파일로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a46b3b5fbafe18259301295f0fa2713f6f3337b9" translate="yes" xml:space="preserve">
          <source>To explicitly disable sandboxing, use one of the following options:</source>
          <target state="translated">샌드 박싱을 명시 적으로 비활성화하려면 다음 옵션 중 하나를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d04740be1fa39cd1bfadbe6cea459a94ef25ab08" translate="yes" xml:space="preserve">
          <source>To explicitly enable the use of ICU in Qt Core, pass &lt;code&gt;-icu&lt;/code&gt; to &lt;code&gt;configure&lt;/code&gt;:</source>
          <target state="translated">Qt Core에서 ICU 사용을 명시 적으로 활성화하려면 &lt;code&gt;-icu&lt;/code&gt; 를 전달 하여 다음 을 &lt;code&gt;configure&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59c52f83f0896e30e75603ddcae67d64181407f9" translate="yes" xml:space="preserve">
          <source>To explicitly force either dialogs based on Qt Quick Controls 1 or Qt Quick Controls 2, set the &lt;code&gt;QTWEBENGINE_DIALOG_SET&lt;/code&gt; environment variable to either &lt;code&gt;QtQuickControls1&lt;/code&gt; or &lt;code&gt;QtQuickControls2&lt;/code&gt;.</source>
          <target state="translated">Qt Quick Controls 1 또는 Qt Quick Controls 2를 기반으로 대화 상자를 명시 적으로 강제 실행하려면 &lt;code&gt;QTWEBENGINE_DIALOG_SET&lt;/code&gt; 환경 변수를 &lt;code&gt;QtQuickControls1&lt;/code&gt; 또는 &lt;code&gt;QtQuickControls2&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="daa250e2f4d5421f5e518bf432ad50f79f216fc3" translate="yes" xml:space="preserve">
          <source>To extend the list of</source>
          <target state="translated">목록을 확장하려면</target>
        </trans-unit>
        <trans-unit id="a2341487de42a5a2e3ed300b000d6a14a5df5dea" translate="yes" xml:space="preserve">
          <source>To extract many bytes at a time, use &lt;a href=&quot;qbytearray#left&quot;&gt;left&lt;/a&gt;(), &lt;a href=&quot;qbytearray#right&quot;&gt;right&lt;/a&gt;(), or &lt;a href=&quot;qbytearray#mid&quot;&gt;mid&lt;/a&gt;().</source>
          <target state="translated">한 번에 많은 바이트를 추출하려면 &lt;a href=&quot;qbytearray#left&quot;&gt;left&lt;/a&gt; (), &lt;a href=&quot;qbytearray#right&quot;&gt;right&lt;/a&gt; () 또는 &lt;a href=&quot;qbytearray#mid&quot;&gt;mid&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="316ba941aafac5984a08e986533c49f01e07a992" translate="yes" xml:space="preserve">
          <source>To facilitate remembering of the naming formats and their purposes, the following table can be used:</source>
          <target state="translated">명명 형식과 그 목적을 쉽게 기억할 수 있도록 다음 표를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5ff245492816dc263495ad273d578bf10ba67490" translate="yes" xml:space="preserve">
          <source>To fetch an icon from the current icon theme:</source>
          <target state="translated">현재 아이콘 테마에서 아이콘을 가져 오려면 :</target>
        </trans-unit>
        <trans-unit id="bca762ec2e69c67e257674b82583f78483910859" translate="yes" xml:space="preserve">
          <source>To filter another item's events, install this item as an event filter for the other item. Example:</source>
          <target state="translated">다른 항목의 이벤트를 필터링하려면이 항목을 다른 항목의 이벤트 필터로 설치하십시오. 예:</target>
        </trans-unit>
        <trans-unit id="e025683429ecfe8fe5bf63f7c7cda4d97aa7162c" translate="yes" xml:space="preserve">
          <source>To find a suitable route we will need to use a &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; to define the selection criteria and adding any required waypoints. The &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt; should return a list of &lt;a href=&quot;qml-qtlocation-routesegment&quot;&gt;RouteSegment&lt;/a&gt;s that defines the route to the destination complete with navigation advice at the joins between segments, called &lt;a href=&quot;qml-qtlocation-routemaneuver&quot;&gt;RouteManeuver&lt;/a&gt;s</source>
          <target state="translated">적절한 경로를 찾으려면 &lt;a href=&quot;qml-qtlocation-routequery&quot;&gt;RouteQuery&lt;/a&gt; 를 사용하여 선택 기준을 정의하고 필요한 웨이 포인트를 추가해야합니다. &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel는&lt;/a&gt; 목록을 반환해야 &lt;a href=&quot;qml-qtlocation-routesegment&quot;&gt;RouteSegment&lt;/a&gt; (가) 세그먼트 간의 조인에서 호출, 네비게이션 조언을 대상 전체에의하도록 정의 경로를 &lt;a href=&quot;qml-qtlocation-routemaneuver&quot;&gt;RouteManeuver&lt;/a&gt; 의</target>
        </trans-unit>
        <trans-unit id="d2d2cac33bdbaad4e88784a5c47022b2e91ba8f9" translate="yes" xml:space="preserve">
          <source>To find all the &lt;code&gt;name&lt;/code&gt; attributes in the cookbook and select them all regardless of their namespace, replace the namespace prefix with the wildcard and write &lt;code&gt;name&lt;/code&gt; (the attribute name) as the local name:</source>
          <target state="translated">요리 책에서 모든 &lt;code&gt;name&lt;/code&gt; 속성 을 찾아 네임 스페이스와 상관없이 모두 선택하려면 네임 스페이스 접두사를 와일드 카드로 바꾸고 로컬 이름으로 &lt;code&gt;name&lt;/code&gt; (속성 이름)을 쓰십시오 .</target>
        </trans-unit>
        <trans-unit id="76b6ab61f80351fc5e60ce537164f149142f35c8" translate="yes" xml:space="preserve">
          <source>To find and select all the attributes of the</source>
          <target state="translated">모든 속성을 찾아서 선택하려면</target>
        </trans-unit>
        <trans-unit id="10df266c7a6f1ed314c658639e3c3b8a4a03e704" translate="yes" xml:space="preserve">
          <source>To find out font metrics use a &lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt; object, e.g.</source>
          <target state="translated">글꼴 메트릭을 찾으려면 &lt;a href=&quot;qfontmetrics&quot;&gt;QFontMetrics&lt;/a&gt; 객체를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3e76aae9bbb004f7451a228e032f6a787e47d003" translate="yes" xml:space="preserve">
          <source>To find out if a node has children use &lt;a href=&quot;qdomnode#hasChildNodes&quot;&gt;hasChildNodes&lt;/a&gt;() and to get a list of all of a node's children use &lt;a href=&quot;qdomnode#childNodes&quot;&gt;childNodes&lt;/a&gt;().</source>
          <target state="translated">노드에 자식이 있는지 확인하려면 &lt;a href=&quot;qdomnode#hasChildNodes&quot;&gt;hasChildNodes&lt;/a&gt; ()를 사용하고 모든 노드의 자식 목록을 얻으려면 &lt;a href=&quot;qdomnode#childNodes&quot;&gt;childNodes&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="96af90d9a0d68bc4ca1331c22b670b48f19fa8d4" translate="yes" xml:space="preserve">
          <source>To find out more about using the QML language, see the &lt;a href=&quot;qtqml-index&quot;&gt;Qt QML&lt;/a&gt; module documentation.</source>
          <target state="translated">QML 언어 사용에 대한 자세한 내용은 &lt;a href=&quot;qtqml-index&quot;&gt;Qt QML&lt;/a&gt; 모듈 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="59c106e4718093be2df3b313300ae3d290de3cf7" translate="yes" xml:space="preserve">
          <source>To find out which backend is in use, you can enable basic scene graph information logging via the &lt;code&gt;QSG_INFO&lt;/code&gt; environment variable or the &lt;code&gt;qt.scenegraph.general&lt;/code&gt; logging category. This results in some information being printed onto the debug output, during application startup.</source>
          <target state="translated">사용중인 백엔드를 찾으려면 &lt;code&gt;QSG_INFO&lt;/code&gt; 환경 변수 또는 &lt;code&gt;qt.scenegraph.general&lt;/code&gt; logging 범주 를 통해 기본 장면 그래프 정보 로깅을 활성화 할 수 있습니다 . 이로 인해 응용 프로그램 시작 중 일부 정보가 디버그 출력에 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="c518bbca0a12b2496d24d38d6ff55dba960f966c" translate="yes" xml:space="preserve">
          <source>To find selected files, &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; looks in the same directory as the base file. If there are any directories of the form +&amp;lt;selector&amp;gt; with an active selector, &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; will prefer a file with the same file name from that directory over the base file. These directories can be nested to check against multiple selectors, for example:</source>
          <target state="translated">선택된 파일을 찾기 위해 &lt;a href=&quot;qfileselector&quot;&gt;QFileSelector&lt;/a&gt; 는 기본 파일과 동일한 디렉토리를 찾습니다. 활성 선택 &lt;a href=&quot;qfileselector&quot;&gt;기가&lt;/a&gt; 있는 + &amp;lt;selector&amp;gt; 형식의 디렉토리가있는 경우 QFileSelector 는 기본 파일보다 디렉토리와 동일한 파일 이름을 가진 파일을 선호합니다. 이러한 디렉토리는 다음과 같이 여러 선택기에 대해 검사하기 위해 중첩 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9dbc2de9c43cf1837fa3a7047794d33756e9c55" translate="yes" xml:space="preserve">
          <source>To find selected files, QFileSelector looks in the same directory as the base file. If there are any directories of the form +&amp;lt;selector&amp;gt; with an active selector, QFileSelector will prefer a file with the same file name from that directory over the base file. These directories can be nested to check against multiple selectors, for example:</source>
          <target state="translated">선택한 파일을 찾기 위해 QFileSelector는 기본 파일과 동일한 디렉토리를 찾습니다. 활성 선택기가있는 + &amp;lt;selector&amp;gt; 형식의 디렉토리가있는 경우, QFileSelector는 기본 파일보다 해당 디렉토리에서 동일한 파일 이름을 가진 파일을 선호합니다. 이러한 디렉토리는 중첩되어 여러 선택기에 대해 확인할 수 있습니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fcbab6e362ec3601970ba5d071d3886d2467c69e" translate="yes" xml:space="preserve">
          <source>To find the bounding rectangle of the element in logical coordinates, you can apply the matrix on the rectangle returned from &lt;a href=&quot;qsvgrenderer#boundsOnElement&quot;&gt;boundsOnElement&lt;/a&gt;().</source>
          <target state="translated">논리 좌표에서 요소의 경계 사각형을 찾으려면 &lt;a href=&quot;qsvgrenderer#boundsOnElement&quot;&gt;boundsOnElement&lt;/a&gt; () 에서 반환 된 사각형에 행렬을 적용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="075c5cac4a9b3ecb0f6a68e7f0243f48bfad35d6" translate="yes" xml:space="preserve">
          <source>To fix this, the &lt;code&gt;displaced&lt;/code&gt; transition should additionally ensure the item properties are set to the end values specified in the &lt;code&gt;add&lt;/code&gt; transition, effectively resetting these values whenever an item is displaced. In this case, it means setting the item opacity and scale to 1.0:</source>
          <target state="translated">이 문제를 해결하려면 &lt;code&gt;displaced&lt;/code&gt; 전환에서 항목 속성이 &lt;code&gt;add&lt;/code&gt; 전환에 지정된 최종 값으로 설정되어 항목이 변위 될 때마다 이러한 값을 효과적으로 재설정해야합니다. 이 경우 항목 불투명도 및 배율을 1.0으로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="731d83545b666b6b7267ecea79d6915e8e5024bc" translate="yes" xml:space="preserve">
          <source>To force &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; to use a specific file format, it is necessary to build and ship your own database plugin with your own &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; library as illustrated above. Some versions of &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; can be forced to write a specific file format by setting the &lt;code&gt;SQLITE_DEFAULT_FILE_FORMAT&lt;/code&gt; define when building &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; 가 특정 파일 형식을 사용 하도록하려면 위에서 설명한대로 고유 한 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; 라이브러리를 사용하여 고유 한 데이터베이스 플러그인을 빌드하고 제공해야합니다 . 일부 버전의 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite는이&lt;/a&gt; 설정에 따라 특정 파일 형식을 작성하도록 강요 할 수 &lt;code&gt;SQLITE_DEFAULT_FILE_FORMAT&lt;/code&gt; 을 구축 할 때 정의 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite는&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1a0ad5489df9b5d0a9f7625a777cb0870d597d63" translate="yes" xml:space="preserve">
          <source>To force &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; to use a specific file format, it is necessary to build and ship your own database plugin with your own &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; library as illustrated above. Some versions of &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; can be forced to write a specific file format by setting the &lt;code&gt;SQLITE_DEFAULT_FILE_FORMAT&lt;/code&gt; define when building &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; 가 특정 파일 형식을 사용 하도록하려면 위에 설명 된대로 고유 한 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt; 라이브러리 와 함께 고유 한 데이터베이스 플러그인을 빌드하고 제공해야합니다 . 일부 버전의 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite는이&lt;/a&gt; 설정에 따라 특정 파일 형식을 작성하도록 강요 할 수 &lt;code&gt;SQLITE_DEFAULT_FILE_FORMAT&lt;/code&gt; 을 구축 할 때 정의 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite는&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="58794de9b3fd4cf94252281b03765a671d833bc1" translate="yes" xml:space="preserve">
          <source>To force a given backend, set the &lt;code&gt;QT_GAMEPAD&lt;/code&gt; environment variable to the name of the desired backend.</source>
          <target state="translated">지정된 백엔드를 강제 실행하려면 &lt;code&gt;QT_GAMEPAD&lt;/code&gt; 환경 변수를 원하는 백엔드 이름으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="73281bc0237dc9e78e45e2cf995105af4c47f76b" translate="yes" xml:space="preserve">
          <source>To force asynchronous image loading, even for image sources that do not have the &lt;code&gt;asynchronous&lt;/code&gt; property set to &lt;code&gt;true&lt;/code&gt;, you may pass the &lt;code&gt;QQmlImageProviderBase::ForceAsynchronousImageLoading&lt;/code&gt; flag to the image provider constructor. This ensures that all image requests for the provider are handled in a separate thread.</source>
          <target state="translated">&lt;code&gt;asynchronous&lt;/code&gt; 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정 하지 않은 이미지 소스의 경우에도 비동기 이미지를 강제로로드하기 위해 &lt;code&gt;QQmlImageProviderBase::ForceAsynchronousImageLoading&lt;/code&gt; 플래그를 이미지 공급자 생성자에 전달할 수 있습니다 . 이렇게하면 공급자에 대한 모든 이미지 요청이 별도의 스레드에서 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="762d8ab0c4364d5d8237bdafbde07d17a4ecca48" translate="yes" xml:space="preserve">
          <source>To force fetching of the entire result set, you can use the following:</source>
          <target state="translated">전체 결과 집합을 강제로 가져 오려면 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6eab8e155640da183f2697ccb87034cb2e5b51f" translate="yes" xml:space="preserve">
          <source>To format the text as a hypertext link use &lt;a href=&quot;qtextcharformat#setAnchor&quot;&gt;setAnchor&lt;/a&gt;().</source>
          <target state="translated">텍스트를 하이퍼 텍스트 링크로 형식화하려면 &lt;a href=&quot;qtextcharformat#setAnchor&quot;&gt;setAnchor&lt;/a&gt; ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d9cd32ebfaa8e9fd461b614b75e934522265644" translate="yes" xml:space="preserve">
          <source>To fully benefit from Unicode, we recommend using &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; for storing all user-visible strings, and performing all text file I/O using &lt;a href=&quot;qtextstream&quot;&gt;QTextStream&lt;/a&gt;.</source>
          <target state="translated">유니 코드를 최대한 활용하려면 사용자가 볼 수있는 모든 문자열을 저장하기 위해 &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; 을 사용하고 &lt;a href=&quot;qtextstream&quot;&gt;QTextStream을&lt;/a&gt; 사용하여 모든 텍스트 파일 I / O를 수행하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="de8cbc1be9f7b1db7f2f61e902937c5c2c19afc8" translate="yes" xml:space="preserve">
          <source>To further reduce the burden on the system there are optional attributes which can set. Each monitored area can have an expiry date which automatically removes the to-be-monitored area from the monitoring source once the expiry date has been reached. Another option is to adjust the persistence of a monitored area. A &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo&lt;/a&gt; that &lt;a href=&quot;qgeoareamonitorinfo#isPersistent&quot;&gt;isPersistent&lt;/a&gt;() will remain active beyond the current applications lifetime. If an area is entered while the monitoring application is not running the application will be started. Note that this feature is not available on all platforms. Its availability can be checked via &lt;a href=&quot;qgeoareamonitorsource#supportedAreaMonitorFeatures&quot;&gt;QGeoAreaMonitorSource::supportedAreaMonitorFeatures&lt;/a&gt;().</source>
          <target state="translated">시스템의 부담을 더 줄이기 위해 설정할 수있는 선택적 속성이 있습니다. 모니터링되는 각 영역에는 만료 날짜가있을 수 있으며, 만료 날짜에 도달하면 모니터링 대상 영역을 모니터링 소스에서 자동으로 제거합니다. 다른 옵션은 모니터링되는 영역의 지속성을 조정하는 것입니다. &lt;a href=&quot;qgeoareamonitorinfo&quot;&gt;QGeoAreaMonitorInfo는&lt;/a&gt; 것을 &lt;a href=&quot;qgeoareamonitorinfo#isPersistent&quot;&gt;isPersistent은&lt;/a&gt; () 현재의 응용 프로그램 수명이 끝나도 그대로 적용됩니다. 모니터링 응용 프로그램이 실행되지 않는 동안 영역을 입력하면 응용 프로그램이 시작됩니다. 이 기능은 모든 플랫폼에서 사용 가능하지는 않습니다. &lt;a href=&quot;qgeoareamonitorsource#supportedAreaMonitorFeatures&quot;&gt;QGeoAreaMonitorSource :: supportedAreaMonitorFeatures&lt;/a&gt; () 를 통해 가용성을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9249882d9b51e0e086c9f83e80ead0846ced5fef" translate="yes" xml:space="preserve">
          <source>To further reduce the burden on the system there are optional attributes which can set. Each monitored area can have an expiry date which automatically removes the to-be-monitored area from the monitoring source once the expiry date has been reached. Another option is to adjust the persistence of a monitored area. A QGeoAreaMonitorInfo that &lt;a href=&quot;qgeoareamonitorinfo#isPersistent&quot;&gt;isPersistent&lt;/a&gt;() will remain active beyond the current applications lifetime. If an area is entered while the monitoring application is not running the application will be started. Note that this feature is not available on all platforms. Its availability can be checked via &lt;a href=&quot;qgeoareamonitorsource#supportedAreaMonitorFeatures&quot;&gt;QGeoAreaMonitorSource::supportedAreaMonitorFeatures&lt;/a&gt;().</source>
          <target state="translated">시스템의 부담을 더욱 줄이기 위해 설정할 수있는 선택적 속성이 있습니다. 각 모니터링 영역에는 만료 날짜에 도달하면 모니터링 소스에서 모니터링 대상 영역을 자동으로 제거하는 만료 날짜가있을 수 있습니다. 또 다른 옵션은 모니터링 영역의 지속성을 조정하는 것입니다. QGeoAreaMonitorInfo는 것을 &lt;a href=&quot;qgeoareamonitorinfo#isPersistent&quot;&gt;isPersistent은&lt;/a&gt; () 현재의 응용 프로그램 수명이 끝나도 그대로 적용됩니다. 모니터링 애플리케이션이 실행되지 않는 동안 영역을 입력하면 애플리케이션이 시작됩니다. 이 기능은 모든 플랫폼에서 사용할 수 없습니다. 가용성은 &lt;a href=&quot;qgeoareamonitorsource#supportedAreaMonitorFeatures&quot;&gt;QGeoAreaMonitorSource :: supportedAreaMonitorFeatures&lt;/a&gt; () 를 통해 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ebcac9153dd443a67ebcfe0a84f938e955a0d4d2" translate="yes" xml:space="preserve">
          <source>To gamma correct to a standard PC color-space, set gamma to &lt;code&gt;1/2.2&lt;/code&gt;.</source>
          <target state="translated">표준 PC 색 공간으로 감마 보정하려면 감마를 &lt;code&gt;1/2.2&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="6627c669ad3f44b7bc1928712d0dd1bd772e250a" translate="yes" xml:space="preserve">
          <source>To generate a C++ namespace for a type library, call &lt;code&gt;dumpcpp&lt;/code&gt; with the following command-line parameters:</source>
          <target state="translated">형식 라이브러리에 대한 C ++ 네임 스페이스를 생성하려면 다음 명령 줄 매개 변수를 사용하여 &lt;code&gt;dumpcpp&lt;/code&gt; 를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a8b4eab268f978aef3b1563dd6d4e861c157bb1a" translate="yes" xml:space="preserve">
          <source>To generate a C++ namespace for the type library you want to access, use the &lt;a href=&quot;activeqt-dumpcpp&quot;&gt;dumpcpp&lt;/a&gt; tool. Run this tool manually on the type library you want to use, or integrate it into the build system by adding the type libraries to the &lt;code&gt;TYPELIBS&lt;/code&gt; variable in your application's &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">액세스하려는 형식 라이브러리에 대한 C ++ 네임 스페이스를 생성하려면 &lt;a href=&quot;activeqt-dumpcpp&quot;&gt;dumpcpp&lt;/a&gt; 도구를 사용합니다 . 사용하려는 형식 라이브러리에서이 도구를 수동으로 실행하거나 형식 라이브러리를 애플리케이션의 &lt;code&gt;.pro&lt;/code&gt; 파일 에 있는 &lt;code&gt;TYPELIBS&lt;/code&gt; 변수에 추가하여 빌드 시스템에 통합 합니다.</target>
        </trans-unit>
        <trans-unit id="5e82995ec17912679c6b0f41330b98919cb8b864" translate="yes" xml:space="preserve">
          <source>To generate a C++ namespace for the type library you want to access, use the &lt;a href=&quot;activeqt-dumpcpp#&quot;&gt;dumpcpp&lt;/a&gt; tool. Run this tool manually on the type library you want to use, or integrate it into the build system by adding the type libraries to the &lt;code&gt;TYPELIBS&lt;/code&gt; variable in your application's &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">액세스하려는 형식 라이브러리에 대한 C ++ 네임 스페이스를 생성하려면 &lt;a href=&quot;activeqt-dumpcpp#&quot;&gt;dumpcpp&lt;/a&gt; 도구를 사용하십시오 . 사용하려는 유형 라이브러리에서이 도구를 수동으로 실행하거나 애플리케이션의 &lt;code&gt;.pro&lt;/code&gt; 파일 에서 &lt;code&gt;TYPELIBS&lt;/code&gt; 변수에 유형 라이브러리를 추가하여 빌드 시스템에 통합 하십시오.</target>
        </trans-unit>
        <trans-unit id="aff2baa97b21eba568c49ce5df49a11cd8637920" translate="yes" xml:space="preserve">
          <source>To generate a custom keymap, the</source>
          <target state="translated">맞춤 키맵을 생성하려면</target>
        </trans-unit>
        <trans-unit id="3d7730ba780b38015a5d22389113298e5fcffd56" translate="yes" xml:space="preserve">
          <source>To generate a custom keymap, use the &lt;code&gt;kmap2qmap&lt;/code&gt; utility, that can be found in the &lt;code&gt;qttools&lt;/code&gt; module. The source files have to be in standard Linux &lt;code&gt;kmap&lt;/code&gt; format, which is understood by the kernel's &lt;code&gt;loadkeys&lt;/code&gt; command. &lt;code&gt;qmap&lt;/code&gt; files can be generated in one of the following ways:</source>
          <target state="translated">사용자 지정 키 맵을 생성하기 위해 사용 &lt;code&gt;kmap2qmap&lt;/code&gt; 의 에서 찾을 수 있습니다 유틸리티, &lt;code&gt;qttools&lt;/code&gt; 의 모듈을. 소스 파일은 커널의 &lt;code&gt;loadkeys&lt;/code&gt; 명령으로 이해되는 표준 Linux &lt;code&gt;kmap&lt;/code&gt; 형식 이어야 합니다. &lt;code&gt;qmap&lt;/code&gt; 파일은 다음 방법 중 하나로 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bd14554f1b5d49210e2bacc49223ed904de6c2d9" translate="yes" xml:space="preserve">
          <source>To generate both the compressed help and the collection file in one go, modify the help collection project file so that it instructs the help generator to create the compressed help first:</source>
          <target state="translated">압축 도움말과 콜렉션 파일을 한 번에 생성하려면 도움말 콜렉션 프로젝트 파일을 수정하여 도움말 생성기가 압축 도움말을 먼저 작성하도록 지시하십시오.</target>
        </trans-unit>
        <trans-unit id="73dbfc4ba643bb0b1b8373dd3bfe35bbd1379cae" translate="yes" xml:space="preserve">
          <source>To generate documentation, QDoc uses configuration files, with the &lt;code&gt;qdocconf&lt;/code&gt; extension, to store configuration settings.</source>
          <target state="translated">문서를 생성하기 위해 QDoc은 &lt;code&gt;qdocconf&lt;/code&gt; 확장자를 가진 구성 파일을 사용하여 구성 설정을 저장합니다.</target>
        </trans-unit>
        <trans-unit id="ded7a7e159e28b409aaecb9984c89d4556f93791" translate="yes" xml:space="preserve">
          <source>To generate message authentication code, pass hash algorithm &lt;a href=&quot;qcryptographichash#Algorithm-enum&quot;&gt;QCryptographicHash::Algorithm&lt;/a&gt; to constructor, then set key and message by &lt;a href=&quot;qmessageauthenticationcode#setKey&quot;&gt;setKey&lt;/a&gt;() and &lt;a href=&quot;qmessageauthenticationcode#addData&quot;&gt;addData&lt;/a&gt;() functions. Result can be acquired by &lt;a href=&quot;qmessageauthenticationcode#result&quot;&gt;result&lt;/a&gt;() function.</source>
          <target state="translated">메시지 인증 코드를 생성하려면 해시 알고리즘 &lt;a href=&quot;qcryptographichash#Algorithm-enum&quot;&gt;QCryptographicHash :: Algorithm&lt;/a&gt; 을 생성자에 전달한 다음 &lt;a href=&quot;qmessageauthenticationcode#setKey&quot;&gt;setKey&lt;/a&gt; () 및 &lt;a href=&quot;qmessageauthenticationcode#addData&quot;&gt;addData&lt;/a&gt; () 함수로 키와 메시지를 설정 하십시오 . 결과 () 함수 로 &lt;a href=&quot;qmessageauthenticationcode#result&quot;&gt;결과를&lt;/a&gt; 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3429fceeff154de5ef5dbf05f3fbb3cdfb26f6cc" translate="yes" xml:space="preserve">
          <source>To generate the IDL the widgets exposed as ActiveX controls need to be instantiated (the constructor is called). At this point, nothing else but a &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object exists. Your widget constructor must not rely on any other objects to be created, e.g. it should check for null-pointers.</source>
          <target state="translated">IDL을 생성하려면 ActiveX 컨트롤로 노출 된 위젯을 인스턴스화해야합니다 (생성자 호출). 이 시점에서 &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; 오브젝트 외에는 존재 하지 않습니다 . 위젯 생성자는 생성 될 다른 객체에 의존해서는 안됩니다. 예를 들어 null 포인터를 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="c942b0c284806957abe837f006bd3d262cdb45e2" translate="yes" xml:space="preserve">
          <source>To generate the documentation, QDoc goes through the source code and generates documentation for C++ types such as classes. QDoc then associates member functions, properties, and other types to the appropriate class.</source>
          <target state="translated">문서를 생성하기 위해 QDoc은 소스 코드를 살펴보고 클래스와 같은 C ++ 유형에 대한 문서를 생성합니다. 그런 다음 QDoc은 멤버 함수, 특성 및 기타 유형을 해당 클래스에 연관시킵니다.</target>
        </trans-unit>
        <trans-unit id="02b12ec3edf1f51b48b44941ce700c9aa09a5e38" translate="yes" xml:space="preserve">
          <source>To get a context compatible with a given OpenGL version or profile, or to request depth and stencil buffers, call &lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt;():</source>
          <target state="translated">주어진 OpenGL 버전 또는 프로파일과 호환되는 컨텍스트를 얻거나 깊이 및 스텐실 버퍼를 요청하려면 &lt;a href=&quot;qopenglwidget#setFormat&quot;&gt;setFormat&lt;/a&gt; ()을 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="185429b53eb76f72894247b2034eb8ce14ca0ae5" translate="yes" xml:space="preserve">
          <source>To get a semi-transparent &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt;, call this function with</source>
          <target state="translated">반투명 &lt;a href=&quot;qquickwidget&quot;&gt;QQuickWidget&lt;/a&gt; 을 얻으려면 이 함수를</target>
        </trans-unit>
        <trans-unit id="5b6983cdb295e452362fc97b0374125681f5d227" translate="yes" xml:space="preserve">
          <source>To get an application designed for low DPI values running on high resolution monitors quickly, consider one of the following:</source>
          <target state="translated">고해상도 모니터에서 빠르게 실행되는 낮은 DPI 값용으로 설계된 응용 프로그램을 얻으려면 다음 중 하나를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="dccc25ead1d098d9e6a7ce10513b2a13fdd0f8a3" translate="yes" xml:space="preserve">
          <source>To get an upper- or lowercase version of a string use &lt;a href=&quot;qstring#toUpper&quot;&gt;toUpper&lt;/a&gt;() or &lt;a href=&quot;qstring#toLower&quot;&gt;toLower&lt;/a&gt;().</source>
          <target state="translated">문자열의 대문자 또는 소문자 버전을 얻으려면 &lt;a href=&quot;qstring#toUpper&quot;&gt;toUpper&lt;/a&gt; () 또는 &lt;a href=&quot;qstring#toLower&quot;&gt;toLower&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c0a29bdf30e23f5177977d968f38c4c03a4be616" translate="yes" xml:space="preserve">
          <source>To get finer control over which roles are accessible, and to make delegates more self-contained and usable outside of views,</source>
          <target state="translated">액세스 할 수있는 역할을보다 세밀하게 제어하고 델리게이트를 뷰 외부에서보다 독립적이고 사용할 수 있도록하려면</target>
        </trans-unit>
        <trans-unit id="6c974e5c914cd0d51c87101b39dc8f4b27c02ee9" translate="yes" xml:space="preserve">
          <source>To get range control (e.g., for an IP address) use masks together with &lt;a href=&quot;qlineedit#setValidator&quot;&gt;validators&lt;/a&gt;.</source>
          <target state="translated">범위 제어를 받으려면 (예 : IP 주소) 마스크를 &lt;a href=&quot;qlineedit#setValidator&quot;&gt;유효성 검사기&lt;/a&gt; 와 함께 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c4dd71ed75db99db48d52c4fc477c81633fd6f3" translate="yes" xml:space="preserve">
          <source>To get started please refer to the &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; documentation. You might also want to take a look at the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtxml-dombookmarks-example.html#&quot;&gt;DOM Bookmarks Example&lt;/a&gt;, which illustrates how to read and write an XML bookmark file (XBEL) using DOM.</source>
          <target state="translated">시작하려면 &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; 설명서 를 참조하십시오 . &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtxml-dombookmarks-example.html#&quot;&gt;DOM을&lt;/a&gt; 사용하여 XML 책갈피 파일 (XBEL)을 읽고 쓰는 방법을 보여주는 DOM 책갈피 예제를 살펴볼 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d5b60ebc81536a85eafb362c1e553663606f79dc" translate="yes" xml:space="preserve">
          <source>To get started please refer to the &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; documentation. You might also want to take a look at the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtxml-dombookmarks-example.html&quot;&gt;DOM Bookmarks Example&lt;/a&gt;, which illustrates how to read and write an XML bookmark file (XBEL) using DOM.</source>
          <target state="translated">시작하려면 &lt;a href=&quot;qdomdocument&quot;&gt;QDomDocument&lt;/a&gt; 문서 를 참조하십시오 . &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtxml-dombookmarks-example.html&quot;&gt;DOM을&lt;/a&gt; 사용하여 XML 책갈피 파일 (XBEL)을 읽고 쓰는 방법을 보여주는 DOM 책갈피 예제를 살펴볼 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d500d9cda2947f9e8b362e92d21ae5627b683de0" translate="yes" xml:space="preserve">
          <source>To get started, create an Android package directory as instructed in &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-deploying-android.html&quot;&gt;Qt Creator: Deploying Applications to Android Devices&lt;/a&gt;. This directory contains the &lt;code&gt;AndroidManifest.xml&lt;/code&gt; file. Inside the package directory, create a &lt;code&gt;src&lt;/code&gt; directory, where all your Java packages and classes will be created.</source>
          <target state="translated">시작하려면 &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-deploying-android.html&quot;&gt;Qt Creator : Deploying Applications to Android Devices에 설명 된&lt;/a&gt; 대로 Android 패키지 디렉터리를 만듭니다 . 이 디렉토리에는 &lt;code&gt;AndroidManifest.xml&lt;/code&gt; 파일이 있습니다. 패키지 디렉토리 내에 모든 Java 패키지와 클래스가 생성 될 &lt;code&gt;src&lt;/code&gt; 디렉토리를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="1e9901ff2bacaedc805ab8c3d0793aa054f5ffd7" translate="yes" xml:space="preserve">
          <source>To get started, the simplest &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; subclass could like like the following:</source>
          <target state="translated">시작하기 위해 가장 간단한 &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; 서브 클래스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="17a3ad3077db935cfda8853f35a75b1a75762b5c" translate="yes" xml:space="preserve">
          <source>To get started, the simplest QOpenGLWidget subclass could like like the following:</source>
          <target state="translated">시작하려면 가장 간단한 QOpenGLWidget 서브 클래스는 다음과 같을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="052797e7bb2f08a559e597c1cede0b75b887e61a" translate="yes" xml:space="preserve">
          <source>To get the MyScript SDK or additional information, please contact MyScript at &lt;a href=&quot;mailto:qt@myscript.com&quot;&gt;qt@myscript.com&lt;/a&gt;.</source>
          <target state="translated">MyScript SDK 또는 추가 정보를 얻으려면 MyScript ( &lt;a href=&quot;mailto:qt@myscript.com&quot;&gt;qt@myscript.com)에&lt;/a&gt; 문의하십시오 .</target>
        </trans-unit>
        <trans-unit id="9a13ff8fc0781e265661157e27fad5952a7dc67a" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt; use &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageOrientation().</source>
          <target state="translated">현재 &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout :: Orientation&lt;/a&gt; 을 가져 오려면 &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt; () .pageOrientation ()을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="544234d34d796c7ce012db54ab99220d44a86c18" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout::Orientation&lt;/a&gt; use &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageOrientation().</source>
          <target state="translated">현재 &lt;a href=&quot;qpagelayout#Orientation-enum&quot;&gt;QPageLayout :: Orientation&lt;/a&gt; 을 가져 오려면 &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt; () .pageOrientation ()을 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb45271b656c7827cfe29ea71e716aa6a087ec4a" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; use &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().&lt;a href=&quot;qpagedpaintdevice#pageSize&quot;&gt;pageSize&lt;/a&gt;().</source>
          <target state="translated">현재 &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; 를 얻으려면 &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt; ()을 사용 하십시오 . &lt;a href=&quot;qpagedpaintdevice#pageSize&quot;&gt;pageSize&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="0796e11a9fcb2aad12f1c86d01df3b6f6c88c9ea" translate="yes" xml:space="preserve">
          <source>To get the current &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; use &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().&lt;a href=&quot;qpagedpaintdevice#pageSize&quot;&gt;pageSize&lt;/a&gt;().</source>
          <target state="translated">현재 &lt;a href=&quot;qpagesize&quot;&gt;QPageSize&lt;/a&gt; 를 얻으려면 &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt; ()을 사용 하십시오 . &lt;a href=&quot;qpagedpaintdevice#pageSize&quot;&gt;pageSize&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="19eba6f5d253f33074053451beb8241c06325bc5" translate="yes" xml:space="preserve">
          <source>To get the current page margins use &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageMargins().</source>
          <target state="translated">현재 페이지 여백을 얻으려면 &lt;a href=&quot;qpagedpaintdevice#pageLayout&quot;&gt;pageLayout&lt;/a&gt; () .pageMargins ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="5017f703627ff112f625a31d77f47879c52f553e" translate="yes" xml:space="preserve">
          <source>To get the current page margins use &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt;().pageMargins().</source>
          <target state="translated">현재 페이지 여백을 얻으려면 &lt;a href=&quot;qpdfwriter#pageLayout&quot;&gt;pageLayout&lt;/a&gt; () .pageMargins ()를 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3220362a19dcf18d24c386fefe43dda44c5db107" translate="yes" xml:space="preserve">
          <source>To get the definition of the COM interfaces you will have to use the header files provided with the component you want to use. Some compilers can also import type libraries using the #import compiler directive. See the component documentation to find out which type libraries you have to import, and how to use them.</source>
          <target state="translated">COM 인터페이스의 정의를 얻으려면 사용하려는 구성 요소와 함께 제공된 헤더 파일을 사용해야합니다. 일부 컴파일러는 #import 컴파일러 지시문을 사용하여 형식 라이브러리를 가져올 수도 있습니다. 가져와야 할 형식 라이브러리와 사용 방법을 알려면 구성 요소 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1fdfc2261aed4e409cc98b0d730d90703abf2f9b" translate="yes" xml:space="preserve">
          <source>To get the effect of the &lt;code&gt;QBENCHMARK_ONCE&lt;/code&gt; macro, prefix the test function name with &quot;benchmark_once_&quot;.</source>
          <target state="translated">&lt;code&gt;QBENCHMARK_ONCE&lt;/code&gt; 매크로 의 효과를 얻으려면 테스트 함수 이름 앞에 &quot;benchmark_once_&quot;를 붙입니다.</target>
        </trans-unit>
        <trans-unit id="678b74647535d082e051b6aee1b8b8b58b536d34" translate="yes" xml:space="preserve">
          <source>To get the optimal rendering result using &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, you should use the platform independent &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; as paint device; i.e. using &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; will ensure that the result has an identical pixel representation on any platform.</source>
          <target state="translated">&lt;a href=&quot;qpainter&quot;&gt;QPainter를&lt;/a&gt; 사용하여 최적의 렌더링 결과를 얻으려면 플랫폼 독립적 인 &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; 를 페인트 장치로 사용해야합니다 . 즉, &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; 를 사용 하면 결과가 모든 플랫폼에서 동일한 픽셀 표현을 갖습니다.</target>
        </trans-unit>
        <trans-unit id="e5c94c7114db448845ca5cfa0ae4f50a09b19334" translate="yes" xml:space="preserve">
          <source>To get the optimal rendering result using QPainter, you should use the platform independent &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; as paint device; i.e. using &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; will ensure that the result has an identical pixel representation on any platform.</source>
          <target state="translated">QPainter를 사용하여 최적의 렌더링 결과를 얻으려면 플랫폼 독립적 인 &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; 를 페인트 장치로 사용해야합니다 . 즉, &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; 를 사용 하면 결과가 모든 플랫폼에서 동일한 픽셀 표현을 갖게됩니다.</target>
        </trans-unit>
        <trans-unit id="a9c9d808bdba36fca78eaf9cfc9ffbf7c925ab1b" translate="yes" xml:space="preserve">
          <source>To get the window that currently has focus, use &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication::focusWindow&lt;/a&gt;().</source>
          <target state="translated">현재 포커스가있는 창을 가져 오려면 &lt;a href=&quot;qguiapplication#focusWindow&quot;&gt;QGuiApplication :: focusWindow&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9934d68cb2d8b9cca97b3fbc21af6c0f95f93f24" translate="yes" xml:space="preserve">
          <source>To give custom widgets special behavior in</source>
          <target state="translated">사용자 정의 위젯에 특별한 동작을 제공하려면</target>
        </trans-unit>
        <trans-unit id="cd74d52af1cc6667dbe87804ee6298a63943651e" translate="yes" xml:space="preserve">
          <source>To give the user more information to help him answer the question, set the &lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;detailed text&lt;/a&gt; property. If the &lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;detailed text&lt;/a&gt; property is set, the &lt;b&gt;Show Details...&lt;/b&gt; button will be shown.</source>
          <target state="translated">사용자가 질문에 대답하는 데 도움이되는 추가 정보를 제공하려면 &lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;세부 텍스트&lt;/a&gt; 속성을 설정하십시오 . &lt;a href=&quot;qmessagebox#detailedText-prop&quot;&gt;자세한 텍스트&lt;/a&gt; 속성이 설정되어 있으면 &lt;b&gt;Show Details ...&lt;/b&gt; 버튼이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f1a5550ff85d9a528a115445951502a5c0cf0af8" translate="yes" xml:space="preserve">
          <source>To handle plural forms in the native language, you need to load a translation file for this language, too. The lupdate tool has the &lt;code&gt;-pluralonly&lt;/code&gt; command line option, which allows the creation of TS files containing only entries with plural forms.</source>
          <target state="translated">모국어로 복수 형식을 처리하려면이 언어에 대한 번역 파일도로드해야합니다. lupdate 도구에는 &lt;code&gt;-pluralonly&lt;/code&gt; 명령 행 옵션이 있으며,이 옵션을 사용하면 복수 형식의 항목 만 포함하는 TS 파일을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a15d1f729c28b2c53eb0141c43919c2a3c1dad97" translate="yes" xml:space="preserve">
          <source>To have Configure pick up OpenSSL automatically, set the following variables to point to where your OpenSSL includes and libraries are located:</source>
          <target state="translated">OpenSSL 구성이 자동으로 선택되도록하려면 OpenSSL 포함 및 라이브러리가있는 위치를 가리 키도록 다음 변수를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="d2d3c0fb03da9706a95426414f1a189618414810" translate="yes" xml:space="preserve">
          <source>To have the style of toolbuttons follow the system settings, set this property to &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt::ToolButtonFollowStyle&lt;/a&gt;. On Unix, the user settings from the desktop environment will be used. On other platforms, &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt::ToolButtonFollowStyle&lt;/a&gt; means icon only.</source>
          <target state="translated">툴 버튼 스타일이 시스템 설정을 따르도록하려면이 속성을 &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt :: ToolButtonFollowStyle&lt;/a&gt; 로 설정하십시오 . Unix에서는 데스크탑 환경의 사용자 설정이 사용됩니다. 다른 플랫폼에서 &lt;a href=&quot;qt#ToolButtonStyle-enum&quot;&gt;Qt :: ToolButtonFollowStyle&lt;/a&gt; 은 아이콘 만 의미합니다.</target>
        </trans-unit>
        <trans-unit id="6b574ae289007ff417d9bfd22021ddba65205964" translate="yes" xml:space="preserve">
          <source>To have the web engine view rendered correctly, it is possible to manually create a new offscreen context that is shared with the &lt;code&gt;QQuickRenderControl&lt;/code&gt; and to call the non-public function &lt;code&gt;qt_gl_set_global_share_context()&lt;/code&gt;, rather than calling &lt;code&gt;initialize()&lt;/code&gt;. If &lt;code&gt;initialize()&lt;/code&gt; is called after setting a global context, it will do nothing.</source>
          <target state="translated">웹 엔진보기를 올바르게 렌더링하려면 &lt;code&gt;QQuickRenderControl&lt;/code&gt; 과 공유되는 새 오프 스크린 컨텍스트를 수동으로 작성하고 &lt;code&gt;initialize()&lt;/code&gt; 호출하는 대신 비공개 함수 &lt;code&gt;qt_gl_set_global_share_context()&lt;/code&gt; 를 호출 할 수 있습니다 . 경우 &lt;code&gt;initialize()&lt;/code&gt; 글로벌 컨텍스트를 설정 한 후라고, 그것은 아무것도하지 않는 것입니다.</target>
        </trans-unit>
        <trans-unit id="58caee709dbcb3d944f3c1ef72d5c63b35bba55b" translate="yes" xml:space="preserve">
          <source>To height of the value bar is automatically resized according to &lt;a href=&quot;qml-qtquick-extras-gauge#value-prop&quot;&gt;value&lt;/a&gt;, and does not need to be specified.</source>
          <target state="translated">값 바의 높이를 자동으로 따라 크기를 조정 &lt;a href=&quot;qml-qtquick-extras-gauge#value-prop&quot;&gt;값&lt;/a&gt; , 그리고 지정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="625f3c7f6db8fdb8e9e4484b84b625633e7f94a7" translate="yes" xml:space="preserve">
          <source>To help with this problem, developers pass an additional integer argument to the &lt;a href=&quot;qobject#tr&quot;&gt;tr()&lt;/a&gt; function, and typically use a special notation for plurals in each translatable string.</source>
          <target state="translated">이 문제를 해결하기 위해 개발자는 &lt;a href=&quot;qobject#tr&quot;&gt;tr ()&lt;/a&gt; 함수에 추가 정수 인수를 전달 하고 일반적으로 각 번역 가능한 문자열에서 복수에 대한 특수 표기법을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="006b3a904da07333ede576f23761176a2db66b09" translate="yes" xml:space="preserve">
          <source>To ignore this gesture set the &lt;code&gt;pinch.accepted&lt;/code&gt; property to false. The gesture will be canceled and no further events will be sent.</source>
          <target state="translated">이 동작을 무시하려면 &lt;code&gt;pinch.accepted&lt;/code&gt; 속성을 false로 설정하십시오 . 제스처가 취소되고 더 이상 이벤트가 전송되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="68da53be1d2a8754cc79b84f5d4aad2ccfa749ff" translate="yes" xml:space="preserve">
          <source>To illuminate a &lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;scene&lt;/a&gt; using an image you'll add the image as a &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;Texture&lt;/a&gt; to the &lt;a href=&quot;qml-qtquick3d-sceneenvironment#lightProbe-prop&quot;&gt;lightProbe&lt;/a&gt; property.</source>
          <target state="translated">조명하는 &lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;장면을&lt;/a&gt; 이미지를 사용하여 당신은 같은 이미지를 추가 할 것 &lt;a href=&quot;qml-qtquick3d-texture&quot;&gt;텍스처&lt;/a&gt; 받는 &lt;a href=&quot;qml-qtquick3d-sceneenvironment#lightProbe-prop&quot;&gt;lightProbe의&lt;/a&gt; 속성입니다.</target>
        </trans-unit>
        <trans-unit id="fd1ce23b45cece4a8dfb5c39812f0976aadd222e" translate="yes" xml:space="preserve">
          <source>To illustrate the use of remote objects, on the source side we need to:</source>
          <target state="translated">원격 객체 사용을 설명하기 위해 소스 측에서 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="9d70685dbe3f211dd39faafe5f115a7f3faa166e" translate="yes" xml:space="preserve">
          <source>To illustrate the use of remote objects, on the source side, we need to:</source>
          <target state="translated">원격 객체의 사용을 설명하려면 소스 측에서 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="b0f6d688d4e050fcd5137ae1c9b6e10e959b2bb4" translate="yes" xml:space="preserve">
          <source>To illustrate what these properties refer to, we can use the following example:</source>
          <target state="translated">이러한 속성이 무엇을 나타내는 지 설명하기 위해 다음 예제를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="768ad204f0f0a6f3f47784484619167f71a77167" translate="yes" xml:space="preserve">
          <source>To illustrate, we present an image of an accessible object tree. Beneath the tree is a table with examples of object relationships.</source>
          <target state="translated">설명하기 위해 접근 가능한 객체 트리의 이미지를 제시합니다. 트리 아래에는 개체 관계의 예가있는 테이블이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f57768e2d62f32dc980fccbccbe5218e18100605" translate="yes" xml:space="preserve">
          <source>To imitate the matching of a shell we can use wildcard mode.</source>
          <target state="translated">쉘 일치를 모방하기 위해 와일드 카드 모드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a339c65ee743637c923979807bbf7928ea94156" translate="yes" xml:space="preserve">
          <source>To implement a COM object with Qt, create a subclass of &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; or any existing &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt; subclass. If the class is a subclass of &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;, the COM object will be an ActiveX control.</source>
          <target state="translated">Qt를 가진 COM 객체를 구현하기 위해,의 서브 클래스 만들 수 &lt;a href=&quot;qobject&quot;&gt;있는 QObject&lt;/a&gt; 또는 기존 &lt;a href=&quot;qobject&quot;&gt;QObject를의&lt;/a&gt; 서브 클래스를. 클래스가 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 의 서브 클래스 인 경우 COM 개체는 ActiveX 컨트롤이됩니다.</target>
        </trans-unit>
        <trans-unit id="dc4a3b3f0d257bd9b81098032ef24f8b483c7063" translate="yes" xml:space="preserve">
          <source>To implement a Qt SQL driver as a plugin (so that it is recognized and loaded by the Qt library at runtime), the driver must use the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro. Read &lt;a href=&quot;plugins-howto&quot;&gt;How to Create Qt Plugins&lt;/a&gt; for more information on this. You can also check out how this is done in the SQL plugins that are provided with Qt in &lt;code&gt;QTDIR/qtbase/src/plugins/sqldrivers&lt;/code&gt;.</source>
          <target state="translated">Qt SQL 드라이버를 플러그인으로 구현하려면 (런타임에 Qt 라이브러리에 의해 인식되고로드되도록) 드라이버는 &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt; () 매크로를 사용해야합니다 . 이에 대한 자세한 정보는 &lt;a href=&quot;plugins-howto&quot;&gt;Qt 플러그인 작성 방법을&lt;/a&gt; 읽으십시오 . &lt;code&gt;QTDIR/qtbase/src/plugins/sqldrivers&lt;/code&gt; 의 Qt와 함께 제공되는 SQL 플러그인에서이를 수행하는 방법도 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="806e2cd8e5ee29a628e321d5180fba4b57c899f6" translate="yes" xml:space="preserve">
          <source>To implement a Qt SQL driver as a plugin (so that it is recognized and loaded by the Qt library at runtime), the driver must use the &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro. Read &lt;a href=&quot;plugins-howto&quot;&gt;How to Create Qt Plugins&lt;/a&gt; for more information on this. You can also check out how this is done in the SQL plugins that are provided with Qt in &lt;code&gt;QTDIR/qtbase/src/plugins/sqldrivers&lt;/code&gt;.</source>
          <target state="translated">Qt SQL 드라이버를 플러그인으로 구현하려면 (런타임에 Qt 라이브러리에서 인식하고로드하도록) 드라이버는 &lt;a href=&quot;qtplugin#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt; () 매크로를 사용해야합니다 . 이에 대한 자세한 내용은 &lt;a href=&quot;plugins-howto&quot;&gt;Qt 플러그인 생성 방법을&lt;/a&gt; 읽어보십시오 . &lt;code&gt;QTDIR/qtbase/src/plugins/sqldrivers&lt;/code&gt; 의 Qt와 함께 제공되는 SQL 플러그인에서 이것이 어떻게 수행되는지 확인할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d2be2ac0632b5d1649d278fea4ae2e90c25c1443" translate="yes" xml:space="preserve">
          <source>To implement a custom URL scheme for &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt;, you first have to create an instance of &lt;a href=&quot;qwebengineurlscheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; and register it using &lt;a href=&quot;qwebengineurlscheme#registerScheme&quot;&gt;QWebEngineUrlScheme::registerScheme&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt; 에 대한 사용자 정의 URL 스킴을 구현하려면 먼저 &lt;a href=&quot;qwebengineurlscheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; 인스턴스를 작성하고 &lt;a href=&quot;qwebengineurlscheme#registerScheme&quot;&gt;QWebEngineUrlScheme :: registerScheme&lt;/a&gt; ()를 사용하여 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="cb008345dd3366d39fcf4027b305e509737f19f7" translate="yes" xml:space="preserve">
          <source>To implement a custom URL scheme for &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt;, you first have to create an instance of &lt;a href=&quot;qwebengineurlscheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; and register it using &lt;a href=&quot;qwebengineurlscheme#registerScheme&quot;&gt;QWebEngineUrlScheme::registerScheme&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-module.html&quot;&gt;QtWebEngine&lt;/a&gt; 에 대한 사용자 지정 URL 체계를 구현하려면 먼저 &lt;a href=&quot;qwebengineurlscheme&quot;&gt;QWebEngineUrlScheme&lt;/a&gt; 의 인스턴스를 만들고 &lt;a href=&quot;qwebengineurlscheme#registerScheme&quot;&gt;QWebEngineUrlScheme :: registerScheme&lt;/a&gt; ()를 사용하여 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="908e59e61babb9b5f94baa0a0cc4204987a11eba" translate="yes" xml:space="preserve">
          <source>To implement a factory, subclass &lt;a href=&quot;qqmlnetworkaccessmanagerfactory&quot;&gt;QQmlNetworkAccessManagerFactory&lt;/a&gt; and implement the virtual &lt;a href=&quot;qqmlnetworkaccessmanagerfactory#create&quot;&gt;create&lt;/a&gt;() method, then assign it to the relevant QML engine using &lt;a href=&quot;qqmlengine#setNetworkAccessManagerFactory&quot;&gt;QQmlEngine::setNetworkAccessManagerFactory&lt;/a&gt;().</source>
          <target state="translated">팩토리를 구현하려면 &lt;a href=&quot;qqmlnetworkaccessmanagerfactory&quot;&gt;QQmlNetworkAccessManagerFactory를&lt;/a&gt; 서브 클래스로 &lt;a href=&quot;qqmlnetworkaccessmanagerfactory#create&quot;&gt;작성&lt;/a&gt; 하고 virtual create () 메소드를 구현 한 후 &lt;a href=&quot;qqmlengine#setNetworkAccessManagerFactory&quot;&gt;QQmlEngine :: setNetworkAccessManagerFactory&lt;/a&gt; ()를 사용하여 관련 QML 엔진에 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="0654515d47a54596db259731b2ce2a38be13ad9c" translate="yes" xml:space="preserve">
          <source>To implement a factory, subclass QQmlNetworkAccessManagerFactory and implement the virtual &lt;a href=&quot;qqmlnetworkaccessmanagerfactory#create&quot;&gt;create&lt;/a&gt;() method, then assign it to the relevant QML engine using &lt;a href=&quot;qqmlengine#setNetworkAccessManagerFactory&quot;&gt;QQmlEngine::setNetworkAccessManagerFactory&lt;/a&gt;().</source>
          <target state="translated">팩토리를 구현하려면 QQmlNetworkAccessManagerFactory를 하위 클래스로 &lt;a href=&quot;qqmlnetworkaccessmanagerfactory#create&quot;&gt;만들고&lt;/a&gt; 가상 create () 메서드를 구현 한 다음 &lt;a href=&quot;qqmlengine#setNetworkAccessManagerFactory&quot;&gt;QQmlEngine :: setNetworkAccessManagerFactory&lt;/a&gt; ()를 사용하여 관련 QML 엔진에 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="a4bc0cc7c60c088bc88a65d035f601bc08c169f0" translate="yes" xml:space="preserve">
          <source>To implement drag and drop actions for a type of information that is not covered by the &lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; convenience functions, the first and most important step is to look for existing formats that are appropriate: The Internet Assigned Numbers Authority (&lt;a href=&quot;http://www.iana.org&quot;&gt;IANA&lt;/a&gt;) provides a &lt;a href=&quot;http://www.iana.org/assignments/media-types/&quot;&gt;hierarchical list of MIME media types&lt;/a&gt; at the Information Sciences Institute (&lt;a href=&quot;http://www.isi.edu&quot;&gt;ISI&lt;/a&gt;). Using standard MIME types maximizes the interoperability of your application with other software now and in the future.</source>
          <target state="translated">&lt;a href=&quot;qdrag&quot;&gt;QDrag&lt;/a&gt; 편의 기능에서 다루지 않는 정보 유형에 대해 끌어서 놓기 조치를 구현하려면 가장 중요한 첫 번째 단계는 적절한 기존 형식을 찾는 것입니다. &lt;a href=&quot;http://www.iana.org&quot;&gt;IANA&lt;/a&gt; (Internet Assigned Numbers Authority )는 다음과 같은 &lt;a href=&quot;http://www.iana.org/assignments/media-types/&quot;&gt;계층 적 목록을&lt;/a&gt; 제공합니다. MIME 미디어 유형의 정보 과학 연구소 (에서 &lt;a href=&quot;http://www.isi.edu&quot;&gt;ISI&lt;/a&gt; ). 표준 MIME 유형을 사용하면 현재와 미래에 다른 소프트웨어와 응용 프로그램의 상호 운용성이 극대화됩니다.</target>
        </trans-unit>
        <trans-unit id="e028b129f996e83c8c5ba5a749c702ff3b16c8cf" translate="yes" xml:space="preserve">
          <source>To implement support for a custom networked scheme, see setNetworkAccessManagerFactory.</source>
          <target state="translated">사용자 정의 네트워크 구성표에 대한 지원을 구현하려면 setNetworkAccessManagerFactory를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3d975aef7c3ca42a6198fe3d6145b05a438af56f" translate="yes" xml:space="preserve">
          <source>To implement support for a new backend, you must derive from &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; and reimplement the virtual &lt;a href=&quot;qpaintdevice#paintEngine&quot;&gt;paintEngine&lt;/a&gt;() function to tell &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; which paint engine should be used to draw on this particular device. Note that you also must create a corresponding paint engine to be able to draw on the device, i.e derive from &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; and reimplement its virtual functions.</source>
          <target state="translated">새로운 백엔드에 대한 지원을 구현하려면 &lt;a href=&quot;qpaintdevice&quot;&gt;QPaintDevice&lt;/a&gt; 에서 파생 하고 virtual &lt;a href=&quot;qpaintdevice#paintEngine&quot;&gt;paintEngine&lt;/a&gt; () 함수를 다시 구현 하여이 특정 장치에 어떤 페인트 엔진을 사용해야하는지 &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; 에 알려야 합니다. 또한 장치에 그릴 수 있도록 해당 페인트 엔진을 만들어야합니다. 즉 &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; 에서 파생 하여 가상 기능을 다시 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="aa4e184a07d00c8a162147af59d67dcd18ad802b" translate="yes" xml:space="preserve">
          <source>To implement support for a new backend, you must derive from QPaintDevice and reimplement the virtual &lt;a href=&quot;qpaintdevice#paintEngine&quot;&gt;paintEngine&lt;/a&gt;() function to tell &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; which paint engine should be used to draw on this particular device. Note that you also must create a corresponding paint engine to be able to draw on the device, i.e derive from &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; and reimplement its virtual functions.</source>
          <target state="translated">새로운 백엔드에 대한 지원을 구현하려면 QPaintDevice에서 파생하고 가상 &lt;a href=&quot;qpaintdevice#paintEngine&quot;&gt;paintEngine&lt;/a&gt; () 함수를 다시 구현하여 &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; 에이 특정 장치에서 그리는 데 사용할 페인트 엔진을 알려야합니다. 또한 장치에서 그릴 수 있도록 해당하는 페인트 엔진을 만들어야합니다. 즉, &lt;a href=&quot;qpaintengine&quot;&gt;QPaintEngine&lt;/a&gt; 에서 파생 하고 가상 기능을 다시 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="fe0472f92c49677952f74acd0472c08f23c99724" translate="yes" xml:space="preserve">
          <source>To implement this function create a derivative of &lt;a href=&quot;qabstractplanarvideobuffer&quot;&gt;QAbstractPlanarVideoBuffer&lt;/a&gt; and implement its map function instance instead.</source>
          <target state="translated">이 함수를 구현하려면 &lt;a href=&quot;qabstractplanarvideobuffer&quot;&gt;QAbstractPlanarVideoBuffer&lt;/a&gt; 의 파생물을 작성하고 대신 맵 함수 인스턴스를 구현하십시오.</target>
        </trans-unit>
        <trans-unit id="e57baf652275f5bd09812fc7631bed3b732be2c0" translate="yes" xml:space="preserve">
          <source>To import Qt Charts QML types, add the following import statement to your &lt;code&gt;.qml&lt;/code&gt; file:</source>
          <target state="translated">Qt 차트 QML 유형을 가져 오려면 &lt;code&gt;.qml&lt;/code&gt; 파일에 다음 import 문을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="9706bc12bb5fecf5f24e6d2f135552b3765653c3" translate="yes" xml:space="preserve">
          <source>To import Qt Data Visualization QML types, add the following import statement to your &lt;code&gt;.qml&lt;/code&gt; file:</source>
          <target state="translated">Qt Data Visualization QML 유형을 가져 오려면 &lt;code&gt;.qml&lt;/code&gt; 파일에 다음 import 문을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="c68645c4214e6de06941f2f3b7d2ba7cf44ebd5d" translate="yes" xml:space="preserve">
          <source>To import the QML types into your application, use the following import statement in your .qml file:</source>
          <target state="translated">QML 유형을 애플리케이션으로 가져 오려면 .qml 파일에서 다음 import 문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1c733e0bc774b5fabb86c96913c41b92f6160d94" translate="yes" xml:space="preserve">
          <source>To import the QML types into your application, use the following import statement in your &lt;code&gt;.qml&lt;/code&gt; file:</source>
          <target state="translated">QML 유형을 애플리케이션으로 가져 오려면 &lt;code&gt;.qml&lt;/code&gt; 파일 에서 다음 import 문을 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="ebe927566ef045ad033e13343c25e44971d2af0e" translate="yes" xml:space="preserve">
          <source>To include code snippets from an external file, use the &lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#snippet-command&quot;&gt;\snippet&lt;/a&gt; and &lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#codeline-command&quot;&gt;\codeline&lt;/a&gt; commands.</source>
          <target state="translated">외부 파일의 코드 스 니펫을 포함 시키려면 &lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#snippet-command&quot;&gt;\ snippet&lt;/a&gt; 및 &lt;a href=&quot;07-0-qdoc-commands-includingexternalcode#codeline-command&quot;&gt;\ codeline&lt;/a&gt; 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3193d971b24038413842acc771855127922ec5d7" translate="yes" xml:space="preserve">
          <source>To include the &lt;code&gt;#&lt;/code&gt; character in variable assignments, it is necessary to use the contents of the built-in &lt;a href=&quot;qmake-variable-reference#literal-hash&quot;&gt;LITERAL_HASH&lt;/a&gt; variable.</source>
          <target state="translated">변수 할당에 &lt;code&gt;#&lt;/code&gt; 문자 를 포함 시키려면 내장 &lt;a href=&quot;qmake-variable-reference#literal-hash&quot;&gt;LITERAL_HASH&lt;/a&gt; 변수 의 내용을 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2027ff02580e6c3a230537dd7dddda41723104b9" translate="yes" xml:space="preserve">
          <source>To include the definitions of the module's classes and functions, use the following directive:</source>
          <target state="translated">모듈의 클래스와 함수에 대한 정의를 포함하려면 다음 지시문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="dab785d8e8fcf72a49638451cfe5da33d5602994" translate="yes" xml:space="preserve">
          <source>To include the definitions of the module's classes and functions, use the following include statement:</source>
          <target state="translated">모듈 클래스 및 함수의 정의를 포함 시키려면 다음 include 문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="25604e04d87942d1b1ab46483ecf24327afcedad" translate="yes" xml:space="preserve">
          <source>To include the definitions of the module's classes, use the following directive:</source>
          <target state="translated">모듈 클래스의 정의를 포함하려면 다음 지시문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c9fc611d452ec4a784733e0eac0de194a266727f" translate="yes" xml:space="preserve">
          <source>To include the definitions of the module's functions and classes, use the following directives:</source>
          <target state="translated">모듈의 함수 및 클래스에 대한 정의를 포함 시키려면 다음 지시문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bf24b763e4224da08358c601ce5e3fdfe2817151" translate="yes" xml:space="preserve">
          <source>To include the definitions of the modules' classes, use the following directives:</source>
          <target state="translated">모듈 클래스의 정의를 포함하려면 다음 지시문을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="52e2f17553c064aeddf2e9a86d855ab01adaabb8" translate="yes" xml:space="preserve">
          <source>To include the file and line number, an object must be passed. If the file and line number is not available for that instance (either it was not instantiated by the QML engine or location information is disabled), &quot;unknown location&quot; will be used instead.</source>
          <target state="translated">파일과 줄 번호를 포함 시키려면 객체를 전달해야합니다. 해당 인스턴스에서 파일 및 행 번호를 사용할 수없는 경우 (QML 엔진에서 인스턴스화하지 않았거나 위치 정보가 사용 불가능한 경우) &quot;알 수없는 위치&quot;가 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="15fceb8eb65ee33a1b589fd642d01c3486c72e67" translate="yes" xml:space="preserve">
          <source>To include the file and line number, an object must be passed. If the file and line number is not available for that instance (either it was not instantiated by the QML engine or location information is disabled), &quot;unknown location&quot; will be used instead. For example,</source>
          <target state="translated">파일과 줄 번호를 포함 시키려면 객체를 전달해야합니다. 해당 인스턴스에 대해 파일 및 행 번호를 사용할 수없는 경우 (QML 엔진에서 인스턴스화하지 않았거나 위치 정보가 사용 불가능한 경우) &quot;알 수없는 위치&quot;가 대신 사용됩니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="0d4a3965f288470c2d6f1e14100d7e8ef5703120" translate="yes" xml:space="preserve">
          <source>To indicate that all possible mouse buttons are to be accepted, the special value 'Qt.AllButtons' may be used:</source>
          <target state="translated">가능한 모든 마우스 버튼이 허용됨을 나타 내기 위해 특수 값 'Qt.AllButtons'를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e38cb42c57654dc72cfe785a4be1f2aaf30d597" translate="yes" xml:space="preserve">
          <source>To indicate that the errors are not fatal and that the connection should proceed, the &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;QNetworkReply::ignoreSslErrors&lt;/a&gt;() function should be called from the slot connected to this signal. If it is not called, the SSL session will be torn down before any data is exchanged (including the URL).</source>
          <target state="translated">오류가 치명적이지 않고 연결이 진행 &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;중임을 나타내&lt;/a&gt; 려면이 신호에 연결된 슬롯에서 QNetworkReply :: ignoreSslErrors () 함수를 호출해야합니다. 호출되지 않으면 데이터를 교환하기 전에 (URL을 포함하여) SSL 세션이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="2b4aa01dfffaeedbbc2f003769dfb03c94500995" translate="yes" xml:space="preserve">
          <source>To indicate that the errors are not fatal and that the connection should proceed, the &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;ignoreSslErrors&lt;/a&gt;() function should be called from the slot connected to this signal. If it is not called, the SSL session will be torn down before any data is exchanged (including the URL).</source>
          <target state="translated">오류가 치명적이지 않고 연결이 진행 &lt;a href=&quot;qnetworkreply#ignoreSslErrors&quot;&gt;중임을 나타내&lt;/a&gt; 려면이 신호에 연결된 슬롯에서 ignoreSslErrors () 함수를 호출해야합니다. 호출되지 않으면 데이터를 교환하기 전에 (URL을 포함하여) SSL 세션이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="f8934fe20165efd0dfd6a5d9f226af5a9128617e" translate="yes" xml:space="preserve">
          <source>To indicate which methods are suitable for your application, set the &lt;a href=&quot;qml-qtpositioning-positionsource#preferredPositioningMethods-prop&quot;&gt;preferredPositioningMethods&lt;/a&gt; property. If the preferred methods are not available, the default source of location data for the platform will be chosen instead. If no default source is available (because none are installed for the runtime platform, or because it is disabled), the &lt;a href=&quot;qml-qtpositioning-positionsource#valid-prop&quot;&gt;valid&lt;/a&gt; property will be set to false.</source>
          <target state="translated">응용 프로그램에 적합한 방법을 나타내려면 &lt;a href=&quot;qml-qtpositioning-positionsource#preferredPositioningMethods-prop&quot;&gt;preferredPositioningMethods&lt;/a&gt; 속성을 설정하십시오 . 선호하는 방법을 사용할 수없는 경우 플랫폼의 기본 위치 데이터 소스가 대신 선택됩니다. 사용 가능한 기본 소스가없는 경우 (런타임 플랫폼에 설치되지 않았거나 비활성화되어 있기 때문에) &lt;a href=&quot;qml-qtpositioning-positionsource#valid-prop&quot;&gt;유효한&lt;/a&gt; 특성이 false로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="e1559d097b634d12f53dde0cfc3de08555469dd4" translate="yes" xml:space="preserve">
          <source>To inform</source>
          <target state="translated">알려</target>
        </trans-unit>
        <trans-unit id="68b98554ab9892616328af77d7acf0a56213c458" translate="yes" xml:space="preserve">
          <source>To initialize a licensed control use the following pattern:</source>
          <target state="translated">라이센스가 부여 된 컨트롤을 초기화하려면 다음 패턴을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="a9b9000504404ed9ab779fb2be3b4dacabcf29d7" translate="yes" xml:space="preserve">
          <source>To initialize the bits to true, either pass &lt;code&gt;true&lt;/code&gt; as second argument to the constructor, or call &lt;a href=&quot;qbitarray#fill&quot;&gt;fill&lt;/a&gt;() later on.</source>
          <target state="translated">비트를 true로 초기화하려면 &lt;code&gt;true&lt;/code&gt; 를 생성자에 두 번째 인수로 전달 하거나 나중에 &lt;a href=&quot;qbitarray#fill&quot;&gt;fill&lt;/a&gt; ()을 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="ce4ab601cb873cd7b2d2c920826fe079e26dc15b" translate="yes" xml:space="preserve">
          <source>To initialize the control before it is activated, reimplement this function and add your initialization code before you call &lt;a href=&quot;qaxwidget#createHostWindow&quot;&gt;createHostWindow&lt;/a&gt;(true).</source>
          <target state="translated">컨트롤을 활성화하기 전에 초기화하려면 &lt;a href=&quot;qaxwidget#createHostWindow&quot;&gt;createHostWindow&lt;/a&gt; (true) 를 호출하기 전에이 함수를 다시 구현하고 초기화 코드를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="e924d18ae3b4a19ba53cef35e55ca35dd34110fa" translate="yes" xml:space="preserve">
          <source>To initialize the control on a different machine use the following pattern:</source>
          <target state="translated">다른 머신에서 제어를 초기화하려면 다음 패턴을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c38ebea234d99fa40f9b4a8b2aeb30afe6ec9313" translate="yes" xml:space="preserve">
          <source>To initialize the control's properties, use</source>
          <target state="translated">컨트롤의 속성을 초기화하려면</target>
        </trans-unit>
        <trans-unit id="51cd53a47f4fe23410e0ffcdf7809fc8f559730f" translate="yes" xml:space="preserve">
          <source>To insert a (key, value) pair into the hash, you can use operator[]():</source>
          <target state="translated">해시에 (키, 값) 쌍을 삽입하려면 operator [] ()를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="619f4327aafdc4c818ac746e4cdd55aa02194395" translate="yes" xml:space="preserve">
          <source>To insert a (key, value) pair into the map, you can use operator[]():</source>
          <target state="translated">맵에 (키, 값) 쌍을 삽입하려면 operator [] ()를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="48fb17b5d2391757208ab9e22124ff066120fc29" translate="yes" xml:space="preserve">
          <source>To insert a value into the set, use &lt;a href=&quot;qset#insert&quot;&gt;insert&lt;/a&gt;():</source>
          <target state="translated">세트에 사용 된 값을 삽입하려면 &lt;a href=&quot;qset#insert&quot;&gt;삽입&lt;/a&gt; ) (:</target>
        </trans-unit>
        <trans-unit id="627a04eaa418ddd7ab045c696148132fa3a8eaea" translate="yes" xml:space="preserve">
          <source>To insert an item at the end, pass &lt;code&gt;menuItems.length&lt;/code&gt;.</source>
          <target state="translated">끝에 항목을 삽입하려면 &lt;code&gt;menuItems.length&lt;/code&gt; 를 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="14d2bc665c3256569dd629e9cf2dc593041cc76d" translate="yes" xml:space="preserve">
          <source>To install a specific package, use &lt;code&gt;sdkmanager&lt;/code&gt; from &lt;code&gt;&amp;lt;ANDROID_SDK_ROOT&amp;gt;/tools/bin&lt;/code&gt;. For example, the following command installs the &lt;code&gt;android-10&lt;/code&gt; platforms package on Ubuntu:</source>
          <target state="translated">특정 패키지를 설치하려면 &lt;code&gt;&amp;lt;ANDROID_SDK_ROOT&amp;gt;/tools/bin&lt;/code&gt; 의 &lt;code&gt;sdkmanager&lt;/code&gt; 를 사용 하십시오 . 예를 들어 다음 명령 은 Ubuntu에 &lt;code&gt;android-10&lt;/code&gt; 플랫폼 패키지를 설치합니다 .</target>
        </trans-unit>
        <trans-unit id="23acbbaf0daac2a08a16d3420a11b9ee334f5f15" translate="yes" xml:space="preserve">
          <source>To instantiate a COM object use the &lt;a href=&quot;qaxbase#control-prop&quot;&gt;QAxBase::setControl&lt;/a&gt;() API, or pass the name of the object directly into the constructor of the &lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt; subclass you are using.</source>
          <target state="translated">COM 오브젝트를 인스턴스화하려면 &lt;a href=&quot;qaxbase#control-prop&quot;&gt;QAxBase :: setControl&lt;/a&gt; () API를 사용하거나 오브젝트 이름을 사용 중인 &lt;a href=&quot;qaxbase&quot;&gt;QAxBase&lt;/a&gt; 서브 클래스 의 생성자로 직접 전달하십시오 .</target>
        </trans-unit>
        <trans-unit id="5832ce925e1e52a8c7908a758555d393b0b036a9" translate="yes" xml:space="preserve">
          <source>To instantiate a script engine, use &lt;a href=&quot;qaxscriptmanager#addObject&quot;&gt;QAxScriptManager::addObject&lt;/a&gt;() to register the COM objects you want to access from script, and &lt;a href=&quot;qaxscriptmanager#load&quot;&gt;QAxScriptManager::load&lt;/a&gt;() to load the script code into the engine. Then call the script functions using &lt;a href=&quot;qaxscriptmanager#call&quot;&gt;QAxScriptManager::call&lt;/a&gt;() or &lt;a href=&quot;qaxscript#call&quot;&gt;QAxScript::call&lt;/a&gt;().</source>
          <target state="translated">스크립트 엔진을 인스턴스화하려면 &lt;a href=&quot;qaxscriptmanager#addObject&quot;&gt;QAxScriptManager :: addObject&lt;/a&gt; ()를 사용하여 스크립트에서 액세스하려는 COM 오브젝트를 등록하고 &lt;a href=&quot;qaxscriptmanager#load&quot;&gt;QAxScriptManager :: load&lt;/a&gt; ()를 사용하여 스크립트 코드를 엔진에로드하십시오. 그런 다음 &lt;a href=&quot;qaxscriptmanager#call&quot;&gt;QAxScriptManager :: call&lt;/a&gt; () 또는 &lt;a href=&quot;qaxscript#call&quot;&gt;QAxScript :: call&lt;/a&gt; ()을 사용하여 스크립트 함수를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="89213ef1ed9f24a6dccabf389fe11eaa725bac4d" translate="yes" xml:space="preserve">
          <source>To integrate a custom widget with</source>
          <target state="translated">사용자 정의 위젯을</target>
        </trans-unit>
        <trans-unit id="39740ededb581a7293c01b1d0675ab08b15083a6" translate="yes" xml:space="preserve">
          <source>To integrate custom Direct3D 12 rendering, use &lt;a href=&quot;qsgrendernode&quot;&gt;QSGRenderNode&lt;/a&gt; in combination with &lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;. This approach doesn't rely on OpenGL contexts or API specifics like framebuffers, and allows exposing the graphics device and command buffer from the adaptation. It's not necessarily suitable for easy integration of all types of content, in particular true 3D, so it'll likely get complemented by an alternative to &lt;a href=&quot;qquickframebufferobject&quot;&gt;QQuickFramebufferObject&lt;/a&gt; in future releases.</source>
          <target state="translated">사용자 정의 Direct3D 12 렌더링을 통합하려면 &lt;a href=&quot;qsgrendernode&quot;&gt;QSGRenderNode&lt;/a&gt; 를 &lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt; 와 함께 사용 하십시오 . 이 접근 방식은 OpenGL 컨텍스트 또는 프레임 버퍼와 같은 API 관련 사항에 의존하지 않으며 그래픽 장치와 명령 버퍼를 적응에서 노출시킬 수 있습니다. 모든 유형의 컨텐츠, 특히 진정한 3D의 쉬운 통합에 반드시 적합한 것은 &lt;a href=&quot;qquickframebufferobject&quot;&gt;아니므&lt;/a&gt; 로 향후 릴리스에서 QQuickFramebufferObject 의 대안으로 보완 될 것 입니다.</target>
        </trans-unit>
        <trans-unit id="31641f5e01dd170a39a5028bd9bd53ae87fe0d89" translate="yes" xml:space="preserve">
          <source>To interact with running tasks using signals and slots, use &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;.</source>
          <target state="translated">신호와 슬롯을 사용하여 실행중인 작업과 상호 작용하려면 &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c472dd814b3501e33d5d64b42a79d25792ff4b35" translate="yes" xml:space="preserve">
          <source>To intercept drag and drop events for the scene, you reimplement &lt;a href=&quot;qgraphicsscene#dragEnterEvent&quot;&gt;QGraphicsScene::dragEnterEvent&lt;/a&gt;() and whichever event handlers your particular scene needs, in a &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; subclass. You can read more about drag and drop in Graphics View in the documentation for each of &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt;'s event handlers.</source>
          <target state="translated">장면의 끌어서 놓기 이벤트를 가로 채기 위해 &lt;a href=&quot;qgraphicsscene#dragEnterEvent&quot;&gt;QGraphicsScene :: dragEnterEvent&lt;/a&gt; () 및 &lt;a href=&quot;qgraphicsitem&quot;&gt;QGraphicsItem&lt;/a&gt; 서브 클래스 에서 특정 장면에 필요한 이벤트 핸들러 를 다시 구현 합니다 . &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; 의 각 이벤트 핸들러 에 대한 문서에서 기하 창의 끌어서 놓기에 대한 자세한 내용을 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e4d573df507990e2ba2b3015c9a61ea59c7463c7" translate="yes" xml:space="preserve">
          <source>To iterate over a list, you can either use index positions or &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;'s Java-style and STL-style iterator types:</source>
          <target state="translated">리스트를 반복하기 위해 인덱스 위치 또는 &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; 의 Java 스타일 및 STL 스타일 반복자 유형을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c846b2032dd567c323f0ac0f578838ec99896264" translate="yes" xml:space="preserve">
          <source>To iterate over the list, you can use the &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt; pseudo-keyword:</source>
          <target state="translated">목록을 반복하기 위해 &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt; 의사 키워드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dc709163fa36baf96bb24486cd5864f83e6c07bc" translate="yes" xml:space="preserve">
          <source>To keep the behavior of dynamically created state machines and compiled state machines the same, the</source>
          <target state="translated">동적으로 생성 된 상태 머신과 컴파일 된 상태 머신의 동작을 동일하게 유지하려면</target>
        </trans-unit>
        <trans-unit id="3a1accd2dff71491dc0d71a73153736fc2de834c" translate="yes" xml:space="preserve">
          <source>To keep track of some &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;s, create a &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler&lt;/a&gt;, and &lt;a href=&quot;qobjectcleanuphandler#add&quot;&gt;add&lt;/a&gt;() the objects you are interested in. If you are no longer interested in tracking a particular object, use &lt;a href=&quot;qobjectcleanuphandler#remove&quot;&gt;remove&lt;/a&gt;() to remove it from the cleanup handler. If an object being tracked by the cleanup handler gets deleted by someone else it will automatically be removed from the cleanup handler. You can delete all the objects in the cleanup handler with &lt;a href=&quot;qobjectcleanuphandler#clear&quot;&gt;clear&lt;/a&gt;(), or by destroying the cleanup handler. &lt;a href=&quot;qobjectcleanuphandler#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if the &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler&lt;/a&gt; has no objects to keep track of.</source>
          <target state="translated">일부 추적 유지하지 않으려면 &lt;a href=&quot;qobject&quot;&gt;QObject를&lt;/a&gt; ,들 만들 &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler을&lt;/a&gt; 하고 &lt;a href=&quot;qobjectcleanuphandler#add&quot;&gt;추가&lt;/a&gt; 를 이용해서에 관심이 객체) (. 더 이상 특정 객체 추적에 관심이 있다면, 사용의 &lt;a href=&quot;qobjectcleanuphandler#remove&quot;&gt;제거는&lt;/a&gt; () 정리 처리기에서 제거합니다. 정리 처리기에서 추적중인 개체가 다른 사람에 의해 삭제되면 정리 처리기에서 자동으로 제거됩니다. &lt;a href=&quot;qobjectcleanuphandler#clear&quot;&gt;clear&lt;/a&gt; ()를 사용하거나 정리 처리기를 제거 하여 정리 처리기의 모든 개체를 삭제할 수 있습니다 . &lt;a href=&quot;qobjectcleanuphandler&quot;&gt;QObjectCleanupHandler에&lt;/a&gt; 추적 할 오브젝트가없는 경우 &lt;a href=&quot;qobjectcleanuphandler#isEmpty&quot;&gt;isEmpty&lt;/a&gt; ()는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 .</target>
        </trans-unit>
        <trans-unit id="bd4266377b75fe68e3d31f99451771fc0d3acd49" translate="yes" xml:space="preserve">
          <source>To keep track of some &lt;a href=&quot;qobject&quot;&gt;QObject&lt;/a&gt;s, create a QObjectCleanupHandler, and &lt;a href=&quot;qobjectcleanuphandler#add&quot;&gt;add&lt;/a&gt;() the objects you are interested in. If you are no longer interested in tracking a particular object, use &lt;a href=&quot;qobjectcleanuphandler#remove&quot;&gt;remove&lt;/a&gt;() to remove it from the cleanup handler. If an object being tracked by the cleanup handler gets deleted by someone else it will automatically be removed from the cleanup handler. You can delete all the objects in the cleanup handler with &lt;a href=&quot;qobjectcleanuphandler#clear&quot;&gt;clear&lt;/a&gt;(), or by destroying the cleanup handler. &lt;a href=&quot;qobjectcleanuphandler#isEmpty&quot;&gt;isEmpty&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt; if the QObjectCleanupHandler has no objects to keep track of.</source>
          <target state="translated">일부 &lt;a href=&quot;qobject&quot;&gt;QObject를&lt;/a&gt; 추적하려면 QObjectCleanupHandler를 만들고 관심있는 개체를 &lt;a href=&quot;qobjectcleanuphandler#add&quot;&gt;추가&lt;/a&gt; ()합니다. 특정 개체 추적에 더 이상 관심이없는 경우 &lt;a href=&quot;qobjectcleanuphandler#remove&quot;&gt;remove&lt;/a&gt; ()를 사용 하여 정리 처리기에서 제거합니다. 정리 처리기에 의해 추적되는 개체가 다른 사람에 의해 삭제되면 정리 처리기에서 자동으로 제거됩니다. &lt;a href=&quot;qobjectcleanuphandler#clear&quot;&gt;clear&lt;/a&gt; ()를 사용하거나 정리 처리기를 제거 하여 정리 처리기의 모든 개체를 삭제할 수 있습니다 . &lt;a href=&quot;qobjectcleanuphandler#isEmpty&quot;&gt;isEmpty&lt;/a&gt; ()는 QObjectCleanupHandler에 추적 할 개체가없는 경우 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="c6a701197ececd2b1a13097aff3b0d4ce1cec4dd" translate="yes" xml:space="preserve">
          <source>To kill all the particles in the system, use an Age affector.</source>
          <target state="translated">시스템의 모든 입자를 죽이려면 Age 영향자를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2ed85ef8590db93553fbb995ff96656ee42d602f" translate="yes" xml:space="preserve">
          <source>To launch your project with Visual Studio a corresponding project needs to be created. &lt;code&gt;qmake&lt;/code&gt; supports converting a &lt;code&gt;.pro&lt;/code&gt; project into Visual Studio format by passing the parameters &lt;code&gt;-tp&lt;/code&gt; vc.</source>
          <target state="translated">Visual Studio로 프로젝트를 시작하려면 해당 프로젝트를 만들어야합니다. &lt;code&gt;qmake&lt;/code&gt; 는 &lt;code&gt;-tp&lt;/code&gt; vc 매개 변수를 전달하여 &lt;code&gt;.pro&lt;/code&gt; 프로젝트를 Visual Studio 형식으로 변환하는 것을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="3160e69c1f88ddeaffc59249b0753ae8891d79ce" translate="yes" xml:space="preserve">
          <source>To learn more about uses of QML code, there are several code samples which show how QML types are used. In addition, there are several demos which show how QML code is used in applications.</source>
          <target state="translated">QML 코드 사용에 대한 자세한 내용은 QML 유형 사용 방법을 보여주는 몇 가지 코드 샘플이 있습니다. 또한 애플리케이션에서 QML 코드가 사용되는 방법을 보여주는 몇 가지 데모가 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae939a15d9d0f7b8a1934cce8e1153a6450f1e95" translate="yes" xml:space="preserve">
          <source>To limit the size of items in a horizontal view, use the following properties:</source>
          <target state="translated">가로보기에서 항목 크기를 제한하려면 다음 속성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c54711cc61671edaa8a2d699f7474f7a251e9afe" translate="yes" xml:space="preserve">
          <source>To limit the size of items in a vertical view, use the following properties:</source>
          <target state="translated">세로보기에서 항목 크기를 제한하려면 다음 속성을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="87840f52c7612ba77a3719aaafc72a023cc08ec8" translate="yes" xml:space="preserve">
          <source>To link Qt Network against OpenSSL libraries, set the &lt;code&gt;-openssl-linked&lt;/code&gt; configure argument. Use the &lt;code&gt;OPENSSL_PREFIX&lt;/code&gt; variable to let Qt correctly locate and build against your OpenSSL installation:</source>
          <target state="translated">OpenSSL 라이브러리에 대해 Qt Network를 연결하려면 &lt;code&gt;-openssl-linked&lt;/code&gt; 구성 인수를 설정하십시오 . &lt;code&gt;OPENSSL_PREFIX&lt;/code&gt; 변수를 사용하여 Qt가 OpenSSL 설치에 대해 올바르게 찾고 빌드하도록합니다.</target>
        </trans-unit>
        <trans-unit id="10d94842d6331f1df4948b7fd10483468353b67e" translate="yes" xml:space="preserve">
          <source>To link Qt Network against a static version of the OpenSSL libs, set the &lt;code&gt;-openssl-linked&lt;/code&gt; argument, and set &lt;code&gt;OPENSSL_PREFIX&lt;/code&gt;, or &lt;code&gt;OPENSSL_INCDIR&lt;/code&gt; and &lt;code&gt;OPENSSL_LIBDIR&lt;/code&gt;. In addition, you probably need to set the &lt;code&gt;OPENSSL_LIBS&lt;/code&gt;, &lt;code&gt;OPENSSL_LIBS_DEBUG&lt;/code&gt;, &lt;code&gt;OPENSSL_LIBS_RELEASE&lt;/code&gt; configure arguments to let Qt correctly link against your static build of the OpenSSL libraries.</source>
          <target state="translated">정적에 설정된에는 OpenSSL libs와의 버전에 대해 Qt는 네트워크를 연결하려면 &lt;code&gt;-openssl-linked&lt;/code&gt; 인수를하고, 세트 &lt;code&gt;OPENSSL_PREFIX&lt;/code&gt; , 또는 &lt;code&gt;OPENSSL_INCDIR&lt;/code&gt; 및 &lt;code&gt;OPENSSL_LIBDIR&lt;/code&gt; . 또한 Qt가 OpenSSL 라이브러리의 정적 빌드에 대해 올바르게 링크 할 수 있도록 &lt;code&gt;OPENSSL_LIBS&lt;/code&gt; , &lt;code&gt;OPENSSL_LIBS_DEBUG&lt;/code&gt; , &lt;code&gt;OPENSSL_LIBS_RELEASE&lt;/code&gt; 구성 인수 를 설정해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="68eec605815734a511520b06c66c4f1d88038238" translate="yes" xml:space="preserve">
          <source>To link against the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; library, add the following to your qmake project file:</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; 라이브러리에 링크하려면 qmake 프로젝트 파일에 다음을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="2730f18d66677274226574d633aebee82b5773b6" translate="yes" xml:space="preserve">
          <source>To link against the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; library, add the following to your qmake project file:</source>
          <target state="translated">&lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; 라이브러리에 링크하려면 qmake 프로젝트 파일에 다음을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="41f8bd669eb626c069a30c9b615d512c8ded8723" translate="yes" xml:space="preserve">
          <source>To link against the C++ libraries, add the following to your &lt;code&gt;qmake&lt;/code&gt; project file:</source>
          <target state="translated">C ++ 라이브러리에 링크하려면 &lt;code&gt;qmake&lt;/code&gt; 프로젝트 파일에 다음을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="a27668ad0d6b00fb6b29a4e7e90b6c0152f154ee" translate="yes" xml:space="preserve">
          <source>To link against the Qt Android Extras module, add this line to your project file:</source>
          <target state="translated">Qt Android Extras 모듈과 연결하려면이 줄을 프로젝트 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="041569c678412c7ad9cce1eda03aeb296c2a3531" translate="yes" xml:space="preserve">
          <source>To link against the Qt Charts module, add this line to your &lt;code&gt;qmake&lt;/code&gt; project file:</source>
          <target state="translated">Qt 차트 모듈과 연결하려면 &lt;code&gt;qmake&lt;/code&gt; 프로젝트 파일에 다음 줄을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="b6d0bc4b34689225615bdc1ccb98ea1b8cdea08f" translate="yes" xml:space="preserve">
          <source>To link against the Qt Data Visualization module, add this line to your &lt;code&gt;qmake&lt;/code&gt; project file:</source>
          <target state="translated">Qt Data Visualization 모듈에 링크하려면 &lt;code&gt;qmake&lt;/code&gt; 프로젝트 파일에 다음 행을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="f5939def498999b5004ecefe7a9cd9a131e4497f" translate="yes" xml:space="preserve">
          <source>To link against the Qt Help module, add this line to the project file:</source>
          <target state="translated">Qt 도움말 모듈에 연결하려면 프로젝트 파일에 다음 줄을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="d1ff20e35e1cae61dba75a517bc6afbf59bdd0f0" translate="yes" xml:space="preserve">
          <source>To link against the Qt Network Authorization module, add this line to the project file:</source>
          <target state="translated">Qt 네트워크 인증 모듈에 연결하려면이 줄을 프로젝트 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="a446a86eafdce44e2da40210110b22d68c122d8d" translate="yes" xml:space="preserve">
          <source>To link against the Qt Network module, add this line to the project file:</source>
          <target state="translated">Qt 네트워크 모듈과 연결하려면 다음 줄을 프로젝트 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="a82331cadd56724182404023de38b6c52c54f94c" translate="yes" xml:space="preserve">
          <source>To link against the Qt SQL module, add this line to the project file:</source>
          <target state="translated">Qt SQL 모듈과 연결하려면이 줄을 프로젝트 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="550a0072bcec6d0a4422e4f84d722a4959b14de7" translate="yes" xml:space="preserve">
          <source>To link against the corresponding C++ libraries, add the following to your &lt;code&gt;qmake&lt;/code&gt; project file:</source>
          <target state="translated">해당 C ++ 라이브러리에 링크하려면 &lt;code&gt;qmake&lt;/code&gt; 프로젝트 파일에 다음을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="553a82fffee6fc20ca9b22ede59db116aeaac219" translate="yes" xml:space="preserve">
          <source>To link against the corresponding C++ libraries, add the following to your qmake project file:</source>
          <target state="translated">해당 C ++ 라이브러리에 링크하려면 qmake 프로젝트 파일에 다음을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="ef5395256966e863a10aaefacb703c4ab74fef40" translate="yes" xml:space="preserve">
          <source>To link against the module, add this line to your &lt;a href=&quot;qmake-manual&quot;&gt;qmake&lt;/a&gt;&lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">모듈과 연결하려면 &lt;a href=&quot;qmake-manual&quot;&gt;qmake &lt;/a&gt; &lt;code&gt;.pro&lt;/code&gt; 파일에 다음 줄을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="4c15c07c63b0fdb1d03e9056c8633dcf3b398744" translate="yes" xml:space="preserve">
          <source>To link against the module, add this line to your qmake .pro file:</source>
          <target state="translated">모듈과 연결하려면 qmake .pro 파일에 다음 줄을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="05cdb606e8e440fb4c1159865d15947fe4e68a5f" translate="yes" xml:space="preserve">
          <source>To link against the module, add this line to your qmake &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">모듈과 연결하려면 qmake &lt;code&gt;.pro&lt;/code&gt; 파일에 다음 줄을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="36959485c016826e8627ccff21d149b034544ef3" translate="yes" xml:space="preserve">
          <source>To link against the module, add this line to your qmake project file:</source>
          <target state="translated">모듈에 링크하려면 다음 행을 qmake 프로젝트 파일에 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="536245d9ecf28fc27080b6fde95b2e9b382beda5" translate="yes" xml:space="preserve">
          <source>To link plugins statically, you need to add the required plugins to your build using &lt;code&gt;QTPLUGIN&lt;/code&gt;.</source>
          <target state="translated">플러그인을 정적으로 링크하려면 &lt;code&gt;QTPLUGIN&lt;/code&gt; 을 사용하여 빌드에 필수 플러그인을 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c151992632d8e5822e1428f581719db7fdf5b114" translate="yes" xml:space="preserve">
          <source>To link to the Qt Quick Test C++ library, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquicktest-module.html&quot;&gt;Qt Quick Test C++ API&lt;/a&gt;.</source>
          <target state="translated">Qt Quick Test C ++ 라이브러리에 링크하려면 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquicktest-module.html&quot;&gt;Qt Quick Test C ++ API를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="88462081f1e6d8573886ebc07c2c418aa5d66cc7" translate="yes" xml:space="preserve">
          <source>To link to the Qt Quick Test C++ library, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquicktest-module.html&quot;&gt;Qt Quick Test C++ API&lt;/a&gt;.</source>
          <target state="translated">Qt Quick Test C ++ 라이브러리에 연결하려면 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtquicktest-module.html&quot;&gt;Qt Quick Test C ++ API를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5720cca875b568000278f0e6e8b49a2eecf0a0fa" translate="yes" xml:space="preserve">
          <source>To list overviews that are related to a certain group, you must generate the list explicitly using the &lt;a href=&quot;12-0-qdoc-commands-miscellaneous#generatelist-command&quot;&gt;\generatelist&lt;/a&gt; command with the &lt;code&gt;related&lt;/code&gt; argument.</source>
          <target state="translated">특정 그룹과 관련된 개요를 나열하려면 &lt;code&gt;related&lt;/code&gt; 인수 와 함께 &lt;a href=&quot;12-0-qdoc-commands-miscellaneous#generatelist-command&quot;&gt;\ generatelist&lt;/a&gt; 명령을 사용하여 명시 적으로 목록을 생성해야합니다 .</target>
        </trans-unit>
        <trans-unit id="045ef0e0517c79961b778b8bd3181a409424e7c8" translate="yes" xml:space="preserve">
          <source>To load OpenSSL at runtime, set the &lt;code&gt;-openssl-runtime&lt;/code&gt; configure argument. Qt will try to find &lt;code&gt;openssl/ssl.h&lt;/code&gt; and &lt;code&gt;openssl/opensslv.h&lt;/code&gt; in the default include path of the compiler. You can specify an additional include directory by setting &lt;code&gt;OPENSSL_INCDIR&lt;/code&gt;.</source>
          <target state="translated">런타임에 OpenSSL을로드하려면 &lt;code&gt;-openssl-runtime&lt;/code&gt; 구성 인수를 설정하십시오 . Qt는 컴파일러의 기본 포함 경로에서 &lt;code&gt;openssl/ssl.h&lt;/code&gt; 및 &lt;code&gt;openssl/opensslv.h&lt;/code&gt; 를 찾으려고 합니다. &lt;code&gt;OPENSSL_INCDIR&lt;/code&gt; 을 설정하여 추가 포함 디렉토리를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a10c29f487de310a36a9f801fb143ad5f15223a1" translate="yes" xml:space="preserve">
          <source>To load Qt Graphical Effects, add the following import statement to your .qml file:</source>
          <target state="translated">Qt Graphical Effects를로드하려면 .qml 파일에 다음 import 문을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="df7c410485f6d6cd74f0493a183a3aacc06576e4" translate="yes" xml:space="preserve">
          <source>To load a .qml file, run the tool and select the file to be opened, or provide the file path on the command prompt:</source>
          <target state="translated">.qml 파일을로드하려면 도구를 실행하고 열 파일을 선택하거나 명령 프롬프트에서 파일 경로를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="753b64b85907eae631eaca29735a401b0d3eec7d" translate="yes" xml:space="preserve">
          <source>To load a specific physical font, typically represented by a single file, use &lt;a href=&quot;qrawfont&quot;&gt;QRawFont&lt;/a&gt; instead.</source>
          <target state="translated">일반적으로 단일 파일로 표시되는 특정 실제 글꼴을로드하려면 대신 &lt;a href=&quot;qrawfont&quot;&gt;QRawFont를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3b70dd932a4f527611b23806c442f1c16bd2862b" translate="yes" xml:space="preserve">
          <source>To load an SCXML file, &lt;a href=&quot;qscxmlstatemachine#fromFile&quot;&gt;QScxmlStateMachine::fromFile&lt;/a&gt; or &lt;a href=&quot;qscxmlstatemachine#fromData&quot;&gt;QScxmlStateMachine::fromData&lt;/a&gt; should be used. Using &lt;a href=&quot;qscxmlcompiler&quot;&gt;QScxmlCompiler&lt;/a&gt; directly is only needed when the compiler needs to use a custom &lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler::Loader&lt;/a&gt;.</source>
          <target state="translated">SCXML 파일을로드하려면 &lt;a href=&quot;qscxmlstatemachine#fromFile&quot;&gt;QScxmlStateMachine :: fromFile&lt;/a&gt; 또는 &lt;a href=&quot;qscxmlstatemachine#fromData&quot;&gt;QScxmlStateMachine :: fromData를&lt;/a&gt; 사용해야합니다. 사용 &lt;a href=&quot;qscxmlcompiler&quot;&gt;QScxmlCompiler는&lt;/a&gt; 직접에만 컴파일러가 사용자 정의 사용할 필요가있을 때 필요 &lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler :: 로더&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="cbc85945390e0b276f18bcfb0a8b59229b19f2a4" translate="yes" xml:space="preserve">
          <source>To load an SCXML file, &lt;a href=&quot;qscxmlstatemachine#fromFile&quot;&gt;QScxmlStateMachine::fromFile&lt;/a&gt; or &lt;a href=&quot;qscxmlstatemachine#fromData&quot;&gt;QScxmlStateMachine::fromData&lt;/a&gt; should be used. Using QScxmlCompiler directly is only needed when the compiler needs to use a custom &lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler::Loader&lt;/a&gt;.</source>
          <target state="translated">SCXML 파일을로드하려면 &lt;a href=&quot;qscxmlstatemachine#fromFile&quot;&gt;QScxmlStateMachine :: fromFile&lt;/a&gt; 또는 &lt;a href=&quot;qscxmlstatemachine#fromData&quot;&gt;QScxmlStateMachine :: fromData를&lt;/a&gt; 사용해야합니다. QScxmlCompiler를 직접 사용하는 것은 컴파일러가 사용자 정의 &lt;a href=&quot;qscxmlcompiler-loader&quot;&gt;QScxmlCompiler :: Loader&lt;/a&gt; 를 사용해야하는 경우에만 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="a5709ff13f4130be160f9671835547e6c540e2e2" translate="yes" xml:space="preserve">
          <source>To load the Qt Location module, add the following statement to your .qml files</source>
          <target state="translated">Qt 위치 모듈을로드하려면 .qml 파일에 다음 명령문을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="97edd80909bd4c4f57c17e539eb5e7249439ffa4" translate="yes" xml:space="preserve">
          <source>To load the Qt Positioning module, add the following statement to your .qml files</source>
          <target state="translated">Qt 포지셔닝 모듈을로드하려면 .qml 파일에 다음 명령문을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="514255d7dc0d157f5e943da95f690d92fdc65e47" translate="yes" xml:space="preserve">
          <source>To look up a host's IP addresses asynchronously, call &lt;a href=&quot;qhostinfo#lookupHost&quot;&gt;lookupHost&lt;/a&gt;(), which takes the host name or IP address, a receiver object, and a slot signature as arguments and returns an ID. You can abort the lookup by calling &lt;a href=&quot;qhostinfo#abortHostLookup&quot;&gt;abortHostLookup&lt;/a&gt;() with the lookup ID.</source>
          <target state="translated">호스트의 IP 주소를 비동기식으로 &lt;a href=&quot;qhostinfo#lookupHost&quot;&gt;조회&lt;/a&gt; 하려면 호스트 이름 또는 IP 주소, 수신자 오브젝트 및 슬롯 서명을 인수로 사용하고 ID를 리턴하는 lookupHost ()를 호출 하십시오. 조회 ID와 함께 &lt;a href=&quot;qhostinfo#abortHostLookup&quot;&gt;abortHostLookup&lt;/a&gt; ()을 호출하여 조회를 중단 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c3e0f2510aef3f0994086992307fa28fcda7c6e7" translate="yes" xml:space="preserve">
          <source>To look up a value, use operator[]() or &lt;a href=&quot;qhash#value&quot;&gt;value&lt;/a&gt;():</source>
          <target state="translated">값을 찾으려면 operator [] () 또는 &lt;a href=&quot;qhash#value&quot;&gt;value&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="465cea4289469ac456741aec62a5df63ba123129" translate="yes" xml:space="preserve">
          <source>To look up a value, use operator[]() or &lt;a href=&quot;qmap#value&quot;&gt;value&lt;/a&gt;():</source>
          <target state="translated">값을 찾으려면 operator [] () 또는 &lt;a href=&quot;qmap#value&quot;&gt;value&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="624a94a94edc9e656cdef529278975ffbf879e7e" translate="yes" xml:space="preserve">
          <source>To look up objects in the cache, use &lt;a href=&quot;qcache#object&quot;&gt;object&lt;/a&gt;() or operator[](). This function looks up an object by its key, and returns either a pointer to the cached object (which is owned by the cache) or &lt;code&gt;nullptr&lt;/code&gt;.</source>
          <target state="translated">캐시에서 객체를 찾으려면 &lt;a href=&quot;qcache#object&quot;&gt;object&lt;/a&gt; () 또는 operator [] ()를 사용하십시오. 이 함수는 키로 객체를 조회하고 캐시 된 객체 (캐시가 소유 한)에 대한 포인터 또는 &lt;code&gt;nullptr&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="f437ffccca44f2ed4d4f07ca858f517debac4e8f" translate="yes" xml:space="preserve">
          <source>To make &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; as efficient as possible, its member functions don't validate their input before using it. Except for &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;(), member functions always assume the list is</source>
          <target state="translated">&lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; 를 가능한 한 효율적으로 만들기 위해 멤버 함수는 사용하기 전에 입력을 확인하지 않습니다. &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty를&lt;/a&gt; 제외하고 ()를 멤버 함수는 항상 목록이</target>
        </trans-unit>
        <trans-unit id="c3c955d5a17bb889417bbcdacdc44300ff117647" translate="yes" xml:space="preserve">
          <source>To make &lt;code&gt;qmake&lt;/code&gt; find the PostgreSQL header files and shared libraries, run &lt;code&gt;qmake&lt;/code&gt; the following way (assuming that the PostgreSQL client is installed in &lt;code&gt;/usr&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;qmake&lt;/code&gt; 가 PostgreSQL 헤더 파일 및 공유 라이브러리를 찾게 하려면 PostgreSQL 클라이언트가 &lt;code&gt;/usr&lt;/code&gt; 에 설치되어 있다고 가정하면 다음과 같이 &lt;code&gt;qmake&lt;/code&gt; 를 실행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="641ad16fa228b3ecff8a30d2d30414c971731903" translate="yes" xml:space="preserve">
          <source>To make QList as efficient as possible, its member functions don't validate their input before using it. Except for &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt;(), member functions always assume the list is</source>
          <target state="translated">QList를 가능한 한 효율적으로 만들기 위해 멤버 함수는 사용하기 전에 입력의 유효성을 검사하지 않습니다. &lt;a href=&quot;qlist#isEmpty&quot;&gt;isEmpty&lt;/a&gt; ()를 제외하고 멤버 함수는 항상 목록이</target>
        </trans-unit>
        <trans-unit id="311080827d2b898605b517a7d8251488ac146a95" translate="yes" xml:space="preserve">
          <source>To make Qt WebEngine work correctly when streaming to an AppleTV from a MacBook that supports GPU switching, it is important to add the &lt;code&gt;NSSupportsAutomaticGraphicsSwitching&lt;/code&gt; option to the application Info.plist file, with the value set to &lt;code&gt;YES&lt;/code&gt;. Otherwise rendering issues might occur when creating new web engine view instances after Airplay is switched on or off.</source>
          <target state="translated">GPU 전환을 지원하는 MacBook에서 AppleTV로 스트리밍 할 때 Qt WebEngine이 제대로 작동하게하려면 &lt;code&gt;NSSupportsAutomaticGraphicsSwitching&lt;/code&gt; 옵션을 값이 &lt;code&gt;YES&lt;/code&gt; 로 설정된 응용 프로그램 Info.plist 파일 에 추가해야합니다 . 그렇지 않으면 Airplay를 켜거나 끈 후에 새 웹 엔진보기 인스턴스를 만들 때 렌더링 문제가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c2391383f6f75298e80a81c87ecb970ebe24674" translate="yes" xml:space="preserve">
          <source>To make a COM server available to the COM system it must be registered in the system registry using five unique identifiers. These identifiers are provided by tools like &lt;code&gt;guidgen&lt;/code&gt; or &lt;code&gt;uuidgen&lt;/code&gt;. The registration information allows COM to localize the binary providing a requested ActiveX control, marshall remote procedure calls to the control and read type information about the methods and properties exposed by the control.</source>
          <target state="translated">COM 시스템에서 COM 서버를 사용할 수있게하려면 5 개의 고유 식별자를 사용하여 시스템 레지스트리에 등록해야합니다. 이 식별자는 &lt;code&gt;guidgen&lt;/code&gt; 또는 &lt;code&gt;uuidgen&lt;/code&gt; 과 같은 도구로 제공됩니다 . 등록 정보를 통해 COM은 요청 된 ActiveX 컨트롤을 제공하는 바이너리를 지역화하고 원격 프로 시저 호출을 컨트롤에 마샬링하고 컨트롤에 의해 노출 된 메서드 및 속성에 대한 형식 정보를 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="527a2d83064ef702816d23b060084472147cd9e9" translate="yes" xml:space="preserve">
          <source>To make a connectionn, press the left mouse button and drag the cursor towards the object you want to connect it to. As you do this, a line will extend from the source object to the cursor. If the cursor is over another object on the form, the line will end with an arrow head that points to the destination object. This indicates that a connection will be made between the two objects when you release the mouse button.</source>
          <target state="translated">연결하려면 마우스 왼쪽 버튼을 누르고 커서를 연결하려는 객체쪽으로 끕니다. 이렇게하면 선이 소스 객체에서 커서로 확장됩니다. 커서가 양식의 다른 개체 위에 있으면 선은 대상 개체를 가리키는 화살표 머리로 끝납니다. 이것은 마우스 버튼을 놓을 때 두 객체 사이에 연결됨을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d7a75f30f4018587763ee8c6eec785aaf8a06f7d" translate="yes" xml:space="preserve">
          <source>To make a custom widget available to the loader, you can use the &lt;a href=&quot;quiloader#addPluginPath&quot;&gt;addPluginPath&lt;/a&gt;() function; to remove all available widgets, you can call the &lt;a href=&quot;quiloader#clearPluginPaths&quot;&gt;clearPluginPaths&lt;/a&gt;() function.</source>
          <target state="translated">로더에서 사용자 정의 위젯을 사용 가능하게하려면 &lt;a href=&quot;quiloader#addPluginPath&quot;&gt;addPluginPath&lt;/a&gt; () 함수를 사용할 수 있습니다 . 사용 가능한 모든 위젯을 제거하려면 &lt;a href=&quot;quiloader#clearPluginPaths&quot;&gt;clearPluginPaths&lt;/a&gt; () 함수를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1c6b702f1f707c0596f03022623d88a21de1a3b7" translate="yes" xml:space="preserve">
          <source>To make a sensible surface, the x-value of each successive item in all rows must be either ascending or descending throughout the row. Similarly, the z-value of each successive item in all columns must be either ascending or descending throughout the column.</source>
          <target state="translated">적절한 표면을 만들려면 모든 행에서 각 연속 항목의 x 값이 행 전체에서 오름차순 또는 내림차순이어야합니다. 마찬가지로 모든 열에서 각 연속 항목의 z- 값은 열 전체에서 오름차순 또는 내림차순이어야합니다.</target>
        </trans-unit>
        <trans-unit id="b46a6d10e5894afee0dba3a55b8ce5a45bc95ae9" translate="yes" xml:space="preserve">
          <source>To make it less abstract consider the following example:</source>
          <target state="translated">덜 추상적이려면 다음 예제를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="170c5b07d3e670d6bf05faa2c65ea4512b93d7b1" translate="yes" xml:space="preserve">
          <source>To make sure currency numbers are localized, use the &lt;a href=&quot;qml-qtqml-number&quot;&gt;Number&lt;/a&gt; type. This type has similar functions as the Date type for converting numbers into localized currency strings.</source>
          <target state="translated">통화 번호가 현지화되도록하려면 &lt;a href=&quot;qml-qtqml-number&quot;&gt;숫자&lt;/a&gt; 유형을 사용하십시오 . 이 유형에는 숫자를 현지화 된 통화 문자열로 변환하기위한 날짜 유형과 비슷한 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="efb6c3b4d0c4b7f83e2e07f01327fe69f8b85d1e" translate="yes" xml:space="preserve">
          <source>To make the Qt &lt;a href=&quot;qml-qtwebview-webview&quot;&gt;WebView&lt;/a&gt; module function correctly across all platforms, it is necessary to call &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView::initialize&lt;/a&gt;() right after creating the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instance.</source>
          <target state="translated">Qt &lt;a href=&quot;qml-qtwebview-webview&quot;&gt;WebView&lt;/a&gt; 모듈이 모든 플랫폼에서 올바르게 작동하도록 하려면 &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; 인스턴스를 생성 한 직후 &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView :: initialize&lt;/a&gt; () 를 호출 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="79b4186d0f0fa3cd385af1bc932cb6c9b4f030a2" translate="yes" xml:space="preserve">
          <source>To make the Qt WebView module function correctly across all platforms, it is necessary to call &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView::initialize&lt;/a&gt;() right after creating the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instance.</source>
          <target state="translated">Qt WebView 모듈이 모든 플랫폼에서 올바르게 작동하도록 하려면 &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; 인스턴스를 생성 한 직후에 &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView :: initialize&lt;/a&gt; () 를 호출 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="37f936b611480546a951d4166cbbe1139d4339c8" translate="yes" xml:space="preserve">
          <source>To make the Qt WebView module function correctly across all platforms, it's necessary to call &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView::initialize&lt;/a&gt;() before creating the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instance and before window's QPlatformOpenGLContext is created.</source>
          <target state="translated">Qt WebView 모듈이 모든 플랫폼에서 올바르게 작동하도록 하려면 &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; 인스턴스 를 생성 하기 전과 윈도우의 QPlatformOpenGLContext가 생성되기 전에 &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView :: initialize&lt;/a&gt; () 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1b6d13a263e47af71ff3489eb100003e76599e85" translate="yes" xml:space="preserve">
          <source>To make the Qt WebView module function correctly across all platforms, it's necessary to call &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView::initialize&lt;/a&gt;() right after creating the &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instance.</source>
          <target state="translated">Qt WebView 모듈이 모든 플랫폼에서 올바르게 작동하도록 하려면 &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; 인스턴스를 생성 한 직후 &lt;a href=&quot;qtwebview#initialize&quot;&gt;QtWebView :: initialize&lt;/a&gt; () 를 호출 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="5704123cb0c077229327d895044209de75e9bd34" translate="yes" xml:space="preserve">
          <source>To make the Trace rendering available in the keyboard, this type must be declared as the &lt;a href=&quot;qml-qtquick-virtualkeyboard-styles-keyboardstyle#traceCanvasDelegate-prop&quot;&gt;KeyboardStyle.traceCanvasDelegate&lt;/a&gt; component.</source>
          <target state="translated">키보드에서 추적 렌더링을 사용하려면이 유형을 &lt;a href=&quot;qml-qtquick-virtualkeyboard-styles-keyboardstyle#traceCanvasDelegate-prop&quot;&gt;KeyboardStyle.traceCanvasDelegate&lt;/a&gt; 구성 요소 로 선언해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f542db24c38af13df70727a404840376c4203fcf" translate="yes" xml:space="preserve">
          <source>To make the content of textures available for read and write operations in a shader, they need to exposed as QShaderImage. Textures can be composed of several mip levels, layers and faces. Additionally declaring a QShaderImage allows specifying which level, layer or face of the texture content we want to access.</source>
          <target state="translated">셰이더에서 읽기 및 쓰기 작업에 사용할 수있는 텍스처 콘텐츠를 만들려면 QShaderImage로 노출해야합니다. 텍스처는 여러 밉 레벨, 레이어 및면으로 구성 될 수 있습니다. 또한 QShaderImage를 선언하면 액세스하려는 텍스처 콘텐츠의 레벨, 레이어 또는면을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="262b888fdd02cde798df6f4abb6115ec06c54821" translate="yes" xml:space="preserve">
          <source>To make the content of textures available for read and write operations in a shader, they need to exposed as ShaderImage. Textures can be composed of several mip levels, layers and faces. Additionally declaring a ShaderImage allows specifying which level, layer or face of the texture content we want to access.</source>
          <target state="translated">셰이더에서 읽기 및 쓰기 작업에 텍스처 콘텐츠를 사용할 수 있도록하려면 ShaderImage로 노출해야합니다. 텍스처는 여러 밉 레벨, 레이어 및면으로 구성 될 수 있습니다. 또한 ShaderImage를 선언하면 액세스하려는 텍스처 콘텐츠의 레벨, 레이어 또는면을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97c1fc9dd562495f4d7641d29cde6f4019b4f85a" translate="yes" xml:space="preserve">
          <source>To make the process read EOF right away, pass &lt;a href=&quot;qprocess#nullDevice&quot;&gt;nullDevice&lt;/a&gt;() here. This is cleaner than using &lt;a href=&quot;qprocess#closeWriteChannel&quot;&gt;closeWriteChannel&lt;/a&gt;() before writing any data, because it can be set up prior to starting the process.</source>
          <target state="translated">프로세스가 EOF를 즉시 읽도록하려면 여기에 &lt;a href=&quot;qprocess#nullDevice&quot;&gt;nullDevice&lt;/a&gt; ()를 전달 하십시오. 프로세스를 시작하기 전에 설정할 수 있기 때문에 데이터를 쓰기 전에 &lt;a href=&quot;qprocess#closeWriteChannel&quot;&gt;closeWriteChannel&lt;/a&gt; ()을 사용하는 것보다 깨끗 합니다.</target>
        </trans-unit>
        <trans-unit id="48ae93d06a58b4cdb9ac9b01fd13498b5272f909" translate="yes" xml:space="preserve">
          <source>To make the properties bindable for the ActiveX client, use multiple inheritance from the &lt;a href=&quot;qaxbindable&quot;&gt;QAxBindable&lt;/a&gt; class:</source>
          <target state="translated">ActiveX 클라이언트에 대해 특성을 바인드 가능하게하려면 &lt;a href=&quot;qaxbindable&quot;&gt;QAxBindable&lt;/a&gt; 클래스의 다중 상속을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="600b894eb9b833ba411bf23e7a914f09d85785fc" translate="yes" xml:space="preserve">
          <source>To make the target global, the code above needs to be included into every subdirs subproject. In addition, to make these targets do anything, non-subdirs subprojects need to include respective code. The easiest way to achieve this is creating a custom feature file. For example:</source>
          <target state="translated">대상을 전역으로 만들려면 위의 코드를 모든 하위 디렉토리 하위 프로젝트에 포함시켜야합니다. 또한 이러한 대상이 무엇이든 수행하도록하려면 서브 서브가 아닌 서브 프로젝트는 각각의 코드를 포함해야합니다. 이를 달성하는 가장 쉬운 방법은 사용자 정의 기능 파일을 작성하는 것입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b33a5489ba287c8d947e06f865a21e6ead131d68" translate="yes" xml:space="preserve">
          <source>To make things easier for this example, the TimeExample source directory is in &lt;code&gt;imports/TimeExample&lt;/code&gt;, and we build &lt;a href=&quot;configure-options#source-build-and-install-directories&quot;&gt;in-source&lt;/a&gt;. However, the structure of the source directory is not so important, as the &lt;code&gt;qmldir&lt;/code&gt; file can specify paths to installed QML files.</source>
          <target state="translated">이 예제를보다 쉽게하기 위해 TimeExample 소스 디렉토리는 &lt;code&gt;imports/TimeExample&lt;/code&gt; 에 있으며 &lt;a href=&quot;configure-options#source-build-and-install-directories&quot;&gt;in-source를&lt;/a&gt; 빌드 합니다 . 그러나 &lt;code&gt;qmldir&lt;/code&gt; 파일이 설치된 QML 파일에 대한 경로를 지정할 수 있으므로 소스 디렉토리의 구조는 그다지 중요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="74bb33068f232a3d9bd51634644f169b20c96b53" translate="yes" xml:space="preserve">
          <source>To make this function available, you need to load the respective feature file:</source>
          <target state="translated">이 기능을 사용하려면 해당 기능 파일을로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="e74387758952d3004ccbc4dd34ebd5f60a42021a" translate="yes" xml:space="preserve">
          <source>To make this provider accessible to QML, it is registered with the QML engine with a &quot;colors&quot; identifier:</source>
          <target state="translated">이 제공자가 QML에 액세스 할 수 있도록하기 위해 &quot;컬러&quot;식별자를 사용하여 QML 엔진에 등록합니다.</target>
        </trans-unit>
        <trans-unit id="1e0e265f109902a6046589b5d07e2f5e3f9a47dc" translate="yes" xml:space="preserve">
          <source>To make this type available, we create a plugin class named &lt;code&gt;QExampleQmlPlugin&lt;/code&gt; which is a subclass of &lt;a href=&quot;qqmlextensionplugin&quot;&gt;QQmlExtensionPlugin&lt;/a&gt;. It overrides the &lt;a href=&quot;qqmlextensionplugin#registerTypes&quot;&gt;registerTypes()&lt;/a&gt; method in order to register the &lt;code&gt;TimeModel&lt;/code&gt; type using &lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType&lt;/a&gt;(). It also uses the &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt;() macro in the class definition to register the plugin with the Qt meta object system using a unique identifier for the plugin.</source>
          <target state="translated">이 유형을 사용 가능하게하기 위해 &lt;code&gt;QExampleQmlPlugin&lt;/code&gt; 의 서브 클래스 인 &lt;a href=&quot;qqmlextensionplugin&quot;&gt;QExampleQmlPlugin&lt;/a&gt; 이라는 플러그인 클래스를 작성합니다 . 이 재정의 &lt;a href=&quot;qqmlextensionplugin#registerTypes&quot;&gt;registerTypes ()&lt;/a&gt; 레지스터 위해 방법 &lt;code&gt;TimeModel&lt;/code&gt; 의 사용 유형 &lt;a href=&quot;qqmlengine#qmlRegisterType-1&quot;&gt;qmlRegisterType을&lt;/a&gt; (). 또한 클래스 정의에서 &lt;a href=&quot;#Q_PLUGIN_METADATA&quot;&gt;Q_PLUGIN_METADATA&lt;/a&gt; () 매크로를 사용하여 플러그인의 고유 식별자를 사용하여 Qt 메타 오브젝트 시스템에 플러그인을 등록합니다.</target>
        </trans-unit>
        <trans-unit id="ed67f435e7a8aae2a389d5b8cb54fb327ff71805" translate="yes" xml:space="preserve">
          <source>To make this work, the widget itself and</source>
          <target state="translated">이 작업을하려면 위젯 자체와</target>
        </trans-unit>
        <trans-unit id="7949e7edf2b9ee2a3c488efdb8536e66f5829953" translate="yes" xml:space="preserve">
          <source>To make use of all that, start your service as shown in &lt;a href=&quot;android-services#start-the-service&quot;&gt;Start the Service&lt;/a&gt;, an then register the broadcast receiver by calling the method &lt;code&gt;registerServiceBroadcastReceiver()&lt;/code&gt;:</source>
          <target state="translated">이 모든 것을 사용하려면 서비스 &lt;a href=&quot;android-services#start-the-service&quot;&gt;시작에&lt;/a&gt; 표시된대로 서비스를 시작한 다음 &lt;code&gt;registerServiceBroadcastReceiver()&lt;/code&gt; 메서드를 호출하여 브로드 캐스트 수신기를 등록합니다 .</target>
        </trans-unit>
        <trans-unit id="6e46a911b58cc1db1f40da4967591a42a3febe59" translate="yes" xml:space="preserve">
          <source>To make user-visible text translatable, it must be wrapped in calls to the &lt;a href=&quot;qobject#tr&quot;&gt;tr&lt;/a&gt;() function. This is explained in detail in the &lt;a href=&quot;i18n-source-translation&quot;&gt;Writing Source Code for Translation&lt;/a&gt; document.</source>
          <target state="translated">사용자가 볼 수있는 텍스트를 번역 가능하게하려면 &lt;a href=&quot;qobject#tr&quot;&gt;tr&lt;/a&gt; () 함수 를 호출하여 래핑해야합니다 . 자세한 내용은 &lt;a href=&quot;i18n-source-translation&quot;&gt;번역 용 소스 코드 작성&lt;/a&gt; 문서 에 자세히 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e9830802265edf981a47a23afe689395d24181dc" translate="yes" xml:space="preserve">
          <source>To make your application perform idle processing (by executing a special function whenever there are no pending events), use a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with 0 timeout. More advanced idle processing schemes can be achieved using &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="translated">보류중인 이벤트가 없을 때마다 특수 기능을 실행하여 응용 프로그램이 유휴 처리를 수행하도록하려면 타임 아웃이 0 인 &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; 를 사용하십시오 . &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt; ()를 사용하여 고급 유휴 처리 체계를 달성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e044a4360a53be2b4c9f91ae0a1f0ce3976a9723" translate="yes" xml:space="preserve">
          <source>To make your application perform idle processing (i.e. executing a special function whenever there are no pending events), use a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with 0 timeout. More sophisticated idle processing schemes can be achieved using &lt;a href=&quot;qeventloop#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="translated">응용 프로그램이 유휴 처리를 수행하게하려면 (즉, 보류중인 이벤트가 없을 때마다 특수 기능을 실행하려면) 타임 아웃이 0 인 &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; 를 사용하십시오 . &lt;a href=&quot;qeventloop#processEvents&quot;&gt;processEvents&lt;/a&gt; ()를 사용하여보다 정교한 유휴 처리 체계를 달성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9e8a38f8844c54226669e806536dde2590387109" translate="yes" xml:space="preserve">
          <source>To make your application perform idle processing, e.g., executing a special function whenever there are no pending events, use a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with 0 timeout. More advanced idle processing schemes can be achieved using &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="translated">보류중인 이벤트가 없을 때마다 특수 기능을 실행하는 등의 유휴 처리를 응용 프로그램에서 수행하려면 타임 아웃이 0 인 &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; 를 사용하십시오 . &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt; ()를 사용하여 고급 유휴 처리 체계를 달성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="074480ff18c26be3acf20c02c876cbf0ab872f4a" translate="yes" xml:space="preserve">
          <source>To make your application perform idle processing, i.e., executing a special function whenever there are no pending events, use a &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; with 0 timeout. More advanced idle processing schemes can be achieved using &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt;().</source>
          <target state="translated">대기중인 이벤트가 없을 때마다 응용 프로그램이 유휴 처리, 즉 특수 기능을 실행하도록하려면 시간 초과 가없는 &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; 를 사용하십시오 . &lt;a href=&quot;qcoreapplication#processEvents&quot;&gt;processEvents&lt;/a&gt; ()를 사용하여 고급 유휴 처리 체계를 달성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="74a77b956aceffc3c579e433de582461e71c0d9d" translate="yes" xml:space="preserve">
          <source>To make your own layout manager, implement the functions &lt;a href=&quot;qlayout#addItem&quot;&gt;addItem&lt;/a&gt;(), &lt;a href=&quot;qlayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;(), &lt;a href=&quot;qlayout#setGeometry&quot;&gt;setGeometry&lt;/a&gt;(), &lt;a href=&quot;qlayout#itemAt&quot;&gt;itemAt&lt;/a&gt;() and &lt;a href=&quot;qlayout#takeAt&quot;&gt;takeAt&lt;/a&gt;(). You should also implement &lt;a href=&quot;qlayout#minimumSize&quot;&gt;minimumSize&lt;/a&gt;() to ensure your layout isn't resized to zero size if there is too little space. To support children whose heights depend on their widths, implement &lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt;() and &lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt;(). See the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-borderlayout-example.html#&quot;&gt;Border Layout&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-flowlayout-example.html#&quot;&gt;Flow Layout&lt;/a&gt; examples for more information about implementing custom layout managers.</source>
          <target state="translated">자체 레이아웃 관리자를 만들려면 &lt;a href=&quot;qlayout#addItem&quot;&gt;addItem&lt;/a&gt; (), &lt;a href=&quot;qlayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt; (), &lt;a href=&quot;qlayout#setGeometry&quot;&gt;setGeometry&lt;/a&gt; (), &lt;a href=&quot;qlayout#itemAt&quot;&gt;itemAt&lt;/a&gt; () 및 &lt;a href=&quot;qlayout#takeAt&quot;&gt;takeAt&lt;/a&gt; () 함수를 구현하십시오 . 공간이 너무 작은 경우 레이아웃의 크기가 0으로 조정되지 않도록 &lt;a href=&quot;qlayout#minimumSize&quot;&gt;minimumSize&lt;/a&gt; ()를 구현해야 합니다. 높이가 너비에 의존하는 자식을 지원하려면 &lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt; () 및 &lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt; ()를 구현 하십시오 . 참고 항목 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-borderlayout-example.html#&quot;&gt;테두리 레이아웃&lt;/a&gt; 및 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-layouts-flowlayout-example.html#&quot;&gt;플로우 레이아웃&lt;/a&gt; 사용자 정의 레이아웃 매니저를 구현하는 방법에 대한 자세한 내용은 예를.</target>
        </trans-unit>
        <trans-unit id="4aeb7bb489e138301b473660fc5e72592445a0a7" translate="yes" xml:space="preserve">
          <source>To make your own layout manager, implement the functions &lt;a href=&quot;qlayout#addItem&quot;&gt;addItem&lt;/a&gt;(), &lt;a href=&quot;qlayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt;(), &lt;a href=&quot;qlayout#setGeometry&quot;&gt;setGeometry&lt;/a&gt;(), &lt;a href=&quot;qlayout#itemAt&quot;&gt;itemAt&lt;/a&gt;() and &lt;a href=&quot;qlayout#takeAt&quot;&gt;takeAt&lt;/a&gt;(). You should also implement &lt;a href=&quot;qlayout#minimumSize&quot;&gt;minimumSize&lt;/a&gt;() to ensure your layout isn't resized to zero size if there is too little space. To support children whose heights depend on their widths, implement &lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt;() and &lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt;(). See the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-layouts-borderlayout-example.html&quot;&gt;Border Layout&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-layouts-flowlayout-example.html&quot;&gt;Flow Layout&lt;/a&gt; examples for more information about implementing custom layout managers.</source>
          <target state="translated">자신 만의 레이아웃 관리자를 만들려면 &lt;a href=&quot;qlayout#addItem&quot;&gt;addItem&lt;/a&gt; (), &lt;a href=&quot;qlayoutitem#sizeHint&quot;&gt;sizeHint&lt;/a&gt; (), &lt;a href=&quot;qlayout#setGeometry&quot;&gt;setGeometry&lt;/a&gt; (), &lt;a href=&quot;qlayout#itemAt&quot;&gt;itemAt&lt;/a&gt; () 및 &lt;a href=&quot;qlayout#takeAt&quot;&gt;takeAt&lt;/a&gt; () 함수를 구현하십시오 . 또한 &lt;a href=&quot;qlayout#minimumSize&quot;&gt;최소 크기&lt;/a&gt; ()를 구현 하여 공간이 너무 적은 경우 레이아웃 크기가 0으로 조정되지 않도록해야합니다. 높이가 너비에 따라 달라지는 자식을 지원하려면 &lt;a href=&quot;qlayoutitem#hasHeightForWidth&quot;&gt;hasHeightForWidth&lt;/a&gt; () 및 &lt;a href=&quot;qlayoutitem#heightForWidth&quot;&gt;heightForWidth&lt;/a&gt; ()를 구현 합니다. 참고 항목 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-layouts-borderlayout-example.html&quot;&gt;테두리 레이아웃&lt;/a&gt; 및 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-layouts-flowlayout-example.html&quot;&gt;플로우 레이아웃&lt;/a&gt; 사용자 정의 레이아웃 매니저를 구현하는 방법에 대한 자세한 내용은 예를.</target>
        </trans-unit>
        <trans-unit id="860adb15edbf1341eeee302843d420b99f26e635" translate="yes" xml:space="preserve">
          <source>To make your project use precompiled headers, you only need to define the &lt;a href=&quot;qmake-variable-reference#precompiled-header&quot;&gt;PRECOMPILED_HEADER&lt;/a&gt; variable in your project file:</source>
          <target state="translated">프로젝트에서 사전 컴파일 된 헤더를 사용하려면 프로젝트 파일에서 &lt;a href=&quot;qmake-variable-reference#precompiled-header&quot;&gt;PRECOMPILED_HEADER&lt;/a&gt; 변수 만 정의하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="22f7f2fdcdb3aa5aa6e65a6e95e5ff852426627f" translate="yes" xml:space="preserve">
          <source>To mark a Qt class as licensed specify a &quot;LicenseKey&quot; using the &lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt;() macro.</source>
          <target state="translated">Qt 클래스를 라이센스가있는 것으로 표시하려면 &lt;a href=&quot;qobject#Q_CLASSINFO&quot;&gt;Q_CLASSINFO&lt;/a&gt; () 매크로를 사용하여 &quot;LicenseKey&quot;를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="d3a6d12e050bc056f11633e945b965e84bf792c2" translate="yes" xml:space="preserve">
          <source>To minimize compatibility issues, any &lt;code&gt;@&lt;/code&gt; that doesn't appear at the first position in the value or that isn't followed by a Qt type (&lt;code&gt;Point&lt;/code&gt;, &lt;code&gt;Rect&lt;/code&gt;, &lt;code&gt;Size&lt;/code&gt;, etc.) is treated as a normal character.</source>
          <target state="translated">호환성 문제를 최소화하기 위해 값의 첫 번째 위치에 나타나지 않거나 Qt 유형 ( &lt;code&gt;Point&lt;/code&gt; , &lt;code&gt;Rect&lt;/code&gt; , &lt;code&gt;Size&lt;/code&gt; 등)이 뒤 따르지 않는 &lt;code&gt;@&lt;/code&gt; 는 일반 문자로 취급됩니다.</target>
        </trans-unit>
        <trans-unit id="dbbc11591696f7475166d9111393a42ebd2f2511" translate="yes" xml:space="preserve">
          <source>To modify a color group you call the functions &lt;a href=&quot;qpalette#setColor&quot;&gt;setColor&lt;/a&gt;() and &lt;a href=&quot;qpalette#setBrush&quot;&gt;setBrush&lt;/a&gt;(), depending on whether you want a pure color or a pixmap pattern.</source>
          <target state="translated">색상 그룹을 수정하려면 순수한 색상을 원하는지 또는 픽스맵 패턴을 원하는지에 따라 함수 &lt;a href=&quot;qpalette#setColor&quot;&gt;setColor&lt;/a&gt; () 및 &lt;a href=&quot;qpalette#setBrush&quot;&gt;setBrush&lt;/a&gt; () 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="8c0e19c04b9168dc2f39467316ebef46d282a255" translate="yes" xml:space="preserve">
          <source>To modify array elements, use the &lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty(quint32 arrayIndex, const QJSValue &amp;amp;value)&lt;/a&gt; overload instead.</source>
          <target state="translated">배열 요소를 수정하려면 대신 &lt;a href=&quot;qjsvalue#setProperty-1&quot;&gt;setProperty (quint32 arrayIndex, const QJSValue &amp;amp; value)&lt;/a&gt; 오버로드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2af6400ae7389e6c602c4d02e24f0effc3196358" translate="yes" xml:space="preserve">
          <source>To modify the form settings, open the &lt;b&gt;Form&lt;/b&gt; menu and select &lt;b&gt;Form Settings...&lt;/b&gt;</source>
          <target state="translated">양식 설정을 수정하려면 &lt;b&gt;양식&lt;/b&gt; 메뉴를 열고 &lt;b&gt;양식 설정 ...을&lt;/b&gt; 선택하십시오 &lt;b&gt;.&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="ed9093ac86a35bc9b169d0053f66740ebfd8ec72" translate="yes" xml:space="preserve">
          <source>To modify the selection using the mouse, bind &lt;a href=&quot;qml-qtquick-pdf-pdfselection#fromPoint-prop&quot;&gt;fromPoint&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-pdf-pdfselection#toPoint-prop&quot;&gt;toPoint&lt;/a&gt; to the suitable properties of an input handler so that they will be set to the positions where the drag gesture begins and ends, respectively; and bind the &lt;a href=&quot;qml-qtquick-pdf-pdfselection#hold-prop&quot;&gt;hold&lt;/a&gt; property so that it will be set to &lt;code&gt;true&lt;/code&gt; during the drag gesture and &lt;code&gt;false&lt;/code&gt; when the gesture ends.</source>
          <target state="translated">마우스를 사용하여 선택을 수정하려면 &lt;a href=&quot;qml-qtquick-pdf-pdfselection#fromPoint-prop&quot;&gt;fromPoint&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-pdf-pdfselection#toPoint-prop&quot;&gt;toPoint&lt;/a&gt; 를 입력 처리기의 적절한 속성에 바인딩하여 각각 드래그 동작이 시작되고 끝나는 위치로 설정되도록합니다. 드래그 동작 중에는 &lt;code&gt;true&lt;/code&gt; 로 설정되고 동작이 종료되면 &lt;code&gt;false&lt;/code&gt; 로 설정되도록 &lt;a href=&quot;qml-qtquick-pdf-pdfselection#hold-prop&quot;&gt;hold&lt;/a&gt; 속성을 바인딩합니다 .</target>
        </trans-unit>
        <trans-unit id="ee2fca47d7b6422125613396699ae65387f0776f" translate="yes" xml:space="preserve">
          <source>To move a widget within a layout, hold down &lt;b&gt;Shift&lt;/b&gt; and &lt;b&gt;Control&lt;/b&gt; while dragging the widget. This extends the selection to the widget's parent layout.</source>
          <target state="translated">레이아웃 내에서 위젯을 이동하려면 위젯 을 드래그하는 동안 &lt;b&gt;Shift&lt;/b&gt; 및 &lt;b&gt;Control&lt;/b&gt; 을 누른 상태로 유지 하십시오. 이것은 선택을 위젯의 부모 레이아웃으로 확장합니다.</target>
        </trans-unit>
        <trans-unit id="f39318520116757e766814af45e16628a1efab6f" translate="yes" xml:space="preserve">
          <source>To move an object to the main thread, use &lt;a href=&quot;qcoreapplication#instance&quot;&gt;QApplication::instance&lt;/a&gt;() to retrieve a pointer to the current application, and then use &lt;a href=&quot;qobject#thread&quot;&gt;QApplication::thread&lt;/a&gt;() to retrieve the thread in which the application lives. For example:</source>
          <target state="translated">개체를 주 스레드로 이동하려면 &lt;a href=&quot;qcoreapplication#instance&quot;&gt;QApplication :: instance&lt;/a&gt; ()를 사용하여 현재 응용 프로그램에 대한 포인터를 검색 한 다음 &lt;a href=&quot;qobject#thread&quot;&gt;QApplication :: thread&lt;/a&gt; ()를 사용 하여 응용 프로그램이있는 스레드를 검색합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="d8a59e836851ee839a25c2abf177e213855dae62" translate="yes" xml:space="preserve">
          <source>To move an object to the main thread, use QApplication::instance() to retrieve a pointer to the current application, and then use QApplication::thread() to retrieve the thread in which the application lives. For example:</source>
          <target state="translated">주 스레드로 객체를 이동하려면 QApplication :: instance ()를 사용하여 현재 응용 프로그램에 대한 포인터를 검색 한 다음 QApplication :: thread ()를 사용하여 응용 프로그램이있는 스레드를 검색하십시오. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a1fc7d8930b7cb6ca6e370f2e45dedcbb8d058c0" translate="yes" xml:space="preserve">
          <source>To move rows within the same parent, specify the row to move them to.</source>
          <target state="translated">동일한 부모 내에서 행을 이동하려면 이동할 행을 지정하십시오.</target>
        </trans-unit>
        <trans-unit id="4cc90b9a72822229fc1d4dc495b6bcbcab697266" translate="yes" xml:space="preserve">
          <source>To navigate through a &lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt;, you can also use &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt;:</source>
          <target state="translated">&lt;a href=&quot;qset&quot;&gt;QSet&lt;/a&gt; 을 탐색하려면 &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt; 를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3f2c55e8197d44dfacd9cf997f97e3641d0dd98e" translate="yes" xml:space="preserve">
          <source>To navigate through a QSet, you can also use &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt;:</source>
          <target state="translated">QSet을 탐색하려면 &lt;a href=&quot;containers#foreach&quot;&gt;foreach&lt;/a&gt; 를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4c0017e1db6e61eef7631032130dc4955aff4cee" translate="yes" xml:space="preserve">
          <source>To obtain a list of substitutions use &lt;a href=&quot;qfont#substitutes&quot;&gt;substitutes&lt;/a&gt;().</source>
          <target state="translated">대체 목록을 얻으려면 &lt;a href=&quot;qfont#substitutes&quot;&gt;대체&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ed7652e1feb5d67022d95e8698bbafb050e81fde" translate="yes" xml:space="preserve">
          <source>To obtain a list of unique keys, where each key from the map only occurs once, use &lt;a href=&quot;qhash#uniqueKeys&quot;&gt;uniqueKeys&lt;/a&gt;().</source>
          <target state="translated">맵의 각 키가 한 번만 발생하는 고유 키 목록을 얻으려면 &lt;a href=&quot;qhash#uniqueKeys&quot;&gt;uniqueKeys&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="52798863d567b8726801f1b51967c5e6c3cddf37" translate="yes" xml:space="preserve">
          <source>To obtain a list of unique keys, where each key from the map only occurs once, use &lt;a href=&quot;qmap#uniqueKeys&quot;&gt;uniqueKeys&lt;/a&gt;().</source>
          <target state="translated">맵의 각 키가 한 번만 발생하는 고유 키 목록을 얻으려면 &lt;a href=&quot;qmap#uniqueKeys&quot;&gt;uniqueKeys&lt;/a&gt; ()를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="be5cb1c0f6c45ef422cd1e4d05c52d6c52c6eb5a" translate="yes" xml:space="preserve">
          <source>To obtain a model index that corresponds to an item of data, three properties must be specified to the model: a row number, a column number, and the model index of a parent item. The following sections describe and explain these properties in detail.</source>
          <target state="translated">데이터 항목에 해당하는 모델 색인을 얻으려면 행 번호, 열 번호 및 상위 항목의 모델 색인이라는 세 가지 특성을 모델에 지정해야합니다. 다음 섹션에서는 이러한 속성을 자세히 설명하고 설명합니다.</target>
        </trans-unit>
        <trans-unit id="7f6b89bf1afbacec850f7a44399ede13ee125170" translate="yes" xml:space="preserve">
          <source>To obtain a model index that refers to an existing item in a model, call &lt;a href=&quot;qabstractitemmodel#index&quot;&gt;QAbstractItemModel::index&lt;/a&gt;() with the required row and column values, and the model index of the parent. When referring to top-level items in a model, supply &lt;a href=&quot;qmodelindex#QModelIndex&quot;&gt;QModelIndex&lt;/a&gt;() as the parent index.</source>
          <target state="translated">모델의 기존 항목을 참조하는 모델 색인을 얻으려면 필수 행 및 열 값과 상위의 모델 색인을 사용하여 &lt;a href=&quot;qabstractitemmodel#index&quot;&gt;QAbstractItemModel :: index&lt;/a&gt; ()를 호출 하십시오. 모델에서 최상위 항목을 참조 할 때는 &lt;a href=&quot;qmodelindex#QModelIndex&quot;&gt;QModelIndex&lt;/a&gt; ()를 상위 인덱스로 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="596beaa1cacc0e84368c96579274f41e69c960dd" translate="yes" xml:space="preserve">
          <source>To obtain a model index that refers to an existing item in a model, call &lt;a href=&quot;qabstractitemmodel#index&quot;&gt;QAbstractItemModel::index&lt;/a&gt;() with the required row and column values, and the model index of the parent. When referring to top-level items in a model, supply QModelIndex() as the parent index.</source>
          <target state="translated">모델의 기존 항목을 참조하는 모델 인덱스를 얻으려면 필수 행 및 열 값과 부모의 모델 인덱스를 사용하여 &lt;a href=&quot;qabstractitemmodel#index&quot;&gt;QAbstractItemModel :: index&lt;/a&gt; ()를 호출 합니다. 모델의 최상위 항목을 참조 할 때 QModelIndex ()를 상위 인덱스로 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="160405715496d7f87445c5eebb0e973d3613cb42" translate="yes" xml:space="preserve">
          <source>To obtain a model index, we specify the row number, column number (zero for the first column), and the appropriate model index for the parent of all the items that we want. The text stored in each item is retrieved using the model's &lt;a href=&quot;qfilesystemmodel#data&quot;&gt;data()&lt;/a&gt; function. We specify the model index and the &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;DisplayRole&lt;/a&gt; to obtain data for the item in the form of a string.</source>
          <target state="translated">모델 인덱스를 얻기 위해 행 번호, 열 번호 (첫 번째 열의 경우 0) 및 원하는 모든 항목의 부모에 대한 적절한 모델 인덱스를 지정합니다. 각 항목에 저장된 텍스트는 모델의 &lt;a href=&quot;qfilesystemmodel#data&quot;&gt;data ()&lt;/a&gt; 함수를 사용하여 검색 됩니다. 모델 색인과 &lt;a href=&quot;qt#ItemDataRole-enum&quot;&gt;DisplayRole&lt;/a&gt; 을 지정하여 문자열 형식으로 항목에 대한 데이터를 얻습니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
