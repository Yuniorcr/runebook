<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="qt">
    <body>
      <group id="qt">
        <trans-unit id="fb567b4160b35699cf38f2293ae47d42663b1ece" translate="yes" xml:space="preserve">
          <source>Flags that alter behaviour are:</source>
          <target state="translated">동작을 변경하는 플래그는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e81e4feaf60f9305f78a7c1334ee9a60982a4a91" translate="yes" xml:space="preserve">
          <source>Flags that alter the behavior:</source>
          <target state="translated">동작을 변경하는 플래그 :</target>
        </trans-unit>
        <trans-unit id="1ae8cb3d760395a67a4bb95d1ec51a5dfb3015bd" translate="yes" xml:space="preserve">
          <source>Flags that are inappropriate for a given use are generally ignored.</source>
          <target state="translated">주어진 용도에 부적합한 플래그는 일반적으로 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="7b02420104fe4e337d09d5649f4390b4371e1dc8" translate="yes" xml:space="preserve">
          <source>Flags that restrict input (exclusive flags) are:</source>
          <target state="translated">입력을 제한하는 플래그 (독점 플래그)는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a9ef38aa9a40b5f74f50b68d833e8b1213c4566d" translate="yes" xml:space="preserve">
          <source>Flags that restrict input (exclusive flags):</source>
          <target state="translated">입력을 제한하는 플래그 (독점 플래그) :</target>
        </trans-unit>
        <trans-unit id="eba5a2241f0f9a42c8e40134e5365124c6143109" translate="yes" xml:space="preserve">
          <source>Flags to indicate how the &lt;a href=&quot;qt3danimation-qanimationcallback#valueChanged&quot;&gt;valueChanged&lt;/a&gt;() function is called.</source>
          <target state="translated">&lt;a href=&quot;qt3danimation-qanimationcallback#valueChanged&quot;&gt;valueChanged&lt;/a&gt; () 함수가 호출되는 방법을 나타내는 플래그 입니다.</target>
        </trans-unit>
        <trans-unit id="b62482236f533b5e0f245e716211965a8774a2f2" translate="yes" xml:space="preserve">
          <source>Flash</source>
          <target state="translated">Flash</target>
        </trans-unit>
        <trans-unit id="2639bd04d7caf9b9c328b1b3908db2c52c7b661e" translate="yes" xml:space="preserve">
          <source>Flash compensation, specified as qreal EV value.</source>
          <target state="translated">플래시 보정으로, qreal EV 값으로 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="766530d38bf7996c5c7dde7e1b1098aead27228e" translate="yes" xml:space="preserve">
          <source>Flash is Off.</source>
          <target state="translated">플래시가 꺼져 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd4f5c32593d6de1389d83bf36abd5d6014a25e3" translate="yes" xml:space="preserve">
          <source>Flash is On.</source>
          <target state="translated">플래시가 켜져 있습니다.</target>
        </trans-unit>
        <trans-unit id="b012b02fa04da76459cd21faf055ac1f38eb31aa" translate="yes" xml:space="preserve">
          <source>Flash override</source>
          <target state="translated">플래시 재정의</target>
        </trans-unit>
        <trans-unit id="16637bbbab8d4bb32fd4f7fffcdae680587bda2a" translate="yes" xml:space="preserve">
          <source>Flash power is manually set.</source>
          <target state="translated">플래시 전원이 수동으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="06a776cfe262f150abaeb337a263d5022b877837" translate="yes" xml:space="preserve">
          <source>Flash power is manualy set.</source>
          <target state="translated">플래시 전원이 수동으로 설정되었습니다.</target>
        </trans-unit>
        <trans-unit id="e800302e9c36aa02c29cfbe7f94b3617628dd9fe" translate="yes" xml:space="preserve">
          <source>Flash triggered item.</source>
          <target state="translated">플래시 트리거 항목.</target>
        </trans-unit>
        <trans-unit id="134a29e24767e922471bbe6c7d87831c46027243" translate="yes" xml:space="preserve">
          <source>Flash white balance mode.</source>
          <target state="translated">플래시 화이트 밸런스 모드.</target>
        </trans-unit>
        <trans-unit id="d323ed0d80b7c8f7d888d1e7bbb0774042e2d0f4" translate="yes" xml:space="preserve">
          <source>Flat Style</source>
          <target state="translated">플랫 스타일</target>
        </trans-unit>
        <trans-unit id="352b66ad5e070a3d55b86b4b3a0e1a479772575d" translate="yes" xml:space="preserve">
          <source>Flat shading for surfaces requires at least GLSL version 1.2 with GL_EXT_gpu_shader4 extension. If &lt;code&gt;true&lt;/code&gt;, flat shading for surfaces is supported.</source>
          <target state="translated">표면의 플랫 셰이딩에는 GL_EXT_gpu_shader4 확장을 가진 GLSL 버전 1.2 이상이 필요합니다. &lt;code&gt;true&lt;/code&gt; 인 경우 표면에 대한 평평한 음영이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="3f721624e7dd6bed98c4a6f0096aa3bc1a8feee1" translate="yes" xml:space="preserve">
          <source>Flexible Data-Rate</source>
          <target state="translated">유연한 데이터 속도</target>
        </trans-unit>
        <trans-unit id="021439db300a71973504284bdc85a029eb9afc3c" translate="yes" xml:space="preserve">
          <source>Flickable</source>
          <target state="translated">Flickable</target>
        </trans-unit>
        <trans-unit id="7a212d898d737398ef30c3bf676abf57e70a07bd" translate="yes" xml:space="preserve">
          <source>Flickable (QML type)</source>
          <target state="translated">플리커 블 (QML 타입)</target>
        </trans-unit>
        <trans-unit id="db20004ff03b559993797321e3801b183a9e4733" translate="yes" xml:space="preserve">
          <source>Flickable Direction</source>
          <target state="translated">플리커 블 방향</target>
        </trans-unit>
        <trans-unit id="f07d63f9cb8c69a6fd54cfbfb55b75aa0f8e3d15" translate="yes" xml:space="preserve">
          <source>Flickable QML Type</source>
          <target state="translated">플리커 블 QML 유형</target>
        </trans-unit>
        <trans-unit id="13254e890ce1d938f8286a1d9c9ca8a210a08004" translate="yes" xml:space="preserve">
          <source>Flickable Tabs</source>
          <target state="translated">플릭 블 탭</target>
        </trans-unit>
        <trans-unit id="c422906a111bf0c21ab1460aaa30e7bbdaed6aaf" translate="yes" xml:space="preserve">
          <source>Flickable does not automatically clip its contents. If it is not used as a full-screen item, you should consider setting the &lt;a href=&quot;qml-qtquick-item#clip-prop&quot;&gt;clip&lt;/a&gt; property to true.</source>
          <target state="translated">Flickable은 내용을 자동으로 자르지 않습니다. 전체 화면 항목으로 사용되지 않는 경우 &lt;a href=&quot;qml-qtquick-item#clip-prop&quot;&gt;clip&lt;/a&gt; 속성을 true로 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="ed2d091bc01db3a163c51c064f41645b1944d03b" translate="yes" xml:space="preserve">
          <source>Flickable.AutoFlickDirection</source>
          <target state="translated">Flickable.AutoFlickDirection</target>
        </trans-unit>
        <trans-unit id="7ddec50cb0d33e40af47e178016ec0fb8128452b" translate="yes" xml:space="preserve">
          <source>Flickable.AutoFlickDirection (default) - allows flicking vertically if the</source>
          <target state="translated">Flickable.AutoFlickDirection (기본값)-</target>
        </trans-unit>
        <trans-unit id="790870d5b5830245ed1ff5e149e573e3022ff472" translate="yes" xml:space="preserve">
          <source>Flickable.AutoFlickIfNeeded</source>
          <target state="translated">Flickable.AutoFlickIfNeeded</target>
        </trans-unit>
        <trans-unit id="275a49350fa019a73d4eb4dc7c6816a6b95d2a99" translate="yes" xml:space="preserve">
          <source>Flickable.AutoFlickIfNeeded - allows flicking vertically if the</source>
          <target state="translated">Flickable.AutoFlickIfNeeded-</target>
        </trans-unit>
        <trans-unit id="bc8bed669f57e12d6bbda63baaf27f4fea49939e" translate="yes" xml:space="preserve">
          <source>Flickable.DragAndOvershootBounds (default) - the contents can be dragged beyond the boundary of the Flickable, and can overshoot the boundary when flicked.</source>
          <target state="translated">Flickable.DragAndOvershootBounds (기본값)-내용을 Flickable의 경계 밖으로 드래그 할 수 있고 쓸어 넘을 때 경계를 초과 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ac7674a3caa4062f0f9e8e2776dd14a10eb5ec4" translate="yes" xml:space="preserve">
          <source>Flickable.DragOverBounds - the contents can be dragged beyond the boundary of the Flickable, but flicks will not overshoot.</source>
          <target state="translated">Flickable.DragOverBounds-내용을 Flickable의 경계 너머로 드래그 할 수 있지만 영화는 오버 슈트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0ce628d5e01f1913bcac655be2673a6fcff193c3" translate="yes" xml:space="preserve">
          <source>Flickable.FollowBoundsBehavior (default) - whether the contents follow drags or flicks beyond the bounds of the flickable is determined by &lt;a href=&quot;qml-qtquick-flickable#boundsBehavior-prop&quot;&gt;boundsBehavior&lt;/a&gt;.</source>
          <target state="translated">Flickable.FollowBoundsBehavior (기본값)-내용이 드래그 가능한 범위를 넘어 드래그하거나 &lt;a href=&quot;qml-qtquick-flickable#boundsBehavior-prop&quot;&gt;튕기는지&lt;/a&gt; 여부는 boundsBehavior에 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="050b12d95ea57dbcfe3458547b6b145296add5da" translate="yes" xml:space="preserve">
          <source>Flickable.Horizontal</source>
          <target state="translated">Flickable.Horizontal</target>
        </trans-unit>
        <trans-unit id="94c2d68a24371f93eaa89617400ab197b54b73cd" translate="yes" xml:space="preserve">
          <source>Flickable.HorizontalAndVerticalFlick - allows flicking in both directions.</source>
          <target state="translated">Flickable.HorizontalAndVerticalFlick-양방향으로 쓸어 넘길 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="087e1cb7becd88962d93900548133421ec9b5850" translate="yes" xml:space="preserve">
          <source>Flickable.HorizontalFlick - allows flicking horizontally.</source>
          <target state="translated">Flickable.HorizontalFlick-수평으로 쓸어 넘길 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="716d72f8c614ffcf11a8929dcabc4eedebaa4283" translate="yes" xml:space="preserve">
          <source>Flickable.OvershootBounds - the contents can overshoot the boundary when flicked, but the content cannot be dragged beyond the boundary of the flickable. (since &lt;code&gt;QtQuick 2.5&lt;/code&gt;)</source>
          <target state="translated">Flickable.OvershootBounds-넘길 때 내용이 경계를 넘칠 수 있지만 내용을 넘길 수있는 경계 밖으로 드래그 할 수는 없습니다. ( &lt;code&gt;QtQuick 2.5&lt;/code&gt; 부터 )</target>
        </trans-unit>
        <trans-unit id="eb97e0cd9cfdbacef4dd45616fd8b1ae87a57777" translate="yes" xml:space="preserve">
          <source>Flickable.StopAtBounds - the contents can not be dragged beyond the boundary of the flickable, and flicks will not overshoot.</source>
          <target state="translated">Flickable.StopAtBounds-내용을 긋기의 경계 밖으로 드래그 할 수 없으며 긋기는 오버 슈트되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5a8b43bd03fe4e45b3b715c8a5f814fc4c1135f8" translate="yes" xml:space="preserve">
          <source>Flickable.StopAtBounds - this allows implementing custom edge effects where the contents do not follow drags or flicks beyond the bounds of the flickable. The values of &lt;a href=&quot;qml-qtquick-flickable#horizontalOvershoot-prop&quot;&gt;horizontalOvershoot&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-flickable#verticalOvershoot-prop&quot;&gt;verticalOvershoot&lt;/a&gt; can be utilized to implement custom edge effects.</source>
          <target state="translated">Flickable.StopAtBounds-내용이 긋기의 경계를 넘어 드래그 또는 튕기기를 따르지 않는 사용자 지정 가장자리 효과를 구현할 수 있습니다. &lt;a href=&quot;qml-qtquick-flickable#horizontalOvershoot-prop&quot;&gt;horizontalOvershoot&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-flickable#verticalOvershoot-prop&quot;&gt;verticalOvershoot&lt;/a&gt; 값을 사용하여 사용자 정의 가장자리 효과를 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5452c9a2b933cd0e37e7e2821c7dabe88293668" translate="yes" xml:space="preserve">
          <source>Flickable.Vertical</source>
          <target state="translated">Flickable.Vertical</target>
        </trans-unit>
        <trans-unit id="c1b1862ee091b6cc39a0500a8a5c9e6a7715a6a7" translate="yes" xml:space="preserve">
          <source>Flickable.VerticalFlick - allows flicking vertically.</source>
          <target state="translated">Flickable.VerticalFlick-세로로 쓸어 넘길 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05654e8d4b7304a8a26879e52b33aafd16303e93" translate="yes" xml:space="preserve">
          <source>Flickable.atXBeginning</source>
          <target state="translated">Flickable.atXBeginning</target>
        </trans-unit>
        <trans-unit id="9d0304d4f67f7c9a85791dcba6313ed002787504" translate="yes" xml:space="preserve">
          <source>Flickable.bottomMargin</source>
          <target state="translated">Flickable.bottomMargin</target>
        </trans-unit>
        <trans-unit id="c4fc68a5c8efcb941facc952950121385c709790" translate="yes" xml:space="preserve">
          <source>Flickable.boundsBehavior</source>
          <target state="translated">Flickable.boundsBehavior</target>
        </trans-unit>
        <trans-unit id="83b166544d537869a6ff6420a14a37f16c0ab193" translate="yes" xml:space="preserve">
          <source>Flickable.boundsMovement</source>
          <target state="translated">Flickable.boundsMovement</target>
        </trans-unit>
        <trans-unit id="d0013487824fe227bced807e1c9b5165ccb4f193" translate="yes" xml:space="preserve">
          <source>Flickable.cancelFlick()</source>
          <target state="translated">Flickable.cancelFlick()</target>
        </trans-unit>
        <trans-unit id="a7f26a856b60dc7a680982f462f272e7f93dd102" translate="yes" xml:space="preserve">
          <source>Flickable.contentHeight</source>
          <target state="translated">Flickable.contentHeight</target>
        </trans-unit>
        <trans-unit id="6f32759d4da964f64575b089abed62d44eff979b" translate="yes" xml:space="preserve">
          <source>Flickable.contentItem</source>
          <target state="translated">Flickable.contentItem</target>
        </trans-unit>
        <trans-unit id="54138b59b1d034e98e60e76a466014efd4436e30" translate="yes" xml:space="preserve">
          <source>Flickable.contentWidth</source>
          <target state="translated">Flickable.contentWidth</target>
        </trans-unit>
        <trans-unit id="6c934e70c7279ce0b23d3317151f7f94745bfbd3" translate="yes" xml:space="preserve">
          <source>Flickable.contentX</source>
          <target state="translated">Flickable.contentX</target>
        </trans-unit>
        <trans-unit id="2a715c7de2a0525248632f295efdbe2e803873cc" translate="yes" xml:space="preserve">
          <source>Flickable.dragging</source>
          <target state="translated">Flickable.dragging</target>
        </trans-unit>
        <trans-unit id="719e87942d14bd99dd5b6016365108919a7b0b74" translate="yes" xml:space="preserve">
          <source>Flickable.flick()</source>
          <target state="translated">Flickable.flick()</target>
        </trans-unit>
        <trans-unit id="e6d53c22eede9fa046040d0f24e75593da7f19b8" translate="yes" xml:space="preserve">
          <source>Flickable.flickDeceleration</source>
          <target state="translated">Flickable.flickDeceleration</target>
        </trans-unit>
        <trans-unit id="148a0e4248306f80d489a7d15a0f0dce70bb7f14" translate="yes" xml:space="preserve">
          <source>Flickable.flickEnded()</source>
          <target state="translated">Flickable.flickEnded()</target>
        </trans-unit>
        <trans-unit id="48d4994a8373c50e82265d098dbdadcbd16fb8be" translate="yes" xml:space="preserve">
          <source>Flickable.flickStarted()</source>
          <target state="translated">Flickable.flickStarted()</target>
        </trans-unit>
        <trans-unit id="4b79c0fcf41f87d3627b97c9bd30f84237da19f7" translate="yes" xml:space="preserve">
          <source>Flickable.flickableDirection</source>
          <target state="translated">Flickable.flickableDirection</target>
        </trans-unit>
        <trans-unit id="0e8bab495d48685e5a063cb1ab90c129022aebde" translate="yes" xml:space="preserve">
          <source>Flickable.flicking</source>
          <target state="translated">Flickable.flicking</target>
        </trans-unit>
        <trans-unit id="3b4b3a6d803c9107faedd630bedb16a5c995c680" translate="yes" xml:space="preserve">
          <source>Flickable.groupvisibleArea.xPosition</source>
          <target state="translated">Flickable.groupvisibleArea.xPosition</target>
        </trans-unit>
        <trans-unit id="21c7856f07e93d3d1fdb102336bfb2fc763f2434" translate="yes" xml:space="preserve">
          <source>Flickable.horizontalOvershoot</source>
          <target state="translated">Flickable.horizontalOvershoot</target>
        </trans-unit>
        <trans-unit id="70bf9f6a33933ad23d3fbe8c162c6f13d3beab36" translate="yes" xml:space="preserve">
          <source>Flickable.horizontalVelocity</source>
          <target state="translated">Flickable.horizontalVelocity</target>
        </trans-unit>
        <trans-unit id="7d779f37e4964063e257ab2fe8abeaa7dc4a8cf7" translate="yes" xml:space="preserve">
          <source>Flickable.interactive</source>
          <target state="translated">Flickable.interactive</target>
        </trans-unit>
        <trans-unit id="2db6ba53945ae6c6505174851c59cd198a31668a" translate="yes" xml:space="preserve">
          <source>Flickable.maximumFlickVelocity</source>
          <target state="translated">Flickable.maximumFlickVelocity</target>
        </trans-unit>
        <trans-unit id="c4ec953837519a00a768dd2a84bad86cb4d2d7a9" translate="yes" xml:space="preserve">
          <source>Flickable.movementEnded()</source>
          <target state="translated">Flickable.movementEnded()</target>
        </trans-unit>
        <trans-unit id="6e7b1759bac6565b760b8efd72b637073a7d22ac" translate="yes" xml:space="preserve">
          <source>Flickable.movementStarted()</source>
          <target state="translated">Flickable.movementStarted()</target>
        </trans-unit>
        <trans-unit id="c3f0eaf58a935897fcd6e83d961dc473676b9d6b" translate="yes" xml:space="preserve">
          <source>Flickable.moving</source>
          <target state="translated">Flickable.moving</target>
        </trans-unit>
        <trans-unit id="1a2c6627fe754992ed81633a858b4dbb4104a66b" translate="yes" xml:space="preserve">
          <source>Flickable.originX</source>
          <target state="translated">Flickable.originX</target>
        </trans-unit>
        <trans-unit id="ac486e256a5fb5fd661a1d861b85b81e33e7d13a" translate="yes" xml:space="preserve">
          <source>Flickable.pixelAligned</source>
          <target state="translated">Flickable.pixelAligned</target>
        </trans-unit>
        <trans-unit id="bad22fdb79a224df52d256126cf3a7e7f44186ae" translate="yes" xml:space="preserve">
          <source>Flickable.pressDelay</source>
          <target state="translated">Flickable.pressDelay</target>
        </trans-unit>
        <trans-unit id="0f95db3fa3bd021bc02c289a5c66cec600a9a749" translate="yes" xml:space="preserve">
          <source>Flickable.rebound</source>
          <target state="translated">Flickable.rebound</target>
        </trans-unit>
        <trans-unit id="0a9e1620e7d447bbcc8d265dedbc58754f885d85" translate="yes" xml:space="preserve">
          <source>Flickable.resizeContent()</source>
          <target state="translated">Flickable.resizeContent()</target>
        </trans-unit>
        <trans-unit id="21efa19f0eddcc227f4f1c462e6f9e2e7f727e1c" translate="yes" xml:space="preserve">
          <source>Flickable.returnToBounds()</source>
          <target state="translated">Flickable.returnToBounds()</target>
        </trans-unit>
        <trans-unit id="93535c06a00e5f5a08d0d9825a0cf21cd341d71c" translate="yes" xml:space="preserve">
          <source>Flickable.synchronousDrag</source>
          <target state="translated">Flickable.synchronousDrag</target>
        </trans-unit>
        <trans-unit id="22a6ec6e9b6a3031df6f72535f23d091faffeb6f" translate="yes" xml:space="preserve">
          <source>Flickable.topMargin</source>
          <target state="translated">Flickable.topMargin</target>
        </trans-unit>
        <trans-unit id="0e4db4f8daccc246898a0313d9b4c6d5a3d68614" translate="yes" xml:space="preserve">
          <source>Flickable.verticalOvershoot</source>
          <target state="translated">Flickable.verticalOvershoot</target>
        </trans-unit>
        <trans-unit id="8a9cbd7a0fc56a62ac78eac1574fa4219c1cfaaf" translate="yes" xml:space="preserve">
          <source>Flickable.visibleArea.heightRatio</source>
          <target state="translated">Flickable.visibleArea.heightRatio</target>
        </trans-unit>
        <trans-unit id="aee0f8de4c7e4319a13ffab9ead51f29e123afac" translate="yes" xml:space="preserve">
          <source>Flicks the content with</source>
          <target state="translated">내용을 넘깁니다</target>
        </trans-unit>
        <trans-unit id="b7753eadb6a35c2df1e48f687f9ba894da3e79fc" translate="yes" xml:space="preserve">
          <source>Flip (QML type)</source>
          <target state="translated">뒤집기 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="8aaa7b7f0cc53cd74c9688db6077fb39f03565d6" translate="yes" xml:space="preserve">
          <source>Flip QML Type</source>
          <target state="translated">QML 유형 뒤집기</target>
        </trans-unit>
        <trans-unit id="9809ec18c7f1539f7347058b1b65803b3831317a" translate="yes" xml:space="preserve">
          <source>Flip.flipHorizontally</source>
          <target state="translated">Flip.flipHorizontally</target>
        </trans-unit>
        <trans-unit id="6738e199fb328af042905956ed6d87583f4f2b67" translate="yes" xml:space="preserve">
          <source>Flip.flipVertically</source>
          <target state="translated">Flip.flipVertically</target>
        </trans-unit>
        <trans-unit id="e7b3442700832f803af329fadb014711f75b9ad4" translate="yes" xml:space="preserve">
          <source>Flipable (QML type)</source>
          <target state="translated">뒤집기 가능 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="32acb0445ee2f8c2ef484b7cac54d73542657bf8" translate="yes" xml:space="preserve">
          <source>Flipable QML Type</source>
          <target state="translated">뒤집을 수있는 QML 유형</target>
        </trans-unit>
        <trans-unit id="79d4c0419b4fa952610971d4043dc98139923338" translate="yes" xml:space="preserve">
          <source>Flipable is an item that can be visibly &quot;flipped&quot; between its front and back sides, like a card. It may used together with &lt;a href=&quot;qml-qtquick-rotation&quot;&gt;Rotation&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; types to produce a flipping effect.</source>
          <target state="translated">Flipable은 카드처럼 앞면과 뒷면 사이에 눈에 띄게 &quot;플립&quot;될 수있는 항목입니다. 뒤집기 효과를 내기 위해 &lt;a href=&quot;qml-qtquick-rotation&quot;&gt;Rotation&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt; 및 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; 유형 과 함께 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9b75ca4e63cd5e6e140a8584c9ba7323eab99ae4" translate="yes" xml:space="preserve">
          <source>Flipable is an item that can be visibly &quot;flipped&quot; between its front and back sides, like a card. It may used together with &lt;a href=&quot;qml-qtquick-rotation&quot;&gt;Rotation&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-5.15/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; types to produce a flipping effect.</source>
          <target state="translated">Flipable은 카드처럼 앞면과 뒷면 사이에서 눈에 띄게 &quot;뒤집어 질&quot;수있는 항목입니다. &lt;a href=&quot;qml-qtquick-rotation&quot;&gt;회전&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-state&quot;&gt;상태&lt;/a&gt; 및 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qmlexampletoggleswitch.html#transition&quot;&gt;전환&lt;/a&gt; 유형 과 함께 사용 하여 뒤집기 효과를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="37fc9d35fa0890d4fa5704c51c23dbacc29e517f" translate="yes" xml:space="preserve">
          <source>Flipable is an item that can be visibly &quot;flipped&quot; between its front and back sides, like a card. It may used together with &lt;a href=&quot;qml-qtquick-rotation&quot;&gt;Rotation&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt; and &lt;a href=&quot;https://doc.qt.io/qt-6.0/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; types to produce a flipping effect.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a2006c10709b8aebac9388c0cdf7bed560153cee" translate="yes" xml:space="preserve">
          <source>Flipable.back</source>
          <target state="translated">Flipable.back</target>
        </trans-unit>
        <trans-unit id="fe562059af4a79eaaaa32da969543760890345a6" translate="yes" xml:space="preserve">
          <source>Flipable.front</source>
          <target state="translated">Flipable.front</target>
        </trans-unit>
        <trans-unit id="4e96ee49ac9d3c5100821bfd1267255703858495" translate="yes" xml:space="preserve">
          <source>Flipable.side</source>
          <target state="translated">Flipable.side</target>
        </trans-unit>
        <trans-unit id="64435fd82de7b1d614dfb9844848a48b14c6cd2c" translate="yes" xml:space="preserve">
          <source>Float</source>
          <target state="translated">Float</target>
        </trans-unit>
        <trans-unit id="f444b15d87da618115155302f7f6d9b1cc0996f4" translate="yes" xml:space="preserve">
          <source>Floating Point Instructions</source>
          <target state="translated">부동 소수점 명령어</target>
        </trans-unit>
        <trans-unit id="536211e97e89cb84ecf82db45adc7fdaeb6ce235" translate="yes" xml:space="preserve">
          <source>Floating point values should be as small as possible. &lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt; will not convert floating point values; it is up to the developer to perform this check prior to calling &lt;a href=&quot;qcborstreamwriter#append&quot;&gt;append&lt;/a&gt;() (see those functions' examples).</source>
          <target state="translated">부동 소수점 값은 가능한 작아야합니다. &lt;a href=&quot;qcborstreamwriter&quot;&gt;QCborStreamWriter&lt;/a&gt; 는 부동 소수점 값을 변환하지 않습니다. &lt;a href=&quot;qcborstreamwriter#append&quot;&gt;append&lt;/a&gt; () 를 호출하기 전에이 검사를 수행하는 것은 개발자의 책임입니다 (해당 함수의 예 참조).</target>
        </trans-unit>
        <trans-unit id="e21769dd90e66a59a80270b44fc75a878686b72f" translate="yes" xml:space="preserve">
          <source>Floating point values should be as small as possible. QCborStreamWriter will not convert floating point values; it is up to the developer to perform this check prior to calling &lt;a href=&quot;qcborstreamwriter#append&quot;&gt;append&lt;/a&gt;() (see those functions' examples).</source>
          <target state="translated">부동 소수점 값은 가능한 한 작아야합니다. QCborStreamWriter는 부동 소수점 값을 변환하지 않습니다. &lt;a href=&quot;qcborstreamwriter#append&quot;&gt;append&lt;/a&gt; () 를 호출하기 전에이 검사를 수행하는 것은 개발자에게 달려 있습니다 (해당 함수의 예제 참조).</target>
        </trans-unit>
        <trans-unit id="5e7f98702bee1a1c9b7604bdb899e39cbf16501e" translate="yes" xml:space="preserve">
          <source>Floating-point numbers are currently not supported.</source>
          <target state="translated">부동 소수점 숫자는 현재 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9fbab11df33a890afeed98eae5fccdb79a47d486" translate="yes" xml:space="preserve">
          <source>Floor reflectivity.</source>
          <target state="translated">바닥 반사율.</target>
        </trans-unit>
        <trans-unit id="86eff8eb789b097ddca83f2c9c4617ed23605105" translate="yes" xml:space="preserve">
          <source>Flow</source>
          <target state="translated">Flow</target>
        </trans-unit>
        <trans-unit id="295a51fbaad41a741e2991501d7d79a4e025afe5" translate="yes" xml:space="preserve">
          <source>Flow (QML type)</source>
          <target state="translated">흐름 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="7a8f621d54cb481506e1547c33a0729fb9bedee5" translate="yes" xml:space="preserve">
          <source>Flow Items</source>
          <target state="translated">흐름 항목</target>
        </trans-unit>
        <trans-unit id="27cd61c1dd5a614bc0638291b1b7213a09ceb04a" translate="yes" xml:space="preserve">
          <source>Flow Layout Example</source>
          <target state="translated">흐름 레이아웃 예</target>
        </trans-unit>
        <trans-unit id="7da905737516bead8c58bc6604ccdbc5a6a95e4e" translate="yes" xml:space="preserve">
          <source>Flow QML Type</source>
          <target state="translated">흐름 QML 유형</target>
        </trans-unit>
        <trans-unit id="d4d8b5e1c6355e0e5576bc84c8d33b24a2d64270" translate="yes" xml:space="preserve">
          <source>Flow items arrange items in a similar way to &lt;a href=&quot;qml-qtquick-grid&quot;&gt;Grid&lt;/a&gt; items, with items arranged in lines along one axis (the minor axis), and lines of items placed next to each other along another axis (the major axis). The direction of flow, as well as the spacing between items, are controlled by the &lt;a href=&quot;qml-qtquick-flow#flow-prop&quot;&gt;flow&lt;/a&gt; and &lt;a href=&quot;qml-qtquick-flow#spacing-prop&quot;&gt;spacing&lt;/a&gt; properties.</source>
          <target state="translated">흐름 항목 은 항목을 하나의 축 (부축)을 따라 선으로 정렬하고 항목의 선을 다른 축 (주축)을 따라 서로 옆에 배치 하여 &lt;a href=&quot;qml-qtquick-grid&quot;&gt;그리드&lt;/a&gt; 항목 과 유사한 방식 으로 항목을 정렬합니다. 흐름 방향과 항목 간 간격은 &lt;a href=&quot;qml-qtquick-flow#flow-prop&quot;&gt;흐름&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-flow#spacing-prop&quot;&gt;간격&lt;/a&gt; 속성에 의해 제어됩니다 .</target>
        </trans-unit>
        <trans-unit id="dcee8ba097a99b17751fbacd7a4df265feb79301" translate="yes" xml:space="preserve">
          <source>Flow typically positions its children once per frame. This means that inside script blocks it is possible for the underlying children to have changed, but the Flow to have not yet been updated accordingly.</source>
          <target state="translated">흐름은 일반적으로 자식을 프레임 당 한 번씩 배치합니다. 이는 스크립트 블록 내부에서 기본 하위가 변경 될 수 있지만 플로우는 아직 그에 따라 업데이트되지 않았 음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="56771db1961046448899241a0c6db51eff1cf119" translate="yes" xml:space="preserve">
          <source>Flow.LeftToRight (default) - Items are positioned next to to each other according to the &lt;a href=&quot;qml-qtquick-flow#layoutDirection-prop&quot;&gt;layoutDirection&lt;/a&gt; until the width of the Flow is exceeded, then wrapped to the next line.</source>
          <target state="translated">Flow.LeftToRight (기본값) &lt;a href=&quot;qml-qtquick-flow#layoutDirection-prop&quot;&gt;-Flow&lt;/a&gt; 의 너비가 초과 될 때까지 layoutDirection 에 따라 항목이 서로 나란히 배치 된 후 다음 줄로 줄 바꿈됩니다.</target>
        </trans-unit>
        <trans-unit id="f5b5b32ea07b05abe74250f048f1b669ead1113e" translate="yes" xml:space="preserve">
          <source>Flow.TopToBottom - Items are positioned next to each other from top to bottom until the height of the Flow is exceeded, then wrapped to the next column.</source>
          <target state="translated">Flow.TopToBottom-흐름의 높이가 초과 될 때까지 항목이 서로 아래로 배치 된 후 다음 열로 줄 바꿈됩니다.</target>
        </trans-unit>
        <trans-unit id="086d19b08c20fd6e75567b9d617b320bb372f5b2" translate="yes" xml:space="preserve">
          <source>Flow.add</source>
          <target state="translated">Flow.add</target>
        </trans-unit>
        <trans-unit id="3a73346af9e7dbc0c25c340243920d3eb964a42d" translate="yes" xml:space="preserve">
          <source>Flow.bottomPadding</source>
          <target state="translated">Flow.bottomPadding</target>
        </trans-unit>
        <trans-unit id="da348039a44be2569aa6c3ee39c175ab7411dee6" translate="yes" xml:space="preserve">
          <source>Flow.effectiveLayoutDirection</source>
          <target state="translated">Flow.effectiveLayoutDirection</target>
        </trans-unit>
        <trans-unit id="9996e8e3f12c998a02e969bac07ce79a80c3348a" translate="yes" xml:space="preserve">
          <source>Flow.flow</source>
          <target state="translated">Flow.flow</target>
        </trans-unit>
        <trans-unit id="5732ea7affb80a4cf36d42415cc13713216600f9" translate="yes" xml:space="preserve">
          <source>Flow.forceLayout()</source>
          <target state="translated">Flow.forceLayout()</target>
        </trans-unit>
        <trans-unit id="b5ea08f110dd30cb3cda451281c426f18e27562c" translate="yes" xml:space="preserve">
          <source>Flow.layoutDirection</source>
          <target state="translated">Flow.layoutDirection</target>
        </trans-unit>
        <trans-unit id="76a45db36eb0d5dd766e0b6f7b48025dd12601d4" translate="yes" xml:space="preserve">
          <source>Flow.move</source>
          <target state="translated">Flow.move</target>
        </trans-unit>
        <trans-unit id="1fe779ca2be4d02fef4c0d275dafd68de5893169" translate="yes" xml:space="preserve">
          <source>Flow.padding</source>
          <target state="translated">Flow.padding</target>
        </trans-unit>
        <trans-unit id="2bf6b2b121436239b4d251acc469b6a963e3f024" translate="yes" xml:space="preserve">
          <source>Flow.populate</source>
          <target state="translated">Flow.populate</target>
        </trans-unit>
        <trans-unit id="6ef1335090afbbcbfebe7fd47942f0557da7fe7c" translate="yes" xml:space="preserve">
          <source>Flow.positioningComplete()</source>
          <target state="translated">Flow.positioningComplete()</target>
        </trans-unit>
        <trans-unit id="212654f4130fd01385174e1e953cf35eeafc654f" translate="yes" xml:space="preserve">
          <source>Flow.spacing</source>
          <target state="translated">Flow.spacing</target>
        </trans-unit>
        <trans-unit id="6be53a85a0f3db0c76e4d5805cb2a93f23b2feed" translate="yes" xml:space="preserve">
          <source>Fluent interface</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a22cbeb95c9f0d6d71803fb9e963f9cb3e55fb82" translate="yes" xml:space="preserve">
          <source>Fluorescent white balance mode.</source>
          <target state="translated">형광 화이트 밸런스 모드.</target>
        </trans-unit>
        <trans-unit id="cd60574400e3e501123709539035f9ccb93e389a" translate="yes" xml:space="preserve">
          <source>Flushes any buffered data to the file. Returns &lt;code&gt;true&lt;/code&gt; if successful; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">버퍼링 된 데이터를 파일로 플러시합니다. 성공하면 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="4726322706e132bed2a7b87468f8da4a9d410f08" translate="yes" xml:space="preserve">
          <source>Flushes any buffered data waiting to be written to the device.</source>
          <target state="translated">장치에 쓰기를 기다리는 버퍼링 된 데이터를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="96840ae64c9ae384cf6c9c1a970fc6812806f60d" translate="yes" xml:space="preserve">
          <source>Flushes any pending data to be written and destroys the debug stream.</source>
          <target state="translated">기록 할 보류중인 데이터를 플러시하고 디버그 스트림을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="941bad4911ad4072d26620bf97485ebf8cf1d54a" translate="yes" xml:space="preserve">
          <source>Flushes the given</source>
          <target state="translated">주어진 플러시</target>
        </trans-unit>
        <trans-unit id="127b68898f298296462acd81db0d3bf698c118ac" translate="yes" xml:space="preserve">
          <source>Flushes the internal cache of authentication data and network connections.</source>
          <target state="translated">인증 데이터 및 네트워크 연결의 내부 캐시를 플러시합니다.</target>
        </trans-unit>
        <trans-unit id="fd2cbbefcc9982d2f7408e4adb60aa0224ab1fa1" translate="yes" xml:space="preserve">
          <source>Flushes the internal cache of network connections. In contrast to &lt;a href=&quot;qnetworkaccessmanager#clearAccessCache&quot;&gt;clearAccessCache&lt;/a&gt;() the authentication data is preserved.</source>
          <target state="translated">네트워크 연결의 내부 캐시를 플러시합니다. &lt;a href=&quot;qnetworkaccessmanager#clearAccessCache&quot;&gt;clearAccessCache&lt;/a&gt; () 와 달리 인증 데이터는 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="62a6890dce705f4ae25cd3f483377f74448d0ce8" translate="yes" xml:space="preserve">
          <source>Flushes the painting pipeline and prepares for the user issuing commands directly to the underlying graphics context. Must be followed by a call to &lt;a href=&quot;qpainter#endNativePainting&quot;&gt;endNativePainting&lt;/a&gt;().</source>
          <target state="translated">페인팅 파이프 라인을 플러시하고 사용자가 기본 그래픽 컨텍스트에 직접 명령을 내 리도록 준비합니다. &lt;a href=&quot;qpainter#endNativePainting&quot;&gt;endNativePainting&lt;/a&gt; ()을 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6038e09f2d0701dcb4940f29198423241e4c98f0" translate="yes" xml:space="preserve">
          <source>Focal Length (perspective camera only).</source>
          <target state="translated">초점 거리 (원근 카메라 만 해당).</target>
        </trans-unit>
        <trans-unit id="895e3be7be4bf4c9172c8d12f40dc73c354e1a87" translate="yes" xml:space="preserve">
          <source>FocalLength</source>
          <target state="translated">FocalLength</target>
        </trans-unit>
        <trans-unit id="a8f2adfaaeb02ee5ddf22f156910b601670415c9" translate="yes" xml:space="preserve">
          <source>FocalLengthIn35mmFilm</source>
          <target state="translated">FocalLengthIn35mmFilm</target>
        </trans-unit>
        <trans-unit id="dba7dacdbc61b2a5bd5f9d25c72afac06bd93830" translate="yes" xml:space="preserve">
          <source>Focus Handling; It is possible to let the window container instance have any focus policy and it will delegate focus to the window via a call to &lt;a href=&quot;qwindow#requestActivate&quot;&gt;QWindow::requestActivate&lt;/a&gt;(). However, returning to the normal focus chain from the &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; instance will be up to the &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; instance implementation itself. For instance, when entering a Qt Quick based window with tab focus, it is quite likely that further tab presses will only cycle inside the QML application. Also, whether &lt;a href=&quot;qwindow#requestActivate&quot;&gt;QWindow::requestActivate&lt;/a&gt;() actually gives the window focus, is platform dependent.</source>
          <target state="translated">초점 처리; 윈도우 컨테이너 인스턴스가 포커스 정책을 &lt;a href=&quot;qwindow#requestActivate&quot;&gt;갖도록&lt;/a&gt; 할 수 있으며 QWindow :: requestActivate () 호출을 통해 포커스를 윈도우에 위임 합니다. 그러나 &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; 인스턴스 에서 일반 포커스 체인으로 돌아가는 것은 &lt;a href=&quot;qwindow&quot;&gt;QWindow&lt;/a&gt; 인스턴스 구현 자체에 달려 있습니다. 예를 들어, 탭 포커스가있는 Qt Quick 기반 창에 들어갈 때 추가 탭을 누르면 QML 응용 프로그램 내에서만 순환 할 가능성이 높습니다. 또한 &lt;a href=&quot;qwindow#requestActivate&quot;&gt;QWindow :: requestActivate&lt;/a&gt; ()가 실제로 창 포커스를 제공 하는지 여부 는 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="c16b6705e02087cef742563eda34a05dc22aefbd" translate="yes" xml:space="preserve">
          <source>Focus Management in Qt Quick Controls</source>
          <target state="translated">Qt 퀵 컨트롤의 포커스 관리</target>
        </trans-unit>
        <trans-unit id="8e4e5710ed2486284a6599337630bd1b4aca03a0" translate="yes" xml:space="preserve">
          <source>Focus Management in Qt Quick Controls 2</source>
          <target state="translated">Qt 퀵 컨트롤 2의 포커스 관리</target>
        </trans-unit>
        <trans-unit id="f64ed90aa60cff75ba858eae23d26aa7b2f240b7" translate="yes" xml:space="preserve">
          <source>Focus Motion</source>
          <target state="translated">포커스 모션</target>
        </trans-unit>
        <trans-unit id="94e912768716cb25f9147d247389c98a28469e0d" translate="yes" xml:space="preserve">
          <source>Focus Scope Controls</source>
          <target state="translated">초점 범위 컨트롤</target>
        </trans-unit>
        <trans-unit id="ca9dfdee02569d7654dc94eab1d3461a2f646845" translate="yes" xml:space="preserve">
          <source>Focus and Key Events</source>
          <target state="translated">포커스 및 주요 이벤트</target>
        </trans-unit>
        <trans-unit id="81be86a557992fb9b701438d3d24618391c95323" translate="yes" xml:space="preserve">
          <source>Focus changes in response to a mouse press. You can reimplement &lt;a href=&quot;qgraphicsscene#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt;() in a subclass of &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; to toggle this property based on where the user has clicked.</source>
          <target state="translated">마우스를 누르면 포커스가 변경됩니다. &lt;a href=&quot;qgraphicsscene&quot;&gt;QGraphicsScene&lt;/a&gt; 의 서브 클래스에서 &lt;a href=&quot;qgraphicsscene#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt; ()를 다시 구현 하여 사용자가 클릭 한 위치 에 따라이 특성을 토글 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed52cbf67cf398e4dd52c212105ceae204cd6e12" translate="yes" xml:space="preserve">
          <source>Focus events are sent to widgets when the keyboard input focus changes. Focus events occur due to mouse actions, key presses (such as &lt;b&gt;Tab&lt;/b&gt; or &lt;b&gt;Backtab&lt;/b&gt;), the window system, popup menus, keyboard shortcuts, or other application-specific reasons. The reason for a particular focus event is returned by &lt;a href=&quot;qfocusevent#reason&quot;&gt;reason&lt;/a&gt;() in the appropriate event handler.</source>
          <target state="translated">키보드 입력 포커스가 변경되면 포커스 이벤트가 위젯으로 전송됩니다. 마우스 동작, 키 누르기 (예 : &lt;b&gt;Tab&lt;/b&gt; 또는 &lt;b&gt;Backtab&lt;/b&gt; ), 창 시스템, 팝업 메뉴, 키보드 바로 가기 또는 기타 응용 프로그램 별 이유로 인해 포커스 이벤트가 발생합니다 . 특정 포커스 이벤트에 대한 &lt;a href=&quot;qfocusevent#reason&quot;&gt;이유&lt;/a&gt; 는 적절한 이벤트 핸들러에서 reason ()에 의해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="3e76e7c72de1e210973cfc0cd638926496e6b101" translate="yes" xml:space="preserve">
          <source>Focus frame that is style controlled.</source>
          <target state="translated">스타일이 제어되는 초점 프레임.</target>
        </trans-unit>
        <trans-unit id="0f3e4fb6cc742dd3e839e4f2c4f433a6881f3a7d" translate="yes" xml:space="preserve">
          <source>Focus frame which can be outside of a widget's normal paintable area</source>
          <target state="translated">위젯의 일반 페인트 가능 영역 외부에있을 수있는 초점 프레임</target>
        </trans-unit>
        <trans-unit id="f5dc70b53f982f312854c84f6e6f4dfc69740ca7" translate="yes" xml:space="preserve">
          <source>Focus in events are sent when the window receives keyboard focus.</source>
          <target state="translated">창에 키보드 포커스가 수신되면 포커스 이벤트가 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="7d1ce78abe8a4c347b9898ff0bc61cdeace2232f" translate="yes" xml:space="preserve">
          <source>Focus is given to the view whenever a navigation operation occurs (load, stop, reload, reload and bypass cache, forward, backward, set content, and so on).</source>
          <target state="translated">탐색 조작이 발생할 때마다 (로드, 중지, 다시로드, 캐시 다시로드 및 우회, 앞으로, 뒤로, 컨텐츠 설정 등)보기에 초점이 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="7856be70e1616365045e54e3ec1676bc12576372" translate="yes" xml:space="preserve">
          <source>Focus on faces in the frame.</source>
          <target state="translated">프레임의 얼굴에 초점을 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="1da1ac4fbce8b70aad0c62ed7ff5400765bd4807" translate="yes" xml:space="preserve">
          <source>Focus out events are sent when the window loses keyboard focus.</source>
          <target state="translated">창에서 키보드 포커스를 잃으면 포커스 아웃 이벤트가 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="97a8100d5932ffdb057aae5412f77bdcb656177d" translate="yes" xml:space="preserve">
          <source>Focus scopes allow focus to allocation to be easily partitioned. Several QML items use it to this effect.</source>
          <target state="translated">포커스 범위를 통해 포커스를 쉽게 분할 할 수 있습니다. 여러 QML 항목이이 효과를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="da6c3a6795caa56fb1307a4ffbf75a5e0705e314" translate="yes" xml:space="preserve">
          <source>Focus scopes assist in keyboard focus handling when building reusable QML components. All the details are covered in the &lt;a href=&quot;qtquick-input-focus&quot;&gt;keyboard focus documentation&lt;/a&gt;.</source>
          <target state="translated">포커스 범위는 재사용 가능한 QML 구성 요소를 빌드 할 때 키보드 포커스 처리를 지원합니다. 모든 세부 사항은 &lt;a href=&quot;qtquick-input-focus&quot;&gt;키보드 포커스 문서&lt;/a&gt; 에서 다룹니다 .</target>
        </trans-unit>
        <trans-unit id="5d40e593b36733407c2dd6864fb2cba037aeed79" translate="yes" xml:space="preserve">
          <source>Focus scopes assist in keyboard focus handling when building reusable QML components. All the details are covered in the &lt;a href=&quot;qtquick-input-focus#&quot;&gt;keyboard focus documentation&lt;/a&gt;.</source>
          <target state="translated">포커스 범위는 재사용 가능한 QML 컴포넌트를 빌드 할 때 키보드 포커스 처리를 지원합니다. 자세한 내용은 &lt;a href=&quot;qtquick-input-focus#&quot;&gt;키보드 포커스 설명서를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e58b719d262cf3b0240518668922a86cfc24083d" translate="yes" xml:space="preserve">
          <source>Focus strictly to infinity.</source>
          <target state="translated">무한대에 집중하십시오.</target>
        </trans-unit>
        <trans-unit id="c2afa4ffe5991aa2836c13a2e74c7b5ae332a8ed" translate="yes" xml:space="preserve">
          <source>Focus to hyperfocal distance, with the maximum depth of field achieved. All objects at distances from half of this distance out to infinity will be acceptably sharp.</source>
          <target state="translated">최대 피사계 심도를 달성하여 초 초점 거리에 초점을 맞 춥니 다. 이 거리의 절반에서 무한대까지의 거리에있는 모든 물체는 상당히 선명합니다.</target>
        </trans-unit>
        <trans-unit id="b7d9a8419fffb041a3d15e19fb2a65251a0a8d0a" translate="yes" xml:space="preserve">
          <source>Focus to the custom point, defined by &lt;a href=&quot;qcamerafocus#customFocusPoint-prop&quot;&gt;QCameraFocus::customFocusPoint&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;qcamerafocus#customFocusPoint-prop&quot;&gt;QCameraFocus :: customFocusPoint&lt;/a&gt; 속성으로 정의 된 사용자 지정 지점에 중점을 둡니다 .</target>
        </trans-unit>
        <trans-unit id="06f59bcfbae410af36753900bbb081af1396ea5e" translate="yes" xml:space="preserve">
          <source>Focus to the custom point, defined by the &lt;a href=&quot;qml-qtmultimedia-camerafocus#customFocusPoint-prop&quot;&gt;customFocusPoint&lt;/a&gt; property.</source>
          <target state="translated">&lt;a href=&quot;qml-qtmultimedia-camerafocus#customFocusPoint-prop&quot;&gt;customFocusPoint&lt;/a&gt; 속성으로 정의 된 사용자 지정 지점에 중점을 둡니다 .</target>
        </trans-unit>
        <trans-unit id="29a90a09c596fb1396a1ed5a5e9dbd618f52a3b5" translate="yes" xml:space="preserve">
          <source>Focus to the frame center.</source>
          <target state="translated">프레임 중앙에 초점을 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="06bca129d69144a9705bcef057edc5be5e923f2a" translate="yes" xml:space="preserve">
          <source>Focus/Keyboard handling of the widget is not possible.</source>
          <target state="translated">위젯의 포커스 / 키보드 처리가 불가능합니다.</target>
        </trans-unit>
        <trans-unit id="5956c1b1605214b3cb248642c29cc49bf8dea63b" translate="yes" xml:space="preserve">
          <source>FocusAuto</source>
          <target state="translated">FocusAuto</target>
        </trans-unit>
        <trans-unit id="33d65ed82b6db3bee07f6e4923e6e37a5f11e330" translate="yes" xml:space="preserve">
          <source>FocusContinuous</source>
          <target state="translated">FocusContinuous</target>
        </trans-unit>
        <trans-unit id="ab240f913dedaa4471c773debb20b7d86b34c6fa" translate="yes" xml:space="preserve">
          <source>FocusHyperfocal</source>
          <target state="translated">FocusHyperfocal</target>
        </trans-unit>
        <trans-unit id="3e75ca17fef04bf152a64e5c8910dcb5be57095d" translate="yes" xml:space="preserve">
          <source>FocusInfinity</source>
          <target state="translated">FocusInfinity</target>
        </trans-unit>
        <trans-unit id="397175bbab8badb3022b587524a5eaa6edfb3262" translate="yes" xml:space="preserve">
          <source>FocusMacro</source>
          <target state="translated">FocusMacro</target>
        </trans-unit>
        <trans-unit id="e5846983204e8d71d1802411a2df302f89059bd1" translate="yes" xml:space="preserve">
          <source>FocusManual</source>
          <target state="translated">FocusManual</target>
        </trans-unit>
        <trans-unit id="3341174231d4477c230a406e5809992e3d77b249" translate="yes" xml:space="preserve">
          <source>FocusPointAuto</source>
          <target state="translated">FocusPointAuto</target>
        </trans-unit>
        <trans-unit id="a21d1f6fb238984fe8b6509cfbc69787e292304f" translate="yes" xml:space="preserve">
          <source>FocusPointCenter</source>
          <target state="translated">FocusPointCenter</target>
        </trans-unit>
        <trans-unit id="6070f82d92cc9832ab494dbd8eb3e37c78a4d8e2" translate="yes" xml:space="preserve">
          <source>FocusPointCustom</source>
          <target state="translated">FocusPointCustom</target>
        </trans-unit>
        <trans-unit id="8e0f9208a3bf9aae6f1717c98ea5310f524df3cf" translate="yes" xml:space="preserve">
          <source>FocusPointFaceDetection</source>
          <target state="translated">FocusPointFaceDetection</target>
        </trans-unit>
        <trans-unit id="2dfe6a4c8235dbeb2f89d4e39aa07a3d95893a66" translate="yes" xml:space="preserve">
          <source>FocusScope</source>
          <target state="translated">FocusScope</target>
        </trans-unit>
        <trans-unit id="e24ce9ecf870914a96d673f8e04a9485e60b185f" translate="yes" xml:space="preserve">
          <source>FocusScope (QML type)</source>
          <target state="translated">FocusScope (QML 유형)</target>
        </trans-unit>
        <trans-unit id="072a07c099d7f3bea7358ff80ec7037a8d02c969" translate="yes" xml:space="preserve">
          <source>FocusScope QML Type</source>
          <target state="translated">FocusScope QML 유형</target>
        </trans-unit>
        <trans-unit id="fb21890d62e4509dd37e5b60dfd59f7b5bb52cfc" translate="yes" xml:space="preserve">
          <source>FolderDialog</source>
          <target state="translated">FolderDialog</target>
        </trans-unit>
        <trans-unit id="8b7b9d7e77b3244c219513f342b86738f4d47d3d" translate="yes" xml:space="preserve">
          <source>FolderDialog (QML type)</source>
          <target state="translated">폴더 대화 상자 (QML 유형)</target>
        </trans-unit>
        <trans-unit id="6308be018271c19af4911200e0ab6570f5c54c29" translate="yes" xml:space="preserve">
          <source>FolderDialog QML Type</source>
          <target state="translated">FolderDialog QML 유형</target>
        </trans-unit>
        <trans-unit id="4d8c779cc2768383abdddd4d124083a5d59651c1" translate="yes" xml:space="preserve">
          <source>FolderDialog.acceptLabel</source>
          <target state="translated">FolderDialog.acceptLabel</target>
        </trans-unit>
        <trans-unit id="935771ecb1f2c76f1828c0520e6568dc1a59dbcc" translate="yes" xml:space="preserve">
          <source>FolderDialog.currentFolder</source>
          <target state="translated">FolderDialog.currentFolder</target>
        </trans-unit>
        <trans-unit id="d523e6a9b9b3e5b4060c7fb02977c140ffd4fbe9" translate="yes" xml:space="preserve">
          <source>FolderDialog.folder</source>
          <target state="translated">FolderDialog.folder</target>
        </trans-unit>
        <trans-unit id="935efb1015de04807d99edcf2470b5c991871e8e" translate="yes" xml:space="preserve">
          <source>FolderDialog.options</source>
          <target state="translated">FolderDialog.options</target>
        </trans-unit>
        <trans-unit id="f75f2619e305a4785124e32be368f11af2b353f1" translate="yes" xml:space="preserve">
          <source>FolderDialog.rejectLabel</source>
          <target state="translated">FolderDialog.rejectLabel</target>
        </trans-unit>
        <trans-unit id="dc299bf4924d4c4a9466bb571f75b7b725adbdf8" translate="yes" xml:space="preserve">
          <source>FolderListModel (QML type)</source>
          <target state="translated">FolderListModel (QML 유형)</target>
        </trans-unit>
        <trans-unit id="a42dbf5cc2b343f6461304eec8419bb2d4612b64" translate="yes" xml:space="preserve">
          <source>FolderListModel QML Type</source>
          <target state="translated">FolderListModel QML 유형</target>
        </trans-unit>
        <trans-unit id="f4082c4c7610b8c917c948a0284cdc8d61934568" translate="yes" xml:space="preserve">
          <source>FolderListModel provides access to information about the contents of a folder in the local file system, exposing a list of files to views and other data components.</source>
          <target state="translated">FolderListModel은 로컬 파일 시스템에있는 폴더의 내용에 대한 정보에 대한 액세스를 제공하여 파일 목록을 뷰 및 기타 데이터 구성 요소에 노출합니다.</target>
        </trans-unit>
        <trans-unit id="2d047abb608a252b5ebb45118e3a2bff1f80e39d" translate="yes" xml:space="preserve">
          <source>FolderListModel.caseSensitive</source>
          <target state="translated">FolderListModel.caseSensitive</target>
        </trans-unit>
        <trans-unit id="e85aaec42d13905712a132231d13e8e73179215f" translate="yes" xml:space="preserve">
          <source>FolderListModel.count</source>
          <target state="translated">FolderListModel.count</target>
        </trans-unit>
        <trans-unit id="cc6d44105c989cd1a0f1f5c77b5aaf996a49611f" translate="yes" xml:space="preserve">
          <source>FolderListModel.folder</source>
          <target state="translated">FolderListModel.folder</target>
        </trans-unit>
        <trans-unit id="1d435441272c0582bec52dc751c9ac2c3f21c2f3" translate="yes" xml:space="preserve">
          <source>FolderListModel.get()</source>
          <target state="translated">FolderListModel.get()</target>
        </trans-unit>
        <trans-unit id="d03217876db364f5339cc67bddc166fa32935a3d" translate="yes" xml:space="preserve">
          <source>FolderListModel.indexOf()</source>
          <target state="translated">FolderListModel.indexOf()</target>
        </trans-unit>
        <trans-unit id="e6fe5aaf7f854706ace6ca82984bbbb16fbaf870" translate="yes" xml:space="preserve">
          <source>FolderListModel.isFolder()</source>
          <target state="translated">FolderListModel.isFolder()</target>
        </trans-unit>
        <trans-unit id="6247a2efa0f758976a0e800be878b772a343c7ee" translate="yes" xml:space="preserve">
          <source>FolderListModel.nameFilters</source>
          <target state="translated">FolderListModel.nameFilters</target>
        </trans-unit>
        <trans-unit id="18420df2f3b3adc5b1b31c514e7a8bac5101db5a" translate="yes" xml:space="preserve">
          <source>FolderListModel.parentFolder</source>
          <target state="translated">FolderListModel.parentFolder</target>
        </trans-unit>
        <trans-unit id="1d5fe61e62dabf7fb8351b5e2b00cd0271469bd4" translate="yes" xml:space="preserve">
          <source>FolderListModel.rootFolder</source>
          <target state="translated">FolderListModel.rootFolder</target>
        </trans-unit>
        <trans-unit id="4cad96d7ee51e6341dc4eb87ca4e0013c858ad53" translate="yes" xml:space="preserve">
          <source>FolderListModel.showDirs</source>
          <target state="translated">FolderListModel.showDirs</target>
        </trans-unit>
        <trans-unit id="6fdf81eb8f44704d1ba978db3985a5fe248d4d38" translate="yes" xml:space="preserve">
          <source>FolderListModel.showDirsFirst</source>
          <target state="translated">FolderListModel.showDirsFirst</target>
        </trans-unit>
        <trans-unit id="99d9533b75d510d4ec496a03d98bb36f9af6ea5b" translate="yes" xml:space="preserve">
          <source>FolderListModel.showDotAndDotDot</source>
          <target state="translated">FolderListModel.showDotAndDotDot</target>
        </trans-unit>
        <trans-unit id="537f25f9373faa7244cd036c0d143a8e556e108c" translate="yes" xml:space="preserve">
          <source>FolderListModel.showFiles</source>
          <target state="translated">FolderListModel.showFiles</target>
        </trans-unit>
        <trans-unit id="2d8a227bfb197ae4bda7fd2a44b262c1d1aff080" translate="yes" xml:space="preserve">
          <source>FolderListModel.showHidden</source>
          <target state="translated">FolderListModel.showHidden</target>
        </trans-unit>
        <trans-unit id="d8c177b462a0f6d74cec6f1f9fd4b442ae3b7b07" translate="yes" xml:space="preserve">
          <source>FolderListModel.showOnlyReadable</source>
          <target state="translated">FolderListModel.showOnlyReadable</target>
        </trans-unit>
        <trans-unit id="1b8ea10129a6ee8aa38ecfdd0a14bf4ecc472ac2" translate="yes" xml:space="preserve">
          <source>FolderListModel.sortCaseSensitive</source>
          <target state="translated">FolderListModel.sortCaseSensitive</target>
        </trans-unit>
        <trans-unit id="6320019ebfeb29f65b552594aff9ded7f5eb9735" translate="yes" xml:space="preserve">
          <source>FolderListModel.sortField</source>
          <target state="translated">FolderListModel.sortField</target>
        </trans-unit>
        <trans-unit id="74261f16306d9bcb6a6de74f2219bd335a8148d8" translate="yes" xml:space="preserve">
          <source>FolderListModel.sortReversed</source>
          <target state="translated">FolderListModel.sortReversed</target>
        </trans-unit>
        <trans-unit id="c9a3721a337a88a3fa637dd5523422916d54ed73" translate="yes" xml:space="preserve">
          <source>FolderListModel.status</source>
          <target state="translated">FolderListModel.status</target>
        </trans-unit>
        <trans-unit id="4c076db29d82bbe952f5953ba2a4bd5c77b8b99e" translate="yes" xml:space="preserve">
          <source>FolkMusic</source>
          <target state="translated">FolkMusic</target>
        </trans-unit>
        <trans-unit id="655d84f6eda004acb88c08cf5f8dc8caa5dfda60" translate="yes" xml:space="preserve">
          <source>Follow the &lt;a href=&quot;qstyle#StyleHint-enum&quot;&gt;style&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qstyle#StyleHint-enum&quot;&gt;스타일을&lt;/a&gt; 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="dc1d99f42ac5f7a3e163e689e77d1cbfb456d72e" translate="yes" xml:space="preserve">
          <source>Follow these rules to avoid erroneous character conversion when dealing with URLs and strings:</source>
          <target state="translated">URL 및 문자열을 처리 할 때 잘못된 문자 변환을 피하려면 다음 규칙을 따르십시오.</target>
        </trans-unit>
        <trans-unit id="24f5ca6a4a173497d59d82e1704bfa3b8649072b" translate="yes" xml:space="preserve">
          <source>Following example shows how to start an application when Qt 5 is built using shared libraries. With a statically build Qt 5, there is no need to use the LD_LIBRARY_PATH environment variable. This variable is only needed to point the location of &lt;a href=&quot;vxworks&quot;&gt;VxWorks&lt;/a&gt; shared libraries (for example libc and OpenGL ES 2.0). It is not needed for Qt 5 shared libraries.</source>
          <target state="translated">다음 예제는 공유 라이브러리를 사용하여 Qt 5를 빌드 할 때 애플리케이션을 시작하는 방법을 보여줍니다. 정적으로 빌드 된 Qt 5를 사용하면 LD_LIBRARY_PATH 환경 변수를 사용할 필요가 없습니다. 이 변수는 &lt;a href=&quot;vxworks&quot;&gt;VxWorks&lt;/a&gt; 공유 라이브러리 (예 : libc 및 OpenGL ES 2.0) 의 위치를 ​​가리키는 데만 필요합니다 . Qt 5 공유 라이브러리에는 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bbec5127af084a2e737d453509735520bdbbf1ff" translate="yes" xml:space="preserve">
          <source>Following example shows how to start an application when Qt 5 is built using shared libraries. With a statically build Qt 5, there is no need to use the LD_LIBRARY_PATH environment variable. This variable is only needed to point the location of VxWorks shared libraries (for example libc and OpenGL ES 2.0). It is not needed for Qt 5 shared libraries.</source>
          <target state="translated">다음 예제는 Qt 5가 공유 라이브러리를 사용하여 빌드 될 때 애플리케이션을 시작하는 방법을 보여줍니다. Qt 5를 정적으로 빌드하면 LD_LIBRARY_PATH 환경 변수를 사용할 필요가 없습니다. 이 변수는 VxWorks 공유 라이브러리 (예 : libc 및 OpenGL ES 2.0)의 위치를 ​​가리킬 때만 필요합니다. Qt 5 공유 라이브러리에는 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d99193b62c0a7a0e34cf954b8b8d1df4b5ca6e03" translate="yes" xml:space="preserve">
          <source>Following is an example implementation. First, there needs to be an</source>
          <target state="translated">다음은 구현 예입니다. 먼저,</target>
        </trans-unit>
        <trans-unit id="596db61a1d7c2b8e481ac71a9c196d4a39e1940d" translate="yes" xml:space="preserve">
          <source>Following is an introduction to view transitions and the ways in which the &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; attached property can be used to augment view transitions.</source>
          <target state="translated">다음은 뷰 전환에 대한 소개와 &lt;a href=&quot;qml-qtquick-viewtransition&quot;&gt;ViewTransition&lt;/a&gt; 연결된 속성을 사용하여 뷰 전환을 향상시키는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="082c012991f402921f17fed0620285a8df11f235" translate="yes" xml:space="preserve">
          <source>Following is an introduction to view transitions and the ways in which the ViewTransition attached property can be used to augment view transitions.</source>
          <target state="translated">다음은 뷰 전환에 대한 소개와 ViewTransition 연결된 속성을 사용하여 뷰 전환을 확장하는 방법입니다.</target>
        </trans-unit>
        <trans-unit id="303933d90dd58dadceb0161520000c9dd1e884ae" translate="yes" xml:space="preserve">
          <source>Following lists the possible feature weights:</source>
          <target state="translated">다음은 가능한 기능 가중치를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="1f4ef3b457df0e4e071a6fab70fe31239ed493b0" translate="yes" xml:space="preserve">
          <source>Following placeholders are supported:</source>
          <target state="translated">다음과 같은 자리 표시자가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="fa0f6f565b4473f8f9a07f2f1fdcb0cf037d95fb" translate="yes" xml:space="preserve">
          <source>Following the philosophy that we should be liberal in what we accept and conservative in what we generate, &lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; will accept Latin-1 encoded INI files, but generate pure ASCII files, where non-ASCII values are encoded using standard INI escape sequences. To make the INI files more readable (but potentially less compatible), call &lt;a href=&quot;qsettings#setIniCodec&quot;&gt;setIniCodec&lt;/a&gt;().</source>
          <target state="translated">&lt;a href=&quot;qsettings&quot;&gt;QSettings&lt;/a&gt; 는 우리가 생성하는 것에서 받아들이고 보수적 인 것에 자유로 워야 한다는 철학에 따라 Latin-1로 인코딩 된 INI 파일을 받아들이지 만 비 ASCII 값은 표준 INI 이스케이프 시퀀스를 사용하여 인코딩되는 순수한 ASCII 파일을 생성합니다. INI 파일을보다 읽기 쉽게 (그러나 호환성이 떨어질 수 있도록)하려면 &lt;a href=&quot;qsettings#setIniCodec&quot;&gt;setIniCodec&lt;/a&gt; ()를 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b97c4d4cddf23ec47395af460f9e28df2a0f9b04" translate="yes" xml:space="preserve">
          <source>Font</source>
          <target state="translated">Font</target>
        </trans-unit>
        <trans-unit id="b5debf18af650abf323e5140106a852a870b8e65" translate="yes" xml:space="preserve">
          <source>Font Awesome</source>
          <target state="translated">멋진 글꼴</target>
        </trans-unit>
        <trans-unit id="3943d95f11bc0bebbd25b3f65d25fe9fac2bc7be" translate="yes" xml:space="preserve">
          <source>Font Configuration</source>
          <target state="translated">폰트 구성</target>
        </trans-unit>
        <trans-unit id="b456f452a1151135c8915df535cde20d445829b7" translate="yes" xml:space="preserve">
          <source>Font Size</source>
          <target state="translated">폰트 크기</target>
        </trans-unit>
        <trans-unit id="f4480fe27751ad87cd93ceec7f8f841941adf210" translate="yes" xml:space="preserve">
          <source>Font Style</source>
          <target state="translated">폰트 스타일</target>
        </trans-unit>
        <trans-unit id="cafd75692b0b9feda5b2e6839532b087bbb3e263" translate="yes" xml:space="preserve">
          <source>Font Weight</source>
          <target state="translated">폰트 무게</target>
        </trans-unit>
        <trans-unit id="e93ec783310ec9a5c16a0dec3f11d1313f24bbdf" translate="yes" xml:space="preserve">
          <source>Font customization and configuration</source>
          <target state="translated">글꼴 사용자 정의 및 구성</target>
        </trans-unit>
        <trans-unit id="8f0906d1028e9ffae1c27651e7478eb9373b281c" translate="yes" xml:space="preserve">
          <source>Font engine</source>
          <target state="translated">폰트 엔진</target>
        </trans-unit>
        <trans-unit id="6e65eee71dc3625c426ae505525142cfe77aa1b4" translate="yes" xml:space="preserve">
          <source>Font family name</source>
          <target state="translated">글꼴 패밀리 이름</target>
        </trans-unit>
        <trans-unit id="e859119fd1c255e21629bfa8b0cb32c35d02ffb5" translate="yes" xml:space="preserve">
          <source>Font metrics information</source>
          <target state="translated">폰트 메트릭스 정보</target>
        </trans-unit>
        <trans-unit id="b06bf426c1723a8b97ef615753376aa594f4f685" translate="yes" xml:space="preserve">
          <source>Font shorthand property</source>
          <target state="translated">글꼴 속기 속성</target>
        </trans-unit>
        <trans-unit id="2a1489fad241468ab29e9fe5b1c27cfa85ef4d4a" translate="yes" xml:space="preserve">
          <source>Font size relative to the document font, or specified in points or pixels</source>
          <target state="translated">문서 글꼴을 기준으로 한 글꼴 크기 또는 포인트 또는 픽셀로 지정</target>
        </trans-unit>
        <trans-unit id="9a35915d4e8d69a6b8b578fd3bf6a43dee671d49" translate="yes" xml:space="preserve">
          <source>Font size, family, and/or color</source>
          <target state="translated">글꼴 크기, 가족 및 / 또는 색상</target>
        </trans-unit>
        <trans-unit id="3bfc2cad61158f61807c72c43e8c13fcca77dbe8" translate="yes" xml:space="preserve">
          <source>Font size, text or other contents of child widgets</source>
          <target state="translated">자식 위젯의 글꼴 크기, 텍스트 또는 기타 내용</target>
        </trans-unit>
        <trans-unit id="231b4e4eaeb44fba5ed9b9dad4758c80b46a5ec0" translate="yes" xml:space="preserve">
          <source>Font weighting is classified on a scale from 0 to 99, where a weight of 0 is ultralight, and 99 is extremely black. The following values are supported:</source>
          <target state="translated">글꼴 가중치는 0에서 99까지의 배율로 분류되며, 가중치 0은 초경량이고 99는 매우 검은 색입니다. 다음과 같은 값이 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="f4510d7f3fcbf3bbcde6d8ef31c747d264a47d6f" translate="yes" xml:space="preserve">
          <source>Font.AllLowercase - This alters the text to be rendered in all lowercase type.</source>
          <target state="translated">Font.AllLowercase-텍스트가 모든 소문자 유형으로 렌더링되도록 변경합니다.</target>
        </trans-unit>
        <trans-unit id="0ab2390e95221e9a27c9ad1f95c3e9587312ba5f" translate="yes" xml:space="preserve">
          <source>Font.AllUppercase - This alters the text to be rendered in all uppercase type.</source>
          <target state="translated">Font.AllUppercase-모든 대문자 유형으로 렌더링 될 텍스트를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="316a4123a01ba49b0947fcc9619e95b937a43d91" translate="yes" xml:space="preserve">
          <source>Font.Black</source>
          <target state="translated">Font.Black</target>
        </trans-unit>
        <trans-unit id="3ed2edcd75eebf317d22a921632142ed9e55f941" translate="yes" xml:space="preserve">
          <source>Font.Bold</source>
          <target state="translated">Font.Bold</target>
        </trans-unit>
        <trans-unit id="c895e28a209241c60693cecf010695f42b04ebb7" translate="yes" xml:space="preserve">
          <source>Font.Capitalize - This alters the text to be rendered with the first character of each word as an uppercase character.</source>
          <target state="translated">Font.Capitalize-각 단어의 첫 문자가 대문자로 렌더링되도록 텍스트를 변경합니다.</target>
        </trans-unit>
        <trans-unit id="c3c77ea9339194c1f5a0e0e79b24517628280178" translate="yes" xml:space="preserve">
          <source>Font.DemiBold</source>
          <target state="translated">Font.DemiBold</target>
        </trans-unit>
        <trans-unit id="e5d0eda8acba7ed5e0ab8d4f5e4fe33199709407" translate="yes" xml:space="preserve">
          <source>Font.ExtraBold</source>
          <target state="translated">Font.ExtraBold</target>
        </trans-unit>
        <trans-unit id="d6dd54a3a6cd9b72e4fccd64212ef3089ccf3101" translate="yes" xml:space="preserve">
          <source>Font.ExtraLight</source>
          <target state="translated">Font.ExtraLight</target>
        </trans-unit>
        <trans-unit id="729206d12504f614f66da1247ef2653b9a38175b" translate="yes" xml:space="preserve">
          <source>Font.Light</source>
          <target state="translated">Font.Light</target>
        </trans-unit>
        <trans-unit id="de852ca5bbaec87cab94ffa3442bb40305087327" translate="yes" xml:space="preserve">
          <source>Font.Medium</source>
          <target state="translated">Font.Medium</target>
        </trans-unit>
        <trans-unit id="7ae414ed6d1a90d0c97bfa9bb692d027d5031c6f" translate="yes" xml:space="preserve">
          <source>Font.MixedCase - This is the normal text rendering option where no capitalization change is applied.</source>
          <target state="translated">Font.MixedCase-대문자 변경이 적용되지 않는 일반적인 텍스트 렌더링 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="9850b1fe137bfd88e37ba428485d9e239d7f18c5" translate="yes" xml:space="preserve">
          <source>Font.Normal - the default</source>
          <target state="translated">Font.Normal-기본값</target>
        </trans-unit>
        <trans-unit id="85ab1896ebf95f8cf67d01f739eb48b3047842d1" translate="yes" xml:space="preserve">
          <source>Font.PreferDefaultHinting - Use the default hinting level for the target platform.</source>
          <target state="translated">Font.PreferDefaultHinting-대상 플랫폼에 기본 힌트 수준을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5bd6f2069e53a0d99943a261af0fb094658cb1d5" translate="yes" xml:space="preserve">
          <source>Font.PreferFullHinting - If possible, render text with hinting in both horizontal and vertical directions.</source>
          <target state="translated">Font.PreferFullHinting-가능하면 텍스트를 가로 및 세로 방향으로 힌트로 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="d4f2108e0fcf7c2e7980c5b8d5734fc4eedcc487" translate="yes" xml:space="preserve">
          <source>Font.PreferFullHinting - If possible, render text with hinting in both horizontal and vertical directions. The text will be altered to optimize legibility on the target device, but since the metrics will depend on the target size of the text, the positions of glyphs, line breaks, and other typographical detail will not scale, meaning that a text layout may look different on devices with different pixel densities.</source>
          <target state="translated">Font.PreferFullHinting-가능하면 텍스트를 가로 및 세로 방향으로 힌트로 렌더링합니다. 대상 장치에서 가독성을 최적화하기 위해 텍스트가 변경되지만 메트릭은 텍스트의 대상 크기에 따라 달라 지므로 글리프, 줄 바꿈 및 기타 인쇄상의 세부 사항의 위치가 조정되지 않으므로 텍스트 레이아웃이 표시 될 수 있습니다. 픽셀 밀도가 다른 장치에서는 다릅니다.</target>
        </trans-unit>
        <trans-unit id="1676c737a0881093bd1f79846f1f87fca768a7b0" translate="yes" xml:space="preserve">
          <source>Font.PreferNoHinting - If possible, render text without hinting the outlines of the glyphs.</source>
          <target state="translated">Font.PreferNoHinting-가능한 경우 글리프의 윤곽을 암시하지 않고 텍스트를 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="1cba4e40cb6d97a80520b344ddb5b9c3eabae22f" translate="yes" xml:space="preserve">
          <source>Font.PreferNoHinting - If possible, render text without hinting the outlines of the glyphs. The text layout will be typographically accurate, using the same metrics as are used e.g. when printing.</source>
          <target state="translated">Font.PreferNoHinting-가능한 경우 글리프의 윤곽을 암시하지 않고 텍스트를 렌더링합니다. 인쇄시 사용되는 것과 동일한 메트릭을 사용하여 텍스트 레이아웃이 정확하게 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="2da1d09201181a979a1467ff9a49ac02f71dc30b" translate="yes" xml:space="preserve">
          <source>Font.PreferVerticalHinting - If possible, render text with no horizontal hinting, but align glyphs to the pixel grid in the vertical direction.</source>
          <target state="translated">Font.PreferVerticalHinting-가능하면 수평 힌트없이 텍스트를 렌더링하지만 그림을 세로 방향으로 픽셀 격자에 맞 춥니 다.</target>
        </trans-unit>
        <trans-unit id="00ad4cb67a344866f190315599e0de7ccf7061b0" translate="yes" xml:space="preserve">
          <source>Font.PreferVerticalHinting - If possible, render text with no horizontal hinting, but align glyphs to the pixel grid in the vertical direction. The text will appear crisper on displays where the density is too low to give an accurate rendering of the glyphs. But since the horizontal metrics of the glyphs are unhinted, the text's layout will be scalable to higher density devices (such as printers) without impacting details such as line breaks.</source>
          <target state="translated">Font.PreferVerticalHinting-가능하면 수평 힌트없이 텍스트를 렌더링하지만 그림을 세로 방향으로 픽셀 격자에 맞 춥니 다. 밀도가 너무 낮아 글리프를 정확하게 렌더링 할 수없는 디스플레이에서는 텍스트가보다 선명하게 나타납니다. 그러나 글리프의 가로 메트릭을 사용하지 않기 때문에 줄 바꿈과 같은 세부 사항에 영향을주지 않고 텍스트 레이아웃을 고밀도 장치 (예 : 프린터)로 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db98b571fb336321517d6577b5c91f41ae3cb831" translate="yes" xml:space="preserve">
          <source>Font.SmallCaps - This alters the text to be rendered in small-caps type.</source>
          <target state="translated">Font.SmallCaps-텍스트를 작은 대문자로 렌더링하도록 변경합니다.</target>
        </trans-unit>
        <trans-unit id="f071b0886e54429447ecb6dc281bfab385c9318f" translate="yes" xml:space="preserve">
          <source>Font.Thin</source>
          <target state="translated">Font.Thin</target>
        </trans-unit>
        <trans-unit id="c1d622fe6bf106753224c862bf06d12378d0dc5b" translate="yes" xml:space="preserve">
          <source>FontChange</source>
          <target state="translated">FontChange</target>
        </trans-unit>
        <trans-unit id="4e36c675f502b6fe674019e9b4939387267c1b0d" translate="yes" xml:space="preserve">
          <source>FontDialog</source>
          <target state="translated">FontDialog</target>
        </trans-unit>
        <trans-unit id="65c20c5c351252f02affda9398051dd0cfdee096" translate="yes" xml:space="preserve">
          <source>FontDialog (QML type)</source>
          <target state="translated">FontDialog (QML 유형)</target>
        </trans-unit>
        <trans-unit id="8b4e7113b793d8bc196d3d93d2b629113228f97d" translate="yes" xml:space="preserve">
          <source>FontDialog QML Type</source>
          <target state="translated">FontDialog QML 유형</target>
        </trans-unit>
        <trans-unit id="ecf54cf44c2550a38b2f23c0ff78018fce5616df" translate="yes" xml:space="preserve">
          <source>FontDialog allows the user to select a font. The dialog is initially invisible. You need to set the properties as desired first, then set &lt;a href=&quot;qml-qtquick-dialogs-fontdialog#visible-prop&quot;&gt;visible&lt;/a&gt; to true or call &lt;a href=&quot;qml-qtquick-dialogs-fontdialog#open-method&quot;&gt;open()&lt;/a&gt;.</source>
          <target state="translated">FontDialog를 사용하면 사용자가 글꼴을 선택할 수 있습니다. 대화 상자는 처음에는 보이지 않습니다. 먼저 원하는대로 속성을 설정 한 다음 &lt;a href=&quot;qml-qtquick-dialogs-fontdialog#visible-prop&quot;&gt;visible&lt;/a&gt; 을 true 로 설정 하거나 &lt;a href=&quot;qml-qtquick-dialogs-fontdialog#open-method&quot;&gt;open ()을&lt;/a&gt; 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="cd23a4c30e83af6b7280034f14e27ae9defe28e7" translate="yes" xml:space="preserve">
          <source>FontDialog.close()</source>
          <target state="translated">FontDialog.close()</target>
        </trans-unit>
        <trans-unit id="b1a14b9bceebf16f78fe07226d4482b1e57cb5af" translate="yes" xml:space="preserve">
          <source>FontDialog.currentFont</source>
          <target state="translated">FontDialog.currentFont</target>
        </trans-unit>
        <trans-unit id="339a7456251fc1de735f89318f62d3168a44fd86" translate="yes" xml:space="preserve">
          <source>FontDialog.font</source>
          <target state="translated">FontDialog.font</target>
        </trans-unit>
        <trans-unit id="b1e9c2fdc8eee0190a8c3922c2a98a35098f4a36" translate="yes" xml:space="preserve">
          <source>FontDialog.modality</source>
          <target state="translated">FontDialog.modality</target>
        </trans-unit>
        <trans-unit id="2e6db136b7116851249872b2895df7dac8c0094e" translate="yes" xml:space="preserve">
          <source>FontDialog.monospacedFonts</source>
          <target state="translated">FontDialog.monospacedFonts</target>
        </trans-unit>
        <trans-unit id="d8e577346dddc45b28d1adf342f6a7ece65e7286" translate="yes" xml:space="preserve">
          <source>FontDialog.nonScalableFonts</source>
          <target state="translated">FontDialog.nonScalableFonts</target>
        </trans-unit>
        <trans-unit id="3ce401368c835d48d44da707a3414520051fe76f" translate="yes" xml:space="preserve">
          <source>FontDialog.open()</source>
          <target state="translated">FontDialog.open()</target>
        </trans-unit>
        <trans-unit id="69322ce91f04234322d154b913c9e312e7ca79c5" translate="yes" xml:space="preserve">
          <source>FontDialog.options</source>
          <target state="translated">FontDialog.options</target>
        </trans-unit>
        <trans-unit id="602712818254f3e2cfb0992ecc2728882516bf72" translate="yes" xml:space="preserve">
          <source>FontDialog.proportionalFonts</source>
          <target state="translated">FontDialog.proportionalFonts</target>
        </trans-unit>
        <trans-unit id="2abcc39dd0cb06cdc7fd106ecd6e1437e6599001" translate="yes" xml:space="preserve">
          <source>FontDialog.scalableFonts</source>
          <target state="translated">FontDialog.scalableFonts</target>
        </trans-unit>
        <trans-unit id="0652291ddf189736ad376ab2ee066aa02040c048" translate="yes" xml:space="preserve">
          <source>FontDialog.title</source>
          <target state="translated">FontDialog.title</target>
        </trans-unit>
        <trans-unit id="692d6d0e29c88eb4ef71fdf78f8f24d96ec870fe" translate="yes" xml:space="preserve">
          <source>FontDialog.visible</source>
          <target state="translated">FontDialog.visible</target>
        </trans-unit>
        <trans-unit id="9c19480c4a025fd17ed7ef36518cc1b13c7ca991" translate="yes" xml:space="preserve">
          <source>FontLoader (QML type)</source>
          <target state="translated">FontLoader (QML 유형)</target>
        </trans-unit>
        <trans-unit id="e5015305889035b06115236ef27ecd18160c9574" translate="yes" xml:space="preserve">
          <source>FontLoader QML Type</source>
          <target state="translated">FontLoader QML 유형</target>
        </trans-unit>
        <trans-unit id="fda29f616a5b5bb05e7f6e014fe88598f1edf07c" translate="yes" xml:space="preserve">
          <source>FontLoader.name</source>
          <target state="translated">FontLoader.name</target>
        </trans-unit>
        <trans-unit id="dac047963b6db92b80386ee7eed6fbc7fd6044b6" translate="yes" xml:space="preserve">
          <source>FontLoader.source</source>
          <target state="translated">FontLoader.source</target>
        </trans-unit>
        <trans-unit id="200b57c0398a3793a0adb7b8b2a2767c71070ada" translate="yes" xml:space="preserve">
          <source>FontLoader.status</source>
          <target state="translated">FontLoader.status</target>
        </trans-unit>
        <trans-unit id="f556d9d8fd5f7eebc6b7e8122bb7047e4030b931" translate="yes" xml:space="preserve">
          <source>FontMetrics (QML type)</source>
          <target state="translated">FontMetrics (QML 유형)</target>
        </trans-unit>
        <trans-unit id="2241296494edecf2720d87e053b41487c3d369d2" translate="yes" xml:space="preserve">
          <source>FontMetrics QML Type</source>
          <target state="translated">FontMetrics QML 유형</target>
        </trans-unit>
        <trans-unit id="9e4b05edd64adb2cb30842852e9dc93e45aaecea" translate="yes" xml:space="preserve">
          <source>FontMetrics calculates the size of characters and strings for a given font.</source>
          <target state="translated">FontMetrics는 지정된 글꼴의 문자 및 문자열 크기를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="8a80b4b11cc03491b67514ba70d43ab7e1d246f9" translate="yes" xml:space="preserve">
          <source>FontMetrics.advanceWidth()</source>
          <target state="translated">FontMetrics.advanceWidth()</target>
        </trans-unit>
        <trans-unit id="a0b6728b761fadda9631ffcac00ad36fb9fe6f7e" translate="yes" xml:space="preserve">
          <source>FontMetrics.ascent</source>
          <target state="translated">FontMetrics.ascent</target>
        </trans-unit>
        <trans-unit id="fcb5667892bef4f966f462bf9ad9e649d3a63084" translate="yes" xml:space="preserve">
          <source>FontMetrics.averageCharacterWidth</source>
          <target state="translated">FontMetrics.averageCharacterWidth</target>
        </trans-unit>
        <trans-unit id="9a1bc643376383f82418f9fcd2f21a4054664242" translate="yes" xml:space="preserve">
          <source>FontMetrics.boundingRect()</source>
          <target state="translated">FontMetrics.boundingRect()</target>
        </trans-unit>
        <trans-unit id="adfb45b7552d0e9d63de747d80f44058ccb11cff" translate="yes" xml:space="preserve">
          <source>FontMetrics.descent</source>
          <target state="translated">FontMetrics.descent</target>
        </trans-unit>
        <trans-unit id="6a4aeeacaf29bd04f1976216523bab3f6e34de6e" translate="yes" xml:space="preserve">
          <source>FontMetrics.elidedText()</source>
          <target state="translated">FontMetrics.elidedText()</target>
        </trans-unit>
        <trans-unit id="146b297477bf0262c896beb42eed789d5bdc70d5" translate="yes" xml:space="preserve">
          <source>FontMetrics.font</source>
          <target state="translated">FontMetrics.font</target>
        </trans-unit>
        <trans-unit id="c4701c726180dfe4af3d51ec62bab397ad517e2b" translate="yes" xml:space="preserve">
          <source>FontMetrics.height</source>
          <target state="translated">FontMetrics.height</target>
        </trans-unit>
        <trans-unit id="af08c4d914d45f2273de5832c86e48d7f3ea0027" translate="yes" xml:space="preserve">
          <source>FontMetrics.leading</source>
          <target state="translated">FontMetrics.leading</target>
        </trans-unit>
        <trans-unit id="a69bbda07133c483453d58d30bc1de165f205aa1" translate="yes" xml:space="preserve">
          <source>FontMetrics.lineSpacing</source>
          <target state="translated">FontMetrics.lineSpacing</target>
        </trans-unit>
        <trans-unit id="d601aa630e653780cb68416509286153280e0a42" translate="yes" xml:space="preserve">
          <source>FontMetrics.lineWidth</source>
          <target state="translated">FontMetrics.lineWidth</target>
        </trans-unit>
        <trans-unit id="2947331a0ed526de3839866e5c44652c5428f70e" translate="yes" xml:space="preserve">
          <source>FontMetrics.maximumCharacterWidth</source>
          <target state="translated">FontMetrics.maximumCharacterWidth</target>
        </trans-unit>
        <trans-unit id="2a6bd353125c22033e13eb3ee5ad96d06a3dc035" translate="yes" xml:space="preserve">
          <source>FontMetrics.minimumLeftBearing</source>
          <target state="translated">FontMetrics.minimumLeftBearing</target>
        </trans-unit>
        <trans-unit id="a0224d5c80deb9d06b24b21c9f262e802aff6e07" translate="yes" xml:space="preserve">
          <source>FontMetrics.minimumRightBearing</source>
          <target state="translated">FontMetrics.minimumRightBearing</target>
        </trans-unit>
        <trans-unit id="7511496bcf075c1f54ce032afd8f0742685f26d0" translate="yes" xml:space="preserve">
          <source>FontMetrics.overlinePosition</source>
          <target state="translated">FontMetrics.overlinePosition</target>
        </trans-unit>
        <trans-unit id="743d608ed918553d8d248341c3daef7d995d36ba" translate="yes" xml:space="preserve">
          <source>FontMetrics.strikeOutPosition</source>
          <target state="translated">FontMetrics.strikeOutPosition</target>
        </trans-unit>
        <trans-unit id="6237c8e079e6f75d05ad7b0643d4a493524855e5" translate="yes" xml:space="preserve">
          <source>FontMetrics.tightBoundingRect()</source>
          <target state="translated">FontMetrics.tightBoundingRect()</target>
        </trans-unit>
        <trans-unit id="457f88e0e14ab18c81a2b6144279ab597af71079" translate="yes" xml:space="preserve">
          <source>FontMetrics.underlinePosition</source>
          <target state="translated">FontMetrics.underlinePosition</target>
        </trans-unit>
        <trans-unit id="ce48ce145ff9d3b9566d2f7c59d73526866c1f44" translate="yes" xml:space="preserve">
          <source>FontMetrics.xHeight</source>
          <target state="translated">FontMetrics.xHeight</target>
        </trans-unit>
        <trans-unit id="fda1f0cc381e26720b289fce4a64c436eb354602" translate="yes" xml:space="preserve">
          <source>Fontconfig</source>
          <target state="translated">Fontconfig</target>
        </trans-unit>
        <trans-unit id="ffe688a5014306635cd935f7169187b7db387cd5" translate="yes" xml:space="preserve">
          <source>Fonts</source>
          <target state="translated">Fonts</target>
        </trans-unit>
        <trans-unit id="781c182a2c9f35972526788c135eb5f8387cfb25" translate="yes" xml:space="preserve">
          <source>FontsLocation</source>
          <target state="translated">FontsLocation</target>
        </trans-unit>
        <trans-unit id="e697e69c6309055e818eb6e607e32391eeedcaee" translate="yes" xml:space="preserve">
          <source>Foo Namespace</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="eb8fc41f9d9ae5855c4d801355075e4ccfb22808" translate="yes" xml:space="preserve">
          <source>FooBar</source>
          <target state="translated">FooBar</target>
        </trans-unit>
        <trans-unit id="e0b8c4f1be7885bbc9109a98074223c86ee26ac9" translate="yes" xml:space="preserve">
          <source>FooWidget</source>
          <target state="translated">FooWidget</target>
        </trans-unit>
        <trans-unit id="f7880600348a091a43e2a84906d6002820643108" translate="yes" xml:space="preserve">
          <source>For</source>
          <target state="translated">For</target>
        </trans-unit>
        <trans-unit id="8070741066f3478336bd9340b5432045fcff9e8c" translate="yes" xml:space="preserve">
          <source>For &quot;online&quot; Map plugins, network bandwidth and latency can be major contributors to the user's perception of performance. Extensive caching is performed to mitigate this, but such mitigation is not always perfect. For &quot;offline&quot; plugins, the time spent retrieving the stored geographic data and rendering the basic map features can often play a dominant role. Some offline plugins may use hardware acceleration themselves to (partially) avert this.</source>
          <target state="translated">&quot;온라인&quot;맵 플러그인의 경우 네트워크 대역폭 및 대기 시간이 사용자의 성능 인식에 크게 기여할 수 있습니다. 이를 완화하기 위해 광범위한 캐싱이 수행되지만 이러한 완화가 항상 완벽한 것은 아닙니다. &quot;오프라인&quot;플러그인의 경우 저장된 지리 데이터를 검색하고 기본 맵 기능을 렌더링하는 데 소요되는 시간이 종종 중요한 역할을 할 수 있습니다. 일부 오프라인 플러그인은 하드웨어 가속을 사용하여 (부분적으로)이를 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3fb55bd2d08ed483f9e678c594f1b9af3b98216" translate="yes" xml:space="preserve">
          <source>For 32-bit images, this function is equivalent to &lt;a href=&quot;qimage#allGray&quot;&gt;allGray&lt;/a&gt;().</source>
          <target state="translated">32 비트 이미지의 경우이 기능은 &lt;a href=&quot;qimage#allGray&quot;&gt;allGray&lt;/a&gt; () 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="cd25805c02b94cceacd43b176f058c7adf3248aa" translate="yes" xml:space="preserve">
          <source>For 3D-like item rotations, you must specify the axis of rotation in addition to the origin point. The following example shows various 3D-like rotations applied to an &lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt;.</source>
          <target state="translated">3D 유사 항목 회전의 경우 원점 외에 회전축을 지정해야합니다. 다음 예제는 &lt;a href=&quot;qml-qtquick-image&quot;&gt;Image에&lt;/a&gt; 적용되는 다양한 3D와 같은 회전을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="e241b17b8d07a8ba6cc14135174e4d617518665b" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt;, the socket first enters the &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;ServiceLookupState&lt;/a&gt; and queries the connection parameters for</source>
          <target state="translated">들어 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtbluetooth-attribution-bluez.html#&quot;&gt;BlueZ&lt;/a&gt; , 소켓 먼저 입력 &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;ServiceLookupState을&lt;/a&gt; 하고의 연결 매개 변수를 쿼리</target>
        </trans-unit>
        <trans-unit id="ea3bf800576ee79b25051a3e356043676c0429df" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;, the query string can contain only one statement at a time. If more than one statement is given, the function returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">들어 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite는&lt;/a&gt; 쿼리 문자열은 한 번에 하나의 문을 포함 할 수 있습니다. 둘 이상의 명령문이 제공되면 함수는 &lt;code&gt;false&lt;/code&gt; 를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="8751bc0a52f089ada558c04a624ad0f45dab0e87" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtbluetooth-attribution-bluez.html&quot;&gt;BlueZ&lt;/a&gt;, the socket first enters the &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;ServiceLookupState&lt;/a&gt; and queries the connection parameters for</source>
          <target state="translated">들어 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtbluetooth-attribution-bluez.html&quot;&gt;BlueZ&lt;/a&gt; , 소켓 먼저 입력 &lt;a href=&quot;qbluetoothsocket#SocketState-enum&quot;&gt;ServiceLookupState을&lt;/a&gt; 하고의 연결 매개 변수를 쿼리</target>
        </trans-unit>
        <trans-unit id="3389371fb4edf1b2d68798dc9ddd3653b420e98a" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;, the query string can contain only one statement at a time. If more than one statement is given, the function returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">들어 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite는&lt;/a&gt; 쿼리 문자열은 한 번에 하나의 문을 포함 할 수 있습니다. 두 개 이상의 명령문이 제공되면 함수는 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9f6c7fecc945bbe14a056f2bce1b05ab7add9a21" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtsql-attribution-sqlite.html#sqlite&quot;&gt;SQLite&lt;/a&gt;, the query string can contain only one statement at a time. If more than one statement is given, the function returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7a9d50b4c641806e1bf23978d889c8dac6a72fc3" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;location-places-qml#plugin&quot;&gt;Plugin&lt;/a&gt;'s that do not support locales, the locales list is always empty.</source>
          <target state="translated">들어 &lt;a href=&quot;location-places-qml#plugin&quot;&gt;플러그인&lt;/a&gt; 로케일을 지원하지 않는의, 로케일 목록은 항상 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="26eb82d06c7a09ede1af4e1da44b5714afbbe48e" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qcompleter#CompletionMode-enum&quot;&gt;QCompleter::InlineCompletion&lt;/a&gt; mode, the &lt;a href=&quot;qcompleter#highlighted&quot;&gt;highlighted&lt;/a&gt;() signal is fired with the current completion.</source>
          <target state="translated">들어 &lt;a href=&quot;qcompleter#CompletionMode-enum&quot;&gt;QCompleter :: InlineCompletion의&lt;/a&gt; 모드에서 &lt;a href=&quot;qcompleter#highlighted&quot;&gt;강조 표시&lt;/a&gt; () 신호는 현재 완료와 함께 발생합니다.</target>
        </trans-unit>
        <trans-unit id="812399e4a9958a0d69636fae41889442b825e2fd" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qcompleter#CompletionMode-enum&quot;&gt;QCompleter::PopupCompletion&lt;/a&gt; and QCompletion::UnfilteredPopupCompletion modes, calling this function displays the popup displaying the current completions. By default, if</source>
          <target state="translated">대한 &lt;a href=&quot;qcompleter#CompletionMode-enum&quot;&gt;QCompleter :: PopupCompletion&lt;/a&gt; 이 기능은 현재 완료를 표시하는 팝업을 호출하고 QCompletion :: UnfilteredPopupCompletion 모드. 기본적으로</target>
        </trans-unit>
        <trans-unit id="d7560fe01714a198849c3d140f0846f3ba91ce5f" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::ToolTip&lt;/a&gt; and &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::WhatsThis&lt;/a&gt; events that were handled successfully, the relevant popup may be shown depending on the user's system configuration.</source>
          <target state="translated">들어 &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent : 도구 설명&lt;/a&gt; 과 &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: WhatsThis를&lt;/a&gt; 성공적으로 처리 된 이벤트, 관련 팝업은 사용자의 시스템 구성에 따라 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3e9c5aae8994b63b33b43711606011dcc39677e" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt; and &lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt;, it is possible to set different horizontal and vertical spacings using &lt;a href=&quot;qgridlayout#horizontalSpacing-prop&quot;&gt;setHorizontalSpacing()&lt;/a&gt; and &lt;a href=&quot;qgridlayout#verticalSpacing-prop&quot;&gt;setVerticalSpacing()&lt;/a&gt;. In that case, spacing() returns -1.</source>
          <target state="translated">들면 &lt;a href=&quot;qgridlayout&quot;&gt;QGridLayout&lt;/a&gt; 및 &lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt; , 그것을 사용하여 서로 다른 수평 및 수직 간격을 설정하는 것이 가능하다 &lt;a href=&quot;qgridlayout#horizontalSpacing-prop&quot;&gt;setHorizontalSpacing ()&lt;/a&gt; 및 &lt;a href=&quot;qgridlayout#verticalSpacing-prop&quot;&gt;setVerticalSpacing을 ()&lt;/a&gt; . 이 경우 spacing ()은 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="50bb6c2ad053fe060aa3e56adeaa488828ee68f9" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; and &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, the &lt;code&gt;*&lt;/code&gt; operator returns the value component of an item. If you want to retrieve the key, call key() on the iterator. For symmetry, the iterator types also provide a &lt;a href=&quot;10-qdoc-commands-tablesandlists#value&quot;&gt;value&lt;/a&gt;() function to retrieve the value. For example, here's how we would print all items in a &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; to the console:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7070800ada00e153e5eccae91c2ddbb549168f16" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; and &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt;, the &lt;code&gt;*&lt;/code&gt; operator returns the value component of an item. If you want to retrieve the key, call key() on the iterator. For symmetry, the iterator types also provide a value() function to retrieve the value. For example, here's how we would print all items in a &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; to the console:</source>
          <target state="translated">들면 &lt;a href=&quot;qmap&quot;&gt;QMap&lt;/a&gt; 및 &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; 상기 &lt;code&gt;*&lt;/code&gt; 연산자는 항목의 값 성분을 반환한다. 키를 검색하려면 반복기에서 key ()를 호출하십시오. 대칭의 경우 반복자 유형은 값을 검색하는 value () 함수도 제공합니다. 예를 들어, &lt;a href=&quot;qmap&quot;&gt;QMap의&lt;/a&gt; 모든 항목을 콘솔 에 인쇄하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a4d4b9331927099165dde22683f2dbc553351955" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qml-qtdatavisualization-abstractaxis3d&quot;&gt;AbstractAxis3D&lt;/a&gt; enums, see &lt;a href=&quot;qabstract3daxis#AxisOrientation-enum&quot;&gt;QAbstract3DAxis::AxisOrientation&lt;/a&gt; and &lt;a href=&quot;qabstract3daxis#AxisType-enum&quot;&gt;QAbstract3DAxis::AxisType&lt;/a&gt;.</source>
          <target state="translated">들어 &lt;a href=&quot;qml-qtdatavisualization-abstractaxis3d&quot;&gt;AbstractAxis3D&lt;/a&gt; 열거 참조 &lt;a href=&quot;qabstract3daxis#AxisOrientation-enum&quot;&gt;QAbstract3DAxis :: AxisOrientation&lt;/a&gt; 및 &lt;a href=&quot;qabstract3daxis#AxisType-enum&quot;&gt;QAbstract3DAxis :: AxisType을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1e443acc0c9054f46f184f7effd5e35167ceb5b4" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qml-qtdatavisualization-abstractinputhandler3d&quot;&gt;AbstractInputHandler3D&lt;/a&gt; enums, see &lt;a href=&quot;qabstract3dinputhandler#InputView-enum&quot;&gt;QAbstract3DInputHandler::InputView&lt;/a&gt;.</source>
          <target state="translated">들어 &lt;a href=&quot;qml-qtdatavisualization-abstractinputhandler3d&quot;&gt;AbstractInputHandler3D&lt;/a&gt; 열거 참조 &lt;a href=&quot;qabstract3dinputhandler#InputView-enum&quot;&gt;QAbstract3DInputHandler :: InputView을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="438d33a2a0932b69253d49c077be7a7018c4ab56" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qml-qtdatavisualization-camera3d&quot;&gt;Camera3D&lt;/a&gt; enums, see &lt;a href=&quot;q3dcamera#CameraPreset-enum&quot;&gt;Q3DCamera::CameraPreset&lt;/a&gt;.</source>
          <target state="translated">들어 &lt;a href=&quot;qml-qtdatavisualization-camera3d&quot;&gt;Camera3D의&lt;/a&gt; 열거를 참조 &lt;a href=&quot;q3dcamera#CameraPreset-enum&quot;&gt;Q3DCamera :: CameraPreset을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1ebc8a129fb0f823d37a23b218f54f9f4337fcf9" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qml-qtdatavisualization-itemmodelbardataproxy&quot;&gt;ItemModelBarDataProxy&lt;/a&gt; enums, see &lt;a href=&quot;qitemmodelbardataproxy#MultiMatchBehavior-enum&quot;&gt;QItemModelBarDataProxy::MultiMatchBehavior&lt;/a&gt;.</source>
          <target state="translated">들어 &lt;a href=&quot;qml-qtdatavisualization-itemmodelbardataproxy&quot;&gt;ItemModelBarDataProxy&lt;/a&gt; 열거 참조 &lt;a href=&quot;qitemmodelbardataproxy#MultiMatchBehavior-enum&quot;&gt;QItemModelBarDataProxy :: MultiMatchBehavior을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5fd0ff613f27e7938dc433b639e0e8a528ac199b" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qml-qtdatavisualization-itemmodelsurfacedataproxy&quot;&gt;ItemModelSurfaceDataProxy&lt;/a&gt; enums, see &lt;a href=&quot;qitemmodelsurfacedataproxy#MultiMatchBehavior-enum&quot;&gt;QItemModelSurfaceDataProxy::MultiMatchBehavior&lt;/a&gt;.</source>
          <target state="translated">들어 &lt;a href=&quot;qml-qtdatavisualization-itemmodelsurfacedataproxy&quot;&gt;ItemModelSurfaceDataProxy&lt;/a&gt; 열거 참조 &lt;a href=&quot;qitemmodelsurfacedataproxy#MultiMatchBehavior-enum&quot;&gt;QItemModelSurfaceDataProxy :: MultiMatchBehavior을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="802de3ac3d00dfe16f9d1be43999b95b3e890e4b" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qml-qtdatavisualization-theme3d&quot;&gt;Theme3D&lt;/a&gt; enums, see &lt;a href=&quot;q3dtheme#ColorStyle-enum&quot;&gt;Q3DTheme::ColorStyle&lt;/a&gt; and &lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;Q3DTheme::Theme&lt;/a&gt;.</source>
          <target state="translated">들어 &lt;a href=&quot;qml-qtdatavisualization-theme3d&quot;&gt;Theme3D의&lt;/a&gt; 열거를 참조 &lt;a href=&quot;q3dtheme#ColorStyle-enum&quot;&gt;Q3DTheme : 색상 스타일&lt;/a&gt; 과 &lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;Q3DTheme :: 테마&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4c3c5697b895471ade7ba31e471f74edc0a163ee" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; class declarations in header files, here is a useful makefile rule if you only use GNU make:</source>
          <target state="translated">들어 &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT의&lt;/a&gt; 헤더 파일에서 클래스 선언, 여기 만 GNU 메이크업을 사용하는 경우 유용한 메이크 규칙은 다음과 같습니다</target>
        </trans-unit>
        <trans-unit id="6b4144525ebd3f6d413c030c56330e0d44680f58" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; class declarations in implementation (&lt;code&gt;.cpp&lt;/code&gt;) files, we suggest a makefile rule like this:</source>
          <target state="translated">구현 ( &lt;code&gt;.cpp&lt;/code&gt; ) 파일의 &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; 클래스 선언의 경우 다음 과 같은 makefile 규칙을 제안합니다.</target>
        </trans-unit>
        <trans-unit id="b4134eac90c49dfdb9eeb78cf9f12d660408ddb3" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qobject#tr&quot;&gt;translations&lt;/a&gt;, especially if the strings contains more than one escape sequence, you should consider using the &lt;a href=&quot;qstring#arg&quot;&gt;arg&lt;/a&gt;() function instead. This allows the order of the replacements to be controlled by the translator.</source>
          <target state="translated">대한 &lt;a href=&quot;qobject#tr&quot;&gt;번역&lt;/a&gt; , 문자열이 하나 개 이상의 이스케이프 시퀀스가 포함되어 특히, 당신은 사용을 고려해야합니다 &lt;a href=&quot;qstring#arg&quot;&gt;인수&lt;/a&gt; 대신 () 함수를. 이를 통해 번역기에서 교체 순서를 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0024fe3e699c55b6e690ee848d53ccb8284a75fd" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; with a menu, the menu indicator is styled using the &lt;a href=&quot;#menu-indicator-sub&quot;&gt;::menu-indicator&lt;/a&gt; subcontrol. Appearance of checkable push buttons can be customized using the &lt;a href=&quot;#open-ps&quot;&gt;:open&lt;/a&gt; and &lt;a href=&quot;#closed-ps&quot;&gt;:closed&lt;/a&gt; pseudo-states.</source>
          <target state="translated">들어 &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton을&lt;/a&gt; 메뉴와 메뉴 표시는 사용하는 서식이있다 &lt;a href=&quot;#menu-indicator-sub&quot;&gt;:: 메뉴 표시&lt;/a&gt; 서브 컨트롤을. 점검 가능한 푸시 버튼의 모양은 &lt;a href=&quot;#open-ps&quot;&gt;: open&lt;/a&gt; 및 &lt;a href=&quot;#closed-ps&quot;&gt;: closed&lt;/a&gt; 의사 상태를 사용하여 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7d8b658ba4ed7ceaaf2449ff97287720a5c9979d" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; with a menu, the menu indicator is styled using the &lt;a href=&quot;stylesheet-reference#menu-indicator-sub&quot;&gt;::menu-indicator&lt;/a&gt; subcontrol. Appearance of checkable push buttons can be customized using the &lt;a href=&quot;stylesheet-reference#open-ps&quot;&gt;:open&lt;/a&gt; and &lt;a href=&quot;stylesheet-reference#closed-ps&quot;&gt;:closed&lt;/a&gt; pseudo-states.</source>
          <target state="translated">들어 &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton을&lt;/a&gt; 메뉴와 메뉴 표시는 사용하는 서식이있다 &lt;a href=&quot;stylesheet-reference#menu-indicator-sub&quot;&gt;:: 메뉴 표시&lt;/a&gt; 서브 컨트롤을. 확인 가능한 누름 버튼의 모양은 &lt;a href=&quot;stylesheet-reference#open-ps&quot;&gt;: open&lt;/a&gt; 및 &lt;a href=&quot;stylesheet-reference#closed-ps&quot;&gt;: closed&lt;/a&gt; 의사 상태를 사용하여 사용자 정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ee03b903fad5160be8e88af6968f3ea9fa27a328" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnFieldChange&lt;/a&gt; and &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnRowChange&lt;/a&gt;, only one row may be deleted at a time and only if no other row has a cached change. Deletions are submitted immediately to the database. The model retains a blank row for successfully deleted row until refreshed with &lt;a href=&quot;qsqltablemodel#select&quot;&gt;select&lt;/a&gt;().</source>
          <target state="translated">들어 &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnFieldChange&lt;/a&gt; 및 &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnRowChange&lt;/a&gt; , 한 행 한 번에 삭제 될 수 있습니다 및 다른 행은 캐시의 변화가없는 경우에만. 삭제는 즉시 데이터베이스에 제출됩니다. &lt;a href=&quot;qsqltablemodel#select&quot;&gt;선택&lt;/a&gt; ()으로 새로 고칠 때까지 모델은 성공적으로 삭제 된 행에 대해 빈 행을 유지합니다 .</target>
        </trans-unit>
        <trans-unit id="527c3cd6512c02c86ddb8d0f090cc288f2aa49a9" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnRowChange&lt;/a&gt;, an index may receive a change only if no other row has a cached change. Changes are not submitted automatically.</source>
          <target state="translated">들어 &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnRowChange&lt;/a&gt; 다른 행은 캐시 변화가없는 경우에만, 인덱스는 변화가 나타날 수 있습니다. 변경 사항은 자동으로 제출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="70fdbfc56028c667cc4e73a9ee93c8a37a343fa7" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qsurface3dseries&quot;&gt;QSurface3DSeries&lt;/a&gt;, this property holds the selection pointer.</source>
          <target state="translated">들어 &lt;a href=&quot;qsurface3dseries&quot;&gt;QSurface3DSeries&lt;/a&gt; 이 속성은 선택 포인터를 보유하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="6d309b468be9e4b4a507f694a6a4533f346430d0" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt::CoarseTimer&lt;/a&gt; and &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt::VeryCoarseTimer&lt;/a&gt; types, &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; may wake up earlier than expected, within the margins for those types: 5% of the interval for &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt::CoarseTimer&lt;/a&gt; and 500 ms for &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt::VeryCoarseTimer&lt;/a&gt;.</source>
          <target state="translated">들어 &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt는 :: CoarseTimer&lt;/a&gt; 와 &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt는 :: VeryCoarseTimer&lt;/a&gt; 유형, &lt;a href=&quot;qtimer&quot;&gt;QTimer는&lt;/a&gt; 그 유형에 대해 예상보다 빨리, 여백 내에서 일어날 수에 대한 간격의 5 % &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt는 :: CoarseTimer&lt;/a&gt; 및 500 분 &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt는 :: VeryCoarseTimer을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7ec3d26bce0da0a3c4aed99c84fdbce55323b60b" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt::CoarseTimer&lt;/a&gt; and &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt::VeryCoarseTimer&lt;/a&gt; types, QTimer may wake up earlier than expected, within the margins for those types: 5% of the interval for &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt::CoarseTimer&lt;/a&gt; and 500 ms for &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt::VeryCoarseTimer&lt;/a&gt;.</source>
          <target state="translated">들어 &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt는 :: CoarseTimer&lt;/a&gt; 와 &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt는 :: VeryCoarseTimer&lt;/a&gt; 유형, QTimer 이러한 유형의 예상보다 빨리, 여백 내에서 일어날 수에 대한 간격의 5 % &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt는 :: CoarseTimer&lt;/a&gt; 및 500 분 &lt;a href=&quot;qt#TimerType-enum&quot;&gt;Qt는 :: VeryCoarseTimer을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bd5d1fb16c525d1bbda909d50a72fbbc5180734f" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; to work, you must have an event loop in your application; that is, you must call &lt;a href=&quot;qcoreapplication#exec&quot;&gt;QCoreApplication::exec&lt;/a&gt;() somewhere. Timer events will be delivered only while the event loop is running.</source>
          <target state="translated">들어 &lt;a href=&quot;qtimer&quot;&gt;QTimer&lt;/a&gt; 일에, 당신은 당신의 응용 프로그램에서 이벤트 루프를 가지고 있어야합니다; 즉, &lt;a href=&quot;qcoreapplication#exec&quot;&gt;QCoreApplication :: exec&lt;/a&gt; ()를 어딘가에 호출해야합니다 . 타이머 이벤트는 이벤트 루프가 실행되는 동안에 만 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="cbcd34929afe1847e718709ff9a7bbbad7457154" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; 2 to work, a graphics driver that provides OpenGL 2.1 or higher is required. The default driver from Windows is OpenGL 1.1. Qt includes a version of the &lt;a href=&quot;https://chromium.googlesource.com/angle/angle/+/master/README.md&quot;&gt;ANGLE&lt;/a&gt; project which is included from the Windows Qt installers. ANGLE implements the OpenGL ES 2.0 API on top of DirectX 11 or DirectX 9.</source>
          <target state="translated">들어 &lt;a href=&quot;qtquick-index&quot;&gt;Qt는 빠른&lt;/a&gt; 작업 2, OpenGL을 2.1 제공 이상 요구되는 그래픽 드라이버. Windows의 기본 드라이버는 OpenGL 1.1입니다. Qt에는 Windows Qt 설치 프로그램에 포함 된 &lt;a href=&quot;https://chromium.googlesource.com/angle/angle/+/master/README.md&quot;&gt;ANGLE&lt;/a&gt; 프로젝트 버전 이 포함되어 있습니다. ANGLE은 DirectX 11 또는 DirectX 9 위에 OpenGL ES 2.0 API를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="f89a777b627878d6791124c58630af0538bf6eff" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qtquick-index&quot;&gt;Qt Quick&lt;/a&gt; to work, a graphics driver that provides Direct 3D 11.1, Vulkan 1.0, or OpenGL 2.1 or higher is required. As of Qt 6, the default for Qt Quick on Windows is Direct3D 11. This is different from Qt 5, where the default was OpenGL, either directly, or through ANGLE, an OpenGL to Direct3D translator. ANGLE is no longer shipped with Qt in Qt 6.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3550cb6a6559356184284246c7fefd7ab762f25c" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc&lt;/a&gt; to process this file, add the following line to the &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">들어 &lt;a href=&quot;qtremoteobjects-repc#&quot;&gt;repc가&lt;/a&gt; 이 파일을 처리하려면에 다음 줄을 추가 &lt;code&gt;.pro&lt;/code&gt; 파일 :</target>
        </trans-unit>
        <trans-unit id="12c3907d6316b6483e37747e072ed8f7caca8697" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;windows&quot;&gt;Windows&lt;/a&gt; machines, either &lt;a href=&quot;https://mingw-w64.org/&quot;&gt;MinGW&lt;/a&gt; or Visual Studio toolchains can be used to compile Qt.</source>
          <target state="translated">들어 &lt;a href=&quot;windows&quot;&gt;윈도우&lt;/a&gt; 시스템, 하나 &lt;a href=&quot;https://mingw-w64.org/&quot;&gt;는 MinGW&lt;/a&gt; 또는 Visual Studio 툴체인은 Qt를 컴파일하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa3a40a51744135e82fbcc647f04745b4bcde679" translate="yes" xml:space="preserve">
          <source>For &lt;a href=&quot;windows#&quot;&gt;Windows&lt;/a&gt; machines, either &lt;a href=&quot;https://mingw-w64.org/#&quot;&gt;MinGW&lt;/a&gt; or Visual Studio toolchains can be used to compile Qt.</source>
          <target state="translated">들어 &lt;a href=&quot;windows#&quot;&gt;윈도우&lt;/a&gt; 시스템, 하나 &lt;a href=&quot;https://mingw-w64.org/#&quot;&gt;는 MinGW&lt;/a&gt; 또는 Visual Studio 툴체인은 Qt를 컴파일하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4bd4493bc3d93e3668e1b167782a6cc3b6c9d330" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;find_package&lt;/code&gt; to be successful, &lt;code&gt;CMake&lt;/code&gt; must find the Qt installation in one of the following ways:</source>
          <target state="translated">들어 &lt;code&gt;find_package&lt;/code&gt; 이 성공하려면 &lt;code&gt;CMake&lt;/code&gt; 는 다음 중 하나의 방법으로 Qt의 설치를 찾아야합니다 :</target>
        </trans-unit>
        <trans-unit id="095a36662cb6cd5a8a185028e23a9a1d3250ed7c" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;find_package&lt;/code&gt; to be successful, &lt;code&gt;CMake&lt;/code&gt; must find the Qt installation. There are different ways you can tell &lt;code&gt;CMake&lt;/code&gt; about Qt:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5089bf53a99884cbe6d67726c3f4c42500740669" translate="yes" xml:space="preserve">
          <source>For AAB packages, select &lt;b&gt;Projects&lt;/b&gt; &amp;gt; &lt;b&gt;Build&lt;/b&gt; &amp;gt; &lt;b&gt;Build Steps&lt;/b&gt; &amp;gt; &lt;b&gt;Build Android APK&lt;/b&gt; &amp;gt; &lt;b&gt;Build .aab (Android App Bundle)&lt;/b&gt; for Qt Creator to generate the &lt;code&gt;.aab&lt;/code&gt; file, then locate the package at:</source>
          <target state="translated">AAB 패키지의 경우 &lt;b&gt;프로젝트&lt;/b&gt; &amp;gt; &lt;b&gt;빌드&lt;/b&gt; &amp;gt; &lt;b&gt;빌드 단계&lt;/b&gt; &amp;gt; &lt;b&gt;Android APK &lt;/b&gt;&lt;b&gt;빌드&lt;/b&gt; &amp;gt; Qt Creator 용 &lt;b&gt;.aab (Android App Bundle) 빌드를 선택&lt;/b&gt; 하여 &lt;code&gt;.aab&lt;/code&gt; 파일 을 생성 한 후 다음 위치에서 패키지를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="a91f532d6a5d1927d90118ba68da653e62d817a7" translate="yes" xml:space="preserve">
          <source>For APIs other than OpenGL, it will likely be necessary to query certain API-specific resources (for example, the graphics device or the command list/buffer to add the commands to). This is done via &lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt;.</source>
          <target state="translated">OpenGL 이외의 API의 경우 특정 API 특정 리소스 (예 : 그래픽 장치 또는 명령을 추가하기위한 명령 목록 / 버퍼)를 쿼리해야 할 수 있습니다. 이것은 &lt;a href=&quot;qsgrendererinterface&quot;&gt;QSGRendererInterface&lt;/a&gt; 를 통해 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="7dddcc8ff2bc385a028ef727b63bb9f0be88dee5" translate="yes" xml:space="preserve">
          <source>For APK packages, locate the &lt;code&gt;.apk&lt;/code&gt; package at:</source>
          <target state="translated">APK 패키지의 경우 다음 위치에서 &lt;code&gt;.apk&lt;/code&gt; 패키지를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="55e779e16df967cb6bedd7eeb0cbae974ba26b19" translate="yes" xml:space="preserve">
          <source>For AbstractAxis3D enums, see &lt;a href=&quot;qabstract3daxis#AxisOrientation-enum&quot;&gt;QAbstract3DAxis::AxisOrientation&lt;/a&gt; and &lt;a href=&quot;qabstract3daxis#AxisType-enum&quot;&gt;QAbstract3DAxis::AxisType&lt;/a&gt;.</source>
          <target state="translated">AbstractAxis3D 열거 형에 대해서는 &lt;a href=&quot;qabstract3daxis#AxisOrientation-enum&quot;&gt;QAbstract3DAxis :: AxisOrientation&lt;/a&gt; 및 &lt;a href=&quot;qabstract3daxis#AxisType-enum&quot;&gt;QAbstract3DAxis :: AxisType을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="366e9b58f24c69e5e9cfdea212506bf8d2010505" translate="yes" xml:space="preserve">
          <source>For AbstractInputHandler3D enums, see &lt;a href=&quot;qabstract3dinputhandler#InputView-enum&quot;&gt;QAbstract3DInputHandler::InputView&lt;/a&gt;.</source>
          <target state="translated">AbstractInputHandler3D 열거 형에 대해서는 &lt;a href=&quot;qabstract3dinputhandler#InputView-enum&quot;&gt;QAbstract3DInputHandler :: InputView를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d65a8073e68ddc5b4f6b2a01ea6748a8026d5b8c" translate="yes" xml:space="preserve">
          <source>For C++ projects include the header appropriate for the current use case, for example applications using routes may use</source>
          <target state="translated">C ++ 프로젝트의 경우 현재 사용 사례에 적합한 헤더를 포함합니다. 예를 들어 경로를 사용하는 응용 프로그램은</target>
        </trans-unit>
        <trans-unit id="57b6f2dd54049811fd5d48ee4d6e8ac299312ada" translate="yes" xml:space="preserve">
          <source>For CMake:</source>
          <target state="translated">CMake의 경우 :</target>
        </trans-unit>
        <trans-unit id="61eb31c5069aa313e82bc797ab415d3e44061738" translate="yes" xml:space="preserve">
          <source>For Camera3D enums, see &lt;a href=&quot;q3dcamera#CameraPreset-enum&quot;&gt;Q3DCamera::CameraPreset&lt;/a&gt;.</source>
          <target state="translated">Camera3D 열거 형에 대해서는 &lt;a href=&quot;q3dcamera#CameraPreset-enum&quot;&gt;Q3DCamera :: CameraPreset을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5c5f8c7ca2686569df70736c215c2dd13f56dbd0" translate="yes" xml:space="preserve">
          <source>For HTML, the attribute value</source>
          <target state="translated">HTML의 경우 속성 값</target>
        </trans-unit>
        <trans-unit id="1e0a4d1e6fcd0834af3a1cef277a407295adfc8f" translate="yes" xml:space="preserve">
          <source>For IP version 4, this function accepts as well missing trailing components (i.e., less than 4 octets, like &quot;192.168.1&quot;), followed or not by a dot. If the netmask is also missing in that case, it is set to the number of octets actually passed (in the example above, it would be 24, for 3 octets).</source>
          <target state="translated">IP 버전 4의 경우이 함수는 후행 구성 요소 (예 : &quot;192.168.1&quot;과 같이 4 옥텟 미만)와 점이없는 것을 허용합니다. 이 경우 넷 마스크도없는 경우 실제로 전달 된 옥텟 수로 설정됩니다 (위의 예에서는 3 옥텟의 경우 24입니다).</target>
        </trans-unit>
        <trans-unit id="3db1b661d685dd02e037660e32c3c355f079f0cb" translate="yes" xml:space="preserve">
          <source>For IPv6 addresses, the prefix length is converted to an address where the number of bits set to 1 is equal to the prefix length. For a prefix length of 64 bits (the most common value), the netmask will be expressed as a &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; holding the address FFFF:FFFF:FFFF:FFFF::</source>
          <target state="translated">IPv6 주소의 경우 접두사 길이는 1로 설정된 비트 수가 접두사 길이와 같은 주소로 변환됩니다. 접두사 길이가 64 비트 (가장 일반적인 값) 인 경우 넷 마스크는 FFFF : FFFF : FFFF : FFFF :: 주소를 보유 하는 &lt;a href=&quot;qhostaddress&quot;&gt;QHostAddress&lt;/a&gt; 로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="74c7c83c2e0bab1dd6e6ec3012528589a33c8294" translate="yes" xml:space="preserve">
          <source>For ItemModelBarDataProxy enums, see &lt;a href=&quot;qitemmodelbardataproxy#MultiMatchBehavior-enum&quot;&gt;QItemModelBarDataProxy::MultiMatchBehavior&lt;/a&gt;.</source>
          <target state="translated">ItemModelBarDataProxy 열거 형에 대해서는 &lt;a href=&quot;qitemmodelbardataproxy#MultiMatchBehavior-enum&quot;&gt;QItemModelBarDataProxy :: MultiMatchBehavior를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="590a6e71e9b7265768f1aafc9be4f1238941b21e" translate="yes" xml:space="preserve">
          <source>For ItemModelSurfaceDataProxy enums, see &lt;a href=&quot;qitemmodelsurfacedataproxy#MultiMatchBehavior-enum&quot;&gt;QItemModelSurfaceDataProxy::MultiMatchBehavior&lt;/a&gt;.</source>
          <target state="translated">ItemModelSurfaceDataProxy 열거 형에 대해서는 &lt;a href=&quot;qitemmodelsurfacedataproxy#MultiMatchBehavior-enum&quot;&gt;QItemModelSurfaceDataProxy :: MultiMatchBehavior를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ade204a379290dd04dd715ddeb6f6c968ff491e5" translate="yes" xml:space="preserve">
          <source>For MySQL databases the row's auto-increment field will be returned.</source>
          <target state="translated">MySQL 데이터베이스의 경우 행의 자동 증가 필드가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="dc72c3ebb7d11dd90757a4ee892075b12ea58671" translate="yes" xml:space="preserve">
          <source>For OpenGL 3.x set the value to &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">OpenGL 3.x의 경우 값을 &lt;code&gt;2&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="b257ab238cdd8f0534524d2164eaa948a2714458" translate="yes" xml:space="preserve">
          <source>For OpenGL 4.x set the value to &lt;code&gt;3&lt;/code&gt;.</source>
          <target state="translated">OpenGL 4.x의 경우 값을 &lt;code&gt;3&lt;/code&gt; 으로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="34c39ef9608aff3df934aedece71e50207b6048c" translate="yes" xml:space="preserve">
          <source>For OpenGL ES2 set the value to &lt;code&gt;1&lt;/code&gt;.</source>
          <target state="translated">OpenGL ES2의 경우 값을 &lt;code&gt;1&lt;/code&gt; 로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="efd36a03a146dd71af2941811bea15be0ca178ac" translate="yes" xml:space="preserve">
          <source>For OpenGL identifies the API required for the attached technique. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">OpenGL의 경우 첨부 된 기술에 필요한 API를 식별합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9837e5c7337bd5a067bcc4996e3f70c40ca13915" translate="yes" xml:space="preserve">
          <source>For OpenGL rendering, this page gives more info about the &lt;a href=&quot;https://www.opengl.org/wiki/Memory_Model&quot;&gt;Memory Model&lt;/a&gt;</source>
          <target state="translated">OpenGL 렌더링의 경우이 페이지는 &lt;a href=&quot;https://www.opengl.org/wiki/Memory_Model&quot;&gt;메모리 모델에&lt;/a&gt; 대한 자세한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ec7695bf267c0d2391e84f950f9daac1479512cb" translate="yes" xml:space="preserve">
          <source>For OpenGL the following states are set on the render thread's context before this function is called:</source>
          <target state="translated">OpenGL의 경우이 함수가 호출되기 전에 렌더 스레드의 컨텍스트에서 다음 상태가 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="3daff7837b1f7e1667ab3b067bf56b9640a32ad4" translate="yes" xml:space="preserve">
          <source>For OpenGL versions 1.0 through to 3.0 there are no profiles, leading to the classes:</source>
          <target state="translated">OpenGL 버전 1.0에서 3.0까지의 경우 프로파일이 없으므로 클래스로 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="f2828df9f261457c0dcf740e6cd05ba7462cac47" translate="yes" xml:space="preserve">
          <source>For Oracle 10g, all you need is the &quot;Instant Client Package - Basic&quot; and &quot;Instant Client Package - SDK&quot;. For Oracle prior to 10g, you require the standard Oracle client and the SDK packages.</source>
          <target state="translated">Oracle 10g의 경우 &quot;Instant Client Package-Basic&quot;및 &quot;Instant Client Package-SDK&quot;만 있으면됩니다. 10g 이전의 Oracle의 경우 표준 Oracle 클라이언트 및 SDK 패키지가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="863130effa011b78dc88dafe1e290a12a940b8bd" translate="yes" xml:space="preserve">
          <source>For Oracle version 10, we assume that you installed the RPM packages of the Instant Client Package SDK (you need to adjust the version number accordingly):</source>
          <target state="translated">Oracle 버전 10의 경우 Instant Client Package SDK의 RPM 패키지를 설치했다고 가정합니다 (버전 번호를 적절하게 조정해야 함).</target>
        </trans-unit>
        <trans-unit id="f1836410685764628c64cfd3ba2ff865b537d7f2" translate="yes" xml:space="preserve">
          <source>For Oracle version 9:</source>
          <target state="translated">Oracle 버전 9의 경우 :</target>
        </trans-unit>
        <trans-unit id="a771b4bc25f5d35def2126cdd1c2d835d91dac5a" translate="yes" xml:space="preserve">
          <source>For QML signals, enum values may be passed as signal parameters using the &lt;code&gt;int&lt;/code&gt; type:</source>
          <target state="translated">QML 신호의 경우, 열거 형 값은 &lt;code&gt;int&lt;/code&gt; 유형을 사용하여 신호 매개 변수로 전달 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7100f0e6118af17f522c653fcbfa2ee6e3554365" translate="yes" xml:space="preserve">
          <source>For QML types defined in &lt;code&gt;.qml&lt;/code&gt; files, QDoc will parse the QML and determine the properties, signals, and the type within the QML definition. The QDoc block then needs to be immediately above the declaration. For QML types implemented in C++, QDoc will output warnings if the C++ class documentation does not exist. The class documentation may be marked as &lt;a href=&quot;16-qdoc-commands-status#internal-command&quot;&gt;internal&lt;/a&gt; if it is not a public API.</source>
          <target state="translated">&lt;code&gt;.qml&lt;/code&gt; 파일에 정의 된 QML 유형의 경우 QDoc은 QML을 구문 분석하고 QML 정의 내의 특성, 신호 및 유형을 결정합니다. 그러면 QDoc 블록이 선언 바로 위에 있어야합니다. C ++로 구현 된 QML 유형의 경우 C ++ 클래스 문서가없는 경우 QDoc은 경고를 출력합니다. 클래스 문서가 공개 API가 아닌 경우 &lt;a href=&quot;16-qdoc-commands-status#internal-command&quot;&gt;내부&lt;/a&gt; 문서로 표시 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="18e3994ecdf2e752ffd00df41f73b16b002f9edf" translate="yes" xml:space="preserve">
          <source>For Qt Quick 3D the biggest change in Qt 6.0 is the migration to the common Rendering Hardware Interface, which allows Qt Quick 3D to run on Direct3D, Metal and Vulkan in addition to OpenGL and OpenGL ES.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c09b8d74f57e6f0d6b8804cf5a7eb053950cc8ac" translate="yes" xml:space="preserve">
          <source>For Qt Quick and Qt Quick 3D applications, Qt 6 introduces support for Direct 3D 11, Vulkan, and Metal, in addition to OpenGL. On Windows, Qt 6 defaults to Direct 3D, therefore the effect of the removal of ANGLE is lessened by the addition of support to other graphics APIs.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a81770b23ebedf28d6343c82c4725db490b59648" translate="yes" xml:space="preserve">
          <source>For Qt Quick applications, Qt 3D provides the following QML modules:</source>
          <target state="translated">Qt Quick 애플리케이션의 경우 Qt 3D는 다음과 같은 QML 모듈을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7c29f958778ec1fe5de1a047b3129ccee7bad042" translate="yes" xml:space="preserve">
          <source>For TCP sockets, this function may be used to specify which interface to use for an outgoing connection, which is useful in case of multiple network interfaces.</source>
          <target state="translated">TCP 소켓의 경우이 기능을 사용하여 발신 연결에 사용할 인터페이스를 지정할 수 있습니다. 이는 여러 네트워크 인터페이스의 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="82b280da224460ff5c724e9b56d92928e3fec19f" translate="yes" xml:space="preserve">
          <source>For Theme3D enums, see &lt;a href=&quot;q3dtheme#ColorStyle-enum&quot;&gt;Q3DTheme::ColorStyle&lt;/a&gt; and &lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;Q3DTheme::Theme&lt;/a&gt;.</source>
          <target state="translated">Theme3D 열거 형은 &lt;a href=&quot;q3dtheme#ColorStyle-enum&quot;&gt;Q3DTheme :: ColorStyle&lt;/a&gt; 및 &lt;a href=&quot;q3dtheme#Theme-enum&quot;&gt;Q3DTheme :: Theme를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6939e0ff2f6fbfe837069f60425b32400a1bae5a" translate="yes" xml:space="preserve">
          <source>For UDP sockets, after binding, the signal &lt;a href=&quot;qiodevice#readyRead&quot;&gt;QUdpSocket::readyRead&lt;/a&gt;() is emitted whenever a UDP datagram arrives on the specified address and port. Thus, this function is useful to write UDP servers.</source>
          <target state="translated">UDP 소켓의 경우 바인딩 후 신호 &lt;a href=&quot;qiodevice#readyRead&quot;&gt;QUdpSocket :: readyRead&lt;/a&gt; ()는 UDP 데이터 그램이 지정된 주소와 포트에 도착할 때마다 발생합니다. 따라서이 기능은 UDP 서버를 작성하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b46274e9c7d312a7ca9cafe4e11bc9cdf43ca3e9" translate="yes" xml:space="preserve">
          <source>For Unix operating systems this returns &quot;/&quot;. For Windows file systems this normally returns &quot;c:/&quot;.</source>
          <target state="translated">유닉스 운영 체제의 경우 &quot;/&quot;를 반환합니다. Windows 파일 시스템의 경우 일반적으로 &quot;c : /&quot;를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4481fa9cacc9bf5c219ca38443fec159054e18f7" translate="yes" xml:space="preserve">
          <source>For Vulkan, &lt;code&gt;layout&lt;/code&gt; contains a &lt;code&gt;VkImageLayout&lt;/code&gt; value.</source>
          <target state="translated">Vulkan의 경우 &lt;code&gt;layout&lt;/code&gt; 에 &lt;code&gt;VkImageLayout&lt;/code&gt; 값이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="62e643361dc632bb175c5c493a2fdd94271514a3" translate="yes" xml:space="preserve">
          <source>For X and Z values this acts just like &lt;code&gt;MMBAverage&lt;/code&gt;, but Y values are added together instead of averaged and the total is used as the surface point Y position.</source>
          <target state="translated">X 및 Z 값의 경우 이는 &lt;code&gt;MMBAverage&lt;/code&gt; 와 동일하게 작동 하지만 Y 값은 평균 대신 함께 추가되고 총계는 표면 점 Y 위치로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6cbc12be8aca4b65a6699b207da53ca0343fb81c" translate="yes" xml:space="preserve">
          <source>For X11 where all printing is directly to PDF, this function will always return a one item list containing only the PDF resolution, i.e., 72 (72 dpi -- but see &lt;a href=&quot;qprinter#PrinterMode-enum&quot;&gt;PrinterMode&lt;/a&gt;).</source>
          <target state="translated">모든 인쇄가 PDF로 직접 인쇄되는 X11의 경우이 함수는 항상 PDF 해상도 만 포함하는 하나의 항목 목록 (예 : 72 ( &lt;a href=&quot;qprinter#PrinterMode-enum&quot;&gt;72dpi-프린터 모드&lt;/a&gt; 참조 ))을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a26e5d240436edf961c14a56717eda25680c3b1f" translate="yes" xml:space="preserve">
          <source>For a &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent::Shortcut&lt;/a&gt; event to occur, the shortcut's key sequence must be entered by the user in a context where the shortcut is active. The possible contexts are these:</source>
          <target state="translated">A에 대한 &lt;a href=&quot;qevent#Type-enum&quot;&gt;QEvent :: 바로 가기&lt;/a&gt; 이벤트가 발생, 바로 가기의 키 순서는 바로 가기가 활성화 된 상황에서 사용자가 입력해야합니다. 가능한 컨텍스트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cb1c91ca5feb32490a08a93bbc74fa30a1cacdd2" translate="yes" xml:space="preserve">
          <source>For a C++ application that performs 2D or 3D rendering, collision detection, and also handle user input, add the following line to its qmake &lt;code&gt;.pro&lt;/code&gt; file:</source>
          <target state="translated">2D 또는 3D 렌더링, 충돌 감지 및 사용자 입력을 처리하는 C ++ 응용 프로그램의 경우 qmake &lt;code&gt;.pro&lt;/code&gt; 파일에 다음 줄을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="19c405bdd2aa2f6417a264e8d1245c16c385e3f4" translate="yes" xml:space="preserve">
          <source>For a Model to be rendered in a scene, it must have a material attached to it. There are three types of material in Qt Quick 3D, namely &lt;a href=&quot;qml-qtquick3d-custommaterial&quot;&gt;CustomMaterial&lt;/a&gt;, &lt;a href=&quot;qml-qtquick3d-defaultmaterial&quot;&gt;DefaultMaterial&lt;/a&gt; and &lt;a href=&quot;qml-qtquick3d-principledmaterial&quot;&gt;PrincipledMaterial&lt;/a&gt;. &lt;a href=&quot;qml-qtquick3d-defaultmaterial&quot;&gt;DefaultMaterial&lt;/a&gt; is a specular/glossiness material model, &lt;a href=&quot;qml-qtquick3d-principledmaterial&quot;&gt;PrincipledMaterial&lt;/a&gt; is a metallic/roughness material model and &lt;a href=&quot;qml-qtquick3d-custommaterial&quot;&gt;CustomMaterial&lt;/a&gt; is a material customizable with user-provided shaders. The table below shows how &lt;a href=&quot;qml-qtquick3d-defaultmaterial&quot;&gt;DefaultMaterial&lt;/a&gt; and &lt;a href=&quot;qml-qtquick3d-principledmaterial&quot;&gt;PrincipledMaterial&lt;/a&gt; can look and what high-level properties are used to describe them:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5b6e8ca28405477520404cf52ca521ec79adf304" translate="yes" xml:space="preserve">
          <source>For a brief introduction to Qt's regexp engine, see &lt;a href=&quot;qregexp&quot;&gt;QRegExp&lt;/a&gt;.</source>
          <target state="translated">Qt의 정규식 엔진에 대한 간략한 소개는 &lt;a href=&quot;qregexp&quot;&gt;QRegExp를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="50de55c2fc38479cce81651d650cec1604162287" translate="yes" xml:space="preserve">
          <source>For a complete description of this type, see &lt;a href=&quot;#soundeffect&quot;&gt;SoundEffect&lt;/a&gt;</source>
          <target state="translated">이 유형에 대한 자세한 설명은 &lt;a href=&quot;#soundeffect&quot;&gt;SoundEffect를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="98cfba843043867f5120448148aa0cfc8918cb0b" translate="yes" xml:space="preserve">
          <source>For a complete description of this type, see &lt;a href=&quot;qml-multimedia#soundeffect&quot;&gt;SoundEffect&lt;/a&gt;</source>
          <target state="translated">이 유형에 대한 자세한 설명은 &lt;a href=&quot;qml-multimedia#soundeffect&quot;&gt;SoundEffect를&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="06f92371ac676d1b77a727113993bab880473c0a" translate="yes" xml:space="preserve">
          <source>For a complete example using an extension class, see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-taskmenuextension-example.html#&quot;&gt;Task Menu Extension example&lt;/a&gt;. The example shows how to create a custom widget plugin for Qt Designer, and how to to use the &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; class to add custom items to</source>
          <target state="translated">확장 클래스를 사용한 전체 예제는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-taskmenuextension-example.html#&quot;&gt;작업 메뉴 확장 예제를&lt;/a&gt; 참조하십시오 . 이 예는 Qt Designer 용 사용자 정의 위젯 플러그인을 작성하는 방법 및 &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; 클래스를 사용하여 사용자 정의 항목을 추가 하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="91517ab35292fc1c2f7a9bb09b6cb7cc7d11108a" translate="yes" xml:space="preserve">
          <source>For a complete example using an extension class, see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-taskmenuextension-example.html&quot;&gt;Task Menu Extension example&lt;/a&gt;. The example shows how to create a custom widget plugin for Qt Designer, and how to to use the &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; class to add custom items to</source>
          <target state="translated">확장 클래스를 사용하는 전체 예제는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-taskmenuextension-example.html&quot;&gt;작업 메뉴 확장 예제를&lt;/a&gt; 참조하십시오 . 이 예제는 Qt Designer 용 사용자 정의 위젯 플러그인을 만드는 방법과 &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; 클래스를 사용하여 사용자 정의 항목을 추가 하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a3026c577997fa074094d629cedf5cc518f031dd" translate="yes" xml:space="preserve">
          <source>For a complete example using an extension class, see the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtdesigner-taskmenuextension-example.html&quot;&gt;Task Menu Extension example&lt;/a&gt;. The example shows how to create a custom widget plugin for Qt Designer, and how to to use the &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; class to add custom items to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="293b1a89ae24659c34d8164b58d8c56983bba5c4" translate="yes" xml:space="preserve">
          <source>For a complete example using the &lt;a href=&quot;qdesignercontainerextension&quot;&gt;QDesignerContainerExtension&lt;/a&gt; class, see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-containerextension-example.html#&quot;&gt;Container Extension example&lt;/a&gt;. The example shows how to create a custom multi-page plugin for</source>
          <target state="translated">&lt;a href=&quot;qdesignercontainerextension&quot;&gt;QDesignerContainerExtension&lt;/a&gt; 클래스 를 사용하는 전체 예제 는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-containerextension-example.html#&quot;&gt;컨테이너 확장 예제를&lt;/a&gt; 참조하십시오 . 이 예는에 대한 사용자 정의 다중 페이지 플러그인을 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="06b61e49320d7b778d34ae1b36e0013ea3596d31" translate="yes" xml:space="preserve">
          <source>For a complete example using the &lt;a href=&quot;qdesignercustomwidgetinterface&quot;&gt;QDesignerCustomWidgetInterface&lt;/a&gt; class, see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-customwidgetplugin-example.html#&quot;&gt;Custom Widget Example&lt;/a&gt;. The example shows how to create a custom widget plugin for</source>
          <target state="translated">&lt;a href=&quot;qdesignercustomwidgetinterface&quot;&gt;QDesignerCustomWidgetInterface&lt;/a&gt; 클래스 를 사용하는 전체 예제 는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-customwidgetplugin-example.html#&quot;&gt;사용자 정의 위젯 예제를&lt;/a&gt; 참조하십시오 . 이 예는에 대한 사용자 정의 위젯 플러그인을 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e70dec9ad2bc6a476e70aa7b0128ca08fe604fae" translate="yes" xml:space="preserve">
          <source>For a complete example using the &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; class, see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-taskmenuextension-example.html#&quot;&gt;Task Menu Extension example&lt;/a&gt;. The example shows how to create a custom widget plugin for</source>
          <target state="translated">&lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; 클래스 를 사용하는 전체 예제 는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-taskmenuextension-example.html#&quot;&gt;태스크 메뉴 확장 예제를&lt;/a&gt; 참조하십시오 . 이 예는에 대한 사용자 정의 위젯 플러그인을 작성하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b24cc0fec0eaa57114b6f46bc809b3ca0599bbe4" translate="yes" xml:space="preserve">
          <source>For a complete example using the &lt;a href=&quot;qextensionfactory&quot;&gt;QExtensionFactory&lt;/a&gt; class, see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-taskmenuextension-example.html#&quot;&gt;Task Menu Extension example&lt;/a&gt;. The example shows how to create a custom widget plugin for Qt Designer, and how to to use the &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; class to add custom items to Qt Designer's task menu.</source>
          <target state="translated">&lt;a href=&quot;qextensionfactory&quot;&gt;QExtensionFactory&lt;/a&gt; 클래스 를 사용하는 전체 예제 는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-taskmenuextension-example.html#&quot;&gt;타스크 메뉴 확장 예제를&lt;/a&gt; 참조하십시오 . 이 예제는 Qt Designer 용 사용자 정의 위젯 플러그인을 작성하는 방법 및 &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; 클래스를 사용하여 Qt Designer의 태스크 메뉴에 사용자 정의 항목을 추가 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="bcbb0384f2c49418e157f2a665e254f5a6bbb67f" translate="yes" xml:space="preserve">
          <source>For a complete example using the &lt;a href=&quot;qextensionmanager&quot;&gt;QExtensionManager&lt;/a&gt; class, see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-taskmenuextension-example.html#&quot;&gt;Task Menu Extension example&lt;/a&gt;. The example shows how to create a custom widget plugin for Qt Designer, and how to to use the &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; class to add custom items to</source>
          <target state="translated">&lt;a href=&quot;qextensionmanager&quot;&gt;QExtensionManager&lt;/a&gt; 클래스 를 사용하는 전체 예제 는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-taskmenuextension-example.html#&quot;&gt;태스크 메뉴 확장 예제를&lt;/a&gt; 참조하십시오 . 이 예는 Qt Designer 용 사용자 정의 위젯 플러그인을 작성하는 방법 및 &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; 클래스를 사용하여 사용자 정의 항목을 추가 하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="266302514a5f52f10c349c9225521b5c39536e9c" translate="yes" xml:space="preserve">
          <source>For a complete example using the &lt;a href=&quot;qscrollarea&quot;&gt;QScrollArea&lt;/a&gt; class, see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-widgets-imageviewer-example.html#&quot;&gt;Image Viewer&lt;/a&gt; example. The example shows how to combine &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; and &lt;a href=&quot;qscrollarea&quot;&gt;QScrollArea&lt;/a&gt; to display an image.</source>
          <target state="translated">&lt;a href=&quot;qscrollarea&quot;&gt;QScrollArea&lt;/a&gt; 클래스 를 사용하는 전체 예제 는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-widgets-imageviewer-example.html#&quot;&gt;이미지 뷰어&lt;/a&gt; 예제를 참조하십시오 . 이 예는 &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; 과 &lt;a href=&quot;qscrollarea&quot;&gt;QScrollArea&lt;/a&gt; 를 결합 하여 이미지를 표시하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="273bc4086db85a0201badb0c2957f4b183c6494a" translate="yes" xml:space="preserve">
          <source>For a complete example using the &lt;a href=&quot;quiloader&quot;&gt;QUiLoader&lt;/a&gt; class, see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-calculatorbuilder-example.html&quot;&gt;Calculator Builder Example&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;quiloader&quot;&gt;QUiLoader&lt;/a&gt; 클래스 를 사용하는 전체 예제 는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-calculatorbuilder-example.html&quot;&gt;계산기 빌더 예제를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6676047c3ab56cd894af6fbb12ce8bab87953d82" translate="yes" xml:space="preserve">
          <source>For a complete example using the QDesignerContainerExtension class, see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-containerextension-example.html&quot;&gt;Container Extension example&lt;/a&gt;. The example shows how to create a custom multi-page plugin for</source>
          <target state="translated">QDesignerContainerExtension 클래스를 사용하는 전체 예제는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-containerextension-example.html&quot;&gt;컨테이너 확장 예제를&lt;/a&gt; 참조하십시오 . 이 예제는 사용자 지정 다중 페이지 플러그인을 만드는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1987df2b90d2c2d5d320bd123a5d43c672787a7f" translate="yes" xml:space="preserve">
          <source>For a complete example using the QDesignerContainerExtension class, see the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtdesigner-containerextension-example.html&quot;&gt;Container Extension example&lt;/a&gt;. The example shows how to create a custom multi-page plugin for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="63d31a85eb3fb44eb09cb9399f18854bd37f51d2" translate="yes" xml:space="preserve">
          <source>For a complete example using the QDesignerCustomWidgetInterface class, see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-customwidgetplugin-example.html&quot;&gt;Custom Widget Example&lt;/a&gt;. The example shows how to create a custom widget plugin for</source>
          <target state="translated">QDesignerCustomWidgetInterface 클래스를 사용하는 전체 예제는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-customwidgetplugin-example.html&quot;&gt;사용자 정의 위젯 예제를&lt;/a&gt; 참조하십시오 . 이 예제는 사용자 정의 위젯 플러그인을 만드는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="57c941f502370c6e56136b1caef242a6fe30075b" translate="yes" xml:space="preserve">
          <source>For a complete example using the QDesignerCustomWidgetInterface class, see the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtdesigner-customwidgetplugin-example.html&quot;&gt;Custom Widget Example&lt;/a&gt;. The example shows how to create a custom widget plugin for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f7ecda0eabf830022f12264ca0dc47a93fd398d1" translate="yes" xml:space="preserve">
          <source>For a complete example using the QDesignerTaskMenuExtension class, see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-taskmenuextension-example.html&quot;&gt;Task Menu Extension example&lt;/a&gt;. The example shows how to create a custom widget plugin for</source>
          <target state="translated">QDesignerTaskMenuExtension 클래스를 사용하는 전체 예제는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-taskmenuextension-example.html&quot;&gt;작업 메뉴 확장 예제를&lt;/a&gt; 참조하십시오 . 이 예제는 사용자 정의 위젯 플러그인을 만드는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b75881bba2d4a110b2945c64ceec6433b6b98acd" translate="yes" xml:space="preserve">
          <source>For a complete example using the QDesignerTaskMenuExtension class, see the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtdesigner-taskmenuextension-example.html&quot;&gt;Task Menu Extension example&lt;/a&gt;. The example shows how to create a custom widget plugin for</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="331ba3d48609cb01a1cc29ed5a7ee6b8b9faa99f" translate="yes" xml:space="preserve">
          <source>For a complete example using the QExtensionFactory class, see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-taskmenuextension-example.html&quot;&gt;Task Menu Extension example&lt;/a&gt;. The example shows how to create a custom widget plugin for Qt Designer, and how to to use the &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; class to add custom items to Qt Designer's task menu.</source>
          <target state="translated">QExtensionFactory 클래스를 사용하는 전체 예제는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-taskmenuextension-example.html&quot;&gt;작업 메뉴 확장 예제를&lt;/a&gt; 참조하십시오 . 이 예제는 Qt Designer 용 사용자 정의 위젯 플러그인을 만드는 방법과 &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; 클래스를 사용하여 Qt Designer의 작업 메뉴에 사용자 정의 항목을 추가 하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="358d021bba0bd67bd025197bb71463ac4ea791c7" translate="yes" xml:space="preserve">
          <source>For a complete example using the QExtensionFactory class, see the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtdesigner-taskmenuextension-example.html&quot;&gt;Task Menu Extension example&lt;/a&gt;. The example shows how to create a custom widget plugin for Qt Designer, and how to to use the &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; class to add custom items to Qt Designer's task menu.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cd18f6a047a59f9f4089e1f046d52f7b693ff5c5" translate="yes" xml:space="preserve">
          <source>For a complete example using the QExtensionManager class, see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-taskmenuextension-example.html&quot;&gt;Task Menu Extension example&lt;/a&gt;. The example shows how to create a custom widget plugin for Qt Designer, and how to to use the &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; class to add custom items to</source>
          <target state="translated">QExtensionManager 클래스를 사용하는 전체 예제는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-taskmenuextension-example.html&quot;&gt;작업 메뉴 확장 예제를&lt;/a&gt; 참조하십시오 . 이 예제는 Qt Designer 용 사용자 정의 위젯 플러그인을 만드는 방법과 &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; 클래스를 사용하여 사용자 정의 항목을 추가 하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="e8612bfa097d4feab233c56b2e6ba1dca07d0fb0" translate="yes" xml:space="preserve">
          <source>For a complete example using the QExtensionManager class, see the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtdesigner-taskmenuextension-example.html&quot;&gt;Task Menu Extension example&lt;/a&gt;. The example shows how to create a custom widget plugin for Qt Designer, and how to to use the &lt;a href=&quot;qdesignertaskmenuextension&quot;&gt;QDesignerTaskMenuExtension&lt;/a&gt; class to add custom items to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b14d5ac13626782bcde1d58c6d754ae07ce992e4" translate="yes" xml:space="preserve">
          <source>For a complete example using the QScrollArea class, see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-widgets-imageviewer-example.html&quot;&gt;Image Viewer&lt;/a&gt; example. The example shows how to combine &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; and QScrollArea to display an image.</source>
          <target state="translated">QScrollArea 클래스를 사용하는 전체 예제는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-widgets-imageviewer-example.html&quot;&gt;이미지 뷰어&lt;/a&gt; 예제를 참조하십시오 . 이 예제는 &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; 과 QScrollArea를 결합 하여 이미지를 표시하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="2029bf15c3077a689bdddd5343627739ed0da2bc" translate="yes" xml:space="preserve">
          <source>For a complete example using the QScrollArea class, see the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-widgets-imageviewer-example.html&quot;&gt;Image Viewer&lt;/a&gt; example. The example shows how to combine &lt;a href=&quot;qlabel&quot;&gt;QLabel&lt;/a&gt; and QScrollArea to display an image.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d2445b21c37859d81a578090980f46b02b0a237b" translate="yes" xml:space="preserve">
          <source>For a complete example using the QUiLoader class, see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-calculatorbuilder-example.html&quot;&gt;Calculator Builder Example&lt;/a&gt;.</source>
          <target state="translated">QUiLoader 클래스를 사용하는 전체 예제는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-calculatorbuilder-example.html&quot;&gt;계산기 빌더 예제를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b5f6c87dd44d4b0f813fbf7ec84ae24b789f6a2f" translate="yes" xml:space="preserve">
          <source>For a complete example using the QUiLoader class, see the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtdesigner-calculatorbuilder-example.html&quot;&gt;Calculator Builder Example&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f42cda620fd797ca0710e57b6e57f2ac2ea23a98" translate="yes" xml:space="preserve">
          <source>For a complete explanation of &lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; sequences, visit &lt;a href=&quot;http://www.w3.org/TR/xpath-datamodel/&quot;&gt;XQuery Data Model&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;xmlprocessing&quot;&gt;XQuery&lt;/a&gt; 시퀀스에 대한 전체 설명은 &lt;a href=&quot;http://www.w3.org/TR/xpath-datamodel/&quot;&gt;XQuery 데이터 모델을 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="1c84f2b96f8bd047257b2cb31f6b6ae14f80cc08" translate="yes" xml:space="preserve">
          <source>For a complete explanation of &lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; sequences, visit &lt;a href=&quot;http://www.w3.org/TR/xpath-datamodel/&quot;&gt;XQuery Data Model&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;xmlprocessing#&quot;&gt;XQuery&lt;/a&gt; 시퀀스에 대한 전체 설명을 보려면 &lt;a href=&quot;http://www.w3.org/TR/xpath-datamodel/&quot;&gt;XQuery 데이터 모델을&lt;/a&gt; 방문하십시오 .</target>
        </trans-unit>
        <trans-unit id="eb68fe95ed52a14a9bc0bc490ed4c9a47467c8b6" translate="yes" xml:space="preserve">
          <source>For a complete list of all native interfaces, see the &lt;a href=&quot;native-interfaces&quot;&gt;Native Interfaces&lt;/a&gt; overview.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="a4bb31aae88e2e8a8f1dccc3dac9baff0bbbbffc" translate="yes" xml:space="preserve">
          <source>For a complete list of all type conversions, see the &lt;a href=&quot;platform-type-conversions&quot;&gt;Type Conversions&lt;/a&gt; overview.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64ca422a742eb92f1af22e8f040ad867579a63ec" translate="yes" xml:space="preserve">
          <source>For a controller in the &lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;CentralRole&lt;/a&gt;, this value will always be the one passed in when the controller object was created. For a controller in the &lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;PeripheralRole&lt;/a&gt;, this value is the address of the currently connected client device. In particular, this address will be invalid if the controller is not currently in the &lt;a href=&quot;qlowenergycontroller#ControllerState-enum&quot;&gt;ConnectedState&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;CentralRole&lt;/a&gt; 의 컨트롤러의 경우이 값은 항상 컨트롤러 개체를 만들 때 전달 된 값입니다. &lt;a href=&quot;qlowenergycontroller#Role-enum&quot;&gt;PeripheralRole&lt;/a&gt; 의 컨트롤러의 경우이 값은 현재 연결된 클라이언트 장치의 주소입니다. 특히,이 주소는 컨트롤러가 현재 &lt;a href=&quot;qlowenergycontroller#ControllerState-enum&quot;&gt;ConnectedState에&lt;/a&gt; 없는 경우 유효하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="93fad76cd11c70a16cf9e25ee924040b3cb3b668" translate="yes" xml:space="preserve">
          <source>For a custom page size this will be the original size used to create the page size object.</source>
          <target state="translated">사용자 정의 페이지 크기의 경우 페이지 크기 객체를 만드는 데 사용되는 원래 크기가됩니다.</target>
        </trans-unit>
        <trans-unit id="b02e7152b63a71318e65fde1e784de86d0c51e1a" translate="yes" xml:space="preserve">
          <source>For a custom page size this will be the original units used to create the page size object.</source>
          <target state="translated">사용자 정의 페이지 크기의 경우 페이지 크기 개체를 만드는 데 사용되는 원래 단위가됩니다.</target>
        </trans-unit>
        <trans-unit id="fd6dfc883284e41fef991d44d7f1397d6e40d735" translate="yes" xml:space="preserve">
          <source>For a default constructed &lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt;, this function returns &lt;code&gt;true&lt;/code&gt;. The same applies for any other &lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; whose &lt;a href=&quot;qsourcelocation#uri&quot;&gt;uri&lt;/a&gt;() is invalid.</source>
          <target state="translated">구성된 기본 &lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; 의 경우이 함수는 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다 . 동일은 다른 적용 &lt;a href=&quot;qsourcelocation&quot;&gt;QSourceLocation&lt;/a&gt; 그 &lt;a href=&quot;qsourcelocation#uri&quot;&gt;URI&lt;/a&gt; () 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c2ae25a00a532dcaea4a62d6eeea005a0113b400" translate="yes" xml:space="preserve">
          <source>For a default constructed QSourceLocation(), &lt;a href=&quot;qsourcelocation#isNull&quot;&gt;isNull&lt;/a&gt;() returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">기본 생성 QSourceLocation ()의 경우 &lt;a href=&quot;qsourcelocation#isNull&quot;&gt;isNull&lt;/a&gt; ()은 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="f1dfc794bbe7d2d4b418d4e2ada5cac5a6db9747" translate="yes" xml:space="preserve">
          <source>For a detailed discussion comparing Qt containers with each other and with STL containers, see &lt;a href=&quot;http://marcmutz.wordpress.com/effective-qt/containers/&quot;&gt;Understand the Qt Containers&lt;/a&gt;.</source>
          <target state="translated">Qt 컨테이너를 서로 및 STL 컨테이너와 비교하는 자세한 내용 &lt;a href=&quot;http://marcmutz.wordpress.com/effective-qt/containers/&quot;&gt;은 Qt 컨테이너 이해를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8add4f562950b57a83f1d06ba0d9a495aad68499" translate="yes" xml:space="preserve">
          <source>For a detailed discussion comparing Qt containers with each other and with STL containers, see &lt;a href=&quot;http://marcmutz.wordpress.com/effective-qt/containers/#&quot;&gt;Understand the Qt Containers&lt;/a&gt;.</source>
          <target state="translated">Qt 컨테이너를 서로 및 STL 컨테이너와 비교하는 자세한 내용 &lt;a href=&quot;http://marcmutz.wordpress.com/effective-qt/containers/#&quot;&gt;은 Qt 컨테이너 이해를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a24a16b7c1284fed9e51e3d7a7d6ae61613ccd3d" translate="yes" xml:space="preserve">
          <source>For a detailed discussion comparing Qt containers with each other and with STL containers, see &lt;a href=&quot;https://marcmutz.wordpress.com/effective-qt/containers/&quot;&gt;Understand the Qt Containers&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="469cb985a2d3f1fc64bcb9835e095b3b7834b447" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of the capabilities of developer tools, see the &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools&quot;&gt;Chrome DevTools&lt;/a&gt; page.</source>
          <target state="translated">개발자 도구의 기능에 대한 자세한 설명은 &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools&quot;&gt;Chrome DevTools&lt;/a&gt; 페이지를 참조하세요.</target>
        </trans-unit>
        <trans-unit id="8cc83a2a2e109a3fa31540bcd4afc536864ebe65" translate="yes" xml:space="preserve">
          <source>For a detailed explanation of the capabilities of developer tools, see the &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools#&quot;&gt;Chrome DevTools&lt;/a&gt; page.</source>
          <target state="translated">개발자 도구의 기능에 대한 자세한 설명은 &lt;a href=&quot;https://developers.google.com/web/tools/chrome-devtools#&quot;&gt;Chrome DevTools&lt;/a&gt; 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ec301099883b059c78e08411cf28f754ffd0e6b4" translate="yes" xml:space="preserve">
          <source>For a discussion of flip model swap chains and the typical configuration parameters, refer to &lt;a href=&quot;https://software.intel.com/en-us/articles/sample-application-for-direct3d-12-flip-model-swap-chains&quot;&gt;Sample Application for Direct3D 12 Flip Model Swap Chains&lt;/a&gt;.</source>
          <target state="translated">플립 모델 스왑 체인 및 일반적인 구성 매개 변수에 대한 자세한 내용 &lt;a href=&quot;https://software.intel.com/en-us/articles/sample-application-for-direct3d-12-flip-model-swap-chains&quot;&gt;은 Direct3D 12 플립 모델 스왑 체인의 샘플 응용 프로그램을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="66359cd64e91812fbb0ebccf10bcbb0dccaf4dbb" translate="yes" xml:space="preserve">
          <source>For a full list of options, consult the help with &lt;b&gt;configure -help&lt;/b&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6d87e9e2c31206bc011b848857811ea1a83f57a7" translate="yes" xml:space="preserve">
          <source>For a full list of options, consult the help with &lt;code&gt;configure -help&lt;/code&gt;.</source>
          <target state="translated">전체 옵션 목록을 보려면 &lt;code&gt;configure -help&lt;/code&gt; 도움말을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fcac9d0a2e7b9c459018eed2771174724d160ec2" translate="yes" xml:space="preserve">
          <source>For a function name that is overloaded (except constructors), QDoc expects one primary version of the function, and all the others marked with the &lt;b&gt;\overload command&lt;/b&gt;. The primary version should be fully documented. Each overload can have whatever extra documentation you want to add for just that overloaded version.</source>
          <target state="translated">오버로드 된 함수 이름 (생성자 제외)의 경우 QDoc은 함수의 기본 버전 하나와 &lt;b&gt;\ overload 명령으로&lt;/b&gt; 표시된 다른 모든 버전을 예상 합니다. 기본 버전은 완전히 문서화되어야합니다. 각 과부하에는 오버로드 된 버전에 대해 추가 할 추가 문서가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7fc9a8de03c5a8758e48b805225cc337f21bc346" translate="yes" xml:space="preserve">
          <source>For a getting started guide to custom materials, see the page &lt;a href=&quot;qtquick3d-custom&quot;&gt;Programmable Materials, Effects, Geometry, and Texture data&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4cbb7af95e258a383fd178631af409c21f12a34c" translate="yes" xml:space="preserve">
          <source>For a given position in the text you can find a valid cursor position with &lt;a href=&quot;qtextlayout#isValidCursorPosition&quot;&gt;isValidCursorPosition&lt;/a&gt;(), &lt;a href=&quot;qtextlayout#nextCursorPosition&quot;&gt;nextCursorPosition&lt;/a&gt;(), and &lt;a href=&quot;qtextlayout#previousCursorPosition&quot;&gt;previousCursorPosition&lt;/a&gt;().</source>
          <target state="translated">텍스트에서 주어진 위치에 대해 &lt;a href=&quot;qtextlayout#isValidCursorPosition&quot;&gt;isValidCursorPosition&lt;/a&gt; (), &lt;a href=&quot;qtextlayout#nextCursorPosition&quot;&gt;nextCursorPosition&lt;/a&gt; () 및 &lt;a href=&quot;qtextlayout#previousCursorPosition&quot;&gt;previousCursorPosition&lt;/a&gt; ()을 사용 하여 유효한 커서 위치를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="92c27ae4c47be1e00918055c83cb8249bb66fba2" translate="yes" xml:space="preserve">
          <source>For a given regexp string R, exactMatch(&quot;R&quot;) is the equivalent of &lt;a href=&quot;qregexp#indexIn&quot;&gt;indexIn&lt;/a&gt;(&quot;^R$&quot;) since exactMatch() effectively encloses the regexp in the start of string and end of string anchors, except that it sets &lt;a href=&quot;qregexp#matchedLength&quot;&gt;matchedLength&lt;/a&gt;() differently.</source>
          <target state="translated">지정된 정규 표현식 문자열 R의 경우 exactMatch ( &quot;R&quot;)은 &lt;a href=&quot;qregexp#indexIn&quot;&gt;indexIn&lt;/a&gt; ( &quot;^ R $&quot;)과 같습니다. exactMatch ()는 정규 표현식을 문자열 앵커의 시작과 문자열 앵커의 끝에서 효과적으로 &lt;a href=&quot;qregexp#matchedLength&quot;&gt;묶으므로 matchedLength&lt;/a&gt; ( ) 다르게.</target>
        </trans-unit>
        <trans-unit id="9c15dd0950d5ff0b2a3ff0718fda813ea9d20363" translate="yes" xml:space="preserve">
          <source>For a horizontal &lt;a href=&quot;qml-qtquick-controls2-splitview&quot;&gt;SplitView&lt;/a&gt;, it's not necessary to specify the preferred height of each item, as they will be resized to the height of the view. This applies in reverse for vertical views.</source>
          <target state="translated">가로 &lt;a href=&quot;qml-qtquick-controls2-splitview&quot;&gt;SplitView&lt;/a&gt; 의 경우 각 항목의 높이를보기 높이에 맞게 조정할 수 있으므로 각 항목의 기본 높이를 지정할 필요가 없습니다. 세로보기에는 역으로 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="4040d66f8ec086f4059003df6822f86f5bdb3c90" translate="yes" xml:space="preserve">
          <source>For a horizontal SplitView, it's not necessary to specify the preferred height of each item, as they will be resized to the height of the view. This applies in reverse for vertical views.</source>
          <target state="translated">가로 SplitView의 경우 각 항목의 기본 높이를 지정할 필요가 없습니다.보기 높이로 크기가 조정되기 때문입니다. 이는 세로보기의 경우 반대로 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="c3610495aaa8658097f9d241a9db59b567b3054b" translate="yes" xml:space="preserve">
          <source>For a horizontal header the section is equivalent to a column in the model, and for a vertical header the section is equivalent to a row in the model.</source>
          <target state="translated">가로 머리글의 경우 섹션은 모델의 열과 같고 세로 머리글의 경우 섹션은 모델의 행과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1bf9d6224a7bc47d08e3deb8ed8456f319a08f99" translate="yes" xml:space="preserve">
          <source>For a key type &lt;code&gt;K&lt;/code&gt;, the &lt;a href=&quot;qhash#qhash&quot;&gt;qHash&lt;/a&gt; function must have one of these signatures:</source>
          <target state="translated">키 유형 &lt;code&gt;K&lt;/code&gt; 의 경우 &lt;a href=&quot;qhash#qhash&quot;&gt;qHash&lt;/a&gt; 함수에는 다음 서명 중 하나가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="91b2e83b56c175ee69a0f8e7999dfe54ff36424a" translate="yes" xml:space="preserve">
          <source>For a line edit that accepts integers from 10 to 1000 inclusive, 42 and 123 are &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Acceptable&lt;/a&gt;, the empty string and 5 are &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt;, and &quot;asdf&quot; and 1114 is &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt;.</source>
          <target state="translated">10에서 1000까지의 정수를 허용하는 행 편집의 경우 42와 123은 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;허용 가능&lt;/a&gt; 하고 빈 문자열과 5는 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;중간&lt;/a&gt; 이며 &quot;asdf&quot;와 1114는 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;유효하지 않습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ce6c4da942a1c29f564b66439137e1edc895d304" translate="yes" xml:space="preserve">
          <source>For a list of Qt modules that you can add to the &lt;code&gt;QT&lt;/code&gt; variable, see &lt;a href=&quot;qmake-variable-reference#qt&quot;&gt;QT&lt;/a&gt;.</source>
          <target state="translated">당신이에 추가 할 수있는 Qt는 모듈의 목록은 &lt;code&gt;QT&lt;/code&gt; 의 변수를 참조 &lt;a href=&quot;qmake-variable-reference#qt&quot;&gt;QT를&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="18ed8209a3a1f0ab5fbf6d292b18aeaca661dc13" translate="yes" xml:space="preserve">
          <source>For a list of all available interfaces, see the &lt;a href=&quot;qnativeinterface&quot;&gt;QNativeInterface&lt;/a&gt; namespace.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4246f98792bf6a28b5d5a8d6c4d6d1d64c8efdbc" translate="yes" xml:space="preserve">
          <source>For a list of available selectors, see &lt;code&gt;QFileSelector&lt;/code&gt;.</source>
          <target state="translated">사용 가능한 선택기 목록은 &lt;code&gt;QFileSelector&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="426d1476e63ef3fd531d6b646b7feec92736db11" translate="yes" xml:space="preserve">
          <source>For a list of built-in sensor types, see the &lt;a href=&quot;#sensor-classes&quot;&gt;Sensor Classes&lt;/a&gt; section below.</source>
          <target state="translated">내장 센서 유형 목록은 아래 &lt;a href=&quot;#sensor-classes&quot;&gt;센서 클래스&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="953aa3dc0227fd339aed11e7df5c55764e9b6bd8" translate="yes" xml:space="preserve">
          <source>For a list of built-in sensor types, see the &lt;a href=&quot;qtsensors-cpp#sensor-classes&quot;&gt;Sensor Classes&lt;/a&gt; section below.</source>
          <target state="translated">내장 센서 유형 목록은 아래 &lt;a href=&quot;qtsensors-cpp#sensor-classes&quot;&gt;센서 등급&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="343abd08f4aff28356ea21721bedfdc1724bc0a4" translate="yes" xml:space="preserve">
          <source>For a list of examples known to work on iOS devices, visit &lt;a href=&quot;https://doc.qt.io/qt-5.13/examples-ios.html#&quot;&gt;Qt for iOS Examples&lt;/a&gt;.</source>
          <target state="translated">iOS 기기에서 작동하는 것으로 알려진 예제 목록은 &lt;a href=&quot;https://doc.qt.io/qt-5.13/examples-ios.html#&quot;&gt;iOS 예제 용 Qt를&lt;/a&gt; 방문하십시오 .</target>
        </trans-unit>
        <trans-unit id="3926138d844bcc9b3a4131d9de84f6d1cf797612" translate="yes" xml:space="preserve">
          <source>For a list of examples known to work on iOS devices, visit &lt;a href=&quot;https://doc.qt.io/qt-5.15/examples-ios.html&quot;&gt;Qt for iOS Examples&lt;/a&gt;.</source>
          <target state="translated">iOS 장치에서 작동하는 것으로 알려진 예제 목록을 보려면 &lt;a href=&quot;https://doc.qt.io/qt-5.15/examples-ios.html&quot;&gt;Qt for iOS 예제를&lt;/a&gt; 방문하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac96ea7a757bde9d71dff15b7ffbdc2c96e84780" translate="yes" xml:space="preserve">
          <source>For a list of examples known to work on iOS devices, visit &lt;a href=&quot;https://doc.qt.io/qt-6.0/examples-ios.html&quot;&gt;Qt for iOS Examples&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3031ea1e010cc11fc0177e094ab46071939c5ece" translate="yes" xml:space="preserve">
          <source>For a more complete description, see &lt;a href=&quot;qbar3dseries&quot;&gt;QBar3DSeries&lt;/a&gt;.</source>
          <target state="translated">자세한 설명은 &lt;a href=&quot;qbar3dseries&quot;&gt;QBar3DSeries를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="896c78fe9539a8f2eebace79bbcf6f3c423b0621" translate="yes" xml:space="preserve">
          <source>For a more complete description, see &lt;a href=&quot;qbardataproxy&quot;&gt;QBarDataProxy&lt;/a&gt;.</source>
          <target state="translated">더 자세한 설명은 &lt;a href=&quot;qbardataproxy&quot;&gt;QBarDataProxy를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4c9b43d9ce0a9d87775651aac708c82e8e91f935" translate="yes" xml:space="preserve">
          <source>For a more complete description, see &lt;a href=&quot;qscatter3dseries&quot;&gt;QScatter3DSeries&lt;/a&gt;.</source>
          <target state="translated">자세한 설명은 &lt;a href=&quot;qscatter3dseries&quot;&gt;QScatter3DSeries를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7f40dc5546b463d7157dfcdffe1fbdc92614b696" translate="yes" xml:space="preserve">
          <source>For a more complete description, see &lt;a href=&quot;qsurface3dseries&quot;&gt;QSurface3DSeries&lt;/a&gt;.</source>
          <target state="translated">자세한 설명은 &lt;a href=&quot;qsurface3dseries&quot;&gt;QSurface3DSeries를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0fd2fa40fbd925bc7ab920d7cd212b8f55975206" translate="yes" xml:space="preserve">
          <source>For a more complete description, see &lt;a href=&quot;qsurfacedataproxy&quot;&gt;QSurfaceDataProxy&lt;/a&gt;.</source>
          <target state="translated">더 자세한 설명은 &lt;a href=&quot;qsurfacedataproxy&quot;&gt;QSurfaceDataProxy를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="094f734a42c1326f350fc985536a503852a50464" translate="yes" xml:space="preserve">
          <source>For a more complete example, see the documentation for the &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt; type, and the Mapviewer example.</source>
          <target state="translated">보다 완전한 예제는 &lt;a href=&quot;qml-qtlocation-routemodel&quot;&gt;RouteModel&lt;/a&gt; 유형에 대한 문서 및 Mapviewer 예제를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="48d489fb8ffd66c518128a6514d123d137df5f50" translate="yes" xml:space="preserve">
          <source>For a more flexible list view widget, use the &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; class with a standard model.</source>
          <target state="translated">보다 유연한 목록보기 위젯의 경우 표준 모델과 함께 &lt;a href=&quot;qlistview&quot;&gt;QListView&lt;/a&gt; 클래스를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1d2ecf370f03dbe30ca13058bb52c7238a36971d" translate="yes" xml:space="preserve">
          <source>For a more generic string tag, see &lt;a href=&quot;qmetamethod#tag&quot;&gt;QMetaMethod::tag&lt;/a&gt;()</source>
          <target state="translated">보다 일반적인 문자열 태그는 &lt;a href=&quot;qmetamethod#tag&quot;&gt;QMetaMethod :: tag&lt;/a&gt; ()를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a0e50f26bad31acd7e6cebae39cea8837ca7721a" translate="yes" xml:space="preserve">
          <source>For a more technical perspective on Qt's layout classes, refer to the &lt;a href=&quot;layout&quot;&gt;Layout Management&lt;/a&gt; documentation.</source>
          <target state="translated">Qt의 레이아웃 클래스에 대한보다 기술적 인 관점은 &lt;a href=&quot;layout&quot;&gt;레이아웃 관리&lt;/a&gt; 설명서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a2dffcf39c5ea4dc343958f3c594bb8f9d79c09d" translate="yes" xml:space="preserve">
          <source>For a more thorough walkthrough of the different aspects of developing applications with Qt 5, see the &lt;a href=&quot;https://qmlbook.github.io/&quot;&gt;QML Book&lt;/a&gt;. It focuses on Qt Quick, but also provides the information needed to use QML together with C++.</source>
          <target state="translated">Qt 5를 사용한 애플리케이션 개발의 다양한 측면에 대한 자세한 설명은 &lt;a href=&quot;https://qmlbook.github.io/&quot;&gt;QML Book을&lt;/a&gt; 참조하십시오 . Qt Quick에 초점을 맞추지 만 C ++와 함께 QML을 사용하는 데 필요한 정보도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6846c939959bfc42999855d7df9bdc68a055420f" translate="yes" xml:space="preserve">
          <source>For a more thorough walkthrough of the different aspects of developing applications with Qt 5, see the &lt;a href=&quot;https://qmlbook.github.io/#&quot;&gt;QML Book&lt;/a&gt;. It focuses on Qt Quick, but also provides the information needed to use QML together with C++.</source>
          <target state="translated">Qt 5를 사용하여 애플리케이션을 개발하는 다양한 측면에 대한 자세한 내용은 &lt;a href=&quot;https://qmlbook.github.io/#&quot;&gt;QML Book을&lt;/a&gt; 참조하십시오 . Qt Quick에 중점을 두지 만 C ++과 함께 QML을 사용하는 데 필요한 정보도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="81a9d6039aaa88bd570d6f3bf53f1674e0a77f34" translate="yes" xml:space="preserve">
          <source>For a more thorough walkthrough of the different aspects of developing applications with Qt, see the &lt;a href=&quot;https://qmlbook.github.io/&quot;&gt;QML Book&lt;/a&gt;. It focuses on Qt Quick, but also provides the information needed to use QML together with C++.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="2a77411776b21bbaa55360010da28c1b1f10397e" translate="yes" xml:space="preserve">
          <source>For a multi-valued map:</source>
          <target state="translated">다중 값 맵의 경우 :</target>
        </trans-unit>
        <trans-unit id="c166b8acb78b76c28307c3a22b6d4e4d17abf112" translate="yes" xml:space="preserve">
          <source>For a non-wrapping Tumbler, use &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;:</source>
          <target state="translated">랩핑되지 않은 텀블러의 경우 &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="2bd4c86c1aa84a92a5cf2d5915294fe4021de697" translate="yes" xml:space="preserve">
          <source>For a quick guide to choosing the correct approach to expose C++ types to QML, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-cppintegration-overview.html#choosing-the-correct-integration-method-between-c-and-qml&quot;&gt;Choosing the Correct Integration Method Between C++ and QML&lt;/a&gt;.</source>
          <target state="translated">C ++ 유형을 QML에 노출하는 올바른 접근 방법을 선택하는 빠른 안내서는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtqml-cppintegration-overview.html#choosing-the-correct-integration-method-between-c-and-qml&quot;&gt;C ++와 QML 간의 올바른 통합 방법 선택을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="393ccbcdf4f044c6087f9a1e7eaf3efc1f144196" translate="yes" xml:space="preserve">
          <source>For a quick guide to choosing the correct approach to expose C++ types to QML, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtqml-cppintegration-overview.html#choosing-the-correct-integration-method-between-c-and-qml&quot;&gt;Choosing the Correct Integration Method Between C++ and QML&lt;/a&gt;.</source>
          <target state="translated">C ++ 유형을 QML에 노출하는 올바른 접근 방식을 선택하는 빠른 가이드는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtqml-cppintegration-overview.html#choosing-the-correct-integration-method-between-c-and-qml&quot;&gt;C ++ 및 QML 간의 올바른 통합 방법 선택을&lt;/a&gt; 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="ea78ba7c014b9593da542ca021f46011f03e765a" translate="yes" xml:space="preserve">
          <source>For a quick guide to choosing the correct approach to expose C++ types to QML, see &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtqml-cppintegration-overview.html#choosing-the-correct-integration-method-between-c-and-qml&quot;&gt;Choosing the Correct Integration Method Between C++ and QML&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="d007cf98c36e534d74cebdb63ae70fba6431007e" translate="yes" xml:space="preserve">
          <source>For a resource to be compiled into the binary the &lt;code&gt;.qrc&lt;/code&gt; file must be mentioned in the application's &lt;code&gt;.pro&lt;/code&gt; file so that &lt;code&gt;qmake&lt;/code&gt; knows about it. For example:</source>
          <target state="translated">리소스를 바이너리로 컴파일 하려면 &lt;code&gt;qmake&lt;/code&gt; 가 알 수 있도록 응용 프로그램의 &lt;code&gt;.pro&lt;/code&gt; 파일 에 &lt;code&gt;.qrc&lt;/code&gt; 파일을 언급해야 합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="263112b6b3425393f52713a7d69b6b68f6a2f569" translate="yes" xml:space="preserve">
          <source>For a server, the first call to &lt;a href=&quot;qdtls#doHandshake&quot;&gt;doHandshake&lt;/a&gt;() requires a non-empty datagram containing a ClientHello message. If the server also deploys &lt;a href=&quot;qdtlsclientverifier&quot;&gt;QDtlsClientVerifier&lt;/a&gt;, the first ClientHello message is expected to be the one verified by &lt;a href=&quot;qdtlsclientverifier&quot;&gt;QDtlsClientVerifier&lt;/a&gt;.</source>
          <target state="translated">서버의 경우 &lt;a href=&quot;qdtls#doHandshake&quot;&gt;doHandshake&lt;/a&gt; () 를 처음 호출 하려면 ClientHello 메시지가 포함 된 비어 있지 않은 데이터 그램이 필요합니다. 서버가 &lt;a href=&quot;qdtlsclientverifier&quot;&gt;QDtlsClientVerifier&lt;/a&gt; 도 배치 하는 경우 첫 번째 ClientHello 메시지는 &lt;a href=&quot;qdtlsclientverifier&quot;&gt;QDtlsClientVerifier에&lt;/a&gt; 의해 확인 된 것으로 예상됩니다 .</target>
        </trans-unit>
        <trans-unit id="3641356ad5ccb23974c4a43489599fe1dba0eead" translate="yes" xml:space="preserve">
          <source>For a set of UI controls, the &lt;a href=&quot;qtquickcontrols-index&quot;&gt;Qt Quick Controls&lt;/a&gt; module implements several controls such as buttons, menus, and views. These controls come with several built-in styles that can be used, and also support the creation of custom styles.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="565c506c7de001326649f61ec8dbfc217cd7e5f3" translate="yes" xml:space="preserve">
          <source>For a set of basic UI controls, the &lt;a href=&quot;qtquickcontrols-index&quot;&gt;Qt Quick Controls&lt;/a&gt; module implements several controls such as buttons, menus, and views. These controls come with several built-in styles that can be used, and also support the creation of custom styles.</source>
          <target state="translated">기본 UI 컨트롤 세트의 경우 &lt;a href=&quot;qtquickcontrols-index&quot;&gt;Qt Quick Controls&lt;/a&gt; 모듈은 버튼, 메뉴 및보기와 같은 여러 컨트롤을 구현합니다. 이러한 컨트롤에는 사용할 수있는 몇 가지 기본 제공 스타일이 제공되며 사용자 지정 스타일 생성을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="84341a25e8988dcf7f17ec38ff98600c307f0dee" translate="yes" xml:space="preserve">
          <source>For a simple string list model, the encoded items can be decoded and streamed into a &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt;:</source>
          <target state="translated">간단한 문자열 목록 모델의 경우 인코딩 된 항목을 디코딩하여 &lt;a href=&quot;qstringlist&quot;&gt;QStringList&lt;/a&gt; 로 스트리밍 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ec7c1826693a93a59cc697b6ae8b02eb3955baa6" translate="yes" xml:space="preserve">
          <source>For a single yes/no choice, it is also possible to use a switch. If the choice concerns an option, it is best to use a &lt;a href=&quot;qml-qtquick-controls2-checkbox&quot;&gt;CheckBox&lt;/a&gt;. If it concerns action to be taken, a switch is recommended.</source>
          <target state="translated">단일 예 / 아니오 선택의 경우 스위치를 사용할 수도 있습니다. 선택 사항이 옵션과 관련된 경우 &lt;a href=&quot;qml-qtquick-controls2-checkbox&quot;&gt;CheckBox&lt;/a&gt; 를 사용하는 것이 가장 좋습니다 . 취해야 할 조치가 필요한 경우 스위치를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="98ee324ae6e86d852863a07cb1c7096d2f180b0a" translate="yes" xml:space="preserve">
          <source>For a slider that allows the user to select a range by providing two handles, see &lt;a href=&quot;qml-qtquick-controls2-rangeslider&quot;&gt;RangeSlider&lt;/a&gt;.</source>
          <target state="translated">사용자가 두 개의 핸들을 제공하여 범위를 선택할 수있는 슬라이더에 대해서는 &lt;a href=&quot;qml-qtquick-controls2-rangeslider&quot;&gt;RangeSlider를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="0f873932d09bf3090c40f33d04237d6b72ff21fb" translate="yes" xml:space="preserve">
          <source>For a slider that allows the user to select a single value, see &lt;a href=&quot;qml-qtquick-controls2-slider&quot;&gt;Slider&lt;/a&gt;.</source>
          <target state="translated">사용자가 단일 값을 선택할 수있는 슬라이더에 대해서는 &lt;a href=&quot;qml-qtquick-controls2-slider&quot;&gt;슬라이더를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4d4982ff2f9ff44f7a8d735bdae99e3a1a0c64c1" translate="yes" xml:space="preserve">
          <source>For a specific list of available boards, displays and input devices, contact QNX Software Systems (&lt;a href=&quot;mailto://info@qnx.com&quot;&gt;info@qnx.com&lt;/a&gt;) or KDAB (&lt;a href=&quot;mailto://qnx-info@kdab.com&quot;&gt;qnx-info@kdab.com&lt;/a&gt;). Qt on the QNX Neutrino OS is also supported by &lt;a href=&quot;http://doc.qt.io/QtForDeviceCreation&quot;&gt;Qt for Device Creation&lt;/a&gt;, &lt;a href=&quot;https://www.qt.io/contact-us/&quot;&gt;contact The Qt Company&lt;/a&gt; for more details.</source>
          <target state="translated">사용 가능한 보드, 디스플레이 및 입력 장치의 특정 목록은 QNX 소프트웨어 시스템 ( &lt;a href=&quot;mailto://info@qnx.com&quot;&gt;info@qnx.com&lt;/a&gt; ) 또는 KDAB ( &lt;a href=&quot;mailto://qnx-info@kdab.com&quot;&gt;qnx-info@kdab.com&lt;/a&gt; )에 문의 하십시오. QNX 중성미자 OS에 Qt는 또한 지원하는 &lt;a href=&quot;http://doc.qt.io/QtForDeviceCreation&quot;&gt;장치 창조를위한 Qt는&lt;/a&gt; , &lt;a href=&quot;https://www.qt.io/contact-us/&quot;&gt;문의 Qt는 회사&lt;/a&gt; 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="c7b719e77f69713a6aea92c175f0d1f164a2f6a5" translate="yes" xml:space="preserve">
          <source>For a specific list of available boards, displays and input devices, contact QNX Software Systems (&lt;a href=&quot;mailto://info@qnx.com&quot;&gt;info@qnx.com&lt;/a&gt;) or KDAB (&lt;a href=&quot;mailto://qnx-info@kdab.com&quot;&gt;qnx-info@kdab.com&lt;/a&gt;). Qt on the QNX Neutrino OS is also supported by &lt;a href=&quot;http://doc.qt.io/QtForDeviceCreation#&quot;&gt;Qt for Device Creation&lt;/a&gt;, &lt;a href=&quot;https://www.qt.io/contact-us/&quot;&gt;contact The Qt Company&lt;/a&gt; for more details.</source>
          <target state="translated">사용 가능한 보드, 디스플레이 및 입력 장치의 특정 목록은 QNX Software Systems ( &lt;a href=&quot;mailto://info@qnx.com&quot;&gt;info@qnx.com&lt;/a&gt; ) 또는 KDAB ( &lt;a href=&quot;mailto://qnx-info@kdab.com&quot;&gt;qnx-info@kdab.com&lt;/a&gt; )에 문의 하십시오. QNX 중성미자 OS에 Qt는 또한 지원하는 &lt;a href=&quot;http://doc.qt.io/QtForDeviceCreation#&quot;&gt;장치 창조를위한 Qt는&lt;/a&gt; , &lt;a href=&quot;https://www.qt.io/contact-us/&quot;&gt;문의 Qt는 회사&lt;/a&gt; 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="a17f7d6987f0ecdb478af44e89007cba40216fff" translate="yes" xml:space="preserve">
          <source>For a spin box that accepts lengths, &quot;11cm&quot; and &quot;1in&quot; are &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Acceptable&lt;/a&gt;, &quot;11&quot; and the empty string are &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt;, and &quot;http://example.com&quot; and &quot;hour&quot; are &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt;.</source>
          <target state="translated">길이를 허용하는 스핀 상자의 경우 &quot;11cm&quot;및 &quot;1in&quot;은 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;허용 가능&lt;/a&gt; 하고 &quot;11&quot;이며 빈 문자열은 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;중간&lt;/a&gt; 이며 &quot;http://example.com&quot;및 &quot;hour&quot;는 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;유효하지 않습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b4070777d2087db4e9eaf33649dd9e187aa9226" translate="yes" xml:space="preserve">
          <source>For a standard page size this will be the size as defined in the relevant standard, i.e. ISO A4 will be defined in millimeters while ANSI Letter will be defined in inches.</source>
          <target state="translated">표준 페이지 크기의 경우이 크기는 관련 표준에 정의 된 크기입니다. 즉, ISO A4는 밀리미터로 정의되고 ANSI 문자는 인치로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="c4d5048bb4b406186065568edb2e800f969eea38" translate="yes" xml:space="preserve">
          <source>For a standard page size this will be the units as defined in the relevant standard, i.e. ISO A4 will be defined in millimeters while ANSI Letter will be defined in inches.</source>
          <target state="translated">표준 페이지 크기의 경우 관련 표준에 정의 된 단위가됩니다. 즉, ISO A4는 밀리미터로, ANSI 문자는 인치로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="c3597069228eefa2ad331367e8ab19c876aeab8d" translate="yes" xml:space="preserve">
          <source>For a translation-aware application, a &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt; object is created, then a translation is loaded according to the current locale at runtime, and finally, the translator object is installed into the application.</source>
          <target state="translated">번역 인식 응용 프로그램의 경우 &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt; 개체가 생성 된 다음 런타임에 현재 로캘에 따라 번역이로드되고 번역기 개체가 응용 프로그램에 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="486f83f759e6199205f608bb020fb6dc4501438e" translate="yes" xml:space="preserve">
          <source>For a translation-aware application, a &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt; object is created, then a translation is loaded according to the user's preferred UI display locale at runtime, and finally, the translator object is installed into the application.</source>
          <target state="translated">번역 인식 응용 프로그램의 경우 &lt;a href=&quot;qtranslator&quot;&gt;QTranslator&lt;/a&gt; 개체가 생성 된 다음 런타임에 사용자가 선호하는 UI 표시 로캘에 따라 번역이로드되고 마지막으로 번역기 개체가 응용 프로그램에 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="add5996e0440f2ca19173352d3600d623c9d9f20" translate="yes" xml:space="preserve">
          <source>For a typical 3D-like rotation you will usually specify both the origin and the axis.</source>
          <target state="translated">일반적인 3D 유사 회전의 경우 일반적으로 원점과 축을 모두 지정합니다.</target>
        </trans-unit>
        <trans-unit id="dde2f260babdfc89110f6bb96a1b1618c113e3e2" translate="yes" xml:space="preserve">
          <source>For accessibility, such as with a screen reader</source>
          <target state="translated">스크린 리더와 같은 접근성</target>
        </trans-unit>
        <trans-unit id="68ef408c179616af9341c12faa5366420861236c" translate="yes" xml:space="preserve">
          <source>For actually creating the collection file call:</source>
          <target state="translated">실제로 콜렉션 파일 호출을 작성하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="44440efeee7e4113fb9323a0f73b98ff4404fb39" translate="yes" xml:space="preserve">
          <source>For additional information, read also the &lt;a href=&quot;https://doc.qt.io/qt-5.13/cameraoverview.html#&quot;&gt;camera overview&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;https://doc.qt.io/qt-5.13/cameraoverview.html#&quot;&gt;카메라 개요&lt;/a&gt; 도 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="11a4770b1f2f01444fe3b2a247f92d033a860600" translate="yes" xml:space="preserve">
          <source>For additional information, read also the &lt;a href=&quot;https://doc.qt.io/qt-5.15/cameraoverview.html&quot;&gt;camera overview&lt;/a&gt;.</source>
          <target state="translated">추가 정보는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/cameraoverview.html&quot;&gt;카메라 개요를 참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="905c6ed66abc9b7442ea4f8f70e8d9c179024f07" translate="yes" xml:space="preserve">
          <source>For advanced users, there are ways to alter how your items are sorted:</source>
          <target state="translated">고급 사용자의 경우 항목 정렬 방법을 변경하는 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8bfb964bb80e8611066e5a6904cb118aaa139c1" translate="yes" xml:space="preserve">
          <source>For all other &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; types a conversion to a &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt; will be attempted. If the returned string is empty, a Null &lt;a href=&quot;qjsonvalue&quot;&gt;QJsonValue&lt;/a&gt; will be stored, otherwise a String value using the returned &lt;a href=&quot;qstring&quot;&gt;QString&lt;/a&gt;.</source>
          <target state="translated">다른 모든 &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 유형의 경우 &lt;a href=&quot;qstring&quot;&gt;QString으로&lt;/a&gt; 의 변환 이 시도됩니다. 반환 된 문자열이 비어 있으면 Null &lt;a href=&quot;qjsonvalue&quot;&gt;QJsonValue&lt;/a&gt; 가 저장되고, 그렇지 않으면 반환 된 &lt;a href=&quot;qstring&quot;&gt;QString을&lt;/a&gt; 사용하는 문자열 값이 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="96b90f4ea66bf39e55de177141a57740a1d780b9" translate="yes" xml:space="preserve">
          <source>For all other nodes, return a default constructed &lt;a href=&quot;qurl&quot;&gt;QUrl&lt;/a&gt;.</source>
          <target state="translated">다른 모든 노드의 경우 기본 생성 된 &lt;a href=&quot;qurl&quot;&gt;QUrl을&lt;/a&gt; 반환하십시오 .</target>
        </trans-unit>
        <trans-unit id="b0300b7ce971434dafc97c4645960d98aaea5299" translate="yes" xml:space="preserve">
          <source>For all packages found with &lt;code&gt;find_package&lt;/code&gt;, equivalents of these variables are available; they are case-sensitive.</source>
          <target state="translated">&lt;code&gt;find_package&lt;/code&gt; 로 찾은 모든 패키지 에 대해 이러한 변수에 해당하는 것을 사용할 수 있습니다. 대소 문자를 구분합니다.</target>
        </trans-unit>
        <trans-unit id="d3477ab5af03370494722ac27220ce17c263bd6b" translate="yes" xml:space="preserve">
          <source>For all these advantages, there are some downsides. For C++, the static object model is a clear disadvantage over the dynamic messaging approach of Objective C when it comes to component-based graphical user interface programming. What's good for a high end database server or an operating system isn't necessarily the right design choice for a GUI frontend. With &lt;code&gt;moc&lt;/code&gt;, we have turned this disadvantage into an advantage, and added the flexibility required to meet the challenge of safe and efficient graphical user interface programming.</source>
          <target state="translated">이러한 모든 장점에는 몇 가지 단점이 있습니다. C ++의 경우 정적 개체 모델은 구성 요소 기반 그래픽 사용자 인터페이스 프로그래밍과 관련하여 Objective C의 동적 메시징 방식에 비해 확실한 단점입니다. 고급 데이터베이스 서버 또는 운영 체제에 적합한 것은 GUI 프론트 엔드에 적합한 디자인 선택이 아닙니다. 함께 &lt;code&gt;moc&lt;/code&gt; , 우리는 이점에 이러한 단점을 설정하고, 안전하고 효율적인 그래픽 사용자 인터페이스 프로그래밍의 과제를 해결하는 데 필요한 유연성을 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="f081e0a0cb6ec67a23daf781c49d1f0a00ffab47" translate="yes" xml:space="preserve">
          <source>For altering particle ages. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">입자 나이를 변경합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="392716a635280b7382d77660a7bc81eccdda1f79" translate="yes" xml:space="preserve">
          <source>For an OpenGL texture this would be the texture ID.</source>
          <target state="translated">OpenGL 텍스처의 경우 이것은 텍스처 ID입니다.</target>
        </trans-unit>
        <trans-unit id="e19da64a27fb0232b806fc95f5c48c223ad6a60f" translate="yes" xml:space="preserve">
          <source>For an RFCOMM server this function is equivalent to following code snippet.</source>
          <target state="translated">RFCOMM 서버의 경우이 기능은 다음 코드 스 니펫과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="7d935b25f9bb48eea09996fee4d0fe4ed69ff9e1" translate="yes" xml:space="preserve">
          <source>For an application, the screen where the main widget resides is the primary screen. This is stored in the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qdesktopwidget-obsolete.html#primaryScreen-prop&quot;&gt;primaryScreen&lt;/a&gt; property. All windows opened in the context of the application should be constrained to the boundaries of the primary screen; for example, it would be inconvenient if a dialog box popped up on a different screen, or split over two screens.</source>
          <target state="translated">애플리케이션의 경우 기본 위젯이있는 화면이 기본 화면입니다. 이것은 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qdesktopwidget-obsolete.html#primaryScreen-prop&quot;&gt;primaryScreen&lt;/a&gt; 속성에 저장됩니다 . 응용 프로그램 컨텍스트에서 열린 모든 창은 기본 화면의 경계로 제한되어야합니다. 예를 들어, 대화 상자가 다른 화면에 팝업되거나 두 화면으로 분할되면 불편할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="83de14cd098c465271a62e1c95858c48953b1733" translate="yes" xml:space="preserve">
          <source>For an application, the screen where the main widget resides is the primary screen. This is stored in the &lt;a href=&quot;qdesktopwidget#primaryScreen-prop&quot;&gt;primaryScreen&lt;/a&gt; property. All windows opened in the context of the application should be constrained to the boundaries of the primary screen; for example, it would be inconvenient if a dialog box popped up on a different screen, or split over two screens.</source>
          <target state="translated">응용 프로그램의 경우 기본 위젯이있는 화면이 기본 화면입니다. 이것은 &lt;a href=&quot;qdesktopwidget#primaryScreen-prop&quot;&gt;primaryScreen&lt;/a&gt; 속성에 저장됩니다 . 응용 프로그램의 컨텍스트에서 열린 모든 창은 기본 화면의 경계로 제한되어야합니다. 예를 들어, 대화 상자가 다른 화면에 표시되거나 두 화면으로 분할되면 불편할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a41ac68a67d2fc38db2b121637a53f357e593b3d" translate="yes" xml:space="preserve">
          <source>For an editable combobox that accepts URLs, any well-formed URL is &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Acceptable&lt;/a&gt;, &quot;http://example.com/,&quot; is &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt; (it might be a cut and paste action that accidentally took in a comma at the end), the empty string is &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt; (the user might select and delete all of the text in preparation for entering a new URL) and &quot;http:///./&quot; is &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt;.</source>
          <target state="translated">URL을 허용하는 편집 가능한 콤보 상자의 경우 올바른 형식의 URL은 모두 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;허용 가능합니다&lt;/a&gt; . &quot;http://example.com/&quot;은 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;중간입니다&lt;/a&gt; (실수로 쉼표로 끝나는 잘라 내기 및 붙여 넣기 작업 일 수 있음). 빈 문자열은 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;중간&lt;/a&gt; (사용자는 새 URL을 입력하기 위해 모든 텍스트를 선택하고 삭제할 수 있음)이며 &quot;http : ///./&quot;는 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;유효하지 않습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f1c4dfe5ba590ebf6fc022f718f964ac0dd9fe63" translate="yes" xml:space="preserve">
          <source>For an example demonstrating how style options can be used, see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-widgets-styles-example.html#&quot;&gt;Styles&lt;/a&gt; example.</source>
          <target state="translated">스타일 옵션을 사용하는 방법을 보여주는 예제 는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-widgets-styles-example.html#&quot;&gt;스타일&lt;/a&gt; 예제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="350b0f1e641716a652100e7d510ef5031284e30f" translate="yes" xml:space="preserve">
          <source>For an example demonstrating how style options can be used, see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-widgets-styles-example.html&quot;&gt;Styles&lt;/a&gt; example.</source>
          <target state="translated">스타일 옵션을 사용할 수있는 방법을 보여주는 예 는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-widgets-styles-example.html&quot;&gt;스타일&lt;/a&gt; 예를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="d726ffbf786e54342084a6d26956efc0b3cd3186" translate="yes" xml:space="preserve">
          <source>For an example demonstrating how style options can be used, see the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-widgets-styles-example.html&quot;&gt;Styles&lt;/a&gt; example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="4086295716f567e9654f26c23792dfb9bc31f8e2" translate="yes" xml:space="preserve">
          <source>For an example of a more complex model, see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-itemviews-simpletreemodel-example.html#&quot;&gt;Simple Tree Model&lt;/a&gt; example.</source>
          <target state="translated">보다 복잡한 모델의 예는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-itemviews-simpletreemodel-example.html#&quot;&gt;단순 트리 모델&lt;/a&gt; 예를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6353e62a7779d822800e63e1cacd60fdf10c0ae5" translate="yes" xml:space="preserve">
          <source>For an example of a more complex model, see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-itemviews-simpletreemodel-example.html&quot;&gt;Simple Tree Model&lt;/a&gt; example.</source>
          <target state="translated">더 복잡한 모델의 예는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-itemviews-simpletreemodel-example.html&quot;&gt;단순 트리 모델&lt;/a&gt; 예를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="15c45383125a2f810c921ff8b6d835e9cf23624a" translate="yes" xml:space="preserve">
          <source>For an example of a more complex model, see the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-itemviews-simpletreemodel-example.html&quot;&gt;Simple Tree Model&lt;/a&gt; example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cbe66c8fe014565ccac01a0b3df2873990770d14" translate="yes" xml:space="preserve">
          <source>For an example of how to use &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgui-openglwindow-example.html#&quot;&gt;OpenGL Window&lt;/a&gt; example.</source>
          <target state="translated">&lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; 를 사용하는 방법에 대한 예제 는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtgui-openglwindow-example.html#&quot;&gt;OpenGL Window&lt;/a&gt; 예제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9ad8b38d229404d43e684af8597f59051a7e64bd" translate="yes" xml:space="preserve">
          <source>For an example of how to use QOpenGLContext see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtgui-openglwindow-example.html&quot;&gt;OpenGL Window&lt;/a&gt; example.</source>
          <target state="translated">QOpenGLContext를 사용하는 방법에 대한 예제는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtgui-openglwindow-example.html&quot;&gt;OpenGL Window&lt;/a&gt; 예제를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="828de988899a164c5e6a5eb2e7e2cec4ccaca5cd" translate="yes" xml:space="preserve">
          <source>For an example of how to use QOpenGLContext see the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtopengl-openglwindow-example.html&quot;&gt;OpenGL Window&lt;/a&gt; example.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="ec45ad1e0a8e53aa6a68fcbf3319e8d7653256dc" translate="yes" xml:space="preserve">
          <source>For an example of how to use this method, see &lt;a href=&quot;qml-qtquick-controls2-combobox#combobox-model-roles&quot;&gt;ComboBox Model Roles&lt;/a&gt;.</source>
          <target state="translated">이 방법을 사용하는 방법에 대한 예는 &lt;a href=&quot;qml-qtquick-controls2-combobox#combobox-model-roles&quot;&gt;ComboBox 모델 역할을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c5da0445fc5d37f48ab081e113de3de22b06f8f1" translate="yes" xml:space="preserve">
          <source>For an example of how to use this property, see &lt;a href=&quot;qml-qtquick-controls2-combobox#combobox-model-roles&quot;&gt;ComboBox Model Roles&lt;/a&gt;.</source>
          <target state="translated">이 속성을 사용하는 방법에 대한 예는 &lt;a href=&quot;qml-qtquick-controls2-combobox#combobox-model-roles&quot;&gt;ComboBox 모델 역할을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="28a1b8bc91f880707621a0f769db3aa56b368715" translate="yes" xml:space="preserve">
          <source>For an example of the QML API in use, see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-webengine-lifecycle-example.html&quot;&gt;WebEngine Lifecycle Example&lt;/a&gt;.</source>
          <target state="translated">사용중인 QML API의 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwebengine-webengine-lifecycle-example.html&quot;&gt;예&lt;/a&gt; 는 WebEngine 수명주기 예를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5930b23d53f2d633f7347d7ec408a99b2c6c067f" translate="yes" xml:space="preserve">
          <source>For an extensive example, see the &lt;a href=&quot;#exampledirs-variable&quot;&gt;&lt;code&gt;exampledirs&lt;/code&gt;&lt;/a&gt; command. But note that if you know the file is listed in the &lt;code&gt;examples&lt;/code&gt; variable, you don't need to specify its path:</source>
          <target state="translated">광범위한 예는 &lt;a href=&quot;#exampledirs-variable&quot;&gt; &lt;code&gt;exampledirs&lt;/code&gt; &lt;/a&gt; 명령을 참조하십시오 . 그러나 파일이 &lt;code&gt;examples&lt;/code&gt; 변수에 나열되어 있으면 파일 경로를 지정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="52495fdc6a118881afa3b555fd9cbd629a08e04a" translate="yes" xml:space="preserve">
          <source>For an extensive example, see the &lt;a href=&quot;22-qdoc-configuration-generalvariables#exampledirs-variable&quot;&gt;&lt;code&gt;exampledirs&lt;/code&gt;&lt;/a&gt; command. But note that if you know the file is listed in the &lt;code&gt;examples&lt;/code&gt; variable, you don't need to specify its path:</source>
          <target state="translated">광범위한 예는 &lt;a href=&quot;22-qdoc-configuration-generalvariables#exampledirs-variable&quot;&gt; &lt;code&gt;exampledirs&lt;/code&gt; &lt;/a&gt; 명령을 참조하십시오 . 그러나 파일이 &lt;code&gt;examples&lt;/code&gt; 변수에 나열되어 있다는 것을 알고 있으면 해당 경로를 지정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="f3e4cf83d5676306c8c02830e3658eca8b532c45" translate="yes" xml:space="preserve">
          <source>For an external binary resource to be created you must create the resource data (commonly given the &lt;code&gt;.rcc&lt;/code&gt; extension) by passing the -binary switch to &lt;a href=&quot;rcc&quot;&gt;rcc&lt;/a&gt;. Once the binary resource is created you can register the resource with the &lt;a href=&quot;qresource&quot;&gt;QResource&lt;/a&gt; API.</source>
          <target state="translated">외부 2 진 자원을 작성하려면 -binary 스위치를 &lt;a href=&quot;rcc&quot;&gt;rcc&lt;/a&gt; 로 전달하여 자원 데이터 (일반적으로 &lt;code&gt;.rcc&lt;/code&gt; 확장자 가 부여됨 )를 작성해야합니다 . 이진 리소스가 생성되면 &lt;a href=&quot;qresource&quot;&gt;QResource&lt;/a&gt; API로 리소스를 등록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="32468290e998bb671f2844ed96f5b013a306a099" translate="yes" xml:space="preserve">
          <source>For an invalid color, the alpha value of the returned color is unspecified.</source>
          <target state="translated">유효하지 않은 색의 경우 반환 된 색의 알파 값이 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3c5e87d2634215aa1d04fc80c8d2303691cb5fc4" translate="yes" xml:space="preserve">
          <source>For an item to be selected, it must be marked as</source>
          <target state="translated">항목을 선택하려면 다음과 같이 표시해야합니다</target>
        </trans-unit>
        <trans-unit id="9adb6af468376592c72fcd266aea0e0845248651" translate="yes" xml:space="preserve">
          <source>For an overview of Qt's Undo Framework, see the &lt;a href=&quot;qundo&quot;&gt;overview document&lt;/a&gt;.</source>
          <target state="translated">Qt의 Undo Framework에 대한 &lt;a href=&quot;qundo&quot;&gt;개요&lt;/a&gt; 는 개요 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c4329e5fee6e7befff37bbff79bd940954a3314" translate="yes" xml:space="preserve">
          <source>For an overview of gesture handling in Qt and information on using gestures in your applications, see the &lt;a href=&quot;https://doc.qt.io/qt-5.13/gestures-overview.html#&quot;&gt;Gestures in Widgets and Graphics View&lt;/a&gt; document.</source>
          <target state="translated">Qt에서의 제스처 처리에 대한 개요와 응용 프로그램에서의 제스처 사용에 대한 정보 &lt;a href=&quot;https://doc.qt.io/qt-5.13/gestures-overview.html#&quot;&gt;는 위젯 및 그래픽보기&lt;/a&gt; 의 제스처를 참조하십시오. 문서를 .</target>
        </trans-unit>
        <trans-unit id="4e53694ebbc56d553b823c34a8046b4684e0248a" translate="yes" xml:space="preserve">
          <source>For an overview of gesture handling in Qt and information on using gestures in your applications, see the &lt;a href=&quot;https://doc.qt.io/qt-5.15/gestures-overview.html&quot;&gt;Gestures in Widgets and Graphics View&lt;/a&gt; document.</source>
          <target state="translated">Qt에서 제스처 처리에 대한 개요와 애플리케이션에서 제스처를 사용하는 방법에 대한 정보 &lt;a href=&quot;https://doc.qt.io/qt-5.15/gestures-overview.html&quot;&gt;는 위젯 및 기하 창의 제스처&lt;/a&gt; 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cc4142ce18fb8e77ca19e72c13097e9d892015a8" translate="yes" xml:space="preserve">
          <source>For an overview of gesture handling in Qt and information on using gestures in your applications, see the &lt;a href=&quot;https://doc.qt.io/qt-6.0/gestures-overview.html&quot;&gt;Gestures in Widgets and Graphics View&lt;/a&gt; document.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f0db906637d73bc84cec032f5fe26b98a01bc42a" translate="yes" xml:space="preserve">
          <source>For an overview of the Qt's undo framework, see the &lt;a href=&quot;qundo&quot;&gt;overview&lt;/a&gt;.</source>
          <target state="translated">Qt의 실행 취소 프레임 워크에 대한 &lt;a href=&quot;qundo&quot;&gt;개요&lt;/a&gt; 는 개요를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d35cdf30f4e342cc91a308eb672f19edd65df5ec" translate="yes" xml:space="preserve">
          <source>For an overview of the differences between the different protocols, see &lt;a href=&quot;https://github.com/google/pywebsocket/wiki/WebSocketProtocolSpec&quot;&gt;pywebsocket's WebSocketProtocolSpec&lt;/a&gt;.</source>
          <target state="translated">서로 다른 프로토콜 간의 차이점에 대한 개요는 &lt;a href=&quot;https://github.com/google/pywebsocket/wiki/WebSocketProtocolSpec&quot;&gt;pywebsocket의 WebSocketProtocolSpec을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d1b735386ffebe6d16ba934d300e98b741437ea" translate="yes" xml:space="preserve">
          <source>For an overview of the differences between the different protocols, see &lt;a href=&quot;https://github.com/google/pywebsocket/wiki/WebSocketProtocolSpec#&quot;&gt;pywebsocket's WebSocketProtocolSpec&lt;/a&gt;.</source>
          <target state="translated">다른 프로토콜 간의 차이점에 대한 개요는 &lt;a href=&quot;https://github.com/google/pywebsocket/wiki/WebSocketProtocolSpec#&quot;&gt;pywebsocket의 WebSocketProtocolSpec을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="be5055cb23a1ef11eda19b42439fd5ab77340f2f" translate="yes" xml:space="preserve">
          <source>For an overview of the recommended types for use with Qt-supported Databases, please refer to &lt;a href=&quot;sql-types&quot;&gt;this table&lt;/a&gt;.</source>
          <target state="translated">Qt 지원 데이터베이스와 함께 사용할 권장 유형에 대한 개요는 &lt;a href=&quot;sql-types&quot;&gt;이 표&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a15178bc2a02e68481dd6a447fcf506183c79a5" translate="yes" xml:space="preserve">
          <source>For an overview of the recommended types for use with Qt-supported Databases, please refer to &lt;a href=&quot;sql-types#&quot;&gt;this table&lt;/a&gt;.</source>
          <target state="translated">Qt 지원 데이터베이스와 함께 사용하기 위해 권장되는 유형에 대한 개요는 &lt;a href=&quot;sql-types#&quot;&gt;이 표&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="19ccce26e4fdb84808775aeedd57a5f6e89fb492" translate="yes" xml:space="preserve">
          <source>For an unadorned text alert.</source>
          <target state="translated">비인간적 인 문자 알림.</target>
        </trans-unit>
        <trans-unit id="fdc76cf7dda6926fadc3d36039a12f33c09f3396" translate="yes" xml:space="preserve">
          <source>For animations, ensure that the &lt;b&gt;Baked Animation&lt;/b&gt; option is checked in the &lt;b&gt;Animation&lt;/b&gt; tab.</source>
          <target state="translated">애니메이션의 경우 &lt;b&gt;애니메이션&lt;/b&gt; 탭 에서 &lt;b&gt;Baked Animation&lt;/b&gt; 옵션이 선택되어 있는지 확인합니다 .&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="01dd982eb27b8db5f32142dda09a348def0781a1" translate="yes" xml:space="preserve">
          <source>For any GUI application using Qt, there is precisely &lt;b&gt;one&lt;/b&gt; QApplication object, no matter whether the application has 0, 1, 2 or more windows at any given time. For non-&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; based Qt applications, use &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instead, as it does not depend on the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; library.</source>
          <target state="translated">Qt를 사용하는 모든 GUI 응용 프로그램의 경우 응용 프로그램에 주어진 시간에 0, 1, 2 또는 그 이상의 창이 있는지에 관계없이 정확히 &lt;b&gt;하나의&lt;/b&gt; QApplication 객체가 있습니다. 비 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 기반 Qt 애플리케이션의 경우 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; 라이브러리 에 의존하지 않으므로 &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication을&lt;/a&gt; 대신 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="7dae4f1f15e130e7e9b837487ac0147349904e02" translate="yes" xml:space="preserve">
          <source>For any GUI application using Qt, there is precisely &lt;b&gt;one&lt;/b&gt; QApplication object, no matter whether the application has 0, 1, 2 or more windows at any given time. For non-&lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; based Qt applications, use &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instead, as it does not depend on the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; library.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f4caae9df29e1dbb55e128fff59a80efdffe6968" translate="yes" xml:space="preserve">
          <source>For any GUI application using Qt, there is precisely &lt;b&gt;one&lt;/b&gt; QGuiApplication object no matter whether the application has 0, 1, 2 or more windows at any given time. For non-GUI Qt applications, use &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; instead, as it does not depend on the Qt GUI module. For &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; based Qt applications, use &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; instead, as it provides some functionality needed for creating &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; instances.</source>
          <target state="translated">Qt를 사용하는 모든 GUI 응용 프로그램의 경우 응용 프로그램에 주어진 시간에 0, 1, 2 또는 그 이상의 창이 있는지에 관계없이 정확히 &lt;b&gt;하나의&lt;/b&gt; QGuiApplication 객체가 있습니다. GUI가 아닌 Qt 애플리케이션의 경우 Qt GUI 모듈에 의존하지 않으므로 &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication을&lt;/a&gt; 대신 사용 하십시오. 들어 &lt;a href=&quot;qwidget&quot;&gt;는 QWidget&lt;/a&gt; 기반 Qt는 응용 프로그램 사용 &lt;a href=&quot;qapplication&quot;&gt;의 QApplication을&lt;/a&gt; 그것이 생성에 필요한 몇 가지 기능을 제공하기 때문에, 대신 &lt;a href=&quot;qwidget&quot;&gt;는 QWidget의&lt;/a&gt; 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="5e5aaa64627a15e07d1414f6126785d5a33486fc" translate="yes" xml:space="preserve">
          <source>For any GUI application using Qt, there is precisely &lt;b&gt;one&lt;/b&gt; QGuiApplication object no matter whether the application has 0, 1, 2 or more windows at any given time. For non-GUI Qt applications, use &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; instead, as it does not depend on the Qt GUI module. For &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; based Qt applications, use &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; instead, as it provides some functionality needed for creating &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; instances.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7e0ab5bbdfc835faca461783776d3ca0aa736f54" translate="yes" xml:space="preserve">
          <source>For any GUI application using Qt, there is precisely &lt;b&gt;one&lt;/b&gt;&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; object, no matter whether the application has 0, 1, 2 or more windows at any given time. For non-&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; based Qt applications, use &lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; instead, as it does not depend on the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-module.html&quot;&gt;QtWidgets&lt;/a&gt; library.</source>
          <target state="translated">Qt를 사용하는 GUI 응용 프로그램에는 응용 프로그램이 주어진 시간에 0, 1, 2 이상의 창을 가지고 있는지 여부에 관계없이 정확히 &lt;b&gt;하나의 &lt;/b&gt;&lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; 객체가 있습니다. &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 기반이 아닌 Qt 애플리케이션의 경우 &lt;a href=&quot;qguiapplication&quot;&gt;QtWidget에&lt;/a&gt; 의존하지 않으므로 QGuiApplication을 대신 사용 하십시오 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtwidgets-module.html&quot;&gt;.&lt;/a&gt; 라이브러리 .</target>
        </trans-unit>
        <trans-unit id="5bf41b57fa2372ea4fef2826d04cb64feef5bb68" translate="yes" xml:space="preserve">
          <source>For any GUI application using Qt, there is precisely &lt;b&gt;one&lt;/b&gt;&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; object no matter whether the application has 0, 1, 2 or more windows at any given time. For non-GUI Qt applications, use &lt;a href=&quot;qcoreapplication&quot;&gt;QCoreApplication&lt;/a&gt; instead, as it does not depend on the Qt GUI module. For &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; based Qt applications, use &lt;a href=&quot;qapplication&quot;&gt;QApplication&lt;/a&gt; instead, as it provides some functionality needed for creating &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; instances.</source>
          <target state="translated">Qt를 사용하는 GUI 응용 프로그램에는 응용 프로그램이 주어진 시간에 0, 1, 2 이상의 창을 가지고 있는지 여부에 관계없이 정확히 &lt;b&gt;하나의 &lt;/b&gt;&lt;a href=&quot;qguiapplication&quot;&gt;QGuiApplication&lt;/a&gt; 객체가 있습니다. GUI가 아닌 Qt 애플리케이션의 경우 &lt;a href=&quot;qcoreapplication&quot;&gt;QtUI&lt;/a&gt; 모듈에 의존하지 않으므로 QCoreApplication을 대신 사용 하십시오. 들어 &lt;a href=&quot;qwidget&quot;&gt;는 QWidget&lt;/a&gt; 기반 Qt는 응용 프로그램 사용 &lt;a href=&quot;qapplication&quot;&gt;의 QApplication을&lt;/a&gt; 그것이 생성에 필요한 몇 가지 기능을 제공하기 때문에, 대신 &lt;a href=&quot;qwidget&quot;&gt;는 QWidget의&lt;/a&gt; 인스턴스를.</target>
        </trans-unit>
        <trans-unit id="2d0f74fd29acacf4135da17e957be16e941ec479" translate="yes" xml:space="preserve">
          <source>For any field that is not represented in the format the following defaults are used:</source>
          <target state="translated">형식으로 표시되지 않은 필드에는 다음 기본값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8c541481dbfe904154e973b7666778d4d7be39ce" translate="yes" xml:space="preserve">
          <source>For any field that is not represented in the format, the following defaults are used:</source>
          <target state="translated">형식으로 표시되지 않은 필드의 경우 다음 기본값이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a902162443df6f435b2fd680fa8e8fa094a7e0a1" translate="yes" xml:space="preserve">
          <source>For any other field type, toString() is called on its value and the result of this is returned.</source>
          <target state="translated">다른 필드 유형의 경우 해당 값에서 toString ()이 호출되고이 결과가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="4c7a054766f1d7420beb903eac12eaddc34fbb6a" translate="yes" xml:space="preserve">
          <source>For any other types, this function will return Null if the &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; itself is null, and otherwise will try to convert to string using &lt;a href=&quot;qvariant#toString&quot;&gt;QVariant::toString&lt;/a&gt;(). If the conversion to string fails, this function returns Undefined.</source>
          <target state="translated">다른 유형의 경우이 함수는 &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 자체가 null 인 경우 Null을 반환 하고 그렇지 않으면 &lt;a href=&quot;qvariant#toString&quot;&gt;QVariant :: toString&lt;/a&gt; ()을 사용하여 문자열로 변환하려고 시도합니다 . 문자열 변환에 실패하면이 함수는 정의되지 않음을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d02feeaa537bb3defb3f9dcf49990b087ad4bb0d" translate="yes" xml:space="preserve">
          <source>For anything but the simplest test programs, it is recommended that you automate running the &lt;code&gt;moc&lt;/code&gt;. By adding some rules to your program's makefile, &lt;code&gt;make&lt;/code&gt; can take care of running moc when necessary and handling the moc output.</source>
          <target state="translated">가장 간단한 테스트 프로그램을 제외하고 &lt;code&gt;moc&lt;/code&gt; 실행을 자동화하는 것이 좋습니다 . 프로그램의 메이크 파일에 규칙을 추가하면 &lt;code&gt;make&lt;/code&gt; 는 필요할 때 moc을 실행하고 moc 출력을 처리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="a600c5a8a6ea5554b7c7df47b4cf7027439bad09" translate="yes" xml:space="preserve">
          <source>For application developers writing user interfaces, Qt provides higher level API's, like Qt Quick, that are much more suitable than the enablers found in the Qt GUI module.</source>
          <target state="translated">사용자 인터페이스를 작성하는 응용 프로그램 개발자를 위해 Qt는 Qt Quick과 같이 Qt GUI 모듈에있는 인 에이 블러보다 훨씬 더 높은 수준의 API를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="93d832cf9896580a23546d991964636758535d4e" translate="yes" xml:space="preserve">
          <source>For applications that use menus, it may be more convenient to use the convenience functions provided in the &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; class to assign keyboard shortcuts to menu items as they are created. Alternatively, shortcuts may be associated with other types of actions in the &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; class.</source>
          <target state="translated">메뉴를 사용하는 응용 프로그램의 경우 &lt;a href=&quot;qmenu&quot;&gt;QMenu&lt;/a&gt; 클래스 에서 제공하는 편의 기능을 사용하여 메뉴 항목이 생성 될 때 바로 가기 키를 할당 할 수 있습니다. 또는 단축키는 &lt;a href=&quot;qaction&quot;&gt;QAction&lt;/a&gt; 클래스 의 다른 유형의 조치와 ​​연관 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="34c1d1c1f88a935ea3c11a83c2f0129ae6402928" translate="yes" xml:space="preserve">
          <source>For applications where fast input is important, the circular &lt;a href=&quot;qml-qtquick-controls2-dial#inputMode-prop&quot;&gt;input mode&lt;/a&gt; is useful, as clicking on the dial will move it directly to that position.</source>
          <target state="translated">빠른 입력이 중요한 응용 분야의 경우 다이얼을 클릭하면 해당 위치로 직접 이동하므로 원형 &lt;a href=&quot;qml-qtquick-controls2-dial#inputMode-prop&quot;&gt;입력 모드&lt;/a&gt; 가 유용합니다.</target>
        </trans-unit>
        <trans-unit id="b44adfe201f24ee65eadc87c34b497453129fdfe" translate="yes" xml:space="preserve">
          <source>For applications where precise input is important, the horizontal and vertical input modes are recommended, as these allow small adjustments to be made relative to where the dial is clicked. These modes are also better for dials where large jumps in values could be unsafe, such as a dial that controls audio volume.</source>
          <target state="translated">정확한 입력이 중요한 응용 분야의 경우 수평 및 수직 입력 모드를 사용하는 것이 좋습니다.이 모드를 사용하면 다이얼을 클릭 한 위치를 기준으로 작은 조정을 수행 할 수 있습니다. 이 모드는 오디오 볼륨을 제어하는 ​​다이얼과 같이 값이 크게 증가하는 것이 안전하지 않은 다이얼에도 좋습니다.</target>
        </trans-unit>
        <trans-unit id="adee67b333c5f3d5132bb78604ab7bbbc06bd67a" translate="yes" xml:space="preserve">
          <source>For applying acceleration in an angle. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">비스듬히 가속을 적용합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e7893e2c0ebfa0f2775f78e3575876f11ad8dda0" translate="yes" xml:space="preserve">
          <source>For applying friction proportional to the particle's current velocity. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">입자의 현재 속도에 비례하여 마찰을가합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="0db5af2bd21aa65fab98ef87dd62af72d1e17190" translate="yes" xml:space="preserve">
          <source>For applying random particle trajectory. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">임의의 입자 궤적을 적용합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="d5a84df1e9b09c1b29453c3bcc5fc39b296be136" translate="yes" xml:space="preserve">
          <source>For asking a question during normal operations.</source>
          <target state="translated">정상 작동 중에 질문합니다.</target>
        </trans-unit>
        <trans-unit id="ee063cac80bb2799302fc23e43507da612c1f0f8" translate="yes" xml:space="preserve">
          <source>For atomic operations on integers, see the &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; class.</source>
          <target state="translated">정수에 대한 원자 연산은 &lt;a href=&quot;qatomicinteger&quot;&gt;QAtomicInteger&lt;/a&gt; 클래스를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e080bb81de9f1cf8c554f7ffc5e7bdfc0def8918" translate="yes" xml:space="preserve">
          <source>For atomic operations on integers, see the QAtomicInteger class.</source>
          <target state="translated">정수에 대한 원자 연산은 QAtomicInteger 클래스를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c94b1fb4a224189059dd7aa524e1c26c272b2f48" translate="yes" xml:space="preserve">
          <source>For atomic operations on pointers, see the &lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer&lt;/a&gt; class.</source>
          <target state="translated">포인터에 대한 원자 연산은 &lt;a href=&quot;qatomicpointer&quot;&gt;QAtomicPointer&lt;/a&gt; 클래스를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="256370836ac7be175b24a5835358c0c9e1b0ee73" translate="yes" xml:space="preserve">
          <source>For attracting particles towards a specific point. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">입자를 특정 지점으로 끌어 당깁니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="57087b2b524f49a55e2f9e0baac49d88a38c84d3" translate="yes" xml:space="preserve">
          <source>For backwards compatibility the default value is &lt;a href=&quot;qnetworkrequest#RedirectPolicy-enum&quot;&gt;QNetworkRequest::ManualRedirectPolicy&lt;/a&gt;. This may change in the future and some type of auto-redirect policy will become the default; clients relying on manual redirect handling are encouraged to set this policy explicitly in their code.</source>
          <target state="translated">이전 버전과의 호환성을 위해 기본값은 &lt;a href=&quot;qnetworkrequest#RedirectPolicy-enum&quot;&gt;QNetworkRequest :: ManualRedirectPolicy&lt;/a&gt; 입니다. 향후 변경 될 수 있으며 일부 유형의 자동 리디렉션 정책이 기본값이됩니다. 수동 리디렉션 처리에 의존하는 클라이언트는이 정책을 코드에 명시 적으로 설정하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c23517f49804ea10c217bcbf5d036afef1934fbf" translate="yes" xml:space="preserve">
          <source>For backwards compatibility, the event can also hold monodirectional wheel event data:</source>
          <target state="translated">이전 버전과의 호환성을 위해 이벤트는 단방향 휠 이벤트 데이터도 보유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="755fd6857ec289cd8ba3630c8277fb30d71710c5" translate="yes" xml:space="preserve">
          <source>For basic controls, the value is equal to &lt;code&gt;contentItem ? contentItem.implicitHeight : 0&lt;/code&gt;. For types that inherit Container or Pane, the value is calculated based on the content children.</source>
          <target state="translated">기본 컨트롤의 경우 값은 &lt;code&gt;contentItem ? contentItem.implicitHeight : 0&lt;/code&gt; . 컨테이너 또는 분할 창을 상속하는 유형의 경우 컨텐츠 하위를 기반으로 값이 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="266d7f6a259a98637d391470e974502c0310b7a1" translate="yes" xml:space="preserve">
          <source>For basic controls, the value is equal to &lt;code&gt;contentItem ? contentItem.implicitWidth : 0&lt;/code&gt;. For types that inherit Container or Pane, the value is calculated based on the content children.</source>
          <target state="translated">기본 컨트롤의 경우 값은 &lt;code&gt;contentItem ? contentItem.implicitWidth : 0&lt;/code&gt; . 컨테이너 또는 분할 창을 상속하는 유형의 경우 컨텐츠 하위를 기반으로 값이 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="7bf023de8182b1a329496fc2d9fc1cacddd66dbd" translate="yes" xml:space="preserve">
          <source>For better performance the regular expressions are cached internally. By default the cache size is 25, but it can be changed through the option's value. For example passing &quot;&lt;code&gt;QSQLITE_ENABLE_REGEXP=10&lt;/code&gt;&quot; reduces the cache size to 10.</source>
          <target state="translated">더 나은 성능을 위해 정규식은 내부적으로 캐시됩니다. 기본적으로 캐시 크기는 25이지만 옵션 값을 통해 변경할 수 있습니다. 예를 들어 &quot; &lt;code&gt;QSQLITE_ENABLE_REGEXP=10&lt;/code&gt; &quot;을 전달 하면 캐시 크기가 10으로 줄어 듭니다.</target>
        </trans-unit>
        <trans-unit id="72bf1a7b9c23e10ce4e016230fa4c7ff5c2a76f2" translate="yes" xml:space="preserve">
          <source>For better readability, we separate these different parts with an empty line.</source>
          <target state="translated">가독성을 높이기 위해 이러한 여러 부분을 빈 줄로 분리합니다.</target>
        </trans-unit>
        <trans-unit id="76852cabc1036a7336d91bb4b98a5e65c8274e33" translate="yes" xml:space="preserve">
          <source>For buffered devices, this function returns the number of bytes waiting to be written. For devices with no buffer, this function returns 0.</source>
          <target state="translated">버퍼링 된 장치의 경우이 함수는 쓰기 대기중인 바이트 수를 반환합니다. 버퍼가없는 장치의 경우이 함수는 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="add9e5c2ffeaa3e872567329db4d899de5f4c027" translate="yes" xml:space="preserve">
          <source>For buffered devices, this function returns the number of frames waiting to be written. For unbuffered devices, this function always returns zero.</source>
          <target state="translated">버퍼링 된 장치의 경우이 함수는 쓰기 대기중인 프레임 수를 반환합니다. 버퍼되지 않은 장치의 경우이 함수는 항상 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f873876a449c89fc599774cdb9d253ab70854eac" translate="yes" xml:space="preserve">
          <source>For buffered devices, this function waits until a payload of buffered written data has been written to the device and the &lt;a href=&quot;qiodevice#bytesWritten&quot;&gt;bytesWritten&lt;/a&gt;() signal has been emitted, or until</source>
          <target state="translated">버퍼링 된 장치의 경우이 함수는 버퍼링 된 기록 된 데이터의 페이로드가 장치에 기록되고 &lt;a href=&quot;qiodevice#bytesWritten&quot;&gt;bytesWritten&lt;/a&gt; () 신호가 방출 될 때까지 또는</target>
        </trans-unit>
        <trans-unit id="6485b10091de85d0d1673b33455abe3e2e158928" translate="yes" xml:space="preserve">
          <source>For buffered devices, this function waits until all buffered frames have been written to the device and the &lt;a href=&quot;qcanbusdevice#framesWritten&quot;&gt;framesWritten&lt;/a&gt;() signal has been emitted, or until</source>
          <target state="translated">버퍼링 된 장치의 경우이 함수는 모든 버퍼링 된 프레임이 장치에 기록되고 &lt;a href=&quot;qcanbusdevice#framesWritten&quot;&gt;framesWritten&lt;/a&gt; () 신호가 방출 될 때까지 또는</target>
        </trans-unit>
        <trans-unit id="dfbd9a0086b9f7375ae523221d979dfb02163e51" translate="yes" xml:space="preserve">
          <source>For buttons, the &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#display-prop&quot;&gt;display&lt;/a&gt; property can be used to control how the icon and text are displayed within the button.</source>
          <target state="translated">버튼의 경우 &lt;a href=&quot;qml-qtquick-controls2-abstractbutton#display-prop&quot;&gt;표시&lt;/a&gt; 속성을 사용하여 아이콘과 텍스트가 버튼 내에 표시되는 방식을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82d9752d434a79c358d5def0a8729d741a5d4c32" translate="yes" xml:space="preserve">
          <source>For cameras that support autofocusing, in order for a camera to autofocus on part of a sensor frame, it considers different zones within the frame. Which zones to use, and where the zones are located vary between different cameras.</source>
          <target state="translated">자동 초점 기능을 지원하는 카메라의 경우 카메라가 센서 프레임의 일부에서 자동 초점을 맞추기 위해 프레임 내의 다른 영역을 고려합니다. 사용할 영역과 영역의 위치는 카메라마다 다릅니다.</target>
        </trans-unit>
        <trans-unit id="465cc28bfeb603273983d9115c7dd0c55c12187f" translate="yes" xml:space="preserve">
          <source>For cases where you may require information on the sender of the signal, Qt provides the &lt;a href=&quot;qobject#sender&quot;&gt;QObject::sender&lt;/a&gt;() function, which returns a pointer to the object that sent the signal.</source>
          <target state="translated">신호 발신자에 대한 정보가 필요할 수있는 경우 Qt는 &lt;a href=&quot;qobject#sender&quot;&gt;QObject :: sender&lt;/a&gt; () 함수를 제공합니다.이 함수는 신호를 보낸 개체에 대한 포인터를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6d7e28ebe19e2ac2dbeaef082de7ddd5cda54070" translate="yes" xml:space="preserve">
          <source>For cells in a TableInterface object.</source>
          <target state="translated">TableInterface 객체의 셀에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6d9880fa2761fb79428df19d5c1c564908bddee7" translate="yes" xml:space="preserve">
          <source>For certain types of events (e.g. mouse and key events), the event will be propagated to the receiver's parent and so on up to the top-level object if the receiver is not interested in the event (i.e., it returns &lt;code&gt;false&lt;/code&gt;).</source>
          <target state="translated">특정 유형의 이벤트 (예 : 마우스 및 키 이벤트)의 경우, 수신자가 이벤트에 관심이없는 경우 (즉, &lt;code&gt;false&lt;/code&gt; 를 반환하는 경우) 이벤트가 수신자의 상위로 전파되고 최상위 레벨 오브젝트까지 전파됩니다 .</target>
        </trans-unit>
        <trans-unit id="afdb5c6c06b2af27a9da243848b476ad5b8dead4" translate="yes" xml:space="preserve">
          <source>For changing the state of a group of a particle. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">입자 그룹의 상태를 변경합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="baa2971c953b177ebbc5e099af5f470311baa34b" translate="yes" xml:space="preserve">
          <source>For changing the state of a sprite particle. &lt;a href=&quot;#details&quot;&gt;More...&lt;/a&gt;</source>
          <target state="translated">스프라이트 입자의 상태를 변경합니다. &lt;a href=&quot;#details&quot;&gt;더...&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="3d3c26c08324d108c8b1c86ebf565e6a12e9e385" translate="yes" xml:space="preserve">
          <source>For characters that may be used with multiple scripts and that do not inherit their script from the preceding characters.</source>
          <target state="translated">여러 스크립트와 함께 사용할 수 있고 이전 문자에서 스크립트를 상속하지 않는 문자의 경우.</target>
        </trans-unit>
        <trans-unit id="7b2b4efc21e9967a2422a2899af4d0768791d075" translate="yes" xml:space="preserve">
          <source>For characters that may be used with multiple scripts and that inherit their script from the preceding characters. These include nonspacing marks, enclosing marks, and zero width joiner/non-joiner characters.</source>
          <target state="translated">여러 스크립트와 함께 사용할 수 있고 이전 문자에서 해당 스크립트를 상속하는 문자 공백이없는 마크, 둘러싸는 마크, 폭이 0 인 결합 자 / 결합자가 아닌 문자가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="7c0d27aaf5af6c953dbb05f06510abfd5d667536" translate="yes" xml:space="preserve">
          <source>For child widgets this property always holds an empty rectangle.</source>
          <target state="translated">자식 위젯의 경우이 속성에는 항상 빈 사각형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c83d205a887f766d39c3b2c4757fbdf9dde2e09" translate="yes" xml:space="preserve">
          <source>For child windows, this returns the screen of the corresponding top level window.</source>
          <target state="translated">자식 창의 경우 해당 최상위 창의 화면을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f1ae35e187f60081ad4ef5f975dc3ad3211218ab" translate="yes" xml:space="preserve">
          <source>For classes, it goes in front of the &lt;code&gt;:&lt;/code&gt; in the class definition, if any:</source>
          <target state="translated">클래스의 경우 클래스 정의에서 &lt;code&gt;:&lt;/code&gt; 앞에 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2b2986a57a446bdc4b09a23f044aaf01f79e51e9" translate="yes" xml:space="preserve">
          <source>For color indexed images, this function returns &lt;code&gt;true&lt;/code&gt; if color(i) is &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt;(i, i, i) for all indexes of the color table; otherwise returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">컬러 인덱스 이미지의 경우,이 함수는 컬러 테이블의 모든 인덱스에 대해 color (i)가 &lt;a href=&quot;qcolor#QRgb-typedef&quot;&gt;QRgb&lt;/a&gt; (i, i, i) 인 경우 &lt;code&gt;true&lt;/code&gt; 를 리턴 합니다. 그렇지 않으면 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7efb41f78e76be615db8ba620e1a0a9a9547627e" translate="yes" xml:space="preserve">
          <source>For comments, the content of the comment</source>
          <target state="translated">의견의 경우 의견의 내용</target>
        </trans-unit>
        <trans-unit id="085403f5a8a56bf629680e5dfd8c92be30f1ebe0" translate="yes" xml:space="preserve">
          <source>For common use cases, Qt Data Visualization offers specialized proxies. One such case is having data in an item model (&lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; subclass), which is a common way to store data in Qt applications. Each of the visualization types offers a special proxy class for this purpose, for example, &lt;a href=&quot;qitemmodelbardataproxy&quot;&gt;QItemModelBarDataProxy&lt;/a&gt; for &lt;a href=&quot;qbar3dseries&quot;&gt;QBar3DSeries&lt;/a&gt;. These proxies are simple to use: just give them a pointer to the item model containing the data and the rules how to map the data into format the basic proxy can digest.</source>
          <target state="translated">일반적인 사용 사례의 경우 Qt Data Visualization은 특수 프록시를 제공합니다. 이러한 사례 중 하나 는 Qt 애플리케이션에 데이터를 저장하는 일반적인 방법 인 항목 모델 ( &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; 서브 클래스)에 데이터를 보유하는 것입니다. 각 시각화 유형은이 목적을위한 특수 프록시 클래스 (예 : &lt;a href=&quot;qitemmodelbardataproxy&quot;&gt;QBar3DSeries&lt;/a&gt; 용 &lt;a href=&quot;qbar3dseries&quot;&gt;QItemModelBarDataProxy)를 제공&lt;/a&gt; 합니다. 이러한 프록시는 사용이 간단합니다. 데이터를 포함하는 항목 모델에 대한 포인터와 기본 프록시가 요약 할 수있는 형식으로 데이터를 맵핑하는 규칙을 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="945a3d5d9978166bf3f9de824a70c4e1d9d7b26b" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, it might be required to simplify the representation of a painter path: &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; provides the &lt;a href=&quot;qpainterpath#toFillPolygon&quot;&gt;toFillPolygon&lt;/a&gt;(), &lt;a href=&quot;qpainterpath#toFillPolygons&quot;&gt;toFillPolygons&lt;/a&gt;() and &lt;a href=&quot;qpainterpath#toSubpathPolygons&quot;&gt;toSubpathPolygons&lt;/a&gt;() functions which convert the painter path into a polygon. The &lt;a href=&quot;qpainterpath#toFillPolygon&quot;&gt;toFillPolygon&lt;/a&gt;() returns the painter path as one single polygon, while the two latter functions return a list of polygons.</source>
          <target state="translated">호환성을 위해 화가 경로 표시를 단순화해야 할 수도 있습니다. &lt;a href=&quot;qpainterpath&quot;&gt;QPainterPath&lt;/a&gt; 는 페인터 경로를 다각형으로 변환하는 &lt;a href=&quot;qpainterpath#toFillPolygon&quot;&gt;toFillPolygon&lt;/a&gt; (), &lt;a href=&quot;qpainterpath#toFillPolygons&quot;&gt;toFillPolygons&lt;/a&gt; () 및 &lt;a href=&quot;qpainterpath#toSubpathPolygons&quot;&gt;toSubpathPolygons&lt;/a&gt; () 함수를 제공합니다. &lt;a href=&quot;qpainterpath#toFillPolygon&quot;&gt;toFillPolygon는&lt;/a&gt; 두 후자의 기능은 다각형의 목록을 반환하면서 (), 하나 개의 폴리곤으로 화가 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="27010f6d86352530325e9eff3b8a27dc1d08af89" translate="yes" xml:space="preserve">
          <source>For compatibility reasons, it might be required to simplify the representation of a painter path: QPainterPath provides the &lt;a href=&quot;qpainterpath#toFillPolygon&quot;&gt;toFillPolygon&lt;/a&gt;(), &lt;a href=&quot;qpainterpath#toFillPolygons&quot;&gt;toFillPolygons&lt;/a&gt;() and &lt;a href=&quot;qpainterpath#toSubpathPolygons&quot;&gt;toSubpathPolygons&lt;/a&gt;() functions which convert the painter path into a polygon. The &lt;a href=&quot;qpainterpath#toFillPolygon&quot;&gt;toFillPolygon&lt;/a&gt;() returns the painter path as one single polygon, while the two latter functions return a list of polygons.</source>
          <target state="translated">호환성을 위해 &lt;a href=&quot;qpainterpath#toFillPolygon&quot;&gt;Painter&lt;/a&gt; 경로의 표현을 단순화해야 할 수 있습니다. QPainterPath는 painter 경로를 다각형으로 변환하는 toFillPolygon (), &lt;a href=&quot;qpainterpath#toFillPolygons&quot;&gt;toFillPolygons&lt;/a&gt; () 및 &lt;a href=&quot;qpainterpath#toSubpathPolygons&quot;&gt;toSubpathPolygons&lt;/a&gt; () 함수를 제공합니다. &lt;a href=&quot;qpainterpath#toFillPolygon&quot;&gt;toFillPolygon는&lt;/a&gt; 두 후자의 기능은 다각형의 목록을 반환하면서 (), 하나 개의 폴리곤으로 화가 경로를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e0c951d7ca0fc204180e62bc3ecbc45013c56e7c" translate="yes" xml:space="preserve">
          <source>For compatibility with older versions of QDoc, it is recommended to include compat.qdocconf.</source>
          <target state="translated">이전 버전의 QDoc과의 호환성을 위해 compat.qdocconf를 포함하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="bdc8faaa56db597215c9ed0cbd62994c1780255b" translate="yes" xml:space="preserve">
          <source>For compatibility with previous versions of Qt, macros with an empty</source>
          <target state="translated">이전 버전의 Qt와의 호환성을 위해 비어있는 매크로</target>
        </trans-unit>
        <trans-unit id="bcb75ba202750b8283202dc4fb0033095948adcd" translate="yes" xml:space="preserve">
          <source>For complete control over the display and editing of items you can specify a delegate with &lt;a href=&quot;qabstractitemview#setItemDelegate&quot;&gt;setItemDelegate&lt;/a&gt;().</source>
          <target state="translated">항목 표시 및 편집을 완전히 제어하려면 &lt;a href=&quot;qabstractitemview#setItemDelegate&quot;&gt;setItemDelegate&lt;/a&gt; ()를 사용하여 대리자를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a6a410e43bf1756b43022407a7d2b0e6ebbb9cb2" translate="yes" xml:space="preserve">
          <source>For complex layouts, speed can be greatly increased by caching calculated values. In that case, implement &lt;a href=&quot;qlayoutitem#invalidate&quot;&gt;QLayoutItem::invalidate&lt;/a&gt;() to mark the cached data is dirty.</source>
          <target state="translated">복잡한 레이아웃의 경우 계산 된 값을 캐싱하여 속도를 크게 높일 수 있습니다. 이 경우 &lt;a href=&quot;qlayoutitem#invalidate&quot;&gt;QLayoutItem :: invalidate&lt;/a&gt; ()를 구현 하여 캐시 된 데이터가 더티임을 표시하십시오.</target>
        </trans-unit>
        <trans-unit id="304bfc6929da4fbc547258ab0f6cb9d9ea6d99cc" translate="yes" xml:space="preserve">
          <source>For convenience there are a set of functions which return the value of the first contact detail of each type.</source>
          <target state="translated">편의상 각 유형의 첫 번째 접촉 세부 사항의 값을 리턴하는 기능 세트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe5d581a0900690ff49f2373a093d525f4512da1" translate="yes" xml:space="preserve">
          <source>For convenience, &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; makes all viewport events available in the virtual &lt;a href=&quot;qabstractscrollarea#viewportEvent&quot;&gt;viewportEvent&lt;/a&gt;() handler. &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;'s specialized handlers are remapped to viewport events in the cases where this makes sense. The remapped specialized handlers are: &lt;a href=&quot;qabstractscrollarea#paintEvent&quot;&gt;paintEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#mouseDoubleClickEvent&quot;&gt;mouseDoubleClickEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#mouseMoveEvent&quot;&gt;mouseMoveEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#wheelEvent&quot;&gt;wheelEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#dragEnterEvent&quot;&gt;dragEnterEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#dragMoveEvent&quot;&gt;dragMoveEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#dragLeaveEvent&quot;&gt;dragLeaveEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#dropEvent&quot;&gt;dropEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt;(), and &lt;a href=&quot;qabstractscrollarea#resizeEvent&quot;&gt;resizeEvent&lt;/a&gt;().</source>
          <target state="translated">편의상 &lt;a href=&quot;qabstractscrollarea&quot;&gt;QAbstractScrollArea&lt;/a&gt; 는 모든 뷰포트 이벤트를 가상 &lt;a href=&quot;qabstractscrollarea#viewportEvent&quot;&gt;viewportEvent&lt;/a&gt; () 핸들러 에서 사용할 수있게 합니다. &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 의 특수 핸들러는 이것이 적합한 경우 이벤트를 뷰포트하기 위해 다시 매핑됩니다. 재 맵핑 된 특수 처리기는 다음과 같습니다. &lt;a href=&quot;qabstractscrollarea#paintEvent&quot;&gt;paintEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#mouseDoubleClickEvent&quot;&gt;mouseDoubleClickEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#mouseMoveEvent&quot;&gt;mouseMoveEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#wheelEvent&quot;&gt;wheelEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#dragEnterEvent&quot;&gt;dragEnterEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#dragMoveEvent&quot;&gt;dragMoveEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#dragLeaveEvent&quot;&gt;dragLeaveEvent입니다.&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#dropEvent&quot;&gt;dropEvent&lt;/a&gt; (),&lt;a href=&quot;qabstractscrollarea#contextMenuEvent&quot;&gt; contextMenuEvent&lt;/a&gt; (), 및 &lt;a href=&quot;qabstractscrollarea#resizeEvent&quot;&gt;resizeEvent&lt;/a&gt;().</target>
        </trans-unit>
        <trans-unit id="11f180a86659a97b43048d9a2a3c0f248b6437f8" translate="yes" xml:space="preserve">
          <source>For convenience, QAbstractScrollArea makes all viewport events available in the virtual &lt;a href=&quot;qabstractscrollarea#viewportEvent&quot;&gt;viewportEvent&lt;/a&gt;() handler. &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;'s specialized handlers are remapped to viewport events in the cases where this makes sense. The remapped specialized handlers are: &lt;a href=&quot;qabstractscrollarea#paintEvent&quot;&gt;paintEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#mouseDoubleClickEvent&quot;&gt;mouseDoubleClickEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#mouseMoveEvent&quot;&gt;mouseMoveEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#wheelEvent&quot;&gt;wheelEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#dragEnterEvent&quot;&gt;dragEnterEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#dragMoveEvent&quot;&gt;dragMoveEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#dragLeaveEvent&quot;&gt;dragLeaveEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#dropEvent&quot;&gt;dropEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt;(), and &lt;a href=&quot;qabstractscrollarea#resizeEvent&quot;&gt;resizeEvent&lt;/a&gt;().</source>
          <target state="translated">편의를 위해 QAbstractScrollArea는 가상 &lt;a href=&quot;qabstractscrollarea#viewportEvent&quot;&gt;viewportEvent&lt;/a&gt; () 핸들러 에서 모든 뷰포트 이벤트를 사용할 수 있도록 합니다. &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 의 특수 처리기는 이것이 의미가있는 경우 뷰포트 이벤트에 다시 매핑됩니다. 다시 매핑 된 특수 핸들러는 &lt;a href=&quot;qabstractscrollarea#paintEvent&quot;&gt;paintEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#mouseDoubleClickEvent&quot;&gt;mouseDoubleClickEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#mouseMoveEvent&quot;&gt;mouseMoveEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#wheelEvent&quot;&gt;wheelEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#dragEnterEvent&quot;&gt;dragEnterEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#dragMoveEvent&quot;&gt;dragMoveEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#dragLeaveEvent&quot;&gt;dragLeaveEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#dropEvent&quot;&gt;dropEvent&lt;/a&gt; (), &lt;a href=&quot;qabstractscrollarea#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt; (), 및 &lt;a href=&quot;qabstractscrollarea#resizeEvent&quot;&gt;resizeEvent&lt;/a&gt; ().</target>
        </trans-unit>
        <trans-unit id="2585fe62e816ea1518ba1194ec74480ff80c31ec" translate="yes" xml:space="preserve">
          <source>For convenience, QAbstractScrollArea makes all viewport events available in the virtual &lt;a href=&quot;qabstractscrollarea#viewportEvent&quot;&gt;viewportEvent&lt;/a&gt;() handler. &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;'s specialized handlers are remapped to viewport events in the cases where this makes sense. The remapped specialized handlers are: &lt;a href=&quot;qabstractscrollarea#paintEvent&quot;&gt;paintEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#mousePressEvent&quot;&gt;mousePressEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#mouseReleaseEvent&quot;&gt;mouseReleaseEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#mouseDoubleClickEvent&quot;&gt;mouseDoubleClickEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#mouseMoveEvent&quot;&gt;mouseMoveEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#wheelEvent&quot;&gt;wheelEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#dragEnterEvent&quot;&gt;dragEnterEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#dragMoveEvent&quot;&gt;dragMoveEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#dragLeaveEvent&quot;&gt;dragLeaveEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#dropEvent&quot;&gt;dropEvent&lt;/a&gt;(), &lt;a href=&quot;qabstractscrollarea#contextMenuEvent&quot;&gt;contextMenuEvent&lt;/a&gt;(), and &lt;a href=&quot;qabstractscrollarea#resizeEvent&quot;&gt;resizeEvent&lt;/a&gt;().</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="b04250bb1c2784bd26d9abc3c83db2b61934c7ee" translate="yes" xml:space="preserve">
          <source>For convenience, Qt provides a set of standard graphics items for the most common shapes. These are:</source>
          <target state="translated">편의를 위해 Qt는 가장 일반적인 모양에 대한 표준 그래픽 항목 세트를 제공합니다. 이것들은:</target>
        </trans-unit>
        <trans-unit id="18609a255096d1939f10604c94c60fae834e69fc" translate="yes" xml:space="preserve">
          <source>For convenience, Qt provides the &lt;a href=&quot;qstylepainter&quot;&gt;QStylePainter&lt;/a&gt; class, which combines a &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt;, a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, and a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;. This makes it possible to write</source>
          <target state="translated">편의상 Qt는 &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; , &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; 및 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 을 결합한 &lt;a href=&quot;qstylepainter&quot;&gt;QStylePainter&lt;/a&gt; 클래스를 제공합니다. . 이것은 쓸 수 있습니다</target>
        </trans-unit>
        <trans-unit id="e75831ab181a5365fad7f5f42c4563259ae65af8" translate="yes" xml:space="preserve">
          <source>For convenience, Qt provides the &lt;a href=&quot;qstylepainter&quot;&gt;QStylePainter&lt;/a&gt; class, which combines a QStyle, a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, and a &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;. This makes it possible to write</source>
          <target state="translated">편의상 Qt는 QStyle, &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt; 및 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 을 결합한 &lt;a href=&quot;qstylepainter&quot;&gt;QStylePainter&lt;/a&gt; 클래스를 제공합니다 . 이것은 쓸 수 있습니다</target>
        </trans-unit>
        <trans-unit id="eee93e92fd44bedf92b6c285d9a20b1401755646" translate="yes" xml:space="preserve">
          <source>For convenience, Qt provides the &lt;a href=&quot;qstylepainter&quot;&gt;QStylePainter&lt;/a&gt; class, which combines a QStyle, a &lt;a href=&quot;qpainter&quot;&gt;QPainter&lt;/a&gt;, and a &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;. This makes it possible to write</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="0ea0d44144e370baa3eab9d55f212e7612f42eba" translate="yes" xml:space="preserve">
          <source>For convenience, if</source>
          <target state="translated">편의상</target>
        </trans-unit>
        <trans-unit id="b384f5ad6b3c82a48b72a174e31e9aa440fdfecb" translate="yes" xml:space="preserve">
          <source>For convenience, several of &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;'s functions are also available in &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;: &lt;a href=&quot;qfuturewatcher#progressValue&quot;&gt;progressValue&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#progressMinimum&quot;&gt;progressMinimum&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#progressMaximum&quot;&gt;progressMaximum&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#progressText&quot;&gt;progressText&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#isStarted&quot;&gt;isStarted&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#isFinished&quot;&gt;isFinished&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#isRunning&quot;&gt;isRunning&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#isCanceled&quot;&gt;isCanceled&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#isPaused&quot;&gt;isPaused&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#waitForFinished&quot;&gt;waitForFinished&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#result&quot;&gt;result&lt;/a&gt;(), and &lt;a href=&quot;qfuturewatcher#resultAt&quot;&gt;resultAt&lt;/a&gt;(). The &lt;a href=&quot;qfuturewatcher#cancel&quot;&gt;cancel&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#setPaused&quot;&gt;setPaused&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#pause&quot;&gt;pause&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#resume&quot;&gt;resume&lt;/a&gt;(), and &lt;a href=&quot;qfuturewatcher#togglePaused&quot;&gt;togglePaused&lt;/a&gt;() functions are slots in &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt;.</source>
          <target state="translated">편의상 &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; 의 여러 기능을 &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher&lt;/a&gt; 에서도 사용할 수 있습니다 : &lt;a href=&quot;qfuturewatcher#progressValue&quot;&gt;progressValue&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#progressMinimum&quot;&gt;progressMinimum&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#progressMaximum&quot;&gt;progressMaximum&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#progressText&quot;&gt;progressText&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#isStarted&quot;&gt;isStarted&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#isFinished&quot;&gt;isFinished&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#isRunning&quot;&gt;isRunning&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#isCanceled&quot;&gt;isCanceled&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#isPaused&quot;&gt;isPaused&lt;/a&gt; () , &lt;a href=&quot;qfuturewatcher#waitForFinished&quot;&gt;waitForFinished&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#result&quot;&gt;result&lt;/a&gt; () 및 &lt;a href=&quot;qfuturewatcher#resultAt&quot;&gt;resultAt&lt;/a&gt; (). 은 &lt;a href=&quot;qfuturewatcher#cancel&quot;&gt;취소&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#setPaused&quot;&gt;setPaused&lt;/a&gt; , () &lt;a href=&quot;qfuturewatcher#pause&quot;&gt;일시 정지&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#resume&quot;&gt;이력서&lt;/a&gt; () 및 &lt;a href=&quot;qfuturewatcher#togglePaused&quot;&gt;togglePaused을&lt;/a&gt;() 함수는 &lt;a href=&quot;qfuturewatcher&quot;&gt;QFutureWatcher의&lt;/a&gt; 슬롯입니다 .</target>
        </trans-unit>
        <trans-unit id="a508983a3bd8817e1a214cfd9e34a3ad72f69e9d" translate="yes" xml:space="preserve">
          <source>For convenience, several of &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt;'s functions are also available in QFutureWatcher: &lt;a href=&quot;qfuturewatcher#progressValue&quot;&gt;progressValue&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#progressMinimum&quot;&gt;progressMinimum&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#progressMaximum&quot;&gt;progressMaximum&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#progressText&quot;&gt;progressText&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#isStarted&quot;&gt;isStarted&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#isFinished&quot;&gt;isFinished&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#isRunning&quot;&gt;isRunning&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#isCanceled&quot;&gt;isCanceled&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#isPaused&quot;&gt;isPaused&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#waitForFinished&quot;&gt;waitForFinished&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#result&quot;&gt;result&lt;/a&gt;(), and &lt;a href=&quot;qfuturewatcher#resultAt&quot;&gt;resultAt&lt;/a&gt;(). The &lt;a href=&quot;qfuturewatcher#cancel&quot;&gt;cancel&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#setPaused&quot;&gt;setPaused&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#pause&quot;&gt;pause&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#resume&quot;&gt;resume&lt;/a&gt;(), and &lt;a href=&quot;qfuturewatcher#togglePaused&quot;&gt;togglePaused&lt;/a&gt;() functions are slots in QFutureWatcher.</source>
          <target state="translated">편의를 위해 &lt;a href=&quot;qfuture&quot;&gt;QFuture&lt;/a&gt; 의 몇 가지 함수도 QFutureWatcher에서 사용할 수 있습니다. &lt;a href=&quot;qfuturewatcher#progressValue&quot;&gt;progressValue&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#progressMinimum&quot;&gt;progressMinimum&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#progressMaximum&quot;&gt;progressMaximum&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#progressText&quot;&gt;progressText&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#isStarted&quot;&gt;isStarted&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#isFinished&quot;&gt;isFinished&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#isRunning&quot;&gt;isRunning&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#isCanceled&quot;&gt;isCanceled&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#isPaused&quot;&gt;isPaused&lt;/a&gt; () , &lt;a href=&quot;qfuturewatcher#waitForFinished&quot;&gt;waitForFinished&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#result&quot;&gt;결과&lt;/a&gt; () 및 &lt;a href=&quot;qfuturewatcher#resultAt&quot;&gt;resultAt&lt;/a&gt; (). (가) &lt;a href=&quot;qfuturewatcher#cancel&quot;&gt;취소&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#setPaused&quot;&gt;setPaused&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#pause&quot;&gt;일시 정지&lt;/a&gt; (), &lt;a href=&quot;qfuturewatcher#resume&quot;&gt;이력서&lt;/a&gt; () 및 &lt;a href=&quot;qfuturewatcher#togglePaused&quot;&gt;togglePaused&lt;/a&gt; () 함수는 QFutureWatcher 슬롯입니다.</target>
        </trans-unit>
        <trans-unit id="2cb767a6083e2d609013dd427ed3a7f0061f0789" translate="yes" xml:space="preserve">
          <source>For convenience, several of &lt;a href=&quot;qtcore-changes-qt6#qfuture&quot;&gt;QFuture&lt;/a&gt;'s functions are also available in QFutureWatcher: &lt;a href=&quot;qfuturewatcher#progressValue&quot;&gt;progressValue&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#progressMinimum&quot;&gt;progressMinimum&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#progressMaximum&quot;&gt;progressMaximum&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#progressText&quot;&gt;progressText&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#isStarted&quot;&gt;isStarted&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#isFinished&quot;&gt;isFinished&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#isRunning&quot;&gt;isRunning&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#isCanceled&quot;&gt;isCanceled&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#isSuspending&quot;&gt;isSuspending&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#isSuspended&quot;&gt;isSuspended&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#waitForFinished&quot;&gt;waitForFinished&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#result&quot;&gt;result&lt;/a&gt;(), and &lt;a href=&quot;qfuturewatcher#resultAt&quot;&gt;resultAt&lt;/a&gt;(). The &lt;a href=&quot;qfuturewatcher#cancel&quot;&gt;cancel&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#setSuspended&quot;&gt;setSuspended&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#suspend&quot;&gt;suspend&lt;/a&gt;(), &lt;a href=&quot;qfuturewatcher#resume&quot;&gt;resume&lt;/a&gt;(), and &lt;a href=&quot;qfuturewatcher#toggleSuspended&quot;&gt;toggleSuspended&lt;/a&gt;() functions are slots in QFutureWatcher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="aaded82642293e17b6071518ea91f8d44d1fafd1" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt; type has a &lt;code&gt;when&lt;/code&gt; property that can bind to expressions to change the state whenever the bound expression evaluates to &lt;code&gt;true&lt;/code&gt;. The &lt;code&gt;when&lt;/code&gt; property will revert the state back to the &lt;a href=&quot;#the-default-state&quot;&gt;default state&lt;/a&gt; when the expression evaluates to false.</source>
          <target state="translated">편의상 &lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt; 유형에는 바인딩 된 표현식이 &lt;code&gt;true&lt;/code&gt; 로 평가 될 때마다 상태를 변경하기 위해 표현식에 바인딩 할 수 있는 &lt;code&gt;when&lt;/code&gt; 특성이 있습니다 . &lt;code&gt;when&lt;/code&gt; 속성의 상태 다시 되돌아갑니다 &lt;a href=&quot;#the-default-state&quot;&gt;기본 상태&lt;/a&gt; false로 표현 평가합니다.</target>
        </trans-unit>
        <trans-unit id="f2b945f9a2748a61ced90de9b693174adc337673" translate="yes" xml:space="preserve">
          <source>For convenience, the &lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt; type has a &lt;code&gt;when&lt;/code&gt; property that can bind to expressions to change the state whenever the bound expression evaluates to &lt;code&gt;true&lt;/code&gt;. The &lt;code&gt;when&lt;/code&gt; property will revert the state back to the &lt;a href=&quot;qtquick-statesanimations-states#the-default-state&quot;&gt;default state&lt;/a&gt; when the expression evaluates to false.</source>
          <target state="translated">편의를 위해 &lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt; 형식에는 바인딩 된식이 &lt;code&gt;true&lt;/code&gt; 로 평가 될 때마다 상태를 변경하기 위해 식에 바인딩 할 수 있는 &lt;code&gt;when&lt;/code&gt; 속성이 있습니다 . &lt;code&gt;when&lt;/code&gt; 속성의 상태 다시 되돌아갑니다 &lt;a href=&quot;qtquick-statesanimations-states#the-default-state&quot;&gt;기본 상태&lt;/a&gt; false로 표현 평가합니다.</target>
        </trans-unit>
        <trans-unit id="39ddb5f7aecc230682355600f702eb6644ef7c2d" translate="yes" xml:space="preserve">
          <source>For convenience, the Item &lt;a href=&quot;qml-qtquick-item#data-prop&quot;&gt;data&lt;/a&gt; property is its &lt;a href=&quot;qtqml-syntax-objectattributes#default-properties&quot;&gt;default property&lt;/a&gt;. This means that any child item declared within an &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; object without being assigned to a specific property is automatically assigned to the &lt;a href=&quot;qml-qtquick-item#data-prop&quot;&gt;data&lt;/a&gt; property and becomes a child of the item as described above. So, the two code blocks below produce the same result, and you will almost always see the form shown below left, rather than the explicit &lt;code&gt;data&lt;/code&gt; assignment shown below right:</source>
          <target state="translated">편의상 품목 &lt;a href=&quot;qml-qtquick-item#data-prop&quot;&gt; data&lt;/a&gt; 속성은 &lt;a href=&quot;qtqml-syntax-objectattributes#default-properties&quot;&gt;기본 속성&lt;/a&gt; 입니다. 이는 특정 속성에 할당되지 않고 &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; 객체 내에서 선언 된 하위 항목 이 자동으로 &lt;a href=&quot;qml-qtquick-item#data-prop&quot;&gt;데이터&lt;/a&gt; 속성에 할당되고 위에서 설명한대로 항목의 하위 항목이됨을 의미합니다 . 따라서 아래의 두 코드 블록은 동일한 결과를 생성하며 명시 적 &lt;code&gt;data&lt;/code&gt; 아닌 왼쪽 아래의 양식을 거의 항상 볼 수 있습니다 오른쪽 아래에 표시된 할당이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="5f6fc4a8cf29f6e64a19172a289c0d00c1fdea6f" translate="yes" xml:space="preserve">
          <source>For convenience, the accept flag can also be set with &lt;a href=&quot;qevent#accept&quot;&gt;accept&lt;/a&gt;(), and cleared with &lt;a href=&quot;qevent#ignore&quot;&gt;ignore&lt;/a&gt;().</source>
          <target state="translated">편의상 accept 플래그는 &lt;a href=&quot;qevent#accept&quot;&gt;accept&lt;/a&gt; () 로 설정 하고 &lt;a href=&quot;qevent#ignore&quot;&gt;ignore&lt;/a&gt; ()로 지울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04058913fa46ef6d10bf4cb02703e635ed2fe972" translate="yes" xml:space="preserve">
          <source>For convenience, the accept flag can also be set with &lt;a href=&quot;qgestureevent#accept&quot;&gt;accept&lt;/a&gt;(gesture), and cleared with &lt;a href=&quot;qgestureevent#ignore&quot;&gt;ignore&lt;/a&gt;(gesture).</source>
          <target state="translated">편의를 위해 accept 플래그를 &lt;a href=&quot;qgestureevent#accept&quot;&gt;accept&lt;/a&gt; (제스처) 로 설정 하고 &lt;a href=&quot;qgestureevent#ignore&quot;&gt;ignore&lt;/a&gt; (제스처)로 지울 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="105dfcc7813336bee8adaf3aff1d1b03e5858cea" translate="yes" xml:space="preserve">
          <source>For convenience, the accept flag can also be set with &lt;a href=&quot;qgestureevent#accept&quot;&gt;accept&lt;/a&gt;(gestureType), and cleared with &lt;a href=&quot;qgestureevent#ignore&quot;&gt;ignore&lt;/a&gt;(gestureType).</source>
          <target state="translated">편의상 accept 플래그를 &lt;a href=&quot;qgestureevent#accept&quot;&gt;accept&lt;/a&gt; (gestureType) 로 설정 하고 &lt;a href=&quot;qgestureevent#ignore&quot;&gt;ignore&lt;/a&gt; (gestureType)로 지울 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fbdf2b2d875aa2616a4b15e3f4ec67596d9528c5" translate="yes" xml:space="preserve">
          <source>For convenience, when a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#coloranimation&quot;&gt;ColorAnimation&lt;/a&gt; is used in a &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, it will animate any &lt;code&gt;color&lt;/code&gt; properties that have been modified during the state change. If a &lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;property&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-propertyanimation#properties-prop&quot;&gt;properties&lt;/a&gt; are explicitly set for the animation, then those are used instead.</source>
          <target state="translated">편의상 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquick-animation-example.html#coloranimation&quot;&gt;ColorAnimation&lt;/a&gt; 이 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; 에서 사용 되면 상태 변경 중에 수정 된 모든 &lt;code&gt;color&lt;/code&gt; 속성에 애니메이션이 적용됩니다 . 경우 &lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;특성&lt;/a&gt; 이나 &lt;a href=&quot;qml-qtquick-propertyanimation#properties-prop&quot;&gt;속성이&lt;/a&gt; 명시 적으로 애니메이션 설정하고 그 대신에 사용된다.</target>
        </trans-unit>
        <trans-unit id="42ee5fe43a766d940ea64f9b78cb7f791560725b" translate="yes" xml:space="preserve">
          <source>For convenience, when a ColorAnimation is used in a &lt;a href=&quot;https://doc.qt.io/qt-5.15/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, it will animate any &lt;code&gt;color&lt;/code&gt; properties that have been modified during the state change. If a &lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;property&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-propertyanimation#properties-prop&quot;&gt;properties&lt;/a&gt; are explicitly set for the animation, then those are used instead.</source>
          <target state="translated">편의를 위해 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; 에서 ColorAnimation을 사용 하면 상태 변경 중에 수정 된 모든 &lt;code&gt;color&lt;/code&gt; 속성에 애니메이션을 적용합니다 . 경우 &lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;특성&lt;/a&gt; 이나 &lt;a href=&quot;qml-qtquick-propertyanimation#properties-prop&quot;&gt;속성이&lt;/a&gt; 명시 적으로 애니메이션 설정하고 그 대신에 사용된다.</target>
        </trans-unit>
        <trans-unit id="fb60b6a26e230f15e84a41309d49a297866537e3" translate="yes" xml:space="preserve">
          <source>For convenience, when a ColorAnimation is used in a &lt;a href=&quot;https://doc.qt.io/qt-6.0/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;, it will animate any &lt;code&gt;color&lt;/code&gt; properties that have been modified during the state change. If a &lt;a href=&quot;qml-qtquick-propertyanimation#property-prop&quot;&gt;property&lt;/a&gt; or &lt;a href=&quot;qml-qtquick-propertyanimation#properties-prop&quot;&gt;properties&lt;/a&gt; are explicitly set for the animation, then those are used instead.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1dbb281f5779fee12932da47ada5ca2e4ffc1e83" translate="yes" xml:space="preserve">
          <source>For convenience, you can also call &lt;a href=&quot;qgraphicsitem#scenePos&quot;&gt;scenePos&lt;/a&gt;() to determine the item's position in scene coordinates, regardless of its parent.</source>
          <target state="translated">편의상 &lt;a href=&quot;qgraphicsitem#scenePos&quot;&gt;scenePos&lt;/a&gt; ()를 호출 하여 부모에 관계없이 장면 좌표에서 항목의 위치를 ​​결정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="79198f5a38d24d378fe718dadfd36f3ef27c67e6" translate="yes" xml:space="preserve">
          <source>For convenience, you can use the &lt;a href=&quot;qevent#registerEventType&quot;&gt;registerEventType&lt;/a&gt;() function to register and reserve a custom event type for your application. Doing so will allow you to avoid accidentally re-using a custom event type already in use elsewhere in your application.</source>
          <target state="translated">편의상 &lt;a href=&quot;qevent#registerEventType&quot;&gt;registerEventType을&lt;/a&gt; 사용할 수 있습니다. () 함수를 하여 애플리케이션에 대한 사용자 정의 이벤트 유형을 등록하고 예약 할 수 있습니다. 그렇게하면 응용 프로그램의 다른 곳에서 이미 사용중인 사용자 지정 이벤트 유형을 실수로 다시 사용하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="4268bfc8b43325361a8406fa58517520b0023de5" translate="yes" xml:space="preserve">
          <source>For converting Unicode to local 8-bit encodings, a shortcut is available: the &lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;QString::toLocal8Bit&lt;/a&gt;() function returns such 8-bit data. Another useful shortcut is &lt;a href=&quot;qstring#toUtf8&quot;&gt;QString::toUtf8&lt;/a&gt;(), which returns text in the 8-bit &lt;a href=&quot;http://www.ietf.org/rfc/rfc2279.txt&quot;&gt;UTF-8&lt;/a&gt; encoding: this perfectly preserves Unicode information while looking like plain ASCII if the text is wholly ASCII.</source>
          <target state="translated">유니 코드를 로컬 8 비트 인코딩으로 변환하는 경우 바로 가기를 사용할 수 있습니다. &lt;a href=&quot;qstring#toLocal8Bit&quot;&gt;QString :: toLocal8Bit&lt;/a&gt; () 함수는 이러한 8 비트 데이터를 반환합니다. 또 다른 유용한 지름길은&lt;a href=&quot;qstring#toUtf8&quot;&gt; QString :: toUtf8&lt;/a&gt; ()이며, 8 비트 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2279.txt&quot;&gt;UTF-8&lt;/a&gt; 인코딩으로 텍스트를 반환합니다 . 이는 텍스트가 전체 ASCII 인 경우 일반 ASCII처럼 보이면서 유니 코드 정보를 완벽하게 유지합니다.</target>
        </trans-unit>
        <trans-unit id="0cf1fe396a5c814a7e9e2b908b8ca153c0fcb122" translate="yes" xml:space="preserve">
          <source>For converting the other way, there are the &lt;a href=&quot;qstring#fromUtf8&quot;&gt;QString::fromUtf8&lt;/a&gt;() and &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;QString::fromLocal8Bit&lt;/a&gt;() convenience functions, or the general code, demonstrated by this conversion from ISO 8859-5 Cyrillic to Unicode conversion:</source>
          <target state="translated">다른 방법으로 변환하기 위해 &lt;a href=&quot;qstring#fromUtf8&quot;&gt; QString :: fromUtf8&lt;/a&gt; () 및 &lt;a href=&quot;qstring#fromLocal8Bit&quot;&gt;QString :: fromLocal8Bit&lt;/a&gt; () 편의 기능 또는 ISO 8859-5 키릴 어에서 유니 코드로의 변환에서 보여지는 일반 코드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="33e8e1499c9c0bcab669c1d635f44f6083d83afa" translate="yes" xml:space="preserve">
          <source>For core Vulkan commands prefer using the function wrappers retrievable from &lt;a href=&quot;qvulkaninstance#functions&quot;&gt;functions&lt;/a&gt;() and &lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;deviceFunctions&lt;/a&gt;() instead.</source>
          <target state="translated">핵심 VULKAN 명령을 사용하여 선호하는 기능 래퍼에서 검색 가능한 &lt;a href=&quot;qvulkaninstance#functions&quot;&gt;기능&lt;/a&gt; 대신 () 및 &lt;a href=&quot;qvulkaninstance#deviceFunctions&quot;&gt;deviceFunctions&lt;/a&gt; () 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="32f76953c0bd44f5dff3f82adc84672e4e5db995" translate="yes" xml:space="preserve">
          <source>For creating guarded pointers, you can construct or assign to them from a T* or from another guarded pointer of the same type. You can compare them with each other using operator==() and operator!=(), or test for &lt;code&gt;nullptr&lt;/code&gt; with &lt;a href=&quot;qpointer#isNull&quot;&gt;isNull&lt;/a&gt;(). You can dereference them using either the &lt;code&gt;*x&lt;/code&gt; or the &lt;code&gt;x-&amp;gt;member&lt;/code&gt; notation.</source>
          <target state="translated">보호 포인터를 만들려면 T * 또는 같은 유형의 다른 보호 포인터에서 구성하거나 할당 할 수 있습니다. operator == () 및 operator! = ()를 사용하여 서로 비교하거나 &lt;a href=&quot;qpointer#isNull&quot;&gt;isNull&lt;/a&gt; ()을 사용 하여 &lt;code&gt;nullptr&lt;/code&gt; 을 테스트 할 수 있습니다. &lt;code&gt;*x&lt;/code&gt; 를 사용하여 역 참조 할 수 있습니다. 또는 &lt;code&gt;x-&amp;gt;member&lt;/code&gt; 표기법을 .</target>
        </trans-unit>
        <trans-unit id="83dd1c945af9a0d9b0d76d3e5ef3265d45727f39" translate="yes" xml:space="preserve">
          <source>For creating or customizing graphical user interfaces, Qt Quick adds visual types, animation types, and other QML types in addition to the standard QML types from Qt QML. &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-using-qt-quick-designer.html&quot;&gt;Qt Quick Designer&lt;/a&gt; is integrated within Qt Creator and supports &lt;code&gt;QtQuick 2&lt;/code&gt; from Qt Creator version 2.7 and onwards.</source>
          <target state="translated">그래픽 사용자 인터페이스를 생성하거나 사용자 지정하기 위해 Qt Quick은 Qt QML의 표준 QML 유형 외에도 시각적 유형, 애니메이션 유형 및 기타 QML 유형을 추가합니다. &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-using-qt-quick-designer.html&quot;&gt;Qt Quick Designer&lt;/a&gt; 는 Qt Creator에 통합되어 있으며 Qt Creator 버전 2.7 이상에서 &lt;code&gt;QtQuick 2&lt;/code&gt; 를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="aa908320eeebaa1edfaf1e1a5247be585199395b" translate="yes" xml:space="preserve">
          <source>For creating or customizing graphical user interfaces, Qt Quick adds visual types, animation types, and other QML types in addition to the standard QML types from Qt QML. &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-using-qt-quick-designer.html#&quot;&gt;Qt Quick Designer&lt;/a&gt; is integrated within Qt Creator and supports &lt;code&gt;QtQuick 2&lt;/code&gt; from Qt Creator version 2.7 and onwards.</source>
          <target state="translated">그래픽 사용자 인터페이스를 생성하거나 사용자 정의하기 위해 Qt Quick은 Qt QML의 표준 QML 유형 외에 시각적 유형, 애니메이션 유형 및 기타 QML 유형을 추가합니다. &lt;a href=&quot;http://doc.qt.io/qtcreator/creator-using-qt-quick-designer.html#&quot;&gt;Qt 퀵 디자이너&lt;/a&gt; 는 Qt Creator에 통합되어 있으며 Qt Creator 버전 2.7 이상에서 &lt;code&gt;QtQuick 2&lt;/code&gt; 를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="2b887bea7f3ea39aba417c32e5b1b5cfb5981ba1" translate="yes" xml:space="preserve">
          <source>For custom actions this function has to be re-implemented. When using one of the default names, you can call this function in &lt;a href=&quot;qaccessibleactioninterface&quot;&gt;QAccessibleActionInterface&lt;/a&gt; to get the localized string.</source>
          <target state="translated">사용자 지정 작업의 경우이 기능을 다시 구현해야합니다. 기본 이름 중 하나를 사용하면이 함수를&lt;a href=&quot;qaccessibleactioninterface&quot;&gt; QAccessibleActionInterface&lt;/a&gt; 하여 현지화 된 문자열을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="93dc78dfd12def17281c10660cd57c34d3fef8d7" translate="yes" xml:space="preserve">
          <source>For custom shortcuts, human-readable strings such as &quot;Ctrl+X&quot; can be used, and these can be translated into the appropriate shortcuts for users of different languages. Translations are made in the &quot;&lt;a href=&quot;qshortcut&quot;&gt;QShortcut&lt;/a&gt;&quot; context.</source>
          <target state="translated">사용자 정의 바로 가기의 경우 &quot;Ctrl + X&quot;와 같이 사람이 읽을 수있는 문자열을 사용할 수 있으며 다른 언어의 사용자에게 적합한 바로 가기로 변환 할 수 있습니다. 번역은 &quot;&lt;a href=&quot;qshortcut&quot;&gt; QShortcut&lt;/a&gt; &quot;컨텍스트 .</target>
        </trans-unit>
        <trans-unit id="3614c02117c8d2eb258e7eb9ad58f27a661a070b" translate="yes" xml:space="preserve">
          <source>For custom types, &lt;a href=&quot;qhash#qhash&quot;&gt;QHash&lt;/a&gt; and &lt;a href=&quot;qmultihash&quot;&gt;QMultiHash&lt;/a&gt; rely on you providing a &lt;a href=&quot;qhash#qhash&quot;&gt;custom qHash() function&lt;/a&gt; in the same namespace. In Qt 4 and Qt 5, the return value and optional second argument of a &lt;code&gt;qHash&lt;/code&gt; function was of type &lt;code&gt;uint&lt;/code&gt;. In Qt 6, it is &lt;code&gt;size_t&lt;/code&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="f9de0dffe31e334134bcb4c87509a08fefbefa99" translate="yes" xml:space="preserve">
          <source>For database drivers, image formats, text codecs, and most other plugin types, no explicit object creation is required. Qt will find and create them as required. Styles are an exception, since you might want to set a style explicitly in code. To apply a style, use code like this:</source>
          <target state="translated">데이터베이스 드라이버, 이미지 형식, 텍스트 코덱 및 대부분의 다른 플러그인 유형의 경우 명시 적 객체 생성이 필요하지 않습니다. Qt는 필요에 따라 찾아서 생성합니다. 코드에서 스타일을 명시 적으로 설정하려는 경우 스타일이 예외입니다. 스타일을 적용하려면 다음과 같은 코드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="82d705da6beffb7494dae259071738a05ad97b89" translate="yes" xml:space="preserve">
          <source>For debugging purposes only, a single process mode can be enabled using the command-line argument &lt;code&gt;--single-process&lt;/code&gt;. See &lt;a href=&quot;qtwebengine-debugging#using-command-line-arguments&quot;&gt;Using Command-Line Arguments&lt;/a&gt; and &lt;a href=&quot;qtwebengine-debugging&quot;&gt;Qt WebEngine Debugging and Profiling&lt;/a&gt;.</source>
          <target state="translated">디버깅 목적으로 만 명령 줄 인수 &lt;code&gt;--single-process&lt;/code&gt; 를 사용하여 단일 프로세스 모드를 활성화 할 수 있습니다 . &lt;a href=&quot;qtwebengine-debugging#using-command-line-arguments&quot;&gt;명령 줄 인수&lt;/a&gt; 및 &lt;a href=&quot;qtwebengine-debugging&quot;&gt;Qt WebEngine 디버깅 및 프로파일 링 &lt;/a&gt;사용을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="050c34ebdfa9b8949d1bcb4916037e8322530f2b" translate="yes" xml:space="preserve">
          <source>For debugging purposes only, a single process mode can be enabled using the command-line argument &lt;code&gt;--single-process&lt;/code&gt;. See &lt;a href=&quot;qtwebengine-debugging#using-command-line-arguments&quot;&gt;Using Command-Line Arguments&lt;/a&gt; and &lt;a href=&quot;qtwebengine-debugging#&quot;&gt;Qt WebEngine Debugging and Profiling&lt;/a&gt;.</source>
          <target state="translated">디버깅 목적으로 만 명령 줄 인수 &lt;code&gt;--single-process&lt;/code&gt; 를 사용하여 단일 프로세스 모드를 활성화 할 수 있습니다 . &lt;a href=&quot;qtwebengine-debugging#using-command-line-arguments&quot;&gt;명령 행 인수&lt;/a&gt; 및 &lt;a href=&quot;qtwebengine-debugging#&quot;&gt;Qt WebEngine 디버깅 및 프로파일 링 &lt;/a&gt;사용을 참조하십시오. .</target>
        </trans-unit>
        <trans-unit id="f8cb10784225f66badcde5b54869ed05dfa4aedb" translate="yes" xml:space="preserve">
          <source>For deeply nested statecharts, you can add such &quot;fallback&quot; transitions at the level of granularity that's most appropriate.</source>
          <target state="translated">깊이 중첩 된 상태 차트의 경우 가장 적합한 세부 수준에서 이러한 &quot;대체&quot;전환을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e09d063e689eba284bb045c119b295e2b686bb5" translate="yes" xml:space="preserve">
          <source>For detailed description of how the scene graph renderer for OpenGL works, see &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer#&quot;&gt;Qt Quick Scene Graph OpenGL Renderer&lt;/a&gt;.</source>
          <target state="translated">OpenGL의 장면 그래프 렌더러 작동 방식에 대한 자세한 설명은 &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer#&quot;&gt;Qt 빠른 장면 그래프 OpenGL 렌더러를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6a706e69ac7181ff352ab1f232d9dd2047cbcd1f" translate="yes" xml:space="preserve">
          <source>For detailed description of how the scene graph renderer works, see &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer&quot;&gt;Qt Quick Scene Graph Default Renderer&lt;/a&gt;.</source>
          <target state="translated">장면 그래프 렌더러의 작동 방식에 대한 자세한 설명은 &lt;a href=&quot;qtquick-visualcanvas-scenegraph-renderer&quot;&gt;Qt Quick Scene Graph Default Renderer를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="76dbe61c79d21a906d3f5e4df51677144c4929e6" translate="yes" xml:space="preserve">
          <source>For detailed information about the error, use &lt;a href=&quot;qjsvalue#toString&quot;&gt;QJSValue::toString&lt;/a&gt;() to obtain an error message, and use &lt;a href=&quot;qjsvalue#property&quot;&gt;QJSValue::property&lt;/a&gt;() to query the properties of the &lt;code&gt;Error&lt;/code&gt; object. The following properties are available:</source>
          <target state="translated">오류에 대한 자세한 정보는 &lt;a href=&quot;qjsvalue#toString&quot;&gt;QJSValue :: toString&lt;/a&gt; ()을 사용하여 오류 메시지를 얻고 &lt;a href=&quot;qjsvalue#property&quot;&gt;QJSValue :: property&lt;/a&gt; ()를 사용하여 &lt;code&gt;Error&lt;/code&gt; 오브젝트 . 다음과 같은 속성을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="72010983913f5682eb0f0fdbcae810c3ae066852" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qaccelerometerreading&quot;&gt;QAccelerometerReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;qaccelerometerreading&quot;&gt;QAccelerometerReading을&lt;/a&gt; 참조하십시오 . .</target>
        </trans-unit>
        <trans-unit id="3d7a5be410eb49d07b043e0be8ba460ff1fa4734" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qaltimeterreading&quot;&gt;QAltimeterReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;qaltimeterreading&quot;&gt;QAltimeterReading을&lt;/a&gt; 참조하십시오 . .</target>
        </trans-unit>
        <trans-unit id="f0ff80a17af27fad4aa171a67487dd2aafdd5abc" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qambientlightreading&quot;&gt;QAmbientLightReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;qambientlightreading&quot;&gt;QAmbientLightReading을&lt;/a&gt; 참조하십시오 . .</target>
        </trans-unit>
        <trans-unit id="828b97c407c352e5ddeb3db1ee9b12f0a97c940b" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qambienttemperaturereading&quot;&gt;QAmbientTemperatureReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;qambienttemperaturereading&quot;&gt;QAmbientTemperatureReading을&lt;/a&gt; 참조하십시오 . .</target>
        </trans-unit>
        <trans-unit id="a6814aaa975a225a272b351c1ee70ddd35740cab" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qcompassreading&quot;&gt;QCompassReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;qcompassreading&quot;&gt;QCompassReading을&lt;/a&gt; 참조하십시오 . .</target>
        </trans-unit>
        <trans-unit id="049d6160dc197b79b5867344f5f912cc405ecb7d" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qdistancereading&quot;&gt;QDistanceReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;qdistancereading&quot;&gt;QDistanceReading을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e0e235958635b201f77ab86b7c84b88a9f2d1dd9" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qgyroscopereading&quot;&gt;QGyroscopeReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;qgyroscopereading&quot;&gt;QGyroscopeReading을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="471d228b4186c42d41478076ca0073fa365c0cc7" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qholsterreading&quot;&gt;QHolsterReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방법에 대한 자세한 내용은 &lt;a href=&quot;qholsterreading&quot;&gt;QHolsterReading을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="deb7217516d61eea6dcf25b55cff2d0b14f3432a" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qhumidityreading&quot;&gt;QHumidityReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;qhumidityreading&quot;&gt;QHumidityReading을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c2db70e9fb961b7632c91344b4f8556e344e598a" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qirproximityreading&quot;&gt;QIRProximityReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;qirproximityreading&quot;&gt;QIRProximityReading을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc67112d3b53d2b7c09d87656ddf268003f72bfd" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qlidreading&quot;&gt;QLidReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;qlidreading&quot;&gt;QLidReading을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4b44210f6fc18c8cacf7d456898f5b75fe44a38d" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qlightreading&quot;&gt;QLightReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;qlightreading&quot;&gt;QLightReading을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1051af424f73d471510db7b51a97cb2965ae2267" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qmagnetometerreading&quot;&gt;QMagnetometerReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;qmagnetometerreading&quot;&gt;QMagnetometerReading을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c7d2f682fb5cd26c9fd5b2e1bc1779586f7774c0" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qorientationreading&quot;&gt;QOrientationReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방법에 대한 자세한 내용은 &lt;a href=&quot;qorientationreading&quot;&gt;QOrientationReading을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f514eb23c8cce89b3bcc281c248f97c1d8074a2" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qpressurereading&quot;&gt;QPressureReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;qpressurereading&quot;&gt;QPressureReading을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="640b6e44bc4c76b068c97c06ca1012483684fe37" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qproximityreading&quot;&gt;QProximityReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방법에 대한 자세한 내용은 &lt;a href=&quot;qproximityreading&quot;&gt;QProximityReading을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="2b3b3b1f413de43f490fa47dd9c0c425fc1c05ac" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qrotationreading&quot;&gt;QRotationReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방식에 대한 세부 사항은 &lt;a href=&quot;qrotationreading&quot;&gt;QRotationReading을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca34ddc7d37f6c5c15880ea7a35fdedba5b03bd9" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qtapreading&quot;&gt;QTapReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;qtapreading&quot;&gt;QTapReading을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6ee5926805c599948fb38a7821167d8110f0470b" translate="yes" xml:space="preserve">
          <source>For details about how the sensor works, see &lt;a href=&quot;qtiltreading&quot;&gt;QTiltReading&lt;/a&gt;.</source>
          <target state="translated">센서 작동 방식에 대한 자세한 내용은 &lt;a href=&quot;qtiltreading&quot;&gt;QTiltReading을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6891b0fa71cf3d70e125a8c70d687eedb952414e" translate="yes" xml:space="preserve">
          <source>For details about the Unicode script property values see &lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt;Unicode Standard Annex #24&lt;/a&gt;.</source>
          <target state="translated">유니 코드 스크립트 속성 값에 대한 자세한 내용은 유니 &lt;a href=&quot;http://www.unicode.org/reports/tr24/&quot;&gt;코드 표준 부록 # 24를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c68cd088c3fa816c2530948227e1048a22aab88b" translate="yes" xml:space="preserve">
          <source>For details on how to use this property to interface between C++ and QML see &quot;&lt;a href=&quot;location-cpp-qml#category-qplacecategory&quot;&gt;Interfaces between C++ and QML Code&lt;/a&gt;&quot;.</source>
          <target state="translated">이 속성을 사용하여 C ++과 QML 간 인터페이스에 대한 자세한 내용은 &quot; &lt;a href=&quot;location-cpp-qml#category-qplacecategory&quot;&gt;C ++와 QML 코드 간 인터페이스&lt;/a&gt; &quot;를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5b2832ae3df8054958971b4e68eff72e6e1f1ff0" translate="yes" xml:space="preserve">
          <source>For details on how to use this property to interface between C++ and QML see &quot;&lt;a href=&quot;location-cpp-qml#contactdetail-qdeclarativecontactdetail&quot;&gt;Interfaces between C++ and QML Code&lt;/a&gt;&quot;.</source>
          <target state="translated">이 속성을 사용하여 C ++과 QML 간 인터페이스에 대한 자세한 내용은 &quot; &lt;a href=&quot;location-cpp-qml#contactdetail-qdeclarativecontactdetail&quot;&gt;C ++와 QML 코드 간 인터페이스&lt;/a&gt; &quot;를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a8b24fa2ac220e21f117615475e9cb26c3a5968" translate="yes" xml:space="preserve">
          <source>For details on how to use this property to interface between C++ and QML see &quot;&lt;a href=&quot;location-cpp-qml#icon-qplaceicon&quot;&gt;Interfaces between C++ and QML Code&lt;/a&gt;&quot;.</source>
          <target state="translated">이 속성을 사용하여 C ++과 QML 간 인터페이스에 대한 자세한 내용은 &quot; &lt;a href=&quot;location-cpp-qml#icon-qplaceicon&quot;&gt;C ++와 QML 코드 간 인터페이스&lt;/a&gt; &quot;를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="68f1702e6fbdca2d36766272d73361c07846de1c" translate="yes" xml:space="preserve">
          <source>For details on how to use this property to interface between C++ and QML see &quot;&lt;a href=&quot;location-cpp-qml#place-qplace&quot;&gt;Interfaces between C++ and QML Code&lt;/a&gt;&quot;.</source>
          <target state="translated">이 속성을 사용하여 C ++과 QML 간 인터페이스에 대한 자세한 내용은 &quot; &lt;a href=&quot;location-cpp-qml#place-qplace&quot;&gt;C ++와 QML 코드 간 인터페이스&lt;/a&gt; &quot;를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8b97a0e0f66d25104cbec7971957cbf2fabf0120" translate="yes" xml:space="preserve">
          <source>For details on how to use this property to interface between C++ and QML see &quot;&lt;a href=&quot;location-cpp-qml#placeattribute-qplaceattribute&quot;&gt;Interfaces between C++ and QML Code&lt;/a&gt;&quot;.</source>
          <target state="translated">이 속성을 사용하여 C ++과 QML 간 인터페이스에 대한 자세한 내용은 &quot; &lt;a href=&quot;location-cpp-qml#placeattribute-qplaceattribute&quot;&gt;C ++와 QML 코드 간 인터페이스&lt;/a&gt; &quot;를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cb99020dd352cb2159b89989cc90e420545bd849" translate="yes" xml:space="preserve">
          <source>For details on how to use this property to interface between C++ and QML see &quot;&lt;a href=&quot;location-cpp-qml#ratings-qplaceratings&quot;&gt;Interfaces between C++ and QML Code&lt;/a&gt;&quot;.</source>
          <target state="translated">이 속성을 사용하여 C ++과 QML 간 인터페이스에 대한 자세한 내용은 &quot; &lt;a href=&quot;location-cpp-qml#ratings-qplaceratings&quot;&gt;C ++와 QML 코드 간 인터페이스&lt;/a&gt; &quot;를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e05bc036d28552906caf459dac55f4bbd16d89e5" translate="yes" xml:space="preserve">
          <source>For details on how to use this property to interface between C++ and QML see &quot;&lt;a href=&quot;location-cpp-qml#supplier-qplacesupplier&quot;&gt;Interfaces between C++ and QML Code&lt;/a&gt;&quot;.</source>
          <target state="translated">이 속성을 사용하여 C ++과 QML 간 인터페이스에 대한 자세한 내용은 &quot; &lt;a href=&quot;location-cpp-qml#supplier-qplacesupplier&quot;&gt;C ++와 QML 코드 간 인터페이스&lt;/a&gt; &quot;를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c3909c37f7900649a67445bca4bcf6302cad7a8b" translate="yes" xml:space="preserve">
          <source>For details on how to use this property to interface between C++ and QML see &quot;&lt;a href=&quot;location-cpp-qml#user-qplaceuser&quot;&gt;Interfaces between C++ and QML Code&lt;/a&gt;&quot;.</source>
          <target state="translated">이 속성을 사용하여 C ++과 QML 간 인터페이스에 대한 자세한 내용은 &quot; &lt;a href=&quot;location-cpp-qml#user-qplaceuser&quot;&gt;C ++와 QML 코드 간 인터페이스&lt;/a&gt; &quot;를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c25d173f6b3f1809510cd2cbc8ae2bbbdda61a52" translate="yes" xml:space="preserve">
          <source>For details on how to use this property to interface between C++ and QML see &quot;&lt;a href=&quot;positioning-cpp-qml#address-qgeoaddress&quot;&gt;Interfaces between C++ and QML Code&lt;/a&gt;&quot;.</source>
          <target state="translated">이 속성을 사용하여 C ++과 QML 간 인터페이스에 대한 자세한 내용은 &quot; &lt;a href=&quot;positioning-cpp-qml#address-qgeoaddress&quot;&gt;C ++와 QML 코드 간 인터페이스&lt;/a&gt; &quot;를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a5e37db17fc71badb914fa7b7855daa7bac8bb65" translate="yes" xml:space="preserve">
          <source>For details on how to use this property to interface between C++ and QML see &quot;&lt;a href=&quot;positioning-cpp-qml#location-qgeolocation&quot;&gt;Interfaces between C++ and QML Code&lt;/a&gt;&quot;.</source>
          <target state="translated">이 속성을 사용하여 C ++과 QML 간 인터페이스에 대한 자세한 내용은 &quot; &lt;a href=&quot;positioning-cpp-qml#location-qgeolocation&quot;&gt;C ++와 QML 코드 간 인터페이스&lt;/a&gt; &quot;를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b86c864a1f1e32c92a26a9c46d30089c5998c1b9" translate="yes" xml:space="preserve">
          <source>For details on macOS-specific translation, refer to the Qt for macOS issues document &lt;a href=&quot;macos-issues#translating-the-application-menu-and-native-dialogs&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">macOS 관련 번역에 대한 자세한 내용은 macOS 문제에 대한 Qt 문서를 &lt;a href=&quot;macos-issues#translating-the-application-menu-and-native-dialogs&quot;&gt;참조하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8f3a1b143e303eeff52e09c894935d1db280ac13" translate="yes" xml:space="preserve">
          <source>For details, refer to the &lt;a href=&quot;qquick3dgeometry&quot;&gt;QQuick3DGeometry&lt;/a&gt; and &lt;a href=&quot;qquick3dtexturedata&quot;&gt;QQuick3DTextureData&lt;/a&gt; documentation pages.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="7853c361ba5984ec38dd2e5a7dd1fdec64126786" translate="yes" xml:space="preserve">
          <source>For details, see &lt;a href=&quot;http://www.w3.org/TR/xslt20/#conformance&quot;&gt;XSL Transformations (XSLT) Version 2.0, 21 Conformance&lt;/a&gt;.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;http://www.w3.org/TR/xslt20/#conformance&quot;&gt;XSLT (XSL Transformations) 버전 2.0, 21 적합성을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f5f62a72a59f4f4feeadba7aad907ed8d82edd0f" translate="yes" xml:space="preserve">
          <source>For determining the specificity of a rule, Qt Style Sheets follow the &lt;a href=&quot;http://www.w3.org/TR/REC-CSS2/cascade.html#specificity&quot;&gt;CSS2 Specification&lt;/a&gt;:</source>
          <target state="translated">규칙의 특이성을 결정하기 위해 Qt 스타일 시트는 &lt;a href=&quot;http://www.w3.org/TR/REC-CSS2/cascade.html#specificity&quot;&gt;CSS2 사양을&lt;/a&gt; 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="6040684a76d0ec387da8f3e0901f346571a59739" translate="yes" xml:space="preserve">
          <source>For devices with small displays, &lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt; can be set to &lt;a href=&quot;qformlayout#RowWrapPolicy-enum&quot;&gt;wrap long rows&lt;/a&gt;, or even to &lt;a href=&quot;qformlayout#RowWrapPolicy-enum&quot;&gt;wrap all rows&lt;/a&gt;.</source>
          <target state="translated">디스플레이가 작은 장치의 경우 &lt;a href=&quot;qformlayout#RowWrapPolicy-enum&quot;&gt;긴 행을 줄 바꿈&lt;/a&gt; 하거나 &lt;a href=&quot;qformlayout#RowWrapPolicy-enum&quot;&gt;모든 행&lt;/a&gt; 을 줄 바꿈 하도록 &lt;a href=&quot;qformlayout&quot;&gt;QFormLayout&lt;/a&gt; 을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5cd5e4271e7831ed9a7e7b8557e5a9281282c0d0" translate="yes" xml:space="preserve">
          <source>For devices with small displays, QFormLayout can be set to &lt;a href=&quot;qformlayout#RowWrapPolicy-enum&quot;&gt;wrap long rows&lt;/a&gt;, or even to &lt;a href=&quot;qformlayout#RowWrapPolicy-enum&quot;&gt;wrap all rows&lt;/a&gt;.</source>
          <target state="translated">작은 디스플레이가있는 기기의 경우 QFormLayout을 설정하여 &lt;a href=&quot;qformlayout#RowWrapPolicy-enum&quot;&gt;긴 행&lt;/a&gt; 을 &lt;a href=&quot;qformlayout#RowWrapPolicy-enum&quot;&gt;래핑&lt;/a&gt; 하거나 모든 행 을 래핑 하도록 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="57b04778fbc320e8662a7b4bfc05a7f46d4efa89" translate="yes" xml:space="preserve">
          <source>For document nodes, the base URI and the document URI are the same.</source>
          <target state="translated">문서 노드의 경우 기본 URI와 문서 URI가 동일합니다.</target>
        </trans-unit>
        <trans-unit id="4848d49b4c189f89228eeca756600d54c7ad3767" translate="yes" xml:space="preserve">
          <source>For document nodes, the concatenation of all text nodes in the document.</source>
          <target state="translated">문서 노드의 경우 문서의 모든 텍스트 노드를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="cafb2702534fcdc848b1ac4cc24e197fef800141" translate="yes" xml:space="preserve">
          <source>For documentation on how to use these interfaces, see the &lt;a href=&quot;native-interfaces&quot;&gt;Native Interfaces&lt;/a&gt; overview.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="368c29d974c16be01c9006a26de2dfcef2905d05" translate="yes" xml:space="preserve">
          <source>For documenting command-line instructions, shell scripts, or any content that is not in a Qt language recognized by QDoc, use &lt;a href=&quot;#badcode-command&quot;&gt;\badcode&lt;/a&gt; instead.</source>
          <target state="translated">명령 행 지시 사항, 쉘 스크립트 또는 QDoc이 인식하는 Qt 언어가 아닌 컨텐츠를 문서화하려면 &lt;a href=&quot;#badcode-command&quot;&gt;\ badcode를&lt;/a&gt; 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="0bce7c41f53a5656e6a7aab3fe8866e88e74ec70" translate="yes" xml:space="preserve">
          <source>For documenting command-line instructions, shell scripts, or any content that is not in a Qt language recognized by QDoc, use &lt;a href=&quot;06-qdoc-commands-includecodeinline#badcode-command&quot;&gt;\badcode&lt;/a&gt; instead.</source>
          <target state="translated">명령 줄 지침, 셸 스크립트 또는 QDoc에서 인식하는 Qt 언어로되어 있지 않은 콘텐츠를 &lt;a href=&quot;06-qdoc-commands-includecodeinline#badcode-command&quot;&gt;문서화하려면&lt;/a&gt; 대신 \ badcode를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="817dcdde54c34715879bdbc3588494896ec7836a" translate="yes" xml:space="preserve">
          <source>For documents with some textual content, the root frame usually contains a sequence of blocks and other elements.</source>
          <target state="translated">텍스트 내용이있는 문서의 경우 루트 프레임에는 일반적으로 일련의 블록과 기타 요소가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="800bdda112ad76b7264d2d737c2a22fadf062466" translate="yes" xml:space="preserve">
          <source>For drawing rectangles with &quot;straight&quot; edges (same latitude across one edge, same latitude across the other), the &lt;a href=&quot;qml-qtlocation-maprectangle&quot;&gt;MapRectangle&lt;/a&gt; type provides a simpler, two-point API.</source>
          <target state="translated">&quot;직선&quot;모서리 (한 모서리와 동일한 위도, 다른 위도와 같은 위도)가있는 사각형을 그리기 위해 &lt;a href=&quot;qml-qtlocation-maprectangle&quot;&gt;MapRectangle&lt;/a&gt; 유형은 더 간단한 2 점 API를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="056f41c22eec28103bfdb78f511462cda0e6e549" translate="yes" xml:space="preserve">
          <source>For each QDoc comment it finds, it searches the master tree for the item where the documentation belongs. Then it interprets the QDoc commands in the comment and stores the interpreted commands and the comment text in the tree node for the item.</source>
          <target state="translated">찾은 각 QDoc 주석에 대해 마스터 트리에서 문서가 속한 항목을 검색합니다. 그런 다음 주석의 QDoc 명령을 해석하고 해석 된 명령과 주석 텍스트를 항목의 트리 노드에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="a5796561527c31fbe5b4d6abe4df212bc2312dd5" translate="yes" xml:space="preserve">
          <source>For each QDoc comment it finds, it searches the master tree for the item where the documentation belongs. Then it interprets the qdoc commands in the comment and stores the interpreted commands and the comment text in the tree node for the item.</source>
          <target state="translated">찾은 각 QDoc 주석에 대해 문서가 속하는 항목을 마스터 트리에서 검색합니다. 그런 다음 주석에서 qdoc 명령을 해석하고 해석 된 명령과 주석 텍스트를 항목의 트리 노드에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="0556acedac32d0e8d657e569a111d79f47595ed6" translate="yes" xml:space="preserve">
          <source>For each argument, a call to the &lt;a href=&quot;qdbusxml2cpp&quot;&gt;Qt D-Bus XML compiler (qdbusxml2cpp)&lt;/a&gt; in interface (proxy) mode is set up.</source>
          <target state="translated">각 인수에 대해 인터페이스 (프록시) 모드에서 &lt;a href=&quot;qdbusxml2cpp&quot;&gt;Qt D-Bus XML 컴파일러 (qdbusxml2cpp)&lt;/a&gt; 에 대한 호출 이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="db4efe8e20d141917f4f7a5cb3b23ce4c66ca334" translate="yes" xml:space="preserve">
          <source>For each argument, a call to the &lt;a href=&quot;qdbusxml2cpp#&quot;&gt;Qt D-Bus XML compiler (qdbusxml2cpp)&lt;/a&gt; in interface (proxy) mode is set up.</source>
          <target state="translated">각 인수에 대해 인터페이스 (프록시) 모드에서 &lt;a href=&quot;qdbusxml2cpp#&quot;&gt;Qt D-Bus XML 컴파일러 (qdbusxml2cpp)&lt;/a&gt; 에 대한 호출 이 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="5e6b3cc0d1916ffeb0f1b900ce13e5952a02badc" translate="yes" xml:space="preserve">
          <source>For each captured substring it is possible to query its starting and ending offsets in the subject string by calling the &lt;a href=&quot;qregularexpressionmatch#capturedStart&quot;&gt;capturedStart&lt;/a&gt;() and the &lt;a href=&quot;qregularexpressionmatch#capturedEnd&quot;&gt;capturedEnd&lt;/a&gt;() function, respectively. The length of each captured substring is available using the &lt;a href=&quot;qregularexpressionmatch#capturedLength&quot;&gt;capturedLength&lt;/a&gt;() function.</source>
          <target state="translated">각각의 캡처 된 서브 스트링에 대해 , 각각 &lt;a href=&quot;qregularexpressionmatch#capturedStart&quot;&gt;captureStart&lt;/a&gt; () 및 &lt;a href=&quot;qregularexpressionmatch#capturedEnd&quot;&gt;capturedEnd&lt;/a&gt; () 함수 를 호출하여 주제 문자열에서 시작 및 종료 오프셋을 조회 할 수 있습니다 . 캡처 된 각 하위 문자열의 길이는 &lt;a href=&quot;qregularexpressionmatch#capturedLength&quot;&gt;capturedLength&lt;/a&gt; () 함수를 사용하여 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7ffb21958498f15d1b69c50155f695d1255ffd11" translate="yes" xml:space="preserve">
          <source>For each character, you can get its &lt;a href=&quot;qfontmetrics#horizontalAdvance&quot;&gt;horizontalAdvance&lt;/a&gt;(), &lt;a href=&quot;qfontmetrics#leftBearing&quot;&gt;leftBearing&lt;/a&gt;(), and &lt;a href=&quot;qfontmetrics#rightBearing&quot;&gt;rightBearing&lt;/a&gt;(), and find out whether it is in the font using &lt;a href=&quot;qfontmetrics#inFont&quot;&gt;inFont&lt;/a&gt;(). You can also treat the character as a string, and use the string functions on it.</source>
          <target state="translated">각 문자에 대해 &lt;a href=&quot;qfontmetrics#horizontalAdvance&quot;&gt;horizontalAdvance&lt;/a&gt; (), &lt;a href=&quot;qfontmetrics#leftBearing&quot;&gt;leftBearing&lt;/a&gt; () 및 &lt;a href=&quot;qfontmetrics#rightBearing&quot;&gt;rightBearing&lt;/a&gt; ()을 &lt;a href=&quot;qfontmetrics#inFont&quot;&gt;가져 와서 inFont&lt;/a&gt; ()를 사용하여 글꼴에 있는지 확인할 수 있습니다. 문자를 문자열로 취급하고 문자열 함수를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="acb108fcf5b4b70c6595f304794192a252b2e1f5" translate="yes" xml:space="preserve">
          <source>For each character, you can get its &lt;a href=&quot;qfontmetricsf#horizontalAdvance&quot;&gt;horizontalAdvance&lt;/a&gt;(), &lt;a href=&quot;qfontmetricsf#leftBearing&quot;&gt;leftBearing&lt;/a&gt;(), and &lt;a href=&quot;qfontmetricsf#rightBearing&quot;&gt;rightBearing&lt;/a&gt;(), and find out whether it is in the font using &lt;a href=&quot;qfontmetricsf#inFont&quot;&gt;inFont&lt;/a&gt;(). You can also treat the character as a string, and use the string functions on it.</source>
          <target state="translated">각 문자에 대해 &lt;a href=&quot;qfontmetricsf#horizontalAdvance&quot;&gt;horizontalAdvance&lt;/a&gt; (), &lt;a href=&quot;qfontmetricsf#leftBearing&quot;&gt;leftBearing&lt;/a&gt; () 및 &lt;a href=&quot;qfontmetricsf#rightBearing&quot;&gt;rightBearing&lt;/a&gt; ()을 &lt;a href=&quot;qfontmetricsf#inFont&quot;&gt;가져 와서 inFont&lt;/a&gt; ()를 사용하여 글꼴에 있는지 확인할 수 있습니다. 문자를 문자열로 취급하고 문자열 함수를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b774150b79875927833c4a5cdc7486022616e12" translate="yes" xml:space="preserve">
          <source>For each character, you can get its width(), &lt;a href=&quot;qfontmetrics#leftBearing&quot;&gt;leftBearing&lt;/a&gt;() and &lt;a href=&quot;qfontmetrics#rightBearing&quot;&gt;rightBearing&lt;/a&gt;() and find out whether it is in the font using &lt;a href=&quot;qfontmetrics#inFont&quot;&gt;inFont&lt;/a&gt;(). You can also treat the character as a string, and use the string functions on it.</source>
          <target state="translated">각 문자마다 width (), &lt;a href=&quot;qfontmetrics#leftBearing&quot;&gt;leftBearing&lt;/a&gt; () 및 &lt;a href=&quot;qfontmetrics#rightBearing&quot;&gt;rightBearing&lt;/a&gt; ()을 &lt;a href=&quot;qfontmetrics#inFont&quot;&gt;가져 와서 inFont&lt;/a&gt; ()를 사용하여 글꼴에 있는지 확인할 수 있습니다. 문자를 문자열로 취급하고 문자열 함수를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa3bdcf5ece783d1cd3305b07dee39bb7f65b72b" translate="yes" xml:space="preserve">
          <source>For each character, you can get its width(), &lt;a href=&quot;qfontmetricsf#leftBearing&quot;&gt;leftBearing&lt;/a&gt;() and &lt;a href=&quot;qfontmetricsf#rightBearing&quot;&gt;rightBearing&lt;/a&gt;() and find out whether it is in the font using &lt;a href=&quot;qfontmetricsf#inFont&quot;&gt;inFont&lt;/a&gt;(). You can also treat the character as a string, and use the string functions on it.</source>
          <target state="translated">각 문자마다 width (), &lt;a href=&quot;qfontmetricsf#leftBearing&quot;&gt;leftBearing&lt;/a&gt; () 및 &lt;a href=&quot;qfontmetricsf#rightBearing&quot;&gt;rightBearing&lt;/a&gt; ()을 &lt;a href=&quot;qfontmetricsf#inFont&quot;&gt;가져 와서 inFont&lt;/a&gt; ()를 사용하여 글꼴에 있는지 확인할 수 있습니다. 문자를 문자열로 취급하고 문자열 함수를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb7ec123cbd70ebf6342250e43bd84e6928b4dc4" translate="yes" xml:space="preserve">
          <source>For each container class, there are two Java-style iterator data types: one that provides read-only access and one that provides read-write access.</source>
          <target state="translated">각 컨테이너 클래스마다 두 가지 Java 스타일 반복자 데이터 유형이 있습니다. 하나는 읽기 전용 액세스를 제공하고 다른 하나는 읽기 / 쓰기 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="607912deb8d1e31799396db6c5313f7ecca0cecf" translate="yes" xml:space="preserve">
          <source>For each container class, there are two STL-style iterator types: one that provides read-only access and one that provides read-write access. Read-only iterators should be used wherever possible because they are faster than read-write iterators.</source>
          <target state="translated">각 컨테이너 클래스마다 두 가지 STL 스타일 반복자 유형이 있습니다. 하나는 읽기 전용 액세스를 제공하고 다른 하나는 읽기 / 쓰기 액세스를 제공합니다. 읽기 전용 이터레이터는 읽기 / 쓰기 이터레이터보다 빠르기 때문에 가능하면 어디에서나 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="7cddfd70b22033699625010f4fbc2cf35bb08342" translate="yes" xml:space="preserve">
          <source>For each of</source>
          <target state="translated">각각</target>
        </trans-unit>
        <trans-unit id="f2502146b155611028f007ae97873e74db8a0094" translate="yes" xml:space="preserve">
          <source>For each of the following, dir() returns the &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt;&lt;code&gt;&quot;.&quot;&lt;/code&gt;.</source>
          <target state="translated">다음 각각에 대해 dir ()은 &lt;a href=&quot;qdir&quot;&gt;QDir &lt;/a&gt; &lt;code&gt;&quot;.&quot;&lt;/code&gt; 을 반환합니다 . .</target>
        </trans-unit>
        <trans-unit id="da6812588f26ae08b0331647f693a635fb2f53ae" translate="yes" xml:space="preserve">
          <source>For each of the following, dir() returns the &lt;a href=&quot;qdir&quot;&gt;QDir&lt;/a&gt;&lt;code&gt;&quot;~/examples/191697&quot;&lt;/code&gt;.</source>
          <target state="translated">다음 각각에 대해 dir ()은 &lt;a href=&quot;qdir&quot;&gt;QDir &lt;/a&gt; &lt;code&gt;&quot;~/examples/191697&quot;&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d4573f1b82490d4a3dd248dd764382a5386259af" translate="yes" xml:space="preserve">
          <source>For each product you must fill out the &lt;code&gt;identifier&lt;/code&gt;, before the product can be queried from the external store. You should also always add a &lt;a href=&quot;qml-qtpurchasing-product#onPurchaseSucceeded-signal&quot;&gt;onPurchaseSucceeded&lt;/a&gt; and a &lt;a href=&quot;qml-qtpurchasing-product#onPurchaseFailed-signal&quot;&gt;onPurchaseFailed&lt;/a&gt; handler if you intend to provide the option to purchase the products. If you are also using the restore functionality, you should add a &lt;a href=&quot;qml-qtpurchasing-product#onPurchaseRestored-signal&quot;&gt;onPurchaseRestored&lt;/a&gt; handler to your unlockable products.</source>
          <target state="translated">각 제품에 대해 외부 상점에서 제품을 조회하기 전에 &lt;code&gt;identifier&lt;/code&gt; 작성해야합니다 . 제품 구매 옵션을 제공하려면 항상 &lt;a href=&quot;qml-qtpurchasing-product#onPurchaseSucceeded-signal&quot;&gt;onPurchaseSucceeded&lt;/a&gt; 및 &lt;a href=&quot;qml-qtpurchasing-product#onPurchaseFailed-signal&quot;&gt;onPurchaseFailed&lt;/a&gt; 핸들러를 추가해야합니다 . 복원 기능도 사용중인 경우 잠금 해제 가능한 제품에 &lt;a href=&quot;qml-qtpurchasing-product#onPurchaseRestored-signal&quot;&gt;onPurchaseRestored&lt;/a&gt; 핸들러를 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6fa7331939b2f3de88ce8be7aac68d1a97624d42" translate="yes" xml:space="preserve">
          <source>For each push or pop operation, different transition animations are applied to entering and exiting items. These animations define how the entering item should animate in, and the exiting item should animate out. The animations can be customized by assigning different &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;s for the &lt;a href=&quot;qml-qtquick-controls2-stackview#pushEnter-prop&quot;&gt;pushEnter&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-stackview#pushExit-prop&quot;&gt;pushExit&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-stackview#popEnter-prop&quot;&gt;popEnter&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-stackview#popExit-prop&quot;&gt;popExit&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-stackview#replaceEnter-prop&quot;&gt;replaceEnter&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls2-stackview#replaceExit-prop&quot;&gt;replaceExit&lt;/a&gt; properties of &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquickcontrols-chattutorial-example.html#stackview&quot;&gt;StackView&lt;/a&gt;.</source>
          <target state="translated">각 푸시 또는 팝 조작에 대해 항목을 입력하고 종료하는 데 다른 전환 애니메이션이 적용됩니다. 이 애니메이션은 입력 항목에 애니메이션을 적용하는 방법과 종료 항목에 애니메이션을 적용하는 방법을 정의합니다. 애니메이션은 상이한 할당함으로써 정의 될 수 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;전환&lt;/a&gt; 위한들 &lt;a href=&quot;qml-qtquick-controls2-stackview#pushEnter-prop&quot;&gt;pushEnter&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-stackview#pushExit-prop&quot;&gt;pushExit&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-stackview#popEnter-prop&quot;&gt;popEnter&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-stackview#popExit-prop&quot;&gt;popExit&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-stackview#replaceEnter-prop&quot;&gt;replaceEnter&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-controls2-stackview#replaceExit-prop&quot;&gt;replaceExit의&lt;/a&gt; 특성 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtquickcontrols-chattutorial-example.html#stackview&quot;&gt;StackView&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="bb1a7582fdb87b375415ad5a1f4fc221877910a9" translate="yes" xml:space="preserve">
          <source>For each push or pop operation, different transition animations are applied to entering and exiting items. These animations define how the entering item should animate in, and the exiting item should animate out. The animations can be customized by assigning different &lt;a href=&quot;https://doc.qt.io/qt-5.15/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;s for the &lt;a href=&quot;qml-qtquick-controls2-stackview#pushEnter-prop&quot;&gt;pushEnter&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-stackview#pushExit-prop&quot;&gt;pushExit&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-stackview#popEnter-prop&quot;&gt;popEnter&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-stackview#popExit-prop&quot;&gt;popExit&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-stackview#replaceEnter-prop&quot;&gt;replaceEnter&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls2-stackview#replaceExit-prop&quot;&gt;replaceExit&lt;/a&gt; properties of StackView.</source>
          <target state="translated">각 푸시 또는 팝 작업에 대해 항목을 들어오고 나가는 데 서로 다른 전환 애니메이션이 적용됩니다. 이러한 애니메이션은 들어가는 항목이 애니메이션되는 방식과 종료되는 항목이 애니메이션되는 방식을 정의합니다. 애니메이션은 &lt;a href=&quot;qml-qtquick-controls2-stackview#pushEnter-prop&quot;&gt;StackView&lt;/a&gt; 의 pushEnter , &lt;a href=&quot;qml-qtquick-controls2-stackview#pushExit-prop&quot;&gt;pushExit&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-stackview#popEnter-prop&quot;&gt;popEnter&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-stackview#popExit-prop&quot;&gt;popExit&lt;/a&gt; , &lt;a href=&quot;qml-qtquick-controls2-stackview#replaceEnter-prop&quot;&gt;replaceEnter&lt;/a&gt; 및 &lt;a href=&quot;qml-qtquick-controls2-stackview#replaceExit-prop&quot;&gt;replaceExit&lt;/a&gt; 속성에 대해 서로 다른 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt; 을 할당하여 사용자 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="153f050b37dfbbdd4ac24225ffc6b7417b46a063" translate="yes" xml:space="preserve">
          <source>For each push or pop operation, different transition animations are applied to entering and exiting items. These animations define how the entering item should animate in, and the exiting item should animate out. The animations can be customized by assigning different &lt;a href=&quot;https://doc.qt.io/qt-6.0/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;s for the &lt;a href=&quot;qml-qtquick-controls2-stackview#pushEnter-prop&quot;&gt;pushEnter&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-stackview#pushExit-prop&quot;&gt;pushExit&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-stackview#popEnter-prop&quot;&gt;popEnter&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-stackview#popExit-prop&quot;&gt;popExit&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-controls2-stackview#replaceEnter-prop&quot;&gt;replaceEnter&lt;/a&gt;, and &lt;a href=&quot;qml-qtquick-controls2-stackview#replaceExit-prop&quot;&gt;replaceExit&lt;/a&gt; properties of StackView.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c0a53a04d81ea82cde08520a6c7c2d2d99649969" translate="yes" xml:space="preserve">
          <source>For ease of use, &lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; provides a global object that can be easily used, as in the following example:</source>
          <target state="translated">&lt;a href=&quot;qrandomgenerator&quot;&gt;QRandomGenerator&lt;/a&gt; 는 사용하기 쉽도록 다음 예제와 같이 쉽게 사용할 수있는 글로벌 오브젝트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="12433abb90a5179777eaec64e65e9d0be5413186" translate="yes" xml:space="preserve">
          <source>For ease of use, QRandomGenerator provides a global object that can be easily used, as in the following example:</source>
          <target state="translated">사용 편의성을 위해 QRandomGenerator는 다음 예제와 같이 쉽게 사용할 수있는 전역 개체를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1db78b22664d5f2a96fcc9551c53707fabde92b8" translate="yes" xml:space="preserve">
          <source>For easily displaying a scene from a QML file, see &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt;.</source>
          <target state="translated">QML 파일에서 장면을 쉽게 표시하려면 &lt;a href=&quot;qquickview&quot;&gt;QQuickView를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="abf0cc0929a33104d59600dec3d1797a00d90e9d" translate="yes" xml:space="preserve">
          <source>For edit strategies &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnFieldChange&lt;/a&gt; and &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnRowChange&lt;/a&gt;, a row may receive a change only if no other row has a cached change. Changes are submitted immediately. Submitted changes are not reverted upon failure.</source>
          <target state="translated">편집 전략 &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnFieldChange&lt;/a&gt; 및 &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnRowChange의&lt;/a&gt; 경우 다른 행에 캐시 된 변경 사항이없는 경우에만 행에 변경 사항이 수신 될 수 있습니다. 변경 사항이 즉시 제출됩니다. 제출 된 변경 사항은 실패시 되 돌리지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0a348b0c513f1f79461e4e54328d8ea3a2e52f5c" translate="yes" xml:space="preserve">
          <source>For edit strategies &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnFieldChange&lt;/a&gt; and &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnRowChange&lt;/a&gt;, only one row may be inserted at a time and the model may not contain other cached changes.</source>
          <target state="translated">편집 전략 &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnFieldChange&lt;/a&gt; 및 &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnRowChange&lt;/a&gt; 의 경우 한 번에 하나의 행만 삽입 할 수 있으며 모델에는 다른 캐시 된 변경 사항이 포함되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af741ef26c806902f6b7aa196cb244abc6857ff7" translate="yes" xml:space="preserve">
          <source>For edit strategy &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnFieldChange&lt;/a&gt;, an index may receive a change only if no other index has a cached change. Changes are submitted immediately. However, rows that have not yet been inserted in the database may be freely changed and are not submitted automatically. Submitted changes are not reverted upon failure.</source>
          <target state="translated">편집 전략 &lt;a href=&quot;qsqltablemodel#EditStrategy-enum&quot;&gt;OnFieldChange의&lt;/a&gt; 경우 다른 인덱스에 캐시 된 변경이없는 경우에만 인덱스가 변경을 수신 할 수 있습니다. 변경 사항이 즉시 제출됩니다. 그러나 데이터베이스에 아직 삽입되지 않은 행은 자유롭게 변경 될 수 있으며 자동으로 제출되지 않을 수 있습니다. 제출 된 변경 사항은 실패시 되 돌리지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2d11ab199108ebb56ced4ac1498683fa15192854" translate="yes" xml:space="preserve">
          <source>For editable list models, you must also provide an implementation of &lt;a href=&quot;qabstractitemmodel#setData&quot;&gt;setData&lt;/a&gt;(), and implement the &lt;a href=&quot;qabstractlistmodel#flags&quot;&gt;flags&lt;/a&gt;() function so that it returns a value containing &lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt::ItemIsEditable&lt;/a&gt;.</source>
          <target state="translated">편집 가능한 목록 모델의 경우 &lt;a href=&quot;qabstractitemmodel#setData&quot;&gt;setData&lt;/a&gt; () 구현을 제공 하고 &lt;a href=&quot;qabstractlistmodel#flags&quot;&gt;플래그&lt;/a&gt; () 함수를 구현하여 &lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt :: ItemIsEditable을&lt;/a&gt; 포함하는 값을 리턴해야합니다 .</target>
        </trans-unit>
        <trans-unit id="dea2ed27c95a23f41aa27ac56a9993572e8c1618" translate="yes" xml:space="preserve">
          <source>For efficiency reasons, OpenGL implementations are allowed not to create any debug output at all, unless the OpenGL context is a debug context. In order to create a debug context from Qt, you must set the &lt;a href=&quot;qsurfaceformat#FormatOption-enum&quot;&gt;QSurfaceFormat::DebugContext&lt;/a&gt; format option on the &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; used to create the &lt;a href=&quot;gui-changes-qt6#qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="11f06e22e52b44a85789f96629cc392c00150508" translate="yes" xml:space="preserve">
          <source>For efficiency reasons, OpenGL implementations are allowed not to create any debug output at all, unless the OpenGL context is a debug context. In order to create a debug context from Qt, you must set the &lt;a href=&quot;qsurfaceformat#FormatOption-enum&quot;&gt;QSurfaceFormat::DebugContext&lt;/a&gt; format option on the &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; used to create the &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext&lt;/a&gt; object:</source>
          <target state="translated">효율성상의 이유로 OpenGL 컨텍스트가 디버그 컨텍스트가 아닌 한 OpenGL 구현에서는 디버그 출력을 전혀 만들 수 없습니다. Qt는에서 디버그 컨텍스트를 만들려면, 당신은 설정해야합니다 &lt;a href=&quot;qsurfaceformat#FormatOption-enum&quot;&gt;QSurfaceFormat :: DebugContext의&lt;/a&gt; 상의 형식 옵션 &lt;a href=&quot;qsurfaceformat&quot;&gt;QSurfaceFormat&lt;/a&gt; 작성하는 데 사용 &lt;a href=&quot;qopenglcontext&quot;&gt;QOpenGLContext의&lt;/a&gt; 객체를 :</target>
        </trans-unit>
        <trans-unit id="f088425a9b4d355fc697b9b4dab457cf22800b78" translate="yes" xml:space="preserve">
          <source>For elements, the base URI is the URI appearing in the element's &lt;code&gt;xml:base&lt;/code&gt; attribute, if present, or it is resolved to the parent element's base URI.</source>
          <target state="translated">요소의 경우 기본 URI는 요소의 &lt;code&gt;xml:base&lt;/code&gt; 속성에 나타나는 URI 이거나 상위 요소의 기본 URI로 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="243dc72ad1870d8a0d485dbc8a205a70abb4941a" translate="yes" xml:space="preserve">
          <source>For elements, the concatenation of all text nodes that are descendants. Note, this is not only the children, but the childrens' childrens' text nodes, and so forth.</source>
          <target state="translated">요소의 경우 자손 인 모든 텍스트 노드의 연결 이것은 어린이뿐만 아니라 어린이의 텍스트 노드 등입니다.</target>
        </trans-unit>
        <trans-unit id="935b47cfae84db735960f3539808dfd7cc78e355" translate="yes" xml:space="preserve">
          <source>For embedded platform support, including &lt;a href=&quot;embedded-linux&quot;&gt;Embedded Linux&lt;/a&gt;, &lt;a href=&quot;integrity&quot;&gt;INTEGRITY&lt;/a&gt;, &lt;a href=&quot;qnx&quot;&gt;QNX&lt;/a&gt;, and &lt;a href=&quot;vxworks&quot;&gt;VxWorks&lt;/a&gt;, please consult the &lt;a href=&quot;http://doc.qt.io/QtForDeviceCreation&quot;&gt;Qt for Device Creation&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;a href=&quot;embedded-linux&quot;&gt;Embedded Linux&lt;/a&gt; , &lt;a href=&quot;integrity&quot;&gt;INTEGRITY&lt;/a&gt; , &lt;a href=&quot;qnx&quot;&gt;QNX&lt;/a&gt; 및 &lt;a href=&quot;vxworks&quot;&gt;VxWorks를&lt;/a&gt; 포함한 임베디드 플랫폼 지원에 대해서는 &lt;a href=&quot;http://doc.qt.io/QtForDeviceCreation&quot;&gt;Qt for Device Creation&lt;/a&gt; 설명서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7ceee5b92790a468a0c838d18c102353bc209fc0" translate="yes" xml:space="preserve">
          <source>For embedded platform support, including &lt;a href=&quot;embedded-linux#&quot;&gt;Embedded Linux&lt;/a&gt;, &lt;a href=&quot;integrity#&quot;&gt;INTEGRITY&lt;/a&gt;, &lt;a href=&quot;qnx#&quot;&gt;QNX&lt;/a&gt;, and &lt;a href=&quot;vxworks#&quot;&gt;VxWorks&lt;/a&gt;, please consult the &lt;a href=&quot;http://doc.qt.io/QtForDeviceCreation&quot;&gt;Qt for Device Creation&lt;/a&gt; documentation.</source>
          <target state="translated">&lt;a href=&quot;embedded-linux#&quot;&gt;Embedded Linux&lt;/a&gt; , &lt;a href=&quot;integrity#&quot;&gt;INTEGRITY&lt;/a&gt; , &lt;a href=&quot;qnx#&quot;&gt;QNX&lt;/a&gt; 및 &lt;a href=&quot;vxworks#&quot;&gt;VxWorks를&lt;/a&gt; 포함한 임베디드 플랫폼 지원에 대해서는 &lt;a href=&quot;http://doc.qt.io/QtForDeviceCreation&quot;&gt;Qt for Device Creation&lt;/a&gt; 문서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1149d7739233073612a6dfd381936bdafcc10196" translate="yes" xml:space="preserve">
          <source>For embedding bigger resources, see &lt;a href=&quot;qt-add-bigresources&quot;&gt;qt_add_big_resources&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="6df74b94455f28c4582667871b9d376039d27977" translate="yes" xml:space="preserve">
          <source>For embedding bigger resources, see &lt;a href=&quot;qtcore-cmake-qt-add-big-resources&quot;&gt;qt_add_big_resources&lt;/a&gt;.</source>
          <target state="translated">더 큰 리소스를 포함하려면 &lt;a href=&quot;qtcore-cmake-qt-add-big-resources&quot;&gt;qt_add_big_resources를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d9cb77d8cde92199a5f423c21e3c9b2f755429cf" translate="yes" xml:space="preserve">
          <source>For embedding bigger resources, see &lt;a href=&quot;qtcore-cmake-qt5-add-big-resources&quot;&gt;qt5_add_big_resources&lt;/a&gt;.</source>
          <target state="translated">더 큰 리소스를 포함하려면 &lt;a href=&quot;qtcore-cmake-qt5-add-big-resources&quot;&gt;qt5_add_big_resources를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="1e2e2e5ac06eba606c0f672568806dd5c3cbad2f" translate="yes" xml:space="preserve">
          <source>For empty time ranges, this value is equal to zero.</source>
          <target state="translated">빈 시간 범위의 경우이 값은 0과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a277c4e16f27ea6e42cf4bcdcbeb6aa9dc136ee1" translate="yes" xml:space="preserve">
          <source>For enumerations, the &lt;a href=&quot;10-qdoc-commands-tablesandlists#value-command&quot;&gt;\value&lt;/a&gt; command is for listing the values. QDoc creates a table of values for the enum.</source>
          <target state="translated">열거의 경우 &lt;a href=&quot;10-qdoc-commands-tablesandlists#value-command&quot;&gt;\ value&lt;/a&gt; 명령은 값 을 나열하기위한 것입니다. QDoc은 열거 형에 대한 값 테이블을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="5e60518a7df49ea3256f4b95a8b7875e2bb5a6f2" translate="yes" xml:space="preserve">
          <source>For error handling in the case no valid selectors are present, it is recommended to have a default or error-handling file in the base file location even if you expect selectors to be present for all deployments.</source>
          <target state="translated">유효한 선택기가없는 경우 오류 처리를 위해 모든 배포에 선택기가 존재할 것으로 예상 되더라도 기본 파일 위치에 기본 또는 오류 처리 파일이있는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="2cdc80319a6b6152ec8051b01542330ba1f33306" translate="yes" xml:space="preserve">
          <source>For every &lt;a href=&quot;qxmllexicalhandler#startEntity&quot;&gt;startEntity&lt;/a&gt;() call, there is a corresponding endEntity() call. The calls to &lt;a href=&quot;qxmllexicalhandler#startEntity&quot;&gt;startEntity&lt;/a&gt;() and endEntity() are properly nested.</source>
          <target state="translated">모든 &lt;a href=&quot;qxmllexicalhandler#startEntity&quot;&gt;startEntity&lt;/a&gt; () 호출 마다 해당 endEntity () 호출이 있습니다. &lt;a href=&quot;qxmllexicalhandler#startEntity&quot;&gt;startEntity&lt;/a&gt; () 및 endEntity ()에 대한 호출 이 올바르게 중첩됩니다.</target>
        </trans-unit>
        <trans-unit id="2e1a692cf900e0202197cd483088a6520e1f9298" translate="yes" xml:space="preserve">
          <source>For every child widget, you receive one &lt;a href=&quot;qevent#Type-enum&quot;&gt;ChildAdded&lt;/a&gt; event, zero or more &lt;a href=&quot;qevent#Type-enum&quot;&gt;ChildPolished&lt;/a&gt; events, and one &lt;a href=&quot;qevent#Type-enum&quot;&gt;ChildRemoved&lt;/a&gt; event.</source>
          <target state="translated">모든 하위 위젯에 대해 하나의 &lt;a href=&quot;qevent#Type-enum&quot;&gt;ChildAdded&lt;/a&gt; 이벤트, 0 개 이상의 &lt;a href=&quot;qevent#Type-enum&quot;&gt;ChildPolished&lt;/a&gt; 이벤트 및 하나의 &lt;a href=&quot;qevent#Type-enum&quot;&gt;ChildRemoved&lt;/a&gt; 이벤트를받습니다.</target>
        </trans-unit>
        <trans-unit id="a022153e00f59008cc90b15cb7858b77acbd90af" translate="yes" xml:space="preserve">
          <source>For every combination of viewport and camera, picking casts a ray through the scene to find entities who's bounding volume intersects the ray. The bounding volume is computed using the values in the attribute buffer specified by the boundingVolumePositionAttribute of the geometry.</source>
          <target state="translated">뷰포트와 카메라의 모든 조합에서 피킹은 장면을 통해 광선을 투사하여 경계 볼륨이 광선과 교차하는 엔티티를 찾습니다. 바운딩 볼륨은 형상의 boundingVolumePositionAttribute로 지정된 속성 버퍼의 값을 사용하여 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="ecd11dc5984eb3dba5d83278691d0ea831fedec0" translate="yes" xml:space="preserve">
          <source>For every group defined in a &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt; two attached properties are added to each delegate item. The first of the form &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel&lt;/a&gt;.in</source>
          <target state="translated">&lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel에&lt;/a&gt; 정의 된 모든 그룹에 대해 두 개의 연결된 속성이 각 대리인 항목에 추가됩니다. 폼의 제 &lt;a href=&quot;qml-qtqml-models-delegatemodel&quot;&gt;DelegateModel의&lt;/a&gt; .IN</target>
        </trans-unit>
        <trans-unit id="2bc02c3f4015faebd0d570149edfee9b5fc32a42" translate="yes" xml:space="preserve">
          <source>For every mapped section, the item delegate reads the current value from the widget and sets it in the model. Finally, the model's &lt;a href=&quot;qabstractitemmodel#submit&quot;&gt;submit()&lt;/a&gt; method is invoked.</source>
          <target state="translated">매핑 된 모든 섹션에 대해 항목 대리자는 위젯에서 현재 값을 읽고 모델에서 설정합니다. 마지막으로 모델의 &lt;a href=&quot;qabstractitemmodel#submit&quot;&gt;submit ()&lt;/a&gt; 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2aba5c1f6dc133956fb6a8b1cff6281e7acb2451" translate="yes" xml:space="preserve">
          <source>For example &quot;Ctrl+O&quot; gives CTRL+'O'. The strings &quot;Ctrl&quot;, &quot;Shift&quot;, &quot;Alt&quot; and &quot;Meta&quot; are recognized, as well as their translated equivalents in the &quot;&lt;a href=&quot;qshortcut&quot;&gt;QShortcut&lt;/a&gt;&quot; context (using &lt;a href=&quot;qobject#tr&quot;&gt;QObject::tr&lt;/a&gt;()).</source>
          <target state="translated">예를 들어 &quot;Ctrl + O&quot;는 CTRL + 'O'를 제공합니다. &quot;Ctrl&quot;, &quot;Shift&quot;, &quot;Alt&quot;및 &quot;Meta&quot;문자열과 &quot; &lt;a href=&quot;qshortcut&quot;&gt;QShortcut&lt;/a&gt; &quot;컨텍스트 에서 번역 된 동등 항목 ( &lt;a href=&quot;qobject#tr&quot;&gt;QObject :: tr&lt;/a&gt; () 사용)이 인식됩니다.</target>
        </trans-unit>
        <trans-unit id="242bd8fa7e8939eb1c980eb9b6657b3fe52efc99" translate="yes" xml:space="preserve">
          <source>For example &quot;com.example.backend1*&quot; will match</source>
          <target state="translated">예를 들어 &quot;com.example.backend1 *&quot;는</target>
        </trans-unit>
        <trans-unit id="6f001ca12f69b07d6884f2334d430e40c5f927c0" translate="yes" xml:space="preserve">
          <source>For example Qt WebKit sets the originating object to the QWebFrame that initiated the request.</source>
          <target state="translated">예를 들어 Qt WebKit은 시작 객체를 요청을 시작한 QWebFrame으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="499836ba64fdece23e98381c9859c04fafb82da9" translate="yes" xml:space="preserve">
          <source>For example a &lt;a href=&quot;qinputdevice#DeviceType-enum&quot;&gt;TouchScreen&lt;/a&gt; input device is fixed in place upon a single physical screen, and usually calibrated so that this area is the same as &lt;a href=&quot;qscreen#geometry-prop&quot;&gt;QScreen::geometry&lt;/a&gt;(); whereas a &lt;a href=&quot;qinputdevice#DeviceType-enum&quot;&gt;Mouse&lt;/a&gt; can probably access all screens on the virtual desktop. A Wacom graphics tablet may be configured in a way that it's mapped to all screens, or only to the screen where the user prefers to create drawings, or to the window in which drawing occurs. A &lt;a href=&quot;qinputdevice#DeviceType-enum&quot;&gt;Stylus&lt;/a&gt; device that is integrated with a touchscreen may be physically limited to that screen.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="1079d53a309b1db5c44cadfa6902124de00cc92c" translate="yes" xml:space="preserve">
          <source>For example a speed display adds &quot;m/s&quot; as a smaller label:</source>
          <target state="translated">예를 들어 속도 표시는 &quot;m / s&quot;를 더 작은 레이블로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="06bb424448158c8c0ce2d1b5b7434ab919a7209f" translate="yes" xml:space="preserve">
          <source>For example about using the search patterns in conjunction with the roles, see &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdatavisualization-qmlbars-example.html#&quot;&gt;Qt Quick 2 Bars Example&lt;/a&gt;.</source>
          <target state="translated">역할과 함께 검색 패턴을 사용하는 방법에 대한 예는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdatavisualization-qmlbars-example.html#&quot;&gt;Qt Quick 2 Bars 예를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="69445c0ca8d0ab2f1f1c36f504985efeaf634265" translate="yes" xml:space="preserve">
          <source>For example about using the search patterns in conjunction with the roles, see &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdatavisualization-qmlbars-example.html&quot;&gt;Qt Quick 2 Bars Example&lt;/a&gt;.</source>
          <target state="translated">역할과 함께 검색 패턴을 사용하는 방법에 대한 예는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdatavisualization-qmlbars-example.html&quot;&gt;Qt Quick 2 Bars 예제를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3ff47a21409ca7f42134519961850b61cd1e5f69" translate="yes" xml:space="preserve">
          <source>For example about using the search patterns in conjunction with the roles, see &lt;a href=&quot;qml-qtdatavisualization-itemmodelbardataproxy&quot;&gt;ItemModelBarDataProxy&lt;/a&gt; usage in &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdatavisualization-qmlbars-example.html#&quot;&gt;Qt Quick 2 Bars Example&lt;/a&gt;.</source>
          <target state="translated">역할과 함께 검색 패턴을 사용하는 방법에 대한 예 는 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdatavisualization-qmlbars-example.html#&quot;&gt;Qt Quick 2 Bars 예제의 &lt;/a&gt;&lt;a href=&quot;qml-qtdatavisualization-itemmodelbardataproxy&quot;&gt;ItemModelBarDataProxy&lt;/a&gt; 사용법을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="03a887dcd30d3634411065840b8646a0f021d86a" translate="yes" xml:space="preserve">
          <source>For example about using the search patterns in conjunction with the roles, see &lt;a href=&quot;qml-qtdatavisualization-itemmodelbardataproxy&quot;&gt;ItemModelBarDataProxy&lt;/a&gt; usage in &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdatavisualization-qmlbars-example.html&quot;&gt;Qt Quick 2 Bars Example&lt;/a&gt;.</source>
          <target state="translated">역할과 함께 검색 패턴을 사용하는 방법에 대한 예 는 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdatavisualization-qmlbars-example.html&quot;&gt;Qt Quick 2 Bars 예제&lt;/a&gt; 에서 &lt;a href=&quot;qml-qtdatavisualization-itemmodelbardataproxy&quot;&gt;ItemModelBarDataProxy&lt;/a&gt; 사용을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fb2e5d2194d7efd69fee216215fbe8e43b401465" translate="yes" xml:space="preserve">
          <source>For example if we are in wildcard mode and have strings which contain filenames we could identify HTML files with &lt;b&gt;*.html&lt;/b&gt;. This will match zero or more characters followed by a dot followed by 'h', 't', 'm' and 'l'.</source>
          <target state="translated">예를 들어 와일드 카드 모드이고 파일 이름이 포함 된 문자열이 있으면 &lt;b&gt;* .html로&lt;/b&gt; HTML 파일을 식별 할 수 있습니다. 이것은 0 개 이상의 문자 다음에 점과 'h', 't', 'm'및 'l'이옵니다.</target>
        </trans-unit>
        <trans-unit id="a794b61ff22c70a2673dc9d0786cb43b1688bc95" translate="yes" xml:space="preserve">
          <source>For example on a mobile phone it can be used to easily choose between front-facing and back-facing cameras.</source>
          <target state="translated">예를 들어 휴대폰에서는 전면 카메라와 후면 카메라 중 하나를 쉽게 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="149f66e89f28e6b95842928537eeed0d03927561" translate="yes" xml:space="preserve">
          <source>For example setting the &lt;a href=&quot;qcameraimageprocessingcontrol#ProcessingParameter-enum&quot;&gt;SharpeningAdjustment&lt;/a&gt; parameter to -0.1 slightly reduces the amount of sharpening applied, while settings the Sharpening parameter to 0 disables sharpening at all.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;qcameraimageprocessingcontrol#ProcessingParameter-enum&quot;&gt;SharpeningAdjustment&lt;/a&gt; 매개 변수를 -0.1로 설정하면 적용된 선명 효과 양이 약간 줄어들고 Sharpening 매개 변수를 0으로 설정하면 선명 효과가 전혀 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="4da27ba0260140596f75ef8b4c7d5ce5bbd1912b" translate="yes" xml:space="preserve">
          <source>For example the &lt;a href=&quot;qrect#left&quot;&gt;left&lt;/a&gt;(), &lt;a href=&quot;qrect#setLeft&quot;&gt;setLeft&lt;/a&gt;() and &lt;a href=&quot;qrect#moveLeft&quot;&gt;moveLeft&lt;/a&gt;() functions as an example: &lt;a href=&quot;qrect#left&quot;&gt;left&lt;/a&gt;() returns the x-coordinate of the rectangle's left edge, &lt;a href=&quot;qrect#setLeft&quot;&gt;setLeft&lt;/a&gt;() sets the left edge of the rectangle to the given x coordinate (it may change the width, but will never change the rectangle's right edge) and &lt;a href=&quot;qrect#moveLeft&quot;&gt;moveLeft&lt;/a&gt;() moves the entire rectangle horizontally, leaving the rectangle's left edge at the given x coordinate and its size unchanged.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;qrect#left&quot;&gt;left&lt;/a&gt; (), &lt;a href=&quot;qrect#setLeft&quot;&gt;setLeft&lt;/a&gt; () 및 &lt;a href=&quot;qrect#moveLeft&quot;&gt;moveLeft&lt;/a&gt; ()는 예제로 작동합니다. &lt;a href=&quot;qrect#left&quot;&gt;left&lt;/a&gt; ()는 사각형 왼쪽 가장자리의 x 좌표를 반환하고 &lt;a href=&quot;qrect#setLeft&quot;&gt;setLeft&lt;/a&gt; ()는 사각형의 왼쪽 가장자리 를 지정된 x 좌표 (it 너비를 변경할 수는 있지만 사각형의 오른쪽 가장자리는 절대 변경되지 않습니다.) 및 &lt;a href=&quot;qrect#moveLeft&quot;&gt;moveLeft&lt;/a&gt; ()는 전체 사각형을 가로로 이동하여 지정된 x 좌표에서 사각형의 왼쪽 가장자리는 그대로 유지합니다.</target>
        </trans-unit>
        <trans-unit id="17b6d46246d80c444ed0e627375332d36894932c" translate="yes" xml:space="preserve">
          <source>For example the boolean &lt;a href=&quot;qwidget#isWindow&quot;&gt;QWidget::isWindow&lt;/a&gt; property:</source>
          <target state="translated">예를 들어 부울 &lt;a href=&quot;qwidget#isWindow&quot;&gt;QWidget :: isWindow&lt;/a&gt; 속성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="db8832249126d288fa3a70b42989bc78dbf1b636" translate="yes" xml:space="preserve">
          <source>For example the declaration of such a class may look like the following.</source>
          <target state="translated">예를 들어, 그러한 클래스의 선언은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="66db4cad32dfbb5ed7b8c3424bfb0d5a6706b13b" translate="yes" xml:space="preserve">
          <source>For example the following dialog will ask a question with 5 possible answers:</source>
          <target state="translated">예를 들어 다음 대화 상자는 5 가지 가능한 답변이있는 질문을합니다.</target>
        </trans-unit>
        <trans-unit id="0b2665875a301946d62e544f325d6c1a9e3e5cda" translate="yes" xml:space="preserve">
          <source>For example the following dialog will show a calendar with the ability to save or cancel a date:</source>
          <target state="translated">예를 들어 다음 대화 상자에는 날짜를 저장하거나 취소 할 수있는 달력이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a868b09f81c9d917ed4c32d8f5e595dfb29c077c" translate="yes" xml:space="preserve">
          <source>For example the following dialog will show custom content and no buttons:</source>
          <target state="translated">예를 들어 다음 대화 상자에는 사용자 정의 컨텐츠가 표시되고 버튼은 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a679a11671abebc43ecfd4657b386ec6cdfb96c8" translate="yes" xml:space="preserve">
          <source>For example to notify about a focus change when re-implementing &lt;a href=&quot;qwidget#setFocus&quot;&gt;QWidget::setFocus&lt;/a&gt;, the event could be used as follows:</source>
          <target state="translated">예를 들어 &lt;a href=&quot;qwidget#setFocus&quot;&gt;QWidget :: setFocus를&lt;/a&gt; 다시 구현할 때 포커스 변경에 대해 알리기 위해 이벤트를 다음과 같이 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6cb07ad67978e4b41b95233f0c94c750c69d1ac0" translate="yes" xml:space="preserve">
          <source>For example while parsing the text, you can keep track of parenthesis characters that you encounter ('{[(' and the like), and store their relative position and the actual &lt;a href=&quot;qchar&quot;&gt;QChar&lt;/a&gt; in a simple class derived from &lt;a href=&quot;qtextblockuserdata&quot;&gt;QTextBlockUserData&lt;/a&gt;:</source>
          <target state="translated">예를 들어, 텍스트를 구문 분석 할 때 발생하는 괄호 문자 ( '{[('등))를 추적하고 상대 위치와 실제 &lt;a href=&quot;qchar&quot;&gt;QChar를 QTextBlockUserData&lt;/a&gt; 에서 파생 된 간단한 클래스에 &lt;a href=&quot;qtextblockuserdata&quot;&gt;저장할 수 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6db6725e9e7d5c088630e348048d1e73fc7657d3" translate="yes" xml:space="preserve">
          <source>For example,</source>
          <target state="translated">예를 들어</target>
        </trans-unit>
        <trans-unit id="98f17dfc2d7edc7fc4dcfda86f25f597a9ce1005" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;21-2-qtgui-qdocconf&quot;&gt;qtgui.qdocconf&lt;/a&gt; (the configuration file for Qt GUI) contains the following variable definitions:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;21-2-qtgui-qdocconf&quot;&gt;qtgui.qdocconf&lt;/a&gt; (Qt GUI 용 구성 파일)에는 다음 변수 정의가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="49d7b5a36109c006daebac8e8115ed4bcaeb27eb" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;21-2-qtgui-qdocconf#&quot;&gt;qtgui.qdocconf&lt;/a&gt; (the configuration file for Qt) contains the following variable definitions:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;21-2-qtgui-qdocconf#&quot;&gt;qtgui.qdocconf&lt;/a&gt; (Qt 구성 파일)에는 다음 변수 정의가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="bd45c2b31bc80b9fa965ad87f407d523448ca8d8" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; uses &lt;a href=&quot;qgraphicsitem#GraphicsItemChange-enum&quot;&gt;ItemVisibleChange&lt;/a&gt; to deliver &lt;a href=&quot;qevent#Type-enum&quot;&gt;Show&lt;/a&gt; and &lt;a href=&quot;qevent#Type-enum&quot;&gt;Hide&lt;/a&gt; events, &lt;a href=&quot;qgraphicsitem#GraphicsItemChange-enum&quot;&gt;ItemPositionHasChanged&lt;/a&gt; to deliver &lt;a href=&quot;qevent#Type-enum&quot;&gt;Move&lt;/a&gt; events, and &lt;a href=&quot;qgraphicsitem#GraphicsItemChange-enum&quot;&gt;ItemParentChange&lt;/a&gt; both to deliver &lt;a href=&quot;qevent#Type-enum&quot;&gt;ParentChange&lt;/a&gt; events, and for managing the focus chain.</source>
          <target state="translated">예를 들어, &lt;a href=&quot;graphicsview#qgraphicswidget&quot;&gt;QGraphicsWidget&lt;/a&gt; 은 &lt;a href=&quot;qgraphicsitem#GraphicsItemChange-enum&quot;&gt;ItemVisibleChange&lt;/a&gt; 를 사용 하여 &lt;a href=&quot;qevent#Type-enum&quot;&gt;Show&lt;/a&gt; 및 &lt;a href=&quot;qevent#Type-enum&quot;&gt;Hide&lt;/a&gt; 이벤트 를 전달 하고 &lt;a href=&quot;qgraphicsitem#GraphicsItemChange-enum&quot;&gt;ItemPositionHasChanged&lt;/a&gt; 를 &lt;a href=&quot;qevent#Type-enum&quot;&gt;이동&lt;/a&gt; 이벤트 를 전달 하고 &lt;a href=&quot;qgraphicsitem#GraphicsItemChange-enum&quot;&gt;ItemParentChange&lt;/a&gt; 를 사용하여 &lt;a href=&quot;qevent#Type-enum&quot;&gt;ParentChange&lt;/a&gt; 이벤트 를 전달 하고 포커스 체인을 관리합니다.</target>
        </trans-unit>
        <trans-unit id="a0f1044742f12b46c2a7c814fdf01253dc4b309a" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;qlcdnumber&quot;&gt;QLCDNumber&lt;/a&gt; has three versions of the &lt;code&gt;display()&lt;/code&gt; slot:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qlcdnumber&quot;&gt;QLCDNumber&lt;/a&gt; 에는 세 가지 버전의 &lt;code&gt;display()&lt;/code&gt; 슬롯이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8e39bb72e3592cc47c77e4395c2e5605d1ef149" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;qml-qtqml-component#completed-signal&quot;&gt;Component.onCompleted&lt;/a&gt; is an attached signal handler. It is often used to execute some JavaScript code when its creation process is complete. Here is an example:</source>
          <target state="translated">예를 들어 &lt;a href=&quot;qml-qtqml-component#completed-signal&quot;&gt;Component.onCompleted&lt;/a&gt; 는 첨부 된 신호 처리기입니다. 생성 프로세스가 완료되면 일부 JavaScript 코드를 실행하는 데 종종 사용됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6df08d6faf507766f7e5e5bedd4faf7c33beddd8" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;qvariant#canConvert&quot;&gt;canConvert&lt;/a&gt;(Int) would return true when called on a variant containing a string because, in principle, &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; is able to convert strings of numbers to integers. However, if the string contains non-numeric characters, it cannot be converted to an integer, and any attempt to convert it will fail. Hence, it is important to have both functions return true for a successful conversion.</source>
          <target state="translated">예를 들어, 원칙적으로 &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 는 숫자 문자열을 정수로 변환 할 수 있으므로 문자열을 포함하는 변형에서 호출 될 때 &lt;a href=&quot;qvariant#canConvert&quot;&gt;canConvert&lt;/a&gt; (Int)는 true를 리턴합니다 . 그러나 문자열에 숫자가 아닌 문자가 포함 된 경우 정수로 변환 할 수 없으며 변환 시도가 실패합니다. 따라서 성공적인 변환을 위해서는 두 함수가 모두 true를 반환하도록하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="297bff251092fde82839cd6cd2583a3f3f46a4a2" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;qvariant#canConvert&quot;&gt;canConvert&lt;/a&gt;(Int) would return true when called on a variant containing a string because, in principle, QVariant is able to convert strings of numbers to integers. However, if the string contains non-numeric characters, it cannot be converted to an integer, and any attempt to convert it will fail. Hence, it is important to have both functions return true for a successful conversion.</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qvariant#canConvert&quot;&gt;canConvert&lt;/a&gt; (Int)는 원칙적으로 QVariant가 숫자 문자열을 정수로 변환 할 수 있기 때문에 문자열을 포함하는 변형에서 호출 될 때 true를 반환합니다. 그러나 문자열에 숫자가 아닌 문자가 포함 된 경우 정수로 변환 할 수 없으며 변환 시도가 실패합니다. 따라서 성공적인 변환을 위해 두 함수 모두 true를 반환하는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="320941b5a2d25d8684f1c5659fabaac999130665" translate="yes" xml:space="preserve">
          <source>For example, &lt;a href=&quot;qxmldefaulthandler&quot;&gt;QXmlDefaultHandler&lt;/a&gt; subclasses both &lt;a href=&quot;qxmlcontenthandler&quot;&gt;QXmlContentHandler&lt;/a&gt; and &lt;a href=&quot;qxmlerrorhandler&quot;&gt;QXmlErrorHandler&lt;/a&gt;, so by subclassing it we can use the same handler for both of the following reader functions:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qxmldefaulthandler&quot;&gt;QXmlDefaultHandler&lt;/a&gt; 는 &lt;a href=&quot;qxmlcontenthandler&quot;&gt;QXmlContentHandler&lt;/a&gt; 및 &lt;a href=&quot;qxmlerrorhandler&quot;&gt;QXmlErrorHandler를&lt;/a&gt; 모두 서브 클래 싱 하므로 서브 클래 싱을 통해 다음 리더 함수 모두에 대해 동일한 핸들러를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b3286c5ccc8972f3bb403b52900debc1751fa174" translate="yes" xml:space="preserve">
          <source>For example, &lt;b&gt;Ctrl P&lt;/b&gt; might be a sequence used as a shortcut for printing a document, and can be specified in any of the following ways:</source>
          <target state="translated">예를 들어 &lt;b&gt;Ctrl P&lt;/b&gt; 는 문서 인쇄 바로 가기로 사용되는 시퀀스 일 수 있으며 다음 방법 중 하나로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="709b3e3c69ffd31a8412c85abb7b0662b5118f19" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;find_package(Qt5 COMPONENTS Widgets)&lt;/code&gt;, when successful, makes the following variables available:</source>
          <target state="translated">예를 들어, &lt;code&gt;find_package(Qt5 COMPONENTS Widgets)&lt;/code&gt; 성공하면 다음 변수를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bee72cef242eec4e1099e9d8aff3098ad99bc04e" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;find_package(Qt6 COMPONENTS Widgets)&lt;/code&gt;, when successful, makes the following variables available:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5d6ab105a770ff60893789fc8c07308de45dc3dd" translate="yes" xml:space="preserve">
          <source>For example, &lt;code&gt;shortcuts.home&lt;/code&gt; will provide the URL of the user's home directory.</source>
          <target state="translated">예를 들어, &lt;code&gt;shortcuts.home&lt;/code&gt; 은 사용자 홈 디렉토리의 URL을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5ce165c49a5bf94cd7c31da2f14cc6c4f9f00813" translate="yes" xml:space="preserve">
          <source>For example, A4 is defined by the standard as 210mm x 297mm, 8.27in x 11.69in, or 595pt x 842pt.</source>
          <target state="translated">예를 들어, A4는 표준에 따라 210mm x 297mm, 8.27in x 11.69in 또는 595pt x 842pt로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="0754b945e538e0d99947ef7540dfe015178db788" translate="yes" xml:space="preserve">
          <source>For example, Microsoft Access users can use the following connection string to open an &lt;code&gt;.mdb&lt;/code&gt; file directly, instead of having to create a DSN entry in the ODBC manager:</source>
          <target state="translated">예를 들어, Microsoft Access 사용자는 ODBC 관리자에서 DSN 항목을 작성하지 않고 다음 연결 문자열을 사용하여 &lt;code&gt;.mdb&lt;/code&gt; 파일을 직접 열 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84c76dcb971458088b95c00e57792db2e92f10b5" translate="yes" xml:space="preserve">
          <source>For example, QXmlDefaultHandler subclasses both &lt;a href=&quot;qxmlcontenthandler&quot;&gt;QXmlContentHandler&lt;/a&gt; and &lt;a href=&quot;qxmlerrorhandler&quot;&gt;QXmlErrorHandler&lt;/a&gt;, so by subclassing it we can use the same handler for both of the following reader functions:</source>
          <target state="translated">예를 들어, QXmlDefaultHandler는 &lt;a href=&quot;qxmlcontenthandler&quot;&gt;QXmlContentHandler&lt;/a&gt; 와 &lt;a href=&quot;qxmlerrorhandler&quot;&gt;QXmlErrorHandler를&lt;/a&gt; 모두 서브 클래 싱하므로이를 서브 클래 싱하여 다음 판독기 함수 모두에 대해 동일한 핸들러를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef15bbad9749d8ef7c1a9d3ebc3def326c2d7cb0" translate="yes" xml:space="preserve">
          <source>For example, Qt Quick's built-in materials (the shaders backing items, such as &lt;a href=&quot;qml-qtquick-image&quot;&gt;Image&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt;, &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;) all prepare their shaders with &lt;code&gt;--glsl &quot;100 es,120,150&quot; --hlsl 50 --msl 12&lt;/code&gt;. This makes them compatible with OpenGL ES 2.0 and higher, OpenGL 2.1 and higher, and OpenGL core profile contexts of version 3.2 and higher.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="3cb75a82a74b1351c2af854df65b196dd46ceadb" translate="yes" xml:space="preserve">
          <source>For example, a &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; with a model containing 20 items, a &lt;a href=&quot;qml-qtquick-pathview#pathItemCount-prop&quot;&gt;pathItemCount&lt;/a&gt; of 10, and an cacheItemCount of 4 will create up to 14 items, with 10 visible on the path and 4 invisible cached items.</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; 20 개 개의 항목을 포함하는 모델 A의 &lt;a href=&quot;qml-qtquick-pathview#pathItemCount-prop&quot;&gt;pathItemCount&lt;/a&gt; 10, 및도 4의 cacheItemCount 경로 (10)에 표시하고 4 개 보이지 캐시 항목과 14 개의 항목을 작성할 것이다.</target>
        </trans-unit>
        <trans-unit id="75ea839fc92b9468e72220e2c00067f20772e829" translate="yes" xml:space="preserve">
          <source>For example, a &lt;a href=&quot;qml-qtquick3d-effects-depthoffieldhqblur#focusDistance-prop&quot;&gt;focusDistance&lt;/a&gt; of &lt;code&gt;100&lt;/code&gt; and a &lt;a href=&quot;qml-qtquick3d-effects-depthoffieldhqblur#focusRange-prop&quot;&gt;focusRange&lt;/a&gt; of &lt;code&gt;20&lt;/code&gt; means that everything that is between 90 and 110 units away from the camera will be entirely in focus, items at a distance of 70-90 and 110-130 units will experience variable blurring, and everything closer than 70 or farther than 130 will be entirely blurred.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;qml-qtquick3d-effects-depthoffieldhqblur#focusDistance-prop&quot;&gt;focusDistance&lt;/a&gt; 가 &lt;code&gt;100&lt;/code&gt; 이고 &lt;a href=&quot;qml-qtquick3d-effects-depthoffieldhqblur#focusRange-prop&quot;&gt;focusRange&lt;/a&gt; 가 &lt;code&gt;20&lt;/code&gt; 이면 카메라에서 90 ~ 110 단위 거리에있는 모든 항목에 완전히 초점이 맞춰지고 70 ~ 90 ~ 110 ~ 130 단위 거리에있는 항목은 다양한 흐림 현상이 발생합니다. 70보다 가깝거나 130보다 먼 모든 것은 완전히 흐려집니다.</target>
        </trans-unit>
        <trans-unit id="56b482b6676aa43f9bbe7498ed066aa7680a3d23" translate="yes" xml:space="preserve">
          <source>For example, a &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; subclass can do the following to draw the contents rendered into a framebuffer at the pixel position &lt;code&gt;(x, y)&lt;/code&gt;:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qopenglwidget&quot;&gt;QOpenGLWidget&lt;/a&gt; 서브 클래스는 다음을 수행하여 픽셀 위치 &lt;code&gt;(x, y)&lt;/code&gt; 에서 프레임 버퍼로 렌더링 된 내용을 그릴 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fa450270fe85a7855e9e730fb5dea0edbf363664" translate="yes" xml:space="preserve">
          <source>For example, a &lt;code&gt;qt.conf&lt;/code&gt; file could contain the following:</source>
          <target state="translated">예를 들어, &lt;code&gt;qt.conf&lt;/code&gt; 파일은 다음을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f5c7da6e0974bfac57dd600e67d68c38eb06a66" translate="yes" xml:space="preserve">
          <source>For example, a building's location may have a region centered around the building, but the region is large enough to show it's immediate surrounding geographical context.</source>
          <target state="translated">예를 들어, 건물 위치에는 건물 주위에 지역이있을 수 있지만 지역은 지리적 인 상황을 바로 둘러 볼 수있을 정도로 넓습니다.</target>
        </trans-unit>
        <trans-unit id="43e656a3fe6f75d7c2c2b11163a05bea8c1cd45d" translate="yes" xml:space="preserve">
          <source>For example, a control could be made to respond to left and right clicks in different ways, with two handlers:</source>
          <target state="translated">예를 들어, 두 개의 핸들러를 사용하여 서로 다른 방식으로 왼쪽 및 오른쪽 클릭에 응답하도록 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6c163810943bb48d7338f26f6817341618c9e2d" translate="yes" xml:space="preserve">
          <source>For example, a control could be made to respond to mouse and stylus clicks in one way, and touchscreen taps in another way, with two handlers:</source>
          <target state="translated">예를 들어, 한 가지 방식으로 마우스 및 스타일러스 클릭에 응답하고 두 개의 핸들러를 사용하여 다른 방식으로 터치 스크린 탭에 응답하도록 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42d3c9812b52681eb5a9121451655ead937537a2" translate="yes" xml:space="preserve">
          <source>For example, a control could be made to respond to mouse, touch, and stylus clicks in some way, but delete itself if tapped with an eraser tool on a graphics tablet, with two handlers:</source>
          <target state="translated">예를 들어, 마우스, 터치 및 스타일러스 클릭에 어떤 식 으로든 반응하도록 컨트롤을 만들 수 있지만 그래픽 태블릿에서 지우개 도구를 사용하여 두 개의 핸들러를 사용하면 자체를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="7f7d576ecf0038c837c5ddfd93a4debc62cd4899" translate="yes" xml:space="preserve">
          <source>For example, a developer using a British keyboard may decide to specify &quot;Ctrl+Shift+=&quot; as the key sequence in order to create a shortcut that coincidentally behaves in the same way as &lt;b&gt;Ctrl plus&lt;/b&gt;. However, the &lt;b&gt;=&lt;/b&gt; key needs to be accessed using the &lt;b&gt;Shift&lt;/b&gt; key on Norwegian keyboard, making the required shortcut effectively &lt;b&gt;Ctrl Shift Shift =&lt;/b&gt; (an impossible key combination).</source>
          <target state="translated">예를 들어 영국식 키보드를 사용하는 개발자는 &quot;Ctrl + Shift + =&quot;를 키 시퀀스로 지정하여 &lt;b&gt;Ctrl plus와&lt;/b&gt; 같은 방식으로 일치하는 단축키를 만들 수 있습니다 . 그러나 노르웨이어 키보드 의 &lt;b&gt;Shift&lt;/b&gt; 키를 사용하여 &lt;b&gt;=&lt;/b&gt; 키에 액세스해야 하므로 필요한 바로 가기를 효과적으로 만들 수 있습니다. &lt;b&gt;Ctrl Shift Shift =&lt;/b&gt; (불가능한 키 조합).&lt;b&gt;&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="fdcbe4b59c59e4d8b1aa8b30ad8fb98a24ef4959" translate="yes" xml:space="preserve">
          <source>For example, a hypothetical</source>
          <target state="translated">예를 들어, 가상</target>
        </trans-unit>
        <trans-unit id="7491c7a3bf2330911154d16610d6350f42f7f8bc" translate="yes" xml:space="preserve">
          <source>For example, a local file containing a '#' character, which would normally be interpreted as the beginning of the URL 'fragment' element, can be accessed by encoding the characters of the file name:</source>
          <target state="translated">예를 들어, 일반적으로 URL 'fragment'요소의 시작으로 해석되는 '#'문자를 포함하는 로컬 파일은 파일 이름의 문자를 인코딩하여 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f2a054afaefd82e84810d34bef6c9f492acace1" translate="yes" xml:space="preserve">
          <source>For example, a model that only provides plain text would provide the following implementation:</source>
          <target state="translated">예를 들어 일반 텍스트 만 제공하는 모델은 다음 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="188d7abde975575c016d922080d7ea50aa8715be" translate="yes" xml:space="preserve">
          <source>For example, a model which provides a simple list based on &lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel&lt;/a&gt; can enable drag and drop for each of the items by ensuring that the flags returned contain the &lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt::ItemIsDragEnabled&lt;/a&gt; and &lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt::ItemIsDropEnabled&lt;/a&gt; values:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qabstractlistmodel&quot;&gt;QAbstractListModel을&lt;/a&gt; 기반으로 간단한 목록을 제공하는 모델은 리턴 된 플래그에 &lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt :: ItemIsDragEnabled&lt;/a&gt; 및 &lt;a href=&quot;qt#ItemFlag-enum&quot;&gt;Qt :: ItemIsDropEnabled&lt;/a&gt; 값이 포함되도록하여 각 항목에 대해 끌어서 놓기를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="808106427cecc897b4e7d71116e12b5436b1cfe5" translate="yes" xml:space="preserve">
          <source>For example, a particular widget may have different appearance on different platforms or with different widget styles, so reference bitmaps may need to be created multiple times and then maintained in the future as Qt's set of supported platforms evolves. Making changes that affect the bitmap thus means having to recreate the expected bitmaps on each supported platform, which would require access to each platform.</source>
          <target state="translated">예를 들어 특정 위젯은 다른 플랫폼이나 다른 위젯 스타일에서 다른 모양을 가질 수 있으므로 참조 비트 맵을 여러 번 생성 한 다음 Qt의 지원되는 플랫폼 집합이 발전함에 따라 향후 유지 관리해야 할 수 있습니다. 따라서 비트 맵에 영향을 미치는 변경은 지원되는 각 플랫폼에서 예상 비트 맵을 다시 만들어야하며 각 플랫폼에 대한 액세스가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="e3b1abd199fb897f6abbd091fd7b7679b52fd4ec" translate="yes" xml:space="preserve">
          <source>For example, a pattern where each stroke is four units long, followed by a gap of two units, will begin with the stroke when drawn as a line.</source>
          <target state="translated">예를 들어, 각 획의 길이가 4 단위이고 그 뒤에 2 단위의 간격이있는 패턴은 선으로 그릴 때 획으로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="e52520c1ff5e74987ae1db4967b3e95d74bc7fad" translate="yes" xml:space="preserve">
          <source>For example, a proxy factory could apply the following rules:</source>
          <target state="translated">예를 들어 프록시 팩토리는 다음 규칙을 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fe26179415ca04e2ce8c0a3de2a24fa8f188e60" translate="yes" xml:space="preserve">
          <source>For example, a selected item may need to be displayed differently to unselected items, as shown in the following code:</source>
          <target state="translated">예를 들어 다음 코드와 같이 선택한 항목을 선택하지 않은 항목과 다르게 표시해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24c55eaea8e0fe7ce2e9207d2757135f1602abec" translate="yes" xml:space="preserve">
          <source>For example, a set of resource data specified in a &lt;code&gt;.qrc&lt;/code&gt; file can be compiled in the following way:</source>
          <target state="translated">예를 들어, &lt;code&gt;.qrc&lt;/code&gt; 파일에 지정된 자원 데이터 세트 는 다음과 같은 방식으로 컴파일 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7986b5439bb2672f2a666640d60fe631185e9c2" translate="yes" xml:space="preserve">
          <source>For example, a shader may want access to a depth texture that contains the depth buffer contents for the opaque objects in the scene. This is achieved by sampling &lt;code&gt;DEPTH_TEXTURE&lt;/code&gt;. Such a texture is not normally generated, unless there is a real need for it. Therefore, the presence of the following keywords in the vertex or fragment shader also acts as a toggle for opting in to the - potentially expensive - passes for generating the texture in question. (of course, it could be that some of these become already enabled due to other settings, such as the ambient occlusion parameters in &lt;a href=&quot;qml-qtquick3d-sceneenvironment&quot;&gt;SceneEnvironment&lt;/a&gt; or due to a post-processing effect relying on the depth texture, in which case the textures in question are generated regardless of the custom material and so sampling these special textures in the material comes at no extra cost apart from the texture access itself)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="253374412282c98b9299b1c41ee501634d2976df" translate="yes" xml:space="preserve">
          <source>For example, a slot that reacts to signals emitted by newly checked buttons but which ignores signals from buttons that have been unchecked can be implemented using the following pattern:</source>
          <target state="translated">예를 들어, 새로 확인 된 버튼에서 방출 된 신호에 반응하지만 확인되지 않은 버튼의 신호를 무시하는 슬롯은 다음 패턴을 사용하여 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="670a2d986c8ef0da589ce410f50c289eb15509d1" translate="yes" xml:space="preserve">
          <source>For example, a text editor would create a temporary file that includes the current contents of its edit buffers, the location of the cursor and other aspects of the current editing session.</source>
          <target state="translated">예를 들어, 텍스트 편집기는 편집 버퍼의 현재 내용, 커서 위치 및 현재 편집 세션의 다른 측면을 포함하는 임시 파일을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="845482e276a2e6c1bc544e28a8bebd9e3323ab53" translate="yes" xml:space="preserve">
          <source>For example, a text paragraph item fit into a column width of 200 may grow vertically. You can pass &lt;a href=&quot;qsizef&quot;&gt;QSizeF&lt;/a&gt;(200, -1) as a constraint to get a suitable minimum, preferred and maximum height).</source>
          <target state="translated">예를 들어 열 너비가 200 인 텍스트 단락 항목은 세로로 커질 수 있습니다. 사용자는 통과 할 수 &lt;a href=&quot;qsizef&quot;&gt;QSizeF를&lt;/a&gt; A A 적합한 최소 얻을 제약 바람직하고, 최대 높이)로 (200, -1).</target>
        </trans-unit>
        <trans-unit id="d18bfd69c26cdaa18c7972f47664e7fe043e9fbf" translate="yes" xml:space="preserve">
          <source>For example, a tightly packed vertex buffer for a geometry using &lt;code&gt;PositionSemantic&lt;/code&gt;, &lt;code&gt;IndexSemantic&lt;/code&gt;, and &lt;code&gt;ColorSemantic&lt;/code&gt; will have stride &lt;code&gt;28&lt;/code&gt; (Seven floats in total: Three for position, four for color, and none for indexes, which do not go in the vertex buffer.)</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81b4583e3290d3db1409bd3a3d196ea0fd2cbd7f" translate="yes" xml:space="preserve">
          <source>For example, after successfully loading the &quot;GL&quot; library on Unix platforms, fileName() will return &quot;libGL.so&quot;. If the file name was originally passed as &quot;/usr/lib/libGL&quot;, fileName() will return &quot;/usr/lib/libGL.so&quot;.</source>
          <target state="translated">예를 들어 Unix 플랫폼에서 &quot;GL&quot;라이브러리를 성공적으로로드하면 fileName ()이 &quot;libGL.so&quot;를 반환합니다. 파일 이름이 원래 &quot;/ usr / lib / libGL&quot;로 전달 된 경우 fileName ()은 &quot;/usr/lib/libGL.so&quot;를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4016de5a96b4cfafc8f1e891017fa9b6a0ddbe1a" translate="yes" xml:space="preserve">
          <source>For example, an &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; could have two handlers of the same type, one of which is enabled only if the required keyboard modifiers are pressed:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; 에는 동일한 유형의 처리기가 두 개있을 수 있으며 그 중 하나는 필요한 키보드 수정자를 누를 경우에만 활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="d69fbd83b0255d2dcf8c167725dc8a05e6b487da" translate="yes" xml:space="preserve">
          <source>For example, an application running in the</source>
          <target state="translated">예를 들어</target>
        </trans-unit>
        <trans-unit id="f70cb9b7b139aa3902bae6664929368ea418e939" translate="yes" xml:space="preserve">
          <source>For example, an application running in the fr_CA locale (French-speaking Canada) might call load(&quot;foo.fr_ca&quot;, &quot;/opt/foolib&quot;). load() would then try to open the first existing readable file from this list:</source>
          <target state="translated">예를 들어, fr_CA 로케일 (프랑스어를 사용하는 캐나다)에서 실행중인 응용 프로그램은 load ( &quot;foo.fr_ca&quot;, &quot;/ opt / foolib&quot;)를 호출 할 수 있습니다. 그런 다음 load ()는이 목록에서 첫 번째로 읽을 수있는 파일을 열려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="4ef2baab8293c15e9c87258ddb6232bf12356be2" translate="yes" xml:space="preserve">
          <source>For example, an application that changes the timezone would call timeZoneUpdated() after setting the new time zone:</source>
          <target state="translated">예를 들어, 시간대를 변경하는 응용 프로그램은 새 시간대를 설정 한 후 timeZoneUpdated ()를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="b487c169e499610ea488b68dc4079cfa155e305d" translate="yes" xml:space="preserve">
          <source>For example, an application wishing to query the list of hardware devices attached to the computer will probably communicate to a service available on the system bus, while the service providing opening of the user's web browser will be probably found on the session bus.</source>
          <target state="translated">예를 들어, 컴퓨터에 연결된 하드웨어 장치 목록을 쿼리하려는 응용 프로그램은 시스템 버스에서 사용 가능한 서비스와 통신하는 반면 사용자의 웹 브라우저를 여는 서비스는 세션 버스에서 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="60a87e043778fdfaa60e2066920509cf69bdc3f8" translate="yes" xml:space="preserve">
          <source>For example, an embedded cursor atlas with 8 cursor images per row can be specified as follows:</source>
          <target state="translated">예를 들어, 행당 8 개의 커서 이미지가있는 포함 된 커서 아틀라스는 다음과 같이 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="433499ff571842d319ffe5ec7386c98cfadc85d2" translate="yes" xml:space="preserve">
          <source>For example, an embedded cursor atlas with 8 cursor images per row can be specified like the following:</source>
          <target state="translated">예를 들어, 행당 8 개의 커서 이미지가있는 임베디드 커서 아틀라스는 다음과 같이 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbfbbcb647be4cb5331cf1565a65eed7259b15d8" translate="yes" xml:space="preserve">
          <source>For example, animating from 0 to 800 will take 4 seconds if a velocity of 200 is set, will take 8 seconds with a duration of 8000 set, and will take 4 seconds with both a velocity of 200 and a duration of 8000 set. Animating from 0 to 20000 will take 10 seconds if a velocity of 200 is set, will take 8 seconds with a duration of 8000 set, and will take 8 seconds with both a velocity of 200 and a duration of 8000 set.</source>
          <target state="translated">예를 들어, 200의 속도를 설정하면 0에서 800까지의 애니메이션에 4 초가 걸리고 8000의 지속 시간으로 8 초가 걸리고 200의 속도와 8000의 지속 시간으로 4 초가 걸립니다. 속도가 200으로 설정되어 있으면 0에서 20000까지 애니메이션하는 데 10 초가 걸리고 지속 시간이 8000으로 설정된 경우 8 초가 걸리고 속도가 200이고 지속 시간이 8000으로 설정된 경우 8 초가 걸립니다.</target>
        </trans-unit>
        <trans-unit id="4d174182c7c22013b6f4f52b55fee4d61a945411" translate="yes" xml:space="preserve">
          <source>For example, as shown in the diagram, we append three columns to a collection of six existing columns (ending in column 5), so</source>
          <target state="translated">예를 들어, 다이어그램에 표시된 것처럼 6 개의 기존 열 (5 열로 끝남) 모음에 3 개의 열을 추가하므로</target>
        </trans-unit>
        <trans-unit id="81c6ab6c71a068b08321ed1094c2d121bc2d400c" translate="yes" xml:space="preserve">
          <source>For example, as shown in the diagram, we append two rows to a collection of 4 existing rows (ending in row 3), so</source>
          <target state="translated">예를 들어, 다이어그램에서 볼 수 있듯이 기존 행 4 개 (행 3으로 끝남) 모음에 2 개의 행을 추가하므로</target>
        </trans-unit>
        <trans-unit id="7164eaba3411cc4b2097e4794d0b67fc9118fe9c" translate="yes" xml:space="preserve">
          <source>For example, as shown in the diagram, we insert three columns before column 4, so</source>
          <target state="translated">예를 들어 다이어그램에 표시된 것처럼 4 열 앞에 3 개의 열을 삽입하므로</target>
        </trans-unit>
        <trans-unit id="c1da9ff00edf71945501af53fd5721c3ad2e0dea" translate="yes" xml:space="preserve">
          <source>For example, as shown in the diagram, we insert three rows before row 2, so</source>
          <target state="translated">예를 들어 다이어그램에 표시된 것처럼 행 2 앞에 3 개의 행을 삽입하므로</target>
        </trans-unit>
        <trans-unit id="3c455c50dfb9b25a7eb67545a87fe61f54026165" translate="yes" xml:space="preserve">
          <source>For example, as shown in the diagram, we move one item from row 2 to row 0, so</source>
          <target state="translated">예를 들어, 다이어그램에 표시된 것처럼 하나의 항목을 2 행에서 0 행으로 이동하므로</target>
        </trans-unit>
        <trans-unit id="487ab13568eb44da7bf316043b8e466911616584" translate="yes" xml:space="preserve">
          <source>For example, as shown in the diagram, we move one item from row 2 to row 4, so</source>
          <target state="translated">예를 들어, 다이어그램에 표시된 것처럼 하나의 항목을 2 행에서 4 행으로 이동하므로</target>
        </trans-unit>
        <trans-unit id="8fc99a46cea498f2ac3cd2802bc7336ce66f1bcd" translate="yes" xml:space="preserve">
          <source>For example, as shown in the diagram, we move three rows from row 2 to 4 in the source, so</source>
          <target state="translated">예를 들어, 다이어그램에 표시된 것처럼 소스의 행 2에서 4로 3 개의 행을 이동하므로</target>
        </trans-unit>
        <trans-unit id="9d29ebc97ce59e225da04d369ae766886b41c95e" translate="yes" xml:space="preserve">
          <source>For example, as shown in the diagram, we move three rows to a collection of 6 existing rows (ending in row 5), so</source>
          <target state="translated">예를 들어 다이어그램에 표시된 것처럼 3 개의 행을 6 개의 기존 행 모음 (5 행으로 끝남)으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="95a8f87fc28173568552daece964cc3c9ca91c25" translate="yes" xml:space="preserve">
          <source>For example, as shown in the diagram, we remove the three columns from column 4 to column 6, so</source>
          <target state="translated">예를 들어 다이어그램에 표시된 것처럼 4 열에서 6 열까지 3 개의 열을 제거하므로</target>
        </trans-unit>
        <trans-unit id="a94ef0e308e30cbd5bc90efaf15c2a08534cba55" translate="yes" xml:space="preserve">
          <source>For example, as shown in the diagram, we remove the two rows from row 2 to row 3, so</source>
          <target state="translated">예를 들어, 다이어그램에 표시된 것처럼 2 행에서 3 행으로 두 행을 제거하므로</target>
        </trans-unit>
        <trans-unit id="69d4274eb8ee10f57e269625f0e24d42834ce630" translate="yes" xml:space="preserve">
          <source>For example, assume that you have a custom &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; for storing various measurements done on material samples, providing data for roles such as &quot;density&quot;, &quot;hardness&quot;, and &quot;conductivity&quot;. You could visualize these properties on a scatter graph using this proxy:</source>
          <target state="translated">예를 들어, 재료 샘플에 대해 수행 된 다양한 측정 값을 저장하고 &quot;밀도&quot;, &quot;경도&quot;및 &quot;전도도&quot;와 같은 역할에 대한 데이터를 제공 하는 사용자 지정 &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; 이 있다고 가정합니다 . 이 프록시를 사용하여 산점도 그래프에서 이러한 속성을 시각화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eec5b0873327f5cc8d62fa6bb12b266e79bc7496" translate="yes" xml:space="preserve">
          <source>For example, assume that you have a custom &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; for storing various monthly values related to a business. Each item in the model has the roles &quot;year&quot;, &quot;month&quot;, &quot;income&quot;, and &quot;expenses&quot;. You could do the following to display the data in a bar graph:</source>
          <target state="translated">예를 들어 비즈니스와 관련된 다양한 월별 값을 저장하기위한 사용자 정의 &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; 이 있다고 가정하십시오 . 모델의 각 항목에는 &quot;연도&quot;, &quot;월&quot;, &quot;소득&quot;및 &quot;비용&quot;역할이 있습니다. 다음을 수행하여 데이터를 막대 그래프로 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7553e6a2ad1896f377ce2e12c0adebfd525309e" translate="yes" xml:space="preserve">
          <source>For example, assume that you have a custom &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; storing surface topography data. Each item in the model has the roles &quot;longitude&quot;, &quot;latitude&quot;, and &quot;height&quot;. The item model already contains the data properly sorted so that longitudes and latitudes are first encountered in correct order, which enables us to utilize the row and column category autogeneration. You could do the following to display the data in a surface graph:</source>
          <target state="translated">예를 들어 표면 지형 데이터를 저장 하는 사용자 지정 &lt;a href=&quot;qabstractitemmodel&quot;&gt;QAbstractItemModel&lt;/a&gt; 이 있다고 가정합니다 . 모델의 각 항목에는 &quot;경도&quot;, &quot;위도&quot;및 &quot;높이&quot;역할이 있습니다. 항목 모델에는 경도와 위도가 먼저 올바른 순서로 표시되도록 데이터가 올바르게 정렬되어 있으므로 행 및 열 범주 자동 생성을 활용할 수 있습니다. 표면 그래프에 데이터를 표시하기 위해 다음을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9938c5cab270463124e36262d58209340510b491" translate="yes" xml:space="preserve">
          <source>For example, assuming our touchscreen has a device node of /dev/input/event5 and is a touchscreen integrated into the monitor connected via HDMI as the secondary screen, the following configuration ensures correct touch (and synthesized mouse) event translation:</source>
          <target state="translated">예를 들어 터치 스크린에 / dev / input / event5의 장치 노드가 있고 보조 화면으로 HDMI를 통해 연결된 모니터에 통합 된 터치 스크린이라고 가정하면 다음 구성은 올바른 터치 (및 합성 된 마우스) 이벤트 변환을 보장합니다.</target>
        </trans-unit>
        <trans-unit id="875c50adc9eb926c59b8ffbbfa641cf5bdee8a43" translate="yes" xml:space="preserve">
          <source>For example, assuming the &lt;code&gt;LoginWidget&lt;/code&gt; is a subclass of &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;LoginWidget&lt;/code&gt; 이 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 의 서브 클래스 라고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="4d5830e995ed3b7b28585628a100bb5462a3e501" translate="yes" xml:space="preserve">
          <source>For example, assuming the &lt;code&gt;LoginWidget&lt;/code&gt; is a subclass of &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="79bf53d4de501009b232600cbc4e0846be083d88" translate="yes" xml:space="preserve">
          <source>For example, assuming the existence of a DynamicText component:</source>
          <target state="translated">예를 들어 DynamicText 구성 요소가 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="9509a37fe24491f3b70f818b0562c615d782d5dd" translate="yes" xml:space="preserve">
          <source>For example, assuming the scenegraph is using Vulkan to render, one can redirect its output into a &lt;code&gt;VkImage&lt;/code&gt;. For graphics APIs like Vulkan, the image layout must be provided as well. &lt;a href=&quot;qquickrendertarget&quot;&gt;QQuickRenderTarget&lt;/a&gt; instances are implicitly shared and are copyable and can be passed by value. They do not own the associated native objects (such as, the VkImage in the example), however.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="5c4afb608082f7aa3b1ba275e1405ae40657f412" translate="yes" xml:space="preserve">
          <source>For example, below is a &lt;a href=&quot;qml-qtquick-grid&quot;&gt;Grid&lt;/a&gt; with 16 child rectangles, as created through a &lt;a href=&quot;qml-qtquick-repeater&quot;&gt;Repeater&lt;/a&gt;. Each &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; displays its index in the Grid using &lt;a href=&quot;qml-qtquick-positioner#index-attached-prop&quot;&gt;Positioner.index&lt;/a&gt;, and the first item is colored differently by taking &lt;a href=&quot;qml-qtquick-positioner#isFirstItem-attached-prop&quot;&gt;Positioner.isFirstItem&lt;/a&gt; into account:</source>
          <target state="translated">예를 들어, 아래는 &lt;a href=&quot;qml-qtquick-repeater&quot;&gt;Repeater를&lt;/a&gt; 통해 생성 된 16 개의 자식 사각형 이있는 &lt;a href=&quot;qml-qtquick-grid&quot;&gt;그리드&lt;/a&gt; 입니다 . 각 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 은 &lt;a href=&quot;qml-qtquick-positioner#index-attached-prop&quot;&gt;Positioner.index를&lt;/a&gt; 사용하여 격자에 색인을 표시하며 &lt;a href=&quot;qml-qtquick-positioner#isFirstItem-attached-prop&quot;&gt;Positioner.isFirstItem&lt;/a&gt; 을 고려 하여 첫 번째 항목의 색상이 다르게 표시 됩니다.</target>
        </trans-unit>
        <trans-unit id="55a78f4181a266940ee5328499f70a4834b51db9" translate="yes" xml:space="preserve">
          <source>For example, below is a &lt;code&gt;Button&lt;/code&gt; type with a &lt;code&gt;buttonText&lt;/code&gt; aliased property which is connected to the &lt;code&gt;text&lt;/code&gt; object of the &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; child:</source>
          <target state="translated">예를 들어, 아래는 &lt;a href=&quot;qml-qtquick-text&quot;&gt;text&lt;/a&gt; 하위 의 &lt;code&gt;text&lt;/code&gt; 객체에 연결된 &lt;code&gt;buttonText&lt;/code&gt; 별칭 속성 이있는 &lt;code&gt;Button&lt;/code&gt; 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="76c438b3c97b93bae2bb12e98bd9619cc0814636" translate="yes" xml:space="preserve">
          <source>For example, below is a &lt;code&gt;Message&lt;/code&gt; class with an &lt;code&gt;author&lt;/code&gt; property. As specified by the &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; macro call, this property is readable through the &lt;code&gt;author()&lt;/code&gt; method, and writable through the &lt;code&gt;setAuthor()&lt;/code&gt; method:</source>
          <target state="translated">예를 들어, 아래는 &lt;code&gt;author&lt;/code&gt; 속성 이있는 &lt;code&gt;Message&lt;/code&gt; 클래스입니다 . &lt;a href=&quot;qobject#Q_PROPERTY&quot;&gt;Q_PROPERTY&lt;/a&gt; 매크로 호출 로 지정된 대로이 특성은 &lt;code&gt;author()&lt;/code&gt; 메소드를 통해 읽을 수 있고 &lt;code&gt;setAuthor()&lt;/code&gt; 메소드를 통해 쓸 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ac9d28fe5dfc79d8a2d5285b37dd6c9b8a5dddf0" translate="yes" xml:space="preserve">
          <source>For example, below is a Grid that contains five rectangles of various sizes:</source>
          <target state="translated">예를 들어, 아래는 다양한 크기의 5 개의 사각형을 포함하는 격자입니다.</target>
        </trans-unit>
        <trans-unit id="77a3fdfcfe8e4bc67e27b43ddc66cf22af2882d3" translate="yes" xml:space="preserve">
          <source>For example, below is a document that declares a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; with a child &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt;. The document has been saved to file named &lt;code&gt;SquareButton.qml&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 아래는 자식 &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; 로 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 을 선언하는 문서입니다 . 문서가 &lt;code&gt;SquareButton.qml&lt;/code&gt; 파일에 저장되었습니다 .</target>
        </trans-unit>
        <trans-unit id="d8cd86e4b97cd223762e7daceb413f58e57f8b0c" translate="yes" xml:space="preserve">
          <source>For example, below is a modified version of the earlier example involving attached properties. This time, the delegate is an &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; and the colored &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; is a child of that item:</source>
          <target state="translated">예를 들어, 아래는 첨부 된 속성과 관련된 이전 예제의 수정 된 버전입니다. 이번에는 대리자가 &lt;a href=&quot;qml-qtquick-item&quot;&gt;항목&lt;/a&gt; 이고 색상이 지정된 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;사각형&lt;/a&gt; 은 해당 항목의 자식입니다.</target>
        </trans-unit>
        <trans-unit id="88f91f2135b16016aa1862e239531706d2c338ea" translate="yes" xml:space="preserve">
          <source>For example, below is a yellow &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; that contains a blue &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;. The blue rectangle is the top-most item in the hierarchy of the visual stacking order; it will visually rendered above the yellow rectangle. Since the blue rectangle sets propagateComposedEvents to true, and also sets &lt;a href=&quot;qml-qtquick-mouseevent#accepted-prop&quot;&gt;MouseEvent::accepted&lt;/a&gt; to false for all received &lt;code&gt;clicked&lt;/code&gt; events, any &lt;code&gt;clicked&lt;/code&gt; events it receives are propagated to the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; of the yellow rectangle beneath it.</source>
          <target state="translated">예를 들어 아래는 노란색입니다. &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;&lt;/a&gt; 파란색 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 이 포함 된 Rectangle 입니다 . 파란색 사각형은 시각적 스택 순서의 계층 구조에서 최상위 항목입니다. 노란색 사각형 위에 시각적으로 렌더링됩니다. true로 파란색 사각형 세트의 propagateComposedEvents 때문에, 또한 설정 &lt;a href=&quot;qml-qtquick-mouseevent#accepted-prop&quot;&gt;된 MouseEvent :: 받아&lt;/a&gt; 수신 된 모든 false로 &lt;code&gt;clicked&lt;/code&gt; 이벤트, 어떤 &lt;code&gt;clicked&lt;/code&gt; 이 수신 이벤트가 전파됩니다 &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; 그 아래 노란색 사각형.</target>
        </trans-unit>
        <trans-unit id="31780b65a04599d5e6a84809bac33a691dd30b5c" translate="yes" xml:space="preserve">
          <source>For example, below is an &lt;code&gt;items&lt;/code&gt; array and an &lt;code&gt;attributes&lt;/code&gt; map. Their contents can be examined using JavaScript &lt;code&gt;for&lt;/code&gt; loops. Individual array values are accessible by index, and individual map values are accessible by key:</source>
          <target state="translated">예를 들어 아래는 &lt;code&gt;items&lt;/code&gt; 배열 및 &lt;code&gt;attributes&lt;/code&gt; 맵입니다. JavaScript &lt;code&gt;for&lt;/code&gt; 루프를 사용하여 내용을 검사 할 수 있습니다 . 개별 배열 값은 색인으로 액세스 할 수 있으며 개별 맵 값은 키로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0325e50816a72c92ab7dd0a4a5c3dff896840391" translate="yes" xml:space="preserve">
          <source>For example, calling &lt;a href=&quot;qbytearray#split&quot;&gt;QByteArray::split&lt;/a&gt;() (a const member function) in a separate thread is done like this:</source>
          <target state="translated">예를 들어, 별도의 스레드에서 &lt;a href=&quot;qbytearray#split&quot;&gt;QByteArray :: split&lt;/a&gt; () (const 멤버 함수)를 호출 하면 다음과 같이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="8e718e58631c6720c967c46dce2e9a7f9ec824fa" translate="yes" xml:space="preserve">
          <source>For example, calling &lt;a href=&quot;qtextdocument#modified-prop&quot;&gt;setModified&lt;/a&gt;(false) on a document and then inserting text causes the signal to get emitted. If you undo that operation, causing the document to return to its original unmodified state, the signal will get emitted again.</source>
          <target state="translated">예를 들어, 문서에서 &lt;a href=&quot;qtextdocument#modified-prop&quot;&gt;setModified&lt;/a&gt; (false)를 호출 한 다음 텍스트를 삽입하면 신호가 방출됩니다. 해당 작업을 취소하여 문서가 수정되지 않은 원래 상태로 돌아 가면 신호가 다시 방출됩니다.</target>
        </trans-unit>
        <trans-unit id="da153f685707c03a39f1d9b9eac87c4d90a30ec5" translate="yes" xml:space="preserve">
          <source>For example, calling setModified(false) on a document and then inserting text causes the signal to get emitted. If you undo that operation, causing the document to return to its original unmodified state, the signal will get emitted again.</source>
          <target state="translated">예를 들어, 문서에서 setModified (false)를 호출 한 다음 텍스트를 삽입하면 신호가 방출됩니다. 해당 작업을 취소하여 문서가 수정되지 않은 원래 상태로 돌아 가면 신호가 다시 방출됩니다.</target>
        </trans-unit>
        <trans-unit id="47df3e280fa4b5057d78fa1a65dc58725a6fcb54" translate="yes" xml:space="preserve">
          <source>For example, consider a &lt;a href=&quot;qpushbutton&quot;&gt;QPushButton&lt;/a&gt; inside a &lt;a href=&quot;qgroupbox&quot;&gt;QGroupBox&lt;/a&gt;:</source>
          <target state="translated">예를 들어 &lt;a href=&quot;qpushbutton&quot;&gt;&lt;/a&gt;&lt;a href=&quot;qgroupbox&quot;&gt; QGroupBox&lt;/a&gt; 내부의 QPushButton을 .</target>
        </trans-unit>
        <trans-unit id="fee60ce2fa28f8167ab98e0794bb5def35c67b5a" translate="yes" xml:space="preserve">
          <source>For example, consider the following QML snippet:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="81c81df7a8ee44ac122abf1008d5792649aa4acd" translate="yes" xml:space="preserve">
          <source>For example, consider the following assignment in a project file:</source>
          <target state="translated">예를 들어, 프로젝트 파일에서 다음 지정을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="ac01306a20857038c2ac22e97c91b721922733f5" translate="yes" xml:space="preserve">
          <source>For example, consider the following example:</source>
          <target state="translated">예를 들어, 다음 예를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="3d1807257e251f38cc9ff55f2efc138a0125fe11" translate="yes" xml:space="preserve">
          <source>For example, consider the following imperative assignment:</source>
          <target state="translated">예를 들어 다음 명령 할당을 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="94d27d072fe24fed6b9cd46a63170b729cbf949f" translate="yes" xml:space="preserve">
          <source>For example, consider the following project directory structure:</source>
          <target state="translated">예를 들어, 다음 프로젝트 디렉토리 구조를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="f0dfe4ba00787c4e92c79d072aa1c939b7b1a6d4" translate="yes" xml:space="preserve">
          <source>For example, consider the following two classes:</source>
          <target state="translated">예를 들어 다음 두 클래스를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="2ff953bd7eb4bb3de7b259276590ed9556b93a8f" translate="yes" xml:space="preserve">
          <source>For example, consider this content in &lt;code&gt;http://example.com/mystuff/test.qml&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;http://example.com/mystuff/test.qml&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f08d93a80c2a5305afe762ff86bd0e898e06c815" translate="yes" xml:space="preserve">
          <source>For example, define two subdirectories, both of which reside in a different directory than the &lt;code&gt;SUBDIRS&lt;/code&gt; value, and one of the subdirectories must be built before the other:</source>
          <target state="translated">예를 들어, 두 개의 서브 디렉토리를 정의하십시오. &lt;code&gt;SUBDIRS&lt;/code&gt; 값과 하고 서브 디렉토리 중 하나를 빌드 해야합니다.</target>
        </trans-unit>
        <trans-unit id="ec5ce86a1f0ab61c1bdecadabb6fede015384f86" translate="yes" xml:space="preserve">
          <source>For example, disable antialiasing on C++ application:</source>
          <target state="translated">예를 들어 C ++ 응용 프로그램에서 앤티 앨리어싱을 비활성화하십시오.</target>
        </trans-unit>
        <trans-unit id="e9f7a6af3587147a2260f386fa5e3dbd4d778610" translate="yes" xml:space="preserve">
          <source>For example, discovering all connected screens and creating a &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; for each of them can be done like this:</source>
          <target state="translated">예를 들어 연결된 모든 화면을 검색하고 각 화면에 대한 &lt;a href=&quot;qquickview&quot;&gt;QQuickView&lt;/a&gt; 를 만드는 것은 다음 과 같이 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="843618f06143f1467578109797eb261527963aba" translate="yes" xml:space="preserve">
          <source>For example, doing &lt;code&gt;export QT_QPA_EVDEV_TOUCHSCREEN_PARAMETERS=/dev/input/event5:rotate=180&lt;/code&gt; before launching applications results in an explicitly specified touch device and flipping the coordinates - useful when the orientation of the actual screen and the touch screen do not match.</source>
          <target state="translated">예를 들어, 응용 프로그램을 시작하기 전에 &lt;code&gt;export QT_QPA_EVDEV_TOUCHSCREEN_PARAMETERS=/dev/input/event5:rotate=180&lt;/code&gt; 수행 하면 명시 적으로 지정된 터치 장치가 생성되고 좌표가 반전됩니다. 실제 화면과 터치 스크린의 방향이 일치하지 않을 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="35f4af7ae29feaf16378fb4620e9e10e414f2efe" translate="yes" xml:space="preserve">
          <source>For example, enable antialiasing for direct rendering modes on QML application:</source>
          <target state="translated">예를 들어, QML 애플리케이션에서 직접 렌더링 모드에 앤티 앨리어싱을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2e20a567b4f544958deb939bfe9c3df2b52333c3" translate="yes" xml:space="preserve">
          <source>For example, for a model like this:</source>
          <target state="translated">예를 들어 다음과 같은 모델의 경우 :</target>
        </trans-unit>
        <trans-unit id="0a5112de1f50efcf2dc763eb0c201b9f4891ae84" translate="yes" xml:space="preserve">
          <source>For example, for a simple QML file like this:</source>
          <target state="translated">예를 들어 다음과 같은 간단한 QML 파일의 경우 :</target>
        </trans-unit>
        <trans-unit id="286787940b3d3891a43673555c389540b52e245c" translate="yes" xml:space="preserve">
          <source>For example, for the &lt;code&gt;en_US&lt;/code&gt; locale, these format strings are used:</source>
          <target state="translated">예를 들어 &lt;code&gt;en_US&lt;/code&gt; 로케일의 경우 다음 형식 문자열이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a977faecafec14762de7e64287f95b749d451580" translate="yes" xml:space="preserve">
          <source>For example, for the following QML code:</source>
          <target state="translated">예를 들어, 다음 QML 코드의 경우 :</target>
        </trans-unit>
        <trans-unit id="0a5bb5637c2c1ae4c16d49dd6aee0a76f22ea709" translate="yes" xml:space="preserve">
          <source>For example, for the time zone &quot;Europe/Berlin&quot; the DST offset is +3600 seconds. During standard time daylightTimeOffset() will return 0, and when daylight-saving is in effect it will return +3600.</source>
          <target state="translated">예를 들어 시간대 &quot;유럽 / 베를린&quot;의 경우 DST 오프셋은 +3600 초입니다. 표준 시간 동안 daylightTimeOffset ()은 0을 반환하고 일광 절약 시간이 적용되면 +3600을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3d754da7da46c7bcb50f7728d85dfd417670846d" translate="yes" xml:space="preserve">
          <source>For example, for the time zone &quot;Europe/Berlin&quot; the standard time offset is +3600 seconds and the DST offset is +3600 seconds. During standard time offsetFromUtc() will return +3600 (UTC+01:00), and during DST it will return +7200 (UTC+02:00).</source>
          <target state="translated">예를 들어 &quot;유럽 / 베를린&quot;시간대의 표준 시간 오프셋은 +3600 초이고 DST 오프셋은 +3600 초입니다. 표준 시간 동안 offsetFromUtc ()는 +3600 (UTC + 01 : 00)을 반환하고 DST 동안 +7200 (UTC + 02 : 00)을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f9055c0a210c70921339af1023889816ccb33997" translate="yes" xml:space="preserve">
          <source>For example, for the time zone &quot;Europe/Berlin&quot; the standard time offset is +3600 seconds. During both standard and DST &lt;a href=&quot;qtimezone#offsetFromUtc&quot;&gt;offsetFromUtc&lt;/a&gt;() will return +3600 (UTC+01:00).</source>
          <target state="translated">예를 들어 &quot;유럽 / 베를린&quot;시간대의 표준 시간 오프셋은 +3600 초입니다. 표준 및 DST &lt;a href=&quot;qtimezone#offsetFromUtc&quot;&gt;오프셋에서 FromFromUtc&lt;/a&gt; ()는 +3600 (UTC + 01 : 00)을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="154f75be4111529c2fc190bad326217c2647b020" translate="yes" xml:space="preserve">
          <source>For example, for time zone &quot;Europe/Berlin&quot; the OffsetDate in standard and DST might be:</source>
          <target state="translated">예를 들어 시간대 &quot;유럽 / 베를린&quot;의 경우 표준 및 DST의 OffsetDate는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="25e3b4edf7fe26ae595268322e3a9b6fe4b24d4a" translate="yes" xml:space="preserve">
          <source>For example, given a file &lt;code&gt;main.qml&lt;/code&gt; like this:</source>
          <target state="translated">예를 들어 다음 과 같이 &lt;code&gt;main.qml&lt;/code&gt; 파일 이 주어집니다 .</target>
        </trans-unit>
        <trans-unit id="17b88f026a698666eb9f3474e3aeaac050b6b18d" translate="yes" xml:space="preserve">
          <source>For example, given the skeleton above, if a vertex has these attributes:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="267d3240ef9955d298bccdbbf189aec4cf05f81f" translate="yes" xml:space="preserve">
          <source>For example, given these definitions:</source>
          <target state="translated">예를 들어 다음과 같은 정의가 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="3e5aa9f6352aa21cb162ac1693696536c7787cc9" translate="yes" xml:space="preserve">
          <source>For example, here are the stream operators declared as non-members of the &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; class:</source>
          <target state="translated">예를 들어, 다음은 &lt;a href=&quot;qimage&quot;&gt;QImage&lt;/a&gt; 클래스 의 비 멤버로 선언 된 스트림 연산자입니다 .</target>
        </trans-unit>
        <trans-unit id="d13607fe4b7a4c29f2d9a015b052196ee995c1ab" translate="yes" xml:space="preserve">
          <source>For example, here is a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; that displays a list of animals, separated into sections. Each item in the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; is placed in a different section depending on the &quot;size&quot; property of the model item. The &lt;code&gt;sectionHeading&lt;/code&gt; delegate component provides the light blue bar that marks the beginning of each section.</source>
          <target state="translated">예를 들어, 다음은 섹션으로 구분 된 동물 목록을 표시 하는 &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; 입니다. &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView의&lt;/a&gt; 각 항목 은 모델 항목의 &quot;size&quot;속성에 따라 다른 섹션에 배치됩니다. &lt;code&gt;sectionHeading&lt;/code&gt; 대표 성분 부호 각 섹션의 시작이라는 하늘색 바를 제공한다.</target>
        </trans-unit>
        <trans-unit id="ebd62d6d6c76fdf53a16bf5aa50e6d2b10658024" translate="yes" xml:space="preserve">
          <source>For example, here is a &lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt; that sets the image's &lt;a href=&quot;qml-qtquick-item#opacity-prop&quot;&gt;opacity&lt;/a&gt; property to &lt;code&gt;.5&lt;/code&gt;, animates the width of the image, then sets &lt;a href=&quot;qml-qtquick-item#opacity-prop&quot;&gt;opacity&lt;/a&gt; back to &lt;code&gt;1&lt;/code&gt;:</source>
          <target state="translated">예를 들어 다음은 이미지의 &lt;a href=&quot;qml-qtquick-item#opacity-prop&quot;&gt;불투명도&lt;/a&gt; 속성을 &lt;code&gt;.5&lt;/code&gt; 로 설정하고 이미지의 너비에 애니메이션을 적용한 다음 &lt;a href=&quot;qml-qtquick-item#opacity-prop&quot;&gt;불투명도를&lt;/a&gt; 다시 &lt;code&gt;1&lt;/code&gt; 로 설정 하는 &lt;a href=&quot;qml-qtquick-sequentialanimation&quot;&gt;SequentialAnimation&lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="b632be24bc8e78799d8956c3d19e87c7d8d0e0f3" translate="yes" xml:space="preserve">
          <source>For example, here is a QML item that refers to a &lt;code&gt;currentDateTime&lt;/code&gt; value that does not exist in the current scope:</source>
          <target state="translated">예를 들어, 다음은 현재 범위에 존재하지 않는 &lt;code&gt;currentDateTime&lt;/code&gt; 값을 나타내는 QML 항목입니다 .</target>
        </trans-unit>
        <trans-unit id="74d81b92c38ff076e9813b0b69e16a01312b405b" translate="yes" xml:space="preserve">
          <source>For example, here is a component that is used by multiple &lt;a href=&quot;qml-qtquick-loader&quot;&gt;Loader&lt;/a&gt; objects. It contains a single item, a &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;:</source>
          <target state="translated">예를 들어 다음은 여러 &lt;a href=&quot;qml-qtquick-loader&quot;&gt;Loader&lt;/a&gt; 객체에서 사용하는 구성 요소입니다 . 단일 항목 인 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle을 포함합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5f9d8e875bccae2b7f1f0ca7a3344d771d076c32" translate="yes" xml:space="preserve">
          <source>For example, here is a simple interactive file system browser. When a directory name is clicked, the view's &lt;code&gt;rootIndex&lt;/code&gt; is set to the &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; node of the clicked directory, thus updating the view to show the new directory's contents.</source>
          <target state="translated">예를 들어 다음은 간단한 대화식 파일 시스템 브라우저입니다. 디렉토리 이름을 클릭하면보기의 &lt;code&gt;rootIndex&lt;/code&gt; 가 클릭 한 디렉토리 의 &lt;a href=&quot;qmodelindex&quot;&gt;QModelIndex&lt;/a&gt; 노드로 설정되어 새 디렉토리의 내용을 표시하도록보기가 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="a76d36331af6db4ac017523ebf2b7bc138ac4a56" translate="yes" xml:space="preserve">
          <source>For example, here is a view that specifies such a transition:</source>
          <target state="translated">예를 들어, 다음은 이러한 전환을 지정하는보기입니다.</target>
        </trans-unit>
        <trans-unit id="1e419585f6d3dcfd8913716093123adf807101f0" translate="yes" xml:space="preserve">
          <source>For example, here is an example of how you can access a property of the accelerometer. This code does not require any compile-time links to &lt;a href=&quot;qaccelerometer&quot;&gt;QAccelerometer&lt;/a&gt; or &lt;a href=&quot;qaccelerometerreading&quot;&gt;QAccelerometerReading&lt;/a&gt;.</source>
          <target state="translated">예를 들어 다음은 가속도계의 속성에 액세스하는 방법의 예입니다. 이 코드에는 &lt;a href=&quot;qaccelerometer&quot;&gt;QAccelerometer&lt;/a&gt; 또는 &lt;a href=&quot;qaccelerometerreading&quot;&gt;QAccelerometerReading에&lt;/a&gt; 대한 컴파일 타임 링크가 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="a7fd290d625147a78c82bedddde98171cf3f78fa" translate="yes" xml:space="preserve">
          <source>For example, here's how to delete all the widgets stored in a &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt;&amp;lt;&lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *&amp;gt;:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qlist&quot;&gt;QList&lt;/a&gt; &amp;lt; &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; *&amp;gt;에 저장된 모든 위젯을 삭제하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2f324c62317a7ced44698337a64473adc419f2f4" translate="yes" xml:space="preserve">
          <source>For example, here's the definition of an interface class:</source>
          <target state="translated">예를 들어, 인터페이스 클래스의 정의는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ae0ecd674aacb5669b70aeecfe9f25bbc7fd64d4" translate="yes" xml:space="preserve">
          <source>For example, if &lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle#minimumValueAngle-prop&quot;&gt;minimumValueAngle&lt;/a&gt; is set to &lt;code&gt;270&lt;/code&gt; and &lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle#maximumValueAngle-prop&quot;&gt;maximumValueAngle&lt;/a&gt; is set to &lt;code&gt;90&lt;/code&gt;, this function will return &lt;code&gt;270&lt;/code&gt; when passed minimumValue and &lt;code&gt;90&lt;/code&gt; when passed maximumValue.</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle#minimumValueAngle-prop&quot;&gt;minimumValueAngle이&lt;/a&gt; 설정된다 &lt;code&gt;270&lt;/code&gt; 및 &lt;a href=&quot;qml-qtquick-controls-styles-circulargaugestyle#maximumValueAngle-prop&quot;&gt;maximumValueAngle가&lt;/a&gt; 설정된다 &lt;code&gt;90&lt;/code&gt; 이 함수는 반환 &lt;code&gt;270&lt;/code&gt; minimumValue 통과 할 때 &lt;code&gt;90&lt;/code&gt; maximumValue 전달 될 때.</target>
        </trans-unit>
        <trans-unit id="02345983253012c262d56b7201f6bb207c371377" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;/opt/MyApp/lib/imports&lt;/code&gt; is in the path, then QML that imports &lt;code&gt;com.mycompany.Feature&lt;/code&gt; will cause the &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; to look in &lt;code&gt;/opt/MyApp/lib/imports/com/mycompany/Feature/&lt;/code&gt; for the components provided by that module. A &lt;code&gt;qmldir&lt;/code&gt; file is required for defining the type version mapping and possibly QML extensions plugins.</source>
          <target state="translated">예를 들어, &lt;code&gt;/opt/MyApp/lib/imports&lt;/code&gt; 가 경로에있는 경우 &lt;code&gt;com.mycompany.Feature&lt;/code&gt; 를 가져 오는 QML 은 &lt;a href=&quot;qqmlengine&quot;&gt;QQmlEngine&lt;/a&gt; 이 &lt;code&gt;/opt/MyApp/lib/imports/com/mycompany/Feature/&lt;/code&gt; 를 찾도록 합니다. 해당 모듈에서 제공하는 구성 요소. &lt;code&gt;qmldir&lt;/code&gt; 의 설정 파일은 QML 확장 플러그인 타입 버전 매핑을 정의하고 필요합니다.</target>
        </trans-unit>
        <trans-unit id="d886f809e6198a6830c1a95643d7058f2832daa4" translate="yes" xml:space="preserve">
          <source>For example, if &lt;code&gt;BaseType&lt;/code&gt; is changed and now has a revision 1, you can specify that your type uses the new revision:</source>
          <target state="translated">예를 들어, &lt;code&gt;BaseType&lt;/code&gt; 이 변경되고 이제 개정 1이있는 경우 유형이 새 개정을 사용하도록 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5d9496dd75f8505223a7500dfc87869ba2d0ce3" translate="yes" xml:space="preserve">
          <source>For example, if a property is a real, and if you try to assign a string to it, you will get an error:</source>
          <target state="translated">예를 들어 속성이 실제이고 문자열을 할당하려고하면 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b02d93aa321191394ace375e7451444ace9713fa" translate="yes" xml:space="preserve">
          <source>For example, if a user presses the Right key, heuristics determine whether there is an element they might be trying to reach towards the right and which element they probably want.</source>
          <target state="translated">예를 들어, 사용자가 Right 키를 누르면 휴리스틱은 오른쪽으로 접근하려는 요소가 있는지 여부와 원하는 요소를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="bcddc89042cc4de790a086302674b0affd3400d8" translate="yes" xml:space="preserve">
          <source>For example, if above role for &quot;pubDate&quot; was defined like this instead:</source>
          <target state="translated">예를 들어, &quot;pubDate&quot;에 대한 위의 역할이 다음과 같이 정의 된 경우 :</target>
        </trans-unit>
        <trans-unit id="9cc62149622db4237aab55a967ed7ca78b7ba8ac" translate="yes" xml:space="preserve">
          <source>For example, if an object used to have the focus but loses it, the object's state will have focused set to &lt;code&gt;false&lt;/code&gt;. This event on the other hand tells about the change and has focused set to &lt;code&gt;true&lt;/code&gt; since the focus state is changed from &lt;code&gt;true&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 객체에 포커스가 있었지만 잃어버린 경우 객체의 상태는 포커스가 &lt;code&gt;false&lt;/code&gt; 로 설정됩니다 . 반면에이 이벤트는 변경에 대해 알려주고 포커스 상태가 &lt;code&gt;true&lt;/code&gt; 에서 &lt;code&gt;false&lt;/code&gt; 로 변경되었으므로 포커스 를 &lt;code&gt;true&lt;/code&gt; 로 설정했습니다 .</target>
        </trans-unit>
        <trans-unit id="e6b90332ad2af4f5dc3eb399396a32011410b03a" translate="yes" xml:space="preserve">
          <source>For example, if in a vertical view the delegate is 20 pixels high and &lt;code&gt;displayMarginBeginning&lt;/code&gt; and &lt;code&gt;displayMarginEnd&lt;/code&gt; are both set to 40, then 2 delegates above and 2 delegates below will be created and shown.</source>
          <target state="translated">예를 들어 세로보기에서 델리게이트의 높이가 20 픽셀이고 &lt;code&gt;displayMarginBeginning&lt;/code&gt; 및 &lt;code&gt;displayMarginEnd&lt;/code&gt; 가 모두 40으로 설정되면 위의 2 개의 델리게이트와 아래의 2 개의 델리게이트가 만들어져 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="45d1d795d7cc56782a5a0a2353c0be751990514c" translate="yes" xml:space="preserve">
          <source>For example, if in a vertical view the delegate is 20 pixels high, there are 3 columns, and &lt;code&gt;displayMarginBeginning&lt;/code&gt; and &lt;code&gt;displayMarginEnd&lt;/code&gt; are both set to 40, then 6 delegates above and 6 delegates below will be created and shown.</source>
          <target state="translated">예를 들어 세로보기에서 델리게이트의 높이가 20 픽셀 인 경우 열이 3 &lt;code&gt;displayMarginBeginning&lt;/code&gt; 및 &lt;code&gt;displayMarginEnd&lt;/code&gt; 가 모두 40으로 설정되면 위의 6 개의 델리게이트와 아래의 6 개의 델리게이트가 만들어져 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="493985e967a2d622c1fe25b4078e6817aa3f3470" translate="yes" xml:space="preserve">
          <source>For example, if only the English and Arabic languages provide digits layout, then other locales using the shared default layout are ignored.</source>
          <target state="translated">예를 들어 영어 및 아랍어 만 숫자 레이아웃을 제공하는 경우 공유 기본 레이아웃을 사용하는 다른 로캘은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="c3e35e18f0db4677c72dc4ee03e215f5ce90f5ff" translate="yes" xml:space="preserve">
          <source>For example, if the &lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPlugin&lt;/a&gt; supports the BMP format,</source>
          <target state="translated">예를 들어 &lt;a href=&quot;qimageioplugin&quot;&gt;QImageIOPlugin&lt;/a&gt; 이 BMP 형식을 지원하는 경우</target>
        </trans-unit>
        <trans-unit id="6b3f75093f0532cee17964fd7ea8538476827314" translate="yes" xml:space="preserve">
          <source>For example, if the &lt;code&gt;myapp&lt;/code&gt; directory in the previous example was hosted at &quot;http://www.my-example-server.com&quot;, and the &lt;code&gt;mycomponents&lt;/code&gt; directory contained a &lt;code&gt;qmldir&lt;/code&gt; file defined as follows:</source>
          <target state="translated">예를 들어, 이전 예제 의 &lt;code&gt;myapp&lt;/code&gt; 디렉토리가 &quot;http://www.my-example-server.com&quot;에 호스트되고 &lt;code&gt;mycomponents&lt;/code&gt; 디렉토리에 다음과 같이 정의 된 &lt;code&gt;qmldir&lt;/code&gt; 파일이 포함 된 경우 :</target>
        </trans-unit>
        <trans-unit id="c2c0c93c8dd53a6726da6acd80d6110c8d258bb5" translate="yes" xml:space="preserve">
          <source>For example, if the &lt;code&gt;projects.MyQMLProject.MyFunctions&lt;/code&gt; module is specified with the following &lt;code&gt;qmldir&lt;/code&gt; file, and installed into the QML import path:</source>
          <target state="translated">예를 들어, &lt;code&gt;projects.MyQMLProject.MyFunctions&lt;/code&gt; 모듈이 다음 &lt;code&gt;qmldir&lt;/code&gt; 파일 과 함께 지정되고 QML 가져 오기 경로에 설치된 경우 :</target>
        </trans-unit>
        <trans-unit id="d66e1b5f33dc8d5b8e8ef324e1dacf2ebd98e11b" translate="yes" xml:space="preserve">
          <source>For example, if the XML document looks like this:</source>
          <target state="translated">예를 들어 XML 문서가 다음과 같은 경우</target>
        </trans-unit>
        <trans-unit id="c8f2576beb1845340d3b8071a7454da0d75918a8" translate="yes" xml:space="preserve">
          <source>For example, if the action is assigned to a menu item and a toolbar button, the action is toggled when the control is toggled, the shortcut is activated, or when &lt;a href=&quot;qml-qtquick-controls2-action#toggle-method&quot;&gt;toggle()&lt;/a&gt; is called directly.</source>
          <target state="translated">예를 들어, 작업이 메뉴 항목 및 도구 모음 버튼에 할당 된 경우 컨트롤이 전환되거나 바로 가기가 활성화되거나 &lt;a href=&quot;qml-qtquick-controls2-action#toggle-method&quot;&gt;toggle ()&lt;/a&gt; 이 직접 호출 될 때 작업이 전환 됩니다.</target>
        </trans-unit>
        <trans-unit id="31f6165ac3776ff3ea572758679c5e50c9b940bf" translate="yes" xml:space="preserve">
          <source>For example, if the action is assigned to a menu item and a toolbar button, the action is triggered when the control is clicked, the shortcut is activated, or when &lt;a href=&quot;qml-qtquick-controls2-action#trigger-method&quot;&gt;trigger()&lt;/a&gt; is called directly.</source>
          <target state="translated">예를 들어, 작업이 메뉴 항목 및 도구 모음 버튼에 할당 된 경우 컨트롤을 클릭하거나 바로 가기가 활성화되거나 &lt;a href=&quot;qml-qtquick-controls2-action#trigger-method&quot;&gt;trigger ()&lt;/a&gt; 가 직접 호출 될 때 작업이 트리거 됩니다.</target>
        </trans-unit>
        <trans-unit id="f814109688732ad42ee26efd7f8c36501730a37b" translate="yes" xml:space="preserve">
          <source>For example, if the address is 127.0.0.1, the returned value is 2130706433 (i.e. 0x7f000001).</source>
          <target state="translated">예를 들어, 주소가 127.0.0.1이면 리턴 값은 2130706433 (즉, 0x7f000001)입니다.</target>
        </trans-unit>
        <trans-unit id="6abd3ebffae3d407f4b4e30fbcaaaae47c2689ce" translate="yes" xml:space="preserve">
          <source>For example, if the address is the IPv4 address 127.0.0.1, the returned string is &quot;127.0.0.1&quot;. For IPv6 the string format will follow the RFC5952 recommendation. For &lt;a href=&quot;qhostaddress#SpecialAddress-enum&quot;&gt;QHostAddress::Any&lt;/a&gt;, its IPv4 address will be returned (&quot;0.0.0.0&quot;)</source>
          <target state="translated">예를 들어 주소가 IPv4 주소 127.0.0.1 인 경우 반환되는 문자열은 &quot;127.0.0.1&quot;입니다. IPv6의 경우 문자열 형식은 RFC5952 권장 사항을 따릅니다. 들어 &lt;a href=&quot;qhostaddress#SpecialAddress-enum&quot;&gt;QHostAddress : 모든&lt;/a&gt; 그것의 IPv4 주소가 반환됩니다 ( &quot;0.0.0.0&quot;)</target>
        </trans-unit>
        <trans-unit id="7f12e0ae9669fdb81b7c12ed5b3a1f68a4baee9f" translate="yes" xml:space="preserve">
          <source>For example, if the alternative keys contains &quot;&amp;ccedil;cċčć&quot; and the key &lt;code&gt;text&lt;/code&gt; is &quot;c&quot;, this index will become 1 and the effective alternative keys presented to user will be &quot;&amp;ccedil;[ċ]čć&quot;.</source>
          <target state="translated">예를 들어, 대체 키에 &quot;&amp;ccedil;cċčć&quot;가 포함되어 있고 키 &lt;code&gt;text&lt;/code&gt; 가 &quot;c&quot;인 경우이 색인은 1이되고 사용자에게 제시된 효과적인 대체 키는 &quot;&amp;ccedil; [ċ] čć&quot;이됩니다.</target>
        </trans-unit>
        <trans-unit id="d0fab37f6413d0edfbd26e6e46a3192da0d35f81" translate="yes" xml:space="preserve">
          <source>For example, if the current argument is an INT32, this function will return a &lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt; with an argument of type &lt;a href=&quot;qmetatype#Type-enum&quot;&gt;QMetaType::Int&lt;/a&gt;. For an array of INT32, it will return a &lt;a href=&quot;qtcore-changes-qt6#qvariant&quot;&gt;QVariant&lt;/a&gt; containing a &lt;a href=&quot;dbus-changes-qt6#qdbusargument&quot;&gt;QDBusArgument&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="797500501ad380b1d1a0b34da494ac8a5927ecfe" translate="yes" xml:space="preserve">
          <source>For example, if the current argument is an INT32, this function will return a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; with an argument of type QVariant::Int. For an array of INT32, it will return a &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; containing a &lt;a href=&quot;qdbusargument&quot;&gt;QDBusArgument&lt;/a&gt;.</source>
          <target state="translated">예를 들어, 현재 인수가 INT32 인 경우이 함수는 QVariant :: Int 유형의 인수와 함께 &lt;a href=&quot;qvariant&quot;&gt;QVariant&lt;/a&gt; 를 리턴합니다 . INT32 배열의 경우 &lt;a href=&quot;qvariant&quot;&gt;QDBusArgument가&lt;/a&gt; 포함 된 &lt;a href=&quot;qdbusargument&quot;&gt;QVariant를&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="631c547a6d9968d9f835d071309b7076c285b244" translate="yes" xml:space="preserve">
          <source>For example, if the following date/time value was specified:</source>
          <target state="translated">예를 들어, 다음 날짜 / 시간 값이 지정된 경우 :</target>
        </trans-unit>
        <trans-unit id="6f6b53130166765123f61a36b52727ce0347c748" translate="yes" xml:space="preserve">
          <source>For example, if the locale is &lt;code&gt;en_US&lt;/code&gt; and</source>
          <target state="translated">예를 들어 로케일이 &lt;code&gt;en_US&lt;/code&gt; 이고</target>
        </trans-unit>
        <trans-unit id="b0e32162e66be38a49db79e71875b962cfae3d9a" translate="yes" xml:space="preserve">
          <source>For example, if the mouse position of the click is stored in &lt;code&gt;startPos&lt;/code&gt; and the current position (e.g. in the mouse move event) is &lt;code&gt;currentPos&lt;/code&gt;, you can find out if a drag should be started with code like this:</source>
          <target state="translated">예를 들어, 클릭의 마우스 위치가 &lt;code&gt;startPos&lt;/code&gt; 에 저장되고 현재 위치 (예 : 마우스 이동 이벤트)가 &lt;code&gt;currentPos&lt;/code&gt; 인 경우 다음과 같은 코드로 드래그를 시작해야하는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a7fbda558698e5c2dc297135df55ee93bdf76ec" translate="yes" xml:space="preserve">
          <source>For example, if the path to</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="26573ae11e582f0176dc84e92dd3c844790c2257" translate="yes" xml:space="preserve">
          <source>For example, if the regular expression is &lt;b&gt;\w\d\d&lt;/b&gt; (word-character, digit, digit) then &quot;A57&quot; is &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Acceptable&lt;/a&gt;, &quot;E5&quot; is &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Intermediate&lt;/a&gt;, and &quot;+9&quot; is &lt;a href=&quot;qvalidator#State-enum&quot;&gt;Invalid&lt;/a&gt;.</source>
          <target state="translated">예를 들어 정규식이 &lt;b&gt;\ w \ d \ d&lt;/b&gt; (단어 문자, 숫자, 숫자)이면 &quot;A57&quot;은 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;허용 가능&lt;/a&gt; 하고 &quot;E5&quot;는 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;중간&lt;/a&gt; 이며 &quot;+9&quot;는 &lt;a href=&quot;qvalidator#State-enum&quot;&gt;유효하지 않습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="439870828d6c270f70bdd242ce429e6434230ade" translate="yes" xml:space="preserve">
          <source>For example, if the regular expression is &lt;b&gt;blue&lt;/b&gt;, then exactMatch() returns &lt;code&gt;true&lt;/code&gt; only for input &lt;code&gt;blue&lt;/code&gt;. For inputs &lt;code&gt;bluebell&lt;/code&gt;, &lt;code&gt;blutak&lt;/code&gt; and &lt;code&gt;lightblue&lt;/code&gt;, exactMatch() returns &lt;code&gt;false&lt;/code&gt; and &lt;a href=&quot;qregexp#matchedLength&quot;&gt;matchedLength&lt;/a&gt;() will return 4, 3 and 0 respectively.</source>
          <target state="translated">예를 들어, 정규식이 &lt;b&gt;blue&lt;/b&gt; 인 경우 exactMatch ()는 입력 &lt;code&gt;blue&lt;/code&gt; 에 대해서만 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 . &lt;code&gt;bluebell&lt;/code&gt; , &lt;code&gt;blutak&lt;/code&gt; 및 &lt;code&gt;lightblue&lt;/code&gt; 입력의 경우 exactMatch ()는 &lt;code&gt;false&lt;/code&gt; 를 반환 하고 &lt;a href=&quot;qregexp#matchedLength&quot;&gt;matchedLength&lt;/a&gt; ()는 각각 4, 3 및 0을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="abc56fca68491f02bf37c30b91e8d7e46c88567a" translate="yes" xml:space="preserve">
          <source>For example, if the scene makes use of &lt;a href=&quot;qml-qt3d-logic-frameaction&quot;&gt;FrameAction&lt;/a&gt;, the &lt;code&gt;&quot;logic&quot;&lt;/code&gt; aspect should be included in the list.</source>
          <target state="translated">예를 들어 장면에서 &lt;a href=&quot;qml-qt3d-logic-frameaction&quot;&gt;FrameAction&lt;/a&gt; 을 사용하는 경우 &lt;code&gt;&quot;logic&quot;&lt;/code&gt; 측면이 목록에 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="6197edd91f2c88bb58dd50da87bcf81701961511" translate="yes" xml:space="preserve">
          <source>For example, if the transition was triggered by an insert operation that added two items at index 1 and 2, this targetIndexes list would have the value [1,2].</source>
          <target state="translated">예를 들어 인덱스 1과 2에 두 항목을 추가 한 삽입 작업으로 전환이 트리거 된 경우이 targetIndexes 목록의 값은 [1,2]입니다.</target>
        </trans-unit>
        <trans-unit id="a86e1a41b438caecb5ed31a4f35481611ff069c7" translate="yes" xml:space="preserve">
          <source>For example, if the transition was triggered by an insert operation that added two items at index 1 and 2, this targetItems list would contain these two items.</source>
          <target state="translated">예를 들어 인덱스 1과 2에 두 항목을 추가 한 삽입 작업으로 전환이 트리거 된 경우이 targetItems 목록에이 두 항목이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="65022bbd90bb25f9eba337083e42ed50551ce138" translate="yes" xml:space="preserve">
          <source>For example, if the value of an environment variable &lt;code&gt;SRCDIRS&lt;/code&gt; is &lt;code&gt;&quot;../src/a ../src/b&quot;&lt;/code&gt;, then</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="724f52afb5dc39442f68ed5dd0794ca2afc57465" translate="yes" xml:space="preserve">
          <source>For example, if there is a XML document at http://www.mysite.com/feed.xml like this:</source>
          <target state="translated">예를 들어 http://www.mysite.com/feed.xml에 다음과 같은 XML 문서가있는 경우 :</target>
        </trans-unit>
        <trans-unit id="2f21e2055621a3bffa31053cbdd5a9e0ae417488" translate="yes" xml:space="preserve">
          <source>For example, if there is a simple list model defined in a file &lt;code&gt;ContactModel.qml&lt;/code&gt; like this:</source>
          <target state="translated">예를 들어 &lt;code&gt;ContactModel.qml&lt;/code&gt; 파일에 다음 과 같이 간단한 목록 모델이 정의되어있는 경우 :</target>
        </trans-unit>
        <trans-unit id="df090ae947358dfcab9edf4c330f34fcacd13360" translate="yes" xml:space="preserve">
          <source>For example, if there is an XML document like this:</source>
          <target state="translated">예를 들어 다음과 같은 XML 문서가있는 경우 :</target>
        </trans-unit>
        <trans-unit id="8c28fc60d4be4e268118258ea0ba44bec67870e4" translate="yes" xml:space="preserve">
          <source>For example, if this coordinate has a latitude of -27.46758, a longitude of 153.027892 and an altitude of 28.1, these are the strings returned depending on</source>
          <target state="translated">예를 들어,이 좌표의 위도가 -27.46758, 경도가 153.027892, 고도가 28.1 인 경우 다음에 따라 반환되는 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="1afae1bde6c04ddb64b3f72c47ade95bbc411f1d" translate="yes" xml:space="preserve">
          <source>For example, if this function is repeatedly used to seek to the end of the next word, it will eventually fail when the end of the document is reached.</source>
          <target state="translated">예를 들어이 기능을 반복해서 사용하여 다음 단어의 끝을 찾으려하면 문서의 끝에 도달하면 결국 실패합니다.</target>
        </trans-unit>
        <trans-unit id="db849f77f11d13ca1955a113cc60ac1fa24274e4" translate="yes" xml:space="preserve">
          <source>For example, if this property is set to &lt;code&gt;10&lt;/code&gt; (the default), control.minimumValue to &lt;code&gt;0&lt;/code&gt;, and control.maximumValue to &lt;code&gt;100&lt;/code&gt;, the tickmark labels displayed will be 0, 10, 20, etc., to 100, along the circumference of the dial.</source>
          <target state="translated">예를 들어이 속성을 &lt;code&gt;10&lt;/code&gt; (기본값)으로 설정하고 control.minimumValue를 &lt;code&gt;0&lt;/code&gt; 으로 설정하고 control.maximumValue를 &lt;code&gt;100&lt;/code&gt; 으로 설정하면 표시되는 눈금 표시 레이블은 원주를 따라 0, 10, 20 등입니다. 다이얼.</target>
        </trans-unit>
        <trans-unit id="4bbb976724cdbacf48c0aede826bf840082f2ec8" translate="yes" xml:space="preserve">
          <source>For example, if this property is set to &lt;code&gt;10&lt;/code&gt; (the default), control.minimumValue to &lt;code&gt;0&lt;/code&gt;, and control.maximumValue to &lt;code&gt;100&lt;/code&gt;, the tickmark labels displayed will be 0, 10, 20, etc., to 100, around the gauge.</source>
          <target state="translated">예를 들어이 속성을 &lt;code&gt;10&lt;/code&gt; (기본값)으로 설정하고 control.minimumValue를 &lt;code&gt;0&lt;/code&gt; 으로 설정하고 control.maximumValue를 &lt;code&gt;100&lt;/code&gt; 으로 설정하면 표시되는 눈금 표시 레이블이 0, 10, 20 등 100이됩니다.</target>
        </trans-unit>
        <trans-unit id="6b30e5f0ccfa02ff718750acc78e3a18386b0324" translate="yes" xml:space="preserve">
          <source>For example, if this property is set to &lt;code&gt;10&lt;/code&gt; (the default), control.minimumValue to &lt;code&gt;0&lt;/code&gt;, and control.maximumValue to &lt;code&gt;100&lt;/code&gt;, the tickmarks displayed will be 0, 10, 20, etc., to 100, around the gauge.</source>
          <target state="translated">예를 들어이 속성을 &lt;code&gt;10&lt;/code&gt; (기본값)으로 설정하고 control.minimumValue를 &lt;code&gt;0&lt;/code&gt; 으로 설정하고 control.maximumValue를 &lt;code&gt;100&lt;/code&gt; 으로 설정하면 표시되는 눈금이 0, 10, 20 등 100이됩니다.</target>
        </trans-unit>
        <trans-unit id="76d4065a7775a5d2323ed5263cb19224ea8491d7" translate="yes" xml:space="preserve">
          <source>For example, if this property is set to &lt;code&gt;10&lt;/code&gt;, control.minimumValue to &lt;code&gt;0&lt;/code&gt;, and control.maximumValue to &lt;code&gt;100&lt;/code&gt;, the tickmarks displayed will be 0, 10, 20, etc., to 100, along the circumference of the dial.</source>
          <target state="translated">예를 들어이 속성을 &lt;code&gt;10&lt;/code&gt; 으로 설정하고 control.minimumValue를 &lt;code&gt;0&lt;/code&gt; 으로 설정하고 control.maximumValue를 &lt;code&gt;100&lt;/code&gt; 으로 설정하면 표시되는 눈금이 다이얼 둘레를 따라 0, 10, 20 등입니다.</target>
        </trans-unit>
        <trans-unit id="bf24d55eabaabcbbdcba8baa11aadc7cebc642ea" translate="yes" xml:space="preserve">
          <source>For example, if you have XML like this:</source>
          <target state="translated">예를 들어 다음과 같은 XML이있는 경우 :</target>
        </trans-unit>
        <trans-unit id="a1a5a6ecd2aca4b63685d4cc61ff0cbb8d41cfb3" translate="yes" xml:space="preserve">
          <source>For example, if you have a file object and you are testing its &lt;code&gt;open()&lt;/code&gt; function, you might write a test with a statement like:</source>
          <target state="translated">예를 들어, 파일 객체가 있고 해당 &lt;code&gt;open()&lt;/code&gt; 함수를 테스트하는 경우 다음과 같은 명령문으로 테스트를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b99d2a4d0ae3e03fd5cb0563ce2998195a254352" translate="yes" xml:space="preserve">
          <source>For example, if you have access to the ISO 7000 icons that come with Qt Enterprise, you can specify the following URL:</source>
          <target state="translated">예를 들어 Qt Enterprise와 함께 제공되는 ISO 7000 아이콘에 액세스 할 수있는 경우 다음 URL을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="189e8d166eaf2ddae1a4a1d7b9621af89c063b38" translate="yes" xml:space="preserve">
          <source>For example, if you have code like</source>
          <target state="translated">예를 들어, 다음과 같은 코드가 있다면</target>
        </trans-unit>
        <trans-unit id="35ad794a9f7250cd71b958d50c2824198fbff514" translate="yes" xml:space="preserve">
          <source>For example, if you have documentation like:</source>
          <target state="translated">예를 들어, 다음과 같은 문서가있는 경우 :</target>
        </trans-unit>
        <trans-unit id="a314dea6a9c7221fe13e5ef8e61ec904e8ff9387" translate="yes" xml:space="preserve">
          <source>For example, if you have installed Qt in the &lt;code&gt;/usr/local/qt&lt;/code&gt; directory, and you run the &lt;code&gt;regexp&lt;/code&gt; example, this function will return &quot;/usr/local/qt/examples/tools/regexp/regexp&quot;.</source>
          <target state="translated">예를 들어, &lt;code&gt;/usr/local/qt&lt;/code&gt; 디렉토리에 Qt를 설치 하고 &lt;code&gt;regexp&lt;/code&gt; 예제 를 실행하면 이 함수는 &quot;/ usr / local / qt / examples / tools / regexp / regexp&quot;를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="7c8e6935e4bd13f9f2206b49f48d79028ca568ea" translate="yes" xml:space="preserve">
          <source>For example, if you have installed Qt in the &lt;code&gt;C:\Qt&lt;/code&gt; directory, and you run the &lt;code&gt;regexp&lt;/code&gt; example, this function will return &quot;C:/Qt/examples/tools/regexp&quot;.</source>
          <target state="translated">예를 들어 &lt;code&gt;C:\Qt&lt;/code&gt; 디렉토리에 Qt를 설치 하고 &lt;code&gt;regexp&lt;/code&gt; 예제 를 실행하면 이 함수는 &quot;C : / Qt / examples / tools / regexp&quot;를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bf9c619ba1d078c0df0cb30c109a21b8ee0d7e7d" translate="yes" xml:space="preserve">
          <source>For example, if you have the following &lt;code&gt;main.qml&lt;/code&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="875a09440fd51cb922774ad4b803c91bcbda4137" translate="yes" xml:space="preserve">
          <source>For example, if you pass the following values to &lt;code&gt;QT_QPA_EVDEV_TOUCHSCREEN_PARAMETERS&lt;/code&gt; before launching applications, you'd have an explicitly specified touch device with the coordinates flipped. This is useful when the orientation of the actual screen and the touch screen don't match.</source>
          <target state="translated">예를 들어, 응용 프로그램을 시작하기 전에 다음 값을 &lt;code&gt;QT_QPA_EVDEV_TOUCHSCREEN_PARAMETERS&lt;/code&gt; 에 전달 하면 좌표가 반전 된 명시 적으로 지정된 터치 장치를 갖게됩니다. 이것은 실제 화면과 터치 스크린의 방향이 일치하지 않을 때 유용합니다.</target>
        </trans-unit>
        <trans-unit id="5b5a2c5fd59f620b31e12071fbdfda73dba58af1" translate="yes" xml:space="preserve">
          <source>For example, if you save an image that is &lt;code&gt;132&amp;times;44&lt;/code&gt;, the image renders just fine at its normal size. The first mipmap, however, is created at &lt;code&gt;66&amp;times;22&lt;/code&gt;. As these values are not integer multiples of 4, the image looks incorrect at smaller sizes.</source>
          <target state="translated">예를 들어 &lt;code&gt;132&amp;times;44&lt;/code&gt; 의 이미지를 저장하면 이미지가 정상 크기로 잘 렌더링됩니다. 그러나 첫 번째 밉맵은 &lt;code&gt;66&amp;times;22&lt;/code&gt; 에서 생성됩니다 . 이 값은 4의 정수 배수가 아니므로 이미지가 더 작은 크기에서 잘못 보입니다.</target>
        </trans-unit>
        <trans-unit id="27ed534bd3fcff12e25b124f50e25443034f9293" translate="yes" xml:space="preserve">
          <source>For example, if you want to draw a focus rectangle on your widget, you can write:</source>
          <target state="translated">예를 들어 위젯에 포커스 사각형을 그리려면 다음과 같이 쓸 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f151f10d52b75609178d8dbd88e3677f0206feae" translate="yes" xml:space="preserve">
          <source>For example, if you want to use Unicode style conversion but with NEC's extension, set &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; to &lt;code&gt;unicode-0.9, nec-vdc&lt;/code&gt;. (You will probably need to quote that in a shell command.)</source>
          <target state="translated">예를 들어, 유니 코드 스타일 변환을 사용하지만 NEC의 확장자를 사용 &lt;code&gt;UNICODEMAP_JP&lt;/code&gt; 를 &lt;code&gt;unicode-0.9, nec-vdc&lt;/code&gt; . (쉘 명령으로 인용해야 할 것입니다.)</target>
        </trans-unit>
        <trans-unit id="d3c8cf4d2fd1f2bab5607b6c9f998072567c5573" translate="yes" xml:space="preserve">
          <source>For example, if you want to write a custom &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; subclass and have Qt applications load it dynamically, you would use the higher-level API.</source>
          <target state="translated">예를 들어, 사용자 정의 &lt;a href=&quot;qstyle&quot;&gt;QStyle&lt;/a&gt; 서브 클래스 를 작성하고 Qt 애플리케이션이이를 동적으로로드하게하려면 상위 레벨 API를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="0de93117c0d96fdfbcba07e32ce70108172946a2" translate="yes" xml:space="preserve">
          <source>For example, if you write a programming editor in an IDE, you may want to let your user set breakpoints visually in your code for an integrated debugger. In a programming editor a line of text usually corresponds to one &lt;a href=&quot;qtextblock&quot;&gt;QTextBlock&lt;/a&gt;. The &lt;a href=&quot;qtextblockuserdata&quot;&gt;QTextBlockUserData&lt;/a&gt; interface allows the developer to store data for each &lt;a href=&quot;qtextblock&quot;&gt;QTextBlock&lt;/a&gt;, like for example in which lines of the source code the user has a breakpoint set. Of course this could also be stored externally, but by storing it inside the &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt;, it will for example be automatically deleted when the user deletes the associated line. It's really just a way to store custom information in the &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; without using custom properties in &lt;a href=&quot;qtextformat&quot;&gt;QTextFormat&lt;/a&gt; which would affect the undo/redo stack.</source>
          <target state="translated">예를 들어, IDE에서 프로그래밍 편집기를 작성하는 경우 통합 디버거의 코드에서 사용자가 중단 점을 시각적으로 설정하도록 할 수 있습니다. 프로그래밍 편집기에서 한 줄의 텍스트는 일반적으로 하나의 &lt;a href=&quot;qtextblock&quot;&gt;QTextBlock에&lt;/a&gt; 해당합니다 . &lt;a href=&quot;qtextblockuserdata&quot;&gt;QTextBlockUserData의&lt;/a&gt; 인터페이스 각각에 대해 데이터를 저장할 수 있도록 현상 &lt;a href=&quot;qtextblock&quot;&gt;QTextBlock&lt;/a&gt; 사용자가 중단이 설정되어있는 소스 코드 라인의 예와 같이. 물론 이것은 외부에 저장 될 수도 있지만, &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; 안에 저장 하면 사용자가 관련 행을 삭제할 때 자동으로 삭제됩니다. 그것은 정말에 저장하는 사용자 정보 단지 방법 &lt;a href=&quot;qtextdocument&quot;&gt;QTextDocument&lt;/a&gt; 에 사용자 지정 속성을 사용하지 않고 &lt;a href=&quot;qtextformat&quot;&gt;QTextFormat&lt;/a&gt; 실행 취소 / 다시 실행 스택에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="6c21b7c41ac0668de087a13b8a33ecf03885d092" translate="yes" xml:space="preserve">
          <source>For example, if you're writing a simple C++ syntax highlighter, you might designate 1 to signify &quot;in comment&quot;:</source>
          <target state="translated">예를 들어, 간단한 C ++ 구문 형광펜을 작성하는 경우 1을 지정하여 &quot;주석 내&quot;를 나타낼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10f2899b5a24418cfbf01ae069402bea0cf52dbe" translate="yes" xml:space="preserve">
          <source>For example, if your application reads data from the network using a &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;network access manager&lt;/a&gt;, you would issue a &lt;a href=&quot;qnetworkrequest&quot;&gt;network request&lt;/a&gt; to the manager and receive a &lt;a href=&quot;qnetworkreply&quot;&gt;network reply&lt;/a&gt; in return. Since a &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply&lt;/a&gt; is a &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt;, you connect its &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead()&lt;/a&gt; signal to a custom slot, e.g. &lt;code&gt;slotReadyRead()&lt;/code&gt; in the code snippet shown in the discussion for &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt;. In this slot, you read all available data with &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll()&lt;/a&gt; and pass it to the XML stream reader using &lt;a href=&quot;qxmlstreamreader#addData&quot;&gt;addData&lt;/a&gt;(). Then you call your custom parsing function that reads the XML events from the reader.</source>
          <target state="translated">응용 프로그램이 사용하여 네트워크에서 데이터를 읽는 경우 예를 들어, &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;네트워크 액세스 매니저&lt;/a&gt; , 당신은 발행 할 &lt;a href=&quot;qnetworkrequest&quot;&gt;네트워크 요청&lt;/a&gt; 관리자에와 수신 &lt;a href=&quot;qnetworkreply&quot;&gt;네트워크 응답&lt;/a&gt; 대가를. 때문에 &lt;a href=&quot;qnetworkreply&quot;&gt;QNetworkReply가&lt;/a&gt; A는 &lt;a href=&quot;qiodevice&quot;&gt;QIODevice&lt;/a&gt; , 당신은 연결 &lt;a href=&quot;qiodevice#readyRead&quot;&gt;readyRead ()&lt;/a&gt; 사용자 정의 슬롯, 예에 신호를 &lt;code&gt;slotReadyRead()&lt;/code&gt; 에 대한 논의에 표시 한 코드에 &lt;a href=&quot;qnetworkaccessmanager&quot;&gt;QNetworkAccessManager&lt;/a&gt; . 이 슬롯에서는 &lt;a href=&quot;qiodevice#readAll&quot;&gt;readAll ()을&lt;/a&gt; 사용하여 사용 가능한 모든 데이터를 읽고 &lt;a href=&quot;qxmlstreamreader#addData&quot;&gt;addData&lt;/a&gt; ()를 사용하여 XML 스트림 리더로 전달합니다 . 그런 다음 리더에서 XML 이벤트를 읽는 사용자 정의 구문 분석 함수를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="064a403f7594a1fb2f334643091652d8a8008125" translate="yes" xml:space="preserve">
          <source>For example, if your application uses the Qt library and you want to build it in &lt;code&gt;debug&lt;/code&gt; mode, your project file will contain the following line:</source>
          <target state="translated">예를 들어, 응용 프로그램에서 Qt 라이브러리를 사용하고 &lt;code&gt;debug&lt;/code&gt; 모드 에서 빌드하려는 경우 프로젝트 파일에 다음 줄이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="a3b63ab2a27b693f8f29bf98be980b8e5abb61be" translate="yes" xml:space="preserve">
          <source>For example, if your application's QML code imports &lt;a href=&quot;qtmultimedia-index&quot;&gt;Qt Multimedia&lt;/a&gt;, then the Qt Multimedia module must explicitly be made a dependency of the application. You can do this by adding it to the application .pro file:</source>
          <target state="translated">예를 들어, 애플리케이션의 QML 코드가 &lt;a href=&quot;qtmultimedia-index&quot;&gt;Qt Multimedia를&lt;/a&gt; 가져 오는 경우 Qt Multimedia 모듈은 명시 적으로 애플리케이션의 종속성이되어야합니다. 응용 프로그램 .pro 파일에 추가하면됩니다.</target>
        </trans-unit>
        <trans-unit id="dac5cbcfa77d7055a9521f839e37fa5e2f76a2a0" translate="yes" xml:space="preserve">
          <source>For example, if your application's resources are listed in a file called &lt;code&gt;myapp.qrc&lt;/code&gt;, you can ensure that the resources are initialized at startup by adding this line to your &lt;code&gt;main()&lt;/code&gt; function:</source>
          <target state="translated">예를 들어, 응용 프로그램의 리소스가 &lt;code&gt;myapp.qrc&lt;/code&gt; 파일에 나열되어 있으면 &lt;code&gt;main()&lt;/code&gt; 함수에 다음 줄을 추가하여 시작시 리소스가 초기화되도록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8037ec2e6aeb297d9339b578aee1be40e3415f92" translate="yes" xml:space="preserve">
          <source>For example, if your spin box allows the user to choose a scale factor (or zoom level) for displaying an image, and your application is able to automatically choose one that will enable the image to fit completely within the display window, you can set up the spin box like this:</source>
          <target state="translated">예를 들어 스핀 상자에서 사용자가 이미지를 표시 할 배율 (또는 확대 / 축소 수준)을 선택할 수 있고 응용 프로그램이 이미지를 디스플레이 창에 완전히 맞출 수있는 배율을 자동으로 선택할 수있는 경우 다음과 같이 스핀 상자를 올리십시오.</target>
        </trans-unit>
        <trans-unit id="7b64c18718c503175c99c31c3e74a83042b51af8" translate="yes" xml:space="preserve">
          <source>For example, if your write a widget that accepts URL drags, you would end up writing code like this:</source>
          <target state="translated">예를 들어 URL 드래그를 허용하는 위젯을 작성하면 다음과 같이 코드를 작성하게됩니다.</target>
        </trans-unit>
        <trans-unit id="58a9abdd182ee024fb1b1dce036f221fa957d2ac" translate="yes" xml:space="preserve">
          <source>For example, imagine that the developer defines a new &lt;code&gt;MessageLabel&lt;/code&gt; type in the &lt;code&gt;MessageLabel.qml&lt;/code&gt; file:</source>
          <target state="translated">예를 들어, 개발자 가 &lt;code&gt;MessageLabel.qml&lt;/code&gt; 파일 에 새로운 &lt;code&gt;MessageLabel&lt;/code&gt; 유형을 정의한다고 가정 하십시오.</target>
        </trans-unit>
        <trans-unit id="1fddb5487c44bebd270ee508308337edf84b9aa2" translate="yes" xml:space="preserve">
          <source>For example, in &lt;a href=&quot;21-2-qtgui-qdocconf&quot;&gt;qtgui.qdocconf&lt;/a&gt; we use a couple of images within the HTML.postheader variable which value is pure HTML. For that reason, these images are specified using the &lt;code&gt;extraimages&lt;/code&gt; variable:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;21-2-qtgui-qdocconf&quot;&gt;qtgui.qdocconf&lt;/a&gt; 에서 값이 순수한 HTML 인 HTML.postheader 변수 내에서 두 개의 이미지를 사용합니다. 따라서 이러한 이미지는 &lt;code&gt;extraimages&lt;/code&gt; 변수를 사용하여 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="a142550c4f012d56fb171085c04e8b34f7f56184" translate="yes" xml:space="preserve">
          <source>For example, in &lt;a href=&quot;21-2-qtgui-qdocconf#&quot;&gt;qtgui.qdocconf&lt;/a&gt; we use a couple of images within the HTML.postheader variable which value is pure HTML. For that reason, these images are specified using the &lt;code&gt;extraimages&lt;/code&gt; variable:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;21-2-qtgui-qdocconf#&quot;&gt;qtgui.qdocconf&lt;/a&gt; 에서 HTML.postheader 변수 내에서 순수 HTML 인 두 개의 이미지를 사용합니다. 이러한 이유로 이러한 이미지는 &lt;code&gt;extraimages&lt;/code&gt; 변수를 사용하여 지정됩니다 .</target>
        </trans-unit>
        <trans-unit id="0a833191d50e78e1c275f81e4bed9a10e8652279" translate="yes" xml:space="preserve">
          <source>For example, in &lt;a href=&quot;qitemselectionmodel&quot;&gt;QItemSelectionModel&lt;/a&gt;, the &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;SelectionFlags&lt;/a&gt; flag is declared in the following way:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qitemselectionmodel&quot;&gt;QItemSelectionModel&lt;/a&gt; 에서 &lt;a href=&quot;qitemselectionmodel#SelectionFlag-enum&quot;&gt;SelectionFlags&lt;/a&gt; 플래그는 다음과 같은 방식으로 선언됩니다.</target>
        </trans-unit>
        <trans-unit id="42522474aee79ccceb692dab64a00f6a8575b485" translate="yes" xml:space="preserve">
          <source>For example, in &lt;a href=&quot;qlibrary&quot;&gt;QLibrary&lt;/a&gt;, the &lt;a href=&quot;qlibrary#LoadHint-enum&quot;&gt;LoadHints&lt;/a&gt; flag is declared in the following way:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qlibrary&quot;&gt;QLibrary&lt;/a&gt; 에서 &lt;a href=&quot;qlibrary#LoadHint-enum&quot;&gt;LoadHints&lt;/a&gt; 플래그는 다음과 같은 방식으로 선언됩니다.</target>
        </trans-unit>
        <trans-unit id="6ffb6ef410843e762a6ec1b794b56e4b10252942" translate="yes" xml:space="preserve">
          <source>For example, in a C++ application that maps an &quot;app.enteredText&quot; property into QML, you can use Binding to update the enteredText property.</source>
          <target state="translated">예를 들어 &quot;app.enteredText&quot;특성을 QML에 맵핑하는 C ++ 애플리케이션에서 Binding을 사용하여 입력 된 Text 특성을 업데이트 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e21b128b4bc70dd34f6d3b5cb849f37db10b25c3" translate="yes" xml:space="preserve">
          <source>For example, in a data entry dialog, there might be a field that is only necessary in one per cent of all cases. In such a dialog, &lt;b&gt;Tab&lt;/b&gt; could skip this field, and the dialog could use one of these mechanisms:</source>
          <target state="translated">예를 들어, 데이터 입력 대화 상자에 모든 경우의 1 %에만 필요한 필드가있을 수 있습니다. 이러한 대화 상자에서 &lt;b&gt;Tab&lt;/b&gt; 은이 필드를 건너 뛸 수 있으며 대화 상자는 다음 메커니즘 중 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2864c3ed39d7b9682930f502ba6118d6b9d8da2" translate="yes" xml:space="preserve">
          <source>For example, in a subclass that only arranges blocks of text, an implementation of this function would have to do the following:</source>
          <target state="translated">예를 들어, 텍스트 블록 만 정렬하는 서브 클래스에서이 함수의 구현은 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="32613dc9f0768972381538505b66b41e013e96d3" translate="yes" xml:space="preserve">
          <source>For example, in a word processor, when the user clicks the 'B' (bold) tool button, what should happen to the keyboard focus? Should it remain where it was, almost certainly in the editing widget, or should it move to the 'B' button?</source>
          <target state="translated">예를 들어 워드 프로세서에서 사용자가 'B'(굵게) 도구 버튼을 클릭하면 키보드 포커스는 어떻게됩니까? 편집 위젯의 위치에 그대로 있어야합니까, 아니면 'B'버튼으로 이동해야합니까?</target>
        </trans-unit>
        <trans-unit id="6ae1fec6040c01dfc2799077e97996532087b355" translate="yes" xml:space="preserve">
          <source>For example, in case of evaluation errors the source URL may be provided in</source>
          <target state="translated">예를 들어, 평가 오류가 발생하면 소스 URL이 제공 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="02cb6a027869bdc6117ae90bafe1cf6d7549398c" translate="yes" xml:space="preserve">
          <source>For example, in the code below, it's not possible to use &lt;a href=&quot;qml-qttest-testcase#tryCompare-method&quot;&gt;tryCompare()&lt;/a&gt;, because the &lt;code&gt;currentItem&lt;/code&gt; property might be &lt;code&gt;null&lt;/code&gt; for a short period of time:</source>
          <target state="translated">예를 들어, 아래 코드에서는 &lt;a href=&quot;qml-qttest-testcase#tryCompare-method&quot;&gt;tryItemare ()&lt;/a&gt; 를 사용할 수 없습니다 . &lt;code&gt;currentItem&lt;/code&gt; 속성이 짧은 기간 동안 &lt;code&gt;null&lt;/code&gt; 일 수 있기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="75440b508505d7742b47d4afeb84a23ba334154d" translate="yes" xml:space="preserve">
          <source>For example, in the code below, it's not possible to use &lt;a href=&quot;qml-testcase#tryCompare-method&quot;&gt;tryCompare()&lt;/a&gt;, because the &lt;code&gt;currentItem&lt;/code&gt; property might be &lt;code&gt;null&lt;/code&gt; for a short period of time:</source>
          <target state="translated">예를 들어, 아래 코드에서는 &lt;a href=&quot;qml-testcase#tryCompare-method&quot;&gt;tryItemare ()&lt;/a&gt; 를 사용할 수 없습니다 . &lt;code&gt;currentItem&lt;/code&gt; 속성이 짧은 기간 동안 &lt;code&gt;null&lt;/code&gt; 일 수 있기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="ae1772bf17bf279835e3d10ec7de250949f4d96d" translate="yes" xml:space="preserve">
          <source>For example, in the code snippet below, we embed a group box into the proxy:</source>
          <target state="translated">예를 들어 아래 코드 스 니펫에서 그룹 상자를 프록시에 포함시킵니다.</target>
        </trans-unit>
        <trans-unit id="c99e4f438c94c63d53d8542edb368a5645f7c809" translate="yes" xml:space="preserve">
          <source>For example, in this code:</source>
          <target state="translated">예를 들어,이 코드에서 :</target>
        </trans-unit>
        <trans-unit id="d128cbb2cd367a674fbc38cfab01d443e8ef55a0" translate="yes" xml:space="preserve">
          <source>For example, it is possible to create a progress bar where the current frame reflects the progress.</source>
          <target state="translated">예를 들어 현재 프레임이 진행률을 반영하는 진행률 표시 줄을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1091eaf90f269114f47357ba95255e4df2663024" translate="yes" xml:space="preserve">
          <source>For example, it is very common for a component to only have one state.</source>
          <target state="translated">예를 들어, 구성 요소가 하나의 상태 만 갖는 것이 매우 일반적입니다.</target>
        </trans-unit>
        <trans-unit id="7f86f85ef69b7e7b477d01525fe052201285f9da" translate="yes" xml:space="preserve">
          <source>For example, let's assume &lt;code&gt;MyWidget&lt;/code&gt; inherits from &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; and is declared with the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro:</source>
          <target state="translated">예를 들어 &lt;code&gt;MyWidget&lt;/code&gt; 이 &lt;a href=&quot;qwidget&quot;&gt;QWidget&lt;/a&gt; 에서 상속되고 &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; 매크로로 선언 되었다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="6f1f0abe76c314d49d0e03cb960892814eddfafb" translate="yes" xml:space="preserve">
          <source>For example, let's assume &lt;code&gt;MyWidget&lt;/code&gt; inherits from &lt;a href=&quot;widgets-changes-qt6#qwidget&quot;&gt;QWidget&lt;/a&gt; and is declared with the &lt;a href=&quot;qobject#Q_OBJECT&quot;&gt;Q_OBJECT&lt;/a&gt; macro:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="8714bcd9aaac0b995726ebef6a15f4452891c743" translate="yes" xml:space="preserve">
          <source>For example, let's say we have the following object:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="35becc2357436d5a78526c9312790c2c59223dd0" translate="yes" xml:space="preserve">
          <source>For example, let's suppose that we have three tasks that should be performed whenever the user presses a key. Each task could be split into a thread, each of which would have a &lt;a href=&quot;qthread#run&quot;&gt;run()&lt;/a&gt; body like this:</source>
          <target state="translated">예를 들어, 사용자가 키를 누를 때마다 수행해야하는 세 가지 작업이 있다고 가정합니다. 각 작업은 스레드로 분할 될 수 있으며 각 스레드는 &lt;a href=&quot;qthread#run&quot;&gt;다음&lt;/a&gt; 과 같이 run () 본문을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="fa948a0509e7f43ce999fa7a79e568b0321f1a6a" translate="yes" xml:space="preserve">
          <source>For example, mnemonic(&quot;E&amp;amp;xit&quot;) returns &lt;code&gt;Qt::ALT+Qt::Key_X&lt;/code&gt;, mnemonic(&quot;&amp;amp;Quit&quot;) returns &lt;code&gt;ALT+Key_Q&lt;/code&gt;, and mnemonic(&quot;Quit&quot;) returns an empty &lt;a href=&quot;qkeysequence&quot;&gt;QKeySequence&lt;/a&gt;.</source>
          <target state="translated">예를 들어, mnemonic ( &quot;E &amp;amp; xit&quot;)은 &lt;code&gt;Qt::ALT+Qt::Key_X&lt;/code&gt; 하고 mnemonic ( &quot;&amp;amp; Quit&quot;)은 &lt;code&gt;ALT+Key_Q&lt;/code&gt; 를 리턴 하고 mnemonic ( &quot;Quit&quot;)은 빈 &lt;a href=&quot;qkeysequence&quot;&gt;QKeySequence를&lt;/a&gt; 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="75ffa658549bb98252ee059855275ec1c39ad24b" translate="yes" xml:space="preserve">
          <source>For example, no button should be resized to be smaller than the global strut size. The strut size should be considered when reimplementing GUI controls that may be used on touch-screens or similar I/O devices.</source>
          <target state="translated">예를 들어 버튼이 전체 스트럿 크기보다 작게 크기를 조정해서는 안됩니다. 터치 스크린 또는 유사한 I / O 장치에서 사용될 수있는 GUI 컨트롤을 다시 구현할 때는 스트럿 크기를 고려해야합니다.</target>
        </trans-unit>
        <trans-unit id="58e9bde3d36c5c6ac876ad4ab2ed6456280889eb" translate="yes" xml:space="preserve">
          <source>For example, on Ubuntu Linux systems, Qt can be compiled by several compilers such as clang or g++:</source>
          <target state="translated">예를 들어, Ubuntu Linux 시스템에서 Qt는 clang 또는 g ++와 같은 여러 컴파일러로 컴파일 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="303dbd0005033b74a221448f0343e03e2704b987" translate="yes" xml:space="preserve">
          <source>For example, on Unix filesystems (including &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt;), this returns the devpath like &lt;code&gt;/dev/sda0&lt;/code&gt; for local storages. On Windows, it returns the UNC path starting with &lt;code&gt;\\\\?\\&lt;/code&gt; for local storages (in other words, the volume GUID).</source>
          <target state="translated">예를 들어, 유닉스 파일 시스템 ( &lt;a href=&quot;internationalization#macos&quot;&gt;macOS&lt;/a&gt; 포함 )에서는 로컬 저장소에 대해 &lt;code&gt;/dev/sda0&lt;/code&gt; 와 같은 devpath를 반환합니다 . Windows에서는 로컬 스토리지 (즉, 볼륨 GUID)의 경우 &lt;code&gt;\\\\?\\&lt;/code&gt; 로 시작하는 UNC 경로를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="9b07ef4e926ce20c2f90682e609b91a78936f9f1" translate="yes" xml:space="preserve">
          <source>For example, on Unix filesystems (including macOS), this returns the devpath like &lt;code&gt;/dev/sda0&lt;/code&gt; for local storages. On Windows, it returns the UNC path starting with &lt;code&gt;\\\\?\\&lt;/code&gt; for local storages (in other words, the volume GUID).</source>
          <target state="translated">예를 들어 Unix 파일 시스템 (macOS 포함)에서는 로컬 스토리지에 대해 &lt;code&gt;/dev/sda0&lt;/code&gt; 과 같은 devpath를 반환합니다 . Windows에서는 로컬 저장소 (즉, 볼륨 GUID)에 대해 &lt;code&gt;\\\\?\\&lt;/code&gt; 로 시작하는 UNC 경로를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="45bdbe2c335aca23baa8ac4ae20902f5a25d9625" translate="yes" xml:space="preserve">
          <source>For example, on X11 these correspond to the XRandr screen names, typically &quot;VGA1&quot;, &quot;HDMI1&quot;, etc.</source>
          <target state="translated">예를 들어 X11의 경우 XRandr 화면 이름 (일반적으로 &quot;VGA1&quot;, &quot;HDMI1&quot;등)에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="76e62f9c5487d192c3ab0128d762f5e04e405bab" translate="yes" xml:space="preserve">
          <source>For example, on touch screens, it is a common pattern to show a tool tip as a result of pressing and holding down a button. The following example demonstrates how to delay showing a tool tip until the press-and-hold interval is reached. In this example, the tool tip hides as soon as the button is released.</source>
          <target state="translated">예를 들어, 터치 스크린에서는 버튼을 누른 상태에서 툴팁을 표시하는 것이 일반적인 패턴입니다. 다음 예는 길게 누르기 간격에 도달 할 때까지 툴팁 표시를 지연시키는 방법을 보여줍니다. 이 예제에서 버튼을 놓으면 툴팁이 숨겨집니다.</target>
        </trans-unit>
        <trans-unit id="5def01ff307bf8c5952bc0ef914bc401bf8e219c" translate="yes" xml:space="preserve">
          <source>For example, one could write a &lt;a href=&quot;qabstracturiresolver&quot;&gt;QAbstractUriResolver&lt;/a&gt; subclass that rewrites library ISBN number URIs as book title URLs, e.g.,</source>
          <target state="translated">예를 들어, 도서관 ISBN 번호 URI를 책 제목 URL로 다시 쓰는 &lt;a href=&quot;qabstracturiresolver&quot;&gt;QAbstractUriResolver&lt;/a&gt; 서브 클래스를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a11b9d938c4421cacb5c02428822312cac3eb405" translate="yes" xml:space="preserve">
          <source>For example, one could write a QAbstractUriResolver subclass that rewrites library ISBN number URIs as book title URLs, e.g.,</source>
          <target state="translated">예를 들어 도서관 ISBN 번호 URI를 책 제목 URL로 다시 쓰는 QAbstractUriResolver 하위 클래스를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1fc1d0eec1442fc2e0beec7fa17a22ab9e99b39a" translate="yes" xml:space="preserve">
          <source>For example, only the functor-based syntax can be used to connect a signal that carries an &lt;code&gt;int&lt;/code&gt; to a slot that accepts a &lt;code&gt;double&lt;/code&gt;. A &lt;a href=&quot;qslider&quot;&gt;QSlider&lt;/a&gt; holds an &lt;code&gt;int&lt;/code&gt; value while a &lt;a href=&quot;qdoublespinbox&quot;&gt;QDoubleSpinBox&lt;/a&gt; holds a &lt;code&gt;double&lt;/code&gt; value. The following snippet shows how to keep them in sync:</source>
          <target state="translated">예를 들어, functor 기반 구문 만 사용하여 &lt;code&gt;int&lt;/code&gt; 를 전달하는 신호를 &lt;code&gt;double&lt;/code&gt; 을 허용하는 슬롯 에 연결할 수 있습니다 . &lt;a href=&quot;qslider&quot;&gt;QSlider는&lt;/a&gt; 보유 &lt;code&gt;int&lt;/code&gt; 동안 값을 &lt;a href=&quot;qdoublespinbox&quot;&gt;QDoubleSpinBox이&lt;/a&gt; 보유하고 &lt;code&gt;double&lt;/code&gt; 값입니다. 다음 스 니펫은 동기화 상태를 유지하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="31be4b5b92dd877ea5d29f9dc470354e039441fc" translate="yes" xml:space="preserve">
          <source>For example, qmake can configure the build process to take advantage of external libraries that are supported by &lt;a href=&quot;http://www.freedesktop.org/wiki/Software/pkg-config&quot;&gt;pkg-config&lt;/a&gt;, such as the D-Bus and ogg libraries, with the following lines:</source>
          <target state="translated">예를 들어, qmake는 D-Bus 및 ogg 라이브러리와 같이 &lt;a href=&quot;http://www.freedesktop.org/wiki/Software/pkg-config&quot;&gt;pkg-config&lt;/a&gt; 가 지원하는 외부 라이브러리를 다음 라인과 함께 활용하도록 빌드 프로세스를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="65862a915ebf4a24b5581f40eaf72253ce6c3202" translate="yes" xml:space="preserve">
          <source>For example, requesting an OpenGL version 3.x core profile context may result in an OpenGL 4.x core profile context. Similarly, a request for OpenGL 2.1 may result in an OpenGL 3.0 context with deprecated functions enabled. Finally, depending on the driver, unsupported versions may result in either a context creation failure or in a context for the highest supported version.</source>
          <target state="translated">예를 들어 OpenGL 버전 3.x 코어 프로파일 컨텍스트를 요청하면 OpenGL 4.x 코어 프로파일 컨텍스트가 발생할 수 있습니다. 마찬가지로 OpenGL 2.1에 대한 요청으로 더 이상 사용되지 않는 기능이 활성화 된 OpenGL 3.0 컨텍스트가 발생할 수 있습니다. 마지막으로 드라이버에 따라 지원되지 않는 버전으로 인해 컨텍스트 생성이 실패하거나 지원되는 버전이 가장 높은 컨텍스트가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87784d85a4520a8267c20bceaa434dcf408f3dc8" translate="yes" xml:space="preserve">
          <source>For example, saving an image in DDS format with A8R8G8R8 subtype:</source>
          <target state="translated">예를 들어 A8R8G8R8 하위 유형을 사용하여 이미지를 DDS 형식으로 저장하는 경우 :</target>
        </trans-unit>
        <trans-unit id="094460e5cc0036cb4f1aa981efb6012bb6c4cda2" translate="yes" xml:space="preserve">
          <source>For example, say a user-interface contains a list of ten items where each item has a background color, an icon and a text. Using the traditional drawing techniques, this would result in 30 draw calls and a similar amount of state changes. A scene graph, on the other hand, could reorganize the primitives to render such that all backgrounds are drawn in one call, then all icons, then all the text, reducing the total amount of draw calls to only 3. Batching and state change reduction like this can greatly improve performance on some hardware.</source>
          <target state="translated">예를 들어, 사용자 인터페이스에는 각 항목의 배경색, 아이콘 및 텍스트가있는 10 개의 항목 목록이 포함되어 있습니다. 전통적인 그리기 기법을 사용하면 30 번의 그리기 호출과 비슷한 양의 상태 변경이 발생합니다. 반면 장면 그래프는 프리미티브를 재구성하여 한 번의 호출로 모든 배경을 그린 다음 모든 아이콘, 모든 텍스트를 렌더링하여 총 드로우 콜의 양을 3으로 줄였습니다. 배치 및 상태 변경 감소 이와 같이 일부 하드웨어의 성능을 크게 향상시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3ac5bf86e9cbcc199493de45df97dd52cc2d3e6" translate="yes" xml:space="preserve">
          <source>For example, say there is a method that prints a message to the user on two lines:</source>
          <target state="translated">예를 들어, 사용자에게 두 줄로 메시지를 인쇄하는 방법이 있다고 가정 해보십시오.</target>
        </trans-unit>
        <trans-unit id="bc98562cd9cbb358f7f09c4dc697c2f31ca6e5c1" translate="yes" xml:space="preserve">
          <source>For example, setting the &lt;code&gt;Readable&lt;/code&gt;, &lt;code&gt;Writable&lt;/code&gt;, and &lt;code&gt;Files&lt;/code&gt; flags allows all files to be listed for which the application has read access, write access or both. If the &lt;code&gt;Dirs&lt;/code&gt; and &lt;code&gt;Drives&lt;/code&gt; flags are also included in this combination then all drives, directories, all files that the application can read, write, or execute, and symlinks to such files/directories can be listed.</source>
          <target state="translated">예를 들어, &lt;code&gt;Readable&lt;/code&gt; , &lt;code&gt;Writable&lt;/code&gt; 및 &lt;code&gt;Files&lt;/code&gt; 플래그를 설정하면 응용 프로그램이 읽기 액세스, 쓰기 액세스 또는 둘 다를 갖는 모든 파일을 나열 할 수 있습니다. 는 IF &lt;code&gt;Dirs&lt;/code&gt; 와 &lt;code&gt;Drives&lt;/code&gt; 플래그 또한 파일이 조합에 모든 드라이브, 디렉토리, 모든 응용 프로그램이 읽을 수있는 파일, 쓰기 또는 실행 및 심볼릭 링크를 포함 / 디렉토리를 나열 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f3890a2649f2755b1cc5a6eaf9397098411ccff2" translate="yes" xml:space="preserve">
          <source>For example, setting this property can be especially useful if a scene is rendered by multiple views, one of which serves as an overview which always displays all items. In scenes with many items, such a view will use a high scaling factor so that all items can be shown. Due to the scaling, smaller items will only make an insignificant contribution to the final rendered scene. To avoid drawing these items and reduce the time necessary to render the scene, you can call setMinimumRenderSize() with a non-negative value.</source>
          <target state="translated">예를 들어,이 속성을 설정하면 장면이 여러보기로 렌더링되는 경우 특히 유용 할 수 있습니다. 그 중 하나는 항상 모든 항목을 표시하는 개요 역할을합니다. 많은 항목이있는 장면에서 이러한 뷰는 모든 항목을 표시 할 수 있도록 높은 배율을 사용합니다. 크기 조정으로 인해 작은 항목은 최종 렌더링 장면에 중요하지 않은 영향을 미칩니다. 이러한 항목을 그리는 것을 피하고 장면을 렌더링하는 데 필요한 시간을 줄이려면 음수가 아닌 값으로 setMinimumRenderSize ()를 호출하면됩니다.</target>
        </trans-unit>
        <trans-unit id="501314c068fdb8ddd9e078bc8644881eeb85d82e" translate="yes" xml:space="preserve">
          <source>For example, suppose a mobile device which is naturally in portrait orientation. The back-facing camera is mounted in landscape. If the top side of the camera sensor is aligned with the right edge of the screen in natural orientation, &lt;code&gt;orientation&lt;/code&gt; returns &lt;code&gt;270&lt;/code&gt;. If the top side of a front-facing camera sensor is aligned with the right edge of the screen, &lt;code&gt;orientation&lt;/code&gt; returns &lt;code&gt;90&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 자연스럽게 세로 방향 인 모바일 장치를 가정하십시오. 후면 카메라는 가로로 장착됩니다. 카메라 센서의 상단이 화면의 오른쪽 가장자리와 자연스럽게 정렬되면 &lt;code&gt;orientation&lt;/code&gt; 은 &lt;code&gt;270&lt;/code&gt; 을 반환합니다 . 전면 카메라 센서의 상단이 화면의 오른쪽 가장자리에 맞춰지면 &lt;code&gt;orientation&lt;/code&gt; 은 &lt;code&gt;90&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="6e17e39a04822773cc0bda28085a71d9354cc928" translate="yes" xml:space="preserve">
          <source>For example, suppose a mobile device which is naturally in portrait orientation. The back-facing camera is mounted in landscape. If the top side of the camera sensor is aligned with the right edge of the screen in natural orientation, the value should be 270. If the top side of a front-facing camera sensor is aligned with the right of the screen, the value should be 90.</source>
          <target state="translated">예를 들어, 자연스럽게 세로 방향 인 모바일 장치를 가정하십시오. 후면 카메라는 가로로 장착됩니다. 카메라 센서의 상단이 화면의 오른쪽 가장자리와 자연스럽게 정렬되면 값은 270이어야합니다. 전면 카메라 센서의 상단이 화면의 오른쪽과 정렬되면 값은 90 세</target>
        </trans-unit>
        <trans-unit id="793ffae5d6155816ada318cc1cdc2749c188c186" translate="yes" xml:space="preserve">
          <source>For example, suppose that there are 5 items in the model, and &lt;a href=&quot;qml-qtquick-pathview#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; is &lt;code&gt;0&lt;/code&gt;. If &lt;a href=&quot;qml-qtquick-pathview#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; is set to &lt;code&gt;2&lt;/code&gt;,</source>
          <target state="translated">예를 들어, 모델에 5 개의 항목이 있고 &lt;a href=&quot;qml-qtquick-pathview#currentIndex-prop&quot;&gt;currentIndex&lt;/a&gt; 가 &lt;code&gt;0&lt;/code&gt; 이라고 가정합니다 . 경우 &lt;a href=&quot;qml-qtquick-pathview#currentIndex-prop&quot;&gt;currentIndex가&lt;/a&gt; 설정되어 &lt;code&gt;2&lt;/code&gt; ,</target>
        </trans-unit>
        <trans-unit id="04737da9c27a6e90824a3994ac9dd44596118790" translate="yes" xml:space="preserve">
          <source>For example, suppose the &lt;code&gt;Message::author&lt;/code&gt; property was of type &lt;code&gt;MessageAuthor&lt;/code&gt; rather than a simple string, with sub-properties of &lt;code&gt;name&lt;/code&gt; and &lt;code&gt;email&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;Message::author&lt;/code&gt; 속성이 &lt;code&gt;name&lt;/code&gt; 및 &lt;code&gt;email&lt;/code&gt; 의 하위 속성을 가진 간단한 문자열이 아니라 &lt;code&gt;MessageAuthor&lt;/code&gt; 유형 이라고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="f72f9f4fa4b14c21e14b589fa1c1fa1021e0a94a" translate="yes" xml:space="preserve">
          <source>For example, suppose the &lt;code&gt;MessageBoard&lt;/code&gt; class has a &lt;code&gt;newMessagePosted()&lt;/code&gt; signal with a single parameter, &lt;code&gt;subject&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;code&gt;MessageBoard&lt;/code&gt; 클래스 에 &lt;code&gt;subject&lt;/code&gt; 매개 변수가 하나 인 &lt;code&gt;newMessagePosted()&lt;/code&gt; 신호 가 있다고 가정합니다 .</target>
        </trans-unit>
        <trans-unit id="f5517bfe27f09a1df337fbd538c40ca9bb894175" translate="yes" xml:space="preserve">
          <source>For example, suppose there is a &lt;code&gt;Message&lt;/code&gt; class with &lt;code&gt;author&lt;/code&gt; and &lt;code&gt;creationDate&lt;/code&gt; properties:</source>
          <target state="translated">예를 들어 &lt;code&gt;author&lt;/code&gt; 및 &lt;code&gt;creationDate&lt;/code&gt; 속성 이있는 &lt;code&gt;Message&lt;/code&gt; 클래스 가 있다고 가정 합니다.</target>
        </trans-unit>
        <trans-unit id="0d698f826a757e62c0b71fa4b279399de9507a9a" translate="yes" xml:space="preserve">
          <source>For example, suppose there is a &lt;code&gt;MyItem.qml&lt;/code&gt; file that looks like this:</source>
          <target state="translated">예를 들어 다음과 같은 &lt;code&gt;MyItem.qml&lt;/code&gt; 파일 이 있다고 가정 합니다.</target>
        </trans-unit>
        <trans-unit id="87dbc344da918d854b27d1ca783df1ad50498dff" translate="yes" xml:space="preserve">
          <source>For example, suppose there is a &lt;code&gt;RandomNumberGenerator&lt;/code&gt; class to be made available as a property value source, so that when applied to a QML property, it will update the property value to a different random number every 500 milliseconds. Additionally, a maxValue can be provided to this random number generator. This class can be implemented as follows:</source>
          <target state="translated">예를 들어, 속성 값 소스로 사용 가능한 &lt;code&gt;RandomNumberGenerator&lt;/code&gt; 클래스 가 있다고 가정 하여 QML 특성에 적용 할 때 500 밀리 초마다 특성 값을 다른 임의의 숫자로 업데이트합니다. 또한이 난수 생성기에 maxValue를 제공 ​​할 수 있습니다. 이 클래스는 다음과 같이 구현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5e246a111bd451532185894ecac582516d88690" translate="yes" xml:space="preserve">
          <source>For example, suppose we have the input string &quot;We must be &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt;, very &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt;!&quot; and the pattern &lt;b&gt;&amp;lt;b&amp;gt;.*&amp;lt;/b&amp;gt;&lt;/b&gt;. With the default greedy (maximal) matching, the match is &quot;We must be &lt;u&gt;&amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt;, very &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt;&lt;/u&gt;!&quot;. But with minimal (non-greedy) matching, the first match is: &quot;We must be &lt;u&gt;&amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt;&lt;/u&gt;, very &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt;!&quot; and the second match is &quot;We must be &amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt;, very &lt;u&gt;&amp;lt;b&amp;gt;bold&amp;lt;/b&amp;gt;&lt;/u&gt;!&quot;. In practice we might use the pattern &lt;b&gt;&amp;lt;b&amp;gt;[^&amp;lt;]*&amp;lt;/b&amp;gt;&lt;/b&gt; instead, although this will still fail for nested tags.</source>
          <target state="translated">예를 들어 &quot;&amp;lt;b&amp;gt; 굵게 &amp;lt;/ b&amp;gt;, 매우 &amp;lt;b&amp;gt; 굵게 &amp;lt;/ b&amp;gt; 입력 문자열이 있다고 가정하겠습니다.&quot; 패턴 &lt;b&gt;&amp;lt;b&amp;gt;. * &amp;lt;/ b&amp;gt;&lt;/b&gt; 입니다. 기본 욕심 (최대) 일치로 일치는 &quot; &lt;u&gt;&amp;lt;b&amp;gt; 굵게 &amp;lt;/ b&amp;gt;, 매우 &amp;lt;b&amp;gt; 굵게 &amp;lt;/ b&amp;gt;&lt;/u&gt; !&quot;입니다. 그러나 최소한의 (욕심이없는) 일치로 첫 번째 일치는 &quot;우리는 &lt;u&gt;&amp;lt;b&amp;gt; 굵게 &amp;lt;/ b&amp;gt;&lt;/u&gt; , 매우 &amp;lt;b&amp;gt; 굵게 &amp;lt;/ b&amp;gt; 야!&quot; 두 번째 경기는 &quot;&amp;lt;b&amp;gt; 굵게 &amp;lt;/ b&amp;gt;, 매우 &lt;u&gt;&amp;lt;b&amp;gt; 굵게 &amp;lt;/ b&amp;gt;&lt;/u&gt; !&quot;입니다. 실제로 &lt;b&gt;&amp;lt;b&amp;gt; [^ &amp;lt;] * &amp;lt;/ b&amp;gt; 패턴을&lt;/b&gt; 대신 사용할 수도 있지만 중첩 된 태그에는 여전히 실패합니다.</target>
        </trans-unit>
        <trans-unit id="99b3086e8fa2485dde52b5ef5d6a7234075ef134" translate="yes" xml:space="preserve">
          <source>For example, suppose you wanted to have several roles per column. One way of doing this is to use a data source where each row is an array and each cell is an object. To use this data source with TableModel, define a getter and setter:</source>
          <target state="translated">예를 들어 열당 여러 역할을 원한다고 가정합니다. 이를 수행하는 한 가지 방법은 각 행이 배열이고 각 셀이 객체 인 데이터 소스를 사용하는 것입니다. 이 데이터 소스를 TableModel과 함께 사용하려면 getter 및 setter를 정의하십시오.</target>
        </trans-unit>
        <trans-unit id="044f0cecc0448a050b29886b979a0eb4249458fa" translate="yes" xml:space="preserve">
          <source>For example, take the &lt;code&gt;Message&lt;/code&gt; type described in an &lt;a href=&quot;#registering-an-instantiable-object-type&quot;&gt;earlier example&lt;/a&gt;:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;#registering-an-instantiable-object-type&quot;&gt;이전 예&lt;/a&gt; 에서 설명한 &lt;code&gt;Message&lt;/code&gt; 유형 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="bb74fc1b8aded12ab4c546e962ff70c72e9e0bbb" translate="yes" xml:space="preserve">
          <source>For example, take the &lt;code&gt;Message&lt;/code&gt; type described in an &lt;a href=&quot;qtqml-cppintegration-definetypes#registering-an-instantiable-object-type&quot;&gt;earlier example&lt;/a&gt;:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qtqml-cppintegration-definetypes#registering-an-instantiable-object-type&quot;&gt;이전 예&lt;/a&gt; 에서 설명한 &lt;code&gt;Message&lt;/code&gt; 유형 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="549017e0aeee2b038ac5710c439500daaa639b31" translate="yes" xml:space="preserve">
          <source>For example, take this sequence of calls:</source>
          <target state="translated">예를 들어 다음과 같은 일련의 호출을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="bffbbe302261255488cedcaf66d413bfbf36c6ca" translate="yes" xml:space="preserve">
          <source>For example, the</source>
          <target state="translated">예를 들어</target>
        </trans-unit>
        <trans-unit id="677f0ce499e622bcf97261888e079d3ef0ea8de3" translate="yes" xml:space="preserve">
          <source>For example, the &quot;Cancel&quot; in a dialog might have &quot;Anuluj&quot; when the program runs in Polish (in this case the source text would be &quot;Cancel&quot;). The context would (normally) be the dialog's class name; there would normally be no comment, and the translated text would be &quot;Anuluj&quot;.</source>
          <target state="translated">예를 들어, 프로그램이 폴란드어로 실행될 때 대화 상자의 &quot;취소&quot;에 &quot;Anuluj&quot;가있을 수 있습니다 (이 경우 소스 텍스트는 &quot;취소&quot;임). 컨텍스트는 (일반적으로) 대화 상자의 클래스 이름입니다. 일반적으로 주석이없고 번역 된 텍스트는 &quot;Anuluj&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="f0ff54bda50bd4eaaeca01e0be0ae6d283915177" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;http://developer.apple.com/library/mac/#documentation/UserExperience/Conceptual/AppleHIGuidelines/Intro/Intro.html&quot;&gt;macOS Aqua&lt;/a&gt; and KDE guidelines specify that the labels should be right-aligned, whereas Windows and GNOME applications normally use left-alignment.</source>
          <target state="translated">예를 들어, &lt;a href=&quot;http://developer.apple.com/library/mac/#documentation/UserExperience/Conceptual/AppleHIGuidelines/Intro/Intro.html&quot;&gt;macOS Aqua&lt;/a&gt; 및 KDE 지침에서는 레이블을 오른쪽 정렬해야하지만 Windows 및 그놈 응용 프로그램은 일반적으로 왼쪽 정렬을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6d76d21af4fe398ddb597f819f1846c5bc6674d7" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-worldtimeclockplugin-example.html#&quot;&gt;World Time Clock Plugin&lt;/a&gt; example exports a custom widget class with the following declaration:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;https://doc.qt.io/qt-5.13/qtdesigner-worldtimeclockplugin-example.html#&quot;&gt;세계 시간 시계 플러그인&lt;/a&gt; 예제는 다음 선언으로 사용자 정의 위젯 클래스를 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="2a96000a4bb23b1ec6de2d8656e972f78660a023" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-worldtimeclockplugin-example.html&quot;&gt;World Time Clock Plugin&lt;/a&gt; example exports a custom widget class with the following declaration:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;https://doc.qt.io/qt-5.15/qtdesigner-worldtimeclockplugin-example.html&quot;&gt;World Time Clock Plugin&lt;/a&gt; 예제는 다음 선언으로 사용자 정의 위젯 클래스를 내 보냅니다.</target>
        </trans-unit>
        <trans-unit id="e46b511d2c299ec4c385cd02ad9021d488deab4e" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;https://doc.qt.io/qt-6.0/qtdesigner-worldtimeclockplugin-example.html&quot;&gt;World Time Clock Plugin&lt;/a&gt; example exports a custom widget class with the following declaration:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="cacb03a899959ca94858b5c49d03153e4a342901" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;qml-qt3d-logic-frameaction&quot;&gt;FrameAction&lt;/a&gt; can be used to animate a property in sync with the Qt3D engine where a Qt Quick animation element is not perfectly synchronized and may lead to stutters in some cases.</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qml-qt3d-logic-frameaction&quot;&gt;Frametction&lt;/a&gt; 은 Qt Quick 애니메이션 요소가 완벽하게 동기화되지 않고 경우에 따라 끊김을 유발할 수있는 Qt3D 엔진과 동기화하여 속성에 애니메이션을 적용하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a76069a45b309125370ad2c883661d7ec6db4d42" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;qml-qtquick-controls2-button&quot;&gt;Button&lt;/a&gt; type from the &lt;a href=&quot;qtquickcontrols-index&quot;&gt;Qt Quick Controls&lt;/a&gt; module has a &lt;code&gt;clicked&lt;/code&gt; signal, which is emitted whenever the button is clicked. In this case, the signal handler for receiving this signal should be &lt;code&gt;onClicked&lt;/code&gt;. In the example below, whenever the button is clicked, the &lt;code&gt;onClicked&lt;/code&gt; handler is invoked, applying a random color to the parent &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qtquickcontrols-index&quot;&gt;Qt Quick Controls&lt;/a&gt; 모듈 의 &lt;a href=&quot;qml-qtquick-controls2-button&quot;&gt;버튼&lt;/a&gt; 유형 에는 &lt;code&gt;clicked&lt;/code&gt; 신호가 있으며 버튼을 클릭 할 때마다 발생합니다. 이 경우이 신호를 수신하기위한 신호 처리기는 &lt;code&gt;onClicked&lt;/code&gt; 이어야합니다 . 아래 예제에서 버튼을 클릭 할 때마다 부모 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle에&lt;/a&gt; 임의의 색상을 적용 하여 &lt;code&gt;onClicked&lt;/code&gt; 핸들러가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="42b53a467220ef6ecf725bd13304140fcbc7f3c7" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; below uses attached properties and attached handlers:</source>
          <target state="translated">예를 들어 아래 &lt;a href=&quot;qml-qtquick-item&quot;&gt;항목&lt;/a&gt; 은 연결된 속성과 연결된 핸들러를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="2c60b6dbc0a00a5cbba73ae0c8ea702116d16b09" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; type has a &lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;states&lt;/a&gt; list-type property that can be assigned to and used as follows:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qml-qtquick-item&quot;&gt;항목&lt;/a&gt; 유형에는 다음과 같이 지정하고 사용할 수 있는 &lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;상태&lt;/a&gt; 목록 유형 특성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a8ec7815ad24b7656bd066185088e18ba8c9b8b" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; type has a &lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;states&lt;/a&gt; property that is used to hold a list of &lt;a href=&quot;qml-qtqml-statemachine-state&quot;&gt;State&lt;/a&gt; type objects. The code below initializes the value of this property to a list of three &lt;a href=&quot;qml-qtqml-statemachine-state&quot;&gt;State&lt;/a&gt; objects:</source>
          <target state="translated">예를 들어 &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; 유형에는 &lt;a href=&quot;qml-qtqml-statemachine-state&quot;&gt;State&lt;/a&gt; 유형 객체 목록을 보유하는 데 사용되는 &lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;states&lt;/a&gt; 속성이 있습니다. 아래 코드는이 속성 값을 세 개의 &lt;a href=&quot;qml-qtqml-statemachine-state&quot;&gt;State&lt;/a&gt; 객체 목록으로 초기화 합니다.</target>
        </trans-unit>
        <trans-unit id="8a2bd1fa3ba980604e55615d271580f9f0afc01c" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; type has a &lt;a href=&quot;qml-qtquick-item#states-prop&quot;&gt;states&lt;/a&gt; property that is used to hold a list of &lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt; type objects. The code below initializes the value of this property to a list of three &lt;a href=&quot;qml-qtquick-state&quot;&gt;State&lt;/a&gt; objects:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="9bc002fb8bf128785046c7d8aa6477e6f9f0da69" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt; type has an attached property &lt;a href=&quot;qml-qtquick-listview#isCurrentItem-attached-prop&quot;&gt;ListView.isCurrentItem&lt;/a&gt; that is available to each delegate object in a &lt;a href=&quot;qml-qtquick-listview&quot;&gt;ListView&lt;/a&gt;. This can be used by each individual delegate object to determine whether it is the currently selected item in the view:</source>
          <target state="translated">예를 들어, 상기 &lt;a href=&quot;qml-qtquick-listview&quot;&gt;의 ListView&lt;/a&gt; 유형 연결된 속성 갖는다 &lt;a href=&quot;qml-qtquick-listview#isCurrentItem-attached-prop&quot;&gt;ListView.isCurrentItem&lt;/a&gt; A의 각 대표 객체에 사용할 &lt;a href=&quot;qml-qtquick-listview&quot;&gt;목록보기&lt;/a&gt; . 이것은 각각의 개별 델리게이트 개체가 뷰에서 현재 선택된 항목인지 확인하기 위해 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="becf8657b2e0b5278325c657a5217bfc5b4e598e" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; type has a &lt;a href=&quot;qml-qtquick-mousearea#pressed-signal&quot;&gt;pressed&lt;/a&gt; property. To receive a notification whenever this property changes, write a signal handler named &lt;code&gt;onPressedChanged&lt;/code&gt;:</source>
          <target state="translated">예를 들어 &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; 유형에는 &lt;a href=&quot;qml-qtquick-mousearea#pressed-signal&quot;&gt;프레스&lt;/a&gt; 속성이 있습니다. 이 속성이 변경 될 때마다 알림을 받으려면 &lt;code&gt;onPressedChanged&lt;/code&gt; 라는 신호 처리기를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="8ddb10ef8a342a16680f707418cdf921694d310d" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; type attaches interpolated value properties to its delegates depending on their position in the path. As &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; only meaningfully attaches these properties to the root object in the delegate, any sub-object that accesses them must explicitly qualify the root object, as shown below.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView&lt;/a&gt; 유형은 경로에서의 위치에 따라 보간 된 값 속성을 대리자에 연결합니다. &lt;a href=&quot;qml-qtquick-pathview&quot;&gt;PathView는&lt;/a&gt; 이러한 속성을 대리자의 루트 개체에만 의미있게 연결하기 때문에 아래에 표시된 것처럼 해당 속성에 액세스하는 모든 하위 개체는 루트 개체를 명시 적으로 규정해야합니다.</target>
        </trans-unit>
        <trans-unit id="9a70e4ddf4891677d6f0c97a49442e376e63edb0" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; below initially ensures that its &lt;code&gt;height&lt;/code&gt; is always twice its &lt;code&gt;width&lt;/code&gt;. However, when the space key is pressed, the current value of &lt;code&gt;width*3&lt;/code&gt; will be assigned to &lt;code&gt;height&lt;/code&gt; as a</source>
          <target state="translated">예를 들어, 아래 의 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 은 처음에 &lt;code&gt;height&lt;/code&gt; 가 항상 &lt;code&gt;width&lt;/code&gt; 두 배가 되도록합니다 . 그러나 스페이스 키를 누르면 &lt;code&gt;width*3&lt;/code&gt; 의 현재 값이 &lt;code&gt;height&lt;/code&gt; 로 지정 됩니다.</target>
        </trans-unit>
        <trans-unit id="8654df58d0cea104577db60cac4e9b258a7ddd29" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; object declaration below includes a &lt;a href=&quot;qml-qtquick-gradient&quot;&gt;Gradient&lt;/a&gt; object declaration, which in turn contains two &lt;a href=&quot;qml-qtquick-gradientstop&quot;&gt;GradientStop&lt;/a&gt; declarations:</source>
          <target state="translated">예를 들어, 아래 의 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 객체 선언에는 &lt;a href=&quot;qml-qtquick-gradient&quot;&gt;Gradient&lt;/a&gt; 객체 선언이 포함되어 있으며 , 여기에는 두 개의 &lt;a href=&quot;qml-qtquick-gradientstop&quot;&gt;GradientStop&lt;/a&gt; 선언이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f762e04b4027681c8956a13c836901d7ae3f70e8" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; type has a &lt;a href=&quot;qml-qtquick-text#font.family-prop&quot;&gt;font&lt;/a&gt; group property. Below, the first &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; object initializes its &lt;code&gt;font&lt;/code&gt; values using dot notation, while the second uses group notation:</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qml-qtquick-text&quot;&gt;텍스트&lt;/a&gt; 유형에는 &lt;a href=&quot;qml-qtquick-text#font.family-prop&quot;&gt;글꼴&lt;/a&gt; 그룹 속성이 있습니다. 아래에서 첫 번째 &lt;a href=&quot;qml-qtquick-text&quot;&gt;Text&lt;/a&gt; 객체는 점 표기법을 사용하여 &lt;code&gt;font&lt;/code&gt; 값을 초기화하고 두 번째 Text 객체 는 그룹 표기법을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="48a153056e0a472ce9e0f584ad3e3409291c57a1" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::AlignmentFlag&lt;/a&gt; enumeration has &lt;code&gt;Qt&lt;/code&gt; as the scope and &lt;code&gt;AlignmentFlag&lt;/code&gt; as the name.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt :: AlignmentFlag&lt;/a&gt; 열거 형은 &lt;code&gt;Qt&lt;/code&gt; 를 범위로, &lt;code&gt;AlignmentFlag&lt;/code&gt; 를 이름으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="bf88ed2876a88ffef49b35beee6e6c7f34eca7cf" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt::AlignmentFlag&lt;/a&gt; flag has &lt;code&gt;AlignmentFlag&lt;/code&gt; as the enum name, but &lt;code&gt;Alignment&lt;/code&gt; as as the type name. Non flag enums has the same type and enum names.</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qt#AlignmentFlag-enum&quot;&gt;Qt는 :: AlignmentFlag의&lt;/a&gt; 플래그가 &lt;code&gt;AlignmentFlag&lt;/code&gt; 열거 이름으로 만 &lt;code&gt;Alignment&lt;/code&gt; 유형의 이름으로. 비 플래그 열거 형은 유형 및 열거 형 이름이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="6918005e22ac6f1479f78fcf2b0723a563e7a442" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt::Key&lt;/a&gt; enumeration has &lt;code&gt;Key&lt;/code&gt; as the type name and &lt;a href=&quot;qt&quot;&gt;Qt&lt;/a&gt; as the scope.</source>
          <target state="translated">예를 들어, &lt;a href=&quot;qt#Key-enum&quot;&gt;Qt :: Key&lt;/a&gt; 열거에는 유형 이름으로 &lt;code&gt;Key&lt;/code&gt; 가 있고 범위로 &lt;a href=&quot;qt&quot;&gt;Qt&lt;/a&gt; 가 있습니다.</target>
        </trans-unit>
        <trans-unit id="adc7cf7accb0681126ce05ff7d09eadb9fdd0632" translate="yes" xml:space="preserve">
          <source>For example, the &lt;a href=&quot;qt3dlogic-qframeaction&quot;&gt;QFrameAction&lt;/a&gt; can be used to animate a property in sync with the Qt3D engine where a Qt Quick animation element is not perfectly synchronized and may lead to stutters in some cases.</source>
          <target state="translated">예를 들어 &lt;a href=&quot;qt3dlogic-qframeaction&quot;&gt;QFrameAction&lt;/a&gt; 을 사용하면 Qt Quick 애니메이션 요소가 완벽하게 동기화되지 않고 경우에 따라 끊김 현상 이 발생할 수있는 Qt3D 엔진과 동기화하여 속성에 애니메이션을 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8335038771fdf0069499b867f024a07410d30566" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;Component.onCompleted&lt;/code&gt; handler below is defined within the scope of the &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;. In this scope, &lt;code&gt;width&lt;/code&gt; refers to the &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt;'s width, not the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;'s width. To bind the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;'s &lt;code&gt;height&lt;/code&gt; to its own &lt;code&gt;width&lt;/code&gt;, the binding expression must explicitly refer to &lt;code&gt;this.width&lt;/code&gt; (or alternatively, &lt;code&gt;rect.width&lt;/code&gt;):</source>
          <target state="translated">예를 들어 아래 &lt;code&gt;Component.onCompleted&lt;/code&gt; 핸들러는 &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; 범위 내에서 정의됩니다 . 이 범위에서 &lt;code&gt;width&lt;/code&gt; 는 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 의 너비가 아니라 &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; 의 너비를 나타냅니다 . 바인드하기 위해 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;사각형&lt;/a&gt; 의 &lt;code&gt;height&lt;/code&gt; 그 자체로 &lt;code&gt;width&lt;/code&gt; , 바인딩 표현은 명시 적으로 참조해야 &lt;code&gt;this.width&lt;/code&gt; (또는 대안 적으로, &lt;code&gt;rect.width&lt;/code&gt; ) :</target>
        </trans-unit>
        <trans-unit id="ece1ef6a1f0a1e120267ec4046bb62ca7b607a96" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;Message&lt;/code&gt; type might have a &lt;code&gt;body&lt;/code&gt; property of type &lt;code&gt;MessageBody*&lt;/code&gt;:</source>
          <target state="translated">예를 들어, &lt;code&gt;Message&lt;/code&gt; 유형에는 &lt;code&gt;MessageBody*&lt;/code&gt; 유형 의 &lt;code&gt;body&lt;/code&gt; 특성이 있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5d729cb6ca6413d35edbada1121d76f0c6b1f9c3" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;MessageBoard&lt;/code&gt; class below has a &lt;code&gt;messages&lt;/code&gt; property of type &lt;a href=&quot;qqmllistproperty&quot;&gt;QQmlListProperty&lt;/a&gt; that stores a list of &lt;code&gt;Message&lt;/code&gt; instances:</source>
          <target state="translated">예를 들어 아래 의 &lt;code&gt;MessageBoard&lt;/code&gt; 클래스에는 &lt;code&gt;Message&lt;/code&gt; 인스턴스 목록을 저장하는 &lt;a href=&quot;qqmllistproperty&quot;&gt;QQmlListProperty&lt;/a&gt; 유형 의 &lt;code&gt;messages&lt;/code&gt; 속성이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5c504ab3aa65e1e039ae7e0aab1a396b62c63729" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;MessageBoard&lt;/code&gt; class below has a &lt;code&gt;postMessage()&lt;/code&gt; method that has been flagged with the &lt;a href=&quot;qobject#Q_INVOKABLE&quot;&gt;Q_INVOKABLE&lt;/a&gt; macro, as well as a &lt;code&gt;refresh()&lt;/code&gt; method that is a public slot:</source>
          <target state="translated">예를 들어, 아래 &lt;code&gt;MessageBoard&lt;/code&gt; 클래스 에는 &lt;a href=&quot;qobject#Q_INVOKABLE&quot;&gt;Q_INVOKABLE&lt;/a&gt; 매크로 로 플래그가 지정된 &lt;code&gt;postMessage()&lt;/code&gt; 메소드와 공개 슬롯 인 &lt;code&gt;refresh()&lt;/code&gt; 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c877c302624a95e691a75d25dd97f3b6b2a0d3b" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;fibonacci()&lt;/code&gt; method in the earlier example could be moved into an external file named &lt;code&gt;fib.js&lt;/code&gt;, and accessed like this:</source>
          <target state="translated">예를 들어, 이전 예제 의 &lt;code&gt;fibonacci()&lt;/code&gt; 메소드는 &lt;code&gt;fib.js&lt;/code&gt; 라는 외부 파일로 이동하여 다음 과 같이 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d7a20c5748ed30cbf72355ef40241794ff17b07" translate="yes" xml:space="preserve">
          <source>For example, the &lt;code&gt;onClicked&lt;/code&gt; handler in the earlier example could have been received by the root &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; instead, by placing the &lt;code&gt;onClicked&lt;/code&gt; handler in a &lt;a href=&quot;qml-qtqml-connections&quot;&gt;Connections&lt;/a&gt; object that has its &lt;a href=&quot;qml-qtqml-connections#target-prop&quot;&gt;target&lt;/a&gt; set to the &lt;code&gt;button&lt;/code&gt;:</source>
          <target state="translated">예를 들어, &lt;code&gt;onClicked&lt;/code&gt; 이전 예제에서 핸들러가 루트에 의해 수신 된 수있는 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;사각형&lt;/a&gt; 배치하여, 대신 &lt;code&gt;onClicked&lt;/code&gt; A의 핸들러를 &lt;a href=&quot;qml-qtqml-connections&quot;&gt;연결&lt;/a&gt; 하는이이 개체를 &lt;a href=&quot;qml-qtqml-connections#target-prop&quot;&gt;대상&lt;/a&gt; 받는 설정 &lt;code&gt;button&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="93534a158863a40b21b8f6b6a03b221488aa9acf" translate="yes" xml:space="preserve">
          <source>For example, the Column below sets the &lt;a href=&quot;qml-qtquick-column#move-prop&quot;&gt;move&lt;/a&gt; property to a specific &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;:</source>
          <target state="translated">예를 들어 아래 열은 &lt;a href=&quot;qml-qtquick-column#move-prop&quot;&gt;이동&lt;/a&gt; 속성을 특정 &lt;a href=&quot;https://doc.qt.io/qt-5.13/qmlexampletoggleswitch.html#transition&quot;&gt;전환으로&lt;/a&gt; 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="290c18b1e32987621840db97a538e4d81443453d" translate="yes" xml:space="preserve">
          <source>For example, the Column below sets the &lt;a href=&quot;qml-qtquick-column#move-prop&quot;&gt;move&lt;/a&gt; property to a specific &lt;a href=&quot;https://doc.qt.io/qt-5.15/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;:</source>
          <target state="translated">예를 들어 아래 열은 &lt;a href=&quot;qml-qtquick-column#move-prop&quot;&gt;이동&lt;/a&gt; 속성을 특정 &lt;a href=&quot;https://doc.qt.io/qt-5.15/qmlexampletoggleswitch.html#transition&quot;&gt;전환으로&lt;/a&gt; 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="a7ed2d85b17d4d140d6a1bed81529bae0f67b53a" translate="yes" xml:space="preserve">
          <source>For example, the Column below sets the &lt;a href=&quot;qml-qtquick-column#move-prop&quot;&gt;move&lt;/a&gt; property to a specific &lt;a href=&quot;https://doc.qt.io/qt-6.0/qmlexampletoggleswitch.html#transition&quot;&gt;Transition&lt;/a&gt;:</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="64cf4eeffe71f05c36f907bf90f1a09bc68d8db7" translate="yes" xml:space="preserve">
          <source>For example, the D-Bus service is defined by &lt;code&gt;freedesktop.org&lt;/code&gt; and can be found on the bus under the service name:</source>
          <target state="translated">예를 들어, D- 버스 서비스는 &lt;code&gt;freedesktop.org&lt;/code&gt; 에 의해 정의되며 버스에서 서비스 이름으로 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfa7794318b076a4aa767fc4e1ca4dcbef67d95d" translate="yes" xml:space="preserve">
          <source>For example, the FrameAction can be used to animate a property in sync with the Qt3D engine where a Qt Quick animation element is not perfectly synchronized and may lead to stutters in some cases.</source>
          <target state="translated">예를 들어 FrameAction을 사용하여 Qt Quick 애니메이션 요소가 완벽하게 동기화되지 않고 경우에 따라 끊김 현상이 발생할 수있는 Qt3D 엔진과 동기화 된 속성을 애니메이션 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f1240579852829952b56f25815f13374e03e616" translate="yes" xml:space="preserve">
          <source>For example, the QFrameAction can be used to animate a property in sync with the Qt3D engine where a Qt Quick animation element is not perfectly synchronized and may lead to stutters in some cases.</source>
          <target state="translated">예를 들어, Qt Quick 애니메이션 요소가 완벽하게 동기화되지 않고 경우에 따라 끊김 현상이 발생할 수있는 Qt3D 엔진과 동기화 된 속성을 애니메이션하는 데 QFrameAction을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="03e09fbb77d55813bd1f4789324ada7a221c869e" translate="yes" xml:space="preserve">
          <source>For example, the QML code below left calls &lt;code&gt;showCalculations()&lt;/code&gt; in &lt;code&gt;script.mjs&lt;/code&gt;, which in turn can call &lt;code&gt;factorial()&lt;/code&gt; in &lt;code&gt;factorial.mjs&lt;/code&gt;, as it has included &lt;code&gt;factorial.mjs&lt;/code&gt; using &lt;code&gt;import&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 왼쪽 통화 아래 QML 코드 &lt;code&gt;showCalculations()&lt;/code&gt; 에서 &lt;code&gt;script.mjs&lt;/code&gt; 차례로 호출 할 수 있습니다, &lt;code&gt;factorial()&lt;/code&gt; 에 &lt;code&gt;factorial.mjs&lt;/code&gt; 가 포함 것처럼, &lt;code&gt;factorial.mjs&lt;/code&gt; 을 사용하여 &lt;code&gt;import&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ce6ef5f93bfd07e1ae75073dccb8bb746a5b9ad3" translate="yes" xml:space="preserve">
          <source>For example, the above code can be changed to use a Connections object, like this:</source>
          <target state="translated">예를 들어 위 코드는 다음과 같이 Connections 객체를 사용하도록 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="926cf2879f0bd20810b72ce71e87ae82844078ad" translate="yes" xml:space="preserve">
          <source>For example, the code below is defined in a file named &lt;code&gt;SquareButton.qml&lt;/code&gt;. The root &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; object has an &lt;code&gt;activated&lt;/code&gt; signal, which is emitted whenever the child &lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;TapHandler&lt;/a&gt; is &lt;code&gt;tapped&lt;/code&gt;. In this particular example the activated signal is emitted with the x and y coordinates of the mouse click:</source>
          <target state="translated">예를 들어 아래 코드는 &lt;code&gt;SquareButton.qml&lt;/code&gt; 파일에 정의되어 있습니다. 루트 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 객체에는 &lt;code&gt;activated&lt;/code&gt; 신호가 &lt;a href=&quot;qml-qtquick-taphandler&quot;&gt;있으며이&lt;/a&gt; 신호는 자식 TapHandler 를 &lt;code&gt;tapped&lt;/code&gt; 때마다 발생합니다 . 이 특정 예제에서 활성화 된 신호는 마우스 클릭의 x 및 y 좌표와 함께 방출됩니다.</target>
        </trans-unit>
        <trans-unit id="1cde23552106e2ca71ff9e7aaedeea1c88ddd8ec" translate="yes" xml:space="preserve">
          <source>For example, the code below selects a model which creates delegates named</source>
          <target state="translated">예를 들어 아래 코드는 델리게이트를 생성하는 모델을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="1a9e1c032d8fae3a60f118255ee79d606ab535b3" translate="yes" xml:space="preserve">
          <source>For example, the code in the &lt;code&gt;Component.onCompleted&lt;/code&gt; block below is invalid:</source>
          <target state="translated">예를 들어 아래 &lt;code&gt;Component.onCompleted&lt;/code&gt; 블록 의 코드 가 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6ece612eaafa183b046fcb8425404de643a830d0" translate="yes" xml:space="preserve">
          <source>For example, the code snippet below results in a warning whenever you release the mouse. This is because the value of the binding is undefined when the mouse isn't pressed.</source>
          <target state="translated">예를 들어 아래 코드 스 니펫은 마우스를 놓을 때마다 경고를 표시합니다. 마우스를 누르지 않으면 바인딩 값이 정의되지 않기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="d0103a0bc2c9841ee84a7a6d74b3f99fe9fd718d" translate="yes" xml:space="preserve">
          <source>For example, the configuration file for Qt Creator defines only one subproject for its documentation, including all the documentation in a single manual:</source>
          <target state="translated">예를 들어, Qt Creator의 구성 파일은 단일 매뉴얼의 모든 문서를 포함하여 해당 문서에 대해 하나의 서브 프로젝트 만 정의합니다.</target>
        </trans-unit>
        <trans-unit id="6169ddb9a773eafd5f3f8c24fc8aa0cba30a5b39" translate="yes" xml:space="preserve">
          <source>For example, the configuration file for the Qt Quick documentation set specifies information about the set as subvariables with the &lt;code&gt;qhp.QtQuick&lt;/code&gt; prefix:</source>
          <target state="translated">예를 들어, Qt Quick 문서 세트의 구성 파일은 &lt;code&gt;qhp.QtQuick&lt;/code&gt; 접 두부를 사용하여 세트에 대한 정보를 하위 변수로 지정 합니다.</target>
        </trans-unit>
        <trans-unit id="efcfcf76b15c4dd8d79b80bb9374cf1a1f7a0f3d" translate="yes" xml:space="preserve">
          <source>For example, the example TabWidget type has a fictitious read-only property &lt;code&gt;sampleReadOnlyProperty&lt;/code&gt;. Its declaration has the &lt;code&gt;readonly&lt;/code&gt; identifier and it has an initial value.</source>
          <target state="translated">예를 들어, 예제 TabWidget 유형은 가상의 읽기 전용 특성 &lt;code&gt;sampleReadOnlyProperty&lt;/code&gt; 를 갖습니다 . 선언에는 &lt;code&gt;readonly&lt;/code&gt; 식별자가 있으며 초기 값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="c22c73e75806803d981d4a9316e1742d1df1f4ed" translate="yes" xml:space="preserve">
          <source>For example, the file path &lt;code&gt;:/images/cut.png&lt;/code&gt; or the URL &lt;code&gt;qrc:///images/cut.png&lt;/code&gt; would give access to the &lt;code&gt;cut.png&lt;/code&gt; file, whose location in the application's source tree is &lt;code&gt;images/cut.png&lt;/code&gt;. This can be changed using the &lt;code&gt;file&lt;/code&gt; tag's &lt;code&gt;alias&lt;/code&gt; attribute:</source>
          <target state="translated">예를 들어, 파일 경로 &lt;code&gt;:/images/cut.png&lt;/code&gt; 또는 URL &lt;code&gt;qrc:///images/cut.png&lt;/code&gt; 는 애플리케이션 소스 트리의 위치가 &lt;code&gt;images/cut.png&lt;/code&gt; 인 &lt;code&gt;cut.png&lt;/code&gt; 파일에 대한 액세스를 제공합니다 . &lt;code&gt;file&lt;/code&gt; 태그의 &lt;code&gt;alias&lt;/code&gt; 속성을 사용하여 변경할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="f39de7af75e5423bfd0678c998c433c633fedf10" translate="yes" xml:space="preserve">
          <source>For example, the following .pro file snippet specifies two .qml files in the application.</source>
          <target state="translated">예를 들어 다음 .pro 파일 조각은 응용 프로그램에서 두 개의 .qml 파일을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="d5608d16917abea0a186cbf33f1d61277b0da04d" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;a href=&quot;qml-qtquick-parentchange&quot;&gt;ParentChange&lt;/a&gt; changes &lt;code&gt;blueRect&lt;/code&gt; to become a child of &lt;code&gt;redRect&lt;/code&gt; when it is clicked. The inclusion of the &lt;a href=&quot;qml-qtquick-parentanimation&quot;&gt;ParentAnimation&lt;/a&gt;, which defines a &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; to be applied during the transition, ensures the item animates smoothly as it moves to its new parent:</source>
          <target state="translated">예를 들어 다음 &lt;a href=&quot;qml-qtquick-parentchange&quot;&gt;ParentChange&lt;/a&gt; 는 &lt;code&gt;blueRect&lt;/code&gt; 를 클릭하면 &lt;code&gt;redRect&lt;/code&gt; 의 자식이되도록 blueRect 를 변경 합니다. 의 포함 &lt;a href=&quot;qml-qtquick-parentanimation&quot;&gt;ParentAnimation&lt;/a&gt; 정의 &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation를&lt;/a&gt; 전환하는 동안 적용되는, 그것은 새로운 부모에게 이동하면서 상품을 원활 애니메이션 보장 :</target>
        </trans-unit>
        <trans-unit id="1ea05cb7b29b48794961ef6c8f6d12eb6be7b87c" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;a href=&quot;qml-qtquick-parentchange&quot;&gt;ParentChange&lt;/a&gt; changes &lt;code&gt;blueRect&lt;/code&gt; to become a child of &lt;code&gt;redRect&lt;/code&gt; when it is clicked. The inclusion of the ParentAnimation, which defines a &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; to be applied during the transition, ensures the item animates smoothly as it moves to its new parent:</source>
          <target state="translated">예를 들어, 다음 &lt;a href=&quot;qml-qtquick-parentchange&quot;&gt;ParentChange는&lt;/a&gt; 변경 &lt;code&gt;blueRect&lt;/code&gt; 을 의 자식이 될 &lt;code&gt;redRect&lt;/code&gt; 클릭했을 때. 정의 ParentAnimation의 포함 &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation를&lt;/a&gt; 전환하는 동안 적용되는, 그것은 새로운 부모에게 이동하면서 상품을 원활 애니메이션 보장 :</target>
        </trans-unit>
        <trans-unit id="f5be9fd23b9bff728f8735b740a70c2221d80e7b" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; has two states: the default state, and an added &quot;moved&quot; state. In the &quot;moved state, the rectangle's position changes to (50, 50). The added Transition specifies that when the rectangle changes between the default and the &quot;moved&quot; state, any changes to the &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt; properties should be animated, using an &lt;code&gt;Easing.InOutQuad&lt;/code&gt;.</source>
          <target state="translated">예를 들어 다음 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 에는 기본 상태와 추가 된 &quot;이동 된&quot;상태라는 두 가지 상태가 있습니다. &quot;이동 한 상태에서 사각형의 위치가 (50, 50)으로 변경됩니다. 추가 된 전환은 사각형이 기본 상태와&quot;이동 된 &quot;상태 사이에서 변경 될 때 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 속성에 대한 변경 사항 이 &lt;code&gt;Easing.InOutQuad&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="341e47c8cec38132bc8dbb88ef6697dc72f32219" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;code&gt;Feature&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 다음 &lt;code&gt;Feature&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="859156375e4e9a420bc215c13814e39452d750c2" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;code&gt;FeatureCollection&lt;/code&gt;:</source>
          <target state="translated">예를 들어 다음 &lt;code&gt;FeatureCollection&lt;/code&gt; 은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="61bfd8a56982ac96df0a10473474765b72a63ca5" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;code&gt;GeometryCollection&lt;/code&gt;:</source>
          <target state="translated">예를 들어 다음 &lt;code&gt;GeometryCollection&lt;/code&gt; 은 다음과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5df56e0c8ab2e991df380eea32c7dd085ab3d2d8" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;code&gt;Info.plist&lt;/code&gt; file declares that the application can act as a viewer for files with a PNG extension:</source>
          <target state="translated">예를 들어 다음 &lt;code&gt;Info.plist&lt;/code&gt; 파일은 응용 프로그램이 PNG 확장자를 가진 파일의 뷰어 역할을 할 수 있음을 선언합니다.</target>
        </trans-unit>
        <trans-unit id="d60fb1d6de91aa2f6721cdbd2a52950b9f59af3c" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;code&gt;application.qml&lt;/code&gt; loads &lt;code&gt;KeyReader.qml&lt;/code&gt; when the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; is clicked. Notice the &lt;a href=&quot;qml-qtquick-item#focus-prop&quot;&gt;focus&lt;/a&gt; property is set to &lt;code&gt;true&lt;/code&gt; for the Loader as well as the &lt;a href=&quot;qml-qtquick-item&quot;&gt;Item&lt;/a&gt; in the dynamically loaded object:</source>
          <target state="translated">예를 들어, 다음 &lt;code&gt;application.qml&lt;/code&gt; 로드 &lt;code&gt;KeyReader.qml&lt;/code&gt; 때 &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea을&lt;/a&gt; 클릭합니다. 통지 &lt;a href=&quot;qml-qtquick-item#focus-prop&quot;&gt;초점&lt;/a&gt; 속성이 설정되어 &lt;code&gt;true&lt;/code&gt; 아니라만큼 로더에 대한 &lt;a href=&quot;qml-qtquick-item&quot;&gt;항목&lt;/a&gt; 동적으로로드 된 객체 :</target>
        </trans-unit>
        <trans-unit id="1c60aa44fe46f7379bbdf880fe413d7daa194f6a" translate="yes" xml:space="preserve">
          <source>For example, the following &lt;code&gt;target.path&lt;/code&gt; definition describes where the build target will be installed, and the &lt;code&gt;INSTALLS&lt;/code&gt; assignment adds the build target to the list of existing resources to be installed:</source>
          <target state="translated">예를 들어, 다음 &lt;code&gt;target.path&lt;/code&gt; 정의는 빌드 대상을 설치할 위치를 설명하고 &lt;code&gt;INSTALLS&lt;/code&gt; 지정은 빌드 대상을 설치할 기존 자원 목록에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6143328a6bbb20315419609c5d9ba3e44d20bee4" translate="yes" xml:space="preserve">
          <source>For example, the following Behavior defines a &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; to be run whenever the &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt;'s &lt;code&gt;width&lt;/code&gt; value changes. When the &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea&lt;/a&gt; is clicked, the &lt;code&gt;width&lt;/code&gt; is changed, triggering the behavior's animation:</source>
          <target state="translated">예를 들어 다음 비헤이비어는 &lt;a href=&quot;qml-qtquick-rectangle&quot;&gt;Rectangle&lt;/a&gt; 의 &lt;code&gt;width&lt;/code&gt; 값이 변경 될 때마다 실행될 &lt;a href=&quot;qml-qtquick-numberanimation&quot;&gt;NumberAnimation&lt;/a&gt; 을 정의합니다 . 때 &lt;a href=&quot;qml-qtquick-mousearea&quot;&gt;MouseArea가&lt;/a&gt; 클릭의 &lt;code&gt;width&lt;/code&gt; 동작의 애니메이션을 트리거, 변경 :</target>
        </trans-unit>
        <trans-unit id="bc47c13d2f2f89114c2cc2c101271dd1dac155c5" translate="yes" xml:space="preserve">
          <source>For example, the following BoundaryRule prevents &lt;a href=&quot;qml-qtquick-draghandler&quot;&gt;DragHandler&lt;/a&gt; from dragging the Rectangle too far:</source>
          <target state="translated">예를 들어 다음 BoundaryRule은 &lt;a href=&quot;qml-qtquick-draghandler&quot;&gt;DragHandler&lt;/a&gt; 가 Rectangle을 너무 멀리 끌지 못하게합니다 .</target>
        </trans-unit>
        <trans-unit id="dd75ad586fcae3169e6aeb02591ae7a9b08a59bd" translate="yes" xml:space="preserve">
          <source>For example, the following GeoJSON document contains a &lt;code&gt;LineString&lt;/code&gt; geometry:</source>
          <target state="translated">예를 들어 다음 GeoJSON 문서에는 &lt;code&gt;LineString&lt;/code&gt; 도형이 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a7668208b4a770a256776f3dbdb82b59c280a662" translate="yes" xml:space="preserve">
          <source>For example, the following GeoJSON document contains a &lt;code&gt;MultiLineString&lt;/code&gt; geometry:</source>
          <target state="translated">예를 들어 다음 GeoJSON 문서에는 &lt;code&gt;MultiLineString&lt;/code&gt; 지오메트리 가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b5cfbc5a7c644d49d5054358c1a73b0fea7a56f8" translate="yes" xml:space="preserve">
          <source>For example, the following GeoJSON document contains a &lt;code&gt;MultiPoint&lt;/code&gt; geometry:</source>
          <target state="translated">예를 들어 다음 GeoJSON 문서에는 &lt;code&gt;MultiPoint&lt;/code&gt; 지오메트리 가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3a167df124d12c52e16e71c8d3cc1fe2b6f0c8ec" translate="yes" xml:space="preserve">
          <source>For example, the following GeoJSON document contains a &lt;code&gt;MultiPolygon&lt;/code&gt; geometry:</source>
          <target state="translated">예를 들어 다음 GeoJSON 문서에는 &lt;code&gt;MultiPolygon&lt;/code&gt; 지오메트리 가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="965ea7af41942ce9f98ea190bb15e27b4a172f42" translate="yes" xml:space="preserve">
          <source>For example, the following GeoJSON document contains a &lt;code&gt;Point&lt;/code&gt; geometry:</source>
          <target state="translated">예를 들어 다음 GeoJSON 문서에는 &lt;code&gt;Point&lt;/code&gt; 지오메트리 가 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="105769b8d0cb6d1a8f8bbae00bb4aad053df4da1" translate="yes" xml:space="preserve">
          <source>For example, the following GeoJSON document contains a &lt;code&gt;Polygon&lt;/code&gt; geometry:</source>
          <target state="translated">예를 들어 다음 GeoJSON 문서에는 &lt;code&gt;Polygon&lt;/code&gt; 도형이 포함되어 있습니다 .</target>
        </trans-unit>
        <trans-unit id="891057895d49f3c82548b26c0d1fbecf9b9c4f0c" translate="yes" xml:space="preserve">
          <source>For example, the following QML document refers to a &lt;code&gt;lottoNumbers&lt;/code&gt; property which does not exist within the document:</source>
          <target state="translated">예를 들어, 다음 QML 문서는 문서 내에 존재하지 않는 &lt;code&gt;lottoNumbers&lt;/code&gt; 특성을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="ff59a35655c09efc8d29adcf26db12c7a59ea449" translate="yes" xml:space="preserve">
          <source>For example, the following URL contains a recipient (&lt;code&gt;user@foo.com&lt;/code&gt;), a subject (&lt;code&gt;Test&lt;/code&gt;), and a message body (&lt;code&gt;Just a test&lt;/code&gt;):</source>
          <target state="translated">예를 들어 다음 URL에는 수신자 ( &lt;code&gt;user@foo.com&lt;/code&gt; ), 제목 ( &lt;code&gt;Test&lt;/code&gt; ) 및 메시지 본문 ( &lt;code&gt;Just a test&lt;/code&gt; )이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="f57d8c52fbcc5c977bd23eb4a0eb13d334a4de47" translate="yes" xml:space="preserve">
          <source>For example, the following animation is not applied until a color value has reached &quot;#c0c0c0&quot;:</source>
          <target state="translated">예를 들어 색상 값이 &quot;# c0c0c0&quot;에 도달 할 때까지 다음 애니메이션이 적용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cc312ec8cc555d366b1e9b6983896ee479d1bbeb" translate="yes" xml:space="preserve">
          <source>For example, the following animation is not applied until the &lt;code&gt;angle&lt;/code&gt; value has reached 100:</source>
          <target state="translated">예를 들어 &lt;code&gt;angle&lt;/code&gt; 값이 100에 도달 할 때까지 다음 애니메이션이 적용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="673523ec24ab9465f20d8dc2ca300c29e3713308" translate="yes" xml:space="preserve">
          <source>For example, the following animation is not applied until the &lt;code&gt;x&lt;/code&gt; value has reached 100:</source>
          <target state="translated">예를 들어, &lt;code&gt;x&lt;/code&gt; 값이 100에 도달 할 때까지 다음 애니메이션이 적용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ef421648fe72af9d1ea001dd28dfa0910c86c986" translate="yes" xml:space="preserve">
          <source>For example, the following assigns a valid URL to the &lt;a href=&quot;qml-qtquick-image#source-prop&quot;&gt;Image::source&lt;/a&gt; property, which is of type &lt;code&gt;url&lt;/code&gt;:</source>
          <target state="translated">예를 들어, 다음 은 &lt;code&gt;url&lt;/code&gt; 유형 의 &lt;a href=&quot;qml-qtquick-image#source-prop&quot;&gt;Image :: source&lt;/a&gt; 속성에 유효한 URL을 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="3e6a3ad80093bda070978ee64748fd79facb43af" translate="yes" xml:space="preserve">
          <source>For example, the following bar sets have equal values:</source>
          <target state="translated">예를 들어 다음 막대 세트의 값은 같습니다.</target>
        </trans-unit>
        <trans-unit id="bbdee4aee43320dc8503eb5f110e16c8a0111f25" translate="yes" xml:space="preserve">
          <source>For example, the following call converts the hexadecimal number &lt;code&gt;BAD&lt;/code&gt; to &lt;code&gt;002989&lt;/code&gt;:</source>
          <target state="translated">예를 들어 다음 호출은 16 진수 &lt;code&gt;BAD&lt;/code&gt; 를 &lt;code&gt;002989&lt;/code&gt; 로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="52662b57587184c7d12711b6e578e98394f58804" translate="yes" xml:space="preserve">
          <source>For example, the following call outputs &lt;code&gt;surname&lt;/code&gt;:</source>
          <target state="translated">예를 들어 다음 호출은 &lt;code&gt;surname&lt;/code&gt; 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="0db84ee91bca3fca2dd3dc64481a089c4e86efb1" translate="yes" xml:space="preserve">
          <source>For example, the following call returns &lt;code&gt;firstname&lt;/code&gt;:</source>
          <target state="translated">예를 들어 다음 호출은 &lt;code&gt;firstname&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a2854f887f0023dd0b9466c377d0687268e84eae" translate="yes" xml:space="preserve">
          <source>For example, the following call returns &lt;code&gt;phone&lt;/code&gt;:</source>
          <target state="translated">예를 들어 다음 호출은 &lt;code&gt;phone&lt;/code&gt; 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="6e0d76a6b0ace1905270fdee93ae3b9ca61a996c" translate="yes" xml:space="preserve">
          <source>For example, the following call returns a list of all available SocketCAN interfaces (which can be used for &lt;a href=&quot;qcanbus#createDevice&quot;&gt;createDevice&lt;/a&gt;()):</source>
          <target state="translated">예를 들어, 다음 호출은 사용 가능한 모든 SocketCAN 인터페이스 ( &lt;a href=&quot;qcanbus#createDevice&quot;&gt;createDevice&lt;/a&gt; ()에 사용할 수있는) 목록을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="b06fe462a6608b1111f3e4fab697691035470625" translate="yes" xml:space="preserve">
          <source>For example, the following call returns the string &lt;code&gt;&quot;/home/johndoe/myproject/readme.txt&quot;&lt;/code&gt;:</source>
          <target state="translated">예를 들어 다음 호출은 &lt;code&gt;&quot;/home/johndoe/myproject/readme.txt&quot;&lt;/code&gt; 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="341535f336cc848c57c0f659d5cdf830e847c7e2" translate="yes" xml:space="preserve">
          <source>For example, the following call would connect to the SocketCAN interface vcan0:</source>
          <target state="translated">예를 들어 다음 호출은 SocketCAN 인터페이스 vcan0에 연결됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
