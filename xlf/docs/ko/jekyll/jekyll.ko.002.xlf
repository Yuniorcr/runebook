<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="jekyll">
    <body>
      <group id="jekyll">
        <trans-unit id="51ec816b81fe45eabe5985c6e5949f02c4715433" translate="yes" xml:space="preserve">
          <source>Front Matter Variables Are Optional</source>
          <target state="translated">Front Matter 변수는 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="fe601000d1934a854a60fca8d0cc33ca18d5d81a" translate="yes" xml:space="preserve">
          <source>Front Matter defaults</source>
          <target state="translated">전면 문제 기본값</target>
        </trans-unit>
        <trans-unit id="01503e4d79f20a1c22bfc4ed9c7fec93699ce001" translate="yes" xml:space="preserve">
          <source>Front matter defaults</source>
          <target state="translated">머리말 기본값</target>
        </trans-unit>
        <trans-unit id="d0d415a3116cf5a7575b7864ef687cc71df1f621" translate="yes" xml:space="preserve">
          <source>Front matter is a snippet of &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; which sits between two triple-dashed lines at the top of a file. Front matter is used to set variables for the page, for example:</source>
          <target state="translated">&lt;a href=&quot;http://yaml.org/&quot;&gt;머리말&lt;/a&gt; 은 파일 상단에있는 두 개의 삼중 점선 사이 에있는 YAML 의 스 니펫입니다 . 머리말은 페이지에 대한 변수를 설정하는 데 사용됩니다. 예 :</target>
        </trans-unit>
        <trans-unit id="e2ec54f1f86e1badd859a3e4cc0572b1e8ee044a" translate="yes" xml:space="preserve">
          <source>Front matter variables are available in Liquid under the &lt;code&gt;page&lt;/code&gt; variable. For example to output the variable above you would use:</source>
          <target state="translated">머리말 변수는 &lt;code&gt;page&lt;/code&gt; 변수 아래 Liquid에서 사용할 수 있습니다 . 예를 들어 위의 변수를 출력하려면 다음을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ab6514ccd95d0a3694260898a6491b71ac4e2ad0" translate="yes" xml:space="preserve">
          <source>Full month name, e.g. &amp;ldquo;January&amp;rdquo;.</source>
          <target state="translated">전체 월 이름 (예 : &quot;January&quot;).</target>
        </trans-unit>
        <trans-unit id="51c3dde9660d6cbb07190cefd51f56cc0ce6c526" translate="yes" xml:space="preserve">
          <source>Future Posts on GitHub Pages</source>
          <target state="translated">GitHub 페이지의 향후 게시물</target>
        </trans-unit>
        <trans-unit id="40d7b46212b2ab893d9587ebff38115301a638c1" translate="yes" xml:space="preserve">
          <source>Future posts</source>
          <target state="translated">향후 게시물</target>
        </trans-unit>
        <trans-unit id="ff365eb91f2650983c39f1843d03aa6295de6aa2" translate="yes" xml:space="preserve">
          <source>GCC and Make</source>
          <target state="translated">GCC 및 Make</target>
        </trans-unit>
        <trans-unit id="918bcf288e603e68c119aca1cac51aae9732d438" translate="yes" xml:space="preserve">
          <source>GNU/Linux, Unix, or macOS</source>
          <target state="translated">GNU / Linux, 유닉스 또는 macOS</target>
        </trans-unit>
        <trans-unit id="ae79844dff816caaafe6ba7c88f54fc43aef628a" translate="yes" xml:space="preserve">
          <source>GUI apps can modify the &lt;code&gt;$PATH&lt;/code&gt; as follows:</source>
          <target state="translated">GUI 앱은 다음과 같이 &lt;code&gt;$PATH&lt;/code&gt; 를 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb48d06fcaddb6f310478dca6ed659a7b7a5e884" translate="yes" xml:space="preserve">
          <source>Gather your collections3.7.0</source>
          <target state="translated">컬렉션 수집 3.7.0</target>
        </trans-unit>
        <trans-unit id="c25415e46110699c34b6585c6cef73ec2f91be99" translate="yes" xml:space="preserve">
          <source>Gem-based themes make it easier for theme developers to make updates available to anyone who has the theme gem. When there&amp;rsquo;s an update, theme developers push the update to RubyGems.</source>
          <target state="translated">Gem 기반 테마를 사용하면 테마 개발자가 테마 gem을 보유한 모든 사람이 업데이트를 쉽게 사용할 수 있습니다. 업데이트가 있으면 테마 개발자가 업데이트를 RubyGems에 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="ba77b18ed6db40820a6e35edf257f239368af603" translate="yes" xml:space="preserve">
          <source>Gem-based themes make it easy for theme developers to make updates available to anyone who has the theme gem. When there&amp;rsquo;s an update, theme developers push the update to RubyGems.</source>
          <target state="translated">젬 기반 테마를 사용하면 테마 개발자가 테마 젬을 가진 사람이 쉽게 업데이트를 사용할 수 있습니다. 업데이트가있을 때 테마 개발자는 업데이트를 RubyGems에 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="de3150c01c3a946a6168173c4116741379fe3579" translate="yes" xml:space="preserve">
          <source>Gemfile</source>
          <target state="translated">Gemfile</target>
        </trans-unit>
        <trans-unit id="029041565efb4ea6cac7f3107af122065735a299" translate="yes" xml:space="preserve">
          <source>Gems</source>
          <target state="translated">Gems</target>
        </trans-unit>
        <trans-unit id="39a3d98c0f2d259f8da7300bfbb7a92f3c1a83c6" translate="yes" xml:space="preserve">
          <source>Gems are code you can include in Ruby projects. Gems package specific functionality. You can share gems across multiple projects or with other people. Gems can perform actions like:</source>
          <target state="translated">gem은 Ruby 프로젝트에 포함 할 수있는 코드입니다. 보석 패키지 특정 기능. 여러 프로젝트에서 또는 다른 사람들과 gem을 공유 할 수 있습니다. Gems는 다음과 같은 작업을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e311c24103da57e6affccfd589d2d5c9cd0965c9" translate="yes" xml:space="preserve">
          <source>Gems included in the &lt;code&gt;:jekyll-plugins&lt;/code&gt; group are activated regardless of the &lt;code&gt;--safe&lt;/code&gt; mode setting. Be aware of what gems are included under this group!</source>
          <target state="translated">&lt;code&gt;:jekyll-plugins&lt;/code&gt; 그룹에 포함 된 보석 은 &lt;code&gt;--safe&lt;/code&gt; 모드 설정에 관계없이 활성화됩니다 . 이 그룹에 포함 된 보석을 알고 있어야합니다!</target>
        </trans-unit>
        <trans-unit id="7cc39f8834815d2ea36d46868afdb32921a87e8a" translate="yes" xml:space="preserve">
          <source>Gems included in the &lt;code&gt;:jekyll-plugins&lt;/code&gt; group are activated regardless of the &lt;code&gt;--safe&lt;/code&gt; mode setting. Be aware of which gems are included under this group!</source>
          <target state="translated">&lt;code&gt;:jekyll-plugins&lt;/code&gt; 그룹에 포함 된 gem 은 &lt;code&gt;--safe&lt;/code&gt; 에 관계없이 활성화됩니다. 모드 설정에 . 이 그룹에 어떤 보석이 포함되어 있는지 확인하십시오!</target>
        </trans-unit>
        <trans-unit id="8676228e396aba7fb75b0dd1994d8b4014133ced" translate="yes" xml:space="preserve">
          <source>Generally in Liquid you output content using two curly braces e.g. &lt;code&gt;{{ variable }}&lt;/code&gt; and perform logic statements by surrounding them in a curly brace percentage sign e.g. &lt;code&gt;{% if statement %}&lt;/code&gt;. To learn more about Liquid, check out the &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;official Liquid Documentation&lt;/a&gt;.</source>
          <target state="translated">일반적으로 Liquid에서는 두 개의 중괄호 (예 : &lt;code&gt;{{ variable }}&lt;/code&gt; 사용하여 콘텐츠를 출력 하고 중괄호 백분율 기호 (예 : &lt;code&gt;{% if statement %}&lt;/code&gt; )로 묶어 논리 문을 수행합니다 . Liquid에 대한 자세한 내용은 &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;공식 Liquid 문서를&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="aedb09bb110586431e8db01fe06a38658fabd92e" translate="yes" xml:space="preserve">
          <source>Generate a Liquid rendering profile to help you identify performance bottlenecks.</source>
          <target state="translated">성능 병목 현상을 식별하는 데 도움이되는 액체 렌더링 프로파일을 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="0b1e0bd34bb388ae7f402d63987e9dc2d1a7095f" translate="yes" xml:space="preserve">
          <source>Generates content as a side-effect.</source>
          <target state="translated">컨텐츠를 부작용으로 생성합니다.</target>
        </trans-unit>
        <trans-unit id="a3e705cc61a19f33d7c9c030f107a70569966485" translate="yes" xml:space="preserve">
          <source>Generators</source>
          <target state="translated">Generators</target>
        </trans-unit>
        <trans-unit id="5f4d84cfe96fb18f5daa733a7aebc64574619567" translate="yes" xml:space="preserve">
          <source>Generators are only required to implement one method:</source>
          <target state="translated">생성기는 한 가지 방법 만 구현하면됩니다.</target>
        </trans-unit>
        <trans-unit id="fd981652111640e1af8328f3462038888b278a32" translate="yes" xml:space="preserve">
          <source>Generators need to implement only one method:</source>
          <target state="translated">생성기는 하나의 메소드 만 구현하면됩니다.</target>
        </trans-unit>
        <trans-unit id="9254a5380fd0a402863d61054b4a46973f389a2e" translate="yes" xml:space="preserve">
          <source>Generators run after Jekyll has made an inventory of the existing content, and before the site is generated. Pages with YAML Front Matters are stored as instances of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/page.rb&quot;&gt;&lt;code&gt;Jekyll::Page&lt;/code&gt;&lt;/a&gt; and are available via &lt;code&gt;site.pages&lt;/code&gt;. Static files become instances of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/static_file.rb&quot;&gt;&lt;code&gt;Jekyll::StaticFile&lt;/code&gt;&lt;/a&gt; and are available via &lt;code&gt;site.static_files&lt;/code&gt;. See &lt;a href=&quot;../variables/index&quot;&gt;the Variables documentation page&lt;/a&gt; and &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt;&lt;code&gt;Jekyll::Site&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">생성기는 Jekyll이 기존 컨텐츠의 인벤토리를 작성한 후 그리고 사이트가 생성되기 전에 실행됩니다. YAML Front Matters가있는 &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/page.rb&quot;&gt; &lt;code&gt;Jekyll::Page&lt;/code&gt; &lt;/a&gt; 는 Jekyll :: Page의 인스턴스로 저장 되며 &lt;code&gt;site.pages&lt;/code&gt; 를 통해 사용할 수 있습니다 . 정적 파일은 &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/static_file.rb&quot;&gt; &lt;code&gt;Jekyll::StaticFile&lt;/code&gt; &lt;/a&gt; 인스턴스가 되며 &lt;code&gt;site.static_files&lt;/code&gt; 를 통해 사용할 수 있습니다 . 자세한 내용 &lt;a href=&quot;../variables/index&quot;&gt;은 변수 설명서 페이지&lt;/a&gt; 와 &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt; &lt;code&gt;Jekyll::Site&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e127bbb3a0bbbfd1ff126280056a9179479e821e" translate="yes" xml:space="preserve">
          <source>Generators run after Jekyll has made an inventory of the existing content, and before the site is generated. Pages with front matter are stored as instances of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/page.rb&quot;&gt;&lt;code&gt;Jekyll::Page&lt;/code&gt;&lt;/a&gt; and are available via &lt;code&gt;site.pages&lt;/code&gt;. Static files become instances of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/static_file.rb&quot;&gt;&lt;code&gt;Jekyll::StaticFile&lt;/code&gt;&lt;/a&gt; and are available via &lt;code&gt;site.static_files&lt;/code&gt;. See &lt;a href=&quot;../../variables/index&quot;&gt;the Variables documentation page&lt;/a&gt; and &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt;&lt;code&gt;Jekyll::Site&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">생성기는 Jekyll이 기존 콘텐츠의 인벤토리를 만든 후 사이트가 생성되기 전에 실행됩니다. &lt;code&gt;site.pages&lt;/code&gt; 이있는 &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/page.rb&quot;&gt; &lt;code&gt;Jekyll::Page&lt;/code&gt; &lt;/a&gt; 는 Jekyll :: Page 인스턴스로 저장 되며 site.pages 를 통해 사용할 수 있습니다 . 정적 파일은 &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/static_file.rb&quot;&gt; &lt;code&gt;Jekyll::StaticFile&lt;/code&gt; &lt;/a&gt; 인스턴스가 되며 &lt;code&gt;site.static_files&lt;/code&gt; 를 통해 사용할 수 있습니다 . &lt;a href=&quot;../../variables/index&quot;&gt;변수 문서 페이지&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt; &lt;code&gt;Jekyll::Site&lt;/code&gt; &lt;/a&gt; 참조하십시오 . 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="6b44987fa3307256a0f5d4bcfa6dabc741a557cc" translate="yes" xml:space="preserve">
          <source>Gentoo</source>
          <target state="translated">Gentoo</target>
        </trans-unit>
        <trans-unit id="779fb227a172506ee3120bd5cd3808861aaf1330" translate="yes" xml:space="preserve">
          <source>Get your Ruby version:</source>
          <target state="translated">Ruby 버전 받기 :</target>
        </trans-unit>
        <trans-unit id="d0910b6b5cbd00abec4d6696bf678c03c28ef9dd" translate="yes" xml:space="preserve">
          <source>Getting Jekyll installed and ready-to-go should only take a few minutes. If it ever becomes a pain, please &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;file an issue&lt;/a&gt; (or submit a pull request) describing the issue you encountered and how we might make the process easier.</source>
          <target state="translated">Jekyll을 설치하고 준비하는 데 몇 분 밖에 걸리지 않습니다. 이제까지 고통이됩니다, 제발 &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;문제 파일&lt;/a&gt; (또는 풀 요청을 제출)이 발생하는 문제를 설명하고 우리는 과정을 용이하게하는 방법.</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="7ce495ff56808a96f0836329550514077a883f75" translate="yes" xml:space="preserve">
          <source>Git post-receive hook</source>
          <target state="translated">힘내 포스트 수신 후크</target>
        </trans-unit>
        <trans-unit id="510b9e89e8d4923873a42628e3ef914aa7972a29" translate="yes" xml:space="preserve">
          <source>Git post-update hook</source>
          <target state="translated">힘내 사후 업데이트 훅</target>
        </trans-unit>
        <trans-unit id="39540900bbfc1f3ea7b080c0579b9c08789f8f23" translate="yes" xml:space="preserve">
          <source>GitHub Actions</source>
          <target state="translated">GitHub 작업</target>
        </trans-unit>
        <trans-unit id="10ac4b07493a49944092e978ba7f3cbc7372eabd" translate="yes" xml:space="preserve">
          <source>GitHub Actions are registered for a repository by using a YAML file inside the directory path &lt;code&gt;.github/workflows&lt;/code&gt; (note the dot at the start). Here we shall employ &lt;a href=&quot;https://github.com/marketplace/actions/jekyll-actions&quot;&gt;Jekyll Actions&lt;/a&gt; from the Marketplace for its simplicity.</source>
          <target state="translated">GitHub 작업은 &lt;code&gt;.github/workflows&lt;/code&gt; 디렉터리 경로 (시작 부분에 점 참고)에 있는 YAML 파일을 사용하여 저장소에 등록됩니다 . 여기서 우리는 &lt;a href=&quot;https://github.com/marketplace/actions/jekyll-actions&quot;&gt;지킬 액션을 사용합니다.&lt;/a&gt; 단순성을 위해 Marketplace의 를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3b50aad9dd12f191663725265afb261bb6f3a7fa" translate="yes" xml:space="preserve">
          <source>GitHub Pages</source>
          <target state="translated">GitHub 페이지</target>
        </trans-unit>
        <trans-unit id="e8f9d4f0de446dbec106e8aea66779e22a927f8b" translate="yes" xml:space="preserve">
          <source>GitHub Pages &lt;a href=&quot;https://help.github.com/articles/troubleshooting-github-pages-build-failures#source-setting&quot;&gt;overrides&lt;/a&gt; the &lt;a href=&quot;../configuration/index#global-configuration&quot;&gt;&amp;ldquo;Site Source&amp;rdquo;&lt;/a&gt; configuration value, so if you locate your files anywhere other than the root directory, your site may not build correctly.</source>
          <target state="translated">GitHub 페이지 는 &lt;a href=&quot;../configuration/index#global-configuration&quot;&gt;&amp;ldquo;사이트 소스&amp;rdquo;&lt;/a&gt; 구성 값을 &lt;a href=&quot;https://help.github.com/articles/troubleshooting-github-pages-build-failures#source-setting&quot;&gt;무시&lt;/a&gt; 하므로 루트 디렉토리 이외의 위치에서 파일을 찾으면 사이트가 올바르게 빌드되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eb69cae0b9c25c396bc4937c58f4573fb81a0a1d" translate="yes" xml:space="preserve">
          <source>GitHub Pages &lt;a href=&quot;https://help.github.com/en/github/working-with-github-pages/troubleshooting-jekyll-build-errors-for-github-pages-sites&quot;&gt;overrides&lt;/a&gt; the &lt;a href=&quot;../configuration/options/index&quot;&gt;&amp;ldquo;Site Source&amp;rdquo;&lt;/a&gt; configuration value, so if you locate your files anywhere other than the root directory, your site may not build correctly.</source>
          <target state="translated">GitHub 페이지 는 &lt;a href=&quot;../configuration/options/index&quot;&gt;&quot;사이트 소스&quot;를 &lt;/a&gt;&lt;a href=&quot;https://help.github.com/en/github/working-with-github-pages/troubleshooting-jekyll-build-errors-for-github-pages-sites&quot;&gt;재정의&lt;/a&gt; 합니다. 구성 값을 하므로 루트 디렉터리가 아닌 다른 위치에서 파일을 찾으면 사이트가 제대로 빌드되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8dacc5464f8b2d2bed3eff5cbf3a194b0cf27c4d" translate="yes" xml:space="preserve">
          <source>GitHub Pages Documentation, Help, and Support</source>
          <target state="translated">GitHub 페이지 문서, 도움말 및 지원</target>
        </trans-unit>
        <trans-unit id="468a579a5c3c13e321704773694dd48709f82722" translate="yes" xml:space="preserve">
          <source>GitHub Pages are initially configured to live under the &lt;code&gt;username.github.io&lt;/code&gt; subdomain, which is why repositories must be named this way &lt;strong&gt;even if a custom domain is being used&lt;/strong&gt;.</source>
          <target state="translated">GitHub 페이지는 &lt;code&gt;username.github.io&lt;/code&gt; 하위 도메인 아래에 있도록 구성되어 &lt;strong&gt;있으므로 사용자 지정 도메인을 사용하는 경우에도&lt;/strong&gt; 리포지토리의 이름을 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b9482e6772ed38f0e07d48251101b37ac4d3e564" translate="yes" xml:space="preserve">
          <source>GitHub Pages are powered by Jekyll behind the scenes, so if you&amp;rsquo;re looking for a zero-hassle, zero-cost solution, GitHub Pages are a great way to &lt;a href=&quot;../github-pages/index&quot;&gt;host your Jekyll-powered website for free&lt;/a&gt;.</source>
          <target state="translated">GitHub Pages는 뒤에서 Jekyll에 의해 구동되므로 번거롭고 비용이 들지 않는 솔루션을 찾고 있다면 GitHub Pages는 &lt;a href=&quot;../github-pages/index&quot;&gt;Jekyll 기반 웹 사이트를 무료&lt;/a&gt; 로 호스팅 할 수 있는 좋은 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="98b49c3a0a79daea9a9ac9224c6cade9bea31346" translate="yes" xml:space="preserve">
          <source>GitHub Pages work by looking at certain branches of repositories on GitHub. There are two basic types available: &lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;user/organization and project pages&lt;/a&gt;. The way to deploy these two types of sites are nearly identical, except for a few minor details.</source>
          <target state="translated">GitHub 페이지는 GitHub의 특정 리포지토리를보고 작동합니다. 사용 가능한 기본 유형은 &lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;사용자 / 조직 및 프로젝트 페이지의&lt;/a&gt; 두 가지 입니다. 이 두 가지 유형의 사이트를 배포하는 방법은 몇 가지 사소한 세부 사항을 제외하고 거의 동일합니다.</target>
        </trans-unit>
        <trans-unit id="4ff625d7c16407bb7037fa87e12e8bd55c2058cb" translate="yes" xml:space="preserve">
          <source>GitHub.com #jekyll-theme repos</source>
          <target state="translated">GitHub.com # jekyll-theme repos</target>
        </trans-unit>
        <trans-unit id="a4d4c058d2416f068da6a5a2a38dd085d44bb01c" translate="yes" xml:space="preserve">
          <source>GitLab Pages</source>
          <target state="translated">GitLab 페이지</target>
        </trans-unit>
        <trans-unit id="23d0b319e364d2bd5ece7b9f4e4b5526a736744a" translate="yes" xml:space="preserve">
          <source>Given a post named: &lt;code&gt;/2009-04-29-slap-chop.md&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/2009-04-29-slap-chop.md&lt;/code&gt; 라는 게시물이 있습니다.</target>
        </trans-unit>
        <trans-unit id="10e41e603882ff3e6f001e759b2e5ae1f12eaf4a" translate="yes" xml:space="preserve">
          <source>Glob patterns in Front Matter defaults</source>
          <target state="translated">Front Matter 기본값의 글로브 패턴</target>
        </trans-unit>
        <trans-unit id="5f1184f7df96c5928092ad9c6b550699bf887826" translate="yes" xml:space="preserve">
          <source>Global</source>
          <target state="translated">Global</target>
        </trans-unit>
        <trans-unit id="602d92b2e14ac385c7289a85d36ef682a9e44c22" translate="yes" xml:space="preserve">
          <source>Global Configuration</source>
          <target state="translated">글로벌 구성</target>
        </trans-unit>
        <trans-unit id="c2a69aff614a63e743988330166603e3abc3bf38" translate="yes" xml:space="preserve">
          <source>Global Install</source>
          <target state="translated">글로벌 설치</target>
        </trans-unit>
        <trans-unit id="2ff4e53e2b802e1ec127c83da80fa5fc4b5333fa" translate="yes" xml:space="preserve">
          <source>Global Variables</source>
          <target state="translated">글로벌 변수</target>
        </trans-unit>
        <trans-unit id="2d35e11f4c78b7b3b3ca87764462e37d39f55eca" translate="yes" xml:space="preserve">
          <source>Globbing and Performance</source>
          <target state="translated">글 로빙 및 성능</target>
        </trans-unit>
        <trans-unit id="55b991eab112303d31743e18931429e53b8f2990" translate="yes" xml:space="preserve">
          <source>Go to the &lt;strong&gt;environment&lt;/strong&gt; tab on your repository.</source>
          <target state="translated">저장소 의 &lt;strong&gt;환경&lt;/strong&gt; 탭으로 이동 하십시오.</target>
        </trans-unit>
        <trans-unit id="7a842f6d5fbbe8841aaf282f75d723b464fdc715" translate="yes" xml:space="preserve">
          <source>Go to the repository level view in GitHub. Under the most recent commit (near the top) you&amp;rsquo;ll see a &lt;strong&gt;status symbol&lt;/strong&gt; next to the commit message as a tick or &lt;em&gt;X&lt;/em&gt;. Hover over it and click the &lt;strong&gt;details&lt;/strong&gt; link.</source>
          <target state="translated">GitHub의 저장소 수준보기로 이동합니다. 가장 최근 커밋 아래 (맨 위 근처) 커밋 메시지 옆에 틱 또는 &lt;em&gt;X&lt;/em&gt; 로 표시된 &lt;strong&gt;상태 기호&lt;/strong&gt; 가 표시됩니다 . 그 위에 마우스를 올려 놓고 &lt;strong&gt;세부 정보&lt;/strong&gt; 링크를 클릭합니다 .&lt;em&gt;&lt;/em&gt;&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2cbb8951bd9cf0840bb24a86d4d4799e5ae9ac6b" translate="yes" xml:space="preserve">
          <source>Go to the repository&amp;rsquo;s Actions tab. Click on the &lt;code&gt;jekyll&lt;/code&gt; workflow tab.</source>
          <target state="translated">저장소의 작업 탭으로 이동합니다. &lt;code&gt;jekyll&lt;/code&gt; 워크 플로우 탭을 클릭합니다 .</target>
        </trans-unit>
        <trans-unit id="4531c718af3ab7d3ca98c4637f49630a6cb064e8" translate="yes" xml:space="preserve">
          <source>Go to your profile on travis-ci.org: https://travis-ci.org/profile/username</source>
          <target state="translated">travis-ci.org의 프로파일로 이동하십시오 : https://travis-ci.org/profile/username</target>
        </trans-unit>
        <trans-unit id="0427219d52acb0b8523719cb4caf006ac547e4e2" translate="yes" xml:space="preserve">
          <source>Go to your repository&amp;rsquo;s &lt;strong&gt;Settings&lt;/strong&gt; and then the &lt;strong&gt;Secrets&lt;/strong&gt; tab.</source>
          <target state="translated">저장소의 &lt;strong&gt;설정으로&lt;/strong&gt; 이동 한 다음 &lt;strong&gt;비밀&lt;/strong&gt; 탭으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="7178adec52e5c5f4838341c5b3d24d7925f54213" translate="yes" xml:space="preserve">
          <source>Group an array's items by a given property.</source>
          <target state="translated">주어진 속성으로 배열의 항목을 그룹화합니다.</target>
        </trans-unit>
        <trans-unit id="f2a45e739a29c8415f8d916d28f65eb54a2d112d" translate="yes" xml:space="preserve">
          <source>Group an array's items using a Liquid expression.</source>
          <target state="translated">Liquid 식을 사용하여 배열 항목을 그룹화합니다.</target>
        </trans-unit>
        <trans-unit id="45b78e0bd2914a69c41320d9ebf22a9927dd3f37" translate="yes" xml:space="preserve">
          <source>Group an array's items using a Liquid expression. 3.4.0</source>
          <target state="translated">Liquid 표현식을 사용하여 배열의 항목을 그룹화합니다. 3.4.0</target>
        </trans-unit>
        <trans-unit id="ea95f76ea8d8243729f8be3feef2b40d89076685" translate="yes" xml:space="preserve">
          <source>Guide for maintaining Jekyll</source>
          <target state="translated">지킬 유지 관리 가이드</target>
        </trans-unit>
        <trans-unit id="929a28d261428029e61c0f81c6161fd71ba0b2fe" translate="yes" xml:space="preserve">
          <source>Guides</source>
          <target state="translated">Guides</target>
        </trans-unit>
        <trans-unit id="66d79524f4d0506a9a1af19b96aee758f2b790d6" translate="yes" xml:space="preserve">
          <source>HTML Proofer</source>
          <target state="translated">HTML 교정자</target>
        </trans-unit>
        <trans-unit id="63fc790cccc18500b0c573bedc101d0ac60d5586" translate="yes" xml:space="preserve">
          <source>Help us make Jekyll better by &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;contributing&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;기여&lt;/a&gt; 하여 Jekyll을 개선하도록 도와주세요.</target>
        </trans-unit>
        <trans-unit id="6c4d623e42153c15b2453aef249170c8234877cc" translate="yes" xml:space="preserve">
          <source>Helpful Hints</source>
          <target state="translated">유용한 힌트들</target>
        </trans-unit>
        <trans-unit id="9aac2ff9f6900ddaeac45839db4be8f1ca90c72f" translate="yes" xml:space="preserve">
          <source>Here are a few examples to clarify how permalink styles get applied with posts.</source>
          <target state="translated">다음은 퍼머 링크 스타일이 게시물에 적용되는 방법을 설명하기위한 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="a5c03f3ec1a401705963307c231dad7cdab1e16c" translate="yes" xml:space="preserve">
          <source>Here are some of the most common commands:</source>
          <target state="translated">다음은 가장 일반적인 명령 중 일부입니다.</target>
        </trans-unit>
        <trans-unit id="831526769d35b12d09459b16086b073d0d812e97" translate="yes" xml:space="preserve">
          <source>Here is a basic example of using Data Files to avoid copy-pasting large chunks of code in your Jekyll templates:</source>
          <target state="translated">다음은 Jekyll 템플릿에 많은 양의 코드를 복사하여 붙여 넣지 않도록 데이터 파일을 사용하는 기본 예입니다.</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8c978a5694093a90f577b797656397da9e5aaa18" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example of outputting a list of blog posts with an excerpt:</source>
          <target state="translated">다음은 발췌 한 블로그 게시물 목록을 출력하는 예입니다.</target>
        </trans-unit>
        <trans-unit id="83640d7e910a9e55e31b51dd8861c25fe6e8116f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that passes all the parameters to this include (the include file is named &lt;code&gt;image.html&lt;/code&gt;):</source>
          <target state="translated">다음은이 매개 변수에 모든 매개 변수를 전달하는 예제입니다 (포함 파일의 이름은 &lt;code&gt;image.html&lt;/code&gt; 입니다). ).</target>
        </trans-unit>
        <trans-unit id="abf948b4bceb5e369d172f337195e37748f36726" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example. In the &lt;code&gt;_data&lt;/code&gt; folder, suppose you have a YAML file called &lt;code&gt;profiles.yml&lt;/code&gt;. Its content looks like this:</source>
          <target state="translated">다음은 예입니다. 에서 &lt;code&gt;_data&lt;/code&gt; 의 폴더, 당신라는 YAML 파일이 있다고 가정 &lt;code&gt;profiles.yml&lt;/code&gt; 을 . 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="79a379c34c53ce83d07e71356345ea69136a74d1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="963fe3b6d5f32924be79190582ecb01f34a36218" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s the full list of placeholders available:</source>
          <target state="translated">다음은 사용 가능한 전체 자리 표시 자 목록입니다.</target>
        </trans-unit>
        <trans-unit id="c26aeecbcca5072b431a5382ae6ba27176ef977c" translate="yes" xml:space="preserve">
          <source>Here, we are scoping the &lt;code&gt;values&lt;/code&gt; to any file that exists in the path &lt;code&gt;scope&lt;/code&gt;. Since the path is set as an empty string, it will apply to &lt;strong&gt;all files&lt;/strong&gt; in your project. You probably don&amp;rsquo;t want to set a layout on every file in your project - like css files, for example - so you can also specify a &lt;code&gt;type&lt;/code&gt; value under the &lt;code&gt;scope&lt;/code&gt; key.</source>
          <target state="translated">여기에서는 경로 &lt;code&gt;scope&lt;/code&gt; 존재하는 모든 파일 의 &lt;code&gt;values&lt;/code&gt; 을 지정합니다 . 경로는 빈 문자열로 설정되므로 프로젝트의 &lt;strong&gt;모든 파일&lt;/strong&gt; 에 적용됩니다 . CSS 파일과 같이 프로젝트의 모든 파일에 레이아웃을 설정하지 않으려 는 경우 &lt;code&gt;scope&lt;/code&gt; 키 아래에 &lt;code&gt;type&lt;/code&gt; 값을 지정할 수도 있습니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f67ca0046b6f7d123003b1d0cfb9b27a13c9adf6" translate="yes" xml:space="preserve">
          <source>Hey, that&amp;rsquo;s pretty neat, but what about showing just some of your posts that are related to each other? For that you can use any of the &lt;a href=&quot;../frontmatter/index&quot;&gt;variables definable in Front Matter&lt;/a&gt;. In the &amp;ldquo;typical post&amp;rdquo; section you can see how to define categories. Simply add the categories to your Front Matter as a &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;yaml list&lt;/a&gt;.</source>
          <target state="translated">이봐, 정말 깔끔하지만 서로 관련된 게시물 중 일부만 표시하는 것은 어떻습니까? 이를 위해 &lt;a href=&quot;../frontmatter/index&quot;&gt;Front Matter에서 정의 할 수&lt;/a&gt; 있는 변수를 사용할 수 있습니다 . '일반 게시물'섹션에서 카테고리를 정의하는 방법을 볼 수 있습니다. Front Matter에 카테고리를 &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;yaml 목록&lt;/a&gt; 으로 추가하기 만하면 됩니다. .</target>
        </trans-unit>
        <trans-unit id="45836a888498c251d1391be7619c510e1b094a79" translate="yes" xml:space="preserve">
          <source>Highlighting code snippets</source>
          <target state="translated">코드 스 니펫 강조 표시</target>
        </trans-unit>
        <trans-unit id="ac066591edb7d47406e88eed7ba536040a82daf4" translate="yes" xml:space="preserve">
          <source>Homepage</source>
          <target state="translated">Homepage</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="3c3d2c6f4afae2bd1dd22fa5ecd616951d8fd75a" translate="yes" xml:space="preserve">
          <source>Hooks are registered to a container and an event name. To register one, you call Jekyll::Hooks.register, and pass the container, event name, and code to call whenever the hook is triggered. For example, if you want to execute some custom functionality every time Jekyll renders a post, you could register a hook like this:</source>
          <target state="translated">후크는 컨테이너 및 이벤트 이름에 등록됩니다. 하나를 등록하려면 Jekyll :: Hooks.register를 호출하고 후크가 트리거 될 때마다 호출 할 컨테이너, 이벤트 이름 및 코드를 전달하십시오. 예를 들어 Jekyll이 게시물을 렌더링 할 때마다 일부 사용자 정의 기능을 실행하려면 다음과 같이 후크를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e47e0b033171698511eb98255ea2c5ea9bc873f" translate="yes" xml:space="preserve">
          <source>Hooks are registered to an owner and an event name. To register one, you call &lt;code&gt;Jekyll::Hooks.register&lt;/code&gt;, and pass the hook owner, event name, and code to call whenever the hook is triggered. For example, if you want to execute some custom functionality every time Jekyll renders a page, you could register a hook like this:</source>
          <target state="translated">후크는 소유자 및 이벤트 이름에 등록됩니다. 등록하려면 &lt;code&gt;Jekyll::Hooks.register&lt;/code&gt; 를 호출하고 후크가 트리거 될 때마다 호출 할 후크 소유자, 이벤트 이름 및 코드를 전달합니다. 예를 들어 Jekyll이 페이지를 렌더링 할 때마다 일부 사용자 지정 기능을 실행하려면 다음과 같이 후크를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52a6bd52dd8761d529cd931ac21db2628083f1bb" translate="yes" xml:space="preserve">
          <source>Hooks for custom Jekyll objects</source>
          <target state="translated">사용자 지정 지킬 개체 용 후크</target>
        </trans-unit>
        <trans-unit id="a2416f84594d038f1f6e52aa6cd5d7d79145d052" translate="yes" xml:space="preserve">
          <source>Hour of the day, 24-hour clock, zero-padded from the post&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter. (00..23)</source>
          <target state="translated">하루 중 시간, 24 시간 시계, 게시물의 &lt;code&gt;date&lt;/code&gt; 앞부분 에서 0으로 채워짐 . (00..23)</target>
        </trans-unit>
        <trans-unit id="c4ca57faecef53b5cde020963e025ccad78ed174" translate="yes" xml:space="preserve">
          <source>Hour of the day, 24-hour clock, zero-padded from the post's &lt;code&gt;date&lt;/code&gt; front matter. (00..23)</source>
          <target state="translated">하루 중 24 시간 제로, 게시물의 &lt;code&gt;date&lt;/code&gt; 관련이 없습니다. (00..23)</target>
        </trans-unit>
        <trans-unit id="ee6a4883cb5b0b2ebbd4b69d7e1663e3a14e6653" translate="yes" xml:space="preserve">
          <source>How I&amp;rsquo;m using Jekyll in 2016</source>
          <target state="translated">2016 년에 Jekyll을 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="95885b1160ade6b19f2fc26175b00e5522fc969a" translate="yes" xml:space="preserve">
          <source>How to Contribute</source>
          <target state="translated">참여하는 방법</target>
        </trans-unit>
        <trans-unit id="9ba94163904d5ef671e393d069e9994bb2d8366f" translate="yes" xml:space="preserve">
          <source>How to file a bug</source>
          <target state="translated">버그를 신고하는 방법</target>
        </trans-unit>
        <trans-unit id="50e17c2b0d1c4cebe485ddc4e68acd8d6c190831" translate="yes" xml:space="preserve">
          <source>If a post has multiple categories, Jekyll will create a hierarchy (e.g. &lt;code&gt;/work-2-progress/category2&lt;/code&gt;). Also Jekyll automatically parses out double slashes in the URLs, so if no categories are present, it will ignore this.</source>
          <target state="translated">게시물에 여러 카테고리가있는 경우 Jekyll은 계층 구조 (예 : &lt;code&gt;/work-2-progress/category2&lt;/code&gt; ). 또한 Jekyll은 URL에서 이중 슬래시를 자동으로 구문 분석하므로 카테고리가 없으면이를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="291d7409a971d7df4abbe39550e6a05f09698835" translate="yes" xml:space="preserve">
          <source>If a site has 12 posts and specifies &lt;code&gt;paginate: 5&lt;/code&gt;, Jekyll will write &lt;code&gt;blog/index.html&lt;/code&gt; with the first 5 posts, &lt;code&gt;blog/page2/index.html&lt;/code&gt; with the next 5 posts and &lt;code&gt;blog/page3/index.html&lt;/code&gt; with the last 2 posts into the destination directory.</source>
          <target state="translated">사이트는 12 개 게시물이있는 경우 및 지정 &lt;code&gt;paginate: 5&lt;/code&gt; , 지킬 작성합니다 &lt;code&gt;blog/index.html&lt;/code&gt; , 처음 5 게시물 &lt;code&gt;blog/page2/index.html&lt;/code&gt; 향후 5 게시물 및 &lt;code&gt;blog/page3/index.html&lt;/code&gt; 지난 2 대상 디렉토리에 게시합니다.</target>
        </trans-unit>
        <trans-unit id="753f258bd8b49faefa62db5054137276faf7fdae" translate="yes" xml:space="preserve">
          <source>If all goes well, all steps will be green and the built assets will now exist on the &lt;code&gt;gh-pages&lt;/code&gt; branch.</source>
          <target state="translated">모든 것이 잘되면 모든 단계가 녹색이되고 빌드 된 자산이 이제 &lt;code&gt;gh-pages&lt;/code&gt; 브랜치 에 존재합니다 .</target>
        </trans-unit>
        <trans-unit id="e839bd7b237c4e2b6a6edc7b40c67990c8dbadf4" translate="yes" xml:space="preserve">
          <source>If both metadata keys have been defined properly, &lt;code&gt;order&lt;/code&gt; list takes precedence.</source>
          <target state="translated">두 메타 데이터 키가 모두 올바르게 정의 된 경우 &lt;code&gt;order&lt;/code&gt; 목록이 우선합니다.</target>
        </trans-unit>
        <trans-unit id="7bf549bc2141e74e473c727a38f9ea61933e2f5c" translate="yes" xml:space="preserve">
          <source>If it is not already installed by your host, you can do it yourself:</source>
          <target state="translated">호스트가 아직 설치하지 않은 경우 직접 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bfd9b131d8fbc9ebadd0174814fa75131d24f89" translate="yes" xml:space="preserve">
          <source>If set, this specifies the layout file to use. Use the layout file name without the file extension. Layout files must be placed in the &lt;code&gt;_layouts&lt;/code&gt; directory.</source>
          <target state="translated">설정된 경우 사용할 레이아웃 파일을 지정합니다. 파일 확장자가없는 레이아웃 파일 이름을 사용하십시오. 레이아웃 파일은 &lt;code&gt;_layouts&lt;/code&gt; 디렉토리 에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="16e5f3a38e925cad6f35c5b5ac5bc1f29a9cb6c1" translate="yes" xml:space="preserve">
          <source>If the `jekyll new` command prints the error &quot;Your user account isn't allowed to install to the system RubyGems&quot;, see the &quot;Running Jekyll as Non-Superuser&quot; instructions in &lt;a href=&quot;../../troubleshooting/index#no-sudo&quot;&gt;Troubleshooting&lt;/a&gt;.</source>
          <target state="translated">`jekyll new` 명령이 &quot;사용자 계정이 RubyGems 시스템에 설치할 수 없습니다&quot;라는 오류를 인쇄하면 &lt;a href=&quot;../../troubleshooting/index#no-sudo&quot;&gt;문제 해결의&lt;/a&gt; &quot;수퍼 유저가 아닌 사용자로 Jekyll 실행&quot;지침을 참조하십시오. .</target>
        </trans-unit>
        <trans-unit id="9238236f6534e05493e0318455680c7da2a905f1" translate="yes" xml:space="preserve">
          <source>If the file does not have YAML front matter, it will simply be copied over into the resulting site.</source>
          <target state="translated">파일에 YAML 프론트 엔드가없는 경우 결과 사이트로 간단히 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="dc84747683fe22b5b1a638bef3a4246c6fff3644" translate="yes" xml:space="preserve">
          <source>If the file does not have front matter, it will simply be copied over into the resulting site.</source>
          <target state="translated">파일에 머리말이 없으면 결과 사이트로 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="b47324bc5709f19cd71b92fd22bdfb47be6f6ed7" translate="yes" xml:space="preserve">
          <source>If the file has &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt; at the top, it will be rendered.</source>
          <target state="translated">파일이있는 경우 &lt;a href=&quot;../front-matter/index&quot;&gt;전면이 문제를&lt;/a&gt; 상단에, 그것은 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="52f8569e79b956dbe48e729796e8f13c33d30812" translate="yes" xml:space="preserve">
          <source>If the file has &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt; at the top, it will be rendered.</source>
          <target state="translated">파일 의 맨 위에 &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML 프론트 물질&lt;/a&gt; 이 있으면 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="6f2f94ff051b156124d9bbb1c67ff42cbd835af7" translate="yes" xml:space="preserve">
          <source>If the page being processed is a Post, this contains a list of up to ten related Posts. By default, these are the ten most recent posts. For high quality but slow to compute results, run the &lt;code&gt;jekyll&lt;/code&gt; command with the &lt;code&gt;--lsi&lt;/code&gt; (&lt;a href=&quot;https://en.wikipedia.org/wiki/Latent_semantic_analysis#Latent_semantic_indexing&quot;&gt;latent semantic indexing&lt;/a&gt;) option. Also note GitHub Pages does not support the &lt;code&gt;lsi&lt;/code&gt; option when generating sites.</source>
          <target state="translated">처리중인 페이지가 게시물 인 경우 최대 10 개의 관련 게시물 목록이 포함됩니다. 기본적으로 이들은 10 개의 최신 게시물입니다. 품질은 높지만 계산 결과는 느리게하려면 &lt;code&gt;jekyll&lt;/code&gt; 명령을 &lt;code&gt;--lsi&lt;/code&gt; ( &lt;a href=&quot;https://en.wikipedia.org/wiki/Latent_semantic_analysis#Latent_semantic_indexing&quot;&gt;잠재 시맨틱 인덱싱&lt;/a&gt; ) 옵션 과 함께 실행하십시오 . 또한 GitHub 페이지는 &lt;code&gt;lsi&lt;/code&gt; 를 지원하지 않습니다 사이트를 생성 할 때 옵션을 .</target>
        </trans-unit>
        <trans-unit id="d641f21c96839fd713c161d3c90256c3c5ff7da7" translate="yes" xml:space="preserve">
          <source>If you already have a full &lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt; development environment with all headers and &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt; installed (see Jekyll&amp;rsquo;s &lt;a href=&quot;../installation/index#requirements&quot;&gt;requirements&lt;/a&gt;), you can create a new Jekyll site by doing the following:</source>
          <target state="translated">모든 헤더와 &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGem이&lt;/a&gt; 설치된 완전한 &lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt; 개발 환경 이 이미있는 경우 (Jekyll의 &lt;a href=&quot;../installation/index#requirements&quot;&gt;요구 사항&lt;/a&gt; 참조 ) 다음을 수행하여 새 Jekyll 사이트를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08ef134f574dec2a4a371ee77d3cc3d6d4b33a08" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;https://mustache.github.io&quot;&gt;Mustache&lt;/a&gt; or another JavaScript templating language that conflicts with the &lt;a href=&quot;../liquid/index&quot;&gt;Liquid template syntax&lt;/a&gt;, you will need to place &lt;code&gt;{% raw %}&lt;/code&gt; and &lt;code&gt;{% endraw %}&lt;/code&gt; tags around your code.</source>
          <target state="translated">당신이 사용하는 경우 &lt;a href=&quot;https://mustache.github.io&quot;&gt;콧수염&lt;/a&gt; 이나 충돌 또 다른 자바 스크립트 템플릿 언어 &lt;a href=&quot;../liquid/index&quot;&gt;액체 템플릿 구문&lt;/a&gt; , 당신은 장소가 필요합니다 &lt;code&gt;{% raw %}&lt;/code&gt; 와 &lt;code&gt;{% endraw %}&lt;/code&gt; 코드 주위에 태그를.</target>
        </trans-unit>
        <trans-unit id="1c3e668ae49129238e3243fbe784aef06c65fe75" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;https://mustache.github.io&quot;&gt;Mustache&lt;/a&gt; or another JavaScript templating language that conflicts with the &lt;a href=&quot;../templates/index&quot;&gt;Liquid template syntax&lt;/a&gt;, you will need to place &lt;code&gt;{% raw %}&lt;/code&gt; and &lt;code&gt;{% endraw %}&lt;/code&gt; tags around your code.</source>
          <target state="translated">당신이 사용하는 경우 &lt;a href=&quot;https://mustache.github.io&quot;&gt;콧수염&lt;/a&gt; 이나 충돌 또 다른 자바 스크립트 템플릿 언어 &lt;a href=&quot;../templates/index&quot;&gt;액체 템플릿 구문&lt;/a&gt; , 당신은 장소가 필요합니다 &lt;code&gt;{% raw %}&lt;/code&gt; 와 &lt;code&gt;{% endraw %}&lt;/code&gt; 코드 주위에 태그를.</target>
        </trans-unit>
        <trans-unit id="0ed1e0d2a9dbfbe50531ee5b5a5b6ba715d0f7eb" translate="yes" xml:space="preserve">
          <source>If you are using Sass &lt;code&gt;@import&lt;/code&gt; statements, you&amp;rsquo;ll need to ensure that your &lt;code&gt;sass_dir&lt;/code&gt; is set to the base directory that contains your Sass files. You can do that thusly:</source>
          <target state="translated">Sass &lt;code&gt;@import&lt;/code&gt; 문을 사용하는 경우 &lt;code&gt;sass_dir&lt;/code&gt; 이 Sass 파일이 포함 된 기본 디렉토리로 설정되어 있는지 확인해야 합니다. 따라서 그렇게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb5e4a12cfe3aacf0a4395c36e1bdfec8fdf450f" translate="yes" xml:space="preserve">
          <source>If you are using Sass &lt;code&gt;@import&lt;/code&gt; statements, you&amp;rsquo;ll need to ensure that your &lt;code&gt;sass_dir&lt;/code&gt; is set to the base directory that contains your Sass files:</source>
          <target state="translated">Sass &lt;code&gt;@import&lt;/code&gt; 문을 사용하는 경우 &lt;code&gt;sass_dir&lt;/code&gt; 을 확인해야합니다 . 이 Sass 파일이 포함 된 기본 디렉터리로 설정되어 합니다.</target>
        </trans-unit>
        <trans-unit id="28a432b4772235d9fdcee272275536f400244d55" translate="yes" xml:space="preserve">
          <source>If you are using Windows 10 Anniversary Update, the easiest way to run Jekyll is by &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;installing&lt;/a&gt; the new Bash on Ubuntu on Windows.</source>
          <target state="translated">Windows 10 1 주년 업데이트를 사용하는 경우 Jekyll을 실행하는 가장 쉬운 방법 은 Windows의 Ubuntu에 새로운 Bash를 &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;설치&lt;/a&gt; 하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="2a81cb095a8d568b4ef014280b4015ce988fdab9" translate="yes" xml:space="preserve">
          <source>If you are using Windows 10 version 1607 or later, another option to run Jekyll is by &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;installing&lt;/a&gt; the Windows Subsystem for Linux.</source>
          <target state="translated">Windows 10 버전 1607 이상을 사용하는 경우 Jekyll을 실행하는 또 다른 옵션 은 Linux 용 Windows 하위 시스템을 &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;설치&lt;/a&gt; 하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="2a4c58b5be6464946cbf57593a4dc9dc48e866b2" translate="yes" xml:space="preserve">
          <source>If you are using a language that contains curly braces, you will likely need to place &lt;code&gt;{% raw %}&lt;/code&gt; and &lt;code&gt;{% endraw %}&lt;/code&gt; tags around your code.</source>
          <target state="translated">중괄호가 포함 된 언어를 사용하는 경우 코드 주위에 &lt;code&gt;{% raw %}&lt;/code&gt; 및 &lt;code&gt;{% endraw %}&lt;/code&gt; 태그를 배치해야합니다.</target>
        </trans-unit>
        <trans-unit id="43280c8d089211df31d449a663b503e07e058bb0" translate="yes" xml:space="preserve">
          <source>If you are using a language that contains curly braces, you will likely need to place &lt;code&gt;{% raw %}&lt;/code&gt; and &lt;code&gt;{% endraw %}&lt;/code&gt; tags around your code. Since Jekyll 4.0 , you can add &lt;code&gt;render_with_liquid: false&lt;/code&gt; in your front matter to disable Liquid entirely for a particular document.</source>
          <target state="translated">중괄호가 포함 된 언어를 사용하는 경우 코드 주위에 &lt;code&gt;{% raw %}&lt;/code&gt; 및 &lt;code&gt;{% endraw %}&lt;/code&gt; 태그를 배치해야합니다. Jekyll 4.0 이후 로, 특정 문서에 대해 Liquid를 완전히 비활성화하기 위해 &lt;code&gt;render_with_liquid: false&lt;/code&gt; 를 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="213db0da911c55c4f2731ecd97c211b394f06562" translate="yes" xml:space="preserve">
          <source>If you are using base-url option like:</source>
          <target state="translated">base-url 옵션을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="d35638d8ed6e8b486e57c45fbf52ce1a8ba65712" translate="yes" xml:space="preserve">
          <source>If you come across a bug, please &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;create an issue&lt;/a&gt; on GitHub describing the problem and any work-arounds you find so we can document it here for others.</source>
          <target state="translated">버그 &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;가 발생&lt;/a&gt; 하면 GitHub에서 문제 및 발견 된 해결 방법을 설명하는 문제를 만들어 다른 사람들을 위해 여기에 문서화 할 수 있도록하십시오.</target>
        </trans-unit>
        <trans-unit id="8703fee3ae2012b8a53fc6cc2adddae7042dfc8d" translate="yes" xml:space="preserve">
          <source>If you come across anything along the way that we haven&amp;rsquo;t covered, or if you know of a tip you think others would find handy, please &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;file an issue&lt;/a&gt; and we&amp;rsquo;ll see about including it in this guide.</source>
          <target state="translated">우리가 다루지 않은 방식으로 무언가를 만났거나 다른 사람들이 유용하다고 생각하는 팁을 알고 있다면 &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;문제를 제기&lt;/a&gt; 하십시오.이 안내서에 포함시키는 것에 대해 알게 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="1b5ec381e23f973cc13dece96999c3131002c2bf" translate="yes" xml:space="preserve">
          <source>If you do preview your theme locally, be sure to add &lt;code&gt;/_site&lt;/code&gt; to your theme&amp;rsquo;s &lt;code&gt;.gitignore&lt;/code&gt; file to prevent the compiled site from also being included when you distribute your theme.</source>
          <target state="translated">테마를 로컬에서 미리 보는 경우 테마 를 배포 할 때 컴파일 된 사이트가 포함되지 않도록 테마의 &lt;code&gt;.gitignore&lt;/code&gt; 파일에 &lt;code&gt;/_site&lt;/code&gt; 를 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f284c06984fce66f7dd57a7b4b5f2ec076b195fe" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t like the automatically-generated post excerpt, it can be explicitly overridden by adding an &lt;code&gt;excerpt&lt;/code&gt; value to your post&amp;rsquo;s YAML Front Matter. Alternatively, you can choose to define a custom &lt;code&gt;excerpt_separator&lt;/code&gt; in the post&amp;rsquo;s YAML front matter:</source>
          <target state="translated">자동 생성 된 게시물 발췌가 마음에 들지 않으면 게시물의 YAML Front Matter에 &lt;code&gt;excerpt&lt;/code&gt; 값을 추가하여 명시 적으로 무시할 수 있습니다 . 또는 게시물의 YAML 프론트 &lt;code&gt;excerpt_separator&lt;/code&gt; 에서 사용자 정의 excerpt_separator 를 정의하도록 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d8dcbea52725084b044622cd5f2ef094e993b82b" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify any permalink setting, Jekyll uses the above pattern as the default.</source>
          <target state="translated">영구 링크 설정을 지정하지 않으면 Jekyll은 위 패턴을 기본값으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="dcb9485c8b5e90e3f365ed37424df30d5e0be640" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want file extensions (&lt;code&gt;.html&lt;/code&gt;) to appear in your page URLs (file extensions are the default), you can choose a &lt;a href=&quot;../permalinks/index#builtinpermalinkstyles&quot;&gt;permalink style&lt;/a&gt; that has a trailing slash instead of a file extension.</source>
          <target state="translated">파일 확장자 ( &lt;code&gt;.html&lt;/code&gt; )를 페이지 URL에 표시 하지 않으려면 (파일 확장자가 기본값 임) 파일 확장자 대신 후행 슬래시가있는 &lt;a href=&quot;../permalinks/index#builtinpermalinkstyles&quot;&gt;퍼머 링크 스타일&lt;/a&gt; 을 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="691e1ac95cea8ad1bfd352b94e199cf2238e92d8" translate="yes" xml:space="preserve">
          <source>If you don't want to repeat your frequently used front matter variables over and over, define &lt;a href=&quot;../configuration/front-matter-defaults/index&quot;&gt;defaults&lt;/a&gt; for them and only override them where necessary (or not at all). This works both for predefined and custom variables.</source>
          <target state="translated">자주 사용하는 머리말 변수를 반복해서 반복하지 않으려면 &lt;a href=&quot;../configuration/front-matter-defaults/index&quot;&gt;기본값을&lt;/a&gt; 정의 하십시오. 을 하고 필요한 경우에만 재정의하십시오 (또는 아예 아님). 이는 사전 정의 된 변수와 사용자 지정 변수 모두에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="53dcae4af8a7270750576a8ee8bba86266df85af" translate="yes" xml:space="preserve">
          <source>If you don't want to repeat your frequently used front matter variables over and over, just define &lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;defaults&lt;/a&gt; for them and only override them where necessary (or not at all). This works both for predefined and custom variables.</source>
          <target state="translated">자주 사용되는 전면 변수를 반복해서 반복하지 않으려면 &lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;기본값&lt;/a&gt; 을 정의 하고 필요한 경우 (또는 전혀 아님) 재정의하십시오. 이것은 사전 정의 된 변수와 사용자 정의 변수 모두에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="695dbec8f8c7d62ab7d2637fbd3d02db37fa7dca" translate="yes" xml:space="preserve">
          <source>If you elect to use one of the above methods to install Ruby, it might be necessary to modify your &lt;code&gt;$PATH&lt;/code&gt; variable using the following command:</source>
          <target state="translated">위의 방법 중 하나를 사용하여 Ruby를 설치하기로 선택한 경우 다음 명령을 사용 하여 &lt;code&gt;$PATH&lt;/code&gt; 변수 를 수정해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d0daf76ccc8900e401691ef193ac3cfdb207f8ba" translate="yes" xml:space="preserve">
          <source>If you encounter any errors during this process, check that you have installed all the prerequisites in &lt;a href=&quot;installation/index#requirements&quot;&gt;Requirements&lt;/a&gt;. If you still have issues, see &lt;a href=&quot;troubleshooting/index#configuration-problems&quot;&gt;Troubleshooting&lt;/a&gt;.</source>
          <target state="translated">이 프로세스 중에 오류가 발생하는 경우 &lt;a href=&quot;installation/index#requirements&quot;&gt;요구 사항의&lt;/a&gt; 모든 필수 구성 요소를 설치했는지 확인하십시오 . 여전히 문제가있는 경우, 참조 &lt;a href=&quot;troubleshooting/index#configuration-problems&quot;&gt;문제 해결&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="78ac4df433e508538f8c91dafb01e421b709b72f" translate="yes" xml:space="preserve">
          <source>If you encounter any unexpected errors during the above, please refer to the &lt;a href=&quot;../troubleshooting/index#configuration-problems&quot;&gt;troubleshooting&lt;/a&gt; page or the already-mentioned &lt;a href=&quot;../installation/index#requirements&quot;&gt;requirements&lt;/a&gt; page, as you might be missing development headers or other prerequisites.</source>
          <target state="translated">위의 과정에서 예기치 않은 오류가 발생하면 개발 헤더 나 기타 필수 구성 요소가 누락되었을 수 있으므로 &lt;a href=&quot;../troubleshooting/index#configuration-problems&quot;&gt;문제 해결&lt;/a&gt; 페이지 또는 이미 언급 된 &lt;a href=&quot;../installation/index#requirements&quot;&gt;요구 사항&lt;/a&gt; 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="419149f36b3a43f81bd8852b1793187c1d0de326" translate="yes" xml:space="preserve">
          <source>If you encounter errors during gem installation, you may need to install the header files for compiling extension modules for Ruby 2.x This can be done on Ubuntu or Debian by running:</source>
          <target state="translated">gem 설치 도중 오류가 발생하면 Ruby 2.x 용 확장 모듈을 컴파일하기위한 헤더 파일을 설치해야 할 수 있습니다. 우분투 또는 데비안에서 다음을 실행하여 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc681b212f4599ce7e31a75ab7408667783b5d07" translate="yes" xml:space="preserve">
          <source>If you ever run into problems installing or using Jekyll, here are a few tips that might be of help. If the problem you&amp;rsquo;re experiencing isn&amp;rsquo;t covered below, &lt;strong&gt;please &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;check out our other help resources&lt;/a&gt;&lt;/strong&gt; as well.</source>
          <target state="translated">Jekyll 설치 또는 사용에 문제가있는 경우 도움이 될만한 몇 가지 팁이 있습니다. 발생한 문제가 아래에 포함되어 있지 않은 경우, &lt;strong&gt;제발 &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;우리의 다른 도움말 리소스를 확인&lt;/a&gt;&lt;/strong&gt; 뿐만 아니라.</target>
        </trans-unit>
        <trans-unit id="bcaae47dde1bccae46283be925cd88f5bb4ac8bc" translate="yes" xml:space="preserve">
          <source>If you have a Jekyll plugin that you would like to see added to this list, you should &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;read the contributing page&lt;/a&gt; to find out how to make that happen.</source>
          <target state="translated">이 목록에 추가하려는 Jekyll 플러그인이있는 경우 &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;제공 페이지&lt;/a&gt; 를 읽고이를 수행하는 방법을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="83baaab7df26fe688de694edde9457dbded438f4" translate="yes" xml:space="preserve">
          <source>If you have a lot of pages, you can organize them into subfolders. The same subfolders that are used to group your pages in your project&amp;rsquo;s source will then exist in the &lt;code&gt;_site&lt;/code&gt; folder when your site builds. However, when a page has a &lt;em&gt;different&lt;/em&gt; permalink set in the front matter, the subfolder at &lt;code&gt;_site&lt;/code&gt; changes accordingly.</source>
          <target state="translated">페이지가 많은 경우 하위 폴더로 구성 할 수 있습니다. 프로젝트 소스에서 페이지를 그룹화하는 데 사용되는 동일한 하위 폴더는 사이트가 빌드 될 때 &lt;code&gt;_site&lt;/code&gt; 폴더에 존재 합니다. 그러나 페이지의 &lt;code&gt;_site&lt;/code&gt; 에 &lt;em&gt;다른&lt;/em&gt; 영구 링크가 설정된 경우 _site 의 하위 폴더가 그에 따라 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="ae769a5e5cf97ef3147fb61d183e310b175222ef" translate="yes" xml:space="preserve">
          <source>If you have a lot of pages, you can organize those pages into subfolders. The same subfolders that are used to group your pages in our project&amp;rsquo;s source will exist in the &lt;code&gt;_site&lt;/code&gt; folder when your site builds.</source>
          <target state="translated">페이지가 많은 경우 해당 페이지를 하위 폴더로 구성 할 수 있습니다. 사이트가 빌드 될 때 프로젝트 소스에서 페이지를 그룹화하는 데 사용되는 동일한 하위 폴더가 &lt;code&gt;_site&lt;/code&gt; 폴더에 있습니다.</target>
        </trans-unit>
        <trans-unit id="5bad37a14e75aa6498e803b19d46fb965756f922" translate="yes" xml:space="preserve">
          <source>If you have a new markup language you&amp;rsquo;d like to use with your site, you can include it by implementing your own converter. Both the Markdown and &lt;a href=&quot;https://github.com/jekyll/jekyll-textile-converter&quot;&gt;Textile&lt;/a&gt; markup languages are implemented using this method.</source>
          <target state="translated">사이트에 사용할 새 마크 업 언어가있는 경우 고유 한 변환기를 구현하여 해당 언어를 포함시킬 수 있습니다. 마크 다운 및 &lt;a href=&quot;https://github.com/jekyll/jekyll-textile-converter&quot;&gt;텍스타일&lt;/a&gt; 마크 업 언어는 모두이 방법을 사용하여 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="5df5d74f07c47f2eb7598f9ac1144208de07b108" translate="yes" xml:space="preserve">
          <source>If you have a question about using Jekyll, start a discussion on the &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Forum&lt;/a&gt; or &lt;a href=&quot;https://stackoverflow.com/questions/tagged/jekyll&quot;&gt;StackOverflow&lt;/a&gt;</source>
          <target state="translated">Jekyll 사용에 대한 질문이있는 경우 &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll 포럼&lt;/a&gt; 또는 &lt;a href=&quot;https://stackoverflow.com/questions/tagged/jekyll&quot;&gt;StackOverflow&lt;/a&gt; 에서 토론을 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="11e684240f96bf103554d83d8af061e74dfe3c4d" translate="yes" xml:space="preserve">
          <source>If you have direct access to the deployment web server, the process is essentially the same, except you might have other methods available to you (such as &lt;code&gt;scp&lt;/code&gt;, or even direct filesystem access) for transferring the files. Just remember to make sure the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder get placed in the appropriate web root directory for your web server.</source>
          <target state="translated">배포 웹 서버에 직접 액세스 할 수있는 경우 파일 전송을 위해 다른 방법 (예 : &lt;code&gt;scp&lt;/code&gt; 또는 직접 파일 시스템 액세스)을 사용할 수 있다는 점을 제외하면 프로세스는 기본적으로 동일 합니다. 생성 된 &lt;code&gt;_site&lt;/code&gt; 폴더 의 컨텐츠가 웹 서버에 적합한 웹 루트 디렉토리에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="637cf5bb125e71dc601be35ffda20c19e2ee577a" translate="yes" xml:space="preserve">
          <source>If you have direct access to the deployment web server, the process is essentially the same, except you might have other methods available to you (such as &lt;code&gt;scp&lt;/code&gt;, or even direct filesystem access) for transferring the files. Remember to make sure the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder get placed in the appropriate web root directory for your web server.</source>
          <target state="translated">배포 웹 서버에 직접 액세스 할 수있는 경우 파일을 전송하는 데 사용할 수있는 다른 방법 (예 : &lt;code&gt;scp&lt;/code&gt; 또는 직접 파일 시스템 액세스) 이있을 수 있다는 점을 제외하면 프로세스는 기본적으로 동일 합니다. 생성 된 &lt;code&gt;_site&lt;/code&gt; 폴더 의 내용이 웹 서버의 적절한 웹 루트 디렉토리에 있는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe535a62e54177c3a383406390df61e1e1cc7866" translate="yes" xml:space="preserve">
          <source>If you have page snippets that you use repeatedly across your site, an &lt;a href=&quot;../../includes/index&quot;&gt;include&lt;/a&gt; is the perfect way to make this more maintainable.</source>
          <target state="translated">사이트 전체에서 반복적으로 사용하는 페이지 스 니펫이있는 경우 &lt;a href=&quot;../../includes/index&quot;&gt;포함&lt;/a&gt; 을 사용하면이를 더 쉽게 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5eb091944ffc4551a59bb8692f2615682ca2403a" translate="yes" xml:space="preserve">
          <source>If you have pages organized into subfolders in your source folder and want to flatten them in the root folder on build, you must add the &lt;a href=&quot;../permalinks/index&quot;&gt;permalink&lt;/a&gt; property directly in your page&amp;rsquo;s front matter like this:</source>
          <target state="translated">소스 폴더에 하위 폴더로 구성된 페이지가 있고 빌드시 루트 폴더에 페이지를 병합하려는 경우 다음 과 같이 페이지의 맨 앞에 &lt;a href=&quot;../permalinks/index&quot;&gt;법적 링크&lt;/a&gt; 특성을 직접 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0577f8860296868fa98d8d8f4df1bfbc54574ecc" translate="yes" xml:space="preserve">
          <source>If you have small page snippets that you want to include in multiple places on your site, save the snippets as &lt;em&gt;include files&lt;/em&gt; and insert them where required, by using the &lt;code&gt;include&lt;/code&gt; tag:</source>
          <target state="translated">사이트의 여러 위치에 포함 할 작은 페이지 스 니펫이있는 경우 스 니펫을 &lt;em&gt;포함 파일&lt;/em&gt; 로 저장 하고 &lt;code&gt;include&lt;/code&gt; 태그 를 사용하여 필요한 곳에 삽입하십시오 .</target>
        </trans-unit>
        <trans-unit id="e4dcbf97134ec15dac093fc5587622568f5e7a06" translate="yes" xml:space="preserve">
          <source>If you have the theme gem, you can (if you desire) run &lt;code&gt;bundle update&lt;/code&gt; to update all gems in your project. Or you can run &lt;code&gt;bundle update &amp;lt;THEME&amp;gt;&lt;/code&gt;, replacing &lt;code&gt;&amp;lt;THEME&amp;gt;&lt;/code&gt; with the theme name, such as &lt;code&gt;minima&lt;/code&gt;, to just update the theme gem. Any new files or updates the theme developer has made (such as to stylesheets or includes) will be pulled into your project automatically.</source>
          <target state="translated">테마 젬이 있다면, 원하는 경우 &lt;code&gt;bundle update&lt;/code&gt; 를 실행 하여 프로젝트의 모든 젬을 업데이트 할 수 있습니다 . 또는 &lt;code&gt;bundle update &amp;lt;THEME&amp;gt;&lt;/code&gt; 실행 하여 &lt;code&gt;&amp;lt;THEME&amp;gt;&lt;/code&gt; 을 테마 이름 (예 : &lt;code&gt;minima&lt;/code&gt; )으로 바꾸어 테마 gem 만 업데이트 할 수 있습니다. 스타일 시트 나 포함과 같은 테마 개발자가 만든 모든 새 파일이나 업데이트는 프로젝트에 자동으로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="2af9aac0e83cca3a7b6edb3afed5cb21b5ce923a" translate="yes" xml:space="preserve">
          <source>If you installed the above - specifically on Fedora 23 - but the extensions would still not compile, you are probably running a Fedora image that misses the &lt;code&gt;redhat-rpm-config&lt;/code&gt; package. To solve this, simply run:</source>
          <target state="translated">위의 내용을 (특히 Fedora 23에) 설치했지만 확장 기능이 여전히 컴파일되지 않으면 &lt;code&gt;redhat-rpm-config&lt;/code&gt; 패키지 가 누락 된 Fedora 이미지를 실행중인 것입니다 . 이 문제를 해결하려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="7d5ca65d123a97afb7c4de424400cec844b7cc8b" translate="yes" xml:space="preserve">
          <source>If you need your processed blog post URLs to be something other than the site-wide style (default &lt;code&gt;/year/month/day/title.html&lt;/code&gt;), then you can set this variable and it will be used as the final URL.</source>
          <target state="translated">처리 된 블로그 게시물 URL이 사이트 전체 스타일 (기본값 &lt;code&gt;/year/month/day/title.html&lt;/code&gt; ) 이 아닌 다른 형식이어야하는 경우이 변수를 설정하면 최종 URL로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1a6d4a67cd0be1ed8225a589b96384dc4dc87421" translate="yes" xml:space="preserve">
          <source>If you organize your posts in subdirectories, you need to include subdirectory path to the post:</source>
          <target state="translated">하위 디렉토리에 게시물을 구성하는 경우 게시물의 하위 디렉토리 경로를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="59644a3bec6611d4bbfb69658dbc3ec13b376b50" translate="yes" xml:space="preserve">
          <source>If you organized your categories as &lt;code&gt;/_posts/code/2008-12-24-closures.md&lt;/code&gt;, you will need to restructure your directories to put the categories &lt;em&gt;above&lt;/em&gt; the &lt;code&gt;_posts&lt;/code&gt; directories, as follows: &lt;code&gt;/code/_posts/2008-12-24-closures.md&lt;/code&gt;.</source>
          <target state="translated">당신은 귀하의 범주를 구성하는 경우 &lt;code&gt;/_posts/code/2008-12-24-closures.md&lt;/code&gt; , 당신은 범주에 넣어 구조 조정에 디렉토리를 필요 &lt;em&gt;이상 &lt;/em&gt; &lt;code&gt;_posts&lt;/code&gt; 에 다음과 같이 디렉토리 : &lt;code&gt;/code/_posts/2008-12-24-closures.md&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15e7da8c7232d666a600ffd29e96790343ccd0c8" translate="yes" xml:space="preserve">
          <source>If you prefer configuration as code over GUI, you can generate a &lt;code&gt;buddy.yml&lt;/code&gt; that will create a pipeline with the Jekyll action once you push it to the target branch:</source>
          <target state="translated">GUI보다 코드로 구성을 선호하는 경우 대상 분기로 푸시하면 Jekyll 작업으로 파이프 라인을 생성하는 &lt;code&gt;buddy.yml&lt;/code&gt; 을 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2c5ed4bc716636bfe873be9c1845bd719868a4d7" translate="yes" xml:space="preserve">
          <source>If you run into an issue that a static file can&amp;rsquo;t be found in your production environment during build since v3.2.0 you should set your &lt;a href=&quot;../configuration/environments/index&quot;&gt;environment to &lt;code&gt;production&lt;/code&gt;&lt;/a&gt;. The issue is caused by trying to copy a non-existing symlink.</source>
          <target state="translated">v3.2.0 이후 빌드 중에 프로덕션 환경에서 정적 파일을 찾을 수없는 문제가 발생하는 경우 &lt;a href=&quot;../configuration/environments/index&quot;&gt;환경을 &lt;code&gt;production&lt;/code&gt; 으로&lt;/a&gt; 설정해야 합니다 . 이 문제는 존재하지 않는 심볼릭 링크를 복사하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d87bce7a50eafecc7cde1bce304d6aef1a746a27" translate="yes" xml:space="preserve">
          <source>If you run into an issue that a static file can&amp;rsquo;t be found in your production environment during build since v3.2.0 you should set your &lt;a href=&quot;../configuration/index#specifying-a-jekyll-environment-at-build-time&quot;&gt;environment to &lt;code&gt;production&lt;/code&gt;&lt;/a&gt;. The issue is caused by trying to copy a non-existing symlink.</source>
          <target state="translated">v3.2.0 이후 빌드 중에 프로덕션 환경에서 정적 파일을 찾을 수없는 문제가 발생하면 &lt;a href=&quot;../configuration/index#specifying-a-jekyll-environment-at-build-time&quot;&gt;환경을 &lt;code&gt;production&lt;/code&gt; 으로&lt;/a&gt; 설정해야 합니다 . 존재하지 않는 심볼릭 링크를 복사하려고하면이 문제가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8a24692597a6a916d6932c56c3b3699b4da36b10" translate="yes" xml:space="preserve">
          <source>If you run into issues installing Jekyll's dependencies which make use of native extensions and are using macOS, you will need to install Xcode and the Command-Line Tools it ships with. Download them in &lt;code&gt;Preferences &amp;rarr; Downloads &amp;rarr; Components&lt;/code&gt;.</source>
          <target state="translated">기본 확장을 사용하고 macOS를 사용하는 Jekyll의 종속성을 설치하는 데 문제가 발생하면 Xcode와 함께 제공되는 명령 줄 도구를 설치해야합니다. 그들을 다운로드 &lt;code&gt;Preferences &amp;rarr; Downloads &amp;rarr; Components&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="63f6ac72947ee61e3701e918efc95d21e22b41e4" translate="yes" xml:space="preserve">
          <source>If you see the following error when running the &lt;code&gt;jekyll new&lt;/code&gt; command, you can solve it by using the above-described procedure:</source>
          <target state="translated">&lt;code&gt;jekyll new&lt;/code&gt; 명령을 실행할 때 다음 오류가 표시되면 위에서 설명한 절차를 사용하여 해결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="870ad99aca29d304fc24ad3ab294442ef63a802d" translate="yes" xml:space="preserve">
          <source>If you specify a directory to store all your collections in the same place with &lt;code&gt;collections_dir: my_collections&lt;/code&gt;, then you will need to move your &lt;code&gt;_drafts&lt;/code&gt; and &lt;code&gt;_posts&lt;/code&gt; directory to &lt;code&gt;my_collections/_drafts&lt;/code&gt; and &lt;code&gt;my_collections/_posts&lt;/code&gt;. Note that, the name of your collections directory cannot start with an underscore (`_`).</source>
          <target state="translated">&lt;code&gt;collections_dir: my_collections&lt;/code&gt; 를 사용하여 동일한 위치에 모든 컬렉션을 저장할 디렉토리를 지정하면 &lt;code&gt;_drafts&lt;/code&gt; 및 &lt;code&gt;_posts&lt;/code&gt; 디렉토리를 &lt;code&gt;my_collections/_drafts&lt;/code&gt; 및 &lt;code&gt;my_collections/_posts&lt;/code&gt; 로 이동해야합니다 . 컬렉션 디렉토리의 이름은 밑줄 (`_`)로 시작할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="203d28453b3da20875b1b4f55216eb8f66ab1182" translate="yes" xml:space="preserve">
          <source>If you specify a directory to store all your collections in the same place with &lt;code&gt;collections_dir: my_collections&lt;/code&gt;, then you will need to move your &lt;code&gt;_posts&lt;/code&gt; directory to &lt;code&gt;my_collections/_posts&lt;/code&gt;. Note that, the name of your collections directory cannot start with an underscore (`_`).</source>
          <target state="translated">&lt;code&gt;collections_dir: my_collections&lt;/code&gt; 와 같은 위치에 모든 콜렉션을 저장할 디렉토리를 지정하면 &lt;code&gt;_posts&lt;/code&gt; 디렉토리를 &lt;code&gt;my_collections/_posts&lt;/code&gt; 로 이동해야합니다 . 콜렉션 디렉토리의 이름은 밑줄 (`_`)로 시작할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="152a6851ec832106f1870e82fa9510155e162df2" translate="yes" xml:space="preserve">
          <source>If you specify front matter in a layout, access that via &lt;code&gt;layout&lt;/code&gt;. For example, if you specify &lt;code&gt;class: full_page&lt;/code&gt; in a layout&amp;rsquo;s front matter, that value will be available as &lt;code&gt;layout.class&lt;/code&gt; in the layout and its parents.</source>
          <target state="translated">당신은 레이아웃의 서문을 통해 그 액세스 지정하면 &lt;code&gt;layout&lt;/code&gt; . 예를 들어, 레이아웃의 전면에 &lt;code&gt;class: full_page&lt;/code&gt; 를 지정하면 해당 값을 레이아웃과 해당 부모에서 &lt;code&gt;layout.class&lt;/code&gt; 로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fc758ea2a58bbed0770047b054fc5a31a9910319" translate="yes" xml:space="preserve">
          <source>If you still have issues, you can download and install new Command Line Tools (such as &lt;code&gt;gcc&lt;/code&gt;) using the following command:</source>
          <target state="translated">여전히 문제가있는 경우 다음 명령을 사용하여 새 명령 줄 도구 (예 : &lt;code&gt;gcc&lt;/code&gt; )를 다운로드하여 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3f40408167848ab5e0ef03799fbc3e4838fc4b88" translate="yes" xml:space="preserve">
          <source>If you store your Jekyll site in &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt; (you are using version control, right?), it&amp;rsquo;s pretty easy to automate the deployment process by setting up a post-update hook in your Git repository, &lt;a href=&quot;http://web.archive.org/web/20091223025644/http://www.taknado.com/en/2009/03/26/deploying-a-jekyll-generated-site/&quot;&gt;like this&lt;/a&gt;.</source>
          <target state="translated">Jekyll 사이트를 &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git에&lt;/a&gt; 저장하면 (버전 제어를 사용하고 있습니까?) Git 저장소에 다음 &lt;a href=&quot;http://web.archive.org/web/20091223025644/http://www.taknado.com/en/2009/03/26/deploying-a-jekyll-generated-site/&quot;&gt;과 같이&lt;/a&gt; 업데이트 후 후크를 설정하여 배포 프로세스를 자동화하는 것이 매우 쉽습니다 .</target>
        </trans-unit>
        <trans-unit id="9540f36c3037240d8cea90995f2c2a76090e644d" translate="yes" xml:space="preserve">
          <source>If you think you&amp;rsquo;ve found a bug within Jekyll itself, &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;open an issue&lt;/a&gt;.</source>
          <target state="translated">Jekyll 자체에서 버그를 발견했다고 생각되면 &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;문제를 엽니 다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e92ecdb1ed9493dd4eabcd57a2204713ec491365" translate="yes" xml:space="preserve">
          <source>If you think you&amp;rsquo;ve found a bug within a Jekyll plugin, open an issue in that plugin&amp;rsquo;s repository &amp;mdash; First &lt;a href=&quot;https://rubygems.org/&quot;&gt;look for the plugin on rubygems&lt;/a&gt; then click on the &lt;code&gt;Homepage&lt;/code&gt; link to access the plugin repository.</source>
          <target state="translated">Jekyll 플러그인에서 버그를 발견했다고 생각되면 해당 플러그인의 저장소에서 문제를 엽니 다. 먼저 &lt;a href=&quot;https://rubygems.org/&quot;&gt;rubygems에서 플러그인을 찾은&lt;/a&gt; 다음 &lt;code&gt;Homepage&lt;/code&gt; 링크를 클릭 하여 플러그인 저장소에 액세스합니다.</target>
        </trans-unit>
        <trans-unit id="12a48184851539ccef251a9fea32dc2a0dd1273a" translate="yes" xml:space="preserve">
          <source>If you use UTF-8 encoding, make sure that no &lt;code&gt;BOM&lt;/code&gt; header characters exist in your files or very, very bad things will happen to Jekyll. This is especially relevant if you&amp;rsquo;re running &lt;a href=&quot;../installation/windows/index&quot;&gt;Jekyll on Windows&lt;/a&gt;.</source>
          <target state="translated">UTF-8 인코딩을 사용하는 경우 파일에 &lt;code&gt;BOM&lt;/code&gt; 헤더 문자가 없는지 확인하십시오. 그렇지 않으면 Jekyll에 매우 나쁜 일이 발생합니다. &lt;a href=&quot;../installation/windows/index&quot;&gt;Windows&lt;/a&gt; 에서 Jekyll을 실행하는 경우 특히 관련이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9c5c7747d5156ac128a683ae71080c529b562e3a" translate="yes" xml:space="preserve">
          <source>If you use UTF-8 encoding, make sure that no &lt;code&gt;BOM&lt;/code&gt; header characters exist in your files or very, very bad things will happen to Jekyll. This is especially relevant if you&amp;rsquo;re running &lt;a href=&quot;../windows/index&quot;&gt;Jekyll on Windows&lt;/a&gt;.</source>
          <target state="translated">UTF-8 인코딩을 사용하는 경우 파일에 &lt;code&gt;BOM&lt;/code&gt; 헤더 문자가 없거나 Jekyll에 매우 나쁜 일이 발생 하는지 확인하십시오 . 이것은 &lt;a href=&quot;../windows/index&quot;&gt;Windows&lt;/a&gt; 에서 Jekyll을 실행하는 경우 특히 관련이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="513a6a109d9f46f3d1d111d65d91f74ea48f6618" translate="yes" xml:space="preserve">
          <source>If you use UTF-8 encoding, make sure that no &lt;code&gt;BOM&lt;/code&gt; header characters exist in your files or very, very bad things will happen to Jekyll. This is especially relevant when you&amp;rsquo;re running Jekyll on Windows.</source>
          <target state="translated">UTF-8 인코딩을 사용하는 경우 파일에 &lt;code&gt;BOM&lt;/code&gt; 헤더 문자가 없거나 Jekyll에 매우 나쁜 일이 발생 하는지 확인하십시오 . 이것은 Windows에서 Jekyll을 실행할 때 특히 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7519b21e43136b2c3303f52f1442a4bc5f55ca7c" translate="yes" xml:space="preserve">
          <source>If you use UTF-8 encoding, make sure that no &lt;code&gt;BOM&lt;/code&gt; header characters exist in your files. If they don&amp;rsquo;t, Jekyll will break. This is especially relevant when you&amp;rsquo;re running Jekyll on Windows.</source>
          <target state="translated">UTF-8 인코딩을 사용하는 경우 파일에 &lt;code&gt;BOM&lt;/code&gt; 헤더 문자가 없는지 확인하십시오 . 그렇지 않으면 지킬이 깨질 것입니다. 이것은 Windows에서 Jekyll을 실행할 때 특히 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac6a31955e7bb198829c3348c36e9744d447c4d5" translate="yes" xml:space="preserve">
          <source>If you use a permalink style that omits the &lt;code&gt;.html&lt;/code&gt; file extension, each post is rendered as an &lt;code&gt;index.html&lt;/code&gt; file inside a folder with the post&amp;rsquo;s name (for example, &lt;code&gt;categoryname/2016/12/01/mypostname/index.html&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;.html&lt;/code&gt; 파일 확장자 를 생략하는 퍼머 링크 스타일을 사용하는 경우 각 게시물은 게시물 이름이있는 폴더 안에 &lt;code&gt;index.html&lt;/code&gt; 파일 로 렌더링됩니다 (예 : &lt;code&gt;categoryname/2016/12/01/mypostname/index.html&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c60bfc7d9e4f2630fffc6a2784feb3b63c67af79" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;--config&lt;/code&gt; flag, Jekyll will ignore your &lt;code&gt;_config.yml&lt;/code&gt; file. Want to merge a custom configuration with the normal configuration? No problem. Jekyll will accept more than one custom config file via the command line. Config files cascade from right to left, such that if I run &lt;code&gt;jekyll serve --config _config.yml,_config-dev.yml&lt;/code&gt;, the values in the config files on the right (&lt;code&gt;_config-dev.yml&lt;/code&gt;) overwrite those on the left (&lt;code&gt;_config.yml&lt;/code&gt;) when both contain the same key.</source>
          <target state="translated">&lt;code&gt;--config&lt;/code&gt; 플래그 를 사용하면 Jekyll은 &lt;code&gt;_config.yml&lt;/code&gt; 파일 을 무시합니다 . 사용자 정의 구성을 일반 구성과 병합 하시겠습니까? 문제 없어요. Jekyll은 명령 행을 통해 둘 이상의 사용자 정의 구성 파일을 허용합니다. 구성 파일은 오른쪽에서 왼쪽으로 캐스케이드 &lt;code&gt;jekyll serve --config _config.yml,_config-dev.yml&lt;/code&gt; 을 실행하면 오른쪽 구성 파일의 값 ( &lt;code&gt;_config-dev.yml&lt;/code&gt; )이 왼쪽 의 값을 덮어 씁니다 ( 둘 다 동일한 키를 포함하는 경우 &lt;code&gt;_config.yml&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="093409bc16fd6da356b69f3cf640249f766ed8ff" translate="yes" xml:space="preserve">
          <source>If you use the method described above, please remember that the URLs for all posts and pages contain a leading slash. Therefore, concatenating the site baseurl and the post/page url where &lt;code&gt;site.baseurl = /&lt;/code&gt; and &lt;code&gt;post.url = /2013/06/05/my-fun-post/&lt;/code&gt; will result in two leading slashes, which will break links. It is thus suggested that prefixing with &lt;code&gt;site.baseurl&lt;/code&gt; only be used when the &lt;code&gt;baseurl&lt;/code&gt; is something other than the default of &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">위에서 설명한 방법을 사용하는 경우 모든 게시물 및 페이지의 URL에 슬래시가 포함되어 있습니다. 따라서 &lt;code&gt;site.baseurl = /&lt;/code&gt; 및 &lt;code&gt;post.url = /2013/06/05/my-fun-post/&lt;/code&gt; 위치에 사이트 baseurl과 게시물 / 페이지 URL을 연결하면 두 개의 슬래시가 발생하여 링크가 끊어집니다. 따라서 함께 접두사 것이 좋습니다 &lt;code&gt;site.baseurl&lt;/code&gt; 이 경우에만 사용할 수 &lt;code&gt;baseurl&lt;/code&gt; 기본이 아닌 다른 뭔가 &lt;code&gt;/&lt;/code&gt; 가 .</target>
        </trans-unit>
        <trans-unit id="27f3b5a86ae85eb00dfec776f201d29c0a6d0425" translate="yes" xml:space="preserve">
          <source>If you want to build for your production environment:</source>
          <target state="translated">프로덕션 환경을 위해 빌드하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="54d25f7a99e4ca948852dc14d5de687e3b1584af" translate="yes" xml:space="preserve">
          <source>If you want to flatten your pages (pull them out of subfolders) in the &lt;code&gt;_site&lt;/code&gt; directory when your site builds (similar to posts), add the &lt;code&gt;permalink&lt;/code&gt; property to the front matter of each page, with no path specified:</source>
          <target state="translated">사이트를 빌드 할 때 (게시물과 유사하게) &lt;code&gt;_site&lt;/code&gt; 디렉토리 에서 페이지를 병합 (하위 폴더에서 가져 오기)하려면 경로가 지정되지 않은 상태에서 각 페이지의 전면에 &lt;code&gt;permalink&lt;/code&gt; 속성을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="f4fd5fc834be5433029f508f385d4d410e8fef47" translate="yes" xml:space="preserve">
          <source>If you want to host your site in Amazon S3, you can do so by using the &lt;a href=&quot;https://github.com/laurilehmijoki/s3_website&quot;&gt;s3_website&lt;/a&gt; application. It will push your site to Amazon S3 where it can be served like any web server, dynamically scaling to almost unlimited traffic. This approach has the benefit of being about the cheapest hosting option available for low-volume blogs as you only pay for what you use.</source>
          <target state="translated">Amazon S3에서 사이트를 호스팅하려는 경우 &lt;a href=&quot;https://github.com/laurilehmijoki/s3_website&quot;&gt;s3_website&lt;/a&gt; 애플리케이션 을 사용하여 사이트를 호스팅 할 수 있습니다 . 웹 서버처럼 서비스 할 수있는 Amazon S3로 사이트를 푸시하여 거의 무제한 트래픽으로 동적으로 확장합니다. 이 방법을 사용하면 사용한만큼만 비용을 지불하므로 소량의 블로그에서 가장 저렴한 호스팅 옵션을 이용할 수 있다는 이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f193a2d48bc477f05170ef8b36607112f513e30" translate="yes" xml:space="preserve">
          <source>If you want to include a link to a post on your site, the &lt;code&gt;post_url&lt;/code&gt; tag will generate the correct permalink URL for the post you specify.</source>
          <target state="translated">사이트의 게시물에 대한 링크를 포함하려는 경우 &lt;code&gt;post_url&lt;/code&gt; 태그는 지정한 게시물에 대한 올바른 영구 링크 URL을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3de0868d95be5eca5b95fed7d8f738ea01895123" translate="yes" xml:space="preserve">
          <source>If you want to include this variable in your parameter that you pass to an include, you need to store the entire parameter as a variable before passing it to the include. You can use &lt;code&gt;capture&lt;/code&gt; tags to create the variable:</source>
          <target state="translated">포함에 전달하는 매개 변수에이 변수를 포함하려면 포함에 전달하기 전에 전체 매개 변수를 변수로 저장해야합니다. &lt;code&gt;capture&lt;/code&gt; 태그를 사용하여 변수를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a658dae7dbd88f8c356e9279323636361d819861" translate="yes" xml:space="preserve">
          <source>If you want to maintain Jekyll inside your existing Rails app, &lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin&quot;&gt;Jekyll-Admin&lt;/a&gt; contains drop in code to make this possible. See Jekyll-Admin&amp;rsquo;s &lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin/blob/master/README&quot;&gt;README&lt;/a&gt; for more details.</source>
          <target state="translated">기존 Rails 앱 내에서 Jekyll을 유지하려면 &lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin&quot;&gt;Jekyll-Admin&lt;/a&gt; 에 코드 드롭 인이 포함되어 있습니다. 자세한 내용은 Jekyll-Admin의 &lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin/blob/master/README&quot;&gt;README&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ec215e282a9ad8aecb2e4fc28cabe6ff27440918" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;a href=&quot;../variables/index&quot;&gt;Liquid tags and variables&lt;/a&gt; but don&amp;rsquo;t need anything in your front matter, just leave it empty! The set of triple-dashed lines with nothing in between will still get Jekyll to process your file. (This is useful for things like CSS and RSS feeds!)</source>
          <target state="translated">&lt;a href=&quot;../variables/index&quot;&gt;Liquid 태그와 변수&lt;/a&gt; 를 사용하고 싶지만 , 앞면에 아무것도 필요하지 않으면 비워 두십시오! 사이에 아무 것도없는 3 중 점선은 여전히 ​​Jekyll이 파일을 처리하게합니다. (이것은 CSS 및 RSS 피드와 같은 것들에 유용합니다!)</target>
        </trans-unit>
        <trans-unit id="d1fe99f58a90cab317379dfefe13b26122c4bcda" translate="yes" xml:space="preserve">
          <source>If you wish a specific page to be shown when accessing &lt;code&gt;/my_collection/&lt;/code&gt;, simply add &lt;code&gt;permalink: /my_collection/index.html&lt;/code&gt; to a page. To list items from the collection, on that page or any other, you can use:</source>
          <target state="translated">&lt;code&gt;/my_collection/&lt;/code&gt; 액세스 할 때 특정 페이지를 표시하려면 페이지에 &lt;code&gt;permalink: /my_collection/index.html&lt;/code&gt; 을 추가 하십시오. 컬렉션의 항목을 해당 페이지 나 다른 페이지에 나열하려면 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e19cb6a37691f8463f62bacf36c8b8270dac01f" translate="yes" xml:space="preserve">
          <source>If you wish to specify a custom pattern for the URLs where your Collection pages will reside, you may do so with the &lt;a href=&quot;../permalinks/index&quot;&gt;&lt;code&gt;permalink&lt;/code&gt; property&lt;/a&gt;:</source>
          <target state="translated">컬렉션 페이지가있는 URL에 사용자 정의 패턴을 지정하려면 &lt;a href=&quot;../permalinks/index&quot;&gt; &lt;code&gt;permalink&lt;/code&gt; 속성을 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="92960387c493deb76d50d5b4ca39fda778849568" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like Jekyll to create a public-facing, rendered version of each document in your collection, set the &lt;code&gt;output&lt;/code&gt; key to &lt;code&gt;true&lt;/code&gt; in your collection metadata in your &lt;code&gt;_config.yml&lt;/code&gt;:</source>
          <target state="translated">Jekyll이 컬렉션에서 각 문서의 공개 버전으로 렌더링 된 버전을 만들려면 &lt;code&gt;_config.yml&lt;/code&gt; 의 컬렉션 메타 데이터에서 &lt;code&gt;output&lt;/code&gt; 키를 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="9118d1b292cfe3be8e42ad850895b79508bc287e" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like Jekyll to create a rendered page for each document in your collection, you can set the &lt;code&gt;output&lt;/code&gt; key to &lt;code&gt;true&lt;/code&gt; in your collection metadata in &lt;code&gt;_config.yml&lt;/code&gt;:</source>
          <target state="translated">Jekyll이 컬렉션의 각 문서에 대해 렌더링 된 페이지를 생성하도록하려면 &lt;code&gt;_config.yml&lt;/code&gt; 의 컬렉션 메타 데이터에서 &lt;code&gt;output&lt;/code&gt; 키를 &lt;code&gt;true&lt;/code&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c98ec53237b3b221ccdc7703ba591ac8f244e25b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to deploy your site to an OpenShift gear, there&amp;rsquo;s &lt;a href=&quot;https://github.com/openshift-quickstart/jekyll-openshift&quot;&gt;a cartridge for that&lt;/a&gt;.</source>
          <target state="translated">OpenShift 기어에 사이트를 배포하려면 해당 &lt;a href=&quot;https://github.com/openshift-quickstart/jekyll-openshift&quot;&gt;카트리지가&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="998a11f086dc4bb30ed94b741a45b756ab41c2bb" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to include custom liquid tags in your site, you can do so by hooking into the tagging system. Built-in examples added by Jekyll include the &lt;code&gt;highlight&lt;/code&gt; and &lt;code&gt;include&lt;/code&gt; tags. Below is an example of a custom liquid tag that will output the time the page was rendered:</source>
          <target state="translated">사이트에 맞춤형 액체 태그를 포함 시키려면 태그 시스템에 연결하면됩니다. Jekyll이 추가 한 내장 예제에는 &lt;code&gt;highlight&lt;/code&gt; 및 &lt;code&gt;include&lt;/code&gt; 태그가 포함됩니다 . 다음은 페이지가 렌더링 된 시간을 출력하는 사용자 지정 액체 태그의 예입니다.</target>
        </trans-unit>
        <trans-unit id="017dd07e8fc43764c8236ec7941cbc62c51810e3" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to install a development version of Jekyll, the process is a bit more involved. This gives you the advantage of having the latest and greatest, but may be unstable.</source>
          <target state="translated">Jekyll의 개발 버전을 설치하려면 프로세스가 조금 더 복잡합니다. 이것은 당신에게 최신의 가장 큰 장점을 제공하지만 불안정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25ac5c2a33ff747013ef49ea1c32a4b47edaa529" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re a Jekyll theme developer (rather than a consumer of themes), you can package up your theme in RubyGems and allow users to install it through Bundler.</source>
          <target state="translated">(테마 소비자가 아닌) Jekyll 테마 개발자라면 RubyGems에서 테마를 패키징하고 사용자가 Bundler를 통해 설치하도록 허용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aebf85f03c89a29b9d5ef73ebb61bde1f568e228" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re a Jekyll theme developer (rather than just a consumer of themes), you can package up your theme in RubyGems and allow users to install it through Bundler.</source>
          <target state="translated">Jekyll 테마 개발자 인 경우 (테마 소비자가 아닌) RubyGems에서 테마를 패키지하고 사용자가 Bundler를 통해 테마를 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30853f9ea7df330ef27f58c631ba94376ecf0fa1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re feeling adventurous, you can also initialize a Git repository here. One of the great things about Jekyll is there&amp;rsquo;s no database. All content and site structure are files which a Git repository can version. Using a repository is completely optional but it&amp;rsquo;s a great habit to get into. You can learn more about using Git by reading through the &lt;a href=&quot;https://guides.github.com/introduction/git-handbook/&quot;&gt;Git Handbook&lt;/a&gt;.</source>
          <target state="translated">모험심이 있다면 여기에서 Git 저장소를 초기화 할 수도 있습니다. Jekyll의 가장 큰 장점 중 하나는 데이터베이스가 없다는 것입니다. 모든 콘텐츠 및 사이트 구조는 Git 리포지토리에서 버전을 지정할 수있는 파일입니다. 저장소 사용은 전적으로 선택 사항이지만 들어가는 것은 좋은 습관입니다. &lt;a href=&quot;https://guides.github.com/introduction/git-handbook/&quot;&gt;Git 핸드북&lt;/a&gt; 을 읽고 Git 사용에 대해 자세히 알아볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="05442461ae0760b9acad9cfe9447bcf050ac0078" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in browsing these docs on-the-go, install the &lt;code&gt;jekyll-docs&lt;/code&gt; gem and run &lt;code&gt;jekyll docs&lt;/code&gt; in your terminal.</source>
          <target state="translated">이동 중에 이러한 문서를 탐색하려면 &lt;code&gt;jekyll-docs&lt;/code&gt; gem을 설치하고 터미널에서 &lt;code&gt;jekyll docs&lt;/code&gt; 를 실행 하십시오.</target>
        </trans-unit>
        <trans-unit id="cc2998d4b75650b0973db36fe0764de9a0198df0" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in creating a custom markdown processor, you&amp;rsquo;re in luck! Create a new class in the &lt;code&gt;Jekyll::Converters::Markdown&lt;/code&gt; namespace:</source>
          <target state="translated">사용자 정의 마크 다운 프로세서를 만드는 데 관심이 있다면 운이 좋을 것입니다! &lt;code&gt;Jekyll::Converters::Markdown&lt;/code&gt; 네임 스페이스에 새 클래스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="22d9269680b724ba017e2778c42901a3d9aa4938" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re looking for support for Jekyll, there are a lot of options:</source>
          <target state="translated">Jekyll에 대한 지원을 찾고 있다면 다양한 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae542f5575c43a0353a14137a2590f1b7d433422" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re publishing on GitHub Pages you should update only your &lt;code&gt;_config.yml&lt;/code&gt; as GitHub Pages doesn&amp;rsquo;t load plugins via Bundler.</source>
          <target state="translated">GitHub 페이지에 게시하는 경우 GitHub 페이지가 Bundler를 통해 플러그인을로드하지 않으므로 &lt;code&gt;_config.yml&lt;/code&gt; 만 업데이트해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1f3bba13a5e3f222ddefb021448a6a69c6eef520" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re publishing your Jekyll site on &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;, note that GitHub Pages supports only &lt;a href=&quot;https://pages.github.com/themes/&quot;&gt;some gem-based themes&lt;/a&gt;. GitHub Pages also supports &lt;a href=&quot;https://help.github.com/articles/adding-a-jekyll-theme-to-your-github-pages-site/#adding-a-jekyll-theme-in-your-sites-_configyml-file&quot;&gt;using any theme hosted on GitHub&lt;/a&gt; using the &lt;code&gt;remote_theme&lt;/code&gt; configuration as if it were a gem-based theme.</source>
          <target state="translated">&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; 에 Jekyll 사이트를 게시 하는 경우 GitHub Pages는 &lt;a href=&quot;https://pages.github.com/themes/&quot;&gt;일부 gem 기반 테마&lt;/a&gt; 만 지원합니다 . GitHub Pages는 마치 gem 기반 테마 인 것처럼 &lt;code&gt;remote_theme&lt;/code&gt; 구성을 사용하여 &lt;a href=&quot;https://help.github.com/articles/adding-a-jekyll-theme-to-your-github-pages-site/#adding-a-jekyll-theme-in-your-sites-_configyml-file&quot;&gt;GitHub에서 호스팅되는 모든 테마 사용&lt;/a&gt; 을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="fed2ec52185b236d6b0616d0f7b48112da62f321" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re publishing your Jekyll site on &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;, note that GitHub Pages supports only some gem-based themes. See &lt;a href=&quot;https://pages.github.com/themes/&quot;&gt;Supported Themes&lt;/a&gt; in GitHub&amp;rsquo;s documentation to see which themes are supported.</source>
          <target state="translated">&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; 에서 Jekyll 사이트를 게시 하는 경우 GitHub Pages는 일부 gem 기반 테마 만 지원합니다. 참조 &lt;a href=&quot;https://pages.github.com/themes/&quot;&gt;지원되는 테마&lt;/a&gt; 지원되는 테마 볼 GitHub의 설명서에 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a243859f76e0d599054d8aa3505651f9b800539" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re running a previous version of macOS, you&amp;rsquo;ll have to install a newer version of Ruby.</source>
          <target state="translated">이전 버전의 macOS를 실행중인 경우 최신 버전의 Ruby를 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="48f80dce2fb4e338ea62c4227bb0b96d4641ecf1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re switching to Jekyll from another blogging system, Jekyll&amp;rsquo;s importers can help you with the move. To learn more about importing your site to Jekyll, visit our &lt;a href=&quot;https://import.jekyllrb.com/docs/home/&quot;&gt;&lt;code&gt;jekyll-import&lt;/code&gt; docs site&lt;/a&gt;.</source>
          <target state="translated">다른 블로그 시스템에서 Jekyll로 전환하는 경우 Jekyll의 수입 업체가 이동에 도움을 줄 수 있습니다. Jekyll으로 사이트를 가져 오는 방법에 대한 자세한 내용은 &lt;a href=&quot;https://import.jekyllrb.com/docs/home/&quot;&gt; &lt;code&gt;jekyll-import&lt;/code&gt; docs site를&lt;/a&gt; 방문하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9b8cf204b37c543bd6f902a9912dc1bc10fb847" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re the kind of person who is using Jekyll, then chances are you&amp;rsquo;ll want to enable syntax highlighting using &lt;a href=&quot;http://pygments.org/&quot;&gt;Pygments&lt;/a&gt; or &lt;a href=&quot;https://github.com/jayferd/rouge&quot;&gt;Rouge&lt;/a&gt;. You should really &lt;a href=&quot;../templates/index#code-snippet-highlighting&quot;&gt;check out how to do that&lt;/a&gt; before you go any farther.</source>
          <target state="translated">Jekyll을 사용하는 사람 &lt;a href=&quot;http://pygments.org/&quot;&gt;이라면 Pygments&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/jayferd/rouge&quot;&gt;Rouge를&lt;/a&gt; 사용하여 구문 강조를 활성화하고 싶을 것 입니다. 더 멀리 가기 전에 &lt;a href=&quot;../templates/index#code-snippet-highlighting&quot;&gt;어떻게해야하는지 확인&lt;/a&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2c45a730de0f4a66c90fb58a381c30517e30ab21" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re unfamiliar with creating Ruby gems, don&amp;rsquo;t worry. Jekyll will help you scaffold a new theme with the &lt;code&gt;new-theme&lt;/code&gt; command. Run &lt;code&gt;jekyll new-theme&lt;/code&gt; with the theme name as an argument.</source>
          <target state="translated">루비 보석을 만드는 데 익숙하지 않아도 걱정하지 마십시오. Jekyll은 &lt;code&gt;new-theme&lt;/code&gt; 명령을 사용하여 새로운 테마를 비계하는 데 도움이됩니다 . 테마 이름을 인수로 사용하여 &lt;code&gt;jekyll new-theme&lt;/code&gt; 을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="e2f1fd80e1acac73721bceb69b6432074f20f49a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re unsure of the path, add &lt;code&gt;{{ page.path }}&lt;/code&gt; to the page and it will display the path.</source>
          <target state="translated">경로가 확실하지 않으면 페이지 에 &lt;code&gt;{{ page.path }}&lt;/code&gt; 를 추가 하면 경로가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6d0e68810885667c178f7be4a18662c57e20c8df" translate="yes" xml:space="preserve">
          <source>If your Jekyll site has a lot of pages, such as with documentation websites, see the detailed examples in &lt;a href=&quot;https://jekyllrb.com/tutorials/navigation/&quot;&gt;how to build robust navigation for your site&lt;/a&gt;.</source>
          <target state="translated">Jekyll 사이트에 문서 웹 사이트와 같이 많은 페이지가있는 경우 사이트 &lt;a href=&quot;https://jekyllrb.com/tutorials/navigation/&quot;&gt;를위한 강력한 탐색 방법에&lt;/a&gt; 대한 자세한 예를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="15ad6a68d50f8303e340eccb97ce2ef611de1aca" translate="yes" xml:space="preserve">
          <source>If your generator is contained within a single file, it can be named whatever you want but it should have an &lt;code&gt;.rb&lt;/code&gt; extension. If your generator is split across multiple files, it should be packaged as a Rubygem to be published at https://rubygems.org/. In this case, the name of the gem depends on the availability of the name at that site because no two gems can have the same name.</source>
          <target state="translated">생성기가 단일 파일에 포함되어있는 경우 원하는 이름을 지정할 수 있지만 확장자 는 &lt;code&gt;.rb&lt;/code&gt; 여야 합니다. 생성기가 여러 파일로 분할 된 경우 https://rubygems.org/에 게시되도록 Rubygem으로 패키지화해야합니다. 이 경우 두 gem이 같은 이름을 가질 수 없기 때문에 gem의 이름은 해당 사이트의 이름 가용성에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="6f07552e08d7e7eb8c68907cfa9ca67e5186c921" translate="yes" xml:space="preserve">
          <source>In 2.x, your iterations over &lt;code&gt;site.collections&lt;/code&gt; yielded an array with the collection label and the collection object as the first and second items, respectively. In 3.x, this complication has been removed and iterations now yield simply the collection object. A simple conversion must be made in your templates:</source>
          <target state="translated">2.x에서 &lt;code&gt;site.collections&lt;/code&gt; 를 반복 하면 컬렉션 레이블과 컬렉션 개체가 각각 첫 번째 및 두 번째 항목으로 배열이 생성됩니다. 3.x에서는이 합병증이 제거되었으며 이제 반복을 통해 단순히 컬렉션 개체가 생성됩니다. 템플릿에서 간단한 변환을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="45281f936e80f86f5e93c43c758e8a1f19af601f" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_data/members.yml&lt;/code&gt;:</source>
          <target state="translated">에서 &lt;code&gt;_data/members.yml&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cde842ba78bff9c9b8124ebd1559825b3bc94132" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_data/orgs/doeorg.yml&lt;/code&gt;:</source>
          <target state="translated">에서 &lt;code&gt;_data/orgs/doeorg.yml&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cd43046023d9729d0551bd15c18ada04dde39f32" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_data/orgs/jekyll.yml&lt;/code&gt;:</source>
          <target state="translated">에서 &lt;code&gt;_data/orgs/jekyll.yml&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8048d2cbef7239f500f42954c2da2f843c49740b" translate="yes" xml:space="preserve">
          <source>In Jekyll 2, any URL constructed from the &lt;code&gt;permalink:&lt;/code&gt; field had a trailing slash (&lt;code&gt;/&lt;/code&gt;) added to it automatically. Jekyll 3 no longer adds a trailing slash automatically to &lt;code&gt;permalink:&lt;/code&gt; URLs. This can potentially result in old links to pages returning a 404 error. For example, suppose a page previously contained the YAML &lt;code&gt;permalink: /:year-:month-:day-:title&lt;/code&gt; that resulted in the URL &lt;code&gt;example.com/2016-02-01-test/&lt;/code&gt; (notice the trailing slash), Jekyll internally generates a folder named &lt;code&gt;2016-02-01-test&lt;/code&gt;. In Jekyll 3, the same &lt;code&gt;permalink:&lt;/code&gt; generate the file &lt;code&gt;2016-02-01-test.html&lt;/code&gt; and the URL for the same page will be &lt;code&gt;example.com/2016-02-01-test&lt;/code&gt;, and consequently any links to the old URL will result in a 404 error. In order to maintain the same URLs and avoid this problem, a trailing slash should be added to the &lt;code&gt;permalink:&lt;/code&gt; field, for example &lt;code&gt;permalink: /:year-:month-:day-:title/&lt;/code&gt;.</source>
          <target state="translated">Jekyll 2에서 &lt;code&gt;permalink:&lt;/code&gt; 필드로 구성된 URL 에는 후행 슬래시 ( &lt;code&gt;/&lt;/code&gt; )가 자동으로 추가되었습니다. 지킬 3은 더 이상 자동 끝에 슬래시를 추가하지 &lt;code&gt;permalink:&lt;/code&gt; URL을. 이로 인해 페이지에 대한 오래된 링크가 404 오류를 반환 할 수 있습니다. 예를 들어, 페이지에 이전에 YAML &lt;code&gt;permalink: /:year-:month-:day-:title&lt;/code&gt; 가 포함되어 URL &lt;code&gt;example.com/2016-02-01-test/&lt;/code&gt; (후행 슬래시를 통지 함) 인 Jekyll이 내부에 있다고 가정합니다 . &lt;code&gt;2016-02-01-test&lt;/code&gt; 라는 폴더를 생성합니다 . Jekyll 3에서 동일한 &lt;code&gt;permalink:&lt;/code&gt; 파일 &lt;code&gt;2016-02-01-test.html&lt;/code&gt; 을 생성 하면 동일한 페이지의 URL은 다음과 같습니다. &lt;code&gt;example.com/2016-02-01-test&lt;/code&gt; 및 이전 URL에 대한 링크로 인해 404 오류가 발생합니다. 동일한 URL을 유지하고이 문제를 피하려면 &lt;code&gt;permalink:&lt;/code&gt; 필드에 후행 슬래시를 추가해야합니다 ( 예 &lt;code&gt;permalink: /:year-:month-:day-:title/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3873159b8f4d7abf52a0f7525978c8fb359bcf37" translate="yes" xml:space="preserve">
          <source>In Jekyll 3 and above, relative permalinks have been deprecated. If you created your site using Jekyll 2 and below, you may receive the following error when trying to &lt;strong&gt;serve&lt;/strong&gt; or &lt;strong&gt;build&lt;/strong&gt;:</source>
          <target state="translated">Jekyll 3 이상에서는 상대 퍼머 링크가 더 이상 사용되지 않습니다. Jekyll 2 이하를 사용하여 사이트를 만든 경우 &lt;strong&gt;서비스&lt;/strong&gt; 를 &lt;strong&gt;제공&lt;/strong&gt; 하거나 &lt;strong&gt;빌드&lt;/strong&gt; 하려고 할 때 다음 오류가 발생할 &lt;strong&gt;수 있습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="9da76fc9ddd240122475ed3606ddf4d269bd399e" translate="yes" xml:space="preserve">
          <source>In Jekyll v1.0, we introduced absolute permalinks for pages in subdirectories. Starting with v2.0, absolute permalinks are opt-out, meaning Jekyll will default to using absolute permalinks instead of relative permalinks. Relative permalink backwards-compatibility was removed in v3.0.</source>
          <target state="translated">Jekyll v1.0에서는 하위 디렉토리의 페이지에 대한 절대 영구 링크를 도입했습니다. v2.0부터 절대 퍼머 링크는 옵트 아웃됩니다. 즉, Jekyll은 기본적으로 상대 퍼머 링크 대신 절대 퍼머 링크를 사용합니다. 상대적인 퍼머 링크 하위 호환성은 v3.0에서 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="137a2c8a22c797957aaba3d668b93f39e0a4e360" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;../posts/index&quot;&gt;writing posts&lt;/a&gt;, you might also want to add static pages (content that isn&amp;rsquo;t date-based) to your Jekyll site. By taking advantage of the way Jekyll copies files and directories, this is easy to do.</source>
          <target state="translated">&lt;a href=&quot;../posts/index&quot;&gt;게시물 작성&lt;/a&gt; 외에도 Jekyll 사이트에 정적 페이지 (날짜 기반이 아닌 콘텐츠)를 추가 할 수도 있습니다. Jekyll이 파일과 디렉토리를 복사하는 방식을 이용하면 쉽게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5977b91adc8950e114e57ba6fd1cc290bbd8445" translate="yes" xml:space="preserve">
          <source>In addition to any YAML Front Matter provided in the document&amp;rsquo;s corresponding file, each document has the following attributes:</source>
          <target state="translated">문서의 해당 파일에 제공된 YAML Front Matter 외에도 각 문서에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddd733ae4dd13a946b75f3e6f10913d5e7486d8c" translate="yes" xml:space="preserve">
          <source>In addition to any collections you create yourself, the &lt;code&gt;posts&lt;/code&gt; collection is hard-coded into Jekyll. It exists whether you have a &lt;code&gt;_posts&lt;/code&gt; directory or not. This is something to note when iterating through &lt;code&gt;site.collections&lt;/code&gt; as you may need to filter it out.</source>
          <target state="translated">직접 만든 컬렉션 외에도 &lt;code&gt;posts&lt;/code&gt; 컬렉션은 Jekyll에 하드 코딩됩니다. &lt;code&gt;_posts&lt;/code&gt; 디렉토리 가 있는지 여부가 존재합니다 . 이것은 필터링해야 할 수도 있으므로 &lt;code&gt;site.collections&lt;/code&gt; 를 반복 할 때 유의해야 할 사항 입니다.</target>
        </trans-unit>
        <trans-unit id="47a65d70b5bdab95550918bb769be600907b2d0e" translate="yes" xml:space="preserve">
          <source>In addition to any front matter provided in the document&amp;rsquo;s corresponding file, each document has the following attributes:</source>
          <target state="translated">문서의 해당 파일에 제공된 서문 외에도 각 문서에는 다음 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="de4614543299930d373fbc0c3668decb1e5afec5" translate="yes" xml:space="preserve">
          <source>In addition to renderable and convertible content, we also have &lt;strong&gt;static files&lt;/strong&gt;.</source>
          <target state="translated">렌더링 및 변환 가능한 컨텐츠 외에도 &lt;strong&gt;정적 파일이 있습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="435d29a8ad07e278761987f5b8da37b578e41b58" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;a href=&quot;../variables/index&quot;&gt;built-in variables&lt;/a&gt; available from Jekyll, you can specify your own custom data that can be accessed via the &lt;a href=&quot;https://github.com/Shopify/liquid/wiki/Liquid-for-Designers&quot;&gt;Liquid templating system&lt;/a&gt;.</source>
          <target state="translated">Jekyll에서 사용할 수 있는 &lt;a href=&quot;../variables/index&quot;&gt;기본&lt;/a&gt; 제공 변수 외에도 &lt;a href=&quot;https://github.com/Shopify/liquid/wiki/Liquid-for-Designers&quot;&gt;Liquid 템플릿 시스템을&lt;/a&gt; 통해 액세스 할 수있는 사용자 지정 데이터를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="262a4460ff960783349ae1c3141344919035643d" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;a href=&quot;../variables/index&quot;&gt;built-in variables&lt;/a&gt; available from Jekyll, you can specify your own custom data that can be accessed via the &lt;a href=&quot;https://wiki.github.com/shopify/liquid/liquid-for-designers&quot;&gt;Liquid templating system&lt;/a&gt;.</source>
          <target state="translated">Jekyll에서 제공 하는 &lt;a href=&quot;../variables/index&quot;&gt;내장 변수&lt;/a&gt; 외에도 &lt;a href=&quot;https://wiki.github.com/shopify/liquid/liquid-for-designers&quot;&gt;Liquid templating 시스템을&lt;/a&gt; 통해 액세스 할 수있는 사용자 정의 데이터를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5fa3779ef0ef87de347d1b02e40eb5d39f49bc9b" translate="yes" xml:space="preserve">
          <source>In addition to the options below, the &lt;code&gt;serve&lt;/code&gt; sub-command can accept any of the options for the &lt;code&gt;build&lt;/code&gt; sub-command, which are then applied to the site build which occurs right before your site is served.</source>
          <target state="translated">&lt;code&gt;serve&lt;/code&gt; 하위 명령은 아래 옵션 외에도 &lt;code&gt;build&lt;/code&gt; 하위 명령 에 대한 옵션을 사용할 수 있으며,이 옵션은 사이트가 제공되기 직전에 발생하는 사이트 빌드에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="ad77db62fe2f7780d8731931072d4d92705aa9c7" translate="yes" xml:space="preserve">
          <source>In general, plugins you make will fall broadly into one of five categories:</source>
          <target state="translated">일반적으로 플러그인은 5 가지 범주 중 하나에 속합니다.</target>
        </trans-unit>
        <trans-unit id="92cb54b26fce6f64d865299e23f532b7347aa7e1" translate="yes" xml:space="preserve">
          <source>In layout files, the rendered content of the Post or Page being wrapped. Not defined in Post or Page files.</source>
          <target state="translated">레이아웃 파일에서 포스트 또는 페이지의 렌더링 된 내용이 줄 바꿈됩니다. 게시물 또는 페이지 파일에 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="10a02d40410ecbb6dd7a79cb832a7b1bd9921423" translate="yes" xml:space="preserve">
          <source>In order for the highlighting to show up, you&amp;rsquo;ll need to include a highlighting stylesheet. For Pygments or Rouge you can use a stylesheet for Pygments, you can find an example gallery &lt;a href=&quot;https://jwarby.github.io/jekyll-pygments-themes/languages/ruby.html&quot;&gt;here&lt;/a&gt; or from &lt;a href=&quot;https://github.com/jwarby/jekyll-pygments-themes&quot;&gt;its repository&lt;/a&gt;.</source>
          <target state="translated">강조 표시를 표시하려면 강조 표시 스타일 시트를 포함해야합니다. Pygments 또는 Rouge의 경우 Pygments에 대한 스타일 시트를 사용할 수 있으며 &lt;a href=&quot;https://jwarby.github.io/jekyll-pygments-themes/languages/ruby.html&quot;&gt;여기&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/jwarby/jekyll-pygments-themes&quot;&gt;저장소&lt;/a&gt; 에서 예제 갤러리를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a11123a4885bc93a6c358a7052dbadb25f2ae33" translate="yes" xml:space="preserve">
          <source>In order for the highlighting to show up, you&amp;rsquo;ll need to include a highlighting stylesheet. For an example stylesheet you can look at &lt;a href=&quot;https://github.com/mojombo/tpw/tree/master/css/syntax.css&quot;&gt;syntax.css&lt;/a&gt;. These are the same styles as used by GitHub and you are free to use them for your own site. If you use &lt;code&gt;linenos&lt;/code&gt;, you might want to include an additional CSS class definition for the &lt;code&gt;.lineno&lt;/code&gt; class in &lt;code&gt;syntax.css&lt;/code&gt; to distinguish the line numbers from the highlighted code.</source>
          <target state="translated">강조 표시를 표시하려면 강조 표시 스타일 시트를 포함해야합니다. 예제 스타일 시트의 경우 &lt;a href=&quot;https://github.com/mojombo/tpw/tree/master/css/syntax.css&quot;&gt;syntax.css를&lt;/a&gt; 볼 수 있습니다 . 이들은 GitHub에서 사용하는 것과 동일한 스타일이며 자신의 사이트에서 자유롭게 사용할 수 있습니다. &lt;code&gt;linenos&lt;/code&gt; 를 사용하는 경우 강조 표시된 코드와 줄 번호를 구분하기 위해 &lt;code&gt;syntax.css&lt;/code&gt; 에 &lt;code&gt;.lineno&lt;/code&gt; 클래스에 대한 추가 CSS 클래스 정의를 포함 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="92921e0c63f70f1ce180d6a3e7cb4c97a0eb950e" translate="yes" xml:space="preserve">
          <source>In order to install a pre-release, make sure you have all the requirements installed properly and run:</source>
          <target state="translated">시험판을 설치하려면 모든 요구 사항이 올바르게 설치되어 있는지 확인하고 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="0d246ea4d51517f082eb63012fe12dc6c7d54061" translate="yes" xml:space="preserve">
          <source>In order to see the changes from &lt;code&gt;downcase&lt;/code&gt; Liquid filter, we will need to add front matter.</source>
          <target state="translated">다운 &lt;code&gt;downcase&lt;/code&gt; Liquid 필터 의 변경 사항을 확인하려면 머리말 을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="f0a99e23efade4197b1e52469682f0f893a21ad9" translate="yes" xml:space="preserve">
          <source>In our example, &lt;code&gt;UpcaseConverter#matches&lt;/code&gt; checks if our filename extension is &lt;code&gt;.upcase&lt;/code&gt;, and will render using the converter if it is. It will call &lt;code&gt;UpcaseConverter#convert&lt;/code&gt; to process the content. In our simple converter we&amp;rsquo;re simply uppercasing the entire content string. Finally, when it saves the page, it will do so with a &lt;code&gt;.html&lt;/code&gt; extension.</source>
          <target state="translated">이 예에서 &lt;code&gt;UpcaseConverter#matches&lt;/code&gt; 는 파일 이름 확장자가 &lt;code&gt;.upcase&lt;/code&gt; 인지 확인 하고 변환기 인 경우 변환기를 사용하여 렌더링합니다. 내용을 처리하기 위해 &lt;code&gt;UpcaseConverter#convert&lt;/code&gt; 를 호출 합니다. 간단한 변환기에서는 단순히 전체 내용 문자열을 대문자로 표시합니다. 마지막으로 페이지를 저장하면 &lt;code&gt;.html&lt;/code&gt; 확장자로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="589e3464f6983f476e200524c86fa956e44336f7" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;_includes&lt;/code&gt; folder, assume you have a file called &lt;code&gt;spotlight.html&lt;/code&gt; with this code:</source>
          <target state="translated">에서 &lt;code&gt;_includes&lt;/code&gt; 의 폴더, 당신라는 파일이 있다고 가정 &lt;code&gt;spotlight.html&lt;/code&gt; 이 코드를 :</target>
        </trans-unit>
        <trans-unit id="023c2b6b85b5f06f702673e8551f26b707f19528" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;build&lt;/code&gt; (or &lt;code&gt;serve&lt;/code&gt;) arguments, you can specify a Jekyll environment and value. The build will then apply this value in any conditional statements in your content.</source>
          <target state="translated">에서 &lt;code&gt;build&lt;/code&gt; (또는 &lt;code&gt;serve&lt;/code&gt; ) 인수, 당신은 지킬 환경과 값을 지정할 수 있습니다. 그러면 빌드는 콘텐츠의 모든 조건문에이 값을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="35cf41f6a0818d8a0497f3813e18dc14ef52b043" translate="yes" xml:space="preserve">
          <source>In the above example, the tag block and the tag are both registered with the name &lt;code&gt;render_time&lt;/code&gt;, but to register a tag and a tag block using the same name in the same project is not recommended as this may lead to conflicts.</source>
          <target state="translated">위의 예에서 태그 블록과 태그는 모두 &lt;code&gt;render_time&lt;/code&gt; 이라는 이름으로 등록되어 있지만 같은 프로젝트에서 같은 이름을 사용하는 태그와 태그 블록을 등록하는 것은 충돌이 발생할 수 있으므로 권장하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="82b5ec249103fb1fdb876d5bf56bb5b373e62ac9" translate="yes" xml:space="preserve">
          <source>In the build (or serve) arguments, you can specify a Jekyll environment and value. The build will then apply this value in any conditional statements in your content.</source>
          <target state="translated">빌드 (또는 서브) 인수에서 Jekyll 환경과 값을 지정할 수 있습니다. 그러면 빌드는이 값을 컨텐츠의 모든 조건문에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="ca17f2fe3994021e071c92453baa97e708f63fbf" translate="yes" xml:space="preserve">
          <source>In the case of Minima, you see only the following files in your Jekyll site directory:</source>
          <target state="translated">Minima의 경우 Jekyll 사이트 디렉토리에 다음 파일 만 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="73aa65e9152847600349b0332ad25629dcd365c5" translate="yes" xml:space="preserve">
          <source>In the example above, we can place the following tag anywhere in one of our pages:</source>
          <target state="translated">위의 예에서 다음 태그를 페이지의 어느 위치 에나 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbcc71f1f3f382fa9da32fabfcae01c9258fd9ed" translate="yes" xml:space="preserve">
          <source>In the future the installation process of the github-pages should be as simple as the setup of the blog. But as long as the new version of the Nokogiri (&lt;a href=&quot;https://github.com/sparklemotion/nokogiri/releases&quot;&gt;v1.6.8&lt;/a&gt;) is not stable and referenced, it is work to get it up and running on Windows.</source>
          <target state="translated">앞으로 github 페이지의 설치 과정은 블로그 설정만큼 간단해야합니다. 그러나 새로운 버전의 Nokogiri ( &lt;a href=&quot;https://github.com/sparklemotion/nokogiri/releases&quot;&gt;v1.6.8&lt;/a&gt; )가 안정적이지 않고 참조되지 않는 한 Windows에서이를 실행하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="6f3f1e4da3442eb9f6d8e473c90f421c25f9d3d4" translate="yes" xml:space="preserve">
          <source>In the next and final step of this tutorial, we&amp;rsquo;ll add polish to the site and get it ready for a production deployment.</source>
          <target state="translated">이 자습서의 다음 및 마지막 단계에서는 사이트에 세련미를 추가하고 프로덕션 배포를 준비합니다.</target>
        </trans-unit>
        <trans-unit id="b8d4dbdc143106549a6378e4e1fcc3c6ac082b5d" translate="yes" xml:space="preserve">
          <source>In this case &lt;code&gt;collections&lt;/code&gt; is defined as a sequence (i.e array) with no additional metadata defined for each collection. You can optionally specify metadata for your collection by defining &lt;code&gt;collections&lt;/code&gt; as a mapping (i.e hashmap) instead of sequence, and then defining additional fields in it:</source>
          <target state="translated">이 경우 &lt;code&gt;collections&lt;/code&gt; 은 각 컬렉션에 대해 정의 된 추가 메타 데이터가없는 시퀀스 (예 : 배열)로 정의됩니다. &lt;code&gt;collections&lt;/code&gt; 을 시퀀스 대신 매핑 (예 : 해시 맵)으로 정의한 다음 추가 필드를 정의 하여 컬렉션에 대한 메타 데이터를 선택적으로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f5f641e52e69872bdaff7c469dcb92b54266d954" translate="yes" xml:space="preserve">
          <source>In this case, the listing pages will be accessible at &lt;code&gt;{baseurl}/category/blog.html&lt;/code&gt;</source>
          <target state="translated">이 경우 목록 페이지는 &lt;code&gt;{baseurl}/category/blog.html&lt;/code&gt; 에서 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8c7970f2ab1be04e8c7c366c84315f5db51e4c7" translate="yes" xml:space="preserve">
          <source>In this example, our generator will create a series of files under the &lt;code&gt;categories&lt;/code&gt; directory for each category, listing the posts in each category using the &lt;code&gt;category_index.html&lt;/code&gt; layout.</source>
          <target state="translated">이 예에서 생성기는 &lt;code&gt;category_index.html&lt;/code&gt; 레이아웃을 사용하여 각 카테고리의 게시물을 나열하여 각 카테고리 의 &lt;code&gt;categories&lt;/code&gt; 디렉토리 아래에 일련의 파일을 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="23e30b1c526f4005a7187f21ba17da5891b7c9b9" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;layout&lt;/code&gt; is set to &lt;code&gt;default&lt;/code&gt; inside the &lt;a href=&quot;../../collections/index&quot;&gt;collection&lt;/a&gt; with the name &lt;code&gt;my_collection&lt;/code&gt;.</source>
          <target state="translated">이 예에서 &lt;code&gt;layout&lt;/code&gt; 은 이름이 &lt;code&gt;my_collection&lt;/code&gt; 인&lt;a href=&quot;../../collections/index&quot;&gt;컬렉션&lt;/a&gt; 내에서 &lt;code&gt;default&lt;/code&gt; 로 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="2cf773ac04f813b0e294961a92d744e2c3408b9b" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;layout&lt;/code&gt; is set to &lt;code&gt;default&lt;/code&gt; inside the &lt;a href=&quot;../collections/index&quot;&gt;collection&lt;/a&gt; with the name &lt;code&gt;my_collection&lt;/code&gt;.</source>
          <target state="translated">이 예제에서 &lt;code&gt;layout&lt;/code&gt; 은 이름이 &lt;code&gt;my_collection&lt;/code&gt; 인&lt;a href=&quot;../collections/index&quot;&gt;컬렉션&lt;/a&gt; 내에서 &lt;code&gt;default&lt;/code&gt; 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="8a1332aa08f1a9433eb0f51a71818cafd5c254ef" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;link&lt;/code&gt; tag would render a link to the file &lt;code&gt;footer_company_a.html&lt;/code&gt;.</source>
          <target state="translated">이 예에서 &lt;code&gt;link&lt;/code&gt; 태그는 &lt;code&gt;footer_company_a.html&lt;/code&gt; 파일에 대한 링크를 렌더링합니다 .</target>
        </trans-unit>
        <trans-unit id="eb94263d3a4b7b2763922a8c12799d8a35026a62" translate="yes" xml:space="preserve">
          <source>In this example, the include would insert the file &lt;code&gt;footer_company_a.html&lt;/code&gt; from the &lt;code&gt;_includes/footer_company_a.html&lt;/code&gt; directory.</source>
          <target state="translated">이 예에서, 포함 파일에 삽입 할 &lt;code&gt;footer_company_a.html&lt;/code&gt; 로부터 &lt;code&gt;_includes/footer_company_a.html&lt;/code&gt; 의 디렉토리.</target>
        </trans-unit>
        <trans-unit id="19c6ba6ccd61f7698e3b2bbaa305c0a978c6c9a8" translate="yes" xml:space="preserve">
          <source>In this final step we&amp;rsquo;ll get the site ready for production.</source>
          <target state="translated">이 마지막 단계에서는 프로덕션을위한 사이트를 준비합니다.</target>
        </trans-unit>
        <trans-unit id="9b31a618d0810733e64d193638c5aab33882dde7" translate="yes" xml:space="preserve">
          <source>In this instance, &lt;code&gt;site.data.profiles&lt;/code&gt; gets inserted in place of &lt;code&gt;include.participants&lt;/code&gt; in the include file, and the Liquid logic processes. The result will be &lt;code&gt;Jane Doe&lt;/code&gt;.</source>
          <target state="translated">이 경우 &lt;code&gt;include.participants&lt;/code&gt; 대신 &lt;code&gt;site.data.profiles&lt;/code&gt; 가 include 파일에 삽입되고 Liquid 논리 프로세스가 수행됩니다. 결과는 &lt;code&gt;Jane Doe&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="63056e6ee26a5a0b1d5fe24b0d81f5d2cc4aaf7e" translate="yes" xml:space="preserve">
          <source>In this step you&amp;rsquo;ll store the contents of the navigation in a data file and then iterate over it in the navigation include.</source>
          <target state="translated">이 단계에서는 탐색 내용을 데이터 파일에 저장 한 다음 탐색 포함에서 반복합니다.</target>
        </trans-unit>
        <trans-unit id="5a7ef22adc478c9a3b0bb4fef7119f7a4c2ee61f" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;_config.yml&lt;/code&gt; file, add a new array with the key &lt;code&gt;plugins&lt;/code&gt; (or &lt;code&gt;gems&lt;/code&gt; for Jekyll &amp;lt; &lt;code&gt;3.5.0&lt;/code&gt;) and the values of the gem names of the plugins you&amp;rsquo;d like to use. An example:</source>
          <target state="translated">당신에 &lt;code&gt;_config.yml&lt;/code&gt; 의 파일, 키에 새로운 배열을 추가 &lt;code&gt;plugins&lt;/code&gt; (또는 &lt;code&gt;gems&lt;/code&gt; 지킬 &amp;lt;대한 &lt;code&gt;3.5.0&lt;/code&gt; 사용하려는) 및 플러그인의 보석 이름의 값. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="bf9dc7a2954e8514613c982dd81fe474933609f8" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;_config.yml&lt;/code&gt; file, add the following values to the &lt;code&gt;defaults&lt;/code&gt; property:</source>
          <target state="translated">당신에 &lt;code&gt;_config.yml&lt;/code&gt; 파일의에 다음 값을 추가 &lt;code&gt;defaults&lt;/code&gt; 속성을 :</target>
        </trans-unit>
        <trans-unit id="bdf1d4e7b2a9d82aac6f15504c1b8e025275caf8" translate="yes" xml:space="preserve">
          <source>In your site source root, make a &lt;code&gt;_plugins&lt;/code&gt; directory. Place your plugins here. Any file ending in &lt;code&gt;*.rb&lt;/code&gt; inside this directory will be loaded before Jekyll generates your site.</source>
          <target state="translated">사이트 소스 루트에서 &lt;code&gt;_plugins&lt;/code&gt; 디렉토리를 작성하십시오. 플러그인을 여기에 배치하십시오. 이 디렉토리 에서 &lt;code&gt;*.rb&lt;/code&gt; 로 끝나는 모든 파일 은 Jekyll이 사이트를 생성하기 전에로드됩니다.</target>
        </trans-unit>
        <trans-unit id="0a19851e7bd98d3da24e5124d3f2ce9e766bbcd2" translate="yes" xml:space="preserve">
          <source>Include tag</source>
          <target state="translated">태그 포함</target>
        </trans-unit>
        <trans-unit id="b0428b33222836fce1a4254f9b076221f0220f42" translate="yes" xml:space="preserve">
          <source>Include usage</source>
          <target state="translated">사용법 포함</target>
        </trans-unit>
        <trans-unit id="db54974f7f0ad531e35648ba85b9388029b4d7ef" translate="yes" xml:space="preserve">
          <source>Includes</source>
          <target state="translated">Includes</target>
        </trans-unit>
        <trans-unit id="525d443047f688fa21fd3dd9c8ff2eedab7dad54" translate="yes" xml:space="preserve">
          <source>Including an image asset in a post:</source>
          <target state="translated">게시물에 이미지 자산 포함</target>
        </trans-unit>
        <trans-unit id="1f7a1fcdd2514ccdb830db698078bc93bc2c326b" translate="yes" xml:space="preserve">
          <source>Including files relative to another file</source>
          <target state="translated">다른 파일과 관련된 파일 포함</target>
        </trans-unit>
        <trans-unit id="9a05788a2e9ad3ef56f62e0f130e8cd0346e51c4" translate="yes" xml:space="preserve">
          <source>Including images and resources</source>
          <target state="translated">이미지 및 리소스 포함</target>
        </trans-unit>
        <trans-unit id="b91689a4ea776c083cae7da24e7822db50feb47d" translate="yes" xml:space="preserve">
          <source>Incremental Regeneration</source>
          <target state="translated">증분 재생</target>
        </trans-unit>
        <trans-unit id="f81c2e0ac93fe966e8a36a74b91ba62aa5863009" translate="yes" xml:space="preserve">
          <source>Incremental regeneration can be enabled via the &lt;code&gt;--incremental&lt;/code&gt; flag (&lt;code&gt;-I&lt;/code&gt; for short) from the command-line or by setting &lt;code&gt;incremental: true&lt;/code&gt; in your configuration file.</source>
          <target state="translated">명령 줄에서 &lt;code&gt;--incremental&lt;/code&gt; 플래그 ( 짧은 경우 &lt;code&gt;-I&lt;/code&gt; )를 사용하거나 구성 파일에서 &lt;code&gt;incremental: true&lt;/code&gt; 를 설정 하여 증분 재생성을 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6006efa32ed1ccb24da40c6fab9a1c8038d7a743" translate="yes" xml:space="preserve">
          <source>Incremental regeneration helps shorten build times by only generating documents and pages that were updated since the previous build. It does this by keeping track of both file modification times and inter-document dependencies in the &lt;code&gt;.jekyll-metadata&lt;/code&gt; file.</source>
          <target state="translated">증분 재생성은 이전 빌드 이후 업데이트 된 문서와 페이지 만 생성하여 빌드 시간을 단축시킵니다. &lt;code&gt;.jekyll-metadata&lt;/code&gt; 파일의 파일 수정 시간과 문서 간 종속성을 모두 추적하여 이를 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="1bd191c875e05fc6998e389343b41b60f6eec5c0" translate="yes" xml:space="preserve">
          <source>Incremental regeneration is still an experimental feature</source>
          <target state="translated">증분 재생은 여전히 ​​실험적인 기능입니다</target>
        </trans-unit>
        <trans-unit id="fdaddb9ce367c2ca746a97cc24d2e8817a51f27d" translate="yes" xml:space="preserve">
          <source>Inheritance</source>
          <target state="translated">Inheritance</target>
        </trans-unit>
        <trans-unit id="7e46c7c411bc9146c968ebec74f6f162b28226fb" translate="yes" xml:space="preserve">
          <source>Inlining the styles used in &lt;code&gt;_includes/navigation.html&lt;/code&gt;(adding or configuring within the same file) is not a best practice. Instead, let&amp;rsquo;s style the current page by defining our first class in a new css file instead.</source>
          <target state="translated">Inlining the styles used in &lt;code&gt;_includes/navigation.html&lt;/code&gt; (adding or configuring within the same file) is not a best practice. Instead, let&amp;rsquo;s style the current page by defining our first class in a new css file instead.</target>
        </trans-unit>
        <trans-unit id="2f3930f1815574bf50a6aaad23301e80251a41a5" translate="yes" xml:space="preserve">
          <source>Install Bundler using &lt;code&gt;gem install bundler&lt;/code&gt;. You only need to install it once, not every time you create a new Jekyll project.</source>
          <target state="translated">Install Bundler using &lt;code&gt;gem install bundler&lt;/code&gt; . You only need to install it once, not every time you create a new Jekyll project.</target>
        </trans-unit>
        <trans-unit id="0b928fe3ed14e12e0563aa197c077a70503326b4" translate="yes" xml:space="preserve">
          <source>Install Command Line Tools</source>
          <target state="translated">Install Command Line Tools</target>
        </trans-unit>
        <trans-unit id="626209e441fa77a6250d6ff717fa171d3e1e22a9" translate="yes" xml:space="preserve">
          <source>Install Jekyll</source>
          <target state="translated">Install Jekyll</target>
        </trans-unit>
        <trans-unit id="2754588b37fe5f3d6e0bcb568f9e52a57bd3ad5a" translate="yes" xml:space="preserve">
          <source>Install Jekyll and Bundler via a command prompt window: &lt;code&gt;gem install jekyll bundler&lt;/code&gt;</source>
          <target state="translated">명령 프롬프트 창을 통해 Jekyll 및 Bundler &lt;code&gt;gem install jekyll bundler&lt;/code&gt; : gem install jekyll bundler</target>
        </trans-unit>
        <trans-unit id="8e4da4ca2d699db57664814f9bdebf2536741d08" translate="yes" xml:space="preserve">
          <source>Install Jekyll:</source>
          <target state="translated">Install Jekyll:</target>
        </trans-unit>
        <trans-unit id="deef52c209d94ab1ae7e1c1d8e71259c5cf9cff0" translate="yes" xml:space="preserve">
          <source>Install Ruby</source>
          <target state="translated">루비 설치</target>
        </trans-unit>
        <trans-unit id="a7599704444a72a5825e2212231a365f0e3752da" translate="yes" xml:space="preserve">
          <source>Install Ruby and Ruby development kit</source>
          <target state="translated">Ruby 및 Ruby 개발 키트 설치</target>
        </trans-unit>
        <trans-unit id="7a61f957c592547a8d464d892b45beff7809598b" translate="yes" xml:space="preserve">
          <source>Install Ruby and other &lt;a href=&quot;../index#requirements&quot;&gt;prerequisites&lt;/a&gt;:</source>
          <target state="translated">Install Ruby and other &lt;a href=&quot;../index#requirements&quot;&gt;prerequisites&lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="2b487a9122ff8e426803cc72375725e97f9e6a44" translate="yes" xml:space="preserve">
          <source>Install Ruby via Chocolatey: &lt;code&gt;choco install ruby -y&lt;/code&gt;</source>
          <target state="translated">Chocolatey를 통해 Ruby 설치 : &lt;code&gt;choco install ruby -y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2cdce4c177bc9e007f528a3235e08a88a41c6662" translate="yes" xml:space="preserve">
          <source>Install a package manager for Windows called &lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey&lt;/a&gt; 라는 Windows 용 패키지 관리자 설치</target>
        </trans-unit>
        <trans-unit id="90158753795f90b73c7c95bd6fe6ca962b18b017" translate="yes" xml:space="preserve">
          <source>Install all &lt;a href=&quot;installation/index&quot;&gt;prerequisites&lt;/a&gt;.</source>
          <target state="translated">Install all &lt;a href=&quot;installation/index&quot;&gt;prerequisites&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="803ad44a9a99a3110e2564249e4d54c10559a3c0" translate="yes" xml:space="preserve">
          <source>Install dependencies</source>
          <target state="translated">Install dependencies</target>
        </trans-unit>
        <trans-unit id="22c8d123bf73db1aacc59d30555b734cd07b4e2a" translate="yes" xml:space="preserve">
          <source>Install github-pages</source>
          <target state="translated">github-pages 설치</target>
        </trans-unit>
        <trans-unit id="a4c4c8cbad45b21666d3cbf92bb79984cab89804" translate="yes" xml:space="preserve">
          <source>Install prerequisites</source>
          <target state="translated">Install prerequisites</target>
        </trans-unit>
        <trans-unit id="abb88c8dd2461e34977887fddc50a42e89837700" translate="yes" xml:space="preserve">
          <source>Install the &lt;code&gt;jekyll-coffeescript&lt;/code&gt; gem</source>
          <target state="translated">&lt;code&gt;jekyll-coffeescript&lt;/code&gt; gem 설치</target>
        </trans-unit>
        <trans-unit id="d6718f667e0e357a2a865da83dab46a8145917a9" translate="yes" xml:space="preserve">
          <source>Install the Kickster gem and you are good to go. More documentation can here found &lt;a href=&quot;https://github.com/nielsenramon/kickster#kickster&quot;&gt;here&lt;/a&gt;. If you do not want to use the gem or start a new project you can just copy paste the deployment scripts for &lt;a href=&quot;https://github.com/nielsenramon/kickster/tree/master/snippets/travis&quot;&gt;Travis CI&lt;/a&gt; or &lt;a href=&quot;https://github.com/nielsenramon/kickster#automated-deployment-with-circle-ci&quot;&gt;Circle CI&lt;/a&gt;.</source>
          <target state="translated">Install the Kickster gem and you are good to go. More documentation can here found &lt;a href=&quot;https://github.com/nielsenramon/kickster#kickster&quot;&gt;here&lt;/a&gt;. If you do not want to use the gem or start a new project you can just copy paste the deployment scripts for &lt;a href=&quot;https://github.com/nielsenramon/kickster/tree/master/snippets/travis&quot;&gt;Travis CI&lt;/a&gt; or &lt;a href=&quot;https://github.com/nielsenramon/kickster#automated-deployment-with-circle-ci&quot;&gt;Circle CI&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0a08d347a940a1b0810010f98fe813f778b88d90" translate="yes" xml:space="preserve">
          <source>Install the bundler and jekyll gems:</source>
          <target state="translated">Install the bundler and jekyll gems:</target>
        </trans-unit>
        <trans-unit id="0f78fc1a483118f983a249b1c27929f25f72f4e2" translate="yes" xml:space="preserve">
          <source>Install the jekyll and bundler &lt;a href=&quot;ruby-101/index#gems&quot;&gt;gems&lt;/a&gt;.</source>
          <target state="translated">Install the jekyll and bundler &lt;a href=&quot;ruby-101/index#gems&quot;&gt;gems&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d885f2ed59243070a4543bf4c623700512e83b3a" translate="yes" xml:space="preserve">
          <source>Install the theme:</source>
          <target state="translated">테마를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="cdc7600640f4488a302a9ef8db6eee3b7770c1b0" translate="yes" xml:space="preserve">
          <source>Install with RubyGems</source>
          <target state="translated">RubyGems로 설치</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="1061e24b97b7e7926c0e75ef8fe1d7b8635a2b45" translate="yes" xml:space="preserve">
          <source>Installation Problems</source>
          <target state="translated">설치 문제</target>
        </trans-unit>
        <trans-unit id="55b35fe3138034fd97e680624e4fc32ce98e0207" translate="yes" xml:space="preserve">
          <source>Installation on other Linux distributions works similarly to installing on &lt;a href=&quot;../ubuntu/index&quot;&gt;Ubuntu&lt;/a&gt;.</source>
          <target state="translated">Installation on other Linux distributions works similarly to installing on &lt;a href=&quot;../ubuntu/index&quot;&gt;Ubuntu&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="88f28bc9a8bf110104a02b1d85d694cc8c6a5e2b" translate="yes" xml:space="preserve">
          <source>Installation varies based on your operating system. See our &lt;a href=&quot;installation/index#guides&quot;&gt;guides&lt;/a&gt; for OS-specific instructions.</source>
          <target state="translated">Installation varies based on your operating system. See our &lt;a href=&quot;installation/index#guides&quot;&gt;guides&lt;/a&gt; for OS-specific instructions.</target>
        </trans-unit>
        <trans-unit id="88b0adc28bc5d4d887cf429678890733427ab340" translate="yes" xml:space="preserve">
          <source>Installation via Bash on Windows 10</source>
          <target state="translated">Windows 10에서 Bash를 통한 설치</target>
        </trans-unit>
        <trans-unit id="bc6998ee1c084273d3edf04ac27342ad34f6ef8b" translate="yes" xml:space="preserve">
          <source>Installation via Chocolatey</source>
          <target state="translated">Chocolatey를 통한 설치</target>
        </trans-unit>
        <trans-unit id="80bed0dbfe9f2de055f7876c597ff5e0c712f2fb" translate="yes" xml:space="preserve">
          <source>Installation via RubyInstaller</source>
          <target state="translated">RubyInstaller를 통한 설치</target>
        </trans-unit>
        <trans-unit id="b11767c5d2200d2d16fad18e12fb1be2d82b4099" translate="yes" xml:space="preserve">
          <source>Installing &lt;em&gt;github-pages&lt;/em&gt; via Chocolatey</source>
          <target state="translated">Chocolatey를 통해 &lt;em&gt;github 페이지&lt;/em&gt; 설치</target>
        </trans-unit>
        <trans-unit id="c8b250df74e66657f762c2190066ce6c1ec127af" translate="yes" xml:space="preserve">
          <source>Installing Jekyll</source>
          <target state="translated">Jekyll 설치</target>
        </trans-unit>
        <trans-unit id="16ceab49469f52919f2e03463175e71ec859efb7" translate="yes" xml:space="preserve">
          <source>Installing Jekyll should be straight-forward if all requirements are met. Before you start, make sure your system has the following:</source>
          <target state="translated">모든 요구 사항이 충족되면 Jekyll을 간단하게 설치해야합니다. 시작하기 전에 시스템에 다음이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="65d6a81387a2e4460efe3c5dba8f3ee02752d40a" translate="yes" xml:space="preserve">
          <source>Installing Ruby and Jekyll</source>
          <target state="translated">Installing Ruby and Jekyll</target>
        </trans-unit>
        <trans-unit id="03c137f5733905fa449ce5034c5f2765d4312bde" translate="yes" xml:space="preserve">
          <source>Installing Xcode Command-Line Tools</source>
          <target state="translated">Xcode 명령 줄 도구 설치</target>
        </trans-unit>
        <trans-unit id="60859f03534086c3888d74149a033deec834b0c6" translate="yes" xml:space="preserve">
          <source>Installing a gem-based theme</source>
          <target state="translated">gem 기반 테마 설치</target>
        </trans-unit>
        <trans-unit id="7c207b93b2af1157f5c75bb99e15b47da86e9f24" translate="yes" xml:space="preserve">
          <source>Installing a plugin</source>
          <target state="translated">플러그인 설치</target>
        </trans-unit>
        <trans-unit id="0301ff786666998ae5d98dbed80c43208cf8c71d" translate="yes" xml:space="preserve">
          <source>Installing the &lt;code&gt;github-pages&lt;/code&gt; gem on Windows</source>
          <target state="translated">Windows 에서 &lt;code&gt;github-pages&lt;/code&gt; gem 설치</target>
        </trans-unit>
        <trans-unit id="7d65c34ad93e14c54fac65d045196e17931d2197" translate="yes" xml:space="preserve">
          <source>Instead of passing string variables to the include, you can pass a reference to a YAML data file stored in the &lt;code&gt;_data&lt;/code&gt; folder.</source>
          <target state="translated">포함에 문자열 변수를 전달하는 대신 &lt;code&gt;_data&lt;/code&gt; 폴더에 저장된 YAML 데이터 파일에 대한 참조를 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dbf704fb9a12a09c9c216c64b83c654387d7129d" translate="yes" xml:space="preserve">
          <source>Instead of placing posts inside of folders, you can specify one or more categories that the post belongs to. When the site is generated the post will act as though it had been set with these categories normally. Categories (plural key) can be specified as a &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAML list&lt;/a&gt; or a space-separated string.</source>
          <target state="translated">폴더 안에 게시물을 배치하는 대신 게시물이 속한 카테고리를 하나 이상 지정할 수 있습니다. 사이트가 생성되면 게시물은 이러한 카테고리로 정상적으로 설정된 것처럼 작동합니다. 범주 (복수 키)는 &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAML 목록&lt;/a&gt; 또는 공백으로 구분 된 문자열 로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5fbf5118bef5dc635d77ae841cc2e5808c17240f" translate="yes" xml:space="preserve">
          <source>Instead of repeating this configuration each time you create a new post or page, Jekyll provides a way to set these defaults in the site configuration. To do this, you can specify site-wide defaults using the &lt;code&gt;defaults&lt;/code&gt; key in the &lt;code&gt;_config.yml&lt;/code&gt; file in your project&amp;rsquo;s root directory.</source>
          <target state="translated">새 게시물이나 페이지를 만들 때마다이 구성을 반복하는 대신 Jekyll은 사이트 구성에서 이러한 기본값을 설정하는 방법을 제공합니다. 이렇게하려면 프로젝트 루트 디렉토리의 &lt;code&gt;_config.yml&lt;/code&gt; 파일에서 &lt;code&gt;defaults&lt;/code&gt; 키를 사용하여 사이트 전체 기본값을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="459b517bf3026b848c54e53ae4ce12df2cc3a212" translate="yes" xml:space="preserve">
          <source>Instead of using the &lt;strong&gt;on.push&lt;/strong&gt; condition, you could trigger your build on a &lt;strong&gt;schedule&lt;/strong&gt; by using the &lt;a href=&quot;https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#onschedule&quot;&gt;on.schedule&lt;/a&gt; parameter. For example, here we build daily at midnight by specifying &lt;strong&gt;cron&lt;/strong&gt; syntax, which can be tested at the &lt;a href=&quot;https://crontab.guru/&quot;&gt;crontab guru&lt;/a&gt; site.</source>
          <target state="translated">Instead of using the &lt;strong&gt;on.push&lt;/strong&gt; condition, you could trigger your build on a &lt;strong&gt;schedule&lt;/strong&gt; by using the &lt;a href=&quot;https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#onschedule&quot;&gt;on.schedule&lt;/a&gt; parameter. For example, here we build daily at midnight by specifying &lt;strong&gt;cron&lt;/strong&gt; syntax, which can be tested at the &lt;a href=&quot;https://crontab.guru/&quot;&gt;crontab guru&lt;/a&gt; site.</target>
        </trans-unit>
        <trans-unit id="ed58f29743f8e14b9c8e13d41e070a1cc1d1c9f5" translate="yes" xml:space="preserve">
          <source>Instructions</source>
          <target state="translated">Instructions</target>
        </trans-unit>
        <trans-unit id="a7881cac6e64abca5eafd172df6eb31fe0b84c88" translate="yes" xml:space="preserve">
          <source>Integrations</source>
          <target state="translated">Integrations</target>
        </trans-unit>
        <trans-unit id="b8751caf9cf0c78b9fafba5c2439e946ebd1dfe1" translate="yes" xml:space="preserve">
          <source>Interacting with APIs such as GitHub</source>
          <target state="translated">Interacting with APIs such as GitHub</target>
        </trans-unit>
        <trans-unit id="2f66ca1047f5a0b56e9843da678570cdb99652f4" translate="yes" xml:space="preserve">
          <source>Introducing: &lt;code&gt;layout&lt;/code&gt;. In Jekyll 2 and below, any metadata in the layout was merged onto the &lt;code&gt;page&lt;/code&gt; variable in Liquid. This caused a lot of confusion in the way the data was merged and some unexpected behaviour. In Jekyll 3, all layout data is accessible via &lt;code&gt;layout&lt;/code&gt; in Liquid. For example, if your layout has &lt;code&gt;class: my-layout&lt;/code&gt; in its YAML front matter, then the layout can access that via &lt;code&gt;{{ layout.class }}&lt;/code&gt;.</source>
          <target state="translated">소개 : &lt;code&gt;layout&lt;/code&gt; . Jekyll 2 이하에서는 레이아웃의 모든 메타 데이터 가 Liquid 의 &lt;code&gt;page&lt;/code&gt; 변수에 병합되었습니다 . 이로 인해 데이터가 병합되는 방식에 많은 혼란과 예기치 않은 동작이 발생했습니다. Jekyll 3에서 모든 레이아웃 데이터는 Liquid의 &lt;code&gt;layout&lt;/code&gt; 을 통해 액세스 할 수 있습니다 . 예를 들어, &lt;code&gt;class: my-layout&lt;/code&gt; 에 YAML 전면에 my-layout 클래스 가있는 경우 레이아웃은 &lt;code&gt;{{ layout.class }}&lt;/code&gt; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="489ed6253549f720a11bc5140a4e207e40c898c3" translate="yes" xml:space="preserve">
          <source>Irrespective of the front matter key chosen, Jekyll stores the metadata mapped to the plural key which is exposed to Liquid templates.</source>
          <target state="translated">Irrespective of the front matter key chosen, Jekyll stores the metadata mapped to the plural key which is exposed to Liquid templates.</target>
        </trans-unit>
        <trans-unit id="0e59ed77d839555912e7610e1d04e3e952572778" translate="yes" xml:space="preserve">
          <source>It comes in two flavors: basic CommonMark with &lt;a href=&quot;https://github.com/jekyll/jekyll-commonmark&quot;&gt;jekyll-commonmark&lt;/a&gt; plugin and &lt;a href=&quot;https://github.com/github/jekyll-commonmark-ghpages&quot;&gt;GitHub Flavored Markdown supported by GitHub Pages&lt;/a&gt;.</source>
          <target state="translated">It comes in two flavors: basic CommonMark with &lt;a href=&quot;https://github.com/jekyll/jekyll-commonmark&quot;&gt;jekyll-commonmark&lt;/a&gt; plugin and &lt;a href=&quot;https://github.com/github/jekyll-commonmark-ghpages&quot;&gt;GitHub Flavored Markdown supported by GitHub Pages&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9020d8fc0d60807df15ba6caea583e3777c08e00" translate="yes" xml:space="preserve">
          <source>It is also possible to use glob patterns (currently limited to patterns that contain &lt;code&gt;*&lt;/code&gt;) when matching defaults. For example, it is possible to set specific layout for each &lt;code&gt;special-page.html&lt;/code&gt; in any subfolder of &lt;code&gt;section&lt;/code&gt; folder.3.7.0</source>
          <target state="translated">기본값과 일치 할 때 glob 패턴 (현재 &lt;code&gt;*&lt;/code&gt; 를 포함하는 패턴으로 제한)을 사용할 수도 있습니다 . 예를 들면, 각 특정 레이아웃 설정하는 것이 가능하다 &lt;code&gt;special-page.html&lt;/code&gt; 어떤 하위 폴더 &lt;code&gt;section&lt;/code&gt; folder.3.7.0</target>
        </trans-unit>
        <trans-unit id="addf7a9272c9812a657c4d3a6d67fec14532a1ac" translate="yes" xml:space="preserve">
          <source>It may not seem like it now, but much of Jekyll&amp;rsquo;s power comes from combining Liquid with other features.</source>
          <target state="translated">It may not seem like it now, but much of Jekyll&amp;rsquo;s power comes from combining Liquid with other features.</target>
        </trans-unit>
        <trans-unit id="bbb0445c18b13db0d9e8a3fe9643f439bc5cc215" translate="yes" xml:space="preserve">
          <source>It won&amp;rsquo;t work to just access:</source>
          <target state="translated">다음에 액세스하는 것만으로는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dcc1048dbd502084f74e4517e9ae0cef3067fa5f" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s all well and good to have posts in a folder, but a blog is no use unless you have a list of posts somewhere. Creating an index of posts on another page (or in a &lt;a href=&quot;../templates/index&quot;&gt;template&lt;/a&gt;) is easy, thanks to the &lt;a href=&quot;https://docs.shopify.com/themes/liquid/basics&quot;&gt;Liquid template language&lt;/a&gt; and its tags. Here&amp;rsquo;s a basic example of how to create a list of links to your blog posts:</source>
          <target state="translated">폴더에 게시물이 있으면 좋을 것입니다. 그러나 게시물 목록이없는 한 블로그는 아무 소용이 없습니다. &lt;a href=&quot;https://docs.shopify.com/themes/liquid/basics&quot;&gt;Liquid 템플릿 언어&lt;/a&gt; 와 태그 덕분 에 다른 페이지 (또는 &lt;a href=&quot;../templates/index&quot;&gt;템플릿&lt;/a&gt; ) 에 게시물 색인을 쉽게 만들 수 있습니다 . 다음은 블로그 게시물에 대한 링크 목록을 작성하는 방법에 대한 기본 예입니다.</target>
        </trans-unit>
        <trans-unit id="a5bc9f1bd092e992f491fd4ee789d06068edc94b" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s good practice to have a &lt;a href=&quot;../../ruby-101/index#gemfile&quot;&gt;Gemfile&lt;/a&gt; for your site. This ensures the version of Jekyll and other gems remains consistent across different environments.</source>
          <target state="translated">It&amp;rsquo;s good practice to have a &lt;a href=&quot;../../ruby-101/index#gemfile&quot;&gt;Gemfile&lt;/a&gt; for your site. This ensures the version of Jekyll and other gems remains consistent across different environments.</target>
        </trans-unit>
        <trans-unit id="06511dcc6617b5566a69ef0ca85fef625542eea4" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s time to create a site! Create a new directory for your site, you can name it whatever you&amp;rsquo;d like. Through the rest of this tutorial we&amp;rsquo;ll refer to this directory as &amp;ldquo;root&amp;rdquo;.</source>
          <target state="translated">It&amp;rsquo;s time to create a site! Create a new directory for your site, you can name it whatever you&amp;rsquo;d like. Through the rest of this tutorial we&amp;rsquo;ll refer to this directory as &amp;ldquo;root&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="94e7298320324aa122bda14ac5033651c06b8526" translate="yes" xml:space="preserve">
          <source>Iterate over this filtered list in &lt;code&gt;_layouts/author.html&lt;/code&gt; to output the author&amp;rsquo;s posts:</source>
          <target state="translated">Iterate over this filtered list in &lt;code&gt;_layouts/author.html&lt;/code&gt; to output the author&amp;rsquo;s posts:</target>
        </trans-unit>
        <trans-unit id="a513c9de137d83a7609a8bb13bdbeb5834ec76bd" translate="yes" xml:space="preserve">
          <source>Jekyll</source>
          <target state="translated">Jekyll</target>
        </trans-unit>
        <trans-unit id="808c67fa4e431d5699a6613bd573f08cc162cac0" translate="yes" xml:space="preserve">
          <source>Jekyll &amp;amp; Mac OS X 10.11</source>
          <target state="translated">지킬 &amp;amp; 맥 OS X 10.11</target>
        </trans-unit>
        <trans-unit id="42d44d38eb2ee5033d3fa25ce2ee70b00815734a" translate="yes" xml:space="preserve">
          <source>Jekyll &amp;amp; macOS</source>
          <target state="translated">Jekyll &amp;amp; macOS</target>
        </trans-unit>
        <trans-unit id="205b18c33b3c10f3254a98f57a2a0c9d4d658afa" translate="yes" xml:space="preserve">
          <source>Jekyll 1.0 introduced several new config file options. Before you upgrade, you should check to see if any of these are present in your pre-1.0 config file, and if so, make sure that you&amp;rsquo;re using them properly:</source>
          <target state="translated">Jekyll 1.0에는 몇 가지 새로운 구성 파일 옵션이 도입되었습니다. 업그레이드하기 전에 1.0 이전 구성 파일에 이러한 파일이 있는지 확인하고, 그렇다면 파일을 올바르게 사용하고 있는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="aebdcc36a1ed7b3f59a70e00c56c89d470eddae0" translate="yes" xml:space="preserve">
          <source>Jekyll 4.0 started allowing themes to bundle a &lt;code&gt;_config.yml&lt;/code&gt; to simplify theme-onboarding for new users. In the unfortunate situation that importing a bundled theme configuration messes up the merged site-configuration, the user can configure Jekyll to not import the theme-config entirely.</source>
          <target state="translated">Jekyll 4.0 started allowing themes to bundle a &lt;code&gt;_config.yml&lt;/code&gt; to simplify theme-onboarding for new users. In the unfortunate situation that importing a bundled theme configuration messes up the merged site-configuration, the user can configure Jekyll to not import the theme-config entirely.</target>
        </trans-unit>
        <trans-unit id="c5fbaceceae97f7b63177a421596fd01c4f53d0b" translate="yes" xml:space="preserve">
          <source>Jekyll Contributor Code of Conduct</source>
          <target state="translated">Jekyll Contributor Code of Conduct</target>
        </trans-unit>
        <trans-unit id="9324efe9664b58f2dd291b099f41ed59223057e4" translate="yes" xml:space="preserve">
          <source>Jekyll Plugins Wanted</source>
          <target state="translated">Jekyll 플러그인을 원함</target>
        </trans-unit>
        <trans-unit id="7d8fadf2d825e12ec8771d9cdf8e6df407e1fedf" translate="yes" xml:space="preserve">
          <source>Jekyll allows you to concoct your sites in any way you can dream up, and it&amp;rsquo;s thanks to the powerful and flexible configuration options that this is possible. These options can either be specified in a &lt;code&gt;_config.yml&lt;/code&gt; file placed in your site&amp;rsquo;s root directory, or can be specified as flags for the &lt;code&gt;jekyll&lt;/code&gt; executable in the terminal.</source>
          <target state="translated">Jekyll을 사용하면 원하는 방식으로 사이트를 관리 할 수 ​​있으며 강력하고 유연한 구성 옵션 덕분에 가능합니다. 이러한 옵션은 사이트의 루트 디렉토리 에있는 &lt;code&gt;_config.yml&lt;/code&gt; 파일에 지정하거나 터미널에서 &lt;code&gt;jekyll&lt;/code&gt; 실행 파일에 대한 플래그로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4097b74ac38435b11aa3b17fad4cd1447bc26ea5" translate="yes" xml:space="preserve">
          <source>Jekyll allows you to customize your Sass conversion in certain ways.</source>
          <target state="translated">Jekyll에서는 Sass 변환을 특정 방식으로 사용자 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a06ba36e9af56403d57bad46108a8d760e07012" translate="yes" xml:space="preserve">
          <source>Jekyll also comes with a built-in development server that will allow you to preview what the generated site will look like in your browser locally.</source>
          <target state="translated">Jekyll에는 또한 생성 된 사이트가 브라우저에서 로컬로 어떻게 보이는지 미리 볼 수있는 개발 서버가 내장되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a89ce5f5b58a0ca4e12ac806869bef329c65e94" translate="yes" xml:space="preserve">
          <source>Jekyll also has built-in support for syntax highlighting of code snippets using either Pygments or Rouge, and including a code snippet in any post is easy. Just use the dedicated Liquid tag as follows:</source>
          <target state="translated">Jekyll은 또한 피그먼트 또는 루즈를 사용하여 코드 스 니펫의 구문 강조를 지원하며 모든 게시물에 코드 스 니펫을 포함하는 것이 쉽습니다. 다음과 같이 전용 Liquid 태그를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c75f08d618f8d6918cce6239d9eabbc6fbb20362" translate="yes" xml:space="preserve">
          <source>Jekyll can handle many different iterations of the idea you might associate with a &amp;ldquo;post,&amp;rdquo; however a standard blog style post, including a Title, Layout, Publishing Date, and Categories might look like this:</source>
          <target state="translated">Jekyll은&amp;ldquo;게시물&amp;rdquo;과 연관시킬 수있는 여러 가지 아이디어 반복을 처리 할 수 ​​있지만 제목, 레이아웃, 게시 날짜 및 범주를 포함한 표준 블로그 스타일 게시물은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="84f7b0bcb2763398d2709655311c727de99f72c4" translate="yes" xml:space="preserve">
          <source>Jekyll does not generate a &amp;lsquo;page1&amp;rsquo; folder, so the above code will not work when a &lt;code&gt;/page1&lt;/code&gt; link is produced. See below for a way to handle this if it&amp;rsquo;s a problem for you.</source>
          <target state="translated">Jekyll은 'page1'폴더를 생성하지 않으므로 &lt;code&gt;/page1&lt;/code&gt; 링크가 생성 되면 위의 코드가 작동하지 않습니다 . 문제가있는 경우이를 처리하는 방법은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="623989c9f30f91c5701a5467a4c6c7f7a8c5f576" translate="yes" xml:space="preserve">
          <source>Jekyll expects all &lt;em&gt;include files&lt;/em&gt; to be placed in an &lt;code&gt;_includes&lt;/code&gt; directory at the root of your source directory. In the above example, this will embed the contents of &lt;code&gt;_includes/footer.html&lt;/code&gt; into the calling file.</source>
          <target state="translated">Jekyll은 모든 &lt;em&gt;포함 파일&lt;/em&gt; 이 소스 디렉토리의 루트 에있는 &lt;code&gt;_includes&lt;/code&gt; 디렉토리에 배치 될 것으로 예상합니다 . 위의 예에서 &lt;code&gt;_includes/footer.html&lt;/code&gt; 의 내용을 호출 파일에 포함시킵니다.</target>
        </trans-unit>
        <trans-unit id="eaad9cda13255d782ecc3798d5ba55c078f88d41" translate="yes" xml:space="preserve">
          <source>Jekyll generates your static site to the &lt;code&gt;_site&lt;/code&gt; directory by default. You can transfer the contents of this directory to almost any hosting provider to get your site live. Here are some manual ways of achieving this:</source>
          <target state="translated">Jekyll generates your static site to the &lt;code&gt;_site&lt;/code&gt; directory by default. You can transfer the contents of this directory to almost any hosting provider to get your site live. Here are some manual ways of achieving this:</target>
        </trans-unit>
        <trans-unit id="f823e2478049f311b334a187f8c8c8ce996d032e" translate="yes" xml:space="preserve">
          <source>Jekyll gives this particular group of gems in your &lt;code&gt;Gemfile&lt;/code&gt; a different treatment. Any gem included in this group is loaded before Jekyll starts processing the rest of your source directory.</source>
          <target state="translated">Jekyll은 &lt;code&gt;Gemfile&lt;/code&gt; 에 있는 이 특정 보석 그룹에 다른 처리 방법을 제공합니다. 이 그룹에 포함 된 모든 gem은 Jekyll이 나머지 소스 디렉토리 처리를 시작하기 전에로드됩니다.</target>
        </trans-unit>
        <trans-unit id="a6c0da7b0268e18dbdfe89e5f60e7b2d019abe26" translate="yes" xml:space="preserve">
          <source>Jekyll gives you a lot of flexibility to customize how it builds your site. These options can either be specified in a &lt;code&gt;_config.yml&lt;/code&gt; or &lt;code&gt;_config.toml&lt;/code&gt; file placed in your site&amp;rsquo;s root directory, or can be specified as flags for the &lt;code&gt;jekyll&lt;/code&gt; executable in the terminal.</source>
          <target state="translated">Jekyll gives you a lot of flexibility to customize how it builds your site. These options can either be specified in a &lt;code&gt;_config.yml&lt;/code&gt; or &lt;code&gt;_config.toml&lt;/code&gt; file placed in your site&amp;rsquo;s root directory, or can be specified as flags for the &lt;code&gt;jekyll&lt;/code&gt; executable in the terminal.</target>
        </trans-unit>
        <trans-unit id="9779f5873de87b96de9d0b2e2560ee55da48ea40" translate="yes" xml:space="preserve">
          <source>Jekyll handles two special Redcarpet extensions:</source>
          <target state="translated">Jekyll은 두 가지 특별한 Redcarpet 확장을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="2b368cd086c4cf9c3da1721dc215c046acd3cc22" translate="yes" xml:space="preserve">
          <source>Jekyll has a plugin system with hooks that allow you to create custom generated content specific to your site. You can run custom code for your site without having to modify the Jekyll source itself.</source>
          <target state="translated">Jekyll에는 사이트와 관련된 사용자 정의 생성 컨텐츠를 작성할 수있는 후크가있는 플러그인 시스템이 있습니다. Jekyll 소스 자체를 수정하지 않고도 사이트에 대한 사용자 정의 코드를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e59cffaea8e7dd210f0672d747ee169ae5e28a92" translate="yes" xml:space="preserve">
          <source>Jekyll has an extensive theme system that allows you to leverage community-maintained templates and styles to customize your site&amp;rsquo;s presentation. Jekyll themes package up layouts, includes, and stylesheets in a way that can be overridden by your site&amp;rsquo;s content.</source>
          <target state="translated">Jekyll은 커뮤니티 테마 템플릿과 스타일을 활용하여 사이트 프리젠 테이션을 사용자 정의 할 수있는 광범위한 테마 시스템을 갖추고 있습니다. Jekyll 테마는 사이트 컨텐츠로 대체 할 수있는 방식으로 레이아웃, 포함 및 스타일 시트를 패키지합니다.</target>
        </trans-unit>
        <trans-unit id="a1c53e13db7d0a28e24bacad75dd1c5690f478da" translate="yes" xml:space="preserve">
          <source>Jekyll has an extensive theme system that allows you to leverage community-maintained templates and styles to customize your site&amp;rsquo;s presentation. Jekyll themes specify plugins and package up assets, layouts, includes, and stylesheets in a way that can be overridden by your site&amp;rsquo;s content.</source>
          <target state="translated">Jekyll has an extensive theme system that allows you to leverage community-maintained templates and styles to customize your site&amp;rsquo;s presentation. Jekyll themes specify plugins and package up assets, layouts, includes, and stylesheets in a way that can be overridden by your site&amp;rsquo;s content.</target>
        </trans-unit>
        <trans-unit id="7962a348f79756dc69e793015cfcc73ab94df544" translate="yes" xml:space="preserve">
          <source>Jekyll has built in support for syntax highlighting of over 100 languages thanks to &lt;a href=&quot;http://rouge.jneen.net&quot;&gt;Rouge&lt;/a&gt;. Rouge is the default highlighter in Jekyll 3 and above.</source>
          <target state="translated">Jekyll has built in support for syntax highlighting of over 100 languages thanks to &lt;a href=&quot;http://rouge.jneen.net&quot;&gt;Rouge&lt;/a&gt;. Rouge is the default highlighter in Jekyll 3 and above.</target>
        </trans-unit>
        <trans-unit id="796a53df1f3443b9e298618111b14017b66fb383" translate="yes" xml:space="preserve">
          <source>Jekyll has built in support for syntax highlighting of over 60 languages thanks to &lt;a href=&quot;http://rouge.jneen.net&quot;&gt;Rouge&lt;/a&gt;. Rouge is the default highlighter in Jekyll 3 and above. To use it in Jekyll 2, set &lt;code&gt;highlighter&lt;/code&gt; to &lt;code&gt;rouge&lt;/code&gt; and ensure the &lt;code&gt;rouge&lt;/code&gt; gem is installed properly.</source>
          <target state="translated">Jekyll은 &lt;a href=&quot;http://rouge.jneen.net&quot;&gt;Rouge&lt;/a&gt; 덕분에 60 개가 넘는 언어의 구문 강조를 지원합니다 . Roky는 Jekyll 3 이상의 기본 형광펜입니다. Jekyll 2에서 사용하려면 &lt;code&gt;highlighter&lt;/code&gt; 을 &lt;code&gt;rouge&lt;/code&gt; 설정 하고 &lt;code&gt;rouge&lt;/code&gt; 보석이 올바르게 설치되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="0892635cf7504b3e5483cf4a0443e903aca70ce7" translate="yes" xml:space="preserve">
          <source>Jekyll has first class support for &lt;em&gt;tags&lt;/em&gt; and &lt;em&gt;categories&lt;/em&gt; in blog posts.</source>
          <target state="translated">Jekyll has first class support for &lt;em&gt;tags&lt;/em&gt; and &lt;em&gt;categories&lt;/em&gt; in blog posts.</target>
        </trans-unit>
        <trans-unit id="caa9b48afeeada7fcf9b5c8191de86955ffe80fc" translate="yes" xml:space="preserve">
          <source>Jekyll is a &lt;a href=&quot;../ruby-101/index#gems&quot;&gt;Ruby Gem&lt;/a&gt; that can be installed on most systems.</source>
          <target state="translated">Jekyll is a &lt;a href=&quot;../ruby-101/index#gems&quot;&gt;Ruby Gem&lt;/a&gt; that can be installed on most systems.</target>
        </trans-unit>
        <trans-unit id="072465ea7eb6881bb95253fc752079dadd1fd275" translate="yes" xml:space="preserve">
          <source>Jekyll is a Ruby program so you need to install Ruby on your machine to begin with. Head over to the &lt;a href=&quot;../../installation/index&quot;&gt;install guide&lt;/a&gt; and follow the instructions for your operating system.</source>
          <target state="translated">Jekyll is a Ruby program so you need to install Ruby on your machine to begin with. Head over to the &lt;a href=&quot;../../installation/index&quot;&gt;install guide&lt;/a&gt; and follow the instructions for your operating system.</target>
        </trans-unit>
        <trans-unit id="2458c344061b15cf37f18b7f901cfd2423a81e1c" translate="yes" xml:space="preserve">
          <source>Jekyll is a gem. Many Jekyll &lt;a href=&quot;../plugins/index&quot;&gt;plugins&lt;/a&gt; are also gems, including &lt;a href=&quot;https://github.com/jekyll/jekyll-feed&quot;&gt;jekyll-feed&lt;/a&gt;, &lt;a href=&quot;https://github.com/jekyll/jekyll-seo-tag&quot;&gt;jekyll-seo-tag&lt;/a&gt; and &lt;a href=&quot;https://github.com/jekyll/jekyll-archives&quot;&gt;jekyll-archives&lt;/a&gt;.</source>
          <target state="translated">Jekyll is a gem. Many Jekyll &lt;a href=&quot;../plugins/index&quot;&gt;plugins&lt;/a&gt; are also gems, including &lt;a href=&quot;https://github.com/jekyll/jekyll-feed&quot;&gt;jekyll-feed&lt;/a&gt;, &lt;a href=&quot;https://github.com/jekyll/jekyll-seo-tag&quot;&gt;jekyll-seo-tag&lt;/a&gt; and &lt;a href=&quot;https://github.com/jekyll/jekyll-archives&quot;&gt;jekyll-archives&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f07f9ec0a1524d864b1fec9586093e957570d58c" translate="yes" xml:space="preserve">
          <source>Jekyll is a simple, blog-aware, static site generator. It takes a template directory containing raw text files in various formats, runs it through a converter (like &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;) and our &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; renderer, and spits out a complete, ready-to-publish static website suitable for serving with your favorite web server. Jekyll also happens to be the engine behind &lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt;, which means you can use Jekyll to host your project&amp;rsquo;s page, blog, or website from GitHub&amp;rsquo;s servers &lt;strong&gt;for free&lt;/strong&gt;.</source>
          <target state="translated">Jekyll은 블로그를 인식하는 간단한 정적 사이트 생성기입니다. 다양한 형식의 원시 텍스트 파일을 포함하는 템플릿 디렉토리를 가져 와서 &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; 과 같은 변환기 와 &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; 렌더러를 통해 실행하고 좋아하는 웹 서버와 함께 제공하기에 완벽한 게시 준비가 된 정적 웹 사이트를 뱉어냅니다. Jekyll은 &lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt; 의 엔진이기도합니다. 즉, Jekyll을 사용하여 GitHub 서버에서 프로젝트 페이지, 블로그 또는 웹 사이트 &lt;strong&gt;를 무료로&lt;/strong&gt; 호스팅 &lt;strong&gt;할 수&lt;/strong&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3dd2cd2cbdfe4ae20dd71967ec180dae63373da" translate="yes" xml:space="preserve">
          <source>Jekyll is a static site generator so we need Jekyll to build the site before we can view it. There are two commands you can run in the root of your site to build it:</source>
          <target state="translated">Jekyll is a static site generator so we need Jekyll to build the site before we can view it. There are two commands you can run in the root of your site to build it:</target>
        </trans-unit>
        <trans-unit id="31d88f5d67f19f36eb7649186dbed9f15e4c7771" translate="yes" xml:space="preserve">
          <source>Jekyll is a static site generator. It takes text written in your favorite markup language and uses layouts to create a static website. You can tweak the site&amp;rsquo;s look and feel, URLs, the data displayed on the page, and more.</source>
          <target state="translated">Jekyll is a static site generator. It takes text written in your favorite markup language and uses layouts to create a static website. You can tweak the site&amp;rsquo;s look and feel, URLs, the data displayed on the page, and more.</target>
        </trans-unit>
        <trans-unit id="79c036ffff671c2109909b1d044da4eba4d477c1" translate="yes" xml:space="preserve">
          <source>Jekyll is written in Ruby. If you&amp;rsquo;re new to Ruby, this page helps you learn some of the terminology.</source>
          <target state="translated">Jekyll is written in Ruby. If you&amp;rsquo;re new to Ruby, this page helps you learn some of the terminology.</target>
        </trans-unit>
        <trans-unit id="e779c5f9969a3932787d2f57008cd6dbcd7b4559" translate="yes" xml:space="preserve">
          <source>Jekyll is, at its core, a text transformation engine. The concept behind the system is this: you give it text written in your favorite markup language, be that Markdown, Textile, or just plain HTML, and it churns that through a layout or a series of layout files. Throughout that process you can tweak how you want the site URLs to look, what data gets displayed in the layout, and more. This is all done through editing text files; the static web site is the final product.</source>
          <target state="translated">Jekyll은 핵심적으로 텍스트 변환 엔진입니다. 시스템의 기본 개념은 다음과 같습니다. 좋아하는 마크 업 언어로 작성된 텍스트, 마크 다운, 텍스타일 또는 단순한 HTML로 텍스트를 제공하고 레이아웃 또는 일련의 레이아웃 파일을 통해이를 생성합니다. 이 프로세스를 통해 사이트 URL의 모양, 레이아웃에 표시되는 데이터 등을 조정할 수 있습니다. 이 작업은 모두 텍스트 파일 편집을 통해 수행됩니다. 정적 웹 사이트가 최종 제품입니다.</target>
        </trans-unit>
        <trans-unit id="e3bf1359d968bddfda521ff08e5d2b20c445a054" translate="yes" xml:space="preserve">
          <source>Jekyll lets you access the &lt;code&gt;site&lt;/code&gt; object through the &lt;code&gt;@context.registers&lt;/code&gt; feature of Liquid at &lt;code&gt;@context.registers[:site]&lt;/code&gt;. For example, you can access the global configuration file &lt;code&gt;_config.yml&lt;/code&gt; using &lt;code&gt;@context.registers[:site].config&lt;/code&gt;.</source>
          <target state="translated">Jekyll lets you access the &lt;code&gt;site&lt;/code&gt; object through the &lt;code&gt;@context.registers&lt;/code&gt; feature of Liquid at &lt;code&gt;@context.registers[:site]&lt;/code&gt; . For example, you can access the global configuration file &lt;code&gt;_config.yml&lt;/code&gt; using &lt;code&gt;@context.registers[:site].config&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fbc354ba340e745916a498948c20a2e8b128cc74" translate="yes" xml:space="preserve">
          <source>Jekyll lets you access the &lt;code&gt;site&lt;/code&gt; object through the &lt;code&gt;context.registers&lt;/code&gt; feature of Liquid at &lt;code&gt;context.registers[:site]&lt;/code&gt;. For example, you can access the global configuration file &lt;code&gt;_config.yml&lt;/code&gt; using &lt;code&gt;context.registers[:site].config&lt;/code&gt;.</source>
          <target state="translated">Jekyll에서는 &lt;code&gt;context.registers[:site]&lt;/code&gt; 에서 Liquid 의 &lt;code&gt;context.registers&lt;/code&gt; 기능을 통해 &lt;code&gt;site&lt;/code&gt; 객체에 액세스 할 수 있습니다 . 예를 들어 &lt;code&gt;context.registers[:site].config&lt;/code&gt; 사용하여 글로벌 구성 파일 &lt;code&gt;_config.yml&lt;/code&gt; 에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1b5db8cfbe3fba167a0a2e8a885be9432181f655" translate="yes" xml:space="preserve">
          <source>Jekyll looks for the &lt;code&gt;_layouts&lt;/code&gt; directory either at the root of your site's &lt;code&gt;source&lt;/code&gt; or at the root of your theme.</source>
          <target state="translated">Jekyll looks for the &lt;code&gt;_layouts&lt;/code&gt; directory either at the root of your site's &lt;code&gt;source&lt;/code&gt; or at the root of your theme.</target>
        </trans-unit>
        <trans-unit id="2c0656f7a345abf21e2147e2a0fcb89e0933f64f" translate="yes" xml:space="preserve">
          <source>Jekyll makes posts available at &lt;code&gt;site.posts&lt;/code&gt;.</source>
          <target state="translated">Jekyll makes posts available at &lt;code&gt;site.posts&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="636d48ced345024e256998d5677894ebcd469745" translate="yes" xml:space="preserve">
          <source>Jekyll makes this data file available to you at &lt;code&gt;site.data.navigation&lt;/code&gt;. Instead of outputting each link in &lt;code&gt;_includes/navigation.html&lt;/code&gt;, now you can iterate over the data file instead:</source>
          <target state="translated">Jekyll makes this data file available to you at &lt;code&gt;site.data.navigation&lt;/code&gt; . Instead of outputting each link in &lt;code&gt;_includes/navigation.html&lt;/code&gt; , now you can iterate over the data file instead:</target>
        </trans-unit>
        <trans-unit id="91ded4d9bcfd892aece0c6969de6ac9f3b2af1b8" translate="yes" xml:space="preserve">
          <source>Jekyll now lets you write draft posts, and allows you to easily preview how they will look prior to publishing. To start a draft, simply create a folder called &lt;code&gt;_drafts&lt;/code&gt; in your site&amp;rsquo;s source directory (e.g., alongside &lt;code&gt;_posts&lt;/code&gt;), and add a new markdown file to it. To preview your new post, simply run the &lt;code&gt;jekyll serve&lt;/code&gt; command with the &lt;code&gt;--drafts&lt;/code&gt; flag.</source>
          <target state="translated">Jekyll에서는 초안 게시물을 작성할 수 있으며 게시하기 전에 게시물이 어떻게 표시되는지 쉽게 미리 볼 수 있습니다. 초안을 시작하려면 사이트의 소스 디렉토리에 &lt;code&gt;_drafts&lt;/code&gt; 라는 폴더를 만들고 (예 : &lt;code&gt;_posts&lt;/code&gt; 와 함께 ) 새 마크 다운 파일을 추가하십시오. 새 게시물을 미리 보려면 &lt;code&gt;--drafts&lt;/code&gt; 플래그 와 함께 &lt;code&gt;jekyll serve&lt;/code&gt; 명령을 실행하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="158e07ed483c3a91f97e15f45172243ece02f69d" translate="yes" xml:space="preserve">
          <source>Jekyll now uses a rubygem to internally configure Timezone based on established &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;IANA Timezone Database&lt;/a&gt;.</source>
          <target state="translated">Jekyll now uses a rubygem to internally configure Timezone based on established &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;IANA Timezone Database&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0ee102bf04dc72cf649ca51cdf3be64db665ed5b" translate="yes" xml:space="preserve">
          <source>Jekyll now uses a rubygem to internally configure Timezone based on established &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;IANA Timezone Database&lt;/a&gt;. While &amp;lsquo;new&amp;rsquo; blogs created with Jekyll v3.4 and greater, will have the following added to their &amp;lsquo;Gemfile&amp;rsquo; by default, existing sites &lt;em&gt;will&lt;/em&gt; have to update their &amp;lsquo;Gemfile&amp;rsquo; (and installed) to enable development on Windows:</source>
          <target state="translated">Jekyll은 이제 루비 젬을 사용하여 설정된 &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;IANA 시간대 데이터베이스를&lt;/a&gt; 기반으로 시간대를 내부적으로 구성합니다 . Jekyll v3.4 이상으로 작성된 '새로운'블로그는 기본적으로 다음을 'Gemfile'에 추가하지만 기존 사이트 &lt;em&gt;는&lt;/em&gt; Windows에서 개발할 수 있도록 'Gemfile'을 업데이트하고 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="b5417244e089ca9b88be0d8d04080295b358c06b" translate="yes" xml:space="preserve">
          <source>Jekyll on Linux</source>
          <target state="translated">Jekyll on Linux</target>
        </trans-unit>
        <trans-unit id="ac4d51a2cd8689b1cd95bcd8bca8baa71494548f" translate="yes" xml:space="preserve">
          <source>Jekyll on Twitter</source>
          <target state="translated">Jekyll on Twitter</target>
        </trans-unit>
        <trans-unit id="47e4a47081791075195441945d68467332c7e594" translate="yes" xml:space="preserve">
          <source>Jekyll on Ubuntu</source>
          <target state="translated">Jekyll on Ubuntu</target>
        </trans-unit>
        <trans-unit id="9db167acaa9239338db11bc4db579948bb8bcd54" translate="yes" xml:space="preserve">
          <source>Jekyll on Windows</source>
          <target state="translated">Windows의 Jekyll</target>
        </trans-unit>
        <trans-unit id="f6f82c018dd7047302fec182aa54abfeee7089dc" translate="yes" xml:space="preserve">
          <source>Jekyll on macOS</source>
          <target state="translated">Jekyll on macOS</target>
        </trans-unit>
        <trans-unit id="f3802f7ca4dd2fd55ddff8cc084c2e669cf03918" translate="yes" xml:space="preserve">
          <source>Jekyll plugins allow you to create custom generated content specific to your site. There&amp;rsquo;s many &lt;a href=&quot;../../plugins/index&quot;&gt;plugins&lt;/a&gt; available or you can even write your own.</source>
          <target state="translated">Jekyll plugins allow you to create custom generated content specific to your site. There&amp;rsquo;s many &lt;a href=&quot;../../plugins/index&quot;&gt;plugins&lt;/a&gt; available or you can even write your own.</target>
        </trans-unit>
        <trans-unit id="5ea510d5fc4795cd9f40638b7de1ca1bcbf30ce4" translate="yes" xml:space="preserve">
          <source>Jekyll processes all Liquid filters and tags in asset files</source>
          <target state="translated">Jekyll은 자산 파일의 모든 액체 필터 및 태그를 처리합니다</target>
        </trans-unit>
        <trans-unit id="802e65a087d4160c667727cfbcb1a534752ec8b7" translate="yes" xml:space="preserve">
          <source>Jekyll processes all Liquid filters in code blocks</source>
          <target state="translated">Jekyll은 모든 액체 필터를 코드 블록으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="da747496c9a65f0a8c00ec6f4f3531565cafab9d" translate="yes" xml:space="preserve">
          <source>Jekyll provides a number of useful Liquid additions to help you build your site:</source>
          <target state="translated">Jekyll provides a number of useful Liquid additions to help you build your site:</target>
        </trans-unit>
        <trans-unit id="a49d25367b1e6670095bcbe7ed5adcff5094f19b" translate="yes" xml:space="preserve">
          <source>Jekyll provides built-in support for &lt;a href=&quot;https://sass-lang.com/&quot;&gt;Sass&lt;/a&gt; and can work with &lt;a href=&quot;https://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt; via a Ruby gem. In order to use them, you must first create a file with the proper extension name (one of &lt;code&gt;.sass&lt;/code&gt;, &lt;code&gt;.scss&lt;/code&gt;, or &lt;code&gt;.coffee&lt;/code&gt;) and &lt;strong&gt;&lt;em&gt;start the file with two lines of triple dashes&lt;/em&gt;&lt;/strong&gt;, like this:</source>
          <target state="translated">Jekyll provides built-in support for &lt;a href=&quot;https://sass-lang.com/&quot;&gt;Sass&lt;/a&gt; and can work with &lt;a href=&quot;https://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt; via a Ruby gem. In order to use them, you must first create a file with the proper extension name (one of &lt;code&gt;.sass&lt;/code&gt; , &lt;code&gt;.scss&lt;/code&gt; , or &lt;code&gt;.coffee&lt;/code&gt; ) and &lt;strong&gt;&lt;em&gt;start the file with two lines of triple dashes&lt;/em&gt;&lt;/strong&gt;, like this:</target>
        </trans-unit>
        <trans-unit id="edba0ddab22968e6856800e9e202c01271877d09" translate="yes" xml:space="preserve">
          <source>Jekyll provides built-in support for Sass and can work with CoffeeScript via a Ruby gem. In order to use them, you must first create a file with the proper extension name (one of &lt;code&gt;.sass&lt;/code&gt;, &lt;code&gt;.scss&lt;/code&gt;, or &lt;code&gt;.coffee&lt;/code&gt;) and &lt;strong&gt;&lt;em&gt;start the file with two lines of triple dashes&lt;/em&gt;&lt;/strong&gt;, like this:</source>
          <target state="translated">Jekyll은 Sass를 기본적으로 지원하며 Ruby gem을 통해 CoffeeScript를 사용할 수 있습니다. 순서를 사용하려면 먼저 적절한 확장자 이름 (하나의 파일 생성해야합니다 &lt;code&gt;.sass&lt;/code&gt; , &lt;code&gt;.scss&lt;/code&gt; , 또는 &lt;code&gt;.coffee&lt;/code&gt; 를 ) 및 &lt;strong&gt;&lt;em&gt;트리플 대시 두 줄을 사용하여 파일을 시작하는&lt;/em&gt;&lt;/strong&gt; 이 같은 :</target>
        </trans-unit>
        <trans-unit id="46359c83174cdcd8c267384987a54331c82e82ce" translate="yes" xml:space="preserve">
          <source>Jekyll provides by default &lt;code&gt;Content-Type&lt;/code&gt; and &lt;code&gt;Cache-Control&lt;/code&gt; response headers: one dynamic in order to specify the nature of the data being served, the other static in order to disable caching so that you don&amp;rsquo;t have to fight with Chrome&amp;rsquo;s aggressive caching when you are in development mode.</source>
          <target state="translated">Jekyll provides by default &lt;code&gt;Content-Type&lt;/code&gt; and &lt;code&gt;Cache-Control&lt;/code&gt; response headers: one dynamic in order to specify the nature of the data being served, the other static in order to disable caching so that you don&amp;rsquo;t have to fight with Chrome&amp;rsquo;s aggressive caching when you are in development mode.</target>
        </trans-unit>
        <trans-unit id="430b6448029a060479d76de3740d1c9e2f3d5809" translate="yes" xml:space="preserve">
          <source>Jekyll provides hooks for &lt;code&gt;:site&lt;/code&gt;, &lt;code&gt;:pages&lt;/code&gt;, &lt;code&gt;:posts&lt;/code&gt;, and &lt;code&gt;:documents&lt;/code&gt;. In all cases, Jekyll calls your hooks with the container object as the first callback parameter. However, all &lt;code&gt;:pre_render&lt;/code&gt; hooks and the&lt;code&gt;:site, :post_render&lt;/code&gt; hook will also provide a payload hash as a second parameter. In the case of &lt;code&gt;:pre_render&lt;/code&gt;, the payload gives you full control over the variables that are available while rendering. In the case of &lt;code&gt;:site, :post_render&lt;/code&gt;, the payload contains final values after rendering all the site (useful for sitemaps, feeds, etc).</source>
          <target state="translated">Jekyll은 &lt;code&gt;:site&lt;/code&gt; , &lt;code&gt;:pages&lt;/code&gt; , &lt;code&gt;:posts&lt;/code&gt; 및 &lt;code&gt;:documents&lt;/code&gt; 에 대한 후크를 제공합니다 . 모든 경우에 Jekyll은 컨테이너 객체를 첫 번째 콜백 매개 변수로 사용하여 후크를 호출합니다. 그러나 모든 &lt;code&gt;:pre_render&lt;/code&gt; 후크와 &lt;code&gt;:site, :post_render&lt;/code&gt; 후크는 두 번째 매개 변수로 페이로드 해시도 제공합니다. &lt;code&gt;:pre_render&lt;/code&gt; 의 경우 페이로드는 렌더링 중에 사용 가능한 변수를 완전히 제어합니다. 의 경우 &lt;code&gt;:site, :post_render&lt;/code&gt; , 페이로드는 모든 사이트 (사이트 맵, 피드 유용 등) 렌더링 후 최종 값이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="c30cbac395c5ac11e64e43dea9f5bb8fd6d017c5" translate="yes" xml:space="preserve">
          <source>Jekyll requires &lt;strong&gt;Ruby v2.4.0&lt;/strong&gt; or higher. macOS Catalina 10.15 ships with Ruby 2.6.3. Check your Ruby version using &lt;code&gt;ruby -v&lt;/code&gt;.</source>
          <target state="translated">Jekyll은 &lt;strong&gt;Ruby v2.4.0&lt;/strong&gt; 이상이 필요합니다 . macOS Catalina 10.15는 Ruby 2.6.3과 함께 제공됩니다. &lt;code&gt;ruby -v&lt;/code&gt; 를 사용하여 Ruby 버전을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="0644ee5a4a42d81d51373b99fc8751efc1a9daa3" translate="yes" xml:space="preserve">
          <source>Jekyll requires &lt;strong&gt;Ruby v2.5.0&lt;/strong&gt; or higher. macOS Catalina 10.15 ships with Ruby 2.6.3. Check your Ruby version using &lt;code&gt;ruby -v&lt;/code&gt;.</source>
          <target state="translated">Jekyll requires &lt;strong&gt;Ruby v2.5.0&lt;/strong&gt; or higher. macOS Catalina 10.15 ships with Ruby 2.6.3. Check your Ruby version using &lt;code&gt;ruby -v&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f002d6623841c1892ef574e9c828b235a3d3d05d" translate="yes" xml:space="preserve">
          <source>Jekyll requires the following:</source>
          <target state="translated">Jekyll requires the following:</target>
        </trans-unit>
        <trans-unit id="2b4be10fd436b4843092922a4363eca9671b242f" translate="yes" xml:space="preserve">
          <source>Jekyll runs with the following configuration options by default. Alternative settings for these options can be explicitly specified in the configuration file or on the command-line.</source>
          <target state="translated">Jekyll은 기본적으로 다음 구성 옵션으로 실행됩니다. 이러한 옵션에 대한 대체 설정은 구성 파일 또는 명령 줄에서 명시 적으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af0e25e85629fe7795f30ef93965300c01ea8040" translate="yes" xml:space="preserve">
          <source>Jekyll sites often use this structure to keep assets organized:</source>
          <target state="translated">Jekyll sites often use this structure to keep assets organized:</target>
        </trans-unit>
        <trans-unit id="7b56f4c7875b9222396502bc638c4eaec78060f6" translate="yes" xml:space="preserve">
          <source>Jekyll supports &lt;a href=&quot;https://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt; as well as HTML for pages. Markdown is a great choice for pages with a simple content structure (just paragraphs, headings and images), as it&amp;rsquo;s less verbose than raw HTML. Let&amp;rsquo;s try it out on the next page.</source>
          <target state="translated">Jekyll supports &lt;a href=&quot;https://daringfireball.net/projects/markdown/syntax&quot;&gt;Markdown&lt;/a&gt; as well as HTML for pages. Markdown is a great choice for pages with a simple content structure (just paragraphs, headings and images), as it&amp;rsquo;s less verbose than raw HTML. Let&amp;rsquo;s try it out on the next page.</target>
        </trans-unit>
        <trans-unit id="4d86edd2aa624b27088d705b31d4b2dde59375a7" translate="yes" xml:space="preserve">
          <source>Jekyll supports loading data from &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;, &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Tab-separated_values&quot;&gt;TSV&lt;/a&gt; files located in the &lt;code&gt;_data&lt;/code&gt; directory. Note that CSV and TSV files &lt;em&gt;must&lt;/em&gt; contain a header row.</source>
          <target state="translated">Jekyll supports loading data from &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;, &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Tab-separated_values&quot;&gt;TSV&lt;/a&gt; files located in the &lt;code&gt;_data&lt;/code&gt; directory. Note that CSV and TSV files &lt;em&gt;must&lt;/em&gt; contain a header row.</target>
        </trans-unit>
        <trans-unit id="5a88d78d1f9899a437aa358de44fe1d1d38bcfd3" translate="yes" xml:space="preserve">
          <source>Jekyll supports loading data from &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;, &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt; files located in the &lt;code&gt;_data&lt;/code&gt; directory. Note that CSV files &lt;em&gt;must&lt;/em&gt; contain a header row.</source>
          <target state="translated">Jekyll은 &lt;code&gt;_data&lt;/code&gt; 디렉토리 에있는 &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; , &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt; 및 &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt; 파일 에서 데이터로드를 지원합니다 . CSV 파일 &lt;em&gt;은&lt;/em&gt; 헤더 행을 포함 &lt;em&gt;해야&lt;/em&gt; 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="e1ce9132b7073ec4bd890475c43d39d722bbf7c5" translate="yes" xml:space="preserve">
          <source>Jekyll supports loading data from YAML, JSON, and CSV files located in a &lt;code&gt;_data&lt;/code&gt; directory. Data files are a great way to separate content from source code to make the site easier to maintain.</source>
          <target state="translated">Jekyll supports loading data from YAML, JSON, and CSV files located in a &lt;code&gt;_data&lt;/code&gt; directory. Data files are a great way to separate content from source code to make the site easier to maintain.</target>
        </trans-unit>
        <trans-unit id="cb6c67edc0dab202898b18be5c476739c32221f1" translate="yes" xml:space="preserve">
          <source>Jekyll supports permalinks that contain neither a trailing slash nor a file extension, but this requires additional support from the web server to properly serve. When using these types of permalinks, output files written to disk will still have the proper file extension (typically &lt;code&gt;.html&lt;/code&gt;), so the web server must be able to map requests without file extensions to these files.</source>
          <target state="translated">Jekyll은 후행 슬래시 나 파일 확장자가 포함되지 않은 퍼머 링크를 지원하지만, 제대로 작동하려면 웹 서버의 추가 지원이 필요합니다. 이러한 유형의 영구 링크를 사용할 때 디스크에 기록 된 출력 파일은 여전히 ​​올바른 파일 확장자 (일반적으로 &lt;code&gt;.html&lt;/code&gt; )를 가지므로 웹 서버는 파일 확장자가없는 요청을 이러한 파일에 맵핑 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="b0613f7e22216b0d97a46cb92e154dce22ac1ff0" translate="yes" xml:space="preserve">
          <source>Jekyll themes set default layouts, includes, and stylesheets. However, you can override any of the theme defaults with your own site content.</source>
          <target state="translated">Jekyll 테마는 기본 레이아웃, 포함 및 스타일 시트를 설정합니다. 그러나 자신의 사이트 컨텐츠로 테마 기본값을 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c767e23f5a22319259cb447f562ce0826acbd058" translate="yes" xml:space="preserve">
          <source>Jekyll traverses your site looking for files to process. Any files with &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt; are subject to processing. For each of these files, Jekyll makes a variety of data available via &lt;a href=&quot;../liquid/index&quot;&gt;Liquid&lt;/a&gt;. The following is a reference of the available data.</source>
          <target state="translated">Jekyll traverses your site looking for files to process. Any files with &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt; are subject to processing. For each of these files, Jekyll makes a variety of data available via &lt;a href=&quot;../liquid/index&quot;&gt;Liquid&lt;/a&gt;. The following is a reference of the available data.</target>
        </trans-unit>
        <trans-unit id="b14d294b4a5a02070c4e47c5f1097b5b051410ba" translate="yes" xml:space="preserve">
          <source>Jekyll traverses your site looking for files to process. Any files with &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt; are subject to processing. For each of these files, Jekyll makes a variety of data available via the &lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid templating system&lt;/a&gt;. The following is a reference of the available data.</source>
          <target state="translated">Jekyll은 처리 할 파일을 찾기 위해 사이트를 탐색합니다. &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML 프론트 물질&lt;/a&gt; 이있는 모든 파일 은 처리 대상입니다. 이러한 각 파일에 대해 Jekyll은 &lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid templating 시스템을&lt;/a&gt; 통해 다양한 데이터를 사용할 수있게 합니다 . 다음은 사용 가능한 데이터에 대한 참조입니다.</target>
        </trans-unit>
        <trans-unit id="7b80e53a19b7c75cad65aedd5f21d9647b0b06f4" translate="yes" xml:space="preserve">
          <source>Jekyll treats these files the same as a regular page, in that the output file will be placed in the same directory that it came from. For instance, if you have a file named &lt;code&gt;css/styles.scss&lt;/code&gt; in your site&amp;rsquo;s source folder, Jekyll will process it and put it in your site&amp;rsquo;s destination folder under &lt;code&gt;css/styles.css&lt;/code&gt;.</source>
          <target state="translated">Jekyll은 이러한 파일을 일반 페이지와 동일하게 처리합니다. 출력 파일은 원래 파일과 동일한 디렉토리에 배치됩니다. 예를 들어, 사이트의 소스 폴더에 &lt;code&gt;css/styles.scss&lt;/code&gt; 라는 파일이 있으면 Jekyll이 파일을 처리하여 &lt;code&gt;css/styles.css&lt;/code&gt; 아래의 사이트 대상 폴더에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="f73d83df7e9a0ece6ec12b1b50556d49a27f48ff" translate="yes" xml:space="preserve">
          <source>Jekyll uses the &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; templating language to process templates.</source>
          <target state="translated">Jekyll uses the &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; templating language to process templates.</target>
        </trans-unit>
        <trans-unit id="8bc77ad887f5021280263c947d7e9ba538afd6ac" translate="yes" xml:space="preserve">
          <source>Jekyll uses the &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; templating language to process templates. All of the standard Liquid &lt;a href=&quot;https://shopify.github.io/liquid/tags/control-flow/&quot;&gt;tags&lt;/a&gt; and &lt;a href=&quot;https://shopify.github.io/liquid/filters/abs/&quot;&gt;filters&lt;/a&gt; are supported. To make common tasks easier, Jekyll even adds a few handy filters and tags of its own, all of which you can find on this page. Jekyll even lets you come up with your own tags via plugins.</source>
          <target state="translated">Jekyll은 &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; templating 언어를 사용하여 템플릿을 처리합니다. 모든 표준 Liquid &lt;a href=&quot;https://shopify.github.io/liquid/tags/control-flow/&quot;&gt;태그&lt;/a&gt; 및 &lt;a href=&quot;https://shopify.github.io/liquid/filters/abs/&quot;&gt;필터&lt;/a&gt; 가 지원됩니다. Jekyll은 일반적인 작업을 쉽게하기 위해이 페이지에서 찾을 수있는 몇 가지 편리한 필터와 태그를 추가합니다. Jekyll은 플러그인을 통해 자신 만의 태그를 만들 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="98c1feeb240ca9f85a5898de8492c75acc86d3be" translate="yes" xml:space="preserve">
          <source>Jekyll uses the &lt;code&gt;listen&lt;/code&gt; gem to watch for changes when the &lt;code&gt;--watch&lt;/code&gt; switch is specified during a build or serve. While &lt;code&gt;listen&lt;/code&gt; has built-in support for UNIX systems, it may require an extra gem for compatibility with Windows.</source>
          <target state="translated">지킬은 사용 &lt;code&gt;listen&lt;/code&gt; 때 변화를보기 위해 보석을 &lt;code&gt;--watch&lt;/code&gt; 스위치가 빌드 중에 지정 또는 역할을한다. &lt;code&gt;listen&lt;/code&gt; 은 UNIX 시스템을 기본적으로 지원 하지만 Windows와의 호환성을 위해 추가 gem이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9dc8584b9d061d2a48af50a6e913d9bc51afb984" translate="yes" xml:space="preserve">
          <source>Jekyll will apply all of the configuration settings you specify in the &lt;code&gt;defaults&lt;/code&gt; section of your &lt;code&gt;_config.yml&lt;/code&gt; file. However, you can choose to override settings from other scope/values pair by specifying a more specific path for the scope.</source>
          <target state="translated">Jekyll은 &lt;code&gt;_config.yml&lt;/code&gt; 파일 의 &lt;code&gt;defaults&lt;/code&gt; 섹션 에서 지정한 모든 구성 설정을 적용 합니다. 그러나 범위에 대해보다 구체적인 경로를 지정하여 다른 범위 / 값 쌍의 설정을 무시하도록 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a11450ec20fa2068858e6fb5a90eb196fc059da5" translate="yes" xml:space="preserve">
          <source>Jekyll will apply all of the configuration settings you specify in the &lt;code&gt;defaults&lt;/code&gt; section of your &lt;code&gt;_config.yml&lt;/code&gt; file. You can choose to override settings from other scope/values pair by specifying a more specific path for the scope.</source>
          <target state="translated">Jekyll will apply all of the configuration settings you specify in the &lt;code&gt;defaults&lt;/code&gt; section of your &lt;code&gt;_config.yml&lt;/code&gt; file. You can choose to override settings from other scope/values pair by specifying a more specific path for the scope.</target>
        </trans-unit>
        <trans-unit id="ec5df39ca8b217af9fdeedd6a19aae0269168d48" translate="yes" xml:space="preserve">
          <source>Jekyll will automatically require all whitelisted &lt;code&gt;runtime_dependencies&lt;/code&gt; of your theme-gem even if they&amp;rsquo;re not explicitly included under the &lt;code&gt;plugins&lt;/code&gt; array in the site&amp;rsquo;s config file. (Note: whitelisting is only required when building or serving with the &lt;code&gt;--safe&lt;/code&gt; option.)</source>
          <target state="translated">Jekyll은 사이트 구성 파일의 &lt;code&gt;plugins&lt;/code&gt; 배열에 명시 적으로 포함되어 있지 않더라도 테마-젬의 모든 허용 된 &lt;code&gt;runtime_dependencies&lt;/code&gt; 를 자동으로 요구 합니다. (참고 : 화이트리스트는 &lt;code&gt;--safe&lt;/code&gt; 옵션으로 빌드하거나 제공 할 때만 필요합니다 .)</target>
        </trans-unit>
        <trans-unit id="cf1948f6a6c35c37faab5e8a2daf5dafc8a832c4" translate="yes" xml:space="preserve">
          <source>Jekyll will look first to your site&amp;rsquo;s content before looking to the theme&amp;rsquo;s defaults for any requested file in the following folders:</source>
          <target state="translated">Jekyll은 다음 폴더에서 요청 된 파일의 테마 기본값을 찾기 전에 사이트의 내용을 먼저 찾습니다.</target>
        </trans-unit>
        <trans-unit id="15cdb1085a422b73cafd0b3daa9e2568ffd30a22" translate="yes" xml:space="preserve">
          <source>Jekyll will look for the referenced file (in this case, &lt;code&gt;footer.html&lt;/code&gt;) in the &lt;code&gt;_includes&lt;/code&gt; directory at the root of your source directory and insert its contents.</source>
          <target state="translated">Jekyll은 소스 디렉토리의 루트 에있는 &lt;code&gt;_includes&lt;/code&gt; 디렉토리에서 참조 된 파일 (이 경우 &lt;code&gt;footer.html&lt;/code&gt; )을 찾아 내용을 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="cbb8af1f0a6b9e0a078358fca37d17f598256363" translate="yes" xml:space="preserve">
          <source>Jekyll will only convert files that have a YAML header at the top, even for converters you add using a plugin.</source>
          <target state="translated">Jekyll은 플러그인을 사용하여 추가 한 변환기의 경우에도 상단에 YAML 헤더가있는 파일 만 변환합니다.</target>
        </trans-unit>
        <trans-unit id="6e07a9c1e541edebe0ee5b20ad852eafd9ece454" translate="yes" xml:space="preserve">
          <source>Jekyll will read-in a &lt;code&gt;_config.yml&lt;/code&gt; at the root of the theme-gem and merge its data into the site&amp;rsquo;s existing configuration data.</source>
          <target state="translated">Jekyll will read-in a &lt;code&gt;_config.yml&lt;/code&gt; at the root of the theme-gem and merge its data into the site&amp;rsquo;s existing configuration data.</target>
        </trans-unit>
        <trans-unit id="3765b73abf718ce5256390fa98fe5c83c8d821ec" translate="yes" xml:space="preserve">
          <source>Jekyll&amp;rsquo;s default settings cannot be overridden by a theme-config. That &lt;em&gt;ball is still in the user&amp;rsquo;s court.&lt;/em&gt;</source>
          <target state="translated">Jekyll&amp;rsquo;s default settings cannot be overridden by a theme-config. That &lt;em&gt;ball is still in the user&amp;rsquo;s court.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2c27dc79dfcd97a956c12f99f1262ad706cbd59b" translate="yes" xml:space="preserve">
          <source>Jekyll&amp;rsquo;s growing use is producing a wide variety of tutorials, frameworks, extensions, examples, and other resources that can be very helpful. Below is a collection of links to some of the most popular Jekyll resources.</source>
          <target state="translated">Jekyll의 증가하는 사용은 매우 유용한 다양한 자습서, 프레임 워크, 확장, 예제 및 기타 리소스를 생성하고 있습니다. 다음은 가장 인기있는 Jekyll 리소스에 대한 링크 모음입니다.</target>
        </trans-unit>
        <trans-unit id="87040c2c2ca8dd7dd1f199bb3b01450f1fd6e925" translate="yes" xml:space="preserve">
          <source>Jekyll-Admin for Rails</source>
          <target state="translated">레일 용 지킬 관리자</target>
        </trans-unit>
        <trans-unit id="2d83d9002b08fdc2cc164e439677e784c1a043ff" translate="yes" xml:space="preserve">
          <source>Jekyllconf</source>
          <target state="translated">Jekyllconf</target>
        </trans-unit>
        <trans-unit id="6bdf1cf399ad963e0a54c8aa9b93779421ed5621" translate="yes" xml:space="preserve">
          <source>Just about any traditional web hosting provider will let you upload files to their servers over FTP. To upload a Jekyll site to a web host using FTP, simply run the &lt;code&gt;jekyll build&lt;/code&gt; command and copy the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder to the root folder of your hosting account. This is most likely to be the &lt;code&gt;httpdocs&lt;/code&gt; or &lt;code&gt;public_html&lt;/code&gt; folder on most hosting providers.</source>
          <target state="translated">전통적인 웹 호스팅 제공 업체는 FTP를 통해 서버에 파일을 업로드 할 수 있습니다. FTP를 사용하여 Jekyll 사이트를 웹 호스트에 업로드하려면 &lt;code&gt;jekyll build&lt;/code&gt; 명령을 실행 하고 생성 된 &lt;code&gt;_site&lt;/code&gt; 폴더 의 내용을 호스팅 계정의 루트 폴더에 복사하십시오. 대부분의 호스팅 제공 업체 에서 &lt;code&gt;httpdocs&lt;/code&gt; 또는 &lt;code&gt;public_html&lt;/code&gt; 폴더 일 가능성이 높습니다 .</target>
        </trans-unit>
        <trans-unit id="2ed5147f04a311fb5f5d747f6b09941b7fc9a782" translate="yes" xml:space="preserve">
          <source>Just about every web server configuration you come across will look for an HTML file called &lt;code&gt;index.html&lt;/code&gt; (by convention) in the site&amp;rsquo;s root folder and display that as the homepage. Unless the web server you&amp;rsquo;re using is configured to look for some different filename as the default, this file will turn into the homepage of your Jekyll-generated site.</source>
          <target state="translated">거의 모든 웹 서버 구성이 사이트의 루트 폴더에서 &lt;code&gt;index.html&lt;/code&gt; (규칙에 따라) 이라는 HTML 파일을 찾아 홈페이지로 표시합니다. 사용하는 웹 서버가 기본적으로 다른 파일 이름을 찾도록 구성되어 있지 않으면이 파일은 Jekyll이 생성 한 사이트의 홈페이지로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="42cb84d3edc32b5b2f4400649263390331b44d18" translate="yes" xml:space="preserve">
          <source>Just add the following line:</source>
          <target state="translated">다음 줄을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="0402a4371d48c94d8742dfa8a73a7366e817e0d9" translate="yes" xml:space="preserve">
          <source>Just after site reset</source>
          <target state="translated">사이트 재설정 직후</target>
        </trans-unit>
        <trans-unit id="433a432fd1262d35a30183d9f6075570af8bc954" translate="yes" xml:space="preserve">
          <source>Just after the site initializes, but before setup &amp;amp; render. Good for modifying the configuration of the site.</source>
          <target state="translated">사이트가 초기화 된 직후, 설정 및 렌더링 직전 사이트 구성을 수정하는 데 좋습니다.</target>
        </trans-unit>
        <trans-unit id="c9895275f3f5f6ebb98bbd5981f6e9aa63e7fc27" translate="yes" xml:space="preserve">
          <source>Just after the site initializes. Good for modifying the configuration of the site. Triggered once per build / serve session</source>
          <target state="translated">Just after the site initializes. Good for modifying the configuration of the site. Triggered once per build / serve session</target>
        </trans-unit>
        <trans-unit id="322810c9c79065292b6a1f1ff44477b5d9415eb1" translate="yes" xml:space="preserve">
          <source>Just after the site resets during regeneration</source>
          <target state="translated">Just after the site resets during regeneration</target>
        </trans-unit>
        <trans-unit id="ebb6b1e30faadd702ac129f2183d1aa471da18d8" translate="yes" xml:space="preserve">
          <source>Just before rendering a document</source>
          <target state="translated">문서를 렌더링하기 직전에</target>
        </trans-unit>
        <trans-unit id="1a8117dd57c47c84d1c161dd2ea8fdef67df5f30" translate="yes" xml:space="preserve">
          <source>Just before rendering a page</source>
          <target state="translated">페이지를 렌더링하기 직전에</target>
        </trans-unit>
        <trans-unit id="832cf101757761bef14d4d8fdba336cebe396b37" translate="yes" xml:space="preserve">
          <source>Just before rendering a post</source>
          <target state="translated">게시물을 렌더링하기 직전에</target>
        </trans-unit>
        <trans-unit id="46e54c34b1deecaf4f770c41a5ff5f0dec8680f3" translate="yes" xml:space="preserve">
          <source>Just before rendering the whole site</source>
          <target state="translated">전체 사이트를 렌더링하기 직전에</target>
        </trans-unit>
        <trans-unit id="dc920374c836b8aaf27b60247c0c070b7b18bb10" translate="yes" xml:space="preserve">
          <source>Just like posts you&amp;rsquo;ll need to create a layout for authors.</source>
          <target state="translated">Just like posts you&amp;rsquo;ll need to create a layout for authors.</target>
        </trans-unit>
        <trans-unit id="5c6dc8d54be2031b84b4dead0478976ff80780cc" translate="yes" xml:space="preserve">
          <source>Keep building Jekyll sites!</source>
          <target state="translated">Keep building Jekyll sites!</target>
        </trans-unit>
        <trans-unit id="385ea57ce0708a624c199f8c292a3b2a72577a09" translate="yes" xml:space="preserve">
          <source>KeyCDN</source>
          <target state="translated">KeyCDN</target>
        </trans-unit>
        <trans-unit id="01af7c46420acf792e3b43039584478ec7774e5b" translate="yes" xml:space="preserve">
          <source>Kickster</source>
          <target state="translated">Kickster</target>
        </trans-unit>
        <trans-unit id="2918c8c92bc729b976aacffa8804fee11f217d81" translate="yes" xml:space="preserve">
          <source>Kickster provides a basic Jekyll project setup packed with web best practises and useful optimization tools increasing your overall project quality. Kickster ships with automated and worry-free deployment scripts for GitHub Pages.</source>
          <target state="translated">Kickster는 웹 모범 사례와 전체 프로젝트 품질을 높이는 유용한 최적화 도구로 구성된 기본 Jekyll 프로젝트 설정을 제공합니다. Kickster는 GitHub 페이지를위한 자동화 된 걱정없는 배포 스크립트와 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="c39fcedccb3db769e93cb4895114218594eb06bd" translate="yes" xml:space="preserve">
          <source>Kramdown</source>
          <target state="translated">Kramdown</target>
        </trans-unit>
        <trans-unit id="67169c9661e2d73dbf62f40570b382c8e40debd7" translate="yes" xml:space="preserve">
          <source>Kramdown comes with optional support for LaTeX to PNG rendering via &lt;a href=&quot;https://www.mathjax.org&quot;&gt;MathJax&lt;/a&gt; within math blocks. See the Kramdown documentation on &lt;a href=&quot;http://kramdown.gettalong.org/syntax.html#math-blocks&quot;&gt;math blocks&lt;/a&gt; and &lt;a href=&quot;http://kramdown.gettalong.org/converter/html.html#math-support&quot;&gt;math support&lt;/a&gt; for more details. MathJax requires you to include JavaScript or CSS to render the LaTeX, e.g.</source>
          <target state="translated">Kramdown은 수학 블록 내에서 &lt;a href=&quot;https://www.mathjax.org&quot;&gt;MathJax&lt;/a&gt; 를 통해 LaTeX to PNG 렌더링을 선택적으로 지원합니다 . 자세한 내용은 &lt;a href=&quot;http://kramdown.gettalong.org/syntax.html#math-blocks&quot;&gt;수학 블록&lt;/a&gt; 및 &lt;a href=&quot;http://kramdown.gettalong.org/converter/html.html#math-support&quot;&gt;수학 지원에&lt;/a&gt; 대한 Kramdown 설명서 를 참조하십시오. MathJax는 LaTeX를 렌더링하기 위해 JavaScript 또는 CSS를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="9532190afe41c9d105961ea33c3b4e933a4c2659" translate="yes" xml:space="preserve">
          <source>Kramdown is the default Markdown renderer for Jekyll. Below is a list of the currently supported options:</source>
          <target state="translated">Kramdown is the default Markdown renderer for Jekyll. Below is a list of the currently supported options:</target>
        </trans-unit>
        <trans-unit id="93824e5ca2f8079177705f22fa746e46881b0c07" translate="yes" xml:space="preserve">
          <source>Label of the containing collection.</source>
          <target state="translated">포함하는 컬렉션의 레이블.</target>
        </trans-unit>
        <trans-unit id="972ad8d8a50397ba8c02433ed8f048eeb4074b85" translate="yes" xml:space="preserve">
          <source>Layout</source>
          <target state="translated">Layout</target>
        </trans-unit>
        <trans-unit id="73f83dd05a0b36c11a75d68e21be4555e7a6894c" translate="yes" xml:space="preserve">
          <source>Layout inheritance is useful when you want to add something to an existing layout for a portion of documents on your site. A common example of this is blog posts, you might want a post to display the date and author but otherwise be identical to your base layout.</source>
          <target state="translated">Layout inheritance is useful when you want to add something to an existing layout for a portion of documents on your site. A common example of this is blog posts, you might want a post to display the date and author but otherwise be identical to your base layout.</target>
        </trans-unit>
        <trans-unit id="77918f5f64d8b83f4bc213c3624d8dabb59f643a" translate="yes" xml:space="preserve">
          <source>Layout metadata</source>
          <target state="translated">레이아웃 메타 데이터</target>
        </trans-unit>
        <trans-unit id="8faba99c8261229414474311be76d70eda70ff99" translate="yes" xml:space="preserve">
          <source>Layout specific information + the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;. Custom variables set via front matter in layouts will be available here.</source>
          <target state="translated">Layout specific information + the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;. Custom variables set via front matter in layouts will be available here.</target>
        </trans-unit>
        <trans-unit id="93d4f5bc1ef1791e5c42ae89bfcf3a70ede43c95" translate="yes" xml:space="preserve">
          <source>Layout specific information + the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt;. Custom variables set via the YAML Front Matter in layouts will be available here.</source>
          <target state="translated">레이아웃 특정 정보 + &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML 전면 문제&lt;/a&gt; . 레이아웃에서 YAML Front Matter를 통해 설정된 맞춤 변수는 여기에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28e6f54e33a1151bfd4c7cc4affd14df3525f2db" translate="yes" xml:space="preserve">
          <source>Layouts</source>
          <target state="translated">Layouts</target>
        </trans-unit>
        <trans-unit id="dd51e21ca720f36618c7c70041ff580637c16e54" translate="yes" xml:space="preserve">
          <source>Layouts Directory</source>
          <target state="translated">Layouts Directory</target>
        </trans-unit>
        <trans-unit id="f97f89c886ff0080aba4f2ac74175d1a7897953a" translate="yes" xml:space="preserve">
          <source>Layouts and includes</source>
          <target state="translated">레이아웃 및 포함</target>
        </trans-unit>
        <trans-unit id="5ee30430e49e94fd3d54e1f824556844e59ca308" translate="yes" xml:space="preserve">
          <source>Layouts are templates that wrap around your content. They allow you to have the source code for your template in one place so you don&amp;rsquo;t have to repeat things like your navigation and footer on every page.</source>
          <target state="translated">Layouts are templates that wrap around your content. They allow you to have the source code for your template in one place so you don&amp;rsquo;t have to repeat things like your navigation and footer on every page.</target>
        </trans-unit>
        <trans-unit id="77c006d93ddb7079eb7692fe36938e82d947f258" translate="yes" xml:space="preserve">
          <source>Layouts live in the &lt;code&gt;_layouts&lt;/code&gt; directory. The convention is to have a base template called &lt;code&gt;default.html&lt;/code&gt; and have other layouts &lt;a href=&quot;#inheritance&quot;&gt;inherit&lt;/a&gt; from this as needed.</source>
          <target state="translated">Layouts live in the &lt;code&gt;_layouts&lt;/code&gt; directory. The convention is to have a base template called &lt;code&gt;default.html&lt;/code&gt; and have other layouts &lt;a href=&quot;#inheritance&quot;&gt;inherit&lt;/a&gt; from this as needed.</target>
        </trans-unit>
        <trans-unit id="90cd4ba453bd97cb192e5581bdc2c56b6e0edc1c" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s add a page which lists all the authors on the site. Jekyll makes the collection available at &lt;code&gt;site.authors&lt;/code&gt;.</source>
          <target state="translated">Let&amp;rsquo;s add a page which lists all the authors on the site. Jekyll makes the collection available at &lt;code&gt;site.authors&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30f3bfbb611eb84ffdf89a3fdbe9fd14107cd1dc" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s add your first file. Create &lt;code&gt;index.html&lt;/code&gt; in the root with the following content:</source>
          <target state="translated">Let&amp;rsquo;s add your first file. Create &lt;code&gt;index.html&lt;/code&gt; in the root with the following content:</target>
        </trans-unit>
        <trans-unit id="ff687a0fcd51d31c0ccfaa5ecb055e83268a23b3" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s change the &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; on your site to populate using front matter:</source>
          <target state="translated">Let&amp;rsquo;s change the &lt;code&gt;&amp;lt;title&amp;gt;&lt;/code&gt; on your site to populate using front matter:</target>
        </trans-unit>
        <trans-unit id="2384fd15aa145052f5176535d4f9d2bd6d0ba561" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s list the posts an author has published on their page. To do this you need to match the author &lt;code&gt;short_name&lt;/code&gt; to the post &lt;code&gt;author&lt;/code&gt;. You use this to filter the posts by author.</source>
          <target state="translated">Let&amp;rsquo;s list the posts an author has published on their page. To do this you need to match the author &lt;code&gt;short_name&lt;/code&gt; to the post &lt;code&gt;author&lt;/code&gt; . You use this to filter the posts by author.</target>
        </trans-unit>
        <trans-unit id="aac0e752d8e90d8b9ab73d572393414c2c492535" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s look at fleshing out authors so each author has their own page with a blurb and the posts they&amp;rsquo;ve published.</source>
          <target state="translated">Let&amp;rsquo;s look at fleshing out authors so each author has their own page with a blurb and the posts they&amp;rsquo;ve published.</target>
        </trans-unit>
        <trans-unit id="3d59965152acf6883cee252b37209236be3cceb2" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say that you want to add a default layout to all pages and posts in your site. You would add this to your &lt;code&gt;_config.yml&lt;/code&gt; file:</source>
          <target state="translated">사이트의 모든 페이지와 게시물에 기본 레이아웃을 추가한다고 가정 해 보겠습니다. 이것을 &lt;code&gt;_config.yml&lt;/code&gt; 파일에 추가 합니다 :</target>
        </trans-unit>
        <trans-unit id="70555ee6c1f592b66362f61436939844b36c5e63" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say, for a second example, you want to override Minima&amp;rsquo;s footer. In your Jekyll site, create an &lt;code&gt;_includes&lt;/code&gt; folder and add a file in it called &lt;code&gt;footer.html&lt;/code&gt;. Jekyll will now use your site&amp;rsquo;s &lt;code&gt;footer.html&lt;/code&gt; file instead of the &lt;code&gt;footer.html&lt;/code&gt; file from the Minima theme gem.</source>
          <target state="translated">두 번째 예를 들어 Minima의 바닥 글을 재정의한다고 가정 해 봅시다. Jekyll 사이트에서 &lt;code&gt;_includes&lt;/code&gt; 폴더를 작성하고 &lt;code&gt;footer.html&lt;/code&gt; 이라는 파일을 추가하십시오 . 지킬 이제 사이트의 사용 &lt;code&gt;footer.html&lt;/code&gt; 를 파일 대신 &lt;code&gt;footer.html&lt;/code&gt; 를의 최소값 테마 보석에서 파일을.</target>
        </trans-unit>
        <trans-unit id="b11ef11b9735a85f062e52730ac1e7b73da06a98" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s take this a step further and highlight the current page in the navigation.</source>
          <target state="translated">Let&amp;rsquo;s take this a step further and highlight the current page in the navigation.</target>
        </trans-unit>
        <trans-unit id="c58bd40e95aef48eee67a645bb4f78e1797cdf10" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT license.</source>
          <target state="translated">MIT 라이센스에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="670ce9fa318e5a320760111541faff1035dbfbff" translate="yes" xml:space="preserve">
          <source>Limit the number of posts to parse and publish.</source>
          <target state="translated">파싱 ​​및 게시 할 게시물 수를 제한하십시오.</target>
        </trans-unit>
        <trans-unit id="d08aaa54e89dc5b36c7da4c9d528008df5d04f3b" translate="yes" xml:space="preserve">
          <source>Line numbers</source>
          <target state="translated">줄 번호</target>
        </trans-unit>
        <trans-unit id="c996994da4b864e5a31a81359f1f093458f633aa" translate="yes" xml:space="preserve">
          <source>Link to authors page</source>
          <target state="translated">Link to authors page</target>
        </trans-unit>
        <trans-unit id="a8482def1ff83728e1fb9a6d899311c4dbb6cd11" translate="yes" xml:space="preserve">
          <source>Linking to a PDF for readers to download:</source>
          <target state="translated">독자가 다운로드 할 수 있도록 PDF로 연결 :</target>
        </trans-unit>
        <trans-unit id="d20b0cfa02620cff8357fb318e9cd62b00fd373f" translate="yes" xml:space="preserve">
          <source>Linking to pages</source>
          <target state="translated">페이지에 연결</target>
        </trans-unit>
        <trans-unit id="afd2dc5f7c324f512f99a7734c0386d9016751a1" translate="yes" xml:space="preserve">
          <source>Linking to pages, collections and posts (the new and improved way)</source>
          <target state="translated">페이지, 컬렉션 및 게시물에 연결 (새롭고 개선 된 방법)</target>
        </trans-unit>
        <trans-unit id="8da831e8f499f7d7a56c6d3446756c24c1fc9859" translate="yes" xml:space="preserve">
          <source>Linking to posts</source>
          <target state="translated">게시물에 연결</target>
        </trans-unit>
        <trans-unit id="3def7d920e411866077e94461efbacc52f7aeb8e" translate="yes" xml:space="preserve">
          <source>Linking to posts (the old way)</source>
          <target state="translated">게시물에 연결 (구식)</target>
        </trans-unit>
        <trans-unit id="6379e034bab2e3be9e7c39a0b85a6898660412a9" translate="yes" xml:space="preserve">
          <source>Linking without regard to permalink styles</source>
          <target state="translated">퍼머 링크 스타일에 관계없이 링크</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="4ad3e2141b2afe3691f32c2af3fc5cc3653cd453" translate="yes" xml:space="preserve">
          <source>Liquid</source>
          <target state="translated">Liquid</target>
        </trans-unit>
        <trans-unit id="7f26ed43583414deba0ddd1befb4adadedbfeb84" translate="yes" xml:space="preserve">
          <source>Liquid Attributes</source>
          <target state="translated">액체 속성</target>
        </trans-unit>
        <trans-unit id="5ad177e08ab39d6276f0d8860a328284e1ffcfa3" translate="yes" xml:space="preserve">
          <source>Liquid Attributes Available</source>
          <target state="translated">사용 가능한 액체 속성</target>
        </trans-unit>
        <trans-unit id="3ed0d7e900ff05c6937befa127ec4d2eb3452cab" translate="yes" xml:space="preserve">
          <source>Liquid Filters</source>
          <target state="translated">Liquid Filters</target>
        </trans-unit>
        <trans-unit id="e0745becb677ab37dbf8043a9a47294186d7f108" translate="yes" xml:space="preserve">
          <source>Liquid Options</source>
          <target state="translated">액체 옵션</target>
        </trans-unit>
        <trans-unit id="ad13a6aea2f060b03c1bbfcd3acb3de84c4ad8ef" translate="yes" xml:space="preserve">
          <source>Liquid filters</source>
          <target state="translated">액체 필터</target>
        </trans-unit>
        <trans-unit id="dffe002b068673f77763dea3bb55e93cecb9293e" translate="yes" xml:space="preserve">
          <source>Liquid is where Jekyll starts to get more interesting. Liquid is a templating language which has three main parts: &lt;a href=&quot;#objects&quot;&gt;objects&lt;/a&gt;, &lt;a href=&quot;#tags&quot;&gt;tags&lt;/a&gt; and &lt;a href=&quot;#filters&quot;&gt;filters&lt;/a&gt;.</source>
          <target state="translated">Liquid is where Jekyll starts to get more interesting. Liquid is a templating language which has three main parts: &lt;a href=&quot;#objects&quot;&gt;objects&lt;/a&gt;, &lt;a href=&quot;#tags&quot;&gt;tags&lt;/a&gt; and &lt;a href=&quot;#filters&quot;&gt;filters&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5798e1e1a9a90ea8817c634157e8841ea70633e3" translate="yes" xml:space="preserve">
          <source>Liquid version 2.0 seems to break the use of &lt;code&gt;{{&lt;/code&gt; in templates. Unlike previous versions, using &lt;code&gt;{{&lt;/code&gt; in 2.0 triggers the following error:</source>
          <target state="translated">Liquid version 2.0 seems to break the use of &lt;code&gt;{{&lt;/code&gt; in templates. Unlike previous versions, using &lt;code&gt;{{&lt;/code&gt; in 2.0 triggers the following error:</target>
        </trans-unit>
        <trans-unit id="e0802e62c8890a9ef2c3f7f7bbff3ab1245c9e20" translate="yes" xml:space="preserve">
          <source>Liquid&amp;rsquo;s response to errors can be configured by setting &lt;code&gt;error_mode&lt;/code&gt;. The options are</source>
          <target state="translated">&lt;code&gt;error_mode&lt;/code&gt; 를 설정하여 오류에 대한 Liquid의 응답을 구성 할 수 있습니다 . 옵션은</target>
        </trans-unit>
        <trans-unit id="d7fe2c462dac24551a2cf9d6f5b82f81667cd59f" translate="yes" xml:space="preserve">
          <source>List author&amp;rsquo;s posts</source>
          <target state="translated">List author&amp;rsquo;s posts</target>
        </trans-unit>
        <trans-unit id="f055c3d931530bd151bf3ebea25d48d45d55d6d2" translate="yes" xml:space="preserve">
          <source>List posts</source>
          <target state="translated">List posts</target>
        </trans-unit>
        <trans-unit id="eeb4bd88aaf858f919bb23f92e4f32533740b378" translate="yes" xml:space="preserve">
          <source>Listen at the given hostname.</source>
          <target state="translated">주어진 호스트 이름을 듣습니다.</target>
        </trans-unit>
        <trans-unit id="b067bb7eddee644f3059b4dfb835e57469c1fc50" translate="yes" xml:space="preserve">
          <source>Listen on the given port.</source>
          <target state="translated">주어진 포트에서 들어보십시오.</target>
        </trans-unit>
        <trans-unit id="ebf07c506e526cbf87dcd9a845f15f84fbf346f2" translate="yes" xml:space="preserve">
          <source>Load up &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; and check that the active link in the navigation is green.</source>
          <target state="translated">Load up &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; and check that the active link in the navigation is green.</target>
        </trans-unit>
        <trans-unit id="6846bc143055702bf80aaffbe9d2e5ab222ed854" translate="yes" xml:space="preserve">
          <source>Local Install</source>
          <target state="translated">Local Install</target>
        </trans-unit>
        <trans-unit id="4406a849f645af35a2c07cd3e59f1514029789e7" translate="yes" xml:space="preserve">
          <source>Log in at &lt;a href=&quot;https://buddy.works&quot;&gt;https://buddy.works&lt;/a&gt; with your GitHub/Bitbucket account or email</source>
          <target state="translated">GitHub / Bitbucket 계정 또는 이메일 로 &lt;a href=&quot;https://buddy.works&quot;&gt;https://buddy.works에&lt;/a&gt; 로그인하십시오</target>
        </trans-unit>
        <trans-unit id="0c25dfe9b505b96331b509d1f1094d7a8bbbc7da" translate="yes" xml:space="preserve">
          <source>Logic to do the content conversion. Takes one argument: the raw content of the file (without YAML Front Matter). Must return a String.</source>
          <target state="translated">컨텐츠 변환을 수행하는 논리. 파일의 원시 내용 (YAML Front Matter 제외)을 인수로 사용합니다. 문자열을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="4f5283eb1f5b01265dfd539e401f6ed9ad13e131" translate="yes" xml:space="preserve">
          <source>Logic to do the content conversion. Takes one argument: the raw content of the file (without front matter). Must return a String.</source>
          <target state="translated">Logic to do the content conversion. Takes one argument: the raw content of the file (without front matter). Must return a String.</target>
        </trans-unit>
        <trans-unit id="2f416e634be06ac21d4b27f348175e29f30c0a9a" translate="yes" xml:space="preserve">
          <source>Make directory path values in configuration keys like `plugins_dir` relative to the current working directory, not the site source.</source>
          <target state="translated">Make directory path values in configuration keys like `plugins_dir` relative to the current working directory, not the site source.</target>
        </trans-unit>
        <trans-unit id="0d1f3dd0db67be21ebd2eb0848251f87de05b382" translate="yes" xml:space="preserve">
          <source>Make it executable (&lt;code&gt;chmod +x&lt;/code&gt;)</source>
          <target state="translated">그것을 실행 가능하게 만드십시오 ( &lt;code&gt;chmod +x&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="fbe74d6559d84810cabb4523111374acebd2a489" translate="yes" xml:space="preserve">
          <source>Make sure all your packages and repositories are up to date. Open a new Command Prompt or Powershell window and type &lt;code&gt;bash&lt;/code&gt;.</source>
          <target state="translated">Make sure all your packages and repositories are up to date. Open a new Command Prompt or Powershell window and type &lt;code&gt;bash&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="98ed2e07c71b746bf0180e8aa24d5bd3d3c109b3" translate="yes" xml:space="preserve">
          <source>Manual Deployment</source>
          <target state="translated">Manual Deployment</target>
        </trans-unit>
        <trans-unit id="07845da9bbd18384477ef867d7458a8ae623a38e" translate="yes" xml:space="preserve">
          <source>Manually</source>
          <target state="translated">Manually</target>
        </trans-unit>
        <trans-unit id="a5c619ea526efa335655e8e040b494049726275d" translate="yes" xml:space="preserve">
          <source>Manually Ordering Documents</source>
          <target state="translated">Manually Ordering Documents</target>
        </trans-unit>
        <trans-unit id="642c11c1d6e1b6df7dad686b9cc288e67e12904c" translate="yes" xml:space="preserve">
          <source>Markdown Options</source>
          <target state="translated">마크 다운 옵션</target>
        </trans-unit>
        <trans-unit id="b09e94d8992bb71ef39f1a828432c25aaf743e21" translate="yes" xml:space="preserve">
          <source>Markup Problems</source>
          <target state="translated">마크 업 문제</target>
        </trans-unit>
        <trans-unit id="28d6fb2c35c1d1c6a33c9e84a06a5d0a46922b5c" translate="yes" xml:space="preserve">
          <source>Math Support</source>
          <target state="translated">수학 지원</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="2adf3b7e76213053550011d5190ced3aeb722895" translate="yes" xml:space="preserve">
          <source>Minimum/Maximum delay before automatically reloading page.</source>
          <target state="translated">Minimum/Maximum delay before automatically reloading page.</target>
        </trans-unit>
        <trans-unit id="0b71350dd34e7bd8df3677854774845adbf253c5" translate="yes" xml:space="preserve">
          <source>Minute of the hour from the post&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</source>
          <target state="translated">Minute of the hour from the post&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</target>
        </trans-unit>
        <trans-unit id="cebaf24652aa816860b5113dfe9dc8588aa3ae90" translate="yes" xml:space="preserve">
          <source>Minute of the hour from the post's &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</source>
          <target state="translated">게시물 &lt;code&gt;date&lt;/code&gt; 시간의 분입니다 . (00..59)</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="89597b1d1e65f5625f359ebced3060dec2d5c149" translate="yes" xml:space="preserve">
          <source>Month from the post&amp;rsquo;s filename. (01..12) May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter.</source>
          <target state="translated">Month from the post&amp;rsquo;s filename. (01..12) May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter.</target>
        </trans-unit>
        <trans-unit id="ef9455fcbf8b2c60f67ca82fa6632a99edee00cb" translate="yes" xml:space="preserve">
          <source>Month from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">게시물 파일 이름의 월입니다. 문서의 &lt;code&gt;date&lt;/code&gt; YAML 관련 사항을 통해 무시 될 수 있음</target>
        </trans-unit>
        <trans-unit id="7bc1785779e50c8f50c295d478904fe761c00108" translate="yes" xml:space="preserve">
          <source>Month without leading zeros from the post&amp;rsquo;s filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter.</source>
          <target state="translated">Month without leading zeros from the post&amp;rsquo;s filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter.</target>
        </trans-unit>
        <trans-unit id="8de2bd51313c9e801e45ac73bea8a590465b26c8" translate="yes" xml:space="preserve">
          <source>Month without leading zeros from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">게시물의 파일 이름에서 선행 0이없는 월입니다. 문서의 &lt;code&gt;date&lt;/code&gt; YAML 관련 사항을 통해 무시 될 수 있음</target>
        </trans-unit>
        <trans-unit id="f7fd190a4337f66473d351957f69ce547933ce36" translate="yes" xml:space="preserve">
          <source>More fine-grained control over documents being written to disk can be exercised by setting &lt;code&gt;published: false&lt;/code&gt; (&lt;em&gt;&lt;code&gt;true&lt;/code&gt; by default&lt;/em&gt;) in the document's front matter.</source>
          <target state="translated">More fine-grained control over documents being written to disk can be exercised by setting &lt;code&gt;published: false&lt;/code&gt; (&lt;em&gt; &lt;code&gt;true&lt;/code&gt; by default&lt;/em&gt;) in the document's front matter.</target>
        </trans-unit>
        <trans-unit id="84c391f84e07bbc0730b8f14896da52d1928b519" translate="yes" xml:space="preserve">
          <source>More posts</source>
          <target state="translated">More posts</target>
        </trans-unit>
        <trans-unit id="20dfd39965d8d6de67925026c214817e26a391a6" translate="yes" xml:space="preserve">
          <source>Most traditional web hosting provider let you upload files to their servers over FTP. To upload a Jekyll site to a web host using FTP, run the &lt;code&gt;jekyll build&lt;/code&gt; command and copy the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder to the root folder of your hosting account. This is most likely to be the &lt;code&gt;httpdocs&lt;/code&gt; or &lt;code&gt;public_html&lt;/code&gt; folder on most hosting providers.</source>
          <target state="translated">Most traditional web hosting provider let you upload files to their servers over FTP. To upload a Jekyll site to a web host using FTP, run the &lt;code&gt;jekyll build&lt;/code&gt; command and copy the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder to the root folder of your hosting account. This is most likely to be the &lt;code&gt;httpdocs&lt;/code&gt; or &lt;code&gt;public_html&lt;/code&gt; folder on most hosting providers.</target>
        </trans-unit>
        <trans-unit id="d0bf0bf1fc26755d6dd3d0cd4f591fb0c8223d56" translate="yes" xml:space="preserve">
          <source>My categories have stopped working!</source>
          <target state="translated">내 카테고리가 작동을 멈췄습니다!</target>
        </trans-unit>
        <trans-unit id="409210cf5eca11f949b896395f0df153fb608809" translate="yes" xml:space="preserve">
          <source>Named HTML files</source>
          <target state="translated">명명 된 HTML 파일</target>
        </trans-unit>
        <trans-unit id="af6c6c60032b6347c216bd80b55f736adf9ba8ed" translate="yes" xml:space="preserve">
          <source>Named folders containing index HTML files</source>
          <target state="translated">색인 HTML 파일을 포함하는 명명 된 폴더</target>
        </trans-unit>
        <trans-unit id="a2c418f0923ad11cb2b3d108b0307de3bec5a403" translate="yes" xml:space="preserve">
          <source>Navigation should be on every page so adding it to your layout is the correct place to do this. Instead of adding it directly to the layout, let&amp;rsquo;s use this as an opportunity to learn about includes.</source>
          <target state="translated">Navigation should be on every page so adding it to your layout is the correct place to do this. Instead of adding it directly to the layout, let&amp;rsquo;s use this as an opportunity to learn about includes.</target>
        </trans-unit>
        <trans-unit id="b3c42dc846bdaebd8d91e72204aff8bea8445cef" translate="yes" xml:space="preserve">
          <source>Navigation source code can get complex, so sometimes it&amp;rsquo;s nice to move it into an include.</source>
          <target state="translated">Navigation source code can get complex, so sometimes it&amp;rsquo;s nice to move it into an include.</target>
        </trans-unit>
        <trans-unit id="1bd711a21d476e6fe66700859fd27013606d0d82" translate="yes" xml:space="preserve">
          <source>Netlify</source>
          <target state="translated">Netlify</target>
        </trans-unit>
        <trans-unit id="811ac39da5d9fbe02fcbbb846376b672d3d31860" translate="yes" xml:space="preserve">
          <source>Netlify provides Global CDN, Continuous Deployment, one click HTTPS and &lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;much more&lt;/a&gt;, providing developers a robust toolset for modern web projects, without added complexity. Netlify supports custom plugins for Jekyll and has a free plan for open source projects.</source>
          <target state="translated">Netlify provides Global CDN, Continuous Deployment, one click HTTPS and &lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;much more&lt;/a&gt;, providing developers a robust toolset for modern web projects, without added complexity. Netlify supports custom plugins for Jekyll and has a free plan for open source projects.</target>
        </trans-unit>
        <trans-unit id="e77e169ad6256bcd88fdf89a438584da538db3ad" translate="yes" xml:space="preserve">
          <source>Netlify provides Global CDN, Continuous Deployment, one click HTTPS and &lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;much more&lt;/a&gt;, providing developers the most robust toolset available for modern web projects, without added complexity. Netlify supports custom plugins for Jekyll and has a free plan for open source projects.</source>
          <target state="translated">Netlify 글로벌 CDN, 연속 배포 한 번 클릭 HTTPS 및 제공 &lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;훨씬 더&lt;/a&gt; 복잡성을 추가하지 않고 현대적인 웹 프로젝트에 대한 가장 강력한 도구 세트를 사용할 개발자를 제공합니다. Netlify는 Jekyll 용 사용자 정의 플러그인을 지원하며 오픈 소스 프로젝트에 대한 무료 계획이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f0a6fb6f3c8ce017ef991f62d064dc029d34205" translate="yes" xml:space="preserve">
          <source>Never built a website with GitHub Pages before? &lt;a href=&quot;http://jmcglone.com/guides/github-pages/&quot;&gt;See this marvelous guide by Jonathan McGlone&lt;/a&gt; to get you up and running. This guide will teach you what you need to know about Git, GitHub, and Jekyll to create your very own website on GitHub Pages.</source>
          <target state="translated">이전에 GitHub 페이지로 웹 사이트를 만든 적이 없습니까? &lt;a href=&quot;http://jmcglone.com/guides/github-pages/&quot;&gt;Jonathan McGlone의이 놀라운 안내서를 참조하여 시작하십시오&lt;/a&gt; . 이 가이드는 Git, GitHub 및 Jekyll에 대해 GitHub 페이지에 고유 한 웹 사이트를 만들기 위해 알아야 할 사항을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="bc4548b725bed832ca525597a79aaa19443571c5" translate="yes" xml:space="preserve">
          <source>New Config File Options</source>
          <target state="translated">새로운 구성 파일 옵션</target>
        </trans-unit>
        <trans-unit id="c1d497448ff591968a3b7a1dcf651a30c7319f8d" translate="yes" xml:space="preserve">
          <source>Next let&amp;rsquo;s update our Ruby gems:</source>
          <target state="translated">다음으로 Ruby gem을 업데이트하겠습니다 :</target>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="translated">다음 단계</target>
        </trans-unit>
        <trans-unit id="7c050c2c9a950271002405d5cee0f31db431d475" translate="yes" xml:space="preserve">
          <source>Next we&amp;rsquo;ll focus on creating a page for each post author.</source>
          <target state="translated">다음으로 각 게시물 작성자를위한 페이지를 만드는 데 중점을 둘 것입니다.</target>
        </trans-unit>
        <trans-unit id="4515148521e70239a1aa2232db5cc5405d1bc75f" translate="yes" xml:space="preserve">
          <source>Next we&amp;rsquo;re looking at one of Jekyll&amp;rsquo;s most popular features, blogging.</source>
          <target state="translated">다음으로 Jekyll의 가장 인기있는 기능 중 하나 인 블로깅을 살펴 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="4178e535dc29299aea5c6b70f8744aff3fb4ca53" translate="yes" xml:space="preserve">
          <source>Next you need to specify what layout you&amp;rsquo;re using in your page&amp;rsquo;s front matter. You can also use &lt;a href=&quot;../configuration/front-matter-defaults/index&quot;&gt;front matter defaults&lt;/a&gt; to save you from having to set this on every page.</source>
          <target state="translated">다음으로 페이지의 서문에서 사용중인 레이아웃을 지정해야합니다. 또한 &lt;a href=&quot;../configuration/front-matter-defaults/index&quot;&gt;서문 기본값&lt;/a&gt; 을 사용 하여 모든 페이지에서이를 설정하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="f312fe6f79e90daa529f37ccafdfa02243a77286" translate="yes" xml:space="preserve">
          <source>Next, add the following lines to hooks/post-receive and be sure Jekyll is installed on the server:</source>
          <target state="translated">다음으로 후크 / 포스트 후에 다음 줄을 추가하고 Jekyll이 서버에 설치되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5ff888289816dd3074a50bcf27e501021fdb8da3" translate="yes" xml:space="preserve">
          <source>Next, in the root directory of your Jekyll install, create a new directory called &lt;code&gt;category&lt;/code&gt; and then create a file for each category you want to list. For example, if you have a category &lt;code&gt;blog&lt;/code&gt; then create a file in the new directory called &lt;code&gt;blog.html&lt;/code&gt; with at least</source>
          <target state="translated">그런 다음 Jekyll 설치의 루트 디렉토리에 &lt;code&gt;category&lt;/code&gt; 라는 새 디렉토리 를 작성한 후 나열하려는 각 카테고리에 대한 파일을 작성하십시오. 예를 들어, &lt;code&gt;blog&lt;/code&gt; 카테고리가있는 경우 최소한 &lt;code&gt;blog.html&lt;/code&gt; 이라는 새 디렉토리에 파일을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="6f549129e2b42e6dba2456cd485a9a4febc44fba" translate="yes" xml:space="preserve">
          <source>Next, install Ruby. To do this, let&amp;rsquo;s use a repository from &lt;a href=&quot;https://www.brightbox.com/docs/ruby/ubuntu/&quot;&gt;BrightBox&lt;/a&gt;, which hosts optimized versions of Ruby for Ubuntu.</source>
          <target state="translated">다음으로 Ruby를 설치합니다. 이를 위해 Ubuntu 용 Ruby의 최적화 된 버전을 호스팅하는 &lt;a href=&quot;https://www.brightbox.com/docs/ruby/ubuntu/&quot;&gt;BrightBox&lt;/a&gt; 의 리포지토리를 사용하겠습니다 .</target>
        </trans-unit>
        <trans-unit id="708f2d3f4930982fbd401cfff5d9860647b92d77" translate="yes" xml:space="preserve">
          <source>Next, package your theme, by running the following command, replacing &lt;code&gt;jekyll-theme-awesome&lt;/code&gt; with the name of your theme:</source>
          <target state="translated">다음으로 &lt;code&gt;jekyll-theme-awesome&lt;/code&gt; 을 테마 이름으로 대체하여 다음 명령을 실행하여 테마를 패키지하십시오 .</target>
        </trans-unit>
        <trans-unit id="eeec6f21009462a4477d38f2189390d3d32c084f" translate="yes" xml:space="preserve">
          <source>Next, update your Ruby gems:</source>
          <target state="translated">다음으로 Ruby gem을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="f2560cbce63028d4ce27fdd2ae2588b9ae69ca1e" translate="yes" xml:space="preserve">
          <source>Nginx</source>
          <target state="translated">Nginx</target>
        </trans-unit>
        <trans-unit id="965e5ee2920d9cad862646c9da2c93c1d7eb66c5" translate="yes" xml:space="preserve">
          <source>No &lt;code&gt;sudo&lt;/code&gt; here.</source>
          <target state="translated">여기에 &lt;code&gt;sudo&lt;/code&gt; 가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="3b2398012127ac20dafee0de7defdb7dbfdffaec" translate="yes" xml:space="preserve">
          <source>Nokogiri gem installation</source>
          <target state="translated">노코 기리 보석 설치</target>
        </trans-unit>
        <trans-unit id="6b0067aa0486b565105c43272d7e3127918f1a98" translate="yes" xml:space="preserve">
          <source>Non-superuser account issues</source>
          <target state="translated">비 슈퍼 유저 계정 문제</target>
        </trans-unit>
        <trans-unit id="8f1ffabf169574519e202a4e9b88f25390f0b416" translate="yes" xml:space="preserve">
          <source>None specified, or &lt;code&gt;permalink: date&lt;/code&gt;</source>
          <target state="translated">지정되지 않았거나 &lt;code&gt;permalink: date&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c35cfb9d2d2387ed94bc43758ede05d15c18fe4" translate="yes" xml:space="preserve">
          <source>Not everything is a post or a page. Maybe you want to document the various methods in your open source project, members of a team, or talks at a conference. Collections allow you to define a new type of document that behave like Pages or Posts do normally, but also have their own unique properties and namespace.</source>
          <target state="translated">모든 것이 게시물이나 페이지가 아닙니다. 오픈 소스 프로젝트, 팀 구성원 또는 회의에서 진행되는 다양한 방법을 문서화하고 싶을 수도 있습니다. 컬렉션을 사용하면 페이지 나 게시물처럼 정상적으로 작동하는 새로운 유형의 문서를 정의 할 수 있지만 고유 한 속성과 네임 스페이스도 있습니다.</target>
        </trans-unit>
        <trans-unit id="18321e6d33bf8fed8f4e031615a5c61cfd4eadbf" translate="yes" xml:space="preserve">
          <source>Note &lt;a href=&quot;../../datafiles/index&quot;&gt;Data Files&lt;/a&gt; are included and reloaded during automatic regeneration.</source>
          <target state="translated">참고 &lt;a href=&quot;../../datafiles/index&quot;&gt;데이터 파일&lt;/a&gt; 은 자동 재생성 중에 포함되고 다시로드됩니다.</target>
        </trans-unit>
        <trans-unit id="8f87a0cc1b107cfc3130ca883eee78891ca87928" translate="yes" xml:space="preserve">
          <source>Note &lt;a href=&quot;../datafiles/index&quot;&gt;Data Files&lt;/a&gt; are included and reloaded during automatic regeneration.</source>
          <target state="translated">참고 자동 재생 중에 &lt;a href=&quot;../datafiles/index&quot;&gt;데이터 파일&lt;/a&gt; 이 포함되어 다시로드됩니다.</target>
        </trans-unit>
        <trans-unit id="9cf697214d3ea8369efc9d5989737c5221f12ef5" translate="yes" xml:space="preserve">
          <source>Note if you want to view your site offline &lt;em&gt;without the Jekyll preview server&lt;/em&gt;, your browser will need the file extension to display the page, and all assets will need to be relative links that function without the server baseurl.</source>
          <target state="translated">&lt;em&gt;Jekyll 미리보기 서버없이&lt;/em&gt; 사이트를 오프라인에서 보려면 페이지를 표시하려면 파일 확장자가 브라우저에 필요하며 모든 자산은 서버 baseurl없이 작동하는 상대 링크 여야합니다.</target>
        </trans-unit>
        <trans-unit id="6be0285681791712626e61c0e940a29611df075c" translate="yes" xml:space="preserve">
          <source>Note that GitHub Pages runs in &lt;code&gt;safe&lt;/code&gt; mode and only allows &lt;a href=&quot;https://help.github.com/articles/configuring-jekyll-plugins/#default-plugins&quot;&gt;a set of whitelisted plugins&lt;/a&gt;.</source>
          <target state="translated">GitHub Pages는 &lt;code&gt;safe&lt;/code&gt; 모드 에서 실행되며 &lt;a href=&quot;https://help.github.com/articles/configuring-jekyll-plugins/#default-plugins&quot;&gt;허용 된 플러그인 세트&lt;/a&gt; 만 허용 합니다 .</target>
        </trans-unit>
        <trans-unit id="9d90bbde8e029c7aaf55ae7cc6107674786ac2ea" translate="yes" xml:space="preserve">
          <source>Note that all template variables relating to time or categories are available to posts only.</source>
          <target state="translated">시간 또는 카테고리와 관련된 모든 템플릿 변수는 게시물에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="403cef00bcb7eca57f3a8a3a90c242e787157e04" translate="yes" xml:space="preserve">
          <source>Note that in order for Jekyll to process any liquid tags on your page, you &lt;em&gt;must&lt;/em&gt; include front matter on it. The most minimal snippet of front matter you can include is:</source>
          <target state="translated">Jekyll이 귀하의 페이지에있는 액체 태그를 처리 &lt;em&gt;하려면&lt;/em&gt; 앞면을 포함 &lt;em&gt;해야&lt;/em&gt; 합니다. 포함 할 수있는 가장 최소한의 머리말은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="af0e26741b1c3ebdf00805474f87a1d9243e7832" translate="yes" xml:space="preserve">
          <source>Note that in the above table, &lt;code&gt;file&lt;/code&gt; can be anything. It&amp;rsquo;s an arbitrarily set variable used in your own logic (such as in a for loop). It isn&amp;rsquo;t a global site or page variable.</source>
          <target state="translated">위의 표에서 &lt;code&gt;file&lt;/code&gt; 은 무엇이든 될 수 있습니다. 자체 로직 (예 : for 루프)에서 사용되는 임의로 설정된 변수입니다. 전역 사이트 또는 페이지 변수가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="0eb4bdc4e781e7d84143f4441f9136f655537cba" translate="yes" xml:space="preserve">
          <source>Note that in the above table, &lt;code&gt;file&lt;/code&gt; can be anything. It&amp;rsquo;s simply an arbitrarily set variable used in your own logic (such as in a for loop). It isn&amp;rsquo;t a global site or page variable.</source>
          <target state="translated">위의 표에서 &lt;code&gt;file&lt;/code&gt; 은 무엇이든 가능합니다. 그것은 단순히 자신의 논리 (예 : for 루프에서)에 사용되는 임의로 설정된 변수입니다. 글로벌 사이트 또는 페이지 변수가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="1efdb94e4f50bf0983fdc1d308e7ee4efc93198d" translate="yes" xml:space="preserve">
          <source>Note that making copies of theme files will prevent you from receiving any theme updates on those files. An alternative, to continue getting theme updates on all stylesheets, is to use higher specificity CSS selectors in your own additional, originally named CSS files.</source>
          <target state="translated">테마 파일을 복사하면 해당 파일에 대한 테마 업데이트가 수신되지 않습니다. 모든 스타일 시트에서 테마 업데이트를 계속 받으려면 대안으로 원래 이름이 지정된 추가 CSS 파일에서 더 높은 고유 CSS 선택기를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="84079dcab6977c592d28e1390b0cdd647e2c55a1" translate="yes" xml:space="preserve">
          <source>Note that pages and collections (excluding &lt;code&gt;posts&lt;/code&gt; and &lt;code&gt;drafts&lt;/code&gt;) don&amp;rsquo;t have time and categories (for pages, the above &lt;code&gt;:title&lt;/code&gt; is equivalent to &lt;code&gt;:basename&lt;/code&gt;), these aspects of the permalink style are ignored for the output.</source>
          <target state="translated">페이지와 컬렉션 ( &lt;code&gt;posts&lt;/code&gt; 및 &lt;code&gt;drafts&lt;/code&gt; 제외 )에는 시간과 카테고리가 없습니다 (페이지의 경우 위의 &lt;code&gt;:title&lt;/code&gt; 은 &lt;code&gt;:basename&lt;/code&gt; 과 동일 함 ), 영구 링크 스타일의 이러한 측면은 출력에서 ​​무시됩니다.</target>
        </trans-unit>
        <trans-unit id="fb1100df32e7377e196c98a1d1e30c86170cf4a9" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;post&lt;/code&gt; variable only exists inside the &lt;code&gt;for&lt;/code&gt; loop above. If you wish to access the currently-rendering page/posts&amp;rsquo;s variables (the variables of the post/page that has the &lt;code&gt;for&lt;/code&gt; loop in it), use the &lt;code&gt;page&lt;/code&gt; variable instead.</source>
          <target state="translated">있습니다 &lt;code&gt;post&lt;/code&gt; 변수 만 내부에 존재하는 &lt;code&gt;for&lt;/code&gt; 위의 루프. 현재 렌더링중인 페이지 / 포스트 변수 ( &lt;code&gt;for&lt;/code&gt; 루프 가있는 포스트 / 페이지의 변수 )에 액세스하려면 &lt;code&gt;page&lt;/code&gt; 변수를 대신 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="8cf6c6835a876660d4c76838462f49a571751f8c" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;sass_dir&lt;/code&gt; becomes the load path for Sass imports, nothing more. This means that Jekyll does not know about these files directly, so any files here should not contain the YAML Front Matter as described above nor will they be transformed as described above. This folder should only contain imports.</source>
          <target state="translated">있습니다 &lt;code&gt;sass_dir&lt;/code&gt; 가 더 말대꾸 수입에 대한로드 경로, 아무것도된다. 즉, Jekyll은 이러한 파일에 대해 직접 알지 못하므로 여기에있는 모든 파일에는 위에서 설명한 YAML Front Matter가 포함되어 있지 않아야하며 위에 설명 된대로 변환되지 않아야합니다. 이 폴더에는 가져 오기만 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="2e41ebfde97fa300cd317db4d704d7b958968931" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;sass_dir&lt;/code&gt; becomes the load path for Sass imports, nothing more. This means that Jekyll does not know about these files directly. Any files here should not contain the empty front matter as described above. If they do, they'll not be transformed as described above. This folder should only contain imports.</source>
          <target state="translated">있습니다 &lt;code&gt;sass_dir&lt;/code&gt; 가 더 말대꾸 수입에 대한로드 경로, 아무것도된다. 이것은 Jekyll이 이러한 파일에 대해 직접 알지 못함을 의미합니다. 여기에있는 모든 파일에는 위에 설명 된대로 빈 머리말이 포함되어서는 안됩니다. 그럴 경우 위에서 설명한대로 변환되지 않습니다. 이 폴더는 가져 오기만 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="5d2c061eab8c4b566be13e9d16af1507ebc396fb" translate="yes" xml:space="preserve">
          <source>Note that this string must be quoted to prevent the asterisks from being evaluated incorrectly.</source>
          <target state="translated">별표가 잘못 평가되는 것을 방지하려면이 문자열을 따옴표로 묶어야합니다.</target>
        </trans-unit>
        <trans-unit id="365263babcade15a29bd49c083aff113ac6dc6fa" translate="yes" xml:space="preserve">
          <source>Note that upgrading macOS does not automatically upgrade Xcode itself (that can be done separately via the App Store), and having an out-of-date Xcode.app can interfere with the command line tools downloaded above. If you run into this issue, upgrade Xcode and install the upgraded Command Line Tools.</source>
          <target state="translated">macOS를 업그레이드해도 Xcode 자체는 자동으로 업그레이드되지 않으며 (App Store를 통해 별도로 수행 할 수 있음) 오래된 Xcode.app가 있으면 위에서 다운로드 한 명령 줄 도구를 방해 할 수 있습니다. 이 문제가 발생하면 Xcode를 업그레이드하고 업그레이드 된 명령 행 도구를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="e0cedf9e1146b83059f235f1658469f30f0dfa6f" translate="yes" xml:space="preserve">
          <source>Note that you can also specify a language for highlighting after the first delimiter:</source>
          <target state="translated">첫 번째 구분 기호 다음에 강조 표시 할 언어를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="538035dc55ccf0f41b931e516134c7709bbd5954" translate="yes" xml:space="preserve">
          <source>Note that you cannot use the &lt;code&gt;../&lt;/code&gt; syntax to specify an include location that refers to a higher-level directory.</source>
          <target state="translated">&lt;code&gt;../&lt;/code&gt; 구문을 사용하여 상위 디렉토리를 참조하는 포함 위치를 지정할 수는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="e23bfe7b417b5e844018628a3a9e7b0a66ac8d09" translate="yes" xml:space="preserve">
          <source>Note you cannot add filters to &lt;code&gt;link&lt;/code&gt; tags. For example, you cannot append a string using Liquid filters, such as &lt;code&gt;{% link mypage.html | append: &quot;#section1&quot; %} &lt;/code&gt;. To link to sections on a page, you will need to use regular HTML or Markdown linking techniques.</source>
          <target state="translated">태그 를 &lt;code&gt;link&lt;/code&gt; 하기 위해 필터를 추가 할 수는 없습니다 . 예를 들어, 액체 필터를 사용하여 &lt;code&gt;{% link mypage.html | append: &quot;#section1&quot; %} &lt;/code&gt; . 페이지의 섹션에 링크하려면 일반 HTML 또는 마크 다운 링크 기술을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="90636d898b92948434f74cbb27ef82c175a68fcc" translate="yes" xml:space="preserve">
          <source>Note you cannot add filters to &lt;code&gt;link&lt;/code&gt; tags. For example, you cannot append a string using Liquid filters, such as &lt;code&gt;{% link mypage.html | append: &quot;#section1&quot; %}&lt;/code&gt;. To link to sections on a page, you will need to use regular HTML or Markdown linking techniques.</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; 태그에는 필터를 추가 할 수 없습니다 . 예를 들어, &lt;code&gt;{% link mypage.html | append: &quot;#section1&quot; %}&lt;/code&gt; . 페이지의 섹션에 연결하려면 일반 HTML 또는 마크 다운 연결 기술을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="ef2620ba5b8650000c4392a80911f4c3e3b5aae7" translate="yes" xml:space="preserve">
          <source>Notes are handy pieces of information</source>
          <target state="translated">메모는 편리한 정보입니다</target>
        </trans-unit>
        <trans-unit id="019763ab6a53f0c0a37aac5bce59026db4857488" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;bundle update&lt;/code&gt; will no longer get updates for the theme gem.</source>
          <target state="translated">이제 &lt;code&gt;bundle update&lt;/code&gt; 는 더 이상 테마 젬에 대한 업데이트 를받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f5db484a6b8a6ae2c46d9feb727ea7060997ae39" translate="yes" xml:space="preserve">
          <source>Now all that is left to do is install Jekyll.</source>
          <target state="translated">이제 남은 일은 Jekyll을 설치하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e80e88643d10496c04026953abbd1fce833876a2" translate="yes" xml:space="preserve">
          <source>Now edit the &lt;code&gt;Gemfile&lt;/code&gt; and add jekyll as a dependency:</source>
          <target state="translated">이제 &lt;code&gt;Gemfile&lt;/code&gt; 을 편집하고 jekyll을 종속성으로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="010964b53143eacf07b672c4e142050729ab50fa" translate="yes" xml:space="preserve">
          <source>Now install them by running a &lt;code&gt;bundle update&lt;/code&gt;.</source>
          <target state="translated">이제 &lt;code&gt;bundle update&lt;/code&gt; 를 실행하여 설치하십시오 .</target>
        </trans-unit>
        <trans-unit id="d16d4716fcec7c0d58d5adb7bf41d53959f85499" translate="yes" xml:space="preserve">
          <source>Now it&amp;rsquo;s possible to publish your website simply by running the &lt;code&gt;deploy&lt;/code&gt; script. If your SSH certificate is &lt;a href=&quot;https://martin.kleppmann.com/2013/05/24/improving-security-of-ssh-private-keys.html&quot;&gt;passphrase-protected&lt;/a&gt;, you will be asked to enter it when the script executes.</source>
          <target state="translated">이제 &lt;code&gt;deploy&lt;/code&gt; 스크립트 를 실행하여 웹 사이트를 게시 할 수 있습니다 . SSH 인증서가 &lt;a href=&quot;https://martin.kleppmann.com/2013/05/24/improving-security-of-ssh-private-keys.html&quot;&gt;암호로 보호&lt;/a&gt; 되어 있으면 스크립트가 실행될 때 입력하라는 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="3e19654e1e418cd2f541f4770ec0b52df6442f1a" translate="yes" xml:space="preserve">
          <source>Now it&amp;rsquo;s your turn, change the Hello World! on your page to output as lowercase:</source>
          <target state="translated">이제 당신 차례입니다. Hello World를 바꾸세요! 페이지에서 소문자로 출력합니다.</target>
        </trans-unit>
        <trans-unit id="a648139b6baf40fe30744d8e528aae7b96c3bd46" translate="yes" xml:space="preserve">
          <source>Now posts can use this layout while the rest of the pages use the default.</source>
          <target state="translated">이제 게시물은이 레이아웃을 사용할 수 있으며 나머지 페이지는 기본값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="a6cf1e4cb312d48ffd4a9ed682f1ece2bf915b2f" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve got everything up-to-date and installed, let&amp;rsquo;s get to work!</source>
          <target state="translated">이제 모든 것이 최신 상태이고 설치되었으므로 작업을 시작하십시오!</target>
        </trans-unit>
        <trans-unit id="34ee5ef663d912be8e2724397d00a3a6157ccfc8" translate="yes" xml:space="preserve">
          <source>Now that your posts have a category or multiple categories, you can make a page or a template displaying just the posts in those categories you specify. Here&amp;rsquo;s a basic example of how to create a list of posts from a specific category.</source>
          <target state="translated">게시물에 카테고리가 있거나 여러 카테고리가 있으므로 지정한 카테고리의 게시물 만 표시하는 페이지 또는 템플릿을 만들 수 있습니다. 다음은 특정 카테고리에서 게시물 목록을 작성하는 방법에 대한 기본 예입니다.</target>
        </trans-unit>
        <trans-unit id="54eae58039538d3de78c88b9ca2dea358415c6b6" translate="yes" xml:space="preserve">
          <source>Now we can install Ruby. To do this we will use a repository from &lt;a href=&quot;https://www.brightbox.com/docs/ruby/ubuntu/&quot;&gt;BrightBox&lt;/a&gt;, which hosts optimized versions of Ruby for Ubuntu.</source>
          <target state="translated">이제 Ruby를 설치할 수 있습니다. 이를 위해 우분투에 최적화 된 루비 버전을 호스팅하는 &lt;a href=&quot;https://www.brightbox.com/docs/ruby/ubuntu/&quot;&gt;BrightBox&lt;/a&gt; 리포지토리를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="f1db2122410ebc1a9c0f607f53505113fc23cafa" translate="yes" xml:space="preserve">
          <source>Now when you insert the &lt;code&gt;spotlight.html&lt;/code&gt; include file, you can submit the YAML file as a parameter:</source>
          <target state="translated">이제 &lt;code&gt;spotlight.html&lt;/code&gt; 포함 파일 을 삽입 하면 YAML 파일을 매개 변수로 제출할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e551c16358f853ea0260de2a3494bd4f323cc098" translate="yes" xml:space="preserve">
          <source>Now you can iterate over &lt;code&gt;site.staff_members&lt;/code&gt; on a page and output the content for each staff member. Similar to posts, the body of the document is accessed using the &lt;code&gt;content&lt;/code&gt; variable:</source>
          <target state="translated">이제 페이지 에서 &lt;code&gt;site.staff_members&lt;/code&gt; 를 반복하고 각 직원에 대한 내용을 출력 할 수 있습니다 . 게시물과 마찬가지로 문서의 본문은 &lt;code&gt;content&lt;/code&gt; 변수를 사용하여 액세스 합니다.</target>
        </trans-unit>
        <trans-unit id="2d94007a0c96c53817af595ff17b5d5f21118610" translate="yes" xml:space="preserve">
          <source>Now you can remove layout from the front matter of all pages and posts. Note that any time you update &lt;code&gt;_config.yml&lt;/code&gt; you&amp;rsquo;ll need to restart Jekyll for the changes to take effect.</source>
          <target state="translated">이제 모든 페이지와 게시물의 머리말에서 레이아웃을 제거 할 수 있습니다. &lt;code&gt;_config.yml&lt;/code&gt; 을 업데이트 할 때마다 변경 사항을 적용하려면 Jekyll을 다시 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="b1ee720b8a30d5856aa33722ba59d2ea13b8b63f" translate="yes" xml:space="preserve">
          <source>Now you need to configure the author documents to use the &lt;code&gt;author&lt;/code&gt; layout. You could do this in the front matter like we have previously but that&amp;rsquo;s getting repetitive.</source>
          <target state="translated">이제 &lt;code&gt;author&lt;/code&gt; 레이아웃 을 사용하도록 작성자 문서를 구성해야 합니다. 우리가 이전에했던 것처럼 앞면에서 이것을 할 수 있지만 그것은 반복되고 있습니다.</target>
        </trans-unit>
        <trans-unit id="da26a269dc579ccddc35c61159479c24d604f361" translate="yes" xml:space="preserve">
          <source>Now you need to install all plugins from your Bundler group by running single command &lt;code&gt;bundle install&lt;/code&gt;.</source>
          <target state="translated">이제 단일 명령 &lt;code&gt;bundle install&lt;/code&gt; 실행하여 Bundler 그룹에서 모든 플러그인을 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0aa3bc63f1e4c333878815ea88bcf06ae43e27ea" translate="yes" xml:space="preserve">
          <source>Now, this will only set the layout for files where the type is &lt;code&gt;posts&lt;/code&gt;. The different types that are available to you are &lt;code&gt;pages&lt;/code&gt;, &lt;code&gt;posts&lt;/code&gt;, &lt;code&gt;drafts&lt;/code&gt; or any collection in your site. While &lt;code&gt;type&lt;/code&gt; is optional, you must specify a value for &lt;code&gt;path&lt;/code&gt; when creating a &lt;code&gt;scope/values&lt;/code&gt; pair.</source>
          <target state="translated">이제 유형이 &lt;code&gt;posts&lt;/code&gt; 인 파일의 레이아웃 만 설정합니다 . 사용 가능한 다른 유형은 &lt;code&gt;pages&lt;/code&gt; , &lt;code&gt;posts&lt;/code&gt; , &lt;code&gt;drafts&lt;/code&gt; 또는 사이트의 컬렉션입니다. &lt;code&gt;type&lt;/code&gt; 은 선택 사항 이지만 &lt;code&gt;scope/values&lt;/code&gt; 쌍을 만들 때 &lt;code&gt;path&lt;/code&gt; 값을 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="18829b882e10c5f58e54b3c8f9c9dc17ea3b6d03" translate="yes" xml:space="preserve">
          <source>Number of Posts per page.</source>
          <target state="translated">페이지 당 게시물 수</target>
        </trans-unit>
        <trans-unit id="7eb968dbb7c9f134e521753fb30967e0c536dd90" translate="yes" xml:space="preserve">
          <source>Number of posts per page</source>
          <target state="translated">페이지 당 게시물 수</target>
        </trans-unit>
        <trans-unit id="72a83add2c5ede877c10d23f302d3e17accbadab" translate="yes" xml:space="preserve">
          <source>Objects</source>
          <target state="translated">Objects</target>
        </trans-unit>
        <trans-unit id="7b7eb6f4a4e3cf3c6cb02d7d38ee36ad964e75cb" translate="yes" xml:space="preserve">
          <source>Objects tell Liquid where to output content. They&amp;rsquo;re denoted by double curly braces: &lt;code&gt;{{&lt;/code&gt; and &lt;code&gt;}}&lt;/code&gt;. For example:</source>
          <target state="translated">개체는 콘텐츠를 출력 할 위치를 Liquid에 알려줍니다. 이중 중괄호 &lt;code&gt;{{&lt;/code&gt; 및 &lt;code&gt;}}&lt;/code&gt; 로 표시됩니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="96dde92cd814d365b60ea8afd3bf1ff8d531ae72" translate="yes" xml:space="preserve">
          <source>Of course, you have full control over how (and where) you display your posts, and how you structure your site. You should read more about &lt;a href=&quot;../templates/index&quot;&gt;how templates work&lt;/a&gt; with Jekyll if you want to know more.</source>
          <target state="translated">물론 게시물을 표시하는 방법 (및 위치)과 사이트 구성 방법을 완전히 제어 할 수 있습니다. 더 알고 싶다면 Jekyll에서 &lt;a href=&quot;../templates/index&quot;&gt;템플릿이 작동하는 방식&lt;/a&gt; 에 대해 자세히 읽어보십시오 .</target>
        </trans-unit>
        <trans-unit id="7906d9dd10da83c4dc9e9cc059ee3607b107572f" translate="yes" xml:space="preserve">
          <source>Often times, you will find that you are repeating a lot of configuration options. Setting the same layout in each file, adding the same category - or categories - to a post, etc. You can even add custom variables like author names, which might be the same for the majority of posts on your blog.</source>
          <target state="translated">종종 많은 구성 옵션을 반복한다는 것을 알게 될 것입니다. 각 파일에서 동일한 레이아웃 설정, 게시물에 동일한 범주 또는 범주 추가 등 작성자 이름과 같은 사용자 정의 변수를 추가 할 수도 있습니다. 블로그의 대부분의 게시물에 대해 동일 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd7a7fc492a1910ffb2d5a05efad918a16494e6e" translate="yes" xml:space="preserve">
          <source>Often, you&amp;rsquo;ll want the ability to run a Jekyll site in multiple places, such as previewing locally before pushing to GitHub Pages. Jekyll 1.0 makes that easier with the new &lt;code&gt;--baseurl&lt;/code&gt; flag. To take advantage of this feature, first add the production &lt;code&gt;baseurl&lt;/code&gt; to your site&amp;rsquo;s &lt;code&gt;_config.yml&lt;/code&gt; file. Then, throughout the site, simply prefix relative URLs with &lt;code&gt;{{ site.baseurl }}&lt;/code&gt;. When you&amp;rsquo;re ready to preview your site locally, pass along the &lt;code&gt;--baseurl&lt;/code&gt; flag with your local baseurl (most likely &lt;code&gt;/&lt;/code&gt;) to &lt;code&gt;jekyll serve&lt;/code&gt; and Jekyll will swap in whatever you&amp;rsquo;ve passed along, ensuring all your links work as you&amp;rsquo;d expect in both environments.</source>
          <target state="translated">종종 GitHub 페이지로 이동하기 전에 로컬 미리보기와 같은 여러 위치에서 Jekyll 사이트를 실행하는 기능을 원할 것입니다. Jekyll 1.0은 새로운 &lt;code&gt;--baseurl&lt;/code&gt; 플래그를 사용하여 쉽게 만들 수 있습니다. 첫째,이 기능을 이용 생산 추가하려면 &lt;code&gt;baseurl&lt;/code&gt; 사이트에 &lt;code&gt;_config.yml&lt;/code&gt; 파일. 그런 다음 사이트 전체에서 &lt;code&gt;{{ site.baseurl }}&lt;/code&gt; 으로 상대 URL을 접두어로 추가하십시오 . 사이트를 로컬에서 미리 볼 준비가되면 &lt;code&gt;--baseurl&lt;/code&gt; 플래그를 로컬 &lt;code&gt;jekyll serve&lt;/code&gt; (대부분 &lt;code&gt;/&lt;/code&gt; )과 함께 jekyll serve로 전달하면 Jekyll이 전달한 내용 을 바꾸어 모든 링크가 제대로 작동하도록합니다. d 두 환경에서 모두 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="d30b145b4bde5fa638fe23ec4ef06976a5bbbe21" translate="yes" xml:space="preserve">
          <source>Ok, now for an explanation of each line:</source>
          <target state="translated">각 줄에 대한 설명은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6e28fd75868e57365d52c976d9e5c95ac3f14096" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;https://www.nearlyfreespeech.net/&quot;&gt;NearlyFreeSpeech&lt;/a&gt; you need to run the following commands before installing Jekyll:</source>
          <target state="translated">에 &lt;a href=&quot;https://www.nearlyfreespeech.net/&quot;&gt;NearlyFreeSpeech&lt;/a&gt; 당신은 지킬를 설치하기 전에 다음 명령을 실행해야합니다 :</target>
        </trans-unit>
        <trans-unit id="9c3597264393bddf95c610836b50fcadbbee4990" translate="yes" xml:space="preserve">
          <source>On Android (with Termux) you can install all requirements by running:</source>
          <target state="translated">Android (Termux 포함)에서 다음을 실행하여 모든 요구 사항을 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2b8265c91a43410d21f3e0315a81135254de4f1" translate="yes" xml:space="preserve">
          <source>On Arch Linux you need to run:</source>
          <target state="translated">Arch Linux에서는 다음을 실행해야합니다.</target>
        </trans-unit>
        <trans-unit id="b9fb4f0f510e3218e417720a10ad1d07d4892cbf" translate="yes" xml:space="preserve">
          <source>On Debian or Ubuntu, you may need to add &lt;code&gt;/var/lib/gems/1.8/bin/&lt;/code&gt; to your path in order to have the &lt;code&gt;jekyll&lt;/code&gt; executable be available in your Terminal.</source>
          <target state="translated">데비안 또는 우분투에서는 터미널에서 &lt;code&gt;jekyll&lt;/code&gt; 실행 파일을 사용할 수 있도록 경로에 &lt;code&gt;/var/lib/gems/1.8/bin/&lt;/code&gt; 을 추가해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="adb1f21e91bc41853dfd2b9766358ecb21806591" translate="yes" xml:space="preserve">
          <source>On Mojave (10.14)</source>
          <target state="translated">Mojave (10.14)에서</target>
        </trans-unit>
        <trans-unit id="1c531262063904dc6bee40ddd0b7cf0a9d8411f4" translate="yes" xml:space="preserve">
          <source>On Red Hat, CentOS, and Fedora systems you can do this by running:</source>
          <target state="translated">Red Hat, CentOS 및 Fedora 시스템에서 다음을 실행하여이를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa115f95060aeec4e3e2d8c7325ac6dc5e8eb616" translate="yes" xml:space="preserve">
          <source>On Ubuntu if you get stuck after &lt;code&gt;bundle exec jekyll serve&lt;/code&gt; and see error messages like &lt;code&gt;Could not locate Gemfile&lt;/code&gt; or &lt;code&gt;.bundle/ directory&lt;/code&gt;, it&amp;rsquo;s likely because all requirements have not been fully met. Recent stock Ubuntu distributions require the installation of both the &lt;code&gt;ruby&lt;/code&gt; and &lt;code&gt;ruby-all-dev&lt;/code&gt; packages:</source>
          <target state="translated">Ubuntu에서 &lt;code&gt;bundle exec jekyll serve&lt;/code&gt; 후 멈춰서 Cem을 &lt;code&gt;Could not locate Gemfile&lt;/code&gt; 또는 &lt;code&gt;.bundle/ directory&lt;/code&gt; 와 같은 오류 메시지가 표시 되면 모든 요구 사항이 완전히 충족되지 않았기 때문일 수 있습니다. 최신 재고 우분투 배포판에는 &lt;code&gt;ruby&lt;/code&gt; 및 &lt;code&gt;ruby-all-dev&lt;/code&gt; 패키지 가 모두 설치되어 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="b5a43e36150386712212d9f5b9c9c1a6f0c1c9d5" translate="yes" xml:space="preserve">
          <source>On Windows, you may need to install &lt;a href=&quot;https://wiki.github.com/oneclick/rubyinstaller/development-kit&quot;&gt;RubyInstaller DevKit&lt;/a&gt;.</source>
          <target state="translated">Windows에서는 &lt;a href=&quot;https://wiki.github.com/oneclick/rubyinstaller/development-kit&quot;&gt;RubyInstaller DevKit&lt;/a&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="62a8a2639b56b993d6229a9e24e09038459a6c02" translate="yes" xml:space="preserve">
          <source>On a successful build, GitHub Pages will &lt;strong&gt;publish&lt;/strong&gt; the site stored on the repository &lt;code&gt;gh-pages&lt;/code&gt; branches. Note that you do not need to setup a &lt;code&gt;gh-pages&lt;/code&gt; branch or enable GitHub Pages, as the action will take care of this for you. (For private repositories, you&amp;rsquo;ll have to upgrade to a paid plan).</source>
          <target state="translated">성공적인 빌드에서 GitHub Pages는 저장소 &lt;code&gt;gh-pages&lt;/code&gt; 브랜치 에 저장된 사이트 를 &lt;strong&gt;게시&lt;/strong&gt; 합니다 . &lt;code&gt;gh-pages&lt;/code&gt; 브랜치 를 설정 하거나 GitHub 페이지를 활성화 할 필요가 없습니다 . 조치가이를 처리해 줄 것입니다. (비공개 저장소의 경우 유료 플랜으로 업그레이드해야합니다).</target>
        </trans-unit>
        <trans-unit id="bc528da50fbf0444b3fec13f95a3705a7abf12e9" translate="yes" xml:space="preserve">
          <source>On macOS, you may need to update RubyGems (using &lt;code&gt;sudo&lt;/code&gt; only if necessary):</source>
          <target state="translated">macOS에서 RubyGems를 업데이트해야 할 수도 있습니다 ( 필요한 경우에만 &lt;code&gt;sudo&lt;/code&gt; 사용 ).</target>
        </trans-unit>
        <trans-unit id="959f86315a5074f1457f947e180c6bb688c12e6f" translate="yes" xml:space="preserve">
          <source>On most flavors of Linux, macOS, and Bash on Ubuntu on Windows, it is possible to run Jekyll as a non-superuser and without having to install gems to system-wide locations by adding the following lines to the end of your &lt;code&gt;.bashrc&lt;/code&gt; file:</source>
          <target state="translated">Windows의 Ubuntu에있는 대부분의 Linux, macOS 및 Bash 버전에서는 맨 끝에 다음 줄을 추가하여 시스템 전체 위치에 gem을 설치할 필요없이 슈퍼 유저가 아닌 사용자로 Jekyll을 실행할 수 있습니다. &lt;code&gt;.bashrc&lt;/code&gt; 파일 있습니다. :</target>
        </trans-unit>
        <trans-unit id="6ee683f0eac74dad663fd8c72bb3a6766618ec83" translate="yes" xml:space="preserve">
          <source>On pushing any local changes onto &lt;code&gt;master&lt;/code&gt;, the action will be triggered and the build will &lt;strong&gt;start&lt;/strong&gt;.</source>
          <target state="translated">로컬 변경 사항을 &lt;code&gt;master&lt;/code&gt; 에 푸시 하면 작업이 트리거되고 빌드가&lt;strong&gt; 시작&lt;/strong&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="c38fa39b3c1205684f8e1cde55e5bc01aa13427c" translate="yes" xml:space="preserve">
          <source>On your GitHub profile, under &lt;strong&gt;Developer Settings&lt;/strong&gt;, go to the &lt;a href=&quot;https://github.com/settings/tokens&quot;&gt;Personal Access Tokens&lt;/a&gt; section.</source>
          <target state="translated">GitHub 프로필의 &lt;strong&gt;개발자 설정&lt;/strong&gt; 아래 에서&lt;a href=&quot;https://github.com/settings/tokens&quot;&gt; 개인 액세스 토큰&lt;/a&gt; 섹션으로 .</target>
        </trans-unit>
        <trans-unit id="3d800c5c38947e2742dca8b913a5dcc9a8c572f5" translate="yes" xml:space="preserve">
          <source>Once Homebrew is installed, the second step is easy:</source>
          <target state="translated">Homebrew가 설치되면 두 번째 단계는 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="f0a9005e2dc37ed0efc5042fa378c9f94d57a3ac" translate="yes" xml:space="preserve">
          <source>Once Homebrew is installed, the second step is to run:</source>
          <target state="translated">Homebrew가 설치되면 두 번째 단계는 다음을 실행하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e740d0d84e268e668f10901581cbbf11a4eb4e11" translate="yes" xml:space="preserve">
          <source>Once this is done, the &lt;code&gt;jekyll new&lt;/code&gt; command should work properly for your user account.</source>
          <target state="translated">이 작업이 완료되면 &lt;code&gt;jekyll new&lt;/code&gt; 명령이 사용자 계정에 대해 제대로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="1d48bb207556e12c4176a8e5b62edee99682ac0f" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created your class and have it properly set up either as a plugin in the &lt;code&gt;_plugins&lt;/code&gt; folder or as a gem, specify it in your &lt;code&gt;_config.yml&lt;/code&gt;:</source>
          <target state="translated">당신은 당신의 클래스를 만들었으며 제대로에서 플러그인으로 중 하나를 설정 한 후 &lt;code&gt;_plugins&lt;/code&gt; 또는 보석으로, 당신 그것을 지정 폴더 &lt;code&gt;_config.yml&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7764f5c760737cd6cf299480bea632afe6568e67" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve generated the &lt;code&gt;_site&lt;/code&gt; directory, you can easily rsync its content using a &lt;code&gt;tasks/deploy&lt;/code&gt; shell script similar to &lt;a href=&quot;https://github.com/vitalyrepin/vrepinblog/blob/master/transfer.sh&quot;&gt;this deploy script here&lt;/a&gt;. You&amp;rsquo;d obviously need to change the values to reflect your site&amp;rsquo;s details.</source>
          <target state="translated">&lt;code&gt;_site&lt;/code&gt; 디렉토리를 생성하면 &lt;a href=&quot;https://github.com/vitalyrepin/vrepinblog/blob/master/transfer.sh&quot;&gt;이 배포 스크립트 here&lt;/a&gt; 과 유사한 &lt;code&gt;tasks/deploy&lt;/code&gt; 셸 스크립트를 사용하여 내용을 쉽게 재 동기화 할 수 있습니다 . 사이트의 세부 사항을 반영하기 위해 값을 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="f383d31d4e5cb6939c261af3b2784a812fa3a19e" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve generated the &lt;code&gt;_site&lt;/code&gt; directory, you can easily scp its content using a &lt;code&gt;tasks/deploy&lt;/code&gt; shell script similar to &lt;a href=&quot;https://github.com/henrik/henrik.nyh.se/blob/master/script/deploy&quot;&gt;this deploy script&lt;/a&gt;. You&amp;rsquo;d obviously need to change the values to reflect your site&amp;rsquo;s details. There is even &lt;a href=&quot;https://gist.github.com/henrik/214959&quot;&gt;a matching TextMate command&lt;/a&gt; that will help you run this script.</source>
          <target state="translated">&lt;code&gt;_site&lt;/code&gt; 디렉토리를 생성 한 후에는 &lt;a href=&quot;https://github.com/henrik/henrik.nyh.se/blob/master/script/deploy&quot;&gt;이 배치 스크립트&lt;/a&gt; 와 유사한 &lt;code&gt;tasks/deploy&lt;/code&gt; shell 스크립트를 사용하여 컨텐츠를 쉽게 scp 할 수 있습니다 . 사이트의 세부 사항을 반영하기 위해 값을 변경해야합니다. 이 스크립트를 실행하는 데 도움이 &lt;a href=&quot;https://gist.github.com/henrik/214959&quot;&gt;되는 일치하는 TextMate 명령&lt;/a&gt; 도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2fa1c2d47a36a61344e21d4725d8dd4dcfb7be93" translate="yes" xml:space="preserve">
          <source>One major benefit of using the &lt;code&gt;link&lt;/code&gt; or &lt;code&gt;post_url&lt;/code&gt; tag is link validation. If the link doesn&amp;rsquo;t exist, Jekyll won&amp;rsquo;t build your site. This is a good thing, as it will alert you to a broken link so you can fix it (rather than allowing you to build and deploy a site with broken links).</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; 또는 &lt;code&gt;post_url&lt;/code&gt; 태그 사용의 주요 이점 중 하나 는 링크 유효성 검사입니다. 링크가 없으면 Jekyll은 사이트를 구축하지 않습니다. 링크가 끊어진 사이트를 구축하고 배포하는 대신 링크가 끊어진 링크를 알려주므로 문제를 해결하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="e8f3b981456dcf42d600fd7bd3fac055adb5786c" translate="yes" xml:space="preserve">
          <source>One of Jekyll&amp;rsquo;s best aspects is that it is &amp;ldquo;blog aware&amp;rdquo;. What does this mean, exactly? Well, simply put, it means that blogging is baked into Jekyll&amp;rsquo;s functionality. If you write articles and publish them online, you can publish and maintain a blog simply by managing a folder of text-files on your computer. Compared to the hassle of configuring and maintaining databases and web-based CMS systems, this will be a welcome change!</source>
          <target state="translated">Jekyll의 가장 좋은 측면 중 하나는 &quot;블로그 인식&quot;이라는 것입니다. 이것이 정확히 무엇을 의미합니까? 간단히 말해서, 그것은 블로그가 Jekyll의 기능으로 구워 졌다는 것을 의미합니다. 기사를 작성하고 온라인으로 게시하는 경우 컴퓨터에서 텍스트 파일 폴더를 관리하여 블로그를 게시하고 유지 관리 할 수 ​​있습니다. 데이터베이스 및 웹 기반 CMS 시스템을 구성하고 유지 관리해야하는 번거 로움과 비교하면 이는 환영할만한 변화입니다!</target>
        </trans-unit>
        <trans-unit id="ab9b149b95c4f61f4cd94577cd916546a6169919" translate="yes" xml:space="preserve">
          <source>One of the easiest ways to set up an automated deployment flow is by using a CI.</source>
          <target state="translated">자동화 된 배포 흐름을 설정하는 가장 쉬운 방법 중 하나는 CI를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="30a3e463c7dc187565378bd24f47049278af4422" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; and have a look through your blog posts.</source>
          <target state="translated">&lt;a href=&quot;http://localhost:4000&quot;&gt;http : // localhost : 4000을&lt;/a&gt; 엽니 다 . 블로그 게시물을 살펴보십시오.</target>
        </trans-unit>
        <trans-unit id="e38b57442e04a7aa5921e97a2289243af76ae220" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; in your browser and try switching between the pages.</source>
          <target state="translated">브라우저에서 &lt;a href=&quot;http://localhost:4000&quot;&gt;http : // localhost : 4000&lt;/a&gt; 을 열고 페이지 사이를 전환 해보십시오.</target>
        </trans-unit>
        <trans-unit id="60c09721dc084c6669c5ed93e36d3e7518281a30" translate="yes" xml:space="preserve">
          <source>Open &lt;a href=&quot;http://localhost:4000/about.html&quot;&gt;http://localhost:4000/about.html&lt;/a&gt; in your browser and view your new page.</source>
          <target state="translated">브라우저에서 &lt;a href=&quot;http://localhost:4000/about.html&quot;&gt;http : // localhost : 4000 / about.html&lt;/a&gt; 을 열고 새 페이지를보십시오.</target>
        </trans-unit>
        <trans-unit id="6c36368b930f23a8cae7edd1498894a4e3f706e2" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;Gemfile&lt;/code&gt; and remove &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; 을 열고 &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="3c90137c068be3506ba00bf2b6ab95d4273bec85" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;Gemfile&lt;/code&gt; and remove &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.5&quot;&lt;/code&gt;.</source>
          <target state="translated">열기 &lt;code&gt;Gemfile&lt;/code&gt; 및 제거 &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.5&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="56ec55f05a8ffd5722560cf6783c854b858181a6" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;_config.yml&lt;/code&gt; and add &lt;code&gt;output: true&lt;/code&gt; to the author collection configuration:</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 을 열고 &lt;code&gt;output: true&lt;/code&gt; 를 작성자 컬렉션 구성에 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="f6880880ea71672000d6b0fc05e219906fdfa14f" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;_config.yml&lt;/code&gt; and remove &lt;code&gt;theme: minima&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 을 열고 &lt;code&gt;theme: minima&lt;/code&gt; 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="9e087e692eb3171c18a08a7065d9f5e7ca5f7ecf" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;_layouts/default.html&lt;/code&gt; and add the stylesheet to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;_layouts/default.html&lt;/code&gt; 을 열고 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 에 스타일 시트를 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="b6f92283b488ad8b56842b85e322ec4b81a37568" translate="yes" xml:space="preserve">
          <source>Open a command prompt and execute the following commands:</source>
          <target state="translated">명령 프롬프트를 열고 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="004ceb479a659b160d5534bfd7d1947dc40b5925" translate="yes" xml:space="preserve">
          <source>Open a command prompt, target your local blog repository root, and install github-pages: &lt;code&gt;bundle install&lt;/code&gt;</source>
          <target state="translated">명령 프롬프트를 열고 로컬 블로그 저장소 루트를 대상으로하고 github-pages를 &lt;code&gt;bundle install&lt;/code&gt; . bundle install</target>
        </trans-unit>
        <trans-unit id="4b22453097b93b2df3d24add77a4309d80de41c8" translate="yes" xml:space="preserve">
          <source>Open a new command prompt window from the start menu, so that changes to the &lt;code&gt;PATH&lt;/code&gt; environment variable becomes effective. Install Jekyll and Bundler using &lt;code&gt;gem install jekyll bundler&lt;/code&gt;</source>
          <target state="translated">시작 메뉴에서 새 명령 프롬프트 창을 열면 &lt;code&gt;PATH&lt;/code&gt; 환경 변수 에 대한 변경 사항 이 적용됩니다. 다음을 사용하여 Jekyll 및 Bundler 설치 &lt;code&gt;gem install jekyll bundler&lt;/code&gt; 를 설치</target>
        </trans-unit>
        <trans-unit id="7583cd72c5014d4ac4731c7aa0e930cf31931a3c" translate="yes" xml:space="preserve">
          <source>Open command prompt and install &lt;a href=&quot;http://bundler.io/&quot;&gt;Bundler&lt;/a&gt;: &lt;code&gt;gem install bundler&lt;/code&gt;</source>
          <target state="translated">명령 프롬프트를 열고 &lt;a href=&quot;http://bundler.io/&quot;&gt;Bundler&lt;/a&gt; 설치 : &lt;code&gt;gem install bundler&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8ab8db786d60c2545688e62a58c67b60caca1ae" translate="yes" xml:space="preserve">
          <source>Open command prompt in &lt;code&gt;C:\tools\DevKit2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;C:\tools\DevKit2&lt;/code&gt; 에서 명령 프롬프트 열기</target>
        </trans-unit>
        <trans-unit id="9eff37a1745d89ee3e2ad92eb1deb2f390943a42" translate="yes" xml:space="preserve">
          <source>Open the site's URL in the browser.</source>
          <target state="translated">브라우저에서 사이트의 URL을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="73152d15b9a1ec78d263f7c6b2b461568506e6bf" translate="yes" xml:space="preserve">
          <source>Open the theme&amp;rsquo;s directory in Finder or Explorer:</source>
          <target state="translated">Finder 또는 Explorer에서 테마 디렉토리를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="4c82412df53adc6ae3295495ca687ae178bc5842" translate="yes" xml:space="preserve">
          <source>Open up &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; and have a look at the staff page and the author links on posts to check everything is linked together correctly.</source>
          <target state="translated">&lt;a href=&quot;http://localhost:4000&quot;&gt;http : // localhost : 4000을&lt;/a&gt; 열고 직원 페이지와 게시물의 작성자 링크를 살펴보고 모든 것이 올바르게 연결되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="400d9fe9935df0662d74728de48ec67404e8f455" translate="yes" xml:space="preserve">
          <source>OpenSUSE</source>
          <target state="translated">OpenSUSE</target>
        </trans-unit>
        <trans-unit id="70a99ba8a9ffb445b428e39680492a883a85000b" translate="yes" xml:space="preserve">
          <source>OpenShift</source>
          <target state="translated">OpenShift</target>
        </trans-unit>
        <trans-unit id="d32fab14202ae0097389d61ed54dc7ccca3287f0" translate="yes" xml:space="preserve">
          <source>Optional Extras</source>
          <target state="translated">옵션 엑스트라</target>
        </trans-unit>
        <trans-unit id="b55d7c386e1750235ffddf85b281073b275e3780" translate="yes" xml:space="preserve">
          <source>Optionally &lt;strong&gt;add&lt;/strong&gt; this URL to your repository&amp;rsquo;s main page and to your &lt;code&gt;README.md&lt;/code&gt;, to make it easy for people to find.</source>
          <target state="translated">선택적으로 &lt;strong&gt;추가&lt;/strong&gt; 저장소의 메인 페이지에 당신이 URL을 &lt;code&gt;README.md&lt;/code&gt; 사람들이 쉽게 찾을 수 있도록.</target>
        </trans-unit>
        <trans-unit id="2730df1840876b27ba50ea3c9e4fcd46e32a5273" translate="yes" xml:space="preserve">
          <source>Optionally configure the build by clicking on the gear icon. Further configuration happens via your &lt;code&gt;.travis.yml&lt;/code&gt; file. More details below.</source>
          <target state="translated">선택적으로 톱니 바퀴 아이콘을 클릭하여 빌드를 구성하십시오. 추가 구성은 &lt;code&gt;.travis.yml&lt;/code&gt; 파일을 통해 이루어집니다 . 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="60e7611132055753c9b1041f69b1f74d642f7ec9" translate="yes" xml:space="preserve">
          <source>Optionally you can use &lt;a href=&quot;https://github.com/KeJunMao/fastjekyll#autoinstall-jekyll-for-windows&quot;&gt;Autoinstall Jekyll for Windows&lt;/a&gt;.</source>
          <target state="translated">선택적 &lt;a href=&quot;https://github.com/KeJunMao/fastjekyll#autoinstall-jekyll-for-windows&quot;&gt;으로 Windows 용 자동 설치 Jekyll을&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e62613f989a67d7593b94141f928dd4b6e5043aa" translate="yes" xml:space="preserve">
          <source>Optionally, if you are not interested in the build email notifications you can disable them with this configuration. Travis supports a wide array of notification services, you may find &lt;a href=&quot;https://docs.travis-ci.com/user/notifications/&quot;&gt;another one more useful (e.g. slack)&lt;/a&gt;.</source>
          <target state="translated">선택적으로 빌드 이메일 알림에 관심이없는 경우이 구성으로 비활성화 할 수 있습니다. Travis는 다양한 알림 서비스를 지원합니다. &lt;a href=&quot;https://docs.travis-ci.com/user/notifications/&quot;&gt;다른&lt;/a&gt; 알림 서비스가 더 유용 할 수 있습니다 (예 : 슬랙). .</target>
        </trans-unit>
        <trans-unit id="135a1bcda4b25a5f404e15dc6baa60da6e5b1c5b" translate="yes" xml:space="preserve">
          <source>Options and Flags</source>
          <target state="translated">옵션과 플래그</target>
        </trans-unit>
        <trans-unit id="c3041924699f7386336b1c03e46950d1ce22be2c" translate="yes" xml:space="preserve">
          <source>Options are given as a second argument to &lt;code&gt;.new&lt;/code&gt;, and are encoded in a symbol-keyed Ruby Hash. For more information about the configuration options, check out &lt;code&gt;html-proofer&lt;/code&gt;&amp;rsquo;s README file.</source>
          <target state="translated">옵션은 &lt;code&gt;.new&lt;/code&gt; 에 대한 두 번째 인수로 제공되며 기호 키 Ruby Hash로 인코딩됩니다. 구성 옵션에 대한 자세한 내용은 &lt;code&gt;html-proofer&lt;/code&gt; 의 README 파일을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="35a22db1ee88115b121ce6b7c4afd8072e9a235c" translate="yes" xml:space="preserve">
          <source>Options for creating a new site with Jekyll</source>
          <target state="translated">Jekyll을 사용하여 새 사이트를 만들기위한 옵션</target>
        </trans-unit>
        <trans-unit id="560143653190c35a839a512a853005f840e8708e" translate="yes" xml:space="preserve">
          <source>Options for the &lt;code&gt;slugify&lt;/code&gt; filter</source>
          <target state="translated">&lt;code&gt;slugify&lt;/code&gt; 필터 옵션</target>
        </trans-unit>
        <trans-unit id="fd32301500d284cdb5c29f7af6f284e0ab343b55" translate="yes" xml:space="preserve">
          <source>Or &lt;code&gt;_data/members.csv&lt;/code&gt;:</source>
          <target state="translated">또는 &lt;code&gt;_data/members.csv&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="645b758bd607fe4dff04534c57b0a1063c23e424" translate="yes" xml:space="preserve">
          <source>Or if you&amp;rsquo;ve started with the &lt;code&gt;jekyll new&lt;/code&gt; command, replace &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; with the gem you want, e.g:</source>
          <target state="translated">또는 &lt;code&gt;jekyll new&lt;/code&gt; 명령으로 시작했다면 &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; 을 원하는 gem으로 바꾸 세요. 예 :</target>
        </trans-unit>
        <trans-unit id="d172be3fe8bc618fcc6602af3e4c76c0aae31310" translate="yes" xml:space="preserve">
          <source>Or if you&amp;rsquo;ve started with the &lt;code&gt;jekyll new&lt;/code&gt; command, replace &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; with your theme-gem:</source>
          <target state="translated">또는 &lt;code&gt;jekyll new&lt;/code&gt; 명령으로 시작한 경우 &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; 을 테마 gem으로 바꾸 십시오.</target>
        </trans-unit>
        <trans-unit id="ac2db100d3d942904c2131a1e10be5199910241f" translate="yes" xml:space="preserve">
          <source>Or to get a list of comic-book based movies, one may use the following:</source>
          <target state="translated">또는 만화책 기반 영화 목록을 얻으려면 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b802ce2068737656985509e4c57384fa3a56405b" translate="yes" xml:space="preserve">
          <source>Or you could list them explicitly as Jekyll plugins in your Gemfile, and not update &lt;code&gt;_config.yml&lt;/code&gt;, like this:</source>
          <target state="translated">또는 다음 과 같이 &lt;code&gt;_config.yml&lt;/code&gt; 을 업데이트하지 않고 Gemfile에 Jekyll 플러그인으로 명시 적으로 나열 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7575764b5d7e5d6dcfc8a0556d9ed2c9c2ba8934" translate="yes" xml:space="preserve">
          <source>Ordinal day of the year from the post&amp;rsquo;s filename, with leading zeros. (001..366)</source>
          <target state="translated">게시물 파일 이름의 서수 날짜이며 앞에 0이 붙습니다. (001..366)</target>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="0c6615de6943228411f3ad7e04655686aac16eb4" translate="yes" xml:space="preserve">
          <source>Other Files/Folders</source>
          <target state="translated">다른 파일 / 폴더</target>
        </trans-unit>
        <trans-unit id="06c3ba4ba77c459e0a61b4bf2611d961ae796ff4" translate="yes" xml:space="preserve">
          <source>Other Linux</source>
          <target state="translated">기타 Linux</target>
        </trans-unit>
        <trans-unit id="16450a48eba70ad54ff1ad9ff818734f44629c84" translate="yes" xml:space="preserve">
          <source>Other commentary</source>
          <target state="translated">다른 논평</target>
        </trans-unit>
        <trans-unit id="c94c404ecea36e47c969182a93bd2aa77150d4fd" translate="yes" xml:space="preserve">
          <source>Our &amp;ldquo;Hello World!&amp;rdquo; will now be downcased on render.</source>
          <target state="translated">우리의&amp;ldquo;Hello World!&amp;rdquo; 이제 렌더링시 다운 케이스됩니다.</target>
        </trans-unit>
        <trans-unit id="fca1c1ad83bd5de1fb6c5a8fa7489884ec896f2e" translate="yes" xml:space="preserve">
          <source>Our friends at GitHub have provided the &lt;a href=&quot;https://github.com/github/pages-gem&quot;&gt;github-pages&lt;/a&gt; gem which is used to manage &lt;a href=&quot;https://pages.github.com/versions/&quot;&gt;Jekyll and its dependencies on GitHub Pages&lt;/a&gt;. Using it in your projects means that when you deploy your site to GitHub Pages, you will not be caught by unexpected differences between various versions of the gems.</source>
          <target state="translated">GitHub의 친구들은 &lt;a href=&quot;https://pages.github.com/versions/&quot;&gt;Jekyll과 GitHub Pages의 의존성&lt;/a&gt; 을 관리하는 데 사용되는 &lt;a href=&quot;https://github.com/github/pages-gem&quot;&gt;github-pages&lt;/a&gt; gem을 제공했습니다 . 프로젝트에서이 사이트를 사용한다는 것은 사이트를 GitHub 페이지에 배포 할 때 다양한 버전의 gem간에 예기치 않은 차이가 발생하지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="a5e38335dad03154bf1d809c715aea741faeb396" translate="yes" xml:space="preserve">
          <source>Out of the box, Jekyll has pre-defined hook points for owners &lt;code&gt;:site&lt;/code&gt;, &lt;code&gt;:pages&lt;/code&gt;, &lt;code&gt;:documents&lt;/code&gt; and &lt;code&gt;:clean&lt;/code&gt;. Additionally, the hook points defined for &lt;code&gt;:documents&lt;/code&gt; can be utilized for individual collections only by invoking the collection type instead. i.e. &lt;code&gt;:posts&lt;/code&gt; for documents in collection &lt;code&gt;_posts&lt;/code&gt; and &lt;code&gt;:movies&lt;/code&gt; for documents in collection &lt;code&gt;_movies&lt;/code&gt;. In all cases, Jekyll calls your hooks with the owner object as the first callback parameter.</source>
          <target state="translated">기본적으로 Jekyll에는 소유자 &lt;code&gt;:site&lt;/code&gt; , &lt;code&gt;:pages&lt;/code&gt; , &lt;code&gt;:documents&lt;/code&gt; 및 &lt;code&gt;:clean&lt;/code&gt; 에 대해 미리 정의 된 후크 포인트가 있습니다. 또한 &lt;code&gt;:documents&lt;/code&gt; 에 정의 된 후크 포인트 는 컬렉션 유형을 대신 호출하여 개별 컬렉션에 대해서만 사용할 수 있습니다. 즉 &lt;code&gt;:posts&lt;/code&gt; 컬렉션 &lt;code&gt;_posts&lt;/code&gt; 의 문서에 대한 게시물 및 &lt;code&gt;_movies&lt;/code&gt; 컬렉션의 문서에 대한 &lt;code&gt;:movies&lt;/code&gt; . 모든 경우에 Jekyll은 소유자 객체를 첫 번째 콜백 매개 변수로 사용하여 후크를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="4bed336194a9a5c86b6a734f03b3570d2aae1a68" translate="yes" xml:space="preserve">
          <source>Output</source>
          <target state="translated">Output</target>
        </trans-unit>
        <trans-unit id="b7d382ed311b02ac2102668a077e890a7bee6077" translate="yes" xml:space="preserve">
          <source>Output a page</source>
          <target state="translated">페이지 출력</target>
        </trans-unit>
        <trans-unit id="8fd9c8201ce2fca2a9eb4af0a121d222b9a70f9a" translate="yes" xml:space="preserve">
          <source>Outputs &lt;code&gt;Hi&lt;/code&gt;. You can learn more about the filters available to Jekyll &lt;a href=&quot;../../liquid/filters/index&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">출력 &lt;code&gt;Hi&lt;/code&gt; . &lt;a href=&quot;../../liquid/filters/index&quot;&gt;여기&lt;/a&gt; 에서 Jekyll 에서 사용할 수있는 필터에 대해 자세히 알아볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2291581dfc2cc48d0726a6393fdad0c7cf40c195" translate="yes" xml:space="preserve">
          <source>Outputs a variable called &lt;code&gt;page.title&lt;/code&gt; on the page.</source>
          <target state="translated">페이지에 &lt;code&gt;page.title&lt;/code&gt; 이라는 변수를 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="552f0311af4ab97f91dc8653580124d0fb276057" translate="yes" xml:space="preserve">
          <source>Outputs the content of the tag.</source>
          <target state="translated">태그의 내용을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="50df6f9a4168a759d9e89d4c2def5bf696afd82e" translate="yes" xml:space="preserve">
          <source>Outputs the sidebar if &lt;code&gt;page.show_sidebar&lt;/code&gt; is true. You can learn more about the tags available to Jekyll &lt;a href=&quot;../../liquid/tags/index&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;page.show_sidebar&lt;/code&gt; 가 true 인 경우 사이드 바를 출력 합니다. &lt;a href=&quot;../../liquid/tags/index&quot;&gt;여기&lt;/a&gt; 에서 Jekyll에 사용할 수있는 태그에 대해 자세히 알아볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="37dc9012ef71231741cb1e581f85142964b548d7" translate="yes" xml:space="preserve">
          <source>Overall, you can create includes that act as templates for a variety of uses &amp;mdash; inserting audio or video clips, alerts, special formatting, and more. However, note that you should avoid using too many includes, as this will slow down the build time of your site. For example, don&amp;rsquo;t use includes every time you insert an image. (The above technique shows a use case for special images.)</source>
          <target state="translated">전반적으로 오디오 또는 비디오 클립 삽입, 경고, 특수 형식 등 다양한 용도로 사용되는 템플릿 역할을하는 포함을 만들 수 있습니다. 그러나 너무 많은 포함을 사용하면 사이트 빌드 시간이 느려질 수 있으므로 피해야합니다. 예를 들어 이미지를 삽입 할 때마다 포함을 사용하지 마십시오. 위의 기술은 특수 이미지의 사용 사례를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="627a4cb25b349ef246f8579404f67f42035a2c83" translate="yes" xml:space="preserve">
          <source>Overall, you can create includes that act as templates for a variety of uses &amp;mdash; inserting audio or video clips, alerts, special formatting, and more. Note that you should avoid using too many includes, as this will slow down the build time of your site. For example, don&amp;rsquo;t use includes every time you insert an image. (The above technique shows a use case for special images.)</source>
          <target state="translated">전반적으로 오디오 또는 비디오 클립 삽입, 경고, 특수 서식 등 다양한 용도의 템플릿 역할을하는 포함을 만들 수 있습니다. 포함을 너무 많이 사용하면 사이트 빌드 시간이 느려질 수 있으므로 피해야합니다. 예를 들어 이미지를 삽입 할 때마다 포함을 사용하지 마십시오. (위의 기술은 특수 이미지의 사용 사례를 보여줍니다.)</target>
        </trans-unit>
        <trans-unit id="a407aa60450670a092614d3725b0bf7a57789eec" translate="yes" xml:space="preserve">
          <source>Override default development settings</source>
          <target state="translated">기본 개발 설정 재정의</target>
        </trans-unit>
        <trans-unit id="1fa8317388f8659e5d80c07bb57f00ba667fc7e7" translate="yes" xml:space="preserve">
          <source>Overriding theme defaults</source>
          <target state="translated">테마 기본값 재정의</target>
        </trans-unit>
        <trans-unit id="89ff31225c5f042fff61e92ec8cf80e417a7140c" translate="yes" xml:space="preserve">
          <source>Owner</source>
          <target state="translated">Owner</target>
        </trans-unit>
        <trans-unit id="fb727ea90883481adad9143766fed7cf0c61d139" translate="yes" xml:space="preserve">
          <source>Page Variables</source>
          <target state="translated">페이지 변수</target>
        </trans-unit>
        <trans-unit id="6c30ca069285c1ec29e909ff7ad7abae0aa1027d" translate="yes" xml:space="preserve">
          <source>Page specific information + the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;. Custom variables set via the front matter will be available here. See below for details.</source>
          <target state="translated">페이지 별 정보 + &lt;a href=&quot;../front-matter/index&quot;&gt;머리말&lt;/a&gt; . 서문을 통해 설정된 맞춤 변수는 여기에서 사용할 수 있습니다. 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b2edf287ea254dc5eefc4ac30424fb7a0fabecf3" translate="yes" xml:space="preserve">
          <source>Page specific information + the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt;. Custom variables set via the YAML Front Matter will be available here. See below for details.</source>
          <target state="translated">페이지 특정 정보 + &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML 주요 사항&lt;/a&gt; . YAML Front Matter를 통해 설정된 맞춤 변수는 여기에서 사용할 수 있습니다. 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="600584c2d5ccb97c0c0c424d9f32d6b102fcb040" translate="yes" xml:space="preserve">
          <source>Pages</source>
          <target state="translated">Pages</target>
        </trans-unit>
        <trans-unit id="1731a84a0ac0bb83b8947e3dc93bd2eedd07c402" translate="yes" xml:space="preserve">
          <source>Pages and posts can also access a specific data item. The example below shows how to access a specific item:</source>
          <target state="translated">페이지 및 게시물은 특정 데이터 항목에 액세스 할 수도 있습니다. 아래 예는 특정 항목에 액세스하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="8d7d8d1b2a29d690c9a2f23d15035cc21ad5509c" translate="yes" xml:space="preserve">
          <source>Pages are the most basic building block for content. They&amp;rsquo;re useful for standalone content (content which is not date based or is not a group of content such as staff members or recipes).</source>
          <target state="translated">페이지는 콘텐츠의 가장 기본적인 구성 요소입니다. 독립형 콘텐츠 (날짜 기반이 아니거나 직원 또는 레시피와 같은 콘텐츠 그룹이 아닌 콘텐츠)에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="93b9546c42784bd93f39c345a78ee775a824f706" translate="yes" xml:space="preserve">
          <source>Pages have the following placeholders available:</source>
          <target state="translated">페이지에는 다음과 같은 자리 표시자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="100325b8d6de92dc6ff09cd2c078133755bf274f" translate="yes" xml:space="preserve">
          <source>Pagination</source>
          <target state="translated">Pagination</target>
        </trans-unit>
        <trans-unit id="099f26d22f2eab450a9f8e4641df844a9fd35b39" translate="yes" xml:space="preserve">
          <source>Pagination does not support tags or categories</source>
          <target state="translated">페이지 매김은 태그 또는 카테고리를 지원하지 않습니다</target>
        </trans-unit>
        <trans-unit id="8d1188b7a9bf945de310de44fa2e4fda7a93a1ea" translate="yes" xml:space="preserve">
          <source>Pagination does not work from within Markdown files from your Jekyll site. Pagination works when called from within the HTML file, named &lt;code&gt;index.html&lt;/code&gt;, which optionally may reside in and produce pagination from within a subdirectory, via the &lt;code&gt;paginate_path&lt;/code&gt; configuration value.</source>
          <target state="translated">페이지 매김은 Jekyll 사이트의 Markdown 파일 내에서 작동하지 않습니다. 페이지 매김은 &lt;code&gt;index.html&lt;/code&gt; 이라는 HTML 파일 내에서 호출 될 때 작동합니다.이 파일 은 선택적으로 &lt;code&gt;paginate_path&lt;/code&gt; 구성 값을 통해 하위 디렉토리에 상주하여 페이지 매김을 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="665ed12f6912f493c693116c0d4595a8fceedf76" translate="yes" xml:space="preserve">
          <source>Pagination does not work from within Markdown or Textile files from your Jekyll site. Pagination works when called from within the HTML file, named &lt;code&gt;index.html&lt;/code&gt;, which optionally may reside in and produce pagination from within a subdirectory, via the &lt;code&gt;paginate_path&lt;/code&gt; configuration value.</source>
          <target state="translated">Jekyll 사이트의 Markdown 또는 Textile 파일에서 페이지 매김이 작동하지 않습니다. 페이지 매김은 &lt;code&gt;index.html&lt;/code&gt; 이라는 HTML 파일 내에서 호출 될 때 선택적으로 &lt;code&gt;paginate_path&lt;/code&gt; 구성 값을 통해 서브 디렉토리에 상주하여 페이지 매김을 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="28eb844982985dc922c656b73584b243a8ef4a58" translate="yes" xml:space="preserve">
          <source>Pagination for categories, tags and collections</source>
          <target state="translated">카테고리, 태그 및 컬렉션에 대한 페이지 매김</target>
        </trans-unit>
        <trans-unit id="bc21578e87f661e49f1a43a46e87bbd3f4931c48" translate="yes" xml:space="preserve">
          <source>Pagination only works within HTML files</source>
          <target state="translated">페이지 매김은 HTML 파일 내에서만 작동합니다</target>
        </trans-unit>
        <trans-unit id="a5e90cc1ce791d5b1a24484acb57915c8ea30726" translate="yes" xml:space="preserve">
          <source>Pagination pages through every post in the &lt;code&gt;posts&lt;/code&gt; variable unless a post has &lt;code&gt;hidden: true&lt;/code&gt; in its YAML Front Matter. It does not currently allow paging over groups of posts linked by a common tag or category. It cannot include any collection of documents because it is restricted to posts.</source>
          <target state="translated">게시물이 &lt;code&gt;hidden: true&lt;/code&gt; 있지 않은 한 &lt;code&gt;posts&lt;/code&gt; 변수의 모든 게시물을 통한 페이지 매김 페이지 : YAML Front Matter에서 true . 현재 공통 태그 또는 카테고리로 연결된 게시물 그룹에 대한 페이징을 허용하지 않습니다. 게시물로 제한되므로 문서 모음을 포함 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f30fe0bd3f86903a82b9d6f2de1da1477d0da18f" translate="yes" xml:space="preserve">
          <source>Pagination pages through every post in the &lt;code&gt;posts&lt;/code&gt; variable unless a post has &lt;code&gt;hidden: true&lt;/code&gt; in its front matter. It does not currently allow paging over groups of posts linked by a common tag or category. It cannot include any collection of documents because it is restricted to posts.</source>
          <target state="translated">게시물이 &lt;code&gt;hidden: true&lt;/code&gt; 있지 않는 한 &lt;code&gt;posts&lt;/code&gt; 변수의 모든 게시물을 페이지 매김 : 앞문에 true . 현재 공통 태그 또는 카테고리로 링크 된 게시물 그룹에 대한 페이징을 허용하지 않습니다. 게시물로 제한되므로 문서 모음을 포함 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="24533236e88c1d36ff37cc521374f5302ab40560" translate="yes" xml:space="preserve">
          <source>Paginator</source>
          <target state="translated">Paginator</target>
        </trans-unit>
        <trans-unit id="84e974ec86fb92f41c07299c2cf6c5412ae6f050" translate="yes" xml:space="preserve">
          <source>Paginator variable availability</source>
          <target state="translated">페이지 매김 변수 가용성</target>
        </trans-unit>
        <trans-unit id="1fc3796d3af4ab08534459a95040dbdc741f4ec6" translate="yes" xml:space="preserve">
          <source>Pass the &lt;code&gt;--livereload&lt;/code&gt; option to &lt;code&gt;serve&lt;/code&gt; to automatically refresh the page with each change you make to the source files: &lt;code&gt;bundle exec jekyll serve --livereload&lt;/code&gt;</source>
          <target state="translated">패스 &lt;code&gt;--livereload&lt;/code&gt; 의 하는 옵션을 &lt;code&gt;serve&lt;/code&gt; 자동으로 소스 파일을 만들어 각각의 변화에 페이지를 새로 고침을 : &lt;code&gt;bundle exec jekyll serve --livereload&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7c2edadd9ff3015cde4c2171a3a54ce96932f4e1" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;'auto'&lt;/code&gt; (auto-detect) works similar to &lt;code&gt;'cjk'&lt;/code&gt; but is more performant if the filter is used on a variable string that may or may not contain CJK chars.</source>
          <target state="translated">&lt;code&gt;'auto'&lt;/code&gt; (자동 감지)를 전달하면 ' &lt;code&gt;'cjk'&lt;/code&gt; 와 유사하게 작동 하지만 CJK 문자를 포함하거나 포함하지 않을 수있는 변수 문자열에서 필터를 사용하는 경우 더 성능이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b72f1dd7f64d80ff83eef93fab8c047bdaf13324" translate="yes" xml:space="preserve">
          <source>Passing &lt;code&gt;'cjk'&lt;/code&gt; as the argument will count every CJK character detected as one word irrespective of being separated by whitespace.</source>
          <target state="translated">인수로 &lt;code&gt;'cjk'&lt;/code&gt; 를 전달하면 공백으로 구분되는 것과 관계없이 한 단어로 감지 된 모든 CJK 문자가 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="92b3f43aee0fed327790633811b3b180ccc11c8a" translate="yes" xml:space="preserve">
          <source>Passing parameter variables to includes</source>
          <target state="translated">포함 할 매개 변수 변수 전달</target>
        </trans-unit>
        <trans-unit id="b1948833b08ddb3d596c60fadb3e50a706082bf2" translate="yes" xml:space="preserve">
          <source>Passing parameters to includes</source>
          <target state="translated">포함 할 매개 변수 전달</target>
        </trans-unit>
        <trans-unit id="d09b5f991f332dcef768215c7f896fd32593e3ab" translate="yes" xml:space="preserve">
          <source>Passing parameters to includes is especially helpful when you want to hide away complex formatting from your Markdown content.</source>
          <target state="translated">포함으로 매개 변수를 전달하면 마크 다운 컨텐츠에서 복잡한 형식을 숨기려는 경우에 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d4e60c27a532f36e8d9eb0fc03f0bd6d8dea3a72" translate="yes" xml:space="preserve">
          <source>Passing references to YAML files as parameter values</source>
          <target state="translated">매개 변수 값으로 YAML 파일에 대한 참조 전달</target>
        </trans-unit>
        <trans-unit id="c6e96759e0f6dc5232b961c30408375dd13359d1" translate="yes" xml:space="preserve">
          <source>Path to the document relative to the collection's directory, including base filename of the document.</source>
          <target state="translated">문서의 기본 파일 이름을 포함하여 컬렉션의 디렉토리에 상대적인 문서 경로입니다.</target>
        </trans-unit>
        <trans-unit id="2cc477e2aea081f0ff295affd369bd1d6c54ab84" translate="yes" xml:space="preserve">
          <source>Path to the document relative to the collection's directory.</source>
          <target state="translated">컬렉션 디렉토리와 관련된 문서의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="ba557b22b3669a781a4f3803c3c434ddd4aba78a" translate="yes" xml:space="preserve">
          <source>Path to the page relative to the site's source directory, excluding base filename of the page.</source>
          <target state="translated">페이지의 기본 파일 이름을 제외하고 사이트의 소스 디렉토리에 상대적인 페이지 경로입니다.</target>
        </trans-unit>
        <trans-unit id="84e9675ad3e50543cbc04858a3c2d72d19a3e52f" translate="yes" xml:space="preserve">
          <source>People often use &lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;rbenv&lt;/a&gt; to manage multiple Ruby versions. This is very useful when you need to be able to run a given Ruby version on a project.</source>
          <target state="translated">사람들은 종종 &lt;a href=&quot;https://github.com/rbenv/rbenv&quot;&gt;rbenv&lt;/a&gt; 를 사용 하여 여러 Ruby 버전을 관리합니다. 이것은 프로젝트에서 주어진 Ruby 버전을 실행할 수 있어야 할 때 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="7127bd847805300c5c2ebdef3287652a44a839e2" translate="yes" xml:space="preserve">
          <source>Percent encodes any special characters in a URI. URI escape normally replaces a space with &lt;code&gt;%20&lt;/code&gt;. &lt;a href=&quot;https://en.wikipedia.org/wiki/Percent-encoding#Types_of_URI_characters&quot;&gt;Reserved characters&lt;/a&gt; will not be escaped.</source>
          <target state="translated">퍼센트는 URI에서 특수 문자를 인코딩합니다. URI 이스케이프는 일반적으로 공백을 &lt;code&gt;%20&lt;/code&gt; 으로 바꿉니다 . &lt;a href=&quot;https://en.wikipedia.org/wiki/Percent-encoding#Types_of_URI_characters&quot;&gt;예약 된 문자&lt;/a&gt; 는 이스케이프되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="88973c8fae2719fe8ac2f36fc3841aa776c29088" translate="yes" xml:space="preserve">
          <source>Permalink Style</source>
          <target state="translated">퍼머 링크 스타일</target>
        </trans-unit>
        <trans-unit id="4a6598c061feabe730c00f48fbba63aeeb8cad94" translate="yes" xml:space="preserve">
          <source>Permalink settings for pages and collections</source>
          <target state="translated">페이지 및 모음에 대한 퍼머 링크 설정</target>
        </trans-unit>
        <trans-unit id="722b6f6fa174c5db2506367d3abe2fca3616ead6" translate="yes" xml:space="preserve">
          <source>Permalink style examples with posts</source>
          <target state="translated">게시물이있는 퍼머 링크 스타일 예제</target>
        </trans-unit>
        <trans-unit id="dbd403fe181f92e05bc517db25b4ae6314e2582e" translate="yes" xml:space="preserve">
          <source>Permalinks</source>
          <target state="translated">Permalinks</target>
        </trans-unit>
        <trans-unit id="45205b32aac7d14c5f63a3d55000c4404bdd71fc" translate="yes" xml:space="preserve">
          <source>Permalinks and default paths</source>
          <target state="translated">퍼머 링크 및 기본 경로</target>
        </trans-unit>
        <trans-unit id="8841b244eb807db2e75566d7e14c56fe4958c327" translate="yes" xml:space="preserve">
          <source>Permalinks are the output path for your pages, posts, or collections. They allow you to structure the directories of your source code different from the directories in your output.</source>
          <target state="translated">영구 링크는 페이지, 게시물 또는 컬렉션의 출력 경로입니다. 이를 통해 출력의 디렉토리와 다른 소스 코드의 디렉토리를 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f47de5ff111161d18fad9e57a6f9bb229ff5fc35" translate="yes" xml:space="preserve">
          <source>Permalinks no longer automatically add a trailing slash</source>
          <target state="translated">영구 링크가 더 이상 자동으로 슬래시를 추가하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="70a8fc9a8a667f813cf50a26ea70b8d3e322e9c0" translate="yes" xml:space="preserve">
          <source>Permalinks refer to the URLs (excluding the domain name or directory folder) for your pages, posts, or collections. Jekyll supports a flexible way to build permalinks, allowing you to leverage various template variables or choose built-in permalink styles (such as &lt;code&gt;date&lt;/code&gt;) that automatically use a template-variable pattern.</source>
          <target state="translated">영구 링크는 페이지, 게시물 또는 컬렉션의 URL (도메인 이름 또는 디렉토리 폴더 제외)을 나타냅니다. Jekyll은 다양한 템플릿 변수를 활용하거나 템플릿 변수 패턴을 자동으로 사용하는 내장 된 permalink 스타일 (예 : &lt;code&gt;date&lt;/code&gt; )을 선택할 수있는 유연한 permalink 구축 방법을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="60720f5c5a4a72182a2e32579d5ff97bb9804d3c" translate="yes" xml:space="preserve">
          <source>Pick a random value from an array. Optional: pick multiple values.</source>
          <target state="translated">배열에서 임의의 값을 선택하십시오. 선택 사항 : 여러 값을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="59e55e94ff0cf531532aab03ff3c79f6012d21ce" translate="yes" xml:space="preserve">
          <source>Pick a random value from an array. Optionally, pick multiple values.</source>
          <target state="translated">배열에서 임의의 값을 선택합니다. 선택적으로 여러 값을 선택합니다.</target>
        </trans-unit>
        <trans-unit id="a435a570c653de6428021d4190d9d6afa881d5c0" translate="yes" xml:space="preserve">
          <source>Pick up a theme</source>
          <target state="translated">테마 선택</target>
        </trans-unit>
        <trans-unit id="6724700fe82140ed81667d9e1970f59962831ee1" translate="yes" xml:space="preserve">
          <source>Place all your partials in your &lt;code&gt;sass_dir&lt;/code&gt;, which defaults to &lt;code&gt;&amp;lt;source&amp;gt;/_sass&lt;/code&gt;. Place your main SCSS or Sass files in the place you want them to be in the output file, such as &lt;code&gt;&amp;lt;source&amp;gt;/css&lt;/code&gt;. For an example, take a look at &lt;a href=&quot;https://github.com/jekyll/jekyll-sass-converter/tree/master/docs&quot;&gt;this example site using Sass support in Jekyll&lt;/a&gt;.</source>
          <target state="translated">모든 부분을 &lt;code&gt;sass_dir&lt;/code&gt; 에 배치하십시오. 기본값은 &lt;code&gt;&amp;lt;source&amp;gt;/_sass&lt;/code&gt; 입니다. 기본 SCSS 또는 Sass 파일을 &lt;code&gt;&amp;lt;source&amp;gt;/css&lt;/code&gt; 와 같은 출력 파일에 원하는 위치에 배치하십시오 . 예를 들어 &lt;a href=&quot;https://github.com/jekyll/jekyll-sass-converter/tree/master/docs&quot;&gt;Jekyll의 Sass 지원을 사용하여이 예제 사이트를&lt;/a&gt; 살펴보십시오 .</target>
        </trans-unit>
        <trans-unit id="b9d011d9a69638626708513d5be1a1045790a7ed" translate="yes" xml:space="preserve">
          <source>Place it in the &lt;code&gt;bin&lt;/code&gt; subdirectory of your home folder (&lt;code&gt;~/bin&lt;/code&gt;)</source>
          <target state="translated">홈 폴더 의 &lt;code&gt;bin&lt;/code&gt; 서브 디렉토리 ( &lt;code&gt;~/bin&lt;/code&gt; )에 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="1fc60b48edacdcff0774ec0c923e2a01de2bba2a" translate="yes" xml:space="preserve">
          <source>Place named HTML or &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; files for each page in your site&amp;rsquo;s root folder.</source>
          <target state="translated">사이트의 루트 폴더에 각 페이지에 대해 이름이 지정된 HTML 또는 &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; 파일을 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="7c9271c31bc7a38b8983172ef056e0b18258c168" translate="yes" xml:space="preserve">
          <source>Place pages inside folders and subfolders named whatever you want.</source>
          <target state="translated">원하는 이름의 폴더와 하위 폴더 안에 페이지를 배치하십시오.</target>
        </trans-unit>
        <trans-unit id="b62930d0710de4268cfd1b4505b2a2ad7a57660d" translate="yes" xml:space="preserve">
          <source>Placeholders</source>
          <target state="translated">Placeholders</target>
        </trans-unit>
        <trans-unit id="a5c540254fd3b4936f9e041d2134f4f59504ea17" translate="yes" xml:space="preserve">
          <source>Placement into layouts work similar to how Russian dolls encase the smaller ones within itself or how an oyster generates a pearl &amp;mdash; the converted output from the preceding stage forms the core and layout(s) are successively &lt;em&gt;rendered&lt;/em&gt; separately onto the core.</source>
          <target state="translated">레이아웃에 배치하는 방식은 러시아 인형이 작은 인형을 내부에 넣거나 굴이 진주를 생성하는 방식과 유사합니다. 이전 단계에서 변환 된 출력이 코어를 형성하고 레이아웃이 연속적으로 코어에 별도로 &lt;em&gt;렌더링&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="e6d5bbc4f1c87296e2a7ea566d1bfd5a5169afdf" translate="yes" xml:space="preserve">
          <source>Please note that both &lt;code&gt;remove_block_html_tags&lt;/code&gt; and &lt;code&gt;remove_span_html_tags&lt;/code&gt; are currently unsupported in Jekyll due to the fact that they are not included within the kramdown HTML converter.</source>
          <target state="translated">&lt;code&gt;remove_block_html_tags&lt;/code&gt; 와 &lt;code&gt;remove_span_html_tags&lt;/code&gt; 는 모두 kramdown HTML 변환기에 포함되어 있지 않기 때문에 Jekyll에서 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="650509eedfbfae3803f781c1708f1c1fc918b11b" translate="yes" xml:space="preserve">
          <source>Please note that globbing a path is known to have a negative effect on performance and is currently not optimized, especially on Windows. Globbing a path will increase your build times in proportion to the size of the associated collection directory.</source>
          <target state="translated">경로를 지정하는 것은 성능에 부정적인 영향을주는 것으로 알려져 있으며 현재 특히 Windows에서 최적화되지 않았습니다. 경로를 가져 오면 관련 콜렉션 디렉토리의 크기에 비례하여 빌드 시간이 늘어납니다.</target>
        </trans-unit>
        <trans-unit id="3e7053ca3819821374d48c6e7c191b321fed7641" translate="yes" xml:space="preserve">
          <source>Please refer to GitHub official documentation on &lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;user, organization and project pages&lt;/a&gt; to see more detailed examples.</source>
          <target state="translated">더 자세한 예를 보려면 &lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;사용자, 조직 및 프로젝트 페이지의&lt;/a&gt; GitHub 공식 문서 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1837db6abc417517a9f8ed078c5f32ee6063cb9b" translate="yes" xml:space="preserve">
          <source>Please refer to our &lt;a href=&quot;https://jekyllrb.com/docs/upgrading/&quot;&gt;upgrading section&lt;/a&gt; for major updates detailed instructions.</source>
          <target state="translated">주요 업데이트에 대한 자세한 지침은 &lt;a href=&quot;https://jekyllrb.com/docs/upgrading/&quot;&gt;업그레이드 섹션&lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5b05c8bfba1866fa9160e033fa61d16d7fb42a9d" translate="yes" xml:space="preserve">
          <source>Please report issues you encounter!</source>
          <target state="translated">발생한 문제를 신고하십시오!</target>
        </trans-unit>
        <trans-unit id="c3708d29157821517e37a79459a3140546e30b5a" translate="yes" xml:space="preserve">
          <source>Please stop and rerun `jekyll serve` command.</source>
          <target state="translated">jekyll serve 명령을 중지했다가 다시 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="ab2e26dd8b8868a3969cb3321e0c983c0d9d67d4" translate="yes" xml:space="preserve">
          <source>Plugins</source>
          <target state="translated">Plugins</target>
        </trans-unit>
        <trans-unit id="a9879fb675982db2f3432f7a47d5e774a955dcf5" translate="yes" xml:space="preserve">
          <source>Plugins allow you to extend Jekyll&amp;rsquo;s behavior to fit your needs. There are six types of plugins in Jekyll.</source>
          <target state="translated">플러그인을 사용하면 필요에 맞게 Jekyll의 동작을 확장 할 수 있습니다. Jekyll에는 6 가지 유형의 플러그인이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbca525c651606d32aa2cd9d29a443e374188b86" translate="yes" xml:space="preserve">
          <source>Plugins on GitHub Pages</source>
          <target state="translated">GitHub 페이지의 플러그인</target>
        </trans-unit>
        <trans-unit id="375ed3fbdc9976dcc468b1c1ba32b1ffb19c53bd" translate="yes" xml:space="preserve">
          <source>Plugins/themes can also leverage Data Files to set configuration variables.</source>
          <target state="translated">플러그인 / 테마는 데이터 파일을 활용하여 구성 변수를 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="531647990f4b25a57b01632a99f5d6ca1762bab5" translate="yes" xml:space="preserve">
          <source>Port for LiveReload to listen on.</source>
          <target state="translated">LiveReload가 수신 할 포트입니다.</target>
        </trans-unit>
        <trans-unit id="a85f761779816bf8dd03436d22df275b06b2dd24" translate="yes" xml:space="preserve">
          <source>Post excerpts</source>
          <target state="translated">발췌 게시물</target>
        </trans-unit>
        <trans-unit id="a0ca0c3198947ded7419101f3e83d48a9cb41f2a" translate="yes" xml:space="preserve">
          <source>Posts</source>
          <target state="translated">Posts</target>
        </trans-unit>
        <trans-unit id="5957559cf2bc0a4b768a12ae4fb1f9e36e15312f" translate="yes" xml:space="preserve">
          <source>Posts available for that page.</source>
          <target state="translated">해당 페이지에 사용할 수있는 게시물입니다.</target>
        </trans-unit>
        <trans-unit id="19fb462921217a31066f1e100f09af5906e907e0" translate="yes" xml:space="preserve">
          <source>Posts available for the current page</source>
          <target state="translated">현재 페이지에 사용할 수있는 게시물</target>
        </trans-unit>
        <trans-unit id="c1427edf4141184bf946c2e6be97a75ead52f520" translate="yes" xml:space="preserve">
          <source>Pre-configuring Theme-gems4.0</source>
          <target state="translated">Theme-gems4.0 사전 구성</target>
        </trans-unit>
        <trans-unit id="f903aefffca964e59bae5902fdb1e7726250998a" translate="yes" xml:space="preserve">
          <source>Pre-releases</source>
          <target state="translated">Pre-releases</target>
        </trans-unit>
        <trans-unit id="ab86fb82a986460447b29bbb55ca5b9bf867bad6" translate="yes" xml:space="preserve">
          <source>Precedence</source>
          <target state="translated">Precedence</target>
        </trans-unit>
        <trans-unit id="1c4906dcef85048abb9eb583ebf5283b131efdb6" translate="yes" xml:space="preserve">
          <source>Predefined Global Variables</source>
          <target state="translated">사전 정의 된 전역 변수</target>
        </trans-unit>
        <trans-unit id="3d2381d3ce17502f9b5cd6e96843c14d10cb7fcb" translate="yes" xml:space="preserve">
          <source>Predefined Variables for Posts</source>
          <target state="translated">게시물에 대한 사전 정의 된 변수</target>
        </trans-unit>
        <trans-unit id="26ba43519e040aa1b9b90878aca34bb3b54255d2" translate="yes" xml:space="preserve">
          <source>Prepend the &lt;code&gt;baseurl&lt;/code&gt; value to the input. Useful if your site is hosted at a subpath rather than the root of the domain.</source>
          <target state="translated">&lt;code&gt;baseurl&lt;/code&gt; 값을 입력 앞에 추가하십시오 . 사이트가 도메인 루트가 아닌 하위 경로에서 호스팅되는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="9dc057d4d4274fe0084085e47f8ab7b0849795a9" translate="yes" xml:space="preserve">
          <source>Prepend the &lt;code&gt;url&lt;/code&gt; and &lt;code&gt;baseurl&lt;/code&gt; value to the input.</source>
          <target state="translated">&lt;code&gt;url&lt;/code&gt; 및 &lt;code&gt;baseurl&lt;/code&gt; 값을 입력 앞에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="eed036e414a34a0c245858652e6d88f14c3faefb" translate="yes" xml:space="preserve">
          <source>Prerequisites</source>
          <target state="translated">Prerequisites</target>
        </trans-unit>
        <trans-unit id="1d538a43faed87f85cebbc6100a1b9ccf9957db3" translate="yes" xml:space="preserve">
          <source>Previewing your theme</source>
          <target state="translated">테마 미리보기</target>
        </trans-unit>
        <trans-unit id="2154f26d808dc1c91b9a1a53f37bd4a9568f4cb5" translate="yes" xml:space="preserve">
          <source>Print verbose output.</source>
          <target state="translated">자세한 출력을 인쇄합니다.</target>
        </trans-unit>
        <trans-unit id="7b0546431f16f831257149f91717df7dca1edc54" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Access the site object using Liquid</source>
          <target state="translated">ProTip &amp;trade; : Liquid를 사용하여 사이트 개체에 액세스</target>
        </trans-unit>
        <trans-unit id="3265c92a3b4fb0a61b66fdd29aad666715eaf588" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Don't repeat yourself</source>
          <target state="translated">ProTip &amp;trade; : 반복하지 마십시오</target>
        </trans-unit>
        <trans-unit id="de67579ec50727aa178d3fe02d3566f4ac49a47e" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Enable Syntax Highlighting</source>
          <target state="translated">ProTip &amp;trade; : 구문 강조 사용</target>
        </trans-unit>
        <trans-unit id="9446cafc3be6fdaecb79928bdb5b239f317a9eee" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Front Matter Variables Are Optional</source>
          <target state="translated">ProTip &amp;trade; : 전면 문제 변수는 선택 사항입니다</target>
        </trans-unit>
        <trans-unit id="cb3a1d73b062d32f0f1b5eae3047cabc40ebf0c0" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Link to other posts</source>
          <target state="translated">ProTip &amp;trade; : 다른 게시물로 연결</target>
        </trans-unit>
        <trans-unit id="da7d4be0b76a4aa0b81c7842c6357ff95bac3ac4" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Render Posts Marked As Unpublished</source>
          <target state="translated">ProTip &amp;trade; : 게시되지 않은 것으로 표시된 게시물 렌더링</target>
        </trans-unit>
        <trans-unit id="15cee3e14e9d0d4d1e113328a457f8ab8391e83a" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Show line numbers</source>
          <target state="translated">ProTip &amp;trade; : 줄 번호 표시</target>
        </trans-unit>
        <trans-unit id="fc6f2dc1893a7a027e119eba27c9d2c116153006" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Use Custom Front Matter</source>
          <target state="translated">ProTip &amp;trade; : 커스텀 프론트 매트 사용</target>
        </trans-unit>
        <trans-unit id="10cef24c138180517ee4ad5cb91f235256dd02d5" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Use GitHub Pages for zero-hassle Jekyll hosting</source>
          <target state="translated">ProTip &amp;trade; : 번거롭지 않은 Jekyll 호스팅을 위해 GitHub 페이지 사용</target>
        </trans-unit>
        <trans-unit id="afaaef5ab1edf9c741a9f2886bb79aed97e05d22" translate="yes" xml:space="preserve">
          <source>ProTip&amp;trade;: Use layouts on your homepage</source>
          <target state="translated">ProTip &amp;trade; : 홈페이지에서 레이아웃 사용</target>
        </trans-unit>
        <trans-unit id="d827c1b33f443ecc681c04af8ce64c5d2004abc0" translate="yes" xml:space="preserve">
          <source>ProTips&amp;trade; help you get more from Jekyll</source>
          <target state="translated">ProTips &amp;trade;로 Jekyll의 더 많은 혜택을 누리십시오</target>
        </trans-unit>
        <trans-unit id="c032a343ae0db68178586838c17d01f7b8c422f7" translate="yes" xml:space="preserve">
          <source>Problems installing Jekyll?</source>
          <target state="translated">Jekyll 설치에 문제가 있습니까?</target>
        </trans-unit>
        <trans-unit id="cc329a8ee3d1b68c463fded001694148653fd1e8" translate="yes" xml:space="preserve">
          <source>Problems running Jekyll</source>
          <target state="translated">Jekyll 실행 문제</target>
        </trans-unit>
        <trans-unit id="d74e7b85b7e0f35a8f31e48f3f367816f7b91635" translate="yes" xml:space="preserve">
          <source>Process and render draft posts.</source>
          <target state="translated">임시 게시물을 처리하고 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="8d79aa660a969e338fe721754211cc16d44e41b2" translate="yes" xml:space="preserve">
          <source>Produce an index for related posts. Requires the &lt;a href=&quot;http://www.classifier-reborn.com/&quot;&gt;classifier-reborn&lt;/a&gt; plugin.</source>
          <target state="translated">관련 게시물에 대한 색인을 생성하십시오. &lt;a href=&quot;http://www.classifier-reborn.com/&quot;&gt;분류 자 다시 태어난&lt;/a&gt; 플러그인이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="6e76f8303253a28fdaf837549d37efade2e6a28f" translate="yes" xml:space="preserve">
          <source>Produce an index for related posts. Requires the &lt;a href=&quot;https://jekyll.github.io/classifier-reborn/&quot;&gt;classifier-reborn&lt;/a&gt; plugin.</source>
          <target state="translated">관련 게시물에 대한 색인을 생성합니다. &lt;a href=&quot;https://jekyll.github.io/classifier-reborn/&quot;&gt;분류 자 재 탄생&lt;/a&gt; 플러그인이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="2fe389b04fca211aac6d4aedea7a19bb13c6c893" translate="yes" xml:space="preserve">
          <source>Production Problems</source>
          <target state="translated">생산 문제</target>
        </trans-unit>
        <trans-unit id="f7a01690b389c7251b3fc63190bd4c14a215d52e" translate="yes" xml:space="preserve">
          <source>Project Page URL Structure</source>
          <target state="translated">프로젝트 페이지 URL 구조</target>
        </trans-unit>
        <trans-unit id="dc5067ca2ef47522f33e05bdaf9f555d40d0b771" translate="yes" xml:space="preserve">
          <source>Project Pages</source>
          <target state="translated">프로젝트 페이지</target>
        </trans-unit>
        <trans-unit id="fcd617dd71499b60ca9f17be875d6e0be2c51988" translate="yes" xml:space="preserve">
          <source>Provided that the file has a &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt; section, it will be transformed by Jekyll. The same will happen for any &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.markdown&lt;/code&gt;, &lt;code&gt;.md&lt;/code&gt;, or &lt;code&gt;.textile&lt;/code&gt; file in your site&amp;rsquo;s root directory or directories not listed above.</source>
          <target state="translated">파일에 &lt;a href=&quot;../front-matter/index&quot;&gt;서문&lt;/a&gt; 섹션이있는 경우 Jekyll에 의해 변환됩니다. 사이트의 루트 디렉토리 또는 위에 나열되지 않은 디렉토리 에있는 &lt;code&gt;.html&lt;/code&gt; , &lt;code&gt;.markdown&lt;/code&gt; , &lt;code&gt;.md&lt;/code&gt; 또는 &lt;code&gt;.textile&lt;/code&gt; 파일에 대해서도 마찬가지 입니다.</target>
        </trans-unit>
        <trans-unit id="3c154d4bdff400f5e6b72eaeb22deac7b3dc0862" translate="yes" xml:space="preserve">
          <source>Provided that the file has a &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; section, it will be transformed by Jekyll. The same will happen for any &lt;code&gt;.html&lt;/code&gt;, &lt;code&gt;.markdown&lt;/code&gt;, &lt;code&gt;.md&lt;/code&gt;, or &lt;code&gt;.textile&lt;/code&gt; file in your site&amp;rsquo;s root directory or directories not listed above.</source>
          <target state="translated">파일에 &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; 섹션이 있으면 Jekyll에 의해 변환됩니다. 사이트의 루트 디렉토리 또는 위에 나열되지 않은 디렉토리의 모든 &lt;code&gt;.html&lt;/code&gt; , &lt;code&gt;.markdown&lt;/code&gt; , &lt;code&gt;.md&lt;/code&gt; 또는 &lt;code&gt;.textile&lt;/code&gt; 파일에 대해서도 마찬가지 입니다.</target>
        </trans-unit>
        <trans-unit id="3a18cc9761b1e8102294f9e8dc7e4aa4ba031264" translate="yes" xml:space="preserve">
          <source>Providing permissions</source>
          <target state="translated">권한 제공</target>
        </trans-unit>
        <trans-unit id="72be0277c49f7726d31c1d905434c0eea552f97f" translate="yes" xml:space="preserve">
          <source>Publish posts or collection documents with a future date.</source>
          <target state="translated">미래의 날짜로 게시물 또는 수집 문서를 게시하십시오.</target>
        </trans-unit>
        <trans-unit id="93655b49b00a36f5094483f0c66df8a777df09bf" translate="yes" xml:space="preserve">
          <source>Publishing to GitHub Pages? &lt;a href=&quot;../github-pages/index&quot;&gt;Check out our documentation page for just that purpose&lt;/a&gt;.</source>
          <target state="translated">GitHub 페이지에 게시 하시겠습니까? &lt;a href=&quot;../github-pages/index&quot;&gt;그 목적을 위해 설명서 페이지를 확인하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c80ee6e060aa94453a1957194269b1eac9d50756" translate="yes" xml:space="preserve">
          <source>Publishing your theme</source>
          <target state="translated">테마 게시</target>
        </trans-unit>
        <trans-unit id="056fba88002903e5d56a79d693886d8358679885" translate="yes" xml:space="preserve">
          <source>Push, pop, shift, and unshift elements from an Array.</source>
          <target state="translated">어레이에서 요소를 푸시, 팝, 시프트 및 시프트 해제합니다.</target>
        </trans-unit>
        <trans-unit id="ceaff83322cbcd1e49c2b1b4070eb8936ff84043" translate="yes" xml:space="preserve">
          <source>Push, pop, shift, and unshift elements from an Array. These are &lt;strong&gt;NON-DESTRUCTIVE&lt;/strong&gt;, i.e. they do not mutate the array, but rather make a copy and mutate that.</source>
          <target state="translated">배열에서 요소를 밀고, 팝하고, 이동하고, 이동 해제합니다. 이것들은 &lt;strong&gt;비파괴 적입니다&lt;/strong&gt; . 즉, 배열을 변경하지 않고 오히려 복사본을 만들고 변경합니다.</target>
        </trans-unit>
        <trans-unit id="1ec7041a18430566cd7bb1e7d19b5678584ab214" translate="yes" xml:space="preserve">
          <source>Questions?</source>
          <target state="translated">Questions?</target>
        </trans-unit>
        <trans-unit id="417820f1bade4496f4525989f3a39679097e4256" translate="yes" xml:space="preserve">
          <source>Quick-start guide</source>
          <target state="translated">빠른 시작 가이드</target>
        </trans-unit>
        <trans-unit id="8f41d8cd3e40c56b21fcde708ec849b3d204df60" translate="yes" xml:space="preserve">
          <source>RHEL8/CentOS8</source>
          <target state="translated">RHEL8/CentOS8</target>
        </trans-unit>
        <trans-unit id="e832f5c7e96b274627824d8bff3aeeeaccfef01b" translate="yes" xml:space="preserve">
          <source>RVM is a popular Ruby Version Manager (like rbenv, chruby, etc). This directive tells Travis the Ruby version to use when running your test script.</source>
          <target state="translated">RVM은 널리 사용되는 Ruby 버전 관리자입니다 (예 : rbenv, chruby 등). 이 지시문은 테스트 스크립트를 실행할 때 Travis에 Ruby 버전을 사용하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="f61b7ffac55507f1e8f7322fcceed1fbcd1afb9e" translate="yes" xml:space="preserve">
          <source>RVM is a popular Ruby Version Manager (like rbenv, chruby, etc). This directive tells Travis the Ruby version to use when running your test script. Use a &lt;a href=&quot;https://docs.travis-ci.com/user/languages/ruby/#Specifying-Ruby-versions-and-implementations&quot;&gt;version which is pre-installed on the Travis build docker&lt;/a&gt; image to speed up the build.</source>
          <target state="translated">RVM은 인기있는 Ruby 버전 관리자 (rbenv, chruby 등)입니다. 이 지시문은 Travis에게 테스트 스크립트를 실행할 때 사용할 Ruby 버전을 알려줍니다. &lt;a href=&quot;https://docs.travis-ci.com/user/languages/ruby/#Specifying-Ruby-versions-and-implementations&quot;&gt;Travis 빌드 도커&lt;/a&gt; 이미지 에 사전 설치된 버전을 사용하여 빌드 속도를 높입니다.</target>
        </trans-unit>
        <trans-unit id="3d020480fdb4c067a8ed1f783c83aa65284c204a" translate="yes" xml:space="preserve">
          <source>Rack-Jekyll</source>
          <target state="translated">Rack-Jekyll</target>
        </trans-unit>
        <trans-unit id="ccb3b7cf53d9645b5536605277c7731117c1a9e3" translate="yes" xml:space="preserve">
          <source>Rake</source>
          <target state="translated">Rake</target>
        </trans-unit>
        <trans-unit id="2d9be644c6f66a11135d7c8cbbb137cee962d2b7" translate="yes" xml:space="preserve">
          <source>Rather than passing individual flags via the command line, you can now pass an entire custom Jekyll config file. This helps to distinguish between environments, or lets you programmatically override user-specified defaults. Simply add the &lt;code&gt;--config&lt;/code&gt; flag to the &lt;code&gt;jekyll&lt;/code&gt; command, followed by the path to one or more config files (comma-delimited, no spaces).</source>
          <target state="translated">명령 행을 통해 개별 플래그를 전달하는 대신 전체 사용자 정의 Jekyll 구성 파일을 전달할 수 있습니다. 이를 통해 환경을 구별하거나 프로그래밍 방식으로 사용자 지정 기본값을 재정의 할 수 있습니다. &lt;code&gt;jekyll&lt;/code&gt; 명령에 &lt;code&gt;--config&lt;/code&gt; 플래그를 추가 한 다음 하나 이상의 구성 파일 경로 (공백없이 쉼표로 구분)를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="169488557f80f487b9a8d96107d18ddd44b3dd38" translate="yes" xml:space="preserve">
          <source>Rather than typing &lt;code&gt;permalink: /:categories/:year/:month/:day/:title/&lt;/code&gt;, you can just type &lt;code&gt;permalink: pretty&lt;/code&gt;.</source>
          <target state="translated">오히려 타이핑보다 &lt;code&gt;permalink: /:categories/:year/:month/:day/:title/&lt;/code&gt; , 당신은 입력 할 수 있습니다 &lt;code&gt;permalink: pretty&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="439540dc1f179dff59fb01db013c30acaaa99734" translate="yes" xml:space="preserve">
          <source>Read &lt;a href=&quot;http://andycroll.com/ruby/serving-a-jekyll-blog-using-heroku/&quot;&gt;this post&lt;/a&gt; on how to deploy to Heroku using Rack-Jekyll.</source>
          <target state="translated">Rack-Jekyll을 사용하여 Heroku에 배포하는 방법에 대한 &lt;a href=&quot;http://andycroll.com/ruby/serving-a-jekyll-blog-using-heroku/&quot;&gt;이 게시물&lt;/a&gt; 을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="1503cda8e6c8f59a76329fc13ec7d6f3fb2a5a80" translate="yes" xml:space="preserve">
          <source>Read the &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;Jekyll Documentation&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;Jekyll 문서&lt;/a&gt; 읽기</target>
        </trans-unit>
        <trans-unit id="c9d270ccf38c4d6afc19eb9c3b5fd3e453667df8" translate="yes" xml:space="preserve">
          <source>Read the full &lt;a href=&quot;https://jekyllrb.com/docs/conduct/&quot;&gt;code of conduct&lt;/a&gt;</source>
          <target state="translated">전체 &lt;a href=&quot;https://jekyllrb.com/docs/conduct/&quot;&gt;행동 강령&lt;/a&gt; 읽기</target>
        </trans-unit>
        <trans-unit id="ae9872ae617c714e6747d2ca6c2e15fde2f82cfd" translate="yes" xml:space="preserve">
          <source>Read this &lt;a href=&quot;https://medium.com/@jameshamann/deploy-your-jekyll-site-using-aws-amplify-with-only-a-few-clicks-8f3dd8f26112&quot;&gt;step-by-step guide&lt;/a&gt; to deploy and host your Jekyll site on AWS Amplify.</source>
          <target state="translated">이 &lt;a href=&quot;https://medium.com/@jameshamann/deploy-your-jekyll-site-using-aws-amplify-with-only-a-few-clicks-8f3dd8f26112&quot;&gt;단계별 안내서&lt;/a&gt; 를 읽고 AWS Amplify에서 Jekyll 사이트를 배포하고 호스팅하십시오.</target>
        </trans-unit>
        <trans-unit id="c3824afe52578fcc0be477b0bcd0fe9ee558faca" translate="yes" xml:space="preserve">
          <source>Read this &lt;a href=&quot;https://www.21yunbox.com/docs/#/deploy-jekyll&quot;&gt;Jekyll step-by-step guide&lt;/a&gt; to deploy your Jekyll site on 21YunBox.</source>
          <target state="translated">21YunBox에 Jekyll 사이트를 배포하려면 이 &lt;a href=&quot;https://www.21yunbox.com/docs/#/deploy-jekyll&quot;&gt;Jekyll 단계별 가이드&lt;/a&gt; 를 읽어보세요.</target>
        </trans-unit>
        <trans-unit id="da32500dfd70b8f86508eb38e0d732d6716b8578" translate="yes" xml:space="preserve">
          <source>Read this &lt;a href=&quot;https://www.21yunbox.com/docs/v2/static.html#jekyll&quot;&gt;Jekyll step-by-step guide&lt;/a&gt; to deploy your Jekyll site on 21YunBox.</source>
          <target state="translated">21YunBox에 Jekyll 사이트를 배포하려면 이 &lt;a href=&quot;https://www.21yunbox.com/docs/v2/static.html#jekyll&quot;&gt;Jekyll 단계별 가이드&lt;/a&gt; 를 읽어보세요.</target>
        </trans-unit>
        <trans-unit id="6f2d22f1682d1726666dee549b405108d4fc37c5" translate="yes" xml:space="preserve">
          <source>Read this &lt;a href=&quot;https://www.netlify.com/blog/2015/10/28/a-step-by-step-guide-jekyll-3.0-on-netlify/&quot;&gt;Jekyll step-by-step guide&lt;/a&gt; to setup your Jekyll site on Netlify.</source>
          <target state="translated">이 &lt;a href=&quot;https://www.netlify.com/blog/2015/10/28/a-step-by-step-guide-jekyll-3.0-on-netlify/&quot;&gt;Jekyll 단계별 가이드&lt;/a&gt; 를 읽고 Netlify에서 Jekyll 사이트를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="fb94c75b1c474d655ecd0a671085e85b8917cf80" translate="yes" xml:space="preserve">
          <source>Read this &lt;a href=&quot;https://www.netlify.com/blog/2020/04/02/a-step-by-step-guide-jekyll-4.0-on-netlify/&quot;&gt;Jekyll step-by-step guide&lt;/a&gt; to setup your Jekyll site on Netlify.</source>
          <target state="translated">이 &lt;a href=&quot;https://www.netlify.com/blog/2020/04/02/a-step-by-step-guide-jekyll-4.0-on-netlify/&quot;&gt;Jekyll 단계별 가이드&lt;/a&gt; 를 읽고 Netlify에서 Jekyll 사이트를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="5f631ff0302c32d82d8b231bc317b0beda2e0d40" translate="yes" xml:space="preserve">
          <source>Redcarpet</source>
          <target state="translated">Redcarpet</target>
        </trans-unit>
        <trans-unit id="8ea1404223d116c60a3e42d509dd79effe38a523" translate="yes" xml:space="preserve">
          <source>Redcarpet can be configured by providing an &lt;code&gt;extensions&lt;/code&gt; sub-setting, whose value should be an array of strings. Each string should be the name of one of the &lt;code&gt;Redcarpet::Markdown&lt;/code&gt; class&amp;rsquo;s extensions; if present in the array, it will set the corresponding extension to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">Redcarpet은 &lt;code&gt;extensions&lt;/code&gt; 하위 설정을 제공하여 구성 할 수 있으며 그 값은 문자열 배열이어야합니다. 각 문자열은 &lt;code&gt;Redcarpet::Markdown&lt;/code&gt; 클래스의 확장 중 하나의 이름이어야합니다 . 배열에 있으면 해당 확장자를 &lt;code&gt;true&lt;/code&gt; 로 설정 합니다 .</target>
        </trans-unit>
        <trans-unit id="44a0d505e17f14f7f69264e5a53841a1965456a3" translate="yes" xml:space="preserve">
          <source>Refer to your selected theme&amp;rsquo;s documentation and source repository for more information on what files you can override.</source>
          <target state="translated">대체 할 수있는 파일에 대한 자세한 정보는 선택한 테마의 문서 및 소스 저장소를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="64ad1dbd8a0a36c745e78866510d4581eab08f26" translate="yes" xml:space="preserve">
          <source>Refer to your selected theme&amp;rsquo;s documentation and source repository for more information on which files you can override.</source>
          <target state="translated">재정의 할 수있는 파일에 대한 자세한 내용은 선택한 테마의 문서 및 소스 저장소를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5690d22eef073c74520c67bbd0417f07498d99fd" translate="yes" xml:space="preserve">
          <source>Regardless of whether front matter exists or not, Jekyll will write to the destination directory (e.g. &lt;code&gt;_site&lt;/code&gt;) only if &lt;code&gt;output: true&lt;/code&gt; has been set in the collection&amp;rsquo;s metadata.</source>
          <target state="translated">서문의 존재 여부에 관계없이 Jekyll은 &lt;code&gt;output: true&lt;/code&gt; 가 컬렉션의 메타 데이터에 설정된 경우에만 대상 디렉토리 (예 : &lt;code&gt;_site&lt;/code&gt; ) 에 기록합니다.</target>
        </trans-unit>
        <trans-unit id="9e3f0522a636e26135d7d509614f66498b8abc2a" translate="yes" xml:space="preserve">
          <source>Register your site with &lt;a href=&quot;https://txtpen.com&quot;&gt;txtpen&lt;/a&gt;. Then append</source>
          <target state="translated">&lt;a href=&quot;https://txtpen.com&quot;&gt;txtpen에&lt;/a&gt; 사이트를 등록하십시오 . 그런 다음 추가</target>
        </trans-unit>
        <trans-unit id="98d06420fb393fe8733fe61191716a188d2ba8e5" translate="yes" xml:space="preserve">
          <source>Relative Permalink support removed</source>
          <target state="translated">상대 Permalink 지원이 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="5d951f35618ebcfce051fbdea98d0c5c4b54d6b9" translate="yes" xml:space="preserve">
          <source>Relaunch your terminal and check your Ruby setup:</source>
          <target state="translated">터미널을 다시 시작하고 Ruby 설정을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ad17e9991796ce5863f1422f5c6017d940c7e221" translate="yes" xml:space="preserve">
          <source>Reload a page automatically on the browser when its content is edited.</source>
          <target state="translated">콘텐츠가 편집되면 브라우저에서 페이지를 자동으로 다시로드합니다.</target>
        </trans-unit>
        <trans-unit id="d914f2ea35b0f2553e85af7c921666e44d9c331b" translate="yes" xml:space="preserve">
          <source>Remember your Front Matter</source>
          <target state="translated">당신의 주요 사항을 기억하십시오</target>
        </trans-unit>
        <trans-unit id="a3f0dac9020b7b6694ab2e8c67f500ae69fdc14c" translate="yes" xml:space="preserve">
          <source>Remember your YAML Front Matter</source>
          <target state="translated">YAML Front Matter를 기억하십시오</target>
        </trans-unit>
        <trans-unit id="b2e402b4da01a2a43c98d68b263f9ea2e8503ccf" translate="yes" xml:space="preserve">
          <source>Render</source>
          <target state="translated">Render</target>
        </trans-unit>
        <trans-unit id="778537c15e1c8b15c7eda63f03cd9cc34813448f" translate="yes" xml:space="preserve">
          <source>Render Posts Marked As Unpublished</source>
          <target state="translated">게시되지 않은 것으로 표시된 게시물 렌더링</target>
        </trans-unit>
        <trans-unit id="15ee34a232891ee351147169143c5723051c59d3" translate="yes" xml:space="preserve">
          <source>Render posts that were marked as unpublished.</source>
          <target state="translated">게시되지 않은 것으로 표시된 게시물을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="7e42b24dd20317b1267d14a20e3861bf6fba8de4" translate="yes" xml:space="preserve">
          <source>Render the paginated Posts</source>
          <target state="translated">페이지 매김 된 게시물 렌더링</target>
        </trans-unit>
        <trans-unit id="708071d198f236e19dabcecc6380eda33cd08a88" translate="yes" xml:space="preserve">
          <source>Rendering Process</source>
          <target state="translated">렌더링 프로세스</target>
        </trans-unit>
        <trans-unit id="2c506d6e4657df828ea482c052d68020f0442ebe" translate="yes" xml:space="preserve">
          <source>Reopen a command prompt and install Jekyll: &lt;code&gt;gem install jekyll&lt;/code&gt;</source>
          <target state="translated">명령 프롬프트를 다시 &lt;code&gt;gem install jekyll&lt;/code&gt; Jekyll을 설치하십시오 : gem install jekyll</target>
        </trans-unit>
        <trans-unit id="57758714a115c28dae7e9b64388dc90b41a10abf" translate="yes" xml:space="preserve">
          <source>Replace any occurrence of whitespace with a single space.</source>
          <target state="translated">공백 발생을 단일 공백으로 바꾸십시오.</target>
        </trans-unit>
        <trans-unit id="fbb446a61a4468f5ad96947bdc0040fe036d44ee" translate="yes" xml:space="preserve">
          <source>Report a bug</source>
          <target state="translated">버그 신고</target>
        </trans-unit>
        <trans-unit id="09a428f93ec07a73d726f8bd037ecacfaaf8b044" translate="yes" xml:space="preserve">
          <source>Requirements</source>
          <target state="translated">Requirements</target>
        </trans-unit>
        <trans-unit id="87df60de337fb58864343e396696d74611e0d403" translate="yes" xml:space="preserve">
          <source>Resources</source>
          <target state="translated">Resources</target>
        </trans-unit>
        <trans-unit id="234d49f9f38f1e1fd41a86a7ef7b54117ba20258" translate="yes" xml:space="preserve">
          <source>Restart the jekyll server once more for the configuration changes to take effect.</source>
          <target state="translated">구성 변경 사항을 적용하려면 jekyll 서버를 다시 시작하십시오.</target>
        </trans-unit>
        <trans-unit id="c5240e5a9f7a771a0223e39ab2cb2c828e2791aa" translate="yes" xml:space="preserve">
          <source>Restart your Jekyll server and check these tags are added to the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">Jekyll 서버를 다시 시작하고 이러한 태그가 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 에 추가되었는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="9d109ba303d84558994353980506a93c0a6fa42b" translate="yes" xml:space="preserve">
          <source>Restart your terminal to apply your changes. Next, you can install the Ruby version you want. Let&amp;rsquo;s install the latest stable version:</source>
          <target state="translated">변경 사항을 적용하려면 터미널을 다시 시작하십시오. 다음으로 원하는 Ruby 버전을 설치할 수 있습니다. 안정적인 최신 버전을 설치해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="923c13dfdb01db0d8d459f4097e5f218f81132eb" translate="yes" xml:space="preserve">
          <source>Resulting Permalink URL</source>
          <target state="translated">결과 퍼머 링크 URL</target>
        </trans-unit>
        <trans-unit id="9b8b4aa7396147c97e09b74b6be8158c0f9b4bc0" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;the first object&lt;/strong&gt; in an array for which the given expression evaluates to true or return &lt;code&gt;nil&lt;/code&gt; if no item in the array satisfies the evaluated expression. 4.1.0</source>
          <target state="translated">돌아 &lt;strong&gt;첫 번째 개체를&lt;/strong&gt; 배열하는 사실 또는 반환에, 지정된 표현들을 평가 &lt;code&gt;nil&lt;/code&gt; 경우 배열 만족에 어떤 항목을 평가 식입니다. 4.1.0</target>
        </trans-unit>
        <trans-unit id="dff42825f661946e67099b96f24920f31680578e" translate="yes" xml:space="preserve">
          <source>Return &lt;strong&gt;the first object&lt;/strong&gt; in an array for which the queried attribute has the given value or return &lt;code&gt;nil&lt;/code&gt; if no item in the array satisfies the given criteria. 4.1.0</source>
          <target state="translated">리턴 &lt;strong&gt;제 객체를&lt;/strong&gt; 조회 된 속성은 주어진 값 또는 반환 보유하는 배열 &lt;code&gt;nil&lt;/code&gt; 경우 배열 만족 없음 항목에 지정된 기준. 4.1.0</target>
        </trans-unit>
        <trans-unit id="527956f387317b7b80266ebb8593d4e1db18df21" translate="yes" xml:space="preserve">
          <source>Rsync is similar to scp except it can be faster as it will only send changed parts of files as opposed to the entire file. You can learn more about using rsync in the &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-use-rsync-to-sync-local-and-remote-directories-on-a-vps&quot;&gt;Digital Ocean tutorial&lt;/a&gt;.</source>
          <target state="translated">Rsync는 전체 파일이 아닌 파일의 변경된 부분 만 전송하므로 더 빠를 수 있다는 점을 제외하면 scp와 유사합니다. &lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-use-rsync-to-sync-local-and-remote-directories-on-a-vps&quot;&gt;Digital Ocean 튜토리얼&lt;/a&gt; 에서 rsync 사용에 대해 자세히 알아볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5f08fff91831ea6f0172019f874d4040c849e866" translate="yes" xml:space="preserve">
          <source>Ruby 101</source>
          <target state="translated">루비 101</target>
        </trans-unit>
        <trans-unit id="5898ae2f1d23782ebd27452a9411246e96dfd540" translate="yes" xml:space="preserve">
          <source>Ruby version &lt;strong&gt;2.4.0&lt;/strong&gt; or higher</source>
          <target state="translated">Ruby 버전 &lt;strong&gt;2.4.0&lt;/strong&gt; 이상</target>
        </trans-unit>
        <trans-unit id="06549232577315309549578ede081abf3b92fb09" translate="yes" xml:space="preserve">
          <source>Ruby version &lt;strong&gt;2.5.0&lt;/strong&gt; or higher</source>
          <target state="translated">Ruby 버전 &lt;strong&gt;2.5.0&lt;/strong&gt; 이상</target>
        </trans-unit>
        <trans-unit id="37714db0a3a1e5a5a39df62af011f7a7c779fbe0" translate="yes" xml:space="preserve">
          <source>RubyGems</source>
          <target state="translated">RubyGems</target>
        </trans-unit>
        <trans-unit id="f57ce1ac70130fc065fda9a1c25fbb12c704f24f" translate="yes" xml:space="preserve">
          <source>RubyInstaller is a self-contained Windows-based installer that includes the Ruby language, an execution environment, important documentation, and more.</source>
          <target state="translated">RubyInstaller는 Ruby 언어, 실행 환경, 중요한 문서 등을 포함하는 자체 포함 된 Windows 기반 설치 프로그램입니다.</target>
        </trans-unit>
        <trans-unit id="42dd9b3596a741398732c30d4508cf29afde284f" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;JEKYLL_ENV=production bundle exec jekyll build&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JEKYLL_ENV=production bundle exec jekyll build&lt;/code&gt; 를 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="515abd7adc56dcc3c2a557f7699a671fde0d385c" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;bundle info --path&lt;/code&gt; followed by the name of the theme&amp;rsquo;s gem, e.g., &lt;code&gt;bundle info --path minima&lt;/code&gt; for Jekyll&amp;rsquo;s default theme.</source>
          <target state="translated">&lt;code&gt;bundle info --path&lt;/code&gt; 다음에 테마의 gem 이름을 실행 합니다 ( 예 : Jekyll의 기본 테마에 대한 &lt;code&gt;bundle info --path minima&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdf9c1263cd6f0e3fa45f26660812dfd4d4cf1a0" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;bundle show&lt;/code&gt; followed by the name of the theme&amp;rsquo;s gem, e.g., &lt;code&gt;bundle show minima&lt;/code&gt; for Jekyll&amp;rsquo;s default theme.</source>
          <target state="translated">&lt;code&gt;bundle show&lt;/code&gt; 다음에 테마 보석 이름 (예 : Jekyll의 기본 테마의 &lt;code&gt;bundle show minima&lt;/code&gt; 을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="f37277863bf7ecbf5e4771d071b77d1c408284ba" translate="yes" xml:space="preserve">
          <source>Run &lt;code&gt;jekyll serve&lt;/code&gt; and go to &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; in your browser. You should see &amp;ldquo;Hello World!&amp;rdquo;.</source>
          <target state="translated">&lt;code&gt;jekyll serve&lt;/code&gt; 를 실행 하고 브라우저에서 &lt;a href=&quot;http://localhost:4000&quot;&gt;http : // localhost : 4000&lt;/a&gt; 으로 이동합니다. &quot;Hello World!&quot;가 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="a37a37795eb163ad64218878025b423e3ddeb562" translate="yes" xml:space="preserve">
          <source>Run the &lt;code&gt;ridk install&lt;/code&gt; step on the last stage of the installation wizard. This is needed for installing gems with native extensions. You can find additional information regarding this in the &lt;a href=&quot;https://github.com/oneclick/rubyinstaller2#using-the-installer-on-a-target-system&quot;&gt;RubyInstaller Documentation&lt;/a&gt;</source>
          <target state="translated">설치 마법사의 마지막 단계에서 &lt;code&gt;ridk install&lt;/code&gt; 단계를 실행합니다 . 이는 기본 확장으로 gem을 설치하는 데 필요합니다. &lt;a href=&quot;https://github.com/oneclick/rubyinstaller2#using-the-installer-on-a-target-system&quot;&gt;RubyInstaller 문서&lt;/a&gt; 에서 이에 대한 추가 정보를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="247f6e4943c76c92b5c6c8d51b7623da37673dc0" translate="yes" xml:space="preserve">
          <source>Run:</source>
          <target state="translated">Run:</target>
        </trans-unit>
        <trans-unit id="317fe2ae2325d58fcdafd22991bff0a74c5d694e" translate="yes" xml:space="preserve">
          <source>Running Jekyll as Non-Superuser (no sudo!)</source>
          <target state="translated">비 수퍼 유저로 Jekyll 실행 (sudo 없음!)</target>
        </trans-unit>
        <trans-unit id="beff04c64d0f6b81d8fe8635f88e6d58d26d3b7e" translate="yes" xml:space="preserve">
          <source>Running Jekyll on Windows</source>
          <target state="translated">Windows에서 Jekyll 실행</target>
        </trans-unit>
        <trans-unit id="1917a1b7c57442b0abec6c6d3635a1784c44075e" translate="yes" xml:space="preserve">
          <source>SSL Private Key, stored or symlinked in the site source.</source>
          <target state="translated">SSL 개인 키, 사이트 소스에 저장되거나 심볼릭 링크됩니다.</target>
        </trans-unit>
        <trans-unit id="fd6893c5df8321462d97d7ab4d7ffb44371f653f" translate="yes" xml:space="preserve">
          <source>SSL Private Key.</source>
          <target state="translated">SSL 개인 키.</target>
        </trans-unit>
        <trans-unit id="49428deaf3b1c7537a4f13085019a70e4f7a2774" translate="yes" xml:space="preserve">
          <source>SSL Public certificate, stored or symlinked in the site source.</source>
          <target state="translated">사이트 소스에 저장되거나 심볼릭 링크 된 SSL 공개 인증서.</target>
        </trans-unit>
        <trans-unit id="69593d32c8bd589fe3bdfdfcc8f82e007508a15d" translate="yes" xml:space="preserve">
          <source>SSL Public certificate.</source>
          <target state="translated">SSL 공개 인증서.</target>
        </trans-unit>
        <trans-unit id="b6eeeb3abd2a7bc179a6b6d5c56488b5f8c903a7" translate="yes" xml:space="preserve">
          <source>Sass</source>
          <target state="translated">Sass</target>
        </trans-unit>
        <trans-unit id="403818fcda992599fe7e358f0111951e6b7990f3" translate="yes" xml:space="preserve">
          <source>Sass/SCSS</source>
          <target state="translated">Sass/SCSS</target>
        </trans-unit>
        <trans-unit id="03e3e4e01b772344104f35b3b89ee3d97d138085" translate="yes" xml:space="preserve">
          <source>Save the commands you want to run and succeed in a file: &lt;code&gt;./script/cibuild&lt;/code&gt;</source>
          <target state="translated">실행하려는 명령을 저장하고 파일에 성공하십시오. &lt;code&gt;./script/cibuild&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="334d78d442abb00a5b6eb0f19ae76079d1b2d11e" translate="yes" xml:space="preserve">
          <source>Second of the minute from the post&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</source>
          <target state="translated">게시물의 &lt;code&gt;date&lt;/code&gt; 머리말로부터 1 분 초 . (00..59)</target>
        </trans-unit>
        <trans-unit id="b3bf564e18f6ba1be5df476d386f16a478d2fdaf" translate="yes" xml:space="preserve">
          <source>Second of the minute from the post's &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</source>
          <target state="translated">게시물 &lt;code&gt;date&lt;/code&gt; 부터 두 번째 분 . (00..59)</target>
        </trans-unit>
        <trans-unit id="fc6eef192c265c5fbe372bcc71e29649ae2d0162" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;#extensionless-permalinks&quot;&gt;Extensionless permalinks with no trailing slashes&lt;/a&gt; for details.</source>
          <target state="translated">자세한 내용은 &lt;a href=&quot;#extensionless-permalinks&quot;&gt;후행 슬래시가없는 확장없는 영구 링크를&lt;/a&gt; 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="51d52269689be5e8da217cb94564ce864e00b526" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;../../troubleshooting/index&quot;&gt;Troubleshooting&lt;/a&gt; or &lt;a href=&quot;https://talk.jekyllrb.com&quot;&gt;ask for help on our forum&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../../troubleshooting/index&quot;&gt;문제 해결을&lt;/a&gt; 참조 하거나 &lt;a href=&quot;https://talk.jekyllrb.com&quot;&gt;포럼에서 도움을 요청&lt;/a&gt; 하십시오 .</target>
        </trans-unit>
        <trans-unit id="f696e9e49f78c4279d1e807100203c937410e91f" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;https://jekyllrb.com/tutorials/using-jekyll-with-bundler/&quot;&gt;Using Jekyll with Bundler&lt;/a&gt; for more information about Bundler in Jekyll and for instructions to get up and running quickly.</source>
          <target state="translated">&lt;a href=&quot;https://jekyllrb.com/tutorials/using-jekyll-with-bundler/&quot;&gt;Jekyll의 Bundler에&lt;/a&gt; 대한 자세한 내용과 빠른 시작 및 실행 지침은 Bundler 와 함께 Jekyll 사용을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="e152d461c73cd4bb89297d29631b4e47f8c798e6" translate="yes" xml:space="preserve">
          <source>See &lt;a href=&quot;installation/index#requirements&quot;&gt;Requirements&lt;/a&gt; for guides and details.</source>
          <target state="translated">가이드 및 세부 &lt;a href=&quot;installation/index#requirements&quot;&gt;사항&lt;/a&gt; 은 요구 사항 을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="d7eea797b5b5fde14868225b445a5e810676d882" translate="yes" xml:space="preserve">
          <source>See also: &lt;a href=&quot;https://jekyllrb.com/resources/&quot;&gt;resources&lt;/a&gt;.</source>
          <target state="translated">참조 : &lt;a href=&quot;https://jekyllrb.com/resources/&quot;&gt;리소스&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d0ed49f1b1bfb0227d18ee3709c5bada3c413cb2" translate="yes" xml:space="preserve">
          <source>See the Markdown section on the &lt;a href=&quot;../configuration/index#markdown-options&quot;&gt;configuration page&lt;/a&gt; for instructions on how to use and configure alternative Markdown processors, as well as how to create &lt;a href=&quot;../configuration/index#custom-markdown-processors&quot;&gt;custom processors&lt;/a&gt;.</source>
          <target state="translated">대체 마크 다운 프로세서를 사용 및 구성하는 방법과 &lt;a href=&quot;../configuration/index#custom-markdown-processors&quot;&gt;사용자 지정 프로세서&lt;/a&gt; 를 만드는 방법에 대한 지침 은 &lt;a href=&quot;../configuration/index#markdown-options&quot;&gt;구성 페이지&lt;/a&gt; 의 마크 다운 섹션을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="407b2742f09d00df370600915619012740c16c28" translate="yes" xml:space="preserve">
          <source>See the bottom of the page for a &lt;a href=&quot;#available-plugins&quot;&gt;list of available plugins&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;#available-plugins&quot;&gt;사용 가능한 플러그인 목록은&lt;/a&gt; 페이지 하단을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="53035dc8dfea2f8f41cca4298269e254fb5e0e1e" translate="yes" xml:space="preserve">
          <source>Select all the objects in an array where the expression is true. 3.2.0</source>
          <target state="translated">표현식이 참인 배열의 모든 객체를 선택합니다. 3.2.0</target>
        </trans-unit>
        <trans-unit id="5fb9e19dcae18c354f279dfca194fb7e744d9c04" translate="yes" xml:space="preserve">
          <source>Select all the objects in an array where the expression is true. Jekyll v3.2.0 &amp;amp; later.</source>
          <target state="translated">표현식이 참인 배열의 모든 객체를 선택하십시오. Jekyll v3.2.0 이상</target>
        </trans-unit>
        <trans-unit id="e891926616342130195a7bfdb38be815b06f2efc" translate="yes" xml:space="preserve">
          <source>Select all the objects in an array where the key has the given value.</source>
          <target state="translated">키에 지정된 값이있는 배열의 모든 객체를 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="3d815a597f6d668bf34e59ed4ebae5e997991203" translate="yes" xml:space="preserve">
          <source>Self-managed web server</source>
          <target state="translated">자체 관리 웹 서버</target>
        </trans-unit>
        <trans-unit id="a55557d1c98bb9f9498deb01f8e31c77291e6c39" translate="yes" xml:space="preserve">
          <source>Serve Command Options</source>
          <target state="translated">서비스 명령 옵션</target>
        </trans-unit>
        <trans-unit id="151827014ed21e518e47c1dd2a1e084435edc564" translate="yes" xml:space="preserve">
          <source>Serve the website from the given base URL</source>
          <target state="translated">제공된 기본 URL에서 웹 사이트 제공</target>
        </trans-unit>
        <trans-unit id="10c65177b9457f21492b30d74ecd3fa029ff4282" translate="yes" xml:space="preserve">
          <source>Serve the website from the given base URL.</source>
          <target state="translated">주어진 기본 URL에서 웹 사이트를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="fe836fe66a8def4677b55312b9d11c2ab2519a3f" translate="yes" xml:space="preserve">
          <source>Set defaults for &lt;a href=&quot;../../front-matter/index&quot;&gt;front matter&lt;/a&gt; variables.</source>
          <target state="translated">&lt;a href=&quot;../../front-matter/index&quot;&gt;머리말&lt;/a&gt; 변수에 대한 기본값을 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="ddd9fcb8b5f6b9210f6b261a822acb9326466b09" translate="yes" xml:space="preserve">
          <source>Set defaults for &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; variables.</source>
          <target state="translated">&lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; 변수의 기본값을 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="5d6059aac8e4da20dbf9808420e1330fbe575e19" translate="yes" xml:space="preserve">
          <source>Set the encoding of files by name (only available for Ruby 1.9 or later). The default value is &lt;code&gt;utf-8&lt;/code&gt; starting in 2.0.0, and &lt;code&gt;nil&lt;/code&gt; before 2.0.0, which will yield the Ruby default of &lt;code&gt;ASCII-8BIT&lt;/code&gt;. Available encodings can be shown by the command &lt;code&gt;ruby -e 'puts Encoding::list.join(&quot;\n&quot;)'&lt;/code&gt;.</source>
          <target state="translated">파일 인코딩을 이름으로 설정하십시오 (Ruby 1.9 이상에서만 사용 가능). 기본값은 2.0.0에서 시작하는 &lt;code&gt;utf-8&lt;/code&gt; 이고 2.0.0 이전에 &lt;code&gt;nil&lt;/code&gt; 이며 , Ruby의 기본값은 &lt;code&gt;ASCII-8BIT&lt;/code&gt; 입니다. 사용 가능한 인코딩은 &lt;code&gt;ruby -e 'puts Encoding::list.join(&quot;\n&quot;)'&lt;/code&gt; 명령으로 표시 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ad2e00718f76e97a0b0faf2b6b523e7f331b76b2" translate="yes" xml:space="preserve">
          <source>Set the time zone for site generation. This sets the &lt;code&gt;TZ&lt;/code&gt; environment variable, which Ruby uses to handle time and date creation and manipulation. Any entry from the &lt;a href=&quot;https://en.wikipedia.org/wiki/Tz_database&quot;&gt;IANA Time Zone Database&lt;/a&gt; is valid, e.g. &lt;code&gt;America/New_York&lt;/code&gt;. A list of all available values can be found &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt; here&lt;/a&gt;. When serving on a local machine, the default time zone is set by your operating system. But when served on a remote host/server, the default time zone depends on the server's setting or location.</source>
          <target state="translated">사이트 생성 시간대를 설정하십시오. Ruby가 시간 및 날짜 작성 및 조작을 처리하는 데 사용 하는 &lt;code&gt;TZ&lt;/code&gt; 환경 변수를 설정합니다 . &lt;a href=&quot;https://en.wikipedia.org/wiki/Tz_database&quot;&gt;IANA 시간대 데이터베이스&lt;/a&gt; 의 모든 항목 이 유효합니다 (예 : &lt;code&gt;America/New_York&lt;/code&gt; ) . 사용 가능한 모든 값의 목록은 &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;여기&lt;/a&gt; 에서 찾을 수 있습니다 . 로컬 컴퓨터에서 서비스를 제공 할 때 기본 시간대는 운영 체제에 의해 설정됩니다. 그러나 원격 호스트 / 서버에서 제공되는 경우 기본 시간대는 서버의 설정 또는 위치에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="397402a9c35e59ca7d02dc0b5c6391349ef8fd3e" translate="yes" xml:space="preserve">
          <source>Set to false if you don&amp;rsquo;t want a specific post to show up when the site is generated.</source>
          <target state="translated">사이트 생성시 특정 게시물을 표시하지 않으려면 false로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="aabe9cc67d26e20183256e1ecf388980a51be9a2" translate="yes" xml:space="preserve">
          <source>Set your production URL in &lt;code&gt;_config.yml&lt;/code&gt; e.g. &lt;code&gt;url: https://example.com&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 에서 프로덕션 URL을 설정하십시오 ( 예 : &lt;code&gt;url: https://example.com&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fb449f71834cd30ec14d00c9d50ba85c232186d3" translate="yes" xml:space="preserve">
          <source>Setting</source>
          <target state="translated">Setting</target>
        </trans-unit>
        <trans-unit id="a6d2c27ce53f80ffa0bc57f5fba0fa8750a55150" translate="yes" xml:space="preserve">
          <source>Setting a permalink in front matter for every page on your site is no fun. Luckily, Jekyll lets you set the permalink structure globally in your &lt;code&gt;_config.yml&lt;/code&gt;.</source>
          <target state="translated">사이트의 모든 페이지에 대해 머리말에 퍼머 링크를 설정하는 것은 재미가 없습니다. 운 좋게도 Jekyll을 사용하면 &lt;code&gt;_config.yml&lt;/code&gt; 에서 전역 적으로 퍼머 링크 구조를 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2c7a32ce81e15370a8e65448d08bcb2735e4aae2" translate="yes" xml:space="preserve">
          <source>Setting a permalink in the front matter of your blog page will cause pagination to break. Just omit the permalink.</source>
          <target state="translated">블로그 페이지 첫 페이지에 퍼머 링크를 설정하면 페이지 매김이 중단됩니다. 퍼머 링크를 생략하면됩니다.</target>
        </trans-unit>
        <trans-unit id="992e693339c0d4ef08f55b83204c30110f4168dc" translate="yes" xml:space="preserve">
          <source>Setting permalink styles in your configuration file applies the setting globally in your project. You configure permalinks in your &lt;code&gt;_config.yml&lt;/code&gt; file like this:</source>
          <target state="translated">구성 파일에서 퍼머 링크 스타일을 설정하면 프로젝트의 설정이 전체적으로 적용됩니다. &lt;code&gt;_config.yml&lt;/code&gt; 파일 에서 다음 과 같이 영구 링크를 구성 하십시오.</target>
        </trans-unit>
        <trans-unit id="18a051fab47eef17a471bd5c9de81afafe2c1156" translate="yes" xml:space="preserve">
          <source>Setting the permalink in your post, page, or collection&amp;rsquo;s front matter overrides any global settings. Here&amp;rsquo;s an example:</source>
          <target state="translated">게시물, 페이지 또는 컬렉션의 전면 문제에서 퍼머 링크를 설정하면 모든 전역 설정보다 우선합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b428a34c4ccaf643d1aeff837a4dce1c96cf704b" translate="yes" xml:space="preserve">
          <source>Setting up Kickster is very easy, just install the gem and you are good to go. More documentation can here found &lt;a href=&quot;https://github.com/nielsenramon/kickster#kickster&quot;&gt;here&lt;/a&gt;. If you do not want to use the gem or start a new project you can just copy paste the deployment scripts for &lt;a href=&quot;https://github.com/nielsenramon/kickster/tree/master/snippets/travis&quot;&gt;Travis CI&lt;/a&gt; or &lt;a href=&quot;https://github.com/nielsenramon/kickster#automated-deployment-with-circle-ci&quot;&gt;Circle CI&lt;/a&gt;.</source>
          <target state="translated">Kickster를 설정하는 것은 매우 쉽습니다. 보석을 설치하기 만하면됩니다. 더 많은 문서는 여기에서 찾을 수 &lt;a href=&quot;https://github.com/nielsenramon/kickster#kickster&quot;&gt;있습니다&lt;/a&gt; . gem을 사용하지 않거나 새 프로젝트를 시작하지 않으려면 &lt;a href=&quot;https://github.com/nielsenramon/kickster/tree/master/snippets/travis&quot;&gt;Travis CI&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/nielsenramon/kickster#automated-deployment-with-circle-ci&quot;&gt;Circle CI&lt;/a&gt; 의 배포 스크립트를 복사하여 붙여 넣기 만하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="79cff9dae81675db3f02a4f885ef68b6810fccaa" translate="yes" xml:space="preserve">
          <source>Setting up the Action</source>
          <target state="translated">액션 설정</target>
        </trans-unit>
        <trans-unit id="cdd7bb2816b7a8f88bce0e47be39943bc369516b" translate="yes" xml:space="preserve">
          <source>Setup</source>
          <target state="translated">Setup</target>
        </trans-unit>
        <trans-unit id="d1d6ac7e4a569a5bc600abd6c2fca28a540d604d" translate="yes" xml:space="preserve">
          <source>Show a directory listing instead of loading your index file.</source>
          <target state="translated">색인 파일을로드하는 대신 디렉토리 목록을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="cf9864c8b1966bf3bea36185057597999467de9e" translate="yes" xml:space="preserve">
          <source>Show the full backtrace when an error occurs.</source>
          <target state="translated">오류가 발생하면 전체 역 추적을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="e94fb23c5bf40b730ab355584794c83b05cb43c8" translate="yes" xml:space="preserve">
          <source>Silence the normal output from Jekyll during a build</source>
          <target state="translated">빌드 중에 Jekyll의 정상적인 출력을 침묵시킵니다.</target>
        </trans-unit>
        <trans-unit id="d7e1e1aecc3faa80daf33fd4b97cf5d12eb4d564" translate="yes" xml:space="preserve">
          <source>Silence the normal output from Jekyll during a build.</source>
          <target state="translated">빌드하는 동안 지킬의 정상적인 출력을 무음으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="28aeb1618225d767e4382b29ab4dde547b848b72" translate="yes" xml:space="preserve">
          <source>Similar to categories, one or multiple tags can be added to a post. Also like categories, tags can be specified as a &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAML list&lt;/a&gt; or a space-separated string.</source>
          <target state="translated">카테고리와 유사하게 하나 이상의 태그를 게시물에 추가 할 수 있습니다. 범주와 마찬가지로 태그를 &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAML 목록&lt;/a&gt; 또는 공백으로 구분 된 문자열 로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="14d825cf30342e6bc78ecc4d3eef9e9271ed41f8" translate="yes" xml:space="preserve">
          <source>Simple Form</source>
          <target state="translated">간단한 양식</target>
        </trans-unit>
        <trans-unit id="3e1cdd67641592c294ce605e4b3f32a11b2d0d6e" translate="yes" xml:space="preserve">
          <source>Simply adding &lt;code&gt;vendor/bundle&lt;/code&gt; to the &lt;code&gt;exclude:&lt;/code&gt; list will solve this problem but will lead to having other sub-directories under &lt;code&gt;/vendor/&lt;/code&gt; (and also &lt;code&gt;/node_modules/&lt;/code&gt;, if present) be processed to the destination folder &lt;code&gt;_site&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;exclude:&lt;/code&gt; list에 &lt;code&gt;vendor/bundle&lt;/code&gt; 을 추가하면 이 문제가 해결되지만 &lt;code&gt;/vendor/&lt;/code&gt; 아래의 다른 하위 디렉토리 (및 &lt;code&gt;/node_modules/&lt;/code&gt; 도있는 경우)가 대상 폴더 &lt;code&gt;_site&lt;/code&gt; 로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="3a1d430b34fa1ad3689dc38703f6f20b93023caa" translate="yes" xml:space="preserve">
          <source>Since Jekyll 4.0 , you don&amp;rsquo;t need to prepend &lt;code&gt;link&lt;/code&gt; and &lt;code&gt;post_url&lt;/code&gt; tags with &lt;code&gt;site.baseurl&lt;/code&gt;.</source>
          <target state="translated">지킬 4.0 때문에, 당신은 앞에 추가 할 필요가 없습니다 &lt;code&gt;link&lt;/code&gt; 와 &lt;code&gt;post_url&lt;/code&gt; 와 태그 &lt;code&gt;site.baseurl&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="46ffe064aad40f271e5c35fab046c885357149dd" translate="yes" xml:space="preserve">
          <source>Since Jekyll expects multiple items mapped to the key &lt;code&gt;tags&lt;/code&gt;, it will automatically &lt;em&gt;split&lt;/em&gt; a string entry if it contains whitespace. For example, while front matter &lt;code&gt;tag: classic hollywood&lt;/code&gt; will be processed into a singular entity &lt;code&gt;&quot;classic hollywood&quot;&lt;/code&gt;, front matter &lt;code&gt;tags: classic hollywood&lt;/code&gt; will be processed into an array of entries &lt;code&gt;[&quot;classic&quot;, &quot;hollywood&quot;]&lt;/code&gt;.</source>
          <target state="translated">Jekyll은 키 &lt;code&gt;tags&lt;/code&gt; 매핑 된 여러 항목을 예상하므로 공백이 포함 된 경우 문자열 항목을 자동으로 &lt;em&gt;분할&lt;/em&gt; 합니다. 예를 들어, front matter &lt;code&gt;tag: classic hollywood&lt;/code&gt; 는 단일 엔티티 &lt;code&gt;&quot;classic hollywood&quot;&lt;/code&gt; 로 처리 되지만, front matter &lt;code&gt;tags: classic hollywood&lt;/code&gt; 는 항목 배열 &lt;code&gt;[&quot;classic&quot;, &quot;hollywood&quot;]&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="872175047ef192c97b7383240a99a200caa37c6e" translate="yes" xml:space="preserve">
          <source>Since Windows doesn&amp;rsquo;t have a native source of zoneinfo data, the Ruby Interpreter doesn&amp;rsquo;t understand IANA Timezones. Using them had the &lt;code&gt;TZ&lt;/code&gt; environment variable default to UTC/GMT 00:00.</source>
          <target state="translated">Windows에는 zoneinfo 데이터의 기본 소스가 없기 때문에 Ruby 인터프리터는 IANA 시간대를 이해하지 못합니다. 그것들을 사용하면 &lt;code&gt;TZ&lt;/code&gt; 환경 변수가 기본적으로 UTC / GMT 00:00으로 설정되었습니다.</target>
        </trans-unit>
        <trans-unit id="e94c1b03ed8322a8a017fbe30f42fca0a9fcc07b" translate="yes" xml:space="preserve">
          <source>Since Windows doesn&amp;rsquo;t have a native source of zoneinfo data, the Ruby Interpreter would not understand IANA Timezones and hence using them had the &lt;code&gt;TZ&lt;/code&gt; environment variable default to UTC/GMT 00:00. Though Windows users could alternatively define their blog&amp;rsquo;s timezone by setting the key to use POSIX format of defining timezones, it wasn&amp;rsquo;t as user-friendly when it came to having the clock altered to changing DST-rules.</source>
          <target state="translated">Windows에는 기본 zoneinfo 데이터 소스가 없으므로 Ruby 인터프리터는 IANA 시간대를 이해하지 못하므로 &lt;code&gt;TZ&lt;/code&gt; 환경 변수의 기본값은 UTC / GMT 00:00입니다. Windows 사용자는 시간대를 정의하는 POSIX 형식을 사용하도록 키를 설정하여 블로그 시간대를 다르게 정의 할 수 있지만 DST 규칙 변경으로 시계를 변경했을 때 사용자 친화적이지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="9f1707e621eb2440dca25f767a53b48da55a9bc7" translate="yes" xml:space="preserve">
          <source>Since the content is markdown, you need to run it through the &lt;code&gt;markdownify&lt;/code&gt; filter. This happens automatically when outputting using &lt;code&gt;{{ content }}&lt;/code&gt; in a layout.</source>
          <target state="translated">콘텐츠가 마크 다운이므로 &lt;code&gt;markdownify&lt;/code&gt; 필터를 통해 실행해야합니다 . 이것은 레이아웃에서 &lt;code&gt;{{ content }}&lt;/code&gt; 를 사용하여 출력 할 때 자동으로 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="9d35bf67ea68dbdbbea589d77108d31fe53bc64f" translate="yes" xml:space="preserve">
          <source>Since v1.0.0, Jekyll has had automatically-generated post excerpts. Since v1.1.0, Jekyll also passes these excerpts through Liquid, which can cause strange errors where references don&amp;rsquo;t exist or a tag hasn&amp;rsquo;t been closed. If you run into these errors, try setting &lt;code&gt;excerpt_separator: &quot;&quot;&lt;/code&gt; in your &lt;code&gt;_config.yml&lt;/code&gt;, or set it to some nonsense string.</source>
          <target state="translated">v1.0.0부터 Jekyll은 자동으로 생성 된 포스트 발췌문을 가지고 있습니다. v1.1.0부터 Jekyll은 이러한 발췌문을 Liquid를 통해 전달하므로 참조가 없거나 태그가 닫히지 않은 경우 이상한 오류가 발생할 수 있습니다. 당신이 이러한 오류가 발생하면, 설정하려고 &lt;code&gt;excerpt_separator: &quot;&quot;&lt;/code&gt; 당신에 &lt;code&gt;_config.yml&lt;/code&gt; , 또는 의미없는 문자열로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="83b609e0c4a8f295e18671ed4efd059732715ca7" translate="yes" xml:space="preserve">
          <source>Since v2, CircleCI is a Docker-based system. The example &lt;code&gt;circle.yml&lt;/code&gt; below demonstrates how to deploy your Jekyll project to AWS. In order for this to work you would first have to set the &lt;code&gt;S3_BUCKET_NAME&lt;/code&gt;&lt;a href=&quot;https://circleci.com/docs/2.0/env-vars/&quot;&gt;environment variable&lt;/a&gt;.</source>
          <target state="translated">v2부터 CircleCI는 Docker 기반 시스템입니다. 아래의 &lt;code&gt;circle.yml&lt;/code&gt; 예제는 Jekyll 프로젝트를 AWS에 배포하는 방법을 보여줍니다. 이것이 작동하려면 먼저 &lt;code&gt;S3_BUCKET_NAME&lt;/code&gt; &lt;a href=&quot;https://circleci.com/docs/2.0/env-vars/&quot;&gt;환경 변수&lt;/a&gt; 를 설정해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="8dd9deeb3171ac9f02e0bf5dc4f51cefd4afffb4" translate="yes" xml:space="preserve">
          <source>Since v3.2 Jekyll requires Ruby version &amp;gt;= 2.1</source>
          <target state="translated">v3.2부터 Jekyll에는 Ruby 버전&amp;gt; = 2.1이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="0f162d4e1a4087f93e51361e86d1b20bf4f12854" translate="yes" xml:space="preserve">
          <source>Since version 3.2 , a new Jekyll project bootstrapped with &lt;code&gt;jekyll new&lt;/code&gt; uses &lt;a href=&quot;../themes/index&quot;&gt;gem-based themes&lt;/a&gt; to define the look of the site. This results in a lighter default directory structure: &lt;code&gt;_layouts&lt;/code&gt;, &lt;code&gt;_includes&lt;/code&gt; and &lt;code&gt;_sass&lt;/code&gt; are stored in the theme-gem, by default.</source>
          <target state="translated">버전 3.2 이후, &lt;code&gt;jekyll new&lt;/code&gt; 로 부트 스트랩 된 새로운 Jekyll 프로젝트 는 &lt;a href=&quot;../themes/index&quot;&gt;gem 기반 테마&lt;/a&gt; 를 사용하여 사이트의 모양을 정의합니다. 그 결과 더 가벼운 기본 디렉토리 구조가 &lt;code&gt;_layouts&lt;/code&gt; . _layouts , &lt;code&gt;_includes&lt;/code&gt; 및 &lt;code&gt;_sass&lt;/code&gt; 는 기본적으로 theme-gem에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="221272afe50657f534be4008a80964851eabf9c2" translate="yes" xml:space="preserve">
          <source>Site Structure</source>
          <target state="translated">사이트 구조</target>
        </trans-unit>
        <trans-unit id="06f588e3316d35a20373813bbf802b855ffd9ff8" translate="yes" xml:space="preserve">
          <source>Site Variables</source>
          <target state="translated">사이트 변수</target>
        </trans-unit>
        <trans-unit id="9d9b9c2238600c4e1cb925df1d00bd97477e8165" translate="yes" xml:space="preserve">
          <source>Site wide information + configuration settings from &lt;code&gt;_config.yml&lt;/code&gt;. See below for details.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 의 사이트 전체 정보 + 구성 설정 . 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d59f859ae693e44288b2fd0d29b0027af35a8e59" translate="yes" xml:space="preserve">
          <source>Sites built using Jekyll can be deployed in a large number of ways due to the static nature of the generated output. A few of the most common deployment techniques are described below.</source>
          <target state="translated">Jekyll을 사용하여 구축 한 사이트는 생성 된 출력의 정적 특성으로 인해 여러 가지 방법으로 배포 할 수 있습니다. 가장 일반적인 몇 가지 배포 기술이 아래에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="46785df6728cd439e3e0c7233138c94947e55a98" translate="yes" xml:space="preserve">
          <source>Sites built using Jekyll can be deployed in a large number of ways due to the static nature of the generated output. Here&amp;rsquo;s some of the most common ways:</source>
          <target state="translated">Jekyll을 사용하여 구축 된 사이트는 생성 된 출력의 정적 특성으로 인해 다양한 방법으로 배포 할 수 있습니다. 가장 일반적인 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1f216d432619708fd99198012efacb408b4177b0" translate="yes" xml:space="preserve">
          <source>Sites on GitHub Pages are powered by Jekyll behind the scenes, so if you&amp;rsquo;re looking for a zero-hassle, zero-cost solution, GitHub Pages are a great way to &lt;a href=&quot;../../github-pages/index&quot;&gt;host your Jekyll-powered website for free&lt;/a&gt;.</source>
          <target state="translated">GitHub 페이지의 사이트는 백그라운드에서 Jekyll이 제공하므로 번거롭지 않고 비용이 들지 않는 솔루션을 찾고 있다면 GitHub Pages는 &lt;a href=&quot;../../github-pages/index&quot;&gt;Jekyll 기반 웹 사이트를 무료&lt;/a&gt; 로 호스팅 할 수 있는 좋은 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="25ab26fb20316eb0822bfb7c45427c236f62eb29" translate="yes" xml:space="preserve">
          <source>Sitewide information + configuration settings from &lt;code&gt;_config.yml&lt;/code&gt;. See below for details.</source>
          <target state="translated">에서 사이트 전체의 정보 + 구성 설정 &lt;code&gt;_config.yml&lt;/code&gt; . 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5dee56420e4fd48148e2139c320ed1f3befc909b" translate="yes" xml:space="preserve">
          <source>Skips the initial site build which occurs before the server is started.</source>
          <target state="translated">서버가 시작되기 전에 발생하는 초기 사이트 빌드를 건너 뜁니다.</target>
        </trans-unit>
        <trans-unit id="79d09d3aa3ef2b829995125702ca303ae5d1fc89" translate="yes" xml:space="preserve">
          <source>Slugified title from the document&amp;rsquo;s filename (any character except numbers and letters is replaced as hyphen). May be overridden via the document&amp;rsquo;s &lt;code&gt;slug&lt;/code&gt; YAML front matter.</source>
          <target state="translated">문서의 파일 이름에서 제목을 느슨하게했습니다 (숫자와 문자를 제외한 모든 문자는 하이픈으로 바뀝니다). 문서의 &lt;code&gt;slug&lt;/code&gt; YAML 전면을 통해 재정의 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5814edc81458d0fc07b197bd3a59987bfb5e3e8b" translate="yes" xml:space="preserve">
          <source>Slugified title from the document&amp;rsquo;s filename (any character except numbers and letters is replaced as hyphen). May be overridden via the document&amp;rsquo;s &lt;code&gt;slug&lt;/code&gt; front matter.</source>
          <target state="translated">문서 파일 이름의 슬러그 화 된 제목 (숫자와 문자를 제외한 모든 문자는 하이픈으로 대체 됨) 문서의 &lt;code&gt;slug&lt;/code&gt; 앞문을 통해 재정의 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="08eb389c8842b3829ba25ab6f0a7e93b06883e03" translate="yes" xml:space="preserve">
          <source>So what is Jekyll, exactly?</source>
          <target state="translated">지킬이란 정확히 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="959902ab7eab3b5bc6560f8469e059707c56b409" translate="yes" xml:space="preserve">
          <source>So, from your assets folder, create folders called css, images and js. Additionally, directly under the root create another folder called &amp;lsquo;_sass&amp;rsquo;, which you will need shortly.</source>
          <target state="translated">따라서 자산 폴더에서 css, images 및 js라는 폴더를 만듭니다. 또한 루트 바로 아래에 '_sass'라는 다른 폴더를 만듭니다.이 폴더는 곧 필요합니다.</target>
        </trans-unit>
        <trans-unit id="4172abb34224416683b49d016ababcfd7a9c09f7" translate="yes" xml:space="preserve">
          <source>Some options can be specified via command-line switches. Check out the &lt;code&gt;html-proofer&lt;/code&gt; README for more information about these switches, or run &lt;code&gt;htmlproofer --help&lt;/code&gt; locally.</source>
          <target state="translated">일부 옵션은 명령 행 스위치를 통해 지정할 수 있습니다. 이 스위치에 대한 자세한 내용은 &lt;code&gt;html-proofer&lt;/code&gt; README를 확인 하거나 &lt;code&gt;htmlproofer --help&lt;/code&gt; 를 로컬로 실행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c35f843892fcc99c411038c0eb0d44c906167b1a" translate="yes" xml:space="preserve">
          <source>Some pieces of this website are for future versions of Jekyll that are not yet released.</source>
          <target state="translated">이 웹 사이트의 일부는 아직 출시되지 않은 이후 버전의 Jekyll을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="3a6cd910baa7cd095835fa8f94b70ab93e3fbd2d" translate="yes" xml:space="preserve">
          <source>Sometimes it&amp;rsquo;s nice to preview your Jekyll site before you push your &lt;code&gt;gh-pages&lt;/code&gt; branch to GitHub. However, the subdirectory-like URL structure GitHub uses for Project Pages complicates the proper resolution of URLs. In order to assure your site builds properly, use the handy &lt;a href=&quot;../templates/index#filters&quot;&gt;URL filters&lt;/a&gt;:</source>
          <target state="translated">때로는 &lt;code&gt;gh-pages&lt;/code&gt; 브랜치를 GitHub로 푸시하기 전에 Jekyll 사이트를 미리 보는 것이 좋습니다 . 그러나 GitHub가 프로젝트 페이지에 사용하는 하위 디렉토리와 유사한 URL 구조는 URL의 적절한 해상도를 복잡하게합니다. 사이트가 올바르게 빌드되도록하려면 편리한 &lt;a href=&quot;../templates/index#filters&quot;&gt;URL 필터를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="c6e6a5236a2dc5a15d6b1356d88c122fd80a09d5" translate="yes" xml:space="preserve">
          <source>Sometimes it&amp;rsquo;s nice to preview your Jekyll site before you push your &lt;code&gt;gh-pages&lt;/code&gt; branch to GitHub. The subdirectory-like URL structure GitHub uses for Project Pages complicates the proper resolution of URLs. In order to assure your site builds properly, use the handy &lt;a href=&quot;../liquid/filters/index&quot;&gt;URL filters&lt;/a&gt;:</source>
          <target state="translated">때로는 &lt;code&gt;gh-pages&lt;/code&gt; 브랜치를 GitHub에 푸시하기 전에 Jekyll 사이트를 미리 보는 것이 좋습니다 . GitHub가 프로젝트 페이지에 사용하는 하위 디렉토리와 유사한 URL 구조는 URL의 적절한 확인을 복잡하게 만듭니다. 사이트가 제대로 구축되도록하려면 편리한 &lt;a href=&quot;../liquid/filters/index&quot;&gt;URL 필터를&lt;/a&gt; 사용하세요 .</target>
        </trans-unit>
        <trans-unit id="412ca9c290aa7d6de372a28b66548fa3477351c0" translate="yes" xml:space="preserve">
          <source>Sometimes you might want to output something in production but not in development. Analytics scripts are the most common example of this.</source>
          <target state="translated">때로는 개발 중이 아닌 프로덕션에서 출력하고 싶을 수도 있습니다. 분석 스크립트가 이에 대한 가장 일반적인 예입니다.</target>
        </trans-unit>
        <trans-unit id="c002e956f2fe54ce5a1cc79d677f63d3a84d4607" translate="yes" xml:space="preserve">
          <source>Sort By Front Matter Key</source>
          <target state="translated">Front Matter Key로 정렬</target>
        </trans-unit>
        <trans-unit id="0bf165524f11b75caefcab9fd93f2fced0386918" translate="yes" xml:space="preserve">
          <source>Sort an array. Optional arguments for hashes 1. property name 2. nils order (&lt;em&gt;first&lt;/em&gt; or &lt;em&gt;last&lt;/em&gt;).</source>
          <target state="translated">배열을 정렬합니다. 해시에 대한 선택적 인수 1. 속성 이름 2. nils 순서 ( &lt;em&gt;first&lt;/em&gt; 또는 &lt;em&gt;last&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="e1a35dfc74cd04625df2be72ead1705c96cb4340" translate="yes" xml:space="preserve">
          <source>Sort an array. Optional arguments for hashes: 1. property name 2. nils order (&lt;em&gt;first&lt;/em&gt; or &lt;em&gt;last&lt;/em&gt;).</source>
          <target state="translated">배열을 정렬하십시오. 해시의 선택적 인수 : 1. 속성 이름 2. nil 순서 ( &lt;em&gt;first&lt;/em&gt; 또는 &lt;em&gt;last&lt;/em&gt; ).</target>
        </trans-unit>
        <trans-unit id="721ef5802b7fd0123251918306122ba391be88b2" translate="yes" xml:space="preserve">
          <source>Source files must be in the root directory</source>
          <target state="translated">소스 파일은 루트 디렉토리에 있어야합니다</target>
        </trans-unit>
        <trans-unit id="ebf232555e2d95e42ef7c0e153994a358d649b31" translate="yes" xml:space="preserve">
          <source>Specify config files instead of using &lt;code&gt;_config.yml&lt;/code&gt; automatically. Settings in later files override settings in earlier files.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 을 자동으로 사용하는 대신 구성 파일을 지정하십시오 . 이후 파일의 설정은 이전 파일의 설정보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="bcdffbe305cb4d5d7ea796d6e287a7bc8d7a0116" translate="yes" xml:space="preserve">
          <source>Specify layout directory instead of using &lt;code&gt;_layouts/&lt;/code&gt; automatically.</source>
          <target state="translated">&lt;code&gt;_layouts/&lt;/code&gt; 자동으로 사용하는 대신 레이아웃 디렉토리를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="7d5a31871f9d077967971601fd20c9db9acc9a3a" translate="yes" xml:space="preserve">
          <source>Specify plugin directories instead of using &lt;code&gt;_plugins/&lt;/code&gt; automatically.</source>
          <target state="translated">&lt;code&gt;_plugins/&lt;/code&gt; 자동으로 사용하는 대신 플러그인 디렉토리를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="543a19444848c9302e9291afe8e96f0019592a64" translate="yes" xml:space="preserve">
          <source>Specifying a Jekyll environment at build time</source>
          <target state="translated">빌드시 Jekyll 환경 지정</target>
        </trans-unit>
        <trans-unit id="1d23e1629ece47d647a39c0d87fdcebaf66f9cee" translate="yes" xml:space="preserve">
          <source>Specifying an environment value allows you to make certain content available only within specific environments.</source>
          <target state="translated">환경 값을 지정하면 특정 환경 내에서만 특정 컨텐츠를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5e265cb8bebf47d8d0462cb2fe90e34d28e8d53" translate="yes" xml:space="preserve">
          <source>Specifying permalinks through the YAML Front Matter</source>
          <target state="translated">YAML Front Matter를 통한 퍼머 링크 지정</target>
        </trans-unit>
        <trans-unit id="fadb672fc3877cff0d7847dc912cbe268c93b01d" translate="yes" xml:space="preserve">
          <source>Specifying permalinks through the front matter</source>
          <target state="translated">머리말을 통해 영구 링크 지정</target>
        </trans-unit>
        <trans-unit id="e75b6d1f85d0377b8c0e0430f17df4f07482f060" translate="yes" xml:space="preserve">
          <source>Staff page</source>
          <target state="translated">직원 페이지</target>
        </trans-unit>
        <trans-unit id="2656a9332091e8034c5569e15573e7522648fc29" translate="yes" xml:space="preserve">
          <source>Standard Liquid Filters</source>
          <target state="translated">표준 액체 필터</target>
        </trans-unit>
        <trans-unit id="3d7885c513450d548fab07ffa79ca9b64b10eea0" translate="yes" xml:space="preserve">
          <source>Starting &lt;strong&gt;Jekyll 3.2&lt;/strong&gt;, a new Jekyll project bootstrapped with &lt;code&gt;jekyll new&lt;/code&gt; uses &lt;a href=&quot;../themes/index&quot;&gt;gem-based themes&lt;/a&gt; to define the look of the site. This results in a lighter default directory structure : &lt;code&gt;_layouts&lt;/code&gt;, &lt;code&gt;_includes&lt;/code&gt; and &lt;code&gt;_sass&lt;/code&gt; are stored in the theme-gem, by default.</source>
          <target state="translated">&lt;strong&gt;Jekyll 3.2&lt;/strong&gt; 부터 &lt;code&gt;jekyll new&lt;/code&gt; 로 부트 스트랩 된 새로운 Jekyll 프로젝트 는 &lt;a href=&quot;../themes/index&quot;&gt;gem 기반 테마&lt;/a&gt; 를 사용하여 사이트의 모양을 정의합니다. 이 가벼운 기본 디렉토리 구조의 결과 : &lt;code&gt;_layouts&lt;/code&gt; , &lt;code&gt;_includes&lt;/code&gt; 및 &lt;code&gt;_sass&lt;/code&gt; 은 기본적으로 테마 보석에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="c4533baaac02eff0b038864c85c524fb56799a07" translate="yes" xml:space="preserve">
          <source>Starting from version 3.5.0, using &lt;code&gt;none&lt;/code&gt; in a post/document will produce a file without using a layout file regardless of front matter defaults. Using &lt;code&gt;none&lt;/code&gt; in a page will cause Jekyll to attempt to use a layout named &quot;none&quot;.</source>
          <target state="translated">버전 3.5.0부터 포스트 / 문서에서 &lt;code&gt;none&lt;/code&gt; 을 사용하면 머리말 기본값에 관계없이 레이아웃 파일을 사용하지 않고 파일이 생성됩니다. 페이지에서 &lt;code&gt;none&lt;/code&gt; 을 사용 하면 Jekyll이 &quot;none&quot;이라는 레이아웃을 사용하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="8363d11750d7f59eccf988ecb4d15d10a1f9a95e" translate="yes" xml:space="preserve">
          <source>Starting from version 3.5.0, using &lt;code&gt;none&lt;/code&gt; in a post/document will produce a file without using a layout file regardless of frontmatter defaults. Using &lt;code&gt;none&lt;/code&gt; in a page, however, will cause Jekyll to attempt to use a layout named &quot;none&quot;.</source>
          <target state="translated">버전 3.5.0부터는 포스트 / 문서에서 &lt;code&gt;none&lt;/code&gt; 을 사용하면 기본 설정 기본값에 관계없이 레이아웃 파일을 사용하지 않고 파일이 생성됩니다. 그러나 페이지에서 &lt;code&gt;none&lt;/code&gt; 사용 하지 않으면 Jekyll은 &quot;none&quot;이라는 레이아웃을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="689ffd2b6c659713306bc1b82c35e8c3c2b3fd11" translate="yes" xml:space="preserve">
          <source>Starting with Jekyll v3.0, relative permalinks functionality will be removed and thus unavailable for use.</source>
          <target state="translated">Jekyll v3.0부터는 상대 퍼머 링크 기능이 제거되어 사용할 수 없게됩니다.</target>
        </trans-unit>
        <trans-unit id="c2ad94ea6253b4b6a6065e3716da384186683b3c" translate="yes" xml:space="preserve">
          <source>Static Comments with Jekyll &amp;amp; Staticman</source>
          <target state="translated">Jekyll &amp;amp; Staticman의 정적 설명</target>
        </trans-unit>
        <trans-unit id="a1c031153c642e8130ab037b056c28c991496c45" translate="yes" xml:space="preserve">
          <source>Static Files</source>
          <target state="translated">정적 파일</target>
        </trans-unit>
        <trans-unit id="2c55f6a69fe795f38091b036344a6ecd7d37d2f7" translate="yes" xml:space="preserve">
          <source>Static Publisher</source>
          <target state="translated">정적 게시자</target>
        </trans-unit>
        <trans-unit id="f41c29383080e690250ef667c06c5fd9bfa50de3" translate="yes" xml:space="preserve">
          <source>Step 1: Install rrsync to your home folder (server-side)</source>
          <target state="translated">1 단계 : 홈 폴더 (서버 측)에 rrsync 설치</target>
        </trans-unit>
        <trans-unit id="acb1f7279f38bf9b0a45bc0f35a26a88d02097fb" translate="yes" xml:space="preserve">
          <source>Step 1: Tell Jekyll to read in your collection</source>
          <target state="translated">1 단계 : Jekyll에게 컬렉션을 읽도록 지시</target>
        </trans-unit>
        <trans-unit id="3ae76cb71c530e99823dbc2db566a6ad925baa9b" translate="yes" xml:space="preserve">
          <source>Step 2: Add your content</source>
          <target state="translated">2 단계 : 콘텐츠 추가</target>
        </trans-unit>
        <trans-unit id="983bcdbf9f3d414aa3345d5eeabfd641e4c7ae61" translate="yes" xml:space="preserve">
          <source>Step 2: Set up certificate-based SSH access (server side)</source>
          <target state="translated">2 단계 : 인증서 기반 SSH 액세스 설정 (서버 측)</target>
        </trans-unit>
        <trans-unit id="64c59dc288ce9e8f1c6fe120ae7d9d3c9551f394" translate="yes" xml:space="preserve">
          <source>Step 3: Optionally render your collection&amp;rsquo;s documents into independent files</source>
          <target state="translated">3 단계 : 선택적으로 컬렉션의 문서를 독립 파일로 렌더링</target>
        </trans-unit>
        <trans-unit id="ee22489d18965248c7a1345a3434a08c9adadf6b" translate="yes" xml:space="preserve">
          <source>Step 3: Rsync (client-side)</source>
          <target state="translated">3 단계 : Rsync (클라이언트 측)</target>
        </trans-unit>
        <trans-unit id="7d7f7542c2ddb5278d71a339c55fed6a950021e9" translate="yes" xml:space="preserve">
          <source>Step 4 (Optional): Exclude the transfer script from being copied to the output folder.</source>
          <target state="translated">4 단계 (선택 사항) : 전송 스크립트가 출력 폴더로 복사되지 않도록 제외합니다.</target>
        </trans-unit>
        <trans-unit id="0a5cbd7bd6e140ea3b65d967ef5248c8dbb97a1f" translate="yes" xml:space="preserve">
          <source>Step by Step Tutorial</source>
          <target state="translated">단계별 자습서</target>
        </trans-unit>
        <trans-unit id="bfcefdc3d62cf0235d29e6d41fa6c2187ec9fc83" translate="yes" xml:space="preserve">
          <source>Stop and rerun `jekyll serve` command.</source>
          <target state="translated">`jekyll serve` 명령을 중지하고 다시 실행합니다.</target>
        </trans-unit>
        <trans-unit id="7532628acb10d3f74335ed474f1b263c9667e5e0" translate="yes" xml:space="preserve">
          <source>Stores &lt;a href=&quot;../configuration/index&quot;&gt;configuration&lt;/a&gt; data. Many of these options can be specified from the command line executable but it&amp;rsquo;s easier to specify them here so you don&amp;rsquo;t have to remember them.</source>
          <target state="translated">&lt;a href=&quot;../configuration/index&quot;&gt;구성&lt;/a&gt; 데이터를 저장 합니다 . 이러한 옵션 중 다수는 명령 행 실행 파일에서 지정할 수 있지만 여기에서 지정하는 것이 더 쉽기 때문에 기억하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="688931069f0df1b7dcf0babe5808ec7762322394" translate="yes" xml:space="preserve">
          <source>Stylesheets</source>
          <target state="translated">Stylesheets</target>
        </trans-unit>
        <trans-unit id="32e9c03f491a3d6219d0af41a20f44ab2a1708e6" translate="yes" xml:space="preserve">
          <source>Stylesheets for syntax highlighting</source>
          <target state="translated">구문 강조를위한 스타일 시트</target>
        </trans-unit>
        <trans-unit id="3847bbe56426426b18e97e82869e1adc46a23fcf" translate="yes" xml:space="preserve">
          <source>Subfolders</source>
          <target state="translated">Subfolders</target>
        </trans-unit>
        <trans-unit id="c17754d5a1317dde8d1389c0d21b829385b637ac" translate="yes" xml:space="preserve">
          <source>Suppose the parameter you want to pass to the include is a variable rather than a string. For example, you might be using &lt;code&gt;{{ site.product_name }}&lt;/code&gt; to refer to every instance of your product rather than the actual hard-coded name. (In this case, your &lt;code&gt;_config.yml&lt;/code&gt; file would have a key called &lt;code&gt;product_name&lt;/code&gt; with a value of your product&amp;rsquo;s name.)</source>
          <target state="translated">include에 전달하려는 매개 변수가 문자열이 아닌 변수라고 가정하십시오. 예를 들어 &lt;code&gt;{{ site.product_name }}&lt;/code&gt; 을 사용하여 실제 하드 코딩 된 이름이 아닌 제품의 모든 인스턴스를 참조 할 수 있습니다 . 이 경우 &lt;code&gt;_config.yml&lt;/code&gt; 파일에는 제품 이름 값이있는 &lt;code&gt;product_name&lt;/code&gt; 이라는 키가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="de0da891a584c423631fe15e6996173bc2e4ef95" translate="yes" xml:space="preserve">
          <source>Suppose you want to get rid of the gem-based theme and convert it to a regular theme, where all files are present in your Jekyll site directory, with nothing stored in the theme gem.</source>
          <target state="translated">gem 기반 테마를 제거하고 테마 gem에 아무것도 저장하지 않고 모든 파일이 Jekyll 사이트 디렉토리에있는 일반 테마로 변환한다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="2a9948bd0352018869fcd226a91788c362048f0e" translate="yes" xml:space="preserve">
          <source>Suppose you want to list all your image assets as contained in &lt;code&gt;assets/img&lt;/code&gt;. You could use this for loop to look in the &lt;code&gt;static_files&lt;/code&gt; object and get all static files that have this front matter property:</source>
          <target state="translated">&lt;code&gt;assets/img&lt;/code&gt; 에 포함 된 모든 이미지 자산을 나열한다고 가정하십시오 . 이 for 루프를 사용하여 &lt;code&gt;static_files&lt;/code&gt; 객체 를 살펴 보고이 전면 속성을 가진 모든 정적 파일을 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49a5924de30537d0fd99ef0abd41a365ec703124" translate="yes" xml:space="preserve">
          <source>Syntax highlighter changed</source>
          <target state="translated">구문 형광펜이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="374b87b00ba52a7058776886331a437d0ccf6408" translate="yes" xml:space="preserve">
          <source>TZInfo 2.0 incompatibility</source>
          <target state="translated">TZInfo 2.0 비 호환성</target>
        </trans-unit>
        <trans-unit id="d9d769cb03843c979fe9ce2f237c081ebdcb9e6e" translate="yes" xml:space="preserve">
          <source>Tag Blocks</source>
          <target state="translated">태그 블록</target>
        </trans-unit>
        <trans-unit id="848eed0fbd5429f556b2982dec3ea87136e33e44" translate="yes" xml:space="preserve">
          <source>Tags</source>
          <target state="translated">Tags</target>
        </trans-unit>
        <trans-unit id="ad2eeda2d22a7c89497c0be9c33914c5662c9f33" translate="yes" xml:space="preserve">
          <source>Tags Filters</source>
          <target state="translated">태그 필터</target>
        </trans-unit>
        <trans-unit id="ea90392f321ee89c8fa1055615f595ff1dc3bf58" translate="yes" xml:space="preserve">
          <source>Tags and Categories</source>
          <target state="translated">태그 및 카테고리</target>
        </trans-unit>
        <trans-unit id="0db85fe46c9924138eaf21c26a5b7b70b64633b5" translate="yes" xml:space="preserve">
          <source>Tags create the logic and control flow for templates. They are denoted by curly braces and percent signs: &lt;code&gt;{%&lt;/code&gt; and &lt;code&gt;%}&lt;/code&gt;. For example:</source>
          <target state="translated">태그는 템플릿에 대한 논리 및 제어 흐름을 만듭니다. 중괄호와 퍼센트 기호로 표시됩니다 : &lt;code&gt;{%&lt;/code&gt; 및 &lt;code&gt;%}&lt;/code&gt; . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="e9064e60417951d90fb2007ccee3afabab3af297" translate="yes" xml:space="preserve">
          <source>Tags for a post are defined in the post&amp;rsquo;s front matter using either the key &lt;code&gt;tag&lt;/code&gt; for a single entry or &lt;code&gt;tags&lt;/code&gt; for multiple entries.</source>
          <target state="translated">게시물에 대한 태그가 하나 키를 사용하여 포스트의 서문에 정의 된 &lt;code&gt;tag&lt;/code&gt; 단일 항목 또는 대한 &lt;code&gt;tags&lt;/code&gt; 여러 항목에 대한.</target>
        </trans-unit>
        <trans-unit id="f2538f4a76331f99cf2d8240550cd5d99a3f12da" translate="yes" xml:space="preserve">
          <source>Take a look at &lt;a href=&quot;http://localhost:4000&quot;&gt;http://localhost:4000&lt;/a&gt; and see your red link for the current page.</source>
          <target state="translated">살펴보세요 &lt;a href=&quot;http://localhost:4000&quot;&gt;// localhost를 : 4000 HTTP를&lt;/a&gt; 현재 페이지에 대한 빨간색 링크를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e7c9bcdeb3826f2a1efe477c86c883dae3af6389" translate="yes" xml:space="preserve">
          <source>Template Variables</source>
          <target state="translated">템플릿 변수</target>
        </trans-unit>
        <trans-unit id="9d777943ea77791c8c797167aaf1ffeca5f05350" translate="yes" xml:space="preserve">
          <source>Template variables for permalinks</source>
          <target state="translated">퍼머 링크를위한 템플릿 변수</target>
        </trans-unit>
        <trans-unit id="f25b700ed9f092123a43acb205a6869342cf9dd6" translate="yes" xml:space="preserve">
          <source>Templates</source>
          <target state="translated">Templates</target>
        </trans-unit>
        <trans-unit id="aec32b88e26f43c563c3cb564cc9a4e12a743a4c" translate="yes" xml:space="preserve">
          <source>That brings us to the end of this step-by-step tutorial and the beginning of your Jekyll journey!</source>
          <target state="translated">이것으로이 단계별 튜토리얼의 끝과 지킬 여정의 시작으로 이어집니다!</target>
        </trans-unit>
        <trans-unit id="75e9de090e114025ad1428fb576025165b6a0358" translate="yes" xml:space="preserve">
          <source>That is: defaults are overridden by options specified in &lt;code&gt;_config.yml&lt;/code&gt;, and flags specified at the command-line will override all other settings specified elsewhere.</source>
          <target state="translated">즉, 기본값은 &lt;code&gt;_config.yml&lt;/code&gt; 에 지정된 옵션으로 재정의되며 명령 줄에 지정된 플래그는 다른 곳에 지정된 다른 모든 설정보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="31e26364535ee708208d36110b351e48d76e9d3b" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it! Head over to &lt;a href=&quot;https://github.com/rbenv/rbenv#command-reference&quot;&gt;rbenv command references&lt;/a&gt; to learn how to use different versions of Ruby in your projects.</source>
          <target state="translated">그게 다야! 로 향할 &lt;a href=&quot;https://github.com/rbenv/rbenv#command-reference&quot;&gt;rbenv 명령 참조하는&lt;/a&gt; 프로젝트에 루비의 다른 버전을 사용하는 방법을 배울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3420af8913b823b74b688aea4be041a4291a489f" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it! You&amp;rsquo;re ready to start using Jekyll.</source>
          <target state="translated">그게 다야! 지킬을 사용할 준비가되었습니다.</target>
        </trans-unit>
        <trans-unit id="1ee36422ccc27808dce84a590233680e25afa5a2" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s it, you&amp;rsquo;re ready to use Jekyll!</source>
          <target state="translated">이제 지킬을 사용할 준비가되었습니다!</target>
        </trans-unit>
        <trans-unit id="57b6e3ea12042140d99aebfec66c4d2fd21ad47f" translate="yes" xml:space="preserve">
          <source>That&amp;rsquo;s next. Let&amp;rsquo;s keep going.</source>
          <target state="translated">그 다음입니다. 계속 가자.</target>
        </trans-unit>
        <trans-unit id="1c7ae6e9344b75aa2a92435038dc2d5c06c27826" translate="yes" xml:space="preserve">
          <source>The (unrendered) content of the document. If no YAML Front Matter is provided, Jekyll will not generate the file in your collection. If YAML Front Matter is used, then this is all the contents of the file after the terminating `---` of the front matter.</source>
          <target state="translated">문서의 (렌더링되지 않은) 내용입니다. YAML Front Matter가 제공되지 않으면 Jekyll은 컬렉션에 파일을 생성하지 않습니다. YAML Front Matter를 사용하는 경우, 이것은 전면의`---`종료 후 파일의 모든 내용입니다.</target>
        </trans-unit>
        <trans-unit id="dff9e727f022ff1d34d5e686eede29e28e00f977" translate="yes" xml:space="preserve">
          <source>The (unrendered) content of the document. If no front matter is provided, Jekyll will not generate the file in your collection. If front matter is used, then this is all the contents of the file after the terminating `---` of the front matter.</source>
          <target state="translated">문서의 (렌더링되지 않은) 내용입니다. 머리말이 제공되지 않으면 Jekyll은 컬렉션에 파일을 생성하지 않습니다. 앞문을 사용하는 경우 앞문의 마지막 '---'이후 파일의 모든 내용입니다.</target>
        </trans-unit>
        <trans-unit id="03a2268eb0b29718f228699fbbe75966ada707f6" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files&quot;&gt;try_files&lt;/a&gt; directive allows you to specify a list of files to search for to process a request. The following configuration will instruct nginx to search for a file with an &lt;code&gt;.html&lt;/code&gt; extension if an exact match for the requested URI is not found.</source>
          <target state="translated">&lt;a href=&quot;http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files&quot;&gt;try_files의&lt;/a&gt; 지시자는 요청을 처리하기 위해 검색 할 파일의 목록을 지정할 수 있습니다. 다음 구성은 요청 된 URI와 정확히 일치 하는 파일을 찾지 못하면 nginx가 확장자 가 &lt;code&gt;.html&lt;/code&gt; 인 파일을 검색하도록 지시 합니다.</target>
        </trans-unit>
        <trans-unit id="4bc38b6be6281a9888e8f3fce6c32c39f23469c0" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://console.amplify.aws&quot;&gt;AWS Amplify Console&lt;/a&gt; provides continuous deployment and hosting for modern web apps (single page apps and static site generators). Continuous deployment allows developers to deploy updates to their web app on every code commit to their Git repository. Hosting includes features such as globally available CDNs, 1-click custom domain setup + HTTPS, feature branch deployments, redirects, trailing slashes, and password protection.</source>
          <target state="translated">&lt;a href=&quot;https://console.amplify.aws&quot;&gt;AWS 증폭 콘솔은&lt;/a&gt; 연속 배포 및 호스팅 현대적인 웹 애플 리케이션을위한 (단일 페이지 응용 프로그램 및 정적 사이트 발전기)를 제공합니다. 지속적인 배포를 통해 개발자는 Git 저장소에 대한 모든 코드 커밋에서 웹 앱에 대한 업데이트를 배포 할 수 있습니다. 호스팅에는 전역 적으로 사용 가능한 CDN, 원 클릭 사용자 지정 도메인 설정 + HTTPS, 기능 분기 배포, 리디렉션, 후행 슬래시 및 암호 보호와 같은 기능이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4f115da54b9393792ea4dff150c2787abe86526f" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://twitter.com/jekyllrb&quot;&gt;official Jekyll Twitter account&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://twitter.com/jekyllrb&quot;&gt;공식 지킬 트위터 계정&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="29a0415fc20550787fcea206149e7d0290f0d8c4" translate="yes" xml:space="preserve">
          <source>The &lt;a href=&quot;https://www.keycdn.com/support/jekyll-hosting&quot;&gt;Jekyll hosting tutorial&lt;/a&gt; provides various options to supercharge Jekyll sites with just a few steps. It combines best flexibility and excellent performance.</source>
          <target state="translated">&lt;a href=&quot;https://www.keycdn.com/support/jekyll-hosting&quot;&gt;지킬 호스팅 튜토리얼은&lt;/a&gt; 몇 단계를 지킬 사이트를 과급하는 다양한 옵션을 제공합니다. 최고의 유연성과 뛰어난 성능을 결합합니다.</target>
        </trans-unit>
        <trans-unit id="a08d96a906788824a4d183e11431ffeee3dd4f0f" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:title&lt;/code&gt; template variable will take the &lt;code&gt;slug&lt;/code&gt;&lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt; variable value if any is present in the document; if none is defined then &lt;code&gt;:title&lt;/code&gt; will be equivalent to &lt;code&gt;:name&lt;/code&gt;, aka the slug generated from the filename.</source>
          <target state="translated">&lt;code&gt;:title&lt;/code&gt; 템플릿 변수가 걸릴 &lt;code&gt;slug&lt;/code&gt; &lt;a href=&quot;../front-matter/index&quot;&gt;앞에 물질&lt;/a&gt; 어떤 문서에 존재하는 경우 변수의 값; 정의되지 않은 경우 &lt;code&gt;:title&lt;/code&gt; 은 파일 이름에서 생성 된 슬러그 일명 &lt;code&gt;:name&lt;/code&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="86718a9d1272d70d30b11f6c4bbf03f59f232c82" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;:title&lt;/code&gt; template variable will take the &lt;code&gt;slug&lt;/code&gt;&lt;a href=&quot;../frontmatter/index&quot;&gt;front matter&lt;/a&gt; variable value if any is present in the document; if none is defined then &lt;code&gt;:title&lt;/code&gt; will be equivalent to &lt;code&gt;:name&lt;/code&gt;, aka the slug generated from the filename.</source>
          <target state="translated">&lt;code&gt;:title&lt;/code&gt; 템플릿 변수가 걸릴 &lt;code&gt;slug&lt;/code&gt; &lt;a href=&quot;../frontmatter/index&quot;&gt;앞에 물질&lt;/a&gt; 어떤 문서에 존재하는 경우 변수의 값; 아무것도 정의되어 있지 않으면 &lt;code&gt;:title&lt;/code&gt; 은 &lt;code&gt;:name&lt;/code&gt; 과 동일합니다 . 즉, 파일 이름에서 생성 된 슬러그입니다.</target>
        </trans-unit>
        <trans-unit id="9ea004d919e32ec2a322ac05fe4515ce8ba65e43" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Gemfile.lock&lt;/code&gt; files are used by Bundler to keep track of the required gems and gem versions you need to build your Jekyll site.</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; 및 &lt;code&gt;Gemfile.lock&lt;/code&gt; 파일은 당신이 당신의 지킬 사이트를 구축하는 데 필요한 요구 보석과 보석 버전을 추적하는 Bundler를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="c6c2579db93e220c78bc31b32ca43918a2dcc6b1" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Gemfile.lock&lt;/code&gt; files inform Bundler about the gem requirements in your site. If your site doesn&amp;rsquo;t have these Gemfiles, you can omit &lt;code&gt;bundle exec&lt;/code&gt; and just run &lt;code&gt;jekyll serve&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; 및 &lt;code&gt;Gemfile.lock&lt;/code&gt; 파일은 사이트의 보석 요구 사항에 대해 Bundler를 알려줍니다. 귀하의 사이트에 이러한 Gemfile이 없으면 &lt;code&gt;bundle exec&lt;/code&gt; 를 생략 하고 &lt;code&gt;jekyll serve&lt;/code&gt; 를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="015871f3cca2e404aac8ff736d807ca780ce4540" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;_config.yml&lt;/code&gt; master configuration file contains global configurations and variable definitions that are read once at execution time. Changes made to &lt;code&gt;_config.yml&lt;/code&gt; during automatic regeneration are not loaded until the next execution.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 마스터 구성 파일은 글로벌 구성과 실행 시간에 한 번 읽어 변수 정의가 포함되어 있습니다. 자동 재생 중 &lt;code&gt;_config.yml&lt;/code&gt; 에 대한 변경 내용은 다음 실행까지로드되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4e41fe8194cc18257de1f89cee9f4498d2e6fc24" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;_data&lt;/code&gt; folder is where you can store additional data for Jekyll to use when generating your site. These files must be YAML, JSON, or CSV files (using either the &lt;code&gt;.yml&lt;/code&gt;, &lt;code&gt;.yaml&lt;/code&gt;, &lt;code&gt;.json&lt;/code&gt; or &lt;code&gt;.csv&lt;/code&gt; extension), and they will be accessible via &lt;code&gt;site.data&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_data&lt;/code&gt; 사이트를 생성 할 때 사용 지킬에 대한 추가 데이터를 저장할 수있는 폴더입니다. 이러한 파일은 YAML, JSON 또는 CSV 파일 ( &lt;code&gt;.yml&lt;/code&gt; , &lt;code&gt;.yaml&lt;/code&gt; , &lt;code&gt;.json&lt;/code&gt; 또는 &lt;code&gt;.csv&lt;/code&gt; 확장자 사용)이어야하며 &lt;code&gt;site.data&lt;/code&gt; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d0b3420ea4f5642027479a0f45aa23361e1069dd" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;_posts&lt;/code&gt; folder is where your blog posts live. You typically write posts in &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;, HTML is also supported.</source>
          <target state="translated">&lt;code&gt;_posts&lt;/code&gt; 의 블로그 게시물이 살고있는 폴더입니다. 일반적으로 &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; 으로 게시물을 작성 하며 HTML도 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="c66c5f86a437b947ed0ce736975e36e6e9c63046" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;branches&lt;/code&gt; directive is completely optional. Travis will build from every push to any branch of your repo if leave it out.</source>
          <target state="translated">&lt;code&gt;branches&lt;/code&gt; 지시어는 완전히 선택 사항입니다. Travis는 모든 푸시에서 당신의 repo의 어떤 브랜치까지 그것을 떠나게 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="b805bb53409f023024aea30697c9e7121d0d7b8d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;defaults&lt;/code&gt; key holds an array of scope/values pairs that define what defaults should be set for a particular file path, and optionally, a file type in that path.</source>
          <target state="translated">&lt;code&gt;defaults&lt;/code&gt; 키는 디폴트가 임의로 해당 경로의 파일 형식을 특정 파일 경로를 설정하고되어야 하는지를 정의 범위 / 값 쌍의 배열을 유지한다.</target>
        </trans-unit>
        <trans-unit id="9872e1f45f37fadbe9c5e5c67d4324984eff4052" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;help&lt;/code&gt; command is always here to remind you of all available options and usage, and also works with the &lt;code&gt;build&lt;/code&gt;, &lt;code&gt;serve&lt;/code&gt; and &lt;code&gt;new&lt;/code&gt; subcommands, e.g &lt;code&gt;jekyll help new&lt;/code&gt; or &lt;code&gt;jekyll help build&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;help&lt;/code&gt; 명령은 모든 사용 가능한 옵션 및 사용 당신을 생각 나게하는 것이 여기에있다, 또한 작동 &lt;code&gt;build&lt;/code&gt; , &lt;code&gt;serve&lt;/code&gt; 및 &lt;code&gt;new&lt;/code&gt; 하위 명령, 예를 들면 &lt;code&gt;jekyll help new&lt;/code&gt; 또는 &lt;code&gt;jekyll help build&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="21cae873b11fc6869aa1c2ebe6e7767215a8ed64" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; tag allows you to include content from another file stored in an &lt;code&gt;_includes&lt;/code&gt; folder. Includes are useful for having a single source for source code that repeats around the site or for improving the readability.</source>
          <target state="translated">는 &lt;code&gt;include&lt;/code&gt; 태그는 당신이에 저장된 다른 파일의 내용을 포함 할 수 있습니다 &lt;code&gt;_includes&lt;/code&gt; 의 폴더에 저장합니다. 포함은 사이트 전체에서 반복되는 소스 코드에 대한 단일 소스를 갖거나 가독성을 향상시키는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="4abdc0f63faca27dc0d13cf9f4ae0f88d56557db" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;include&lt;/code&gt; tag allows you to include the content from another file stored in the &lt;code&gt;_includes&lt;/code&gt; folder:</source>
          <target state="translated">는 &lt;code&gt;include&lt;/code&gt; 태그 당신이에 저장된 다른 파일의 내용을 포함 할 수 있습니다 &lt;code&gt;_includes&lt;/code&gt; 의 폴더를 :</target>
        </trans-unit>
        <trans-unit id="be0f39689236690a99ed44aabb835d82bae4ec9e" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; command isn&amp;rsquo;t the only way to create a new Jekyll site with a gem-based theme. You can also find gem-based themes online and incorporate them into your Jekyll project.</source>
          <target state="translated">&lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; 명령은 보석 기반의 테마로 새로운 지킬 사이트를 만들 수있는 유일한 방법은 아니다. 보석 기반 테마를 온라인에서 찾아 Jekyll 프로젝트에 통합 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="490fa66ce202e97df6ee8b29417170e17bab61bb" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;jekyll&lt;/code&gt; program has several commands but the structure is always:</source>
          <target state="translated">&lt;code&gt;jekyll&lt;/code&gt; 프로그램은 몇 가지 명령이 있지만 구조는 항상 :</target>
        </trans-unit>
        <trans-unit id="3a22f5e9830e79d5bffeada0bdc4c8fb7b8e615d" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;post&lt;/code&gt; layout doesn&amp;rsquo;t exist so you&amp;rsquo;ll need to create it at &lt;code&gt;_layouts/post.html&lt;/code&gt; with the following content:</source>
          <target state="translated">&lt;code&gt;post&lt;/code&gt; 당신이 그것을 만들어야 있도록 레이아웃이 존재하지 않는 &lt;code&gt;_layouts/post.html&lt;/code&gt; 다음 내용 :</target>
        </trans-unit>
        <trans-unit id="b647252c78f55c6ca901fe959de1c8cb94b0ceb7" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;projects/foo_project.md&lt;/code&gt; would have the &lt;code&gt;layout&lt;/code&gt; set to &lt;code&gt;foobar&lt;/code&gt; instead of &lt;code&gt;project&lt;/code&gt; and the &lt;code&gt;author&lt;/code&gt; set to &lt;code&gt;John Smith&lt;/code&gt; instead of &lt;code&gt;Mr. Hyde&lt;/code&gt; when the site is built.</source>
          <target state="translated">&lt;code&gt;projects/foo_project.md&lt;/code&gt; 것 &lt;code&gt;layout&lt;/code&gt; 으로 설정 &lt;code&gt;foobar&lt;/code&gt; 대신 &lt;code&gt;project&lt;/code&gt; 와 &lt;code&gt;author&lt;/code&gt; 로 설정 &lt;code&gt;John Smith&lt;/code&gt; 대신 &lt;code&gt;Mr. Hyde&lt;/code&gt; 사이트가 내장되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed5f3129400a57d68f48a537a7d6292450e00443" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;render_time&lt;/code&gt; tag seen above can also be rewritten as a tag block by inheriting the &lt;code&gt;Liquid::Block&lt;/code&gt; class. Look at the example below:</source>
          <target state="translated">위에 표시된 &lt;code&gt;render_time&lt;/code&gt; 태그는 &lt;code&gt;Liquid::Block&lt;/code&gt; 클래스를 상속하여 태그 블록으로 다시 작성할 수도 있습니다 . 아래 예를보십시오.</target>
        </trans-unit>
        <trans-unit id="57f93099e236e22bad0fc609681110fd7c36137b" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;sass_dir&lt;/code&gt; is only used by Sass</source>
          <target state="translated">&lt;code&gt;sass_dir&lt;/code&gt; 는 단지 말대꾸에 의해 사용된다</target>
        </trans-unit>
        <trans-unit id="a0b0548836c5da47246c8e1f3d0079d6eea8c431" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;script&lt;/code&gt; directive can be absolutely any valid shell command.</source>
          <target state="translated">&lt;code&gt;script&lt;/code&gt; 지시어는 절대적으로 유효한 쉘 명령 할 수있다.</target>
        </trans-unit>
        <trans-unit id="f9517da8df41947654f87606ca04f61c9fbfb66a" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;slugify&lt;/code&gt; filter accepts an option, each specifying what to filter. The default is &lt;code&gt;default&lt;/code&gt;. They are as follows (with what they filter):</source>
          <target state="translated">&lt;code&gt;slugify&lt;/code&gt; 필터 옵션, 어떤 필터로 각각 지정을 받아들입니다. 기본값은 &lt;code&gt;default&lt;/code&gt; 입니다. 그것들은 다음과 같습니다 (필터링 한 것) :</target>
        </trans-unit>
        <trans-unit id="f8c33390f66d336ebefdb3c6cc90c26c89c1a377" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;styles.css&lt;/code&gt; referenced here is generated by Jekyll from the &lt;code&gt;styles.scss&lt;/code&gt; you created earlier in &lt;code&gt;assets/css/&lt;/code&gt;.</source>
          <target state="translated">여기서 참조 된 &lt;code&gt;styles.css&lt;/code&gt; 는 &lt;code&gt;assets/css/&lt;/code&gt; 에서 이전에 만든 &lt;code&gt;styles.scss&lt;/code&gt; 에서 Jekyll에 의해 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="6f49562587f52eeca7faec6ae393a9187d870396" translate="yes" xml:space="preserve">
          <source>The &lt;code&gt;{{ include.content }}&lt;/code&gt; is a parameter that gets populated when you call the include and specify a value for that parameter, like this:</source>
          <target state="translated">&lt;code&gt;{{ include.content }}&lt;/code&gt; 당신이 포함하고 다음과 같이 해당 매개 변수의 값을 지정 호출 할 때 채워됩니다 매개 변수입니다 :</target>
        </trans-unit>
        <trans-unit id="b00a4fc83d428b8b611209d4e9806a736b0ab610" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;checkout&lt;/strong&gt; action takes care of cloning your repository.</source>
          <target state="translated">&lt;strong&gt;체크 아웃&lt;/strong&gt; 작업은 저장소를 복제을 담당한다.</target>
        </trans-unit>
        <trans-unit id="add532a620fbaee53195cee698d498b6cad90818" translate="yes" xml:space="preserve">
          <source>The &lt;strong&gt;name&lt;/strong&gt; of the job matches our YAML filename: &lt;code&gt;github-pages&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;이름&lt;/strong&gt; : 작업의 우리의 YAML 파일 이름과 일치 &lt;code&gt;github-pages&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bcf4a02bedfa2bc6c9855a66aab578d0d31a600a" translate="yes" xml:space="preserve">
          <source>The Action we&amp;rsquo;re using here will create (or reset an existing) &lt;code&gt;gh-pages&lt;/code&gt; branch on every successful deploy. So, if you have an existing &lt;code&gt;gh-pages&lt;/code&gt; branch that is used to deploy your production build, ensure to make a backup of the contents into a different branch so that you can rollback easily if necessary.</source>
          <target state="translated">여기서 사용하는 액션은 모든 성공적인 배포에서 &lt;code&gt;gh-pages&lt;/code&gt; 분기를 생성 (또는 기존) 합니다. 따라서 프로덕션 빌드를 배포하는 데 사용되는 기존 &lt;code&gt;gh-pages&lt;/code&gt; 분기가있는 경우 필요한 경우 쉽게 롤백 할 수 있도록 콘텐츠를 다른 분기에 백업해야합니다.</target>
        </trans-unit>
        <trans-unit id="453d11f1f372eeba4245b42949b067b786f0d50d" translate="yes" xml:space="preserve">
          <source>The Apache web server has extensive support for content negotiation and can handle extensionless URLs by setting the &lt;a href=&quot;https://httpd.apache.org/docs/current/content-negotiation.html#multiviews&quot;&gt;multiviews&lt;/a&gt; option in your &lt;code&gt;httpd.conf&lt;/code&gt; or &lt;code&gt;.htaccess&lt;/code&gt; file:</source>
          <target state="translated">Apache 웹 서버는 컨텐츠 협상을 광범위하게 지원하며 &lt;code&gt;httpd.conf&lt;/code&gt; 또는 &lt;code&gt;.htaccess&lt;/code&gt; 파일 에서 &lt;a href=&quot;https://httpd.apache.org/docs/current/content-negotiation.html#multiviews&quot;&gt;multiviews&lt;/a&gt; 옵션 을 설정하여 확장없는 URL을 처리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="6f60db029a5dafe35fdca83898ba43c4e3290223" translate="yes" xml:space="preserve">
          <source>The Data Folder</source>
          <target state="translated">데이터 폴더</target>
        </trans-unit>
        <trans-unit id="4f65a794b94efa066f90c880f3c46026c77e594e" translate="yes" xml:space="preserve">
          <source>The Date assigned to the Post. This can be overridden in a Post&amp;rsquo;s front matter by specifying a new date/time in the format &lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt; (assuming UTC), or &lt;code&gt;YYYY-MM-DD HH:MM:SS +/-TTTT&lt;/code&gt; (to specify a time zone using an offset from UTC. e.g. &lt;code&gt;2008-12-14 10:30:00 +0900&lt;/code&gt;).</source>
          <target state="translated">게시물에 지정된 날짜입니다. &lt;code&gt;YYYY-MM-DD HH:MM:SS&lt;/code&gt; (UTC 가정) 또는 &lt;code&gt;YYYY-MM-DD HH:MM:SS +/-TTTT&lt;/code&gt; 형식으로 새 날짜 / 시간을 지정하여 게시물의 전면에서이를 무시할 수 있습니다 ( UTC 오프셋을 사용하여 시간대를 지정하려면 (예 : &lt;code&gt;2008-12-14 10:30:00 +0900&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a8bbe3d9099df1f1edc385ef16c79952cca8b1ee" translate="yes" xml:space="preserve">
          <source>The HTML Proofer Executable</source>
          <target state="translated">HTML Proofer 실행 파일</target>
        </trans-unit>
        <trans-unit id="b5c2a258e001242549577b3975b1a4eff528efd8" translate="yes" xml:space="preserve">
          <source>The HTML Proofer Library</source>
          <target state="translated">HTML 프 루퍼 라이브러리</target>
        </trans-unit>
        <trans-unit id="bc05cd9f65558d68bd3f3f4ae9643c32c6c421e8" translate="yes" xml:space="preserve">
          <source>The Jekyll Command</source>
          <target state="translated">지킬 사령부</target>
        </trans-unit>
        <trans-unit id="5a12749cf3b9b4208ca23848a2980ed3511bb09d" translate="yes" xml:space="preserve">
          <source>The Jekyll gem makes a &lt;code&gt;jekyll&lt;/code&gt; executable available to you in your Terminal window. You can use this command in a number of ways:</source>
          <target state="translated">Jekyll gem은 터미널 창에서 &lt;code&gt;jekyll&lt;/code&gt; 실행 파일을 사용할 수있게합니다. 이 명령은 여러 가지 방법으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ca9c9f48b5e93e97d411fd5b6ff1bd56da6dca0" translate="yes" xml:space="preserve">
          <source>The Jekyll gem makes a &lt;code&gt;jekyll&lt;/code&gt; executable available to you in your terminal.</source>
          <target state="translated">Jekyll gem은 터미널에서 &lt;code&gt;jekyll&lt;/code&gt; 실행 파일을 사용할 수 있도록합니다.</target>
        </trans-unit>
        <trans-unit id="e4ae3b66f42418ec34e5b727643d2151d3a4e786" translate="yes" xml:space="preserve">
          <source>The Jekyll project repository itself is a perfect example of this branch structure&amp;mdash;the &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;master branch&lt;/a&gt; contains the actual software project for Jekyll, and the Jekyll website that you&amp;rsquo;re looking at right now is contained in the &lt;a href=&quot;https://github.com/jekyll/jekyll/tree/master/docs&quot;&gt;docs folder&lt;/a&gt; of the same repository.</source>
          <target state="translated">Jekyll 프로젝트 리포지토리 자체는이 브랜치 구조의 완벽한 예입니다. &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;마스터 브랜치&lt;/a&gt; 는 Jekyll의 실제 소프트웨어 프로젝트를 포함하며 현재보고있는 Jekyll 웹 사이트 는 동일한 리포지토리 의 &lt;a href=&quot;https://github.com/jekyll/jekyll/tree/master/docs&quot;&gt;docs 폴더&lt;/a&gt; 에 있습니다.</target>
        </trans-unit>
        <trans-unit id="883abcc631b039dcc2e7dd273ebc23da68c2d88d" translate="yes" xml:space="preserve">
          <source>The Jekyll site we&amp;rsquo;ll be using for the rest of this page initially consists of just a &lt;code&gt;_config.yml&lt;/code&gt;, an &lt;code&gt;index.md&lt;/code&gt; page and a &lt;code&gt;Gemfile&lt;/code&gt;. The contents are respectively:</source>
          <target state="translated">이 페이지의 나머지 부분에서 사용할 Jekyll 사이트는 처음에는 &lt;code&gt;_config.yml&lt;/code&gt; , &lt;code&gt;index.md&lt;/code&gt; 페이지 및 &lt;code&gt;Gemfile&lt;/code&gt; 로 구성 됩니다. 내용은 각각 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9f7b363d7bb8629580831520270146fdabd9d747" translate="yes" xml:space="preserve">
          <source>The Posts Folder</source>
          <target state="translated">게시물 폴더</target>
        </trans-unit>
        <trans-unit id="b4f586a6f482917778790b090fab3a1b33e8d3fe" translate="yes" xml:space="preserve">
          <source>The Sass converter will default the &lt;code&gt;sass_dir&lt;/code&gt; configuration option to &lt;code&gt;_sass&lt;/code&gt;.</source>
          <target state="translated">Sass 변환기는 기본적으로 &lt;code&gt;sass_dir&lt;/code&gt; 구성 옵션을 &lt;code&gt;_sass&lt;/code&gt; 로 설정 합니다.</target>
        </trans-unit>
        <trans-unit id="4a29073bd4807ee992ba4e2f23e3f1865e57d71a" translate="yes" xml:space="preserve">
          <source>The URL of the Post without the domain, but with a leading slash, e.g. &lt;code&gt;/2008/12/14/my-post.html&lt;/code&gt;</source>
          <target state="translated">도메인이 없지만 슬래시가있는 게시물의 URL (예 : &lt;code&gt;/2008/12/14/my-post.html&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="f17187466f6ecc4c73161aa2ab9f1af86b2a36cd" translate="yes" xml:space="preserve">
          <source>The URL of the rendered collection. The file is only written to the destination when the collection to which it belongs has &lt;code&gt;output: true&lt;/code&gt; in the site's configuration.</source>
          <target state="translated">렌더링 된 컬렉션의 URL입니다. 사이트 구성에서 파일이 속한 컬렉션에 &lt;code&gt;output: true&lt;/code&gt; 이있는 경우에만 파일이 대상에 기록됩니다 .</target>
        </trans-unit>
        <trans-unit id="c60bd519de2c1efae2e2361782ce6ba4bc064f9c" translate="yes" xml:space="preserve">
          <source>The `Time` the file was last modified, e.g. &lt;code&gt;2016-04-01 16:35:26 +0200&lt;/code&gt;</source>
          <target state="translated">파일이 마지막으로 수정 된`시간`, 예 : &lt;code&gt;2016-04-01 16:35:26 +0200&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="95816e3e6b937460e49d18e3369071d799c5f9fc" translate="yes" xml:space="preserve">
          <source>The above example depicts the &amp;ldquo;warn&amp;rdquo; value, which is already set by default- &lt;code&gt;error_mode: warn&lt;/code&gt;. This results in any issues being called out during the build process however will continue to build if possible.</source>
          <target state="translated">위의 예는 이미 default- &lt;code&gt;error_mode: warn&lt;/code&gt; 설정되어있는 &quot;warn&quot;값을 나타 냅니다. 이로 인해 빌드 프로세스 중에 문제가 발생하지만 가능한 경우 계속 빌드됩니다.</target>
        </trans-unit>
        <trans-unit id="d948940dd2596a3cab1e1a093d41c70c44f3f75e" translate="yes" xml:space="preserve">
          <source>The above workflow can be explained as the following:</source>
          <target state="translated">위의 워크 플로는 다음과 같이 설명 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c95e94b845ee32f7d98f7caea42801a64174689" translate="yes" xml:space="preserve">
          <source>The action needs permissions to push to your &lt;code&gt;gh-pages&lt;/code&gt; branch. So you need to create a GitHub &lt;strong&gt;authentication token&lt;/strong&gt; on your GitHub profile, then set it as an environment variable in your build using &lt;em&gt;Secrets&lt;/em&gt;:</source>
          <target state="translated">작업에는 &lt;code&gt;gh-pages&lt;/code&gt; 브랜치 로 푸시 할 수있는 권한이 필요합니다 . 따라서 GitHub 프로필에 GitHub &lt;strong&gt;인증 토큰&lt;/strong&gt; 을 만든 다음 &lt;em&gt;Secrets를&lt;/em&gt; 사용하여 빌드에서 환경 변수로 설정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f75f038d27f3676e1e2fe7cc72f7bfb6b448d956" translate="yes" xml:space="preserve">
          <source>The action we&amp;rsquo;re using takes care of installing the Ruby gems and dependencies. While that keeps the setup simple for the user, one may encounter issues if they also check-in &lt;code&gt;Gemfile.lock&lt;/code&gt; if it was generated with an old version of Bundler.</source>
          <target state="translated">우리가 사용하는 액션은 Ruby gem과 의존성 설치를 처리합니다. 이렇게하면 사용자의 설정이 간단 &lt;code&gt;Gemfile.lock&lt;/code&gt; 만, 이전 버전의 Bundler로 생성 된 경우 Gemfile.lock 도 체크인하면 문제가 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2397f25be69740f387eb075765b96597329f7893" translate="yes" xml:space="preserve">
          <source>The argument to the &lt;code&gt;highlight&lt;/code&gt; tag (&lt;code&gt;ruby&lt;/code&gt; in the example above) is the language identifier. To find the appropriate identifier to use for the language you want to highlight, look for the &amp;ldquo;short name&amp;rdquo; on the &lt;a href=&quot;https://github.com/jayferd/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;Rouge wiki&lt;/a&gt; or the &lt;a href=&quot;http://pygments.org/docs/lexers/&quot;&gt;Pygments&amp;rsquo; Lexers page&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;highlight&lt;/code&gt; 태그에 대한 인수 ( 위 예에서 &lt;code&gt;ruby&lt;/code&gt; )는 언어 식별자입니다. 강조 표시하려는 언어에 사용할 적절한 식별자를 찾으려면 &lt;a href=&quot;https://github.com/jayferd/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;루즈 위키&lt;/a&gt; 또는 &lt;a href=&quot;http://pygments.org/docs/lexers/&quot;&gt;피그먼트의 Lexers 페이지&lt;/a&gt; 에서 &quot;짧은 이름&quot;을 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="63c48e46e2dd74954f7115b56f60300f97270f85" translate="yes" xml:space="preserve">
          <source>The argument to the &lt;code&gt;highlight&lt;/code&gt; tag (&lt;code&gt;ruby&lt;/code&gt; in the example above) is the language identifier. To find the appropriate identifier to use for the language you want to highlight, look for the &amp;ldquo;short name&amp;rdquo; on the &lt;a href=&quot;https://github.com/jayferd/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;Rouge wiki&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;highlight&lt;/code&gt; 태그 ( 위의 예에서 &lt;code&gt;ruby&lt;/code&gt; ) 에 대한 인수 는 언어 식별자입니다. 강조 할 언어에 사용할 적절한 식별자를 찾으려면 &lt;a href=&quot;https://github.com/jayferd/rouge/wiki/List-of-supported-languages-and-lexers&quot;&gt;Rouge 위키&lt;/a&gt; 에서 &quot;짧은 이름&quot;을 찾으십시오 .</target>
        </trans-unit>
        <trans-unit id="e142e7d922bb00ee7ccafb06638b76b84605d746" translate="yes" xml:space="preserve">
          <source>The author can then be specified as a page variable in a post&amp;rsquo;s front matter:</source>
          <target state="translated">그런 다음 작성자를 게시물의 머리말에 페이지 변수로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="de3699015c539ff487998ff6eafb1f53089592c2" translate="yes" xml:space="preserve">
          <source>The author can then be specified as a page variable in a post&amp;rsquo;s frontmatter:</source>
          <target state="translated">그런 다음 작성자는 게시물의 전면에서 페이지 변수로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a94f37fadd7da4c6b1ad9595de211831c917d18" translate="yes" xml:space="preserve">
          <source>The best way to install Jekyll is via &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt;. At the terminal prompt, simply run the following command to install Jekyll:</source>
          <target state="translated">Jekyll을 설치하는 가장 좋은 방법은 &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt; 를 이용하는 것 입니다. 터미널 프롬프트에서 다음 명령을 실행하여 Jekyll을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="7e1bc14a58f9132372733aab2f3c315cdce4526c" translate="yes" xml:space="preserve">
          <source>The build script file needs to have the &lt;em&gt;executable&lt;/em&gt; attribute set or Travis will fail with a permission denied error. You can also run this locally and commit the permissions directly, thus rendering this step irrelevant.</source>
          <target state="translated">빌드 스크립트 파일에는 &lt;em&gt;실행 가능&lt;/em&gt; 속성 세트 가 있어야합니다. 그렇지 않으면 권한 거부 오류와 함께 Travis가 실패합니다. 로컬에서이 권한을 실행하고 권한을 직접 커밋 할 수 있으므로이 단계는 관련이 없습니다.</target>
        </trans-unit>
        <trans-unit id="9a28e5b5ecc753f02df3722d44be4cc111642c27" translate="yes" xml:space="preserve">
          <source>The collections are also available under &lt;code&gt;site.collections&lt;/code&gt;, with the metadata you specified in your &lt;code&gt;_config.yml&lt;/code&gt; (if present) and the following information:</source>
          <target state="translated">컬렉션도에 따라 이용할 수 있습니다 &lt;code&gt;site.collections&lt;/code&gt; 당신이 당신에 지정된 메타 데이터, &lt;code&gt;_config.yml&lt;/code&gt; (있는 경우) 다음과 같은 정보 :</target>
        </trans-unit>
        <trans-unit id="4922c5c33c00d746b65dd822422c6021bc3632c8" translate="yes" xml:space="preserve">
          <source>The complete list of available hooks is below:</source>
          <target state="translated">사용 가능한 후크의 전체 목록은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aec9c027612411df4fccea6e5474c3b76d899c16" translate="yes" xml:space="preserve">
          <source>The complete list of available hooks:</source>
          <target state="translated">사용 가능한 후크의 전체 목록 :</target>
        </trans-unit>
        <trans-unit id="e127986025eeef41ee36416b8aa30c4c328c3bb6" translate="yes" xml:space="preserve">
          <source>The config flag explicitly specifies your configuration file(s)</source>
          <target state="translated">config 플래그는 구성 파일을 명시 적으로 지정합니다.</target>
        </trans-unit>
        <trans-unit id="cd1f5fe794b0d7a1e3592860f1795f4726f9ed63" translate="yes" xml:space="preserve">
          <source>The content of the Page, rendered or un-rendered depending upon what Liquid is being processed and what &lt;code&gt;page&lt;/code&gt; is.</source>
          <target state="translated">처리중인 Liquid 및 처리중인 &lt;code&gt;page&lt;/code&gt; 따라 렌더링되거나 렌더링되지 않은 페이지의 컨텐츠입니다 .</target>
        </trans-unit>
        <trans-unit id="0ad84f221f09a5cca8473177feb743d0286dfc3a" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; are automatically cleaned, by default, when the site is built. Files or folders that are not created by your site will be removed. Files and folders you wish to retain in &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; may be specified within the &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; configuration directive.</source>
          <target state="translated">&lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; 의 내용은 기본적으로 사이트가 구축 될 때 자동으로 정리됩니다. 사이트에서 생성하지 않은 파일 또는 폴더는 제거됩니다. &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; 에 보관하려는 파일 및 폴더 는 &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; 구성 지시문 에서 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ced790b62fc4d3512128b154b5dad8c8dd6b59d5" translate="yes" xml:space="preserve">
          <source>The contents of &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; are automatically cleaned, by default, when the site is built. Files or folders that are not created by your site will be removed. Some files could be retained by specifying them within the &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; configuration directive.</source>
          <target state="translated">&lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; 의 내용은 기본적으로 사이트가 구축 될 때 자동으로 정리됩니다. 사이트에서 생성하지 않은 파일 또는 폴더는 제거됩니다. &lt;code&gt;&amp;lt;keep_files&amp;gt;&lt;/code&gt; 구성 지시문에 파일을 지정하여 일부 파일을 보유 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b8e9c8d15bd8417fab41ce40cea38519f11b5ec7" translate="yes" xml:space="preserve">
          <source>The current time (when you run the &lt;code&gt;jekyll&lt;/code&gt; command).</source>
          <target state="translated">현재 시간 ( &lt;code&gt;jekyll&lt;/code&gt; 명령 을 실행할 때 ).</target>
        </trans-unit>
        <trans-unit id="81333770209a28d4fb803c7b6d048bd62c30f009" translate="yes" xml:space="preserve">
          <source>The date of the document's collection.</source>
          <target state="translated">문서를 수집 한 날짜입니다.</target>
        </trans-unit>
        <trans-unit id="461cca207b53f8ae0b009479df21150c362e5974" translate="yes" xml:space="preserve">
          <source>The default value for &lt;code&gt;JEKYLL_ENV&lt;/code&gt; is &lt;code&gt;development&lt;/code&gt;. Therefore if you omit &lt;code&gt;JEKYLL_ENV&lt;/code&gt; from the build arguments, the default value will be &lt;code&gt;JEKYLL_ENV=development&lt;/code&gt;. Any content inside &lt;code&gt;{% if jekyll.environment == &quot;development&quot; %}&lt;/code&gt; tags will automatically appear in the build.</source>
          <target state="translated">&lt;code&gt;JEKYLL_ENV&lt;/code&gt; 의 기본값 은 &lt;code&gt;development&lt;/code&gt; 입니다. 따라서 빌드 인수에서 &lt;code&gt;JEKYLL_ENV&lt;/code&gt; 를 생략 하면 기본값은 &lt;code&gt;JEKYLL_ENV=development&lt;/code&gt; 입니다. &lt;code&gt;{% if jekyll.environment == &quot;development&quot; %}&lt;/code&gt; 태그 안에있는 모든 컨텐츠 는 자동으로 빌드에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="e78a26f993e07d954fb2ad1739f3350189468235" translate="yes" xml:space="preserve">
          <source>The demo site uses Jekyll 4 and a &lt;a href=&quot;https://rubygems.org/gems/jekyll-timeago&quot;&gt;third-party plugin&lt;/a&gt;, both of which are currently not whitelisted for use on GitHub pages. The plugin will allow us to describe how far back a date was from today. e.g. If we give a date as &lt;code&gt;2016-03-23T10:20:00Z&lt;/code&gt; and the current date is &lt;code&gt;2020-04-13T10:20:00Z&lt;/code&gt;, then the output would be &lt;code&gt;4 years and 3 weeks ago&lt;/code&gt;.</source>
          <target state="translated">데모 사이트는 Jekyll 4 및 &lt;a href=&quot;https://rubygems.org/gems/jekyll-timeago&quot;&gt;타사 플러그인을 사용&lt;/a&gt; 하며, 둘 다 현재 GitHub 페이지에서 사용하도록 허용되지 않습니다. 플러그인을 사용하면 날짜가 오늘로부터 얼마나 거슬러 올라 갔는지 설명 할 수 있습니다. 예를 들어 날짜를 &lt;code&gt;2016-03-23T10:20:00Z&lt;/code&gt; 로 지정하고 현재 날짜가 &lt;code&gt;2020-04-13T10:20:00Z&lt;/code&gt; 이면 출력은 &lt;code&gt;4 years and 3 weeks ago&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="6e759d725ab2be77e845b1fa546ac2b78b7b883c" translate="yes" xml:space="preserve">
          <source>The development kit did not set the environment path for Ruby so we need to do it.</source>
          <target state="translated">개발 키트는 Ruby의 환경 경로를 설정하지 않았으므로 우리는이를 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="1e43b15fe09c46cb3865b18a7f6be65df324e7bd" translate="yes" xml:space="preserve">
          <source>The document's base filename, with every sequence of spaces and non-alphanumeric characters replaced by a hyphen.</source>
          <target state="translated">모든 공백과 영숫자가 아닌 문자가 하이픈으로 대체 된 문서의 기본 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="fe7deb3bf2cfd08af171741db823159d78e35205" translate="yes" xml:space="preserve">
          <source>The documents are arranged in the increasing order of the key&amp;rsquo;s value. If a document does not have the front matter key defined then that document is placed immediately after sorted documents. When multiple documents do not have the front matter key defined, those documents are sorted by their dates or paths and then placed immediately after the sorted documents.</source>
          <target state="translated">문서는 키 값의 오름차순으로 정렬됩니다. 문서에 서문 키가 정의되지 않은 경우 해당 문서는 정렬 된 문서 바로 뒤에 배치됩니다. 여러 문서에 서문 키가 정의되어 있지 않은 경우 해당 문서는 날짜 또는 경로별로 정렬 된 다음 정렬 된 문서 바로 뒤에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="a9b329c139f1f25ac882ad0bf22d4dd7639f01a9" translate="yes" xml:space="preserve">
          <source>The easiest way to install Ruby and Jekyll is by using the &lt;a href=&quot;https://rubyinstaller.org/&quot;&gt;RubyInstaller&lt;/a&gt; for Windows.</source>
          <target state="translated">Ruby와 Jekyll을 설치하는 가장 쉬운 방법 은 Windows 용 &lt;a href=&quot;https://rubyinstaller.org/&quot;&gt;RubyInstaller&lt;/a&gt; 를 사용하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="7a4d641be53fc4ded82073ab18060fbbaf5b40f1" translate="yes" xml:space="preserve">
          <source>The easiest way to manage dependencies for a Jekyll project (with or without CircleCI) is via a &lt;a href=&quot;http://bundler.io/gemfile.html&quot;&gt;Gemfile&lt;/a&gt;. You&amp;rsquo;d want to have Jekyll, any Jekyll plugins, &lt;a href=&quot;#html-proofer&quot;&gt;HTML Proofer&lt;/a&gt;, and any other gems that you are using in the &lt;code&gt;Gemfile&lt;/code&gt;. Don&amp;rsquo;t forget to version &lt;code&gt;Gemfile.lock&lt;/code&gt; as well. Here&amp;rsquo;s an example &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">Jekyll 프로젝트 (CircleCI의 유무에 관계없이)에 대한 종속성을 관리하는 가장 쉬운 방법은 &lt;a href=&quot;http://bundler.io/gemfile.html&quot;&gt;Gemfile&lt;/a&gt; 을 사용하는 것 입니다. Jekyll, Jekyll 플러그인, &lt;a href=&quot;#html-proofer&quot;&gt;HTML Proofer&lt;/a&gt; 및 Gemfile 에서 사용중인 다른 gem을 &lt;code&gt;Gemfile&lt;/code&gt; 입니다. &lt;code&gt;Gemfile.lock&lt;/code&gt; 버전도 잊지 마십시오 . 다음은 &lt;code&gt;Gemfile&lt;/code&gt; 의 예 입니다 .</target>
        </trans-unit>
        <trans-unit id="d748830d1eb6c7bc2bc355bff36530957ac67d4c" translate="yes" xml:space="preserve">
          <source>The empty front matter at the top tells Jekyll it needs to process the file. The &lt;code&gt;@import &quot;main&quot;&lt;/code&gt; tells Sass to look for a file called &lt;code&gt;main.scss&lt;/code&gt; in the sass directory (&lt;code&gt;_sass/&lt;/code&gt;) by default which you already created directly under the root folder of your website).</source>
          <target state="translated">맨 위의 빈 표제는 파일을 처리해야한다는 것을 Jekyll에게 알려줍니다. &lt;code&gt;@import &quot;main&quot;&lt;/code&gt; 라는 파일을 찾아 말대꾸를 알려줍니다 &lt;code&gt;main.scss&lt;/code&gt; 말대꾸 디렉토리 ( &lt;code&gt;_sass/&lt;/code&gt; 당신은 이미 당신의 웹 사이트의 루트 폴더)에서 직접 작성 기본적으로).</target>
        </trans-unit>
        <trans-unit id="73a3dd4503e0c749b6e314c596e455e7cdb6d627" translate="yes" xml:space="preserve">
          <source>The extension name for the file, e.g. &lt;code&gt;.jpg&lt;/code&gt; for &lt;code&gt;image.jpg&lt;/code&gt;</source>
          <target state="translated">파일의 확장자 이름, 예를 들어 &lt;code&gt;.jpg&lt;/code&gt; 에 대한 &lt;code&gt;image.jpg&lt;/code&gt; 를</target>
        </trans-unit>
        <trans-unit id="074f8f593ef85509bc81e5b846efb4fe5391555d" translate="yes" xml:space="preserve">
          <source>The extension to be given to the output file (including the dot). Usually this will be &lt;code&gt;&quot;.html&quot;&lt;/code&gt;.</source>
          <target state="translated">출력 파일에 부여 된 확장자 (도트 포함). 보통 이것은 &lt;code&gt;&quot;.html&quot;&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="1985dd167b56297205d3d8d895be5c175a2217a6" translate="yes" xml:space="preserve">
          <source>The filename of the post or page, e.g. &lt;code&gt;about.md&lt;/code&gt;</source>
          <target state="translated">게시물 또는 페이지의 파일 이름 (예 : &lt;code&gt;about.md&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="49c7d9ace7eb773ad1a036f9015c39577b414641" translate="yes" xml:space="preserve">
          <source>The final step is to get the site onto a production server. The most basic way to do this is to run a production build:</source>
          <target state="translated">마지막 단계는 사이트를 프로덕션 서버로 가져 오는 것입니다. 이를 수행하는 가장 기본적인 방법은 프로덕션 빌드를 실행하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="96110bb5efbc0ba512f16b2645a5d7eeef72767f" translate="yes" xml:space="preserve">
          <source>The first and foremost requirement is a Jekyll project hosted at GitHub. Choose an existing Jekyll project or follow the &lt;a href=&quot;https://jekyllrb.com/docs&quot;&gt;Quickstart&lt;/a&gt; and push the repository to GitHub if it is not hosted there already.</source>
          <target state="translated">첫 번째이자 가장 중요한 요구 사항은 GitHub에서 호스팅되는 Jekyll 프로젝트입니다. 기존 Jekyll 프로젝트를 선택하거나 &lt;a href=&quot;https://jekyllrb.com/docs&quot;&gt;빠른 시작에&lt;/a&gt; 따라 저장소가 아직 호스팅되지 않은 경우 GitHub에 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="071a0f8feb31149cc4a872234934c640bd832437" translate="yes" xml:space="preserve">
          <source>The first build will start on its own. You can start telling CircleCI how to build your project by creating a &lt;a href=&quot;https://circleci.com/docs/configuration/&quot;&gt;circle.yml&lt;/a&gt; file in the root of your repository.</source>
          <target state="translated">첫 번째 빌드는 자체적으로 시작됩니다. 리포지토리의 루트에 &lt;a href=&quot;https://circleci.com/docs/configuration/&quot;&gt;circle.yml&lt;/a&gt; 파일 을 만들어 CircleCI에 프로젝트 빌드 방법을 알려줄 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ff0f0dd2cb7653fe7cfb0aedeb6d8b5e84edc946" translate="yes" xml:space="preserve">
          <source>The first step is to put the template source code in &lt;code&gt;default.html&lt;/code&gt;. &lt;code&gt;content&lt;/code&gt; is a special variable, the value is the rendered content of the post or page being wrapped.</source>
          <target state="translated">첫 번째 단계는 템플릿 소스 코드를 &lt;code&gt;default.html&lt;/code&gt; 에 넣는 것 입니다. &lt;code&gt;content&lt;/code&gt; 는 특수 변수이며 값은 래핑되는 게시물 또는 페이지의 렌더링 된 콘텐츠입니다.</target>
        </trans-unit>
        <trans-unit id="ff2aa84f0f847a851c69fbeaf082aacd65aeaef6" translate="yes" xml:space="preserve">
          <source>The folder must be named identically to the collection you defined in your &lt;code&gt;_config.yml&lt;/code&gt; file, with the addition of the preceding &lt;code&gt;_&lt;/code&gt; character.</source>
          <target state="translated">폴더는 앞에 &lt;code&gt;_&lt;/code&gt; 문자를 추가 하여 &lt;code&gt;_config.yml&lt;/code&gt; 파일에 정의한 컬렉션과 동일하게 이름을 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="20918523f72d93ec13db1517cbfc8928a940fdd9" translate="yes" xml:space="preserve">
          <source>The following HTML snippet should handle page one, and render a list of each page with links to all but the current page.</source>
          <target state="translated">다음 HTML 스 니펫은 1 페이지를 처리하고 현재 페이지를 제외한 모든 페이지에 대한 링크가있는 각 페이지의 목록을 렌더링해야합니다.</target>
        </trans-unit>
        <trans-unit id="43bca52f5fc1e96c32524336aa4c0754f14b8073" translate="yes" xml:space="preserve">
          <source>The following example is a more complex generator that generates new pages. In this example, the generator will create a series of files under the &lt;code&gt;categories&lt;/code&gt; directory for each category, listing the posts in each category using the &lt;code&gt;category_index.html&lt;/code&gt; layout.</source>
          <target state="translated">다음 예제는 새 페이지를 생성하는 더 복잡한 생성기입니다. 이 예에서 생성기는 &lt;code&gt;category_index.html&lt;/code&gt; 레이아웃을 사용하여 각 카테고리의 게시물을 나열하는 각 카테고리 의 &lt;code&gt;categories&lt;/code&gt; 디렉토리 아래에 일련의 파일을 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="4ac3a4ea2bb7dfab17f62ce20dcfbf21480b1e99" translate="yes" xml:space="preserve">
          <source>The following table lists the template variables available for permalinks. You can use these variables in the &lt;code&gt;permalink&lt;/code&gt; property in your config file.</source>
          <target state="translated">다음 표는 퍼머 링크에 사용 가능한 템플릿 변수를 보여줍니다. 구성 파일 의 &lt;code&gt;permalink&lt;/code&gt; 속성에서 이러한 변수를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e06fe39e9c6aaf398c3c9b66746e0b4503b012f7" translate="yes" xml:space="preserve">
          <source>The front matter is where Jekyll starts to get really cool. Any file that contains a &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; front matter block will be processed by Jekyll as a special file. The front matter must be the first thing in the file and must take the form of valid YAML set between triple-dashed lines. Here is a basic example:</source>
          <target state="translated">가장 중요한 것은 지킬이 정말 시원해지기 시작하는 곳입니다. &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; 프론트 블록 을 포함하는 모든 파일은 Jekyll에 의해 특수 파일로 처리됩니다. 첫 번째 사항은 파일에서 첫 번째 항목이어야하며 3 중 점선 사이에 유효한 YAML 형식을 가져야합니다. 기본 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="380fc13db84b5364759de2687c000b05b1341582" translate="yes" xml:space="preserve">
          <source>The full path to the collections's source directory.</source>
          <target state="translated">컬렉션 소스 디렉토리의 전체 경로입니다.</target>
        </trans-unit>
        <trans-unit id="24556f0780c34a4c2474ed19003cf32c035058f9" translate="yes" xml:space="preserve">
          <source>The full path to the document's source file.</source>
          <target state="translated">문서 소스 파일의 전체 경로입니다.</target>
        </trans-unit>
        <trans-unit id="38e774c2af112b48879984a6533c3733a5089ba7" translate="yes" xml:space="preserve">
          <source>The github-pages gem</source>
          <target state="translated">github-pages gem</target>
        </trans-unit>
        <trans-unit id="7db87227ddc536101f77023bb4d1038bdb0393ca" translate="yes" xml:space="preserve">
          <source>The goal of gem-based themes is to allow you to get all the benefits of a robust, continually updated theme without having all the theme&amp;rsquo;s files getting in your way and over-complicating what might be your primary focus: creating content.</source>
          <target state="translated">gem 기반 테마의 목표는 모든 테마 파일이 방해를받지 않고 컨텐츠 작성과 같은 주요 주제를 지나치게 복잡하게하지 않고도 강력하고 지속적으로 업데이트되는 테마의 모든 이점을 얻을 수 있도록하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="203a2b909550365bbb6d53accdabeea16b65b367" translate="yes" xml:space="preserve">
          <source>The guides help you with the specifics of creating plugins. We also have some recommended best practices to help structure your plugin.</source>
          <target state="translated">이 가이드는 플러그인 생성의 세부 사항에 대해 설명합니다. 또한 플러그인을 구성하는 데 도움이되는 몇 가지 권장 모범 사례가 있습니다.</target>
        </trans-unit>
        <trans-unit id="9832241531a86fed69af41be4e9f8dbcd51ecac4" translate="yes" xml:space="preserve">
          <source>The hallmark difference between categories and tags is that categories of a post may be incorporated into &lt;a href=&quot;../permalinks/index#global&quot;&gt;the generated URL&lt;/a&gt; for the post, while tags cannot be.</source>
          <target state="translated">카테고리와 태그의 특징은 게시물의 카테고리가 게시물에 &lt;a href=&quot;../permalinks/index#global&quot;&gt;대해 생성 된 URL&lt;/a&gt; 에 통합 될 수 있지만 태그는 통합 될 수 없다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="4b034ea59382f65d6ad92ab4829d189f89dc9a99" translate="yes" xml:space="preserve">
          <source>The jekyll_plugins group</source>
          <target state="translated">jekyll_plugins 그룹</target>
        </trans-unit>
        <trans-unit id="295cc9d2d2c4dc6d40154ebf181cd8dc4e96fa12" translate="yes" xml:space="preserve">
          <source>The label of the collection to which this document belongs. e.g. &lt;code&gt;posts&lt;/code&gt; for a post, or &lt;code&gt;puppies&lt;/code&gt; for a document at path &lt;code&gt;_puppies/rover.md&lt;/code&gt;. If not part of a collection, an empty string is returned.</source>
          <target state="translated">이 문서가 속한 컬렉션의 레이블입니다. 예를 들어, &lt;code&gt;posts&lt;/code&gt; 를위한 포스트 또는 &lt;code&gt;_puppies/rover.md&lt;/code&gt; 경로에있는 문서를위한 &lt;code&gt;puppies&lt;/code&gt; . 컬렉션의 일부가 아니면 빈 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="ba4e1bc24ab615d4e3a3cd73fc2b8010a19b5f73" translate="yes" xml:space="preserve">
          <source>The latest version, version 2.0, seems to break the use of &lt;code&gt;{{&lt;/code&gt; in templates. Unlike previous versions, using &lt;code&gt;{{&lt;/code&gt; in 2.0 triggers the following error:</source>
          <target state="translated">최신 버전 인 버전 2.0 은 템플릿에서 &lt;code&gt;{{&lt;/code&gt; 를 사용하지 못하는 것 같습니다 . 이전 버전과 달리 2.0에서 &lt;code&gt;{{&lt;/code&gt; 을 사용 하면 다음 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="90196f7c2d9516518127e48bf65c6d41d8b18d87" translate="yes" xml:space="preserve">
          <source>The list of all Posts in category &lt;code&gt;CATEGORY&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CATEGORY&lt;/code&gt; 카테고리의 모든 게시물 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="8716ce1782221a8588f08b35fcce746c10a765e8" translate="yes" xml:space="preserve">
          <source>The list of all Posts with tag &lt;code&gt;TAG&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TAG&lt;/code&gt; 태그가있는 모든 게시물의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="7838fafade831ac99f6250201b69db3111bad0f8" translate="yes" xml:space="preserve">
          <source>The list of categories to which this post belongs. Categories are derived from the directory structure above the &lt;code&gt;_posts&lt;/code&gt; directory. For example, a post at &lt;code&gt;/work/code/_posts/2008-12-24-closures.md&lt;/code&gt; would have this field set to &lt;code&gt;['work', 'code']&lt;/code&gt;. These can also be specified in the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;.</source>
          <target state="translated">이 게시물이 속한 카테고리 목록입니다. 카테고리는 &lt;code&gt;_posts&lt;/code&gt; 디렉토리 위의 디렉토리 구조에서 파생됩니다 . 예를 들어 &lt;code&gt;/work/code/_posts/2008-12-24-closures.md&lt;/code&gt; 의 게시물 은이 필드를 &lt;code&gt;['work', 'code']&lt;/code&gt; 합니다. 이것은 또한 &lt;a href=&quot;../front-matter/index&quot;&gt;서문에&lt;/a&gt; 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e4f5bdfcd4df4e1a7077ef5853c19979f9ff4920" translate="yes" xml:space="preserve">
          <source>The list of categories to which this post belongs. Categories are derived from the directory structure above the &lt;code&gt;_posts&lt;/code&gt; directory. For example, a post at &lt;code&gt;/work/code/_posts/2008-12-24-closures.md&lt;/code&gt; would have this field set to &lt;code&gt;['work', 'code']&lt;/code&gt;. These can also be specified in the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;.</source>
          <target state="translated">이 게시물이 속한 카테고리 목록입니다. 카테고리는 &lt;code&gt;_posts&lt;/code&gt; 디렉토리 위의 디렉토리 구조에서 파생됩니다 . 예를 들어 &lt;code&gt;/work/code/_posts/2008-12-24-closures.md&lt;/code&gt; 의 게시물 에는이 필드가 &lt;code&gt;['work', 'code']&lt;/code&gt; 있습니다. 이것들은 &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; 에서도 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4c465fb09eb1d8ac0dab23ef069770ba6a0ecc7b" translate="yes" xml:space="preserve">
          <source>The list of tags to which this post belongs. These can be specified in the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;.</source>
          <target state="translated">이 게시물이 속한 태그 목록입니다. 이것은 &lt;a href=&quot;../front-matter/index&quot;&gt;서문에&lt;/a&gt; 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="adc5aae74460c5b14cd23fd61101e4fb8e785167" translate="yes" xml:space="preserve">
          <source>The list of tags to which this post belongs. These can be specified in the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;.</source>
          <target state="translated">이 게시물이 속한 태그 목록입니다. 이것들은 &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; 에서 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4ce8024977bedd11a6c5a842fd35ca7707b4eb63" translate="yes" xml:space="preserve">
          <source>The more recent &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt; jekyll-paginate-v2&lt;/a&gt; plugin supports more features. See the &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2/tree/master/examples&quot;&gt; pagination examples&lt;/a&gt; in the repository. &lt;strong&gt;This plugin is not supported by GitHub Pages&lt;/strong&gt;.</source>
          <target state="translated">최신 &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt;jekyll-paginate-v2&lt;/a&gt; 플러그인은 더 많은 기능을 지원합니다. 저장소 의 &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2/tree/master/examples&quot;&gt;페이지 매김 예제&lt;/a&gt; 를 참조하십시오 . &lt;strong&gt;이 플러그인은 GitHub Pages에서 지원되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="68a0bf74880922f66f4f16c3a505afcb88896f79" translate="yes" xml:space="preserve">
          <source>The more recent &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt;jekyll-paginate-v2&lt;/a&gt; plugin supports more features. See the &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2/tree/master/examples&quot;&gt;pagination examples&lt;/a&gt; in the repository. &lt;strong&gt;This plugin is not supported by GitHub Pages&lt;/strong&gt;.</source>
          <target state="translated">최신 &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2&quot;&gt;jekyll-paginate-v2&lt;/a&gt; 플러그인은 더 많은 기능을 지원합니다. 저장소 의 &lt;a href=&quot;https://github.com/sverrirs/jekyll-paginate-v2/tree/master/examples&quot;&gt;페이지 매김 예제&lt;/a&gt; 를 참조하십시오 . &lt;strong&gt;이 플러그인은 GitHub 페이지에서 지원되지 않습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="db0b9456f3f33ef7469d41931327971227302f8c" translate="yes" xml:space="preserve">
          <source>The most basic test that can be run is seeing if &lt;code&gt;jekyll build&lt;/code&gt; actually works. This is a blocker, a dependency if you will, for other tests you might run on the generate site. So we&amp;rsquo;ll run Jekyll, via Bundler, in the &lt;code&gt;dependencies&lt;/code&gt; phase.</source>
          <target state="translated">실행할 수있는 가장 기본적인 테스트는 &lt;code&gt;jekyll build&lt;/code&gt; 실제로 작동하는지 확인하는 것입니다. 이것은 생성 사이트에서 실행할 수있는 다른 테스트에 대한 차단기, 종속성입니다. 따라서 &lt;code&gt;dependencies&lt;/code&gt; 단계 에서 Bundler를 통해 Jekyll을 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="ed7f4dd6b02c011a4ed405a56ff2fd9197108944" translate="yes" xml:space="preserve">
          <source>The most basic test that can be run is simply seeing if &lt;code&gt;jekyll build&lt;/code&gt; actually works. This is a blocker, a dependency if you will, for other tests you might run on the generate site. So we&amp;rsquo;ll run Jekyll, via Bundler, in the &lt;code&gt;dependencies&lt;/code&gt; phase.</source>
          <target state="translated">실행할 수있는 가장 기본적인 테스트는 &lt;code&gt;jekyll build&lt;/code&gt; 실제로 작동하는지 확인하는 것입니다. 이것은 생성자 사이트에서 실행할 수있는 다른 테스트의 경우 차단 기능, 즉 의존성입니다. 따라서 &lt;code&gt;dependencies&lt;/code&gt; 단계 에서 Bundler를 통해 Jekyll을 실행 합니다.</target>
        </trans-unit>
        <trans-unit id="b571265a0d4e05dc04f235fc6b1b262f5c011343" translate="yes" xml:space="preserve">
          <source>The name of the document's collection.</source>
          <target state="translated">문서 모음의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="9340a47214628fecb21babe390b9bd99998d17d5" translate="yes" xml:space="preserve">
          <source>The name of the file you want to embed can be specified as a variable instead of an actual file name. For example, suppose you defined a variable in your page&amp;rsquo;s front matter like this:</source>
          <target state="translated">포함시키려는 파일 이름은 실제 파일 이름 대신 변수로 지정할 수 있습니다. 예를 들어, 다음과 같이 페이지의 앞면에 변수를 정의했다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="bee5b4727758530c5035785a048601721f38ff4a" translate="yes" xml:space="preserve">
          <source>The name of the file you want to link can be specified as a variable instead of an actual file name. For example, suppose you defined a variable in your page&amp;rsquo;s front matter like this:</source>
          <target state="translated">링크하려는 파일의 이름은 실제 파일 이름 대신 변수로 지정할 수 있습니다. 예를 들어 다음과 같이 페이지의 머리말에 변수를 정의했다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="3e080fa25d64b3e0504153f78ce57cb3f2864d4c" translate="yes" xml:space="preserve">
          <source>The name of your collection, e.g. &lt;code&gt;my_collection&lt;/code&gt;.</source>
          <target state="translated">컬렉션 이름입니다 (예 : &lt;code&gt;my_collection&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="26fa8a47f18a5a1edb636fe3e1835c1b2c6b35a3" translate="yes" xml:space="preserve">
          <source>The next post relative to the position of the current post in &lt;code&gt;site.posts&lt;/code&gt;. Returns &lt;code&gt;nil&lt;/code&gt; for the last entry.</source>
          <target state="translated">&lt;code&gt;site.posts&lt;/code&gt; 의 현재 게시물 위치와 관련된 다음 게시물 입니다. 마지막 항목에 대해 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="21900e42947b8a2188d47b9d4010bbf898418dee" translate="yes" xml:space="preserve">
          <source>The next thing you need to do is to actually display your posts in a list using the &lt;code&gt;paginator&lt;/code&gt; variable that will now be available to you. You&amp;rsquo;ll probably want to do this in one of the main pages of your site. Here&amp;rsquo;s one example of a simple way of rendering paginated Posts in a HTML file:</source>
          <target state="translated">다음으로해야 할 일은 이제 사용할 수 있는 페이지 &lt;code&gt;paginator&lt;/code&gt; 변수를 사용하여 게시물을 실제로 목록에 표시 하는 것입니다. 아마도 사이트의 메인 페이지 중 하나에서이 작업을 수행하고 싶을 것입니다. 다음은 HTML 파일에서 페이지 매김 게시물을 렌더링하는 간단한 방법의 한 예입니다.</target>
        </trans-unit>
        <trans-unit id="d2c0f63533ca859945d2209a7b7adccdfde0ae94" translate="yes" xml:space="preserve">
          <source>The number of the current page</source>
          <target state="translated">현재 페이지 번호</target>
        </trans-unit>
        <trans-unit id="5b68914dfdf4b44fa4d895c69f68bdc935729d17" translate="yes" xml:space="preserve">
          <source>The number of the current page.</source>
          <target state="translated">현재 페이지의 번호입니다.</target>
        </trans-unit>
        <trans-unit id="a98ce2d82bebf4d945184fa1945d1763c51ebb14" translate="yes" xml:space="preserve">
          <source>The number of the next page, or &lt;code&gt;nil&lt;/code&gt; if no subsequent page exists</source>
          <target state="translated">다음 페이지의 번호 또는 후속 페이지가없는 경우 &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="22c82db2fbfe3347ab67d10c4e1c7501e79e9e2f" translate="yes" xml:space="preserve">
          <source>The number of the next page.</source>
          <target state="translated">다음 페이지의 번호입니다.</target>
        </trans-unit>
        <trans-unit id="79db9760842d73ebbd2841a8d0ba7f03ec68bc9a" translate="yes" xml:space="preserve">
          <source>The number of the previous page, or &lt;code&gt;nil&lt;/code&gt; if no previous page exists</source>
          <target state="translated">이전 페이지 번호 또는 이전 페이지가없는 경우 &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7d3b47de2f7120d16ef9022078884417a394056f" translate="yes" xml:space="preserve">
          <source>The number of the previous page.</source>
          <target state="translated">이전 페이지의 번호입니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
