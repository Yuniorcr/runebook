<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="jekyll">
    <body>
      <group id="jekyll">
        <trans-unit id="48bae7a19b61d98eafde63abe0f6a06b1ca9a228" translate="yes" xml:space="preserve">
          <source>The number should be the maximum number of Posts you&amp;rsquo;d like to be displayed per-page in the generated site.</source>
          <target state="translated">생성 된 사이트에서 페이지 당 표시 할 최대 게시물 수는 숫자 여야합니다.</target>
        </trans-unit>
        <trans-unit id="bf8d248421b4dbe9a5fa644b93ceb9d81fda4b21" translate="yes" xml:space="preserve">
          <source>The order of precedence for conflicting &lt;a href=&quot;../configuration/index&quot;&gt;configuration settings&lt;/a&gt; is as follows:</source>
          <target state="translated">충돌하는 &lt;a href=&quot;../configuration/index&quot;&gt;구성 설정&lt;/a&gt; 의 우선 순위 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="148794a76f00af27ba232ef49e21626171a608dd" translate="yes" xml:space="preserve">
          <source>The organizations can then be accessed via &lt;code&gt;site.data.orgs&lt;/code&gt;, followed by the file name:</source>
          <target state="translated">그런 다음 &lt;code&gt;site.data.orgs&lt;/code&gt; 를 통해 파일 이름으로 조직에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a95bf5d7d76007d714cbccabbc72a9755a4563e6" translate="yes" xml:space="preserve">
          <source>The output will be exactly the same. The difference is you&amp;rsquo;ve made it easier to add new navigation items and change the HTML structure.</source>
          <target state="translated">출력은 정확히 동일합니다. 차이점은 새 탐색 항목을 더 쉽게 추가하고 HTML 구조를 변경한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8ff9c40c8cac4b0d824bc7b9951a2638fb391880" translate="yes" xml:space="preserve">
          <source>The page's base filename</source>
          <target state="translated">페이지의 기본 파일 이름</target>
        </trans-unit>
        <trans-unit id="94cab780571d6c057ea749acd5004de75efe7557" translate="yes" xml:space="preserve">
          <source>The pagination plugin exposes the &lt;code&gt;paginator&lt;/code&gt; liquid object with the following attributes:</source>
          <target state="translated">페이지 매김 플러그인은 노출 &lt;code&gt;paginator&lt;/code&gt; 다음과 같은 속성을 가진 액체 객체를 :</target>
        </trans-unit>
        <trans-unit id="5bca19e890265d42ab56186c13c21caad0db63f9" translate="yes" xml:space="preserve">
          <source>The path between the source directory and the file of the post or page, e.g. &lt;code&gt;/pages/&lt;/code&gt;. This can be overridden by &lt;code&gt;permalink&lt;/code&gt; in the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;.</source>
          <target state="translated">소스 디렉토리와 게시물 또는 페이지 파일 사이의 경로 (예 : &lt;code&gt;/pages/&lt;/code&gt; . 이것은 오버라이드 (override) 할 수 &lt;code&gt;permalink&lt;/code&gt; 에 &lt;a href=&quot;../front-matter/index&quot;&gt;서문&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="49273f33d06c3a327a6f3e06d347c5a798c9173f" translate="yes" xml:space="preserve">
          <source>The path to the collection's source directory, relative to the site source.</source>
          <target state="translated">사이트 소스를 기준으로 한 컬렉션의 소스 디렉토리 경로입니다.</target>
        </trans-unit>
        <trans-unit id="607013a31b5527445f73d56a0042d5c9a723a22c" translate="yes" xml:space="preserve">
          <source>The path to the document's source file relative to the site source.</source>
          <target state="translated">사이트 소스를 기준으로 문서 소스 파일의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="8915011b0da5d47f0a745f7b3373841015d3182b" translate="yes" xml:space="preserve">
          <source>The path to the next page, or &lt;code&gt;nil&lt;/code&gt; if no subsequent page exists</source>
          <target state="translated">다음 페이지의 경로 또는 후속 페이지가없는 경우 &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="aa10254d0dd749ff07df4286637eb753f4c515dc" translate="yes" xml:space="preserve">
          <source>The path to the next page.</source>
          <target state="translated">다음 페이지의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="f3b8c43ed1eb41b60689a541cc4f5f7cfeb27d23" translate="yes" xml:space="preserve">
          <source>The path to the post or page in the built site differs for posts, pages, and collections:</source>
          <target state="translated">빌드 된 사이트의 게시물 또는 페이지 경로는 게시물, 페이지 및 컬렉션에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="d6f100a5aa8766822d8b771278d1c64c2cdee2f6" translate="yes" xml:space="preserve">
          <source>The path to the post, page, or collection is defined as the path relative to the root directory (where your config file is) to the file, not the path from your existing page to the other page.</source>
          <target state="translated">게시물, 페이지 또는 콜렉션의 경로는 기존 페이지에서 다른 페이지로의 경로가 아니라 루트 디렉토리 (구성 파일이있는 위치)와 파일의 상대 경로로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="5f48799ceab77320f68f073f470aae839e8f1157" translate="yes" xml:space="preserve">
          <source>The path to the previous page, or &lt;code&gt;nil&lt;/code&gt; if no previous page exists</source>
          <target state="translated">이전 페이지에 대한 경로 또는 이전 페이지가없는 경우 &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eff647ee25865c384ca1ede1d398e0554ab734c7" translate="yes" xml:space="preserve">
          <source>The path to the previous page.</source>
          <target state="translated">이전 페이지의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="cefc07f84d4d77ce198a887194ef89b1cf4d1a7d" translate="yes" xml:space="preserve">
          <source>The path to the raw post or page. Example usage: Linking back to the page or post&amp;rsquo;s source on GitHub. This can be overridden in the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;.</source>
          <target state="translated">원시 게시물 또는 페이지의 경로입니다. 사용 예 : GitHub의 페이지 또는 게시물 소스로 다시 링크. 이것은에서 오버라이드 (override) 할 수 있습니다 &lt;a href=&quot;../front-matter/index&quot;&gt;전면 문제&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0c9b12566e2f40964253807d83a52db322fbd69c" translate="yes" xml:space="preserve">
          <source>The path to the raw post or page. Example usage: Linking back to the page or post&amp;rsquo;s source on GitHub. This can be overridden in the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;.</source>
          <target state="translated">원시 게시물 또는 페이지의 경로입니다. 사용법 예 : GitHub의 페이지 또는 게시물 소스에 다시 연결합니다. 이것은 &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; 에서 재정의 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6e805d5b1200a3ba381a0b2b49d638b2e14751e6" translate="yes" xml:space="preserve">
          <source>The permalink can also be set using a built-in permalink style:</source>
          <target state="translated">내장 퍼머 링크 스타일을 사용하여 퍼머 링크를 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="72fd18a07464d558a9db6a54eb33979c9945728d" translate="yes" xml:space="preserve">
          <source>The permalink setting in your configuration file specifies the permalink style used for posts, pages, and collections. However, because pages and collections don&amp;rsquo;t have time or categories, these aspects of the permalink style are ignored with pages and collections.</source>
          <target state="translated">구성 파일의 영구 링크 설정은 게시물, 페이지 및 모음에 사용되는 영구 링크 스타일을 지정합니다. 그러나 페이지와 컬렉션에는 시간이나 범주가 없으므로 페이지 및 컬렉션에서는 이러한 퍼머 링크 스타일의 측면이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="bbbc19f68db1886a9c8fc2d75f945c09be7132eb" translate="yes" xml:space="preserve">
          <source>The posts have a reference to the author so let&amp;rsquo;s link it to the author&amp;rsquo;s page. You can do this using a similar filtering technique in &lt;code&gt;_layouts/post.html&lt;/code&gt;:</source>
          <target state="translated">게시물에는 작성자에 대한 참조가 있으므로 작성자의 페이지에 연결하겠습니다. &lt;code&gt;_layouts/post.html&lt;/code&gt; 에서 유사한 필터링 기술을 사용하여이를 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="06e022e21b12759f491ac6ee44198521b1d39366" translate="yes" xml:space="preserve">
          <source>The previous post relative to the position of the current post in &lt;code&gt;site.posts&lt;/code&gt;. Returns &lt;code&gt;nil&lt;/code&gt; for the first entry.</source>
          <target state="translated">&lt;code&gt;site.posts&lt;/code&gt; 의 현재 게시물 위치와 관련된 이전 게시물 입니다. 첫 번째 항목에 대해 &lt;code&gt;nil&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="0fced1493167b02bdd3aa15d8fc6e58bbaf0adf3" translate="yes" xml:space="preserve">
          <source>The proper solution is to incorporate the default setting for &lt;code&gt;exclude:&lt;/code&gt; rather than override it completely:</source>
          <target state="translated">올바른 해결책은 &lt;code&gt;exclude:&lt;/code&gt; 대한 기본 설정을 완전히 대체하지 않고 통합하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="1cbf18bffd374ba272b46771db8fc2d3c757a5be" translate="yes" xml:space="preserve">
          <source>The relative path to the file, e.g. &lt;code&gt;/assets/img/image.jpg&lt;/code&gt;</source>
          <target state="translated">파일의 상대 경로 (예 : &lt;code&gt;/assets/img/image.jpg&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="7dd8f1578fc3a7557a8ee6928df0d34efec33cdb" translate="yes" xml:space="preserve">
          <source>The rendered output of the document, based on the &lt;code&gt;content&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;content&lt;/code&gt; 에 기반한 문서의 렌더링 된 출력입니다 .</target>
        </trans-unit>
        <trans-unit id="a1137ea098d68182aa527abeb651f30e7696b541" translate="yes" xml:space="preserve">
          <source>The rendered output of this page is:</source>
          <target state="translated">이 페이지의 렌더링 된 출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b32b39b3a955ea487adb6195a64209b744d16c1e" translate="yes" xml:space="preserve">
          <source>The rendering phase is further divisible into three optional stages. Every file rendered, passes through one or more of these stages as determined by the file&amp;rsquo;s content string, front matter and extension. The stages are akin to an assembly line, with the &lt;em&gt;output&lt;/em&gt; from a stage being the &lt;em&gt;input&lt;/em&gt; for the succeeding stage:</source>
          <target state="translated">렌더링 단계는 세 가지 선택적 단계로 더 나눌 수 있습니다. 렌더링 된 모든 파일은 파일의 내용 문자열, 머리말 및 확장자에 의해 결정되는 이러한 단계 중 하나 이상을 통과합니다. 단계는 조립 라인과 유사하며 단계의 &lt;em&gt;출력&lt;/em&gt; 이 다음 단계 의 &lt;em&gt;입력이&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="c39819f8d905b292e9192e99d02f7e38ed0bb5ce" translate="yes" xml:space="preserve">
          <source>The result is the original HTML code shown earlier.</source>
          <target state="translated">결과는 이전에 표시된 원래 HTML 코드입니다.</target>
        </trans-unit>
        <trans-unit id="2d2e86e4913f580972837fc6804e77e3337c307b" translate="yes" xml:space="preserve">
          <source>The self-hosted version of Buddy can be installed on any type of server supporting Docker, including &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-linux&quot;&gt;Linux&lt;/a&gt;, &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-mac-osx&quot;&gt;Mac&lt;/a&gt;, &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-amazon-ec2&quot;&gt;AWS EC2&lt;/a&gt;, &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-digitalocean&quot;&gt;DigitalOcean&lt;/a&gt;, and &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-azure&quot;&gt;Microsoft Azure&lt;/a&gt;.</source>
          <target state="translated">자체 호스팅 버전의 Buddy는 &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-linux&quot;&gt;Linux&lt;/a&gt; , &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-mac-osx&quot;&gt;Mac&lt;/a&gt; , &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-amazon-ec2&quot;&gt;AWS EC2&lt;/a&gt; , &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-digitalocean&quot;&gt;DigitalOcean&lt;/a&gt; 및 &lt;a href=&quot;https://buddy.works/knowledge/standalone/installation-azure&quot;&gt;Microsoft Azure를&lt;/a&gt; 포함하여 Docker를 지원하는 모든 유형의 서버에 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f2ed2b88e9c4fd64c7ba4920c0ec45f4bf72e7ac" translate="yes" xml:space="preserve">
          <source>The simplest test script runs &lt;code&gt;jekyll build&lt;/code&gt; and ensures that Jekyll doesn&amp;rsquo;t fail to build the site. It doesn&amp;rsquo;t check the resulting site, but it does ensure things are built properly.</source>
          <target state="translated">가장 간단한 테스트 스크립트는 &lt;code&gt;jekyll build&lt;/code&gt; 실행 하고 Jekyll이 사이트 빌드에 실패하지 않도록합니다. 결과 사이트를 확인하지는 않지만 제대로 구축되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="d9883957b0dd80adf4891d5ff8c9ac82caeae417" translate="yes" xml:space="preserve">
          <source>The simplest test script simply runs &lt;code&gt;jekyll build&lt;/code&gt; and ensures that Jekyll doesn&amp;rsquo;t fail to build the site. It doesn&amp;rsquo;t check the resulting site, but it does ensure things are built properly.</source>
          <target state="translated">가장 간단한 테스트 스크립트는 단순히 &lt;code&gt;jekyll build&lt;/code&gt; 를 실행 하고 Jekyll이 사이트를 구축하지 못하도록합니다. 결과 사이트를 확인하지는 않지만 제대로 빌드되었는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1fbbb80622e1f4877a44ac9836e3626289972f67" translate="yes" xml:space="preserve">
          <source>The simplest way of adding a page is just to add an HTML file in the root directory with a suitable name for the page you want to create. For a site with a homepage, an about page, and a contact page, here&amp;rsquo;s what the root directory and associated URLs might look like:</source>
          <target state="translated">페이지를 추가하는 가장 간단한 방법은 만들려는 페이지에 적합한 이름으로 루트 디렉토리에 HTML 파일을 추가하는 것입니다. 홈페이지, 정보 페이지 및 연락처 페이지가있는 사이트의 경우 루트 디렉토리 및 관련 URL은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d898295377cdd6071ab43a1fd3c8649e89d1eaf4" translate="yes" xml:space="preserve">
          <source>The simplest way of adding a page is to add an HTML file in the root directory with a suitable filename. You can also write a page in Markdown using a &lt;code&gt;.md&lt;/code&gt; extension which converts to HTML on build. For a site with a homepage, an about page, and a contact page, here&amp;rsquo;s what the root directory and associated URLs might look like:</source>
          <target state="translated">페이지를 추가하는 가장 간단한 방법은 적절한 파일 이름으로 루트 디렉토리에 HTML 파일을 추가하는 것입니다. 빌드시 HTML로 변환 되는 &lt;code&gt;.md&lt;/code&gt; 확장자를 사용하여 Markdown에서 페이지 를 작성할 수도 있습니다. 홈페이지, 정보 페이지 및 연락처 페이지가있는 사이트의 경우 루트 디렉토리 및 관련 URL은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2001b6492aae4a1a5ec908a999c2789950bd1bf8" translate="yes" xml:space="preserve">
          <source>The simplest way to set a permalink is using front matter. You set the &lt;code&gt;permalink&lt;/code&gt; variable in front matter to the output path you&amp;rsquo;d like.</source>
          <target state="translated">퍼머 링크를 설정하는 가장 간단한 방법은 머리말을 사용하는 것입니다. 원하는 출력 경로에 &lt;code&gt;permalink&lt;/code&gt; 의 퍼머 링크 변수를 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="a6e7785b43b18111e9825f3f6d5716d79d00a506" translate="yes" xml:space="preserve">
          <source>The site is coming together; however, there&amp;rsquo;s no way to navigate between pages. Let&amp;rsquo;s fix that.</source>
          <target state="translated">사이트가 함께오고 있습니다. 그러나 페이지 사이를 이동할 수있는 방법은 없습니다. 수정하겠습니다.</target>
        </trans-unit>
        <trans-unit id="1455b57d88f779ab92ece7f081adcac3c8d1ab21" translate="yes" xml:space="preserve">
          <source>The specified categories for this post but &lt;em&gt;slugified&lt;/em&gt;. If a category is a composite of multiple words, Jekyll will downcase all alphabets and replace any non-alphanumeric character with a hyphen. (e.g. &lt;code&gt;&quot;Work 2 Progress&quot;&lt;/code&gt; will be converted into &lt;code&gt;&quot;work-2-progress&quot;&lt;/code&gt;)</source>
          <target state="translated">이 게시물에 대해 지정된 카테고리는 &lt;em&gt;slugified&lt;/em&gt; . 카테고리가 여러 단어의 합성물 인 경우 Jekyll은 모든 알파벳을 다운 케이스하고 영숫자가 아닌 문자를 하이픈으로 바꿉니다. (예 : &lt;code&gt;&quot;Work 2 Progress&quot;&lt;/code&gt; 는 &lt;code&gt;&quot;work-2-progress&quot;&lt;/code&gt; 로 변환됩니다. )</target>
        </trans-unit>
        <trans-unit id="324e1b599b8f0120ed81a1f72f0909e598305f01" translate="yes" xml:space="preserve">
          <source>The specified categories for this post. If a post has multiple categories, Jekyll will create a hierarchy (e.g. &lt;code&gt;/category1/category2&lt;/code&gt;). Also Jekyll automatically parses out double slashes in the URLs, so if no categories are present, it will ignore this.</source>
          <target state="translated">이 게시물에 지정된 카테고리입니다. 게시물에 여러 카테고리가있는 경우 Jekyll은 계층을 만듭니다 (예 : &lt;code&gt;/category1/category2&lt;/code&gt; ). 또한 Jekyll은 URL에서 이중 슬래시를 자동으로 구문 분석하므로 카테고리가 없으면이를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="e0151fba4434afed464fcc55ea7cebab8ceedfc4" translate="yes" xml:space="preserve">
          <source>The string basename of the file e.g. &lt;code&gt;image&lt;/code&gt; for &lt;code&gt;image.jpg&lt;/code&gt;</source>
          <target state="translated">파일 등의 문자열 기본 이름 &lt;code&gt;image&lt;/code&gt; 에 대한 &lt;code&gt;image.jpg&lt;/code&gt; 를</target>
        </trans-unit>
        <trans-unit id="699f53647460fa97038c37525c58773da0663c10" translate="yes" xml:space="preserve">
          <source>The string name of the file e.g. &lt;code&gt;image.jpg&lt;/code&gt; for &lt;code&gt;image.jpg&lt;/code&gt;</source>
          <target state="translated">파일의 문자열 이름입니다 (예 : &lt;code&gt;image.jpg&lt;/code&gt; 의 경우 &lt;code&gt;image.jpg&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="bc214d90dd9fb7f65459623b45712619a1c3d727" translate="yes" xml:space="preserve">
          <source>The string you pass to your include parameter can&amp;rsquo;t contain curly braces. For example, you can&amp;rsquo;t pass a parameter that contains this: &lt;code&gt;&quot;The latest version of {{ site.product_name }} is now available.&quot;&lt;/code&gt;</source>
          <target state="translated">include 매개 변수에 전달하는 문자열은 중괄호를 포함 할 수 없습니다. 예를 들어 &lt;code&gt;&quot;The latest version of {{ site.product_name }} is now available.&quot;&lt;/code&gt; 라는 매개 변수를 전달할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="5f77a55d669391afd75dd2dbca2f36448b4adac6" translate="yes" xml:space="preserve">
          <source>The subfolders into which you may have organized your posts inside the &lt;code&gt;_posts&lt;/code&gt; directory will not be part of the permalink.</source>
          <target state="translated">&lt;code&gt;_posts&lt;/code&gt; 디렉토리 내에서 게시물을 구성한 하위 폴더 는 영구 링크의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="2fd5aac3a844b91426edaabba312de231951c1c8" translate="yes" xml:space="preserve">
          <source>The table below lists the available settings for Jekyll, and the various &lt;code&gt;options&lt;/code&gt; (specified in the configuration file) and &lt;code&gt;flags&lt;/code&gt; (specified on the command-line) that control them.</source>
          <target state="translated">아래 표에는 Jekyll에 사용 가능한 설정과이를 구성하는 다양한 &lt;code&gt;options&lt;/code&gt; (구성 파일에 지정 ) 및 &lt;code&gt;flags&lt;/code&gt; (명령 줄에 지정)가 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="091475a77511c1b24393dbbef549277db83e7724" translate="yes" xml:space="preserve">
          <source>The tables below list the available settings for Jekyll, and the various &lt;code&gt;options&lt;/code&gt; (specified in the configuration file) and &lt;code&gt;flags&lt;/code&gt; (specified on the command-line) that control them.</source>
          <target state="translated">아래 표에는 Jekyll에 대해 사용 가능한 설정과이를 제어하는 ​​다양한 &lt;code&gt;options&lt;/code&gt; (구성 파일에 지정됨 ) 및 &lt;code&gt;flags&lt;/code&gt; (명령 줄에 지정됨)가 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="44d31f9d60300458255922f30deb841b5afe6f6b" translate="yes" xml:space="preserve">
          <source>The theme-config should be a set of key-value pairs. An empty config file, a config file that simply &lt;em&gt;lists items&lt;/em&gt; under a key, or a config file with just a simple string of text will simply be ignored silently. Users will not get a warning or any log output regarding this discrepancy.</source>
          <target state="translated">테마 구성은 키-값 쌍의 집합이어야합니다. 빈 구성 파일, 단순히 키 아래 &lt;em&gt;항목&lt;/em&gt; 을 &lt;em&gt;나열&lt;/em&gt; 하는 구성 파일 또는 단순한 텍스트 문자열 만있는 구성 파일은 자동으로 무시됩니다. 사용자는이 불일치에 대한 경고 또는 로그 출력을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="82dc947740014491d8f2712bd18c65fb197bbd5f" translate="yes" xml:space="preserve">
          <source>The theme-config-file cannot be a symlink, irrespective of &lt;code&gt;safe mode&lt;/code&gt; and whether the file pointed to by the symlink is a legitimate file within the theme-gem.</source>
          <target state="translated">theme-config-file은 &lt;code&gt;safe mode&lt;/code&gt; 및 symlink가 가리키는 파일이 theme-gem 내에서 합법적 인 파일인지 여부에 관계없이 symlink가 될 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="3675e302c52313cb9b357ab0e961e492e32b1f98" translate="yes" xml:space="preserve">
          <source>The title of the Page.</source>
          <target state="translated">페이지의 제목입니다.</target>
        </trans-unit>
        <trans-unit id="f4d87b6139767c562d85e3957db0e08b5090d0ac" translate="yes" xml:space="preserve">
          <source>The un-rendered excerpt of a document.</source>
          <target state="translated">문서의 렌더링되지 않은 발췌.</target>
        </trans-unit>
        <trans-unit id="c5a47aa2fa70ddabb2590374bd65c420d8f11fd8" translate="yes" xml:space="preserve">
          <source>The un-rendered excerpt of the Page.</source>
          <target state="translated">렌더링되지 않은 페이지 발췌.</target>
        </trans-unit>
        <trans-unit id="729a789c71cb14e8080187dff3b7cfaa59630c3e" translate="yes" xml:space="preserve">
          <source>The value of &lt;code&gt;content&lt;/code&gt; (which is &lt;code&gt;This is my sample note&lt;/code&gt;) will be inserted into the &lt;code&gt;{{ include.content }}&lt;/code&gt; parameter.</source>
          <target state="translated">&lt;code&gt;content&lt;/code&gt; 값 ( &lt;code&gt;This is my sample note&lt;/code&gt; )이 &lt;code&gt;{{ include.content }}&lt;/code&gt; 매개 변수에 삽입됩니다 .</target>
        </trans-unit>
        <trans-unit id="97140f29686cd51710ca80b53eae9e471b7a772f" translate="yes" xml:space="preserve">
          <source>The various Markdown renderers supported by Jekyll sometimes have extra options available.</source>
          <target state="translated">Jekyll이 지원하는 다양한 Markdown 렌더러에는 때때로 추가 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6f89c7ee8f76c5f0f5511e960cccde79189ec2f" translate="yes" xml:space="preserve">
          <source>The various markup engines that Jekyll uses may have some issues. This page will document them to help others who may run into the same problems.</source>
          <target state="translated">Jekyll이 사용하는 다양한 마크 업 엔진에 문제가있을 수 있습니다. 이 페이지는 같은 문제가 발생할 수있는 다른 사람들을 돕기 위해 문서화 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="2f3834334e4679d89fa0b4fa3f690206df9903cd" translate="yes" xml:space="preserve">
          <source>Theme layouts and includes work just like they work in any Jekyll site. Place layouts in your theme&amp;rsquo;s &lt;code&gt;/_layouts&lt;/code&gt; folder, and place includes in your themes &lt;code&gt;/_includes&lt;/code&gt; folder.</source>
          <target state="translated">테마 레이아웃 및 포함은 모든 Jekyll 사이트에서 작동하는 것처럼 작동합니다. 테마의 &lt;code&gt;/_layouts&lt;/code&gt; 폴더에 레이아웃을 배치하고 테마 &lt;code&gt;/_includes&lt;/code&gt; 폴더에 포함을 배치하십시오 .</target>
        </trans-unit>
        <trans-unit id="9ed34bbdefb2c4a84dd37bde98313dff6c3c687b" translate="yes" xml:space="preserve">
          <source>Theme-gem dependencies3.5.0</source>
          <target state="translated">테마-젬 의존성</target>
        </trans-unit>
        <trans-unit id="94d5186ba3ec63d1ebcb1e902a2d13ac15f0c527" translate="yes" xml:space="preserve">
          <source>Themes</source>
          <target state="translated">Themes</target>
        </trans-unit>
        <trans-unit id="821a6060b9a347883efc03d96a667931412cf635" translate="yes" xml:space="preserve">
          <source>Themes are published via &lt;a href=&quot;https://rubygems.org&quot;&gt;RubyGems.org&lt;/a&gt;. You will need a RubyGems account, which you can &lt;a href=&quot;https://rubygems.org/sign_up&quot;&gt;create for free&lt;/a&gt;.</source>
          <target state="translated">테마는 &lt;a href=&quot;https://rubygems.org&quot;&gt;RubyGems.org&lt;/a&gt; 를 통해 공개됩니다 . &lt;a href=&quot;https://rubygems.org/sign_up&quot;&gt;무료로 만들&lt;/a&gt; 수있는 RubyGems 계정이 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="32791d9c965069db5c67476fa80d508abb53e543" translate="yes" xml:space="preserve">
          <source>Themes are visual. Show users what your theme looks like by including a screenshot as &lt;code&gt;/screenshot.png&lt;/code&gt; within your theme&amp;rsquo;s repository where it can be retrieved programatically. You can also include this screenshot within your theme&amp;rsquo;s documentation.</source>
          <target state="translated">테마는 시각적입니다. 테마의 저장소에 스크린 샷을 &lt;code&gt;/screenshot.png&lt;/code&gt; 로 포함하여 프로그래밍 방식으로 검색 할 수있는 테마를 사용자에게 보여줍니다 . 테마의 문서 내에이 스크린 샷을 포함 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="095fbfd516884c54a3c1b3fe114ac68918aa5b95" translate="yes" xml:space="preserve">
          <source>Themes are visual. Show users what your theme looks like by including a screenshot as &lt;code&gt;/screenshot.png&lt;/code&gt; within your theme&amp;rsquo;s repository where it can be retrieved programmatically. You can also include this screenshot within your theme&amp;rsquo;s documentation.</source>
          <target state="translated">테마는 시각적입니다. 프로그래밍 방식으로 검색 할 수있는 테마 저장소 내에 스크린 샷을 &lt;code&gt;/screenshot.png&lt;/code&gt; 로 포함하여 사용자에게 테마가 어떻게 보이는지 보여 줍니다. 테마 문서에이 스크린 샷을 포함 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="20b2f8070c295ff70fe091d9d3d93662adcdd260" translate="yes" xml:space="preserve">
          <source>Then Jekyll will look in &lt;code&gt;my_collections/_books&lt;/code&gt; for the &lt;code&gt;books&lt;/code&gt; collection, and in &lt;code&gt;my_collections/_recipes&lt;/code&gt; for the &lt;code&gt;recipes&lt;/code&gt; collection.</source>
          <target state="translated">그런 다음 Jekyll은 &lt;code&gt;my_collections/_books&lt;/code&gt; 에서 &lt;code&gt;books&lt;/code&gt; 컬렉션을 &lt;code&gt;my_collections/_recipes&lt;/code&gt; 에서 &lt;code&gt;recipes&lt;/code&gt; 컬렉션을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="64531d3a5b8c925b3e3841e4651bf1b4724da351" translate="yes" xml:space="preserve">
          <source>Then add these lines to your &lt;code&gt;_config.yml&lt;/code&gt;:</source>
          <target state="translated">그런 다음 &lt;code&gt;_config.yml&lt;/code&gt; 에 다음 행을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="34856595291510a198d8a2c598244e72a27aefa9" translate="yes" xml:space="preserve">
          <source>Then install your plugins using &lt;code&gt;gem install jekyll-gist jekyll-coffeescript jekyll-assets another-jekyll-plugin&lt;/code&gt;</source>
          <target state="translated">그런 다음 &lt;code&gt;gem install jekyll-gist jekyll-coffeescript jekyll-assets another-jekyll-plugin&lt;/code&gt; plugins를 사용하여 플러그인을 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="8faa11a55493c64b083f4ac4d2adcefdd749dedb" translate="yes" xml:space="preserve">
          <source>Then pass this captured variable into the parameter for the include. Omit the quotation marks around the parameter content because it&amp;rsquo;s no longer a string (it&amp;rsquo;s a variable):</source>
          <target state="translated">그런 다음이 캡처 된 변수를 include의 매개 변수로 전달하십시오. 더 이상 문자열이 아니므로 매개 변수 내용 주위에 따옴표를 생략하십시오 (변수).</target>
        </trans-unit>
        <trans-unit id="83ab59dbbc4c358554d385d4c5f259e467943dc9" translate="yes" xml:space="preserve">
          <source>Then remove references to the theme gem in &lt;code&gt;Gemfile&lt;/code&gt; and configuration. For example, to remove &lt;code&gt;minima&lt;/code&gt;:</source>
          <target state="translated">그런 다음 &lt;code&gt;Gemfile&lt;/code&gt; 및 구성 에서 테마 gem에 대한 참조를 제거하십시오 . 예를 들어, &lt;code&gt;minima&lt;/code&gt; 를 제거하려면 다음을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="2e55adac0c3eae2f937308198cb0a0a4bc54e03e" translate="yes" xml:space="preserve">
          <source>Then the following two commands will be equivalent:</source>
          <target state="translated">그러면 다음 두 명령이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="1799092c04e909afeb0c36aa003fcded0b82b0c7" translate="yes" xml:space="preserve">
          <source>Then you must tell Jekyll about the plugins that were referenced by the theme. You can find these plugins in the theme&amp;rsquo;s gemspec file as runtime dependencies. If you were converting the Minima theme, for example, you might see:</source>
          <target state="translated">그런 다음 테마에서 참조한 플러그인에 대해 Jekyll에게 알려야합니다. 테마의 gemspec 파일에서 런타임 종속성으로 이러한 플러그인을 찾을 수 있습니다. 예를 들어 Minima 테마를 변환하는 경우 다음이 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb7f7ed349776ee3c7ecdc40273774ac123cda7d" translate="yes" xml:space="preserve">
          <source>There are a bunch of helpful community members on these services who are willing to point you in the right direction.</source>
          <target state="translated">이러한 서비스에 도움이되는 커뮤니티 회원이 많이 있으며 올바른 방향으로 안내해 줄 것입니다.</target>
        </trans-unit>
        <trans-unit id="67ebdd5e11845dd2cbeb2c91125a984928a1dd78" translate="yes" xml:space="preserve">
          <source>There are a number of (optional) extra features that Jekyll supports that you may want to install, depending on how you plan to use Jekyll.</source>
          <target state="translated">Jekyll 사용 방법에 따라 Jekyll에서 지원하고자하는 여러 가지 추가 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="04ed6a97634dca4b4a7120307ae4efda768d1a9a" translate="yes" xml:space="preserve">
          <source>There are a number of (optional) extra features that Jekyll supports that you may want to install, depending on how you plan to use Jekyll. These extras include LaTeX support, and the use of alternative content rendering engines. Check out &lt;a href=&quot;../extras/index&quot;&gt;the extras page&lt;/a&gt; for more information.</source>
          <target state="translated">Jekyll 사용 방법에 따라 Jekyll이 설치하고자하는 여러 가지 추가 기능 (선택 사항)이 있습니다. 이러한 추가 기능에는 LaTeX 지원 및 대체 컨텐츠 렌더링 엔진 사용이 포함됩니다. 체크 아웃 &lt;a href=&quot;../extras/index&quot;&gt;엑스트라 페이지&lt;/a&gt; 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="2d83750a8377a08f11e6459875dcd2f2a9f46fc6" translate="yes" xml:space="preserve">
          <source>There are a number of predefined global variables that you can set in the front matter of a page or post.</source>
          <target state="translated">페이지 나 게시물의 앞면에서 설정할 수있는 사전 정의 된 전역 변수가 많이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd66353b8ef7b3bfa83b7ab54b508daca1842a78" translate="yes" xml:space="preserve">
          <source>There are a number of ways to easily automate the deployment of a Jekyll site.</source>
          <target state="translated">Jekyll 사이트의 배포를 쉽게 자동화하는 방법에는 여러 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ef55e3a67be87ca194f56e2deb8311f04a467cb" translate="yes" xml:space="preserve">
          <source>There are a number of ways to include digital assets in Jekyll. One common solution is to create a folder in the root of the project directory called something like &lt;code&gt;assets&lt;/code&gt;, into which any images, files or other resources are placed. Then, from within any post, they can be linked to using the site&amp;rsquo;s root as the path for the asset to include. Again, this will depend on the way your site&amp;rsquo;s (sub)domain and path are configured, but here are some examples in Markdown of how you could do this using the &lt;code&gt;absolute_url&lt;/code&gt; filter in a post.</source>
          <target state="translated">Jekyll에 디지털 자산을 포함시키는 방법에는 여러 가지가 있습니다. 일반적인 해결책 중 하나는 이미지와 파일 또는 기타 리소스가 저장되는 &lt;code&gt;assets&lt;/code&gt; 과 같은 프로젝트 디렉토리의 루트에 폴더를 만드는 것 입니다. 그런 다음 모든 게시물에서 사이트 루트를 자산의 경로로 사용하여 연결할 수 있습니다. 다시 말하지만 이는 사이트의 하위 도메인 및 경로가 구성되는 방식에 따라 달라 지지만 다음은 게시물에서 &lt;code&gt;absolute_url&lt;/code&gt; 필터를 사용하여이를 수행 할 수있는 방법에 대한 Markdown의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="f96f14c1d552259b2148b69aba308f1370efc4e7" translate="yes" xml:space="preserve">
          <source>There are also a number of ways to easily automate the deployment of a Jekyll site. If you&amp;rsquo;ve got another method that isn&amp;rsquo;t listed below, we&amp;rsquo;d love it if you &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;contributed&lt;/a&gt; so that everyone else can benefit too.</source>
          <target state="translated">Jekyll 사이트의 배포를 쉽게 자동화 할 수있는 여러 가지 방법이 있습니다. 아래에 나열되지 않은 다른 방법이 있다면 다른 사람도 혜택을 볼 수 있도록 &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;기여한&lt;/a&gt; 경우이 방법을 선호 합니다.</target>
        </trans-unit>
        <trans-unit id="0206e4aa57ed0061bee1b20a5eedc8df765286fc" translate="yes" xml:space="preserve">
          <source>There are special &lt;a href=&quot;../permalinks/index#collections&quot;&gt;permalink variables for collections&lt;/a&gt; to help you control the output url for the entire collection.</source>
          <target state="translated">전체 컬렉션에 대한 출력 URL을 제어하는 ​​데 도움이 &lt;a href=&quot;../permalinks/index#collections&quot;&gt;되는 컬렉션&lt;/a&gt; 에 대한 특별한 영구 링크 변수가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9247df2569fe29c6a5a671797604acef1f9aa2c" translate="yes" xml:space="preserve">
          <source>There are three official plugins which are useful on almost any Jekyll site:</source>
          <target state="translated">거의 모든 Jekyll 사이트에서 유용한 세 가지 공식 플러그인이 있습니다.</target>
        </trans-unit>
        <trans-unit id="146807e417714e9e2073254c117e92509edd27c2" translate="yes" xml:space="preserve">
          <source>There are two flags to be aware of when writing a plugin:</source>
          <target state="translated">플러그인을 작성할 때주의해야 할 두 가지 플래그가 있습니다.</target>
        </trans-unit>
        <trans-unit id="3dd124f51fc044867754a3dd18bd8fb0218cfd7f" translate="yes" xml:space="preserve">
          <source>There are two unsupported kramdown options</source>
          <target state="translated">지원되지 않는 두 가지 옵션이 있습니다</target>
        </trans-unit>
        <trans-unit id="6aa5efdfcf697a85234731e948e4796ed1c28bf9" translate="yes" xml:space="preserve">
          <source>There is a second argument to &lt;code&gt;highlight&lt;/code&gt; called &lt;code&gt;linenos&lt;/code&gt; that is optional. Including the &lt;code&gt;linenos&lt;/code&gt; argument will force the highlighted code to include line numbers. For instance, the following code block would include line numbers next to each line:</source>
          <target state="translated">할 수있는 두 번째 인수가 &lt;code&gt;highlight&lt;/code&gt; 이라고 &lt;code&gt;linenos&lt;/code&gt; 을 선택 사항입니다 그. 포함 &lt;code&gt;linenos&lt;/code&gt; 에 인수하는 줄 번호를 포함하도록 강조 코드를 강제로. 예를 들어 다음 코드 블록에는 각 줄 옆에 줄 번호가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9379cacfdf8f450069f9019dcf0df2b24352760a" translate="yes" xml:space="preserve">
          <source>There is no need to include the file extension when using the &lt;code&gt;post_url&lt;/code&gt; tag.</source>
          <target state="translated">&lt;code&gt;post_url&lt;/code&gt; 태그를 사용할 때 파일 확장자를 포함시킬 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="8f6a98b30af7a847fbd76fcc867528eea009b854" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s a few things to note with this code:</source>
          <target state="translated">이 코드에서 몇 가지 유의할 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="67735f08bcc262360e3e4374c07b166dce719d7a" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s currently no way to navigate to the blog post. Typically a blog has a page which lists all the posts, let&amp;rsquo;s do that next.</source>
          <target state="translated">현재 블로그 게시물로 이동할 수있는 방법이 없습니다. 일반적으로 블로그에는 모든 게시물을 나열하는 페이지가 있습니다. 다음으로하겠습니다.</target>
        </trans-unit>
        <trans-unit id="fd1e3fa348d533f9965583a8651895dc21822ed3" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s still a lot of repetition here if you wanted to add a new item to the navigation or change the highlight color. In the next step we&amp;rsquo;ll address this.</source>
          <target state="translated">탐색에 새 항목을 추가하거나 강조 색상을 변경하려는 경우 여기에 여전히 많은 반복이 있습니다. 다음 단계에서이 문제를 해결하겠습니다.</target>
        </trans-unit>
        <trans-unit id="e2cd616981ef7181cd65c1bb36056900669ca298" translate="yes" xml:space="preserve">
          <source>Therefore, depending on whether front matter has &lt;code&gt;category: classic hollywood&lt;/code&gt;, or &lt;code&gt;categories: classic hollywood&lt;/code&gt;, the example post above would have the URL as either &lt;code&gt;movies/horror/classic%20hollywood/2019/05/21/bride-of-chucky.html&lt;/code&gt; or &lt;code&gt;movies/horror/classic/hollywood/2019/05/21/bride-of-chucky.html&lt;/code&gt; respectively.</source>
          <target state="translated">따라서, 여부 서문에 따라서는이 &lt;code&gt;category: classic hollywood&lt;/code&gt; 또는 &lt;code&gt;categories: classic hollywood&lt;/code&gt; , 위의 예 포스트 중 하나로서 URL 것 &lt;code&gt;movies/horror/classic%20hollywood/2019/05/21/bride-of-chucky.html&lt;/code&gt; 또는 &lt;code&gt;movies/horror/classic/hollywood/2019/05/21/bride-of-chucky.html&lt;/code&gt; 각각.</target>
        </trans-unit>
        <trans-unit id="e77e75a2453e2de1dc28cb3b4fda516d45c8fbef" translate="yes" xml:space="preserve">
          <source>These are &lt;strong&gt;NON-DESTRUCTIVE&lt;/strong&gt;, i.e. they do not mutate the array, but rather make a copy and mutate that.</source>
          <target state="translated">이것들은 &lt;strong&gt;NON-DESTRUCTIVE입니다&lt;/strong&gt; . 즉, 배열을 변경하지 않고 오히려 복사하여 변경합니다.</target>
        </trans-unit>
        <trans-unit id="2ea790e2e9702ab3b6431f805333ccc711575895" translate="yes" xml:space="preserve">
          <source>These are available out-of-the-box to be used in the front matter for a post.</source>
          <target state="translated">이들은 우편물에 사용되는 즉시 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af98bdb42f53272e0eb36ca929385721e1f8e5f6" translate="yes" xml:space="preserve">
          <source>These are for the extra tidbits sometimes necessary to understand Jekyll.</source>
          <target state="translated">지킬을 이해하기 위해 때때로 필요한 추가적 여유가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9d68c96571c28e82973cca568caf7d88748aaeb" translate="yes" xml:space="preserve">
          <source>These are just a few of the available &lt;a href=&quot;../configuration/index&quot;&gt;configuration options&lt;/a&gt;. Many configuration options can either be specified as flags on the command line, or alternatively (and more commonly) they can be specified in a &lt;code&gt;_config.yml&lt;/code&gt; file at the root of the source directory. Jekyll will automatically use the options from this file when run. For example, if you place the following lines in your &lt;code&gt;_config.yml&lt;/code&gt; file:</source>
          <target state="translated">사용 가능한 &lt;a href=&quot;../configuration/index&quot;&gt;구성 옵션&lt;/a&gt; 중 일부에 불과합니다 . 많은 구성 옵션은 명령 행에서 플래그로 지정되거나 소스 디렉토리의 루트 에있는 &lt;code&gt;_config.yml&lt;/code&gt; 파일에 지정 될 수 있습니다 . Jekyll은 실행될 때이 파일의 옵션을 자동으로 사용합니다. 예를 들어, &lt;code&gt;_config.yml&lt;/code&gt; 파일 에 다음 줄을 배치 한 경우 :</target>
        </trans-unit>
        <trans-unit id="66ef52c471b3cc42c25a66bece432ed476efb47c" translate="yes" xml:space="preserve">
          <source>These are only available in index files, however they can be located in a subdirectory, such as &lt;code&gt;/blog/index.html&lt;/code&gt;.</source>
          <target state="translated">색인 파일에서만 사용할 수 있지만 &lt;code&gt;/blog/index.html&lt;/code&gt; 과 같은 하위 디렉토리에있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c4dc3f11c1ac89c2cada54f9c5c293beb6d5ec58" translate="yes" xml:space="preserve">
          <source>These are passed to Sass, so any output style options Sass supports are valid here, too.</source>
          <target state="translated">이들은 Sass로 전달되므로 Sass가 지원하는 모든 출력 스타일 옵션도 여기에서 유효합니다.</target>
        </trans-unit>
        <trans-unit id="1c4993e67432c1ed975d24912e79d8ad34531a1c" translate="yes" xml:space="preserve">
          <source>These are sass partials that can be imported into your &lt;code&gt;main.scss&lt;/code&gt; which will then be processed into a single stylesheet &lt;code&gt;main.css&lt;/code&gt; that defines the styles to be used by your site.</source>
          <target state="translated">이들은 &lt;code&gt;main.scss&lt;/code&gt; 로 가져올 수있는 sass 부분 으로, 사이트에서 사용할 스타일을 정의 하는 단일 스타일 시트 &lt;code&gt;main.css&lt;/code&gt; 로 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="189919450715aa9aeb6cf8263f97aff74403b66f" translate="yes" xml:space="preserve">
          <source>These are sass partials that can be imported into your &lt;code&gt;main.scss&lt;/code&gt; which will then be processed into a single stylesheet &lt;code&gt;main.css&lt;/code&gt; that defines the styles to be used by your site. Learn &lt;a href=&quot;../assets/index&quot;&gt;how to work with assets&lt;/a&gt;.</source>
          <target state="new"/>
        </trans-unit>
        <trans-unit id="c201f0804f61a6b376f77b155aa8bdad3c82fd6e" translate="yes" xml:space="preserve">
          <source>These are the partials that can be mixed and matched by your layouts and posts to facilitate reuse. The liquid tag &lt;code&gt;{% include file.ext %}&lt;/code&gt; can be used to include the partial in &lt;code&gt;_includes/file.ext&lt;/code&gt;.</source>
          <target state="translated">이들은 재사용을 용이하게하기 위해 레이아웃과 게시물에 의해 혼합되고 일치 될 수있는 부분입니다. 액체 태그 &lt;code&gt;{% include file.ext %}&lt;/code&gt; 를 사용하여 부분을 &lt;code&gt;_includes/file.ext&lt;/code&gt; 에 포함시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8889be8a1c272c5cd2c2d0bc6c4076a4b0e3605a" translate="yes" xml:space="preserve">
          <source>These are the templates that wrap posts. Layouts are chosen on a post-by-post basis in the &lt;a href=&quot;../front-matter/index&quot;&gt;front matter&lt;/a&gt;, which is described in the next section. The liquid tag &lt;code&gt;{{ content }}&lt;/code&gt; is used to inject content into the web page.</source>
          <target state="translated">포스트를 감싸는 템플릿입니다. 레이아웃은 다음 섹션에서 설명 하는 &lt;a href=&quot;../front-matter/index&quot;&gt;서문&lt;/a&gt; 에서 포스트별로 선택됩니다 . Liquid 태그 &lt;code&gt;{{ content }}&lt;/code&gt; 는 웹 페이지에 콘텐츠를 삽입하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e48a8b33d8674a1ca9fdf62738e07642244717a3" translate="yes" xml:space="preserve">
          <source>These are the templates that wrap posts. Layouts are chosen on a post-by-post basis in the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;, which is described in the next section. The liquid tag &lt;code&gt;{{ content }}&lt;/code&gt; is used to inject content into the web page.</source>
          <target state="translated">게시물을 감싸는 템플릿입니다. 레이아웃은 다음 섹션에서 설명 하는 &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; 에서 포스트별로 선택됩니다 . 액체 태그 &lt;code&gt;{{ content }}&lt;/code&gt; 는 웹 페이지에 컨텐츠를 주입하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="61f960e26e297f0b81e67da8900036fc424775ed" translate="yes" xml:space="preserve">
          <source>These are tips and tricks that will help you be a Jekyll wizard!</source>
          <target state="translated">다음은 Jekyll 마법사가되는 데 도움이되는 팁과 요령입니다!</target>
        </trans-unit>
        <trans-unit id="0a9da44a678759f875f784435732218782b2bf0c" translate="yes" xml:space="preserve">
          <source>These basics should be enough to get you started writing your first posts. When you&amp;rsquo;re ready to dig into what else is possible, you might be interested in doing things like &lt;a href=&quot;../permalinks/index&quot;&gt;customizing post permalinks&lt;/a&gt; or using &lt;a href=&quot;../variables/index&quot;&gt;custom variables&lt;/a&gt; in your posts and elsewhere on your site.</source>
          <target state="translated">이러한 기본 사항은 첫 번째 게시물 작성을 시작하기에 충분해야합니다. 다른 가능성에 대해 알아볼 준비가되면 &lt;a href=&quot;../permalinks/index&quot;&gt;게시물 퍼머 링크 &lt;/a&gt;&lt;a href=&quot;../variables/index&quot;&gt;사용자 정의&lt;/a&gt; 또는 게시물 및 사이트의 다른 곳에서 사용자 정의 변수 사용 과 같은 작업에 관심이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="02adccd4df257d424bcffc068be4723b83eac4c0" translate="yes" xml:space="preserve">
          <source>These services run a script when there&amp;rsquo;s a commit on your Git repository. You might want this script to build the site, run tests over the output then deploy it to the service of your choice.</source>
          <target state="translated">이러한 서비스는 Git 저장소에 커밋이있을 때 스크립트를 실행합니다. 이 스크립트가 사이트를 빌드하고 출력에 대해 테스트를 실행 한 다음 선택한 서비스에 배포하기를 원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5caf4c814aa0cd64d1a7a0717992fc9a8c3d4bea" translate="yes" xml:space="preserve">
          <source>They can be defined via the front matter using keys &lt;code&gt;category&lt;/code&gt; or &lt;code&gt;categories&lt;/code&gt; (that follow the same logic as for tags)</source>
          <target state="translated">키 &lt;code&gt;category&lt;/code&gt; 또는 &lt;code&gt;categories&lt;/code&gt; (태그와 동일한 논리를 따르는)를 사용하여 머리말을 통해 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a01c04c0c98b629a302fb8419fe9e7cc584674d" translate="yes" xml:space="preserve">
          <source>They&amp;rsquo;re accessible in Liquid via &lt;code&gt;site.static_files&lt;/code&gt; and contain the following metadata:</source>
          <target state="translated">&lt;code&gt;site.static_files&lt;/code&gt; 를 통해 Liquid에서 액세스 할 수 있으며 다음 메타 데이터를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="786917075a48c15977c206c149dcd2c59b50eca9" translate="yes" xml:space="preserve">
          <source>Third Party</source>
          <target state="translated">타사</target>
        </trans-unit>
        <trans-unit id="3630ecb269522d0364ac7f6a9fd7c7752f37804a" translate="yes" xml:space="preserve">
          <source>This &lt;a href=&quot;https://wiki.gentoo.org/wiki/SSH#Passwordless_Authentication&quot;&gt;process&lt;/a&gt; is described in several places online. What is different from the typical approach is to put the restriction to certificate-based authorization in &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;. Then, launch &lt;code&gt;rrsync&lt;/code&gt; and supply it with the folder it shall have read-write access to:</source>
          <target state="translated">이 &lt;a href=&quot;https://wiki.gentoo.org/wiki/SSH#Passwordless_Authentication&quot;&gt;프로세스&lt;/a&gt; 는 여러 곳에서 온라인으로 설명됩니다. 일반적인 접근 방식과 다른 점은 &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; 에 인증서 기반 권한 부여를 제한하는 것 입니다. 그런 다음 &lt;code&gt;rrsync&lt;/code&gt; 를 시작 하고 읽기 / 쓰기 액세스 권한이있는 폴더를 제공하십시오.</target>
        </trans-unit>
        <trans-unit id="fa80c5aee029bd0c3075789d5f91e87a1d22fcac" translate="yes" xml:space="preserve">
          <source>This allows theme creators to ship a default &lt;code&gt;/assets/styles.scss&lt;/code&gt; file which their layouts can depend on as &lt;code&gt;/assets/styles.css&lt;/code&gt;.</source>
          <target state="translated">이를 통해 테마 작성자는 기본 &lt;code&gt;/assets/styles.scss&lt;/code&gt; 파일을 제공하여 레이아웃을 &lt;code&gt;/assets/styles.css&lt;/code&gt; 로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="53301bbfaf33d1de30873f16d21d2b996040f57e" translate="yes" xml:space="preserve">
          <source>This assumes that your Jekyll site has a folder path of &lt;code&gt;assets/img&lt;/code&gt; where you have images (static files) stored. When Jekyll builds the site, it will treat each image as if it had the front matter value of &lt;code&gt;image: true&lt;/code&gt;.</source>
          <target state="translated">이것은 Jekyll 사이트에 이미지 (정적 파일)가 저장되어있는 &lt;code&gt;assets/img&lt;/code&gt; 의 폴더 경로가 있다고 가정합니다 . Jekyll은 사이트를 빌드 할 때 각 이미지를 image의 front-surface 값이 &lt;code&gt;image: true&lt;/code&gt; 것처럼 취급 합니다 .</target>
        </trans-unit>
        <trans-unit id="216be0657494df3f67f7a6d9b58c2dbbac55d4b1" translate="yes" xml:space="preserve">
          <source>This can be fixed by removing the following line from your &lt;code&gt;_config.yml&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 파일 에서 다음 줄을 제거하면이 문제를 해결할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7c5555d7dc592d79919439bb221a8e34b3cdd57a" translate="yes" xml:space="preserve">
          <source>This data can be accessed via &lt;code&gt;site.data.members&lt;/code&gt; (notice that the file&amp;rsquo;s &lt;em&gt;basename&lt;/em&gt; determines the variable name and therefore one should avoid having data files with the same basename but different extensions, in the same directory).</source>
          <target state="translated">이 데이터는 &lt;code&gt;site.data.members&lt;/code&gt; 를 통해 액세스 할 수 있습니다 (파일의 &lt;em&gt;기본&lt;/em&gt; 이름이 변수 이름을 결정하므로 동일한 디렉토리에 기본 이름이 같지만 확장자가 다른 데이터 파일을 사용하지 않아야합니다).</target>
        </trans-unit>
        <trans-unit id="1b23f6f3027ec80c3b0b1b876f9297458e1fd40d" translate="yes" xml:space="preserve">
          <source>This data can be accessed via &lt;code&gt;site.data.members&lt;/code&gt; (notice that the filename determines the variable name).</source>
          <target state="translated">이 데이터는 &lt;code&gt;site.data.members&lt;/code&gt; 를 통해 액세스 할 수 있습니다 (파일 이름이 변수 이름을 결정 함).</target>
        </trans-unit>
        <trans-unit id="c3325fdfa0b2bdaa04885b31a95aff31f1dbf4cd" translate="yes" xml:space="preserve">
          <source>This entire guide is open-source. Go ahead and &lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/buddyworks.md&quot;&gt;edit it&lt;/a&gt; if you want to expand it or have a fix or &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;ask for help&lt;/a&gt; if you run into trouble and need assistance. Buddy also has an &lt;a href=&quot;http://forum.buddy.works/&quot;&gt;online community&lt;/a&gt; for help.</source>
          <target state="translated">이 전체 가이드는 오픈 소스입니다. 가서 &lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/buddyworks.md&quot;&gt;편집&lt;/a&gt; 당신이 그것을 확장하거나 수정하거나 할 경우 &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;도움을 요청&lt;/a&gt; 하면 문제가하고 필요로하는 지원으로 실행하는 경우. 버디는 도움을받을 수 있는 &lt;a href=&quot;http://forum.buddy.works/&quot;&gt;온라인 커뮤니티&lt;/a&gt; 도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb21565992e9258b77fe0362e0c5a49529dde160" translate="yes" xml:space="preserve">
          <source>This entire guide is open-source. Go ahead and &lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/circleci.md&quot;&gt;edit it&lt;/a&gt; if you have a fix or &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;ask for help&lt;/a&gt; if you run into trouble and need some help. CircleCI also has an &lt;a href=&quot;https://discuss.circleci.com&quot;&gt;online community&lt;/a&gt; for help.</source>
          <target state="translated">이 전체 가이드는 오픈 소스입니다. 가서 &lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/circleci.md&quot;&gt;편집을&lt;/a&gt; 하면 수정이있는 경우 또는 &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;도움을 요청&lt;/a&gt; 당신이 문제로 실행하고 도움이 필요합니다. CircleCI에는 &lt;a href=&quot;https://discuss.circleci.com&quot;&gt;온라인 커뮤니티&lt;/a&gt; 도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d77787605734904351cea537ef697e3e6e69285" translate="yes" xml:space="preserve">
          <source>This entire guide is open-source. Go ahead and &lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/travis-ci.md&quot;&gt;edit it&lt;/a&gt; if you have a fix or &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;ask for help&lt;/a&gt; if you run into trouble and need some help.</source>
          <target state="translated">이 전체 가이드는 오픈 소스입니다. 가서 &lt;a href=&quot;https://github.com/jekyll/jekyll/edit/master/docs/_docs/continuous-integration/travis-ci.md&quot;&gt;편집을&lt;/a&gt; 하면 수정이있는 경우 또는 &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;도움을 요청&lt;/a&gt; 당신이 문제로 실행하고 도움이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="b0244afb911a7f1264000eb67c35f2083c411511" translate="yes" xml:space="preserve">
          <source>This error can occur during the installation of &lt;code&gt;jekyll-coffeescript&lt;/code&gt; when you don&amp;rsquo;t have a proper JavaScript runtime. To solve this, either install &lt;code&gt;execjs&lt;/code&gt; and &lt;code&gt;therubyracer&lt;/code&gt; gems, or install &lt;code&gt;nodejs&lt;/code&gt;. Check out &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/2327&quot;&gt;issue #2327&lt;/a&gt; for more info.</source>
          <target state="translated">JavaScript 오류 가없는 경우 &lt;code&gt;jekyll-coffeescript&lt;/code&gt; 를 설치하는 동안이 오류가 발생할 수 있습니다 . 이 문제를 해결하려면 &lt;code&gt;execjs&lt;/code&gt; 및 &lt;code&gt;therubyracer&lt;/code&gt; gem을 설치하거나 &lt;code&gt;nodejs&lt;/code&gt; 를 설치 하십시오 . 자세한 내용은 &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/2327&quot;&gt;문제 # 2327&lt;/a&gt; 을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="215e258123bbf922fbf9b92be2cfed262ff6949b" translate="yes" xml:space="preserve">
          <source>This feature will let the theme-gem to work with &lt;em&gt;theme-specific config variables&lt;/em&gt; out-of-the-box.</source>
          <target state="translated">이 기능을 사용하면 theme-gem이 &lt;em&gt;테마별 구성 변수&lt;/em&gt; 를 즉시 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f259ad2809a25e2c6f7dce9a26cae6c4aea9e77" translate="yes" xml:space="preserve">
          <source>This file is used to configure your Travis builds. Because Jekyll is built with Ruby and requires RubyGems to install, we use the Ruby language build environment. Below is a sample &lt;code&gt;.travis.yml&lt;/code&gt; file, followed by an explanation of each line.</source>
          <target state="translated">이 파일은 Travis 빌드를 구성하는 데 사용됩니다. Jekyll은 Ruby로 빌드되었으며 RubyGems를 설치해야하므로 Ruby 언어 빌드 환경을 사용합니다. 아래는 샘플 &lt;code&gt;.travis.yml&lt;/code&gt; 파일과 각 줄에 대한 설명입니다.</target>
        </trans-unit>
        <trans-unit id="cdc9fae1fa96bc13264f05057d3358fa52e7495a" translate="yes" xml:space="preserve">
          <source>This flag determines what order the plugin is loaded in. Valid values are: &lt;code&gt;:lowest&lt;/code&gt;, &lt;code&gt;:low&lt;/code&gt;, &lt;code&gt;:normal&lt;/code&gt;, &lt;code&gt;:high&lt;/code&gt;, and &lt;code&gt;:highest&lt;/code&gt;. Highest priority matches are applied first, lowest priority are applied last.</source>
          <target state="translated">이 플래그는 플러그인이로드되는 순서를 결정합니다. 유효한 값은 &lt;code&gt;:lowest&lt;/code&gt; , &lt;code&gt;:low&lt;/code&gt; , &lt;code&gt;:normal&lt;/code&gt; , &lt;code&gt;:high&lt;/code&gt; 및 &lt;code&gt;:highest&lt;/code&gt; 입니다. 가장 높은 우선 순위 일치가 먼저 적용되고 가장 낮은 우선 순위가 마지막에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="ae33398911b55db1271fa022aa124a696b59270c" translate="yes" xml:space="preserve">
          <source>This gem is also needed in the github-pages and to get it running on Windows x64 we have to install a few things.</source>
          <target state="translated">이 gem은 github 페이지에서도 필요하며 Windows x64에서 실행하려면 몇 가지 사항을 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="038ffeb30c8743ad648bc204325c5f82962f83b3" translate="yes" xml:space="preserve">
          <source>This helps Jekyll keep track of which files have not been modified since the site was last built, and which files will need to be regenerated on the next build. This file will not be included in the generated site. It&amp;rsquo;s probably a good idea to add this to your &lt;code&gt;.gitignore&lt;/code&gt; file.</source>
          <target state="translated">이를 통해 Jekyll은 사이트가 마지막으로 빌드 된 이후 수정되지 않은 파일과 다음 빌드에서 어떤 파일을 재생성해야하는지 추적 할 수 있습니다. 이 파일은 생성 된 사이트에 포함되지 않습니다. 이것을 &lt;code&gt;.gitignore&lt;/code&gt; 파일 에 추가하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="56f4d0c21943117e7ec6821601e18c3da7665ef5" translate="yes" xml:space="preserve">
          <source>This include contains 5 parameters:</source>
          <target state="translated">여기에는 5 개의 매개 변수가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="bd77158f525bc9e4820b4d861c299e9505a03c63" translate="yes" xml:space="preserve">
          <source>This is a bit cumbersome at first, but is easier than a big &lt;code&gt;for&lt;/code&gt; loop.</source>
          <target state="translated">처음에는 약간 번거롭지 만 큰 &lt;code&gt;for&lt;/code&gt; 루프 보다 쉽습니다 .</target>
        </trans-unit>
        <trans-unit id="c9b1ef1972d4f0773444af1f3e1f52fc2e030c90" translate="yes" xml:space="preserve">
          <source>This is a more complex generator that generates new pages:</source>
          <target state="translated">새 페이지를 생성하는보다 복잡한 생성기입니다.</target>
        </trans-unit>
        <trans-unit id="f50ce3f05b10af57b05f7e088f007111ae05a2f7" translate="yes" xml:space="preserve">
          <source>This is also useful for many shared webhosting services, where user accounts have only limited privileges. Adding these exports to &lt;code&gt;.bashrc&lt;/code&gt; before running &lt;code&gt;gem install jekyll bundler&lt;/code&gt; allows a complete non-&lt;code&gt;sudo&lt;/code&gt; install of Jekyll.</source>
          <target state="translated">이는 사용자 계정이 제한된 권한 만 갖는 많은 공유 웹 호스팅 서비스에도 유용합니다. &lt;code&gt;gem install jekyll bundler&lt;/code&gt; 를 실행하기 전에 이러한 내보내기를 &lt;code&gt;.bashrc&lt;/code&gt; 에 추가하면 Jekyll의 &lt;code&gt;sudo&lt;/code&gt; 가 아닌 완전한 설치가 가능합니다.</target>
        </trans-unit>
        <trans-unit id="cc3350c66b3528ea8e584b1c49c6e6b491a93e75" translate="yes" xml:space="preserve">
          <source>This is an example of layout inheritance. The post layout outputs the title, date, author and content body which is wrapped by the default layout.</source>
          <target state="translated">이것은 레이아웃 상속의 예입니다. 게시물 레이아웃은 기본 레이아웃으로 래핑 된 제목, 날짜, 작성자 및 콘텐츠 본문을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="4ed4fe733789025a5bdbe600f1669953603c6acb" translate="yes" xml:space="preserve">
          <source>This is like the &lt;code&gt;about.md&lt;/code&gt; you created before except it has an author and a different layout. &lt;code&gt;author&lt;/code&gt; is a custom variable, it&amp;rsquo;s not required and could have been named something like &lt;code&gt;creator&lt;/code&gt;.</source>
          <target state="translated">이것은 작성자와 다른 레이아웃이 있다는 점을 제외하면 이전에 만든 &lt;code&gt;about.md&lt;/code&gt; 와 같습니다 . &lt;code&gt;author&lt;/code&gt; 는 사용자 지정 변수이며 필수가 아니며 &lt;code&gt;creator&lt;/code&gt; 와 같은 이름을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f25e800aa9957f9798c94aa0b5dddaf75e8fdcda" translate="yes" xml:space="preserve">
          <source>This is where the generated site will be placed (by default) once Jekyll is done transforming it. It&amp;rsquo;s probably a good idea to add this to your &lt;code&gt;.gitignore&lt;/code&gt; file.</source>
          <target state="translated">Jekyll이 변환을 완료하면 생성 된 사이트가 기본적으로 배치됩니다. 이것을 &lt;code&gt;.gitignore&lt;/code&gt; 파일 에 추가하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="1b2092eeddba25d8574bb62a82e0a71de1900860" translate="yes" xml:space="preserve">
          <source>This line tells Travis to use a Ruby build container. It gives your script access to Bundler, RubyGems, and a Ruby runtime.</source>
          <target state="translated">이 줄은 Travis에게 Ruby 빌드 컨테이너를 사용하도록 지시합니다. Bundler, RubyGems 및 Ruby 런타임에 대한 스크립트 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="a4a2fa92a7c34862d2b26010b981c91cfe31512d" translate="yes" xml:space="preserve">
          <source>This method accepts one parameter, the &lt;code&gt;&lt;a href=&quot;https://github.com/jekyll/mercenary#readme&quot;&gt;Mercenary::Program&lt;/a&gt;&lt;/code&gt; instance, which is the Jekyll program itself. Upon the program, commands may be created using the above syntax. For more details, visit the Mercenary repository on GitHub.com.</source>
          <target state="translated">이 메소드는 Jekyll 프로그램 자체 인 &lt;code&gt;&lt;a href=&quot;https://github.com/jekyll/mercenary#readme&quot;&gt;Mercenary::Program&lt;/a&gt;&lt;/code&gt; 인스턴스 중 하나를 허용 합니다. 프로그램에 따라 위의 구문을 사용하여 명령을 작성할 수 있습니다. 자세한 내용은 GitHub.com의 용병 저장소를 방문하십시오.</target>
        </trans-unit>
        <trans-unit id="bb71222041e70954c971ff33c4c3d5fda56aad01" translate="yes" xml:space="preserve">
          <source>This powerful feature allows you to avoid repetition in your templates and to set site specific options without changing &lt;code&gt;_config.yml&lt;/code&gt;.</source>
          <target state="translated">이 강력한 기능을 사용하면 템플릿에서 반복을 피하고 &lt;code&gt;_config.yml&lt;/code&gt; 을 변경하지 않고도 사이트 별 옵션을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8bb7f0030066881ac0f44f32d1b496306df82c98" translate="yes" xml:space="preserve">
          <source>This restricts your Ruby environment to only use gems set in your &lt;code&gt;Gemfile&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;Gemfile&lt;/code&gt; 에 설정된 gem 만 사용하도록 Ruby 환경을 제한합니다 .</target>
        </trans-unit>
        <trans-unit id="64e2a1b4f28b25a884d049f121dd258652dfd658" translate="yes" xml:space="preserve">
          <source>This returns the location of the gem-based theme files. For example, the Minima theme&amp;rsquo;s files might be located in &lt;code&gt;/usr/local/lib/ruby/gems/2.3.0/gems/minima-2.1.0&lt;/code&gt; on macOS.</source>
          <target state="translated">gem 기반 테마 파일의 위치를 ​​반환합니다. 예를 들어, Minima 테마 파일은 macOS의 &lt;code&gt;/usr/local/lib/ruby/gems/2.3.0/gems/minima-2.1.0&lt;/code&gt; 에 있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1b127dd1144990a51fde217b2ccfe886d07d2537" translate="yes" xml:space="preserve">
          <source>This returns the location of the gem-based theme files. For example, the Minima theme&amp;rsquo;s files might be located in &lt;code&gt;/usr/local/lib/ruby/gems/2.6.0/gems/minima-2.5.1&lt;/code&gt; on macOS.</source>
          <target state="translated">이것은 gem 기반 테마 파일의 위치를 ​​반환합니다. 예를 들어 Minima 테마의 파일은 macOS의 &lt;code&gt;/usr/local/lib/ruby/gems/2.6.0/gems/minima-2.5.1&lt;/code&gt; 에 있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7a67de107246be6963abdc850b25005e0b42fd66" translate="yes" xml:space="preserve">
          <source>This section is part of an article written by &lt;a href=&quot;https://jwillmer.de/blog/tutorial/how-to-install-jekyll-and-pages-gem-on-windows-10-x46&quot;&gt;Jens Willmer&lt;/a&gt;. To follow the instructions you need to have &lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey&lt;/a&gt; installed on your system. If you already have a version of Ruby installed you need to uninstall it before you can continue.</source>
          <target state="translated">이 섹션은 &lt;a href=&quot;https://jwillmer.de/blog/tutorial/how-to-install-jekyll-and-pages-gem-on-windows-10-x46&quot;&gt;Jens Willmer가&lt;/a&gt; 작성한 기사의 일부입니다 . 지침을 따르 려면 시스템에 &lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey가&lt;/a&gt; 설치되어 있어야합니다. 이미 Ruby 버전이 설치되어있는 경우 계속하려면 설치 제거해야합니다.</target>
        </trans-unit>
        <trans-unit id="7ead5acabba1ee72fdd0d4f297f16cf7715aaf58" translate="yes" xml:space="preserve">
          <source>This site aims to be a comprehensive guide to Jekyll. We&amp;rsquo;ll cover topics such as getting your site up and running, creating and managing your content, customizing the way your site works and looks, deploying to various environments, and give you some advice on participating in the future development of Jekyll itself.</source>
          <target state="translated">이 사이트는 Jekyll에 대한 포괄적 인 가이드를 목표로합니다. 사이트 시작 및 실행, 컨텐츠 작성 및 관리, 사이트 작동 및 모양 사용자 정의, 다양한 환경에 배치, Jekyll 자체의 향후 개발에 참여하는 데 대한 조언을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="dddd30a47f3feef11279300efce9f67cf6579040" translate="yes" xml:space="preserve">
          <source>This stage evaluates Liquid expressions in the current file. By default, the interpretation is &lt;em&gt;shallow&lt;/em&gt; &amp;mdash; in that any Liquid expression in resulting output is not further interpreted. Moreover, any Liquid expression in the file&amp;rsquo;s front matter is left untouched.</source>
          <target state="translated">이 단계는 현재 파일의 Liquid 표현식을 평가합니다. 기본적으로 해석은 &lt;em&gt;얕&lt;/em&gt; 습니다. 결과 출력의 Liquid 표현은 더 이상 해석되지 않습니다. 또한 파일의 앞부분에있는 Liquid 표현은 그대로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="743f78607e5bd9152fd3466e8755393f8d54d9c7" translate="yes" xml:space="preserve">
          <source>This stage invokes the converter mapped to the current file&amp;rsquo;s extension and converts the input string. This is when Markdown gets converted into HTML and Sass / Scss into CSS or CoffeeScript into JavaScript, etc, etc. Since this stage is determined by the file&amp;rsquo;s extension, Markdown or Sass inside a &lt;code&gt;.html&lt;/code&gt; file will remain untouched.</source>
          <target state="translated">이 단계는 현재 파일의 확장자에 매핑 된 변환기를 호출하고 입력 문자열을 변환합니다. Markdown이 HTML로 변환되고 Sass / Scss가 CSS로 또는 CoffeeScript가 JavaScript로 변환되는 경우입니다.이 단계는 파일 확장자에 의해 결정되기 때문에 &lt;code&gt;.html&lt;/code&gt; 파일 내의 Markdown 또는 Sass 는 그대로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="0e5683b6a844211348d94454fa5fd0a7ef8c5cef" translate="yes" xml:space="preserve">
          <source>This step is recommended if you use these instructions to deploy your site. If you put the &lt;code&gt;deploy&lt;/code&gt; script in the root folder of your project, Jekyll will copy it to the output folder. This behavior can be changed in &lt;code&gt;_config.yml&lt;/code&gt;.</source>
          <target state="translated">이 지시 사항을 사용하여 사이트를 배치하는 경우이 단계가 권장됩니다. &lt;code&gt;deploy&lt;/code&gt; 스크립트를 프로젝트의 루트 폴더에 넣으면 Jekyll이 스크립트를 출력 폴더에 복사합니다. 이 동작은 &lt;code&gt;_config.yml&lt;/code&gt; 에서 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="10edb7b871004c4d58fcb9b0168bb777b10f5563" translate="yes" xml:space="preserve">
          <source>This tells &lt;code&gt;gem&lt;/code&gt; to place its gems within the user&amp;rsquo;s home folder, not in a system-wide location, and adds the local &lt;code&gt;jekyll&lt;/code&gt; command to the user&amp;rsquo;s &lt;code&gt;PATH&lt;/code&gt; ahead of any system-wide paths.</source>
          <target state="translated">이것은 &lt;code&gt;gem&lt;/code&gt; 에게 시스템 전체 위치가 아닌 사용자의 홈 폴더에 gem 을 배치하도록 지시 하고 시스템 전체 &lt;code&gt;PATH&lt;/code&gt; 앞에 로컬 &lt;code&gt;jekyll&lt;/code&gt; 명령을 사용자의 PATH에 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="f8f823f2b31a8c8230ed1be9ae884bd16fed8abb" translate="yes" xml:space="preserve">
          <source>This way you can preview your site locally from the site root on localhost, but when GitHub generates your pages from the &lt;code&gt;gh-pages&lt;/code&gt; branch all the URLs will resolve properly.</source>
          <target state="translated">이 방법으로 localhost의 사이트 루트에서 사이트를 로컬로 미리 볼 수 있지만 GitHub가 &lt;code&gt;gh-pages&lt;/code&gt; 분기 에서 페이지를 생성하면 모든 URL이 올바르게 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="51b525b93972bd810e1a544085d5bc21833d5499" translate="yes" xml:space="preserve">
          <source>This will either lead to parsing errors, or Jekyll will revert to the default settings. Use spaces instead.</source>
          <target state="translated">이로 인해 파싱 오류가 발생하거나 Jekyll이 기본 설정으로 되돌아갑니다. 대신 공백을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d0a86d650d438ca84094dca56d574a2b47bc60af" translate="yes" xml:space="preserve">
          <source>This will install the latest pre-release. If you want a particular pre-release, use the &lt;code&gt;-v&lt;/code&gt; switch to indicate the version you&amp;rsquo;d like to install:</source>
          <target state="translated">최신 시험판이 설치됩니다. 특정 시험판을 원하는 경우 &lt;code&gt;-v&lt;/code&gt; 스위치를 사용하여 설치하려는 버전을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="440a7a6465d65bffe97f1212df23b68249f10d99" translate="yes" xml:space="preserve">
          <source>This will produce a file for each document in the collection. For example, if you have &lt;code&gt;_my_collection/some_subdir/some_doc.md&lt;/code&gt;, it will be rendered using Liquid and the Markdown converter of your choice and written out to &lt;code&gt;&amp;lt;dest&amp;gt;/my_collection/some_subdir/some_doc.html&lt;/code&gt;.</source>
          <target state="translated">컬렉션의 각 문서에 대한 파일이 생성됩니다. 예를 들어, &lt;code&gt;_my_collection/some_subdir/some_doc.md&lt;/code&gt; 가있는 경우 선택한 Liquid 및 Markdown 변환기를 사용하여 렌더링되고 &lt;code&gt;&amp;lt;dest&amp;gt;/my_collection/some_subdir/some_doc.html&lt;/code&gt; 로 작성됩니다 .</target>
        </trans-unit>
        <trans-unit id="8077de14f9979207f9d6a8712dc5957603dd46d1" translate="yes" xml:space="preserve">
          <source>This will read in &lt;code&gt;blog/index.html&lt;/code&gt;, send it each pagination page in Liquid as &lt;code&gt;paginator&lt;/code&gt; and write the output to &lt;code&gt;blog/page:num/&lt;/code&gt;, where &lt;code&gt;:num&lt;/code&gt; is the pagination page number, starting with &lt;code&gt;2&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;blog/index.html&lt;/code&gt; 에서 읽고 Liquid의 각 페이지 매김 페이지를 &lt;code&gt;paginator&lt;/code&gt; 로 보내고 &lt;code&gt;blog/page:num/&lt;/code&gt; 출력을 씁니다. 여기서 &lt;code&gt;:num&lt;/code&gt; 은 &lt;code&gt;2&lt;/code&gt; 로 시작하는 페이지 매김 페이지 번호 입니다.</target>
        </trans-unit>
        <trans-unit id="0f1993494132bc33d83fa74caadeb88e0612e1b5" translate="yes" xml:space="preserve">
          <source>This will read in &lt;code&gt;blog/index.html&lt;/code&gt;, send it each pagination page in Liquid as &lt;code&gt;paginator&lt;/code&gt; and write the output to &lt;code&gt;blog/page:num/&lt;/code&gt;, where &lt;code&gt;:num&lt;/code&gt; is the pagination page number, starting with &lt;code&gt;2&lt;/code&gt;. If a site has 12 posts and specifies &lt;code&gt;paginate: 5&lt;/code&gt;, Jekyll will write &lt;code&gt;blog/index.html&lt;/code&gt; with the first 5 posts, &lt;code&gt;blog/page2/index.html&lt;/code&gt; with the next 5 posts and &lt;code&gt;blog/page3/index.html&lt;/code&gt; with the last 2 posts into the destination directory.</source>
          <target state="translated">이것은 &lt;code&gt;blog/index.html&lt;/code&gt; 에서 읽고 페이지 매김 페이지를 Liquid로 페이지 매김 페이지로 &lt;code&gt;paginator&lt;/code&gt; 출력을 &lt;code&gt;blog/page:num/&lt;/code&gt; 씁니다. 여기서 &lt;code&gt;:num&lt;/code&gt; 은 &lt;code&gt;2&lt;/code&gt; 부터 시작하는 페이지 매김 페이지 번호 입니다. 사이트는 12 개 게시물이있는 경우 및 지정 &lt;code&gt;paginate: 5&lt;/code&gt; , 지킬 작성합니다 &lt;code&gt;blog/index.html&lt;/code&gt; , 처음 5 게시물 &lt;code&gt;blog/page2/index.html&lt;/code&gt; 향후 5 게시물 및 &lt;code&gt;blog/page3/index.html&lt;/code&gt; 지난 2 대상 디렉토리에 게시합니다.</target>
        </trans-unit>
        <trans-unit id="f16622cd40e1dcc12d10d82c31b84dc204f04b98" translate="yes" xml:space="preserve">
          <source>Though Windows users could alternatively define their blog&amp;rsquo;s timezone by setting the key to use the POSIX format of defining timezones, it wasn&amp;rsquo;t as user-friendly when it came to having the clock altered to changing DST-rules.</source>
          <target state="translated">Windows 사용자는 시간대를 정의하는 POSIX 형식을 사용하도록 키를 설정하여 블로그의 시간대를 대안으로 정의 할 수 있지만, 시계를 DST 규칙 변경으로 변경하는 경우 사용자 친화적이지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="f0610a5d8b28f6854509741ec10222bb0efaa7bc" translate="yes" xml:space="preserve">
          <source>Three-letter month abbreviation, e.g. &amp;ldquo;Jan&amp;rdquo;.</source>
          <target state="translated">세 글자로 된 월 약어 (예 : &quot;Jan&quot;).</target>
        </trans-unit>
        <trans-unit id="8bdc629bf76e7fdf50852c1ee5eef84b05d6469b" translate="yes" xml:space="preserve">
          <source>Three-letter weekday abbreviation, e.g. &amp;ldquo;Sun&amp;rdquo;.</source>
          <target state="translated">세 글자로 된 요일 약자 (예 : &quot;Sun&quot;).</target>
        </trans-unit>
        <trans-unit id="612c181fd607485719c1ef224631b9be19aa1cc9" translate="yes" xml:space="preserve">
          <source>Throughout this guide there are a number of small-but-handy pieces of information that can make using Jekyll easier, more interesting, and less hazardous. Here&amp;rsquo;s what to look out for.</source>
          <target state="translated">이 안내서에는 Jekyll을 더 쉽고 재미 있고 덜 위험하게 사용할 수있는 작지만 유용한 정보가 많이 있습니다. 주의해야 할 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ce18873d1a2439937489b6bff848e329c64c4c55" translate="yes" xml:space="preserve">
          <source>Time Zone Management</source>
          <target state="translated">시간대 관리</target>
        </trans-unit>
        <trans-unit id="b431206e6826553cced9dee006e46ba2f2aed40d" translate="yes" xml:space="preserve">
          <source>Time-Zone Management</source>
          <target state="translated">시간대 관리</target>
        </trans-unit>
        <trans-unit id="06b16ed0febe4ef7c84e9390785dd0f675e310de" translate="yes" xml:space="preserve">
          <source>Tips for working with GitHub Pages Integration</source>
          <target state="translated">GitHub 페이지 통합 작업을위한 팁</target>
        </trans-unit>
        <trans-unit id="c432694a81177149b1d4da370814c7a53062af28" translate="yes" xml:space="preserve">
          <source>Title from the document&amp;rsquo;s filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;slug&lt;/code&gt; YAML front matter.</source>
          <target state="translated">문서의 파일 이름에서 제목입니다. 문서의 &lt;code&gt;slug&lt;/code&gt; YAML 전면을 통해 재정의 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5612d3c439b05a98af8e23fde8ffc77c88a4bc59" translate="yes" xml:space="preserve">
          <source>Title from the document&amp;rsquo;s filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;slug&lt;/code&gt; front matter.</source>
          <target state="translated">문서 파일 이름의 제목입니다. 문서의 &lt;code&gt;slug&lt;/code&gt; 앞문을 통해 재정의 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1d6c83f8db1b6f18c98b0ce63a71c1f889477bbd" translate="yes" xml:space="preserve">
          <source>To (re)load the configuration, restart the jekyll server. Press &lt;code&gt;Ctrl&lt;/code&gt;+&lt;code&gt;C&lt;/code&gt; in your terminal to stop the server, and then &lt;code&gt;jekyll serve&lt;/code&gt; to restart it.</source>
          <target state="translated">구성을 (재)로드하려면 jekyll 서버를 다시 시작하십시오. 터미널에서 &lt;code&gt;Ctrl&lt;/code&gt; + &lt;code&gt;C&lt;/code&gt; 를 눌러 서버를 중지 한 다음 &lt;code&gt;jekyll serve&lt;/code&gt; 이 서버 를 다시 시작합니다.</target>
        </trans-unit>
        <trans-unit id="23ad8dea6076b27ccd9fbe6105eef4daab823868" translate="yes" xml:space="preserve">
          <source>To achieve this you need to create another layout which specifies your original layout in front matter. For example this layout will live at &lt;code&gt;_layouts/post.html&lt;/code&gt;:</source>
          <target state="translated">이를 달성하려면 앞부분에 원래 레이아웃을 지정하는 다른 레이아웃을 만들어야합니다. 예를 &lt;code&gt;_layouts/post.html&lt;/code&gt; 레이아웃은 _layouts / post.html에 있습니다 .</target>
        </trans-unit>
        <trans-unit id="70aece54b76e07c751fef7b7e41725ba1cd3500e" translate="yes" xml:space="preserve">
          <source>To activate the new exports, either close and restart Bash, logout and log back into your shell account, or run &lt;code&gt;. .bashrc&lt;/code&gt; in the currently-running shell.</source>
          <target state="translated">새 내보내기를 활성화하려면 Bash를 닫고 다시 시작하거나, 로그 아웃 한 다음 셸 계정에 다시 로그인하거나, &lt;code&gt;. .bashrc&lt;/code&gt; 현재 실행중인 셸의 .bashrc</target>
        </trans-unit>
        <trans-unit id="1f21f20401313943fa14150b091e5246e7c49351" translate="yes" xml:space="preserve">
          <source>To bypass Bundler if you aren&amp;rsquo;t using a Gemfile, run &lt;code&gt;jekyll serve&lt;/code&gt;.</source>
          <target state="translated">Gemfile을 사용하지 않는 경우 Bundler를 우회하려면 jekyll serve를 실행 &lt;code&gt;jekyll serve&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83ba4a9ecbc9058f9b5abefecd715fce259d2e6d" translate="yes" xml:space="preserve">
          <source>To change Jekyll&amp;rsquo;s default build behavior have a look through the &lt;a href=&quot;../configuration/index&quot;&gt;configuration options&lt;/a&gt;.</source>
          <target state="translated">Jekyll의 기본 빌드 동작을 변경하려면 &lt;a href=&quot;../configuration/index&quot;&gt;구성 옵션을&lt;/a&gt; 살펴보십시오 .</target>
        </trans-unit>
        <trans-unit id="afe823ce019b51ca82783d8875e87e9925a9934e" translate="yes" xml:space="preserve">
          <source>To create a new &lt;code&gt;Gemfile&lt;/code&gt; to list your project&amp;rsquo;s dependencies run:</source>
          <target state="translated">프로젝트의 종속성을 나열 하는 새 &lt;code&gt;Gemfile&lt;/code&gt; 을 만들려면 다음을 실행하세요.</target>
        </trans-unit>
        <trans-unit id="81bdb9df3d2709a87043ff90bf6e3e808ed8622e" translate="yes" xml:space="preserve">
          <source>To create a new post, all you need to do is create a file in the &lt;code&gt;_posts&lt;/code&gt; directory. How you name files in this folder is important. Jekyll requires blog post files to be named according to the following format:</source>
          <target state="translated">새 게시물을 작성하려면 &lt;code&gt;_posts&lt;/code&gt; 디렉토리에 파일을 작성하기 만하면 됩니다. 이 폴더에서 파일 이름을 지정하는 방법이 중요합니다. Jekyll은 다음 형식에 따라 블로그 게시물 파일의 이름을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="b2931b73d2e7c642e2cfc8580cc409a36535f20b" translate="yes" xml:space="preserve">
          <source>To create a post, add a file to your &lt;code&gt;_posts&lt;/code&gt; directory with the following format:</source>
          <target state="translated">게시물을 작성하려면 다음 형식으로 &lt;code&gt;_posts&lt;/code&gt; 디렉토리에 파일을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="2a153f3d0ad004579ec81ada889f1a14a3465245" translate="yes" xml:space="preserve">
          <source>To do this you can use &lt;a href=&quot;../../configuration/environments/index&quot;&gt;environments&lt;/a&gt;. You can set the environment by using the &lt;code&gt;JEKYLL_ENV&lt;/code&gt; environment variable when running a command. For example:</source>
          <target state="translated">이를 위해 &lt;a href=&quot;../../configuration/environments/index&quot;&gt;환경&lt;/a&gt; 을 사용할 수 있습니다 . 명령 실행시 &lt;code&gt;JEKYLL_ENV&lt;/code&gt; 환경 변수 를 이용하여 환경을 설정할 수 있습니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="ae4f0d8ff4a7863310aa0c2ec55acb01d2a90068" translate="yes" xml:space="preserve">
          <source>To do this you&amp;rsquo;ll use collections. Collections are similar to posts except the content doesn&amp;rsquo;t have to be grouped by date.</source>
          <target state="translated">이를 위해 컬렉션을 사용합니다. 컬렉션은 콘텐츠를 날짜별로 그룹화 할 필요가 없다는 점을 제외하면 게시물과 유사합니다.</target>
        </trans-unit>
        <trans-unit id="ef9b29e1874a779ac7ad8d7399f618434814f503" translate="yes" xml:space="preserve">
          <source>To do this, copy the files from the theme gem&amp;rsquo;s directory into your Jekyll site directory. (For example, copy them to &lt;code&gt;/myblog&lt;/code&gt; if you created your Jekyll site at &lt;code&gt;/myblog&lt;/code&gt;. See the previous section for details.)</source>
          <target state="translated">이렇게하려면 테마 gem의 디렉토리에서 Jekyll 사이트 디렉토리로 파일을 복사하십시오. (예를 들어, Jekyll 사이트를 &lt;code&gt;/myblog&lt;/code&gt; 에 작성한 경우 이를 &lt;code&gt;/myblog&lt;/code&gt; 에 복사 하십시오. 자세한 내용은 이전 섹션을 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="4c497574a1c472de22e6328f0ff86a2281e717c9" translate="yes" xml:space="preserve">
          <source>To do this, refer to the class (that you will configure in the next parts of this step) from within the navigation.html file by removing the code you added earlier (to color the current link red) and inserting the following code:</source>
          <target state="translated">이렇게하려면 이전에 추가 한 코드를 제거하고 (현재 링크를 빨간색으로 표시하기 위해) 다음 코드를 삽입하여 navigation.html 파일 내에서 클래스 (이 단계의 다음 부분에서 구성 할)를 참조합니다.</target>
        </trans-unit>
        <trans-unit id="83bb96ed5b2b2aff93e52b3e83bebc19227c9cea" translate="yes" xml:space="preserve">
          <source>To enable Coffeescript in Jekyll 3.0 and up you must</source>
          <target state="translated">Jekyll 3.0 이상에서 Coffeescript를 활성화하려면</target>
        </trans-unit>
        <trans-unit id="0d780fda0133f8d52e0950c88890bd5e47f0cd63" translate="yes" xml:space="preserve">
          <source>To enable Travis builds for your GitHub repository:</source>
          <target state="translated">GitHub 저장소에 Travis 빌드를 활성화하려면 :</target>
        </trans-unit>
        <trans-unit id="a53782411360ad9a948a3a450fb9ce0d1ff8df2f" translate="yes" xml:space="preserve">
          <source>To enable pagination for posts on your blog, add a line to the &lt;code&gt;_config.yml&lt;/code&gt; file that specifies how many items should be displayed per page:</source>
          <target state="translated">블로그 게시물에 페이지 매김을 사용하려면 &lt;code&gt;_config.yml&lt;/code&gt; 파일에 페이지 당 표시 할 항목 수를 지정하는 행을 추가 하십시오.</target>
        </trans-unit>
        <trans-unit id="37efe2d760bfebe822954818459d5cb00e3c004e" translate="yes" xml:space="preserve">
          <source>To get our changes processed by Jekyll we need to add &lt;a href=&quot;../03-front-matter/index&quot;&gt;front matter&lt;/a&gt; to the top of the page:</source>
          <target state="translated">우리의 변화가 지킬 처리하려면 우리는 추가 할 필요가 &lt;a href=&quot;../03-front-matter/index&quot;&gt;서문을&lt;/a&gt; 페이지 상단에 :</target>
        </trans-unit>
        <trans-unit id="9b3214c8d8f556945a5b5971b165f5b64f1826a5" translate="yes" xml:space="preserve">
          <source>To have &lt;code&gt;index.html&lt;/code&gt; use this layout, you can set a &lt;code&gt;layout&lt;/code&gt; variable in front matter. The layout wraps around the content of the page so all you need in &lt;code&gt;index.html&lt;/code&gt; is:</source>
          <target state="translated">&lt;code&gt;index.html&lt;/code&gt; 이이 레이아웃을 사용하도록 하려면 앞부분에 &lt;code&gt;layout&lt;/code&gt; 변수를 설정할 수 있습니다 . 레이아웃은 페이지 내용을 감싸므로 &lt;code&gt;index.html&lt;/code&gt; 에서 필요한 것은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="047e95e3698efd45e38c9b7ce91d30d358677a2d" translate="yes" xml:space="preserve">
          <source>To have a remote server handle the deploy for you every time you push changes using Git, you can create a user account which has all the public keys that are authorized to deploy in its &lt;code&gt;authorized_keys&lt;/code&gt; file. With that in place, setting up the post-receive hook is done as follows:</source>
          <target state="translated">Git을 사용하여 변경 사항을 푸시 할 때마다 원격 서버가 배포를 처리하도록하려면 &lt;code&gt;authorized_keys&lt;/code&gt; 파일 에 배포 할 수있는 모든 공개 키가있는 사용자 계정을 만들 수 있습니다 . 이를 통해 수신 후 후크 설정은 다음과 같이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="60c6e082802cfa1fcac87c0c8d2410a20559ce74" translate="yes" xml:space="preserve">
          <source>To illustrate, consider the following plugin that implements custom functionality for every custom &lt;code&gt;Excerpt&lt;/code&gt; object initialized:</source>
          <target state="translated">설명을 위해 초기화 된 모든 사용자 정의 &lt;code&gt;Excerpt&lt;/code&gt; 객체 에 대해 사용자 정의 기능을 구현하는 다음 플러그인을 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="4ee6034df559d0a7b7cb1a920b3bd98e6b67503e" translate="yes" xml:space="preserve">
          <source>To install RubyGems on Gentoo:</source>
          <target state="translated">젠투에 RubyGems를 설치하려면 :</target>
        </trans-unit>
        <trans-unit id="144010babb6f88bc59b04eac03336cb9bcfa9a7b" translate="yes" xml:space="preserve">
          <source>To install a gem-based theme:</source>
          <target state="translated">gem 기반 테마를 설치하려면</target>
        </trans-unit>
        <trans-unit id="98264215c4ff5505f01b8f2d1ee590672e95238e" translate="yes" xml:space="preserve">
          <source>To install gems in your Gemfile using Bundler, run the following in the directory that has the Gemfile:</source>
          <target state="translated">Bundler를 사용하여 Gemfile에 gem을 설치하려면 Gemfile이있는 디렉토리에서 다음을 실행하세요.</target>
        </trans-unit>
        <trans-unit id="8ddec83a099837ef2ffef9702c0f09c49574da72" translate="yes" xml:space="preserve">
          <source>To install the Jekyll site into the directory you&amp;rsquo;re currently in, run &lt;code&gt;jekyll new .&lt;/code&gt; If the existing directory isn&amp;rsquo;t empty, you can pass the &lt;code&gt;--force&lt;/code&gt; option with &lt;code&gt;jekyll new . --force&lt;/code&gt;.</source>
          <target state="translated">Jekyll 사이트를 현재있는 디렉토리에 설치하려면 &lt;code&gt;jekyll new .&lt;/code&gt; 실행 하십시오. 기존 디렉토리가 비어 있지 않은 경우 &lt;code&gt;jekyll new . --force&lt;/code&gt; 와 함께 &lt;code&gt;--force&lt;/code&gt; 옵션을 전달할 수 있습니다 . --force .</target>
        </trans-unit>
        <trans-unit id="f0c1559f4c9f3c6984974b05b8e03805cc845640" translate="yes" xml:space="preserve">
          <source>To install the command line tools to compile native extensions, open a terminal and run:</source>
          <target state="translated">기본 확장을 컴파일하는 명령 줄 도구를 설치하려면 터미널을 열고 다음을 실행합니다.</target>
        </trans-unit>
        <trans-unit id="94bf36b23d7d29653294ac58a57b2c27a240e503" translate="yes" xml:space="preserve">
          <source>To learn about other parameters you can include with &lt;code&gt;jekyll new&lt;/code&gt;, type &lt;code&gt;jekyll new --help&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;jekyll new&lt;/code&gt; 와 함께 포함 할 수있는 다른 매개 변수에 대해 배우려면 &lt;code&gt;jekyll new --help&lt;/code&gt; 를 입력 하십시오 .</target>
        </trans-unit>
        <trans-unit id="50ef509598509a60b544bb91aba55e636a523571" translate="yes" xml:space="preserve">
          <source>To link to a post, a page, collection item, or file, the &lt;code&gt;link&lt;/code&gt; tag will generate the correct permalink URL for the path you specify. For example, if you use the &lt;code&gt;link&lt;/code&gt; tag to link to &lt;code&gt;mypage.html&lt;/code&gt;, even if you change your permalink style to include the file extension or omit it, the URL formed by the &lt;code&gt;link&lt;/code&gt; tag will always be valid.</source>
          <target state="translated">게시물, 페이지, 컬렉션 항목 또는 파일에 &lt;code&gt;link&lt;/code&gt; 위해 링크 태그는 지정한 경로에 대한 올바른 영구 링크 URL을 생성합니다. 예를 들어, &lt;code&gt;link&lt;/code&gt; 태그를 사용하여 &lt;code&gt;mypage.html&lt;/code&gt; 에 링크하는 경우 파일 확장자를 포함하도록 영구 링크 스타일을 변경하거나 생략하더라도 &lt;code&gt;link&lt;/code&gt; 태그에 의해 형성된 URL 은 항상 유효합니다.</target>
        </trans-unit>
        <trans-unit id="c54cc900bc68bc2b61da82b4ab2b49f0ad0b873a" translate="yes" xml:space="preserve">
          <source>To locate a theme&amp;rsquo;s files on your computer:</source>
          <target state="translated">컴퓨터에서 테마 파일을 찾으려면</target>
        </trans-unit>
        <trans-unit id="76d8a5d75d6896314f48f97fb6a6fff551bbb703" translate="yes" xml:space="preserve">
          <source>To make common tasks easier, Jekyll even adds a few handy filters of its own, all of which you can find on this page. You can also create your own filters using &lt;a href=&quot;../../plugins/index&quot;&gt;plugins&lt;/a&gt;.</source>
          <target state="translated">일반적인 작업을 더 쉽게 만들기 위해 Jekyll은이 페이지에서 찾을 수있는 몇 가지 편리한 필터를 추가했습니다. &lt;a href=&quot;../../plugins/index&quot;&gt;플러그인을&lt;/a&gt; 사용하여 고유 한 필터를 만들 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fc226c346fa88c595dd431ec607f8a0e6ffeb0b1" translate="yes" xml:space="preserve">
          <source>To modify any stylesheet you must take the extra step of also copying the main sass file (&lt;code&gt;_sass/minima.scss&lt;/code&gt; in the Minima theme) into the &lt;code&gt;_sass&lt;/code&gt; directory in your site&amp;rsquo;s source.</source>
          <target state="translated">스타일 시트를 수정하려면 기본 sass 파일 ( Minima 테마의 &lt;code&gt;_sass/minima.scss&lt;/code&gt; )을 사이트 소스 의 &lt;code&gt;_sass&lt;/code&gt; 디렉토리 로 복사하는 추가 단계를 수행해야합니다 .</target>
        </trans-unit>
        <trans-unit id="6334cf8aefdd307a815631e433ac1f0beb8fef61" translate="yes" xml:space="preserve">
          <source>To preview unpublished pages, run `jekyll serve` or `jekyll build` with the `--unpublished` switch. Jekyll also has a handy &lt;a href=&quot;../posts/index#drafts&quot;&gt;drafts&lt;/a&gt; feature tailored specifically for blog posts.</source>
          <target state="translated">게시되지 않은 페이지를 미리 보려면`--unpublished` 스위치를 사용하여`jekyll serve` 또는`jekyll build`를 실행하세요. 또한 Jekyll에는 블로그 게시물을 위해 특별히 맞춤화 된 편리한 &lt;a href=&quot;../posts/index#drafts&quot;&gt;초안&lt;/a&gt; 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce005eacb3214730c99e6f37f4b8b74ffd712932" translate="yes" xml:space="preserve">
          <source>To preview unpublished pages, simply run `jekyll serve` or `jekyll build` with the `--unpublished` switch. Jekyll also has a handy &lt;a href=&quot;../drafts/index&quot;&gt;drafts&lt;/a&gt; feature tailored specifically for blog posts.</source>
          <target state="translated">게시되지 않은 페이지를 미리 보려면`--unpublished` 스위치로`jekyll serve` 또는`jekyll build`를 실행하십시오. Jekyll에는 블로그 게시물에 맞게 특별히 &lt;a href=&quot;../drafts/index&quot;&gt;작성된&lt;/a&gt; 편리한 초안 기능 도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="592d9b726fb33c342e7ba2f02120c449f7391761" translate="yes" xml:space="preserve">
          <source>To preview your site with drafts, run &lt;code&gt;jekyll serve&lt;/code&gt; or &lt;code&gt;jekyll build&lt;/code&gt; with the &lt;code&gt;--drafts&lt;/code&gt; switch. Each will be assigned the value modification time of the draft file for its date, and thus you will see currently edited drafts as the latest posts.</source>
          <target state="translated">초안이있는 사이트를 미리 보려면 &lt;code&gt;--drafts&lt;/code&gt; 스위치를 사용하여 jekyll &lt;code&gt;jekyll serve&lt;/code&gt; 또는 &lt;code&gt;jekyll build&lt;/code&gt; 를 실행하십시오 . 각각은 날짜에 대한 초안 파일의 값 수정 시간이 할당되므로 현재 편집 된 초안이 최신 게시물로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="4bb59665c8baa71c57b533a28e3fde52f64a7f7d" translate="yes" xml:space="preserve">
          <source>To preview your site with drafts, simply run &lt;code&gt;jekyll serve&lt;/code&gt; or &lt;code&gt;jekyll build&lt;/code&gt; with the &lt;code&gt;--drafts&lt;/code&gt; switch. Each will be assigned the value modification time of the draft file for its date, and thus you will see currently edited drafts as the latest posts.</source>
          <target state="translated">초안으로 사이트를 미리 보려면 &lt;code&gt;--drafts&lt;/code&gt; 스위치로 &lt;code&gt;jekyll serve&lt;/code&gt; 또는 &lt;code&gt;jekyll build&lt;/code&gt; 를 실행하십시오 . 각 파일에는 날짜별로 초안 파일의 값 수정 시간이 할당되므로 현재 편집 된 초안을 최신 게시물로 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2527d6dd613a39729e540bb4f1a6a4933638060a" translate="yes" xml:space="preserve">
          <source>To preview your theme as you&amp;rsquo;re authoring it, it may be helpful to add dummy content in, for example, &lt;code&gt;/index.html&lt;/code&gt; and &lt;code&gt;/page.html&lt;/code&gt; files. This will allow you to use the &lt;code&gt;jekyll build&lt;/code&gt; and &lt;code&gt;jekyll serve&lt;/code&gt; commands to preview your theme, just as you&amp;rsquo;d preview a Jekyll site.</source>
          <target state="translated">테마를 작성할 때 테마를 미리 보려면 &lt;code&gt;/index.html&lt;/code&gt; 및 &lt;code&gt;/page.html&lt;/code&gt; 파일 과 같은 더미 컨텐츠를 추가하는 것이 도움이 될 수 있습니다 . 그러면 Jekyll 사이트를 미리 보는 것처럼 &lt;code&gt;jekyll build&lt;/code&gt; 및 &lt;code&gt;jekyll serve&lt;/code&gt; 명령을 사용하여 테마를 미리 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d7e803d275c82210ab0e5787cd20529c67fd9f4" translate="yes" xml:space="preserve">
          <source>To release a new version of your theme, update the version number in the gemspec file, ( &lt;code&gt;jekyll-theme-awesome.gemspec&lt;/code&gt; in this example ), and then repeat Steps 1 - 3 above. We recommend that you follow &lt;a href=&quot;http://semver.org/&quot;&gt;Semantic Versioning&lt;/a&gt; while bumping your theme-version.</source>
          <target state="translated">테마의 새 버전을 해제하려면 gemspec 파일 ( 이 예에서는 &lt;code&gt;jekyll-theme-awesome.gemspec&lt;/code&gt; ) 에서 버전 번호를 업데이트 한 다음 위의 1-3 단계를 반복하십시오. 테마 &lt;a href=&quot;http://semver.org/&quot;&gt;버전&lt;/a&gt; 을 부딪히는 동안 시맨틱 버전 관리 를 따르는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="78791e166dc8019939a124cb96cae9ec8181d13b" translate="yes" xml:space="preserve">
          <source>To remedy some of these shortfalls, putting &lt;code&gt;regenerate: true&lt;/code&gt; in the front-matter of a document will force Jekyll to regenerate it regardless of whether it has been modified. Note that this will generate the specified document only; references to other documents&amp;rsquo; contents will not work since they won&amp;rsquo;t be re-rendered.</source>
          <target state="translated">이러한 단점 중 일부를 해결하기 위해 재생성 (regenerate)을 두십시오. 문서의 맨 앞면에 &lt;code&gt;regenerate: true&lt;/code&gt; 인 경우 Jekyll은 수정 여부에 관계없이 문서를 재생성해야합니다. 지정된 문서 만 생성됩니다. 다른 문서의 내용에 대한 참조는 다시 렌더링되지 않으므로 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="15ae0b67f09259f2d22e8353fd7ddcc782a0de42" translate="yes" xml:space="preserve">
          <source>To render a code block with syntax highlighting, surround your code as follows:</source>
          <target state="translated">구문 강조 표시로 코드 블록을 렌더링하려면 다음과 같이 코드를 둘러싸십시오.</target>
        </trans-unit>
        <trans-unit id="0140d190cef30ac07da886a289bc7350ec5109ff" translate="yes" xml:space="preserve">
          <source>To replace layouts or includes in your theme, make a copy in your &lt;code&gt;_layouts&lt;/code&gt; or &lt;code&gt;_includes&lt;/code&gt; directory of the specific file you wish to modify, or create the file from scratch giving it the same name as the file you wish to override.</source>
          <target state="translated">레이아웃 또는 테마에 포함을 바꾸려면 수정하려는 특정 파일의 &lt;code&gt;_layouts&lt;/code&gt; 또는 &lt;code&gt;_includes&lt;/code&gt; 디렉토리에 복사본을 만들거나 재정의하려는 파일과 동일한 이름을 지정하여 처음부터 파일을 만드십시오.</target>
        </trans-unit>
        <trans-unit id="2cfa7c7c92dda1377ee7bbc586052cf5e6f396cc" translate="yes" xml:space="preserve">
          <source>To run the latest Ruby version you need to install it through &lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew&lt;/a&gt;.</source>
          <target state="translated">최신 Ruby 버전을 실행하려면 &lt;a href=&quot;https://brew.sh&quot;&gt;Homebrew를&lt;/a&gt; 통해 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="144371a46b19101623955b58d3ec9bb40e6f19b2" translate="yes" xml:space="preserve">
          <source>To safeguard situations where users don&amp;rsquo;t supply a value for the parameter, you can use &lt;a href=&quot;https://shopify.github.io/liquid/filters/default/&quot;&gt;Liquid&amp;rsquo;s default filter&lt;/a&gt;.</source>
          <target state="translated">사용자가 매개 변수에 값을 제공하지 않는 상황을 보호하기 위해 &lt;a href=&quot;https://shopify.github.io/liquid/filters/default/&quot;&gt;Liquid의 기본 필터를&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="64dfd9c57797f4e911f0a43d68046b126514e5a3" translate="yes" xml:space="preserve">
          <source>To see the &lt;strong&gt;live site&lt;/strong&gt;:</source>
          <target state="translated">&lt;strong&gt;라이브 사이트&lt;/strong&gt; 를 보려면 :</target>
        </trans-unit>
        <trans-unit id="0874396740fec1c367aeea99d249068bc0174bf2" translate="yes" xml:space="preserve">
          <source>To set a global permalink, you use the &lt;code&gt;permalink&lt;/code&gt; variable in &lt;code&gt;_config.yml&lt;/code&gt;. You can use placeholders to your desired output. For example:</source>
          <target state="translated">전역 영구 링크를 설정하려면 &lt;code&gt;_config.yml&lt;/code&gt; 에서 &lt;code&gt;permalink&lt;/code&gt; 변수 를 사용합니다 . 원하는 출력에 자리 표시자를 사용할 수 있습니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="24cf25449da1ed70a470c7b8d913b04e848ae7ab" translate="yes" xml:space="preserve">
          <source>To set up a collection you need to tell Jekyll about it. Jekyll configuration happens in a file called &lt;code&gt;_config.yml&lt;/code&gt; (by default).</source>
          <target state="translated">컬렉션을 설정하려면 Jekyll에게 컬렉션에 대해 알려야합니다. Jekyll 구성은 &lt;code&gt;_config.yml&lt;/code&gt; (기본값) 이라는 파일에서 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="5ca8077737fc0abd8bdd3778e25d2b37cc40bd09" translate="yes" xml:space="preserve">
          <source>To speed up the build, you should cache the gem packages created by &lt;code&gt;bundler&lt;/code&gt;. Travis has a pre-defined &lt;a href=&quot;https://docs.travis-ci.com/user/caching/#Caching-directories-(Bundler%2C-dependencies)&quot;&gt;cache strategy for this tool&lt;/a&gt; which should have all the default configs to do exactly that.</source>
          <target state="translated">빌드 속도를 높이려면 &lt;code&gt;bundler&lt;/code&gt; 에서 만든 gem 패키지를 캐시해야합니다 . Travis는 &lt;a href=&quot;https://docs.travis-ci.com/user/caching/#Caching-directories-(Bundler%2C-dependencies)&quot;&gt;이 도구에 대해&lt;/a&gt; 미리 정의 된 캐시 전략을 가지고 있으며이를 위해 모든 기본 구성이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="ce9499e26000537fbb3c8105e87098127ffd35f8" translate="yes" xml:space="preserve">
          <source>To start a new project named &lt;code&gt;my_blog&lt;/code&gt;, just run:</source>
          <target state="translated">&lt;code&gt;my_blog&lt;/code&gt; 라는 새 프로젝트를 시작하려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="21eec12399439eadc43bb09c73f5082c324a704d" translate="yes" xml:space="preserve">
          <source>To start building your project on CircleCI, all you need to do is &amp;lsquo;follow&amp;rsquo; your project from CircleCI&amp;rsquo;s website:</source>
          <target state="translated">CircleCI에서 프로젝트 빌드를 시작하려면 CircleCI 웹 사이트에서 프로젝트를 '팔로우'하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="1b35b31acc1f74b7d3433c31545028731bd3cc02" translate="yes" xml:space="preserve">
          <source>To start using collections, follow these 3 steps:</source>
          <target state="translated">컬렉션 사용을 시작하려면 다음 3 단계를 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="58576dc8c33d1faafcaa433fb4a9bdc08980c7e9" translate="yes" xml:space="preserve">
          <source>To switch part of your config settings depending on the environment, use the &lt;a href=&quot;../options/index#build-command-options&quot;&gt;build command option&lt;/a&gt;, for example &lt;code&gt;--config _config.yml,_config_development.yml&lt;/code&gt;. Settings in later files override settings in earlier files.</source>
          <target state="translated">환경에 따라 구성 설정의 일부를 전환하려면 &lt;a href=&quot;../options/index#build-command-options&quot;&gt;빌드 명령 옵션 (&lt;/a&gt; 예 : &lt;code&gt;--config _config.yml,_config_development.yml&lt;/code&gt; )을 사용하십시오 . 이후 파일의 설정은 이전 파일의 설정보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="4c5c89e555cfe8181665e573aca3cb760df19555" translate="yes" xml:space="preserve">
          <source>To use a Collection you first need to define it in your &lt;code&gt;_config.yml&lt;/code&gt;. For example here&amp;rsquo;s a collection of staff members:</source>
          <target state="translated">컬렉션을 사용하려면 먼저 &lt;code&gt;_config.yml&lt;/code&gt; 에서 정의해야합니다 . 예를 들어 다음은 직원 모음입니다.</target>
        </trans-unit>
        <trans-unit id="248551d931632d88c17c5dde9e698aa07dc367dc" translate="yes" xml:space="preserve">
          <source>To use one of the example plugins above as an illustration, here is how you&amp;rsquo;d specify these two flags:</source>
          <target state="translated">위의 예제 플러그인 중 하나를 그림으로 사용하려면 다음 두 플래그를 지정하는 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="403626465ce35b0d66ec789aad1d4c945ac7a29a" translate="yes" xml:space="preserve">
          <source>To use the currently-deployed version of the gem in your project, add the following to your &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">프로젝트에서 현재 배포 된 gem 버전을 사용하려면 &lt;code&gt;Gemfile&lt;/code&gt; 에 다음을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="d191d6d577081ef0c072993694815c724c1b12ff" translate="yes" xml:space="preserve">
          <source>To use these first you need to add them to your &lt;code&gt;Gemfile&lt;/code&gt;. If you put them in a &lt;code&gt;jekyll_plugins&lt;/code&gt; group they&amp;rsquo;ll automatically be required into Jekyll:</source>
          <target state="translated">이를 먼저 사용하려면 &lt;code&gt;Gemfile&lt;/code&gt; 에 추가해야합니다 . &lt;code&gt;jekyll_plugins&lt;/code&gt; 그룹 에 넣으면 자동으로 Jekyll에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="a57764e6639dc41d9cb7589790d2175c776da7c0" translate="yes" xml:space="preserve">
          <source>To watch the progress and see any build errors, check on the build &lt;strong&gt;status&lt;/strong&gt; using one of the following approaches:</source>
          <target state="translated">진행 상황을보고 빌드 오류를 확인 하려면 다음 접근 방식 중 하나를 사용하여 빌드 &lt;strong&gt;상태&lt;/strong&gt; 를 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc58e433367afbd26cd82d563e2ad4c7fe336e1c" translate="yes" xml:space="preserve">
          <source>Total number of Posts.</source>
          <target state="translated">총 게시물 수</target>
        </trans-unit>
        <trans-unit id="0b28c1e8a5cff208433410e41a9a59a52974349f" translate="yes" xml:space="preserve">
          <source>Total number of pages</source>
          <target state="translated">총 페이지 수</target>
        </trans-unit>
        <trans-unit id="ec02cb28209dd849ec00c43e89250ce2ee45c01f" translate="yes" xml:space="preserve">
          <source>Total number of pages.</source>
          <target state="translated">총 페이지 수</target>
        </trans-unit>
        <trans-unit id="cc3c736243e345a8af66b53ba5d532b4e1516385" translate="yes" xml:space="preserve">
          <source>Total number of posts</source>
          <target state="translated">총 게시물 수</target>
        </trans-unit>
        <trans-unit id="89e581f1b56f0e9ddaa6c57b46dc7d03c4f48a4d" translate="yes" xml:space="preserve">
          <source>Travis CI</source>
          <target state="translated">트래비스 CI</target>
        </trans-unit>
        <trans-unit id="1c86bc3039ac80dc022230c501ef0849103da6b6" translate="yes" xml:space="preserve">
          <source>Travis allows you to run any arbitrary shell script to test your site. One convention is to put all scripts for your project in the &lt;code&gt;script&lt;/code&gt; directory, and to call your test script &lt;code&gt;cibuild&lt;/code&gt;. This line is completely customizable. If your script won&amp;rsquo;t change much, you can write your test incantation here directly:</source>
          <target state="translated">Travis를 사용하면 임의의 쉘 스크립트를 실행하여 사이트를 테스트 할 수 있습니다. 한 가지 규칙은 프로젝트의 모든 스크립트를 &lt;code&gt;script&lt;/code&gt; 디렉토리에 넣고 테스트 스크립트 &lt;code&gt;cibuild&lt;/code&gt; 를 호출하는 것 입니다. 이 라인은 완전히 사용자 정의 할 수 있습니다. 스크립트가 많이 변경되지 않으면 여기에서 테스트 주문을 직접 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f0c9192db14c3e5047a2dcb1e702c2bb7a77776e" translate="yes" xml:space="preserve">
          <source>Travis bundles all gems in the &lt;code&gt;vendor&lt;/code&gt; directory on its build servers, which Jekyll will mistakenly read and explode on.</source>
          <target state="translated">Travis 는 빌드 서버 의 &lt;code&gt;vendor&lt;/code&gt; 디렉토리에 모든 gem을 번들로 제공하며 , Jekyll은 실수로 읽고 폭발합니다.</target>
        </trans-unit>
        <trans-unit id="9397ad640100c6a75f152aac24412839d898de73" translate="yes" xml:space="preserve">
          <source>Triggered at</source>
          <target state="translated">트리거</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="15a57e28ab2afedde562b2e7193be9a9ba688697" translate="yes" xml:space="preserve">
          <source>Try adding &lt;code&gt;future: true&lt;/code&gt; to your &lt;code&gt;_config.yml&lt;/code&gt; file. Are they showing up now? If they are, then you were ensnared by an issue with the way Ruby parses times. Each of your posts is being read in a different timezone than you might expect and, when compared to the computer&amp;rsquo;s current time, is &amp;ldquo;in the future.&amp;rdquo; The fix for this is to add &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_UTC_time_offsets&quot;&gt;a timezone offset&lt;/a&gt; to each post (and make sure you remove &lt;code&gt;future: true&lt;/code&gt; from your &lt;code&gt;_config.yml&lt;/code&gt; file). If you&amp;rsquo;re writing from California, for example, you would change this:</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 파일에 &lt;code&gt;future: true&lt;/code&gt; 를 추가 하십시오. 그들은 지금 나타나고 있습니까? 그렇다면 루비가 시간을 파싱하는 방식에 관한 문제로 당신을 화나게했습니다. 각 게시물은 예상 한 것과 다른 시간대로 읽히고 있으며 컴퓨터의 현재 시간과 비교할 때 &quot;미래&quot;입니다. 이에 대한 수정은 각 게시물에 &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_UTC_time_offsets&quot;&gt;시간대 오프셋&lt;/a&gt; 을 추가 하는 것입니다 (그리고 &lt;code&gt;_config.yml&lt;/code&gt; 파일 에서 &lt;code&gt;future: true&lt;/code&gt; 를 제거해야 합니다). 예를 들어 캘리포니아에서 글을 쓰는 경우 다음과 같이 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="acf85bf958f73812f65be385a56aca3093440517" translate="yes" xml:space="preserve">
          <source>Try using the include tag to add the navigation to &lt;code&gt;_layouts/default.html&lt;/code&gt;:</source>
          <target state="translated">include 태그를 사용하여 &lt;code&gt;_layouts/default.html&lt;/code&gt; 에 탐색을 추가해보십시오 .</target>
        </trans-unit>
        <trans-unit id="2701a94c0eb55cbd958a87dff3e959673ff1bf53" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
          <target state="translated">Tutorial</target>
        </trans-unit>
        <trans-unit id="fd4aff70bfe253483081c7d3e7c585e079122f7d" translate="yes" xml:space="preserve">
          <source>Typically you&amp;rsquo;ll use &lt;code&gt;jekyll serve&lt;/code&gt; while developing locally and &lt;code&gt;jekyll build&lt;/code&gt; when you need to generate the site for production.</source>
          <target state="translated">일반적으로 로컬에서 개발 &lt;code&gt;jekyll serve&lt;/code&gt; 동안 jekyll serve 를 사용 하고 프로덕션 용 사이트를 생성해야 &lt;code&gt;jekyll build&lt;/code&gt; 때 jekyll 빌드 를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="baeece408effbbd5a4a9976616d35d9b7cecbf32" translate="yes" xml:space="preserve">
          <source>URL Template</source>
          <target state="translated">URL 템플릿</target>
        </trans-unit>
        <trans-unit id="5514a5e82e67e0b2e0c6eb04de22b5ee4892512a" translate="yes" xml:space="preserve">
          <source>UTF-8 Character Encoding Warning</source>
          <target state="translated">UTF-8 문자 인코딩 경고</target>
        </trans-unit>
        <trans-unit id="a1c366cacdc2e4f2ca5e9f514afccf66ad1dfa3e" translate="yes" xml:space="preserve">
          <source>Ubuntu</source>
          <target state="translated">Ubuntu</target>
        </trans-unit>
        <trans-unit id="1a703bb3540af03fd17a26811925888f989e5055" translate="yes" xml:space="preserve">
          <source>Under the current implementation, incremental regeneration will only generate a document or page if either it, or one of its dependencies, is modified. Currently, the only types of dependencies tracked are includes (using the &lt;code&gt;{% include %}&lt;/code&gt; tag) and layouts. This means that plain references to other documents (for example, the common case of iterating over &lt;code&gt;site.posts&lt;/code&gt; in a post listings page) will not be detected as a dependency.</source>
          <target state="translated">현재 구현에서 증분 재생성은 문서 또는 페이지 중 하나 또는 종속 항목 중 하나가 수정 된 경우에만 문서 또는 페이지를 생성합니다. 현재 추적되는 유일한 유형의 종속성은 포함 ( &lt;code&gt;{% include %}&lt;/code&gt; 태그 사용) 및 레이아웃입니다. 이는 다른 문서 (예 : 게시물 목록 페이지에서 &lt;code&gt;site.posts&lt;/code&gt; 를 반복하는 경우)에 대한 일반적인 참조는 종속성으로 감지되지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="b792a850dc679dc088bd75a5fe8cd002ee68affe" translate="yes" xml:space="preserve">
          <source>Understanding gem-based themes</source>
          <target state="translated">보석 기반 테마 이해</target>
        </trans-unit>
        <trans-unit id="97de3a1a64a0c29dcddc995d062054ccf92a4429" translate="yes" xml:space="preserve">
          <source>Unlike posts, drafts don&amp;rsquo;t have a date, since they haven&amp;rsquo;t been published yet. Rather than naming your draft something like &lt;code&gt;2013-07-01-my-draft-post.md&lt;/code&gt;, simply name the file what you&amp;rsquo;d like your post to eventually be titled, here &lt;code&gt;my-draft-post.md&lt;/code&gt;.</source>
          <target state="translated">게시물과 달리 초안은 아직 게시되지 않았기 때문에 날짜가 없습니다. &lt;code&gt;2013-07-01-my-draft-post.md&lt;/code&gt; 와 같이 초안의 이름을 지정하는 대신 게시물 제목을 지정할 파일 이름을 간단히 &lt;code&gt;my-draft-post.md&lt;/code&gt; 로 지정 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d72504ccafa49f87db4beb43d02a1e00f367b998" translate="yes" xml:space="preserve">
          <source>Unlike posts, pages by default mimic the source directory structure exactly. (The only exception is if your page has a &lt;code&gt;permalink&lt;/code&gt; declared its front matter &amp;mdash; in that case, the structure honors the permalink setting instead of the source folder structure.)</source>
          <target state="translated">게시물과 달리 기본적으로 페이지는 소스 디렉토리 구조를 정확하게 모방합니다. 페이지에 &lt;code&gt;permalink&lt;/code&gt; 선언 된 경우는 예외입니다.이 경우 구조는 소스 폴더 구조 대신 퍼머 링크 설정을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="0aadd1b104d2e4934b12d78f769e1a69fb8c9b04" translate="yes" xml:space="preserve">
          <source>Unlike tags, categories for posts can also be defined by a post&amp;rsquo;s file path. Any directory above &lt;code&gt;_post&lt;/code&gt; will be read-in as a category. For example, if a post is at path &lt;code&gt;movies/horror/_posts/2019-05-21-bride-of-chucky.markdown&lt;/code&gt;, then &lt;code&gt;movies&lt;/code&gt; and &lt;code&gt;horror&lt;/code&gt; are automatically registered as categories for that post.</source>
          <target state="translated">태그와 달리 게시물의 카테고리는 게시물의 파일 경로로 정의 할 수도 있습니다. &lt;code&gt;_post&lt;/code&gt; 위의 모든 디렉토리 는 카테고리로 읽혀집니다. 예를 들어, 게시물이 &lt;code&gt;movies/horror/_posts/2019-05-21-bride-of-chucky.markdown&lt;/code&gt; 경로 에있는 경우 &lt;code&gt;movies&lt;/code&gt; 와 &lt;code&gt;horror&lt;/code&gt; 가 해당 게시물의 카테고리로 자동 등록됩니다.</target>
        </trans-unit>
        <trans-unit id="545ca46cd01cb816953840b4a0071ecc6ecd2f9e" translate="yes" xml:space="preserve">
          <source>Unlike user and organization Pages, Project Pages are kept in the same repository as the project they are for, except that the website content is stored in a specially named &lt;code&gt;gh-pages&lt;/code&gt; branch or in a &lt;code&gt;docs&lt;/code&gt; folder on the &lt;code&gt;master&lt;/code&gt; branch. The content will be rendered using Jekyll, and the output will become available under a subpath of your user pages subdomain, such as &lt;code&gt;username.github.io/project&lt;/code&gt; (unless a custom domain is specified).</source>
          <target state="translated">사용자 및 조직 페이지와 달리 프로젝트 페이지는 웹 사이트 컨텐츠가 특수하게 이름 지정된 &lt;code&gt;gh-pages&lt;/code&gt; 분기 또는 &lt;code&gt;master&lt;/code&gt; 분기 의 &lt;code&gt;docs&lt;/code&gt; 폴더에 저장된다는 점을 제외하고는 프로젝트와 동일한 저장소에 유지됩니다 . 콘텐츠는 Jekyll을 사용하여 렌더링되며 &lt;code&gt;username.github.io/project&lt;/code&gt; 와 같은 사용자 페이지 하위 도메인의 하위 경로에서 출력을 사용할 수있게됩니다 (사용자 지정 도메인을 지정하지 않은 경우).</target>
        </trans-unit>
        <trans-unit id="b6d4f2a533ee0731fb3a72d4f9b9302208764871" translate="yes" xml:space="preserve">
          <source>Updates in the infrastructure of Ruby may cause SSL errors when attempting to use &lt;code&gt;gem install&lt;/code&gt; with versions of the RubyGems package older than 2.6. (The RubyGems package installed via the Chocolatey tool is version 2.3) If you have installed an older version, you can update the RubyGems package using the directions &lt;a href=&quot;http://guides.rubygems.org/ssl-certificate-update/#installing-using-update-packages&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">Ruby 인프라에서 업데이트하면 2.6 이전의 RubyGems 패키지 버전에서 &lt;code&gt;gem install&lt;/code&gt; 를 사용하려고 할 때 SSL 오류가 발생할 수 있습니다 . (초콜릿 도구를 통해 설치된 RubyGems 패키지는 버전 2.3입니다.) 이전 버전을 설치 한 경우 &lt;a href=&quot;http://guides.rubygems.org/ssl-certificate-update/#installing-using-update-packages&quot;&gt;여기에&lt;/a&gt; 있는 지시 사항을 사용하여 RubyGems 패키지를 업데이트 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="909248e2ddc409547b397be43855705e800e8d1b" translate="yes" xml:space="preserve">
          <source>Upgrading from 0.x to 2.x</source>
          <target state="translated">0.x에서 2.x로 업그레이드</target>
        </trans-unit>
        <trans-unit id="05143330adf4bd1d63ea88cbc86dda9682b30774" translate="yes" xml:space="preserve">
          <source>Upgrading from 2.x to 3.x</source>
          <target state="translated">2.x에서 3.x로 업그레이드</target>
        </trans-unit>
        <trans-unit id="1bf2835477a721c36eb5b31c86828bbf673c5748" translate="yes" xml:space="preserve">
          <source>Upgrading from an older version of Jekyll? A few things have changed in 1.0 and 2.0 that you&amp;rsquo;ll want to know about.</source>
          <target state="translated">Jekyll의 이전 버전에서 업그레이드 하시겠습니까? 알고 싶은 1.0과 2.0에서 몇 가지 사항이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="22b40ca09d6fac12069711da0205a54758807a9a" translate="yes" xml:space="preserve">
          <source>Upgrading from an older version of Jekyll? A few things have changed in Jekyll 3 that you&amp;rsquo;ll want to know about.</source>
          <target state="translated">Jekyll의 이전 버전에서 업그레이드 하시겠습니까? Jekyll 3에서 알고 싶은 몇 가지 사항이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="0bb18642b70b9f8a9c12ccf39487328f306b8e19" translate="yes" xml:space="preserve">
          <source>Usage</source>
          <target state="translated">Usage</target>
        </trans-unit>
        <trans-unit id="9c47a7b50dcd3c6cc5bdd576e545a656263df410" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://kickster.nielsenramon.com/&quot;&gt;Kickster&lt;/a&gt; for automated deploys to GitHub Pages when using unsupported plugins on GitHub Pages.</source>
          <target state="translated">GitHub 페이지에서 지원되지 않는 플러그인을 사용할 때 GitHub 페이지에 자동 배포 하려면 &lt;a href=&quot;http://kickster.nielsenramon.com/&quot;&gt;Kickster&lt;/a&gt; 를 사용 하세요 .</target>
        </trans-unit>
        <trans-unit id="096fee79b9f0c89d2b4ab3a2c04b40c75ecd8c40" translate="yes" xml:space="preserve">
          <source>Use &lt;a href=&quot;http://kickster.nielsenramon.com/&quot;&gt;Kickster&lt;/a&gt; for easy (automated) deploys to GitHub Pages when using unsupported plugins on GitHub Pages.</source>
          <target state="translated">GitHub 페이지에서 지원되지 않는 플러그인을 사용할 때 GitHub 페이지에 쉽게 (자동화 된) 배포를 하려면 &lt;a href=&quot;http://kickster.nielsenramon.com/&quot;&gt;Kickster&lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="eb25969bef65ffbd2fe8ab68d4c32ecba0b02013" translate="yes" xml:space="preserve">
          <source>Use Liquid</source>
          <target state="translated">액체 사용</target>
        </trans-unit>
        <trans-unit id="e451a98cc33d26bec84c90504d5c78d00b893270" translate="yes" xml:space="preserve">
          <source>Use a saas service as a backend for forms (contact forms, hiring forms, etc.)</source>
          <target state="translated">양식 (연락처 양식, 채용 양식 등)의 백엔드로 saas 서비스를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8682df8b53d76e1621156d90960098f918c9295c" translate="yes" xml:space="preserve">
          <source>Use a specific environment value in the build.</source>
          <target state="translated">빌드에서 특정 환경 값을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="3ae373a2346802cbc63e8e688579eacdb6a50f24" translate="yes" xml:space="preserve">
          <source>Use front matter</source>
          <target state="translated">머리말 사용</target>
        </trans-unit>
        <trans-unit id="5d0dd76d0469a1210eeff6c91442818635b4e05d" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../liquid/tags/index#linking-to-posts&quot;&gt;&lt;code&gt;post_url&lt;/code&gt;&lt;/a&gt; tag to link to other posts without having to worry about the URLs breaking when the site permalink style changes.</source>
          <target state="translated">&lt;a href=&quot;../liquid/tags/index#linking-to-posts&quot;&gt; &lt;code&gt;post_url&lt;/code&gt; &lt;/a&gt; 태그를 사용하면 사이트 영구 링크 스타일이 변경 될 때 URL이 깨지는 것에 대해 걱정할 필요없이 다른 게시물에 링크 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fd865684d3f48e47d1641f649f11c4e27ad3acc" translate="yes" xml:space="preserve">
          <source>Use the &lt;a href=&quot;../templates/index#linking-to-posts&quot;&gt;&lt;code&gt;post_url&lt;/code&gt;&lt;/a&gt; tag to link to other posts without having to worry about the URLs breaking when the site permalink style changes.</source>
          <target state="translated">사이트 영구 링크 스타일이 변경 될 때 URL이 깨질 염려없이 &lt;a href=&quot;../templates/index#linking-to-posts&quot;&gt; &lt;code&gt;post_url&lt;/code&gt; &lt;/a&gt; 태그를 사용하여 다른 게시물에 연결 하십시오 .</target>
        </trans-unit>
        <trans-unit id="773cfc18b556d4be58999872955618132b94fd19" translate="yes" xml:space="preserve">
          <source>Useful Guides</source>
          <target state="translated">유용한 가이드</target>
        </trans-unit>
        <trans-unit id="7b066626401d6e28ca2ce799a19b089172de77f5" translate="yes" xml:space="preserve">
          <source>User and Organization Pages</source>
          <target state="translated">사용자 및 조직 페이지</target>
        </trans-unit>
        <trans-unit id="638cea49d54ba3459c93a9d152a177eb38a9fc71" translate="yes" xml:space="preserve">
          <source>User and organization pages live in a special GitHub repository dedicated to only the GitHub Pages files. This repository must be named after the account name. For example, &lt;a href=&quot;https://github.com/mojombo/mojombo.github.io&quot;&gt;@mojombo&amp;rsquo;s user page repository&lt;/a&gt; has the name &lt;code&gt;mojombo.github.io&lt;/code&gt;.</source>
          <target state="translated">사용자 및 조직 페이지는 GitHub 페이지 파일 전용의 특별한 GitHub 저장소에 있습니다. 이 저장소는 계정 이름을 따라 이름을 지정해야합니다. 예를 들어 &lt;a href=&quot;https://github.com/mojombo/mojombo.github.io&quot;&gt;@mojombo의 사용자 페이지 저장소&lt;/a&gt; 이름은 &lt;code&gt;mojombo.github.io&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2879f41adff9c879803b794b4be50f26399523c6" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../../front-matter/index&quot;&gt;front matter&lt;/a&gt; is one way that you can specify configuration in the pages and posts for your site. Setting things like a default layout, or customizing the title, or specifying a more precise date/time for the post can all be added to your page or post front matter.</source>
          <target state="translated">사용 &lt;a href=&quot;../../front-matter/index&quot;&gt;서문 것은&lt;/a&gt; 당신이 당신의 사이트의 페이지와 게시물에 구성을 지정할 수있는 한 가지 방법입니다. 기본 레이아웃 설정, 제목 사용자 지정, 게시물에 대한보다 정확한 날짜 / 시간 지정 등은 모두 페이지 또는 게시물 머리말에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8b8cc777f7ee9ffe1de0675875671539b6195593" translate="yes" xml:space="preserve">
          <source>Using &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; is one way that you can specify configuration in the pages and posts for your site. Setting things like a default layout, or customizing the title, or specifying a more precise date/time for the post can all be added to your page or post front matter.</source>
          <target state="translated">&lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter를&lt;/a&gt; 사용하면 사이트의 페이지 및 게시물에서 구성을 지정할 수 있습니다. 기본 레이아웃 또는 제목을 사용자 정의하거나 게시물에 대해보다 정확한 날짜 / 시간을 지정하는 등의 작업을 페이지 나 게시물에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be1f3c61b36f55bbcc1ea434f645e510e4aee131" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;html-proofer&lt;/code&gt;? You&amp;rsquo;ll want this environment variable. Nokogiri, used to parse HTML files in your compiled site, comes bundled with libraries which it must compile each time it is installed. Luckily, you can dramatically decrease the install time of Nokogiri by setting the environment variable &lt;code&gt;NOKOGIRI_USE_SYSTEM_LIBRARIES&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;html-proofer&lt;/code&gt; 를 사용 하십니까 ? 이 환경 변수가 필요합니다. 컴파일 된 사이트에서 HTML 파일을 구문 분석하는 데 사용되는 Nokogiri는 설치할 때마다 컴파일해야하는 라이브러리와 함께 제공됩니다. 다행히 환경 변수 &lt;code&gt;NOKOGIRI_USE_SYSTEM_LIBRARIES&lt;/code&gt; 를 &lt;code&gt;true&lt;/code&gt; 로 설정하여 Nokogiri의 설치 시간을 크게 줄일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a7b75b7c7ceed347297e7bf514ddd87db5aae092" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;null&lt;/code&gt; will produce a file without using a layout file. However this is overridden if the file is a post/document and has a layout defined in the &lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt; frontmatter defaults&lt;/a&gt;.</source>
          <target state="translated">사용 &lt;code&gt;null&lt;/code&gt; 레이아웃 파일을 사용하지 않고 파일을 생성합니다. 그러나 파일이 포스트 / 문서이고 레이아웃이 &lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;frontmatter defaults에&lt;/a&gt; 정의되어있는 경우 이는 재정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="d6f2463a9075b0f7689a7874a7137d770b1d7266" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;null&lt;/code&gt; will produce a file without using a layout file. This is overridden if the file is a post/document and has a layout defined in the &lt;a href=&quot;../configuration/front-matter-defaults/index&quot;&gt; front matter defaults&lt;/a&gt;.</source>
          <target state="translated">사용 &lt;code&gt;null&lt;/code&gt; 레이아웃 파일을 사용하지 않고 파일을 생성합니다. 이것은 파일이 포스트 / 문서이고 &lt;a href=&quot;../configuration/front-matter-defaults/index&quot;&gt;머리말 기본값에&lt;/a&gt; 정의 된 레이아웃이있는 경우 재정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="cae77f61de71cf7fdf27a27143729bc2b77cf373" translate="yes" xml:space="preserve">
          <source>Using &lt;code&gt;page.url&lt;/code&gt; you can check if each link is the current page and color it red if true:</source>
          <target state="translated">&lt;code&gt;page.url&lt;/code&gt; 을 사용하여 각 링크가 현재 페이지인지 확인하고 true 인 경우 빨간색으로 색상을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e4df7af977be755393dd9928014f3ec23314f2c" translate="yes" xml:space="preserve">
          <source>Using CSS, JS, images and other assets is straightforward with Jekyll. Place them in your site folder and they&amp;rsquo;ll copy across to the built site.</source>
          <target state="translated">CSS, JS, 이미지 및 기타 자산을 사용하는 것은 Jekyll에서 간단합니다. 사이트 폴더에 배치하면 빌드 된 사이트로 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="6e7a25893892346ac69627083d8abdaa2fd89d87" translate="yes" xml:space="preserve">
          <source>Using Collections</source>
          <target state="translated">컬렉션 사용</target>
        </trans-unit>
        <trans-unit id="fa5cc6724fd35094e6e8e7bdf78679d69ef2f5d3" translate="yes" xml:space="preserve">
          <source>Using Pygments has been deprecated and is not supported in Jekyll 4; the configuration setting &lt;code&gt;highlighter: pygments&lt;/code&gt; now automatically falls back to using &lt;em&gt;Rouge&lt;/em&gt; which is written in Ruby and 100% compatible with stylesheets for Pygments.</source>
          <target state="translated">Pygments 사용은 더 이상 사용되지 않으며 Jekyll 4에서는 지원되지 않습니다. 구성 설정 &lt;code&gt;highlighter: pygments&lt;/code&gt; 이제 Ruby로 작성되었으며 Pygments 용 스타일 시트와 100 % 호환되는 &lt;em&gt;Rouge&lt;/em&gt; 를 사용 하는 것으로 자동으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="51e5c6270d62dac1e66168eb5d60e91aca3c1d38" translate="yes" xml:space="preserve">
          <source>Using a layout is a much better choice. Layouts are templates that wrap around your content. They live in a directory called &lt;code&gt;_layouts&lt;/code&gt;.</source>
          <target state="translated">레이아웃을 사용하는 것이 훨씬 더 나은 선택입니다. 레이아웃은 콘텐츠를 감싸는 템플릿입니다. &lt;code&gt;_layouts&lt;/code&gt; 라는 디렉토리에 있습니다.</target>
        </trans-unit>
        <trans-unit id="3a8b88abb372b1dde878f41986aeb701b49fbf7c" translate="yes" xml:space="preserve">
          <source>Using hooks, your plugin can exercise fine-grained control over various aspects of the build process. If your plugin defines any hooks, Jekyll will call them at pre-defined points.</source>
          <target state="translated">플러그인은 후크를 사용하여 빌드 프로세스의 다양한 측면을 세밀하게 제어 할 수 있습니다. 플러그인이 후크를 정의하면 Jekyll은 미리 정의 된 지점에서 호출합니다.</target>
        </trans-unit>
        <trans-unit id="af6042d577161be6cec4ae8b363cbde0f233f6c1" translate="yes" xml:space="preserve">
          <source>Using this setup, you might run the following command:</source>
          <target state="translated">이 설정을 사용하여 다음 명령을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e43c2d81fd4e70bb80021de375b1e2bdd30979b3" translate="yes" xml:space="preserve">
          <source>Using variables names for the include file</source>
          <target state="translated">포함 파일에 변수 이름 사용</target>
        </trans-unit>
        <trans-unit id="2647e87439eefa36ca129f4a554faa43e08a0935" translate="yes" xml:space="preserve">
          <source>Using your Rails layouts in Jekyll</source>
          <target state="translated">Jekyll에서 Rails 레이아웃 사용</target>
        </trans-unit>
        <trans-unit id="19de69cb601f53a4ea7af22a65c71ae63251365c" translate="yes" xml:space="preserve">
          <source>Variable</source>
          <target state="translated">Variable</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="4a7b27e96ba9167213575203eb7235117dff5e71" translate="yes" xml:space="preserve">
          <source>Vercel</source>
          <target state="translated">Vercel</target>
        </trans-unit>
        <trans-unit id="7c570256409f16e7b5adf5655387cd0cac895a44" translate="yes" xml:space="preserve">
          <source>Version 2.0 of the TZInfo library has introduced a change in how timezone offsets are calculated. This will result in incorrect date and time for your posts when the site is built with Jekyll 3.x on Windows.</source>
          <target state="translated">TZInfo 라이브러리 버전 2.0에서는 시간대 오프셋 계산 방법이 변경되었습니다. 이로 인해 사이트가 Windows에서 Jekyll 3.x로 빌드 될 때 게시물의 날짜와 시간이 잘못됩니다.</target>
        </trans-unit>
        <trans-unit id="660751aa27943edcbc09568493b8c9907f535d69" translate="yes" xml:space="preserve">
          <source>View your site at the &lt;strong&gt;URL&lt;/strong&gt;. Make sure the &lt;code&gt;timeago&lt;/code&gt; filter works as expected.</source>
          <target state="translated">&lt;strong&gt;URL&lt;/strong&gt; 에서 사이트를 봅니다. &lt;code&gt;timeago&lt;/code&gt; 필터가 예상대로 작동 하는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="4e74b3b07ba93d02c13bfae349677b5d3685bb15" translate="yes" xml:space="preserve">
          <source>Visit the &amp;lsquo;Add Projects&amp;rsquo; page</source>
          <target state="translated">'프로젝트 추가'페이지 방문</target>
        </trans-unit>
        <trans-unit id="b808a2f9c64e85ebf5188927f11a353e1e040232" translate="yes" xml:space="preserve">
          <source>Visit the &amp;lsquo;Add Projects&amp;rsquo; page: &lt;a href=&quot;https://circleci.com/add-projects&quot;&gt;https://circleci.com/add-projects&lt;/a&gt;</source>
          <target state="translated">'프로젝트 추가'페이지를 방문하십시오 : &lt;a href=&quot;https://circleci.com/add-projects&quot;&gt;https://circleci.com/add-projects&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="9607bc996ca4cf8cae14bce3c3bd9e430565986d" translate="yes" xml:space="preserve">
          <source>WEBrick Options</source>
          <target state="translated">WEBrick 옵션</target>
        </trans-unit>
        <trans-unit id="de23d55b8683a82f11ae68b81584f6dcf4d06574" translate="yes" xml:space="preserve">
          <source>Want to get a new Jekyll site up and running quickly? Simply run &lt;code&gt;jekyll new SITENAME&lt;/code&gt; to create a new folder with a bare bones Jekyll site.</source>
          <target state="translated">새로운 Jekyll 사이트를 신속하게 구축하고 운영하고 싶으십니까? &lt;code&gt;jekyll new SITENAME&lt;/code&gt; 을 실행 하여 베어 본 Jekyll 사이트가있는 새 폴더를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="11debc6767149aaf55dfe56efff8059dcc88970d" translate="yes" xml:space="preserve">
          <source>Warnings help you not blow things up</source>
          <target state="translated">경고는 물건을 날려 버리지 않도록 도와줍니다.</target>
        </trans-unit>
        <trans-unit id="1490797e67b2964af055f97bda5cc0293b386670" translate="yes" xml:space="preserve">
          <source>Watching and Serving</source>
          <target state="translated">보고 봉사</target>
        </trans-unit>
        <trans-unit id="9cac0f4335385347033e4ff1ace89bef3cefcb8a" translate="yes" xml:space="preserve">
          <source>Ways to contribute</source>
          <target state="translated">기여하는 방법</target>
        </trans-unit>
        <trans-unit id="6a4f98af4fb30ff252d04a1e1d08e48e8d6067cb" translate="yes" xml:space="preserve">
          <source>We can now use the tag block anywhere:</source>
          <target state="translated">이제 어디서나 태그 블록을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cefa7e66da160b37c7184b5c6ec0e86e3eb69d9b" translate="yes" xml:space="preserve">
          <source>We dropped a number of dependencies the Core Team felt were optional. As such, in 3.0, they must be explicitly installed and included if you use any of the features. They are:</source>
          <target state="translated">우리는 핵심 팀이 선택 사항이라고 생각한 많은 의존성을 제거했습니다. 따라서 3.0에서는 기능을 사용하는 경우 명시 적으로 설치하고 포함해야합니다. 그들은:</target>
        </trans-unit>
        <trans-unit id="2b23d8741df88636c34f34918f6255a42821035f" translate="yes" xml:space="preserve">
          <source>We have guides for the following providers:</source>
          <target state="translated">다음 공급자를위한 가이드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4dcb4cdb60dc66a83cb696d744cd54e4c7fe55de" translate="yes" xml:space="preserve">
          <source>We only cover RubyInstaller-2.4 and newer here. Older versions need to &lt;a href=&quot;https://github.com/oneclick/rubyinstaller/wiki/Development-Kit&quot;&gt;install the Devkit&lt;/a&gt; manually.</source>
          <target state="translated">여기서는 RubyInstaller-2.4 이상 만 다룹니다. 이전 버전 &lt;a href=&quot;https://github.com/oneclick/rubyinstaller/wiki/Development-Kit&quot;&gt;은 Devkit을&lt;/a&gt; 수동으로 설치 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8d69d3de6d3a6f247a56f0181652ed1638539a8e" translate="yes" xml:space="preserve">
          <source>We provide by default &lt;code&gt;Content-Type&lt;/code&gt; and &lt;code&gt;Cache-Control&lt;/code&gt; response headers: one dynamic in order to specify the nature of the data being served, the other static in order to disable caching so that you don&amp;rsquo;t have to fight with Chrome&amp;rsquo;s aggressive caching when you are in development mode.</source>
          <target state="translated">Google은 기본적으로 &lt;code&gt;Content-Type&lt;/code&gt; 및 &lt;code&gt;Cache-Control&lt;/code&gt; 응답 헤더를 제공합니다. 하나는 제공되는 데이터의 특성을 지정하기위한 동적이고 다른 하나는 캐싱을 비활성화하기 위해 정적이며 다른 경우에는 Chrome의 적극적인 캐싱과 싸울 필요가 없습니다. 개발 모드에 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae11c504dc21d560124712f5712708ce6e35bc7f" translate="yes" xml:space="preserve">
          <source>We recommend not installing Ruby gems globally to avoid file permissions problems and using &lt;code&gt;sudo&lt;/code&gt;.</source>
          <target state="translated">We recommend not installing Ruby gems globally to avoid file permissions problems and using &lt;code&gt;sudo&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e10df18265ed8f7be61a257bdb224ce75b623cbd" translate="yes" xml:space="preserve">
          <source>We recommend setting up Jekyll with a gem-based theme but if you want to start with a blank slate, use &lt;code&gt;jekyll new myblog --blank&lt;/code&gt;</source>
          <target state="translated">보석 기반 테마로 Jekyll을 설정하는 것이 좋지만 빈 슬레이트로 시작하려면 &lt;code&gt;jekyll new myblog --blank&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1cd12ae19e173939471176fb1023207de0f2820d" translate="yes" xml:space="preserve">
          <source>We recommend using a &lt;a href=&quot;../../ruby-101/index#gems&quot;&gt;gem&lt;/a&gt; for your plugin. This will help you manage dependencies, keep separation from your site source code and allow you to share functionality across multiple projects. For tips on creating a gem take a look at the &lt;a href=&quot;https://guides.rubygems.org/make-your-own-gem/&quot;&gt;Ruby gems guide&lt;/a&gt; or look through the source code of an existing plugin such as &lt;a href=&quot;https://github.com/jekyll/jekyll-feed&quot;&gt;jekyll-feed&lt;/a&gt;.</source>
          <target state="translated">We recommend using a &lt;a href=&quot;../../ruby-101/index#gems&quot;&gt;gem&lt;/a&gt; for your plugin. This will help you manage dependencies, keep separation from your site source code and allow you to share functionality across multiple projects. For tips on creating a gem take a look at the &lt;a href=&quot;https://guides.rubygems.org/make-your-own-gem/&quot;&gt;Ruby gems guide&lt;/a&gt; or look through the source code of an existing plugin such as &lt;a href=&quot;https://github.com/jekyll/jekyll-feed&quot;&gt;jekyll-feed&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="35820cc552574c444b93df92294456e721d3748e" translate="yes" xml:space="preserve">
          <source>We set a reference to a secret &lt;strong&gt;environment variable&lt;/strong&gt; for the action to use. The &lt;code&gt;JEKYLL_PAT&lt;/code&gt; is a &lt;em&gt;Personal Access Token&lt;/em&gt; and is detailed in the next section.</source>
          <target state="translated">We set a reference to a secret &lt;strong&gt;environment variable&lt;/strong&gt; for the action to use. The &lt;code&gt;JEKYLL_PAT&lt;/code&gt; is a &lt;em&gt;Personal Access Token&lt;/em&gt; and is detailed in the next section.</target>
        </trans-unit>
        <trans-unit id="9f923618ab558ad434c18020017f4592de3b14af" translate="yes" xml:space="preserve">
          <source>We specify our selected &lt;strong&gt;action&lt;/strong&gt; and &lt;strong&gt;version number&lt;/strong&gt; using &lt;code&gt;helaili/jekyll-action@2.0.0&lt;/code&gt;. This handles the build and deploy.</source>
          <target state="translated">We specify our selected &lt;strong&gt;action&lt;/strong&gt; and &lt;strong&gt;version number&lt;/strong&gt; using &lt;code&gt;helaili/jekyll-action@2.0.0&lt;/code&gt; . This handles the build and deploy.</target>
        </trans-unit>
        <trans-unit id="948c32bf8e2ded54c25b335c57444b1655ee8e7e" translate="yes" xml:space="preserve">
          <source>We therefore recommend that you lock the Timezone library to version 1.2 and above by listing &lt;code&gt;gem 'tzinfo', '~&amp;gt; 1.2'&lt;/code&gt; in your &lt;code&gt;Gemfile&lt;/code&gt;.</source>
          <target state="translated">We therefore recommend that you lock the Timezone library to version 1.2 and above by listing &lt;code&gt;gem 'tzinfo', '~&amp;gt; 1.2'&lt;/code&gt; in your &lt;code&gt;Gemfile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa5ea83ac7eb86b707e0b11cc6e710f95b869c06" translate="yes" xml:space="preserve">
          <source>We trigger the build using &lt;strong&gt;on.push&lt;/strong&gt; condition for &lt;code&gt;master&lt;/code&gt; branch only &amp;mdash; this prevents the Action from overwriting the &lt;code&gt;gh-pages&lt;/code&gt; branch on any feature branch pushes.</source>
          <target state="translated">We trigger the build using &lt;strong&gt;on.push&lt;/strong&gt; condition for &lt;code&gt;master&lt;/code&gt; branch only &amp;mdash; this prevents the Action from overwriting the &lt;code&gt;gh-pages&lt;/code&gt; branch on any feature branch pushes.</target>
        </trans-unit>
        <trans-unit id="04230319e799b4b7634c53f6342e7d1f25c1085d" translate="yes" xml:space="preserve">
          <source>We&amp;rsquo;re only going to cover builds from the &lt;code&gt;master&lt;/code&gt; branch in this page. Therefore, ensure that you are working on the &lt;code&gt;master&lt;/code&gt; branch. If necessary, you may create it based on your default branch. When the Action builds your site, the contents of the &lt;em&gt;destination&lt;/em&gt; directory will be automatically pushed to the &lt;code&gt;gh-pages&lt;/code&gt; branch with a commit, ready to be used for serving.</source>
          <target state="translated">We&amp;rsquo;re only going to cover builds from the &lt;code&gt;master&lt;/code&gt; branch in this page. Therefore, ensure that you are working on the &lt;code&gt;master&lt;/code&gt; branch. If necessary, you may create it based on your default branch. When the Action builds your site, the contents of the &lt;em&gt;destination&lt;/em&gt; directory will be automatically pushed to the &lt;code&gt;gh-pages&lt;/code&gt; branch with a commit, ready to be used for serving.</target>
        </trans-unit>
        <trans-unit id="2eecab45e4680a2e5fe45a12fabd0145ca94a30f" translate="yes" xml:space="preserve">
          <source>Web Highlights and Commenting</source>
          <target state="translated">웹 하이라이트 및 코멘트</target>
        </trans-unit>
        <trans-unit id="47075c402c12714ce67f56fada2c3e3334569ed7" translate="yes" xml:space="preserve">
          <source>Web hosting providers (FTP)</source>
          <target state="translated">웹 호스팅 제공 업체 (FTP)</target>
        </trans-unit>
        <trans-unit id="3a84cd95d350a2cd018ef0ac31dbcbb8fa5c9d95" translate="yes" xml:space="preserve">
          <source>Webrick Options</source>
          <target state="translated">Webrick Options</target>
        </trans-unit>
        <trans-unit id="e7a0f79eba6367fb8543ea0774f58202409c063a" translate="yes" xml:space="preserve">
          <source>Websites typically have more than one page and this website is no different.</source>
          <target state="translated">Websites typically have more than one page and this website is no different.</target>
        </trans-unit>
        <trans-unit id="25306ae824acd62940d7172a43c23dd5d82e7564" translate="yes" xml:space="preserve">
          <source>Week number of the current year, starting with the first week having a majority of its days in January. (01..53)</source>
          <target state="translated">Week number of the current year, starting with the first week having a majority of its days in January. (01..53)</target>
        </trans-unit>
        <trans-unit id="addfad4fb9c8675984502d4cc1fcc31033a96024" translate="yes" xml:space="preserve">
          <source>Week year which may differ from the month year for up to three days at the start of January and end of December</source>
          <target state="translated">Week year which may differ from the month year for up to three days at the start of January and end of December</target>
        </trans-unit>
        <trans-unit id="b796e511cedcd28aa0b8b8ca379a22d28e0f577f" translate="yes" xml:space="preserve">
          <source>Weekday name, e.g. &amp;ldquo;Sunday&amp;rdquo;.</source>
          <target state="translated">Weekday name, e.g. &amp;ldquo;Sunday&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="17a1bad11ba6f9434432f76d5e9191ee1d5969ce" translate="yes" xml:space="preserve">
          <source>Welcome to Jekyll&amp;rsquo;s step-by-step tutorial. The goal of this tutorial is to take you from having some front end web development experience to building your first Jekyll site from scratch &amp;mdash; not relying on the default gem-based theme. Let&amp;rsquo;s get into it!</source>
          <target state="translated">Welcome to Jekyll&amp;rsquo;s step-by-step tutorial. The goal of this tutorial is to take you from having some front end web development experience to building your first Jekyll site from scratch &amp;mdash; not relying on the default gem-based theme. Let&amp;rsquo;s get into it!</target>
        </trans-unit>
        <trans-unit id="ae0403eb1636e9aa7d2ce698039ed9375330ca46" translate="yes" xml:space="preserve">
          <source>Well, you might be thinking what&amp;rsquo;s the point in this? Jekyll just copied an HTML file from one place to another. Well patience young grasshopper, there&amp;rsquo;s still much to learn!</source>
          <target state="translated">Well, you might be thinking what&amp;rsquo;s the point in this? Jekyll just copied an HTML file from one place to another. Well patience young grasshopper, there&amp;rsquo;s still much to learn!</target>
        </trans-unit>
        <trans-unit id="980308e87afb05544ddaec2b4a788a2948d43ef8" translate="yes" xml:space="preserve">
          <source>Well-formatted site data should be placed here. The Jekyll engine will autoload all data files (using either the &lt;code&gt;.yml&lt;/code&gt;, &lt;code&gt;.yaml&lt;/code&gt;, &lt;code&gt;.json&lt;/code&gt; or &lt;code&gt;.csv&lt;/code&gt; formats and extensions) in this directory, and they will be accessible via `site.data`. If there's a file &lt;code&gt;members.yml&lt;/code&gt; under the directory, then you can access contents of the file through &lt;code&gt;site.data.members&lt;/code&gt;.</source>
          <target state="translated">올바른 형식의 사이트 데이터를 여기에 배치해야합니다. Jekyll 엔진은 이 디렉토리에있는 모든 데이터 파일 ( &lt;code&gt;.yml&lt;/code&gt; , &lt;code&gt;.yaml&lt;/code&gt; , &lt;code&gt;.json&lt;/code&gt; 또는 &lt;code&gt;.csv&lt;/code&gt; 형식 및 확장명 사용)을 자동로드하며 `site.data`를 통해 액세스 할 수 있습니다. 디렉토리 아래에 &lt;code&gt;members.yml&lt;/code&gt; 파일이 있으면 &lt;code&gt;site.data.members&lt;/code&gt; 를 통해 파일 내용에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4cedca2f26185c43e3c27aaa5fabb27a2407c21e" translate="yes" xml:space="preserve">
          <source>Well-formatted site data should be placed here. The Jekyll engine will autoload all data files (using either the &lt;code&gt;.yml&lt;/code&gt;, &lt;code&gt;.yaml&lt;/code&gt;, &lt;code&gt;.json&lt;/code&gt;, &lt;code&gt;.csv&lt;/code&gt; or &lt;code&gt;.tsv&lt;/code&gt; formats and extensions) in this directory, and they will be accessible via `site.data`. If there's a file &lt;code&gt;members.yml&lt;/code&gt; under the directory, then you can access contents of the file through &lt;code&gt;site.data.members&lt;/code&gt;.</source>
          <target state="translated">Well-formatted site data should be placed here. The Jekyll engine will autoload all data files (using either the &lt;code&gt;.yml&lt;/code&gt; , &lt;code&gt;.yaml&lt;/code&gt; , &lt;code&gt;.json&lt;/code&gt; , &lt;code&gt;.csv&lt;/code&gt; or &lt;code&gt;.tsv&lt;/code&gt; formats and extensions) in this directory, and they will be accessible via `site.data`. If there's a file &lt;code&gt;members.yml&lt;/code&gt; under the directory, then you can access contents of the file through &lt;code&gt;site.data.members&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="91eaf68e03a6c191061f2090716186f4883c78fd" translate="yes" xml:space="preserve">
          <source>What good is a site without CSS, JS and images? Let&amp;rsquo;s look at how to handle assets in Jekyll.</source>
          <target state="translated">What good is a site without CSS, JS and images? Let&amp;rsquo;s look at how to handle assets in Jekyll.</target>
        </trans-unit>
        <trans-unit id="da39f47f768ba52a2bcd28c7777dbe5d4d15b183" translate="yes" xml:space="preserve">
          <source>What you really want is all posts to automatically have the post layout, authors to have author and everything else to use the default.</source>
          <target state="translated">What you really want is all posts to automatically have the post layout, authors to have author and everything else to use the default.</target>
        </trans-unit>
        <trans-unit id="f73d2936317cc37c4cceb0d36dd88cb7424d5243" translate="yes" xml:space="preserve">
          <source>When building a Jekyll site with GitHub Pages, the standard flow is restricted for security reasons and to make it simpler to get a site setup. For more control over the build and still host the site with GitHub Pages you can use GitHub Actions.</source>
          <target state="translated">When building a Jekyll site with GitHub Pages, the standard flow is restricted for security reasons and to make it simpler to get a site setup. For more control over the build and still host the site with GitHub Pages you can use GitHub Actions.</target>
        </trans-unit>
        <trans-unit id="80146c90bf534f404cbcca39a705ff308cd9603a" translate="yes" xml:space="preserve">
          <source>When clobbering the site destination, keep the selected files. Useful for files that are not generated by jekyll; e.g. files or assets that are generated by your build tool. The paths are relative to the &lt;code&gt;destination&lt;/code&gt;.</source>
          <target state="translated">사이트 대상을 클로버 할 때는 선택한 파일을 유지하십시오. jekyll에 의해 생성되지 않은 파일에 유용합니다. 예를 들어 빌드 도구로 생성 된 파일 또는 자산. 경로는 &lt;code&gt;destination&lt;/code&gt; 기준으로합니다 .</target>
        </trans-unit>
        <trans-unit id="06db13ac5af83acf0a3ee837b96bd6d3d27f5812" translate="yes" xml:space="preserve">
          <source>When defining a collection as a sequence, its pages will not be rendered by default. To enable this, &lt;code&gt;output: true&lt;/code&gt; must be specified on the collection, which requires defining the collection as a mapping. For more information, see the section &lt;a href=&quot;#output&quot;&gt;Output&lt;/a&gt;.</source>
          <target state="translated">When defining a collection as a sequence, its pages will not be rendered by default. To enable this, &lt;code&gt;output: true&lt;/code&gt; must be specified on the collection, which requires defining the collection as a mapping. For more information, see the section &lt;a href=&quot;#output&quot;&gt;Output&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="511ab2511b4a26fb49efb7fd75f66c53fbd12336" translate="yes" xml:space="preserve">
          <source>When in doubt, use the &lt;code&gt;help&lt;/code&gt; command to remind you of all available options and usage, it also works with the &lt;code&gt;new&lt;/code&gt;, &lt;code&gt;build&lt;/code&gt; and &lt;code&gt;serve&lt;/code&gt; subcommands, e.g. &lt;code&gt;jekyll help new&lt;/code&gt; or &lt;code&gt;jekyll help build&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;jekyll help new&lt;/code&gt; 경우, &lt;code&gt;help&lt;/code&gt; 명령을 사용하여 사용 가능한 모든 옵션 및 사용법을 상기 시키십시오. 또한 jekyll help new 또는 &lt;code&gt;jekyll help build&lt;/code&gt; 와 같은 &lt;code&gt;new&lt;/code&gt; , &lt;code&gt;build&lt;/code&gt; 및 &lt;code&gt;serve&lt;/code&gt; 하위 명령 과 도 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="29d6bbd092c16b7b59ba615fb067b4407d968604" translate="yes" xml:space="preserve">
          <source>When iterating over &lt;code&gt;site.collections&lt;/code&gt;, ensure the above conversions are made.</source>
          <target state="translated">&lt;code&gt;site.collections&lt;/code&gt; 를 반복 할 때 위의 변환이 수행되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="22508846b6a1cb2d937ae48a90925816dbb3e151" translate="yes" xml:space="preserve">
          <source>When testing Jekyll output, there is no better tool than &lt;a href=&quot;https://github.com/gjtorikian/html-proofer&quot;&gt;html-proofer&lt;/a&gt;. This tool checks your resulting site to ensure all links and images exist. Utilize it either with the convenient &lt;code&gt;htmlproofer&lt;/code&gt; command-line executable, or write a Ruby script which utilizes the gem.</source>
          <target state="translated">Jekyll 출력을 테스트 할 때 &lt;a href=&quot;https://github.com/gjtorikian/html-proofer&quot;&gt;html-proofer&lt;/a&gt; 보다 나은 도구는 없습니다 . 이 도구는 결과 사이트를 확인하여 모든 링크와 이미지가 존재하는지 확인합니다. 편리한 &lt;code&gt;htmlproofer&lt;/code&gt; 명령 줄 실행 파일을 사용하거나 gem을 사용하는 Ruby 스크립트를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="fb275a8b3cfd1d753bd1667feefec8892bb4514c" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;paginate&lt;/code&gt; configuration option is set, this variable becomes available for use. See &lt;a href=&quot;../pagination/index&quot;&gt;Pagination&lt;/a&gt; for details.</source>
          <target state="translated">때 &lt;code&gt;paginate&lt;/code&gt; 구성 옵션을 설정,이 변수가 사용 가능하게됩니다. 자세한 내용은 &lt;a href=&quot;../pagination/index&quot;&gt;페이지 매김&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b344ca986126fc44114e9e1effa19fd933090858" translate="yes" xml:space="preserve">
          <source>When the post also has front matter defining categories, they just get added to the existing list if not present already.</source>
          <target state="translated">When the post also has front matter defining categories, they just get added to the existing list if not present already.</target>
        </trans-unit>
        <trans-unit id="da9bd96af19e123004b9a8f8045d7bf80619d81a" translate="yes" xml:space="preserve">
          <source>When using a &lt;code&gt;Gemfile&lt;/code&gt;, you&amp;rsquo;ll run commands like &lt;code&gt;jekyll serve&lt;/code&gt; with &lt;code&gt;bundle exec&lt;/code&gt; prefixed. So the full command is:</source>
          <target state="translated">When using a &lt;code&gt;Gemfile&lt;/code&gt; , you&amp;rsquo;ll run commands like &lt;code&gt;jekyll serve&lt;/code&gt; with &lt;code&gt;bundle exec&lt;/code&gt; prefixed. So the full command is:</target>
        </trans-unit>
        <trans-unit id="ac395ac35aa9cdc1eb5a47dcfe755d72e055949c" translate="yes" xml:space="preserve">
          <source>When you &lt;a href=&quot;../quickstart/index&quot;&gt;create a new Jekyll site&lt;/a&gt; (by running the &lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; command), Jekyll installs a site that uses a gem-based theme called &lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Minima&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; 명령 을 실행하여 &lt;a href=&quot;../quickstart/index&quot;&gt;새 Jekyll 사이트&lt;/a&gt; 를 만들면 Jekyll 은 &lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Minima&lt;/a&gt; 라는 gem 기반 테마를 사용하는 사이트를 설치합니다 .</target>
        </trans-unit>
        <trans-unit id="8cda456eac3fbc0782231e76fc8eec560224f7ae" translate="yes" xml:space="preserve">
          <source>When you &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;create a new Jekyll site&lt;/a&gt; (by running the &lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; command), Jekyll installs a site that uses a gem-based theme called &lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Minima&lt;/a&gt;.</source>
          <target state="translated">When you &lt;a href=&quot;https://jekyllrb.com/docs/&quot;&gt;create a new Jekyll site&lt;/a&gt; (by running the &lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; command), Jekyll installs a site that uses a gem-based theme called &lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Minima&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9ccfe859da19cf52b245179240d09cd018bb7c6f" translate="yes" xml:space="preserve">
          <source>When you build your Jekyll site, the content inside the &lt;code&gt;if&lt;/code&gt; statement won&amp;rsquo;t be run unless you also specify a &lt;code&gt;production&lt;/code&gt; environment in the build command, like this:</source>
          <target state="translated">Jekyll 사이트를 빌드 할 때 다음 과 같이 build 명령에 &lt;code&gt;production&lt;/code&gt; 환경을 지정하지 않으면 &lt;code&gt;if&lt;/code&gt; 문의 내부 컨텐츠 가 실행되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c23148ce9285228600ad471f3d4e39ae13628b81" translate="yes" xml:space="preserve">
          <source>When you build your site, the output will list the path to each file that meets this front matter condition.</source>
          <target state="translated">사이트를 구축 할 때 출력은이 최우선 조건을 충족하는 각 파일의 경로를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="8c0134a9152ae69e70fa14c3621e1945a48ed65d" translate="yes" xml:space="preserve">
          <source>When you need to make further &lt;strong&gt;changes&lt;/strong&gt; to the site, commit to &lt;code&gt;master&lt;/code&gt; and push. The workflow will build and deploy your site again.</source>
          <target state="translated">When you need to make further &lt;strong&gt;changes&lt;/strong&gt; to the site, commit to &lt;code&gt;master&lt;/code&gt; and push. The workflow will build and deploy your site again.</target>
        </trans-unit>
        <trans-unit id="2cde9bb2daf5153fc9fad0fee6b617f798c1ac30" translate="yes" xml:space="preserve">
          <source>When you put it all together, here&amp;rsquo;s an example of what that &lt;code&gt;circle.yml&lt;/code&gt; file could look like:</source>
          <target state="translated">모든 것을 &lt;code&gt;circle.yml&lt;/code&gt; 하면 circle.yml 파일의 모양이 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a1f521902a51cc660eaec48967b221be52eed00a" translate="yes" xml:space="preserve">
          <source>When you run &lt;code&gt;bundle exec jekyll serve&lt;/code&gt;, Bundler uses the gems and versions as specified in &lt;code&gt;Gemfile.lock&lt;/code&gt; to ensure your Jekyll site builds with no compatibility or dependency conflicts.</source>
          <target state="translated">&lt;code&gt;bundle exec jekyll serve&lt;/code&gt; 를 실행할 때 Bundler는 &lt;code&gt;Gemfile.lock&lt;/code&gt; 에 지정된 gem 및 버전 을 사용하여 Jekyll 사이트가 호환성이나 종속성 충돌없이 빌드되도록합니다.</target>
        </trans-unit>
        <trans-unit id="441328feebf34856315bb030d27ac9484dd434bc" translate="yes" xml:space="preserve">
          <source>When you use permalinks that omit the &lt;code&gt;.html&lt;/code&gt; file extension (called &amp;ldquo;pretty URLs&amp;rdquo;) Jekyll builds the file as index.html placed inside a folder with the page&amp;rsquo;s name. For example:</source>
          <target state="translated">&lt;code&gt;.html&lt;/code&gt; 파일 확장자 ( &quot;pretty URLs&quot;) 를 생략하는 퍼머 링크를 사용하면 Jekyll은 파일을 페이지 이름이있는 폴더 안에 index.html로 만듭니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2813d904e6820ab26a73500a2367ce6371fbf82c" translate="yes" xml:space="preserve">
          <source>When you&amp;rsquo;re developing a site you&amp;rsquo;ll use &lt;code&gt;jekyll serve&lt;/code&gt; as it updates with any changes you make.</source>
          <target state="translated">When you&amp;rsquo;re developing a site you&amp;rsquo;ll use &lt;code&gt;jekyll serve&lt;/code&gt; as it updates with any changes you make.</target>
        </trans-unit>
        <trans-unit id="f479ef76acc86e429fb88fb9b4356d7e8e983548" translate="yes" xml:space="preserve">
          <source>Whenever a document is initialized</source>
          <target state="translated">문서가 초기화 될 때마다</target>
        </trans-unit>
        <trans-unit id="8081ac9790139a21f050562bbe6b235fb79b4596" translate="yes" xml:space="preserve">
          <source>Whenever a page is initialized</source>
          <target state="translated">페이지가 초기화 될 때마다</target>
        </trans-unit>
        <trans-unit id="51c907dd080b0217c67de1be8f88eecf312bf8a4" translate="yes" xml:space="preserve">
          <source>Whenever a post is initialized</source>
          <target state="translated">게시물이 초기화 될 때마다</target>
        </trans-unit>
        <trans-unit id="76d18d3961e4f460f772931459f68fe4a297bec9" translate="yes" xml:space="preserve">
          <source>Whenever any document is initialized</source>
          <target state="translated">Whenever any document is initialized</target>
        </trans-unit>
        <trans-unit id="8216ae1dacc9e51900d62b76062267f3c0b7edbd" translate="yes" xml:space="preserve">
          <source>Whenever you make a push to the selected branch, the Jekyll action runs &lt;code&gt;jekyll build&lt;/code&gt; in an isolated &lt;a href=&quot;https://hub.docker.com/r/jekyll/jekyll/&quot;&gt;Jekyll Docker image&lt;/a&gt;. The output is generated to the &lt;code&gt;/filesystem&lt;/code&gt; directory, and can be further deployed to FTP/SFTP and IaaS services. You can add your own commands, install additional packages, attach services, and run Selenium tests, as well as add other actions down the pipeline, eg. a Slack notification or an SSH script that will restart your server.</source>
          <target state="translated">선택한 브랜치를 푸시 할 때마다 Jekyll 작업은 격리 된 &lt;a href=&quot;https://hub.docker.com/r/jekyll/jekyll/&quot;&gt;Jekyll Docker 이미지&lt;/a&gt; 에서 &lt;code&gt;jekyll build&lt;/code&gt; 를 실행 합니다 . 출력은 &lt;code&gt;/filesystem&lt;/code&gt; 디렉토리에 생성되며 FTP / SFTP 및 IaaS 서비스에 추가로 배치 될 수 있습니다. 자체 명령을 추가하고, 추가 패키지를 설치하고, 서비스를 첨부하고, Selenium 테스트를 실행하고, 파이프 라인에 다른 작업을 추가 할 수 있습니다. 서버를 다시 시작할 Slack 알림 또는 SSH 스크립트</target>
        </trans-unit>
        <trans-unit id="08df7cfb0e0229b0df3367bf88f0e7ead836d7f3" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;YEAR&lt;/code&gt; is a four-digit number, &lt;code&gt;MONTH&lt;/code&gt; and &lt;code&gt;DAY&lt;/code&gt; are both two-digit numbers, and &lt;code&gt;MARKUP&lt;/code&gt; is the file extension representing the format used in the file. For example, the following are examples of valid post filenames:</source>
          <target state="translated">어디 &lt;code&gt;YEAR&lt;/code&gt; 네 자리 숫자이며, &lt;code&gt;MONTH&lt;/code&gt; 및 &lt;code&gt;DAY&lt;/code&gt; 는 모두 두 자리 숫자 및 &lt;code&gt;MARKUP&lt;/code&gt; 파일에 사용되는 형식을 나타내는 파일 확장자입니다. 예를 들어, 다음은 유효한 게시물 파일 이름의 예입니다.</target>
        </trans-unit>
        <trans-unit id="668b3e4a4eeb346dd008cff0647843e835a6a66b" translate="yes" xml:space="preserve">
          <source>Where additional pages live</source>
          <target state="translated">추가 페이지가있는 곳</target>
        </trans-unit>
        <trans-unit id="e22ce535ba1a8a0bd12250f79dccc9d80cd5e88f" translate="yes" xml:space="preserve">
          <source>Where to configure permalinks</source>
          <target state="translated">영구 링크 구성 위치</target>
        </trans-unit>
        <trans-unit id="10cce413a3074bd9adb07a3ef0c3cd59e668f9ac" translate="yes" xml:space="preserve">
          <source>Where to get support</source>
          <target state="translated">Where to get support</target>
        </trans-unit>
        <trans-unit id="ee79505e4e1d36592db9ca9457edb23caf0a92ba" translate="yes" xml:space="preserve">
          <source>Where you put HTML or &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; files for pages depends on how you want the pages to work. There are two main ways of creating pages:</source>
          <target state="translated">페이지 에 HTML 또는 &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;마크 다운&lt;/a&gt; 파일을 넣는 위치 는 페이지 작동 방식에 따라 다릅니다. 페이지를 작성하는 두 가지 주요 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6e1291771b9d018237e61708207f21da5065c7b" translate="yes" xml:space="preserve">
          <source>Whether the collection's documents will be output as individual files.</source>
          <target state="translated">컬렉션의 문서가 개별 파일로 출력되는지 여부</target>
        </trans-unit>
        <trans-unit id="f4ffdbbff2307b66c3406f857fc79ddb4961a69e" translate="yes" xml:space="preserve">
          <source>While &amp;lsquo;new&amp;rsquo; blogs created with Jekyll v3.4 and greater, will have the following added to their &lt;code&gt;Gemfile&lt;/code&gt; by default, existing sites &lt;em&gt;will&lt;/em&gt; have to update their &lt;code&gt;Gemfile&lt;/code&gt; (and installed gems) to enable development on Windows:</source>
          <target state="translated">While &amp;lsquo;new&amp;rsquo; blogs created with Jekyll v3.4 and greater, will have the following added to their &lt;code&gt;Gemfile&lt;/code&gt; by default, existing sites &lt;em&gt;will&lt;/em&gt; have to update their &lt;code&gt;Gemfile&lt;/code&gt; (and installed gems) to enable development on Windows:</target>
        </trans-unit>
        <trans-unit id="a699c08ab3080c1690453950753f5effb82fdcf1" translate="yes" xml:space="preserve">
          <source>While Windows is not an officially-supported platform, it can be used to run Jekyll with the proper tweaks.</source>
          <target state="translated">While Windows is not an officially-supported platform, it can be used to run Jekyll with the proper tweaks.</target>
        </trans-unit>
        <trans-unit id="1d293d415ea6147ac5d7200c4f733da5bae41bd6" translate="yes" xml:space="preserve">
          <source>While Windows is not an officially-supported platform, it can be used to run Jekyll with the proper tweaks. This page aims to collect some of the general knowledge and lessons that have been unearthed by Windows users.</source>
          <target state="translated">Windows는 공식적으로 지원되는 플랫폼은 아니지만 Jekyll을 적절히 조정하여 실행할 수 있습니다. 이 페이지는 Windows 사용자가 발굴 한 일반적인 지식과 교훈 중 일부를 수집하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="3eb7e129466b1ad3b274d794ab122caea7f6f433" translate="yes" xml:space="preserve">
          <source>While Windows is not officially supported, it is possible to get Jekyll running on Windows. Special instructions can be found on our &lt;a href=&quot;../windows/index#installation&quot;&gt;Windows-specific docs page&lt;/a&gt;.</source>
          <target state="translated">Windows는 공식적으로 지원되지 않지만 Windows에서 Jekyll을 실행할 수 있습니다. 특별 지침은 &lt;a href=&quot;../windows/index#installation&quot;&gt;Windows 관련 문서 페이지&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7e8914b7deeddfa53fc6dcacbc6b3450881e967d" translate="yes" xml:space="preserve">
          <source>While Windows is not officially supported, it is possible to install the &lt;code&gt;github-pages&lt;/code&gt; gem on Windows. Special instructions can be found on our &lt;a href=&quot;../installation/windows/index&quot;&gt;Windows-specific docs page&lt;/a&gt;.</source>
          <target state="translated">While Windows is not officially supported, it is possible to install the &lt;code&gt;github-pages&lt;/code&gt; gem on Windows. Special instructions can be found on our &lt;a href=&quot;../installation/windows/index&quot;&gt;Windows-specific docs page&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e399b54f2e7424a4e1d4d33fb7af1ecc630310dd" translate="yes" xml:space="preserve">
          <source>While Windows is not officially supported, it is possible to install the &lt;code&gt;github-pages&lt;/code&gt; gem on Windows. Special instructions can be found on our &lt;a href=&quot;../windows/index#installation&quot;&gt;Windows-specific docs page&lt;/a&gt;.</source>
          <target state="translated">Windows는 공식적으로 지원되지 않지만 Windows에 &lt;code&gt;github-pages&lt;/code&gt; gem 을 설치할 수 있습니다 . 특별 지침은 &lt;a href=&quot;../windows/index#installation&quot;&gt;Windows 관련 문서 페이지&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2e9e68bbbf896adad3c499f6d456ec3681451ddb" translate="yes" xml:space="preserve">
          <source>While incremental regeneration will work for the most common cases, it will not work correctly in every scenario. Please be extremely cautious when using the feature, and report any problems not listed below by &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;opening an issue on GitHub&lt;/a&gt;.</source>
          <target state="translated">증분 재생은 가장 일반적인 경우에 작동하지만 모든 시나리오에서 올바르게 작동하지는 않습니다. 이 기능을 사용할 때는 매우주의해야 &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;하며 GitHub에서 문제를 열어&lt;/a&gt; 아래에 나열되지 않은 문제를보고하십시오 .</target>
        </trans-unit>
        <trans-unit id="b310273b3964c61a6d5fbeb35c859d684748bb16" translate="yes" xml:space="preserve">
          <source>While the phases above are self-explanatory, the one phase that warrants dissection is &lt;em&gt;the rendering phase&lt;/em&gt;.</source>
          <target state="translated">While the phases above are self-explanatory, the one phase that warrants dissection is &lt;em&gt;the rendering phase&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="184160eec41156b6ae73a5805dbb67ab7097076b" translate="yes" xml:space="preserve">
          <source>While this example is done with categories, you can easily extend your lists to filter by tags or any other variable created with extensions.</source>
          <target state="translated">이 예제는 범주를 사용하여 수행되지만 태그 나 확장으로 만든 다른 변수로 필터링하도록 목록을 쉽게 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1a1049e528b37461ee45558fbd7db1a9192c435f" translate="yes" xml:space="preserve">
          <source>While this feature is to enable easier adoption of a theme, the restrictions ensure that a theme-config cannot affect the build in a concerning manner. Any plugins required by the theme will have to be listed manually by the user or provided by the theme&amp;rsquo;s &lt;code&gt;gemspec&lt;/code&gt; file.</source>
          <target state="translated">While this feature is to enable easier adoption of a theme, the restrictions ensure that a theme-config cannot affect the build in a concerning manner. Any plugins required by the theme will have to be listed manually by the user or provided by the theme&amp;rsquo;s &lt;code&gt;gemspec&lt;/code&gt; file.</target>
        </trans-unit>
        <trans-unit id="403a4bb7ad68ae21c74bcd157e5bf99e7b03e37c" translate="yes" xml:space="preserve">
          <source>While you can configure the directory name in which your layouts can reside by setting the &lt;code&gt;layouts_dir&lt;/code&gt; key in your config file, the directory itself should be located at the root of your site's &lt;code&gt;source&lt;/code&gt; directory.</source>
          <target state="translated">While you can configure the directory name in which your layouts can reside by setting the &lt;code&gt;layouts_dir&lt;/code&gt; key in your config file, the directory itself should be located at the root of your site's &lt;code&gt;source&lt;/code&gt; directory.</target>
        </trans-unit>
        <trans-unit id="b81a77b2ba4a8e2bf8f4af838472725af20456f2" translate="yes" xml:space="preserve">
          <source>While you don&amp;rsquo;t have to use &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;bundler&lt;/code&gt;, it is highly recommended as it ensures you&amp;rsquo;re running the same version of Jekyll and its plugins across different environments.</source>
          <target state="translated">While you don&amp;rsquo;t have to use &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;bundler&lt;/code&gt; , it is highly recommended as it ensures you&amp;rsquo;re running the same version of Jekyll and its plugins across different environments.</target>
        </trans-unit>
        <trans-unit id="26d9c28d789c254f71ea99a3463b99a7ccc2f4fa" translate="yes" xml:space="preserve">
          <source>Windows</source>
          <target state="translated">Windows</target>
        </trans-unit>
        <trans-unit id="909520594dc6baa6f3e34de676c22d935ae3c443" translate="yes" xml:space="preserve">
          <source>With Homebrew</source>
          <target state="translated">With Homebrew</target>
        </trans-unit>
        <trans-unit id="e3cc716e8a2cab075ae8f8c3a119c8a34ec49a24" translate="yes" xml:space="preserve">
          <source>With Ruby setup you can install Jekyll by running the following in your terminal:</source>
          <target state="translated">With Ruby setup you can install Jekyll by running the following in your terminal:</target>
        </trans-unit>
        <trans-unit id="51a443a53049d68b8cd0ab3ab0e48b86621b3ded" translate="yes" xml:space="preserve">
          <source>With a URL such as &lt;code&gt;/mypageurl/&lt;/code&gt;, servers automatically load the index.html file inside the folder, so users can simply navigate to &lt;code&gt;http://somedomain.com/mypageurl/&lt;/code&gt; to get to &lt;code&gt;mypageurl/index.html&lt;/code&gt;.</source>
          <target state="translated">서버 는 &lt;code&gt;/mypageurl/&lt;/code&gt; 과 같은 URL을 사용 하여 폴더에 index.html 파일을 자동으로로드하므로 사용자는 &lt;code&gt;http://somedomain.com/mypageurl/&lt;/code&gt; 으로 이동 하여 &lt;code&gt;mypageurl/index.html&lt;/code&gt; 로 이동할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f958238187c3b5c4cdd931995cbe45869daa06c7" translate="yes" xml:space="preserve">
          <source>With a clear understanding of the theme&amp;rsquo;s files, you can now override any theme file by creating a similarly named file in your Jekyll site directory.</source>
          <target state="translated">테마 파일을 명확하게 이해하면 Jekyll 사이트 디렉토리에 비슷한 이름의 파일을 만들어 테마 파일을 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="af04212c22613400a0848564776b8713ea75a72d" translate="yes" xml:space="preserve">
          <source>With both fenced code blocks and highlighter enabled, this will statically highlight the code; without any syntax highlighter, it will add a &lt;code&gt;class=&quot;LANGUAGE&quot;&lt;/code&gt; attribute to the &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; element, which can be used as a hint by various JavaScript code highlighting libraries.</source>
          <target state="translated">분리형 코드 블록과 형광펜을 모두 활성화하면 코드가 정적으로 강조됩니다. 구문 하이 라이터없이 &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt; 요소에 &lt;code&gt;class=&quot;LANGUAGE&quot;&lt;/code&gt; 속성을 추가하면 다양한 JavaScript 코드 하이라이팅 라이브러리에서 힌트로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fea314417153cec8d1cc3552baba3aba65b25e65" translate="yes" xml:space="preserve">
          <source>With gem-based themes, some of the site&amp;rsquo;s directories (such as the &lt;code&gt;assets&lt;/code&gt;, &lt;code&gt;_layouts&lt;/code&gt;, &lt;code&gt;_includes&lt;/code&gt;, and &lt;code&gt;_sass&lt;/code&gt; directories) are stored in the theme&amp;rsquo;s gem, hidden from your immediate view. Yet all of the necessary directories will be read and processed during Jekyll&amp;rsquo;s build process.</source>
          <target state="translated">gem 기반 테마를 사용하면 사이트의 일부 디렉토리 (예 : &lt;code&gt;assets&lt;/code&gt; , &lt;code&gt;_layouts&lt;/code&gt; , &lt;code&gt;_includes&lt;/code&gt; 및 &lt;code&gt;_sass&lt;/code&gt; 디렉토리)가 테마의 gem에 저장되어 즉시보기에서 숨겨집니다. 그러나 Jekyll의 빌드 프로세스 중에 필요한 모든 디렉토리를 읽고 처리합니다.</target>
        </trans-unit>
        <trans-unit id="4b02aff0258fac25b5a803e6b663a48c25a23509" translate="yes" xml:space="preserve">
          <source>With many websites &amp;mdash; especially blogs &amp;mdash; it&amp;rsquo;s very common to break the main listing of posts up into smaller lists and display them over multiple pages. Jekyll offers a pagination plugin, so you can automatically generate the appropriate files and folders you need for paginated listings.</source>
          <target state="translated">많은 웹 사이트, 특히 블로그와 함께 주요 게시물 목록을 작은 목록으로 나누고 여러 페이지에 표시하는 것이 매우 일반적입니다. Jekyll은 페이지 매김 플러그인을 제공하므로 페이지 매김 목록에 필요한 적절한 파일과 폴더를 자동으로 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ce602b6aac9f60b15cc00ef55a72324eb80d74b1" translate="yes" xml:space="preserve">
          <source>With rbenv</source>
          <target state="translated">With rbenv</target>
        </trans-unit>
        <trans-unit id="81173db9469f10fbaee2b957a022941742995898" translate="yes" xml:space="preserve">
          <source>With the introduction of System Integrity Protection in v10.11, several directories that were previously writable are now considered system locations and are no longer available. Given these changes, there are a couple of simple ways to get up and running. One option is to change the location where the gem will be installed (again, using &lt;code&gt;sudo&lt;/code&gt; only if necessary):</source>
          <target state="translated">With the introduction of System Integrity Protection in v10.11, several directories that were previously writable are now considered system locations and are no longer available. Given these changes, there are a couple of simple ways to get up and running. One option is to change the location where the gem will be installed (again, using &lt;code&gt;sudo&lt;/code&gt; only if necessary):</target>
        </trans-unit>
        <trans-unit id="1e0e2fc5b2730c68ab3b7c95809e879c30e5bd40" translate="yes" xml:space="preserve">
          <source>With the introduction of System Integrity Protection, several directories that were previously writable are now considered system locations and are no longer available. Given these changes, there are a couple of simple ways to get up and running. One option is to change the location where the gem will be installed (again, using &lt;code&gt;sudo&lt;/code&gt; only if necessary):</source>
          <target state="translated">System Integrity Protection이 도입되면서 이전에 쓸 수 있었던 여러 디렉토리가 이제 시스템 위치로 간주되어 더 이상 사용할 수 없습니다. 이러한 변경 사항을 감안할 때 시작하고 실행하는 몇 가지 간단한 방법이 있습니다. 하나의 옵션은 gem이 설치 될 위치를 변경하는 것입니다 ( 필요한 경우에만 &lt;code&gt;sudo&lt;/code&gt; 를 사용 ).</target>
        </trans-unit>
        <trans-unit id="e7d44ff64fb14b5fea5337d7a84af3ea3239c1d1" translate="yes" xml:space="preserve">
          <source>With the new subcommands, the way sites are previewed locally changed a bit. Instead of specifying &lt;code&gt;server: true&lt;/code&gt; in the site&amp;rsquo;s configuration file, use &lt;code&gt;jekyll serve&lt;/code&gt;. The same holds true for &lt;code&gt;watch: true&lt;/code&gt;. Instead, use the &lt;code&gt;--watch&lt;/code&gt; flag with either &lt;code&gt;jekyll serve&lt;/code&gt; or &lt;code&gt;jekyll build&lt;/code&gt;.</source>
          <target state="translated">새로운 하위 명령을 사용하면 사이트 미리보기 방식이 약간 변경되었습니다. 사이트의 구성 파일에서 &lt;code&gt;server: true&lt;/code&gt; 를 지정하는 대신 &lt;code&gt;jekyll serve&lt;/code&gt; 를 사용 하십시오 . 동일은 마찬가지입니다 &lt;code&gt;watch: true&lt;/code&gt; . 대신 &lt;code&gt;jekyll serve&lt;/code&gt; 또는 &lt;code&gt;jekyll build&lt;/code&gt; 와 함께 &lt;code&gt;--watch&lt;/code&gt; 플래그를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4a9f7d72f08ad6c94aa04de4e8c88fb0270133de" translate="yes" xml:space="preserve">
          <source>With these defaults, all pages would use the &lt;code&gt;my-site&lt;/code&gt; layout. Any html files that exist in the &lt;code&gt;projects/&lt;/code&gt; folder will use the &lt;code&gt;project&lt;/code&gt; layout, if it exists. Those files will also have the &lt;code&gt;page.author&lt;/code&gt;&lt;a href=&quot;../../variables/index&quot;&gt;liquid variable&lt;/a&gt; set to &lt;code&gt;Mr. Hyde&lt;/code&gt;.</source>
          <target state="translated">With these defaults, all pages would use the &lt;code&gt;my-site&lt;/code&gt; layout. Any html files that exist in the &lt;code&gt;projects/&lt;/code&gt; folder will use the &lt;code&gt;project&lt;/code&gt; layout, if it exists. Those files will also have the &lt;code&gt;page.author&lt;/code&gt; &lt;a href=&quot;../../variables/index&quot;&gt;liquid variable&lt;/a&gt; set to &lt;code&gt;Mr. Hyde&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1505fac4e810feca59171a030c395c070950cafe" translate="yes" xml:space="preserve">
          <source>With these defaults, all pages would use the &lt;code&gt;my-site&lt;/code&gt; layout. Any html files that exist in the &lt;code&gt;projects/&lt;/code&gt; folder will use the &lt;code&gt;project&lt;/code&gt; layout, if it exists. Those files will also have the &lt;code&gt;page.author&lt;/code&gt;&lt;a href=&quot;../variables/index&quot;&gt;liquid variable&lt;/a&gt; set to &lt;code&gt;Mr. Hyde&lt;/code&gt;.</source>
          <target state="translated">이러한 기본값을 사용하면 모든 페이지가 &lt;code&gt;my-site&lt;/code&gt; 레이아웃을 사용합니다 . &lt;code&gt;projects/&lt;/code&gt; 폴더에 존재하는 모든 html 파일은 존재 하는 경우 &lt;code&gt;project&lt;/code&gt; 레이아웃 을 사용 합니다. 이 파일들은 또한 &lt;code&gt;page.author&lt;/code&gt; &lt;a href=&quot;../variables/index&quot;&gt;액체 변수&lt;/a&gt; 를 &lt;code&gt;Mr. Hyde&lt;/code&gt; 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="7599ce8a6c90d8500971f9fb8824823762fc0b69" translate="yes" xml:space="preserve">
          <source>With this, the end-user need not keep track of the plugins required to be included in their config file for their theme-gem to work as intended.</source>
          <target state="translated">이를 통해 최종 사용자는 테마 파일이 의도 한대로 작동하기 위해 구성 파일에 포함되어야하는 플러그인을 추적 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="7df8e3283db3ce2ecb9d37be5216604c9595ea29" translate="yes" xml:space="preserve">
          <source>With your site built, it&amp;rsquo;s useful to run tests to check for valid HTML, broken links, etc. There&amp;rsquo;s a few tools out there but &lt;a href=&quot;https://github.com/gjtorikian/html-proofer&quot;&gt;HTML Proofer&lt;/a&gt; is popular amongst Jekyll users. We&amp;rsquo;ll run it in the &lt;code&gt;test&lt;/code&gt; phase with a few preferred flags. Check out the &lt;code&gt;html-proofer&lt;/code&gt;&lt;a href=&quot;https://github.com/gjtorikian/html-proofer/blob/master/README.md#configuration&quot;&gt;README&lt;/a&gt; for all available flags, or run &lt;code&gt;htmlproofer --help&lt;/code&gt; locally.</source>
          <target state="translated">사이트가 구축되면 유효한 HTML, 끊어진 링크 등을 확인하기위한 테스트를 실행하는 것이 유용합니다. 몇 가지 도구가 있지만 &lt;a href=&quot;https://github.com/gjtorikian/html-proofer&quot;&gt;HTML Proofer&lt;/a&gt; 는 Jekyll 사용자에게 인기가 있습니다. &lt;code&gt;test&lt;/code&gt; 단계에서 몇 가지 선호하는 플래그를 사용하여 실행합니다 . 사용 가능한 모든 플래그에 대해서는 &lt;code&gt;html-proofer&lt;/code&gt; &lt;a href=&quot;https://github.com/gjtorikian/html-proofer/blob/master/README.md#configuration&quot;&gt;README&lt;/a&gt; 를 확인 하거나 &lt;code&gt;htmlproofer --help&lt;/code&gt; 를 로컬로 실행 하십시오 .</target>
        </trans-unit>
        <trans-unit id="1b3734436301039905b8bae6325a85f6f78b8859" translate="yes" xml:space="preserve">
          <source>Within _config.yml, the default configuration is as follows:</source>
          <target state="translated">Within _config.yml, the default configuration is as follows:</target>
        </trans-unit>
        <trans-unit id="31c38fa7e2fb7bef54ba08aae6b05715f169aea7" translate="yes" xml:space="preserve">
          <source>Workflow Management</source>
          <target state="translated">Workflow Management</target>
        </trans-unit>
        <trans-unit id="5cb0eada64f7af8c332f37831a994cf3cd5ad11b" translate="yes" xml:space="preserve">
          <source>Working with drafts</source>
          <target state="translated">초안 작업</target>
        </trans-unit>
        <trans-unit id="a806bbdd7e50985ba93d41d5464cdb6bf1205b42" translate="yes" xml:space="preserve">
          <source>Workspace setup</source>
          <target state="translated">Workspace setup</target>
        </trans-unit>
        <trans-unit id="bd3af26618234ef66e2152f29fa09590d707c55c" translate="yes" xml:space="preserve">
          <source>Wrap up</source>
          <target state="translated">Wrap up</target>
        </trans-unit>
        <trans-unit id="0e1ba5a9ac8eaceeb32ada6c5f13d2aa2c790b00" translate="yes" xml:space="preserve">
          <source>Writing posts</source>
          <target state="translated">글쓰기</target>
        </trans-unit>
        <trans-unit id="0320cbb9d52aaf974ff0bddf9c8b2abafbf6d58a" translate="yes" xml:space="preserve">
          <source>Year from the post&amp;rsquo;s filename with four digits. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter.</source>
          <target state="translated">Year from the post&amp;rsquo;s filename with four digits. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter.</target>
        </trans-unit>
        <trans-unit id="416768416b7ddd0c34b31be489520348396ba823" translate="yes" xml:space="preserve">
          <source>Year from the post&amp;rsquo;s filename without the century. (00..99) May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter.</source>
          <target state="translated">Year from the post&amp;rsquo;s filename without the century. (00..99) May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; front matter.</target>
        </trans-unit>
        <trans-unit id="b7fcbf6928437bce09750515ec3bc51084124d74" translate="yes" xml:space="preserve">
          <source>Year from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">게시물 파일 이름의 연도입니다. 문서의 &lt;code&gt;date&lt;/code&gt; YAML 관련 사항을 통해 무시 될 수 있음</target>
        </trans-unit>
        <trans-unit id="2eed5ade5ea41f8c83cf68590a70d3900db8efec" translate="yes" xml:space="preserve">
          <source>Year without the century from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">게시물의 파일 이름에서 세기가없는 연도입니다. 문서의 &lt;code&gt;date&lt;/code&gt; YAML 관련 사항을 통해 무시 될 수 있음</target>
        </trans-unit>
        <trans-unit id="8178cc8ff1dc8963a8a7af6ba39a5deafc8cb3f4" translate="yes" xml:space="preserve">
          <source>You also need a way to navigate to this page through the main navigation. Open &lt;code&gt;_data/navigation.yml&lt;/code&gt; and add an entry for the blog page:</source>
          <target state="translated">You also need a way to navigate to this page through the main navigation. Open &lt;code&gt;_data/navigation.yml&lt;/code&gt; and add an entry for the blog page:</target>
        </trans-unit>
        <trans-unit id="21ff757e311e3b76b11334e3032bb1989a9a5523" translate="yes" xml:space="preserve">
          <source>You also need a way to navigate to this page through the main navigation. Open &lt;code&gt;_data/navigation.yml&lt;/code&gt; and add an entry for the staff page:</source>
          <target state="translated">You also need a way to navigate to this page through the main navigation. Open &lt;code&gt;_data/navigation.yml&lt;/code&gt; and add an entry for the staff page:</target>
        </trans-unit>
        <trans-unit id="c39e746a40de35410000b44b9534f4f070ea875e" translate="yes" xml:space="preserve">
          <source>You can access a snippet of a posts&amp;rsquo;s content by using &lt;code&gt;excerpt&lt;/code&gt; variable on a post. By default this is the first paragraph of content in the post, however it can be customized by setting a &lt;code&gt;excerpt_separator&lt;/code&gt; variable in front matter or &lt;code&gt;_config.yml&lt;/code&gt;.</source>
          <target state="translated">You can access a snippet of a posts&amp;rsquo;s content by using &lt;code&gt;excerpt&lt;/code&gt; variable on a post. By default this is the first paragraph of content in the post, however it can be customized by setting a &lt;code&gt;excerpt_separator&lt;/code&gt; variable in front matter or &lt;code&gt;_config.yml&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="87545853a5523384d6962f87b459eec6db2f65c8" translate="yes" xml:space="preserve">
          <source>You can achieve this by using &lt;a href=&quot;../../configuration/front-matter-defaults/index&quot;&gt;front matter defaults&lt;/a&gt; in &lt;code&gt;_config.yml&lt;/code&gt;. You set a scope of what the default applies to, then the default front matter you&amp;rsquo;d like.</source>
          <target state="translated">You can achieve this by using &lt;a href=&quot;../../configuration/front-matter-defaults/index&quot;&gt;front matter defaults&lt;/a&gt; in &lt;code&gt;_config.yml&lt;/code&gt; . You set a scope of what the default applies to, then the default front matter you&amp;rsquo;d like.</target>
        </trans-unit>
        <trans-unit id="3a3edc1b30fde3865f866480b4c6e06b75ee1054" translate="yes" xml:space="preserve">
          <source>You can add specific plugins to the &lt;code&gt;whitelist&lt;/code&gt; key in &lt;code&gt;_config.yml&lt;/code&gt; to allow them to run in safe mode.</source>
          <target state="translated">You can add specific plugins to the &lt;code&gt;whitelist&lt;/code&gt; key in &lt;code&gt;_config.yml&lt;/code&gt; to allow them to run in safe mode.</target>
        </trans-unit>
        <trans-unit id="0d678ed42c21abec78da0d2ac1715bfc602efbc4" translate="yes" xml:space="preserve">
          <source>You can add your own filters to the Liquid template system much like you can add tags above. Filters are simply modules that export their methods to liquid. All methods will have to take at least one parameter which represents the input of the filter. The return value will be the output of the filter.</source>
          <target state="translated">위의 태그를 추가 할 수있는 것처럼 자신 만의 필터를 Liquid 템플릿 시스템에 추가 할 수 있습니다. 필터는 단순히 분석법을 액체로 내보내는 모듈입니다. 모든 메소드는 필터의 입력을 나타내는 하나 이상의 매개 변수를 가져야합니다. 반환 값은 필터의 출력입니다.</target>
        </trans-unit>
        <trans-unit id="1d4419906c82cd84bfb3719a7ba22bcc3119d1dd" translate="yes" xml:space="preserve">
          <source>You can also configure Liquid&amp;rsquo;s renderer to catch non-assigned variables and non-existing filters by setting &lt;code&gt;strict_variables&lt;/code&gt; and / or &lt;code&gt;strict_filters&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; respectively. 3.8.0</source>
          <target state="translated">You can also configure Liquid&amp;rsquo;s renderer to catch non-assigned variables and non-existing filters by setting &lt;code&gt;strict_variables&lt;/code&gt; and / or &lt;code&gt;strict_filters&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt; respectively. 3.8.0</target>
        </trans-unit>
        <trans-unit id="2e327096324eaa5d0c855a4af5564e01c5ad3ecb" translate="yes" xml:space="preserve">
          <source>You can also invoke &lt;code&gt;html-proofer&lt;/code&gt; in Ruby scripts (e.g. in a Rakefile):</source>
          <target state="translated">Ruby 스크립트 (예 : Rakefile)에서 &lt;code&gt;html-proofer&lt;/code&gt; 를 호출 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b79bdfc93326896550ac58a534eda9ea445f9415" translate="yes" xml:space="preserve">
          <source>You can also manually order the documents by setting an &lt;code&gt;order&lt;/code&gt; metadata with &lt;strong&gt;the filenames listed&lt;/strong&gt; in the desired order. For example, a collection of tutorials would be configured as:</source>
          <target state="translated">You can also manually order the documents by setting an &lt;code&gt;order&lt;/code&gt; metadata with &lt;strong&gt;the filenames listed&lt;/strong&gt; in the desired order. For example, a collection of tutorials would be configured as:</target>
        </trans-unit>
        <trans-unit id="76ab2e76d58973c4bf70e44968efff02ff10735e" translate="yes" xml:space="preserve">
          <source>You can also pass parameters to an include. For example, suppose you have a file called &lt;code&gt;note.html&lt;/code&gt; in your &lt;code&gt;_includes&lt;/code&gt; folder that contains this formatting:</source>
          <target state="translated">포함에 매개 변수를 전달할 수도 있습니다. 예를 들어,라는 파일이 있다고 가정 &lt;code&gt;note.html&lt;/code&gt; 당신에 &lt;code&gt;_includes&lt;/code&gt; 해당 폴더를이 포맷을 포함 :</target>
        </trans-unit>
        <trans-unit id="afef15edec11d7e1fe30fef3e8dde4ca08df6408" translate="yes" xml:space="preserve">
          <source>You can also register and trigger hooks for Jekyll objects introduced by your plugin. All it takes is placing &lt;code&gt;trigger&lt;/code&gt; calls under a suitable &lt;code&gt;owner&lt;/code&gt; name, at positons desired within your custom class and registering the &lt;code&gt;owner&lt;/code&gt; by your plugin.</source>
          <target state="translated">You can also register and trigger hooks for Jekyll objects introduced by your plugin. All it takes is placing &lt;code&gt;trigger&lt;/code&gt; calls under a suitable &lt;code&gt;owner&lt;/code&gt; name, at positons desired within your custom class and registering the &lt;code&gt;owner&lt;/code&gt; by your plugin.</target>
        </trans-unit>
        <trans-unit id="9d862deca986020ccad0768732e8f9a3ad68477c" translate="yes" xml:space="preserve">
          <source>You can also set the &lt;code&gt;excerpt_separator&lt;/code&gt; globally in your &lt;code&gt;_config.yml&lt;/code&gt; configuration file.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 구성 파일 에서 &lt;code&gt;excerpt_separator&lt;/code&gt; 를 전체적으로 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="29100d9b5b53463a3614af117cdd8e7a9973def5" translate="yes" xml:space="preserve">
          <source>You can also set your own front matter variables you can access in Liquid. For instance, if you set a variable called &lt;code&gt;food&lt;/code&gt;, you can use that in your page:</source>
          <target state="translated">You can also set your own front matter variables you can access in Liquid. For instance, if you set a variable called &lt;code&gt;food&lt;/code&gt; , you can use that in your page:</target>
        </trans-unit>
        <trans-unit id="ad67740def3f388f5f91692051f57c615deaed28" translate="yes" xml:space="preserve">
          <source>You can also use &lt;a href=&quot;https://rubygems.org/gems/jekyll&quot;&gt;RubyGems&lt;/a&gt; to find the current versioning of any gem. But you can also use the &lt;code&gt;gem&lt;/code&gt; command line tool:</source>
          <target state="translated">&lt;a href=&quot;https://rubygems.org/gems/jekyll&quot;&gt;RubyGems&lt;/a&gt; 를 사용 하여 보석의 현재 버전을 찾을 수도 있습니다 . 그러나 &lt;code&gt;gem&lt;/code&gt; 명령 줄 도구 를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f7b256455c07e37d0d1c19189599eef7661657ea" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;link&lt;/code&gt; tag to create a link in Markdown as follows:</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; 태그를 사용하여 다음과 같이 마크 다운에 링크를 만들 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="db3c48181598ce420e6bf6b9ffe8e868fb7a2b9d" translate="yes" xml:space="preserve">
          <source>You can also use this tag to create a link to a post in Markdown as follows:</source>
          <target state="translated">이 태그를 사용하여 다음과 같이 마크 다운에서 게시물에 대한 링크를 만들 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="bdc2f9b7cb1b81a6c2752965856450fb353524a7" translate="yes" xml:space="preserve">
          <source>You can choose to include file fragments relative to the current file by using the &lt;code&gt;include_relative&lt;/code&gt; tag:</source>
          <target state="translated">&lt;code&gt;include_relative&lt;/code&gt; 태그 를 사용하여 현재 파일을 기준으로 파일 조각을 포함하도록 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2294ff3935b27e6c9194251f8be4f50d980af1aa" translate="yes" xml:space="preserve">
          <source>You can configure your site&amp;rsquo;s permalinks through the &lt;a href=&quot;../configuration/index&quot;&gt;Configuration&lt;/a&gt; file or in the &lt;a href=&quot;../frontmatter/index&quot;&gt;Front Matter&lt;/a&gt; for each post, page, or collection.</source>
          <target state="translated">각 게시물, 페이지 또는 컬렉션에 대해 &lt;a href=&quot;../configuration/index&quot;&gt;구성&lt;/a&gt; 파일 또는 &lt;a href=&quot;../frontmatter/index&quot;&gt;Front Matter&lt;/a&gt; 를 통해 사이트의 영구 링크를 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e008ba8371f82fc193af33f7723ccee4ad2f5628" translate="yes" xml:space="preserve">
          <source>You can control this sorting via the collection&amp;rsquo;s metadata.</source>
          <target state="translated">You can control this sorting via the collection&amp;rsquo;s metadata.</target>
        </trans-unit>
        <trans-unit id="93b376425d597f05f823c1af8ee870a06a9d0815" translate="yes" xml:space="preserve">
          <source>You can create a generator when you need Jekyll to create additional content based on your own rules.</source>
          <target state="translated">자신의 규칙에 따라 추가 컨텐츠를 작성하기 위해 Jekyll이 필요할 때 생성기를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c5ac50a727e15018aadf5907701bb24e44e8242" translate="yes" xml:space="preserve">
          <source>You can create links in your topics to other posts, pages, or collection items in a way that is valid no matter what permalink configuration you choose. By using the &lt;code&gt;link&lt;/code&gt; tag, if you change your permalinks, your links won&amp;rsquo;t break. See &lt;a href=&quot;../templates/index#link&quot;&gt;Linking to pages&lt;/a&gt; in Templates for more details.</source>
          <target state="translated">선택한 퍼머 링크 구성에 관계없이 유효한 방식으로 주제에 다른 게시물, 페이지 또는 컬렉션 항목에 대한 링크를 만들 수 있습니다. &lt;code&gt;link&lt;/code&gt; 태그 를 사용하면 영구 링크를 변경해도 링크가 끊어지지 않습니다. 자세한 내용 은 템플릿의 &lt;a href=&quot;../templates/index#link&quot;&gt;페이지&lt;/a&gt; 에 연결을 참조 하십시오.</target>
        </trans-unit>
        <trans-unit id="a5ed5aac85e2186e0572bd680800e88232214541" translate="yes" xml:space="preserve">
          <source>You can easily test your website build against one or more versions of Ruby. The following guide will show you how to set up a free build environment on &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis&lt;/a&gt;, with &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; integration for pull requests.</source>
          <target state="translated">하나 이상의 Ruby 버전에서 웹 사이트 빌드를 쉽게 테스트 할 수 있습니다. 다음 가이드는 풀 요청을위한 &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; 통합을 통해 &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis&lt;/a&gt; 에서 무료 빌드 환경을 설정하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="87c167fb712f2b64edb622d4346bf6488b634c5a" translate="yes" xml:space="preserve">
          <source>You can find a few useful plugins at the following locations:</source>
          <target state="translated">다음 위치에서 몇 가지 유용한 플러그인을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="10a1d3beb7409d03c89c65c38008e756961cab8d" translate="yes" xml:space="preserve">
          <source>You can find and preview themes on different galleries:</source>
          <target state="translated">You can find and preview themes on different galleries:</target>
        </trans-unit>
        <trans-unit id="2667e1e7155903fb77c85503837a4b8608e08eec" translate="yes" xml:space="preserve">
          <source>You can have multiple themes listed in your site&amp;rsquo;s &lt;code&gt;Gemfile&lt;/code&gt;, but only one theme can be selected in your site&amp;rsquo;s &lt;code&gt;_config.yml&lt;/code&gt;.</source>
          <target state="translated">당신은 당신의 사이트에 나와있는 여러 테마 가질 수 &lt;code&gt;Gemfile&lt;/code&gt; 을 하지만, 단 하나의 테마 사이트에서 선택할 수 있습니다 &lt;code&gt;_config.yml&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e2cd819ffbb5aa16bcf129dda0a2f4b28f186f9" translate="yes" xml:space="preserve">
          <source>You can link to the generated page using the &lt;code&gt;url&lt;/code&gt; attribute:</source>
          <target state="translated">You can link to the generated page using the &lt;code&gt;url&lt;/code&gt; attribute:</target>
        </trans-unit>
        <trans-unit id="f14393d1d47309ff59cd2be58c051ba77f93adda" translate="yes" xml:space="preserve">
          <source>You can link to the output page using &lt;code&gt;author.url&lt;/code&gt;.</source>
          <target state="translated">You can link to the output page using &lt;code&gt;author.url&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f15f8933f086a315e0c6843ad1dbb164232a54c0" translate="yes" xml:space="preserve">
          <source>You can make code snippets include line-numbers by adding the word &lt;code&gt;linenos&lt;/code&gt; to the end of the opening highlight tag like this: &lt;code&gt;{% highlight ruby linenos %}&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;{% highlight ruby linenos %}&lt;/code&gt; 와 같이 여는 강조 표시 태그의 끝에 &lt;code&gt;linenos&lt;/code&gt; 단어를 추가하여 코드 스 니펫에 줄 번호를 포함시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bca124f4d9f1d6e9fe08986b24d34c20e66c1114" translate="yes" xml:space="preserve">
          <source>You can make sure time management is working properly by inspecting your &lt;code&gt;_posts&lt;/code&gt; folder. You should see a markdown file with the current date in the filename.</source>
          <target state="translated">&lt;code&gt;_posts&lt;/code&gt; 폴더 를 검사하여 시간 관리가 제대로 작동하는지 확인할 수 있습니다 . 파일 이름에 현재 날짜가 포함 된 마크 다운 파일이 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="43b095b96b261d78e7c32f39d5a51bd4b2c68b72" translate="yes" xml:space="preserve">
          <source>You can now prefix all jekyll commands listed in this tutorial with &lt;code&gt;bundle exec&lt;/code&gt; to make sure you use the jekyll version defined in your &lt;code&gt;Gemfile&lt;/code&gt;.</source>
          <target state="translated">You can now prefix all jekyll commands listed in this tutorial with &lt;code&gt;bundle exec&lt;/code&gt; to make sure you use the jekyll version defined in your &lt;code&gt;Gemfile&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d64c7071a6264b6432d263be08589878967d2a48" translate="yes" xml:space="preserve">
          <source>You can now render the list of members in a template:</source>
          <target state="translated">이제 템플릿에서 멤버 목록을 렌더링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8794afe2be5d5773ccf8527a623ece5f8611313f" translate="yes" xml:space="preserve">
          <source>You can optionally specify a directory to store all your collections in the same place with &lt;code&gt;collections_dir: my_collections&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;collections_dir: my_collections&lt;/code&gt; 사용하여 같은 위치에 모든 콜렉션을 저장할 디렉토리를 선택적으로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="46d45ae00f226ea4c03a4d55784e2d9a2786d403" translate="yes" xml:space="preserve">
          <source>You can optionally specify metadata for your collection in the configuration:</source>
          <target state="translated">구성에서 컬렉션의 메타 데이터를 선택적으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81cdc26f52a13375caf0264be4064896228f9f5c" translate="yes" xml:space="preserve">
          <source>You can provide custom headers for your site by adding them to &lt;code&gt;_config.yml&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 에 추가하여 사이트에 대한 사용자 지정 헤더를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0bb7f995c456cf6b1e1fa756e8ae730cb0a86d03" translate="yes" xml:space="preserve">
          <source>You can see that in the second to last example above. First, we set the default page layout to &lt;code&gt;my-site&lt;/code&gt;. Then, using a more specific path, we set the default layout for pages in the &lt;code&gt;projects/&lt;/code&gt; path to &lt;code&gt;project&lt;/code&gt;. This can be done with any value that you would set in the page or post front matter.</source>
          <target state="translated">위의 두 번째에서 마지막 예까지 볼 수 있습니다. 먼저 기본 페이지 레이아웃을 &lt;code&gt;my-site&lt;/code&gt; 로 설정했습니다 . 그런 다음보다 구체적인 경로를 사용하여 &lt;code&gt;projects/&lt;/code&gt; 경로의 페이지에 대한 기본 레이아웃 을 &lt;code&gt;project&lt;/code&gt; 로 설정 합니다. 이 작업은 페이지에서 설정하거나 첫 번째 사안에서 설정 한 값으로 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d06abd530e58c847bd4ca6ef4fed8ab91e07633" translate="yes" xml:space="preserve">
          <source>You can set front matter in layouts, the only difference is when you&amp;rsquo;re using in Liquid, you need to use the &lt;code&gt;layout&lt;/code&gt; variable instead of &lt;code&gt;page&lt;/code&gt;. For example:</source>
          <target state="translated">You can set front matter in layouts, the only difference is when you&amp;rsquo;re using in Liquid, you need to use the &lt;code&gt;layout&lt;/code&gt; variable instead of &lt;code&gt;page&lt;/code&gt; . For example:</target>
        </trans-unit>
        <trans-unit id="7dde98e897f931cb83f47f87b59212983c47adf1" translate="yes" xml:space="preserve">
          <source>You can still use GitHub Pages to publish your site, but you&amp;rsquo;ll need to convert the site locally and push the generated static files to your GitHub repository instead of the Jekyll source files.</source>
          <target state="translated">여전히 GitHub 페이지를 사용하여 사이트를 게시 할 수 있지만 사이트를 로컬로 변환하고 생성 된 정적 파일을 Jekyll 소스 파일 대신 GitHub 리포지토리로 푸시해야합니다.</target>
        </trans-unit>
        <trans-unit id="c3630099f3eecb2a8ad997bb6c1a0b973ed05a30" translate="yes" xml:space="preserve">
          <source>You can test your website build against one or more versions of Ruby. The following guide will show you how to set up a free build environment on &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis&lt;/a&gt;, with &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; integration for pull requests.</source>
          <target state="translated">You can test your website build against one or more versions of Ruby. The following guide will show you how to set up a free build environment on &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis&lt;/a&gt;, with &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; integration for pull requests.</target>
        </trans-unit>
        <trans-unit id="225c3c1726f4de9df215a2c686dc554730e523d4" translate="yes" xml:space="preserve">
          <source>You can use Liquid binary operators &lt;code&gt;or&lt;/code&gt; and &lt;code&gt;and&lt;/code&gt; in the expression passed to the &lt;code&gt;where_exp&lt;/code&gt; filter to employ multiple conditionals in the operation.</source>
          <target state="translated">You can use Liquid binary operators &lt;code&gt;or&lt;/code&gt; and &lt;code&gt;and&lt;/code&gt; in the expression passed to the &lt;code&gt;where_exp&lt;/code&gt; filter to employ multiple conditionals in the operation.</target>
        </trans-unit>
        <trans-unit id="62a6dd2e6002671bc405bd7c00321a008fe1d443" translate="yes" xml:space="preserve">
          <source>You can use the &lt;code&gt;where&lt;/code&gt; filter to detect documents and pages with properties that are &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;&quot;&quot;&lt;/code&gt;. For example,</source>
          <target state="translated">You can use the &lt;code&gt;where&lt;/code&gt; filter to detect documents and pages with properties that are &lt;code&gt;nil&lt;/code&gt; or &lt;code&gt;&quot;&quot;&lt;/code&gt; . For example,</target>
        </trans-unit>
        <trans-unit id="83036c72eb4eff4eac45d17fe71c15df9f5978cb" translate="yes" xml:space="preserve">
          <source>You construct permalinks by creating a template URL where dynamic elements are represented by colon-prefixed keywords. The default template permalink is &lt;code&gt;/:categories/:year/:month/:day/:title.html&lt;/code&gt;. Each of the colon-prefixed keywords is a template variable.</source>
          <target state="translated">동적 요소가 콜론으로 시작되는 키워드로 표시되는 템플리트 URL을 작성하여 퍼머 링크를 구성합니다. 기본 템플릿 영구 링크는 &lt;code&gt;/:categories/:year/:month/:day/:title.html&lt;/code&gt; 입니다. 콜론 접두사 키워드는 각각 템플릿 변수입니다.</target>
        </trans-unit>
        <trans-unit id="52987ff2a335fb4664bfb6b279f4b37585ca6d72" translate="yes" xml:space="preserve">
          <source>You could list them individually in both &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;_config.yml&lt;/code&gt;.</source>
          <target state="translated">You could list them individually in both &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;_config.yml&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="82372e5941e515cd224c324759f4fab4de075b38" translate="yes" xml:space="preserve">
          <source>You could templatize this content in your include and make each value available as a parameter, like this:</source>
          <target state="translated">include에서이 컨텐츠를 템플릿 화하고 다음과 같이 각 값을 매개 변수로 사용 가능하게 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4218ab9ddf22eb0aa79127d78253dfbfa88e5050" translate="yes" xml:space="preserve">
          <source>You could then reference that variable in your include:</source>
          <target state="translated">그런 다음 include에서 해당 변수를 참조 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="58962678aa0c2b4dbf5de1f9bffde94b16577be7" translate="yes" xml:space="preserve">
          <source>You could then reference that variable in your link:</source>
          <target state="translated">You could then reference that variable in your link:</target>
        </trans-unit>
        <trans-unit id="86cdbe95bd30b4ef6df07a0a4ad92845ba5bccc5" translate="yes" xml:space="preserve">
          <source>You could use a standard CSS file for styling, we&amp;rsquo;re going to take it a step further by using &lt;a href=&quot;https://sass-lang.com/&quot;&gt;Sass&lt;/a&gt;. Sass is a fantastic extension to CSS baked right into Jekyll.</source>
          <target state="translated">You could use a standard CSS file for styling, we&amp;rsquo;re going to take it a step further by using &lt;a href=&quot;https://sass-lang.com/&quot;&gt;Sass&lt;/a&gt;. Sass is a fantastic extension to CSS baked right into Jekyll.</target>
        </trans-unit>
        <trans-unit id="ec59f75ef4b6ca27532722a835f3c9fbbfdae7d3" translate="yes" xml:space="preserve">
          <source>You have 3 options for installing plugins:</source>
          <target state="translated">플러그인 설치를위한 3 가지 옵션이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="dadd08f186fa1ce7190f3ac9e58cb8d6c72cce8e" translate="yes" xml:space="preserve">
          <source>You have full access to the front matter of the origin. In the example above, &lt;code&gt;page.title&lt;/code&gt; comes from the page front matter.</source>
          <target state="translated">You have full access to the front matter of the origin. In the example above, &lt;code&gt;page.title&lt;/code&gt; comes from the page front matter.</target>
        </trans-unit>
        <trans-unit id="5cf5d8fc85bef0fd436680d72baac9fd7975e90a" translate="yes" xml:space="preserve">
          <source>You have full control over how (and where) you display your posts, and how you structure your site. You should read more about &lt;a href=&quot;../liquid/index&quot;&gt;how templates work&lt;/a&gt; with Jekyll if you want to know more.</source>
          <target state="translated">You have full control over how (and where) you display your posts, and how you structure your site. You should read more about &lt;a href=&quot;../liquid/index&quot;&gt;how templates work&lt;/a&gt; with Jekyll if you want to know more.</target>
        </trans-unit>
        <trans-unit id="2d1d6cf06ef7c9b233856faee5b424a09cd21282" translate="yes" xml:space="preserve">
          <source>You have to use a &lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;Ruby+Devkit&lt;/a&gt; version of the RubyInstaller and install the MSYS2 build tools to successfully install the &lt;code&gt;wdm&lt;/code&gt; gem.</source>
          <target state="translated">You have to use a &lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;Ruby+Devkit&lt;/a&gt; version of the RubyInstaller and install the MSYS2 build tools to successfully install the &lt;code&gt;wdm&lt;/code&gt; gem.</target>
        </trans-unit>
        <trans-unit id="f2c1892c073f03f142f840eb36f55d5f2a3afd30" translate="yes" xml:space="preserve">
          <source>You may also specify the destination of the pagination pages:</source>
          <target state="translated">페이지 매김 페이지의 대상을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="feae3676e579249c171fb75ff081a86988787055" translate="yes" xml:space="preserve">
          <source>You may also specify the output style with the &lt;code&gt;style&lt;/code&gt; option in your &lt;code&gt;_config.yml&lt;/code&gt; file:</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 파일 에서 &lt;code&gt;style&lt;/code&gt; 옵션을 사용하여 출력 스타일을 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="813825e416d152aad17c5da9d4b383eef6abbb21" translate="yes" xml:space="preserve">
          <source>You may first have to download and install the &lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;Ruby DevKit&lt;/a&gt; by following &lt;a href=&quot;https://github.com/oneclick/rubyinstaller/wiki/Development-Kit&quot;&gt;the instructions here&lt;/a&gt;.</source>
          <target state="translated">먼저 &lt;a href=&quot;https://github.com/oneclick/rubyinstaller/wiki/Development-Kit&quot;&gt;여기의 지침&lt;/a&gt; 에 따라 &lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;Ruby DevKit&lt;/a&gt; 을 다운로드하여 설치해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0e8248f7de4dbe3e3195e0868132b50b54922638" translate="yes" xml:space="preserve">
          <source>You may receive an error when checking if Jekyll has been installed properly. Reboot your system and run &lt;code&gt;jekyll -v&lt;/code&gt; again. If the error persists, please open a &lt;a href=&quot;https://github.com/oneclick/rubyinstaller2/issues/new&quot;&gt;RubyInstaller issue&lt;/a&gt;.</source>
          <target state="translated">You may receive an error when checking if Jekyll has been installed properly. Reboot your system and run &lt;code&gt;jekyll -v&lt;/code&gt; again. If the error persists, please open a &lt;a href=&quot;https://github.com/oneclick/rubyinstaller2/issues/new&quot;&gt;RubyInstaller issue&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="78b616d2afea8c81f2a3a97e314e4c6e686ba4c4" translate="yes" xml:space="preserve">
          <source>You may still be wondering why you&amp;rsquo;d output it this way as it takes more source code than raw HTML. In this next step, you&amp;rsquo;ll see why we&amp;rsquo;ve been doing this.</source>
          <target state="translated">You may still be wondering why you&amp;rsquo;d output it this way as it takes more source code than raw HTML. In this next step, you&amp;rsquo;ll see why we&amp;rsquo;ve been doing this.</target>
        </trans-unit>
        <trans-unit id="6c7c0688920d68e8b8ed1a532bfa43b2ba7eb0e6" translate="yes" xml:space="preserve">
          <source>You may use any of the aforementioned plugin options simultaneously in the same site if you so choose. Use of one does not restrict the use of the others.</source>
          <target state="translated">원하는 경우 위에서 언급 한 플러그인 옵션을 동일한 사이트에서 동시에 사용할 수 있습니다. 하나의 사용이 다른 것의 사용을 제한하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="af53917fd7fb9df339055948ef4354df372d18eb" translate="yes" xml:space="preserve">
          <source>You may wish to use filters to find your collection: &lt;code&gt;{{ site.collections | where: &quot;label&quot;, &quot;myCollection&quot; | first }}&lt;/code&gt;</source>
          <target state="translated">필터를 사용하여 컬렉션을 찾을 수 있습니다. &lt;code&gt;{{ site.collections | where: &quot;label&quot;, &quot;myCollection&quot; | first }}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="18d74fde536b64922ceef41d439fc4e956ce63bd" translate="yes" xml:space="preserve">
          <source>You might be wondering how you can have a blog without a database. In true Jekyll style, blogging is powered by text files only.</source>
          <target state="translated">You might be wondering how you can have a blog without a database. In true Jekyll style, blogging is powered by text files only.</target>
        </trans-unit>
        <trans-unit id="fc3caae254b14bdc85762701fcedb9d34d316759" translate="yes" xml:space="preserve">
          <source>You might want to have a particular folder structure for your source files that changes for the built site. With &lt;a href=&quot;../permalinks/index&quot;&gt;permalinks&lt;/a&gt; you have full control of the output URL.</source>
          <target state="translated">You might want to have a particular folder structure for your source files that changes for the built site. With &lt;a href=&quot;../permalinks/index&quot;&gt;permalinks&lt;/a&gt; you have full control of the output URL.</target>
        </trans-unit>
        <trans-unit id="b14e1937660ee77bf91641a024c1f476923d38c9" translate="yes" xml:space="preserve">
          <source>You must also register the custom tag with the Liquid template engine as follows:</source>
          <target state="translated">다음과 같이 Liquid 템플릿 엔진에 사용자 정의 태그를 등록해야합니다.</target>
        </trans-unit>
        <trans-unit id="de70508fa60f56c7261e9ccae9189cb17ed3f283" translate="yes" xml:space="preserve">
          <source>You must have &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/about&quot;&gt;Windows Subsystem for Linux&lt;/a&gt; enabled.</source>
          <target state="translated">You must have &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/about&quot;&gt;Windows Subsystem for Linux&lt;/a&gt; enabled.</target>
        </trans-unit>
        <trans-unit id="bd4559d57d7b39444a0bd8264fa3bdbc36bb5bad" translate="yes" xml:space="preserve">
          <source>You must include the file&amp;rsquo;s original extension when using the &lt;code&gt;link&lt;/code&gt; tag. Here are some examples:</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; 태그를 사용할 때 파일의 원래 확장자를 포함해야합니다 . 여기 몇 가지 예가 있어요.</target>
        </trans-unit>
        <trans-unit id="cbec99e671925cf4b4ac870b8970c517bb1e23ce" translate="yes" xml:space="preserve">
          <source>You should include these references in the &lt;code&gt;Gemfile&lt;/code&gt; in one of two ways.</source>
          <target state="translated">You should include these references in the &lt;code&gt;Gemfile&lt;/code&gt; in one of two ways.</target>
        </trans-unit>
        <trans-unit id="8c155ef26b19ec8c239e5862536d6228c5f5622c" translate="yes" xml:space="preserve">
          <source>You want to ensure the Travis builds for your site are being run only on the branch or branches which contain your site. One means of ensuring this isolation is including a branch whitelist in your Travis configuration file. By specifying the &lt;code&gt;gh-pages&lt;/code&gt; branch, you will ensure the associated test script (discussed above) is only executed on site branches. If you use a pull request flow for proposing changes, you may wish to enforce a convention for your builds such that all branches containing edits are prefixed, exemplified above with the &lt;code&gt;/pages-(.*)/&lt;/code&gt; regular expression.</source>
          <target state="translated">사이트에 대한 Travis 빌드가 사이트를 포함하는 지점에서만 실행되도록하려고합니다. 이러한 격리를 보장하는 한 가지 방법은 Travis 구성 파일에 분기 화이트리스트를 포함시키는 것입니다. &lt;code&gt;gh-pages&lt;/code&gt; 분기 를 지정하면 관련 테스트 스크립트 (위에서 논의 됨)가 사이트 분기에서만 실행됩니다. 변경을 제안하기 위해 풀 요청 플로우를 사용하는 경우, 편집을 포함하는 모든 브랜치에 &lt;code&gt;/pages-(.*)/&lt;/code&gt; 정규식을 사용하여 접두사가 붙도록 빌드 규칙을 적용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c59eb0fb83ec6e55ae9231cb96d832a3172db660" translate="yes" xml:space="preserve">
          <source>You won&amp;rsquo;t need to place your included content within the &lt;code&gt;_includes&lt;/code&gt; directory. Instead, the inclusion is specifically relative to the file where the tag is being used. For example, if &lt;code&gt;_posts/2014-09-03-my-file.markdown&lt;/code&gt; uses the &lt;code&gt;include_relative&lt;/code&gt; tag, the included file must be within the &lt;code&gt;_posts&lt;/code&gt; directory or one of its subdirectories.</source>
          <target state="translated">포함 된 컨텐츠를 &lt;code&gt;_includes&lt;/code&gt; 디렉토리 에 배치하지 않아도됩니다 . 대신 포함은 태그가 사용되는 파일과 관련이 있습니다. 예를 들어, &lt;code&gt;_posts/2014-09-03-my-file.markdown&lt;/code&gt; 이 &lt;code&gt;include_relative&lt;/code&gt; 태그를 사용하는 경우 포함 된 파일은 &lt;code&gt;_posts&lt;/code&gt; 디렉토리 또는 해당 서브 디렉토리 중 하나에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="e47678fcc57fc0793f6e8053d52ed978fb4583d9" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll need to reference the stylesheet in your layout.</source>
          <target state="translated">You&amp;rsquo;ll need to reference the stylesheet in your layout.</target>
        </trans-unit>
        <trans-unit id="ef98b7d599a26111b7363e4a3b4c03e3b43eab87" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;ll notice this is almost identical to &lt;code&gt;index.html&lt;/code&gt; except there&amp;rsquo;s no front matter and the content of the page is replaced with a &lt;code&gt;content&lt;/code&gt; variable. &lt;code&gt;content&lt;/code&gt; is a special variable which has the value of the rendered content of the page it&amp;rsquo;s called on.</source>
          <target state="translated">You&amp;rsquo;ll notice this is almost identical to &lt;code&gt;index.html&lt;/code&gt; except there&amp;rsquo;s no front matter and the content of the page is replaced with a &lt;code&gt;content&lt;/code&gt; variable. &lt;code&gt;content&lt;/code&gt; is a special variable which has the value of the rendered content of the page it&amp;rsquo;s called on.</target>
        </trans-unit>
        <trans-unit id="94c4400f3ac0dd6a1ce3e6068141bd8ca93ebd1c" translate="yes" xml:space="preserve">
          <source>You&amp;rsquo;re now running the current stable version of Ruby!</source>
          <target state="translated">You&amp;rsquo;re now running the current stable version of Ruby!</target>
        </trans-unit>
        <trans-unit id="a5acac90148d1abc3866043511b2be719baeaa33" translate="yes" xml:space="preserve">
          <source>You'll see this by a feature that hasn't been released</source>
          <target state="translated">출시되지 않은 기능으로 볼 수 있습니다</target>
        </trans-unit>
        <trans-unit id="4a57b6049a550324f79bde6a1f6ece0ab9d1f706" translate="yes" xml:space="preserve">
          <source>Your &lt;code&gt;.travis.yml&lt;/code&gt; file should look like this:</source>
          <target state="translated">귀하의 &lt;code&gt;.travis.yml&lt;/code&gt; 의 파일은 다음과 같아야합니다 :</target>
        </trans-unit>
        <trans-unit id="9a73aca4e2a6509bb048f7d844f4c213ed2e3c3a" translate="yes" xml:space="preserve">
          <source>Your Command Prompt instance should now be a Bash instance. Now we must update our repo lists and packages.</source>
          <target state="translated">명령 프롬프트 인스턴스는 이제 Bash 인스턴스 여야합니다. 이제 저장소 목록과 패키지를 업데이트해야합니다.</target>
        </trans-unit>
        <trans-unit id="a1771f185112c996dbf555c49fae65ea38d9f743" translate="yes" xml:space="preserve">
          <source>Your Content</source>
          <target state="translated">귀하의 콘텐츠</target>
        </trans-unit>
        <trans-unit id="b8835d7b143874d94a7c1a39630689b09748d56f" translate="yes" xml:space="preserve">
          <source>Your dynamic content, so to speak. The naming convention of these files is important, and must follow the format: &lt;code&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt;. The &lt;a href=&quot;../permalinks/index&quot;&gt;permalinks&lt;/a&gt; can be customized for each post, but the date and markup language are determined solely by the file name.</source>
          <target state="translated">말하자면 동적 콘텐츠입니다. 이러한 파일의 이름 지정 규칙은 중요하며 &lt;code&gt;YEAR-MONTH-DAY-title.MARKUP&lt;/code&gt; 형식을 따라야합니다 . &lt;a href=&quot;../permalinks/index&quot;&gt;영구 링크는&lt;/a&gt; 각 게시물에 대한 사용자 정의 할 수 있지만, 날짜와 마크 업 언어는 파일 이름에 의해서만 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="c23dddd636cb6a74d2fb8bd56a3d1999bb003c55" translate="yes" xml:space="preserve">
          <source>Your environment values can be anything you want (not just &lt;code&gt;development&lt;/code&gt; or &lt;code&gt;production&lt;/code&gt;). Some elements you might want to hide in development environments include Disqus comment forms or Google Analytics. Conversely, you might want to expose an &amp;ldquo;Edit me in GitHub&amp;rdquo; button in a development environment but not include it in production environments.</source>
          <target state="translated">환경 가치는 &lt;code&gt;development&lt;/code&gt; 이나 &lt;code&gt;production&lt;/code&gt; 뿐만 아니라 원하는 모든 것이 될 수 있습니다 . 개발 환경에서 숨길 수있는 일부 요소에는 Disqus 주석 양식 또는 Google 웹 로그 분석이 있습니다. 반대로, 개발 환경에서는 &quot;GitHub에서 편집&quot;버튼을 노출하고 싶지만 프로덕션 환경에는 포함시키지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="553ff466264b072866ba8dd0412dd697c42812e5" translate="yes" xml:space="preserve">
          <source>Your file should look something like:</source>
          <target state="translated">Your file should look something like:</target>
        </trans-unit>
        <trans-unit id="92a9bfd65763162cd4ef7751a63738260dfc90ca" translate="yes" xml:space="preserve">
          <source>Your first plugin</source>
          <target state="translated">Your first plugin</target>
        </trans-unit>
        <trans-unit id="8a46ae9c75c32172e941f6a75dcd0dc98489689e" translate="yes" xml:space="preserve">
          <source>Your site is automatically generated by GitHub Pages when you push your source files. Note that GitHub Pages works equally well for regular HTML content, simply because Jekyll treats files without YAML front matter as static assets. So if you only need to push generated HTML, you&amp;rsquo;re good to go without any further setup.</source>
          <target state="translated">소스 파일을 푸시하면 GitHub 페이지에서 사이트가 자동으로 생성됩니다. GitHub Pages는 일반 HTML 콘텐츠에 똑같이 잘 작동합니다. Jekyll은 YAML을 사용하지 않는 파일을 정적 자산으로 취급하기 때문입니다. 따라서 생성 된 HTML 만 푸시하면 더 이상 설정하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="a431b073307ef46c1c6bd59a131d311a8bd3e59d" translate="yes" xml:space="preserve">
          <source>Your site is automatically generated by GitHub Pages when you push your source files. Note that GitHub Pages works equally well for regular HTML content, simply because Jekyll treats files without front matter as static assets. So if you only need to push generated HTML, you&amp;rsquo;re good to go without any further setup.</source>
          <target state="translated">Your site is automatically generated by GitHub Pages when you push your source files. Note that GitHub Pages works equally well for regular HTML content, simply because Jekyll treats files without front matter as static assets. So if you only need to push generated HTML, you&amp;rsquo;re good to go without any further setup.</target>
        </trans-unit>
        <trans-unit id="124b347e92488a2502b642d015ff1e518a9fb5ec" translate="yes" xml:space="preserve">
          <source>Your terminal should now be a Bash instance. Next, update your repository lists and packages:</source>
          <target state="translated">Your terminal should now be a Bash instance. Next, update your repository lists and packages:</target>
        </trans-unit>
        <trans-unit id="40fe2e8a3ec78c5ad1c1d6c92ce61af6341b18cf" translate="yes" xml:space="preserve">
          <source>Your theme should include a &lt;code&gt;/README.md&lt;/code&gt; file, which explains how site authors can install and use your theme. What layouts are included? What includes? Do they need to add anything special to their site&amp;rsquo;s configuration file?</source>
          <target state="translated">테마에는 사이트 작성자가 테마를 설치하고 사용하는 방법을 설명하는 &lt;code&gt;/README.md&lt;/code&gt; 파일 이 포함되어야 합니다. 어떤 레이아웃이 포함되어 있습니까? 무엇을 포함합니까? 사이트의 구성 파일에 특별한 것을 추가해야합니까?</target>
        </trans-unit>
        <trans-unit id="f0286abd5b6c407b7155ef6a6aa920936a3fbbd7" translate="yes" xml:space="preserve">
          <source>Your theme&amp;rsquo;s styles can be included in the user&amp;rsquo;s stylesheet using the &lt;code&gt;@import&lt;/code&gt; directive.</source>
          <target state="translated">&lt;code&gt;@import&lt;/code&gt; 지시문을 사용하여 테마의 스타일을 사용자의 스타일 시트에 포함시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e29302c3d7ec4a5aa08cecaf36bdb5c80f08ca50" translate="yes" xml:space="preserve">
          <source>Your theme&amp;rsquo;s stylesheets should be placed in your theme&amp;rsquo;s &lt;code&gt;_sass&lt;/code&gt; folder, again, just as you would when authoring a Jekyll site.</source>
          <target state="translated">테마의 스타일 시트는 Jekyll 사이트를 작성할 때와 마찬가지로 테마의 &lt;code&gt;_sass&lt;/code&gt; 폴더에 다시 배치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="53a0acfad59379b3e050338bf9f23cfc172ee787" translate="yes" xml:space="preserve">
          <source>_</source>
          <target state="translated">_</target>
        </trans-unit>
        <trans-unit id="cddd9dea2f2c15cc2c0f262b863ae26ba45a0d26" translate="yes" xml:space="preserve">
          <source>a list of posts for the current page</source>
          <target state="translated">현재 페이지의 게시물 목록</target>
        </trans-unit>
        <trans-unit id="82451b41fd7878180b6aa2b54e369cbec4e8032c" translate="yes" xml:space="preserve">
          <source>abs</source>
          <target state="translated">abs</target>
        </trans-unit>
        <trans-unit id="cdd41bd4d17b885aa9a031d54883c85a6fb78673" translate="yes" xml:space="preserve">
          <source>and you&amp;rsquo;ll search for just the name &lt;code&gt;jekyll&lt;/code&gt;, and in brackets will be latest version. Another way to check if you have the latest version is to run the command &lt;code&gt;gem outdated&lt;/code&gt;. This will provide a list of all the gems on your system that need to be updated. If you aren&amp;rsquo;t running the latest version, run this command:</source>
          <target state="translated">&lt;code&gt;jekyll&lt;/code&gt; 이라는 이름 만 검색하면 괄호 안에 최신 버전이 표시됩니다. 최신 버전인지 확인하는 또 다른 방법은 &lt;code&gt;gem outdated&lt;/code&gt; 명령을 구식 으로 실행하는 것 입니다. 업데이트가 필요한 시스템의 모든 gem 목록이 제공됩니다. 최신 버전을 실행하지 않는 경우 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="db43bff34c78044870bc6b1ae2aa16902bb1bb8a" translate="yes" xml:space="preserve">
          <source>append</source>
          <target state="translated">append</target>
        </trans-unit>
        <trans-unit id="82e3d29d066d83ac586525e18512ce11defd6da1" translate="yes" xml:space="preserve">
          <source>at_least</source>
          <target state="translated">at_least</target>
        </trans-unit>
        <trans-unit id="a68b5435700f68d5e023702fde46955f51d367d5" translate="yes" xml:space="preserve">
          <source>at_most</source>
          <target state="translated">at_most</target>
        </trans-unit>
        <trans-unit id="d01a341706c2a5c67a30eb227bba3d0fd7ace906" translate="yes" xml:space="preserve">
          <source>capitalize</source>
          <target state="translated">capitalize</target>
        </trans-unit>
        <trans-unit id="613af80c25dfbc9ef75ce605280571b9a518d632" translate="yes" xml:space="preserve">
          <source>ceil</source>
          <target state="translated">ceil</target>
        </trans-unit>
        <trans-unit id="84e17b567c13278b6db8b70738212be1721bfbba" translate="yes" xml:space="preserve">
          <source>classifier-reborn &amp;ndash; for &lt;code&gt;site.related_posts&lt;/code&gt;</source>
          <target state="translated">분류 자 다시 태어난 &amp;ndash; &lt;code&gt;site.related_posts&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4f44e2cffa8f7b516c9e499285c951d788431a28" translate="yes" xml:space="preserve">
          <source>compact</source>
          <target state="translated">compact</target>
        </trans-unit>
        <trans-unit id="49ba358c3272c2db40fc6ab2c103669678628b68" translate="yes" xml:space="preserve">
          <source>concat</source>
          <target state="translated">concat</target>
        </trans-unit>
        <trans-unit id="0f387cd682af1b56b6928e2187e1cf30f3f0f267" translate="yes" xml:space="preserve">
          <source>current page number</source>
          <target state="translated">현재 페이지 번호</target>
        </trans-unit>
        <trans-unit id="e927d0677c77241b707442314346326278051dd6" translate="yes" xml:space="preserve">
          <source>date</source>
          <target state="translated">date</target>
        </trans-unit>
        <trans-unit id="7505d64a54e061b7acd54ccd58b49dc43500b635" translate="yes" xml:space="preserve">
          <source>default</source>
          <target state="translated">default</target>
        </trans-unit>
        <trans-unit id="de1fc34be47d67a2920dd8cf3fb3ae39a968e633" translate="yes" xml:space="preserve">
          <source>divided_by</source>
          <target state="translated">divided_by</target>
        </trans-unit>
        <trans-unit id="e4370fb0ea59e2aeb0cf8fec4afadb0dd1b956c6" translate="yes" xml:space="preserve">
          <source>downcase</source>
          <target state="translated">downcase</target>
        </trans-unit>
        <trans-unit id="de9751fbe1f37ff6400bc3c3c630e8b6f873289d" translate="yes" xml:space="preserve">
          <source>each of the following &lt;code&gt;permalink&lt;/code&gt; configurations will produce the document structure shown below it.</source>
          <target state="translated">다음의 각 &lt;code&gt;permalink&lt;/code&gt; 구성은 아래에 표시된 문서 구조를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="cdecabe1520a398e4e46deff9d55b19bed6d6457" translate="yes" xml:space="preserve">
          <source>escape</source>
          <target state="translated">escape</target>
        </trans-unit>
        <trans-unit id="4090ae240cac69c217596d22e613696a07903bbc" translate="yes" xml:space="preserve">
          <source>escape_once</source>
          <target state="translated">escape_once</target>
        </trans-unit>
        <trans-unit id="e0996a37c13d44c3b06074939d43fa3759bd32c1" translate="yes" xml:space="preserve">
          <source>first</source>
          <target state="translated">first</target>
        </trans-unit>
        <trans-unit id="3684c9d3c05e7bee19e2728c6a5b2bbccf0cd9c7" translate="yes" xml:space="preserve">
          <source>floor</source>
          <target state="translated">floor</target>
        </trans-unit>
        <trans-unit id="8806b4aa6a559a639c0a6bdf59bea706975436a2" translate="yes" xml:space="preserve">
          <source>jamstackthemes.dev</source>
          <target state="translated">jamstackthemes.dev</target>
        </trans-unit>
        <trans-unit id="d6a1d7e6a4b379d0423f23938ee2455c4de4e020" translate="yes" xml:space="preserve">
          <source>jekyll-coffeescript &amp;ndash; processing of CoffeeScript</source>
          <target state="translated">jekyll-coffeescript &amp;ndash; CoffeeScript 처리</target>
        </trans-unit>
        <trans-unit id="44ecb5745225564cc0df8ba3faba076157148aeb" translate="yes" xml:space="preserve">
          <source>jekyll-gist &amp;ndash; the &lt;code&gt;gist&lt;/code&gt; Liquid tag</source>
          <target state="translated">jekyll-gist &amp;ndash; &lt;code&gt;gist&lt;/code&gt; 액체 태그</target>
        </trans-unit>
        <trans-unit id="61fed29c1622c2460e310b7ba074d09ad9690a05" translate="yes" xml:space="preserve">
          <source>jekyll-paginate &amp;ndash; Jekyll&amp;rsquo;s pagination solution from days past</source>
          <target state="translated">jekyll-paginate &amp;ndash; 과거의 Jekyll의 페이지 매김 솔루션</target>
        </trans-unit>
        <trans-unit id="a103bfb9a3a896ccfb238ec1d6d16839bd245548" translate="yes" xml:space="preserve">
          <source>jekyll-themes.com</source>
          <target state="translated">jekyll-themes.com</target>
        </trans-unit>
        <trans-unit id="4dd8d554cde3c013435e272017b2bae9f6e00d03" translate="yes" xml:space="preserve">
          <source>jekyllthemes.io</source>
          <target state="translated">jekyllthemes.io</target>
        </trans-unit>
        <trans-unit id="46c246441ba0035c603912f17be9fed9abe1bcb9" translate="yes" xml:space="preserve">
          <source>jekyllthemes.org</source>
          <target state="translated">jekyllthemes.org</target>
        </trans-unit>
        <trans-unit id="c455b38e076228392d1c751d14fe95da50519334" translate="yes" xml:space="preserve">
          <source>join</source>
          <target state="translated">join</target>
        </trans-unit>
        <trans-unit id="213ed3ea453bf610688ff8041e0a3b7b6abb5e6e" translate="yes" xml:space="preserve">
          <source>last</source>
          <target state="translated">last</target>
        </trans-unit>
        <trans-unit id="7bc595db0c3fc523684d0bce040d8bfcd798037d" translate="yes" xml:space="preserve">
          <source>lstrip</source>
          <target state="translated">lstrip</target>
        </trans-unit>
        <trans-unit id="cd6fdcbf5a860d174ac10af745972501941dc684" translate="yes" xml:space="preserve">
          <source>macOS</source>
          <target state="translated">macOS</target>
        </trans-unit>
        <trans-unit id="37745ed7a0f005fb14522c5cc7c1ba3d9e0df579" translate="yes" xml:space="preserve">
          <source>map</source>
          <target state="translated">map</target>
        </trans-unit>
        <trans-unit id="b85dac7f646475d4018a5c35390352f94773c821" translate="yes" xml:space="preserve">
          <source>methods</source>
          <target state="translated">methods</target>
        </trans-unit>
        <trans-unit id="59b6536256b81897a7d4a55e7a4f543091b9840e" translate="yes" xml:space="preserve">
          <source>minus</source>
          <target state="translated">minus</target>
        </trans-unit>
        <trans-unit id="1af60b7b96e08873e7bd780893eed25aa7a430b1" translate="yes" xml:space="preserve">
          <source>modulo</source>
          <target state="translated">modulo</target>
        </trans-unit>
        <trans-unit id="af48f295d2d0b9cf62beae923213d3cb7dedeabd" translate="yes" xml:space="preserve">
          <source>newline_to_br</source>
          <target state="translated">newline_to_br</target>
        </trans-unit>
        <trans-unit id="adbaac028faf4c6fe85d20f0f3e7036aa8f53b53" translate="yes" xml:space="preserve">
          <source>number of pagination pages</source>
          <target state="translated">페이지 매김 페이지 수</target>
        </trans-unit>
        <trans-unit id="7f3d7d913d96b3695a4d14cf80d175d3a70ca785" translate="yes" xml:space="preserve">
          <source>number of posts per page</source>
          <target state="translated">페이지 당 게시물 수</target>
        </trans-unit>
        <trans-unit id="1758356db21759f7c5a0da9b4dd1db8fd6feab3f" translate="yes" xml:space="preserve">
          <source>or</source>
          <target state="translated">or</target>
        </trans-unit>
        <trans-unit id="e141fbc4aa6d2eb2000921a62e42e53d2cb725bc" translate="yes" xml:space="preserve">
          <source>page number of the next pagination page, or &lt;code&gt;nil&lt;/code&gt; if no subsequent page exists</source>
          <target state="translated">다음 페이지 매김 페이지의 페이지 번호 또는 후속 페이지가없는 경우 &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="477003d8ad9f294f7a5e66b7b23cea2370f232ab" translate="yes" xml:space="preserve">
          <source>page number of the previous pagination page, or &lt;code&gt;nil&lt;/code&gt; if no previous page exists</source>
          <target state="translated">이전 페이지 매김 페이지의 페이지 번호 또는 이전 페이지가없는 경우 &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7249e2726e43700f75624d17be148a1fe33dc81b" translate="yes" xml:space="preserve">
          <source>path of next pagination page, or &lt;code&gt;nil&lt;/code&gt; if no subsequent page exists</source>
          <target state="translated">다음 페이지 매김 페이지의 경로 또는 후속 페이지가없는 경우 &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2136980dc1c16e890e8c954056c2aff1e760d287" translate="yes" xml:space="preserve">
          <source>path of previous pagination page, or &lt;code&gt;nil&lt;/code&gt; if no previous page exists</source>
          <target state="translated">이전 페이지 매김 페이지의 경로 또는 이전 페이지가없는 경우 &lt;code&gt;nil&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6a8437dd0009e4aa220215ad24cf7c7d2e8c95c8" translate="yes" xml:space="preserve">
          <source>plus</source>
          <target state="translated">plus</target>
        </trans-unit>
        <trans-unit id="985baec4dbd5745207277afd1ff229aa28be9795" translate="yes" xml:space="preserve">
          <source>prepend</source>
          <target state="translated">prepend</target>
        </trans-unit>
        <trans-unit id="c12e5cd2633c7d844515ee6e6887c2ed83fae9da" translate="yes" xml:space="preserve">
          <source>pygments.rb &amp;ndash; the Pygments highlighter</source>
          <target state="translated">pygments.rb &amp;ndash; 피그먼트 하이 라이터</target>
        </trans-unit>
        <trans-unit id="ff1eb48289c8642531cabb1aba205b5a32afd81b" translate="yes" xml:space="preserve">
          <source>redcarpet &amp;ndash; the Markdown processor</source>
          <target state="translated">레드 카펫 &amp;ndash; 마크 다운 프로세서</target>
        </trans-unit>
        <trans-unit id="db99845855b2ecbfecca9a095062b96c3e27703f" translate="yes" xml:space="preserve">
          <source>remove</source>
          <target state="translated">remove</target>
        </trans-unit>
        <trans-unit id="2c7f08e849bda7f70be978e5a34e02465c6cbb85" translate="yes" xml:space="preserve">
          <source>remove_first</source>
          <target state="translated">remove_first</target>
        </trans-unit>
        <trans-unit id="3cacc7bfac0a382c669a884c953d0401a689785d" translate="yes" xml:space="preserve">
          <source>replace</source>
          <target state="translated">replace</target>
        </trans-unit>
        <trans-unit id="83d6da295373a452eea0a4ad989c6f1331af93f6" translate="yes" xml:space="preserve">
          <source>replace_first</source>
          <target state="translated">replace_first</target>
        </trans-unit>
        <trans-unit id="75470a3076d8da06e21a0f542f3a535af3f72e94" translate="yes" xml:space="preserve">
          <source>reverse</source>
          <target state="translated">reverse</target>
        </trans-unit>
        <trans-unit id="f0590a6dd3663be108ff31f58d16b829a1284be6" translate="yes" xml:space="preserve">
          <source>round</source>
          <target state="translated">round</target>
        </trans-unit>
        <trans-unit id="0d51056fa9e9ad3660e4bd10ae6e7656b4559d1e" translate="yes" xml:space="preserve">
          <source>rstrip</source>
          <target state="translated">rstrip</target>
        </trans-unit>
        <trans-unit id="9cd1a8b7dd930db5d1b080584eeefe7022570049" translate="yes" xml:space="preserve">
          <source>rsync</source>
          <target state="translated">rsync</target>
        </trans-unit>
        <trans-unit id="61541b484ac2a6488909f3326523fa0e68783461" translate="yes" xml:space="preserve">
          <source>scp</source>
          <target state="translated">scp</target>
        </trans-unit>
        <trans-unit id="c1c3e9d5de5edff7206ca347150e24248ed6b6ed" translate="yes" xml:space="preserve">
          <source>see &lt;a href=&quot;#front-matter-defaults&quot;&gt;below&lt;/a&gt;</source>
          <target state="translated">참조 &lt;a href=&quot;#front-matter-defaults&quot;&gt;아래&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="4ba65388da35d46626744ecb9b4efc6423753cc2" translate="yes" xml:space="preserve">
          <source>see &lt;a href=&quot;../front-matter-defaults/index&quot;&gt;below&lt;/a&gt;</source>
          <target state="translated">see &lt;a href=&quot;../front-matter-defaults/index&quot;&gt;below&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="5a469c7049ec84c0c35e6494355dee74af57efef" translate="yes" xml:space="preserve">
          <source>site.collections has changed</source>
          <target state="translated">site.collections가 변경되었습니다</target>
        </trans-unit>
        <trans-unit id="89368e1d68015693ab48ee189d0632cb5d6edfb3" translate="yes" xml:space="preserve">
          <source>size</source>
          <target state="translated">size</target>
        </trans-unit>
        <trans-unit id="0a5228e66df38e2f27ca61b901edf86f7ef97fb8" translate="yes" xml:space="preserve">
          <source>slice</source>
          <target state="translated">slice</target>
        </trans-unit>
        <trans-unit id="98c4b8f6e2d770a0f2b54233669d65ff6eddc472" translate="yes" xml:space="preserve">
          <source>sort</source>
          <target state="translated">sort</target>
        </trans-unit>
        <trans-unit id="9885dc192224cdbac88a6de379b99a16090e4420" translate="yes" xml:space="preserve">
          <source>sort_natural</source>
          <target state="translated">sort_natural</target>
        </trans-unit>
        <trans-unit id="94d5cab6f5fe3422a447ab15436e7a672bc0c09a" translate="yes" xml:space="preserve">
          <source>split</source>
          <target state="translated">split</target>
        </trans-unit>
        <trans-unit id="1a942eab068a2173e66d08c736283cfe22e1c1ed" translate="yes" xml:space="preserve">
          <source>strip</source>
          <target state="translated">strip</target>
        </trans-unit>
        <trans-unit id="4a288449820c09af670e787caa39f1007a936aca" translate="yes" xml:space="preserve">
          <source>strip_html</source>
          <target state="translated">strip_html</target>
        </trans-unit>
        <trans-unit id="1f94db3a7977e916e3a7b560d0654aa44e08db28" translate="yes" xml:space="preserve">
          <source>strip_newlines</source>
          <target state="translated">strip_newlines</target>
        </trans-unit>
        <trans-unit id="7196b5875f713c826bd279dbda843c897e2a60c2" translate="yes" xml:space="preserve">
          <source>times</source>
          <target state="translated">times</target>
        </trans-unit>
        <trans-unit id="66069ba2070cc57f0630952c3bfe6dfe306e75f8" translate="yes" xml:space="preserve">
          <source>to this (note the offset):</source>
          <target state="translated">이것으로 (오프셋에 유의하십시오) :</target>
        </trans-unit>
        <trans-unit id="4d41404b436c558715719accc8c3c679019735c5" translate="yes" xml:space="preserve">
          <source>to your template files in &lt;code&gt;/_layout&lt;/code&gt; folder.</source>
          <target state="translated">&lt;code&gt;/_layout&lt;/code&gt; 폴더 의 템플릿 파일에</target>
        </trans-unit>
        <trans-unit id="10af3b01d951df976ac4e288a775baccc746a796" translate="yes" xml:space="preserve">
          <source>toml &amp;ndash; an alternative to YAML for configuration files</source>
          <target state="translated">toml &amp;ndash; 구성 파일을위한 YAML의 대안</target>
        </trans-unit>
        <trans-unit id="05e96e3cdd125d93c3e4b1427d0808418b629364" translate="yes" xml:space="preserve">
          <source>total number of posts in the site</source>
          <target state="translated">사이트의 총 게시물 수</target>
        </trans-unit>
        <trans-unit id="f283ea9bea0e80213ac091021420ffc9b3415914" translate="yes" xml:space="preserve">
          <source>truncate</source>
          <target state="translated">truncate</target>
        </trans-unit>
        <trans-unit id="2a65580c3088bf0729b68895c1a2e16075182661" translate="yes" xml:space="preserve">
          <source>truncatewords</source>
          <target state="translated">truncatewords</target>
        </trans-unit>
        <trans-unit id="42c53cdf8dcda07ef06c4014d43c03ab4ba1798b" translate="yes" xml:space="preserve">
          <source>uniq</source>
          <target state="translated">uniq</target>
        </trans-unit>
        <trans-unit id="3954b914012061752a7d98926615e95455407a2f" translate="yes" xml:space="preserve">
          <source>upcase</source>
          <target state="translated">upcase</target>
        </trans-unit>
        <trans-unit id="e63e318fcc2fb47559b38d6496a89ff049855082" translate="yes" xml:space="preserve">
          <source>url_decode</source>
          <target state="translated">url_decode</target>
        </trans-unit>
        <trans-unit id="ca4ca6ff0749feaa735a423d62ba79cbfc879aa8" translate="yes" xml:space="preserve">
          <source>url_encode</source>
          <target state="translated">url_encode</target>
        </trans-unit>
        <trans-unit id="6d0c2cf630087d5de840fcb20e9b52c5d23adb70" translate="yes" xml:space="preserve">
          <source>which may allow you to install native gems using this command (again, using &lt;code&gt;sudo&lt;/code&gt; only if necessary):</source>
          <target state="translated">이 명령을 사용하여 기본 gem을 설치할 수 있습니다 ( 필요한 경우에만 &lt;code&gt;sudo&lt;/code&gt; 사용 ).</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
