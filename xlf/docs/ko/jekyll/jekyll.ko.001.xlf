<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="jekyll">
    <body>
      <group id="jekyll">
        <trans-unit id="6aac58256fec47321100121f910d04b0a5841d2c" translate="yes" xml:space="preserve">
          <source>&amp;copy; 2008&amp;ndash;2018 Tom Preston-Werner and Jekyll contributors</source>
          <target state="translated">&amp;copy; 2008&amp;ndash;2018 Tom Preston-Werner 및 Jekyll 기고자</target>
        </trans-unit>
        <trans-unit id="b0d62ee966eac050c88ef4f142f5d93baaebbc36" translate="yes" xml:space="preserve">
          <source>&amp;hellip; then make sure that you access the site at:</source>
          <target state="translated">&amp;hellip; 다음 사이트에 액세스하십시오.</target>
        </trans-unit>
        <trans-unit id="2f622849809c9c6469da23aec4e2c1cb48d4bbd5" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Creating and Hosting a Personal Site on GitHub&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;GitHub에서 개인 사이트 생성 및 호스팅&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="a3b0d88eb468d5685b71fd8970b9a61a174db173" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Jekyll is a well-architected throwback to a time before WordPress, when men were men, and HTML was static. I like the ideas it espouses, and have made a few improvements to it&amp;rsquo;s core. Here, I&amp;rsquo;ll point out some highlights of my fork in the hopes that they see usage beyond this site.&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;Jekyll은 워드 프레스 이전 (남자가 남자 였고 HTML이 정적 인 시대)으로 잘 설계되었습니다. 나는 그것이 제안하는 아이디어를 좋아하고 핵심을 약간 개선했습니다. 여기서는이 사이트 이외의 용도로 사용되기를 희망하는 포크의 하이라이트를 지적하겠습니다.&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="298d7d92c940dee77d15b40ea4c8e9f1772b8c34" translate="yes" xml:space="preserve">
          <source>&amp;ldquo;Jekyll is everything that I ever wanted in a blogging engine. Really. It isn&amp;rsquo;t perfect, but what&amp;rsquo;s excellent about it is that if there&amp;rsquo;s something wrong, I know exactly how it works and how to fix it. It runs on the your machine only, and is essentially an added&amp;rdquo;build&amp;rdquo; step between you and the browser. I coded this entire site in TextMate using standard HTML5 and CSS3, and then at the end I added just a few little variables to the markup. Presto-chango, my site is built and I am at peace with the world.&amp;rdquo;</source>
          <target state="translated">&amp;ldquo;Jekyll은 블로그 엔진에서 내가 원했던 모든 것입니다. 정말. 완벽하지는 않지만, 문제가있는 경우 작동 방식과 해결 방법을 정확히 알고 있다는 점이 가장 좋습니다. 컴퓨터에서만 실행되며 기본적으로 사용자와 브라우저 사이에 추가 된 &quot;빌드&quot;단계입니다. 표준 HTML5 및 CSS3을 사용하여 TextMate에서이 전체 사이트를 코딩 한 다음 마지막에 몇 가지 작은 변수를 마크 업에 추가했습니다. Presto-chango, 내 사이트가 만들어졌고 나는 세상과 평화롭게 지내고 있습니다.&amp;rdquo;</target>
        </trans-unit>
        <trans-unit id="2ef029190882bdf86d5a5e115746595ab36bc05f" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;About this Website&amp;rsquo;, by Carter Allen</source>
          <target state="translated">Carter Allen의 '이 웹 사이트에 대하여'</target>
        </trans-unit>
        <trans-unit id="82b663f39c266e3f60ba462cb943f99084a26d9e" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;Build A Blog With Jekyll And GitHub Pages&amp;rsquo; on Smashing Magazine</source>
          <target state="translated">스매싱 매거진의 'Jekyll과 GitHub 페이지로 블로그 만들기'</target>
        </trans-unit>
        <trans-unit id="8593eada0b79d0969c684567a345f7ac74b6150e" translate="yes" xml:space="preserve">
          <source>&amp;lsquo;My Jekyll Fork&amp;rsquo;, by Mike West</source>
          <target state="translated">Mike West의 'My Jekyll Fork'</target>
        </trans-unit>
        <trans-unit id="237b1cd98f6ca0c9a9f43a559ae57014b3912f20" translate="yes" xml:space="preserve">
          <source>(Including &lt;code&gt;{{ site.baseurl }}&lt;/code&gt; is optional &amp;mdash; it depends on whether you want to preface the page URL with the &lt;code&gt;baseurl&lt;/code&gt; value.)</source>
          <target state="translated">(포함하여 &lt;code&gt;{{ site.baseurl }}&lt;/code&gt; 선택 사항입니다 - 당신이있는 페이지의 URL 서문할지 여부에 따라 달라집니다 &lt;code&gt;baseurl&lt;/code&gt; 값입니다.)</target>
        </trans-unit>
        <trans-unit id="01ff54954fe430b7b55e8dea4ad78a4ac832cf3e" translate="yes" xml:space="preserve">
          <source>1. Enabling Travis and GitHub</source>
          <target state="translated">1. 트래비스 및 GitHub 활성화</target>
        </trans-unit>
        <trans-unit id="04f59964f8cd807525552be22975ac01d9889869" translate="yes" xml:space="preserve">
          <source>1. Follow Your Project on CircleCI</source>
          <target state="translated">1. CircleCI에서 프로젝트를 따르십시오</target>
        </trans-unit>
        <trans-unit id="0e6a002c8ee229cfaf41fdd7f2afb4f6edc49020" translate="yes" xml:space="preserve">
          <source>1. Getting started</source>
          <target state="translated">1. 시작</target>
        </trans-unit>
        <trans-unit id="431a4dd4fb974a7a7fcf937d42a568c5f62a61fb" translate="yes" xml:space="preserve">
          <source>2. Dependencies</source>
          <target state="translated">2. 의존성</target>
        </trans-unit>
        <trans-unit id="d7bfc92f0d5cb130371ff4b8563723f693f226ad" translate="yes" xml:space="preserve">
          <source>2. How it works</source>
          <target state="translated">2. 작동 원리</target>
        </trans-unit>
        <trans-unit id="2e76c1bd9726e589e9fab02677bee646bcc8f9f5" translate="yes" xml:space="preserve">
          <source>2. The Test Script</source>
          <target state="translated">2. 테스트 스크립트</target>
        </trans-unit>
        <trans-unit id="4608f3497651930954727e1945e17761fe00771c" translate="yes" xml:space="preserve">
          <source>3. Configuring Your Travis Builds</source>
          <target state="translated">3. Travis 빌드 구성</target>
        </trans-unit>
        <trans-unit id="5d6c0dc7613ca3d420fc67d597f1b4373fa383a8" translate="yes" xml:space="preserve">
          <source>3. Testing</source>
          <target state="translated">3. 테스트</target>
        </trans-unit>
        <trans-unit id="28f13c7b1750abd312f6dcc7c978773576718433" translate="yes" xml:space="preserve">
          <source>3. Using YAML for configuration</source>
          <target state="translated">3. 구성에 YAML 사용</target>
        </trans-unit>
        <trans-unit id="727b823483dbc209a1fb909c780338efc7e99828" translate="yes" xml:space="preserve">
          <source>4. Setting up on-premises server</source>
          <target state="translated">4. 사내 구축 형 서버 설정</target>
        </trans-unit>
        <trans-unit id="ec55bdabf15c49197509bb04fb7d372ec5387079" translate="yes" xml:space="preserve">
          <source>5. Questions?</source>
          <target state="translated">5. 질문?</target>
        </trans-unit>
        <trans-unit id="12f87e6c09c9ad77ecf3f9c56ed9b4eba53e10df" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jch.penibelst.de/&quot;&gt;A layout that compresses HTML&lt;/a&gt;: GitHub Pages compatible, configurable way to compress HTML files on site build.</source>
          <target state="translated">&lt;a href=&quot;http://jch.penibelst.de/&quot;&gt;HTML을 압축하는 레이아웃&lt;/a&gt; : 사이트 빌드시 HTML 파일을 압축하는 구성 가능하고 호환 가능한 GitHub 페이지입니다.</target>
        </trans-unit>
        <trans-unit id="c7ba023ff645a74df5ededef8839d335afa0a154" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jekyll-pug.dougie.io&quot;&gt;Pug plugin by Doug Beney&lt;/a&gt;: Use the popular Pug (previously Jade) templating language in Jekyll. Complete with caching, includes support, and much more.</source>
          <target state="translated">&lt;a href=&quot;http://jekyll-pug.dougie.io&quot;&gt;Doug Beney의 Pug 플러그인&lt;/a&gt; : Jekyll에서 인기있는 Pug (이전 Jade) 템플릿 언어를 사용하십시오. 캐싱, 지원 등을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="264c5a33c68c477faea463051a2b1ec3ec038736" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jekyll.github.io/jekyll-assets/&quot;&gt;Jekyll-assets&lt;/a&gt; by &lt;a href=&quot;https://github.com/ixti&quot;&gt;ixti&lt;/a&gt;: Rails-alike assets pipeline (write assets in CoffeeScript, Sass, LESS etc; specify dependencies for automatic bundling using simple declarative comments in assets; minify and compress; use JST templates; cache bust; and many-many more).</source>
          <target state="translated">&lt;a href=&quot;http://jekyll.github.io/jekyll-assets/&quot;&gt;지킬-자산&lt;/a&gt; 으로 &lt;a href=&quot;https://github.com/ixti&quot;&gt;ixti&lt;/a&gt; : 레일 - 동일 조건 변경 허락 자산 파이프 라인 (커피 스크립트, 말대꾸, LESS 등의 쓰기 자산, 많은 더 많은과, 캐시 흉상을, 작게하다 및 압축; 사용 JST 템플릿을 자산에 간단한 선언적 주석을 사용하여 자동 번들에 대한 종속성을 지정 ).</target>
        </trans-unit>
        <trans-unit id="f0a458dc8208bffdcaae88aa1f452f6f97b6712b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jekyll.tips&quot;&gt;Jekyll Tips&lt;/a&gt; is a set of resources created by &lt;a href=&quot;https://cloudcannon.com&quot;&gt;CloudCannon&lt;/a&gt; to help folks get up and running with Jekyll. They cover all skill levels, and even include some great video tutorials.</source>
          <target state="translated">&lt;a href=&quot;http://jekyll.tips&quot;&gt;Jekyll Tips&lt;/a&gt; 는 &lt;a href=&quot;https://cloudcannon.com&quot;&gt;CloudCannon&lt;/a&gt; 이 Jekyll을 시작하고 운영하는 데 도움 이되는 일련의 리소스입니다 . 모든 기술 수준을 다루며 훌륭한 비디오 자습서도 포함합니다.</target>
        </trans-unit>
        <trans-unit id="4e712b4e1860bf86a3eb293a23d182cad0b8631b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://jekyll.tips/jekyll-cheat-sheet/&quot;&gt;Jekyll Cheatsheet&lt;/a&gt; is a single-page resource for Jekyll filters, variables, and the like.</source>
          <target state="translated">&lt;a href=&quot;http://jekyll.tips/jekyll-cheat-sheet/&quot;&gt;Jekyll Cheatsheet&lt;/a&gt; 는 Jekyll 필터, 변수 등을위한 단일 페이지 리소스입니다.</target>
        </trans-unit>
        <trans-unit id="3a5bde86c0ad7e415201b6653bad302dd21fb712" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.justkez.com/generating-a-tag-cloud-in-jekyll/&quot;&gt;Generating a Tag Cloud in Jekyll&lt;/a&gt; &amp;ndash; A guide to implementing a tag cloud and per-tag content pages using Jekyll.</source>
          <target state="translated">&lt;a href=&quot;http://www.justkez.com/generating-a-tag-cloud-in-jekyll/&quot;&gt;Jekyll에서 태그 클라우드 생성&lt;/a&gt; &amp;ndash; Jekyll 을 사용하여 태그 클라우드 및 태그 당 콘텐츠 페이지를 구현하는 방법에 대한 안내서입니다.</target>
        </trans-unit>
        <trans-unit id="7bb848fa46a216dad9f93c130caf9c23a1c3c364" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;http://www.northfieldx.co.uk/remote-include/&quot;&gt;remote-include&lt;/a&gt;: Includes files using remote URLs</source>
          <target state="translated">&lt;a href=&quot;http://www.northfieldx.co.uk/remote-include/&quot;&gt;remote-include&lt;/a&gt; : 원격 URL을 사용하는 파일을 포함합니다</target>
        </trans-unit>
        <trans-unit id="2a5043a4019a3a327c0004fc0b0dc6d742b65e83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://atom.io/packages/jekyll&quot;&gt;jekyll-atom&lt;/a&gt;: A collection of snippets and tools for Jekyll in Atom</source>
          <target state="translated">&lt;a href=&quot;https://atom.io/packages/jekyll&quot;&gt;jekyll-atom&lt;/a&gt; : Atom의 Jekyll을위한 스 니펫 및 도구 모음</target>
        </trans-unit>
        <trans-unit id="e3765eed48e794da9562522d30f95aab07c33437" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://atom.io/packages/markdown-writer&quot;&gt;markdown-writer&lt;/a&gt;: An Atom package for Jekyll. It can create new posts/drafts, manage tags/categories, insert link/images and add many useful key mappings.</source>
          <target state="translated">&lt;a href=&quot;https://atom.io/packages/markdown-writer&quot;&gt;markdown-writer&lt;/a&gt; : Jekyll 용 Atom 패키지. 새로운 게시물 / 임시 보관함, 태그 / 카테고리 관리, 링크 / 이미지 삽입 및 유용한 키 매핑을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="307783b2371398aa07399b11d3fa54ae924c8bfc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://bitbucket.org/nyufac/jekyll-views-router&quot;&gt;Jekyll views router&lt;/a&gt;: Simple router between generator plugins and templates.</source>
          <target state="translated">&lt;a href=&quot;https://bitbucket.org/nyufac/jekyll-views-router&quot;&gt;Jekyll은 라우터&lt;/a&gt; : 생성기 플러그인과 템플릿 사이의 간단한 라우터를 봅니다.</target>
        </trans-unit>
        <trans-unit id="4f93847abe25ddbcd15403001641ed0913fd0b11" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://blog.algolia.com/instant-search-blog-documentation-jekyll-plugin/&quot;&gt;Algolia&lt;/a&gt;: Add a powerful instant search to your Jekyll site</source>
          <target state="translated">&lt;a href=&quot;https://blog.algolia.com/instant-search-blog-documentation-jekyll-plugin/&quot;&gt;Algolia&lt;/a&gt; : Jekyll 사이트에 강력한 인스턴트 검색 추가</target>
        </trans-unit>
        <trans-unit id="b93ac31ffc6d80178baa8daa4a0311fb78c78868" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://buddy.works&quot;&gt;Buddy&lt;/a&gt; is a &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;-based CI server that you can set up in 15-20 minutes to build, test, and deploy your Jekyll websites. It supports &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt;, &lt;a href=&quot;https://bitbucket.org/&quot;&gt;Bitbucket&lt;/a&gt;, and &lt;a href=&quot;https://gitlab.com&quot;&gt;GitLab&lt;/a&gt; repositories, and can be installed on-premises or used in cloud. The following guide will show you how to set up a free environment to build and test your Jekyll project.</source>
          <target state="translated">&lt;a href=&quot;https://buddy.works&quot;&gt;버디&lt;/a&gt; 는 15-20 분 안에 Jekyll 웹 사이트를 구축, 테스트 및 배포하도록 설정할 수 있는 &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; 기반 CI 서버입니다. &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt; , &lt;a href=&quot;https://bitbucket.org/&quot;&gt;Bitbucket&lt;/a&gt; 및 &lt;a href=&quot;https://gitlab.com&quot;&gt;GitLab&lt;/a&gt; 리포지토리를 지원하며 온 프레미스에 설치하거나 클라우드에서 사용할 수 있습니다. 다음 안내서는 Jekyll 프로젝트를 빌드하고 테스트하기 위해 무료 환경을 설정하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="59854b8675ed0d4c604af36352f43d69e5153855" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://community.algolia.com/jekyll-algolia/&quot;&gt;jekyll-algolia&lt;/a&gt;: Add fast and relevant search to your Jekyll site through the Algolia API.</source>
          <target state="translated">&lt;a href=&quot;https://community.algolia.com/jekyll-algolia/&quot;&gt;jekyll-algolia&lt;/a&gt; : Algolia API를 통해 Jekyll 사이트에 빠르고 관련성있는 검색을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="05daa0672189429feb3cf9ca5cca1d60d5e604aa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gcc.gnu.org/install/&quot;&gt;GCC&lt;/a&gt; and &lt;a href=&quot;https://www.gnu.org/software/make/&quot;&gt;Make&lt;/a&gt; (in case your system doesn&amp;rsquo;t have them installed, which you can check by running &lt;code&gt;gcc -v&lt;/code&gt;,&lt;code&gt;g++ -v&lt;/code&gt; and &lt;code&gt;make -v&lt;/code&gt; in your system&amp;rsquo;s command line interface)</source>
          <target state="translated">&lt;a href=&quot;https://gcc.gnu.org/install/&quot;&gt;GCC&lt;/a&gt; 및 &lt;a href=&quot;https://www.gnu.org/software/make/&quot;&gt;Make&lt;/a&gt; (시스템에 설치되어 있지 않은 경우 시스템의 명령 행 인터페이스에서 &lt;code&gt;gcc -v&lt;/code&gt; , &lt;code&gt;g++ -v&lt;/code&gt; 및 &lt;code&gt;make -v&lt;/code&gt; 를 실행하여 확인할 수 있음 )</target>
        </trans-unit>
        <trans-unit id="7fccdd65eae29cc3e8e19abceb602086009a415c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/1027674&quot;&gt;Non-JS Gist Tag by Brandon Tilley&lt;/a&gt; A Liquid tag that embeds Gists and shows code for non-JavaScript enabled browsers and readers.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/1027674&quot;&gt;Brandon Tilley&lt;/a&gt; 의 비 JS Gist 태그 Gist 를 내장하고 Javascript가 아닌 브라우저 및 리더에 대한 코드를 표시하는 Liquid 태그입니다.</target>
        </trans-unit>
        <trans-unit id="14e0b7087276d3e36f6d87e052e3d0eb83389c70" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/1455726&quot;&gt;oEmbed Tag by Tammo van Lessen&lt;/a&gt;: Enables easy content embedding (e.g. from YouTube, Flickr, Slideshare) via oEmbed.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/1455726&quot;&gt;Tammo van Lessen의 oEmbed 태그&lt;/a&gt; : oEmbed를 통해 콘텐츠를 쉽게 임베드 할 수 있습니다 (예 : YouTube, Flickr, Slideshare).</target>
        </trans-unit>
        <trans-unit id="ba10a8584ee4a58946e571f41b5bbdd914ba1a77" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/1472645&quot;&gt;Transform Layouts&lt;/a&gt;: Allows HAML layouts (you need a HAML Converter plugin for this to work).</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/1472645&quot;&gt;레이아웃 변환&lt;/a&gt; : HAML 레이아웃을 허용합니다 (이 기능을 수행하려면 HAML 변환기 플러그인이 필요합니다).</target>
        </trans-unit>
        <trans-unit id="76e523850b96c372a9e37a6930c757b7baa796a2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/1805814&quot;&gt;Generate YouTube Embed&lt;/a&gt; by &lt;a href=&quot;https://github.com/joelverhagen&quot;&gt;joelverhagen&lt;/a&gt;: Jekyll plugin which allows you to embed a YouTube video in your page with the YouTube ID. Optionally specify width and height dimensions. Like &amp;ldquo;oEmbed Tag&amp;rdquo; but just for YouTube.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/1805814&quot;&gt;유튜브 삽입을 생성&lt;/a&gt; 하여 &lt;a href=&quot;https://github.com/joelverhagen&quot;&gt;joelverhagen&lt;/a&gt; : 유튜브 ID와 페이지에 포함 된 YouTube 동영상에 당신을 허용 지킬 플러그인을. 선택적으로 너비 및 높이 치수를 지정하십시오. &amp;ldquo;oEmbed Tag&amp;rdquo;와 비슷하지만 YouTube 전용입니다.</target>
        </trans-unit>
        <trans-unit id="15101c8114fee53a1fc38adeabc8e29ca2a20814" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/1895282&quot;&gt;Jsonball&lt;/a&gt;: Reads json files and produces maps for use in Jekyll files.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/1895282&quot;&gt;Jsonball&lt;/a&gt; : json 파일을 읽고 Jekyll 파일에서 사용할 맵을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="102a01fa242ebc9a5e0f058f8af1027390a4b12b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/2218470&quot;&gt;Debbugs&lt;/a&gt;: Allows posting links to Debian BTS easily.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/2218470&quot;&gt;Debbugs&lt;/a&gt; : 데비안 BTS에 대한 링크를 쉽게 게시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c7c00b2534786231001325055f0c3502ddd2214" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/2290195&quot;&gt;Logarithmic Tag Cloud&lt;/a&gt;: Flexible. Logarithmic distribution. Documentation inline.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/2290195&quot;&gt;대수 태그 클라우드&lt;/a&gt; : 유연합니다. 대수 분포. 문서 인라인.</target>
        </trans-unit>
        <trans-unit id="53bf02d88fb17602e421a519420f1a367d426cb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/23maverick23/8532525&quot;&gt;jekyll-font-awesome&lt;/a&gt;: Quickly and easily add Font Awesome icons to your posts.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/23maverick23/8532525&quot;&gt;jekyll-font-awesome&lt;/a&gt; : 게시물에 Font Awesome 아이콘을 빠르고 쉽게 추가합니다.</target>
        </trans-unit>
        <trans-unit id="557213d14ae1761bb7939c887ce7988acc281f3f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/2403522&quot;&gt;Jekyll-devonly_tag&lt;/a&gt;: A block tag for including markup only during development.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/2403522&quot;&gt;Jekyll-devonly_tag&lt;/a&gt; : 개발 중에 만 마크 업을 포함하기위한 블록 태그.</target>
        </trans-unit>
        <trans-unit id="0849a85dfe58aad217a61717a8dc4a6d409a3e25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/2758691&quot;&gt;File compressor&lt;/a&gt; by &lt;a href=&quot;https://github.com/mytharcher&quot;&gt;mytharcher&lt;/a&gt;: Compress HTML and JavaScript files on site build.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/2758691&quot;&gt;파일 압축&lt;/a&gt; 에 의해 &lt;a href=&quot;https://github.com/mytharcher&quot;&gt;mytharcher&lt;/a&gt; : 압축 HTML과 자바 스크립트 사이트 빌드 파일.</target>
        </trans-unit>
        <trans-unit id="d3b5e58ccdc906c556becc815069759add2ea1f5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/449463&quot;&gt;Upcase Converter by Blake Smith&lt;/a&gt;: An example Jekyll converter.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/449463&quot;&gt;Blake Smith의 Upcase Converter&lt;/a&gt; : Jekyll 변환기의 예.</target>
        </trans-unit>
        <trans-unit id="d1be675c957783607e1156abcbdf03c284eeb638" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/449491&quot;&gt;Version Reporter by Blake Smith&lt;/a&gt;: Creates a version.html file containing the Jekyll version.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/449491&quot;&gt;Blake Smith의 Version Reporter&lt;/a&gt; : Jekyll 버전을 포함하는 version.html 파일을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="9793227c26ad931af0a18ce0e1f2fc5d779f2a83" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/449509&quot;&gt;Render Time Tag by Blake Smith&lt;/a&gt;: Displays the time a Jekyll page was generated.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/449509&quot;&gt;Blake Smith의 렌더링 시간 태그&lt;/a&gt; : Jekyll 페이지가 생성 된 시간을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="c2ea8f9f80a49de1ec4ba350122f44b252da1156" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/480380&quot;&gt;Ultraviolet Plugin by Steve Alex&lt;/a&gt;: Jekyll tag for the &lt;a href=&quot;https://github.com/grosser/ultraviolet&quot;&gt;Ultraviolet&lt;/a&gt; code highligher.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/480380&quot;&gt;Steve Alex의 자외선 플러그인&lt;/a&gt; : &lt;a href=&quot;https://github.com/grosser/ultraviolet&quot;&gt;자외선&lt;/a&gt; 코드 highligher를 위한 Jekyll 태그 .</target>
        </trans-unit>
        <trans-unit id="3cc5a3020dcb6c9c8005a57115799c7a504ff001" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/481456&quot;&gt;HAML-Sass Converter by Adam Pearson&lt;/a&gt;: Simple HAML-Sass converter for Jekyll. &lt;a href=&quot;https://gist.github.com/528642&quot;&gt;Fork&lt;/a&gt; by Sam X.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/481456&quot;&gt;Adam Pearson의&lt;/a&gt; HAML-Sass 변환기 : Jekyll을위한 간단한 HAML-Sass 변환기. Sam X의 &lt;a href=&quot;https://gist.github.com/528642&quot;&gt;포크&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="eb78eb90f8b12aac56435d221d2399e9ec118ee2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/490101&quot;&gt;Growl Notification Generator by Tate Johnson&lt;/a&gt;: Send Jekyll notifications to Growl.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/490101&quot;&gt;Tate Johnson의 Growl Notification Generator&lt;/a&gt; : Groky에게 Jekyll 알림을 보냅니다.</target>
        </trans-unit>
        <trans-unit id="13936af37649457ab5f05f9eb54bfb4f77102e5c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/49630&quot;&gt;Draft/Publish Plugin by Michael Ivey&lt;/a&gt;: Save posts as drafts.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/49630&quot;&gt;Michael Ivey의 Draft / Publish Plugin&lt;/a&gt; : 게시물을 초안으로 저장합니다.</target>
        </trans-unit>
        <trans-unit id="632e99557f76fbbc0a1784494836e2a17712b972" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/517556&quot;&gt;HAML plugin by Sam Z&lt;/a&gt;: HAML converter for Jekyll.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/517556&quot;&gt;Sam Z의 HAML 플러그인&lt;/a&gt; : Jekyll 용 HAML 변환기.</target>
        </trans-unit>
        <trans-unit id="74ff2cda5fa15e7ee83082c95dfc6cf9c17337d8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/525267&quot;&gt;Growl Notification Hook by Tate Johnson&lt;/a&gt;: Better alternative to the above, but requires his &amp;ldquo;hook&amp;rdquo; fork.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/525267&quot;&gt;테이트 존슨의 Growl Notification Hook&lt;/a&gt; : 위의 방법 대신 더 나은 대안이지만 &quot;후크&quot;포크가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="48c27c1c98b8b334f291159ca0da0b9f96df10a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/639920&quot;&gt;LESS Converter by Jason Graham&lt;/a&gt;: Convert LESS files to CSS.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/639920&quot;&gt;Jason Graham의 LESS Converter&lt;/a&gt; : LESS 파일을 CSS로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="063ef7275dc6adc1ce497c0394984f802b6d5242" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/642739&quot;&gt;LESS.js Generator by Andy Fowler&lt;/a&gt;: Renders LESS.js files during generation.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/642739&quot;&gt;Andy Fowler의 LESS.js 생성기&lt;/a&gt; : 생성하는 동안 LESS.js 파일을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="ea7fe5a375575f92ee17f4008b8b08d155ff879d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/707909&quot;&gt;ArchiveGenerator by Ilkka Laukkanen&lt;/a&gt;: Uses &lt;a href=&quot;https://gist.github.com/707020&quot;&gt;this archive page&lt;/a&gt; to generate archives.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/707909&quot;&gt;Ilkka Laukkanen의 ArchiveGenerator&lt;/a&gt; : &lt;a href=&quot;https://gist.github.com/707020&quot;&gt;이 아카이브 페이지&lt;/a&gt; 를 사용 하여 아카이브 를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c079d27598845673cf36b3e39a32a77a6623e08b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/710577&quot;&gt;Tag Cloud Plugin by Ilkka Laukkanen&lt;/a&gt;: Generate a tag cloud that links to tag pages.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/710577&quot;&gt;Ilkka Laukkanen의 Tag Cloud 플러그인&lt;/a&gt; : 태그 페이지로 연결되는 태그 클라우드를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="a2bbc0e3e72a09f39a592a213c0323ceb6bec391" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/730347&quot;&gt;GIT Tag by Alexandre Girard&lt;/a&gt;: Add Git activity inside a list.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/730347&quot;&gt;Alexandre Girard의 GIT 태그&lt;/a&gt; : 목록에 Git 활동을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="bfb29dfffe891ba7159429bb7ad4d7ad521b6c48" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/731597&quot;&gt;Summarize Filter by Mathieu Arnold&lt;/a&gt;: Remove markup after a &lt;code&gt;&amp;lt;div id=&quot;extended&quot;&amp;gt;&lt;/code&gt; tag.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/731597&quot;&gt;Mathieu Arnold로 필터 요약&lt;/a&gt; : &lt;code&gt;&amp;lt;div id=&quot;extended&quot;&amp;gt;&lt;/code&gt; 태그 다음에 마크 업을 제거 합니다.</target>
        </trans-unit>
        <trans-unit id="6e5547e1e0e736146037ee6fb0a02faab4420744" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/760265&quot;&gt;LESS Converter by Josh Brown&lt;/a&gt;: Simple LESS converter.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/760265&quot;&gt;Josh Brown의 LESS Converter&lt;/a&gt; : 간단한 LESS 변환기.</target>
        </trans-unit>
        <trans-unit id="60265a263530aee270089e87ce708c894a1c7bd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/834610&quot;&gt;MathJax Liquid Tags by Jessy Cowan-Sharp&lt;/a&gt;: Simple liquid tags for Jekyll that convert inline math and block equations to the appropriate MathJax script tags.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/834610&quot;&gt;Jessy Cowan-Sharp의 MathJax Liquid 태그&lt;/a&gt; : 인라인 수학 및 블록 방정식을 적절한 MathJax 스크립트 태그로 변환하는 Jekyll의 간단한 액체 태그입니다.</target>
        </trans-unit>
        <trans-unit id="987425f97f8bd61ecfc91e0f31e37ee0b887d440" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/88cda643aa7e3b0ca1e5&quot;&gt;Tiered Archives by Eli Naeher&lt;/a&gt;: Create tiered template variable that allows you to group archives by year and month.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/88cda643aa7e3b0ca1e5&quot;&gt;Eli Naeher의 Tiered Archives&lt;/a&gt; : 연도 및 월별로 아카이브를 그룹화 할 수있는 계층화 된 템플릿 변수를 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="088ba064086f259c934edd37f617c18d53035b71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/912466&quot;&gt;Status.net/OStatus Tag by phaer&lt;/a&gt;: Displays the notices in a given status.net/ostatus feed.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/912466&quot;&gt;페이저 별 Status.net/OStatus 태그&lt;/a&gt; : 지정된 status.net/ostatus 피드에 알림을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="92b55a5ea2948fde32c4c6b878bdefeb45649837" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/959938&quot;&gt;CoffeeScript Converter by phaer&lt;/a&gt;: A &lt;a href=&quot;http://coffeescript.org&quot;&gt;CoffeeScript&lt;/a&gt; to Javascript converter.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/959938&quot;&gt;phaer에 의한 CoffeeScript 변환기&lt;/a&gt; : &lt;a href=&quot;http://coffeescript.org&quot;&gt;CoffeeScript&lt;/a&gt; 에서 Javascript 변환기.</target>
        </trans-unit>
        <trans-unit id="7ea646425a886c660c9e6c806ce957ab8a3eaaa6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/960150&quot;&gt;Sass SCSS Converter by Mark Wolfe&lt;/a&gt;: Sass converter which uses the new CSS compatible syntax, based Sam X&amp;rsquo;s fork above.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/960150&quot;&gt;Mark Wolfe의 Sass SCSS Converter&lt;/a&gt; : Sam X의 포크를 기반으로 새로운 CSS 호환 구문을 사용하는 Sass 변환기.</target>
        </trans-unit>
        <trans-unit id="9f2b15960785327df89772e56445d05ee250bb71" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/988201&quot;&gt;Stylus Converter&lt;/a&gt;: Convert .styl to .css.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/988201&quot;&gt;스타일러스 변환기&lt;/a&gt; : .styl을 .css로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="ba08c1038a4c8b41a05884d44026bb942ef74fa5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/Yexiaoxing/5891929&quot;&gt;Youku and Tudou Embed&lt;/a&gt;: Liquid plugin for embedding Youku and Tudou videos.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/Yexiaoxing/5891929&quot;&gt;Youku and Tudou Embed&lt;/a&gt; : Youku 및 Tudou 비디오를 임베드하기위한 액체 플러그인.</target>
        </trans-unit>
        <trans-unit id="b3fd5c90bfaa1966a80523f448f74c4af9ddf052" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/abhiyerra/7377603&quot;&gt;Org-mode Converter&lt;/a&gt;: Org-mode converter for Jekyll.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/abhiyerra/7377603&quot;&gt;조직 모드 변환기&lt;/a&gt; : Jekyll의 조직 모드 변환기.</target>
        </trans-unit>
        <trans-unit id="74e8be3369587bb06b0042c93f31f15336fe3a8f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/snrbrnjna/422a4b7e017192c284b3&quot;&gt;Jekyll Http Basic Auth Plugin&lt;/a&gt;: Plugin to manage http basic auth for jekyll generated pages and directories.</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/snrbrnjna/422a4b7e017192c284b3&quot;&gt;Jekyll Http Basic Auth 플러그인&lt;/a&gt; : jekyll에서 생성 된 페이지 및 디렉토리에 대한 http 기본 인증을 관리하는 플러그인입니다.</target>
        </trans-unit>
        <trans-unit id="0a6d9f7a90347236c00387ce3599f8f451dbb455" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/tobru/9171700&quot;&gt;Lychee Gallery Tag&lt;/a&gt; by &lt;a href=&quot;https://github.com/tobru&quot;&gt;tobru&lt;/a&gt;: Include &lt;a href=&quot;https://lychee.electerious.com/&quot;&gt;Lychee&lt;/a&gt; albums into a post. For an introduction, see &lt;a href=&quot;https://tobrunet.ch/articles/jekyll-meets-lychee-a-liquid-tag-plugin/&quot;&gt;Jekyll meets Lychee - A Liquid Tag plugin&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/tobru/9171700&quot;&gt;열매 갤러리 태그&lt;/a&gt; 에 의해 &lt;a href=&quot;https://github.com/tobru&quot;&gt;tobru는&lt;/a&gt; : 포함 &lt;a href=&quot;https://lychee.electerious.com/&quot;&gt;열매&lt;/a&gt; 게시물에 앨범을. 소개는 &lt;a href=&quot;https://tobrunet.ch/articles/jekyll-meets-lychee-a-liquid-tag-plugin/&quot;&gt;Jekyll과 Lychee의 만남-액체 태그 플러그인을&lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e8ab008b9e11c16e3e87891f92a1fce8e9334128" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://gist.github.com/zachleat/5792681&quot;&gt;Read in X Minutes&lt;/a&gt; by &lt;a href=&quot;https://github.com/zachleat&quot;&gt;zachleat&lt;/a&gt;: Estimates the reading time of a string (for blog post content).</source>
          <target state="translated">&lt;a href=&quot;https://gist.github.com/zachleat/5792681&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/zachleat&quot;&gt;zachleat의 &lt;/a&gt;X Minutes 로 읽기 : 문자열의 읽기 시간을 추정합니다 (블로그 게시물 내용의 경우).</target>
        </trans-unit>
        <trans-unit id="c0f3d4b69cabd7045ce8a8741c2eb7c210aca756" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/23maverick23/jekyll-humanize&quot;&gt;jekyll-humanize&lt;/a&gt;: This is a port of the Django app humanize which adds a &amp;ldquo;human touch&amp;rdquo; to data. Each method represents a Fluid type filter that can be used in your Jekyll site templates. Given that Jekyll produces static sites, some of the original methods do not make logical sense to port (e.g. naturaltime).</source>
          <target state="translated">&lt;a href=&quot;https://github.com/23maverick23/jekyll-humanize&quot;&gt;jekyll-humanize&lt;/a&gt; : Django 앱 휴먼 라이 제이션 포트로 데이터에 &quot;휴먼 터치&quot;를 추가합니다. 각 방법은 Jekyll 사이트 템플릿에서 사용할 수있는 유체 유형 필터를 나타냅니다. Jekyll이 정적 사이트를 생성한다고 가정하면, 원래의 방법 중 일부는 논리적으로 이해되지 않습니다 (예 : 자연 시간).</target>
        </trans-unit>
        <trans-unit id="16fc4b0d81b53aef1791b6e379ea21dc5893d90b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/23maverick23/sublime-jekyll&quot;&gt;sublime-jekyll&lt;/a&gt;: A Sublime Text package for Jekyll static sites. This package should help creating Jekyll sites and posts easier by providing access to key template tags and filters, as well as common completions and a current date/datetime command (for dating posts). You can install this package manually via GitHub, or via &lt;a href=&quot;https://packagecontrol.io/packages/Jekyll&quot;&gt;Package Control&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/23maverick23/sublime-jekyll&quot;&gt;sublime-jekyll&lt;/a&gt; : Jekyll 정적 사이트를위한 Sublime Text 패키지. 이 패키지는 주요 템플릿 태그 및 필터에 대한 액세스뿐만 아니라 일반적인 완료 및 현재 날짜 / 날짜 / 시간 명령 (데이트 게시물)을 제공하여 Jekyll 사이트 및 게시물을보다 쉽게 ​​만들 수 있도록 도와줍니다. GitHub 또는 &lt;a href=&quot;https://packagecontrol.io/packages/Jekyll&quot;&gt;Package Control을&lt;/a&gt; 통해이 패키지를 수동으로 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="22e1cf498442fc2aac3dcc8f1c1d11c023850fbe" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/AlessandroLorenzi/piwigo_gallery&quot;&gt;Piwigo Gallery&lt;/a&gt; by &lt;a href=&quot;http://blog.alorenzi.eu/&quot;&gt;Alessandro Lorenzi&lt;/a&gt;: Jekyll plugin to generate thumbnails from a Piwigo gallery and display them with a Liquid tag</source>
          <target state="translated">&lt;a href=&quot;https://github.com/AlessandroLorenzi/piwigo_gallery&quot;&gt;Piwigo 갤러리&lt;/a&gt; 로 &lt;a href=&quot;http://blog.alorenzi.eu/&quot;&gt;알레산드로 로렌은&lt;/a&gt; : 지킬은 Piwigo 갤러리에서 썸네일을 생성하고 액체 태그를 표시하기 위해 플러그인</target>
        </trans-unit>
        <trans-unit id="910f1d116e99b8365d58789383a5f7d45194a17c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/Ezmyrelda/twa&quot;&gt;twa&lt;/a&gt;: Twemoji Awesome plugin for Jekyll. Liquid tag allowing you to use twitter emoji in your jekyll pages.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/Ezmyrelda/twa&quot;&gt;TWA&lt;/a&gt; : 지킬에 대한 Twemoji 최고 플러그인. jekyll 페이지에서 트위터 이모티콘을 사용할 수있는 액체 태그.</target>
        </trans-unit>
        <trans-unit id="548be5e0196eedcc49fe79588fae9fb6b31294b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/GSI/jekyll_date_chart&quot;&gt;Jekyll Date Chart&lt;/a&gt; by &lt;a href=&quot;https://github.com/GSI&quot;&gt;GSI&lt;/a&gt;: Block that renders date line charts based on textile-formatted tables.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/GSI/jekyll_date_chart&quot;&gt;지킬 날짜 차트&lt;/a&gt; 에 의한 &lt;a href=&quot;https://github.com/GSI&quot;&gt;GSI&lt;/a&gt; 블록 섬유 형식의 테이블을 기반으로 날짜 라인 차트를 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="27ab7a552c9e57e8dd5e6136b986abbfcffed99b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/GSI/jekyll_image_encode&quot;&gt;Jekyll Image Encode&lt;/a&gt; by &lt;a href=&quot;https://github.com/GSI&quot;&gt;GSI&lt;/a&gt;: Tag that renders base64 codes of images fetched from the web.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/GSI/jekyll_image_encode&quot;&gt;지킬 이미지 인코딩&lt;/a&gt; 하여 &lt;a href=&quot;https://github.com/GSI&quot;&gt;GSI&lt;/a&gt; : 이미지의 base64로 코드를 렌더링 태그는 웹에서 가져온.</target>
        </trans-unit>
        <trans-unit id="d5090e011921d93dc0eb0752b3a9ee6f3ea93225" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/GSI/jekyll_quick_man&quot;&gt;Jekyll Quick Man&lt;/a&gt; by &lt;a href=&quot;https://github.com/GSI&quot;&gt;GSI&lt;/a&gt;: Tag that renders pretty links to man page sources on the internet.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/GSI/jekyll_quick_man&quot;&gt;지킬 빠른 남자&lt;/a&gt; 에 의해 &lt;a href=&quot;https://github.com/GSI&quot;&gt;GSI&lt;/a&gt; : 태그 인터넷에서 man 페이지 소스에 꽤 링크를 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="9a07cd68f2374c44e17faca560bdf6136276d6a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/JCB-K/singlepage-jekyll&quot;&gt;Singlepage-jekyll&lt;/a&gt; by &lt;a href=&quot;https://github.com/JCB-K&quot;&gt;JCB-K&lt;/a&gt;: Turns Jekyll into a dynamic one-page website.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/JCB-K/singlepage-jekyll&quot;&gt;Singlepage-지킬&lt;/a&gt; 하여 &lt;a href=&quot;https://github.com/JCB-K&quot;&gt;JCB-K는&lt;/a&gt; : 다이나믹 한 페이지 웹 사이트에 지킬를 켭니다.</target>
        </trans-unit>
        <trans-unit id="064a50023f0324eb8d48936335e428585fce3745" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/KrzysiekJ/jekyll-i18n_tags&quot;&gt;jekyll-i18n_tags&lt;/a&gt;: Translate your templates.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/KrzysiekJ/jekyll-i18n_tags&quot;&gt;jekyll-i18n_tags&lt;/a&gt; : 템플릿을 번역합니다.</target>
        </trans-unit>
        <trans-unit id="3b7cae2be096e4c9e2f4190353a8ea46f97d950e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/KrzysiekJ/jekyll-paspagon&quot;&gt;jekyll-paspagon&lt;/a&gt;: Sell your posts in various formats for cryptocurrencies.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/KrzysiekJ/jekyll-paspagon&quot;&gt;jekyll-paspagon&lt;/a&gt; : cryptocurrencies를 위해 다양한 형식으로 게시물을 판매하십시오.</target>
        </trans-unit>
        <trans-unit id="713da71dc20c92c07589d638d03dfdb14c419a0c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/LawrenceWoodman/domain_name-liquid_filter&quot;&gt;Domain Name Filter by Lawrence Woodman&lt;/a&gt;: Filters the input text so that just the domain name is left.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/LawrenceWoodman/domain_name-liquid_filter&quot;&gt;Lawrence Woodman의 도메인 이름 필터&lt;/a&gt; : 입력 텍스트를 필터링 하여 도메인 이름 만 남습니다.</target>
        </trans-unit>
        <trans-unit id="a9ddf0935d92201d78e718b447228ffb5cbf6c1d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/LawrenceWoodman/related_posts-jekyll_plugin&quot;&gt;Related Posts by Lawrence Woodman&lt;/a&gt;: Overrides &lt;code&gt;site.related_posts&lt;/code&gt; to use categories to assess relationship.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/LawrenceWoodman/related_posts-jekyll_plugin&quot;&gt;Lawrence Woodman의 관련 게시물&lt;/a&gt; : &lt;code&gt;site.related_posts&lt;/code&gt; 를 재정 의하여 범주를 사용하여 관계를 평가합니다.</target>
        </trans-unit>
        <trans-unit id="ecba6bd8b16ee9ee46a1b2e04ecdfb0f1c35befb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/MattHall/truncatehtml&quot;&gt;Truncate HTML&lt;/a&gt; by &lt;a href=&quot;https://codebeef.com/&quot;&gt;Matt Hall&lt;/a&gt;: A Jekyll filter that truncates HTML while preserving markup structure.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/MattHall/truncatehtml&quot;&gt;자르기 HTML&lt;/a&gt; 로 &lt;a href=&quot;https://codebeef.com/&quot;&gt;매트 홀&lt;/a&gt; : 자릅니다 HTML 마크 업 구조를 유지하면서하는 지킬 필터.</target>
        </trans-unit>
        <trans-unit id="1cf550a1b514d5fafeb432688686d75145b56c57" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/MediaComem/jekyll-brand-social-wall&quot;&gt;Jekyll Brand Social Wall&lt;/a&gt;: A jekyll plugin to generate a social wall with your favorite social networks</source>
          <target state="translated">&lt;a href=&quot;https://github.com/MediaComem/jekyll-brand-social-wall&quot;&gt;Jekyll Brand Social Wall&lt;/a&gt; : 좋아하는 소셜 네트워크로 소셜 월을 생성하는 jekyll 플러그인</target>
        </trans-unit>
        <trans-unit id="2693df8fca8dd1c2145413c2e88da55f5cd31e58" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/MertcanGokgoz/Jekyll-Spotify&quot;&gt;Jekyll-Spotify&lt;/a&gt;: Easily output Spotify Embed Player for jekyll</source>
          <target state="translated">&lt;a href=&quot;https://github.com/MertcanGokgoz/Jekyll-Spotify&quot;&gt;Jekyll-Spotify&lt;/a&gt; : jekyll 용 Spotify Embed Player를 쉽게 출력</target>
        </trans-unit>
        <trans-unit id="667b811d85a915740e072f4ae28fd6448c04d931" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/PascalW/jekyll_indextank&quot;&gt;Full-text search by Pascal Widdershoven&lt;/a&gt;: Adds full-text search to your Jekyll site with a plugin and a bit of JavaScript.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/PascalW/jekyll_indextank&quot;&gt;Pascal Widdershoven의&lt;/a&gt; 전체 텍스트 검색 : 플러그인 및 약간의 JavaScript를 사용하여 Jekyll 사이트에 전체 텍스트 검색을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ee16691267dc4f4d498b2e7cc75f8a839e4843b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/PatrickC8t/Jekyll-Ordinal&quot;&gt;Jekyll-Ordinal&lt;/a&gt;: Jekyll liquid filter to output a date ordinal such as &amp;ldquo;st&amp;rdquo;, &amp;ldquo;nd&amp;rdquo;, &amp;ldquo;rd&amp;rdquo;, or &amp;ldquo;th&amp;rdquo;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/PatrickC8t/Jekyll-Ordinal&quot;&gt;Jekyll-Ordinal&lt;/a&gt; : Jekyll 액체 필터는&amp;ldquo;st&amp;rdquo;,&amp;ldquo;nd&amp;rdquo;,&amp;ldquo;rd&amp;rdquo;또는&amp;ldquo;th&amp;rdquo;와 같은 날짜 서수를 출력합니다.</target>
        </trans-unit>
        <trans-unit id="aa577bbf6865da5dce85de6ca82ebbb7eb507bd3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/SaswatPadhi/jekyll_smilify&quot;&gt;Smilify&lt;/a&gt; by &lt;a href=&quot;https://github.com/SaswatPadhi&quot;&gt;SaswatPadhi&lt;/a&gt;: Convert text emoticons in your content to themeable smiley pics.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/SaswatPadhi/jekyll_smilify&quot;&gt;SaswatPadhi에&lt;/a&gt; 의해 &lt;a href=&quot;https://github.com/SaswatPadhi&quot;&gt;Smilify&lt;/a&gt; : 콘텐츠의 텍스트 이모티콘을 테마가있는 웃는 사진으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="cda2223e8678329752a33002a9641a487a3f258b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/TheFox/jekyll-bigfootnotes&quot;&gt;Bigfootnotes Plugin&lt;/a&gt;: Enables big footnotes for Kramdown.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/TheFox/jekyll-bigfootnotes&quot;&gt;Bigfootnotes Plugin&lt;/a&gt; : Kramdown에 대한 큰 각주를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="eeaf3ce92a8381fc1c53d2d6d12a5fd947f9885e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/aarongustafson/jekyll-webmention_io&quot;&gt;webmention_io.rb&lt;/a&gt; by &lt;a href=&quot;http://aaron-gustafson.com/&quot;&gt;Aaron Gustafson&lt;/a&gt;: A plugin to enable &lt;a href=&quot;https://indieweb.org/webmention&quot;&gt;webmention&lt;/a&gt; integration using &lt;a href=&quot;https://webmention.io/&quot;&gt;Webmention.io&lt;/a&gt;. Includes an optional JavaScript for updating webmentions automatically between publishes and, if available, in realtime using WebSockets.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/aarongustafson/jekyll-webmention_io&quot;&gt;webmention_io.rb&lt;/a&gt; 에 의해 &lt;a href=&quot;http://aaron-gustafson.com/&quot;&gt;아론 구스타프손&lt;/a&gt; 수 있도록 플러그인 A : &lt;a href=&quot;https://indieweb.org/webmention&quot;&gt;webmention를&lt;/a&gt; 사용하여 통합을 &lt;a href=&quot;https://webmention.io/&quot;&gt;Webmention.io을&lt;/a&gt; . WebSockets를 사용하여 게시 간 및 가능한 경우 실시간으로 웹 멘션을 자동으로 업데이트하기위한 선택적 JavaScript가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="d207dcdfc086b28895234d7cae5ac866dc62b079" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/adaoraul/rack-jekyll/&quot;&gt;Rack-Jekyll&lt;/a&gt; is an easy way to deploy your site on any Rack server such as Amazon EC2, Slicehost, Heroku, and so forth. It also can run with &lt;a href=&quot;https://github.com/rtomayko/shotgun/&quot;&gt;shotgun&lt;/a&gt;, &lt;a href=&quot;https://github.com/rack/rack&quot;&gt;rackup&lt;/a&gt;, &lt;a href=&quot;https://github.com/mongrel/mongrel&quot;&gt;mongrel&lt;/a&gt;, &lt;a href=&quot;https://github.com/defunkt/unicorn/&quot;&gt;unicorn&lt;/a&gt;, and &lt;a href=&quot;https://github.com/adaoraul/rack-jekyll#readme&quot;&gt;others&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/adaoraul/rack-jekyll/&quot;&gt;Rack-Jekyll&lt;/a&gt; 은 Amazon EC2, Slicehost, Heroku 등과 같은 모든 랙 서버에 사이트를 쉽게 배포 할 수있는 방법입니다. 또한 &lt;a href=&quot;https://github.com/rtomayko/shotgun/&quot;&gt;샷건&lt;/a&gt; , &lt;a href=&quot;https://github.com/rack/rack&quot;&gt;랙업&lt;/a&gt; , &lt;a href=&quot;https://github.com/mongrel/mongrel&quot;&gt;잡종&lt;/a&gt; , &lt;a href=&quot;https://github.com/defunkt/unicorn/&quot;&gt;유니콘&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/adaoraul/rack-jekyll#readme&quot;&gt;기타&lt;/a&gt; 와 함께 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="473e0ebdaf9bf6f30c03b70b923edbf38453dea6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/agelber/jekyll-rss&quot;&gt;RssGenerator by Assaf Gelber&lt;/a&gt;: Automatically creates an RSS 2.0 feed from your posts.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/agelber/jekyll-rss&quot;&gt;Assaf Gelber의 RssGenerator&lt;/a&gt; : 게시물에서 RSS 2.0 피드를 자동으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="6386280561da3d34fb6afa99d64348cb318d7475" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/alexivkin/Jekyll-Art-Gallery-Plugin&quot;&gt;Jekyll Art Gallery plugin&lt;/a&gt;: An advanced art/photo gallery generation plugin for creating galleries from a set of image folders. Supports image tagging, thumbnails, sorting, image rotation, post-processing (remove EXIF, add watermark), multiple collections and much more.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/alexivkin/Jekyll-Art-Gallery-Plugin&quot;&gt;Jekyll Art Gallery 플러그인&lt;/a&gt; : 이미지 폴더 세트에서 갤러리를 만들기위한 고급 아트 / 사진 갤러리 생성 플러그인. 이미지 태깅, 썸네일, 정렬, 이미지 회전, 사후 처리 (EXIF 제거, 워터 마크 추가), 여러 컬렉션 등을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="a56665fdd232d52725d4fceee8962d39eb588dc9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/archome/jekyll-citation&quot;&gt;Jekyll-citation&lt;/a&gt;: Render BibTeX-formatted bibliographies/citations included in posts and pages (pure Ruby).</source>
          <target state="translated">&lt;a href=&quot;https://github.com/archome/jekyll-citation&quot;&gt;Jekyll-citation&lt;/a&gt; : 게시물과 페이지에 포함 된 BibTeX 형식의 참고 문헌 / 인용을 렌더링합니다 (순수한 Ruby).</target>
        </trans-unit>
        <trans-unit id="51f077a4c23eeb2825c568c7f630a2228628127c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/asciidoctor/jekyll-asciidoc&quot;&gt;AsciiDoc Plugin&lt;/a&gt;: AsciiDoc convertor for Jekyll using &lt;a href=&quot;http://asciidoctor.org/&quot;&gt;Asciidoctor&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/asciidoctor/jekyll-asciidoc&quot;&gt;AsciiDoc 플러그인&lt;/a&gt; : &lt;a href=&quot;http://asciidoctor.org/&quot;&gt;Asciidoctor를&lt;/a&gt; 사용하는 Jekyll 용 AsciiDoc 변환기 .</target>
        </trans-unit>
        <trans-unit id="88eca099845699019062d62df4447e9622f772ad" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ashmaroli/jekyll-data&quot;&gt;jekyll-data&lt;/a&gt;: Read data files within Jekyll Theme Gems.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ashmaroli/jekyll-data&quot;&gt;jekyll-data&lt;/a&gt; : Jekyll Theme Gems 내에서 데이터 파일을 읽습니다.</target>
        </trans-unit>
        <trans-unit id="0f75660899bf8c9c4410a3cf8822d05b1540e212" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/aucor/jekyll-plugins&quot;&gt;Jekyll plugins by Aucor&lt;/a&gt;: Plugins for trimming unwanted newlines/whitespace and sorting pages by weight attribute.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/aucor/jekyll-plugins&quot;&gt;Aucor의 Jekyll 플러그인&lt;/a&gt; : 불필요한 줄 바꿈 / 공백 을 자르고 가중치 속성으로 페이지를 정렬하는 플러그인.</target>
        </trans-unit>
        <trans-unit id="905d5d0ab3132f001e75f3dad7e67eac926c690d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/awood/hawkins&quot;&gt;Hawkins&lt;/a&gt;: Adds a &lt;code&gt;liveserve&lt;/code&gt; sub-command to Jekyll that incorporates &lt;a href=&quot;http://livereload.com/&quot;&gt;LiveReload&lt;/a&gt; into your pages while you preview them. No more hitting the refresh button in your browser!</source>
          <target state="translated">&lt;a href=&quot;https://github.com/awood/hawkins&quot;&gt;Hawkins&lt;/a&gt; : 미리보기하는 동안 &lt;a href=&quot;http://livereload.com/&quot;&gt;LiveReload&lt;/a&gt; 를 페이지에 통합 하는 &lt;code&gt;liveserve&lt;/code&gt; 하위 명령을 Jekyll에 추가 합니다. 더 이상 브라우저에서 새로 고침 버튼을 누르지 마십시오!</target>
        </trans-unit>
        <trans-unit id="ecfb076acb0cd002f7c99b04fb5dffd60b410d16" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ayastreb/jekyll-maps&quot;&gt;Jekyll Maps&lt;/a&gt; by &lt;a href=&quot;https://github.com/ayastreb&quot;&gt;Anatoliy Yastreb&lt;/a&gt;: A Jekyll plugin to easily embed maps with filterable locations.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ayastreb/jekyll-maps&quot;&gt;Jekyll Maps&lt;/a&gt; by &lt;a href=&quot;https://github.com/ayastreb&quot;&gt;Anatoliy Yastreb&lt;/a&gt; : Jekyll 플러그인으로 필터링 가능한 위치가있는 맵을 쉽게 포함시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="564da2be42797017bd873ae97b8ee26150e45953" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bbakersmith/jekyll-pages-directory&quot;&gt;Pages Directory by Ben Baker-Smith&lt;/a&gt;: Defines a &lt;code&gt;_pages&lt;/code&gt; directory for page files which routes its output relative to the project root.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/bbakersmith/jekyll-pages-directory&quot;&gt;Ben Baker-Smith의 Pages Directory&lt;/a&gt; : 프로젝트 루트를 기준으로 출력을 라우팅하는 페이지 파일 의 &lt;code&gt;_pages&lt;/code&gt; 디렉토리를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="a62da02560ee311bad621b9ed437a84d05d85636" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bdesham/inline_highlight&quot;&gt;inline_highlight&lt;/a&gt;: A tag for inline syntax highlighting.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/bdesham/inline_highlight&quot;&gt;inline_highlight&lt;/a&gt; : 인라인 구문 강조를위한 태그입니다.</target>
        </trans-unit>
        <trans-unit id="24222a1d99e759d05e7de6812ded2fb64c983365" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bdesham/pluralize&quot;&gt;pluralize&lt;/a&gt;: Easily combine a number and a word into a grammatically-correct amount like &amp;ldquo;1 minute&amp;rdquo; or &amp;ldquo;2 minute&lt;strong&gt;s&lt;/strong&gt;&amp;rdquo;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/bdesham/pluralize&quot;&gt;복수형&lt;/a&gt; : 숫자와 단어를 &quot;1 분&quot;또는 &quot;2 분 &lt;strong&gt;s&lt;/strong&gt; &quot; 와 같이 문법적으로 수정 된 양으로 쉽게 결합합니다 .</target>
        </trans-unit>
        <trans-unit id="ac424632f7d05d47eabe063b61524e04a9e243f3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bdesham/reading_time&quot;&gt;reading_time&lt;/a&gt;: Count words and estimate reading time for a piece of text, ignoring HTML elements that are unlikely to contain running text.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/bdesham/reading_time&quot;&gt;reading_time&lt;/a&gt; : 실행중인 텍스트를 포함하지 않을 HTML 요소를 무시하고 단어 개수를 계산하고 텍스트의 읽기 시간을 추정합니다.</target>
        </trans-unit>
        <trans-unit id="70a8aaffb981257767ef0db6340b882d05ff65c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/blackwinter/jekyll-localization&quot;&gt;Jekyll-localization&lt;/a&gt;: Jekyll plugin that adds localization features to the rendering engine.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/blackwinter/jekyll-localization&quot;&gt;Jekyll-localization&lt;/a&gt; : 렌더링 엔진에 현지화 기능을 추가하는 Jekyll 플러그인.</target>
        </trans-unit>
        <trans-unit id="049175cedff4dca856a1afecbfe7c6e07650089d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/blackwinter/jekyll-pagination&quot;&gt;Jekyll-pagination&lt;/a&gt;: Jekyll plugin to extend the pagination generator.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/blackwinter/jekyll-pagination&quot;&gt;Jekyll-pagination&lt;/a&gt; : 페이지 매김 생성기를 확장하는 Jekyll 플러그인.</target>
        </trans-unit>
        <trans-unit id="953b8e6162ec62edac256ef28ed656062b090947" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/blackwinter/jekyll-rendering&quot;&gt;Jekyll-rendering&lt;/a&gt;: Jekyll plugin to provide alternative rendering engines.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/blackwinter/jekyll-rendering&quot;&gt;Jekyll-rendering&lt;/a&gt; : 대체 렌더링 엔진을 제공하는 Jekyll 플러그인.</target>
        </trans-unit>
        <trans-unit id="7e5b3f2dc1509e9a68f729a58c7b586824021bec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/bwillis/jekyll-github-sample&quot;&gt;Jekyll GitHub Sample Tag&lt;/a&gt;: A liquid tag to include a sample of a github repo file in your Jekyll site.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/bwillis/jekyll-github-sample&quot;&gt;Jekyll GitHub 샘플 태그&lt;/a&gt; : Jekyll 사이트에 github repo 파일 샘플을 포함하는 액체 태그입니다.</target>
        </trans-unit>
        <trans-unit id="5e80048c50166d706b7cbf5768b9739cd9a5568d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/callmeed/jekyll-image-set&quot;&gt;Image Set/Gallery Tag&lt;/a&gt; by &lt;a href=&quot;https://github.com/callmeed&quot;&gt;callmeed&lt;/a&gt;: Renders HTML for an image gallery from a folder in your Jekyll site. Just pass it a folder name and class/tag options.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/callmeed/jekyll-image-set&quot;&gt;이미지 설정 / 갤러리 태그&lt;/a&gt; 에 의해 &lt;a href=&quot;https://github.com/callmeed&quot;&gt;callmeed은&lt;/a&gt; : 당신의 지킬 사이트의 폴더에서 이미지 갤러리를위한 HTML을 렌더링합니다. 폴더 이름과 클래스 / 태그 옵션을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="96951a16ac7a8056bf4b7f20abb36534e63df567" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/christianhellsten/jekyll-plugins&quot;&gt;Delicious Plugin by Christian Hellsten&lt;/a&gt;: Fetches and renders bookmarks from delicious.com.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/christianhellsten/jekyll-plugins&quot;&gt;Christian Hellsten의 Delicious Plugin&lt;/a&gt; : delicious.com에서 책갈피를 가져오고 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="4b151176b96324c5ceb8414809f76c7666807e4e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/codeinpink/jekyll-portfolio-generator&quot;&gt;Jekyll Portfolio Generator by Shannon Babincsak&lt;/a&gt;: Generates project pages and computes related projects out of project data files.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/codeinpink/jekyll-portfolio-generator&quot;&gt;Shannon Babincsak의 Jekyll Portfolio Generator&lt;/a&gt; : 프로젝트 데이터 파일에서 프로젝트 페이지를 생성하고 관련 프로젝트를 계산합니다.</target>
        </trans-unit>
        <trans-unit id="ab13fdc1eb5ff8adb78462b7eaf5066b718dbbd5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/contentful/jekyll-contentful-data-import&quot;&gt;Official Contentful Jekyll Plugin&lt;/a&gt;: Adds a &lt;code&gt;contentful&lt;/code&gt; sub-command to Jekyll to import data from Contentful.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/contentful/jekyll-contentful-data-import&quot;&gt;공식 Contentful 지킬 플러그인&lt;/a&gt; : 추가하는 &lt;code&gt;contentful&lt;/code&gt; Contentful에서 데이터 가져 오기를 지킬으로 하위 명령.</target>
        </trans-unit>
        <trans-unit id="3ffbf2950265a18829f8ca94746413e02725b4e9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/crispgm/jekyll-tags-list-plugin&quot;&gt;Jekyll Tags List Plugin&lt;/a&gt;: A Liquid tag plugin that creates tags list in specific order.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/crispgm/jekyll-tags-list-plugin&quot;&gt;Jekyll 태그 목록 플러그인&lt;/a&gt; : 특정 순서로 태그 목록을 생성하는 Liquid 태그 플러그인입니다.</target>
        </trans-unit>
        <trans-unit id="19b300464438e5115beb28236e7d95c68eab19e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dafi/jekyll-toc-generator&quot;&gt;Table of Content Generator&lt;/a&gt;: Generate the HTML code containing a table of content (TOC), the TOC can be customized in many way, for example you can decide which pages can be without TOC.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/dafi/jekyll-toc-generator&quot;&gt;목차 생성기&lt;/a&gt; : 목차 (TOC)를 포함하는 HTML 코드를 생성합니다. 목차는 여러 가지 방법으로 사용자 정의 할 수 있습니다. 예를 들어 목차가없는 페이지를 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12bbdf9dcd675356d0f46df7c48eafa5d1becd9f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dannygarcia/grunt-jekyll&quot;&gt;grunt-jekyll&lt;/a&gt;: A straightforward &lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; plugin for Jekyll.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/dannygarcia/grunt-jekyll&quot;&gt;grunt-jekyll&lt;/a&gt; : Jekyll을위한 간단한 &lt;a href=&quot;http://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; 플러그인.</target>
        </trans-unit>
        <trans-unit id="c46ba34d4aaa8e310638294cf7041b5efc2729ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/davidensinger/jekyll-suggested-tweet&quot;&gt;Jekyll Suggested Tweet&lt;/a&gt; by &lt;a href=&quot;https://github.com/davidensinger/&quot;&gt;David Ensinger&lt;/a&gt;: A Liquid tag for Jekyll that allows for the embedding of suggested tweets via Twitter&amp;rsquo;s Web Intents API.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/davidensinger/jekyll-suggested-tweet&quot;&gt;지킬은 트윗을 제안&lt;/a&gt; 하여 &lt;a href=&quot;https://github.com/davidensinger/&quot;&gt;데이비드 싱어 (Ensinger)&lt;/a&gt; 지킬위한 액체 태그 트위터의 웹 텐트 API를 통해 제안 된 트윗의 삽입을 허용 :.</target>
        </trans-unit>
        <trans-unit id="6f4c5924d3f769cd407a51eca56bd68688f72a25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/developmentseed/jekyll-ga&quot;&gt;jekyll-ga&lt;/a&gt;: A Jekyll plugin that downloads Google Analytics data and adds it to posts. Useful for making a site that lists &amp;ldquo;most popular&amp;rdquo; content. &lt;a href=&quot;https://developmentseed.org/blog/google-analytics-jekyll-plugin/&quot;&gt;Read the introduction&lt;/a&gt; post on the developmentSEED blog.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/developmentseed/jekyll-ga&quot;&gt;jekyll-ga&lt;/a&gt; : Google Analytics 데이터를 다운로드하여 게시물에 추가하는 Jekyll 플러그인입니다. &quot;가장 인기있는&quot;컨텐츠를 나열하는 사이트를 만드는 데 유용합니다. developmentSEED 블로그 &lt;a href=&quot;https://developmentseed.org/blog/google-analytics-jekyll-plugin/&quot;&gt;에서 소개&lt;/a&gt; 게시물을 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="1cb9af3b54471b850d1614e1bcedcae7cd4a606d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/digitalsparky/jekyll-minifier&quot;&gt;jekyll-minifier&lt;/a&gt;: Minifies HTML, XML, CSS, and Javascript both inline and as separate files utilising yui-compressor and htmlcompressor.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/digitalsparky/jekyll-minifier&quot;&gt;jekyll-minifier&lt;/a&gt; : yui-compressor 및 htmlcompressor를 사용하여 HTML, XML, CSS 및 Javascript를 인라인 및 별도의 파일로 축소합니다.</target>
        </trans-unit>
        <trans-unit id="a900e5f28a66c12ce5cc0a17483efd9c2710d4bc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dimitri-koenig/jekyll-plugins&quot;&gt;Fetch remote file content&lt;/a&gt; by &lt;a href=&quot;https://www.dimitrikoenig.net/&quot;&gt;Dimitri K&amp;ouml;nig&lt;/a&gt;: Using &lt;code&gt;remote_file_content&lt;/code&gt; tag you can fetch the content of a remote file and include it as if you would put the content right into your markdown file yourself. Very useful for including code from github repo&amp;rsquo;s to always have a current repo version.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/dimitri-koenig/jekyll-plugins&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.dimitrikoenig.net/&quot;&gt;Dimitri K&amp;ouml;nig의 &lt;/a&gt;원격 파일 컨텐츠 가져 오기 : &lt;code&gt;remote_file_content&lt;/code&gt; 태그를 사용하면 원격 파일의 컨텐츠 를 페치하여 마크 다운 파일에 직접 컨텐츠를 넣는 것처럼 포함 할 수 있습니다. 항상 현재 리포지토리 버전을 갖도록 github 리포지토리의 코드를 포함하는 데 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="f95ca3ad3fe246a402ad7b76ee33341d6496f4d4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/dommmel/jekyll-youtube&quot;&gt;Jekyll-Youtube&lt;/a&gt; A Liquid tag that embeds Youtube videos. The default emded markup is responsive but you can also specify your own by using an include/partial.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/dommmel/jekyll-youtube&quot;&gt;Jekyll-Youtube&lt;/a&gt; Youtube 비디오를 포함하는 Liquid 태그. 기본 Emded 마크 업은 반응 형이지만 include / partial을 사용하여 고유 한 마크 업을 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e22cb005d5cc74b23d3e6655e9e52fc005d34609" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/edward-shen/github-cards&quot;&gt;github-cards&lt;/a&gt;: Creates styleable Github cards for your Github projects.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/edward-shen/github-cards&quot;&gt;github-cards&lt;/a&gt; : Github 프로젝트를위한 스타일 가능한 Github 카드를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1be9126ae21c162b76e0809131f10eb54e57162c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ericdfields/Jekyll-Dribbble-Set-Tag&quot;&gt;Jekyll Dribbble Set Tag&lt;/a&gt;: Builds Dribbble image galleries from any user.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ericdfields/Jekyll-Dribbble-Set-Tag&quot;&gt;Jekyll Dribbble Set Tag&lt;/a&gt; : 모든 사용자로부터 드리블 이미지 갤러리를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="12423f14ee26132271c974ba6ebd46686c716868" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/eug/jekyll-video-embed&quot;&gt;Jekyll Video Embed&lt;/a&gt;: It provides several tags to easily embed videos (e.g. Youtube, Vimeo, UStream and Ted Talks)</source>
          <target state="translated">&lt;a href=&quot;https://github.com/eug/jekyll-video-embed&quot;&gt;Jekyll Video Embed&lt;/a&gt; : 비디오 를 쉽게 임베드하기위한 몇 가지 태그를 제공합니다 (예 : Youtube, Vimeo, UStream 및 Ted Talks)</target>
        </trans-unit>
        <trans-unit id="1906fc8921dbf427ebc7aeabcba95ba3a07ee9a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/fadhilnapis/jekyll-multi-paginate&quot;&gt;jekyll-multi-paginate&lt;/a&gt;: Simple Jekyll paginator for multiple page. Ease you to make pagination on multiple page especially like multiple language.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/fadhilnapis/jekyll-multi-paginate&quot;&gt;jekyll-multi-paginate&lt;/a&gt; : 여러 페이지를위한 간단한 Jekyll 페이지 매김 . 특히 여러 언어와 같이 여러 페이지에서 페이지 매김을 쉽게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="429920ef713ae8f6f6f3a3ed7be555b03c9b28c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/fauno/jekyll-pandoc-multiple-formats&quot;&gt;Jekyll-pandoc-multiple-formats&lt;/a&gt; by &lt;a href=&quot;https://github.com/edsl&quot;&gt;edsl&lt;/a&gt;: Use pandoc to generate your site in multiple formats. Supports pandoc&amp;rsquo;s markdown extensions.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/fauno/jekyll-pandoc-multiple-formats&quot;&gt;지킬-pandoc-여러 형식&lt;/a&gt; 으로 &lt;a href=&quot;https://github.com/edsl&quot;&gt;edsl&lt;/a&gt; : 사용 pandoc 여러 형식으로 사이트를 생성합니다. pandoc의 마크 다운 확장을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="8b14ab03b32b055bc2e635b10b7a2a3d178ae903" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/field-theory/jekyll-category-pages&quot;&gt;jekyll-category-pages&lt;/a&gt;: Easy-to-use category index pages with and without pagination. Supports non-URL-safe category keywords and has extensive documentation and test coverage.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/field-theory/jekyll-category-pages&quot;&gt;jekyll-category-pages&lt;/a&gt; : 페이지 매김 유무에 관계없이 사용하기 쉬운 카테고리 색인 페이지. URL이 안전하지 않은 카테고리 키워드를 지원하며 광범위한 문서 및 테스트 범위를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="3ac7632b1142b2f7d9ba3d420367c54cc6ecd942" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/flatterline/jekyll-plugins&quot;&gt;Company website and blog plugins&lt;/a&gt; by Flatterline, a Ruby on Rails development company: Portfolio/project page generator, team/individual page generator, an author bio liquid tag for use on posts, and a few other smaller plugins.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/flatterline/jekyll-plugins&quot;&gt;&lt;/a&gt;Flatterline, Ruby on Rails 개발 회사의 회사 웹 사이트 및 블로그 플러그인 : 포트폴리오 / 프로젝트 페이지 생성기, 팀 / 개별 페이지 생성기, 게시물에 사용하기위한 저자 바이오 리퀴드 태그 및 기타 작은 플러그인.</target>
        </trans-unit>
        <trans-unit id="7488bfc34600d0dbc81b34fb85f8ba42be9415c8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/forestryio/jekyll-menus&quot;&gt;jekyll-menus&lt;/a&gt;: Hugo style menus for your Jekyll site&amp;hellip; recursive menus included.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/forestryio/jekyll-menus&quot;&gt;지킬-메뉴&lt;/a&gt; : 당신의 지킬 사이트 ... 포함 재귀 메뉴에 대한 휴고 스타일의 메뉴.</target>
        </trans-unit>
        <trans-unit id="5a523510b3696b7cc9709ebaa9347f3213f94181" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/git-no/jekyll-breadcrumbs&quot;&gt;Jekyll-breadcrumbs&lt;/a&gt;: Creates breadcrumbs for Jekyll 3.x, includes features like SEO optimization, optional breadcrumb item translation and more.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/git-no/jekyll-breadcrumbs&quot;&gt;Jekyll-breadcrumbs&lt;/a&gt; : Jekyll 3.x 용 breadcrumbs를 생성하며 SEO 최적화, 선택적 breadcrumb 항목 번역 등의 기능이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="59ec496acaf5eb6be42e237a92e3fd19c5631c91" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/hendrikschneider/jekyll-analytics&quot;&gt;Analytics for Jekyll&lt;/a&gt; by Hendrik Schneider: An effortless way to add various trackers like Google Analytics, Matomo (formerly Piwik), mPulse, etc. to your site.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/hendrikschneider/jekyll-analytics&quot;&gt;&lt;/a&gt;Hendrik Schneider의 Jekyll 에 대한 분석 : Google Analytics, Matomo (이전 Piwik), mPulse 등과 같은 다양한 추적기를 사이트에 쉽게 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="61321e162a9c2f1c4645e07ffcd3c5b0eaf99896" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ibrado/jekyll-paginate-content&quot;&gt;Jekyll::Paginate::Content&lt;/a&gt;: Content paginator in the style of jekyll-paginator-v2 that splits pages, posts, and collection entries into several pages. Specify a separator or use HTML &amp;lt;h1&amp;gt; etc. headers. Automatic splitting, single-page view, pager/trail, self-adjusting links, multipage TOC, SEO support.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ibrado/jekyll-paginate-content&quot;&gt;Jekyll :: Paginate :: Content&lt;/a&gt; : 페이지, 게시물 및 컬렉션 항목을 여러 페이지로 분할하는 jekyll-paginator-v2 스타일의 컨텐츠 페이지 매김. 구분 기호를 지정하거나 HTML &amp;lt;h1&amp;gt; 등 헤더를 사용하십시오. 자동 분할, 단일 페이지보기, 호출기 / 트레일, 자체 조정 링크, 다중 페이지 TOC, SEO 지원.</target>
        </trans-unit>
        <trans-unit id="6f7469f4de32a3533593f1764c96bd0b2670ce41" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ibrado/jekyll-stickyposts&quot;&gt;Stickyposts&lt;/a&gt;: Moves or copies (pins) posts marked &lt;code&gt;sticky: true&lt;/code&gt; to the top of the list. Perfect for keeping important announcements on the home page, or giving collections a descriptive entry. Paginator friendly.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ibrado/jekyll-stickyposts&quot;&gt;Stickyposts&lt;/a&gt; : &lt;code&gt;sticky: true&lt;/code&gt; 로 표시된 게시물을 목록의 맨 위로 이동하거나 복사 (핀) 합니다. 홈페이지에 중요한 공지 사항을 유지하거나 컬렉션에 설명 항목을 제공하는 데 적합합니다. 페이지 매김 친화적.</target>
        </trans-unit>
        <trans-unit id="b0b59a7366954ce8b58b14d8fc92b543513b27e5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ibrado/jekyll-tweetsert&quot;&gt;Tweetsert&lt;/a&gt;: Imports tweets (Twitter statuses) as new posts. Features multiple timeline support, hashtag import, filtering, automatic category and/or tags, optional retweets and replies.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ibrado/jekyll-tweetsert&quot;&gt;Tweetsert&lt;/a&gt; : 트윗 (Twitter statuses )을 새 게시물로 가져 옵니다 . 여러 타임 라인 지원, 해시 태그 가져 오기, 필터링, 자동 범주 및 / 또는 태그, 선택적 리트 윗 및 회신 기능이 있습니다.</target>
        </trans-unit>
        <trans-unit id="40158d5b240377ca7a772e2bd2e7f48c694a7c8b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/indirect/jekyll-postfiles&quot;&gt;jekyll-postfiles&lt;/a&gt;: Add &lt;code&gt;_postfiles&lt;/code&gt; directory and &lt;code&gt;{{ postfile }}&lt;/code&gt; tag so the files a post refers to will always be right there inside your repo.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/indirect/jekyll-postfiles&quot;&gt;jekyll-postfiles&lt;/a&gt; : &lt;code&gt;_postfiles&lt;/code&gt; 디렉토리와 &lt;code&gt;{{ postfile }}&lt;/code&gt; 태그를 추가 하여 게시물이 참조하는 파일이 항상 귀하의 저장소 내부에있게하십시오.</target>
        </trans-unit>
        <trans-unit id="1020c525de23429fab46618f2e6a6a4b7e85e8c0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/inukshuk/jekyll-scholar&quot;&gt;Jekyll-scholar&lt;/a&gt;: Jekyll extensions for the blogging scholar.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/inukshuk/jekyll-scholar&quot;&gt;Jekyll-scholar&lt;/a&gt; : 블로그 학자 용 Jekyll 확장.</target>
        </trans-unit>
        <trans-unit id="e4a35e9415ea010fa9f588f5b116cf08a8c685ec" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ivantsepp/jekyll-autolink_email&quot;&gt;Jekyll::AutolinkEmail by Ivan Tse&lt;/a&gt;: Autolink your emails.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ivantsepp/jekyll-autolink_email&quot;&gt;Jekyll :: AutolinkEmail&lt;/a&gt; 게시자 : Ivan Tse : 이메일 자동 링크.</target>
        </trans-unit>
        <trans-unit id="1a65994516cc019d2aa43eccf98b7a6669df8e30" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/ivantsepp/jekyll-git_metadata&quot;&gt;Jekyll::GitMetadata by Ivan Tse&lt;/a&gt;: Expose Git metadata for your templates.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/ivantsepp/jekyll-git_metadata&quot;&gt;Jekyll :: GitMetadata 게시자 : Ivan Tse&lt;/a&gt; : 템플릿에 대한 Git 메타 데이터 노출.</target>
        </trans-unit>
        <trans-unit id="77756e271b7a91541aeac6da71c9c82d4978fd8c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jasonbellamy/jekyll-mermaid&quot;&gt;jekyll-mermaid&lt;/a&gt;: Simplify the creation of mermaid diagrams and flowcharts in your posts and pages.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jasonbellamy/jekyll-mermaid&quot;&gt;jekyll-mermaid&lt;/a&gt; : 게시물 및 페이지에서 인어 다이어그램 및 플로우 차트 작성을 단순화합니다.</target>
        </trans-unit>
        <trans-unit id="e46f91e1ec0dd36c676afc1a3774d7e75451e44a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jeffkole/jekyll-page-collections&quot;&gt;Page Collections by Jeff Kolesky&lt;/a&gt;: Generates collections of pages with functionality that resembles posts.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jeffkole/jekyll-page-collections&quot;&gt;Jeff Kolesky&lt;/a&gt; 의 페이지 모음 : 게시물과 유사한 기능을 가진 페이지 모음을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c050fedef879843f4d4da543ff977c4a70bae9ba" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jekyll/jekyll-gist&quot;&gt;Jekyll-gist&lt;/a&gt;: Use the &lt;code&gt;gist&lt;/code&gt; tag to easily embed a GitHub Gist onto your site. This works with public or secret gists.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jekyll/jekyll-gist&quot;&gt;Jekyll-gist&lt;/a&gt; : &lt;code&gt;gist&lt;/code&gt; 태그를 사용하여 GitHub Gist를 사이트에 쉽게 포함시킵니다. 이것은 공개 또는 비밀 요지와 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="d9c43cec71897f6652981350a357b566b622f451" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jekyll/jekyll-textile-converter&quot;&gt;Textile converter&lt;/a&gt;: Convert &lt;code&gt;.textile&lt;/code&gt; files into HTML. Also includes the &lt;code&gt;textilize&lt;/code&gt; Liquid filter.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jekyll/jekyll-textile-converter&quot;&gt;텍스타일 변환기&lt;/a&gt; : &lt;code&gt;.textile&lt;/code&gt; 파일을 HTML로 변환 합니다. &lt;code&gt;textilize&lt;/code&gt; 액체 필터 도 포함합니다 .</target>
        </trans-unit>
        <trans-unit id="d504949893a0af17a480ecc65889be5ae26917a3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;minima&lt;/a&gt; is the current default theme, and &lt;code&gt;bundle show minima&lt;/code&gt; will show you where minima theme's files are stored on your computer.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;minima&lt;/a&gt; 는 현재 기본 테마이며 &lt;code&gt;bundle show minima&lt;/code&gt; 는 컴퓨터에서 minima 테마의 파일이 저장된 위치를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="558ed369b1bdd5f7dd379f2589309fa25c65a4ae" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/jekylltools/jekyll-ideal-image-slider&quot;&gt;Jekyll Ideal Image Slider&lt;/a&gt;: Liquid tag plugin to create image sliders using &lt;a href=&quot;https://github.com/gilbitron/Ideal-Image-Slider&quot;&gt;Ideal Image Slider&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/jekylltools/jekyll-ideal-image-slider&quot;&gt;지킬 이상적인 이미지 슬라이더&lt;/a&gt; : 액체 태그 플러그인을 사용하여 이미지 슬라이더를 생성하는 &lt;a href=&quot;https://github.com/gilbitron/Ideal-Image-Slider&quot;&gt;이상적인 이미지 슬라이더&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="588648398fa4c4f98745cb9a92c17718f67d758d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/juusaw/amp-jekyll&quot;&gt;AMP-Jekyll by Juuso Mikkonen&lt;/a&gt;: Generate &lt;a href=&quot;https://www.ampproject.org&quot;&gt;Accelerated Mobile Pages&lt;/a&gt; of Jekyll posts.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/juusaw/amp-jekyll&quot;&gt;Juuso Mikkonen의 AMP-Jekyll&lt;/a&gt; : Jekyll 게시물의 &lt;a href=&quot;https://www.ampproject.org&quot;&gt;가속 모바일 페이지&lt;/a&gt; 생성 .</target>
        </trans-unit>
        <trans-unit id="7b8d04c8215c31cdb12d6f85386faea603c00fe7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/k-funk/jekyll-if-file-exists&quot;&gt;Jekyll If File Exists&lt;/a&gt;: A Jekyll Plugin that checks if a file exists with an if/else block.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/k-funk/jekyll-if-file-exists&quot;&gt;Jekyll If File Exists&lt;/a&gt; : 파일이 if / else 블록과 함께 존재하는지 확인하는 Jekyll 플러그인.</target>
        </trans-unit>
        <trans-unit id="af162a1818d47098e5fa6a4aab8e834d5163214a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/kacperduras/disqus-for-jekyll&quot;&gt;disqus-for-jekyll&lt;/a&gt;: A Jekyll plugin to view the comments powered by Disqus.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kacperduras/disqus-for-jekyll&quot;&gt;disqus-for-jekyll&lt;/a&gt; : Disqus가 제공하는 댓글을 볼 수있는 Jekyll 플러그인.</target>
        </trans-unit>
        <trans-unit id="45196224b02f2cf1f7649252d9805f1b6366b78a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/kacperduras/jekyll-html&quot;&gt;jekyll-html&lt;/a&gt;: A Jekyll plugin to use HTML tags in Jekyll pages, posts and collections.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kacperduras/jekyll-html&quot;&gt;jekyll-html&lt;/a&gt; : Jekyll 페이지, 게시물 및 컬렉션에서 HTML 태그를 사용하는 Jekyll 플러그인.</target>
        </trans-unit>
        <trans-unit id="a19dfd938983bb330ddfb693a0980fce997ffa2b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/kinnetica/jekyll-plugins&quot;&gt;Sitemap.xml Generator by Michael Levin&lt;/a&gt;: Generates a sitemap.xml file by traversing all of the available posts and pages.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kinnetica/jekyll-plugins&quot;&gt;Michael Levin의 Sitemap.xml 생성기&lt;/a&gt; : 사용 가능한 모든 게시물과 페이지를 순회하여 sitemap.xml 파일을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2d5e33323daffee58b094e848291f954ffcb991b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/kitsched/japr&quot;&gt;JAPR&lt;/a&gt;: Jekyll Asset Pipeline Reborn - Powerful asset pipeline for Jekyll that collects, converts and compresses JavaScript and CSS assets.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kitsched/japr&quot;&gt;JAPR&lt;/a&gt; : Jekyll Asset Pipeline Reborn-JavaScript 및 CSS 자산을 수집, 변환 및 압축하는 Jekyll의 강력한 자산 파이프 라인입니다.</target>
        </trans-unit>
        <trans-unit id="59d788374c502de8a9256abfe7c36a85e922da8a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/kzykbys/JekyllPlugins&quot;&gt;Deprecated articles keeper&lt;/a&gt; by &lt;a href=&quot;http://blog.kazuya.co/&quot;&gt;Kazuya Kobayashi&lt;/a&gt;: A simple Jekyll filter which monitor how old an article is.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/kzykbys/JekyllPlugins&quot;&gt;더 이상 사용되지 않는 기사 보관 인&lt;/a&gt; : &lt;a href=&quot;http://blog.kazuya.co/&quot;&gt;Kazuya Kobayashi&lt;/a&gt; : 기사의 나이를 모니터링하는 간단한 Jekyll 필터.</target>
        </trans-unit>
        <trans-unit id="799118c2cdac2ea4ad61554d0d082d2fc4cfd6bf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/lavas-project/jekyll-pwa&quot;&gt;jekyll-pwa-plugin&lt;/a&gt;: A plugin provides PWA support for Jekyll. It generates a service worker in Jekyll build process and makes precache and runtime cache available in the runtime with Google Workbox.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/lavas-project/jekyll-pwa&quot;&gt;jekyll-pwa-plugin&lt;/a&gt; : 플러그인은 Jekyll에 대한 PWA 지원을 제공합니다. Jekyll 빌드 프로세스에서 서비스 워커를 생성하고 Google Workbox를 사용하여 런타임에 프리 캐시 및 런타임 캐시를 사용할 수있게합니다.</target>
        </trans-unit>
        <trans-unit id="e1e0ccf2144f89174b6f4c4dcbcea1953043748e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/lawmurray/indii-jekyll-flickr&quot;&gt;Jekyll Flickr Plugin&lt;/a&gt; by &lt;a href=&quot;http://www.indii.org&quot;&gt;Lawrence Murray&lt;/a&gt;: Embeds Flickr photosets (albums) as a gallery of thumbnails, with lightbox links to larger images.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/lawmurray/indii-jekyll-flickr&quot;&gt;지킬 플리커 플러그인&lt;/a&gt; 에 의해 &lt;a href=&quot;http://www.indii.org&quot;&gt;로렌스 머레이&lt;/a&gt; : 큰 이미지 라이트 박스 링크와 함께 축소판 갤러리로 퍼가기 플리커 photosets (앨범).</target>
        </trans-unit>
        <trans-unit id="c2ac9220aed165a25afae656542c578fa501d07b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/lawmurray/indii-jekyll-flickr&quot;&gt;Jekyll Flickr Plugin&lt;/a&gt; by &lt;a href=&quot;http://www.indii.org&quot;&gt;Lawrence Murray&lt;/a&gt;: Generates posts for photos uploaded to a Flickr photostream.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/lawmurray/indii-jekyll-flickr&quot;&gt;지킬 플리커 플러그인&lt;/a&gt; 에 의해 &lt;a href=&quot;http://www.indii.org&quot;&gt;로렌스 머레이&lt;/a&gt; : 플리커 포토 스트림에 업로드 한 사진에 대한 글을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="35b55c80daae8cd4b82a63a6a9a62e4ca98d2d04" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/lkorth/jekyll-500px-embed&quot;&gt;Jekyll 500px Embed&lt;/a&gt; by Luke Korth. A Liquid tag plugin that embeds &lt;a href=&quot;https://500px.com/&quot;&gt;500px&lt;/a&gt; photos.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/lkorth/jekyll-500px-embed&quot;&gt;&lt;/a&gt;Luke Korth가 Jekyll 500px 임베드 &lt;a href=&quot;https://500px.com/&quot;&gt;500px&lt;/a&gt; 사진 을 포함하는 Liquid 태그 플러그인 .</target>
        </trans-unit>
        <trans-unit id="af4c54af22dd18c9719bb17d30a6011d30717431" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/lmullen/jekyll_figure&quot;&gt;jekyll_figure&lt;/a&gt;: Generate figures and captions with links to the figure in a variety of formats</source>
          <target state="translated">&lt;a href=&quot;https://github.com/lmullen/jekyll_figure&quot;&gt;jekyll_figure&lt;/a&gt; : 다양한 형식의 그림 링크를 사용하여 그림 및 캡션 생성</target>
        </trans-unit>
        <trans-unit id="607c9d70b4850dadc1cb85d2f9627e65cb3553b5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/markets/jekyll-timeago&quot;&gt;Jekyll-timeago&lt;/a&gt;: Converts a time value to the time ago in words.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/markets/jekyll-timeago&quot;&gt;Jekyll-timeago&lt;/a&gt; : 시간 값을 단어 이전의 시간으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="3d918d3e2e37d602567718b396355e5a4928c6d7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/matallo/jekyll-thumbnail-filter&quot;&gt;Jekyll Thumbnail Filter&lt;/a&gt;: Related posts thumbnail filter.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/matallo/jekyll-thumbnail-filter&quot;&gt;Jekyll 썸네일 필터&lt;/a&gt; : 관련 게시물 썸네일 필터.</target>
        </trans-unit>
        <trans-unit id="142cafc6ae470e5df71ae28dfcb9b0c167b64285" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mattg/jekyll-download-tag&quot;&gt;Jekyll Download Tag&lt;/a&gt;: A Liquid tag that acts like &lt;code&gt;include&lt;/code&gt;, but for external resources.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mattg/jekyll-download-tag&quot;&gt;Jekyll 다운로드 태그&lt;/a&gt; : &lt;code&gt;include&lt;/code&gt; 처럼 작동 하지만 외부 리소스에 사용 되는 Liquid 태그입니다 .</target>
        </trans-unit>
        <trans-unit id="ceb1ef9a556eee46d2f988c4d6c0c2173a4f8b12" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mattg/jekyll-uglify-filter&quot;&gt;Jekyll Uglify Filter&lt;/a&gt;: A Liquid filter that runs your JavaScript through UglifyJS.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mattg/jekyll-uglify-filter&quot;&gt;Jekyll Uglify Filter&lt;/a&gt; : UglifyJS를 통해 JavaScript를 실행하는 액체 필터입니다.</target>
        </trans-unit>
        <trans-unit id="9e444d2adf56bb6d97f8b1c383cd9ae1a62315a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/matze/jekyll-ditaa&quot;&gt;Ditaa Tag&lt;/a&gt; by &lt;a href=&quot;https://github.com/matze&quot;&gt;matze&lt;/a&gt;: Renders ASCII diagram art into PNG images and inserts a figure tag.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/matze/jekyll-ditaa&quot;&gt;Ditaa 태그&lt;/a&gt; 에 의해 &lt;a href=&quot;https://github.com/matze&quot;&gt;matze은&lt;/a&gt; : PNG 이미지로 ASCII 다이어그램 예술을 렌더링하고 그림 태그를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="fe7393d1c7fb4058319933150b12a5ac742bdc6c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mehdisadeghi/jekyll-jalali&quot;&gt;Jekyll-jalali&lt;/a&gt; by &lt;a href=&quot;http://mehdix.ir&quot;&gt;Mehdi Sadeghi&lt;/a&gt;: A simple Gregorian to Jalali date converter filter.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mehdisadeghi/jekyll-jalali&quot;&gt;지킬-랄리&lt;/a&gt; 에 의해 &lt;a href=&quot;http://mehdix.ir&quot;&gt;메디 사데&lt;/a&gt; : 자랄 날짜 변환 필터에 대한 간단한 그레고리오.</target>
        </trans-unit>
        <trans-unit id="2e942b3f50a3b2438e8ec12180d4cc39f2ed46cf" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/merlos/jekyll-auto-image&quot;&gt;Jekyll Auto Image by Merlos&lt;/a&gt;: Gets the first image of a post. Useful to list your posts with images or to add &lt;a href=&quot;https://dev.twitter.com/cards/overview&quot;&gt;twitter cards&lt;/a&gt; to your site.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/merlos/jekyll-auto-image&quot;&gt;Merlos의 Jekyll Auto Image&lt;/a&gt; : 게시물의 첫 번째 이미지를 가져옵니다. 이미지가 포함 된 게시물을 나열하거나 &lt;a href=&quot;https://dev.twitter.com/cards/overview&quot;&gt;트위터 카드&lt;/a&gt; 를 사이트 에 추가하는 데 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="fef743b0f7a23d2df465211a031af709ccaa0ae1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/midnightSuyama/jekyll-paginate-category&quot;&gt;Jekyll::Paginate::Category&lt;/a&gt;: Pagination Generator for Jekyll Category.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/midnightSuyama/jekyll-paginate-category&quot;&gt;Jekyll :: Paginate :: Category&lt;/a&gt; : Jekyll 카테고리의 페이지 매김 생성기.</target>
        </trans-unit>
        <trans-unit id="51418a2bfbaabc45836ca6ed95e42a29d41fc83a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mnuessler/jekyll-asciinema&quot;&gt;jekyll-asciinema&lt;/a&gt;: A tag for embedding asciicasts recorded with &lt;a href=&quot;https://asciinema.org&quot;&gt;asciinema&lt;/a&gt; in your Jekyll pages.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mnuessler/jekyll-asciinema&quot;&gt;지킬-asciinema&lt;/a&gt; :로 기록 된 asciicasts 삽입에 대한 태그 &lt;a href=&quot;https://asciinema.org&quot;&gt;asciinema&lt;/a&gt; 하여 지킬 페이지에 있습니다.</target>
        </trans-unit>
        <trans-unit id="d12d8cb3e3ad1f4830f93e9cabec82398aa81fd4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mpchadwick/jekyll-migrate-permalink&quot;&gt;jekyll-migrate-permalink&lt;/a&gt;: Adds a &lt;code&gt;migrate-permalink&lt;/code&gt; sub-command to help deal with side effects of changing your permalink.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mpchadwick/jekyll-migrate-permalink&quot;&gt;jekyll-migrate-permalink&lt;/a&gt; : &lt;code&gt;migrate-permalink&lt;/code&gt; 변경의 부작용을 처리 할 수 ​​있도록 migrate-permalink 하위 명령을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="ed9e2acee22175d8a3e157b4df7668c138ee2325" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mpchadwick/jekyll-pre-commit&quot;&gt;jekyll-pre-commit&lt;/a&gt;: A framework for running checks against your posts using a git pre-commit hook before you publish them.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mpchadwick/jekyll-pre-commit&quot;&gt;jekyll-pre-commit&lt;/a&gt; : 게시하기 전에 git pre-commit hook을 사용하여 게시물을 검사하는 프레임 워크입니다.</target>
        </trans-unit>
        <trans-unit id="9c281c983a801662de294711e3e300a3cb5c13cd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mscharley/jekyll-compass&quot;&gt;Compass integration for Jekyll&lt;/a&gt;: Easily integrate Compass and Sass with your Jekyll website.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mscharley/jekyll-compass&quot;&gt;Jekyll을위한 나침반 통합&lt;/a&gt; : Compass와 Sass를 Jekyll 웹 사이트와 쉽게 통합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7e3fddb2374647f0707a14a3eb705888236dbe40" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/muratayusuke/jekyll-numbered-headings&quot;&gt;jekyll-numbered-headings&lt;/a&gt;: Adds ordered number to headings.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/muratayusuke/jekyll-numbered-headings&quot;&gt;jekyll-numbered-headings&lt;/a&gt; : 순서 번호를 제목에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="5460313fbf2700d0d239fef075a6936269c19d6e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/mvdbos/kramdown-with-pygments&quot;&gt;Customized Kramdown Converter&lt;/a&gt;: Enable Pygments syntax highlighting for Kramdown-parsed fenced code blocks.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/mvdbos/kramdown-with-pygments&quot;&gt;맞춤형 Kramdown 변환기&lt;/a&gt; : Kramdown 구문 분석 된 펜스 코드 블록에 대해 피그먼트 구문 강조를 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="6a8e48bf6362a4221f01228b724f21e146f454a5" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/myles/jekyll-typogrify&quot;&gt;jekyll-typogrify&lt;/a&gt;: A Jekyll plugin that brings the functions of &lt;a href=&quot;http://avdgaag.github.io/typogruby/&quot;&gt;typogruby&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/myles/jekyll-typogrify&quot;&gt;지킬-typogrify&lt;/a&gt; :의 기능을 가져 오는 지킬 플러그인 &lt;a href=&quot;http://avdgaag.github.io/typogruby/&quot;&gt;typogruby을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0b28030a0195d622501f7d32e78fb0449dff20d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/nquinlan/jekyll-pageless-redirects&quot;&gt;Pageless Redirect Generator by Nick Quinlan&lt;/a&gt;: Generates redirects based on files in the Jekyll root, with support for htaccess style redirects.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/nquinlan/jekyll-pageless-redirects&quot;&gt;Nick Quinlan의 Pageless Redirect Generator&lt;/a&gt; : Jekyll 루트의 파일을 기반으로 htaccess 스타일 리디렉션을 지원하여 리디렉션을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="0b3a6a43af81ec1234c1ce8d9815f959c4727d26" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/okeeblow/jekyll-beastiepress&quot;&gt;Jekyll-beastiepress&lt;/a&gt;: FreeBSD utility tags for Jekyll sites.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/okeeblow/jekyll-beastiepress&quot;&gt;Jekyll-beastiepress&lt;/a&gt; : Jekyll 사이트를위한 FreeBSD 유틸리티 태그.</target>
        </trans-unit>
        <trans-unit id="f42172f278bfdc164361a74ae04a606f2fbd282c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/olov/jekyll-references&quot;&gt;Markdown References by Olov Lassus&lt;/a&gt;: Keep all your markdown reference-style link definitions in one _references.md file.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/olov/jekyll-references&quot;&gt;Olov Lassus의 마크 다운 참조&lt;/a&gt; : 모든 마크 다운 참조 스타일 링크 정의를 하나의 _references.md 파일에 보관하십시오.</target>
        </trans-unit>
        <trans-unit id="653f49d222d89c99c785984b01af9f28a35db78e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/pablooliveira/bibjekyll&quot;&gt;Bibjekyll&lt;/a&gt;: Render BibTeX-formatted bibliographies/citations included in posts and pages using bibtex2html.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/pablooliveira/bibjekyll&quot;&gt;Bibjekyll&lt;/a&gt; : bibtex2html을 사용하여 게시물과 페이지에 포함 된 BibTeX 형식의 서지 / 인용을 렌더링합니다.</target>
        </trans-unit>
        <trans-unit id="d3381f8f45dab1f308ee44ad3af2e3a72981493e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/parkr/vim-jekyll&quot;&gt;vim-jekyll&lt;/a&gt;: A vim plugin to generate new posts and run &lt;code&gt;jekyll build&lt;/code&gt; all without leaving vim.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/parkr/vim-jekyll&quot;&gt;vim-jekyll&lt;/a&gt; : vim 을 떠나지 않고 새 게시물을 생성하고 &lt;code&gt;jekyll build&lt;/code&gt; 실행하는 vim 플러그인 .</target>
        </trans-unit>
        <trans-unit id="bfc33069f9d918fcae911e28072b844d1174d103" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/pathawks/jekyll-commonmark&quot;&gt;jekyll-commonmark&lt;/a&gt;: Markdown converter that uses &lt;a href=&quot;https://github.com/jgm/CommonMark&quot;&gt;libcmark&lt;/a&gt;, the reference parser for CommonMark.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/pathawks/jekyll-commonmark&quot;&gt;jekyll-commonmark&lt;/a&gt; : &lt;a href=&quot;https://github.com/jgm/CommonMark&quot;&gt;CommonMark&lt;/a&gt; 의 참조 파서 인 libcmark 를 사용하는 Markdown 변환기 .</target>
        </trans-unit>
        <trans-unit id="415c85ebb28af130063d89626579a14eabfa16b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/pathawks/liquid-md5&quot;&gt;liquid-md5&lt;/a&gt;: Returns an MD5 hash. Helpful for generating Gravatars in templates.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/pathawks/liquid-md5&quot;&gt;liquid-md5&lt;/a&gt; : MD5 해시를 반환합니다. 템플릿에서 Gravatar를 생성하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="fcf149435061311b8a0209620295f06c66e7d634" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/pattex/jekyll-tagging&quot;&gt;Jekyll-tagging&lt;/a&gt;: Jekyll plugin to automatically generate a tag cloud and tag pages.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/pattex/jekyll-tagging&quot;&gt;Jekyll-tagging&lt;/a&gt; : 태그 클라우드 및 태그 페이지를 자동으로 생성하는 Jekyll 플러그인.</target>
        </trans-unit>
        <trans-unit id="a4a5e18b2527a696cf55b658990d3fe1281196f6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/paulrobertlloyd/jekyll-figure&quot;&gt;jekyll-figure&lt;/a&gt;: A liquid tag for Jekyll that generates &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; elements.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/paulrobertlloyd/jekyll-figure&quot;&gt;jekyll-figure&lt;/a&gt; : &lt;code&gt;&amp;lt;figure&amp;gt;&lt;/code&gt; 요소 를 생성하는 Jekyll의 액체 태그입니다 .</target>
        </trans-unit>
        <trans-unit id="50ff45cfcbb7805416ce82904cab72f50eaa7483" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/paulrobertlloyd/jekyll-roman&quot;&gt;jekyll-roman&lt;/a&gt;: A liquid filter for Jekyll that converts numbers into Roman numerals.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/paulrobertlloyd/jekyll-roman&quot;&gt;jekyll-roman&lt;/a&gt; : Jekyll의 액체 필터로 숫자를 로마 숫자로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="6f8ea18633a1f6d894aad47582d70bb5fb943195" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/recurser/jekyll-plugins&quot;&gt;Jekyll Plugins by Recursive Design&lt;/a&gt;: Plugins to generate Project pages from GitHub readmes, a Category page, and a Sitemap generator.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/recurser/jekyll-plugins&quot;&gt;재귀 적 디자인에 의한 Jekyll 플러그인&lt;/a&gt; : GitHub readmes, 카테고리 페이지 및 Sitemap 생성기에서 프로젝트 페이지를 생성하는 플러그인.</target>
        </trans-unit>
        <trans-unit id="103818a8c263007b17033be5f679caa1470085b3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/redwallhp/JekyllGalleryTag&quot;&gt;JekyllGalleryTag&lt;/a&gt; by &lt;a href=&quot;https://github.com/redwallhp&quot;&gt;redwallhp&lt;/a&gt;: Generates thumbnails from a directory of images and displays them in a grid.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/redwallhp/JekyllGalleryTag&quot;&gt;redwallhp&lt;/a&gt; 로 &lt;a href=&quot;https://github.com/redwallhp&quot;&gt;JekyllGalleryTag&lt;/a&gt; : 이미지의 디렉토리에서 썸네일을 생성하고 그리드에 표시합니다.</target>
        </trans-unit>
        <trans-unit id="63a0d2b1096974d8f20b39f9f49cf585b360d0dc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/rjoberon/bibsonomy-jekyll&quot;&gt;BibSonomy&lt;/a&gt;: Jekyll plugin to generate publication lists from &lt;a href=&quot;https://www.bibsonomy.org/&quot;&gt;BibSonomy&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/rjoberon/bibsonomy-jekyll&quot;&gt;BibSonomy는&lt;/a&gt; : 지킬에서 출판 목록을 생성하는 플러그인 &lt;a href=&quot;https://www.bibsonomy.org/&quot;&gt;BibSonomy을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fe5e8a7d569cd7e0008a2488a0f60aea3a12cc2e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/rob-murray/jekyll-twitter-plugin&quot;&gt;Jekyll Twitter Plugin&lt;/a&gt;: A Liquid tag plugin that renders Tweets from Twitter API. Currently supports the &lt;a href=&quot;https://dev.twitter.com/rest/reference/get/statuses/oembed&quot;&gt;oEmbed&lt;/a&gt; API.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/rob-murray/jekyll-twitter-plugin&quot;&gt;Jekyll Twitter 플러그인&lt;/a&gt; : Twitter API의 트윗을 렌더링하는 Liquid 태그 플러그인입니다. 현재 &lt;a href=&quot;https://dev.twitter.com/rest/reference/get/statuses/oembed&quot;&gt;oEmbed&lt;/a&gt; API를 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="69884be6423cd9ae89cef39f113b44da6057e3eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/rob-murray/jekyll-version-plugin&quot;&gt;Jekyll Project Version Tag&lt;/a&gt;: A Liquid tag plugin that renders a version identifier for your Jekyll site sourced from the git repository containing your code.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/rob-murray/jekyll-version-plugin&quot;&gt;Jekyll Project Version Tag&lt;/a&gt; : 코드가 포함 된 git 저장소에서 제공되는 Jekyll 사이트의 버전 식별자를 렌더링하는 Liquid 태그 플러그인입니다.</target>
        </trans-unit>
        <trans-unit id="2f7cdb144c4a9cb725c010c8e5b7b3a454730562" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/robb/jekyll-embedly-client&quot;&gt;Embed.ly client by Robert B&amp;ouml;hnke&lt;/a&gt;: Autogenerate embeds from URLs using oEmbed.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/robb/jekyll-embedly-client&quot;&gt;Robert B&amp;ouml;hnke의 Embed.ly 클라이언트&lt;/a&gt; : oEmbed를 사용하여 URL에서 포함을 자동 생성합니다.</target>
        </trans-unit>
        <trans-unit id="f1f6beb4be8cf2d119e465018ec354bb1bd48a7c" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/robcrocombe/jekyll-post&quot;&gt;Jekyll-Post&lt;/a&gt;: A CLI tool to easily draft, edit, and publish Jekyll posts.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/robcrocombe/jekyll-post&quot;&gt;Jekyll-Post&lt;/a&gt; : Jekyll 게시물을 쉽게 작성, 편집 및 게시 할 수있는 CLI 도구입니다.</target>
        </trans-unit>
        <trans-unit id="5e1c3b388b05cc77531a8c5ad3953106c1742f6f" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/robwierzbowski/generator-jekyllrb&quot;&gt;generator-jekyllrb&lt;/a&gt;: A generator that wraps Jekyll in &lt;a href=&quot;http://yeoman.io/&quot;&gt;Yeoman&lt;/a&gt;, a tool collection and workflow for building modern web apps.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/robwierzbowski/generator-jekyllrb&quot;&gt;generator-jekyllrb&lt;/a&gt; : 최신 웹 앱을 빌드하기위한 도구 모음 및 워크 플로우 인 &lt;a href=&quot;http://yeoman.io/&quot;&gt;Yeoman의&lt;/a&gt; Jekyll을 래핑하는 생성기입니다 .</target>
        </trans-unit>
        <trans-unit id="f18167bb50397a84980d8a3330910117f77b6c80" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/robwierzbowski/jekyll-image-tag&quot;&gt;Jekyll Image Tag&lt;/a&gt;: Better images for Jekyll. Save image presets, generate resized images, and add classes, alt text, and other attributes.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/robwierzbowski/jekyll-image-tag&quot;&gt;Jekyll 이미지 태그&lt;/a&gt; : Jekyll의 더 나은 이미지. 이미지 사전 설정을 저장하고 크기가 조정 된 이미지를 생성하며 클래스, 대체 텍스트 및 기타 속성을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="dc515976da83ff320a367ddb96d858589e7d46c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/robwierzbowski/jekyll-picture-tag&quot;&gt;Jekyll Picture Tag&lt;/a&gt;: Easy responsive images for Jekyll. Based on the proposed &lt;a href=&quot;https://html.spec.whatwg.org/multipage/embedded-content.html#the-picture-element&quot;&gt;&lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt;&lt;/a&gt; element, polyfilled with Scott Jehl&amp;rsquo;s &lt;a href=&quot;https://github.com/scottjehl/picturefill&quot;&gt;Picturefill&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/robwierzbowski/jekyll-picture-tag&quot;&gt;Jekyll Picture Tag&lt;/a&gt; : Jekyll의 반응 형 이미지. Scott Jehl의 &lt;a href=&quot;https://github.com/scottjehl/picturefill&quot;&gt;Picturefill으로&lt;/a&gt; 폴리 필 된 제안 된 &lt;a href=&quot;https://html.spec.whatwg.org/multipage/embedded-content.html#the-picture-element&quot;&gt; &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; &lt;/a&gt; 요소를 기반으로합니다 .</target>
        </trans-unit>
        <trans-unit id="9ece318cbe6df05cc92b5db9f16e6e656cd245de" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/rsim/blog.rayapps.com/blob/master/_plugins/pygments_cache_patch.rb&quot;&gt;Pygments Cache Path by Raimonds Simanovskis&lt;/a&gt;: Plugin to cache syntax-highlighted code from Pygments.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/rsim/blog.rayapps.com/blob/master/_plugins/pygments_cache_patch.rb&quot;&gt;Raimonds Simanovskis의 피그먼트 캐시 경로&lt;/a&gt; : 피그먼트에서 구문 강조된 코드를 캐시하는 플러그인.</target>
        </trans-unit>
        <trans-unit id="6697033bab910b0b478a4332c73fc9035da00ae9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/rustygeldmacher/jekyll-contentblocks&quot;&gt;Jekyll-contentblocks&lt;/a&gt;: Lets you use Rails-like content_for tags in your templates, for passing content from your posts up to your layouts.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/rustygeldmacher/jekyll-contentblocks&quot;&gt;Jekyll-contentblocks&lt;/a&gt; : 게시물에서 레이아웃으로 컨텐츠를 전달하기 위해 템플릿에 Rails와 같은 content_for 태그를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="340f9f627e3bfed94c049bdfb110e742e37e9231" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/samrayner/jekyll-asset-path-plugin&quot;&gt;Asset Path Tag&lt;/a&gt; by &lt;a href=&quot;http://www.samrayner.com/&quot;&gt;Sam Rayner&lt;/a&gt;: Allows organisation of assets into subdirectories by outputting a path for a given file relative to the current post or page.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/samrayner/jekyll-asset-path-plugin&quot;&gt;자산 경로 태그&lt;/a&gt; 에 의해 &lt;a href=&quot;http://www.samrayner.com/&quot;&gt;샘 레이너는&lt;/a&gt; : 현재 게시하거나 페이지에 주어진 파일의 상대 경로를 출력하여 하위 디렉토리에 자산의 조직을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71d144b9ea4e23a3a867053d7edcdf0b3ca730d9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/scottwb/jekyll-tweet-tag&quot;&gt;Tweet Tag by Scott W. Bradley&lt;/a&gt;: Liquid tag for &lt;a href=&quot;https://dev.twitter.com/docs/embedded-tweets&quot;&gt;Embedded Tweets&lt;/a&gt; using Twitter&amp;rsquo;s shortcodes.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/scottwb/jekyll-tweet-tag&quot;&gt;Scott W. Bradley의 Tweet 태그&lt;/a&gt; : Twitter의 단축 코드를 사용 하는 &lt;a href=&quot;https://dev.twitter.com/docs/embedded-tweets&quot;&gt;임베디드 트윗의&lt;/a&gt; 액체 태그 .</target>
        </trans-unit>
        <trans-unit id="21283a5e79ac75f308977a448ab602704da45d47" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sectore/jekyll-swfobject&quot;&gt;Jekyll-swfobject&lt;/a&gt;: Liquid plugin for embedding Adobe Flash files (.swf) using &lt;a href=&quot;https://github.com/swfobject/swfobject&quot;&gt;SWFObject&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sectore/jekyll-swfobject&quot;&gt;Jekyll-swfobject&lt;/a&gt; : &lt;a href=&quot;https://github.com/swfobject/swfobject&quot;&gt;SWFObject를&lt;/a&gt; 사용하여 Adobe Flash 파일 (.swf)을 포함하기위한 Liquid 플러그인 .</target>
        </trans-unit>
        <trans-unit id="6f062bd5f8fb0d88fc0c737c2db478228c1c6b60" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sheehamj13/jekyll-live-tiles&quot;&gt;Windows 8.1 Live Tile Generation by Matt Sheehan&lt;/a&gt;: Generates Internet Explorer 11 config.xml file and Tile Templates for pinning your site to Windows 8.1.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sheehamj13/jekyll-live-tiles&quot;&gt;Matt Sheehan의 Windows 8.1 Live Tile 생성&lt;/a&gt; : 사이트를 Windows 8.1에 고정하기위한 Internet Explorer 11 config.xml 파일 및 Tile 템플릿을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="aa1e1dce3de63f1c918428971c45d474d40363b4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sheehamj13/jekyll_ts&quot;&gt;Typescript Generator by Matt Sheehan&lt;/a&gt;: Generate Javascript on build from your Typescript.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sheehamj13/jekyll_ts&quot;&gt;Matt Sheehan의 Typescript Generator&lt;/a&gt; : Typescript에서 빌드시 Javascript를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="65d8103cfe3d8761c5709661ffd738d705847bd0" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/shigeya/jekyll-category-archive-plugin&quot;&gt;Category archive generator by Shigeya Suzuki&lt;/a&gt;: Generator and template which renders category archive like MovableType style, based on Monthly archive generator.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/shigeya/jekyll-category-archive-plugin&quot;&gt;Shigeya Suzuki의 카테고리 아카이브 생성기&lt;/a&gt; : 월별 아카이브 생성기를 기반으로 MovableType 스타일과 같은 카테고리 아카이브를 렌더링하는 생성기 및 템플릿.</target>
        </trans-unit>
        <trans-unit id="29d0d566e145c75648e0a13bb15c2e4b0ba7f7f1" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/shigeya/jekyll-monthly-archive-plugin&quot;&gt;Monthly archive generator by Shigeya Suzuki&lt;/a&gt;: Generator and template which renders monthly archive like MovableType style, based on the work by Ilkka Laukkanen and others above.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/shigeya/jekyll-monthly-archive-plugin&quot;&gt;Shigeya Suzuki의 월별 아카이브 생성기&lt;/a&gt; : Ilkka Laukkanen 및 기타의 작업을 기반으로 MovableType 스타일과 같은 월별 아카이브를 렌더링하는 생성기 및 템플릿.</target>
        </trans-unit>
        <trans-unit id="98f1311023a9e90f0ae6ec430d7181f59afcb538" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/slim-template/jekyll-slim&quot;&gt;Slim plugin&lt;/a&gt;: Slim converter and includes for Jekyll with support for Liquid tags.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/slim-template/jekyll-slim&quot;&gt;슬림 플러그인&lt;/a&gt; : 슬림 변환기이며 Liquid 태그를 지원하는 Jekyll에 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="6e7575d0d8eaae373d865bfbae9dbb34b38d22c7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/snaptortoise/jekyll-pinboard-plugin&quot;&gt;jekyll-pinboard&lt;/a&gt;: Access your Pinboard bookmarks within your Jekyll theme.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/snaptortoise/jekyll-pinboard-plugin&quot;&gt;jekyll-pinboard&lt;/a&gt; : Jekyll 테마 내에서 Pinboard 책갈피에 액세스하십시오.</target>
        </trans-unit>
        <trans-unit id="a7cc6aef4f5b1a0d1de011ad7e20ba2c2821bb84" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sondr3/generator-jekyllized&quot;&gt;generator-jekyllized&lt;/a&gt;: A Yeoman generator for rapidly developing sites with Gulp. Live reload your site, automatically minify and optimize your assets and much more.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sondr3/generator-jekyllized&quot;&gt;generator-jekyllized&lt;/a&gt; : Gulp로 사이트를 빠르게 개발하기위한 Yeoman 생성기. 사이트를 실시간으로 다시로드하고 자산 등을 자동으로 축소 및 최적화합니다.</target>
        </trans-unit>
        <trans-unit id="6ea96b46ee94745466b585fedc22df7699e0ce15" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sparanoid/match_regex&quot;&gt;match_regex&lt;/a&gt;: A Liquid filter to perform regex match.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sparanoid/match_regex&quot;&gt;match_regex&lt;/a&gt; : 정규식 일치를 수행하는 액체 필터.</target>
        </trans-unit>
        <trans-unit id="f1ecddd2a262791ac2719a6ef6f22204d62d3a0b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/sparanoid/replace_regex&quot;&gt;replace_regex&lt;/a&gt;: A Liquid filter to perform regex replace.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/sparanoid/replace_regex&quot;&gt;replace_regex&lt;/a&gt; : 정규식 교체를 수행하기위한 액체 필터.</target>
        </trans-unit>
        <trans-unit id="45974b30ba87547068acbe71116e0adf197da4b2" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/static-publisher/static-publisher&quot;&gt;Static Publisher&lt;/a&gt; is another automated deployment option with a server listening for webhook posts, though it&amp;rsquo;s not tied to GitHub specifically. It has a one-click deploy to Heroku, it can watch multiple projects from one server, it has an easy to user admin interface and can publish to either S3 or to a git repository (e.g. gh-pages).</source>
          <target state="translated">&lt;a href=&quot;https://github.com/static-publisher/static-publisher&quot;&gt;Static Publisher&lt;/a&gt; 는 서버가 웹 후크 게시물을 수신 대기하는 또 다른 자동 배포 옵션이지만 GitHub와 특별히 관련이 없습니다. 한 번의 클릭으로 Heroku에 배포 할 수 있고, 한 서버에서 여러 프로젝트를 볼 수 있으며, 사용자 관리 인터페이스가 쉽고 S3 또는 git 저장소 (예 : gh-pages)에 게시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51e127c492441e669febf593c5d1bfc44b3f397b" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/takuti/jekyll-lazy-tweet-embedding&quot;&gt;Lazy Tweet Embedding&lt;/a&gt;: Automatically convert tweet urls into twitter cards.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/takuti/jekyll-lazy-tweet-embedding&quot;&gt;Lazy Tweet Embedding&lt;/a&gt; : 트위터 URL을 트위터 카드로 자동 변환합니다.</target>
        </trans-unit>
        <trans-unit id="240300fe830a6290f03c562910dc5ee398074680" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tkareine/jekyll-minibundle&quot;&gt;Jekyll-minibundle&lt;/a&gt;: Asset bundling and cache busting using external minification tool of your choice. No gem dependencies.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tkareine/jekyll-minibundle&quot;&gt;Jekyll-minibundle&lt;/a&gt; : 선택한 외부 축소 도구를 사용하여 자산 번들링 및 캐시 버스 팅. 보석 의존성이 없습니다.</target>
        </trans-unit>
        <trans-unit id="5bbf69dcf7798ad80030cd487377669ee701bad3" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tmthrgd/ditaa-ditaa&quot;&gt;ditaa-ditaa&lt;/a&gt; by Tom Thorogood: a drastic revision of jekyll-ditaa that renders diagrams drawn using ASCII art into PNG images.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tmthrgd/ditaa-ditaa&quot;&gt;ditaa-ditaa&lt;/a&gt; 톰 Thorogood의 : PNG 이미지로 ASCII 아트를 사용하여 그린 그림을 렌더링 지킬-ditaa의 대폭 개정.</target>
        </trans-unit>
        <trans-unit id="d03a3d2892739989cc9c526ec3960b20f6c65dab" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tmthrgd/jekyll-plugins&quot;&gt;mathml.rb&lt;/a&gt; by Tom Thorogood: A plugin to convert TeX mathematics into MathML for display.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tmthrgd/jekyll-plugins&quot;&gt;&lt;/a&gt;Tom Thorogood의 mathml.rb : TeX 수학을 표시하기 위해 MathML로 변환하는 플러그인.</target>
        </trans-unit>
        <trans-unit id="f8654415dc7eb338e37130ca3c5e247a454ce54a" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tnhu/jekyll-include-absolute-plugin&quot;&gt;jekyll-include-absolute-plugin&lt;/a&gt; by &lt;a href=&quot;https://github.com/tnhu&quot;&gt;Tan Nhu&lt;/a&gt;: A Jekyll plugin to include a file from its path relative to Jekyll&amp;rsquo;s source folder.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tnhu/jekyll-include-absolute-plugin&quot;&gt;jekyll-include-absolute-plugin&lt;/a&gt; by &lt;a href=&quot;https://github.com/tnhu&quot;&gt;Tan Nhu&lt;/a&gt; : Jekyll의 소스 폴더를 기준으로 경로에서 파일을 포함하는 Jekyll 플러그인.</target>
        </trans-unit>
        <trans-unit id="abcc9a9df4bedfd91eafcd7f492b232a28291226" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/toshimaru/jekyll-tagging-related_posts&quot;&gt;jekyll-tagging-related_posts&lt;/a&gt;: Jekyll related_posts function based on tags (works on Jekyll3).</source>
          <target state="translated">&lt;a href=&quot;https://github.com/toshimaru/jekyll-tagging-related_posts&quot;&gt;jekyll-tagging-related_posts&lt;/a&gt; : Jekyll related_posts는 태그 (Jekyll3에서 작동)를 기반으로 기능합니다.</target>
        </trans-unit>
        <trans-unit id="fdce13f7b3c3d7cd3189a3b86dab44bf4be346e8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/toshimaru/jekyll-toc&quot;&gt;jekyll-toc&lt;/a&gt;: A liquid filter plugin for Jekyll which generates a table of contents.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/toshimaru/jekyll-toc&quot;&gt;jekyll-toc&lt;/a&gt; : 목차 를 생성하는 Jekyll 용 액체 필터 플러그인.</target>
        </trans-unit>
        <trans-unit id="021fdc297256415e2a35f90baa9c47b12ebcc3d6" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tsmango/jekyll_alias_generator&quot;&gt;AliasGenerator by Thomas Mango&lt;/a&gt;: Generates redirect pages for posts when an alias is specified in the YAML Front Matter.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tsmango/jekyll_alias_generator&quot;&gt;Thomas Mango의 AliasGenerator&lt;/a&gt; : YAML Front Matter에 별명이 지정된 경우 게시물에 대한 리디렉션 페이지를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="4a7f9e83dd279fe9b6ebea66650d4eda731c8247" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/tsmango/jekyll_flickr_set_tag&quot;&gt;FlickrSetTag by Thomas Mango&lt;/a&gt;: Generates image galleries from Flickr sets.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/tsmango/jekyll_flickr_set_tag&quot;&gt;Thomas Mango의 FlickrSetTag&lt;/a&gt; : Flickr 세트에서 이미지 갤러리를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="03f19784d89aec76059e8f1145971783ca623ee4" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vwochnik/jekyll-autoprefixer&quot;&gt;Jekyll Autoprefixer&lt;/a&gt;: Autoprefixer integration for Jekyll</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vwochnik/jekyll-autoprefixer&quot;&gt;Jekyll Autoprefixer&lt;/a&gt; : Jekyll을 위한 Autoprefixer 통합</target>
        </trans-unit>
        <trans-unit id="be8810a6eefeee6c5ad5f20b75c845e701d7bd7e" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vwochnik/jekyll-deploy&quot;&gt;Jekyll Deploy&lt;/a&gt;: Adds a &lt;code&gt;deploy&lt;/code&gt; sub-command to Jekyll.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vwochnik/jekyll-deploy&quot;&gt;Jekyll Deploy&lt;/a&gt; : Jekyll 에 &lt;code&gt;deploy&lt;/code&gt; 하위 명령을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="f5f5e2887b17cb8c615cd930d6c27516ad2dbeb9" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vwochnik/jekyll-email-protect&quot;&gt;Jekyll Email Protect&lt;/a&gt;: Email protection liquid filter for Jekyll</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vwochnik/jekyll-email-protect&quot;&gt;Jekyll Email Protect&lt;/a&gt; : Jekyll의 전자 메일 보호 액체 필터</target>
        </trans-unit>
        <trans-unit id="5e9dc3d1d6d9575be9ad200446520903e6e3cc01" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/vwochnik/jekyll-language-plugin&quot;&gt;Jekyll Language Plugin&lt;/a&gt;: Jekyll 3.0-compatible multi-language plugin for posts, pages and includes.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/vwochnik/jekyll-language-plugin&quot;&gt;Jekyll 언어 플러그인&lt;/a&gt; : 게시물, 페이지 및 포함을위한 Jekyll 3.0 호환 다중 언어 플러그인.</target>
        </trans-unit>
        <trans-unit id="c597248ffc927f406eddb7051d6a4ac7a8e64607" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/wdenton/jekyll-co2&quot;&gt;Jekyll CO₂&lt;/a&gt;: Generates HTML showing the monthly change in atmospheric CO₂ at the Mauna Loa observatory in Hawaii.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/wdenton/jekyll-co2&quot;&gt;Jekyll CO₂&lt;/a&gt; : 하와이의 Mauna Loa 천문대에서 대기 CO₂의 월간 변화를 보여주는 HTML을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="1e74bc2b32914a6546c79e35cba2fded848cd9eb" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/webchef/jekyll-umlauts&quot;&gt;Jekyll-Umlauts by Arne Gockeln&lt;/a&gt;: This generator replaces all german umlauts (&amp;auml;&amp;ouml;&amp;uuml;&amp;szlig;) case sensitive with html.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/webchef/jekyll-umlauts&quot;&gt;Arne Gockeln의 Jekyll-Umlauts&lt;/a&gt; :이 생성기는 모든 독일어 움라우트 (&amp;auml;&amp;ouml;&amp;uuml;&amp;szlig;) 대소 문자를 html로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="5a8bf1811a952018a9dcb7d97a6c0bc68a0c1d19" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/wildlyinaccurate/jekyll-responsive-image&quot;&gt;Jekyll Responsive Image&lt;/a&gt;: Responsive images for Jekyll. Automatically resizes images, supports all responsive methods (&lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt;, &lt;code&gt;srcset&lt;/code&gt;, Imager.js, etc), super-flexible configuration.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/wildlyinaccurate/jekyll-responsive-image&quot;&gt;Jekyll 반응 형 이미지&lt;/a&gt; : Jekyll에 대한 반응 형 이미지 . 이미지 크기를 자동으로 조정하고 모든 반응 형 방법 ( &lt;code&gt;&amp;lt;picture&amp;gt;&lt;/code&gt; , &lt;code&gt;srcset&lt;/code&gt; , Imager.js 등), 매우 유연한 구성을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="f117672285861d8df96ee38a9057cf64aa6b0aea" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/xdissent/jekyll-rst&quot;&gt;ReStructuredText Converter&lt;/a&gt;: Converts ReST documents to HTML with Pygments syntax highlighting.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/xdissent/jekyll-rst&quot;&gt;ReStructuredText Converter&lt;/a&gt; : 피그먼트 구문 강조 표시를 사용하여 ReST 문서를 HTML로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="0b5ffc5b89b92b2648d41c91dbe6b12ac0a07d24" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://github.com/yihangho/emoji-for-jekyll&quot;&gt;Emoji for Jekyll&lt;/a&gt;: Seamlessly enable emoji for all posts and pages.</source>
          <target state="translated">&lt;a href=&quot;https://github.com/yihangho/emoji-for-jekyll&quot;&gt;Jekyll 용 이모티콘&lt;/a&gt; : 모든 게시물과 페이지에 이모티콘을 완벽하게 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="70679694313cb0ce339f1e1f786db4d19a44b453" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://nhoizey.github.io/jekyll-cloudinary/&quot;&gt;Jekyll Cloudinary&lt;/a&gt; by &lt;a href=&quot;https://nicolas-hoizey.com/&quot;&gt;Nicolas Hoizey&lt;/a&gt;: a Jekyll plugin adding a Liquid tag to ease the use of Cloudinary for responsive images in your Markdown/Kramdown posts.</source>
          <target state="translated">&lt;a href=&quot;https://nhoizey.github.io/jekyll-cloudinary/&quot;&gt;Jekyll Cloudinary&lt;/a&gt; by &lt;a href=&quot;https://nicolas-hoizey.com/&quot;&gt;Nicolas Hoizey&lt;/a&gt; : 마크 다운 / 크램 다운 게시물의 반응 형 이미지에 Cloudinary를 쉽게 사용할 수 있도록 Liquid 태그를 추가하는 Jekyll 플러그인.</target>
        </trans-unit>
        <trans-unit id="4f43d8961b970503b279adf5f82c7968ab64ccfa" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt; are public web pages for users, organizations, and repositories, that are freely hosted on GitHub&amp;rsquo;s &lt;code&gt;github.io&lt;/code&gt; domain or on a custom domain name of your choice. GitHub Pages are powered by Jekyll behind the scenes, so they&amp;rsquo;re a great way to host your Jekyll-powered website for free.</source>
          <target state="translated">&lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub 페이지&lt;/a&gt; 는 GitHub의 &lt;code&gt;github.io&lt;/code&gt; 도메인 또는 선택한 사용자 정의 도메인 이름에 자유롭게 호스팅되는 사용자, 조직 및 저장소를위한 공개 웹 페이지입니다 . GitHub Pages는 Jekyll에 의해 뒷받침되어 제공되므로 Jekyll 기반 웹 사이트를 무료로 호스팅 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="697b71fe44cbfbc872cc532379b684fbc91bad89" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; is powered by Jekyll. However, all Pages sites are generated using the &lt;code&gt;--safe&lt;/code&gt; option to disable custom plugins for security reasons. Unfortunately, this means your plugins won&amp;rsquo;t work if you&amp;rsquo;re deploying to GitHub Pages.</source>
          <target state="translated">&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub 페이지&lt;/a&gt; 는 Jekyll에서 제공합니다. 그러나 모든 페이지 사이트는 &lt;code&gt;--safe&lt;/code&gt; 옵션을 사용 하여 생성 되어 보안상의 이유로 사용자 정의 플러그인을 비활성화합니다. 불행히도 GitHub 페이지에 배포하면 플러그인이 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dc9f236f66a255efd329f3ab00054f43a043fc87" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rubygems.org/gems/jekyll-money&quot;&gt;Jekyll Money&lt;/a&gt;: A Jekyll plugin for dealing with money. Because we all have to at some point.</source>
          <target state="translated">&lt;a href=&quot;https://rubygems.org/gems/jekyll-money&quot;&gt;Jekyll Money&lt;/a&gt; : 돈 을 처리하기위한 Jekyll 플러그인. 우리 모두는 어느 시점에 있어야하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="89e0dcc4bddff5fbe893937a28bbd114b3f37d25" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt; (which you can check by running &lt;code&gt;gem -v&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt; ( &lt;code&gt;gem -v&lt;/code&gt; 를 실행하여 확인할 수 있음 )</target>
        </trans-unit>
        <trans-unit id="8a59d7d8406418456045f794df89aec5a3ef84a7" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://rubyinstaller.org/&quot;&gt;RubyInstaller&lt;/a&gt; is a self-contained Windows-based installer that includes the Ruby language, an execution environment, important documentation, and more.</source>
          <target state="translated">&lt;a href=&quot;https://rubyinstaller.org/&quot;&gt;RubyInstaller&lt;/a&gt; 는 Ruby 언어, 실행 환경, 중요 문서 등을 포함하는 자체 포함 된 Windows 기반 설치 프로그램입니다.</target>
        </trans-unit>
        <trans-unit id="c669bbc4368895d9aefef7eb038fe87e56b5ccdd" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://snipcart.com/blog/static-site-e-commerce-part-2-integrating-snipcart-with-jekyll&quot;&gt;Snipcart&lt;/a&gt;: Add a shopping cart to a Jekyll site</source>
          <target state="translated">&lt;a href=&quot;https://snipcart.com/blog/static-site-e-commerce-part-2-integrating-snipcart-with-jekyll&quot;&gt;Snipcart&lt;/a&gt; : Jekyll 사이트에 장바구니 추가</target>
        </trans-unit>
        <trans-unit id="5fe7f0962ae6ebf7756ff29c2ba2f261dbbcd5cc" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://staticman.net&quot;&gt;Staticman&lt;/a&gt;: Add user-generated content to a Jekyll site (free and open source)</source>
          <target state="translated">&lt;a href=&quot;https://staticman.net&quot;&gt;Staticman&lt;/a&gt; : 사용자 생성 컨텐츠를 Jekyll 사이트에 추가 (무료 및 오픈 소스)</target>
        </trans-unit>
        <trans-unit id="683dc140c350985e19c039a347ade5ea2e49239d" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://wordpress.org/plugins/wp2jekyll/&quot;&gt;WordPress2Jekyll&lt;/a&gt;: A WordPress plugin that allows you to use WordPress as your editor and (automatically) export content in to Jekyll. WordPress2Jekyll attempts to marry these two systems together in order to make a site that can be easily managed from all devices.</source>
          <target state="translated">&lt;a href=&quot;https://wordpress.org/plugins/wp2jekyll/&quot;&gt;WordPress2Jekyll&lt;/a&gt; : WordPress를 편집기로 사용하고 컨텐츠를 (자동으로) Jekyll로 내보낼 수있는 WordPress 플러그인입니다. WordPress2Jekyll은 모든 장치에서 쉽게 관리 할 수있는 사이트를 만들기 위해이 두 시스템을 결합하려고합니다.</target>
        </trans-unit>
        <trans-unit id="b5a04da202a37bcd930c02dde15236821f13c2b8" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.aerobatic.com&quot;&gt;Aerobatic&lt;/a&gt; has custom domains, global CDN distribution, basic auth, CORS proxying, and a growing list of plugins all included.</source>
          <target state="translated">&lt;a href=&quot;https://www.aerobatic.com&quot;&gt;곡예 비행&lt;/a&gt; 에는 사용자 정의 도메인, 글로벌 CDN 배포, 기본 인증, CORS 프록시 및 점점 더 많은 플러그인 목록이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="77a9701da30a8e5101eefef30ff97326ce329750" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.contentful.com/ecosystem/jekyll/&quot;&gt;Contentful&lt;/a&gt;: use Jekyll together with the API-driven Contentful CMS.</source>
          <target state="translated">&lt;a href=&quot;https://www.contentful.com/ecosystem/jekyll/&quot;&gt;Contentful&lt;/a&gt; : Jekyll을 API 중심 Contentful CMS와 함께 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ddbe53748efad99faa6c72c2b27081ae87860579" translate="yes" xml:space="preserve">
          <source>&lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt; version 2.2.5 or above, including all development headers (ruby installation can be checked by running &lt;code&gt;ruby -v&lt;/code&gt;, development headers can be checked on Ubuntu by running &lt;code&gt;apt list --installed  ruby-dev&lt;/code&gt;)</source>
          <target state="translated">&lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;&lt;/a&gt;모든 개발 헤더를 포함한 루비 버전 2.2.5 이상 (루비 설치는 &lt;code&gt;ruby -v&lt;/code&gt; 를 실행하여 확인 가능 , 개발 헤더는 &lt;code&gt;apt list --installed ruby-dev&lt;/code&gt; 실행하여 우분투에서 확인 가능 )</target>
        </trans-unit>
        <trans-unit id="0d9a68fcf39b39fba0557ef2f3d0951d8aef19f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;folder&amp;gt;&lt;/code&gt; &amp;mdash; The name of the local output folder (defaults to &lt;code&gt;_site&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;&amp;lt;folder&amp;gt;&lt;/code&gt; &amp;mdash; 로컬 출력 폴더의 이름 (기본값은 &lt;code&gt;_site&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="6556336d58722d64f35a7d4e93d22c3e7390214c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;folder&amp;gt;&lt;/code&gt; is the path to your site. E.g., &lt;code&gt;~/public_html/you.org/blog-html/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;&amp;lt;folder&amp;gt;&lt;/code&gt; 는 사이트의 경로입니다. 예, &lt;code&gt;~/public_html/you.org/blog-html/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8ba0115313d93be4cccfe155483cee8f0d7c5dcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;site&amp;gt;&lt;/code&gt; &amp;mdash; Your hosting server</source>
          <target state="translated">&lt;code&gt;&amp;lt;site&amp;gt;&lt;/code&gt; &amp;mdash; 호스팅 서버</target>
        </trans-unit>
        <trans-unit id="a1f8b98fe85103454b68ef3fc74a4c6cfe6bd6ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; &amp;mdash; The username for your hosting account</source>
          <target state="translated">&lt;code&gt;&amp;lt;user&amp;gt;&lt;/code&gt; &amp;mdash; 호스팅 계정의 사용자 이름</target>
        </trans-unit>
        <trans-unit id="8f92f9b5a22f787c54bfaeed8322de14386b9d92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--auto&lt;/code&gt; (now &lt;code&gt;--watch&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;--auto&lt;/code&gt; (현재 &lt;code&gt;--watch&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="42417e95c2d88443649e546b6e6f970c832afc11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--maruku&lt;/code&gt;, &lt;code&gt;--rdiscount&lt;/code&gt;, and &lt;code&gt;--redcarpet&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;--maruku&lt;/code&gt; , &lt;code&gt;--rdiscount&lt;/code&gt; 및 &lt;code&gt;--redcarpet&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="895fdf5ad22f9982b87fd44b47d1dab7a6b187ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--no-auto&lt;/code&gt; (now &lt;code&gt;--no-watch&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;--no-auto&lt;/code&gt; (현재 &lt;code&gt;--no-watch&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="52f6116b45fe2f40a4c8160e22641cba168acc7b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;--rsh=ssh -p2222&lt;/code&gt; &amp;mdash; The port for SSH access. It is required if your host uses a different port than the default (e.g, HostGator)</source>
          <target state="translated">&lt;code&gt;--rsh=ssh -p2222&lt;/code&gt; &amp;mdash; SSH 액세스를위한 포트입니다. 호스트가 기본값과 다른 포트를 사용하는 경우 필요합니다 (예 : HostGator)</target>
        </trans-unit>
        <trans-unit id="a463d36de2debf46e034a83140e7f65baec165a0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_data/people.yml&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;_data/people.yml&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="94cd5337be17886e32cbf55ed25ddfa7e3ec51f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;_plugins&lt;/code&gt;, &lt;code&gt;_config.yml&lt;/code&gt; and &lt;code&gt;Gemfile&lt;/code&gt; can be used simultaneously</source>
          <target state="translated">&lt;code&gt;_plugins&lt;/code&gt; , &lt;code&gt;_config.yml&lt;/code&gt; 및 &lt;code&gt;Gemfile&lt;/code&gt; 을 동시에 사용할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="8a872db4bb5d71e82571da522176a452561fe303" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ascii&lt;/code&gt;: spaces, non-alphanumeric, and non-ASCII characters</source>
          <target state="translated">&lt;code&gt;ascii&lt;/code&gt; : 공백, 영숫자 및 비 ASCII 문자</target>
        </trans-unit>
        <trans-unit id="ca401db0aa95d64d298f7247d85e016414ee2a52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;bundler&lt;/code&gt; is a gem that manages other Ruby gems. It makes sure your gems and gem versions are compatible, and that you have all necessary dependencies each gem requires.</source>
          <target state="translated">&lt;code&gt;bundler&lt;/code&gt; 는 다른 Ruby gem을 관리하는 gem입니다. gem과 gem 버전이 호환되고 각 gem에 필요한 모든 종속성이 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9c55005ce71276d94385264fab1ec77995d47608" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;choco install ruby2.devkit&lt;/code&gt; - &lt;em&gt;needed for compilation of json gem&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;choco install ruby2.devkit&lt;/code&gt; - &lt;em&gt;json gem 컴파일에 필요&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a3d29c191d12881a7d90b18c0b4c73ee6ed489ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collection[0]&lt;/code&gt; becomes &lt;code&gt;collection.label&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;collection[0]&lt;/code&gt; 은 &lt;code&gt;collection.label&lt;/code&gt; 이됩니다.</target>
        </trans-unit>
        <trans-unit id="a61c194f2ff27ff34c635951213384b2c1318ff2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;collection[1]&lt;/code&gt; becomes &lt;code&gt;collection&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;collection[1]&lt;/code&gt; 이 &lt;code&gt;collection&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="878a13ae3ab0f9d4fdc414da2e9a433d47a33ec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;date&lt;/code&gt; is the same as &lt;code&gt;:categories/:year/:month/:day/:title.html&lt;/code&gt;, the default. See &lt;a href=&quot;#builtinpermalinkstyles&quot;&gt;Built-in Permalink Styles&lt;/a&gt; below for more options.</source>
          <target state="translated">&lt;code&gt;date&lt;/code&gt; 는 기본값 인 &lt;code&gt;:categories/:year/:month/:day/:title.html&lt;/code&gt; 과 같습니다 . 자세한 옵션은 아래의 &lt;a href=&quot;#builtinpermalinkstyles&quot;&gt;내장 퍼머 링크 스타일을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3664e4236cc6a2a04be1dcd0ef7c43baf0d48a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;default&lt;/code&gt;: spaces and non-alphanumeric characters</source>
          <target state="translated">&lt;code&gt;default&lt;/code&gt; : 공백 및 영숫자가 아닌 문자</target>
        </trans-unit>
        <trans-unit id="ffa62ab778c47822c753b478d3761ac666b3ea43" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;gem install jekyll bundler&lt;/code&gt; installs the &lt;a href=&quot;https://rubygems.org/gems/jekyll/&quot;&gt;jekyll&lt;/a&gt; and &lt;a href=&quot;https://rubygems.org/gems/bundler&quot;&gt;bundler&lt;/a&gt; gems through &lt;a href=&quot;https://rubygems.org/&quot;&gt;RubyGems&lt;/a&gt;. You need only to install the gems one time &amp;mdash; not every time you create a new Jekyll project. Here are some additional details:</source>
          <target state="translated">&lt;code&gt;gem install jekyll bundler&lt;/code&gt; 는 &lt;a href=&quot;https://rubygems.org/&quot;&gt;RubyGems를&lt;/a&gt; 통해 &lt;a href=&quot;https://rubygems.org/gems/jekyll/&quot;&gt;jekyll&lt;/a&gt; 및 &lt;a href=&quot;https://rubygems.org/gems/bundler&quot;&gt;bundler&lt;/a&gt; gem을 설치합니다 . 새로운 Jekyll 프로젝트를 만들 때마다가 아니라 gem을 한 번만 설치하면됩니다. 추가 세부 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7906f3ac0efad500d709d814a299b61fde9eaf48" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;index.html&lt;/code&gt; or &lt;code&gt;index.md&lt;/code&gt; and other HTML, Markdown, Textile files</source>
          <target state="translated">&lt;code&gt;index.html&lt;/code&gt; 또는 &lt;code&gt;index.md&lt;/code&gt; 및 기타 HTML, 마크 다운, 섬유 파일</target>
        </trans-unit>
        <trans-unit id="2f51b22fdf361af1302a6d255eff845451f320be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; installs a new Jekyll site at the path specified (relative to current directory). In this case, Jekyll will be installed in a directory called &lt;code&gt;myblog&lt;/code&gt;. Here are some additional details:</source>
          <target state="translated">&lt;code&gt;jekyll new &amp;lt;PATH&amp;gt;&lt;/code&gt; 는 지정된 경로 (현재 디렉토리를 기준으로)에 새로운 Jekyll 사이트를 설치합니다. 이 경우 Jekyll은 &lt;code&gt;myblog&lt;/code&gt; 디렉토리에 설치됩니다 . 추가 세부 사항은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cce87f165b259801b5106ed5106a023af07cadcb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;jekyll new&lt;/code&gt; automatically initiates &lt;code&gt;bundle install&lt;/code&gt; to install the dependencies required. (If you don&amp;rsquo;t want Bundler to install the gems, use &lt;code&gt;jekyll new myblog --skip-bundle&lt;/code&gt;.)</source>
          <target state="translated">&lt;code&gt;jekyll new&lt;/code&gt; 는 자동으로 &lt;code&gt;bundle install&lt;/code&gt; 를 시작 하여 필요한 종속성을 설치합니다. (Bundler가 gem을 설치하지 못하게하려면 &lt;code&gt;jekyll new myblog --skip-bundle&lt;/code&gt; 을 사용하십시오 .)</target>
        </trans-unit>
        <trans-unit id="9a1e667f131c39c72078b349ff865e5e3a46f555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;latin&lt;/code&gt;: like &lt;code&gt;default&lt;/code&gt;, except Latin characters are first transliterated (e.g. &lt;code&gt;&amp;agrave;&amp;egrave;&amp;iuml;&amp;ograve;&amp;uuml;&lt;/code&gt; to &lt;code&gt;aeiou&lt;/code&gt;)3.7.0</source>
          <target state="translated">&lt;code&gt;latin&lt;/code&gt; : 라틴 문자가 먼저 음역되는 경우를 제외하고 &lt;code&gt;default&lt;/code&gt; 과 유사합니다 (예 : &lt;code&gt;&amp;agrave;&amp;egrave;&amp;iuml;&amp;ograve;&amp;uuml;&lt;/code&gt; 에서 &lt;code&gt;aeiou&lt;/code&gt; 로 ) 3.7.0</target>
        </trans-unit>
        <trans-unit id="18e2da18cc87634b69a4ffb1b3ca83365b0cbe8b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;lax&lt;/code&gt; &amp;mdash; Ignore all errors.</source>
          <target state="translated">&lt;code&gt;lax&lt;/code&gt; &amp;mdash; 모든 오류를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="57acbf4e59c9acd18f2ef3730062f8ef71208fdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;no_fenced_code_blocks&lt;/code&gt; &amp;mdash; By default, Jekyll sets the &lt;code&gt;fenced_code_blocks&lt;/code&gt; extension (for delimiting code blocks with triple tildes or triple backticks) to &lt;code&gt;true&lt;/code&gt;, probably because GitHub&amp;rsquo;s eager adoption of them is starting to make them inescapable. Redcarpet&amp;rsquo;s normal &lt;code&gt;fenced_code_blocks&lt;/code&gt; extension is inert when used with Jekyll; instead, you can use this inverted version of the extension for disabling fenced code.</source>
          <target state="translated">&lt;code&gt;no_fenced_code_blocks&lt;/code&gt; &amp;mdash; Jekyll은 기본적으로 &lt;code&gt;fenced_code_blocks&lt;/code&gt; 확장명 (삼중 물결표 또는 삼중 백틱으로 코드 블록을 구분하는 &lt;code&gt;true&lt;/code&gt; )을 true 로 설정합니다. Jekyll과 함께 사용하면 Redcarpet의 일반 &lt;code&gt;fenced_code_blocks&lt;/code&gt; 확장이 비활성입니다. 대신 분리 된 코드 확장을 사용하여 분리 된 코드를 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="668033d8b36380e9aede42b2f2a418609aab618c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;none&lt;/code&gt;: no characters</source>
          <target state="translated">&lt;code&gt;none&lt;/code&gt; : 문자 없음</target>
        </trans-unit>
        <trans-unit id="5d912b2b736df20b799ef88c466b0cc9ec5831ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;permalink: pretty&lt;/code&gt; Same as &lt;code&gt;permalink: /:collection/:path/&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;permalink: pretty&lt;/code&gt; &lt;code&gt;permalink: /:collection/:path/&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="95138d14b60f54a4303d5ddd21c95f350bc09898" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;pretty&lt;/code&gt;: spaces and non-alphanumeric characters except for &lt;code&gt;._~!$&amp;amp;'()+,;=@&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;pretty&lt;/code&gt; : 공백과 영숫자가 아닌 문자 &lt;code&gt;._~!$&amp;amp;'()+,;=@&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0964e724b6e75c3e1ae374465dd0abd37f5ce7e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;raw&lt;/code&gt;: spaces</source>
          <target state="translated">&lt;code&gt;raw&lt;/code&gt; : 공백</target>
        </trans-unit>
        <trans-unit id="faa590e1c4e27dafae5d2eb1397ce8fdbc87faae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;smart&lt;/code&gt; &amp;mdash; This pseudo-extension turns on SmartyPants, which converts straight quotes to curly quotes and runs of hyphens to em (&lt;code&gt;---&lt;/code&gt;) and en (&lt;code&gt;--&lt;/code&gt;) dashes.</source>
          <target state="translated">&lt;code&gt;smart&lt;/code&gt; &amp;mdash;이 의사 확장은 SmartyPants를 켭니다. SmartyPants는 직선 따옴표를 중괄호로 바꾸고 하이픈을 em ( &lt;code&gt;---&lt;/code&gt; ) 및 en ( &lt;code&gt;--&lt;/code&gt; ) 대시로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="13cceb404086c52cf90c4c346620eb459cbf0eed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;strict&lt;/code&gt; &amp;mdash; Output an error message and stop the build.</source>
          <target state="translated">&lt;code&gt;strict&lt;/code&gt; &amp;mdash; 오류 메시지를 출력하고 빌드를 중지합니다.</target>
        </trans-unit>
        <trans-unit id="e586eefc19c270b61a1a1f32e0fac239c7beba0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;warn&lt;/code&gt; &amp;mdash; Output a warning on the console for each error.</source>
          <target state="translated">&lt;code&gt;warn&lt;/code&gt; &amp;mdash; 콘솔에서 각 오류에 대한 경고를 출력합니다.</target>
        </trans-unit>
        <trans-unit id="16a51d649a6324ce1e120325783a286a55cdbe1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{ site.members | where_exp:&quot;item&quot;,
&quot;item.graduation_year == 2014&quot; }}&lt;/code&gt;&lt;code&gt;{{ site.members | where_exp:&quot;item&quot;,
&quot;item.graduation_year &amp;lt; 2014&quot; }}&lt;/code&gt;&lt;code&gt;{{ site.members | where_exp:&quot;item&quot;,
&quot;item.projects contains 'foo'&quot; }}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{{ site.members | where_exp:&quot;item&quot;, &quot;item.graduation_year == 2014&quot; }}&lt;/code&gt; &lt;code&gt;{{ site.members | where_exp:&quot;item&quot;, &quot;item.graduation_year &amp;lt; 2014&quot; }}&lt;/code&gt; &lt;code&gt;{{ site.members | where_exp:&quot;item&quot;, &quot;item.projects contains 'foo'&quot; }}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="d1460ea4613a47e3440a08c8297cee728e9c2239" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;{{ some_scss | scssify }}&lt;/code&gt;&lt;code&gt;{{ some_sass | sassify }}&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;{{ some_scss | scssify }}&lt;/code&gt; &lt;code&gt;{{ some_sass | sassify }}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26884c30ad4fadb9edd70d3bc53e6f814ed0362f" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Did we miss something? Please click &amp;ldquo;Improve this page&amp;rdquo; above and add a section. Thanks!&lt;/em&gt;</source>
          <target state="translated">&lt;em&gt;우리가 뭔가를 그리워 했습니까? 위의&amp;ldquo;이 페이지 개선&amp;rdquo;을 클릭하고 섹션을 추가하십시오. 감사!&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="9975f1a15d9f2c70715b48b85141be147c514346" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;Note:&lt;/em&gt; You must have &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/about&quot;&gt;Bash on Ubuntu on Windows&lt;/a&gt; enabled.</source>
          <target state="translated">&lt;em&gt;참고 : &lt;/em&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/about&quot;&gt;Windows의 Ubuntu에서 Bash가&lt;/a&gt; 활성화 되어 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="e34569fcc2028133daf24d4e8fa05dd46a10583e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Absolute URL&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;절대 URL&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aedb7d91fe407d461d32d7e6139ddbe756ccc676" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;And that&amp;rsquo;s it!&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;그리고 그게 다야!&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c89969b6e523f64d077befbddb224282c5ef8046" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array Filters&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;배열 필터&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d209e15889b53ca8b3d2c46f5f3b238bd49089ac" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Array to Sentence&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;문장을 배열&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="722c20e5a8ae16a2db840b3c7aeed71625854536" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Base URL&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;기본 URL&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d80bc47bc7f4aa0f000f774ba46ac617371e5bf2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;CGI Escape&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;CGI 탈출&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5736d9e43ff84bc86ab9b13beb128683c21c4d89" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Configuration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Configuration&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="9e594482dd9e7d5a481a78c02dcbf26e227d0968" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Converting Sass/SCSS&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Sass / SCSS 변환&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d99ea1df1ed50e82493a61e01be9025298489b7d" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Data To JSON&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;JSON으로 데이터&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3d0e2f154164d971ef8cbd325c3a2316b8aada76" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Date to Long String&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;긴 문자열 날짜&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4c2adf7edb223c1cdedbca9a5baf799f2d6637e2" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Date to RFC-822 Format&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;RFC-822 형식으로 날짜&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e2b084b828df4fd611bbbca4021ae4f0117c74ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Date to String&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;문자열 날짜&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="8a532e678f67998a12cf87fb1ced3c541ee62c7a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Date to XML Schema&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;XML 스키마 날짜&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="91fcc221b614f10d84fff91092b7b9691dd89738" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Default&lt;/strong&gt; Same as &lt;code&gt;permalink: /:collection/:path&lt;/code&gt;.</source>
          <target state="translated">&lt;strong&gt;기본&lt;/strong&gt; 과 동일 &lt;code&gt;permalink: /:collection/:path&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8a48981571525bfab38a653f8703cb636b612215" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Defaults&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Defaults&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="69078a181802b73053cc93dd7cef5563068bd7ca" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Detach&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Detach&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="614de8fa9393008a3bf0ff45b6658158b939779a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Drafts&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Drafts&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5a44798a0fcccd01296acc40dcf81dee569a586e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Encoding&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Encoding&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0ba1c2eb8bbb78e7fff6e78a77e0a66e0f598355" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Environment&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Environment&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="aa07a12dbe3a7b10f89d3fada2154cdedcf225c8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Exclude&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Exclude&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5559246fc103cb6b764ea83c046a8d266ec6d414" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Force polling&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;강제 폴링&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cebefee8eed4a9e4ca31964ee976d1101f49179e" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Future&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Future&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="cc92c8407709cdb7b177a448da61ff54e3d45f62" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Group By Expression&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;식으로 그룹화&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ef139d5922f0d88c2d0a3c40d70e1a2bf71b804c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Group By&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;그룹 별&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74f7742ebf71c899c926d3ec11da914df0baef0f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Include&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Include&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3755c07c0714d230f100c860d8974598a38edcd5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Incremental build&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;증분 빌드&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="064e616ced1a8e418b59d7cdadae780dd0f88cec" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Inspect&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Inspect&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="4b4dff007b231c704a0dbc71220f290205e48c12" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Keep files&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;파일 보관&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="52f295fe3f6bffdb7dd4686bae55a96ac3acc7b8" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;LSI&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;LSI&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="47b21ba21b7f179f649737fc60b38af3f52e8d48" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Limit Posts&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;게시물 제한&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e337009f81432415e645dbf69202f877b1d3ca8a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Liquid profiler&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;액체 프로파일 러&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="156da4348f3486fabeb7a49dce87345a671a8cda" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Local Server Hostname&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;로컬 서버 호스트 이름&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d693a45edfb752d2e33c34d0b868e7f271479696" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Local Server Port&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;로컬 서버 포트&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f2fe8e3a3d4a34cbb50e090bfb3a98f98ea7747b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Markdownify&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Markdownify&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a680366dbeb061cc82e3cd29e72c8184c0cbf26f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Normalize Whitespace&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;공백 정규화&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="5100b66803f248a6827fd26edc56d1ffad425025" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note: From v3.3.0 onward, Jekyll does not process &lt;code&gt;node_modules&lt;/code&gt; and certain subdirectories within &lt;code&gt;vendor&lt;/code&gt;, by default. But, by having an &lt;code&gt;exclude:&lt;/code&gt; array defined explicitly in the config file overrides this default setting, which results in some users to encounter an error in building the site, with the following error message:&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;참고 : v3.3.0부터 Jekyll은 기본적으로 &lt;code&gt;vendor&lt;/code&gt; 내의 &lt;code&gt;node_modules&lt;/code&gt; 및 특정 하위 디렉토리를 처리하지 않습니다 . 그러나 구성 파일에 &lt;code&gt;exclude:&lt;/code&gt; 배열을 명시 적으로 정의하면이 기본 설정이 재정의되므로 일부 사용자는 다음 오류 메시지와 함께 사이트 작성시 오류가 발생합니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="13952987d5830acac2081f1ab7c958cd034804f0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; Bash on Ubuntu on Windows is still under development, so you may run into issues.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; Windows에서 Ubuntu의 Bash는 아직 개발 중이므로 문제가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdb1bdb412484cb8bd2b38ab632f9e325cb91fa9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; In the current &lt;a href=&quot;https://github.com/sparklemotion/nokogiri/issues/1456#issuecomment-206481794&quot;&gt;pre release&lt;/a&gt; it works out of the box with Windows x64 but this version is not referenced in the github-pages.</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; 현재 &lt;a href=&quot;https://github.com/sparklemotion/nokogiri/issues/1456#issuecomment-206481794&quot;&gt;시험판&lt;/a&gt; 에서는 Windows x64에서 즉시 작동하지만이 버전은 github 페이지에서 참조되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6652d0ee3cae13c972421de7256ee4d0d7f926f4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; We use an unsecure connection because SSL throws exceptions in the version of Ruby</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; SSL 버전에서 Ruby가 예외를 발생시키기 때문에 안전하지 않은 연결을 사용합니다</target>
        </trans-unit>
        <trans-unit id="a287bdec4c2058b2d50a3ca2b5b15e84443bb7a1" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Note:&lt;/strong&gt; You will need a Gemfile as well, &lt;a href=&quot;https://docs.travis-ci.com/user/languages/ruby/#Dependency-Management&quot;&gt;Travis will automatically install&lt;/a&gt; the dependencies based on the referenced gems:</source>
          <target state="translated">&lt;strong&gt;참고 :&lt;/strong&gt; Gemfile도 필요합니다. &lt;a href=&quot;https://docs.travis-ci.com/user/languages/ruby/#Dependency-Management&quot;&gt;Travis는&lt;/a&gt; 참조 된 gem을 기반으로 종속성 을 자동으로 설치 합니다.</target>
        </trans-unit>
        <trans-unit id="8a7e600c957907f375ba7fd102689cfd9d71a1a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Number of Words&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;단어 수&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="035ab5d71bc83516e2e465da92566d020c198ffa" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Regeneration&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Regeneration&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ac7c7de6914aba4486420040aff6be6136d5b6dd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Relative URL&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;상대 URL&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ce9c2ed1b8845910ba766f8f5eab571e9ea723ea" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Safe&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Safe&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="67d363da900f8796849636058631430e9bdf3dcd" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sample&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Sample&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0de4fe9d2e453ac4761152b59362f417cea83429" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Silence Output&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;무음 출력&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="0acf4c7a427e1d64e1f33cf983ad8c15ad67d07b" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Site Destination&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사이트 목적지&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="eb078475fb1fd279b49b5996db2843d21dc0be8c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Site Source&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;사이트 소스&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e36da88f7e94ce58a88674470a0b9d78a576f26c" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Skips the initial site build.&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;초기 사이트 빌드를 건너 뜁니다.&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="161beb749b4af6addc4889633171fbc9f1d67daf" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Slugify&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Slugify&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="ab4943230fbf458b9ea67ce32e84fa77d6674a55" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Smartify&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Smartify&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2151277b265a91a0fe94cfaded74d24e5b02b5de" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Sort&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Sort&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="b493332da3abc61fd4a02de0b4bb8c4207557c47" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Strict Front Matter&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;엄격한 전면 문제&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c5a61a00ab6a8fc602faf2affb50fc0da791fefc" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Time Zone&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;시간대&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="55d1a6b4629b838969a104ef641639ecb42be0a5" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;To Integer&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;정수로&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c07c0028a45c08072c0c22bf439baa95574934a6" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Travis error:&lt;/strong&gt;&lt;em&gt;&amp;ldquo;You are trying to install in deployment mode after changing your Gemfile. Run bundle install elsewhere and add the updated Gemfile.lock to version control.&amp;rdquo;&lt;/em&gt;</source>
          <target state="translated">&lt;strong&gt;트래비스 오류 : &lt;/strong&gt;&lt;em&gt;&amp;ldquo;Gemfile을 변경 한 후 배포 모드로 설치하려고합니다. 다른 곳에서 번들 설치를 실행하고 업데이트 된 Gemfile.lock을 버전 제어에 추가하십시오.&amp;rdquo;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="0b0e3f98e1d3e15b1f8a99248bc873c058c00f9a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;URI Escape&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;URI 이스케이프&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="58edc047d38f803bae9a8f03d9a38eaecca7d166" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Unpublished&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Unpublished&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="c6cb05feb418b9b80e2ddacb80a7a6fd0e90aa7f" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Verbose output&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;자세한 출력&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="40164f69f3e942b6a9c27a543ff453fa27e9118a" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Where Expression&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;어디 표현&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="98382fec837521b94a4201c5ec0d8da1a495b445" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Where&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;Where&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="46cd6a873e443de73499d98b2cd0dc81b04d9cd9" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;Workaround:&lt;/strong&gt; Either run &lt;code&gt;bundle install&lt;/code&gt; locally and commit your changes to &lt;code&gt;Gemfile.lock&lt;/code&gt;, or remove the &lt;code&gt;Gemfile.lock&lt;/code&gt; file from your repository and add an entry in the &lt;code&gt;.gitignore&lt;/code&gt; file to avoid it from being checked in again.</source>
          <target state="translated">&lt;strong&gt;해결 방법 : &lt;/strong&gt; &lt;code&gt;bundle install&lt;/code&gt; 로컬로 실행 하고 변경 사항을 &lt;code&gt;Gemfile.lock&lt;/code&gt; 에 커밋 하거나 리포지토리에서 &lt;code&gt;Gemfile.lock&lt;/code&gt; 파일을 제거 하고 &lt;code&gt;.gitignore&lt;/code&gt; 파일에 항목을 추가하여 다시 체크인되지 않도록하십시오.</target>
        </trans-unit>
        <trans-unit id="202c12f91f88e178d343c7a3410dcdce3ec05bee" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;X.509 (SSL) Certificate&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;X.509 (SSL) 인증서&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="e1da205f63342dca221949324323a5e2927f72b4" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;X.509 (SSL) Private Key&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;X.509 (SSL) 개인 키&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="3224f3a72b00adde9c6cb47bc6f2e5095fee0ad0" translate="yes" xml:space="preserve">
          <source>&lt;strong&gt;XML Escape&lt;/strong&gt;</source>
          <target state="translated">&lt;strong&gt;XML 탈출&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="74822779539e97bce3e01a5102bba1ae633c9ea0" translate="yes" xml:space="preserve">
          <source>A Finder or Explorer window opens showing the theme&amp;rsquo;s files and directories. The Minima theme gem contains these files:</source>
          <target state="translated">테마의 파일 및 디렉토리를 보여주는 Finder 또는 Explorer 창이 열립니다. Minima 테마 젬에는 다음 파일이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="ae91e1b3531f49ae2208ba8d5058ad81a0df6e9d" translate="yes" xml:space="preserve">
          <source>A Hard-Coded Collection</source>
          <target state="translated">하드 코딩 된 컬렉션</target>
        </trans-unit>
        <trans-unit id="4ba2b8413d479dbe929f9c1da8de3573b97db179" translate="yes" xml:space="preserve">
          <source>A basic Jekyll site usually looks something like this:</source>
          <target state="translated">기본 Jekyll 사이트는 일반적으로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7742a739b14119298eb82a8d620c772ec181a7ba" translate="yes" xml:space="preserve">
          <source>A boolean flag that informs Jekyll whether this plugin may be safely executed in an environment where arbitrary code execution is not allowed. This is used by GitHub Pages to determine which core plugins may be used, and which are unsafe to run. If your plugin does not allow for arbitrary code execution, set this to &lt;code&gt;true&lt;/code&gt;. GitHub Pages still won&amp;rsquo;t load your plugin, but if you submit it for inclusion in core, it&amp;rsquo;s best for this to be correct!</source>
          <target state="translated">임의의 코드 실행이 허용되지 않는 환경에서이 플러그인을 안전하게 실행할 수 있는지 여부를 Jekyll에 알리는 부울 플래그입니다. 이것은 GitHub Pages에서 어떤 코어 플러그인을 사용할 수 있고 어떤 플러그인이 실행하기에 안전하지 않은지를 결정하는 데 사용됩니다. 플러그인이 임의의 코드 실행을 허용하지 않는 경우이를 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오. . GitHub 페이지는 여전히 플러그인을로드하지 않지만 코어에 포함하기 위해 제출하면 이것이 가장 좋습니다!</target>
        </trans-unit>
        <trans-unit id="0cf11f67e9a9ec62b370e8ba92f94b0e278f4ca4" translate="yes" xml:space="preserve">
          <source>A date here overrides the date from the name of the post. This can be used to ensure correct sorting of posts. A date is specified in the format &lt;code&gt;YYYY-MM-DD HH:MM:SS +/-TTTT&lt;/code&gt;; hours, minutes, seconds, and timezone offset are optional.</source>
          <target state="translated">여기의 날짜는 게시물 이름의 날짜보다 우선합니다. 게시물을 올바르게 정렬하는 데 사용할 수 있습니다. 날짜는 &lt;code&gt;YYYY-MM-DD HH:MM:SS +/-TTTT&lt;/code&gt; 형식으로 지정됩니다. . 시, 분, 초 및 시간대 오프셋은 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="e746a419fa8184ed8b5dbaf74831def56f33836d" translate="yes" xml:space="preserve">
          <source>A gem included here will be activated even if its not explicitly listed under the &lt;code&gt;plugins:&lt;/code&gt; key in your site&amp;rsquo;s config file.</source>
          <target state="translated">여기에 포함 된 gem은 &lt;code&gt;plugins:&lt;/code&gt; 명시 적으로 나열되지 않은 경우에도 활성화됩니다 . 사이트 구성 파일의 키 됩니다.</target>
        </trans-unit>
        <trans-unit id="0b7b6cbe1498a0ac676b8c55f3adc99cfaa60efc" translate="yes" xml:space="preserve">
          <source>A generator is a subclass of &lt;code&gt;Jekyll::Generator&lt;/code&gt; that defines a &lt;code&gt;generate&lt;/code&gt; method, which receives an instance of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt;&lt;code&gt;Jekyll::Site&lt;/code&gt;&lt;/a&gt;. The return value of &lt;code&gt;generate&lt;/code&gt; is ignored.</source>
          <target state="translated">생성기는 &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt; &lt;code&gt;Jekyll::Site&lt;/code&gt; &lt;/a&gt; 의 인스턴스를받는 &lt;code&gt;generate&lt;/code&gt; 메소드 를 정의하는 &lt;code&gt;Jekyll::Generator&lt;/code&gt; 의 서브 클래스입니다 . &lt;code&gt;generate&lt;/code&gt; 의 리턴 값 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="f59eb8c28cc9735685599f07f810c140a637cfb5" translate="yes" xml:space="preserve">
          <source>A list containing the data loaded from the YAML files located in the &lt;code&gt;_data&lt;/code&gt; directory.</source>
          <target state="translated">&lt;code&gt;_data&lt;/code&gt; 디렉토리 에있는 YAML 파일에서로드 된 데이터가 포함 된 목록 입니다.</target>
        </trans-unit>
        <trans-unit id="9519d5a6bd7f63f37a2c1e1998a4a86c6925de29" translate="yes" xml:space="preserve">
          <source>A list of all &lt;a href=&quot;../static-files/index&quot;&gt;static files&lt;/a&gt; (i.e. files not processed by Jekyll's converters or the Liquid renderer). Each file has three properties: &lt;code&gt;path&lt;/code&gt;, &lt;code&gt;modified_time&lt;/code&gt; and &lt;code&gt;extname&lt;/code&gt;.</source>
          <target state="translated">모든 &lt;a href=&quot;../static-files/index&quot;&gt;정적 파일&lt;/a&gt; 목록 (예 : Jekyll의 변환기 또는 Liquid 렌더러에서 처리하지 않은 파일) 각 파일에는 &lt;code&gt;path&lt;/code&gt; , &lt;code&gt;modified_time&lt;/code&gt; 및 &lt;code&gt;extname&lt;/code&gt; 의 세 가지 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5336856637a483a8212cbf2ef10f6f0f13bd455e" translate="yes" xml:space="preserve">
          <source>A list of all Pages.</source>
          <target state="translated">모든 페이지 목록.</target>
        </trans-unit>
        <trans-unit id="ebd31c600838ace9a8440f7264a2ea48c1395265" translate="yes" xml:space="preserve">
          <source>A list of all the collections.</source>
          <target state="translated">모든 컬렉션의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="3e04294346c519800585cfd36fea6f199fcdbde2" translate="yes" xml:space="preserve">
          <source>A list of all the documents in every collection.</source>
          <target state="translated">모든 컬렉션의 모든 문서 목록.</target>
        </trans-unit>
        <trans-unit id="27b1206373577600642e6620e908afd8604f3ad6" translate="yes" xml:space="preserve">
          <source>A permalink style of &lt;code&gt;/:categories/:year/:month/:day/:title.:output_ext&lt;/code&gt; for posts becomes &lt;code&gt;/:title.html&lt;/code&gt; for pages and collections.</source>
          <target state="translated">게시물에 대한 &lt;code&gt;/:categories/:year/:month/:day/:title.:output_ext&lt;/code&gt; 의 퍼머 링크 스타일은 페이지 및 컬렉션에 대해 &lt;code&gt;/:title.html&lt;/code&gt; 이됩니다 .</target>
        </trans-unit>
        <trans-unit id="924a8402a0534cd1579386e7c9bbe1ff2daca0b5" translate="yes" xml:space="preserve">
          <source>A permalink style of &lt;code&gt;date&lt;/code&gt;, which contains a trailing file extension, will update page permalinks to also contain a trailing file extension: &lt;code&gt;/:title.html&lt;/code&gt;. But no time or category information will be included.</source>
          <target state="translated">후행 파일 확장자를 포함하는 영구 링크 스타일의 &lt;code&gt;date&lt;/code&gt; 는 후행 파일 확장자를 포함하도록 페이지 영구 링크를 업데이트합니다 : &lt;code&gt;/:title.html&lt;/code&gt; . 그러나 시간 또는 카테고리 정보는 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="579d296d4ecbcaa9d204eb62654652cc43172fce" translate="yes" xml:space="preserve">
          <source>A permalink style of &lt;code&gt;pretty&lt;/code&gt; (or &lt;code&gt;/:categories/:year/:month/:day/:title/&lt;/code&gt;), which omits the file extension and contains a trailing slash, will update page and collection permalinks to also omit the file extension and contain a trailing slash: &lt;code&gt;/:title/&lt;/code&gt;.</source>
          <target state="translated">파일 확장자를 생략하고 후행 슬래시를 포함하는 &lt;code&gt;pretty&lt;/code&gt; (또는 &lt;code&gt;/:categories/:year/:month/:day/:title/&lt;/code&gt; ) 의 퍼머 링크 스타일은 페이지 및 콜렉션 퍼머 링크를 업데이트하여 파일 확장자를 생략하고 포함합니다. 후행 슬래시 : &lt;code&gt;/:title/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3e30b08edbd0fd1bfc32274cac27a0065c655be3" translate="yes" xml:space="preserve">
          <source>A quick way to install Jekyll using Chocolatey is to follow the &lt;a href=&quot;https://davidburela.wordpress.com/2015/11/28/easily-install-jekyll-on-windows-with-3-command-prompt-entries-and-chocolatey/&quot;&gt;installation instructions by David Burela&lt;/a&gt;:</source>
          <target state="translated">Chocolatey를 사용하여 Jekyll을 설치하는 빠른 방법은 &lt;a href=&quot;https://davidburela.wordpress.com/2015/11/28/easily-install-jekyll-on-windows-with-3-command-prompt-entries-and-chocolatey/&quot;&gt;David Burela&lt;/a&gt; 의 설치 지침을 따르는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="89375efee27914e45b0bf3c296802660f7c8a517" translate="yes" xml:space="preserve">
          <source>A reverse chronological list of all Posts.</source>
          <target state="translated">모든 게시물의 시간순 역순 목록.</target>
        </trans-unit>
        <trans-unit id="442fcde1d206c0cb9bb937ee778fc4781dc6c840" translate="yes" xml:space="preserve">
          <source>A seeming feature regression in 2.x, the &lt;code&gt;--future&lt;/code&gt; flag was automatically &lt;em&gt;enabled&lt;/em&gt;. The future flag allows post authors to give the post a date in the future and to have it excluded from the build until the system time is equal or after the post time. In Jekyll 3, this has been corrected. &lt;strong&gt;Now, &lt;code&gt;--future&lt;/code&gt; is disabled by default.&lt;/strong&gt; This means you will need to include &lt;code&gt;--future&lt;/code&gt; if you want your future-dated posts to generate when running &lt;code&gt;jekyll build&lt;/code&gt; or &lt;code&gt;jekyll serve&lt;/code&gt;.</source>
          <target state="translated">2.x에서 보이는 기능 회귀 인 &lt;code&gt;--future&lt;/code&gt; 플래그가 자동으로 &lt;em&gt;활성화되었습니다&lt;/em&gt; . future 플래그를 사용하면 포스트 작성자가 포스트에 날짜를 지정하고 시스템 시간이 같거나 포스트 시간 이후에 빌드에서 제외되도록 할 수 있습니다. Jekyll 3에서는이 문제가 해결되었습니다. &lt;strong&gt;이제 &lt;code&gt;--future&lt;/code&gt; 는 기본적으로 비활성화되어 있습니다. &lt;/strong&gt;즉, &lt;code&gt;jekyll build&lt;/code&gt; 또는 &lt;code&gt;jekyll serve&lt;/code&gt; 를 실행할 때 미래의 게시물을 생성하려면 &lt;code&gt;--future&lt;/code&gt; 를 포함해야합니다 .</target>
        </trans-unit>
        <trans-unit id="328adde85e30d2d7abcacb7a755b6f397f085ca0" translate="yes" xml:space="preserve">
          <source>A static file is a file that does not contain any YAML front matter. These include images, PDFs, and other un-rendered content.</source>
          <target state="translated">정적 파일은 YAML 최전선을 포함하지 않는 파일입니다. 여기에는 이미지, PDF 및 렌더링되지 않은 기타 컨텐츠가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="d838502181f624e84d0389a01cd7543055c1b733" translate="yes" xml:space="preserve">
          <source>A subset of `site.pages` listing those which end in `.html`.</source>
          <target state="translated">`.html`로 끝나는 것들을 나열하는`site.pages '의 부분 집합.</target>
        </trans-unit>
        <trans-unit id="c5c34f9420142f890d6602c596221e5b1dbf8eb5" translate="yes" xml:space="preserve">
          <source>A subset of `site.static_files` listing those which end in `.html`.</source>
          <target state="translated">`.html`로 끝나는 것들을 나열하는`site.static_files '의 부분 집합.</target>
        </trans-unit>
        <trans-unit id="b3abb0809c90da0ebb883564d592eef5d720ff6b" translate="yes" xml:space="preserve">
          <source>A typical post</source>
          <target state="translated">전형적인 게시물</target>
        </trans-unit>
        <trans-unit id="2af461e0d4659ced54f6fe2ee344a8b6e8ae37d6" translate="yes" xml:space="preserve">
          <source>A way to &lt;a href=&quot;https://github.com/rfelix/jekyll_ext&quot;&gt;extend Jekyll&lt;/a&gt; without forking and modifying the Jekyll gem codebase and some &lt;a href=&quot;https://wiki.github.com/rfelix/jekyll_ext/extensions&quot;&gt;portable Jekyll extensions&lt;/a&gt; that can be reused and shared.</source>
          <target state="translated">Jekyll gem 코드베이스와 재사용 및 공유 할 수있는 일부 &lt;a href=&quot;https://wiki.github.com/rfelix/jekyll_ext/extensions&quot;&gt;휴대용 Jekyll 확장&lt;/a&gt; 을 포크 및 수정하지 않고 &lt;a href=&quot;https://github.com/rfelix/jekyll_ext&quot;&gt;Jekyll&lt;/a&gt; 을 확장 하는 방법 .</target>
        </trans-unit>
        <trans-unit id="afb337a1111f37a796eb4f9a4f0fa946ddf7bd59" translate="yes" xml:space="preserve">
          <source>About Bundler</source>
          <target state="translated">번 들러 소개</target>
        </trans-unit>
        <trans-unit id="b1d3baffa98fd693985cedf21f955cdc100b5e99" translate="yes" xml:space="preserve">
          <source>Absolute Permalinks</source>
          <target state="translated">절대 퍼머 링크</target>
        </trans-unit>
        <trans-unit id="b502958a0e77475e31de65e691c85d2f392a1bab" translate="yes" xml:space="preserve">
          <source>Absolute permalinks will be required in v3.0 and on</source>
          <target state="translated">v3.0 이상에서는 절대 영구 링크가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3e8502a55a293e1a1c2ef614f210b025219f78ed" translate="yes" xml:space="preserve">
          <source>Accessing Collection Attributes</source>
          <target state="translated">컬렉션 속성에 액세스</target>
        </trans-unit>
        <trans-unit id="f5c53501feaa60f254c524f680a6c20f472e4fc0" translate="yes" xml:space="preserve">
          <source>Add and configure the Jekyll action and save the pipeline</source>
          <target state="translated">Jekyll 작업 추가 및 구성 및 파이프 라인 저장</target>
        </trans-unit>
        <trans-unit id="b41fad6b9ac949f078eb80e6c34f01b11cfad580" translate="yes" xml:space="preserve">
          <source>Add front matter to static files</source>
          <target state="translated">정적 파일에 최전선 추가</target>
        </trans-unit>
        <trans-unit id="84f4c3ccafa877eb4e866e9595b7abae957c481b" translate="yes" xml:space="preserve">
          <source>Add the &lt;code&gt;deploy&lt;/code&gt; script to the site source folder:</source>
          <target state="translated">사이트 소스 폴더에 &lt;code&gt;deploy&lt;/code&gt; 스크립트를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe57193720bbd616ce3fef405cadf8ed27d4c68e" translate="yes" xml:space="preserve">
          <source>Add the following to the Gemfile for your site if you have issues with auto-regeneration on Windows alone:</source>
          <target state="translated">Windows에서만 자동 재생에 문제가있는 경우 사이트의 Gemfile에 다음을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="c71502a6538ceff0366e657e0b8f7db824dbdaa2" translate="yes" xml:space="preserve">
          <source>Add the following to your site&amp;rsquo;s &lt;code&gt;_config.yml&lt;/code&gt; file, replacing &lt;code&gt;my_collection&lt;/code&gt; with the name of your collection:</source>
          <target state="translated">귀하의 사이트에 다음을 추가 &lt;code&gt;_config.yml&lt;/code&gt; 의 교체, 파일 &lt;code&gt;my_collection&lt;/code&gt; 을 을 콜렉션 이름으로 십시오.</target>
        </trans-unit>
        <trans-unit id="c64383509764941cc1f52bc544e663fd7567b391" translate="yes" xml:space="preserve">
          <source>Add the following to your site&amp;rsquo;s &lt;code&gt;_config.yml&lt;/code&gt; to activate the theme:</source>
          <target state="translated">테마를 활성화하려면 사이트의 &lt;code&gt;_config.yml&lt;/code&gt; 에 다음을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa3882a590b3b139b4e5d7923ae5109c7d1c0796" translate="yes" xml:space="preserve">
          <source>Add the relevant plugins to a Bundler group in your &lt;code&gt;Gemfile&lt;/code&gt;. An example:</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; 의 Bundler 그룹에 관련 플러그인을 추가하십시오 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="2219ea42ee84172bcb084024fa5163336870c56f" translate="yes" xml:space="preserve">
          <source>Add the theme to your site&amp;rsquo;s &lt;code&gt;Gemfile&lt;/code&gt;:</source>
          <target state="translated">사이트의 &lt;code&gt;Gemfile&lt;/code&gt; 에 테마를 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="971dbef34b653028cbba9681864b5da12b45f6ab" translate="yes" xml:space="preserve">
          <source>Add your template files in the corresponding folders. Then complete the &lt;code&gt;.gemspec&lt;/code&gt; and the README files according to your needs.</source>
          <target state="translated">해당 폴더에 템플릿 파일을 추가하십시오. 그런 다음 필요에 따라 &lt;code&gt;.gemspec&lt;/code&gt; 및 README 파일을 완성하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf6de003b75f0f6cd4a706292c15739756265d35" translate="yes" xml:space="preserve">
          <source>Adding Ajax pagination to Jekyll</source>
          <target state="translated">Jekyll에 Ajax 페이지 매김 추가</target>
        </trans-unit>
        <trans-unit id="1ca7175ca03271b95fa95b8d0d9ff845a1d415ca" translate="yes" xml:space="preserve">
          <source>Adding a screenshot</source>
          <target state="translated">스크린 샷 추가</target>
        </trans-unit>
        <trans-unit id="20475ab8e91f1fdad1d1b80947bd43193e04fd6f" translate="yes" xml:space="preserve">
          <source>Additionally, you might need to change the code page of the console window to UTF-8 in case you get a &amp;ldquo;Liquid Exception: Incompatible character encoding&amp;rdquo; error during the site generation process. It can be done with the following command:</source>
          <target state="translated">또한 사이트 생성 프로세스 중에 &quot;액체 예외 : 호환되지 않는 문자 인코딩&quot;오류가 발생하는 경우 콘솔 창의 코드 페이지를 UTF-8로 변경해야 할 수도 있습니다. 다음 명령을 사용하여 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f30abf38c3188fb908b2a337fb4ea52076ac2dcb" translate="yes" xml:space="preserve">
          <source>Advanced users (with more complex needs) may find it helpful to choose one of a number of Ruby version managers (&lt;a href=&quot;https://rvm.io&quot;&gt;RVM&lt;/a&gt;, &lt;a href=&quot;http://rbenv.org&quot;&gt;rbenv&lt;/a&gt;, &lt;a href=&quot;https://github.com/postmodern/chruby&quot;&gt;chruby&lt;/a&gt;, &lt;a href=&quot;https://github.com/rvm/rvm/blob/master/docs/alt.md&quot;&gt;etc&lt;/a&gt;.) in which to install Jekyll.</source>
          <target state="translated">(더 복잡한 요구에) 고급 사용자는 것이 도움이 루비 버전 매니저 (의 숫자 중 하나를 선택하는 찾을 수 있습니다 &lt;a href=&quot;https://rvm.io&quot;&gt;RVM&lt;/a&gt; , &lt;a href=&quot;http://rbenv.org&quot;&gt;rbenv&lt;/a&gt; , &lt;a href=&quot;https://github.com/postmodern/chruby&quot;&gt;chruby&lt;/a&gt; , &lt;a href=&quot;https://github.com/rvm/rvm/blob/master/docs/alt.md&quot;&gt;등&lt;/a&gt; .)하는 지킬를 설치합니다.</target>
        </trans-unit>
        <trans-unit id="755a34b0c02ff2727f5d67028e27305f28f6589d" translate="yes" xml:space="preserve">
          <source>Aerobatic</source>
          <target state="translated">Aerobatic</target>
        </trans-unit>
        <trans-unit id="ef9c6fcd7c1a1b44af15508a26aeb469cfef4109" translate="yes" xml:space="preserve">
          <source>After rendering a document, but before writing it to disk</source>
          <target state="translated">문서를 렌더링 한 후 디스크에 쓰기 전에</target>
        </trans-unit>
        <trans-unit id="d7ab1d8103e1a17bdf88e57895dd6384c470b65b" translate="yes" xml:space="preserve">
          <source>After rendering a page, but before writing it to disk</source>
          <target state="translated">페이지를 렌더링 한 후 디스크에 쓰기 전에</target>
        </trans-unit>
        <trans-unit id="d202b478a969714abee61c053415350b96b2fb74" translate="yes" xml:space="preserve">
          <source>After rendering a post, but before writing it to disk</source>
          <target state="translated">게시물을 렌더링 한 후 디스크에 쓰기 전에</target>
        </trans-unit>
        <trans-unit id="7564dd5a2471f959904fcf75761de6bdf462cad8" translate="yes" xml:space="preserve">
          <source>After rendering the whole site, but before writing any files</source>
          <target state="translated">전체 사이트를 렌더링 한 후 파일을 작성하기 전에</target>
        </trans-unit>
        <trans-unit id="897128a19b28253e9f056f2918ba7df73587ea3c" translate="yes" xml:space="preserve">
          <source>After site data has been read and loaded from disk</source>
          <target state="translated">디스크에서 사이트 데이터를 읽고로드 한 후</target>
        </trans-unit>
        <trans-unit id="5929fa7e64e12070c89e5090b96b58433910d318" translate="yes" xml:space="preserve">
          <source>After this process you should have github-pages installed on your system and you can host your blog again with &lt;code&gt;jekyll s&lt;/code&gt;. There will be a warning on startup that you should include &lt;code&gt;gem 'wdm', '&amp;gt;= 0.1.0' if Gem.win_platform?&lt;/code&gt; to your &lt;code&gt;Gemfile&lt;/code&gt; but I could not get &lt;code&gt;jekyll s&lt;/code&gt; working if I include that line so for the moment I ignore that warning.</source>
          <target state="translated">이 과정이 끝나면 시스템에 github-pages가 설치되어 있어야하며 &lt;code&gt;jekyll s&lt;/code&gt; 블로그를 다시 호스팅 할 수 있습니다 . 시작할 때 &lt;code&gt;gem 'wdm', '&amp;gt;= 0.1.0' if Gem.win_platform?&lt;/code&gt; 포함해야한다는 경고 가 Gem.win_platform? 당신에 &lt;code&gt;Gemfile&lt;/code&gt; 하지만 난 가져올 수 없습니다 &lt;code&gt;jekyll s&lt;/code&gt; 해당 라인을 포함하면 작동 잠시 동안 경고를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="886ec584a83b15dd9817c8ecac7a7879cbce7d88" translate="yes" xml:space="preserve">
          <source>After writing a document to disk</source>
          <target state="translated">디스크에 문서를 쓴 후</target>
        </trans-unit>
        <trans-unit id="9835994edd8b3ae8db68422bd469db11b3e862f7" translate="yes" xml:space="preserve">
          <source>After writing a page to disk</source>
          <target state="translated">디스크에 페이지를 쓴 후</target>
        </trans-unit>
        <trans-unit id="481b8884a9a7cdb6b4030c8e4b4448f58a7569c7" translate="yes" xml:space="preserve">
          <source>After writing a post to disk</source>
          <target state="translated">디스크에 게시물을 쓴 후</target>
        </trans-unit>
        <trans-unit id="51a62527299e55b98f5539021d4f4f68372d8ff3" translate="yes" xml:space="preserve">
          <source>After writing the whole site to disk</source>
          <target state="translated">전체 사이트를 디스크에 기록한 후</target>
        </trans-unit>
        <trans-unit id="bf557db58a2f96efac891ef714414ae3f6fb23d6" translate="yes" xml:space="preserve">
          <source>All blog post files must begin with &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;. After that, it&amp;rsquo;s simply a matter of deciding which format you prefer. Jekyll supports &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; out of the box, and has &lt;a href=&quot;../plugins/index#converters-1&quot;&gt;myriad extensions for other formats as well&lt;/a&gt;, including the popular &lt;a href=&quot;http://redcloth.org/textile&quot;&gt;Textile&lt;/a&gt; format. These formats each have their own way of marking up different types of content within a post, so you should familiarize yourself with these formats and decide which one best suits your needs.</source>
          <target state="translated">모든 블로그 게시물 파일은 &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter로&lt;/a&gt; 시작해야합니다 . 그 후에는 원하는 형식을 결정하기 만하면됩니다. Jekyll은 즉시 사용 가능한 &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; 을 지원 하며 널리 사용되는 &lt;a href=&quot;http://redcloth.org/textile&quot;&gt;텍스타일&lt;/a&gt; 형식을 포함하여 &lt;a href=&quot;../plugins/index#converters-1&quot;&gt;다른 형식에도 다양한 확장 기능을 제공&lt;/a&gt; 합니다. 이러한 형식은 각각 게시물에 다른 유형의 콘텐츠를 표시하는 고유 한 방법이 있으므로 이러한 형식을 숙지하고 필요에 가장 적합한 형식을 결정해야합니다.</target>
        </trans-unit>
        <trans-unit id="91faee100cd6a74cbad7180478b88aecbbc01bf7" translate="yes" xml:space="preserve">
          <source>All files in &lt;code&gt;/assets&lt;/code&gt; will be output into the compiled site in the &lt;code&gt;/assets&lt;/code&gt; folder just as you&amp;rsquo;d expect from using Jekyll on your sites.</source>
          <target state="translated">사이트에서 Jekyll을 사용하는 것처럼 &lt;code&gt;/assets&lt;/code&gt; 의 모든 파일 은 &lt;code&gt;/assets&lt;/code&gt; 폴더 의 컴파일 된 사이트로 출력됩니다 .</target>
        </trans-unit>
        <trans-unit id="78c77574c64a445078cc9eae10e36be61a650830" translate="yes" xml:space="preserve">
          <source>All my posts are gone! Where&amp;rsquo;d they go!</source>
          <target state="translated">내 모든 게시물이 사라졌습니다! 그들은 어디로 갔습니까!</target>
        </trans-unit>
        <trans-unit id="60c6ee391ba07144418d2ebfff49970a9a837a3e" translate="yes" xml:space="preserve">
          <source>All of Jekyll&amp;rsquo;s gem dependencies are automatically installed by the above command, so you won&amp;rsquo;t have to worry about them at all.</source>
          <target state="translated">Jekyll의 모든 gem 의존성은 위의 명령에 의해 자동으로 설치되므로 걱정할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="4d88b236d0eba41daea8f660d50fcc878fc811cf" translate="yes" xml:space="preserve">
          <source>All other extensions retain their usual names from Redcarpet, and no renderer options aside from &lt;code&gt;smart&lt;/code&gt; can be specified in Jekyll. &lt;a href=&quot;https://github.com/vmg/redcarpet/blob/v3.2.2/README.markdown#and-its-like-really-simple-to-use&quot;&gt;A list of available extensions can be found in the Redcarpet README file.&lt;/a&gt; Make sure you&amp;rsquo;re looking at the README for the right version of Redcarpet: Jekyll currently uses v3.2.x. The most commonly used extensions are:</source>
          <target state="translated">다른 모든 확장 프로그램은 Redcarpet의 일반적인 이름을 유지하며 Jekyll에서는 &lt;code&gt;smart&lt;/code&gt; 이외의 렌더러 옵션을 지정할 수 없습니다. &lt;a href=&quot;https://github.com/vmg/redcarpet/blob/v3.2.2/README.markdown#and-its-like-really-simple-to-use&quot;&gt;사용 가능한 확장명 목록은 Redcarpet README 파일에서 찾을 수 있습니다. &lt;/a&gt;올바른 Redcarpet 버전의 README를 확인하십시오 : Jekyll은 현재 v3.2.x를 사용합니다. 가장 일반적으로 사용되는 확장은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f8d185bc3694a3e448a4e2a25b1114302ca151d8" translate="yes" xml:space="preserve">
          <source>All page and post URLs contain leading slashes</source>
          <target state="translated">모든 페이지 및 게시물 URL에는 슬래시가 포함됩니다</target>
        </trans-unit>
        <trans-unit id="1122aae9bbe2eaf4aaecce93c58bbde5bb445e3a" translate="yes" xml:space="preserve">
          <source>All the other capabilities of the &lt;code&gt;include&lt;/code&gt; tag are available to the &lt;code&gt;include_relative&lt;/code&gt; tag, such as variables.</source>
          <target state="translated">&lt;code&gt;include&lt;/code&gt; 태그 의 다른 모든 기능은 변수와 같은 &lt;code&gt;include_relative&lt;/code&gt; 태그에 사용 가능 합니다.</target>
        </trans-unit>
        <trans-unit id="d378be50cae5457b8baf789117cd39999b4d5d9b" translate="yes" xml:space="preserve">
          <source>All the variables set via the command line and your &lt;code&gt;_config.yml&lt;/code&gt; are available through the &lt;code&gt;site&lt;/code&gt; variable. For example, if you have &lt;code&gt;foo: bar&lt;/code&gt; in your configuration file, then it will be accessible in Liquid as &lt;code&gt;site.foo&lt;/code&gt;. Jekyll does not parse changes to &lt;code&gt;_config.yml&lt;/code&gt; in &lt;code&gt;watch&lt;/code&gt; mode, you must restart Jekyll to see changes to variables.</source>
          <target state="translated">명령 줄과 &lt;code&gt;_config.yml&lt;/code&gt; 을 통해 설정된 모든 변수 는 &lt;code&gt;site&lt;/code&gt; 변수를 통해 사용할 수 있습니다 . 예를 들어, 구성 파일에 &lt;code&gt;foo: bar&lt;/code&gt; 가 있으면 Liquid에서 &lt;code&gt;site.foo&lt;/code&gt; 로 액세스 할 수 있습니다 . Jekyll은 &lt;code&gt;watch&lt;/code&gt; 모드 에서 &lt;code&gt;_config.yml&lt;/code&gt; 에 대한 변경 사항을 구문 분석하지 않으므로 변수에 대한 변경 사항을 보려면 Jekyll을 다시 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="adc02f50158fdc098388d59e6304c45fe52302d1" translate="yes" xml:space="preserve">
          <source>Already Have Jekyll?</source>
          <target state="translated">이미 지킬?</target>
        </trans-unit>
        <trans-unit id="d503c92410c50ea02e4603e5fc3386c2d064fce5" translate="yes" xml:space="preserve">
          <source>Also, as with any output generated by Liquid tags, you can pass the &lt;code&gt;| strip_html&lt;/code&gt; filter to remove any html tags in the output. This is particularly helpful if you wish to output a post excerpt as a &lt;code&gt;meta=&quot;description&quot;&lt;/code&gt; tag within the post &lt;code&gt;head&lt;/code&gt;, or anywhere else having html tags along with the content is not desirable.</source>
          <target state="translated">또한 Liquid 태그로 생성 된 출력과 마찬가지로 &lt;code&gt;| strip_html&lt;/code&gt; 출력에서 html 태그를 제거하는 strip_html 필터. 이것은 글 &lt;code&gt;head&lt;/code&gt; 내에서 글 발췌를 &lt;code&gt;meta=&quot;description&quot;&lt;/code&gt; 태그 로 출력하려는 ​​경우 또는 컨텐츠와 함께 html 태그를 갖는 다른 곳에서는 바람직하지 않은 경우에 특히 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="bd18d660c73deaf1549475894258845fe45fa309" translate="yes" xml:space="preserve">
          <source>Alternative Markdown Processors</source>
          <target state="translated">대체 마크 다운 프로세서</target>
        </trans-unit>
        <trans-unit id="689b471121f0d1336ad6764642335bc4b2f923a4" translate="yes" xml:space="preserve">
          <source>Alternatively, Homebrew can be installed and used to set up Ruby. This can be done as follows:</source>
          <target state="translated">또는 Homebrew를 설치하여 Ruby를 설정할 수 있습니다. 다음과 같이 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="752463599279feea158406a482726ac34466d6b8" translate="yes" xml:space="preserve">
          <source>Alternatively, if you don&amp;rsquo;t have Bundler installed run:</source>
          <target state="translated">또는 번 들러가 설치되어 있지 않은 경우 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="2349f9e6e5c030547864212af7664d8a404a0e93" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use &lt;a href=&quot;http://pygments.org&quot;&gt;Pygments&lt;/a&gt; to highlight your code snippets. To use Pygments, you must have Python installed on your system, have the &lt;code&gt;pygments.rb&lt;/code&gt; gem installed and set &lt;code&gt;highlighter&lt;/code&gt; to &lt;code&gt;pygments&lt;/code&gt; in your site&amp;rsquo;s configuration file. Pygments supports &lt;a href=&quot;http://pygments.org/languages/&quot;&gt;over 100 languages&lt;/a&gt;</source>
          <target state="translated">또는 &lt;a href=&quot;http://pygments.org&quot;&gt;피그먼트&lt;/a&gt; 를 사용하여 코드 스 니펫을 강조 표시 할 수 있습니다 . 피그먼트를 사용하려면 시스템에 Python을 설치하고 &lt;code&gt;pygments.rb&lt;/code&gt; gem을 설치 한 다음 사이트 구성 파일에서 &lt;code&gt;highlighter&lt;/code&gt; 을 &lt;code&gt;pygments&lt;/code&gt; 로 설정해야합니다. 피그먼트는 &lt;a href=&quot;http://pygments.org/languages/&quot;&gt;100 개 이상의 언어를&lt;/a&gt; 지원합니다</target>
        </trans-unit>
        <trans-unit id="c019888ab79e7eb314cd584121efed9f7f4388b3" translate="yes" xml:space="preserve">
          <source>Alternatively, you can use an &lt;code&gt;rsync-exclude.txt&lt;/code&gt; file to control which files will be transferred to your server.</source>
          <target state="translated">또는 &lt;code&gt;rsync-exclude.txt&lt;/code&gt; 파일을 사용 하여 서버로 전송할 파일을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24b24e2b6624536c7675b2a5de9f5a7e6006cd06" translate="yes" xml:space="preserve">
          <source>Although you can specify a custom permalink pattern using &lt;a href=&quot;#template-variables&quot;&gt;template variables&lt;/a&gt;, Jekyll also provides the following built-in styles for convenience.</source>
          <target state="translated">&lt;a href=&quot;#template-variables&quot;&gt;템플릿 변수를&lt;/a&gt; 사용하여 커스텀 퍼머 링크 패턴을 지정할 수 있지만 Jekyll은 편의를 위해 다음과 같은 내장 스타일도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="873e548a7f2a7b5faa2c9064a9c70744143d029a" translate="yes" xml:space="preserve">
          <source>Although you can&amp;rsquo;t directly add front matter values to static files, you can set front matter values through the &lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;defaults property&lt;/a&gt; in your configuration file. When Jekyll builds the site, it will use the front matter values you set.</source>
          <target state="translated">프론트 파일 값을 정적 파일에 직접 추가 할 수는 없지만 구성 파일 의 &lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;defaults 특성&lt;/a&gt; 을 통해 프론트 값을 설정할 수 있습니다 . Jekyll은 사이트를 구축 할 때 설정 한 최전방 값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="7b11a4234011e35a6c31048c3a964862b6e69ee8" translate="yes" xml:space="preserve">
          <source>Amazon S3</source>
          <target state="translated">아마존 S3</target>
        </trans-unit>
        <trans-unit id="adc114ec75b006aec502a0d460ab994f226b641a" translate="yes" xml:space="preserve">
          <source>An array of &lt;a href=&quot;#documents&quot;&gt;documents&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#documents&quot;&gt;문서&lt;/a&gt; 의 배열 .</target>
        </trans-unit>
        <trans-unit id="8c5020196a0b2c3a2d8437789a7104af9bcf47d6" translate="yes" xml:space="preserve">
          <source>An array of static files in the collection.</source>
          <target state="translated">컬렉션에있는 정적 파일의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="0b6191f14890b08f7c4d31a4de9339da589bfd13" translate="yes" xml:space="preserve">
          <source>An exception to the above rule are GitHub Pages sites, where the &lt;code&gt;--future&lt;/code&gt; flag remains &lt;em&gt;enabled&lt;/em&gt; by default to maintain historical consistency for those sites.</source>
          <target state="translated">위의 규칙에 대한 예외는 GitHub 페이지 사이트입니다. 여기서 &lt;code&gt;--future&lt;/code&gt; 플래그는 해당 사이트에 대한 기록 일관성을 유지하기 위해 기본적으로 &lt;em&gt;활성화&lt;/em&gt; 되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5afc052f094bd3b6df4ee59c2c452389beeb7d08" translate="yes" xml:space="preserve">
          <source>An identifier unique to a document in a Collection or a Post (useful in RSS feeds). e.g. &lt;code&gt;/2008/12/14/my-post&lt;/code&gt;&lt;code&gt;/my-collection/my-document&lt;/code&gt;</source>
          <target state="translated">컬렉션 또는 게시물의 문서에 고유 한 식별자입니다 (RSS 피드에 유용). 예 : &lt;code&gt;/2008/12/14/my-post&lt;/code&gt; &lt;code&gt;/my-collection/my-document&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1a9ee610414828f966b8a4ee07139a48b12331b8" translate="yes" xml:space="preserve">
          <source>An overview of what each of these does:</source>
          <target state="translated">각각의 기능에 대한 개요 :</target>
        </trans-unit>
        <trans-unit id="633bee2f4a585a755a76df01b80499e81eae6285" translate="yes" xml:space="preserve">
          <source>And the output will look like this:</source>
          <target state="translated">출력은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cd03df56232eca270d46a9e42bc65110d684def4" translate="yes" xml:space="preserve">
          <source>And we would get something like this on the page:</source>
          <target state="translated">그리고 우리는 페이지에서 다음과 같은 것을 얻을 것입니다 :</target>
        </trans-unit>
        <trans-unit id="208dc303a4eb1714ec4555438219b17cd54a3f68" translate="yes" xml:space="preserve">
          <source>Another way to deploy your Jekyll site is to use &lt;a href=&quot;https://github.com/ruby/rake&quot;&gt;Rake&lt;/a&gt;, &lt;a href=&quot;https://github.com/JEG2/highline&quot;&gt;HighLine&lt;/a&gt;, and &lt;a href=&quot;https://github.com/net-ssh/net-ssh&quot;&gt;Net::SSH&lt;/a&gt;. A more complex example of deploying Jekyll with Rake that deals with multiple branches can be found in &lt;a href=&quot;https://github.com/gitready/gitready/blob/cdfbc4ec5321ff8d18c3ce936e9c749dbbc4f190/Rakefile&quot;&gt;Git Ready&lt;/a&gt;.</source>
          <target state="translated">Jekyll 사이트를 배포하는 또 다른 방법은 &lt;a href=&quot;https://github.com/ruby/rake&quot;&gt;Rake&lt;/a&gt; , &lt;a href=&quot;https://github.com/JEG2/highline&quot;&gt;HighLine&lt;/a&gt; 및 &lt;a href=&quot;https://github.com/net-ssh/net-ssh&quot;&gt;Net :: SSH를 사용하는 것&lt;/a&gt; 입니다. 여러 분기를 처리하는 Rake와 함께 Jekyll을 배포하는보다 복잡한 예는 &lt;a href=&quot;https://github.com/gitready/gitready/blob/cdfbc4ec5321ff8d18c3ce936e9c749dbbc4f190/Rakefile&quot;&gt;Git Ready&lt;/a&gt; 에서 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b448f7cf6a754d670a2f73d7378055efc98974b" translate="yes" xml:space="preserve">
          <source>Any HTML file on your site can use layouts and/or includes, even the homepage. Common content, like headers and footers, make excellent candidates for extraction into a layout.</source>
          <target state="translated">사이트의 모든 HTML 파일은 홈페이지를 포함하여 레이아웃 및 / 또는 포함을 사용할 수 있습니다. 머리글 및 바닥 글과 같은 일반적인 내용은 레이아웃으로 추출 할 수있는 훌륭한 후보가됩니다.</target>
        </trans-unit>
        <trans-unit id="d3985cf75e0b3f33f761c21748c88182e9d2a364" translate="yes" xml:space="preserve">
          <source>Any custom front matter that you specify will be available under &lt;code&gt;page&lt;/code&gt;. For example, if you specify &lt;code&gt;custom_css: true&lt;/code&gt; in a page&amp;rsquo;s front matter, that value will be available as &lt;code&gt;page.custom_css&lt;/code&gt;.</source>
          <target state="translated">지정한 모든 맞춤 정보는 &lt;code&gt;page&lt;/code&gt; 사용할 수 있습니다 . 예를 들어, 페이지 앞면에 &lt;code&gt;custom_css: true&lt;/code&gt; 를 지정하면 해당 값을 &lt;code&gt;page.custom_css&lt;/code&gt; 로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cd37b30357aea397984ea94335ee78e9a4a0bfa5" translate="yes" xml:space="preserve">
          <source>Any file in &lt;code&gt;/assets&lt;/code&gt; will be copied over to the user&amp;rsquo;s site upon build unless they have a file with the same relative path. You can ship any kind of asset here: SCSS, an image, a webfont, etc. These files behave like pages and static files in Jekyll:</source>
          <target state="translated">&lt;code&gt;/assets&lt;/code&gt; 의 모든 파일 은 동일한 상대 경로를 가진 파일이 없으면 빌드시 사용자 사이트로 복사됩니다. SCSS, 이미지, 웹 폰트 등 모든 종류의 에셋을 제공 할 수 있습니다.이 파일은 Jekyll의 페이지 및 정적 파일처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="321beaa0994440152f2be07e3aab0b1473e3b3c6" translate="yes" xml:space="preserve">
          <source>Any variables in the front matter that are not predefined are mixed into the data that is sent to the Liquid templating engine during the conversion. For instance, if you set a title, you can use that in your layout to set the page title:</source>
          <target state="translated">사전 정의되지 않은 전면 문제의 변수는 변환 중에 액체 템플릿 엔진으로 전송되는 데이터에 혼합됩니다. 예를 들어 제목을 설정하면 레이아웃에서 제목을 사용하여 페이지 제목을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b5958b0f53cb499388dd9ee04a106a30b02c5d1" translate="yes" xml:space="preserve">
          <source>Apache</source>
          <target state="translated">Apache</target>
        </trans-unit>
        <trans-unit id="9e97017465836c5bab60a857a99f27a89c7973cf" translate="yes" xml:space="preserve">
          <source>As a result, the following command line flags are now deprecated:</source>
          <target state="translated">결과적으로 다음 명령 행 플래그는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="755708c2793ecf0511b2cd1e15646ec6ef0db2fa" translate="yes" xml:space="preserve">
          <source>As explained on the &lt;a href=&quot;../structure/index&quot;&gt;directory structure&lt;/a&gt; page, the &lt;code&gt;_data&lt;/code&gt; folder is where you can store additional data for Jekyll to use when generating your site. These files must be YAML, JSON, or CSV files (using either the &lt;code&gt;.yml&lt;/code&gt;, &lt;code&gt;.yaml&lt;/code&gt;, &lt;code&gt;.json&lt;/code&gt; or &lt;code&gt;.csv&lt;/code&gt; extension), and they will be accessible via &lt;code&gt;site.data&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;../structure/index&quot;&gt;디렉토리 구조&lt;/a&gt; 페이지에서 설명한 것처럼 &lt;code&gt;_data&lt;/code&gt; 폴더는 Jekyll이 사이트를 생성 할 때 사용할 추가 데이터를 저장할 수있는 위치입니다. 이러한 파일은 .ML, JSON 또는 CSV 파일 ( &lt;code&gt;.yml&lt;/code&gt; , &lt;code&gt;.yaml&lt;/code&gt; , &lt;code&gt;.json&lt;/code&gt; 또는 &lt;code&gt;.csv&lt;/code&gt; 확장자 사용)이어야하며 &lt;code&gt;site.data&lt;/code&gt; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0b180a13d087573e69d428fe5ff542d569b07fc6" translate="yes" xml:space="preserve">
          <source>As explained on the &lt;a href=&quot;../structure/index&quot;&gt;directory structure&lt;/a&gt; page, the &lt;code&gt;_posts&lt;/code&gt; folder is where your blog posts will live. These files are generally &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; or HTML, but can be other formats with the proper converter installed. All posts must have &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt;, and they will be converted from their source format into an HTML page that is part of your static site.</source>
          <target state="translated">&lt;a href=&quot;../structure/index&quot;&gt;디렉토리 구조&lt;/a&gt; 페이지 에 설명 된대로 &lt;code&gt;_posts&lt;/code&gt; 폴더는 블로그 게시물이있는 위치입니다. 이러한 파일은 일반적으로 &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; 또는 HTML이지만 적절한 변환기가 설치된 다른 형식 일 수 있습니다. 모든 게시물에는 &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML Front Matter&lt;/a&gt; 가 있어야 하며 소스 형식에서 정적 사이트의 일부인 HTML 페이지로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="76168d40c343432b229802228c1aaf4d943daf93" translate="yes" xml:space="preserve">
          <source>As mentioned earlier, you can set multiple scope/values pairs for &lt;code&gt;defaults&lt;/code&gt;.</source>
          <target state="translated">앞에서 언급했듯이 &lt;code&gt;defaults&lt;/code&gt; 대해 여러 범위 / 값 쌍을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ee7a589d4391ce8e2e3ae91d50815186ce8a2444" translate="yes" xml:space="preserve">
          <source>As of version 2.5.0, Jekyll can be extended with plugins which provide subcommands for the &lt;code&gt;jekyll&lt;/code&gt; executable. This is possible by including the relevant plugins in a &lt;code&gt;Gemfile&lt;/code&gt; group called &lt;code&gt;:jekyll_plugins&lt;/code&gt;:</source>
          <target state="translated">버전 2.5.0부터 Jekyll은 &lt;code&gt;jekyll&lt;/code&gt; 실행 파일에 대한 하위 명령을 제공하는 플러그인으로 확장 될 수 있습니다 . 이는 &lt;code&gt;:jekyll_plugins&lt;/code&gt; 라는 &lt;code&gt;Gemfile&lt;/code&gt; 그룹 에 관련 플러그인을 포함시킴으로써 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="ce7eb874b965ae11567e47490249afec01be8a6e" translate="yes" xml:space="preserve">
          <source>As with posts, if you use a permalink style that omits the &lt;code&gt;.html&lt;/code&gt; file extension, each page is rendered as an &lt;code&gt;index.html&lt;/code&gt; file inserted inside a folder with the page&amp;rsquo;s name (for example, &lt;code&gt;mypage/index.html&lt;/code&gt;).</source>
          <target state="translated">게시물과 마찬가지로 &lt;code&gt;.html&lt;/code&gt; 파일 확장자 를 생략하는 퍼머 링크 스타일을 사용하면 각 페이지가 &lt;code&gt;index.html&lt;/code&gt; 페이지 이름이있는 폴더에 삽입 된 index.html 파일 (예 : &lt;code&gt;mypage/index.html&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="20e338624cee29d0effead85b0dd0e70de783b4c" translate="yes" xml:space="preserve">
          <source>Assets</source>
          <target state="translated">Assets</target>
        </trans-unit>
        <trans-unit id="b5e18f3241efb41114c45ed9134f7980db2d7439" translate="yes" xml:space="preserve">
          <source>At a minimum, liquid tags must implement:</source>
          <target state="translated">액체 태그는 최소한 다음을 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="a086d942884a301b827479029ba19c2746237425" translate="yes" xml:space="preserve">
          <source>Attribute</source>
          <target state="translated">Attribute</target>
        </trans-unit>
        <trans-unit id="355c2077b560e925ae933915dfa3935dfa97c70f" translate="yes" xml:space="preserve">
          <source>Attributes from the YAML front matter can be accessed as data anywhere in the site. Using the above example for configuring a collection as &lt;code&gt;site.albums&lt;/code&gt;, you might have front matter in an individual file structured as follows (which must use a supported markup format, and cannot be saved with a &lt;code&gt;.yaml&lt;/code&gt; extension):</source>
          <target state="translated">YAML 최전방의 속성은 사이트 어디에서나 데이터로 액세스 할 수 있습니다. 컬렉션을 &lt;code&gt;site.albums&lt;/code&gt; 로 구성하기 위해 위의 예를 사용하면 다음과 같이 구조화 된 개별 파일에 프론트 물질이있을 수 있습니다 (지원되는 마크 업 형식을 사용해야하며 &lt;code&gt;.yaml&lt;/code&gt; 확장자 로 저장할 수 없음 ).</target>
        </trans-unit>
        <trans-unit id="135ea87ad0fc3ef501930be4d71ff3e17f9d4a5a" translate="yes" xml:space="preserve">
          <source>Auto Regeneration</source>
          <target state="translated">자동 재생</target>
        </trans-unit>
        <trans-unit id="7f9f1e8126398f44765ef174b5636ce8d8fa5fa2" translate="yes" xml:space="preserve">
          <source>Automated methods</source>
          <target state="translated">자동화 된 방법</target>
        </trans-unit>
        <trans-unit id="639ff1200ae9aa990621d03c805e12cf4210c494" translate="yes" xml:space="preserve">
          <source>Automating the deployment of a Jekyll site is simple. See their &lt;a href=&quot;https://www.aerobatic.com/docs/static-site-generators/#jekyll&quot;&gt;Jekyll docs&lt;/a&gt; for more details. Your built &lt;code&gt;_site&lt;/code&gt; folder is deployed to their highly-available, globally distributed hosting service.</source>
          <target state="translated">Jekyll 사이트 배포를 자동화하는 것은 간단합니다. 자세한 내용은 &lt;a href=&quot;https://www.aerobatic.com/docs/static-site-generators/#jekyll&quot;&gt;Jekyll 문서&lt;/a&gt; 를 참조하십시오. 빌드 된 &lt;code&gt;_site&lt;/code&gt; 폴더는 고 가용성의 전 세계에 분산 된 호스팅 서비스에 배포됩니다.</target>
        </trans-unit>
        <trans-unit id="c275699a9fcc5b1df221a4afe6ee0192241a51b8" translate="yes" xml:space="preserve">
          <source>Available Plugins</source>
          <target state="translated">사용 가능한 플러그인</target>
        </trans-unit>
        <trans-unit id="732a155661e05a886687f639416e60b205801144" translate="yes" xml:space="preserve">
          <source>Base-URL Problems</source>
          <target state="translated">기본 URL 문제</target>
        </trans-unit>
        <trans-unit id="6ac5268828bd558bfbe679df5b1fc282b7264126" translate="yes" xml:space="preserve">
          <source>Baseurl</source>
          <target state="translated">Baseurl</target>
        </trans-unit>
        <trans-unit id="b20cbc384159fd820ed034fd3615298ec09f5902" translate="yes" xml:space="preserve">
          <source>Basic Usage</source>
          <target state="translated">기본 사용법</target>
        </trans-unit>
        <trans-unit id="e41e3981f0c3e84bf0771a32e884d519f60e7d63" translate="yes" xml:space="preserve">
          <source>Be aware of character sets</source>
          <target state="translated">문자 세트에주의</target>
        </trans-unit>
        <trans-unit id="a091ac0e36d137ef58780801d9d9ab384cf11625" translate="yes" xml:space="preserve">
          <source>Be aware of these messages if you wish to avoid certain death.</source>
          <target state="translated">특정 사망을 피하려면이 메시지에 유의하십시오.</target>
        </trans-unit>
        <trans-unit id="2defb54705edcfb612c59a1d2263b92dd0a57703" translate="yes" xml:space="preserve">
          <source>Be sure to exclude &lt;code&gt;vendor&lt;/code&gt; from your &lt;code&gt;_config.yml&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 에서 &lt;code&gt;vendor&lt;/code&gt; 를 제외해야합니다.</target>
        </trans-unit>
        <trans-unit id="613a0eb5cad777c168f393ad021f7109032eab40" translate="yes" xml:space="preserve">
          <source>Be sure to move posts into custom collections directory</source>
          <target state="translated">게시물을 사용자 정의 콜렉션 디렉토리로 이동하십시오.</target>
        </trans-unit>
        <trans-unit id="77d9037660c9adfeeab8fb0fd1207a67dcca339c" translate="yes" xml:space="preserve">
          <source>Be sure to name your directories correctly</source>
          <target state="translated">디렉토리 이름을 올바르게 지정하십시오</target>
        </trans-unit>
        <trans-unit id="8f773e88487ad00bf7964e99fba2175c4d9f1a3c" translate="yes" xml:space="preserve">
          <source>Be sure to run &lt;code&gt;bundle update&lt;/code&gt; often.</source>
          <target state="translated">&lt;code&gt;bundle update&lt;/code&gt; 자주 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="8cdb8c79d04d4c7da9fea4412e983f2a65ca07b9" translate="yes" xml:space="preserve">
          <source>Because Jekyll grabs the first paragraph you will not need to wrap the excerpt in &lt;code&gt;p&lt;/code&gt; tags, which is already done for you. These tags can be removed with the following if you&amp;rsquo;d prefer:</source>
          <target state="translated">Jekyll은 첫 번째 단락을 잡기 때문에 발췌 부분을 &lt;code&gt;p&lt;/code&gt; 태그 로 감싸지 않아도됩니다 . 원하는 경우 다음 태그를 사용하여 이러한 태그를 제거 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9d8d043ff085958741587b19763f0626a357071d" translate="yes" xml:space="preserve">
          <source>Before we dive in, go ahead and fetch the latest version of Jekyll:</source>
          <target state="translated">우리가 뛰어 들기 전에 Jekyll의 최신 버전을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="949e577706a9784386c559b8faada6b06afe303f" translate="yes" xml:space="preserve">
          <source>Before you start developing with Jekyll, you may want to check that you&amp;rsquo;re up to date with the latest version. To find your version of Jekyll, run one of these commands:</source>
          <target state="translated">Jekyll로 개발을 시작하기 전에 최신 버전을 사용하고 있는지 확인하십시오. Jekyll의 버전을 찾으려면 다음 명령 중 하나를 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="951e78e0b8dcc652a5ba804efa17db981e42b27c" translate="yes" xml:space="preserve">
          <source>Below is a converter that will take all posts ending in &lt;code&gt;.upcase&lt;/code&gt; and process them using the &lt;code&gt;UpcaseConverter&lt;/code&gt;:</source>
          <target state="translated">다음으로 끝나는 모든 게시물 걸릴 것 컨버터입니다 &lt;code&gt;.upcase&lt;/code&gt; 을 사용하여 및 처리 &lt;code&gt;UpcaseConverter&lt;/code&gt; 는 :</target>
        </trans-unit>
        <trans-unit id="686594d5bdad0eca7d18c68dad80be5b7aa7a10a" translate="yes" xml:space="preserve">
          <source>Between these triple-dashed lines, you can set predefined variables (see below for a reference) or even create custom ones of your own. These variables will then be available to you to access using Liquid tags both further down in the file and also in any layouts or includes that the page or post in question relies on.</source>
          <target state="translated">이 3 중 점선 사이에서 사전 정의 된 변수를 설정하거나 (참조는 아래 참조) 사용자 정의 변수를 만들 수도 있습니다. 그러면이 변수를 사용하여 파일과 레이아웃에서 추가로 액체 태그를 사용하여 액세스 할 수 있으며 해당 페이지 또는 게시물이 의존하는 것도 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="6eb86dfbd19335d4cb7ada8e4ed2e9ceb880f893" translate="yes" xml:space="preserve">
          <source>Beware the page one edge-case</source>
          <target state="translated">한 페이지의 가장자리를 조심하십시오</target>
        </trans-unit>
        <trans-unit id="7dc2c48c5bd55af2199541c0acc52f3bd4b86561" translate="yes" xml:space="preserve">
          <source>Blog migrations</source>
          <target state="translated">블로그 이전</target>
        </trans-unit>
        <trans-unit id="a3f1b2d6402f6ef5b2c10b133db84c2f130c0147" translate="yes" xml:space="preserve">
          <source>Blogging with Git, Emacs and Jekyll</source>
          <target state="translated">Git, Emacs 및 Jekyll과의 블로깅</target>
        </trans-unit>
        <trans-unit id="c313514a43c03233a10eee492ec7747bdc4a258b" translate="yes" xml:space="preserve">
          <source>Both &lt;a href=&quot;../github-pages/index&quot;&gt;GitHub Pages&lt;/a&gt; and the Jekyll&amp;rsquo;s built-in WEBrick server handle these requests properly without any additional work.</source>
          <target state="translated">모두 &lt;a href=&quot;../github-pages/index&quot;&gt;GitHub의 페이지&lt;/a&gt; 및 추가 작업없이 이러한 요청을 제대로 지킬의에 WEBrick 내장 된 서버 핸들입니다.</target>
        </trans-unit>
        <trans-unit id="fd88b40593be9f2a2e5bc98ed267c6d38aa245ef" translate="yes" xml:space="preserve">
          <source>Both methods work fine (and can be used in conjunction with each other), with the only real difference being the resulting URLs. By default, pages retain the same folder structure in &lt;code&gt;_site&lt;/code&gt; as they do in the source directory.</source>
          <target state="translated">두 가지 방법 모두 잘 작동하며 서로 연계하여 사용할 수 있으며 결과 URL 만 유일한 차이가 있습니다. 기본적으로 페이지는 &lt;code&gt;_site&lt;/code&gt; 에서 소스 디렉토리 와 동일한 폴더 구조를 유지합니다 .</target>
        </trans-unit>
        <trans-unit id="1e264b9b1da1bc2248ad6e403d7cb832f59d925a" translate="yes" xml:space="preserve">
          <source>Buddy</source>
          <target state="translated">Buddy</target>
        </trans-unit>
        <trans-unit id="f83e6566847cd2858f5d961f4fd6dfba3d1b2116" translate="yes" xml:space="preserve">
          <source>Build Command Options</source>
          <target state="translated">빌드 명령 옵션</target>
        </trans-unit>
        <trans-unit id="d9205936192af57ca7397f5a5194bd0524f3f7d6" translate="yes" xml:space="preserve">
          <source>Build your site:</source>
          <target state="translated">귀하의 사이트를 구축하십시오 :</target>
        </trans-unit>
        <trans-unit id="152728652bdbb67cd9f36011996afc633c2f19cb" translate="yes" xml:space="preserve">
          <source>Building a Jekyll site with the default theme is just the first step. The real magic happens when you start creating blog posts, using the front matter to control templates and layouts, and taking advantage of all the awesome configuration options Jekyll makes available.</source>
          <target state="translated">기본 테마로 Jekyll 사이트를 구축하는 것은 첫 단계입니다. 블로그 글을 작성하고 템플릿과 레이아웃을 제어하기 위해 프론트 글을 사용하고 Jekyll이 제공하는 모든 멋진 구성 옵션을 활용하면 진정한 마술이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fca5671d610769d99c294d73b43ea026de90fdca" translate="yes" xml:space="preserve">
          <source>Building, testing, and deploying your Jekyll-generated website can quickly be done with &lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt;, a continuous integration &amp;amp; delivery tool. CircleCI supports &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; and &lt;a href=&quot;https://bitbucket.org/&quot;&gt;Bitbucket&lt;/a&gt;, and you can get started for free using an open-source or private repository.</source>
          <target state="translated">지속적인 통합 및 제공 도구 인 &lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI를 사용&lt;/a&gt; 하여 Jekyll에서 생성 한 웹 사이트를 구축, 테스트 및 배포 할 수 있습니다 . CircleCI는 &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; 및 &lt;a href=&quot;https://bitbucket.org/&quot;&gt;Bitbucket을&lt;/a&gt; 지원 하며 오픈 소스 또는 개인 저장소를 사용하여 무료로 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f4f43ed2bb6792eeb5eab2136f57f66c1c8e7bee" translate="yes" xml:space="preserve">
          <source>Built-in permalink styles</source>
          <target state="translated">내장 퍼머 링크 스타일</target>
        </trans-unit>
        <trans-unit id="2599019d616c6318b93ec4d83b00b75c7f01f933" translate="yes" xml:space="preserve">
          <source>Built-in permalink styles are not recognized in YAML Front Matter. As a result, &lt;code&gt;permalink: pretty&lt;/code&gt; will not work.</source>
          <target state="translated">내장 퍼머 링크 스타일은 YAML Front Matter에서 인식되지 않습니다. 결과적으로 &lt;code&gt;permalink: pretty&lt;/code&gt; 는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="621d1a3cf7230abca2de96aca4a75f0ffc755860" translate="yes" xml:space="preserve">
          <source>By default you should supply the &lt;code&gt;sudo: false&lt;/code&gt; command to Travis. This command explicitly tells Travis to run your build on Travis&amp;rsquo;s &lt;a href=&quot;https://docs.travis-ci.com/user/workers/container-based-infrastructure/#Routing-your-build-to-container-based-infrastructure&quot;&gt;container-based infrastructure&lt;/a&gt;. Running on the container-based infrastructure can often times speed up your build. If you have any trouble with your build, or if your build does need &lt;code&gt;sudo&lt;/code&gt; access, modify the line to &lt;code&gt;sudo: required&lt;/code&gt;.</source>
          <target state="translated">기본적으로 &lt;code&gt;sudo: false&lt;/code&gt; 명령을 Travis에 제공해야합니다. 이 명령은 Travis에게 Travis의 &lt;a href=&quot;https://docs.travis-ci.com/user/workers/container-based-infrastructure/#Routing-your-build-to-container-based-infrastructure&quot;&gt;컨테이너 기반 인프라&lt;/a&gt; 에서 빌드를 실행하도록 명시 적으로 지시합니다 . 컨테이너 기반 인프라에서 실행하면 빌드 속도가 빨라질 수 있습니다. 빌드에 문제가 있거나 빌드에 &lt;code&gt;sudo&lt;/code&gt; 액세스 가 필요한 경우 &lt;code&gt;sudo: required&lt;/code&gt; 행을 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="5eef4129ac2b6a9c1f6733e98f49513d7b7c6050" translate="yes" xml:space="preserve">
          <source>By default, collections follow a similar structure in the &lt;code&gt;_site&lt;/code&gt; folder as pages, except that the path is prefaced by the collection name. For example: &lt;code&gt;collectionname/mypage.html&lt;/code&gt;. For permalink settings that omit the file extension, the path would be &lt;code&gt;collection_name/mypage/index.html&lt;/code&gt;.</source>
          <target state="translated">기본적으로 컬렉션 은 경로가 컬렉션 이름으로 시작된다는 점을 제외하고 &lt;code&gt;_site&lt;/code&gt; 폴더에서 페이지 와 유사한 구조를 따릅니다 . 예를 들어 &lt;code&gt;collectionname/mypage.html&lt;/code&gt; 입니다. 파일 확장자를 생략하는 퍼머 링크 설정의 경우 경로는 &lt;code&gt;collection_name/mypage/index.html&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="693277f3a88e879e2528605092b48a3926bc1744" translate="yes" xml:space="preserve">
          <source>By default, the Jekyll site installed by &lt;code&gt;jekyll new&lt;/code&gt; uses a gem-based theme called &lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Minima&lt;/a&gt;. With &lt;a href=&quot;../themes/index&quot;&gt;gem-based themes&lt;/a&gt;, some of the directories and files are stored in the theme-gem, hidden from your immediate view.</source>
          <target state="translated">기본적으로 &lt;code&gt;jekyll new&lt;/code&gt; 에서 설치 한 Jekyll 사이트 는 &lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;Minima&lt;/a&gt; 라는 보석 기반 테마를 사용합니다 . 함께 &lt;a href=&quot;../themes/index&quot;&gt;보석 기반 테마&lt;/a&gt; , 디렉토리와 파일의 일부는 테마 보석에 저장되는 즉시보기에서 숨겨진.</target>
        </trans-unit>
        <trans-unit id="b6cc0937790c3a5d08cce726bcbc5fd2b643173b" translate="yes" xml:space="preserve">
          <source>By specifying the option in the build command, you avoid having to change values in your configuration files when moving from one environment to another.</source>
          <target state="translated">build 명령에서 옵션을 지정하면 한 환경에서 다른 환경으로 이동할 때 구성 파일의 값을 변경하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="b4956292a441b1089ee05484419bad578ef33ce5" translate="yes" xml:space="preserve">
          <source>CGI escape a string for use in a URL. Replaces any special characters with appropriate &lt;code&gt;%XX&lt;/code&gt; replacements. CGI escape normally replaces a space with a plus &lt;code&gt;+&lt;/code&gt; sign.</source>
          <target state="translated">CGI는 URL에서 사용하기 위해 문자열을 이스케이프합니다. 특수 문자를 적절한 &lt;code&gt;%XX&lt;/code&gt; 대체로 바꿉니다 . CGI 이스케이프는 일반적으로 공백을 더하기 &lt;code&gt;+&lt;/code&gt; 부호로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="fa3a83b1b97e24520de99b3a2a31c2abc6475041" translate="yes" xml:space="preserve">
          <source>Call for help</source>
          <target state="translated">도움을 요청해라</target>
        </trans-unit>
        <trans-unit id="80bb4391f3498b89bc8324ebe3e4405065309a66" translate="yes" xml:space="preserve">
          <source>Called</source>
          <target state="translated">Called</target>
        </trans-unit>
        <trans-unit id="5a3a642a880f028a70f0e805af57609d46024c5d" translate="yes" xml:space="preserve">
          <source>Cause a build to fail if there is a YAML syntax error in a page's front matter.</source>
          <target state="translated">페이지 전면에 YAML 구문 오류가 있으면 빌드가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="28e3e76919ab20eb9e63cb91fae66f81774b7ab3" translate="yes" xml:space="preserve">
          <source>Certificate-based authorization is another way to simplify the publishing process. It makes sense to restrict rsync access only to the directory which it is supposed to sync. This can be done using rrsync.</source>
          <target state="translated">인증서 기반 인증은 게시 프로세스를 단순화하는 또 다른 방법입니다. rsync 액세스를 동기화하려는 디렉토리로만 제한하는 것이 좋습니다. rrsync를 사용하여 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aab1f6e25ea4ec08548ac36b489b950e49e73f1f" translate="yes" xml:space="preserve">
          <source>Chances are, at some point, you&amp;rsquo;ll want to include images, downloads, or other digital assets along with your text content. While the syntax for linking to these resources differs between Markdown and Textile, the problem of working out where to store these files in your site is something everyone will face.</source>
          <target state="translated">언젠가는 텍스트 콘텐츠와 함께 이미지, 다운로드 또는 기타 디지털 자산을 포함하고 싶을 것입니다. 이러한 리소스에 대한 링크 구문은 Markdown과 Textile간에 다르지만 이러한 파일을 사이트에 저장할 위치를 찾는 문제는 모든 사람이 직면하게 될 문제입니다.</target>
        </trans-unit>
        <trans-unit id="3df70154397a0d17736ca43940de88f92eb475da" translate="yes" xml:space="preserve">
          <source>Change the directory where Jekyll will read files</source>
          <target state="translated">Jekyll이 파일을 읽을 디렉토리를 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="5f2dd44c3664cadb42dde8bf133254ba77c223e3" translate="yes" xml:space="preserve">
          <source>Change the directory where Jekyll will write files</source>
          <target state="translated">Jekyll이 파일을 작성할 디렉토리를 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="1344d41909e8d9420edb30c8e4d504db9096055e" translate="yes" xml:space="preserve">
          <source>Changes to &lt;code&gt;_config.yml&lt;/code&gt; are not included during automatic regeneration.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 에 대한 변경 사항 은 자동 재생성 중에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d61902876c0f7e3b6e12cda6f00c23c8789ab247" translate="yes" xml:space="preserve">
          <source>Check if Jekyll installed properly by running:</source>
          <target state="translated">다음을 실행하여 Jekyll이 올바르게 설치되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b0d59a0b568491a42608d74dd52b58f31070d8fd" translate="yes" xml:space="preserve">
          <source>Check if Jekyll installed properly: &lt;code&gt;jekyll -v&lt;/code&gt;</source>
          <target state="translated">Jekyll이 제대로 설치되었는지 확인하십시오 : &lt;code&gt;jekyll -v&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="553556474e1bfe3b5ff9566258474b25adb0d0fc" translate="yes" xml:space="preserve">
          <source>Check out the &lt;a href=&quot;../troubleshooting/index&quot;&gt;troubleshooting&lt;/a&gt; page or &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;report an issue&lt;/a&gt; so the Jekyll community can improve the experience for everyone.</source>
          <target state="translated">Jekyll 커뮤니티가 모든 사람의 경험을 향상시킬 수 있도록 &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;문제 &lt;/a&gt;&lt;a href=&quot;../troubleshooting/index&quot;&gt;해결&lt;/a&gt; 페이지를 확인 하거나 문제를보고 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a3f94a307f7438c7f318a50c87c20ca4010679c6" translate="yes" xml:space="preserve">
          <source>Choose your Git provider and select or push your Jekyll Project</source>
          <target state="translated">Git 제공 업체를 선택하고 Jekyll 프로젝트를 선택하거나 푸시하십시오</target>
        </trans-unit>
        <trans-unit id="743a2d5609a7296d3d734c6e0b1f6d37a8c23170" translate="yes" xml:space="preserve">
          <source>CircleCI</source>
          <target state="translated">CircleCI</target>
        </trans-unit>
        <trans-unit id="f09bdc4be91901905da38a5f144186bc201d0da3" translate="yes" xml:space="preserve">
          <source>CircleCI detects when &lt;code&gt;Gemfile&lt;/code&gt; is present is will automatically run &lt;code&gt;bundle install&lt;/code&gt; for you in the &lt;code&gt;dependencies&lt;/code&gt; phase.</source>
          <target state="translated">CircleCI는 &lt;code&gt;Gemfile&lt;/code&gt; 이 존재하는 시기를 감지 하여 &lt;code&gt;dependencies&lt;/code&gt; 단계 에서 자동으로 &lt;code&gt;bundle install&lt;/code&gt; 를 실행 합니다 .</target>
        </trans-unit>
        <trans-unit id="684ee3f844d427c7784d1fcfed2dc90525843395" translate="yes" xml:space="preserve">
          <source>Code snippet highlighting</source>
          <target state="translated">코드 스 니펫 강조</target>
        </trans-unit>
        <trans-unit id="16ece1fc31982c92e746ba091ae5b244a9958371" translate="yes" xml:space="preserve">
          <source>Coffeescript</source>
          <target state="translated">Coffeescript</target>
        </trans-unit>
        <trans-unit id="4bbb632f02fd69807705c0179999c17d35c93b0f" translate="yes" xml:space="preserve">
          <source>Collections</source>
          <target state="translated">Collections</target>
        </trans-unit>
        <trans-unit id="86e6ce0b0753688beb0c5f46b73432e1a79a9a62" translate="yes" xml:space="preserve">
          <source>Collections have their own way of setting permalinks. Additionally, collections have unique template variables available (such as &lt;code&gt;path&lt;/code&gt; and &lt;code&gt;output_ext&lt;/code&gt;). See the &lt;a href=&quot;../collections/index#permalinks&quot;&gt;Configuring permalinks for collections&lt;/a&gt; in Collections for more information.</source>
          <target state="translated">컬렉션에는 퍼머 링크를 설정하는 고유 한 방법이 있습니다. 또한 컬렉션에는 고유 한 템플릿 변수 (예 : &lt;code&gt;path&lt;/code&gt; 및 &lt;code&gt;output_ext&lt;/code&gt; )가 있습니다. 자세한 정보 &lt;a href=&quot;../collections/index#permalinks&quot;&gt;는 콜렉션&lt;/a&gt; 에서 콜렉션에 대한 퍼머 링크 구성 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="12315e87ef6cce6063977163d3028d04e86bf126" translate="yes" xml:space="preserve">
          <source>Command line parameters are:</source>
          <target state="translated">명령 행 매개 변수는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="55f762509dfccf0ee911ab36a06b33dcc5e43eb4" translate="yes" xml:space="preserve">
          <source>Command-line flags</source>
          <target state="translated">명령 줄 플래그</target>
        </trans-unit>
        <trans-unit id="45e5f3f72e961cb70134ba35f7a27a9620e515f7" translate="yes" xml:space="preserve">
          <source>Commands</source>
          <target state="translated">Commands</target>
        </trans-unit>
        <trans-unit id="fddcc55198459fd62d7ef3bb8b51b5708e3ec07e" translate="yes" xml:space="preserve">
          <source>Commands should implement this single class method:</source>
          <target state="translated">명령은이 단일 클래스 메소드를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="28d11d5188e8b61364d0c749fe2bc9461093c07c" translate="yes" xml:space="preserve">
          <source>Complete Example circle.yml File</source>
          <target state="translated">circle.yml 파일 예제 완성</target>
        </trans-unit>
        <trans-unit id="f74e69bf01cb6bfbf1c04f4baee800f53181a8c9" translate="yes" xml:space="preserve">
          <source>Completely disable excerpts by setting your &lt;code&gt;excerpt_separator&lt;/code&gt; to &lt;code&gt;&quot;&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;excerpt_separator&lt;/code&gt; 를 &lt;code&gt;&quot;&quot;&lt;/code&gt; 로 설정하여 발췌를 완전히 비활성화하십시오 .</target>
        </trans-unit>
        <trans-unit id="754164850f38c1ecdaf6b8ed894cb192bc36c5f4" translate="yes" xml:space="preserve">
          <source>Configuration</source>
          <target state="translated">Configuration</target>
        </trans-unit>
        <trans-unit id="fea267da4cb15e9467e6a19b1d5cffdd628a294e" translate="yes" xml:space="preserve">
          <source>Configuration Settings</source>
          <target state="translated">구성 설정</target>
        </trans-unit>
        <trans-unit id="23780f67b9c5d802e162f80cd175fc9ca05fb6c0" translate="yes" xml:space="preserve">
          <source>Configuration file settings</source>
          <target state="translated">구성 파일 설정</target>
        </trans-unit>
        <trans-unit id="8dd84a276390b10b52fb74b481821218422a715a" translate="yes" xml:space="preserve">
          <source>Configuration problems</source>
          <target state="translated">구성 문제</target>
        </trans-unit>
        <trans-unit id="7b5b966a605c35048715b3dba3e0eae84850facb" translate="yes" xml:space="preserve">
          <source>Configure Ruby development kit</source>
          <target state="translated">Ruby 개발 키트 구성</target>
        </trans-unit>
        <trans-unit id="48650e6e1647471ab2735d98c8eb638c9f5e06fc" translate="yes" xml:space="preserve">
          <source>Configuring permalinks for collections</source>
          <target state="translated">컬렉션을위한 퍼머 링크 구성</target>
        </trans-unit>
        <trans-unit id="e6443af99d2f470f50affd5057bf48db2d09dae4" translate="yes" xml:space="preserve">
          <source>Container</source>
          <target state="translated">Container</target>
        </trans-unit>
        <trans-unit id="1c404b6fdb495efae349dfb0ca83f26fda7d9e77" translate="yes" xml:space="preserve">
          <source>Contains the url of your site as it is configured in the &lt;code&gt;_config.yml&lt;/code&gt;. For example, if you have &lt;code&gt;url: http://mysite.com&lt;/code&gt; in your configuration file, then it will be accessible in Liquid as &lt;code&gt;site.url&lt;/code&gt;. For the development environment there is &lt;a href=&quot;https://jekyllrb.com/news/#3-siteurl-is-set-by-the-development-server&quot;&gt;an exception&lt;/a&gt;, if you are running &lt;code&gt;jekyll serve&lt;/code&gt; in a development environment &lt;code&gt;site.url&lt;/code&gt; will be set to the value of &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt;, and SSL-related options. This defaults to &lt;code&gt;url: http://localhost:4000&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 에 구성된 사이트의 URL을 포함합니다 . 예를 들어, 구성 파일에 &lt;code&gt;url: http://mysite.com&lt;/code&gt; 이 있으면 Liquid에서 &lt;code&gt;site.url&lt;/code&gt; 로 액세스 할 수 있습니다 . 개발 환경의 경우이 &lt;a href=&quot;https://jekyllrb.com/news/#3-siteurl-is-set-by-the-development-server&quot;&gt;예외가&lt;/a&gt; 실행중인 경우, &lt;code&gt;jekyll serve&lt;/code&gt; 개발 환경에서 &lt;code&gt;site.url&lt;/code&gt; 의 값으로 설정됩니다 &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;port&lt;/code&gt; 및 SSL 관련 옵션을 제공합니다. 기본값은 &lt;code&gt;url: http://localhost:4000&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8517a1315218390f45dc7c05447fa1bf72087fe1" translate="yes" xml:space="preserve">
          <source>Content Formats</source>
          <target state="translated">컨텐츠 형식</target>
        </trans-unit>
        <trans-unit id="5c7a4d21b47ea6ded9d33169ed7a79b049c3b420" translate="yes" xml:space="preserve">
          <source>Content from the &lt;code&gt;master&lt;/code&gt; branch of your repository will be used to build and publish the GitHub Pages site, so make sure your Jekyll site is stored there.</source>
          <target state="translated">저장소 의 &lt;code&gt;master&lt;/code&gt; 브랜치의 컨텐츠 는 GitHub 페이지 사이트를 빌드하고 공개하는 데 사용되므로 Jekyll 사이트가 저장되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="ec75ef085a6b7fdce9179edd6e9d7d5828c7133c" translate="yes" xml:space="preserve">
          <source>Content processors can modify certain characters to make them look nicer. For example, the &lt;code&gt;smart&lt;/code&gt; extension in Redcarpet converts standard, ASCII quotation characters to curly, Unicode ones. In order for the browser to display those characters properly, define the charset meta value by including &lt;code&gt;&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;&lt;/code&gt; in the &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; of your layout.</source>
          <target state="translated">컨텐츠 프로세서는 특정 문자를 더 멋지게 보이도록 수정할 수 있습니다. 예를 들어, Redcarpet 의 &lt;code&gt;smart&lt;/code&gt; 확장은 표준 ASCII 인용 문자를 둥근 유니 코드 문자로 변환합니다. 브라우저가 해당 문자를 올바르게 표시하려면 레이아웃 의 &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt; 에 &lt;code&gt;&amp;lt;meta charset=&quot;utf-8&quot;&amp;gt;&lt;/code&gt; 을 포함시켜 문자 세트 메타 값을 정의하십시오 .</target>
        </trans-unit>
        <trans-unit id="7a302c3f9cf2b3cec42c41ee9b6ddfb04d9516a9" translate="yes" xml:space="preserve">
          <source>Continuous Integration</source>
          <target state="translated">지속적인 통합</target>
        </trans-unit>
        <trans-unit id="614b64fee68cd582e5c028f9421509c02ad3e2b8" translate="yes" xml:space="preserve">
          <source>Continuous Integration (CI) enables you to publish your Jekyll generated website with confidence by automating the quality assurance and deployment processes. You can quickly get started using CI with one of the providers below:</source>
          <target state="translated">CI (Continuous Integration)를 사용하면 품질 보증 및 배포 프로세스를 자동화하여 Jekyll에서 생성 한 웹 사이트를 자신있게 게시 할 수 있습니다. 아래 공급자 중 하나를 사용하여 CI를 빠르게 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c778158b4925610dff9ad043f2865a6b87400df6" translate="yes" xml:space="preserve">
          <source>Convert &quot;quotes&quot; into &amp;ldquo;smart quotes.&amp;rdquo;</source>
          <target state="translated">&quot;따옴표&quot;를 &quot;스마트 따옴표&quot;로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="a18515cb3f9eab29523cc0de5173a4cd82b1a3f7" translate="yes" xml:space="preserve">
          <source>Convert Hash or Array to JSON.</source>
          <target state="translated">해시 또는 배열을 JSON으로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="50fb2eb4e787142ae51bdd8108a700b19ab279da" translate="yes" xml:space="preserve">
          <source>Convert a Date into XML Schema (ISO 8601) format.</source>
          <target state="translated">날짜를 XML 스키마 (ISO 8601) 형식으로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="9c2812967f1b6dfa92d8adf4e07e393b76f6ccaf" translate="yes" xml:space="preserve">
          <source>Convert a Date into the RFC-822 format used for RSS feeds.</source>
          <target state="translated">RSS 피드에 사용되는 날짜를 RFC-822 형식으로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="b8a9ed24f57f5c52d85beefb2e7ec2c2fb03fb59" translate="yes" xml:space="preserve">
          <source>Convert a Markdown-formatted string into HTML.</source>
          <target state="translated">마크 다운 형식의 문자열을 HTML로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="e7d7e38dfe580aa0164d83fbba038b3d87fafd51" translate="yes" xml:space="preserve">
          <source>Convert a Sass- or SCSS-formatted string into CSS.</source>
          <target state="translated">Sass 또는 SCSS 형식의 문자열을 CSS로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="50f6dee8c33e9a8d09b4884234bdca744aedd2d7" translate="yes" xml:space="preserve">
          <source>Convert a date to short format.</source>
          <target state="translated">날짜를 짧은 형식으로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="d02ea101781b1f60d83c14f5d5a2687834021e09" translate="yes" xml:space="preserve">
          <source>Convert a string into a lowercase URL &quot;slug&quot;. See below for options.</source>
          <target state="translated">문자열을 소문자 URL &quot;슬러그&quot;로 변환하십시오. 옵션은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="feedee175bcca21c8b35cd592a24214dffff2399" translate="yes" xml:space="preserve">
          <source>Convert a string or boolean to integer.</source>
          <target state="translated">문자열 또는 부울을 정수로 변환하십시오.</target>
        </trans-unit>
        <trans-unit id="7386dddf3f6d37387987567d02cd16ca94fd13c7" translate="yes" xml:space="preserve">
          <source>Convert an array into a sentence. Useful for listing tags. Optional argument for connector.</source>
          <target state="translated">배열을 문장으로 변환합니다. 태그를 나열하는 데 유용합니다. 커넥터의 선택적 인수입니다.</target>
        </trans-unit>
        <trans-unit id="3dc3b3e61a3d6376f092b9e7bca51ff02706a1be" translate="yes" xml:space="preserve">
          <source>Convert an object into its String representation for debugging.</source>
          <target state="translated">디버깅을 위해 객체를 문자열 표현으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="6a89fde6d6a92b19247264815bcda3f0b2c24bd4" translate="yes" xml:space="preserve">
          <source>Converters</source>
          <target state="translated">Converters</target>
        </trans-unit>
        <trans-unit id="a74fac8ce61b574f4d36c9866eea1c269cbfeecd" translate="yes" xml:space="preserve">
          <source>Converters should implement at a minimum 3 methods:</source>
          <target state="translated">변환기는 최소한 3 가지 방법을 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="0768eb3a3c6bfd65b442cfe91da8b3aeae06b933" translate="yes" xml:space="preserve">
          <source>Converting gem-based themes to regular themes</source>
          <target state="translated">보석 기반 테마를 일반 테마로 변환</target>
        </trans-unit>
        <trans-unit id="3eed4ec1980027b6107cc4818b5d38ec0c0b7903" translate="yes" xml:space="preserve">
          <source>Copy &amp;amp; paste the two lines into the file:</source>
          <target state="translated">두 줄을 파일에 복사하여 붙여 넣습니다.</target>
        </trans-unit>
        <trans-unit id="0757a803bb920bf5723747a5aecea0d6a09caec6" translate="yes" xml:space="preserve">
          <source>Could not find a JavaScript runtime. (ExecJS::RuntimeUnavailable)</source>
          <target state="translated">JavaScript 런타임을 찾을 수 없습니다. (ExecJS :: RuntimeUnavailable)</target>
        </trans-unit>
        <trans-unit id="72eae6e24b0500f8e90f93b465bc5a66328b7709" translate="yes" xml:space="preserve">
          <source>Count the number of words in some text.</source>
          <target state="translated">일부 텍스트의 단어 수를 세십시오.</target>
        </trans-unit>
        <trans-unit id="3088d0b82a3077381e3aa668c098883ac5fbed6c" translate="yes" xml:space="preserve">
          <source>Create a corresponding folder (e.g. &lt;code&gt;&amp;lt;source&amp;gt;/_my_collection&lt;/code&gt;) and add documents. YAML front matter is processed if the front matter exists, and everything after the front matter is pushed into the document&amp;rsquo;s &lt;code&gt;content&lt;/code&gt; attribute. If no YAML front matter is provided, Jekyll will not generate the file in your collection.</source>
          <target state="translated">해당 폴더 (예 : &lt;code&gt;&amp;lt;source&amp;gt;/_my_collection&lt;/code&gt; )를 작성하고 문서를 추가하십시오. YAML 프론트 어는 프론트 어가 존재하는 경우 처리되며, 프론트 어 이후의 모든 것이 문서의 &lt;code&gt;content&lt;/code&gt; 속성 으로 푸시됩니다 . YAML 프론트가 제공되지 않으면 Jekyll은 컬렉션에 파일을 생성하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="08d8349b04553540811d13e71ca8db505813ec56" translate="yes" xml:space="preserve">
          <source>Create a file called &lt;code&gt;Gemfile&lt;/code&gt; without any extension in your root directory of your blog</source>
          <target state="translated">블로그의 루트 디렉토리에 확장자없이 &lt;code&gt;Gemfile&lt;/code&gt; 이라는 파일을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="57f1d957bcf015b70d27119d4375bf72379d4af3" translate="yes" xml:space="preserve">
          <source>Create a new pipeline and set the trigger mode to &amp;lsquo;On every push&amp;rsquo;</source>
          <target state="translated">새 파이프 라인을 생성하고 트리거 모드를 '모든 푸시시'로 설정</target>
        </trans-unit>
        <trans-unit id="0a7137a175f9abf7715e02185e1abb3b1a97b148" translate="yes" xml:space="preserve">
          <source>Creating Post Files</source>
          <target state="translated">게시물 파일 만들기</target>
        </trans-unit>
        <trans-unit id="f16ef7a94c56c61fddd0a3cb8b18d00a1a4c16e1" translate="yes" xml:space="preserve">
          <source>Creating a gem-based theme</source>
          <target state="translated">보석 기반 테마 만들기</target>
        </trans-unit>
        <trans-unit id="479bbad0b904bece0f9d9a89fec5b3eb6cfb680c" translate="yes" xml:space="preserve">
          <source>Creating pages</source>
          <target state="translated">페이지 만들기</target>
        </trans-unit>
        <trans-unit id="874e1b73bd118a974761952ba007375c242cddec" translate="yes" xml:space="preserve">
          <source>Custom Config File</source>
          <target state="translated">사용자 설정 파일</target>
        </trans-unit>
        <trans-unit id="8945503681a5077cbd94b16823eb30aaaae009ab" translate="yes" xml:space="preserve">
          <source>Custom Markdown Processors</source>
          <target state="translated">커스텀 마크 다운 프로세서</target>
        </trans-unit>
        <trans-unit id="5119d72fecfc71706e08e717c4c9b2529f240e53" translate="yes" xml:space="preserve">
          <source>Custom Variables</source>
          <target state="translated">맞춤 변수</target>
        </trans-unit>
        <trans-unit id="bf3fbe65d584a21b69fff25f6490b10953f30bcf" translate="yes" xml:space="preserve">
          <source>Custom WEBrick Headers</source>
          <target state="translated">커스텀 WEBrick 헤더</target>
        </trans-unit>
        <trans-unit id="2dc243801718be9d8bf44d72849ade84f72e4aca" translate="yes" xml:space="preserve">
          <source>Custom domains do not affect repository names</source>
          <target state="translated">사용자 정의 도메인은 저장소 이름에 영향을 미치지 않습니다</target>
        </trans-unit>
        <trans-unit id="d7f0ac9e007291a6ccc21d036f4711505ad9d0b1" translate="yes" xml:space="preserve">
          <source>Customization</source>
          <target state="translated">Customization</target>
        </trans-unit>
        <trans-unit id="b922291aa68d5ce0abb7037b3282f3856db7513f" translate="yes" xml:space="preserve">
          <source>Data Files</source>
          <target state="translated">데이터 파일</target>
        </trans-unit>
        <trans-unit id="157b415e5a282b130f9372325266edc343248ffa" translate="yes" xml:space="preserve">
          <source>Data files can also be placed in sub-folders of the &lt;code&gt;_data&lt;/code&gt; folder. Each folder level will be added to a variable&amp;rsquo;s namespace. The example below shows how GitHub organizations could be defined separately in a file under the &lt;code&gt;orgs&lt;/code&gt; folder:</source>
          <target state="translated">데이터 파일은 &lt;code&gt;_data&lt;/code&gt; 폴더의 하위 폴더에 배치 할 수도 있습니다 . 각 폴더 수준은 변수의 네임 스페이스에 추가됩니다. 아래 예는 &lt;code&gt;orgs&lt;/code&gt; 폴더 아래의 파일에서 GitHub 조직을 개별적으로 정의하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="d9a70625687bdeeb9816853e20994746301f73e1" translate="yes" xml:space="preserve">
          <source>Day from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">게시물의 파일 이름부터 하루 문서의 &lt;code&gt;date&lt;/code&gt; YAML 관련 사항을 통해 무시 될 수 있음</target>
        </trans-unit>
        <trans-unit id="6fa25b9b9ed1e705666752da8a12385defe8771d" translate="yes" xml:space="preserve">
          <source>Day of the year from the post's filename, with leading zeros.</source>
          <target state="translated">게시물의 파일 이름에서 연도 0으로 시작합니다.</target>
        </trans-unit>
        <trans-unit id="e01e28bbadbdce263dd91b769ae971f11ac8713a" translate="yes" xml:space="preserve">
          <source>Day without leading zeros from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">게시물의 파일 이름에서 선행 0이없는 날입니다. 문서의 &lt;code&gt;date&lt;/code&gt; YAML 관련 사항을 통해 무시 될 수 있음</target>
        </trans-unit>
        <trans-unit id="d7c410ed08cd649b4845058755d627f755f950e7" translate="yes" xml:space="preserve">
          <source>Default Configuration</source>
          <target state="translated">기본 구성</target>
        </trans-unit>
        <trans-unit id="b26262022730a28972ad22f1b5bca5d39c6adcd3" translate="yes" xml:space="preserve">
          <source>Default URL is set to &lt;code&gt;http://localhost:4000&lt;/code&gt; in development environment. 3.3.0</source>
          <target state="translated">개발 환경에서 기본 URL은 &lt;code&gt;http://localhost:4000&lt;/code&gt; 으로 설정됩니다 . 3.3.0</target>
        </trans-unit>
        <trans-unit id="a6bb417c54473861d72ed4f134137eb6856b7deb" translate="yes" xml:space="preserve">
          <source>Default attributes can also be set for a collection:</source>
          <target state="translated">컬렉션에 기본 속성을 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="428819bf9e83cebda50efafb08cd2534c1583949" translate="yes" xml:space="preserve">
          <source>Defaults</source>
          <target state="translated">Defaults</target>
        </trans-unit>
        <trans-unit id="c948c2fff8f6f4731019ba817a9f4869f332087d" translate="yes" xml:space="preserve">
          <source>Deploying Jekyll to GitHub Pages</source>
          <target state="translated">GitHub 페이지에 Jekyll 배포</target>
        </trans-unit>
        <trans-unit id="04d83acb457358e724c07ce68acca9c119bcc093" translate="yes" xml:space="preserve">
          <source>Deploying is now as easy as telling nginx or Apache to look at &lt;code&gt;/var/www/myrepo&lt;/code&gt; and running the following:</source>
          <target state="translated">nginx 또는 Apache에게 &lt;code&gt;/var/www/myrepo&lt;/code&gt; 를보고 다음을 실행하도록 지시 하면 배포가 쉬워집니다 .</target>
        </trans-unit>
        <trans-unit id="327a55f82dc6818877a68e37b722bb7f2360b633" translate="yes" xml:space="preserve">
          <source>Deployment</source>
          <target state="translated">Deployment</target>
        </trans-unit>
        <trans-unit id="415b97bc5570d88528f183c5d71435811b552d1f" translate="yes" xml:space="preserve">
          <source>Deployment methods</source>
          <target state="translated">배포 방법</target>
        </trans-unit>
        <trans-unit id="55f8ebc805e65b5b71ddafdae390e3be2bcd69af" translate="yes" xml:space="preserve">
          <source>Description</source>
          <target state="translated">Description</target>
        </trans-unit>
        <trans-unit id="94f85a83d477896893e7b9c2797c7f129f3bf27a" translate="yes" xml:space="preserve">
          <source>Destination folders are cleaned on site builds</source>
          <target state="translated">사이트 빌드시 대상 폴더가 정리됩니다.</target>
        </trans-unit>
        <trans-unit id="7e85659be9e8bb68fe5f1d7de8c656803d0d3d04" translate="yes" xml:space="preserve">
          <source>Detach the server from the terminal</source>
          <target state="translated">터미널에서 서버를 분리하십시오</target>
        </trans-unit>
        <trans-unit id="07461fdd8bbd77721cfe447edf9e4bd20cbd0023" translate="yes" xml:space="preserve">
          <source>Directory structure</source>
          <target state="translated">디렉토리 구조</target>
        </trans-unit>
        <trans-unit id="f7b88a8798b23fb2bab0e1ffdbca5105797c82f9" translate="yes" xml:space="preserve">
          <source>Directory structure of Jekyll sites using gem-based themes</source>
          <target state="translated">gem 기반 테마를 사용하는 Jekyll 사이트의 디렉토리 구조</target>
        </trans-unit>
        <trans-unit id="cd3ea503c418b2ca6ceff375ecdd9f91b897ee93" translate="yes" xml:space="preserve">
          <source>Disable &lt;a href=&quot;../plugins/index&quot;&gt;custom plugins, and ignore symbolic links&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../plugins/index&quot;&gt;사용자 정의 플러그인을&lt;/a&gt; 비활성화 하고 심볼릭 링크를 무시하십시오 .</target>
        </trans-unit>
        <trans-unit id="8584335b2605c5f0dd9600f794b20a8fd6cee943" translate="yes" xml:space="preserve">
          <source>Displaying an index of posts</source>
          <target state="translated">게시물 색인 표시</target>
        </trans-unit>
        <trans-unit id="756497d4714dba5e8b9c039fe985ae8fcc72d0be" translate="yes" xml:space="preserve">
          <source>Displaying post categories or tags</source>
          <target state="translated">게시물 카테고리 또는 태그 표시</target>
        </trans-unit>
        <trans-unit id="5413434314311e3fdc2eaf828119461e05425c97" translate="yes" xml:space="preserve">
          <source>Diving in</source>
          <target state="translated">다이빙</target>
        </trans-unit>
        <trans-unit id="bed9c981d3ead9ceed6f502f98169d2cdc0faf07" translate="yes" xml:space="preserve">
          <source>Do not use an important location for &lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt;; instead, use it as a staging area and copy files from there to your web server.</source>
          <target state="translated">&lt;code&gt;&amp;lt;destination&amp;gt;&lt;/code&gt; 중요한 위치를 사용하지 마십시오 . 대신 스테이징 영역으로 사용하여 파일을 웹 서버로 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="48b6082650bf93a6e14586d182ed851b4a661d6c" translate="yes" xml:space="preserve">
          <source>Do not use tabs in configuration files</source>
          <target state="translated">구성 파일에서 탭을 사용하지 마십시오</target>
        </trans-unit>
        <trans-unit id="dcc1b361c2ed8fc6f3607ae3fa6c42b632a40822" translate="yes" xml:space="preserve">
          <source>Documenting your theme</source>
          <target state="translated">테마 문서화</target>
        </trans-unit>
        <trans-unit id="687c82861c956e47456186f6522cfc8dbadb8ef6" translate="yes" xml:space="preserve">
          <source>Documents</source>
          <target state="translated">Documents</target>
        </trans-unit>
        <trans-unit id="b0ac647f40074046e8dfae336ecd5c02a8d9e37a" translate="yes" xml:space="preserve">
          <source>Does the given extension match this converter&amp;rsquo;s list of acceptable extensions? Takes one argument: the file&amp;rsquo;s extension (including the dot). Must return &lt;code&gt;true&lt;/code&gt; if it matches, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">주어진 확장자가이 변환기의 허용되는 확장자 목록과 일치합니까? 파일 확장자 (도트 포함)를 인수로 사용합니다. 일치하면 &lt;code&gt;false&lt;/code&gt; 그렇지 않으면 false를 반환해야 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cfc35b21a67a45d6b088d4eee6a0456640742632" translate="yes" xml:space="preserve">
          <source>Don&amp;rsquo;t forget the column &lt;code&gt;:&lt;/code&gt; after server name!</source>
          <target state="translated">열을 잊지 마세요 &lt;code&gt;:&lt;/code&gt; 서버 이름 뒤에!</target>
        </trans-unit>
        <trans-unit id="b17019bf71aa3d339659938be7883606df523a8d" translate="yes" xml:space="preserve">
          <source>Don't forget to add YAML for processing</source>
          <target state="translated">처리를 위해 YAML을 추가하는 것을 잊지 마십시오</target>
        </trans-unit>
        <trans-unit id="df8f6861a03014706909fec51dc390e2ce699f08" translate="yes" xml:space="preserve">
          <source>Don't set a permalink</source>
          <target state="translated">퍼머 링크를 설정하지 마십시오</target>
        </trans-unit>
        <trans-unit id="55823efb45056acba11210535a57d8bf0bf96db0" translate="yes" xml:space="preserve">
          <source>Done!</source>
          <target state="translated">Done!</target>
        </trans-unit>
        <trans-unit id="050415cbe4f97088931bcbdf60b1827878db8417" translate="yes" xml:space="preserve">
          <source>Download and Install a package manager version from &lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;RubyInstaller Downloads&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://rubyinstaller.org/downloads/&quot;&gt;RubyInstaller 다운로드&lt;/a&gt; 에서 패키지 관리자 버전을 다운로드하여 설치 하십시오 .</target>
        </trans-unit>
        <trans-unit id="16d7db6be51fe8c45f9583d8bff369c3efd26d68" translate="yes" xml:space="preserve">
          <source>Download rrsync</source>
          <target state="translated">rrsync 다운로드</target>
        </trans-unit>
        <trans-unit id="474461ddfad9338cde865e2e0cfae7e574360c27" translate="yes" xml:space="preserve">
          <source>Draft Posts</source>
          <target state="translated">초안 게시물</target>
        </trans-unit>
        <trans-unit id="7b9e3ccb38ba5f1124c15ddde7167bfee444c275" translate="yes" xml:space="preserve">
          <source>Drafts are posts without a date. They&amp;rsquo;re posts you&amp;rsquo;re still working on and don&amp;rsquo;t want to publish yet. To get up and running with drafts, create a &lt;code&gt;_drafts&lt;/code&gt; folder in your site&amp;rsquo;s root (as described in the &lt;a href=&quot;../structure/index&quot;&gt;site structure&lt;/a&gt; section) and create your first draft:</source>
          <target state="translated">초안은 날짜가없는 게시물입니다. 아직 작업중인 게시물이며 아직 게시하고 싶지 않습니다. 초안을 시작하고 실행하려면 &lt;a href=&quot;../structure/index&quot;&gt;사이트 구조&lt;/a&gt; 섹션에 설명 된대로 사이트 루트에 &lt;code&gt;_drafts&lt;/code&gt; 폴더를 만들고 첫 번째 초안을 만드십시오.</target>
        </trans-unit>
        <trans-unit id="cd6cc0fc1b4576c41c5a7ddba40361ddc78929c8" translate="yes" xml:space="preserve">
          <source>Drafts are unpublished posts. The format of these files is without a date: &lt;code&gt;title.MARKUP&lt;/code&gt;. Learn how to &lt;a href=&quot;../drafts/index&quot;&gt; work with drafts&lt;/a&gt;.</source>
          <target state="translated">초안은 게시되지 않은 게시물입니다. 이 파일의 형식은 날짜가 없습니다 : &lt;code&gt;title.MARKUP&lt;/code&gt; . &lt;a href=&quot;../drafts/index&quot;&gt;초안 작업&lt;/a&gt; 방법을 배웁니다 .</target>
        </trans-unit>
        <trans-unit id="5733ddac9f24b6f62fd4b557aac525e5894e505e" translate="yes" xml:space="preserve">
          <source>Drafts don&amp;rsquo;t have dates</source>
          <target state="translated">초안에는 날짜가 없습니다.</target>
        </trans-unit>
        <trans-unit id="afc7da3b36c80bdfe26ae7331e50dce89adf7446" translate="yes" xml:space="preserve">
          <source>Dropped dependencies</source>
          <target state="translated">삭제 된 종속성</target>
        </trans-unit>
        <trans-unit id="6d6cdea651b8ee1f7d42af83c3acd10ef727c52d" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Command&lt;/code&gt; must be a subclass of the &lt;code&gt;Jekyll::Command&lt;/code&gt; class and must contain one class method: &lt;code&gt;init_with_program&lt;/code&gt;. An example:</source>
          <target state="translated">각 &lt;code&gt;Command&lt;/code&gt; 는 &lt;code&gt;Jekyll::Command&lt;/code&gt; 클래스 의 서브 클래스 여야하며 하나의 클래스 메소드 &lt;code&gt;init_with_program&lt;/code&gt; 을 포함해야합니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="8675639ca84ece63cd0eb34c7058169669e77a4b" translate="yes" xml:space="preserve">
          <source>Each collection is accessible as a field on the &lt;code&gt;site&lt;/code&gt; variable. For example, if you want to access the &lt;code&gt;albums&lt;/code&gt; collection found in &lt;code&gt;_albums&lt;/code&gt;, you&amp;rsquo;d use &lt;code&gt;site.albums&lt;/code&gt;.</source>
          <target state="translated">각 모음은 &lt;code&gt;site&lt;/code&gt; 변수 의 필드로 액세스 할 수 있습니다 . 예를 들어 &lt;code&gt;_albums&lt;/code&gt; 에 있는 &lt;code&gt;albums&lt;/code&gt; 모음 에 액세스 하려면 &lt;code&gt;site.albums&lt;/code&gt; 를 사용 합니다 .</target>
        </trans-unit>
        <trans-unit id="819989506c2379111b6830fba079a06e1e038168" translate="yes" xml:space="preserve">
          <source>Each collection is itself an array of documents (e.g., &lt;code&gt;site.albums&lt;/code&gt; is an array of documents, much like &lt;code&gt;site.pages&lt;/code&gt; and &lt;code&gt;site.posts&lt;/code&gt;). See the table below for how to access attributes of those documents.</source>
          <target state="translated">각 컬렉션 자체는 문서 배열입니다 (예 : &lt;code&gt;site.albums&lt;/code&gt; 는 &lt;code&gt;site.pages&lt;/code&gt; 및 &lt;code&gt;site.posts&lt;/code&gt; 와 매우 유사한 문서 배열입니다 ). 해당 문서의 속성에 액세스하는 방법은 아래 표를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="22b721140984a8237f11e2749b8693e8562cf543" translate="yes" xml:space="preserve">
          <source>Each post automatically takes the first block of text, from the beginning of the content to the first occurrence of &lt;code&gt;excerpt_separator&lt;/code&gt;, and sets it as the &lt;code&gt;post.excerpt&lt;/code&gt;. Take the above example of an index of posts. Perhaps you want to include a little hint about the post&amp;rsquo;s content by adding the first paragraph of each of your posts:</source>
          <target state="translated">각 포스트 자동 최초로 검출 할 콘텐츠의 시작에서 텍스트의 첫 번째 블록을 얻어 &lt;code&gt;excerpt_separator&lt;/code&gt; 과 같이 설정 &lt;code&gt;post.excerpt&lt;/code&gt; . 게시물 색인의 위 예를 보자. 각 게시물의 첫 번째 단락을 추가하여 게시물 내용에 대한 작은 힌트를 포함하고 싶을 것입니다.</target>
        </trans-unit>
        <trans-unit id="05e4117a4592a1a478617b21cb48c61f72ad835b" translate="yes" xml:space="preserve">
          <source>Edit the &lt;code&gt;config.yml&lt;/code&gt; file and include the path to Ruby &lt;code&gt;- C:/tools/ruby22&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;config.yml&lt;/code&gt; 파일을 편집하고 Ruby의 경로를 포함하십시오 &lt;code&gt;- C:/tools/ruby22&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ed63036d8730b34c2af3aa53fe984d9883388a1c" translate="yes" xml:space="preserve">
          <source>Editors</source>
          <target state="translated">Editors</target>
        </trans-unit>
        <trans-unit id="9377c79ae213708bb8ade0484700680439ab7d2b" translate="yes" xml:space="preserve">
          <source>Either of these approaches are useful because &lt;code&gt;/usr/local&lt;/code&gt; is considered a &amp;ldquo;safe&amp;rdquo; location on systems which have SIP enabled, they avoid potential conflicts with the version of Ruby included by Apple, and it keeps Jekyll and its dependencies in a sandboxed environment. This also has the added benefit of not requiring &lt;code&gt;sudo&lt;/code&gt; when you want to add or remove a gem.</source>
          <target state="translated">&lt;code&gt;/usr/local&lt;/code&gt; 은 SIP를 사용하는 시스템에서 &quot;안전한&quot;위치로 간주 되므로 Apple에 포함 된 Ruby 버전과의 충돌 가능성을 피하고 샌드 박스 환경에서 Jekyll과 그 종속성을 유지합니다. 또한 보석을 추가하거나 제거 할 때 &lt;code&gt;sudo&lt;/code&gt; 가 필요하지 않다는 추가 이점이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="db1035b9a376b8ed38de339986a8ce401798ad29" translate="yes" xml:space="preserve">
          <source>Enable auto-regeneration of the site when files are modified.</source>
          <target state="translated">파일 수정시 사이트의 자동 재생성을 활성화합니다.</target>
        </trans-unit>
        <trans-unit id="ba88fdd9f81d0ffddae13dde5e0969d2b16057b1" translate="yes" xml:space="preserve">
          <source>Enable pagination</source>
          <target state="translated">페이지 매김 사용</target>
        </trans-unit>
        <trans-unit id="d0ce34564da7c725988a56ad483ba57a721ddff0" translate="yes" xml:space="preserve">
          <source>Enable the experimental incremental build feature. Incremental build only re-builds posts and pages that have changed, resulting in significant performance improvements for large sites, but may also break site generation in certain cases.</source>
          <target state="translated">실험적인 증분 빌드 기능을 활성화하십시오. 증분 빌드는 변경된 게시물과 페이지 만 다시 작성하므로 대규모 사이트의 성능이 크게 향상되지만 경우에 따라 사이트 생성이 중단 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f3c52722870e758f16bfe54e0e7469ec6d69461" translate="yes" xml:space="preserve">
          <source>Enabling Travis builds for your GitHub repository is pretty simple:</source>
          <target state="translated">GitHub 리포지토리에 Travis 빌드를 활성화하는 것은 매우 간단합니다.</target>
        </trans-unit>
        <trans-unit id="5821fec7ee87050117e2081a31b307f34868a8ad" translate="yes" xml:space="preserve">
          <source>Encoding</source>
          <target state="translated">Encoding</target>
        </trans-unit>
        <trans-unit id="6878d1f81fca630d764e13dee43133748433dc86" translate="yes" xml:space="preserve">
          <source>Ensure that your &lt;code&gt;_config.yml&lt;/code&gt; is up-to-date and includes the following:</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 이 최신이고 다음을 포함 하는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="40e639f0888b4c974f5842808a94e8076f761e49" translate="yes" xml:space="preserve">
          <source>Escape some text for use in XML.</source>
          <target state="translated">XML에서 사용하기 위해 일부 텍스트를 이스케이프하십시오.</target>
        </trans-unit>
        <trans-unit id="00aedd57a5068acf5dfb99ea717348e1ba7286e5" translate="yes" xml:space="preserve">
          <source>Even if your configuration file specifies the &lt;code&gt;date&lt;/code&gt; style, the URL for this page would be &lt;code&gt;http://somedomain.com/mypageurl/&lt;/code&gt;.</source>
          <target state="translated">구성 파일이 &lt;code&gt;date&lt;/code&gt; 스타일을 지정 하더라도이 페이지의 URL은 &lt;code&gt;http://somedomain.com/mypageurl/&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ad8919ace091b14011c6439cfd5e1707b58f5abd" translate="yes" xml:space="preserve">
          <source>Event</source>
          <target state="translated">Event</target>
        </trans-unit>
        <trans-unit id="b5ba8b7b01c5c24c78b2945c838e15f9e22c063e" translate="yes" xml:space="preserve">
          <source>Every album in the collection could be listed on a single page with a template:</source>
          <target state="translated">컬렉션의 모든 앨범을 템플릿이있는 단일 페이지에 나열 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd2b1c9610eaf689d0fcbd86665058bcca94c3a6" translate="yes" xml:space="preserve">
          <source>Every other directory and file except for those listed above&amp;mdash;such as &lt;code&gt;css&lt;/code&gt; and &lt;code&gt;images&lt;/code&gt; folders, &lt;code&gt;favicon.ico&lt;/code&gt; files, and so forth&amp;mdash;will be copied verbatim to the generated site. There are plenty of &lt;a href=&quot;https://jekyllrb.com/docs/sites/&quot;&gt;sites already using Jekyll&lt;/a&gt; if you&amp;rsquo;re curious to see how they&amp;rsquo;re laid out.</source>
          <target state="translated">&lt;code&gt;css&lt;/code&gt; 및 &lt;code&gt;images&lt;/code&gt; 폴더, &lt;code&gt;favicon.ico&lt;/code&gt; 파일 등과 같은 위에 나열된 것을 제외한 다른 모든 디렉토리와 파일 은 생성 된 사이트에 그대로 복사됩니다. &lt;a href=&quot;https://jekyllrb.com/docs/sites/&quot;&gt;Jekyll&lt;/a&gt; 을 어떻게 사용하고 있는지 궁금하다면 이미 Jekyll을 사용 하는 사이트 가 많이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d4e7d2443643824d719c666e41137aaa7d583628" translate="yes" xml:space="preserve">
          <source>Everything in between the first and second &lt;code&gt;---&lt;/code&gt; are part of the YAML Front Matter, and everything after the second &lt;code&gt;---&lt;/code&gt; will be rendered with Markdown and show up as &amp;ldquo;Content&amp;rdquo;.</source>
          <target state="translated">첫번째와 두번째 사이의 모든 &lt;code&gt;---&lt;/code&gt; YAML 서문의 일부, 그리고 모든 것을 초 후입니다 &lt;code&gt;---&lt;/code&gt; 마크 다운으로 렌더링됩니다 및 &quot;콘텐츠&quot;로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="2b432a96c8af9ef67da451bf96f2d5e35555ea78" translate="yes" xml:space="preserve">
          <source>Example: Accessing a specific author</source>
          <target state="translated">예 : 특정 저자에 액세스</target>
        </trans-unit>
        <trans-unit id="4c002c817296530846dab0af3719d3a043bf3265" translate="yes" xml:space="preserve">
          <source>Example: List of members</source>
          <target state="translated">예 : 멤버 목록</target>
        </trans-unit>
        <trans-unit id="85f1f39fa110b6173d47c57697006f5a6d2f2828" translate="yes" xml:space="preserve">
          <source>Example: Organizations</source>
          <target state="translated">예 : 조직</target>
        </trans-unit>
        <trans-unit id="eb01bf04c9a0e8a71c45816513df424f1c7ffedb" translate="yes" xml:space="preserve">
          <source>Examples</source>
          <target state="translated">Examples</target>
        </trans-unit>
        <trans-unit id="4ae8e76dfb065e82c9528a739a8eaa4c8ad1fed8" translate="yes" xml:space="preserve">
          <source>Excerpts</source>
          <target state="translated">Excerpts</target>
        </trans-unit>
        <trans-unit id="822ea7230de3fb0fe2c82f46559a72f394c5ab01" translate="yes" xml:space="preserve">
          <source>Exclude directories and/or files from the conversion. These exclusions are relative to the site's source directory and cannot be outside the source directory.</source>
          <target state="translated">변환에서 디렉토리 및 / 또는 파일을 제외하십시오. 이러한 제외는 사이트의 소스 디렉토리와 관련이 있으며 소스 디렉토리 외부에있을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="51501a4330fa15c49bf05cb5d5f8443001e0ad7c" translate="yes" xml:space="preserve">
          <source>Execute &lt;code&gt;ruby dk.rb init&lt;/code&gt; to create a file called &lt;code&gt;config.yml&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ruby dk.rb init&lt;/code&gt; 를 실행 하여 &lt;code&gt;config.yml&lt;/code&gt; 이라는 파일을 만듭니다</target>
        </trans-unit>
        <trans-unit id="316aa627e36a4946bdab8204114ee4aecf2ffce1" translate="yes" xml:space="preserve">
          <source>Execute the following command to set the path: &lt;code&gt;ruby dk.rb install&lt;/code&gt;</source>
          <target state="translated">다음 명령을 실행하여 경로를 설정하십시오. &lt;code&gt;ruby dk.rb install&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="336f4c1fb6585da6f20ec1f566328d3acfd42d82" translate="yes" xml:space="preserve">
          <source>Extension of the output file. (Included by default and usually unnecessary.)</source>
          <target state="translated">출력 파일의 확장자 (기본적으로 포함되며 일반적으로 불필요합니다.)</target>
        </trans-unit>
        <trans-unit id="542cfa45452922b50c6b6fccb415cb9ddac9c534" translate="yes" xml:space="preserve">
          <source>Extensionless permalinks with no trailing slashes</source>
          <target state="translated">후행 슬래시가없는 확장 가능한 영구 링크</target>
        </trans-unit>
        <trans-unit id="3b7782ff05e29c6b796bf19f5329ada566fad9b6" translate="yes" xml:space="preserve">
          <source>Extras</source>
          <target state="translated">Extras</target>
        </trans-unit>
        <trans-unit id="dba791027204ca131f65ea111ad79130d039e34e" translate="yes" xml:space="preserve">
          <source>File / Directory</source>
          <target state="translated">파일 / 디렉토리</target>
        </trans-unit>
        <trans-unit id="cb254617fc5bf41dc843754c218836d586a55050" translate="yes" xml:space="preserve">
          <source>Files in collections that do not have front matter are treated as &lt;a href=&quot;../static-files/index&quot;&gt;static files&lt;/a&gt; and simply copied to their output location without processing.</source>
          <target state="translated">중요 사항이없는 컬렉션의 파일은 &lt;a href=&quot;../static-files/index&quot;&gt;정적 파일&lt;/a&gt; 로 취급되며 처리하지 않고 출력 위치로 간단히 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="73dc4887b333f41c2c5e55833fcf4f3fe680889b" translate="yes" xml:space="preserve">
          <source>Filter and Output</source>
          <target state="translated">필터 및 출력</target>
        </trans-unit>
        <trans-unit id="96e578211aa295317cf257310712fa28ccd8f6c6" translate="yes" xml:space="preserve">
          <source>Filters</source>
          <target state="translated">Filters</target>
        </trans-unit>
        <trans-unit id="41f7b6c75e1c0c2464b2db4968a6b2716b345c4a" translate="yes" xml:space="preserve">
          <source>Finally, if you set defaults in the site configuration by adding a &lt;code&gt;defaults&lt;/code&gt; section to your &lt;code&gt;_config.yml&lt;/code&gt; file, you can override those settings in a post or page file. All you need to do is specify the settings in the post or page front matter. For example:</source>
          <target state="translated">마지막으로 &lt;code&gt;_config.yml&lt;/code&gt; 파일에 &lt;code&gt;defaults&lt;/code&gt; 섹션을 추가하여 사이트 구성에서 기본값 을 설정하면 게시물 또는 페이지 파일에서 해당 설정을 재정의 할 수 있습니다. 게시물 또는 페이지 첫 페이지에서 설정을 지정하기 만하면됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f10b3ccd7172552307080e73694f58eb9f5f6114" translate="yes" xml:space="preserve">
          <source>Finally, push your packaged theme up to the RubyGems service, by running the following command, again replacing &lt;code&gt;jekyll-theme-awesome&lt;/code&gt; with the name of your theme:</source>
          <target state="translated">마지막으로 다음 명령을 실행하여 &lt;code&gt;jekyll-theme-awesome&lt;/code&gt; 을 테마 이름으로 다시 바꾸어 패키지 테마를 RubyGems 서비스로 푸시하십시오 .</target>
        </trans-unit>
        <trans-unit id="e8a7ce1d9230a0f65d5141cdd7f344b30f0e66d5" translate="yes" xml:space="preserve">
          <source>Finally, run the following command on any users laptop that needs to be able to deploy using this hook:</source>
          <target state="translated">마지막으로이 후크를 사용하여 배포 할 수 있어야하는 모든 사용자 랩톱에서 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="a48bab9c17c23216e45daa00e47e2bed16649923" translate="yes" xml:space="preserve">
          <source>Find the repository for which you&amp;rsquo;re interested in enabling builds.</source>
          <target state="translated">빌드 사용에 관심이있는 저장소를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="8a5a13834bdf8d32003f4893922855bfdc8d2476" translate="yes" xml:space="preserve">
          <source>Find your project in the list and click &amp;lsquo;Build project&amp;rsquo; on the right.</source>
          <target state="translated">목록에서 프로젝트를 찾아 오른쪽의 '프로젝트 빌드'를 클릭하십시오.</target>
        </trans-unit>
        <trans-unit id="3e99e1aeaaf25358860f63dba1f0fd65f8164d88" translate="yes" xml:space="preserve">
          <source>First let&amp;rsquo;s make sure all our packages / repositories are up to date. Open a new Command Prompt instance, and type the following:</source>
          <target state="translated">먼저 모든 패키지 / 리포지토리가 최신 상태인지 확인하십시오. 새 명령 프롬프트 인스턴스를 열고 다음을 입력하십시오.</target>
        </trans-unit>
        <trans-unit id="e45c3ef0952938c50fd4e22c10d43a0965111c1d" translate="yes" xml:space="preserve">
          <source>First, in the &lt;code&gt;_layouts&lt;/code&gt; directory create a new file called &lt;code&gt;category.html&lt;/code&gt; - in that file put (at least) the following:</source>
          <target state="translated">먼저 &lt;code&gt;_layouts&lt;/code&gt; 디렉토리 에서 &lt;code&gt;category.html&lt;/code&gt; 이라는 새 파일을 작성하십시오 . 해당 파일에 다음을 입력하십시오 (적어도).</target>
        </trans-unit>
        <trans-unit id="ae1c4122db1a9a4c5907b31bca1c6d1a1a2df958" translate="yes" xml:space="preserve">
          <source>First, you need to have it in a git repository:</source>
          <target state="translated">먼저 git 저장소에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a774409a00c21de377cf8ed5c6a56b8547973042" translate="yes" xml:space="preserve">
          <source>Flag</source>
          <target state="translated">Flag</target>
        </trans-unit>
        <trans-unit id="5d728758adcdd5154d3be55552c1c061ef1489b2" translate="yes" xml:space="preserve">
          <source>Flags</source>
          <target state="translated">Flags</target>
        </trans-unit>
        <trans-unit id="d85bd8c3e04f69ba110dc4b17595792ef35771fc" translate="yes" xml:space="preserve">
          <source>Flattening pages from subfolders into the root directory</source>
          <target state="translated">하위 폴더에서 루트 디렉토리로 페이지 병합</target>
        </trans-unit>
        <trans-unit id="e789a203c6e89634623d96e1a0bffde20a7288d8" translate="yes" xml:space="preserve">
          <source>Flattening pages in _site on build</source>
          <target state="translated">빌드시 _site의 페이지 병합</target>
        </trans-unit>
        <trans-unit id="f23041fc3120865d058abeda4efe6770fec0273f" translate="yes" xml:space="preserve">
          <source>Flick the repository switch on so that it turns blue.</source>
          <target state="translated">저장소 스위치를 튕겨서 파란색으로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="d46936f44668184fd0ffde6799f5343f8167a17e" translate="yes" xml:space="preserve">
          <source>For &lt;code&gt;site.collections.myCollection&lt;/code&gt; in Jekyll 2, you now do:</source>
          <target state="translated">들어 &lt;code&gt;site.collections.myCollection&lt;/code&gt; 지킬 2, 당신은 지금 :</target>
        </trans-unit>
        <trans-unit id="4ecd5207a5359fcf0e4d56913060c6215d02075f" translate="yes" xml:space="preserve">
          <source>For Jekyll 3, include the &lt;code&gt;jekyll-paginate&lt;/code&gt; plugin in your Gemfile and in your &lt;code&gt;_config.yml&lt;/code&gt; under &lt;code&gt;plugins&lt;/code&gt;. For Jekyll 2, this is standard.</source>
          <target state="translated">Jekyll 3의 경우 &lt;code&gt;jekyll-paginate&lt;/code&gt; 플러그인을 Gemfile 및 &lt;code&gt;plugins&lt;/code&gt; 아래 의 &lt;code&gt;_config.yml&lt;/code&gt; 에 포함하십시오 . Jekyll 2의 경우 이것이 표준입니다.</target>
        </trans-unit>
        <trans-unit id="e70c9bd381a82106c83b24e79bd82d5a82d9bcb5" translate="yes" xml:space="preserve">
          <source>For a collection with the following source file structure,</source>
          <target state="translated">다음과 같은 소스 파일 구조를 가진 컬렉션의 경우</target>
        </trans-unit>
        <trans-unit id="4385b1693f5d5e0c5dbaf041ca0feec73df38ca5" translate="yes" xml:space="preserve">
          <source>For a more conventional way of installing Jekyll you can follow this &lt;a href=&quot;https://labs.sverrirs.com/jekyll/&quot;&gt;complete guide to install Jekyll 3 on Windows by Sverrir Sigmundarson&lt;/a&gt;.</source>
          <target state="translated">Jekyll을 설치하는보다 일반적인 방법은 &lt;a href=&quot;https://labs.sverrirs.com/jekyll/&quot;&gt;Sverrir Sigmundarson의 Windows에 Jekyll 3을 설치하기&lt;/a&gt; 위해이 완전한 안내서를 따르십시오 .</target>
        </trans-unit>
        <trans-unit id="e388ef2d882d116dcb8874d5760b821beef658f3" translate="yes" xml:space="preserve">
          <source>For better clarity, Jekyll now accepts the commands &lt;code&gt;build&lt;/code&gt; and &lt;code&gt;serve&lt;/code&gt;. Whereas before you might simply run the command &lt;code&gt;jekyll&lt;/code&gt; to generate a site and &lt;code&gt;jekyll --server&lt;/code&gt; to view it locally, in v2.0 (and later) you should use the subcommands &lt;code&gt;jekyll build&lt;/code&gt; and &lt;code&gt;jekyll serve&lt;/code&gt; to build and preview your site.</source>
          <target state="translated">명확성을 높이기 위해 Jekyll은 이제 &lt;code&gt;build&lt;/code&gt; 및 &lt;code&gt;serve&lt;/code&gt; 명령을 받아들 입니다. 이전에 &lt;code&gt;jekyll&lt;/code&gt; 명령을 실행하여 사이트를 생성하고 &lt;code&gt;jekyll --server&lt;/code&gt; 를 로컬로 보려면 v2.0 이상에서 &lt;code&gt;jekyll build&lt;/code&gt; 및 &lt;code&gt;jekyll serve&lt;/code&gt; 하위 명령을 사용 하여 사이트를 빌드하고 미리 보아야합니다 .</target>
        </trans-unit>
        <trans-unit id="458d73a0a943777d717cad375d7db2973b80e62c" translate="yes" xml:space="preserve">
          <source>For example to avoid testing external sites, use this command:</source>
          <target state="translated">예를 들어 외부 사이트를 테스트하지 않으려면 다음 명령을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d917d346617aec470dcc02e92529bf370a27947c" translate="yes" xml:space="preserve">
          <source>For example, if your selected theme has a &lt;code&gt;page&lt;/code&gt; layout, you can override the theme&amp;rsquo;s layout by creating your own &lt;code&gt;page&lt;/code&gt; layout in the &lt;code&gt;_layouts&lt;/code&gt; directory (that is, &lt;code&gt;_layouts/page.html&lt;/code&gt;).</source>
          <target state="translated">선택한 테마가있는 경우 예를 들어, &lt;code&gt;page&lt;/code&gt; 레이아웃, 당신은 당신의 자신의 작성하여 테마의 레이아웃을 무시할 수 있습니다 &lt;code&gt;page&lt;/code&gt; 의 레이아웃 &lt;code&gt;_layouts&lt;/code&gt; 의 디렉토리 (이다 &lt;code&gt;_layouts/page.html&lt;/code&gt; 을 ).</target>
        </trans-unit>
        <trans-unit id="020896a245c351818b3ea33257d8fd95d9d5cc09" translate="yes" xml:space="preserve">
          <source>For example, if your theme has a &lt;code&gt;/_layouts/page.html&lt;/code&gt; file, and a page has &lt;code&gt;layout: page&lt;/code&gt; in its YAML front matter, Jekyll will first look to the site&amp;rsquo;s &lt;code&gt;_layouts&lt;/code&gt; folder for the &lt;code&gt;page&lt;/code&gt; layout, and if none exists, will use your theme&amp;rsquo;s &lt;code&gt;page&lt;/code&gt; layout.</source>
          <target state="translated">예를 들어, 테마에 &lt;code&gt;/_layouts/page.html&lt;/code&gt; 파일이 있고 페이지 의 YAML 프론트 &lt;code&gt;layout: page&lt;/code&gt; 에 layout : page가 있는 경우 Jekyll은 먼저 &lt;code&gt;page&lt;/code&gt; 레이아웃에 대해 사이트의 &lt;code&gt;_layouts&lt;/code&gt; 폴더를 찾고 존재하지 않는 경우이를 사용합니다. 테마의 &lt;code&gt;page&lt;/code&gt; 레이아웃.</target>
        </trans-unit>
        <trans-unit id="467708cf9e576fe40b2d3dd485761b5982e74c15" translate="yes" xml:space="preserve">
          <source>For example, search for &lt;a href=&quot;https://rubygems.org/search?utf8=%E2%9C%93&amp;amp;query=jekyll-theme&quot;&gt;jekyll theme on RubyGems&lt;/a&gt; to find other gem-based themes. (Note that not all themes are using &lt;code&gt;jekyll-theme&lt;/code&gt; as a convention in the theme name.)</source>
          <target state="translated">예를 들어 &lt;a href=&quot;https://rubygems.org/search?utf8=%E2%9C%93&amp;amp;query=jekyll-theme&quot;&gt;RubyGems&lt;/a&gt; 에서 jekyll 테마를 검색하여 다른 보석 기반 테마를 찾으십시오. (모든 테마가 테마 이름에서 &lt;code&gt;jekyll-theme&lt;/code&gt; 을 규칙으로 사용하는 것은 아닙니다 .)</target>
        </trans-unit>
        <trans-unit id="c665743ec5e2cbd3c9d7d1ca321611350def85d2" translate="yes" xml:space="preserve">
          <source>For example, suppose you have a special image syntax with complex formatting, and you don&amp;rsquo;t want your authors to remember the complex formatting. As a result, you decide to simplify the formatting by using an include with parameters. Here&amp;rsquo;s an example of the special image syntax you might want to populate with an include:</source>
          <target state="translated">예를 들어, 복잡한 형식의 특수 이미지 구문이 있고 작성자가 복잡한 형식을 기억하지 않기를 원한다고 가정하십시오. 결과적으로 include with 매개 변수를 사용하여 서식을 단순화하기로 결정했습니다. 다음은 include로 채우려는 특수 이미지 구문의 예입니다.</target>
        </trans-unit>
        <trans-unit id="2e940834dd63449f2090f29f28e8d317d1f3ed23" translate="yes" xml:space="preserve">
          <source>For example, suppose you set this conditional statement in your code:</source>
          <target state="translated">예를 들어, 코드에서이 조건문을 설정했다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="f4fd4942135b4348479b4872a1d05069ad27e2a4" translate="yes" xml:space="preserve">
          <source>For example, suppose you&amp;rsquo;re creating a link in &lt;code&gt;page_a.md&lt;/code&gt; (stored in &lt;code&gt;pages/folder1/folder2&lt;/code&gt;) to &lt;code&gt;page_b.md&lt;/code&gt; (stored in &lt;code&gt;pages/folder1&lt;/code&gt;). Your path in the link would not be &lt;code&gt;../page_b.html&lt;/code&gt;. Instead, it would be &lt;code&gt;/pages/folder1/page_b.md&lt;/code&gt;.</source>
          <target state="translated">예를 들어, 당신이 링크를 만드는 가정 &lt;code&gt;page_a.md&lt;/code&gt; (에 저장된 &lt;code&gt;pages/folder1/folder2&lt;/code&gt; 에) &lt;code&gt;page_b.md&lt;/code&gt; 을 (에 저장된 &lt;code&gt;pages/folder1&lt;/code&gt; ). 링크의 경로는 &lt;code&gt;../page_b.html&lt;/code&gt; 이 아닙니다 . 대신 &lt;code&gt;/pages/folder1/page_b.md&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="059c3e8cce263b2945a18ac90b2637e10a8026b1" translate="yes" xml:space="preserve">
          <source>For example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="49ec88cd4b1a730e559e4f1ab94dad7de60362a1" translate="yes" xml:space="preserve">
          <source>For information on how to build robust navigation for your site (especially if you have a documentation website or another type of Jekyll site with a lot of pages to organize), see &lt;a href=&quot;https://jekyllrb.com/tutorials/navigation&quot;&gt;Navigation&lt;/a&gt;.</source>
          <target state="translated">사이트에 대한 강력한 탐색 기능을 구축하는 방법에 대한 자세한 내용은 (특히 문서 페이지 웹 사이트 또는 구성 할 페이지가 많은 다른 유형의 Jekyll 사이트가있는 경우) &lt;a href=&quot;https://jekyllrb.com/tutorials/navigation&quot;&gt;탐색을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3c3b4a2a072204de5bcdbb1ed78f98d00834bca0" translate="yes" xml:space="preserve">
          <source>For instance, a generator can inject values computed at build time for template variables. In the following example the template &lt;code&gt;reading.html&lt;/code&gt; has two variables &lt;code&gt;ongoing&lt;/code&gt; and &lt;code&gt;done&lt;/code&gt; that we fill in the generator:</source>
          <target state="translated">예를 들어, 생성기는 템플릿 변수에 대해 빌드 타임에 계산 된 값을 주입 할 수 있습니다. 다음의 예에서는 템플릿 &lt;code&gt;reading.html&lt;/code&gt; 는 두 변수가 &lt;code&gt;ongoing&lt;/code&gt; 및 &lt;code&gt;done&lt;/code&gt; 우리가 발전기를 입력한다 :</target>
        </trans-unit>
        <trans-unit id="ebf2c8e5183f540d904cae2ce3b9656cedca694f" translate="yes" xml:space="preserve">
          <source>For more about the possible configuration options, see the &lt;a href=&quot;../configuration/index&quot;&gt;configuration&lt;/a&gt; page.</source>
          <target state="translated">가능한 구성 옵션에 대한 자세한 내용은 &lt;a href=&quot;../configuration/index&quot;&gt;구성&lt;/a&gt; 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="568a3189544ff180fa3dc76ebb18e26512e5cf61" translate="yes" xml:space="preserve">
          <source>For more advanced information on using includes, see &lt;a href=&quot;../includes/index&quot;&gt;Includes&lt;/a&gt;.</source>
          <target state="translated">포함 사용에 대한 고급 내용 &lt;a href=&quot;../includes/index&quot;&gt;이 포함&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9c00e313cdc37ac918d93214be70331ae00ba3d2" translate="yes" xml:space="preserve">
          <source>For more information about getting started, check out &lt;a href=&quot;http://gastonsanchez.com/visually-enforced/opinion/2014/02/16/Mathjax-with-jekyll/&quot;&gt;this excellent blog post&lt;/a&gt;.</source>
          <target state="translated">시작하는 방법에 대한 자세한 내용은 &lt;a href=&quot;http://gastonsanchez.com/visually-enforced/opinion/2014/02/16/Mathjax-with-jekyll/&quot;&gt;이 훌륭한 블로그 게시물을&lt;/a&gt; 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="dffed6b35db83c02dc53f10174bbe35e333c8986" translate="yes" xml:space="preserve">
          <source>For more information about what you can do with GitHub Pages, as well as for troubleshooting guides, you should check out &lt;a href=&quot;https://help.github.com/categories/github-pages-basics/&quot;&gt;GitHub&amp;rsquo;s Pages Help section&lt;/a&gt;. If all else fails, you should contact &lt;a href=&quot;https://github.com/contact&quot;&gt;GitHub Support&lt;/a&gt;.</source>
          <target state="translated">GitHub 페이지로 수행 할 수있는 작업과 문제 해결 안내서에 대한 자세한 내용은 &lt;a href=&quot;https://help.github.com/categories/github-pages-basics/&quot;&gt;GitHub의 페이지 도움말 섹션을&lt;/a&gt; 확인 하십시오 . 다른 모든 방법이 실패하면 &lt;a href=&quot;https://github.com/contact&quot;&gt;GitHub 지원 센터에&lt;/a&gt; 문의하십시오 .</target>
        </trans-unit>
        <trans-unit id="aebb9a0f68c4782284e2264f60ea71980e3d4d29" translate="yes" xml:space="preserve">
          <source>For the first time, the default syntax highlighter has changed for the &lt;code&gt;highlight&lt;/code&gt; tag and for backtick code blocks. Instead of &lt;a href=&quot;https://github.com/tmm1/pygments.rb&quot;&gt;Pygments.rb&lt;/a&gt;, it&amp;rsquo;s now &lt;a href=&quot;http://rouge.jneen.net/&quot;&gt;Rouge&lt;/a&gt;. If you were using the &lt;code&gt;highlight&lt;/code&gt; tag with certain options, such as &lt;code&gt;hl_lines&lt;/code&gt;, they may not be available when using Rouge. To go back to using Pygments, set &lt;code&gt;highlighter: pygments&lt;/code&gt; in your &lt;code&gt;_config.yml&lt;/code&gt; file and run &lt;code&gt;gem install pygments.rb&lt;/code&gt; or add &lt;code&gt;gem 'pygments.rb'&lt;/code&gt; to your project&amp;rsquo;s &lt;code&gt;Gemfile&lt;/code&gt;.</source>
          <target state="translated">처음으로 기본 구문 형광펜이 &lt;code&gt;highlight&lt;/code&gt; 태그 및 백틱 코드 블록에 대해 변경되었습니다 . &lt;a href=&quot;https://github.com/tmm1/pygments.rb&quot;&gt;Pygments.rb&lt;/a&gt; 대신 이제는 &lt;a href=&quot;http://rouge.jneen.net/&quot;&gt;Rouge&lt;/a&gt; 입니다. &lt;code&gt;hl_lines&lt;/code&gt; 와 같은 특정 옵션과 함께 &lt;code&gt;highlight&lt;/code&gt; 태그를 사용하는 경우 Rouge를 사용할 때 해당 태그를 사용하지 못할 수 있습니다. 피그먼트 사용으로 돌아가 려면 &lt;code&gt;_config.yml&lt;/code&gt; 파일 에서 &lt;code&gt;highlighter: pygments&lt;/code&gt; 먼트를 설정 하고 &lt;code&gt;gem install pygments.rb&lt;/code&gt; 를 실행 하거나 &lt;code&gt;gem 'pygments.rb'&lt;/code&gt; 를 프로젝트의 &lt;code&gt;Gemfile&lt;/code&gt; 에 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="d98357998a5736328502923f0dc0eefdf500e8f9" translate="yes" xml:space="preserve">
          <source>For versions upto &lt;code&gt;v3.4.3&lt;/code&gt;, the &lt;code&gt;exclude:&lt;/code&gt; setting must look like following:</source>
          <target state="translated">&lt;code&gt;v3.4.3&lt;/code&gt; 이하 버전의 경우 &lt;code&gt;exclude:&lt;/code&gt; 설정은 다음과 같아야합니다.</target>
        </trans-unit>
        <trans-unit id="a430e74c409cfdad9f8053610e31abcb1f4ce54f" translate="yes" xml:space="preserve">
          <source>Force inclusion of directories and/or files in the conversion. &lt;code&gt;.htaccess&lt;/code&gt; is a good example since dotfiles are excluded by default.</source>
          <target state="translated">변환시 디렉토리 및 / 또는 파일을 강제로 포함합니다. 도트 파일은 기본적으로 제외되므로 &lt;code&gt;.htaccess&lt;/code&gt; 가 좋은 예입니다.</target>
        </trans-unit>
        <trans-unit id="276ec0440eedadade0e767c8ac22b7df0e0fb2f0" translate="yes" xml:space="preserve">
          <source>Force watch to use polling.</source>
          <target state="translated">강제로 시계가 폴링을 사용하도록합니다.</target>
        </trans-unit>
        <trans-unit id="db69ea96ab5ecf2c23cbcdcd97379233f1461193" translate="yes" xml:space="preserve">
          <source>FormKeep</source>
          <target state="translated">FormKeep</target>
        </trans-unit>
        <trans-unit id="804c108f440f97466802bc1591d6224ae2311e5b" translate="yes" xml:space="preserve">
          <source>Format a date to long format.</source>
          <target state="translated">날짜를 긴 형식으로 포맷하십시오.</target>
        </trans-unit>
        <trans-unit id="b0047b2307211efc616ec382149c3c2ccb142d90" translate="yes" xml:space="preserve">
          <source>Formester</source>
          <target state="translated">Formester</target>
        </trans-unit>
        <trans-unit id="bf5b8e6347b61889f933093d2c7152e076d585b2" translate="yes" xml:space="preserve">
          <source>Formingo</source>
          <target state="translated">Formingo</target>
        </trans-unit>
        <trans-unit id="0830746bc319f1f19ecea0bc94c1fd9b498c6136" translate="yes" xml:space="preserve">
          <source>Formspree (open source)</source>
          <target state="translated">Formspree (오픈 소스)</target>
        </trans-unit>
        <trans-unit id="a19318c068637dc426d1435cf0d0ef33a6bc5d47" translate="yes" xml:space="preserve">
          <source>From &lt;code&gt;v3.5&lt;/code&gt; onward, &lt;code&gt;Gemfile&lt;/code&gt; and &lt;code&gt;Gemfile.lock&lt;/code&gt; are also excluded by default. So, in most cases there is no need to define another &lt;code&gt;exclude:&lt;/code&gt; array in the config file. So an existing definition can either be modified as above, or removed completely, or simply commented out to enable easy edits in future.</source>
          <target state="translated">에서 &lt;code&gt;v3.5&lt;/code&gt; 이후, &lt;code&gt;Gemfile&lt;/code&gt; 및 &lt;code&gt;Gemfile.lock&lt;/code&gt; 은 또한 기본적으로 제외됩니다. 따라서 대부분의 경우 구성 파일에 다른 &lt;code&gt;exclude:&lt;/code&gt; array 를 정의 할 필요가 없습니다 . 따라서 기존 정의를 위와 같이 수정하거나 완전히 제거하거나 간단히 주석 처리하여 나중에 쉽게 편집 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae9ceea44514972c704d64ac434df7abc3bda6c7" translate="yes" xml:space="preserve">
          <source>From the GitHub or Bitbucket tab on the left, choose a user or organization.</source>
          <target state="translated">왼쪽의 GitHub 또는 Bitbucket 탭에서 사용자 또는 조직을 선택하십시오.</target>
        </trans-unit>
        <trans-unit id="19c523893e2bd88e4a7ac874ee2e07d3e3401996" translate="yes" xml:space="preserve">
          <source>Front Matter</source>
          <target state="translated">서문</target>
        </trans-unit>
        <trans-unit id="fe601000d1934a854a60fca8d0cc33ca18d5d81a" translate="yes" xml:space="preserve">
          <source>Front Matter defaults</source>
          <target state="translated">전면 문제 기본값</target>
        </trans-unit>
        <trans-unit id="51c3dde9660d6cbb07190cefd51f56cc0ce6c526" translate="yes" xml:space="preserve">
          <source>Future Posts on GitHub Pages</source>
          <target state="translated">GitHub 페이지의 향후 게시물</target>
        </trans-unit>
        <trans-unit id="40d7b46212b2ab893d9587ebff38115301a638c1" translate="yes" xml:space="preserve">
          <source>Future posts</source>
          <target state="translated">향후 게시물</target>
        </trans-unit>
        <trans-unit id="918bcf288e603e68c119aca1cac51aae9732d438" translate="yes" xml:space="preserve">
          <source>GNU/Linux, Unix, or macOS</source>
          <target state="translated">GNU / Linux, 유닉스 또는 macOS</target>
        </trans-unit>
        <trans-unit id="ae79844dff816caaafe6ba7c88f54fc43aef628a" translate="yes" xml:space="preserve">
          <source>GUI apps can modify the &lt;code&gt;$PATH&lt;/code&gt; as follows:</source>
          <target state="translated">GUI 앱은 다음과 같이 &lt;code&gt;$PATH&lt;/code&gt; 를 수정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cb48d06fcaddb6f310478dca6ed659a7b7a5e884" translate="yes" xml:space="preserve">
          <source>Gather your collections3.7.0</source>
          <target state="translated">컬렉션 수집 3.7.0</target>
        </trans-unit>
        <trans-unit id="ba77b18ed6db40820a6e35edf257f239368af603" translate="yes" xml:space="preserve">
          <source>Gem-based themes make it easy for theme developers to make updates available to anyone who has the theme gem. When there&amp;rsquo;s an update, theme developers push the update to RubyGems.</source>
          <target state="translated">젬 기반 테마를 사용하면 테마 개발자가 테마 젬을 가진 사람이 쉽게 업데이트를 사용할 수 있습니다. 업데이트가있을 때 테마 개발자는 업데이트를 RubyGems에 푸시합니다.</target>
        </trans-unit>
        <trans-unit id="e311c24103da57e6affccfd589d2d5c9cd0965c9" translate="yes" xml:space="preserve">
          <source>Gems included in the &lt;code&gt;:jekyll-plugins&lt;/code&gt; group are activated regardless of the &lt;code&gt;--safe&lt;/code&gt; mode setting. Be aware of what gems are included under this group!</source>
          <target state="translated">&lt;code&gt;:jekyll-plugins&lt;/code&gt; 그룹에 포함 된 보석 은 &lt;code&gt;--safe&lt;/code&gt; 모드 설정에 관계없이 활성화됩니다 . 이 그룹에 포함 된 보석을 알고 있어야합니다!</target>
        </trans-unit>
        <trans-unit id="aedb09bb110586431e8db01fe06a38658fabd92e" translate="yes" xml:space="preserve">
          <source>Generate a Liquid rendering profile to help you identify performance bottlenecks.</source>
          <target state="translated">성능 병목 현상을 식별하는 데 도움이되는 액체 렌더링 프로파일을 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="0b1e0bd34bb388ae7f402d63987e9dc2d1a7095f" translate="yes" xml:space="preserve">
          <source>Generates content as a side-effect.</source>
          <target state="translated">컨텐츠를 부작용으로 생성합니다.</target>
        </trans-unit>
        <trans-unit id="a3e705cc61a19f33d7c9c030f107a70569966485" translate="yes" xml:space="preserve">
          <source>Generators</source>
          <target state="translated">Generators</target>
        </trans-unit>
        <trans-unit id="5f4d84cfe96fb18f5daa733a7aebc64574619567" translate="yes" xml:space="preserve">
          <source>Generators are only required to implement one method:</source>
          <target state="translated">생성기는 한 가지 방법 만 구현하면됩니다.</target>
        </trans-unit>
        <trans-unit id="9254a5380fd0a402863d61054b4a46973f389a2e" translate="yes" xml:space="preserve">
          <source>Generators run after Jekyll has made an inventory of the existing content, and before the site is generated. Pages with YAML Front Matters are stored as instances of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/page.rb&quot;&gt;&lt;code&gt;Jekyll::Page&lt;/code&gt;&lt;/a&gt; and are available via &lt;code&gt;site.pages&lt;/code&gt;. Static files become instances of &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/static_file.rb&quot;&gt;&lt;code&gt;Jekyll::StaticFile&lt;/code&gt;&lt;/a&gt; and are available via &lt;code&gt;site.static_files&lt;/code&gt;. See &lt;a href=&quot;../variables/index&quot;&gt;the Variables documentation page&lt;/a&gt; and &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt;&lt;code&gt;Jekyll::Site&lt;/code&gt;&lt;/a&gt; for more details.</source>
          <target state="translated">생성기는 Jekyll이 기존 컨텐츠의 인벤토리를 작성한 후 그리고 사이트가 생성되기 전에 실행됩니다. YAML Front Matters가있는 &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/page.rb&quot;&gt; &lt;code&gt;Jekyll::Page&lt;/code&gt; &lt;/a&gt; 는 Jekyll :: Page의 인스턴스로 저장 되며 &lt;code&gt;site.pages&lt;/code&gt; 를 통해 사용할 수 있습니다 . 정적 파일은 &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/static_file.rb&quot;&gt; &lt;code&gt;Jekyll::StaticFile&lt;/code&gt; &lt;/a&gt; 인스턴스가 되며 &lt;code&gt;site.static_files&lt;/code&gt; 를 통해 사용할 수 있습니다 . 자세한 내용 &lt;a href=&quot;../variables/index&quot;&gt;은 변수 설명서 페이지&lt;/a&gt; 와 &lt;a href=&quot;https://github.com/jekyll/jekyll/blob/master/lib/jekyll/site.rb&quot;&gt; &lt;code&gt;Jekyll::Site&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d0910b6b5cbd00abec4d6696bf678c03c28ef9dd" translate="yes" xml:space="preserve">
          <source>Getting Jekyll installed and ready-to-go should only take a few minutes. If it ever becomes a pain, please &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;file an issue&lt;/a&gt; (or submit a pull request) describing the issue you encountered and how we might make the process easier.</source>
          <target state="translated">Jekyll을 설치하고 준비하는 데 몇 분 밖에 걸리지 않습니다. 이제까지 고통이됩니다, 제발 &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;문제 파일&lt;/a&gt; (또는 풀 요청을 제출)이 발생하는 문제를 설명하고 우리는 과정을 용이하게하는 방법.</target>
        </trans-unit>
        <trans-unit id="010b85ad56b34c34c7c2a3b2436c740e30428ed5" translate="yes" xml:space="preserve">
          <source>Getting Started</source>
          <target state="translated">시작하기</target>
        </trans-unit>
        <trans-unit id="7ce495ff56808a96f0836329550514077a883f75" translate="yes" xml:space="preserve">
          <source>Git post-receive hook</source>
          <target state="translated">힘내 포스트 수신 후크</target>
        </trans-unit>
        <trans-unit id="510b9e89e8d4923873a42628e3ef914aa7972a29" translate="yes" xml:space="preserve">
          <source>Git post-update hook</source>
          <target state="translated">힘내 사후 업데이트 훅</target>
        </trans-unit>
        <trans-unit id="3b50aad9dd12f191663725265afb261bb6f3a7fa" translate="yes" xml:space="preserve">
          <source>GitHub Pages</source>
          <target state="translated">GitHub 페이지</target>
        </trans-unit>
        <trans-unit id="e8f9d4f0de446dbec106e8aea66779e22a927f8b" translate="yes" xml:space="preserve">
          <source>GitHub Pages &lt;a href=&quot;https://help.github.com/articles/troubleshooting-github-pages-build-failures#source-setting&quot;&gt;overrides&lt;/a&gt; the &lt;a href=&quot;../configuration/index#global-configuration&quot;&gt;&amp;ldquo;Site Source&amp;rdquo;&lt;/a&gt; configuration value, so if you locate your files anywhere other than the root directory, your site may not build correctly.</source>
          <target state="translated">GitHub 페이지 는 &lt;a href=&quot;../configuration/index#global-configuration&quot;&gt;&amp;ldquo;사이트 소스&amp;rdquo;&lt;/a&gt; 구성 값을 &lt;a href=&quot;https://help.github.com/articles/troubleshooting-github-pages-build-failures#source-setting&quot;&gt;무시&lt;/a&gt; 하므로 루트 디렉토리 이외의 위치에서 파일을 찾으면 사이트가 올바르게 빌드되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8dacc5464f8b2d2bed3eff5cbf3a194b0cf27c4d" translate="yes" xml:space="preserve">
          <source>GitHub Pages Documentation, Help, and Support</source>
          <target state="translated">GitHub 페이지 문서, 도움말 및 지원</target>
        </trans-unit>
        <trans-unit id="468a579a5c3c13e321704773694dd48709f82722" translate="yes" xml:space="preserve">
          <source>GitHub Pages are initially configured to live under the &lt;code&gt;username.github.io&lt;/code&gt; subdomain, which is why repositories must be named this way &lt;strong&gt;even if a custom domain is being used&lt;/strong&gt;.</source>
          <target state="translated">GitHub 페이지는 &lt;code&gt;username.github.io&lt;/code&gt; 하위 도메인 아래에 있도록 구성되어 &lt;strong&gt;있으므로 사용자 지정 도메인을 사용하는 경우에도&lt;/strong&gt; 리포지토리의 이름을 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b9482e6772ed38f0e07d48251101b37ac4d3e564" translate="yes" xml:space="preserve">
          <source>GitHub Pages are powered by Jekyll behind the scenes, so if you&amp;rsquo;re looking for a zero-hassle, zero-cost solution, GitHub Pages are a great way to &lt;a href=&quot;../github-pages/index&quot;&gt;host your Jekyll-powered website for free&lt;/a&gt;.</source>
          <target state="translated">GitHub Pages는 뒤에서 Jekyll에 의해 구동되므로 번거롭고 비용이 들지 않는 솔루션을 찾고 있다면 GitHub Pages는 &lt;a href=&quot;../github-pages/index&quot;&gt;Jekyll 기반 웹 사이트를 무료&lt;/a&gt; 로 호스팅 할 수 있는 좋은 방법 입니다.</target>
        </trans-unit>
        <trans-unit id="98b49c3a0a79daea9a9ac9224c6cade9bea31346" translate="yes" xml:space="preserve">
          <source>GitHub Pages work by looking at certain branches of repositories on GitHub. There are two basic types available: &lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;user/organization and project pages&lt;/a&gt;. The way to deploy these two types of sites are nearly identical, except for a few minor details.</source>
          <target state="translated">GitHub 페이지는 GitHub의 특정 리포지토리를보고 작동합니다. 사용 가능한 기본 유형은 &lt;a href=&quot;https://help.github.com/articles/user-organization-and-project-pages/&quot;&gt;사용자 / 조직 및 프로젝트 페이지의&lt;/a&gt; 두 가지 입니다. 이 두 가지 유형의 사이트를 배포하는 방법은 몇 가지 사소한 세부 사항을 제외하고 거의 동일합니다.</target>
        </trans-unit>
        <trans-unit id="23d0b319e364d2bd5ece7b9f4e4b5526a736744a" translate="yes" xml:space="preserve">
          <source>Given a post named: &lt;code&gt;/2009-04-29-slap-chop.md&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;/2009-04-29-slap-chop.md&lt;/code&gt; 라는 게시물이 있습니다.</target>
        </trans-unit>
        <trans-unit id="10e41e603882ff3e6f001e759b2e5ae1f12eaf4a" translate="yes" xml:space="preserve">
          <source>Glob patterns in Front Matter defaults</source>
          <target state="translated">Front Matter 기본값의 글로브 패턴</target>
        </trans-unit>
        <trans-unit id="602d92b2e14ac385c7289a85d36ef682a9e44c22" translate="yes" xml:space="preserve">
          <source>Global Configuration</source>
          <target state="translated">글로벌 구성</target>
        </trans-unit>
        <trans-unit id="2ff4e53e2b802e1ec127c83da80fa5fc4b5333fa" translate="yes" xml:space="preserve">
          <source>Global Variables</source>
          <target state="translated">글로벌 변수</target>
        </trans-unit>
        <trans-unit id="2d35e11f4c78b7b3b3ca87764462e37d39f55eca" translate="yes" xml:space="preserve">
          <source>Globbing and Performance</source>
          <target state="translated">글 로빙 및 성능</target>
        </trans-unit>
        <trans-unit id="4531c718af3ab7d3ca98c4637f49630a6cb064e8" translate="yes" xml:space="preserve">
          <source>Go to your profile on travis-ci.org: https://travis-ci.org/profile/username</source>
          <target state="translated">travis-ci.org의 프로파일로 이동하십시오 : https://travis-ci.org/profile/username</target>
        </trans-unit>
        <trans-unit id="7178adec52e5c5f4838341c5b3d24d7925f54213" translate="yes" xml:space="preserve">
          <source>Group an array's items by a given property.</source>
          <target state="translated">주어진 속성으로 배열의 항목을 그룹화합니다.</target>
        </trans-unit>
        <trans-unit id="f2a45e739a29c8415f8d916d28f65eb54a2d112d" translate="yes" xml:space="preserve">
          <source>Group an array's items using a Liquid expression.</source>
          <target state="translated">Liquid 식을 사용하여 배열 항목을 그룹화합니다.</target>
        </trans-unit>
        <trans-unit id="66d79524f4d0506a9a1af19b96aee758f2b790d6" translate="yes" xml:space="preserve">
          <source>HTML Proofer</source>
          <target state="translated">HTML 교정자</target>
        </trans-unit>
        <trans-unit id="6c4d623e42153c15b2453aef249170c8234877cc" translate="yes" xml:space="preserve">
          <source>Helpful Hints</source>
          <target state="translated">유용한 힌트들</target>
        </trans-unit>
        <trans-unit id="9aac2ff9f6900ddaeac45839db4be8f1ca90c72f" translate="yes" xml:space="preserve">
          <source>Here are a few examples to clarify how permalink styles get applied with posts.</source>
          <target state="translated">다음은 퍼머 링크 스타일이 게시물에 적용되는 방법을 설명하기위한 몇 가지 예입니다.</target>
        </trans-unit>
        <trans-unit id="831526769d35b12d09459b16086b073d0d812e97" translate="yes" xml:space="preserve">
          <source>Here is a basic example of using Data Files to avoid copy-pasting large chunks of code in your Jekyll templates:</source>
          <target state="translated">다음은 Jekyll 템플릿에 많은 양의 코드를 복사하여 붙여 넣지 않도록 데이터 파일을 사용하는 기본 예입니다.</target>
        </trans-unit>
        <trans-unit id="540ee2aaf7182c6dfc449b18e5accb694e3b0894" translate="yes" xml:space="preserve">
          <source>Here is an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="83640d7e910a9e55e31b51dd8861c25fe6e8116f" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example that passes all the parameters to this include (the include file is named &lt;code&gt;image.html&lt;/code&gt;):</source>
          <target state="translated">다음은이 매개 변수에 모든 매개 변수를 전달하는 예제입니다 (포함 파일의 이름은 &lt;code&gt;image.html&lt;/code&gt; 입니다). ).</target>
        </trans-unit>
        <trans-unit id="abf948b4bceb5e369d172f337195e37748f36726" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example. In the &lt;code&gt;_data&lt;/code&gt; folder, suppose you have a YAML file called &lt;code&gt;profiles.yml&lt;/code&gt;. Its content looks like this:</source>
          <target state="translated">다음은 예입니다. 에서 &lt;code&gt;_data&lt;/code&gt; 의 폴더, 당신라는 YAML 파일이 있다고 가정 &lt;code&gt;profiles.yml&lt;/code&gt; 을 . 내용은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="79a379c34c53ce83d07e71356345ea69136a74d1" translate="yes" xml:space="preserve">
          <source>Here&amp;rsquo;s an example:</source>
          <target state="translated">예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c26aeecbcca5072b431a5382ae6ba27176ef977c" translate="yes" xml:space="preserve">
          <source>Here, we are scoping the &lt;code&gt;values&lt;/code&gt; to any file that exists in the path &lt;code&gt;scope&lt;/code&gt;. Since the path is set as an empty string, it will apply to &lt;strong&gt;all files&lt;/strong&gt; in your project. You probably don&amp;rsquo;t want to set a layout on every file in your project - like css files, for example - so you can also specify a &lt;code&gt;type&lt;/code&gt; value under the &lt;code&gt;scope&lt;/code&gt; key.</source>
          <target state="translated">여기에서는 경로 &lt;code&gt;scope&lt;/code&gt; 존재하는 모든 파일 의 &lt;code&gt;values&lt;/code&gt; 을 지정합니다 . 경로는 빈 문자열로 설정되므로 프로젝트의 &lt;strong&gt;모든 파일&lt;/strong&gt; 에 적용됩니다 . CSS 파일과 같이 프로젝트의 모든 파일에 레이아웃을 설정하지 않으려 는 경우 &lt;code&gt;scope&lt;/code&gt; 키 아래에 &lt;code&gt;type&lt;/code&gt; 값을 지정할 수도 있습니다 .&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="f67ca0046b6f7d123003b1d0cfb9b27a13c9adf6" translate="yes" xml:space="preserve">
          <source>Hey, that&amp;rsquo;s pretty neat, but what about showing just some of your posts that are related to each other? For that you can use any of the &lt;a href=&quot;../frontmatter/index&quot;&gt;variables definable in Front Matter&lt;/a&gt;. In the &amp;ldquo;typical post&amp;rdquo; section you can see how to define categories. Simply add the categories to your Front Matter as a &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;yaml list&lt;/a&gt;.</source>
          <target state="translated">이봐, 정말 깔끔하지만 서로 관련된 게시물 중 일부만 표시하는 것은 어떻습니까? 이를 위해 &lt;a href=&quot;../frontmatter/index&quot;&gt;Front Matter에서 정의 할 수&lt;/a&gt; 있는 변수를 사용할 수 있습니다 . '일반 게시물'섹션에서 카테고리를 정의하는 방법을 볼 수 있습니다. Front Matter에 카테고리를 &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;yaml 목록&lt;/a&gt; 으로 추가하기 만하면 됩니다. .</target>
        </trans-unit>
        <trans-unit id="45836a888498c251d1391be7619c510e1b094a79" translate="yes" xml:space="preserve">
          <source>Highlighting code snippets</source>
          <target state="translated">코드 스 니펫 강조 표시</target>
        </trans-unit>
        <trans-unit id="ac066591edb7d47406e88eed7ba536040a82daf4" translate="yes" xml:space="preserve">
          <source>Homepage</source>
          <target state="translated">Homepage</target>
        </trans-unit>
        <trans-unit id="4bd8f3f03a576b2088bd73a2339d07fca1de805d" translate="yes" xml:space="preserve">
          <source>Hooks</source>
          <target state="translated">Hooks</target>
        </trans-unit>
        <trans-unit id="3c3d2c6f4afae2bd1dd22fa5ecd616951d8fd75a" translate="yes" xml:space="preserve">
          <source>Hooks are registered to a container and an event name. To register one, you call Jekyll::Hooks.register, and pass the container, event name, and code to call whenever the hook is triggered. For example, if you want to execute some custom functionality every time Jekyll renders a post, you could register a hook like this:</source>
          <target state="translated">후크는 컨테이너 및 이벤트 이름에 등록됩니다. 하나를 등록하려면 Jekyll :: Hooks.register를 호출하고 후크가 트리거 될 때마다 호출 할 컨테이너, 이벤트 이름 및 코드를 전달하십시오. 예를 들어 Jekyll이 게시물을 렌더링 할 때마다 일부 사용자 정의 기능을 실행하려면 다음과 같이 후크를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c4ca57faecef53b5cde020963e025ccad78ed174" translate="yes" xml:space="preserve">
          <source>Hour of the day, 24-hour clock, zero-padded from the post's &lt;code&gt;date&lt;/code&gt; front matter. (00..23)</source>
          <target state="translated">하루 중 24 시간 제로, 게시물의 &lt;code&gt;date&lt;/code&gt; 관련이 없습니다. (00..23)</target>
        </trans-unit>
        <trans-unit id="ee6a4883cb5b0b2ebbd4b69d7e1663e3a14e6653" translate="yes" xml:space="preserve">
          <source>How I&amp;rsquo;m using Jekyll in 2016</source>
          <target state="translated">2016 년에 Jekyll을 사용하는 방법</target>
        </trans-unit>
        <trans-unit id="7bf549bc2141e74e473c727a38f9ea61933e2f5c" translate="yes" xml:space="preserve">
          <source>If it is not already installed by your host, you can do it yourself:</source>
          <target state="translated">호스트가 아직 설치하지 않은 경우 직접 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bfd9b131d8fbc9ebadd0174814fa75131d24f89" translate="yes" xml:space="preserve">
          <source>If set, this specifies the layout file to use. Use the layout file name without the file extension. Layout files must be placed in the &lt;code&gt;_layouts&lt;/code&gt; directory.</source>
          <target state="translated">설정된 경우 사용할 레이아웃 파일을 지정합니다. 파일 확장자가없는 레이아웃 파일 이름을 사용하십시오. 레이아웃 파일은 &lt;code&gt;_layouts&lt;/code&gt; 디렉토리 에 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="9238236f6534e05493e0318455680c7da2a905f1" translate="yes" xml:space="preserve">
          <source>If the file does not have YAML front matter, it will simply be copied over into the resulting site.</source>
          <target state="translated">파일에 YAML 프론트 엔드가없는 경우 결과 사이트로 간단히 복사됩니다.</target>
        </trans-unit>
        <trans-unit id="52f8569e79b956dbe48e729796e8f13c33d30812" translate="yes" xml:space="preserve">
          <source>If the file has &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt; at the top, it will be rendered.</source>
          <target state="translated">파일 의 맨 위에 &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML 프론트 물질&lt;/a&gt; 이 있으면 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="6f2f94ff051b156124d9bbb1c67ff42cbd835af7" translate="yes" xml:space="preserve">
          <source>If the page being processed is a Post, this contains a list of up to ten related Posts. By default, these are the ten most recent posts. For high quality but slow to compute results, run the &lt;code&gt;jekyll&lt;/code&gt; command with the &lt;code&gt;--lsi&lt;/code&gt; (&lt;a href=&quot;https://en.wikipedia.org/wiki/Latent_semantic_analysis#Latent_semantic_indexing&quot;&gt;latent semantic indexing&lt;/a&gt;) option. Also note GitHub Pages does not support the &lt;code&gt;lsi&lt;/code&gt; option when generating sites.</source>
          <target state="translated">처리중인 페이지가 게시물 인 경우 최대 10 개의 관련 게시물 목록이 포함됩니다. 기본적으로 이들은 10 개의 최신 게시물입니다. 품질은 높지만 계산 결과는 느리게하려면 &lt;code&gt;jekyll&lt;/code&gt; 명령을 &lt;code&gt;--lsi&lt;/code&gt; ( &lt;a href=&quot;https://en.wikipedia.org/wiki/Latent_semantic_analysis#Latent_semantic_indexing&quot;&gt;잠재 시맨틱 인덱싱&lt;/a&gt; ) 옵션 과 함께 실행하십시오 . 또한 GitHub 페이지는 &lt;code&gt;lsi&lt;/code&gt; 를 지원하지 않습니다 사이트를 생성 할 때 옵션을 .</target>
        </trans-unit>
        <trans-unit id="d641f21c96839fd713c161d3c90256c3c5ff7da7" translate="yes" xml:space="preserve">
          <source>If you already have a full &lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt; development environment with all headers and &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGems&lt;/a&gt; installed (see Jekyll&amp;rsquo;s &lt;a href=&quot;../installation/index#requirements&quot;&gt;requirements&lt;/a&gt;), you can create a new Jekyll site by doing the following:</source>
          <target state="translated">모든 헤더와 &lt;a href=&quot;https://rubygems.org/pages/download&quot;&gt;RubyGem이&lt;/a&gt; 설치된 완전한 &lt;a href=&quot;https://www.ruby-lang.org/en/downloads/&quot;&gt;Ruby&lt;/a&gt; 개발 환경 이 이미있는 경우 (Jekyll의 &lt;a href=&quot;../installation/index#requirements&quot;&gt;요구 사항&lt;/a&gt; 참조 ) 다음을 수행하여 새 Jekyll 사이트를 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c3e668ae49129238e3243fbe784aef06c65fe75" translate="yes" xml:space="preserve">
          <source>If you are using &lt;a href=&quot;https://mustache.github.io&quot;&gt;Mustache&lt;/a&gt; or another JavaScript templating language that conflicts with the &lt;a href=&quot;../templates/index&quot;&gt;Liquid template syntax&lt;/a&gt;, you will need to place &lt;code&gt;{% raw %}&lt;/code&gt; and &lt;code&gt;{% endraw %}&lt;/code&gt; tags around your code.</source>
          <target state="translated">당신이 사용하는 경우 &lt;a href=&quot;https://mustache.github.io&quot;&gt;콧수염&lt;/a&gt; 이나 충돌 또 다른 자바 스크립트 템플릿 언어 &lt;a href=&quot;../templates/index&quot;&gt;액체 템플릿 구문&lt;/a&gt; , 당신은 장소가 필요합니다 &lt;code&gt;{% raw %}&lt;/code&gt; 와 &lt;code&gt;{% endraw %}&lt;/code&gt; 코드 주위에 태그를.</target>
        </trans-unit>
        <trans-unit id="0ed1e0d2a9dbfbe50531ee5b5a5b6ba715d0f7eb" translate="yes" xml:space="preserve">
          <source>If you are using Sass &lt;code&gt;@import&lt;/code&gt; statements, you&amp;rsquo;ll need to ensure that your &lt;code&gt;sass_dir&lt;/code&gt; is set to the base directory that contains your Sass files. You can do that thusly:</source>
          <target state="translated">Sass &lt;code&gt;@import&lt;/code&gt; 문을 사용하는 경우 &lt;code&gt;sass_dir&lt;/code&gt; 이 Sass 파일이 포함 된 기본 디렉토리로 설정되어 있는지 확인해야 합니다. 따라서 그렇게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28a432b4772235d9fdcee272275536f400244d55" translate="yes" xml:space="preserve">
          <source>If you are using Windows 10 Anniversary Update, the easiest way to run Jekyll is by &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;installing&lt;/a&gt; the new Bash on Ubuntu on Windows.</source>
          <target state="translated">Windows 10 1 주년 업데이트를 사용하는 경우 Jekyll을 실행하는 가장 쉬운 방법 은 Windows의 Ubuntu에 새로운 Bash를 &lt;a href=&quot;https://msdn.microsoft.com/en-us/commandline/wsl/install_guide&quot;&gt;설치&lt;/a&gt; 하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="2a4c58b5be6464946cbf57593a4dc9dc48e866b2" translate="yes" xml:space="preserve">
          <source>If you are using a language that contains curly braces, you will likely need to place &lt;code&gt;{% raw %}&lt;/code&gt; and &lt;code&gt;{% endraw %}&lt;/code&gt; tags around your code.</source>
          <target state="translated">중괄호가 포함 된 언어를 사용하는 경우 코드 주위에 &lt;code&gt;{% raw %}&lt;/code&gt; 및 &lt;code&gt;{% endraw %}&lt;/code&gt; 태그를 배치해야합니다.</target>
        </trans-unit>
        <trans-unit id="213db0da911c55c4f2731ecd97c211b394f06562" translate="yes" xml:space="preserve">
          <source>If you are using base-url option like:</source>
          <target state="translated">base-url 옵션을 사용하는 경우 :</target>
        </trans-unit>
        <trans-unit id="d35638d8ed6e8b486e57c45fbf52ce1a8ba65712" translate="yes" xml:space="preserve">
          <source>If you come across a bug, please &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;create an issue&lt;/a&gt; on GitHub describing the problem and any work-arounds you find so we can document it here for others.</source>
          <target state="translated">버그 &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;가 발생&lt;/a&gt; 하면 GitHub에서 문제 및 발견 된 해결 방법을 설명하는 문제를 만들어 다른 사람들을 위해 여기에 문서화 할 수 있도록하십시오.</target>
        </trans-unit>
        <trans-unit id="8703fee3ae2012b8a53fc6cc2adddae7042dfc8d" translate="yes" xml:space="preserve">
          <source>If you come across anything along the way that we haven&amp;rsquo;t covered, or if you know of a tip you think others would find handy, please &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;file an issue&lt;/a&gt; and we&amp;rsquo;ll see about including it in this guide.</source>
          <target state="translated">우리가 다루지 않은 방식으로 무언가를 만났거나 다른 사람들이 유용하다고 생각하는 팁을 알고 있다면 &lt;a href=&quot;https://github.com/jekyll/jekyll/issues/new&quot;&gt;문제를 제기&lt;/a&gt; 하십시오.이 안내서에 포함시키는 것에 대해 알게 될 것입니다.</target>
        </trans-unit>
        <trans-unit id="1b5ec381e23f973cc13dece96999c3131002c2bf" translate="yes" xml:space="preserve">
          <source>If you do preview your theme locally, be sure to add &lt;code&gt;/_site&lt;/code&gt; to your theme&amp;rsquo;s &lt;code&gt;.gitignore&lt;/code&gt; file to prevent the compiled site from also being included when you distribute your theme.</source>
          <target state="translated">테마를 로컬에서 미리 보는 경우 테마 를 배포 할 때 컴파일 된 사이트가 포함되지 않도록 테마의 &lt;code&gt;.gitignore&lt;/code&gt; 파일에 &lt;code&gt;/_site&lt;/code&gt; 를 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f284c06984fce66f7dd57a7b4b5f2ec076b195fe" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t like the automatically-generated post excerpt, it can be explicitly overridden by adding an &lt;code&gt;excerpt&lt;/code&gt; value to your post&amp;rsquo;s YAML Front Matter. Alternatively, you can choose to define a custom &lt;code&gt;excerpt_separator&lt;/code&gt; in the post&amp;rsquo;s YAML front matter:</source>
          <target state="translated">자동 생성 된 게시물 발췌가 마음에 들지 않으면 게시물의 YAML Front Matter에 &lt;code&gt;excerpt&lt;/code&gt; 값을 추가하여 명시 적으로 무시할 수 있습니다 . 또는 게시물의 YAML 프론트 &lt;code&gt;excerpt_separator&lt;/code&gt; 에서 사용자 정의 excerpt_separator 를 정의하도록 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d8dcbea52725084b044622cd5f2ef094e993b82b" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t specify any permalink setting, Jekyll uses the above pattern as the default.</source>
          <target state="translated">영구 링크 설정을 지정하지 않으면 Jekyll은 위 패턴을 기본값으로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="dcb9485c8b5e90e3f365ed37424df30d5e0be640" translate="yes" xml:space="preserve">
          <source>If you don&amp;rsquo;t want file extensions (&lt;code&gt;.html&lt;/code&gt;) to appear in your page URLs (file extensions are the default), you can choose a &lt;a href=&quot;../permalinks/index#builtinpermalinkstyles&quot;&gt;permalink style&lt;/a&gt; that has a trailing slash instead of a file extension.</source>
          <target state="translated">파일 확장자 ( &lt;code&gt;.html&lt;/code&gt; )를 페이지 URL에 표시 하지 않으려면 (파일 확장자가 기본값 임) 파일 확장자 대신 후행 슬래시가있는 &lt;a href=&quot;../permalinks/index#builtinpermalinkstyles&quot;&gt;퍼머 링크 스타일&lt;/a&gt; 을 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="53dcae4af8a7270750576a8ee8bba86266df85af" translate="yes" xml:space="preserve">
          <source>If you don't want to repeat your frequently used front matter variables over and over, just define &lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;defaults&lt;/a&gt; for them and only override them where necessary (or not at all). This works both for predefined and custom variables.</source>
          <target state="translated">자주 사용되는 전면 변수를 반복해서 반복하지 않으려면 &lt;a href=&quot;../configuration/index#front-matter-defaults&quot;&gt;기본값&lt;/a&gt; 을 정의 하고 필요한 경우 (또는 전혀 아님) 재정의하십시오. 이것은 사전 정의 된 변수와 사용자 정의 변수 모두에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="695dbec8f8c7d62ab7d2637fbd3d02db37fa7dca" translate="yes" xml:space="preserve">
          <source>If you elect to use one of the above methods to install Ruby, it might be necessary to modify your &lt;code&gt;$PATH&lt;/code&gt; variable using the following command:</source>
          <target state="translated">위의 방법 중 하나를 사용하여 Ruby를 설치하기로 선택한 경우 다음 명령을 사용 하여 &lt;code&gt;$PATH&lt;/code&gt; 변수 를 수정해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="78ac4df433e508538f8c91dafb01e421b709b72f" translate="yes" xml:space="preserve">
          <source>If you encounter any unexpected errors during the above, please refer to the &lt;a href=&quot;../troubleshooting/index#configuration-problems&quot;&gt;troubleshooting&lt;/a&gt; page or the already-mentioned &lt;a href=&quot;../installation/index#requirements&quot;&gt;requirements&lt;/a&gt; page, as you might be missing development headers or other prerequisites.</source>
          <target state="translated">위의 과정에서 예기치 않은 오류가 발생하면 개발 헤더 나 기타 필수 구성 요소가 누락되었을 수 있으므로 &lt;a href=&quot;../troubleshooting/index#configuration-problems&quot;&gt;문제 해결&lt;/a&gt; 페이지 또는 이미 언급 된 &lt;a href=&quot;../installation/index#requirements&quot;&gt;요구 사항&lt;/a&gt; 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="419149f36b3a43f81bd8852b1793187c1d0de326" translate="yes" xml:space="preserve">
          <source>If you encounter errors during gem installation, you may need to install the header files for compiling extension modules for Ruby 2.x This can be done on Ubuntu or Debian by running:</source>
          <target state="translated">gem 설치 도중 오류가 발생하면 Ruby 2.x 용 확장 모듈을 컴파일하기위한 헤더 파일을 설치해야 할 수 있습니다. 우분투 또는 데비안에서 다음을 실행하여 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc681b212f4599ce7e31a75ab7408667783b5d07" translate="yes" xml:space="preserve">
          <source>If you ever run into problems installing or using Jekyll, here are a few tips that might be of help. If the problem you&amp;rsquo;re experiencing isn&amp;rsquo;t covered below, &lt;strong&gt;please &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;check out our other help resources&lt;/a&gt;&lt;/strong&gt; as well.</source>
          <target state="translated">Jekyll 설치 또는 사용에 문제가있는 경우 도움이 될만한 몇 가지 팁이 있습니다. 발생한 문제가 아래에 포함되어 있지 않은 경우, &lt;strong&gt;제발 &lt;a href=&quot;https://jekyllrb.com/help/&quot;&gt;우리의 다른 도움말 리소스를 확인&lt;/a&gt;&lt;/strong&gt; 뿐만 아니라.</target>
        </trans-unit>
        <trans-unit id="bcaae47dde1bccae46283be925cd88f5bb4ac8bc" translate="yes" xml:space="preserve">
          <source>If you have a Jekyll plugin that you would like to see added to this list, you should &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;read the contributing page&lt;/a&gt; to find out how to make that happen.</source>
          <target state="translated">이 목록에 추가하려는 Jekyll 플러그인이있는 경우 &lt;a href=&quot;https://jekyllrb.com/docs/contributing/&quot;&gt;제공 페이지&lt;/a&gt; 를 읽고이를 수행하는 방법을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="ae769a5e5cf97ef3147fb61d183e310b175222ef" translate="yes" xml:space="preserve">
          <source>If you have a lot of pages, you can organize those pages into subfolders. The same subfolders that are used to group your pages in our project&amp;rsquo;s source will exist in the &lt;code&gt;_site&lt;/code&gt; folder when your site builds.</source>
          <target state="translated">페이지가 많은 경우 해당 페이지를 하위 폴더로 구성 할 수 있습니다. 사이트가 빌드 될 때 프로젝트 소스에서 페이지를 그룹화하는 데 사용되는 동일한 하위 폴더가 &lt;code&gt;_site&lt;/code&gt; 폴더에 있습니다.</target>
        </trans-unit>
        <trans-unit id="5bad37a14e75aa6498e803b19d46fb965756f922" translate="yes" xml:space="preserve">
          <source>If you have a new markup language you&amp;rsquo;d like to use with your site, you can include it by implementing your own converter. Both the Markdown and &lt;a href=&quot;https://github.com/jekyll/jekyll-textile-converter&quot;&gt;Textile&lt;/a&gt; markup languages are implemented using this method.</source>
          <target state="translated">사이트에 사용할 새 마크 업 언어가있는 경우 고유 한 변환기를 구현하여 해당 언어를 포함시킬 수 있습니다. 마크 다운 및 &lt;a href=&quot;https://github.com/jekyll/jekyll-textile-converter&quot;&gt;텍스타일&lt;/a&gt; 마크 업 언어는 모두이 방법을 사용하여 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="11e684240f96bf103554d83d8af061e74dfe3c4d" translate="yes" xml:space="preserve">
          <source>If you have direct access to the deployment web server, the process is essentially the same, except you might have other methods available to you (such as &lt;code&gt;scp&lt;/code&gt;, or even direct filesystem access) for transferring the files. Just remember to make sure the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder get placed in the appropriate web root directory for your web server.</source>
          <target state="translated">배포 웹 서버에 직접 액세스 할 수있는 경우 파일 전송을 위해 다른 방법 (예 : &lt;code&gt;scp&lt;/code&gt; 또는 직접 파일 시스템 액세스)을 사용할 수 있다는 점을 제외하면 프로세스는 기본적으로 동일 합니다. 생성 된 &lt;code&gt;_site&lt;/code&gt; 폴더 의 컨텐츠가 웹 서버에 적합한 웹 루트 디렉토리에 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5eb091944ffc4551a59bb8692f2615682ca2403a" translate="yes" xml:space="preserve">
          <source>If you have pages organized into subfolders in your source folder and want to flatten them in the root folder on build, you must add the &lt;a href=&quot;../permalinks/index&quot;&gt;permalink&lt;/a&gt; property directly in your page&amp;rsquo;s front matter like this:</source>
          <target state="translated">소스 폴더에 하위 폴더로 구성된 페이지가 있고 빌드시 루트 폴더에 페이지를 병합하려는 경우 다음 과 같이 페이지의 맨 앞에 &lt;a href=&quot;../permalinks/index&quot;&gt;법적 링크&lt;/a&gt; 특성을 직접 추가해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0577f8860296868fa98d8d8f4df1bfbc54574ecc" translate="yes" xml:space="preserve">
          <source>If you have small page snippets that you want to include in multiple places on your site, save the snippets as &lt;em&gt;include files&lt;/em&gt; and insert them where required, by using the &lt;code&gt;include&lt;/code&gt; tag:</source>
          <target state="translated">사이트의 여러 위치에 포함 할 작은 페이지 스 니펫이있는 경우 스 니펫을 &lt;em&gt;포함 파일&lt;/em&gt; 로 저장 하고 &lt;code&gt;include&lt;/code&gt; 태그 를 사용하여 필요한 곳에 삽입하십시오 .</target>
        </trans-unit>
        <trans-unit id="e4dcbf97134ec15dac093fc5587622568f5e7a06" translate="yes" xml:space="preserve">
          <source>If you have the theme gem, you can (if you desire) run &lt;code&gt;bundle update&lt;/code&gt; to update all gems in your project. Or you can run &lt;code&gt;bundle update &amp;lt;THEME&amp;gt;&lt;/code&gt;, replacing &lt;code&gt;&amp;lt;THEME&amp;gt;&lt;/code&gt; with the theme name, such as &lt;code&gt;minima&lt;/code&gt;, to just update the theme gem. Any new files or updates the theme developer has made (such as to stylesheets or includes) will be pulled into your project automatically.</source>
          <target state="translated">테마 젬이 있다면, 원하는 경우 &lt;code&gt;bundle update&lt;/code&gt; 를 실행 하여 프로젝트의 모든 젬을 업데이트 할 수 있습니다 . 또는 &lt;code&gt;bundle update &amp;lt;THEME&amp;gt;&lt;/code&gt; 실행 하여 &lt;code&gt;&amp;lt;THEME&amp;gt;&lt;/code&gt; 을 테마 이름 (예 : &lt;code&gt;minima&lt;/code&gt; )으로 바꾸어 테마 gem 만 업데이트 할 수 있습니다. 스타일 시트 나 포함과 같은 테마 개발자가 만든 모든 새 파일이나 업데이트는 프로젝트에 자동으로 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="2af9aac0e83cca3a7b6edb3afed5cb21b5ce923a" translate="yes" xml:space="preserve">
          <source>If you installed the above - specifically on Fedora 23 - but the extensions would still not compile, you are probably running a Fedora image that misses the &lt;code&gt;redhat-rpm-config&lt;/code&gt; package. To solve this, simply run:</source>
          <target state="translated">위의 내용을 (특히 Fedora 23에) 설치했지만 확장 기능이 여전히 컴파일되지 않으면 &lt;code&gt;redhat-rpm-config&lt;/code&gt; 패키지 가 누락 된 Fedora 이미지를 실행중인 것입니다 . 이 문제를 해결하려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="7d5ca65d123a97afb7c4de424400cec844b7cc8b" translate="yes" xml:space="preserve">
          <source>If you need your processed blog post URLs to be something other than the site-wide style (default &lt;code&gt;/year/month/day/title.html&lt;/code&gt;), then you can set this variable and it will be used as the final URL.</source>
          <target state="translated">처리 된 블로그 게시물 URL이 사이트 전체 스타일 (기본값 &lt;code&gt;/year/month/day/title.html&lt;/code&gt; ) 이 아닌 다른 형식이어야하는 경우이 변수를 설정하면 최종 URL로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1a6d4a67cd0be1ed8225a589b96384dc4dc87421" translate="yes" xml:space="preserve">
          <source>If you organize your posts in subdirectories, you need to include subdirectory path to the post:</source>
          <target state="translated">하위 디렉토리에 게시물을 구성하는 경우 게시물의 하위 디렉토리 경로를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="59644a3bec6611d4bbfb69658dbc3ec13b376b50" translate="yes" xml:space="preserve">
          <source>If you organized your categories as &lt;code&gt;/_posts/code/2008-12-24-closures.md&lt;/code&gt;, you will need to restructure your directories to put the categories &lt;em&gt;above&lt;/em&gt; the &lt;code&gt;_posts&lt;/code&gt; directories, as follows: &lt;code&gt;/code/_posts/2008-12-24-closures.md&lt;/code&gt;.</source>
          <target state="translated">당신은 귀하의 범주를 구성하는 경우 &lt;code&gt;/_posts/code/2008-12-24-closures.md&lt;/code&gt; , 당신은 범주에 넣어 구조 조정에 디렉토리를 필요 &lt;em&gt;이상 &lt;/em&gt; &lt;code&gt;_posts&lt;/code&gt; 에 다음과 같이 디렉토리 : &lt;code&gt;/code/_posts/2008-12-24-closures.md&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="15e7da8c7232d666a600ffd29e96790343ccd0c8" translate="yes" xml:space="preserve">
          <source>If you prefer configuration as code over GUI, you can generate a &lt;code&gt;buddy.yml&lt;/code&gt; that will create a pipeline with the Jekyll action once you push it to the target branch:</source>
          <target state="translated">GUI보다 코드로 구성을 선호하는 경우 대상 분기로 푸시하면 Jekyll 작업으로 파이프 라인을 생성하는 &lt;code&gt;buddy.yml&lt;/code&gt; 을 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d87bce7a50eafecc7cde1bce304d6aef1a746a27" translate="yes" xml:space="preserve">
          <source>If you run into an issue that a static file can&amp;rsquo;t be found in your production environment during build since v3.2.0 you should set your &lt;a href=&quot;../configuration/index#specifying-a-jekyll-environment-at-build-time&quot;&gt;environment to &lt;code&gt;production&lt;/code&gt;&lt;/a&gt;. The issue is caused by trying to copy a non-existing symlink.</source>
          <target state="translated">v3.2.0 이후 빌드 중에 프로덕션 환경에서 정적 파일을 찾을 수없는 문제가 발생하면 &lt;a href=&quot;../configuration/index#specifying-a-jekyll-environment-at-build-time&quot;&gt;환경을 &lt;code&gt;production&lt;/code&gt; 으로&lt;/a&gt; 설정해야 합니다 . 존재하지 않는 심볼릭 링크를 복사하려고하면이 문제가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8a24692597a6a916d6932c56c3b3699b4da36b10" translate="yes" xml:space="preserve">
          <source>If you run into issues installing Jekyll's dependencies which make use of native extensions and are using macOS, you will need to install Xcode and the Command-Line Tools it ships with. Download them in &lt;code&gt;Preferences &amp;rarr; Downloads &amp;rarr; Components&lt;/code&gt;.</source>
          <target state="translated">기본 확장을 사용하고 macOS를 사용하는 Jekyll의 종속성을 설치하는 데 문제가 발생하면 Xcode와 함께 제공되는 명령 줄 도구를 설치해야합니다. 그들을 다운로드 &lt;code&gt;Preferences &amp;rarr; Downloads &amp;rarr; Components&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="203d28453b3da20875b1b4f55216eb8f66ab1182" translate="yes" xml:space="preserve">
          <source>If you specify a directory to store all your collections in the same place with &lt;code&gt;collections_dir: my_collections&lt;/code&gt;, then you will need to move your &lt;code&gt;_posts&lt;/code&gt; directory to &lt;code&gt;my_collections/_posts&lt;/code&gt;. Note that, the name of your collections directory cannot start with an underscore (`_`).</source>
          <target state="translated">&lt;code&gt;collections_dir: my_collections&lt;/code&gt; 와 같은 위치에 모든 콜렉션을 저장할 디렉토리를 지정하면 &lt;code&gt;_posts&lt;/code&gt; 디렉토리를 &lt;code&gt;my_collections/_posts&lt;/code&gt; 로 이동해야합니다 . 콜렉션 디렉토리의 이름은 밑줄 (`_`)로 시작할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="152a6851ec832106f1870e82fa9510155e162df2" translate="yes" xml:space="preserve">
          <source>If you specify front matter in a layout, access that via &lt;code&gt;layout&lt;/code&gt;. For example, if you specify &lt;code&gt;class: full_page&lt;/code&gt; in a layout&amp;rsquo;s front matter, that value will be available as &lt;code&gt;layout.class&lt;/code&gt; in the layout and its parents.</source>
          <target state="translated">당신은 레이아웃의 서문을 통해 그 액세스 지정하면 &lt;code&gt;layout&lt;/code&gt; . 예를 들어, 레이아웃의 전면에 &lt;code&gt;class: full_page&lt;/code&gt; 를 지정하면 해당 값을 레이아웃과 해당 부모에서 &lt;code&gt;layout.class&lt;/code&gt; 로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fc758ea2a58bbed0770047b054fc5a31a9910319" translate="yes" xml:space="preserve">
          <source>If you still have issues, you can download and install new Command Line Tools (such as &lt;code&gt;gcc&lt;/code&gt;) using the following command:</source>
          <target state="translated">여전히 문제가있는 경우 다음 명령을 사용하여 새 명령 줄 도구 (예 : &lt;code&gt;gcc&lt;/code&gt; )를 다운로드하여 설치할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3f40408167848ab5e0ef03799fbc3e4838fc4b88" translate="yes" xml:space="preserve">
          <source>If you store your Jekyll site in &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt; (you are using version control, right?), it&amp;rsquo;s pretty easy to automate the deployment process by setting up a post-update hook in your Git repository, &lt;a href=&quot;http://web.archive.org/web/20091223025644/http://www.taknado.com/en/2009/03/26/deploying-a-jekyll-generated-site/&quot;&gt;like this&lt;/a&gt;.</source>
          <target state="translated">Jekyll 사이트를 &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git에&lt;/a&gt; 저장하면 (버전 제어를 사용하고 있습니까?) Git 저장소에 다음 &lt;a href=&quot;http://web.archive.org/web/20091223025644/http://www.taknado.com/en/2009/03/26/deploying-a-jekyll-generated-site/&quot;&gt;과 같이&lt;/a&gt; 업데이트 후 후크를 설정하여 배포 프로세스를 자동화하는 것이 매우 쉽습니다 .</target>
        </trans-unit>
        <trans-unit id="9c5c7747d5156ac128a683ae71080c529b562e3a" translate="yes" xml:space="preserve">
          <source>If you use UTF-8 encoding, make sure that no &lt;code&gt;BOM&lt;/code&gt; header characters exist in your files or very, very bad things will happen to Jekyll. This is especially relevant if you&amp;rsquo;re running &lt;a href=&quot;../windows/index&quot;&gt;Jekyll on Windows&lt;/a&gt;.</source>
          <target state="translated">UTF-8 인코딩을 사용하는 경우 파일에 &lt;code&gt;BOM&lt;/code&gt; 헤더 문자가 없거나 Jekyll에 매우 나쁜 일이 발생 하는지 확인하십시오 . 이것은 &lt;a href=&quot;../windows/index&quot;&gt;Windows&lt;/a&gt; 에서 Jekyll을 실행하는 경우 특히 관련이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="513a6a109d9f46f3d1d111d65d91f74ea48f6618" translate="yes" xml:space="preserve">
          <source>If you use UTF-8 encoding, make sure that no &lt;code&gt;BOM&lt;/code&gt; header characters exist in your files or very, very bad things will happen to Jekyll. This is especially relevant when you&amp;rsquo;re running Jekyll on Windows.</source>
          <target state="translated">UTF-8 인코딩을 사용하는 경우 파일에 &lt;code&gt;BOM&lt;/code&gt; 헤더 문자가 없거나 Jekyll에 매우 나쁜 일이 발생 하는지 확인하십시오 . 이것은 Windows에서 Jekyll을 실행할 때 특히 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac6a31955e7bb198829c3348c36e9744d447c4d5" translate="yes" xml:space="preserve">
          <source>If you use a permalink style that omits the &lt;code&gt;.html&lt;/code&gt; file extension, each post is rendered as an &lt;code&gt;index.html&lt;/code&gt; file inside a folder with the post&amp;rsquo;s name (for example, &lt;code&gt;categoryname/2016/12/01/mypostname/index.html&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;.html&lt;/code&gt; 파일 확장자 를 생략하는 퍼머 링크 스타일을 사용하는 경우 각 게시물은 게시물 이름이있는 폴더 안에 &lt;code&gt;index.html&lt;/code&gt; 파일 로 렌더링됩니다 (예 : &lt;code&gt;categoryname/2016/12/01/mypostname/index.html&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="c60bfc7d9e4f2630fffc6a2784feb3b63c67af79" translate="yes" xml:space="preserve">
          <source>If you use the &lt;code&gt;--config&lt;/code&gt; flag, Jekyll will ignore your &lt;code&gt;_config.yml&lt;/code&gt; file. Want to merge a custom configuration with the normal configuration? No problem. Jekyll will accept more than one custom config file via the command line. Config files cascade from right to left, such that if I run &lt;code&gt;jekyll serve --config _config.yml,_config-dev.yml&lt;/code&gt;, the values in the config files on the right (&lt;code&gt;_config-dev.yml&lt;/code&gt;) overwrite those on the left (&lt;code&gt;_config.yml&lt;/code&gt;) when both contain the same key.</source>
          <target state="translated">&lt;code&gt;--config&lt;/code&gt; 플래그 를 사용하면 Jekyll은 &lt;code&gt;_config.yml&lt;/code&gt; 파일 을 무시합니다 . 사용자 정의 구성을 일반 구성과 병합 하시겠습니까? 문제 없어요. Jekyll은 명령 행을 통해 둘 이상의 사용자 정의 구성 파일을 허용합니다. 구성 파일은 오른쪽에서 왼쪽으로 캐스케이드 &lt;code&gt;jekyll serve --config _config.yml,_config-dev.yml&lt;/code&gt; 을 실행하면 오른쪽 구성 파일의 값 ( &lt;code&gt;_config-dev.yml&lt;/code&gt; )이 왼쪽 의 값을 덮어 씁니다 ( 둘 다 동일한 키를 포함하는 경우 &lt;code&gt;_config.yml&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="093409bc16fd6da356b69f3cf640249f766ed8ff" translate="yes" xml:space="preserve">
          <source>If you use the method described above, please remember that the URLs for all posts and pages contain a leading slash. Therefore, concatenating the site baseurl and the post/page url where &lt;code&gt;site.baseurl = /&lt;/code&gt; and &lt;code&gt;post.url = /2013/06/05/my-fun-post/&lt;/code&gt; will result in two leading slashes, which will break links. It is thus suggested that prefixing with &lt;code&gt;site.baseurl&lt;/code&gt; only be used when the &lt;code&gt;baseurl&lt;/code&gt; is something other than the default of &lt;code&gt;/&lt;/code&gt;.</source>
          <target state="translated">위에서 설명한 방법을 사용하는 경우 모든 게시물 및 페이지의 URL에 슬래시가 포함되어 있습니다. 따라서 &lt;code&gt;site.baseurl = /&lt;/code&gt; 및 &lt;code&gt;post.url = /2013/06/05/my-fun-post/&lt;/code&gt; 위치에 사이트 baseurl과 게시물 / 페이지 URL을 연결하면 두 개의 슬래시가 발생하여 링크가 끊어집니다. 따라서 함께 접두사 것이 좋습니다 &lt;code&gt;site.baseurl&lt;/code&gt; 이 경우에만 사용할 수 &lt;code&gt;baseurl&lt;/code&gt; 기본이 아닌 다른 뭔가 &lt;code&gt;/&lt;/code&gt; 가 .</target>
        </trans-unit>
        <trans-unit id="27f3b5a86ae85eb00dfec776f201d29c0a6d0425" translate="yes" xml:space="preserve">
          <source>If you want to build for your production environment:</source>
          <target state="translated">프로덕션 환경을 위해 빌드하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="54d25f7a99e4ca948852dc14d5de687e3b1584af" translate="yes" xml:space="preserve">
          <source>If you want to flatten your pages (pull them out of subfolders) in the &lt;code&gt;_site&lt;/code&gt; directory when your site builds (similar to posts), add the &lt;code&gt;permalink&lt;/code&gt; property to the front matter of each page, with no path specified:</source>
          <target state="translated">사이트를 빌드 할 때 (게시물과 유사하게) &lt;code&gt;_site&lt;/code&gt; 디렉토리 에서 페이지를 병합 (하위 폴더에서 가져 오기)하려면 경로가 지정되지 않은 상태에서 각 페이지의 전면에 &lt;code&gt;permalink&lt;/code&gt; 속성을 추가하십시오 .</target>
        </trans-unit>
        <trans-unit id="f4fd5fc834be5433029f508f385d4d410e8fef47" translate="yes" xml:space="preserve">
          <source>If you want to host your site in Amazon S3, you can do so by using the &lt;a href=&quot;https://github.com/laurilehmijoki/s3_website&quot;&gt;s3_website&lt;/a&gt; application. It will push your site to Amazon S3 where it can be served like any web server, dynamically scaling to almost unlimited traffic. This approach has the benefit of being about the cheapest hosting option available for low-volume blogs as you only pay for what you use.</source>
          <target state="translated">Amazon S3에서 사이트를 호스팅하려는 경우 &lt;a href=&quot;https://github.com/laurilehmijoki/s3_website&quot;&gt;s3_website&lt;/a&gt; 애플리케이션 을 사용하여 사이트를 호스팅 할 수 있습니다 . 웹 서버처럼 서비스 할 수있는 Amazon S3로 사이트를 푸시하여 거의 무제한 트래픽으로 동적으로 확장합니다. 이 방법을 사용하면 사용한만큼만 비용을 지불하므로 소량의 블로그에서 가장 저렴한 호스팅 옵션을 이용할 수 있다는 이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f193a2d48bc477f05170ef8b36607112f513e30" translate="yes" xml:space="preserve">
          <source>If you want to include a link to a post on your site, the &lt;code&gt;post_url&lt;/code&gt; tag will generate the correct permalink URL for the post you specify.</source>
          <target state="translated">사이트의 게시물에 대한 링크를 포함하려는 경우 &lt;code&gt;post_url&lt;/code&gt; 태그는 지정한 게시물에 대한 올바른 영구 링크 URL을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="3de0868d95be5eca5b95fed7d8f738ea01895123" translate="yes" xml:space="preserve">
          <source>If you want to include this variable in your parameter that you pass to an include, you need to store the entire parameter as a variable before passing it to the include. You can use &lt;code&gt;capture&lt;/code&gt; tags to create the variable:</source>
          <target state="translated">포함에 전달하는 매개 변수에이 변수를 포함하려면 포함에 전달하기 전에 전체 매개 변수를 변수로 저장해야합니다. &lt;code&gt;capture&lt;/code&gt; 태그를 사용하여 변수를 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a658dae7dbd88f8c356e9279323636361d819861" translate="yes" xml:space="preserve">
          <source>If you want to maintain Jekyll inside your existing Rails app, &lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin&quot;&gt;Jekyll-Admin&lt;/a&gt; contains drop in code to make this possible. See Jekyll-Admin&amp;rsquo;s &lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin/blob/master/README&quot;&gt;README&lt;/a&gt; for more details.</source>
          <target state="translated">기존 Rails 앱 내에서 Jekyll을 유지하려면 &lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin&quot;&gt;Jekyll-Admin&lt;/a&gt; 에 코드 드롭 인이 포함되어 있습니다. 자세한 내용은 Jekyll-Admin의 &lt;a href=&quot;https://github.com/zkarpinski/Jekyll-Admin/blob/master/README&quot;&gt;README&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ec215e282a9ad8aecb2e4fc28cabe6ff27440918" translate="yes" xml:space="preserve">
          <source>If you want to use &lt;a href=&quot;../variables/index&quot;&gt;Liquid tags and variables&lt;/a&gt; but don&amp;rsquo;t need anything in your front matter, just leave it empty! The set of triple-dashed lines with nothing in between will still get Jekyll to process your file. (This is useful for things like CSS and RSS feeds!)</source>
          <target state="translated">&lt;a href=&quot;../variables/index&quot;&gt;Liquid 태그와 변수&lt;/a&gt; 를 사용하고 싶지만 , 앞면에 아무것도 필요하지 않으면 비워 두십시오! 사이에 아무 것도없는 3 중 점선은 여전히 ​​Jekyll이 파일을 처리하게합니다. (이것은 CSS 및 RSS 피드와 같은 것들에 유용합니다!)</target>
        </trans-unit>
        <trans-unit id="d1fe99f58a90cab317379dfefe13b26122c4bcda" translate="yes" xml:space="preserve">
          <source>If you wish a specific page to be shown when accessing &lt;code&gt;/my_collection/&lt;/code&gt;, simply add &lt;code&gt;permalink: /my_collection/index.html&lt;/code&gt; to a page. To list items from the collection, on that page or any other, you can use:</source>
          <target state="translated">&lt;code&gt;/my_collection/&lt;/code&gt; 액세스 할 때 특정 페이지를 표시하려면 페이지에 &lt;code&gt;permalink: /my_collection/index.html&lt;/code&gt; 을 추가 하십시오. 컬렉션의 항목을 해당 페이지 나 다른 페이지에 나열하려면 다음을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e19cb6a37691f8463f62bacf36c8b8270dac01f" translate="yes" xml:space="preserve">
          <source>If you wish to specify a custom pattern for the URLs where your Collection pages will reside, you may do so with the &lt;a href=&quot;../permalinks/index&quot;&gt;&lt;code&gt;permalink&lt;/code&gt; property&lt;/a&gt;:</source>
          <target state="translated">컬렉션 페이지가있는 URL에 사용자 정의 패턴을 지정하려면 &lt;a href=&quot;../permalinks/index&quot;&gt; &lt;code&gt;permalink&lt;/code&gt; 속성을 사용하십시오&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="92960387c493deb76d50d5b4ca39fda778849568" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like Jekyll to create a public-facing, rendered version of each document in your collection, set the &lt;code&gt;output&lt;/code&gt; key to &lt;code&gt;true&lt;/code&gt; in your collection metadata in your &lt;code&gt;_config.yml&lt;/code&gt;:</source>
          <target state="translated">Jekyll이 컬렉션에서 각 문서의 공개 버전으로 렌더링 된 버전을 만들려면 &lt;code&gt;_config.yml&lt;/code&gt; 의 컬렉션 메타 데이터에서 &lt;code&gt;output&lt;/code&gt; 키를 &lt;code&gt;true&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="c98ec53237b3b221ccdc7703ba591ac8f244e25b" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to deploy your site to an OpenShift gear, there&amp;rsquo;s &lt;a href=&quot;https://github.com/openshift-quickstart/jekyll-openshift&quot;&gt;a cartridge for that&lt;/a&gt;.</source>
          <target state="translated">OpenShift 기어에 사이트를 배포하려면 해당 &lt;a href=&quot;https://github.com/openshift-quickstart/jekyll-openshift&quot;&gt;카트리지가&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="998a11f086dc4bb30ed94b741a45b756ab41c2bb" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to include custom liquid tags in your site, you can do so by hooking into the tagging system. Built-in examples added by Jekyll include the &lt;code&gt;highlight&lt;/code&gt; and &lt;code&gt;include&lt;/code&gt; tags. Below is an example of a custom liquid tag that will output the time the page was rendered:</source>
          <target state="translated">사이트에 맞춤형 액체 태그를 포함 시키려면 태그 시스템에 연결하면됩니다. Jekyll이 추가 한 내장 예제에는 &lt;code&gt;highlight&lt;/code&gt; 및 &lt;code&gt;include&lt;/code&gt; 태그가 포함됩니다 . 다음은 페이지가 렌더링 된 시간을 출력하는 사용자 지정 액체 태그의 예입니다.</target>
        </trans-unit>
        <trans-unit id="017dd07e8fc43764c8236ec7941cbc62c51810e3" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;d like to install a development version of Jekyll, the process is a bit more involved. This gives you the advantage of having the latest and greatest, but may be unstable.</source>
          <target state="translated">Jekyll의 개발 버전을 설치하려면 프로세스가 조금 더 복잡합니다. 이것은 당신에게 최신의 가장 큰 장점을 제공하지만 불안정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aebf85f03c89a29b9d5ef73ebb61bde1f568e228" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re a Jekyll theme developer (rather than just a consumer of themes), you can package up your theme in RubyGems and allow users to install it through Bundler.</source>
          <target state="translated">Jekyll 테마 개발자 인 경우 (테마 소비자가 아닌) RubyGems에서 테마를 패키지하고 사용자가 Bundler를 통해 테마를 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="05442461ae0760b9acad9cfe9447bcf050ac0078" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in browsing these docs on-the-go, install the &lt;code&gt;jekyll-docs&lt;/code&gt; gem and run &lt;code&gt;jekyll docs&lt;/code&gt; in your terminal.</source>
          <target state="translated">이동 중에 이러한 문서를 탐색하려면 &lt;code&gt;jekyll-docs&lt;/code&gt; gem을 설치하고 터미널에서 &lt;code&gt;jekyll docs&lt;/code&gt; 를 실행 하십시오.</target>
        </trans-unit>
        <trans-unit id="cc2998d4b75650b0973db36fe0764de9a0198df0" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re interested in creating a custom markdown processor, you&amp;rsquo;re in luck! Create a new class in the &lt;code&gt;Jekyll::Converters::Markdown&lt;/code&gt; namespace:</source>
          <target state="translated">사용자 정의 마크 다운 프로세서를 만드는 데 관심이 있다면 운이 좋을 것입니다! &lt;code&gt;Jekyll::Converters::Markdown&lt;/code&gt; 네임 스페이스에 새 클래스를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="fed2ec52185b236d6b0616d0f7b48112da62f321" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re publishing your Jekyll site on &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt;, note that GitHub Pages supports only some gem-based themes. See &lt;a href=&quot;https://pages.github.com/themes/&quot;&gt;Supported Themes&lt;/a&gt; in GitHub&amp;rsquo;s documentation to see which themes are supported.</source>
          <target state="translated">&lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; 에서 Jekyll 사이트를 게시 하는 경우 GitHub Pages는 일부 gem 기반 테마 만 지원합니다. 참조 &lt;a href=&quot;https://pages.github.com/themes/&quot;&gt;지원되는 테마&lt;/a&gt; 지원되는 테마 볼 GitHub의 설명서에 있습니다.</target>
        </trans-unit>
        <trans-unit id="48f80dce2fb4e338ea62c4227bb0b96d4641ecf1" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re switching to Jekyll from another blogging system, Jekyll&amp;rsquo;s importers can help you with the move. To learn more about importing your site to Jekyll, visit our &lt;a href=&quot;https://import.jekyllrb.com/docs/home/&quot;&gt;&lt;code&gt;jekyll-import&lt;/code&gt; docs site&lt;/a&gt;.</source>
          <target state="translated">다른 블로그 시스템에서 Jekyll로 전환하는 경우 Jekyll의 수입 업체가 이동에 도움을 줄 수 있습니다. Jekyll으로 사이트를 가져 오는 방법에 대한 자세한 내용은 &lt;a href=&quot;https://import.jekyllrb.com/docs/home/&quot;&gt; &lt;code&gt;jekyll-import&lt;/code&gt; docs site를&lt;/a&gt; 방문하십시오 .</target>
        </trans-unit>
        <trans-unit id="e9b8cf204b37c543bd6f902a9912dc1bc10fb847" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re the kind of person who is using Jekyll, then chances are you&amp;rsquo;ll want to enable syntax highlighting using &lt;a href=&quot;http://pygments.org/&quot;&gt;Pygments&lt;/a&gt; or &lt;a href=&quot;https://github.com/jayferd/rouge&quot;&gt;Rouge&lt;/a&gt;. You should really &lt;a href=&quot;../templates/index#code-snippet-highlighting&quot;&gt;check out how to do that&lt;/a&gt; before you go any farther.</source>
          <target state="translated">Jekyll을 사용하는 사람 &lt;a href=&quot;http://pygments.org/&quot;&gt;이라면 Pygments&lt;/a&gt; 또는 &lt;a href=&quot;https://github.com/jayferd/rouge&quot;&gt;Rouge를&lt;/a&gt; 사용하여 구문 강조를 활성화하고 싶을 것 입니다. 더 멀리 가기 전에 &lt;a href=&quot;../templates/index#code-snippet-highlighting&quot;&gt;어떻게해야하는지 확인&lt;/a&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2c45a730de0f4a66c90fb58a381c30517e30ab21" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re unfamiliar with creating Ruby gems, don&amp;rsquo;t worry. Jekyll will help you scaffold a new theme with the &lt;code&gt;new-theme&lt;/code&gt; command. Run &lt;code&gt;jekyll new-theme&lt;/code&gt; with the theme name as an argument.</source>
          <target state="translated">루비 보석을 만드는 데 익숙하지 않아도 걱정하지 마십시오. Jekyll은 &lt;code&gt;new-theme&lt;/code&gt; 명령을 사용하여 새로운 테마를 비계하는 데 도움이됩니다 . 테마 이름을 인수로 사용하여 &lt;code&gt;jekyll new-theme&lt;/code&gt; 을 실행하십시오 .</target>
        </trans-unit>
        <trans-unit id="e2f1fd80e1acac73721bceb69b6432074f20f49a" translate="yes" xml:space="preserve">
          <source>If you&amp;rsquo;re unsure of the path, add &lt;code&gt;{{ page.path }}&lt;/code&gt; to the page and it will display the path.</source>
          <target state="translated">경로가 확실하지 않으면 페이지 에 &lt;code&gt;{{ page.path }}&lt;/code&gt; 를 추가 하면 경로가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="6d0e68810885667c178f7be4a18662c57e20c8df" translate="yes" xml:space="preserve">
          <source>If your Jekyll site has a lot of pages, such as with documentation websites, see the detailed examples in &lt;a href=&quot;https://jekyllrb.com/tutorials/navigation/&quot;&gt;how to build robust navigation for your site&lt;/a&gt;.</source>
          <target state="translated">Jekyll 사이트에 문서 웹 사이트와 같이 많은 페이지가있는 경우 사이트 &lt;a href=&quot;https://jekyllrb.com/tutorials/navigation/&quot;&gt;를위한 강력한 탐색 방법에&lt;/a&gt; 대한 자세한 예를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="6f07552e08d7e7eb8c68907cfa9ca67e5186c921" translate="yes" xml:space="preserve">
          <source>In 2.x, your iterations over &lt;code&gt;site.collections&lt;/code&gt; yielded an array with the collection label and the collection object as the first and second items, respectively. In 3.x, this complication has been removed and iterations now yield simply the collection object. A simple conversion must be made in your templates:</source>
          <target state="translated">2.x에서 &lt;code&gt;site.collections&lt;/code&gt; 를 반복 하면 컬렉션 레이블과 컬렉션 개체가 각각 첫 번째 및 두 번째 항목으로 배열이 생성됩니다. 3.x에서는이 합병증이 제거되었으며 이제 반복을 통해 단순히 컬렉션 개체가 생성됩니다. 템플릿에서 간단한 변환을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="45281f936e80f86f5e93c43c758e8a1f19af601f" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_data/members.yml&lt;/code&gt;:</source>
          <target state="translated">에서 &lt;code&gt;_data/members.yml&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cde842ba78bff9c9b8124ebd1559825b3bc94132" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_data/orgs/doeorg.yml&lt;/code&gt;:</source>
          <target state="translated">에서 &lt;code&gt;_data/orgs/doeorg.yml&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="cd43046023d9729d0551bd15c18ada04dde39f32" translate="yes" xml:space="preserve">
          <source>In &lt;code&gt;_data/orgs/jekyll.yml&lt;/code&gt;:</source>
          <target state="translated">에서 &lt;code&gt;_data/orgs/jekyll.yml&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="8048d2cbef7239f500f42954c2da2f843c49740b" translate="yes" xml:space="preserve">
          <source>In Jekyll 2, any URL constructed from the &lt;code&gt;permalink:&lt;/code&gt; field had a trailing slash (&lt;code&gt;/&lt;/code&gt;) added to it automatically. Jekyll 3 no longer adds a trailing slash automatically to &lt;code&gt;permalink:&lt;/code&gt; URLs. This can potentially result in old links to pages returning a 404 error. For example, suppose a page previously contained the YAML &lt;code&gt;permalink: /:year-:month-:day-:title&lt;/code&gt; that resulted in the URL &lt;code&gt;example.com/2016-02-01-test/&lt;/code&gt; (notice the trailing slash), Jekyll internally generates a folder named &lt;code&gt;2016-02-01-test&lt;/code&gt;. In Jekyll 3, the same &lt;code&gt;permalink:&lt;/code&gt; generate the file &lt;code&gt;2016-02-01-test.html&lt;/code&gt; and the URL for the same page will be &lt;code&gt;example.com/2016-02-01-test&lt;/code&gt;, and consequently any links to the old URL will result in a 404 error. In order to maintain the same URLs and avoid this problem, a trailing slash should be added to the &lt;code&gt;permalink:&lt;/code&gt; field, for example &lt;code&gt;permalink: /:year-:month-:day-:title/&lt;/code&gt;.</source>
          <target state="translated">Jekyll 2에서 &lt;code&gt;permalink:&lt;/code&gt; 필드로 구성된 URL 에는 후행 슬래시 ( &lt;code&gt;/&lt;/code&gt; )가 자동으로 추가되었습니다. 지킬 3은 더 이상 자동 끝에 슬래시를 추가하지 &lt;code&gt;permalink:&lt;/code&gt; URL을. 이로 인해 페이지에 대한 오래된 링크가 404 오류를 반환 할 수 있습니다. 예를 들어, 페이지에 이전에 YAML &lt;code&gt;permalink: /:year-:month-:day-:title&lt;/code&gt; 가 포함되어 URL &lt;code&gt;example.com/2016-02-01-test/&lt;/code&gt; (후행 슬래시를 통지 함) 인 Jekyll이 내부에 있다고 가정합니다 . &lt;code&gt;2016-02-01-test&lt;/code&gt; 라는 폴더를 생성합니다 . Jekyll 3에서 동일한 &lt;code&gt;permalink:&lt;/code&gt; 파일 &lt;code&gt;2016-02-01-test.html&lt;/code&gt; 을 생성 하면 동일한 페이지의 URL은 다음과 같습니다. &lt;code&gt;example.com/2016-02-01-test&lt;/code&gt; 및 이전 URL에 대한 링크로 인해 404 오류가 발생합니다. 동일한 URL을 유지하고이 문제를 피하려면 &lt;code&gt;permalink:&lt;/code&gt; 필드에 후행 슬래시를 추가해야합니다 ( 예 &lt;code&gt;permalink: /:year-:month-:day-:title/&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3873159b8f4d7abf52a0f7525978c8fb359bcf37" translate="yes" xml:space="preserve">
          <source>In Jekyll 3 and above, relative permalinks have been deprecated. If you created your site using Jekyll 2 and below, you may receive the following error when trying to &lt;strong&gt;serve&lt;/strong&gt; or &lt;strong&gt;build&lt;/strong&gt;:</source>
          <target state="translated">Jekyll 3 이상에서는 상대 퍼머 링크가 더 이상 사용되지 않습니다. Jekyll 2 이하를 사용하여 사이트를 만든 경우 &lt;strong&gt;서비스&lt;/strong&gt; 를 &lt;strong&gt;제공&lt;/strong&gt; 하거나 &lt;strong&gt;빌드&lt;/strong&gt; 하려고 할 때 다음 오류가 발생할 &lt;strong&gt;수 있습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="9da76fc9ddd240122475ed3606ddf4d269bd399e" translate="yes" xml:space="preserve">
          <source>In Jekyll v1.0, we introduced absolute permalinks for pages in subdirectories. Starting with v2.0, absolute permalinks are opt-out, meaning Jekyll will default to using absolute permalinks instead of relative permalinks. Relative permalink backwards-compatibility was removed in v3.0.</source>
          <target state="translated">Jekyll v1.0에서는 하위 디렉토리의 페이지에 대한 절대 영구 링크를 도입했습니다. v2.0부터 절대 퍼머 링크는 옵트 아웃됩니다. 즉, Jekyll은 기본적으로 상대 퍼머 링크 대신 절대 퍼머 링크를 사용합니다. 상대적인 퍼머 링크 하위 호환성은 v3.0에서 제거되었습니다.</target>
        </trans-unit>
        <trans-unit id="137a2c8a22c797957aaba3d668b93f39e0a4e360" translate="yes" xml:space="preserve">
          <source>In addition to &lt;a href=&quot;../posts/index&quot;&gt;writing posts&lt;/a&gt;, you might also want to add static pages (content that isn&amp;rsquo;t date-based) to your Jekyll site. By taking advantage of the way Jekyll copies files and directories, this is easy to do.</source>
          <target state="translated">&lt;a href=&quot;../posts/index&quot;&gt;게시물 작성&lt;/a&gt; 외에도 Jekyll 사이트에 정적 페이지 (날짜 기반이 아닌 콘텐츠)를 추가 할 수도 있습니다. Jekyll이 파일과 디렉토리를 복사하는 방식을 이용하면 쉽게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5977b91adc8950e114e57ba6fd1cc290bbd8445" translate="yes" xml:space="preserve">
          <source>In addition to any YAML Front Matter provided in the document&amp;rsquo;s corresponding file, each document has the following attributes:</source>
          <target state="translated">문서의 해당 파일에 제공된 YAML Front Matter 외에도 각 문서에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddd733ae4dd13a946b75f3e6f10913d5e7486d8c" translate="yes" xml:space="preserve">
          <source>In addition to any collections you create yourself, the &lt;code&gt;posts&lt;/code&gt; collection is hard-coded into Jekyll. It exists whether you have a &lt;code&gt;_posts&lt;/code&gt; directory or not. This is something to note when iterating through &lt;code&gt;site.collections&lt;/code&gt; as you may need to filter it out.</source>
          <target state="translated">직접 만든 컬렉션 외에도 &lt;code&gt;posts&lt;/code&gt; 컬렉션은 Jekyll에 하드 코딩됩니다. &lt;code&gt;_posts&lt;/code&gt; 디렉토리 가 있는지 여부가 존재합니다 . 이것은 필터링해야 할 수도 있으므로 &lt;code&gt;site.collections&lt;/code&gt; 를 반복 할 때 유의해야 할 사항 입니다.</target>
        </trans-unit>
        <trans-unit id="de4614543299930d373fbc0c3668decb1e5afec5" translate="yes" xml:space="preserve">
          <source>In addition to renderable and convertible content, we also have &lt;strong&gt;static files&lt;/strong&gt;.</source>
          <target state="translated">렌더링 및 변환 가능한 컨텐츠 외에도 &lt;strong&gt;정적 파일이 있습니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="262a4460ff960783349ae1c3141344919035643d" translate="yes" xml:space="preserve">
          <source>In addition to the &lt;a href=&quot;../variables/index&quot;&gt;built-in variables&lt;/a&gt; available from Jekyll, you can specify your own custom data that can be accessed via the &lt;a href=&quot;https://wiki.github.com/shopify/liquid/liquid-for-designers&quot;&gt;Liquid templating system&lt;/a&gt;.</source>
          <target state="translated">Jekyll에서 제공 하는 &lt;a href=&quot;../variables/index&quot;&gt;내장 변수&lt;/a&gt; 외에도 &lt;a href=&quot;https://wiki.github.com/shopify/liquid/liquid-for-designers&quot;&gt;Liquid templating 시스템을&lt;/a&gt; 통해 액세스 할 수있는 사용자 정의 데이터를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5fa3779ef0ef87de347d1b02e40eb5d39f49bc9b" translate="yes" xml:space="preserve">
          <source>In addition to the options below, the &lt;code&gt;serve&lt;/code&gt; sub-command can accept any of the options for the &lt;code&gt;build&lt;/code&gt; sub-command, which are then applied to the site build which occurs right before your site is served.</source>
          <target state="translated">&lt;code&gt;serve&lt;/code&gt; 하위 명령은 아래 옵션 외에도 &lt;code&gt;build&lt;/code&gt; 하위 명령 에 대한 옵션을 사용할 수 있으며,이 옵션은 사이트가 제공되기 직전에 발생하는 사이트 빌드에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="ad77db62fe2f7780d8731931072d4d92705aa9c7" translate="yes" xml:space="preserve">
          <source>In general, plugins you make will fall broadly into one of five categories:</source>
          <target state="translated">일반적으로 플러그인은 5 가지 범주 중 하나에 속합니다.</target>
        </trans-unit>
        <trans-unit id="92cb54b26fce6f64d865299e23f532b7347aa7e1" translate="yes" xml:space="preserve">
          <source>In layout files, the rendered content of the Post or Page being wrapped. Not defined in Post or Page files.</source>
          <target state="translated">레이아웃 파일에서 포스트 또는 페이지의 렌더링 된 내용이 줄 바꿈됩니다. 게시물 또는 페이지 파일에 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8a11123a4885bc93a6c358a7052dbadb25f2ae33" translate="yes" xml:space="preserve">
          <source>In order for the highlighting to show up, you&amp;rsquo;ll need to include a highlighting stylesheet. For an example stylesheet you can look at &lt;a href=&quot;https://github.com/mojombo/tpw/tree/master/css/syntax.css&quot;&gt;syntax.css&lt;/a&gt;. These are the same styles as used by GitHub and you are free to use them for your own site. If you use &lt;code&gt;linenos&lt;/code&gt;, you might want to include an additional CSS class definition for the &lt;code&gt;.lineno&lt;/code&gt; class in &lt;code&gt;syntax.css&lt;/code&gt; to distinguish the line numbers from the highlighted code.</source>
          <target state="translated">강조 표시를 표시하려면 강조 표시 스타일 시트를 포함해야합니다. 예제 스타일 시트의 경우 &lt;a href=&quot;https://github.com/mojombo/tpw/tree/master/css/syntax.css&quot;&gt;syntax.css를&lt;/a&gt; 볼 수 있습니다 . 이들은 GitHub에서 사용하는 것과 동일한 스타일이며 자신의 사이트에서 자유롭게 사용할 수 있습니다. &lt;code&gt;linenos&lt;/code&gt; 를 사용하는 경우 강조 표시된 코드와 줄 번호를 구분하기 위해 &lt;code&gt;syntax.css&lt;/code&gt; 에 &lt;code&gt;.lineno&lt;/code&gt; 클래스에 대한 추가 CSS 클래스 정의를 포함 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="92921e0c63f70f1ce180d6a3e7cb4c97a0eb950e" translate="yes" xml:space="preserve">
          <source>In order to install a pre-release, make sure you have all the requirements installed properly and run:</source>
          <target state="translated">시험판을 설치하려면 모든 요구 사항이 올바르게 설치되어 있는지 확인하고 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="f0a99e23efade4197b1e52469682f0f893a21ad9" translate="yes" xml:space="preserve">
          <source>In our example, &lt;code&gt;UpcaseConverter#matches&lt;/code&gt; checks if our filename extension is &lt;code&gt;.upcase&lt;/code&gt;, and will render using the converter if it is. It will call &lt;code&gt;UpcaseConverter#convert&lt;/code&gt; to process the content. In our simple converter we&amp;rsquo;re simply uppercasing the entire content string. Finally, when it saves the page, it will do so with a &lt;code&gt;.html&lt;/code&gt; extension.</source>
          <target state="translated">이 예에서 &lt;code&gt;UpcaseConverter#matches&lt;/code&gt; 는 파일 이름 확장자가 &lt;code&gt;.upcase&lt;/code&gt; 인지 확인 하고 변환기 인 경우 변환기를 사용하여 렌더링합니다. 내용을 처리하기 위해 &lt;code&gt;UpcaseConverter#convert&lt;/code&gt; 를 호출 합니다. 간단한 변환기에서는 단순히 전체 내용 문자열을 대문자로 표시합니다. 마지막으로 페이지를 저장하면 &lt;code&gt;.html&lt;/code&gt; 확장자로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="589e3464f6983f476e200524c86fa956e44336f7" translate="yes" xml:space="preserve">
          <source>In the &lt;code&gt;_includes&lt;/code&gt; folder, assume you have a file called &lt;code&gt;spotlight.html&lt;/code&gt; with this code:</source>
          <target state="translated">에서 &lt;code&gt;_includes&lt;/code&gt; 의 폴더, 당신라는 파일이 있다고 가정 &lt;code&gt;spotlight.html&lt;/code&gt; 이 코드를 :</target>
        </trans-unit>
        <trans-unit id="82b5ec249103fb1fdb876d5bf56bb5b373e62ac9" translate="yes" xml:space="preserve">
          <source>In the build (or serve) arguments, you can specify a Jekyll environment and value. The build will then apply this value in any conditional statements in your content.</source>
          <target state="translated">빌드 (또는 서브) 인수에서 Jekyll 환경과 값을 지정할 수 있습니다. 그러면 빌드는이 값을 컨텐츠의 모든 조건문에 적용합니다.</target>
        </trans-unit>
        <trans-unit id="ca17f2fe3994021e071c92453baa97e708f63fbf" translate="yes" xml:space="preserve">
          <source>In the case of Minima, you see only the following files in your Jekyll site directory:</source>
          <target state="translated">Minima의 경우 Jekyll 사이트 디렉토리에 다음 파일 만 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="73aa65e9152847600349b0332ad25629dcd365c5" translate="yes" xml:space="preserve">
          <source>In the example above, we can place the following tag anywhere in one of our pages:</source>
          <target state="translated">위의 예에서 다음 태그를 페이지의 어느 위치 에나 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbcc71f1f3f382fa9da32fabfcae01c9258fd9ed" translate="yes" xml:space="preserve">
          <source>In the future the installation process of the github-pages should be as simple as the setup of the blog. But as long as the new version of the Nokogiri (&lt;a href=&quot;https://github.com/sparklemotion/nokogiri/releases&quot;&gt;v1.6.8&lt;/a&gt;) is not stable and referenced, it is work to get it up and running on Windows.</source>
          <target state="translated">앞으로 github 페이지의 설치 과정은 블로그 설정만큼 간단해야합니다. 그러나 새로운 버전의 Nokogiri ( &lt;a href=&quot;https://github.com/sparklemotion/nokogiri/releases&quot;&gt;v1.6.8&lt;/a&gt; )가 안정적이지 않고 참조되지 않는 한 Windows에서이를 실행하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="f5f641e52e69872bdaff7c469dcb92b54266d954" translate="yes" xml:space="preserve">
          <source>In this case, the listing pages will be accessible at &lt;code&gt;{baseurl}/category/blog.html&lt;/code&gt;</source>
          <target state="translated">이 경우 목록 페이지는 &lt;code&gt;{baseurl}/category/blog.html&lt;/code&gt; 에서 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a8c7970f2ab1be04e8c7c366c84315f5db51e4c7" translate="yes" xml:space="preserve">
          <source>In this example, our generator will create a series of files under the &lt;code&gt;categories&lt;/code&gt; directory for each category, listing the posts in each category using the &lt;code&gt;category_index.html&lt;/code&gt; layout.</source>
          <target state="translated">이 예에서 생성기는 &lt;code&gt;category_index.html&lt;/code&gt; 레이아웃을 사용하여 각 카테고리의 게시물을 나열하여 각 카테고리 의 &lt;code&gt;categories&lt;/code&gt; 디렉토리 아래에 일련의 파일을 작성 합니다.</target>
        </trans-unit>
        <trans-unit id="2cf773ac04f813b0e294961a92d744e2c3408b9b" translate="yes" xml:space="preserve">
          <source>In this example, the &lt;code&gt;layout&lt;/code&gt; is set to &lt;code&gt;default&lt;/code&gt; inside the &lt;a href=&quot;../collections/index&quot;&gt;collection&lt;/a&gt; with the name &lt;code&gt;my_collection&lt;/code&gt;.</source>
          <target state="translated">이 예제에서 &lt;code&gt;layout&lt;/code&gt; 은 이름이 &lt;code&gt;my_collection&lt;/code&gt; 인&lt;a href=&quot;../collections/index&quot;&gt;컬렉션&lt;/a&gt; 내에서 &lt;code&gt;default&lt;/code&gt; 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="eb94263d3a4b7b2763922a8c12799d8a35026a62" translate="yes" xml:space="preserve">
          <source>In this example, the include would insert the file &lt;code&gt;footer_company_a.html&lt;/code&gt; from the &lt;code&gt;_includes/footer_company_a.html&lt;/code&gt; directory.</source>
          <target state="translated">이 예에서, 포함 파일에 삽입 할 &lt;code&gt;footer_company_a.html&lt;/code&gt; 로부터 &lt;code&gt;_includes/footer_company_a.html&lt;/code&gt; 의 디렉토리.</target>
        </trans-unit>
        <trans-unit id="9b31a618d0810733e64d193638c5aab33882dde7" translate="yes" xml:space="preserve">
          <source>In this instance, &lt;code&gt;site.data.profiles&lt;/code&gt; gets inserted in place of &lt;code&gt;include.participants&lt;/code&gt; in the include file, and the Liquid logic processes. The result will be &lt;code&gt;Jane Doe&lt;/code&gt;.</source>
          <target state="translated">이 경우 &lt;code&gt;include.participants&lt;/code&gt; 대신 &lt;code&gt;site.data.profiles&lt;/code&gt; 가 include 파일에 삽입되고 Liquid 논리 프로세스가 수행됩니다. 결과는 &lt;code&gt;Jane Doe&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="5a7ef22adc478c9a3b0bb4fef7119f7a4c2ee61f" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;_config.yml&lt;/code&gt; file, add a new array with the key &lt;code&gt;plugins&lt;/code&gt; (or &lt;code&gt;gems&lt;/code&gt; for Jekyll &amp;lt; &lt;code&gt;3.5.0&lt;/code&gt;) and the values of the gem names of the plugins you&amp;rsquo;d like to use. An example:</source>
          <target state="translated">당신에 &lt;code&gt;_config.yml&lt;/code&gt; 의 파일, 키에 새로운 배열을 추가 &lt;code&gt;plugins&lt;/code&gt; (또는 &lt;code&gt;gems&lt;/code&gt; 지킬 &amp;lt;대한 &lt;code&gt;3.5.0&lt;/code&gt; 사용하려는) 및 플러그인의 보석 이름의 값. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="bf9dc7a2954e8514613c982dd81fe474933609f8" translate="yes" xml:space="preserve">
          <source>In your &lt;code&gt;_config.yml&lt;/code&gt; file, add the following values to the &lt;code&gt;defaults&lt;/code&gt; property:</source>
          <target state="translated">당신에 &lt;code&gt;_config.yml&lt;/code&gt; 파일의에 다음 값을 추가 &lt;code&gt;defaults&lt;/code&gt; 속성을 :</target>
        </trans-unit>
        <trans-unit id="bdf1d4e7b2a9d82aac6f15504c1b8e025275caf8" translate="yes" xml:space="preserve">
          <source>In your site source root, make a &lt;code&gt;_plugins&lt;/code&gt; directory. Place your plugins here. Any file ending in &lt;code&gt;*.rb&lt;/code&gt; inside this directory will be loaded before Jekyll generates your site.</source>
          <target state="translated">사이트 소스 루트에서 &lt;code&gt;_plugins&lt;/code&gt; 디렉토리를 작성하십시오. 플러그인을 여기에 배치하십시오. 이 디렉토리 에서 &lt;code&gt;*.rb&lt;/code&gt; 로 끝나는 모든 파일 은 Jekyll이 사이트를 생성하기 전에로드됩니다.</target>
        </trans-unit>
        <trans-unit id="db54974f7f0ad531e35648ba85b9388029b4d7ef" translate="yes" xml:space="preserve">
          <source>Includes</source>
          <target state="translated">Includes</target>
        </trans-unit>
        <trans-unit id="525d443047f688fa21fd3dd9c8ff2eedab7dad54" translate="yes" xml:space="preserve">
          <source>Including an image asset in a post:</source>
          <target state="translated">게시물에 이미지 자산 포함</target>
        </trans-unit>
        <trans-unit id="1f7a1fcdd2514ccdb830db698078bc93bc2c326b" translate="yes" xml:space="preserve">
          <source>Including files relative to another file</source>
          <target state="translated">다른 파일과 관련된 파일 포함</target>
        </trans-unit>
        <trans-unit id="9a05788a2e9ad3ef56f62e0f130e8cd0346e51c4" translate="yes" xml:space="preserve">
          <source>Including images and resources</source>
          <target state="translated">이미지 및 리소스 포함</target>
        </trans-unit>
        <trans-unit id="b91689a4ea776c083cae7da24e7822db50feb47d" translate="yes" xml:space="preserve">
          <source>Incremental Regeneration</source>
          <target state="translated">증분 재생</target>
        </trans-unit>
        <trans-unit id="f81c2e0ac93fe966e8a36a74b91ba62aa5863009" translate="yes" xml:space="preserve">
          <source>Incremental regeneration can be enabled via the &lt;code&gt;--incremental&lt;/code&gt; flag (&lt;code&gt;-I&lt;/code&gt; for short) from the command-line or by setting &lt;code&gt;incremental: true&lt;/code&gt; in your configuration file.</source>
          <target state="translated">명령 줄에서 &lt;code&gt;--incremental&lt;/code&gt; 플래그 ( 짧은 경우 &lt;code&gt;-I&lt;/code&gt; )를 사용하거나 구성 파일에서 &lt;code&gt;incremental: true&lt;/code&gt; 를 설정 하여 증분 재생성을 활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6006efa32ed1ccb24da40c6fab9a1c8038d7a743" translate="yes" xml:space="preserve">
          <source>Incremental regeneration helps shorten build times by only generating documents and pages that were updated since the previous build. It does this by keeping track of both file modification times and inter-document dependencies in the &lt;code&gt;.jekyll-metadata&lt;/code&gt; file.</source>
          <target state="translated">증분 재생성은 이전 빌드 이후 업데이트 된 문서와 페이지 만 생성하여 빌드 시간을 단축시킵니다. &lt;code&gt;.jekyll-metadata&lt;/code&gt; 파일의 파일 수정 시간과 문서 간 종속성을 모두 추적하여 이를 수행 합니다.</target>
        </trans-unit>
        <trans-unit id="1bd191c875e05fc6998e389343b41b60f6eec5c0" translate="yes" xml:space="preserve">
          <source>Incremental regeneration is still an experimental feature</source>
          <target state="translated">증분 재생은 여전히 ​​실험적인 기능입니다</target>
        </trans-unit>
        <trans-unit id="2754588b37fe5f3d6e0bcb568f9e52a57bd3ad5a" translate="yes" xml:space="preserve">
          <source>Install Jekyll and Bundler via a command prompt window: &lt;code&gt;gem install jekyll bundler&lt;/code&gt;</source>
          <target state="translated">명령 프롬프트 창을 통해 Jekyll 및 Bundler &lt;code&gt;gem install jekyll bundler&lt;/code&gt; : gem install jekyll bundler</target>
        </trans-unit>
        <trans-unit id="a7599704444a72a5825e2212231a365f0e3752da" translate="yes" xml:space="preserve">
          <source>Install Ruby and Ruby development kit</source>
          <target state="translated">Ruby 및 Ruby 개발 키트 설치</target>
        </trans-unit>
        <trans-unit id="2b487a9122ff8e426803cc72375725e97f9e6a44" translate="yes" xml:space="preserve">
          <source>Install Ruby via Chocolatey: &lt;code&gt;choco install ruby -y&lt;/code&gt;</source>
          <target state="translated">Chocolatey를 통해 Ruby 설치 : &lt;code&gt;choco install ruby -y&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2cdce4c177bc9e007f528a3235e08a88a41c6662" translate="yes" xml:space="preserve">
          <source>Install a package manager for Windows called &lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://chocolatey.org/install&quot;&gt;Chocolatey&lt;/a&gt; 라는 Windows 용 패키지 관리자 설치</target>
        </trans-unit>
        <trans-unit id="22c8d123bf73db1aacc59d30555b734cd07b4e2a" translate="yes" xml:space="preserve">
          <source>Install github-pages</source>
          <target state="translated">github-pages 설치</target>
        </trans-unit>
        <trans-unit id="abb88c8dd2461e34977887fddc50a42e89837700" translate="yes" xml:space="preserve">
          <source>Install the &lt;code&gt;jekyll-coffeescript&lt;/code&gt; gem</source>
          <target state="translated">&lt;code&gt;jekyll-coffeescript&lt;/code&gt; gem 설치</target>
        </trans-unit>
        <trans-unit id="d885f2ed59243070a4543bf4c623700512e83b3a" translate="yes" xml:space="preserve">
          <source>Install the theme:</source>
          <target state="translated">테마를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="cdc7600640f4488a302a9ef8db6eee3b7770c1b0" translate="yes" xml:space="preserve">
          <source>Install with RubyGems</source>
          <target state="translated">RubyGems로 설치</target>
        </trans-unit>
        <trans-unit id="c81b79df3c6448eae7c4f80428b54cd5692a17d7" translate="yes" xml:space="preserve">
          <source>Installation</source>
          <target state="translated">Installation</target>
        </trans-unit>
        <trans-unit id="1061e24b97b7e7926c0e75ef8fe1d7b8635a2b45" translate="yes" xml:space="preserve">
          <source>Installation Problems</source>
          <target state="translated">설치 문제</target>
        </trans-unit>
        <trans-unit id="88b0adc28bc5d4d887cf429678890733427ab340" translate="yes" xml:space="preserve">
          <source>Installation via Bash on Windows 10</source>
          <target state="translated">Windows 10에서 Bash를 통한 설치</target>
        </trans-unit>
        <trans-unit id="bc6998ee1c084273d3edf04ac27342ad34f6ef8b" translate="yes" xml:space="preserve">
          <source>Installation via Chocolatey</source>
          <target state="translated">Chocolatey를 통한 설치</target>
        </trans-unit>
        <trans-unit id="80bed0dbfe9f2de055f7876c597ff5e0c712f2fb" translate="yes" xml:space="preserve">
          <source>Installation via RubyInstaller</source>
          <target state="translated">RubyInstaller를 통한 설치</target>
        </trans-unit>
        <trans-unit id="b11767c5d2200d2d16fad18e12fb1be2d82b4099" translate="yes" xml:space="preserve">
          <source>Installing &lt;em&gt;github-pages&lt;/em&gt; via Chocolatey</source>
          <target state="translated">Chocolatey를 통해 &lt;em&gt;github 페이지&lt;/em&gt; 설치</target>
        </trans-unit>
        <trans-unit id="c8b250df74e66657f762c2190066ce6c1ec127af" translate="yes" xml:space="preserve">
          <source>Installing Jekyll</source>
          <target state="translated">Jekyll 설치</target>
        </trans-unit>
        <trans-unit id="16ceab49469f52919f2e03463175e71ec859efb7" translate="yes" xml:space="preserve">
          <source>Installing Jekyll should be straight-forward if all requirements are met. Before you start, make sure your system has the following:</source>
          <target state="translated">모든 요구 사항이 충족되면 Jekyll을 간단하게 설치해야합니다. 시작하기 전에 시스템에 다음이 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="03c137f5733905fa449ce5034c5f2765d4312bde" translate="yes" xml:space="preserve">
          <source>Installing Xcode Command-Line Tools</source>
          <target state="translated">Xcode 명령 줄 도구 설치</target>
        </trans-unit>
        <trans-unit id="60859f03534086c3888d74149a033deec834b0c6" translate="yes" xml:space="preserve">
          <source>Installing a gem-based theme</source>
          <target state="translated">gem 기반 테마 설치</target>
        </trans-unit>
        <trans-unit id="7c207b93b2af1157f5c75bb99e15b47da86e9f24" translate="yes" xml:space="preserve">
          <source>Installing a plugin</source>
          <target state="translated">플러그인 설치</target>
        </trans-unit>
        <trans-unit id="0301ff786666998ae5d98dbed80c43208cf8c71d" translate="yes" xml:space="preserve">
          <source>Installing the &lt;code&gt;github-pages&lt;/code&gt; gem on Windows</source>
          <target state="translated">Windows 에서 &lt;code&gt;github-pages&lt;/code&gt; gem 설치</target>
        </trans-unit>
        <trans-unit id="7d65c34ad93e14c54fac65d045196e17931d2197" translate="yes" xml:space="preserve">
          <source>Instead of passing string variables to the include, you can pass a reference to a YAML data file stored in the &lt;code&gt;_data&lt;/code&gt; folder.</source>
          <target state="translated">포함에 문자열 변수를 전달하는 대신 &lt;code&gt;_data&lt;/code&gt; 폴더에 저장된 YAML 데이터 파일에 대한 참조를 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dbf704fb9a12a09c9c216c64b83c654387d7129d" translate="yes" xml:space="preserve">
          <source>Instead of placing posts inside of folders, you can specify one or more categories that the post belongs to. When the site is generated the post will act as though it had been set with these categories normally. Categories (plural key) can be specified as a &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAML list&lt;/a&gt; or a space-separated string.</source>
          <target state="translated">폴더 안에 게시물을 배치하는 대신 게시물이 속한 카테고리를 하나 이상 지정할 수 있습니다. 사이트가 생성되면 게시물은 이러한 카테고리로 정상적으로 설정된 것처럼 작동합니다. 범주 (복수 키)는 &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML#Basic_components&quot;&gt;YAML 목록&lt;/a&gt; 또는 공백으로 구분 된 문자열 로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5fbf5118bef5dc635d77ae841cc2e5808c17240f" translate="yes" xml:space="preserve">
          <source>Instead of repeating this configuration each time you create a new post or page, Jekyll provides a way to set these defaults in the site configuration. To do this, you can specify site-wide defaults using the &lt;code&gt;defaults&lt;/code&gt; key in the &lt;code&gt;_config.yml&lt;/code&gt; file in your project&amp;rsquo;s root directory.</source>
          <target state="translated">새 게시물이나 페이지를 만들 때마다이 구성을 반복하는 대신 Jekyll은 사이트 구성에서 이러한 기본값을 설정하는 방법을 제공합니다. 이렇게하려면 프로젝트 루트 디렉토리의 &lt;code&gt;_config.yml&lt;/code&gt; 파일에서 &lt;code&gt;defaults&lt;/code&gt; 키를 사용하여 사이트 전체 기본값을 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a7881cac6e64abca5eafd172df6eb31fe0b84c88" translate="yes" xml:space="preserve">
          <source>Integrations</source>
          <target state="translated">Integrations</target>
        </trans-unit>
        <trans-unit id="2f66ca1047f5a0b56e9843da678570cdb99652f4" translate="yes" xml:space="preserve">
          <source>Introducing: &lt;code&gt;layout&lt;/code&gt;. In Jekyll 2 and below, any metadata in the layout was merged onto the &lt;code&gt;page&lt;/code&gt; variable in Liquid. This caused a lot of confusion in the way the data was merged and some unexpected behaviour. In Jekyll 3, all layout data is accessible via &lt;code&gt;layout&lt;/code&gt; in Liquid. For example, if your layout has &lt;code&gt;class: my-layout&lt;/code&gt; in its YAML front matter, then the layout can access that via &lt;code&gt;{{ layout.class }}&lt;/code&gt;.</source>
          <target state="translated">소개 : &lt;code&gt;layout&lt;/code&gt; . Jekyll 2 이하에서는 레이아웃의 모든 메타 데이터 가 Liquid 의 &lt;code&gt;page&lt;/code&gt; 변수에 병합되었습니다 . 이로 인해 데이터가 병합되는 방식에 많은 혼란과 예기치 않은 동작이 발생했습니다. Jekyll 3에서 모든 레이아웃 데이터는 Liquid의 &lt;code&gt;layout&lt;/code&gt; 을 통해 액세스 할 수 있습니다 . 예를 들어, &lt;code&gt;class: my-layout&lt;/code&gt; 에 YAML 전면에 my-layout 클래스 가있는 경우 레이아웃은 &lt;code&gt;{{ layout.class }}&lt;/code&gt; 를 통해 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9020d8fc0d60807df15ba6caea583e3777c08e00" translate="yes" xml:space="preserve">
          <source>It is also possible to use glob patterns (currently limited to patterns that contain &lt;code&gt;*&lt;/code&gt;) when matching defaults. For example, it is possible to set specific layout for each &lt;code&gt;special-page.html&lt;/code&gt; in any subfolder of &lt;code&gt;section&lt;/code&gt; folder.3.7.0</source>
          <target state="translated">기본값과 일치 할 때 glob 패턴 (현재 &lt;code&gt;*&lt;/code&gt; 를 포함하는 패턴으로 제한)을 사용할 수도 있습니다 . 예를 들면, 각 특정 레이아웃 설정하는 것이 가능하다 &lt;code&gt;special-page.html&lt;/code&gt; 어떤 하위 폴더 &lt;code&gt;section&lt;/code&gt; folder.3.7.0</target>
        </trans-unit>
        <trans-unit id="bbb0445c18b13db0d9e8a3fe9643f439bc5cc215" translate="yes" xml:space="preserve">
          <source>It won&amp;rsquo;t work to just access:</source>
          <target state="translated">다음에 액세스하는 것만으로는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dcc1048dbd502084f74e4517e9ae0cef3067fa5f" translate="yes" xml:space="preserve">
          <source>It&amp;rsquo;s all well and good to have posts in a folder, but a blog is no use unless you have a list of posts somewhere. Creating an index of posts on another page (or in a &lt;a href=&quot;../templates/index&quot;&gt;template&lt;/a&gt;) is easy, thanks to the &lt;a href=&quot;https://docs.shopify.com/themes/liquid/basics&quot;&gt;Liquid template language&lt;/a&gt; and its tags. Here&amp;rsquo;s a basic example of how to create a list of links to your blog posts:</source>
          <target state="translated">폴더에 게시물이 있으면 좋을 것입니다. 그러나 게시물 목록이없는 한 블로그는 아무 소용이 없습니다. &lt;a href=&quot;https://docs.shopify.com/themes/liquid/basics&quot;&gt;Liquid 템플릿 언어&lt;/a&gt; 와 태그 덕분 에 다른 페이지 (또는 &lt;a href=&quot;../templates/index&quot;&gt;템플릿&lt;/a&gt; ) 에 게시물 색인을 쉽게 만들 수 있습니다 . 다음은 블로그 게시물에 대한 링크 목록을 작성하는 방법에 대한 기본 예입니다.</target>
        </trans-unit>
        <trans-unit id="a513c9de137d83a7609a8bb13bdbeb5834ec76bd" translate="yes" xml:space="preserve">
          <source>Jekyll</source>
          <target state="translated">Jekyll</target>
        </trans-unit>
        <trans-unit id="808c67fa4e431d5699a6613bd573f08cc162cac0" translate="yes" xml:space="preserve">
          <source>Jekyll &amp;amp; Mac OS X 10.11</source>
          <target state="translated">지킬 &amp;amp; 맥 OS X 10.11</target>
        </trans-unit>
        <trans-unit id="205b18c33b3c10f3254a98f57a2a0c9d4d658afa" translate="yes" xml:space="preserve">
          <source>Jekyll 1.0 introduced several new config file options. Before you upgrade, you should check to see if any of these are present in your pre-1.0 config file, and if so, make sure that you&amp;rsquo;re using them properly:</source>
          <target state="translated">Jekyll 1.0에는 몇 가지 새로운 구성 파일 옵션이 도입되었습니다. 업그레이드하기 전에 1.0 이전 구성 파일에 이러한 파일이 있는지 확인하고, 그렇다면 파일을 올바르게 사용하고 있는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="9324efe9664b58f2dd291b099f41ed59223057e4" translate="yes" xml:space="preserve">
          <source>Jekyll Plugins Wanted</source>
          <target state="translated">Jekyll 플러그인을 원함</target>
        </trans-unit>
        <trans-unit id="7d8fadf2d825e12ec8771d9cdf8e6df407e1fedf" translate="yes" xml:space="preserve">
          <source>Jekyll allows you to concoct your sites in any way you can dream up, and it&amp;rsquo;s thanks to the powerful and flexible configuration options that this is possible. These options can either be specified in a &lt;code&gt;_config.yml&lt;/code&gt; file placed in your site&amp;rsquo;s root directory, or can be specified as flags for the &lt;code&gt;jekyll&lt;/code&gt; executable in the terminal.</source>
          <target state="translated">Jekyll을 사용하면 원하는 방식으로 사이트를 관리 할 수 ​​있으며 강력하고 유연한 구성 옵션 덕분에 가능합니다. 이러한 옵션은 사이트의 루트 디렉토리 에있는 &lt;code&gt;_config.yml&lt;/code&gt; 파일에 지정하거나 터미널에서 &lt;code&gt;jekyll&lt;/code&gt; 실행 파일에 대한 플래그로 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4097b74ac38435b11aa3b17fad4cd1447bc26ea5" translate="yes" xml:space="preserve">
          <source>Jekyll allows you to customize your Sass conversion in certain ways.</source>
          <target state="translated">Jekyll에서는 Sass 변환을 특정 방식으로 사용자 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a06ba36e9af56403d57bad46108a8d760e07012" translate="yes" xml:space="preserve">
          <source>Jekyll also comes with a built-in development server that will allow you to preview what the generated site will look like in your browser locally.</source>
          <target state="translated">Jekyll에는 또한 생성 된 사이트가 브라우저에서 로컬로 어떻게 보이는지 미리 볼 수있는 개발 서버가 내장되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a89ce5f5b58a0ca4e12ac806869bef329c65e94" translate="yes" xml:space="preserve">
          <source>Jekyll also has built-in support for syntax highlighting of code snippets using either Pygments or Rouge, and including a code snippet in any post is easy. Just use the dedicated Liquid tag as follows:</source>
          <target state="translated">Jekyll은 또한 피그먼트 또는 루즈를 사용하여 코드 스 니펫의 구문 강조를 지원하며 모든 게시물에 코드 스 니펫을 포함하는 것이 쉽습니다. 다음과 같이 전용 Liquid 태그를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="c75f08d618f8d6918cce6239d9eabbc6fbb20362" translate="yes" xml:space="preserve">
          <source>Jekyll can handle many different iterations of the idea you might associate with a &amp;ldquo;post,&amp;rdquo; however a standard blog style post, including a Title, Layout, Publishing Date, and Categories might look like this:</source>
          <target state="translated">Jekyll은&amp;ldquo;게시물&amp;rdquo;과 연관시킬 수있는 여러 가지 아이디어 반복을 처리 할 수 ​​있지만 제목, 레이아웃, 게시 날짜 및 범주를 포함한 표준 블로그 스타일 게시물은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="84f7b0bcb2763398d2709655311c727de99f72c4" translate="yes" xml:space="preserve">
          <source>Jekyll does not generate a &amp;lsquo;page1&amp;rsquo; folder, so the above code will not work when a &lt;code&gt;/page1&lt;/code&gt; link is produced. See below for a way to handle this if it&amp;rsquo;s a problem for you.</source>
          <target state="translated">Jekyll은 'page1'폴더를 생성하지 않으므로 &lt;code&gt;/page1&lt;/code&gt; 링크가 생성 되면 위의 코드가 작동하지 않습니다 . 문제가있는 경우이를 처리하는 방법은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="623989c9f30f91c5701a5467a4c6c7f7a8c5f576" translate="yes" xml:space="preserve">
          <source>Jekyll expects all &lt;em&gt;include files&lt;/em&gt; to be placed in an &lt;code&gt;_includes&lt;/code&gt; directory at the root of your source directory. In the above example, this will embed the contents of &lt;code&gt;_includes/footer.html&lt;/code&gt; into the calling file.</source>
          <target state="translated">Jekyll은 모든 &lt;em&gt;포함 파일&lt;/em&gt; 이 소스 디렉토리의 루트 에있는 &lt;code&gt;_includes&lt;/code&gt; 디렉토리에 배치 될 것으로 예상합니다 . 위의 예에서 &lt;code&gt;_includes/footer.html&lt;/code&gt; 의 내용을 호출 파일에 포함시킵니다.</target>
        </trans-unit>
        <trans-unit id="f823e2478049f311b334a187f8c8c8ce996d032e" translate="yes" xml:space="preserve">
          <source>Jekyll gives this particular group of gems in your &lt;code&gt;Gemfile&lt;/code&gt; a different treatment. Any gem included in this group is loaded before Jekyll starts processing the rest of your source directory.</source>
          <target state="translated">Jekyll은 &lt;code&gt;Gemfile&lt;/code&gt; 에 있는 이 특정 보석 그룹에 다른 처리 방법을 제공합니다. 이 그룹에 포함 된 모든 gem은 Jekyll이 나머지 소스 디렉토리 처리를 시작하기 전에로드됩니다.</target>
        </trans-unit>
        <trans-unit id="9779f5873de87b96de9d0b2e2560ee55da48ea40" translate="yes" xml:space="preserve">
          <source>Jekyll handles two special Redcarpet extensions:</source>
          <target state="translated">Jekyll은 두 가지 특별한 Redcarpet 확장을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="2b368cd086c4cf9c3da1721dc215c046acd3cc22" translate="yes" xml:space="preserve">
          <source>Jekyll has a plugin system with hooks that allow you to create custom generated content specific to your site. You can run custom code for your site without having to modify the Jekyll source itself.</source>
          <target state="translated">Jekyll에는 사이트와 관련된 사용자 정의 생성 컨텐츠를 작성할 수있는 후크가있는 플러그인 시스템이 있습니다. Jekyll 소스 자체를 수정하지 않고도 사이트에 대한 사용자 정의 코드를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e59cffaea8e7dd210f0672d747ee169ae5e28a92" translate="yes" xml:space="preserve">
          <source>Jekyll has an extensive theme system that allows you to leverage community-maintained templates and styles to customize your site&amp;rsquo;s presentation. Jekyll themes package up layouts, includes, and stylesheets in a way that can be overridden by your site&amp;rsquo;s content.</source>
          <target state="translated">Jekyll은 커뮤니티 테마 템플릿과 스타일을 활용하여 사이트 프리젠 테이션을 사용자 정의 할 수있는 광범위한 테마 시스템을 갖추고 있습니다. Jekyll 테마는 사이트 컨텐츠로 대체 할 수있는 방식으로 레이아웃, 포함 및 스타일 시트를 패키지합니다.</target>
        </trans-unit>
        <trans-unit id="796a53df1f3443b9e298618111b14017b66fb383" translate="yes" xml:space="preserve">
          <source>Jekyll has built in support for syntax highlighting of over 60 languages thanks to &lt;a href=&quot;http://rouge.jneen.net&quot;&gt;Rouge&lt;/a&gt;. Rouge is the default highlighter in Jekyll 3 and above. To use it in Jekyll 2, set &lt;code&gt;highlighter&lt;/code&gt; to &lt;code&gt;rouge&lt;/code&gt; and ensure the &lt;code&gt;rouge&lt;/code&gt; gem is installed properly.</source>
          <target state="translated">Jekyll은 &lt;a href=&quot;http://rouge.jneen.net&quot;&gt;Rouge&lt;/a&gt; 덕분에 60 개가 넘는 언어의 구문 강조를 지원합니다 . Roky는 Jekyll 3 이상의 기본 형광펜입니다. Jekyll 2에서 사용하려면 &lt;code&gt;highlighter&lt;/code&gt; 을 &lt;code&gt;rouge&lt;/code&gt; 설정 하고 &lt;code&gt;rouge&lt;/code&gt; 보석이 올바르게 설치되었는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="f07f9ec0a1524d864b1fec9586093e957570d58c" translate="yes" xml:space="preserve">
          <source>Jekyll is a simple, blog-aware, static site generator. It takes a template directory containing raw text files in various formats, runs it through a converter (like &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;) and our &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; renderer, and spits out a complete, ready-to-publish static website suitable for serving with your favorite web server. Jekyll also happens to be the engine behind &lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt;, which means you can use Jekyll to host your project&amp;rsquo;s page, blog, or website from GitHub&amp;rsquo;s servers &lt;strong&gt;for free&lt;/strong&gt;.</source>
          <target state="translated">Jekyll은 블로그를 인식하는 간단한 정적 사이트 생성기입니다. 다양한 형식의 원시 텍스트 파일을 포함하는 템플릿 디렉토리를 가져 와서 &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt; 과 같은 변환기 와 &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; 렌더러를 통해 실행하고 좋아하는 웹 서버와 함께 제공하기에 완벽한 게시 준비가 된 정적 웹 사이트를 뱉어냅니다. Jekyll은 &lt;a href=&quot;https://pages.github.com&quot;&gt;GitHub Pages&lt;/a&gt; 의 엔진이기도합니다. 즉, Jekyll을 사용하여 GitHub 서버에서 프로젝트 페이지, 블로그 또는 웹 사이트 &lt;strong&gt;를 무료로&lt;/strong&gt; 호스팅 &lt;strong&gt;할 수&lt;/strong&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="e779c5f9969a3932787d2f57008cd6dbcd7b4559" translate="yes" xml:space="preserve">
          <source>Jekyll is, at its core, a text transformation engine. The concept behind the system is this: you give it text written in your favorite markup language, be that Markdown, Textile, or just plain HTML, and it churns that through a layout or a series of layout files. Throughout that process you can tweak how you want the site URLs to look, what data gets displayed in the layout, and more. This is all done through editing text files; the static web site is the final product.</source>
          <target state="translated">Jekyll은 핵심적으로 텍스트 변환 엔진입니다. 시스템의 기본 개념은 다음과 같습니다. 좋아하는 마크 업 언어로 작성된 텍스트, 마크 다운, 텍스타일 또는 단순한 HTML로 텍스트를 제공하고 레이아웃 또는 일련의 레이아웃 파일을 통해이를 생성합니다. 이 프로세스를 통해 사이트 URL의 모양, 레이아웃에 표시되는 데이터 등을 조정할 수 있습니다. 이 작업은 모두 텍스트 파일 편집을 통해 수행됩니다. 정적 웹 사이트가 최종 제품입니다.</target>
        </trans-unit>
        <trans-unit id="fbc354ba340e745916a498948c20a2e8b128cc74" translate="yes" xml:space="preserve">
          <source>Jekyll lets you access the &lt;code&gt;site&lt;/code&gt; object through the &lt;code&gt;context.registers&lt;/code&gt; feature of Liquid at &lt;code&gt;context.registers[:site]&lt;/code&gt;. For example, you can access the global configuration file &lt;code&gt;_config.yml&lt;/code&gt; using &lt;code&gt;context.registers[:site].config&lt;/code&gt;.</source>
          <target state="translated">Jekyll에서는 &lt;code&gt;context.registers[:site]&lt;/code&gt; 에서 Liquid 의 &lt;code&gt;context.registers&lt;/code&gt; 기능을 통해 &lt;code&gt;site&lt;/code&gt; 객체에 액세스 할 수 있습니다 . 예를 들어 &lt;code&gt;context.registers[:site].config&lt;/code&gt; 사용하여 글로벌 구성 파일 &lt;code&gt;_config.yml&lt;/code&gt; 에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="91ded4d9bcfd892aece0c6969de6ac9f3b2af1b8" translate="yes" xml:space="preserve">
          <source>Jekyll now lets you write draft posts, and allows you to easily preview how they will look prior to publishing. To start a draft, simply create a folder called &lt;code&gt;_drafts&lt;/code&gt; in your site&amp;rsquo;s source directory (e.g., alongside &lt;code&gt;_posts&lt;/code&gt;), and add a new markdown file to it. To preview your new post, simply run the &lt;code&gt;jekyll serve&lt;/code&gt; command with the &lt;code&gt;--drafts&lt;/code&gt; flag.</source>
          <target state="translated">Jekyll에서는 초안 게시물을 작성할 수 있으며 게시하기 전에 게시물이 어떻게 표시되는지 쉽게 미리 볼 수 있습니다. 초안을 시작하려면 사이트의 소스 디렉토리에 &lt;code&gt;_drafts&lt;/code&gt; 라는 폴더를 만들고 (예 : &lt;code&gt;_posts&lt;/code&gt; 와 함께 ) 새 마크 다운 파일을 추가하십시오. 새 게시물을 미리 보려면 &lt;code&gt;--drafts&lt;/code&gt; 플래그 와 함께 &lt;code&gt;jekyll serve&lt;/code&gt; 명령을 실행하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="0ee102bf04dc72cf649ca51cdf3be64db665ed5b" translate="yes" xml:space="preserve">
          <source>Jekyll now uses a rubygem to internally configure Timezone based on established &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;IANA Timezone Database&lt;/a&gt;. While &amp;lsquo;new&amp;rsquo; blogs created with Jekyll v3.4 and greater, will have the following added to their &amp;lsquo;Gemfile&amp;rsquo; by default, existing sites &lt;em&gt;will&lt;/em&gt; have to update their &amp;lsquo;Gemfile&amp;rsquo; (and installed) to enable development on Windows:</source>
          <target state="translated">Jekyll은 이제 루비 젬을 사용하여 설정된 &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_tz_database_time_zones&quot;&gt;IANA 시간대 데이터베이스를&lt;/a&gt; 기반으로 시간대를 내부적으로 구성합니다 . Jekyll v3.4 이상으로 작성된 '새로운'블로그는 기본적으로 다음을 'Gemfile'에 추가하지만 기존 사이트 &lt;em&gt;는&lt;/em&gt; Windows에서 개발할 수 있도록 'Gemfile'을 업데이트하고 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="9db167acaa9239338db11bc4db579948bb8bcd54" translate="yes" xml:space="preserve">
          <source>Jekyll on Windows</source>
          <target state="translated">Windows의 Jekyll</target>
        </trans-unit>
        <trans-unit id="5ea510d5fc4795cd9f40638b7de1ca1bcbf30ce4" translate="yes" xml:space="preserve">
          <source>Jekyll processes all Liquid filters and tags in asset files</source>
          <target state="translated">Jekyll은 자산 파일의 모든 액체 필터 및 태그를 처리합니다</target>
        </trans-unit>
        <trans-unit id="802e65a087d4160c667727cfbcb1a534752ec8b7" translate="yes" xml:space="preserve">
          <source>Jekyll processes all Liquid filters in code blocks</source>
          <target state="translated">Jekyll은 모든 액체 필터를 코드 블록으로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="edba0ddab22968e6856800e9e202c01271877d09" translate="yes" xml:space="preserve">
          <source>Jekyll provides built-in support for Sass and can work with CoffeeScript via a Ruby gem. In order to use them, you must first create a file with the proper extension name (one of &lt;code&gt;.sass&lt;/code&gt;, &lt;code&gt;.scss&lt;/code&gt;, or &lt;code&gt;.coffee&lt;/code&gt;) and &lt;strong&gt;&lt;em&gt;start the file with two lines of triple dashes&lt;/em&gt;&lt;/strong&gt;, like this:</source>
          <target state="translated">Jekyll은 Sass를 기본적으로 지원하며 Ruby gem을 통해 CoffeeScript를 사용할 수 있습니다. 순서를 사용하려면 먼저 적절한 확장자 이름 (하나의 파일 생성해야합니다 &lt;code&gt;.sass&lt;/code&gt; , &lt;code&gt;.scss&lt;/code&gt; , 또는 &lt;code&gt;.coffee&lt;/code&gt; 를 ) 및 &lt;strong&gt;&lt;em&gt;트리플 대시 두 줄을 사용하여 파일을 시작하는&lt;/em&gt;&lt;/strong&gt; 이 같은 :</target>
        </trans-unit>
        <trans-unit id="430b6448029a060479d76de3740d1c9e2f3d5809" translate="yes" xml:space="preserve">
          <source>Jekyll provides hooks for &lt;code&gt;:site&lt;/code&gt;, &lt;code&gt;:pages&lt;/code&gt;, &lt;code&gt;:posts&lt;/code&gt;, and &lt;code&gt;:documents&lt;/code&gt;. In all cases, Jekyll calls your hooks with the container object as the first callback parameter. However, all &lt;code&gt;:pre_render&lt;/code&gt; hooks and the&lt;code&gt;:site, :post_render&lt;/code&gt; hook will also provide a payload hash as a second parameter. In the case of &lt;code&gt;:pre_render&lt;/code&gt;, the payload gives you full control over the variables that are available while rendering. In the case of &lt;code&gt;:site, :post_render&lt;/code&gt;, the payload contains final values after rendering all the site (useful for sitemaps, feeds, etc).</source>
          <target state="translated">Jekyll은 &lt;code&gt;:site&lt;/code&gt; , &lt;code&gt;:pages&lt;/code&gt; , &lt;code&gt;:posts&lt;/code&gt; 및 &lt;code&gt;:documents&lt;/code&gt; 에 대한 후크를 제공합니다 . 모든 경우에 Jekyll은 컨테이너 객체를 첫 번째 콜백 매개 변수로 사용하여 후크를 호출합니다. 그러나 모든 &lt;code&gt;:pre_render&lt;/code&gt; 후크와 &lt;code&gt;:site, :post_render&lt;/code&gt; 후크는 두 번째 매개 변수로 페이로드 해시도 제공합니다. &lt;code&gt;:pre_render&lt;/code&gt; 의 경우 페이로드는 렌더링 중에 사용 가능한 변수를 완전히 제어합니다. 의 경우 &lt;code&gt;:site, :post_render&lt;/code&gt; , 페이로드는 모든 사이트 (사이트 맵, 피드 유용 등) 렌더링 후 최종 값이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b4be10fd436b4843092922a4363eca9671b242f" translate="yes" xml:space="preserve">
          <source>Jekyll runs with the following configuration options by default. Alternative settings for these options can be explicitly specified in the configuration file or on the command-line.</source>
          <target state="translated">Jekyll은 기본적으로 다음 구성 옵션으로 실행됩니다. 이러한 옵션에 대한 대체 설정은 구성 파일 또는 명령 줄에서 명시 적으로 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a88d78d1f9899a437aa358de44fe1d1d38bcfd3" translate="yes" xml:space="preserve">
          <source>Jekyll supports loading data from &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt;, &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt; files located in the &lt;code&gt;_data&lt;/code&gt; directory. Note that CSV files &lt;em&gt;must&lt;/em&gt; contain a header row.</source>
          <target state="translated">Jekyll은 &lt;code&gt;_data&lt;/code&gt; 디렉토리 에있는 &lt;a href=&quot;http://yaml.org/&quot;&gt;YAML&lt;/a&gt; , &lt;a href=&quot;http://www.json.org/&quot;&gt;JSON&lt;/a&gt; 및 &lt;a href=&quot;https://en.wikipedia.org/wiki/Comma-separated_values&quot;&gt;CSV&lt;/a&gt; 파일 에서 데이터로드를 지원합니다 . CSV 파일 &lt;em&gt;은&lt;/em&gt; 헤더 행을 포함 &lt;em&gt;해야&lt;/em&gt; 합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="cb6c67edc0dab202898b18be5c476739c32221f1" translate="yes" xml:space="preserve">
          <source>Jekyll supports permalinks that contain neither a trailing slash nor a file extension, but this requires additional support from the web server to properly serve. When using these types of permalinks, output files written to disk will still have the proper file extension (typically &lt;code&gt;.html&lt;/code&gt;), so the web server must be able to map requests without file extensions to these files.</source>
          <target state="translated">Jekyll은 후행 슬래시 나 파일 확장자가 포함되지 않은 퍼머 링크를 지원하지만, 제대로 작동하려면 웹 서버의 추가 지원이 필요합니다. 이러한 유형의 영구 링크를 사용할 때 디스크에 기록 된 출력 파일은 여전히 ​​올바른 파일 확장자 (일반적으로 &lt;code&gt;.html&lt;/code&gt; )를 가지므로 웹 서버는 파일 확장자가없는 요청을 이러한 파일에 맵핑 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="b0613f7e22216b0d97a46cb92e154dce22ac1ff0" translate="yes" xml:space="preserve">
          <source>Jekyll themes set default layouts, includes, and stylesheets. However, you can override any of the theme defaults with your own site content.</source>
          <target state="translated">Jekyll 테마는 기본 레이아웃, 포함 및 스타일 시트를 설정합니다. 그러나 자신의 사이트 컨텐츠로 테마 기본값을 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b14d294b4a5a02070c4e47c5f1097b5b051410ba" translate="yes" xml:space="preserve">
          <source>Jekyll traverses your site looking for files to process. Any files with &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt; are subject to processing. For each of these files, Jekyll makes a variety of data available via the &lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid templating system&lt;/a&gt;. The following is a reference of the available data.</source>
          <target state="translated">Jekyll은 처리 할 파일을 찾기 위해 사이트를 탐색합니다. &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML 프론트 물질&lt;/a&gt; 이있는 모든 파일 은 처리 대상입니다. 이러한 각 파일에 대해 Jekyll은 &lt;a href=&quot;https://github.com/Shopify/liquid/wiki&quot;&gt;Liquid templating 시스템을&lt;/a&gt; 통해 다양한 데이터를 사용할 수있게 합니다 . 다음은 사용 가능한 데이터에 대한 참조입니다.</target>
        </trans-unit>
        <trans-unit id="7b80e53a19b7c75cad65aedd5f21d9647b0b06f4" translate="yes" xml:space="preserve">
          <source>Jekyll treats these files the same as a regular page, in that the output file will be placed in the same directory that it came from. For instance, if you have a file named &lt;code&gt;css/styles.scss&lt;/code&gt; in your site&amp;rsquo;s source folder, Jekyll will process it and put it in your site&amp;rsquo;s destination folder under &lt;code&gt;css/styles.css&lt;/code&gt;.</source>
          <target state="translated">Jekyll은 이러한 파일을 일반 페이지와 동일하게 처리합니다. 출력 파일은 원래 파일과 동일한 디렉토리에 배치됩니다. 예를 들어, 사이트의 소스 폴더에 &lt;code&gt;css/styles.scss&lt;/code&gt; 라는 파일이 있으면 Jekyll이 파일을 처리하여 &lt;code&gt;css/styles.css&lt;/code&gt; 아래의 사이트 대상 폴더에 넣습니다 .</target>
        </trans-unit>
        <trans-unit id="8bc77ad887f5021280263c947d7e9ba538afd6ac" translate="yes" xml:space="preserve">
          <source>Jekyll uses the &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; templating language to process templates. All of the standard Liquid &lt;a href=&quot;https://shopify.github.io/liquid/tags/control-flow/&quot;&gt;tags&lt;/a&gt; and &lt;a href=&quot;https://shopify.github.io/liquid/filters/abs/&quot;&gt;filters&lt;/a&gt; are supported. To make common tasks easier, Jekyll even adds a few handy filters and tags of its own, all of which you can find on this page. Jekyll even lets you come up with your own tags via plugins.</source>
          <target state="translated">Jekyll은 &lt;a href=&quot;https://shopify.github.io/liquid/&quot;&gt;Liquid&lt;/a&gt; templating 언어를 사용하여 템플릿을 처리합니다. 모든 표준 Liquid &lt;a href=&quot;https://shopify.github.io/liquid/tags/control-flow/&quot;&gt;태그&lt;/a&gt; 및 &lt;a href=&quot;https://shopify.github.io/liquid/filters/abs/&quot;&gt;필터&lt;/a&gt; 가 지원됩니다. Jekyll은 일반적인 작업을 쉽게하기 위해이 페이지에서 찾을 수있는 몇 가지 편리한 필터와 태그를 추가합니다. Jekyll은 플러그인을 통해 자신 만의 태그를 만들 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="98c1feeb240ca9f85a5898de8492c75acc86d3be" translate="yes" xml:space="preserve">
          <source>Jekyll uses the &lt;code&gt;listen&lt;/code&gt; gem to watch for changes when the &lt;code&gt;--watch&lt;/code&gt; switch is specified during a build or serve. While &lt;code&gt;listen&lt;/code&gt; has built-in support for UNIX systems, it may require an extra gem for compatibility with Windows.</source>
          <target state="translated">지킬은 사용 &lt;code&gt;listen&lt;/code&gt; 때 변화를보기 위해 보석을 &lt;code&gt;--watch&lt;/code&gt; 스위치가 빌드 중에 지정 또는 역할을한다. &lt;code&gt;listen&lt;/code&gt; 은 UNIX 시스템을 기본적으로 지원 하지만 Windows와의 호환성을 위해 추가 gem이 필요할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9dc8584b9d061d2a48af50a6e913d9bc51afb984" translate="yes" xml:space="preserve">
          <source>Jekyll will apply all of the configuration settings you specify in the &lt;code&gt;defaults&lt;/code&gt; section of your &lt;code&gt;_config.yml&lt;/code&gt; file. However, you can choose to override settings from other scope/values pair by specifying a more specific path for the scope.</source>
          <target state="translated">Jekyll은 &lt;code&gt;_config.yml&lt;/code&gt; 파일 의 &lt;code&gt;defaults&lt;/code&gt; 섹션 에서 지정한 모든 구성 설정을 적용 합니다. 그러나 범위에 대해보다 구체적인 경로를 지정하여 다른 범위 / 값 쌍의 설정을 무시하도록 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec5df39ca8b217af9fdeedd6a19aae0269168d48" translate="yes" xml:space="preserve">
          <source>Jekyll will automatically require all whitelisted &lt;code&gt;runtime_dependencies&lt;/code&gt; of your theme-gem even if they&amp;rsquo;re not explicitly included under the &lt;code&gt;plugins&lt;/code&gt; array in the site&amp;rsquo;s config file. (Note: whitelisting is only required when building or serving with the &lt;code&gt;--safe&lt;/code&gt; option.)</source>
          <target state="translated">Jekyll은 사이트 구성 파일의 &lt;code&gt;plugins&lt;/code&gt; 배열에 명시 적으로 포함되어 있지 않더라도 테마-젬의 모든 허용 된 &lt;code&gt;runtime_dependencies&lt;/code&gt; 를 자동으로 요구 합니다. (참고 : 화이트리스트는 &lt;code&gt;--safe&lt;/code&gt; 옵션으로 빌드하거나 제공 할 때만 필요합니다 .)</target>
        </trans-unit>
        <trans-unit id="cf1948f6a6c35c37faab5e8a2daf5dafc8a832c4" translate="yes" xml:space="preserve">
          <source>Jekyll will look first to your site&amp;rsquo;s content before looking to the theme&amp;rsquo;s defaults for any requested file in the following folders:</source>
          <target state="translated">Jekyll은 다음 폴더에서 요청 된 파일의 테마 기본값을 찾기 전에 사이트의 내용을 먼저 찾습니다.</target>
        </trans-unit>
        <trans-unit id="15cdb1085a422b73cafd0b3daa9e2568ffd30a22" translate="yes" xml:space="preserve">
          <source>Jekyll will look for the referenced file (in this case, &lt;code&gt;footer.html&lt;/code&gt;) in the &lt;code&gt;_includes&lt;/code&gt; directory at the root of your source directory and insert its contents.</source>
          <target state="translated">Jekyll은 소스 디렉토리의 루트 에있는 &lt;code&gt;_includes&lt;/code&gt; 디렉토리에서 참조 된 파일 (이 경우 &lt;code&gt;footer.html&lt;/code&gt; )을 찾아 내용을 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="cbb8af1f0a6b9e0a078358fca37d17f598256363" translate="yes" xml:space="preserve">
          <source>Jekyll will only convert files that have a YAML header at the top, even for converters you add using a plugin.</source>
          <target state="translated">Jekyll은 플러그인을 사용하여 추가 한 변환기의 경우에도 상단에 YAML 헤더가있는 파일 만 변환합니다.</target>
        </trans-unit>
        <trans-unit id="2c27dc79dfcd97a956c12f99f1262ad706cbd59b" translate="yes" xml:space="preserve">
          <source>Jekyll&amp;rsquo;s growing use is producing a wide variety of tutorials, frameworks, extensions, examples, and other resources that can be very helpful. Below is a collection of links to some of the most popular Jekyll resources.</source>
          <target state="translated">Jekyll의 증가하는 사용은 매우 유용한 다양한 자습서, 프레임 워크, 확장, 예제 및 기타 리소스를 생성하고 있습니다. 다음은 가장 인기있는 Jekyll 리소스에 대한 링크 모음입니다.</target>
        </trans-unit>
        <trans-unit id="87040c2c2ca8dd7dd1f199bb3b01450f1fd6e925" translate="yes" xml:space="preserve">
          <source>Jekyll-Admin for Rails</source>
          <target state="translated">레일 용 지킬 관리자</target>
        </trans-unit>
        <trans-unit id="6bdf1cf399ad963e0a54c8aa9b93779421ed5621" translate="yes" xml:space="preserve">
          <source>Just about any traditional web hosting provider will let you upload files to their servers over FTP. To upload a Jekyll site to a web host using FTP, simply run the &lt;code&gt;jekyll build&lt;/code&gt; command and copy the contents of the generated &lt;code&gt;_site&lt;/code&gt; folder to the root folder of your hosting account. This is most likely to be the &lt;code&gt;httpdocs&lt;/code&gt; or &lt;code&gt;public_html&lt;/code&gt; folder on most hosting providers.</source>
          <target state="translated">전통적인 웹 호스팅 제공 업체는 FTP를 통해 서버에 파일을 업로드 할 수 있습니다. FTP를 사용하여 Jekyll 사이트를 웹 호스트에 업로드하려면 &lt;code&gt;jekyll build&lt;/code&gt; 명령을 실행 하고 생성 된 &lt;code&gt;_site&lt;/code&gt; 폴더 의 내용을 호스팅 계정의 루트 폴더에 복사하십시오. 대부분의 호스팅 제공 업체 에서 &lt;code&gt;httpdocs&lt;/code&gt; 또는 &lt;code&gt;public_html&lt;/code&gt; 폴더 일 가능성이 높습니다 .</target>
        </trans-unit>
        <trans-unit id="2ed5147f04a311fb5f5d747f6b09941b7fc9a782" translate="yes" xml:space="preserve">
          <source>Just about every web server configuration you come across will look for an HTML file called &lt;code&gt;index.html&lt;/code&gt; (by convention) in the site&amp;rsquo;s root folder and display that as the homepage. Unless the web server you&amp;rsquo;re using is configured to look for some different filename as the default, this file will turn into the homepage of your Jekyll-generated site.</source>
          <target state="translated">거의 모든 웹 서버 구성이 사이트의 루트 폴더에서 &lt;code&gt;index.html&lt;/code&gt; (규칙에 따라) 이라는 HTML 파일을 찾아 홈페이지로 표시합니다. 사용하는 웹 서버가 기본적으로 다른 파일 이름을 찾도록 구성되어 있지 않으면이 파일은 Jekyll이 생성 한 사이트의 홈페이지로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="42cb84d3edc32b5b2f4400649263390331b44d18" translate="yes" xml:space="preserve">
          <source>Just add the following line:</source>
          <target state="translated">다음 줄을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="0402a4371d48c94d8742dfa8a73a7366e817e0d9" translate="yes" xml:space="preserve">
          <source>Just after site reset</source>
          <target state="translated">사이트 재설정 직후</target>
        </trans-unit>
        <trans-unit id="433a432fd1262d35a30183d9f6075570af8bc954" translate="yes" xml:space="preserve">
          <source>Just after the site initializes, but before setup &amp;amp; render. Good for modifying the configuration of the site.</source>
          <target state="translated">사이트가 초기화 된 직후, 설정 및 렌더링 직전 사이트 구성을 수정하는 데 좋습니다.</target>
        </trans-unit>
        <trans-unit id="ebb6b1e30faadd702ac129f2183d1aa471da18d8" translate="yes" xml:space="preserve">
          <source>Just before rendering a document</source>
          <target state="translated">문서를 렌더링하기 직전에</target>
        </trans-unit>
        <trans-unit id="1a8117dd57c47c84d1c161dd2ea8fdef67df5f30" translate="yes" xml:space="preserve">
          <source>Just before rendering a page</source>
          <target state="translated">페이지를 렌더링하기 직전에</target>
        </trans-unit>
        <trans-unit id="832cf101757761bef14d4d8fdba336cebe396b37" translate="yes" xml:space="preserve">
          <source>Just before rendering a post</source>
          <target state="translated">게시물을 렌더링하기 직전에</target>
        </trans-unit>
        <trans-unit id="46e54c34b1deecaf4f770c41a5ff5f0dec8680f3" translate="yes" xml:space="preserve">
          <source>Just before rendering the whole site</source>
          <target state="translated">전체 사이트를 렌더링하기 직전에</target>
        </trans-unit>
        <trans-unit id="01af7c46420acf792e3b43039584478ec7774e5b" translate="yes" xml:space="preserve">
          <source>Kickster</source>
          <target state="translated">Kickster</target>
        </trans-unit>
        <trans-unit id="2918c8c92bc729b976aacffa8804fee11f217d81" translate="yes" xml:space="preserve">
          <source>Kickster provides a basic Jekyll project setup packed with web best practises and useful optimization tools increasing your overall project quality. Kickster ships with automated and worry-free deployment scripts for GitHub Pages.</source>
          <target state="translated">Kickster는 웹 모범 사례와 전체 프로젝트 품질을 높이는 유용한 최적화 도구로 구성된 기본 Jekyll 프로젝트 설정을 제공합니다. Kickster는 GitHub 페이지를위한 자동화 된 걱정없는 배포 스크립트와 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="67169c9661e2d73dbf62f40570b382c8e40debd7" translate="yes" xml:space="preserve">
          <source>Kramdown comes with optional support for LaTeX to PNG rendering via &lt;a href=&quot;https://www.mathjax.org&quot;&gt;MathJax&lt;/a&gt; within math blocks. See the Kramdown documentation on &lt;a href=&quot;http://kramdown.gettalong.org/syntax.html#math-blocks&quot;&gt;math blocks&lt;/a&gt; and &lt;a href=&quot;http://kramdown.gettalong.org/converter/html.html#math-support&quot;&gt;math support&lt;/a&gt; for more details. MathJax requires you to include JavaScript or CSS to render the LaTeX, e.g.</source>
          <target state="translated">Kramdown은 수학 블록 내에서 &lt;a href=&quot;https://www.mathjax.org&quot;&gt;MathJax&lt;/a&gt; 를 통해 LaTeX to PNG 렌더링을 선택적으로 지원합니다 . 자세한 내용은 &lt;a href=&quot;http://kramdown.gettalong.org/syntax.html#math-blocks&quot;&gt;수학 블록&lt;/a&gt; 및 &lt;a href=&quot;http://kramdown.gettalong.org/converter/html.html#math-support&quot;&gt;수학 지원에&lt;/a&gt; 대한 Kramdown 설명서 를 참조하십시오. MathJax는 LaTeX를 렌더링하기 위해 JavaScript 또는 CSS를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="93824e5ca2f8079177705f22fa746e46881b0c07" translate="yes" xml:space="preserve">
          <source>Label of the containing collection.</source>
          <target state="translated">포함하는 컬렉션의 레이블.</target>
        </trans-unit>
        <trans-unit id="77918f5f64d8b83f4bc213c3624d8dabb59f643a" translate="yes" xml:space="preserve">
          <source>Layout metadata</source>
          <target state="translated">레이아웃 메타 데이터</target>
        </trans-unit>
        <trans-unit id="93d4f5bc1ef1791e5c42ae89bfcf3a70ede43c95" translate="yes" xml:space="preserve">
          <source>Layout specific information + the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt;. Custom variables set via the YAML Front Matter in layouts will be available here.</source>
          <target state="translated">레이아웃 특정 정보 + &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML 전면 문제&lt;/a&gt; . 레이아웃에서 YAML Front Matter를 통해 설정된 맞춤 변수는 여기에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f97f89c886ff0080aba4f2ac74175d1a7897953a" translate="yes" xml:space="preserve">
          <source>Layouts and includes</source>
          <target state="translated">레이아웃 및 포함</target>
        </trans-unit>
        <trans-unit id="3d59965152acf6883cee252b37209236be3cceb2" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say that you want to add a default layout to all pages and posts in your site. You would add this to your &lt;code&gt;_config.yml&lt;/code&gt; file:</source>
          <target state="translated">사이트의 모든 페이지와 게시물에 기본 레이아웃을 추가한다고 가정 해 보겠습니다. 이것을 &lt;code&gt;_config.yml&lt;/code&gt; 파일에 추가 합니다 :</target>
        </trans-unit>
        <trans-unit id="70555ee6c1f592b66362f61436939844b36c5e63" translate="yes" xml:space="preserve">
          <source>Let&amp;rsquo;s say, for a second example, you want to override Minima&amp;rsquo;s footer. In your Jekyll site, create an &lt;code&gt;_includes&lt;/code&gt; folder and add a file in it called &lt;code&gt;footer.html&lt;/code&gt;. Jekyll will now use your site&amp;rsquo;s &lt;code&gt;footer.html&lt;/code&gt; file instead of the &lt;code&gt;footer.html&lt;/code&gt; file from the Minima theme gem.</source>
          <target state="translated">두 번째 예를 들어 Minima의 바닥 글을 재정의한다고 가정 해 봅시다. Jekyll 사이트에서 &lt;code&gt;_includes&lt;/code&gt; 폴더를 작성하고 &lt;code&gt;footer.html&lt;/code&gt; 이라는 파일을 추가하십시오 . 지킬 이제 사이트의 사용 &lt;code&gt;footer.html&lt;/code&gt; 를 파일 대신 &lt;code&gt;footer.html&lt;/code&gt; 를의 최소값 테마 보석에서 파일을.</target>
        </trans-unit>
        <trans-unit id="c58bd40e95aef48eee67a645bb4f78e1797cdf10" translate="yes" xml:space="preserve">
          <source>Licensed under the MIT license.</source>
          <target state="translated">MIT 라이센스에 따라 라이센스가 부여되었습니다.</target>
        </trans-unit>
        <trans-unit id="670ce9fa318e5a320760111541faff1035dbfbff" translate="yes" xml:space="preserve">
          <source>Limit the number of posts to parse and publish.</source>
          <target state="translated">파싱 ​​및 게시 할 게시물 수를 제한하십시오.</target>
        </trans-unit>
        <trans-unit id="d08aaa54e89dc5b36c7da4c9d528008df5d04f3b" translate="yes" xml:space="preserve">
          <source>Line numbers</source>
          <target state="translated">줄 번호</target>
        </trans-unit>
        <trans-unit id="a8482def1ff83728e1fb9a6d899311c4dbb6cd11" translate="yes" xml:space="preserve">
          <source>Linking to a PDF for readers to download:</source>
          <target state="translated">독자가 다운로드 할 수 있도록 PDF로 연결 :</target>
        </trans-unit>
        <trans-unit id="d20b0cfa02620cff8357fb318e9cd62b00fd373f" translate="yes" xml:space="preserve">
          <source>Linking to pages</source>
          <target state="translated">페이지에 연결</target>
        </trans-unit>
        <trans-unit id="afd2dc5f7c324f512f99a7734c0386d9016751a1" translate="yes" xml:space="preserve">
          <source>Linking to pages, collections and posts (the new and improved way)</source>
          <target state="translated">페이지, 컬렉션 및 게시물에 연결 (새롭고 개선 된 방법)</target>
        </trans-unit>
        <trans-unit id="8da831e8f499f7d7a56c6d3446756c24c1fc9859" translate="yes" xml:space="preserve">
          <source>Linking to posts</source>
          <target state="translated">게시물에 연결</target>
        </trans-unit>
        <trans-unit id="3def7d920e411866077e94461efbacc52f7aeb8e" translate="yes" xml:space="preserve">
          <source>Linking to posts (the old way)</source>
          <target state="translated">게시물에 연결 (구식)</target>
        </trans-unit>
        <trans-unit id="6379e034bab2e3be9e7c39a0b85a6898660412a9" translate="yes" xml:space="preserve">
          <source>Linking without regard to permalink styles</source>
          <target state="translated">퍼머 링크 스타일에 관계없이 링크</target>
        </trans-unit>
        <trans-unit id="014bcd654c60d5250fad2123b073b9c0ac3340f6" translate="yes" xml:space="preserve">
          <source>Links</source>
          <target state="translated">Links</target>
        </trans-unit>
        <trans-unit id="4ad3e2141b2afe3691f32c2af3fc5cc3653cd453" translate="yes" xml:space="preserve">
          <source>Liquid</source>
          <target state="translated">Liquid</target>
        </trans-unit>
        <trans-unit id="7f26ed43583414deba0ddd1befb4adadedbfeb84" translate="yes" xml:space="preserve">
          <source>Liquid Attributes</source>
          <target state="translated">액체 속성</target>
        </trans-unit>
        <trans-unit id="5ad177e08ab39d6276f0d8860a328284e1ffcfa3" translate="yes" xml:space="preserve">
          <source>Liquid Attributes Available</source>
          <target state="translated">사용 가능한 액체 속성</target>
        </trans-unit>
        <trans-unit id="e0745becb677ab37dbf8043a9a47294186d7f108" translate="yes" xml:space="preserve">
          <source>Liquid Options</source>
          <target state="translated">액체 옵션</target>
        </trans-unit>
        <trans-unit id="ad13a6aea2f060b03c1bbfcd3acb3de84c4ad8ef" translate="yes" xml:space="preserve">
          <source>Liquid filters</source>
          <target state="translated">액체 필터</target>
        </trans-unit>
        <trans-unit id="e0802e62c8890a9ef2c3f7f7bbff3ab1245c9e20" translate="yes" xml:space="preserve">
          <source>Liquid&amp;rsquo;s response to errors can be configured by setting &lt;code&gt;error_mode&lt;/code&gt;. The options are</source>
          <target state="translated">&lt;code&gt;error_mode&lt;/code&gt; 를 설정하여 오류에 대한 Liquid의 응답을 구성 할 수 있습니다 . 옵션은</target>
        </trans-unit>
        <trans-unit id="eeb4bd88aaf858f919bb23f92e4f32533740b378" translate="yes" xml:space="preserve">
          <source>Listen at the given hostname.</source>
          <target state="translated">주어진 호스트 이름을 듣습니다.</target>
        </trans-unit>
        <trans-unit id="b067bb7eddee644f3059b4dfb835e57469c1fc50" translate="yes" xml:space="preserve">
          <source>Listen on the given port.</source>
          <target state="translated">주어진 포트에서 들어보십시오.</target>
        </trans-unit>
        <trans-unit id="4406a849f645af35a2c07cd3e59f1514029789e7" translate="yes" xml:space="preserve">
          <source>Log in at &lt;a href=&quot;https://buddy.works&quot;&gt;https://buddy.works&lt;/a&gt; with your GitHub/Bitbucket account or email</source>
          <target state="translated">GitHub / Bitbucket 계정 또는 이메일 로 &lt;a href=&quot;https://buddy.works&quot;&gt;https://buddy.works에&lt;/a&gt; 로그인하십시오</target>
        </trans-unit>
        <trans-unit id="0c25dfe9b505b96331b509d1f1094d7a8bbbc7da" translate="yes" xml:space="preserve">
          <source>Logic to do the content conversion. Takes one argument: the raw content of the file (without YAML Front Matter). Must return a String.</source>
          <target state="translated">컨텐츠 변환을 수행하는 논리. 파일의 원시 내용 (YAML Front Matter 제외)을 인수로 사용합니다. 문자열을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="0d1f3dd0db67be21ebd2eb0848251f87de05b382" translate="yes" xml:space="preserve">
          <source>Make it executable (&lt;code&gt;chmod +x&lt;/code&gt;)</source>
          <target state="translated">그것을 실행 가능하게 만드십시오 ( &lt;code&gt;chmod +x&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="642c11c1d6e1b6df7dad686b9cc288e67e12904c" translate="yes" xml:space="preserve">
          <source>Markdown Options</source>
          <target state="translated">마크 다운 옵션</target>
        </trans-unit>
        <trans-unit id="b09e94d8992bb71ef39f1a828432c25aaf743e21" translate="yes" xml:space="preserve">
          <source>Markup Problems</source>
          <target state="translated">마크 업 문제</target>
        </trans-unit>
        <trans-unit id="28d6fb2c35c1d1c6a33c9e84a06a5d0a46922b5c" translate="yes" xml:space="preserve">
          <source>Math Support</source>
          <target state="translated">수학 지원</target>
        </trans-unit>
        <trans-unit id="88306943fea7e76f9cd57cae0ea6d8b32d2e8434" translate="yes" xml:space="preserve">
          <source>Method</source>
          <target state="translated">Method</target>
        </trans-unit>
        <trans-unit id="cebaf24652aa816860b5113dfe9dc8588aa3ae90" translate="yes" xml:space="preserve">
          <source>Minute of the hour from the post's &lt;code&gt;date&lt;/code&gt; front matter. (00..59)</source>
          <target state="translated">게시물 &lt;code&gt;date&lt;/code&gt; 시간의 분입니다 . (00..59)</target>
        </trans-unit>
        <trans-unit id="5f2cbd107037ed23248e5058a7a64cd6bae05468" translate="yes" xml:space="preserve">
          <source>Miscellaneous</source>
          <target state="translated">Miscellaneous</target>
        </trans-unit>
        <trans-unit id="ef9455fcbf8b2c60f67ca82fa6632a99edee00cb" translate="yes" xml:space="preserve">
          <source>Month from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">게시물 파일 이름의 월입니다. 문서의 &lt;code&gt;date&lt;/code&gt; YAML 관련 사항을 통해 무시 될 수 있음</target>
        </trans-unit>
        <trans-unit id="8de2bd51313c9e801e45ac73bea8a590465b26c8" translate="yes" xml:space="preserve">
          <source>Month without leading zeros from the post's filename. May be overridden via the document&amp;rsquo;s &lt;code&gt;date&lt;/code&gt; YAML front matter</source>
          <target state="translated">게시물의 파일 이름에서 선행 0이없는 월입니다. 문서의 &lt;code&gt;date&lt;/code&gt; YAML 관련 사항을 통해 무시 될 수 있음</target>
        </trans-unit>
        <trans-unit id="d0bf0bf1fc26755d6dd3d0cd4f591fb0c8223d56" translate="yes" xml:space="preserve">
          <source>My categories have stopped working!</source>
          <target state="translated">내 카테고리가 작동을 멈췄습니다!</target>
        </trans-unit>
        <trans-unit id="409210cf5eca11f949b896395f0df153fb608809" translate="yes" xml:space="preserve">
          <source>Named HTML files</source>
          <target state="translated">명명 된 HTML 파일</target>
        </trans-unit>
        <trans-unit id="af6c6c60032b6347c216bd80b55f736adf9ba8ed" translate="yes" xml:space="preserve">
          <source>Named folders containing index HTML files</source>
          <target state="translated">색인 HTML 파일을 포함하는 명명 된 폴더</target>
        </trans-unit>
        <trans-unit id="1bd711a21d476e6fe66700859fd27013606d0d82" translate="yes" xml:space="preserve">
          <source>Netlify</source>
          <target state="translated">Netlify</target>
        </trans-unit>
        <trans-unit id="e77e169ad6256bcd88fdf89a438584da538db3ad" translate="yes" xml:space="preserve">
          <source>Netlify provides Global CDN, Continuous Deployment, one click HTTPS and &lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;much more&lt;/a&gt;, providing developers the most robust toolset available for modern web projects, without added complexity. Netlify supports custom plugins for Jekyll and has a free plan for open source projects.</source>
          <target state="translated">Netlify 글로벌 CDN, 연속 배포 한 번 클릭 HTTPS 및 제공 &lt;a href=&quot;https://www.netlify.com/features/&quot;&gt;훨씬 더&lt;/a&gt; 복잡성을 추가하지 않고 현대적인 웹 프로젝트에 대한 가장 강력한 도구 세트를 사용할 개발자를 제공합니다. Netlify는 Jekyll 용 사용자 정의 플러그인을 지원하며 오픈 소스 프로젝트에 대한 무료 계획이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f0a6fb6f3c8ce017ef991f62d064dc029d34205" translate="yes" xml:space="preserve">
          <source>Never built a website with GitHub Pages before? &lt;a href=&quot;http://jmcglone.com/guides/github-pages/&quot;&gt;See this marvelous guide by Jonathan McGlone&lt;/a&gt; to get you up and running. This guide will teach you what you need to know about Git, GitHub, and Jekyll to create your very own website on GitHub Pages.</source>
          <target state="translated">이전에 GitHub 페이지로 웹 사이트를 만든 적이 없습니까? &lt;a href=&quot;http://jmcglone.com/guides/github-pages/&quot;&gt;Jonathan McGlone의이 놀라운 안내서를 참조하여 시작하십시오&lt;/a&gt; . 이 가이드는 Git, GitHub 및 Jekyll에 대해 GitHub 페이지에 고유 한 웹 사이트를 만들기 위해 알아야 할 사항을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="bc4548b725bed832ca525597a79aaa19443571c5" translate="yes" xml:space="preserve">
          <source>New Config File Options</source>
          <target state="translated">새로운 구성 파일 옵션</target>
        </trans-unit>
        <trans-unit id="c1d497448ff591968a3b7a1dcf651a30c7319f8d" translate="yes" xml:space="preserve">
          <source>Next let&amp;rsquo;s update our Ruby gems:</source>
          <target state="translated">다음으로 Ruby gem을 업데이트하겠습니다 :</target>
        </trans-unit>
        <trans-unit id="11fc14203dd0f4441645a9c34d5dd022905f56e4" translate="yes" xml:space="preserve">
          <source>Next steps</source>
          <target state="translated">다음 단계</target>
        </trans-unit>
        <trans-unit id="f312fe6f79e90daa529f37ccafdfa02243a77286" translate="yes" xml:space="preserve">
          <source>Next, add the following lines to hooks/post-receive and be sure Jekyll is installed on the server:</source>
          <target state="translated">다음으로 후크 / 포스트 후에 다음 줄을 추가하고 Jekyll이 서버에 설치되어 있는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5ff888289816dd3074a50bcf27e501021fdb8da3" translate="yes" xml:space="preserve">
          <source>Next, in the root directory of your Jekyll install, create a new directory called &lt;code&gt;category&lt;/code&gt; and then create a file for each category you want to list. For example, if you have a category &lt;code&gt;blog&lt;/code&gt; then create a file in the new directory called &lt;code&gt;blog.html&lt;/code&gt; with at least</source>
          <target state="translated">그런 다음 Jekyll 설치의 루트 디렉토리에 &lt;code&gt;category&lt;/code&gt; 라는 새 디렉토리 를 작성한 후 나열하려는 각 카테고리에 대한 파일을 작성하십시오. 예를 들어, &lt;code&gt;blog&lt;/code&gt; 카테고리가있는 경우 최소한 &lt;code&gt;blog.html&lt;/code&gt; 이라는 새 디렉토리에 파일을 작성하십시오.</target>
        </trans-unit>
        <trans-unit id="708f2d3f4930982fbd401cfff5d9860647b92d77" translate="yes" xml:space="preserve">
          <source>Next, package your theme, by running the following command, replacing &lt;code&gt;jekyll-theme-awesome&lt;/code&gt; with the name of your theme:</source>
          <target state="translated">다음으로 &lt;code&gt;jekyll-theme-awesome&lt;/code&gt; 을 테마 이름으로 대체하여 다음 명령을 실행하여 테마를 패키지하십시오 .</target>
        </trans-unit>
        <trans-unit id="f2560cbce63028d4ce27fdd2ae2588b9ae69ca1e" translate="yes" xml:space="preserve">
          <source>Nginx</source>
          <target state="translated">Nginx</target>
        </trans-unit>
        <trans-unit id="3b2398012127ac20dafee0de7defdb7dbfdffaec" translate="yes" xml:space="preserve">
          <source>Nokogiri gem installation</source>
          <target state="translated">노코 기리 보석 설치</target>
        </trans-unit>
        <trans-unit id="8f1ffabf169574519e202a4e9b88f25390f0b416" translate="yes" xml:space="preserve">
          <source>None specified, or &lt;code&gt;permalink: date&lt;/code&gt;</source>
          <target state="translated">지정되지 않았거나 &lt;code&gt;permalink: date&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c35cfb9d2d2387ed94bc43758ede05d15c18fe4" translate="yes" xml:space="preserve">
          <source>Not everything is a post or a page. Maybe you want to document the various methods in your open source project, members of a team, or talks at a conference. Collections allow you to define a new type of document that behave like Pages or Posts do normally, but also have their own unique properties and namespace.</source>
          <target state="translated">모든 것이 게시물이나 페이지가 아닙니다. 오픈 소스 프로젝트, 팀 구성원 또는 회의에서 진행되는 다양한 방법을 문서화하고 싶을 수도 있습니다. 컬렉션을 사용하면 페이지 나 게시물처럼 정상적으로 작동하는 새로운 유형의 문서를 정의 할 수 있지만 고유 한 속성과 네임 스페이스도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f87a0cc1b107cfc3130ca883eee78891ca87928" translate="yes" xml:space="preserve">
          <source>Note &lt;a href=&quot;../datafiles/index&quot;&gt;Data Files&lt;/a&gt; are included and reloaded during automatic regeneration.</source>
          <target state="translated">참고 자동 재생 중에 &lt;a href=&quot;../datafiles/index&quot;&gt;데이터 파일&lt;/a&gt; 이 포함되어 다시로드됩니다.</target>
        </trans-unit>
        <trans-unit id="9cf697214d3ea8369efc9d5989737c5221f12ef5" translate="yes" xml:space="preserve">
          <source>Note if you want to view your site offline &lt;em&gt;without the Jekyll preview server&lt;/em&gt;, your browser will need the file extension to display the page, and all assets will need to be relative links that function without the server baseurl.</source>
          <target state="translated">&lt;em&gt;Jekyll 미리보기 서버없이&lt;/em&gt; 사이트를 오프라인에서 보려면 페이지를 표시하려면 파일 확장자가 브라우저에 필요하며 모든 자산은 서버 baseurl없이 작동하는 상대 링크 여야합니다.</target>
        </trans-unit>
        <trans-unit id="6be0285681791712626e61c0e940a29611df075c" translate="yes" xml:space="preserve">
          <source>Note that GitHub Pages runs in &lt;code&gt;safe&lt;/code&gt; mode and only allows &lt;a href=&quot;https://help.github.com/articles/configuring-jekyll-plugins/#default-plugins&quot;&gt;a set of whitelisted plugins&lt;/a&gt;.</source>
          <target state="translated">GitHub Pages는 &lt;code&gt;safe&lt;/code&gt; 모드 에서 실행되며 &lt;a href=&quot;https://help.github.com/articles/configuring-jekyll-plugins/#default-plugins&quot;&gt;허용 된 플러그인 세트&lt;/a&gt; 만 허용 합니다 .</target>
        </trans-unit>
        <trans-unit id="9d90bbde8e029c7aaf55ae7cc6107674786ac2ea" translate="yes" xml:space="preserve">
          <source>Note that all template variables relating to time or categories are available to posts only.</source>
          <target state="translated">시간 또는 카테고리와 관련된 모든 템플릿 변수는 게시물에만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0eb4bdc4e781e7d84143f4441f9136f655537cba" translate="yes" xml:space="preserve">
          <source>Note that in the above table, &lt;code&gt;file&lt;/code&gt; can be anything. It&amp;rsquo;s simply an arbitrarily set variable used in your own logic (such as in a for loop). It isn&amp;rsquo;t a global site or page variable.</source>
          <target state="translated">위의 표에서 &lt;code&gt;file&lt;/code&gt; 은 무엇이든 가능합니다. 그것은 단순히 자신의 논리 (예 : for 루프에서)에 사용되는 임의로 설정된 변수입니다. 글로벌 사이트 또는 페이지 변수가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="1efdb94e4f50bf0983fdc1d308e7ee4efc93198d" translate="yes" xml:space="preserve">
          <source>Note that making copies of theme files will prevent you from receiving any theme updates on those files. An alternative, to continue getting theme updates on all stylesheets, is to use higher specificity CSS selectors in your own additional, originally named CSS files.</source>
          <target state="translated">테마 파일을 복사하면 해당 파일에 대한 테마 업데이트가 수신되지 않습니다. 모든 스타일 시트에서 테마 업데이트를 계속 받으려면 대안으로 원래 이름이 지정된 추가 CSS 파일에서 더 높은 고유 CSS 선택기를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="fb1100df32e7377e196c98a1d1e30c86170cf4a9" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;post&lt;/code&gt; variable only exists inside the &lt;code&gt;for&lt;/code&gt; loop above. If you wish to access the currently-rendering page/posts&amp;rsquo;s variables (the variables of the post/page that has the &lt;code&gt;for&lt;/code&gt; loop in it), use the &lt;code&gt;page&lt;/code&gt; variable instead.</source>
          <target state="translated">있습니다 &lt;code&gt;post&lt;/code&gt; 변수 만 내부에 존재하는 &lt;code&gt;for&lt;/code&gt; 위의 루프. 현재 렌더링중인 페이지 / 포스트 변수 ( &lt;code&gt;for&lt;/code&gt; 루프 가있는 포스트 / 페이지의 변수 )에 액세스하려면 &lt;code&gt;page&lt;/code&gt; 변수를 대신 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="8cf6c6835a876660d4c76838462f49a571751f8c" translate="yes" xml:space="preserve">
          <source>Note that the &lt;code&gt;sass_dir&lt;/code&gt; becomes the load path for Sass imports, nothing more. This means that Jekyll does not know about these files directly, so any files here should not contain the YAML Front Matter as described above nor will they be transformed as described above. This folder should only contain imports.</source>
          <target state="translated">있습니다 &lt;code&gt;sass_dir&lt;/code&gt; 가 더 말대꾸 수입에 대한로드 경로, 아무것도된다. 즉, Jekyll은 이러한 파일에 대해 직접 알지 못하므로 여기에있는 모든 파일에는 위에서 설명한 YAML Front Matter가 포함되어 있지 않아야하며 위에 설명 된대로 변환되지 않아야합니다. 이 폴더에는 가져 오기만 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="365263babcade15a29bd49c083aff113ac6dc6fa" translate="yes" xml:space="preserve">
          <source>Note that upgrading macOS does not automatically upgrade Xcode itself (that can be done separately via the App Store), and having an out-of-date Xcode.app can interfere with the command line tools downloaded above. If you run into this issue, upgrade Xcode and install the upgraded Command Line Tools.</source>
          <target state="translated">macOS를 업그레이드해도 Xcode 자체는 자동으로 업그레이드되지 않으며 (App Store를 통해 별도로 수행 할 수 있음) 오래된 Xcode.app가 있으면 위에서 다운로드 한 명령 줄 도구를 방해 할 수 있습니다. 이 문제가 발생하면 Xcode를 업그레이드하고 업그레이드 된 명령 행 도구를 설치하십시오.</target>
        </trans-unit>
        <trans-unit id="e0cedf9e1146b83059f235f1658469f30f0dfa6f" translate="yes" xml:space="preserve">
          <source>Note that you can also specify a language for highlighting after the first delimiter:</source>
          <target state="translated">첫 번째 구분 기호 다음에 강조 표시 할 언어를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="538035dc55ccf0f41b931e516134c7709bbd5954" translate="yes" xml:space="preserve">
          <source>Note that you cannot use the &lt;code&gt;../&lt;/code&gt; syntax to specify an include location that refers to a higher-level directory.</source>
          <target state="translated">&lt;code&gt;../&lt;/code&gt; 구문을 사용하여 상위 디렉토리를 참조하는 포함 위치를 지정할 수는 없습니다 .</target>
        </trans-unit>
        <trans-unit id="e23bfe7b417b5e844018628a3a9e7b0a66ac8d09" translate="yes" xml:space="preserve">
          <source>Note you cannot add filters to &lt;code&gt;link&lt;/code&gt; tags. For example, you cannot append a string using Liquid filters, such as &lt;code&gt;{% link mypage.html | append: &quot;#section1&quot; %} &lt;/code&gt;. To link to sections on a page, you will need to use regular HTML or Markdown linking techniques.</source>
          <target state="translated">태그 를 &lt;code&gt;link&lt;/code&gt; 하기 위해 필터를 추가 할 수는 없습니다 . 예를 들어, 액체 필터를 사용하여 &lt;code&gt;{% link mypage.html | append: &quot;#section1&quot; %} &lt;/code&gt; . 페이지의 섹션에 링크하려면 일반 HTML 또는 마크 다운 링크 기술을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="ef2620ba5b8650000c4392a80911f4c3e3b5aae7" translate="yes" xml:space="preserve">
          <source>Notes are handy pieces of information</source>
          <target state="translated">메모는 편리한 정보입니다</target>
        </trans-unit>
        <trans-unit id="019763ab6a53f0c0a37aac5bce59026db4857488" translate="yes" xml:space="preserve">
          <source>Now &lt;code&gt;bundle update&lt;/code&gt; will no longer get updates for the theme gem.</source>
          <target state="translated">이제 &lt;code&gt;bundle update&lt;/code&gt; 는 더 이상 테마 젬에 대한 업데이트 를받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f5db484a6b8a6ae2c46d9feb727ea7060997ae39" translate="yes" xml:space="preserve">
          <source>Now all that is left to do is install Jekyll.</source>
          <target state="translated">이제 남은 일은 Jekyll을 설치하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="d16d4716fcec7c0d58d5adb7bf41d53959f85499" translate="yes" xml:space="preserve">
          <source>Now it&amp;rsquo;s possible to publish your website simply by running the &lt;code&gt;deploy&lt;/code&gt; script. If your SSH certificate is &lt;a href=&quot;https://martin.kleppmann.com/2013/05/24/improving-security-of-ssh-private-keys.html&quot;&gt;passphrase-protected&lt;/a&gt;, you will be asked to enter it when the script executes.</source>
          <target state="translated">이제 &lt;code&gt;deploy&lt;/code&gt; 스크립트 를 실행하여 웹 사이트를 게시 할 수 있습니다 . SSH 인증서가 &lt;a href=&quot;https://martin.kleppmann.com/2013/05/24/improving-security-of-ssh-private-keys.html&quot;&gt;암호로 보호&lt;/a&gt; 되어 있으면 스크립트가 실행될 때 입력하라는 메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="a6cf1e4cb312d48ffd4a9ed682f1ece2bf915b2f" translate="yes" xml:space="preserve">
          <source>Now that you&amp;rsquo;ve got everything up-to-date and installed, let&amp;rsquo;s get to work!</source>
          <target state="translated">이제 모든 것이 최신 상태이고 설치되었으므로 작업을 시작하십시오!</target>
        </trans-unit>
        <trans-unit id="34ee5ef663d912be8e2724397d00a3a6157ccfc8" translate="yes" xml:space="preserve">
          <source>Now that your posts have a category or multiple categories, you can make a page or a template displaying just the posts in those categories you specify. Here&amp;rsquo;s a basic example of how to create a list of posts from a specific category.</source>
          <target state="translated">게시물에 카테고리가 있거나 여러 카테고리가 있으므로 지정한 카테고리의 게시물 만 표시하는 페이지 또는 템플릿을 만들 수 있습니다. 다음은 특정 카테고리에서 게시물 목록을 작성하는 방법에 대한 기본 예입니다.</target>
        </trans-unit>
        <trans-unit id="54eae58039538d3de78c88b9ca2dea358415c6b6" translate="yes" xml:space="preserve">
          <source>Now we can install Ruby. To do this we will use a repository from &lt;a href=&quot;https://www.brightbox.com/docs/ruby/ubuntu/&quot;&gt;BrightBox&lt;/a&gt;, which hosts optimized versions of Ruby for Ubuntu.</source>
          <target state="translated">이제 Ruby를 설치할 수 있습니다. 이를 위해 우분투에 최적화 된 루비 버전을 호스팅하는 &lt;a href=&quot;https://www.brightbox.com/docs/ruby/ubuntu/&quot;&gt;BrightBox&lt;/a&gt; 리포지토리를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="f1db2122410ebc1a9c0f607f53505113fc23cafa" translate="yes" xml:space="preserve">
          <source>Now when you insert the &lt;code&gt;spotlight.html&lt;/code&gt; include file, you can submit the YAML file as a parameter:</source>
          <target state="translated">이제 &lt;code&gt;spotlight.html&lt;/code&gt; 포함 파일 을 삽입 하면 YAML 파일을 매개 변수로 제출할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="da26a269dc579ccddc35c61159479c24d604f361" translate="yes" xml:space="preserve">
          <source>Now you need to install all plugins from your Bundler group by running single command &lt;code&gt;bundle install&lt;/code&gt;.</source>
          <target state="translated">이제 단일 명령 &lt;code&gt;bundle install&lt;/code&gt; 실행하여 Bundler 그룹에서 모든 플러그인을 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0aa3bc63f1e4c333878815ea88bcf06ae43e27ea" translate="yes" xml:space="preserve">
          <source>Now, this will only set the layout for files where the type is &lt;code&gt;posts&lt;/code&gt;. The different types that are available to you are &lt;code&gt;pages&lt;/code&gt;, &lt;code&gt;posts&lt;/code&gt;, &lt;code&gt;drafts&lt;/code&gt; or any collection in your site. While &lt;code&gt;type&lt;/code&gt; is optional, you must specify a value for &lt;code&gt;path&lt;/code&gt; when creating a &lt;code&gt;scope/values&lt;/code&gt; pair.</source>
          <target state="translated">이제 유형이 &lt;code&gt;posts&lt;/code&gt; 인 파일의 레이아웃 만 설정합니다 . 사용 가능한 다른 유형은 &lt;code&gt;pages&lt;/code&gt; , &lt;code&gt;posts&lt;/code&gt; , &lt;code&gt;drafts&lt;/code&gt; 또는 사이트의 컬렉션입니다. &lt;code&gt;type&lt;/code&gt; 은 선택 사항 이지만 &lt;code&gt;scope/values&lt;/code&gt; 쌍을 만들 때 &lt;code&gt;path&lt;/code&gt; 값을 지정해야합니다 .</target>
        </trans-unit>
        <trans-unit id="18829b882e10c5f58e54b3c8f9c9dc17ea3b6d03" translate="yes" xml:space="preserve">
          <source>Number of Posts per page.</source>
          <target state="translated">페이지 당 게시물 수</target>
        </trans-unit>
        <trans-unit id="96dde92cd814d365b60ea8afd3bf1ff8d531ae72" translate="yes" xml:space="preserve">
          <source>Of course, you have full control over how (and where) you display your posts, and how you structure your site. You should read more about &lt;a href=&quot;../templates/index&quot;&gt;how templates work&lt;/a&gt; with Jekyll if you want to know more.</source>
          <target state="translated">물론 게시물을 표시하는 방법 (및 위치)과 사이트 구성 방법을 완전히 제어 할 수 있습니다. 더 알고 싶다면 Jekyll에서 &lt;a href=&quot;../templates/index&quot;&gt;템플릿이 작동하는 방식&lt;/a&gt; 에 대해 자세히 읽어보십시오 .</target>
        </trans-unit>
        <trans-unit id="7906d9dd10da83c4dc9e9cc059ee3607b107572f" translate="yes" xml:space="preserve">
          <source>Often times, you will find that you are repeating a lot of configuration options. Setting the same layout in each file, adding the same category - or categories - to a post, etc. You can even add custom variables like author names, which might be the same for the majority of posts on your blog.</source>
          <target state="translated">종종 많은 구성 옵션을 반복한다는 것을 알게 될 것입니다. 각 파일에서 동일한 레이아웃 설정, 게시물에 동일한 범주 또는 범주 추가 등 작성자 이름과 같은 사용자 정의 변수를 추가 할 수도 있습니다. 블로그의 대부분의 게시물에 대해 동일 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd7a7fc492a1910ffb2d5a05efad918a16494e6e" translate="yes" xml:space="preserve">
          <source>Often, you&amp;rsquo;ll want the ability to run a Jekyll site in multiple places, such as previewing locally before pushing to GitHub Pages. Jekyll 1.0 makes that easier with the new &lt;code&gt;--baseurl&lt;/code&gt; flag. To take advantage of this feature, first add the production &lt;code&gt;baseurl&lt;/code&gt; to your site&amp;rsquo;s &lt;code&gt;_config.yml&lt;/code&gt; file. Then, throughout the site, simply prefix relative URLs with &lt;code&gt;{{ site.baseurl }}&lt;/code&gt;. When you&amp;rsquo;re ready to preview your site locally, pass along the &lt;code&gt;--baseurl&lt;/code&gt; flag with your local baseurl (most likely &lt;code&gt;/&lt;/code&gt;) to &lt;code&gt;jekyll serve&lt;/code&gt; and Jekyll will swap in whatever you&amp;rsquo;ve passed along, ensuring all your links work as you&amp;rsquo;d expect in both environments.</source>
          <target state="translated">종종 GitHub 페이지로 이동하기 전에 로컬 미리보기와 같은 여러 위치에서 Jekyll 사이트를 실행하는 기능을 원할 것입니다. Jekyll 1.0은 새로운 &lt;code&gt;--baseurl&lt;/code&gt; 플래그를 사용하여 쉽게 만들 수 있습니다. 첫째,이 기능을 이용 생산 추가하려면 &lt;code&gt;baseurl&lt;/code&gt; 사이트에 &lt;code&gt;_config.yml&lt;/code&gt; 파일. 그런 다음 사이트 전체에서 &lt;code&gt;{{ site.baseurl }}&lt;/code&gt; 으로 상대 URL을 접두어로 추가하십시오 . 사이트를 로컬에서 미리 볼 준비가되면 &lt;code&gt;--baseurl&lt;/code&gt; 플래그를 로컬 &lt;code&gt;jekyll serve&lt;/code&gt; (대부분 &lt;code&gt;/&lt;/code&gt; )과 함께 jekyll serve로 전달하면 Jekyll이 전달한 내용 을 바꾸어 모든 링크가 제대로 작동하도록합니다. d 두 환경에서 모두 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="d30b145b4bde5fa638fe23ec4ef06976a5bbbe21" translate="yes" xml:space="preserve">
          <source>Ok, now for an explanation of each line:</source>
          <target state="translated">각 줄에 대한 설명은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6e28fd75868e57365d52c976d9e5c95ac3f14096" translate="yes" xml:space="preserve">
          <source>On &lt;a href=&quot;https://www.nearlyfreespeech.net/&quot;&gt;NearlyFreeSpeech&lt;/a&gt; you need to run the following commands before installing Jekyll:</source>
          <target state="translated">에 &lt;a href=&quot;https://www.nearlyfreespeech.net/&quot;&gt;NearlyFreeSpeech&lt;/a&gt; 당신은 지킬를 설치하기 전에 다음 명령을 실행해야합니다 :</target>
        </trans-unit>
        <trans-unit id="9c3597264393bddf95c610836b50fcadbbee4990" translate="yes" xml:space="preserve">
          <source>On Android (with Termux) you can install all requirements by running:</source>
          <target state="translated">Android (Termux 포함)에서 다음을 실행하여 모든 요구 사항을 설치할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9fb4f0f510e3218e417720a10ad1d07d4892cbf" translate="yes" xml:space="preserve">
          <source>On Debian or Ubuntu, you may need to add &lt;code&gt;/var/lib/gems/1.8/bin/&lt;/code&gt; to your path in order to have the &lt;code&gt;jekyll&lt;/code&gt; executable be available in your Terminal.</source>
          <target state="translated">데비안 또는 우분투에서는 터미널에서 &lt;code&gt;jekyll&lt;/code&gt; 실행 파일을 사용할 수 있도록 경로에 &lt;code&gt;/var/lib/gems/1.8/bin/&lt;/code&gt; 을 추가해야 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1c531262063904dc6bee40ddd0b7cf0a9d8411f4" translate="yes" xml:space="preserve">
          <source>On Red Hat, CentOS, and Fedora systems you can do this by running:</source>
          <target state="translated">Red Hat, CentOS 및 Fedora 시스템에서 다음을 실행하여이를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa115f95060aeec4e3e2d8c7325ac6dc5e8eb616" translate="yes" xml:space="preserve">
          <source>On Ubuntu if you get stuck after &lt;code&gt;bundle exec jekyll serve&lt;/code&gt; and see error messages like &lt;code&gt;Could not locate Gemfile&lt;/code&gt; or &lt;code&gt;.bundle/ directory&lt;/code&gt;, it&amp;rsquo;s likely because all requirements have not been fully met. Recent stock Ubuntu distributions require the installation of both the &lt;code&gt;ruby&lt;/code&gt; and &lt;code&gt;ruby-all-dev&lt;/code&gt; packages:</source>
          <target state="translated">Ubuntu에서 &lt;code&gt;bundle exec jekyll serve&lt;/code&gt; 후 멈춰서 Cem을 &lt;code&gt;Could not locate Gemfile&lt;/code&gt; 또는 &lt;code&gt;.bundle/ directory&lt;/code&gt; 와 같은 오류 메시지가 표시 되면 모든 요구 사항이 완전히 충족되지 않았기 때문일 수 있습니다. 최신 재고 우분투 배포판에는 &lt;code&gt;ruby&lt;/code&gt; 및 &lt;code&gt;ruby-all-dev&lt;/code&gt; 패키지 가 모두 설치되어 있어야 합니다.</target>
        </trans-unit>
        <trans-unit id="b5a43e36150386712212d9f5b9c9c1a6f0c1c9d5" translate="yes" xml:space="preserve">
          <source>On Windows, you may need to install &lt;a href=&quot;https://wiki.github.com/oneclick/rubyinstaller/development-kit&quot;&gt;RubyInstaller DevKit&lt;/a&gt;.</source>
          <target state="translated">Windows에서는 &lt;a href=&quot;https://wiki.github.com/oneclick/rubyinstaller/development-kit&quot;&gt;RubyInstaller DevKit&lt;/a&gt; 를 설치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="bc528da50fbf0444b3fec13f95a3705a7abf12e9" translate="yes" xml:space="preserve">
          <source>On macOS, you may need to update RubyGems (using &lt;code&gt;sudo&lt;/code&gt; only if necessary):</source>
          <target state="translated">macOS에서 RubyGems를 업데이트해야 할 수도 있습니다 ( 필요한 경우에만 &lt;code&gt;sudo&lt;/code&gt; 사용 ).</target>
        </trans-unit>
        <trans-unit id="3d800c5c38947e2742dca8b913a5dcc9a8c572f5" translate="yes" xml:space="preserve">
          <source>Once Homebrew is installed, the second step is easy:</source>
          <target state="translated">Homebrew가 설치되면 두 번째 단계는 쉽습니다.</target>
        </trans-unit>
        <trans-unit id="1d48bb207556e12c4176a8e5b62edee99682ac0f" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve created your class and have it properly set up either as a plugin in the &lt;code&gt;_plugins&lt;/code&gt; folder or as a gem, specify it in your &lt;code&gt;_config.yml&lt;/code&gt;:</source>
          <target state="translated">당신은 당신의 클래스를 만들었으며 제대로에서 플러그인으로 중 하나를 설정 한 후 &lt;code&gt;_plugins&lt;/code&gt; 또는 보석으로, 당신 그것을 지정 폴더 &lt;code&gt;_config.yml&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="7764f5c760737cd6cf299480bea632afe6568e67" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve generated the &lt;code&gt;_site&lt;/code&gt; directory, you can easily rsync its content using a &lt;code&gt;tasks/deploy&lt;/code&gt; shell script similar to &lt;a href=&quot;https://github.com/vitalyrepin/vrepinblog/blob/master/transfer.sh&quot;&gt;this deploy script here&lt;/a&gt;. You&amp;rsquo;d obviously need to change the values to reflect your site&amp;rsquo;s details.</source>
          <target state="translated">&lt;code&gt;_site&lt;/code&gt; 디렉토리를 생성하면 &lt;a href=&quot;https://github.com/vitalyrepin/vrepinblog/blob/master/transfer.sh&quot;&gt;이 배포 스크립트 here&lt;/a&gt; 과 유사한 &lt;code&gt;tasks/deploy&lt;/code&gt; 셸 스크립트를 사용하여 내용을 쉽게 재 동기화 할 수 있습니다 . 사이트의 세부 사항을 반영하기 위해 값을 변경해야합니다.</target>
        </trans-unit>
        <trans-unit id="f383d31d4e5cb6939c261af3b2784a812fa3a19e" translate="yes" xml:space="preserve">
          <source>Once you&amp;rsquo;ve generated the &lt;code&gt;_site&lt;/code&gt; directory, you can easily scp its content using a &lt;code&gt;tasks/deploy&lt;/code&gt; shell script similar to &lt;a href=&quot;https://github.com/henrik/henrik.nyh.se/blob/master/script/deploy&quot;&gt;this deploy script&lt;/a&gt;. You&amp;rsquo;d obviously need to change the values to reflect your site&amp;rsquo;s details. There is even &lt;a href=&quot;https://gist.github.com/henrik/214959&quot;&gt;a matching TextMate command&lt;/a&gt; that will help you run this script.</source>
          <target state="translated">&lt;code&gt;_site&lt;/code&gt; 디렉토리를 생성 한 후에는 &lt;a href=&quot;https://github.com/henrik/henrik.nyh.se/blob/master/script/deploy&quot;&gt;이 배치 스크립트&lt;/a&gt; 와 유사한 &lt;code&gt;tasks/deploy&lt;/code&gt; shell 스크립트를 사용하여 컨텐츠를 쉽게 scp 할 수 있습니다 . 사이트의 세부 사항을 반영하기 위해 값을 변경해야합니다. 이 스크립트를 실행하는 데 도움이 &lt;a href=&quot;https://gist.github.com/henrik/214959&quot;&gt;되는 일치하는 TextMate 명령&lt;/a&gt; 도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2fa1c2d47a36a61344e21d4725d8dd4dcfb7be93" translate="yes" xml:space="preserve">
          <source>One major benefit of using the &lt;code&gt;link&lt;/code&gt; or &lt;code&gt;post_url&lt;/code&gt; tag is link validation. If the link doesn&amp;rsquo;t exist, Jekyll won&amp;rsquo;t build your site. This is a good thing, as it will alert you to a broken link so you can fix it (rather than allowing you to build and deploy a site with broken links).</source>
          <target state="translated">&lt;code&gt;link&lt;/code&gt; 또는 &lt;code&gt;post_url&lt;/code&gt; 태그 사용의 주요 이점 중 하나 는 링크 유효성 검사입니다. 링크가 없으면 Jekyll은 사이트를 구축하지 않습니다. 링크가 끊어진 사이트를 구축하고 배포하는 대신 링크가 끊어진 링크를 알려주므로 문제를 해결하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="e8f3b981456dcf42d600fd7bd3fac055adb5786c" translate="yes" xml:space="preserve">
          <source>One of Jekyll&amp;rsquo;s best aspects is that it is &amp;ldquo;blog aware&amp;rdquo;. What does this mean, exactly? Well, simply put, it means that blogging is baked into Jekyll&amp;rsquo;s functionality. If you write articles and publish them online, you can publish and maintain a blog simply by managing a folder of text-files on your computer. Compared to the hassle of configuring and maintaining databases and web-based CMS systems, this will be a welcome change!</source>
          <target state="translated">Jekyll의 가장 좋은 측면 중 하나는 &quot;블로그 인식&quot;이라는 것입니다. 이것이 정확히 무엇을 의미합니까? 간단히 말해서, 그것은 블로그가 Jekyll의 기능으로 구워 졌다는 것을 의미합니다. 기사를 작성하고 온라인으로 게시하는 경우 컴퓨터에서 텍스트 파일 폴더를 관리하여 블로그를 게시하고 유지 관리 할 수 ​​있습니다. 데이터베이스 및 웹 기반 CMS 시스템을 구성하고 유지 관리해야하는 번거 로움과 비교하면 이는 환영할만한 변화입니다!</target>
        </trans-unit>
        <trans-unit id="6c36368b930f23a8cae7edd1498894a4e3f706e2" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;Gemfile&lt;/code&gt; and remove &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Gemfile&lt;/code&gt; 을 열고 &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="f6880880ea71672000d6b0fc05e219906fdfa14f" translate="yes" xml:space="preserve">
          <source>Open &lt;code&gt;_config.yml&lt;/code&gt; and remove &lt;code&gt;theme: minima&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;_config.yml&lt;/code&gt; 을 열고 &lt;code&gt;theme: minima&lt;/code&gt; 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="b6f92283b488ad8b56842b85e322ec4b81a37568" translate="yes" xml:space="preserve">
          <source>Open a command prompt and execute the following commands:</source>
          <target state="translated">명령 프롬프트를 열고 다음 명령을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="004ceb479a659b160d5534bfd7d1947dc40b5925" translate="yes" xml:space="preserve">
          <source>Open a command prompt, target your local blog repository root, and install github-pages: &lt;code&gt;bundle install&lt;/code&gt;</source>
          <target state="translated">명령 프롬프트를 열고 로컬 블로그 저장소 루트를 대상으로하고 github-pages를 &lt;code&gt;bundle install&lt;/code&gt; . bundle install</target>
        </trans-unit>
        <trans-unit id="7583cd72c5014d4ac4731c7aa0e930cf31931a3c" translate="yes" xml:space="preserve">
          <source>Open command prompt and install &lt;a href=&quot;http://bundler.io/&quot;&gt;Bundler&lt;/a&gt;: &lt;code&gt;gem install bundler&lt;/code&gt;</source>
          <target state="translated">명령 프롬프트를 열고 &lt;a href=&quot;http://bundler.io/&quot;&gt;Bundler&lt;/a&gt; 설치 : &lt;code&gt;gem install bundler&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a8ab8db786d60c2545688e62a58c67b60caca1ae" translate="yes" xml:space="preserve">
          <source>Open command prompt in &lt;code&gt;C:\tools\DevKit2&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;C:\tools\DevKit2&lt;/code&gt; 에서 명령 프롬프트 열기</target>
        </trans-unit>
        <trans-unit id="73152d15b9a1ec78d263f7c6b2b461568506e6bf" translate="yes" xml:space="preserve">
          <source>Open the theme&amp;rsquo;s directory in Finder or Explorer:</source>
          <target state="translated">Finder 또는 Explorer에서 테마 디렉토리를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="70a99ba8a9ffb445b428e39680492a883a85000b" translate="yes" xml:space="preserve">
          <source>OpenShift</source>
          <target state="translated">OpenShift</target>
        </trans-unit>
        <trans-unit id="d32fab14202ae0097389d61ed54dc7ccca3287f0" translate="yes" xml:space="preserve">
          <source>Optional Extras</source>
          <target state="translated">옵션 엑스트라</target>
        </trans-unit>
        <trans-unit id="2730df1840876b27ba50ea3c9e4fcd46e32a5273" translate="yes" xml:space="preserve">
          <source>Optionally configure the build by clicking on the gear icon. Further configuration happens via your &lt;code&gt;.travis.yml&lt;/code&gt; file. More details below.</source>
          <target state="translated">선택적으로 톱니 바퀴 아이콘을 클릭하여 빌드를 구성하십시오. 추가 구성은 &lt;code&gt;.travis.yml&lt;/code&gt; 파일을 통해 이루어집니다 . 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="60e7611132055753c9b1041f69b1f74d642f7ec9" translate="yes" xml:space="preserve">
          <source>Optionally you can use &lt;a href=&quot;https://github.com/KeJunMao/fastjekyll#autoinstall-jekyll-for-windows&quot;&gt;Autoinstall Jekyll for Windows&lt;/a&gt;.</source>
          <target state="translated">선택적 &lt;a href=&quot;https://github.com/KeJunMao/fastjekyll#autoinstall-jekyll-for-windows&quot;&gt;으로 Windows 용 자동 설치 Jekyll을&lt;/a&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="135a1bcda4b25a5f404e15dc6baa60da6e5b1c5b" translate="yes" xml:space="preserve">
          <source>Options and Flags</source>
          <target state="translated">옵션과 플래그</target>
        </trans-unit>
        <trans-unit id="c3041924699f7386336b1c03e46950d1ce22be2c" translate="yes" xml:space="preserve">
          <source>Options are given as a second argument to &lt;code&gt;.new&lt;/code&gt;, and are encoded in a symbol-keyed Ruby Hash. For more information about the configuration options, check out &lt;code&gt;html-proofer&lt;/code&gt;&amp;rsquo;s README file.</source>
          <target state="translated">옵션은 &lt;code&gt;.new&lt;/code&gt; 에 대한 두 번째 인수로 제공되며 기호 키 Ruby Hash로 인코딩됩니다. 구성 옵션에 대한 자세한 내용은 &lt;code&gt;html-proofer&lt;/code&gt; 의 README 파일을 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="35a22db1ee88115b121ce6b7c4afd8072e9a235c" translate="yes" xml:space="preserve">
          <source>Options for creating a new site with Jekyll</source>
          <target state="translated">Jekyll을 사용하여 새 사이트를 만들기위한 옵션</target>
        </trans-unit>
        <trans-unit id="560143653190c35a839a512a853005f840e8708e" translate="yes" xml:space="preserve">
          <source>Options for the &lt;code&gt;slugify&lt;/code&gt; filter</source>
          <target state="translated">&lt;code&gt;slugify&lt;/code&gt; 필터 옵션</target>
        </trans-unit>
        <trans-unit id="fd32301500d284cdb5c29f7af6f284e0ab343b55" translate="yes" xml:space="preserve">
          <source>Or &lt;code&gt;_data/members.csv&lt;/code&gt;:</source>
          <target state="translated">또는 &lt;code&gt;_data/members.csv&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="d172be3fe8bc618fcc6602af3e4c76c0aae31310" translate="yes" xml:space="preserve">
          <source>Or if you&amp;rsquo;ve started with the &lt;code&gt;jekyll new&lt;/code&gt; command, replace &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; with your theme-gem:</source>
          <target state="translated">또는 &lt;code&gt;jekyll new&lt;/code&gt; 명령으로 시작한 경우 &lt;code&gt;gem &quot;minima&quot;, &quot;~&amp;gt; 2.0&quot;&lt;/code&gt; 을 테마 gem으로 바꾸 십시오.</target>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="0c6615de6943228411f3ad7e04655686aac16eb4" translate="yes" xml:space="preserve">
          <source>Other Files/Folders</source>
          <target state="translated">다른 파일 / 폴더</target>
        </trans-unit>
        <trans-unit id="16450a48eba70ad54ff1ad9ff818734f44629c84" translate="yes" xml:space="preserve">
          <source>Other commentary</source>
          <target state="translated">다른 논평</target>
        </trans-unit>
        <trans-unit id="fca1c1ad83bd5de1fb6c5a8fa7489884ec896f2e" translate="yes" xml:space="preserve">
          <source>Our friends at GitHub have provided the &lt;a href=&quot;https://github.com/github/pages-gem&quot;&gt;github-pages&lt;/a&gt; gem which is used to manage &lt;a href=&quot;https://pages.github.com/versions/&quot;&gt;Jekyll and its dependencies on GitHub Pages&lt;/a&gt;. Using it in your projects means that when you deploy your site to GitHub Pages, you will not be caught by unexpected differences between various versions of the gems.</source>
          <target state="translated">GitHub의 친구들은 &lt;a href=&quot;https://pages.github.com/versions/&quot;&gt;Jekyll과 GitHub Pages의 의존성&lt;/a&gt; 을 관리하는 데 사용되는 &lt;a href=&quot;https://github.com/github/pages-gem&quot;&gt;github-pages&lt;/a&gt; gem을 제공했습니다 . 프로젝트에서이 사이트를 사용한다는 것은 사이트를 GitHub 페이지에 배포 할 때 다양한 버전의 gem간에 예기치 않은 차이가 발생하지 않음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="552f0311af4ab97f91dc8653580124d0fb276057" translate="yes" xml:space="preserve">
          <source>Outputs the content of the tag.</source>
          <target state="translated">태그의 내용을 출력합니다.</target>
        </trans-unit>
        <trans-unit id="37dc9012ef71231741cb1e581f85142964b548d7" translate="yes" xml:space="preserve">
          <source>Overall, you can create includes that act as templates for a variety of uses &amp;mdash; inserting audio or video clips, alerts, special formatting, and more. However, note that you should avoid using too many includes, as this will slow down the build time of your site. For example, don&amp;rsquo;t use includes every time you insert an image. (The above technique shows a use case for special images.)</source>
          <target state="translated">전반적으로 오디오 또는 비디오 클립 삽입, 경고, 특수 형식 등 다양한 용도로 사용되는 템플릿 역할을하는 포함을 만들 수 있습니다. 그러나 너무 많은 포함을 사용하면 사이트 빌드 시간이 느려질 수 있으므로 피해야합니다. 예를 들어 이미지를 삽입 할 때마다 포함을 사용하지 마십시오. 위의 기술은 특수 이미지의 사용 사례를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a407aa60450670a092614d3725b0bf7a57789eec" translate="yes" xml:space="preserve">
          <source>Override default development settings</source>
          <target state="translated">기본 개발 설정 재정의</target>
        </trans-unit>
        <trans-unit id="1fa8317388f8659e5d80c07bb57f00ba667fc7e7" translate="yes" xml:space="preserve">
          <source>Overriding theme defaults</source>
          <target state="translated">테마 기본값 재정의</target>
        </trans-unit>
        <trans-unit id="fb727ea90883481adad9143766fed7cf0c61d139" translate="yes" xml:space="preserve">
          <source>Page Variables</source>
          <target state="translated">페이지 변수</target>
        </trans-unit>
        <trans-unit id="b2edf287ea254dc5eefc4ac30424fb7a0fabecf3" translate="yes" xml:space="preserve">
          <source>Page specific information + the &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML front matter&lt;/a&gt;. Custom variables set via the YAML Front Matter will be available here. See below for details.</source>
          <target state="translated">페이지 특정 정보 + &lt;a href=&quot;../frontmatter/index&quot;&gt;YAML 주요 사항&lt;/a&gt; . YAML Front Matter를 통해 설정된 맞춤 변수는 여기에서 사용할 수 있습니다. 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="600584c2d5ccb97c0c0c424d9f32d6b102fcb040" translate="yes" xml:space="preserve">
          <source>Pages</source>
          <target state="translated">Pages</target>
        </trans-unit>
        <trans-unit id="1731a84a0ac0bb83b8947e3dc93bd2eedd07c402" translate="yes" xml:space="preserve">
          <source>Pages and posts can also access a specific data item. The example below shows how to access a specific item:</source>
          <target state="translated">페이지 및 게시물은 특정 데이터 항목에 액세스 할 수도 있습니다. 아래 예는 특정 항목에 액세스하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="100325b8d6de92dc6ff09cd2c078133755bf274f" translate="yes" xml:space="preserve">
          <source>Pagination</source>
          <target state="translated">Pagination</target>
        </trans-unit>
        <trans-unit id="099f26d22f2eab450a9f8e4641df844a9fd35b39" translate="yes" xml:space="preserve">
          <source>Pagination does not support tags or categories</source>
          <target state="translated">페이지 매김은 태그 또는 카테고리를 지원하지 않습니다</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
