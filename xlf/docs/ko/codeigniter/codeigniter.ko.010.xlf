<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="codeigniter">
    <body>
      <group id="codeigniter">
        <trans-unit id="5e33f0ab51bcc28824755a193d02b300b6a28a55" translate="yes" xml:space="preserve">
          <source>The caching system saves your cache files to folders that correspond to the URI of the page you are viewing. For example, if you are viewing a page at example.com/index.php/blog/comments, the caching system will put all cache files associated with it in a folder called blog+comments. To delete those particular cache files you will use:</source>
          <target state="translated">캐싱 시스템은 캐시 파일을보고있는 페이지의 URI에 해당하는 폴더에 저장합니다. 예를 들어, example.com/index.php/blog/comments에서 페이지를 보는 경우 캐싱 시스템은 이와 관련된 모든 캐시 파일을 blog + comments라는 폴더에 저장합니다. 특정 캐시 파일을 삭제하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="960a49cfd0a98d78deb2e7cc350a7a3f5f891c2d" translate="yes" xml:space="preserve">
          <source>The captcha function requires the GD image library.</source>
          <target state="translated">보안 문자 기능에는 GD 이미지 라이브러리가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8673cea1866e84570272afee8b21cdad4d6021b5" translate="yes" xml:space="preserve">
          <source>The character collation used in communicating with the database</source>
          <target state="translated">데이터베이스와의 통신에 사용되는 문자 조합</target>
        </trans-unit>
        <trans-unit id="4b939624f331be0465646e1fc057773a658f11a6" translate="yes" xml:space="preserve">
          <source>The character set used in communicating with the database.</source>
          <target state="translated">데이터베이스와 통신하는 데 사용되는 문자 세트입니다.</target>
        </trans-unit>
        <trans-unit id="b3201957d5f3f7e091bf0e333f76e5bfb26e8b59" translate="yes" xml:space="preserve">
          <source>The child classes, the drivers themselves, can then be called directly through the parent class, without initializing them:</source>
          <target state="translated">그러면 자식 클래스 인 드라이버 자체를 초기화하지 않고 부모 클래스를 통해 직접 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3409ec41e31957957ce04693e790865a1d9a58da" translate="yes" xml:space="preserve">
          <source>The class declaration must extend the parent class.</source>
          <target state="translated">클래스 선언은 부모 클래스를 확장해야합니다.</target>
        </trans-unit>
        <trans-unit id="09559a635805021c812d9944df3012e07664f5d3" translate="yes" xml:space="preserve">
          <source>The class is automatically initialized when the file is loaded the first time.</source>
          <target state="translated">클래스는 파일이 처음로드 될 때 자동으로 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="4a1caf94f5893bd40b68ea18b3cbdb82ed658ac5" translate="yes" xml:space="preserve">
          <source>The classmap is used extensively by CodeIgniter to eke the last ounces of performance out of the system by not hitting the file-system with extra &lt;code&gt;is_file()&lt;/code&gt; calls. You can use the classmap to link to third-party libraries that are not namespaced:</source>
          <target state="translated">클래스 맵은 CodeIgniter에서 추가 &lt;code&gt;is_file()&lt;/code&gt; 호출로 파일 시스템을 공격하지 않음으로써 시스템의 성능을 향상시키기 위해 광범위하게 사용됩니다 . 클래스 맵을 사용하여 네임 스페이스가 지정되지 않은 타사 라이브러리에 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5d0b3e31eed060dc4cc87f77e0151822d03afe46" translate="yes" xml:space="preserve">
          <source>The clear method resets all of the values used when processing an image. You will want to call this if you are processing images in a loop.</source>
          <target state="translated">clear 메소드는 이미지를 처리 ​​할 때 사용 된 모든 값을 재설정합니다. 루프에서 이미지를 처리하는 경우이를 호출하려고합니다.</target>
        </trans-unit>
        <trans-unit id="17abd13a4b815ad6d739b409548fee639b29d5fe" translate="yes" xml:space="preserve">
          <source>The client you created sends a message (&amp;ldquo;How&amp;rsquo;s is going?&amp;rdquo;) to the server, along with a request for the &amp;ldquo;Greetings&amp;rdquo; method. The Server receives the request and maps it to the &lt;code&gt;process()&lt;/code&gt; method, where a response is sent back.</source>
          <target state="translated">생성 한 클라이언트는 &quot;인사&quot;방법에 대한 요청과 함께 메시지 ( &quot;어떻게가요?&quot;)를 서버로 보냅니다. 서버는 요청을 받아 응답을 다시 보내는 &lt;code&gt;process()&lt;/code&gt; 메소드에 맵핑합니다 .</target>
        </trans-unit>
        <trans-unit id="8b61c3297e7d3a57127bf4ec87f6e532e944af30" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;current&amp;rdquo; link.</source>
          <target state="translated">&quot;현재&quot;링크의 닫는 태그입니다.</target>
        </trans-unit>
        <trans-unit id="f1f942387778fb8713128548eef429a251bbe2a6" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;digit&amp;rdquo; link.</source>
          <target state="translated">&quot;숫자&quot;링크의 닫는 태그입니다.</target>
        </trans-unit>
        <trans-unit id="8ab3eba975c76e0b3ae71e9342348ac4cacb6a3b" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;first&amp;rdquo; link.</source>
          <target state="translated">&quot;첫 번째&quot;링크의 닫는 태그.</target>
        </trans-unit>
        <trans-unit id="f6a32236b7e0e7757d1963ed747dd5046a85f5ca" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;last&amp;rdquo; link.</source>
          <target state="translated">&quot;마지막&quot;링크의 닫는 태그입니다.</target>
        </trans-unit>
        <trans-unit id="a2b99eb02ddea9fd6f254c9bfd4cfc27dd832b88" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;next&amp;rdquo; link.</source>
          <target state="translated">&amp;ldquo;다음&amp;rdquo;링크의 닫는 태그.</target>
        </trans-unit>
        <trans-unit id="1e4b9ec53d1fb1b8933c49a53b7f0ad3fff750e9" translate="yes" xml:space="preserve">
          <source>The closing tag for the &amp;ldquo;previous&amp;rdquo; link.</source>
          <target state="translated">&quot;이전&quot;링크의 닫는 태그.</target>
        </trans-unit>
        <trans-unit id="35550101b6036e7993fae08111e0138e054317ce" translate="yes" xml:space="preserve">
          <source>The closing tag placed on the right side of the entire result.</source>
          <target state="translated">전체 결과의 오른쪽에 닫는 태그.</target>
        </trans-unit>
        <trans-unit id="cf1f9e551c296d99e36a9337a66b134aba30a9d9" translate="yes" xml:space="preserve">
          <source>The code above adds a lot of functionality. First we load the NewsModel. After that, we check if we deal with the &lt;code&gt;POST&lt;/code&gt; request and then the Controller-provided helper function is used to validate the $_POST fields. In this case, the title and text fields are required.</source>
          <target state="translated">위의 코드는 많은 기능을 추가합니다. 먼저 NewsModel을로드합니다. 그런 다음 &lt;code&gt;POST&lt;/code&gt; 요청을 처리하는지 확인한 다음 컨트롤러에서 제공하는 도우미 함수를 사용하여 $ _POST 필드의 유효성을 검사합니다. 이 경우 제목 및 텍스트 필드가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="9773e3d00125dc183f57dc0e983d9b3509ba18d9" translate="yes" xml:space="preserve">
          <source>The code above adds a lot of functionality. The first few lines load the form helper and the form validation library. After that, rules for the form validation are set. The &lt;code&gt;set_rules()&lt;/code&gt; method takes three arguments; the name of the input field, the name to be used in error messages, and the rule. In this case the title and text fields are required.</source>
          <target state="translated">위의 코드는 많은 기능을 추가합니다. 처음 몇 줄은 양식 도우미와 양식 유효성 검사 라이브러리를로드합니다. 그런 다음 양식 유효성 검사 규칙이 설정됩니다. &lt;code&gt;set_rules()&lt;/code&gt; 메소드는 세 인수를; 입력 필드 이름, 오류 메시지에 사용될 이름 및 규칙. 이 경우 제목과 텍스트 필드가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ab4208d2a44a3d69112c9a91ae92574495bea2e5" translate="yes" xml:space="preserve">
          <source>The code above gets all news records from the model and assigns it to a variable. The value for the title is also assigned to the &lt;code&gt;$data['title']&lt;/code&gt; element and all data is passed to the views. You now need to create a view to render the news items. Create &lt;em&gt;application/views/news/index.php&lt;/em&gt; and add the next piece of code.</source>
          <target state="translated">위의 코드는 모델에서 모든 뉴스 레코드를 가져 와서 변수에 지정합니다. 제목의 값은 &lt;code&gt;$data['title']&lt;/code&gt; 요소 에도 할당 되며 모든 데이터는보기로 전달됩니다. 뉴스 항목을 렌더링하려면보기를 작성해야합니다. &lt;em&gt;application / views / news / index.php를&lt;/em&gt; 생성 하고 다음 코드를 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="0b38553e184a3e5b8dd4d5afc5335e8a0ebc6130" translate="yes" xml:space="preserve">
          <source>The code above gets all news records from the model and assigns it to a variable. The value for the title is also assigned to the &lt;code&gt;$data['title']&lt;/code&gt; element and all data is passed to the views. You now need to create a view to render the news items. Create &lt;strong&gt;app/Views/news/overview.php&lt;/strong&gt; and add the next piece of code.</source>
          <target state="translated">위의 코드는 모델에서 모든 뉴스 레코드를 가져와 변수에 할당합니다. 제목 값은 &lt;code&gt;$data['title']&lt;/code&gt; 요소 에도 할당 되며 모든 데이터가 뷰로 전달됩니다. 이제 뉴스 항목을 렌더링하기위한보기를 만들어야합니다. 작성 &lt;strong&gt;응용 프로그램 / 조회 / 뉴스 / overview.php&lt;/strong&gt; 및 코드의 다음 조각을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80fc0c266145440819f5051f9ddded2b3c7a891f" translate="yes" xml:space="preserve">
          <source>The codebase comes with a &lt;code&gt;VagrantFile.dist&lt;/code&gt;, that can be copied to &lt;code&gt;VagrantFile&lt;/code&gt; and tailored for your system, for instance enabling access to specific database or caching engines.</source>
          <target state="translated">코드베이스가 함께 제공 &lt;code&gt;VagrantFile.dist&lt;/code&gt; 에 복사 할 수 있습니다, &lt;code&gt;VagrantFile&lt;/code&gt; 및 인스턴스가 특정 데이터베이스에 대한 액세스를 활성화하거나 엔진을 캐싱를 들어, 시스템에 맞게.</target>
        </trans-unit>
        <trans-unit id="c8e67fc6a18bb54fc6c196ca33a742c7c14afa1e" translate="yes" xml:space="preserve">
          <source>The codeigniter.com website, written in CodeIgniter 4</source>
          <target state="translated">CodeIgniter 4로 작성된 codeigniter.com 웹 사이트</target>
        </trans-unit>
        <trans-unit id="edd40e159ce69b46c0207b3c490845349c4613be" translate="yes" xml:space="preserve">
          <source>The color of the drop shadow, specified in hex. If you leave this blank a drop shadow will not be used. Both the full 6-length (ie, 993300) and the short three character abbreviated version (ie, fff) are supported.</source>
          <target state="translated">그림자의 색상으로, 16 진수로 지정됩니다. 이 항목을 비워두면 그림자가 사용되지 않습니다. 전체 6 길이 (즉, 993300)와 짧은 3 자 약어 버전 (즉, fff)이 모두 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="0ce648786349d2663a22c00ebf48fb226eae9794" translate="yes" xml:space="preserve">
          <source>The command above will create a &amp;ldquo;project-root&amp;rdquo; folder.</source>
          <target state="translated">위의 명령은 &quot;project-root&quot;폴더를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="9a81596327853c44ac13732b111bff755c7881a9" translate="yes" xml:space="preserve">
          <source>The command above will update &lt;strong&gt;composer.json&lt;/strong&gt; to point to the &lt;code&gt;develop&lt;/code&gt; branch of the working repository, and update the corresponding paths in config and XML files. To revert these changes run:</source>
          <target state="translated">위의 명령은 &lt;strong&gt;composer.json&lt;/strong&gt; 을 업데이트 하여 작업 저장소 의 &lt;code&gt;develop&lt;/code&gt; 분기 를 가리키고 구성 및 XML 파일의 해당 경로를 업데이트합니다. 이러한 변경 사항을 되돌리려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="b17ad18b546472cb1cc96e9bf3adf77fdd3f1349" translate="yes" xml:space="preserve">
          <source>The command-line interface is a text-based method of interacting with computers. For more information, check the &lt;a href=&quot;http://en.wikipedia.org/wiki/Command-line_interface&quot;&gt;Wikipedia article&lt;/a&gt;.</source>
          <target state="translated">명령 줄 인터페이스는 컴퓨터와 상호 작용하는 텍스트 기반 방법입니다. 자세한 내용은 &lt;a href=&quot;http://en.wikipedia.org/wiki/Command-line_interface&quot;&gt;Wikipedia article을&lt;/a&gt; 확인 하십시오 .</target>
        </trans-unit>
        <trans-unit id="d5cf3d3be3cb73be1ee46f7ef0edcfe673374ebf" translate="yes" xml:space="preserve">
          <source>The command-line interface is a text-based method of interacting with computers. For more information, check the &lt;a href=&quot;https://en.wikipedia.org/wiki/Command-line_interface&quot;&gt;Wikipedia article&lt;/a&gt;.</source>
          <target state="translated">명령 줄 인터페이스는 컴퓨터와 상호 작용하는 텍스트 기반 방법입니다. 자세한 내용은 &lt;a href=&quot;https://en.wikipedia.org/wiki/Command-line_interface&quot;&gt;Wikipedia 기사를&lt;/a&gt; 확인 하십시오 .</target>
        </trans-unit>
        <trans-unit id="79991bf78e5d5f9e7e0a2e837edcba60a9337182" translate="yes" xml:space="preserve">
          <source>The compiled SQL statement as a string</source>
          <target state="translated">컴파일 된 SQL 문을 문자열로</target>
        </trans-unit>
        <trans-unit id="ed286abf70bf0b2bc642ad077d5c2d9a0da9a02c" translate="yes" xml:space="preserve">
          <source>The compression level to use.</source>
          <target state="translated">사용할 압축 수준입니다.</target>
        </trans-unit>
        <trans-unit id="651812a6bb14d505c9bea48ceb377785a2296900" translate="yes" xml:space="preserve">
          <source>The config settings are stored in a class property that is an array with this prototype:</source>
          <target state="translated">구성 설정은 다음 프로토 타입이있는 배열 인 클래스 속성에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="600431317ad6ed738aeca73f87a8cecc49da57e4" translate="yes" xml:space="preserve">
          <source>The config settings are stored in a multi-dimensional array with this prototype:</source>
          <target state="translated">구성 설정은 다음 프로토 타입과 함께 다차원 배열에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="b80bf2a0a37fc437e7714a9c9b0228b052c39931" translate="yes" xml:space="preserve">
          <source>The configuration item or NULL if the item doesn&amp;rsquo;t exist</source>
          <target state="translated">구성 항목 또는 항목이없는 경우 NULL</target>
        </trans-unit>
        <trans-unit id="eebdf14f8cc04dbd23510c794fb2ed4ab74ecf97" translate="yes" xml:space="preserve">
          <source>The controller (Form.php) has one method: &lt;code&gt;index()&lt;/code&gt;. This method initializes the validation class and loads the form helper and URL helper used by your view files. It also runs the validation routine. Based on whether the validation was successful it either presents the form or the success page.</source>
          <target state="translated">컨트롤러 (Form.php)에는 &lt;code&gt;index()&lt;/code&gt; 메소드가 있습니다. 이 메소드는 유효성 검증 클래스를 초기화하고보기 파일에서 사용되는 양식 헬퍼 및 URL 헬퍼를로드합니다. 유효성 검사 루틴도 실행합니다. 유효성 검사 성공 여부에 따라 양식 또는 성공 페이지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="83c6d3b9890836689bddd1d9a9cf6cc3bd40a425" translate="yes" xml:space="preserve">
          <source>The controller (Form.php) has one method: &lt;code&gt;index()&lt;/code&gt;. This method uses the Controller-provided validate method and loads the form helper and URL helper used by your view files. It also runs the validation routine. Based on whether the validation was successful it either presents the form or the success page.</source>
          <target state="translated">컨트롤러 (Form.php)에는 &lt;code&gt;index()&lt;/code&gt; 메서드가 있습니다. 이 메서드는 컨트롤러에서 제공하는 validate 메서드를 사용하고보기 파일에서 사용하는 양식 도우미 및 URL 도우미를로드합니다. 또한 유효성 검사 루틴을 실행합니다. 유효성 검사가 성공했는지 여부에 따라 양식 또는 성공 페이지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="b06c858c317f67505f718682390ec747ed3547f1" translate="yes" xml:space="preserve">
          <source>The controller is now functioning!</source>
          <target state="translated">이제 컨트롤러가 작동합니다!</target>
        </trans-unit>
        <trans-unit id="e3f5f4108c9a663269f429d7afc4ce033c90b078" translate="yes" xml:space="preserve">
          <source>The controller is now functioning! Point your browser to &lt;code&gt;[your-site-url]index.php/pages/view&lt;/code&gt; to see your page. When you visit &lt;code&gt;index.php/pages/view/about&lt;/code&gt; you&amp;rsquo;ll see the about page, again including the header and footer.</source>
          <target state="translated">컨트롤러가 작동합니다! &lt;code&gt;[your-site-url]index.php/pages/view&lt;/code&gt; 브라우저를 [your-site-url] index.php / pages / view 로 지정하십시오. &lt;code&gt;index.php/pages/view/about&lt;/code&gt; 를 방문 하면 머리글과 바닥 글을 포함하여 about 페이지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="8e1e124cf7a10c48d3cd6c4cc7958cd8ad07ecd7" translate="yes" xml:space="preserve">
          <source>The cookie value or NULL if not found</source>
          <target state="translated">쿠키 값 또는 찾지 못한 경우 NULL</target>
        </trans-unit>
        <trans-unit id="dd2b915256fbfd0b7a1f9cd4e68bc6d1c89a5628" translate="yes" xml:space="preserve">
          <source>The core element of the modules functionality comes from the &lt;a href=&quot;../concepts/autoloader&quot;&gt;PSR4-compatible autoloading&lt;/a&gt; that CodeIgniter uses. While any code can use the PSR4 autoloader and namespaces, the primary way to take full advantage of modules is to namespace your code and add it to &lt;strong&gt;app/Config/Autoload.php&lt;/strong&gt;, in the &lt;code&gt;psr4&lt;/code&gt; section.</source>
          <target state="translated">모듈 기능의 핵심 요소는 CodeIgniter가 사용 하는 &lt;a href=&quot;../concepts/autoloader&quot;&gt;PSR4 호환 자동 로딩&lt;/a&gt; 에서 비롯됩니다 . 모든 코드에서 PSR4 자동 로더 및 네임 스페이스를 사용할 수 있지만 모듈을 최대한 활용하는 기본 방법은 코드 네임 스페이스 를 지정하고 &lt;code&gt;psr4&lt;/code&gt; 섹션의 &lt;strong&gt;app / Config / Autoload.php에&lt;/strong&gt; 추가하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="d855c0682a87b7e7a31d0c4c76511dfdcef1e34d" translate="yes" xml:space="preserve">
          <source>The cropping method works nearly identically to the resizing function except it requires that you set preferences for the X and Y axis (in pixels) specifying where to crop, like this:</source>
          <target state="translated">자르기 방법은 다음과 같이 자르기 위치를 지정하는 X 및 Y 축에 대한 기본 설정 (픽셀)을 설정해야한다는 점을 제외하고는 크기 조정 기능과 거의 동일하게 작동합니다.</target>
        </trans-unit>
        <trans-unit id="b379a7e73590ead6818a4e9c69bdcf12daf56069" translate="yes" xml:space="preserve">
          <source>The current HTTP protocol version</source>
          <target state="translated">현재 HTTP 프로토콜 버전</target>
        </trans-unit>
        <trans-unit id="012f68e00c7ddc776d9534b59305bc8808dc1d30" translate="yes" xml:space="preserve">
          <source>The current HTTP status code for this response</source>
          <target state="translated">이 응답에 대한 현재 HTTP 상태 코드</target>
        </trans-unit>
        <trans-unit id="16c557b47029b1099d7d9512219d09eb51e33387" translate="yes" xml:space="preserve">
          <source>The current Message|Response instance</source>
          <target state="translated">현재 Message | Response 인스턴스</target>
        </trans-unit>
        <trans-unit id="2bc54195d0a3d3a09d9d577d305964e5db4d5548" translate="yes" xml:space="preserve">
          <source>The current MigrationRunner instance</source>
          <target state="translated">현재 MigrationRunner 인스턴스</target>
        </trans-unit>
        <trans-unit id="b99b67b7b410e6e908aa30e4b696e12ce94f7e78" translate="yes" xml:space="preserve">
          <source>The current Response instance</source>
          <target state="translated">현재 응답 인스턴스</target>
        </trans-unit>
        <trans-unit id="c4d8ccea12238d3123db824d8aedaf6a570875de" translate="yes" xml:space="preserve">
          <source>The current URL</source>
          <target state="translated">현재 URL</target>
        </trans-unit>
        <trans-unit id="0ca51166025cdb1d814333c111d233ffbafcacf3" translate="yes" xml:space="preserve">
          <source>The current locale can always be retrieved from the IncomingRequest object, through the &lt;code&gt;getLocale()&lt;/code&gt; method. If your controller is extending &lt;code&gt;CodeIgniter\Controller&lt;/code&gt;, this will be available through &lt;code&gt;$this-&amp;gt;request&lt;/code&gt;:</source>
          <target state="translated">현재 로케일은 &lt;code&gt;getLocale()&lt;/code&gt; 메소드를 통해 항상 IncomingRequest 객체에서 검색 할 수 있습니다 . 컨트롤러가 &lt;code&gt;CodeIgniter\Controller&lt;/code&gt; 확장하는 경우 &lt;code&gt;$this-&amp;gt;request&lt;/code&gt; 통해 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6d23fb2ffe6ccb4331c9329c3a33433a5c7c183a" translate="yes" xml:space="preserve">
          <source>The current message body</source>
          <target state="translated">현재 메시지 본문</target>
        </trans-unit>
        <trans-unit id="5e7ed544f83e9cfe4e9d9859b70db205789e2de4" translate="yes" xml:space="preserve">
          <source>The current message instance</source>
          <target state="translated">현재 메시지 인스턴스</target>
        </trans-unit>
        <trans-unit id="1bb56cc9eb648bed439f7c8f858142418bbd991c" translate="yes" xml:space="preserve">
          <source>The current reason phrase.</source>
          <target state="translated">현재 이유 문구.</target>
        </trans-unit>
        <trans-unit id="bff1305c1ddef4edac6d774e0f2e90fbcdc8ce5b" translate="yes" xml:space="preserve">
          <source>The current response instance.</source>
          <target state="translated">현재 응답 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="cb93049b3ccea9bba6c44a52054c4c9db2e512e3" translate="yes" xml:space="preserve">
          <source>The current value of the CSRF hash.</source>
          <target state="translated">CSRF 해시의 현재 값입니다.</target>
        </trans-unit>
        <trans-unit id="cb6c7c19deb5a5ed0efdf786ad0b600d8eddf0d9" translate="yes" xml:space="preserve">
          <source>The current version your database should use.</source>
          <target state="translated">데이터베이스에서 사용해야하는 현재 버전입니다.</target>
        </trans-unit>
        <trans-unit id="5ff67a125bb9a51115be576423804ee646779f96" translate="yes" xml:space="preserve">
          <source>The data array you pass to your view files is not limited to simple variables. You can pass multi dimensional arrays, which can be looped to generate multiple rows. For example, if you pull data from your database it will typically be in the form of a multi-dimensional array.</source>
          <target state="translated">뷰 파일에 전달하는 데이터 배열은 단순한 변수로 제한되지 않습니다. 다차원 배열을 전달할 수 있으며, 여러 행을 생성하기 위해 반복 될 수 있습니다. 예를 들어, 데이터베이스에서 데이터를 가져 오면 일반적으로 다차원 배열 형태가됩니다.</target>
        </trans-unit>
        <trans-unit id="4834140daa5a1b6c5bb399f1309af281d2a1382c" translate="yes" xml:space="preserve">
          <source>The data passed in is only available during one call to &lt;code&gt;view&lt;/code&gt;. If you call the function multiple times in a single request, you will have to pass the desired data to each view. This keeps any data from &amp;ldquo;bleeding&amp;rdquo; into other views, potentially causing issues. If you would prefer the data to persist, you can pass the &lt;code&gt;saveData&lt;/code&gt; option into the &lt;code&gt;$option&lt;/code&gt; array in the third parameter.</source>
          <target state="translated">전달 된 데이터는 &lt;code&gt;view&lt;/code&gt; 위해 한 번 호출하는 동안에 만 사용할 수 있습니다 . 단일 요청에서 함수를 여러 번 호출하는 경우 원하는 데이터를 각보기에 전달해야합니다. 이렇게하면 데이터가 다른 뷰로 &quot;블리딩&quot;되어 잠재적으로 문제를 일으킬 수 있습니다. 데이터를 유지 하려면 세 번째 매개 변수 의 &lt;code&gt;$option&lt;/code&gt; 배열에 &lt;code&gt;saveData&lt;/code&gt; 옵션을 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ef5537f55aa4d285ee7ca0721073a75bf281b155" translate="yes" xml:space="preserve">
          <source>The database connection and the database Forge class are both available to you through &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; and &lt;code&gt;$this-&amp;gt;forge&lt;/code&gt;, respectively.</source>
          <target state="translated">데이터베이스 연결 및 데이터베이스 Forge 클래스는 각각 &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; 및 &lt;code&gt;$this-&amp;gt;forge&lt;/code&gt; 를 통해 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a3f6051fd9cfe1f0bd63ddab7ef6161f98e89874" translate="yes" xml:space="preserve">
          <source>The database connection values, passed either as an array or a DSN string.</source>
          <target state="translated">데이터베이스 연결 값으로, 배열 또는 DSN 문자열로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="26381073095e1c8797de644632063fe772dfbed6" translate="yes" xml:space="preserve">
          <source>The database group name, a string that must match the config class&amp;rsquo; property name. Default value is $config-&amp;gt;defaultGroup.</source>
          <target state="translated">구성 클래스의 속성 이름과 일치해야하는 문자열 인 데이터베이스 그룹 이름입니다. 기본값은 $ config-&amp;gt; defaultGroup입니다.</target>
        </trans-unit>
        <trans-unit id="7e4fedc6efabba5047fc8547169959db18a62967" translate="yes" xml:space="preserve">
          <source>The database port number. To use this value you have to add a line to the database config array.</source>
          <target state="translated">데이터베이스 포트 번호 이 값을 사용하려면 데이터베이스 구성 배열에 행을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="066e83cf0a791a7ba0b0c53bdf6c609199909c6f" translate="yes" xml:space="preserve">
          <source>The database schema, defaults to &amp;lsquo;public&amp;rsquo;. Used by PostgreSQL and ODBC drivers.</source>
          <target state="translated">데이터베이스 스키마는 기본적으로 'public'입니다. PostgreSQL 및 ODBC 드라이버에서 사용합니다.</target>
        </trans-unit>
        <trans-unit id="93af6a1c92aae8aeae6639ff6b34a69e8791cfcd" translate="yes" xml:space="preserve">
          <source>The database table &lt;strong&gt;migration&lt;/strong&gt; tracks which migrations have already been run so all you have to do is make sure your migrations are in place and call &lt;code&gt;$migration-&amp;gt;latest()&lt;/code&gt; to bring the database up to the most recent state. You can also use &lt;code&gt;$migration-&amp;gt;setNamespace(null)-&amp;gt;latest()&lt;/code&gt; to include migrations from all namespaces.</source>
          <target state="translated">데이터베이스 테이블 &lt;strong&gt;마이그레이션&lt;/strong&gt; 은 이미 실행 된 마이그레이션을 추적하므로 마이그레이션이 제자리에 있는지 확인하고 &lt;code&gt;$migration-&amp;gt;latest()&lt;/code&gt; 를 호출 하여 데이터베이스를 최신 상태로 가져 오면됩니다. &lt;code&gt;$migration-&amp;gt;setNamespace(null)-&amp;gt;latest()&lt;/code&gt; 를 사용하여 모든 네임 스페이스의 마이그레이션을 포함 할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e5bd0468e6fe37a5e5ed129dd5d153fde80c5e58" translate="yes" xml:space="preserve">
          <source>The database table &lt;strong&gt;migration&lt;/strong&gt; tracks which migrations have already been run so all you have to do is update your application files and call &lt;code&gt;$this-&amp;gt;migration-&amp;gt;current()&lt;/code&gt; to work out which migrations should be run. The current version is found in &lt;strong&gt;application/config/migration.php&lt;/strong&gt;.</source>
          <target state="translated">데이터베이스 테이블 &lt;strong&gt;마이그레이션&lt;/strong&gt; 은 이미 실행 된 마이그레이션을 추적하므로 애플리케이션 파일을 업데이트하고 &lt;code&gt;$this-&amp;gt;migration-&amp;gt;current()&lt;/code&gt; 를 호출 하여 마이그레이션을 실행해야합니다. 현재 버전은 &lt;strong&gt;application / config / migration.php에&lt;/strong&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="26c7034beae68dacbb8bcb55f6f826e6ff5c7192" translate="yes" xml:space="preserve">
          <source>The database type. eg: MySQLi, Postgre, etc. The case must match the driver name</source>
          <target state="translated">데이터베이스 유형. 예 : MySQLi, Postgre 등. 대소 문자는 드라이버 이름과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="c1980c8c79360697449e3bb8317ac1df04e65d44" translate="yes" xml:space="preserve">
          <source>The database type. ie: mysqli, postgre, odbc, etc. Must be specified in lower case.</source>
          <target state="translated">데이터베이스 유형 예 : mysqli, postgre, odbc 등. 소문자로 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="23edf906515a426c2bc46367ad05dc9072904b45" translate="yes" xml:space="preserve">
          <source>The default configuration has daily log files stored in &lt;code&gt;writable/logs&lt;/code&gt;. It would be a good idea to check them if things aren&amp;rsquo;t working the way you expect!</source>
          <target state="translated">기본 구성에는 &lt;code&gt;writable/logs&lt;/code&gt; 에 저장된 일일 로그 파일이 있습니다 . 예상대로 작동하지 않는지 확인하는 것이 좋습니다!</target>
        </trans-unit>
        <trans-unit id="70302738cbadb8e137a802ae74bfc153e9272c6f" translate="yes" xml:space="preserve">
          <source>The default controller is also used when no matching route has been found, and the URI would point to a directory in the controllers directory. For example, if the user visits &lt;code&gt;example.com/admin&lt;/code&gt;, if a controller was found at &lt;code&gt;/app/Controllers/admin/Home.php&lt;/code&gt; it would be used.</source>
          <target state="translated">기본 컨트롤러는 일치하는 경로가없는 경우에도 사용되며 URI는 컨트롤러 디렉터리의 디렉터리를 가리 킵니다. 예를 들어, 사용자가 &lt;code&gt;example.com/admin&lt;/code&gt; 을 방문 하면 컨트롤러가 &lt;code&gt;/app/Controllers/admin/Home.php&lt;/code&gt; 에서 발견 되면 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0168e95b60fc419689bd44100d2efba7648a5086" translate="yes" xml:space="preserve">
          <source>The default location of the SQLite3 database is in the &lt;code&gt;writable&lt;/code&gt; folder. If you want to change the location, you must set the full path to the new folder.</source>
          <target state="translated">SQLite3 데이터베이스의 기본 위치는 &lt;code&gt;writable&lt;/code&gt; 폴더에 있습니다. 위치를 변경하려면 새 폴더의 전체 경로를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="11eada1d04512e757ac55ad2b2339d7e7aaa5e99" translate="yes" xml:space="preserve">
          <source>The default mode is &amp;lsquo;wb&amp;rsquo;. Please see the &lt;a href=&quot;http://php.net/manual/en/function.fopen.php&quot;&gt;PHP user guide&lt;/a&gt; for mode options.</source>
          <target state="translated">기본 모드는 'wb'입니다. 모드 옵션에 대해서는 &lt;a href=&quot;http://php.net/manual/en/function.fopen.php&quot;&gt;PHP 사용 설명서&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a16f5593155b9dcbb90d9dd7784ec22c67190628" translate="yes" xml:space="preserve">
          <source>The default mode is &amp;lsquo;wb&amp;rsquo;. Please see the &lt;a href=&quot;https://www.php.net/manual/en/function.fopen.php&quot;&gt;PHP user guide&lt;/a&gt; for mode options.</source>
          <target state="translated">기본 모드는 'wb'입니다. 모드 옵션 은 &lt;a href=&quot;https://www.php.net/manual/en/function.fopen.php&quot;&gt;PHP 사용자 가이드&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a992ef10706da873eed57ed0e94fb8da71b4a7ec" translate="yes" xml:space="preserve">
          <source>The desired character set is passed through the &lt;code&gt;Accept-Charset&lt;/code&gt; header:</source>
          <target state="translated">원하는 문자 집합이 &lt;code&gt;Accept-Charset&lt;/code&gt; 헤더를 통해 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="1285635d292acb8ce2ce187f735646c11886c744" translate="yes" xml:space="preserve">
          <source>The desired style may be selected using the &lt;code&gt;$config['migration_type']&lt;/code&gt; setting in your &lt;em&gt;application/config/migration.php&lt;/em&gt; file.</source>
          <target state="translated">원하는 스타일은 &lt;em&gt;application / config / migration.php&lt;/em&gt; 파일 의 &lt;code&gt;$config['migration_type']&lt;/code&gt; 설정을 사용하여 선택할 수 있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="37bee7ad2660fc3d49046e5b35ea5d6d9daa8d22" translate="yes" xml:space="preserve">
          <source>The devstarter repo has been deprecated.</source>
          <target state="translated">devstarter 저장소는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="361758b2d1130045bc35e68480fb28f51ae6a478" translate="yes" xml:space="preserve">
          <source>The distance (in pixels) from the font that the drop shadow should appear.</source>
          <target state="translated">그림자가 표시 될 글꼴과의 거리 (픽셀)입니다.</target>
        </trans-unit>
        <trans-unit id="69734bfc130a401ca95e9355bd3928b62ceb7900" translate="yes" xml:space="preserve">
          <source>The domain for which the session is applicable</source>
          <target state="translated">세션이 적용되는 도메인</target>
        </trans-unit>
        <trans-unit id="fbc8373c88683a4b45cc6a8732f0919d2ccb7cbf" translate="yes" xml:space="preserve">
          <source>The downside is that it is not as ubiquitous as relational databases and requires the &lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;phpredis&lt;/a&gt; PHP extension to be installed on your system, and that one doesn&amp;rsquo;t come bundled with PHP. Chances are, you&amp;rsquo;re only be using the &amp;lsquo;redis&amp;rsquo; driver only if you&amp;rsquo;re already both familiar with Redis and using it for other purposes.</source>
          <target state="translated">단점은 관계형 데이터베이스만큼 편재 하지 않으며 시스템에 &lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;phpredis&lt;/a&gt; PHP 확장을 설치해야하며 PHP와 함께 제공되지 않는다는 것입니다. 이미 Redis에 익숙하고 다른 목적으로 사용하는 경우에만 'redis'드라이버를 사용하고있을 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="147539b37427246ab4d6c3ddc48c3430247b7935" translate="yes" xml:space="preserve">
          <source>The downside is that it is not as ubiquitous as relational databases and requires the &lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;phpredis&lt;/a&gt; PHP extension to be installed on your system, and that one doesn&amp;rsquo;t come bundled with PHP. Chances are, you&amp;rsquo;re only be using the RedisHandler driver only if you&amp;rsquo;re already both familiar with Redis and using it for other purposes.</source>
          <target state="translated">단점은 관계형 데이터베이스만큼 유비쿼터스가 아니며 시스템에 &lt;a href=&quot;https://github.com/phpredis/phpredis&quot;&gt;phpredis&lt;/a&gt; PHP 확장을 설치해야하며 PHP와 함께 제공되지 않는다는 것입니다. 이미 Redis에 익숙하고 다른 용도로 사용하는 경우에만 RedisHandler 드라이버를 사용하고있을 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="42058a915f8321c9dbde6beed01039926dc94bd0" translate="yes" xml:space="preserve">
          <source>The e-mail sending method. Returns boolean TRUE or FALSE based on success or failure, enabling it to be used conditionally:</source>
          <target state="translated">이메일 전송 방법. 성공 또는 실패에 따라 부울 TRUE 또는 FALSE를 반환하여 조건부로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e36d2caacdd06a3a131fbd6af111bb3aa46944d8" translate="yes" xml:space="preserve">
          <source>The email field must contain a valid email address.</source>
          <target state="translated">이메일 필드는 유효한 이메일 주소를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="392d32c2207f418527757ea463cc4f1f8c04e5d2" translate="yes" xml:space="preserve">
          <source>The encryption key. This it typically specified in your config file as outlined above.</source>
          <target state="translated">암호화 키. 이것은 일반적으로 위에서 설명한대로 구성 파일에 지정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0e773d9e355d3598ff78275495bbd52b73f5eae1" translate="yes" xml:space="preserve">
          <source>The entire tutorial is split up over several pages, each explaining a small part of the functionality of the CodeIgniter framework. You&amp;rsquo;ll go through the following pages:</source>
          <target state="translated">전체 자습서는 여러 페이지로 나누어 져 있으며 각 페이지는 CodeIgniter 프레임 워크의 기능 중 일부를 설명합니다. 다음 페이지를 살펴 봅니다.</target>
        </trans-unit>
        <trans-unit id="548c7e210cac784fc2745c447ca8cc9e7a7b38ad" translate="yes" xml:space="preserve">
          <source>The entry ID number is expected in the third segment of your URL. This is based on the URI example we gave earlier:</source>
          <target state="translated">URL의 세 번째 세그먼트에 항목 ID 번호가 필요합니다. 이것은 우리가 앞서 준 URI 예제를 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="70086720ed68745caa5c8a49f8326921a495221a" translate="yes" xml:space="preserve">
          <source>The environment variable, the default value, or null.</source>
          <target state="translated">환경 변수, 기본값 또는 null입니다.</target>
        </trans-unit>
        <trans-unit id="8956ec7509c1b6f6569c46c0caf5169af14b9c79" translate="yes" xml:space="preserve">
          <source>The escaped data.</source>
          <target state="translated">이스케이프 된 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="bd35515b3c5c5828d253a60bec8306d8d1178cdf" translate="yes" xml:space="preserve">
          <source>The escaped string(s)</source>
          <target state="translated">이스케이프 된 문자열</target>
        </trans-unit>
        <trans-unit id="71df2c43a17f793987293dad3bdbf5e6e4f9e1f9" translate="yes" xml:space="preserve">
          <source>The escaped value(s)</source>
          <target state="translated">이스케이프 된 값</target>
        </trans-unit>
        <trans-unit id="5659b4756e016acb557e9c43f0d81f429b6813b5" translate="yes" xml:space="preserve">
          <source>The exact language used is controlled through the language file, Time.php.</source>
          <target state="translated">사용되는 정확한 언어는 언어 파일 인 Time.php를 통해 제어됩니다.</target>
        </trans-unit>
        <trans-unit id="995281d1abc172fe8eaa06738ebca1cd35700d58" translate="yes" xml:space="preserve">
          <source>The exact time displayed is determined in the following manner:</source>
          <target state="translated">표시되는 정확한 시간은 다음과 같은 방식으로 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="8df7619e97898fb1f052906b2532d93dec3b03c3" translate="yes" xml:space="preserve">
          <source>The example above uses the configuration settings found in &lt;code&gt;app/Config/Encryption.php&lt;/code&gt;.</source>
          <target state="translated">위의 예는 &lt;code&gt;app/Config/Encryption.php&lt;/code&gt; 에있는 구성 설정을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="a767eb0ee7bc500b75f2547c6b7bc2d94b9bedee" translate="yes" xml:space="preserve">
          <source>The expected result you supply can either be a literal match, or a data type match. Here&amp;rsquo;s an example of a literal:</source>
          <target state="translated">제공 한 예상 결과는 리터럴 일치이거나 데이터 형식 일치 일 수 있습니다. 다음은 리터럴의 예입니다.</target>
        </trans-unit>
        <trans-unit id="41a6a3c733d964074ea3c68e0b301a67a0c8232c" translate="yes" xml:space="preserve">
          <source>The expiration is set in &lt;strong&gt;seconds&lt;/strong&gt;, which will be added to the current time. Do not include the time, but rather only the number of seconds from &lt;em&gt;now&lt;/em&gt; that you wish the cookie to be valid. If the expiration is set to zero the cookie will only last as long as the browser is open.</source>
          <target state="translated">만료는 &lt;strong&gt;초 단위&lt;/strong&gt; 로 설정되며 현재 시간에 추가됩니다. 쿠키를 유효하게 하려면 시간을 포함하지 말고 &lt;em&gt;지금&lt;/em&gt; 까지의 시간 (초) 만 포함하십시오 . 만료가 0으로 설정되면 쿠키는 브라우저가 열려있는 동안 만 지속됩니다.</target>
        </trans-unit>
        <trans-unit id="82292913a395e7d2c4e663fc00c674001367b3c5" translate="yes" xml:space="preserve">
          <source>The extend method takes the name of any view file that you wish to use. Since they are standard views, they will be located just like a view. By default, it will look in the application&amp;rsquo;s View directory, but will also scan other PSR-4 defined namespaces. You can include a namespace to locate the view in particular namespace View directory:</source>
          <target state="translated">extend 메소드는 사용하려는보기 파일의 이름을 사용합니다. 표준보기이므로보기처럼 배치됩니다. 기본적으로 응용 프로그램의 View 디렉터리를 검색하지만 다른 PSR-4 정의 네임 스페이스도 검색합니다. 특정 네임 스페이스 View 디렉터리에서보기를 찾기 위해 네임 스페이스를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="99bd55a9e53d90daf135ce7aa2de9d92324c8208" translate="yes" xml:space="preserve">
          <source>The field is required when all of the other fields are present in the data but not required.</source>
          <target state="translated">이 필드는 다른 모든 필드가 데이터에 있지만 필수는 아닐 때 필요합니다.</target>
        </trans-unit>
        <trans-unit id="04baf836605d26e38e5ccf771c7057d37bf6188e" translate="yes" xml:space="preserve">
          <source>The field is required when any of the other required fields are present in the data.</source>
          <target state="translated">이 필드는 다른 필수 필드가 데이터에있을 때 필요합니다.</target>
        </trans-unit>
        <trans-unit id="d5a074f1b41e497bc65a95b6a895ce196a77ff7c" translate="yes" xml:space="preserve">
          <source>The field name - the exact name you&amp;rsquo;ve given the form field.</source>
          <target state="translated">필드 이름-양식 필드에 지정한 정확한 이름입니다.</target>
        </trans-unit>
        <trans-unit id="123c2568d9bdd3dcef5df0cc4eec7098303eda1e" translate="yes" xml:space="preserve">
          <source>The file could not be written on disk.</source>
          <target state="translated">파일을 디스크에 쓸 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e85334cf486987531c0ebd2398d191d876d88b1c" translate="yes" xml:space="preserve">
          <source>The file exceeds the upload limit defined in your form.</source>
          <target state="translated">파일이 양식에 정의 된 업로드 제한을 초과합니다.</target>
        </trans-unit>
        <trans-unit id="ded1fa73a71dc837304697a00695755f82110ca2" translate="yes" xml:space="preserve">
          <source>The file exceeds your upload_max_filesize ini directive.</source>
          <target state="translated">파일이 upload_max_filesize ini 지시문을 초과합니다.</target>
        </trans-unit>
        <trans-unit id="30950b42266fa34c536debcd9da45e11db7e9eab" translate="yes" xml:space="preserve">
          <source>The file format of the export file.</source>
          <target state="translated">내보내기 파일의 파일 형식입니다.</target>
        </trans-unit>
        <trans-unit id="fd414cd1e34167b6d06dfb539e2a3be3d6b7b748" translate="yes" xml:space="preserve">
          <source>The file must be called &amp;lsquo;Blog.php&amp;rsquo;, with a capital &amp;lsquo;B&amp;rsquo;.</source>
          <target state="translated">파일은 대문자 'B'와 함께 'Blog.php'라고해야합니다.</target>
        </trans-unit>
        <trans-unit id="2113d312f1b80ae6d77ad68edb117b0b90de41da" translate="yes" xml:space="preserve">
          <source>The file must be called &amp;lsquo;Helloworld.php&amp;rsquo;, with a capital &amp;lsquo;H&amp;rsquo;.</source>
          <target state="translated">파일 이름은 'Helloworld.php'이고 대문자는 'H'여야합니다.</target>
        </trans-unit>
        <trans-unit id="64bea981141c2981c4af7ad1c0d531721f01b2fd" translate="yes" xml:space="preserve">
          <source>The file name must match the class name. For example, if this is your class:</source>
          <target state="translated">파일 이름은 클래스 이름과 일치해야합니다. 예를 들어, 이것이 클래스 인 경우 :</target>
        </trans-unit>
        <trans-unit id="1f4519c4668f7e3682a79958b1baac1fa78c9ab2" translate="yes" xml:space="preserve">
          <source>The file should not contain every possible setting for every configuration class used by the application. In truth, it should include only those items that are specific to the environment or are sensitive details like passwords and API keys and other information that should not be exposed. But anything that changes between deployments is fair-game.</source>
          <target state="translated">파일에는 응용 프로그램에서 사용하는 모든 구성 클래스에 대해 가능한 모든 설정이 포함되어서는 안됩니다. 사실, 환경에 특정한 항목이나 비밀번호, API 키와 같은 민감한 세부 사항과 노출해서는 안되는 기타 정보 만 포함해야합니다. 그러나 배포간에 변경되는 것은 공정한 게임입니다.</target>
        </trans-unit>
        <trans-unit id="b33b7b74f535fc21a1084239dc3388c463c71b27" translate="yes" xml:space="preserve">
          <source>The file validation rules apply for both single and multiple file uploads.</source>
          <target state="translated">파일 유효성 검사 규칙은 단일 및 다중 파일 업로드 모두에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="88a179318d6a7b57fb917ebf09f9b8586d1cbb5a" translate="yes" xml:space="preserve">
          <source>The file was only partially uploaded.</source>
          <target state="translated">파일이 부분적으로 만 업로드되었습니다.</target>
        </trans-unit>
        <trans-unit id="1afab90219f2e3297cb682c1fc0f61900f1ef32a" translate="yes" xml:space="preserve">
          <source>The filename prefix for &amp;ldquo;extending&amp;rdquo; Helpers is the same used to extend libraries and core classes. To set your own prefix, open your &lt;strong&gt;application/config/config.php&lt;/strong&gt; file and look for this item:</source>
          <target state="translated">&quot;확장&quot;헬퍼의 파일 이름 접두어는 라이브러리 및 핵심 클래스를 확장하는 데 사용됩니다. 고유 한 접두사를 설정하려면 &lt;strong&gt;application / config / config.php&lt;/strong&gt; 파일을 &lt;strong&gt;열고이&lt;/strong&gt; 항목을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="041c524261411e21ed77cd6441777fc0992e402b" translate="yes" xml:space="preserve">
          <source>The files must be writable or owned by the system in order to be deleted.</source>
          <target state="translated">파일을 삭제하려면 시스템에서 파일을 쓸 수 있거나 소유해야합니다.</target>
        </trans-unit>
        <trans-unit id="ce76e83c035c893df3740aa759f39235931b382c" translate="yes" xml:space="preserve">
          <source>The final property, &lt;code&gt;$description&lt;/code&gt; is a short string that is displayed in the &lt;strong&gt;list&lt;/strong&gt; command and should describe what the command does.</source>
          <target state="translated">마지막 속성 인 &lt;code&gt;$description&lt;/code&gt; 은 &lt;strong&gt;list&lt;/strong&gt; 명령에 표시되는 짧은 문자열이며 명령이 수행하는 작업을 설명해야합니다.</target>
        </trans-unit>
        <trans-unit id="cfe70b053b4988ed1556d7fdd3291be371378d0b" translate="yes" xml:space="preserve">
          <source>The finalized View is rendered then sent to the web browser to be seen. If caching is enabled, the view is cached first so that on subsequent requests it can be served.</source>
          <target state="translated">최종 뷰는 렌더링 된 후 웹 브라우저로 전송되어 표시됩니다. 캐싱이 사용 가능한 경우, 후속 요청에서 제공 될 수 있도록보기가 먼저 캐시됩니다.</target>
        </trans-unit>
        <trans-unit id="44d5e4df2666db41b867f02bfe3fcb25d4aa962f" translate="yes" xml:space="preserve">
          <source>The first and second parameters enable you to set a limit and offset clause:</source>
          <target state="translated">첫 번째 및 두 번째 매개 변수를 사용하여 제한 및 오프셋 절을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2ba397700c914caf10a767db91eb0504a8876f2" translate="yes" xml:space="preserve">
          <source>The first aspect to look at is handling &amp;lsquo;media&amp;rsquo; negotiations. These are provided by the &lt;code&gt;Accept&lt;/code&gt; header and is one of the most complex headers available. A common example is the client telling the server what format it wants the data in. This is especially common in API&amp;rsquo;s. For example, a client might request JSON formatted data from an API endpoint:</source>
          <target state="translated">먼저 살펴 봐야 할 부분은 '미디어'협상을 다루는 것입니다. 이들은 &lt;code&gt;Accept&lt;/code&gt; 헤더에 의해 제공되며 사용 가능한 가장 복잡한 헤더 중 하나입니다. 일반적인 예는 클라이언트가 데이터를 원하는 형식을 서버에 알리는 것입니다. 이것은 특히 API에서 일반적입니다. 예를 들어 클라이언트는 API 엔드 포인트에서 JSON 형식 데이터를 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55ab73ada96b75189e6fe25204dae08981709ddb" translate="yes" xml:space="preserve">
          <source>The first four array indexes above (id, qty, price, and name) are &lt;strong&gt;required&lt;/strong&gt;. If you omit any of them the data will not be saved to the cart. The fifth index (options) is optional. It is intended to be used in cases where your product has options associated with it. Use an array for options, as shown above.</source>
          <target state="translated">위의 처음 네 개의 배열 인덱스 (id, qty, price 및 name)가 &lt;strong&gt;필요합니다&lt;/strong&gt; . 이 중 하나를 생략하면 데이터가 카트에 저장되지 않습니다. 다섯 번째 색인 (옵션)은 선택 사항입니다. 제품에 관련 옵션이있는 경우에 사용됩니다. 위와 같이 옵션에 배열을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="26436ba231ac663cf040d33efa570ad7cfa7766d" translate="yes" xml:space="preserve">
          <source>The first function is provided by the &lt;a href=&quot;../helpers/form_helper&quot;&gt;form helper&lt;/a&gt; and renders the form element and adds extra functionality, like adding a hidden &lt;a href=&quot;../libraries/security&quot;&gt;CSRF prevention field&lt;/a&gt;. The latter is used to report errors related to form validation.</source>
          <target state="translated">첫 번째 기능은 &lt;a href=&quot;../helpers/form_helper&quot;&gt;양식 헬퍼에서&lt;/a&gt; 제공 하며 양식 요소를 렌더링하고 숨겨진 &lt;a href=&quot;../libraries/security&quot;&gt;CSRF 방지 필드&lt;/a&gt; 추가와 같은 추가 기능을 추가 합니다 . 후자는 양식 유효성 검증과 관련된 오류를보고하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="38f1dc3d9df51402a3728d6ae87e13de9486f5cc" translate="yes" xml:space="preserve">
          <source>The first is &lt;code&gt;service()&lt;/code&gt; which returns a new instance of the requested service. The only required parameter is the service name. This is the same as the method name within the Services file always returns a SHARED instance of the class, so calling the function multiple times should always return the same instance:</source>
          <target state="translated">첫 번째는 요청 된 서비스의 새 인스턴스를 반환하는 &lt;code&gt;service()&lt;/code&gt; 입니다. 유일한 필수 매개 변수는 서비스 이름입니다. 이는 Services 파일 내의 메서드 이름이 항상 클래스의 SHARED 인스턴스를 반환하는 것과 동일하므로 함수를 여러 번 호출하면 항상 동일한 인스턴스가 반환되어야합니다.</target>
        </trans-unit>
        <trans-unit id="f40a405b3d56e35d5f0a1b22cf8dcf7ce8579473" translate="yes" xml:space="preserve">
          <source>The first item in the placeholder corresponds to the index of the item in the array, if it&amp;rsquo;s numerical:</source>
          <target state="translated">자리 표시 자의 첫 번째 항목은 숫자 인 경우 배열에있는 항목의 인덱스에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="7c4179980494b1a2983eb2fd0f71733821c23e58" translate="yes" xml:space="preserve">
          <source>The first line in this method checks whether the page actually exists. PHP&amp;rsquo;s native &lt;code&gt;file_exists()&lt;/code&gt; function is used to check whether the file is where it&amp;rsquo;s expected to be. &lt;code&gt;show_404()&lt;/code&gt; is a built-in CodeIgniter function that renders the default error page.</source>
          <target state="translated">이 방법의 첫 번째 줄은 페이지가 실제로 존재하는지 확인합니다. PHP의 고유 한 &lt;code&gt;file_exists()&lt;/code&gt; 함수는 파일이 원하는 위치에 있는지 확인하는 데 사용됩니다. &lt;code&gt;show_404()&lt;/code&gt; 는 기본 오류 페이지를 렌더링하는 내장 CodeIgniter 함수입니다.</target>
        </trans-unit>
        <trans-unit id="0c10ed1e1dc566c09fd77f3a97eae6e05adc5368" translate="yes" xml:space="preserve">
          <source>The first line in this method checks whether the page actually exists. PHP&amp;rsquo;s native &lt;code&gt;is_file()&lt;/code&gt; function is used to check whether the file is where it&amp;rsquo;s expected to be. The &lt;code&gt;PageNotFoundException&lt;/code&gt; is a CodeIgniter exception that causes the default error page to show.</source>
          <target state="translated">이 메서드의 첫 번째 줄은 페이지가 실제로 존재하는지 확인합니다. PHP의 기본 &lt;code&gt;is_file()&lt;/code&gt; 함수는 파일이 예상되는 위치에 있는지 확인하는 데 사용됩니다. &lt;code&gt;PageNotFoundException&lt;/code&gt; 는 기본 오류 페이지를 표시하도록하는 CodeIgniter는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="15abe5276d2aa42e9e2c59dce197591afa3bfd17" translate="yes" xml:space="preserve">
          <source>The first paramenter is the text to extract an excerpt from, the second is the central word or phrase to count before and after. The third parameter is the number of characters to count before and after the central phrase. If no phrase passed, the excerpt will include the first $radius characters with the elipsis at the end.</source>
          <target state="translated">첫 번째 매개 변수는 발췌문을 추출 할 텍스트이고 두 번째 매개 변수는 앞뒤로 계산할 중심 단어 또는 구문입니다. 세 번째 매개 변수는 중앙 문구 앞뒤에 계산할 문자 수입니다. 전달 된 구문이 없으면 발췌 부분에는 끝에 생략 부호가있는 첫 $ radius 문자가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="e710955db1bc69367ddf17af637e8c0371be5a8f" translate="yes" xml:space="preserve">
          <source>The first parameter can contain any segments you wish appended to the URL. As with the &lt;a href=&quot;#site_url&quot;&gt;&lt;code&gt;site_url()&lt;/code&gt;&lt;/a&gt; function above, segments can be a string or an array.</source>
          <target state="translated">첫 번째 매개 변수는 URL에 추가 할 세그먼트를 포함 할 수 있습니다. 위의 &lt;a href=&quot;#site_url&quot;&gt; &lt;code&gt;site_url()&lt;/code&gt; &lt;/a&gt; 함수 와 마찬가지로 세그먼트는 문자열 또는 배열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62d6d89fb07b5653b1df041861150aa7bea31948" translate="yes" xml:space="preserve">
          <source>The first parameter contains the name of the &lt;a href=&quot;../general/views&quot;&gt;view file&lt;/a&gt; (in this example the file would be called blog_template.php), and the second parameter contains an associative array of data to be replaced in the template. In the above example, the template would contain two variables: {blog_title} and {blog_heading}</source>
          <target state="translated">첫 번째 매개 변수는 &lt;a href=&quot;../general/views&quot;&gt;보기 파일&lt;/a&gt; 의 이름 (이 예제에서는 blog_template.php라고 함)을 포함하고 두 번째 매개 변수는 템플리트에서 대체 할 연관 데이터 배열을 포함합니다. 위 예에서 템플릿에는 {blog_title} 및 {blog_heading}의 두 변수가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="5d892b3c33b8d6bf3949d1ae5996880723e90f42" translate="yes" xml:space="preserve">
          <source>The first parameter contains the name of the column you would like to order by.</source>
          <target state="translated">첫 번째 매개 변수에는 주문하려는 열 이름이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="cabd415c9922743f8d13ed6cd27d7c3c7bef0946" translate="yes" xml:space="preserve">
          <source>The first parameter enables you to set whether or not the query builder query will be reset (by default it will be reset, just like when using &lt;code&gt;$builder-&amp;gt;get()&lt;/code&gt;):</source>
          <target state="translated">첫 번째 매개 변수를 사용하면 쿼리 작성기 쿼리를 재설정할지 여부를 설정할 수 있습니다 (기본적으로 &lt;code&gt;$builder-&amp;gt;get()&lt;/code&gt; 사용할 때와 마찬가지로 재설정 됨 ).</target>
        </trans-unit>
        <trans-unit id="c898181ed33e5d491a0bb925f066421722284fd8" translate="yes" xml:space="preserve">
          <source>The first parameter is an associative array of values, the second parameter is the where key.</source>
          <target state="translated">첫 번째 매개 변수는 값의 연관 배열이고 두 번째 매개 변수는 where 키입니다.</target>
        </trans-unit>
        <trans-unit id="155f743e0b15ed980fa4072b9a759ba9d79c7fcd" translate="yes" xml:space="preserve">
          <source>The first parameter is an associative array of values.</source>
          <target state="translated">첫 번째 매개 변수는 값의 연관 배열입니다.</target>
        </trans-unit>
        <trans-unit id="a9d08eb7dce04c3e28acaa5dd60a74f6aa0d8f34" translate="yes" xml:space="preserve">
          <source>The first parameter is an object.</source>
          <target state="translated">첫 번째 매개 변수는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="91307dd7c2e3e3df6387d09e1ab034c7f3820f07" translate="yes" xml:space="preserve">
          <source>The first parameter is required. It is the name of the view file you would like to load.</source>
          <target state="translated">첫 번째 매개 변수가 필요합니다. 로드하려는 뷰 파일의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="616924b1fdfda1d7ee9af0c395f904e8d4f771f7" translate="yes" xml:space="preserve">
          <source>The first parameter is the &lt;strong&gt;name you want the downloaded file to be named&lt;/strong&gt;, the second parameter is the file data.</source>
          <target state="translated">첫 번째 매개 변수는 &lt;strong&gt;다운로드 한 파일&lt;/strong&gt; 의 &lt;strong&gt;이름을 지정&lt;/strong&gt; 하고 두 번째 매개 변수는 파일 데이터입니다.</target>
        </trans-unit>
        <trans-unit id="43f61544a4f289eec34c010b70236eb693d94bac" translate="yes" xml:space="preserve">
          <source>The first parameter is the error number while the second parameter is the error message.</source>
          <target state="translated">첫 번째 매개 변수는 오류 번호이고 두 번째 매개 변수는 오류 메시지입니다.</target>
        </trans-unit>
        <trans-unit id="0b60f95d78dc7293d55161c5ab4fd22a736a6647" translate="yes" xml:space="preserve">
          <source>The first parameter is the service that you are replacing. The name must match the function name in the Services class exactly. The second parameter is the instance to replace it with.</source>
          <target state="translated">첫 번째 매개 변수는 교체 할 서비스입니다. 이름은 Services 클래스의 함수 이름과 정확히 일치해야합니다. 두 번째 매개 변수는이를 대체 할 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="922336e4149e1e32162c31f2eb84298f25318a4b" translate="yes" xml:space="preserve">
          <source>The first parameter is the string of text that you wish to display. The second parameter is an array of options that allow you to specify how the text should be displayed:</source>
          <target state="translated">첫 번째 매개 변수는 표시하려는 텍스트 문자열입니다. 두 번째 매개 변수는 텍스트 표시 방법을 지정할 수있는 옵션 배열입니다.</target>
        </trans-unit>
        <trans-unit id="6d4cb6ba6da6e3617c84957a20b5f8d73c9500b0" translate="yes" xml:space="preserve">
          <source>The first parameter is the string to ellipsize, the second is the number of characters in the final string. The third parameter is where in the string the ellipsis should appear from 0 - 1, left to right. For example. a value of 1 will place the ellipsis at the right of the string, .5 in the middle, and 0 at the left.</source>
          <target state="translated">첫 번째 매개 변수는 생략 할 문자열이고 두 번째 매개 변수는 최종 문자열의 문자 수입니다. 세 번째 매개 변수는 문자열에서 줄임표가 왼쪽에서 오른쪽으로 0-1에서 나타나는 위치입니다. 예를 들어. 값이 1이면 줄의 오른쪽에 줄임표가 있고 가운데에 .5가 있고 왼쪽에 0이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7dad7d86cd38aac21d1116631067baa2973ef7cf" translate="yes" xml:space="preserve">
          <source>The first parameter is the table name, the second is an associative array with the data to be inserted. The above example produces:</source>
          <target state="translated">첫 번째 매개 변수는 테이블 이름이고 두 번째 매개 변수는 삽입 할 데이터가있는 연관 배열입니다. 위 예제는 다음을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7d3800d9bd13b38ea465cc39e82c119f2ddc2c64" translate="yes" xml:space="preserve">
          <source>The first parameter is the table name, the second is an associative array with the data to be updated, and the third parameter is the &amp;ldquo;where&amp;rdquo; clause. The above example produces:</source>
          <target state="translated">첫 번째 매개 변수는 테이블 이름이고 두 번째 매개 변수는 업데이트 할 데이터가 포함 된 연관 배열이며 세 번째 매개 변수는 &quot;where&quot;절입니다. 위 예제는 다음을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="c4fd3d807b2e6b4856bcf6c44ce3c054b828579e" translate="yes" xml:space="preserve">
          <source>The first parameter is the table name, the second is the where clause. You can also use the where() or or_where() functions instead of passing the data to the second parameter of the function:</source>
          <target state="translated">첫 번째 매개 변수는 테이블 이름이고 두 번째 매개 변수는 where 절입니다. 함수의 두 번째 매개 변수에 데이터를 전달하는 대신 where () 또는 or_where () 함수를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="888a5575a8f84e08400760012fb83829cdd29c25" translate="yes" xml:space="preserve">
          <source>The first parameter is the where clause. You can also use the where() or or_where() functions instead of passing the data to the first parameter of the function:</source>
          <target state="translated">첫 번째 매개 변수는 where 절입니다. 함수의 첫 번째 매개 변수에 데이터를 전달하는 대신 where () 또는 or_where () 함수를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f41f5a50c02edb607dc60f107f3fba44af345274" translate="yes" xml:space="preserve">
          <source>The first parameter lets you set an offset, which defaults to 3 since your URI will normally contain a controller/method pair in the first and second segments. Example:</source>
          <target state="translated">URI는 일반적으로 첫 번째와 두 번째 세그먼트에 컨트롤러 / 메소드 쌍을 포함하므로 첫 번째 매개 변수를 사용하면 오프셋을 설정할 수 있습니다. 기본값은 3입니다. 예:</target>
        </trans-unit>
        <trans-unit id="a2c3e781cd4c3e5a8a8e7004b60bff0b1def81e6" translate="yes" xml:space="preserve">
          <source>The first parameter lets you set the &amp;ldquo;selected&amp;rdquo; state of the menu. For example, to set Pacific time as the default you will do this:</source>
          <target state="translated">첫 번째 매개 변수를 사용하면 메뉴의 &quot;선택된&quot;상태를 설정할 수 있습니다. 예를 들어 태평양 시간을 기본값으로 설정하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="dd16868059ab6add63623445a2ecbebe3bc84917" translate="yes" xml:space="preserve">
          <source>The first parameter must contain a UNIX timestamp. The second parameter must contain a timestamp that is greater that the first timestamp. The thirdparameter is optional and limits the number of time units to display.</source>
          <target state="translated">첫 번째 매개 변수는 UNIX 타임 스탬프를 포함해야합니다. 두 번째 매개 변수는 첫 번째 타임 스탬프보다 큰 타임 스탬프를 포함해야합니다. 세 번째 매개 변수는 선택 사항이며 표시 할 시간 단위 수를 제한합니다.</target>
        </trans-unit>
        <trans-unit id="8a1d20a952ea0e0cd26b7470acf2a9b92fdf5679" translate="yes" xml:space="preserve">
          <source>The first parameter must contain the name of the checkbox, the second parameter must contain its value, and the third (optional) parameter lets you set an item as the default (use boolean TRUE/FALSE).</source>
          <target state="translated">첫 번째 매개 변수에는 확인란의 이름이 포함되어야하고 두 번째 매개 변수에는 값이 포함되어야하며 세 번째 (선택적) 매개 변수를 사용하면 항목을 기본값으로 설정할 수 있습니다 (부울 참 / 거짓 사용).</target>
        </trans-unit>
        <trans-unit id="80899e1baf5ec5f003caac7f4435758e8409b343" translate="yes" xml:space="preserve">
          <source>The first parameter must contain the name of the select menu, the second parameter must contain the value of each item, and the third (optional) parameter lets you set an item as the default (use boolean TRUE/FALSE).</source>
          <target state="translated">첫 번째 매개 변수는 선택 메뉴의 이름을 포함해야하고 두 번째 매개 변수는 각 항목의 값을 포함해야하며 세 번째 (선택적) 매개 변수를 사용하면 항목을 기본값으로 설정할 수 있습니다 (부울 TRUE / FALSE 사용).</target>
        </trans-unit>
        <trans-unit id="9e02a95effc6a2b3742765954a2876bf93207113" translate="yes" xml:space="preserve">
          <source>The first parameter of this function can &lt;strong&gt;optionally&lt;/strong&gt; be used to specify a particular database group from your config file, or you can even submit connection values for a database that is not specified in your config file. Examples:</source>
          <target state="translated">이 함수의 첫 번째 매개 변수는 &lt;strong&gt;선택적&lt;/strong&gt; 으로 구성 파일에서 특정 데이터베이스 그룹을 지정하거나 구성 파일에 지정되지 않은 데이터베이스에 대한 연결 값을 제출할 수 있습니다. 예 :</target>
        </trans-unit>
        <trans-unit id="07131d562d860f8e5ad13517649d8fec8f654901" translate="yes" xml:space="preserve">
          <source>The first parameter of this function can &lt;strong&gt;optionally&lt;/strong&gt; be used to specify a particular database group from your config file. Examples:</source>
          <target state="translated">이 함수의 첫 번째 매개 변수는 &lt;strong&gt;선택적&lt;/strong&gt; 으로 구성 파일에서 특정 데이터베이스 그룹을 지정하는 데 사용할 수 있습니다 . 예 :</target>
        </trans-unit>
        <trans-unit id="c93e88111eccee82539017d653ad01f9dc20aee0" translate="yes" xml:space="preserve">
          <source>The first parameter specifies the type of string, the second parameter specifies the length. The following choices are available:</source>
          <target state="translated">첫 번째 매개 변수는 문자열 유형을 지정하고 두 번째 매개 변수는 길이를 지정합니다. 다음과 같은 선택이 가능합니다 :</target>
        </trans-unit>
        <trans-unit id="987ce60318e6ced200dcd68188fa42be0d7efbe5" translate="yes" xml:space="preserve">
          <source>The first parameter to each of the &amp;ldquo;add&amp;rdquo; methods is an appropriate string value, or an array of them.</source>
          <target state="translated">각 &quot;add&quot;메소드의 첫 번째 매개 변수는 적절한 문자열 값 또는 이들의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="ecd0df7606ba21f32105e0cc84a603fe5d6ca60a" translate="yes" xml:space="preserve">
          <source>The first parameter will contain the name of the POST item you are looking for:</source>
          <target state="translated">첫 번째 매개 변수에는 찾고있는 POST 항목의 이름이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4645949e8bc5bf48b77e7eef1ada71e1e808f124" translate="yes" xml:space="preserve">
          <source>The first parameter will contain the name of the REQUEST item you are looking for:</source>
          <target state="translated">첫 번째 매개 변수에는 찾고있는 REQUEST 항목의 이름이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="156b48de851b4d15f4b8ac1bb57e5fcc4aa16c3e" translate="yes" xml:space="preserve">
          <source>The first parameter will contain the table name, the second is an associative array of values, the third parameter is the where key.</source>
          <target state="translated">첫 번째 매개 변수는 테이블 이름을 포함하고 두 번째 매개 변수는 값의 연관 배열이며 세 번째 매개 변수는 where 키입니다.</target>
        </trans-unit>
        <trans-unit id="fb0f54a93e173bb9eea4df70309bad146b90deb7" translate="yes" xml:space="preserve">
          <source>The first parameter will contain the table name, the second is an associative array of values.</source>
          <target state="translated">첫 번째 매개 변수는 테이블 이름을 포함하고 두 번째 매개 변수는 값의 연관 배열입니다.</target>
        </trans-unit>
        <trans-unit id="53a1e26fba1ebc60f7810d63acae346166738940" translate="yes" xml:space="preserve">
          <source>The first parameter will contain the table name, the second is an object.</source>
          <target state="translated">첫 번째 매개 변수는 테이블 이름을 포함하고 두 번째 매개 변수는 오브젝트입니다.</target>
        </trans-unit>
        <trans-unit id="103798f6010a569a43393a253f29ad7120d37d21" translate="yes" xml:space="preserve">
          <source>The first part of this chapter gives an overview. After the concepts are out of the way, we will discuss how to work with the requests and responses within CodeIgniter.</source>
          <target state="translated">이 장의 첫 번째 부분에서는 개요를 제공합니다. 개념을 벗어나면 CodeIgniter 내에서 요청 및 응답을 처리하는 방법에 대해 논의 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="12280383ac6f65bca56620239f8212aa1079daa1" translate="yes" xml:space="preserve">
          <source>The first segment represents the controller &lt;strong&gt;class&lt;/strong&gt; that should be invoked.</source>
          <target state="translated">첫 번째 세그먼트는 호출해야하는 컨트롤러 &lt;strong&gt;클래스&lt;/strong&gt; 를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="44eabcc05470ae87da1f037b423f57432c60d984" translate="yes" xml:space="preserve">
          <source>The first step is to &lt;a href=&quot;../installation/index&quot;&gt;install&lt;/a&gt; CodeIgniter, then read all the topics in the &lt;strong&gt;Introduction&lt;/strong&gt; section of the Table of Contents.</source>
          <target state="translated">첫 번째 단계는 CodeIgniter 를 &lt;a href=&quot;../installation/index&quot;&gt;설치&lt;/a&gt; 한 다음 목차 의 &lt;strong&gt;소개&lt;/strong&gt; 섹션 에서 모든 주제를 읽으십시오 .</target>
        </trans-unit>
        <trans-unit id="86867a6001bafa32b0500e850519519842a4f051" translate="yes" xml:space="preserve">
          <source>The first step is to create custom views. These can be placed anywhere that the &lt;code&gt;view()&lt;/code&gt; method can locate them, which means the standard View directory, or any namespaced View folder will work. For example, you could create a new view at &lt;strong&gt;/app/Views/_errors_list.php&lt;/strong&gt;:</source>
          <target state="translated">첫 번째 단계는 사용자 지정보기를 만드는 것입니다. 이는 &lt;code&gt;view()&lt;/code&gt; 메서드가 찾을 수있는 모든 위치에 배치 할 수 있습니다. 즉, 표준 View 디렉터리 또는 네임 스페이스가 지정된 View 폴더가 작동합니다. 예를 들어 &lt;strong&gt;/app/Views/_errors_list.php에&lt;/strong&gt; 새보기를 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="07f7ed889cd7fe5fba03957be1f4179dd7f9f1c4" translate="yes" xml:space="preserve">
          <source>The first step is to fill out the &lt;code&gt;$validationRules&lt;/code&gt; class property with the fields and rules that should be applied. If you have custom error message that you want to use, place them in the &lt;code&gt;$validationMessages&lt;/code&gt; array:</source>
          <target state="translated">첫 번째 단계는 적용해야하는 필드 및 규칙으로 &lt;code&gt;$validationRules&lt;/code&gt; 클래스 속성 을 채우는 것 입니다. 사용하려는 사용자 지정 오류 메시지가있는 경우 &lt;code&gt;$validationMessages&lt;/code&gt; 배열 에 배치합니다 .</target>
        </trans-unit>
        <trans-unit id="571be21b1a738a4f405879f12095c69e6bdb3c03" translate="yes" xml:space="preserve">
          <source>The first thing to notice is the name of the methods we&amp;rsquo;ve added. For each one, the class expects the snake_case column name to be converted into PascalCase, and prefixed with either &lt;code&gt;set&lt;/code&gt; or &lt;code&gt;get&lt;/code&gt;. These methods will then be automatically called whenever you set or retrieve the class property using the direct syntax (i.e. $user-&amp;gt;email). The methods do not need to be public unless you want them accessed from other classes. For example, the &lt;code&gt;created_at&lt;/code&gt; class property will be accessed through the &lt;code&gt;setCreatedAt()&lt;/code&gt; and &lt;code&gt;getCreatedAt()&lt;/code&gt; methods.</source>
          <target state="translated">가장 먼저 주목해야 할 것은 우리가 추가 한 메서드의 이름입니다. 각각에 대해 클래스는 snake_case 열 이름이 PascalCase로 변환되고 &lt;code&gt;set&lt;/code&gt; 또는 &lt;code&gt;get&lt;/code&gt; 접두사가 붙을 것으로 예상합니다 . 이러한 메서드는 직접 구문 (예 : $ user-&amp;gt; email)을 사용하여 클래스 속성을 설정하거나 검색 할 때마다 자동으로 호출됩니다. 다른 클래스에서 액세스하려는 경우가 아니면 메서드는 공용 일 필요가 없습니다. 예를 들어 &lt;code&gt;created_at&lt;/code&gt; 클래스 속성은 &lt;code&gt;setCreatedAt()&lt;/code&gt; 및 &lt;code&gt;getCreatedAt()&lt;/code&gt; 메서드를 통해 액세스됩니다 .</target>
        </trans-unit>
        <trans-unit id="3c8a5b0daf9b4eb2bc663bd72913e52c8dde2cf6" translate="yes" xml:space="preserve">
          <source>The first thing you&amp;rsquo;re going to do is set up a &lt;strong&gt;controller&lt;/strong&gt; to handle static pages. A controller is simply a class that helps delegate work. It is the glue of your web application.</source>
          <target state="translated">가장 먼저 할 일은 정적 페이지를 처리하도록 &lt;strong&gt;컨트롤러&lt;/strong&gt; 를 설정하는 것 입니다. 컨트롤러는 단순히 작업 위임을 돕는 클래스입니다. 웹 응용 프로그램의 접착제입니다.</target>
        </trans-unit>
        <trans-unit id="bff0f134b295240ae900af4630038360cc293b1c" translate="yes" xml:space="preserve">
          <source>The first two techniques describe creating a skeleton project using CodeIgniter4, that you would then use as the base for a new webapp. The third technique described below lets you add CodeIgniter4 to an existing webapp,</source>
          <target state="translated">처음 두 가지 기술은 CodeIgniter4를 사용하여 스켈레톤 프로젝트를 생성하는 방법을 설명하며,이를 새 웹앱의 기반으로 사용합니다. 아래에 설명 된 세 번째 기술을 사용하면 기존 웹앱에 CodeIgniter4를 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c8762be18e8a0694b80e9772173d4ed89dfa3701" translate="yes" xml:space="preserve">
          <source>The five reserved indexes are:</source>
          <target state="translated">5 개의 예약 된 인덱스는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="47ed1299ffa0e56a4a2400a29ba4ba6c96b61f0e" translate="yes" xml:space="preserve">
          <source>The following PHP extensions are currently supported:</source>
          <target state="translated">현재 지원되는 PHP 확장은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="24736861e02754384552e0c7edd643b3bc62df61" translate="yes" xml:space="preserve">
          <source>The following PHP extensions should be enabled on your server: &lt;code&gt;php-json&lt;/code&gt;, &lt;code&gt;php-mysqlnd&lt;/code&gt;, &lt;code&gt;php-xml&lt;/code&gt;</source>
          <target state="translated">서버에서 다음 PHP 확장을 활성화해야합니다 : &lt;code&gt;php-json&lt;/code&gt; , &lt;code&gt;php-mysqlnd&lt;/code&gt; , &lt;code&gt;php-xml&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ac5ebb0734d274254c5a5090853815b4cb124caf" translate="yes" xml:space="preserve">
          <source>The following basic getters exist:</source>
          <target state="translated">다음과 같은 기본 게터가 있습니다.</target>
        </trans-unit>
        <trans-unit id="95ce3efd0ee84f1a3288c097688270b177ce689a" translate="yes" xml:space="preserve">
          <source>The following basic setters exist. If any of the values set are out of range, an &lt;code&gt;InvalidArgumentExeption&lt;/code&gt; will be thrown.</source>
          <target state="translated">다음과 같은 기본 setter가 있습니다. 설정된 값 중 하나라도 범위를 벗어나면 &lt;code&gt;InvalidArgumentExeption&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="392f97f093c6a771d72d5c1157f4dab50d71d45a" translate="yes" xml:space="preserve">
          <source>The following code loads and initializes the database class based on your &lt;a href=&quot;configuration&quot;&gt;configuration&lt;/a&gt; settings:</source>
          <target state="translated">다음 코드는 &lt;a href=&quot;configuration&quot;&gt;구성&lt;/a&gt; 설정 에 따라 데이터베이스 클래스를로드하고 초기화합니다 .</target>
        </trans-unit>
        <trans-unit id="1654c9cb60daaf23942e6809fe613a89e9ac0c6e" translate="yes" xml:space="preserve">
          <source>The following comes from &lt;a href=&quot;https://owasp.org/www-project-top-ten/&quot;&gt;OWASP Top Ten Cheat Sheet&lt;/a&gt;, identifying the top vulnerabilities for web applications. For each, we provide a brief description, the OWASP recommendations, and then the CodeIgniter provisions to address the problem.</source>
          <target state="translated">다음은 웹 애플리케이션의 주요 취약점을 식별하는 &lt;a href=&quot;https://owasp.org/www-project-top-ten/&quot;&gt;OWASP Top Ten Cheat Sheet&lt;/a&gt; 에서 가져온 것 입니다. 각각에 대해 간략한 설명, OWASP 권장 사항 및 문제를 해결하기위한 CodeIgniter 조항을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="cfa2394f80efc3ad808cfacc0f26b571d02ba545" translate="yes" xml:space="preserve">
          <source>The following constants are always available anywhere within your application.</source>
          <target state="translated">다음 상수는 응용 프로그램 내에서 항상 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd19eef3baa1250ea0922b93e3530248dab5c5a7" translate="yes" xml:space="preserve">
          <source>The following custom exceptions are available:</source>
          <target state="translated">다음 사용자 지정 예외를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90309348862e9146df0000da2ab87e588e715898" translate="yes" xml:space="preserve">
          <source>The following data is available from this function if supported by your database:</source>
          <target state="translated">데이터베이스에서 지원하는 경우이 함수에서 다음 데이터를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="13392249fcd631b13df9c1112f6794a6bf4c52f1" translate="yes" xml:space="preserve">
          <source>The following example is not impacted by cascading:</source>
          <target state="translated">다음 예는 계단식 연결의 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="389c612f5f3b8b16b9ded17ce425d9069b0be5e1" translate="yes" xml:space="preserve">
          <source>The following example shows a common usage pattern within your controllers.</source>
          <target state="translated">다음 예제는 컨트롤러 내의 일반적인 사용 패턴을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="1ce8ded02d6543206dfc253091a45a6902ff0fe9" translate="yes" xml:space="preserve">
          <source>The following example will load the cache driver, specify &lt;a href=&quot;#alternative-php-cache-apc-caching&quot;&gt;APC&lt;/a&gt; as the driver to use, and fall back to file-based caching if APC is not available in the hosting environment.</source>
          <target state="translated">다음 예제는 캐시 드라이버를로드하고 &lt;a href=&quot;#alternative-php-cache-apc-caching&quot;&gt;APC&lt;/a&gt; 를 사용할 드라이버로 지정 하며 호스팅 환경에서 APC를 사용할 수없는 경우 파일 기반 캐싱으로 폴백합니다.</target>
        </trans-unit>
        <trans-unit id="ce79bbb48abc4596de1fec43c9e056528c24b0e0" translate="yes" xml:space="preserve">
          <source>The following filters are available when using the parser:</source>
          <target state="translated">파서를 사용할 때 다음 필터를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="694bae70a1ee5670d39392ed6d9a949d24f52d47" translate="yes" xml:space="preserve">
          <source>The following foreground colors are available:</source>
          <target state="translated">다음 전경색을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ff30eaedbe165475f480855798ea303b6cd7906" translate="yes" xml:space="preserve">
          <source>The following functions ARE NOT available when using a cached result object:</source>
          <target state="translated">캐시 된 결과 개체를 사용할 때는 다음 기능을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ee489096aa3c47c9c7a61975c733f70ae484e766" translate="yes" xml:space="preserve">
          <source>The following functions all require the &lt;a href=&quot;https://www.php.net/manual/en/book.intl.php&quot;&gt;intl&lt;/a&gt; extension to be loaded on your system in order to work. If the extension is not loaded, no replacement will be attempted. A great overview can be found over at &lt;a href=&quot;https://www.sitepoint.com/localization-demystified-understanding-php-intl/&quot;&gt;Sitepoint&lt;/a&gt;.</source>
          <target state="translated">다음 함수는 모두 작동하려면 시스템에 &lt;a href=&quot;https://www.php.net/manual/en/book.intl.php&quot;&gt;intl&lt;/a&gt; 확장이로드되어야합니다. 확장이로드되지 않은 경우 교체가 시도되지 않습니다. &lt;a href=&quot;https://www.sitepoint.com/localization-demystified-understanding-php-intl/&quot;&gt;Sitepoint&lt;/a&gt; 에서 훌륭한 개요를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="efe79006c99ab52393b88e302d048d80356c407a" translate="yes" xml:space="preserve">
          <source>The following functions allow you to build SQL &lt;strong&gt;SELECT&lt;/strong&gt; statements.</source>
          <target state="translated">다음 함수를 사용하면 SQL &lt;strong&gt;SELECT&lt;/strong&gt; 문 을 작성할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="02c3b27346be06cc7d986f188dfbf52bab519f98" translate="yes" xml:space="preserve">
          <source>The following functions are available:</source>
          <target state="translated">사용 가능한 기능은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="859757b96efffa07074a155836225a5833b7a9e8" translate="yes" xml:space="preserve">
          <source>The following functions let you generate errors:</source>
          <target state="translated">다음 함수를 사용하면 오류를 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa025a67eaef5265994f0efa68e8f38eece68728" translate="yes" xml:space="preserve">
          <source>The following graphic illustrates how data flows throughout the system:</source>
          <target state="translated">다음 그래픽은 시스템 전체에서 데이터가 흐르는 방식을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="75f5c9f4f1a1102b93ff342fc4586048480d0e96" translate="yes" xml:space="preserve">
          <source>The following image libraries are supported: GD/GD2, and ImageMagick.</source>
          <target state="translated">지원되는 이미지 라이브러리 : GD / GD2 및 ImageMagick.</target>
        </trans-unit>
        <trans-unit id="d2b2d2419738fc5fc9169b2d424aed9a459a8541" translate="yes" xml:space="preserve">
          <source>The following is a list of all the native rules that are available to use:</source>
          <target state="translated">다음은 사용 가능한 모든 기본 규칙의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="e146fb8606faffeb0685df17241223902f042f48" translate="yes" xml:space="preserve">
          <source>The following is a list of all the preferences that can be set when sending email.</source>
          <target state="translated">다음은 이메일을 보낼 때 설정할 수있는 모든 환경 설정 목록입니다.</target>
        </trans-unit>
        <trans-unit id="9ace79d5a084885afb64b260e1e701c10c70e16f" translate="yes" xml:space="preserve">
          <source>The following is a list of all the preferences you can pass to the initialization function to tailor the display.</source>
          <target state="translated">다음은 디스플레이를 조정하기 위해 초기화 기능에 전달할 수있는 모든 기본 설정의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d344019cd229a2f966adf0099ce7b4c53cbfea32" translate="yes" xml:space="preserve">
          <source>The following is a list of all the prepping methods that are available to use:</source>
          <target state="translated">다음은 사용할 수있는 모든 준비 방법 목록입니다.</target>
        </trans-unit>
        <trans-unit id="f46aed60d175da4e4259b8af8f8202b9436b8f08" translate="yes" xml:space="preserve">
          <source>The following is a list of available event points within the CodeIgniter core code:</source>
          <target state="translated">다음은 CodeIgniter 핵심 코드 내에서 사용 가능한 이벤트 지점 목록입니다.</target>
        </trans-unit>
        <trans-unit id="286f2164afd5442e4a281ca4fac4b148d52db937" translate="yes" xml:space="preserve">
          <source>The following is a list of available hook points.</source>
          <target state="translated">다음은 사용 가능한 후크 포인트 목록입니다.</target>
        </trans-unit>
        <trans-unit id="b12824c64b9b46a58470066e590dc0ce3e968dda" translate="yes" xml:space="preserve">
          <source>The following is a list of doctype choices. These are configurable, and pulled from application/config/doctypes.php</source>
          <target state="translated">다음은 doctype 선택 목록입니다. 이들은 구성 가능하며 application / config / doctypes.php에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="e2487999be6ef0729487de0c2bd6d73200beccd1" translate="yes" xml:space="preserve">
          <source>The following is a list of the core system files that are invoked every time CodeIgniter runs:</source>
          <target state="translated">다음은 CodeIgniter가 실행될 때마다 호출되는 핵심 시스템 파일 목록입니다.</target>
        </trans-unit>
        <trans-unit id="6e9a275ad55259dd3dfedff7864a423c937902f4" translate="yes" xml:space="preserve">
          <source>The following is a list of the pre-defined doctype choices. These are configurable, pulled from &lt;code&gt;application/Config/DocTypes.php&lt;/code&gt;, or they could be over-ridden in your &lt;code&gt;.env&lt;/code&gt; configuration.</source>
          <target state="translated">다음은 미리 정의 된 doctype 선택 목록입니다. 구성 가능 하거나 &lt;code&gt;application/Config/DocTypes.php&lt;/code&gt; 에서 가져 오거나 &lt;code&gt;.env&lt;/code&gt; 구성 에서 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="15c29f8d9aab57a63dc4b7bb40223c5c1f17e2a1" translate="yes" xml:space="preserve">
          <source>The following is a table of all the config options for migrations, available in &lt;strong&gt;app/Config/Migrations.php&lt;/strong&gt;.</source>
          <target state="translated">다음은 &lt;strong&gt;app / Config / Migrations.php&lt;/strong&gt; 에서 사용할 수있는 마이그레이션을위한 모든 구성 옵션의 표입니다 .</target>
        </trans-unit>
        <trans-unit id="d10c27af83eaed810dcab46ca392228ff0a365f9" translate="yes" xml:space="preserve">
          <source>The following is a table of all the config options for migrations.</source>
          <target state="translated">다음은 마이그레이션을위한 모든 구성 옵션 표입니다.</target>
        </trans-unit>
        <trans-unit id="4fc14009f7a070b3a42cc7851751557f4310be05" translate="yes" xml:space="preserve">
          <source>The following is an example of a directory for an application package named &amp;ldquo;Foo Bar&amp;rdquo;.</source>
          <target state="translated">다음은&amp;ldquo;Foo Bar&amp;rdquo;라는 응용 프로그램 패키지의 디렉토리 예입니다.</target>
        </trans-unit>
        <trans-unit id="0ae69eb8f5b803f7264b143ca3a19c112b65e02d" translate="yes" xml:space="preserve">
          <source>The following items can be loaded automatically:</source>
          <target state="translated">다음 항목을 자동으로로드 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="6efea29545b8489750b681a66ff72a2635213179" translate="yes" xml:space="preserve">
          <source>The following methods allow you to compare one Time instance with another. All comparisons are first converted to UTC before comparisons are done, to ensure that different timezones respond correctly.</source>
          <target state="translated">다음 메서드를 사용하면 하나의 Time 인스턴스를 다른 인스턴스와 비교할 수 있습니다. 모든 비교는 비교가 완료되기 전에 먼저 UTC로 변환되어 서로 다른 시간대가 올바르게 응답하도록합니다.</target>
        </trans-unit>
        <trans-unit id="0c0ca3fd5b5502ec180daa4560daa71f43897add" translate="yes" xml:space="preserve">
          <source>The following methods allow you to modify the date by adding or subtracting values to the current Time. This will not modify the existing Time instance, but will return a new instance.</source>
          <target state="translated">다음 방법을 사용하면 현재 시간에 값을 더하거나 빼서 날짜를 수정할 수 있습니다. 이것은 기존 Time 인스턴스를 수정하지 않지만 새 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b2e179690683ce038346d50adf520abc7ba8acff" translate="yes" xml:space="preserve">
          <source>The following page contains example code showing how the database class is used. For complete details please read the individual pages describing each function.</source>
          <target state="translated">다음 페이지에는 데이터베이스 클래스 사용 방법을 보여주는 예제 코드가 포함되어 있습니다. 자세한 내용은 각 기능을 설명하는 개별 페이지를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="aecba606b709e08c385558b4f753d2e1932ff25e" translate="yes" xml:space="preserve">
          <source>The following page describes the coding styles adhered to when contributing to the development of CodeIgniter. There is no requirement to use these styles in your own CodeIgniter application, though they are recommended.</source>
          <target state="translated">다음 페이지는 CodeIgniter 개발에 기여할 때 준수되는 코딩 스타일을 설명합니다. 권장되는 스타일이지만 자신의 CodeIgniter 애플리케이션에서 이러한 스타일을 사용할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="c8c304f5c7b15bcf7bb62b37cd4e39ad558ff6a4" translate="yes" xml:space="preserve">
          <source>The following pages describe the architectural concepts behind CodeIgniter4:</source>
          <target state="translated">다음 페이지는 CodeIgniter4의 아키텍처 개념을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="8d159a81060a80bf555851242e6ee33fd18e2a68" translate="yes" xml:space="preserve">
          <source>The following pages describe the broad concepts behind CodeIgniter:</source>
          <target state="translated">다음 페이지는 CodeIgniter의 기본 개념을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="a55b7426bc4ce10e8e87362b80495bc4f307cf71" translate="yes" xml:space="preserve">
          <source>The following placeholders are available for you to use in your routes:</source>
          <target state="translated">경로에서 다음 자리 표시자를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd03bbaf2f4a57ddb977879361ad6db0e0cc5b4e" translate="yes" xml:space="preserve">
          <source>The following plugins are available when using the parser:</source>
          <target state="translated">파서를 사용할 때 다음 플러그인을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b294ac4c72e19e94a86681d1c2f5c6470176308" translate="yes" xml:space="preserve">
          <source>The following preferences are available. The default value indicates what will be used if you do not specify that preference.</source>
          <target state="translated">다음 환경 설정을 사용할 수 있습니다. 기본값은 해당 환경 설정을 지정하지 않은 경우 사용될 항목을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8738645ba2dd0b30608077d72c6c14a8f4aec8fb" translate="yes" xml:space="preserve">
          <source>The following properties should be used in order to get listed in CLI commands and to add help functionality to your command:</source>
          <target state="translated">CLI 명령에 나열되고 명령에 도움말 기능을 추가하려면 다음 속성을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="96280af471c3ee95653107b24f526a64d6921bb6" translate="yes" xml:space="preserve">
          <source>The following statements can be cached: select, from, join, where, like, group_by, having, order_by</source>
          <target state="translated">다음 명령문을 캐시 할 수 있습니다. select, from, join, where, like, like, group_by, having, order_by</target>
        </trans-unit>
        <trans-unit id="8a83e07f0f9e28ca779668202e46ca007d6fb2e9" translate="yes" xml:space="preserve">
          <source>The following table indicates each timezone and its location.</source>
          <target state="translated">다음 표는 각 시간대와 위치를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="04f43f40c0fdd09b4dc7452b60915a1a4de09288" translate="yes" xml:space="preserve">
          <source>The font color, specified in hex. Both the full 6-length (ie, 993300) and the short three character abbreviated version (ie, fff) are supported.</source>
          <target state="translated">16 진수로 지정된 글꼴 색상입니다. 전체 6 길이 (즉, 993300)와 짧은 3 자 약어 버전 (즉, fff)이 모두 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="2d0a73ef112f5caf215171d7a45b56455ecfe80d" translate="yes" xml:space="preserve">
          <source>The form (Signup.php) is a standard web form with a couple of exceptions:</source>
          <target state="translated">양식 (Signup.php)은 몇 가지 예외가있는 표준 웹 양식입니다.</target>
        </trans-unit>
        <trans-unit id="fd3ccefc612790353a0125f8f6cb7ed191b94ef4" translate="yes" xml:space="preserve">
          <source>The form (myform.php) is a standard web form with a couple exceptions:</source>
          <target state="translated">양식 (myform.php)은 몇 가지 예외가있는 표준 웹 양식입니다.</target>
        </trans-unit>
        <trans-unit id="1bdc93b4e98d91956134727777637a365a12a80e" translate="yes" xml:space="preserve">
          <source>The form fields are not yet being re-populated with the data when there is an error. We&amp;rsquo;ll get to that shortly.</source>
          <target state="translated">오류가있을 때 양식 필드가 아직 데이터로 다시 채워지지 않습니다. 우리는 곧 도착할 것입니다.</target>
        </trans-unit>
        <trans-unit id="39667a7e2af0504bf523f7c78c8fe44eb9c53ad5" translate="yes" xml:space="preserve">
          <source>The form that you are using must be a POST request. GET requests cannot be spoofed.</source>
          <target state="translated">사용중인 양식은 POST 요청이어야합니다. GET 요청은 스푸핑 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="01aa0984421463ddbb8d6f53a1796214b15fdc54" translate="yes" xml:space="preserve">
          <source>The format to use for timestamps when creating a migration.</source>
          <target state="translated">마이그레이션을 만들 때 타임 스탬프에 사용할 형식입니다.</target>
        </trans-unit>
        <trans-unit id="b80d8fc7ed72421cb8b5d83d20df566a4a7fddc6" translate="yes" xml:space="preserve">
          <source>The former userdata method is deprecated, but you can pass an array containing your new session data to the &lt;code&gt;set()&lt;/code&gt; method:</source>
          <target state="translated">이전 userdata 메서드는 더 이상 사용되지 않지만 새 세션 데이터가 포함 된 배열을 &lt;code&gt;set()&lt;/code&gt; 메서드에 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4a31fae67d3c364d9475667af2056af67beaf817" translate="yes" xml:space="preserve">
          <source>The fourth parameter lets you set one or more attributes on the generated select tag.</source>
          <target state="translated">네 번째 매개 변수를 사용하면 생성 된 선택 태그에서 하나 이상의 속성을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6dde8d7606c9682badfcf3ed5d7228e202edfc8" translate="yes" xml:space="preserve">
          <source>The framework has a &lt;code&gt;phpunit.xml.dist&lt;/code&gt; file in the project root. This controls unit testing of the framework itself. If you provide your own &lt;code&gt;phpunit.xml&lt;/code&gt;, it will over-ride this.</source>
          <target state="translated">프레임 워크 의 프로젝트 루트 에는 &lt;code&gt;phpunit.xml.dist&lt;/code&gt; 파일이 있습니다. 이것은 프레임 워크 자체의 단위 테스트를 제어합니다. 자신의 &lt;code&gt;phpunit.xml&lt;/code&gt; 을 제공하면이를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="08077eb40a1b9be715db28b2c97e09e61637d883" translate="yes" xml:space="preserve">
          <source>The function expects the string passed to it to be the file path to the page that isn&amp;rsquo;t found. The exit status code will be set to &lt;code&gt;EXIT_UNKNOWN_FILE&lt;/code&gt;. Note that CodeIgniter automatically shows 404 messages if controllers are not found.</source>
          <target state="translated">이 함수는 전달 된 문자열이 찾을 수없는 페이지의 파일 경로 일 것으로 예상합니다. 종료 상태 코드는 &lt;code&gt;EXIT_UNKNOWN_FILE&lt;/code&gt; 로 설정됩니다 . CodeIgniter는 컨트롤러를 찾을 수없는 경우 자동으로 404 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="52491ca9b6871d45f846d3d1eb14c627cf3b340f" translate="yes" xml:space="preserve">
          <source>The function names in the above example are arbitrary. You&amp;rsquo;ll decide what they should be called on your server, or if you are using standardized APIs, like the Blogger or MetaWeblog API, you&amp;rsquo;ll use their function names.</source>
          <target state="translated">위 예제에서 함수 이름은 임의적입니다. 서버에서 호출 할 대상을 결정하거나 Blogger 또는 MetaWeblog API와 같은 표준화 된 API를 사용하는 경우 해당 함수 이름을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6a2804531e9a9d9e76a0b7a5a549a5abe2df32b8" translate="yes" xml:space="preserve">
          <source>The function result</source>
          <target state="translated">기능 결과</target>
        </trans-unit>
        <trans-unit id="21c65bd9c7c96d884334d083b0ea4d8822ef7247" translate="yes" xml:space="preserve">
          <source>The function returns NULL if the item you are trying to fetch does not exist.</source>
          <target state="translated">가져 오려는 항목이 존재하지 않으면 함수는 NULL을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1bd266cce94e26cfdb590b120fc1bc2feb5c63c3" translate="yes" xml:space="preserve">
          <source>The function uses PHP&amp;rsquo;s &lt;code&gt;highlight_string()&lt;/code&gt; function, so the colors used are the ones specified in your php.ini file.</source>
          <target state="translated">이 함수는 PHP의 &lt;code&gt;highlight_string()&lt;/code&gt; 함수를 사용하므로 사용 된 색상은 php.ini 파일에 지정된 색상입니다.</target>
        </trans-unit>
        <trans-unit id="a5b78a9e5afcf27f53a72ee04f170eba8f2c43c8" translate="yes" xml:space="preserve">
          <source>The function will return a UNIX timestamp by default. You can, optionally, pass a format string (the same type as the PHP &lt;code&gt;date()&lt;/code&gt; function accepts) as the second parameter.</source>
          <target state="translated">이 함수는 기본적으로 UNIX 타임 스탬프를 반환합니다. 선택적 으로 두 번째 매개 변수로 형식 문자열 (PHP &lt;code&gt;date()&lt;/code&gt; 함수가 허용 하는 것과 동일한 유형)을 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e5abc553e483a62ea68f9195aba980dad53d8260" translate="yes" xml:space="preserve">
          <source>The function would return:</source>
          <target state="translated">이 함수는 다음을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c8ddfc24b2e433df38c2faadd6a345c1e5ceb9c2" translate="yes" xml:space="preserve">
          <source>The functions within files loaded this way are not truly namespaced. The namespace is simply used as a convenient way to locate the files.</source>
          <target state="translated">이 방법으로로드 된 파일 내의 함수는 실제로 네임 스페이스가 지정되지 않습니다. 네임 스페이스는 단순히 파일을 찾는 편리한 방법으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d9871c656a6ccc1e8e1f85a940ea9c6d733b6993" translate="yes" xml:space="preserve">
          <source>The generated CSV file as a string</source>
          <target state="translated">생성 된 CSV 파일을 문자열로</target>
        </trans-unit>
        <trans-unit id="bdd69b583634902724c18b1b88353d8461a2fc1b" translate="yes" xml:space="preserve">
          <source>The generated XML document as a string</source>
          <target state="translated">생성 된 XML 문서를 문자열로</target>
        </trans-unit>
        <trans-unit id="ce932c166935c597d80ea5401b58114681852cd7" translate="yes" xml:space="preserve">
          <source>The guidelines for variable naming are very similar to those used for class methods. Variables should contain only lowercase letters, use underscore separators, and be reasonably named to indicate their purpose and contents. Very short, non-word variables should only be used as iterators in for() loops.</source>
          <target state="translated">변수 이름 지정 지침은 클래스 메서드에 사용되는 지침과 매우 유사합니다. 변수는 소문자 만 포함하고 밑줄 구분 기호를 사용해야하며 목적과 내용을 나타내도록 합리적으로 이름을 지정해야합니다. 아주 짧고 단어가 아닌 변수는 for () 루프에서 반복 자로 만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="3cb101ba06700359e387dc50a8cdc3d812f78651" translate="yes" xml:space="preserve">
          <source>The handlers are configured in the main configuration file, in the &lt;code&gt;$handlers&lt;/code&gt; property, which is simply an array of handlers and their configuration. Each handler is specified with the key being the fully name-spaced class name. The value will be an array of varying properties, specific to each handler. Each handler&amp;rsquo;s section will have one property in common: &lt;code&gt;handles&lt;/code&gt;, which is an array of log level &lt;em&gt;names&lt;/em&gt; that the handler will log information for.</source>
          <target state="translated">핸들러 는 단순히 핸들러 및 해당 구성의 배열 인 &lt;code&gt;$handlers&lt;/code&gt; 속성 의 기본 구성 파일에 구성됩니다. 각 핸들러는 전체 네임 스페이스 클래스 이름이되는 키로 지정됩니다. 값은 각 핸들러에 고유 한 다양한 속성의 배열입니다. 각 처리기의 섹션 에는 처리기가 정보를 기록 할 로그 수준 &lt;em&gt;이름&lt;/em&gt; 의 배열 인 &lt;code&gt;handles&lt;/code&gt; 속성이 하나 있습니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5d5c9f9de276d00743c41acac1d05f5b9e5fce02" translate="yes" xml:space="preserve">
          <source>The header contains the basic HTML code that you&amp;rsquo;ll want to display before loading the main view, together with a heading. It will also output the &lt;code&gt;$title&lt;/code&gt; variable, which we&amp;rsquo;ll define later in the controller. Now, create a footer at &lt;em&gt;application/views/templates/footer.php&lt;/em&gt; that includes the following code:</source>
          <target state="translated">헤더에는 제목과 함께 기본보기를로드하기 전에 표시하려는 기본 HTML 코드가 포함되어 있습니다. 또한 컨트롤러에서 나중에 정의 할 &lt;code&gt;$title&lt;/code&gt; 변수 도 출력합니다 . 이제 &lt;em&gt;application / views / templates / footer.php&lt;/em&gt; 에 다음 코드를 포함 하는 바닥 글을 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="1104857f3e9351ca6467bf8be12316b1de342b8e" translate="yes" xml:space="preserve">
          <source>The header contains the basic HTML code that you&amp;rsquo;ll want to display before loading the main view, together with a heading. It will also output the &lt;code&gt;$title&lt;/code&gt; variable, which we&amp;rsquo;ll define later in the controller. Now, create a footer at &lt;strong&gt;app/Views/templates/footer.php&lt;/strong&gt; that includes the following code:</source>
          <target state="translated">헤더에는 제목과 함께 기본보기를로드하기 전에 표시 할 기본 HTML 코드가 포함되어 있습니다. 또한 나중에 컨트롤러에서 정의 할 &lt;code&gt;$title&lt;/code&gt; 변수 도 출력합니다 . 이제 &lt;strong&gt;app / Views / templates / footer.php&lt;/strong&gt; 에 다음 코드를 포함 하는 바닥 글을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="8d49fcce73ae0bddf832acc5746e6ccfa0c8441f" translate="yes" xml:space="preserve">
          <source>The header name is compared in a case-insensitive manner.</source>
          <target state="translated">헤더 이름은 대소 문자를 구분하지 않고 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="0f5f9bcdd8e6d09078f4373a02d8d61aa96d8429" translate="yes" xml:space="preserve">
          <source>The headers are any SERVER data that starts with &lt;code&gt;HTTP_&lt;/code&gt;, like &lt;code&gt;HTTP_HOST&lt;/code&gt;. Each message is converted from it&amp;rsquo;s standard uppercase and underscore format to a ucwords and dash format. The preceding &lt;code&gt;HTTP_&lt;/code&gt; is removed from the string. So &lt;code&gt;HTTP_ACCEPT_LANGUAGE&lt;/code&gt; becomes &lt;code&gt;Accept-Language&lt;/code&gt;.</source>
          <target state="translated">헤더는 &lt;code&gt;HTTP_HOST&lt;/code&gt; 와 같이 &lt;code&gt;HTTP_&lt;/code&gt; 로 시작하는 모든 SERVER 데이터입니다 . 각 메시지는 표준 대문자 및 밑줄 형식에서 ucwords 및 대시 형식으로 변환됩니다. 앞의 &lt;code&gt;HTTP_&lt;/code&gt; 는 문자열에서 제거됩니다. 따라서 &lt;code&gt;HTTP_ACCEPT_LANGUAGE&lt;/code&gt; 는 &lt;code&gt;Accept-Language&lt;/code&gt; 가 됩니다.</target>
        </trans-unit>
        <trans-unit id="a7638da0639912e02dfb9eccf2c88a16870b31e7" translate="yes" xml:space="preserve">
          <source>The hooks feature can be globally enabled/disabled by setting the following item in the &lt;strong&gt;application/config/config.php&lt;/strong&gt; file:</source>
          <target state="translated">hooks 기능은 &lt;strong&gt;application / config / config.php&lt;/strong&gt; 파일 에서 다음 항목을 설정하여 전체적으로 활성화 / 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4c654984c63d0fa20a88504add9ba177ecdeac7b" translate="yes" xml:space="preserve">
          <source>The host portion of the URI is typically the domain name of the URL. This can be easily set and retrieved with the &lt;code&gt;getHost()&lt;/code&gt; and &lt;code&gt;setHost()&lt;/code&gt; methods:</source>
          <target state="translated">URI의 호스트 부분은 일반적으로 URL의 도메인 이름입니다. 이는 &lt;code&gt;getHost()&lt;/code&gt; 및 &lt;code&gt;setHost()&lt;/code&gt; 메소드를 사용하여 쉽게 설정하고 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="df6396801dd61654c0e83ec596c7ddebe3edb770" translate="yes" xml:space="preserve">
          <source>The hostname of your database server. Often this is &amp;lsquo;localhost&amp;rsquo;.</source>
          <target state="translated">데이터베이스 서버의 호스트 이름 종종 이것은 'localhost'입니다.</target>
        </trans-unit>
        <trans-unit id="0aebc8754833439a1acbcb8301388afa8d21dcb2" translate="yes" xml:space="preserve">
          <source>The how-to material for this has been split over several articles. This article is intended to be a reference for them.</source>
          <target state="translated">이에 대한 사용법 자료는 여러 기사로 나누어 져 있습니다. 이 기사는 이들을 참조하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="10376df67be505ba8e9463ca7c17e4cb80b35a05" translate="yes" xml:space="preserve">
          <source>The image resizing method lets you resize the original image, create a copy (with or without resizing), or create a thumbnail image.</source>
          <target state="translated">이미지 크기 조정 방법을 사용하면 원본 이미지의 크기를 조정하거나 크기를 조정하거나 포함하지 않고 사본을 만들거나 축소판 이미지를 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c976bbe58108e713610f39d5aa69861c86ed109" translate="yes" xml:space="preserve">
          <source>The image rotation method requires that the angle of rotation be set via its preference:</source>
          <target state="translated">이미지 회전 방법에서는 회전 각도를 기본 설정을 통해 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="8fdafcb8cb62195638e4559d5ed893527a11364b" translate="yes" xml:space="preserve">
          <source>The image underneath shows your project&amp;rsquo;s &lt;strong&gt;app&lt;/strong&gt; folder, with all of the files that you created in green. The two modified configuration files (Database &amp;amp; Routes) are not shown.</source>
          <target state="translated">아래 이미지는 생성 한 모든 파일이 녹색으로 표시된 프로젝트의 &lt;strong&gt;앱&lt;/strong&gt; 폴더를 보여줍니다 . 수정 된 두 구성 파일 (데이터베이스 및 경로)은 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="80389f15c11e5149c916aca36b53b5185bca9b1c" translate="yes" xml:space="preserve">
          <source>The incoming Trackback data can be retrieved using this function:</source>
          <target state="translated">이 기능을 사용하여 수신 트랙백 데이터를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80ec92a1a464a1fcc2bea46f7e30b447762265af" translate="yes" xml:space="preserve">
          <source>The index.php serves as the front controller, initializing the base resources needed to run CodeIgniter.</source>
          <target state="translated">index.php는 프론트 컨트롤러 역할을하며 CodeIgniter를 실행하는 데 필요한 기본 리소스를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="3077913483f4614e977649f2cf7f82b900cbb223" translate="yes" xml:space="preserve">
          <source>The information returned and the structure of the data is dependent on which adapter is being used.</source>
          <target state="translated">리턴 된 정보 및 데이터 구조는 사용중인 어댑터에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="558f1414fd575b25dc49790a8061bfc9182f0b9a" translate="yes" xml:space="preserve">
          <source>The input item(s), escaped</source>
          <target state="translated">이스케이프 된 입력 항목</target>
        </trans-unit>
        <trans-unit id="49e9887b1c73fc1e72bb9c5001b5ae6e2f743ce1" translate="yes" xml:space="preserve">
          <source>The input string with no image tags</source>
          <target state="translated">이미지 태그가없는 입력 문자열</target>
        </trans-unit>
        <trans-unit id="9212f1fa0569fbe6233991c9667bb29366afe2cb" translate="yes" xml:space="preserve">
          <source>The insert ID number when performing database inserts.</source>
          <target state="translated">데이터베이스 삽입을 수행 할 때 삽입 ID 번호입니다.</target>
        </trans-unit>
        <trans-unit id="150bc486d58804db5319d34ed61a0d9d61862ffd" translate="yes" xml:space="preserve">
          <source>The is the generic method used to represent a failed response, and is used by all of the other &amp;ldquo;fail&amp;rdquo; methods.</source>
          <target state="translated">는 실패한 응답을 나타내는 데 사용되는 일반적인 방법이며 다른 모든 &quot;실패&quot;방법에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e350ada1ad275205322fd7940f332eaf7737d551" translate="yes" xml:space="preserve">
          <source>The is the name of the handler that should be used as the primary handler when starting up the engine. Available names are: dummy, file, memcached, redis, predis, wincache.</source>
          <target state="translated">엔진을 시작할 때 기본 핸들러로 사용해야하는 핸들러의 이름입니다. 사용 가능한 이름은 dummy, file, memcached, redis, predis, wincache입니다.</target>
        </trans-unit>
        <trans-unit id="a1d0420200423635b7485c5060425cf3403be4f5" translate="yes" xml:space="preserve">
          <source>The issue has already been fixed (check the develop branch, or look for closed Issues)</source>
          <target state="translated">문제가 이미 수정되었습니다 (개발 브랜치를 확인하거나 닫힌 문제를 찾으십시오).</target>
        </trans-unit>
        <trans-unit id="0553ec938dd3c37b1436d16f2208f987d379e2f3" translate="yes" xml:space="preserve">
          <source>The jQuery Class</source>
          <target state="translated">jQuery 클래스</target>
        </trans-unit>
        <trans-unit id="5c5b314d7e1ba8d8727e693dd7c92c8a25558c2a" translate="yes" xml:space="preserve">
          <source>The key can be either stored in your &lt;em&gt;application/config/config.php&lt;/em&gt;, or you can design your own storage mechanism and pass the key dynamically when encrypting/decrypting.</source>
          <target state="translated">키는 &lt;em&gt;application / config / config.php&lt;/em&gt; 에 저장되거나 자체 저장 메커니즘을 설계하고 암호화 / 암호 해독시 동적으로 키를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="09ed7b267c5e0615866a641192b1f036b98122cb" translate="yes" xml:space="preserve">
          <source>The key can be stored in &lt;em&gt;app/Config/Encryption.php&lt;/em&gt;, or you can design a storage mechanism of your own and pass the key dynamically when encrypting/decrypting.</source>
          <target state="translated">키는 &lt;em&gt;app / Config / Encryption.php에&lt;/em&gt; 저장 될 수 있습니다 . 또는 자체 저장 메커니즘을 설계하고 암호화 / 복호화 할 때 동적으로 키를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a469999a3348b685e6c5a8689130293bd5651a41" translate="yes" xml:space="preserve">
          <source>The key of each row is the name of the class that you want to locate. The value is the path to locate it at.</source>
          <target state="translated">각 행의 키는 찾으려는 클래스의 이름입니다. 값은 찾을 경로입니다.</target>
        </trans-unit>
        <trans-unit id="23262a32c34ce04efc37fde9caec316dd1faa5cc" translate="yes" xml:space="preserve">
          <source>The key of each row is the namespace itself. This does not need a trailing slash. If you use double-quotes to define the array, be sure to escape the backward slash. That means that it would be &lt;code&gt;My\\App&lt;/code&gt;, not &lt;code&gt;My\App&lt;/code&gt;. The value is the location to the directory the classes can be found in. They should have a trailing slash.</source>
          <target state="translated">각 행의 키는 네임 스페이스 자체입니다. 후행 슬래시가 필요하지 않습니다. 큰 따옴표를 사용하여 배열을 정의하는 경우 백 슬래시를 이스케이프해야합니다. 즉 , &lt;code&gt;My\App&lt;/code&gt; 아니라 My &lt;code&gt;My\\App&lt;/code&gt; App 입니다. 값은 클래스가있는 디렉토리의 위치입니다. 맨 뒤에 슬래시가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="1ae3ee8751e1180a74eb1a18f5d22e997e658d1a" translate="yes" xml:space="preserve">
          <source>The key should be as random as possible and it &lt;strong&gt;must not&lt;/strong&gt; be a regular text string, nor the output of a hashing function, etc. In order to create a proper key, you must use the Encryption library&amp;rsquo;s &lt;code&gt;create_key()&lt;/code&gt; method</source>
          <target state="translated">열쇠는 가능한 한 무작위로해야하며,이 &lt;strong&gt;안&lt;/strong&gt; , 당신은 암호화 라이브러리의 사용해야 적절한 키를 생성하기 위해 일반 텍스트 문자열이나 해시 함수의 출력 등을 할 수 &lt;code&gt;create_key()&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="753c83ed33b33d86a102014450df4b250f040de3" translate="yes" xml:space="preserve">
          <source>The key should be as random as possible, and it &lt;strong&gt;must not&lt;/strong&gt; be a regular text string, nor the output of a hashing function, etc. To create a proper key, you can use the Encryption library&amp;rsquo;s &lt;code&gt;createKey()&lt;/code&gt; method.</source>
          <target state="translated">키는 가능한 한 임의적 &lt;strong&gt;이어야&lt;/strong&gt; 하며 일반 텍스트 문자열이나 해싱 함수의 출력 등이 아니 &lt;strong&gt;어야합니다&lt;/strong&gt; . 적절한 키를 생성하려면 암호화 라이브러리의 &lt;code&gt;createKey()&lt;/code&gt; 메서드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a5891cdaa7022e4817317e150369c0589f171ab5" translate="yes" xml:space="preserve">
          <source>The key thing to notice in the above example is that the second query did not utilize &lt;code&gt;$builder-&amp;gt;from()&lt;/code&gt; nor did it pass a table name into the first parameter. The reason this worked is that the query has not been executed using &lt;code&gt;$builder-&amp;gt;insert()&lt;/code&gt; which resets values or reset directly using &lt;code&gt;$builder-&amp;gt;resetQuery()&lt;/code&gt;.</source>
          <target state="translated">위의 예에서 주목해야 할 중요한 점은 두 번째 쿼리가 &lt;code&gt;$builder-&amp;gt;from()&lt;/code&gt; 하지 않았고 첫 번째 매개 변수에 테이블 이름을 전달하지 않았다는 것입니다. 이것이 작동하는 이유는 값을 재설정하거나 &lt;code&gt;$builder-&amp;gt;resetQuery()&lt;/code&gt; 사용하여 직접 재설정하는 $ builder- &lt;code&gt;$builder-&amp;gt;insert()&lt;/code&gt; 를 사용하여 쿼리가 실행되지 않았기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="aa4f3c3df037fefd43f2b27f603273634fa9c5d4" translate="yes" xml:space="preserve">
          <source>The key thing to notice in the above example is that the second query did not utilize &lt;code&gt;$this-&amp;gt;db-&amp;gt;from()&lt;/code&gt; nor did it pass a table name into the first parameter. The reason this worked is because the query has not been executed using &lt;code&gt;$this-&amp;gt;db-&amp;gt;insert()&lt;/code&gt; which resets values or reset directly using &lt;code&gt;$this-&amp;gt;db-&amp;gt;reset_query()&lt;/code&gt;.</source>
          <target state="translated">위 예제에서 주목할 점은 두 번째 쿼리가 &lt;code&gt;$this-&amp;gt;db-&amp;gt;from()&lt;/code&gt; 하지 않았으며 첫 번째 매개 변수에 테이블 이름을 전달하지 않았기 때문입니다. 이것이 효과가 있었던 이유는 값을 재설정하거나 &lt;code&gt;$this-&amp;gt;db-&amp;gt;reset_query()&lt;/code&gt; 사용하여 직접 재설정 하는 &lt;code&gt;$this-&amp;gt;db-&amp;gt;insert()&lt;/code&gt; 를 사용하여 쿼리가 실행되지 않았기 때문 입니다.</target>
        </trans-unit>
        <trans-unit id="b9fd9e6083ad91a7e77a1d8edd8a0bb27418e088" translate="yes" xml:space="preserve">
          <source>The key thing to notice in the above example is that the second query did not utilize &lt;strong&gt;$builder-&amp;gt;from()&lt;/strong&gt; and did not pass a table name into the first parameter. The reason for this outcome is because the query has not been executed using &lt;strong&gt;$builder-&amp;gt;get()&lt;/strong&gt; which resets values or reset directly using &lt;strong&gt;$builder-&amp;gt;resetQuery()&lt;/strong&gt;.</source>
          <target state="translated">위의 예에서 주목해야 할 중요한 점은 두 번째 쿼리가 &lt;strong&gt;$ builder-&amp;gt; from ()&lt;/strong&gt; 을 사용하지 않았고 첫 번째 매개 변수에 테이블 이름을 전달하지 않았다는 것입니다. 이 결과의 이유는 &lt;strong&gt;$ builder-&amp;gt; resetQuery ()를&lt;/strong&gt; 사용하여 값을 재설정하거나 직접 재설정하는 &lt;strong&gt;$ builder- &lt;/strong&gt;&lt;strong&gt;&amp;gt; get ()&lt;/strong&gt; 을 사용하여 쿼리를 실행하지 않았기 때문 입니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="d2f0801c3934d2d9df504dc9e3076c53074a8ee1" translate="yes" xml:space="preserve">
          <source>The key thing to notice in the above example is that the second query did not utilize &lt;strong&gt;$this-&amp;gt;db-&amp;gt;from()&lt;/strong&gt; and did not pass a table name into the first parameter. The reason for this outcome is because the query has not been executed using &lt;strong&gt;$this-&amp;gt;db-&amp;gt;get()&lt;/strong&gt; which resets values or reset directly using &lt;strong&gt;$this-&amp;gt;db-&amp;gt;reset_query()&lt;/strong&gt;.</source>
          <target state="translated">위 예제에서 주목할 점은 두 번째 쿼리가 &lt;strong&gt;$ this-&amp;gt; db-&amp;gt; from ()&lt;/strong&gt; 을 사용하지 않고 테이블 이름을 첫 번째 매개 변수에 전달하지 않았다는 것입니다. 이 결과의 이유는 &lt;strong&gt;$ this-&amp;gt; db-&amp;gt; get ()&lt;/strong&gt; 을 사용하여 쿼리를 실행하지 않았기 때문에 값을 재설정하거나 &lt;strong&gt;$ this-&amp;gt; db-&amp;gt; reset_query ()를&lt;/strong&gt; 사용하여 직접 재설정합니다 .</target>
        </trans-unit>
        <trans-unit id="d0d4211215dcc13f9aaccf29e1f7d95f1d15217f" translate="yes" xml:space="preserve">
          <source>The key types may be unique to the database you are using. For instance, MySQL will return one of primary, fulltext, spatial, index or unique for each key associated with a table.</source>
          <target state="translated">키 유형은 사용중인 데이터베이스에 고유 할 수 있습니다. 예를 들어 MySQL은 테이블과 관련된 각 키에 대해 기본, 전체 텍스트, 공간, 인덱스 또는 고유 중 하나를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="25a44a74534adf32b4f0a86ef9eb65c797103dcb" translate="yes" xml:space="preserve">
          <source>The language line; in an HTML label tag, if the &lt;code&gt;$for&lt;/code&gt; parameter is not empty</source>
          <target state="translated">언어 라인; &lt;code&gt;$for&lt;/code&gt; 매개 변수가 비어 있지 않은 경우 HTML 레이블 태그에서</target>
        </trans-unit>
        <trans-unit id="9bdd4ad0521fcea00db9d3fd3c1e10ac38ec7c13" translate="yes" xml:space="preserve">
          <source>The last query executed</source>
          <target state="translated">마지막으로 실행 된 쿼리</target>
        </trans-unit>
        <trans-unit id="0ea63f90d3e983bcbba62336f7eec0bbb2cf8dab" translate="yes" xml:space="preserve">
          <source>The last thing that has to be done is loading the views in the order they should be displayed. The &lt;code&gt;view()&lt;/code&gt; function built-in to CodeIgniter will be used to do this. The second parameter in the &lt;code&gt;view()&lt;/code&gt; function is used to pass values to the view. Each value in the &lt;code&gt;$data&lt;/code&gt; array is assigned to a variable with the name of its key. So the value of &lt;code&gt;$data['title']&lt;/code&gt; in the controller is equivalent to &lt;code&gt;$title&lt;/code&gt; in the view.</source>
          <target state="translated">마지막으로해야 할 일은 표시되어야하는 순서대로 뷰를로드하는 것입니다. 이를 위해 CodeIgniter에 내장 된 &lt;code&gt;view()&lt;/code&gt; 함수가 사용됩니다. &lt;code&gt;view()&lt;/code&gt; 함수 의 두 번째 매개 변수는 값을 뷰에 전달하는 데 사용됩니다. &lt;code&gt;$data&lt;/code&gt; 배열 의 각 값 은 키 이름이있는 변수에 할당됩니다. 따라서 컨트롤러 의 &lt;code&gt;$data['title']&lt;/code&gt; 값은 뷰의 &lt;code&gt;$title&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f2222d874075ce2681bad72a3aac22f453e39316" translate="yes" xml:space="preserve">
          <source>The last thing that has to be done is loading the views in the order they should be displayed. The second parameter in the &lt;code&gt;view()&lt;/code&gt; method is used to pass values to the view. Each value in the &lt;code&gt;$data&lt;/code&gt; array is assigned to a variable with the name of its key. So the value of &lt;code&gt;$data['title']&lt;/code&gt; in the controller is equivalent to &lt;code&gt;$title&lt;/code&gt; in the view.</source>
          <target state="translated">마지막으로 수행해야 할 일은 표시된 순서대로 뷰를로드하는 것입니다. &lt;code&gt;view()&lt;/code&gt; 메소드 의 두 번째 매개 변수는 값을보기로 전달하는 데 사용됩니다. &lt;code&gt;$data&lt;/code&gt; 배열 의 각 값 은 키 이름을 가진 변수에 할당됩니다. 따라서 컨트롤러 의 &lt;code&gt;$data['title']&lt;/code&gt; 값은 보기의 &lt;code&gt;$title&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ec485c5e9843d82e933e933d5435649b39e36ccc" translate="yes" xml:space="preserve">
          <source>The library can be loaded either manually or through the &lt;a href=&quot;../concepts/services&quot;&gt;Services class&lt;/a&gt;.</source>
          <target state="translated">라이브러리는 수동으로 또는 &lt;a href=&quot;../concepts/services&quot;&gt;Services 클래스를&lt;/a&gt; 통해로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3237b2c65cfab43b20821d260e53d157e2ab7901" translate="yes" xml:space="preserve">
          <source>The library is loaded as a service named &lt;strong&gt;validation&lt;/strong&gt;:</source>
          <target state="translated">라이브러리는 &lt;strong&gt;validation&lt;/strong&gt; 이라는 서비스로로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="437e34af2cd7cf02f6bf6385613203ccc52d0b9b" translate="yes" xml:space="preserve">
          <source>The line &lt;code&gt;$routes-&amp;gt;get('/', 'Home::index');&lt;/code&gt; is an optimization that you will want to use in a &amp;ldquo;real-world&amp;rdquo; app. But for demonstration purposes we don&amp;rsquo;t want to use that feature. &lt;code&gt;$routes-&amp;gt;get()&lt;/code&gt; is explained in &lt;a href=&quot;routing&quot;&gt;URI Routing&lt;/a&gt;</source>
          <target state="translated">줄 &lt;code&gt;$routes-&amp;gt;get('/', 'Home::index');&lt;/code&gt; &quot;실제&quot;앱에서 사용하려는 최적화입니다. 그러나 데모 목적으로 우리는 그 기능을 사용하고 싶지 않습니다. &lt;code&gt;$routes-&amp;gt;get()&lt;/code&gt; 은 &lt;a href=&quot;routing&quot;&gt;URI 라우팅에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="24ddc6509b246409f3fa5d8704c83ce06c9551d3" translate="yes" xml:space="preserve">
          <source>The line in {file} where the logger was called</source>
          <target state="translated">로거가 호출 된 {file}의 라인</target>
        </trans-unit>
        <trans-unit id="e166e771e3aceb54d357f531534fbca648344d91" translate="yes" xml:space="preserve">
          <source>The link will explain why and how.</source>
          <target state="translated">링크는 이유와 방법을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="e64c37dccad36bdcdf522170820d76056752dc94" translate="yes" xml:space="preserve">
          <source>The list of changed files follows, with PR numbers shown.</source>
          <target state="translated">변경된 파일 목록은 PR 번호와 함께 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="7fedf61779a452f44d7db2b974f78cab5c147d13" translate="yes" xml:space="preserve">
          <source>The local configuration file, &lt;code&gt;.env&lt;/code&gt;, that you created when you installed CodeIgniter, should have the database property settings uncommented and set appropriately for the database you want to use. Make sure you&amp;rsquo;ve configured your database properly as described &lt;a href=&quot;../database/configuration&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">CodeIgniter를 설치할 때 생성 한 로컬 구성 파일 &lt;code&gt;.env&lt;/code&gt; 에는 데이터베이스 속성 설정의 주석 처리가 제거되고 사용하려는 데이터베이스에 적절하게 설정되어 있어야합니다. &lt;a href=&quot;../database/configuration&quot;&gt;여기에&lt;/a&gt; 설명 된대로 데이터베이스를 올바르게 구성했는지 확인 하십시오 .</target>
        </trans-unit>
        <trans-unit id="b6cca551f8691da5d0259c0df392b3d0b9654a9b" translate="yes" xml:space="preserve">
          <source>The local development server can be customized with three command line options:</source>
          <target state="translated">로컬 개발 서버는 세 가지 명령 줄 옵션으로 사용자 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9030c764b7570c0017e94f832ae698d5c4a07a3b" translate="yes" xml:space="preserve">
          <source>The logging system can support multiple methods of handling logging running at the same time. Each handler can be set to handle specific levels and ignore the rest. Currently, two handlers come with a default install:</source>
          <target state="translated">로깅 시스템은 동시에 실행되는 로깅을 처리하는 여러 방법을 지원할 수 있습니다. 각 핸들러는 특정 레벨을 처리하고 나머지는 무시하도록 설정할 수 있습니다. 현재 두 개의 핸들러가 기본 설치와 함께 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="7dab4b11bad5fdc9c996572941308e37711644b4" translate="yes" xml:space="preserve">
          <source>The logging system does not provide ways to alert sysadmins or webmasters about these events, they solely log the information. For many of the more critical event levels, the logging happens automatically by the Error Handler, described above.</source>
          <target state="translated">로깅 시스템은 이러한 이벤트에 대해 시스템 관리자 또는 웹 마스터에게 경고하는 방법을 제공하지 않으며 정보 만 기록합니다. 더 중요한 많은 이벤트 수준에서 로깅은 위에서 설명한 오류 처리기에 의해 자동으로 발생합니다.</target>
        </trans-unit>
        <trans-unit id="28f1f8517839ec30ee6447877c3fdd85ae47c801" translate="yes" xml:space="preserve">
          <source>The mail sending protocol.</source>
          <target state="translated">메일 전송 프로토콜</target>
        </trans-unit>
        <trans-unit id="ae4aae8cdd112f6dffc1c3f8f997c28a8acf7f1c" translate="yes" xml:space="preserve">
          <source>The main benefit of using this tag rather than hard coding your own HTML is that it permits your site to be more portable in the event your URLs ever change.</source>
          <target state="translated">자신의 HTML을 하드 코딩하는 대신이 태그를 사용하면 얻을 수있는 주요 이점은 URL이 변경 될 때 사이트를보다 이식성있게 만들 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="aecca227b0bff54b0e7c1462ea7799d71473dd5f" translate="yes" xml:space="preserve">
          <source>The main methods are:</source>
          <target state="translated">주요 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f2d1f45e09adf86dbf426a676c2e7c5cc49ad230" translate="yes" xml:space="preserve">
          <source>The maximum height (in pixels) that the image can be. Set to zero for no limit.</source>
          <target state="translated">이미지의 최대 높이 (픽셀)입니다. 제한이 없으면 0으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="e27b7e311ef8b220525ed0a96f9f84b210e3ae15" translate="yes" xml:space="preserve">
          <source>The maximum length that a file name can be. Set to zero for no limit.</source>
          <target state="translated">파일 이름의 최대 길이입니다. 제한이 없으면 0으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="8c684eeb3687c52ad35b7455fad7a3eb0787a763" translate="yes" xml:space="preserve">
          <source>The maximum size (in kilobytes) that the file can be. Set to zero for no limit. Note: Most PHP installations have their own limit, as specified in the php.ini file. Usually 2 MB (or 2048 KB) by default.</source>
          <target state="translated">파일의 최대 크기 (KB)입니다. 제한이 없으면 0으로 설정하십시오. 참고 : 대부분의 PHP 설치에는 php.ini 파일에 지정된대로 자체 제한이 있습니다. 기본적으로 2MB (또는 2048KB)입니다.</target>
        </trans-unit>
        <trans-unit id="8561b5b89ff91c55a3b3f15059aa29d069cccfd2" translate="yes" xml:space="preserve">
          <source>The maximum width (in pixels) that the image can be. Set to zero for no limit.</source>
          <target state="translated">이미지의 최대 너비 (픽셀)입니다. 제한이 없으면 0으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="f8cdbcce3c05daa9daa62ff4cfe85ced93e75bd8" translate="yes" xml:space="preserve">
          <source>The message is displayed using the &lt;em&gt;application/views/errors/error_db.php&lt;/em&gt; template.</source>
          <target state="translated">메시지는 &lt;em&gt;application / views / errors / error_db.php&lt;/em&gt; 템플릿을 사용하여 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="ad99b817d16128a8681fc8e6364fc5962b4101ac" translate="yes" xml:space="preserve">
          <source>The method on the server you wish to call</source>
          <target state="translated">호출하려는 서버의 메소드</target>
        </trans-unit>
        <trans-unit id="fd348990b06f4da14d822afa2085f9b8eb11f5e0" translate="yes" xml:space="preserve">
          <source>The method returns NULL if the item you are attempting to retrieve does not exist.</source>
          <target state="translated">검색하려는 항목이 존재하지 않으면이 메소드는 NULL을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="fb571fa01cf46778ed65292e759c487b03f0ee94" translate="yes" xml:space="preserve">
          <source>The method returns null if the item you are attempting to retrieve does not exist.</source>
          <target state="translated">검색하려는 항목이 존재하지 않으면이 메서드는 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4534beebd587f58eddb7e70bf58aceffeeb45e50" translate="yes" xml:space="preserve">
          <source>The method would return this:</source>
          <target state="translated">이 메소드는 다음을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="caca297492dace29dba9ab37dfa338ed78f39252" translate="yes" xml:space="preserve">
          <source>The methods in the above example use the &lt;a href=&quot;../database/query_builder&quot;&gt;Query Builder&lt;/a&gt; database methods.</source>
          <target state="translated">위 예제의 메소드는 &lt;a href=&quot;../database/query_builder&quot;&gt;Query Builder&lt;/a&gt; 데이터베이스 메소드 를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="95a6966cd06640067783b247a897c344ecf92c4a" translate="yes" xml:space="preserve">
          <source>The methods provided by the parent class that are available are:</source>
          <target state="translated">사용 가능한 부모 클래스에서 제공하는 메서드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4feb2d9128d81504069506478f654f7c29436710" translate="yes" xml:space="preserve">
          <source>The methods provided by the parent classes that are available are:</source>
          <target state="translated">사용 가능한 부모 클래스에서 제공하는 메서드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="aec412493502a05968cbe33c0a296f5004cdf578" translate="yes" xml:space="preserve">
          <source>The migration library can automatically scan all namespaces you have defined within &lt;strong&gt;app/Config/Autoload.php&lt;/strong&gt; or loaded from an external source like Composer, using the &lt;code&gt;$psr4&lt;/code&gt; property for matching directory names. It will include all migrations it finds in Database/Migrations.</source>
          <target state="translated">마이그레이션 라이브러리는 디렉터리 이름을 일치시키기 위해 &lt;code&gt;$psr4&lt;/code&gt; 속성을 사용하여 &lt;strong&gt;app / Config / Autoload.php&lt;/strong&gt; 내에서 정의 했거나 Composer와 같은 외부 소스에서로드 한 모든 네임 스페이스를 자동으로 스캔 할 수 있습니다 . 여기에는 데이터베이스 / 마이그레이션에서 찾은 모든 마이그레이션이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c73f7bbb53a3dd15636e3e23cd82e408d27b0ccb" translate="yes" xml:space="preserve">
          <source>The mime types corresponding to the types of files you allow to be uploaded. Usually the file extension can be used as the mime type. Can be either an array or a pipe-separated string.</source>
          <target state="translated">업로드 할 수있는 파일 형식에 해당하는 MIME 형식입니다. 일반적으로 파일 확장자는 MIME 형식으로 사용할 수 있습니다. 배열 또는 파이프로 구분 된 문자열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fa0b2708db1fa024e347caabbbacf6146c02854" translate="yes" xml:space="preserve">
          <source>The minimum height (in pixels) that the image can be. Set to zero for no limit.</source>
          <target state="translated">이미지의 최소 높이 (픽셀)입니다. 제한이 없으면 0으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="844a3201e5442ea82fff6b080ffb397af4fd3f29" translate="yes" xml:space="preserve">
          <source>The minimum width (in pixels) that the image can be. Set to zero for no limit.</source>
          <target state="translated">이미지의 최소 너비 (픽셀)입니다. 제한이 없으면 0으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="25fd736a1385ee209b180e7946058053c72c913f" translate="yes" xml:space="preserve">
          <source>The model class has a few configuration options that can be set to allow the class&amp;rsquo; methods to work seamlessly for you. The first two are used by all of the CRUD methods to determine what table to use and how we can find the required records:</source>
          <target state="translated">모델 클래스에는 클래스의 메서드가 원활하게 작동하도록 설정할 수있는 몇 가지 구성 옵션이 있습니다. 처음 두 개는 모든 CRUD 메서드에서 사용할 테이블과 필요한 레코드를 찾는 방법을 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f099beb58438c3bd2ed10b82c957400c2ae0216e" translate="yes" xml:space="preserve">
          <source>The model provides a simple method to replace parts of your rules based on data that&amp;rsquo;s being passed into it. This sounds fairly obscure but can be especially handy with the &lt;code&gt;is_unique&lt;/code&gt; validation rule. Placeholders are simply the name of the field (or array key) that was passed in as $data surrounded by curly brackets. It will be replaced by the &lt;strong&gt;value&lt;/strong&gt; of the matched incoming field. An example should clarify this:</source>
          <target state="translated">모델은 전달되는 데이터를 기반으로 규칙의 일부를 대체하는 간단한 방법을 제공합니다. 이것은 상당히 모호하게 들리지만 &lt;code&gt;is_unique&lt;/code&gt; 유효성 검사 규칙을 사용하면 특히 편리 할 수 ​​있습니다 . 자리 표시자는 중괄호로 묶인 $ data로 전달 된 필드 (또는 배열 키)의 이름입니다. 일치하는 수신 필드 의 &lt;strong&gt;값&lt;/strong&gt; 으로 대체됩니다 . 예를 들어이를 명확히해야합니다.</target>
        </trans-unit>
        <trans-unit id="9b597d2c77e07f9d01a18dafe02ba247c2277403" translate="yes" xml:space="preserve">
          <source>The model uses the &lt;code&gt;users&lt;/code&gt; table in the database for all of its activities. We&amp;rsquo;ve set the &lt;code&gt;$allowedFields&lt;/code&gt; property to include all of the fields that we want outside classes to change. The &lt;code&gt;id&lt;/code&gt;, &lt;code&gt;created_at&lt;/code&gt;, and &lt;code&gt;updated_at&lt;/code&gt; fields are handled automatically by the class or the database, so we don&amp;rsquo;t want to change those. Finally, we&amp;rsquo;ve set our Entity class as the &lt;code&gt;$returnType&lt;/code&gt;. This ensures that all methods on the model that return rows from the database will return instances of our User Entity class instead of an object or array like normal.</source>
          <target state="translated">모델은 모든 활동에 대해 데이터베이스 의 &lt;code&gt;users&lt;/code&gt; 테이블을 사용합니다 . 클래스 외부에서 변경하려는 모든 필드를 포함 하도록 &lt;code&gt;$allowedFields&lt;/code&gt; 속성을 설정했습니다 . 는 &lt;code&gt;id&lt;/code&gt; , &lt;code&gt;created_at&lt;/code&gt; 및 &lt;code&gt;updated_at&lt;/code&gt; 필드가 클래스 또는 데이터베이스에 의해 자동으로 처리됩니다, 그래서 우리는 사람들을 변경하지 않습니다. 마지막으로 Entity 클래스를 &lt;code&gt;$returnType&lt;/code&gt; . 이렇게하면 데이터베이스에서 행을 반환하는 모델의 모든 메서드가 일반적인 객체 나 배열 대신 사용자 엔터티 클래스의 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c6490dc23173f2910818bba617390f7ea09c1a6b" translate="yes" xml:space="preserve">
          <source>The modified item</source>
          <target state="translated">수정 된 아이템</target>
        </trans-unit>
        <trans-unit id="601234d7d85373c0836727861df1c6d67c755b1c" translate="yes" xml:space="preserve">
          <source>The most common purpose for this function is to show how much time has elapsed from some point in time in the past to now.</source>
          <target state="translated">이 기능의 가장 일반적인 목적은 과거 어느 시점에서 현재까지 경과 한 시간을 보여주는 것입니다.</target>
        </trans-unit>
        <trans-unit id="e3e86b66ccbedfaa15f693f6d931758de264c03f" translate="yes" xml:space="preserve">
          <source>The move() method returns a new File instance that for the relocated file, so you must capture the result if the resulting location is needed:</source>
          <target state="translated">move () 메서드는 재배치 된 파일에 대한 새 File 인스턴스를 반환하므로 결과 위치가 필요한 경우 결과를 캡처해야합니다.</target>
        </trans-unit>
        <trans-unit id="dd74830ae16e193a43b39b75abb22ce1660c7e19" translate="yes" xml:space="preserve">
          <source>The name &amp;lsquo;test&amp;rsquo; is arbitrary. It can be anything you want. By default we&amp;rsquo;ve used the word &amp;ldquo;default&amp;rdquo; for the primary connection, but it too can be renamed to something more relevant to your project.</source>
          <target state="translated">'test'라는 이름은 임의적입니다. 그것은 당신이 원하는 무엇이든 될 수 있습니다. 기본적으로 기본 연결에는 &quot;default&quot;라는 단어가 사용되었지만 프로젝트와 관련이있는 다른 이름으로 바꿀 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="690f866e99a35076400ba57e71194aa0d2d21dbf" translate="yes" xml:space="preserve">
          <source>The name is not case-sensitive, but otherwise must match the name you gave it when you started the timer.</source>
          <target state="translated">이름은 대소 문자를 구분하지 않지만 그렇지 않으면 타이머를 시작할 때 지정한 이름과 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="132b2f105b2546d78029936bb136e751e679787b" translate="yes" xml:space="preserve">
          <source>The name of file calling the logger</source>
          <target state="translated">로거를 호출하는 파일의 이름</target>
        </trans-unit>
        <trans-unit id="11d3f6a2466d769185690fe7bebb76eabf741351" translate="yes" xml:space="preserve">
          <source>The name of the backed-up file. The name is needed only if you are using zip compression.</source>
          <target state="translated">백업 파일의 이름입니다. zip 압축을 사용하는 경우에만 이름이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ba2f77557f731202ccef28d0e22b8e49d260c9be" translate="yes" xml:space="preserve">
          <source>The name of the class property is the connection name, and can be used while connecting to specify a group name.</source>
          <target state="translated">클래스 속성의 이름은 연결 이름이며 연결하는 동안 그룹 이름을 지정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fe0e5ff772813760860997ad17850aaaafb7ffa" translate="yes" xml:space="preserve">
          <source>The name of the current CSRF token.</source>
          <target state="translated">현재 CSRF 토큰의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="4a3b5f90cd9b5c05c9eaa7296ab95ee63785417d" translate="yes" xml:space="preserve">
          <source>The name of the database you want to connect to.</source>
          <target state="translated">연결하려는 데이터베이스의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="c30c6bf1d5bec2f16fb29f7fd770528e1a6e99eb" translate="yes" xml:space="preserve">
          <source>The name of the header for current CSRF token.</source>
          <target state="translated">현재 CSRF 토큰의 헤더 이름입니다.</target>
        </trans-unit>
        <trans-unit id="f2f623cfdcee233c0ea961e03977fdc2a4adc70a" translate="yes" xml:space="preserve">
          <source>The name of the platform in use (mysql, mssql, etc&amp;hellip;).</source>
          <target state="translated">사용중인 플랫폼 이름 (mysql, mssql 등&amp;hellip;)</target>
        </trans-unit>
        <trans-unit id="db2f71a3131e4833fad3edd3be5e9818cff8e4cd" translate="yes" xml:space="preserve">
          <source>The name used for the session cookie.</source>
          <target state="translated">세션 쿠키에 사용되는 이름입니다.</target>
        </trans-unit>
        <trans-unit id="a5e5e70e4bfe3363748b428c08a69eb8d4544276" translate="yes" xml:space="preserve">
          <source>The new namespace is only applied during that call for any methods that create a single route, like get, post, etc. For any methods that create multiple routes, the new namespace is attached to all routes generated by that function or, in the case of &lt;code&gt;group()&lt;/code&gt;, all routes generated while in the closure.</source>
          <target state="translated">새 네임 스페이스는 get, post 등과 같이 단일 경로를 만드는 모든 메서드에 대한 호출 중에 만 적용됩니다. 여러 경로를 만드는 모든 메서드의 경우 새 네임 스페이스는 해당 함수에 의해 생성 된 모든 경로에 연결됩니다. 의 &lt;code&gt;group()&lt;/code&gt; , 모든 노선 폐쇄에있는 동안 생성.</target>
        </trans-unit>
        <trans-unit id="bb43db58a21f739d8773553b65de6eca31796617" translate="yes" xml:space="preserve">
          <source>The news overview page is now done, but a page to display individual news items is still absent. The model created earlier is made in such a way that it can easily be used for this functionality. You only need to add some code to the controller and create a new view. Go back to the &lt;code&gt;News&lt;/code&gt; controller and update the &lt;code&gt;view()&lt;/code&gt; method with the following:</source>
          <target state="translated">이제 뉴스 개요 페이지가 완료되었지만 개별 뉴스 항목을 표시하는 페이지는 아직 없습니다. 앞서 만든 모델은이 기능에 쉽게 사용할 수 있도록 만들어졌습니다. 컨트롤러에 일부 코드를 추가하고 새보기를 생성하기 만하면됩니다. &lt;code&gt;News&lt;/code&gt; 컨트롤러로 돌아가서 다음과 같이 &lt;code&gt;view()&lt;/code&gt; 메서드를 업데이트합니다 .</target>
        </trans-unit>
        <trans-unit id="fb4d5f9fb4eee671c1dd2ac352c6ecf51da2c499" translate="yes" xml:space="preserve">
          <source>The news overview page is now done, but a page to display individual news items is still absent. The model created earlier is made in such way that it can easily be used for this functionality. You only need to add some code to the controller and create a new view. Go back to the &lt;code&gt;News&lt;/code&gt; controller and update &lt;code&gt;view()&lt;/code&gt; with the following:</source>
          <target state="translated">뉴스 개요 페이지가 완료되었지만 개별 뉴스 항목을 표시하는 페이지가 여전히 없습니다. 앞에서 만든 모델은이 기능에 쉽게 사용할 수 있도록 만들어졌습니다. 컨트롤러에 일부 코드 만 추가하고 새보기를 작성하면됩니다. &lt;code&gt;News&lt;/code&gt; 컨트롤러로 돌아가서 다음과 같이 &lt;code&gt;view()&lt;/code&gt; 를 업데이트 하십시오.</target>
        </trans-unit>
        <trans-unit id="7259c69ce66170724477bab0adf43aed0452f4a2" translate="yes" xml:space="preserve">
          <source>The number as the appropriate currency for the locale</source>
          <target state="translated">로케일에 적합한 통화 인 숫자</target>
        </trans-unit>
        <trans-unit id="ac95f42869160b1ade785dea40191814238fe7d3" translate="yes" xml:space="preserve">
          <source>The number of &amp;ldquo;digit&amp;rdquo; links you would like before and after the selected page number. For example, the number 2 will place two digits on either side, as in the example links at the very top of this page.</source>
          <target state="translated">선택한 페이지 번호 전후에 원하는 &quot;숫자&quot;링크 수입니다. 예를 들어 숫자 2는이 페이지 맨 위의 링크 예와 같이 양쪽에 두 자리 숫자를 배치합니다.</target>
        </trans-unit>
        <trans-unit id="b4dbdbd5ab0c5fb515d98d43c9cc194725c8dc31" translate="yes" xml:space="preserve">
          <source>The number of FIELDS (columns) returned by the query. Make sure to call the method using your query result object:</source>
          <target state="translated">쿼리에서 반환 한 FIELDS (열) 수입니다. 쿼리 결과 개체를 사용하여 메서드를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="d2272c43c0b72b0fc81b4e012c8532a90ee0951c" translate="yes" xml:space="preserve">
          <source>The number of queries after which the query block will default to hidden.</source>
          <target state="translated">쿼리 블록 이후 기본적으로 숨겨진 쿼리 수입니다.</target>
        </trans-unit>
        <trans-unit id="9bf67d31e045ba0dc631e763749dd0c6cb4cf597" translate="yes" xml:space="preserve">
          <source>The number of rows returned by the query. Note: In this example, $query is the variable that the query result object is assigned to:</source>
          <target state="translated">쿼리에서 반환 한 행 수입니다. 참고 :이 예에서 $ query는 쿼리 결과 개체가 할당 된 변수입니다.</target>
        </trans-unit>
        <trans-unit id="b4a34cea2eb5c7721b673d85bb9dd93dbb530f86" translate="yes" xml:space="preserve">
          <source>The number of seconds until another token should be available.</source>
          <target state="translated">다른 토큰을 사용할 수있을 때까지의 시간 (초)입니다.</target>
        </trans-unit>
        <trans-unit id="7717a8b8b09e33c5e7a9b2662b944e9490382e07" translate="yes" xml:space="preserve">
          <source>The number of seconds you would like the session to last. If you would like a non-expiring session (until browser is closed) set the value to zero: 0</source>
          <target state="translated">세션이 지속되기를 원하는 시간 (초)입니다. 만료되지 않는 세션을 원할 경우 (브라우저가 닫힐 때까지) 값을 0으로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="9433d201289ca178b5989886415cf704647aa66f" translate="yes" xml:space="preserve">
          <source>The object fields may be unique to the database you are using. For instance, SQLite3 does not return data on column names, but has the additional &lt;em&gt;sequence&lt;/em&gt; field for compound foreign key definitions.</source>
          <target state="translated">개체 필드는 사용중인 데이터베이스에 고유 할 수 있습니다. 예를 들어, SQLite3는 열 이름에 대한 데이터를 반환하지 않지만 복합 외래 키 정의에 대한 추가 &lt;em&gt;시퀀스&lt;/em&gt; 필드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="4fb2e392309ad0fe1e8ed8dd4920cd31955e6ed3" translate="yes" xml:space="preserve">
          <source>The object gives you full abilities to grab any part of the request on it&amp;rsquo;s own:</source>
          <target state="translated">이 개체는 요청의 모든 부분을 자체적으로 파악할 수있는 모든 기능을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="e359c3078c839e3cfd95ab677cd2478d81c49adb" translate="yes" xml:space="preserve">
          <source>The old &lt;code&gt;sprintf()&lt;/code&gt; method of using &lt;strong&gt;%s&lt;/strong&gt; in your error messages will still work, however it will override the tags above. You should use one or the other.</source>
          <target state="translated">오류 메시지에 &lt;strong&gt;% s&lt;/strong&gt; 를 사용 하는 이전 &lt;code&gt;sprintf()&lt;/code&gt; 메소드 는 여전히 작동하지만 위의 태그를 재정의합니다. 둘 중 하나를 사용해야합니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="a259e59d14031de5c9cff2f5a26f5aff8e0ba7bc" translate="yes" xml:space="preserve">
          <source>The only URLs recognized are those that start with &amp;ldquo;www.&amp;rdquo; or with &amp;ldquo;://&amp;rdquo;.</source>
          <target state="translated">인식되는 유일한 URL은 &quot;www&quot;로 시작하는 URL입니다. 또는 &quot;: //&quot;와 함께.</target>
        </trans-unit>
        <trans-unit id="b41d5456447e20297abd21454aa048c9c94e157d" translate="yes" xml:space="preserve">
          <source>The only argument is string that is the command called and any parameters. This appears exactly as you would call it from the command line.</source>
          <target state="translated">The only argument is string that is the command called and any parameters. This appears exactly as you would call it from the command line.</target>
        </trans-unit>
        <trans-unit id="986c3fd4041811696377870f11fcdff47cddf399" translate="yes" xml:space="preserve">
          <source>The only thing that remains is ensuring that your model is set up to allow data to be saved properly. The &lt;code&gt;save()&lt;/code&gt; method that was used will determine whether the information should be inserted or if the row already exists and should be updated, based on the presence of a primary key. In this case, there is no &lt;code&gt;id&lt;/code&gt; field passed to it, so it will insert a new row into it&amp;rsquo;s table, &lt;strong&gt;news&lt;/strong&gt;.</source>
          <target state="translated">The only thing that remains is ensuring that your model is set up to allow data to be saved properly. The &lt;code&gt;save()&lt;/code&gt; method that was used will determine whether the information should be inserted or if the row already exists and should be updated, based on the presence of a primary key. In this case, there is no &lt;code&gt;id&lt;/code&gt; field passed to it, so it will insert a new row into it&amp;rsquo;s table, &lt;strong&gt;news&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="612b48d43ddb34ea8d1e711b76b0329fad57d383" translate="yes" xml:space="preserve">
          <source>The only thing that remains is writing a method that writes the data to the database. You&amp;rsquo;ll use the Query Builder class to insert the information and use the input library to get the posted data. Open up the model created earlier and add the following:</source>
          <target state="translated">남아있는 유일한 것은 데이터를 데이터베이스에 쓰는 메소드를 작성하는 것입니다. Query Builder 클래스를 사용하여 정보를 삽입하고 입력 라이브러리를 사용하여 게시 된 데이터를 가져옵니다. 앞에서 만든 모델을 열고 다음을 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="9d92c513b10ec67f5bddafb454bd792395760dbf" translate="yes" xml:space="preserve">
          <source>The only uncommented line there to start with should be:</source>
          <target state="translated">The only uncommented line there to start with should be:</target>
        </trans-unit>
        <trans-unit id="f4e2fba851a4f74610185ec64d69afc3aee4be02" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;current&amp;rdquo; link.</source>
          <target state="translated">&quot;현재&quot;링크의 시작 태그입니다.</target>
        </trans-unit>
        <trans-unit id="d07e4e56f702ba068334eb63819bf78dedac0db7" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;digit&amp;rdquo; link.</source>
          <target state="translated">&quot;숫자&quot;링크의 시작 태그입니다.</target>
        </trans-unit>
        <trans-unit id="99c2fae0475b3039f1b469a2ad97f7ea8927ecb2" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;first&amp;rdquo; link.</source>
          <target state="translated">&quot;첫 번째&quot;링크의 시작 태그입니다.</target>
        </trans-unit>
        <trans-unit id="0b78402049e9163588515bb91aea837365a4bb0b" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;last&amp;rdquo; link.</source>
          <target state="translated">&quot;마지막&quot;링크의 시작 태그입니다.</target>
        </trans-unit>
        <trans-unit id="5c8dfa6dae8b47a58f6da81f21164cb97fdd79ee" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;next&amp;rdquo; link.</source>
          <target state="translated">&quot;다음&quot;링크의 시작 태그입니다.</target>
        </trans-unit>
        <trans-unit id="c80f52965005088f9303eea0a908fc89db234f55" translate="yes" xml:space="preserve">
          <source>The opening tag for the &amp;ldquo;previous&amp;rdquo; link.</source>
          <target state="translated">&quot;이전&quot;링크의 시작 태그입니다.</target>
        </trans-unit>
        <trans-unit id="eb6098653cd9d24184788a65a965a61f1396c60e" translate="yes" xml:space="preserve">
          <source>The opening tag placed on the left side of the entire result.</source>
          <target state="translated">전체 결과의 왼쪽에 여는 태그입니다.</target>
        </trans-unit>
        <trans-unit id="26feb65dfe584899598879e6b3285c215e461784" translate="yes" xml:space="preserve">
          <source>The opposite of the &lt;code&gt;unix_to_time()&lt;/code&gt; function. Takes a &amp;ldquo;human&amp;rdquo; time as input and returns it as a UNIX timestamp. This is useful if you accept &amp;ldquo;human&amp;rdquo; formatted dates submitted via a form. Returns boolean FALSE date string passed to it is not formatted as indicated above.</source>
          <target state="translated">&lt;code&gt;unix_to_time()&lt;/code&gt; 함수 의 반대입니다 . &quot;인간&quot;시간을 입력으로 사용하고 UNIX 시간 소인으로 리턴합니다. 양식을 통해 제출 된 &quot;인간&quot;형식의 날짜를 수락하는 경우 유용합니다. 전달 된 부울 FALSE 날짜 문자열이 위에 표시된대로 형식화되지 않음을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="c56b538c28cffd6ef0cd794d080ee200154417ed" translate="yes" xml:space="preserve">
          <source>The optional parameter &lt;code&gt;$status_code&lt;/code&gt; determines what HTTP status code should be sent with the error. If &lt;code&gt;$status_code&lt;/code&gt; is less than 100, the HTTP status code will be set to 500, and the exit status code will be set to &lt;code&gt;$status_code + EXIT__AUTO_MIN&lt;/code&gt;. If that value is larger than &lt;code&gt;EXIT__AUTO_MAX&lt;/code&gt;, or if &lt;code&gt;$status_code&lt;/code&gt; is 100 or higher, the exit status code will be set to &lt;code&gt;EXIT_ERROR&lt;/code&gt;. You can check in &lt;em&gt;application/config/constants.php&lt;/em&gt; for more detail.</source>
          <target state="translated">선택적 매개 변수 &lt;code&gt;$status_code&lt;/code&gt; 는 오류와 함께 어떤 HTTP 상태 코드를 보내야하는지 결정합니다. 경우 &lt;code&gt;$status_code&lt;/code&gt; 적은 100보다, HTTP 상태 코드가 500로 설정되고, 종료 상태 코드로 설정됩니다 &lt;code&gt;$status_code + EXIT__AUTO_MIN&lt;/code&gt; . 해당 값이 &lt;code&gt;EXIT__AUTO_MAX&lt;/code&gt; 보다 크 거나 &lt;code&gt;$status_code&lt;/code&gt; status_code 가 100 이상이면 종료 상태 코드가 &lt;code&gt;EXIT_ERROR&lt;/code&gt; 로 설정됩니다 . 자세한 내용 은 &lt;em&gt;application / config / constants.php&lt;/em&gt; 에서 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b3099cf4db18381016774d7735aca10f232bf1f4" translate="yes" xml:space="preserve">
          <source>The optional second parameter allows you to force a particular redirection method. The available methods are &lt;strong&gt;auto&lt;/strong&gt;, &lt;strong&gt;location&lt;/strong&gt; and &lt;strong&gt;refresh&lt;/strong&gt;, with location being faster but less reliable on IIS servers. The default is &lt;strong&gt;auto&lt;/strong&gt;, which will attempt to intelligently choose the method based on the server environment.</source>
          <target state="translated">선택적 두 번째 매개 변수를 사용하면 특정 리디렉션 방법을 강제 할 수 있습니다. 사용 가능한 방법은 &lt;strong&gt;auto&lt;/strong&gt; , &lt;strong&gt;location&lt;/strong&gt; 및 &lt;strong&gt;refresh&lt;/strong&gt; 이며 IIS 서버에서는 위치가 더 빠르지 만 안정성이 떨어집니다. 기본값은 &lt;strong&gt;auto&lt;/strong&gt; 이며 서버 환경에 따라 방법을 지능적으로 선택하려고합니다.</target>
        </trans-unit>
        <trans-unit id="b829e9793ad91dcb288168b242d429438fd98712" translate="yes" xml:space="preserve">
          <source>The optional second parameter defaults to NULL and allows you to set the return value of this method when the requested URI segment is missing. For example, this would tell the method to return the number zero in the event of failure:</source>
          <target state="translated">선택적 두 번째 매개 변수의 기본값은 NULL이며 요청 된 URI 세그먼트가 누락 된 경우이 메소드의 리턴 값을 설정할 수 있습니다. 예를 들어, 실패한 경우 메소드가 숫자 0을 리턴하도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="4f4bc3346c54dd23c7dd117438a91c581a8a3ab0" translate="yes" xml:space="preserve">
          <source>The optional third parameter allows you to send a specific HTTP Response Code - this could be used for example to create 301 redirects for search engine purposes. The default Response Code is 302. The third parameter is &lt;em&gt;only&lt;/em&gt; available with &lt;strong&gt;location&lt;/strong&gt; redirects, and not &lt;em&gt;refresh&lt;/em&gt;. Examples:</source>
          <target state="translated">선택적인 세 번째 매개 변수를 사용하면 특정 HTTP 응답 코드를 보낼 수 있습니다. 예를 들어 검색 엔진 목적으로 301 리디렉션을 만드는 데 사용할 수 있습니다. 기본 응답 코드는 302입니다. 세 번째 매개 변수는 &lt;strong&gt;위치&lt;/strong&gt; 재 지정 &lt;em&gt;에서만&lt;/em&gt; 사용할 수 있으며 &lt;em&gt;refresh는&lt;/em&gt; 아닙니다 . 예 :&lt;strong&gt;&lt;/strong&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="dd62700f58241f5ce5914a422ac90368f6b35095" translate="yes" xml:space="preserve">
          <source>The order of checking the avability of the CSRF token is as follows:</source>
          <target state="translated">The order of checking the avability of the CSRF token is as follows:</target>
        </trans-unit>
        <trans-unit id="37e0ac1fa9194b76aefe9564e4db6e54feabb94b" translate="yes" xml:space="preserve">
          <source>The ordering above is for clarity, whereas the actual order the routes are created in, in RouteCollection, ensures proper route resolution</source>
          <target state="translated">The ordering above is for clarity, whereas the actual order the routes are created in, in RouteCollection, ensures proper route resolution</target>
        </trans-unit>
        <trans-unit id="2ac916d5032c815b00a1771448c4faba0ebe619e" translate="yes" xml:space="preserve">
          <source>The original encrypted data from CodeIgniter 1.x&amp;rsquo;s Encryption library</source>
          <target state="translated">CodeIgniter 1.x의 암호화 라이브러리에서 원래 암호화 된 데이터</target>
        </trans-unit>
        <trans-unit id="217193b44671101ccecb0f82d35be5e2ef8bb762" translate="yes" xml:space="preserve">
          <source>The other option is to download the .phar file from the &lt;a href=&quot;https://phpunit.de/getting-started/phpunit-7.html&quot;&gt;phpUnit&lt;/a&gt; site. This is a standalone file that should be placed within your project root.</source>
          <target state="translated">The other option is to download the .phar file from the &lt;a href=&quot;https://phpunit.de/getting-started/phpunit-7.html&quot;&gt;phpUnit&lt;/a&gt; site. This is a standalone file that should be placed within your project root.</target>
        </trans-unit>
        <trans-unit id="033d5535b676babd7615f2f4bf52b4dd073ee269" translate="yes" xml:space="preserve">
          <source>The other responsibility of the controller is to handle everything that pertains to HTTP requests - redirects, authentication, web safety, encoding, etc. In short, the controller is where you make sure that people are allowed to be there, and they get the data they need in a format they can use.</source>
          <target state="translated">The other responsibility of the controller is to handle everything that pertains to HTTP requests - redirects, authentication, web safety, encoding, etc. In short, the controller is where you make sure that people are allowed to be there, and they get the data they need in a format they can use.</target>
        </trans-unit>
        <trans-unit id="543a52e9f24d7925f22c54e0f9606d84d3a0c345" translate="yes" xml:space="preserve">
          <source>The other way to set the validation message to fields by functions,</source>
          <target state="translated">The other way to set the validation message to fields by functions,</target>
        </trans-unit>
        <trans-unit id="3099b59a3ac63f6c22b2f355e51cfef30d90d294" translate="yes" xml:space="preserve">
          <source>The other way to set the validation rules to fields by functions,</source>
          <target state="translated">The other way to set the validation rules to fields by functions,</target>
        </trans-unit>
        <trans-unit id="449d437bb3a83cbf49c5e5db500cc4c56c429eb7" translate="yes" xml:space="preserve">
          <source>The output from the view.</source>
          <target state="translated">The output from the view.</target>
        </trans-unit>
        <trans-unit id="bf4b76d60ae7ab2bb695f9d6b25b0b81bb327190" translate="yes" xml:space="preserve">
          <source>The output is NOT guaranteed to be cryptographically secure, just the best attempt at that.</source>
          <target state="translated">출력은 암호로 안전하다고 보장되지 않으며 최선의 시도입니다.</target>
        </trans-unit>
        <trans-unit id="9c32483d1a11476f49df83d8efcdab26c2fbc7e1" translate="yes" xml:space="preserve">
          <source>The overridden method call (typically the second segment of the URI) will be passed as a parameter to the &lt;code&gt;_remap()&lt;/code&gt; method:</source>
          <target state="translated">재정의 된 메소드 호출 (일반적으로 URI의 두 번째 세그먼트)은 &lt;code&gt;_remap()&lt;/code&gt; 메소드에 매개 변수로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="eb942a151ead6d45e7e0448031c6bbd312c3522f" translate="yes" xml:space="preserve">
          <source>The page below explains these three concepts in detail.</source>
          <target state="translated">아래 페이지는이 세 가지 개념을 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b3087829b5f65a28ac78f1937f54c958b92c4b6d" translate="yes" xml:space="preserve">
          <source>The pagination function automatically determines which segment of your URI contains the page number. If you need something different you can specify it.</source>
          <target state="translated">페이지 매김 기능은 페이지 번호를 포함하는 URI의 세그먼트를 자동으로 결정합니다. 다른 것이 필요한 경우 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2788530637b461ef233bae0df3f68df77d05ddc3" translate="yes" xml:space="preserve">
          <source>The parameter can be a string specifying the name of the model, or an instance of the model itself:</source>
          <target state="translated">The parameter can be a string specifying the name of the model, or an instance of the model itself:</target>
        </trans-unit>
        <trans-unit id="951924fa61ce56287c9ebe16db9a353faadb3028" translate="yes" xml:space="preserve">
          <source>The parameter usage is identical to using &lt;a href=&quot;#form_dropdown&quot;&gt;&lt;code&gt;form_dropdown()&lt;/code&gt;&lt;/a&gt; above, except of course that the name of the field will need to use POST array syntax, e.g. foo[].</source>
          <target state="translated">매개 변수 사용법은 필드 이름이 POST 배열 구문 (예 : foo [])을 사용해야한다는 점을 제외하고 위의 &lt;a href=&quot;#form_dropdown&quot;&gt; &lt;code&gt;form_dropdown()&lt;/code&gt; &lt;/a&gt; 사용과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="4f6a5c5d0d2778091facd32a1346332fe33f1f65" translate="yes" xml:space="preserve">
          <source>The password field must match the password confirmation field.</source>
          <target state="translated">비밀번호 필드는 비밀번호 확인 필드와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="f7e6b0324c8b2d067af6a096be5d6a15ffc23d6d" translate="yes" xml:space="preserve">
          <source>The password used to connect to the database.</source>
          <target state="translated">데이터베이스에 연결하는 데 사용되는 비밀번호입니다.</target>
        </trans-unit>
        <trans-unit id="5dea72232a3c7b3f256dba3a23a73774bc239ddf" translate="yes" xml:space="preserve">
          <source>The path are all of the segments within the site itself. As expected, the &lt;code&gt;getPath()&lt;/code&gt; and &lt;code&gt;setPath()&lt;/code&gt; methods can be used to manipulate it:</source>
          <target state="translated">The path are all of the segments within the site itself. As expected, the &lt;code&gt;getPath()&lt;/code&gt; and &lt;code&gt;setPath()&lt;/code&gt; methods can be used to manipulate it:</target>
        </trans-unit>
        <trans-unit id="3de7511a5028a0d8b341574c03a32a60d9e2847c" translate="yes" xml:space="preserve">
          <source>The path can be a relative or full server path. Returns FALSE (boolean) on failure.</source>
          <target state="translated">경로는 상대 또는 전체 서버 경로 일 수 있습니다. 실패시 FALSE (부울)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="badf76ddec366a5be5951ea4f88b35ee802eec41" translate="yes" xml:space="preserve">
          <source>The path is relative to your main site index.php file, NOT your controller or view files. CodeIgniter uses a front controller so paths are always relative to the main site index.</source>
          <target state="translated">경로는 컨트롤러 나보기 파일이 아닌 기본 사이트 index.php 파일과 관련이 있습니다. CodeIgniter는 전면 컨트롤러를 사용하므로 경로는 항상 기본 사이트 인덱스를 기준으로합니다.</target>
        </trans-unit>
        <trans-unit id="5a0704170a1dcc74db3ad6b49c795903791b04bd" translate="yes" xml:space="preserve">
          <source>The path is usually not needed since the method sets a root path.</source>
          <target state="translated">메소드가 루트 경로를 설정하므로 일반적으로 경로는 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5f435e3429663b68cab943a559442bf7e01264af" translate="yes" xml:space="preserve">
          <source>The path to the &lt;strong&gt;app&lt;/strong&gt; directory.</source>
          <target state="translated">The path to the &lt;strong&gt;app&lt;/strong&gt; directory.</target>
        </trans-unit>
        <trans-unit id="90fd378c87137deac2d99abdbe4bbc817c0f97df" translate="yes" xml:space="preserve">
          <source>The path to the &lt;strong&gt;system&lt;/strong&gt; directory.</source>
          <target state="translated">The path to the &lt;strong&gt;system&lt;/strong&gt; directory.</target>
        </trans-unit>
        <trans-unit id="bdac16f68a09a60aa65d865bc92256569c057123" translate="yes" xml:space="preserve">
          <source>The path to the &lt;strong&gt;writable&lt;/strong&gt; directory.</source>
          <target state="translated">The path to the &lt;strong&gt;writable&lt;/strong&gt; directory.</target>
        </trans-unit>
        <trans-unit id="2808cbf8523e72eb6a348b69e206a13a96ae9298" translate="yes" xml:space="preserve">
          <source>The path to the directory that holds the front controller.</source>
          <target state="translated">The path to the directory that holds the front controller.</target>
        </trans-unit>
        <trans-unit id="f967a2d54a002a077c1658322310f8ff395a8c5e" translate="yes" xml:space="preserve">
          <source>The path to the directory where the upload should be placed. The directory must be writable and the path can be absolute or relative.</source>
          <target state="translated">업로드 할 디렉토리의 경로입니다. 디렉토리는 쓰기 가능해야하며 경로는 절대적이거나 상대적 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c7b38221c729cd203ea7c057c7d66072c00d644" translate="yes" xml:space="preserve">
          <source>The path to the project root directory. Just above &lt;code&gt;APPPATH&lt;/code&gt;.</source>
          <target state="translated">The path to the project root directory. Just above &lt;code&gt;APPPATH&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a7abe13c2bd76ee461d902688613ef7d537e7d29" translate="yes" xml:space="preserve">
          <source>The path to which the session is applicable</source>
          <target state="translated">세션이 적용 가능한 경로</target>
        </trans-unit>
        <trans-unit id="1df368bf68675ec14171c2ba922e5036a5482210" translate="yes" xml:space="preserve">
          <source>The path to your migrations folder.</source>
          <target state="translated">마이그레이션 폴더의 경로입니다.</target>
        </trans-unit>
        <trans-unit id="f70627520160f723ca7ebf08057e94eba4ac515f" translate="yes" xml:space="preserve">
          <source>The port is an integer number between 0 and 65535. Each sheme has a default value associated with it.</source>
          <target state="translated">The port is an integer number between 0 and 65535. Each sheme has a default value associated with it.</target>
        </trans-unit>
        <trans-unit id="8d987bf0607846c92d40a5afced37d2e54265999" translate="yes" xml:space="preserve">
          <source>The possible options that are recognized are as follows:</source>
          <target state="translated">The possible options that are recognized are as follows:</target>
        </trans-unit>
        <trans-unit id="aeeb40f006fd925a239e6d152a360b90dccf6f39" translate="yes" xml:space="preserve">
          <source>The preferences described below allow you to tailor the image processing to suit your needs.</source>
          <target state="translated">아래 설명 된 환경 설정을 통해 필요에 맞게 이미지 처리를 조정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5590804d5ac59e3a0ff5acd9197296adf6afe862" translate="yes" xml:space="preserve">
          <source>The prefix is only needed if you need to avoid name collisions with other identically named cookies for your server.</source>
          <target state="translated">접두사는 서버의 다른 동일한 이름의 쿠키와 이름 충돌을 피해야하는 경우에만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="792a3c76c1bf7d603aed0a647e9088a398b0c665" translate="yes" xml:space="preserve">
          <source>The prefixed table name</source>
          <target state="translated">접두사 테이블 이름</target>
        </trans-unit>
        <trans-unit id="754cc3585642758b0387a50318352696106feaf9" translate="yes" xml:space="preserve">
          <source>The primary key name, FALSE if none</source>
          <target state="translated">기본 키 이름, 없으면 FALSE</target>
        </trans-unit>
        <trans-unit id="b021d74218222a9a03f11de255fd453b408f9abf" translate="yes" xml:space="preserve">
          <source>The property can be read multiple times.</source>
          <target state="translated">이 속성은 여러 번 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3035d35d242b46c8062bc74fae4834744f08b7d6" translate="yes" xml:space="preserve">
          <source>The push method is used to push a new value onto a session value that is an array. For instance, if the &amp;lsquo;hobbies&amp;rsquo; key contains an array of hobbies, you can add a new value onto the array like so:</source>
          <target state="translated">The push method is used to push a new value onto a session value that is an array. For instance, if the &amp;lsquo;hobbies&amp;rsquo; key contains an array of hobbies, you can add a new value onto the array like so:</target>
        </trans-unit>
        <trans-unit id="534780b9409598286acdb67f2fe9770c9ae1b871" translate="yes" xml:space="preserve">
          <source>The query library supports a powerful &lt;a href=&quot;http://api.jquery.com/category/effects/&quot;&gt;Effects&lt;/a&gt; repertoire. Before an effect can be used, it must be loaded:</source>
          <target state="translated">쿼리 라이브러리는 강력한 &lt;a href=&quot;http://api.jquery.com/category/effects/&quot;&gt;효과&lt;/a&gt; 레퍼토리를 지원합니다 . 효과를 사용하려면 먼저로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="bdf30968e43f490e7e83a4606306b6793516a6b1" translate="yes" xml:space="preserve">
          <source>The query variables can be manipulated through the class using simple string representations. Query values can only be set as a string currently.</source>
          <target state="translated">The query variables can be manipulated through the class using simple string representations. Query values can only be set as a string currently.</target>
        </trans-unit>
        <trans-unit id="a8a4093a730aaf09dad7243e11c02cf318121106" translate="yes" xml:space="preserve">
          <source>The query() function returns a database result &lt;strong&gt;object&lt;/strong&gt; when &amp;ldquo;read&amp;rdquo; type queries are run which you can use to &lt;a href=&quot;results&quot;&gt;show your results&lt;/a&gt;. When &amp;ldquo;write&amp;rdquo; type queries are run it simply returns TRUE or FALSE depending on success or failure. When retrieving data you will typically assign the query to your own variable, like this:</source>
          <target state="translated">The query() function returns a database result &lt;strong&gt;object&lt;/strong&gt; when &amp;ldquo;read&amp;rdquo; type queries are run which you can use to &lt;a href=&quot;results&quot;&gt;show your results&lt;/a&gt;. When &amp;ldquo;write&amp;rdquo; type queries are run it simply returns TRUE or FALSE depending on success or failure. When retrieving data you will typically assign the query to your own variable, like this:</target>
        </trans-unit>
        <trans-unit id="d2d6ea25a2ec4eda793a2e60e9751210ad04c9cf" translate="yes" xml:space="preserve">
          <source>The query() function returns a database result &lt;strong&gt;object&lt;/strong&gt; when &amp;ldquo;read&amp;rdquo; type queries are run, which you can use to &lt;a href=&quot;results&quot;&gt;show your results&lt;/a&gt;. When &amp;ldquo;write&amp;rdquo; type queries are run it simply returns TRUE or FALSE depending on success or failure. When retrieving data you will typically assign the query to your own variable, like this:</source>
          <target state="translated">query () 함수는 &quot;읽기&quot;유형 쿼리가 실행될 때 데이터베이스 결과 &lt;strong&gt;객체를&lt;/strong&gt; 반환하며 결과 를 &lt;a href=&quot;results&quot;&gt;표시&lt;/a&gt; 하는 데 사용할 수 있습니다 . &quot;쓰기&quot;유형 쿼리가 실행되면 성공 또는 실패에 따라 TRUE 또는 FALSE 만 반환합니다. 데이터를 검색 할 때 일반적으로 다음과 같이 쿼리를 고유 변수에 할당합니다.</target>
        </trans-unit>
        <trans-unit id="1379f592cece57e48c7022ff512dad1d880dad30" translate="yes" xml:space="preserve">
          <source>The question marks in the query are automatically replaced with the values in the array in the second parameter of the query function.</source>
          <target state="translated">쿼리의 물음표는 쿼리 함수의 두 번째 매개 변수에서 배열의 값으로 자동 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="24bbcae13b6997d6b5150f1b63f439acb44550f7" translate="yes" xml:space="preserve">
          <source>The reason for not including other popular algorithms, such as MD5 or SHA1 is that they are no longer considered secure enough and as such, we don&amp;rsquo;t want to encourage their usage. If you absolutely need to use them, it is easy to do so via PHP&amp;rsquo;s native &lt;a href=&quot;http://php.net/manual/en/function.hash-hmac.php&quot;&gt;hash_hmac()&lt;/a&gt; function.</source>
          <target state="translated">MD5 또는 SHA1과 같은 다른 인기있는 알고리즘을 포함하지 않는 이유는 더 이상 충분히 안전하지 않은 것으로 간주되어 사용을 장려하고 싶지 않기 때문입니다. 절대적으로 사용해야하는 경우 PHP의 기본 &lt;a href=&quot;http://php.net/manual/en/function.hash-hmac.php&quot;&gt;hash_hmac ()&lt;/a&gt; 함수 를 통해 쉽게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="135f4b060e2681aac836dc1c5430411d23f68d1d" translate="yes" xml:space="preserve">
          <source>The reason phrase (&amp;lsquo;OK&amp;rsquo;, &amp;lsquo;Created&amp;rsquo;, &amp;lsquo;Moved Permanently&amp;rsquo;) will be automatically added, but you can add custom reasons as the second parameter of the &lt;code&gt;setStatusCode()&lt;/code&gt; method:</source>
          <target state="translated">The reason phrase (&amp;lsquo;OK&amp;rsquo;, &amp;lsquo;Created&amp;rsquo;, &amp;lsquo;Moved Permanently&amp;rsquo;) will be automatically added, but you can add custom reasons as the second parameter of the &lt;code&gt;setStatusCode()&lt;/code&gt; method:</target>
        </trans-unit>
        <trans-unit id="7b971d9c453ba46fceb492df35d489f13fdff9cf" translate="yes" xml:space="preserve">
          <source>The reason phrase will be automatically generated based upon the official lists. If you need to set your own for a custom status code, you can pass the reason phrase as the second parameter:</source>
          <target state="translated">The reason phrase will be automatically generated based upon the official lists. If you need to set your own for a custom status code, you can pass the reason phrase as the second parameter:</target>
        </trans-unit>
        <trans-unit id="53626f44bf4399660a176d5b278799ffb497ac94" translate="yes" xml:space="preserve">
          <source>The reason this line is necessary is because your local constructor will be overriding the one in the parent controller class so we need to manually call it.</source>
          <target state="translated">이 줄이 필요한 이유는 로컬 생성자가 부모 컨트롤러 클래스의 생성자를 재정의하므로 수동으로 호출해야하기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="162bc5a9c2ae759089321bb03ecb46b6bcb9d77a" translate="yes" xml:space="preserve">
          <source>The reason we use a multi-dimensional array rather than a more simple one is to permit you to optionally store multiple sets of connection values. If, for example, you run multiple environments (development, production, test, etc.) under a single installation, you can set up a connection group for each, then switch between groups as needed. For example, to set up a &amp;ldquo;test&amp;rdquo; environment you would do this:</source>
          <target state="translated">보다 단순한 배열이 아닌 다차원 배열을 사용하는 이유는 여러 연결 값 세트를 선택적으로 저장할 수 있기 때문입니다. 예를 들어 단일 설치에서 여러 환경 (개발, 프로덕션, 테스트 등)을 실행하는 경우 각각에 대해 연결 그룹을 설정 한 다음 필요에 따라 그룹간에 전환 할 수 있습니다. 예를 들어 &quot;테스트&quot;환경을 설정하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="8e8217e709c8091e4df7fb0cdc3a04c6942d640b" translate="yes" xml:space="preserve">
          <source>The recommended method for organizing your classes is to create one or more namespaces for your application&amp;rsquo;s files. This is most important for any business-logic related classes, entity classes, etc. The &lt;code&gt;psr4&lt;/code&gt; array in the configuration file allows you to map the namespace to the directory those classes can be found in:</source>
          <target state="translated">The recommended method for organizing your classes is to create one or more namespaces for your application&amp;rsquo;s files. This is most important for any business-logic related classes, entity classes, etc. The &lt;code&gt;psr4&lt;/code&gt; array in the configuration file allows you to map the namespace to the directory those classes can be found in:</target>
        </trans-unit>
        <trans-unit id="fcf8416ee30decb89972d2e89a3927e19d279f61" translate="yes" xml:space="preserve">
          <source>The recommended method is to install it in your project using &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;. While it&amp;rsquo;s possible to install it globally we do not recommend it, since it can cause compatibility issues with other projects on your system as time goes on.</source>
          <target state="translated">The recommended method is to install it in your project using &lt;a href=&quot;https://getcomposer.org/&quot;&gt;Composer&lt;/a&gt;. While it&amp;rsquo;s possible to install it globally we do not recommend it, since it can cause compatibility issues with other projects on your system as time goes on.</target>
        </trans-unit>
        <trans-unit id="b4a3c9d3cb629717c7060d49268967f6caea11d8" translate="yes" xml:space="preserve">
          <source>The referrer, if the user agent was referred from another site. Typically you&amp;rsquo;ll test for this as follows:</source>
          <target state="translated">사용자 에이전트가 다른 사이트에서 참조 된 경우 리퍼러 일반적으로 다음과 같이 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="48c4266e926efd47ac7b17480bf10dc1d477b782" translate="yes" xml:space="preserve">
          <source>The renderSection() method only has one argument - the name of the section. That way any child views know what to name the content section.</source>
          <target state="translated">The renderSection() method only has one argument - the name of the section. That way any child views know what to name the content section.</target>
        </trans-unit>
        <trans-unit id="4eaa0825ae517f6ae96525d29c03d6a82f4ba042" translate="yes" xml:space="preserve">
          <source>The rendered text for the chosen view</source>
          <target state="translated">The rendered text for the chosen view</target>
        </trans-unit>
        <trans-unit id="9d49b579a65bbc3eea080b073eda4bd973d41bfe" translate="yes" xml:space="preserve">
          <source>The renderer is smart enough to detect whether the view should be rendered on its own, or if it needs a layout.</source>
          <target state="translated">The renderer is smart enough to detect whether the view should be rendered on its own, or if it needs a layout.</target>
        </trans-unit>
        <trans-unit id="473e001be07fea4045e8e7ffb4f99c36be426ec1" translate="yes" xml:space="preserve">
          <source>The report will be formatted in an HTML table for viewing. If you prefer the raw data you can retrieve an array using:</source>
          <target state="translated">보고서는보기 위해 HTML 테이블로 형식화됩니다. 원시 데이터를 선호하는 경우 다음을 사용하여 배열을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2cbfc6b5f1ca58dea1ad7bb41a95ec9beb01244" translate="yes" xml:space="preserve">
          <source>The request also includes a number of optional request headers that can contain a wide variety of information such as what languages the client wants the content displayed as, the types of formats the client accepts, and much more. Wikipedia has an article that lists &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_HTTP_header_fields&quot;&gt;all header fields&lt;/a&gt; if you want to look it over.</source>
          <target state="translated">The request also includes a number of optional request headers that can contain a wide variety of information such as what languages the client wants the content displayed as, the types of formats the client accepts, and much more. Wikipedia has an article that lists &lt;a href=&quot;https://en.wikipedia.org/wiki/List_of_HTTP_header_fields&quot;&gt;all header fields&lt;/a&gt; if you want to look it over.</target>
        </trans-unit>
        <trans-unit id="141cfb8141e772cbbbcee0941601a1f0531812b3" translate="yes" xml:space="preserve">
          <source>The request class does a lot of work in the background for you, that you never need to worry about. The &lt;code&gt;isAJAX()&lt;/code&gt; and &lt;code&gt;isSecure()&lt;/code&gt; methods check several different methods to determine the correct answer.</source>
          <target state="translated">The request class does a lot of work in the background for you, that you never need to worry about. The &lt;code&gt;isAJAX()&lt;/code&gt; and &lt;code&gt;isSecure()&lt;/code&gt; methods check several different methods to determine the correct answer.</target>
        </trans-unit>
        <trans-unit id="a923077313b07e5cc40aacf2ed523d545d760292" translate="yes" xml:space="preserve">
          <source>The request class is an object-oriented representation of an HTTP request. This is meant to work for both incoming, such as a request to the application from a browser, and outgoing requests, like would be used to send a request from the application to a third-party application. This class provides the common functionality they both need, but both cases have custom classes that extend from the Request class to add specific functionality.</source>
          <target state="translated">The request class is an object-oriented representation of an HTTP request. This is meant to work for both incoming, such as a request to the application from a browser, and outgoing requests, like would be used to send a request from the application to a third-party application. This class provides the common functionality they both need, but both cases have custom classes that extend from the Request class to add specific functionality.</target>
        </trans-unit>
        <trans-unit id="d8ef39f839d1c0b0f1895f65d12b0bbf5c033ded" translate="yes" xml:space="preserve">
          <source>The request sending method. Returns boolean TRUE or FALSE based on success for failure, enabling it to be used conditionally.</source>
          <target state="translated">요청 전송 방법 실패 성공에 따라 부울 TRUE 또는 FALSE를 반환하여 조건부로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3acd8516bd78787105685c2d39db6a411c8eda54" translate="yes" xml:space="preserve">
          <source>The request would look something like this:</source>
          <target state="translated">The request would look something like this:</target>
        </trans-unit>
        <trans-unit id="5e83094284b736629d3070ed2c7f6b78225ac6f1" translate="yes" xml:space="preserve">
          <source>The requested row or NULL if it doesn&amp;rsquo;t exist</source>
          <target state="translated">요청 된 행 또는 존재하지 않는 경우 NULL</target>
        </trans-unit>
        <trans-unit id="7ed5cb7dded7d330df172e12152cbcc7a58cbaad" translate="yes" xml:space="preserve">
          <source>The requested session data item, or NULL if it doesn&amp;rsquo;t exist</source>
          <target state="translated">요청 된 세션 데이터 항목 또는 존재하지 않는 경우 NULL</target>
        </trans-unit>
        <trans-unit id="f5e449c67ce2307e2e8ffbe12fcfa44f925e3958" translate="yes" xml:space="preserve">
          <source>The resizing method will create a copy of the image file (and preserve the original) if you set a path and/or a new filename using this preference:</source>
          <target state="translated">이 환경 설정을 사용하여 경로 및 / 또는 새 파일 이름을 설정하면 크기 조정 방법으로 이미지 파일의 사본을 만들고 원본을 보존합니다.</target>
        </trans-unit>
        <trans-unit id="3723fcd40592ab14dee601b5cda7a34db59a7a9a" translate="yes" xml:space="preserve">
          <source>The resizing method will create a thumbnail file (and preserve the original) if you set this preference to TRUE:</source>
          <target state="translated">이 환경 설정을 TRUE로 설정하면 크기 조정 방법은 축소판 파일을 생성하고 원본을 보존합니다.</target>
        </trans-unit>
        <trans-unit id="960e95de6fa3b33d643ea0fda963277df8956eca" translate="yes" xml:space="preserve">
          <source>The response is an array with two elements: &lt;code&gt;error&lt;/code&gt; and &lt;code&gt;messages&lt;/code&gt;. The &lt;code&gt;error&lt;/code&gt; element contains the status code of the error. The &lt;code&gt;messages&lt;/code&gt; element contains an array of error messages. It would look something like:</source>
          <target state="translated">The response is an array with two elements: &lt;code&gt;error&lt;/code&gt; and &lt;code&gt;messages&lt;/code&gt; . The &lt;code&gt;error&lt;/code&gt; element contains the status code of the error. The &lt;code&gt;messages&lt;/code&gt; element contains an array of error messages. It would look something like:</target>
        </trans-unit>
        <trans-unit id="67fb1d166c1d535cbeb346cae9c9ae96388d4914" translate="yes" xml:space="preserve">
          <source>The response object MUST be returned for the download to be sent to the client. This allows the response to be passed through all &lt;strong&gt;after&lt;/strong&gt; filters before being sent to the client.</source>
          <target state="translated">The response object MUST be returned for the download to be sent to the client. This allows the response to be passed through all &lt;strong&gt;after&lt;/strong&gt; filters before being sent to the client.</target>
        </trans-unit>
        <trans-unit id="f7295f2eb5d3f1a64029c7fcbcb0ef1e3ec7e79f" translate="yes" xml:space="preserve">
          <source>The response tells the client what version of the HTTP specification that it&amp;rsquo;s using and, probably most importantly, the status code (200). The status code is one of a number of codes that have been standardized to have a very specific meaning to the client. This can tell them that it was successful (200), or that the page wasn&amp;rsquo;t found (404). Head over to IANA for a &lt;a href=&quot;https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml&quot;&gt;full list of HTTP status codes&lt;/a&gt;.</source>
          <target state="translated">The response tells the client what version of the HTTP specification that it&amp;rsquo;s using and, probably most importantly, the status code (200). The status code is one of a number of codes that have been standardized to have a very specific meaning to the client. This can tell them that it was successful (200), or that the page wasn&amp;rsquo;t found (404). Head over to IANA for a &lt;a href=&quot;https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml&quot;&gt;full list of HTTP status codes&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="241ac6f67643809e3d0ba82124bf9b126d3a950d" translate="yes" xml:space="preserve">
          <source>The response you get back contains a number of helper methods to inspect the HTML output within the response. These are useful for using within assertions in your tests.</source>
          <target state="translated">The response you get back contains a number of helper methods to inspect the HTML output within the response. These are useful for using within assertions in your tests.</target>
        </trans-unit>
        <trans-unit id="62fe0a22e4f9a64b271bac8530c593bf78f6f80e" translate="yes" xml:space="preserve">
          <source>The result ID can be accessed from within your result object, like this:</source>
          <target state="translated">다음과 같이 결과 개체 내에서 결과 ID에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdc79b19e07924531643d2dd8e5c7690115615d2" translate="yes" xml:space="preserve">
          <source>The resulting query will be:</source>
          <target state="translated">결과 쿼리는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7191e9006d47bcdaaf39943a4cbb959c85d49989" translate="yes" xml:space="preserve">
          <source>The return from &lt;code&gt;make()&lt;/code&gt; is ready to be used in tests or inserted into the database. Alternatively &lt;code&gt;Fabricator&lt;/code&gt; includes the &lt;code&gt;create()&lt;/code&gt; command to insert it for you, and return the result. Due to model callbacks, database formatting, and special keys like primary and timestamps the return from &lt;code&gt;create()&lt;/code&gt; can differ from &lt;code&gt;make()&lt;/code&gt;. You might get back something like this:</source>
          <target state="translated">The return from &lt;code&gt;make()&lt;/code&gt; is ready to be used in tests or inserted into the database. Alternatively &lt;code&gt;Fabricator&lt;/code&gt; includes the &lt;code&gt;create()&lt;/code&gt; command to insert it for you, and return the result. Due to model callbacks, database formatting, and special keys like primary and timestamps the return from &lt;code&gt;create()&lt;/code&gt; can differ from &lt;code&gt;make()&lt;/code&gt; . You might get back something like this:</target>
        </trans-unit>
        <trans-unit id="552ff9b4a1ff3577d15ca1dff4eae1875e6dfe25" translate="yes" xml:space="preserve">
          <source>The return type of &lt;code&gt;make()&lt;/code&gt; mimics what is defined in the representative model, but you can force a type using the methods directly:</source>
          <target state="translated">The return type of &lt;code&gt;make()&lt;/code&gt; mimics what is defined in the representative model, but you can force a type using the methods directly:</target>
        </trans-unit>
        <trans-unit id="a8fdf090183c534e897d51d88ff6c8f58eb4c414" translate="yes" xml:space="preserve">
          <source>The returned strings do NOT include quotes around them.</source>
          <target state="translated">반환 된 문자열에는 따옴표가 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ade6cba23328820ffe2f094c01d372482db87f73" translate="yes" xml:space="preserve">
          <source>The returned value depends on the underlying driver in use. For example, a &lt;code&gt;mysqli&lt;/code&gt; instance will be returned with the &amp;lsquo;mysqli&amp;rsquo; driver.</source>
          <target state="translated">반환되는 값은 사용중인 기본 드라이버에 따라 다릅니다. 예를 들어, &lt;code&gt;mysqli&lt;/code&gt; 인스턴스는 'mysqli'드라이버와 함께 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4a814bef1ae8b669e2b0c1c9284241fc620cebf0" translate="yes" xml:space="preserve">
          <source>The roman number converted from given parameter</source>
          <target state="translated">The roman number converted from given parameter</target>
        </trans-unit>
        <trans-unit id="76864c0b8a4a8c48009cbebda3f61a37893a4f7b" translate="yes" xml:space="preserve">
          <source>The rotate() method allows you to rotate an image in 90 degree increments:</source>
          <target state="translated">The rotate() method allows you to rotate an image in 90 degree increments:</target>
        </trans-unit>
        <trans-unit id="2eb24489043c4632da13ad01c7551206e260ca87" translate="yes" xml:space="preserve">
          <source>The routes are matched in the order they are specified, so if you have a resource photos above a get &amp;lsquo;photos/poll&amp;rsquo; the show action&amp;rsquo;s route for the resource line will be matched before the get line. To fix this, move the get line above the resource line so that it is matched first.</source>
          <target state="translated">The routes are matched in the order they are specified, so if you have a resource photos above a get &amp;lsquo;photos/poll&amp;rsquo; the show action&amp;rsquo;s route for the resource line will be matched before the get line. To fix this, move the get line above the resource line so that it is matched first.</target>
        </trans-unit>
        <trans-unit id="8ba5b8d415b0269d474dcb1bedecda88f60c074c" translate="yes" xml:space="preserve">
          <source>The routing for this would be:</source>
          <target state="translated">The routing for this would be:</target>
        </trans-unit>
        <trans-unit id="1461fde23dadf89488e2ffe58300e891af4d872f" translate="yes" xml:space="preserve">
          <source>The routing has been beefed up</source>
          <target state="translated">The routing has been beefed up</target>
        </trans-unit>
        <trans-unit id="9d6e8f5292c2b91c2f90d258564db98b6a6ef546" translate="yes" xml:space="preserve">
          <source>The row ID is a unique identifier that is generated by the cart code when an item is added to the cart. The reason a unique ID is created is so that identical products with different options can be managed by the cart.</source>
          <target state="translated">행 ID는 상품이 장바구니에 추가 될 때 장바구니 코드에 의해 생성되는 고유 식별자입니다. 고유 한 ID가 생성되는 이유는 다른 옵션을 가진 동일한 제품을 카트에서 관리 할 수 ​​있기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="8f50172784adc8f27b1800442fd74ced1ed12cb9" translate="yes" xml:space="preserve">
          <source>The same &lt;a href=&quot;https://github.com/codeigniter4/framework&quot;&gt;CodeIgniter 4 framework&lt;/a&gt; repository described in &amp;ldquo;Manual Installation&amp;rdquo; can also be added to an existing project using Composer.</source>
          <target state="translated">The same &lt;a href=&quot;https://github.com/codeigniter4/framework&quot;&gt;CodeIgniter 4 framework&lt;/a&gt; repository described in &amp;ldquo;Manual Installation&amp;rdquo; can also be added to an existing project using Composer.</target>
        </trans-unit>
        <trans-unit id="dcb544c2b2de140573f98cba19cbb9e255c4b209" translate="yes" xml:space="preserve">
          <source>The same holds for a &lt;em&gt;short prefix&lt;/em&gt;, which is a namespace using only the lowercase version of the configuration class name. If the short prefix matches the class name, the value from &lt;strong&gt;.env&lt;/strong&gt; replaces the configuration file value.</source>
          <target state="translated">The same holds for a &lt;em&gt;short prefix&lt;/em&gt;, which is a namespace using only the lowercase version of the configuration class name. If the short prefix matches the class name, the value from &lt;strong&gt;.env&lt;/strong&gt; replaces the configuration file value.</target>
        </trans-unit>
        <trans-unit id="283d461ccbbbd3833da512f1cb92f5077d0ed78a" translate="yes" xml:space="preserve">
          <source>The save method also can make working with custom class result objects much simpler by recognizing a non-simple object and grabbing its public and protected values into an array, which is then passed to the appropriate insert or update method. This allows you to work with Entity classes in a very clean way. Entity classes are simple classes that represent a single instance of an object type, like a user, a blog post, job, etc. This class is responsible for maintaining the business logic surrounding the object itself, like formatting elements in a certain way, etc. They shouldn&amp;rsquo;t have any idea about how they are saved to the database. At their simplest, they might look like this:</source>
          <target state="translated">The save method also can make working with custom class result objects much simpler by recognizing a non-simple object and grabbing its public and protected values into an array, which is then passed to the appropriate insert or update method. This allows you to work with Entity classes in a very clean way. Entity classes are simple classes that represent a single instance of an object type, like a user, a blog post, job, etc. This class is responsible for maintaining the business logic surrounding the object itself, like formatting elements in a certain way, etc. They shouldn&amp;rsquo;t have any idea about how they are saved to the database. At their simplest, they might look like this:</target>
        </trans-unit>
        <trans-unit id="51b377cd0e3c2c56e9fa0ddf3a272315dc338478" translate="yes" xml:space="preserve">
          <source>The scheme is frequently &amp;lsquo;http&amp;rsquo; or &amp;lsquo;https&amp;rsquo;, but any scheme is supported, including &amp;lsquo;file&amp;rsquo;, &amp;lsquo;mailto&amp;rsquo;, etc.</source>
          <target state="translated">The scheme is frequently &amp;lsquo;http&amp;rsquo; or &amp;lsquo;https&amp;rsquo;, but any scheme is supported, including &amp;lsquo;file&amp;rsquo;, &amp;lsquo;mailto&amp;rsquo;, etc.</target>
        </trans-unit>
        <trans-unit id="ce5ea4aee98ff3225fe8fddaebff0247002a413c" translate="yes" xml:space="preserve">
          <source>The second (optional) parameter allows you to optionally pass configuration setting. You will typically pass these as an array:</source>
          <target state="translated">두 번째 (선택적) 매개 변수를 사용하면 선택적으로 구성 설정을 전달할 수 있습니다. 일반적으로 이것을 배열로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="ff3e08049ba61d132bb5f67ff5f2c2cb7efe6feb" translate="yes" xml:space="preserve">
          <source>The second (optional) parameter allows you to optionally pass configuration settings. You will typically pass these as an array:</source>
          <target state="translated">두 번째 (선택적) 매개 변수를 사용하면 선택적으로 구성 설정을 전달할 수 있습니다. 일반적으로 이것을 배열로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="0df64ad357a37321c1f07de0851312afe2e745d1" translate="yes" xml:space="preserve">
          <source>The second &lt;strong&gt;optional&lt;/strong&gt; parameter can take an associative array or an object as input, which it runs through the PHP &lt;a href=&quot;http://php.net/extract&quot;&gt;extract()&lt;/a&gt; function to convert to variables that can be used in your view files. Again, read the &lt;a href=&quot;../general/views&quot;&gt;Views&lt;/a&gt; page to learn how this might be useful.</source>
          <target state="translated">두 번째 &lt;strong&gt;선택적&lt;/strong&gt; 매개 변수는 연관 배열 또는 오브젝트를 입력으로 취할 수 있으며, 이는 PHP &lt;a href=&quot;http://php.net/extract&quot;&gt;extract ()&lt;/a&gt; 함수를 통해 실행 되어보기 파일에서 사용할 수있는 변수로 변환됩니다. 다시 한 번 &lt;a href=&quot;../general/views&quot;&gt;보기&lt;/a&gt; 페이지를 읽고 이것이 어떻게 유용한 지 알아보십시오.</target>
        </trans-unit>
        <trans-unit id="9b2700da8d3a489daddc87646edb95808421f95a" translate="yes" xml:space="preserve">
          <source>The second and third parameters enable you to set a limit and offset clause:</source>
          <target state="translated">두 번째 및 세 번째 매개 변수를 사용하면 limit 및 offset 절을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c1dec89e930add4191cafe495c036fcb96ae4ba" translate="yes" xml:space="preserve">
          <source>The second and third parameters match up to the &lt;code&gt;depth&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments of the &lt;a href=&quot;https://www.php.net/manual/en/function.json-decode.php&quot;&gt;json_decode&lt;/a&gt; PHP function.</source>
          <target state="translated">The second and third parameters match up to the &lt;code&gt;depth&lt;/code&gt; and &lt;code&gt;options&lt;/code&gt; arguments of the &lt;a href=&quot;https://www.php.net/manual/en/function.json-decode.php&quot;&gt;json_decode&lt;/a&gt; PHP function.</target>
        </trans-unit>
        <trans-unit id="91f730e2cc7faffcffd285a5b539592095eb2a53" translate="yes" xml:space="preserve">
          <source>The second function, &lt;code&gt;single_service()&lt;/code&gt; works just like &lt;code&gt;service()&lt;/code&gt; but returns a new instance of the class:</source>
          <target state="translated">The second function, &lt;code&gt;single_service()&lt;/code&gt; works just like &lt;code&gt;service()&lt;/code&gt; but returns a new instance of the class:</target>
        </trans-unit>
        <trans-unit id="19ec84c78c7a65810139ab1bcd407a98da99e1ea" translate="yes" xml:space="preserve">
          <source>The second method is by passing a &lt;code&gt;body&lt;/code&gt; option in. This is provided to maintain Guzzle API compatibility, and functions the exact same way as the previous example. The value must be a string:</source>
          <target state="translated">The second method is by passing a &lt;code&gt;body&lt;/code&gt; option in. This is provided to maintain Guzzle API compatibility, and functions the exact same way as the previous example. The value must be a string:</target>
        </trans-unit>
        <trans-unit id="a174af9ce4f53236e452cb6de7a327b0b09ce731" translate="yes" xml:space="preserve">
          <source>The second method uses a custom placeholder to detect the desired locale and set it on the Request. The placeholder &lt;code&gt;{locale}&lt;/code&gt; can be placed as a segment in your route. If present, the contents of the matching segment will be your locale:</source>
          <target state="translated">The second method uses a custom placeholder to detect the desired locale and set it on the Request. The placeholder &lt;code&gt;{locale}&lt;/code&gt; can be placed as a segment in your route. If present, the contents of the matching segment will be your locale:</target>
        </trans-unit>
        <trans-unit id="c70906f986bd1e99f2cc602a6ab1b73c0d2f269e" translate="yes" xml:space="preserve">
          <source>The second optional parameter lets you run the data through the PHP&amp;rsquo;s filters. Pass in the desired filter type as the second parameter:</source>
          <target state="translated">The second optional parameter lets you run the data through the PHP&amp;rsquo;s filters. Pass in the desired filter type as the second parameter:</target>
        </trans-unit>
        <trans-unit id="5b3dd961607875370c6235e14612e668e83f6b7b" translate="yes" xml:space="preserve">
          <source>The second optional parameter lets you run the data through the XSS filter. It&amp;rsquo;s enabled by setting the second parameter to boolean TRUE or by setting your &lt;code&gt;$config['global_xss_filtering']&lt;/code&gt; to TRUE.</source>
          <target state="translated">두 번째 선택적 매개 변수를 사용하면 XSS 필터를 통해 데이터를 실행할 수 있습니다. 두 번째 매개 변수를 부울 TRUE로 설정하거나 &lt;code&gt;$config['global_xss_filtering']&lt;/code&gt; 을 TRUE 로 설정하여 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="386329d69f1274d273fa0c52d4d9e0d5f01e7caa" translate="yes" xml:space="preserve">
          <source>The second parameter accepts an array of options that can be used to modify the routes that are generated.</source>
          <target state="translated">The second parameter accepts an array of options that can be used to modify the routes that are generated.</target>
        </trans-unit>
        <trans-unit id="69aca2d451bad6a32d42cf9ac93905c09823f63b" translate="yes" xml:space="preserve">
          <source>The second parameter accepts an array of options that can be used to modify the routes that are generated. While these routes are geared toward API-usage, where more methods are allowed, you can pass in the &amp;lsquo;websafe&amp;rsquo; option to have it generate update and delete methods that work with HTML forms:</source>
          <target state="translated">The second parameter accepts an array of options that can be used to modify the routes that are generated. While these routes are geared toward API-usage, where more methods are allowed, you can pass in the &amp;lsquo;websafe&amp;rsquo; option to have it generate update and delete methods that work with HTML forms:</target>
        </trans-unit>
        <trans-unit id="eaf26f12d355fcc18f52841c1ddf07d1771920c6" translate="yes" xml:space="preserve">
          <source>The second parameter determines the word delimiter. By default dashes are used. Preferred options are: &lt;strong&gt;-&lt;/strong&gt; (dash) or &lt;strong&gt;_&lt;/strong&gt; (underscore)</source>
          <target state="translated">두 번째 매개 변수는 단어 분리 문자를 결정합니다. 기본적으로 대시가 사용됩니다. 선호하는 옵션은 다음과 같습니다 &lt;strong&gt;.-&lt;/strong&gt; (대시) 또는 &lt;strong&gt;_&lt;/strong&gt; (밑줄)</target>
        </trans-unit>
        <trans-unit id="d16dd4c639ea165f67d8a2f679ec71d32e7d6f2a" translate="yes" xml:space="preserve">
          <source>The second parameter determines the word delimiter. By default dashes are used. Preferred options are: &lt;strong&gt;-&lt;/strong&gt; (dash) or &lt;strong&gt;_&lt;/strong&gt; (underscore).</source>
          <target state="translated">The second parameter determines the word delimiter. By default dashes are used. Preferred options are: &lt;strong&gt;-&lt;/strong&gt; (dash) or &lt;strong&gt;_&lt;/strong&gt; (underscore).</target>
        </trans-unit>
        <trans-unit id="90a240ca98719ba45cd84aedb73cb7ec0bf400a8" translate="yes" xml:space="preserve">
          <source>The second parameter determines whether URLs and e-mails are converted or just one or the other. Default behavior is both if the parameter is not specified. E-mail links are encoded as &lt;a href=&quot;#safe_mailto&quot;&gt;&lt;code&gt;safe_mailto()&lt;/code&gt;&lt;/a&gt; as shown above.</source>
          <target state="translated">두 번째 매개 변수는 URL과 전자 메일이 변환되는지 아니면 하나만 변환되는지를 결정합니다. 매개 변수가 지정되지 않은 경우 기본 동작은 둘 다입니다. 전자 메일 링크는 위와 같이 &lt;a href=&quot;#safe_mailto&quot;&gt; &lt;code&gt;safe_mailto()&lt;/code&gt; &lt;/a&gt; 로 인코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="11508399195304b8ca2bd55790044c4013c26af1" translate="yes" xml:space="preserve">
          <source>The second parameter determines whether URLs and e-mails are converted or just one or the other. The default behavior is both if the parameter is not specified. E-mail links are encoded as &lt;a href=&quot;#safe_mailto&quot;&gt;&lt;code&gt;safe_mailto()&lt;/code&gt;&lt;/a&gt; as shown above.</source>
          <target state="translated">The second parameter determines whether URLs and e-mails are converted or just one or the other. The default behavior is both if the parameter is not specified. E-mail links are encoded as &lt;a href=&quot;#safe_mailto&quot;&gt; &lt;code&gt;safe_mailto()&lt;/code&gt; &lt;/a&gt; as shown above.</target>
        </trans-unit>
        <trans-unit id="5797d2b9190725d83f6f0abc3b297f46bbbb91b8" translate="yes" xml:space="preserve">
          <source>The second parameter enables you to set whether or not the query builder query will be reset (by default it will be reset, just like when using &lt;code&gt;$this-&amp;gt;db-&amp;gt;get()&lt;/code&gt;):</source>
          <target state="translated">두 번째 매개 변수를 사용하면 조회 빌더 조회를 재설정할지 여부를 설정할 수 있습니다 (기본적으로 &lt;code&gt;$this-&amp;gt;db-&amp;gt;get()&lt;/code&gt; 사용시와 같이 재설정 됨 ).</target>
        </trans-unit>
        <trans-unit id="9b515246b8f6aa754bd23425a60d8b28e10bd8a2" translate="yes" xml:space="preserve">
          <source>The second parameter enables you to set whether or not the query builder query will be reset (by default it will be&amp;ndash;just like $builder-&amp;gt;insert()):</source>
          <target state="translated">The second parameter enables you to set whether or not the query builder query will be reset (by default it will be&amp;ndash;just like $builder-&amp;gt;insert()):</target>
        </trans-unit>
        <trans-unit id="75c161bfe896d1841c7ea0ccc907fe14b176986d" translate="yes" xml:space="preserve">
          <source>The second parameter enables you to set whether or not the query builder query will be reset (by default it will be&amp;ndash;just like $this-&amp;gt;db-&amp;gt;insert()):</source>
          <target state="translated">두 번째 매개 변수를 사용하면 쿼리 작성기 쿼리를 다시 설정할지 여부를 설정할 수 있습니다 (기본적으로 $ this-&amp;gt; db-&amp;gt; insert ()와 같습니다).</target>
        </trans-unit>
        <trans-unit id="693f823c971a8ece41b08ee055ad884bdd4497ec" translate="yes" xml:space="preserve">
          <source>The second parameter lets you set a CSS class name for the menu.</source>
          <target state="translated">두 번째 매개 변수를 사용하면 메뉴의 CSS 클래스 이름을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="898a1e11ac60296e9fafee952e3f368403def4df" translate="yes" xml:space="preserve">
          <source>The second parameter lets you set a result offset.</source>
          <target state="translated">두 번째 매개 변수를 사용하면 결과 오프셋을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8376a81d6b363e1079ef94758c698a41c737c688" translate="yes" xml:space="preserve">
          <source>The second parameter lets you set default key names, so that the array returned will always contain expected indexes, even if missing from the URI. Example:</source>
          <target state="translated">두 번째 매개 변수를 사용하면 기본 키 이름을 설정하여 반환 된 배열에 URI에서 누락 된 경우에도 항상 예상되는 인덱스가 포함되도록 할 수 있습니다. 예:</target>
        </trans-unit>
        <trans-unit id="a28a584474aca7216a40c4b2bf5d872ece32babe" translate="yes" xml:space="preserve">
          <source>The second parameter lets you set the direction of the result. Options are &lt;strong&gt;ASC&lt;/strong&gt;, &lt;strong&gt;DESC&lt;/strong&gt; AND &lt;strong&gt;RANDOM&lt;/strong&gt;.</source>
          <target state="translated">두 번째 매개 변수를 사용하면 결과 방향을 설정할 수 있습니다. 옵션은 &lt;strong&gt;ASC&lt;/strong&gt; , &lt;strong&gt;DESC&lt;/strong&gt; 및 &lt;strong&gt;RANDOM&lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="61a285b5f0cd09dff994f73b92d3981ee0f92095" translate="yes" xml:space="preserve">
          <source>The second section allows you to define any filters that should be applied to every request made by the framework. You should take care with how many you use here, since it could have performance implications to have too many run on every request. Filters can be specified by adding their alias to either the before or after array:</source>
          <target state="translated">The second section allows you to define any filters that should be applied to every request made by the framework. You should take care with how many you use here, since it could have performance implications to have too many run on every request. Filters can be specified by adding their alias to either the before or after array:</target>
        </trans-unit>
        <trans-unit id="55b770bfe651af254035444c5d7c703696f57469" translate="yes" xml:space="preserve">
          <source>The second segment is the text you would like the link to say. If you leave it blank, the URL will be used.</source>
          <target state="translated">두 번째 세그먼트는 링크를 말하려는 텍스트입니다. 비워두면 URL이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7047ddee67c065e9d66a4072cdc3ec1caeee2102" translate="yes" xml:space="preserve">
          <source>The second segment represents the class &lt;strong&gt;function&lt;/strong&gt;, or method, that should be called.</source>
          <target state="translated">두 번째 세그먼트는 호출해야하는 클래스 &lt;strong&gt;함수&lt;/strong&gt; 또는 메소드를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="8023c7bb496406d9e4c8abe600242ff2f0e773d8" translate="yes" xml:space="preserve">
          <source>The second segment represents the class &lt;strong&gt;method&lt;/strong&gt; that should be called.</source>
          <target state="translated">The second segment represents the class &lt;strong&gt;method&lt;/strong&gt; that should be called.</target>
        </trans-unit>
        <trans-unit id="43196c7b97c0190afc2bab02e24e3015b455e0e4" translate="yes" xml:space="preserve">
          <source>The second, third, and fourth parameters allow you to set the delimiter newline, and enclosure characters respectively. By default commas are used as the delimiter, &amp;ldquo;n&amp;rdquo; is used as a new line, and a double-quote is used as the enclosure. Example:</source>
          <target state="translated">두 번째, 세 번째 및 네 번째 매개 변수를 사용하면 구분 기호 줄 바꿈 및 인클로저 문자를 각각 설정할 수 있습니다. 기본적으로 쉼표는 구분 기호로 사용되며&amp;ldquo;n&amp;rdquo;은 줄 바꾸기로 사용되며 큰 따옴표는 인클로저로 사용됩니다. 예:</target>
        </trans-unit>
        <trans-unit id="64f9f9f8baafdbc6b0a6658bb6866fa04fc2d4a9" translate="yes" xml:space="preserve">
          <source>The secondary benefit of using binds is that the values are automatically escaped producing safer queries. You don&amp;rsquo;t have to remember to manually escape data &amp;mdash; the engine does it automatically for you.</source>
          <target state="translated">The secondary benefit of using binds is that the values are automatically escaped producing safer queries. You don&amp;rsquo;t have to remember to manually escape data &amp;mdash; the engine does it automatically for you.</target>
        </trans-unit>
        <trans-unit id="ea104d43719f2219c1047293a6fcd4c23be998f0" translate="yes" xml:space="preserve">
          <source>The secondary benefit of using binds is that the values are automatically escaped, producing safer queries. You don&amp;rsquo;t have to remember to manually escape data; the engine does it automatically for you.</source>
          <target state="translated">바인드 사용의 두 번째 이점은 값이 자동으로 이스케이프되어보다 안전한 쿼리를 생성한다는 것입니다. 데이터를 수동으로 이스케이프해야하는 것을 기억할 필요는 없습니다. 엔진이 자동으로 수행합니다.</target>
        </trans-unit>
        <trans-unit id="5a305051f6ba1ab2952a9ec147d3d39edb59e0db" translate="yes" xml:space="preserve">
          <source>The secure boolean is only needed if you want to make it a secure cookie by setting it to TRUE.</source>
          <target state="translated">The secure boolean is only needed if you want to make it a secure cookie by setting it to TRUE.</target>
        </trans-unit>
        <trans-unit id="77df4a7848f252e2d02f363e09b48d8edd6797f9" translate="yes" xml:space="preserve">
          <source>The security filtering method is called automatically when a new &lt;a href=&quot;../general/controllers&quot;&gt;controller&lt;/a&gt; is invoked. It does the following:</source>
          <target state="translated">새 &lt;a href=&quot;../general/controllers&quot;&gt;컨트롤러&lt;/a&gt; 가 호출 되면 보안 필터링 방법이 자동으로 호출됩니다. 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="e454ae4211a0ecb07416ce9b58f3bfa644f3497b" translate="yes" xml:space="preserve">
          <source>The seed records might be something like:</source>
          <target state="translated">The seed records might be something like:</target>
        </trans-unit>
        <trans-unit id="90c36012496a2ca4287a456135b50c87fe1b7ba1" translate="yes" xml:space="preserve">
          <source>The segment numbers would be this:</source>
          <target state="translated">세그먼트 번호는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5a1bf6187d083ef51315d41611b561f3c7823c19" translate="yes" xml:space="preserve">
          <source>The segments in the URL, in following with the Model-View-Controller approach, usually represent:</source>
          <target state="translated">Model-View-Controller 접근법을 따르는 URL의 세그먼트는 일반적으로 다음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c7efdd948b75b9d10b8e24bb0f011f7c8e3effc0" translate="yes" xml:space="preserve">
          <source>The server now needs to provide a list of what type of content it can provide. In this example, the API might be able to return data as raw HTML, JSON, or XML. This list should be provided in order of preference:</source>
          <target state="translated">The server now needs to provide a list of what type of content it can provide. In this example, the API might be able to return data as raw HTML, JSON, or XML. This list should be provided in order of preference:</target>
        </trans-unit>
        <trans-unit id="bf7c9b8ac32744e285bbbbc67d3c45a5c0dacfd4" translate="yes" xml:space="preserve">
          <source>The server path to Sendmail.</source>
          <target state="translated">Sendmail의 서버 경로입니다.</target>
        </trans-unit>
        <trans-unit id="67524d3d2aab08b247f1e89ed98b9473341d81e4" translate="yes" xml:space="preserve">
          <source>The server path to the True Type Font you would like to use. If you do not use this option, the native GD font will be used.</source>
          <target state="translated">사용하려는 트루 타입 글꼴의 서버 경로입니다. 이 옵션을 사용하지 않으면 기본 GD 글꼴이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="eb6f214fd0c8022ee1b0aec6fbcba35a16b56f01" translate="yes" xml:space="preserve">
          <source>The server path to the image you wish to use as your watermark. Required only if you are using the overlay method.</source>
          <target state="translated">워터 마크로 사용하려는 이미지의 서버 경로입니다. 오버레이 방법을 사용하는 경우에만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2c0a05f98ab0d52976b0b9c65768650effd19258" translate="yes" xml:space="preserve">
          <source>The session storage driver to use.</source>
          <target state="translated">사용할 세션 스토리지 드라이버.</target>
        </trans-unit>
        <trans-unit id="6e103a4527cd56ac0b59eb2c140b28cec25dabd5" translate="yes" xml:space="preserve">
          <source>The settings for the Redis server that you wish to use when using the &lt;code&gt;Redis&lt;/code&gt; and &lt;code&gt;Predis&lt;/code&gt; handler.</source>
          <target state="translated">The settings for the Redis server that you wish to use when using the &lt;code&gt;Redis&lt;/code&gt; and &lt;code&gt;Predis&lt;/code&gt; handler.</target>
        </trans-unit>
        <trans-unit id="a48ca72a1b7c8849316c4692ea1c9fdb5c2fbcb4" translate="yes" xml:space="preserve">
          <source>The settings used for the last successful send are available from the instance property &lt;code&gt;$archive&lt;/code&gt;. This is helpful for testing and debugging to determine that actual values at the time of the &lt;code&gt;send()&lt;/code&gt; call.</source>
          <target state="translated">The settings used for the last successful send are available from the instance property &lt;code&gt;$archive&lt;/code&gt; . This is helpful for testing and debugging to determine that actual values at the time of the &lt;code&gt;send()&lt;/code&gt; call.</target>
        </trans-unit>
        <trans-unit id="5848ce93c6ba09d39e3aa715dff827528ee2d42a" translate="yes" xml:space="preserve">
          <source>The simplest method to load the parser class is through its service:</source>
          <target state="translated">The simplest method to load the parser class is through its service:</target>
        </trans-unit>
        <trans-unit id="2793017edf2c19111b17d87e0781a0498b3b2dd1" translate="yes" xml:space="preserve">
          <source>The simplest method to set the variable is in your &lt;a href=&quot;configuration&quot;&gt;.env file&lt;/a&gt;.</source>
          <target state="translated">The simplest method to set the variable is in your &lt;a href=&quot;configuration&quot;&gt;.env file&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="14f1a123f9f3907c85b578698331a5a9463b5e5c" translate="yes" xml:space="preserve">
          <source>The size of the text. Note: If you are not using the True Type option above, the number is set using a range of 1 - 5. Otherwise, you can use any valid pixel size for the font you&amp;rsquo;re using.</source>
          <target state="translated">텍스트의 크기입니다. 참고 : 위의 트루 타입 옵션을 사용하지 않는 경우 숫자는 1-5의 범위를 사용하여 설정됩니다. 그렇지 않으면 사용중인 글꼴에 유효한 픽셀 크기를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49caf9b3b13141a69c6bd874716d826327a7ca49" translate="yes" xml:space="preserve">
          <source>The solution: use Apache to serve your site, or else the built-in CodeIgniter equivalent, &lt;code&gt;php spark serve&lt;/code&gt; from your project root.</source>
          <target state="translated">The solution: use Apache to serve your site, or else the built-in CodeIgniter equivalent, &lt;code&gt;php spark serve&lt;/code&gt; from your project root.</target>
        </trans-unit>
        <trans-unit id="bf0178ab76354ed40548536632aefae29105d8dc" translate="yes" xml:space="preserve">
          <source>The static methods run before and after the entire test case, whereas the local methods run between each test. If you implement any of these special functions make sure you run their parent as well so extended test cases do not interfere with staging:</source>
          <target state="translated">The static methods run before and after the entire test case, whereas the local methods run between each test. If you implement any of these special functions make sure you run their parent as well so extended test cases do not interfere with staging:</target>
        </trans-unit>
        <trans-unit id="66030269b38548b965739f4d3d6aa0fc86195f44" translate="yes" xml:space="preserve">
          <source>The string &amp;ldquo;Safari&amp;rdquo; in this example is an array key in the list of browser definitions. You can find this list in &lt;strong&gt;app/Config/UserAgents.php&lt;/strong&gt; if you want to add new browsers or change the strings.</source>
          <target state="translated">The string &amp;ldquo;Safari&amp;rdquo; in this example is an array key in the list of browser definitions. You can find this list in &lt;strong&gt;app/Config/UserAgents.php&lt;/strong&gt; if you want to add new browsers or change the strings.</target>
        </trans-unit>
        <trans-unit id="99919864fae4ef3fff139d4da3ce5dbe53058384" translate="yes" xml:space="preserve">
          <source>The string &amp;ldquo;Safari&amp;rdquo; in this example is an array key in the list of browser definitions. You can find this list in &lt;strong&gt;application/config/user_agents.php&lt;/strong&gt; if you want to add new browsers or change the stings.</source>
          <target state="translated">이 예에서 문자열 &quot;Safari&quot;는 브라우저 정의 목록의 배열 키입니다. 새 브라우저를 추가하거나 찌르기를 변경하려는 경우 &lt;strong&gt;application / config / user_agents.php&lt;/strong&gt; 에서이 목록을 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ac4f1b1a742c8a56666d2205e2499dac4a2fe779" translate="yes" xml:space="preserve">
          <source>The system can be easily extended through the use of your own libraries, helpers, or through class extensions or system hooks.</source>
          <target state="translated">자체 라이브러리, 헬퍼 또는 클래스 확장 또는 시스템 후크를 통해 시스템을 쉽게 확장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f62d84cf3048a2846109df553af0167fefb7145" translate="yes" xml:space="preserve">
          <source>The system is not perfect and should be tested for your specific domain before being used in production. Most domains should work fine but some edge case ones, especially with a period in the domain itself (not used to separate suffixes or www) can potentially lead to false positives.</source>
          <target state="translated">The system is not perfect and should be tested for your specific domain before being used in production. Most domains should work fine but some edge case ones, especially with a period in the domain itself (not used to separate suffixes or www) can potentially lead to false positives.</target>
        </trans-unit>
        <trans-unit id="93bd5e2d665ce7c3d07e3d8b90b8d64e25495080" translate="yes" xml:space="preserve">
          <source>The system is smart enough to fall back to more generic language codes if an exact match cannot be found. If the locale code was set to &lt;strong&gt;en-US&lt;/strong&gt; and we only have language files set up for &lt;strong&gt;en&lt;/strong&gt; then those will be used since nothing exists for the more specific &lt;strong&gt;en-US&lt;/strong&gt;. If, however, a language directory existed at &lt;strong&gt;app/Language/en-US&lt;/strong&gt; then that would be used first.</source>
          <target state="translated">The system is smart enough to fall back to more generic language codes if an exact match cannot be found. If the locale code was set to &lt;strong&gt;en-US&lt;/strong&gt; and we only have language files set up for &lt;strong&gt;en&lt;/strong&gt; then those will be used since nothing exists for the more specific &lt;strong&gt;en-US&lt;/strong&gt;. If, however, a language directory existed at &lt;strong&gt;app/Language/en-US&lt;/strong&gt; then that would be used first.</target>
        </trans-unit>
        <trans-unit id="001045e2a8289e1472396f382fd9995e615278d2" translate="yes" xml:space="preserve">
          <source>The system is unusable.</source>
          <target state="translated">The system is unusable.</target>
        </trans-unit>
        <trans-unit id="4fbf47460f70c1132e18e702a999c88eff0dbeae" translate="yes" xml:space="preserve">
          <source>The system will attempt to match the URI against Controllers by matching each segment against folders/files in APPPATH/Controllers, when a match wasn&amp;rsquo;t found against defined routes. That&amp;rsquo;s why your folders/files MUST start with a capital letter and the rest MUST be lowercase. If you want another naming convention you need to manually define it using the &lt;a href=&quot;routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">The system will attempt to match the URI against Controllers by matching each segment against folders/files in APPPATH/Controllers, when a match wasn&amp;rsquo;t found against defined routes. That&amp;rsquo;s why your folders/files MUST start with a capital letter and the rest MUST be lowercase. If you want another naming convention you need to manually define it using the &lt;a href=&quot;routing&quot;&gt;URI Routing&lt;/a&gt; feature.</target>
        </trans-unit>
        <trans-unit id="872e2af95489361c67c3a924a6123ef629a547cc" translate="yes" xml:space="preserve">
          <source>The table name for storing the schema version number.</source>
          <target state="translated">스키마 버전 번호를 저장하기위한 테이블 이름입니다.</target>
        </trans-unit>
        <trans-unit id="49c245e00702ac011c5e69dd3f3e8159b26929dd" translate="yes" xml:space="preserve">
          <source>The term &amp;ldquo;extend&amp;rdquo; is used loosely since Helper functions are procedural and discrete and cannot be extended in the traditional programmatic sense. Under the hood, this gives you the ability to add to or or to replace the functions a Helper provides.</source>
          <target state="translated">헬퍼 기능은 절차적이고 불연속적이고 전통적인 프로그래밍 방식으로 확장 될 수 없으므로 &quot;확장&quot;이라는 용어는 느슨하게 사용됩니다. 후드 아래에서 도우미가 제공하는 기능을 추가하거나 교체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="04e28c4ffddf86dba326a1e0d7c28cb538c81a9d" translate="yes" xml:space="preserve">
          <source>The term &amp;ldquo;extend&amp;rdquo; is used loosely since Helper functions are procedural and discrete and cannot be extended in the traditional programmatic sense. Under the hood, this gives you the ability to add to, or to replace the functions a Helper provides.</source>
          <target state="translated">The term &amp;ldquo;extend&amp;rdquo; is used loosely since Helper functions are procedural and discrete and cannot be extended in the traditional programmatic sense. Under the hood, this gives you the ability to add to, or to replace the functions a Helper provides.</target>
        </trans-unit>
        <trans-unit id="f7a4d61b02735bd4e065c645039db16aafadb1ad" translate="yes" xml:space="preserve">
          <source>The terms &amp;lsquo;cipher&amp;rsquo; and &amp;lsquo;encryption algorithm&amp;rsquo; are interchangeable.</source>
          <target state="translated">'암호'와 '암호화 알고리즘'이라는 용어는 서로 바꿔 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86e87930148a647d6bf41b2bd5ca7a200bd525c1" translate="yes" xml:space="preserve">
          <source>The test is evaluating an integer, but the expected result is a boolean. PHP, however, due to it&amp;rsquo;s loose data-typing will evaluate the above code as TRUE using a normal equality test:</source>
          <target state="translated">테스트에서 정수를 평가하고 있지만 예상 결과는 부울입니다. 그러나 PHP는 데이터 타이핑이 느슨하기 때문에 정상적인 평등 테스트를 사용하여 위 코드를 TRUE로 평가합니다.</target>
        </trans-unit>
        <trans-unit id="c6b61f2e9351eaf641a989818648e317c2f4091e" translate="yes" xml:space="preserve">
          <source>The text contained in the menu is found in the following language file: &lt;code&gt;language/&amp;lt;your_lang&amp;gt;/date_lang.php&lt;/code&gt;</source>
          <target state="translated">메뉴에 포함 된 텍스트는 다음 언어 파일에 있습니다. &lt;code&gt;language/&amp;lt;your_lang&amp;gt;/date_lang.php&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="846bf76f374e6d4e602d0bd51abe0a3fe911609b" translate="yes" xml:space="preserve">
          <source>The text generated by this function is found in the following language file: &lt;code&gt;language/&amp;lt;your_lang&amp;gt;/date_lang.php&lt;/code&gt;</source>
          <target state="translated">이 함수에 의해 생성 된 텍스트는 다음 언어 파일에 있습니다 : &lt;code&gt;language/&amp;lt;your_lang&amp;gt;/date_lang.php&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e137e9dd69532ed94adf59e22703e3c3526ef41f" translate="yes" xml:space="preserve">
          <source>The text generated by this function is found in the following language file: &lt;em&gt;language/&amp;lt;your_lang&amp;gt;/Number.php&lt;/em&gt;</source>
          <target state="translated">The text generated by this function is found in the following language file: &lt;em&gt;language/&amp;lt;your_lang&amp;gt;/Number.php&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b87ec49b33b9952520b7ba66df4578328bd2b046" translate="yes" xml:space="preserve">
          <source>The text generated by this function is found in the following language file: &lt;em&gt;language/&amp;lt;your_lang&amp;gt;/number_lang.php&lt;/em&gt;</source>
          <target state="translated">이 함수에 의해 생성 된 텍스트는 다음 언어 파일에 있습니다 : &lt;em&gt;language / &amp;lt;your_lang&amp;gt; /number_lang.php&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5dc96c44ea9886a100a5a8c003fe214a18cb8531" translate="yes" xml:space="preserve">
          <source>The text you would like shown as the watermark. Typically this will be a copyright notice.</source>
          <target state="translated">워터 마크로 표시하려는 텍스트입니다. 일반적으로 이것은 저작권 고지입니다.</target>
        </trans-unit>
        <trans-unit id="145eafdf698fbda2f060ee98da7f8b042fad14e2" translate="yes" xml:space="preserve">
          <source>The text you would like shown in the &amp;ldquo;first&amp;rdquo; link on the left. If you do not want this link rendered, you can set its value to FALSE.</source>
          <target state="translated">왼쪽의 &quot;첫 번째&quot;링크에 표시하려는 텍스트입니다. 이 링크를 렌더링하지 않으려면 해당 값을 FALSE로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b5e138da4f4b0a586d1f0d015b76c0f75e20467" translate="yes" xml:space="preserve">
          <source>The text you would like shown in the &amp;ldquo;last&amp;rdquo; link on the right. If you do not want this link rendered, you can set its value to FALSE.</source>
          <target state="translated">오른쪽의 &quot;마지막&quot;링크에 표시하려는 텍스트입니다. 이 링크를 렌더링하지 않으려면 해당 값을 FALSE로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9db212fb97160fd2e25162536097699623505636" translate="yes" xml:space="preserve">
          <source>The text you would like shown in the &amp;ldquo;next&amp;rdquo; page link. If you do not want this link rendered, you can set its value to FALSE.</source>
          <target state="translated">&amp;ldquo;다음&amp;rdquo;페이지 링크에 표시하려는 텍스트. 이 링크를 렌더링하지 않으려면 해당 값을 FALSE로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f2d15912bae9c88cab50683acbf9b3bd42f43a1" translate="yes" xml:space="preserve">
          <source>The text you would like shown in the &amp;ldquo;previous&amp;rdquo; page link. If you do not want this link rendered, you can set its value to FALSE.</source>
          <target state="translated">&quot;이전&quot;페이지 링크에 표시하려는 텍스트입니다. 이 링크를 렌더링하지 않으려면 해당 값을 FALSE로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd05495a9658b7f02d35550bba527e6a9eaad68b" translate="yes" xml:space="preserve">
          <source>The third &lt;strong&gt;optional&lt;/strong&gt; parameter lets you change the behavior of the method so that it returns data as a string rather than sending it to your browser. This can be useful if you want to process the data in some way. If you set the parameter to TRUE (boolean) it will return data. The default behavior is FALSE, which sends it to your browser. Remember to assign it to a variable if you want the data returned:</source>
          <target state="translated">세 번째 &lt;strong&gt;선택적&lt;/strong&gt; 매개 변수를 사용하면 데이터를 브라우저로 보내지 않고 문자열로 데이터를 반환하도록 메서드의 동작을 변경할 수 있습니다. 어떤 식 으로든 데이터를 처리하려는 경우 유용 할 수 있습니다. 매개 변수를 TRUE (부울)로 설정하면 데이터가 리턴됩니다. 기본 동작은 FALSE이며 브라우저로 보냅니다. 데이터를 반환하려면 변수에 변수를 할당해야합니다.</target>
        </trans-unit>
        <trans-unit id="fdee4b1dee21b01aa26d5464cc6834581bd5592a" translate="yes" xml:space="preserve">
          <source>The third parameter allows you to suppress errors in the event that a config file does not exist:</source>
          <target state="translated">세 번째 매개 변수를 사용하면 구성 파일이없는 경우 오류를 억제 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6438dc0398f2b0ec80fad5bb33750caf385a30d2" translate="yes" xml:space="preserve">
          <source>The third parameter can contain a list of attributes you would like added to the link. The attributes can be a simple string or an associative array.</source>
          <target state="translated">세 번째 매개 변수에는 링크에 추가하려는 속성 목록이 포함될 수 있습니다. 속성은 간단한 문자열 또는 연관 배열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="729522a3cc7a40834999ac40e2ba86b073a2eba9" translate="yes" xml:space="preserve">
          <source>The third parameter contains a boolean TRUE/FALSE to determine whether the box should be checked or not.</source>
          <target state="translated">세 번째 매개 변수에는 상자를 선택해야하는지 여부를 결정하는 부울 TRUE / FALSE가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="65b19b18893c64483e0e745010adf89f6bf687c3" translate="yes" xml:space="preserve">
          <source>The third parameter determines whether links are shown in a new window. The value can be TRUE or FALSE (boolean):</source>
          <target state="translated">세 번째 매개 변수는 링크가 새 창에 표시되는지 여부를 결정합니다. 값은 TRUE 또는 FALSE (부울) 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9368b9b7248186e474cb1c6ce09fcb06f6329f95" translate="yes" xml:space="preserve">
          <source>The third parameter determines whether or not lowercase characters are forced. By default they are not. Options are boolean TRUE/FALSE.</source>
          <target state="translated">세 번째 매개 변수는 소문자를 강제 적용할지 여부를 결정합니다. 기본적으로는 그렇지 않습니다. 옵션은 부울 참 / 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="91f7adbe88c6a97c0dd272adfc652045e0b2c566" translate="yes" xml:space="preserve">
          <source>The third parameter is an optional suffix added to the string, if undeclared this helper uses an ellipsis.</source>
          <target state="translated">세 번째 매개 변수는 선언되지 않은 경우이 헬퍼가 줄임표를 사용하는 경우 문자열에 추가 된 선택적 접미사입니다.</target>
        </trans-unit>
        <trans-unit id="b1e176a9f361094b6030aab9d8eefa8eb31e978f" translate="yes" xml:space="preserve">
          <source>The third parameter is an optional suffix added to the string. By default it adds an ellipsis.</source>
          <target state="translated">세 번째 매개 변수는 문자열에 추가 된 선택적 접미사입니다. 기본적으로 줄임표가 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="bc85a920bbe71063d289662bbb5676b2ac78915e" translate="yes" xml:space="preserve">
          <source>The third, and any additional segments, represent the ID and any variables that will be passed to the controller.</source>
          <target state="translated">세 번째 세그먼트와 추가 세그먼트는 컨트롤러에 전달 될 ID 및 변수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="833918b52320b838ab8835351346ffe9041be890" translate="yes" xml:space="preserve">
          <source>The time can be formatted with or without seconds, and it can be set to European or US format. If only the timestamp is submitted it will return the time without seconds formatted for the U.S.</source>
          <target state="translated">시간은 초를 포함하거나 포함하지 않고 형식을 지정할 수 있으며 유럽 또는 미국 형식으로 설정할 수 있습니다. 타임 스탬프 만 제출하면 미국 용으로 초 형식이 지정되지 않은 시간이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="549397bbdb4a65bb1b6cf23b071a8967920be757" translate="yes" xml:space="preserve">
          <source>The timers are automatically displayed in the &lt;a href=&quot;debugging&quot;&gt;Debub Toolbar&lt;/a&gt;.</source>
          <target state="translated">The timers are automatically displayed in the &lt;a href=&quot;debugging&quot;&gt;Debub Toolbar&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5181867fc8dae88558f1ce390d4ab4ee9a56c806" translate="yes" xml:space="preserve">
          <source>The timezone the application has been set to display dates in.</source>
          <target state="translated">The timezone the application has been set to display dates in.</target>
        </trans-unit>
        <trans-unit id="b3093e2ac2b8ce9100a5e36bd57d17da58fbc75b" translate="yes" xml:space="preserve">
          <source>The toolbar is enabled by default in any environment &lt;em&gt;except&lt;/em&gt; production. It will be shown whenever the constant CI_DEBUG is defined and it&amp;rsquo;s value is positive. This is defined in the boot files (i.e. app/Config/Boot/development.php) and can be modified there to determine what environments it shows itself in.</source>
          <target state="translated">The toolbar is enabled by default in any environment &lt;em&gt;except&lt;/em&gt; production. It will be shown whenever the constant CI_DEBUG is defined and it&amp;rsquo;s value is positive. This is defined in the boot files (i.e. app/Config/Boot/development.php) and can be modified there to determine what environments it shows itself in.</target>
        </trans-unit>
        <trans-unit id="c8ead8483abb17f6b0b924cb9412ba39c8a95f33" translate="yes" xml:space="preserve">
          <source>The toolbar itself is displayed as an &lt;a href=&quot;../incoming/filters&quot;&gt;After Filter&lt;/a&gt;. You can stop it from ever running by removing it from the &lt;code&gt;$globals&lt;/code&gt; property of &lt;strong&gt;app/Config/Filters.php&lt;/strong&gt;.</source>
          <target state="translated">The toolbar itself is displayed as an &lt;a href=&quot;../incoming/filters&quot;&gt;After Filter&lt;/a&gt;. You can stop it from ever running by removing it from the &lt;code&gt;$globals&lt;/code&gt; property of &lt;strong&gt;app/Config/Filters.php&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="49286f7a63de49638023a986b47630601eb40df5" translate="yes" xml:space="preserve">
          <source>The total number of queries executed</source>
          <target state="translated">실행 된 총 쿼리 수</target>
        </trans-unit>
        <trans-unit id="e8befc4db36b46d5df2ba9dd5123e904c5ff0ae2" translate="yes" xml:space="preserve">
          <source>The tutorial gives 404 errors everywhere :(</source>
          <target state="translated">The tutorial gives 404 errors everywhere :(</target>
        </trans-unit>
        <trans-unit id="a30e71da625e268b1ca904dc1045563c96b30821" translate="yes" xml:space="preserve">
          <source>The two methods used here, &lt;code&gt;findAll()&lt;/code&gt; and &lt;code&gt;first()&lt;/code&gt;, are provided by the Model class. They already know the table to use based on the &lt;code&gt;$table&lt;/code&gt; property we set in &lt;strong&gt;NewsModel&lt;/strong&gt; class, earlier. They are helper methods that use the Query Builder to run their commands on the current table, and returning an array of results in the format of your choice. In this example, &lt;code&gt;findAll()&lt;/code&gt; returns an array of objects.</source>
          <target state="translated">The two methods used here, &lt;code&gt;findAll()&lt;/code&gt; and &lt;code&gt;first()&lt;/code&gt; , are provided by the Model class. They already know the table to use based on the &lt;code&gt;$table&lt;/code&gt; property we set in &lt;strong&gt;NewsModel&lt;/strong&gt; class, earlier. They are helper methods that use the Query Builder to run their commands on the current table, and returning an array of results in the format of your choice. In this example, &lt;code&gt;findAll()&lt;/code&gt; returns an array of objects.</target>
        </trans-unit>
        <trans-unit id="d4ee6ad41b5087b9e1db5fdec7fc0b49d7661837" translate="yes" xml:space="preserve">
          <source>The type of numeric identifier used to name migration files.</source>
          <target state="translated">마이그레이션 파일 이름을 지정하는 데 사용되는 숫자 식별자의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="06d07d50e8790295fca587f907628a00b71da5ba" translate="yes" xml:space="preserve">
          <source>The unsetting routine is effectively the same as &lt;em&gt;register_globals = off&lt;/em&gt;.</source>
          <target state="translated">설정 해제 루틴은 사실상 &lt;em&gt;register_globals = off&lt;/em&gt; 와 동일 &lt;em&gt;합니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="8231fcf2b84eb3510fd1484d1d85b1a988e02b88" translate="yes" xml:space="preserve">
          <source>The updated SQL statement</source>
          <target state="translated">업데이트 된 SQL 문</target>
        </trans-unit>
        <trans-unit id="7e660ca118ce503e603eac64d87b461f8b0e08e4" translate="yes" xml:space="preserve">
          <source>The usage of this method is identical to &lt;code&gt;addColumn()&lt;/code&gt;, except it alters an existing column rather than adding a new one. In order to change the name, you can add a &amp;ldquo;name&amp;rdquo; key into the field defining array.</source>
          <target state="translated">The usage of this method is identical to &lt;code&gt;addColumn()&lt;/code&gt; , except it alters an existing column rather than adding a new one. In order to change the name, you can add a &amp;ldquo;name&amp;rdquo; key into the field defining array.</target>
        </trans-unit>
        <trans-unit id="46408a6498e023f903cf4f150fc7ef72725eb174" translate="yes" xml:space="preserve">
          <source>The usage of this method is identical to &lt;code&gt;add_column()&lt;/code&gt;, except it alters an existing column rather than adding a new one. In order to change the name you can add a &amp;ldquo;name&amp;rdquo; key into the field defining array.</source>
          <target state="translated">이 메소드의 사용법은 &lt;code&gt;add_column()&lt;/code&gt; 과 동일하지만 새 컬럼을 추가하지 않고 기존 컬럼을 변경한다는 점이 다릅니다. 이름을 변경하기 위해 &quot;name&quot;키를 필드 정의 배열에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c46954e2352cf8d888736d81298fba498ab32218" translate="yes" xml:space="preserve">
          <source>The user agent library only contains the most common robot definitions. It is not a complete list of bots. There are hundreds of them so searching for each one would not be very efficient. If you find that some bots that commonly visit your site are missing from the list you can add them to your &lt;strong&gt;app/Config/UserAgents.php&lt;/strong&gt; file.</source>
          <target state="translated">The user agent library only contains the most common robot definitions. It is not a complete list of bots. There are hundreds of them so searching for each one would not be very efficient. If you find that some bots that commonly visit your site are missing from the list you can add them to your &lt;strong&gt;app/Config/UserAgents.php&lt;/strong&gt; file.</target>
        </trans-unit>
        <trans-unit id="42d5501341110e0b74bc711bc1e5831c714456ff" translate="yes" xml:space="preserve">
          <source>The user agent library only contains the most common robot definitions. It is not a complete list of bots. There are hundreds of them so searching for each one would not be very efficient. If you find that some bots that commonly visit your site are missing from the list you can add them to your &lt;strong&gt;application/config/user_agents.php&lt;/strong&gt; file.</source>
          <target state="translated">사용자 에이전트 라이브러리에는 가장 일반적인 로봇 정의 만 포함됩니다. 전체 봇 목록이 아닙니다. 수백 개가 있으므로 각각을 검색하는 것이 그리 효율적이지 않습니다. 일반적으로 사이트를 방문하는 일부 봇이 목록에서 누락 된 경우 &lt;strong&gt;application / config / user_agents.php&lt;/strong&gt; 파일에 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8fe55c107900410bcd4824838de6c5c6fb038a99" translate="yes" xml:space="preserve">
          <source>The user agent name definitions are located in a config file located at: &lt;strong&gt;app/Config/UserAgents.php&lt;/strong&gt;. You may add items to the various user agent arrays if needed.</source>
          <target state="translated">The user agent name definitions are located in a config file located at: &lt;strong&gt;app/Config/UserAgents.php&lt;/strong&gt;. You may add items to the various user agent arrays if needed.</target>
        </trans-unit>
        <trans-unit id="c953aef2bdb19c3b64108e9a61955e20cef4e1f2" translate="yes" xml:space="preserve">
          <source>The user agent name definitions are located in a config file located at: application/config/user_agents.php. You may add items to the various user agent arrays if needed.</source>
          <target state="translated">사용자 에이전트 이름 정의는 application / config / user_agents.php에있는 구성 파일에 있습니다. 필요한 경우 다양한 사용자 에이전트 배열에 항목을 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36bc43702446324ebc468b9a9cd0a22de66750d9" translate="yes" xml:space="preserve">
          <source>The user&amp;rsquo;s IP Address, if it can be detected, or null. If the IP address is not a valid IP address, then will return 0.0.0.0</source>
          <target state="translated">The user&amp;rsquo;s IP Address, if it can be detected, or null. If the IP address is not a valid IP address, then will return 0.0.0.0</target>
        </trans-unit>
        <trans-unit id="23e70177cd3fb04320d382c3eaf2c0bb2e4fbbde" translate="yes" xml:space="preserve">
          <source>The userinfo section is simply the username and password that you might see with an FTP URI. While you can get this as part of the Authority, you can also retrieve it yourself:</source>
          <target state="translated">The userinfo section is simply the username and password that you might see with an FTP URI. While you can get this as part of the Authority, you can also retrieve it yourself:</target>
        </trans-unit>
        <trans-unit id="ee28ea53678e65730e2e22dbfcd6a0476ae5ad16" translate="yes" xml:space="preserve">
          <source>The username field be no shorter than 5 characters and no longer than 12.</source>
          <target state="translated">사용자 이름 필드는 5 자 이상 12 자 이하 여야합니다.</target>
        </trans-unit>
        <trans-unit id="994d87508b5482e314bbca52ab6ec6423cec6042" translate="yes" xml:space="preserve">
          <source>The username used to connect to the database.</source>
          <target state="translated">데이터베이스에 연결하는 데 사용되는 사용자 이름입니다.</target>
        </trans-unit>
        <trans-unit id="5d533920b42f713f55d5a22d17da78de4d8d988f" translate="yes" xml:space="preserve">
          <source>The validation rules for this form field.</source>
          <target state="translated">이 양식 필드의 유효성 검사 규칙</target>
        </trans-unit>
        <trans-unit id="0f49c9881ccd4c8b16c159be72a33a88b5ae0de8" translate="yes" xml:space="preserve">
          <source>The validation system supports callbacks to your own validation methods. This permits you to extend the validation class to meet your needs. For example, if you need to run a database query to see if the user is choosing a unique username, you can create a callback method that does that. Let&amp;rsquo;s create an example of this.</source>
          <target state="translated">유효성 검사 시스템은 자체 유효성 검사 방법에 대한 콜백을 지원합니다. 이를 통해 요구 사항에 맞게 유효성 검사 클래스를 확장 할 수 있습니다. 예를 들어, 사용자가 고유 한 사용자 이름을 선택하는지 확인하기 위해 데이터베이스 쿼리를 실행해야하는 경우이를 수행하는 콜백 메소드를 작성할 수 있습니다. 이것의 예를 만들어 봅시다.</target>
        </trans-unit>
        <trans-unit id="6244a99b633fdeb81de321302de8dd6c5fca79f5" translate="yes" xml:space="preserve">
          <source>The value being tested against can be a Time instance, a DateTime instance, or a string with the full date time in a manner that a new DateTime instance can understand. When passing a string as the first parameter, you can pass a timezone string in as the second parameter. If no timezone is given, the system default will be used:</source>
          <target state="translated">The value being tested against can be a Time instance, a DateTime instance, or a string with the full date time in a manner that a new DateTime instance can understand. When passing a string as the first parameter, you can pass a timezone string in as the second parameter. If no timezone is given, the system default will be used:</target>
        </trans-unit>
        <trans-unit id="7c35c60013c5ceb87bc15bcdf1f0b15b183cb1ff" translate="yes" xml:space="preserve">
          <source>The value can be any string that your application uses to manage text strings and other formats. It is recommended that a &lt;a href=&quot;https://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP 47&lt;/a&gt; language code is used. This results in language codes like en-US for American English, or fr-FR, for French/France. A more readable introduction to this can be found on the &lt;a href=&quot;https://www.w3.org/International/articles/language-tags/&quot;&gt;W3C&amp;rsquo;s site&lt;/a&gt;.</source>
          <target state="translated">The value can be any string that your application uses to manage text strings and other formats. It is recommended that a &lt;a href=&quot;https://www.rfc-editor.org/rfc/bcp/bcp47.txt&quot;&gt;BCP 47&lt;/a&gt; language code is used. This results in language codes like en-US for American English, or fr-FR, for French/France. A more readable introduction to this can be found on the &lt;a href=&quot;https://www.w3.org/International/articles/language-tags/&quot;&gt;W3C&amp;rsquo;s site&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="433be07e88570ccec098ac1314b566609be81602" translate="yes" xml:space="preserve">
          <source>The value for the filter must match one of the aliases defined within &lt;code&gt;app/Config/Filters.php&lt;/code&gt;.</source>
          <target state="translated">The value for the filter must match one of the aliases defined within &lt;code&gt;app/Config/Filters.php&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="683591ea594d1ea47f1e3e0f17b59356c2b35ef5" translate="yes" xml:space="preserve">
          <source>The value for the filter must match one of the aliases defined within &lt;code&gt;app/Config/Filters.php&lt;/code&gt;. You may also supply arguments to be passed to the filter&amp;rsquo;s &lt;code&gt;before()&lt;/code&gt; and &lt;code&gt;after()&lt;/code&gt; methods:</source>
          <target state="translated">The value for the filter must match one of the aliases defined within &lt;code&gt;app/Config/Filters.php&lt;/code&gt; . You may also supply arguments to be passed to the filter&amp;rsquo;s &lt;code&gt;before()&lt;/code&gt; and &lt;code&gt;after()&lt;/code&gt; methods:</target>
        </trans-unit>
        <trans-unit id="21393f4716d2905d004c1e6d8ad1c53f17643faf" translate="yes" xml:space="preserve">
          <source>The value for the pseudo-variable &lt;code&gt;blog_entries&lt;/code&gt; is a sequential array of associative arrays. The outer level does not have keys associated with each of the nested &amp;ldquo;rows&amp;rdquo;.</source>
          <target state="translated">The value for the pseudo-variable &lt;code&gt;blog_entries&lt;/code&gt; is a sequential array of associative arrays. The outer level does not have keys associated with each of the nested &amp;ldquo;rows&amp;rdquo;.</target>
        </trans-unit>
        <trans-unit id="1e77d6b258ff1dbd544a8fbe42e1a4cce9306e6e" translate="yes" xml:space="preserve">
          <source>The value for the pseudo-variable &lt;code&gt;blog_entry&lt;/code&gt; is an associative array. The key/value pairs defined inside it will be exposed inside the variable pair loop for that variable.</source>
          <target state="translated">The value for the pseudo-variable &lt;code&gt;blog_entry&lt;/code&gt; is an associative array. The key/value pairs defined inside it will be exposed inside the variable pair loop for that variable.</target>
        </trans-unit>
        <trans-unit id="d06dfcde6af1929402dcc4a3db0f20dd16605694" translate="yes" xml:space="preserve">
          <source>The value found within the array, or null</source>
          <target state="translated">The value found within the array, or null</target>
        </trans-unit>
        <trans-unit id="e8915410d6ffa06712b47c9d89cd41452b0cd744" translate="yes" xml:space="preserve">
          <source>The value is returned in the format specified in $returnType.</source>
          <target state="translated">The value is returned in the format specified in $returnType.</target>
        </trans-unit>
        <trans-unit id="fc7fa54a5a1d4f6ba0b399c26cd0c5285cafeec7" translate="yes" xml:space="preserve">
          <source>The value must match the value of the field in the parameter.</source>
          <target state="translated">The value must match the value of the field in the parameter.</target>
        </trans-unit>
        <trans-unit id="bd2cf851463a011a050b8a6dcfb8cd476dcacba4" translate="yes" xml:space="preserve">
          <source>The value of &amp;lsquo;foo&amp;rsquo; in $_ENV</source>
          <target state="translated">The value of &amp;lsquo;foo&amp;rsquo; in $_ENV</target>
        </trans-unit>
        <trans-unit id="8e66ca5390d535d1a7fbc2ae75b4b2a8c8d4a098" translate="yes" xml:space="preserve">
          <source>The value of the Response object&amp;rsquo;s send() method.</source>
          <target state="translated">The value of the Response object&amp;rsquo;s send() method.</target>
        </trans-unit>
        <trans-unit id="01d585d08f420e2f25513cd1394c460dc658aae1" translate="yes" xml:space="preserve">
          <source>The value of the defined key, or the default value.</source>
          <target state="translated">The value of the defined key, or the default value.</target>
        </trans-unit>
        <trans-unit id="0793d5da9928a47bf168120ad60485455f4e2573" translate="yes" xml:space="preserve">
          <source>The version of the database being used</source>
          <target state="translated">사용중인 데이터베이스의 버전</target>
        </trans-unit>
        <trans-unit id="a2076b9113665d973257ac81dd15a88a37ae031f" translate="yes" xml:space="preserve">
          <source>The word &amp;ldquo;class&amp;rdquo; here refers to libraries and drivers.</source>
          <target state="translated">여기서 &quot;클래스&quot;라는 단어는 라이브러리 및 드라이버를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c553f3aab79b89685b49148200c79d654922cbe5" translate="yes" xml:space="preserve">
          <source>The words &amp;ldquo;code_start&amp;rdquo; and &amp;ldquo;code_end&amp;rdquo; are arbitrary. They are simply words used to set two markers. You can use any words you want, and you can set multiple sets of markers. Consider this example:</source>
          <target state="translated">&amp;ldquo;code_start&amp;rdquo;및&amp;ldquo;code_end&amp;rdquo;라는 단어는 임의적입니다. 그들은 단순히 두 개의 마커를 설정하는 데 사용되는 단어입니다. 원하는 단어를 사용할 수 있으며 여러 마커 세트를 설정할 수 있습니다. 이 예제를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="1390c56c0a055d53b65a2602afef521fbcfd02a8" translate="yes" xml:space="preserve">
          <source>Their difference to &lt;code&gt;hasPrevious()&lt;/code&gt; and &lt;code&gt;hasNext()&lt;/code&gt; is that they are based on the current page while &lt;code&gt;hasPrevious()&lt;/code&gt; and &lt;code&gt;hasNext()&lt;/code&gt; are based on the set of links to be displayed before and after the current page based on the value passed in &lt;code&gt;setSurroundCount&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;hasPrevious()&lt;/code&gt; 및 &lt;code&gt;hasNext()&lt;/code&gt; 와의 차이점 은 현재 페이지를 기반으로하는 반면 &lt;code&gt;hasPrevious()&lt;/code&gt; 및 &lt;code&gt;hasNext()&lt;/code&gt; 는 &lt;code&gt;setSurroundCount&lt;/code&gt; 에 전달 된 값을 기반으로 현재 페이지 전후에 표시되는 링크 세트를 기반으로 한다는 것입니다. .</target>
        </trans-unit>
        <trans-unit id="2b38f31cfff3de55386868844f36c89e073a5162" translate="yes" xml:space="preserve">
          <source>Then &lt;strong&gt;foo&lt;/strong&gt; is the command name, and the &lt;code&gt;$params&lt;/code&gt; array would be:</source>
          <target state="translated">그러면 &lt;strong&gt;foo&lt;/strong&gt; 는 명령 이름이고 &lt;code&gt;$params&lt;/code&gt; 배열은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e8dbce3d8dea58baaa2224aa6728bd602dd9e6b5" translate="yes" xml:space="preserve">
          <source>Then add a new method called &lt;code&gt;username_check()&lt;/code&gt; to your controller. Here&amp;rsquo;s how your controller should now look:</source>
          <target state="translated">그런 다음 &lt;code&gt;username_check()&lt;/code&gt; 라는 새 메소드 를 컨트롤러에 추가하십시오. 컨트롤러의 모양은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="525a58dcf94173a5b523d8b11b632d7d0e42c2f1" translate="yes" xml:space="preserve">
          <source>Then in &lt;strong&gt;application/config/migration.php&lt;/strong&gt; set &lt;code&gt;$config['migration_version'] = 20121031100537;&lt;/code&gt;.</source>
          <target state="translated">그 다음에 &lt;strong&gt;애플리케이션 / 구성 / migration.php&lt;/strong&gt; 세트 &lt;code&gt;$config['migration_version'] = 20121031100537;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5afe6c36a65bf03cd31849ccdb76f22b9a80d952" translate="yes" xml:space="preserve">
          <source>Then load the page at the URL you&amp;rsquo;ve been using and you should see the variables replaced.</source>
          <target state="translated">그런 다음 사용중인 URL에서 페이지를로드하면 변수가 대체 된 것을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6515d9007760169f497b359f416b3418c21015cc" translate="yes" xml:space="preserve">
          <source>Then save the file in your &lt;em&gt;application/views/&lt;/em&gt; directory.</source>
          <target state="translated">그런 다음 파일을 &lt;em&gt;application / views /&lt;/em&gt; 디렉토리 에 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="4df8b158457b8adb0994d9d90ed61982575db20d" translate="yes" xml:space="preserve">
          <source>Then save the file in your &lt;strong&gt;app/Views&lt;/strong&gt; directory.</source>
          <target state="translated">그런 다음 &lt;strong&gt;app / Views&lt;/strong&gt; 디렉토리에 파일을 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="88bcb8a9801fce85699038e0cac56cab9fd7055d" translate="yes" xml:space="preserve">
          <source>Then save the file to your &lt;em&gt;application/controllers/&lt;/em&gt; directory.</source>
          <target state="translated">그런 다음 파일을 &lt;em&gt;application / controllers /&lt;/em&gt; 디렉토리에 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="e7ca2463756fa1df8d70c9f3e69eeea96d3d1a72" translate="yes" xml:space="preserve">
          <source>Then save the file to your &lt;em&gt;application/controllers/&lt;/em&gt; folder.</source>
          <target state="translated">그런 다음 파일을 &lt;em&gt;application / controllers /&lt;/em&gt; 폴더에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="666a6687baa87dfd8f87dc2107af0807a64173c5" translate="yes" xml:space="preserve">
          <source>Then save the file to your &lt;strong&gt;/app/Controllers/&lt;/strong&gt; directory.</source>
          <target state="translated">그런 다음 파일을 &lt;strong&gt;/ app / Controllers /&lt;/strong&gt; 디렉토리에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="ea3c8ad3666095be6cc47a2c5b1f302a9bff89bc" translate="yes" xml:space="preserve">
          <source>Then save the file to your &lt;strong&gt;app/Controllers/&lt;/strong&gt; directory.</source>
          <target state="translated">그런 다음 파일을 &lt;strong&gt;app / Controllers /&lt;/strong&gt; 디렉토리에 저장합니다 .</target>
        </trans-unit>
        <trans-unit id="0704065e08d419bf187f7ee76d229a9631e9285d" translate="yes" xml:space="preserve">
          <source>Then you can use any of the three standard rendering methods that it provides: &lt;strong&gt;render(viewpath, options, save)&lt;/strong&gt;, &lt;strong&gt;setVar(name, value, context)&lt;/strong&gt; and &lt;strong&gt;setData(data, context)&lt;/strong&gt;. You will also be able to specify delimiters directly, through the &lt;strong&gt;setDelimiters(left,right)&lt;/strong&gt; method.</source>
          <target state="translated">그런 다음 제공하는 세 가지 표준 렌더링 메서드 인 &lt;strong&gt;render (viewpath, options, save)&lt;/strong&gt; , &lt;strong&gt;setVar (name, value, context)&lt;/strong&gt; 및 &lt;strong&gt;setData (data, context) 중 하나를 사용할 수&lt;/strong&gt; 있습니다. &lt;strong&gt;setDelimiters (left, right)&lt;/strong&gt; 메서드를 통해 구분 기호를 직접 지정할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="18eaf0e30cf97e5a6abbc849bb831e452fda99bc" translate="yes" xml:space="preserve">
          <source>Then you would modify the &lt;code&gt;routes&lt;/code&gt; service to load your class instead:</source>
          <target state="translated">그런 다음 대신 클래스를로드 하도록 &lt;code&gt;routes&lt;/code&gt; 서비스를 수정합니다 .</target>
        </trans-unit>
        <trans-unit id="0cd10a47d1d8d3b78a003caa8071eb783ab81f36" translate="yes" xml:space="preserve">
          <source>Then, on the page that accepts the submission you&amp;rsquo;ll have something like this:</source>
          <target state="translated">그런 다음 제출을 수락하는 페이지에 다음과 같은 내용이 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdf88d84610218a5f7808515ca964ecdfd3b6e2e" translate="yes" xml:space="preserve">
          <source>Then, store the name in one of your language file arrays (without the prefix):</source>
          <target state="translated">그런 다음 접두사없이 언어 파일 배열 중 하나에 이름을 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="ee192db64354b0a4273770d616ccdff5643228d9" translate="yes" xml:space="preserve">
          <source>Then, to globally tell the system to use that group you would set this variable located in the config file:</source>
          <target state="translated">그런 다음 해당 그룹을 사용하도록 시스템에 전역 적으로 알리려면 구성 파일에이 변수를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="8badae02dd6944cf6807cd84ad3d3ded786125aa" translate="yes" xml:space="preserve">
          <source>There are 21 different preferences available to tailor how your email messages are sent. You can either set them manually as described here, or automatically via preferences stored in your config file, described below:</source>
          <target state="translated">전자 메일 메시지 전송 방식을 조정하기 위해 21 가지 기본 설정을 사용할 수 있습니다. 여기에 설명 된대로 수동으로 설정하거나 아래 설명 된 구성 파일에 저장된 환경 설정을 통해 자동으로 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dcb28304f10008a614018c243887ab95ba3dea83" translate="yes" xml:space="preserve">
          <source>There are 5 rotation options:</source>
          <target state="translated">5 가지 회전 옵션이 있습니다.</target>
        </trans-unit>
        <trans-unit id="16a87f99405e3ad2f296c7cf559c6f2cfd0599eb" translate="yes" xml:space="preserve">
          <source>There are a couple of things to note here:</source>
          <target state="translated">여기에 유의해야 할 몇 가지 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1b56afab6c223beb4455222c9746b001aa97f1a2" translate="yes" xml:space="preserve">
          <source>There are actually two types of views that you can create. The first has an array of all of the errors, and is what we just looked at. The other type is simpler, and only contains a single variable, &lt;code&gt;$error&lt;/code&gt; that contains the error message. This is used with the &lt;code&gt;showError()&lt;/code&gt; method where a field must be specified:</source>
          <target state="translated">실제로 만들 수있는보기에는 두 가지 유형이 있습니다. 첫 번째는 모든 오류의 배열을 가지고 있으며 방금 살펴본 것입니다. 다른 유형은 더 간단 하며 오류 메시지를 포함하는 단일 변수 &lt;code&gt;$error&lt;/code&gt; 만 포함 합니다. 필드를 지정해야하는 &lt;code&gt;showError()&lt;/code&gt; 메서드 와 함께 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="fbfa1e4e759a116988deabae9ac095ce71de8a56" translate="yes" xml:space="preserve">
          <source>There are also several deployment repositories, referenced in the installation directions. The deployment repositories are built automatically when a new version is released, and they are not directly contributed to.</source>
          <target state="translated">설치 지침에서 참조되는 여러 배포 저장소도 있습니다. 배포 저장소는 새 버전이 출시 될 때 자동으로 빌드되며 직접 기여하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a5d4e715bf2fc86b4909f77004f8ad1eb5312f97" translate="yes" xml:space="preserve">
          <source>There are eight different log levels, matching to the &lt;a href=&quot;https://tools.ietf.org/html/rfc5424&quot;&gt;RFC 5424&lt;/a&gt; levels, and they are as follows:</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc5424&quot;&gt;RFC 5424&lt;/a&gt; 수준과 일치하는 8 가지 로그 수준 이 있으며 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d9161044595ca3da92e937815d022f60799f3985" translate="yes" xml:space="preserve">
          <source>There are four available processing methods:</source>
          <target state="translated">사용 가능한 4 가지 처리 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2b8b90d11a6c2644f8d653c8b9e48860c798143" translate="yes" xml:space="preserve">
          <source>There are many reasons for running CodeIgniter from the command-line, but they are not always obvious.</source>
          <target state="translated">명령 행에서 CodeIgniter를 실행하는 데는 여러 가지 이유가 있지만 항상 명확한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="fbeb372403a4686ed33cdd01a5a5ca35c25450cc" translate="yes" xml:space="preserve">
          <source>There are no configuration options for legacy support.</source>
          <target state="translated">레거시 지원을위한 구성 옵션이 없습니다.</target>
        </trans-unit>
        <trans-unit id="3e6e088dae5fe1eda5050ae9c1593edcd3628bd9" translate="yes" xml:space="preserve">
          <source>There are occasions where you need to require that only a single instance of a service is created. This is easily handled with the &lt;code&gt;getSharedInstance()&lt;/code&gt; method that is called from within the factory method. This handles checking if an instance has been created and saved within the class, and, if not, creates a new one. All of the factory methods provide a &lt;code&gt;$getShared = true&lt;/code&gt; value as the last parameter. You should stick to the method also:</source>
          <target state="translated">서비스의 단일 인스턴스 만 작성하도록 요구해야하는 경우가 있습니다. 이는 팩토리 메소드 내에서 호출되는 &lt;code&gt;getSharedInstance()&lt;/code&gt; 메소드 로 쉽게 처리됩니다 . 이것은 인스턴스가 클래스 내에서 생성되고 저장되었는지 확인하고, 그렇지 않은 경우 새 인스턴스를 생성합니다. 모든 팩토리 메소드 는 마지막 매개 변수로 &lt;code&gt;$getShared = true&lt;/code&gt; 값을 제공합니다. 또한 방법을 고수해야합니다.</target>
        </trans-unit>
        <trans-unit id="2f872b0a7c11f4879b09000d8634b72d8cf2f0ea" translate="yes" xml:space="preserve">
          <source>There are only two settings:</source>
          <target state="translated">두 가지 설정 만 있습니다.</target>
        </trans-unit>
        <trans-unit id="3eae96b8c21cb27ff18ed7fec99b71d560a0dbb4" translate="yes" xml:space="preserve">
          <source>There are only two things here that probably look unfamiliar to you: the &lt;code&gt;form_open()&lt;/code&gt; function and the &lt;code&gt;validation_errors()&lt;/code&gt; function.</source>
          <target state="translated">여기 익숙하지 않은 것에는 &lt;code&gt;form_open()&lt;/code&gt; 함수와 &lt;code&gt;validation_errors()&lt;/code&gt; 함수의 두 가지만 있습니다.</target>
        </trans-unit>
        <trans-unit id="a48257e6792d25f675eb3bd72bf8dc2bab9c0cb4" translate="yes" xml:space="preserve">
          <source>There are probably only two things here that look unfamiliar. The &lt;code&gt;\Config\Services::validation()-&amp;gt;listErrors()&lt;/code&gt; function is used to report errors related to form validation. The &lt;code&gt;csrf_field()&lt;/code&gt; function creates a hidden input with a CSRF token that helps protect against some common attacks.</source>
          <target state="translated">여기에는 낯설게 보이는 두 가지가있을 것입니다. &lt;code&gt;\Config\Services::validation()-&amp;gt;listErrors()&lt;/code&gt; 함수는 양식 유효성 검사와 관련된 오류보고에 사용됩니다. &lt;code&gt;csrf_field()&lt;/code&gt; 즉 일반적인 공격으로부터 보호하는 데 도움이 토큰 기능은 CSRF에 숨겨진 입력을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="7f14665a57a8a2b041c1168a9c9772d0a31633fe" translate="yes" xml:space="preserve">
          <source>There are quite a few functions necessary to CodeIgniter that need to be loaded early for use in the core classes and thus cannot be placed into a helper. While most users will never have any need to do this, but the option to replace these functions does exist for those who would like to significantly alter the CodeIgniter core. In the &lt;code&gt;App\&lt;/code&gt; directory there is a file &lt;code&gt;Common.php&lt;/code&gt;, and any functions defined in there will take precedence over the versions found in &lt;code&gt;system/Common.php&lt;/code&gt;. This is also an opportunity to create globally-available functions you intend to use throughout the framework.</source>
          <target state="translated">CodeIgniter에 필요한 함수는 코어 클래스에서 사용하기 위해 일찍로드해야하므로 도우미에 배치 할 수 없습니다. 대부분의 사용자는이 작업을 수행 할 필요가 없지만 CodeIgniter 코어를 크게 변경하려는 사용자를 위해 이러한 기능을 대체 할 수있는 옵션이 있습니다. 에서 &lt;code&gt;App\&lt;/code&gt; 디렉토리에 존재하는 파일입니다 &lt;code&gt;Common.php&lt;/code&gt; 및 버전에서 발견보다 우선 순위가 걸릴의 모든 기능이 정의 된 &lt;code&gt;system/Common.php&lt;/code&gt; . 또한 프레임 워크 전체에서 사용하려는 전역 적으로 사용 가능한 함수를 만들 수있는 기회이기도합니다.</target>
        </trans-unit>
        <trans-unit id="f68bad634482bd3d2a3ad12fdfa92a2c34a09c55" translate="yes" xml:space="preserve">
          <source>There are seven available processing methods:</source>
          <target state="translated">사용 가능한 7 가지 처리 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d9aabf3d07b7f514b2a3f01b9c2c933867b33b98" translate="yes" xml:space="preserve">
          <source>There are seven preferences you can set to control various aspects of the calendar. Preferences are set by passing an array of preferences in the second parameter of the loading function. Here is an example:</source>
          <target state="translated">캘린더의 다양한 측면을 제어하기 위해 설정할 수있는 7 가지 기본 설정이 있습니다. 환경 설정은 로딩 기능의 두 번째 매개 변수에 환경 설정 배열을 전달하여 설정됩니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3d255c1d22dd96a7c86a39a055fbfc9c2ab4ebd3" translate="yes" xml:space="preserve">
          <source>There are several development repositories, of interest to potential contributors:</source>
          <target state="translated">잠재적 인 기여자가 관심을 가질 수있는 여러 개발 저장소가 있습니다.</target>
        </trans-unit>
        <trans-unit id="72b2d9b098b2f8cfa96d5c6d592391fab5b6f101" translate="yes" xml:space="preserve">
          <source>There are several points within the model&amp;rsquo;s execution that you can specify multiple callback methods to run. These methods can be used to normalize data, hash passwords, save related entities, and much more. The following points in the model&amp;rsquo;s execution can be affected, each through a class property: &lt;strong&gt;$beforeInsert&lt;/strong&gt;, &lt;strong&gt;$afterInsert&lt;/strong&gt;, &lt;strong&gt;$beforeUpdate&lt;/strong&gt;, &lt;strong&gt;afterUpdate&lt;/strong&gt;, &lt;strong&gt;afterFind&lt;/strong&gt;, and &lt;strong&gt;afterDelete&lt;/strong&gt;.</source>
          <target state="translated">실행할 여러 콜백 메서드를 지정할 수있는 모델 실행 내 여러 지점이 있습니다. 이러한 방법은 데이터 정규화, 암호 해시, 관련 항목 저장 등에 사용할 수 있습니다. 모델 실행의 다음 지점은 각각 클래스 속성을 통해 영향을받을 수 있습니다 : &lt;strong&gt;$ beforeInsert&lt;/strong&gt; , &lt;strong&gt;$ afterInsert&lt;/strong&gt; , &lt;strong&gt;$ beforeUpdate&lt;/strong&gt; , &lt;strong&gt;afterUpdate&lt;/strong&gt; , &lt;strong&gt;afterFind&lt;/strong&gt; 및 &lt;strong&gt;afterDelete&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="96c670a89c5b42c9a798b7ce8da4afb1f79402b9" translate="yes" xml:space="preserve">
          <source>There are several things you may wish to do when creating tables. Add fields, add keys to the table, alter columns. CodeIgniter provides a mechanism for this.</source>
          <target state="translated">테이블을 만들 때 수행 할 수있는 작업이 몇 가지 있습니다. 필드를 추가하고 테이블에 키를 추가하고 열을 변경하십시오. CodeIgniter는이를위한 메커니즘을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="efec2f009cd95d2450db9e7d5eaa1107b9697a55" translate="yes" xml:space="preserve">
          <source>There are several ways that a new Time instance can be created. The first is simply to create a new instance like any other class. When you do it this way, you can pass in a string representing the desired time. This can be any string that PHP&amp;rsquo;s strtotime function can parse:</source>
          <target state="translated">새 Time 인스턴스를 만들 수있는 방법에는 여러 가지가 있습니다. 첫 번째는 다른 클래스와 마찬가지로 새 인스턴스를 만드는 것입니다. 이렇게하면 원하는 시간을 나타내는 문자열을 전달할 수 있습니다. 이것은 PHP의 strtotime 함수가 구문 분석 할 수있는 모든 문자열 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6145569e00d030b12a4f1ad97b894bdb66f76856" translate="yes" xml:space="preserve">
          <source>There are several ways to generate query results:</source>
          <target state="translated">쿼리 결과를 생성하는 몇 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1363a7e9c9236db9434af92e3707763fc2ec59fc" translate="yes" xml:space="preserve">
          <source>There are some breaking changes&amp;hellip;</source>
          <target state="translated">몇 가지 주요 변경 사항이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca80b79e0ca53fe010a4169a2e043d0166bcb9cd" translate="yes" xml:space="preserve">
          <source>There are some configuration items in Javascript library. These can either be set in &lt;em&gt;application/config.php&lt;/em&gt;, within its own &lt;em&gt;config/javascript.php&lt;/em&gt; file, or within any controller usings the &lt;code&gt;set_item()&lt;/code&gt; function.</source>
          <target state="translated">Javascript 라이브러리에 일부 구성 항목이 있습니다. 이것들은 &lt;em&gt;application / config.php&lt;/em&gt; , 자체 &lt;em&gt;config / javascript.php&lt;/em&gt; 파일 또는 &lt;code&gt;set_item()&lt;/code&gt; 함수를 사용 하는 컨트롤러 내에서 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="311eeccd02b1fa8c24793790ab52e2d81b638c93" translate="yes" xml:space="preserve">
          <source>There are some places in the CodeIgniter system where the ENVIRONMENT constant is used. This section describes how default framework behavior is affected.</source>
          <target state="translated">CodeIgniter 시스템에는 ENVIRONMENT 상수가 사용되는 곳이 있습니다. 이 섹션에서는 기본 프레임 워크 동작이 어떻게 영향을 받는지 설명합니다.</target>
        </trans-unit>
        <trans-unit id="f8f7b0035aad4ba6631b1ab5dd58acc1e40dbc86" translate="yes" xml:space="preserve">
          <source>There are three message types:</source>
          <target state="translated">세 가지 메시지 유형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="629f9692433c64b0562f5fcdc3d4ede2b94c0308" translate="yes" xml:space="preserve">
          <source>There are three reserved routes:</source>
          <target state="translated">세 개의 예약 된 경로가 있습니다 :</target>
        </trans-unit>
        <trans-unit id="99b9cae11bccc39c53e1dd6aec9f2742f3ea236a" translate="yes" xml:space="preserve">
          <source>There are three types of substitution supported: simple, looping, and nested. Substitutions are performed in the same sequence that pseudo-variables were added.</source>
          <target state="translated">지원되는 대체 유형은 단순, 루핑 및 중첩의 세 가지입니다. 대체는 유사 변수가 추가 된 것과 동일한 순서로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="8f97aa8379257d9b6db6c439c41821e9268440dc" translate="yes" xml:space="preserve">
          <source>There are times where you want to apply a filter to almost every request, but have a few that should be left alone. One common example is if you need to exclude a few URI&amp;rsquo;s from the CSRF protection filter to allow requests from third-party websites to hit one or two specific URI&amp;rsquo;s, while keeping the rest of them protected. To do this, add an array with the &amp;lsquo;except&amp;rsquo; key and a uri to match as the value alongside the alias:</source>
          <target state="translated">거의 모든 요청에 ​​필터를 적용하고 싶지만 몇 가지만 남겨 두어야하는 경우가 있습니다. 한 가지 일반적인 예는 CSRF 보호 필터에서 URI 몇 개를 제외하여 타사 웹 사이트의 요청이 하나 또는 두 개의 특정 URI에 도달하도록 허용하고 나머지는 보호해야하는 경우입니다. 이렇게하려면 별칭과 함께 값으로 일치시킬 'except'키와 uri가있는 배열을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="55a5368680abd5395640f6e06de5fa8437aba53d" translate="yes" xml:space="preserve">
          <source>There are two &lt;strong&gt;view()&lt;/strong&gt; functions referred to in this tutorial. One is the class method created with &lt;code&gt;public function view($page = 'home')&lt;/code&gt; and &lt;code&gt;echo view('welcome_message');&lt;/code&gt; for displaying a view. Both are &lt;em&gt;technically&lt;/em&gt; a function. But when you create a function in a class, it&amp;rsquo;s called a method.</source>
          <target state="translated">이 튜토리얼에서 언급 된 두 개의 &lt;strong&gt;view ()&lt;/strong&gt; 함수가 있습니다. 하나는 &lt;code&gt;public function view($page = 'home')&lt;/code&gt; 와 &lt;code&gt;echo view('welcome_message');&lt;/code&gt; 생성 된 클래스 메소드입니다 . 보기를 표시합니다. 둘 다 &lt;em&gt;기술적&lt;/em&gt; 으로 기능입니다. 그러나 클래스에서 함수를 만들 때이를 메서드라고합니다.</target>
        </trans-unit>
        <trans-unit id="d3c9b37faf50477c70183affb35728e76b8e9758" translate="yes" xml:space="preserve">
          <source>There are two additional configuration keys you may make use of when initializing the server class: debug can be set to TRUE in order to enable debugging, and xss_clean may be set to FALSE to prevent sending data through the Security library&amp;rsquo;s &lt;code&gt;xss_clean()&lt;/code&gt; method.</source>
          <target state="translated">서버 클래스를 초기화 할 때 사용할 수있는 두 가지 추가 구성 키가 있습니다. 디버깅을 활성화하기 위해 디버그를 TRUE로 설정할 수 있고 보안 라이브러리의 &lt;code&gt;xss_clean()&lt;/code&gt; 메소드를 통해 데이터를 전송하지 못하게하려면 xss_clean을 FALSE로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bd256896c069d53389d269d6b63159287c0bbe6b" translate="yes" xml:space="preserve">
          <source>There are two methods supported to detect the correct locale during the request. The first is a &amp;ldquo;set and forget&amp;rdquo; method that will automatically perform &lt;a href=&quot;../incoming/content_negotiation&quot;&gt;content negotiation&lt;/a&gt; for you to determine the correct locale to use. The second method allows you to specify a segment in your routes that will be used to set the locale.</source>
          <target state="translated">요청 중에 올바른 로케일을 감지하기 위해 지원되는 두 가지 방법이 있습니다. 첫 번째는 사용할 올바른 로케일을 결정하기 위해 &lt;a href=&quot;../incoming/content_negotiation&quot;&gt;컨텐츠 협상&lt;/a&gt; 을 자동으로 수행하는 &quot;설정 후 삭제&quot;방법입니다 . 두 번째 방법을 사용하면 로케일을 설정하는 데 사용할 경로의 세그먼트를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b2f3b1d9f7ac0bc0a6f9614543d2395792ce854" translate="yes" xml:space="preserve">
          <source>There are two types of watermarking that you can use:</source>
          <target state="translated">사용할 수있는 워터 마킹에는 두 가지 유형이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef6e214cf7ef2709759cc2ea89093616dcff90d7" translate="yes" xml:space="preserve">
          <source>There are two ways to connect to a database:</source>
          <target state="translated">데이터베이스에 연결하는 방법에는 두 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a14106d1c67d57749d3aba340af098e00dd489e7" translate="yes" xml:space="preserve">
          <source>There are two ways to load a config file:</source>
          <target state="translated">구성 파일을로드하는 방법에는 두 가지가 있습니다.</target>
        </trans-unit>
        <trans-unit id="e4b19523e4c567a7d5a60289d16084867fe2a9ee" translate="yes" xml:space="preserve">
          <source>There are two ways to set the body of the request for request types that support them, like PUT, OR POST. The first way is to use the &lt;code&gt;setBody()&lt;/code&gt; method:</source>
          <target state="translated">요청을 지원하는 요청 유형 (예 : PUT, OR POST)에 대한 요청 본문을 설정하는 방법에는 두 가지가 있습니다. 첫 번째 방법은 &lt;code&gt;setBody()&lt;/code&gt; 메서드 를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="de5cb69669ee5219405a4d47d33ffdf726ab750f" translate="yes" xml:space="preserve">
          <source>There is a special exception for creating id fields. A field with type id will automatically be assigned as an INT(9) auto_incrementing Primary Key.</source>
          <target state="translated">id 필드를 만들 때 특별한 예외가 있습니다. 유형이 id 인 필드는 자동으로 INT (9) 자동 증분 기본 키로 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="a345b3e8ab95047284a2375f61ed1e17f9f96dbb" translate="yes" xml:space="preserve">
          <source>There is a third &lt;strong&gt;optional&lt;/strong&gt; parameter lets you change the behavior of the method so that it returns data as a string rather than sending it to your browser. This can be useful if you want to process the data in some way. If you set the parameter to TRUE (boolean) it will return data. The default behavior is false, which sends it to your browser. Remember to assign it to a variable if you want the data returned:</source>
          <target state="translated">세 번째 &lt;strong&gt;선택적&lt;/strong&gt; 매개 변수를 사용하면 메서드 동작을 변경하여 데이터를 브라우저로 보내지 않고 문자열로 반환 할 수 있습니다. 어떤 식 으로든 데이터를 처리하려는 경우 유용 할 수 있습니다. 매개 변수를 TRUE (부울)로 설정하면 데이터가 리턴됩니다. 기본 동작은 false이며 브라우저로 보냅니다. 데이터를 반환하려면 변수에 변수를 할당해야합니다.</target>
        </trans-unit>
        <trans-unit id="746084183e6ae241a18e9165a5805b78b608f104" translate="yes" xml:space="preserve">
          <source>There is an optional second parameter that is a TRUE/FALSE value that specifics if the &lt;em&gt;src&lt;/em&gt; should have the page specified by &lt;code&gt;$config['index_page']&lt;/code&gt; added to the address it creates. Presumably, this would be if you were using a media controller:</source>
          <target state="translated">&lt;em&gt;src&lt;/em&gt; 가 생성 한 주소 에 &lt;code&gt;$config['index_page']&lt;/code&gt; 에 의해 지정된 페이지를 추가해야하는지 여부를 지정하는 TRUE / FALSE 값인 선택적 두 번째 매개 변수 가 있습니다. 아마도 미디어 컨트롤러를 사용하는 경우 일 것입니다.</target>
        </trans-unit>
        <trans-unit id="d948c40ccba90a2fb879274eda05a848031a8622" translate="yes" xml:space="preserve">
          <source>There is an optional second parameter that is a true/false value that specifics if the &lt;em&gt;src&lt;/em&gt; should have the page specified by &lt;code&gt;$config['indexPage']&lt;/code&gt; added to the address it creates. Presumably, this would be if you were using a media controller:</source>
          <target state="translated">&lt;em&gt;src&lt;/em&gt; 가 &lt;code&gt;$config['indexPage']&lt;/code&gt; 에 의해 지정된 페이지를 작성하는 주소에 추가 해야하는지 여부를 지정하는 true / false 값인 선택적 두 번째 매개 변수 가 있습니다. 아마도 이것은 미디어 컨트롤러를 사용하는 경우 일 것입니다.</target>
        </trans-unit>
        <trans-unit id="cb5da4013ef25b745ff56238d7647b097516e4c9" translate="yes" xml:space="preserve">
          <source>There is no need to &amp;ldquo;echo&amp;rdquo; or do something with the data returned by $this-&amp;gt;parser-&amp;gt;parse(). It is automatically passed to the output class to be sent to the browser. However, if you do want the data returned instead of sent to the output class you can pass TRUE (boolean) as the third parameter:</source>
          <target state="translated">$ this-&amp;gt; parser-&amp;gt; parse ()에 의해 반환 된 데이터로 &quot;에코&quot;하거나 무언가를 수행 할 필요가 없습니다. 출력 클래스로 자동 전달되어 브라우저로 전송됩니다. 그러나 출력 클래스로 전송되는 대신 데이터를 반환하려면 세 번째 매개 변수로 TRUE (부울)를 전달하면됩니다.</target>
        </trans-unit>
        <trans-unit id="3d73f12ac915274552702605b3e836637243e821" translate="yes" xml:space="preserve">
          <source>There is not already an open Issue</source>
          <target state="translated">아직 미해결 이슈가 없습니다.</target>
        </trans-unit>
        <trans-unit id="e240224c0e0e5260cad246098edaba05c40aa610" translate="yes" xml:space="preserve">
          <source>There is nothing to prevent you from using those abbreviations in your application!</source>
          <target state="translated">응용 프로그램에서 이러한 약어를 사용하지 못하게하는 것은 없습니다!</target>
        </trans-unit>
        <trans-unit id="cbd030c24f719bed28d720abe6db7864c1dae364" translate="yes" xml:space="preserve">
          <source>There is one optional parameter that determines whether the parser should reduce more than two consecutive line breaks down to two. Pass boolean TRUE to enable reducing line breaks:</source>
          <target state="translated">파서가 두 개 이상의 연속적인 줄 바꿈을 두 개로 줄여야하는지 여부를 결정하는 선택적 매개 변수가 하나 있습니다. 줄 바꿈을 줄이려면 부울 TRUE를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="f7df4ee8813099ef3c09a1a7ab76943eeb207539" translate="yes" xml:space="preserve">
          <source>There will be times when you absolutely need something to used and NOT escaped. You can do this by adding exclamation marks to the opening and closing braces:</source>
          <target state="translated">탈출하지 않고 사용할 무언가가 절대적으로 필요할 때가 있습니다. 여는 중괄호와 닫는 중괄호에 느낌표를 추가하면됩니다.</target>
        </trans-unit>
        <trans-unit id="19a88d67606a3eb9568a3f2deb7b1ff6596e618e" translate="yes" xml:space="preserve">
          <source>There will be times when you will have several variables with the same name. The system needs a way of knowing what the correct setting should be. This problem is solved by &amp;ldquo;&lt;em&gt;namespacing&lt;/em&gt;&amp;rdquo; the variables.</source>
          <target state="translated">이름이 같은 변수가 여러 개있는 경우가 있습니다. 시스템은 올바른 설정이 무엇인지 알 수있는 방법이 필요합니다. 이 문제는 변수를 &quot; &lt;em&gt;네임 스페이스&lt;/em&gt; &quot;하여 해결됩니다 .</target>
        </trans-unit>
        <trans-unit id="937e2e3ed4b2b83f4bcb357cc92be95d9b385c8d" translate="yes" xml:space="preserve">
          <source>There&amp;rsquo;s also the ability to change the driver, if for some reason you have both, but want to use MCrypt instead of OpenSSL:</source>
          <target state="translated">어떤 이유로 든 드라이버가 있지만 OpenSSL 대신 MCrypt를 사용하려는 경우 드라이버를 변경하는 기능도 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f2c1f939af667dc99dba7d6c871dfb576530049" translate="yes" xml:space="preserve">
          <source>These algorithms are old, proven to be flawed, and not designed for password hashing in the first place.</source>
          <target state="translated">이 알고리즘은 오래되었고 결함이있는 것으로 입증되었으며 처음에는 비밀번호 해싱 용으로 설계되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="3ecb28890a436a0f7819b94097acc7adaca55cb0" translate="yes" xml:space="preserve">
          <source>These are not composer-installable repositories.</source>
          <target state="translated">이는 작곡가가 설치할 수있는 저장소가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="71876e526866f0e596d162e249b087fdb38ad6a3" translate="yes" xml:space="preserve">
          <source>These are the regular expression rules that we use to validate the product ID - alpha-numeric, dashes, underscores, or periods by default</source>
          <target state="translated">기본적으로 영숫자, 대시, 밑줄 또는 마침표로 제품 ID의 유효성을 검사하는 데 사용하는 정규식 규칙입니다.</target>
        </trans-unit>
        <trans-unit id="aa7a6e2b5361d36977e63c8e1e48ab58f085b06e" translate="yes" xml:space="preserve">
          <source>These are the regular expression rules that we use to validate the product ID and product name - alpha-numeric, dashes, underscores, colons or periods by default</source>
          <target state="translated">기본적으로 영숫자, 대시, 밑줄, 콜론 또는 마침표와 같은 제품 ID 및 제품 이름의 유효성을 검사하는 데 사용하는 정규식 규칙입니다.</target>
        </trans-unit>
        <trans-unit id="58064285061976040c5a7e1018d152921d9670fc" translate="yes" xml:space="preserve">
          <source>These are two ways to provide custom error messages.</source>
          <target state="translated">사용자 지정 오류 메시지를 제공하는 두 가지 방법이 있습니다.</target>
        </trans-unit>
        <trans-unit id="908a14a1aaa60bf87d00643f27a412b8a633ff96" translate="yes" xml:space="preserve">
          <source>These arrays allow you to specify callback methods that will be run on the data at the time specified in the property name.</source>
          <target state="translated">이러한 배열을 사용하면 속성 이름에 지정된 시간에 데이터에서 실행될 콜백 메서드를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="224298923a1843833457f77d787e21adaad78795" translate="yes" xml:space="preserve">
          <source>These effects cause an element(s) to disappear or reappear over time.</source>
          <target state="translated">이러한 효과로 인해 시간이 지남에 따라 요소가 사라지거나 다시 나타납니다.</target>
        </trans-unit>
        <trans-unit id="1bdf165bb9c4974426d883fa2fdb9114531b796d" translate="yes" xml:space="preserve">
          <source>These effects cause an element(s) to slide.</source>
          <target state="translated">이러한 효과로 인해 요소가 미끄러집니다.</target>
        </trans-unit>
        <trans-unit id="00174d3ed3c2ab563906b87fd13481d2e5ef9d65" translate="yes" xml:space="preserve">
          <source>These functions let you fetch table information.</source>
          <target state="translated">이 함수를 사용하면 테이블 정보를 가져올 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35251fd12dd965fa2c868f7d685c5728514c0ead" translate="yes" xml:space="preserve">
          <source>These methods only change the return type for the next find*() method call. After that, it is reset to its default value.</source>
          <target state="translated">이러한 메서드는 다음 find * () 메서드 호출에 대한 반환 유형 만 변경합니다. 그 후 기본값으로 재설정됩니다.</target>
        </trans-unit>
        <trans-unit id="4dd30b4dece0e0da9abef8d96180d21cdf3e5261" translate="yes" xml:space="preserve">
          <source>These methods return a URL for the previous and next pages in relation to the current page being displayed, unlike &lt;code&gt;getPrevious()&lt;/code&gt; and &lt;code&gt;getNext()&lt;/code&gt; that return the URL for the previous or next pages of results on either side of the numbered links. See the previous paragraph for a full explanation.</source>
          <target state="translated">이러한 메서드 는 번호가 매겨진 링크의 양쪽에있는 결과의 이전 또는 다음 페이지에 대한 URL을 반환하는 &lt;code&gt;getPrevious()&lt;/code&gt; 및 &lt;code&gt;getNext()&lt;/code&gt; 와 달리 현재 표시되는 페이지와 관련하여 이전 및 다음 페이지에 대한 URL을 반환합니다. 전체 설명은 이전 단락을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="281c69e51d883d85d1db68f194e683d0c7767438" translate="yes" xml:space="preserve">
          <source>These methods return a boolean true if there are more links that can be displayed on either side of the current page, based on the value passed to &lt;code&gt;setSurroundCount&lt;/code&gt;. For example, let&amp;rsquo;s say we have 20 pages of data. The current page is page 3. If the surrounding count is 2, then the following links would show up in the list: 1, 2, 3, 4, and 5. Since the first link displayed is page one, &lt;code&gt;hasPrevious()&lt;/code&gt; would return &lt;strong&gt;false&lt;/strong&gt; since there is no page zero. However, &lt;code&gt;hasNext()&lt;/code&gt; would return &lt;strong&gt;true&lt;/strong&gt; since there are 15 additional pages of results after page five.</source>
          <target state="translated">이러한 메소드는 &lt;code&gt;setSurroundCount&lt;/code&gt; 에 전달 된 값을 기반으로 현재 페이지의 양쪽에 표시 할 수있는 링크가 더있는 경우 부울 true를 반환합니다 . 예를 들어 20 페이지의 데이터가 있다고 가정 해 보겠습니다. 현재 페이지는 3 페이지입니다. 주변 개수가 2이면 1, 2, 3, 4, 5 링크가 목록에 표시됩니다. 표시된 첫 번째 링크가 1 페이지이므로 &lt;code&gt;hasPrevious()&lt;/code&gt; 가 반환됩니다. 페이지 0이 없기 때문에 &lt;strong&gt;false&lt;/strong&gt; 입니다. 그러나 &lt;code&gt;hasNext()&lt;/code&gt; 는 5 페이지 이후에 15 페이지의 추가 결과 페이지가 있으므로 &lt;strong&gt;true를&lt;/strong&gt; 반환 &lt;strong&gt;합니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="4fcdb9a18774c41683d5a3692b950c027390a8a3" translate="yes" xml:space="preserve">
          <source>These methods return boolean TRUE upon success and FALSE for failure. If they fail you can retrieve the error message using this function:</source>
          <target state="translated">이 메소드는 성공하면 부울 TRUE를, 실패하면 FALSE를 리턴합니다. 실패하면이 기능을 사용하여 오류 메시지를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5de1859f00d8cacac456c17e61e2a1a66b7b9d28" translate="yes" xml:space="preserve">
          <source>These methods return the URL for the previous or next pages of results on either side of the numbered links. See the previous paragraph for a full explanation.</source>
          <target state="translated">이러한 메서드는 번호가 매겨진 링크의 양쪽에있는 결과의 이전 또는 다음 페이지에 대한 URL을 반환합니다. 전체 설명은 이전 단락을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="c08372270eaa7094c05a9480efa5c421e04296f2" translate="yes" xml:space="preserve">
          <source>These methods return the class instance so they can be chained together, as shown above. If they fail they will throw a &lt;code&gt;CodeIgniter\Images\ImageException&lt;/code&gt; that contains the error message. A good practice is to catch the exceptions, showing an error upon failure, like this:</source>
          <target state="translated">이러한 메서드는 위에 표시된 것처럼 함께 연결할 수 있도록 클래스 인스턴스를 반환합니다. 실패 하면 오류 메시지가 포함 된 &lt;code&gt;CodeIgniter\Images\ImageException&lt;/code&gt; 이 발생합니다. 다음과 같이 실패시 오류를 표시하여 예외를 포착하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="caf0735a92fabff95f661a2c84f250729ddb3d32" translate="yes" xml:space="preserve">
          <source>These rules can also be called as discrete methods. For example:</source>
          <target state="translated">이러한 규칙은 개별 메서드라고도합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="178c77d9ac502bfa4c4e5c41717c474162d5c87e" translate="yes" xml:space="preserve">
          <source>These specific rules might not work for all server configurations.</source>
          <target state="translated">이러한 특정 규칙은 모든 서버 구성에서 작동하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f95c5e9099f4efe624c429da3001198591e96d5" translate="yes" xml:space="preserve">
          <source>These validation rules enable you to do the basic checks you might need to verify that uploaded files meet your business needs. Since the value of a file upload HTML field doesn&amp;rsquo;t exist, and is stored in the $_FILES global, the name of the input field will need to be used twice. Once to specify the field name as you would for any other rule, but again as the first parameter of all file upload related rules:</source>
          <target state="translated">이러한 유효성 검사 규칙을 사용하면 업로드 된 파일이 비즈니스 요구 사항을 충족하는지 확인하는 데 필요한 기본 검사를 수행 할 수 있습니다. 파일 업로드 HTML 필드의 값이 존재하지 않고 $ _FILES 전역에 저장되므로 입력 필드의 이름을 두 번 사용해야합니다. 다른 규칙과 마찬가지로 필드 이름을 지정하지만 모든 파일 업로드 관련 규칙의 첫 번째 매개 변수로 지정합니다.</target>
        </trans-unit>
        <trans-unit id="063ba3b9bc217c4888661381c6128d2f4b5015ce" translate="yes" xml:space="preserve">
          <source>These variables are not actual PHP variables, but rather plain text representations that allow you to eliminate PHP from your templates (view files).</source>
          <target state="translated">이러한 변수는 실제 PHP 변수가 아니라 템플릿 (파일보기)에서 PHP를 제거 할 수있는 일반 텍스트 표현입니다.</target>
        </trans-unit>
        <trans-unit id="4824287dc5de8d9d0cbe56b2b0c030019a5bd3b3" translate="yes" xml:space="preserve">
          <source>These will be updated along with the framework whenever you do a &lt;code&gt;composer update&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;composer update&lt;/code&gt; 를 할 때마다 프레임 워크와 함께 업데이트 됩니다.</target>
        </trans-unit>
        <trans-unit id="f333babff833bfd9f3c2694967d31f2424c210ce" translate="yes" xml:space="preserve">
          <source>Third party libraries incorporated must be vetted</source>
          <target state="translated">통합 된 타사 라이브러리는 심사를 거쳐야합니다.</target>
        </trans-unit>
        <trans-unit id="faea92fd53bbcb4500652c888901547aa3e8a100" translate="yes" xml:space="preserve">
          <source>ThirdParty (bundled)</source>
          <target state="translated">타사 (번들)</target>
        </trans-unit>
        <trans-unit id="08635f7bec913f53046ff97dc7c3efda34d33b66" translate="yes" xml:space="preserve">
          <source>This PSR provides a method for organizing file and namespaces to allow for a standard method of autoloading classes. Our &lt;a href=&quot;../concepts/autoloader&quot;&gt;Autoloader&lt;/a&gt; meets the PSR-4 recommendations.</source>
          <target state="translated">이 PSR은 클래스 자동로드의 표준 방법을 허용하도록 파일 및 네임 스페이스를 구성하는 방법을 제공합니다. 우리의 &lt;a href=&quot;../concepts/autoloader&quot;&gt;자동 로더는&lt;/a&gt; PSR-4 권장 사항을 충족합니다.</target>
        </trans-unit>
        <trans-unit id="28cb9e9d5427d741d56b9ea659179b86a09715fd" translate="yes" xml:space="preserve">
          <source>This PSR standardizes a way of representing the HTTP interactions. While many of the concepts became part of our HTTP layer, CodeIgniter does not strive for compatibility with this recommendation.</source>
          <target state="translated">이 PSR은 HTTP 상호 작용을 나타내는 방법을 표준화합니다. 많은 개념이 HTTP 계층의 일부가되었지만 CodeIgniter는이 권장 사항과의 호환성을 위해 노력하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="63c894cf51aa174d956f38f8cf1efa757438590b" translate="yes" xml:space="preserve">
          <source>This PSR was fairly controversial when it first came out. CodeIgniter meets many of the recommendations within, but does not, and will not, meet all of them.</source>
          <target state="translated">이 PSR은 처음 나왔을 때 상당히 논란이 많았습니다. CodeIgniter는 많은 권장 사항을 충족하지만 모든 권장 사항을 충족하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="6776eebda3209f4bc0203068384ae3a7c073a995" translate="yes" xml:space="preserve">
          <source>This allows you access to the response object that was generated, if any:</source>
          <target state="translated">이렇게하면 생성 된 응답 개체에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d3f91c9976910ab7b22cfac9c0f3d081e8d021f" translate="yes" xml:space="preserve">
          <source>This also impacts escaping parameter values for different contexts inside your script. You will have to give each escaped value a unique parameter name.</source>
          <target state="translated">이는 또한 스크립트 내의 다른 컨텍스트에 대한 이스케이프 매개 변수 값에도 영향을줍니다. 이스케이프 된 각 값에 고유 한 매개 변수 이름을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="0fa25e2c7d9a7dc2a4767ef8cebeff29e629ca3f" translate="yes" xml:space="preserve">
          <source>This are handled through the &lt;code&gt;Cache-Control&lt;/code&gt; and &lt;code&gt;ETag&lt;/code&gt; headers. This guide is not the proper place for a thorough introduction to all of the cache headers power, but you can get a good understanding over at &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching&quot;&gt;Google Developers&lt;/a&gt;.</source>
          <target state="translated">이는 &lt;code&gt;Cache-Control&lt;/code&gt; 및 &lt;code&gt;ETag&lt;/code&gt; 헤더를 통해 처리됩니다 . 이 가이드는 모든 캐시 헤더 기능에 대한 철저한 소개를위한 적절한 장소는 아니지만 &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching&quot;&gt;Google Developers&lt;/a&gt; 에서 잘 이해할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="524da95f7e8a1aa0dda42cff93284f9056fbb929" translate="yes" xml:space="preserve">
          <source>This array should be updated with the field names that can be set during save, insert, or update methods. Any field names other than these will be discarded. This helps to protect against just taking input from a form and throwing it all at the model, resulting in potential mass assignment vulnerabilities.</source>
          <target state="translated">이 배열은 저장, 삽입 또는 업데이트 메소드 중에 설정할 수있는 필드 이름으로 업데이트되어야합니다. 이들 이외의 필드 이름은 삭제됩니다. 이렇게하면 양식에서 입력을 가져 와서 모델에 모두 던져서 잠재적 인 대량 할당 취약점이 발생하는 것을 방지 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d398f16fd2a9b4630da7d948a19072749120596e" translate="yes" xml:space="preserve">
          <source>This assertion simply uses the &lt;strong&gt;isOK()&lt;/strong&gt; method to test a response.</source>
          <target state="translated">이 주장은 단순히 &lt;strong&gt;isOK ()&lt;/strong&gt; 메서드를 사용하여 응답을 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="85cb998077ce7ed5b57f92def42cd3d5a025d1ea" translate="yes" xml:space="preserve">
          <source>This automatically loads the &lt;code&gt;Config\Validation&lt;/code&gt; file which contains settings for including multiple Rulesets, and collections of rules that can be easily reused.</source>
          <target state="translated">이렇게하면 여러 규칙 세트 및 쉽게 재사용 할 수있는 규칙 모음을 포함하기위한 설정이 포함 된 &lt;code&gt;Config\Validation&lt;/code&gt; 파일 이 자동으로로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="a20c05aad6100d4192a76f261a64627619d7be40" translate="yes" xml:space="preserve">
          <source>This block is animated in place for a very nice effect.</source>
          <target state="translated">이 블록은 매우 멋진 효과를 내기 위해 제자리에서 애니메이션됩니다.</target>
        </trans-unit>
        <trans-unit id="37eb54dcef71740e96e38ca343c7ae9626aefe09" translate="yes" xml:space="preserve">
          <source>This boolean value determines whether the current date is automatically added to all inserts and updates. If true, will set the current time in the format specified by $dateFormat. This requires that the table have columns named &amp;lsquo;created_at&amp;rsquo; and &amp;lsquo;updated_at&amp;rsquo; in the appropriate data type.</source>
          <target state="translated">이 부울 값은 현재 날짜가 모든 삽입 및 업데이트에 자동으로 추가되는지 여부를 결정합니다. true이면 $ dateFormat에 지정된 형식으로 현재 시간을 설정합니다. 이를 위해서는 테이블에 적절한 데이터 유형의 'created_at'및 'updated_at'라는 열이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="727e132a18a59c2ef82021cd9772a1488e47300b" translate="yes" xml:space="preserve">
          <source>This boolean value determines whether the database is completely refreshed before every test. If true, all migrations are rolled back to version 0. The database is always migrated to the latest available state as defined by &lt;code&gt;$namespace&lt;/code&gt;.</source>
          <target state="translated">이 부울 값은 모든 테스트 전에 데이터베이스를 완전히 새로 고칠 지 여부를 결정합니다. true이면 모든 마이그레이션이 버전 0으로 롤백됩니다. 데이터베이스는 항상 &lt;code&gt;$namespace&lt;/code&gt; 정의 된 사용 가능한 최신 상태로 마이그레이션됩니다 .</target>
        </trans-unit>
        <trans-unit id="804108ebe6ecd77f120e6016b555d4f6ad2bef43" translate="yes" xml:space="preserve">
          <source>This builder is already set up with the model&amp;rsquo;s $table.</source>
          <target state="translated">이 빌더는 이미 모델의 $ table로 설정되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="034866b66ab82477a9cfcc54754f9833c30c8b3f" translate="yes" xml:space="preserve">
          <source>This can also be accessed through the &lt;a href=&quot;cli_library&quot;&gt;CLI&lt;/a&gt; library, but this already has your command removed from the string. These parameters can be used to customize how your scripts behave.</source>
          <target state="translated">&lt;a href=&quot;cli_library&quot;&gt;CLI&lt;/a&gt; 라이브러리를 통해서도 액세스 할 수 있지만 이미 문자열에서 명령이 제거되었습니다. 이러한 매개 변수는 스크립트 작동 방식을 사용자 정의하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="96673ed9b35c8fb73fa02c45dd31e480ae22184f" translate="yes" xml:space="preserve">
          <source>This can also be used to create more dynamic rules at runtime, as long as you take care that any dynamic keys passed in don&amp;rsquo;t conflict with your form data.</source>
          <target state="translated">전달 된 동적 키가 양식 데이터와 충돌하지 않도록주의하는 한 런타임에 더 동적 규칙을 만드는데도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34cb415c8e996708a7bb00d65bc16365ef49dd27" translate="yes" xml:space="preserve">
          <source>This can be beneficial when developing API&amp;rsquo;s with the first URI segment being the version number. It can also be used when the first parameter is a language string:</source>
          <target state="translated">이는 첫 번째 URI 세그먼트가 버전 번호 인 API를 개발할 때 유용 할 수 있습니다. 첫 번째 매개 변수가 언어 문자열 인 경우에도 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b1546fe90a4bcfd3869fa14931e9ccf408a61e0" translate="yes" xml:space="preserve">
          <source>This can be easily done with the &lt;code&gt;prepare()&lt;/code&gt; method. This takes a single parameter, which is a Closure that returns a query object. Query objects are automatically generated by any of the &amp;ldquo;final&amp;rdquo; type queries, including &lt;strong&gt;insert&lt;/strong&gt;, &lt;strong&gt;update&lt;/strong&gt;, &lt;strong&gt;delete&lt;/strong&gt;, &lt;strong&gt;replace&lt;/strong&gt;, and &lt;strong&gt;get&lt;/strong&gt;. This is handled the easiest by using the Query Builder to run a query. The query is not actually run, and the values don&amp;rsquo;t matter since they&amp;rsquo;re never applied, acting instead as placeholders. This returns a PreparedQuery object:</source>
          <target state="translated">이것은 &lt;code&gt;prepare()&lt;/code&gt; 메소드 로 쉽게 수행 할 수 있습니다 . 쿼리 개체를 반환하는 Closure 인 단일 매개 변수를 사용합니다. 쿼리 개체는 &lt;strong&gt;insert&lt;/strong&gt; , &lt;strong&gt;update&lt;/strong&gt; , &lt;strong&gt;delete&lt;/strong&gt; , &lt;strong&gt;replace&lt;/strong&gt; 및 &lt;strong&gt;get을&lt;/strong&gt; 포함하여 &quot;최종&quot;유형 쿼리에 의해 자동으로 생성됩니다 . 쿼리 작성기를 사용하여 쿼리를 실행하면 가장 쉽게 처리 할 수 ​​있습니다. 쿼리는 실제로 실행되지 않으며 값이 적용되지 않고 대신 자리 표시 자 역할을하므로 중요하지 않습니다. 그러면 PreparedQuery 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9a2154bf1fc22684d14c6e6e1460e64d4f6ef196" translate="yes" xml:space="preserve">
          <source>This can be handy for handling the error yourself, or for performing cleanup before the script ends. If you want the error handler to function as normal, you can throw a new exception within the catch block:</source>
          <target state="translated">이것은 오류를 직접 처리하거나 스크립트가 끝나기 전에 정리를 수행하는 데 유용 할 수 있습니다. 오류 처리기가 정상적으로 작동하도록하려면 catch 블록 내에서 새 예외를 throw 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55534d1d1010737507b41958a9166ca693bc5738" translate="yes" xml:space="preserve">
          <source>This can be useful if you need to display a date in a form field for submission.</source>
          <target state="translated">제출을 위해 양식 필드에 날짜를 표시해야하는 경우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="3892f216dce995652ed6cb4f69969fcdacef5534" translate="yes" xml:space="preserve">
          <source>This can be very useful, especially for one-time informational, error or status messages (for example: &amp;ldquo;Record 2 deleted&amp;rdquo;).</source>
          <target state="translated">이 기능은 특히 일회성 정보, 오류 또는 상태 메시지 (예 :&amp;ldquo;기록 2 삭제됨&amp;rdquo;)에 매우 유용합니다.</target>
        </trans-unit>
        <trans-unit id="aee16350210e7e42f8a1779bdd0c61af00df12ff" translate="yes" xml:space="preserve">
          <source>This class does NOT need to be initialized. It is loaded automatically by the &lt;a href=&quot;../libraries/output&quot;&gt;Output Library&lt;/a&gt; if profiling is enabled as shown below.</source>
          <target state="translated">이 클래스는 초기화 할 필요가 없습니다. 아래와 같이 프로파일 링이 활성화 된 경우 &lt;a href=&quot;../libraries/output&quot;&gt;출력 라이브러리에&lt;/a&gt; 의해 자동으로로드됩니다 .</target>
        </trans-unit>
        <trans-unit id="2c04ca7faf60e32469147776e1fed4a3353b16bf" translate="yes" xml:space="preserve">
          <source>This class does not need to be loaded on it&amp;rsquo;s own. Instead, it can be accessed through this request&amp;rsquo;s &lt;code&gt;IncomingRequest&lt;/code&gt; instance. While you cannot access it directly this way, you can easily access all of methods through the &lt;code&gt;negotiate()&lt;/code&gt; method:</source>
          <target state="translated">이 클래스는 자체적으로로드 할 필요가 없습니다. 대신이 요청의 &lt;code&gt;IncomingRequest&lt;/code&gt; 인스턴스를 통해 액세스 할 수 있습니다 . 이 방법으로 직접 액세스 할 수는 없지만 &lt;code&gt;negotiate()&lt;/code&gt; 메서드를 통해 모든 메서드에 쉽게 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5a71733e6bc77602d6faa0d1a8ddeb713ed35f94" translate="yes" xml:space="preserve">
          <source>This class is initialized automatically by the database driver when caching is enabled. Do NOT load this class manually.</source>
          <target state="translated">이 클래스는 캐싱이 사용 가능할 때 데이터베이스 드라이버에 의해 자동으로 초기화됩니다. 이 클래스를 수동으로로드하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="b6235ea2d8cb97ef9b65f064e1d65d0678d86b83" translate="yes" xml:space="preserve">
          <source>This class is initialized automatically by the system so there is no need to do it manually.</source>
          <target state="translated">이 클래스는 시스템에 의해 자동으로 초기화되므로 수동으로 수행 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="5a773a84aa6aa1f6e1798aff216afa8144baa206" translate="yes" xml:space="preserve">
          <source>This class is modeled after the &lt;a href=&quot;http://docs.guzzlephp.org/en/latest/&quot;&gt;Guzzle HTTP Client&lt;/a&gt; library since it is one of the more widely used libraries. Where possible, the syntax has been kept the same so that if your application needs something a little more powerful than what this library provides, you will have to change very little to move over to use Guzzle.</source>
          <target state="translated">이 클래스는 더 널리 사용되는 라이브러리 중 하나이기 때문에 &lt;a href=&quot;http://docs.guzzlephp.org/en/latest/&quot;&gt;Guzzle HTTP 클라이언트&lt;/a&gt; 라이브러리를 모델로합니다 . 가능한 경우 구문은 동일하게 유지되어 응용 프로그램에이 라이브러리가 제공하는 것보다 조금 더 강력한 것이 필요한 경우 Guzzle을 사용하기 위해 이동하기 위해 거의 변경하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="08bb891914dbd259388623b1c7e17177474fa143" translate="yes" xml:space="preserve">
          <source>This class is the parent class that both the &lt;a href=&quot;request&quot;&gt;Request Class&lt;/a&gt; and the &lt;a href=&quot;../outgoing/response&quot;&gt;Response Class&lt;/a&gt; extend from. As such, some methods, such as the content negotiation methods, may apply only to a request or response, and not the other one, but they have been included here to keep the header methods together.</source>
          <target state="translated">이 클래스는 &lt;a href=&quot;request&quot;&gt;요청 클래스&lt;/a&gt; 와 &lt;a href=&quot;../outgoing/response&quot;&gt;응답 클래스가 모두&lt;/a&gt; 확장되는 상위 클래스입니다 . 따라서 콘텐츠 협상 방법과 같은 일부 방법은 요청 또는 응답에만 적용되고 다른 방법에는 적용되지 않을 수 있지만 헤더 방법을 함께 유지하기 위해 여기에 포함되었습니다.</target>
        </trans-unit>
        <trans-unit id="71b0e21151d777af9d206cc839cbf496e1bbb73c" translate="yes" xml:space="preserve">
          <source>This class provides a solid base from which to build your own models, allowing you to rapidly build out your application&amp;rsquo;s model layer.</source>
          <target state="translated">이 클래스는 자체 모델을 구축 할 수있는 견고한 기반을 제공하므로 애플리케이션의 모델 계층을 신속하게 구축 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67734896d912f2b8965aeb6ae5590ebed9a8d513" translate="yes" xml:space="preserve">
          <source>This class requires the &lt;a href=&quot;https://www.php.net/manual/en/book.curl.php&quot;&gt;cURL Library&lt;/a&gt; to be installed in your version of PHP. This is a very common library that is typically available but not all hosts will provide it, so please check with your host to verify if you run into problems.</source>
          <target state="translated">이 클래스를 사용하려면 PHP 버전에 &lt;a href=&quot;https://www.php.net/manual/en/book.curl.php&quot;&gt;cURL 라이브러리&lt;/a&gt; 가 설치되어 있어야합니다. 이것은 일반적으로 사용할 수있는 매우 일반적인 라이브러리이지만 모든 호스트에서 제공하는 것은 아니므로 호스트에 문의하여 문제가 발생하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="be20a80bf17696b848db6b783188be73a46759a6" translate="yes" xml:space="preserve">
          <source>This code looks similar to the controller code that was used earlier. It creates a new model by extending &lt;code&gt;CI_Model&lt;/code&gt; and loads the database library. This will make the database class available through the &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; object.</source>
          <target state="translated">이 코드는 앞에서 사용한 컨트롤러 코드와 비슷합니다. &lt;code&gt;CI_Model&lt;/code&gt; 을 확장하여 새 모델을 작성 하고 데이터베이스 라이브러리를로드합니다. 이렇게하면 &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; 객체를 통해 데이터베이스 클래스를 사용할 수있게됩니다 .</target>
        </trans-unit>
        <trans-unit id="09fa82f65472c7053324c6560affb51a85213d60" translate="yes" xml:space="preserve">
          <source>This code looks similar to the controller code that was used earlier. It creates a new model by extending &lt;code&gt;CodeIgniter\Model&lt;/code&gt; and loads the database library. This will make the database class available through the &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; object.</source>
          <target state="translated">이 코드는 이전에 사용 된 컨트롤러 코드와 유사합니다. &lt;code&gt;CodeIgniter\Model&lt;/code&gt; 을 확장하여 새 모델을 생성 하고 데이터베이스 라이브러리를로드합니다. 이렇게하면 &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; 개체를 통해 데이터베이스 클래스를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9de017ee31206b49707ca594df240d6ecd2f06d8" translate="yes" xml:space="preserve">
          <source>This command will take a string, start printing it on the current line, and wrap it to a set length on new lines. This might be useful when displaying a list of options with descriptions that you want to wrap in the current window and not go off screen:</source>
          <target state="translated">이 명령은 문자열을 가져 와서 현재 줄에 인쇄를 시작하고 새 줄에 설정된 길이로 줄 바꿈합니다. 현재 창에서 줄 바꿈하고 화면을 벗어나지 않을 설명이있는 옵션 목록을 표시 할 때 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="23f7fe9ff13596e7f3d3f6ae32c45622a17f3047" translate="yes" xml:space="preserve">
          <source>This command will take the &lt;strong&gt;sessionSavePath&lt;/strong&gt; and &lt;strong&gt;sessionMatchIP&lt;/strong&gt; settings into account when it generates the code.</source>
          <target state="translated">이 명령은 코드를 생성 할 때 &lt;strong&gt;sessionSavePath&lt;/strong&gt; 및 &lt;strong&gt;sessionMatchIP&lt;/strong&gt; 설정을 고려합니다.</target>
        </trans-unit>
        <trans-unit id="bd8ce5002ffc10ff65dceb7891840fc368226410" translate="yes" xml:space="preserve">
          <source>This compatibility layer contains backports for the &lt;code&gt;hash_equals()&lt;/code&gt; and &lt;code&gt;hash_pbkdf2()&lt;/code&gt; functions, which otherwise require PHP 5.6 and/or PHP 5.5 respectively.</source>
          <target state="translated">이 호환성 레이어에는 &lt;code&gt;hash_equals()&lt;/code&gt; 및 &lt;code&gt;hash_pbkdf2()&lt;/code&gt; 함수에 대한 백 포트가 포함되어 있습니다. 그렇지 않으면 각각 PHP 5.6 및 / 또는 PHP 5.5가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="fd8c93914ac6b1ca4fa1f0c472b5dc7efe0b8106" translate="yes" xml:space="preserve">
          <source>This configuration enables URLs without &amp;ldquo;index.php&amp;rdquo; in them and using CodeIgniter&amp;rsquo;s &amp;ldquo;404 - File Not Found&amp;rdquo; for URLs ending with &amp;ldquo;.php&amp;rdquo;.</source>
          <target state="translated">이 구성은 &quot;index.php&quot;가없는 URL을 활성화하고 &quot;.php&quot;로 끝나는 URL에 대해 CodeIgniter의 &quot;404-파일을 찾을 수 없음&quot;을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="2b942b04cfb21ce20712a7a8f81689b97db9162e" translate="yes" xml:space="preserve">
          <source>This could be as simple as:</source>
          <target state="translated">이것은 다음과 같이 간단 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34fffd999eab7895813700a6185a686bac6727e4" translate="yes" xml:space="preserve">
          <source>This could be used to differentiate messages by status, or create &amp;lsquo;headers&amp;rsquo; by using a different color. You can even set background colors by passing the color name in as the third parameter:</source>
          <target state="translated">상태별로 메시지를 구분하거나 다른 색상을 사용하여 '헤더'를 만드는 데 사용할 수 있습니다. 세 번째 매개 변수로 색상 이름을 전달하여 배경색을 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="18d420293cf5bfd32aba54526d0303bf19fb1722" translate="yes" xml:space="preserve">
          <source>This creates a new folder, ci-news, which contains your application code, with CodeIgniter installed in the vendor folder.</source>
          <target state="translated">그러면 공급 업체 폴더에 CodeIgniter가 설치된 애플리케이션 코드가 포함 된 새 폴더 ci-news가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="e0dea9f08a0e390393f705706672f19bca2fc8ae" translate="yes" xml:space="preserve">
          <source>This defines the format to be used when formatting arrays in responses. If you provide a &lt;code&gt;null&lt;/code&gt; value for &lt;code&gt;$format&lt;/code&gt;, it will be automatically determined through content negotiation.</source>
          <target state="translated">응답에서 배열의 형식을 지정할 때 사용할 형식을 정의합니다. &lt;code&gt;$format&lt;/code&gt; &lt;code&gt;null&lt;/code&gt; 값을 제공하면 콘텐츠 협상을 통해 자동으로 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="954bfec53177a0f60f21a9446c995406893b3595" translate="yes" xml:space="preserve">
          <source>This dependency is optional and these functions will always be declared. If iconv is not available, they WILL fall-back to their non-mbstring versions.</source>
          <target state="translated">이 종속성은 선택 사항이며 이러한 함수는 항상 선언됩니다. iconv를 사용할 수 없으면 비 mbstring 버전으로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="ae0050c31e5146d7e79e7cbd057cdf86e28d1ece" translate="yes" xml:space="preserve">
          <source>This directive says that any incoming request without any content specified should be handled by the &lt;code&gt;index()&lt;/code&gt; method inside the &lt;code&gt;Home&lt;/code&gt; controller.</source>
          <target state="translated">이 지시문은 콘텐츠가 지정되지 않은 수신 요청 은 &lt;code&gt;Home&lt;/code&gt; 컨트롤러 내부의 &lt;code&gt;index()&lt;/code&gt; 메서드에 의해 처리되어야한다고 말합니다 .</target>
        </trans-unit>
        <trans-unit id="a676df192e2a9c967c1766fa6b7657fb3af0e16a" translate="yes" xml:space="preserve">
          <source>This directory holds any directories that might need to be written to in the course of an application&amp;rsquo;s life. This includes directories for storing cache files, logs, and any uploads a user might send. You should add any other directories that your application will need to write to here. This allows you to keep your other primary directories non-writable as an added security measure.</source>
          <target state="translated">이 디렉토리에는 응용 프로그램의 수명 과정에서 작성해야하는 모든 디렉토리가 있습니다. 여기에는 캐시 파일, 로그 및 사용자가 보낼 수있는 업로드를 저장하기위한 디렉토리가 포함됩니다. 여기에 애플리케이션이 작성해야하는 다른 디렉토리를 추가해야합니다. 이를 통해 추가 보안 조치로 다른 기본 디렉토리를 쓸 수 없도록 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d28a333f83e9ff03fdb5c54716f4c69aac4adc4" translate="yes" xml:space="preserve">
          <source>This directory is set up to hold your test files. The &lt;code&gt;_support&lt;/code&gt; directory holds various mock classes and other utilities that you can use while writing your tests. This directory does not need to be transferred to your production servers.</source>
          <target state="translated">이 디렉토리는 테스트 파일을 보관하도록 설정됩니다. &lt;code&gt;_support&lt;/code&gt; 디렉토리는 다양한 모의 수업과 테스트를 작성할 때 사용할 수있는 다른 유틸리티를 보유하고 있습니다. 이 디렉토리는 프로덕션 서버로 전송할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="9667d16125da6adb4305d74895c146b16a9ac484" translate="yes" xml:space="preserve">
          <source>This directory stores the files that make up the framework, itself. While you have a lot of flexibility in how you use the application directory, the files in the system directory should never be modified. Instead, you should extend the classes, or create new classes, to provide the desired functionality.</source>
          <target state="translated">이 디렉토리는 프레임 워크 자체를 구성하는 파일을 저장합니다. 응용 프로그램 디렉토리를 사용하는 방법에는 많은 유연성이 있지만 시스템 디렉토리의 파일은 절대 수정해서는 안됩니다. 대신 원하는 기능을 제공하기 위해 클래스를 확장하거나 새 클래스를 만들어야합니다.</target>
        </trans-unit>
        <trans-unit id="fc7b1ffe1539020a48f4f9b77402d33bab6b04c1" translate="yes" xml:space="preserve">
          <source>This empty class provides convenient access to the database connection, the Query Builder, and a number of additional convenience methods.</source>
          <target state="translated">이 빈 클래스는 데이터베이스 연결, 쿼리 작성기 및 여러 추가 편의 메서드에 대한 편리한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="4c7b1bd28097910dff18cf16bb81c0b627a5bb65" translate="yes" xml:space="preserve">
          <source>This ensures that only the id, title and content fields are sent to be updated.</source>
          <target state="translated">이를 통해 id, title 및 content 필드 만 업데이트되도록 전송됩니다.</target>
        </trans-unit>
        <trans-unit id="a20cf4589eaf1aa6c43a67f4ee26640574c60177" translate="yes" xml:space="preserve">
          <source>This event is triggered whenever a new query has been run, whether successful or not. The only parameter is a &lt;a href=&quot;queries&quot;&gt;Query&lt;/a&gt; instance of the current query. You could use this to display all queries in STDOUT, or logging to a file, or even creating tools to do automatic query analysis to help you spot potentially missing indexes, slow queries, etc. An example usage might be:</source>
          <target state="translated">이 이벤트는 성공 여부에 관계없이 새 쿼리가 실행될 때마다 트리거됩니다. 유일한 매개 변수는 현재 쿼리 의 &lt;a href=&quot;queries&quot;&gt;Query&lt;/a&gt; 인스턴스입니다. 이를 사용하여 모든 쿼리를 STDOUT에 표시하거나 파일에 로깅하거나 자동 쿼리 분석을 수행하는 도구를 만들어 잠재적으로 누락 된 인덱스, 느린 쿼리 등을 찾아 낼 수 있습니다. 사용 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="16b9bfd4d51d1a27739b8022fc9451395b581164" translate="yes" xml:space="preserve">
          <source>This example demonstrates how to compress a file, save it to a folder on your server, and download it to your desktop.</source>
          <target state="translated">이 예제는 파일을 압축하여 서버의 폴더에 저장 한 후 데스크탑으로 다운로드하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="80a18390cb50eb14095fea780e7cb508569a12b2" translate="yes" xml:space="preserve">
          <source>This example gives different results, depending on cascading:</source>
          <target state="translated">이 예제는 계단식에 따라 다른 결과를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="36d317b485aa9fc49051f9839ccc7c032696285b" translate="yes" xml:space="preserve">
          <source>This example shows a plugin named &lt;strong&gt;foo&lt;/strong&gt;. It can manipulate any of the content between its opening and closing tags. In this example, it could work with the text &amp;rdquo; inner content &amp;ldquo;. Plugins are processed before any pseudo-variable replacements happen.</source>
          <target state="translated">이 예제는 &lt;strong&gt;foo&lt;/strong&gt; 라는 플러그인을 보여줍니다 . 여는 태그와 닫는 태그 사이의 모든 내용을 조작 할 수 있습니다. 이 예에서는&amp;rdquo;inner content&amp;ldquo;라는 텍스트와 함께 작동 할 수 있습니다. 플러그인은 의사 변수 교체가 발생하기 전에 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="d7e9e39021f2f329eec2ea02155eff926fb7cb27" translate="yes" xml:space="preserve">
          <source>This example will migrate Blog namespace with any new migrations on the test database group:</source>
          <target state="translated">이 예에서는 테스트 데이터베이스 그룹의 새 마이그레이션을 사용하여 Blog 네임 스페이스를 마이그레이션합니다.</target>
        </trans-unit>
        <trans-unit id="91eecca036b3e4c0e003d1f2c98e09d2c9532420" translate="yes" xml:space="preserve">
          <source>This example would only allow the specified hosts to work if the domain exactly matched &amp;ldquo;accounts.example.com&amp;rdquo;. It would not work under the main site at &amp;ldquo;example.com&amp;rdquo;.</source>
          <target state="translated">이 예에서는 도메인이 &quot;accounts.example.com&quot;과 정확히 일치하는 경우에만 지정된 호스트가 작동하도록 허용합니다. &quot;example.com&quot;의 기본 사이트에서는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d516da3579c66c52e838f68d61c231d7943cc613" translate="yes" xml:space="preserve">
          <source>This example would take the same image and first fix any mobile phone orientation issues, rotate the image by 90 degress, and then crop the result into a 100x100 pixel image, starting at the top left corner. The result would be saved as the thumbnail.</source>
          <target state="translated">이 예제에서는 동일한 이미지를 가져 와서 먼저 휴대폰 방향 문제를 수정하고 이미지를 90도 회전 한 다음 결과를 왼쪽 상단에서 시작하여 100x100 픽셀 이미지로 자릅니다. 결과는 썸네일로 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="980c908ff521dc8a6500fb5b12c55eebfd4b59ed" translate="yes" xml:space="preserve">
          <source>This example would write a single line to the window, with &lt;code&gt;fileA&lt;/code&gt; in yellow, followed by a tab, and then &lt;code&gt;/path/to/file&lt;/code&gt; in white text.</source>
          <target state="translated">이 예제는 창에 단일 행을 작성합니다. &lt;code&gt;fileA&lt;/code&gt; 는 노란색으로, 탭은 다음으로, &lt;code&gt;/path/to/file&lt;/code&gt; 은 흰색 텍스트로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="85f4b65b6e95577879b72fe9a6c9417d47419ab0" translate="yes" xml:space="preserve">
          <source>This exception is a special case allowing for overriding of all other response routing and forcing a redirect to a specific route or URL:</source>
          <target state="translated">이 예외는 다른 모든 응답 라우팅을 재정의하고 특정 경로 또는 URL로 리디렉션을 강제하는 특별한 경우입니다.</target>
        </trans-unit>
        <trans-unit id="5a9791f097a80631703ba813e5f28bee35529889" translate="yes" xml:space="preserve">
          <source>This exception is thrown for database errors, such as when the database connection cannot be created, or when it is temporarily lost:</source>
          <target state="translated">이 예외는 데이터베이스 연결을 만들 수 없거나 일시적으로 끊어진 경우와 같은 데이터베이스 오류에 대해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b068f5845eba00d4e1fedf15e64ec3a98b34aa84" translate="yes" xml:space="preserve">
          <source>This exception should be used when the values from the configuration class are invalid, or when the config class is not the right type, etc:</source>
          <target state="translated">이 예외는 구성 클래스의 값이 유효하지 않거나 구성 클래스가 올바른 유형이 아닌 경우 등에 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="960d87303252ea43081bf787f7b5895dac070bdf" translate="yes" xml:space="preserve">
          <source>This feature has been deprecated from the language library and moved to the &lt;a href=&quot;../helpers/language_helper#lang&quot;&gt;&lt;code&gt;lang()&lt;/code&gt;&lt;/a&gt; function of the &lt;a href=&quot;../helpers/language_helper&quot;&gt;Language Helper&lt;/a&gt;.</source>
          <target state="translated">이 기능은 언어 라이브러리에서 더 이상 사용되지 않으며 &lt;a href=&quot;../helpers/language_helper&quot;&gt;언어 도우미&lt;/a&gt; 의 &lt;a href=&quot;../helpers/language_helper#lang&quot;&gt; &lt;code&gt;lang()&lt;/code&gt; &lt;/a&gt; 함수 로 이동되었습니다 .</target>
        </trans-unit>
        <trans-unit id="c0f79c293364f9808329dd49ed37881cfaaf399d" translate="yes" xml:space="preserve">
          <source>This feature is only available for MySQL and Interbase/Firebird databases.</source>
          <target state="translated">이 기능은 MySQL 및 Interbase / Firebird 데이터베이스에서만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c1b24eb7c23fd71655282908c3cca602a9445f84" translate="yes" xml:space="preserve">
          <source>This file contains server-specific settings. This means you never will need to commit any sensitive information to your version control system. It includes some of the most common ones you want to enter already, though they are all commented out. So uncomment the line with CI_ENVIRONMENT on it, and change &lt;code&gt;production&lt;/code&gt; to &lt;code&gt;development&lt;/code&gt;:</source>
          <target state="translated">이 파일에는 서버 별 설정이 포함되어 있습니다. 즉, 민감한 정보를 버전 제어 시스템에 커밋 할 필요가 없습니다. 모두 주석 처리되어 있지만 이미 입력하려는 가장 일반적인 항목 중 일부가 포함되어 있습니다. 따라서 CI_ENVIRONMENT 라인의 주석 처리를 제거하고 &lt;code&gt;production&lt;/code&gt; 을 &lt;code&gt;development&lt;/code&gt; 변경하십시오 .</target>
        </trans-unit>
        <trans-unit id="e8a0a976facf86105523f7c1be1f594bbe8d5296" translate="yes" xml:space="preserve">
          <source>This folder is meant to be the &amp;ldquo;web root&amp;rdquo; of your site, and your web server would be configured to point to it.</source>
          <target state="translated">이 폴더는 사이트의 &quot;웹 루트&quot;를 의미하며 웹 서버는이를 가리 키도록 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="ae3bd527553322d4ee7175e8b312b353cfea3140" translate="yes" xml:space="preserve">
          <source>This forces a single file to migrate regardless of order or batches. Method &amp;ldquo;up&amp;rdquo; or &amp;ldquo;down&amp;rdquo; is detected based on whether it has already been migrated. &lt;strong&gt;Note&lt;/strong&gt;: This method is recommended only for testing and could cause data consistency issues.</source>
          <target state="translated">이렇게하면 순서 또는 배치에 관계없이 단일 파일이 마이그레이션됩니다. 방법 &quot;up&quot;또는 &quot;down&quot;은 이미 마이그레이션되었는지 여부에 따라 감지됩니다. &lt;strong&gt;참고&lt;/strong&gt; :이 방법은 테스트 용으로 만 권장되며 데이터 일관성 문제를 일으킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f9e9fb8d28d16d2667a1ca22cfb02f7413987d18" translate="yes" xml:space="preserve">
          <source>This form is converted into a PUT request and is a true PUT request as far as the routing and the IncomingRequest class are concerned.</source>
          <target state="translated">이 양식은 PUT 요청으로 변환되며 라우팅 및 IncomingRequest 클래스에 관한 한 진정한 PUT 요청입니다.</target>
        </trans-unit>
        <trans-unit id="725d1029ffe9ce7ec5be1297e5511abc6a9c48cd" translate="yes" xml:space="preserve">
          <source>This function acquires an exclusive lock on the file while writing to it.</source>
          <target state="translated">이 기능은 파일에 쓰는 동안 파일에 대한 독점 잠금을 획득합니다.</target>
        </trans-unit>
        <trans-unit id="cac28d605a40408860abda66d7f9a382add1b6fc" translate="yes" xml:space="preserve">
          <source>This function acts as an alias for PHP&amp;rsquo;s native &lt;code&gt;htmlspecialchars()&lt;/code&gt; function, with the advantage of being able to accept an array of strings.</source>
          <target state="translated">이 함수는 PHP의 네이티브 &lt;code&gt;htmlspecialchars()&lt;/code&gt; 함수 의 별칭으로 작동하며 문자열 배열을 받아 들일 수 있다는 장점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1469356fa89de96548b762d1694cecfcd6777bb" translate="yes" xml:space="preserve">
          <source>This function can be called to stop caching.</source>
          <target state="translated">캐싱을 중지하기 위해이 함수를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1dfaf1dfb4bec9da6f999dadd63b608ce8556dbe" translate="yes" xml:space="preserve">
          <source>This function can only be used in your view files. The consumption will reflect the total memory used by the entire app.</source>
          <target state="translated">이 기능은보기 파일에서만 사용할 수 있습니다. 소비량은 전체 앱에서 사용한 총 메모리를 반영합니다.</target>
        </trans-unit>
        <trans-unit id="5e734ebe11da824e7d5cc62fcc84fdf55eecfa44" translate="yes" xml:space="preserve">
          <source>This function can take a number poorly-formed date formats and convert them into something useful. It also accepts well-formed dates.</source>
          <target state="translated">이 함수는 형식이 잘못된 여러 날짜 형식을 사용하여 유용한 형식으로 변환 할 수 있습니다. 또한 올바른 형식의 날짜도 허용합니다.</target>
        </trans-unit>
        <trans-unit id="206ec51534217ee7313acdbf5762d709a4d52351" translate="yes" xml:space="preserve">
          <source>This function checks both if the &lt;code&gt;PHP_SAPI&lt;/code&gt; value is &amp;lsquo;cli&amp;rsquo; or if the &lt;code&gt;STDIN&lt;/code&gt; constant is defined.</source>
          <target state="translated">이 함수는 &lt;code&gt;PHP_SAPI&lt;/code&gt; 값이 'cli'인지 또는 &lt;code&gt;STDIN&lt;/code&gt; 상수가 정의되어 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="64ec1bb5f75ad5a9c4fb643517f3571ad0f4ff36" translate="yes" xml:space="preserve">
          <source>This function deletes all items from the Query Builder cache.</source>
          <target state="translated">이 기능은 Query Builder 캐시에서 모든 항목을 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="1d1bfa3527099fbf88cabb9e02c248b0886e34a3" translate="yes" xml:space="preserve">
          <source>This function determines if a file is actually writable by attempting to write to it first. Generally only recommended on platforms where this information may be unreliable.</source>
          <target state="translated">이 함수는 파일에 먼저 쓰려고 시도하여 파일이 실제로 쓰기 가능한지 여부를 결정합니다. 일반적으로이 정보를 신뢰할 수없는 플랫폼에서만 권장됩니다.</target>
        </trans-unit>
        <trans-unit id="c181dbf1a0393276e90af9672983b3a764878f52" translate="yes" xml:space="preserve">
          <source>This function does the opposite of &lt;a href=&quot;#ascii_to_entities&quot;&gt;&lt;code&gt;ascii_to_entities()&lt;/code&gt;&lt;/a&gt;. It turns character entities back into ASCII.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#ascii_to_entities&quot;&gt; &lt;code&gt;ascii_to_entities()&lt;/code&gt; &lt;/a&gt; 와 반대입니다 . 문자 엔티티를 다시 ASCII로 바꿉니다.</target>
        </trans-unit>
        <trans-unit id="e60ddca9fcb5c7c66bde19b07a2bce0e7102e143" translate="yes" xml:space="preserve">
          <source>This function enables you to call PHP database functions that are not natively included in CodeIgniter, in a platform independent manner. For example, let&amp;rsquo;s say you want to call the mysql_get_client_info() function, which is &lt;strong&gt;not&lt;/strong&gt; natively supported by CodeIgniter. You could do so like this:</source>
          <target state="translated">이 함수를 사용하면 플랫폼 독립적 인 방식으로 CodeIgniter에 기본적으로 포함되지 않은 PHP 데이터베이스 함수를 호출 할 수 있습니다. 예를 들어, CodeIgniter가 기본적으로 지원 &lt;strong&gt;하지 않는&lt;/strong&gt; mysql_get_client_info () 함수를 호출한다고 가정 해 봅시다 . 당신은 이렇게 할 수 있습니다 :</target>
        </trans-unit>
        <trans-unit id="0b4c5b345afac8749f19042fba954c904e639562" translate="yes" xml:space="preserve">
          <source>This function enables you to call PHP database functions that are not natively included in CodeIgniter, in a platform-independent manner. For example, let&amp;rsquo;s say you want to call the mysql_get_client_info() function, which is &lt;strong&gt;not&lt;/strong&gt; natively supported by CodeIgniter. You could do so like this:</source>
          <target state="translated">이 함수를 사용하면 CodeIgniter에 기본적으로 포함되지 않은 PHP 데이터베이스 함수를 플랫폼 독립적 인 방식으로 호출 할 수 있습니다. 예를 들어 CodeIgniter에서 기본적으로 지원 &lt;strong&gt;하지 않는&lt;/strong&gt; mysql_get_client_info () 함수를 호출한다고 가정 해 보겠습니다 . 다음과 같이 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2a7aac91152dabb2b45a5691242fab53012e58f" translate="yes" xml:space="preserve">
          <source>This function enables you to set &lt;strong&gt;WHERE&lt;/strong&gt; clauses using one of four methods:</source>
          <target state="translated">이 함수를 사용하면 다음 네 가지 방법 중 하나를 사용하여 &lt;strong&gt;WHERE&lt;/strong&gt; 절 을 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ef6c9fdc60b7911db1bbabeb153d30a0cf0edca9" translate="yes" xml:space="preserve">
          <source>This function enables you to set values for inserts or updates.</source>
          <target state="translated">이 기능을 사용하면 삽입 또는 업데이트 값을 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aea9b7acd8e392aacc3cbb4651b2cbf802f7ad72" translate="yes" xml:space="preserve">
          <source>This function ignores ampersands if they are part of existing numbered character entities, e.g. &amp;amp;#123;. Example:</source>
          <target state="translated">이 함수는 앰퍼샌드가 기존의 번호가 매겨진 문자 엔티티 (예 : &amp;amp; # 123;)의 일부인 경우 무시합니다. 예:</target>
        </trans-unit>
        <trans-unit id="a2e14e9bfe8719fad9c5b28059644cf7de1513b0" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED and is just an alias for &lt;a href=&quot;../general/common_functions&quot;&gt;common function&lt;/a&gt;&lt;code&gt;html_escape()&lt;/code&gt; - please use that instead.</source>
          <target state="translated">이 함수는 DEPRECATED이며 &lt;a href=&quot;../general/common_functions&quot;&gt;일반적인 함수 &lt;/a&gt; &lt;code&gt;html_escape()&lt;/code&gt; 의 별칭 일뿐 입니다. 대신 이 함수를 사용 하십시오.</target>
        </trans-unit>
        <trans-unit id="dc52634c0dd730bf964417e38f2bb9aa542beed4" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use PHP&amp;rsquo;s native &lt;a href=&quot;https://secure.php.net/datetime&quot;&gt;DateTime class&lt;/a&gt; instead.</source>
          <target state="translated">이 기능은 더 이상 사용되지 않습니다. 대신 PHP의 기본 &lt;a href=&quot;https://secure.php.net/datetime&quot;&gt;DateTime 클래스를&lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bc3d5eae9d702a12c016f57a0da3a09e0dcee97d" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;date()&lt;/code&gt; combined with &lt;a href=&quot;https://secure.php.net/manual/en/class.datetime.php#datetime.constants.types&quot;&gt;DateTime&amp;rsquo;s format constants&lt;/a&gt; instead:</source>
          <target state="translated">이 기능은 더 이상 사용되지 않습니다. 대신 기본 &lt;code&gt;date()&lt;/code&gt; 를 &lt;a href=&quot;https://secure.php.net/manual/en/class.datetime.php#datetime.constants.types&quot;&gt;DateTime의 형식 상수&lt;/a&gt; 와 결합하여 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6a8a9dcd77676a51b6f33b62ef8aba89a6863664" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;file_get_contents()&lt;/code&gt; instead.</source>
          <target state="translated">이 기능은 더 이상 사용되지 않습니다. 대신 기본 &lt;code&gt;file_get_contents()&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ee697be58d5579422821dffc01f706a1cd4f04f6" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;hash()&lt;/code&gt; instead.</source>
          <target state="translated">이 기능은 더 이상 사용되지 않습니다. 대신 기본 &lt;code&gt;hash()&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="ea4a4913c2cf88f95e548f2ea29473b3e4be14b3" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;str_repeat()&lt;/code&gt; in combination with &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; instead.</source>
          <target state="translated">이 기능은 더 이상 사용되지 않습니다. 기본 &lt;code&gt;str_repeat()&lt;/code&gt; 를 &lt;code&gt;&amp;amp;nbsp;&lt;/code&gt; 대신에.</target>
        </trans-unit>
        <trans-unit id="1e8c9b29aeb665b3790cf4beb2756442e0e3f2d9" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;str_repeat()&lt;/code&gt; in combination with &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; instead.</source>
          <target state="translated">이 기능은 더 이상 사용되지 않습니다. 대신 기본 &lt;code&gt;str_repeat()&lt;/code&gt; 를 &lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt; 와 함께 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="21335c3e8d00c6a559243a37128815137bd94b09" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;str_repeat()&lt;/code&gt; instead.</source>
          <target state="translated">이 기능은 더 이상 사용되지 않습니다. 대신 기본 &lt;code&gt;str_repeat()&lt;/code&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="aab18310e3746761381b7ec89ac2d16054c3049b" translate="yes" xml:space="preserve">
          <source>This function is DEPRECATED. Use the native &lt;code&gt;trim()&lt;/code&gt; instead: | | trim($str, &amp;lsquo;/&amp;rsquo;);</source>
          <target state="translated">이 기능은 더 이상 사용되지 않습니다. 대신 native &lt;code&gt;trim()&lt;/code&gt; 사용하십시오. | | trim ($ str, '/');</target>
        </trans-unit>
        <trans-unit id="28ea4e512218ac9bb00668259f3ad88debfc5a59" translate="yes" xml:space="preserve">
          <source>This function is absolutely identical to &lt;a href=&quot;#form_open&quot;&gt;&lt;code&gt;form_open()&lt;/code&gt;&lt;/a&gt; above, except that it adds a &lt;em&gt;multipart&lt;/em&gt; attribute, which is necessary if you would like to use the form to upload files with.</source>
          <target state="translated">이 함수는 &lt;em&gt;멀티 파트&lt;/em&gt; 속성을 추가한다는 점을 제외하고는 위의 &lt;a href=&quot;#form_open&quot;&gt; &lt;code&gt;form_open()&lt;/code&gt; &lt;/a&gt; 과 완전히 동일 합니다. 폼을 사용하여 파일을 업로드하려는 경우 필요합니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="48cd3bc7dfe364d1fc48f5463cce2de61be138aa" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Config::base_url()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/config&quot;&gt;Config Library&lt;/a&gt; documentation.</source>
          <target state="translated">이 함수는 &lt;code&gt;CI_Config::base_url()&lt;/code&gt; 의 별명입니다 . 자세한 내용은 &lt;a href=&quot;../libraries/config&quot;&gt;구성 라이브러리&lt;/a&gt; 설명서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="cbf9fb7d50a8e4e2580826844c3c571f4d5668d8" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Config::site_url()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/config&quot;&gt;Config Library&lt;/a&gt; documentation.</source>
          <target state="translated">이 함수는 &lt;code&gt;CI_Config::site_url()&lt;/code&gt; 의 별명입니다 . 자세한 내용은 &lt;a href=&quot;../libraries/config&quot;&gt;구성 라이브러리&lt;/a&gt; 설명서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d9fc75e113b4adc12bcf64077dd1fdd581afc21b" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Config::uri_string()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/config&quot;&gt;Config Library&lt;/a&gt; documentation.</source>
          <target state="translated">이 함수는 &lt;code&gt;CI_Config::uri_string()&lt;/code&gt; 의 별명입니다 . 자세한 내용은 &lt;a href=&quot;../libraries/config&quot;&gt;구성 라이브러리&lt;/a&gt; 설명서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="42b354867caa2b01fb1d5ef32341dec80cea9010" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Input::xss_clean()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/input&quot;&gt;Input Library&lt;/a&gt; documentation.</source>
          <target state="translated">이 함수는 &lt;code&gt;CI_Input::xss_clean()&lt;/code&gt; 의 별명입니다 . 자세한 내용은 &lt;a href=&quot;../libraries/input&quot;&gt;입력 라이브러리&lt;/a&gt; 설명서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca7306115b7ddfe5a6ba4e2055acebbecf5e37b9" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Security::entity_decode()&lt;/code&gt;. Fore more info, please see the &lt;a href=&quot;../libraries/security&quot;&gt;Security Library&lt;/a&gt; documentation.</source>
          <target state="translated">이 함수는 &lt;code&gt;CI_Security::entity_decode()&lt;/code&gt; 의 별명입니다 . 자세한 내용은 &lt;a href=&quot;../libraries/security&quot;&gt;보안 라이브러리&lt;/a&gt; 설명서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="4bbc97dffd257ba3053a81a61414205622c26693" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Security::sanitize_filename()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/security&quot;&gt;Security Library&lt;/a&gt; documentation.</source>
          <target state="translated">이 함수는 &lt;code&gt;CI_Security::sanitize_filename()&lt;/code&gt; 의 별명입니다 . 자세한 내용은 &lt;a href=&quot;../libraries/security&quot;&gt;보안 라이브러리&lt;/a&gt; 설명서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b5a040393bdaaa86eb14aca9dd560ae1c94a21ea" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Security::strip_image_tags()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/security&quot;&gt;Security Library&lt;/a&gt; documentation.</source>
          <target state="translated">이 함수는 &lt;code&gt;CI_Security::strip_image_tags()&lt;/code&gt; 의 별명입니다 . 자세한 내용은 &lt;a href=&quot;../libraries/security&quot;&gt;보안 라이브러리&lt;/a&gt; 설명서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe27a409cbe25fb514bb52bf89c96a24e88714bc" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;CI_Typography::auto_typography()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/typography&quot;&gt;Typography Library&lt;/a&gt; documentation.</source>
          <target state="translated">이 함수는 &lt;code&gt;CI_Typography::auto_typography()&lt;/code&gt; 의 별칭입니다 . 자세한 내용은 &lt;a href=&quot;../libraries/typography&quot;&gt;Typography Library&lt;/a&gt; 설명서 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="ac1102570db4117a66ff5f18e6383a32c318245a" translate="yes" xml:space="preserve">
          <source>This function is an alias for &lt;code&gt;\CodeIgniter\Security::sanitize_filename()&lt;/code&gt;. For more info, please see the &lt;a href=&quot;../libraries/security&quot;&gt;Security Library&lt;/a&gt; documentation.</source>
          <target state="translated">이 함수는 &lt;code&gt;\CodeIgniter\Security::sanitize_filename()&lt;/code&gt; 의 별칭입니다 . 자세한 내용은 &lt;a href=&quot;../libraries/security&quot;&gt;보안 라이브러리&lt;/a&gt; 문서 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="3bbad1d4a509fcfe70c16792951014a09e2eb859" translate="yes" xml:space="preserve">
          <source>This function is identical in all respects to the &lt;a href=&quot;#form_checkbox&quot;&gt;&lt;code&gt;form_checkbox()&lt;/code&gt;&lt;/a&gt; function above except that it uses the &amp;ldquo;radio&amp;rdquo; input type.</source>
          <target state="translated">이 함수는 &quot;라디오&quot;입력 유형을 사용 &lt;a href=&quot;#form_checkbox&quot;&gt; &lt;code&gt;form_checkbox()&lt;/code&gt; &lt;/a&gt; 점을 제외하고 위 의 form_checkbox () 함수 와 모든면에서 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="1f2c1c4c95cebd8a2e5316ad19bc50bed3b49988" translate="yes" xml:space="preserve">
          <source>This function is identical in all respects to the &lt;a href=&quot;#form_input&quot;&gt;&lt;code&gt;form_input()&lt;/code&gt;&lt;/a&gt; function above except that it generates a &amp;ldquo;textarea&amp;rdquo; type.</source>
          <target state="translated">이 함수는 &quot;textarea&quot;유형을 생성한다는 점을 제외하고 위 의 &lt;a href=&quot;#form_input&quot;&gt; &lt;code&gt;form_input()&lt;/code&gt; &lt;/a&gt; 함수 와 모든면에서 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="4bb276365402c6804132d346e7de7868f98ca6ba" translate="yes" xml:space="preserve">
          <source>This function is identical in all respects to the &lt;a href=&quot;#form_input&quot;&gt;&lt;code&gt;form_input()&lt;/code&gt;&lt;/a&gt; function above except that it uses the &amp;ldquo;file&amp;rdquo; input type, allowing it to be used to upload files.</source>
          <target state="translated">이 함수는 &quot;file&quot;입력 유형을 사용하여 파일을 업로드하는 데 사용할 수 있다는 점을 제외하면 위 의 &lt;a href=&quot;#form_input&quot;&gt; &lt;code&gt;form_input()&lt;/code&gt; &lt;/a&gt; 함수와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="eb971b11293530362e31483a41138b561c8510d2" translate="yes" xml:space="preserve">
          <source>This function is identical in all respects to the &lt;a href=&quot;#form_input&quot;&gt;&lt;code&gt;form_input()&lt;/code&gt;&lt;/a&gt; function above except that it uses the &amp;ldquo;password&amp;rdquo; input type.</source>
          <target state="translated">이 함수는 &quot;password&quot;입력 유형을 사용한다는 점을 제외하고 위 의 &lt;a href=&quot;#form_input&quot;&gt; &lt;code&gt;form_input()&lt;/code&gt; &lt;/a&gt; 함수 와 모든면에서 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="d1cc54de0767d95a956e430d9375f5d307f677bf" translate="yes" xml:space="preserve">
          <source>This function is identical to &lt;a href=&quot;#form_open&quot;&gt;&lt;code&gt;form_open()&lt;/code&gt;&lt;/a&gt; above, except that it adds a &lt;em&gt;multipart&lt;/em&gt; attribute, which is necessary if you would like to use the form to upload files with.</source>
          <target state="translated">이 함수는 위의 &lt;a href=&quot;#form_open&quot;&gt; &lt;code&gt;form_open()&lt;/code&gt; &lt;/a&gt; 과 동일하지만 , 파일을 업로드하기 위해 양식을 사용하려는 경우 필요한 &lt;em&gt;다중 부분&lt;/em&gt; 속성을 추가한다는 점이 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="ed1a5bec9325eff9adc19151b3b8826e9ba7798f" translate="yes" xml:space="preserve">
          <source>This function is identical to PHP&amp;rsquo;s &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date()&lt;/a&gt; function, except that it lets you use MySQL style date codes, where each code letter is preceded with a percent sign, e.g. &lt;code&gt;%Y %m %d&lt;/code&gt;</source>
          <target state="translated">이 함수는 PHP의 &lt;a href=&quot;http://php.net/manual/en/function.date.php&quot;&gt;date ()&lt;/a&gt; 함수와 동일합니다. 단, 각 코드 문자 앞에 백분율 기호 (예 : &lt;code&gt;%Y %m %d&lt;/code&gt; 가있는 MySQL 스타일 날짜 코드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c87dbb34cbba265ecba734e95ad1ceb55757302" translate="yes" xml:space="preserve">
          <source>This function is identical to the one above, except that multiple instances are joined by OR</source>
          <target state="translated">이 함수는 여러 인스턴스가 OR로 결합된다는 점을 제외하면 위의 함수와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="296b7bc9600c09e0a2b2fc441343390e919d63fd" translate="yes" xml:space="preserve">
          <source>This function is identical to the one above, except that multiple instances are joined by OR:</source>
          <target state="translated">이 함수는 여러 인스턴스가 OR로 결합된다는 점을 제외하고 위의 함수와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="aaa2c4a32230ab4d1feb90d43b79f4a35ebc4377" translate="yes" xml:space="preserve">
          <source>This function is otherwise identical to &lt;code&gt;set_cookie()&lt;/code&gt;, except that it does not have the value and expiration parameters. You can submit an array of values in the first parameter or you can set discrete parameters.</source>
          <target state="translated">이 함수는 값과 만료 매개 변수가 없다는 점을 제외하고 &lt;code&gt;set_cookie()&lt;/code&gt; 와 동일합니다. 첫 번째 매개 변수에 값 배열을 제출하거나 불연속 매개 변수를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a248d9f4a088bc1b5cd7e812a6524f29d51a8560" translate="yes" xml:space="preserve">
          <source>This function is useful when used with &lt;a href=&quot;#timezone_menu&quot;&gt;&lt;code&gt;timezone_menu()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#timezone_menu&quot;&gt; &lt;code&gt;timezone_menu()&lt;/code&gt; &lt;/a&gt; 와 함께 사용할 때 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="43133048c00e8c08d6edfb65af49920ed7df046f" translate="yes" xml:space="preserve">
          <source>This function lets you write messages to your log files. You must supply one of three &amp;ldquo;levels&amp;rdquo; in the first parameter, indicating what type of message it is (debug, error, info), with the message itself in the second parameter.</source>
          <target state="translated">이 기능을 사용하면 로그 파일에 메시지를 쓸 수 있습니다. 첫 번째 매개 변수에는 세 가지 &quot;레벨&quot;중 하나를 제공해야하며 메시지 유형 (디버그, 오류, 정보)을 표시하고 두 번째 매개 변수에는 메시지 자체를 표시해야합니다.</target>
        </trans-unit>
        <trans-unit id="b7d15a25cba8bbb545576dd1fe07a9ae68f664d6" translate="yes" xml:space="preserve">
          <source>This function mainly converts double and single quotes to curly entities, but it also converts em-dashes, double spaces, and ampersands.</source>
          <target state="translated">이 함수는 주로 큰 따옴표와 작은 따옴표를 곱슬 엔티티로 변환하지만 em- 대시, 이중 공백 및 앰퍼샌드도 변환합니다.</target>
        </trans-unit>
        <trans-unit id="a953a82c0a275869ae4175a732434ac3c9b8400a" translate="yes" xml:space="preserve">
          <source>This function must be called to begin caching. All Query Builder queries of the correct type (see below for supported queries) are stored for later use.</source>
          <target state="translated">캐싱을 시작하려면이 함수를 호출해야합니다. 올바른 유형의 모든 Query Builder 쿼리 (지원되는 쿼리는 아래 참조)는 나중에 사용하기 위해 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="53e77948b4acb781abcfe7af97410b40538ebc92" translate="yes" xml:space="preserve">
          <source>This function only handles numbers in the range 1 through 3999. It will return null for any value outside that range .</source>
          <target state="translated">이 함수는 1에서 3999 사이의 숫자 만 처리합니다. 해당 범위를 벗어난 값에 대해서는 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bc7a6117ebc8ca503f2f5a607af983932c8e91e3" translate="yes" xml:space="preserve">
          <source>This function prevents inserting NULL characters between ASCII characters, like Java\0script.</source>
          <target state="translated">이 함수는 Java \ 0script와 같은 ASCII 문자 사이에 NULL 문자를 삽입하지 못하게합니다.</target>
        </trans-unit>
        <trans-unit id="0b7169ec2b5c775e1d680e854a48398a7c607b71" translate="yes" xml:space="preserve">
          <source>This function returns a &lt;em&gt;reference&lt;/em&gt; to the MIMEs array from &lt;em&gt;application/config/mimes.php&lt;/em&gt;.</source>
          <target state="translated">이 함수는 &lt;em&gt;application / config / mimes.php&lt;/em&gt; 에서 MIME 배열에 대한 &lt;em&gt;참조&lt;/em&gt; 를 반환합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="8de26549daa9a7b3cd483260ea07bc2e2bc9a036" translate="yes" xml:space="preserve">
          <source>This function returns a line of text from a loaded language file with simplified syntax that may be more desirable for view files than &lt;code&gt;CI_Lang::line()&lt;/code&gt;.</source>
          <target state="translated">이 함수는 &lt;code&gt;CI_Lang::line()&lt;/code&gt; 보다보기 파일에 더 적합한 구문이 단순화 된로드 된 언어 파일에서 텍스트 줄을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3c11c461dcde867fd92463ee4c58a9d22fdd64d1" translate="yes" xml:space="preserve">
          <source>This function returns the same thing as &lt;a href=&quot;#site_url&quot;&gt;&lt;code&gt;site_url()&lt;/code&gt;&lt;/a&gt;, without the &lt;em&gt;indexPage&lt;/em&gt; being appended.</source>
          <target state="translated">이 함수는 &lt;em&gt;indexPage&lt;/em&gt; 를 추가 하지 않고 &lt;a href=&quot;#site_url&quot;&gt; &lt;code&gt;site_url()&lt;/code&gt; &lt;/a&gt; 과 같은 것을 반환합니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2fb0777ec9cdafc83860eb1d8beda71f2d5197e" translate="yes" xml:space="preserve">
          <source>This function returns the same thing as &lt;a href=&quot;#site_url&quot;&gt;&lt;code&gt;site_url()&lt;/code&gt;&lt;/a&gt;, without the &lt;em&gt;index_page&lt;/em&gt; or &lt;em&gt;url_suffix&lt;/em&gt; being appended.</source>
          <target state="translated">이 함수는 &lt;em&gt;index_page&lt;/em&gt; 또는 &lt;em&gt;url_suffix&lt;/em&gt; 를 추가 하지 않고 &lt;a href=&quot;#site_url&quot;&gt; &lt;code&gt;site_url()&lt;/code&gt; &lt;/a&gt; 과 동일한 것을 반환합니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="603901fe1abb97e6d45ddcdce7d50096df4bf6da" translate="yes" xml:space="preserve">
          <source>This function runs a &lt;code&gt;function_exists()&lt;/code&gt; check and if the &lt;code&gt;Suhosin extension &amp;lt;http://www.hardened-php.net/suhosin/&amp;gt;&lt;/code&gt; is loaded, checks if it doesn&amp;rsquo;t disable the function being checked.</source>
          <target state="translated">이 함수는 &lt;code&gt;function_exists()&lt;/code&gt; 검사를 실행 하고 &lt;code&gt;Suhosin extension &amp;lt;http://www.hardened-php.net/suhosin/&amp;gt;&lt;/code&gt; 드 된 경우 검사중인 기능을 비활성화하지 않는지 검사합니다.</target>
        </trans-unit>
        <trans-unit id="b7893d50839aad8d1bec09386452626dd29299d5" translate="yes" xml:space="preserve">
          <source>This function simplifies the process of writing database inserts. It returns a correctly formatted SQL insert string. Example:</source>
          <target state="translated">이 기능은 데이터베이스 삽입 작성 프로세스를 단순화합니다. 올바른 형식의 SQL 삽입 문자열을 리턴합니다. 예:</target>
        </trans-unit>
        <trans-unit id="3a59ba5f5760631050a9c5af07fc4479c42bceef" translate="yes" xml:space="preserve">
          <source>This function simplifies the process of writing database updates. It returns a correctly formatted SQL update string. Example:</source>
          <target state="translated">이 기능은 데이터베이스 업데이트 작성 프로세스를 단순화합니다. 올바른 형식의 SQL 업데이트 문자열을 반환합니다. 예:</target>
        </trans-unit>
        <trans-unit id="3a75de402c3bab7dd9f458697c5af468d98d19d0" translate="yes" xml:space="preserve">
          <source>This function used to use the &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; tag by default. Older browsers might not support the new HTML5 mark tag, so it is recommended that you insert the following CSS code into your stylesheet if you need to support such browsers:</source>
          <target state="translated">이 기능 은 기본적으로 &lt;code&gt;&amp;lt;strong&amp;gt;&lt;/code&gt; 태그 를 사용했습니다 . 이전 브라우저는 새로운 HTML5 마크 태그를 지원하지 않을 수 있으므로 이러한 브라우저를 지원해야하는 경우 다음 CSS 코드를 스타일 시트에 삽입하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b2600ffbad9f6bdb19b51484968a194786865fbd" translate="yes" xml:space="preserve">
          <source>This function uses a companion config file &lt;code&gt;app/Config/ForeignCharacters.php&lt;/code&gt; to define the to and from array for transliteration.</source>
          <target state="translated">이 함수는 동반 구성 파일 &lt;code&gt;app/Config/ForeignCharacters.php&lt;/code&gt; 를 사용하여 음역을위한 to 및 from 배열을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="9cfb783277dbaf014a719ca5abb3236712df6dae" translate="yes" xml:space="preserve">
          <source>This function uses a companion config file &lt;code&gt;application/config/foreign_chars.php&lt;/code&gt; to define the to and from array for transliteration.</source>
          <target state="translated">이 함수는 컴패니언 구성 파일 &lt;code&gt;application/config/foreign_chars.php&lt;/code&gt; 를 사용하여 음역을위한 배열을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="ba8889a9f4f94ab2789c11c83895ed6eeb8235a3" translate="yes" xml:space="preserve">
          <source>This function was formerly named &lt;code&gt;dohash()&lt;/code&gt;, which has been removed in favor of &lt;code&gt;do_hash()&lt;/code&gt;.</source>
          <target state="translated">이 기능은 이전 명명 하였다 &lt;code&gt;dohash()&lt;/code&gt; , 대신 제거한 &lt;code&gt;do_hash()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b3f3df08a35d5ea2cf68905c474b5e7b70248342" translate="yes" xml:space="preserve">
          <source>This function was introduced because Suhosin terminated script execution, but this turned out to be a bug. A fix has been available for some time (version 0.9.34), but is unfortunately not released yet.</source>
          <target state="translated">이 기능은 Suhosin이 스크립트 실행을 종료했기 때문에 도입되었지만 버그로 밝혀졌습니다. 수정 사항이 한동안 사용되었지만 (버전 0.9.34) 불행히도 아직 릴리스되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="79288af119265a637a00800c5bc1ca18e985595a" translate="yes" xml:space="preserve">
          <source>This function will add &lt;em&gt;http://&lt;/em&gt; in the event that a protocol prefix is missing from a URL.</source>
          <target state="translated">이 함수는 URL에서 프로토콜 접두사가 누락 된 경우 &lt;em&gt;http : //&lt;/em&gt; 를 추가 합니다.</target>
        </trans-unit>
        <trans-unit id="580a78a98b457647c93f9b78d2fa47303df506cc" translate="yes" xml:space="preserve">
          <source>This function will add http:// in the event that a protocol prefix is missing from a URL.</source>
          <target state="translated">이 함수는 URL에서 프로토콜 접두사가 누락 된 경우 http : //를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="9965cad3c8dc5cffce9ce82a61e9d59718ece5f2" translate="yes" xml:space="preserve">
          <source>This function will add or remove a CSS class to its target.</source>
          <target state="translated">이 함수는 CSS 클래스를 대상에 추가하거나 제거합니다.</target>
        </trans-unit>
        <trans-unit id="a2a7dd33554ea7d04458752145e8f07331940a26" translate="yes" xml:space="preserve">
          <source>This function will alias the native &lt;code&gt;cal_days_in_month()&lt;/code&gt;, if it is available.</source>
          <target state="translated">이 함수는 기본 &lt;code&gt;cal_days_in_month()&lt;/code&gt; 가 사용 가능한 경우 별명을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="c0ebb727a1ab498cb510b1e74a7a68140b95b7f2" translate="yes" xml:space="preserve">
          <source>This function will also add a table prefix to your table, assuming you have a prefix specified in your database config file. To enable the prefixing set TRUE (boolean) via the second parameter:</source>
          <target state="translated">이 기능은 데이터베이스 구성 파일에 접두사가 지정되어 있다고 가정 할 때 테이블 접두사를 테이블에 추가합니다. 두 번째 매개 변수를 통해 접두사 세트 TRUE (부울)를 활성화하려면 :</target>
        </trans-unit>
        <trans-unit id="190b38f6be92523917b213bfa7a859cfe15d6834" translate="yes" xml:space="preserve">
          <source>This function will display the 404 error message supplied to it using the error template appropriate to your execution:</source>
          <target state="translated">이 함수는 실행에 적합한 오류 템플릿을 사용하여 제공된 404 오류 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="b7de61c4585f7a59c95c962b6b1ab7f4598ffef7" translate="yes" xml:space="preserve">
          <source>This function will display the error message supplied to it using the error template appropriate to your execution:</source>
          <target state="translated">이 함수는 실행에 적합한 오류 템플릿을 사용하여 제공된 오류 메시지를 표시합니다.</target>
        </trans-unit>
        <trans-unit id="811e57c886fe7358bd1e95303e6d49b2ff7aa4d2" translate="yes" xml:space="preserve">
          <source>This function will extract $radius number of characters before and after the central $phrase with an elipsis before and after.</source>
          <target state="translated">이 함수는 앞뒤에 생략 부호가있는 중앙 $ phrase 앞뒤의 $ radius 문자 수를 추출합니다.</target>
        </trans-unit>
        <trans-unit id="aac35838b30878a37a1f3626eb2e27d124297f16" translate="yes" xml:space="preserve">
          <source>This function will return a server path without symbolic links or relative directory structures. An optional second argument will cause an error to be triggered if the path cannot be resolved.</source>
          <target state="translated">이 함수는 심볼릭 링크 나 상대 디렉토리 구조없이 서버 경로를 반환합니다. 선택적 두 번째 인수는 경로를 확인할 수없는 경우 오류가 트리거되도록합니다.</target>
        </trans-unit>
        <trans-unit id="de89324f973e90129df77d891a20cee32a0be9df" translate="yes" xml:space="preserve">
          <source>This function will return any error messages sent back by the validator. If there are no messages it returns an empty string.</source>
          <target state="translated">이 함수는 유효성 검사기에서 보낸 모든 오류 메시지를 반환합니다. 메시지가 없으면 빈 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="872a09f32ff79332bb3a1eceb2a480b92dd312e1" translate="yes" xml:space="preserve">
          <source>This function will set the field messages.</source>
          <target state="translated">이 기능은 필드 메시지를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="b02ddbda520a844d7c347f709a5c0cf80d16a569" translate="yes" xml:space="preserve">
          <source>This function will set the field validation rules.</source>
          <target state="translated">이 함수는 필드 유효성 검사 규칙을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="e1e64087a2ee8c57032429c5307e4ada7739f783" translate="yes" xml:space="preserve">
          <source>This function will set the field wise error messages.</source>
          <target state="translated">이 기능은 현장 오류 메시지를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="916222b5974e4ee5b75216a9e768e776bec0e401" translate="yes" xml:space="preserve">
          <source>This function will set the validation rules.</source>
          <target state="translated">이 함수는 유효성 검사 규칙을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2a06fd79261ff102088be6456cb4752d1bc0ea4f" translate="yes" xml:space="preserve">
          <source>This function will strip tags from a string, split it at a defined maximum length, and insert an ellipsis.</source>
          <target state="translated">이 함수는 문자열에서 태그를 제거하고 정의 된 최대 길이로 분할 한 후 줄임표를 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="92adb488571ac8aa2c86b63bcf33314d9c838bc8" translate="yes" xml:space="preserve">
          <source>This function will terminate script execution.</source>
          <target state="translated">이 기능은 스크립트 실행을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="6025c3e9e54766c61da79f4ab9418966b4852934" translate="yes" xml:space="preserve">
          <source>This function works the same as &lt;a href=&quot;#url_title&quot;&gt;&lt;code&gt;url_title()&lt;/code&gt;&lt;/a&gt; but it converts all accented characters automatically.</source>
          <target state="translated">이 함수는 &lt;a href=&quot;#url_title&quot;&gt; &lt;code&gt;url_title()&lt;/code&gt; &lt;/a&gt; 과 동일하게 작동 하지만 모든 악센트 부호가있는 문자를 자동으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="586be07abce2fe1ad0fa90bce27fd696e6c7c3f2" translate="yes" xml:space="preserve">
          <source>This has no way of checking if the incoming data is valid JSON or not, you should only use this method if you know that you&amp;rsquo;re expecting JSON.</source>
          <target state="translated">들어오는 데이터가 유효한 JSON인지 여부를 확인할 수있는 방법이 없습니다. JSON이 예상된다는 것을 알고있는 경우에만이 방법을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="5a6def756253381ec9923d7c024ad25c73bff129" translate="yes" xml:space="preserve">
          <source>This has the added benefit of making the views more readable, too.</source>
          <target state="translated">이것은 뷰를 더 읽기 쉽게 만드는 추가적인 이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0064e41c7d8197b99e73662cd607c34d657ccd4" translate="yes" xml:space="preserve">
          <source>This helper function gives you friendlier syntax to get browser cookies. Refer to the &lt;a href=&quot;../incoming/incomingrequest&quot;&gt;IncomingRequest Library&lt;/a&gt; for detailed description of its use, as this function acts very similarly to &lt;code&gt;IncomingRequest::getCookie()&lt;/code&gt;, except it will also prepend the &lt;code&gt;$cookiePrefix&lt;/code&gt; that you might&amp;rsquo;ve set in your &lt;em&gt;app/Config/App.php&lt;/em&gt; file.</source>
          <target state="translated">이 도우미 기능은 브라우저 쿠키를 얻기 위해 더 친숙한 구문을 제공합니다. 이 함수는 &lt;code&gt;IncomingRequest::getCookie()&lt;/code&gt; 와 매우 유사하게 작동하므로 사용에 대한 자세한 설명은 &lt;a href=&quot;../incoming/incomingrequest&quot;&gt;IncomingRequest 라이브러리&lt;/a&gt; 를 참조하세요. 단, &lt;em&gt;app / Config / App.php&lt;/em&gt; 파일 에서 설정했을 수 있는 &lt;code&gt;$cookiePrefix&lt;/code&gt; 가 앞에 추가 됩니다. .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7d76fd42d80a36ba57f9415eaa77283dac255366" translate="yes" xml:space="preserve">
          <source>This helper function gives you friendlier syntax to get browser cookies. Refer to the &lt;a href=&quot;../libraries/input&quot;&gt;Input Library&lt;/a&gt; for detailed description of its use, as this function acts very similarly to &lt;code&gt;CI_Input::cookie()&lt;/code&gt;, except it will also prepend the &lt;code&gt;$config['cookie_prefix']&lt;/code&gt; that you might&amp;rsquo;ve set in your &lt;em&gt;application/config/config.php&lt;/em&gt; file.</source>
          <target state="translated">이 헬퍼 함수는 브라우저 쿠키를 얻기 위해보다 친근한 구문을 제공합니다. 이 함수는 &lt;code&gt;CI_Input::cookie()&lt;/code&gt; 와 매우 유사하게 작동하므로 &lt;em&gt;애플리케이션 /&lt;/em&gt; 설정에서 설정했을 수도 있는 &lt;code&gt;$config['cookie_prefix']&lt;/code&gt; 를 앞에 두는 점을 제외하고는 사용에 대한 자세한 설명은 &lt;a href=&quot;../libraries/input&quot;&gt;입력 라이브러리&lt;/a&gt; 를 참조하십시오 . &lt;em&gt;/config.php&lt;/em&gt; 파일.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="74b2f02f7078d239af1739730d46620e6519b937" translate="yes" xml:space="preserve">
          <source>This helper function gives you friendlier syntax to set browser cookies. Refer to the &lt;a href=&quot;../libraries/input&quot;&gt;Input Library&lt;/a&gt; for a description of its use, as this function is an alias for &lt;code&gt;CI_Input::set_cookie()&lt;/code&gt;.</source>
          <target state="translated">이 헬퍼 함수는 브라우저 쿠키를 설정하기위한보다 친근한 구문을 제공합니다. 이 함수는 &lt;code&gt;CI_Input::set_cookie()&lt;/code&gt; 의 별명이므로 사용에 대한 설명은 &lt;a href=&quot;../libraries/input&quot;&gt;입력 라이브러리&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7deaeff72453843b2b90b2e16f4f229ea61b87ef" translate="yes" xml:space="preserve">
          <source>This helper function gives you friendlier syntax to set browser cookies. Refer to the &lt;a href=&quot;../outgoing/response&quot;&gt;Response Library&lt;/a&gt; for a description of its use, as this function is an alias for &lt;code&gt;Response::setCookie()&lt;/code&gt;.</source>
          <target state="translated">이 도우미 기능은 브라우저 쿠키를 설정하는 더 친숙한 구문을 제공합니다. 이 함수는 &lt;code&gt;Response::setCookie()&lt;/code&gt; 의 별칭이므로 사용에 대한 설명은 &lt;a href=&quot;../outgoing/response&quot;&gt;응답 라이브러리&lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c4717c587ebe75f40efeb98182f152059cc04e14" translate="yes" xml:space="preserve">
          <source>This helper is automatically loaded by the framework on every request.</source>
          <target state="translated">이 도우미는 모든 요청에 ​​대해 프레임 워크에 의해 자동으로로드됩니다.</target>
        </trans-unit>
        <trans-unit id="ec3a131564042ea77bae1f18c97c5a743224c8c2" translate="yes" xml:space="preserve">
          <source>This helper is loaded using the following code</source>
          <target state="translated">이 도우미는 다음 코드를 사용하여로드됩니다.</target>
        </trans-unit>
        <trans-unit id="3ab7862f392b0a2150493928c18434a48e3751e3" translate="yes" xml:space="preserve">
          <source>This helper is loaded using the following code:</source>
          <target state="translated">이 도우미는 다음 코드를 사용하여로드됩니다.</target>
        </trans-unit>
        <trans-unit id="99307f5fb4109cd1a2379b86376dbc76414c900c" translate="yes" xml:space="preserve">
          <source>This helper method is a static version of the default constructor. It takes a string acceptable as DateTime&amp;rsquo;s constructor as the first parameter, a timezone as the second parameter, and the locale as the third parameter.:</source>
          <target state="translated">이 도우미 메서드는 기본 생성자의 정적 버전입니다. DateTime의 생성자로 허용되는 문자열을 첫 번째 매개 변수로, 시간대를 두 번째 매개 변수로, 로케일을 세 번째 매개 변수로 사용합니다. :</target>
        </trans-unit>
        <trans-unit id="62ee30b24e91b5e2bca64d73d5e15ceb2692cfd0" translate="yes" xml:space="preserve">
          <source>This helps you mix together normal &lt;a href=&quot;../general/urls&quot;&gt;URI Segments&lt;/a&gt; as well as query string arguments, which until 3.0 was not possible.</source>
          <target state="translated">이렇게하면 3.0까지는 불가능했던 일반적인 &lt;a href=&quot;../general/urls&quot;&gt;URI 세그먼트&lt;/a&gt; 와 쿼리 문자열 인수를 함께 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="febab50fbdda06a005ed07c79c4eb1322da66af9" translate="yes" xml:space="preserve">
          <source>This installation technique would suit a developer who wishes to start a new CodeIgniter4 based project.</source>
          <target state="translated">이 설치 기술은 새로운 CodeIgniter4 기반 프로젝트를 시작하려는 개발자에게 적합합니다.</target>
        </trans-unit>
        <trans-unit id="7ad02614db2833e3d79e1c010c33033a08f4a440" translate="yes" xml:space="preserve">
          <source>This is &lt;strong&gt;not&lt;/strong&gt; valid:</source>
          <target state="translated">입니다 &lt;strong&gt;하지&lt;/strong&gt; 유효합니다 :</target>
        </trans-unit>
        <trans-unit id="43d37f88fad38d5a756912465e911c911c43a597" translate="yes" xml:space="preserve">
          <source>This is a caching backend that will always &amp;lsquo;miss.&amp;rsquo; It stores no data, but lets you keep your caching code in place in environments that don&amp;rsquo;t support your chosen cache.</source>
          <target state="translated">이것은 항상 '누락'되는 캐싱 백엔드입니다. 데이터를 저장하지 않지만 선택한 캐시를 지원하지 않는 환경에서 캐싱 코드를 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4960c726802d874c3f0f98b1c7714aa7e4533da8" translate="yes" xml:space="preserve">
          <source>This is a generic file loading method. Supply the filepath and name in the first parameter and it will open and read the file. By default the data is sent to your browser, just like a View file, but if you set the second parameter to boolean TRUE it will instead return the data as a string.</source>
          <target state="translated">이것은 일반적인 파일 로딩 방법입니다. 첫 번째 매개 변수에 파일 경로와 이름을 제공하면 파일을 열고 읽습니다. 기본적으로 데이터는 View 파일과 같이 브라우저로 전송되지만 두 번째 매개 변수를 부울 TRUE로 설정하면 데이터를 문자열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d73f03ec4706c30d2d14c2dba26a21fe38e3d2d7" translate="yes" xml:space="preserve">
          <source>This is a helper method that returns an array containing all of the data related to the file you uploaded. Here is the array prototype:</source>
          <target state="translated">이것은 업로드 한 파일과 관련된 모든 데이터가 포함 된 배열을 반환하는 도우미 메서드입니다. 다음은 배열 프로토 타입입니다.</target>
        </trans-unit>
        <trans-unit id="f97a72cf4007a42b9de867ccb266095fe6db78bf" translate="yes" xml:space="preserve">
          <source>This is a legacy method kept only for backwards compatibility with older applications.</source>
          <target state="translated">이것은 이전 응용 프로그램과의 하위 호환성을 위해서만 유지되는 레거시 방법입니다.</target>
        </trans-unit>
        <trans-unit id="6a21cdb3cd1efc4dff5cc155509ad8cd795efa6f" translate="yes" xml:space="preserve">
          <source>This is a legacy method kept only for backwards compatibility with older applications. It is just an alias for &lt;code&gt;isset($_SESSION[$key])&lt;/code&gt; - please use that instead.</source>
          <target state="translated">이것은 이전 응용 프로그램과의 하위 호환성을 위해서만 유지되는 레거시 방법입니다. &lt;code&gt;isset($_SESSION[$key])&lt;/code&gt; 의 별칭 일뿐 입니다. 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="e82a0628a6263c017695488f4efa237172a23ade" translate="yes" xml:space="preserve">
          <source>This is a legacy method kept only for backwards compatibility with older applications. It is just an alias for &lt;code&gt;unset($_SESSION[$key])&lt;/code&gt; - please use that instead.</source>
          <target state="translated">이것은 이전 응용 프로그램과의 호환성을 위해서만 유지되는 레거시 방법입니다. &lt;code&gt;unset($_SESSION[$key])&lt;/code&gt; 의 별칭 일뿐 입니다. 대신 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7db228d85e7b1207b06cb2cdf9a9572dc1be3d4a" translate="yes" xml:space="preserve">
          <source>This is a legacy method kept only for backwards compatibility with older applications. It is just an alias for the &lt;code&gt;mark_as_flash()&lt;/code&gt; method.</source>
          <target state="translated">이것은 이전 응용 프로그램과의 호환성을 위해서만 유지되는 레거시 방법입니다. &lt;code&gt;mark_as_flash()&lt;/code&gt; 메소드 의 별명 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="abb95415195866c87feb578c0d9f4f86509e2260" translate="yes" xml:space="preserve">
          <source>This is a legacy method kept only for backwards compatibility with older applications. You should directly access &lt;code&gt;$_SESSION&lt;/code&gt; instead.</source>
          <target state="translated">이것은 이전 응용 프로그램과의 호환성을 위해서만 유지되는 레거시 방법입니다. 대신 &lt;code&gt;$_SESSION&lt;/code&gt; 직접 액세스해야 합니다.</target>
        </trans-unit>
        <trans-unit id="0e1fd9ad081de754a51b8c72d7e89d34e1dba7ed" translate="yes" xml:space="preserve">
          <source>This is a replacement for DateTime&amp;rsquo;s method of the same name. This allows the timezone to be set at the same time, and returns a &lt;strong&gt;Time&lt;/strong&gt; instance, instead of DateTime:</source>
          <target state="translated">이것은 같은 이름의 DateTime 메서드를 대체합니다. 이렇게하면 시간대를 동시에 설정할 수 있으며 DateTime 대신 &lt;strong&gt;Time&lt;/strong&gt; 인스턴스를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="3060d47837da9df022206aa4aba12247eb205c81" translate="yes" xml:space="preserve">
          <source>This is a security function that converts PHP tags to entities.</source>
          <target state="translated">PHP 태그를 엔티티로 변환하는 보안 기능입니다.</target>
        </trans-unit>
        <trans-unit id="035e4dda7dcefc3930b3ee8a53d3484d091979e3" translate="yes" xml:space="preserve">
          <source>This is a security function that will strip image tags from a string. It leaves the image URL as plain text.</source>
          <target state="translated">이것은 문자열에서 이미지 태그를 제거하는 보안 기능입니다. 이미지 URL을 일반 텍스트로 남겨 둡니다.</target>
        </trans-unit>
        <trans-unit id="dff92e351491c493260d9b9f2b39c9cc098b765b" translate="yes" xml:space="preserve">
          <source>This is a wrapper around the insert() and update() methods that handle inserting or updating the record automatically, based on whether it finds an array key matching the $primaryKey value:</source>
          <target state="translated">$ primaryKey 값과 일치하는 배열 키를 찾는 지 여부에 따라 레코드 삽입 또는 업데이트를 자동으로 처리하는 insert () 및 update () 메서드를 둘러싼 래퍼입니다.</target>
        </trans-unit>
        <trans-unit id="e069dcca80eda6bc7378c978b82c64a0cb14ad76" translate="yes" xml:space="preserve">
          <source>This is an array of servers that will be used when using the &lt;code&gt;Memcache(d)&lt;/code&gt; handler.</source>
          <target state="translated">이것은 &lt;code&gt;Memcache(d)&lt;/code&gt; 핸들러를 사용할 때 사용될 서버의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="5ee55d46c3c981fd5ef918b421a80688c24f55af" translate="yes" xml:space="preserve">
          <source>This is an optional message string which can be used if you send HTML formatted email. It lets you specify an alternative message with no HTML formatting which is added to the header string for people who do not accept HTML email. If you do not set your own message CodeIgniter will extract the message from your HTML email and strip the tags.</source>
          <target state="translated">이것은 HTML 형식의 전자 메일을 보내는 경우 사용할 수있는 선택적 메시지 문자열입니다. HTML 전자 메일을 수락하지 않는 사람들을 위해 헤더 문자열에 추가되는 HTML 형식이없는 대체 메시지를 지정할 수 있습니다. 자신의 메시지를 설정하지 않으면 CodeIgniter는 HTML 이메일에서 메시지를 추출하고 태그를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="382999574ddec134a2b20400054dd86fad046318" translate="yes" xml:space="preserve">
          <source>This is as good as storing them in plain-text. Really. Do &lt;strong&gt;hashing&lt;/strong&gt;, not &lt;em&gt;encoding&lt;/em&gt;.</source>
          <target state="translated">일반 텍스트로 저장하는 것만 큼 좋습니다. 정말. 수행 &lt;strong&gt;해싱&lt;/strong&gt; 하지 &lt;em&gt;인코딩&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="88c7a1010e54a24f887aa60f47197fab7aed54c1" translate="yes" xml:space="preserve">
          <source>This is best used during cronjobs, data exports, or other large tasks.</source>
          <target state="translated">이것은 cronjob, 데이터 내보내기 또는 기타 대규모 작업 중에 가장 잘 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a27fd01dede0b6c37b30c76b1f17f557f9531984" translate="yes" xml:space="preserve">
          <source>This is configured in the file &lt;strong&gt;app/Config/Modules.php&lt;/strong&gt;.</source>
          <target state="translated">이는 &lt;strong&gt;app / Config / Modules.php&lt;/strong&gt; 파일에서 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="0c4a19f41f357e975c7ecf272280bda06a0a7837" translate="yes" xml:space="preserve">
          <source>This is equivalent to:</source>
          <target state="translated">이것은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="39fcc7d9a2d4d8517e8e7d24a5708085617456bb" translate="yes" xml:space="preserve">
          <source>This is especially useful with the Entity classes, which has an asArray method that returns all public and protected properties (minus the _options property) and makes them available to the Parser.</source>
          <target state="translated">이는 모든 공용 및 보호 된 속성 (_options 속성 제외)을 반환하고 파서에서 사용할 수 있도록하는 asArray 메서드가있는 Entity 클래스에서 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d6a284d8f53333c943cd1e45d959dfc4bf0c2758" translate="yes" xml:space="preserve">
          <source>This is identical to the &lt;strong&gt;equals&lt;/strong&gt; method, except that it only returns true when the date, time, AND timezone are all identical:</source>
          <target state="translated">날짜, 시간 및 시간대가 모두 동일한 경우에만 true를 반환한다는 점을 제외 하면 &lt;strong&gt;equals&lt;/strong&gt; 메소드와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="200c4026b3fd13a7453e27858cd84a346c47f52c" translate="yes" xml:space="preserve">
          <source>This is influenced by the cipher algorithm itself, the IV prepended to the cipher-text and the HMAC authentication message that is also prepended. Furthermore, the encrypted message is also Base64-encoded so that it is safe for storage and transmission, regardless of a possible character set in use.</source>
          <target state="translated">이것은 암호 알고리즘 자체에 영향을받으며 IV는 암호문 앞에 붙고 HMAC 인증 메시지도 앞에 붙습니다. 또한 암호화 된 메시지는 Base64로 인코딩되어 사용 가능한 문자 세트에 관계없이 저장 및 전송에 안전합니다.</target>
        </trans-unit>
        <trans-unit id="41adae30504955c5e0c5d89e71609e62c9be21f5" translate="yes" xml:space="preserve">
          <source>This is influenced by the cipher algorithm itself, the initialization vector (IV) prepended to the cipher-text, and the HMAC authentication message that is also prepended. Furthermore, the encrypted message is also Base64-encoded so that it is safe for storage and transmission regardless of the character-set in use.</source>
          <target state="translated">이는 암호 알고리즘 자체, 암호 텍스트 앞에 추가되는 IV (초기화 벡터) 및 앞에 추가되는 HMAC 인증 메시지의 영향을받습니다. 또한 암호화 된 메시지는 Base64로 인코딩되어 사용중인 문자 집합에 관계없이 저장 및 전송에 안전합니다.</target>
        </trans-unit>
        <trans-unit id="c386959aa2d4ef7fa23c75f51074bfb6df3cc7de" translate="yes" xml:space="preserve">
          <source>This is just a basic class with a few internal helper methods. It is also extendable like any other library, if you really need to do that, but we are not going to explain how &amp;hellip; if you&amp;rsquo;re familiar with how class extensions/overrides work in CI, then you already know how to do it. If not, well, you shouldn&amp;rsquo;t be doing it in the first place.</source>
          <target state="translated">이것은 내부 도우미 메소드가 몇 가지있는 기본 클래스입니다. 또한 다른 라이브러리와 마찬가지로 확장 가능하지만 실제로 어떻게해야하는지에 대해서는 설명하지 않을 것입니다. CI에서 클래스 확장 / 재정의가 작동하는 방식에 익숙하다면 어떻게해야하는지 이미 알고 있습니다. 그렇지 않다면, 처음부터하지 말아야합니다.</target>
        </trans-unit>
        <trans-unit id="45ead81e1276f906103d34d31babcfa60150e9cd" translate="yes" xml:space="preserve">
          <source>This is just an example of course, and callbacks aren&amp;rsquo;t limited to models. You can use any object/method that accepts the field value as its&amp;rsquo; first parameter. You can also use an anonymous function:</source>
          <target state="translated">이것은 단지 예일 뿐이며 콜백은 모델로 제한되지 않습니다. 필드 값을 첫 번째 매개 변수로 승인하는 모든 객체 / 방법을 사용할 수 있습니다. 익명 함수를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2d53f9650f0a5183987badea2577aa5c5f9938b8" translate="yes" xml:space="preserve">
          <source>This is not a full cryptographic solution. If you need more capabilities, for example, public-key encryption, we suggest you consider direct use of OpenSSL or one of the other &lt;a href=&quot;https://www.php.net/manual/en/refs.crypto.php&quot;&gt;Cryptography Extensions&lt;/a&gt;. A more comprehensive package like &lt;a href=&quot;https://github.com/paragonie/halite&quot;&gt;Halite&lt;/a&gt; (an O-O package built on libsodium) is another possibility.</source>
          <target state="translated">이것은 완전한 암호화 솔루션이 아닙니다. 더 많은 기능 (예 : 공개 키 암호화)이 필요한 경우 OpenSSL 또는 다른 &lt;a href=&quot;https://www.php.net/manual/en/refs.crypto.php&quot;&gt;암호화 확장&lt;/a&gt; 중 하나를 직접 사용하는 것이 좋습니다 . 같은보다 포괄적 인 패키지 &lt;a href=&quot;https://github.com/paragonie/halite&quot;&gt;암염&lt;/a&gt; (libsodium에 구축 된 OO 패키지) 또 다른 가능성이다.</target>
        </trans-unit>
        <trans-unit id="669502e4399f2e5f2f0e859e1a4b242308109484" translate="yes" xml:space="preserve">
          <source>This is not actually a mode, it just says that a stream cipher is being used. Required because of the general cipher+mode initialization process.</source>
          <target state="translated">이것은 실제로 모드가 아니며 스트림 암호가 사용되고 있다고 말합니다. 일반 암호 + 모드 초기화 프로세스 때문에 필요합니다.</target>
        </trans-unit>
        <trans-unit id="92087cd54fa13263562092c120e3e8602bac6050" translate="yes" xml:space="preserve">
          <source>This is not an accurate way of determining file MIME types, and is here strictly for convenience. It should not be used for security purposes.</source>
          <target state="translated">이것은 파일 MIME 형식을 결정하는 정확한 방법이 아니며, 편의상 엄격하게 여기에 있습니다. 보안 목적으로 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="61fefa9cf2bfc23c9a2d857606d6f03a913b7919" translate="yes" xml:space="preserve">
          <source>This is not the same as the File Uploading class in previous versions of CodeIgniter. This provides a raw interface to the uploaded files with a few small features.</source>
          <target state="translated">이것은 이전 버전의 CodeIgniter에있는 파일 업로드 클래스와 동일하지 않습니다. 이것은 몇 가지 작은 기능과 함께 업로드 된 파일에 대한 원시 인터페이스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0d174dfa8ae37e167b575ad463a5ad41d14043cf" translate="yes" xml:space="preserve">
          <source>This is purposeful: view files with no PHP.</source>
          <target state="translated">이것은 목적이 있습니다 : PHP없이 파일보기.</target>
        </trans-unit>
        <trans-unit id="dcf1c7e283a0d7f0f6962f045e122ce0146f7f1f" translate="yes" xml:space="preserve">
          <source>This is the array that is used during &lt;a href=&quot;../incoming/content_negotiation&quot;&gt;Content Negotiation&lt;/a&gt; to determine which type of response to return. If no matches are found between what the client requested and what you support, the first format in this array is what will be returned.</source>
          <target state="translated">반환 할 응답 유형을 결정하기 위해 &lt;a href=&quot;../incoming/content_negotiation&quot;&gt;콘텐츠 협상&lt;/a&gt; 중에 사용되는 배열입니다 . 클라이언트가 요청한 항목과 지원하는 항목간에 일치하는 항목이 없으면이 배열의 첫 번째 형식이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d9f29cae0816377d851592c240f85b4ce65bfb2e" translate="yes" xml:space="preserve">
          <source>This is the first of three helper methods to work with the IntlDateFormatter without having to remember their values. This will return a string formatted as you would commonly use for datetime columns in a database (Y-m-d H:i:s):</source>
          <target state="translated">이것은 값을 기억하지 않고 IntlDateFormatter와 함께 작동하는 세 가지 도우미 메서드 중 첫 번째입니다. 이렇게하면 데이터베이스 (Ymd H : i : s)의 datetime 열에 일반적으로 사용하는 형식의 문자열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6f2435c396ad9f1119caa02ccbbb626caf78c1a0" translate="yes" xml:space="preserve">
          <source>This is the localized version of DateTime&amp;rsquo;s format() method. Instead of using the values you might be familiar with, though, you must use values acceptable to the &lt;a href=&quot;https://www.php.net/manual/en/class.intldateformatter.php&quot;&gt;IntlDateFormatter&lt;/a&gt; class. A full listing of values can be found &lt;a href=&quot;https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classSimpleDateFormat.html#details&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">이것은 DateTime의 format () 메서드의 지역화 된 버전입니다. 하지만 익숙한 값을 사용하는 대신 &lt;a href=&quot;https://www.php.net/manual/en/class.intldateformatter.php&quot;&gt;IntlDateFormatter&lt;/a&gt; 클래스에 허용되는 값을 사용해야합니다 . 전체 값 목록은 &lt;a href=&quot;https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classSimpleDateFormat.html#details&quot;&gt;여기에서&lt;/a&gt; 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a8c7636355d2088e815fd36fc826b72c57b00fb5" translate="yes" xml:space="preserve">
          <source>This is the method used by all other methods in this trait to return a response to the client.</source>
          <target state="translated">클라이언트에게 응답을 반환하기 위해이 트레이 트의 다른 모든 메서드에서 사용하는 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="358d455c1129277e19bb41a55f876aba29565665" translate="yes" xml:space="preserve">
          <source>This is the name of the column that uniquely identifies the records in this table. This does not necessarily have to match the primary key that is specified in the database, but is used with methods like &lt;code&gt;find()&lt;/code&gt; to know what column to match the specified value to.</source>
          <target state="translated">이 테이블의 레코드를 고유하게 식별하는 열의 이름입니다. 이것은 반드시 데이터베이스에 지정된 기본 키와 일치 할 필요는 없지만 지정된 값과 일치시킬 열을 알기 &lt;code&gt;find()&lt;/code&gt; 와 같은 메소드와 함께 사용 됩니다.</target>
        </trans-unit>
        <trans-unit id="e6e72f595d3bc95a6b34147d296d518f7c4b19ba" translate="yes" xml:space="preserve">
          <source>This is the platform-independent base DB implementation class. This class will not be called directly. Rather, the adapter class for the specific database will extend and instantiate it.</source>
          <target state="translated">이것은 플랫폼 독립적 인 기본 DB 구현 클래스입니다. 이 클래스는 직접 호출되지 않습니다. 오히려 특정 데이터베이스의 어댑터 클래스가이를 확장하고 인스턴스화합니다.</target>
        </trans-unit>
        <trans-unit id="baff5411a9745a09c0b9598e3cc92499c81469bd" translate="yes" xml:space="preserve">
          <source>This is used by the &lt;code&gt;file&lt;/code&gt; handler to show where it should save the cache files to.</source>
          <target state="translated">이것은 &lt;code&gt;file&lt;/code&gt; 처리기가 캐시 파일을 저장할 위치를 표시하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="d8a847f61b5611538c9fdd9401411d7e943408f1" translate="yes" xml:space="preserve">
          <source>This is used to signal a 404, Page Not Found error. When thrown, the system will show the view found at &lt;code&gt;/app/views/errors/html/error_404.php&lt;/code&gt;. You should customize all of the error views for your site. If, in &lt;code&gt;Config/Routes.php&lt;/code&gt;, you have specified a 404 Override, that will be called instead of the standard 404 page:</source>
          <target state="translated">이것은 404, Page Not Found 오류를 알리는 데 사용됩니다. throw되면 시스템은 &lt;code&gt;/app/views/errors/html/error_404.php&lt;/code&gt; 에 있는보기를 표시합니다 . 사이트에 대한 모든 오류보기를 사용자 정의해야합니다. 에, 만약 &lt;code&gt;Config/Routes.php&lt;/code&gt; , 당신은 표준 404 페이지 대신 호출됩니다 404 재정의, 지정한 :</target>
        </trans-unit>
        <trans-unit id="dc974daba4e9c19d525ad69d70fb4d64806b9432" translate="yes" xml:space="preserve">
          <source>This is useful because unlike &lt;a href=&quot;#site_url&quot;&gt;&lt;code&gt;site_url()&lt;/code&gt;&lt;/a&gt;, you can supply a string to a file, such as an image or stylesheet. For example:</source>
          <target state="translated">&lt;a href=&quot;#site_url&quot;&gt; &lt;code&gt;site_url()&lt;/code&gt; &lt;/a&gt; 과 달리 이미지 나 스타일 시트와 같은 파일에 문자열을 제공 할 수 있기 때문에 유용합니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f59e06cffb2ecea4cfd977cb168acb56148e5e30" translate="yes" xml:space="preserve">
          <source>This is useful in situations where you are using Query Builder to generate SQL (ex. &lt;code&gt;$builder-&amp;gt;getCompiledSelect()&lt;/code&gt;) but then choose to, for instance, run the query:</source>
          <target state="translated">이것은 Query Builder를 사용하여 SQL (예 : &lt;code&gt;$builder-&amp;gt;getCompiledSelect()&lt;/code&gt; ) 을 생성 한 다음 예를 들어 쿼리를 실행하도록 선택하는 상황에서 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="1ab9fc60858c5ca99df16a923ff76a50ddf9445e" translate="yes" xml:space="preserve">
          <source>This is useful in situations where you are using Query Builder to generate SQL (ex. &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_select()&lt;/code&gt;) but then choose to, for instance, run the query:</source>
          <target state="translated">이는 Query Builder를 사용하여 SQL을 생성하는 경우 (예 : &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_select()&lt;/code&gt; )에 유용 하지만 예를 들어 쿼리를 실행하도록 선택하는 경우에 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="d7340815aed4509eb6565afec885a2f30faf7677" translate="yes" xml:space="preserve">
          <source>This is useful when sending the &lt;code&gt;$_POST&lt;/code&gt; array to one of your Models. This prevents users from sending additional POST data to be entered into your tables.</source>
          <target state="translated">&lt;code&gt;$_POST&lt;/code&gt; 배열을 모델 중 하나로 보낼 때 유용합니다 . 이렇게하면 사용자가 추가 POST 데이터를 보내 테이블에 입력 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="e2ce4631a4992534dc7754187bf4d1e921b04a8d" translate="yes" xml:space="preserve">
          <source>This is valid:</source>
          <target state="translated">유효합니다 :</target>
        </trans-unit>
        <trans-unit id="98ce8e47e983bb85718fb19730d97b1dba9ccc3d" translate="yes" xml:space="preserve">
          <source>This is very important. Assigning by reference allows you to use the original CodeIgniter object rather than creating a copy of it.</source>
          <target state="translated">이건 매우 중요합니다. 참조로 할당하면 사본을 작성하지 않고 원래 CodeIgniter 오브젝트를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88474ddc9da224dad21b58710f7249d37266dafd" translate="yes" xml:space="preserve">
          <source>This library has been DEPRECATED and is only kept for backwards compatibility. Please use the new &lt;a href=&quot;encryption&quot;&gt;Encryption Library&lt;/a&gt;.</source>
          <target state="translated">이 라이브러리는 더 이상 사용되지 않으며 이전 버전과의 호환성을 위해서만 유지됩니다. 새로운 &lt;a href=&quot;encryption&quot;&gt;암호화 라이브러리를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="25569ca66cc3e0ba2980987c091f61c816dcfe6a" translate="yes" xml:space="preserve">
          <source>This library is DEPRECATED and should not be used. It has always been with an &amp;lsquo;experimental&amp;rsquo; status and is now no longer supported. Currently only kept for backwards compatibility.</source>
          <target state="translated">이 라이브러리는 더 이상 사용되지 않으며 사용해서는 안됩니다. 항상 '실험적'상태였으며 더 이상 지원되지 않습니다. 현재 이전 버전과의 호환성을 위해서만 유지되었습니다.</target>
        </trans-unit>
        <trans-unit id="1d57af5891abe3119d335369bae3901afc04792b" translate="yes" xml:space="preserve">
          <source>This locates migrations for a namespace (or all namespaces), determines which migrations have not yet been run, and runs them in order of their version (namespaces intermingled).</source>
          <target state="translated">이렇게하면 네임 스페이스 (또는 모든 네임 스페이스)에 대한 마이그레이션을 찾고, 아직 실행되지 않은 마이그레이션을 확인하고, 버전 순서대로 실행합니다 (네임 스페이스가 혼합 됨).</target>
        </trans-unit>
        <trans-unit id="4ee3c3f025e0a95cb2507b605499838c17ddc2c7" translate="yes" xml:space="preserve">
          <source>This means that your application works and you can start making changes to it.</source>
          <target state="translated">이는 애플리케이션이 작동하고 변경을 시작할 수 있음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="46fa023d3e8a5a93ef24f7b6ce5a318cfabb63ee" translate="yes" xml:space="preserve">
          <source>This menu is useful if you run a membership site in which your users are allowed to set their local timezone value.</source>
          <target state="translated">이 메뉴는 사용자가 현지 시간대 값을 설정할 수있는 회원 사이트를 운영하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="eb018aa6d6924386288704c6f4a2c8916241abb6" translate="yes" xml:space="preserve">
          <source>This message displays all of the information necessary to know what the client is requesting. It tells the method for the request (GET, POST, DELETE, etc), and the version of HTTP it supports.</source>
          <target state="translated">이 메시지는 클라이언트가 요청하는 내용을 파악하는 데 필요한 모든 정보를 표시합니다. 요청에 대한 방법 (GET, POST, DELETE 등)과 지원하는 HTTP 버전을 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="41f0ed10931730832b2d7b1cc14cc0a3751faf97" translate="yes" xml:space="preserve">
          <source>This method acts a lot like PHP&amp;rsquo;s own native &lt;code&gt;html_entity_decode()&lt;/code&gt; function in ENT_COMPAT mode, only it tries to detect HTML entities that don&amp;rsquo;t end in a semicolon because some browsers allow that.</source>
          <target state="translated">이 메소드는 ENT_COMPAT 모드에서 PHP 고유의 &lt;code&gt;html_entity_decode()&lt;/code&gt; 함수와 매우 유사하게 작동하지만 일부 브라우저에서는 세미콜론으로 끝나지 않는 HTML 엔터티 만 감지하려고합니다.</target>
        </trans-unit>
        <trans-unit id="1be8bd2dd2a1a632961e99c8f98dd721205b4060" translate="yes" xml:space="preserve">
          <source>This method allows you to define the exact instance that will be returned by the Services class. You can use this to set properties of a service so that it behaves in a certain way, or replace a service with a mocked class.</source>
          <target state="translated">이 메서드를 사용하면 Services 클래스에서 반환 할 정확한 인스턴스를 정의 할 수 있습니다. 이를 사용하여 특정 방식으로 작동하도록 서비스의 속성을 설정하거나 서비스를 모의 클래스로 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eece3cf23ca9b9a38289ffe9af6213bcbd5f1fbd" translate="yes" xml:space="preserve">
          <source>This method allows you to run other commands during the execution of your current command:</source>
          <target state="translated">이 방법을 사용하면 현재 명령을 실행하는 동안 다른 명령을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="843d7b2ac2c3e2b9897ca3affa43a08985fb9e5f" translate="yes" xml:space="preserve">
          <source>This method allows you to use dot-notation to search through an array for a specific-key, and allows the use of a the &amp;lsquo;*&amp;rsquo; wildcard. Given the following array:</source>
          <target state="translated">이 방법을 사용하면 점 표기법을 사용하여 배열에서 특정 키를 검색 할 수 있으며 '*'와일드 카드를 사용할 수 있습니다. 다음 배열이 주어지면 :</target>
        </trans-unit>
        <trans-unit id="3e4b819b5508be41a57b2ee65c79939fb347687e" translate="yes" xml:space="preserve">
          <source>This method also accepts an array of item keys to unset:</source>
          <target state="translated">이 메소드는 또한 설정 해제를 위해 일련의 항목 키를 허용합니다.</target>
        </trans-unit>
        <trans-unit id="03159809103f08878381276d1490b5a26671d6a4" translate="yes" xml:space="preserve">
          <source>This method checks both the PHP SAPI name currently in use and if the &lt;code&gt;STDIN&lt;/code&gt; constant is defined, which is usually a failsafe way to see if PHP is being run via the command line.</source>
          <target state="translated">이 방법은 현재 사용중인 PHP SAPI 이름과 &lt;code&gt;STDIN&lt;/code&gt; 상수가 정의 되어 있는지 확인합니다 . 이는 일반적으로 명령 줄을 통해 PHP가 실행되고 있는지 확인하는 안전한 방법입니다.</target>
        </trans-unit>
        <trans-unit id="c788e27f64e88ce335c60250cbc328da173f7cd3" translate="yes" xml:space="preserve">
          <source>This method checks the associative array of variables available to your views. This is useful if for any reason a var is set in a library or another controller method using &lt;code&gt;$this-&amp;gt;load-&amp;gt;vars()&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 뷰에 사용 가능한 연관 변수 배열을 확인합니다. 이것은 어떤 이유로 든 var가 &lt;code&gt;$this-&amp;gt;load-&amp;gt;vars()&lt;/code&gt; 사용하여 라이브러리 또는 다른 컨트롤러 메소드에 설정되어있는 경우에 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="edc18766fdf49a4699e67eb16f4279fbe37ea8ff" translate="yes" xml:space="preserve">
          <source>This method doesn&amp;rsquo;t work for batched inserts.</source>
          <target state="translated">이 방법은 배치 된 인서트에는 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="401bb86ccb5ded7115a69d6312e30cc518878b00" translate="yes" xml:space="preserve">
          <source>This method doesn&amp;rsquo;t work for batched updates.</source>
          <target state="translated">일괄 업데이트에서는이 방법이 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="700ae76eede772c87f162ebb221dc142157b7bd5" translate="yes" xml:space="preserve">
          <source>This method enables you to generate &lt;strong&gt;LIKE&lt;/strong&gt; clauses for HAVING part or the query, useful for doing searches.</source>
          <target state="translated">이 방법을 사용하면 검색을 수행하는 데 유용한 HAVING 부분 또는 쿼리에 대한 &lt;strong&gt;LIKE&lt;/strong&gt; 절 을 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="93b59204ccd231321c0129754d64dad39ca98d53" translate="yes" xml:space="preserve">
          <source>This method enables you to generate &lt;strong&gt;LIKE&lt;/strong&gt; clauses, useful for doing searches.</source>
          <target state="translated">이 방법을 사용하면 검색에 유용한 &lt;strong&gt;LIKE&lt;/strong&gt; 절 을 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e7eca912b2405289635397ae0b1828f3039d0886" translate="yes" xml:space="preserve">
          <source>This method executes a REPLACE statement, which is basically the SQL standard for (optional) DELETE + INSERT, using &lt;em&gt;PRIMARY&lt;/em&gt; and &lt;em&gt;UNIQUE&lt;/em&gt; keys as the determining factor. In our case, it will save you from the need to implement complex logics with different combinations of &lt;code&gt;select()&lt;/code&gt;, &lt;code&gt;update()&lt;/code&gt;, &lt;code&gt;delete()&lt;/code&gt; and &lt;code&gt;insert()&lt;/code&gt; calls.</source>
          <target state="translated">이 메소드는 기본적으로 &lt;em&gt;PRIMARY&lt;/em&gt; 및 &lt;em&gt;UNIQUE&lt;/em&gt; 키를 결정 요인으로 사용하여 (선택적) DELETE + INSERT에 대한 SQL 표준 인 REPLACE 문을 실행합니다 . 우리의 경우 &lt;code&gt;select()&lt;/code&gt; , &lt;code&gt;update()&lt;/code&gt; , &lt;code&gt;delete()&lt;/code&gt; 및 &lt;code&gt;insert()&lt;/code&gt; 다른 조합으로 복잡한 논리를 구현할 필요가 없습니다. 호출의 .</target>
        </trans-unit>
        <trans-unit id="52672f8c3b68fb7043511ad7887033bef1dc1943" translate="yes" xml:space="preserve">
          <source>This method gets a rule group from the validation configuration:</source>
          <target state="translated">이 메서드는 유효성 검사 구성에서 규칙 그룹을 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="697f7b41b37fbc98edee428b246ae96e5189411e" translate="yes" xml:space="preserve">
          <source>This method is DEPRECATED and is now just an alias for the &lt;code&gt;is_cli()&lt;/code&gt; function.</source>
          <target state="translated">이 메소드는 DEPRECATED이며 이제 &lt;code&gt;is_cli()&lt;/code&gt; 함수 의 별명 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="80a18e8b3d911d2d16c37ce7eac4888f4967dc3c" translate="yes" xml:space="preserve">
          <source>This method is DEPRECATED because it encourages usage of insecure coding practices. Your &lt;em&gt;system/&lt;/em&gt; directory shouldn&amp;rsquo;t be publicly accessible.</source>
          <target state="translated">이 방법은 안전하지 않은 코딩 방법의 사용을 권장하기 때문에 더 이상 사용되지 않습니다. 귀하의 &lt;em&gt;시스템 /&lt;/em&gt; 디렉토리는 공개적으로 액세스 할 수 없게한다.</target>
        </trans-unit>
        <trans-unit id="f963378ce88a201592f9278399a22d7e82d8f19f" translate="yes" xml:space="preserve">
          <source>This method is DEPRECATED. Use &lt;code&gt;userdata()&lt;/code&gt; with no parameters instead.</source>
          <target state="translated">이 방법은 더 이상 사용되지 않습니다. 사용 &lt;code&gt;userdata()&lt;/code&gt; 대신 매개 변수없이 를 .</target>
        </trans-unit>
        <trans-unit id="d8470abcd2ae41be96ee7c95eb011b48a641cfbb" translate="yes" xml:space="preserve">
          <source>This method is almost identical to &lt;code&gt;segment()&lt;/code&gt;, except it adds a trailing and/or leading slash based on the second parameter. If the parameter is not used, a trailing slash added. Examples:</source>
          <target state="translated">이 메소드는 &lt;code&gt;segment()&lt;/code&gt; 거의 동일합니다 두 번째 매개 변수를 기반으로 후행 및 / 또는 선행 슬래시를 추가한다는 점을 제외하면 와 . 매개 변수를 사용하지 않으면 후행 슬래시가 추가됩니다. 예 :</target>
        </trans-unit>
        <trans-unit id="150404b9b63af6a59a4b4130a663ec9d7f68566b" translate="yes" xml:space="preserve">
          <source>This method is an alias for &lt;a href=&quot;../general/common_functions&quot;&gt;Common function&lt;/a&gt;&lt;code&gt;set_status_header()&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../general/common_functions&quot;&gt;공통 함수 &lt;/a&gt; &lt;code&gt;set_status_header()&lt;/code&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="778f3a13b8a8baf9d47751fb9b8bf014435c238c" translate="yes" xml:space="preserve">
          <source>This method is an alias for &lt;a href=&quot;../helpers/date_helper&quot;&gt;Date Helper&lt;/a&gt; function &lt;a href=&quot;../helpers/date_helper#days_in_month&quot;&gt;&lt;code&gt;days_in_month()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../helpers/date_helper&quot;&gt;날짜 헬퍼&lt;/a&gt; 함수 &lt;a href=&quot;../helpers/date_helper#days_in_month&quot;&gt; &lt;code&gt;days_in_month()&lt;/code&gt; &lt;/a&gt; 의 별명입니다 .</target>
        </trans-unit>
        <trans-unit id="eb1b7ee4bdfe8f8d00f52af90a3c23d1c3828c17" translate="yes" xml:space="preserve">
          <source>This method is an alias of the &lt;a href=&quot;config&quot;&gt;config file loading method&lt;/a&gt;: &lt;code&gt;$this-&amp;gt;config-&amp;gt;load()&lt;/code&gt;</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;config&quot;&gt;구성 파일로드 메소드&lt;/a&gt; 의 별명입니다 . &lt;code&gt;$this-&amp;gt;config-&amp;gt;load()&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="57d182ffd2f3025960bb183a035a80a5d44c9056" translate="yes" xml:space="preserve">
          <source>This method is an alias of the &lt;a href=&quot;language&quot;&gt;language loading method&lt;/a&gt;: &lt;code&gt;$this-&amp;gt;lang-&amp;gt;load()&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;language&quot;&gt;언어로드 메소드&lt;/a&gt; 의 별명입니다 : &lt;code&gt;$this-&amp;gt;lang-&amp;gt;load()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="dcdabde96da9f26faabda544d38189b6a6904285" translate="yes" xml:space="preserve">
          <source>This method is automatically called when accessing drivers via &lt;code&gt;$this-&amp;gt;cache-&amp;gt;get()&lt;/code&gt;. However, if the individual drivers are used, make sure to call this method to ensure the driver is supported in the hosting environment.</source>
          <target state="translated">이 메소드는 &lt;code&gt;$this-&amp;gt;cache-&amp;gt;get()&lt;/code&gt; 통해 드라이버에 액세스 할 때 자동으로 호출됩니다 . 그러나 개별 드라이버를 사용하는 경우 호스팅 환경에서 드라이버가 지원되도록이 메소드를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="8f99fc25b7b6f81c366fe88ce322af7a6e0f19ae" translate="yes" xml:space="preserve">
          <source>This method is called automatically at the end of script execution, you won&amp;rsquo;t need to call it manually unless you are aborting script execution using &lt;code&gt;exit()&lt;/code&gt; or &lt;code&gt;die()&lt;/code&gt; in your code.</source>
          <target state="translated">이 메소드는 스크립트 실행이 끝날 때 자동으로 호출되므로 코드에서 &lt;code&gt;exit()&lt;/code&gt; 또는 &lt;code&gt;die()&lt;/code&gt; 를 사용하여 스크립트 실행을 중단하지 않는 한 수동으로 호출 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="965949d01d98948d1586cd3c5af0ee08018428a1" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;d()&lt;/code&gt;, except that it also &lt;code&gt;dies()&lt;/code&gt; and no further code is executed this request.</source>
          <target state="translated">이 메서드는 &lt;code&gt;d()&lt;/code&gt; 와 동일합니다. 단, &lt;code&gt;dies()&lt;/code&gt; 와이 요청이 더 이상 실행되지 않는다는 점이 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="89dda063762a6aa97ceaa14a31b16c570c832ab8" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;get()&lt;/code&gt;, &lt;code&gt;post()&lt;/code&gt; and &lt;code&gt;cookie()&lt;/code&gt;, only it fetches the &lt;em&gt;php://input&lt;/em&gt; stream data.</source>
          <target state="translated">이 메소드는 &lt;code&gt;get()&lt;/code&gt; , &lt;code&gt;post()&lt;/code&gt; 및 &lt;code&gt;cookie()&lt;/code&gt; 와 동일 하며 &lt;em&gt;php : // input&lt;/em&gt; 스트림 데이터 만 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="ac7a9fc248b1ccf55f10beb427def346e7b20813" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;getPost()&lt;/code&gt; and &lt;code&gt;getGet()&lt;/code&gt;, only it fetches cookie data:</source>
          <target state="translated">이 메서드는 &lt;code&gt;getPost()&lt;/code&gt; 및 &lt;code&gt;getGet()&lt;/code&gt; 과 동일하지만 쿠키 데이터 만 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="499d6fa6fa67cbd0c815e5fb1cabe2be1fe84f90" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;getVar()&lt;/code&gt;, only it fetches GET data.</source>
          <target state="translated">이 메소드는 &lt;code&gt;getVar()&lt;/code&gt; 와 동일하며 GET 데이터 만 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="6c87cc6e9953d0d12bdd6eb618315fe7dffa08dc" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;getVar()&lt;/code&gt;, only it fetches POST data.</source>
          <target state="translated">이 메소드는 &lt;code&gt;getVar()&lt;/code&gt; 와 동일하며 POST 데이터 만 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="dccfb8a4fa8c1f6cd70023219f5b4b1103ebd30c" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;havingLike()&lt;/code&gt;, except that it generates NOT LIKE statements:</source>
          <target state="translated">이 메서드는 NOT LIKE 문을 생성한다는 점을 제외하면 &lt;code&gt;havingLike()&lt;/code&gt; 와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="9fd39800406edc3c9c2e8de41391ce0c8bd35024" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;item()&lt;/code&gt;, except it appends a forward slash to the end of the item, if it exists.</source>
          <target state="translated">이 메소드는 &lt;code&gt;item()&lt;/code&gt; 끝에 슬래시를 추가한다는 점을 제외하고 item () 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="a5d0707b464dc7e8b97d1ece8c58ac6b54e0e036" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;like()&lt;/code&gt;, except that it generates NOT LIKE statements:</source>
          <target state="translated">이 메소드는 NOT LIKE 문을 생성한다는 점을 제외하고는 &lt;code&gt;like()&lt;/code&gt; 와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="1d6d2234b79a3846512080aed8fc001a7cc20d6c" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;notHavingLike()&lt;/code&gt;, except that multiple instances are joined by OR:</source>
          <target state="translated">이 메서드는 여러 인스턴스가 OR로 결합된다는 점을 제외하면 &lt;code&gt;notHavingLike()&lt;/code&gt; 와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="4d3fd7e03f0e9554873a9facfb5f99e6ab704bb2" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;notLike()&lt;/code&gt;, except that multiple instances are joined by OR:</source>
          <target state="translated">이 메서드는 여러 인스턴스가 OR로 결합된다는 점을 제외하면 &lt;code&gt;notLike()&lt;/code&gt; 와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="ee7183003eb0d2e0931678848c0a4eb1d2a50526" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;not_like()&lt;/code&gt;, except that multiple instances are joined by OR:</source>
          <target state="translated">이 메소드는 여러 인스턴스가 OR로 결합된다는 점을 제외하고 &lt;code&gt;not_like()&lt;/code&gt; 와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="e1ba21b19255b3073e16f970c82002d2a9ac0bd7" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;post()&lt;/code&gt; and &lt;code&gt;get()&lt;/code&gt;, only it fetches cookie data:</source>
          <target state="translated">이 메소드는 &lt;code&gt;post()&lt;/code&gt; 및 &lt;code&gt;get()&lt;/code&gt; 과 동일하며 쿠키 데이터 만 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="7c20e492e6b5437ff848f952246a472b7c97dee8" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;post()&lt;/code&gt;, only it fetches GET data.</source>
          <target state="translated">이 메소드는 &lt;code&gt;post()&lt;/code&gt; 와 동일하며 GET 데이터 만 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="49437eb3550234325dcd55ac7395a497fd1f7475" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;segment()&lt;/code&gt;, except that it lets you retrieve a specific segment from your re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">이 메소드는 CodeIgniter의 &lt;a href=&quot;../general/routing&quot;&gt;URI 라우팅&lt;/a&gt; 기능을 사용하는 경우 경로 재 지정된 URI에서 특정 세그먼트를 검색 할 수 있다는 점을 제외하면 &lt;code&gt;segment()&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="f9c088c46ad96fd523e8013afecdc9951bb326ea" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;segment_array()&lt;/code&gt;, except that it returns the array of segments in your re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">이 메소드는 CodeIgniter의 &lt;a href=&quot;../general/routing&quot;&gt;URI 라우팅&lt;/a&gt; 기능을 사용하는 경우 경로 재 지정된 URI의 세그먼트 배열을 리턴한다는 점을 제외하면 &lt;code&gt;segment_array()&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="a4b1b4f4eda41ff9c2048ea97be2f4b17a2564ab" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;slash_segment()&lt;/code&gt;, except that it lets you add slashes a specific segment from your re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">이 메소드는 CodeIgniter의 &lt;a href=&quot;../general/routing&quot;&gt;URI 라우팅&lt;/a&gt; 기능을 사용하는 경우 다시 라우팅 된 URI에서 특정 세그먼트를 슬래시를 추가 할 수 있다는 점을 제외하고는 &lt;code&gt;slash_segment()&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="b5857c30b5d157f8480853361e4910775e822d42" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;total_segments()&lt;/code&gt;, except that it returns the total number of segments in your re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">이 메소드는 CodeIgniter의 &lt;a href=&quot;../general/routing&quot;&gt;URI 라우팅&lt;/a&gt; 기능을 사용하는 경우 경로 재 지정된 URI의 총 세그먼트 수를 리턴한다는 점을 제외하면 &lt;code&gt;total_segments()&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="c86771c81607bbbef96d8d48fb0b0429aa24701b" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;uri_string()&lt;/code&gt;, except that it returns the re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">이 메소드는 CodeIgniter의 &lt;a href=&quot;../general/routing&quot;&gt;URI 라우팅&lt;/a&gt; 기능을 사용하는 경우 경로 재 지정된 URI를 리턴한다는 점을 제외하고 &lt;code&gt;uri_string()&lt;/code&gt; 과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="7f15500fce1c40ba960c01f83d133ba93e904030" translate="yes" xml:space="preserve">
          <source>This method is identical to &lt;code&gt;uri_to_assoc()&lt;/code&gt;, except that it creates an associative array using the re-routed URI in the event you are using CodeIgniter&amp;rsquo;s &lt;a href=&quot;../general/routing&quot;&gt;URI Routing&lt;/a&gt; feature.</source>
          <target state="translated">이 메소드는 CodeIgniter의 &lt;a href=&quot;../general/routing&quot;&gt;URI 라우팅&lt;/a&gt; 기능을 사용하는 경우 경로 재 지정된 URI를 사용하여 연관 배열을 작성한다는 점을 제외하고는 &lt;code&gt;uri_to_assoc()&lt;/code&gt; 와 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="c93e901c04b9989d291497112e87fc2d46c0cd45" translate="yes" xml:space="preserve">
          <source>This method is identical to the &lt;code&gt;getPost()&lt;/code&gt;, &lt;code&gt;getGet()&lt;/code&gt; and &lt;code&gt;getCookie()&lt;/code&gt; methods, only it fetches getServer data (&lt;code&gt;$_SERVER&lt;/code&gt;):</source>
          <target state="translated">이 메서드는 &lt;code&gt;getPost()&lt;/code&gt; , &lt;code&gt;getGet()&lt;/code&gt; 및 &lt;code&gt;getCookie()&lt;/code&gt; 메서드 와 동일하지만 getServer 데이터 ( &lt;code&gt;$_SERVER&lt;/code&gt; ) 만 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="4dd60c7775353dfe700d372425772b666f10ede5" translate="yes" xml:space="preserve">
          <source>This method is identical to the &lt;code&gt;post()&lt;/code&gt;, &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;cookie()&lt;/code&gt; methods from the &lt;a href=&quot;incomingrequest&quot;&gt;IncomingRequest Class&lt;/a&gt;, only it fetches getEnv data (&lt;code&gt;$_ENV&lt;/code&gt;):</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;incomingrequest&quot;&gt;IncomingRequest 클래스&lt;/a&gt; 의 &lt;code&gt;post()&lt;/code&gt; , &lt;code&gt;get()&lt;/code&gt; 및 &lt;code&gt;cookie()&lt;/code&gt; 메서드 와 동일하며 getEnv 데이터 ( &lt;code&gt;$_ENV&lt;/code&gt; ) 만 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="03599b0d8f3ca86a38e560d848294d0d5daeee37" translate="yes" xml:space="preserve">
          <source>This method is identical to the &lt;code&gt;post()&lt;/code&gt;, &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;cookie()&lt;/code&gt; methods from the &lt;a href=&quot;incomingrequest&quot;&gt;IncomingRequest Class&lt;/a&gt;, only it fetches getServer data (&lt;code&gt;$_SERVER&lt;/code&gt;):</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;incomingrequest&quot;&gt;IncomingRequest 클래스&lt;/a&gt; 의 &lt;code&gt;post()&lt;/code&gt; , &lt;code&gt;get()&lt;/code&gt; 및 &lt;code&gt;cookie()&lt;/code&gt; 메서드 와 동일하지만 getServer 데이터 ( &lt;code&gt;$_SERVER&lt;/code&gt; ) 만 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="a26d1268fa08f2343c3691e9d359e96bde668e0d" translate="yes" xml:space="preserve">
          <source>This method is identical to the &lt;code&gt;post()&lt;/code&gt;, &lt;code&gt;get()&lt;/code&gt; and &lt;code&gt;cookie()&lt;/code&gt; methods, only it fetches server data (&lt;code&gt;$_SERVER&lt;/code&gt;):</source>
          <target state="translated">이 메소드는 &lt;code&gt;post()&lt;/code&gt; , &lt;code&gt;get()&lt;/code&gt; 및 &lt;code&gt;cookie()&lt;/code&gt; 메소드 와 동일하며 서버 데이터 만 가져옵니다 ( &lt;code&gt;$_SERVER&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="a3dcb8ed58e34cd61008734b761e57e3a8ece5d4" translate="yes" xml:space="preserve">
          <source>This method is identical to the one above, except that multiple instances are joined by OR:</source>
          <target state="translated">이 방법은 여러 인스턴스가 OR로 결합된다는 점을 제외하면 위의 방법과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="e46269081faf3e2d5737a212ccef7711f4764db0" translate="yes" xml:space="preserve">
          <source>This method is just an alias for &lt;code&gt;db_connect(TRUE)&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;db_connect(TRUE)&lt;/code&gt; 의 별명 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="531338e85fd1fa3afc47e5ec70986b0d6c29afe3" translate="yes" xml:space="preserve">
          <source>This method is just an alias for PHP&amp;rsquo;s native &lt;a href=&quot;http://php.net/session_destroy&quot;&gt;session_destroy()&lt;/a&gt; function.</source>
          <target state="translated">이 메소드는 PHP의 native &lt;a href=&quot;http://php.net/session_destroy&quot;&gt;session_destroy ()&lt;/a&gt; 함수 의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="e80cf159ab4224777f589e32e0470e160df18ec0" translate="yes" xml:space="preserve">
          <source>This method is just an alias for PHP&amp;rsquo;s native &lt;a href=&quot;http://php.net/session_regenerate_id&quot;&gt;session_regenerate_id()&lt;/a&gt; function.</source>
          <target state="translated">이 메소드는 PHP의 native &lt;a href=&quot;http://php.net/session_regenerate_id&quot;&gt;session_regenerate_id ()&lt;/a&gt; 함수 의 별칭입니다 .</target>
        </trans-unit>
        <trans-unit id="0c56cea4cd3e4559f8baf9ebc034bd43be2d9338" translate="yes" xml:space="preserve">
          <source>This method is normally accessed via the corresponding functions in the &lt;a href=&quot;../helpers/url_helper&quot;&gt;URL Helper&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 일반적으로 &lt;a href=&quot;../helpers/url_helper&quot;&gt;URL 헬퍼&lt;/a&gt; 의 해당 기능을 통해 액세스됩니다 .</target>
        </trans-unit>
        <trans-unit id="913a6595962d5864fe7811098bf7f61b48e06d43" translate="yes" xml:space="preserve">
          <source>This method is not suitable for filtering HTML attribute values! Use &lt;a href=&quot;../general/common_functions#html_escape&quot;&gt;&lt;code&gt;html_escape()&lt;/code&gt;&lt;/a&gt; for that instead.</source>
          <target state="translated">이 방법은 HTML 속성 값을 필터링하는 데 적합하지 않습니다! 대신 &lt;a href=&quot;../general/common_functions#html_escape&quot;&gt; &lt;code&gt;html_escape()&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="7da4391a14e1f9c37dac85bbf3e55f4d74122d7b" translate="yes" xml:space="preserve">
          <source>This method is not typically very reliable since some browsers do not provide character-set info, and even among those that do, it is not always accurate.</source>
          <target state="translated">이 방법은 일부 브라우저가 문자 집합 정보를 제공하지 않기 때문에이 방법은 일반적으로 매우 신뢰할 수 없으며, 그 중 일부는 항상 정확하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="d6bc2f2034123c76362f7494182650f2ee61abc0" translate="yes" xml:space="preserve">
          <source>This method is not typically very reliable since some browsers do not provide language info, and even among those that do, it is not always accurate.</source>
          <target state="translated">이 방법은 일부 브라우저가 언어 정보를 제공하지 않기 때문에이 방법은 일반적으로 매우 신뢰할 수 없으며, 그 중 일부는 항상 정확한 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="37ed3a3e6d29b7e685b819e2bd9fddb0951bcbdb" translate="yes" xml:space="preserve">
          <source>This method is particularly helpful when used with &lt;code&gt;groupBy()&lt;/code&gt;. For counting results generally see &lt;code&gt;countAll()&lt;/code&gt; or &lt;code&gt;countAllResults()&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;groupBy()&lt;/code&gt; 와 함께 사용할 때 특히 유용 합니다. 계산 결과는 일반적으로 &lt;code&gt;countAll()&lt;/code&gt; 또는 &lt;code&gt;countAllResults()&lt;/code&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d986ef9f8de3c4828ef0e000f499c62b3071bea4" translate="yes" xml:space="preserve">
          <source>This method is similar to &lt;code&gt;auto_typography()&lt;/code&gt; above, except that it only does character conversion:</source>
          <target state="translated">이 메소드는 문자 변환 만 수행한다는 점을 제외하고 위의 &lt;code&gt;auto_typography()&lt;/code&gt; 와 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="a17ef441a3b62409c2e4b6351fa2e4863328586c" translate="yes" xml:space="preserve">
          <source>This method is used extensively by the Query Builder class.</source>
          <target state="translated">이 메소드는 Query Builder 클래스에서 광범위하게 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cbc3a53a6784229c06ffef3dfb87e22fad0302b1" translate="yes" xml:space="preserve">
          <source>This method is used internally to derive an encryption and HMAC key from your configured &lt;em&gt;encryption_key&lt;/em&gt;.</source>
          <target state="translated">이 방법은 내부적으로 구성된 &lt;em&gt;encryption_key&lt;/em&gt; 에서 암호화 및 HMAC 키를 파생시키는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="6113e31189d4ec9be607748dc1692e877d109be2" translate="yes" xml:space="preserve">
          <source>This method is used to load core classes.</source>
          <target state="translated">이 메소드는 코어 클래스를로드하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2db4213c18bbc138ec8c6fe22bcf52f479fcb035" translate="yes" xml:space="preserve">
          <source>This method is used to load driver libraries, acts very much like the &lt;code&gt;library()&lt;/code&gt; method.</source>
          <target state="translated">이 메소드는 드라이버 라이브러리를로드하는 데 사용되며 &lt;code&gt;library()&lt;/code&gt; 메소드 와 매우 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="ec6e3e6d321edd0f3ca30ceb9d2d531cfb27ca27" translate="yes" xml:space="preserve">
          <source>This method is used to load your View files. If you haven&amp;rsquo;t read the &lt;a href=&quot;../general/views&quot;&gt;Views&lt;/a&gt; section of the user guide it is recommended that you do since it shows you how this method is typically used.</source>
          <target state="translated">이 방법은 View 파일을로드하는 데 사용됩니다. 사용자 안내서 의 &lt;a href=&quot;../general/views&quot;&gt;보기&lt;/a&gt; 섹션을 읽지 않은 경우이 방법이 일반적으로 사용되는 방법을 보여주기 때문에 수행하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="33ef2314f530a181f616c7f11a67b840235c6e52" translate="yes" xml:space="preserve">
          <source>This method lets multiple trackbacks to be sent. It takes a string of URLs (separated by comma or space) and puts each URL into an array.</source>
          <target state="translated">이 방법을 사용하면 여러 트랙백을 보낼 수 있습니다. URL 문자열 (쉼표 또는 공백으로 구분)을 사용하여 각 URL을 배열에 넣습니다.</target>
        </trans-unit>
        <trans-unit id="295023d43f4dc7e6bf19a3a3bf04872f2435d9b8" translate="yes" xml:space="preserve">
          <source>This method lets you load the database class. The two parameters are &lt;strong&gt;optional&lt;/strong&gt;. Please see the &lt;a href=&quot;../database/index&quot;&gt;database&lt;/a&gt; section for more info.</source>
          <target state="translated">이 메소드를 사용하면 데이터베이스 클래스를로드 할 수 있습니다. 두 매개 변수는 &lt;strong&gt;선택 사항&lt;/strong&gt; 입니다. 자세한 내용은 &lt;a href=&quot;../database/index&quot;&gt;데이터베이스&lt;/a&gt; 섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b8439f40fdab0e4221bacbcad1dbf0b5b11af7e2" translate="yes" xml:space="preserve">
          <source>This method lets you send an error message from your server to the client. First parameter is the error number while the second parameter is the error message.</source>
          <target state="translated">이 방법을 사용하면 서버에서 클라이언트로 오류 메시지를 보낼 수 있습니다. 첫 번째 매개 변수는 오류 번호이고 두 번째 매개 변수는 오류 메시지입니다.</target>
        </trans-unit>
        <trans-unit id="c2502b9d0f94349a2144f67720b0c946564547d6" translate="yes" xml:space="preserve">
          <source>This method lets you turn URI segments into an associative array of key/value pairs. Consider this URI:</source>
          <target state="translated">이 방법을 사용하면 URI 세그먼트를 키 / 값 쌍의 연관 배열로 바꿀 수 있습니다. 이 URI를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="c1a19e89bb15b6f745647911f4b2420048af3e31" translate="yes" xml:space="preserve">
          <source>This method loads helper files, where file_name is the name of the file, without the _helper.php extension.</source>
          <target state="translated">이 메소드는 헬퍼 파일을로드합니다. 여기서 file_name은 _helper.php 확장자없이 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="ed8df8dd586e4100135f4d1049851aaa2cf37c1e" translate="yes" xml:space="preserve">
          <source>This method makes sure that you have a valid month/year. For example, if you submit 13 as the month, the year will increment and the month will become January:</source>
          <target state="translated">이 방법을 사용하면 유효한 월 / 년이 보장됩니다. 예를 들어, 월로 13을 제출하면 연도가 증가하고 월은 1 월이됩니다.</target>
        </trans-unit>
        <trans-unit id="e2cd9ea6f0323a40a488bf2316ff87698067a037" translate="yes" xml:space="preserve">
          <source>This method permits changing the properties of a given item. Typically it is called from the &amp;ldquo;view cart&amp;rdquo; page if a user makes changes to the quantity before checkout. That array must contain the rowid for each item.</source>
          <target state="translated">이 방법을 사용하면 주어진 항목의 속성을 변경할 수 있습니다. 일반적으로 사용자가 체크 아웃하기 전에 수량을 변경하면 &quot;카트보기&quot;페이지에서 호출됩니다. 해당 배열에는 각 항목의 rowid가 포함되어야합니다.</target>
        </trans-unit>
        <trans-unit id="9caf8ac0e013064406bf4823e4656c23659302e1" translate="yes" xml:space="preserve">
          <source>This method retrieves all variables available to your views.</source>
          <target state="translated">이 메소드는 뷰에 사용 가능한 모든 변수를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="fc2f00cd6e9961c618d2d7a6150b482df3de86fd" translate="yes" xml:space="preserve">
          <source>This method retrieves the URL to your CodeIgniter system/ directory.</source>
          <target state="translated">이 메소드는 CodeIgniter 시스템 / 디렉토리의 URL을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="51731d403f9247bce5f75b8bf4f3088a162a352c" translate="yes" xml:space="preserve">
          <source>This method retrieves the URL to your site, along with the &amp;ldquo;index&amp;rdquo; value you&amp;rsquo;ve specified in the config file.</source>
          <target state="translated">이 메소드는 구성 파일에 지정한&amp;ldquo;색인&amp;rdquo;값과 함께 사이트 URL을 검색합니다.</target>
        </trans-unit>
        <trans-unit id="f1d1e48140008aa39379028f9d8b6da04b9e8d31" translate="yes" xml:space="preserve">
          <source>This method retrieves the URL to your site, plus an optional path such as to a stylesheet or image.</source>
          <target state="translated">이 메소드는 사이트의 URL과 스타일 시트 또는 이미지와 같은 선택적 경로를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="2c8cd2cf99ebbf62a14488f3806b7cd551d10bb8" translate="yes" xml:space="preserve">
          <source>This method returns a boolean true if there are links to a page before and after, respectively, the current page being displayed.</source>
          <target state="translated">이 메소드는 현재 페이지가 표시되기 전후에 각각 페이지에 대한 링크가있는 경우 부울 true를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="459349e0f1a198c00774e50afc8dd04fa8cdaf29" translate="yes" xml:space="preserve">
          <source>This method returns a single result row without prefetching the whole result in memory as &lt;code&gt;row()&lt;/code&gt; does. If your query has more than one row, it returns the current row and moves the internal data pointer ahead.</source>
          <target state="translated">이 메소드는 &lt;code&gt;row()&lt;/code&gt; 처럼 전체 결과를 메모리에서 프리 페치하지 않고 단일 결과 행을 리턴합니다 . 쿼리에 둘 이상의 행이 있으면 현재 행을 반환하고 내부 데이터 포인터를 앞으로 이동합니다.</target>
        </trans-unit>
        <trans-unit id="c4273a5edcb0c1dfcb16d1b1785f211e71c3ee99" translate="yes" xml:space="preserve">
          <source>This method returns a single result row. If your query has more than one row, it returns only the first row. The result is returned as an &lt;strong&gt;object&lt;/strong&gt;. Here&amp;rsquo;s a usage example:</source>
          <target state="translated">이 메소드는 단일 결과 행을 리턴합니다. 쿼리에 둘 이상의 행이 있으면 첫 번째 행만 반환합니다. 결과는 &lt;strong&gt;객체&lt;/strong&gt; 로 반환됩니다 . 사용 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7020f2be64422f0c7eacccf181d574687b4b8d1a" translate="yes" xml:space="preserve">
          <source>This method returns the User Agent string from the SERVER data:</source>
          <target state="translated">이 메서드는 SERVER 데이터에서 사용자 에이전트 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="aac6d5ccd122b4b9f003baa89bb5cefffc12ecb9" translate="yes" xml:space="preserve">
          <source>This method returns the query result as a pure array, or an empty array when no result is produced. Typically you&amp;rsquo;ll use this in a foreach loop, like this:</source>
          <target state="translated">이 메소드는 조회 결과를 순수한 배열로 리턴하거나 결과가 생성되지 않으면 빈 배열을 리턴합니다. 일반적으로 다음과 같이 foreach 루프에서 이것을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f2f54038f7b1b6c8097683eec5e9cb50cb5c0c98" translate="yes" xml:space="preserve">
          <source>This method returns the query result as an array of &lt;strong&gt;objects&lt;/strong&gt;, or &lt;strong&gt;an empty array&lt;/strong&gt; on failure. Typically you&amp;rsquo;ll use this in a foreach loop, like this:</source>
          <target state="translated">이 메소드는 조회 결과를 &lt;strong&gt;오브젝트&lt;/strong&gt; 배열 또는 실패시 &lt;strong&gt;빈 배열&lt;/strong&gt; 로 리턴합니다 . 일반적으로 다음과 같이 foreach 루프에서 이것을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d6cecd9c4c25c39cb8bed24bd2b4c6f12119428f" translate="yes" xml:space="preserve">
          <source>This method returns the xml result from database result. You can do like this:</source>
          <target state="translated">이 메서드는 데이터베이스 결과에서 xml 결과를 반환합니다. 다음과 같이 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd8fec557fdc64db510090ddd1120b02664a9e14" translate="yes" xml:space="preserve">
          <source>This method sets a rule group from the validation configuration to the validation service:</source>
          <target state="translated">이 메서드는 유효성 검사 구성에서 유효성 검사 서비스로 규칙 그룹을 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8e5dc370e21cd301042a28c8a6727e3907c78908" translate="yes" xml:space="preserve">
          <source>This method sets a single rule. It takes the name of the field as the first parameter, an optional label and a string with a pipe-delimited list of rules that should be applied:</source>
          <target state="translated">이 방법은 단일 규칙을 설정합니다. 필드 이름을 첫 번째 매개 변수로, 선택적 레이블 및 적용해야하는 파이프로 구분 된 규칙 목록이있는 문자열을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="972dabf6c801253a13d89cf6c8ab822c1d037af4" translate="yes" xml:space="preserve">
          <source>This method sets the internal pointer for the next result row to be fetched. It is only useful in combination with &lt;code&gt;getUnbufferedRow()&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 가져올 다음 결과 행에 대한 내부 포인터를 설정합니다. &lt;code&gt;getUnbufferedRow()&lt;/code&gt; 와 함께 사용하는 경우에만 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="a51b393032241d4fbafdb891bcd50a42623cb279" translate="yes" xml:space="preserve">
          <source>This method sets the internal pointer for the next result row to be fetched. It is only useful in combination with &lt;code&gt;unbuffered_row()&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 다음 결과 행에 대한 내부 포인터를 페치하도록 설정합니다. &lt;code&gt;unbuffered_row()&lt;/code&gt; 와 조합해서 만 유용합니다 .</target>
        </trans-unit>
        <trans-unit id="df2f4f9eb6ae1cc46b206e63f007d46a24074911" translate="yes" xml:space="preserve">
          <source>This method simply returns the line. It does not echo it.</source>
          <target state="translated">이 메소드는 단순히 행을 리턴합니다. 에코하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="037b6bf978690a05524bc80443bb032593936ac7" translate="yes" xml:space="preserve">
          <source>This method simply validates the incoming TB data, returning TRUE on success and FALSE on failure. If the data is valid it is set to the &lt;code&gt;$this-&amp;gt;data&lt;/code&gt; array so that it can be inserted into a database.</source>
          <target state="translated">이 방법은 들어오는 TB 데이터의 유효성을 검사하여 성공하면 TRUE, 실패하면 FALSE를 반환합니다. 데이터가 유효하면 &lt;code&gt;$this-&amp;gt;data&lt;/code&gt; 배열로 설정되어 데이터베이스에 삽입 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="31654035f9053da2e075e98a9972dfdd8a79f8c1" translate="yes" xml:space="preserve">
          <source>This method takes a UNIX timestamp and, optionally, the timezone and locale, to create a new Time instance:</source>
          <target state="translated">이 메서드는 UNIX 타임 스탬프와 선택적으로 시간대 및 로캘을 사용하여 새 Time 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="d14f05b182a4f93daa9f2214d0b50d6b556d0116" translate="yes" xml:space="preserve">
          <source>This method takes a one-dimensional array as input and creates a multi-dimensional array with a depth equal to the number of columns desired. This allows a single array with many elements to be displayed in a table that has a fixed column count. Consider this example:</source>
          <target state="translated">이 방법은 1 차원 배열을 입력으로 사용하고 원하는 열 수와 동일한 깊이를 가진 다차원 배열을 만듭니다. 이를 통해 고정 된 개수의 열이있는 테이블에 많은 요소가있는 단일 배열을 표시 할 수 있습니다. 이 예제를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="7b1532965e5b32c61e001d8c9976acca771903cf" translate="yes" xml:space="preserve">
          <source>This method takes an associative array as input and generates variables using the PHP &lt;a href=&quot;http://php.net/extract&quot;&gt;extract()&lt;/a&gt; function. This method produces the same result as using the second parameter of the &lt;code&gt;$this-&amp;gt;load-&amp;gt;view()&lt;/code&gt; method above. The reason you might want to use this method independently is if you would like to set some global variables in the constructor of your controller and have them become available in any view file loaded from any method. You can have multiple calls to this method. The data get cached and merged into one array for conversion to variables.</source>
          <target state="translated">이 메소드는 연관 배열을 입력으로 사용하고 PHP &lt;a href=&quot;http://php.net/extract&quot;&gt;extract ()&lt;/a&gt; 함수를 사용하여 변수를 생성합니다 . 이 메소드는 위의 &lt;code&gt;$this-&amp;gt;load-&amp;gt;view()&lt;/code&gt; 메소드 의 두 번째 매개 변수를 사용하는 것과 동일한 결과를 생성합니다 . 이 메소드를 독립적으로 사용하려는 이유는 컨트롤러의 생성자에서 일부 전역 변수를 설정하고 모든 메소드에서로드 된 모든보기 파일에서 변수를 사용할 수 있기를 원하기 때문입니다. 이 메소드를 여러 번 호출 할 수 있습니다. 변수로 변환하기 위해 데이터가 캐시되어 하나의 배열로 병합됩니다.</target>
        </trans-unit>
        <trans-unit id="e41e04171a3ebb3a8f347ee790bed8205ae22e26" translate="yes" xml:space="preserve">
          <source>This method takes into account the &lt;code&gt;$config['proxy_ips']&lt;/code&gt; setting and will return the reported HTTP_X_FORWARDED_FOR, HTTP_CLIENT_IP, HTTP_X_CLIENT_IP or HTTP_X_CLUSTER_CLIENT_IP address for the allowed IP addresses.</source>
          <target state="translated">이 방법은 &lt;code&gt;$config['proxy_ips']&lt;/code&gt; 설정을 고려하여 허용 된 IP 주소에 대해보고 된 HTTP_X_FORWARDED_FOR, HTTP_CLIENT_IP, HTTP_X_CLIENT_IP 또는 HTTP_X_CLUSTER_CLIENT_IP 주소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d7d020ce5d0fa983df00559315baac443c590c86" translate="yes" xml:space="preserve">
          <source>This method takes into account the &lt;code&gt;App-&amp;gt;proxyIPs&lt;/code&gt; setting and will return the reported HTTP_X_FORWARDED_FOR, HTTP_CLIENT_IP, HTTP_X_CLIENT_IP, or HTTP_X_CLUSTER_CLIENT_IP address for the allowed IP address.</source>
          <target state="translated">이 메서드는 &lt;code&gt;App-&amp;gt;proxyIPs&lt;/code&gt; 설정 을 고려 하고 허용 된 IP 주소에 대해보고 된 HTTP_X_FORWARDED_FOR, HTTP_CLIENT_IP, HTTP_X_CLIENT_IP 또는 HTTP_X_CLUSTER_CLIENT_IP 주소를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="958be113167b12a2b240c1a1566480a2e8fe362f" translate="yes" xml:space="preserve">
          <source>This method used to act EXACTLY like &lt;code&gt;post_get()&lt;/code&gt;, but it&amp;rsquo;s behavior has changed in CodeIgniter 3.0.</source>
          <target state="translated">이 메소드는 &lt;code&gt;post_get()&lt;/code&gt; 과 똑같이 작동했지만 CodeIgniter 3.0에서 동작이 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="fa052b05e00e0f9febeadcdb19232a667059df74" translate="yes" xml:space="preserve">
          <source>This method will &amp;lsquo;clean&amp;rsquo; the entire cache. If the deletion of the cache files fails, the method will return FALSE.</source>
          <target state="translated">이 방법은 전체 캐시를 '정리'합니다. 캐시 파일 삭제에 실패하면이 메소드는 FALSE를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="8325f80eeae2146036e6788ac2012a5ef6cabcc6" translate="yes" xml:space="preserve">
          <source>This method will NOT write the CSV file for you. It simply creates the CSV layout. If you need to write the file use the &lt;a href=&quot;../helpers/file_helper&quot;&gt;File Helper&lt;/a&gt;.</source>
          <target state="translated">이 방법은 CSV 파일을 작성하지 않습니다. 단순히 CSV 레이아웃을 만듭니다. 파일을 작성해야하는 경우 &lt;a href=&quot;../helpers/file_helper&quot;&gt;File Helper를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="afa7f2da88fc19349a904dfd68b863d904c6c765" translate="yes" xml:space="preserve">
          <source>This method will NOT write the XML file for you. It simply creates the XML layout. If you need to write the file use the &lt;a href=&quot;../helpers/file_helper&quot;&gt;File Helper&lt;/a&gt;.</source>
          <target state="translated">이 방법은 XML 파일을 작성하지 않습니다. 단순히 XML 레이아웃을 만듭니다. 파일을 작성해야하는 경우 &lt;a href=&quot;../helpers/file_helper&quot;&gt;File Helper를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="808c1b9865ce562940ee8da7ba15a82051c0f0fa" translate="yes" xml:space="preserve">
          <source>This method will attempt to fetch an item from the cache store. If the item does not exist, the method will return FALSE.</source>
          <target state="translated">이 메소드는 캐시 저장소에서 항목을 가져 오려고 시도합니다. 항목이 존재하지 않으면 메소드는 FALSE를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="a9c4e85dffe66c94944fd6ae8a3831f9f50b2d39" translate="yes" xml:space="preserve">
          <source>This method will attempt to fetch an item from the cache store. If the item does not exist, the method will return NULL.</source>
          <target state="translated">이 메서드는 캐시 저장소에서 항목을 가져 오려고 시도합니다. 항목이 없으면 메서드는 NULL을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="56a22195165acca064e9023bbfda2654e4f8e427" translate="yes" xml:space="preserve">
          <source>This method will automatically clear all parameters if the request was successful. To stop this behaviour pass FALSE:</source>
          <target state="translated">요청이 성공하면이 메소드는 모든 매개 변수를 자동으로 지 웁니다. 이 동작을 중지하려면 FALSE를 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="38ad4d2473614dce0049e83250e1ba44369f0a6c" translate="yes" xml:space="preserve">
          <source>This method will delete a specific item from the cache store. If item deletion fails, the method will return FALSE.</source>
          <target state="translated">이 방법은 캐시 저장소에서 특정 항목을 삭제합니다. 항목 삭제에 실패하면이 메소드는 FALSE를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="22b4061c7a24637f33f63604c6b28d8f6f126629" translate="yes" xml:space="preserve">
          <source>This method will return detailed information on a specific item in the cache.</source>
          <target state="translated">이 메소드는 캐시의 특정 항목에 대한 자세한 정보를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="83588aee58c99808b58db31a32a923040295071e" translate="yes" xml:space="preserve">
          <source>This method will return information on the entire cache.</source>
          <target state="translated">이 메소드는 전체 캐시에 대한 정보를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="7063c2aa524e3978a76a52cd3562563acead6a64" translate="yes" xml:space="preserve">
          <source>This method will return the body of the response as a JSON string:</source>
          <target state="translated">이 메서드는 응답 본문을 JSON 문자열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3fc454919914e668e0db3cdb062a2d2859a9f907" translate="yes" xml:space="preserve">
          <source>This method will save an item to the cache store. If saving fails, the method will return FALSE.</source>
          <target state="translated">이 방법은 항목을 캐시 저장소에 저장합니다. 저장에 실패하면 메소드는 FALSE를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9dd1a2c30c865d0b951a07fdc7ddcb9a3fc15755" translate="yes" xml:space="preserve">
          <source>This method will terminate script execution.</source>
          <target state="translated">이 방법은 스크립트 실행을 종료합니다.</target>
        </trans-unit>
        <trans-unit id="bdb56983b0d0bc558cfc50a168cfb83e2eb4de63" translate="yes" xml:space="preserve">
          <source>This method works exactly like &lt;code&gt;parse()&lt;/code&gt;, only it accepts the template as a string instead of loading a view file.</source>
          <target state="translated">이 메소드는 &lt;code&gt;parse()&lt;/code&gt; 와 동일하게 작동 하며,보기 파일을로드하는 대신 템플리트를 문자열로 허용합니다.</target>
        </trans-unit>
        <trans-unit id="e35ecca7556ce31b80192235c6c6a0e345d05df3" translate="yes" xml:space="preserve">
          <source>This method works pretty much the same way as &lt;code&gt;getPost()&lt;/code&gt; and &lt;code&gt;getGet()&lt;/code&gt;, only combined. It will search through both POST and GET streams for data, looking first in GET, and then in POST:</source>
          <target state="translated">이 메서드는 &lt;code&gt;getPost()&lt;/code&gt; 및 &lt;code&gt;getGet()&lt;/code&gt; 과 거의 동일한 방식으로 작동 하며 결합 된 방식으로 만 작동합니다. POST와 GET 스트림 모두를 통해 데이터를 검색하고 먼저 GET에서 찾은 다음 POST에서 찾습니다.</target>
        </trans-unit>
        <trans-unit id="3df74bf7008b9cd5a5783ae9da7234c50a2a5efe" translate="yes" xml:space="preserve">
          <source>This method works pretty much the same way as &lt;code&gt;getPost()&lt;/code&gt; and &lt;code&gt;getGet()&lt;/code&gt;, only combined. It will search through both POST and GET streams for data, looking first in POST, and then in GET:</source>
          <target state="translated">이 메서드는 &lt;code&gt;getPost()&lt;/code&gt; 및 &lt;code&gt;getGet()&lt;/code&gt; 과 거의 동일한 방식으로 작동 하며 결합 된 방식으로 만 작동합니다. POST와 GET 스트림을 통해 데이터를 검색하고 먼저 POST에서 찾은 다음 GET에서 찾습니다.</target>
        </trans-unit>
        <trans-unit id="52ab50e1346fbc3c91d2f1fe0e57909f5e232090" translate="yes" xml:space="preserve">
          <source>This method works pretty much the same way as &lt;code&gt;post()&lt;/code&gt; and &lt;code&gt;get()&lt;/code&gt;, only combined. It will search through both POST and GET streams for data, looking in POST first, and then in GET:</source>
          <target state="translated">이 메소드는 &lt;code&gt;post()&lt;/code&gt; 및 &lt;code&gt;get()&lt;/code&gt; 과 거의 동일하게 작동합니다 . POST와 GET 스트림을 모두 검색하여 먼저 POST를 찾은 다음 GET을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="4c871b6c84a391e61ad1c7aa769a53c5e76a100a" translate="yes" xml:space="preserve">
          <source>This method works the same way as &lt;code&gt;post_get()&lt;/code&gt; only it looks for GET data first.</source>
          <target state="translated">이 메소드는 &lt;code&gt;post_get()&lt;/code&gt; 과 같은 방식으로 작동하며 먼저 GET 데이터를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="629d18c3d38bb4c8be6aa2241ccbca67c81db81c" translate="yes" xml:space="preserve">
          <source>This methods returns a string that displays the difference between the current date/time and the instance in a human readable format that is geared towards being easily understood. It can create strings like &amp;lsquo;3 hours ago&amp;rsquo;, &amp;lsquo;in 1 month&amp;rsquo;, etc:</source>
          <target state="translated">이 메서드는 현재 날짜 / 시간과 인스턴스 간의 차이를 쉽게 이해할 수있는 사람이 읽을 수있는 형식으로 표시하는 문자열을 반환합니다. '3 시간 전', '1 개월 후'등과 같은 문자열을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c088163a57e7f2b108e3f044588bbead064c4e71" translate="yes" xml:space="preserve">
          <source>This model works with data from the &lt;code&gt;jobs&lt;/code&gt; table, and returns all results as an instance of &lt;code&gt;App\Entities\Job&lt;/code&gt;. When you need to persist that record to the database, you will need to either write custom methods, or use the model&amp;rsquo;s &lt;code&gt;save()&lt;/code&gt; method to inspect the class, grab any public and private properties, and save them to the database:</source>
          <target state="translated">이 모델은 &lt;code&gt;jobs&lt;/code&gt; 테이블의 데이터로 작동하며 모든 결과를 &lt;code&gt;App\Entities\Job&lt;/code&gt; 의 인스턴스로 반환합니다 . 해당 레코드를 데이터베이스에 유지해야하는 경우 사용자 지정 메서드를 작성하거나 모델의 &lt;code&gt;save()&lt;/code&gt; 메서드를 사용하여 클래스를 검사하고 공용 및 개인 속성을 가져 와서 데이터베이스에 저장해야합니다.</target>
        </trans-unit>
        <trans-unit id="5e53b447b7065fd9017352b7ddf0e6a2f57ac983" translate="yes" xml:space="preserve">
          <source>This must be the &lt;em&gt;last&lt;/em&gt; session-related function that you call. All session data will be lost after you do that.</source>
          <target state="translated">&lt;em&gt;마지막으로&lt;/em&gt; 호출 한 세션 관련 함수 여야합니다 . 그렇게하면 모든 세션 데이터가 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="c026dee2cfdc15090dd9aa4b80d3d10d8ab40d41" translate="yes" xml:space="preserve">
          <source>This must be the last session-related operation that you do during the same request. All session data (including flashdata and tempdata) will be destroyed permanently and functions will be unusable during the same request after you destroy the session.</source>
          <target state="translated">동일한 요청 중에 수행 한 마지막 세션 관련 작업이어야합니다. 모든 세션 데이터 (플래시 데이터 및 임시 데이터 포함)는 영구적으로 삭제되며 세션을 삭제 한 후 동일한 요청 중에 기능을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9f8653bc87ca45a74185f47a167469cb5a361fdf" translate="yes" xml:space="preserve">
          <source>This new method takes care of inserting the news item into the database. The third line contains a new function, url_title(). This function - provided by the &lt;a href=&quot;../helpers/url_helper&quot;&gt;URL helper&lt;/a&gt; - strips down the string you pass it, replacing all spaces by dashes (-) and makes sure everything is in lowercase characters. This leaves you with a nice slug, perfect for creating URIs.</source>
          <target state="translated">이 새로운 방법은 데이터베이스에 뉴스 항목을 삽입합니다. 세 번째 줄에는 새로운 함수 url_title ()이 포함되어 있습니다. &lt;a href=&quot;../helpers/url_helper&quot;&gt;URL 헬퍼에서&lt;/a&gt; 제공하는이 함수는 전달한 문자열을 제거하여 모든 공백을 대시 (-)로 바꾸고 모든 문자가 소문자인지 확인합니다. 이것은 URI를 만들기에 완벽한 슬러그로 남습니다.</target>
        </trans-unit>
        <trans-unit id="cd8ebe417ba38c2c46bdf46d8f15ecbf15f4a504" translate="yes" xml:space="preserve">
          <source>This new property now contains the fields that we allow to be saved to the database. Notice that we leave out the &lt;code&gt;id&lt;/code&gt;? That&amp;rsquo;s because you will almost never need to do that, since it is an auto-incrementing field in the database. This helps protect against Mass Assignment Vulnerabilities. If your model is handling your timestamps, you would also leave those out.</source>
          <target state="translated">이 새 속성에는 이제 데이터베이스에 저장할 수있는 필드가 포함됩니다. 우리가 &lt;code&gt;id&lt;/code&gt; 생략 한 것을 알 수 있습니까? 데이터베이스의 자동 증가 필드이기 때문에 그렇게 할 필요가 거의 없기 때문입니다. 이렇게하면 대량 할당 취약성으로부터 보호 할 수 있습니다. 모델이 타임 스탬프를 처리하는 경우 해당 타임 스탬프도 생략합니다.</target>
        </trans-unit>
        <trans-unit id="2553e8eab8b99b0c546abaee3673ec3c14d3946c" translate="yes" xml:space="preserve">
          <source>This only changes the values returned during this one call. If you need to modify the URI&amp;rsquo;s query values more permanently, you can use the &lt;code&gt;stripQuery()&lt;/code&gt; and &lt;code&gt;keepQuery()&lt;/code&gt; methods to change the actual object&amp;rsquo;s query variable collection:</source>
          <target state="translated">이렇게하면이 한 번의 호출 중에 반환 된 값만 변경됩니다. URI의 쿼리 값을 더 영구적으로 수정해야하는 경우 &lt;code&gt;stripQuery()&lt;/code&gt; 및 &lt;code&gt;keepQuery()&lt;/code&gt; 메서드를 사용하여 실제 개체의 쿼리 변수 컬렉션을 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5aa7b14f8a1206449553495b4c48c23bb4113e96" translate="yes" xml:space="preserve">
          <source>This only works when trying to access the properties from outside of the class. Any methods internal to the class must call the &lt;code&gt;setX()&lt;/code&gt; and &lt;code&gt;getX()&lt;/code&gt; methods directly.</source>
          <target state="translated">이것은 클래스 외부에서 속성에 액세스하려고 할 때만 작동합니다. 클래스 내부의 모든 메서드는 &lt;code&gt;setX()&lt;/code&gt; 및 &lt;code&gt;getX()&lt;/code&gt; 메서드를 직접 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="691dbe7e4f2c05bdd4de591e347ca2f89331a4b4" translate="yes" xml:space="preserve">
          <source>This option controls how often the session class will regenerate itself and create a new session ID. Setting it to 0 will disable session ID regeneration.</source>
          <target state="translated">이 옵션은 세션 클래스가 자신을 재생성하고 새 세션 ID를 작성하는 빈도를 제어합니다. 0으로 설정하면 세션 ID 재생성이 비활성화됩니다.</target>
        </trans-unit>
        <trans-unit id="7c276fad5500f651f37e5b133aa0d7f073bd67ec" translate="yes" xml:space="preserve">
          <source>This option describes the SSL certificate verification behavior. If the &lt;code&gt;verify&lt;/code&gt; option is &lt;code&gt;true&lt;/code&gt;, it enables the SSL certificate verification and uses the default CA bundle provided by the operating system. If set to &lt;code&gt;false&lt;/code&gt; it will disable the certificate verification (this is insecure, and allows man-in-the-middle attacks!). You can set it to a string that contains the path to a CA bundle to enable verification with a custom certificate. The default value is true:</source>
          <target state="translated">이 옵션은 SSL 인증서 확인 동작을 설명합니다. 는 IF &lt;code&gt;verify&lt;/code&gt; 옵션은 &lt;code&gt;true&lt;/code&gt; , 그것은 SSL 인증서 확인이 가능하고 기본 운영 체제에서 제공하는 번들은 CA 사용합니다. 로 설정하면 &lt;code&gt;false&lt;/code&gt; 이 인증서 검증을 해제합니다 (이 불안하고, man-in-the-middle 공격을 할 수 있습니다!). CA 번들에 대한 경로가 포함 된 문자열로 설정하여 사용자 지정 인증서로 확인을 활성화 할 수 있습니다. 기본값은 true입니다.</target>
        </trans-unit>
        <trans-unit id="92e46dae3907c56863063adffa759b9efe7faf8d" translate="yes" xml:space="preserve">
          <source>This option does not allow for any customization of the &lt;code&gt;json_encode()&lt;/code&gt; function, or the Content-Type header. If you need that ability, you will need to encode the data manually, passing it through the &lt;code&gt;setBody()&lt;/code&gt; method of CURLRequest, and set the Content-Type header with the &lt;code&gt;setHeader()&lt;/code&gt; method.</source>
          <target state="translated">이 옵션은 &lt;code&gt;json_encode()&lt;/code&gt; 함수 또는 Content-Type 헤더의 사용자 정의를 허용하지 않습니다 . 당신이 그 능력을해야하는 경우를 통과, 수동으로 데이터를 인코딩해야합니다 &lt;code&gt;setBody()&lt;/code&gt; CURLRequest의 방법과 함께 Content-Type 헤더를 설정 &lt;code&gt;setHeader()&lt;/code&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="87306342b8ed1b5bd74b31a1f6660557235479fe" translate="yes" xml:space="preserve">
          <source>This option enables you to automatically replace dashes (&amp;lsquo;-&amp;lsquo;) with underscores in the controller and method URI segments, thus saving you additional route entries if you need to do that. This is required because the dash isn&amp;rsquo;t a valid class or method name character and would cause a fatal error if you try to use it:</source>
          <target state="translated">이 옵션을 사용하면 컨트롤러 및 메서드 URI 세그먼트에서 대시 ( '-')를 밑줄로 자동 대체 할 수 있으므로 필요한 경우 추가 경로 항목을 저장할 수 있습니다. 이는 대시가 유효한 클래스 또는 메서드 이름 문자가 아니기 때문에 필요하며이를 사용하려고하면 치명적인 오류가 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6480bcb2e7dcb2ea338374aa4d10508d4817653a" translate="yes" xml:space="preserve">
          <source>This page describes some &amp;ldquo;best practices&amp;rdquo; regarding web security, and details CodeIgniter&amp;rsquo;s internal security features.</source>
          <target state="translated">이 페이지에서는 웹 보안과 관련된 몇 가지&amp;ldquo;모범 사례&amp;rdquo;와 CodeIgniter의 내부 보안 기능에 대해 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="420af405e6b33f31ad5533b67879d0b5b702bedb" translate="yes" xml:space="preserve">
          <source>This permits it to be put it anywhere in a template without the memory being calculated until the end. The &lt;a href=&quot;output&quot;&gt;Output Class&lt;/a&gt; will swap the real value for this variable.</source>
          <target state="translated">이를 통해 메모리가 끝날 때까지 계산되지 않고 템플릿의 어느 곳에 나 넣을 수 있습니다. &lt;a href=&quot;output&quot;&gt;출력 클래스는&lt;/a&gt; 이 변수에 대한 진정한 가치를 교환합니다.</target>
        </trans-unit>
        <trans-unit id="f5386ab8eb9e5e8a42e6d1e737010e634e4c1413" translate="yes" xml:space="preserve">
          <source>This permits you to have the same hook point with multiple scripts. The order you define your array will be the execution order.</source>
          <target state="translated">이를 통해 여러 스크립트에서 동일한 후크 지점을 가질 수 있습니다. 배열을 정의하는 순서는 실행 순서입니다.</target>
        </trans-unit>
        <trans-unit id="59e5cd381e91018d51d7c6b4983eb1e025a19bdf" translate="yes" xml:space="preserve">
          <source>This process continues until you have submitted a valid form.</source>
          <target state="translated">이 과정은 유효한 양식을 제출할 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="869d1e9ae24d103241a779ec3aa72df8d918cdcf" translate="yes" xml:space="preserve">
          <source>This property is an array of filter aliases. For each alias, you can specify before and after arrays that contain a list of URI patterns that filter should apply to:</source>
          <target state="translated">이 속성은 필터 별칭의 배열입니다. 각 별칭에 대해 필터링을 적용해야하는 URI 패턴 목록을 포함하는 배열 전후를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="acfa7091e2df2c97c35863843a6945edcd69e5d9" translate="yes" xml:space="preserve">
          <source>This provides a backtrace to the current execution point, with Kint&amp;rsquo;s own unique spin:</source>
          <target state="translated">이것은 Kint의 고유 한 스핀을 사용하여 현재 실행 지점에 대한 역 추적을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="86f46fe897c2457c270bf14ca0d28ba01d684462" translate="yes" xml:space="preserve">
          <source>This provides a much simpler way to crop that will always maintain the aspect ratio:</source>
          <target state="translated">이것은 항상 종횡비를 유지하는 훨씬 더 간단한 자르기 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9a3f6c9abaa104af7811d0380838a634fce7b5ad" translate="yes" xml:space="preserve">
          <source>This provides a simple check that the response would be considered a &amp;ldquo;successful&amp;rdquo; response. This primarily checks that the HTTP status code is within the 200 or 300 ranges:</source>
          <target state="translated">이렇게하면 응답이 &quot;성공&quot;응답으로 간주되는지 간단하게 확인할 수 있습니다. 이것은 주로 HTTP 상태 코드가 200 또는 300 범위 내에 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="5641723d4768f1a1fd1bffcd17bff3342fc91805" translate="yes" xml:space="preserve">
          <source>This provides an HTTP status code of 500 and an exit code of 3.</source>
          <target state="translated">이는 HTTP 상태 코드 500과 종료 코드 3을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="54accb9e4c5404c70df2eaba3b7762a802291e7e" translate="yes" xml:space="preserve">
          <source>This provides an HTTP status code of 500 and an exit code of 8.</source>
          <target state="translated">이는 HTTP 상태 코드 500과 종료 코드 8을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d0fe0599b14701b90ef4cae9704179561b99253c" translate="yes" xml:space="preserve">
          <source>This query may be modified by interjecting Query Builder commands as needed prior to calling this method:</source>
          <target state="translated">이 쿼리는이 메서드를 호출하기 전에 필요에 따라 쿼리 작성기 명령을 삽입하여 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="35c6a357efc30a058e71d51f0b3302b8607adccd" translate="yes" xml:space="preserve">
          <source>This recommendation covers basic class, method, and file-naming standards. Our &lt;a href=&quot;https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/styleguide.rst&quot;&gt;style guide&lt;/a&gt; meets PSR-1 and adds its own requirements on top of it.</source>
          <target state="translated">이 권장 사항은 기본 클래스, 방법 및 파일 이름 지정 표준을 다룹니다. 우리의 &lt;a href=&quot;https://github.com/codeigniter4/CodeIgniter4/blob/develop/contributing/styleguide.rst&quot;&gt;스타일 가이드&lt;/a&gt; 는 PSR-1을 충족하고 그 위에 자체 요구 사항을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="f6993350b073ce3d18ccf8a75eb079094000f3fc" translate="yes" xml:space="preserve">
          <source>This requires either a DATETIME or INTEGER field in the database as per the model&amp;rsquo;s $dateFormat setting. The default field name is &lt;code&gt;deleted_at&lt;/code&gt; however this name can be configured to any name of your choice by using $deletedField property.</source>
          <target state="translated">모델의 $ dateFormat 설정에 따라 데이터베이스에 DATETIME 또는 INTEGER 필드가 필요합니다. 기본 필드 이름은 &lt;code&gt;deleted_at&lt;/code&gt; 이지만이 이름은 $ deletedField 속성을 사용하여 원하는 이름으로 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="aba462ddc10314944c9a8eca97a7a52772580288" translate="yes" xml:space="preserve">
          <source>This returns a new helper class that provides a number of routines for checking the response itself. See below for details.</source>
          <target state="translated">이것은 응답 자체를 확인하기위한 여러 루틴을 제공하는 새로운 도우미 클래스를 반환합니다. 자세한 내용은 아래를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="36730087e45bfd287a9abf0437ba48007ee389fa" translate="yes" xml:space="preserve">
          <source>This returns a standard &lt;a href=&quot;results&quot;&gt;result set&lt;/a&gt;.</source>
          <target state="translated">이것은 표준 &lt;a href=&quot;results&quot;&gt;결과 집합을&lt;/a&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2e733c7416d4b843d187adf65b52640938e46cb5" translate="yes" xml:space="preserve">
          <source>This returns a string of errors that were detected while performing a migration.</source>
          <target state="translated">마이그레이션을 수행하는 동안 감지 된 일련의 오류를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="bbdf22c88df7f984fab29af90a1002d5f63b116a" translate="yes" xml:space="preserve">
          <source>This returns an array with the field names and their associated errors that can be used to either show all of the errors at the top of the form, or to display them individually:</source>
          <target state="translated">그러면 양식 상단에 모든 오류를 표시하거나 개별적으로 표시하는 데 사용할 수있는 필드 이름 및 관련 오류가있는 배열이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="d25982663f24e26ff6d51f1ff0a0c3f3c57d7716" translate="yes" xml:space="preserve">
          <source>This returns the prepared query as a string.</source>
          <target state="translated">준비된 쿼리를 문자열로 반환합니다.</target>
        </trans-unit>
        <trans-unit id="186ef9fd8ca60f812da4e28515241298b05f6287" translate="yes" xml:space="preserve">
          <source>This route indicates which controller class should be loaded if the requested controller is not found. It will override the default 404 error page. Same per-directory rules as with &amp;lsquo;default_controller&amp;rsquo; apply here as well.</source>
          <target state="translated">이 경로는 요청 된 컨트롤러를 찾을 수없는 경우로드 할 컨트롤러 클래스를 나타냅니다. 기본 404 오류 페이지를 무시합니다. 'default_controller'와 동일한 디렉토리 별 규칙이 여기에도 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="afb355aea764a659ef509ce50c18b4bcf458debe" translate="yes" xml:space="preserve">
          <source>This route points to the action that should be executed if the URI contains no data, which will be the case when people load your root URL. The setting accepts a &lt;strong&gt;controller/method&lt;/strong&gt; value and &lt;code&gt;index()&lt;/code&gt; would be the default method if you don&amp;rsquo;t specify one. In the above example, it is &lt;code&gt;Welcome::index()&lt;/code&gt; that would be called.</source>
          <target state="translated">이 경로는 URI에 데이터가없는 경우 실행되어야하는 조치를 가리키며, 이는 사람들이 루트 URL을로드하는 경우에 해당합니다. 이 설정은 &lt;strong&gt;컨트롤러 / 방법&lt;/strong&gt; 값을 허용하며, 지정하지 않으면 &lt;code&gt;index()&lt;/code&gt; 가 기본 방법이됩니다. 위의 예제에서는 &lt;code&gt;Welcome::index()&lt;/code&gt; 가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4a56ab4d3b8f6a8ea6fb31dce9f4e571629b378d" translate="yes" xml:space="preserve">
          <source>This same negotiation can happen with four types of data:</source>
          <target state="translated">이와 동일한 협상이 네 가지 유형의 데이터에 대해 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3263f79c068ad8df37f09262e213c2bb54439a11" translate="yes" xml:space="preserve">
          <source>This same value can be retrieved by casting the Query object to a string:</source>
          <target state="translated">Query 개체를 문자열로 캐스팅하여 동일한 값을 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eeb7375920d4a46437db6465fae88279f64c62a8" translate="yes" xml:space="preserve">
          <source>This section describes all of the available options you may pass into the constructor, the &lt;code&gt;request()&lt;/code&gt; method, or any of the shortcut methods.</source>
          <target state="translated">이 섹션에서는 생성자, &lt;code&gt;request()&lt;/code&gt; 메서드 또는 모든 바로 가기 메서드에 전달할 수있는 사용 가능한 모든 옵션에 대해 설명합니다 .</target>
        </trans-unit>
        <trans-unit id="8814e7aaa85a8e0fa4c2767e269479c41b45cfce" translate="yes" xml:space="preserve">
          <source>This section is a quick overview for newer programmers, or for developers who are not experienced with using exceptions.</source>
          <target state="translated">이 섹션은 초보 프로그래머 또는 예외 사용 경험이없는 개발자를위한 빠른 개요입니다.</target>
        </trans-unit>
        <trans-unit id="9e4abfdf21fe77417cd883f81239b14ef9258a29" translate="yes" xml:space="preserve">
          <source>This section will take a look at each of the file types (controllers, views, language files, etc) and how they can be used within the module. Some of this information is described in more detail in the relevant location of the user guide, but is being reproduced here so that it&amp;rsquo;s easier to grasp how all of the pieces fit together.</source>
          <target state="translated">이 섹션에서는 각 파일 유형 (컨트롤러,보기, 언어 파일 등)과 모듈 내에서 어떻게 사용할 수 있는지 살펴 봅니다. 이 정보 중 일부는 사용자 가이드의 관련 위치에 더 자세히 설명되어 있지만 여기에서는 모든 부분이 어떻게 결합되는지 쉽게 파악할 수 있도록 여기에서 재현하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="f57dcf58933fadaa27a7f0d083e645014656ab7b" translate="yes" xml:space="preserve">
          <source>This server variable can be set in your .htaccess file, or Apache config using &lt;a href=&quot;https://httpd.apache.org/docs/2.2/mod/mod_env.html#setenv&quot;&gt;SetEnv&lt;/a&gt;. Alternative methods are available for nginx and other servers, or you can remove this logic entirely and set the constant based on the server&amp;rsquo;s IP address.</source>
          <target state="translated">이 서버 변수는 .htaccess 파일 또는 &lt;a href=&quot;https://httpd.apache.org/docs/2.2/mod/mod_env.html#setenv&quot;&gt;SetEnv를&lt;/a&gt; 사용하여 Apache 구성에서 설정할 수 있습니다 . nginx 및 기타 서버에 대체 방법을 사용할 수 있거나이 논리를 완전히 제거하고 서버의 IP 주소를 기반으로 상수를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8491da6b630951ba353087a26cfe285cb3801977" translate="yes" xml:space="preserve">
          <source>This server variable can be set in your &lt;code&gt;.htaccess&lt;/code&gt; file or Apache config using &lt;a href=&quot;https://httpd.apache.org/docs/2.2/mod/mod_env.html#setenv&quot;&gt;SetEnv&lt;/a&gt;.</source>
          <target state="translated">이 서버 변수는 &lt;a href=&quot;https://httpd.apache.org/docs/2.2/mod/mod_env.html#setenv&quot;&gt;SetEnv를&lt;/a&gt; 사용하여 &lt;code&gt;.htaccess&lt;/code&gt; 파일 또는 Apache 구성 에서 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f9cd4cad730e9ea33a3f4c2d2306b294081cfdbc" translate="yes" xml:space="preserve">
          <source>This set of compatibility functions offers a &amp;ldquo;backport&amp;rdquo; of PHP&amp;rsquo;s standard &lt;a href=&quot;http://php.net/password&quot;&gt;Password Hashing extension&lt;/a&gt; that is otherwise available only since PHP 5.5.</source>
          <target state="translated">이 호환성 함수 세트는 PHP 5.5 이후로만 사용할 수있는 PHP 표준 &lt;a href=&quot;http://php.net/password&quot;&gt;Password Hashing 확장&lt;/a&gt; 의 &quot;백 포트&quot;를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="12f7babc1edcec43f28c4f65c746c7e4d0026350" translate="yes" xml:space="preserve">
          <source>This set of compatibility functions offers limited support for PHP&amp;rsquo;s &lt;a href=&quot;http://php.net/mbstring&quot;&gt;Multibyte String extension&lt;/a&gt;. Because of the limited alternative solutions, only a few functions are available.</source>
          <target state="translated">이 호환성 함수 세트는 PHP의 &lt;a href=&quot;http://php.net/mbstring&quot;&gt;멀티 바이트 문자열 확장에&lt;/a&gt; 대한 제한된 지원을 제공합니다 . 제한된 대안 솔루션으로 인해 몇 가지 기능 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef032a3e37a47e5ef463fd5886c8f5a1e67d1db9" translate="yes" xml:space="preserve">
          <source>This set of compatibility functions offers support for a few standard functions in PHP that otherwise require a newer PHP version.</source>
          <target state="translated">이 호환성 함수 세트는 최신 PHP 버전이 필요한 PHP의 몇 가지 표준 함수를 지원합니다.</target>
        </trans-unit>
        <trans-unit id="932b0183fb7d2604a4741a3eb0e65308418712af" translate="yes" xml:space="preserve">
          <source>This sets the default path in the constructor method, but allows for easily changing the path it uses:</source>
          <target state="translated">이렇게하면 생성자 메서드에 기본 경로가 설정되지만 사용하는 경로를 쉽게 변경할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d718e6506e4dac39273b3b86b5b115433c9df51c" translate="yes" xml:space="preserve">
          <source>This setting stores the alias and &lt;a href=&quot;../outgoing/views&quot;&gt;namespaced view paths&lt;/a&gt; for the view that should be used. The &lt;em&gt;default_full&lt;/em&gt; and &lt;em&gt;default_simple&lt;/em&gt; views are used for the &lt;code&gt;links()&lt;/code&gt; and &lt;code&gt;simpleLinks()&lt;/code&gt; methods, respectively. To change the way those are displayed application-wide, you could assign a new view here.</source>
          <target state="translated">이 설정은 사용해야하는보기에 대한 별칭 및 &lt;a href=&quot;../outgoing/views&quot;&gt;네임 스페이스보기 경로&lt;/a&gt; 를 저장합니다 . &lt;em&gt;default_full&lt;/em&gt; 및 &lt;em&gt;default_simple&lt;/em&gt; 뷰는 사용되는 &lt;code&gt;links()&lt;/code&gt; 및 &lt;code&gt;simpleLinks()&lt;/code&gt; 을 각각의 방법. 애플리케이션 전체에 표시되는 방식을 변경하려면 여기에서 새보기를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="30ea6d62c6853becf0bc70a2c577c74d9533f49c" translate="yes" xml:space="preserve">
          <source>This simple block is converted to the following during parsing:</source>
          <target state="translated">이 간단한 블록은 구문 분석 중에 다음과 같이 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="2db2b7a8bd40f30e5b9725dea467391ec33e47b0" translate="yes" xml:space="preserve">
          <source>This simply uses phpUnit&amp;rsquo;s own &lt;a href=&quot;https://phpunit.readthedocs.io/en/7.2/assertions.html#assertarraysubset&quot;&gt;assertArraySubset()&lt;/a&gt; method to do the comparison.</source>
          <target state="translated">이것은 단순히 phpUnit의 자체 &lt;a href=&quot;https://phpunit.readthedocs.io/en/7.2/assertions.html#assertarraysubset&quot;&gt;assertArraySubset ()&lt;/a&gt; 메서드를 사용하여 비교를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="f52501bd9395c8c77102bf1b55a2b054b4832a28" translate="yes" xml:space="preserve">
          <source>This single preference determines whether a thumbnail is created or not.</source>
          <target state="translated">이 단일 환경 설정은 썸네일 생성 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="948551fb5386fe883028c9ab1a7c815133704782" translate="yes" xml:space="preserve">
          <source>This sounds complex, and on some sites, can definitely be challenging. For many simple sites, though, where all content is served by the same domain (&lt;a href=&quot;http://example.com&quot;&gt;http://example.com&lt;/a&gt;), it is very simple to integrate.</source>
          <target state="translated">이것은 복잡하게 들리며 일부 사이트에서는 확실히 어려울 수 있습니다. 그러나 모든 콘텐츠가 동일한 도메인 ( &lt;a href=&quot;http://example.com&quot;&gt;http://example.com&lt;/a&gt; )에서 제공되는 많은 간단한 사이트의 경우 통합이 매우 간단합니다.</target>
        </trans-unit>
        <trans-unit id="43c1a3bbe167dd8787e9c30ad2370be3ae3e9c84" translate="yes" xml:space="preserve">
          <source>This specifies the filename that CURL should use to read cookie values from, and to save cookie values to. This is done using the CURL_COOKIEJAR and CURL_COOKIEFILE options. An example:</source>
          <target state="translated">CURL이 쿠키 값을 읽고 쿠키 값을 저장하는 데 사용해야하는 파일 이름을 지정합니다. 이는 CURL_COOKIEJAR 및 CURL_COOKIEFILE 옵션을 사용하여 수행됩니다. 예 :</target>
        </trans-unit>
        <trans-unit id="c7e41f7d2d3c5e1be7f516b369d30375db681e45" translate="yes" xml:space="preserve">
          <source>This table presents a comparison of the default routes created by &lt;code&gt;resource()&lt;/code&gt; and &lt;code&gt;presenter()&lt;/code&gt; with their corresponding Controller functions.</source>
          <target state="translated">이 표는 &lt;code&gt;resource()&lt;/code&gt; 및 &lt;code&gt;presenter()&lt;/code&gt; 의해 생성 된 기본 경로를 해당 컨트롤러 함수와 비교 한 것입니다 .</target>
        </trans-unit>
        <trans-unit id="6c3a253a77450dfe93aa60af05ef58eedf0fcbd6" translate="yes" xml:space="preserve">
          <source>This table shows the preferences that are available for both types of watermarking (text or overlay)</source>
          <target state="translated">이 표는 두 가지 유형의 워터 마킹 (텍스트 또는 오버레이)에 사용할 수있는 기본 설정을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2aace79df5622c85c929842b82dea9b0e4f1efb7" translate="yes" xml:space="preserve">
          <source>This table shows the preferences that are available for the overlay type of watermarking.</source>
          <target state="translated">이 표는 오버레이 유형의 워터 마킹에 사용 가능한 환경 설정을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="2bef284b7058881a0c58e2ff3ed57d38f7cd84e4" translate="yes" xml:space="preserve">
          <source>This table shows the preferences that are available for the text type of watermarking.</source>
          <target state="translated">이 표는 텍스트 유형의 워터 마킹에 사용 가능한 환경 설정을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="67cdd491300ba72393a7ae541ae1aa6c9182a23d" translate="yes" xml:space="preserve">
          <source>This timeout period will be used both for an initial connection to the remote server, as well as for getting a response from it. Make sure you set the timeout before calling &lt;code&gt;send_request()&lt;/code&gt;.</source>
          <target state="translated">이 시간 초과 기간은 원격 서버에 대한 초기 연결과 응답을받는 데 모두 사용됩니다. &lt;code&gt;send_request()&lt;/code&gt; 를 호출하기 전에 시간 종료를 설정했는지 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="b895d71db44cc35b1104dd6bb3155b42aa7aae46" translate="yes" xml:space="preserve">
          <source>This tutorial did not cover all of the things you might expect of a full-fledged content management system, but it introduced you to the more important topics of routing, writing controllers, and models. We hope this tutorial gave you an insight into some of CodeIgniter&amp;rsquo;s basic design patterns, which you can expand upon.</source>
          <target state="translated">본 튜토리얼은 본격적인 컨텐츠 관리 시스템에서 기대할 수있는 모든 사항을 다루지는 않았지만 라우팅, 컨트롤러 및 모델 작성에 대한보다 중요한 주제를 소개했습니다. 이 튜토리얼에서 CodeIgniter의 기본 디자인 패턴에 대한 정보를 얻을 수 있었으면 좋겠습니다.</target>
        </trans-unit>
        <trans-unit id="4ff1666974a1755ecefbede4f43526ed971da27c" translate="yes" xml:space="preserve">
          <source>This tutorial is intended to introduce you to the CodeIgniter framework and the basic principles of MVC architecture. It will show you how a basic CodeIgniter application is constructed in step-by-step fashion.</source>
          <target state="translated">이 튜토리얼은 CodeIgniter 프레임 워크와 MVC 아키텍처의 기본 원칙을 소개합니다. 기본적인 CodeIgniter 애플리케이션이 단계별로 구성되는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="21b84cdb295cf304d73582610b043797c6fcec95" translate="yes" xml:space="preserve">
          <source>This tutorial is intended to introduce you to the CodeIgniter4 framework and the basic principles of MVC architecture. It will show you how a basic CodeIgniter application is constructed in a step-by-step fashion.</source>
          <target state="translated">이 튜토리얼은 CodeIgniter4 프레임 워크와 MVC 아키텍처의 기본 원칙을 소개하기위한 것입니다. 기본 CodeIgniter 애플리케이션이 단계별 방식으로 구성되는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="b0d002ac117d420127603a684da177756f27d42c" translate="yes" xml:space="preserve">
          <source>This tutorial will primarily focus on:</source>
          <target state="translated">이 튜토리얼은 주로 다음에 중점을 둡니다.</target>
        </trans-unit>
        <trans-unit id="cdb92d8ac94acd4cb0065a9236c247a2200604e9" translate="yes" xml:space="preserve">
          <source>This value can also be translated via a language file.</source>
          <target state="translated">이 값은 언어 파일을 통해 변환 될 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4b057f1e2b89c48cba782ade2b3544cb32439fe9" translate="yes" xml:space="preserve">
          <source>This value works with $useTimestamps and $useSoftDeletes to ensure that the correct type of date value gets inserted into the database. By default, this creates DATETIME values, but valid options are: datetime, date, or int (a PHP timestamp). Using &amp;lsquo;useSoftDeletes&amp;rsquo; or &amp;lsquo;useTimestamps&amp;rsquo; with an invalid or missing dateFormat will cause an exception.</source>
          <target state="translated">이 값은 $ useTimestamps 및 $ useSoftDeletes와 함께 작동하여 올바른 유형의 날짜 값이 데이터베이스에 삽입되도록합니다. 기본적으로 이것은 DATETIME 값을 생성하지만 유효한 옵션은 datetime, date 또는 int (PHP 타임 스탬프)입니다. 유효하지 않거나 누락 된 dateFormat과 함께 'useSoftDeletes'또는 'useTimestamps'를 사용하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="698b58228ca20763d80f893f722ba2385343c70c" translate="yes" xml:space="preserve">
          <source>This was due to the specifics of how sessions worked, but is now no longer necessary with our new implementation. However, it may happen that your application relied on these values, so here are alternative methods of accessing them:</source>
          <target state="translated">이것은 세션의 작동 방식에 대한 세부 사항 때문이지만 이제는 새로운 구현에 더 이상 필요하지 않습니다. 그러나 애플리케이션이 이러한 값에 의존 할 수 있으므로 다음과 같은 방법으로 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24045ca6ac9cb2217c60a9aa49487fc168ba8fd5" translate="yes" xml:space="preserve">
          <source>This will be the first migration for a new site which has a blog. All migrations go in the &lt;strong&gt;app/Database/Migrations/&lt;/strong&gt; directory and have names such as &lt;em&gt;20121031100537_add_blog.php&lt;/em&gt;.</source>
          <target state="translated">이것은 블로그가있는 새 사이트의 첫 번째 마이그레이션입니다. 모든 마이그레이션은 &lt;strong&gt;app / Database / Migrations /&lt;/strong&gt; 디렉토리로 &lt;em&gt;이동&lt;/em&gt; 하며 &lt;em&gt;20121031100537_add_blog.php&lt;/em&gt; 와 같은 이름을 &lt;em&gt;갖습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="77ef12d8da6ad35ed9d0b24f79795e1a9b41e572" translate="yes" xml:space="preserve">
          <source>This will be the first migration for a new site which has a blog. All migrations go in the &lt;strong&gt;application/migrations/&lt;/strong&gt; directory and have names such as &lt;em&gt;20121031100537_add_blog.php&lt;/em&gt;.</source>
          <target state="translated">이것은 블로그가있는 새 사이트의 첫 번째 마이그레이션이 될 것입니다. 모든 마이그레이션은 &lt;strong&gt;application / migrations /&lt;/strong&gt; 디렉토리에 있으며 &lt;em&gt;20121031100537_add_blog.php&lt;/em&gt; 와 같은 이름을 &lt;em&gt;갖습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="c2761b927e6e91a33525c717e04d545869f226d9" translate="yes" xml:space="preserve">
          <source>This will create a ZIP with a directory named &amp;ldquo;directory&amp;rdquo; inside, then all sub-directories stored correctly inside that, but will not include the &lt;em&gt;/path/to/your&lt;/em&gt; part of the path.</source>
          <target state="translated">이렇게하면 안에 &quot;directory&quot;라는 디렉토리가있는 ZIP이 생성되고 그 안에 모든 하위 디렉토리가 올바르게 저장되지만 &lt;em&gt;/ path / to / your&lt;/em&gt; 경로 부분은 포함되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c739374afae8e7c51a3d3950ec1c71c79301448f" translate="yes" xml:space="preserve">
          <source>This will first look for a file or directory matching the URI (constructing the full path to each file from the settings of the root and alias directives), and then sends the request to the index.php file along with any arguments.</source>
          <target state="translated">먼저 URI와 일치하는 파일 또는 디렉토리를 찾은 다음 (루트 및 별칭 지시문의 설정에서 각 파일에 대한 전체 경로를 구성) 요청을 모든 인수와 함께 index.php 파일로 보냅니다.</target>
        </trans-unit>
        <trans-unit id="52d834ebe51c9aae4bd4212c05438f82e9d9af1e" translate="yes" xml:space="preserve">
          <source>This will grab the current request instance and automatically inject it into the Negotiator class.</source>
          <target state="translated">그러면 현재 요청 인스턴스를 가져 와서 Negotiator 클래스에 자동으로 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="d19f19552439aebf1ea11dbd0142ec5e24d6bcc0" translate="yes" xml:space="preserve">
          <source>This will install the correct version for your current PHP version. Once that is done, you can run all of the tests for this project by typing:</source>
          <target state="translated">그러면 현재 PHP 버전에 맞는 올바른 버전이 설치됩니다. 완료되면 다음을 입력하여이 프로젝트에 대한 모든 테스트를 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc5d60e8642c70df750c83eb9ef53a3ac2f4f085" translate="yes" xml:space="preserve">
          <source>This will launch the server and you can now view your application in your browser at &lt;a href=&quot;http://localhost:8080&quot;&gt;http://localhost:8080&lt;/a&gt;.</source>
          <target state="translated">그러면 서버가 시작되고 이제 브라우저 ( &lt;a href=&quot;http://localhost:8080&quot;&gt;http : // localhost : 8080)&lt;/a&gt; 에서 애플리케이션을 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="899e6ed20f4e31d17cdd43b7bfd2605a3e144533" translate="yes" xml:space="preserve">
          <source>This will look for any migrations located at both &lt;strong&gt;APPPATH/Database/Migrations&lt;/strong&gt; and &lt;strong&gt;ROOTPATH/MyCompany/Database/Migrations&lt;/strong&gt;. This makes it simple to include migrations in your re-usable, modular code suites.</source>
          <target state="translated">&lt;strong&gt;APPPATH / Database / Migrations&lt;/strong&gt; 및 &lt;strong&gt;ROOTPATH ​​/ MyCompany / Database / Migrations&lt;/strong&gt; 모두에있는 마이그레이션을 찾습니다 . 이를 통해 재사용 가능한 모듈 식 코드 모음에 마이그레이션을 간단하게 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="554ed56bcaa800de28880527a09b79ed869901e3" translate="yes" xml:space="preserve">
          <source>This will retrieve data and convert it to an array. Like this:</source>
          <target state="translated">이것은 데이터를 검색하고 배열로 변환합니다. 이렇게 :</target>
        </trans-unit>
        <trans-unit id="1c25471c05801b85073a51ccc5408bd1ee15f466" translate="yes" xml:space="preserve">
          <source>This will, by default, display the links in the normal manner, as a series of links, but you can change the display template used by passing in the name of the template as the fourth parameter. More details can be found in the following sections.</source>
          <target state="translated">이것은 기본적으로 링크를 일련의 링크로 일반적인 방식으로 표시하지만 템플릿 이름을 네 번째 매개 변수로 전달하여 사용되는 표시 템플릿을 변경할 수 있습니다. 자세한 내용은 다음 섹션에서 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2611b6cf3c26deb17f449876763316e52b5c92b6" translate="yes" xml:space="preserve">
          <source>This works exactly the same way as &lt;code&gt;$builder-&amp;gt;getCompiledInsert()&lt;/code&gt; except that it produces a DELETE SQL string instead of an INSERT SQL string.</source>
          <target state="translated">이것은 INSERT SQL 문자열 대신 DELETE SQL 문자열을 생성한다는 점을 제외하면 &lt;code&gt;$builder-&amp;gt;getCompiledInsert()&lt;/code&gt; 와 똑같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="52aaeda114a57d3161db3407301cecb09b5069be" translate="yes" xml:space="preserve">
          <source>This works exactly the same way as &lt;code&gt;$builder-&amp;gt;getCompiledInsert()&lt;/code&gt; except that it produces an UPDATE SQL string instead of an INSERT SQL string.</source>
          <target state="translated">이것은 INSERT SQL 문자열 대신 UPDATE SQL 문자열을 생성한다는 점을 제외하면 &lt;code&gt;$builder-&amp;gt;getCompiledInsert()&lt;/code&gt; 와 똑같은 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="e721a52372f9610ac520c526bae76c786eaee878" translate="yes" xml:space="preserve">
          <source>This works exactly the same way as &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_insert()&lt;/code&gt; except that it produces a DELETE SQL string instead of an INSERT SQL string.</source>
          <target state="translated">이것은 INSERT SQL 문자열 대신 DELETE SQL 문자열을 생성한다는 점을 제외하고 &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_insert()&lt;/code&gt; 와 정확히 동일한 방식으로 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="a63f354542997f0ba925f6f90bb6204bfd31a8a5" translate="yes" xml:space="preserve">
          <source>This works exactly the same way as &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_insert()&lt;/code&gt; except that it produces an UPDATE SQL string instead of an INSERT SQL string.</source>
          <target state="translated">이것은 INSERT SQL 문자열 대신 UPDATE SQL 문자열을 생성한다는 점을 제외하고 &lt;code&gt;$this-&amp;gt;db-&amp;gt;get_compiled_insert()&lt;/code&gt; 와 정확히 동일한 방식으로 작동 합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
