<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="codeigniter">
    <body>
      <group id="codeigniter">
        <trans-unit id="ae63c0d0d186c12e8c441dda11d8a0aeb7e714dc" translate="yes" xml:space="preserve">
          <source>This works much the same way as &lt;code&gt;current()&lt;/code&gt; but instead of looking for the &lt;code&gt;$config['migration_version']&lt;/code&gt; the Migration class will use the very newest migration found in the filesystem.</source>
          <target state="translated">이것은 &lt;code&gt;current()&lt;/code&gt; 와 거의 같은 방식으로 작동 하지만 &lt;code&gt;$config['migration_version']&lt;/code&gt; 을 찾는 대신 마이그레이션 클래스는 파일 시스템에서 발견 된 최신 마이그레이션을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5a8814669d775819cf34b36bed279d998e02bc84" translate="yes" xml:space="preserve">
          <source>This works similar to the default controller setting, but is used to determine the default method that is used when a controller is found that matches the URI, but no segment exists for the method. The default value is &lt;code&gt;index&lt;/code&gt;.</source>
          <target state="translated">이는 기본 컨트롤러 설정과 유사하게 작동하지만 URI와 일치하는 컨트롤러가 발견되었지만 메서드에 대한 세그먼트가없는 경우 사용되는 기본 메서드를 결정하는 데 사용됩니다. 기본값은 &lt;code&gt;index&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e5af2ea5b87a08043396101eb095457b96214fb8" translate="yes" xml:space="preserve">
          <source>This would give you something like: &lt;em&gt;http://example.com/images/icons/edit.png&lt;/em&gt;</source>
          <target state="translated">이것은 당신에게 다음과 같은 것을 줄 것입니다 : &lt;em&gt;http://example.com/images/icons/edit.png&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="fcb94d74c91eb480c179659dae2f407f472d0931" translate="yes" xml:space="preserve">
          <source>This would handle a resource route to the &lt;code&gt;App\API\v1\Users&lt;/code&gt; controller with the &lt;code&gt;/api/users&lt;/code&gt; URI.</source>
          <target state="translated">이는 &lt;code&gt;/api/users&lt;/code&gt; URI 를 사용하여 &lt;code&gt;App\API\v1\Users&lt;/code&gt; 컨트롤러에 대한 리소스 경로를 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="a64ba993b973e1dd8bb4d1290d9c1bf805a3594e" translate="yes" xml:space="preserve">
          <source>This would handle the URL at &lt;code&gt;admin/users/list&lt;/code&gt;.</source>
          <target state="translated">이것은 &lt;code&gt;admin/users/list&lt;/code&gt; 의 URL을 처리합니다 .</target>
        </trans-unit>
        <trans-unit id="f865480348ba46699defe9eb68919ec9a819829f" translate="yes" xml:space="preserve">
          <source>This would have two apps, &amp;ldquo;foo&amp;rdquo; and &amp;ldquo;bar&amp;rdquo;, both having standard application directories and a &lt;code&gt;public&lt;/code&gt; folder, and sharing a common codeigniter framework.</source>
          <target state="translated">여기에는 표준 응용 프로그램 디렉터리와 &lt;code&gt;public&lt;/code&gt; 폴더가 있고 공통 codeigniter 프레임 워크를 공유하는 &quot;foo&quot;및 &quot;bar&quot;라는 두 개의 앱이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9d2d8ec4d7712c3d5bd57992020cddfd15388343" translate="yes" xml:space="preserve">
          <source>This would need to be repeated to incorporate any updates to the translations.</source>
          <target state="translated">번역에 대한 업데이트를 통합하려면이 작업을 반복해야합니다.</target>
        </trans-unit>
        <trans-unit id="6de253b1edb3544992462a523b98cc93255373fa" translate="yes" xml:space="preserve">
          <source>This would prefix the &amp;lsquo;users&amp;rsquo; and &amp;lsquo;blog&amp;rdquo; URIs with &amp;ldquo;admin&amp;rdquo;, handling URLs like &lt;code&gt;/admin/users&lt;/code&gt; and &lt;code&gt;/admin/blog&lt;/code&gt;. It is possible to nest groups within groups for finer organization if you need it:</source>
          <target state="translated">이는 'users'및 'blog'URI 앞에 'admin'을 붙이고 &lt;code&gt;/admin/users&lt;/code&gt; 및 &lt;code&gt;/admin/blog&lt;/code&gt; 와 같은 URL을 처리합니다 . 필요한 경우보다 세밀한 구성을 위해 그룹 내에 그룹을 중첩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="33dc943c4733a6827bc22137d06dd33a653c1d13" translate="yes" xml:space="preserve">
          <source>Three consecutive periods either preceding or following a word are converted to ellipsis (&amp;hellip;).</source>
          <target state="translated">단어 앞뒤에있는 세 개의 연속 기간은 줄임표 (&amp;hellip;)로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="2712a8346a6c03defc845282bde5cff2fbc45b47" translate="yes" xml:space="preserve">
          <source>Three constants are defined for your use, that set some helpful ranges on the values. You are not required to use these but you might find they aid readability:</source>
          <target state="translated">값에 유용한 범위를 설정하는 세 가지 상수가 사용을 위해 정의됩니다. 이것을 사용할 필요는 없지만 가독성에 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e740a002cedeff6b62d71f6164190429696e9056" translate="yes" xml:space="preserve">
          <source>Three filters are bundled with CodeIgniter4: Honeypot, Security, and DebugToolbar.</source>
          <target state="translated">CodeIgniter4에는 Honeypot, Security 및 DebugToolbar의 세 가지 필터가 번들로 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="8ecbfeb2bc4103c08c0932a78431577e530cc4f3" translate="yes" xml:space="preserve">
          <source>Throttle</source>
          <target state="translated">Throttle</target>
        </trans-unit>
        <trans-unit id="83ee328167f8d28c0e1ebc0f1b9d9f7cc6c63062" translate="yes" xml:space="preserve">
          <source>Throttle/</source>
          <target state="translated">Throttle/</target>
        </trans-unit>
        <trans-unit id="f104dfd7a61ec7212f16424173adb80ad88efed9" translate="yes" xml:space="preserve">
          <source>ThrottleTest #1398</source>
          <target state="translated">스로틀 테스트 # 1398</target>
        </trans-unit>
        <trans-unit id="b505a6529241edecce13b5f99ea47b76dcfefa4d" translate="yes" xml:space="preserve">
          <source>ThrottleTest #2074</source>
          <target state="translated">스로틀 테스트 # 2074</target>
        </trans-unit>
        <trans-unit id="f2140d2bee0941e673686a83a500850950f57e84" translate="yes" xml:space="preserve">
          <source>Throttler</source>
          <target state="translated">Throttler</target>
        </trans-unit>
        <trans-unit id="50303dc5d0c53f0dac9e46f2419b060b42366c1d" translate="yes" xml:space="preserve">
          <source>Throttler #2074</source>
          <target state="translated">스로틀 러 # 2074</target>
        </trans-unit>
        <trans-unit id="9c1b3e348c5e658c9f04296e21ad3e2315006119" translate="yes" xml:space="preserve">
          <source>Throws:</source>
          <target state="translated">Throws:</target>
        </trans-unit>
        <trans-unit id="ca63e7c2dfa43654613ee2c1af4581cb70157430" translate="yes" xml:space="preserve">
          <source>Thumbnail Creation</source>
          <target state="translated">썸네일 생성</target>
        </trans-unit>
        <trans-unit id="d3421a0f53b6c2d2410de5d185836ff92ad48916" translate="yes" xml:space="preserve">
          <source>Thus far we have only been dealing with errors. It&amp;rsquo;s time to repopulate the form field with the submitted data. CodeIgniter offers several helper functions that permit you to do this. The one you will use most commonly is:</source>
          <target state="translated">지금까지는 오류 만 처리했습니다. 제출 된 데이터로 양식 필드를 다시 채울 차례입니다. CodeIgniter는이를 수행 할 수있는 여러 가지 도우미 기능을 제공합니다. 가장 일반적으로 사용하는 것은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f189603cdb113b483b7352019102ee9e4af1be5b" translate="yes" xml:space="preserve">
          <source>Tilde: ~</source>
          <target state="translated">물결표 : ~</target>
        </trans-unit>
        <trans-unit id="cb78d47c26abfaa31ed20d5410683a073eb311d1" translate="yes" xml:space="preserve">
          <source>Time #1603</source>
          <target state="translated">시간 # 1603</target>
        </trans-unit>
        <trans-unit id="abd627550e006bbb9f006782b1ffeef5b29eeaf0" translate="yes" xml:space="preserve">
          <source>Time #2231</source>
          <target state="translated">시간 # 2231</target>
        </trans-unit>
        <trans-unit id="14c3731a6c18920f797aa3eb0f938484a1f8d5dd" translate="yes" xml:space="preserve">
          <source>Time Constants</source>
          <target state="translated">시간 상수</target>
        </trans-unit>
        <trans-unit id="a30e720c3707c35385efeadff935bc53075c3fdb" translate="yes" xml:space="preserve">
          <source>Time Zone</source>
          <target state="translated">시간대</target>
        </trans-unit>
        <trans-unit id="0063b512f659c05353aa78c33b77ea6d3a76da6b" translate="yes" xml:space="preserve">
          <source>Time difference</source>
          <target state="translated">시차</target>
        </trans-unit>
        <trans-unit id="84ed9055081d17a0bb8f9aac1494df2e5d31e4c3" translate="yes" xml:space="preserve">
          <source>Time in seconds (integer)</source>
          <target state="translated">초 단위 시간 (정수)</target>
        </trans-unit>
        <trans-unit id="c2e35ebbcd9ea0a8162b176d92a52bd5c071fd42" translate="yes" xml:space="preserve">
          <source>TimeDifference #2231</source>
          <target state="translated">시간차 # 2231</target>
        </trans-unit>
        <trans-unit id="353e6a6d915518eca1d377afa1cc1d42c1b960e3" translate="yes" xml:space="preserve">
          <source>TimeDifferenceTest #1603</source>
          <target state="translated">TimeDifferenceTest # 1603</target>
        </trans-unit>
        <trans-unit id="d17e60a0c2c437a8d144028c486a7fe64e5b8f0c" translate="yes" xml:space="preserve">
          <source>TimeDifferenceTest #2231</source>
          <target state="translated">TimeDifferenceTest # 2231</target>
        </trans-unit>
        <trans-unit id="61b5539e1ea443e9a08bc21e3390c463aa57fc1a" translate="yes" xml:space="preserve">
          <source>TimeTest # 1736</source>
          <target state="translated">TimeTest # 1736</target>
        </trans-unit>
        <trans-unit id="470555c6c5f828158f1c676ef28e418022ac7a31" translate="yes" xml:space="preserve">
          <source>TimeTest #1273, #1316</source>
          <target state="translated">타임 테스트 # 1273, # 1316</target>
        </trans-unit>
        <trans-unit id="ae888bd11d5d76ebd1e5769e8605cb40064ce951" translate="yes" xml:space="preserve">
          <source>TimeTest #1467, #1473</source>
          <target state="translated">타임 테스트 # 1467, # 1473</target>
        </trans-unit>
        <trans-unit id="bebf1ac9613b62a87ba726320d2867893b2f834e" translate="yes" xml:space="preserve">
          <source>TimeTest #1603</source>
          <target state="translated">타임 테스트 # 1603</target>
        </trans-unit>
        <trans-unit id="528a8ea2fb12c3fd8c3f0745ebba2c1ca6f58d40" translate="yes" xml:space="preserve">
          <source>TimeTest #2231</source>
          <target state="translated">타임 테스트 # 2231</target>
        </trans-unit>
        <trans-unit id="3b222caaa267ba7cb904e9d1b6894944fb4dca13" translate="yes" xml:space="preserve">
          <source>TimerTest #1273</source>
          <target state="translated">TimerTest # 1273</target>
        </trans-unit>
        <trans-unit id="d59f9ae62acfef5c7cec07aeef75bd75a5810f8b" translate="yes" xml:space="preserve">
          <source>Timezone Reference</source>
          <target state="translated">시간대 참조</target>
        </trans-unit>
        <trans-unit id="27b6da112028625479bb19e4b89bcc94eebd74d6" translate="yes" xml:space="preserve">
          <source>Tip: consider the use of a request governor</source>
          <target state="translated">팁 : 요청 관리자 사용 고려</target>
        </trans-unit>
        <trans-unit id="54e7040a9e341cbfda28404a5c0e3fad5db5cc17" translate="yes" xml:space="preserve">
          <source>Tips for a Good Issue Report</source>
          <target state="translated">좋은 문제 보고서를위한 팁</target>
        </trans-unit>
        <trans-unit id="48229aff98b2e688ef72e3a1f45d6220c71c4457" translate="yes" xml:space="preserve">
          <source>Tips: only process trustworthy data; do not store data HTML encoded in DB</source>
          <target state="translated">팁 : 신뢰할 수있는 데이터 만 처리하십시오. HTML로 인코딩 된 데이터를 DB에 저장하지 마십시오.</target>
        </trans-unit>
        <trans-unit id="b19bf43387b53deab491d7d4f49278f741600bd4" translate="yes" xml:space="preserve">
          <source>To &amp;ldquo;extend&amp;rdquo; Helpers, create a file in your &lt;strong&gt;app/Helpers/&lt;/strong&gt; folder with an identical name to the existing Helper.</source>
          <target state="translated">Helper를 &quot;확장&quot;하려면 기존 Helper와 동일한 이름으로 &lt;strong&gt;app / Helpers /&lt;/strong&gt; 폴더에 파일을 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="54702b76764b24aa0a9b3c229a0c7e09f60630cc" translate="yes" xml:space="preserve">
          <source>To &amp;ldquo;extend&amp;rdquo; Helpers, create a file in your &lt;strong&gt;application/helpers/&lt;/strong&gt; folder with an identical name to the existing Helper, but prefixed with &lt;strong&gt;MY_&lt;/strong&gt; (this item is configurable. See below.).</source>
          <target state="translated">헬퍼를 &quot;확장&quot;하려면 기존 헬퍼와 이름은 동일하지만 &lt;strong&gt;MY_&lt;/strong&gt; 접두사가 붙은 &lt;strong&gt;application / helpers /&lt;/strong&gt; 폴더에 파일을 작성하십시오 (이 항목은 구성 가능합니다. 아래 참조).&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="23b37824ad5da39790cd4b85e969458a390052b1" translate="yes" xml:space="preserve">
          <source>To IIS users: if you hide the &lt;code&gt;Server&lt;/code&gt; HTTP header, the &lt;em&gt;auto&lt;/em&gt; method won&amp;rsquo;t detect IIS, in that case it is advised you explicitly use the &lt;strong&gt;refresh&lt;/strong&gt; method.</source>
          <target state="translated">IIS 사용자에게 : &lt;code&gt;Server&lt;/code&gt; HTTP 헤더 를 숨기면 &lt;em&gt;자동&lt;/em&gt; 메소드는 IIS를 감지하지 않으므로 명시 적으로 &lt;strong&gt;refresh&lt;/strong&gt; 메소드를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="25bd9d3ebdd6293d83c39ac2b9d05b258017c7ac" translate="yes" xml:space="preserve">
          <source>To access CodeIgniter&amp;rsquo;s native resources within your library use the &lt;code&gt;get_instance()&lt;/code&gt; method. This method returns the CodeIgniter super object.</source>
          <target state="translated">라이브러리 내에서 CodeIgniter의 기본 자원에 액세스하려면 &lt;code&gt;get_instance()&lt;/code&gt; 메소드를 사용하십시오 . 이 메소드는 CodeIgniter 수퍼 오브젝트를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="996b715cad438a6f024d98300d49983d6ad7356a" translate="yes" xml:space="preserve">
          <source>To access and initialize the session:</source>
          <target state="translated">세션에 액세스하고 초기화하려면 :</target>
        </trans-unit>
        <trans-unit id="de32ea6ef23b0a01918761ec0a6c5f69ba50225c" translate="yes" xml:space="preserve">
          <source>To add an item to the shopping cart, simply pass an array with the product information to the &lt;code&gt;$this-&amp;gt;cart-&amp;gt;insert()&lt;/code&gt; method, as shown below:</source>
          <target state="translated">장바구니에 품목을 추가하려면 아래에 표시된대로 제품 정보가있는 배열을 &lt;code&gt;$this-&amp;gt;cart-&amp;gt;insert()&lt;/code&gt; 메소드에 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="d3c0fe0d895b04ea5fe8faaef8e956be6199379c" translate="yes" xml:space="preserve">
          <source>To add data to the Vars tab you must:</source>
          <target state="translated">변수 탭에 데이터를 추가하려면 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="729631c65293ec4f5dfcd81db956c634f2619046" translate="yes" xml:space="preserve">
          <source>To add data to your calendar cells involves creating an associative array in which the keys correspond to the days you wish to populate and the array value contains the data. The array is passed to the third parameter of the calendar generating function. Consider this example:</source>
          <target state="translated">달력 셀에 데이터를 추가하려면 키가 채우려는 날짜에 해당하고 배열 값에 데이터가 포함 된 연관 배열을 작성해야합니다. 배열은 달력 생성 기능의 세 번째 매개 변수로 전달됩니다. 이 예제를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="6ddd35c440d1429554052be0ba74edfb1fa245f4" translate="yes" xml:space="preserve">
          <source>To add flashdata:</source>
          <target state="translated">플래시 데이터를 추가하려면</target>
        </trans-unit>
        <trans-unit id="438a4c841d2ca774bf73afdb3367058f18e9b609" translate="yes" xml:space="preserve">
          <source>To add tempdata:</source>
          <target state="translated">임시 데이터를 추가하려면</target>
        </trans-unit>
        <trans-unit id="da26d018897a960263083ee10bc9fc33e8639799" translate="yes" xml:space="preserve">
          <source>To allow your calendar to dynamically increment/decrement via the next/previous links requires that you set up your calendar code similar to this example:</source>
          <target state="translated">다음 / 이전 링크를 통해 캘린더가 동적으로 증가 / 감소하려면 다음 예와 유사한 캘린더 코드를 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="62f21be743c7b1b456c93e689c777fb1bf82fc1f" translate="yes" xml:space="preserve">
          <source>To autoload resources, open the &lt;strong&gt;application/config/autoload.php&lt;/strong&gt; file and add the item you want loaded to the autoload array. You&amp;rsquo;ll find instructions in that file corresponding to each type of item.</source>
          <target state="translated">리소스를 자동로드하려면 &lt;strong&gt;application / config / autoload.php&lt;/strong&gt; 파일을 열고 로드하려는 항목을 자동로드 배열에 추가하십시오. 해당 파일에서 각 항목 유형에 해당하는 지침을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="07515ee354b2aed0b65fdfe7d329a9076be27078" translate="yes" xml:space="preserve">
          <source>To be more specific, it doesn&amp;rsquo;t support PHP&amp;rsquo;s &lt;a href=&quot;http://php.net/manual/en/session.configuration.php#ini.session.save-path&quot;&gt;directory level and mode formats used in session.save_path&lt;/a&gt;, and it has most of the options hard-coded for safety. Instead, only absolute paths are supported for &lt;code&gt;$config['sess_save_path']&lt;/code&gt;.</source>
          <target state="translated">좀 더 구체적으로 말하면 &lt;a href=&quot;http://php.net/manual/en/session.configuration.php#ini.session.save-path&quot;&gt;session.save_path&lt;/a&gt; 에서 사용되는 PHP의 디렉토리 레벨 및 모드 형식을 지원하지 않으며 안전을 위해 하드 코딩 된 대부분의 옵션이 있습니다. 대신 &lt;code&gt;$config['sess_save_path']&lt;/code&gt; 절대 경로 만 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="2885c772290516afba424ad39de3ca8f2741cd1d" translate="yes" xml:space="preserve">
          <source>To be more specific, it doesn&amp;rsquo;t support PHP&amp;rsquo;s &lt;a href=&quot;https://www.php.net/manual/en/session.configuration.php#ini.session.save-path&quot;&gt;directory level and mode formats used in session.save_path&lt;/a&gt;, and it has most of the options hard-coded for safety. Instead, only absolute paths are supported for &lt;code&gt;public $sessionSavePath&lt;/code&gt;.</source>
          <target state="translated">더 구체적으로 말하자면 &lt;a href=&quot;https://www.php.net/manual/en/session.configuration.php#ini.session.save-path&quot;&gt;session.save_path&lt;/a&gt; 에서 사용되는 PHP의 디렉토리 수준 및 모드 형식을 지원하지 않으며 안전을 위해 하드 코딩 된 대부분의 옵션이 있습니다. 대신 &lt;code&gt;public $sessionSavePath&lt;/code&gt; 대해 절대 경로 만 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="d32c31e6034a49b86cc02ff97eb03b214e25e6cf" translate="yes" xml:space="preserve">
          <source>To call the above controller your URI will look something like this:</source>
          <target state="translated">위의 컨트롤러를 호출하면 URI는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="39b06cd68072c24490012947a611e625b1afbfe7" translate="yes" xml:space="preserve">
          <source>To choose a specific group from your config file you can do this:</source>
          <target state="translated">구성 파일에서 특정 그룹을 선택하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="2dcba65959061a6c5e0d49c160f5897ca09b29da" translate="yes" xml:space="preserve">
          <source>To clear the current session (for example, during a logout), you may simply use either PHP&amp;rsquo;s &lt;a href=&quot;http://php.net/session_destroy&quot;&gt;session_destroy()&lt;/a&gt; function, or the &lt;code&gt;sess_destroy()&lt;/code&gt; method. Both will work in exactly the same way:</source>
          <target state="translated">현재 세션을 지우려면 (예 : 로그 아웃 중) PHP의 &lt;a href=&quot;http://php.net/session_destroy&quot;&gt;session_destroy ()&lt;/a&gt; 함수 또는 &lt;code&gt;sess_destroy()&lt;/code&gt; 메소드를 사용하면됩니다. 둘 다 정확히 같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="76dbad4d2f33a905d0cd406ee7c3fc06f5920ad3" translate="yes" xml:space="preserve">
          <source>To clear the current session (for example, during a logout), you may simply use either PHP&amp;rsquo;s &lt;a href=&quot;https://www.php.net/session_destroy&quot;&gt;session_destroy()&lt;/a&gt; function, or the library&amp;rsquo;s &lt;code&gt;destroy()&lt;/code&gt; method. Both will work in exactly the same way:</source>
          <target state="translated">현재 세션을 지우려면 (예 : 로그 아웃하는 동안) PHP의 &lt;a href=&quot;https://www.php.net/session_destroy&quot;&gt;session_destroy ()&lt;/a&gt; 함수 또는 라이브러리의 &lt;code&gt;destroy()&lt;/code&gt; 메서드를 사용하면됩니다. 둘 다 똑같은 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="c516d9eacd95796350e6a13f8289f877440c84d6" translate="yes" xml:space="preserve">
          <source>To compare two Times directly, you would use the &lt;strong&gt;difference()&lt;/strong&gt; method, which returns a &lt;strong&gt;CodeIgniterI18nTimeDifference&lt;/strong&gt; instance. The first parameter is either a Time instance, a DateTime instance, or a string with the date/time. If a string is passed in the first parameter, the second parameter can be a timezone string:</source>
          <target state="translated">두 Times를 직접 비교하려면 &lt;strong&gt;CodeIgniterI18nTimeDifference&lt;/strong&gt; 인스턴스 를 반환하는 &lt;strong&gt;difference ()&lt;/strong&gt; 메서드를 사용합니다 . 첫 번째 매개 변수는 Time 인스턴스, DateTime 인스턴스 또는 날짜 / 시간이있는 문자열입니다. 첫 번째 매개 변수에 문자열이 전달되면 두 번째 매개 변수는 시간대 문자열이 될 수 있습니다.&lt;strong&gt;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit id="2b3ee577919889ad38d3fe2fa94339abae7dd717" translate="yes" xml:space="preserve">
          <source>To connect manually to a desired database you can pass an array of values:</source>
          <target state="translated">원하는 데이터베이스에 수동으로 연결하려면 값 배열을 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bbaf90ad8d1626f8044f8ff617de1a7fc10c2b17" translate="yes" xml:space="preserve">
          <source>To create an environment-specific configuration file, create or copy a configuration file in application/config/{ENVIRONMENT}/{FILENAME}.php</source>
          <target state="translated">환경 별 구성 파일을 만들려면 application / config / {ENVIRONMENT} / {FILENAME} .php에서 구성 파일을 만들거나 복사하십시오.</target>
        </trans-unit>
        <trans-unit id="5e2ab5227342a0249aa9ef43f69414f16533fbfe" translate="yes" xml:space="preserve">
          <source>To create your own XML-RPC server involves initializing the XML-RPC Server class in your controller where you expect the incoming request to appear, then setting up an array with mapping instructions so that incoming requests can be sent to the appropriate class and method for processing.</source>
          <target state="translated">고유 한 XML-RPC 서버를 만들려면 들어오는 요청이 나타날 것으로 예상되는 컨트롤러에서 XML-RPC 서버 클래스를 초기화 한 다음 매핑 요청으로 배열을 설정하여 들어오는 요청을 적절한 클래스 및 방법으로 보낼 수 있습니다. 가공.</target>
        </trans-unit>
        <trans-unit id="1eb74e7c9a628f0066c5117e4071097ffd29fc0b" translate="yes" xml:space="preserve">
          <source>To define the formatter that is used, edit &lt;strong&gt;Config/Format.php&lt;/strong&gt;. The &lt;code&gt;$supportedResponseFormats&lt;/code&gt; contains a list of mime types that your application can automatically format the response for. By default, the system knows how to format both XML and JSON responses:</source>
          <target state="translated">사용되는 포맷터를 정의하려면 &lt;strong&gt;Config / Format.php를&lt;/strong&gt; 편집하십시오 . &lt;code&gt;$supportedResponseFormats&lt;/code&gt; 응용 프로그램이 자동으로에 대한 응답을 포맷 할 수있는 MIME 유형의 목록이 포함되어 있습니다. 기본적으로 시스템은 XML 및 JSON 응답의 형식을 지정하는 방법을 알고 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccb6e87da6f7fe01bdc8ba7b864a484784c77d6c" translate="yes" xml:space="preserve">
          <source>To demonstrate this process here is brief tutorial. Afterward you&amp;rsquo;ll find reference information.</source>
          <target state="translated">이 과정을 보여주기 위해 간단한 튜토리얼이 있습니다. 나중에 참조 정보를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d2f2c3679a38956d75d0cecb7bf474d6eeb48dd" translate="yes" xml:space="preserve">
          <source>To disable the profiler you will use:</source>
          <target state="translated">프로파일 러를 비활성화하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7f31e4c0647ca03f3a9cc0adf1414779bbca23cc" translate="yes" xml:space="preserve">
          <source>To disable the profiler you would use:</source>
          <target state="translated">프로파일 러를 비활성화하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6269b751d5814be8db670947fe32d7e07fd99d9e" translate="yes" xml:space="preserve">
          <source>To display a toolbar tab you must:</source>
          <target state="translated">도구 모음 탭을 표시하려면 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="962cd1006449f6b24d77d775985391add0c12b89" translate="yes" xml:space="preserve">
          <source>To display the cart you will create a &lt;a href=&quot;../general/views&quot;&gt;view file&lt;/a&gt; with code similar to the one shown below.</source>
          <target state="translated">카트를 표시 하기 위해 아래 표시된 코드와 유사한 코드 로 &lt;a href=&quot;../general/views&quot;&gt;보기 파일&lt;/a&gt; 을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="7415e8ccaae70821c4acf3e8fde78b85afcdb3c4" translate="yes" xml:space="preserve">
          <source>To enable a Honeypot, changes have to be made to the &lt;code&gt;app/Config/Filters.php&lt;/code&gt;. Just uncomment honeypot from the &lt;code&gt;$globals&lt;/code&gt; array, like&amp;hellip;:</source>
          <target state="translated">Honeypot을 활성화하려면 &lt;code&gt;app/Config/Filters.php&lt;/code&gt; 를 변경해야합니다 . 다음 과 같이 &lt;code&gt;$globals&lt;/code&gt; 배열 에서 허니팟의 주석을 제거하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff69a0381df0e9b6efb2fbf97cefc03ccbae5c9d" translate="yes" xml:space="preserve">
          <source>To enable caching, put the following tag in any of your controller methods:</source>
          <target state="translated">캐싱을 사용하려면 컨트롤러 메소드 중 하나에 다음 태그를 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="01765c423a3826107c542c6c5446fafdb1fde385" translate="yes" xml:space="preserve">
          <source>To enable strict mode use this:</source>
          <target state="translated">엄격 모드를 사용하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="137fe2ecdaaf29ecba9f189d57d84796ee108d99" translate="yes" xml:space="preserve">
          <source>To enable the profiler place the following line anywhere within your &lt;a href=&quot;../general/controllers&quot;&gt;Controller&lt;/a&gt; methods:</source>
          <target state="translated">프로파일 러를 활성화하려면 &lt;a href=&quot;../general/controllers&quot;&gt;Controller&lt;/a&gt; 메소드 내에서 다음 행을 배치하십시오 .</target>
        </trans-unit>
        <trans-unit id="919668594951686709f8ac0efdbeb6c466a4fa65" translate="yes" xml:space="preserve">
          <source>To enable the profiler place the following line anywhere within your &lt;a href=&quot;controllers&quot;&gt;Controller&lt;/a&gt; methods:</source>
          <target state="translated">프로파일 러를 활성화하려면 &lt;a href=&quot;controllers&quot;&gt;Controller&lt;/a&gt; 메소드 내에서 다음 행을 배치하십시오 .</target>
        </trans-unit>
        <trans-unit id="fbf7b960fb2192242208b8ec686c4e3f34247a60" translate="yes" xml:space="preserve">
          <source>To filter data through the XSS filter use the &lt;code&gt;xss_clean()&lt;/code&gt; method:</source>
          <target state="translated">XSS 필터를 통해 데이터를 필터링하려면 &lt;code&gt;xss_clean()&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="7b9b80b79d1a7d0793771f3be949767ddcff97b1" translate="yes" xml:space="preserve">
          <source>To get around this problem, the most efficient solution (so far) is to manually define the request header, forcing the information to be sent to the server, which will then be able to identify that the request is XHR.</source>
          <target state="translated">이 문제를 해결하기위한 가장 효율적인 솔루션 (지금까지)은 요청 헤더를 수동으로 정의하여 정보가 서버로 전송되도록하는 것입니다. 그러면 요청이 XHR임을 식별 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be0875d60060972fab6d538dc908b4e4db4b90bf" translate="yes" xml:space="preserve">
          <source>To get the full path of the temp file that was created during the upload, you can use the &lt;code&gt;getTempName()&lt;/code&gt; method:</source>
          <target state="translated">업로드 중에 생성 된 임시 파일의 전체 경로를 가져 오려면 &lt;code&gt;getTempName()&lt;/code&gt; 메서드를 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1c291760c36054d99b4351c0856be3980212eef4" translate="yes" xml:space="preserve">
          <source>To get the most out of CodeIgniter, you need to understand how the application is structured, by default, and what you can change to meet the needs of your application.</source>
          <target state="translated">CodeIgniter를 최대한 활용하려면 기본적으로 애플리케이션의 구조와 애플리케이션의 요구 사항에 맞게 변경할 수있는 사항을 이해해야합니다.</target>
        </trans-unit>
        <trans-unit id="1d257c9333165d10f2b0ad9b69943ab4c13889b8" translate="yes" xml:space="preserve">
          <source>To give a labeled error message you can set up as:</source>
          <target state="translated">레이블이있는 오류 메시지를 제공하려면 다음과 같이 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5441caf141be282c4ccfda4c838cb79d7e2bfcf" translate="yes" xml:space="preserve">
          <source>To help protect against Mass Assignment Attacks, the Model class &lt;strong&gt;requires&lt;/strong&gt; that you list all of the field names that can be changed during inserts and updates in the &lt;code&gt;$allowedFields&lt;/code&gt; class property. Any data provided in addition to these will be removed prior to hitting the database. This is great for ensuring that timestamps, or primary keys do not get changed.</source>
          <target state="translated">대량 할당 공격으로부터 보호하기 위해 Model 클래스 는 &lt;code&gt;$allowedFields&lt;/code&gt; 클래스 속성 에 삽입 및 업데이트 중에 변경할 수있는 모든 필드 이름을 나열 &lt;strong&gt;해야&lt;/strong&gt; 합니다 . 이 외에도 제공된 모든 데이터는 데이터베이스에 도달하기 전에 제거됩니다. 이는 타임 스탬프 또는 기본 키가 변경되지 않도록하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="be8b7c1383222fcfc5fabf13e5640ed37c739243" translate="yes" xml:space="preserve">
          <source>To help you understand everything we&amp;rsquo;ve covered thus far, let&amp;rsquo;s create a couple controllers that act as XML-RPC Client and Server. You&amp;rsquo;ll use the Client to send a request to the Server and receive a response.</source>
          <target state="translated">지금까지 다룬 모든 내용을 이해하는 데 도움이되도록 XML-RPC 클라이언트 및 서버 역할을하는 몇 개의 컨트롤러를 만들어 보겠습니다. 클라이언트를 사용하여 서버에 요청을 보내고 응답을받습니다.</target>
        </trans-unit>
        <trans-unit id="5b4a90e8a6e3b67adee67f1ad1f99e2ba1e8466e" translate="yes" xml:space="preserve">
          <source>To ignore logging on other status codes, you can set the status code to ignore in the same file:</source>
          <target state="translated">다른 상태 코드에 대한 로깅을 무시하려면 동일한 파일에서 무시하도록 상태 코드를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb6356fb48705ebe12da3718627cfc7aceb68dc6" translate="yes" xml:space="preserve">
          <source>To initialize the Javascript class manually in your controller constructor, use the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method. Currently, the only available library is jQuery, which will automatically be loaded like this:</source>
          <target state="translated">컨트롤러 생성자에서 Javascript 클래스를 수동으로 초기화하려면 &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; 메소드를 사용하십시오. 현재 사용 가능한 유일한 라이브러리는 jQuery이며 다음과 같이 자동으로로드됩니다.</target>
        </trans-unit>
        <trans-unit id="d4920c2bf87400a26b3ee93ac435cffcee991160" translate="yes" xml:space="preserve">
          <source>To initialize the Session class manually in your controller constructor, use the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">컨트롤러 생성자에서 Session 클래스를 수동으로 초기화하려면 &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; 메소드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b921295a377867dfacd9fdcc4e4c25cc9d75c2f0" translate="yes" xml:space="preserve">
          <source>To initialize the Shopping Cart Class in your controller constructor, use the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">컨트롤러 생성자에서 쇼핑 카트 클래스를 초기화하려면 &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; 메소드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="23f996fe872d4fafd88453850946410eebf62e89" translate="yes" xml:space="preserve">
          <source>To initialize the jQuery class manually in your controller constructor, use the &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; method:</source>
          <target state="translated">컨트롤러 생성자에서 jQuery 클래스를 수동으로 초기화하려면 &lt;code&gt;$this-&amp;gt;load-&amp;gt;library()&lt;/code&gt; 메소드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cebf3110d8d06fd27ad13be94edfd140fb44c482" translate="yes" xml:space="preserve">
          <source>To input data into the database you need to create a form where you can input the information to be stored. This means you&amp;rsquo;ll be needing a form with two fields, one for the title and one for the text. You&amp;rsquo;ll derive the slug from our title in the model. Create the new view at &lt;em&gt;application/views/news/create.php&lt;/em&gt;.</source>
          <target state="translated">데이터베이스에 데이터를 입력하려면 저장할 정보를 입력 할 수있는 양식을 작성해야합니다. 즉, 제목과 텍스트에 각각 하나씩 두 개의 필드가있는 양식이 필요합니다. 모델의 타이틀에서 슬러그를 파생시킵니다. &lt;em&gt;application / views / news / create.php&lt;/em&gt; 에서 새보기를 작성하십시오 .</target>
        </trans-unit>
        <trans-unit id="7cb6ee458458d39e7981a270b83a9ec47c44dc3b" translate="yes" xml:space="preserve">
          <source>To input data into the database, you need to create a form where you can input the information to be stored. This means you&amp;rsquo;ll be needing a form with two fields, one for the title and one for the text. You&amp;rsquo;ll derive the slug from our title in the model. Create a new view at &lt;strong&gt;app/Views/news/create.php&lt;/strong&gt;.</source>
          <target state="translated">데이터베이스에 데이터를 입력하려면 저장할 정보를 입력 할 수있는 양식을 만들어야합니다. 즉, 제목과 텍스트를위한 두 개의 필드가있는 양식이 필요합니다. 모델의 제목에서 슬러그를 파생합니다. &lt;strong&gt;app / Views / news / create.php&lt;/strong&gt; 에서 새보기를 만듭니다 .</target>
        </trans-unit>
        <trans-unit id="c4dcd6e1722fcf7b7e8f8682d7565d56a1f8f193" translate="yes" xml:space="preserve">
          <source>To invoke a callback just put the method name in a rule, with &amp;ldquo;callback_&amp;rdquo; as the rule &lt;strong&gt;prefix&lt;/strong&gt;. If you need to receive an extra parameter in your callback method, just add it normally after the method name between square brackets, as in: &lt;code&gt;callback_foo[bar]&lt;/code&gt;, then it will be passed as the second argument of your callback method.</source>
          <target state="translated">콜백을 호출하려면 메서드 이름을 규칙 &lt;strong&gt;접두어&lt;/strong&gt; 로 &quot;callback_&quot;과 함께 규칙에 넣으십시오 . 콜백 메소드에서 추가 매개 변수를 받아야하는 경우 &lt;code&gt;callback_foo[bar]&lt;/code&gt; 와 같이 대괄호 사이에 메소드 이름 뒤에 정상적으로 추가하면 콜백 메소드 의 두 번째 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="11225b7e5647e526e3351583acfd85275ee9f1b9" translate="yes" xml:space="preserve">
          <source>To load a particular view file you will use the following method:</source>
          <target state="translated">특정보기 파일을로드하려면 다음 방법을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="edb1365e6abf877e1ada375e6a98d307b6139eca" translate="yes" xml:space="preserve">
          <source>To load and display a particular view file you will use the following function:</source>
          <target state="translated">특정보기 파일을로드하고 표시하려면 다음 기능을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d84447e1ea719505dce51366402c89ec9e8893e6" translate="yes" xml:space="preserve">
          <source>To load one of your custom config files you will use the following function within the &lt;a href=&quot;../general/controllers&quot;&gt;controller&lt;/a&gt; that needs it:</source>
          <target state="translated">사용자 정의 구성 파일 중 하나를로드하려면 &lt;a href=&quot;../general/controllers&quot;&gt;컨트롤러&lt;/a&gt; 내에서 다음 기능을 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="ba90b23f3a8c9e47fcc2a7e087d761419ae8b425" translate="yes" xml:space="preserve">
          <source>To load the XML-RPC Server class you will use:</source>
          <target state="translated">XML-RPC 서버 클래스를로드하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bc90c3f68afe5c86cd4eee813c1ac3be3c85146a" translate="yes" xml:space="preserve">
          <source>To load the XML-RPC class you will use:</source>
          <target state="translated">XML-RPC 클래스를로드하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fcbe6738b6f757f41c2aecb8edc71449582c27ad" translate="yes" xml:space="preserve">
          <source>To load with the Services class call the &lt;code&gt;curlrequest()&lt;/code&gt; method:</source>
          <target state="translated">Services 클래스로로드하려면 &lt;code&gt;curlrequest()&lt;/code&gt; 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="2e16c0997fb7cbae976c2ef3f08956399e58d552" translate="yes" xml:space="preserve">
          <source>To load your library you&amp;rsquo;ll see the standard loading method:</source>
          <target state="translated">라이브러리를로드하려면 표준로드 방법이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c8e21569a8d459404277df6b79eccc69fb9e7e73" translate="yes" xml:space="preserve">
          <source>To load your sub-class you&amp;rsquo;ll use the standard syntax normally used. DO NOT include your prefix. For example, to load the example above, which extends the Email class, you will use:</source>
          <target state="translated">하위 클래스를로드하려면 일반적으로 사용되는 표준 구문을 사용합니다. 접두사를 포함하지 마십시오. 예를 들어 Email 클래스를 확장하는 위 예제를로드하려면 다음을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="f005bdff9d0afbcf4bc3728d570bf3660294bfb3" translate="yes" xml:space="preserve">
          <source>To maintain security of your application, you will want to filter all input as you access it. You can pass the type of filter to use as the second parameter of any of these methods. The native &lt;code&gt;filter_var()&lt;/code&gt; function is used for the filtering. Head over to the PHP manual for a list of &lt;a href=&quot;https://www.php.net/manual/en/filter.filters.php&quot;&gt;valid filter types&lt;/a&gt;.</source>
          <target state="translated">응용 프로그램의 보안을 유지하려면 액세스 할 때 모든 입력을 필터링해야합니다. 이러한 메소드의 두 번째 매개 변수로 사용할 필터 유형을 전달할 수 있습니다. 필터링 에는 기본 &lt;code&gt;filter_var()&lt;/code&gt; 함수가 사용됩니다. &lt;a href=&quot;https://www.php.net/manual/en/filter.filters.php&quot;&gt;유효한 필터 유형&lt;/a&gt; 목록은 PHP 매뉴얼을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="b6742a26daae3b1eaeeb6c75ded04d18d7b60577" translate="yes" xml:space="preserve">
          <source>To make auto-discovery work for our &lt;strong&gt;Blog&lt;/strong&gt; namespace, we need to make one small adjustment. &lt;strong&gt;Acme&lt;/strong&gt; needs to be changed to &lt;strong&gt;Acme\Blog&lt;/strong&gt; because each &amp;ldquo;module&amp;rdquo; within the namespace needs to be fully defined. Once your module folder path is defined, the discovery process would look for discoverable items on that path and should, for example, find the routes file at &lt;strong&gt;/acme/Blog/Config/Routes.php&lt;/strong&gt;.</source>
          <target state="translated">&lt;strong&gt;블로그&lt;/strong&gt; 네임 스페이스에서 자동 검색이 작동하도록하려면 약간의 조정이 필요합니다. &lt;strong&gt;한국 전기&lt;/strong&gt; 요구로 변경하는 &lt;strong&gt;한국 전기 \ 블로그&lt;/strong&gt; 네임 스페이스 요구 내의 각 &quot;모듈&quot;완전하게 정의 할 수 있기 때문이다. 모듈 폴더 경로가 정의되면 검색 프로세스는 해당 경로에서 검색 가능한 항목을 찾고 예를 들어 &lt;strong&gt;/acme/Blog/Config/Routes.php&lt;/strong&gt; 에서 경로 파일을 &lt;strong&gt;찾아야&lt;/strong&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="4c85f7ba72a79880b33b0be2ae0e78aacac48271" translate="yes" xml:space="preserve">
          <source>To make code reading more objective it is also possible to add primary and unique keys with specific methods:</source>
          <target state="translated">코드 읽기를보다 객관적으로 만들기 위해 특정 메서드를 사용하여 기본 및 고유 키를 추가 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="9f2d6eee8d6b1ee8ecf6e7ee2cd4d9607b70bbc0" translate="yes" xml:space="preserve">
          <source>To make services work well, you have to be able to rely on each class having a constant API, or &lt;a href=&quot;https://www.php.net/manual/en/language.oop5.interfaces.php&quot;&gt;interface&lt;/a&gt;, to use. Almost all of CodeIgniter&amp;rsquo;s classes provide an interface that they adhere to. When you want to extend or replace core classes, you only need to ensure you meet the requirements of the interface and you know that the classes are compatible.</source>
          <target state="translated">서비스가 잘 작동하도록하려면 상수 API 또는 &lt;a href=&quot;https://www.php.net/manual/en/language.oop5.interfaces.php&quot;&gt;인터페이스&lt;/a&gt; 가있는 각 클래스에 의존하여 사용할 수 있어야 합니다. 거의 모든 CodeIgniter 클래스는 준수하는 인터페이스를 제공합니다. 코어 클래스를 확장하거나 교체하려는 경우 인터페이스의 요구 사항을 충족하고 클래스가 호환되는지 확인하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="4cbeb259928c0e4f1dbf7593c1dfa1674fb1e47a" translate="yes" xml:space="preserve">
          <source>To map the alias to the field id, pass them both into the &lt;code&gt;smiley_js()&lt;/code&gt; function:</source>
          <target state="translated">별명을 필드 ID에 맵핑하려면 둘 다 &lt;code&gt;smiley_js()&lt;/code&gt; 함수로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="5dc960e89aadbb3a416164f0091cb2fff8063240" translate="yes" xml:space="preserve">
          <source>To mark an existing item as &amp;ldquo;flashdata&amp;rdquo;:</source>
          <target state="translated">기존 항목을 &quot;flashdata&quot;로 표시하려면</target>
        </trans-unit>
        <trans-unit id="9786247cd26e9ae3184c0c454a01b5d3f99edb16" translate="yes" xml:space="preserve">
          <source>To mark an existing item as &amp;ldquo;tempdata&amp;rdquo;, simply pass its key and expiry time (in seconds!) to the &lt;code&gt;markAsTempdata()&lt;/code&gt; method:</source>
          <target state="translated">기존 항목을 &quot;tempdata&quot;로 표시하려면 해당 키와 만료 시간 (초)을 &lt;code&gt;markAsTempdata()&lt;/code&gt; 메서드에 전달하면됩니다.</target>
        </trans-unit>
        <trans-unit id="9b42ff1c63175afb37fc16dc492ba3a9dca11ee8" translate="yes" xml:space="preserve">
          <source>To mark an existing item as &amp;ldquo;tempdata&amp;rdquo;, simply pass its key and expiry time (in seconds!) to the &lt;code&gt;mark_as_temp()&lt;/code&gt; method:</source>
          <target state="translated">기존 항목을 &quot;tempdata&quot;로 표시하려면 해당 키와 만료 시간 (초)을 &lt;code&gt;mark_as_temp()&lt;/code&gt; 메서드에 전달하면됩니다.</target>
        </trans-unit>
        <trans-unit id="05f184806259d8ab53bcd71c6b5951b36d9efce2" translate="yes" xml:space="preserve">
          <source>To meet this goal we are committed to benchmarking, re-factoring, and simplifying at every step of the development process, rejecting anything that doesn&amp;rsquo;t further the stated objective.</source>
          <target state="translated">이 목표를 달성하기 위해 개발 프로세스의 모든 단계에서 벤치마킹, 리팩토링 및 단순화를 수행하고 명시된 목표를 달성하지 못하는 것은 거부합니다.</target>
        </trans-unit>
        <trans-unit id="61e22aac9c45feb0565dbd4157f4de0176cdd0d1" translate="yes" xml:space="preserve">
          <source>To override default config values when connecting with a DSN string, add the config variables as a query string.</source>
          <target state="translated">DSN 문자열로 연결할 때 기본 구성 값을 대체하려면 구성 변수를 쿼리 문자열로 추가하십시오.</target>
        </trans-unit>
        <trans-unit id="230b99a270a4849c9561d9ae532b9efeb7f8e796" translate="yes" xml:space="preserve">
          <source>To provide a paginated list of users in your application, your controller&amp;rsquo;s method would look something like:</source>
          <target state="translated">애플리케이션에서 페이지가 매겨진 사용자 목록을 제공하기 위해 컨트롤러의 메서드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c7088aaf990fdf5d28e637820cff082d9df77b79" translate="yes" xml:space="preserve">
          <source>To provide information to be displayed in the Timeline you must:</source>
          <target state="translated">타임 라인에 표시 할 정보를 제공하려면 다음을 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="67a1ee6602e99b4067e830aeb2d9115d956bb53c" translate="yes" xml:space="preserve">
          <source>To read a tempdata variable, again you can just access it through the &lt;code&gt;$_SESSION&lt;/code&gt; superglobal array:</source>
          <target state="translated">tempdata 변수를 읽으려면 &lt;code&gt;$_SESSION&lt;/code&gt; superglobal array를 통해 변수에 액세스하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="b39dcb688aac20cd8f322cfa26b3564d306b8ec1" translate="yes" xml:space="preserve">
          <source>To reduce the amount of typing needed here, the &lt;strong&gt;group&lt;/strong&gt; routing feature is helpful:</source>
          <target state="translated">여기에 필요한 입력량을 줄이려면 &lt;strong&gt;그룹&lt;/strong&gt; 라우팅 기능이 유용합니다.</target>
        </trans-unit>
        <trans-unit id="d059c0781b84aacccae6efbfbb47fd8a30c5340f" translate="yes" xml:space="preserve">
          <source>To retrieve an item from your config file, use the following function:</source>
          <target state="translated">구성 파일에서 항목을 검색하려면 다음 기능을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="efd95b311b0b75f4030859a76cc741a55c7abaae" translate="yes" xml:space="preserve">
          <source>To return all GET items and pass them through the XSS filter set the first parameter NULL while setting the second parameter to boolean TRUE.</source>
          <target state="translated">모든 GET 항목을 리턴하고 XSS 필터를 통해 전달하려면 첫 번째 매개 변수 NULL을 설정하고 두 번째 매개 변수를 부울 TRUE로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="f1c1d1a694b0fbfb572e4e70a7f42b7ea31f7ea8" translate="yes" xml:space="preserve">
          <source>To return all POST items and pass them through the XSS filter set the first parameter NULL while setting the second parameter to boolean TRUE.</source>
          <target state="translated">모든 POST 항목을 리턴하고 XSS 필터를 통해 전달하려면 첫 번째 매개 변수를 NULL로 설정하고 두 번째 매개 변수를 부울 TRUE로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="73497e632d0852bdb46bdcfc0ac765cd8a3474a7" translate="yes" xml:space="preserve">
          <source>To return all POST items and pass them through the filter, set the first parameter to null while setting the second parameter to the filter you want to use:</source>
          <target state="translated">모든 POST 항목을 반환하고 필터를 통해 전달하려면 첫 번째 매개 변수를 null로 설정하고 두 번째 매개 변수를 사용하려는 필터로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="2343c3237bea3cb4c33cf9af98dad5cd1bc1a8ab" translate="yes" xml:space="preserve">
          <source>To return an array of all GET items call without any parameters.</source>
          <target state="translated">모든 GET 항목의 배열을 반환하려면 매개 변수없이 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="56df742417081d37a92e0de0b5197ca735ddf6ce" translate="yes" xml:space="preserve">
          <source>To return an array of all POST items call without any parameters.</source>
          <target state="translated">모든 POST 항목의 배열을 반환하려면 매개 변수없이 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="c1d41a1beb72693eef9cfc25ec9e632df78a244b" translate="yes" xml:space="preserve">
          <source>To return an array of multiple &lt;code&gt;$_ENV&lt;/code&gt; values, pass all the required keys as an array.</source>
          <target state="translated">여러 &lt;code&gt;$_ENV&lt;/code&gt; 값 의 배열을 반환하려면 필요한 모든 키를 배열로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="4c363c3b267a3e01806d0e6bb6dd4806569e6604" translate="yes" xml:space="preserve">
          <source>To return an array of multiple &lt;code&gt;$_SERVER&lt;/code&gt; values, pass all the required keys as an array.</source>
          <target state="translated">여러 &lt;code&gt;$_SERVER&lt;/code&gt; 값 의 배열을 반환하려면 필요한 모든 키를 배열로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="69efae6bf75ea8a4870c41644361850262eb2759" translate="yes" xml:space="preserve">
          <source>To return an array of multiple GET parameters, pass all the required keys as an array.</source>
          <target state="translated">여러 GET 매개 변수의 배열을 리턴하려면 필요한 모든 키를 배열로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="801af2225c4f4debde46d6d9a52edd08bcabec68" translate="yes" xml:space="preserve">
          <source>To return an array of multiple POST parameters, pass all the required keys as an array.</source>
          <target state="translated">여러 POST 매개 변수의 배열을 리턴하려면 필요한 모든 키를 배열로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="05256b902e7a5b4b24d0c17d8d7eaeecc43cd28c" translate="yes" xml:space="preserve">
          <source>To return an array of multiple POST parameters, pass all the required keys as an array:</source>
          <target state="translated">여러 POST 매개 변수의 배열을 반환하려면 필요한 모든 키를 배열로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="9363c2ef0dd71662cad8ed8d03538af916cf34e6" translate="yes" xml:space="preserve">
          <source>To return an array of multiple cookie values, pass all the required keys as an array.</source>
          <target state="translated">여러 쿠키 값의 배열을 반환하려면 필요한 모든 키를 배열로 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="fd76112bca01eddd69198cf6da4964d2e4e5a224" translate="yes" xml:space="preserve">
          <source>To return an array of multiple cookie values, pass all the required keys as an array:</source>
          <target state="translated">여러 쿠키 값의 배열을 반환하려면 필요한 모든 키를 배열로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="bd7d743d793e092bb31f5eb1c8bde740171caaba" translate="yes" xml:space="preserve">
          <source>To return one element from the array:</source>
          <target state="translated">배열에서 하나의 요소를 반환하려면</target>
        </trans-unit>
        <trans-unit id="a76125b09bf743626231b371738ac4a2ddda75ed" translate="yes" xml:space="preserve">
          <source>To run a full report of all tests, use this:</source>
          <target state="translated">모든 테스트에 대한 전체 보고서를 실행하려면 다음을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2913b00b62a2f6a8d937ea777385d7be3a674426" translate="yes" xml:space="preserve">
          <source>To run your queries using transactions you will use the $this-&amp;gt;db-&amp;gt;transStart() and $this-&amp;gt;db-&amp;gt;transComplete() functions as follows:</source>
          <target state="translated">트랜잭션을 사용하여 쿼리를 실행하려면 다음과 같이 $ this-&amp;gt; db-&amp;gt; transStart () 및 $ this-&amp;gt; db-&amp;gt; transComplete () 함수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="215370c0e563985db0a878b855dc5b861fcfba90" translate="yes" xml:space="preserve">
          <source>To run your queries using transactions you will use the $this-&amp;gt;db-&amp;gt;trans_start() and $this-&amp;gt;db-&amp;gt;trans_complete() functions as follows:</source>
          <target state="translated">트랜잭션을 사용하여 쿼리를 실행하려면 다음과 같이 $ this-&amp;gt; db-&amp;gt; trans_start () 및 $ this-&amp;gt; db-&amp;gt; trans_complete () 함수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="96ad8bb45e81ec5af3b734a960d4f798ade65578" translate="yes" xml:space="preserve">
          <source>To save on typing, you can reuse variables that you&amp;rsquo;ve already specified in the file by wrapping the variable name within &lt;code&gt;${...}&lt;/code&gt;</source>
          <target state="translated">입력을 절약하기 위해 &lt;code&gt;${...}&lt;/code&gt; 안에 변수 이름을 래핑하여 파일에 이미 지정한 변수를 재사용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="53104b13e17b16c28459011c4b7c1a91950e830c" translate="yes" xml:space="preserve">
          <source>To save your key to your &lt;em&gt;app/Config/Encryption.php&lt;/em&gt;, open the file and set:</source>
          <target state="translated">키를 &lt;em&gt;app / Config / Encryption.php에&lt;/em&gt; 저장하려면 파일을 열고 다음을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="b80651cd75f77ff598bc9299889f91c138ff5d26" translate="yes" xml:space="preserve">
          <source>To save your key to your &lt;em&gt;application/config/config.php&lt;/em&gt;, open the file and set:</source>
          <target state="translated">키를 &lt;em&gt;application / config / config.php에&lt;/em&gt; 저장하려면 파일을 열고 다음을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="2415272dc88e8cf7539d43878e859f25bc66837c" translate="yes" xml:space="preserve">
          <source>To save your key to your &lt;strong&gt;application/config/config.php&lt;/strong&gt;, open the file and set:</source>
          <target state="translated">키를 &lt;strong&gt;application / config / config.php에&lt;/strong&gt; 저장하려면 파일을 열고 다음을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="aed2a4cfcfee4765a07dda7b5e78485d64c8689e" translate="yes" xml:space="preserve">
          <source>To select a particular application for use requires that you open your main index.php file and set the &lt;code&gt;$application_folder&lt;/code&gt; variable. For example, to select the &amp;ldquo;foo&amp;rdquo; application for use you would do this:</source>
          <target state="translated">사용할 특정 응용 프로그램을 선택하려면 기본 index.php 파일을 열고 &lt;code&gt;$application_folder&lt;/code&gt; 변수를 설정해야 합니다. 예를 들어, &quot;foo&quot;응용 프로그램을 사용하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="9d751cbf7cd0e5d79418f7757d92f48d9d30a8c3" translate="yes" xml:space="preserve">
          <source>To send a request to an XML-RPC server you must specify the following information:</source>
          <target state="translated">XML-RPC 서버에 요청을 보내려면 다음 정보를 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="cf5667a626f9ac1eeeb0f8bef28f41a2553d9577" translate="yes" xml:space="preserve">
          <source>To set the HTTP protocol to use, you can pass a string or float with the version number (typically either 1.0 or 1.1, 2.0 is currently unsupported.):</source>
          <target state="translated">사용할 HTTP 프로토콜을 설정하려면 버전 번호와 함께 문자열 또는 부동 소수점을 전달할 수 있습니다 (일반적으로 1.0 또는 1.1, 2.0은 현재 지원되지 않음).</target>
        </trans-unit>
        <trans-unit id="7087daae4f1f1fb4aa68921530c0730ea216abfb" translate="yes" xml:space="preserve">
          <source>To set your own global custom message for a rule, you can either extend/override the language file by creating your own in &lt;strong&gt;application/language/english/form_validation_lang.php&lt;/strong&gt; (read more about this in the &lt;a href=&quot;language&quot;&gt;Language Class&lt;/a&gt; documentation), or use the following method:</source>
          <target state="translated">규칙에 대한 고유 한 글로벌 사용자 정의 메시지를 설정하려면 &lt;strong&gt;application / language / english / form_validation_lang.php&lt;/strong&gt; 에서 언어 파일을 작성하여 언어 파일을 확장 / 재정의하거나 ( &lt;a href=&quot;language&quot;&gt;언어 클래스&lt;/a&gt; 문서 에서 이에 대해 자세히 알아보십시오 ) 다음을 사용하십시오. 방법:</target>
        </trans-unit>
        <trans-unit id="50ba3ca58086a7e03f327bee7aea9a87c8d3de08" translate="yes" xml:space="preserve">
          <source>To set your own sub-class prefix, open your &lt;em&gt;application/config/config.php&lt;/em&gt; file and look for this item:</source>
          <target state="translated">자체 하위 클래스 접두사를 설정하려면 &lt;em&gt;application / config / config.php&lt;/em&gt; 파일을 &lt;em&gt;열고이&lt;/em&gt; 항목을 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="ba57732fe2f1b35cb4fa25d0a2441207f625e849" translate="yes" xml:space="preserve">
          <source>To simplify data checking, the controller also provides the convenience method &lt;code&gt;validate()&lt;/code&gt;. The method accepts an array of rules in the first parameter, and in the optional second parameter, an array of custom error messages to display if the items are not valid. Internally, this uses the controller&amp;rsquo;s &lt;strong&gt;$this-&amp;gt;request&lt;/strong&gt; instance to get the data to be validated. The &lt;a href=&quot;../libraries/validation&quot;&gt;Validation Library docs&lt;/a&gt; have details on rule and message array formats, as well as available rules.:</source>
          <target state="translated">데이터 검사를 단순화하기 위해 컨트롤러는 편리한 메서드 &lt;code&gt;validate()&lt;/code&gt; 도 제공합니다 . 이 메서드는 첫 번째 매개 변수에 규칙 배열을 허용하고 선택적인 두 번째 매개 변수에는 항목이 유효하지 않은 경우 표시 할 사용자 지정 오류 메시지 배열을 허용합니다. 내부적으로 이것은 컨트롤러의 &lt;strong&gt;$ this-&amp;gt; request&lt;/strong&gt; 인스턴스를 사용하여 유효성을 검사 할 데이터를 가져옵니다. &lt;a href=&quot;../libraries/validation&quot;&gt;검증 라이브러리 문서는&lt;/a&gt; 규칙 및 메시지 배열 형식에 대한 자세한 내용뿐만 아니라 가능한 규칙이 있습니다 :</target>
        </trans-unit>
        <trans-unit id="9235243c474e3cc7a5497a52b152acbcb4dc8708" translate="yes" xml:space="preserve">
          <source>To specify a default controller open your &lt;strong&gt;app/Config/Routes.php&lt;/strong&gt; file and set this variable:</source>
          <target state="translated">기본 컨트롤러를 지정하려면 &lt;strong&gt;app / Config / Routes.php&lt;/strong&gt; 파일을 열고 다음 변수를 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="114555a5552d835de06e773ac12ef94611f34dfe" translate="yes" xml:space="preserve">
          <source>To specify a different locale to be used when replacing parameters, you can pass the locale in as the third parameter to the &lt;code&gt;lang()&lt;/code&gt; method.</source>
          <target state="translated">매개 변수를 바꿀 때 사용할 다른 로케일을 지정하려면 로케일을 세 번째 매개 변수로 &lt;code&gt;lang()&lt;/code&gt; 메소드에 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b28380a2587b9e4370868515bc74f1c5d211b562" translate="yes" xml:space="preserve">
          <source>To specify the location of a PEM formatted client-side certificate, pass a string with the full path to the file as the &lt;code&gt;cert&lt;/code&gt; option. If a password is required, set the value to an array with the first element as the path to the certificate, and the second as the password:</source>
          <target state="translated">PEM 형식의 클라이언트 측 인증서 위치를 지정하려면 파일에 대한 전체 경로가 포함 된 문자열을 &lt;code&gt;cert&lt;/code&gt; 옵션으로 전달합니다. 암호가 필요한 경우 첫 번째 요소를 인증서 경로로, 두 번째 요소를 암호로 사용하여 값을 배열로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="8aa4b4da3be38cc86f8586a44da9ea7401752173" translate="yes" xml:space="preserve">
          <source>To spoof the method, a hidden input is added to the form with the name of &lt;code&gt;_method&lt;/code&gt;. It&amp;rsquo;s value is the HTTP verb that you want the request to be:</source>
          <target state="translated">메서드를 스푸핑하기 위해 숨겨진 입력이 &lt;code&gt;_method&lt;/code&gt; 라는 이름으로 양식에 추가됩니다 . 값은 요청을 원하는 HTTP 동사입니다.</target>
        </trans-unit>
        <trans-unit id="048aa6422f99aecc6ad38fc8dacb87d44cd4daaf" translate="yes" xml:space="preserve">
          <source>To store your validation rules, simply create a file named form_validation.php in your application/config/ folder. In that file you will place an array named $config with your rules. As shown earlier, the validation array will have this prototype:</source>
          <target state="translated">유효성 검사 규칙을 저장하려면 application / config / 폴더에 form_validation.php라는 파일을 만드십시오. 이 파일에서 규칙과 함께 $ config라는 배열을 배치합니다. 앞에서 보여준 것처럼 유효성 검사 배열에는 다음 프로토 타입이 있습니다.</target>
        </trans-unit>
        <trans-unit id="078139de6acd9bbcdf37a62f6f91c6b67548321f" translate="yes" xml:space="preserve">
          <source>To store your validation rules, simply create a new public property in the &lt;code&gt;Config\Validation&lt;/code&gt; class with the name of your group. This element will hold an array with your validation rules. As shown earlier, the validation array will have this prototype:</source>
          <target state="translated">유효성 검사 규칙을 저장하려면 그룹 이름으로 &lt;code&gt;Config\Validation&lt;/code&gt; 클래스 에 새 공용 속성을 생성하면 됩니다. 이 요소는 유효성 검사 규칙이있는 배열을 보유합니다. 앞서 살펴본 것처럼 유효성 검사 배열에는 다음과 같은 프로토 타입이 있습니다.</target>
        </trans-unit>
        <trans-unit id="0bcf04686ec4d0e30736d670e96249b611f6a6ad" translate="yes" xml:space="preserve">
          <source>To submit a query, use the &lt;strong&gt;query&lt;/strong&gt; function:</source>
          <target state="translated">조회를 제출하려면 &lt;strong&gt;조회&lt;/strong&gt; 기능을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6b9cbd45084cf381f3a680007d9751e68cb69b8a" translate="yes" xml:space="preserve">
          <source>To support the expanded range of HTML5 input fields, you can pass an input type in as the fourth parameter:</source>
          <target state="translated">확장 된 범위의 HTML5 입력 필드를 지원하기 위해 입력 유형을 네 번째 매개 변수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6fd6567737f13cc746012438abf4dda88ffb0462" translate="yes" xml:space="preserve">
          <source>To take a 50x50 pixel square out of the center of an image, you would need to first calculate the appropriate x and y offset values:</source>
          <target state="translated">이미지 중앙에서 50x50 픽셀 정사각형을 가져 오려면 먼저 적절한 x 및 y 오프셋 값을 계산해야합니다.</target>
        </trans-unit>
        <trans-unit id="11e52502d27ea402a23c4a5b92f6c63a17bcd887" translate="yes" xml:space="preserve">
          <source>To take advantage of CodeIgniter&amp;rsquo;s model, you would simply create a new model class that extends &lt;code&gt;CodeIgniter\Model&lt;/code&gt;:</source>
          <target state="translated">CodeIgniter의 모델을 활용하려면 &lt;code&gt;CodeIgniter\Model&lt;/code&gt; 을 확장하는 새 모델 클래스를 생성하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="8450a4f28cdf347fadfcef299a57bcf55605bff8" translate="yes" xml:space="preserve">
          <source>To take maximum advantage of the encryption algorithm, your key should be 32 characters in length (256 bits). The key should be as random a string as you can concoct, with numbers and uppercase and lowercase letters. Your key should &lt;strong&gt;not&lt;/strong&gt; be a simple text string. In order to be cryptographically secure it needs to be as random as possible.</source>
          <target state="translated">암호화 알고리즘을 최대한 활용하려면 키 길이는 32 자 (256 비트) 여야합니다. 키는 숫자와 대문자 및 소문자를 사용하여 문자열을 임의로 지정할 수 있습니다. 키는 단순한 텍스트 문자열 이 &lt;strong&gt;아니&lt;/strong&gt; 어야 합니다. 암호로 보안을 유지하려면 가능한 한 임의적이어야합니다.</target>
        </trans-unit>
        <trans-unit id="34943765a3b49032be7a6387d95129cb5af91788" translate="yes" xml:space="preserve">
          <source>To test a new library, &lt;strong&gt;Foo&lt;/strong&gt;, you would create a new file at &lt;strong&gt;tests/app/Libraries/FooTest.php&lt;/strong&gt;:</source>
          <target state="translated">새 라이브러리 &lt;strong&gt;Foo&lt;/strong&gt; 를 테스트하려면 &lt;strong&gt;tests / app / Libraries / FooTest.php에&lt;/strong&gt; 새 파일을 &lt;strong&gt;만듭니다&lt;/strong&gt; .</target>
        </trans-unit>
        <trans-unit id="77a18798a398a6e29a43948401448e395442a7c9" translate="yes" xml:space="preserve">
          <source>To test one of your models, you might end up with something like this in &lt;code&gt;tests/app/Models/OneOfMyModelsTest.php&lt;/code&gt;:</source>
          <target state="translated">모델 중 하나를 테스트하려면 &lt;code&gt;tests/app/Models/OneOfMyModelsTest.php&lt;/code&gt; 에서 다음과 같이 끝낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="31217910df272b1f25ece09faa304c39aefdc3a5" translate="yes" xml:space="preserve">
          <source>To this:</source>
          <target state="translated">이에:</target>
        </trans-unit>
        <trans-unit id="20f7efd9d4208125a8f3218259624ba0787f5633" translate="yes" xml:space="preserve">
          <source>To try your form, visit your site using a URL similar to this one:</source>
          <target state="translated">양식을 사용하려면 다음과 유사한 URL을 사용하여 사이트를 방문하십시오.</target>
        </trans-unit>
        <trans-unit id="2251bf613c488df10d616e83d00da2e18ddd461b" translate="yes" xml:space="preserve">
          <source>To update the information in your cart, you must pass an array containing the Row ID and one or more pre-defined properties to the &lt;code&gt;$this-&amp;gt;cart-&amp;gt;update()&lt;/code&gt; method.</source>
          <target state="translated">장바구니의 정보를 업데이트하려면 행 ID 및 하나 이상의 사전 정의 된 특성이 포함 된 배열을 &lt;code&gt;$this-&amp;gt;cart-&amp;gt;update()&lt;/code&gt; 메소드로 전달해야합니다.</target>
        </trans-unit>
        <trans-unit id="71dc004c10e3755b871a4a5af92628a988b05819" translate="yes" xml:space="preserve">
          <source>To use a driver you will initialize it within a controller using the following initialization method:</source>
          <target state="translated">드라이버를 사용하려면 다음 초기화 방법을 사용하여 컨트롤러 내에서 드라이버를 초기화합니다.</target>
        </trans-unit>
        <trans-unit id="20b1271420f2b23abd03892cb81cd269f92369ad" translate="yes" xml:space="preserve">
          <source>To use dashes instead of underscores:</source>
          <target state="translated">밑줄 대신 대시를 사용하려면</target>
        </trans-unit>
        <trans-unit id="e9bf4ac0effbe86b33a1000bcbd84c68699691fc" translate="yes" xml:space="preserve">
          <source>To use it, pass in the current step as the first parameter, and the total number of steps as the second parameter. The percent complete and the length of the display will be determined based on that number. When you are done, pass &lt;code&gt;false&lt;/code&gt; as the first parameter and the progress bar will be removed.</source>
          <target state="translated">이를 사용하려면 현재 단계를 첫 번째 매개 변수로 전달하고 총 단계 수를 두 번째 매개 변수로 전달하십시오. 완료율과 디스플레이 길이는 해당 숫자에 따라 결정됩니다. 완료되면 첫 번째 매개 변수로 &lt;code&gt;false&lt;/code&gt; 를 전달 하면 진행률 표시 줄이 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="440b37c6ae7f42a8cc85f402e41c60ceb84ef4d0" translate="yes" xml:space="preserve">
          <source>To use multiple separate calls to this function simply call the function with no arguments to re-initialize.</source>
          <target state="translated">이 함수에 대해 여러 개의 개별 호출을 사용하려면 인수없이 함수를 호출하여 다시 초기화하십시오.</target>
        </trans-unit>
        <trans-unit id="f9d182b3e93ddc4780c757f35887070be475eaa6" translate="yes" xml:space="preserve">
          <source>To use one of your own system classes instead of a default one simply place your version inside your local &lt;em&gt;application/core/&lt;/em&gt; directory:</source>
          <target state="translated">기본 클래스 대신 자체 시스템 클래스 중 하나를 사용하려면 버전을 로컬 &lt;em&gt;응용 프로그램 / 코어 /&lt;/em&gt; 디렉토리에 넣으십시오 .</target>
        </trans-unit>
        <trans-unit id="07876f7a0f153a819b900758f1cc93ea00f5efda" translate="yes" xml:space="preserve">
          <source>To use one of your own system classes instead of a default one, ensure that the &lt;a href=&quot;../concepts/autoloader&quot;&gt;Autoloader&lt;/a&gt; can find your class, that your new class extends the appropriate interface, and modify the appropriate &lt;a href=&quot;../concepts/services&quot;&gt;Service&lt;/a&gt; to load your class in place of the core class.</source>
          <target state="translated">기본 클래스 대신 자체 시스템 클래스 중 하나를 사용하려면 &lt;a href=&quot;../concepts/autoloader&quot;&gt;Autoloader&lt;/a&gt; 가 클래스를 찾을 수 있는지, 새 클래스가 적절한 인터페이스를 확장 하는지 확인하고 , 코어 클래스 대신 클래스를로드 하도록 적절한 &lt;a href=&quot;../concepts/services&quot;&gt;서비스&lt;/a&gt; 를 수정하십시오 .</target>
        </trans-unit>
        <trans-unit id="dd85e4c082434e3ca6bf39cd3f2834bb1998c95c" translate="yes" xml:space="preserve">
          <source>To use the default disposition (attachment), leave the second parameter blank, otherwise use a custom disposition:</source>
          <target state="translated">기본 처리 (첨부 파일)를 사용하려면 두 번째 매개 변수를 비워 두십시오. 그렇지 않으면 사용자 지정 처리를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8f78997ceda177c047dc5360df519ceef8d8841f" translate="yes" xml:space="preserve">
          <source>To use translated strings from language files, we can simply use the dot syntax. Let&amp;rsquo;s say we have a file with translations located here: &lt;code&gt;app/Languages/en/Rules.php&lt;/code&gt;. We can simply use the language lines defined in this file, like this:</source>
          <target state="translated">언어 파일에서 번역 된 문자열을 사용하려면 도트 구문을 사용하면됩니다. 여기에 번역 된 파일이 있다고 가정 해 봅시다 : &lt;code&gt;app/Languages/en/Rules.php&lt;/code&gt; . 다음과 같이이 파일에 정의 된 언어 행을 간단히 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="be467014bccb50770454281a1900b48bab4074b7" translate="yes" xml:space="preserve">
          <source>Tokens may be either regenerated on every submission (default) or kept the same throughout the life of the CSRF cookie. The default regeneration of tokens provides stricter security, but may result in usability concerns as other tokens become invalid (back/forward navigation, multiple tabs/windows, asynchronous actions, etc). You may alter this behavior by editing the following config parameter</source>
          <target state="translated">토큰은 제출할 때마다 재생성되거나 (기본값) CSRF 쿠키 수명 동안 동일하게 유지 될 수 있습니다. 토큰의 기본 재생성은보다 강력한 보안을 제공하지만 다른 토큰 (뒤로 / 앞으로 탐색, 여러 탭 / 창, 비동기 작업 등)이 유효하지 않게되면 사용성 문제가 발생할 수 있습니다. 다음 구성 매개 변수를 편집하여이 동작을 변경할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="70ce76540703374ac5a19ce965e18d19f9155431" translate="yes" xml:space="preserve">
          <source>Tomorrow / Yesterday</source>
          <target state="translated">내일 / 어제</target>
        </trans-unit>
        <trans-unit id="212af41073666530ad8bf245becce259a0964242" translate="yes" xml:space="preserve">
          <source>Toolbar</source>
          <target state="translated">Toolbar</target>
        </trans-unit>
        <trans-unit id="c03c6b0ee1534a426d38e98bd832050266fac41f" translate="yes" xml:space="preserve">
          <source>Toolbar #1370, #1465, #1469, #1547</source>
          <target state="translated">도구 모음 # 1370, # 1465, # 1469, # 1547</target>
        </trans-unit>
        <trans-unit id="0266fb914d0cd96011082b9ad88f460d920fa53c" translate="yes" xml:space="preserve">
          <source>Toolbar #1571</source>
          <target state="translated">툴바 # 1571</target>
        </trans-unit>
        <trans-unit id="d4981a57317595faa7aa07a348dab4e307819140" translate="yes" xml:space="preserve">
          <source>Toolbar #1571, #1579</source>
          <target state="translated">도구 모음 # 1571, # 1579</target>
        </trans-unit>
        <trans-unit id="adfbe4a99b47e1c600e7e804da519ff0d842bf7c" translate="yes" xml:space="preserve">
          <source>Toolbar #1897</source>
          <target state="translated">툴바 # 1897</target>
        </trans-unit>
        <trans-unit id="687cf625678aa1059083f4f67f7bc1b8b4b77587" translate="yes" xml:space="preserve">
          <source>Toolbar #1916</source>
          <target state="translated">툴바 # 1916</target>
        </trans-unit>
        <trans-unit id="66a616c6ee14088a2c177a75842fdba9a9de289b" translate="yes" xml:space="preserve">
          <source>Toolbar #2118</source>
          <target state="translated">툴바 # 2118</target>
        </trans-unit>
        <trans-unit id="2c920440c9bf258429fbb4c9b1cc8b16da426abb" translate="yes" xml:space="preserve">
          <source>Toolbar #2315</source>
          <target state="translated">툴바 # 2315</target>
        </trans-unit>
        <trans-unit id="1853e098d71163cf7ccdcdec29ddc879692c50e7" translate="yes" xml:space="preserve">
          <source>Toolbar/Collectors/</source>
          <target state="translated">Toolbar/Collectors/</target>
        </trans-unit>
        <trans-unit id="37ebc3a0e8808320f53d752f28ab37008c921d7c" translate="yes" xml:space="preserve">
          <source>Toolbar/Collectors/History #1869</source>
          <target state="translated">도구 모음 / 수집기 / 역사 # 1869</target>
        </trans-unit>
        <trans-unit id="985a34c7dad167387b48a7668961e831893186d9" translate="yes" xml:space="preserve">
          <source>Toolbar/Collectors/Routes #2030</source>
          <target state="translated">도구 모음 / 수집기 / 경로 # 2030</target>
        </trans-unit>
        <trans-unit id="2ff018c229f54ebf8bf1ebab4d2e5ba7506b3230" translate="yes" xml:space="preserve">
          <source>Toolbar/Views/</source>
          <target state="translated">Toolbar/Views/</target>
        </trans-unit>
        <trans-unit id="e14f1264b28ac55b79745a090d7ce6fe8313ea9c" translate="yes" xml:space="preserve">
          <source>Toolbar/Views/toolbar.tpl #1469</source>
          <target state="translated">Toolbar / Views / toolbar.tpl # 1469</target>
        </trans-unit>
        <trans-unit id="c1ed4a16a573be24aa34c025484a45c43385cb0a" translate="yes" xml:space="preserve">
          <source>Total amount</source>
          <target state="translated">총액</target>
        </trans-unit>
        <trans-unit id="b2c5e972c0053afac7e6192afe9f5d923747e185" translate="yes" xml:space="preserve">
          <source>Total amount of items in the cart</source>
          <target state="translated">장바구니에있는 총 품목</target>
        </trans-unit>
        <trans-unit id="611f1035c2d27d11898fc4c2a1f710ad114fc143" translate="yes" xml:space="preserve">
          <source>Total days in a given month:</source>
          <target state="translated">주어진 달의 총 일수 :</target>
        </trans-unit>
        <trans-unit id="5af73c26ab240c5b11cec379360d2d93cc8d561a" translate="yes" xml:space="preserve">
          <source>Trackback</source>
          <target state="translated">Trackback</target>
        </trans-unit>
        <trans-unit id="206372d0fad09b546577d52b8b2077104732b3dc" translate="yes" xml:space="preserve">
          <source>Trackback Class</source>
          <target state="translated">트랙백 클래스</target>
        </trans-unit>
        <trans-unit id="d2c57c8b0ad4920fa381b592915a72f74c3a7008" translate="yes" xml:space="preserve">
          <source>Trackback data array.</source>
          <target state="translated">트랙백 데이터 배열.</target>
        </trans-unit>
        <trans-unit id="c763094ce2613ef8297571deee3d42fcddd01331" translate="yes" xml:space="preserve">
          <source>Traditionally, transactions have required a fair amount of work to implement since they demand that you keep track of your queries and determine whether to commit or rollback based on the success or failure of your queries. This is particularly cumbersome with nested queries. In contrast, we&amp;rsquo;ve implemented a smart transaction system that does all this for you automatically (you can also manage your transactions manually if you choose to, but there&amp;rsquo;s really no benefit).</source>
          <target state="translated">일반적으로 트랜잭션은 쿼리를 추적하고 쿼리의 성공 또는 실패를 기반으로 커밋 또는 롤백 여부를 결정해야하므로 상당한 양의 작업이 필요했습니다. 중첩 쿼리에서는 특히 번거 롭습니다. 대조적으로, 우리는 당신을 위해이 모든 것을 자동으로 수행하는 스마트 트랜잭션 시스템을 구현했습니다 (원하는 경우 수동으로 트랜잭션을 관리 할 수도 있지만 실제로는 아무런 이점이 없습니다).</target>
        </trans-unit>
        <trans-unit id="1e3281a962e6db2e54e787f796eb7d2b1582389a" translate="yes" xml:space="preserve">
          <source>Transactions</source>
          <target state="translated">Transactions</target>
        </trans-unit>
        <trans-unit id="ec18fb2dd6d4af64a7ff70bd174fd36300439d6c" translate="yes" xml:space="preserve">
          <source>Transactions are enabled by default. If you would like to disable transactions you can do so using $this-&amp;gt;db-&amp;gt;transOff():</source>
          <target state="translated">트랜잭션은 기본적으로 활성화되어 있습니다. 트랜잭션을 비활성화하려면 $ this-&amp;gt; db-&amp;gt; transOff ()를 사용하면됩니다.</target>
        </trans-unit>
        <trans-unit id="0c51240cff633e0ec499fef3522f82f1b11f3be3" translate="yes" xml:space="preserve">
          <source>Translate URI Dashes</source>
          <target state="translated">URI 대시 번역</target>
        </trans-unit>
        <trans-unit id="b3b643ce61402fb9c720872d5e923130d4084473" translate="yes" xml:space="preserve">
          <source>Translates a database result object into a CSV document.</source>
          <target state="translated">데이터베이스 결과 개체를 CSV 문서로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="470edac2db6406d98cfb35b19f6f03f7dd8139fb" translate="yes" xml:space="preserve">
          <source>Translates a database result object into an XML document.</source>
          <target state="translated">데이터베이스 결과 개체를 XML 문서로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="a98b16b49db911022ec623d5705489edd17d5b21" translate="yes" xml:space="preserve">
          <source>Translates a filename extension into a MIME type based on &lt;em&gt;config/mimes.php&lt;/em&gt;. Returns FALSE if it can&amp;rsquo;t determine the type, or read the MIME config file.</source>
          <target state="translated">&lt;em&gt;config / mimes.php를&lt;/em&gt; 기반으로 파일 이름 확장자를 MIME 유형으로 &lt;em&gt;변환&lt;/em&gt; 합니다. 유형을 판별 할 수 없거나 MIME 구성 파일을 읽을 수 없으면 FALSE를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="31bbc262f5a73f7c5bb07a98898bd1b56e7b4cb8" translate="yes" xml:space="preserve">
          <source>Translating Field Names</source>
          <target state="translated">필드 이름 번역</target>
        </trans-unit>
        <trans-unit id="da5ae2862f93a5e958c97bc557c41f55e3045a7d" translate="yes" xml:space="preserve">
          <source>Translation Of Messages And Validation Labels</source>
          <target state="translated">메시지 및 유효성 검사 레이블 번역</target>
        </trans-unit>
        <trans-unit id="218a178c6963075949b75d9569c5589d81506037" translate="yes" xml:space="preserve">
          <source>Translations Installation</source>
          <target state="translated">번역 설치</target>
        </trans-unit>
        <trans-unit id="a5354e7d60652bbc5daeb57156d6b33a5b499de7" translate="yes" xml:space="preserve">
          <source>Transliterates high ASCII characters to low ASCII equivalents. Useful when non-English characters need to be used where only standard ASCII characters are safely used, for instance, in URLs.</source>
          <target state="translated">높은 ASCII 문자를 낮은 ASCII 문자로 음역합니다. URL과 같이 표준 ASCII 문자 만 안전하게 사용하는 경우 영어 이외의 문자를 사용해야하는 경우에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="502368759208a093ced5b3ed9f3d6a7571a4407f" translate="yes" xml:space="preserve">
          <source>Treating Environment Variables as Arrays</source>
          <target state="translated">환경 변수를 배열로 취급</target>
        </trans-unit>
        <trans-unit id="a7be57216432f93fd2d2eba52c6ddace156510b8" translate="yes" xml:space="preserve">
          <source>Tries to remove XSS exploits from the input data and returns the cleaned string. If the optional second parameter is set to true, it will return boolean TRUE if the image is safe to use and FALSE if malicious data was detected in it.</source>
          <target state="translated">입력 데이터에서 XSS 익스플로잇을 제거하려고 시도하고 정리 된 문자열을 리턴합니다. 선택적 두 번째 매개 변수가 true로 설정되면 이미지를 안전하게 사용할 수 있으면 부울 TRUE를, 악성 데이터가 탐지되면 FALSE를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="67a0e83840b901372d3262df92c3945f4d7d5750" translate="yes" xml:space="preserve">
          <source>Tries to sanitize filenames in order to prevent directory traversal attempts and other security threats, which is particularly useful for files that were supplied via user input.</source>
          <target state="translated">디렉토리 탐색 시도 및 기타 보안 위협을 방지하기 위해 파일 이름을 삭제하려고 시도합니다. 이는 사용자 입력을 통해 제공된 파일에 특히 유용합니다.</target>
        </trans-unit>
        <trans-unit id="a7e9c4d6c055adac597d6e28bbee55ada6a9a7e9" translate="yes" xml:space="preserve">
          <source>Tries to sanitize filenames in order to prevent directory traversal attempts and other security threats, which is particularly useful for files that were supplied via user input. The first parameter is the path to sanitize.</source>
          <target state="translated">특히 사용자 입력을 통해 제공된 파일에 유용한 디렉터리 탐색 시도 및 기타 보안 위협을 방지하기 위해 파일 이름을 삭제하려고합니다. 첫 번째 매개 변수는 삭제 경로입니다.</target>
        </trans-unit>
        <trans-unit id="2113842ae751cfd206ba143b55ba46a421a7e07f" translate="yes" xml:space="preserve">
          <source>TripleDES</source>
          <target state="translated">TripleDES</target>
        </trans-unit>
        <trans-unit id="285ec850c11d78bac10f6bfa31b69a37f1b257c9" translate="yes" xml:space="preserve">
          <source>Troubleshooting</source>
          <target state="translated">Troubleshooting</target>
        </trans-unit>
        <trans-unit id="b8c691e8e1e3476fa10320ead8903922e1d94bb8" translate="yes" xml:space="preserve">
          <source>True if the request is an AJAX request, otherwise false.</source>
          <target state="translated">요청이 AJAX 요청이면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="ded27fb9c8ef961e61ec0351486e18003ed18af0" translate="yes" xml:space="preserve">
          <source>True if the request is an HTTPS request, otherwise false.</source>
          <target state="translated">요청이 HTTPS 요청이면 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="23345119072d9a55366c6fa8c2e96543424f54c9" translate="yes" xml:space="preserve">
          <source>True if the request was initiated from the command line, otherwise false.</source>
          <target state="translated">요청이 명령 줄에서 시작된 경우 true이고, 그렇지 않으면 false입니다.</target>
        </trans-unit>
        <trans-unit id="949dd0171ac36142d2ad67a8f5f2409b6209a2c9" translate="yes" xml:space="preserve">
          <source>Truly light weight. The core system requires only a few very small libraries. This is in stark contrast to many frameworks that require significantly more resources. Additional libraries are loaded dynamically upon request, based on your needs for a given process, so the base system is very lean and quite fast.</source>
          <target state="translated">정말 가벼운 무게. 핵심 시스템에는 아주 작은 라이브러리가 필요합니다. 이는 훨씬 더 많은 리소스가 필요한 많은 프레임 워크와 완전히 대조적입니다. 주어진 프로세스에 대한 요구 사항에 따라 요청에 따라 추가 라이브러리가 동적으로로드되므로 기본 시스템이 매우 간결하고 매우 빠릅니다.</target>
        </trans-unit>
        <trans-unit id="34ba2b4f09a2291adbdb81b56dc474bfb0ffe90d" translate="yes" xml:space="preserve">
          <source>TruncateTest #2269</source>
          <target state="translated">TruncateTest # 2269</target>
        </trans-unit>
        <trans-unit id="5b5fce4b2e2d541839e5da2a7b2a766240d5b092" translate="yes" xml:space="preserve">
          <source>Truncates a string to the number of &lt;em&gt;characters&lt;/em&gt; specified. It maintains the integrity of words so the character count may be slightly more or less than what you specify.</source>
          <target state="translated">문자열을 지정된 &lt;em&gt;문자&lt;/em&gt; 수로 자릅니다 . 단어의 무결성을 유지하므로 문자 수가 사용자가 지정한 것보다 약간 많거나 적을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="172c9ec8b8d29c4585668e2a11c5c7ef9b36d716" translate="yes" xml:space="preserve">
          <source>Truncates a string to the number of &lt;em&gt;words&lt;/em&gt; specified. Example:</source>
          <target state="translated">문자열을 지정된 &lt;em&gt;단어&lt;/em&gt; 수만큼 자릅니다 . 예:</target>
        </trans-unit>
        <trans-unit id="dcd8279e0e524f10da4c57a53281a9c7c4809a1f" translate="yes" xml:space="preserve">
          <source>Try it!</source>
          <target state="translated">시도 해봐!</target>
        </trans-unit>
        <trans-unit id="fe32a2c6009f26016d88f63789bf7488f0cdb2d4" translate="yes" xml:space="preserve">
          <source>Try it! Change your form so that it looks like this:</source>
          <target state="translated">시도 해봐! 다음과 같이 양식을 변경하십시오.</target>
        </trans-unit>
        <trans-unit id="d9e3eb97523e64ebb614c163814f7aadeb0cd718" translate="yes" xml:space="preserve">
          <source>Trying to access it via the URL, like this, will not work:</source>
          <target state="translated">다음과 같이 URL을 통해 액세스하려고하면 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ab4bb8abf540533e8fd29da3e916fa5f11862f3e" translate="yes" xml:space="preserve">
          <source>Turning CSP On</source>
          <target state="translated">CSP 켜기</target>
        </trans-unit>
        <trans-unit id="8656cc46f8627c18baf125f12d8d9e0b6328be33" translate="yes" xml:space="preserve">
          <source>Turns a number into an ordinal string used to denote the position such as 1st, 2nd, 3rd, 4th. Example:</source>
          <target state="translated">숫자를 1st, 2nd, 3rd, 4th와 같이 위치를 나타내는 데 사용되는 서수 문자열로 바꿉니다. 예:</target>
        </trans-unit>
        <trans-unit id="2701a94c0eb55cbd958a87dff3e959673ff1bf53" translate="yes" xml:space="preserve">
          <source>Tutorial</source>
          <target state="translated">Tutorial</target>
        </trans-unit>
        <trans-unit id="eb712244cd687158cef28dff7412e8d54b9323ec" translate="yes" xml:space="preserve">
          <source>Two Types of Watermarking</source>
          <target state="translated">워터 마킹의 두 가지 유형</target>
        </trans-unit>
        <trans-unit id="6c5488f821ebd9c8357c6d07a6d5c599bbaa54be" translate="yes" xml:space="preserve">
          <source>Two functions have been provided for getting a service. These functions are always available.</source>
          <target state="translated">서비스를 받기 위해 두 가지 기능이 제공되었습니다. 이러한 기능은 항상 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac455e683ce819af510e79d8fded9575b0067e53" translate="yes" xml:space="preserve">
          <source>Twofish</source>
          <target state="translated">Twofish</target>
        </trans-unit>
        <trans-unit id="5fe0bce24255ed4495ccae4da5b86502f67417e6" translate="yes" xml:space="preserve">
          <source>Type hinting added throughout &amp;amp; typos corrected (see API docs)</source>
          <target state="translated">전체에 추가 된 유형 힌트 및 오타 수정 (API 문서 참조)</target>
        </trans-unit>
        <trans-unit id="6fa84a7789b919dfe6ededa257ac386dfcbcbfc6" translate="yes" xml:space="preserve">
          <source>Type of mail. If you send HTML email you must send it as a complete web page. Make sure you don&amp;rsquo;t have any relative links or relative image paths otherwise they will not work.</source>
          <target state="translated">메일 유형. HTML 이메일을 보내려면 완전한 웹 페이지로 보내야합니다. 상대 링크 또는 상대 이미지 경로가 없는지 확인하십시오. 그렇지 않으면 작동하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4df3f12cf3747096233e186b2dde028ed9c4e88a" translate="yes" xml:space="preserve">
          <source>Type of newline to use in your SQL export file.</source>
          <target state="translated">SQL 내보내기 파일에서 사용할 줄 바꾸기의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="2017f61c9ac97100fcad3e843a88342238c21565" translate="yes" xml:space="preserve">
          <source>Typically there is a one-to-one relationship between a URL string and its corresponding controller class/method. The segments in a URI normally follow this pattern:</source>
          <target state="translated">일반적으로 URL 문자열과 해당 컨트롤러 클래스 / 방법 사이에는 일대일 관계가 있습니다. URI의 세그먼트는 일반적으로 다음 패턴을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="297bfd20779c70f1f3557c35a878039fb83acf29" translate="yes" xml:space="preserve">
          <source>Typically, you replace the &lt;code&gt;system&lt;/code&gt; folder, and check designated &lt;code&gt;app/Config&lt;/code&gt; folders for affected changes.</source>
          <target state="translated">일반적으로 &lt;code&gt;system&lt;/code&gt; 폴더 를 교체하고 지정된 &lt;code&gt;app/Config&lt;/code&gt; 폴더에서 영향을받는 변경 사항을 확인합니다.</target>
        </trans-unit>
        <trans-unit id="28c91de53d6ae8c5be69566fdf2e3ebea7fccb73" translate="yes" xml:space="preserve">
          <source>Typographic formatting can be processor intensive, particularly if you have a lot of content being formatted. If you choose to use this function you may want to consider &lt;a href=&quot;../general/caching&quot;&gt;caching&lt;/a&gt; your pages.</source>
          <target state="translated">활자체 형식은 특히 많은 내용을 형식화하는 경우 프로세서를 많이 사용합니다. 이 기능을 사용하기로 선택한 경우 페이지 &lt;a href=&quot;../general/caching&quot;&gt;캐싱&lt;/a&gt; 을 고려할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2f8d5bacad5ee6ee5b3bba8015ce2ed0521f40f0" translate="yes" xml:space="preserve">
          <source>Typographic formatting can be processor intensive, particularly if you have a lot of content being formatted. If you choose to use this method you may want to consider &lt;a href=&quot;../general/caching&quot;&gt;caching&lt;/a&gt; your pages.</source>
          <target state="translated">활자체 형식은 특히 많은 내용을 형식화하는 경우 프로세서를 많이 사용합니다. 이 방법을 사용하기로 선택한 경우 페이지 &lt;a href=&quot;../general/caching&quot;&gt;캐싱&lt;/a&gt; 을 고려할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f4beb9af58f792082d8857ce30b4be1bdbe9b57a" translate="yes" xml:space="preserve">
          <source>Typography</source>
          <target state="translated">Typography</target>
        </trans-unit>
        <trans-unit id="17e6cbc6766b3f18c8f7a1c9a3044778a4c402a5" translate="yes" xml:space="preserve">
          <source>Typography Class</source>
          <target state="translated">타이포그래피 클래스</target>
        </trans-unit>
        <trans-unit id="5ce5736e147fc2973d75bb6958616103715701e6" translate="yes" xml:space="preserve">
          <source>Typography Helper</source>
          <target state="translated">타이포그래피 도우미</target>
        </trans-unit>
        <trans-unit id="707ad96af376e9682ae919828e0992ed3db428e5" translate="yes" xml:space="preserve">
          <source>UM1</source>
          <target state="translated">UM1</target>
        </trans-unit>
        <trans-unit id="1537690e529916d904d1aa8793a45ea8cc95fca3" translate="yes" xml:space="preserve">
          <source>UM10</source>
          <target state="translated">UM10</target>
        </trans-unit>
        <trans-unit id="8b31aa763862316ded7ac0798f646ca211551106" translate="yes" xml:space="preserve">
          <source>UM11</source>
          <target state="translated">UM11</target>
        </trans-unit>
        <trans-unit id="3bfb9cdee970f6b0e21a160eb03a8c11941fb8cb" translate="yes" xml:space="preserve">
          <source>UM12</source>
          <target state="translated">UM12</target>
        </trans-unit>
        <trans-unit id="2e9bef7e40f7ffe0076389587869ea7df040c3d8" translate="yes" xml:space="preserve">
          <source>UM2</source>
          <target state="translated">UM2</target>
        </trans-unit>
        <trans-unit id="d6f020385cf67fae59c2bc707887d086fd77444b" translate="yes" xml:space="preserve">
          <source>UM3</source>
          <target state="translated">UM3</target>
        </trans-unit>
        <trans-unit id="f29c4d1e98ee767ac6ee00883ed7e20a09832373" translate="yes" xml:space="preserve">
          <source>UM35</source>
          <target state="translated">UM35</target>
        </trans-unit>
        <trans-unit id="79d232632cb0b71d1244479ace6b186b5e054fbe" translate="yes" xml:space="preserve">
          <source>UM4</source>
          <target state="translated">UM4</target>
        </trans-unit>
        <trans-unit id="cba30dc71e5aa5cda397e6800ccc01ca3117919d" translate="yes" xml:space="preserve">
          <source>UM45</source>
          <target state="translated">UM45</target>
        </trans-unit>
        <trans-unit id="dce4722e5af626c5563bbd4d1e26649107550e3d" translate="yes" xml:space="preserve">
          <source>UM5</source>
          <target state="translated">UM5</target>
        </trans-unit>
        <trans-unit id="c4df2f2f1077801c815443115fbe11535b209238" translate="yes" xml:space="preserve">
          <source>UM6</source>
          <target state="translated">UM6</target>
        </trans-unit>
        <trans-unit id="df580f19bd9856089bb70f03b174edff42bda395" translate="yes" xml:space="preserve">
          <source>UM7</source>
          <target state="translated">UM7</target>
        </trans-unit>
        <trans-unit id="b1cb4a871a465f16e91f6ba71409adc5210aa8c1" translate="yes" xml:space="preserve">
          <source>UM8</source>
          <target state="translated">UM8</target>
        </trans-unit>
        <trans-unit id="17044e1c73b9460d41e3d141d97226a7ac2f288a" translate="yes" xml:space="preserve">
          <source>UM9</source>
          <target state="translated">UM9</target>
        </trans-unit>
        <trans-unit id="9ea48ea016c856d4525297a818b1007ad7f01b35" translate="yes" xml:space="preserve">
          <source>UM95</source>
          <target state="translated">UM95</target>
        </trans-unit>
        <trans-unit id="8e96533585d50206f04752dbd1f9636d2e235176" translate="yes" xml:space="preserve">
          <source>UNIX timestamp</source>
          <target state="translated">유닉스 타임 스탬프</target>
        </trans-unit>
        <trans-unit id="b6ceac5498d5ee31082873b30037712be6d1cf65" translate="yes" xml:space="preserve">
          <source>UNIX timestamp or FALSE on failure</source>
          <target state="translated">실패시 UNIX 타임 스탬프 또는 FALSE</target>
        </trans-unit>
        <trans-unit id="0b24d23882c9b49ab4fe98069e6c633c352e1902" translate="yes" xml:space="preserve">
          <source>UP1</source>
          <target state="translated">UP1</target>
        </trans-unit>
        <trans-unit id="f3381da8c55885216bfcae61fd21d7d22b4a4cfc" translate="yes" xml:space="preserve">
          <source>UP10</source>
          <target state="translated">UP10</target>
        </trans-unit>
        <trans-unit id="2ff9bd5af4e3be15781ae67b6a25669c02ed3f4c" translate="yes" xml:space="preserve">
          <source>UP105</source>
          <target state="translated">UP105</target>
        </trans-unit>
        <trans-unit id="b9738076b0580509ff181cd4581c62aa30270297" translate="yes" xml:space="preserve">
          <source>UP11</source>
          <target state="translated">UP11</target>
        </trans-unit>
        <trans-unit id="9909877c5460ef9c141f9bc27495ee9077e914c1" translate="yes" xml:space="preserve">
          <source>UP115</source>
          <target state="translated">UP115</target>
        </trans-unit>
        <trans-unit id="a64483ea66b4b50d104a4f995ab8cbc82ea1b66d" translate="yes" xml:space="preserve">
          <source>UP12</source>
          <target state="translated">UP12</target>
        </trans-unit>
        <trans-unit id="23e845acd2403ef2bb0ea7b91b68c70cf64211a4" translate="yes" xml:space="preserve">
          <source>UP1275</source>
          <target state="translated">UP1275</target>
        </trans-unit>
        <trans-unit id="694dc1d7623656a28b6823b484173726ad154e04" translate="yes" xml:space="preserve">
          <source>UP13</source>
          <target state="translated">UP13</target>
        </trans-unit>
        <trans-unit id="7a14a4d9aa9a909acffeeb28c0f8448df9f339f7" translate="yes" xml:space="preserve">
          <source>UP14</source>
          <target state="translated">UP14</target>
        </trans-unit>
        <trans-unit id="4d8cb5e12d3105ad2c59f9de363d614e7bde5715" translate="yes" xml:space="preserve">
          <source>UP2</source>
          <target state="translated">UP2</target>
        </trans-unit>
        <trans-unit id="c13a3399c273f02ae9c0c5d2f1b3c1b6b623e5c1" translate="yes" xml:space="preserve">
          <source>UP3</source>
          <target state="translated">UP3</target>
        </trans-unit>
        <trans-unit id="a510c244214779fe21c432520b8ccb5201b126bf" translate="yes" xml:space="preserve">
          <source>UP35</source>
          <target state="translated">UP35</target>
        </trans-unit>
        <trans-unit id="5ecfee817176f2a6c02480b676af2da3422a25b9" translate="yes" xml:space="preserve">
          <source>UP4</source>
          <target state="translated">UP4</target>
        </trans-unit>
        <trans-unit id="f6b14d8029b19d86787e94f1f79a362db9869e81" translate="yes" xml:space="preserve">
          <source>UP45</source>
          <target state="translated">UP45</target>
        </trans-unit>
        <trans-unit id="5e4b3618f2c79ed72e357a05ce96d7f1d48af9ac" translate="yes" xml:space="preserve">
          <source>UP5</source>
          <target state="translated">UP5</target>
        </trans-unit>
        <trans-unit id="8385a10b0fccf536daf97db1c290d51222e4cfc2" translate="yes" xml:space="preserve">
          <source>UP55</source>
          <target state="translated">UP55</target>
        </trans-unit>
        <trans-unit id="5bf6abcba927b396c6970f5f1a18ed42f49a329d" translate="yes" xml:space="preserve">
          <source>UP575</source>
          <target state="translated">UP575</target>
        </trans-unit>
        <trans-unit id="0b7651555fdc6d7c84d58978f2efdbaa82e3677c" translate="yes" xml:space="preserve">
          <source>UP6</source>
          <target state="translated">UP6</target>
        </trans-unit>
        <trans-unit id="d0e0a69a6f489d5c725de3cb0c929a1bee918517" translate="yes" xml:space="preserve">
          <source>UP65</source>
          <target state="translated">UP65</target>
        </trans-unit>
        <trans-unit id="312d146ba525fd67137c6558021e61f9e16147ba" translate="yes" xml:space="preserve">
          <source>UP7</source>
          <target state="translated">UP7</target>
        </trans-unit>
        <trans-unit id="b988cbab57ab6c5f52da6f0ae164e490a3dc959c" translate="yes" xml:space="preserve">
          <source>UP8</source>
          <target state="translated">UP8</target>
        </trans-unit>
        <trans-unit id="cb3f5edc1c6cd6b98e2d79fd2a0243b640e2d8b8" translate="yes" xml:space="preserve">
          <source>UP875</source>
          <target state="translated">UP875</target>
        </trans-unit>
        <trans-unit id="55e1b87d7a1dc9595970c33d22f2aed0bc05851f" translate="yes" xml:space="preserve">
          <source>UP9</source>
          <target state="translated">UP9</target>
        </trans-unit>
        <trans-unit id="3791cc2a2a3567ddec176842315e0ee6801bac37" translate="yes" xml:space="preserve">
          <source>UP95</source>
          <target state="translated">UP95</target>
        </trans-unit>
        <trans-unit id="cb371c93c5aa0e62198efd303ae2c17474416d1a" translate="yes" xml:space="preserve">
          <source>URI</source>
          <target state="translated">URI</target>
        </trans-unit>
        <trans-unit id="d90eb81be19c3216bc4ea7d78f315eaace1eef0c" translate="yes" xml:space="preserve">
          <source>URI #1213, #1469, #1508</source>
          <target state="translated">URI # 1213, # 1469, # 1508</target>
        </trans-unit>
        <trans-unit id="01078c7b3808a890c065a16a7863ea71d2845ebd" translate="yes" xml:space="preserve">
          <source>URI #1300</source>
          <target state="translated">URI # 1300</target>
        </trans-unit>
        <trans-unit id="e945f3c882ac98017e4f82cfe7981cf02e60f3c5" translate="yes" xml:space="preserve">
          <source>URI #2e698a</source>
          <target state="translated">URI # 2e698a</target>
        </trans-unit>
        <trans-unit id="7db40df52df75c033de03085309e7907f5c05a55" translate="yes" xml:space="preserve">
          <source>URI Class</source>
          <target state="translated">URI 클래스</target>
        </trans-unit>
        <trans-unit id="523b0cfc0980eb1052d6e88683b26b8877dfc7ce" translate="yes" xml:space="preserve">
          <source>URI Routing</source>
          <target state="translated">URI 라우팅</target>
        </trans-unit>
        <trans-unit id="e64bec60398f6e1b07a6f3bd00955b49a4d6d28a" translate="yes" xml:space="preserve">
          <source>URI Security</source>
          <target state="translated">URI 보안</target>
        </trans-unit>
        <trans-unit id="f1f3b61c5be7de2febc3af7c46ded2d63780c46c" translate="yes" xml:space="preserve">
          <source>URI Segments</source>
          <target state="translated">URI 세그먼트</target>
        </trans-unit>
        <trans-unit id="8a16888dde13ab885ed2b806f63afbc52603fe32" translate="yes" xml:space="preserve">
          <source>URI Strings</source>
          <target state="translated">URI 문자열</target>
        </trans-unit>
        <trans-unit id="26cfd460a29f496345acf3067be34c9ae662c5e6" translate="yes" xml:space="preserve">
          <source>URI segments array</source>
          <target state="translated">URI 세그먼트 배열</target>
        </trans-unit>
        <trans-unit id="5f879a84622a7b2fa2ed31334581b746f972c7df" translate="yes" xml:space="preserve">
          <source>URI string</source>
          <target state="translated">URI 문자열</target>
        </trans-unit>
        <trans-unit id="192ee15205f7c2d3ec6cb7d37235883a9d88d0ad" translate="yes" xml:space="preserve">
          <source>URITest #1456, #1495</source>
          <target state="translated">URITest # 1456, # 1495</target>
        </trans-unit>
        <trans-unit id="ba7dbfc1629637ea8ccdc0426858b172a4ba4b58" translate="yes" xml:space="preserve">
          <source>URITest #2259</source>
          <target state="translated">URITest # 2259</target>
        </trans-unit>
        <trans-unit id="0e2d9b0777a485c1276de0803c12a7d76fbc5c39" translate="yes" xml:space="preserve">
          <source>URL</source>
          <target state="translated">URL</target>
        </trans-unit>
        <trans-unit id="d9940793f3d5bd346e5e0e55fc08d05f83a82d43" translate="yes" xml:space="preserve">
          <source>URL Helper</source>
          <target state="translated">URL 도우미</target>
        </trans-unit>
        <trans-unit id="dd28862504fafeb8c88e4c953893147a30a63970" translate="yes" xml:space="preserve">
          <source>URL ID or FALSE on failure</source>
          <target state="translated">실패시 URL ID 또는 FALSE</target>
        </trans-unit>
        <trans-unit id="e1d8ce49699b91f053258782cfdf5b1cb7f9dc2e" translate="yes" xml:space="preserve">
          <source>URL pointing at your CI system/ directory</source>
          <target state="translated">CI 시스템 / 디렉토리를 가리키는 URL</target>
        </trans-unit>
        <trans-unit id="6dee2913c582ae82a7489ecfd24d9a04ee185365" translate="yes" xml:space="preserve">
          <source>URL-formatted string</source>
          <target state="translated">URL 형식의 문자열</target>
        </trans-unit>
        <trans-unit id="d10fc7928ca34eb9cf5dcb1a1e294b3377fda9e0" translate="yes" xml:space="preserve">
          <source>URLHelperTest #1588</source>
          <target state="translated">URLHelperTest # 1588</target>
        </trans-unit>
        <trans-unit id="0623a5bc2ad9a4d4831fa44050a649e90092dbf5" translate="yes" xml:space="preserve">
          <source>URLHelperTest #2259</source>
          <target state="translated">URLHelperTest # 2259</target>
        </trans-unit>
        <trans-unit id="0495db9ed347150e6f7d9d291fc2ab622a4dcbef" translate="yes" xml:space="preserve">
          <source>URLHelperTest #2325</source>
          <target state="translated">URLHelperTest # 2325</target>
        </trans-unit>
        <trans-unit id="bdfd4d8d6952777c39403b2d2e2f8a2a52bf255f" translate="yes" xml:space="preserve">
          <source>UTC</source>
          <target state="translated">UTC</target>
        </trans-unit>
        <trans-unit id="a8f9eae78e16a08e3c5c3ab176972e6bd7432e60" translate="yes" xml:space="preserve">
          <source>UTF8_ENABLED</source>
          <target state="translated">UTF8_ENABLED</target>
        </trans-unit>
        <trans-unit id="5c1d1686472dc5569293dc0899e7fb05e89e8fbb" translate="yes" xml:space="preserve">
          <source>Under CLI, the Session library will automatically halt itself, as this is a concept based entirely on the HTTP protocol.</source>
          <target state="translated">CLI에서 세션 라이브러리는 HTTP 프로토콜을 기반으로하는 개념이므로 자동으로 중지됩니다.</target>
        </trans-unit>
        <trans-unit id="bcce28ee6949d0f36b023b07c4c8852107ced3bc" translate="yes" xml:space="preserve">
          <source>Under NGINX, you can define a location block and use the &lt;code&gt;try_files&lt;/code&gt; directive to get the same effect as we did with the above Apache configuration:</source>
          <target state="translated">NGINX에서 위치 블록을 정의하고 &lt;code&gt;try_files&lt;/code&gt; 지시문을 사용하여 위의 Apache 구성에서했던 것과 동일한 효과를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e08a62b6ccaa594cff4e15f8f457dd307936c38" translate="yes" xml:space="preserve">
          <source>Under Windows, you can also utilize the WinCache driver.</source>
          <target state="translated">Windows에서는 WinCache 드라이버를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="05788b2f172ec26f528ddebafb27d1918d624b8e" translate="yes" xml:space="preserve">
          <source>Under nginx, you must pass the environment variable through the &lt;code&gt;fastcgi_params&lt;/code&gt; in order for it to show up under the &lt;code&gt;$_SERVER&lt;/code&gt; variable. This allows it to work on the virtual-host level, instead of using &lt;code&gt;env&lt;/code&gt; to set it for the entire server, though that would work fine on a dedicated server. You would then modify your server config to something like:</source>
          <target state="translated">nginx 에서 &lt;code&gt;$_SERVER&lt;/code&gt; 변수 아래에 표시되도록하려면 &lt;code&gt;fastcgi_params&lt;/code&gt; 를 통해 환경 변수를 전달해야합니다 . 이를 통해 &lt;code&gt;env&lt;/code&gt; 를 사용 하여 전체 서버에 대해 설정하는 대신 가상 호스트 수준에서 작동 할 수 있지만 전용 서버에서는 제대로 작동합니다. 그런 다음 서버 구성을 다음과 같이 수정합니다.</target>
        </trans-unit>
        <trans-unit id="e82e6c5960d56d2e3cf6615fb3574da806ebbffd" translate="yes" xml:space="preserve">
          <source>Under normal circumstances you won&amp;rsquo;t even notice the Output class since it works transparently without your intervention. For example, when you use the &lt;a href=&quot;loader&quot;&gt;Loader&lt;/a&gt; class to load a view file, it&amp;rsquo;s automatically passed to the Output class, which will be called automatically by CodeIgniter at the end of system execution. It is possible, however, for you to manually intervene with the output if you need to.</source>
          <target state="translated">정상적인 상황에서는 사용자의 개입없이 투명하게 작동하기 때문에 출력 클래스도 눈에 띄지 않습니다. 예를 들어, &lt;a href=&quot;loader&quot;&gt;Loader&lt;/a&gt; 클래스를 사용하여보기 파일을로드하면 자동으로 Output 클래스로 전달되어 시스템 실행이 끝날 때 CodeIgniter에 의해 자동으로 호출됩니다. 그러나 필요한 경우 출력에 수동으로 개입 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4290c133bc2f5ba89ca838eda0237e68d396345b" translate="yes" xml:space="preserve">
          <source>Underscore: _</source>
          <target state="translated">밑줄 : _</target>
        </trans-unit>
        <trans-unit id="3d5d659848f626c25b02da7affe2fe55a1dd8de8" translate="yes" xml:space="preserve">
          <source>Unfortunately, many developers don&amp;rsquo;t know how to do that, and the web is full of outdated or otherwise wrongful advices, which doesn&amp;rsquo;t help.</source>
          <target state="translated">불행히도 많은 개발자들은 그 방법을 모르고 있으며 웹에는 오래되거나 잘못된 조언이 가득 차있어 도움이되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7986f8ca7a898e169da1e2599a26d21c215722e4" translate="yes" xml:space="preserve">
          <source>Unit Test Display</source>
          <target state="translated">단위 테스트 디스플레이</target>
        </trans-unit>
        <trans-unit id="438d23452047f4defac8e18aecae37372fcea335" translate="yes" xml:space="preserve">
          <source>Unit Testing</source>
          <target state="translated">단위 테스트</target>
        </trans-unit>
        <trans-unit id="9f29d85aa1a52f908c0acf1d81cd09abfa593535" translate="yes" xml:space="preserve">
          <source>Unit Testing Class</source>
          <target state="translated">단위 테스트 클래스</target>
        </trans-unit>
        <trans-unit id="ff5b5475e578f099c747e460ab2209c6dbbade31" translate="yes" xml:space="preserve">
          <source>Unit testing is an approach to software development in which tests are written for each function in your application. If you are not familiar with the concept you might do a little googling on the subject.</source>
          <target state="translated">단위 테스트는 응용 프로그램의 각 기능에 대해 테스트를 작성하는 소프트웨어 개발 방식입니다. 개념에 익숙하지 않은 경우 주제에 대해 약간의 인터넷 검색을 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66e8fb9fe6af46deb16decef73a5576aa5217731" translate="yes" xml:space="preserve">
          <source>Unless you provide your own (and valid) salt, this function has a further dependency on an available CSPRNG source. Each of the following would satisfy that: - &lt;code&gt;mcrypt_create_iv()&lt;/code&gt; with &lt;code&gt;MCRYPT_DEV_URANDOM&lt;/code&gt; - &lt;code&gt;openssl_random_pseudo_bytes()&lt;/code&gt; - /dev/arandom - /dev/urandom</source>
          <target state="translated">고유하고 유효한 소금을 제공하지 않으면이 기능은 사용 가능한 CSPRNG 소스에 더 의존합니다. 다음의 각이 그것을 충족시킬 : - &lt;code&gt;mcrypt_create_iv()&lt;/code&gt; 와 &lt;code&gt;MCRYPT_DEV_URANDOM&lt;/code&gt; 을 - &lt;code&gt;openssl_random_pseudo_bytes()&lt;/code&gt; -는 / dev / arandom -는 / dev / urandom을</target>
        </trans-unit>
        <trans-unit id="08a4c0cb34ea42fe8df10abd7bb1d464e503001e" translate="yes" xml:space="preserve">
          <source>Unless you specify the &lt;code&gt;CHARACTER SET&lt;/code&gt; and/or &lt;code&gt;COLLATE&lt;/code&gt; attributes, &lt;code&gt;createTable()&lt;/code&gt; will always add them with your configured &lt;em&gt;charset&lt;/em&gt; and &lt;em&gt;DBCollat&lt;/em&gt; values, as long as they are not empty (MySQL only).</source>
          <target state="translated">&lt;code&gt;CHARACTER SET&lt;/code&gt; 및 / 또는 &lt;code&gt;COLLATE&lt;/code&gt; 속성 을 지정하지 않는 한 &lt;code&gt;createTable()&lt;/code&gt; 은 비어 있지 않은 한 항상 구성된 &lt;em&gt;charset&lt;/em&gt; 및 &lt;em&gt;DBCollat&lt;/em&gt; 값 과 함께 속성을 추가합니다 (MySQL 전용).</target>
        </trans-unit>
        <trans-unit id="d08071245a63461123796b4324ec76c09aaf1682" translate="yes" xml:space="preserve">
          <source>Unless you specify the &lt;code&gt;CHARACTER SET&lt;/code&gt; and/or &lt;code&gt;COLLATE&lt;/code&gt; attributes, &lt;code&gt;create_table()&lt;/code&gt; will always add them with your configured &lt;em&gt;char_set&lt;/em&gt; and &lt;em&gt;dbcollat&lt;/em&gt; values, as long as they are not empty (MySQL only).</source>
          <target state="translated">&lt;code&gt;CHARACTER SET&lt;/code&gt; 및 / 또는 &lt;code&gt;COLLATE&lt;/code&gt; 속성 을 지정하지 않으면 &lt;code&gt;create_table()&lt;/code&gt; 은 비어 있지 않은 한 항상 구성된 &lt;em&gt;char_set&lt;/em&gt; 및 &lt;em&gt;dbcollat&lt;/em&gt; 값으로 속성을 추가합니다 (MySQL에만 해당).</target>
        </trans-unit>
        <trans-unit id="6330b6f299b617d2ec8aa121cd8fc708ea055d9e" translate="yes" xml:space="preserve">
          <source>Unless you&amp;rsquo;re developing a website with heavy AJAX usage, you can skip this section. If you are, however, and if you&amp;rsquo;re experiencing performance issues, then this note is exactly what you&amp;rsquo;re looking for.</source>
          <target state="translated">AJAX 사용량이 많은 웹 사이트를 개발하지 않는 한이 섹션을 건너 뛸 수 있습니다. 그러나 성능 문제가 발생하는 경우이 메모는 원하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ebf7665ae46e9103483f253fe08f3789dfd97bfb" translate="yes" xml:space="preserve">
          <source>Unlike &lt;code&gt;failUnauthorized&lt;/code&gt;, this method should be used when the requested API endpoint is never allowed. Unauthorized implies the client is encouraged to try again with different credentials. Forbidden means the client should not try again because it won&amp;rsquo;t help. Status code is 403.</source>
          <target state="translated">&lt;code&gt;failUnauthorized&lt;/code&gt; 와 달리이 메서드는 요청 된 API 엔드 포인트가 허용되지 않을 때 사용해야합니다. Unauthorized는 클라이언트가 다른 자격 증명으로 다시 시도하도록 권장됨을 의미합니다. 금지는 클라이언트가 도움이되지 않기 때문에 다시 시도하지 않아야 함을 의미합니다. 상태 코드는 403입니다.</target>
        </trans-unit>
        <trans-unit id="7b89ea20de7b2ed756438dd40333e8cab3bfc6bf" translate="yes" xml:space="preserve">
          <source>Unlike caching from the Output Class, the driver file-based caching allows for pieces of view files to be cached. Use this with care, and make sure to benchmark your application, as a point can come where disk I/O will negate positive gains by caching.</source>
          <target state="translated">출력 클래스의 캐싱과 달리 드라이버 파일 기반 캐싱을 사용하면 뷰 파일을 캐시 할 수 있습니다. 디스크 I / O가 캐싱을 통해 긍정적 인 이득을 무효화 할 수있는 지점이 될 수 있으므로이를주의해서 사용하고 응용 프로그램을 벤치마킹해야합니다.</target>
        </trans-unit>
        <trans-unit id="6f4d54a7bb522b30c28953ffdcfd9eccd40400f2" translate="yes" xml:space="preserve">
          <source>Unlike caching from the Output Class, the driver file-based caching allows for pieces of view files to be cached. Use this with care, and make sure to benchmark your application, as a point can come where disk I/O will negate positive gains by caching. This requires a writable cache directory to be really writable (0777).</source>
          <target state="translated">출력 클래스의 캐싱과 달리 드라이버 파일 기반 캐싱을 사용하면 뷰 파일 조각을 캐시 할 수 있습니다. 이를주의해서 사용하고, 디스크 I / O가 캐싱을 통해 긍정적 인 이득을 부정 할 수있는 시점이 올 수 있으므로 애플리케이션을 벤치마킹하십시오. 쓰기 가능한 캐시 디렉터리가 실제로 쓰기 가능해야합니다 (0777).</target>
        </trans-unit>
        <trans-unit id="5eb4e9be515d0424a7d72efbd31df95faeb7234b" translate="yes" xml:space="preserve">
          <source>Unlike many other frameworks, CodeIgniter configurable items aren&amp;rsquo;t contained in a single file. Instead, each class that needs configurable items will have a configuration file with the same name as the class that uses it. You will find the application configuration files in the &lt;strong&gt;/app/Config&lt;/strong&gt; folder.</source>
          <target state="translated">다른 많은 프레임 워크와 달리 CodeIgniter 구성 가능 항목은 단일 파일에 포함되지 않습니다. 대신 구성 가능한 항목이 필요한 각 클래스에는 해당 항목을 사용하는 클래스와 동일한 이름의 구성 파일이 있습니다. &lt;strong&gt;/ app / Config&lt;/strong&gt; 폴더 에서 애플리케이션 구성 파일을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b75b97c4086922b0d391f7a487642866f8e40bb" translate="yes" xml:space="preserve">
          <source>Unlike most other systems in CodeIgniter, Helpers are not written in an Object Oriented format. They are simple, procedural functions. Each helper function performs one specific task, with no dependence on other functions.</source>
          <target state="translated">CodeIgniter의 다른 대부분의 시스템과 달리 도우미는 객체 지향 형식으로 작성되지 않습니다. 그것들은 단순하고 절차적인 기능입니다. 각 도우미 기능은 다른 기능에 의존하지 않고 하나의 특정 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="a28d9fd938dfc62694bec853a21d6881f251474c" translate="yes" xml:space="preserve">
          <source>Unlike most systems in CodeIgniter, the error functions are simple procedural interfaces that are available globally throughout the application. This approach permits error messages to get triggered without having to worry about class/function scoping.</source>
          <target state="translated">CodeIgniter의 대부분의 시스템과 달리 오류 기능은 응용 프로그램 전체에서 전 세계적으로 사용 가능한 간단한 절차 인터페이스입니다. 이 방법을 사용하면 클래스 / 함수 범위에 대해 걱정할 필요없이 오류 메시지가 트리거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="81d1e10533cf90da88e51fd39a82bfd433594772" translate="yes" xml:space="preserve">
          <source>Unlike the &lt;a href=&quot;../helpers/cookie_helper&quot;&gt;Cookie Helper&lt;/a&gt; function &lt;a href=&quot;../helpers/cookie_helper#get_cookie&quot;&gt;&lt;code&gt;get_cookie()&lt;/code&gt;&lt;/a&gt;, this method does NOT prepend your configured &lt;code&gt;$config['cookie_prefix']&lt;/code&gt; value.</source>
          <target state="translated">달리 &lt;a href=&quot;../helpers/cookie_helper&quot;&gt;쿠키 도우미&lt;/a&gt; 기능 &lt;a href=&quot;../helpers/cookie_helper#get_cookie&quot;&gt; &lt;code&gt;get_cookie()&lt;/code&gt; &lt;/a&gt; ,이 방법은 구성된 앞에 추가하지 않습니다 &lt;code&gt;$config['cookie_prefix']&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="d7f3c681d89b1a55d721c3fe5945350df94186d6" translate="yes" xml:space="preserve">
          <source>Unmarks a &lt;code&gt;$_SESSION&lt;/code&gt; item key (or multiple ones) as &amp;ldquo;flashdata&amp;rdquo;.</source>
          <target state="translated">표시가 해제 &lt;code&gt;$_SESSION&lt;/code&gt; &quot;flashdata&quot;등의 항목 키 (또는 여러 사람을).</target>
        </trans-unit>
        <trans-unit id="8297fba5c145e2fcc9cc7c64ab991a2df90bf903" translate="yes" xml:space="preserve">
          <source>Unmarks a &lt;code&gt;$_SESSION&lt;/code&gt; item key (or multiple ones) as &amp;ldquo;tempdata&amp;rdquo;.</source>
          <target state="translated">표시가 해제 &lt;code&gt;$_SESSION&lt;/code&gt; &quot;tempdata&quot;등의 항목 키 (또는 여러 사람을).</target>
        </trans-unit>
        <trans-unit id="6cd92c66a732602a81b0b2e83527653de0755b28" translate="yes" xml:space="preserve">
          <source>Unsets the specified key(s) from the &lt;code&gt;$_SESSION&lt;/code&gt; superglobal.</source>
          <target state="translated">&lt;code&gt;$_SESSION&lt;/code&gt; 슈퍼 글로벌에서 지정된 키를 설정 해제합니다 .</target>
        </trans-unit>
        <trans-unit id="fe5078771526c256a3f706a4c21d814510f09af1" translate="yes" xml:space="preserve">
          <source>Unzip the package.</source>
          <target state="translated">패키지를 압축 해제하십시오.</target>
        </trans-unit>
        <trans-unit id="21a3f1fb03a53768c5f4a50b52250e66bfcfbb4d" translate="yes" xml:space="preserve">
          <source>Update (websafe)</source>
          <target state="translated">업데이트 (웹 세이프)</target>
        </trans-unit>
        <trans-unit id="d8eec92e40aa360699824e46ff72d339503dd7d4" translate="yes" xml:space="preserve">
          <source>UpdateTest #1640, #1677</source>
          <target state="translated">UpdateTest # 1640, # 1677</target>
        </trans-unit>
        <trans-unit id="f20dcac2ff841f6c9a7a3df99ef5d179c3ecb16b" translate="yes" xml:space="preserve">
          <source>UpdateTest #2269</source>
          <target state="translated">UpdateTest # 2269</target>
        </trans-unit>
        <trans-unit id="2c946f7f5206183de3e3f98456fd8994e3bcb64d" translate="yes" xml:space="preserve">
          <source>UpdateTest #2295</source>
          <target state="translated">UpdateTest # 2295</target>
        </trans-unit>
        <trans-unit id="a0ce8d42ec8a14f8d2fa0966d70099b2eb49fa95" translate="yes" xml:space="preserve">
          <source>Updated welcome view file</source>
          <target state="translated">업데이트 된 환영보기 파일</target>
        </trans-unit>
        <trans-unit id="562f76cff790837d25c1a64692e495f619d25896" translate="yes" xml:space="preserve">
          <source>Updates an existing record in the database. The first parameter is the $primaryKey of the record to update. An associative array of data is passed into this method as the second parameter. The array&amp;rsquo;s keys must match the name of the columns in a $table, while the array&amp;rsquo;s values are the values to save for that key:</source>
          <target state="translated">데이터베이스의 기존 레코드를 업데이트합니다. 첫 번째 매개 변수는 업데이트 할 레코드의 $ primaryKey입니다. 데이터의 연관 배열이 두 번째 매개 변수로이 메소드에 전달됩니다. 배열의 키는 $ table의 열 이름과 일치해야하며 배열의 값은 해당 키에 대해 저장할 값입니다.</target>
        </trans-unit>
        <trans-unit id="dd8ce06e479993fd7940ea48abaafb1c49415931" translate="yes" xml:space="preserve">
          <source>Updating Data</source>
          <target state="translated">데이터 업데이트</target>
        </trans-unit>
        <trans-unit id="1035b2d68363b0776ef86d6a0141bfbd021ab8e2" translate="yes" xml:space="preserve">
          <source>Updating The Cart</source>
          <target state="translated">장바구니 업데이트</target>
        </trans-unit>
        <trans-unit id="a7dd3a1d8ed51cf30314c15a934d4cae0718aa5a" translate="yes" xml:space="preserve">
          <source>Upgrading</source>
          <target state="translated">Upgrading</target>
        </trans-unit>
        <trans-unit id="b42548454290455067e2a8489d8dbfe602f35ec8" translate="yes" xml:space="preserve">
          <source>Upgrading From a Previous Version</source>
          <target state="translated">이전 버전에서 업그레이드</target>
        </trans-unit>
        <trans-unit id="55776ba07361dcfe63dd7f350d170b574aeab1a3" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.1 to 1.2</source>
          <target state="translated">1.1에서 1.2로 업그레이드</target>
        </trans-unit>
        <trans-unit id="c810ee012d17aa6a311a89f649579cc361f8ac61" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.2 to 1.3</source>
          <target state="translated">1.2에서 1.3으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="68283e46b2860f6cdf0cf6cdfc4db905b821e997" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.3 to 1.3.1</source>
          <target state="translated">1.3에서 1.3.1로 업그레이드</target>
        </trans-unit>
        <trans-unit id="879cae62adc1b3cb4b9aa3a889528651acadfa22" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.3.1 to 1.3.2</source>
          <target state="translated">1.3.1에서 1.3.2로 업그레이드</target>
        </trans-unit>
        <trans-unit id="86c9dcefc585d29ac126203ad551b756f9905b1e" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.3.2 to 1.3.3</source>
          <target state="translated">1.3.2에서 1.3.3으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="fc3f6a0529d724fcb22957173570ad6a487adf76" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.3.3 to 1.4.0</source>
          <target state="translated">1.3.3에서 1.4.0으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="a1a80f40d67a58a157b387ad76a7170971dd0557" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.4.0 to 1.4.1</source>
          <target state="translated">1.4.0에서 1.4.1로 업그레이드</target>
        </trans-unit>
        <trans-unit id="43433a76c9b8c32f9aad3192ae8f4426f329e6d0" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.4.1 to 1.5.0</source>
          <target state="translated">1.4.1에서 1.5.0으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="57641accb475cdaea26b3a6e2edd6ce2fb00f547" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.5.0 or 1.5.1 to 1.5.2</source>
          <target state="translated">1.5.0 또는 1.5.1에서 1.5.2로 업그레이드</target>
        </trans-unit>
        <trans-unit id="083a37815eed228851cada22f3e1d611a95f2453" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.5.2 to 1.5.3</source>
          <target state="translated">1.5.2에서 1.5.3으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="6d963173a828870684b0d0a3c6f3a25c19024d40" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.5.3 to 1.5.4</source>
          <target state="translated">1.5.3에서 1.5.4로 업그레이드</target>
        </trans-unit>
        <trans-unit id="ccf626de524d60a2b6dc99457f2f5bbdb0b26d90" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.5.4 to 1.6.0</source>
          <target state="translated">1.5.4에서 1.6.0으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="26df68ebd2bf56bd719014e712535924d1bccbe6" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.6.0 to 1.6.1</source>
          <target state="translated">1.6.0에서 1.6.1로 업그레이드</target>
        </trans-unit>
        <trans-unit id="b988e760b4d32ced19a92c90360b61f3995f7f31" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.6.1 to 1.6.2</source>
          <target state="translated">1.6.1에서 1.6.2로 업그레이드</target>
        </trans-unit>
        <trans-unit id="7307a9af22bbbef5226db8036a62beb804f8a1bd" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.6.2 to 1.6.3</source>
          <target state="translated">1.6.2에서 1.6.3으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="7e37961a9ed265f42ead0fe6302c95a4bad05211" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.6.3 to 1.7.0</source>
          <target state="translated">1.6.3에서 1.7.0으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="5ecd00aa5e034f954cfd82ad53a5f1efc0d4c2a9" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.7.0 to 1.7.1</source>
          <target state="translated">1.7.0에서 1.7.1로 업그레이드</target>
        </trans-unit>
        <trans-unit id="c720b408d3906708331076907d73d7da41fe1376" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.7.1 to 1.7.2</source>
          <target state="translated">1.7.1에서 1.7.2로 업그레이드</target>
        </trans-unit>
        <trans-unit id="918f80067fcf897bd70677a17f65033dfd69ada1" translate="yes" xml:space="preserve">
          <source>Upgrading from 1.7.2 to 2.0</source>
          <target state="translated">1.7.2에서 2.0으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="1a04fdc759db17d40eebfa4e23b722d5013aaf07" translate="yes" xml:space="preserve">
          <source>Upgrading from 2.0 to 2.0.1</source>
          <target state="translated">2.0에서 2.0.1로 업그레이드</target>
        </trans-unit>
        <trans-unit id="6145c9d9299e05f8b0538ec0c1c99aa67d0169ba" translate="yes" xml:space="preserve">
          <source>Upgrading from 2.0.1 to 2.0.2</source>
          <target state="translated">2.0.1에서 2.0.2로 업그레이드</target>
        </trans-unit>
        <trans-unit id="493f4aa130b088b008f52a6327e89711b3487de5" translate="yes" xml:space="preserve">
          <source>Upgrading from 2.0.2 to 2.0.3</source>
          <target state="translated">2.0.2에서 2.0.3으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="afe22baaf93338a1fcb711419c4bca3ea9b23798" translate="yes" xml:space="preserve">
          <source>Upgrading from 2.0.3 to 2.1.0</source>
          <target state="translated">2.0.3에서 2.1.0으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="8cc8546b86a64b362bcb4862a45089b0bbe5481e" translate="yes" xml:space="preserve">
          <source>Upgrading from 2.1.0 to 2.1.1</source>
          <target state="translated">2.1.0에서 2.1.1로 업그레이드</target>
        </trans-unit>
        <trans-unit id="513d5483a47702b3c76490210f26d1db05cab653" translate="yes" xml:space="preserve">
          <source>Upgrading from 2.1.1 to 2.1.2</source>
          <target state="translated">2.1.1에서 2.1.2로 업그레이드</target>
        </trans-unit>
        <trans-unit id="6f0d4852b6c6bd2dbda4650a80b5ba14d48e5949" translate="yes" xml:space="preserve">
          <source>Upgrading from 2.1.2 to 2.1.3</source>
          <target state="translated">2.1.2에서 2.1.3으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="35826aae4b6f72c640ca5b4e8a574a19f2f39b5e" translate="yes" xml:space="preserve">
          <source>Upgrading from 2.1.3 to 2.1.4</source>
          <target state="translated">2.1.3에서 2.1.4로 업그레이드</target>
        </trans-unit>
        <trans-unit id="9e3eca20aa54154a1a127601ba45c966980d8a21" translate="yes" xml:space="preserve">
          <source>Upgrading from 2.1.4 to 2.2.x</source>
          <target state="translated">2.1.4에서 2.2.x로 업그레이드</target>
        </trans-unit>
        <trans-unit id="7e24c0cb0be9bf5ab89979532daed83cfe4b1833" translate="yes" xml:space="preserve">
          <source>Upgrading from 2.2.0 to 2.2.1</source>
          <target state="translated">2.2.0에서 2.2.1로 업그레이드</target>
        </trans-unit>
        <trans-unit id="5527dcce719ee8de547b8c6504e7aa6115d61b57" translate="yes" xml:space="preserve">
          <source>Upgrading from 2.2.1 to 2.2.2</source>
          <target state="translated">2.2.1에서 2.2.2로 업그레이드</target>
        </trans-unit>
        <trans-unit id="b172ed10ffe19a0200bf8bf97e7289873121842b" translate="yes" xml:space="preserve">
          <source>Upgrading from 2.2.2 to 2.2.3</source>
          <target state="translated">2.2.2에서 2.2.3으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="929b514daba897765a019325ce524ccf81cfd28c" translate="yes" xml:space="preserve">
          <source>Upgrading from 2.2.x to 3.0.x</source>
          <target state="translated">2.2.x에서 3.0.x로 업그레이드</target>
        </trans-unit>
        <trans-unit id="ba6b4a4ee6b1c7f7257f598b450cab27f45da16f" translate="yes" xml:space="preserve">
          <source>Upgrading from 3.0.0 to 3.0.1</source>
          <target state="translated">3.0.0에서 3.0.1로 업그레이드</target>
        </trans-unit>
        <trans-unit id="47655433f4e70ea562dea9b83557655bce3a6e4d" translate="yes" xml:space="preserve">
          <source>Upgrading from 3.0.1 to 3.0.2</source>
          <target state="translated">3.0.1에서 3.0.2로 업그레이드</target>
        </trans-unit>
        <trans-unit id="4a582de96845d8b4fefc725c5cd2684019b07e20" translate="yes" xml:space="preserve">
          <source>Upgrading from 3.0.2 to 3.0.3</source>
          <target state="translated">3.0.2에서 3.0.3으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="7f98b53758950ffd366ab97626b1900310e9f15b" translate="yes" xml:space="preserve">
          <source>Upgrading from 3.0.3 to 3.0.4</source>
          <target state="translated">3.0.3에서 3.0.4로 업그레이드</target>
        </trans-unit>
        <trans-unit id="28ecf10dd65ee561e5e37312bb651298895469c0" translate="yes" xml:space="preserve">
          <source>Upgrading from 3.0.4 to 3.0.5</source>
          <target state="translated">3.0.4에서 3.0.5로 업그레이드</target>
        </trans-unit>
        <trans-unit id="84e1cbc91ca38b047ebd70c8013015c97f6e27d7" translate="yes" xml:space="preserve">
          <source>Upgrading from 3.0.5 to 3.0.6</source>
          <target state="translated">3.0.5에서 3.0.6으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="0e7525ba354f9cb6aae84d846c4f0235ec57aadb" translate="yes" xml:space="preserve">
          <source>Upgrading from 3.0.6 to 3.1.0</source>
          <target state="translated">3.0.6에서 3.1.0으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="0cd53229f7a3f8dbbdd5c6d6c16723bb1ed369dd" translate="yes" xml:space="preserve">
          <source>Upgrading from 3.1.0 to 3.1.1</source>
          <target state="translated">3.1.0에서 3.1.1로 업그레이드</target>
        </trans-unit>
        <trans-unit id="fc084a6d0b06350a8e51e1ea528cd9d725b523c6" translate="yes" xml:space="preserve">
          <source>Upgrading from 3.1.1 to 3.1.2</source>
          <target state="translated">3.1.1에서 3.1.2로 업그레이드</target>
        </trans-unit>
        <trans-unit id="9af483b2e5a3b4a06716041dafb6846b6c6362a2" translate="yes" xml:space="preserve">
          <source>Upgrading from 3.1.2 to 3.1.3</source>
          <target state="translated">3.1.2에서 3.1.3으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="edb489ea87fdf4ca60299226fd74f63f6cb995c5" translate="yes" xml:space="preserve">
          <source>Upgrading from 3.1.3 to 3.1.4</source>
          <target state="translated">3.1.3에서 3.1.4로 업그레이드</target>
        </trans-unit>
        <trans-unit id="7f8daea8dd965b76b6acfeb94678343d952ed953" translate="yes" xml:space="preserve">
          <source>Upgrading from 3.1.4 to 3.1.5</source>
          <target state="translated">3.1.4에서 3.1.5로 업그레이드</target>
        </trans-unit>
        <trans-unit id="8a05ed7d1ba82c9163a9c349b6bbb5f2a8c493f4" translate="yes" xml:space="preserve">
          <source>Upgrading from 3.1.5 to 3.1.6</source>
          <target state="translated">3.1.5에서 3.1.6으로 업그레이드</target>
        </trans-unit>
        <trans-unit id="9ed215049700abb0b51e12eb69914bda267f5d47" translate="yes" xml:space="preserve">
          <source>Upgrading from 3.1.6 to 3.1.7</source>
          <target state="translated">3.1.6에서 3.1.7로 업그레이드</target>
        </trans-unit>
        <trans-unit id="8d5994cb4c943209d20da4c677801992ef38dee2" translate="yes" xml:space="preserve">
          <source>Upgrading from 3.1.7 to 3.1.8</source>
          <target state="translated">3.1.7에서 3.1.8로 업그레이드</target>
        </trans-unit>
        <trans-unit id="ef47ad0d3b8f91dfc13b52e44144a74ff91b49e4" translate="yes" xml:space="preserve">
          <source>Upgrading from 3.x to 4.x</source>
          <target state="translated">3.x에서 4.x로 업그레이드</target>
        </trans-unit>
        <trans-unit id="e9e59532f2f24366e2ac41cbb3cd53db2cbe7c2a" translate="yes" xml:space="preserve">
          <source>Upgrading from Beta 1.0 to Beta 1.1</source>
          <target state="translated">베타 1.0에서 베타 1.1로 업그레이드</target>
        </trans-unit>
        <trans-unit id="7c800a05bf47c0c51dbed9b42681d2bdea50722f" translate="yes" xml:space="preserve">
          <source>Upload the CodeIgniter folders and files to your server. Normally the &lt;em&gt;index.php&lt;/em&gt; file will be at your root.</source>
          <target state="translated">CodeIgniter 폴더 및 파일을 서버에 업로드하십시오. 일반적으로 &lt;em&gt;index.php&lt;/em&gt; 파일은 루트에 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f49675254386c774d449098e6c5f690eef1aab7" translate="yes" xml:space="preserve">
          <source>Uploaded Files</source>
          <target state="translated">업로드 된 파일</target>
        </trans-unit>
        <trans-unit id="73d4905e4cca3261ec54340cd0ecbd8c85a6ab8f" translate="yes" xml:space="preserve">
          <source>UploadedFile #1368, #1456</source>
          <target state="translated">업로드 된 파일 # 1368, # 1456</target>
        </trans-unit>
        <trans-unit id="c7925ffc490a8eac06d6551879b91f3f823673b6" translate="yes" xml:space="preserve">
          <source>UploadedFile #1708</source>
          <target state="translated">업로드 된 파일 # 1708</target>
        </trans-unit>
        <trans-unit id="f2911c407f93424cde1cc613294b16e41f8babc0" translate="yes" xml:space="preserve">
          <source>UploadedFileTest #1302</source>
          <target state="translated">UploadedFileTest # 1302</target>
        </trans-unit>
        <trans-unit id="3c736f50e4851d3e48d25a684e68a833bf3b25f5" translate="yes" xml:space="preserve">
          <source>Uploading a file involves the following general process:</source>
          <target state="translated">파일 업로드에는 다음과 같은 일반적인 프로세스가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="a304de3346133a52f18170b51733fd33fca3dd71" translate="yes" xml:space="preserve">
          <source>Uploads a file to your server. You must supply the local path and the remote path, and you can optionally set the mode and permissions. Example:</source>
          <target state="translated">서버에 파일을 업로드합니다. 로컬 경로와 원격 경로를 제공해야하며 선택적으로 모드와 권한을 설정할 수 있습니다. 예:</target>
        </trans-unit>
        <trans-unit id="342c659777997bec12f413246e5e24d6a8317e2a" translate="yes" xml:space="preserve">
          <source>Usage Example</source>
          <target state="translated">사용 예</target>
        </trans-unit>
        <trans-unit id="31fdeb34a4f4bc8a7b882018ab434e09d2defd44" translate="yes" xml:space="preserve">
          <source>Usage Examples</source>
          <target state="translated">사용 예</target>
        </trans-unit>
        <trans-unit id="4df13ec4234f96a6f1f82fccdde77669b4c4b95c" translate="yes" xml:space="preserve">
          <source>Usage Notes</source>
          <target state="translated">사용법 메모</target>
        </trans-unit>
        <trans-unit id="fec43ce445f974147bd0eb223a50147e7fb7202d" translate="yes" xml:space="preserve">
          <source>Usage example:</source>
          <target state="translated">사용 예 :</target>
        </trans-unit>
        <trans-unit id="4f537c80741999e2ddeacf839a6348dab6a5ed44" translate="yes" xml:space="preserve">
          <source>Usage of the &lt;code&gt;$img_path&lt;/code&gt;, &lt;code&gt;$img_url&lt;/code&gt; and &lt;code&gt;$font_path&lt;/code&gt; parameters is DEPRECATED. Provide them in the &lt;code&gt;$data&lt;/code&gt; array instead.</source>
          <target state="translated">의 사용 &lt;code&gt;$img_path&lt;/code&gt; , &lt;code&gt;$img_url&lt;/code&gt; 및 &lt;code&gt;$font_path&lt;/code&gt; 매개 변수가 사용되지 않습니다. 대신 &lt;code&gt;$data&lt;/code&gt; 배열로 제공하십시오 .</target>
        </trans-unit>
        <trans-unit id="58ba620abb59875d0b5a9551c62ccfec68552184" translate="yes" xml:space="preserve">
          <source>Usage of the &lt;code&gt;set()&lt;/code&gt; method is also allowed and all fields are automatically escaped, just like with &lt;code&gt;insert()&lt;/code&gt;.</source>
          <target state="translated">의 사용 &lt;code&gt;set()&lt;/code&gt; 메소드는와 마찬가지로,도 허용되며 모든 필드가 자동으로 이스케이프 &lt;code&gt;insert()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed6cc81855aeeefa4c1af14d07c94030ce8f6de2" translate="yes" xml:space="preserve">
          <source>Usage of the &lt;em&gt;unique&lt;/em&gt; and &lt;em&gt;encrypt&lt;/em&gt; types is DEPRECATED. They are just aliases for &lt;em&gt;md5&lt;/em&gt; and &lt;em&gt;sha1&lt;/em&gt; respectively.</source>
          <target state="translated">의 사용 &lt;em&gt;독특한&lt;/em&gt; 및 &lt;em&gt;암호화&lt;/em&gt; 유형이 지원되지 않습니다. 그것들은 각각 &lt;em&gt;md5&lt;/em&gt; 와 &lt;em&gt;sha1의&lt;/em&gt; 별명 일뿐 입니다.</target>
        </trans-unit>
        <trans-unit id="0de1ac0a85aefa8cf5cb94a5ca6f370175b66e9a" translate="yes" xml:space="preserve">
          <source>Usage of the old method of setting classes via &amp;ldquo;anchor_class&amp;rdquo; is deprecated.</source>
          <target state="translated">&quot;anchor_class&quot;를 통해 클래스를 설정하는 이전 방법은 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="800efd185cced7bd16dc5ef97cfee5e598033238" translate="yes" xml:space="preserve">
          <source>Usage: see &lt;a href=&quot;#result-arrays&quot;&gt;Result Arrays&lt;/a&gt;.</source>
          <target state="translated">사용법 : &lt;a href=&quot;#result-arrays&quot;&gt;결과 배열을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="7dbb02280bb30f53500bca85e83e850ca686a902" translate="yes" xml:space="preserve">
          <source>Usage: see &lt;a href=&quot;#result-helper-methods&quot;&gt;Result Helper Methods&lt;/a&gt;.</source>
          <target state="translated">사용법 : &lt;a href=&quot;#result-helper-methods&quot;&gt;결과 도우미 메소드를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="84a5e641fcfe1d6b2214a4c047fcca8f207ff902" translate="yes" xml:space="preserve">
          <source>Usage: see &lt;a href=&quot;#result-rows&quot;&gt;Result Rows&lt;/a&gt;.</source>
          <target state="translated">사용법 : &lt;a href=&quot;#result-rows&quot;&gt;결과 행을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="c76aacca539d2cf298f74c4d5cd214d64cbbbc75" translate="yes" xml:space="preserve">
          <source>Use Allman style indenting. With the exception of Class declarations, braces are always placed on a line by themselves, and indented at the same level as the control statement that &amp;ldquo;owns&amp;rdquo; them.</source>
          <target state="translated">Allman 스타일 들여 쓰기를 사용하십시오. 클래스 선언을 제외하고, 중괄호는 항상 자체적으로 한 줄에 배치되며이를 &quot;소유&quot;하는 제어문과 동일한 레벨로 들여 쓰기됩니다.</target>
        </trans-unit>
        <trans-unit id="fb8faeee50002a2923dca1cecd7e75c327f172d1" translate="yes" xml:space="preserve">
          <source>Use Defined Routes Only</source>
          <target state="translated">정의 된 경로 만 사용</target>
        </trans-unit>
        <trans-unit id="4930fbffc3d8ccadbbffc0771525d4429544e45a" translate="yes" xml:space="preserve">
          <source>Use a descriptive subject line (eg parser library chokes on commas) rather than a vague one (eg. your code broke).</source>
          <target state="translated">모호한 제목 (예 : 코드 손상)보다는 설명적인 제목 줄 (예 : 쉼표에 파서 라이브러리 초크)을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="9cd42ae332ff61be83c3f42deae1e1bc77216d97" translate="yes" xml:space="preserve">
          <source>Use of the &lt;code&gt;||&lt;/code&gt; &amp;ldquo;or&amp;rdquo; comparison operator is discouraged, as its clarity on some output devices is low (looking like the number 11, for instance). &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; is preferred over &lt;code&gt;AND&lt;/code&gt; but either are acceptable, and a space should always precede and follow &lt;code&gt;!&lt;/code&gt;.</source>
          <target state="translated">의 사용 &lt;code&gt;||&lt;/code&gt; &quot;또는&quot;비교 연산자는 일부 출력 장치의 선명도가 낮기 때문에 권장하지 않습니다 (예 : 숫자 11과 같이). &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; 는 &lt;code&gt;AND&lt;/code&gt; 보다 선호 되지만 둘 중 하나라도 허용되며 공백은 항상 앞에 와야합니다 &lt;code&gt;!&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0fb2bb214ba76a423bc389a2c40ac46b21d656e2" translate="yes" xml:space="preserve">
          <source>Use separate files for each class, unless the classes are &lt;em&gt;closely related&lt;/em&gt;. An example of a CodeIgniter file that contains multiple classes is the Xmlrpc library file.</source>
          <target state="translated">클래스가 &lt;em&gt;밀접하게 관련되어&lt;/em&gt; 있지 않으면 각 클래스에 대해 별도의 파일을 사용하십시오 . 여러 클래스를 포함하는 CodeIgniter 파일의 예는 Xmlrpc 라이브러리 파일입니다.</target>
        </trans-unit>
        <trans-unit id="883c7ba124253d6d3e6fba5e08f475735fe51198" translate="yes" xml:space="preserve">
          <source>Use single line comments within code, leaving a blank line between large comment blocks and code.</source>
          <target state="translated">큰 주석 블록과 코드 사이에 빈 줄을 남기고 코드 내에 한 줄 주석을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="bb8e8b50e1f9b42443ae898bc06b1cd724952ef3" translate="yes" xml:space="preserve">
          <source>Use tabs for whitespace in your code, not spaces. This may seem like a small thing, but using tabs instead of whitespace allows the developer looking at your code to have indentation at levels that they prefer and customize in whatever application they use. And as a side benefit, it results in (slightly) more compact files, storing one tab character versus, say, four space characters.</source>
          <target state="translated">공백이 아닌 코드에서 공백에 탭을 사용하십시오. 이것은 작은 것처럼 보이지만 공백 대신 탭을 사용하면 개발자가 코드를보고있는 개발자가 사용하는 응용 프로그램에 따라 원하는 수준으로 들여 쓰기를 할 수 있습니다. 또한 부수적 인 이점으로, 탭 문자 하나와 공백 문자 4 개를 저장하는 파일 크기가 약간 작아집니다.</target>
        </trans-unit>
        <trans-unit id="fda8a3158c95e02dd2a5ac86b5dec77cf9ebb323" translate="yes" xml:space="preserve">
          <source>Use the optional &lt;code&gt;setFileName()&lt;/code&gt; method to change the filename as it is sent to the client&amp;rsquo;s browser:</source>
          <target state="translated">선택적 &lt;code&gt;setFileName()&lt;/code&gt; 메서드를 사용하여 클라이언트의 브라우저로 전송되는 파일 이름을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="dd3ecf3a068c9af56ddabadaba14fe28c3d4f059" translate="yes" xml:space="preserve">
          <source>Use the same stringency in returning and checking your own variables. Use &lt;strong&gt;===&lt;/strong&gt; and &lt;strong&gt;!==&lt;/strong&gt; as necessary.</source>
          <target state="translated">자신의 변수를 반환하고 확인할 때 동일한 엄격 성을 사용하십시오. 사용 &lt;strong&gt;===&lt;/strong&gt; 와 &lt;strong&gt;! ==&lt;/strong&gt; 필요가있다.</target>
        </trans-unit>
        <trans-unit id="215b41c1e6f8e402b8a848d989cfd0b125f13d9a" translate="yes" xml:space="preserve">
          <source>Used for generating CSRF and XSS tokens.</source>
          <target state="translated">CSRF 및 XSS 토큰을 생성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="da56bd032fb769314e161f2eca051f3a59c0c0e6" translate="yes" xml:space="preserve">
          <source>Used to add distinct corners to page elements. For full details see &lt;a href=&quot;http://malsup.com/jquery/corner/&quot;&gt;http://malsup.com/jquery/corner/&lt;/a&gt;</source>
          <target state="translated">페이지 요소에 별도의 모서리를 추가하는 데 사용됩니다. 자세한 내용은 &lt;a href=&quot;http://malsup.com/jquery/corner/&quot;&gt;http://malsup.com/jquery/corner/를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="8a41e1f309549c000e3b66bdf7c6b7238de45fee" translate="yes" xml:space="preserve">
          <source>Used to remove a column from a table.</source>
          <target state="translated">테이블에서 열을 제거하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c51a5b38f565c6ea31c06375cedceab481dc8bd1" translate="yes" xml:space="preserve">
          <source>Used to remove multiple columns from a table.</source>
          <target state="translated">테이블에서 여러 열을 제거하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7d9eace7db8cbd0bb510f63c153671587e6cb5b7" translate="yes" xml:space="preserve">
          <source>Used to retrieve values that have previously been set to the environment, or return a default value if it is not found. Will format boolean values to actual booleans instead of string representations.</source>
          <target state="translated">이전에 환경에 설정된 값을 검색하거나 찾을 수없는 경우 기본값을 반환하는 데 사용됩니다. 부울 값을 문자열 표현 대신 실제 부울로 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="5fb91cbfe4516d024752c7db547813863d48c794" translate="yes" xml:space="preserve">
          <source>Useful for checking how much rows were created, updated or deleted during the last executed query.</source>
          <target state="translated">마지막으로 실행 된 쿼리 중에 얼마나 많은 행이 작성, 업데이트 또는 삭제되었는지 확인하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="8f9f2317df27b96fec34402a882717f5741a2312" translate="yes" xml:space="preserve">
          <source>User Agent</source>
          <target state="translated">사용자 에이전트</target>
        </trans-unit>
        <trans-unit id="7ebea6e8756a69c67ae37a0c77430f139a61281a" translate="yes" xml:space="preserve">
          <source>User Agent Class</source>
          <target state="translated">사용자 에이전트 클래스</target>
        </trans-unit>
        <trans-unit id="555f47da5526428643a59a83e1b5d6da108dec53" translate="yes" xml:space="preserve">
          <source>User Agent Definitions</source>
          <target state="translated">사용자 에이전트 정의</target>
        </trans-unit>
        <trans-unit id="3bb4cbd5dedbbed7d275f4179e2c9943f7683dc4" translate="yes" xml:space="preserve">
          <source>User agent string or NULL if not set</source>
          <target state="translated">사용자 에이전트 문자열 또는 설정되지 않은 경우 NULL</target>
        </trans-unit>
        <trans-unit id="0b6ed2a48302040b98385e0e9087750e5fc8e056" translate="yes" xml:space="preserve">
          <source>User guide: General</source>
          <target state="translated">사용 설명서 : 일반</target>
        </trans-unit>
        <trans-unit id="b1927c729404fc0ac5db8382c3c10984f748ead8" translate="yes" xml:space="preserve">
          <source>User guide: Installation</source>
          <target state="translated">사용 설명서 : 설치</target>
        </trans-unit>
        <trans-unit id="8fc688d1a07909d7ae9b5a2b9a6b7c696bc78153" translate="yes" xml:space="preserve">
          <source>User guide: Overview</source>
          <target state="translated">사용 설명서 : 개요</target>
        </trans-unit>
        <trans-unit id="5d24684d77c68b276f4607453685a4dac281ea96" translate="yes" xml:space="preserve">
          <source>User guide: Tutorial</source>
          <target state="translated">사용 설명서 : 튜토리얼</target>
        </trans-unit>
        <trans-unit id="0919ea5fa9932b312800840b2d5e04f389a75c9a" translate="yes" xml:space="preserve">
          <source>UserAgent::getAgentString()</source>
          <target state="translated">UserAgent::getAgentString()</target>
        </trans-unit>
        <trans-unit id="a7716fecb18a4767d48cfecc45dae083198cc006" translate="yes" xml:space="preserve">
          <source>UserAgent::getBrowser()</source>
          <target state="translated">UserAgent::getBrowser()</target>
        </trans-unit>
        <trans-unit id="79e1e8c7452fb7fb3823aff7609e63b0576d9014" translate="yes" xml:space="preserve">
          <source>UserAgent::getMobile()</source>
          <target state="translated">UserAgent::getMobile()</target>
        </trans-unit>
        <trans-unit id="44099676a25deda65665dc2a59f477080fdb81ba" translate="yes" xml:space="preserve">
          <source>UserAgent::getPlatform()</source>
          <target state="translated">UserAgent::getPlatform()</target>
        </trans-unit>
        <trans-unit id="4ef4e4a7e85ae5cd1005cd51c778b8405e2cc03e" translate="yes" xml:space="preserve">
          <source>UserAgent::getReferrer()</source>
          <target state="translated">UserAgent::getReferrer()</target>
        </trans-unit>
        <trans-unit id="c2ddcdfd4bb1154d07ce913180cf17006a2aeeea" translate="yes" xml:space="preserve">
          <source>UserAgent::getRobot()</source>
          <target state="translated">UserAgent::getRobot()</target>
        </trans-unit>
        <trans-unit id="36a7897645ee61999ac0f5550b5a3601ffe73043" translate="yes" xml:space="preserve">
          <source>UserAgent::getVersion()</source>
          <target state="translated">UserAgent::getVersion()</target>
        </trans-unit>
        <trans-unit id="a7c13b6d6d6105cb802912f0433972e6881f0037" translate="yes" xml:space="preserve">
          <source>UserAgent::isBrowser()</source>
          <target state="translated">UserAgent::isBrowser()</target>
        </trans-unit>
        <trans-unit id="b55c4a6cee448bd6a9c141071ab600ad40521604" translate="yes" xml:space="preserve">
          <source>UserAgent::isMobile()</source>
          <target state="translated">UserAgent::isMobile()</target>
        </trans-unit>
        <trans-unit id="0ce4f84e8d9af20f33d19477f51e137462406b3c" translate="yes" xml:space="preserve">
          <source>UserAgent::isReferral()</source>
          <target state="translated">UserAgent::isReferral()</target>
        </trans-unit>
        <trans-unit id="540a298c3fffbbfc2b85a43a6f83d61c8028c502" translate="yes" xml:space="preserve">
          <source>UserAgent::isRobot()</source>
          <target state="translated">UserAgent::isRobot()</target>
        </trans-unit>
        <trans-unit id="a6070ccda5846ccb46509e8cc2749783c4812ac0" translate="yes" xml:space="preserve">
          <source>UserAgent::parse()</source>
          <target state="translated">UserAgent::parse()</target>
        </trans-unit>
        <trans-unit id="566a62c3fc85114187861d35c59f2874c045eaf9" translate="yes" xml:space="preserve">
          <source>Userinfo</source>
          <target state="translated">Userinfo</target>
        </trans-unit>
        <trans-unit id="56ff7efca605f2fa7cf53469e90c96dd7f34a818" translate="yes" xml:space="preserve">
          <source>Uses &lt;code&gt;CodeIgniter\Test\Fabricator&lt;/code&gt; to create a random item and add it to the database.</source>
          <target state="translated">사용 &lt;code&gt;CodeIgniter\Test\Fabricator&lt;/code&gt; 임의의 항목을 만들고 데이터베이스에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84b15eaf3dbfda15e29b08179a1ad24e894a41eb" translate="yes" xml:space="preserve">
          <source>Using Arrays as Field Names</source>
          <target state="translated">필드 이름으로 배열 사용</target>
        </trans-unit>
        <trans-unit id="aa5f8f9d022bd70ecd62fae5ed7de5644b2cd4c7" translate="yes" xml:space="preserve">
          <source>Using Associative Arrays In a Request Parameter</source>
          <target state="translated">요청 매개 변수에서 연관 배열 사용</target>
        </trans-unit>
        <trans-unit id="f76ecd7597146dbd1722b9150c88b958fbb09519" translate="yes" xml:space="preserve">
          <source>Using CodeIgniter Drivers</source>
          <target state="translated">CodeIgniter 드라이버 사용</target>
        </trans-unit>
        <trans-unit id="c8bdf35ae7763a15d2e3f931a80fd6ca6c02ee51" translate="yes" xml:space="preserve">
          <source>Using CodeIgniter Libraries</source>
          <target state="translated">CodeIgniter 라이브러리 사용</target>
        </trans-unit>
        <trans-unit id="bf75e788b6e9966e92ab43f914f8449543652d52" translate="yes" xml:space="preserve">
          <source>Using CodeIgniter&amp;rsquo;s Model</source>
          <target state="translated">CodeIgniter의 모델 사용</target>
        </trans-unit>
        <trans-unit id="808c6a57cc9881e1da961f1e69cffe2eb871932a" translate="yes" xml:space="preserve">
          <source>Using CodeIgniter's Model</source>
          <target state="translated">CodeIgniter의 모델 사용</target>
        </trans-unit>
        <trans-unit id="27258d98d56b71732335aa41ba8d8412b81f378c" translate="yes" xml:space="preserve">
          <source>Using CodeIgniter’s Model</source>
          <target state="translated">CodeIgniter의 모델 사용</target>
        </trans-unit>
        <trans-unit id="07a9d30019569868517a24efef56d5469311168d" translate="yes" xml:space="preserve">
          <source>Using Entity Classes</source>
          <target state="translated">엔티티 클래스 사용</target>
        </trans-unit>
        <trans-unit id="1e21cf29317192a9b222e72648af9f9903fc065c" translate="yes" xml:space="preserve">
          <source>Using Exceptions</source>
          <target state="translated">예외 사용</target>
        </trans-unit>
        <trans-unit id="9f47d0ae5bd8aedd8b31fc7d2bee1b59e6edb19f" translate="yes" xml:space="preserve">
          <source>Using HTTP verbs in routes</source>
          <target state="translated">경로에서 HTTP 동사 사용</target>
        </trans-unit>
        <trans-unit id="30d7a5e9ef9f86d9c38462943ae38129f3c12958" translate="yes" xml:space="preserve">
          <source>Using HTTP verbs is of course, optional.</source>
          <target state="translated">HTTP 동사를 사용하는 것은 물론 선택 사항입니다.</target>
        </trans-unit>
        <trans-unit id="4a39f4681135cbbb330440bc2fd1d12ae1679014" translate="yes" xml:space="preserve">
          <source>Using Help Command</source>
          <target state="translated">도움말 명령 사용</target>
        </trans-unit>
        <trans-unit id="0e0e085c7ac853029f0faae32be00c59e9ffbff2" translate="yes" xml:space="preserve">
          <source>Using Kint</source>
          <target state="translated">Kint 사용</target>
        </trans-unit>
        <trans-unit id="ad1506bd018e654d4a536043f40b9f5a53d7df02" translate="yes" xml:space="preserve">
          <source>Using Layouts in Views</source>
          <target state="translated">뷰에서 레이아웃 사용</target>
        </trans-unit>
        <trans-unit id="5c901f4161e46babc5ebeeb64730e66b4fe9fae6" translate="yes" xml:space="preserve">
          <source>Using Multiple Log Handlers</source>
          <target state="translated">여러 로그 처리기 사용</target>
        </trans-unit>
        <trans-unit id="db228500c31df21a9af4792e51175c02a2513d98" translate="yes" xml:space="preserve">
          <source>Using Named Routes</source>
          <target state="translated">명명 된 경로 사용</target>
        </trans-unit>
        <trans-unit id="cb2ddab5a15cdd3f77723c663afb5b389b1f287f" translate="yes" xml:space="preserve">
          <source>Using POST, GET, COOKIE, or SERVER Data</source>
          <target state="translated">POST, GET, COOKIE 또는 SERVER 데이터 사용</target>
        </trans-unit>
        <trans-unit id="bf105509b8d570d8db2b93c2ad7c63ed6b7a5339" translate="yes" xml:space="preserve">
          <source>Using Responses</source>
          <target state="translated">응답 사용</target>
        </trans-unit>
        <trans-unit id="dfdf58371b7a63922e4e2269663e0630e4df213b" translate="yes" xml:space="preserve">
          <source>Using Seeders</source>
          <target state="translated">파종기 사용</target>
        </trans-unit>
        <trans-unit id="a906b1ffe2a71562becbbab37e92a050105deade" translate="yes" xml:space="preserve">
          <source>Using Third-Party Loggers</source>
          <target state="translated">타사 로거 사용</target>
        </trans-unit>
        <trans-unit id="1550288da8cce5e3ed139c5bb52251d7ba21b4af" translate="yes" xml:space="preserve">
          <source>Using Your Class</source>
          <target state="translated">수업 사용</target>
        </trans-unit>
        <trans-unit id="60bd617a0d006d1be501a839a37afeeedb424a05" translate="yes" xml:space="preserve">
          <source>Using a Helper</source>
          <target state="translated">도우미 사용</target>
        </trans-unit>
        <trans-unit id="277cd9b6f3abc1fde4cbaf5c7ba10eb6187a8d48" translate="yes" xml:space="preserve">
          <source>Using a text editor, create a controller called &lt;strong&gt;Form.php&lt;/strong&gt;. In it, place this code and save it to your &lt;strong&gt;app/Controllers/&lt;/strong&gt; folder:</source>
          <target state="translated">텍스트 편집기를 사용하여 &lt;strong&gt;Form.php&lt;/strong&gt; 라는 컨트롤러를 &lt;strong&gt;만듭니다&lt;/strong&gt; . 여기에이 코드를 넣고 &lt;strong&gt;app / Controllers /&lt;/strong&gt; 폴더에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="712147defeb0e9295c1d630eafd5f8a930abb200" translate="yes" xml:space="preserve">
          <source>Using a text editor, create a controller called Form.php. In it, place this code and save it to your application/controllers/ folder:</source>
          <target state="translated">텍스트 편집기를 사용하여 Form.php라는 컨트롤러를 만듭니다. 여기 에이 코드를 넣고 application / controllers / 폴더에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="ad409e77609252c45d888d2309d82f804946ed91" translate="yes" xml:space="preserve">
          <source>Using a text editor, create a controller called Upload.php. In it, place this code and save it to your &lt;strong&gt;application/controllers/&lt;/strong&gt; directory:</source>
          <target state="translated">텍스트 편집기를 사용하여 Upload.php라는 컨트롤러를 만듭니다. 여기 에이 코드를 넣고 &lt;strong&gt;application / controllers /&lt;/strong&gt; 디렉토리에 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="3d979b86bc20541ecd02eabf74feaf7e799e05ec" translate="yes" xml:space="preserve">
          <source>Using a text editor, create a controller called Xmlrpc_client.php. In it, place this code and save it to your application/controllers/ folder:</source>
          <target state="translated">텍스트 편집기를 사용하여 Xmlrpc_client.php라는 컨트롤러를 만듭니다. 여기 에이 코드를 넣고 application / controllers / 폴더에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="5acb5f4374db15001022d2532c16e70bbad22499" translate="yes" xml:space="preserve">
          <source>Using a text editor, create a controller called Xmlrpc_server.php. In it, place this code and save it to your application/controllers/ folder:</source>
          <target state="translated">텍스트 편집기를 사용하여 Xmlrpc_server.php라는 컨트롤러를 만듭니다. 여기 에이 코드를 넣고 application / controllers / 폴더에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="3ffff05e1485106f54847ada9e87210d1cb75004" translate="yes" xml:space="preserve">
          <source>Using a text editor, create a form called &lt;strong&gt;Signup.php&lt;/strong&gt;. In it, place this code and save it to your &lt;strong&gt;app/Views/&lt;/strong&gt; folder:</source>
          <target state="translated">텍스트 편집기를 사용하여 &lt;strong&gt;Signup.php&lt;/strong&gt; 라는 양식을 만듭니다 . 여기에이 코드를 넣고 &lt;strong&gt;app / Views /&lt;/strong&gt; 폴더에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="c61ff1b8f607c9fc8e7493f72f53d5d44b322b6d" translate="yes" xml:space="preserve">
          <source>Using a text editor, create a form called &lt;strong&gt;Success.php&lt;/strong&gt;. In it, place this code and save it to your &lt;strong&gt;app/Views/&lt;/strong&gt; folder:</source>
          <target state="translated">텍스트 편집기를 사용하여 &lt;strong&gt;Success.php&lt;/strong&gt; 라는 양식을 만듭니다 . 여기에이 코드를 넣고 &lt;strong&gt;app / Views /&lt;/strong&gt; 폴더에 저장합니다.</target>
        </trans-unit>
        <trans-unit id="0430d3202975dbd773f30a7f13554ea82e5c5a0e" translate="yes" xml:space="preserve">
          <source>Using a text editor, create a form called formsuccess.php. In it, place this code and save it to your application/views/ folder:</source>
          <target state="translated">텍스트 편집기를 사용하여 formsuccess.php라는 폼을 만듭니다. 여기 에이 코드를 넣고 application / views / 폴더에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="7590c580ab4d9cd7b81a2570900897501528f078" translate="yes" xml:space="preserve">
          <source>Using a text editor, create a form called myform.php. In it, place this code and save it to your application/views/ folder:</source>
          <target state="translated">텍스트 편집기를 사용하여 myform.php라는 양식을 작성하십시오. 여기 에이 코드를 넣고 application / views / 폴더에 저장하십시오.</target>
        </trans-unit>
        <trans-unit id="47391cf41f06bcb309b46e1ff635e1314fa18d05" translate="yes" xml:space="preserve">
          <source>Using a text editor, create a form called upload_form.php. In it, place this code and save it to your &lt;strong&gt;application/views/&lt;/strong&gt; directory:</source>
          <target state="translated">텍스트 편집기를 사용하여 upload_form.php라는 폼을 만듭니다. 여기 에이 코드를 넣고 &lt;strong&gt;application / views /&lt;/strong&gt; 디렉토리에 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="c7d2276323573cea6412df3b6ad98051edcc5010" translate="yes" xml:space="preserve">
          <source>Using a text editor, create a form called upload_success.php. In it, place this code and save it to your &lt;strong&gt;application/views/&lt;/strong&gt; directory:</source>
          <target state="translated">텍스트 편집기를 사용하여 upload_success.php라는 폼을 만듭니다. 여기 에이 코드를 넣고 &lt;strong&gt;application / views /&lt;/strong&gt; 디렉토리에 저장하십시오 .</target>
        </trans-unit>
        <trans-unit id="be321f14964e694b5e82bc4bdf2447c88099623c" translate="yes" xml:space="preserve">
          <source>Using custom parameters</source>
          <target state="translated">맞춤 매개 변수 사용</target>
        </trans-unit>
        <trans-unit id="9a6e955a80ea81a5fdcd952ed0008c7765317baf" translate="yes" xml:space="preserve">
          <source>Using custom routing rules, you have the power to map any URI to any controller and method, and break free from the normal convention:</source>
          <target state="translated">사용자 지정 라우팅 규칙을 사용하면 모든 URI를 컨트롤러 및 메서드에 매핑 할 수 있고 일반적인 규칙에서 벗어날 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="383ca7c3c3f5bd0b586d99fec453636fcd19b356" translate="yes" xml:space="preserve">
          <source>Using custom routing rules, you have the power to map any URI to any controller and method, and break free from the normal convention: &lt;code&gt;http://example.com/[controller-class]/[controller-method]/[arguments]&lt;/code&gt;</source>
          <target state="translated">사용자 지정 라우팅 규칙을 사용하면 모든 URI를 모든 컨트롤러 및 메서드에 매핑하고 일반적인 규칙에서 벗어날 수 있습니다. &lt;code&gt;http://example.com/[controller-class]/[controller-method]/[arguments]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3f03795690510614a8ec919fc999fac545c4c80f" translate="yes" xml:space="preserve">
          <source>Using language lines as form labels</source>
          <target state="translated">언어 레이블을 양식 레이블로 사용</target>
        </trans-unit>
        <trans-unit id="bfcf1ea57eb1f68400d1f27fe4367df49a8c64d5" translate="yes" xml:space="preserve">
          <source>Using the &lt;code&gt;Parser&lt;/code&gt;, your view templates are processed only by the Parser itself, and not like a conventional view PHP script. PHP code in such a script is ignored by the parser, and only substitutions are performed.</source>
          <target state="translated">&lt;code&gt;Parser&lt;/code&gt; 를 사용하면 뷰 템플릿은 파서 자체에 의해서만 처리되며 일반적인 뷰 PHP 스크립트와는 다릅니다. 이러한 스크립트의 PHP 코드는 파서에 의해 무시되고 대체 만 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="7e5df308d44127c49f162e2d658b7a2d352adc22" translate="yes" xml:space="preserve">
          <source>Using the Benchmark Class</source>
          <target state="translated">벤치 마크 클래스 사용</target>
        </trans-unit>
        <trans-unit id="3b03cd29da8197e046910ba40e696ae2de4751dc" translate="yes" xml:space="preserve">
          <source>Using the CAPTCHA helper</source>
          <target state="translated">보안 문자 도우미 사용</target>
        </trans-unit>
        <trans-unit id="dc52e1f1f970a4b7c1a22a2910df7f9d5a2186bb" translate="yes" xml:space="preserve">
          <source>Using the Calendaring Class</source>
          <target state="translated">캘린더 클래스 사용</target>
        </trans-unit>
        <trans-unit id="308f1c94e77e1c787810a236889c635e459af7cd" translate="yes" xml:space="preserve">
          <source>Using the Cart Class</source>
          <target state="translated">카트 클래스 사용</target>
        </trans-unit>
        <trans-unit id="3644b309da96bfd3f6c966703f08c7b3d36dec91" translate="yes" xml:space="preserve">
          <source>Using the Database Utilities</source>
          <target state="translated">데이터베이스 유틸리티 사용</target>
        </trans-unit>
        <trans-unit id="252048cbb99954f36e61c001082d16a12bec860c" translate="yes" xml:space="preserve">
          <source>Using the Email Library</source>
          <target state="translated">이메일 라이브러리 사용</target>
        </trans-unit>
        <trans-unit id="b1ee37f78d742204c4da9e96918f9c06143e1104" translate="yes" xml:space="preserve">
          <source>Using the Encrypt Library</source>
          <target state="translated">암호화 라이브러리 사용</target>
        </trans-unit>
        <trans-unit id="2f8d7bd52d5580c00a19fc7e83d39524978708b1" translate="yes" xml:space="preserve">
          <source>Using the Encryption Library</source>
          <target state="translated">암호화 라이브러리 사용</target>
        </trans-unit>
        <trans-unit id="393a26ad8a256c18e46840fe9e82826476ad7695" translate="yes" xml:space="preserve">
          <source>Using the Encryption Service Directly</source>
          <target state="translated">암호화 서비스를 직접 사용</target>
        </trans-unit>
        <trans-unit id="db58310e835ae274ca8120032509d8b14723bc0c" translate="yes" xml:space="preserve">
          <source>Using the Iterator</source>
          <target state="translated">반복기 사용</target>
        </trans-unit>
        <trans-unit id="8eaeaf155c20b65b0ef9075a008d4f444cd85967" translate="yes" xml:space="preserve">
          <source>Using the Javascript Class</source>
          <target state="translated">자바 스크립트 클래스 사용</target>
        </trans-unit>
        <trans-unit id="c94db2233e6bc035b9579ef29e8334e2171ab1d3" translate="yes" xml:space="preserve">
          <source>Using the Language Class</source>
          <target state="translated">언어 클래스 사용</target>
        </trans-unit>
        <trans-unit id="60e3735483e0c8961b9503479f7ccf453b4431f7" translate="yes" xml:space="preserve">
          <source>Using the Session Class</source>
          <target state="translated">세션 클래스 사용</target>
        </trans-unit>
        <trans-unit id="e91301be7b6ca3d9f83980cb695b529916076126" translate="yes" xml:space="preserve">
          <source>Using the Table Class</source>
          <target state="translated">테이블 클래스 사용</target>
        </trans-unit>
        <trans-unit id="72a97da8115c495151180b02afaa3638d5dd9710" translate="yes" xml:space="preserve">
          <source>Using the Template Parser Class</source>
          <target state="translated">템플릿 파서 클래스 사용</target>
        </trans-unit>
        <trans-unit id="d6d0f12bdbddb1b02b1ac923c8d5455d1dff1917" translate="yes" xml:space="preserve">
          <source>Using the Timer</source>
          <target state="translated">타이머 사용</target>
        </trans-unit>
        <trans-unit id="01e28f094d1ebe99f2a9705e5e56bc0891d63a88" translate="yes" xml:space="preserve">
          <source>Using the Trackback Class</source>
          <target state="translated">트랙백 클래스 사용</target>
        </trans-unit>
        <trans-unit id="5bc973f067436f2dcb11ef2f4be47f952875b148" translate="yes" xml:space="preserve">
          <source>Using the Typography Class</source>
          <target state="translated">타이포그래피 클래스 사용</target>
        </trans-unit>
        <trans-unit id="de280aa934c7460d9d0faeeb7c2c56ccdde87bdf" translate="yes" xml:space="preserve">
          <source>Using the Unit Testing Library</source>
          <target state="translated">단위 테스트 라이브러리 사용</target>
        </trans-unit>
        <trans-unit id="de36b4e5bc09ed52a17a44f650537ab8a76603ec" translate="yes" xml:space="preserve">
          <source>Using the User Agent Class</source>
          <target state="translated">사용자 에이전트 클래스 사용</target>
        </trans-unit>
        <trans-unit id="79dbfd55b8abb508259947ffbb1ee4fe43d6178d" translate="yes" xml:space="preserve">
          <source>Using the View Parser Class</source>
          <target state="translated">뷰 파서 클래스 사용</target>
        </trans-unit>
        <trans-unit id="2f4b211acf1aa9f29c775fc71a93fe78ef71a519" translate="yes" xml:space="preserve">
          <source>Using the XML-RPC Class</source>
          <target state="translated">XML-RPC 클래스 사용</target>
        </trans-unit>
        <trans-unit id="ee38cf45bd78f3cfe06f72b6be872a78f6ede9a8" translate="yes" xml:space="preserve">
          <source>Using the Zip Encoding Class</source>
          <target state="translated">Zip 인코딩 클래스 사용</target>
        </trans-unit>
        <trans-unit id="76118cd5588198c64c528c61f193d8f9e67c8a02" translate="yes" xml:space="preserve">
          <source>Using the above example, day numbers 3, 7, 13, and 26 will become links pointing to the URLs you&amp;rsquo;ve provided.</source>
          <target state="translated">위의 예를 사용하면 3 일, 7 일, 13 일 및 26 일은 제공 한 URL을 가리키는 링크가됩니다.</target>
        </trans-unit>
        <trans-unit id="647be215d7c94d3c1089c5cb90317c0a8679b7f5" translate="yes" xml:space="preserve">
          <source>Using the above example, if the new_post method is requested, the server will expect a class to exist with this prototype:</source>
          <target state="translated">위 예제를 사용하여 new_post 메소드가 요청되면 서버는이 프로토 타입으로 클래스가 존재할 것으로 예상합니다.</target>
        </trans-unit>
        <trans-unit id="676d8820fe8a000b48c6a2e58b35316edc9a5a88" translate="yes" xml:space="preserve">
          <source>Using the array method, you will pass &lt;code&gt;key =&amp;gt; value&lt;/code&gt; pairs. You can pass as many or as few values as you&amp;rsquo;d like. Omitted keys will use the default values inherited in the calendar class.</source>
          <target state="translated">배열 방법을 사용하면 &lt;code&gt;key =&amp;gt; value&lt;/code&gt; 쌍을 전달 합니다 . 원하는만큼 값을 전달할 수 있습니다. 생략 된 키는 달력 클래스에서 상속 된 기본값을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="6b806925546847c0417d8ce9007efb3bb615637d" translate="yes" xml:space="preserve">
          <source>Using the example controller you created in the &lt;a href=&quot;controllers&quot;&gt;controller&lt;/a&gt; page, let&amp;rsquo;s add a view to it.</source>
          <target state="translated">&lt;a href=&quot;controllers&quot;&gt;컨트롤러&lt;/a&gt; 페이지 에서 생성 한 예제 컨트롤러를 사용하여 뷰를 추가하겠습니다.</target>
        </trans-unit>
        <trans-unit id="67af5b2fbf426c4982dfe1f280e7c13b01ce7d84" translate="yes" xml:space="preserve">
          <source>Using the example controller you created in the controller page, let&amp;rsquo;s add a view to it.</source>
          <target state="translated">컨트롤러 페이지에서 만든 예제 컨트롤러를 사용하여 뷰를 추가해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="e82b34ec110aebe7115fd9d91dad28c515c5f452" translate="yes" xml:space="preserve">
          <source>Using the php://input stream</source>
          <target state="translated">php : // input 스트림 사용</target>
        </trans-unit>
        <trans-unit id="d14eb85dbb864fe520d3c6e95fe5ec91dcc5819d" translate="yes" xml:space="preserve">
          <source>Using this method you can turn the URI into an associative array with this prototype:</source>
          <target state="translated">이 방법을 사용하면이 프로토 타입을 사용하여 URI를 연관 배열로 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb4d3df127222d8c23b874263a2756f9ec9992e2" translate="yes" xml:space="preserve">
          <source>Using this method, an associative array is passed as the first parameter:</source>
          <target state="translated">이 방법을 사용하면 연관 배열이 첫 번째 매개 변수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="2c00bd3d07a76214cce9ba5108409bb7e16cd504" translate="yes" xml:space="preserve">
          <source>Using this method, an associative array is passed to the first parameter:</source>
          <target state="translated">이 방법을 사용하면 연관 배열이 첫 번째 매개 변수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="556de782ebf19237c28961aa9b88330669db5c35" translate="yes" xml:space="preserve">
          <source>Using your database client, connect to your database and run the SQL command below (MySQL). Also, add some seed records. For now, we&amp;rsquo;ll just show you the SQL statements needed to create the table, but you should be aware that this can be done programmatically once you are more familiar with CodeIgniter; you can read about &lt;a href=&quot;../dbmgmt/migration&quot;&gt;Migrations&lt;/a&gt; and &lt;a href=&quot;../dbmgmt/seeds&quot;&gt;Seeds&lt;/a&gt; to create more useful database setups later.</source>
          <target state="translated">데이터베이스 클라이언트를 사용하여 데이터베이스에 연결하고 아래 SQL 명령 (MySQL)을 실행합니다. 또한 일부 시드 레코드를 추가하십시오. 지금은 테이블을 생성하는 데 필요한 SQL 문만 보여 드리지만 CodeIgniter에 익숙해지면 프로그래밍 방식으로 수행 할 수 있습니다. 나중에 더 유용한 데이터베이스 설정을 만들기 위해 &lt;a href=&quot;../dbmgmt/migration&quot;&gt;마이그레이션&lt;/a&gt; 및 &lt;a href=&quot;../dbmgmt/seeds&quot;&gt;시드&lt;/a&gt; 에 대해 읽을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="108c52e0e384f8e3500a407fc6708562d5280fe5" translate="yes" xml:space="preserve">
          <source>Using your text editor, create a file called &lt;code&gt;BlogView.php&lt;/code&gt; and put this in it:</source>
          <target state="translated">텍스트 편집기를 사용하여 &lt;code&gt;BlogView.php&lt;/code&gt; 라는 파일을 만들고 여기 에 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="e578b404d49993c72c552741862a44301e50f490" translate="yes" xml:space="preserve">
          <source>Using your text editor, create a file called blogview.php, and put this in it:</source>
          <target state="translated">텍스트 편집기를 사용하여 blogview.php라는 파일을 작성하고 파일을 넣으십시오.</target>
        </trans-unit>
        <trans-unit id="7c6f6e519af2e15b5d679b2389f6f90862e102e5" translate="yes" xml:space="preserve">
          <source>Usually used for encrypting random access data such as RAM or hard-disk storage.</source>
          <target state="translated">일반적으로 RAM 또는 하드 디스크 스토리지와 같은 임의 액세스 데이터를 암호화하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="011fca5c2a7f33c8e2800679272e51b42926fb80" translate="yes" xml:space="preserve">
          <source>Utf8</source>
          <target state="translated">Utf8</target>
        </trans-unit>
        <trans-unit id="18fdc5ee8b1f8fba8dabaa933373c0483ab7fad7" translate="yes" xml:space="preserve">
          <source>Utilities</source>
          <target state="translated">Utilities</target>
        </trans-unit>
        <trans-unit id="fe55b70dffae7f79c8433a854b7de2c56f4a61e5" translate="yes" xml:space="preserve">
          <source>Utilities/Routes #1859</source>
          <target state="translated">유틸리티 / 노선 # 1859</target>
        </trans-unit>
        <trans-unit id="b1bf2f28ccf72bd698950b8746fc57c8b29ccc31" translate="yes" xml:space="preserve">
          <source>Utilities/Routes #2008</source>
          <target state="translated">유틸리티 / 노선 # 2008</target>
        </trans-unit>
        <trans-unit id="fbd0cfb29778f01ec64520549914935834f42dc5" translate="yes" xml:space="preserve">
          <source>Utility Class</source>
          <target state="translated">유틸리티 클래스</target>
        </trans-unit>
        <trans-unit id="b9aede044654c3c49fb0ddafc4ceccbb15cc8dd3" translate="yes" xml:space="preserve">
          <source>Utilizing CodeIgniter Resources within Your Library</source>
          <target state="translated">라이브러리 내에서 CodeIgniter 리소스 활용</target>
        </trans-unit>
        <trans-unit id="bcdf3cfb3eaf67d14bf11c4c5f602db50368d27d" translate="yes" xml:space="preserve">
          <source>VIEWPATH</source>
          <target state="translated">VIEWPATH</target>
        </trans-unit>
        <trans-unit id="5e63b24dd22c5039be2b1cb3cd9880cd230b9853" translate="yes" xml:space="preserve">
          <source>Vagrantfile.dist #1459</source>
          <target state="translated">Vagrantfile.dist # 1459</target>
        </trans-unit>
        <trans-unit id="f1d2a4ab2cb0a2c6a81b2a3ba1e548a4eba8c4af" translate="yes" xml:space="preserve">
          <source>Valid &lt;code&gt;$returned_values&lt;/code&gt; options are: &lt;code&gt;name&lt;/code&gt;, &lt;code&gt;size&lt;/code&gt;, &lt;code&gt;date&lt;/code&gt;, &lt;code&gt;readable&lt;/code&gt;, &lt;code&gt;writeable&lt;/code&gt;, &lt;code&gt;executable&lt;/code&gt; and &lt;code&gt;fileperms&lt;/code&gt;.</source>
          <target state="translated">유효한 &lt;code&gt;$returned_values&lt;/code&gt; 옵션은 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;size&lt;/code&gt; , &lt;code&gt;date&lt;/code&gt; , &lt;code&gt;readable&lt;/code&gt; , &lt;code&gt;writeable&lt;/code&gt; , &lt;code&gt;executable&lt;/code&gt; 및 &lt;code&gt;fileperms&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5a6543fe005fc1c6d66e9f91f9b018ee14209b59" translate="yes" xml:space="preserve">
          <source>Valid context values: html, js, css, url, attr, raw, null</source>
          <target state="translated">유효한 컨텍스트 값 : html, js, css, url, attr, raw, null</target>
        </trans-unit>
        <trans-unit id="0e3977727a400ea8978af376e4d1d14bbcef04c2" translate="yes" xml:space="preserve">
          <source>Valid methods are: index, show, create, update, new, edit and delete.</source>
          <target state="translated">유효한 메소드는 index, show, create, update, new, edit 및 delete입니다.</target>
        </trans-unit>
        <trans-unit id="5aac7af240e8c8a772fc83a3be8c925baa22a017" translate="yes" xml:space="preserve">
          <source>Valid methods are: index, show, new, create, edit, update, remove and delete.</source>
          <target state="translated">유효한 메소드는 index, show, new, create, edit, update, remove 및 delete입니다.</target>
        </trans-unit>
        <trans-unit id="bef26f1990bf95ba9936468fb1e0c94e399d468f" translate="yes" xml:space="preserve">
          <source>Validate 1 Value</source>
          <target state="translated">1 개 값 검증</target>
        </trans-unit>
        <trans-unit id="45cdc735698887d8859b1c11c0309315a9891d41" translate="yes" xml:space="preserve">
          <source>Validate input data</source>
          <target state="translated">입력 데이터 확인</target>
        </trans-unit>
        <trans-unit id="3e685b279eb7821904989a5aaae5d0c133731ef9" translate="yes" xml:space="preserve">
          <source>Validate one value against a rule:</source>
          <target state="translated">규칙에 대해 하나의 값을 검증합니다.</target>
        </trans-unit>
        <trans-unit id="8a16b4fe08bf4c3849a40ea92291a0eabcc1a988" translate="yes" xml:space="preserve">
          <source>Validate the data to ensure it conforms to the correct type, length, size, etc.</source>
          <target state="translated">데이터가 올바른 유형, 길이, 크기 등에 맞는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="b88b0837fb788c2dae29804bce82ec92737b6587" translate="yes" xml:space="preserve">
          <source>Validating Data</source>
          <target state="translated">데이터 검증</target>
        </trans-unit>
        <trans-unit id="bd6846be1420003fb882142250e66f85c9189952" translate="yes" xml:space="preserve">
          <source>Validating Keys that are Arrays</source>
          <target state="translated">배열 인 키 검증</target>
        </trans-unit>
        <trans-unit id="c5740c907221f318b9005bb78a4d1491010fabed" translate="yes" xml:space="preserve">
          <source>Validating an Array (other than $_POST)</source>
          <target state="translated">배열 유효성 검사 ($ _POST 이외)</target>
        </trans-unit>
        <trans-unit id="425980d64a635054210d2e5e9c02f620bfe83640" translate="yes" xml:space="preserve">
          <source>Validating data</source>
          <target state="translated">데이터 검증</target>
        </trans-unit>
        <trans-unit id="dd74d182c641e4c78502d863b44d0aeff1575e54" translate="yes" xml:space="preserve">
          <source>Validation</source>
          <target state="translated">Validation</target>
        </trans-unit>
        <trans-unit id="975a943336e05f680180e758143dd0653ed9b16c" translate="yes" xml:space="preserve">
          <source>Validation #1345</source>
          <target state="translated">검증 # 1345</target>
        </trans-unit>
        <trans-unit id="4f8a2e12fb2d2d8bfeefb8258e72c220133ea60d" translate="yes" xml:space="preserve">
          <source>Validation #1769</source>
          <target state="translated">검증 # 1769</target>
        </trans-unit>
        <trans-unit id="f16c1c23196c3073ff35034607adb384cbb15a58" translate="yes" xml:space="preserve">
          <source>Validation #1952</source>
          <target state="translated">검증 # 1952</target>
        </trans-unit>
        <trans-unit id="2c4e6cd0201a6bf23c765dd374132e4ea576693b" translate="yes" xml:space="preserve">
          <source>Validation #2268</source>
          <target state="translated">검증 # 2268</target>
        </trans-unit>
        <trans-unit id="48fadc7a4b7f6312d3b0fe0263dd4f3dbf2a9415" translate="yes" xml:space="preserve">
          <source>Validation #2284, 2341</source>
          <target state="translated">검증 # 2284, 2341</target>
        </trans-unit>
        <trans-unit id="aef97f794ee7b3c84a65514df780bccd8e56c5d9" translate="yes" xml:space="preserve">
          <source>Validation #37dbc1, #1763</source>
          <target state="translated">유효성 검사 # 37dbc1, # 1763</target>
        </trans-unit>
        <trans-unit id="b662f08cb3a76b550e8e3fbbe8743831d5f8d4df" translate="yes" xml:space="preserve">
          <source>Validation /</source>
          <target state="translated">검증 /</target>
        </trans-unit>
        <trans-unit id="ff0350a0566a384245e072baa6297491ead35220" translate="yes" xml:space="preserve">
          <source>Validation Placeholders</source>
          <target state="translated">유효성 검사 자리 표시 자</target>
        </trans-unit>
        <trans-unit id="dc293164d7fe4f1e890508932036af433fcf4492" translate="yes" xml:space="preserve">
          <source>Validation can also be handled automatically in the model, but sometimes it&amp;rsquo;s easier to do it in the controller. Where is up to you.</source>
          <target state="translated">유효성 검사는 모델에서 자동으로 처리 될 수도 있지만 때로는 컨트롤러에서 수행하는 것이 더 쉽습니다. 당신에게 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc5d4f9564b94026632c14f0d32995ff3bd21103" translate="yes" xml:space="preserve">
          <source>Validation rules have been enhanced</source>
          <target state="translated">유효성 검사 규칙이 향상되었습니다.</target>
        </trans-unit>
        <trans-unit id="7edf67f9e59fd706d46d72583c53859d5930718a" translate="yes" xml:space="preserve">
          <source>Validation.equals, not_equals</source>
          <target state="translated">Validation.equals, not_equals</target>
        </trans-unit>
        <trans-unit id="0acc49b2e462cbccc626848c125e2b679f68d540" translate="yes" xml:space="preserve">
          <source>Validation/</source>
          <target state="translated">Validation/</target>
        </trans-unit>
        <trans-unit id="a14aa2c958947c03ed02f5404ce504f1b1c69ab1" translate="yes" xml:space="preserve">
          <source>ValidationTest #1562</source>
          <target state="translated">ValidationTest # 1562</target>
        </trans-unit>
        <trans-unit id="ef3fb581b36ce14f16743c6a666476fa6fd92b48" translate="yes" xml:space="preserve">
          <source>ValidationTest #1763</source>
          <target state="translated">ValidationTest # 1763</target>
        </trans-unit>
        <trans-unit id="633e56a008a50c131e8b25f8e1a53679ca1af72a" translate="yes" xml:space="preserve">
          <source>Value if key is found, NULL if not</source>
          <target state="translated">키가 발견되면 값, 그렇지 않으면 NULL</target>
        </trans-unit>
        <trans-unit id="b7ee726883e4af4dd579f2ca87bee8ef40aad644" translate="yes" xml:space="preserve">
          <source>Value of the specified item key, or an array of all flashdata</source>
          <target state="translated">지정된 항목 키의 값 또는 모든 플래시 데이터의 배열</target>
        </trans-unit>
        <trans-unit id="142ef6844bcad8c3e766ae75ba385e1b60ccd60f" translate="yes" xml:space="preserve">
          <source>Value of the specified item key, or an array of all tempdata</source>
          <target state="translated">지정된 항목 키의 값 또는 모든 임시 데이터의 배열</target>
        </trans-unit>
        <trans-unit id="bcbd3172de6aac8ff8d00010817c34667e8b130a" translate="yes" xml:space="preserve">
          <source>Value of the specified item key, or an array of all userdata</source>
          <target state="translated">지정된 항목 키의 값 또는 모든 사용자 데이터의 배열</target>
        </trans-unit>
        <trans-unit id="d72037fb88a11df913ad55457cd6f3b3f049bb8f" translate="yes" xml:space="preserve">
          <source>Values are automatically escaped, producing safer queries.</source>
          <target state="translated">값이 자동으로 이스케이프되어보다 안전한 쿼리를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7d277f6b7e307e5149e466db52676606b61dafca" translate="yes" xml:space="preserve">
          <source>Variable Names</source>
          <target state="translated">변수 이름</target>
        </trans-unit>
        <trans-unit id="890b905cfe0d374ee1bd064a71804db63977006f" translate="yes" xml:space="preserve">
          <source>Variable Pairs</source>
          <target state="translated">변수 쌍</target>
        </trans-unit>
        <trans-unit id="ac018db1f7b00972061adff843d37497d8ee153c" translate="yes" xml:space="preserve">
          <source>Variables</source>
          <target state="translated">Variables</target>
        </trans-unit>
        <trans-unit id="62f10d6acce5cf8d92d7e2efaf23135551ac57fd" translate="yes" xml:space="preserve">
          <source>Varies by delete* method. See the following:</source>
          <target state="translated">delete * 방법에 따라 다릅니다. 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="412e3334bcc6ca006d3c6f98cb8382aae2aa5f27" translate="yes" xml:space="preserve">
          <source>Varies by find* method. See the following:</source>
          <target state="translated">find * 메소드에 따라 다릅니다. 다음을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="cd27fde92f2b119a60793a72de5f36defe489e5e" translate="yes" xml:space="preserve">
          <source>Various improvements and cleanup to the Email class</source>
          <target state="translated">Email 클래스의 다양한 개선 및 정리</target>
        </trans-unit>
        <trans-unit id="cbf808e1bd79e2e295984e795b9968dbe5d0cdbd" translate="yes" xml:space="preserve">
          <source>Verifies that the credit card number matches the format used by the specified provider. Current supported providers are: American Express (amex), China Unionpay (unionpay), Diners Club CarteBlance (carteblanche), Diners Club (dinersclub), Discover Card (discover), Interpayment (interpayment), JCB (jcb), Maestro (maestro), Dankort (dankort), NSPK MIR (mir), Troy (troy), MasterCard (mastercard), Visa (visa), UATP (uatp), Verve (verve), CIBC Convenience Card (cibc), Royal Bank of Canada Client Card (rbc), TD Canada Trust Access Card (tdtrust), Scotiabank Scotia Card (scotia), BMO ABM Card (bmoabm), HSBC Canada Card (hsbc)</source>
          <target state="translated">신용 카드 번호가 지정된 공급자가 사용하는 형식과 일치하는지 확인합니다. 현재 지원되는 제공 업체는 American Express (amex), China Unionpay (unionpay), Diners Club CarteBlance (carteblanche), Diners Club (dinersclub), Discover Card (discover), Interpayment (interpayment), JCB (jcb), Maestro (maestro)입니다. , Dankort (dankort), NSPK MIR (mir), Troy (troy), MasterCard (mastercard), Visa (visa), UATP (uatp), Verve (verve), CIBC Convenience Card (cibc), Royal Bank of Canada 클라이언트 카드 (rbc), TD Canada Trust Access Card (tdtrust), Scotiabank Scotia 카드 (scotia), BMO ABM 카드 (bmoabm), HSBC 캐나다 카드 (hsbc)</target>
        </trans-unit>
        <trans-unit id="a79e0945092cd3ab65bebac510e463f7899d45a7" translate="yes" xml:space="preserve">
          <source>Verify A File</source>
          <target state="translated">파일 확인</target>
        </trans-unit>
        <trans-unit id="3bc12335f84d8432e90c05f556b3c1c6d0a45139" translate="yes" xml:space="preserve">
          <source>Verify that the data is of the correct type, and meets the correct criteria. For example, if a username is submitted it must be validated to contain only permitted characters. It must be of a minimum length, and not exceed a maximum length. The username can&amp;rsquo;t be someone else&amp;rsquo;s existing username, or perhaps even a reserved word. Etc.</source>
          <target state="translated">데이터가 올바른 유형이고 올바른 기준을 충족하는지 확인하십시오. 예를 들어, 사용자 이름이 제출되면 허용 된 문자 만 포함하도록 사용자 이름을 검증해야합니다. 최소 길이 여야하며 최대 길이를 초과하지 않아야합니다. 사용자 이름은 다른 사람의 기존 사용자 이름이거나 예약어 일 수 없습니다. 기타.</target>
        </trans-unit>
        <trans-unit id="0504f71cb49185ea0a13afde3605c21f33fac34a" translate="yes" xml:space="preserve">
          <source>Version 4.0</source>
          <target state="translated">버전 4.0</target>
        </trans-unit>
        <trans-unit id="f8f1a449ed594e12ca026b700f5418484affd129" translate="yes" xml:space="preserve">
          <source>Version 4.0.0</source>
          <target state="translated">버전 4.0.0</target>
        </trans-unit>
        <trans-unit id="2cf33b1eaff0b9d13785bd7ee3f75521350fb78b" translate="yes" xml:space="preserve">
          <source>Version 4.0.0-alpha.1</source>
          <target state="translated">버전 4.0.0-alpha.1</target>
        </trans-unit>
        <trans-unit id="62ef6a9d0390fffb8de853aa181b3f3405a32e19" translate="yes" xml:space="preserve">
          <source>Version 4.0.0-alpha.2</source>
          <target state="translated">Version 4.0.0-alpha.2</target>
        </trans-unit>
        <trans-unit id="1edcf16030875fa56337a0164da4377060ccfc4f" translate="yes" xml:space="preserve">
          <source>Version 4.0.0-alpha.3</source>
          <target state="translated">Version 4.0.0-alpha.3</target>
        </trans-unit>
        <trans-unit id="b3a0b50003ecae5cb2093d6c71d025e5e39d974b" translate="yes" xml:space="preserve">
          <source>Version 4.0.0-alpha.4</source>
          <target state="translated">Version 4.0.0-alpha.4</target>
        </trans-unit>
        <trans-unit id="3cd89b1a0e876e718ad49d7474fab47c8a8c2dec" translate="yes" xml:space="preserve">
          <source>Version 4.0.0-alpha.5</source>
          <target state="translated">Version 4.0.0-alpha.5</target>
        </trans-unit>
        <trans-unit id="560347a79c081f340f547b7352317095bdf0fdbe" translate="yes" xml:space="preserve">
          <source>Version 4.0.0-beta.1</source>
          <target state="translated">Version 4.0.0-beta.1</target>
        </trans-unit>
        <trans-unit id="9c6c8355962bd12a472e4a9814792c07033c8da2" translate="yes" xml:space="preserve">
          <source>Version 4.0.0-beta.2</source>
          <target state="translated">Version 4.0.0-beta.2</target>
        </trans-unit>
        <trans-unit id="231f013933664b0215ce8b713b889d28802214e8" translate="yes" xml:space="preserve">
          <source>Version 4.0.0-beta.3</source>
          <target state="translated">Version 4.0.0-beta.3</target>
        </trans-unit>
        <trans-unit id="ff569e8981e07ac465e1ef35a4a5f3791b1d1870" translate="yes" xml:space="preserve">
          <source>Version 4.0.0-beta.4</source>
          <target state="translated">Version 4.0.0-beta.4</target>
        </trans-unit>
        <trans-unit id="30cad4e80874ecbfdaf5177ca09bf076d7c56431" translate="yes" xml:space="preserve">
          <source>Version 4.0.0-rc.1</source>
          <target state="translated">Version 4.0.0-rc.1</target>
        </trans-unit>
        <trans-unit id="13c81e54fb788ad0a816c2bc8825d777c8eee194" translate="yes" xml:space="preserve">
          <source>Version 4.0.0-rc.2</source>
          <target state="translated">Version 4.0.0-rc.2</target>
        </trans-unit>
        <trans-unit id="606fba7a88400833253bf13b31c3e4054d0d233f" translate="yes" xml:space="preserve">
          <source>Version 4.0.0-rc.3</source>
          <target state="translated">Version 4.0.0-rc.3</target>
        </trans-unit>
        <trans-unit id="cbde330bd82816359dcc175ff1cdc7074402fe6b" translate="yes" xml:space="preserve">
          <source>Version 4.0.0-rc.4</source>
          <target state="translated">Version 4.0.0-rc.4</target>
        </trans-unit>
        <trans-unit id="24010c965ed7adf8bcb1d7fb3a8bc06c9ed09161" translate="yes" xml:space="preserve">
          <source>Version 4.0.3</source>
          <target state="translated">Version 4.0.3</target>
        </trans-unit>
        <trans-unit id="361621f2f3418528408746d9ed3e6893a1d1402a" translate="yes" xml:space="preserve">
          <source>Version can be used to roll back changes or step forwards programmatically to specific versions. It works just like &lt;code&gt;current()&lt;/code&gt; but ignores &lt;code&gt;$config['migration_version']&lt;/code&gt;.</source>
          <target state="translated">버전을 사용하여 변경 사항을 롤백하거나 프로그래밍 방식으로 특정 버전으로 전달할 수 있습니다. &lt;code&gt;current()&lt;/code&gt; 처럼 작동 하지만 &lt;code&gt;$config['migration_version']&lt;/code&gt; 는 무시합니다 .</target>
        </trans-unit>
        <trans-unit id="69bd4ef9fbd0894a22759c3766b859defbdedbc8" translate="yes" xml:space="preserve">
          <source>View</source>
          <target state="translated">View</target>
        </trans-unit>
        <trans-unit id="c84f4e6aae920accadcdc7ed06b89eebe88c0f51" translate="yes" xml:space="preserve">
          <source>View #1357, #1377, #1410, #1547</source>
          <target state="translated">View #1357, #1377, #1410, #1547</target>
        </trans-unit>
        <trans-unit id="758d6ec7e3c097043f4fbc64c8c265301d7206fc" translate="yes" xml:space="preserve">
          <source>View #1571, #1579</source>
          <target state="translated">View #1571, #1579</target>
        </trans-unit>
        <trans-unit id="b218cd21a5e576686c6c982769cebcaef2a86fa8" translate="yes" xml:space="preserve">
          <source>View #1616</source>
          <target state="translated">View #1616</target>
        </trans-unit>
        <trans-unit id="7204a815b1c0002601c4282af871feeef9f973ca" translate="yes" xml:space="preserve">
          <source>View #1729</source>
          <target state="translated">View #1729</target>
        </trans-unit>
        <trans-unit id="19f594300d56c9f51f5828bfc141c10907d8fab9" translate="yes" xml:space="preserve">
          <source>View #1757</source>
          <target state="translated">View #1757</target>
        </trans-unit>
        <trans-unit id="c3b219f86487c3a02df9f9db4a99f70fb0a8ed78" translate="yes" xml:space="preserve">
          <source>View #1769, #1827</source>
          <target state="translated">View #1769, #1827</target>
        </trans-unit>
        <trans-unit id="2d868a132003c6349f5ef606faea5794c8cf4ae3" translate="yes" xml:space="preserve">
          <source>View #2324</source>
          <target state="translated">View #2324</target>
        </trans-unit>
        <trans-unit id="76a912ad15a101f841ece36fd3add4bc81272624" translate="yes" xml:space="preserve">
          <source>View Cells</source>
          <target state="translated">View Cells</target>
        </trans-unit>
        <trans-unit id="4c021a774a741eccf9d456813b703749387e7f22" translate="yes" xml:space="preserve">
          <source>View Cells allow you to insert HTML that is generated outside of your controller. It simply calls the specified class and method, which must return a string of valid HTML. This method could be in any callable method, found in any class that the autoloader can locate. The only restriction is that the class can not have any constructor parameters. This is intended to be used within views, and is a great aid to modularizing your code.</source>
          <target state="translated">View Cells allow you to insert HTML that is generated outside of your controller. It simply calls the specified class and method, which must return a string of valid HTML. This method could be in any callable method, found in any class that the autoloader can locate. The only restriction is that the class can not have any constructor parameters. This is intended to be used within views, and is a great aid to modularizing your code.</target>
        </trans-unit>
        <trans-unit id="e448829e6209cafb64b7a551d595c965acd9e507" translate="yes" xml:space="preserve">
          <source>View Configuration</source>
          <target state="translated">View Configuration</target>
        </trans-unit>
        <trans-unit id="976e3a2ad567a2c967e7b3124d179c6c2fd72133" translate="yes" xml:space="preserve">
          <source>View Fragments</source>
          <target state="translated">조각보기</target>
        </trans-unit>
        <trans-unit id="3815c71e640f3f22890192ed025ff5f216b18dbd" translate="yes" xml:space="preserve">
          <source>View Layouts</source>
          <target state="translated">View Layouts</target>
        </trans-unit>
        <trans-unit id="92e38bae4ff01d3a8ef43d480053cab76e6fa889" translate="yes" xml:space="preserve">
          <source>View Parser</source>
          <target state="translated">View Parser</target>
        </trans-unit>
        <trans-unit id="046b5d30cd5fb4b48a4f1811f982a11df176c716" translate="yes" xml:space="preserve">
          <source>View Renderer</source>
          <target state="translated">View Renderer</target>
        </trans-unit>
        <trans-unit id="09077a8a39e078a5c1434effe0fecfe2891c3c2c" translate="yes" xml:space="preserve">
          <source>View cells are used within views to insert HTML chunks that are managed by other classes.</source>
          <target state="translated">View cells are used within views to insert HTML chunks that are managed by other classes.</target>
        </trans-unit>
        <trans-unit id="57f383039ec44d2d91c9a5817c00a96e4c5fa4f3" translate="yes" xml:space="preserve">
          <source>View components are used to build what is returned to the user.</source>
          <target state="translated">View components are used to build what is returned to the user.</target>
        </trans-unit>
        <trans-unit id="a930a84f32f68cba38189d0542320fe18a6a829c" translate="yes" xml:space="preserve">
          <source>View content string if $return is set to TRUE, otherwise CI_Loader instance (method chaining)</source>
          <target state="translated">$ return이 TRUE로 설정되면 컨텐츠 문자열을보고 그렇지 않으면 CI_Loader 인스턴스 (메소드 체인)</target>
        </trans-unit>
        <trans-unit id="06ac21f297e49160eb6a698557d01eb25c1a725d" translate="yes" xml:space="preserve">
          <source>View parameters are passed to &lt;code&gt;setData()&lt;/code&gt; as an associative array of data to be replaced in the template. In the above example, the template would contain two variables: {blog_title} and {blog_heading} The first parameter to &lt;code&gt;render()&lt;/code&gt; contains the name of the &lt;a href=&quot;views&quot;&gt;view file&lt;/a&gt;, Where &lt;em&gt;blog_template&lt;/em&gt; is the name of your view file.</source>
          <target state="translated">View parameters are passed to &lt;code&gt;setData()&lt;/code&gt; as an associative array of data to be replaced in the template. In the above example, the template would contain two variables: {blog_title} and {blog_heading} The first parameter to &lt;code&gt;render()&lt;/code&gt; contains the name of the &lt;a href=&quot;views&quot;&gt;view file&lt;/a&gt;, Where &lt;em&gt;blog_template&lt;/em&gt; is the name of your view file.</target>
        </trans-unit>
        <trans-unit id="0731b84cb47267e4cb4651ca7adf96a0b0e92eaa" translate="yes" xml:space="preserve">
          <source>View partials are view files that do not extend any layout. They typically include content that can be reused from view to view. When using view layouts you must use &lt;code&gt;$this-&amp;gt;include()&lt;/code&gt; to include any view partials.</source>
          <target state="translated">View partials are view files that do not extend any layout. They typically include content that can be reused from view to view. When using view layouts you must use &lt;code&gt;$this-&amp;gt;include()&lt;/code&gt; to include any view partials.</target>
        </trans-unit>
        <trans-unit id="0f7ee52b4773d340a0bb8834c842fd36a8d1e92a" translate="yes" xml:space="preserve">
          <source>View/</source>
          <target state="translated">View/</target>
        </trans-unit>
        <trans-unit id="386aa6ae29fe4da958d4b6be0d94cc33c2c97c85" translate="yes" xml:space="preserve">
          <source>ViewTest #1562</source>
          <target state="translated">ViewTest #1562</target>
        </trans-unit>
        <trans-unit id="290a7d600dd7381f1a816a7d49bd1de22c3d4d90" translate="yes" xml:space="preserve">
          <source>ViewTest #1729</source>
          <target state="translated">ViewTest #1729</target>
        </trans-unit>
        <trans-unit id="53e027d385c79c863a679d16e61c39e791fdc596" translate="yes" xml:space="preserve">
          <source>ViewTest #1827, #1836</source>
          <target state="translated">ViewTest #1827, #1836</target>
        </trans-unit>
        <trans-unit id="7c96b52d35704ca53a537d9b5bc8a5750ad8b9f2" translate="yes" xml:space="preserve">
          <source>Viewing Differences</source>
          <target state="translated">Viewing Differences</target>
        </trans-unit>
        <trans-unit id="c7708a4248528f12bd10f9aa58fbbfdd14d15390" translate="yes" xml:space="preserve">
          <source>Viewing Your Benchmark Points</source>
          <target state="translated">Viewing Your Benchmark Points</target>
        </trans-unit>
        <trans-unit id="24be61285e096fa817d4cdb0a0ed8294ea5bd2fb" translate="yes" xml:space="preserve">
          <source>Views</source>
          <target state="translated">Views</target>
        </trans-unit>
        <trans-unit id="3fa35b500df689982211ef9fb7e608a0bbc6c0fe" translate="yes" xml:space="preserve">
          <source>Views #3a4ade</source>
          <target state="translated">Views #3a4ade</target>
        </trans-unit>
        <trans-unit id="219bef155cac42031cd80626f5fda98e1d3439d7" translate="yes" xml:space="preserve">
          <source>Views are generally stored in &lt;strong&gt;/app/Views&lt;/strong&gt;, but can quickly become unwieldy if not organized in some fashion. CodeIgniter does not enforce any type of organization, but a good rule of thumb would be to create a new directory in the &lt;strong&gt;Views&lt;/strong&gt; directory for each controller. Then, name views by the method name. This makes them very easy to find later on. For example, a user&amp;rsquo;s profile might be displayed in a controller named &lt;code&gt;User&lt;/code&gt;, and a method named &lt;code&gt;profile&lt;/code&gt;. You might store the view file for this method in &lt;strong&gt;/app/Views/User/Profile.php&lt;/strong&gt;.</source>
          <target state="translated">Views are generally stored in &lt;strong&gt;/app/Views&lt;/strong&gt;, but can quickly become unwieldy if not organized in some fashion. CodeIgniter does not enforce any type of organization, but a good rule of thumb would be to create a new directory in the &lt;strong&gt;Views&lt;/strong&gt; directory for each controller. Then, name views by the method name. This makes them very easy to find later on. For example, a user&amp;rsquo;s profile might be displayed in a controller named &lt;code&gt;User&lt;/code&gt; , and a method named &lt;code&gt;profile&lt;/code&gt; . You might store the view file for this method in &lt;strong&gt;/app/Views/User/Profile.php&lt;/strong&gt;.</target>
        </trans-unit>
        <trans-unit id="2ce91cb2366db087aa63e23e083b15567b2391a0" translate="yes" xml:space="preserve">
          <source>Views are never called directly, they must be loaded by a &lt;a href=&quot;controllers&quot;&gt;controller&lt;/a&gt;. Remember that in an MVC framework, the Controller acts as the traffic cop, so it is responsible for fetching a particular view. If you have not read the &lt;a href=&quot;controllers&quot;&gt;Controllers&lt;/a&gt; page you should do so before continuing.</source>
          <target state="translated">뷰는 직접 호출되지 않으며 &lt;a href=&quot;controllers&quot;&gt;컨트롤러&lt;/a&gt; 가로드해야합니다 . MVC 프레임 워크에서 컨트롤러는 트래픽 경찰 역할을하므로 특정 뷰를 가져 오는 역할을합니다. &lt;a href=&quot;controllers&quot;&gt;Controllers (컨트롤러)&lt;/a&gt; 페이지를 읽지 않은 경우 계속하기 전에 읽어야합니다 .</target>
        </trans-unit>
        <trans-unit id="7cdbf32bdcf620b5d7b1c7922991ae399b09ecd4" translate="yes" xml:space="preserve">
          <source>Views are never called directly, they must be loaded by a controller. Remember that in an MVC framework, the Controller acts as the traffic cop, so it is responsible for fetching a particular view. If you have not read the &lt;a href=&quot;../incoming/controllers&quot;&gt;Controllers&lt;/a&gt; page, you should do so before continuing.</source>
          <target state="translated">Views are never called directly, they must be loaded by a controller. Remember that in an MVC framework, the Controller acts as the traffic cop, so it is responsible for fetching a particular view. If you have not read the &lt;a href=&quot;../incoming/controllers&quot;&gt;Controllers&lt;/a&gt; page, you should do so before continuing.</target>
        </trans-unit>
        <trans-unit id="85fd52b87ec14169d203f2d17c2570913bf79caa" translate="yes" xml:space="preserve">
          <source>Views are the simplest files and are typically HTML with very small amounts of PHP. The PHP should be very simple, usually just displaying a variable&amp;rsquo;s contents, or looping over some items and displaying their information in a table.</source>
          <target state="translated">Views are the simplest files and are typically HTML with very small amounts of PHP. The PHP should be very simple, usually just displaying a variable&amp;rsquo;s contents, or looping over some items and displaying their information in a table.</target>
        </trans-unit>
        <trans-unit id="1a6f6faed49aacdb2be169a67d7229e7378a27f5" translate="yes" xml:space="preserve">
          <source>Views can be loaded using the class namespace as described in the &lt;a href=&quot;../outgoing/views&quot;&gt;views&lt;/a&gt; documentation:</source>
          <target state="translated">Views can be loaded using the class namespace as described in the &lt;a href=&quot;../outgoing/views&quot;&gt;views&lt;/a&gt; documentation:</target>
        </trans-unit>
        <trans-unit id="25a629c0f70d9e6fd58ed230dd36ff692c3bbda9" translate="yes" xml:space="preserve">
          <source>Views get the data to display from the controllers, who pass it to the views as variables that can be displayed with simple &lt;code&gt;echo&lt;/code&gt; calls. You can also display other views within a view, making it pretty simple to display a common header or footer on every page.</source>
          <target state="translated">Views get the data to display from the controllers, who pass it to the views as variables that can be displayed with simple &lt;code&gt;echo&lt;/code&gt; calls. You can also display other views within a view, making it pretty simple to display a common header or footer on every page.</target>
        </trans-unit>
        <trans-unit id="eb6c40d120c2f52c76fc9d6ad381ed6a49f4a9c9" translate="yes" xml:space="preserve">
          <source>Views/</source>
          <target state="translated">Views/</target>
        </trans-unit>
        <trans-unit id="f6c2f38f460be1257a49684cab655bfa790ef22e" translate="yes" xml:space="preserve">
          <source>Views/ #2283</source>
          <target state="translated">Views/ #2283</target>
        </trans-unit>
        <trans-unit id="93a2ac676e2dfbb888b3515bdcea913386c6831a" translate="yes" xml:space="preserve">
          <source>Views/default_full #622</source>
          <target state="translated">Views/default_full #622</target>
        </trans-unit>
        <trans-unit id="40b9944cdcc8e326733fb21030069b39e608b6a4" translate="yes" xml:space="preserve">
          <source>Views/default_head #622</source>
          <target state="translated">Views/default_head #622</target>
        </trans-unit>
        <trans-unit id="e1fc3721efaf4cfb7fefe5af14d20ee001e2cae8" translate="yes" xml:space="preserve">
          <source>Views/default_simple #622</source>
          <target state="translated">Views/default_simple #622</target>
        </trans-unit>
        <trans-unit id="8d3db0f0cc44445a043bbcdc806b93bdc0808e4c" translate="yes" xml:space="preserve">
          <source>Views/errors/cli/error_404 #1272</source>
          <target state="translated">Views/errors/cli/error_404 #1272</target>
        </trans-unit>
        <trans-unit id="8f16784b85f05b9be35d3a38e7e6354730f335d3" translate="yes" xml:space="preserve">
          <source>Views/list #1828</source>
          <target state="translated">Views/list #1828</target>
        </trans-unit>
        <trans-unit id="77869cb53e6cf592bbd7de363564f1cc5bf41946" translate="yes" xml:space="preserve">
          <source>Views/toolbar.css #1342</source>
          <target state="translated">Views/toolbar.css #1342</target>
        </trans-unit>
        <trans-unit id="79b32537a5f41a5471adaf3b8380e9ef96c4d24c" translate="yes" xml:space="preserve">
          <source>Views/toolbar.tpl #1571</source>
          <target state="translated">Views/toolbar.tpl #1571</target>
        </trans-unit>
        <trans-unit id="b1845a3ff8f36d2a44e6bda9f03c98cc75f05a9b" translate="yes" xml:space="preserve">
          <source>Views/toolbarloader.js #1594</source>
          <target state="translated">Views/toolbarloader.js #1594</target>
        </trans-unit>
        <trans-unit id="f13844357b607f0450f9d9e2c7549780d46d4e66" translate="yes" xml:space="preserve">
          <source>Views/welcome_message #1342</source>
          <target state="translated">Views/welcome_message #1342</target>
        </trans-unit>
        <trans-unit id="fa82f7624541bc2fb792f92c3d2312f4aac63c0e" translate="yes" xml:space="preserve">
          <source>Virtual Hosting</source>
          <target state="translated">가상 호스팅</target>
        </trans-unit>
        <trans-unit id="785d48c8b375838fe2125fd820ba3997f571bbe9" translate="yes" xml:space="preserve">
          <source>Virtualization is an effective way to test your webapp in the environment you plan to deploy on, even if you develop on a different one. Even if you are using the same platform for both, virtualization provides an isolated environment for testing.</source>
          <target state="translated">Virtualization is an effective way to test your webapp in the environment you plan to deploy on, even if you develop on a different one. Even if you are using the same platform for both, virtualization provides an isolated environment for testing.</target>
        </trans-unit>
        <trans-unit id="3331d1e33dd597eb770d6baabd94c47ae4d9b1d1" translate="yes" xml:space="preserve">
          <source>Visit our &lt;a href=&quot;https://github.com/bcit-ci/CodeIgniter/wiki/IRC&quot;&gt;IRC chatroom&lt;/a&gt;</source>
          <target state="translated">&lt;a href=&quot;https://github.com/bcit-ci/CodeIgniter/wiki/IRC&quot;&gt;IRC 대화방&lt;/a&gt; 방문</target>
        </trans-unit>
        <trans-unit id="97c362e39a5006806826672696bb3a192291c6f1" translate="yes" xml:space="preserve">
          <source>Visitor&amp;rsquo;s IP address or &amp;lsquo;0.0.0.0&amp;rsquo; if not valid</source>
          <target state="translated">방문자의 IP 주소 또는 유효하지 않은 경우 '0.0.0.0'</target>
        </trans-unit>
        <trans-unit id="13d98b22589c07007d1530c10cdd7389583a4e08" translate="yes" xml:space="preserve">
          <source>VueJS</source>
          <target state="translated">VueJS</target>
        </trans-unit>
        <trans-unit id="63bcadedfd349e40a43d28ba509aa5d29b101b48" translate="yes" xml:space="preserve">
          <source>W - Image Watermarking</source>
          <target state="translated">W-이미지 워터 마킹</target>
        </trans-unit>
        <trans-unit id="0a49502e4e64f0909fd4faaab12f4f056e7d99ae" translate="yes" xml:space="preserve">
          <source>W3C</source>
          <target state="translated">W3C</target>
        </trans-unit>
        <trans-unit id="7fd4043ba1970eca11412e22e6dd3f9d90d77baa" translate="yes" xml:space="preserve">
          <source>W3C Specification</source>
          <target state="translated">W3C Specification</target>
        </trans-unit>
        <trans-unit id="75d9bf3137e22fbcec1a196bbbcacb1eb07a67c8" translate="yes" xml:space="preserve">
          <source>Waits a certain number of seconds, optionally showing a wait message and waiting for a key press.</source>
          <target state="translated">Waits a certain number of seconds, optionally showing a wait message and waiting for a key press.</target>
        </trans-unit>
        <trans-unit id="e9c45563358e813f157ba81b33143542165ba84e" translate="yes" xml:space="preserve">
          <source>Warning</source>
          <target state="translated">Warning</target>
        </trans-unit>
        <trans-unit id="f8ee57ee29dcb12b5ed75daf589c79df54d803b9" translate="yes" xml:space="preserve">
          <source>Watermarking Preferences</source>
          <target state="translated">워터 마킹 기본 설정</target>
        </trans-unit>
        <trans-unit id="d07c955e1848c2db85690e5ddba5469f114ed945" translate="yes" xml:space="preserve">
          <source>Watermarking an Image</source>
          <target state="translated">이미지 워터 마크</target>
        </trans-unit>
        <trans-unit id="27f5206a25388283d8d5a66dbff00d91fb9d01d4" translate="yes" xml:space="preserve">
          <source>Watermarking is only available using the GD/GD2 library. In addition, even though other libraries are supported, GD is required in order for the script to calculate the image properties. The image processing, however, will be performed with the library you specify.</source>
          <target state="translated">워터 마킹은 GD / GD2 라이브러리를 통해서만 사용할 수 있습니다. 또한 다른 라이브러리가 지원 되더라도 스크립트가 이미지 속성을 계산하려면 GD가 필요합니다. 그러나 이미지 처리는 지정한 라이브러리를 사용하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="4ce86d0e868bbc7622a0dd3e0bc4627b7dca952a" translate="yes" xml:space="preserve">
          <source>We also maintain composer-installable packages on &lt;a href=&quot;https://packagist.org/search/?query=codeigniter4&quot;&gt;packagist.org&lt;/a&gt;. These correspond to the repositories mentioned above:</source>
          <target state="translated">We also maintain composer-installable packages on &lt;a href=&quot;https://packagist.org/search/?query=codeigniter4&quot;&gt;packagist.org&lt;/a&gt;. These correspond to the repositories mentioned above:</target>
        </trans-unit>
        <trans-unit id="d2bf5f7fe29c50bb05d144d5c1b4f2d533d29266" translate="yes" xml:space="preserve">
          <source>We are again using using &lt;strong&gt;esc()&lt;/strong&gt; to help prevent XSS attacks. But this time we also passed &amp;ldquo;url&amp;rdquo; as a second parameter. That&amp;rsquo;s because attack patterns are different depending on the context in which the output is used. You can read more about it &lt;a href=&quot;../general/common_functions&quot;&gt;here&lt;/a&gt;.</source>
          <target state="translated">We are again using using &lt;strong&gt;esc()&lt;/strong&gt; to help prevent XSS attacks. But this time we also passed &amp;ldquo;url&amp;rdquo; as a second parameter. That&amp;rsquo;s because attack patterns are different depending on the context in which the output is used. You can read more about it &lt;a href=&quot;../general/common_functions&quot;&gt;here&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="fe5932756b55d1a44c21e5b0a48d2e65660b2a95" translate="yes" xml:space="preserve">
          <source>We are using the name Someclass purely as an example.</source>
          <target state="translated">우리는 단지 이름으로 Someclass라는 이름을 사용하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9444248f0b66eff7380fa4c5858ebd3f89860ca" translate="yes" xml:space="preserve">
          <source>We can locate the value of &amp;lsquo;fizz&amp;rsquo; by using the search string &amp;ldquo;foo.buzz.fizz&amp;rdquo;. Likewise, the value of baz can be found with &amp;ldquo;foo.bar.baz&amp;rdquo;:</source>
          <target state="translated">We can locate the value of &amp;lsquo;fizz&amp;rsquo; by using the search string &amp;ldquo;foo.buzz.fizz&amp;rdquo;. Likewise, the value of baz can be found with &amp;ldquo;foo.bar.baz&amp;rdquo;:</target>
        </trans-unit>
        <trans-unit id="9c26091714911eaa9193d839d054a5eab8ffc3fb" translate="yes" xml:space="preserve">
          <source>We don&amp;rsquo;t necessarily need to throttle every page on the site. For many web applications, this makes the most sense to apply only to POST requests, though API&amp;rsquo;s might want to limit every request made by a user. In order to apply this to incoming requests, you need to edit &lt;strong&gt;/app/Config/Filters.php&lt;/strong&gt; and first add an alias to the filter:</source>
          <target state="translated">We don&amp;rsquo;t necessarily need to throttle every page on the site. For many web applications, this makes the most sense to apply only to POST requests, though API&amp;rsquo;s might want to limit every request made by a user. In order to apply this to incoming requests, you need to edit &lt;strong&gt;/app/Config/Filters.php&lt;/strong&gt; and first add an alias to the filter:</target>
        </trans-unit>
        <trans-unit id="691e4ddf6ccc47824257bc5ea7078d63cb1ac64c" translate="yes" xml:space="preserve">
          <source>We have an &amp;ldquo;official&amp;rdquo; set of translations in their &lt;a href=&quot;https://github.com/codeigniter4/translations&quot;&gt;own repository&lt;/a&gt;.</source>
          <target state="translated">We have an &amp;ldquo;official&amp;rdquo; set of translations in their &lt;a href=&quot;https://github.com/codeigniter4/translations&quot;&gt;own repository&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="60d09b781792dbfc2b574e070a362000b7cb54f1" translate="yes" xml:space="preserve">
          <source>We hope this will be the last alpha, and that the next pre-release will be our first beta &amp;hellip; fingers crossed!</source>
          <target state="translated">We hope this will be the last alpha, and that the next pre-release will be our first beta &amp;hellip; fingers crossed!</target>
        </trans-unit>
        <trans-unit id="555f5566d5cb451098addbb24389e69db3a8d97e" translate="yes" xml:space="preserve">
          <source>We maintain a &lt;a href=&quot;https://github.com/codeigniter4projects&quot;&gt;codeigniter4projects&lt;/a&gt; organization on Github as well, with projects that are not part of the framework, but which showcase it or make it easier to work with!</source>
          <target state="translated">We maintain a &lt;a href=&quot;https://github.com/codeigniter4projects&quot;&gt;codeigniter4projects&lt;/a&gt; organization on Github as well, with projects that are not part of the framework, but which showcase it or make it easier to work with!</target>
        </trans-unit>
        <trans-unit id="5284fcec433f470c191cb0e0a6c0e03bc48b112e" translate="yes" xml:space="preserve">
          <source>We might imagine that there is a controller named &amp;ldquo;news&amp;rdquo;. The method being called on news would be &amp;ldquo;latest&amp;rdquo;. The news method&amp;rsquo;s job could be to grab 10 news items, and render them on the page. Very often in MVC, you&amp;rsquo;ll see URL patterns that match:</source>
          <target state="translated">&amp;ldquo;news&amp;rdquo;라는 컨트롤러가 있다고 상상할 수 있습니다. 뉴스에서 호출되는 방법은 &quot;최신&quot;입니다. 뉴스 방법의 작업은 10 개의 뉴스 항목을 잡고 페이지에 렌더링하는 것입니다. MVC에서는 종종 다음과 일치하는 URL 패턴이 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="274ff2527afaad412cffbd84fe9d423b8f6fd230" translate="yes" xml:space="preserve">
          <source>We now have an automated changelog generated in the CHANGELOG.md file in the main repo. See it for more details.</source>
          <target state="translated">We now have an automated changelog generated in the CHANGELOG.md file in the main repo. See it for more details.</target>
        </trans-unit>
        <trans-unit id="5c6a81210c6c874e0a9483eed97db23db74ca5d3" translate="yes" xml:space="preserve">
          <source>We recommend using &amp;ldquo;virtual hosting&amp;rdquo; to run your apps. You can set up different aliases for each of the apps you work on,</source>
          <target state="translated">We recommend using &amp;ldquo;virtual hosting&amp;rdquo; to run your apps. You can set up different aliases for each of the apps you work on,</target>
        </trans-unit>
        <trans-unit id="1df44b8288db16ff33b156bd181d7a689dae3229" translate="yes" xml:space="preserve">
          <source>We respect the &lt;a href=&quot;https://owasp.org&quot;&gt;Open Web Application Security Project (OWASP)&lt;/a&gt; and follow their recommendations as much as possible.</source>
          <target state="translated">We respect the &lt;a href=&quot;https://owasp.org&quot;&gt;Open Web Application Security Project (OWASP)&lt;/a&gt; and follow their recommendations as much as possible.</target>
        </trans-unit>
        <trans-unit id="f8a1f05285710fe35541975fbc9c2070336fb6fc" translate="yes" xml:space="preserve">
          <source>We take security seriously. CodeIgniter incorporates a number of features and techniques to either enforce good security practices, or to enable you to do so easily.</source>
          <target state="translated">We take security seriously. CodeIgniter incorporates a number of features and techniques to either enforce good security practices, or to enable you to do so easily.</target>
        </trans-unit>
        <trans-unit id="11aa82e0580e718cb3560ad8fa6ebfd7bdec4648" translate="yes" xml:space="preserve">
          <source>We use the term &amp;ldquo;idiom&amp;rdquo; to refer to a language using its common name, rather than using any of the international standards, such as &amp;ldquo;en&amp;rdquo;, &amp;ldquo;en-US&amp;rdquo;, or &amp;ldquo;en-CA-x-ca&amp;rdquo; for English and some of its variants.</source>
          <target state="translated">우리는 영어에 &quot;en&quot;, &quot;en-US&quot;또는 &quot;en-CA-x-ca&quot;와 같은 국제 표준을 사용하지 않고 공통 이름을 사용하는 언어를 지칭하기 위해 &quot;이디엄&quot;이라는 용어를 사용합니다. 그리고 그 변형 중 일부.</target>
        </trans-unit>
        <trans-unit id="1a444d51a6635df567d5f7b36d1a37fe4255de62" translate="yes" xml:space="preserve">
          <source>We use the terms &amp;ldquo;class&amp;rdquo; and &amp;ldquo;library&amp;rdquo; interchangeably.</source>
          <target state="translated">&amp;ldquo;클래스&amp;rdquo;와&amp;ldquo;라이브러리&amp;rdquo;라는 용어를 서로 바꿔서 사용합니다.</target>
        </trans-unit>
        <trans-unit id="127e3ae23892d27f604203f137a5cd3dac5cf9be" translate="yes" xml:space="preserve">
          <source>We would like to give you a list of combined do&amp;rsquo;s and don&amp;rsquo;ts to help you with that. Please read below.</source>
          <target state="translated">우리는 당신을 도울 수있는 것과하지 말아야 할 것들의 목록을 제공하고자합니다. 아래를 읽으십시오.</target>
        </trans-unit>
        <trans-unit id="3bcdc055757ff69278fabe652fb6e0a9ad85c620" translate="yes" xml:space="preserve">
          <source>Web Page Caching</source>
          <target state="translated">웹 페이지 캐싱</target>
        </trans-unit>
        <trans-unit id="ca4f9dcf204e2037bfe5884867bead98bd9cbaf8" translate="yes" xml:space="preserve">
          <source>Welcome</source>
          <target state="translated">Welcome</target>
        </trans-unit>
        <trans-unit id="33d181315dab3d50ab88cca57148c7c88e37c05f" translate="yes" xml:space="preserve">
          <source>Welcome to CodeIgniter</source>
          <target state="translated">CodeIgniter에 오신 것을 환영합니다</target>
        </trans-unit>
        <trans-unit id="26b32dbdb56390ddb5d691827f4ce6cd0493a00a" translate="yes" xml:space="preserve">
          <source>Welcome to CodeIgniter4</source>
          <target state="translated">Welcome to CodeIgniter4</target>
        </trans-unit>
        <trans-unit id="a711990e33928e14cc85379bd45aed83455d951d" translate="yes" xml:space="preserve">
          <source>What It Does</source>
          <target state="translated">그것이하는 일</target>
        </trans-unit>
        <trans-unit id="c90f73487ddbde76e01a2595db77a8d2dab94679" translate="yes" xml:space="preserve">
          <source>What follows is a &amp;ldquo;hands on&amp;rdquo; tutorial for implementing CodeIgniter&amp;rsquo;s Form Validation.</source>
          <target state="translated">What follows is a &amp;ldquo;hands on&amp;rdquo; tutorial for implementing CodeIgniter&amp;rsquo;s Form Validation.</target>
        </trans-unit>
        <trans-unit id="b9ab8315d2ab4041fe836f3e67a90288d060efc3" translate="yes" xml:space="preserve">
          <source>What follows is a &amp;ldquo;hands on&amp;rdquo; tutorial for implementing CodeIgniters Form Validation.</source>
          <target state="translated">다음은 CodeIgniters Form Validation을 구현하기위한&amp;ldquo;실습&amp;rdquo;자습서입니다.</target>
        </trans-unit>
        <trans-unit id="bb2c49174130b17d6fb293bae450d068fe76f343" translate="yes" xml:space="preserve">
          <source>What is Content Negotiation?</source>
          <target state="translated">What is Content Negotiation?</target>
        </trans-unit>
        <trans-unit id="040544258b1fc6fe2cdb4ed42f96339ab37f52a4" translate="yes" xml:space="preserve">
          <source>What is HTTP?</source>
          <target state="translated">What is HTTP?</target>
        </trans-unit>
        <trans-unit id="da2d90f49afa08fe994c5c9c05be4dcd7dbf9023" translate="yes" xml:space="preserve">
          <source>What is Session Data?</source>
          <target state="translated">세션 데이터 란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="2af7eb0d8353a9338eb32f197f54475e71ce496c" translate="yes" xml:space="preserve">
          <source>What is XML-RPC?</source>
          <target state="translated">XML-RPC 란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="f976987a119bdc1734e183b718ef7804c4053052" translate="yes" xml:space="preserve">
          <source>What is a Controller?</source>
          <target state="translated">컨트롤러 란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="b8b0f9d429f264d020c20e7ac31abb465f7c2139" translate="yes" xml:space="preserve">
          <source>What is a Model?</source>
          <target state="translated">모델이란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="36db4845eedac38615a5b5e9f0169f385d5d5f3a" translate="yes" xml:space="preserve">
          <source>What is a Row ID?</source>
          <target state="translated">행 ID 란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="3b841d258dbdd67b88b7bdb8d5e59dd8ebbec75c" translate="yes" xml:space="preserve">
          <source>What is the CLI?</source>
          <target state="translated">CLI 란 무엇입니까?</target>
        </trans-unit>
        <trans-unit id="8cd5b31127cfe1be56f03df3ab1739280449002a" translate="yes" xml:space="preserve">
          <source>What&amp;rsquo;s with an unhelpful &amp;ldquo;Whoops!&amp;rdquo; page?</source>
          <target state="translated">What&amp;rsquo;s with an unhelpful &amp;ldquo;Whoops!&amp;rdquo; page?</target>
        </trans-unit>
        <trans-unit id="4f3b3e2ac7e80f9536f55ed4ea3c36e86a2546ec" translate="yes" xml:space="preserve">
          <source>Whatever the purpose of the &amp;ldquo;Foo Bar&amp;rdquo; application package, it has its own config files, helpers, language files, libraries, and models. To use these resources in your controllers, you first need to tell the Loader that you are going to be loading resources from a package, by adding the package path via the &lt;code&gt;add_package_path()&lt;/code&gt; method.</source>
          <target state="translated">&amp;ldquo;Foo Bar&amp;rdquo;응용 프로그램 패키지의 용도에 관계없이 자체 구성 파일, 도우미, 언어 파일, 라이브러리 및 모델이 있습니다. 컨트롤러에서 이러한 리소스를 사용하려면 먼저 &lt;code&gt;add_package_path()&lt;/code&gt; 메서드 를 통해 패키지 경로를 추가하여 로더에게 패키지에서 리소스를로드 할 것임을 알려야 합니다.</target>
        </trans-unit>
        <trans-unit id="ebe2957f49eb9fd5b754422e330488f31d37c958" translate="yes" xml:space="preserve">
          <source>Whatever the underlying driver&amp;rsquo;s &amp;ldquo;query&amp;rdquo; function returns</source>
          <target state="translated">기본 드라이버의 &quot;쿼리&quot;함수가 반환하는 것</target>
        </trans-unit>
        <trans-unit id="1df8924ce8c8b42e647ca99c184d6b80c974b234" translate="yes" xml:space="preserve">
          <source>When &lt;code&gt;debug&lt;/code&gt; is passed and set to &lt;code&gt;true&lt;/code&gt;, this will enable additional debugging to echo to STDERR during the script execution. This is done by passing CURLOPT_VERBOSE and echoing the output. So, when you&amp;rsquo;re running a built-in server via &lt;code&gt;spark serve&lt;/code&gt; you will see the output in the console. Otherwise, the output will be written to the server&amp;rsquo;s error log.</source>
          <target state="translated">When &lt;code&gt;debug&lt;/code&gt; is passed and set to &lt;code&gt;true&lt;/code&gt; , this will enable additional debugging to echo to STDERR during the script execution. This is done by passing CURLOPT_VERBOSE and echoing the output. So, when you&amp;rsquo;re running a built-in server via &lt;code&gt;spark serve&lt;/code&gt; you will see the output in the console. Otherwise, the output will be written to the server&amp;rsquo;s error log.</target>
        </trans-unit>
        <trans-unit id="8b664a411b07829fd743f42f6b839b36f144d73a" translate="yes" xml:space="preserve">
          <source>When CodeIgniter loads language files, it will load the one in &lt;strong&gt;system/language/&lt;/strong&gt; first and will then look for an override in your &lt;strong&gt;application/language/&lt;/strong&gt; directory.</source>
          <target state="translated">CodeIgniter가 언어 파일을로드하면 먼저 언어 파일을 &lt;strong&gt;system / language /&lt;/strong&gt; 에로드 한 다음 &lt;strong&gt;application / language /&lt;/strong&gt; 디렉토리 에서 대체를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="a75b21d2ca1dfca7dbf48ab59d1c2f85969fe81c" translate="yes" xml:space="preserve">
          <source>When Things Go Wrong</source>
          <target state="translated">When Things Go Wrong</target>
        </trans-unit>
        <trans-unit id="84f329d0f9b450eb60da87f2302fcb224af5174a" translate="yes" xml:space="preserve">
          <source>When a character set parameter is ommited, &lt;code&gt;$config['charset']&lt;/code&gt; will be used.</source>
          <target state="translated">문자 집합 매개 변수가 생략되면 &lt;code&gt;$config['charset']&lt;/code&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="84e28ec8503c08474698343736a9628bd4b120d5" translate="yes" xml:space="preserve">
          <source>When a model is loaded it does &lt;strong&gt;NOT&lt;/strong&gt; connect automatically to your database. The following options for connecting are available to you:</source>
          <target state="translated">모델이로드되면 데이터베이스에 자동으로 연결 되지 &lt;strong&gt;않습니다&lt;/strong&gt; . 다음과 같은 연결 옵션을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f77ac3351321a1fd37ff0e1f8a0464164f7cb793" translate="yes" xml:space="preserve">
          <source>When a page is loaded, the session class will check to see if a valid session cookie is sent by the user&amp;rsquo;s browser. If a sessions cookie does &lt;strong&gt;not&lt;/strong&gt; exist (or if it doesn&amp;rsquo;t match one stored on the server or has expired) a new session will be created and saved.</source>
          <target state="translated">When a page is loaded, the session class will check to see if a valid session cookie is sent by the user&amp;rsquo;s browser. If a sessions cookie does &lt;strong&gt;not&lt;/strong&gt; exist (or if it doesn&amp;rsquo;t match one stored on the server or has expired) a new session will be created and saved.</target>
        </trans-unit>
        <trans-unit id="3fed9bf1aabdd412e10245d993f9985869a99640" translate="yes" xml:space="preserve">
          <source>When a page is loaded, the session class will check to see if valid session cookie is sent by the user&amp;rsquo;s browser. If a sessions cookie does &lt;strong&gt;not&lt;/strong&gt; exist (or if it doesn&amp;rsquo;t match one stored on the server or has expired) a new session will be created and saved.</source>
          <target state="translated">페이지가로드되면 세션 클래스는 사용자의 브라우저에서 유효한 세션 쿠키가 전송되는지 확인합니다. 응답 세션 쿠키 않으면 &lt;strong&gt;하지&lt;/strong&gt; 존재 (이 서버에 저장된 하나와 일치하지 않거나 만료 된 경우 나) 새로운 세션이 생성되어 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="839803d76fbb6a4470f1234be3f870d190606982" translate="yes" xml:space="preserve">
          <source>When a page is not found that matches the current URI, the system will show a generic 404 view. You can change what happens by specifying an action to happen with the &lt;code&gt;set404Override()&lt;/code&gt; option. The value can be either a valid class/method pair, just like you would show in any route, or a Closure:</source>
          <target state="translated">When a page is not found that matches the current URI, the system will show a generic 404 view. You can change what happens by specifying an action to happen with the &lt;code&gt;set404Override()&lt;/code&gt; option. The value can be either a valid class/method pair, just like you would show in any route, or a Closure:</target>
        </trans-unit>
        <trans-unit id="c966ad1ef976c2cacc5283bf88435802effc5fb3" translate="yes" xml:space="preserve">
          <source>When a relative URI is provided to the &lt;code&gt;request()&lt;/code&gt; method or any of the shortcut methods, it will be combined with the baseURI according to the rules described by &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5.2&quot;&gt;RFC 2986, section 2&lt;/a&gt;. To save you some time, here are some examples of how the combinations are resolved.</source>
          <target state="translated">When a relative URI is provided to the &lt;code&gt;request()&lt;/code&gt; method or any of the shortcut methods, it will be combined with the baseURI according to the rules described by &lt;a href=&quot;https://tools.ietf.org/html/rfc3986#section-5.2&quot;&gt;RFC 2986, section 2&lt;/a&gt;. To save you some time, here are some examples of how the combinations are resolved.</target>
        </trans-unit>
        <trans-unit id="2f6d129e3e029c439e6778f38e7d2057940edd71" translate="yes" xml:space="preserve">
          <source>When a request fails the CSRF validation check, it will redirect to the previous page by default, setting an &lt;code&gt;error&lt;/code&gt; flash message that you can display to the end user. This provides a nicer experience than simply crashing. This can be turned off by editing the &lt;code&gt;$CSRFRedirect&lt;/code&gt; value in &lt;strong&gt;app/Config/App.php&lt;/strong&gt;:</source>
          <target state="translated">When a request fails the CSRF validation check, it will redirect to the previous page by default, setting an &lt;code&gt;error&lt;/code&gt; flash message that you can display to the end user. This provides a nicer experience than simply crashing. This can be turned off by editing the &lt;code&gt;$CSRFRedirect&lt;/code&gt; value in &lt;strong&gt;app/Config/App.php&lt;/strong&gt;:</target>
        </trans-unit>
        <trans-unit id="613ea649ecfe932e3d91c5f19da39aa412d90cf5" translate="yes" xml:space="preserve">
          <source>When a rule group is named identically to a controller class/method it will be used automatically when the &lt;code&gt;run()&lt;/code&gt; method is invoked from that class/method.</source>
          <target state="translated">규칙 그룹의 이름이 컨트롤러 클래스 / 방법과 동일하게 지정되면 해당 클래스 / 방법에서 &lt;code&gt;run()&lt;/code&gt; 메소드가 호출 될 때 자동으로 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="f0f01269d7f63b9d4f7b924f24ec9ac09b4fdef4" translate="yes" xml:space="preserve">
          <source>When a user visits the root of your site (i.e. example.com) the controller to use is determined by the value set by the &lt;code&gt;setDefaultController()&lt;/code&gt; method, unless a route exists for it explicitly. The default value for this is &lt;code&gt;Home&lt;/code&gt; which matches the controller at &lt;code&gt;/app/Controllers/Home.php&lt;/code&gt;:</source>
          <target state="translated">When a user visits the root of your site (i.e. example.com) the controller to use is determined by the value set by the &lt;code&gt;setDefaultController()&lt;/code&gt; method, unless a route exists for it explicitly. The default value for this is &lt;code&gt;Home&lt;/code&gt; which matches the controller at &lt;code&gt;/app/Controllers/Home.php&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="76ee087f19ed8243d183c3b6ab07ea54c02e7503" translate="yes" xml:space="preserve">
          <source>When accessed this way, the first parameter is the type of content you&amp;rsquo;re trying to find a match for, while the second is an array of supported values.</source>
          <target state="translated">When accessed this way, the first parameter is the type of content you&amp;rsquo;re trying to find a match for, while the second is an array of supported values.</target>
        </trans-unit>
        <trans-unit id="bf479c490835f034b4d8b8c2c24010e01731fba9" translate="yes" xml:space="preserve">
          <source>When adding a single file, the first parameter must contain the name you would like given to the file and the second must contain the file contents:</source>
          <target state="translated">단일 파일을 추가 할 때 첫 번째 매개 변수는 파일에 부여 할 이름을 포함해야하고 두 번째 매개 변수는 파일 내용을 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="bf89d75adef99731d8d15eb7bc4ea93fe426a07e" translate="yes" xml:space="preserve">
          <source>When adding multiple files, the first parameter must contain &lt;em&gt;file =&amp;gt; contents&lt;/em&gt; pairs and the second parameter is ignored:</source>
          <target state="translated">여러 파일을 추가 할 때 첫 번째 매개 변수는 &lt;em&gt;파일 =&amp;gt; 내용&lt;/em&gt; 쌍을 포함해야 하며 두 번째 매개 변수는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="0421f15addd61a1dc810b1c3c88fead70df64ac7" translate="yes" xml:space="preserve">
          <source>When called without specifying a command, a simple help page is displayed that also provides a list of available commands. You should pass the name of the command as the first argument to run that command:</source>
          <target state="translated">When called without specifying a command, a simple help page is displayed that also provides a list of available commands. You should pass the name of the command as the first argument to run that command:</target>
        </trans-unit>
        <trans-unit id="74cf34ff31d35322365b2f6cfdfc225846fd75e6" translate="yes" xml:space="preserve">
          <source>When calling the include() method, you can pass it all of the same options that can when rendering a normal view, including cache directives, etc.</source>
          <target state="translated">When calling the include() method, you can pass it all of the same options that can when rendering a normal view, including cache directives, etc.</target>
        </trans-unit>
        <trans-unit id="d2ce27cb921be96e0487f508e035880ba2593a6d" translate="yes" xml:space="preserve">
          <source>When configuring filters, additional arguments may be passed to a filter when setting up the route:</source>
          <target state="translated">When configuring filters, additional arguments may be passed to a filter when setting up the route:</target>
        </trans-unit>
        <trans-unit id="b1e4dd8026cc5b1912a5ffe0135f24d4722fd683" translate="yes" xml:space="preserve">
          <source>When creating the class manually, you need to pass a few dependencies in. The first parameter is an instance of the &lt;code&gt;Config\App&lt;/code&gt; class. The second parameter is a URI instance. The third parameter is a Response object. The fourth parameter is the optional &lt;code&gt;$options&lt;/code&gt; array:</source>
          <target state="translated">When creating the class manually, you need to pass a few dependencies in. The first parameter is an instance of the &lt;code&gt;Config\App&lt;/code&gt; class. The second parameter is a URI instance. The third parameter is a Response object. The fourth parameter is the optional &lt;code&gt;$options&lt;/code&gt; array:</target>
        </trans-unit>
        <trans-unit id="acf4734ae3efb77e60d07b5d330b4202d4fdedbd" translate="yes" xml:space="preserve">
          <source>When enabled a report will be generated and inserted at the bottom of your pages.</source>
          <target state="translated">활성화되면 보고서가 생성되어 페이지 하단에 삽입됩니다.</target>
        </trans-unit>
        <trans-unit id="db19e017bad355e3c9d1fb81eb738e313d3da982" translate="yes" xml:space="preserve">
          <source>When enabled, the response object will contain an instance of &lt;code&gt;CodeIgniter\HTTP\ContentSecurityPolicy&lt;/code&gt;. The values set in &lt;strong&gt;app/Config/ContentSecurityPolicy.php&lt;/strong&gt; are applied to that instance, and if no changes are needed during runtime, then the correctly formatted header is sent and you&amp;rsquo;re all done.</source>
          <target state="translated">When enabled, the response object will contain an instance of &lt;code&gt;CodeIgniter\HTTP\ContentSecurityPolicy&lt;/code&gt; . The values set in &lt;strong&gt;app/Config/ContentSecurityPolicy.php&lt;/strong&gt; are applied to that instance, and if no changes are needed during runtime, then the correctly formatted header is sent and you&amp;rsquo;re all done.</target>
        </trans-unit>
        <trans-unit id="c261f03d2e2c4e2560634f984237566021722bba" translate="yes" xml:space="preserve">
          <source>When making changes to a view it can be inconvenient to have the field id in the controller. To work around this, you can give your smiley links a generic name that will be tied to a specific id in your view.</source>
          <target state="translated">뷰를 변경할 때 컨트롤러에 필드 ID를 갖는 것이 불편할 수 있습니다. 이 문제를 해결하려면 스마일 링크에 일반적인 이름을 지정하면 뷰의 특정 ID와 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="e225b297421f4b932b41ddd918e688b1927b25bf" translate="yes" xml:space="preserve">
          <source>When manually specifying routes, it is recommended to disable auto-routing by setting &lt;code&gt;$routes-&amp;gt;setAutoRoute(false);&lt;/code&gt; in the Routes.php file. This ensures that only routes you define can be accessed.</source>
          <target state="translated">When manually specifying routes, it is recommended to disable auto-routing by setting &lt;code&gt;$routes-&amp;gt;setAutoRoute(false);&lt;/code&gt; in the Routes.php file. This ensures that only routes you define can be accessed.</target>
        </trans-unit>
        <trans-unit id="3c89e0a08cd4e5f4333f3fa1a9a8a5c2411de332" translate="yes" xml:space="preserve">
          <source>When matching a controller to a route, the router will add the default namespace value to the front of the controller specified by the route. By default, this value is empty, which leaves each route to specify the fully namespaced controller:</source>
          <target state="translated">When matching a controller to a route, the router will add the default namespace value to the front of the controller specified by the route. By default, this value is empty, which leaves each route to specify the fully namespaced controller:</target>
        </trans-unit>
        <trans-unit id="ca9b9c1cf9e3a0cf4f270c0af6ede8de5e2ae965" translate="yes" xml:space="preserve">
          <source>When more than &lt;code&gt;$batch_size&lt;/code&gt; field/value pairs are provided, multiple queries will be executed, each handling up to &lt;code&gt;$batch_size&lt;/code&gt; field/value pairs.</source>
          <target state="translated">때보다 더 &lt;code&gt;$batch_size&lt;/code&gt; 쌍 제공되는 필드 / 값, 여러 쿼리가 실행됩니다, 최대 처리 각 &lt;code&gt;$batch_size&lt;/code&gt; 필드 / 값 쌍.</target>
        </trans-unit>
        <trans-unit id="9c5379f20c94692147debfb6591d92f855c895fe" translate="yes" xml:space="preserve">
          <source>When more than &lt;code&gt;$batch_size&lt;/code&gt; rows are provided, multiple &lt;code&gt;INSERT&lt;/code&gt; queries will be executed, each trying to insert up to &lt;code&gt;$batch_size&lt;/code&gt; rows.</source>
          <target state="translated">&lt;code&gt;$batch_size&lt;/code&gt; 이상의 행이 제공 되면 각각 최대 &lt;code&gt;$batch_size&lt;/code&gt; 행 을 삽입하려는 여러 개의 &lt;code&gt;INSERT&lt;/code&gt; 쿼리가 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="4aaed59dff1c71255e0ddbd010aeabedc893b262" translate="yes" xml:space="preserve">
          <source>When no defined route is found that matches the URI, the system will attempt to match that URI against the controllers and methods as described above. You can disable this automatic matching, and restrict routes to only those defined by you, by setting the &lt;code&gt;setAutoRoute()&lt;/code&gt; option to false:</source>
          <target state="translated">When no defined route is found that matches the URI, the system will attempt to match that URI against the controllers and methods as described above. You can disable this automatic matching, and restrict routes to only those defined by you, by setting the &lt;code&gt;setAutoRoute()&lt;/code&gt; option to false:</target>
        </trans-unit>
        <trans-unit id="f0dbe258a8da0e89451b7be6b933d913c453e509" translate="yes" xml:space="preserve">
          <source>When overwrite is set to FALSE, use this to set the maximum filename increment for CodeIgniter to append to the filename.</source>
          <target state="translated">덮어 쓰기가 FALSE로 설정된 경우,이를 사용하여 CodeIgniter가 파일 이름에 추가 할 최대 파일 이름 증분을 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="05ab0b3b4e62f8689722b00463050f3b0086ad6a" translate="yes" xml:space="preserve">
          <source>When passing a URI into the function, it is treated as a reverse-route request, not a relative/full URI, treating it the same as using redirect()-&amp;gt;route():</source>
          <target state="translated">When passing a URI into the function, it is treated as a reverse-route request, not a relative/full URI, treating it the same as using redirect()-&amp;gt;route():</target>
        </trans-unit>
        <trans-unit id="86ad6b90b76aec0d038fea752a6e0f085942667d" translate="yes" xml:space="preserve">
          <source>When passing the last-modified option, it can be either a date string, or a DateTime object.</source>
          <target state="translated">When passing the last-modified option, it can be either a date string, or a DateTime object.</target>
        </trans-unit>
        <trans-unit id="db9afd5099260c16b5b6e80cbb088679194b75cc" translate="yes" xml:space="preserve">
          <source>When resizing images you can choose whether to maintain the ratio of the original image, or stretch/squash the new image to fit the desired dimensions. If $maintainRatio is true, the dimension specified by $masterDim will stay the same, while the other dimension will be altered to match the original image&amp;rsquo;s aspect ratio.</source>
          <target state="translated">When resizing images you can choose whether to maintain the ratio of the original image, or stretch/squash the new image to fit the desired dimensions. If $maintainRatio is true, the dimension specified by $masterDim will stay the same, while the other dimension will be altered to match the original image&amp;rsquo;s aspect ratio.</target>
        </trans-unit>
        <trans-unit id="ae1b8dd1c2e8aceee8a9d681d6cd7df6cb098c4b" translate="yes" xml:space="preserve">
          <source>When run, this method first grabs an instance of the throttler. Next, it uses the IP address as the bucket name, and sets things to limit them to one request per second. If the throttler rejects the check, returning false, then we return a Response with the status code set to 429 - Too Many Attempts, and the script execution ends before it ever hits the controller. This example will throttle based on a single IP address across all requests made to the site, not per page.</source>
          <target state="translated">When run, this method first grabs an instance of the throttler. Next, it uses the IP address as the bucket name, and sets things to limit them to one request per second. If the throttler rejects the check, returning false, then we return a Response with the status code set to 429 - Too Many Attempts, and the script execution ends before it ever hits the controller. This example will throttle based on a single IP address across all requests made to the site, not per page.</target>
        </trans-unit>
        <trans-unit id="1679e0f6c06f2ef3cf4744e5ad854372bce4a198" translate="yes" xml:space="preserve">
          <source>When running database tests, you need to provide a database that can be used during testing. Instead of using the PHPUnit built-in database features, the framework provides tools specific to CodeIgniter. The first step is to ensure that you have set up a &lt;code&gt;tests&lt;/code&gt; database group in &lt;strong&gt;app/Config/Database.php&lt;/strong&gt;. This specifies a database connection that is only used while running tests, to keep your other data safe.</source>
          <target state="translated">When running database tests, you need to provide a database that can be used during testing. Instead of using the PHPUnit built-in database features, the framework provides tools specific to CodeIgniter. The first step is to ensure that you have set up a &lt;code&gt;tests&lt;/code&gt; database group in &lt;strong&gt;app/Config/Database.php&lt;/strong&gt;. This specifies a database connection that is only used while running tests, to keep your other data safe.</target>
        </trans-unit>
        <trans-unit id="7f39417cae59876b1c4003405a6122bf9be5355d" translate="yes" xml:space="preserve">
          <source>When running tests, you need to ensure that your database has the correct schema set up and that it is in a known state for every test. You can use migrations and seeds to set up your database, by adding a couple of class properties to your test.</source>
          <target state="translated">When running tests, you need to ensure that your database has the correct schema set up and that it is in a known state for every test. You can use migrations and seeds to set up your database, by adding a couple of class properties to your test.</target>
        </trans-unit>
        <trans-unit id="3999807b932f7e7dd608c15b0ef6b794446c5437" translate="yes" xml:space="preserve">
          <source>When sending a JSON request the CSRF token can also be passed as one of the parameters. The next way to pass the CSRF token is a special Http header that&amp;rsquo;s name is available by &lt;code&gt;csrf_header()&lt;/code&gt; function.</source>
          <target state="translated">When sending a JSON request the CSRF token can also be passed as one of the parameters. The next way to pass the CSRF token is a special Http header that&amp;rsquo;s name is available by &lt;code&gt;csrf_header()&lt;/code&gt; function.</target>
        </trans-unit>
        <trans-unit id="b400ea96a0a6ea1c434d5307314d5a8816d54599" translate="yes" xml:space="preserve">
          <source>When set to TRUE, it will &lt;strong&gt;override&lt;/strong&gt; the &lt;code&gt;$config['suffix']&lt;/code&gt; value and instead set it to the one that you have in &lt;code&gt;$config['url_suffix']&lt;/code&gt; in your &lt;strong&gt;application/config/config.php&lt;/strong&gt; file.</source>
          <target state="translated">TRUE로 설정, 그것은 것 &lt;strong&gt;보다 우선 &lt;/strong&gt; &lt;code&gt;$config['suffix']&lt;/code&gt; 값 대신 당신이 가지고있는 하나로 설정 &lt;code&gt;$config['url_suffix']&lt;/code&gt; 당신의 &lt;strong&gt;응용 프로그램 / 설정 / config.php를&lt;/strong&gt; 파일.</target>
        </trans-unit>
        <trans-unit id="cd0f91b7dd14bc15a64f90dc1a4e6d2454a6265b" translate="yes" xml:space="preserve">
          <source>When setting the path this way, or any other way the class allows, it is sanitized to encode any dangerous characters, and remove dot segments for safety.</source>
          <target state="translated">When setting the path this way, or any other way the class allows, it is sanitized to encode any dangerous characters, and remove dot segments for safety.</target>
        </trans-unit>
        <trans-unit id="e079fc7984561bb8eb88d5298a106958a357dd29" translate="yes" xml:space="preserve">
          <source>When showing field-specific errors, you can pass the alias as the second parameter to the &lt;code&gt;showError&lt;/code&gt; method, right after the name of the field the error should belong to:</source>
          <target state="translated">When showing field-specific errors, you can pass the alias as the second parameter to the &lt;code&gt;showError&lt;/code&gt; method, right after the name of the field the error should belong to:</target>
        </trans-unit>
        <trans-unit id="530e73ac6514ac3452a3a6eae7f97878c1bf5870" translate="yes" xml:space="preserve">
          <source>When strict mode is enabled, if you are running multiple groups of transactions and one group fails, all subsequent groups will be rolled back.</source>
          <target state="translated">엄격 모드가 사용 가능한 경우 여러 트랜잭션 그룹을 실행 중이고 하나의 그룹이 실패하면 모든 후속 그룹이 롤백됩니다.</target>
        </trans-unit>
        <trans-unit id="c4947b0ad448cbd2c1240cd25bc860158fc17550" translate="yes" xml:space="preserve">
          <source>When testing database results, you must use the &lt;a href=&quot;database&quot;&gt;CIDatabaseTestClass&lt;/a&gt; class.</source>
          <target state="translated">When testing database results, you must use the &lt;a href=&quot;database&quot;&gt;CIDatabaseTestClass&lt;/a&gt; class.</target>
        </trans-unit>
        <trans-unit id="ba053635924d737c3eeb45ceda9685a01da935d8" translate="yes" xml:space="preserve">
          <source>When testing, you can use the following setter and getter methods to access protected and private methods and properties in the classes that you are testing.</source>
          <target state="translated">When testing, you can use the following setter and getter methods to access protected and private methods and properties in the classes that you are testing.</target>
        </trans-unit>
        <trans-unit id="be41b7300f1bb7acc53883e10d262963cdf47ce5" translate="yes" xml:space="preserve">
          <source>When the &lt;code&gt;subdomain&lt;/code&gt; option is present, the system will restrict the routes to only be available on that sub-domain. The route will only be matched if the subdomain is the one the application is being viewed through:</source>
          <target state="translated">When the &lt;code&gt;subdomain&lt;/code&gt; option is present, the system will restrict the routes to only be available on that sub-domain. The route will only be matched if the subdomain is the one the application is being viewed through:</target>
        </trans-unit>
        <trans-unit id="e8c87627bee92e3ad1b0131c939b5346044098f2" translate="yes" xml:space="preserve">
          <source>When the &lt;strong&gt;location&lt;/strong&gt; method is used, an HTTP status code of 303 will &lt;em&gt;automatically&lt;/em&gt; be selected when the page is currently accessed via POST and HTTP/1.1 is used.</source>
          <target state="translated">때 &lt;strong&gt;위치&lt;/strong&gt; 방법이 사용되며, 303의 HTTP 상태 코드 것이다 &lt;em&gt;자동&lt;/em&gt; 페이지가 현재 POST를 통해 액세스하고, HTTP / 1.1를 사용하는 경우 선택 될 수있다.</target>
        </trans-unit>
        <trans-unit id="9c9f672217e7390f952b07c559a6e834936200ce" translate="yes" xml:space="preserve">
          <source>When the User Agent class is initialized it will attempt to determine whether the user agent browsing your site is a web browser, a mobile device, or a robot. It will also gather the platform information if it is available.</source>
          <target state="translated">사용자 에이전트 클래스가 초기화되면 사이트를 탐색하는 사용자 에이전트가 웹 브라우저, 모바일 장치 또는 로봇인지 확인하려고 시도합니다. 사용 가능한 경우 플랫폼 정보도 수집합니다.</target>
        </trans-unit>
        <trans-unit id="38a1168ce20bc102ba2d9c463257ab807db10679" translate="yes" xml:space="preserve">
          <source>When the User Agent class is initialized it will attempt to determine whether the user agent browsing your site is a web browser, a mobile device, or a robot. It will also gather the platform information if it is available:</source>
          <target state="translated">When the User Agent class is initialized it will attempt to determine whether the user agent browsing your site is a web browser, a mobile device, or a robot. It will also gather the platform information if it is available:</target>
        </trans-unit>
        <trans-unit id="ceace855daa38f7195072e7aa5a2f17c1a47a75d" translate="yes" xml:space="preserve">
          <source>When the User is passed to the model&amp;rsquo;s &lt;strong&gt;save()&lt;/strong&gt; method, it automatically takes care of reading the properties and saving any changes to columns listed in the model&amp;rsquo;s &lt;strong&gt;$allowedFields&lt;/strong&gt; property. It also knows whether to create a new row, or update an existing one.</source>
          <target state="translated">When the User is passed to the model&amp;rsquo;s &lt;strong&gt;save()&lt;/strong&gt; method, it automatically takes care of reading the properties and saving any changes to columns listed in the model&amp;rsquo;s &lt;strong&gt;$allowedFields&lt;/strong&gt; property. It also knows whether to create a new row, or update an existing one.</target>
        </trans-unit>
        <trans-unit id="5da1aeac2ccbe39ccfaa6f9b96308acdd59e62e6" translate="yes" xml:space="preserve">
          <source>When the XML-RPC Server receives a request and loads the class/method for processing, it will pass an object to that method containing the data sent by the client.</source>
          <target state="translated">XML-RPC 서버는 요청을 받고 처리 할 클래스 / 메소드를로드 할 때 클라이언트가 보낸 데이터를 포함하는 해당 메소드에 객체를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="5c8236336849d8bb91a1052c52368d3efd8ba2a3" translate="yes" xml:space="preserve">
          <source>When the class is first instantiated, if no database connection instance is passed to the constructor, it will automatically connect to the default database group, as set in the configuration. You can modify which group is used on a per-model basis by adding the DBGroup property to your class. This ensures that within the model any references to &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; are made through the appropriate connection.</source>
          <target state="translated">클래스가 처음 인스턴스화 될 때 데이터베이스 연결 인스턴스가 생성자에 전달되지 않으면 구성에 설정된대로 자동으로 기본 데이터베이스 그룹에 연결됩니다. 클래스에 DBGroup 속성을 추가하여 모델별로 사용되는 그룹을 수정할 수 있습니다. 이것은 모델 내에서 &lt;code&gt;$this-&amp;gt;db&lt;/code&gt; 대한 모든 참조가 적절한 연결을 통해 이루어 지도록 합니다.</target>
        </trans-unit>
        <trans-unit id="61fb619d95279fefbbbce456464d35586ef34d43" translate="yes" xml:space="preserve">
          <source>When the commands are executed, the full CodeIgniter cli environment has been loaded, making it possible to get environment information, path information, and to use any of the tools you would use when making a Controller.</source>
          <target state="translated">명령이 실행되면 전체 CodeIgniter cli 환경이로드되어 환경 정보, 경로 정보를 가져오고 컨트롤러를 만들 때 사용하는 도구를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="597c280b548f0ee43cba20277a4676de3927e377" translate="yes" xml:space="preserve">
          <source>When the controller is executed, a new &lt;strong&gt;ControllerResponse&lt;/strong&gt; instance will be returned that provides a number of helpful methods, as well as direct access to the Request and Response that were generated.</source>
          <target state="translated">컨트롤러가 실행되면 생성 된 요청 및 응답에 대한 직접 액세스뿐만 아니라 여러 유용한 메서드를 제공 하는 새 &lt;strong&gt;ControllerResponse&lt;/strong&gt; 인스턴스가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="4230ead427a0050cd8c0284cb0853574cba178f3" translate="yes" xml:space="preserve">
          <source>When the form is submitted, the file is uploaded to the destination you specify.</source>
          <target state="translated">양식을 제출하면 지정한 대상에 파일이 업로드됩니다.</target>
        </trans-unit>
        <trans-unit id="3cfac33c37cf2c8cbf99c7d0d868a517a0fc0f53" translate="yes" xml:space="preserve">
          <source>When the links are rendered out to the page, they use a view file to describe the HTML. You can easily change the view that is used by editing &lt;strong&gt;app/Config/Pager.php&lt;/strong&gt;:</source>
          <target state="translated">링크가 페이지에 렌더링되면보기 파일을 사용하여 HTML을 설명합니다. &lt;strong&gt;app / Config / Pager.php를&lt;/strong&gt; 편집하여 사용하는보기를 쉽게 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c5c5f30423179de259a6d0d5c5cbc907e9c218cf" translate="yes" xml:space="preserve">
          <source>When the parser executes, it will generally</source>
          <target state="translated">파서가 실행되면 일반적으로</target>
        </trans-unit>
        <trans-unit id="5c224daf6ed33efc1af15444a5972bbe2d2e1464" translate="yes" xml:space="preserve">
          <source>When transactions are disabled, your queries will be auto-committed, just as they are when running queries without transactions, practically ignoring any calls to &lt;code&gt;trans_start()&lt;/code&gt;, &lt;code&gt;trans_complete()&lt;/code&gt;, etc.</source>
          <target state="translated">트랜잭션이 비활성화되면 트랜잭션없이 쿼리를 실행할 때와 마찬가지로 &lt;code&gt;trans_start()&lt;/code&gt; , &lt;code&gt;trans_complete()&lt;/code&gt; 등에 대한 호출을 무시하는 것처럼 쿼리가 자동 커밋 됩니다 .</target>
        </trans-unit>
        <trans-unit id="1fcd28f97d073051c45729e9f46d04849d9627be" translate="yes" xml:space="preserve">
          <source>When transactions are disabled, your queries will be auto-committed, just as they are when running queries without transactions.</source>
          <target state="translated">트랜잭션이 비활성화되면 트랜잭션없이 쿼리를 실행할 때와 마찬가지로 쿼리가 자동 커밋됩니다.</target>
        </trans-unit>
        <trans-unit id="6f634907d08490dc73319d87a429f52dd9725010" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;-all&lt;/code&gt; option, it will scan through all namespaces attempting to find any migrations that have not been run. These will all be collected and then sorted as a group by date created. This should help to minimize any potential conflicts between the main application and any modules.</source>
          <target state="translated">&lt;code&gt;-all&lt;/code&gt; 옵션을 사용하면 실행되지 않은 마이그레이션을 찾으려고 모든 네임 스페이스를 검색합니다. 이들은 모두 수집 된 다음 생성 된 날짜별로 그룹으로 정렬됩니다. 이렇게하면 주 응용 프로그램과 모듈 간의 잠재적 충돌을 최소화하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="c98a5a0cd0f8ca3d7c03c1b59651d5dbf032b2c3" translate="yes" xml:space="preserve">
          <source>When using the &lt;code&gt;setPort()&lt;/code&gt; method, the port will be checked that it is within the valid range and assigned.</source>
          <target state="translated">사용시 &lt;code&gt;setPort()&lt;/code&gt; 메소드를 포트는 유효 범위 내에 할당 된 것을 확인한다.</target>
        </trans-unit>
        <trans-unit id="d7453750b15487b8f72c078e69fe7fea8ffddc86" translate="yes" xml:space="preserve">
          <source>When using the &lt;em&gt;short prefix&lt;/em&gt; the property names must still exactly match the class defined name.</source>
          <target state="translated">&lt;em&gt;짧은 접두사를&lt;/em&gt; 사용할 때 속성 이름은 여전히 ​​클래스 정의 이름과 정확히 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="5df9122981c393c89ff3bb8cb2b10b719abca3ca" translate="yes" xml:space="preserve">
          <source>When using the Typography library in conjunction with the &lt;a href=&quot;parser&quot;&gt;Template Parser library&lt;/a&gt; it can often be desirable to protect single and double quotes within curly braces. To enable this, set the &lt;code&gt;protect_braced_quotes&lt;/code&gt; class property to TRUE.</source>
          <target state="translated">타이포그래피 라이브러리를 &lt;a href=&quot;parser&quot;&gt;템플릿 파서 라이브러리&lt;/a&gt; 와 함께 사용하는 경우 중괄호 안에 작은 따옴표와 큰 따옴표를 보호하는 것이 바람직 할 수 있습니다. 이를 가능하게하려면 &lt;code&gt;protect_braced_quotes&lt;/code&gt; 클래스 특성을 TRUE로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="8f6d3dc288ae393d9437e23854b7ff35ba699566" translate="yes" xml:space="preserve">
          <source>When using the XML-RPC Server class you must load BOTH the XML-RPC class and the XML-RPC Server class.</source>
          <target state="translated">XML-RPC 서버 클래스를 사용하는 경우 XML-RPC 클래스와 XML-RPC 서버 클래스 모두를로드해야합니다.</target>
        </trans-unit>
        <trans-unit id="6c7c1ed9b4c50f736aeeb8e0609181472a2451cb" translate="yes" xml:space="preserve">
          <source>When using this feature the first segment of your URI must specify the folder. For example, let&amp;rsquo;s say you have a controller located here:</source>
          <target state="translated">이 기능을 사용할 때 URI의 첫 번째 세그먼트는 폴더를 지정해야합니다. 예를 들어 여기에 컨트롤러가 있다고 가정 해 봅시다.</target>
        </trans-unit>
        <trans-unit id="1510b61cc6031f70ffc43d8473d417773a64077a" translate="yes" xml:space="preserve">
          <source>When we use the term &amp;ldquo;Libraries&amp;rdquo; we are normally referring to the classes that are located in the libraries directory and described in the Class Reference of this user guide. In this case, however, we will instead describe how you can create your own libraries within your application/libraries directory in order to maintain separation between your local resources and the global framework resources.</source>
          <target state="translated">&quot;라이브러리&quot;라는 용어를 사용할 때는 일반적으로 라이브러리 디렉토리에 있으며이 사용 설명서의 클래스 참조에 설명 된 클래스를 말합니다. 그러나이 경우 로컬 리소스와 글로벌 프레임 워크 리소스 사이의 분리를 유지하기 위해 애플리케이션 / 라이브러리 디렉토리 내에 고유 라이브러리를 만드는 방법을 대신 설명합니다.</target>
        </trans-unit>
        <trans-unit id="7c50f49f3a0cc05a8d572f0a88ce61ac0f1029a1" translate="yes" xml:space="preserve">
          <source>When working with HTML forms you can only use GET or POST HTTP verbs. In most cases, this is just fine. However, to support REST-ful routing you need to support other, more correct, verbs, like DELETE or PUT. Since the browsers don&amp;rsquo;t support this, CodeIgniter provides you with a way to spoof the method that is being used. This allows you to make a POST request, but tell the application that it should be treated as a different request type.</source>
          <target state="translated">HTML 양식으로 작업 할 때 GET 또는 POST HTTP 동사 만 사용할 수 있습니다. 대부분의 경우 이것은 괜찮습니다. 그러나 REST-ful 라우팅을 지원하려면 DELETE 또는 PUT와 같은보다 정확한 다른 동사를 지원해야합니다. 브라우저가이를 지원하지 않기 때문에 CodeIgniter는 사용중인 메서드를 스푸핑하는 방법을 제공합니다. 이렇게하면 POST 요청을 할 수 있지만 다른 요청 유형으로 처리해야한다고 애플리케이션에 알릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0f12cfd72624e851749b8249a9bb29b58345bf6" translate="yes" xml:space="preserve">
          <source>When working with other libraries that provide a DateTime instance, you can use this method to convert that to a Time instance, optionally setting the locale. The timezone will be automatically determined from the DateTime instance passed in:</source>
          <target state="translated">DateTime 인스턴스를 제공하는 다른 라이브러리로 작업 할 때이 메서드를 사용하여 해당 인스턴스를 Time 인스턴스로 변환하고 선택적으로 로케일을 설정할 수 있습니다. 시간대는 전달 된 DateTime 인스턴스에서 자동으로 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="651079ca2baa79690f40e7fa5386762885d1d077" translate="yes" xml:space="preserve">
          <source>When you call &lt;code&gt;$validation-&amp;gt;listErrors()&lt;/code&gt; or &lt;code&gt;$validation-&amp;gt;showError()&lt;/code&gt;, it loads a view file in the background that determines how the errors are displayed. By default, they display with a class of &lt;code&gt;errors&lt;/code&gt; on the wrapping div. You can easily create new views and use them throughout your application.</source>
          <target state="translated">&lt;code&gt;$validation-&amp;gt;listErrors()&lt;/code&gt; 또는 &lt;code&gt;$validation-&amp;gt;showError()&lt;/code&gt; 를 호출 하면 오류가 표시되는 방식을 결정하는 백그라운드에서 뷰 파일을로드합니다. 기본적으로 래핑 div 에 &lt;code&gt;errors&lt;/code&gt; 클래스와 함께 표시됩니다 . 새보기를 쉽게 만들고 애플리케이션 전체에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f0500f9fb64ab864c4428057ef382ec56078284" translate="yes" xml:space="preserve">
          <source>When you connect this way, you will use your object name to issue commands rather than the syntax used throughout this guide. In other words, rather than issuing commands with:</source>
          <target state="translated">이 방법으로 연결하면이 안내서 전체에서 사용 된 구문이 아닌 객체 이름을 사용하여 명령을 실행하게됩니다. 다시 말해, 다음과 같은 명령을 실행하는 것이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="1fe96e7b1a261aa09bbb2aff4ed71a91d169fbea" translate="yes" xml:space="preserve">
          <source>When you create a new view, you only need to create the code that is needed for creating the pagination links themselves. You should not create unnecessary wrapping divs since it might be used in multiple places and you only limit their usefulness. It is easiest to demonstrate creating a new view by showing you the existing default_full template:</source>
          <target state="translated">새보기를 만들 때 페이지 매김 링크 자체를 만드는 데 필요한 코드 만 만들면됩니다. 불필요한 래핑 div는 여러 곳에서 사용할 수 있고 유용성을 제한 할 수 있으므로 만들지 않아야합니다. 기존 default_full 템플릿을 표시하여 새보기를 만드는 방법을 가장 쉽게 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="aaacde4172a2c44320e629f846f4c2ec01487571" translate="yes" xml:space="preserve">
          <source>When you create the new instance, you can pass a full or partial URL in the constructor and it will be parsed into its appropriate sections:</source>
          <target state="translated">새 인스턴스를 만들 때 생성자에 전체 또는 부분 URL을 전달할 수 있으며 적절한 섹션으로 구문 분석됩니다.</target>
        </trans-unit>
        <trans-unit id="f607488967931b4c5070e31e0e773055b0735d89" translate="yes" xml:space="preserve">
          <source>When you instantiate a configuration class, any &lt;em&gt;namespaced&lt;/em&gt; environment variables are considered for merging into the configuration object&amp;rsquo;s properties.</source>
          <target state="translated">구성 클래스를 인스턴스화 할 때 &lt;em&gt;네임 스페이스가&lt;/em&gt; 지정된 환경 변수가 구성 개체의 속성에 병합되는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="036bc21192c6e8880ceabf301c2095e30152ba09" translate="yes" xml:space="preserve">
          <source>When you just need to retrieve the last Query object, use the getLastQuery() method:</source>
          <target state="translated">마지막 Query 객체 만 검색해야하는 경우 getLastQuery () 메서드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="b38a14b2b3090f0c688707dea5728ce4f08f485c" translate="yes" xml:space="preserve">
          <source>When you need a more flexible solution, you can leave the parameters empty and it functions like the Query Builder&amp;rsquo;s update command, with the added benefit of validation, events, etc:</source>
          <target state="translated">보다 유연한 솔루션이 필요한 경우 매개 변수를 비워두면 쿼리 작성기의 업데이트 명령처럼 작동하며 유효성 검사, 이벤트 등의 추가 이점이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3950fd3239a742ba5bcd3e46ae6c1a63d7e0c65c" translate="yes" xml:space="preserve">
          <source>When you need a new configuration, first you create a new file at your desired location. The default file location (recommended for most cases) is &lt;strong&gt;/app/Config&lt;/strong&gt;. The class should use the appropriate namespace, and it should extend &lt;code&gt;CodeIgniter\Config\BaseConfig&lt;/code&gt; to ensure that it can receive environment-specific settings.</source>
          <target state="translated">새 구성이 필요한 경우 먼저 원하는 위치에 새 파일을 만듭니다. 기본 파일 위치 (대부분의 경우 권장)는 &lt;strong&gt;/ app / Config&lt;/strong&gt; 입니다. 클래스는 적절한 네임 스페이스를 사용해야하며 환경 별 설정을받을 수 있도록 &lt;code&gt;CodeIgniter\Config\BaseConfig&lt;/code&gt; 를 확장해야합니다 .</target>
        </trans-unit>
        <trans-unit id="478300fd1e334bacea7df7e3e2b143f69098835f" translate="yes" xml:space="preserve">
          <source>When you need to change the implementation used, you can modify the services configuration file, and the change happens automatically throughout your application without you having to do anything. Now you just need to take advantage of any new functionality and you&amp;rsquo;re good to go. Very simple and error-resistant.</source>
          <target state="translated">사용 된 구현을 변경해야하는 경우 서비스 구성 파일을 수정할 수 있으며 변경 사항은 사용자가 수행 할 작업없이 애플리케이션 전체에서 자동으로 발생합니다. 이제 새로운 기능을 활용하기 만하면됩니다. 매우 간단하고 오류에 강합니다.</target>
        </trans-unit>
        <trans-unit id="54a971ebcbcea05e0e680b99c31c900fb9c844d9" translate="yes" xml:space="preserve">
          <source>When you need to send files and other data via a POST request, you can use the &lt;code&gt;multipart&lt;/code&gt; option, along with the &lt;a href=&quot;https://www.php.net/manual/en/class.curlfile.php&quot;&gt;CURLFile Class&lt;/a&gt;. The values should be an associative array of POST data to send. For safer usage, the legacy method of uploading files by prefixing their name with an &lt;code&gt;@&lt;/code&gt; has been disabled. Any files that you want to send must be passed as instances of CURLFile:</source>
          <target state="translated">POST 요청을 통해 파일 및 기타 데이터를 보내야 하는 경우 &lt;a href=&quot;https://www.php.net/manual/en/class.curlfile.php&quot;&gt;CURLFile Class&lt;/a&gt; 와 함께 &lt;code&gt;multipart&lt;/code&gt; 옵션을 사용할 수 있습니다 . 값은 보낼 POST 데이터의 연관 배열이어야합니다. 보다 안전한 사용을 위해 이름 앞에 &lt;code&gt;@&lt;/code&gt; 를 붙여 파일을 업로드하는 레거시 방법 이 비활성화되었습니다. 보내려는 모든 파일은 CURLFile의 인스턴스로 전달되어야합니다.</target>
        </trans-unit>
        <trans-unit id="479e157ab0ca4a0c4089206145fb9b88d0d6c3f3" translate="yes" xml:space="preserve">
          <source>When you need to set the output of the script directly, and not rely on CodeIgniter to automatically get it, you do it manually with the &lt;code&gt;setBody&lt;/code&gt; method. This is usually used in conjunction with setting the status code of the response:</source>
          <target state="translated">스크립트의 출력을 직접 설정해야하고 CodeIgniter에 의존하지 않고 자동으로 &lt;code&gt;setBody&lt;/code&gt; 하는 경우 setBody 메서드를 사용하여 수동으로 수행합니다 . 이는 일반적으로 응답의 상태 코드 설정과 함께 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b6eed370930bb28c0245d16f9279a4ce5a844953" translate="yes" xml:space="preserve">
          <source>When you pass your data in any of these methods, they will determine the data type to format the results as based on the following criteria:</source>
          <target state="translated">이러한 방법 중 하나로 데이터를 전달하면 다음 기준에 따라 결과 형식을 지정할 데이터 유형이 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="dcaf0a79dcae3cf925af95537d9cbe705144fea9" translate="yes" xml:space="preserve">
          <source>When you set the ENVIRONMENT constant to &amp;lsquo;production&amp;rsquo;, the settings for your new production-only config.php will be loaded.</source>
          <target state="translated">ENVIRONMENT 상수를 'production'으로 설정하면 새로운 프로덕션 전용 config.php의 설정이로드됩니다.</target>
        </trans-unit>
        <trans-unit id="9b4fd8999e8c475f9cbcd2512f09010dbac25f93" translate="yes" xml:space="preserve">
          <source>When you upload files they can be accessed natively in PHP through the &lt;code&gt;$_FILES&lt;/code&gt; superglobal. This array has some major shortcomings when working with multiple files uploaded at once, and has potential security flaws many developers are not aware of. CodeIgniter helps with both of these situations by standardizing your usage of files behind a common interface.</source>
          <target state="translated">파일을 업로드하면 &lt;code&gt;$_FILES&lt;/code&gt; 수퍼 글로벌을 통해 PHP에서 기본적으로 액세스 할 수 있습니다 . 이 어레이는 한 번에 업로드 된 여러 파일로 작업 할 때 몇 가지 주요 단점이 있으며 많은 개발자가 알지 못하는 잠재적 인 보안 결함이 있습니다. CodeIgniter는 공통 인터페이스 뒤에서 파일 사용을 표준화하여 이러한 두 가지 상황을 모두 지원합니다.</target>
        </trans-unit>
        <trans-unit id="ca0e7f5ee21c834fce8fc6e692f5e846030b4a07" translate="yes" xml:space="preserve">
          <source>When you use a helper function you&amp;rsquo;ll include the bracket as well:</source>
          <target state="translated">도우미 기능을 사용하면 대괄호도 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c7e6598af6291f28454463d1794f89d202bbba30" translate="yes" xml:space="preserve">
          <source>When your application runs, &lt;strong&gt;.env&lt;/strong&gt; will be loaded automatically, and the variables put into the environment. If a variable already exists in the environment, it will NOT be overwritten. The loaded Environment variables are accessed using any of the following: &lt;code&gt;getenv()&lt;/code&gt;, &lt;code&gt;$_SERVER&lt;/code&gt;, or &lt;code&gt;$_ENV&lt;/code&gt;.</source>
          <target state="translated">애플리케이션이 실행되면 &lt;strong&gt;.env&lt;/strong&gt; 가 자동으로로드되고 변수가 환경에 저장됩니다. 변수가 환경에 이미 존재하는 경우 덮어 쓰지 않습니다. 로드 된 환경 변수는 &lt;code&gt;getenv()&lt;/code&gt; , &lt;code&gt;$_SERVER&lt;/code&gt; 또는 &lt;code&gt;$_ENV&lt;/code&gt; 중 하나를 사용하여 액세스 합니다.</target>
        </trans-unit>
        <trans-unit id="c31bf5ce8a76e1e84d3e893b2d16ae6b600e9c68" translate="yes" xml:space="preserve">
          <source>When your application runs, all of the timers that you have set are collected by the Timer class. It does not automatically display them, though. You can retrieve all of your timers by calling the &lt;code&gt;getTimers()&lt;/code&gt; method. This returns an array of benchmark information, including start, end, and duration:</source>
          <target state="translated">애플리케이션이 실행되면 설정 한 모든 타이머가 Timer 클래스에 의해 수집됩니다. 그러나 자동으로 표시되지는 않습니다. &lt;code&gt;getTimers()&lt;/code&gt; 메서드를 호출하여 모든 타이머를 검색 할 수 있습니다 . 그러면 시작, 종료 및 기간을 포함한 일련의 벤치 마크 정보가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9cbf51dbac1f278f3724732c9ddd2bbd20cbbc0e" translate="yes" xml:space="preserve">
          <source>When your configuration object is instantiated, it will loop over the designated classes in &lt;code&gt;$registrars&lt;/code&gt;. For each of these classes, which contains a method name matching the configuration class, it will invoke that method, and incorporate any returned properties the same way as described for namespaced variables.</source>
          <target state="translated">구성 객체가 인스턴스화되면 &lt;code&gt;$registrars&lt;/code&gt; 의 지정된 클래스를 반복합니다 . 구성 클래스와 일치하는 메서드 이름을 포함하는 이러한 각 클래스에 대해 해당 메서드를 호출하고 네임 스페이스 변수에 대해 설명한 것과 동일한 방식으로 반환 된 속성을 통합합니다.</target>
        </trans-unit>
        <trans-unit id="05d872c18bc3b35eae8c3b7601e7060dc7a78fe1" translate="yes" xml:space="preserve">
          <source>When your controller is finished using resources from an application package, and particularly if you have other application packages you want to work with, you may wish to remove the package path so the Loader no longer looks in that directory for resources. To remove the last path added, simply call the method with no parameters.</source>
          <target state="translated">컨트롤러가 응용 프로그램 패키지의 리소스 사용을 마쳤을 때, 특히 작업하려는 다른 응용 프로그램 패키지가있는 경우 로더가 더 이상 해당 디렉토리에서 리소스를 찾지 않도록 패키지 경로를 제거 할 수 있습니다. 마지막으로 추가 된 경로를 제거하려면 매개 변수없이 메소드를 호출하십시오.</target>
        </trans-unit>
        <trans-unit id="d2ceb2b758d36af198b323b8fcd60a8f48a80a02" translate="yes" xml:space="preserve">
          <source>When your tables include Foreign Keys, migrations can often cause problems as you attempt to drop tables and columns. To temporarily bypass the foreign key checks while running migrations, use the &lt;code&gt;disableForeignKeyChecks()&lt;/code&gt; and &lt;code&gt;enableForeignKeyChecks()&lt;/code&gt; methods on the database connection.</source>
          <target state="translated">테이블에 외래 키가 포함 된 경우 마이그레이션으로 인해 테이블과 열을 삭제하려고 할 때 문제가 발생할 수 있습니다. 마이그레이션을 실행하는 동안 일시적으로 외래 키 검사를 우회하려면 데이터베이스 연결 에서 &lt;code&gt;disableForeignKeyChecks()&lt;/code&gt; 및 &lt;code&gt;enableForeignKeyChecks()&lt;/code&gt; 메서드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="5ee2b40101c99a2ad225f66dd8f30e0fc2c01709" translate="yes" xml:space="preserve">
          <source>When your unit test results display, the following items show by default:</source>
          <target state="translated">단위 테스트 결과가 표시되면 다음 항목이 기본적으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="3c3dec70b22ace66fc4abf47801adc1d4d7f3dec" translate="yes" xml:space="preserve">
          <source>Whenever a client (a web browser, smartphone app, etc) makes a request, it sends a small text message to the server and waits for a response.</source>
          <target state="translated">클라이언트 (웹 브라우저, 스마트 폰 앱 등)가 요청할 때마다 서버에 작은 문자 메시지를 보내고 응답을 기다립니다.</target>
        </trans-unit>
        <trans-unit id="bb0f4bda0bf249f497cbe1ef469293dbe4c682df" translate="yes" xml:space="preserve">
          <source>Whenever a view wants to be inserted into a layout, it must use the &lt;code&gt;extend()&lt;/code&gt; method at the top of the file:</source>
          <target state="translated">뷰가 레이아웃에 삽입되기를 원할 때마다 파일 상단에 &lt;code&gt;extend()&lt;/code&gt; 메서드를 사용해야 합니다.</target>
        </trans-unit>
        <trans-unit id="b8a40c3ae463e11d4b0312bfb3b5d7bce0a7898f" translate="yes" xml:space="preserve">
          <source>Whenever appropriate, provide function argument defaults, which helps prevent PHP errors with mistaken calls and provides common fallback values which can save a few lines of code. Example:</source>
          <target state="translated">적절할 때마다 함수 인수 기본값을 제공하면 잘못된 호출로 인한 PHP 오류를 방지하고 몇 줄의 코드를 저장할 수있는 일반적인 대체 값을 제공 할 수 있습니다. 예:</target>
        </trans-unit>
        <trans-unit id="b564d1426a9cae13b8861cae4613de7be79331f2" translate="yes" xml:space="preserve">
          <source>Whenever there is a new release, then from the command line in your project root:</source>
          <target state="translated">새 릴리스가있을 때마다 프로젝트 루트의 명령 줄에서 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="869327036a08a7d160d3bb9406e04c9671798145" translate="yes" xml:space="preserve">
          <source>Whenever you create an application, you have to find a way to organize the code to make it simple to locate the proper files and make it simple to maintain. Like most of the web frameworks, CodeIgniter uses the Model, View, Controller (MVC) pattern to organize the files. This keeps the data, the presentation, and flow through the application as separate parts. It should be noted that there are many views on the exact roles of each element, but this document describes our take on it. If you think of it differently, you&amp;rsquo;re free to modify how you use each piece as you need.</source>
          <target state="translated">응용 프로그램을 만들 때마다 적절한 파일을 쉽게 찾고 유지 관리하기 쉽게 코드를 구성하는 방법을 찾아야합니다. 대부분의 웹 프레임 워크와 마찬가지로 CodeIgniter는 모델,보기, 컨트롤러 (MVC) 패턴을 사용하여 파일을 구성합니다. 이렇게하면 데이터, 프레젠테이션 및 응용 프로그램의 흐름이 별도의 부분으로 유지됩니다. 각 요소의 정확한 역할에 대한 많은 견해가 있지만이 문서에서는 이에 대한 우리의 견해를 설명합니다. 다르게 생각하면 필요에 따라 각 조각을 사용하는 방법을 자유롭게 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66fc39e95d8fd7ca990ac094e4bb872739d78f09" translate="yes" xml:space="preserve">
          <source>Where &amp;ldquo;Click Here&amp;rdquo; is the name of the link, and &amp;ldquo;blog/comments&amp;rdquo; is the URI to the controller/method you wish to link to.</source>
          <target state="translated">여기서 &quot;여기를 클릭하십시오&quot;는 링크의 이름이고 &quot;블로그 / 설명&quot;은 링크하려는 컨트롤러 / 방법의 URI입니다.</target>
        </trans-unit>
        <trans-unit id="3e3c8d9449144d3632fae92bff75a3da4b92a846" translate="yes" xml:space="preserve">
          <source>Where &amp;lsquo;Helloworld&amp;rsquo; is the name of the controller class you want to be used.</source>
          <target state="translated">여기서 'Helloworld'는 사용하려는 컨트롤러 클래스의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="cf16e31edc73df7e09274fe34b2a08555a8b7dac" translate="yes" xml:space="preserve">
          <source>Where &amp;lsquo;blog&amp;rsquo; is the name of the controller class you want used. If you now load your main index.php file without specifying any URI segments you&amp;rsquo;ll see your &amp;ldquo;Hello World&amp;rdquo; message by default.</source>
          <target state="translated">여기서 'blog'는 사용하려는 컨트롤러 클래스의 이름입니다. URI 세그먼트를 지정하지 않고 기본 index.php 파일을로드하면 기본적으로 &quot;Hello World&quot;메시지가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="60a5e6e3b2d4a8ddbb9f7a0d5b40b62c1c16dcea" translate="yes" xml:space="preserve">
          <source>Where &amp;lsquo;class_name&amp;rsquo; is the name of the class you want to invoke. For example, to load the &lt;a href=&quot;../libraries/form_validation&quot;&gt;Form Validation Library&lt;/a&gt; you would do this:</source>
          <target state="translated">여기서 'class_name'은 호출하려는 클래스의 이름입니다. 예를 들어, &lt;a href=&quot;../libraries/form_validation&quot;&gt;양식 유효성 검사 라이브러리&lt;/a&gt; 를로드하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="dbd87827f9cb5cfae430eed8217f5c450c84dba7" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;$array&lt;/code&gt; is an associative array containing your new data. Here&amp;rsquo;s an example:</source>
          <target state="translated">여기서 &lt;code&gt;$array&lt;/code&gt; 는 새 데이터를 포함하는 연관 배열입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="1fef8990ad414570ff262cfb51993cb0b6a2f683" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;$n&lt;/code&gt; is the number of &lt;strong&gt;minutes&lt;/strong&gt; you wish the page to remain cached between refreshes.</source>
          <target state="translated">여기서 &lt;code&gt;$n&lt;/code&gt; 은 새로 고침간에 페이지를 캐시 된 상태로 유지하려는 &lt;strong&gt;시간 (분)&lt;/strong&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6c07aac45973f303bf534c8cd85b13ef3d965fb6" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;$n&lt;/code&gt; is the number of &lt;strong&gt;seconds&lt;/strong&gt; you wish the page to remain cached between refreshes.</source>
          <target state="translated">어디 &lt;code&gt;$n&lt;/code&gt; 의 수 &lt;strong&gt;초&lt;/strong&gt; 당신은 새로 고침 사이에 캐시 된 상태를 유지 할 수있는 페이지를 바랍니다.</target>
        </trans-unit>
        <trans-unit id="1fa520585fcb66ba5b5796fe4a9edc3fe4868c06" translate="yes" xml:space="preserve">
          <source>Where &lt;code&gt;item&lt;/code&gt; is the array key corresponding to the item you wish to fetch. For example, to assign a previously stored &amp;lsquo;name&amp;rsquo; item to the &lt;code&gt;$name&lt;/code&gt; variable, you will do this:</source>
          <target state="translated">여기서 &lt;code&gt;item&lt;/code&gt; 은 가져 오려는 항목에 해당하는 배열 키입니다. 예를 들어, 이전에 저장된 'name'항목을 &lt;code&gt;$name&lt;/code&gt; 변수 에 할당하려면 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="c0135c525c3824b4626fc903b652e07ec400582d" translate="yes" xml:space="preserve">
          <source>Where &lt;em&gt;language_key&lt;/em&gt; is the array key corresponding to the line you wish to show.</source>
          <target state="translated">여기서 &lt;em&gt;language_key&lt;/em&gt; 는 표시하려는 행에 해당하는 배열 키입니다.</target>
        </trans-unit>
        <trans-unit id="8f46b3a1cbd55989e8722ecde4dda5ce9433f98c" translate="yes" xml:space="preserve">
          <source>Where &lt;em&gt;name&lt;/em&gt; is the name of your view file.</source>
          <target state="translated">여기서 &lt;em&gt;name&lt;/em&gt; 은보기 파일의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="9a55d664ea96b82fd16b32bf66f1a64d972a8064" translate="yes" xml:space="preserve">
          <source>Where &lt;em&gt;someclass&lt;/em&gt; is the file name, without the &amp;ldquo;.php&amp;rdquo; file extension. You can submit the file name capitalized or lower case. CodeIgniter doesn&amp;rsquo;t care.</source>
          <target state="translated">어디 &lt;em&gt;someclass는&lt;/em&gt; 파일 이름은 &quot;.PHP&quot;파일 확장자가없는 것이다. 파일 이름은 대문자 또는 소문자로 제출할 수 있습니다. CodeIgniter는 상관하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cadaeab3f942cd782e8bed8ea787912b4239665a" translate="yes" xml:space="preserve">
          <source>Where &lt;strong&gt;Model_name&lt;/strong&gt; is the name of your class. Class names &lt;strong&gt;must&lt;/strong&gt; have the first letter capitalized with the rest of the name lowercase. Make sure your class extends the base Model class.</source>
          <target state="translated">여기서 &lt;strong&gt;Model_name&lt;/strong&gt; 은 클래스 이름입니다. 클래스 이름 &lt;strong&gt;은&lt;/strong&gt; 첫 글자는 소문자로 대문자로 입력 &lt;strong&gt;해야합니다&lt;/strong&gt; . 클래스가 기본 모델 클래스를 확장하는지 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="5d7aa6ab54959247342b3da895b35c1a44bfd3bb" translate="yes" xml:space="preserve">
          <source>Where &lt;strong&gt;name&lt;/strong&gt; is the file name of the helper, without the .php file extension or the &amp;ldquo;_helper&amp;rdquo; part.</source>
          <target state="translated">여기서 &lt;strong&gt;name&lt;/strong&gt; 은 .php 파일 확장자 나 &quot;_helper&quot;부분이없는 도우미의 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="b5456b23215de6ffa842c8a50b9c21a2b264480f" translate="yes" xml:space="preserve">
          <source>Where &lt;strong&gt;name&lt;/strong&gt; is the file name of the helper, without the .php file extension or the &amp;ldquo;helper&amp;rdquo; part.</source>
          <target state="translated">여기서 &lt;strong&gt;name&lt;/strong&gt; 은 .php 파일 확장자 또는 &quot;helper&quot;부분이없는 도우미의 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="51639ddec522a0c093fc379dd7e9dad512467f82" translate="yes" xml:space="preserve">
          <source>Where a character set is supplied, it must be supported by iconv and in a format that it recognizes.</source>
          <target state="translated">문자 세트가 제공되는 경우, iconv에서 인식 가능한 형식으로 지원되어야합니다.</target>
        </trans-unit>
        <trans-unit id="b0ae6d95c6e23cb558138dd4ef46c92b86d879af" translate="yes" xml:space="preserve">
          <source>Where class name is the name of the driver class you want to invoke. For example, to load a driver named &amp;ldquo;Some_parent&amp;rdquo; you would do this:</source>
          <target state="translated">여기서 class name은 호출하려는 드라이버 클래스의 이름입니다. 예를 들어, &quot;Some_parent&quot;라는 드라이버를로드하려면 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="48746863e4633841d1207e1b6fb0a3b7a76d97fe" translate="yes" xml:space="preserve">
          <source>Where entry_id represents the individual ID number for each of your entries.</source>
          <target state="translated">여기서 entry_id는 각 항목의 개별 ID 번호를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6997db3bae00bd1f736e88e727ba5f4fb19877f8" translate="yes" xml:space="preserve">
          <source>Where filename is the name of the file you wish to load (without the file extension), and language is the language set containing it (ie, english). If the second parameter is missing, the default language set in your &lt;strong&gt;application/config/config.php&lt;/strong&gt; file will be used.</source>
          <target state="translated">여기서 filename은 파일 확장명없이로드하려는 파일의 이름이고 language는 파일을 포함하는 언어 세트 (예 : 영어)입니다. 두 번째 매개 변수가 없으면 &lt;strong&gt;application / config / config.php&lt;/strong&gt; 파일에 설정된 기본 언어 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="3740658026ffe24ec32f433d1ab0b52980f5e7e1" translate="yes" xml:space="preserve">
          <source>Where filename is the name of your config file, without the .php file extension.</source>
          <target state="translated">여기서 filename은 .php 파일 확장자가없는 구성 파일의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="9def89d5257ba9a635ebb8346f02a616146e4313" translate="yes" xml:space="preserve">
          <source>Where group_name is the name of the connection group from your config file.</source>
          <target state="translated">여기서 group_name은 구성 파일의 연결 그룹 이름입니다.</target>
        </trans-unit>
        <trans-unit id="e2be4651959d5a8fa09eab2c2cab284dc166214e" translate="yes" xml:space="preserve">
          <source>Where item is the array key corresponding to the item you wish to fetch. For example, to assign a previously stored &amp;lsquo;name&amp;rsquo; item to the &lt;code&gt;$name&lt;/code&gt; variable, you will do this:</source>
          <target state="translated">여기서 item은 가져 오려는 항목에 해당하는 배열 키입니다. 예를 들어, 이전에 저장된 'name'항목을 &lt;code&gt;$name&lt;/code&gt; 변수에 지정하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="6dfdc9c87c3dd25ce39b33eeea7549e354364a23" translate="yes" xml:space="preserve">
          <source>Where item represents one of these four pieces of info: url, title, excerpt, or blog_name</source>
          <target state="translated">여기서 item은 다음 네 가지 정보 중 하나를 나타냅니다. url, title, 발췌 또는 blog_name</target>
        </trans-unit>
        <trans-unit id="ab7413a5b8da3dd3a33c8e9a5e55d60688487137" translate="yes" xml:space="preserve">
          <source>Where item_name is the $config array index you want to change, and item_value is its value.</source>
          <target state="translated">여기서 item_name은 변경하려는 $ config 배열 색인이고 item_value는 값입니다.</target>
        </trans-unit>
        <trans-unit id="81b6c007109dae98837f955741c327b8ac2d6d9c" translate="yes" xml:space="preserve">
          <source>Where item_name is the $config array index you want to retrieve. For example, to fetch your language choice you&amp;rsquo;ll do this:</source>
          <target state="translated">여기서 item_name은 검색하려는 $ config 배열 색인입니다. 예를 들어, 언어 선택을 가져 오려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="63931d6be02e0fcab48089d17017133e74187138" translate="yes" xml:space="preserve">
          <source>Where method is the name of the method.</source>
          <target state="translated">여기서 method는 메소드의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="361a944af4fa403df16219b9ecb3c3d855445646" translate="yes" xml:space="preserve">
          <source>Where name is the name of your view file.</source>
          <target state="translated">여기서 name은보기 파일의 이름입니다.</target>
        </trans-unit>
        <trans-unit id="962108f9b4bdb1f85f31c8baad7ed9b2f2725acd" translate="yes" xml:space="preserve">
          <source>Where possible, CodeIgniter has been kept as flexible as possible, allowing you to work in the way you want, not being forced into working any certain way. The framework can have core parts easily extended or completely replaced to make the system work the way you need it to. In short, CodeIgniter is the malleable framework that tries to provide the tools you need while staying out of the way.</source>
          <target state="translated">가능한 경우 CodeIgniter는 가능한 한 유연하게 유지되어 특정 방식으로 작업하지 않고 원하는 방식으로 작업 할 수 있습니다. 프레임 워크는 핵심 부품을 쉽게 확장하거나 완전히 교체하여 시스템이 필요한 방식으로 작동하도록 할 수 있습니다. 요컨대, CodeIgniter는 방해가되지 않는 동안 필요한 도구를 제공하려고하는 가단성 프레임 워크입니다.</target>
        </trans-unit>
        <trans-unit id="7cf8f9309eb3768a1202b899654329e551e037f3" translate="yes" xml:space="preserve">
          <source>Where rule corresponds to the name of a particular rule, and Error Message is the text you would like displayed.</source>
          <target state="translated">여기서 규칙은 특정 규칙의 이름에 해당하고 오류 메시지는 표시하려는 텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="166c15243bd39e08e3bbacd7b6bb9e50b618a37e" translate="yes" xml:space="preserve">
          <source>Where test is the result of the code you wish to test, expected result is the data type you expect, test name is an optional name you can give your test, and notes are optional notes. Example:</source>
          <target state="translated">test는 테스트하려는 코드의 결과이고, 예상 결과는 예상되는 데이터 유형이고, 테스트 이름은 테스트에 제공 할 수있는 선택적 이름이며, 메모는 선택적 메모입니다. 예:</target>
        </trans-unit>
        <trans-unit id="180b4d681ad1ce5e5a63ecadb11e7511d34e1e66" translate="yes" xml:space="preserve">
          <source>WhereTest #1640, #1677</source>
          <target state="translated">WhereTest # 1640, # 1677</target>
        </trans-unit>
        <trans-unit id="7fa064a285680935d20489e8acb668bd6e34b1b3" translate="yes" xml:space="preserve">
          <source>WhereTest #2001</source>
          <target state="translated">WhereTest # 2001</target>
        </trans-unit>
        <trans-unit id="8899c76a9eae8ce5f70c39f0443906feb236e28e" translate="yes" xml:space="preserve">
          <source>WhereTest #2052</source>
          <target state="translated">WhereTest # 2052</target>
        </trans-unit>
        <trans-unit id="a040d87c02689a0aa7952af2a9bcfe717a9512ad" translate="yes" xml:space="preserve">
          <source>Whereas withDeleted() will return both deleted and not-deleted rows, this method modifies the next find* methods to return only soft deleted rows:</source>
          <target state="translated">withDeleted ()는 삭제 된 행과 삭제되지 않은 행을 모두 반환하는 반면,이 메서드는 일시 삭제 된 행만 반환하도록 다음 find * 메서드를 수정합니다.</target>
        </trans-unit>
        <trans-unit id="d79ac356e5598f9bbde944de297c0f0b693708d7" translate="yes" xml:space="preserve">
          <source>Whether or not to only allow safe product names. Default TRUE.</source>
          <target state="translated">안전한 제품 이름 만 허용할지 여부 기본 TRUE.</target>
        </trans-unit>
        <trans-unit id="7e32d483095fb603f718f33635d2a4dc1f9dd190" translate="yes" xml:space="preserve">
          <source>Whether or not to use an encrypted connection.</source>
          <target state="translated">암호화 된 연결을 사용할지 여부</target>
        </trans-unit>
        <trans-unit id="294e1273104b07171499ef86b84110aa4aaf761e" translate="yes" xml:space="preserve">
          <source>Whether or not to use client compression (MySQL only).</source>
          <target state="translated">클라이언트 압축 사용 여부 (MySQL 만 해당)</target>
        </trans-unit>
        <trans-unit id="cfeaa89ce11e4aa23688469e1ef43194ab820721" translate="yes" xml:space="preserve">
          <source>Whether output should keep foreign key checks enabled.</source>
          <target state="translated">출력에서 외래 키 검사를 활성화해야하는지 여부입니다.</target>
        </trans-unit>
        <trans-unit id="467f0fde18d07027f291e08aad6c4207fe311f08" translate="yes" xml:space="preserve">
          <source>Whether the callbacks defined above should be used.</source>
          <target state="translated">위에 정의 된 콜백을 사용해야하는지 여부.</target>
        </trans-unit>
        <trans-unit id="d09a99b0427ea861d128b31f9b599d95a31c1232" translate="yes" xml:space="preserve">
          <source>Whether the cipher-text should be raw. Boolean. If set to TRUE, then Base64 encoding and decoding will not be performed and HMAC will not be a hexadecimal string.</source>
          <target state="translated">암호문이 원시이어야하는지 여부 부울. TRUE로 설정하면 Base64 인코딩 및 디코딩이 수행되지 않으며 HMAC는 16 진 문자열이 아닙니다.</target>
        </trans-unit>
        <trans-unit id="5ab5febbab95c505080e7a2a47cb205fe5444d21" translate="yes" xml:space="preserve">
          <source>Whether the file is an image or not. 1 = image. 0 = not.</source>
          <target state="translated">파일이 이미지인지 아닌지. 1 = 이미지. 0 = 아닙니다.</target>
        </trans-unit>
        <trans-unit id="284ac4d0bee4b0281411fed9edba5aca7ed05999" translate="yes" xml:space="preserve">
          <source>Whether to convert high ASCII and MS Word characters to HTML entities.</source>
          <target state="translated">높은 ASCII 및 MS Word 문자를 HTML 엔터티로 변환할지 여부</target>
        </trans-unit>
        <trans-unit id="a0a760cbcd743216ee6c94ff5b4574a9b41ee4fd" translate="yes" xml:space="preserve">
          <source>Whether to create the session cookie only on encrypted (HTTPS) connections</source>
          <target state="translated">암호화 된 (HTTPS) 연결에서만 세션 쿠키를 작성할지 여부</target>
        </trans-unit>
        <trans-unit id="596f093a49c250f909dc5eba63b154fff9af692f" translate="yes" xml:space="preserve">
          <source>Whether to destroy session data associated with the old session ID when auto-regenerating the session ID. When set to FALSE, the data will be later deleted by the garbage collector.</source>
          <target state="translated">세션 ID를 자동 재생성 할 때 이전 세션 ID와 연관된 세션 데이터를 삭제할지 여부 FALSE로 설정하면 나중에 가비지 콜렉터가 데이터를 삭제합니다.</target>
        </trans-unit>
        <trans-unit id="36532138533bb6c821a3ffeffe997464065be151" translate="yes" xml:space="preserve">
          <source>Whether to include DROP TABLE statements in your SQL export file.</source>
          <target state="translated">SQL 내보내기 파일에 DROP TABLE 문 포함 여부</target>
        </trans-unit>
        <trans-unit id="7a341e68b95260b53429bbeaf43c9ea415757acf" translate="yes" xml:space="preserve">
          <source>Whether to include INSERT statements in your SQL export file.</source>
          <target state="translated">SQL 내보내기 파일에 INSERT 문 포함 여부</target>
        </trans-unit>
        <trans-unit id="18bc4287f9e3ad33779b015d2f61c9adf1648369" translate="yes" xml:space="preserve">
          <source>Whether to use a HMAC. Boolean. If set to FALSE, then &lt;em&gt;hmac_digest&lt;/em&gt; and &lt;em&gt;hmac_key&lt;/em&gt; will be ignored.</source>
          <target state="translated">HMAC 사용 여부 부울. FALSE로 설정하면 &lt;em&gt;hmac_digest&lt;/em&gt; 및 &lt;em&gt;hmac_key&lt;/em&gt; 가 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="00025c2db2830e8b01ce5b369d0d63db4db5bc68" translate="yes" xml:space="preserve">
          <source>Whether to validate the email address.</source>
          <target state="translated">이메일 주소의 유효성을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="8a74b0951bc73e52e200a3d4ec841d7d876470f8" translate="yes" xml:space="preserve">
          <source>Whether to validate the user&amp;rsquo;s IP address when reading the session cookie. Note that some ISPs dynamically changes the IP, so if you want a non-expiring session you will likely set this to FALSE.</source>
          <target state="translated">세션 쿠키를 읽을 때 사용자의 IP 주소를 확인할지 여부입니다. 일부 ISP는 동적으로 IP를 변경하므로 만료되지 않는 세션을 원할 경우이 값을 FALSE로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="685a3e617e32fb53cc0af1b92ad48b69054726f6" translate="yes" xml:space="preserve">
          <source>Whether validation should be skipped during all &lt;code&gt;inserts&lt;/code&gt; and &lt;code&gt;updates&lt;/code&gt;. The default value is false, meaning that data will always attempt to be validated. This is primarily used by the &lt;code&gt;skipValidation()&lt;/code&gt; method, but may be changed to &lt;code&gt;true&lt;/code&gt; so this model will never validate.</source>
          <target state="translated">모든 &lt;code&gt;inserts&lt;/code&gt; 및 &lt;code&gt;updates&lt;/code&gt; 중에 유효성 검사를 건너 뛰어야하는지 여부 . 기본값은 false이며, 이는 데이터가 항상 유효성 검사를 시도 함을 의미합니다. 이것은 주로 &lt;code&gt;skipValidation()&lt;/code&gt; 메소드에서 사용되지만 이 모델이 유효성을 검사하지 않도록 &lt;code&gt;true&lt;/code&gt; 로 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="70a032495f89fee45ada9ca9769df8f8ae31934e" translate="yes" xml:space="preserve">
          <source>Which would return a simple array like:</source>
          <target state="translated">다음과 같은 간단한 배열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="47a41deae9e4571eb0e4d17d605b2d0ea04ea48f" translate="yes" xml:space="preserve">
          <source>Which would return a simple file instance like:</source>
          <target state="translated">다음과 같은 간단한 파일 인스턴스를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="803d4ea7a8efdd67cd47f7468e66a294e7314b20" translate="yes" xml:space="preserve">
          <source>While CodeIgniter intelligently takes care of closing your database connections, you can explicitly close the connection.</source>
          <target state="translated">CodeIgniter는 데이터베이스 연결을 지능적으로 처리하지만 연결을 명시 적으로 닫을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45da45443af57f56913c3c4b409877fa9bd5a2d1" translate="yes" xml:space="preserve">
          <source>While PHP does a pretty good job of closing all open statements with the database it&amp;rsquo;s always a good idea to close out the prepared statement when you&amp;rsquo;re done with it:</source>
          <target state="translated">PHP는 데이터베이스와 함께 열려있는 모든 문을 닫는 작업을 상당히 잘 수행하지만, 작업이 끝나면 준비된 문을 닫는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="ab583ad64568c4b70066a26a548ca1336bc5d730" translate="yes" xml:space="preserve">
          <source>While PHP provides ways to interact with the request and response headers, CodeIgniter, like most frameworks, abstracts them so that you have a consistent, simple interface to them. The &lt;a href=&quot;../incoming/incomingrequest&quot;&gt;IncomingRequest class&lt;/a&gt; is an object-oriented representation of the HTTP request. It provides everything you need:</source>
          <target state="translated">PHP는 요청 및 응답 헤더와 상호 작용하는 방법을 제공하지만 대부분의 프레임 워크와 마찬가지로 CodeIgniter는이를 추상화하여 일관성 있고 간단한 인터페이스를 제공합니다. &lt;a href=&quot;../incoming/incomingrequest&quot;&gt;IncomingRequest 클래스는&lt;/a&gt; HTTP 요청의 객체 지향의 표현이다. 필요한 모든 것을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7e3df661c022ab5566f4fce569796ed2ac9f636a" translate="yes" xml:space="preserve">
          <source>While a default namespace will be prepended to the generated controllers (see below), you can also specify a different namespace to be used in any options array, with the &lt;code&gt;namespace&lt;/code&gt; option. The value should be the namespace you want modified:</source>
          <target state="translated">기본 네임 스페이스가 생성 된 컨트롤러 (아래 참조)에 붙을 동안, 당신은 또한 함께, 어떤 옵션 배열에 사용되는 다른 네임 스페이스를 지정할 수 있습니다 &lt;code&gt;namespace&lt;/code&gt; 옵션을 선택합니다. 값은 수정하려는 네임 스페이스 여야합니다.</target>
        </trans-unit>
        <trans-unit id="54d040c62ed61961dd5252f6757beaa331e32a00" translate="yes" xml:space="preserve">
          <source>While all of the examples show echo the view directly, you can also return the output from the view, instead, and it will be appended to any captured output.</source>
          <target state="translated">모든 예제가 뷰를 직접 반영하는 것을 보여 주지만, 대신 뷰에서 출력을 반환 할 수 있으며 캡처 된 출력에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="3d97114370d3e2db93788777676dbbe204bb514e" translate="yes" xml:space="preserve">
          <source>While fairly simple, these examples show that using Entity classes can provide a very flexible way to enforce business logic and create objects that are pleasant to use.</source>
          <target state="translated">이 예제는 매우 간단하지만 Entity 클래스를 사용하면 비즈니스 논리를 적용하고 사용하기 편리한 개체를 만드는 매우 유연한 방법을 제공 할 수 있음을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="33805273bc4c8d42f9ff2720bd7d1aabd6af60c9" translate="yes" xml:space="preserve">
          <source>While not &amp;ldquo;true&amp;rdquo; caching, Query Builder enables you to save (or &amp;ldquo;cache&amp;rdquo;) certain parts of your queries for reuse at a later point in your script&amp;rsquo;s execution. Normally, when an Query Builder call is completed, all stored information is reset for the next call. With caching, you can prevent this reset, and reuse information easily.</source>
          <target state="translated">&quot;true&quot;캐싱은 아니지만 Query Builder를 사용하면 나중에 스크립트 실행시 재사용 할 수 있도록 쿼리의 특정 부분을 저장 (또는 &quot;캐시&quot;) 할 수 있습니다. 일반적으로 Query Builder 호출이 완료되면 저장된 모든 정보가 다음 호출에 대해 재설정됩니다. 캐싱을 사용하면이 재설정을 방지하고 정보를 쉽게 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6279314052681e9a1c54ca1316b035e0e2e98616" translate="yes" xml:space="preserve">
          <source>While not an instantiator, this method is the opposite of the &lt;strong&gt;instance&lt;/strong&gt; method, allowing you to convert a Time instance into a DateTime instance. This preserves the timezone setting, but loses the locale, since DateTime is not aware of locales:</source>
          <target state="translated">인스턴스화 기는 아니지만이 메서드는 &lt;strong&gt;인스턴스&lt;/strong&gt; 메서드와 반대이므로 Time 인스턴스를 DateTime 인스턴스로 변환 할 수 있습니다. 이렇게하면 시간대 설정이 유지되지만 DateTime이 로케일을 인식하지 않기 때문에 로케일이 손실됩니다.</target>
        </trans-unit>
        <trans-unit id="59bb843d28a49bdb5aed4f94d29108200b94df4c" translate="yes" xml:space="preserve">
          <source>While plugins will often consist of tag pairs, like shown above, they can also be a single tag, with no closing tag:</source>
          <target state="translated">플러그인은 위와 같이 태그 쌍으로 구성되는 경우가 많지만 닫는 태그가없는 단일 태그 일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="18b22e615305fefc68d32b3773550f10669fab49" translate="yes" xml:space="preserve">
          <source>While the $angle parameter accepts a float, it will convert it to an integer during the process. If the value is any other than the three values listed above, it will throw a CodeIgniterImagesImageException.</source>
          <target state="translated">$ angle 매개 변수는 부동 소수점을 받아들이지 만 프로세스 중에 정수로 변환합니다. 값이 위에 나열된 세 가지 값이 아닌 경우 CodeIgniterImagesImageException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3e2bfd465f855150e259ff9644413f09396fd1cb" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;add()&lt;/code&gt; method is convenient, it is recommended to always use the HTTP-verb-based routes, described below, as it is more secure. It will also provide a slight performance increase, since only routes that match the current request method are stored, resulting in fewer routes to scan through when trying to find a match.</source>
          <target state="translated">&lt;code&gt;add()&lt;/code&gt; 메서드가 편리 하지만 더 안전하므로 항상 아래에 설명 된 HTTP 동사 기반 경로를 사용하는 것이 좋습니다. 또한 현재 요청 방법과 일치하는 경로 만 저장되어 일치 항목을 찾으려고 할 때 검색 할 경로가 줄어들 기 때문에 약간의 성능 향상을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5ec518a39a8a429e8b4f04fee1df14180bbe8685" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;getTimers()&lt;/code&gt; method will give you the raw data for all of the timers in your project, you can retrieve the duration of a single timer, in seconds, with the &lt;code&gt;getElapsedTime()&lt;/code&gt; method. The first parameter is the name of the timer to display. The second is the number of decimal places to display. This defaults to 4:</source>
          <target state="translated">그동안 &lt;code&gt;getTimers()&lt;/code&gt; 메소드는 당신에게 당신의 프로젝트의 모든 타이머에 대한 원시 데이터를 제공합니다 당신은 몇 초 만에 하나의 타이머의 시간, 검색 할 수 있습니다 &lt;code&gt;getElapsedTime()&lt;/code&gt; 메소드를. 첫 번째 매개 변수는 표시 할 타이머의 이름입니다. 두 번째는 표시 할 소수 자릿수입니다. 기본값은 4입니다.</target>
        </trans-unit>
        <trans-unit id="42e807dcef131e0d93fbc948269009c3735e1196" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;request()&lt;/code&gt; method is the most flexible, you can also use the following shortcut methods. They each take the URL as the first parameter and an array of options as the second:</source>
          <target state="translated">그동안 &lt;code&gt;request()&lt;/code&gt; 메소드가 가장 유연한입니다, 당신은 또한 다음과 같은 바로 가기 방법을 사용할 수 있습니다. 각각 URL을 첫 번째 매개 변수로 사용하고 옵션 배열을 두 번째 매개 변수로 사용합니다.</target>
        </trans-unit>
        <trans-unit id="3b3449961a1f124813435abe0e1debe551da6f0a" translate="yes" xml:space="preserve">
          <source>While the &lt;code&gt;write()&lt;/code&gt; command will write a single line to the terminal, ending it with a EOL character, you can use the &lt;code&gt;color()&lt;/code&gt; method to make a string fragment that can be used in the same way, except that it will not force an EOL after printing. This allows you to create multiple outputs on the same row. Or, more commonly, you can use it inside of a &lt;code&gt;write()&lt;/code&gt; method to create a string of a different color inside:</source>
          <target state="translated">그동안 &lt;code&gt;write()&lt;/code&gt; 명령은 EOL 문자로 종료, 터미널에 한 줄을 쓸 것입니다, 당신이 사용할 수있는 &lt;code&gt;color()&lt;/code&gt; 을 제외하고는 동일한 방법으로 사용할 수있는 문자열 조각을 만드는 방법을 그것이 강제하지 않습니다 인쇄 후 EOL. 이를 통해 동일한 행에 여러 출력을 생성 할 수 있습니다. 또는 더 일반적으로 &lt;code&gt;write()&lt;/code&gt; 메서드 내부에서 사용하여 내부에 다른 색상의 문자열을 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b9e8822c5ceb0dde0d7027d6af5c8470a711c467" translate="yes" xml:space="preserve">
          <source>While the ability to use cli commands like any other route is convenient, you might find times where you need a little something different. That&amp;rsquo;s where CLI Commands come in. They are simple classes that do not need to have routes defined for, making them perfect for building tools that developers can use to make their jobs simpler, whether by handling migrations or database seeding, checking cronjob status, or even building out custom code generators for your company.</source>
          <target state="translated">다른 경로와 마찬가지로 cli 명령을 사용하는 기능은 편리하지만 약간 다른 것이 필요한시기를 찾을 수 있습니다. 여기에서 CLI 명령이 제공됩니다. 경로를 정의 할 필요가없는 단순한 클래스이므로 마이그레이션 또는 데이터베이스 시드 처리, cronjob 상태 확인 또는 회사를위한 맞춤형 코드 생성기를 구축 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a24186f852a28773d63cba634d426d2063a464b" translate="yes" xml:space="preserve">
          <source>While the add() method is simple to use, it is often handier to work with multiple routes at once, using the &lt;code&gt;map()&lt;/code&gt; method. Instead of calling the &lt;code&gt;add()&lt;/code&gt; method for each route that you need to add, you can define an array of routes and then pass it as the first parameter to the &lt;code&gt;map()&lt;/code&gt; method:</source>
          <target state="translated">add () 메서드는 사용하기 쉽지만 &lt;code&gt;map()&lt;/code&gt; 메서드를 사용하여 한 번에 여러 경로로 작업하는 것이 더 편리합니다 . &lt;code&gt;add()&lt;/code&gt; 해야하는 각 경로에 대해 add () 메서드를 호출하는 대신 경로 배열을 정의한 다음 첫 번째 매개 변수로 &lt;code&gt;map()&lt;/code&gt; 메서드에 전달할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ac62fd30ca0a21aaa967a7d8bc178d3509eb9346" translate="yes" xml:space="preserve">
          <source>While the examples above are convenient, they don&amp;rsquo;t help enforce any business logic. The base Entity class implements some smart &lt;code&gt;__get()&lt;/code&gt; and &lt;code&gt;__set()&lt;/code&gt; methods that will check for special methods and use those instead of using the attributes directly, allowing you to enforce any business logic or data conversion that you need.</source>
          <target state="translated">위의 예는 편리하지만 비즈니스 논리를 적용하는 데 도움이되지 않습니다. 기본 Entity 클래스 는 특수 메서드를 확인하고 속성을 직접 사용하는 대신 사용하는 스마트 &lt;code&gt;__get()&lt;/code&gt; 및 &lt;code&gt;__set()&lt;/code&gt; 메서드를 구현 하여 필요한 비즈니스 논리 또는 데이터 변환을 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb9da9d44325093818ad3f072598f1ae27aa0a43" translate="yes" xml:space="preserve">
          <source>While using XDebug and a good IDE can be indispensable to debug your application, sometimes a quick &lt;code&gt;var_dump()&lt;/code&gt; is all you need. CodeIgniter makes that even better by bundling in the excellent &lt;a href=&quot;https://kint-php.github.io/kint/&quot;&gt;Kint&lt;/a&gt; debugging tool for PHP. This goes way beyond your usual tool, providing many alternate pieces of data, like formatting timestamps into recognizable dates, showing you hexcodes as colors, display array data like a table for easy reading, and much, much more.</source>
          <target state="translated">XDebug와 좋은 IDE를 사용하는 것은 응용 프로그램을 디버깅하는 데 필수적 일 수 있지만 때로는 빠른 &lt;code&gt;var_dump()&lt;/code&gt; 만 있으면됩니다. CodeIgniter는 훌륭한 PHP 용 &lt;a href=&quot;https://kint-php.github.io/kint/&quot;&gt;Kint&lt;/a&gt; 디버깅 도구를 번들로 제공함으로써이를 더욱 향상 시킵니다. 이는 일반적인 도구를 넘어서 인식 가능한 날짜로 타임 스탬프 서식 지정, 색상으로 16 진수 코드 표시, 쉽게 읽을 수 있도록 표와 같은 배열 데이터 표시 등과 같은 많은 대체 데이터 조각을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6185157d2984b31081063474c4296ed387cbcb84" translate="yes" xml:space="preserve">
          <source>While you can set any headers this request needs by using the &lt;code&gt;setHeader()&lt;/code&gt; method, you can also pass an associative array of headers in as an option. Each key is the name of a header, and each value is a string or array of strings representing the header field values:</source>
          <target state="translated">&lt;code&gt;setHeader()&lt;/code&gt; 메서드 를 사용하여이 요청에 필요한 헤더를 설정할 수 있지만 , 옵션으로 헤더의 연관 배열을 전달할 수도 있습니다. 각 키는 헤더의 이름이고 각 값은 헤더 필드 값을 나타내는 문자열 또는 문자열 배열입니다.</target>
        </trans-unit>
        <trans-unit id="47b13cdb0607925057b8e9d36b0386d1a11eb54c" translate="yes" xml:space="preserve">
          <source>Whitespace</source>
          <target state="translated">Whitespace</target>
        </trans-unit>
        <trans-unit id="0b280f89a4b0aca7c9c7f450ed6c765dd495a1cd" translate="yes" xml:space="preserve">
          <source>Whitespace in Files</source>
          <target state="translated">파일의 공백</target>
        </trans-unit>
        <trans-unit id="a656379c313fcb08a17ea3b6757aae816a94c395" translate="yes" xml:space="preserve">
          <source>Who is CodeIgniter For?</source>
          <target state="translated">CodeIgniter는 누구를위한 것입니까?</target>
        </trans-unit>
        <trans-unit id="a331d246a211eb706cb0e42aac501d7d2127de37" translate="yes" xml:space="preserve">
          <source>Why are we telling you this? Because it is likely that after trying to find the reason for your performance issues, you may conclude that locking is the issue and therefore look into how to remove the locks &amp;hellip;</source>
          <target state="translated">왜 우리가 이것을 말합니까? 성능 문제의 원인을 찾은 후에는 잠금이 문제라고 결론을 내릴 수 있으므로 잠금을 제거하는 방법을 조사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f2a1c91c6a6f23d6ec116ad2b1193cd8fde64a3" translate="yes" xml:space="preserve">
          <source>Why run via the command-line?</source>
          <target state="translated">왜 명령 줄을 통해 실행됩니까?</target>
        </trans-unit>
        <trans-unit id="f4138f22664d37f96c263052adeb723fdfd7248c" translate="yes" xml:space="preserve">
          <source>Wildcards</source>
          <target state="translated">Wildcards</target>
        </trans-unit>
        <trans-unit id="1426e6623690ae87dc74d59b1bc02f2dffd6d69c" translate="yes" xml:space="preserve">
          <source>Wildcards are actually aliases for regular expressions, with &lt;strong&gt;:any&lt;/strong&gt; being translated to &lt;strong&gt;[^/]+&lt;/strong&gt; and &lt;strong&gt;:num&lt;/strong&gt; to &lt;strong&gt;[0-9]+&lt;/strong&gt;, respectively.</source>
          <target state="translated">와일드 카드는 실제로 정규 표현식의 별명입니다 &lt;strong&gt;. : any&lt;/strong&gt; 는 &lt;strong&gt;[^ /] +로&lt;/strong&gt; , &lt;strong&gt;: num&lt;/strong&gt; 은 &lt;strong&gt;[0-9] +로 변환됩니다.&lt;/strong&gt; 로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="02f2bbd3e906a10e6e2d1d0a5e0a8fad2e6991a7" translate="yes" xml:space="preserve">
          <source>Will Caching Improve Your Site&amp;rsquo;s Performance?</source>
          <target state="translated">캐싱으로 사이트 성능이 향상됩니까?</target>
        </trans-unit>
        <trans-unit id="5fa62010212ed6d1389865053799c331a1845b80" translate="yes" xml:space="preserve">
          <source>Will highlight a phrase within a text string. The first parameter will contain the original string, the second will contain the phrase you wish to highlight. The third and fourth parameters will contain the opening/closing HTML tags you would like the phrase wrapped in.</source>
          <target state="translated">텍스트 문자열 내에서 문구를 강조 표시합니다. 첫 번째 매개 변수는 원래 문자열을 포함하고 두 번째 매개 변수는 강조 표시하려는 구를 포함합니다. 세 번째 및 네 번째 매개 변수에는 구문을 래핑하려는 시작 / 닫기 HTML 태그가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="327adc19ade5f20516fb06a43c75b9bd45ee6744" translate="yes" xml:space="preserve">
          <source>Will show</source>
          <target state="translated">표시됩니다</target>
        </trans-unit>
        <trans-unit id="94938ab89777169eb1c246a4f6b41ce07e8508d9" translate="yes" xml:space="preserve">
          <source>WinCache Caching</source>
          <target state="translated">WinCache 캐싱</target>
        </trans-unit>
        <trans-unit id="f598d48cdfb99b1f28bb351094affd72f4c8ce26" translate="yes" xml:space="preserve">
          <source>WincacheHandler #1895</source>
          <target state="translated">WincacheHandler # 1895</target>
        </trans-unit>
        <trans-unit id="03232025bc5afabeac6494d436b70b83c494dd5a" translate="yes" xml:space="preserve">
          <source>Windows users wanting to build their own copy of the user guide locally can now use the included &lt;code&gt;make.bat&lt;/code&gt; file.</source>
          <target state="translated">로컬에서 사용자 가이드의 사본을 작성하려는 Windows 사용자는 이제 포함 된 &lt;code&gt;make.bat&lt;/code&gt; 파일을 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="60bbcc53ac50fc68a24212e5500f71caaab14353" translate="yes" xml:space="preserve">
          <source>With CSP enabled, two header lines are added to the HTTP response: a Content-Security-Policy header, with policies identifying content types or origins that are explicitly allowed for different contexts, and a Content-Security-Policy-Report-Only header, which identifies content types or origins that will be allowed but which will also be reported to the destination of your choice.</source>
          <target state="translated">CSP를 사용하면 두 개의 헤더 행이 HTTP 응답에 추가됩니다. Content-Security-Policy 헤더, 다른 컨텍스트에 대해 명시 적으로 허용되는 콘텐츠 유형 또는 출처를 식별하는 정책과 Content-Security-Policy-Report-Only 헤더, 허용되지만 선택한 대상에도보고되는 콘텐츠 유형 또는 출처를 식별합니다.</target>
        </trans-unit>
        <trans-unit id="216e2783d33d181369b6504c58e8f08624ca1b7f" translate="yes" xml:space="preserve">
          <source>With CodeIgniter&amp;rsquo;s built in methods you can simply do this:</source>
          <target state="translated">CodeIgniter의 내장 메소드를 사용하면 다음과 같이 간단하게 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d4ebe5db5aedc4731050285c1d9bc87c4edb16a1" translate="yes" xml:space="preserve">
          <source>With both a nested and a loop substitution, you have the option of cascading data pairs into the inner substitution.</source>
          <target state="translated">중첩 및 루프 대체를 모두 사용하면 데이터 쌍을 내부 대체로 계단식으로 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="88b3ac677c0436ceb30c220acfe2952b96b7c04e" translate="yes" xml:space="preserve">
          <source>With regular expressions, you can also catch a segment containing a forward slash (&amp;lsquo;/&amp;rsquo;), which would usually represent the delimiter between multiple segments.</source>
          <target state="translated">정규식을 사용하면 슬래시 ( '/')가 포함 된 세그먼트를 찾을 수도 있습니다. 일반적으로 여러 세그먼트 사이의 구분 기호를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c0e52ce782eb9d54ee69c82f6fec5539d6fda294" translate="yes" xml:space="preserve">
          <source>With regular expressions, you can also catch multiple segments at once. For example, if a user accesses a password protected area of your web application and you wish to be able to redirect them back to the same page after they log in, you may find this example useful:</source>
          <target state="translated">정규식을 사용하면 한 번에 여러 세그먼트를 잡을 수도 있습니다. 예를 들어, 사용자가 웹 애플리케이션의 비밀번호로 보호 된 영역에 액세스하고 로그인 한 후 동일한 페이지로 다시 리디렉션하려는 경우이 예제가 유용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56ed0b25a8f3038b40ea145dbe764b951319723b" translate="yes" xml:space="preserve">
          <source>With that out of the way it&amp;rsquo;s time to view your application in a browser. You can serve it through any server of your choice, Apache, Nginx, etc, but CodeIgniter comes with a simple command that takes advantage of PHP&amp;rsquo;s built-in server to get you up and running fast on your development machines. Type the following on the command line from the root of your project:</source>
          <target state="translated">이제는 브라우저에서 애플리케이션을 볼 시간입니다. Apache, Nginx 등 원하는 서버를 통해 서비스를 제공 할 수 있지만 CodeIgniter에는 PHP의 내장 서버를 활용하는 간단한 명령이 함께 제공되어 개발 컴퓨터에서 빠르게 실행하고 실행할 수 있습니다. 프로젝트 루트의 명령 줄에 다음을 입력합니다.</target>
        </trans-unit>
        <trans-unit id="87be61dc62da85aa47875f62897d205115eba25b" translate="yes" xml:space="preserve">
          <source>With the &lt;strong&gt;$activeExplorers&lt;/strong&gt; option, you can specify which items are automatically discovered. If the item is not present, then no auto-discovery will happen for that item, but the others in the array will still be discovered.</source>
          <target state="translated">으로 &lt;strong&gt;$의 activeExplorers의&lt;/strong&gt; 옵션을 사용하면 항목이 자동으로 검색되는 지정할 수 있습니다. 항목이 없으면 해당 항목에 대해 자동 검색이 발생하지 않지만 어레이의 다른 항목은 계속 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="025e3b42295a27da586d236a7bf1965bec894e0a" translate="yes" xml:space="preserve">
          <source>With the Timer, you can measure the time between two moments in the execution of your application. This makes it simple to measure the performance of different aspects of your application. All measurement is done using the &lt;code&gt;start()&lt;/code&gt; and &lt;code&gt;stop()&lt;/code&gt; methods.</source>
          <target state="translated">타이머를 사용하면 애플리케이션 실행에서 두 순간 사이의 시간을 측정 할 수 있습니다. 이를 통해 애플리케이션의 다양한 측면의 성능을 간단하게 측정 할 수 있습니다. 모든 측정은 &lt;code&gt;start()&lt;/code&gt; 및 &lt;code&gt;stop()&lt;/code&gt; 메서드를 사용하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="3ee1ec86e36a60ce3bd46f7f15e96ffb4a2cc4d7" translate="yes" xml:space="preserve">
          <source>With the above configuration, your webapp would be accessed with the URL &lt;code&gt;http://myproject.local&lt;/code&gt; in your browser.</source>
          <target state="translated">위의 구성을 사용하면 브라우저에서 URL &lt;code&gt;http://myproject.local&lt;/code&gt; 로 웹앱 에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="da7c28aa60c11cef0178c817fc453cab7e50ff5e" translate="yes" xml:space="preserve">
          <source>With the above example, when &lt;code&gt;MySalesConfig&lt;/code&gt; is instantiated, it will end up with the two properties declared, but the value of the &lt;code&gt;$target&lt;/code&gt; property will be over-ridden by treating &lt;code&gt;RegionalSalesModel&lt;/code&gt; as a &amp;ldquo;registrar&amp;rdquo;. The resulting configuration properties:</source>
          <target state="translated">위의 예에서 &lt;code&gt;MySalesConfig&lt;/code&gt; 가 인스턴스화되면 선언 된 두 속성으로 끝나지만 &lt;code&gt;$target&lt;/code&gt; 속성 의 값은 &lt;code&gt;RegionalSalesModel&lt;/code&gt; 을 &quot;등록자&quot;로 처리하여 재정의됩니다 . 결과 구성 속성 :</target>
        </trans-unit>
        <trans-unit id="667e0a1b73fc080c611a34adf01454e3eac0a767" translate="yes" xml:space="preserve">
          <source>With the alternative syntax you can instead do it this way:</source>
          <target state="translated">대체 구문을 사용하면 대신 다음과 같이 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fa7fd94a0d4362078f762ce78530a43a28c30e64" translate="yes" xml:space="preserve">
          <source>With the simplest usage, a single file might be submitted like:</source>
          <target state="translated">가장 간단한 사용법으로 다음과 같이 단일 파일을 제출할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="843f859ef694b3331a80cf686fa10246c63c2614" translate="yes" xml:space="preserve">
          <source>With this code you can perform two different queries. You can get all news records, or get a news item by its slug. You might have noticed that the &lt;code&gt;$slug&lt;/code&gt; variable wasn&amp;rsquo;t sanitized before running the query; &lt;a href=&quot;../database/query_builder&quot;&gt;Query Builder&lt;/a&gt; does this for you.</source>
          <target state="translated">이 코드를 사용하면 두 가지 다른 쿼리를 수행 할 수 있습니다. 모든 뉴스 레코드를 얻거나 슬러그로 뉴스 항목을 얻을 수 있습니다. 당신은 것을 눈치 챘을 수도 &lt;code&gt;$slug&lt;/code&gt; 변수가 쿼리를 실행하기 전에 소독되지 않은; &lt;a href=&quot;../database/query_builder&quot;&gt;Query Builder&lt;/a&gt; 가이를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="b4587375d4db2c11572def299392d16f9f4015ee" translate="yes" xml:space="preserve">
          <source>With this code, you can perform two different queries. You can get all news records, or get a news item by its slug. You might have noticed that the &lt;code&gt;$slug&lt;/code&gt; variable wasn&amp;rsquo;t sanitized before running the query; &lt;a href=&quot;../database/query_builder&quot;&gt;Query Builder&lt;/a&gt; does this for you.</source>
          <target state="translated">이 코드를 사용하여 두 가지 다른 쿼리를 수행 할 수 있습니다. 모든 뉴스 기록을 얻거나 슬러그로 뉴스 항목을 얻을 수 있습니다. 당신은 것을 눈치 챘을 수도 &lt;code&gt;$slug&lt;/code&gt; 변수가 쿼리를 실행하기 전에 소독되지 않은; &lt;a href=&quot;../database/query_builder&quot;&gt;쿼리 작성&lt;/a&gt; 기가이 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="9c1900fb61420695e93a6bdc5f96b1d94a474db5" translate="yes" xml:space="preserve">
          <source>Within the file itself, each method is a rule and must accept a string as the first parameter, and must return a boolean true or false value signifying true if it passed the test or false if it did not:</source>
          <target state="translated">파일 자체 내에서 각 메소드는 규칙이며 문자열을 첫 번째 매개 변수로 허용해야하며 테스트를 통과하면 true를, 그렇지 않으면 false를 나타내는 부울 true 또는 false 값을 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="7b5cd53e83b478311d6c21591074a414d2591c59" translate="yes" xml:space="preserve">
          <source>Within the file you will assign each line of text to an array called &lt;code&gt;$lang&lt;/code&gt; with this prototype:</source>
          <target state="translated">파일 내 에서이 프로토 타입 을 사용하여 각 텍스트 행을 &lt;code&gt;$lang&lt;/code&gt; 이라는 배열에 할당합니다 .</target>
        </trans-unit>
        <trans-unit id="81621e6db92197aea0aaeba97c71aea84cf2c820" translate="yes" xml:space="preserve">
          <source>Within the file, you would return an array, where each element in the array has a language key and can have string to return:</source>
          <target state="translated">파일 내에서 배열을 반환합니다. 여기서 배열의 각 요소에는 언어 키가 있고 반환 할 문자열이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="78fd32e4cc3a36e85d5b375c2b1cc7304c3295c0" translate="yes" xml:space="preserve">
          <source>Within the view, we then need to tell it where to display the resulting links:</source>
          <target state="translated">그런 다음 뷰 내에서 결과 링크를 표시 할 위치를 알려야합니다.</target>
        </trans-unit>
        <trans-unit id="841222dccf77d87d4de1e044bf1f54d02d210b10" translate="yes" xml:space="preserve">
          <source>Without a visual interface it is difficult to crop images, so this method is not very useful unless you intend to build such an interface. That&amp;rsquo;s exactly what we did using for the photo gallery module in ExpressionEngine, the CMS we develop. We added a JavaScript UI that lets the cropping area be selected.</source>
          <target state="translated">시각적 인터페이스가 없으면 이미지를 자르기가 어렵 기 때문에 이러한 인터페이스를 만들지 않으면이 방법이 유용하지 않습니다. 이것이 바로 우리가 개발 한 CMS 인 ExpressionEngine의 사진 갤러리 모듈에 사용한 것입니다. 자르기 영역을 선택할 수있는 JavaScript UI를 추가했습니다.</target>
        </trans-unit>
        <trans-unit id="cd5e01f94b6cdcfd886a10bc9cf1aa8513911237" translate="yes" xml:space="preserve">
          <source>Word wrapping</source>
          <target state="translated">단어 줄 바꿈</target>
        </trans-unit>
        <trans-unit id="596ed7e1d654490743defb78335042cfde58fccf" translate="yes" xml:space="preserve">
          <source>Word-limited string</source>
          <target state="translated">단어 제한 문자열</target>
        </trans-unit>
        <trans-unit id="678ac821aefb2c0f88e620b2f230a5bc7d0c2efa" translate="yes" xml:space="preserve">
          <source>Word-wrapped string</source>
          <target state="translated">줄 바꿈 문자열</target>
        </trans-unit>
        <trans-unit id="30e910e45d012e2391ca55fd07e3584d4e83e7d8" translate="yes" xml:space="preserve">
          <source>Working With Configuration Files</source>
          <target state="translated">구성 파일 작업</target>
        </trans-unit>
        <trans-unit id="e9c1e4c077dad16db721be4be60b27935e71b127" translate="yes" xml:space="preserve">
          <source>Working With Data</source>
          <target state="translated">데이터 작업</target>
        </trans-unit>
        <trans-unit id="d81c2e7161a5e0ad0ea7bca751936f40385ae719" translate="yes" xml:space="preserve">
          <source>Working With Databases</source>
          <target state="translated">데이터베이스 작업</target>
        </trans-unit>
        <trans-unit id="30515c9355a2dc8f2ef3cf35f42e4250eb5d9d57" translate="yes" xml:space="preserve">
          <source>Working With Entities</source>
          <target state="translated">엔티티 작업</target>
        </trans-unit>
        <trans-unit id="6614b0adb2d91d541f3f43cb086ad49eee41d1a9" translate="yes" xml:space="preserve">
          <source>Working With Errors</source>
          <target state="translated">오류 작업</target>
        </trans-unit>
        <trans-unit id="d533d77f646d312611510a23a2715b838b0f2b69" translate="yes" xml:space="preserve">
          <source>Working With Files</source>
          <target state="translated">파일 작업</target>
        </trans-unit>
        <trans-unit id="72863e9394585eced06b8f17ae2458d18f71ba91" translate="yes" xml:space="preserve">
          <source>Working With HTTP Requests</source>
          <target state="translated">HTTP 요청 작업</target>
        </trans-unit>
        <trans-unit id="9161beecc77173b15faf2c29ab1e6d4499c53c2b" translate="yes" xml:space="preserve">
          <source>Working With JSON</source>
          <target state="translated">JSON 작업</target>
        </trans-unit>
        <trans-unit id="0ed10846429a01eca4669960a80f8dc2b13a85c6" translate="yes" xml:space="preserve">
          <source>Working With Locales</source>
          <target state="translated">로케일 작업</target>
        </trans-unit>
        <trans-unit id="6fcd3957ec3ed6ec76a24cf31ff69bfacdcb1d6c" translate="yes" xml:space="preserve">
          <source>Working With Query Builder</source>
          <target state="translated">쿼리 작성기 작업</target>
        </trans-unit>
        <trans-unit id="2aefeab7530938c088b103f1e9e513a185148191" translate="yes" xml:space="preserve">
          <source>Working With XML</source>
          <target state="translated">XML 작업</target>
        </trans-unit>
        <trans-unit id="6cfbcd3dda5379a333fd104f3fbc7e79ff25731d" translate="yes" xml:space="preserve">
          <source>Working With the Entity Class</source>
          <target state="translated">엔터티 클래스 작업</target>
        </trans-unit>
        <trans-unit id="11a285d8c9d0cf844926e5dbb59974a95d1f9034" translate="yes" xml:space="preserve">
          <source>Working With the File</source>
          <target state="translated">파일 작업</target>
        </trans-unit>
        <trans-unit id="ecc620b22c4a178480cda6ece7a9e459024470db" translate="yes" xml:space="preserve">
          <source>Working with CURL requests is simply a matter of creating the Request and getting a &lt;a href=&quot;../outgoing/response&quot;&gt;Response object&lt;/a&gt; back. It is meant to handle the communications. After that you have complete control over how the information is handled.</source>
          <target state="translated">CURL 요청으로 작업하는 것은 단순히 요청을 만들고 &lt;a href=&quot;../outgoing/response&quot;&gt;응답 개체를&lt;/a&gt; 다시 가져 오는 문제입니다 . 통신을 처리하기위한 것입니다. 그런 다음 정보 처리 방법을 완전히 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed92f4e7fe654563a955266b50d8be026dfe8044" translate="yes" xml:space="preserve">
          <source>Working with Database prefixes manually</source>
          <target state="translated">데이터베이스 접두사 수동 작업</target>
        </trans-unit>
        <trans-unit id="83cf1b02634def5b23b868974db450a895a02f92" translate="yes" xml:space="preserve">
          <source>Working with Files</source>
          <target state="translated">파일 작업</target>
        </trans-unit>
        <trans-unit id="48a28a7b16753d4af37fa0e231a2fe03d2f252d9" translate="yes" xml:space="preserve">
          <source>Working with Individual Values</source>
          <target state="translated">개별 값 작업</target>
        </trans-unit>
        <trans-unit id="1ddd11b5746cec96f920b6ab646213395970cc9e" translate="yes" xml:space="preserve">
          <source>Working with Query Objects</source>
          <target state="translated">쿼리 개체 작업</target>
        </trans-unit>
        <trans-unit id="0494eb14139346fb9d19a8f6774826332a35fda7" translate="yes" xml:space="preserve">
          <source>Working with Requests and Responses</source>
          <target state="translated">요청 및 응답 작업</target>
        </trans-unit>
        <trans-unit id="6af979895adbfc8151e3cfe21710424eeb5a4144" translate="yes" xml:space="preserve">
          <source>Working with URIs</source>
          <target state="translated">URI 작업</target>
        </trans-unit>
        <trans-unit id="48f4d5dfa4868d6cf9c47ba73c27d3810b2cd73c" translate="yes" xml:space="preserve">
          <source>Working with Uploaded Files</source>
          <target state="translated">업로드 된 파일 작업</target>
        </trans-unit>
        <trans-unit id="acb386cde526b6206d2040c49757c6bc6055ce49" translate="yes" xml:space="preserve">
          <source>Working with Validation</source>
          <target state="translated">유효성 검사 작업</target>
        </trans-unit>
        <trans-unit id="86dcca79b28fe052e00566062731dc0477109dbb" translate="yes" xml:space="preserve">
          <source>Working with the Config Class</source>
          <target state="translated">구성 클래스 작업</target>
        </trans-unit>
        <trans-unit id="83a744d4a210bd58d1ab233066858180178ffbee" translate="yes" xml:space="preserve">
          <source>Working with the FTP Class</source>
          <target state="translated">FTP 클래스를 사용한 작업</target>
        </trans-unit>
        <trans-unit id="f9adfe8e57801c8af080c12104ee0fff8aa073ac" translate="yes" xml:space="preserve">
          <source>Working with the Library</source>
          <target state="translated">라이브러리 작업</target>
        </trans-unit>
        <trans-unit id="b36c7725640e5f082c038e8157aa9722168e9757" translate="yes" xml:space="preserve">
          <source>Working with the Response</source>
          <target state="translated">응답 작업</target>
        </trans-unit>
        <trans-unit id="db6973f3df3a344c69dc2af21c583af337380485" translate="yes" xml:space="preserve">
          <source>Works exactly the same as &lt;strong&gt;isBefore()&lt;/strong&gt; except checks if the time is after the time passed in:</source>
          <target state="translated">시간이 경과 한 이후인지 확인하는 것을 제외하고 &lt;strong&gt;isBefore ()&lt;/strong&gt; 와 정확히 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="c16b75e63b4f7759ab02f1afc032fb6841773026" translate="yes" xml:space="preserve">
          <source>Would create something like this:</source>
          <target state="translated">다음과 같이 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ed4584b100536c4074d2a93aecf5415f91c6d8c0" translate="yes" xml:space="preserve">
          <source>Wrapping long text lines to fit the window.</source>
          <target state="translated">창에 맞게 긴 텍스트 줄을 배치합니다.</target>
        </trans-unit>
        <trans-unit id="80c2d53cf18fa72934e4b110490c2e34a0fcd9f6" translate="yes" xml:space="preserve">
          <source>Wraps PHP &lt;strong&gt;number_format&lt;/strong&gt; function for use within the parser.</source>
          <target state="translated">파서 내에서 사용하기 위해 PHP &lt;strong&gt;number_format&lt;/strong&gt; 함수를 래핑 합니다.</target>
        </trans-unit>
        <trans-unit id="3ae6c3fabcac10e89fe20c76c8c28320c57746d1" translate="yes" xml:space="preserve">
          <source>Wraps PHP &lt;strong&gt;strip_tags&lt;/strong&gt;. Can accept a string of allowed tags.</source>
          <target state="translated">PHP &lt;strong&gt;strip_tags를&lt;/strong&gt; 래핑합니다 . 허용되는 태그 문자열을 허용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c87f7f74ade8216e3ba6633dcea17a4171b1f404" translate="yes" xml:space="preserve">
          <source>Wraps text at the specified &lt;em&gt;character&lt;/em&gt; count while maintaining complete words.</source>
          <target state="translated">완전한 단어를 유지하면서 지정된 &lt;em&gt;문자&lt;/em&gt; 수로 텍스트를 줄 바꿈합니다 .</target>
        </trans-unit>
        <trans-unit id="36e01c11f5a6cc82e3bfe9e08755916e65043dcf" translate="yes" xml:space="preserve">
          <source>Writes a &amp;ldquo;SELECT AVG(field)&amp;rdquo; portion for your query. As with selectMax(), You can optionally include a second parameter to rename the resulting field.</source>
          <target state="translated">쿼리에 대해 &quot;SELECT AVG (field)&quot;부분을 작성합니다. selectMax ()와 마찬가지로 선택적으로 두 번째 매개 변수를 포함하여 결과 필드의 이름을 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c0ee2e5f39d416cf69286bf3ec0c5aead64daa5c" translate="yes" xml:space="preserve">
          <source>Writes a &amp;ldquo;SELECT AVG(field)&amp;rdquo; portion for your query. As with select_max(), You can optionally include a second parameter to rename the resulting field.</source>
          <target state="translated">쿼리에 대한 &quot;SELECT AVG (field)&quot;부분을 씁니다. select_max ()와 마찬가지로 선택적으로 결과 필드의 이름을 바꾸는 두 번째 매개 변수를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee20d29ec4dcc3ccbc8dcac4e24220ea5e309515" translate="yes" xml:space="preserve">
          <source>Writes a &amp;ldquo;SELECT COUNT(field)&amp;rdquo; portion for your query. As with selectMax(), You can optionally include a second parameter to rename the resulting field.</source>
          <target state="translated">쿼리에 대해 &quot;SELECT COUNT (field)&quot;부분을 작성합니다. selectMax ()와 마찬가지로 선택적으로 두 번째 매개 변수를 포함하여 결과 필드의 이름을 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14eb002d172491bb3f804bdf31f0c5ffcd0c6420" translate="yes" xml:space="preserve">
          <source>Writes a &amp;ldquo;SELECT MIN(field)&amp;rdquo; portion for your query. As with selectMax(), You can optionally include a second parameter to rename the resulting field.</source>
          <target state="translated">쿼리에 대해&amp;ldquo;SELECT MIN (field)&amp;rdquo;부분을 작성합니다. selectMax ()와 마찬가지로 선택적으로 두 번째 매개 변수를 포함하여 결과 필드의 이름을 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d8fe3080cbddfc70d204c5e09d6d14f15824d16d" translate="yes" xml:space="preserve">
          <source>Writes a &amp;ldquo;SELECT MIN(field)&amp;rdquo; portion for your query. As with select_max(), You can optionally include a second parameter to rename the resulting field.</source>
          <target state="translated">쿼리에 대한 &quot;SELECT MIN (field)&quot;부분을 씁니다. select_max ()와 마찬가지로 선택적으로 결과 필드의 이름을 바꾸는 두 번째 매개 변수를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a818cce7877df86bcd6ce79f42164a62fcca09f" translate="yes" xml:space="preserve">
          <source>Writes a &amp;ldquo;SELECT SUM(field)&amp;rdquo; portion for your query. As with selectMax(), You can optionally include a second parameter to rename the resulting field.</source>
          <target state="translated">쿼리에 대해 &quot;SELECT SUM (field)&quot;부분을 작성합니다. selectMax ()와 마찬가지로 선택적으로 두 번째 매개 변수를 포함하여 결과 필드의 이름을 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2923e9e65fce0571afdf090ca2762e3ba1d44f29" translate="yes" xml:space="preserve">
          <source>Writes a &amp;ldquo;SELECT SUM(field)&amp;rdquo; portion for your query. As with select_max(), You can optionally include a second parameter to rename the resulting field.</source>
          <target state="translated">쿼리에 대한 &quot;SELECT SUM (field)&quot;부분을 씁니다. select_max ()와 마찬가지로 선택적으로 결과 필드의 이름을 바꾸는 두 번째 매개 변수를 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="67ade1a72d3d17d0f3cb8f14a503c2ef6bcf5c68" translate="yes" xml:space="preserve">
          <source>Writes a &lt;code&gt;SELECT MAX(field)&lt;/code&gt; portion for your query. You can optionally include a second parameter to rename the resulting field.</source>
          <target state="translated">쿼리에 대한 &lt;code&gt;SELECT MAX(field)&lt;/code&gt; 부분을 씁니다 . 선택적으로 두 번째 매개 변수를 포함하여 결과 필드의 이름을 바꿀 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cad211f56956142a5d766e0e803dcd634a55a6ef" translate="yes" xml:space="preserve">
          <source>Writes data to the file specified in the path. If the file does not exist then the function will create it.</source>
          <target state="translated">경로에 지정된 파일에 데이터를 씁니다. 파일이 존재하지 않으면 함수가 파일을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="006adf33b49e82c003c89d76bc63440e98cdf315" translate="yes" xml:space="preserve">
          <source>Writes the Zip-encoded file to a directory on your server. Submit a valid server path ending in the file name. Make sure the directory is writable (755 is usually OK). Example:</source>
          <target state="translated">Zip으로 인코딩 된 파일을 서버의 디렉토리에 씁니다. 파일 이름으로 끝나는 유효한 서버 경로를 제출하십시오. 디렉토리가 쓰기 가능한지 확인하십시오 (일반적으로 755는 정상 임). 예:</target>
        </trans-unit>
        <trans-unit id="0caef8474fc76e7a61aa03093eec5dcf142a2dce" translate="yes" xml:space="preserve">
          <source>Writing CodeIgniter Documentation</source>
          <target state="translated">CodeIgniter 문서 작성</target>
        </trans-unit>
        <trans-unit id="613458d93793dd88844a1d1c9c5c13360e6c90ca" translate="yes" xml:space="preserve">
          <source>Writing multi-colored text the terminal</source>
          <target state="translated">터미널에 다색 텍스트 쓰기</target>
        </trans-unit>
        <trans-unit id="c032adc1ff629c9b66f22749ad667e6beadf144b" translate="yes" xml:space="preserve">
          <source>X</source>
          <target state="translated">X</target>
        </trans-unit>
        <trans-unit id="47e491945cdea2bea531e981eb5ec7d2db35423f" translate="yes" xml:space="preserve">
          <source>X - Image Rotation</source>
          <target state="translated">X-이미지 회전</target>
        </trans-unit>
        <trans-unit id="e52fc4f86a5c0add8ff97f5b705fb94972f63b77" translate="yes" xml:space="preserve">
          <source>XHTML 1.0 Frameset</source>
          <target state="translated">XHTML 1.0 프레임 세트</target>
        </trans-unit>
        <trans-unit id="b01425e5f9319514d337f3d865afaabab7c357fd" translate="yes" xml:space="preserve">
          <source>XHTML 1.0 Strict</source>
          <target state="translated">XHTML 1.0 엄격한</target>
        </trans-unit>
        <trans-unit id="bf19195a1f391c057de833f7d9ff8facbdd4b827" translate="yes" xml:space="preserve">
          <source>XHTML 1.0 Transitional</source>
          <target state="translated">XHTML 1.0 과도기</target>
        </trans-unit>
        <trans-unit id="fde3e74e5ca9a39d0634e83ec34394d9d6034656" translate="yes" xml:space="preserve">
          <source>XHTML 1.1</source>
          <target state="translated">XHTML 1.1</target>
        </trans-unit>
        <trans-unit id="b95ed98c2a33d6ee727d556f7663811b3328f3a1" translate="yes" xml:space="preserve">
          <source>XHTML Basic 1.1</source>
          <target state="translated">XHTML 기본 1.1</target>
        </trans-unit>
        <trans-unit id="3051bae516377206196eb0a65d57444245e81b2c" translate="yes" xml:space="preserve">
          <source>XHTML+MathML+SVG (SVG host)</source>
          <target state="translated">XHTML + MathML + SVG (SVG 호스트)</target>
        </trans-unit>
        <trans-unit id="ef81a51701266a18ef3caee6bc518c099956cd87" translate="yes" xml:space="preserve">
          <source>XHTML+MathML+SVG (XHTML host)</source>
          <target state="translated">XHTML + MathML + SVG (XHTML 호스트)</target>
        </trans-unit>
        <trans-unit id="c3232ab4b1631bbd843ca957b5f6a81cd7e76793" translate="yes" xml:space="preserve">
          <source>XHTML+RDFa 1.0</source>
          <target state="translated">XHTML + RDFa 1.0</target>
        </trans-unit>
        <trans-unit id="e6b7b5a81626cd77023655356b2b4524043bf125" translate="yes" xml:space="preserve">
          <source>XHTML+RDFa 1.1</source>
          <target state="translated">XHTML + RDFa 1.1</target>
        </trans-unit>
        <trans-unit id="c0aa9ef764d832b80428d756a731a94251b0e3a1" translate="yes" xml:space="preserve">
          <source>XML</source>
          <target state="translated">XML</target>
        </trans-unit>
        <trans-unit id="bec76809a41ebb4be90ef3792428b1c15807949a" translate="yes" xml:space="preserve">
          <source>XML Helper</source>
          <target state="translated">XML 도우미</target>
        </trans-unit>
        <trans-unit id="cb0b3b73302f3816a1acc985cd45baa414295238" translate="yes" xml:space="preserve">
          <source>XML-RPC Library</source>
          <target state="translated">XML-RPC 라이브러리</target>
        </trans-unit>
        <trans-unit id="03a7022400ba8fcdfd00c803beafc7d4e5e4267b" translate="yes" xml:space="preserve">
          <source>XML-RPC and XML-RPC Server</source>
          <target state="translated">XML-RPC 및 XML-RPC 서버</target>
        </trans-unit>
        <trans-unit id="088cf642fcb407deae4ab644df62070f55310ef4" translate="yes" xml:space="preserve">
          <source>XML-RPC and XML-RPC Server Classes</source>
          <target state="translated">XML-RPC 및 XML-RPC 서버 클래스</target>
        </trans-unit>
        <trans-unit id="6eaaf02e06d9a305ce474ed49c7d9ecc17a181fe" translate="yes" xml:space="preserve">
          <source>XML-converted string</source>
          <target state="translated">XML 변환 문자열</target>
        </trans-unit>
        <trans-unit id="abd07042ca453457fbb7b6876a6ee3c84eda1b0c" translate="yes" xml:space="preserve">
          <source>XMLFormatter #1471</source>
          <target state="translated">XMLFormatter # 1471</target>
        </trans-unit>
        <trans-unit id="549866e2cc6693b36c48b97bdbe57ae52dee94b5" translate="yes" xml:space="preserve">
          <source>XMLFormatter #1918</source>
          <target state="translated">XMLFormatter # 1918</target>
        </trans-unit>
        <trans-unit id="0f336b90680264742a15d8c516faa3cc83bbf3e3" translate="yes" xml:space="preserve">
          <source>XMLHelperTest #1641</source>
          <target state="translated">XMLHelperTest # 1641</target>
        </trans-unit>
        <trans-unit id="f854bb2bd9afb8a2ec5cf7066c886188084c5603" translate="yes" xml:space="preserve">
          <source>XML_RPC_Response</source>
          <target state="translated">XML_RPC_Response</target>
        </trans-unit>
        <trans-unit id="dfbdba28b27e50530483066c5870bb595bd6828f" translate="yes" xml:space="preserve">
          <source>XML_RPC_Response instance</source>
          <target state="translated">XML_RPC_Response 인스턴스</target>
        </trans-unit>
        <trans-unit id="43f072be34df4db7b726add9d76af0eaf25e7535" translate="yes" xml:space="preserve">
          <source>XSS Filtering</source>
          <target state="translated">XSS 필터링</target>
        </trans-unit>
        <trans-unit id="e4fac68c0ff3e9d4ccb3dee2ba8f1ede238d1bb4" translate="yes" xml:space="preserve">
          <source>XSS filtering should &lt;em&gt;only be performed on output&lt;/em&gt;. Filtering input data may modify the data in undesirable ways, including stripping special characters from passwords, which reduces security instead of improving it.</source>
          <target state="translated">XSS 필터링은 &lt;em&gt;출력에서만 수행&lt;/em&gt; 해야 &lt;em&gt;합니다&lt;/em&gt; . 입력 데이터를 필터링하면 암호에서 특수 문자를 제거하는 등 바람직하지 않은 방식으로 데이터를 수정하여 보안을 향상시키는 대신 보안을 줄일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="321724f8447308507a1b4f1f690141c3a2b17d8e" translate="yes" xml:space="preserve">
          <source>XSS-clean data</source>
          <target state="translated">XSS 클린 데이터</target>
        </trans-unit>
        <trans-unit id="146d6e5fa98d722f6762e69f0f10aff98eb89ff6" translate="yes" xml:space="preserve">
          <source>XSS-clean string</source>
          <target state="translated">XSS- 깨끗한 문자열</target>
        </trans-unit>
        <trans-unit id="727b5c4d153a9a8ecaa760f77c7a56ee2a2a3d06" translate="yes" xml:space="preserve">
          <source>XTEA</source>
          <target state="translated">XTEA</target>
        </trans-unit>
        <trans-unit id="9cdabc5afb3d99662cb5367827aa09d123cef398" translate="yes" xml:space="preserve">
          <source>XTS</source>
          <target state="translated">XTS</target>
        </trans-unit>
        <trans-unit id="f95b1709e697dce74108470a7a64a1e66e793abb" translate="yes" xml:space="preserve">
          <source>Y-m-d-His_</source>
          <target state="translated">Y-m-d-His_</target>
        </trans-unit>
        <trans-unit id="5397e0583f14f6c88de06b1ef28f460a1fb5b0ae" translate="yes" xml:space="preserve">
          <source>Yes</source>
          <target state="translated">Yes</target>
        </trans-unit>
        <trans-unit id="818eeff7f9406386f07486a6cc9a468309730d93" translate="yes" xml:space="preserve">
          <source>Yes, the template engine example is a bit cleaner, but it comes at the price of performance, as the pseudo-code must be converted back into PHP to run. Since one of our goals is &lt;em&gt;maximum performance&lt;/em&gt;, we opted to not require the use of a template engine.</source>
          <target state="translated">예, 템플릿 엔진 예제는 약간 깔끔하지만 의사 코드를 다시 PHP로 변환하여 실행해야하기 때문에 성능이 떨어집니다. 우리의 목표 중 하나는 &lt;em&gt;최대 성능&lt;/em&gt; 이므로&lt;em&gt;&lt;/em&gt; 이므로 템플릿 엔진을 사용하지 않아도됩니다.</target>
        </trans-unit>
        <trans-unit id="ae2e62ee865c3fa82c55b8238bf59594f62ee728" translate="yes" xml:space="preserve">
          <source>Yes, unless &lt;em&gt;hmac&lt;/em&gt; is FALSE</source>
          <target state="translated">예, &lt;em&gt;hmac&lt;/em&gt; 이 FALSE가 아닌 한</target>
        </trans-unit>
        <trans-unit id="bc51a75009efdc6fd2ee35f0e29fb6928ec8cf5d" translate="yes" xml:space="preserve">
          <source>You add new placeholders with the &lt;code&gt;addPlaceholder&lt;/code&gt; method. The first parameter is the string to be used as the placeholder. The second parameter is the Regular Expression pattern it should be replaced with. This must be called before you add the route:</source>
          <target state="translated">&lt;code&gt;addPlaceholder&lt;/code&gt; 메서드를 사용하여 새 자리 표시자를 추가 합니다. 첫 번째 매개 변수는 자리 표시 자로 사용할 문자열입니다. 두 번째 매개 변수는 대체해야하는 정규식 패턴입니다. 경로를 추가하기 전에 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="0f6bfe34e10ea0280fa2160bdcc15a22d9fa20d6" translate="yes" xml:space="preserve">
          <source>You are NOT required to submit a complete template. If you only need to change parts of the layout you can simply submit those elements. In this example, only the table opening tag is being changed:</source>
          <target state="translated">완전한 템플릿을 제출할 필요는 없습니다. 레이아웃의 일부만 변경해야하는 경우 해당 요소를 제출하면됩니다. 이 예에서는 테이블 열기 태그 만 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="134c7816936f2161b3bd6a7d667f450e954d65d5" translate="yes" xml:space="preserve">
          <source>You are encouraged to always have a default route as otherwise a 404 page will appear by default.</source>
          <target state="translated">404 페이지가 기본적으로 표시되므로 항상 기본 경로를 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="464eb0963cabba94995496e761805fd4b32f873e" translate="yes" xml:space="preserve">
          <source>You are encouraged to use this function any time you need to generate a local URL so that your pages become more portable in the event your URL changes.</source>
          <target state="translated">URL이 변경 될 때 페이지의 이식성이 향상되도록 로컬 URL을 생성해야 할 때마다이 기능을 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="fa0d6ac3a73b6134c779a577164f38a7324c502c" translate="yes" xml:space="preserve">
          <source>You are not interested in large-scale monolithic libraries like PEAR.</source>
          <target state="translated">PEAR와 같은 대규모 모 놀리 식 라이브러리에는 관심이 없습니다.</target>
        </trans-unit>
        <trans-unit id="e34e837dda039f3949e0222b7b464261367b751e" translate="yes" xml:space="preserve">
          <source>You are responsible for merge conflicts when updating</source>
          <target state="translated">업데이트 할 때 병합 충돌에 대한 책임이 있습니다.</target>
        </trans-unit>
        <trans-unit id="389f216df0dab7b932f12902182f2a170f2c497d" translate="yes" xml:space="preserve">
          <source>You can NOT use a connection with the &lt;em&gt;cacheOn&lt;/em&gt; setting enabled.</source>
          <target state="translated">&lt;em&gt;cacheOn&lt;/em&gt; 설정이 활성화 된 상태 에서는 연결을 사용할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="24a36947419130fa8de273da1cb02180e3599824" translate="yes" xml:space="preserve">
          <source>You can NOT use a connection with the &lt;em&gt;cache_on&lt;/em&gt; setting enabled.</source>
          <target state="translated">&lt;em&gt;cache_on&lt;/em&gt; 과의 연결을 사용할 수 없습니다&lt;em&gt;&lt;/em&gt; 설정이 활성화 .</target>
        </trans-unit>
        <trans-unit id="bdd82d539617cbe66368066d296cbc46e0c92371" translate="yes" xml:space="preserve">
          <source>You can NOT use a directory as a part of this setting!</source>
          <target state="translated">이 설정의 일부로 디렉토리를 사용할 수 없습니다!</target>
        </trans-unit>
        <trans-unit id="3597a5619ce3c30d8926f3b86211920a93bcb57e" translate="yes" xml:space="preserve">
          <source>You can NOT use a persistent connection.</source>
          <target state="translated">영구 연결을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="347cf514e48fa2052897aeae752cc7a7acac4f4d" translate="yes" xml:space="preserve">
          <source>You can access configuration files for your classes in several different ways.</source>
          <target state="translated">여러 가지 방법으로 클래스의 구성 파일에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1bfef55f2972db115f351a04c54dc16af22a789d" translate="yes" xml:space="preserve">
          <source>You can access models within your classes by creating a new instance or using the &lt;code&gt;model()&lt;/code&gt; helper function.</source>
          <target state="translated">새 인스턴스를 만들거나 &lt;code&gt;model()&lt;/code&gt; 도우미 함수를 사용하여 클래스 내의 모델에 액세스 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e1d997de617f5cd51cc6999e2f79821fe3e38e68" translate="yes" xml:space="preserve">
          <source>You can access the Request object that was generated with this method:</source>
          <target state="translated">이 메소드로 생성 된 Request 객체에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="daa4f74bd7e834ff8d98d5d6e9fe0352adf35a09" translate="yes" xml:space="preserve">
          <source>You can access the body of the response that would have been sent to the client with the &lt;strong&gt;getBody()&lt;/strong&gt; method. This could be generated HTML, or a JSON response, etc.:</source>
          <target state="translated">&lt;strong&gt;getBody ()&lt;/strong&gt; 메서드 를 사용하여 클라이언트에 전송되었을 응답 본문에 액세스 할 수 있습니다 . 생성 된 HTML 또는 JSON 응답 등이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2552906669c5a20888b2aa02cf6f348ebaa3ecf" translate="yes" xml:space="preserve">
          <source>You can add as many parameters as you want, and with each iteration of your loop the next item will be returned.</source>
          <target state="translated">원하는만큼 매개 변수를 추가 할 수 있으며 루프를 반복 할 때마다 다음 항목이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="1edc2aad570cd18f5ac269c837f5090fba1189f1" translate="yes" xml:space="preserve">
          <source>You can add it as either a simple string with the fully qualified class name, or using the &lt;code&gt;::class&lt;/code&gt; suffix as shown above. The primary benefit here is that it provides some extra navigation capabilities in more advanced IDEs.</source>
          <target state="translated">정규화 된 클래스 이름이있는 간단한 문자열로 추가하거나 위에 표시된대로 &lt;code&gt;::class&lt;/code&gt; 접미사를 사용하여 추가 할 수 있습니다 . 여기서 주요 이점은 고급 IDE에서 몇 가지 추가 탐색 기능을 제공한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="8356ecb50eba9c9c944e9897954465abdd82ce4c" translate="yes" xml:space="preserve">
          <source>You can add your own config items to this file, or if you prefer to keep your configuration items separate (assuming you even need config items), simply create your own file and save it in config folder.</source>
          <target state="translated">이 파일에 고유 한 구성 항목을 추가하거나 구성 항목을 별도로 유지하려는 경우 (구성 항목이 필요하다고 가정 할 경우) 자체 파일을 작성하여 구성 폴더에 저장하면됩니다.</target>
        </trans-unit>
        <trans-unit id="00e56ba818a89b2afa738c56f63d246b98a15f52" translate="yes" xml:space="preserve">
          <source>You can adjust the error threshold to see more or fewer messages.</source>
          <target state="translated">오류 임계 값을 조정하여 더 많거나 적은 메시지를 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5866fcfe1ce65c03a99e5c30801a97ef9b924493" translate="yes" xml:space="preserve">
          <source>You can also access the model&amp;rsquo;s database connection seamlessly:</source>
          <target state="translated">모델의 데이터베이스 연결에 원활하게 액세스 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="636c24de53c1e047776851e62de2610e9caf28d6" translate="yes" xml:space="preserve">
          <source>You can also add a second String parameter, which is the name of a class to instantiate the row with:</source>
          <target state="translated">다음을 사용하여 행을 인스턴스화하는 클래스 이름 인 두 번째 문자열 매개 변수를 추가 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb3defa5201ed351b4d52e33449534f604bb7310" translate="yes" xml:space="preserve">
          <source>You can also add {locale} like the following:</source>
          <target state="translated">다음과 같이 {locale}을 추가 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="469142b645f6c35315b4f2f85b1b3031a9ad1c99" translate="yes" xml:space="preserve">
          <source>You can also change the formatters after a fabricator is initialized by using the &lt;code&gt;setFormatters()&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;setFormatters()&lt;/code&gt; 메서드를 사용하여 제작자가 초기화 된 후 포맷터를 변경할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3d9c29ade36e890471ace90c69b1d333a7276030" translate="yes" xml:space="preserve">
          <source>You can also check if the request was made through and HTTPS connection with the &lt;code&gt;isSecure()&lt;/code&gt; method:</source>
          <target state="translated">&lt;code&gt;isSecure()&lt;/code&gt; 메서드를 사용하여 HTTPS 연결을 통해 요청되었는지 확인할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="45993d43d4746fde47962f48b5c5b786d7824acc" translate="yes" xml:space="preserve">
          <source>You can also get a lot of them back by supplying a count:</source>
          <target state="translated">카운트를 제공하여 많은 항목을 다시 가져올 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f207bf7b6f4984135f82029d7054e057dc0b502" translate="yes" xml:space="preserve">
          <source>You can also load multiple language files at the same time by passing an array of language files as first parameter.</source>
          <target state="translated">언어 파일 배열을 첫 번째 매개 변수로 전달하여 여러 언어 파일을 동시에로드 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a5ed7dcea01f941e8264db66c073a734add96c83" translate="yes" xml:space="preserve">
          <source>You can also mix and match wildcards with regular expressions.</source>
          <target state="translated">와일드 카드를 정규식과 혼합하여 일치시킬 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="d95c3816b0a3a7d3e7d94a90bfbf05965366b468" translate="yes" xml:space="preserve">
          <source>You can also pass a string to &lt;code&gt;getResult()&lt;/code&gt; which represents a class to instantiate for each result object</source>
          <target state="translated">각 결과 객체에 대해 인스턴스화 할 클래스를 나타내는 &lt;code&gt;getResult()&lt;/code&gt; 문자열을 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="04e5c8b8dff969af69ddc264432dd1db6ac19ccb" translate="yes" xml:space="preserve">
          <source>You can also pass a string to &lt;code&gt;result()&lt;/code&gt; which represents a class to instantiate for each result object (note: this class must be loaded)</source>
          <target state="translated">&lt;code&gt;result()&lt;/code&gt; 문자열을 전달할 수도 있습니다.각 결과 객체에 대해 인스턴스화 할 클래스를 나타내는 (참고 :이 클래스는로드되어야합니다)</target>
        </trans-unit>
        <trans-unit id="2e09b408f7253400e10a69fadf63c616a3769595" translate="yes" xml:space="preserve">
          <source>You can also pass an array of multiple values as well:</source>
          <target state="translated">여러 값의 배열을 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e57ca5d5bf2cde73fc8fd6554429bb7e27d2763f" translate="yes" xml:space="preserve">
          <source>You can also pass an array of rules to &lt;code&gt;set_rules()&lt;/code&gt;, instead of a string. Example:</source>
          <target state="translated">문자열 대신 규칙 배열을 &lt;code&gt;set_rules()&lt;/code&gt; 전달할 수도 있습니다 . 예:</target>
        </trans-unit>
        <trans-unit id="b33ca673ee8a5c59829ff526cf7c546337b7e8c7" translate="yes" xml:space="preserve">
          <source>You can also pass an array to &lt;code&gt;setFlashdata()&lt;/code&gt;, in the same manner as &lt;code&gt;set()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set()&lt;/code&gt; 과 같은 방식으로 &lt;code&gt;setFlashdata()&lt;/code&gt; 배열을 전달할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fe9a6ee77f99d9ead92d9fd6a01218b92c2829a8" translate="yes" xml:space="preserve">
          <source>You can also pass an array to &lt;code&gt;setTempdata()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;setTempdata()&lt;/code&gt; 배열을 전달할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="330d6e5adf2ea86941c8dd496b38f4a3cd7ec262" translate="yes" xml:space="preserve">
          <source>You can also pass an array to &lt;code&gt;set_flashdata()&lt;/code&gt;, in the same manner as &lt;code&gt;set_userdata()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;set_userdata()&lt;/code&gt; 와 같은 방식으로 배열을 &lt;code&gt;set_flashdata()&lt;/code&gt; 전달할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f80a8c0299df51a6c813df739143b0b3089af08b" translate="yes" xml:space="preserve">
          <source>You can also pass an array to &lt;code&gt;set_tempdata()&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;set_tempdata()&lt;/code&gt; 배열을 전달할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7ca2b2e6c6c3fc7eeb4e97f36018745e25e82724" translate="yes" xml:space="preserve">
          <source>You can also pass an associative array to the value field:</source>
          <target state="translated">값 배열에 연관 배열을 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdd36cd88137b748e6e78846578966094435c2d8" translate="yes" xml:space="preserve">
          <source>You can also pass an associative array to this function:</source>
          <target state="translated">이 함수에 연관 배열을 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="51eb5795c445a8e5453c754cd852447d1aac8002" translate="yes" xml:space="preserve">
          <source>You can also pass another database group name to the DB Forge loader, in case the database you want to manage isn&amp;rsquo;t the default one:</source>
          <target state="translated">관리하려는 데이터베이스가 기본 데이터베이스가 아닌 경우 다른 데이터베이스 그룹 이름을 DB Forge 로더에 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="c52464c822db338118ffe586db28b0cfaefb3044" translate="yes" xml:space="preserve">
          <source>You can also pass another database object to the DB Forge loader, in case the database you want to manage isn&amp;rsquo;t the default one:</source>
          <target state="translated">관리하려는 데이터베이스가 기본 데이터베이스가 아닌 경우 다른 데이터베이스 개체를 DB Forge 로더에 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e56432422b8e5e8af9686690fe3b98d316f76e10" translate="yes" xml:space="preserve">
          <source>You can also pass another database object to the DB Utility loader, in case the database you want to manage isn&amp;rsquo;t the default one:</source>
          <target state="translated">관리하려는 데이터베이스가 기본 데이터베이스가 아닌 경우 다른 데이터베이스 개체를 DB 유틸리티 로더에 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb94eed27705b832635e3d13aca812cddd04ed00" translate="yes" xml:space="preserve">
          <source>You can also pass parameters stored in a config file. Simply create a config file named identically to the class file name and store it in your &lt;em&gt;application/config/&lt;/em&gt; directory. Note that if you dynamically pass parameters as described above, the config file option will not be available.</source>
          <target state="translated">구성 파일에 저장된 매개 변수를 전달할 수도 있습니다. 클래스 파일 이름과 동일한 이름의 구성 파일을 작성하여 &lt;em&gt;application / config /&lt;/em&gt; 디렉토리 에 저장하십시오 . 위에서 설명한대로 매개 변수를 동적으로 전달하면 구성 파일 옵션을 사용할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c37d68ebac41d24f98665c35338fd4c2f3066b1b" translate="yes" xml:space="preserve">
          <source>You can also pass the data in the constructor and the data will be passed through the &lt;code&gt;fill()&lt;/code&gt; method during instantiation.</source>
          <target state="translated">생성자에서 데이터를 전달할 수도 있으며 인스턴스화 중에 데이터가 &lt;code&gt;fill()&lt;/code&gt; 메서드를 통해 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="2f190905a4c01fbde22f3643134a514baef72dde" translate="yes" xml:space="preserve">
          <source>You can also pass your own string in the first parameter:</source>
          <target state="translated">첫 번째 매개 변수에서 자신의 문자열을 전달할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a54a269e4d923411c024d097df25e8f445ae37d" translate="yes" xml:space="preserve">
          <source>You can also prefix cache item names via the &lt;strong&gt;key_prefix&lt;/strong&gt; setting, which is useful to avoid collisions when you&amp;rsquo;re running multiple applications on the same environment.</source>
          <target state="translated">&lt;strong&gt;key_prefix&lt;/strong&gt; 를 통해 캐시 항목 이름을 접두어로 붙일 수도 있습니다.&lt;strong&gt;&lt;/strong&gt; 설정을 있습니다. 이는 동일한 환경에서 여러 응용 프로그램을 실행할 때 충돌을 피하는 데 유용합니다.</target>
        </trans-unit>
        <trans-unit id="e348fae843baa12905b045c001472b900652d9b5" translate="yes" xml:space="preserve">
          <source>You can also process the form data that is passed to your callback and return it. If your callback returns anything other than a boolean TRUE/FALSE it is assumed that the data is your newly processed form data.</source>
          <target state="translated">콜백에 전달 된 양식 데이터를 처리하여 반환 할 수도 있습니다. 콜백이 부울 TRUE / FALSE 이외의 값을 반환하면 데이터가 새로 처리 된 양식 데이터 인 것으로 가정합니다.</target>
        </trans-unit>
        <trans-unit id="d545c6bc07569d319486ba84fa3e88d9c662b823" translate="yes" xml:space="preserve">
          <source>You can also retrieve just a subset of those rules by calling the accessor method directly, with options:</source>
          <target state="translated">옵션을 사용하여 접근 자 메서드를 직접 호출하여 해당 규칙의 하위 집합 만 검색 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cb29c1b1e39271cb946996320f63c8f102543e1" translate="yes" xml:space="preserve">
          <source>You can also save your configuration values within a &lt;code&gt;.env&lt;/code&gt; file with the current server&amp;rsquo;s database settings. You only need to enter the values that change from what is in the default group&amp;rsquo;s configuration settings. The values should be name following this format, where &lt;code&gt;default&lt;/code&gt; is the group name:</source>
          <target state="translated">현재 서버의 데이터베이스 설정을 사용하여 &lt;code&gt;.env&lt;/code&gt; 파일에 구성 값을 저장할 수도 있습니다 . 기본 그룹의 구성 설정에서 변경되는 값만 입력하면됩니다. 값은 다음 형식을 따르는 이름이어야합니다. 여기서 &lt;code&gt;default&lt;/code&gt; 은 그룹 이름입니다.</target>
        </trans-unit>
        <trans-unit id="9eda58720fa4812f631cdf6dd5387deabfd7916d" translate="yes" xml:space="preserve">
          <source>You can also seed data from the command line, as part of the Migrations CLI tools, if you don&amp;rsquo;t want to create a dedicated controller:</source>
          <target state="translated">전용 컨트롤러를 생성하지 않으려면 Migrations CLI 도구의 일부로 명령 줄에서 데이터를 시드 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ace0b301533cb6dab9de1252695fc2bed77b0f4" translate="yes" xml:space="preserve">
          <source>You can also set a Return-Path, to help redirect undelivered mail:</source>
          <target state="translated">배달되지 않은 메일을 리디렉션하는 데 도움이되도록 Return-Path를 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="af2d8cd783375441f030cffa1473ea4657b90629" translate="yes" xml:space="preserve">
          <source>You can also set a different default value for a particular segment by using the second parameter of the &lt;code&gt;getSegment()&lt;/code&gt; method. The default is empty string.</source>
          <target state="translated">&lt;code&gt;getSegment()&lt;/code&gt; 메서드 의 두 번째 매개 변수를 사용하여 특정 세그먼트에 대해 다른 기본값을 설정할 수도 있습니다 . 기본값은 빈 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="936966188882844437af77c3c5f1189c16c44a81" translate="yes" xml:space="preserve">
          <source>You can also set defaults for these by passing an array of template settings to the Table constructor.:</source>
          <target state="translated">템플릿 설정 배열을 Table 생성자에 전달하여 이들에 대한 기본값을 설정할 수도 있습니다. :</target>
        </trans-unit>
        <trans-unit id="9cffeffb394357bdc256987a82f844a4dc87a3ab" translate="yes" xml:space="preserve">
          <source>You can also set defaults for these in a config file.</source>
          <target state="translated">구성 파일에서 기본값을 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="02b89797d3c797d37653338063de4190fcfd6b7f" translate="yes" xml:space="preserve">
          <source>You can also set the character set of the document, by passing a second argument:</source>
          <target state="translated">두 번째 인수를 전달하여 문서의 문자 세트를 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="fd53e6531e68c8ed46fc2302d6cf2db1391c26ae" translate="yes" xml:space="preserve">
          <source>You can also specify a new name (path included) for the added file on the fly:</source>
          <target state="translated">추가 된 파일의 새 이름 (경로 포함)을 즉시 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="60c47a73385cfe84e3c3bbba4666c3658ab7b49f" translate="yes" xml:space="preserve">
          <source>You can also specify a specific version of PHP to use, with the &lt;code&gt;--php&lt;/code&gt; CLI option, with its value set to the path of the PHP executable you want to use:</source>
          <target state="translated">&lt;code&gt;--php&lt;/code&gt; CLI 옵션을 사용하여 사용할 PHP 실행 파일의 경로로 값을 설정하여 사용할 특정 버전의 PHP를 지정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="471149bb81909be79b0ede0cbcd76e336b87cb50" translate="yes" xml:space="preserve">
          <source>You can also specify failovers for the situation when the main connection cannot connect for some reason. These failovers can be specified by setting the failover for a connection like this:</source>
          <target state="translated">주 연결이 어떤 이유로 연결될 수없는 상황에 대해 장애 조치를 지정할 수도 있습니다. 이러한 장애 조치는 다음과 같은 연결에 대한 장애 조치를 설정하여 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="27833fe825783aa23cea9acf19196b5337bc719d" translate="yes" xml:space="preserve">
          <source>You can also store custom error messages in this configuration file by naming the property the same as the group, and appended with &lt;code&gt;_errors&lt;/code&gt;. These will automatically be used for any errors when this group is used:</source>
          <target state="translated">속성 이름을 그룹과 동일하게 지정하고 &lt;code&gt;_errors&lt;/code&gt; 를 추가하여이 구성 파일에 사용자 지정 오류 메시지를 저장할 수도 있습니다 . 이 그룹이 사용될 때 모든 오류에 자동으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2302e17ac8a00d7fff01bdabcff5a44d2629fa31" translate="yes" xml:space="preserve">
          <source>You can also use Query Builder methods and the Model&amp;rsquo;s CRUD methods in the same chained call, allowing for very elegant use:</source>
          <target state="translated">또한 동일한 연결 호출에서 쿼리 작성기 메서드와 모델의 CRUD 메서드를 사용하여 매우 우아하게 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a66eece40e68b8590f8fc59a88c3ef123df90f7" translate="yes" xml:space="preserve">
          <source>You can also use a URL:</source>
          <target state="translated">URL을 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="b142220608ca37904dd0f4468ec39dc18a296869" translate="yes" xml:space="preserve">
          <source>You can also use a fully-qualified class name in the &lt;strong&gt;call()&lt;/strong&gt; method, allowing you to keep your seeders anywhere the autoloader can find them. This is great for more modular code bases:</source>
          <target state="translated">&lt;strong&gt;call ()&lt;/strong&gt; 메서드 에서 정규화 된 클래스 이름을 사용 하여 오토로더가 찾을 수있는 모든 위치에 시더를 유지할 수 있습니다. 이는 더 많은 모듈 식 코드베이스에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="2834f306fb27850dc8c194a561bf792a7c9457dd" translate="yes" xml:space="preserve">
          <source>You can also use a specific &lt;a href=&quot;filters&quot;&gt;filter&lt;/a&gt; for a group of routes. This will always run the filter before or after the controller. This is especially handy during authentication or api logging:</source>
          <target state="translated">경로 그룹에 특정 &lt;a href=&quot;filters&quot;&gt;필터&lt;/a&gt; 를 사용할 수도 있습니다 . 이것은 항상 컨트롤러 전후에 필터를 실행합니다. 이는 인증 또는 API 로깅 중에 특히 편리합니다.</target>
        </trans-unit>
        <trans-unit id="8519bf0f4ba89d1e5a9b21cecd675dd4e809eb65" translate="yes" xml:space="preserve">
          <source>You can also use any native PHP functions that permit up to two parameters, where at least one is required (to pass the field data).</source>
          <target state="translated">필드 데이터를 전달하기 위해 하나 이상이 필요한 경우 최대 2 개의 매개 변수를 허용하는 기본 PHP 함수를 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="6996c21410697fa2c29128087619fd1a9fe1b1b6" translate="yes" xml:space="preserve">
          <source>You can also use any native PHP functions that permits one parameter, like &lt;code&gt;trim()&lt;/code&gt;, &lt;code&gt;htmlspecialchars()&lt;/code&gt;, &lt;code&gt;urldecode()&lt;/code&gt;, etc.</source>
          <target state="translated">&lt;code&gt;trim()&lt;/code&gt; , &lt;code&gt;htmlspecialchars()&lt;/code&gt; , &lt;code&gt;urldecode()&lt;/code&gt; 등과 같은 하나의 매개 변수를 허용하는 기본 PHP 함수를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0083091f5f2e31130adcc00446979be37e3868fe" translate="yes" xml:space="preserve">
          <source>You can also use callbacks in place of the normal routing rules to process the back-references. Example:</source>
          <target state="translated">일반 라우팅 규칙 대신 콜백을 사용하여 역 참조를 처리 할 수도 있습니다. 예:</target>
        </trans-unit>
        <trans-unit id="c62c9cf570070270903b3374f7d502f5c99c4c42" translate="yes" xml:space="preserve">
          <source>You can also use lambda/anoymous functions (or closures) as hooks, with a simpler syntax:</source>
          <target state="translated">간단한 구문으로 람다 / 양어 함수 (또는 클로저)를 후크로 사용할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="a41dae9e73fda252e40fc3e6bf1e11668ae509d5" translate="yes" xml:space="preserve">
          <source>You can also use named keys to make it easier to keep things straight, if you&amp;rsquo;d like:</source>
          <target state="translated">원하는 경우 명명 된 키를 사용하여보다 쉽게 ​​일을 똑바로 유지할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd1297ce931fbc06ae2a30abe73883dd14744284" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;getRow()&lt;/code&gt; method in exactly the same way.</source>
          <target state="translated">동일한 방법으로 &lt;code&gt;getRow()&lt;/code&gt; 메서드를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4ca3718c32a719838c366e193595dafdaf709e3d" translate="yes" xml:space="preserve">
          <source>You can also use the &lt;code&gt;row()&lt;/code&gt; method in exactly the same way.</source>
          <target state="translated">정확히 같은 방식으로 &lt;code&gt;row()&lt;/code&gt; 메서드를 사용할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0c843ff8372dc3498c1a68a5b24a69546227267e" translate="yes" xml:space="preserve">
          <source>You can also use the array property name as a prefix. If the environment file held the following then the result would be the same as above.</source>
          <target state="translated">배열 속성 이름을 접두사로 사용할 수도 있습니다. 환경 파일에 다음이 포함 된 경우 결과는 위와 동일합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
