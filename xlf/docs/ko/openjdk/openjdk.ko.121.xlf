<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="4f234b70d064507743e36c08ffa4218f59143081" translate="yes" xml:space="preserve">
          <source>Once you know the number of attributes, you can iterate through the list.</source>
          <target state="translated">속성 수를 알고 나면 목록을 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="97f7fcac6241fe83cde072083f7ea90745257065" translate="yes" xml:space="preserve">
          <source>Once you've created a &lt;code&gt;Locale&lt;/code&gt; you can query it for information about itself. Use &lt;code&gt;getCountry&lt;/code&gt; to get the country (or region) code and &lt;code&gt;getLanguage&lt;/code&gt; to get the language code. You can use &lt;code&gt;getDisplayCountry&lt;/code&gt; to get the name of the country suitable for displaying to the user. Similarly, you can use &lt;code&gt;getDisplayLanguage&lt;/code&gt; to get the name of the language suitable for displaying to the user. Interestingly, the &lt;code&gt;getDisplayXXX&lt;/code&gt; methods are themselves locale-sensitive and have two versions: one that uses the default &lt;a href=&quot;locale.category#DISPLAY&quot;&gt;&lt;code&gt;DISPLAY&lt;/code&gt;&lt;/a&gt; locale and one that uses the locale specified as an argument.</source>
          <target state="translated">&lt;code&gt;Locale&lt;/code&gt; 을 만든 후에는 로캘에 대한 정보를 쿼리 할 수 ​​있습니다. &lt;code&gt;getCountry&lt;/code&gt; 를 사용 하여 국가 (또는 지역) 코드 를 얻고 &lt;code&gt;getLanguage&lt;/code&gt; 를 사용하여 언어 코드를 가져 오십시오. &lt;code&gt;getDisplayCountry&lt;/code&gt; 를 사용 하여 사용자에게 표시하기에 적합한 국가 이름을 얻을 수 있습니다 . 마찬가지로 &lt;code&gt;getDisplayLanguage&lt;/code&gt; 를 사용 하여 사용자에게 표시하기에 적합한 언어의 이름을 얻을 수 있습니다 . 흥미롭게도 &lt;code&gt;getDisplayXXX&lt;/code&gt; 메소드는 로케일에 민감하며 두 가지 버전이 있습니다. 하나는 기본 &lt;a href=&quot;locale.category#DISPLAY&quot;&gt; &lt;code&gt;DISPLAY&lt;/code&gt; &lt;/a&gt; 로케일을 사용하는 것과 다른 하나는 인수로 지정된 로케일을 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="7e034d4aa8247d4aa51ce0cb1311b322fd3147e7" translate="yes" xml:space="preserve">
          <source>One category of information found in directory schemas is &lt;em&gt;class definitions&lt;/em&gt;. An &quot;object class&quot; definition specifies the object's &lt;em&gt;type&lt;/em&gt; and what attributes (mandatory and optional) the object must/can have. Note that the term &quot;object class&quot; being referred to here is in the directory sense rather than in the Java sense. For example, if the named object is a directory object of &quot;Person&quot; class, &lt;code&gt;getSchemaClassDefinition()&lt;/code&gt; would return a &lt;code&gt;DirContext&lt;/code&gt; representing the (directory's) object class definition of &quot;Person&quot;.</source>
          <target state="translated">디렉토리 스키마에서 찾을 수있는 정보 범주는 &lt;em&gt;클래스 정의&lt;/em&gt; 입니다. &quot;객체 클래스&quot;정의는 객체의&lt;em&gt; 유형&lt;/em&gt; 과 객체가 가지고 있거나 가질 수있는 속성 (필수 및 선택)을 지정합니다. 여기서 언급되는 &quot;객체 클래스&quot;라는 용어는 Java 의미가 아니라 디렉토리 의미입니다. 예를 들어, 명명 된 객체가 &quot;Person&quot;클래스의 디렉토리 객체 인 경우 &lt;code&gt;getSchemaClassDefinition()&lt;/code&gt; 은 &quot;Person&quot; 의 (디렉토리의) 객체 클래스 정의를 나타내는 &lt;code&gt;DirContext&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="9588f0f23f77b66b889c977d3af1cbc098d2973f" translate="yes" xml:space="preserve">
          <source>One digit for the &lt;a href=&quot;../temporal/chronofield#DAY_OF_WEEK&quot;&gt;&lt;code&gt;day-of-week&lt;/code&gt;&lt;/a&gt;. The value run from Monday (1) to Sunday (7).</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#DAY_OF_WEEK&quot;&gt; &lt;code&gt;day-of-week&lt;/code&gt; &lt;/a&gt; 한 자릿수 . 월요일 (1)부터 일요일 (7)까지의 값입니다.</target>
        </trans-unit>
        <trans-unit id="605bb12c493c6dd8d57aeac9d89cc3cdfabc4ba4" translate="yes" xml:space="preserve">
          <source>One field is used: week-of-month. The calculation ensures that weeks never overlap a month boundary. The month is divided into periods where each period starts on the defined first day-of-week. The earliest period is referred to as week 0 if it has less than the minimal number of days and week 1 if it has at least the minimal number of days.</source>
          <target state="translated">한 필드가 사용됩니다 : 매주. 계산은 주가 한 달 경계와 겹치지 않도록합니다. 월은 정의 된 요일에 각 기간이 시작되는 기간으로 나뉩니다. 최소 기간 (일)이 최소 인 경우 가장 이른 기간을 0 주로, 최소 기간 (일)이 최소 인 경우 1 주를 말합니다.</target>
        </trans-unit>
        <trans-unit id="5f6f45d2ed6281b8fd2a7a11fd1b8369a70d320a" translate="yes" xml:space="preserve">
          <source>One field is used: week-of-year. The calculation ensures that weeks never overlap a year boundary. The year is divided into periods where each period starts on the defined first day-of-week. The earliest period is referred to as week 0 if it has less than the minimal number of days and week 1 if it has at least the minimal number of days.</source>
          <target state="translated">일주일의 필드가 사용됩니다. 계산은 주가 연도 경계와 겹치지 않도록합니다. 연도는 각 기간이 정의 된 요일에 시작되는 기간으로 나뉩니다. 최소 기간 (일)이 최소 인 경우 가장 이른 기간을 0 주로, 최소 기간 (일)이 최소 인 경우 1 주를 말합니다.</target>
        </trans-unit>
        <trans-unit id="d576c21031c8a17aaa1f6bc7d6494418e656f2f6" translate="yes" xml:space="preserve">
          <source>One frame of the image is complete but there are more frames to be delivered.</source>
          <target state="translated">이미지의 한 프레임이 완성되었지만 전달할 프레임이 더 있습니다.</target>
        </trans-unit>
        <trans-unit id="87374168fe9f4173b4675432e3a7d16ff094e9f8" translate="yes" xml:space="preserve">
          <source>One method retrieves the &lt;code&gt;RowSet&lt;/code&gt; objects in the &lt;code&gt;JoinRowSet&lt;/code&gt; object, and another method retrieves the &lt;code&gt;RowSet&lt;/code&gt; names. A third method retrieves either the SQL &lt;code&gt;WHERE&lt;/code&gt; clause used behind the scenes to form the &lt;code&gt;JOIN&lt;/code&gt; or a text description of what the &lt;code&gt;WHERE&lt;/code&gt; clause does.</source>
          <target state="translated">한 메서드 는 &lt;code&gt;JoinRowSet&lt;/code&gt; 개체에서 &lt;code&gt;RowSet&lt;/code&gt; 개체를 검색하고 다른 메서드는 &lt;code&gt;RowSet&lt;/code&gt; 이름을 검색합니다 . 세 번째 방법 은 &lt;code&gt;JOIN&lt;/code&gt; 을 형성하기 위해 백그라운드에서 사용되는 SQL &lt;code&gt;WHERE&lt;/code&gt; 절 또는 &lt;code&gt;WHERE&lt;/code&gt; 절이 수행 하는 작업에 대한 텍스트 설명을 검색합니다 .</target>
        </trans-unit>
        <trans-unit id="ae7e1865f86df866f7532868bf7ccb97725a5930" translate="yes" xml:space="preserve">
          <source>One method sets the &lt;code&gt;JOIN&lt;/code&gt; type, and five methods find out whether the &lt;code&gt;JoinRowSet&lt;/code&gt; object supports a given type.</source>
          <target state="translated">한 가지 방법은 &lt;code&gt;JOIN&lt;/code&gt; 유형을 설정 하고 다섯 가지 방법은 &lt;code&gt;JoinRowSet&lt;/code&gt; 객체가 주어진 유형을 지원 하는지 여부를 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="2e38101bf88d60f2a89b42ce2b98cda17d81ef39" translate="yes" xml:space="preserve">
          <source>One of &quot;constructor&quot;, &quot;operation&quot;, &quot;getter&quot;, or &quot;setter&quot;.</source>
          <target state="translated">&quot;생성자&quot;, &quot;작업&quot;, &quot;getter&quot;또는 &quot;setter&quot;중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="afbd86f36e0ef566a5063223390002afc56a1b34" translate="yes" xml:space="preserve">
          <source>One of &lt;code&gt;NONE&lt;/code&gt;, &lt;code&gt;FRAME&lt;/code&gt;, &lt;code&gt;PLAIN_DIALOG&lt;/code&gt;, &lt;code&gt;INFORMATION_DIALOG&lt;/code&gt;, &lt;code&gt;ERROR_DIALOG&lt;/code&gt;, &lt;code&gt;COLOR_CHOOSER_DIALOG&lt;/code&gt;, &lt;code&gt;FILE_CHOOSER_DIALOG&lt;/code&gt;, &lt;code&gt;QUESTION_DIALOG&lt;/code&gt; or &lt;code&gt;WARNING_DIALOG&lt;/code&gt;.</source>
          <target state="translated">하나 &lt;code&gt;NONE&lt;/code&gt; , &lt;code&gt;FRAME&lt;/code&gt; , &lt;code&gt;PLAIN_DIALOG&lt;/code&gt; , &lt;code&gt;INFORMATION_DIALOG&lt;/code&gt; , &lt;code&gt;ERROR_DIALOG&lt;/code&gt; , &lt;code&gt;COLOR_CHOOSER_DIALOG&lt;/code&gt; , &lt;code&gt;FILE_CHOOSER_DIALOG&lt;/code&gt; , &lt;code&gt;QUESTION_DIALOG&lt;/code&gt; 또는 &lt;code&gt;WARNING_DIALOG&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="922b78f8979ea6ecd5f6cbbf55303f6d562d9fe1" translate="yes" xml:space="preserve">
          <source>One of OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE.</source>
          <target state="translated">OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="b579d68beb5e3ec9fd63244ea9d4faf30b2f4f06" translate="yes" xml:space="preserve">
          <source>One of the &lt;code&gt;TIFFTag.TIFF_*&lt;/code&gt; constants or &lt;code&gt;-1&lt;/code&gt; if the name is not recognized.</source>
          <target state="translated">&lt;code&gt;TIFFTag.TIFF_*&lt;/code&gt; 상수 중 하나 또는 이름이 인식되지 않는 경우 &lt;code&gt;-1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4d4a71c8cd15b784ae4edf9921b152392f1885a1" translate="yes" xml:space="preserve">
          <source>One of the &lt;code&gt;setInput()&lt;/code&gt; methods should be called whenever &lt;code&gt;needsInput()&lt;/code&gt; returns true indicating that more input data is required.</source>
          <target state="translated">더 많은 입력 데이터가 필요함을 나타내는 &lt;code&gt;needsInput()&lt;/code&gt; 이 true를 리턴 할 때마다 &lt;code&gt;setInput()&lt;/code&gt; 메소드 중 하나를 호출해야 합니다.</target>
        </trans-unit>
        <trans-unit id="82fef1f230d408705adc5e73d6d9a5bce626a8ab" translate="yes" xml:space="preserve">
          <source>One of the color space type constants defined in the &lt;code&gt;ColorSpace&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;ColorSpace&lt;/code&gt; 클래스에 정의 된 색 공간 유형 상수 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="2f608b50df9cf9230695c9fe8060b1949e456648" translate="yes" xml:space="preserve">
          <source>One of the essential characteristics of SAX2 is that it added feature flags which can be used to examine and perhaps modify parser modes, in particular modes such as validation. Since features are identified by (absolute) URIs, anyone can define such features. Currently defined standard feature URIs have the prefix &lt;code&gt;http://xml.org/sax/features/&lt;/code&gt; before an identifier such as &lt;code&gt;validation&lt;/code&gt;. Turn features on or off using &lt;em&gt;setFeature&lt;/em&gt;. Those standard identifiers are:</source>
          <target state="translated">SAX2의 필수 특성 중 하나는 유효성 검사와 같은 특정 모드에서 파서 모드를 검사하고 수정하는 데 사용할 수있는 기능 플래그를 추가했다는 것입니다. 기능은 (절대) URI로 식별되므로 누구나 이러한 기능을 정의 할 수 있습니다. 현재 정의 된 표준 기능 URI에는 &lt;code&gt;validation&lt;/code&gt; 과 같은 식별자 앞에 &lt;code&gt;http://xml.org/sax/features/&lt;/code&gt; 접두사가 있습니다 . &lt;em&gt;setFeature를&lt;/em&gt; 사용하여 기능을 켜거나 끕니다 . 이러한 표준 식별자는 다음과 같습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="4405169701a92ab066203d0477e58d2deb67cde1" translate="yes" xml:space="preserve">
          <source>One of the following class constants: &lt;a href=&quot;datatypeconstants#DATETIME&quot;&gt;&lt;code&gt;DatatypeConstants.DATETIME&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypeconstants#TIME&quot;&gt;&lt;code&gt;DatatypeConstants.TIME&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypeconstants#DATE&quot;&gt;&lt;code&gt;DatatypeConstants.DATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypeconstants#GYEARMONTH&quot;&gt;&lt;code&gt;DatatypeConstants.GYEARMONTH&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypeconstants#GMONTHDAY&quot;&gt;&lt;code&gt;DatatypeConstants.GMONTHDAY&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypeconstants#GYEAR&quot;&gt;&lt;code&gt;DatatypeConstants.GYEAR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypeconstants#GMONTH&quot;&gt;&lt;code&gt;DatatypeConstants.GMONTH&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;datatypeconstants#GDAY&quot;&gt;&lt;code&gt;DatatypeConstants.GDAY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다음 클래스 상수 중 하나 : &lt;a href=&quot;datatypeconstants#DATETIME&quot;&gt; &lt;code&gt;DatatypeConstants.DATETIME&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;datatypeconstants#TIME&quot;&gt; &lt;code&gt;DatatypeConstants.TIME&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;datatypeconstants#DATE&quot;&gt; &lt;code&gt;DatatypeConstants.DATE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;datatypeconstants#GYEARMONTH&quot;&gt; &lt;code&gt;DatatypeConstants.GYEARMONTH&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;datatypeconstants#GMONTHDAY&quot;&gt; &lt;code&gt;DatatypeConstants.GMONTHDAY&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;datatypeconstants#GYEAR&quot;&gt; &lt;code&gt;DatatypeConstants.GYEAR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;datatypeconstants#GMONTH&quot;&gt; &lt;code&gt;DatatypeConstants.GMONTH&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;datatypeconstants#GDAY&quot;&gt; &lt;code&gt;DatatypeConstants.GDAY&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d7eb02b1f4b09774b7eb7e6dd992d595cd9f3ae8" translate="yes" xml:space="preserve">
          <source>One of the following constants defined in &lt;code&gt;SwingConstants&lt;/code&gt;: &lt;code&gt;LEFT&lt;/code&gt;, &lt;code&gt;CENTER&lt;/code&gt;, &lt;code&gt;RIGHT&lt;/code&gt;, &lt;code&gt;LEADING&lt;/code&gt; or &lt;code&gt;TRAILING&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SwingConstants&lt;/code&gt; 에 정의 된 다음 상수 중 하나 : &lt;code&gt;LEFT&lt;/code&gt; , &lt;code&gt;CENTER&lt;/code&gt; , &lt;code&gt;RIGHT&lt;/code&gt; , &lt;code&gt;LEADING&lt;/code&gt; 또는 &lt;code&gt;TRAILING&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fbc89de7ccb30efcb5c930e1bc8e19abd549559" translate="yes" xml:space="preserve">
          <source>One of the following constants defined in &lt;code&gt;SwingConstants&lt;/code&gt;: &lt;code&gt;TOP&lt;/code&gt;, &lt;code&gt;CENTER&lt;/code&gt;, or &lt;code&gt;BOTTOM&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SwingConstants&lt;/code&gt; 에 정의 된 다음 상수 중 하나 : &lt;code&gt;TOP&lt;/code&gt; , &lt;code&gt;CENTER&lt;/code&gt; 또는 &lt;code&gt;BOTTOM&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="799c56d2c5e78b9e705bae6d8d0695eaf505126f" translate="yes" xml:space="preserve">
          <source>One of the integer constant closure types defined in this class.</source>
          <target state="translated">이 클래스에 정의 된 정수 상수 클로저 유형 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="a4a01191f3226f9b3e993b9743cad43d9d5ac4c8" translate="yes" xml:space="preserve">
          <source>One of the main reasons to use a &lt;code&gt;CachedRowSet&lt;/code&gt; object is to pass data between different components of an application. Because it is serializable, a &lt;code&gt;CachedRowSet&lt;/code&gt; object can be used, for example, to send the result of a query executed by an enterprise JavaBeans component running in a server environment over a network to a client running in a web browser.</source>
          <target state="translated">&lt;code&gt;CachedRowSet&lt;/code&gt; 개체 를 사용하는 주된 이유 중 하나 는 응용 프로그램의 서로 다른 구성 요소간에 데이터를 전달하는 것입니다. 직렬화 가능하기 때문에 &lt;code&gt;CachedRowSet&lt;/code&gt; 객체는 예를 들어 네트워크를 통해 서버 환경에서 실행되는 엔터프라이즈 JavaBeans 구성 요소에 의해 실행되는 쿼리 결과를 웹 브라우저에서 실행되는 클라이언트로 전송하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1580a3303814ba6dfac8ad8532aec704070d1bbb" translate="yes" xml:space="preserve">
          <source>One of the model change methods &amp;mdash; The view invokes a model change method when the underlying model has changed. There may be order dependencies in how the events are delivered, so a &lt;code&gt;RowSorter&lt;/code&gt; should not update its mapping until one of these methods is invoked.</source>
          <target state="translated">모델 변경 방법 중 하나 &amp;mdash; 기본 모델이 변경되면 뷰가 모델 변경 방법을 호출합니다. 이벤트가 전달되는 방식에 순서 종속성이있을 수 있으므로 &lt;code&gt;RowSorter&lt;/code&gt; 는 이러한 메서드 중 하나가 호출 될 때까지 매핑을 업데이트하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="fe4d8f7aaa6706a62ce85840f913a3efb08f059f" translate="yes" xml:space="preserve">
          <source>One of the outputs of the PKIX certification path validation algorithm is a valid policy tree, which includes the policies that were determined to be valid, how this determination was reached, and any policy qualifiers encountered. This tree is of depth</source>
          <target state="translated">PKIX 인증 경로 유효성 검증 알고리즘의 출력 중 하나는 유효한 정책 트리입니다. 여기에는 유효한 것으로 결정된 정책,이 결정 방법 및 정책 규정자가 포함됩니다. 이 나무는 깊이</target>
        </trans-unit>
        <trans-unit id="d52a9f16c0f1997b93147784ca86d41aaba7b263" translate="yes" xml:space="preserve">
          <source>One of the predefined profile class constants.</source>
          <target state="translated">미리 정의 된 프로필 클래스 상수 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="d20c8d68e4fa1c9bd5385a749c4f7d63db922558" translate="yes" xml:space="preserve">
          <source>One of the primary functions of a BeanContext is to act a as rendezvous between JavaBeans, and BeanContextServiceProviders.</source>
          <target state="translated">BeanContext의 주요 기능 중 하나는 JavaBeans와 BeanContextServiceProviders 사이의 랑데부 역할을하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="a5be84e39d45f3119fac14867bd068de30f02ec9" translate="yes" xml:space="preserve">
          <source>One of: OnUpdate|OnTimer|NoMoreOftenThan|OnUnregister|Always|Never. See the section &quot;MBean Descriptor Fields&quot; in the JMX specification document.</source>
          <target state="translated">다음 중 하나 : OnUpdate | OnTimer | NoMoreOftenThan | OnUnregister | Always | Never. JMX 스펙 문서의 &quot;MBean 설명자 필드&quot;섹션을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="3fc2929485f59c374b15e448a5b6ed670b7f710a" translate="yes" xml:space="preserve">
          <source>One or more &lt;a href=&quot;httphandler&quot;&gt;&lt;code&gt;HttpHandler&lt;/code&gt;&lt;/a&gt; objects must be associated with a server in order to process requests. Each such HttpHandler is registered with a root URI path which represents the location of the application or service on this server. The mapping of a handler to a HttpServer is encapsulated by a &lt;a href=&quot;httpcontext&quot;&gt;&lt;code&gt;HttpContext&lt;/code&gt;&lt;/a&gt; object. HttpContexts are created by calling &lt;a href=&quot;#createContext(java.lang.String,com.sun.net.httpserver.HttpHandler)&quot;&gt;&lt;code&gt;createContext(String,HttpHandler)&lt;/code&gt;&lt;/a&gt;. Any request for which no handler can be found is rejected with a 404 response. Management of threads can be done external to this object by providing a &lt;a href=&quot;../../../../../java.base/java/util/concurrent/executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; object. If none is provided a default implementation is used.</source>
          <target state="translated">요청을 처리 &lt;a href=&quot;httphandler&quot;&gt; &lt;code&gt;HttpHandler&lt;/code&gt; &lt;/a&gt; 하나 이상의 HttpHandler 개체가 서버와 연결되어야합니다. 이러한 각 HttpHandler는이 서버에서 응용 프로그램 또는 서비스의 위치를 ​​나타내는 루트 URI 경로에 등록됩니다. HttpServer에 대한 처리기의 매핑은 &lt;a href=&quot;httpcontext&quot;&gt; &lt;code&gt;HttpContext&lt;/code&gt; &lt;/a&gt; 개체에 의해 캡슐화됩니다 . HttpContext는 &lt;a href=&quot;#createContext(java.lang.String,com.sun.net.httpserver.HttpHandler)&quot;&gt; &lt;code&gt;createContext(String,HttpHandler)&lt;/code&gt; &lt;/a&gt; 를 호출하여 생성됩니다 . 처리기를 찾을 수없는 요청은 404 응답으로 거부됩니다. &lt;a href=&quot;../../../../../java.base/java/util/concurrent/executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt; 개체 를 제공하여이 개체 외부에서 스레드 관리를 수행 할 수 있습니다 . 아무것도 제공되지 않으면 기본 구현이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e8497a43da08b24bad6a75c0786424b8ff5600e4" translate="yes" xml:space="preserve">
          <source>One or more covers on the device are open.</source>
          <target state="translated">장치의 덮개가 열려 있습니다.</target>
        </trans-unit>
        <trans-unit id="11fb9b0a3d2e0a42dc8a562c50caca69bc446c74" translate="yes" xml:space="preserve">
          <source>One or more doors on the device are open.</source>
          <target state="translated">장치의 하나 이상의 문이 열려 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3320f9d2fbefb75351f2508a06475d97445eb5b" translate="yes" xml:space="preserve">
          <source>One or more icons that depict the function. These icons can be used for the images in a menu control, or for composite entries in a more sophisticated user interface.</source>
          <target state="translated">기능을 나타내는 하나 이상의 아이콘. 이러한 아이콘은 메뉴 컨트롤의 이미지 또는보다 정교한 사용자 인터페이스의 복합 항목에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1919c413a12680a075b2bc40301db08032dad900" translate="yes" xml:space="preserve">
          <source>One or more input trays are not in the device.</source>
          <target state="translated">장치에 하나 이상의 입력 용지함이 없습니다.</target>
        </trans-unit>
        <trans-unit id="4afe595d25b2ac7cb5647c31344cdf1ed9cc1f7b" translate="yes" xml:space="preserve">
          <source>One or more interlock devices on the printer are unlocked.</source>
          <target state="translated">프린터의 하나 이상의 인터록 장치가 잠금 해제되었습니다.</target>
        </trans-unit>
        <trans-unit id="36dd4588ecf004d570e951c9e81131fa205679a1" translate="yes" xml:space="preserve">
          <source>One or more of the &lt;code&gt;className&lt;/code&gt;, &lt;code&gt;member&lt;/code&gt;, or &lt;code&gt;objectName&lt;/code&gt; may be omitted. If the &lt;code&gt;member&lt;/code&gt; is omitted, the &lt;code&gt;#&lt;/code&gt; may be too (but does not have to be). If the &lt;code&gt;objectName&lt;/code&gt; is omitted, the &lt;code&gt;[]&lt;/code&gt; may be too (but does not have to be). It is not legal to omit all three items, that is to have a &lt;em&gt;name&lt;/em&gt; that is the empty string.</source>
          <target state="translated">&lt;code&gt;className&lt;/code&gt; , &lt;code&gt;member&lt;/code&gt; 또는 &lt;code&gt;objectName&lt;/code&gt; 중 하나 이상 이 생략 될 수 있습니다. 는 IF &lt;code&gt;member&lt;/code&gt; 생략되면, &lt;code&gt;#&lt;/code&gt; 은 너무 될 수있다 (그러나 일 필요는 없습니다). 상기 중간 &lt;code&gt;objectName&lt;/code&gt; 생략되면, &lt;code&gt;[]&lt;/code&gt; 도있을 수있다 (그러나 일 필요는 없다). 세 가지 항목을 모두 생략하는 것은 합법적이지 않습니다. 즉 &lt;em&gt;이름&lt;/em&gt; 이 있어야합니다.&lt;em&gt;&lt;/em&gt; 이 빈 문자열 인 것입니다.</target>
        </trans-unit>
        <trans-unit id="62414662d1e806d54e64ac5bfd4cc008d10527e4" translate="yes" xml:space="preserve">
          <source>One or more of the &lt;code&gt;className&lt;/code&gt;, &lt;code&gt;member&lt;/code&gt;, or &lt;code&gt;objectName&lt;/code&gt; may be the character &quot;&lt;code&gt;-&lt;/code&gt;&quot;, which is equivalent to a null value. A null value is implied by any value (including another null value) but does not imply any other value.</source>
          <target state="translated">&lt;code&gt;className&lt;/code&gt; , &lt;code&gt;member&lt;/code&gt; 또는 &lt;code&gt;objectName&lt;/code&gt; 중 하나 이상이 &quot; &lt;code&gt;-&lt;/code&gt; &quot; 이는 널값과 같습니다. 널 (NULL) 값은 다른 값 (다른 널 (NULL) 값 포함)에 의해 암시되지만 다른 값을 의미하지는 않습니다.</target>
        </trans-unit>
        <trans-unit id="05d823061698213b78514643ca748d36417b98ef" translate="yes" xml:space="preserve">
          <source>One or more output areas are almost full (e.g. tray, stacker, collator).</source>
          <target state="translated">하나 이상의 출력 영역이 거의 찼습니다 (예 : 용지함, 스태커, 한장).</target>
        </trans-unit>
        <trans-unit id="f7be48f84b2c6dcf946b85f933e8ad9284283b9c" translate="yes" xml:space="preserve">
          <source>One or more output areas are full (e.g. tray, stacker, collator).</source>
          <target state="translated">하나 이상의 출력 영역이 가득 찼습니다 (예 : 용지함, 스태커, 한 부씩 인쇄기).</target>
        </trans-unit>
        <trans-unit id="a9e06c77a0c1a8a842f59cb0648b671d229a9144" translate="yes" xml:space="preserve">
          <source>One or more output trays are not in the device.</source>
          <target state="translated">장치에 하나 이상의 출력 용지함이 없습니다.</target>
        </trans-unit>
        <trans-unit id="62904c1a27e242152b3b7e7c4be2bc5da8971a64" translate="yes" xml:space="preserve">
          <source>One or more site specific standard job sheets are printed. e.g. a single start sheet is printed, or both start and end sheets are printed.</source>
          <target state="translated">하나 이상의 사이트 별 표준 작업 시트가 인쇄됩니다. 예를 들어, 단일 시작 시트가 인쇄되거나 시작 및 종료 시트가 모두 인쇄됩니다.</target>
        </trans-unit>
        <trans-unit id="d5a299feba161a1659588c3dea5de8b3c714120d" translate="yes" xml:space="preserve">
          <source>One or more text strings that describe the function. These strings can be used, for example, to display the flyover text for a button or to set the text in a menu item.</source>
          <target state="translated">함수를 설명하는 하나 이상의 텍스트 문자열입니다. 예를 들어, 이러한 문자열은 버튼의 플라이 오버 텍스트를 표시하거나 메뉴 항목의 텍스트를 설정하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="14b6ea1b859bd2e8e85ef1ead8c7480271e874f2" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain a running &lt;code&gt;double&lt;/code&gt; value updated using a supplied function.</source>
          <target state="translated">제공된 함수를 사용하여 업데이트 된 실행 &lt;code&gt;double&lt;/code&gt; 값 을 함께 유지하는 하나 이상의 변수</target>
        </trans-unit>
        <trans-unit id="c5b5cad5dd4a0ec8121f631a6a291b8d356c06e6" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain a running &lt;code&gt;double&lt;/code&gt; value updated using a supplied function. When updates (method &lt;a href=&quot;#accumulate(double)&quot;&gt;&lt;code&gt;accumulate(double)&lt;/code&gt;&lt;/a&gt;) are contended across threads, the set of variables may grow dynamically to reduce contention. Method &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; (or, equivalently, &lt;a href=&quot;#doubleValue()&quot;&gt;&lt;code&gt;doubleValue()&lt;/code&gt;&lt;/a&gt;) returns the current value across the variables maintaining updates.</source>
          <target state="translated">제공된 함수를 사용하여 업데이트 된 실행중인 &lt;code&gt;double&lt;/code&gt; 값 을 함께 유지하는 하나 이상의 변수 . 업데이트 (method &lt;a href=&quot;#accumulate(double)&quot;&gt; &lt;code&gt;accumulate(double)&lt;/code&gt; &lt;/a&gt; )가 스레드간에 경합되면 변수 집합이 동적으로 증가하여 경합을 줄일 수 있습니다. &lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 메서드 (또는 마찬가지로 &lt;a href=&quot;#doubleValue()&quot;&gt; &lt;code&gt;doubleValue()&lt;/code&gt; &lt;/a&gt; )는 업데이트를 유지하는 변수에서 현재 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="df3399c4848e7fe7f15d3575ea7c9a014cc409ef" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain a running &lt;code&gt;double&lt;/code&gt; value updated using a supplied function. When updates (method &lt;a href=&quot;doubleaccumulator#accumulate-double-&quot;&gt;&lt;code&gt;accumulate(double)&lt;/code&gt;&lt;/a&gt;) are contended across threads, the set of variables may grow dynamically to reduce contention. Method &lt;a href=&quot;doubleaccumulator#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; (or, equivalently, &lt;a href=&quot;doubleaccumulator#doubleValue--&quot;&gt;&lt;code&gt;doubleValue()&lt;/code&gt;&lt;/a&gt;) returns the current value across the variables maintaining updates.</source>
          <target state="translated">제공된 함수를 사용하여 업데이트 된 실행 &lt;code&gt;double&lt;/code&gt; 값 을 함께 유지하는 하나 이상의 변수 스레드간에 업데이트 (method &lt;a href=&quot;doubleaccumulator#accumulate-double-&quot;&gt; &lt;code&gt;accumulate(double)&lt;/code&gt; &lt;/a&gt; )가 포함되면 경합을 줄이기 위해 변수 세트가 동적으로 커질 수 있습니다. &lt;a href=&quot;doubleaccumulator#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 메소드 (또는 &lt;a href=&quot;doubleaccumulator#doubleValue--&quot;&gt; &lt;code&gt;doubleValue()&lt;/code&gt; &lt;/a&gt; )는 업데이트를 유지 보수하는 변수에서 현재 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="e6c76666a455301a84486e7585dbccafff15949e" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain a running &lt;code&gt;long&lt;/code&gt; value updated using a supplied function.</source>
          <target state="translated">제공된 함수를 사용하여 업데이트 된 &lt;code&gt;long&lt;/code&gt; 실행 값 을 함께 유지하는 하나 이상의 변수</target>
        </trans-unit>
        <trans-unit id="7f805dc20c031c348a148276faee4f13f1629929" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain a running &lt;code&gt;long&lt;/code&gt; value updated using a supplied function. When updates (method &lt;a href=&quot;#accumulate(long)&quot;&gt;&lt;code&gt;accumulate(long)&lt;/code&gt;&lt;/a&gt;) are contended across threads, the set of variables may grow dynamically to reduce contention. Method &lt;a href=&quot;#get()&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; (or, equivalently, &lt;a href=&quot;#longValue()&quot;&gt;&lt;code&gt;longValue()&lt;/code&gt;&lt;/a&gt;) returns the current value across the variables maintaining updates.</source>
          <target state="translated">제공된 함수를 사용하여 업데이트 된 &lt;code&gt;long&lt;/code&gt; 실행 값 을 함께 유지하는 하나 이상의 변수입니다 . 업데이트 (method &lt;a href=&quot;#accumulate(long)&quot;&gt; &lt;code&gt;accumulate(long)&lt;/code&gt; &lt;/a&gt; )가 스레드간에 경합되면 경합을 줄이기 위해 변수 세트가 동적으로 증가 할 수 있습니다. &lt;a href=&quot;#get()&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 메서드 (또는 이와 동등하게 &lt;a href=&quot;#longValue()&quot;&gt; &lt;code&gt;longValue()&lt;/code&gt; &lt;/a&gt; )는 업데이트를 유지하는 변수에서 현재 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ddc884d062eca7046f414986dc223120cf5a29e8" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain a running &lt;code&gt;long&lt;/code&gt; value updated using a supplied function. When updates (method &lt;a href=&quot;longaccumulator#accumulate-long-&quot;&gt;&lt;code&gt;accumulate(long)&lt;/code&gt;&lt;/a&gt;) are contended across threads, the set of variables may grow dynamically to reduce contention. Method &lt;a href=&quot;longaccumulator#get--&quot;&gt;&lt;code&gt;get()&lt;/code&gt;&lt;/a&gt; (or, equivalently, &lt;a href=&quot;longaccumulator#longValue--&quot;&gt;&lt;code&gt;longValue()&lt;/code&gt;&lt;/a&gt;) returns the current value across the variables maintaining updates.</source>
          <target state="translated">제공된 함수를 사용하여 업데이트 된 &lt;code&gt;long&lt;/code&gt; 실행 값 을 함께 유지하는 하나 이상의 변수 스레드간에 업데이트 (메소드 &lt;a href=&quot;longaccumulator#accumulate-long-&quot;&gt; &lt;code&gt;accumulate(long)&lt;/code&gt; &lt;/a&gt; )가 발생하면 경합을 줄이기 위해 변수 세트가 동적으로 커질 수 있습니다. &lt;a href=&quot;longaccumulator#get--&quot;&gt; &lt;code&gt;get()&lt;/code&gt; &lt;/a&gt; 메소드 (또는 이와 동일하게 &lt;a href=&quot;longaccumulator#longValue--&quot;&gt; &lt;code&gt;longValue()&lt;/code&gt; &lt;/a&gt; )는 업데이트를 유지 보수하는 변수에서 현재 값을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="aee3b653ddae02320cc07c068d3337d68ff8b0f3" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain an initially zero &lt;code&gt;double&lt;/code&gt; sum.</source>
          <target state="translated">초기에 0의 &lt;code&gt;double&lt;/code&gt; 합을 유지하는 하나 이상의 변수 .</target>
        </trans-unit>
        <trans-unit id="2512325ad41d03a9434393ac6fb10abc4ef217de" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain an initially zero &lt;code&gt;double&lt;/code&gt; sum. When updates (method &lt;a href=&quot;#add(double)&quot;&gt;&lt;code&gt;add(double)&lt;/code&gt;&lt;/a&gt;) are contended across threads, the set of variables may grow dynamically to reduce contention. Method &lt;a href=&quot;#sum()&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; (or, equivalently &lt;a href=&quot;#doubleValue()&quot;&gt;&lt;code&gt;doubleValue()&lt;/code&gt;&lt;/a&gt;) returns the current total combined across the variables maintaining the sum. The order of accumulation within or across threads is not guaranteed. Thus, this class may not be applicable if numerical stability is required, especially when combining values of substantially different orders of magnitude.</source>
          <target state="translated">함께 초기에 0 &lt;code&gt;double&lt;/code&gt; 합을 유지하는 하나 이상의 변수 . 업데이트 (method &lt;a href=&quot;#add(double)&quot;&gt; &lt;code&gt;add(double)&lt;/code&gt; &lt;/a&gt; )가 스레드간에 경합되면 변수 세트가 동적으로 증가하여 경합을 줄일 수 있습니다. &lt;a href=&quot;#sum()&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt; 메서드 (또는 동일하게 &lt;a href=&quot;#doubleValue()&quot;&gt; &lt;code&gt;doubleValue()&lt;/code&gt; &lt;/a&gt; )는 합계를 유지하는 변수에서 결합 된 현재 합계를 반환합니다. 스레드 내부 또는 스레드 간의 누적 순서는 보장되지 않습니다. 따라서이 등급은 수치 안정성이 필요한 경우 적용되지 않을 수 있습니다. 특히 크기가 상당히 다른 값을 결합 할 때 더욱 그렇습니다.</target>
        </trans-unit>
        <trans-unit id="93486468ee762688a897083f21b3d34104622c82" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain an initially zero &lt;code&gt;double&lt;/code&gt; sum. When updates (method &lt;a href=&quot;doubleadder#add-double-&quot;&gt;&lt;code&gt;add(double)&lt;/code&gt;&lt;/a&gt;) are contended across threads, the set of variables may grow dynamically to reduce contention. Method &lt;a href=&quot;doubleadder#sum--&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; (or, equivalently &lt;a href=&quot;doubleadder#doubleValue--&quot;&gt;&lt;code&gt;doubleValue()&lt;/code&gt;&lt;/a&gt;) returns the current total combined across the variables maintaining the sum. The order of accumulation within or across threads is not guaranteed. Thus, this class may not be applicable if numerical stability is required, especially when combining values of substantially different orders of magnitude.</source>
          <target state="translated">초기에 0의 &lt;code&gt;double&lt;/code&gt; 합을 유지하는 하나 이상의 변수 . 스레드간에 업데이트 (method &lt;a href=&quot;doubleadder#add-double-&quot;&gt; &lt;code&gt;add(double)&lt;/code&gt; &lt;/a&gt; )가 포함되면 경합을 줄이기 위해 변수 세트가 동적으로 커질 수 있습니다. &lt;a href=&quot;doubleadder#sum--&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt; 메소드 (또는 동등하게 &lt;a href=&quot;doubleadder#doubleValue--&quot;&gt; &lt;code&gt;doubleValue()&lt;/code&gt; &lt;/a&gt; )는 합계를 유지하는 변수에서 결합 된 현재 총계를 리턴합니다. 스레드 내에서 또는 스레드 간 누적 순서는 보장되지 않습니다. 따라서 수치 안정성이 필요한 경우, 특히 실질적으로 다른 차수의 값을 결합 할 때이 등급을 적용 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="482bd10fb92d85cf87792c8c91c2d1093debca0b" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain an initially zero &lt;code&gt;long&lt;/code&gt; sum.</source>
          <target state="translated">초기에 제로 &lt;code&gt;long&lt;/code&gt; 합을 유지하는 하나 이상의 변수 .</target>
        </trans-unit>
        <trans-unit id="abf700d57956f6a19bc9c773bb19c9c16a60ba2a" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain an initially zero &lt;code&gt;long&lt;/code&gt; sum. When updates (method &lt;a href=&quot;#add(long)&quot;&gt;&lt;code&gt;add(long)&lt;/code&gt;&lt;/a&gt;) are contended across threads, the set of variables may grow dynamically to reduce contention. Method &lt;a href=&quot;#sum()&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; (or, equivalently, &lt;a href=&quot;#longValue()&quot;&gt;&lt;code&gt;longValue()&lt;/code&gt;&lt;/a&gt;) returns the current total combined across the variables maintaining the sum.</source>
          <target state="translated">함께 초기에 0의 &lt;code&gt;long&lt;/code&gt; 합계를 유지하는 하나 이상의 변수 . 업데이트 (method &lt;a href=&quot;#add(long)&quot;&gt; &lt;code&gt;add(long)&lt;/code&gt; &lt;/a&gt; )가 스레드간에 경합되면 변수 세트가 동적으로 증가하여 경합을 줄일 수 있습니다. &lt;a href=&quot;#sum()&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt; 메서드 (또는 동등하게 &lt;a href=&quot;#longValue()&quot;&gt; &lt;code&gt;longValue()&lt;/code&gt; &lt;/a&gt; )는 합계를 유지하는 변수에서 결합 된 현재 합계를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c90db9d12bad959451d38dd280b1fc89cefc4d18" translate="yes" xml:space="preserve">
          <source>One or more variables that together maintain an initially zero &lt;code&gt;long&lt;/code&gt; sum. When updates (method &lt;a href=&quot;longadder#add-long-&quot;&gt;&lt;code&gt;add(long)&lt;/code&gt;&lt;/a&gt;) are contended across threads, the set of variables may grow dynamically to reduce contention. Method &lt;a href=&quot;longadder#sum--&quot;&gt;&lt;code&gt;sum()&lt;/code&gt;&lt;/a&gt; (or, equivalently, &lt;a href=&quot;longadder#longValue--&quot;&gt;&lt;code&gt;longValue()&lt;/code&gt;&lt;/a&gt;) returns the current total combined across the variables maintaining the sum.</source>
          <target state="translated">초기에 제로 &lt;code&gt;long&lt;/code&gt; 합을 유지하는 하나 이상의 변수 . 스레드간에 업데이트 (method &lt;a href=&quot;longadder#add-long-&quot;&gt; &lt;code&gt;add(long)&lt;/code&gt; &lt;/a&gt; )가 포함되면 경합을 줄이기 위해 변수 세트가 동적으로 커질 수 있습니다. &lt;a href=&quot;longadder#sum--&quot;&gt; &lt;code&gt;sum()&lt;/code&gt; &lt;/a&gt; 메소드 (또는 &lt;a href=&quot;longadder#longValue--&quot;&gt; &lt;code&gt;longValue()&lt;/code&gt; &lt;/a&gt; )는 합계를 유지하는 변수에서 결합 된 현재 총계를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="df52bff901e73f26e196485a26f3cc6072c39f2f" translate="yes" xml:space="preserve">
          <source>One or two digits for the &lt;a href=&quot;../temporal/chronofield#DAY_OF_MONTH&quot;&gt;&lt;code&gt;day-of-month&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#DAY_OF_MONTH&quot;&gt; &lt;code&gt;day-of-month&lt;/code&gt; &lt;/a&gt; 1-2 자리 숫자입니다 .</target>
        </trans-unit>
        <trans-unit id="342e740512323188f3a7753264a3207774c748bb" translate="yes" xml:space="preserve">
          <source>One pre-defined policy which accepts all cookies.</source>
          <target state="translated">모든 쿠키를 허용하는 하나의 사전 정의 된 정책.</target>
        </trans-unit>
        <trans-unit id="d737e4b4e581695d6dea7936ecc31820116cc54c" translate="yes" xml:space="preserve">
          <source>One pre-defined policy which accepts no cookies.</source>
          <target state="translated">쿠키를 허용하지 않는 하나의 사전 정의 된 정책.</target>
        </trans-unit>
        <trans-unit id="eeca32a30cc77fcde88c2c9e897ca86963ed16fe" translate="yes" xml:space="preserve">
          <source>One pre-defined policy which only accepts cookies from original server.</source>
          <target state="translated">원래 서버의 쿠키 만 허용하는 하나의 사전 정의 된 정책.</target>
        </trans-unit>
        <trans-unit id="5eac38ac4cdcc9d5d0a95b63354a94285d784b02" translate="yes" xml:space="preserve">
          <source>One reason that a throwable may have a cause is that the class that throws it is built atop a lower layered abstraction, and an operation on the upper layer fails due to a failure in the lower layer. It would be bad design to let the throwable thrown by the lower layer propagate outward, as it is generally unrelated to the abstraction provided by the upper layer. Further, doing so would tie the API of the upper layer to the details of its implementation, assuming the lower layer's exception was a checked exception. Throwing a &quot;wrapped exception&quot; (i.e., an exception containing a cause) allows the upper layer to communicate the details of the failure to its caller without incurring either of these shortcomings. It preserves the flexibility to change the implementation of the upper layer without changing its API (in particular, the set of exceptions thrown by its methods).</source>
          <target state="translated">Throwable이 원인을 가질 수있는 한 가지 이유는이를 던지는 클래스가 하위 계층 추상화 위에 빌드되고 하위 계층의 실패로 인해 상위 계층의 조작이 실패하기 때문입니다. 하위 계층에 의해 던져 질 수있는 던지는 것을 일반적으로 상위 계층에 의해 제공되는 추상화와 관련이 없기 때문에 외향으로 전파되게하는 것은 좋지 않은 설계 일 것이다. 또한 하위 계층의 예외가 확인 된 예외라고 가정하면 상위 계층의 API를 구현 세부 정보에 연결합니다. &quot;래핑 된 예외&quot;(즉, 원인이 포함 된 예외)를 발생 시키면 상위 계층에서 이러한 단점 중 하나를 발생시키지 않고 실패에 대한 세부 정보를 호출자에게 전달할 수 있습니다. API를 변경하지 않고 상위 계층의 구현을 변경할 수있는 유연성을 유지합니다 (특히메소드에 의해 발생되는 예외 세트).</target>
        </trans-unit>
        <trans-unit id="65428b090b961731452f54c2dd68b80e0388ea87" translate="yes" xml:space="preserve">
          <source>One solution has been to create a &quot;QName&quot; object that holds the namespace URI, as well as the prefix and local name, but this is not always an optimal solution, as when, for example, you want to use unique strings as keys in a dictionary object. Not having a string representation also makes it difficult to specify a namespaced identity outside the context of an XML document.</source>
          <target state="translated">한 가지 해결책은 네임 스페이스 URI와 접두사 및 로컬 이름을 포함하는 &quot;QName&quot;객체를 만드는 것이었지만, 예를 들어 고유 한 문자열을 키로 사용하려는 경우와 같이 항상 최적의 해결책은 아닙니다. 사전 객체. 문자열 표현이 없으면 XML 문서의 컨텍스트 외부에서 네임 스페이스 ID를 지정하기가 어렵습니다.</target>
        </trans-unit>
        <trans-unit id="3f15c21abd7b28313d83091574e7b951a12eea99" translate="yes" xml:space="preserve">
          <source>One special note: the &quot;key&quot; passed to this method could be of the form &quot;background&quot; or &quot;Button.background&quot; where &quot;Button&quot; equals the prefix passed to the NimbusStyle constructor. In either case, it looks for &quot;background&quot;.</source>
          <target state="translated">한 가지 특별한 참고 사항 :이 메서드에 전달 된 &quot;키&quot;는 &quot;background&quot;또는 &quot;Button.background&quot;형식 일 수 있습니다. 여기서 &quot;Button&quot;은 NimbusStyle 생성자에 전달 된 접두사와 같습니다. 두 경우 모두 &quot;배경&quot;을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="7513ae5cee9027025cb754725a3d9bb52be2032c" translate="yes" xml:space="preserve">
          <source>One stage's execution may be triggered by completion of a single stage, or both of two stages, or either of two stages. Dependencies on a single stage are arranged using methods with prefix &lt;em&gt;then&lt;/em&gt;. Those triggered by completion of &lt;em&gt;both&lt;/em&gt; of two stages may &lt;em&gt;combine&lt;/em&gt; their results or effects, using correspondingly named methods. Those triggered by &lt;em&gt;either&lt;/em&gt; of two stages make no guarantees about which of the results or effects are used for the dependent stage's computation.</source>
          <target state="translated">한 단계의 실행은 단일 단계 또는 두 단계 모두 또는 두 단계 중 하나의 완료로 트리거 될 수 있습니다. 단일 단계의 종속성은 접두사 &lt;em&gt;다음에&lt;/em&gt; 메소드를 사용하여 정렬됩니다 . 두 단계 를 &lt;em&gt;모두&lt;/em&gt; 완료하여 트리거 된 결과는 해당 명명 된 방법을 사용하여 결과 또는 효과를 &lt;em&gt;결합&lt;/em&gt; 할 수 있습니다 . 두 단계 &lt;em&gt;중 하나&lt;/em&gt; 에 의해 트리거 된 결과는 종속 단계의 계산에 어떤 결과 또는 효과가 사용되는지를 보증하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="746ba70072bc5aacf7773ae2b181405d36771cef" translate="yes" xml:space="preserve">
          <source>One strategy is to simply redefine the ViewFactory interface in the UI. By default, this UI itself acts as the factory for View implementations. This is useful for simple factories. To do this reimplement the &lt;a href=&quot;#create(javax.swing.text.Element)&quot;&gt;&lt;code&gt;create(javax.swing.text.Element)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">한 가지 전략은 단순히 UI에서 ViewFactory 인터페이스를 재정의하는 것입니다. 기본적으로이 UI 자체는 View 구현을위한 팩토리 역할을합니다. 이것은 간단한 공장에 유용합니다. 이를 위해 &lt;a href=&quot;#create(javax.swing.text.Element)&quot;&gt; &lt;code&gt;create(javax.swing.text.Element)&lt;/code&gt; &lt;/a&gt; 메소드를 다시 구현하십시오 .</target>
        </trans-unit>
        <trans-unit id="0285338f54615968520f7082086f7eeea38ccc85" translate="yes" xml:space="preserve">
          <source>One such piece of information is a transform that scales typographical points to pixels. (A point is defined to be exactly 1/72 of an inch, which is slightly different than the traditional mechanical measurement of a point.) A character that is rendered at 12pt on a 600dpi device might have a different size than the same character rendered at 12pt on a 72dpi device because of such factors as rounding to pixel boundaries and hints that the font designer may have specified.</source>
          <target state="translated">이러한 정보 중 하나는 인쇄 지점을 픽셀로 조정하는 변환입니다. (포인트는 정확히 1/72 인치로 정의되며, 이는 포인트의 기존 기계적 측정과 약간 다릅니다.) 600dpi 장치에서 12pt로 렌더링 된 캐릭터는 렌더링 된 동일한 캐릭터와 크기가 다를 수 있습니다. 픽셀 경계로 반올림 및 글꼴 디자이너가 지정했을 수있는 힌트와 같은 요인으로 인해 72dpi 장치에서 12pt에서.</target>
        </trans-unit>
        <trans-unit id="e8c5b1bb7eac971a45a3549bb6dab872a104a61d" translate="yes" xml:space="preserve">
          <source>One to nine digits for the &lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt;&lt;code&gt;nano-of-second&lt;/code&gt;&lt;/a&gt;. As many digits will be output as required.</source>
          <target state="translated">&lt;a href=&quot;../temporal/chronofield#NANO_OF_SECOND&quot;&gt; &lt;code&gt;nano-of-second&lt;/code&gt; &lt;/a&gt; 1-9 자리입니다 . 필요한만큼 많은 숫자가 출력됩니다.</target>
        </trans-unit>
        <trans-unit id="0cd16547614b7a560f339bea1486cfcd939578a6" translate="yes" xml:space="preserve">
          <source>One ubiquitous type of audio encoding is pulse-code modulation (PCM), which is simply a linear (proportional) representation of the sound waveform. With PCM, the number stored in each sample is proportional to the instantaneous amplitude of the sound pressure at that point in time. The numbers may be signed or unsigned integers or floats. Besides PCM, other encodings include mu-law and a-law, which are nonlinear mappings of the sound amplitude that are often used for recording speech.</source>
          <target state="translated">유비쿼터스 유형의 오디오 인코딩 중 하나는 PCM (Pulse-code Modulation)인데, 이는 단순히 사운드 파형의 선형 (비례) 표현입니다. PCM을 사용하면 각 샘플에 저장된 수는 해당 시점에서의 음압의 순간 진폭에 비례합니다. 숫자는 부호있는 또는 부호없는 정수 또는 부동 소수점 일 수 있습니다. PCM 이외에도 다른 인코딩에는 mu-law 및 a-law가 포함되는데, 이는 음성 녹음에 자주 사용되는 사운드 진폭의 비선형 매핑입니다.</target>
        </trans-unit>
        <trans-unit id="3598d0194f717700fa4233f24772048e40e95afb" translate="yes" xml:space="preserve">
          <source>One use of fields in application code is to retrieve fields for which there is no convenience method. For example, getting the day-of-month is common enough that there is a method on &lt;code&gt;LocalDate&lt;/code&gt; called &lt;code&gt;getDayOfMonth()&lt;/code&gt;. However for more unusual fields it is necessary to use the field. For example, &lt;code&gt;date.get(ChronoField.ALIGNED_WEEK_OF_MONTH)&lt;/code&gt;. The fields also provide access to the range of valid values.</source>
          <target state="translated">응용 프로그램 코드에서 필드를 사용하는 한 가지 방법은 편리한 방법이없는 필드를 검색하는 것입니다. 예를 들어, 월을 얻는 것은 &lt;code&gt;getDayOfMonth()&lt;/code&gt; 라는 &lt;code&gt;LocalDate&lt;/code&gt; 에 메소드가있을 정도로 일반적 입니다. 그러나 더 특이한 필드의 경우 필드를 사용해야합니다. 예를 들어, &lt;code&gt;date.get(ChronoField.ALIGNED_WEEK_OF_MONTH)&lt;/code&gt; 입니다. 이 필드는 유효한 값 범위에 대한 액세스도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c6b42b6a2c7883dd9d38448808af496269ed45d2" translate="yes" xml:space="preserve">
          <source>One variable declaration.</source>
          <target state="translated">하나의 변수 선언.</target>
        </trans-unit>
        <trans-unit id="2c9aac0e74bf3ee3345a30c777f39ab9746cdedf" translate="yes" xml:space="preserve">
          <source>One variable declaration. Corresponding to one</source>
          <target state="translated">하나의 변수 선언. 1 개에 해당</target>
        </trans-unit>
        <trans-unit id="420ef7124f50aa9676350c15080e64322160a61b" translate="yes" xml:space="preserve">
          <source>One version of the &lt;code&gt;format&lt;/code&gt; method in the various &lt;code&gt;Format&lt;/code&gt; classes requires a &lt;code&gt;FieldPosition&lt;/code&gt; object as an argument. You use this &lt;code&gt;format&lt;/code&gt; method to perform partial formatting or to get information about the formatted output (such as the position of a field).</source>
          <target state="translated">다양한 &lt;code&gt;Format&lt;/code&gt; 클래스 에서 &lt;code&gt;format&lt;/code&gt; 메소드 의 한 버전 에는 &lt;code&gt;FieldPosition&lt;/code&gt; 객체가 인수로 필요합니다 . 이 &lt;code&gt;format&lt;/code&gt; 방법을 사용하면 부분 형식화를 수행하거나 형식화 된 출력에 대한 정보 (예 : 필드 위치)를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="50b1da3385e66fa6c94789f8605e8cdd8e38d15b" translate="yes" xml:space="preserve">
          <source>One way is to specify the character set as a parameter of the MIME type. This will be established by a call to the &lt;a href=&quot;#setContentType(java.lang.String)&quot;&gt;&lt;code&gt;setContentType&lt;/code&gt;&lt;/a&gt; method. If the content is loaded by the &lt;a href=&quot;#setPage(java.net.URL)&quot;&gt;&lt;code&gt;setPage&lt;/code&gt;&lt;/a&gt; method the content type will have been set according to the specification of the URL. It the file is loaded directly, the content type would be expected to have been set prior to loading.</source>
          <target state="translated">한 가지 방법은 문자 세트를 MIME 유형의 매개 변수로 지정하는 것입니다. 이것은 &lt;a href=&quot;#setContentType(java.lang.String)&quot;&gt; &lt;code&gt;setContentType&lt;/code&gt; &lt;/a&gt; 메소드 에 대한 호출로 설정됩니다 . 콘텐츠가 &lt;a href=&quot;#setPage(java.net.URL)&quot;&gt; &lt;code&gt;setPage&lt;/code&gt; &lt;/a&gt; 메서드에 의해로드되는 경우 콘텐츠 유형은 URL 사양에 따라 설정됩니다. 파일이 직접로드되면로드하기 전에 콘텐츠 유형이 설정되었을 것입니다.</target>
        </trans-unit>
        <trans-unit id="adbab091f14eef40a566c8686a36cba189c185dd" translate="yes" xml:space="preserve">
          <source>One way to cause a set of threads to repeatedly perform actions for a given number of iterations is to override &lt;code&gt;onAdvance&lt;/code&gt;:</source>
          <target state="translated">주어진 수의 반복에 대해 일련의 스레드가 반복적으로 작업을 수행하게하는 한 가지 방법은 &lt;code&gt;onAdvance&lt;/code&gt; 를 재정의하는 것입니다 .</target>
        </trans-unit>
        <trans-unit id="a7180dc5427dce83f3a6bfd15c6d8cd14c1d7269" translate="yes" xml:space="preserve">
          <source>One with descriptor &lt;code&gt;&quot;name=GENERIC,descriptorType=notification,log=T,severity=6,displayName=jmx.modelmbean.generic&quot;&lt;/code&gt;</source>
          <target state="translated">디스크립터가 &lt;code&gt;&quot;name=GENERIC,descriptorType=notification,log=T,severity=6,displayName=jmx.modelmbean.generic&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="4ff6f3d315935e51afef097c55ff30e6b8dd66e9" translate="yes" xml:space="preserve">
          <source>One with descriptor name &quot;GENERIC&quot; and displayName &quot;jmx.modelmbean.generic&quot;</source>
          <target state="translated">디스크립터 이름이 &quot;GENERIC&quot;이고 displayName이 &quot;jmx.modelmbean.generic&quot;인 것</target>
        </trans-unit>
        <trans-unit id="5c2e2065b762e7263baf6479e9ae4df4f234f485" translate="yes" xml:space="preserve">
          <source>One would join a multicast group by first creating a MulticastSocket with the desired port, then invoking the &lt;code&gt;joinGroup(InetAddress groupAddr)&lt;/code&gt; method:</source>
          <target state="translated">먼저 원하는 포트로 MulticastSocket을 생성 한 다음 &lt;code&gt;joinGroup(InetAddress groupAddr)&lt;/code&gt; 메소드 를 호출하여 멀티 캐스트 그룹에 참여합니다 .</target>
        </trans-unit>
        <trans-unit id="de369079189fa781b1f07cb8ee88b598a0d385fc" translate="yes" xml:space="preserve">
          <source>One, but not both, of &lt;code&gt;rows&lt;/code&gt; and &lt;code&gt;cols&lt;/code&gt; can be zero, which means that any number of objects can be placed in a row or in a column.</source>
          <target state="translated">둘다는 아니지만 하나의 &lt;code&gt;rows&lt;/code&gt; 과 &lt;code&gt;cols&lt;/code&gt; 은 0이 될 수 있습니다. 즉, 행이나 열에 원하는 수의 개체를 배치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e0a0b25a766d339d62e6ac98175c791ad516997a" translate="yes" xml:space="preserve">
          <source>Only IPv4 networks have broadcast address therefore, in the case of an IPv6 network, &lt;code&gt;null&lt;/code&gt; will be returned.</source>
          <target state="translated">IPv4 네트워크 만 브로드 캐스트 주소를 가지므로 IPv6 네트워크의 경우 &lt;code&gt;null&lt;/code&gt; 이 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="62fd299298f7f7ca5a40abe88e824377c5523fc4" translate="yes" xml:space="preserve">
          <source>Only SEG_MOVETO, SEG_LINETO, and SEG_CLOSE point types are returned by the iterator.</source>
          <target state="translated">반복기에 의해 SEG_MOVETO, SEG_LINETO 및 SEG_CLOSE 포인트 유형 만 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="f78e8c45812d27eac9c65bc1520c62f3b43adfa7" translate="yes" xml:space="preserve">
          <source>Only SEG_MOVETO, SEG_LINETO, and SEG_CLOSE point types will be returned by the iterator.</source>
          <target state="translated">반복자는 SEG_MOVETO, SEG_LINETO 및 SEG_CLOSE 포인트 유형 만 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1d45daf40729b8c668479cc389535dbe22a2280a" translate="yes" xml:space="preserve">
          <source>Only a single 'u' character is allowed in a Unicode escape sequence.</source>
          <target state="translated">유니 코드 이스케이프 시퀀스에는 단일 'u'문자 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="233cd3e01418917aa25de83b86bb4eaf9a9fd92f" translate="yes" xml:space="preserve">
          <source>Only a single instance of a given leaf class (that is, the actual class returned by &lt;code&gt;getClass()&lt;/code&gt;, as opposed to any inherited classes or interfaces) may be registered. That is, suppose that the &lt;code&gt;com.mycompany.mypkg.GreenImageReaderProvider&lt;/code&gt; class is a subclass of &lt;code&gt;javax.imageio.spi.ImageReaderSpi&lt;/code&gt;. If a &lt;code&gt;GreenImageReaderProvider&lt;/code&gt; instance is registered, it will be stored in the category defined by the &lt;code&gt;ImageReaderSpi&lt;/code&gt; class. If a new instance of &lt;code&gt;GreenImageReaderProvider&lt;/code&gt; is registered, it will replace the previous instance. In practice, service provider objects are usually singletons so this behavior is appropriate.</source>
          <target state="translated">주어진 리프 클래스의 단일 인스턴스 (즉, 상속 된 클래스 또는 인터페이스와 반대로 &lt;code&gt;getClass()&lt;/code&gt; 반환하는 실제 클래스 ) 만 등록 할 수 있습니다. 즉, &lt;code&gt;com.mycompany.mypkg.GreenImageReaderProvider&lt;/code&gt; 클래스가 &lt;code&gt;javax.imageio.spi.ImageReaderSpi&lt;/code&gt; 의 하위 클래스 라고 가정합니다 . 경우 &lt;code&gt;GreenImageReaderProvider&lt;/code&gt; 의 인스턴스가 등록되며, 이것은에 의해 정의 된 카테고리에 저장 될 &lt;code&gt;ImageReaderSpi&lt;/code&gt; 클래스. &lt;code&gt;GreenImageReaderProvider&lt;/code&gt; 의 새 인스턴스 가 등록되면 이전 인스턴스를 대체합니다. 실제로 서비스 공급자 개체는 일반적으로 단일 항목이므로이 동작이 적절합니다.</target>
        </trans-unit>
        <trans-unit id="803dc8d5df618087742d7f194dd4083238edf49a" translate="yes" xml:space="preserve">
          <source>Only a single instance of a given leaf class (that is, the actual class returned by &lt;code&gt;getClass()&lt;/code&gt;, as opposed to any inherited classes or interfaces) may be registered. That is, suppose that the &lt;code&gt;com.mycompany.mypkg.GreenServiceProvider&lt;/code&gt; class implements the &lt;code&gt;com.mycompany.mypkg.MyService&lt;/code&gt; interface. If a &lt;code&gt;GreenServiceProvider&lt;/code&gt; instance is registered, it will be stored in the category defined by the &lt;code&gt;MyService&lt;/code&gt; class. If a new instance of &lt;code&gt;GreenServiceProvider&lt;/code&gt; is registered, it will replace the previous instance. In practice, service provider objects are usually singletons so this behavior is appropriate.</source>
          <target state="translated">주어진 리프 클래스의 단일 인스턴스 (즉, 상속 된 클래스 또는 인터페이스와 달리 &lt;code&gt;getClass()&lt;/code&gt; 에서 반환 한 실제 클래스 ) 만 등록 할 수 있습니다. 즉, &lt;code&gt;com.mycompany.mypkg.GreenServiceProvider&lt;/code&gt; 클래스가 &lt;code&gt;com.mycompany.mypkg.MyService&lt;/code&gt; 인터페이스를 구현 한다고 가정하십시오 . 경우 &lt;code&gt;GreenServiceProvider&lt;/code&gt; 인터페이스의 인스턴스가 등록되며, 이것은에 의해 정의 된 카테고리에 저장 될 &lt;code&gt;MyService&lt;/code&gt; 클래스. &lt;code&gt;GreenServiceProvider&lt;/code&gt; 의 새 인스턴스 가 등록되면 이전 인스턴스를 대체합니다. 실제로 서비스 공급자 개체는 일반적으로 싱글 톤이므로이 동작이 적합합니다.</target>
        </trans-unit>
        <trans-unit id="387f176b3fcddbfc7636123547b234757d8db4a9" translate="yes" xml:space="preserve">
          <source>Only a subset of units are accepted by this method. The unit must either have an &lt;a href=&quot;temporal/temporalunit#isDurationEstimated()&quot;&gt;exact duration&lt;/a&gt; or be &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;ChronoUnit.DAYS&lt;/code&gt;&lt;/a&gt; which is treated as 24 hours. Other units throw an exception.</source>
          <target state="translated">이 방법에서는 단위의 하위 집합 만 허용됩니다. 단위는 &lt;a href=&quot;temporal/temporalunit#isDurationEstimated()&quot;&gt;정확한 기간&lt;/a&gt; 이거나 24 시간으로 처리되는 &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;ChronoUnit.DAYS&lt;/code&gt; &lt;/a&gt; 여야합니다 . 다른 유닛은 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="3cab62ad1e2088792f04d14c3bb40f91b8e501f5" translate="yes" xml:space="preserve">
          <source>Only a subset of units are accepted by this method. The unit must either have an &lt;a href=&quot;temporal/temporalunit#isDurationEstimated--&quot;&gt;exact duration&lt;/a&gt; or be &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt;&lt;code&gt;ChronoUnit.DAYS&lt;/code&gt;&lt;/a&gt; which is treated as 24 hours. Other units throw an exception.</source>
          <target state="translated">이 방법에서는 단위의 하위 집합 만 허용됩니다. 단위는 &lt;a href=&quot;temporal/temporalunit#isDurationEstimated--&quot;&gt;정확한 지속 시간을&lt;/a&gt; 갖거나 &lt;a href=&quot;temporal/chronounit#DAYS&quot;&gt; &lt;code&gt;ChronoUnit.DAYS&lt;/code&gt; &lt;/a&gt; 24 시간으로 처리되는 . 다른 부대는 예외를 던진다.</target>
        </trans-unit>
        <trans-unit id="9fba32b397efebeb3bdc2e5dd24433d2624239ce" translate="yes" xml:space="preserve">
          <source>Only associations whose &lt;a href=&quot;associationchangenotification.assocchangeevent#COMM_UP&quot;&gt;&lt;code&gt;COMM_UP&lt;/code&gt;&lt;/a&gt; association change event has been received are included in the returned set of associations. Associations for which a &lt;a href=&quot;associationchangenotification.assocchangeevent#COMM_LOST&quot;&gt;&lt;code&gt;COMM_LOST&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;associationchangenotification.assocchangeevent#SHUTDOWN&quot;&gt;&lt;code&gt;SHUTDOWN&lt;/code&gt;&lt;/a&gt; association change event have been receive are removed from the set of associations.</source>
          <target state="translated">&lt;a href=&quot;associationchangenotification.assocchangeevent#COMM_UP&quot;&gt; &lt;code&gt;COMM_UP&lt;/code&gt; &lt;/a&gt; 연결 변경 이벤트가 수신 된 연결 만 반환 된 연결 집합에 포함됩니다. 하는 조합 &lt;a href=&quot;associationchangenotification.assocchangeevent#COMM_LOST&quot;&gt; &lt;code&gt;COMM_LOST&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;associationchangenotification.assocchangeevent#SHUTDOWN&quot;&gt; &lt;code&gt;SHUTDOWN&lt;/code&gt; &lt;/a&gt; 연관 변경 이벤트가 연결되었을들의 세트로부터 제거된다 받는다.</target>
        </trans-unit>
        <trans-unit id="2dc351739410362c064be668bf4ed861ddd938cb" translate="yes" xml:space="preserve">
          <source>Only attributes implementing the &lt;code&gt;Attribute&lt;/code&gt; interface can be added to the set.</source>
          <target state="translated">&lt;code&gt;Attribute&lt;/code&gt; 인터페이스를 구현하는 속성 만 세트에 추가 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a84502df02eb40c74486c2d698c85b33ffa15468" translate="yes" xml:space="preserve">
          <source>Only check the revocation status of end-entity certificates.</source>
          <target state="translated">최종 엔터티 인증서의 해지 상태 만 확인하십시오.</target>
        </trans-unit>
        <trans-unit id="178cb07ad6c341aac197f42243ada3ec40a238f5" translate="yes" xml:space="preserve">
          <source>Only closed paths and sub-paths are stored. &lt;code&gt;Area&lt;/code&gt; objects constructed from unclosed paths are implicitly closed during construction as if those paths had been filled by the &lt;code&gt;Graphics2D.fill&lt;/code&gt; method.</source>
          <target state="translated">닫힌 경로와 하위 경로 만 저장됩니다. 닫히지 않은 경로에서 생성 된 &lt;code&gt;Area&lt;/code&gt; 객체는 마치 &lt;code&gt;Graphics2D.fill&lt;/code&gt; 메서드에 의해 해당 경로가 채워진 것처럼 구성 중에 암시 적으로 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="efe893937d1c89d45f76e45f667de3d7e62496e9" translate="yes" xml:space="preserve">
          <source>Only column descriptions matching the catalog, schema, table and column name criteria are returned. They are ordered by &lt;code&gt;TABLE_CAT&lt;/code&gt;,&lt;code&gt;TABLE_SCHEM&lt;/code&gt;, &lt;code&gt;TABLE_NAME&lt;/code&gt; and &lt;code&gt;COLUMN_NAME&lt;/code&gt;.</source>
          <target state="translated">카탈로그, 스키마, 테이블 및 열 이름 기준과 일치하는 열 설명 만 반환됩니다. &lt;code&gt;TABLE_CAT&lt;/code&gt; , &lt;code&gt;TABLE_SCHEM&lt;/code&gt; , &lt;code&gt;TABLE_NAME&lt;/code&gt; 및 &lt;code&gt;COLUMN_NAME&lt;/code&gt; 에 의해 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="05c15bb3981e8030c7e2c23693b1ebef20c8f489" translate="yes" xml:space="preserve">
          <source>Only column descriptions matching the catalog, schema, table and column name criteria are returned. They are ordered by &lt;code&gt;TABLE_CAT&lt;/code&gt;,&lt;code&gt;TABLE_SCHEM&lt;/code&gt;, &lt;code&gt;TABLE_NAME&lt;/code&gt;, and &lt;code&gt;ORDINAL_POSITION&lt;/code&gt;.</source>
          <target state="translated">카탈로그, 스키마, 테이블 및 열 이름 기준과 일치하는 열 설명 만 반환됩니다. &lt;code&gt;TABLE_CAT&lt;/code&gt; , &lt;code&gt;TABLE_SCHEM&lt;/code&gt; , &lt;code&gt;TABLE_NAME&lt;/code&gt; 및 &lt;code&gt;ORDINAL_POSITION&lt;/code&gt; 에 의해 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="d9fd4ccab155dd21e0000b540e9c717cd1fc20fc" translate="yes" xml:space="preserve">
          <source>Only descriptions matching the schema, function and parameter name criteria are returned. They are ordered by &lt;code&gt;FUNCTION_CAT&lt;/code&gt;, &lt;code&gt;FUNCTION_SCHEM&lt;/code&gt;, &lt;code&gt;FUNCTION_NAME&lt;/code&gt; and &lt;code&gt;SPECIFIC_ NAME&lt;/code&gt;. Within this, the return value, if any, is first. Next are the parameter descriptions in call order. The column descriptions follow in column number order.</source>
          <target state="translated">스키마, 함수 및 매개 변수 이름 기준과 일치하는 설명 만 리턴됩니다. &lt;code&gt;FUNCTION_CAT&lt;/code&gt; , &lt;code&gt;FUNCTION_SCHEM&lt;/code&gt; , &lt;code&gt;FUNCTION_NAME&lt;/code&gt; 및 &lt;code&gt;SPECIFIC_ NAME&lt;/code&gt; 으로 정렬됩니다 . 이 내에서 반환 값 (있는 경우)이 첫 번째입니다. 다음은 호출 순서의 매개 변수 설명입니다. 열 설명은 열 번호 순서로 이어집니다.</target>
        </trans-unit>
        <trans-unit id="ec06522e7dbfb22a5424be19c8be97a403918d19" translate="yes" xml:space="preserve">
          <source>Only descriptions matching the schema, procedure and parameter name criteria are returned. They are ordered by PROCEDURE_CAT, PROCEDURE_SCHEM, PROCEDURE_NAME and SPECIFIC_NAME. Within this, the return value, if any, is first. Next are the parameter descriptions in call order. The column descriptions follow in column number order.</source>
          <target state="translated">스키마, 프로 시저 및 매개 변수 이름 기준과 일치하는 설명 만 리턴됩니다. PROCEDURE_CAT, PROCEDURE_SCHEM, PROCEDURE_NAME 및 SPECIFIC_NAME에서 주문합니다. 이 내에서 반환 값 (있는 경우)이 첫 번째입니다. 다음은 호출 순서의 매개 변수 설명입니다. 열 설명은 열 번호 순서에 따릅니다.</target>
        </trans-unit>
        <trans-unit id="7671b9481321265500543cd66375f32df4a713b3" translate="yes" xml:space="preserve">
          <source>Only developers who are defining new URL stream handler providers should need to make direct use of this package.</source>
          <target state="translated">새 URL 스트림 처리기 공급자를 정의하는 개발자 만이 패키지를 직접 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="6210b88213dae71ee06a58d40561401df5144d41" translate="yes" xml:space="preserve">
          <source>Only developers who are defining new attach providers should need to make direct use of this package.</source>
          <target state="translated">새 연결 공급자를 정의하는 개발자 만이 패키지를 직접 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="4f34d995382198a641549ccf2fd49911f98a0fa1" translate="yes" xml:space="preserve">
          <source>Only developers who are defining new charsets should need to make direct use of this package.</source>
          <target state="translated">새로운 캐릭터 셋을 정의하는 개발자 만이이 패키지를 직접 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="e7afd4651b2f4e613d0b0d8e43da109e411b5d79" translate="yes" xml:space="preserve">
          <source>Only developers who are defining new file system providers or file type detectors should need to make direct use of this package.</source>
          <target state="translated">새로운 파일 시스템 공급자 또는 파일 유형 감지기를 정의하는 개발자 만이 패키지를 직접 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="01aff1661f79a75c6f6e52e097a4148bc5f2a014" translate="yes" xml:space="preserve">
          <source>Only developers who are defining new selector providers or asynchronous channel providers should need to make direct use of this package.</source>
          <target state="translated">새로운 선택기 공급자 또는 비동기 채널 공급자를 정의하는 개발자 만이 패키지를 직접 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="20ea6af08e9baa46c05d74433505c291179589a2" translate="yes" xml:space="preserve">
          <source>Only objects of type &lt;code&gt;HijrahDate&lt;/code&gt; are compared, other types return false. To compare the dates of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, including dates in two different chronologies, use &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">&lt;code&gt;HijrahDate&lt;/code&gt; 유형의 오브젝트 만 비교되고 다른 유형은 false를 리턴합니다. 두 개의 다른 연대기의 날짜를 포함하여 두 개의 &lt;code&gt;TemporalAccessor&lt;/code&gt; 인스턴스 의 날짜를 비교하려면 &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 사용 하십시오. 를 비교 .</target>
        </trans-unit>
        <trans-unit id="4a182c1d511008ca3c9f3e3bd3ebed103584b5fd" translate="yes" xml:space="preserve">
          <source>Only objects of type &lt;code&gt;JapaneseDate&lt;/code&gt; are compared, other types return false. To compare the dates of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, including dates in two different chronologies, use &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">&lt;code&gt;JapaneseDate&lt;/code&gt; 유형의 객체 만 비교되고 다른 유형은 false를 반환합니다. 두 개의 다른 연대기 날짜를 포함하여 두 &lt;code&gt;TemporalAccessor&lt;/code&gt; 인스턴스 의 날짜를 비교하려면 &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 를 비교 자로 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e06bd4d0740cb134454f2ec5e222712642659b00" translate="yes" xml:space="preserve">
          <source>Only objects of type &lt;code&gt;LocalDate&lt;/code&gt; are compared, other types return false. To compare the dates of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, including dates in two different chronologies, use &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">&lt;code&gt;LocalDate&lt;/code&gt; 유형의 객체 만 비교되고 다른 유형은 false를 반환합니다. 두 개의 다른 연대기 날짜를 포함하여 두 &lt;code&gt;TemporalAccessor&lt;/code&gt; 인스턴스 의 날짜를 비교하려면 &lt;a href=&quot;temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 를 비교 자로 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="bcbeed77b05948419a2d059d38ba9af498058cce" translate="yes" xml:space="preserve">
          <source>Only objects of type &lt;code&gt;LocalTime&lt;/code&gt; are compared, other types return false. To compare the date of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, use &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">&lt;code&gt;LocalTime&lt;/code&gt; 유형의 객체 만 비교하고 다른 유형은 false를 반환합니다. 두 &lt;code&gt;TemporalAccessor&lt;/code&gt; 인스턴스 의 날짜를 비교하려면 &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt; &lt;/a&gt; 를 비교 자로 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c8baeee0f287a52ed6be2ba796df4867f466cf11" translate="yes" xml:space="preserve">
          <source>Only objects of type &lt;code&gt;MinguoDate&lt;/code&gt; are compared, other types return false. To compare the dates of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, including dates in two different chronologies, use &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">&lt;code&gt;MinguoDate&lt;/code&gt; 유형의 객체 만 비교되고 다른 유형은 false를 반환합니다. 두 개의 다른 연대기 날짜를 포함하여 두 &lt;code&gt;TemporalAccessor&lt;/code&gt; 인스턴스 의 날짜를 비교하려면 &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 를 비교 자로 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="3469990fc27d72ef60d78a42395da1d9f13d2b03" translate="yes" xml:space="preserve">
          <source>Only objects of type &lt;code&gt;OffsetTime&lt;/code&gt; are compared, other types return false. To compare the underlying local time of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, use &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 유형의 객체 만 비교하고 다른 유형은 false를 반환합니다. 두 &lt;code&gt;TemporalAccessor&lt;/code&gt; 인스턴스 의 기본 로컬 시간을 비교하려면 &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt; &lt;/a&gt; 를 비교 자로 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ee6d7deb60e11b89828a3d8754b5c98e7786bdcb" translate="yes" xml:space="preserve">
          <source>Only objects of type &lt;code&gt;ThaiBuddhistDate&lt;/code&gt; are compared, other types return false. To compare the dates of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, including dates in two different chronologies, use &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">&lt;code&gt;ThaiBuddhistDate&lt;/code&gt; 유형의 객체 만 비교하고 다른 유형은 false를 반환합니다. 두 날짜를 비교하려면 &lt;code&gt;TemporalAccessor&lt;/code&gt; 두 개의 다른 연대기 날짜를 포함하여 TemporalAccessor 인스턴스&lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 를 비교 자로 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="cbfd6aa06807271a5927c9d4b036b6918024ddc8" translate="yes" xml:space="preserve">
          <source>Only objects that support the java.io.Serializable interface can be written to streams. The class of each serializable object is encoded including the class name and signature of the class, the values of the object's fields and arrays, and the closure of any other objects referenced from the initial objects.</source>
          <target state="translated">java.io.Serializable 인터페이스를 지원하는 객체 만 스트림에 쓸 수 있습니다. 각 직렬화 가능 객체의 클래스는 클래스 이름 및 클래스의 서명, 객체 필드 및 배열의 ​​값, 초기 객체에서 참조 된 다른 객체의 폐쇄를 포함하여 인코딩됩니다.</target>
        </trans-unit>
        <trans-unit id="bd8ced23d6b31657db08696f9b4dab409d97489b" translate="yes" xml:space="preserve">
          <source>Only objects that support the java.io.Serializable or java.io.Externalizable interface can be read from streams.</source>
          <target state="translated">java.io.Serializable 또는 java.io.Externalizable 인터페이스를 지원하는 오브젝트 만 스트림에서 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7459c7fbc2d84b723f18c286ea3e8195ebbad2fe" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per &lt;code&gt;TabPane&lt;/code&gt; instance since the event's only (read-only) state is the source property.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성 &lt;code&gt;TabPane&lt;/code&gt; 인스턴스 당 하나의 &lt;code&gt;ChangeEvent&lt;/code&gt; 만 필요 합니다.</target>
        </trans-unit>
        <trans-unit id="8057159b92de5f755d97a9049aeaa8dfcd807438" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per &lt;code&gt;TabPane&lt;/code&gt; instance since the event's only (read-only) state is the source property. The source of events generated here is always &quot;this&quot;.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성 &lt;code&gt;TabPane&lt;/code&gt; 인스턴스 당 하나의 &lt;code&gt;ChangeEvent&lt;/code&gt; 만 필요 합니다. 여기에서 생성되는 이벤트의 소스는 항상 &quot;this&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="3168b0f2cf46c9fede633db91b22a8f7c639a24c" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per button instance since the event's only state is the source property.</source>
          <target state="translated">이벤트의 유일한 상태는 소스 속성 &lt;code&gt;ChangeEvent&lt;/code&gt; 버튼 인스턴스 당 하나의 ChangeEvent 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="eb0489d0a4517543b8b0ad364c18467ac40613a2" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per button instance since the event's only state is the source property. The source of events generated is always &quot;this&quot;.</source>
          <target state="translated">이벤트의 유일한 상태는 소스 속성 &lt;code&gt;ChangeEvent&lt;/code&gt; 버튼 인스턴스 당 하나의 ChangeEvent 만 필요합니다. 생성 된 이벤트의 소스는 항상 &quot;this&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="b65ebb729202ad258bac716293dd2bb8a9cfcfe4" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per button model instance since the event's only state is the source property.</source>
          <target state="translated">이벤트의 유일한 상태는 소스 속성 &lt;code&gt;ChangeEvent&lt;/code&gt; 버튼 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="bbb2467994e89105b0a3aaef244c5af2990045b7" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per button model instance since the event's only state is the source property. The source of events generated is always &quot;this&quot;.</source>
          <target state="translated">이벤트의 유일한 상태는 소스 속성 &lt;code&gt;ChangeEvent&lt;/code&gt; 버튼 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다. 생성 된 이벤트의 소스는 항상 &quot;this&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="593339ea7af561cfcdb76a76eb1f015dc8fd5b27" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per instance since the event's only interesting property is the immutable source, which is the progress bar.</source>
          <target state="translated">이벤트의 유일한 흥미로운 속성은 진행률 표시 줄인 변경 불가능한 소스 &lt;code&gt;ChangeEvent&lt;/code&gt; 인스턴스 당 하나의 ChangeEvent 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="275e7440df82181b937f21f46814a8aa9ff66d2c" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per instance since the event's only interesting property is the immutable source, which is the progress bar. The event is lazily created the first time that an event notification is fired.</source>
          <target state="translated">이벤트의 유일한 흥미로운 속성은 진행률 표시 줄인 변경 불가능한 소스 &lt;code&gt;ChangeEvent&lt;/code&gt; 인스턴스 당 하나의 ChangeEvent 만 필요합니다. 이벤트 알림이 처음 발생하면 이벤트가 느리게 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="434b0452807b4c7b86ff363e585e0b82c14386d6" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per model instance since the event's only (read-only) state is the source property.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성 &lt;code&gt;ChangeEvent&lt;/code&gt; 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="3ed8527b45a9d0c287333c4f0cccab667df50d45" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per model instance since the event's only (read-only) state is the source property. The source of events generated here is always &quot;this&quot;.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성 &lt;code&gt;ChangeEvent&lt;/code&gt; 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다. 여기에서 생성되는 이벤트의 소스는 항상 &quot;this&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="992c7f8b9f1b15021330becee36ce0c29b984e31" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per slider instance since the event's only (read-only) state is the source property.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성이기 때문에 슬라이더 인스턴스 당 하나의 &lt;code&gt;ChangeEvent&lt;/code&gt; 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="32b9ed054f4c3cdb7581827417cb5d70e12d8142" translate="yes" xml:space="preserve">
          <source>Only one &lt;code&gt;ChangeEvent&lt;/code&gt; is needed per slider instance since the event's only (read-only) state is the source property. The source of events generated here is always &quot;this&quot;. The event is lazily created the first time that an event notification is fired.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성이기 때문에 슬라이더 인스턴스 당 하나의 &lt;code&gt;ChangeEvent&lt;/code&gt; 만 필요합니다. 여기에서 생성되는 이벤트의 소스는 항상 &quot;this&quot;입니다. 이벤트 알림이 처음 발생하면 이벤트가 느리게 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="3e12a96607cd013d9f8147ba67ff7990b29390c9" translate="yes" xml:space="preserve">
          <source>Only one ChangeEvent is needed per button model instance since the event's only state is the source property.</source>
          <target state="translated">이벤트의 유일한 상태가 소스 속성이기 때문에 버튼 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="1b90c32779ae829c48044bb900094011a99fa226" translate="yes" xml:space="preserve">
          <source>Only one ChangeEvent is needed per button model instance since the event's only state is the source property. The source of events generated is always &quot;this&quot;.</source>
          <target state="translated">이벤트의 유일한 상태가 소스 속성이기 때문에 버튼 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다. 생성 된 이벤트의 소스는 항상 &quot;this&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="60deea2438d93dac9226752fea7c01cadbde96e7" translate="yes" xml:space="preserve">
          <source>Only one ChangeEvent is needed per model instance since the event's only (read-only) state is the source property.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성이므로 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="296d2052fc8d8fc346aeed4dc35586037602ae89" translate="yes" xml:space="preserve">
          <source>Only one ChangeEvent is needed per model instance since the event's only (read-only) state is the source property. The source of events generated here is always &quot;this&quot;.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성이므로 모델 인스턴스 당 하나의 ChangeEvent 만 필요합니다. 여기에서 생성되는 이벤트의 소스는 항상 &quot;this&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="b3f07bd3e19903d9c9942a0fbde0a1d311141993" translate="yes" xml:space="preserve">
          <source>Only one ModelChangeEvent is needed per model instance since the event's only (read-only) state is the source property.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성이기 때문에 모델 인스턴스 당 하나의 ModelChangeEvent 만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="fd8cca6a8389381bc55577ed89707e87c6c6818a" translate="yes" xml:space="preserve">
          <source>Only one ModelChangeEvent is needed per model instance since the event's only (read-only) state is the source property. The source of events generated here is always &quot;this&quot;.</source>
          <target state="translated">이벤트의 유일한 (읽기 전용) 상태가 소스 속성이기 때문에 모델 인스턴스 당 하나의 ModelChangeEvent 만 필요합니다. 여기에서 생성되는 이벤트의 소스는 항상 &quot;this&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="cb6ee051a22285ae526f0392247bc8a5f904ef63" translate="yes" xml:space="preserve">
          <source>Only one of ' ' or '-' may be used to separate fields in the input. The identified separator is the one closest to the end of the string which separates a valid pointsize, or a valid style name from the rest of the string. Null (empty) pointsize and style fields are treated as valid fields with the default value for that field.</source>
          <target state="translated">''또는 '-'중 하나만 입력에서 필드를 구분하는 데 사용할 수 있습니다. 식별 된 구분 기호는 유효한 pointize 또는 나머지 문자열과 유효한 스타일 이름을 구분하는 문자열의 끝에 가장 가까운 구분 기호입니다. Null (빈) 포인트 크기 및 스타일 필드는 해당 필드의 기본값을 사용하여 유효한 필드로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="23cbc7b16a794f23f4860b402947cbbe5197b161" translate="yes" xml:space="preserve">
          <source>Only one pending step request is allowed per thread.</source>
          <target state="translated">스레드 당 하나의 보류 단계 요청 만 허용됩니다.</target>
        </trans-unit>
        <trans-unit id="fad9156c861080b4759730d96539f2bfceeee01c" translate="yes" xml:space="preserve">
          <source>Only one read operation upon a readable channel may be in progress at any given time. If one thread initiates a read operation upon a channel then any other thread that attempts to initiate another read operation will block until the first operation is complete. Whether or not other kinds of I/O operations may proceed concurrently with a read operation depends upon the type of the channel.</source>
          <target state="translated">판독 가능한 채널에 대한 하나의 판독 동작 만이 임의의 주어진 시간에 진행될 수있다. 한 스레드가 채널에서 읽기 작업을 시작하면 다른 읽기 작업을 시작하려는 다른 스레드는 첫 번째 작업이 완료 될 때까지 차단됩니다. 다른 종류의 I / O 작업이 읽기 작업과 동시에 진행될 수 있는지의 여부는 채널 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="2b0189be4c9a305e8c87522a13dff830764b5c3b" translate="yes" xml:space="preserve">
          <source>Only one thread at a time can own an object's monitor.</source>
          <target state="translated">한 번에 하나의 스레드 만 객체의 모니터를 소유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="15d6ee825e792b1c3637ce3a662de8604a88eb1a" translate="yes" xml:space="preserve">
          <source>Only one write operation upon a writable channel may be in progress at any given time. If one thread initiates a write operation upon a channel then any other thread that attempts to initiate another write operation will block until the first operation is complete. Whether or not other kinds of I/O operations may proceed concurrently with a write operation depends upon the type of the channel.</source>
          <target state="translated">쓰기 가능한 채널에 대해 한 번에 하나의 쓰기 작업 만 진행될 수 있습니다. 한 스레드가 채널에서 쓰기 작업을 시작하면 다른 쓰기 작업을 시작하려는 다른 스레드는 첫 번째 작업이 완료 될 때까지 차단됩니다. 다른 종류의 I / O 작업이 쓰기 작업과 동시에 진행될 수 있는지의 여부는 채널 유형에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="4605166254cce36bbab5368613760c47134428c1" translate="yes" xml:space="preserve">
          <source>Only preliminary compilation is performed, sufficient to build the &lt;code&gt;Snippet&lt;/code&gt;. Snippets known to be erroneous, are returned as &lt;a href=&quot;erroneoussnippet&quot;&gt;&lt;code&gt;ErroneousSnippet&lt;/code&gt;&lt;/a&gt;, other snippets may or may not be in error.</source>
          <target state="translated">&lt;code&gt;Snippet&lt;/code&gt; 을 빌드하기에 충분한 예비 컴파일 만 수행 됩니다. 오류가있는 것으로 알려진 스 니펫은 &lt;a href=&quot;erroneoussnippet&quot;&gt; &lt;code&gt;ErroneousSnippet&lt;/code&gt; &lt;/a&gt; 으로 반환되며 다른 스 니펫은 오류 일 수도 있고 아닐 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="91c5a6481d7b0b2a0e505b17f9b693896f18290e" translate="yes" xml:space="preserve">
          <source>Only privileges matching the column name criteria are returned. They are ordered by COLUMN_NAME and PRIVILEGE.</source>
          <target state="translated">열 이름 기준과 일치하는 권한 만 반환됩니다. COLUMN_NAME 및 PRIVILEGE에서 주문합니다.</target>
        </trans-unit>
        <trans-unit id="6a58773429797ed196babe9a2081ddf174ea9bbb" translate="yes" xml:space="preserve">
          <source>Only privileges matching the schema and table name criteria are returned. They are ordered by &lt;code&gt;TABLE_CAT&lt;/code&gt;, &lt;code&gt;TABLE_SCHEM&lt;/code&gt;, &lt;code&gt;TABLE_NAME&lt;/code&gt;, and &lt;code&gt;PRIVILEGE&lt;/code&gt;.</source>
          <target state="translated">스키마 및 테이블 이름 기준과 일치하는 권한 만 반환됩니다. &lt;code&gt;TABLE_CAT&lt;/code&gt; , &lt;code&gt;TABLE_SCHEM&lt;/code&gt; , &lt;code&gt;TABLE_NAME&lt;/code&gt; 및 &lt;code&gt;PRIVILEGE&lt;/code&gt; 로 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="e09a6b8d6d534071e4a701aec07f2916291a280c" translate="yes" xml:space="preserve">
          <source>Only procedure descriptions matching the schema and procedure name criteria are returned. They are ordered by &lt;code&gt;PROCEDURE_CAT&lt;/code&gt;, &lt;code&gt;PROCEDURE_SCHEM&lt;/code&gt;, &lt;code&gt;PROCEDURE_NAME&lt;/code&gt; and &lt;code&gt;SPECIFIC_ NAME&lt;/code&gt;.</source>
          <target state="translated">스키마 및 프로 시저 이름 기준과 일치하는 프로 시저 설명 만 리턴됩니다. &lt;code&gt;PROCEDURE_CAT&lt;/code&gt; , &lt;code&gt;PROCEDURE_SCHEM&lt;/code&gt; , &lt;code&gt;PROCEDURE_NAME&lt;/code&gt; 및 &lt;code&gt;SPECIFIC_ NAME&lt;/code&gt; 의해 주문됩니다 .</target>
        </trans-unit>
        <trans-unit id="9b04015fd2a3dce622ec5460429f28c33af32e3b" translate="yes" xml:space="preserve">
          <source>Only supertable information for tables matching the catalog, schema and table name are returned. The table name parameter may be a fully- qualified name, in which case, the catalog and schemaPattern parameters are ignored. If a table does not have a super table, it is not listed here. Supertables have to be defined in the same catalog and schema as the sub tables. Therefore, the type description does not need to include this information for the supertable.</source>
          <target state="translated">카탈로그, 스키마 및 테이블 이름과 일치하는 테이블에 대한 상위 테이블 정보 만 리턴됩니다. 테이블 이름 매개 변수는 완전한 이름 일 수 있습니다.이 경우 catalog 및 schemaPattern 매개 변수는 무시됩니다. 테이블에 수퍼 테이블이 없으면 여기에 나열되지 않습니다. 수퍼 테이블은 하위 테이블과 동일한 카탈로그 및 스키마에 정의되어야합니다. 따라서 유형 설명에 수퍼 테이블에 대한이 정보를 포함 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="3b1983ee974a3067e1ce27d81ad64d8d120d3d82" translate="yes" xml:space="preserve">
          <source>Only supertype information for UDTs matching the catalog, schema, and type name is returned. The type name parameter may be a fully-qualified name. When the UDT name supplied is a fully-qualified name, the catalog and schemaPattern parameters are ignored.</source>
          <target state="translated">카탈로그, 스키마 및 유형 이름과 일치하는 UDT에 대한 상위 유형 정보 만 리턴됩니다. 유형 이름 매개 변수는 완전한 이름 일 수 있습니다. 제공된 UDT 이름이 완전한 이름 인 경우 catalog 및 schemaPattern 매개 변수는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="31763e63ef555e91c62e2d5f9ae8b04b8556f86b" translate="yes" xml:space="preserve">
          <source>Only system and user function descriptions matching the schema and function name criteria are returned. They are ordered by &lt;code&gt;FUNCTION_CAT&lt;/code&gt;, &lt;code&gt;FUNCTION_SCHEM&lt;/code&gt;, &lt;code&gt;FUNCTION_NAME&lt;/code&gt; and &lt;code&gt;SPECIFIC_ NAME&lt;/code&gt;.</source>
          <target state="translated">스키마 및 함수 이름 기준과 일치하는 시스템 및 사용자 함수 설명 만 반환됩니다. &lt;code&gt;FUNCTION_CAT&lt;/code&gt; , &lt;code&gt;FUNCTION_SCHEM&lt;/code&gt; , &lt;code&gt;FUNCTION_NAME&lt;/code&gt; 및 &lt;code&gt;SPECIFIC_ NAME&lt;/code&gt; 으로 정렬됩니다 .</target>
        </trans-unit>
        <trans-unit id="bce72424ead74f1f1a0bce058d42ecee49eeb41f" translate="yes" xml:space="preserve">
          <source>Only the 1-byte, 2-byte, and 3-byte formats are used.</source>
          <target state="translated">1 바이트, 2 바이트 및 3 바이트 형식 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5d428d239390d6bafb20d2336f575fad83a558e2" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;EntityReference&lt;/code&gt; itself is copied, even if a &lt;code&gt;deep&lt;/code&gt; import is requested, since the source and destination documents might have defined the entity differently. If the document being imported into provides a definition for this entity name, its value is assigned.</source>
          <target state="translated">만 &lt;code&gt;EntityReference&lt;/code&gt; 자체는 경우에도 복사 &lt;code&gt;deep&lt;/code&gt; 소스 및 대상 문서로 엔티티의 정의가 다른 수 있기 때문에 수입이 요청됩니다. 가져올 문서가이 엔티티 이름에 대한 정의를 제공하는 경우 해당 값이 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="ab456a75a5e5f0e1d2f46cfe0e00c4053ff88912" translate="yes" xml:space="preserve">
          <source>Only the &lt;code&gt;EntityReference&lt;/code&gt; node itself is adopted, the descendants are discarded, since the source and destination documents might have defined the entity differently. If the document being imported into provides a definition for this entity name, its value is assigned.</source>
          <target state="translated">&lt;code&gt;EntityReference&lt;/code&gt; 노드 자체 만 채택되고 소스 및 대상 문서가 엔티티를 다르게 정의했을 수 있으므로 하위 항목은 삭제됩니다. 가져올 문서가이 엔티티 이름에 대한 정의를 제공하는 경우 해당 값이 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="aaecf9b8e261b11c90ba5636bd74c87e542b2a22" translate="yes" xml:space="preserve">
          <source>Only the activator can</source>
          <target state="translated">활성화 자만</target>
        </trans-unit>
        <trans-unit id="3b327c787d12188e4bf3e1ae2baec07499233edc" translate="yes" xml:space="preserve">
          <source>Only the effective (first) declaration for an attribute will be reported. The type will be one of the strings &quot;CDATA&quot;, &quot;ID&quot;, &quot;IDREF&quot;, &quot;IDREFS&quot;, &quot;NMTOKEN&quot;, &quot;NMTOKENS&quot;, &quot;ENTITY&quot;, &quot;ENTITIES&quot;, a parenthesized token group with the separator &quot;|&quot; and all whitespace removed, or the word &quot;NOTATION&quot; followed by a space followed by a parenthesized token group with all whitespace removed.</source>
          <target state="translated">속성에 대한 유효 (첫 번째) 선언 만보고됩니다. 유형은 문자열 &quot;CDATA&quot;, &quot;ID&quot;, &quot;IDREF&quot;, &quot;IDREFS&quot;, &quot;NMTOKEN&quot;, &quot;NMTOKENS&quot;, &quot;ENTITY&quot;, &quot;ENTITIES&quot;, 구분 기호 &quot;|&quot;가있는 괄호로 묶인 토큰 그룹 중 하나입니다. 그리고 모든 공백이 제거되거나 단어 &quot;NOTATION&quot;다음에 공백이 뒤 따르고 모든 공백이 제거 된 괄호로 묶인 토큰 그룹이 이어집니다.</target>
        </trans-unit>
        <trans-unit id="b1013799e513f7fc6de01d287bd2609e192de73d" translate="yes" xml:space="preserve">
          <source>Only the effective (first) declaration for each entity will be reported.</source>
          <target state="translated">각 엔티티에 대한 유효 (첫 번째) 선언 만보고됩니다.</target>
        </trans-unit>
        <trans-unit id="c4778fbd93207afe06ef7b352152980226f63783" translate="yes" xml:space="preserve">
          <source>Only the effective (first) declaration for each entity will be reported. All parameter entities in the value will be expanded, but general entities will not.</source>
          <target state="translated">각 엔티티에 대한 유효 (첫 번째) 선언 만보고됩니다. 값의 모든 매개 변수 엔티티가 확장되지만 일반 엔티티는 확장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4b3062744036cd4ed4a663c4c9dbf3bb6db97cf8" translate="yes" xml:space="preserve">
          <source>Only the first instance of a particular key and/or trust manager implementation type in the array is used. (For example, only the first javax.net.ssl.X509KeyManager in the array will be used.)</source>
          <target state="translated">배열에서 특정 키 및 / 또는 트러스트 관리자 구현 유형의 첫 번째 인스턴스 만 사용됩니다. 예를 들어, 배열의 첫 번째 javax.net.ssl.X509KeyManager 만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1d7819b837ca1fc613aa431474d4c6fdc4eedbea" translate="yes" xml:space="preserve">
          <source>Only the first of these files to be located will be consulted. The requested service providers are specified by setting the &lt;code&gt;assistive_technologies=&lt;/code&gt; property. A single provider or a comma separated list of providers can be specified.</source>
          <target state="translated">이러한 파일 중 첫 번째 파일 만 참조됩니다. 요청 된 서비스 공급자는 &lt;code&gt;assistive_technologies=&lt;/code&gt; 속성 을 설정하여 지정됩니다 . 단일 공급자 또는 쉼표로 구분 된 공급자 목록을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="114744f803cb7992a75094cfc002f70edc71732f" translate="yes" xml:space="preserve">
          <source>Only the identity of the class of an Externalizable instance is written in the serialization stream and it is the responsibility of the class to save and restore the contents of its instances.</source>
          <target state="translated">Serializable 스트림에는 Externalizable 인스턴스 클래스의 ID 만 작성되며 인스턴스의 컨텐츠를 저장하고 복원하는 것은 클래스의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="8b5c9467d0d1e867b31e81627b601f1cac7da50a" translate="yes" xml:space="preserve">
          <source>Only the identity of the class of an Externalizable instance is written in the serialization stream and it is the responsibility of the class to save and restore the contents of its instances. The writeExternal and readExternal methods of the Externalizable interface are implemented by a class to give the class complete control over the format and contents of the stream for an object and its supertypes. These methods must explicitly coordinate with the supertype to save its state. These methods supersede customized implementations of writeObject and readObject methods.</source>
          <target state="translated">Serializable 스트림에는 Externalizable 인스턴스 클래스의 ID 만 작성되며 인스턴스의 컨텐츠를 저장하고 복원하는 것은 클래스의 책임입니다. Externalizable 인터페이스의 writeExternal 및 readExternal 메소드는 클래스에 의해 구현되어 객체와 그 슈퍼 타입에 대한 스트림의 형식과 내용을 클래스에 완전히 제어 할 수 있습니다. 이러한 메소드는 상태를 저장하기 위해 수퍼 타입과 명시 적으로 조정해야합니다. 이러한 메소드는 writeObject 및 readObject 메소드의 사용자 정의 된 구현을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="b3747fa9358f41943736ce9d4cfe794bfb48db60" translate="yes" xml:space="preserve">
          <source>Only the input method's primary locales should be returned. For example, if a Japanese input method also has a pass-through mode for Roman characters, typically still only Japanese would be returned. Thus, the list of locales returned is typically a subset of the locales for which the corresponding input method's implementation of &lt;a href=&quot;inputmethod#setLocale(java.util.Locale)&quot;&gt;&lt;code&gt;InputMethod.setLocale(java.util.Locale)&lt;/code&gt;&lt;/a&gt; returns true.</source>
          <target state="translated">입력 방법의 기본 로케일 만 반환되어야합니다. 예를 들어, 일본어 입력 방법에도 로마 문자에 대한 통과 모드가있는 경우 일반적으로 여전히 일본어 만 반환됩니다. 따라서 리턴 된 로케일 목록은 일반적으로 해당 입력 메소드의 &lt;a href=&quot;inputmethod#setLocale(java.util.Locale)&quot;&gt; &lt;code&gt;InputMethod.setLocale(java.util.Locale)&lt;/code&gt; &lt;/a&gt; 구현이 true를 리턴 하는 로케일의 서브 세트입니다 .</target>
        </trans-unit>
        <trans-unit id="cdcddd89fc55c9cff408c86eee23b85a6d46332d" translate="yes" xml:space="preserve">
          <source>Only the listeners in this context are returned.</source>
          <target state="translated">이 컨텍스트의 리스너 만 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="5f02735a28965b171ccbc2feaeb0e44568746fd4" translate="yes" xml:space="preserve">
          <source>Only the low eight bits of each character in the string are used by this class.</source>
          <target state="translated">문자열에서 각 문자의 하위 8 비트 만이 클래스에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="ee5f844ad1ca78a9d279aeeeea5717b244e0fde3" translate="yes" xml:space="preserve">
          <source>Only the registry should call this method.</source>
          <target state="translated">레지스트리 만이 메소드를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="6586a77d9bef8ac9ceb03c3fbd05a92da0156e91" translate="yes" xml:space="preserve">
          <source>Only the return value of &lt;code&gt;false&lt;/code&gt; for the present method actually indicates that the given state is not supported. If the method returns &lt;code&gt;true&lt;/code&gt; the given state may still be unsupported and/or unavailable for a particular frame.</source>
          <target state="translated">현재 메서드에 대한 반환 값인 &lt;code&gt;false&lt;/code&gt; 만 실제로 주어진 상태가 지원되지 않음을 나타냅니다. 메서드가 &lt;code&gt;true&lt;/code&gt; 를 반환 하면 주어진 상태가 여전히 지원되지 않거나 특정 프레임에 대해 사용 불가능할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94c7d6e243c18e673a20692f5c1a4c08f4c5d9ac" translate="yes" xml:space="preserve">
          <source>Only types matching the catalog, schema, type name and type criteria are returned. They are ordered by &lt;code&gt;DATA_TYPE&lt;/code&gt;, &lt;code&gt;TYPE_CAT&lt;/code&gt;, &lt;code&gt;TYPE_SCHEM&lt;/code&gt; and &lt;code&gt;TYPE_NAME&lt;/code&gt;. The type name parameter may be a fully-qualified name. In this case, the catalog and schemaPattern parameters are ignored.</source>
          <target state="translated">카탈로그, 스키마, 유형 이름 및 유형 기준과 일치하는 유형 만 리턴됩니다. &lt;code&gt;DATA_TYPE&lt;/code&gt; , &lt;code&gt;TYPE_CAT&lt;/code&gt; , &lt;code&gt;TYPE_SCHEM&lt;/code&gt; 및 &lt;code&gt;TYPE_NAME&lt;/code&gt; 으로 정렬됩니다 . 유형 이름 매개 변수는 완전한 이름 일 수 있습니다. 이 경우 catalog 및 schemaPattern 매개 변수는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="e11a7dbd60ca0d6df7054c98875ef065ab2d4690" translate="yes" xml:space="preserve">
          <source>Only with other AccessWatchpointEvents for the same field access:</source>
          <target state="translated">동일한 필드 액세스에 대한 다른 AccessWatchpointEvents 만 사용 :</target>
        </trans-unit>
        <trans-unit id="af3fdfb3cf97e0b7a27729d78e4dc60959bed4a4" translate="yes" xml:space="preserve">
          <source>Only with other ClassPrepareEvents for the same class:</source>
          <target state="translated">동일한 클래스에 대한 다른 ClassPrepareEvent 와만 함께 :</target>
        </trans-unit>
        <trans-unit id="ddfdb81c8b1c6b4672121a3a8bbf191ae3ff0be6" translate="yes" xml:space="preserve">
          <source>Only with other ClassUnloadEvents for the same class:</source>
          <target state="translated">동일한 클래스에 대한 다른 ClassUnloadEvents 와만 함께 :</target>
        </trans-unit>
        <trans-unit id="8d570c1fbfec2d1ae702da5a9eecd8c30049c1b4" translate="yes" xml:space="preserve">
          <source>Only with other ExceptionEvents for the same exception occurrance:</source>
          <target state="translated">동일한 예외 발생에 대한 다른 ExceptionEvent 와만 함께 :</target>
        </trans-unit>
        <trans-unit id="a20a8cb88bff59e7c7bebceeb921c6c1cb460e41" translate="yes" xml:space="preserve">
          <source>Only with other MethodExitEvents for the same method exit:</source>
          <target state="translated">동일한 메소드 종료에 대한 다른 MethodExitEvent 와만 함께 :</target>
        </trans-unit>
        <trans-unit id="a6f1bd35c834c0fd18f6a2c09e3e6c16daead822" translate="yes" xml:space="preserve">
          <source>Only with other ModificationWatchpointEvents for the same field modification:</source>
          <target state="translated">동일한 필드 수정에 대한 다른 ModificationWatchpointEvents 와만 함께 :</target>
        </trans-unit>
        <trans-unit id="28075679c3ac9404bccb6e3fc296ecb3f755bfc5" translate="yes" xml:space="preserve">
          <source>Only with other Monitor contended enter events for the same monitor object:</source>
          <target state="translated">동일한 모니터 개체에 대한 다른 모니터 경합 입력 이벤트에서만 :</target>
        </trans-unit>
        <trans-unit id="60d419f7efff8a4e83b481d47d9f466f1b61c657" translate="yes" xml:space="preserve">
          <source>Only with other Monitor contended entered events for the same monitor object:</source>
          <target state="translated">동일한 모니터 개체에 대해 다른 모니터 경합 입력 이벤트에서만 :</target>
        </trans-unit>
        <trans-unit id="0b82469859691b9b1a185913650c8e3e51ffddec" translate="yes" xml:space="preserve">
          <source>Only with other Monitor wait events for the same monitor object:</source>
          <target state="translated">동일한 모니터 개체에 대한 다른 모니터 대기 이벤트에서만 :</target>
        </trans-unit>
        <trans-unit id="b5b515387f557d0409e3efdeef5f45fb3f3364ad" translate="yes" xml:space="preserve">
          <source>Only with other Monitor waited events for the same monitor object:</source>
          <target state="translated">동일한 모니터 개체에 대한 다른 모니터 대기 이벤트 만 :</target>
        </trans-unit>
        <trans-unit id="67967b59c03056463ec18229538e574a07be3bd4" translate="yes" xml:space="preserve">
          <source>Only with other ThreadDeathEvents for the same thread:</source>
          <target state="translated">동일한 스레드에 대한 다른 ThreadDeathEvent 와만 함께 :</target>
        </trans-unit>
        <trans-unit id="f47d14ab37f3e93ddd4b1e273f7e13e4d6904b90" translate="yes" xml:space="preserve">
          <source>Only with other ThreadStartEvents for the same thread:</source>
          <target state="translated">동일한 스레드에 대한 다른 ThreadStartEvent 와만 함께 :</target>
        </trans-unit>
        <trans-unit id="a256ce87ae4889889082175ee64803d4cc73ccf6" translate="yes" xml:space="preserve">
          <source>Only with other VMDeathEvents:</source>
          <target state="translated">다른 VMDeathEvent 와만 함께 :</target>
        </trans-unit>
        <trans-unit id="077310a323c642947cfd48c0503b842d50ebb3e5" translate="yes" xml:space="preserve">
          <source>Only with other members of this group, at the same location and in the same thread:</source>
          <target state="translated">이 그룹의 다른 구성원과 같은 위치 및 같은 스레드에서만 :</target>
        </trans-unit>
        <trans-unit id="82b6629478f30e84ad5f1c1efad9f9e824899e56" translate="yes" xml:space="preserve">
          <source>Open MBeans</source>
          <target state="translated">열린 MBean</target>
        </trans-unit>
        <trans-unit id="15f764816155e4beaf823dad5bdf444bef9596f6" translate="yes" xml:space="preserve">
          <source>Open a document stream for writing. If a document exists in the target, this method clears it.</source>
          <target state="translated">쓰기를 위해 문서 스트림을 엽니 다. 대상에 문서가있는 경우이 메서드는 문서를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="faa0d3a74c6c77581733f9bd7080bc8305ef021e" translate="yes" xml:space="preserve">
          <source>Open an existing file as a Zip file system</source>
          <target state="translated">기존 파일을 Zip 파일 시스템으로 열기</target>
        </trans-unit>
        <trans-unit id="981f4196248a97f15ee35a9882e5941953bd9d8a" translate="yes" xml:space="preserve">
          <source>Open button mnemonic</source>
          <target state="translated">열기 버튼 니모닉</target>
        </trans-unit>
        <trans-unit id="06281825f2b9b89e9bcd588063e0360596282f86" translate="yes" xml:space="preserve">
          <source>Open button text</source>
          <target state="translated">열기 버튼 텍스트</target>
        </trans-unit>
        <trans-unit id="9e2c812fa9cbaf507b02cef9859a62bedbb99afe" translate="yes" xml:space="preserve">
          <source>Open button tool tip text</source>
          <target state="translated">열기 버튼 도구 설명 텍스트</target>
        </trans-unit>
        <trans-unit id="8e35c86ff5861a096dd9728b935211b8a3fce545" translate="yes" xml:space="preserve">
          <source>Open for read access.</source>
          <target state="translated">읽기 액세스를 위해 엽니 다.</target>
        </trans-unit>
        <trans-unit id="91b9c6177a3384ca8b2de5c65a9cdc3944d9e750" translate="yes" xml:space="preserve">
          <source>Open for reading and writing, as with &lt;code&gt;&quot;rw&quot;&lt;/code&gt;, and also require that every update to the file's content be written synchronously to the underlying storage device.</source>
          <target state="translated">&lt;code&gt;&quot;rw&quot;&lt;/code&gt; 와 같이 읽고 쓰기 위해 열고 파일 내용에 대한 모든 업데이트는 기본 저장 장치에 동기식으로 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="517a1b093056cea63e1b052bf44951bc7d277490" translate="yes" xml:space="preserve">
          <source>Open for reading and writing, as with &lt;code&gt;&quot;rw&quot;&lt;/code&gt;, and also require that every update to the file's content or metadata be written synchronously to the underlying storage device.</source>
          <target state="translated">&lt;code&gt;&quot;rw&quot;&lt;/code&gt; 와 같이 읽고 쓰기 위해 열고 파일의 컨텐츠 또는 메타 데이터에 대한 모든 업데이트는 기본 저장 장치에 동기식으로 작성해야합니다.</target>
        </trans-unit>
        <trans-unit id="bc0fccabde1b02c9dc314c7a7d93b418cd356046" translate="yes" xml:space="preserve">
          <source>Open for reading and writing. If the file does not already exist then an attempt will be made to create it.</source>
          <target state="translated">읽고 쓰기 위해 엽니 다. 파일이 존재하지 않으면 파일을 작성하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="b9f5f3c2d640e95b37c27fbcea2c35813dbce99e" translate="yes" xml:space="preserve">
          <source>Open for reading only. Invoking any of the &lt;code&gt;write&lt;/code&gt; methods of the resulting object will cause an &lt;a href=&quot;ioexception&quot;&gt;&lt;code&gt;IOException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">읽기 전용으로 엽니 다. 결과 객체 의 &lt;code&gt;write&lt;/code&gt; 메소드를 호출하면 &lt;a href=&quot;ioexception&quot;&gt; &lt;code&gt;IOException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="800fee0ca80892852c22354b14c38b2267f37e0d" translate="yes" xml:space="preserve">
          <source>Open for reading, a resource of the specified name from the search path used to load classes.</source>
          <target state="translated">클래스를로드하는 데 사용되는 검색 경로에서 지정된 이름의 리소스를 읽기 위해 엽니 다.</target>
        </trans-unit>
        <trans-unit id="c2f7ed5270c80b27fb2c4f5c966b7cd26f742b2f" translate="yes" xml:space="preserve">
          <source>Open for reading, a resource of the specified name from the search path used to load classes. This method locates the resource through the system class loader (see &lt;a href=&quot;#getSystemClassLoader()&quot;&gt;&lt;code&gt;getSystemClassLoader()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">클래스를로드하는 데 사용되는 검색 경로에서 지정된 이름의 리소스를 읽기 위해 엽니 다. 이 메서드는 시스템 클래스 로더를 통해 리소스를 찾습니다 ( &lt;a href=&quot;#getSystemClassLoader()&quot;&gt; &lt;code&gt;getSystemClassLoader()&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="ab871faeffd3bfbd383e55bef268cc77a0cb3f8b" translate="yes" xml:space="preserve">
          <source>Open for reading, a resource of the specified name from the search path used to load classes. This method locates the resource through the system class loader (see &lt;a href=&quot;classloader#getSystemClassLoader--&quot;&gt;&lt;code&gt;getSystemClassLoader()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">클래스를로드하는 데 사용되는 검색 경로에서 지정된 이름의 리소스를 읽기 위해 엽니 다. 이 메소드는 시스템 클래스 로더를 통해 자원을 찾습니다 ( &lt;a href=&quot;classloader#getSystemClassLoader--&quot;&gt; &lt;code&gt;getSystemClassLoader()&lt;/code&gt; &lt;/a&gt; 참조 ). ).</target>
        </trans-unit>
        <trans-unit id="5415684c54a7264914cdc9c6ee2b37eefb45d0e5" translate="yes" xml:space="preserve">
          <source>Open for write access.</source>
          <target state="translated">쓰기 액세스를 위해 엽니 다.</target>
        </trans-unit>
        <trans-unit id="b173f705775d2fe071a376b1d744bc1ba32458e4" translate="yes" xml:space="preserve">
          <source>Open module.</source>
          <target state="translated">모듈을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="f6fe5e669c912691ab1c8893d7e029d5751f591d" translate="yes" xml:space="preserve">
          <source>OpenAction</source>
          <target state="translated">OpenAction</target>
        </trans-unit>
        <trans-unit id="4eda38d434faf927560c26ea1be9a33439db939f" translate="yes" xml:space="preserve">
          <source>OpenDataException</source>
          <target state="translated">OpenDataException</target>
        </trans-unit>
        <trans-unit id="b54db5773f9c50fe7feca0be76355d9176716e50" translate="yes" xml:space="preserve">
          <source>OpenFilesEvent</source>
          <target state="translated">OpenFilesEvent</target>
        </trans-unit>
        <trans-unit id="8f8c858e7c7175504b71237a93bc458c4b4a22e2" translate="yes" xml:space="preserve">
          <source>OpenFilesHandler</source>
          <target state="translated">OpenFilesHandler</target>
        </trans-unit>
        <trans-unit id="d835399b13e370d2f8c102d2f428c018acc3276e" translate="yes" xml:space="preserve">
          <source>OpenJDK</source>
          <target state="translated">OpenJDK</target>
        </trans-unit>
        <trans-unit id="bdd633a84d6cefcc680ea075ac9cb22f4b9fef64" translate="yes" xml:space="preserve">
          <source>OpenJDK 11.0.9 Documentation</source>
          <target state="translated">OpenJDK 11.0.9 문서</target>
        </trans-unit>
        <trans-unit id="39608956136d6be6a43f720cba6569bb202eb9ae" translate="yes" xml:space="preserve">
          <source>OpenJDK 15.0.1 Documentation</source>
          <target state="translated">OpenJDK 15.0.1 문서</target>
        </trans-unit>
        <trans-unit id="e83c70c203a7cbd96d46719a286d899c6c1fd66a" translate="yes" xml:space="preserve">
          <source>OpenJDK 8 Documentation</source>
          <target state="translated">OpenJDK 8 설명서</target>
        </trans-unit>
        <trans-unit id="5648d28a2f71365b7b3511f3ccffde472b125f63" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfo</source>
          <target state="translated">OpenMBeanAttributeInfo</target>
        </trans-unit>
        <trans-unit id="e979cffc0bc63d5f4d8374d91c66623901ac5a00" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfo.equals()</source>
          <target state="translated">OpenMBeanAttributeInfo.equals()</target>
        </trans-unit>
        <trans-unit id="143858f6964f9cdf3d8481886a014e7cc925fd7c" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfo.hashCode()</source>
          <target state="translated">OpenMBeanAttributeInfo.hashCode()</target>
        </trans-unit>
        <trans-unit id="a3fe6c12270aad271a38e46534b737a1b36d9802" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfo.isIs()</source>
          <target state="translated">OpenMBeanAttributeInfo.isIs()</target>
        </trans-unit>
        <trans-unit id="cce3a5fdf12f096af10c6675cd1f3120e3ab1e2c" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfo.isReadable()</source>
          <target state="translated">OpenMBeanAttributeInfo.isReadable()</target>
        </trans-unit>
        <trans-unit id="8b8a8edfa0ca609c64185b124c49fd4238c4b071" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfo.isWritable()</source>
          <target state="translated">OpenMBeanAttributeInfo.isWritable()</target>
        </trans-unit>
        <trans-unit id="6b9bc011527d2c6cf5e39690cdacc8162ac600a3" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfo.toString()</source>
          <target state="translated">OpenMBeanAttributeInfo.toString()</target>
        </trans-unit>
        <trans-unit id="189a7b1206205e1960d7bbe6bc48deeddf70008c" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport</source>
          <target state="translated">OpenMBeanAttributeInfoSupport</target>
        </trans-unit>
        <trans-unit id="41a88d8e4a773bd41a5c54f2ec09199a6a0335de" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.equals()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.equals()</target>
        </trans-unit>
        <trans-unit id="c5edf69cd911b6bcf744f05a74be016377379f33" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.getDefaultValue()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.getDefaultValue()</target>
        </trans-unit>
        <trans-unit id="3cfb1c8075c9d5f9106b9172dd484ca0c097621f" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.getLegalValues()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.getLegalValues()</target>
        </trans-unit>
        <trans-unit id="c9357cd96c501ab24aaf45063dc5423a356dbd02" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.getMaxValue()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.getMaxValue()</target>
        </trans-unit>
        <trans-unit id="65300e585245c30dff0a9e032b424f36592fcbe6" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.getMinValue()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.getMinValue()</target>
        </trans-unit>
        <trans-unit id="99cf5f2739da2e422820bf2464fbcd1e90853180" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.getOpenType()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.getOpenType()</target>
        </trans-unit>
        <trans-unit id="3bfed97ba9f18c98bbba2706a76914c2b300008e" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.hasDefaultValue()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.hasDefaultValue()</target>
        </trans-unit>
        <trans-unit id="51bc199da8ea52fcae4ef926dc723df8d88a3e25" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.hasLegalValues()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.hasLegalValues()</target>
        </trans-unit>
        <trans-unit id="bf560e90afd7312388b5253720c123ce336d98ac" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.hasMaxValue()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.hasMaxValue()</target>
        </trans-unit>
        <trans-unit id="d2873bfe41ef108d6774397b519804224e1180eb" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.hasMinValue()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.hasMinValue()</target>
        </trans-unit>
        <trans-unit id="9344e0d181e44a1b34cd7faa083d431f4b3cc8ee" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.hashCode()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.hashCode()</target>
        </trans-unit>
        <trans-unit id="e31fe01b9327e42abdb423a4190bbf8aa97ff556" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.isValue()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.isValue()</target>
        </trans-unit>
        <trans-unit id="aea6bccfed0db1a22d71acf156e48176f854b79a" translate="yes" xml:space="preserve">
          <source>OpenMBeanAttributeInfoSupport.toString()</source>
          <target state="translated">OpenMBeanAttributeInfoSupport.toString()</target>
        </trans-unit>
        <trans-unit id="7b9f03c631bad32f57c1d562a876fea900fd1abf" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfo</source>
          <target state="translated">OpenMBeanConstructorInfo</target>
        </trans-unit>
        <trans-unit id="6e648ec87f138d57da9fb38ded9512c86c45167e" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfo.equals()</source>
          <target state="translated">OpenMBeanConstructorInfo.equals()</target>
        </trans-unit>
        <trans-unit id="68a531b3ae656b47e3108f5427531daea6299efa" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfo.getDescription()</source>
          <target state="translated">OpenMBeanConstructorInfo.getDescription()</target>
        </trans-unit>
        <trans-unit id="d78d2d9e0c3a58775b8c5a9afbba4555bf0e6656" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfo.getName()</source>
          <target state="translated">OpenMBeanConstructorInfo.getName()</target>
        </trans-unit>
        <trans-unit id="85bb6c019014ff5113cbd55cc66b5af05f72268a" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfo.getSignature()</source>
          <target state="translated">OpenMBeanConstructorInfo.getSignature()</target>
        </trans-unit>
        <trans-unit id="3233ffb63c48d6ed2a0ed95c7aea24432a712f5f" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfo.hashCode()</source>
          <target state="translated">OpenMBeanConstructorInfo.hashCode()</target>
        </trans-unit>
        <trans-unit id="0237d229c54e40e65e6d180e0fb6f6c67c3cc98f" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfo.toString()</source>
          <target state="translated">OpenMBeanConstructorInfo.toString()</target>
        </trans-unit>
        <trans-unit id="50d1bb67f66ea13c3a061c67218b0b0d354ff82a" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfoSupport</source>
          <target state="translated">OpenMBeanConstructorInfoSupport</target>
        </trans-unit>
        <trans-unit id="bcdac0509b5077a31529cb37c103314087f57650" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfoSupport.equals()</source>
          <target state="translated">OpenMBeanConstructorInfoSupport.equals()</target>
        </trans-unit>
        <trans-unit id="54689f43222e74b640b4d0b6aab7968e4cf05648" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfoSupport.hashCode()</source>
          <target state="translated">OpenMBeanConstructorInfoSupport.hashCode()</target>
        </trans-unit>
        <trans-unit id="03448d91ec4f60f79d2b7883666e7425e15f373d" translate="yes" xml:space="preserve">
          <source>OpenMBeanConstructorInfoSupport.toString()</source>
          <target state="translated">OpenMBeanConstructorInfoSupport.toString()</target>
        </trans-unit>
        <trans-unit id="ed54db99d804c519626baf6d7b8a8178be38702f" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo</source>
          <target state="translated">OpenMBeanInfo</target>
        </trans-unit>
        <trans-unit id="f524053898b552953014eb6edf16f1583ba7f15f" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.equals()</source>
          <target state="translated">OpenMBeanInfo.equals()</target>
        </trans-unit>
        <trans-unit id="67e3aba7716a54606955c92c36f7ce8ce870c496" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.getAttributes()</source>
          <target state="translated">OpenMBeanInfo.getAttributes()</target>
        </trans-unit>
        <trans-unit id="553286c9acf07b522a4e988959191f1817680ec6" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.getClassName()</source>
          <target state="translated">OpenMBeanInfo.getClassName()</target>
        </trans-unit>
        <trans-unit id="23e5059de20f44acd3a7c7524935d1b6819a34c8" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.getConstructors()</source>
          <target state="translated">OpenMBeanInfo.getConstructors()</target>
        </trans-unit>
        <trans-unit id="5ae6d4c531cf743b2226ac15ea9ca6c6164c2c9b" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.getDescription()</source>
          <target state="translated">OpenMBeanInfo.getDescription()</target>
        </trans-unit>
        <trans-unit id="5bd5ba897cdc3fc61c2774c08a317f3c1ad00f94" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.getNotifications()</source>
          <target state="translated">OpenMBeanInfo.getNotifications()</target>
        </trans-unit>
        <trans-unit id="50840e56dddd5d8951ef592a0096078d4f75ce6f" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.getOperations()</source>
          <target state="translated">OpenMBeanInfo.getOperations()</target>
        </trans-unit>
        <trans-unit id="5b65a2378ed56cbcf362d9c3f89fc7559998e021" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.hashCode()</source>
          <target state="translated">OpenMBeanInfo.hashCode()</target>
        </trans-unit>
        <trans-unit id="110e42e161c4b892087cdaab33119c7cfc940680" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfo.toString()</source>
          <target state="translated">OpenMBeanInfo.toString()</target>
        </trans-unit>
        <trans-unit id="2daf62f3043f7491cd427664311134ea763557da" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfoSupport</source>
          <target state="translated">OpenMBeanInfoSupport</target>
        </trans-unit>
        <trans-unit id="34f5a6e4c03007ca4eed1339ebff2912df2782e5" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfoSupport.equals()</source>
          <target state="translated">OpenMBeanInfoSupport.equals()</target>
        </trans-unit>
        <trans-unit id="bb362fd555dddf5cebbf7e5d04e6dbaf4fbbbc6e" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfoSupport.hashCode()</source>
          <target state="translated">OpenMBeanInfoSupport.hashCode()</target>
        </trans-unit>
        <trans-unit id="85ec114aa475fd7af3eb988cfb5d83f3a5485c02" translate="yes" xml:space="preserve">
          <source>OpenMBeanInfoSupport.toString()</source>
          <target state="translated">OpenMBeanInfoSupport.toString()</target>
        </trans-unit>
        <trans-unit id="4ef76634cf1d48ff19d5ad25a200797a1e1734c7" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo</source>
          <target state="translated">OpenMBeanOperationInfo</target>
        </trans-unit>
        <trans-unit id="055871ff400f33921ff17724e378426d926289eb" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.equals()</source>
          <target state="translated">OpenMBeanOperationInfo.equals()</target>
        </trans-unit>
        <trans-unit id="71e64a828c14602bd402fd42ee32c4eb20297d33" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.getDescription()</source>
          <target state="translated">OpenMBeanOperationInfo.getDescription()</target>
        </trans-unit>
        <trans-unit id="a5c12afbced219244a9cc5b9a07a83cbb39e3aa8" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.getImpact()</source>
          <target state="translated">OpenMBeanOperationInfo.getImpact()</target>
        </trans-unit>
        <trans-unit id="9fc6bb8d56c0e1fe06cd129fc5be9d058c377a7f" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.getName()</source>
          <target state="translated">OpenMBeanOperationInfo.getName()</target>
        </trans-unit>
        <trans-unit id="a54a54abb266848aae95407fe97c86db78708853" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.getReturnOpenType()</source>
          <target state="translated">OpenMBeanOperationInfo.getReturnOpenType()</target>
        </trans-unit>
        <trans-unit id="f82cbf20e2f0ae94697426ce711787cbe012f947" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.getReturnType()</source>
          <target state="translated">OpenMBeanOperationInfo.getReturnType()</target>
        </trans-unit>
        <trans-unit id="a1ae2c52433af38fe73f381b2cc96ea1fc5d3e64" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.getSignature()</source>
          <target state="translated">OpenMBeanOperationInfo.getSignature()</target>
        </trans-unit>
        <trans-unit id="0e9e893319fded4886f903be081a13dc0667585d" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.hashCode()</source>
          <target state="translated">OpenMBeanOperationInfo.hashCode()</target>
        </trans-unit>
        <trans-unit id="12e3d05e6a481f520a83c6849e71d3f765a40b9e" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfo.toString()</source>
          <target state="translated">OpenMBeanOperationInfo.toString()</target>
        </trans-unit>
        <trans-unit id="9752d678e3e3ecc38443b50e3c1170e0fcca8661" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfoSupport</source>
          <target state="translated">OpenMBeanOperationInfoSupport</target>
        </trans-unit>
        <trans-unit id="0a75e6f335320f7dc93d1a4dbfbe733349b7a602" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfoSupport.equals()</source>
          <target state="translated">OpenMBeanOperationInfoSupport.equals()</target>
        </trans-unit>
        <trans-unit id="1206b8ae5b704ec2a4a7e66bca5ce4e2e5ecd586" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfoSupport.getReturnOpenType()</source>
          <target state="translated">OpenMBeanOperationInfoSupport.getReturnOpenType()</target>
        </trans-unit>
        <trans-unit id="8716ec99732bc25f30ea9a7a95b87ae125b521bd" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfoSupport.hashCode()</source>
          <target state="translated">OpenMBeanOperationInfoSupport.hashCode()</target>
        </trans-unit>
        <trans-unit id="57257e665e172a727054cdf36d3f3f2a5e8221ec" translate="yes" xml:space="preserve">
          <source>OpenMBeanOperationInfoSupport.toString()</source>
          <target state="translated">OpenMBeanOperationInfoSupport.toString()</target>
        </trans-unit>
        <trans-unit id="002546f6acd9c93b1fe0236b5258e207dfbd5d67" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo</source>
          <target state="translated">OpenMBeanParameterInfo</target>
        </trans-unit>
        <trans-unit id="5b332cc284a9648c9cd232fdd648bd9e84efb4b6" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.equals()</source>
          <target state="translated">OpenMBeanParameterInfo.equals()</target>
        </trans-unit>
        <trans-unit id="8a3373becc4bafefaaf924f4ab7606e4feccc702" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.getDefaultValue()</source>
          <target state="translated">OpenMBeanParameterInfo.getDefaultValue()</target>
        </trans-unit>
        <trans-unit id="fdd80ae84129a37f3490c91d5e5275f27751523d" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.getDescription()</source>
          <target state="translated">OpenMBeanParameterInfo.getDescription()</target>
        </trans-unit>
        <trans-unit id="b5f0be5d60a53a85627e9ba2950e52b0c31bad79" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.getLegalValues()</source>
          <target state="translated">OpenMBeanParameterInfo.getLegalValues()</target>
        </trans-unit>
        <trans-unit id="4e257b96b7d1189a2f8b4326850ee1264eb76429" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.getMaxValue()</source>
          <target state="translated">OpenMBeanParameterInfo.getMaxValue()</target>
        </trans-unit>
        <trans-unit id="053dc7458459661e740a19352cea2856f327b555" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.getMinValue()</source>
          <target state="translated">OpenMBeanParameterInfo.getMinValue()</target>
        </trans-unit>
        <trans-unit id="89f89b311d0b6b0b9114a518e43ec5e32842ded4" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.getName()</source>
          <target state="translated">OpenMBeanParameterInfo.getName()</target>
        </trans-unit>
        <trans-unit id="f4c92bb2417359b73a7bba89f181f954d209c647" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.getOpenType()</source>
          <target state="translated">OpenMBeanParameterInfo.getOpenType()</target>
        </trans-unit>
        <trans-unit id="c5efa0c1d42062776ad2df1cfb00eda86b588730" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.hasDefaultValue()</source>
          <target state="translated">OpenMBeanParameterInfo.hasDefaultValue()</target>
        </trans-unit>
        <trans-unit id="fdd9bfe03cc49e07b3ea1f6d1be6bc347ce8e5e7" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.hasLegalValues()</source>
          <target state="translated">OpenMBeanParameterInfo.hasLegalValues()</target>
        </trans-unit>
        <trans-unit id="2a4c95463394fb8a01bbedc9c63fba9ac2fee9f8" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.hasMaxValue()</source>
          <target state="translated">OpenMBeanParameterInfo.hasMaxValue()</target>
        </trans-unit>
        <trans-unit id="15f62d44bda077e9912097b481de475aa388fe3a" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.hasMinValue()</source>
          <target state="translated">OpenMBeanParameterInfo.hasMinValue()</target>
        </trans-unit>
        <trans-unit id="0fd2147a5e504b230addda5213c2e2826dceca68" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.hashCode()</source>
          <target state="translated">OpenMBeanParameterInfo.hashCode()</target>
        </trans-unit>
        <trans-unit id="320a7d0fd92432f25534c57f99c8882fa628e794" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.isValue()</source>
          <target state="translated">OpenMBeanParameterInfo.isValue()</target>
        </trans-unit>
        <trans-unit id="753cf959f0384c1ad955a669b525be9411af4f72" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfo.toString()</source>
          <target state="translated">OpenMBeanParameterInfo.toString()</target>
        </trans-unit>
        <trans-unit id="c94d109f62118081d4ab7ea942f2e6b6f5022278" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport</source>
          <target state="translated">OpenMBeanParameterInfoSupport</target>
        </trans-unit>
        <trans-unit id="e37f68e92df2eaf3d7eec15e4f00eefad0052998" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.equals()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.equals()</target>
        </trans-unit>
        <trans-unit id="9eb8d93b8542adfd213fb1a023a2d0f33e98bdc4" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.getDefaultValue()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.getDefaultValue()</target>
        </trans-unit>
        <trans-unit id="59ff7a7c508c4274b8d342034adeb476342df3cc" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.getLegalValues()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.getLegalValues()</target>
        </trans-unit>
        <trans-unit id="bacfbcf6f0affefa1bf7983a1f3bddbd9cea1e8c" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.getMaxValue()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.getMaxValue()</target>
        </trans-unit>
        <trans-unit id="c2656a12c25517559af18c1a48a141304d49c0ac" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.getMinValue()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.getMinValue()</target>
        </trans-unit>
        <trans-unit id="7a219c099313afe428a1e98b374a0a3271d96301" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.getOpenType()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.getOpenType()</target>
        </trans-unit>
        <trans-unit id="249db65bbe23ff7874c10eb894e110d2b7e356aa" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.hasDefaultValue()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.hasDefaultValue()</target>
        </trans-unit>
        <trans-unit id="d491fdc07ee5a0654fe41d19aac4a142b5a3b1b8" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.hasLegalValues()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.hasLegalValues()</target>
        </trans-unit>
        <trans-unit id="1c4d6d097ac3bec1810f7ad9b8a4c2b6fc90fc1e" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.hasMaxValue()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.hasMaxValue()</target>
        </trans-unit>
        <trans-unit id="5fa2a19ebdbe07a501f76fd91c9e7f3da9af5c5e" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.hasMinValue()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.hasMinValue()</target>
        </trans-unit>
        <trans-unit id="b1c76b7d06cd059ae096ad7d2d715555cb5e6cdb" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.hashCode()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.hashCode()</target>
        </trans-unit>
        <trans-unit id="de3ec16beca89984f5b7c67494017a1b84e42aef" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.isValue()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.isValue()</target>
        </trans-unit>
        <trans-unit id="06ab3e3abc57af092e66f1bb0228f14a2954a51e" translate="yes" xml:space="preserve">
          <source>OpenMBeanParameterInfoSupport.toString()</source>
          <target state="translated">OpenMBeanParameterInfoSupport.toString()</target>
        </trans-unit>
        <trans-unit id="844709189e961aa7a1b38cb711150fcb18ddf4b5" translate="yes" xml:space="preserve">
          <source>OpenOption</source>
          <target state="translated">OpenOption</target>
        </trans-unit>
        <trans-unit id="8685784375b47812244b4d0fa46475472dd05942" translate="yes" xml:space="preserve">
          <source>OpenType</source>
          <target state="translated">OpenType</target>
        </trans-unit>
        <trans-unit id="cda43f1b85bcad19232a292d45f13f9061aaae5b" translate="yes" xml:space="preserve">
          <source>OpenType.equals()</source>
          <target state="translated">OpenType.equals()</target>
        </trans-unit>
        <trans-unit id="6cb7599fca57608009f1d686881031a655545c1a" translate="yes" xml:space="preserve">
          <source>OpenType.getClassName()</source>
          <target state="translated">OpenType.getClassName()</target>
        </trans-unit>
        <trans-unit id="9dd7926efb40cce5fd6c70ed47ab6b00c8cf55ad" translate="yes" xml:space="preserve">
          <source>OpenType.getDescription()</source>
          <target state="translated">OpenType.getDescription()</target>
        </trans-unit>
        <trans-unit id="44c5471ddd01805ee7e0410f5155b562d28b0bd0" translate="yes" xml:space="preserve">
          <source>OpenType.getTypeName()</source>
          <target state="translated">OpenType.getTypeName()</target>
        </trans-unit>
        <trans-unit id="b9b260789aa0118f489ca992e3794a42c598e8a6" translate="yes" xml:space="preserve">
          <source>OpenType.hashCode()</source>
          <target state="translated">OpenType.hashCode()</target>
        </trans-unit>
        <trans-unit id="54795f7ba2c034c44c5108dea4107afab1b96237" translate="yes" xml:space="preserve">
          <source>OpenType.isArray()</source>
          <target state="translated">OpenType.isArray()</target>
        </trans-unit>
        <trans-unit id="93a367ba05906d32826449b2a6369f0a912cdf81" translate="yes" xml:space="preserve">
          <source>OpenType.isValue()</source>
          <target state="translated">OpenType.isValue()</target>
        </trans-unit>
        <trans-unit id="17daa75b2e4e01f5013e9963c24f0db5d682f4ac" translate="yes" xml:space="preserve">
          <source>OpenType.toString()</source>
          <target state="translated">OpenType.toString()</target>
        </trans-unit>
        <trans-unit id="ea9449b486d620e179c350e43dc16c1c604d2898" translate="yes" xml:space="preserve">
          <source>OpenURIEvent</source>
          <target state="translated">OpenURIEvent</target>
        </trans-unit>
        <trans-unit id="870c809895afb6319492f0bc2427815ebdb6fa4b" translate="yes" xml:space="preserve">
          <source>OpenURIHandler</source>
          <target state="translated">OpenURIHandler</target>
        </trans-unit>
        <trans-unit id="4b59d0b2fc2597ba7d0823a86d2eb8a544db1fb3" translate="yes" xml:space="preserve">
          <source>Opens a ZIP file for reading given the specified File object.</source>
          <target state="translated">지정된 File 객체에서 읽을 ZIP 파일을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="eb29046c156f33d54613ff5e38f953e4515dfa0c" translate="yes" xml:space="preserve">
          <source>Opens a communications link to the resource referenced by this URL, if such a connection has not already been established.</source>
          <target state="translated">연결이 아직 설정되지 않은 경우이 URL에서 참조하는 리소스에 대한 통신 링크를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="dcf2f96228db57eca0fb78992ce51fceb8fc845a" translate="yes" xml:space="preserve">
          <source>Opens a connection to the object referenced by the &lt;code&gt;URL&lt;/code&gt; argument.</source>
          <target state="translated">에서 참조하는 개체에 대한 연결을 엽니 다. &lt;code&gt;URL&lt;/code&gt; 인수가 .</target>
        </trans-unit>
        <trans-unit id="85494a54a540f64865f7014b49cdaf52a1e24e74" translate="yes" xml:space="preserve">
          <source>Opens a connection to the object referenced by the &lt;code&gt;URL&lt;/code&gt; argument. This method should be overridden by a subclass.</source>
          <target state="translated">&lt;code&gt;URL&lt;/code&gt; 인수가 참조하는 객체에 대한 연결을 엽니 다 . 이 메소드는 서브 클래스로 대체되어야합니다.</target>
        </trans-unit>
        <trans-unit id="813af086add13d317664661b5ab9be9096561ae2" translate="yes" xml:space="preserve">
          <source>Opens a connection to this &lt;code&gt;URL&lt;/code&gt; and returns an &lt;code&gt;InputStream&lt;/code&gt; for reading from that connection.</source>
          <target state="translated">이 &lt;code&gt;URL&lt;/code&gt; 에 대한 연결을 &lt;code&gt;InputStream&lt;/code&gt; 반환합니다. 해당 연결에서 읽기 을 합니다.</target>
        </trans-unit>
        <trans-unit id="900668e8ea95c7e918493f8bbf96165c505d62dd" translate="yes" xml:space="preserve">
          <source>Opens a connection to this &lt;code&gt;URL&lt;/code&gt; and returns an &lt;code&gt;InputStream&lt;/code&gt; for reading from that connection. This method is a shorthand for:</source>
          <target state="translated">이 &lt;code&gt;URL&lt;/code&gt; 에 대한 연결을 &lt;code&gt;InputStream&lt;/code&gt; 해당 연결에서 읽을 수 있는 InputStream 을 반환 합니다. 이 방법은 다음과 같은 속기입니다.</target>
        </trans-unit>
        <trans-unit id="ca190ef9c008641ed866d018ad27e3ee9ead0f7a" translate="yes" xml:space="preserve">
          <source>Opens a data stream for the recording with the specified ID, or &lt;code&gt;0&lt;/code&gt; to get data irrespective of recording.</source>
          <target state="translated">지정된 ID로 기록에 대한 데이터 스트림을 열거 나 기록에 관계없이 데이터를 가져 오려면 &lt;code&gt;0&lt;/code&gt; 을 엽니 다 .</target>
        </trans-unit>
        <trans-unit id="314ad644c9eeeb6f040442885fdbbe534e84bc64" translate="yes" xml:space="preserve">
          <source>Opens a datagram channel.</source>
          <target state="translated">데이터 그램 채널을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="3e6c5489bb19bec447eaa8ee5f86408de767d734" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt; to iterate over all entries in the directory.</source>
          <target state="translated">디렉토리를 열고 &lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; 을&lt;/a&gt; 반환합니다. 를 열고 을 모든 항목을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="f7bd60601bf91ed3bc8c35727048688e17044159" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt; to iterate over all entries in the directory. The elements returned by the directory stream's &lt;a href=&quot;directorystream#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; are of type &lt;code&gt;
 Path&lt;/code&gt;, each one representing an entry in the directory. The &lt;code&gt;Path&lt;/code&gt; objects are obtained as if by &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; &lt;/a&gt; 를 열고 DirectoryStream 을 반환하여 디렉토리의 모든 항목을 반복합니다. 디렉토리 스트림의 &lt;a href=&quot;directorystream#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 가 반환하는 요소는 &lt;code&gt; Path&lt;/code&gt; 유형 이며, 각각은 디렉토리의 항목을 나타냅니다. &lt;code&gt;Path&lt;/code&gt; 객체는 경우와 같이 얻어진다 &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 에 대한 디렉토리 항목의 이름 &lt;code&gt;dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b77fab3c3c199ebccb3d9ebe275988f120e9f67" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt; to iterate over all entries in the directory. The elements returned by the directory stream's &lt;a href=&quot;directorystream#iterator--&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; are of type &lt;code&gt;Path&lt;/code&gt;, each one representing an entry in the directory. The &lt;code&gt;Path&lt;/code&gt; objects are obtained as if by &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;.</source>
          <target state="translated">디렉토리를 열어 디렉토리의 모든 항목을 반복하기 위해 &lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; &lt;/a&gt; 을 반환합니다 . 디렉토리 스트림의 &lt;a href=&quot;directorystream#iterator--&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 가 리턴 한 요소는 &lt;code&gt;Path&lt;/code&gt; 유형 이며, 각각은 디렉토리의 항목을 나타냅니다. &lt;code&gt;Path&lt;/code&gt; 객체는 경우와 같이 얻어진다 &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 에 대한 디렉토리 항목의 이름 &lt;code&gt;dir&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="29b35820fd9a5b44758bc550913beff2c9d38e29" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt; to iterate over the entries in the directory.</source>
          <target state="translated">디렉토리를 열고 &lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; 을&lt;/a&gt; 반환합니다. 를 열고 을 의 항목을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="11347ab02b02041eff311f62ea7ef551c8a4b8b2" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt; to iterate over the entries in the directory. The elements returned by the directory stream's &lt;a href=&quot;directorystream#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; are of type &lt;code&gt;
 Path&lt;/code&gt;, each one representing an entry in the directory. The &lt;code&gt;Path&lt;/code&gt; objects are obtained as if by &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;. The entries returned by the iterator are filtered by matching the &lt;code&gt;String&lt;/code&gt; representation of their file names against the given &lt;em&gt;globbing&lt;/em&gt; pattern.</source>
          <target state="translated">&lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; &lt;/a&gt; 를 열고 DirectoryStream 을 반환하여 디렉토리 의 항목을 반복합니다. 디렉토리 스트림의 &lt;a href=&quot;directorystream#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 가 반환하는 요소는 &lt;code&gt; Path&lt;/code&gt; 유형 이며, 각각은 디렉토리의 항목을 나타냅니다. &lt;code&gt;Path&lt;/code&gt; 객체는 경우와 같이 얻어진다 &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 에 대한 디렉토리 항목의 이름 &lt;code&gt;dir&lt;/code&gt; . 반복기에 의해 반환 된 항목 은 주어진 &lt;em&gt;globbing&lt;/em&gt; 패턴 에 대해 파일 이름 의 &lt;code&gt;String&lt;/code&gt; 표현을 일치시켜 필터링됩니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="af1073af057fdc24c5eae62490a00d8ab444efc7" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt; to iterate over the entries in the directory. The elements returned by the directory stream's &lt;a href=&quot;directorystream#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; are of type &lt;code&gt;
 Path&lt;/code&gt;, each one representing an entry in the directory. The &lt;code&gt;Path&lt;/code&gt; objects are obtained as if by &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;. The entries returned by the iterator are filtered by the given &lt;a href=&quot;directorystream.filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; &lt;/a&gt; 를 열고 DirectoryStream 을 반환하여 디렉토리 의 항목을 반복합니다. 디렉토리 스트림의 &lt;a href=&quot;directorystream#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 가 반환하는 요소는 &lt;code&gt; Path&lt;/code&gt; 유형 이며, 각각은 디렉토리의 항목을 나타냅니다. &lt;code&gt;Path&lt;/code&gt; 객체는 경우와 같이 얻어진다 &lt;a href=&quot;path#resolve(java.nio.file.Path)&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 에 대한 디렉토리 항목의 이름 &lt;code&gt;dir&lt;/code&gt; . 반복자에 의해 반환 된 항목은 주어진 &lt;a href=&quot;directorystream.filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt; 의해 필터링됩니다 .</target>
        </trans-unit>
        <trans-unit id="5c4c049e219ecbb7be52594a91f4e114f312c656" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt; to iterate over the entries in the directory. The elements returned by the directory stream's &lt;a href=&quot;directorystream#iterator--&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; are of type &lt;code&gt;Path&lt;/code&gt;, each one representing an entry in the directory. The &lt;code&gt;Path&lt;/code&gt; objects are obtained as if by &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;. The entries returned by the iterator are filtered by matching the &lt;code&gt;String&lt;/code&gt; representation of their file names against the given &lt;em&gt;globbing&lt;/em&gt; pattern.</source>
          <target state="translated">디렉토리를 열어 디렉토리 의 항목을 반복하기 위해 &lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; &lt;/a&gt; 을 반환합니다 . 디렉토리 스트림의 &lt;a href=&quot;directorystream#iterator--&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 가 리턴 한 요소는 &lt;code&gt;Path&lt;/code&gt; 유형 이며, 각각은 디렉토리의 항목을 나타냅니다. &lt;code&gt;Path&lt;/code&gt; 객체는 경우와 같이 얻어진다 &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 에 대한 디렉토리 항목의 이름 &lt;code&gt;dir&lt;/code&gt; . 반복자가 리턴 한 항목 은 주어진 글 &lt;em&gt;로빙&lt;/em&gt; 패턴 과 파일 이름 의 &lt;code&gt;String&lt;/code&gt; 표시를 일치시켜 필터링됩니다 .&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="b2a32ef4c8c9533d893939b8b7c226951c5bc725" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;a href=&quot;directorystream&quot;&gt;&lt;code&gt;DirectoryStream&lt;/code&gt;&lt;/a&gt; to iterate over the entries in the directory. The elements returned by the directory stream's &lt;a href=&quot;directorystream#iterator--&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; are of type &lt;code&gt;Path&lt;/code&gt;, each one representing an entry in the directory. The &lt;code&gt;Path&lt;/code&gt; objects are obtained as if by &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt;&lt;code&gt;resolving&lt;/code&gt;&lt;/a&gt; the name of the directory entry against &lt;code&gt;dir&lt;/code&gt;. The entries returned by the iterator are filtered by the given &lt;a href=&quot;directorystream.filter&quot;&gt;&lt;code&gt;filter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">디렉토리를 열어 디렉토리 의 항목을 반복하기 위해 &lt;a href=&quot;directorystream&quot;&gt; &lt;code&gt;DirectoryStream&lt;/code&gt; &lt;/a&gt; 을 반환합니다 . 디렉토리 스트림의 &lt;a href=&quot;directorystream#iterator--&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 가 리턴 한 요소는 &lt;code&gt;Path&lt;/code&gt; 유형 이며, 각각은 디렉토리의 항목을 나타냅니다. &lt;code&gt;Path&lt;/code&gt; 객체는 경우와 같이 얻어진다 &lt;a href=&quot;path#resolve-java.nio.file.Path-&quot;&gt; &lt;code&gt;resolving&lt;/code&gt; &lt;/a&gt; 에 대한 디렉토리 항목의 이름 &lt;code&gt;dir&lt;/code&gt; . 반복자에 의해 리턴 된 항목은 주어진 &lt;a href=&quot;directorystream.filter&quot;&gt; &lt;code&gt;filter&lt;/code&gt; &lt;/a&gt; 의해 필터링됩니다 .</target>
        </trans-unit>
        <trans-unit id="bbe0192e3fbaec56ee6946a0fa8d16a021835124" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;code&gt;DirectoryStream&lt;/code&gt; to iterate over the entries in the directory.</source>
          <target state="translated">&lt;code&gt;DirectoryStream&lt;/code&gt; 를 열고 DirectoryStream 을 반환하여 디렉토리 의 항목을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="70de01c4e7607c853831b2b2ac78e305aa9e14d6" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;code&gt;DirectoryStream&lt;/code&gt; to iterate over the entries in the directory. This method works in exactly the manner specified by the &lt;a href=&quot;../files#newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream.Filter)&quot;&gt;&lt;code&gt;Files.newDirectoryStream(java.nio.file.Path, java.nio.file.DirectoryStream.Filter)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;DirectoryStream&lt;/code&gt; 를 열고 DirectoryStream 을 반환하여 디렉토리 의 항목을 반복합니다. 이 메소드는 &lt;a href=&quot;../files#newDirectoryStream(java.nio.file.Path,java.nio.file.DirectoryStream.Filter)&quot;&gt; &lt;code&gt;Files.newDirectoryStream(java.nio.file.Path, java.nio.file.DirectoryStream.Filter)&lt;/code&gt; &lt;/a&gt; 지정된 방식으로 정확히 작동합니다. 메소드에 .</target>
        </trans-unit>
        <trans-unit id="1147eeb19b0a99e48dfffcaa24710a5987945a34" translate="yes" xml:space="preserve">
          <source>Opens a directory, returning a &lt;code&gt;DirectoryStream&lt;/code&gt; to iterate over the entries in the directory. This method works in exactly the manner specified by the &lt;a href=&quot;../files#newDirectoryStream-java.nio.file.Path-java.nio.file.DirectoryStream.Filter-&quot;&gt;&lt;code&gt;Files.newDirectoryStream(java.nio.file.Path, java.nio.file.DirectoryStream.Filter)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">디렉토리를 열어 디렉토리 의 항목을 반복하기 위해 &lt;code&gt;DirectoryStream&lt;/code&gt; 을 반환합니다 . 이 메소드는 &lt;a href=&quot;../files#newDirectoryStream-java.nio.file.Path-java.nio.file.DirectoryStream.Filter-&quot;&gt; &lt;code&gt;Files.newDirectoryStream(java.nio.file.Path, java.nio.file.DirectoryStream.Filter)&lt;/code&gt; &lt;/a&gt; 메소드로 지정된 방식으로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="76b1d8dafbdfe79d8f180db0cf2c5d7733a4fcef" translate="yes" xml:space="preserve">
          <source>Opens a file for reading, returning a &lt;code&gt;BufferedReader&lt;/code&gt; that may be used to read text from the file in an efficient manner.</source>
          <target state="translated">읽기 위해 파일을 &lt;code&gt;BufferedReader&lt;/code&gt; 파일에서 텍스트를 효율적으로 읽는 데 사용할 수 있는 BufferedReader 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="05455add1f3c5c1cab4e36b48991592d5f96b4e4" translate="yes" xml:space="preserve">
          <source>Opens a file for reading, returning a &lt;code&gt;BufferedReader&lt;/code&gt; that may be used to read text from the file in an efficient manner. Bytes from the file are decoded into characters using the specified charset. Reading commences at the beginning of the file.</source>
          <target state="translated">읽을 파일을 열어 효율적인 방식으로 파일에서 텍스트를 읽는 데 사용할 수 있는 &lt;code&gt;BufferedReader&lt;/code&gt; 를 반환합니다 . 파일의 바이트는 지정된 문자 세트를 사용하여 문자로 디코딩됩니다. 파일의 시작 부분에서 읽기가 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="e1a250f721e42e61b0fd63bdd16791cca9c3be80" translate="yes" xml:space="preserve">
          <source>Opens a file for reading, returning a &lt;code&gt;BufferedReader&lt;/code&gt; to read text from the file in an efficient manner.</source>
          <target state="translated">읽기 위해 파일을 &lt;code&gt;BufferedReader&lt;/code&gt; 를 반환 하여 파일에서 텍스트를 효율적으로 읽습니다.</target>
        </trans-unit>
        <trans-unit id="a0f7f4cb405fa9289913acec56a9cfc9e89f531f" translate="yes" xml:space="preserve">
          <source>Opens a file for reading, returning a &lt;code&gt;BufferedReader&lt;/code&gt; to read text from the file in an efficient manner. Bytes from the file are decoded into characters using the &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt;&lt;code&gt;UTF-8&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">읽을 파일을 &lt;code&gt;BufferedReader&lt;/code&gt; 효율적인 방식으로 파일에서 텍스트를 읽을 수 있도록 BufferedReader 를 반환합니다 . 파일의 바이트는 &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt; &lt;code&gt;UTF-8&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; 을&lt;/a&gt; 사용하여 문자로 디코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="51b6364ca2e6c22d34091bd3b1b86300a73ce80b" translate="yes" xml:space="preserve">
          <source>Opens a file, returning an input stream to read from the file.</source>
          <target state="translated">파일을 열고 파일에서 읽을 입력 스트림을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="3e41df72adaea0e1dfd09800b3e18ccef2228cf3" translate="yes" xml:space="preserve">
          <source>Opens a file, returning an input stream to read from the file. The stream will not be buffered, and is not required to support the &lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/inputstream#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. The stream will be safe for access by multiple concurrent threads. Reading commences at the beginning of the file. Whether the returned stream is</source>
          <target state="translated">파일을 열고 파일에서 읽을 입력 스트림을 반환합니다. 스트림은 버퍼링되지 않으며 &lt;a href=&quot;../../io/inputstream#mark(int)&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../io/inputstream#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt; 을 지원하는 데 필요하지 않습니다. 메서드 . 스트림은 여러 동시 스레드에 의한 액세스에 안전합니다. 읽기는 파일 시작 부분에서 시작됩니다. 반환 된 스트림이</target>
        </trans-unit>
        <trans-unit id="a83404a165b783bf67a5d97b83bfe35fc57436b6" translate="yes" xml:space="preserve">
          <source>Opens a file, returning an input stream to read from the file. The stream will not be buffered, and is not required to support the &lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt;&lt;code&gt;mark&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../io/inputstream#reset--&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; methods. The stream will be safe for access by multiple concurrent threads. Reading commences at the beginning of the file. Whether the returned stream is</source>
          <target state="translated">파일을 열어 파일에서 읽을 입력 스트림을 반환합니다. 스트림은 버퍼링되지 않으며 &lt;a href=&quot;../../io/inputstream#mark-int-&quot;&gt; &lt;code&gt;mark&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../io/inputstream#reset--&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt; 메소드 를 지원할 필요가 없습니다 . 스트림은 여러 개의 동시 스레드가 안전하게 액세스 할 수 있습니다. 파일의 시작 부분에서 읽기가 시작됩니다. 반환 된 스트림이</target>
        </trans-unit>
        <trans-unit id="c33f83b7e355574959758fa49122fb24dfcff8a3" translate="yes" xml:space="preserve">
          <source>Opens a file, returning an input stream to read from the file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#newInputStream(java.nio.file.Path,java.nio.file.OpenOption...)&quot;&gt;&lt;code&gt;Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">파일을 열고 파일에서 읽을 입력 스트림을 반환합니다. 이 메소드는 &lt;a href=&quot;../files#newInputStream(java.nio.file.Path,java.nio.file.OpenOption...)&quot;&gt; &lt;code&gt;Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 방식으로 정확히 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="26452db3f0b5527640459c36c4cdb0fa6c75d9fa" translate="yes" xml:space="preserve">
          <source>Opens a file, returning an input stream to read from the file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#newInputStream-java.nio.file.Path-java.nio.file.OpenOption...-&quot;&gt;&lt;code&gt;Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">파일을 열어 파일에서 읽을 입력 스트림을 반환합니다. 이 메소드는 &lt;a href=&quot;../files#newInputStream-java.nio.file.Path-java.nio.file.OpenOption...-&quot;&gt; &lt;code&gt;Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption...)&lt;/code&gt; &lt;/a&gt; 메소드로 지정된 방식으로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="952e08f3e265f1148a81d1e32d464adf76689ab1" translate="yes" xml:space="preserve">
          <source>Opens a folder containing the &lt;code&gt;file&lt;/code&gt; and selects it in a default system file manager.</source>
          <target state="translated">포함 된 폴더를 엽니 다. &lt;code&gt;file&lt;/code&gt; 기본 시스템 파일 관리자에서 선택합니다.</target>
        </trans-unit>
        <trans-unit id="fad9911c5b4f053736424912d25741c81815ee9d" translate="yes" xml:space="preserve">
          <source>Opens a new &lt;code&gt;ZipFile&lt;/code&gt; to read from the specified &lt;code&gt;File&lt;/code&gt; object in the specified mode.</source>
          <target state="translated">지정된에서 읽을 새 &lt;code&gt;ZipFile&lt;/code&gt; 을 엽니 다. &lt;code&gt;File&lt;/code&gt; 지정된 모드에서 File 개체에서 .</target>
        </trans-unit>
        <trans-unit id="352045880476381250ac1e9ce7cada8d078846aa" translate="yes" xml:space="preserve">
          <source>Opens a new &lt;code&gt;ZipFile&lt;/code&gt; to read from the specified &lt;code&gt;File&lt;/code&gt; object in the specified mode. The mode argument must be either &lt;code&gt;OPEN_READ&lt;/code&gt; or &lt;code&gt;OPEN_READ | OPEN_DELETE&lt;/code&gt;.</source>
          <target state="translated">지정된 모드에서 지정된 &lt;code&gt;File&lt;/code&gt; 객체에서 읽을 새 &lt;code&gt;ZipFile&lt;/code&gt; 을 엽니 다 . 모드 인수는 &lt;code&gt;OPEN_READ&lt;/code&gt; 또는 &lt;code&gt;OPEN_READ | OPEN_DELETE&lt;/code&gt; OPEN_DELETE .</target>
        </trans-unit>
        <trans-unit id="2685f7a69452294936cbb3e14d59304f4e3a2d2d" translate="yes" xml:space="preserve">
          <source>Opens a new logical channel to the card and returns it.</source>
          <target state="translated">카드에 대한 새 논리 채널을 열고 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c366d915ba63b0049fe8e85d2f51f5c7d3f4dbc6" translate="yes" xml:space="preserve">
          <source>Opens a new logical channel to the card and returns it. The channel is opened by issuing a &lt;code&gt;MANAGE CHANNEL&lt;/code&gt; command that should use the format &lt;code&gt;[00 70 00 00 01]&lt;/code&gt;.</source>
          <target state="translated">카드에 대한 새 논리 채널을 열고 반환합니다. 채널은 &lt;code&gt;[00 70 00 00 01]&lt;/code&gt; 형식을 사용해야 하는 &lt;code&gt;MANAGE CHANNEL&lt;/code&gt; 명령을 실행하여 열립니다 . .</target>
        </trans-unit>
        <trans-unit id="974d71a979c2e43470573e8010e347f733177e08" translate="yes" xml:space="preserve">
          <source>Opens a pipe.</source>
          <target state="translated">파이프를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="790b41cf43edb04c81f99db791e62aa43f853c45" translate="yes" xml:space="preserve">
          <source>Opens a resource, returning an input stream to read the resource in the module.</source>
          <target state="translated">리소스를 열고 모듈에서 리소스를 읽기위한 입력 스트림을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="772fd5e08ab4f27a41a17f10a206eb1772b054a3" translate="yes" xml:space="preserve">
          <source>Opens a selector.</source>
          <target state="translated">선택기를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="c9adc3cc27c07ec06b8f45a5a401f95b905bc56f" translate="yes" xml:space="preserve">
          <source>Opens a server-socket channel.</source>
          <target state="translated">서버 소켓 채널을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="4d777b8cb22560f696aa68754cf837772dc9adae" translate="yes" xml:space="preserve">
          <source>Opens a server-socket channel.The &lt;code&gt;family&lt;/code&gt; parameter specifies the &lt;a href=&quot;../../net/protocolfamily&quot;&gt;&lt;code&gt;protocol family&lt;/code&gt;&lt;/a&gt; of the channel's socket.</source>
          <target state="translated">서버 소켓 채널을 엽니 다. &lt;code&gt;family&lt;/code&gt; 매개 변수 는 채널 소켓 의 &lt;a href=&quot;../../net/protocolfamily&quot;&gt; &lt;code&gt;protocol family&lt;/code&gt; &lt;/a&gt; 을 지정합니다 .The family parameter specifies the protocol family of the channel 's socket.</target>
        </trans-unit>
        <trans-unit id="c81fb8c8399c67058d0797a569f34a5a606f4375" translate="yes" xml:space="preserve">
          <source>Opens a socket channel and connects it to a remote address.</source>
          <target state="translated">소켓 채널을 열고 원격 주소에 연결합니다.</target>
        </trans-unit>
        <trans-unit id="b4efc99933e5a7accadf3e56e9dbe25ffbaa59ce" translate="yes" xml:space="preserve">
          <source>Opens a socket channel.</source>
          <target state="translated">소켓 채널을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="5f44da2f5518fb307c42d52fc5e71d2ee08ee667" translate="yes" xml:space="preserve">
          <source>Opens a socket channel. The &lt;code&gt;family&lt;/code&gt; parameter specifies the &lt;a href=&quot;../../net/protocolfamily&quot;&gt;&lt;code&gt;protocol family&lt;/code&gt;&lt;/a&gt; of the channel's socket.</source>
          <target state="translated">소켓 채널을 엽니 다. &lt;code&gt;family&lt;/code&gt; 매개 변수는 지정 &lt;a href=&quot;../../net/protocolfamily&quot;&gt; &lt;code&gt;protocol family&lt;/code&gt; &lt;/a&gt; 채널의 소켓을.</target>
        </trans-unit>
        <trans-unit id="e28df3a29e665dff29414bcf65018da6aa30207e" translate="yes" xml:space="preserve">
          <source>Opens a zip file for reading.</source>
          <target state="translated">읽을 zip 파일을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="1ce238d1f33c5901e81929b177d2aa51a6172d63" translate="yes" xml:space="preserve">
          <source>Opens an SCTP channel and connects it to a remote address.</source>
          <target state="translated">SCTP 채널을 열고 원격 주소에 연결합니다.</target>
        </trans-unit>
        <trans-unit id="b9a16316043b0e88caabe9c8a2ee95b0e061cbc4" translate="yes" xml:space="preserve">
          <source>Opens an SCTP channel.</source>
          <target state="translated">SCTP 채널을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="6b75e15fa2e7db5decedcf83e853bf5c078dc78f" translate="yes" xml:space="preserve">
          <source>Opens an SCTP multi channel.</source>
          <target state="translated">SCTP 다중 채널을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="34cf85998cca64d82446efdf62967c544c2a0e0e" translate="yes" xml:space="preserve">
          <source>Opens an SCTP server channel.</source>
          <target state="translated">SCTP 서버 채널을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="2b97b271c57b413e8fbb40e9cc59e4c4fee636be" translate="yes" xml:space="preserve">
          <source>Opens an asynchronous server-socket channel.</source>
          <target state="translated">비동기 서버 소켓 채널을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="5ed35af2285cf9373bbd158d4ee2c092a4789dde" translate="yes" xml:space="preserve">
          <source>Opens an asynchronous socket channel.</source>
          <target state="translated">비동기 소켓 채널을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="3e90a660dd6073386034178fefd9fc557c72b2af" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for reading and/or writing, returning a file channel to access the file.</source>
          <target state="translated">읽기 및 / 또는 쓰기 용 파일을 열거 나 생성하고 파일에 액세스하기위한 파일 채널을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ab05f03b5aa2663b30135dddcd41feb195f3222d" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for reading and/or writing, returning a file channel to access the file. This method works in exactly the manner specified by the &lt;a href=&quot;../../channels/filechannel#open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;FileChannel.open&lt;/code&gt;&lt;/a&gt; method. A provider that does not support all the features required to construct a file channel throws &lt;code&gt;
 UnsupportedOperationException&lt;/code&gt;. The default provider is required to support the creation of file channels. When not overridden, the default implementation throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">읽기 및 / 또는 쓰기를위한 파일을 열거 나 만들고 파일에 액세스하기위한 파일 채널을 반환합니다. 이 메서드는 &lt;a href=&quot;../../channels/filechannel#open(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;FileChannel.open&lt;/code&gt; &lt;/a&gt; 메서드에 지정된 방식으로 정확하게 작동합니다 . 파일 채널을 구성하는 데 필요한 모든 기능을 지원하지 않는 공급자는 &lt;code&gt; UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다. 파일 채널 생성을 지원하려면 기본 공급자가 필요합니다. 재정의되지 않은 경우 기본 구현에서 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 이 발생합니다. 시킵니다.</target>
        </trans-unit>
        <trans-unit id="9800649bd08a6c3d04edfc2f55976a6d17ea7513" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for reading and/or writing, returning a file channel to access the file. This method works in exactly the manner specified by the &lt;a href=&quot;../../channels/filechannel#open-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;FileChannel.open&lt;/code&gt;&lt;/a&gt; method. A provider that does not support all the features required to construct a file channel throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. The default provider is required to support the creation of file channels. When not overridden, the default implementation throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">읽고 쓰기위한 파일을 열거 나 작성하여 파일에 액세스하기 위해 파일 채널을 리턴합니다. 이 메소드는 &lt;a href=&quot;../../channels/filechannel#open-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;FileChannel.open&lt;/code&gt; &lt;/a&gt; 메소드로 지정된 방식으로 정확하게 작동합니다 . 파일 채널을 구성하는 데 필요한 모든 기능을 지원하지 않는 공급자는 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다. 파일 채널 생성을 지원하려면 기본 공급자가 필요합니다. 재정의되지 않으면 기본 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="a7a7e95385e0af7cf39dc03388bac14553a6e5f6" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for reading and/or writing, returning an asynchronous file channel to access the file.</source>
          <target state="translated">읽기 및 / 또는 쓰기를위한 파일을 열거 나 작성하여 파일에 액세스하기 위해 비동기 파일 채널을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="b2eef1c12a3cef5f4a9971e683748b4f4aff9bdc" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for reading and/or writing, returning an asynchronous file channel to access the file. This method works in exactly the manner specified by the &lt;a href=&quot;../../channels/asynchronousfilechannel#open(java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;AsynchronousFileChannel.open&lt;/code&gt;&lt;/a&gt; method. A provider that does not support all the features required to construct an asynchronous file channel throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. The default provider is required to support the creation of asynchronous file channels. When not overridden, the default implementation of this method throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">읽기 및 / 또는 쓰기를위한 파일을 열거 나 만들고 파일에 액세스하기위한 비동기 파일 채널을 반환합니다. 이 메서드는 &lt;a href=&quot;../../channels/asynchronousfilechannel#open(java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;AsynchronousFileChannel.open&lt;/code&gt; &lt;/a&gt; 메서드에 지정된 방식으로 정확하게 작동합니다 . 비동기 파일 채널을 구성하는 데 필요한 모든 기능을 지원하지 않는 공급자는 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다. 비동기 파일 채널 생성을 지원하려면 기본 공급자가 필요합니다. 재정의되지 않은 경우이 메서드의 기본 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 throw합니다. 시킵니다.</target>
        </trans-unit>
        <trans-unit id="7b04706a0baf19d585c754362fca8e99bd601e95" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for reading and/or writing, returning an asynchronous file channel to access the file. This method works in exactly the manner specified by the &lt;a href=&quot;../../channels/asynchronousfilechannel#open-java.nio.file.Path-java.util.Set-java.util.concurrent.ExecutorService-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;AsynchronousFileChannel.open&lt;/code&gt;&lt;/a&gt; method. A provider that does not support all the features required to construct an asynchronous file channel throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. The default provider is required to support the creation of asynchronous file channels. When not overridden, the default implementation of this method throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">읽기 및 / 또는 쓰기를위한 파일을 열거 나 작성하여 파일에 액세스하기 위해 비동기 파일 채널을 리턴합니다. 이 메소드는 &lt;a href=&quot;../../channels/asynchronousfilechannel#open-java.nio.file.Path-java.util.Set-java.util.concurrent.ExecutorService-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;AsynchronousFileChannel.open&lt;/code&gt; &lt;/a&gt; 메소드로 지정된 방식으로 정확하게 작동합니다 . 비동기 파일 채널을 구성하는 데 필요한 모든 기능을 지원하지 않는 공급자는 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다. 기본 파일 제공자는 비동기 파일 채널 작성을 지원해야합니다. 재정의되지 않은 경우이 메소드의 기본 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="b533de0f88d7f6ff6612e119ddc75aaba5572f0a" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for writing, returning a &lt;code&gt;BufferedWriter&lt;/code&gt; that may be used to write text to the file in an efficient manner.</source>
          <target state="translated">쓰기 위해 파일을 열거 나 생성하고 &lt;code&gt;BufferedWriter&lt;/code&gt; 를 반환합니다. 효율적인 방식으로 파일에 텍스트를 쓰는 데 사용할 수 를 .</target>
        </trans-unit>
        <trans-unit id="7df395d7cd660a6ef7b1d21342a583600a68fd28" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for writing, returning a &lt;code&gt;BufferedWriter&lt;/code&gt; that may be used to write text to the file in an efficient manner. The &lt;code&gt;options&lt;/code&gt; parameter specifies how the file is created or opened. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt; if it exists.</source>
          <target state="translated">쓰기를 위해 파일을 열거 나 생성하고 효율적인 방식으로 파일에 텍스트를 쓰는 데 사용할 수 있는 &lt;code&gt;BufferedWriter&lt;/code&gt; 를 반환합니다 . &lt;code&gt;options&lt;/code&gt; 파일을 만들거나 열 방법을 지정하는 매개 변수입니다. 옵션이 없으면이 메서드는 &lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt; 옵션이 있는 것처럼 작동합니다 . 즉, 쓰기 위해 파일을 열고, 파일이없는 경우 파일을 생성하거나, 기존 &lt;a href=&quot;#isRegularFile(java.nio.file.Path,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt; 이 존재하는 경우 처음 에 &lt;code&gt;0&lt;/code&gt; 크기로 잘라 냅니다.</target>
        </trans-unit>
        <trans-unit id="15d507062e4e39e2c94d5f494239f71822026058" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for writing, returning a &lt;code&gt;BufferedWriter&lt;/code&gt; that may be used to write text to the file in an efficient manner. The &lt;code&gt;options&lt;/code&gt; parameter specifies how the the file is created or opened. If no options are present then this method works as if the &lt;a href=&quot;standardopenoption#CREATE&quot;&gt;&lt;code&gt;CREATE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt;&lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;standardopenoption#WRITE&quot;&gt;&lt;code&gt;WRITE&lt;/code&gt;&lt;/a&gt; options are present. In other words, it opens the file for writing, creating the file if it doesn't exist, or initially truncating an existing &lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;regular-file&lt;/code&gt;&lt;/a&gt; to a size of &lt;code&gt;0&lt;/code&gt; if it exists.</source>
          <target state="translated">쓰기 위해 파일을 열거 나 작성 하여 효율적인 방식으로 파일에 텍스트를 쓰는 데 사용될 수 있는 &lt;code&gt;BufferedWriter&lt;/code&gt; 를 반환합니다 . &lt;code&gt;options&lt;/code&gt; 하여 파일을 만들거나 열 방법을 지정하는 매개 변수입니다. 옵션이 없으면이 메소드는 &lt;a href=&quot;standardopenoption#CREATE&quot;&gt; &lt;code&gt;CREATE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;standardopenoption#TRUNCATE_EXISTING&quot;&gt; &lt;code&gt;TRUNCATE_EXISTING&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;standardopenoption#WRITE&quot;&gt; &lt;code&gt;WRITE&lt;/code&gt; &lt;/a&gt; 옵션이 있는 것처럼 작동합니다 . 즉, 파일을 작성하기 위해 파일을 열거 나 존재하지 않는 경우 파일을 작성하거나 기존 &lt;a href=&quot;files#isRegularFile-java.nio.file.Path-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;regular-file&lt;/code&gt; &lt;/a&gt; 을 존재하는 경우 크기를 &lt;code&gt;0&lt;/code&gt; 으로 자릅니다.</target>
        </trans-unit>
        <trans-unit id="32c8025e05d494ce1593d424475f21c0011dfbc0" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for writing, returning a &lt;code&gt;BufferedWriter&lt;/code&gt; to write text to the file in an efficient manner.</source>
          <target state="translated">쓰기위한 파일을 열거 나 생성하고 &lt;code&gt;BufferedWriter&lt;/code&gt; 를 반환 하여 효율적인 방식으로 파일에 텍스트를 씁니다.</target>
        </trans-unit>
        <trans-unit id="17aa0f66d0979fd63e71bf5945ea0e6c5651d914" translate="yes" xml:space="preserve">
          <source>Opens or creates a file for writing, returning a &lt;code&gt;BufferedWriter&lt;/code&gt; to write text to the file in an efficient manner. The text is encoded into bytes for writing using the &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt;&lt;code&gt;UTF-8&lt;/code&gt;&lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">쓰기위한 파일을 열거 나 작성 하여 효율적인 방식으로 파일에 텍스트를 쓰 도록 &lt;code&gt;BufferedWriter&lt;/code&gt; 를 리턴합니다 . 텍스트는 &lt;a href=&quot;../charset/standardcharsets#UTF_8&quot;&gt; &lt;code&gt;UTF-8&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;../charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; 을&lt;/a&gt; 사용하여 쓰기 위해 바이트로 인코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="806bc88a9e68cec10ed30aefec5f9f22fe2a9030" translate="yes" xml:space="preserve">
          <source>Opens or creates a file in this directory, returning a seekable byte channel to access the file.</source>
          <target state="translated">이 디렉토리에서 파일을 열거 나 작성하여 파일에 액세스하기 위해 검색 가능한 바이트 채널을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="2562345eff696e98ec72e55309ac2505168ce318" translate="yes" xml:space="preserve">
          <source>Opens or creates a file, returning a file channel to access the file.</source>
          <target state="translated">파일을 열거 나 작성하여 파일에 액세스하기 위해 파일 채널을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1578c32491189c336d4c884de7414170ed39eb88" translate="yes" xml:space="preserve">
          <source>Opens or creates a file, returning a seekable byte channel to access the file.</source>
          <target state="translated">파일을 열거 나 생성하여 파일에 액세스하기 위해 검색 가능한 바이트 채널을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="ba6a438e8738497305bb557c3bb8409aff21d536" translate="yes" xml:space="preserve">
          <source>Opens or creates a file, returning a seekable byte channel to access the file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;Files.newByteChannel(Path,Set,FileAttribute[])&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">파일을 열거 나 생성하여 파일에 액세스하기위한 검색 가능한 바이트 채널을 반환합니다. 이 메서드는 &lt;a href=&quot;../files#newByteChannel(java.nio.file.Path,java.util.Set,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;Files.newByteChannel(Path,Set,FileAttribute[])&lt;/code&gt; &lt;/a&gt; 메서드에 지정된 방식으로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="541af641138497e308c914ae241971043f5b0f7d" translate="yes" xml:space="preserve">
          <source>Opens or creates a file, returning a seekable byte channel to access the file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;Files.newByteChannel(Path,Set,FileAttribute[])&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">파일을 열거 나 생성하여 파일에 액세스하기 위해 검색 가능한 바이트 채널을 반환합니다. 이 메소드는 &lt;a href=&quot;../files#newByteChannel-java.nio.file.Path-java.util.Set-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;Files.newByteChannel(Path,Set,FileAttribute[])&lt;/code&gt; &lt;/a&gt; 메소드로 지정된 방식으로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="9437d5b1476b422a1f58a1e9b3561c09cba8d601" translate="yes" xml:space="preserve">
          <source>Opens or creates a file, returning an output stream that may be used to write bytes to the file.</source>
          <target state="translated">파일을 열거 나 생성하여 파일에 바이트를 쓰는 데 사용할 수있는 출력 스트림을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="39ba70e8ad7ab77be9a1b0ee0ee0f23fead7c7b6" translate="yes" xml:space="preserve">
          <source>Opens or creates a file, returning an output stream that may be used to write bytes to the file. The resulting stream will not be buffered. The stream will be safe for access by multiple concurrent threads. Whether the returned stream is</source>
          <target state="translated">파일을 열거 나 작성하여 파일에 바이트를 쓰는 데 사용될 수있는 출력 스트림을 리턴합니다. 결과 스트림은 버퍼링되지 않습니다. 스트림은 여러 개의 동시 스레드가 안전하게 액세스 할 수 있습니다. 반환 된 스트림이</target>
        </trans-unit>
        <trans-unit id="a342a7c0726b1ebec3ad2241f423f62c6f69a58d" translate="yes" xml:space="preserve">
          <source>Opens or creates a file, returning an output stream that may be used to write bytes to the file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#newOutputStream(java.nio.file.Path,java.nio.file.OpenOption...)&quot;&gt;&lt;code&gt;Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">파일을 열거 나 생성하여 파일에 바이트를 쓰는 데 사용할 수있는 출력 스트림을 반환합니다. 이 메소드는 &lt;a href=&quot;../files#newOutputStream(java.nio.file.Path,java.nio.file.OpenOption...)&quot;&gt; &lt;code&gt;Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 방식으로 정확히 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="2dab53d65cf6ecda786158b5647fae0e1935404a" translate="yes" xml:space="preserve">
          <source>Opens or creates a file, returning an output stream that may be used to write bytes to the file. This method works in exactly the manner specified by the &lt;a href=&quot;../files#newOutputStream-java.nio.file.Path-java.nio.file.OpenOption...-&quot;&gt;&lt;code&gt;Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">파일을 열거 나 작성하여 파일에 바이트를 쓰는 데 사용될 수있는 출력 스트림을 리턴합니다. 이 메소드는 &lt;a href=&quot;../files#newOutputStream-java.nio.file.Path-java.nio.file.OpenOption...-&quot;&gt; &lt;code&gt;Files.newOutputStream(java.nio.file.Path, java.nio.file.OpenOption...)&lt;/code&gt; &lt;/a&gt; 메소드로 지정된 방식으로 정확하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="f5d502eefc9573ba8f32c2cdda9352ee4a2fb3fb" translate="yes" xml:space="preserve">
          <source>Opens the clip with the format and audio data present in the provided audio input stream.</source>
          <target state="translated">제공된 오디오 입력 스트림에있는 형식 및 오디오 데이터로 클립을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="12036391b9b4f98721f11061056efd459d02bbed" translate="yes" xml:space="preserve">
          <source>Opens the clip with the format and audio data present in the provided audio input stream. Opening a clip means that it should acquire any required system resources and become operational. If this operation input stream. If this operation succeeds, the line is marked open and an &lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt; event is dispatched to the line's listeners.</source>
          <target state="translated">제공된 오디오 입력 스트림에있는 형식 및 오디오 데이터로 클립을 엽니 다. 클립을 열면 필요한 시스템 리소스를 확보하고 작동하게됩니다. 이 작업 입력 스트림. 이 작업이 성공하면 해당 줄은 열린 상태로 표시되고 &lt;a href=&quot;lineevent.type#OPEN&quot;&gt; &lt;code&gt;OPEN&lt;/code&gt; &lt;/a&gt; 이벤트가 라인의 리스너에게 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="3cbb0f40ba6016150559757008977a0140089a0f" translate="yes" xml:space="preserve">
          <source>Opens the clip with the format and audio data present in the provided audio input stream. Opening a clip means that it should acquire any required system resources and become operational. If this operation input stream. If this operation succeeds, the line is marked open and an &lt;code&gt;&lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event is dispatched to the line's listeners.</source>
          <target state="translated">제공된 오디오 입력 스트림에 형식 및 오디오 데이터가있는 클립을 엽니 다. 클립을 열면 필요한 시스템 리소스를 확보하고 작동해야합니다. 이 작업이 스트림 인 경우. 이 작업이 성공하면 회선이 열린 것으로 표시되고 &lt;code&gt;&lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 이벤트가 회선의 리스너로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="a60a11040ae43a37ee717ce2fd107bcc4b478ec6" translate="yes" xml:space="preserve">
          <source>Opens the clip, meaning that it should acquire any required system resources and become operational.</source>
          <target state="translated">클립을 엽니 다. 즉, 필요한 시스템 리소스를 획득하고 작동해야합니다.</target>
        </trans-unit>
        <trans-unit id="4619ae261334ef528ae44c2c45250242195a470f" translate="yes" xml:space="preserve">
          <source>Opens the clip, meaning that it should acquire any required system resources and become operational. The clip is opened with the format and audio data indicated. If this operation succeeds, the line is marked as open and an &lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt; event is dispatched to the line's listeners.</source>
          <target state="translated">클립을 엽니 다. 즉, 필요한 시스템 리소스를 획득하고 작동해야합니다. 표시된 형식 및 오디오 데이터로 클립이 열립니다. 이 작업이 성공하면 해당 줄은 열린 것으로 표시되고 &lt;a href=&quot;lineevent.type#OPEN&quot;&gt; &lt;code&gt;OPEN&lt;/code&gt; &lt;/a&gt; 이벤트가 해당 줄의 리스너에게 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="eea348600399f4d5e4325cab5f7dd718382b3154" translate="yes" xml:space="preserve">
          <source>Opens the clip, meaning that it should acquire any required system resources and become operational. The clip is opened with the format and audio data indicated. If this operation succeeds, the line is marked as open and an &lt;code&gt;&lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; event is dispatched to the line's listeners.</source>
          <target state="translated">클립을 엽니 다. 즉, 필요한 시스템 리소스를 확보하고 작동해야합니다. 형식과 오디오 데이터가 표시된 상태로 클립이 열립니다. 이 작업이 성공하면 회선이 열린 것으로 표시되고 &lt;code&gt;&lt;a href=&quot;lineevent.type#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 이벤트가 회선의 리스너로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="40166dcc708c3df898f71659885373af2685f2a2" translate="yes" xml:space="preserve">
          <source>Opens the device, indicating that it should now acquire any system resources it requires and become operational.</source>
          <target state="translated">장치를 열어 필요한 모든 시스템 리소스를 가져 와서 작동해야 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="77940f8e64161262b2b50d1612c0b108378dfcba" translate="yes" xml:space="preserve">
          <source>Opens the directory identified by the given path, returning a &lt;code&gt;
 SecureDirectoryStream&lt;/code&gt; to iterate over the entries in the directory.</source>
          <target state="translated">주어진 경로로 식별되는 디렉토리를 &lt;code&gt; SecureDirectoryStream&lt;/code&gt; 반환합니다. 을 하여 디렉토리의 항목을 반복합니다.</target>
        </trans-unit>
        <trans-unit id="db199ac89a53082d98b9259df975194b4472cc1d" translate="yes" xml:space="preserve">
          <source>Opens the directory identified by the given path, returning a &lt;code&gt;SecureDirectoryStream&lt;/code&gt; to iterate over the entries in the directory.</source>
          <target state="translated">주어진 경로로 식별 된 디렉토리를 &lt;code&gt;SecureDirectoryStream&lt;/code&gt; 디렉토리의 항목을 반복 하는 SecureDirectoryStream 을 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="7008dc1af7408bdfd7a38e1ec880ca5947e6e4cf" translate="yes" xml:space="preserve">
          <source>Opens the line with the specified format and requested buffer size, causing the line to acquire any required system resources and become operational.</source>
          <target state="translated">지정된 형식과 요청 된 버퍼 크기로 회선을 열어 회선이 필요한 시스템 자원을 확보하고 작동하게합니다.</target>
        </trans-unit>
        <trans-unit id="30f5963e7a4513fef8bf54c313aa7a102d9e6cfa" translate="yes" xml:space="preserve">
          <source>Opens the line with the specified format and suggested buffer size, causing the line to acquire any required system resources and become operational.</source>
          <target state="translated">지정된 형식과 제안 된 버퍼 크기로 라인을 열어 필요한 시스템 자원을 확보하고 작동하게합니다.</target>
        </trans-unit>
        <trans-unit id="addae188d4453b10bd2d2b6644a21dc74bd08507" translate="yes" xml:space="preserve">
          <source>Opens the line with the specified format, causing the line to acquire any required system resources and become operational.</source>
          <target state="translated">지정된 형식으로 회선을 열어 회선이 필요한 시스템 자원을 확보하고 작동하게합니다.</target>
        </trans-unit>
        <trans-unit id="904cbf0e43b55d8771af78f28ef5dc2e5cc6ecdf" translate="yes" xml:space="preserve">
          <source>Opens the line, indicating that it should acquire any required system resources and become operational.</source>
          <target state="translated">필요한 시스템 리소스를 확보하고 작동해야 함을 나타내는 줄을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="a218f32cc18db8a8c98e348593efa95ee420460a" translate="yes" xml:space="preserve">
          <source>Opens the line, indicating that it should acquire any required system resources and become operational. If this operation succeeds, the line is marked as open, and an &lt;code&gt;OPEN&lt;/code&gt; event is dispatched to the line's listeners.</source>
          <target state="translated">회선을 열어 필요한 시스템 자원을 확보하고 작동해야 함을 나타냅니다. 이 작업이 성공하면 회선이 열린 것으로 표시되고 &lt;code&gt;OPEN&lt;/code&gt; 이벤트가 회선의 리스너로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="806fbcad9ee52558c8d64de43ac1ad03e88355e6" translate="yes" xml:space="preserve">
          <source>Opens the module content for reading.</source>
          <target state="translated">읽을 모듈 콘텐츠를 엽니 다.</target>
        </trans-unit>
        <trans-unit id="477dbd23cd06294f5fbd2b5e57c0ab0bbfd208b7" translate="yes" xml:space="preserve">
          <source>Opens the native help viewer application.</source>
          <target state="translated">기본 도움말 뷰어 애플리케이션을 엽니 다.</target>
        </trans-unit>
        <trans-unit id="c0f3a0eb7b36b68c7f8234cfed4e041d7d49d80d" translate="yes" xml:space="preserve">
          <source>OpensTree</source>
          <target state="translated">OpensTree</target>
        </trans-unit>
        <trans-unit id="0c7b4e1ff412135b0216a5589c3cf6cf333a7fc8" translate="yes" xml:space="preserve">
          <source>Operating on a closed stream behaves as if the end of stream has been reached. Due to read-ahead, one or more elements may be returned after the stream has been closed.</source>
          <target state="translated">닫힌 스트림에서 작업하면 스트림 끝에 도달 한 것처럼 작동합니다. 미리 읽기로 인해 스트림이 닫힌 후 하나 이상의 요소가 반환 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf273ba59b9ed7fd1463a3dea59d4f402d07f8c4" translate="yes" xml:space="preserve">
          <source>Operating system architecture</source>
          <target state="translated">운영 체제 아키텍처</target>
        </trans-unit>
        <trans-unit id="5f6b6ec8214d5a37d84174d2b0ab86063020ec51" translate="yes" xml:space="preserve">
          <source>Operating system name</source>
          <target state="translated">운영 체제 이름</target>
        </trans-unit>
        <trans-unit id="d8623dd1b7e9d853708b7d57679c46236fb6c059" translate="yes" xml:space="preserve">
          <source>Operating system version</source>
          <target state="translated">운영 체제 버전</target>
        </trans-unit>
        <trans-unit id="850dd353734df5346b81639c337ec26ac5830f23" translate="yes" xml:space="preserve">
          <source>Operating systems that implement the &lt;a href=&quot;http://www.opengroup.org&quot;&gt; POSIX&lt;/a&gt; family of standards commonly use file systems that have a file &lt;em&gt;owner&lt;/em&gt;, &lt;em&gt;group-owner&lt;/em&gt;, and related &lt;em&gt;access permissions&lt;/em&gt;. This file attribute view provides read and write access to these attributes.</source>
          <target state="translated">&lt;a href=&quot;http://www.opengroup.org&quot;&gt;POSIX&lt;/a&gt; 표준 제품군 을 구현하는 운영 체제는 일반적으로 파일 &lt;em&gt;소유자&lt;/em&gt; , &lt;em&gt;그룹 소유자&lt;/em&gt; 및 관련 &lt;em&gt;액세스 권한&lt;/em&gt; 이있는 파일 시스템을 사용합니다 . 이 파일 속성보기는 이러한 속성에 대한 읽기 및 쓰기 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="86798f76d41c397654e941ced2c284b371421c94" translate="yes" xml:space="preserve">
          <source>Operating systems that implement the &lt;a href=&quot;https://www.opengroup.org&quot;&gt; POSIX&lt;/a&gt; family of standards commonly use file systems that have a file &lt;em&gt;owner&lt;/em&gt;, &lt;em&gt;group-owner&lt;/em&gt;, and related &lt;em&gt;access permissions&lt;/em&gt;. This file attribute view provides read and write access to these attributes.</source>
          <target state="translated">&lt;a href=&quot;https://www.opengroup.org&quot;&gt;POSIX&lt;/a&gt; 표준 제품군 을 구현하는 운영 체제는 일반적으로 파일 &lt;em&gt;소유자&lt;/em&gt; , &lt;em&gt;그룹 소유자&lt;/em&gt; 및 관련 &lt;em&gt;액세스 권한&lt;/em&gt; 이있는 파일 시스템을 사용합니다 . 이 파일 속성보기는 이러한 속성에 대한 읽기 및 쓰기 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="81620b5ba38a8a4cc84857c276a912982c18c04d" translate="yes" xml:space="preserve">
          <source>OperatingSystemMXBean</source>
          <target state="translated">OperatingSystemMXBean</target>
        </trans-unit>
        <trans-unit id="654a2005cdab27ea113ac0befc67c8eb26a95172" translate="yes" xml:space="preserve">
          <source>OperatingSystemMXBean.getArch()</source>
          <target state="translated">OperatingSystemMXBean.getArch()</target>
        </trans-unit>
        <trans-unit id="8d3d350511a0e2e0e0663dd8917239feb612f36f" translate="yes" xml:space="preserve">
          <source>OperatingSystemMXBean.getAvailableProcessors()</source>
          <target state="translated">OperatingSystemMXBean.getAvailableProcessors()</target>
        </trans-unit>
        <trans-unit id="2429927bbc280d38ac598fb4d14f3500a56468cb" translate="yes" xml:space="preserve">
          <source>OperatingSystemMXBean.getName()</source>
          <target state="translated">OperatingSystemMXBean.getName()</target>
        </trans-unit>
        <trans-unit id="65284a438c25b865809988b8f61a8f0ade129da1" translate="yes" xml:space="preserve">
          <source>OperatingSystemMXBean.getSystemLoadAverage()</source>
          <target state="translated">OperatingSystemMXBean.getSystemLoadAverage()</target>
        </trans-unit>
        <trans-unit id="fa8ec9d5b4a13fe4113e0123c48ac646e8d900b6" translate="yes" xml:space="preserve">
          <source>OperatingSystemMXBean.getVersion()</source>
          <target state="translated">OperatingSystemMXBean.getVersion()</target>
        </trans-unit>
        <trans-unit id="430d32076eb256f0fb1db5fd1333254c368ef1ba" translate="yes" xml:space="preserve">
          <source>Operation</source>
          <target state="translated">Operation</target>
        </trans-unit>
        <trans-unit id="bb11af703cabdef2f32f8bb5ac9007dc4f0603e7" translate="yes" xml:space="preserve">
          <source>Operation name.</source>
          <target state="translated">작업 이름</target>
        </trans-unit>
        <trans-unit id="224317adde2729a1db283efab53e8ab499097e17" translate="yes" xml:space="preserve">
          <source>Operation that associates a name with another operation.</source>
          <target state="translated">이름을 다른 작업과 연결하는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="682742a41d2fdc09e0861edd49d1a1e632cd4fb5" translate="yes" xml:space="preserve">
          <source>Operation that associates a name with another operation. Typically used with operations that normally take a name or an index to bind them to a fixed name. E.g.</source>
          <target state="translated">이름을 다른 작업과 연결하는 작업입니다. 일반적으로 이름이나 인덱스를 사용하여 고정 된 이름에 바인딩하는 작업에 사용됩니다. 예</target>
        </trans-unit>
        <trans-unit id="674b53284a30ce119efc25ee2e0aa59c924bf1aa" translate="yes" xml:space="preserve">
          <source>Operation unauthorized.</source>
          <target state="translated">권한이없는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="fb3c98349de1d1e6d879fe05ceb7157e8421ef65" translate="yes" xml:space="preserve">
          <source>Operation unavailable.</source>
          <target state="translated">사용할 수없는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="593bc24cd9e051fb6da61f695a35de2158082a1b" translate="yes" xml:space="preserve">
          <source>Operation-set bit for read operations.</source>
          <target state="translated">읽기 작업을위한 작업 세트 비트.</target>
        </trans-unit>
        <trans-unit id="87582597e58da90e9c254541e9814884798492f7" translate="yes" xml:space="preserve">
          <source>Operation-set bit for socket-accept operations.</source>
          <target state="translated">소켓 수락 조작을위한 조작 세트 비트.</target>
        </trans-unit>
        <trans-unit id="8154e7625762b13759970ea70151add6ea8d9235" translate="yes" xml:space="preserve">
          <source>Operation-set bit for socket-connect operations.</source>
          <target state="translated">소켓 연결 작업을위한 작업 세트 비트.</target>
        </trans-unit>
        <trans-unit id="d5a495f3decfc94f776ceb20271afba362182891" translate="yes" xml:space="preserve">
          <source>Operation-set bit for write operations.</source>
          <target state="translated">쓰기 작업을위한 작업 세트 비트.</target>
        </trans-unit>
        <trans-unit id="adc130598b41a94eabc5a97263406a6b5399dfc8" translate="yes" xml:space="preserve">
          <source>OperationNotSupportedException</source>
          <target state="translated">OperationNotSupportedException</target>
        </trans-unit>
        <trans-unit id="2be3ef663cbc5bbc8dad8cf0c4a9737ef3aa9bbf" translate="yes" xml:space="preserve">
          <source>Operational Attributes</source>
          <target state="translated">운영 속성</target>
        </trans-unit>
        <trans-unit id="0b275a6f26109226264308aeee264e9247442882" translate="yes" xml:space="preserve">
          <source>Operations on URI instances</source>
          <target state="translated">URI 인스턴스에 대한 작업</target>
        </trans-unit>
        <trans-unit id="e439fdbf03c2a7220d20e09ea7c8a48b0e1f1547" translate="yes" xml:space="preserve">
          <source>Operations on multiple namespaces</source>
          <target state="translated">여러 네임 스페이스에 대한 작업</target>
        </trans-unit>
        <trans-unit id="fa07625dde73dbf45043b5e487602929523b7412" translate="yes" xml:space="preserve">
          <source>Operations on this class make no guarantees about the ordering of elements with equal priority. If you need to enforce an ordering, you can define custom classes or comparators that use a secondary key to break ties in primary priority values. For example, here is a class that applies first-in-first-out tie-breaking to comparable elements. To use it, you would insert a &lt;code&gt;new FIFOEntry(anEntry)&lt;/code&gt; instead of a plain entry object.</source>
          <target state="translated">이 클래스에서의 조작은 우선 순위가 동일한 요소의 순서를 보증하지 않습니다. 순서를 적용해야하는 경우 보조 키를 사용하여 기본 우선 순위 값으로 묶는 사용자 정의 클래스 또는 비교기를 정의 할 수 있습니다. 예를 들어, 다음은 선입 선출 방식을 유사한 요소에 적용하는 클래스입니다. 이를 사용하려면 일반 입력 개체 대신 &lt;code&gt;new FIFOEntry(anEntry)&lt;/code&gt; 를 삽입해야 합니다.</target>
        </trans-unit>
        <trans-unit id="180b43c66f97341ecbd004b08bb4c5c88dd48f0f" translate="yes" xml:space="preserve">
          <source>Operations over Duration</source>
          <target state="translated">기간에 따른 작업</target>
        </trans-unit>
        <trans-unit id="83b3b676da67810398df641aeb622d2ffaf57596" translate="yes" xml:space="preserve">
          <source>Operations with multiple namespaces are helpful in implementation of languages that don't distinguish between one or more of the namespaces, or when expressing operations against objects that can be considered both ordinary objects and collections, e.g. Java &lt;a href=&quot;../../../java.base/java/util/map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; objects. A &lt;code&gt;GET:PROPERTY|ELEMENT:empty&lt;/code&gt; operation against a Java map will always match the &lt;a href=&quot;../../../java.base/java/util/map#isEmpty()&quot;&gt;&lt;code&gt;Map.isEmpty()&lt;/code&gt;&lt;/a&gt; property, but &lt;code&gt;GET:ELEMENT|PROPERTY:empty&lt;/code&gt; will actually match a map element with key &lt;code&gt;&quot;empty&quot;&lt;/code&gt; if the map contains that key, and only fall back to the &lt;code&gt;isEmpty()&lt;/code&gt; property getter if the map does not contain the key. If the source language mandates this semantics, it can be easily achieved using operations on multiple namespaces.</source>
          <target state="translated">여러 네임 스페이스를 사용하는 작업은 하나 이상의 네임 스페이스를 구분하지 않는 언어를 구현하거나 Java &lt;a href=&quot;../../../java.base/java/util/map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 개체 와 같이 일반 개체와 컬렉션 모두로 간주 될 수있는 개체에 대한 작업을 표현할 때 유용 합니다. &lt;code&gt;GET:PROPERTY|ELEMENT:empty&lt;/code&gt; 자바지도에 대한 작업이 항상 일치 &lt;a href=&quot;../../../java.base/java/util/map#isEmpty()&quot;&gt; &lt;code&gt;Map.isEmpty()&lt;/code&gt; &lt;/a&gt; 속성을하지만, &lt;code&gt;GET:ELEMENT|PROPERTY:empty&lt;/code&gt; 실제로 키와지도 요소와 일치합니다 &lt;code&gt;&quot;empty&quot;&lt;/code&gt; 맵이 그 키가 포함되어있는 경우, 지도에 키가 포함되어 있지 않은 경우 에만 &lt;code&gt;isEmpty()&lt;/code&gt; 속성 getter로 돌아갑니다 . 소스 언어가이 의미를 요구하는 경우 여러 네임 스페이스에 대한 작업을 사용하여 쉽게 달성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1869352dcb59a25610b5f146143cd64285939004" translate="yes" xml:space="preserve">
          <source>OperationsException</source>
          <target state="translated">OperationsException</target>
        </trans-unit>
        <trans-unit id="0db37efcd4e744eb036a7330ad91c33fb1585d75" translate="yes" xml:space="preserve">
          <source>Optical bounds.</source>
          <target state="translated">광학 경계.</target>
        </trans-unit>
        <trans-unit id="1259602ebad4b72b4a70febe11bd4e755b909cc4" translate="yes" xml:space="preserve">
          <source>Optical bounds. Table tag &quot;opbd&quot; in the Open Type Specification.</source>
          <target state="translated">광학 경계. Open Type 사양의 테이블 태그 「opbd」입니다.</target>
        </trans-unit>
        <trans-unit id="15bc12009f8853734005a2272e87b379140d251f" translate="yes" xml:space="preserve">
          <source>Optimizes a list of type-based linkers.</source>
          <target state="translated">유형 기반 링커 목록을 최적화합니다.</target>
        </trans-unit>
        <trans-unit id="1a9803ee0deb93e5c7ce3f295d84fc7386e48d29" translate="yes" xml:space="preserve">
          <source>Optimizes a list of type-based linkers. If a group of adjacent linkers in the list all implement &lt;a href=&quot;../typebasedguardingdynamiclinker&quot;&gt;&lt;code&gt;TypeBasedGuardingDynamicLinker&lt;/code&gt;&lt;/a&gt;, they will be replaced with a single instance of &lt;a href=&quot;compositetypebasedguardingdynamiclinker&quot;&gt;&lt;code&gt;CompositeTypeBasedGuardingDynamicLinker&lt;/code&gt;&lt;/a&gt; that contains them.</source>
          <target state="translated">유형 기반 링커 목록을 최적화합니다. 목록에있는 인접한 링커 그룹이 모두 &lt;a href=&quot;../typebasedguardingdynamiclinker&quot;&gt; &lt;code&gt;TypeBasedGuardingDynamicLinker&lt;/code&gt; 를&lt;/a&gt; 구현 하면이 를 포함하는 &lt;a href=&quot;compositetypebasedguardingdynamiclinker&quot;&gt; &lt;code&gt;CompositeTypeBasedGuardingDynamicLinker&lt;/code&gt; &lt;/a&gt; 의 단일 인스턴스로 대체 됩니다.</target>
        </trans-unit>
        <trans-unit id="e31d972229de381b461860014dd710856361917a" translate="yes" xml:space="preserve">
          <source>Option</source>
          <target state="translated">Option</target>
        </trans-unit>
        <trans-unit id="f07fe85d489719b4ee47ff179173df36a9acce0c" translate="yes" xml:space="preserve">
          <source>Option Name</source>
          <target state="translated">옵션 이름</target>
        </trans-unit>
        <trans-unit id="dc8489237dde6c516ea797a2733b6a79d2946bb5" translate="yes" xml:space="preserve">
          <source>Option label for use in hierarchical menus.</source>
          <target state="translated">계층 적 메뉴에서 사용하기위한 옵션 레이블입니다.</target>
        </trans-unit>
        <trans-unit id="3a0b8e6f73ca3b615b1f959baeb1ba86b6d0c1d8" translate="yes" xml:space="preserve">
          <source>Option label for use in hierarchical menus. See the label attribute definition in HTML 4.0.</source>
          <target state="translated">계층 적 메뉴에서 사용하기위한 옵션 레이블입니다. HTML 4.0의 레이블 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="58f8116360c2e1f6f2e05b5c3b946dfccdab7472" translate="yes" xml:space="preserve">
          <source>Option type, one of &lt;code&gt;DEFAULT_OPTION&lt;/code&gt;, &lt;code&gt;YES_NO_OPTION&lt;/code&gt;, &lt;code&gt;YES_NO_CANCEL_OPTION&lt;/code&gt; or &lt;code&gt;OK_CANCEL_OPTION&lt;/code&gt;.</source>
          <target state="translated">옵션 유형, &lt;code&gt;DEFAULT_OPTION&lt;/code&gt; , &lt;code&gt;YES_NO_OPTION&lt;/code&gt; , &lt;code&gt;YES_NO_CANCEL_OPTION&lt;/code&gt; 또는 &lt;code&gt;OK_CANCEL_OPTION&lt;/code&gt; 중 하나 .</target>
        </trans-unit>
        <trans-unit id="a8870bfd1a96f21835e2901900c4b14348dd1837" translate="yes" xml:space="preserve">
          <source>OptionChecker</source>
          <target state="translated">OptionChecker</target>
        </trans-unit>
        <trans-unit id="4764729cc3ddc326edf4ac7b502ef5b5bacbb380" translate="yes" xml:space="preserve">
          <source>OptionChecker.isSupportedOption()</source>
          <target state="translated">OptionChecker.isSupportedOption()</target>
        </trans-unit>
        <trans-unit id="56c5370ea18dba053b19080eb58d85ac53dabaa1" translate="yes" xml:space="preserve">
          <source>OptionDialogBorder</source>
          <target state="translated">OptionDialogBorder</target>
        </trans-unit>
        <trans-unit id="93152d03a89c12034974d7293f0cc9001a86dee1" translate="yes" xml:space="preserve">
          <source>OptionPane region.</source>
          <target state="translated">OptionPane 영역.</target>
        </trans-unit>
        <trans-unit id="f7b02ecf2bf05a638c506b87a97a82aad97c9361" translate="yes" xml:space="preserve">
          <source>OptionPane region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;OptionPane&lt;/code&gt;.</source>
          <target state="translated">OptionPane 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 &lt;code&gt;OptionPane&lt;/code&gt; 이라는 이름을 사용하십시오. .</target>
        </trans-unit>
        <trans-unit id="506b7147a18871e9747ff213e177f54f2b9e9fcd" translate="yes" xml:space="preserve">
          <source>OptionPaneUI</source>
          <target state="translated">OptionPaneUI</target>
        </trans-unit>
        <trans-unit id="0c6c4102d4dfec3b1aa41117e0e344046c58a151" translate="yes" xml:space="preserve">
          <source>Optional</source>
          <target state="translated">Optional</target>
        </trans-unit>
        <trans-unit id="15c3b5212c6f47ce3e7d3f05d2f219f6859d2ab7" translate="yes" xml:space="preserve">
          <source>Optional &lt;code&gt;LoginModule&lt;/code&gt;.</source>
          <target state="translated">선택적 &lt;code&gt;LoginModule&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4f8adb8618d7fb5481d23e3acce7fb5f34c374b3" translate="yes" xml:space="preserve">
          <source>Optional Element</source>
          <target state="translated">선택적 요소</target>
        </trans-unit>
        <trans-unit id="35dfeb89683405beb4ab84d3bd1c4f5c265f2970" translate="yes" xml:space="preserve">
          <source>Optional Element Summary</source>
          <target state="translated">선택적 요소 요약</target>
        </trans-unit>
        <trans-unit id="b6cba1090ba1a4446942c531ee82576b48e30fb8" translate="yes" xml:space="preserve">
          <source>Optional Elements</source>
          <target state="translated">선택적 요소</target>
        </trans-unit>
        <trans-unit id="18c72782b7f58468994aea9f822d2b14797753a5" translate="yes" xml:space="preserve">
          <source>Optional Fields</source>
          <target state="translated">선택적 필드</target>
        </trans-unit>
        <trans-unit id="992951cbc83e62c8896c9573eca373fa8bb4705c" translate="yes" xml:space="preserve">
          <source>Optional Specific Exceptions</source>
          <target state="translated">선택적 특정 예외</target>
        </trans-unit>
        <trans-unit id="7d34e7fba4d302a925d2adab53def5e020cfebb5" translate="yes" xml:space="preserve">
          <source>Optional base URI for applet.</source>
          <target state="translated">애플릿에 대한 선택적 기본 URI입니다.</target>
        </trans-unit>
        <trans-unit id="b8718bdb54bfddb1d853b7d857a2823c6c7be6ab" translate="yes" xml:space="preserve">
          <source>Optional base URI for applet. See the codebase attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">애플릿에 대한 선택적 기본 URI입니다. HTML 4.0의 코드베이스 속성 정의를 참조하십시오. 이 속성은 HTML 4.0에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e24bb4e80521a5797d27ecb3c537f28e709c6c43" translate="yes" xml:space="preserve">
          <source>Optional for the Java SE Platform:</source>
          <target state="translated">Java SE 플랫폼의 경우 선택 사항 :</target>
        </trans-unit>
        <trans-unit id="ed887c132070435d2ab3eeece326e10c088ac026" translate="yes" xml:space="preserve">
          <source>Optional interface that can be implemented by &lt;a href=&quot;guardingdynamiclinker&quot;&gt;&lt;code&gt;GuardingDynamicLinker&lt;/code&gt;&lt;/a&gt; implementations to provide language-specific type conversion capabilities.</source>
          <target state="translated">언어 별 유형 변환 기능을 제공하기 위해 &lt;a href=&quot;guardingdynamiclinker&quot;&gt; &lt;code&gt;GuardingDynamicLinker&lt;/code&gt; &lt;/a&gt; 구현 으로 구현할 수있는 선택적 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="c22f1f50dda7b2007c3464b1bcc3e7e84467f189" translate="yes" xml:space="preserve">
          <source>Optional interface that can be implemented by &lt;a href=&quot;guardingdynamiclinker&quot;&gt;&lt;code&gt;GuardingDynamicLinker&lt;/code&gt;&lt;/a&gt; implementations to provide language-specific type conversion capabilities. Note that if you implement this interface, you will very likely want to implement &lt;a href=&quot;conversioncomparator&quot;&gt;&lt;code&gt;ConversionComparator&lt;/code&gt;&lt;/a&gt; interface too, as your additional language-specific conversions, in absence of a strategy for prioritizing these conversions, will cause more ambiguity for &lt;a href=&quot;../beans/beanslinker&quot;&gt;&lt;code&gt;BeansLinker&lt;/code&gt;&lt;/a&gt; in selecting the correct overload when trying to link to an overloaded Java method.</source>
          <target state="translated">언어 별 유형 변환 기능을 제공하기 위해 &lt;a href=&quot;guardingdynamiclinker&quot;&gt; &lt;code&gt;GuardingDynamicLinker&lt;/code&gt; &lt;/a&gt; 구현 으로 구현할 수있는 선택적 인터페이스입니다 . 이 인터페이스를 구현하면 &lt;a href=&quot;conversioncomparator&quot;&gt; &lt;code&gt;ConversionComparator&lt;/code&gt; &lt;/a&gt; 인터페이스도 구현하고 싶을 가능성이 큽니다. 이러한 변환의 우선 순위를 지정하는 전략이없는 추가 언어 별 변환으로 인해 &lt;a href=&quot;../beans/beanslinker&quot;&gt; &lt;code&gt;BeansLinker&lt;/code&gt; &lt;/a&gt; 가 시도 할 때 올바른 오버로드를 선택하는 데 더 많은 모호함이 발생하기 때문 입니다. 오버로드 된 Java 메소드에 링크합니다.</target>
        </trans-unit>
        <trans-unit id="d6046b07eca6162da21c646517084bda79558447" translate="yes" xml:space="preserve">
          <source>Optional interface to be implemented by &lt;a href=&quot;guardingtypeconverterfactory&quot;&gt;&lt;code&gt;GuardingTypeConverterFactory&lt;/code&gt;&lt;/a&gt; implementers.</source>
          <target state="translated">&lt;a href=&quot;guardingtypeconverterfactory&quot;&gt; &lt;code&gt;GuardingTypeConverterFactory&lt;/code&gt; &lt;/a&gt; 구현자가 구현할 선택적 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="172f1f733769d706a1fa3ac712829f1235ae7b08" translate="yes" xml:space="preserve">
          <source>Optional interface to be implemented by &lt;a href=&quot;guardingtypeconverterfactory&quot;&gt;&lt;code&gt;GuardingTypeConverterFactory&lt;/code&gt;&lt;/a&gt; implementers. Language-specific conversions can cause increased overloaded method resolution ambiguity, as many methods can become applicable because of additional conversions. The static way of selecting the &quot;most specific&quot; method will fail more often, because there will be multiple maximally specific method with unrelated signatures. In these cases, language runtimes can be asked to resolve the ambiguity by expressing preferences for one conversion over the other.</source>
          <target state="translated">&lt;a href=&quot;guardingtypeconverterfactory&quot;&gt; &lt;code&gt;GuardingTypeConverterFactory&lt;/code&gt; &lt;/a&gt; 구현자가 구현할 선택적 인터페이스 입니다. 언어 별 변환은 추가 변환으로 인해 많은 메서드를 적용 할 수 있으므로 오버로드 된 메서드 확인 모호성을 증가시킬 수 있습니다. &quot;가장 구체적인&quot;방법을 선택하는 정적 인 방법은 더 자주 실패합니다. 그 이유는 관련없는 서명이있는 최대 특정 방법이 여러 개 있기 때문입니다. 이러한 경우 언어 런타임은 한 변환에 대한 기본 설정을 다른 변환에 대해 표현하여 모호성을 해결하도록 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c3054c73ad93a86af934a2bf769ab2dfee1519da" translate="yes" xml:space="preserve">
          <source>Optional.empty()</source>
          <target state="translated">Optional.empty()</target>
        </trans-unit>
        <trans-unit id="725eab4fcd984559f035f5b2ddf609341b8f7325" translate="yes" xml:space="preserve">
          <source>Optional.equals()</source>
          <target state="translated">Optional.equals()</target>
        </trans-unit>
        <trans-unit id="c730df5f126bf313a88f2b29abc280444a784f9a" translate="yes" xml:space="preserve">
          <source>Optional.filter()</source>
          <target state="translated">Optional.filter()</target>
        </trans-unit>
        <trans-unit id="3c598baddae83eeb68bf2cc52be141d992dc7223" translate="yes" xml:space="preserve">
          <source>Optional.flatMap()</source>
          <target state="translated">Optional.flatMap()</target>
        </trans-unit>
        <trans-unit id="ba5f0ce21dcc7c272b94dff7a1cd8f61b09109fb" translate="yes" xml:space="preserve">
          <source>Optional.get()</source>
          <target state="translated">Optional.get()</target>
        </trans-unit>
        <trans-unit id="3793603eb5e8edaf116ba96da4596d942386b71d" translate="yes" xml:space="preserve">
          <source>Optional.hashCode()</source>
          <target state="translated">Optional.hashCode()</target>
        </trans-unit>
        <trans-unit id="40d51e2a0c20e8964a307f910664b8eb110cfea9" translate="yes" xml:space="preserve">
          <source>Optional.ifPresent()</source>
          <target state="translated">Optional.ifPresent()</target>
        </trans-unit>
        <trans-unit id="3f0e46bc0da79c9ca69492881a26313548f08ede" translate="yes" xml:space="preserve">
          <source>Optional.isPresent()</source>
          <target state="translated">Optional.isPresent()</target>
        </trans-unit>
        <trans-unit id="79eb671f2b18eef1b822d62c55574042d6e0f2e5" translate="yes" xml:space="preserve">
          <source>Optional.map()</source>
          <target state="translated">Optional.map()</target>
        </trans-unit>
        <trans-unit id="bb51dc90e4e0a579aa58baea82d9c23f60a84b96" translate="yes" xml:space="preserve">
          <source>Optional.of()</source>
          <target state="translated">Optional.of()</target>
        </trans-unit>
        <trans-unit id="8484b92d158e810e31ee60deee3160b36e859310" translate="yes" xml:space="preserve">
          <source>Optional.ofNullable()</source>
          <target state="translated">Optional.ofNullable()</target>
        </trans-unit>
        <trans-unit id="2586f9e15e481fdc70cc8837e639a97e61ed85be" translate="yes" xml:space="preserve">
          <source>Optional.orElse()</source>
          <target state="translated">Optional.orElse()</target>
        </trans-unit>
        <trans-unit id="ded386df6ed0de7793a41181ac08cc17713a806d" translate="yes" xml:space="preserve">
          <source>Optional.orElseGet()</source>
          <target state="translated">Optional.orElseGet()</target>
        </trans-unit>
        <trans-unit id="a04733203428d6206635a216f4cd63846f600e15" translate="yes" xml:space="preserve">
          <source>Optional.orElseThrow()</source>
          <target state="translated">Optional.orElseThrow()</target>
        </trans-unit>
        <trans-unit id="0d4939db8772f2c3d94e585d9e293820d6f70920" translate="yes" xml:space="preserve">
          <source>Optional.toString()</source>
          <target state="translated">Optional.toString()</target>
        </trans-unit>
        <trans-unit id="2ef308a1aac80e6b35d1c07581c14e65bf1da953" translate="yes" xml:space="preserve">
          <source>OptionalDataException</source>
          <target state="translated">OptionalDataException</target>
        </trans-unit>
        <trans-unit id="81170f0eb9ccbbc5c07e1870fa10fb60cad5836a" translate="yes" xml:space="preserve">
          <source>OptionalDouble</source>
          <target state="translated">OptionalDouble</target>
        </trans-unit>
        <trans-unit id="49e52aa0125155484c365ecbdf71a38be1f4c58e" translate="yes" xml:space="preserve">
          <source>OptionalDouble.empty()</source>
          <target state="translated">OptionalDouble.empty()</target>
        </trans-unit>
        <trans-unit id="1d9a629a822e731de9cfc2b18b8cf044682578f0" translate="yes" xml:space="preserve">
          <source>OptionalDouble.equals()</source>
          <target state="translated">OptionalDouble.equals()</target>
        </trans-unit>
        <trans-unit id="73cb269b756d605a11f393a024761139f887f2ce" translate="yes" xml:space="preserve">
          <source>OptionalDouble.getAsDouble()</source>
          <target state="translated">OptionalDouble.getAsDouble()</target>
        </trans-unit>
        <trans-unit id="857c6f8f6c94dfb850de58cd08ffacebb6175990" translate="yes" xml:space="preserve">
          <source>OptionalDouble.hashCode()</source>
          <target state="translated">OptionalDouble.hashCode()</target>
        </trans-unit>
        <trans-unit id="273a9e91b5266d0e4283d1c96f01624bbca95d3e" translate="yes" xml:space="preserve">
          <source>OptionalDouble.ifPresent()</source>
          <target state="translated">OptionalDouble.ifPresent()</target>
        </trans-unit>
        <trans-unit id="d0675fbe33f0d259a584b4f700e922a1bb26bbb7" translate="yes" xml:space="preserve">
          <source>OptionalDouble.isPresent()</source>
          <target state="translated">OptionalDouble.isPresent()</target>
        </trans-unit>
        <trans-unit id="8b2b4123f7cad24e34492f91686188b5ed29c3d5" translate="yes" xml:space="preserve">
          <source>OptionalDouble.of()</source>
          <target state="translated">OptionalDouble.of()</target>
        </trans-unit>
        <trans-unit id="b7d20eb1c6280dfb1360c48422e74941500c7f87" translate="yes" xml:space="preserve">
          <source>OptionalDouble.orElse()</source>
          <target state="translated">OptionalDouble.orElse()</target>
        </trans-unit>
        <trans-unit id="37bb3b97f88e1b3b1923ed6cef3d7d72898ce53f" translate="yes" xml:space="preserve">
          <source>OptionalDouble.orElseGet()</source>
          <target state="translated">OptionalDouble.orElseGet()</target>
        </trans-unit>
        <trans-unit id="5b2ad43b86eb19408260f6cd086cffa9f3026428" translate="yes" xml:space="preserve">
          <source>OptionalDouble.orElseThrow()</source>
          <target state="translated">OptionalDouble.orElseThrow()</target>
        </trans-unit>
        <trans-unit id="9aaf2e2a396f5bfe24a206a6df0dc02f261e6640" translate="yes" xml:space="preserve">
          <source>OptionalDouble.toString()</source>
          <target state="translated">OptionalDouble.toString()</target>
        </trans-unit>
        <trans-unit id="31692c801230855bf73649987f3b096fcb0d3644" translate="yes" xml:space="preserve">
          <source>OptionalInt</source>
          <target state="translated">OptionalInt</target>
        </trans-unit>
        <trans-unit id="3a4381de44e95872f91b4e7f1fa1a016e3af970d" translate="yes" xml:space="preserve">
          <source>OptionalInt.empty()</source>
          <target state="translated">OptionalInt.empty()</target>
        </trans-unit>
        <trans-unit id="fcb0675805d00319102e1df6547db6e08338ffe2" translate="yes" xml:space="preserve">
          <source>OptionalInt.equals()</source>
          <target state="translated">OptionalInt.equals()</target>
        </trans-unit>
        <trans-unit id="f4677df16442b8b52c1c362bfb0f9d9f74399b50" translate="yes" xml:space="preserve">
          <source>OptionalInt.getAsInt()</source>
          <target state="translated">OptionalInt.getAsInt()</target>
        </trans-unit>
        <trans-unit id="4df2539cfc5bf95955b63ee39990e5a331fd441c" translate="yes" xml:space="preserve">
          <source>OptionalInt.hashCode()</source>
          <target state="translated">OptionalInt.hashCode()</target>
        </trans-unit>
        <trans-unit id="8061e1b2b4836aa6bd608cfe654a1624690d32d0" translate="yes" xml:space="preserve">
          <source>OptionalInt.ifPresent()</source>
          <target state="translated">OptionalInt.ifPresent()</target>
        </trans-unit>
        <trans-unit id="95e87393c3a7e0caeaf032ae24412a0708dd9131" translate="yes" xml:space="preserve">
          <source>OptionalInt.isPresent()</source>
          <target state="translated">OptionalInt.isPresent()</target>
        </trans-unit>
        <trans-unit id="895eef3ffb42c42cbd862d6185de612c37b686a2" translate="yes" xml:space="preserve">
          <source>OptionalInt.of()</source>
          <target state="translated">OptionalInt.of()</target>
        </trans-unit>
        <trans-unit id="26ae6cc02b5f4af91b0de96a9879af2d457718e5" translate="yes" xml:space="preserve">
          <source>OptionalInt.orElse()</source>
          <target state="translated">OptionalInt.orElse()</target>
        </trans-unit>
        <trans-unit id="7b04d3c6154a4e081bb2bc9a05c8f2f400fd4f9f" translate="yes" xml:space="preserve">
          <source>OptionalInt.orElseGet()</source>
          <target state="translated">OptionalInt.orElseGet()</target>
        </trans-unit>
        <trans-unit id="e4ae3cde84957ca9dd1947fca0618205480af8c7" translate="yes" xml:space="preserve">
          <source>OptionalInt.orElseThrow()</source>
          <target state="translated">OptionalInt.orElseThrow()</target>
        </trans-unit>
        <trans-unit id="1bc5657a278ab3a6ac36d9cfba90eac189d1a987" translate="yes" xml:space="preserve">
          <source>OptionalInt.toString()</source>
          <target state="translated">OptionalInt.toString()</target>
        </trans-unit>
        <trans-unit id="52bb7d47d4bcb62ec6954881eaf796b68c490ff8" translate="yes" xml:space="preserve">
          <source>OptionalLong</source>
          <target state="translated">OptionalLong</target>
        </trans-unit>
        <trans-unit id="7db964b81c6cc24b2f288ee1ca36ec3bcb0fda43" translate="yes" xml:space="preserve">
          <source>OptionalLong.empty()</source>
          <target state="translated">OptionalLong.empty()</target>
        </trans-unit>
        <trans-unit id="c33db3e8939c057c060966c8011bdafbda1ffc3d" translate="yes" xml:space="preserve">
          <source>OptionalLong.equals()</source>
          <target state="translated">OptionalLong.equals()</target>
        </trans-unit>
        <trans-unit id="4b0d81761f1643d1bc81c2173873f8a274aa07c5" translate="yes" xml:space="preserve">
          <source>OptionalLong.getAsLong()</source>
          <target state="translated">OptionalLong.getAsLong()</target>
        </trans-unit>
        <trans-unit id="5a5f9c371667dc7da91d4cdff7025ba7a82908a6" translate="yes" xml:space="preserve">
          <source>OptionalLong.hashCode()</source>
          <target state="translated">OptionalLong.hashCode()</target>
        </trans-unit>
        <trans-unit id="db87d08ff6731c1c72ace81adbcfae2184adf6cd" translate="yes" xml:space="preserve">
          <source>OptionalLong.ifPresent()</source>
          <target state="translated">OptionalLong.ifPresent()</target>
        </trans-unit>
        <trans-unit id="5f64ea9af46f317b3856ecffee2cb376c40b8a1b" translate="yes" xml:space="preserve">
          <source>OptionalLong.isPresent()</source>
          <target state="translated">OptionalLong.isPresent()</target>
        </trans-unit>
        <trans-unit id="c7d3132c8aee576313cccae9b99934f380d2f55a" translate="yes" xml:space="preserve">
          <source>OptionalLong.of()</source>
          <target state="translated">OptionalLong.of()</target>
        </trans-unit>
        <trans-unit id="1e9decfe6a6d44886eb111a1f80f54902ec9a146" translate="yes" xml:space="preserve">
          <source>OptionalLong.orElse()</source>
          <target state="translated">OptionalLong.orElse()</target>
        </trans-unit>
        <trans-unit id="c540defe740d7c97fcf78ec6b75142c338fb22fd" translate="yes" xml:space="preserve">
          <source>OptionalLong.orElseGet()</source>
          <target state="translated">OptionalLong.orElseGet()</target>
        </trans-unit>
        <trans-unit id="56505dce0e2d8ea78acf5fbb4b22a7c191f439d9" translate="yes" xml:space="preserve">
          <source>OptionalLong.orElseThrow()</source>
          <target state="translated">OptionalLong.orElseThrow()</target>
        </trans-unit>
        <trans-unit id="1b641ec13ded0f8654b03294fac99fa72c7bdea3" translate="yes" xml:space="preserve">
          <source>OptionalLong.toString()</source>
          <target state="translated">OptionalLong.toString()</target>
        </trans-unit>
        <trans-unit id="e8ec422fbb42df1b34f4d45468896cf115c5f55e" translate="yes" xml:space="preserve">
          <source>Optionally, this file manager might consider the sibling as a hint for where to place the output. The exact semantics of this hint is unspecified. The JDK compiler, javac, for example, will place class files in the same directories as originating source files unless a class file output directory is provided. To facilitate this behavior, javac might provide the originating source file as sibling when calling this method.</source>
          <target state="translated">선택적으로이 파일 관리자는 형제를 출력 위치에 대한 힌트로 간주 할 수 있습니다. 이 힌트의 정확한 의미는 지정되어 있지 않습니다. 예를 들어, JDK 컴파일러 인 javac는 클래스 파일 출력 디렉토리가 제공되지 않는 한 클래스 파일을 원래 소스 파일과 동일한 디렉토리에 배치합니다. 이 동작을 용이하게하기 위해 javac는이 메소드를 호출 할 때 시작 소스 파일을 형제로 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ff8db0b243a2b90079e7447994afa496b7574990" translate="yes" xml:space="preserve">
          <source>Optionally, you may specify the client property &quot;Nimbus.Overrides.InheritDefaults&quot;. If true, this client property indicates that the defaults located in UIManager should first be read, and then replaced with defaults located in the component client properties. If false, then only the defaults located in the component client property map will be used. If not specified, it is assumed to be true.</source>
          <target state="translated">선택적으로 클라이언트 속성 &quot;Nimbus.Overrides.InheritDefaults&quot;를 지정할 수 있습니다. true 인 경우이 클라이언트 속성은 UIManager에있는 기본값을 먼저 읽은 다음 구성 요소 클라이언트 속성에있는 기본값으로 바꿔야 함을 나타냅니다. false이면 구성 요소 클라이언트 속성 맵에있는 기본값 만 사용됩니다. 지정하지 않으면 참으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="6bf5da9c080bee3a8142586c412aa39971137eee" translate="yes" xml:space="preserve">
          <source>Options</source>
          <target state="translated">Options</target>
        </trans-unit>
        <trans-unit id="663edf0542ffd05ea81005f9f3a8602d4f9ea88f" translate="yes" xml:space="preserve">
          <source>Options to display to the user.</source>
          <target state="translated">사용자에게 표시 할 옵션입니다.</target>
        </trans-unit>
        <trans-unit id="a95c800eb2241bfd38823c2599c5878e1caab8fa" translate="yes" xml:space="preserve">
          <source>Or by calling the &lt;a href=&quot;managementfactory#getPlatformMXBean(java.lang.Class)&quot;&gt;&lt;code&gt;getPlatformMXBean&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;managementfactory#getPlatformMXBeans(java.lang.Class)&quot;&gt;&lt;code&gt;getPlatformMXBeans&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">또는 &lt;a href=&quot;managementfactory#getPlatformMXBean(java.lang.Class)&quot;&gt; &lt;code&gt;getPlatformMXBean&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;managementfactory#getPlatformMXBeans(java.lang.Class)&quot;&gt; &lt;code&gt;getPlatformMXBeans&lt;/code&gt; &lt;/a&gt; 를 호출하여 메소드 :</target>
        </trans-unit>
        <trans-unit id="f7bad531e326ecdb0af5e3f91ae674a76aa4507c" translate="yes" xml:space="preserve">
          <source>Or by calling the &lt;a href=&quot;managementfactory#getPlatformMXBean-java.lang.Class-&quot;&gt;&lt;code&gt;getPlatformMXBean&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;managementfactory#getPlatformMXBeans-java.lang.Class-&quot;&gt;&lt;code&gt;getPlatformMXBeans&lt;/code&gt;&lt;/a&gt; method:</source>
          <target state="translated">또는 &lt;a href=&quot;managementfactory#getPlatformMXBean-java.lang.Class-&quot;&gt; &lt;code&gt;getPlatformMXBean&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;managementfactory#getPlatformMXBeans-java.lang.Class-&quot;&gt; &lt;code&gt;getPlatformMXBeans&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="cd041e750ad6578314d17cdc0771a186c94e40a5" translate="yes" xml:space="preserve">
          <source>Or to implement a multi-value map, &lt;code&gt;Map&amp;lt;K,Collection&amp;lt;V&amp;gt;&amp;gt;&lt;/code&gt;, supporting multiple values per key:</source>
          <target state="translated">또는 키당 여러 값을 지원하는 다중 값 &lt;code&gt;Map&amp;lt;K,Collection&amp;lt;V&amp;gt;&amp;gt;&lt;/code&gt; 을 구현하려면 다음을 수행하십시오 .</target>
        </trans-unit>
        <trans-unit id="6aa6ee0d1c2699fdfbb3c618f6a4a50f628546cc" translate="yes" xml:space="preserve">
          <source>Or we could use a parallelizable collect form:</source>
          <target state="translated">또는 병렬화 가능한 수집 양식을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c06b7c8ffb25d9d9a3783b7cd98802a43752246" translate="yes" xml:space="preserve">
          <source>Or, for more control</source>
          <target state="translated">또는 더 많은 제어를 위해</target>
        </trans-unit>
        <trans-unit id="6c83bbee5b49a79796d332c233d26b9198b0a224" translate="yes" xml:space="preserve">
          <source>Or, if the address is &lt;code&gt;null&lt;/code&gt;, create an unbound socket.</source>
          <target state="translated">또는 주소가 &lt;code&gt;null&lt;/code&gt; 인 경우 언 바운드 소켓을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="00fcdda14949d42c1610edfba9ca80d41d59564f" translate="yes" xml:space="preserve">
          <source>Or:</source>
          <target state="translated">Or:</target>
        </trans-unit>
        <trans-unit id="9d8c086898da2d4d1f18367216fcf30cb684fd94" translate="yes" xml:space="preserve">
          <source>Oracle's implementation for Microsoft Windows and macOS uses the encoding &lt;code&gt;utf-16le&lt;/code&gt;. Oracle's implementation for Solaris and Linux uses the encoding &lt;code&gt;iso-10646-ucs-2&lt;/code&gt;.</source>
          <target state="translated">Microsoft Windows 및 macOS 용 Oracle 구현은 인코딩 &lt;code&gt;utf-16le&lt;/code&gt; 을 사용합니다 . Oracle의 Solaris 및 Linux 구현은 &lt;code&gt;iso-10646-ucs-2&lt;/code&gt; 인코딩을 사용합니다. .</target>
        </trans-unit>
        <trans-unit id="9f6a62256b607b49a6c39dccae6355a3708e6ccc" translate="yes" xml:space="preserve">
          <source>Order relationship</source>
          <target state="translated">주문 관계</target>
        </trans-unit>
        <trans-unit id="d90f438b9723ef003c143d6bb4265a21ae25b7c3" translate="yes" xml:space="preserve">
          <source>Ordered list.</source>
          <target state="translated">정렬 된 목록.</target>
        </trans-unit>
        <trans-unit id="a931d1132e49841256cef8f21976745eff4affb6" translate="yes" xml:space="preserve">
          <source>Ordered list. See the OL element definition in HTML 4.0.</source>
          <target state="translated">정렬 된 목록. HTML 4.0의 OL 요소 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="d3ed86c1334d74f0ae883f47feef902d83b9d8c6" translate="yes" xml:space="preserve">
          <source>Ordering</source>
          <target state="translated">Ordering</target>
        </trans-unit>
        <trans-unit id="3d6064ceb591877ea15e3b9d86904851dbc6d9c1" translate="yes" xml:space="preserve">
          <source>Ordering of LDAP names follows the lexicographical rules for string comparison, with the extension that this applies to all the RDNs in the LDAP name. All the RDNs are lined up in their specified order and compared lexicographically. See &lt;a href=&quot;rdn#compareTo(java.lang.Object)&quot;&gt;&lt;code&gt;Rdn.compareTo(Object obj)&lt;/code&gt;&lt;/a&gt; for RDN comparison rules.</source>
          <target state="translated">LDAP 이름의 순서는 문자열 비교를위한 사전 규칙을 따르며, 이는 LDAP 이름의 모든 RDN에 적용되는 확장입니다. 모든 RDN은 지정된 순서로 정렬되고 사전 순으로 비교됩니다. RDN 비교 규칙 은 &lt;a href=&quot;rdn#compareTo(java.lang.Object)&quot;&gt; &lt;code&gt;Rdn.compareTo(Object obj)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="9c3d6650334a4ecf23222890295f513f628dbab6" translate="yes" xml:space="preserve">
          <source>Ordering of LDAP names follows the lexicographical rules for string comparison, with the extension that this applies to all the RDNs in the LDAP name. All the RDNs are lined up in their specified order and compared lexicographically. See &lt;a href=&quot;rdn#compareTo-java.lang.Object-&quot;&gt;&lt;code&gt;Rdn.compareTo(Object obj)&lt;/code&gt;&lt;/a&gt; for RDN comparison rules.</source>
          <target state="translated">LDAP 이름의 순서는 문자열 비교를위한 사전 규칙을 따르며 확장은 LDAP 이름의 모든 RDN에 적용됩니다. 모든 RDN은 지정된 순서대로 정렬되어 사전 식으로 비교됩니다. RDN 비교 규칙 은 &lt;a href=&quot;rdn#compareTo-java.lang.Object-&quot;&gt; &lt;code&gt;Rdn.compareTo(Object obj)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="f4563cf0d6f9085254686bce60f77b72d0d16521" translate="yes" xml:space="preserve">
          <source>Ordering of composite names follows the lexicographical rules for string comparison, with the extension that this applies to all the components in the composite name. The effect is as if all the components were lined up in their specified ordered and the lexicographical rules applied over the two line-ups. If this composite name is &quot;lexicographically&quot; lesser than obj, a negative number is returned. If this composite name is &quot;lexicographically&quot; greater than obj, a positive number is returned.</source>
          <target state="translated">복합 이름의 순서는 문자열 비교에 대한 사전 규칙을 따르며 확장은 복합 이름의 모든 구성 요소에 적용됩니다. 결과는 모든 구성 요소가 지정된 순서대로 정렬되고 사전 규칙이 두 라인업에 적용되는 것과 같습니다. 이 컴퍼 짓 이름이 「사전 식으로」obj보다 작은 경우, 음수가 리턴됩니다. 이 컴퍼 짓 이름이 「사전 식으로」obj보다 큰 경우는 양수가 돌려 주어집니다.</target>
        </trans-unit>
        <trans-unit id="1eec039b39c93316d755067f09760cb61fd2a2cc" translate="yes" xml:space="preserve">
          <source>Ordering of compound names depend on the syntax of the compound name. By default, they follow lexicographical rules for string comparison with the extension that this applies to all the components in the compound name and that comparison of individual components is affected by the jndi.syntax.ignorecase and jndi.syntax.trimblanks properties, identical to how they affect equals(). If this compound name is &quot;lexicographically&quot; lesser than obj, a negative number is returned. If this compound name is &quot;lexicographically&quot; greater than obj, a positive number is returned.</source>
          <target state="translated">복합 이름의 순서는 복합 이름의 구문에 따라 다릅니다. 기본적으로 이들은 확장명이 포함 된 문자열 비교에 대한 사전 사전 규칙을 따릅니다. 이는 확장명이 화합물 이름의 모든 구성 요소에 적용되며 개별 구성 요소의 비교가 방법과 동일하게 jndi.syntax.ignorecase 및 jndi.syntax.trimblanks 특성의 영향을받습니다. 그들은 equals ()에 영향을 미칩니다. 이 복합 이름이 &quot;사전 식으로&quot;obj보다 작 으면 음수가 리턴됩니다. 이 복합 이름이 &quot;사전 식으로&quot;obj보다 큰 경우 양수가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="3e1ca8b5a29161bb13e5c0cc49d5282d9f54cf3a" translate="yes" xml:space="preserve">
          <source>Ordering: The service loader will first locate any service providers in modules defined to the class loader, then its parent class loader, its parent parent, and so on to the bootstrap class loader. If a class loader has modules in a module layer then all providers in that module layer are located (irrespective of their class loader) before the providers in the parent class loader are located. The ordering of modules in same class loader, or the ordering of modules in a module layer, is not defined.</source>
          <target state="translated">순서 : 서비스 로더는 먼저 클래스 로더에 정의 된 모듈에서 서비스 공급자를 찾은 다음 상위 클래스 로더, 상위 상위 등 부트 스트랩 클래스 로더를 찾습니다. 클래스 로더에 모듈 계층에 모듈이있는 경우 상위 클래스 로더의 공급자를 찾기 전에 해당 모듈 계층의 모든 공급자를 찾습니다 (클래스 로더에 관계없이). 동일한 클래스 로더의 모듈 순서 또는 모듈 계층의 모듈 순서는 정의되어 있지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a2db93c6625503adee227d4a5a72ecf0e4d7925c" translate="yes" xml:space="preserve">
          <source>Ordinarily this method stores bytes from the given array into this stream's buffer, flushing the buffer to the underlying output stream as needed. If the requested length is at least as large as this stream's buffer, however, then this method will flush the buffer and write the bytes directly to the underlying output stream. Thus redundant &lt;code&gt;BufferedOutputStream&lt;/code&gt;s will not copy data unnecessarily.</source>
          <target state="translated">일반적으로이 메소드는 주어진 배열의 바이트를이 스트림의 버퍼에 저장하여 필요에 따라 버퍼를 기본 출력 스트림으로 플러시합니다. 그러나 요청 된 길이가이 스트림의 버퍼 이상인 경우이 메소드는 버퍼를 플러시하고 기본 출력 스트림에 바이트를 직접 씁니다. 따라서 중복 &lt;code&gt;BufferedOutputStream&lt;/code&gt; 은 불필요하게 데이터를 복사하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ad07b5fee0506819f32f0d9f9976e2fe857cc30b" translate="yes" xml:space="preserve">
          <source>Ordinarily this method stores characters from the given array into this stream's buffer, flushing the buffer to the underlying stream as needed. If the requested length is at least as large as the buffer, however, then this method will flush the buffer and write the characters directly to the underlying stream. Thus redundant &lt;code&gt;BufferedWriter&lt;/code&gt;s will not copy data unnecessarily.</source>
          <target state="translated">일반적으로이 메소드는 지정된 배열의 문자를이 스트림의 버퍼에 저장하여 필요에 따라 버퍼를 기본 스트림으로 플러시합니다. 그러나 요청 된 길이가 최소한 버퍼만큼 큰 경우이 메소드는 버퍼를 플러시하고 문자를 기본 스트림에 직접 씁니다. 따라서 여분의 &lt;code&gt;BufferedWriter&lt;/code&gt; 는 데이터를 불필요하게 복사하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fa47f2f2bc15d750cca24f58a5ea0b880dfd45de" translate="yes" xml:space="preserve">
          <source>Ordinarily this method takes characters from this stream's character buffer, filling it from the underlying stream as necessary. If, however, the buffer is empty, the mark is not valid, and the requested length is at least as large as the buffer, then this method will read characters directly from the underlying stream into the given array. Thus redundant &lt;code&gt;BufferedReader&lt;/code&gt;s will not copy data unnecessarily.</source>
          <target state="translated">일반적으로이 메소드는이 스트림의 문자 버퍼에서 문자를 가져와 필요에 따라 기본 스트림에서 채 웁니다. 그러나 버퍼가 비어 있고 표시가 유효하지 않고 요청 된 길이가 최소한 버퍼만큼 큰 경우이 메소드는 기본 스트림에서 지정된 배열로 직접 문자를 읽습니다. 따라서 중복 &lt;code&gt;BufferedReader&lt;/code&gt; 는 불필요하게 데이터를 복사하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="994f6c1b3a2ead018b93d3bc9c1803b129b571b7" translate="yes" xml:space="preserve">
          <source>Ordinarily, a class or interface &lt;code&gt;C&lt;/code&gt; is created by a class loader, which either defines &lt;code&gt;C&lt;/code&gt; directly or delegates to another class loader. A class loader defines &lt;code&gt;C&lt;/code&gt; directly by invoking &lt;a href=&quot;../classloader#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt;&lt;code&gt;ClassLoader::defineClass&lt;/code&gt;&lt;/a&gt;, which causes the Java Virtual Machine to derive &lt;code&gt;C&lt;/code&gt; from a purported representation in &lt;code&gt;class&lt;/code&gt; file format. In situations where use of a class loader is undesirable, a class or interface &lt;code&gt;C&lt;/code&gt; can be created by this method instead. This method is capable of defining &lt;code&gt;C&lt;/code&gt;, and thereby creating it, without invoking &lt;code&gt;ClassLoader::defineClass&lt;/code&gt;. Instead, this method defines &lt;code&gt;C&lt;/code&gt; as if by arranging for the Java Virtual Machine to derive a nonarray class or interface &lt;code&gt;C&lt;/code&gt; from a purported representation in &lt;code&gt;class&lt;/code&gt; file format using the following rules:</source>
          <target state="translated">일반적으로 클래스 또는 인터페이스 &lt;code&gt;C&lt;/code&gt; 는 &lt;code&gt;C&lt;/code&gt; 를 직접 정의 하거나 다른 클래스 로더에 위임 하는 클래스 로더에 의해 생성됩니다 . 클래스 로더는 &lt;a href=&quot;../classloader#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt; &lt;code&gt;ClassLoader::defineClass&lt;/code&gt; &lt;/a&gt; 를 호출하여 &lt;code&gt;C&lt;/code&gt; 를 직접 정의합니다. 그러면 Java Virtual Machine이 &lt;code&gt;class&lt;/code&gt; 파일 형식 의 의도 된 표현에서 &lt;code&gt;C&lt;/code&gt; 를 파생시킵니다 . 클래스 로더의 사용이 바람직하지 않은 상황에서는 대신이 메소드 로 클래스 또는 인터페이스 &lt;code&gt;C&lt;/code&gt; 를 작성할 수 있습니다. 이 메서드는 &lt;code&gt;ClassLoader::defineClass&lt;/code&gt; 를 호출하지 않고도 &lt;code&gt;C&lt;/code&gt; 를 정의 하여 생성 할 수 있습니다. 대신이 메서드는 &lt;code&gt;C&lt;/code&gt; 를 정의합니다.Java Virtual Machine 이 다음 규칙을 사용하여 &lt;code&gt;class&lt;/code&gt; 파일 형식 의 의도 된 표현에서 비 배열 클래스 또는 인터페이스 &lt;code&gt;C&lt;/code&gt; 를 파생하도록 배열 하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="f35923823c23b1ece88b1112af33755853df3c27" translate="yes" xml:space="preserve">
          <source>Ordinarily, the controller will be a GUI providing a user interface for a subclass of &lt;code&gt;IIOMetadata&lt;/code&gt; for a particular plug-in. Controllers need not be GUIs, however.</source>
          <target state="translated">일반적으로 컨트롤러는 특정 플러그인에 대한 &lt;code&gt;IIOMetadata&lt;/code&gt; 의 서브 클래스에 대한 사용자 인터페이스를 제공하는 GUI 입니다. 그러나 컨트롤러는 GUI 일 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="49c70a6ee65f922b85c8d12e5bcc04249b6f508f" translate="yes" xml:space="preserve">
          <source>Ordinarily, the controller will be a GUI providing a user interface for a subclass of &lt;code&gt;IIOParam&lt;/code&gt; for a particular plug-in. Controllers need not be GUIs, however.</source>
          <target state="translated">일반적으로 컨트롤러는 특정 플러그인에 대한 &lt;code&gt;IIOParam&lt;/code&gt; 의 서브 클래스에 대한 사용자 인터페이스를 제공하는 GUI 입니다. 그러나 컨트롤러는 GUI 일 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="8b6c2ed044d8207d4061042e1e1d95779064f65b" translate="yes" xml:space="preserve">
          <source>Ordinary indexing</source>
          <target state="translated">일반 인덱싱</target>
        </trans-unit>
        <trans-unit id="519255ae1f74ffc5ddd29979295c7572f048ad81" translate="yes" xml:space="preserve">
          <source>Organization</source>
          <target state="translated">Organization</target>
        </trans-unit>
        <trans-unit id="3fefe66e8179285dddf4dcc2d60009de3b76966b" translate="yes" xml:space="preserve">
          <source>Organizes form controls into logical groups.</source>
          <target state="translated">양식 컨트롤을 논리 그룹으로 구성합니다.</target>
        </trans-unit>
        <trans-unit id="a78e314ea92361ff9d00176fe72bf1dccb4ee2d6" translate="yes" xml:space="preserve">
          <source>Organizes form controls into logical groups. See the FIELDSET element definition in HTML 4.0.</source>
          <target state="translated">양식 컨트롤을 논리 그룹으로 구성합니다. HTML 4.0의 FIELDSET 요소 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="86e4e3875420cdee95d08d4472073493729a7aee" translate="yes" xml:space="preserve">
          <source>Orientation</source>
          <target state="translated">Orientation</target>
        </trans-unit>
        <trans-unit id="be1f7732b07851e25d00c09587a39c69f245fea2" translate="yes" xml:space="preserve">
          <source>Orientation Relative Values</source>
          <target state="translated">방향 상대 값</target>
        </trans-unit>
        <trans-unit id="875fa36ba5ba3ec41947f6dbabed279aedf73c16" translate="yes" xml:space="preserve">
          <source>Orientation Relative Values:</source>
          <target state="translated">방향 상대 값 :</target>
        </trans-unit>
        <trans-unit id="1ef5108f6620a9f0ae0cd190145511dcab34d35b" translate="yes" xml:space="preserve">
          <source>Orientation for a paragraph.</source>
          <target state="translated">단락 방향입니다.</target>
        </trans-unit>
        <trans-unit id="4e0e83145917df10c7dd9dae31d2fa8c1b05ca71" translate="yes" xml:space="preserve">
          <source>Orientation of the JSplitPane.</source>
          <target state="translated">JSplitPane의 방향.</target>
        </trans-unit>
        <trans-unit id="46c4e6956ff214fda17203af925d19abea631ce3" translate="yes" xml:space="preserve">
          <source>OrientationRequested</source>
          <target state="translated">OrientationRequested</target>
        </trans-unit>
        <trans-unit id="a816b177bc7a0a1fc2bfa9596e349fa6a7f2bf41" translate="yes" xml:space="preserve">
          <source>OrientationRequested.getCategory()</source>
          <target state="translated">OrientationRequested.getCategory()</target>
        </trans-unit>
        <trans-unit id="3cc82faa504ca54b33b15deb7c4423359c4483a6" translate="yes" xml:space="preserve">
          <source>OrientationRequested.getEnumValueTable()</source>
          <target state="translated">OrientationRequested.getEnumValueTable()</target>
        </trans-unit>
        <trans-unit id="e02011f1bd288f0cd254dad51bce21e90755994f" translate="yes" xml:space="preserve">
          <source>OrientationRequested.getName()</source>
          <target state="translated">OrientationRequested.getName()</target>
        </trans-unit>
        <trans-unit id="da64586c1e7f8cb901742d2356a5a47bced08775" translate="yes" xml:space="preserve">
          <source>OrientationRequested.getOffset()</source>
          <target state="translated">OrientationRequested.getOffset()</target>
        </trans-unit>
        <trans-unit id="2c30c738a2d6ddbb6ebdd03f3a3c3f9c7f642c17" translate="yes" xml:space="preserve">
          <source>OrientationRequested.getStringTable()</source>
          <target state="translated">OrientationRequested.getStringTable()</target>
        </trans-unit>
        <trans-unit id="14cf08017aad681dda1971c5a7f018fcd4990369" translate="yes" xml:space="preserve">
          <source>OrientationRequestedType.PORTRAIT or OrientationRequestedType.LANDSCAPE.</source>
          <target state="translated">OrientationRequestedType.PORTRAIT 또는 OrientationRequestedType.LANDSCAPE.</target>
        </trans-unit>
        <trans-unit id="92155a44653128c4d1de10b60759ff285fc44584" translate="yes" xml:space="preserve">
          <source>Origin of the value of a VM option.</source>
          <target state="translated">VM 옵션 값의 출처입니다.</target>
        </trans-unit>
        <trans-unit id="20d186bdf5e415cbe2f4dd6162f8b02522524682" translate="yes" xml:space="preserve">
          <source>Origin of the value of a VM option. It tells where the value of a VM option came from.</source>
          <target state="translated">VM 옵션 값의 출처입니다. VM 옵션의 값이 어디에서 왔는지 알려줍니다.</target>
        </trans-unit>
        <trans-unit id="11c7ae8565139ac71af6a812da98a47cc45654c8" translate="yes" xml:space="preserve">
          <source>OriginType.PHYSICAL or OriginType.PRINTABLE</source>
          <target state="translated">OriginType.PHYSICAL 또는 OriginType.PRINTABLE</target>
        </trans-unit>
        <trans-unit id="70c0181600dde20ec2b20a4347b0f39abc610975" translate="yes" xml:space="preserve">
          <source>OriginateDirection</source>
          <target state="translated">OriginateDirection</target>
        </trans-unit>
        <trans-unit id="6e6a6f2086bb5fe5dbfd17d8d5f502d48759834b" translate="yes" xml:space="preserve">
          <source>Other</source>
          <target state="translated">Other</target>
        </trans-unit>
        <trans-unit id="f5085f132fe0f0926f2c1192db28a898fb077b77" translate="yes" xml:space="preserve">
          <source>Other conditions given in the</source>
          <target state="translated">에 주어진 다른 조건</target>
        </trans-unit>
        <trans-unit id="f5142b8e89f5e1d0c79a025d2ab64ca3f33b15e6" translate="yes" xml:space="preserve">
          <source>Other definitions are as for &lt;a href=&quot;#timezone&quot;&gt;general time zones&lt;/a&gt; or &lt;a href=&quot;#rfc822timezone&quot;&gt;RFC 822 time zones&lt;/a&gt;.</source>
          <target state="translated">다른 정의는 &lt;a href=&quot;#timezone&quot;&gt;일반 시간대&lt;/a&gt; 또는 &lt;a href=&quot;#rfc822timezone&quot;&gt;RFC 822 시간대와 관련이 있습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d1052fc3308b7b8dd98a8e695b924b7e65ca229d" translate="yes" xml:space="preserve">
          <source>Other factory methods to create method handles that emulate other common JVM operations or control flow patterns.</source>
          <target state="translated">다른 공통 JVM 조작 또는 제어 플로우 패턴을 에뮬레이트하는 메소드 핸들을 작성하는 다른 팩토리 메소드.</target>
        </trans-unit>
        <trans-unit id="0a0c47d153339d3833eaf129bf836f92bb321b34" translate="yes" xml:space="preserve">
          <source>Other methods let &lt;code&gt;RowSet&lt;/code&gt; persistence providers be registered or de-registered with the factory mechanism. This allows additional synchronization provider implementations to be made available to &lt;code&gt;RowSet&lt;/code&gt; objects at run time.</source>
          <target state="translated">다른 메서드를 사용하면 &lt;code&gt;RowSet&lt;/code&gt; 지속성 공급자를 팩토리 메커니즘에 등록하거나 등록 취소 할 수 있습니다. 이를 통해 &lt;code&gt;RowSet&lt;/code&gt; 에서 추가 동기화 공급자 구현을 사용할 수 있습니다. 런타임 개체에 .</target>
        </trans-unit>
        <trans-unit id="b25fbbc7d572b3fdcfaa8c7ecdd12919600c99c3" translate="yes" xml:space="preserve">
          <source>Other methods may have slightly different rounding semantics. For example, the result of the &lt;code&gt;pow&lt;/code&gt; method using the &lt;a href=&quot;#pow(int,java.math.MathContext)&quot;&gt;specified algorithm&lt;/a&gt; can occasionally differ from the rounded mathematical result by more than one unit in the last place, one</source>
          <target state="translated">다른 방법은 반올림 의미가 약간 다를 수 있습니다. 예를 들어, &lt;a href=&quot;#pow(int,java.math.MathContext)&quot;&gt;지정된 알고리즘을&lt;/a&gt; 사용한 &lt;code&gt;pow&lt;/code&gt; 방법 의 결과 결과는 마지막 위치에있는 하나 이상의 단위 (하나)만큼 반올림 된 수학적 결과와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25202f62c9b5800ffbf3251e87393af7a183665d" translate="yes" xml:space="preserve">
          <source>Other methods may have slightly different rounding semantics. For example, the result of the &lt;code&gt;pow&lt;/code&gt; method using the &lt;a href=&quot;bigdecimal#pow-int-java.math.MathContext-&quot;&gt;specified algorithm&lt;/a&gt; can occasionally differ from the rounded mathematical result by more than one unit in the last place, one</source>
          <target state="translated">다른 방법은 약간 다른 반올림 의미를 가질 수 있습니다. 예를 들어, &lt;a href=&quot;bigdecimal#pow-int-java.math.MathContext-&quot;&gt;지정된 알고리즘을&lt;/a&gt; 사용 하는 &lt;code&gt;pow&lt;/code&gt; 방법 의 결과 는 때때로 마지막 위치에서 둘 이상의 단위로 반올림 된 수학적 결과와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1c8b829262ea03fcbbaec0e6103d8736de3bd435" translate="yes" xml:space="preserve">
          <source>Other metrics available through &lt;code&gt;GlyphMetrics&lt;/code&gt; are the components of the advance, the visual bounds, and the left and right side bearings.</source>
          <target state="translated">&lt;code&gt;GlyphMetrics&lt;/code&gt; 를 통해 사용할 수있는 기타 메트릭 은 진보의 구성 요소, 시각적 경계, 왼쪽 및 오른쪽 베어링입니다.</target>
        </trans-unit>
        <trans-unit id="0f883c2950947d52b1424fbb23b8c9f236f5fdfe" translate="yes" xml:space="preserve">
          <source>Other patterns match or reject class or package name as returned from &lt;a href=&quot;../lang/class#getName()&quot;&gt;&lt;code&gt;Class.getName()&lt;/code&gt;&lt;/a&gt; and if an optional module name is present &lt;a href=&quot;../lang/module#getName()&quot;&gt;&lt;code&gt;class.getModule().getName()&lt;/code&gt;&lt;/a&gt;. Note that for arrays the element type is used in the pattern, not the array type.</source>
          <target state="translated">다른 패턴은 &lt;a href=&quot;../lang/class#getName()&quot;&gt; &lt;code&gt;Class.getName()&lt;/code&gt; &lt;/a&gt; 에서 반환 된 클래스 또는 패키지 이름과 일치하거나 거부 하며 선택적 모듈 이름이있는 경우 &lt;a href=&quot;../lang/module#getName()&quot;&gt; &lt;code&gt;class.getModule().getName()&lt;/code&gt; &lt;/a&gt; . 배열의 경우 요소 유형이 배열 유형이 아니라 패턴에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="5226f039b8349ad6e995e3605d0bc634e934bbb0" translate="yes" xml:space="preserve">
          <source>Other permission classes are for &quot;named&quot; permissions - ones that contain a name but no actions list; you either have the named permission or you don't.</source>
          <target state="translated">다른 사용 권한 클래스는 &quot;명명 된&quot;사용 권한에 대한 것입니다. 이름은 있지만 작업 목록은 없습니다. 당신은 명명 된 권한이 있거나 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="dec683f2e446f43eb26c6a0a223f157d71f1289f" translate="yes" xml:space="preserve">
          <source>Other permission classes may not yet exist during Policy initialization. For example, a referenced permission class may be in a JAR file that will later be loaded. For each such class, an UnresolvedPermission is instantiated. Thus, an UnresolvedPermission is essentially a &quot;placeholder&quot; containing information about the permission.</source>
          <target state="translated">정책을 초기화하는 동안 다른 권한 클래스가 아직 없을 수 있습니다. 예를 들어, 참조 된 권한 클래스는 나중에로드 될 JAR 파일에있을 수 있습니다. 이러한 각 클래스에 대해 UnresolvedPermission이 인스턴스화됩니다. 따라서 UnresolvedPermission은 기본적으로 권한에 대한 정보를 포함하는 &quot;자리 표시 자&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="bd0b37ea9bcc51c35f8be8826f53d0eafd457cb3" translate="yes" xml:space="preserve">
          <source>Other reference types can be constable if their instances can describe themselves in nominal form as a &lt;a href=&quot;constantdesc&quot;&gt;&lt;code&gt;ConstantDesc&lt;/code&gt;&lt;/a&gt;. Examples in the Java SE Platform API are types that support Java language features such as &lt;a href=&quot;../enum&quot;&gt;&lt;code&gt;Enum&lt;/code&gt;&lt;/a&gt;, and runtime support classes such as &lt;a href=&quot;../invoke/varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt;. These are typically described with a &lt;a href=&quot;dynamicconstantdesc&quot;&gt;&lt;code&gt;DynamicConstantDesc&lt;/code&gt;&lt;/a&gt;, which describes dynamically generated constants (JVMS 4.4.10).</source>
          <target state="translated">다른 참조 유형은 해당 인스턴스가 명목상 형식으로 &lt;a href=&quot;constantdesc&quot;&gt; &lt;code&gt;ConstantDesc&lt;/code&gt; &lt;/a&gt; 로 자신을 설명 할 수있는 경우 constable 할 수 있습니다 . Java SE Platform API의 예로는 &lt;a href=&quot;../enum&quot;&gt; &lt;code&gt;Enum&lt;/code&gt; &lt;/a&gt; 과 같은 Java 언어 기능 및 &lt;a href=&quot;../invoke/varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt; 과 같은 런타임 지원 클래스 를 지원하는 유형이 있습니다 . 이들은 일반적 으로 동적으로 생성 된 상수 (JVMS 4.4.10)를 설명 하는 &lt;a href=&quot;dynamicconstantdesc&quot;&gt; &lt;code&gt;DynamicConstantDesc&lt;/code&gt; &lt;/a&gt; 로 설명됩니다.</target>
        </trans-unit>
        <trans-unit id="b5415d274f53d5b1f781369575d4647904c54539" translate="yes" xml:space="preserve">
          <source>Other than the possible blocking behavior described above, this method is equivalent to the byte array based &lt;a href=&quot;#unwrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;unwrap&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">위에서 설명한 가능한 차단 동작 &lt;a href=&quot;#unwrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;unwrap&lt;/code&gt; &lt;/a&gt; 메서드 는 바이트 배열 기반 unwrap 메서드 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="bf0ec3cdf68b39562638751449b752274488c26c" translate="yes" xml:space="preserve">
          <source>Other than the possible blocking behavior described above, this method is equivalent to the byte array based &lt;a href=&quot;#verifyMIC(byte%5B%5D,int,int,byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;verifyMIC&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">위에서 설명한 가능한 차단 동작 &lt;a href=&quot;#verifyMIC(byte%5B%5D,int,int,byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;verifyMIC&lt;/code&gt; &lt;/a&gt; 메서드 는 바이트 배열 기반 verifyMIC 메서드 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="344f51e9aa26c25243c83c345e8d25b9d9d13c0c" translate="yes" xml:space="preserve">
          <source>Other uses might be to output the value with a suffix, such as &quot;1st&quot;, &quot;2nd&quot;, &quot;3rd&quot;, or as Roman numerals &quot;I&quot;, &quot;II&quot;, &quot;III&quot;, &quot;IV&quot;.</source>
          <target state="translated">다른 용도로는 접미사 (예 : &quot;1st&quot;, &quot;2nd&quot;, &quot;3rd&quot;) 또는 로마 숫자 &quot;I&quot;, &quot;II&quot;, &quot;III&quot;, &quot;IV&quot;와 같이 값을 출력 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="90c6f84a3bb8c8de426104f0ad58bb91ace8bb8b" translate="yes" xml:space="preserve">
          <source>Other uses of the annotation are ignored.</source>
          <target state="translated">주석의 다른 용도는 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="c5a68d5537b295e68a8266573f4f2d6e42996c76" translate="yes" xml:space="preserve">
          <source>Other values</source>
          <target state="translated">기타 값</target>
        </trans-unit>
        <trans-unit id="ccbadb13897506467c52584099d0526c24cea2ef" translate="yes" xml:space="preserve">
          <source>Otheriwse, the bytes written will be:</source>
          <target state="translated">그 밖의 바이트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4df4ecdce52ca055c77a8688ad52cacfaed5f7b3" translate="yes" xml:space="preserve">
          <source>Otherwise (that is, if the scale is negative, or the adjusted exponent is less than &lt;code&gt;-6&lt;/code&gt;), the number will be converted to a character form using exponential notation. In this case, if the converted &lt;code&gt;BigInteger&lt;/code&gt; has more than one digit a decimal point is inserted after the first digit. An exponent in character form is then suffixed to the converted unscaled value (perhaps with inserted decimal point); this comprises the letter &lt;code&gt;'E'&lt;/code&gt; followed immediately by the adjusted exponent converted to a character form. The latter is in base ten, using the characters &lt;code&gt;'0'&lt;/code&gt; through &lt;code&gt;'9'&lt;/code&gt; with no leading zeros, and is always prefixed by a sign character &lt;code&gt;'-'&lt;/code&gt; (&lt;code&gt;'\u002D'&lt;/code&gt;) if the adjusted exponent is negative, &lt;code&gt;'+'&lt;/code&gt; (&lt;code&gt;'\u002B'&lt;/code&gt;) otherwise).</source>
          <target state="translated">그렇지 않으면 (즉, 스케일이 음수이거나 조정 된 지수가 &lt;code&gt;-6&lt;/code&gt; 보다 작은 경우 ) 숫자는 지수 표기법을 사용하여 문자 형식으로 변환됩니다. 이 경우 변환 된 &lt;code&gt;BigInteger&lt;/code&gt; 에 두 자리 이상의 숫자가 있으면 첫 번째 자리 뒤에 소수점이 삽입됩니다. 문자 형식의 지수는 변환 된 스케일링되지 않은 값에 접미사가 붙습니다 (아마도 소수점이 삽입 됨). 이것은 문자 &lt;code&gt;'E'&lt;/code&gt; 와 문자 형식으로 변환 된 조정 된 지수로 구성됩니다. 후자는 기본 10에 있으며 앞에 0이없는 &lt;code&gt;'0'&lt;/code&gt; 부터 &lt;code&gt;'9'&lt;/code&gt; ' 까지 의 문자를 사용하며 항상 부호 문자 &lt;code&gt;'-'&lt;/code&gt; ( &lt;code&gt;'\u002D'&lt;/code&gt; ) 조정 된 지수가 음수이면 &lt;code&gt;'+'&lt;/code&gt; ( &lt;code&gt;'\u002B'&lt;/code&gt; ) 그렇지 않으면).</target>
        </trans-unit>
        <trans-unit id="1d6d41912d9285811b5b4701da5978ea2ea4b26a" translate="yes" xml:space="preserve">
          <source>Otherwise &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt; must return true.</source>
          <target state="translated">그렇지 않으면 &lt;a href=&quot;../../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt; 는 true를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="f7bf6a083148fa57870838579b9f08df1f173f78" translate="yes" xml:space="preserve">
          <source>Otherwise &lt;a href=&quot;../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt; must return true.</source>
          <target state="translated">그렇지 않으면 &lt;a href=&quot;../../../java.base/java/lang/object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt; 는 true를 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="d3adc57c5d4b36a5cde4fb1abb556b7e54bab1bd" translate="yes" xml:space="preserve">
          <source>Otherwise &lt;a href=&quot;../../../java/lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt; must return true.</source>
          <target state="translated">그렇지 않으면 &lt;a href=&quot;../../../java/lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt; 가 true를 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="120d12a66d8c7c679aafa876a9e21cb20dddd03a" translate="yes" xml:space="preserve">
          <source>Otherwise &lt;a href=&quot;../../java/lang/object#equals-java.lang.Object-&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt; must return true.</source>
          <target state="translated">그렇지 않으면 &lt;a href=&quot;../../java/lang/object#equals-java.lang.Object-&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt; 가 true를 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="a7c60cec68607b4da230f5d4b30885e0298132ed" translate="yes" xml:space="preserve">
          <source>Otherwise &lt;code&gt;h&lt;/code&gt; is &lt;code&gt;v.hashCode()&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;h&lt;/code&gt; 는 &lt;code&gt;v.hashCode()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3af495ef7f76da64b83d71d33f6a21b21fe4fca5" translate="yes" xml:space="preserve">
          <source>Otherwise a new relative hierarchical URI is constructed with query and fragment components taken from the given URI and with a path component computed by removing this URI's path from the beginning of the given URI's path.</source>
          <target state="translated">그렇지 않으면, 새로운 상대 계층 URI는 주어진 URI에서 가져온 쿼리 및 프래그먼트 컴포넌트와 주어진 URI 경로의 시작 부분에서이 URI의 경로를 제거하여 계산 된 경로 컴포넌트로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="0379edcf6a12cd58c352345a8269d882c5ebe66b" translate="yes" xml:space="preserve">
          <source>Otherwise no formatting is performed.</source>
          <target state="translated">그렇지 않으면 포맷이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e67f53a74a0f100cb0bb2ddd0fda479f76c4b312" translate="yes" xml:space="preserve">
          <source>Otherwise one of the following conversions is applied to &lt;code&gt;value&lt;/code&gt;:</source>
          <target state="translated">그렇지 않으면 다음 변환 중 하나가 &lt;code&gt;value&lt;/code&gt; 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="05964a60b38ea46e589aa86bc02c6de852252f47" translate="yes" xml:space="preserve">
          <source>Otherwise the &lt;code&gt;parent&lt;/code&gt; abstract pathname is taken to denote a directory, and the &lt;code&gt;child&lt;/code&gt; pathname string is taken to denote either a directory or a file. If the &lt;code&gt;child&lt;/code&gt; pathname string is absolute then it is converted into a relative pathname in a system-dependent way. If &lt;code&gt;parent&lt;/code&gt; is the empty abstract pathname then the new &lt;code&gt;File&lt;/code&gt; instance is created by converting &lt;code&gt;child&lt;/code&gt; into an abstract pathname and resolving the result against a system-dependent default directory. Otherwise each pathname string is converted into an abstract pathname and the child abstract pathname is resolved against the parent.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;parent&lt;/code&gt; 추상 경로 이름이 디렉토리를 나타내며 &lt;code&gt;child&lt;/code&gt; 경로 이름 문자열이 디렉토리 나 파일을 나타냅니다. 는 IF &lt;code&gt;child&lt;/code&gt; 패스 명 문자열이 절대의 그것은 시스템에 의존하는 방법으로 상대 패스로 변환됩니다. 경우 &lt;code&gt;parent&lt;/code&gt; 빈 추상 패스 후 인 새 &lt;code&gt;File&lt;/code&gt; 인스턴스는 변환에 의해 생성되는 &lt;code&gt;child&lt;/code&gt; 추상 패스로하고, 시스템에 의존하는 디폴트 디렉토리 결과를 해결. 그렇지 않으면 각 경로 이름 문자열이 추상 경로 이름으로 변환되고 자식 추상 경로 이름이 부모에 대해 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="c4cf246b0b19df0bd2c8f91f5b23f40f027af4cb" translate="yes" xml:space="preserve">
          <source>Otherwise the &lt;code&gt;parent&lt;/code&gt; pathname string is taken to denote a directory, and the &lt;code&gt;child&lt;/code&gt; pathname string is taken to denote either a directory or a file. If the &lt;code&gt;child&lt;/code&gt; pathname string is absolute then it is converted into a relative pathname in a system-dependent way. If &lt;code&gt;parent&lt;/code&gt; is the empty string then the new &lt;code&gt;File&lt;/code&gt; instance is created by converting &lt;code&gt;child&lt;/code&gt; into an abstract pathname and resolving the result against a system-dependent default directory. Otherwise each pathname string is converted into an abstract pathname and the child abstract pathname is resolved against the parent.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;parent&lt;/code&gt; 경로 이름 문자열은 디렉토리를 나타내며 &lt;code&gt;child&lt;/code&gt; 경로 이름 문자열은 디렉토리 나 파일을 나타냅니다. 는 IF &lt;code&gt;child&lt;/code&gt; 패스 명 문자열이 절대의 그것은 시스템에 의존하는 방법으로 상대 패스로 변환됩니다. &lt;code&gt;parent&lt;/code&gt; 가 빈 문자열 인 경우 &lt;code&gt;child&lt;/code&gt; 를 추상 경로 이름으로 변환 하고 시스템 종속 기본 디렉토리에 대해 결과를 해석하여 새 &lt;code&gt;File&lt;/code&gt; 인스턴스가 작성됩니다 . 그렇지 않으면 각 경로 이름 문자열이 추상 경로 이름으로 변환되고 자식 추상 경로 이름이 부모에 대해 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="d56d20a57d3ac6efcfe0e78aaadab8719ac0ad59" translate="yes" xml:space="preserve">
          <source>Otherwise the channel's key is already in the selected-key set, so its ready-operation set is modified to identify any new operations for which the channel is reported to be ready. Any readiness information previously recorded in the ready set is preserved; in other words, the ready set returned by the underlying system is bitwise-disjoined into the key's current ready set.</source>
          <target state="translated">그렇지 않으면 채널 키가 이미 선택된 키 세트에 있으므로 채널이 준비된 것으로보고되는 새 조작을 식별하도록 준비된 조작 세트가 수정됩니다. 준비 세트에 이전에 기록 된 모든 준비 정보는 유지됩니다. 다시 말해, 기본 시스템에 의해 반환 된 준비 세트는 키의 현재 준비 세트에 비트 단위로 분리됩니다.</target>
        </trans-unit>
        <trans-unit id="e5b8e85caccba014ba441f31cc8f15135f39ff5a" translate="yes" xml:space="preserve">
          <source>Otherwise the file system object has not yet been registered with the given watch service, so it is registered and the resulting new key is returned.</source>
          <target state="translated">그렇지 않으면 파일 시스템 오브젝트가 지정된 감시 서비스에 아직 등록되지 않았으므로 등록되어 새 결과 키가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="cf5b0de141956225be69eddc7dbc8754ed47fb2f" translate="yes" xml:space="preserve">
          <source>Otherwise the given URI's path is relative, and so the new URI's path is computed by resolving the path of the given URI against the path of this URI. This is done by concatenating all but the last segment of this URI's path, if any, with the given URI's path and then normalizing the result as if by invoking the &lt;a href=&quot;#normalize()&quot;&gt;&lt;code&gt;normalize&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">그렇지 않으면 주어진 URI의 경로가 상대적이므로이 URI의 경로에 대해 주어진 URI의 경로를 확인하여 새 URI의 경로를 계산합니다. 이 작업은이 URI 경로의 마지막 세그먼트 (있는 경우)를 제외한 모든 세그먼트를 주어진 URI의 경로와 연결 한 다음 &lt;a href=&quot;#normalize()&quot;&gt; &lt;code&gt;normalize&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하는 것처럼 결과를 정규화하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="9ca0995e72c6a622d2595ecb5d24294d616c03f7" translate="yes" xml:space="preserve">
          <source>Otherwise the given URI's path is relative, and so the new URI's path is computed by resolving the path of the given URI against the path of this URI. This is done by concatenating all but the last segment of this URI's path, if any, with the given URI's path and then normalizing the result as if by invoking the &lt;a href=&quot;uri#normalize--&quot;&gt;&lt;code&gt;normalize&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">그렇지 않으면, 주어진 URI의 경로는 상대적이므로, 새로운 URI의 경로는이 URI의 경로에 대해 주어진 URI의 경로를 해결함으로써 계산됩니다. 이 URI 패스의 마지막 세그먼트를 제외한 모든 세그먼트를 지정된 URI 패스와 연결 한 후 &lt;a href=&quot;uri#normalize--&quot;&gt; &lt;code&gt;normalize&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하는 것처럼 결과를 정규화하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="627290e5ebe8a692cc15d116dd2690e1d92ec236" translate="yes" xml:space="preserve">
          <source>Otherwise the new URI's authority component is copied from this URI, and its path is computed as follows:</source>
          <target state="translated">그렇지 않으면 새 URI의 권한 구성 요소가이 URI에서 복사되고 경로는 다음과 같이 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="46a69075f0e3db3114b8124823a891f9b7571926" translate="yes" xml:space="preserve">
          <source>Otherwise the property value is parsed as a decimal integer exactly as by the method &lt;a href=&quot;#valueOf(java.lang.String,int)&quot;&gt;&lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt;&lt;/a&gt; with radix 10.</source>
          <target state="translated">그렇지 않으면 속성 값은 기수 10을 사용 하는 &lt;a href=&quot;#valueOf(java.lang.String,int)&quot;&gt; &lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt; &lt;/a&gt; 메소드에서 와 똑같이 10 진수 정수로 구문 분석됩니다 .</target>
        </trans-unit>
        <trans-unit id="c64f7405d409fd7c958b7d1712cb2dd9914ea49d" translate="yes" xml:space="preserve">
          <source>Otherwise the property value is parsed as a decimal integer exactly as by the method &lt;a href=&quot;long#valueOf-java.lang.String-int-&quot;&gt;&lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt;&lt;/a&gt; with radix 10.</source>
          <target state="translated">그렇지 않으면 특성 값은 기수 10을 사용 하는 &lt;a href=&quot;long#valueOf-java.lang.String-int-&quot;&gt; &lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt; &lt;/a&gt; 메소드에 의해 정확하게 10 진 정수로 구문 분석됩니다 .</target>
        </trans-unit>
        <trans-unit id="c04af51696827862cc5d2ba041921c40d60ad886" translate="yes" xml:space="preserve">
          <source>Otherwise the underlying field is an instance field. If the specified object argument is null, the method throws a &lt;code&gt;NullPointerException&lt;/code&gt;. If the specified object argument is not an instance of the class or interface declaring the underlying field, the method throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 기본 필드는 인스턴스 필드입니다. 지정된 객체 인수가 null의 경우, 메소드는 &lt;code&gt;NullPointerException&lt;/code&gt; 을 Throw합니다 . 지정된 객체 인수가 기본 필드를 선언하는 클래스 또는 인터페이스의 인스턴스가 아닌 경우, 메소드는 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="1803836fd3100be68360efbfaac999d7511a2019" translate="yes" xml:space="preserve">
          <source>Otherwise there is a mismatch between the two files and the value returned by this method is:</source>
          <target state="translated">그렇지 않으면 두 파일 사이에 불일치가 있으며이 메서드에서 반환되는 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c0da86c556ca7b2395b89ee932e4f9510745ef2b" translate="yes" xml:space="preserve">
          <source>Otherwise this channel has not yet been registered with the given selector, so it is registered and the resulting new key is returned. The key's initial interest set will be &lt;code&gt;ops&lt;/code&gt; and its attachment will be &lt;code&gt;att&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면이 채널이 지정된 셀렉터에 아직 등록되지 않았으므로 등록되어 새 키가 반환됩니다. 키의 초기 관심사 세트는 &lt;code&gt;ops&lt;/code&gt; 이며 첨부는 &lt;code&gt;att&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="27abe8ec06e0ccbb9392db2f19ed74370b61e2e5" translate="yes" xml:space="preserve">
          <source>Otherwise this channel has not yet been registered with the given selector, so the &lt;a href=&quot;abstractselector#register(java.nio.channels.spi.AbstractSelectableChannel,int,java.lang.Object)&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method of the selector is invoked while holding the appropriate locks. The resulting key is added to this channel's key set before being returned.</source>
          <target state="translated">그렇지 않으면이 채널이 아직 주어진 선택기에 등록되지 않았으므로 적절한 잠금을 유지하는 동안 선택기 의 &lt;a href=&quot;abstractselector#register(java.nio.channels.spi.AbstractSelectableChannel,int,java.lang.Object)&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt; 메소드가 호출됩니다. 결과 키는 반환되기 전에이 채널의 키 세트에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="287cc62c55c9ec90fb698caa13f7397eb6f6ad43" translate="yes" xml:space="preserve">
          <source>Otherwise this channel has not yet been registered with the given selector, so the &lt;a href=&quot;abstractselector#register-java.nio.channels.spi.AbstractSelectableChannel-int-java.lang.Object-&quot;&gt;&lt;code&gt;register&lt;/code&gt;&lt;/a&gt; method of the selector is invoked while holding the appropriate locks. The resulting key is added to this channel's key set before being returned.</source>
          <target state="translated">그렇지 않으면이 채널이 지정된 셀렉터에 아직 등록되지 않았으므로 적절한 잠금을 유지하면서 셀렉터 의 &lt;a href=&quot;abstractselector#register-java.nio.channels.spi.AbstractSelectableChannel-int-java.lang.Object-&quot;&gt; &lt;code&gt;register&lt;/code&gt; &lt;/a&gt; 메소드가 호출됩니다. 결과 키는 반환되기 전에이 채널의 키 세트에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="2b7b29a3991fbe5d68b573904370b151d34ab719" translate="yes" xml:space="preserve">
          <source>Otherwise this implementation returns false if:</source>
          <target state="translated">그렇지 않으면이 구현은 다음과 같은 경우 false를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="739b3dd5bfce93943b82630f67f7ff75481cd875" translate="yes" xml:space="preserve">
          <source>Otherwise this method attempts once more to parse the authority component into user-information, host, and port components, and throws an exception describing why the authority component could not be parsed in that way.</source>
          <target state="translated">그렇지 않으면이 메소드는 권한 구성 요소를 사용자 정보, 호스트 및 포트 구성 요소로 구문 분석하기 위해 한 번 더 시도하고, 권한 구성 요소가 그러한 방식으로 구문 분석 될 수없는 이유를 설명하는 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="835c6a6d972a0769f6af0463b04e662aab4f89d8" translate="yes" xml:space="preserve">
          <source>Otherwise this method constructs a new hierarchical URI in a manner consistent with &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;, section 5.2; that is:</source>
          <target state="translated">그렇지 않으면이 방법은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt; , 섹션 5.2 와 일치하는 방식으로 새로운 계층 적 URI를 구성합니다 . 그건:</target>
        </trans-unit>
        <trans-unit id="ee7b3e5aeb0c44607f8f586fca9175c9e2f5aaad" translate="yes" xml:space="preserve">
          <source>Otherwise this method constructs a new hierarchical URI in a manner consistent with &lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt;, section 5.2; that is:</source>
          <target state="translated">그렇지 않으면이 메소드는 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2396.txt&quot;&gt;RFC 2396&lt;/a&gt; , 섹션 5.2 와 일치하는 방식으로 새로운 계층 적 URI를 생성합니다 . 그건:</target>
        </trans-unit>
        <trans-unit id="6f06cbbd092f0b330bac191d89994dea6ddc3aa1" translate="yes" xml:space="preserve">
          <source>Otherwise this method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#read(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;AsynchronousByteChannel.read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">그렇지 않으면이 메서드는 &lt;a href=&quot;asynchronousbytechannel#read(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;AsynchronousByteChannel.read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt; 와 동일한 방식으로 작동합니다. 메서드 .</target>
        </trans-unit>
        <trans-unit id="6713d17ae20123a1898f968bc450a3f4b2f57b07" translate="yes" xml:space="preserve">
          <source>Otherwise this method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#read-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;AsynchronousByteChannel.read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">그렇지 않으면이 메소드는 &lt;a href=&quot;asynchronousbytechannel#read-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;AsynchronousByteChannel.read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 방식으로 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="65a450b920f5ad16c0e20adb02819e5e0c4e8195" translate="yes" xml:space="preserve">
          <source>Otherwise this method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#write(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;AsynchronousByteChannel.write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">그렇지 않으면이 메서드는 &lt;a href=&quot;asynchronousbytechannel#write(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;AsynchronousByteChannel.write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메서드 와 동일한 방식으로 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="05cd2b6f686bc22a17e970de5c017036a2de758d" translate="yes" xml:space="preserve">
          <source>Otherwise this method works in the same manner as the &lt;a href=&quot;asynchronousbytechannel#write-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;AsynchronousByteChannel.write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">그렇지 않으면이 메소드는 &lt;a href=&quot;asynchronousbytechannel#write-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;AsynchronousByteChannel.write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 방식으로 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="d0beadc61870784ac63c354a7a8aff89d87a08bf" translate="yes" xml:space="preserve">
          <source>Otherwise use the &lt;code&gt;Comparator&lt;/code&gt; returned by &lt;code&gt;Collator.getInstance()&lt;/code&gt; on the results from calling &lt;code&gt;toString&lt;/code&gt; on the objects.</source>
          <target state="translated">그렇지 않으면 객체 에서 &lt;code&gt;toString&lt;/code&gt; 을 호출 한 결과 에 &lt;code&gt;Collator.getInstance()&lt;/code&gt; 반환 한 &lt;code&gt;Comparator&lt;/code&gt; 를 사용 합니다.</target>
        </trans-unit>
        <trans-unit id="bed72beeda670d92238b8e349626dc9658e2b5f4" translate="yes" xml:space="preserve">
          <source>Otherwise use the cross platform look and feel.</source>
          <target state="translated">그렇지 않으면 크로스 플랫폼 룩앤필을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="5c66cfd8e31132e4e6c2b2aa9f0f02a629f09a4b" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;M1&lt;/code&gt; and &lt;code&gt;M2&lt;/code&gt; are two different modules. This method returns a &lt;code&gt;Lookup&lt;/code&gt; on &lt;code&gt;targetClass&lt;/code&gt; that records the lookup class of the caller as the new previous lookup class and drops &lt;code&gt;MODULE&lt;/code&gt; access from the full privilege access.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;M1&lt;/code&gt; 과 &lt;code&gt;M2&lt;/code&gt; 는 두 개의 다른 모듈입니다. 이 메소드는 호출자의 조회 클래스를 새로운 이전 조회 클래스로 기록하고 전체 권한 액세스에서 &lt;code&gt;MODULE&lt;/code&gt; 액세스를 삭제 하는 &lt;code&gt;targetClass&lt;/code&gt; 에 대한 &lt;code&gt;Lookup&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="66e965977fe7c88c4fdbd412d4bb7e40d03b8dba" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;SwingWorker&lt;/code&gt; object will not be scheduled to work.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;SwingWorker&lt;/code&gt; 개체가 작동하도록 예약되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b4f36bffe1f7b6bb41da372946047ef309a24273" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;getBundle&lt;/code&gt; attempts to locate a property resource file using the generated properties file name. It generates a path name from the candidate bundle name by replacing all &quot;.&quot; characters with &quot;/&quot; and appending the string &quot;.properties&quot;. It attempts to find a &quot;resource&quot; with this name using &lt;a href=&quot;../lang/classloader#getResource(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.getResource&lt;/code&gt;&lt;/a&gt;. (Note that a &quot;resource&quot; in the sense of &lt;code&gt;getResource&lt;/code&gt; has nothing to do with the contents of a resource bundle, it is just a container of data, such as a file.) If it finds a &quot;resource&quot;, it attempts to create a new &lt;a href=&quot;propertyresourcebundle&quot;&gt;&lt;code&gt;PropertyResourceBundle&lt;/code&gt;&lt;/a&gt; instance from its contents. If successful, this instance becomes the &lt;em&gt;result resource bundle&lt;/em&gt;.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;getBundle&lt;/code&gt; 은 생성 된 특성 파일 이름을 사용하여 특성 자원 파일을 찾으려고 시도합니다. 모든 &quot;.&quot;를 대체하여 후보 번들 이름에서 경로 이름을 생성합니다. &quot;/&quot;문자와 &quot;.properties&quot;문자열 추가 &lt;a href=&quot;../lang/classloader#getResource(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.getResource&lt;/code&gt; 를&lt;/a&gt; 사용하여이 이름으로 &quot;자원&quot;을 찾으려고합니다 . ( &lt;code&gt;getResource&lt;/code&gt; 의 의미에서 &quot;자원&quot;은 자원 번들의 내용과 관련이 없으며 파일과 같은 데이터의 컨테이너 일뿐입니다.) &quot;자원&quot;을 찾으면 작성을 시도합니다. 내용에서 새 &lt;a href=&quot;propertyresourcebundle&quot;&gt; &lt;code&gt;PropertyResourceBundle&lt;/code&gt; &lt;/a&gt; 인스턴스 성공하면이 인스턴스가 &lt;em&gt;결과 리소스 번들이됩니다.&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="f71a3f39b245fcb8e4eb5d2e8af3368f3290ec0b" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;getBundle&lt;/code&gt; attempts to locate a property resource file using the generated properties file name. It generates a path name from the candidate bundle name by replacing all &quot;.&quot; characters with &quot;/&quot; and appending the string &quot;.properties&quot;. It attempts to find a &quot;resource&quot; with this name using &lt;a href=&quot;../lang/classloader#getResource-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.getResource&lt;/code&gt;&lt;/a&gt;. (Note that a &quot;resource&quot; in the sense of &lt;code&gt;getResource&lt;/code&gt; has nothing to do with the contents of a resource bundle, it is just a container of data, such as a file.) If it finds a &quot;resource&quot;, it attempts to create a new &lt;a href=&quot;propertyresourcebundle&quot;&gt;&lt;code&gt;PropertyResourceBundle&lt;/code&gt;&lt;/a&gt; instance from its contents. If successful, this instance becomes the &lt;em&gt;result resource bundle&lt;/em&gt;.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;getBundle&lt;/code&gt; 은 생성 된 특성 파일 이름을 사용하여 특성 자원 파일을 찾으려고 시도합니다. 모든 &quot;.&quot;를 대체하여 후보 번들 이름에서 경로 이름을 생성합니다. &quot;/&quot;를 사용하고 문자열 &quot;.properties&quot;를 추가하는 문자 &lt;a href=&quot;../lang/classloader#getResource-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.getResource&lt;/code&gt; 를&lt;/a&gt; 사용하여이 이름의 &quot;자원&quot;을 찾으려고 시도합니다 . &lt;code&gt;getResource&lt;/code&gt; 의 의미에서 &quot;자원&quot;은 자원 번들의 내용과 관련이 없으며 파일과 같은 데이터 컨테이너 일뿐입니다. &quot;자원&quot;을 찾으면 작성하려고합니다. 내용으로부터 새로운 &lt;a href=&quot;propertyresourcebundle&quot;&gt; &lt;code&gt;PropertyResourceBundle&lt;/code&gt; &lt;/a&gt; 인스턴스 성공하면이 인스턴스는 &lt;em&gt;결과 리소스 번들이&lt;/em&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="f8439f6e48883d1dd9da4522f9fa60399ea21be1" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;getBundle&lt;/code&gt; examines the remainder of the candidate locale list that was used during the pass that generated the result resource bundle. (As before, candidate bundle names where the final component is an empty string are omitted.) When it comes to the end of the candidate list, it tries the plain bundle name. With each of the candidate bundle names it attempts to instantiate a resource bundle (first looking for a class and then a properties file, as described above).</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;getBundle&lt;/code&gt; 은 결과 자원 번들을 생성 한 패스 중에 사용 된 나머지 후보 로케일 목록을 검사합니다. (전과 같이, 최종 컴포넌트가 빈 문자열 인 후보 번들 이름은 생략됩니다.) 후보 목록의 끝에 올 때 일반 번들 이름을 시도합니다. 각 후보 번들 이름을 사용하여 자원 번들을 인스턴스화하려고 시도합니다 (먼저 클래스를 찾은 후 특성 파일을 찾아서 설명 함).</target>
        </trans-unit>
        <trans-unit id="2e28d53068dbf580b222a63e7a86d506d7be79c3" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;code&gt;targetClass&lt;/code&gt; is not accessible.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;targetClass&lt;/code&gt; 에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a159e590d20fca23d5537c215aa04796d9167a5d" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;em&gt;J&lt;/em&gt; is not reconstructible.</source>
          <target state="translated">그렇지 않으면 &lt;em&gt;J&lt;/em&gt; 는 재구성 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a80e05254a7059847b0d739da1441e69d4c68c15" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;em&gt;T&lt;/em&gt; is a parameterized type such as &lt;code&gt;
    List&amp;lt;String&amp;gt;&lt;/code&gt; and &lt;em&gt;genericstring(T)&lt;/em&gt; consists of the following: the fully-qualified name of the parameterized type as returned by &lt;code&gt;Class.getName()&lt;/code&gt;; a left angle bracket (&lt;code&gt;
    &quot;&amp;lt;&quot;&lt;/code&gt;); &lt;em&gt;genericstring(A)&lt;/em&gt; where &lt;em&gt;A&lt;/em&gt; is the first type parameter; if there is a second type parameter &lt;em&gt;B&lt;/em&gt; then &lt;code&gt;&quot;, &quot;&lt;/code&gt; (a comma and a single space) followed by &lt;em&gt;genericstring(B)&lt;/em&gt;; a right angle bracket (&lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt;).</source>
          <target state="translated">그렇지 않으면 &lt;em&gt;T&lt;/em&gt; 는 &lt;code&gt; List&amp;lt;String&amp;gt;&lt;/code&gt; 과 같은 매개 변수화 된 유형 이고 &lt;em&gt;genericstring (T)&lt;/em&gt; 은 다음으로 구성됩니다. &lt;code&gt;Class.getName()&lt;/code&gt; 반환 된 매개 변수화 된 유형의 정규화 된 이름 ; 왼쪽 꺾쇠 괄호 ( &lt;code&gt; &quot;&amp;lt;&quot;&lt;/code&gt; ); &lt;em&gt;genericstring (A)&lt;/em&gt; 여기서 &lt;em&gt;A&lt;/em&gt; 는 첫 번째 유형 매개 변수입니다. 제 2 타입 파라미터가있는 경우 &lt;em&gt;B는&lt;/em&gt; 다음 &lt;code&gt;&quot;, &quot;&lt;/code&gt; 다음 (쉼표 번의 우주) &lt;em&gt;genericstring (B)&lt;/em&gt; ; 오른쪽 꺾쇠 괄호 ( &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="5253a965403212413ca15db43322b3e459ae12a8" translate="yes" xml:space="preserve">
          <source>Otherwise, &lt;em&gt;T&lt;/em&gt; is a parameterized type such as &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; and &lt;em&gt;genericstring(T)&lt;/em&gt; consists of the following: the fully-qualified name of the parameterized type as returned by &lt;code&gt;Class.getName()&lt;/code&gt;; a left angle bracket (&lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt;); &lt;em&gt;genericstring(A)&lt;/em&gt; where &lt;em&gt;A&lt;/em&gt; is the first type parameter; if there is a second type parameter &lt;em&gt;B&lt;/em&gt; then &lt;code&gt;&quot;, &quot;&lt;/code&gt; (a comma and a single space) followed by &lt;em&gt;genericstring(B)&lt;/em&gt;; a right angle bracket (&lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt;).</source>
          <target state="translated">그렇지 않으면, &lt;em&gt;T&lt;/em&gt; 는 &lt;code&gt;List&amp;lt;String&amp;gt;&lt;/code&gt; 과 같은 매개 변수화 된 유형 이고 &lt;em&gt;genericstring (T)&lt;/em&gt; 는 다음으로 구성됩니다. &lt;code&gt;Class.getName()&lt;/code&gt; 의해 리턴 된 매개 변수화 된 유형의 완전한 이름 ; 왼쪽 꺾쇠 괄호 ( &lt;code&gt;&quot;&amp;lt;&quot;&lt;/code&gt; ); &lt;em&gt;genericstring (A)&lt;/em&gt; 여기서 &lt;em&gt;A&lt;/em&gt; 는 첫 번째 유형 매개 변수입니다. 제 2 타입 파라미터가있는 경우 &lt;em&gt;B는&lt;/em&gt; 다음 &lt;code&gt;&quot;, &quot;&lt;/code&gt; 다음 (쉼표 번의 우주) &lt;em&gt;genericstring (B)&lt;/em&gt; ; 직각 괄호 ( &lt;code&gt;&quot;&amp;gt;&quot;&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="d1057429fb47b3eb588f2c3f91f2b2b3a651b6dc" translate="yes" xml:space="preserve">
          <source>Otherwise, B is resolved.</source>
          <target state="translated">그렇지 않으면 B가 해결됩니다.</target>
        </trans-unit>
        <trans-unit id="23f865932f8b8fd7bddc92bf44c8055afdafd419" translate="yes" xml:space="preserve">
          <source>Otherwise, a &lt;code&gt;ClassNotFoundException&lt;/code&gt; is thrown for one of the named interfaces that could not be resolved.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;ClassNotFoundException&lt;/code&gt; 해결할 수없는 명명 된 인터페이스 중 하나에 대해 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="2a789131bab2ea14c2c712f5ffc552f48e5a4a38" translate="yes" xml:space="preserve">
          <source>Otherwise, a problem with the provider found is signalled by a &lt;a href=&quot;jmxproviderexception&quot;&gt;&lt;code&gt;JMXProviderException&lt;/code&gt;&lt;/a&gt; whose &lt;a href=&quot;../../../../java.base/java/lang/throwable#getCause()&quot;&gt;&lt;code&gt;&lt;em&gt;cause&lt;/em&gt;&lt;/code&gt;&lt;/a&gt; indicates the underlying exception, as follows:</source>
          <target state="translated">그렇지 않으면 발견 된 공급자의 문제 가 &lt;a href=&quot;../../../../java.base/java/lang/throwable#getCause()&quot;&gt; &lt;code&gt;&lt;em&gt;cause&lt;/em&gt;&lt;/code&gt; &lt;/a&gt; 되는 &lt;a href=&quot;jmxproviderexception&quot;&gt; &lt;code&gt;JMXProviderException&lt;/code&gt; 에&lt;/a&gt; 의해 신호됩니다.&lt;em&gt;&lt;/em&gt; 다음과 같이 기본 예외를 나타냅니다 :</target>
        </trans-unit>
        <trans-unit id="6e2d60383a92ab7bbac8af931c4290628bad786e" translate="yes" xml:space="preserve">
          <source>Otherwise, a problem with the provider found is signalled by a &lt;a href=&quot;jmxproviderexception&quot;&gt;&lt;code&gt;JMXProviderException&lt;/code&gt;&lt;/a&gt; whose &lt;a href=&quot;jmxproviderexception#getCause--&quot;&gt;&lt;code&gt;&lt;em&gt;cause&lt;/em&gt;&lt;/code&gt;&lt;/a&gt; indicates the underlying exception, as follows:</source>
          <target state="translated">그렇지 않으면, 공급자 FOUND에 문제가에 의해 신호된다 &lt;a href=&quot;jmxproviderexception&quot;&gt; &lt;code&gt;JMXProviderException&lt;/code&gt; &lt;/a&gt; 그 &lt;a href=&quot;jmxproviderexception#getCause--&quot;&gt; &lt;code&gt;&lt;em&gt;cause&lt;/em&gt;&lt;/code&gt; &lt;/a&gt; 다음과 같이 기본 예외를 나타냅니다 :</target>
        </trans-unit>
        <trans-unit id="f427c5f134854328dcdb4f1458b502e06758519a" translate="yes" xml:space="preserve">
          <source>Otherwise, a remote call is made as follows:</source>
          <target state="translated">그렇지 않으면 다음과 같이 원격 호출이 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="a11179e2cf4b087c2a629ef23eb953158f023a2b" translate="yes" xml:space="preserve">
          <source>Otherwise, an input method or keyboard layout that supports the requested locale is selected in an implementation dependent way.</source>
          <target state="translated">그렇지 않으면 요청 된 로케일을 지원하는 입력 방법 또는 키보드 레이아웃이 구현에 따라 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="7993c19aae7cc48f36faacfb52fed06c26189c0d" translate="yes" xml:space="preserve">
          <source>Otherwise, any word that matches any prefix of &lt;code&gt;JANUARY,
     FEBRUARY, MARCH, APRIL, MAY, JUNE, JULY, AUGUST, SEPTEMBER,
     OCTOBER, NOVEMBER&lt;/code&gt;, or &lt;code&gt;DECEMBER&lt;/code&gt;, ignoring case, and considering them in the order given here, is recognized as specifying a month and is converted to a number (&lt;code&gt;0&lt;/code&gt; to &lt;code&gt;11&lt;/code&gt;). For example, &lt;code&gt;aug, Sept, april&lt;/code&gt;, and &lt;code&gt;NOV&lt;/code&gt; are recognized as months. So is &lt;code&gt;Ma&lt;/code&gt;, which is recognized as &lt;code&gt;MARCH&lt;/code&gt;, not &lt;code&gt;MAY&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면, &lt;code&gt;JANUARY, FEBRUARY, MARCH, APRIL, MAY, JUNE, JULY, AUGUST, SEPTEMBER, OCTOBER, NOVEMBER&lt;/code&gt; 또는 &lt;code&gt;DECEMBER&lt;/code&gt; 월의 접두어와 일치하는 단어는 대소 문자를 무시하고 여기에 주어진 순서대로 고려하여 지정된 것으로 인식됩니다. 한 달이며 숫자 ( &lt;code&gt;0&lt;/code&gt; ~ &lt;code&gt;11&lt;/code&gt; ) 로 변환됩니다 . 예를 들어, &lt;code&gt;aug, Sept, april&lt;/code&gt; 및 &lt;code&gt;NOV&lt;/code&gt; 는 월로 인식됩니다. 그래서 인 &lt;code&gt;Ma&lt;/code&gt; 로 인식되고, &lt;code&gt;MARCH&lt;/code&gt; ,하지 &lt;code&gt;MAY&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1b24f55fce484783ac817127360ccbb3f85a08f9" translate="yes" xml:space="preserve">
          <source>Otherwise, calendar system specific forms are applied. For both formatting and parsing, if the number of pattern letters is 4 or more, a calendar specific &lt;a href=&quot;../util/calendar#LONG&quot;&gt;long form&lt;/a&gt; is used. Otherwise, a calendar specific &lt;a href=&quot;../util/calendar#SHORT&quot;&gt;short or abbreviated form&lt;/a&gt; is used.</source>
          <target state="translated">그렇지 않으면 달력 시스템 특정 양식이 적용됩니다. 서식과 구문 분석 모두 패턴 문자 수가 4 이상인 경우 달력 특정 &lt;a href=&quot;../util/calendar#LONG&quot;&gt;긴 형식&lt;/a&gt; 이 사용됩니다. 그렇지 않으면 달력 특정 &lt;a href=&quot;../util/calendar#SHORT&quot;&gt;축약 형 또는 약식 양식&lt;/a&gt; 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="80a2ee758eeef3f864a555ef2afeb5677b44542d" translate="yes" xml:space="preserve">
          <source>Otherwise, either &lt;code&gt;connect&lt;/code&gt; has never been called on this object, or it has been called but produced an exception. Then calling &lt;code&gt;connect&lt;/code&gt; will attempt to establish a connection to the connector server.</source>
          <target state="translated">그렇지 않으면 이 오브젝트에서 &lt;code&gt;connect&lt;/code&gt; 가 호출되지 않았거나 호출되었지만 예외가 발생했습니다. 그런 다음 &lt;code&gt;connect&lt;/code&gt; 를 호출 하면 커넥터 서버에 연결을 시도합니다.</target>
        </trans-unit>
        <trans-unit id="39bda2194b5778bde4b37eede5bbe9742760fc87" translate="yes" xml:space="preserve">
          <source>Otherwise, expose the namespace and local name of the corresponding anonymous type name.</source>
          <target state="translated">그렇지 않으면 해당 익명 형식 이름의 네임 스페이스와 로컬 이름을 노출합니다.</target>
        </trans-unit>
        <trans-unit id="14cacb269134182da747abef7bca436cd1a55f08" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;M1&lt;/code&gt; and &lt;code&gt;M2&lt;/code&gt; are the same module, this method returns a &lt;code&gt;Lookup&lt;/code&gt; on &lt;code&gt;targetClass&lt;/code&gt; with &lt;a href=&quot;methodhandles.lookup#hasFullPrivilegeAccess()&quot;&gt;full privilege access&lt;/a&gt; and &lt;code&gt;null&lt;/code&gt; previous lookup class.</source>
          <target state="translated">그렇지 않으면, &lt;code&gt;M1&lt;/code&gt; 및 &lt;code&gt;M2&lt;/code&gt; 가 동일한 모듈이며,이 방법은 반환 &lt;code&gt;Lookup&lt;/code&gt; 에 &lt;code&gt;targetClass&lt;/code&gt; 함께 &lt;a href=&quot;methodhandles.lookup#hasFullPrivilegeAccess()&quot;&gt;전체 권한 액세스&lt;/a&gt; 및 &lt;code&gt;null&lt;/code&gt; 이전 조회 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="cbd81952e90e7c49f8b860baf999c76b16d07f64" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;code&gt;newValue&lt;/code&gt; is less than &lt;code&gt;minimum&lt;/code&gt; it's set to &lt;code&gt;minimum&lt;/code&gt;, if its greater than &lt;code&gt;maximum&lt;/code&gt; then it's set to &lt;code&gt;maximum&lt;/code&gt;, and if it's greater than &lt;code&gt;value+extent&lt;/code&gt; then it's set to &lt;code&gt;value+extent&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면, &lt;code&gt;newValue&lt;/code&gt; 보다 작은 &lt;code&gt;minimum&lt;/code&gt; 그것으로 설정되어 &lt;code&gt;minimum&lt;/code&gt; , 그것보다 큰 경우 &lt;code&gt;maximum&lt;/code&gt; 다음의 집합에 &lt;code&gt;maximum&lt;/code&gt; 및 그것의 경우보다 더 큰 &lt;code&gt;value+extent&lt;/code&gt; 에 다음의 일련의 &lt;code&gt;value+extent&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="771b372915ff2f6ce1a8e4efae8d014391fc1aa4" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;J&lt;/em&gt; has a public no-arg constructor, and for every getter in &lt;em&gt;J&lt;/em&gt; with type &lt;em&gt;T&lt;/em&gt; and name &lt;em&gt;N&lt;/em&gt; there is a corresponding setter with the same name and type, then an instance of &lt;em&gt;J&lt;/em&gt; is constructed with the no-arg constructor and the setters are called with the reconstructed items from the &lt;code&gt;CompositeData&lt;/code&gt; to restore the values. For example, if there is a method</source>
          <target state="translated">그렇지 않은 경우, &lt;em&gt;J에&lt;/em&gt; 인수없는 공개 생성자가 있고 &lt;em&gt;J의&lt;/em&gt; 유형 &lt;em&gt;T&lt;/em&gt; 와 이름이 &lt;em&gt;N 인&lt;/em&gt; 모든 getter에 대해 동일한 이름과 유형의 해당 설정자가있는 경우 &lt;em&gt;J&lt;/em&gt; 의 인스턴스는 인수가없는 생성자로 구성됩니다. setter는 값을 복원하기 위해 &lt;code&gt;CompositeData&lt;/code&gt; 에서 재구성 된 항목과 함께 호출 됩니다. 예를 들어, 방법이 있다면</target>
        </trans-unit>
        <trans-unit id="7c2101cb1c2fe2a832f5ce5cedad0f9c239d6bd5" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;J&lt;/em&gt; has at least one public constructor with a &lt;a href=&quot;../../java/beans/constructorproperties&quot;&gt;&lt;code&gt;ConstructorProperties&lt;/code&gt;&lt;/a&gt; annotation, then one of those constructors (not necessarily always the same one) will be called to reconstruct an instance of &lt;em&gt;J&lt;/em&gt;. Every such annotation must list as many strings as the constructor has parameters; each string must name a property corresponding to a getter of &lt;em&gt;J&lt;/em&gt;; and the type of this getter must be the same as the corresponding constructor parameter. It is not an error for there to be getters that are not mentioned in the &lt;code&gt;ConstructorProperties&lt;/code&gt; annotation (these may correspond to information that is not needed to reconstruct the object).</source>
          <target state="translated">그렇지 않은 경우 &lt;em&gt;J는&lt;/em&gt; A를 적어도 하나의 public 생성자가 &lt;a href=&quot;../../java/beans/constructorproperties&quot;&gt; &lt;code&gt;ConstructorProperties&lt;/code&gt; 의&lt;/a&gt; 주석 (반드시 항상 같은 것이 아니다) 그 생성자의 다음 하나의 인스턴스 재구성하기 위해 호출됩니다 &lt;em&gt;J를&lt;/em&gt; . 이러한 모든 주석에는 생성자가 매개 변수를 갖는 수만큼 문자열이 나열되어야합니다. 각 문자열은 &lt;em&gt;J&lt;/em&gt; 의 getter에 해당하는 속성의 이름을 지정해야합니다 . 이 getter의 유형은 해당 생성자 매개 변수와 동일해야합니다. &lt;code&gt;ConstructorProperties&lt;/code&gt; 주석에 언급되지 않은 게터가있는 것은 오류가 아닙니다 (이것은 객체를 재구성하는 데 필요하지 않은 정보에 해당 할 수 있습니다).</target>
        </trans-unit>
        <trans-unit id="64a82db1526d3a41caee9023f594850955f33ae0" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;J&lt;/em&gt; has at least one public constructor with either &lt;a href=&quot;constructorparameters&quot;&gt;&lt;code&gt;@javax.management.ConstructorParameters&lt;/code&gt;&lt;/a&gt; or &lt;code&gt;@java.beans.ConstructoProperties&lt;/code&gt; annotation, then one of those constructors (not necessarily always the same one) will be called to reconstruct an instance of &lt;em&gt;J&lt;/em&gt;. If a constructor is annotated with both &lt;code&gt;@javax.management.ConstructorParameters&lt;/code&gt; and &lt;code&gt;@java.beans.ConstructorProperties&lt;/code&gt;, &lt;code&gt;@javax.management.ConstructorParameters&lt;/code&gt; will be used and &lt;code&gt;@java.beans.ConstructorProperties&lt;/code&gt; will be ignored. Every such annotation must list as many strings as the constructor has parameters; each string must name a property corresponding to a getter of &lt;em&gt;J&lt;/em&gt;; and the type of this getter must be the same as the corresponding constructor parameter. It is not an error for there to be getters that are not mentioned in the &lt;code&gt;@ConstructorParameters&lt;/code&gt; or &lt;code&gt;@ConstructorProperties&lt;/code&gt; annotations (these may correspond to information that is not needed to reconstruct the object).</source>
          <target state="translated">그렇지 않으면 &lt;em&gt;J에 &lt;/em&gt;&lt;a href=&quot;constructorparameters&quot;&gt; &lt;code&gt;@javax.management.ConstructorParameters&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;@java.beans.ConstructoProperties&lt;/code&gt; 어노테이션이있는 공용 생성자가 하나 이상있는 경우 해당 생성자 중 하나 (항상 동일하지는 않음)가 호출되어 &lt;em&gt;J&lt;/em&gt; 의 인스턴스를 재구성합니다 . 생성자는 모두의 주석을 붙일 수 있고있는 경우 &lt;code&gt;@javax.management.ConstructorParameters&lt;/code&gt; 및 &lt;code&gt;@java.beans.ConstructorProperties&lt;/code&gt; , &lt;code&gt;@javax.management.ConstructorParameters&lt;/code&gt; 사용되며 &lt;code&gt;@java.beans.ConstructorProperties&lt;/code&gt; 무시됩니다. 그러한 모든 주석은 생성자에 매개 변수가있는만큼의 문자열을 나열해야합니다. 각 문자열은 &lt;em&gt;J&lt;/em&gt; 의 getter에 해당하는 속성의 이름을 지정해야합니다 . 이 getter의 유형은 해당 생성자 매개 변수와 동일해야합니다. &lt;code&gt;@ConstructorParameters&lt;/code&gt; 또는 &lt;code&gt;@ConstructorProperties&lt;/code&gt; 주석에 언급되지 않은 getter가 있다는 것은 오류가 아닙니다 (객체를 재구성하는 데 필요하지 않은 정보에 해당 할 수 있음).</target>
        </trans-unit>
        <trans-unit id="83df398f72642b500496d7ff1ae7cb89ae031cf4" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;J&lt;/em&gt; is an interface that has no methods other than getters, an instance of &lt;em&gt;J&lt;/em&gt; is constructed using a &lt;a href=&quot;../../../java.base/java/lang/reflect/proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;openmbean/compositedatainvocationhandler&quot;&gt;&lt;code&gt;CompositeDataInvocationHandler&lt;/code&gt;&lt;/a&gt; backed by the &lt;code&gt;
        CompositeData&lt;/code&gt; being converted.</source>
          <target state="translated">그렇지 않은 경우, &lt;em&gt;J는&lt;/em&gt; 게터 외에 다른 방법이없는 인터페이스의 인스턴스 &lt;em&gt;J를&lt;/em&gt; 사용하여 A 구성되는 &lt;a href=&quot;../../../java.base/java/lang/reflect/proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; 로모그래퍼 &lt;a href=&quot;openmbean/compositedatainvocationhandler&quot;&gt; &lt;code&gt;CompositeDataInvocationHandler&lt;/code&gt; 가&lt;/a&gt; 에 의해 뒷받침 &lt;code&gt; CompositeData&lt;/code&gt; 변환 될.</target>
        </trans-unit>
        <trans-unit id="f1b18bacf91ec92b7c104a5cd06df7ca9720006d" translate="yes" xml:space="preserve">
          <source>Otherwise, if &lt;em&gt;J&lt;/em&gt; is an interface that has no methods other than getters, an instance of &lt;em&gt;J&lt;/em&gt; is constructed using a &lt;a href=&quot;../../java/lang/reflect/proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;openmbean/compositedatainvocationhandler&quot;&gt;&lt;code&gt;CompositeDataInvocationHandler&lt;/code&gt;&lt;/a&gt; backed by the &lt;code&gt;CompositeData&lt;/code&gt; being converted.</source>
          <target state="translated">그렇지 않은 경우, &lt;em&gt;J는&lt;/em&gt; 게터 외에 다른 방법이없는 인터페이스의 인스턴스 &lt;em&gt;J를&lt;/em&gt; 사용하여 A 구성되는 &lt;a href=&quot;../../java/lang/reflect/proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt; 로모그래퍼 &lt;a href=&quot;openmbean/compositedatainvocationhandler&quot;&gt; &lt;code&gt;CompositeDataInvocationHandler&lt;/code&gt; 가&lt;/a&gt; 에 의해 뒷받침 &lt;code&gt;CompositeData&lt;/code&gt; 변환 될.</target>
        </trans-unit>
        <trans-unit id="082d29576a7dca9538e222a02095a7c4ea1552fc" translate="yes" xml:space="preserve">
          <source>Otherwise, if L successfully loads &lt;code&gt;className&lt;/code&gt; and X is an instance of this class, the result is true.</source>
          <target state="translated">그렇지 않으면 L이 &lt;code&gt;className&lt;/code&gt; 을 성공적으로로드 하고 X가이 클래스의 인스턴스이면 결과는 true입니다.</target>
        </trans-unit>
        <trans-unit id="72a5c37beff569f5ac90a0dc4927b28b5349fdf7" translate="yes" xml:space="preserve">
          <source>Otherwise, if L successfully loads both N and &lt;code&gt;className&lt;/code&gt;, and the second class is assignable from the first, the result is true.</source>
          <target state="translated">그렇지 않으면 L이 N과 &lt;code&gt;className&lt;/code&gt; 을 성공적으로로드 하고 두 번째 클래스를 첫 번째 클래스에서 할당 할 수 있으면 결과는 true입니다.</target>
        </trans-unit>
        <trans-unit id="9d3d85f6600e5711779691ecb490b89ccc9aa38d" translate="yes" xml:space="preserve">
          <source>Otherwise, if a context is present, the mode is Ed25519ctx or Ed448</source>
          <target state="translated">그렇지 않고 컨텍스트가있는 경우 모드는 Ed25519ctx 또는 Ed448입니다.</target>
        </trans-unit>
        <trans-unit id="e212db8d278c1808b677df7857d5c3e4c894c2d4" translate="yes" xml:space="preserve">
          <source>Otherwise, if a mutable target is required, a &lt;a href=&quot;mutablecallsite&quot;&gt;mutable call site&lt;/a&gt; may be used.</source>
          <target state="translated">그렇지 않으면 변경 가능한 대상이 필요한 경우 &lt;a href=&quot;mutablecallsite&quot;&gt;변경 가능한 호출 사이트를&lt;/a&gt; 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad68ba9b92e3de22f9316c9571397043ef06e84e" translate="yes" xml:space="preserve">
          <source>Otherwise, if all characters in this string are space (as defined above), then a &lt;code&gt;String&lt;/code&gt; object representing an empty string is returned.</source>
          <target state="translated">그렇지 않고이 문자열의 모든 문자가 공백이면 (위에 정의 된대로) 빈 문자열을 나타내는 &lt;code&gt;String&lt;/code&gt; 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3cdbf69e34a3eb7e359cabdf6709b2ab58edcbd9" translate="yes" xml:space="preserve">
          <source>Otherwise, if all of the named interfaces can be resolved through the codebase loader, then,</source>
          <target state="translated">그렇지 않고 모든 명명 된 인터페이스가 코드베이스 로더를 통해 해석 될 수 있다면,</target>
        </trans-unit>
        <trans-unit id="04375532ba9825fd83a9c5f793b1f80ee99182a5" translate="yes" xml:space="preserve">
          <source>Otherwise, if any actual component of the source array from position &lt;code&gt;srcPos&lt;/code&gt; through &lt;code&gt;srcPos+length-1&lt;/code&gt; cannot be converted to the component type of the destination array by assignment conversion, an &lt;code&gt;ArrayStoreException&lt;/code&gt; is thrown. In this case, let &lt;b&gt;&lt;i&gt;k&lt;/i&gt;&lt;/b&gt; be the smallest nonnegative integer less than length such that &lt;code&gt;src[srcPos+&lt;/code&gt;</source>
          <target state="translated">그렇지 않으면, 위치 &lt;code&gt;srcPos&lt;/code&gt; 에서 &lt;code&gt;srcPos+length-1&lt;/code&gt; 까지의 소스 배열의 실제 구성 요소를 지정 변환에 의해 대상 배열의 구성 요소 유형으로 변환 할 수 없으면 &lt;code&gt;ArrayStoreException&lt;/code&gt; 이 발생합니다. 이 경우 &lt;b&gt;&lt;i&gt;k&lt;/i&gt;&lt;/b&gt; 를 &lt;code&gt;src[srcPos+&lt;/code&gt; 되도록 길이보다 작은 음이 아닌 가장 작은 정수 라고하자</target>
        </trans-unit>
        <trans-unit id="4216149729f063c71d68bea08d402985346bb7fb" translate="yes" xml:space="preserve">
          <source>Otherwise, if any of the following is true, an &lt;code&gt;ArrayStoreException&lt;/code&gt; is thrown and the destination is not modified:</source>
          <target state="translated">그렇지 않은 경우, 다음 중 하나라도 해당되면 &lt;code&gt;ArrayStoreException&lt;/code&gt; 이 발생하고 대상이 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4d0b70657772da605a07156baccf11bda0dd68e1" translate="yes" xml:space="preserve">
          <source>Otherwise, if any of the following is true, an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; is thrown and the destination is not modified:</source>
          <target state="translated">그렇지 않으면, 다음 중 하나에 해당하면 &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; 이 발생하고 대상이 수정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a43984ef831024ecc0befe11a460822b67db973d" translate="yes" xml:space="preserve">
          <source>Otherwise, if the &lt;code&gt;JMXServiceURL&lt;/code&gt; was null, or its protocol part was &lt;code&gt;rmi&lt;/code&gt;, an object of type &lt;a href=&quot;rmijrmpserverimpl&quot;&gt;&lt;code&gt;RMIJRMPServerImpl&lt;/code&gt;&lt;/a&gt; is created.</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;JMXServiceURL&lt;/code&gt; 이 널이거나 해당 프로토콜 부분이 &lt;code&gt;rmi&lt;/code&gt; 인 경우 &lt;a href=&quot;rmijrmpserverimpl&quot;&gt; &lt;code&gt;RMIJRMPServerImpl&lt;/code&gt; &lt;/a&gt; 유형의 오브젝트 가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="3d5f676521c882fa6d5816ef21f4221b694dc107" translate="yes" xml:space="preserve">
          <source>Otherwise, if the &lt;code&gt;SecureRandomSpi(SecureRandomParameters)&lt;/code&gt; constructor is not overridden in an implementation, the &lt;a href=&quot;#%3Cinit%3E()&quot;&gt;&lt;code&gt;SecureRandomSpi()&lt;/code&gt;&lt;/a&gt; constructor must be overridden and it will be called if an object is instantiated with one of &lt;code&gt;SecureRandom&lt;/code&gt;'s &lt;code&gt;getInstance&lt;/code&gt; methods &lt;em&gt;without&lt;/em&gt; a &lt;code&gt;SecureRandomParameters&lt;/code&gt; argument. Calling one of &lt;code&gt;SecureRandom&lt;/code&gt;'s &lt;code&gt;getInstance&lt;/code&gt; methods &lt;em&gt;with&lt;/em&gt; a &lt;code&gt;SecureRandomParameters&lt;/code&gt; argument will never return an instance of this implementation. The &lt;a href=&quot;#engineGetParameters()&quot;&gt;&lt;code&gt;engineGetParameters()&lt;/code&gt;&lt;/a&gt; method must return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면, 경우에 &lt;code&gt;SecureRandomSpi(SecureRandomParameters)&lt;/code&gt; 생성자 구현에서 재정의되지는 &lt;a href=&quot;#%3Cinit%3E()&quot;&gt; &lt;code&gt;SecureRandomSpi()&lt;/code&gt; &lt;/a&gt; 생성자는 재정의해야하며 물체가 중 하나를 인스턴스화 경우는 호출 될 것이다 &lt;code&gt;SecureRandom&lt;/code&gt; 의 의 &lt;code&gt;getInstance&lt;/code&gt; 방법 &lt;em&gt;이없는 &lt;/em&gt; &lt;code&gt;SecureRandomParameters&lt;/code&gt; 의 인수입니다. 중 하나를 호출 &lt;code&gt;SecureRandom&lt;/code&gt; 의 &lt;code&gt;getInstance&lt;/code&gt; 방법 &lt;em&gt;과 &lt;/em&gt; &lt;code&gt;SecureRandomParameters&lt;/code&gt; 의 인수는이 구현의 인스턴스를 반환하지 않습니다. &lt;a href=&quot;#engineGetParameters()&quot;&gt; &lt;code&gt;engineGetParameters()&lt;/code&gt; &lt;/a&gt; 메서드는 반환해야 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1dc3d0eb2ee8f4ae1f064914deff2c656fd4b64e" translate="yes" xml:space="preserve">
          <source>Otherwise, if the caller and adapter arity are the same, and the trailing parameter type of the caller is a reference type identical to or assignable to the trailing parameter type of the adapter, the arguments and return values are converted pairwise, as if by &lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt; on a fixed arity method handle.</source>
          <target state="translated">그렇지 않고 호출자와 어댑터 배열이 동일하고 호출자의 후행 매개 변수 유형이 어댑터의 후행 매개 변수 유형과 동일하거나 할당 가능한 참조 유형 인 경우 인수와 반환 값은 마치 &lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;asType&lt;/code&gt; 에&lt;/a&gt; 의해 쌍으로 변환됩니다 . 고정 된 arity 메서드 핸들에서.</target>
        </trans-unit>
        <trans-unit id="da82fa1b3233e17f19fe7399980914e51736ab45" translate="yes" xml:space="preserve">
          <source>Otherwise, if the caller and adapter arity are the same, and the trailing parameter type of the caller is a reference type identical to or assignable to the trailing parameter type of the adapter, the arguments and return values are converted pairwise, as if by &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt; on a fixed arity method handle.</source>
          <target state="translated">그렇지 않으면, 호출자와 어댑터 배열이 동일하고 호출자의 후행 매개 변수 유형이 어댑터의 후행 매개 변수 유형과 동일하거나 지정할 수있는 참조 유형 인 경우, 인수와 리턴 값은 &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;asType&lt;/code&gt; 에&lt;/a&gt; 의한 것처럼 쌍으로 변환됩니다 . 고정 된 arity 메소드 핸들에.</target>
        </trans-unit>
        <trans-unit id="91371ec963b34fcbe9a6e2391b6a744e21f002bc" translate="yes" xml:space="preserve">
          <source>Otherwise, if the class loader is an instance of &lt;code&gt;URLClassLoader&lt;/code&gt;, then the returned string is a space-separated list of the external forms of the URLs returned by invoking the &lt;code&gt;getURLs&lt;/code&gt; methods of the loader. If the &lt;code&gt;URLClassLoader&lt;/code&gt; was created by this provider to service an invocation of its &lt;code&gt;loadClass&lt;/code&gt; or &lt;code&gt;loadProxyClass&lt;/code&gt; methods, then no permissions are required to get the associated codebase string. If it is an arbitrary other &lt;code&gt;URLClassLoader&lt;/code&gt; instance, then if there is a security manager, its &lt;code&gt;checkPermission&lt;/code&gt; method will be invoked once for each URL returned by the &lt;code&gt;getURLs&lt;/code&gt; method, with the permission returned by invoking &lt;code&gt;openConnection().getPermission()&lt;/code&gt; on each URL; if any of those invocations throws a &lt;code&gt;SecurityException&lt;/code&gt; or an &lt;code&gt;IOException&lt;/code&gt;, then the value of the &lt;code&gt;java.rmi.server.codebase&lt;/code&gt; property (or possibly an earlier cached value) is returned, or &lt;code&gt;null&lt;/code&gt; is returned if that property is not set.</source>
          <target state="translated">그렇지 않고 클래스 로더가 &lt;code&gt;URLClassLoader&lt;/code&gt; 의 인스턴스 이면 반환 된 문자열은 로더 의 &lt;code&gt;getURLs&lt;/code&gt; 메서드를 호출하여 반환 된 URL의 외부 형식을 공백으로 구분 한 목록입니다 . 경우 &lt;code&gt;URLClassLoader&lt;/code&gt; 의가 그것의 호출 서비스를이 공급자에 의해 만들어진 &lt;code&gt;loadClass&lt;/code&gt; 또는 &lt;code&gt;loadProxyClass&lt;/code&gt; 방법을, 다음 사용 권한이 관련된 코드베이스 캐릭터 라인을 취득하기위한 필요하지 않습니다. 임의의 다른 &lt;code&gt;URLClassLoader&lt;/code&gt; 인스턴스 인 경우 보안 관리자가있는 경우 &lt;code&gt;getURLs&lt;/code&gt; 의해 반환 된 각 URL에 대해 해당 &lt;code&gt;checkPermission&lt;/code&gt; 메서드가 한 번씩 호출됩니다 메서드에서 호출되며 &lt;code&gt;openConnection().getPermission()&lt;/code&gt; 각 URL에서 이러한 호출 중 하나가 &lt;code&gt;SecurityException&lt;/code&gt; 또는 &lt;code&gt;IOException&lt;/code&gt; 을 throw 하면 &lt;code&gt;java.rmi.server.codebase&lt;/code&gt; 속성 값 (또는 이전 캐시 된 값)이 반환되거나 해당 속성이 설정되지 않은 경우 &lt;code&gt;null&lt;/code&gt; 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="514fbb4b329c4d123a507dcc5b162089f1890bf4" translate="yes" xml:space="preserve">
          <source>Otherwise, if the class matches the Standard MBean naming conventions, then the MBean is a Standard MBean.</source>
          <target state="translated">그렇지 않으면 클래스가 표준 MBean 이름 지정 규칙과 일치하면 MBean은 표준 MBean입니다.</target>
        </trans-unit>
        <trans-unit id="40fda47e7c3605bb18e1bb7a58612a93d52343f6" translate="yes" xml:space="preserve">
          <source>Otherwise, if the protocol part of the &lt;code&gt;JMXServiceURL&lt;/code&gt; supplied to the constructor was &lt;code&gt;iiop&lt;/code&gt;, an object of type &lt;a href=&quot;rmiiiopserverimpl&quot;&gt;&lt;code&gt;RMIIIOPServerImpl&lt;/code&gt;&lt;/a&gt; is created.</source>
          <target state="translated">그렇지 않으면 생성자에 제공된 &lt;code&gt;JMXServiceURL&lt;/code&gt; 의 프로토콜 부분 이 &lt;code&gt;iiop&lt;/code&gt; 이면 &lt;a href=&quot;rmiiiopserverimpl&quot;&gt; &lt;code&gt;RMIIIOPServerImpl&lt;/code&gt; &lt;/a&gt; 유형의 오브젝트 가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="90bdd0fb74e442d490001f4f2fbc81a0ad3b8d6d" translate="yes" xml:space="preserve">
          <source>Otherwise, if the standard error of the process has been redirected using &lt;a href=&quot;processbuilder#redirectErrorStream(boolean)&quot;&gt;&lt;code&gt;ProcessBuilder.redirectErrorStream&lt;/code&gt;&lt;/a&gt; then the input stream returned by this method will receive the merged standard output and the standard error of the process.</source>
          <target state="translated">그렇지 않고 &lt;a href=&quot;processbuilder#redirectErrorStream(boolean)&quot;&gt; &lt;code&gt;ProcessBuilder.redirectErrorStream&lt;/code&gt; &lt;/a&gt; 을 사용하여 프로세스의 표준 오류가 리디렉션 된 경우이 메서드에서 반환 된 입력 스트림은 병합 된 표준 출력과 프로세스의 표준 오류를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="0b110938a399b222791a9312a497a896b95eb0b1" translate="yes" xml:space="preserve">
          <source>Otherwise, if the standard error of the subprocess has been redirected using &lt;a href=&quot;processbuilder#redirectErrorStream-boolean-&quot;&gt;&lt;code&gt;ProcessBuilder.redirectErrorStream&lt;/code&gt;&lt;/a&gt; then the input stream returned by this method will receive the merged standard output and the standard error of the subprocess.</source>
          <target state="translated">그렇지 않으면, &lt;a href=&quot;processbuilder#redirectErrorStream-boolean-&quot;&gt; &lt;code&gt;ProcessBuilder.redirectErrorStream&lt;/code&gt; &lt;/a&gt; 을 사용하여 서브 프로세스의 표준 오류가 재 지정된 경우이 메소드가 리턴 한 입력 스트림은 병합 된 표준 출력과 서브 프로세스의 표준 오류를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="98802c39877a77d6f649cb91bc04d6ec871421ae" translate="yes" xml:space="preserve">
          <source>Otherwise, if the string contains &quot;{&amp;lt;digit&amp;gt;&quot; where &amp;lt;digit&amp;gt; is in [0-9], java.text.MessageFormat is used to format the string.</source>
          <target state="translated">그렇지 않고 문자열에 &quot;{&amp;lt;digit&amp;gt;&quot;가 포함되어 있고 &amp;lt;digit&amp;gt;가 [0-9]에있는 경우 java.text.MessageFormat을 사용하여 문자열을 형식화합니다.</target>
        </trans-unit>
        <trans-unit id="59fb0c3d54dc548e2ae3aa58a0b22526f8258a51" translate="yes" xml:space="preserve">
          <source>Otherwise, if the string contains &quot;{0&quot; then java.text.MessageFormat is used to format the string.</source>
          <target state="translated">그렇지 않은 경우, 문자열에 &quot;{0&quot;이 포함 된 경우 java.text.MessageFormat을 사용하여 문자열을 형식화하십시오.</target>
        </trans-unit>
        <trans-unit id="66c6a2e6b670afa5e0bbfc3d053bb8a0cd014861" translate="yes" xml:space="preserve">
          <source>Otherwise, if the system property &lt;code&gt;jmx.remote.protocol.provider.pkgs&lt;/code&gt; exists, then its value is the provider package list.</source>
          <target state="translated">그렇지 않으면 시스템 특성 &lt;code&gt;jmx.remote.protocol.provider.pkgs&lt;/code&gt; 가 존재하면 해당 값이 제공자 패키지 목록입니다.</target>
        </trans-unit>
        <trans-unit id="12926f4fef730cbcc527dde713c69f559b2c1361" translate="yes" xml:space="preserve">
          <source>Otherwise, if the wrapped implementation is &lt;var&gt;this&lt;/var&gt;, &lt;var&gt;ctors&lt;/var&gt; is returned.</source>
          <target state="translated">그렇지 않으면, 랩핑 된 구현이 &lt;var&gt;this&lt;/var&gt; 인 경우 &lt;var&gt;ctors&lt;/var&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="ee7615bd5000c59a83e1890ec4b568c133181d25" translate="yes" xml:space="preserve">
          <source>Otherwise, if there is no character with a code greater than &lt;code&gt;'\u0020'&lt;/code&gt; in the string, then a &lt;code&gt;String&lt;/code&gt; object representing an empty string is returned.</source>
          <target state="translated">그렇지 않으면 문자열에 코드가 &lt;code&gt;'\u0020'&lt;/code&gt; 보다 큰 문자가 없으면 빈 문자열을 나타내는 &lt;code&gt;String&lt;/code&gt; 객체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="5b334ec2174e14eca3e8b6d72a6d52e5c502450a" translate="yes" xml:space="preserve">
          <source>Otherwise, if this class is not in a named module then the rules for searching resources associated with a given class are implemented by the defining &lt;a href=&quot;classloader&quot;&gt;class loader&lt;/a&gt; of the class. This method delegates to this &lt;code&gt;Class&lt;/code&gt; object's class loader. If this &lt;code&gt;Class&lt;/code&gt; object was loaded by the bootstrap class loader, the method delegates to &lt;a href=&quot;classloader#getSystemResource(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.getSystemResource(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇지 않고이 클래스가 명명 된 모듈에 없으면 지정된 클래스와 관련된 리소스 검색 규칙은 클래스의 정의 &lt;a href=&quot;classloader&quot;&gt;클래스 로더&lt;/a&gt; 에 의해 구현됩니다 . 이 메소드는이 &lt;code&gt;Class&lt;/code&gt; 객체의 클래스 로더에 위임합니다 . 이 &lt;code&gt;Class&lt;/code&gt; 객체가 부트 스트랩 클래스 로더에 의해로드 된 경우 메서드는 &lt;a href=&quot;classloader#getSystemResource(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.getSystemResource(java.lang.String)&lt;/code&gt; &lt;/a&gt; 위임합니다 .</target>
        </trans-unit>
        <trans-unit id="25d1e7b42173dfb36198c9aa275607688b88b52c" translate="yes" xml:space="preserve">
          <source>Otherwise, if this class is not in a named module then the rules for searching resources associated with a given class are implemented by the defining &lt;a href=&quot;classloader&quot;&gt;class loader&lt;/a&gt; of the class. This method delegates to this &lt;code&gt;Class&lt;/code&gt; object's class loader. If this &lt;code&gt;Class&lt;/code&gt; object was loaded by the bootstrap class loader, the method delegates to &lt;a href=&quot;classloader#getSystemResourceAsStream(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.getSystemResourceAsStream(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇지 않고이 클래스가 명명 된 모듈에 없으면 지정된 클래스와 관련된 리소스 검색 규칙은 클래스의 정의 &lt;a href=&quot;classloader&quot;&gt;클래스 로더&lt;/a&gt; 에 의해 구현됩니다 . 이 메소드는이 &lt;code&gt;Class&lt;/code&gt; 객체의 클래스 로더에 위임합니다 . 이 &lt;code&gt;Class&lt;/code&gt; 객체가 부트 스트랩 클래스 로더에 의해로드 된 경우 메서드는 &lt;a href=&quot;classloader#getSystemResourceAsStream(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.getSystemResourceAsStream(java.lang.String)&lt;/code&gt; &lt;/a&gt; 위임합니다 .</target>
        </trans-unit>
        <trans-unit id="e11f4cd8f2e10cc137193a8b8f876ca8644e89ed" translate="yes" xml:space="preserve">
          <source>Otherwise, if this class is not in a named module then the rules for searching resources associated with a given class are implemented by the defining &lt;a href=&quot;classloader&quot;&gt;class loader&lt;/a&gt; of the class. This method delegates to this object's class loader. If this object was loaded by the bootstrap class loader, the method delegates to &lt;a href=&quot;classloader#getSystemResource(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.getSystemResource(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇지 않고이 클래스가 명명 된 모듈에 없으면 지정된 클래스와 관련된 리소스 검색 규칙은 클래스의 정의 &lt;a href=&quot;classloader&quot;&gt;클래스 로더&lt;/a&gt; 에 의해 구현됩니다 . 이 메서드는이 개체의 클래스 로더에 위임합니다. 이 객체가 부트 스트랩 클래스 로더에 의해로드 된 경우 메서드는 &lt;a href=&quot;classloader#getSystemResource(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.getSystemResource(java.lang.String)&lt;/code&gt; &lt;/a&gt; 위임합니다 .</target>
        </trans-unit>
        <trans-unit id="ea72a8e8566e84bc63b781b80f3e11e85e9ee12b" translate="yes" xml:space="preserve">
          <source>Otherwise, if this class is not in a named module then the rules for searching resources associated with a given class are implemented by the defining &lt;a href=&quot;classloader&quot;&gt;class loader&lt;/a&gt; of the class. This method delegates to this object's class loader. If this object was loaded by the bootstrap class loader, the method delegates to &lt;a href=&quot;classloader#getSystemResourceAsStream(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.getSystemResourceAsStream(java.lang.String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇지 않고이 클래스가 명명 된 모듈에 없으면 지정된 클래스와 관련된 리소스 검색 규칙은 클래스의 정의 &lt;a href=&quot;classloader&quot;&gt;클래스 로더&lt;/a&gt; 에 의해 구현됩니다 . 이 메서드는이 개체의 클래스 로더에 위임합니다. 이 객체가 부트 스트랩 클래스 로더에 의해로드 된 경우 메서드는 &lt;a href=&quot;classloader#getSystemResourceAsStream(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.getSystemResourceAsStream(java.lang.String)&lt;/code&gt; &lt;/a&gt; 위임합니다 .</target>
        </trans-unit>
        <trans-unit id="137f0d8d669e1a20854a8679033fc9ecb3b25927" translate="yes" xml:space="preserve">
          <source>Otherwise, if this lookup has &lt;a href=&quot;#UNCONDITIONAL&quot;&gt;&lt;code&gt;UNCONDITIONAL&lt;/code&gt;&lt;/a&gt; access, this lookup can access public types in all modules when the type is in a package that is exported unconditionally.</source>
          <target state="translated">그렇지 &lt;a href=&quot;#UNCONDITIONAL&quot;&gt; &lt;code&gt;UNCONDITIONAL&lt;/code&gt; &lt;/a&gt; 조회에 UNCONDITIONAL 액세스 권한이있는 경우이 조회는 유형이 무조건 내 보낸 패키지에있을 때 모든 모듈의 공용 유형에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4373cea8e568829ee5f7ca4c7c4dd3b65935ce81" translate="yes" xml:space="preserve">
          <source>Otherwise, if this lookup has a &lt;a href=&quot;#previousLookupClass()&quot;&gt;previous lookup class&lt;/a&gt;, &lt;code&gt;M1&lt;/code&gt; and &lt;code&gt;M2&lt;/code&gt; are as before, and &lt;code&gt;M0&lt;/code&gt; is the module containing the previous lookup class, then &lt;code&gt;targetClass&lt;/code&gt; is accessible if and only if one of the following is true:</source>
          <target state="translated">그렇지 않고이 조회에 &lt;a href=&quot;#previousLookupClass()&quot;&gt;이전 조회 클래스가&lt;/a&gt; 있고 &lt;code&gt;M1&lt;/code&gt; 및 &lt;code&gt;M2&lt;/code&gt; 가 이전과 &lt;code&gt;M0&lt;/code&gt; 이 이전 조회 클래스를 포함하는 모듈 인 경우 다음 중 하나가 참인 경우에만 &lt;code&gt;targetClass&lt;/code&gt; 에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7e48ff51fdf991849d75aa0071d69779f4c2ebf" translate="yes" xml:space="preserve">
          <source>Otherwise, if this lookup has no &lt;a href=&quot;#previousLookupClass()&quot;&gt;previous lookup class&lt;/a&gt;, &lt;code&gt;M1&lt;/code&gt; is the module containing &lt;code&gt;lookupClass&lt;/code&gt; and &lt;code&gt;M2&lt;/code&gt; is the module containing &lt;code&gt;targetClass&lt;/code&gt;, then &lt;code&gt;targetClass&lt;/code&gt; is accessible if and only if</source>
          <target state="translated">이 조회가없는 경우에는 그렇지 않은 경우, &lt;a href=&quot;#previousLookupClass()&quot;&gt;이전 검색 클래스&lt;/a&gt; , &lt;code&gt;M1&lt;/code&gt; 을 포함하는 모듈이다 &lt;code&gt;lookupClass&lt;/code&gt; 과 &lt;code&gt;M2&lt;/code&gt; 를 포함하는 모듈이다 &lt;code&gt;targetClass&lt;/code&gt; 를이 후 &lt;code&gt;targetClass&lt;/code&gt; 액세스 경우만</target>
        </trans-unit>
        <trans-unit id="c2549832e0c86009e61ec1cda56479be7bfbf6cd" translate="yes" xml:space="preserve">
          <source>Otherwise, it may be an MXBean. The set of interfaces implemented by the object is examined for interfaces that:</source>
          <target state="translated">그렇지 않으면 MXBean 일 수 있습니다. 객체가 구현 한 인터페이스 세트는 다음과 같은 인터페이스를 검사합니다.</target>
        </trans-unit>
        <trans-unit id="661660cb3441b151144c91b1f920572b8fb56100" translate="yes" xml:space="preserve">
          <source>Otherwise, let</source>
          <target state="translated">그렇지 않으면</target>
        </trans-unit>
        <trans-unit id="6056b8cae9000e87410e75b5f0fc61b0268919e7" translate="yes" xml:space="preserve">
          <source>Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two array lengths. (See &lt;a href=&quot;#mismatch(java.lang.Object%5B%5D,java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;mismatch(Object[], Object[])&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">그렇지 않으면 한 어레이가 다른 어레이의 적절한 접두어이고 사전 식 비교는 두 어레이 길이를 비교 한 결과입니다. ( 일반적이고 적절한 접두사의 정의는 &lt;a href=&quot;#mismatch(java.lang.Object%5B%5D,java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;mismatch(Object[], Object[])&lt;/code&gt; &lt;/a&gt; 를 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="24445b51746de478ec35918291d27ebbe7964b3a" translate="yes" xml:space="preserve">
          <source>Otherwise, one array is a proper prefix of the other and, lexicographic comparison is the result of comparing the two range lengths. (See &lt;a href=&quot;#mismatch(java.lang.Object%5B%5D,int,int,java.lang.Object%5B%5D,int,int)&quot;&gt;&lt;code&gt;mismatch(Object[], int, int, Object[], int, int)&lt;/code&gt;&lt;/a&gt; for the definition of a common and proper prefix.)</source>
          <target state="translated">그렇지 않으면 한 배열이 다른 배열의 적절한 접두어이고 사전 식 비교는 두 범위 길이를 비교 한 결과입니다. ( 일반적이고 적절한 접두사의 정의는 &lt;a href=&quot;#mismatch(java.lang.Object%5B%5D,int,int,java.lang.Object%5B%5D,int,int)&quot;&gt; &lt;code&gt;mismatch(Object[], int, int, Object[], int, int)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="e09ff513a3bbc25e52463c056fdf5d0eaf4eff15" translate="yes" xml:space="preserve">
          <source>Otherwise, one of the methods must have a return type that is assignable to all of the return types of the rest of the methods.</source>
          <target state="translated">그렇지 않으면 메소드 중 하나에 나머지 메소드의 모든 리턴 유형에 지정할 수있는 리턴 유형이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="5acbe994b735d39a9eaa83db343db336fa1ce894" translate="yes" xml:space="preserve">
          <source>Otherwise, resolution proceeds to step 2.</source>
          <target state="translated">그렇지 않으면 해결이 2 단계로 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="23aab22dff760703b8dd9d4f1aac35eef6dcedd0" translate="yes" xml:space="preserve">
          <source>Otherwise, resolution succeeds, and the result of resolution is the readability graph.</source>
          <target state="translated">그렇지 않으면 해결이 성공하고 해결 결과가 가독성 그래프입니다.</target>
        </trans-unit>
        <trans-unit id="fa2fb30d682062ee1357ac45fda8cb8fd2c64f65" translate="yes" xml:space="preserve">
          <source>Otherwise, returns a substring of this string beginning with the first code point of this string up to and including the last code point that is not a &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;&lt;code&gt;white space&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇지 않으면이 문자열의 첫 번째 코드 포인트에서 시작하여 &lt;a href=&quot;character#isWhitespace(int)&quot;&gt; &lt;code&gt;white space&lt;/code&gt; &lt;/a&gt; 이 아닌 마지막 코드 포인트까지이 문자열의 하위 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="70972245d36658153a06ac1cc68055c1ffca8a80" translate="yes" xml:space="preserve">
          <source>Otherwise, returns a substring of this string beginning with the first code point of this string up to and including the last code point that is not a &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;white space&lt;/a&gt;.</source>
          <target state="translated">그렇지 않으면이 문자열의 첫 번째 코드 포인트에서 시작하여 &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;공백&lt;/a&gt; 이 아닌 마지막 코드 포인트까지이 문자열의 하위 문자열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="31ba16a16e7473b48f19d556df8d53a920e4acfa" translate="yes" xml:space="preserve">
          <source>Otherwise, returns a substring of this string beginning with the first code point that is not a &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;&lt;code&gt;white space&lt;/code&gt;&lt;/a&gt; up to and including the last code point that is not a &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;&lt;code&gt;white space&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇지 않으면, 아닌 첫 번째 코드 지점이 문자열의 처음의 문자열을 반환 &lt;a href=&quot;character#isWhitespace(int)&quot;&gt; &lt;code&gt;white space&lt;/code&gt; &lt;/a&gt; 하지 않은 것입니다 마지막 코드 포인트 포함하여 최대 및 &lt;a href=&quot;character#isWhitespace(int)&quot;&gt; &lt;code&gt;white space&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e8c97d03179b70fe41f2f1200c788a7735a3501" translate="yes" xml:space="preserve">
          <source>Otherwise, returns a substring of this string beginning with the first code point that is not a &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;&lt;code&gt;white space&lt;/code&gt;&lt;/a&gt; up to to and including the last code point of this string.</source>
          <target state="translated">그렇지 않으면,이 문자열 의 마지막 코드 포인트까지 &lt;a href=&quot;character#isWhitespace(int)&quot;&gt; &lt;code&gt;white space&lt;/code&gt; &lt;/a&gt; 이 아닌 첫 번째 코드 포인트로 시작하는이 문자열의 하위 문자열을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="46474eea5f74310ef54d3acad02405e2db8d3993" translate="yes" xml:space="preserve">
          <source>Otherwise, returns a substring of this string beginning with the first code point that is not a &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;white space&lt;/a&gt; up to and including the last code point of this string.</source>
          <target state="translated">그렇지 않으면이 문자열 의 마지막 코드 포인트까지 &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;공백&lt;/a&gt; 이 아닌 첫 번째 코드 포인트로 시작하는이 문자열의 하위 문자열을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="372bb814434deaa50a54d5862402a5db94466808" translate="yes" xml:space="preserve">
          <source>Otherwise, returns a substring of this string beginning with the first code point that is not a &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;white space&lt;/a&gt; up to and including the last code point that is not a &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;white space&lt;/a&gt;.</source>
          <target state="translated">그렇지 않으면, 아닌 첫 번째 코드 지점이 문자열의 처음의 문자열을 반환 &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;공백&lt;/a&gt; 하지 않은 것입니다 마지막 코드 포인트 포함하여 최대 및 &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;공백&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="27b1a8e8a349f73f805f6d7e6ace21781b7ffa1e" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;a href=&quot;#newDefaultFactory()&quot;&gt;system-default&lt;/a&gt; implementation is returned.</source>
          <target state="translated">그렇지 않으면 &lt;a href=&quot;#newDefaultFactory()&quot;&gt;시스템 기본&lt;/a&gt; 구현이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="9ec1912ea5516b1a5902f3007990dac8223a159b" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;a href=&quot;#newDefaultInstance()&quot;&gt;system-default&lt;/a&gt; implementation is returned.</source>
          <target state="translated">그렇지 않으면 &lt;a href=&quot;#newDefaultInstance()&quot;&gt;시스템 기본&lt;/a&gt; 구현이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="030ffc82a9858721c2d729c63ac605e896551f24" translate="yes" xml:space="preserve">
          <source>Otherwise, the &lt;a href=&quot;remoteref#invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object%5B%5D,long)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method is invoked on this invocation handler's &lt;code&gt;RemoteRef&lt;/code&gt;, passing &lt;code&gt;proxy&lt;/code&gt;, &lt;code&gt;method&lt;/code&gt;, &lt;code&gt;args&lt;/code&gt;, and the method hash (defined in section 8.3 of the &quot;Java Remote Method Invocation (RMI) Specification&quot;) for &lt;code&gt;method&lt;/code&gt;, and the result is returned.</source>
          <target state="translated">그렇지 않으면, &lt;a href=&quot;remoteref#invoke(java.rmi.Remote,java.lang.reflect.Method,java.lang.Object%5B%5D,long)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt; 방법은이 호출 핸들러의에 호출 &lt;code&gt;RemoteRef&lt;/code&gt; 를 통과, &lt;code&gt;proxy&lt;/code&gt; , &lt;code&gt;method&lt;/code&gt; , &lt;code&gt;args&lt;/code&gt; , 그리고 메소드 해시에 대한 (이하 &quot;자바 원격 메소드 호출 (RMI) 사양&quot;의 8.3 절에 정의) &lt;code&gt;method&lt;/code&gt; , 그리고 결과가 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="ead13dfcea91609ffc6853f12fc3d263a31d3929" translate="yes" xml:space="preserve">
          <source>Otherwise, the absolute name is of the following form:</source>
          <target state="translated">그렇지 않으면 절대 이름의 형식은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="ba1277d734d8f864e8cce6a0483a841cce0ad1db" translate="yes" xml:space="preserve">
          <source>Otherwise, the actual result depends on the features being set on the &lt;code&gt;Document.domConfig&lt;/code&gt; object and governing what operations actually take place. Noticeably this method could also make the document namespace well-formed according to the algorithm described in , check the character normalization, remove the &lt;code&gt;CDATASection&lt;/code&gt; nodes, etc. See &lt;code&gt;DOMConfiguration&lt;/code&gt; for details.</source>
          <target state="translated">그렇지 않으면 실제 결과는 &lt;code&gt;Document.domConfig&lt;/code&gt; 개체 에 설정된 기능 과 실제로 발생하는 작업을 제어 하는 기능에 따라 달라집니다 . 눈에 띄게이 메서드는에 설명 된 알고리즘에 따라 문서 네임 스페이스를 올바르게 구성하고, 문자 정규화를 확인하고, &lt;code&gt;CDATASection&lt;/code&gt; 노드를 제거하는 등의 작업을 수행 할 수 있습니다. 자세한 내용은 &lt;code&gt;DOMConfiguration&lt;/code&gt; 을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="c2853d729082f0b467ca0788e0b3ef3a250c89b6" translate="yes" xml:space="preserve">
          <source>Otherwise, the argument is established as the current security manager. If the argument is &lt;code&gt;null&lt;/code&gt; and no security manager has been established, then no action is taken and the method simply returns.</source>
          <target state="translated">그렇지 않으면 인수가 현재 보안 관리자로 설정됩니다. 인수가 &lt;code&gt;null&lt;/code&gt; 이고 보안 관리자가 설정되지 않은 경우 조치가 수행되지 않고 메소드가 단순히 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="95107fa88c63c09e9965a500f05707c7fdb60bd3" translate="yes" xml:space="preserve">
          <source>Otherwise, the arities differ, or the adapter's trailing parameter type is not assignable from the corresponding caller type. In this case, the adapter replaces all trailing arguments from the original trailing argument position onward, by a new array of type &lt;code&gt;arrayType&lt;/code&gt;, whose elements comprise (in order) the replaced arguments.</source>
          <target state="translated">그렇지 않으면, 속성이 다르거 나 어댑터의 후행 매개 변수 유형을 해당 호출자 유형에서 지정할 수 없습니다. 이 경우, 어댑터는 원래 후행 인수 위치부터 모든 후행 인수를 &lt;code&gt;arrayType&lt;/code&gt; 유형의 새 배열 로 대체합니다.이 배열의 요소는 대체 된 인수를 (순서대로) 구성합니다.</target>
        </trans-unit>
        <trans-unit id="429e0cfcef52f874759542179b547e0a330400d1" translate="yes" xml:space="preserve">
          <source>Otherwise, the bytes written will be:</source>
          <target state="translated">그렇지 않으면 기록 된 바이트는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5a7ac3503718e28c0b241c201c6037347d149b71" translate="yes" xml:space="preserve">
          <source>Otherwise, the call proceeds as if this method handle were first adjusted by calling &lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt; to adjust this method handle to the required type, and then the call proceeds as if by &lt;a href=&quot;#invokeExact(java.lang.Object...)&quot;&gt;&lt;code&gt;invokeExact&lt;/code&gt;&lt;/a&gt; on the adjusted method handle.</source>
          <target state="translated">그렇지 않으면 &lt;a href=&quot;#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt; 을 호출 하여이 메서드 핸들을 먼저 조정 한 것처럼 호출을 진행 하여이 메서드 핸들을 필요한 형식으로 조정 한 다음 조정 된 메서드 핸들에서 &lt;a href=&quot;#invokeExact(java.lang.Object...)&quot;&gt; &lt;code&gt;invokeExact&lt;/code&gt; &lt;/a&gt; 에 의해 호출이 진행됩니다 .</target>
        </trans-unit>
        <trans-unit id="1171936d1cfc090a51fb72711be9e00103aee602" translate="yes" xml:space="preserve">
          <source>Otherwise, the call proceeds as if this method handle were first adjusted by calling &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt; to adjust this method handle to the required type, and then the call proceeds as if by &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt;&lt;code&gt;invokeExact&lt;/code&gt;&lt;/a&gt; on the adjusted method handle.</source>
          <target state="translated">그렇지 않으면 호출은 &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt; 을 호출 하여이 메소드 핸들을 필요한 유형으로 조정하여이 메소드 핸들이 먼저 조정 된 것처럼 진행된 다음 조정 된 메소드 핸들에서 &lt;a href=&quot;methodhandle#invokeExact-java.lang.Object...-&quot;&gt; &lt;code&gt;invokeExact&lt;/code&gt; &lt;/a&gt; 에 의해 호출이 진행됩니다 .</target>
        </trans-unit>
        <trans-unit id="5e3a4c5699e23df6899985fa5e85761d920bf8f2" translate="yes" xml:space="preserve">
          <source>Otherwise, the class specified in the &lt;code&gt;Context.INITIAL_CONTEXT_FACTORY&lt;/code&gt; environment property is used</source>
          <target state="translated">그렇지 않으면 &lt;code&gt;Context.INITIAL_CONTEXT_FACTORY&lt;/code&gt; 환경 속성에 지정된 클래스 가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="78821ae70a074215f1a64f678698cbef98a5aaed" translate="yes" xml:space="preserve">
          <source>Otherwise, the common return type &lt;code&gt;R&lt;/code&gt; of the fini functions (their return types must be identical) defines the loop return type.</source>
          <target state="translated">그렇지 않으면 fini 함수 의 공통 반환 유형 &lt;code&gt;R&lt;/code&gt; (반환 유형이 동일해야 함)이 루프 반환 유형을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="6665773724a2e10f78d14ca13ec83eea9611aeef" translate="yes" xml:space="preserve">
          <source>Otherwise, the default implementation creates a spliterator from the list's &lt;code&gt;Iterator&lt;/code&gt;. The spliterator inherits the &lt;em&gt;fail-fast&lt;/em&gt; of the list's iterator.</source>
          <target state="translated">그렇지 않으면 기본 구현은 목록의 &lt;code&gt;Iterator&lt;/code&gt; 에서 분할자를 만듭니다 . 스플리터는 목록 반복자 의 &lt;em&gt;fail-fast&lt;/em&gt; 를 상속 합니다.</target>
        </trans-unit>
        <trans-unit id="a5e4d0feb0d905ea30d78b822d291f7030357857" translate="yes" xml:space="preserve">
          <source>Otherwise, the implementation can create an implementation-specific &lt;a href=&quot;rmiserverimpl&quot;&gt;&lt;code&gt;RMIServerImpl&lt;/code&gt;&lt;/a&gt; or it can throw &lt;a href=&quot;../../../../../java.base/java/net/malformedurlexception&quot;&gt;&lt;code&gt;MalformedURLException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇지 않으면 구현에서 구현 별 &lt;a href=&quot;rmiserverimpl&quot;&gt; &lt;code&gt;RMIServerImpl&lt;/code&gt; 을&lt;/a&gt; 만들 거나 &lt;a href=&quot;../../../../../java.base/java/net/malformedurlexception&quot;&gt; &lt;code&gt;MalformedURLException&lt;/code&gt; &lt;/a&gt; 을 throw 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="90a063f8ee16194e3503dd095d027ebb1f2c2fd1" translate="yes" xml:space="preserve">
          <source>Otherwise, the implementation can create an implementation-specific &lt;a href=&quot;rmiserverimpl&quot;&gt;&lt;code&gt;RMIServerImpl&lt;/code&gt;&lt;/a&gt; or it can throw &lt;a href=&quot;../../../../java/net/malformedurlexception&quot;&gt;&lt;code&gt;MalformedURLException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇지 않으면 구현시 구현 별 &lt;a href=&quot;rmiserverimpl&quot;&gt; &lt;code&gt;RMIServerImpl&lt;/code&gt; 을 작성&lt;/a&gt; 하거나 &lt;a href=&quot;../../../../java/net/malformedurlexception&quot;&gt; &lt;code&gt;MalformedURLException&lt;/code&gt; 을 발생&lt;/a&gt; 시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="51c939b352351ab6a3d088117fd4c4a16a7e96a4" translate="yes" xml:space="preserve">
          <source>Otherwise, the minimum number of integer digits is achieved by adjusting the exponent. Example: 0.00123 formatted with &lt;code&gt;&quot;00.###E0&quot;&lt;/code&gt; yields &lt;code&gt;&quot;12.3E-4&quot;&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 지수를 조정하여 최소 정수 자릿수를 얻을 수 있습니다. 예 : &lt;code&gt;&quot;00.###E0&quot;&lt;/code&gt; 으로 형식화 된 0.00123 은 &lt;code&gt;&quot;12.3E-4&quot;&lt;/code&gt; 를 생성 합니다.</target>
        </trans-unit>
        <trans-unit id="1d24847943ac605a327c56d017914edd489a09b6" translate="yes" xml:space="preserve">
          <source>Otherwise, the mode is Ed25519 or Ed448</source>
          <target state="translated">그렇지 않으면 모드는 Ed25519 또는 Ed448입니다.</target>
        </trans-unit>
        <trans-unit id="a3c5532d911242cad7c49ae96755f5724090c61b" translate="yes" xml:space="preserve">
          <source>Otherwise, the new method is called 'non-equivalent'. If a redefined method has active stack frames, those active frames continue to run the bytecodes of the previous version of the method. If the new version of such a method is non-equivalent, then a method from one of these active frames is called 'obsolete' and &lt;a href=&quot;method#isObsolete()&quot;&gt;&lt;code&gt;Method.isObsolete()&lt;/code&gt;&lt;/a&gt; will return true when called on one of these methods. If resetting such a frame is desired, use &lt;a href=&quot;threadreference#popFrames(com.sun.jdi.StackFrame)&quot;&gt;&lt;code&gt;ThreadReference.popFrames(StackFrame)&lt;/code&gt;&lt;/a&gt; to pop the old obsolete method execution from the stack. New invocations of redefined methods will always invoke the new versions.</source>
          <target state="translated">그렇지 않으면 새 메서드를 '비동 등'이라고합니다. 재정의 된 메서드에 활성 스택 프레임이있는 경우 해당 활성 프레임은 이전 버전 메서드의 바이트 코드를 계속 실행합니다. 이러한 메서드의 새 버전이 동일하지 않은 경우 이러한 활성 프레임 중 하나의 메서드를 '구식'이라고하며 &lt;a href=&quot;method#isObsolete()&quot;&gt; &lt;code&gt;Method.isObsolete()&lt;/code&gt; &lt;/a&gt; 는 이러한 메서드 중 하나에서 호출 될 때 true를 반환합니다. 이러한 프레임을 재설정하려면 &lt;a href=&quot;threadreference#popFrames(com.sun.jdi.StackFrame)&quot;&gt; &lt;code&gt;ThreadReference.popFrames(StackFrame)&lt;/code&gt; &lt;/a&gt; 을 사용하여 스택에서 오래된 오래된 메서드 실행을 팝합니다. 재정의 된 메서드를 새로 호출하면 항상 새 버전이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="5b2744a981127cf235b1bf3313eea02daee7f1cd" translate="yes" xml:space="preserve">
          <source>Otherwise, the path is treated as a relative path and is appended to the context path, as described in RFC2396. Also, in this case, the path is canonicalized through the removal of directory changes made by occurrences of &quot;..&quot; and &quot;.&quot;.</source>
          <target state="translated">그렇지 않으면 RFC2396에 설명 된대로 경로가 상대 경로로 처리되고 컨텍스트 경로에 추가됩니다. 또한이 경우 &quot;..&quot;및 &quot;.&quot;발생으로 인한 디렉토리 변경 사항을 제거하여 경로를 표준화합니다.</target>
        </trans-unit>
        <trans-unit id="20c5ae319ce0b2096b819662cbd84c8b60db9891" translate="yes" xml:space="preserve">
          <source>Otherwise, the pattern is not matched.</source>
          <target state="translated">그렇지 않으면 패턴이 일치하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1dcd6470a09f7d6ecb1534206a967c631171fd33" translate="yes" xml:space="preserve">
          <source>Otherwise, the permission will be checked against the combination of the PermissionCollection supplied at construction and the current Policy binding.</source>
          <target state="translated">그렇지 않으면 생성시 제공된 PermissionCollection과 현재 정책 바인딩의 조합에 대해 권한이 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="34356a4d59e70a22a732ae5595d0be81fff546a0" translate="yes" xml:space="preserve">
          <source>Otherwise, the port number is checked. If it is not equal to -1, the &lt;code&gt;context&lt;/code&gt;'s &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;SocketPermission(host+&quot;:&quot;+port,&quot;connect&quot;)&lt;/code&gt; permission. If the port is equal to -1, then the &lt;code&gt;context&lt;/code&gt;'s &lt;code&gt;checkPermission&lt;/code&gt; method is called with a &lt;code&gt;SocketPermission(host,&quot;resolve&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">그렇지 않으면 포트 번호가 확인됩니다. -1이 아닌 경우, &lt;code&gt;context&lt;/code&gt; 의 &lt;code&gt;checkPermission&lt;/code&gt; 메소드는 &lt;code&gt;SocketPermission(host+&quot;:&quot;+port,&quot;connect&quot;)&lt;/code&gt; 권한으로 호출됩니다 . 포트가 -1이면 &lt;code&gt;context&lt;/code&gt; 의 &lt;code&gt;checkPermission&lt;/code&gt; 메소드가 &lt;code&gt;SocketPermission(host,&quot;resolve&quot;)&lt;/code&gt; 권한으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="9df32d65ecca85aa76eb24d9d9bbbd2c871d9e87" translate="yes" xml:space="preserve">
          <source>Otherwise, the principal's group permission sets are determined. (A principal can belong to one or more groups, where a group is a group of principals, represented by the Group interface.) The group positive permission set is the union of all the positive permissions of each group that the principal belongs to. The group negative permission set is the union of all the negative permissions of each group that the principal belongs to. If there is a specific permission that occurs in both the positive permission set and the negative permission set, it is removed from both.</source>
          <target state="translated">그렇지 않으면 프린시 펄의 그룹 권한 세트가 결정됩니다. (주체는 하나 이상의 그룹에 속할 수 있습니다. 여기서 그룹은 그룹 인터페이스로 표시되는 주체 그룹입니다.) 그룹 긍정적 권한 세트는 보안 주체가 속한 각 그룹의 모든 긍정적 권한의 합집합입니다. 그룹 부정적인 권한 집합은 보안 주체가 속한 각 그룹의 모든 부정적인 권한을 통합 한 것입니다. 양의 권한 집합과 음의 권한 집합 모두에서 발생하는 특정 권한이 있으면 둘 다에서 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="01406f915d3917bd08f1eb4e165fffaeffd24e38" translate="yes" xml:space="preserve">
          <source>Otherwise, the priority of this ThreadGroup object is set to the smaller of the specified &lt;code&gt;pri&lt;/code&gt; and the maximum permitted priority of the parent of this thread group. (If this thread group is the system thread group, which has no parent, then its maximum priority is simply set to &lt;code&gt;pri&lt;/code&gt;.) Then this method is called recursively, with &lt;code&gt;pri&lt;/code&gt; as its argument, for every thread group that belongs to this thread group.</source>
          <target state="translated">그렇지 않은 경우,이 ThreadGroup 객체의 우선 순위는 지정된 &lt;code&gt;pri&lt;/code&gt; 보다 작고이 스레드 그룹의 부모에 허용되는 최대 우선 순위로 설정됩니다. (이 스레드 그룹이 상위가없는 시스템 스레드 그룹 인 경우 최대 우선 순위는 단순히 &lt;code&gt;pri&lt;/code&gt; 로 설정됩니다 .)이 메소드는이 스레드 그룹에 속하는 모든 스레드 그룹에 대해 &lt;code&gt;pri&lt;/code&gt; 를 인수로하여 재귀 적으로 호출 됩니다. .</target>
        </trans-unit>
        <trans-unit id="4a860885bad5d7343c544349feb4e1eb16f9e4ee" translate="yes" xml:space="preserve">
          <source>Otherwise, the priority of this thread is set to the smaller of the specified &lt;code&gt;newPriority&lt;/code&gt; and the maximum permitted priority of the thread's thread group.</source>
          <target state="translated">그렇지 않으면,이 스레드의 우선 순위는 지정된 &lt;code&gt;newPriority&lt;/code&gt; 및 스레드 스레드 그룹의 최대 허용 우선 순위 보다 작게 설정됩니다 .</target>
        </trans-unit>
        <trans-unit id="33621091491f3d87d5bd0b3c85953c6cb8816cee" translate="yes" xml:space="preserve">
          <source>Otherwise, the property value is parsed as a decimal integer exactly as by the method &lt;a href=&quot;#valueOf(java.lang.String,int)&quot;&gt;&lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt;&lt;/a&gt; with radix 10.</source>
          <target state="translated">그렇지 않으면 속성 값은 기수 10을 사용 하는 &lt;a href=&quot;#valueOf(java.lang.String,int)&quot;&gt; &lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt; &lt;/a&gt; 메서드에서 와 똑같이 10 진수 정수로 구문 분석됩니다 .</target>
        </trans-unit>
        <trans-unit id="6e5a790275534daedd5a8aa9f7bd3323ba425db9" translate="yes" xml:space="preserve">
          <source>Otherwise, the property value is parsed as a decimal integer exactly as by the method &lt;a href=&quot;integer#valueOf-java.lang.String-int-&quot;&gt;&lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt;&lt;/a&gt; with radix 10.</source>
          <target state="translated">그렇지 않은 경우, 속성 값은 기수 10을 갖는 &lt;a href=&quot;integer#valueOf-java.lang.String-int-&quot;&gt; &lt;code&gt;valueOf(java.lang.String, int)&lt;/code&gt; &lt;/a&gt; 메소드에 의해 정확하게 10 진 정수로 구문 분석됩니다 .</target>
        </trans-unit>
        <trans-unit id="1f8991010ccf5c7500f5f0bf47823c45502daed6" translate="yes" xml:space="preserve">
          <source>Otherwise, the provider instance will be the value returned by an invocation of the &lt;a href=&quot;#getDefaultProviderInstance()&quot;&gt;&lt;code&gt;getDefaultProviderInstance()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">그렇지 않으면 공급자 인스턴스는 &lt;a href=&quot;#getDefaultProviderInstance()&quot;&gt; &lt;code&gt;getDefaultProviderInstance()&lt;/code&gt; &lt;/a&gt; 메서드 호출에 의해 반환 된 값이됩니다 .</target>
        </trans-unit>
        <trans-unit id="b9f4821b17d8697b56dd7eda285976f3d7cb1b28" translate="yes" xml:space="preserve">
          <source>Otherwise, the result is a string that represents the sign and magnitude (absolute value) of the argument. If the sign is negative, the first character of the result is '&lt;code&gt;-&lt;/code&gt;' (&lt;code&gt;'\u002D'&lt;/code&gt;); if the sign is positive, no sign character appears in the result. As for the magnitude</source>
          <target state="translated">그렇지 않으면 결과는 인수의 부호와 크기 (절대 값)를 나타내는 문자열입니다. 부호가 음수이면 결과의 첫 문자는 ' &lt;code&gt;-&lt;/code&gt; '( &lt;code&gt;'\u002D'&lt;/code&gt; )입니다. 부호가 양수이면 결과에 부호 문자가 나타나지 않습니다. 크기는</target>
        </trans-unit>
        <trans-unit id="21ea6a4f29e02bb012e89b9415e8bb74f712da0e" translate="yes" xml:space="preserve">
          <source>Otherwise, the result is a string that represents the sign and magnitude (absolute value) of the argument. The formatting of the sign is described in the &lt;a href=&quot;#L10nAlgorithm&quot;&gt;localization algorithm&lt;/a&gt;. The formatting of the magnitude</source>
          <target state="translated">그렇지 않으면 결과는 인수의 부호와 크기 (절대 값)를 나타내는 문자열입니다. 부호의 형식은 &lt;a href=&quot;#L10nAlgorithm&quot;&gt;현지화 알고리즘에&lt;/a&gt; 설명되어 있습니다. 크기의 서식</target>
        </trans-unit>
        <trans-unit id="5fdfc97e2ea44c470dd23e901e3e1d2ce40a41e6" translate="yes" xml:space="preserve">
          <source>Otherwise, the result is a string that represents the sign and magnitude of the argument. If the sign is negative, the first character of the result is '&lt;code&gt;-&lt;/code&gt;' (&lt;code&gt;'\u002D'&lt;/code&gt;); if the sign is positive, no sign character appears in the result. As for the magnitude</source>
          <target state="translated">그렇지 않으면 결과는 인수의 부호와 크기를 나타내는 문자열입니다. 부호가 음수이면 결과의 첫 문자는 ' &lt;code&gt;-&lt;/code&gt; '( &lt;code&gt;'\u002D'&lt;/code&gt; )입니다. 부호가 양수이면 결과에 부호 문자가 나타나지 않습니다. 크기는</target>
        </trans-unit>
        <trans-unit id="c917825c4735ca35108775797b1d1d6c31c62a3f" translate="yes" xml:space="preserve">
          <source>Otherwise, the result is false.</source>
          <target state="translated">그렇지 않으면 결과는 거짓입니다.</target>
        </trans-unit>
        <trans-unit id="88cf189107c65f6bb4d16f6c39e143316351d9d4" translate="yes" xml:space="preserve">
          <source>Otherwise, the result is the &lt;code&gt;double&lt;/code&gt; value closest to the true mathematical square root of the argument value.</source>
          <target state="translated">그렇지 않으면 결과는 인수 값의 실제 수학 제곱근에 가장 가까운 &lt;code&gt;double&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="66cd8cb6ea9d9eef6d163f1035918b01b002e944" translate="yes" xml:space="preserve">
          <source>Otherwise, the resulting fixed-arity method handle has the same type and behavior of the current method handle, except that &lt;a href=&quot;#isVarargsCollector()&quot;&gt;&lt;code&gt;isVarargsCollector&lt;/code&gt;&lt;/a&gt; will be false. The fixed-arity method handle may (or may not) be the a previous argument to &lt;code&gt;asVarargsCollector&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 결과 고정 인수 메서드 핸들은 &lt;a href=&quot;#isVarargsCollector()&quot;&gt; &lt;code&gt;isVarargsCollector&lt;/code&gt; &lt;/a&gt; 가 false 라는 점을 제외하고 현재 메서드 핸들과 동일한 유형 및 동작을 갖습니다 . 고정 인수 메서드 핸들은 &lt;code&gt;asVarargsCollector&lt;/code&gt; 에 대한 이전 인수 일 수도 있고 아닐 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f328f8589e6729b4044ea16c337625113112fb60" translate="yes" xml:space="preserve">
          <source>Otherwise, the resulting fixed-arity method handle has the same type and behavior of the current method handle, except that &lt;a href=&quot;methodhandle#isVarargsCollector--&quot;&gt;&lt;code&gt;isVarargsCollector&lt;/code&gt;&lt;/a&gt; will be false. The fixed-arity method handle may (or may not) be the a previous argument to &lt;code&gt;asVarargsCollector&lt;/code&gt;.</source>
          <target state="translated">그렇지 않은 경우, 결과 고정식 메소드 핸들은 &lt;a href=&quot;methodhandle#isVarargsCollector--&quot;&gt; &lt;code&gt;isVarargsCollector&lt;/code&gt; &lt;/a&gt; 가 false가 된다는 점을 제외하고 현재 메소드 핸들의 유형과 동작이 동일합니다 . 고정 속성 메소드 핸들은 &lt;code&gt;asVarargsCollector&lt;/code&gt; 에 대한 이전 인수 일 수도 있고 아닐 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ad7b242c6da810216cc20fbf9f18fd1eebe7e9b2" translate="yes" xml:space="preserve">
          <source>Otherwise, the system-default implementation is returned.</source>
          <target state="translated">그렇지 않으면 시스템 기본 구현이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="50ba8c13b2c15f13190cad6ae1bcf665ba8b6d0a" translate="yes" xml:space="preserve">
          <source>Otherwise, the target class is in a different module from &lt;code&gt;lookupClass&lt;/code&gt;, and if this lookup does not have &lt;code&gt;PUBLIC&lt;/code&gt; access, &lt;code&gt;lookupClass&lt;/code&gt; is inaccessible.</source>
          <target state="translated">그렇지 않으면 대상 클래스가 &lt;code&gt;lookupClass&lt;/code&gt; 와 다른 모듈에 있으며이 조회에 &lt;code&gt;PUBLIC&lt;/code&gt; 액세스 권한이 &lt;code&gt;lookupClass&lt;/code&gt; 에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="faf665776ce6d6f1b286f00a506f046638b6988b" translate="yes" xml:space="preserve">
          <source>Otherwise, the underlying field is an instance field. If the specified &lt;code&gt;obj&lt;/code&gt; argument is null, the method throws a &lt;code&gt;NullPointerException&lt;/code&gt;. If the specified object is not an instance of the class or interface declaring the underlying field, the method throws an &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">그렇지 않으면 기본 필드는 인스턴스 필드입니다. 지정된 &lt;code&gt;obj&lt;/code&gt; 인수가 null의 경우, 메소드는 &lt;code&gt;NullPointerException&lt;/code&gt; 을 Throw합니다 . 지정된 객체가 기본 필드를 선언하는 클래스 또는 인터페이스의 인스턴스가 아닌 경우, 메소드는 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="9ac19ce324433ef5296b58ea1f83fe66e387bc50" translate="yes" xml:space="preserve">
          <source>Otherwise, the value is retrieved from the underlying instance or static field. If the field has a primitive type, the value is wrapped in an object before being returned, otherwise it is returned as is.</source>
          <target state="translated">그렇지 않으면 기본 인스턴스 또는 정적 필드에서 값이 검색됩니다. 필드에 프리미티브 유형이 있으면 값이 리턴되기 전에 오브젝트에 랩핑되고, 그렇지 않으면 그대로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="ecd1c8244f937db6fd6d46920aa638349b4e7db3" translate="yes" xml:space="preserve">
          <source>Otherwise, there is no provider package list.</source>
          <target state="translated">그렇지 않으면 공급자 패키지 목록이 없습니다.</target>
        </trans-unit>
        <trans-unit id="41d1a8e8d515151e8100b54873b1378bf544c6f0" translate="yes" xml:space="preserve">
          <source>Otherwise, this method builds a default MBeanInfo for this MBean, using the Management Interface specified for this MBean.</source>
          <target state="translated">그렇지 않으면이 메소드는이 MBean에 지정된 관리 인터페이스를 사용하여이 MBean에 대한 기본 MBeanInfo를 빌드합니다.</target>
        </trans-unit>
        <trans-unit id="f01d4bd8cce1c3f831707ab2e5de862e2fbce7a8" translate="yes" xml:space="preserve">
          <source>Otherwise, this method checks to see if there is a &lt;a href=&quot;thread#getDefaultUncaughtExceptionHandler()&quot;&gt;default uncaught exception handler&lt;/a&gt; installed, and if so, its &lt;code&gt;uncaughtException&lt;/code&gt; method is called with the same two arguments.</source>
          <target state="translated">그렇지 않으면이 메서드는 &lt;a href=&quot;thread#getDefaultUncaughtExceptionHandler()&quot;&gt;기본 포착되지 않은 예외 처리기가&lt;/a&gt; 설치되어 있는지 확인하고, 설치된 경우 동일한 두 인수를 사용하여 해당 &lt;code&gt;uncaughtException&lt;/code&gt; 메서드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="924bddc39ccfc5aed32b2e5bd4b7ccd145e90367" translate="yes" xml:space="preserve">
          <source>Otherwise, this method checks to see if there is a &lt;a href=&quot;thread#getDefaultUncaughtExceptionHandler--&quot;&gt;default uncaught exception handler&lt;/a&gt; installed, and if so, its &lt;code&gt;uncaughtException&lt;/code&gt; method is called with the same two arguments.</source>
          <target state="translated">그렇지 않은 경우,이 메소드는 &lt;a href=&quot;thread#getDefaultUncaughtExceptionHandler--&quot;&gt;기본 포착되지 않은 예외 핸들러가&lt;/a&gt; 설치되어 있는지 확인하고, 존재하는 경우 동일한 두 인수로 &lt;code&gt;uncaughtException&lt;/code&gt; 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="1140bacfbcc7ff3775e9595dfcc73768e342730f" translate="yes" xml:space="preserve">
          <source>Otherwise, this method copies</source>
          <target state="translated">그렇지 않은 경우,이 방법은</target>
        </trans-unit>
        <trans-unit id="0a00d46bc2e1aee9318e65e78a9a091d8187d456" translate="yes" xml:space="preserve">
          <source>Otherwise, this method copies &lt;code&gt;length&lt;/code&gt; bytes from the given array into this buffer, starting at the given offset in the array and at the current position of this buffer. The position of this buffer is then incremented by &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">그렇지 않은 경우,이 메소드 는 배열의 지정된 오프셋에서 시작하여이 버퍼의 현재 위치에서 지정된 배열의 &lt;code&gt;length&lt;/code&gt; 바이트를이 버퍼에 복사 합니다. 이 버퍼의 위치는 &lt;code&gt;length&lt;/code&gt; 만큼 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="7b43bf3506b38e37f9573812e41ead8c4d443df3" translate="yes" xml:space="preserve">
          <source>Otherwise, this method copies &lt;code&gt;length&lt;/code&gt; bytes from this buffer into the given array, starting at the current position of this buffer and at the given offset in the array. The position of this buffer is then incremented by &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">그렇지 않은 경우,이 메소드 는이 버퍼의 현재 위치와 배열의 지정된 오프셋에서 시작하여이 버퍼의 &lt;code&gt;length&lt;/code&gt; 바이트를 지정된 배열에 복사 합니다. 이 버퍼의 위치는 &lt;code&gt;length&lt;/code&gt; 만큼 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="465ad3ea1ab87ddb714f6f8951211912d0fd5bd0" translate="yes" xml:space="preserve">
          <source>Otherwise, this method copies &lt;code&gt;length&lt;/code&gt; chars from the given array into this buffer, starting at the given offset in the array and at the current position of this buffer. The position of this buffer is then incremented by &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">그렇지 않은 경우,이 메소드 는 배열의 지정된 오프셋에서 시작하여이 버퍼의 현재 위치에서 지정된 배열의 &lt;code&gt;length&lt;/code&gt; 문자를이 버퍼에 복사 합니다. 이 버퍼의 위치는 &lt;code&gt;length&lt;/code&gt; 만큼 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="89587d06c6c493217f7ab1d6dfadc4c32d1d3754" translate="yes" xml:space="preserve">
          <source>Otherwise, this method copies &lt;code&gt;length&lt;/code&gt; chars from this buffer into the given array, starting at the current position of this buffer and at the given offset in the array. The position of this buffer is then incremented by &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">그렇지 않은 경우,이 메소드 는이 버퍼의 현재 위치와 배열의 지정된 오프셋에서 시작하여이 버퍼의 &lt;code&gt;length&lt;/code&gt; 문자를 지정된 배열로 복사 합니다. 이 버퍼의 위치는 &lt;code&gt;length&lt;/code&gt; 만큼 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="7cdb590ad21108de7ba553cf94486d3656b0d793" translate="yes" xml:space="preserve">
          <source>Otherwise, this method copies &lt;code&gt;length&lt;/code&gt; doubles from the given array into this buffer, starting at the given offset in the array and at the current position of this buffer. The position of this buffer is then incremented by &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">그렇지 않은 경우,이 메소드 는 배열의 지정된 오프셋과이 버퍼의 현재 위치에서 시작하여 지정된 배열에서이 버퍼로 &lt;code&gt;length&lt;/code&gt; 2 배가되도록 복사 합니다. 이 버퍼의 위치는 &lt;code&gt;length&lt;/code&gt; 만큼 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="32ef3ddd2e4636db3e3b53aa2f413b09b96feb26" translate="yes" xml:space="preserve">
          <source>Otherwise, this method copies &lt;code&gt;length&lt;/code&gt; doubles from this buffer into the given array, starting at the current position of this buffer and at the given offset in the array. The position of this buffer is then incremented by &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">그렇지 않은 경우,이 메서드 는이 버퍼의 현재 위치와 배열 내의 지정된 오프셋 (offset)에서 시작해,이 버퍼의 &lt;code&gt;length&lt;/code&gt; 지정된 배열에 카피 합니다. 이 버퍼의 위치는 &lt;code&gt;length&lt;/code&gt; 만큼 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="b71b3b5ec1daec2fc38bc2aaceffe3bc830191f8" translate="yes" xml:space="preserve">
          <source>Otherwise, this method copies &lt;code&gt;length&lt;/code&gt; floats from the given array into this buffer, starting at the given offset in the array and at the current position of this buffer. The position of this buffer is then incremented by &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">그렇지 않은 경우,이 메소드 는, 배열 내의 지정된 오프셋 (offset)과이 버퍼의 현재의 위치로부터 시작해, 지정된 배열로부터이 버퍼에 &lt;code&gt;length&lt;/code&gt; float를 카피 합니다. 이 버퍼의 위치는 &lt;code&gt;length&lt;/code&gt; 만큼 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="d47eb545b34ee919c3a00b6a1872875031b323f0" translate="yes" xml:space="preserve">
          <source>Otherwise, this method copies &lt;code&gt;length&lt;/code&gt; floats from this buffer into the given array, starting at the current position of this buffer and at the given offset in the array. The position of this buffer is then incremented by &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">그렇지 않은 경우,이 메서드 는이 버퍼의 현재 위치와 배열의 지정된 오프셋 (offset)에서 시작해,이 버퍼의 &lt;code&gt;length&lt;/code&gt; float를 지정된 배열에 카피 합니다. 이 버퍼의 위치는 &lt;code&gt;length&lt;/code&gt; 만큼 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="564f6f602e00c6b5254d94fa278eec2d1ec83b2d" translate="yes" xml:space="preserve">
          <source>Otherwise, this method copies &lt;code&gt;length&lt;/code&gt; ints from the given array into this buffer, starting at the given offset in the array and at the current position of this buffer. The position of this buffer is then incremented by &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">그렇지 않은 경우,이 메소드 는, 지정된 배열의 오프셋을,이 버퍼의 현재 위치에서 시작해, 지정된 배열로부터이 버퍼에 &lt;code&gt;length&lt;/code&gt; 정수를 카피 합니다. 이 버퍼의 위치는 &lt;code&gt;length&lt;/code&gt; 만큼 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="c39152176f66a0e75d4b5d927cb3ef006b947908" translate="yes" xml:space="preserve">
          <source>Otherwise, this method copies &lt;code&gt;length&lt;/code&gt; ints from this buffer into the given array, starting at the current position of this buffer and at the given offset in the array. The position of this buffer is then incremented by &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">그렇지 않은 경우,이 메서드 는이 버퍼의 현재 위치와 배열 내의 지정된 오프셋 (offset)에서 시작해,이 버퍼의 &lt;code&gt;length&lt;/code&gt; int를 지정된 배열에 카피 합니다. 이 버퍼의 위치는 &lt;code&gt;length&lt;/code&gt; 만큼 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="084588a383716839fa227f618585ad1518c2bb9e" translate="yes" xml:space="preserve">
          <source>Otherwise, this method copies &lt;code&gt;length&lt;/code&gt; longs from the given array into this buffer, starting at the given offset in the array and at the current position of this buffer. The position of this buffer is then incremented by &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">그렇지 않은 경우,이 메소드 는 배열 내의 지정된 오프셋 (offset)과이 버퍼의 현재 위치에서 시작해, 지정된 배열의 &lt;code&gt;length&lt;/code&gt; 를이 버퍼에 카피 합니다. 이 버퍼의 위치는 &lt;code&gt;length&lt;/code&gt; 만큼 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="754a0701b580983ba1e1fb8a0443749241b36d98" translate="yes" xml:space="preserve">
          <source>Otherwise, this method copies &lt;code&gt;length&lt;/code&gt; longs from this buffer into the given array, starting at the current position of this buffer and at the given offset in the array. The position of this buffer is then incremented by &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">그렇지 않은 경우,이 메소드 는이 버퍼의 현재 위치와 배열 내의 지정된 오프셋 (offset)에서 시작해,이 버퍼의 &lt;code&gt;length&lt;/code&gt; 지정된 배열에 카피 합니다. 이 버퍼의 위치는 &lt;code&gt;length&lt;/code&gt; 만큼 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="10f3482a949cb1a3b2a1e2e991623c1e48e1d7a4" translate="yes" xml:space="preserve">
          <source>Otherwise, this method copies &lt;code&gt;length&lt;/code&gt; shorts from the given array into this buffer, starting at the given offset in the array and at the current position of this buffer. The position of this buffer is then incremented by &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">그렇지 않은 경우,이 메소드 는 배열 내의 지정된 오프셋 (offset)과이 버퍼의 현재의 위치로부터 시작해, 지정된 배열의 &lt;code&gt;length&lt;/code&gt; short를이 버퍼에 카피 합니다. 이 버퍼의 위치는 &lt;code&gt;length&lt;/code&gt; 만큼 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="0d9e0decf25b9eda0fec66eed7b58cfa2ec29df9" translate="yes" xml:space="preserve">
          <source>Otherwise, this method copies &lt;code&gt;length&lt;/code&gt; shorts from this buffer into the given array, starting at the current position of this buffer and at the given offset in the array. The position of this buffer is then incremented by &lt;code&gt;length&lt;/code&gt;.</source>
          <target state="translated">그렇지 않은 경우,이 메서드 는이 버퍼의 현재 위치와 배열 내의 지정된 오프셋 (offset)에서 시작해,이 버퍼의 &lt;code&gt;length&lt;/code&gt; 쇼트를 지정된 배열에 복사 합니다 이 버퍼의 위치는 &lt;code&gt;length&lt;/code&gt; 만큼 증가합니다 .</target>
        </trans-unit>
        <trans-unit id="68dc629f6503c2c562d6f3812e52805b37cc4525" translate="yes" xml:space="preserve">
          <source>Otherwise, this method determines if the &lt;code&gt;Throwable&lt;/code&gt; argument is an instance of &lt;a href=&quot;threaddeath&quot;&gt;&lt;code&gt;ThreadDeath&lt;/code&gt;&lt;/a&gt;. If so, nothing special is done. Otherwise, a message containing the thread's name, as returned from the thread's &lt;a href=&quot;thread#getName()&quot;&gt;&lt;code&gt;getName&lt;/code&gt;&lt;/a&gt; method, and a stack backtrace, using the &lt;code&gt;Throwable&lt;/code&gt;'s &lt;a href=&quot;throwable#printStackTrace()&quot;&gt;&lt;code&gt;printStackTrace&lt;/code&gt;&lt;/a&gt; method, is printed to the &lt;a href=&quot;system#err&quot;&gt;standard error stream&lt;/a&gt;.</source>
          <target state="translated">그렇지 않으면이 메서드는 &lt;code&gt;Throwable&lt;/code&gt; 인수가 &lt;a href=&quot;threaddeath&quot;&gt; &lt;code&gt;ThreadDeath&lt;/code&gt; &lt;/a&gt; 의 인스턴스 인지 확인합니다 . 그렇다면 특별한 작업이 수행되지 않습니다. 그렇지 않으면 스레드의 &lt;a href=&quot;thread#getName()&quot;&gt; &lt;code&gt;getName&lt;/code&gt; &lt;/a&gt; 메서드 에서 반환 된 스레드의 이름 과 &lt;code&gt;Throwable&lt;/code&gt; 의 &lt;a href=&quot;throwable#printStackTrace()&quot;&gt; &lt;code&gt;printStackTrace&lt;/code&gt; &lt;/a&gt; 메서드를 사용하는 스택 역 추적을 포함하는 메시지가 &lt;a href=&quot;system#err&quot;&gt;표준 오류 스트림에&lt;/a&gt; 인쇄됩니다 .</target>
        </trans-unit>
        <trans-unit id="2a1446d8c7f02cadc719bfeac057cd4b5d7d8d63" translate="yes" xml:space="preserve">
          <source>Otherwise, this method determines if the &lt;code&gt;Throwable&lt;/code&gt; argument is an instance of &lt;a href=&quot;threaddeath&quot;&gt;&lt;code&gt;ThreadDeath&lt;/code&gt;&lt;/a&gt;. If so, nothing special is done. Otherwise, a message containing the thread's name, as returned from the thread's &lt;a href=&quot;thread#getName--&quot;&gt;&lt;code&gt;getName&lt;/code&gt;&lt;/a&gt; method, and a stack backtrace, using the &lt;code&gt;Throwable&lt;/code&gt;'s &lt;a href=&quot;throwable#printStackTrace--&quot;&gt;&lt;code&gt;printStackTrace&lt;/code&gt;&lt;/a&gt; method, is printed to the &lt;a href=&quot;system#err&quot;&gt;standard error stream&lt;/a&gt;.</source>
          <target state="translated">그렇지 않은 경우,이 메소드는 &lt;code&gt;Throwable&lt;/code&gt; 인수가 &lt;a href=&quot;threaddeath&quot;&gt; &lt;code&gt;ThreadDeath&lt;/code&gt; &lt;/a&gt; 의 인스턴스 인지 판별합니다 . 그렇다면 특별한 일이 없습니다. 그렇지 않으면, 스레드의 &lt;a href=&quot;thread#getName--&quot;&gt; &lt;code&gt;getName&lt;/code&gt; &lt;/a&gt; 메소드 에서 리턴 된 스레드 이름을 포함하는 메시지 및 &lt;code&gt;Throwable&lt;/code&gt; 의 &lt;a href=&quot;throwable#printStackTrace--&quot;&gt; &lt;code&gt;printStackTrace&lt;/code&gt; &lt;/a&gt; 메소드를 사용하는 스택 역 추적 은 &lt;a href=&quot;system#err&quot;&gt;표준 오류 스트림으로&lt;/a&gt; 인쇄됩니다 .</target>
        </trans-unit>
        <trans-unit id="83cd030a5371aaf3ebb9b0af9d9cba22252d66f4" translate="yes" xml:space="preserve">
          <source>Otherwise, this method returns &lt;code&gt;SSLContext.getDefault().getServerSocketFactory()&lt;/code&gt;. If that call fails, an inoperative factory is returned.</source>
          <target state="translated">그렇지 않으면이 메소드는 &lt;code&gt;SSLContext.getDefault().getServerSocketFactory()&lt;/code&gt; 리턴합니다 . 해당 호출이 실패하면 작동하지 않는 팩토리가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="4e7318248ed5f4b61ba0fccac01f9a329778acd5" translate="yes" xml:space="preserve">
          <source>Otherwise, this method returns &lt;code&gt;SSLContext.getDefault().getSocketFactory()&lt;/code&gt;. If that call fails, an inoperative factory is returned.</source>
          <target state="translated">그렇지 않으면이 메소드는 &lt;code&gt;SSLContext.getDefault().getSocketFactory()&lt;/code&gt; 리턴합니다 . 해당 호출이 실패하면 작동하지 않는 팩토리가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="0045a2a427ddc16220189752f223d7d7fcd4a729" translate="yes" xml:space="preserve">
          <source>Otherwise, throws a &lt;a href=&quot;factoryconfigurationerror&quot;&gt;&lt;code&gt;FactoryConfigurationError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇지 않으면 &lt;a href=&quot;factoryconfigurationerror&quot;&gt; &lt;code&gt;FactoryConfigurationError&lt;/code&gt; 를 발생&lt;/a&gt; 시킵니다.</target>
        </trans-unit>
        <trans-unit id="b1424c987ed60c6094e4e11c822f4f0b8d944e1d" translate="yes" xml:space="preserve">
          <source>Otherwise, use the display formatter.</source>
          <target state="translated">그렇지 않으면 디스플레이 포맷터를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="fa6bf3f32fb25d352c74a413862354ebc3880e8c" translate="yes" xml:space="preserve">
          <source>Otherwise, whether the new state is even or odd, &lt;code&gt;T&lt;/code&gt; will discard the newly computed value and retry the &lt;code&gt;get&lt;/code&gt; operation.</source>
          <target state="translated">그렇지 않으면, 새 상태가 짝수인지 홀수인지에 관계없이 &lt;code&gt;T&lt;/code&gt; 는 새로 계산 된 값을 버리고 &lt;code&gt;get&lt;/code&gt; 조작을 재 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="5cbc6561d27e47c3ea5b5fa6d9459eb9629b7617" translate="yes" xml:space="preserve">
          <source>Otherwise:</source>
          <target state="translated">Otherwise:</target>
        </trans-unit>
        <trans-unit id="4e88e8917a2f0fd2340eeca26b8e09a5c15c5c1b" translate="yes" xml:space="preserve">
          <source>OutOfMemoryError</source>
          <target state="translated">OutOfMemoryError</target>
        </trans-unit>
        <trans-unit id="518622e3079c1f5664209d093ccf9cbb9d694af5" translate="yes" xml:space="preserve">
          <source>Output buffer for writing compressed data.</source>
          <target state="translated">압축 된 데이터를 쓰기위한 출력 버퍼.</target>
        </trans-unit>
        <trans-unit id="d8336e2bb6cc6d289976108f8e9f47c71b04f731" translate="yes" xml:space="preserve">
          <source>Output buffer for writing uncompressed data.</source>
          <target state="translated">압축되지 않은 데이터를 쓰기위한 출력 버퍼.</target>
        </trans-unit>
        <trans-unit id="f20dcab4106dff9b93580de083dfb6eff2f16086" translate="yes" xml:space="preserve">
          <source>Output is implementation dependent and trace mode may be ignored.</source>
          <target state="translated">출력은 구현에 따라 다르며 추적 모드는 무시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1083a774cf8f786c0027b14adf79ec3f5bbb6521" translate="yes" xml:space="preserve">
          <source>OutputDeviceAssigned</source>
          <target state="translated">OutputDeviceAssigned</target>
        </trans-unit>
        <trans-unit id="193209e37c5beaddd0fc06847d87374b13da8dde" translate="yes" xml:space="preserve">
          <source>OutputDeviceAssigned.equals()</source>
          <target state="translated">OutputDeviceAssigned.equals()</target>
        </trans-unit>
        <trans-unit id="0e5b63f24953ff0d4b7ff54a4c6283fdb82c6891" translate="yes" xml:space="preserve">
          <source>OutputDeviceAssigned.getCategory()</source>
          <target state="translated">OutputDeviceAssigned.getCategory()</target>
        </trans-unit>
        <trans-unit id="e72b27ff0c142fde0f754e28b3748ec2a44077ac" translate="yes" xml:space="preserve">
          <source>OutputDeviceAssigned.getName()</source>
          <target state="translated">OutputDeviceAssigned.getName()</target>
        </trans-unit>
        <trans-unit id="09ca09d454a768082497a23d6aad6735273010fb" translate="yes" xml:space="preserve">
          <source>OutputKeys</source>
          <target state="translated">OutputKeys</target>
        </trans-unit>
        <trans-unit id="5b7cf26f1fcbb5818199640c0d6e05c35404a4ea" translate="yes" xml:space="preserve">
          <source>OutputStream</source>
          <target state="translated">OutputStream</target>
        </trans-unit>
        <trans-unit id="1daabc71bdd30a9fcfc678dce3a7b39084f637c6" translate="yes" xml:space="preserve">
          <source>OutputStream.close()</source>
          <target state="translated">OutputStream.close()</target>
        </trans-unit>
        <trans-unit id="3836c9c97af67d06a504909a6a745095323ac946" translate="yes" xml:space="preserve">
          <source>OutputStream.flush()</source>
          <target state="translated">OutputStream.flush()</target>
        </trans-unit>
        <trans-unit id="2126b9bf192f7f69616ae86ab7c8d6b9ec2b859a" translate="yes" xml:space="preserve">
          <source>OutputStream.write()</source>
          <target state="translated">OutputStream.write()</target>
        </trans-unit>
        <trans-unit id="419a40d13436f20e09d7593366ca54eeab3c0c18" translate="yes" xml:space="preserve">
          <source>OutputStreamWriter</source>
          <target state="translated">OutputStreamWriter</target>
        </trans-unit>
        <trans-unit id="4eccae0a95d5eae9332f7ce75d706db6c2b7ffb0" translate="yes" xml:space="preserve">
          <source>OutputStreamWriter.close()</source>
          <target state="translated">OutputStreamWriter.close()</target>
        </trans-unit>
        <trans-unit id="fe74e24a062bb84dca8e4fd962a4ecd0bf00cbe1" translate="yes" xml:space="preserve">
          <source>OutputStreamWriter.flush()</source>
          <target state="translated">OutputStreamWriter.flush()</target>
        </trans-unit>
        <trans-unit id="7c89354d6d42163bf8f0192a46076ba284099b3f" translate="yes" xml:space="preserve">
          <source>OutputStreamWriter.getEncoding()</source>
          <target state="translated">OutputStreamWriter.getEncoding()</target>
        </trans-unit>
        <trans-unit id="5dd58d56f10a29e6f9b7fc3864f369c01aac141b" translate="yes" xml:space="preserve">
          <source>OutputStreamWriter.write()</source>
          <target state="translated">OutputStreamWriter.write()</target>
        </trans-unit>
        <trans-unit id="05ea49e63f51fa90de1387234dda251564bab10a" translate="yes" xml:space="preserve">
          <source>Outputs this chronology as a &lt;code&gt;String&lt;/code&gt;, using the chronology ID.</source>
          <target state="translated">연대기 ID를 사용 하여이 연대기를 &lt;code&gt;String&lt;/code&gt; 으로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="e6178009249f5cbdbcffbe79c24ac71d330cebf0" translate="yes" xml:space="preserve">
          <source>Outputs this chronology as a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">이 연대기를 &lt;code&gt;String&lt;/code&gt; 로서 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="f16b871f00f5cd091742c20527675ecabf297ce4" translate="yes" xml:space="preserve">
          <source>Outputs this date as a &lt;code&gt;String&lt;/code&gt;, such as &lt;code&gt;2007-12-03&lt;/code&gt;.</source>
          <target state="translated">이 날짜 를 &lt;code&gt;2007-12-03&lt;/code&gt; 과 같은 &lt;code&gt;String&lt;/code&gt; 로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="d5cb07c1e2c35a4657a04d08fe3c4e0046be1520" translate="yes" xml:space="preserve">
          <source>Outputs this date as a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">이 날짜를 &lt;code&gt;String&lt;/code&gt; 으로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="df8baab240061a3b0eb2102fe12fb65eb0bed686" translate="yes" xml:space="preserve">
          <source>Outputs this date-time as a &lt;code&gt;String&lt;/code&gt;, such as &lt;code&gt;2007-12-03T10:15:30+01:00&lt;/code&gt;.</source>
          <target state="translated">이 날짜-시간을 &lt;code&gt;2007-12-03T10:15:30+01:00&lt;/code&gt; 과 같은 &lt;code&gt;String&lt;/code&gt; 으로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="bda75447ae6b21b1bb80bf673422968a07343686" translate="yes" xml:space="preserve">
          <source>Outputs this date-time as a &lt;code&gt;String&lt;/code&gt;, such as &lt;code&gt;2007-12-03T10:15:30+01:00[Europe/Paris]&lt;/code&gt;.</source>
          <target state="translated">이 날짜-시간을 &lt;code&gt;2007-12-03T10:15:30+01:00[Europe/Paris]&lt;/code&gt; 와 같은 &lt;code&gt;String&lt;/code&gt; 으로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="8e3de7ef1b68acc66e29aebf22a5661927763817" translate="yes" xml:space="preserve">
          <source>Outputs this date-time as a &lt;code&gt;String&lt;/code&gt;, such as &lt;code&gt;2007-12-03T10:15:30&lt;/code&gt;.</source>
          <target state="translated">이 날짜-시간 을 &lt;code&gt;2007-12-03T10:15:30&lt;/code&gt; 과 같은 &lt;code&gt;String&lt;/code&gt; 으로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="3091a7c568084d9ce9f594efac6d782560868596" translate="yes" xml:space="preserve">
          <source>Outputs this date-time as a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">이 날짜-시간을 &lt;code&gt;String&lt;/code&gt; 으로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="45aaec2acd350f3baec7572751195d39cd1ab41d" translate="yes" xml:space="preserve">
          <source>Outputs this month-day as a &lt;code&gt;String&lt;/code&gt;, such as &lt;code&gt;--12-03&lt;/code&gt;.</source>
          <target state="translated">이 월-일을 &lt;code&gt;String&lt;/code&gt; 으로 출력합니다 ( 예 : &lt;code&gt;--12-03&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="b0471678a1da4427d8e470491878d62810cbe9eb" translate="yes" xml:space="preserve">
          <source>Outputs this offset as a &lt;code&gt;String&lt;/code&gt;, using the normalized ID.</source>
          <target state="translated">정규화 된 ID를 사용 하여이 오프셋을 &lt;code&gt;String&lt;/code&gt; 으로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="2105a2c2dace9202b5fe43180e1956e8b1d7e939" translate="yes" xml:space="preserve">
          <source>Outputs this period as a &lt;code&gt;String&lt;/code&gt;, such as &lt;code&gt;P6Y3M1D&lt;/code&gt;.</source>
          <target state="translated">이 기간 을 &lt;code&gt;P6Y3M1D&lt;/code&gt; 와 같은 &lt;code&gt;String&lt;/code&gt; 로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="50bbbe3bfb55b37709117f811d29dce01010eac1" translate="yes" xml:space="preserve">
          <source>Outputs this period as a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">이 기간을 &lt;code&gt;String&lt;/code&gt; 으로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="07e058ff9001b3a8989565b8368d7f520f8db54b" translate="yes" xml:space="preserve">
          <source>Outputs this range as a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">이 범위를 &lt;code&gt;String&lt;/code&gt; 로서 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="7be783188642848a0c975926d5df7ac01b7fe928" translate="yes" xml:space="preserve">
          <source>Outputs this time as a &lt;code&gt;String&lt;/code&gt;, such as &lt;code&gt;10:15:30+01:00&lt;/code&gt;.</source>
          <target state="translated">이 시간을 &lt;code&gt;10:15:30+01:00&lt;/code&gt; 과 같은 &lt;code&gt;String&lt;/code&gt; 으로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="c10b07538b9e7206d7df26908abe90bf7be2349e" translate="yes" xml:space="preserve">
          <source>Outputs this time as a &lt;code&gt;String&lt;/code&gt;, such as &lt;code&gt;10:15&lt;/code&gt;.</source>
          <target state="translated">이 시간 을 &lt;code&gt;10:15&lt;/code&gt; 와 같은 &lt;code&gt;String&lt;/code&gt; 로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="1ab4620ba4f81db7a4d3a53566952f43431122e4" translate="yes" xml:space="preserve">
          <source>Outputs this year as a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">올해는 &lt;code&gt;String&lt;/code&gt; 로서 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="db1d33ea0fd40d6d0b336be7afd6dff43d434258" translate="yes" xml:space="preserve">
          <source>Outputs this year-month as a &lt;code&gt;String&lt;/code&gt;, such as &lt;code&gt;2007-12&lt;/code&gt;.</source>
          <target state="translated">올해 한 달 을 &lt;code&gt;2007-12&lt;/code&gt; 와 같은 &lt;code&gt;String&lt;/code&gt; 으로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="4dae0c29bf1fad41f24ee490e3bda9444a8839fc" translate="yes" xml:space="preserve">
          <source>Outputs this zone as a &lt;code&gt;String&lt;/code&gt;, using the ID.</source>
          <target state="translated">ID를 사용 하여이 영역을 &lt;code&gt;String&lt;/code&gt; 으로 출력합니다 .</target>
        </trans-unit>
        <trans-unit id="98136ec2892528a71520a6e520ec6d617b195ce2" translate="yes" xml:space="preserve">
          <source>Outside the range of valid years an implementation is free to return either a best guess or false. An implementation must not throw an exception, even if the year is outside the range of valid years.</source>
          <target state="translated">유효 연도 범위를 벗어난 구현은 최선의 추측 또는 거짓을 자유롭게 반환 할 수 있습니다. 구현은 연도가 유효한 연도 범위를 벗어난 경우에도 예외를 발생시키지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="a486240104a96f5eeece2de30073358abc62930e" translate="yes" xml:space="preserve">
          <source>Outside timer action.</source>
          <target state="translated">외부 타이머 동작.</target>
        </trans-unit>
        <trans-unit id="4da7bc9200c71949eae8135d4a25bb5b299cf7cc" translate="yes" xml:space="preserve">
          <source>Overflow</source>
          <target state="translated">Overflow</target>
        </trans-unit>
        <trans-unit id="22f1456f36a2e9d6d921b8b76ef1629633f5b33a" translate="yes" xml:space="preserve">
          <source>Overlap, with two valid offsets. This is when clocks are set back typically due to the autumn daylight savings change from &quot;summer&quot; to &quot;winter&quot;. In an overlap there are local date-time values with two valid offsets.</source>
          <target state="translated">두 개의 유효한 오프셋이있는 겹침. 가을 일광 절약 시간이 &quot;여름&quot;에서 &quot;겨울&quot;로 변경되어 일반적으로 시계가 재설정되는 경우입니다. 겹치는 부분에는 두 개의 유효한 오프셋이있는 로컬 날짜-시간 값이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac94ec0049f3472bc0f3933423a5b4f8b2885a9a" translate="yes" xml:space="preserve">
          <source>OverlappingFileLockException</source>
          <target state="translated">OverlappingFileLockException</target>
        </trans-unit>
        <trans-unit id="17abd9e87150afef8d4c2144c5babb5cbfb4eeb9" translate="yes" xml:space="preserve">
          <source>Overlaps occur where there are local date-times that exist twice. An example would be when the offset changes from &lt;code&gt;+02:00&lt;/code&gt; to &lt;code&gt;+01:00&lt;/code&gt;. This might be described as 'the clocks will move back one hour tonight at 2am'.</source>
          <target state="translated">두 번 존재하는 현지 날짜-시간이있는 경우 중복이 발생합니다. 오프셋이 &lt;code&gt;+02:00&lt;/code&gt; 에서 &lt;code&gt;+01:00&lt;/code&gt; 로 변경되는 경우를 예로들 수 있습니다 . 이것은 '시계가 오늘 밤 2시에 1 시간 뒤로 이동합니다'라고 설명 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7285476b1391ba5cf6e4ef50910fc4e06018c253" translate="yes" xml:space="preserve">
          <source>Overlaps occur where there are local date-times that exist twice. An example would be when the offset changes from &lt;code&gt;+04:00&lt;/code&gt; to &lt;code&gt;+03:00&lt;/code&gt;. This might be described as 'the clocks will move back one hour tonight at 2am'.</source>
          <target state="translated">두 번 존재하는 현지 날짜-시간이있는 경우 중복이 발생합니다. 오프셋이 &lt;code&gt;+04:00&lt;/code&gt; 에서 &lt;code&gt;+03:00&lt;/code&gt; 으로 변경되는 경우를 예로들 수 있습니다 . 이것은 '시계가 오늘 밤 2시에 1 시간 뒤로 이동합니다'라고 설명 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63c1f8d43fd0410059ad06b875f7a02d21583035" translate="yes" xml:space="preserve">
          <source>OverlayLayout</source>
          <target state="translated">OverlayLayout</target>
        </trans-unit>
        <trans-unit id="16b97a4e0ff3da66ea4d642ca71f9e32b4caac9f" translate="yes" xml:space="preserve">
          <source>Overridable method to perform an action upon impending phase advance, and to control termination.</source>
          <target state="translated">임박한 단계 진행시 작업을 수행하고 종료를 제어하는 ​​재정의 가능한 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="395729a8bd0e7e7e50230976ff2329fc1f9d06db" translate="yes" xml:space="preserve">
          <source>Overridable method to perform an action upon impending phase advance, and to control termination. This method is invoked upon arrival of the party advancing this phaser (when all other waiting parties are dormant). If this method returns &lt;code&gt;
 true&lt;/code&gt;, this phaser will be set to a final termination state upon advance, and subsequent calls to &lt;a href=&quot;#isTerminated()&quot;&gt;&lt;code&gt;isTerminated()&lt;/code&gt;&lt;/a&gt; will return true. Any (unchecked) Exception or Error thrown by an invocation of this method is propagated to the party attempting to advance this phaser, in which case no advance occurs.</source>
          <target state="translated">임박한 단계 진행시 작업을 수행하고 종료를 제어하는 ​​재정의 가능한 메서드입니다. 이 메서드는이 페이저를 진행하는 파티가 도착하면 호출됩니다 (다른 모든 대기중인 파티가 휴면 상태 일 때). 이 메서드가 &lt;code&gt; true&lt;/code&gt; 를 반환 하면이 페이저는 진행시 최종 종료 상태로 설정되고 이후 &lt;a href=&quot;#isTerminated()&quot;&gt; &lt;code&gt;isTerminated()&lt;/code&gt; &lt;/a&gt; 호출은 true 를 반환합니다. 이 메서드의 호출에 의해 발생한 모든 (선택되지 않은) 예외 또는 오류는이 페이저를 진행하려는 당사자에게 전파되며,이 경우 진행이 발생하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0f5322107a9b1b17728b967404c7ce9229e023a6" translate="yes" xml:space="preserve">
          <source>Overridable method to perform an action upon impending phase advance, and to control termination. This method is invoked upon arrival of the party advancing this phaser (when all other waiting parties are dormant). If this method returns &lt;code&gt;true&lt;/code&gt;, this phaser will be set to a final termination state upon advance, and subsequent calls to &lt;a href=&quot;phaser#isTerminated--&quot;&gt;&lt;code&gt;isTerminated()&lt;/code&gt;&lt;/a&gt; will return true. Any (unchecked) Exception or Error thrown by an invocation of this method is propagated to the party attempting to advance this phaser, in which case no advance occurs.</source>
          <target state="translated">임박한 단계 진행시 조치를 수행하고 종료를 제어하는 ​​재정의 가능한 방법. 이 방법은이 페이저를 진행하는 당사자가 도착하면 호출됩니다 (기타 대기 당사자가 모두 휴면 상태 인 경우). 이 메소드가 &lt;code&gt;true&lt;/code&gt; 를 돌려주는 경우 ,이 페이저는 사전에 최종 종료 상태로 설정되어, &lt;a href=&quot;phaser#isTerminated--&quot;&gt; &lt;code&gt;isTerminated()&lt;/code&gt; &lt;/a&gt; 후속 호출은 true 를 돌려줍니다. 이 메소드의 호출에 의해 발생 된 (확인되지 ​​않은) 예외 또는 오류는이 단계를 진행시키려는 당사자에게 전파되며,이 경우에는 진행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3b7dddf2c086732dad472d568d81ed9392c90864" translate="yes" xml:space="preserve">
          <source>Overridden and hidden methods are not included. See JLS (8.4.6) for details.</source>
          <target state="translated">재정의 및 숨겨진 메서드는 포함되지 않습니다. 자세한 내용은 JLS (8.4.6)를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="690def3b709bf03ac3cf88712e400606d480617f" translate="yes" xml:space="preserve">
          <source>Overridden for performance reasons.</source>
          <target state="translated">성능상의 이유로 재정의됩니다.</target>
        </trans-unit>
        <trans-unit id="dc421b99ef63e64ab4a907836f72b959ceb3b582" translate="yes" xml:space="preserve">
          <source>Overridden for performance reasons. See the &lt;a href=&quot;#override&quot;&gt;Implementation Note&lt;/a&gt; for more information.</source>
          <target state="translated">성능상의 이유로 재정의됩니다. 자세한 내용은 &lt;a href=&quot;#override&quot;&gt;구현 노트&lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="96e94d680cb911ea9d65157289869116b2902168" translate="yes" xml:space="preserve">
          <source>Overridden to allow optimized painting when the internal frame is being dragged.</source>
          <target state="translated">내부 프레임을 드래그 할 때 최적화 된 페인팅을 허용하도록 재정의되었습니다.</target>
        </trans-unit>
        <trans-unit id="13893b5d1ce6cb3da8fa9676f956561e01e7cdce" translate="yes" xml:space="preserve">
          <source>Overridden to avoid propagating a invalidate up the tree when the cell renderer child is configured.</source>
          <target state="translated">셀 렌더러 하위가 구성 될 때 트리를 무효화하는 것을 방지하기 위해 재정의됩니다.</target>
        </trans-unit>
        <trans-unit id="477b840ff22ec0cb5bcfe7c80a8ca553d72b77d9" translate="yes" xml:space="preserve">
          <source>Overridden to cause this style to populate itself with data from UIDefaults, if necessary.</source>
          <target state="translated">필요한 경우이 스타일이 UIDefaults의 데이터로 채워지도록 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="f17477b2cbc92f4bf34aa965d5ce66b938e3f546" translate="yes" xml:space="preserve">
          <source>Overridden to do nothing for the Java L&amp;amp;F.</source>
          <target state="translated">Java L &amp;amp; F에 대해 아무것도하지 않도록 재정의되었습니다.</target>
        </trans-unit>
        <trans-unit id="085e036c9ff6a8725595f2d6048bf9de0920637a" translate="yes" xml:space="preserve">
          <source>Overridden to enforce the position of the glass component as the zero child.</source>
          <target state="translated">유리 구성 요소의 위치를 ​​제로 자식으로 강제하기 위해 재정의됩니다.</target>
        </trans-unit>
        <trans-unit id="b11b4b9a97dcf6ecaec06d5bb951b171750f937b" translate="yes" xml:space="preserve">
          <source>Overridden to ensure that ButtonHandler is created prior to any of the other installXXX methods, since several of them reference buttonHandler.</source>
          <target state="translated">여러 installXXX 메소드가 buttonHandler를 참조하므로 ButtonHandler가 다른 installXXX 메소드보다 먼저 작성되도록 재정의됩니다.</target>
        </trans-unit>
        <trans-unit id="08cd22575c6bae3d3b48aff0b0174f23ea76168f" translate="yes" xml:space="preserve">
          <source>Overridden to make clone public.</source>
          <target state="translated">클론을 공개하도록 재정의했습니다.</target>
        </trans-unit>
        <trans-unit id="cca8c2f99d7768fdbcbe6292956a10ac4defa56e" translate="yes" xml:space="preserve">
          <source>Overridden to make clone public. Returns a shallow copy of this node; the new node has no parent or children and has a reference to the same user object, if any.</source>
          <target state="translated">클론을 공개하도록 재정의했습니다. 이 노드의 얕은 복사본을 반환합니다. 새 노드에는 부모 또는 자식이 없으며 동일한 사용자 개체 (있는 경우)에 대한 참조가 있습니다.</target>
        </trans-unit>
        <trans-unit id="698830e31d698a01aee65ef91efb6611b6e4fb9a" translate="yes" xml:space="preserve">
          <source>Overridden to return &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;null&lt;/code&gt; 을 반환하도록 재정의되었습니다 .</target>
        </trans-unit>
        <trans-unit id="3236439bada336daba2b7eb853943b74d26e2329" translate="yes" xml:space="preserve">
          <source>Overridden to return &lt;code&gt;true&lt;/code&gt; when one of the following properties change:</source>
          <target state="translated">&lt;code&gt;true&lt;/code&gt; 를 반환하도록 재정의 됨다음 속성 중 하나가 변경되면 .</target>
        </trans-unit>
        <trans-unit id="e0f82eb78294e458ae4e573e30da4701433bbdb0" translate="yes" xml:space="preserve">
          <source>Overridden to return true so that any calls to &lt;code&gt;revalidate&lt;/code&gt; on any descendants of this &lt;code&gt;JScrollPane&lt;/code&gt; will cause the entire tree beginning with this &lt;code&gt;JScrollPane&lt;/code&gt; to be validated.</source>
          <target state="translated">이 &lt;code&gt;JScrollPane&lt;/code&gt; 의 자손에 대한 &lt;code&gt;revalidate&lt;/code&gt; 호출 이이 &lt;code&gt;JScrollPane&lt;/code&gt; 으로 시작하는 전체 트리가 검증 되도록 true를 반환하도록 재정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="02817ef70207c7f0a15d784ea64f29cf8f76edb8" translate="yes" xml:space="preserve">
          <source>Overridden to unconditionally return false.</source>
          <target state="translated">무조건 false를 반환하도록 재정의되었습니다.</target>
        </trans-unit>
        <trans-unit id="84219262228fd04cf972a0330569bfde39825c30" translate="yes" xml:space="preserve">
          <source>Override</source>
          <target state="translated">Override</target>
        </trans-unit>
        <trans-unit id="bbd90baf62b68e5f5eb9fd252554fbec420c1b6a" translate="yes" xml:space="preserve">
          <source>Override &lt;code&gt;StreamHandler.close&lt;/code&gt; to do a flush but not to close the output stream.</source>
          <target state="translated">플러시를 수행하지만 출력 스트림을 닫지 않도록 &lt;code&gt;StreamHandler.close&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="a1551eb0960699a60ea2796a6c37de79fcc947f0" translate="yes" xml:space="preserve">
          <source>Override &lt;code&gt;StreamHandler.close&lt;/code&gt; to do a flush but not to close the output stream. That is, we do &lt;b&gt;not&lt;/b&gt; close &lt;code&gt;System.err&lt;/code&gt;.</source>
          <target state="translated">플러시를 수행하지만 출력 스트림을 닫지 않으려면 &lt;code&gt;StreamHandler.close&lt;/code&gt; 를 재정의 하십시오. 즉, &lt;code&gt;System.err&lt;/code&gt; 을 닫지 &lt;b&gt;않습니다&lt;/b&gt; .</target>
        </trans-unit>
        <trans-unit id="724a620300aa0d146d35b338c3ed3219dd33f9e8" translate="yes" xml:space="preserve">
          <source>Override equals</source>
          <target state="translated">재정의</target>
        </trans-unit>
        <trans-unit id="dd118ece6d328ac96d34447c4a57965014beef13" translate="yes" xml:space="preserve">
          <source>Override equals.</source>
          <target state="translated">재정의는 같습니다.</target>
        </trans-unit>
        <trans-unit id="bb0bd49024e37451d1b123ec143edb4a74ae3c8a" translate="yes" xml:space="preserve">
          <source>Override hashCode.</source>
          <target state="translated">hashCode를 대체하십시오.</target>
        </trans-unit>
        <trans-unit id="9d34748bc95d90c76e4f377da15b2b28ded9bbae" translate="yes" xml:space="preserve">
          <source>Override hashCode. Generates a hash code for the DateFormatSymbols object.</source>
          <target state="translated">hashCode를 대체하십시오. DateFormatSymbols 객체의 해시 코드를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="38616e06d810e293b6ea0e28fbce1d7229abee66" translate="yes" xml:space="preserve">
          <source>Override hashCode. Since Locales are often used in hashtables, caches the value for speed.</source>
          <target state="translated">hashCode를 대체하십시오. 로케일은 종종 해시 테이블에서 사용되므로 속도 값을 캐시합니다.</target>
        </trans-unit>
        <trans-unit id="0d01effd3b1e4c7f95043f2df8712ac45059a3b5" translate="yes" xml:space="preserve">
          <source>Override height.</source>
          <target state="translated">높이를 무시합니다.</target>
        </trans-unit>
        <trans-unit id="3f88e73493e40c6e8740e603b2a6679769744414" translate="yes" xml:space="preserve">
          <source>Override height. See the height attribute definition in HTML 4.0.</source>
          <target state="translated">높이를 무시합니다. HTML 4.0의 높이 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="8cc4b6417f31809497e5f63e601da61fe1e98d11" translate="yes" xml:space="preserve">
          <source>Override height. See the height attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">높이를 무시합니다. HTML 4.0의 높이 속성 정의를 참조하십시오. 이 속성은 HTML 4.0에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="657cbd06a437199ab51e445613c7fbb6ccffa24b" translate="yes" xml:space="preserve">
          <source>Override the default Set of permissions for entries in the Zip file system.</source>
          <target state="translated">Zip 파일 시스템의 항목에 대한 기본 권한 집합을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="e372ddbd414203d6ac82c0cb9c21002b41a40330" translate="yes" xml:space="preserve">
          <source>Override the default owner for entries in the Zip file system.</source>
          <target state="translated">Zip 파일 시스템의 항목에 대한 기본 소유자를 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="d004f6c3ea92e16bdad76369336b97f5bed49264" translate="yes" xml:space="preserve">
          <source>Override the dimensions of the source image and pass the dimensions of the new scaled size to the ImageConsumer.</source>
          <target state="translated">소스 이미지의 크기를 재정의하고 새로 조정 된 크기의 크기를 ImageConsumer에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="832eb8f800c694c1cf70b1eb16e81a84affcc309" translate="yes" xml:space="preserve">
          <source>Override the method to do nothing. This is appropriate if the filter cannot produce filtered data in TDLR order.</source>
          <target state="translated">아무것도하지 않도록 메서드를 재정의합니다. 필터가 TDLR 순서로 필터링 된 데이터를 생성 할 수없는 경우에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="b7a66891007930f474a7c882e3e9dd31c807c1ce" translate="yes" xml:space="preserve">
          <source>Override the method to simply send the data. This is appropriate if the filter can handle the request itself &amp;mdash; for example, if the generated pixels have been saved in some sort of buffer.</source>
          <target state="translated">단순히 데이터를 보내도록 메서드를 재정의하십시오. 필터가 요청 자체를 처리 할 수있는 경우 (예 : 생성 된 픽셀이 일종의 버퍼에 저장된 경우) 적합합니다.</target>
        </trans-unit>
        <trans-unit id="9f878137f1d4c34c15500185744648dd73f72278" translate="yes" xml:space="preserve">
          <source>Override the parent's method avoid creating a menu bar.</source>
          <target state="translated">부모의 메서드를 재정 의하여 메뉴 모음을 만들지 마십시오.</target>
        </trans-unit>
        <trans-unit id="be4929bd00dc9865d1ce3fc4315235611c14ca7c" translate="yes" xml:space="preserve">
          <source>Override the parent's method avoid creating a menu bar. Metal frames do not have system menus.</source>
          <target state="translated">부모의 메서드를 재정 의하여 메뉴 모음을 만들지 마십시오. 금속 프레임에는 시스템 메뉴가 없습니다.</target>
        </trans-unit>
        <trans-unit id="90895a38da48980bf77098d693cc544dc1bdd5dd" translate="yes" xml:space="preserve">
          <source>Override the parent's method to do nothing.</source>
          <target state="translated">아무것도하지 않도록 부모의 메서드를 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="b13d5ea666145b42c5c2a01f2cf5add467cccaf6" translate="yes" xml:space="preserve">
          <source>Override the parent's method to do nothing. Metal frames do not have system menus.</source>
          <target state="translated">아무것도하지 않도록 부모의 메서드를 재정의합니다. 금속 프레임에는 시스템 메뉴가 없습니다.</target>
        </trans-unit>
        <trans-unit id="d38b232444571d3c1f6ee6e35e5da7ee49fe95a8" translate="yes" xml:space="preserve">
          <source>Override the source image's dimensions and pass the dimensions of the rectangular cropped region to the ImageConsumer.</source>
          <target state="translated">소스 이미지의 크기를 재정의하고 직사각형 잘린 영역의 크기를 ImageConsumer에 전달합니다.</target>
        </trans-unit>
        <trans-unit id="0dfb6c4eab32e532a24ddb401028727050329c63" translate="yes" xml:space="preserve">
          <source>Override the the default group for entries in the Zip file system.</source>
          <target state="translated">Zip 파일 시스템의 항목에 대한 기본 그룹을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="2e1b1b0d2c9bd0f2741045300b7497b25b8076e0" translate="yes" xml:space="preserve">
          <source>Override this method to provide an alternate rollover border.</source>
          <target state="translated">대체 롤오버 테두리를 제공하려면이 메서드를 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="ba71ff0370d99e2591327937489f9e8f51afbbe5" translate="yes" xml:space="preserve">
          <source>Override toString to pick up any embedded exception.</source>
          <target state="translated">포함 된 예외를 선택하려면 toString을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="ba4098f34a9da309906eaee5a4b9cb28911ba57c" translate="yes" xml:space="preserve">
          <source>Override toString to provide more detailed error message.</source>
          <target state="translated">자세한 오류 메시지를 제공하려면 toString을 재정의하십시오.</target>
        </trans-unit>
        <trans-unit id="131975f8c42387dceec74290de4aa2004199a201" translate="yes" xml:space="preserve">
          <source>Override width.</source>
          <target state="translated">너비를 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="d1abbc2a4ea4fb612b01460a0f7f8321035f037a" translate="yes" xml:space="preserve">
          <source>Override width. See the width attribute definition in HTML 4.0.</source>
          <target state="translated">너비를 재정의합니다. HTML 4.0의 width 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="9383eb8523daf71fd5e04a79391acb713173d79e" translate="yes" xml:space="preserve">
          <source>Override width. See the width attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">너비를 재정의합니다. HTML 4.0의 width 속성 정의를 참조하십시오. 이 속성은 HTML 4.0에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="406227d58231587d5c2741ed2636f2c78383bb43" translate="yes" xml:space="preserve">
          <source>Overriden so that the text will not be rendered as shifted for Toggle buttons and subclasses.</source>
          <target state="translated">텍스트가 토글 버튼 및 하위 클래스에 대해 이동 된 것처럼 렌더링되지 않도록 재정의되었습니다.</target>
        </trans-unit>
        <trans-unit id="9af1e7317b4e7408b33f9d2646a440ce1fcb4f92" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Container.getAlignmentX&lt;/code&gt; to return the horizontal alignment.</source>
          <target state="translated">&lt;code&gt;Container.getAlignmentX&lt;/code&gt; 를 재정 의하여 수평 정렬을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b7f63bc60222416c38e16c6bd339bd43f5ecde7b" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Container.getAlignmentY&lt;/code&gt; to return the vertical alignment.</source>
          <target state="translated">&lt;code&gt;Container.getAlignmentY&lt;/code&gt; 를 재정 의하여 수직 정렬을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0008c20d204392a59992f956c5a7b6402144e2c0" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Container.paint&lt;/code&gt; to paint the node's icon and use the selection color for the background.</source>
          <target state="translated">&lt;code&gt;Container.paint&lt;/code&gt; 를 재정 의하여 노드의 아이콘을 칠하고 배경에 선택 색상을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="02958e8fa63b8facf8a0d5894df9fac75fca9f73" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;FilterInputStream.close&lt;/code&gt; to close the progress monitor as well as the stream.</source>
          <target state="translated">&lt;code&gt;FilterInputStream.close&lt;/code&gt; 를 재정 의하여 진행률 모니터와 스트림을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="7d26fa5451797f405a9f34b95718505d9e8a76e7" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;FilterInputStream.read&lt;/code&gt; to update the progress monitor after the read.</source>
          <target state="translated">&lt;code&gt;FilterInputStream.read&lt;/code&gt; 를 재정 의하여 읽기 후 진행률 모니터를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="09b98bd00406734c3b9f8d5b674f23ca38597fd2" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;FilterInputStream.reset&lt;/code&gt; to reset the progress monitor as well as the stream.</source>
          <target state="translated">&lt;code&gt;FilterInputStream.reset&lt;/code&gt; 을 재정 의하여 진행률 모니터와 스트림을 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="25e22614ba15ea17543e61660eb14f8eeab15928" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;FilterInputStream.skip&lt;/code&gt; to update the progress monitor after the skip.</source>
          <target state="translated">&lt;code&gt;FilterInputStream.skip&lt;/code&gt; 를 재정의합니다.건너 뛰기 후 진행률 모니터를 업데이트하도록 를 합니다.</target>
        </trans-unit>
        <trans-unit id="266ac491b9df9e6dd9ab19a49548695093ac7122" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.clearRect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.clearRect&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="10e352523ef268dc3c6a3c8d8933d3513f8e1030" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.clipRect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.clipRect&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="e5f6a22c152093f8fed9c699dbeb354e8309fa41" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.copyArea&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.copyArea&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="4160eb94aa2a614478995c7d393dd14e2d233977" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.create&lt;/code&gt; to return a DebugGraphics object.</source>
          <target state="translated">&lt;code&gt;Graphics.create&lt;/code&gt; 를 재정 의하여 DebugGraphics 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fb406d4ff6c339fa4f09b26f2f4abdc91fe9ca40" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.dispose&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.dispose&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="7a33ba9058be377607148afc8e28fb1fb8883406" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.draw3DRect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.draw3DRect&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="2ea3b34322eddc5069d23e8d4c40f77516d2efb7" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.drawArc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.drawArc&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="b6e2b2eecfcdb4b8d2f62bccf989e594866a939a" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.drawBytes&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.drawBytes&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="e47a742ab2670ebd7364d001fde24903d83a61fe" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.drawChars&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.drawChars&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="1b8c48a031bb02cae8c26af00178cca3bdfbc3da" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.drawImage&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.drawImage&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="24b53e3356c210ee70018e599aa191fef2cc9d25" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.drawLine&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.drawLine&lt;/code&gt; 을 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="169d26570027d358c8ca03e3c64662800362c5f6" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.drawOval&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.drawOval&lt;/code&gt; 을 재정의합니다. 합니다.</target>
        </trans-unit>
        <trans-unit id="17df124521508181c09228f3b79a4a913927b346" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.drawPolygon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.drawPolygon&lt;/code&gt; 을 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="3d37300c3f803416abee9fd19ccaa1400c3bafd4" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.drawPolyline&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.drawPolyline&lt;/code&gt; 을 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="fb5de0789997810096bb8e946317018a690a5b83" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.drawRect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.drawRect&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="1bb5fa18cd97a6f56c2d0b3d9f94df490a87e074" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.drawRoundRect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.drawRoundRect&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="a37f25afe0f2ff604b041f6345846e36a5075879" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.drawString&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.drawString&lt;/code&gt; 을 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="c78d91ac6c20312e357d614f0bfdaa1b8f7c7d57" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.fill3DRect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.fill3DRect&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="d356f149a461faabc739604ff62694d252629c07" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.fillArc&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.fillArc&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="d99f5c20919288eaec34e99d1ac56e9e29945c6c" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.fillOval&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.fillOval&lt;/code&gt; 을 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="8463804b27b594cae0c89b8aecfc7c7e698ad083" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.fillPolygon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.fillPolygon&lt;/code&gt; 을 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="195fc14fd8a5630c147d20b754d50ecbeb578448" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.fillRect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.fillRect&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="cc3eaa07d456cbaf778a7f0aec1a3a9660aa9276" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.fillRoundRect&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.fillRoundRect&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="ae360b6a52b96eb6c98a7f32ec1dc0d058744d70" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.getClip&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.getClip&lt;/code&gt; 을 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="0581f89c37db0092c39c1a8272700ce6b3817eba" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.getClipBounds&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.getClipBounds&lt;/code&gt; 를 재정의합니다. 합니다.</target>
        </trans-unit>
        <trans-unit id="90bb1b27d83bd905d7da090200a9785dcf6734c1" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.getFontMetrics&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.getFontMetrics&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="26a1646823febdae5bff7ea32f7afce1d77b2311" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.setClip&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.setClip&lt;/code&gt; 을 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="d110baf1fd6c49c7fe1a5cad09bca89c1478a2c4" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.setPaintMode&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.setPaintMode&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="031520010125897b8bcb312e0bffbd013222b758" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.setXORMode&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.setXORMode&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="3cd69ba79e4b568d9dbd6b5cc81ac71f1377b701" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;Graphics.translate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Graphics.translate&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="d08edcfdad3f34095afc4ceaefaa5d23afd82b3d" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;JComponent.addNotify&lt;/code&gt; to register this menu bar with the current keyboard manager.</source>
          <target state="translated">&lt;code&gt;JComponent.addNotify&lt;/code&gt; 를 재정 의하여이 메뉴 모음을 현재 키보드 관리자에 등록합니다.</target>
        </trans-unit>
        <trans-unit id="2134cd6fe29c601d32af1a9745652d574cdd07bf" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;JComponent.getBorder&lt;/code&gt; to returns the current border.</source>
          <target state="translated">&lt;code&gt;JComponent.getBorder&lt;/code&gt; 를 재정 의하여 현재 테두리를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="da667382c55659b150bdcbc42f47920050ff0fdc" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;JComponent.getPreferredSize&lt;/code&gt; to return slightly wider preferred size value.</source>
          <target state="translated">&lt;code&gt;JComponent.getPreferredSize&lt;/code&gt; 를 재정 의하여 약간 더 넓은 선호 크기 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="87c71f1a6b76752b06c4b3e508441953650bd9ac" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;JComponent.removeNotify&lt;/code&gt; to check if this button is currently set as the default button on the &lt;code&gt;RootPane&lt;/code&gt;, and if so, sets the &lt;code&gt;RootPane&lt;/code&gt;'s default button to &lt;code&gt;null&lt;/code&gt; to ensure the &lt;code&gt;RootPane&lt;/code&gt; doesn't hold onto an invalid button reference.</source>
          <target state="translated">이 버튼이 현재 &lt;code&gt;RootPane&lt;/code&gt; 의 기본 버튼으로 설정되어 있는지 확인하기 위해 &lt;code&gt;JComponent.removeNotify&lt;/code&gt; 를 재정의 하고, 그렇다면 &lt;code&gt;RootPane&lt;/code&gt; 의 기본 버튼을 &lt;code&gt;null&lt;/code&gt; 로 설정하여 &lt;code&gt;RootPane&lt;/code&gt; 이 잘못된 버튼 참조를 유지하지 않도록합니다.</target>
        </trans-unit>
        <trans-unit id="bc0d52b7ee53f49819c987e6a0bc6dd7f7768d54" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;JComponent.removeNotify&lt;/code&gt; to unregister this menu bar with the current keyboard manager.</source>
          <target state="translated">&lt;code&gt;JComponent.removeNotify&lt;/code&gt; 를 재정 의하여 현재 키보드 관리자로이 메뉴 모음의 등록을 취소합니다.</target>
        </trans-unit>
        <trans-unit id="a2f262baa4b0a911a3da0990a3c3753fc26a136e" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;JComponent.setBackground&lt;/code&gt; to assign the unselected-background color to the specified color.</source>
          <target state="translated">&lt;code&gt;JComponent.setBackground&lt;/code&gt; 를 재정 의하여 선택되지 않은 배경색을 지정된 색에 할당합니다.</target>
        </trans-unit>
        <trans-unit id="0b570318244af6a446f2217391aa96d98601ce6b" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;JComponent.setForeground&lt;/code&gt; to assign the unselected-foreground color to the specified color.</source>
          <target state="translated">&lt;code&gt;JComponent.setForeground&lt;/code&gt; 를 재정 의하여 선택되지 않은 전경색을 지정된 색에 할당합니다.</target>
        </trans-unit>
        <trans-unit id="4123f6a4de149acb10248c08e9003037255452f0" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;JComponent.updateUI&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JComponent.updateUI&lt;/code&gt; 를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="fea7e6afc7c084d73749f8ba3bfd21ebd5ba19be" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;JComponent&lt;/code&gt;'s &lt;code&gt;getToolTipText&lt;/code&gt; method in order to allow renderer's tips to be used if it has text set.</source>
          <target state="translated">&lt;code&gt;JComponent&lt;/code&gt; 의 &lt;code&gt;getToolTipText&lt;/code&gt; 를 재정의합니다.텍스트 세트가있는 경우 렌더러의 팁을 사용할 수 있도록 메서드를 합니다.</target>
        </trans-unit>
        <trans-unit id="2cf67ecaed30525827246f1c4d7b96e1bcc103e4" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;JComponent&lt;/code&gt;'s &lt;code&gt;getToolTipText&lt;/code&gt; method in order to allow the renderer's tips to be used if it has text set.</source>
          <target state="translated">텍스트 세트가있는 경우 렌더러의 팁을 사용할 수 있도록 &lt;code&gt;JComponent&lt;/code&gt; 의 &lt;code&gt;getToolTipText&lt;/code&gt; 메서드를 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="857f24bf84e222908c61e5aa4c56deb20526582b" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;JTextField.getPreferredSize&lt;/code&gt; to return the preferred size based on current font, if set, or else use renderer's font.</source>
          <target state="translated">&lt;code&gt;JTextField.getPreferredSize&lt;/code&gt; 를 재정 의하여 현재 글꼴 (설정된 경우)에 따라 선호하는 크기를 반환하거나 렌더러의 글꼴을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="501af182052ce0a4416767dc6b16d9cd2b32d88e" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;RGBImageFilter.filterRGB&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RGBImageFilter.filterRGB&lt;/code&gt; 를 재정의 합니다 .</target>
        </trans-unit>
        <trans-unit id="ed17256904416d4da4be02afe9e1a648c07905cb" translate="yes" xml:space="preserve">
          <source>Overrides &lt;code&gt;processKeyEvent&lt;/code&gt; to process events.</source>
          <target state="translated">&lt;code&gt;processKeyEvent&lt;/code&gt; 를 재정 의하여 이벤트를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="b8b4d025ab36acaf143943fa10987b47f22ecf26" translate="yes" xml:space="preserve">
          <source>Overrides Cloneable</source>
          <target state="translated">복제 가능을 재정의</target>
        </trans-unit>
        <trans-unit id="eea97e4be7590cd51144be6f1812cf01deb5e0aa" translate="yes" xml:space="preserve">
          <source>Overrides Cloneable.</source>
          <target state="translated">복제 가능을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="2f15d1e31720e92a57c2fe5e79f1a6e0315844d3" translate="yes" xml:space="preserve">
          <source>Overrides Format. Formats a time object into a time string. Examples of time objects are a time value expressed in milliseconds and a Date object.</source>
          <target state="translated">형식을 재정의합니다. 시간 객체를 시간 문자열로 포맷합니다. 시간 객체의 예는 밀리 초로 표시된 시간 값과 Date 객체입니다.</target>
        </trans-unit>
        <trans-unit id="a74a82e79668b5a2b14e844e2e09e9375cdafcd9" translate="yes" xml:space="preserve">
          <source>Overrides equals</source>
          <target state="translated">같음 재정의</target>
        </trans-unit>
        <trans-unit id="cbf0396103cd9cfaec43eba358f8ddcdd8ed4622" translate="yes" xml:space="preserve">
          <source>Overrides equals.</source>
          <target state="translated">같음을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="ef48fd307f873932eb74e7531f13a29e5debd56c" translate="yes" xml:space="preserve">
          <source>Overrides hashCode</source>
          <target state="translated">hashCode를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="b0e44fdda770c803b9067172087e9735e560159b" translate="yes" xml:space="preserve">
          <source>Overrides hashCode.</source>
          <target state="translated">hashCode를 대체합니다.</target>
        </trans-unit>
        <trans-unit id="413040649adb94ff14cd2c2d40d590a52947c037" translate="yes" xml:space="preserve">
          <source>Overrides the default &lt;code&gt;FocusTraversalPolicy&lt;/code&gt; for this &lt;code&gt;JComponent&lt;/code&gt;'s focus traversal cycle by unconditionally setting the specified &lt;code&gt;Component&lt;/code&gt; as the next &lt;code&gt;Component&lt;/code&gt; in the cycle, and this &lt;code&gt;JComponent&lt;/code&gt; as the specified &lt;code&gt;Component&lt;/code&gt;'s previous &lt;code&gt;Component&lt;/code&gt; in the cycle.</source>
          <target state="translated">지정된 &lt;code&gt;Component&lt;/code&gt; 를 사이클 의 다음 &lt;code&gt;Component&lt;/code&gt; 로,이 &lt;code&gt;JComponent&lt;/code&gt; 를 사이클 의 지정된 &lt;code&gt;Component&lt;/code&gt; 의 이전 &lt;code&gt;Component&lt;/code&gt; 로 무조건 설정 &lt;code&gt;FocusTraversalPolicy&lt;/code&gt; &lt;code&gt;JComponent&lt;/code&gt; 포커스 순회 사이클에 대한 디폴트 FocusTraversalPolicy 를 재정의합니다 .</target>
        </trans-unit>
        <trans-unit id="4222791043ae76103bace02f503468449a3115b1" translate="yes" xml:space="preserve">
          <source>Overrides the default list of cipher suites enabled for use on the TLS connection.</source>
          <target state="translated">TLS 연결에서 사용하도록 활성화 된 암호 제품군의 기본 목록을 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="9018f84846f59727281fd38860f6b4848d33b767" translate="yes" xml:space="preserve">
          <source>Overrides the default list of cipher suites enabled for use on the TLS connection. The cipher suites must have already been listed by &lt;code&gt;SSLSocketFactory.getSupportedCipherSuites()&lt;/code&gt; as being supported. Even if a suite has been enabled, it still might not be used because the peer does not support it, or because the requisite certificates (and private keys) are not available.</source>
          <target state="translated">TLS 연결에서 사용할 수있는 기본 암호화 제품군 목록을 재정의합니다. 암호화 스위트는 &lt;code&gt;SSLSocketFactory.getSupportedCipherSuites()&lt;/code&gt; 에 의해 지원되는 것으로 이미 나열되어 있어야합니다 . 제품군이 활성화 된 경우에도 피어가이를 지원하지 않거나 필수 인증서 (및 개인 키)를 사용할 수 없기 때문에 여전히 제품군을 사용하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9c8045647dac7bc94724301d84545945cf905fe" translate="yes" xml:space="preserve">
          <source>Overrides:</source>
          <target state="translated">Overrides:</target>
        </trans-unit>
        <trans-unit id="ec44abd86376922fa1d3632f39c743c30f9a8d56" translate="yes" xml:space="preserve">
          <source>Overriding &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt; to perform cleanup actions is reliable only when called directly or when called by try-with-resources. Do not depend on finalization to invoke &lt;code&gt;close&lt;/code&gt;; finalization is not reliable and is deprecated. If cleanup of native resources is needed, other mechanisms such as &lt;a href=&quot;../lang/ref/cleaner&quot;&gt;Cleaner&lt;/a&gt; should be used.</source>
          <target state="translated">정리 작업을 수행하기 위해 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 를 재정의 하는 것은 직접 호출되거나 try-with-resources에 의해 호출 될 때만 신뢰할 수 있습니다. &lt;code&gt;close&lt;/code&gt; 를 호출하기 위해 종료에 의존하지 마십시오 . 종료는 신뢰할 수 없으며 더 이상 사용되지 않습니다. 네이티브 리소스를 정리 해야하는 경우 &lt;a href=&quot;../lang/ref/cleaner&quot;&gt;Cleaner&lt;/a&gt; 와 같은 다른 메커니즘을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="0c91054cea76dd4378375ff5a2d3cc50305e5b09" translate="yes" xml:space="preserve">
          <source>Overriding &lt;code&gt;paramString&lt;/code&gt; to provide information about the specific new aspects of the JFC components.</source>
          <target state="translated">JFC 구성 요소의 특정 새로운 측면에 대한 정보를 제공하기 위해 &lt;code&gt;paramString&lt;/code&gt; 을 재정의 합니다.</target>
        </trans-unit>
        <trans-unit id="d6285cb523c09d887d1a8d2587a8a89aa16b06cf" translate="yes" xml:space="preserve">
          <source>Overriding this method allows applications to use different conventions in the organization and packaging of localized resources.</source>
          <target state="translated">이 방법을 재정의하면 응용 프로그램에서 지역화 된 리소스의 구성 및 패키징에서 서로 다른 규칙을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0efc2e6be4c23b9a513d7ce0dcff8ed80e8912e7" translate="yes" xml:space="preserve">
          <source>Overview</source>
          <target state="translated">Overview</target>
        </trans-unit>
        <trans-unit id="2917cfa2ea9ed0bd353f7952927811fa9d63e4b8" translate="yes" xml:space="preserve">
          <source>Overview of kind of presence detected by different AnnotatedElement methods</source>
          <target state="translated">다른 AnnotatedElement 메소드에 의해 감지되는 존재 유형의 개요</target>
        </trans-unit>
        <trans-unit id="89c9b97545a62413126737bff27bd1bf3f82e042" translate="yes" xml:space="preserve">
          <source>Overwrites the Transform in the &lt;code&gt;Graphics2D&lt;/code&gt; context.</source>
          <target state="translated">&lt;code&gt;Graphics2D&lt;/code&gt; 컨텍스트 의 Transform을 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="2d2594e869880349025d51fc83e0cc5480d4acfc" translate="yes" xml:space="preserve">
          <source>Overwrites the Transform in the &lt;code&gt;Graphics2D&lt;/code&gt; context. WARNING: This method should &lt;b&gt;never&lt;/b&gt; be used to apply a new coordinate transform on top of an existing transform because the &lt;code&gt;Graphics2D&lt;/code&gt; might already have a transform that is needed for other purposes, such as rendering Swing components or applying a scaling transformation to adjust for the resolution of a printer.</source>
          <target state="translated">&lt;code&gt;Graphics2D&lt;/code&gt; 컨텍스트 의 Transform을 덮어 씁니다 . 경고 : &lt;code&gt;Graphics2D&lt;/code&gt; 에는 Swing 구성 요소 렌더링 또는 해상도 조정을위한 크기 조정 변환 적용과 같은 다른 목적에 필요한 변환이 이미있을 수 있으므로 기존 변환 위에 새 좌표 변환을 적용하는 데이 방법을 사용해서는 &lt;b&gt;안됩니다.&lt;/b&gt; 프린터</target>
        </trans-unit>
        <trans-unit id="89ff31225c5f042fff61e92ec8cf80e417a7140c" translate="yes" xml:space="preserve">
          <source>Owner</source>
          <target state="translated">Owner</target>
        </trans-unit>
        <trans-unit id="c18e5dc7335629c569e1f7fbc647d2b70a61e815" translate="yes" xml:space="preserve">
          <source>Owner.addOwner()</source>
          <target state="translated">Owner.addOwner()</target>
        </trans-unit>
        <trans-unit id="827b4aa8f61241405b674f43f7f0d9a1e2346efe" translate="yes" xml:space="preserve">
          <source>Owner.deleteOwner()</source>
          <target state="translated">Owner.deleteOwner()</target>
        </trans-unit>
        <trans-unit id="3140e77bf7e21e90d7e998d53a2ff0d94b8541bd" translate="yes" xml:space="preserve">
          <source>Owner.isOwner()</source>
          <target state="translated">Owner.isOwner()</target>
        </trans-unit>
        <trans-unit id="bbcd96ed608339b7ea57971bce77a05ff6e197dd" translate="yes" xml:space="preserve">
          <source>Ownerless windows with no icon specified use platform-default icon. The icon of an owned window may be inherited from the owner unless explicitly overridden. Setting the icon to &lt;code&gt;null&lt;/code&gt; or empty list restores the default behavior.</source>
          <target state="translated">아이콘이 지정되지 않은 소유자가없는 창은 플랫폼 기본 아이콘을 사용합니다. 소유 한 창의 아이콘은 명시 적으로 재정의하지 않는 한 소유자로부터 상속 될 수 있습니다. 아이콘을 &lt;code&gt;null&lt;/code&gt; 또는 빈 목록으로 설정하면 기본 동작이 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="511993d3c99719e38a6779073019dacd7178ddb9" translate="yes" xml:space="preserve">
          <source>P</source>
          <target state="translated">P</target>
        </trans-unit>
        <trans-unit id="23cb6b448bc49194e79aacabfdf09a23b5db9b66" translate="yes" xml:space="preserve">
          <source>PAC</source>
          <target state="translated">PAC</target>
        </trans-unit>
        <trans-unit id="6e778bd20eb20ec966352f3796d7c0931f2a1b52" translate="yes" xml:space="preserve">
          <source>PACKAGE</source>
          <target state="translated">PACKAGE</target>
        </trans-unit>
        <trans-unit id="aa2836d0bcd131f91c7b3d5717440cd3afd6c6a7" translate="yes" xml:space="preserve">
          <source>PADDING</source>
          <target state="translated">PADDING</target>
        </trans-unit>
        <trans-unit id="11040f27acfd510c43406934b63472a79da4c627" translate="yes" xml:space="preserve">
          <source>PADDING_BOTTOM</source>
          <target state="translated">PADDING_BOTTOM</target>
        </trans-unit>
        <trans-unit id="4551bb8b66df641b18093d714c431d4a0cc45401" translate="yes" xml:space="preserve">
          <source>PADDING_LEFT</source>
          <target state="translated">PADDING_LEFT</target>
        </trans-unit>
        <trans-unit id="974b2b714062351dc54527b3f8f771405b9de300" translate="yes" xml:space="preserve">
          <source>PADDING_RIGHT</source>
          <target state="translated">PADDING_RIGHT</target>
        </trans-unit>
        <trans-unit id="74db905d0eb8a09a42680df3c9eb24c4f07b325f" translate="yes" xml:space="preserve">
          <source>PADDING_TOP</source>
          <target state="translated">PADDING_TOP</target>
        </trans-unit>
        <trans-unit id="3f70d0afda96eef980e04b074d47ae8db91998be" translate="yes" xml:space="preserve">
          <source>PAD_16</source>
          <target state="translated">PAD_16</target>
        </trans-unit>
        <trans-unit id="fdb4455171e427f2a3a36a468a05fdd9ecc33b29" translate="yes" xml:space="preserve">
          <source>PAD_32</source>
          <target state="translated">PAD_32</target>
        </trans-unit>
        <trans-unit id="686dcd2d62f451933734dc71f701cf53a66dcee2" translate="yes" xml:space="preserve">
          <source>PAD_64</source>
          <target state="translated">PAD_64</target>
        </trans-unit>
        <trans-unit id="1a928f40c27d60c90e244adf2dbc7699e2b0ebf6" translate="yes" xml:space="preserve">
          <source>PAD_8</source>
          <target state="translated">PAD_8</target>
        </trans-unit>
        <trans-unit id="31513e229e715365340eee3e07b9f969747bd220" translate="yes" xml:space="preserve">
          <source>PAGEABLE</source>
          <target state="translated">PAGEABLE</target>
        </trans-unit>
        <trans-unit id="0c44a31f982a4dcfcd4eb7bd1f1af1a055f4f3fd" translate="yes" xml:space="preserve">
          <source>PAGE_AXIS</source>
          <target state="translated">PAGE_AXIS</target>
        </trans-unit>
        <trans-unit id="b8a92fc91803c03a453d0115d00045ed2ba2215d" translate="yes" xml:space="preserve">
          <source>PAGE_END</source>
          <target state="translated">PAGE_END</target>
        </trans-unit>
        <trans-unit id="da2c5d8fd88ca6cb6baf82680224d812f1151762" translate="yes" xml:space="preserve">
          <source>PAGE_EXISTS</source>
          <target state="translated">PAGE_EXISTS</target>
        </trans-unit>
        <trans-unit id="06f887a4d912ccbf0b5caa1be8748b2971807007" translate="yes" xml:space="preserve">
          <source>PAGE_EXISTS if the page is rendered successfully or NO_SUCH_PAGE if &lt;code&gt;pageIndex&lt;/code&gt; specifies a non-existent page.</source>
          <target state="translated">페이지가 성공적으로 렌더링되면 PAGE_EXISTS, &lt;code&gt;pageIndex&lt;/code&gt; 가 존재하지 않는 페이지를 지정하면 NO_SUCH_PAGE .</target>
        </trans-unit>
        <trans-unit id="4ae636c5b3d90b195e354cda9384acdff680528a" translate="yes" xml:space="preserve">
          <source>PAGE_RULE</source>
          <target state="translated">PAGE_RULE</target>
        </trans-unit>
        <trans-unit id="e360e8339351aaa61e2ad4f5dbce821ef41f756f" translate="yes" xml:space="preserve">
          <source>PAGE_START</source>
          <target state="translated">PAGE_START</target>
        </trans-unit>
        <trans-unit id="978b413ebb7a742e60adf6e58583f81c0c57cf95" translate="yes" xml:space="preserve">
          <source>PAGE_TAB</source>
          <target state="translated">PAGE_TAB</target>
        </trans-unit>
        <trans-unit id="c0a7ef84634aa15001240592f1a0966a2d39d3cb" translate="yes" xml:space="preserve">
          <source>PAGE_TAB_LIST</source>
          <target state="translated">PAGE_TAB_LIST</target>
        </trans-unit>
        <trans-unit id="58bbfd2a2e68230b824914252e017693a1045820" translate="yes" xml:space="preserve">
          <source>PAHAWH_HMONG</source>
          <target state="translated">PAHAWH_HMONG</target>
        </trans-unit>
        <trans-unit id="ed9d4036f6df03a7fd194c3464bf4ad3bdc6190c" translate="yes" xml:space="preserve">
          <source>PAINT</source>
          <target state="translated">PAINT</target>
        </trans-unit>
        <trans-unit id="883cdc9572366f8e333cbae710baabed2d4d3ce9" translate="yes" xml:space="preserve">
          <source>PAINT_EVENT_MASK</source>
          <target state="translated">PAINT_EVENT_MASK</target>
        </trans-unit>
        <trans-unit id="7f2a109fca8df77841491a2d76d4b518fabbefc7" translate="yes" xml:space="preserve">
          <source>PAINT_FIRST</source>
          <target state="translated">PAINT_FIRST</target>
        </trans-unit>
        <trans-unit id="85cc81a120485af2d9158e57ecafad7d55fc98d0" translate="yes" xml:space="preserve">
          <source>PAINT_LAST</source>
          <target state="translated">PAINT_LAST</target>
        </trans-unit>
        <trans-unit id="054a8b6a7588d54ba32a78f30faab1e4e72d30d1" translate="yes" xml:space="preserve">
          <source>PALETTE_LAYER</source>
          <target state="translated">PALETTE_LAYER</target>
        </trans-unit>
        <trans-unit id="f9762c09a62a6ad8faca2baf28d5a02fd82bead4" translate="yes" xml:space="preserve">
          <source>PALMYRENE</source>
          <target state="translated">PALMYRENE</target>
        </trans-unit>
        <trans-unit id="ad2967ed806828b38515a9e2a4c85de62a5aff63" translate="yes" xml:space="preserve">
          <source>PAN</source>
          <target state="translated">PAN</target>
        </trans-unit>
        <trans-unit id="f3b88c8ab11c3351b1a4444be8acb88060e61c73" translate="yes" xml:space="preserve">
          <source>PANEL</source>
          <target state="translated">PANEL</target>
        </trans-unit>
        <trans-unit id="8781cabf2605c75c274bfae64678bf87c1f9475f" translate="yes" xml:space="preserve">
          <source>PANEL_UI</source>
          <target state="translated">PANEL_UI</target>
        </trans-unit>
        <trans-unit id="e7dcc8925f96d741f7ea71545b30801d2d6f6968" translate="yes" xml:space="preserve">
          <source>PARAGRAPH</source>
          <target state="translated">PARAGRAPH</target>
        </trans-unit>
        <trans-unit id="c7a86015f3f4daeacc41d303c97f2340f4320e19" translate="yes" xml:space="preserve">
          <source>PARAGRAPH_SEPARATOR</source>
          <target state="translated">PARAGRAPH_SEPARATOR</target>
        </trans-unit>
        <trans-unit id="9ecb61ab183eddb8d15e9d3e617cb668532eb041" translate="yes" xml:space="preserve">
          <source>PARAM</source>
          <target state="translated">PARAM</target>
        </trans-unit>
        <trans-unit id="de5f73a4b96f4cc7be5d19285e418ce73e704cda" translate="yes" xml:space="preserve">
          <source>PARAMETER</source>
          <target state="translated">PARAMETER</target>
        </trans-unit>
        <trans-unit id="eab14f7b4627306d00029667daaccbde0bb00842" translate="yes" xml:space="preserve">
          <source>PARAMETERIZED_TYPE</source>
          <target state="translated">PARAMETERIZED_TYPE</target>
        </trans-unit>
        <trans-unit id="f2b8fa8881df27e1c904f99c1dea8efa14177f6f" translate="yes" xml:space="preserve">
          <source>PARAM_HOST_NAME</source>
          <target state="translated">PARAM_HOST_NAME</target>
        </trans-unit>
        <trans-unit id="587d85b6f7d44e0911f140894d4c4fc168b9ea4c" translate="yes" xml:space="preserve">
          <source>PARAM_LAUNCH</source>
          <target state="translated">PARAM_LAUNCH</target>
        </trans-unit>
        <trans-unit id="9d582816ab74205b920ba214c814bced0b6916c2" translate="yes" xml:space="preserve">
          <source>PARAM_REMOTE_AGENT</source>
          <target state="translated">PARAM_REMOTE_AGENT</target>
        </trans-unit>
        <trans-unit id="1c986acceb29e74996d06298756666b046de0848" translate="yes" xml:space="preserve">
          <source>PARAM_TIMEOUT</source>
          <target state="translated">PARAM_TIMEOUT</target>
        </trans-unit>
        <trans-unit id="6b7f4b229644e8d88ace9f005c1b9f71311e8dfc" translate="yes" xml:space="preserve">
          <source>PARA_INDENT_LEFT</source>
          <target state="translated">PARA_INDENT_LEFT</target>
        </trans-unit>
        <trans-unit id="bbc1059f1d6d8d50df85bb0bc6d14d7a6e464b81" translate="yes" xml:space="preserve">
          <source>PARA_INDENT_RIGHT</source>
          <target state="translated">PARA_INDENT_RIGHT</target>
        </trans-unit>
        <trans-unit id="3bec85f9f390e29f92bb1653c3223785666d2958" translate="yes" xml:space="preserve">
          <source>PARENTHESIZED</source>
          <target state="translated">PARENTHESIZED</target>
        </trans-unit>
        <trans-unit id="e920d8f7bda97c96f9505b7843eb8714e30e7bda" translate="yes" xml:space="preserve">
          <source>PARENT_CHANGED</source>
          <target state="translated">PARENT_CHANGED</target>
        </trans-unit>
        <trans-unit id="3da434b4d473a63a0b6cf17164eafd448006ae5f" translate="yes" xml:space="preserve">
          <source>PARENT_WINDOW_OF</source>
          <target state="translated">PARENT_WINDOW_OF</target>
        </trans-unit>
        <trans-unit id="4d0c3466e6f0084b769850eaa930f0de57d4f760" translate="yes" xml:space="preserve">
          <source>PARENT_WINDOW_OF_PROPERTY</source>
          <target state="translated">PARENT_WINDOW_OF_PROPERTY</target>
        </trans-unit>
        <trans-unit id="da04370db03e1f163c0a4defb521b34eb9178ab4" translate="yes" xml:space="preserve">
          <source>PARSE</source>
          <target state="translated">PARSE</target>
        </trans-unit>
        <trans-unit id="ea14525693502800f888718bb23e5b02e46422a9" translate="yes" xml:space="preserve">
          <source>PARSE_ERR</source>
          <target state="translated">PARSE_ERR</target>
        </trans-unit>
        <trans-unit id="527fef175b4613e2f0393cc64541663d9c48b51c" translate="yes" xml:space="preserve">
          <source>PART1_ALPHA2</source>
          <target state="translated">PART1_ALPHA2</target>
        </trans-unit>
        <trans-unit id="0488f1d49e6220f69e149d2617948814cbe5570b" translate="yes" xml:space="preserve">
          <source>PART1_ALPHA2 is used to represent the ISO3166-1 alpha-2 two letter country codes.</source>
          <target state="translated">PART1_ALPHA2는 ISO3166-1 alpha-2 두 글자 국가 코드를 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="88f62c622f4d3d315e76768a1efb5ac15a56ea3e" translate="yes" xml:space="preserve">
          <source>PART1_ALPHA3</source>
          <target state="translated">PART1_ALPHA3</target>
        </trans-unit>
        <trans-unit id="7ea628149ebcd4fca0067b257097522fedb61f8f" translate="yes" xml:space="preserve">
          <source>PART1_ALPHA3 is used to represent the ISO3166-1 alpha-3 three letter country codes.</source>
          <target state="translated">PART1_ALPHA3은 ISO3166-1 alpha-3 세 글자 국가 코드를 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d259bb7707b119a9c159c3ed98476a447ac05478" translate="yes" xml:space="preserve">
          <source>PART3</source>
          <target state="translated">PART3</target>
        </trans-unit>
        <trans-unit id="dd7cfa301bbc292243d65de17c86c7594b68dd8a" translate="yes" xml:space="preserve">
          <source>PART3 is used to represent the ISO3166-3 four letter country codes.</source>
          <target state="translated">PART3은 ISO3166-3 4 자리 국가 코드를 나타내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="bd564db5d5cc358eb0e3523d3e03041739f230d5" translate="yes" xml:space="preserve">
          <source>PASS</source>
          <target state="translated">PASS</target>
        </trans-unit>
        <trans-unit id="9e64e02e1d5bc6d376d101de97b010006d30fae0" translate="yes" xml:space="preserve">
          <source>PASSWORD_FIELD</source>
          <target state="translated">PASSWORD_FIELD</target>
        </trans-unit>
        <trans-unit id="36c071d267cdcac210e63cd67d098b1b1d5dbace" translate="yes" xml:space="preserve">
          <source>PASSWORD_TEXT</source>
          <target state="translated">PASSWORD_TEXT</target>
        </trans-unit>
        <trans-unit id="2ee973d3870bd5431e47ade59cfdf321d3891b18" translate="yes" xml:space="preserve">
          <source>PASS_FILE_PFX</source>
          <target state="translated">PASS_FILE_PFX</target>
        </trans-unit>
        <trans-unit id="9f056033c23ff605e829484d8193a28de508e503" translate="yes" xml:space="preserve">
          <source>PATCH_MODULE_PATH</source>
          <target state="translated">PATCH_MODULE_PATH</target>
        </trans-unit>
        <trans-unit id="8d33487d62950df9cd9c894083615de0f2ff4f56" translate="yes" xml:space="preserve">
          <source>PATH_TOO_LONG</source>
          <target state="translated">PATH_TOO_LONG</target>
        </trans-unit>
        <trans-unit id="9935dfb5a4d397598918b95cafea8828afe115be" translate="yes" xml:space="preserve">
          <source>PAUSE</source>
          <target state="translated">PAUSE</target>
        </trans-unit>
        <trans-unit id="cd5d07c90b5c8a0724fc18d8b9c909271052f2b5" translate="yes" xml:space="preserve">
          <source>PAUSED</source>
          <target state="translated">PAUSED</target>
        </trans-unit>
        <trans-unit id="58c786a7d027963f6be1dfe6b135d16f51eb2697" translate="yes" xml:space="preserve">
          <source>PAU_CIN_HAU</source>
          <target state="translated">PAU_CIN_HAU</target>
        </trans-unit>
        <trans-unit id="b3b061b594b74341b9234c46a278213ca974bdea" translate="yes" xml:space="preserve">
          <source>PBE</source>
          <target state="translated">PBE</target>
        </trans-unit>
        <trans-unit id="02d6507bb96747c5a2b54d346799032b6a4b0b77" translate="yes" xml:space="preserve">
          <source>PBEKey</source>
          <target state="translated">PBEKey</target>
        </trans-unit>
        <trans-unit id="ede77308d3c14c018414f679ada8a50032021a51" translate="yes" xml:space="preserve">
          <source>PBEKey.getIterationCount()</source>
          <target state="translated">PBEKey.getIterationCount()</target>
        </trans-unit>
        <trans-unit id="28e56f2f7a86b07a12894aa6b88b43d24829e332" translate="yes" xml:space="preserve">
          <source>PBEKey.getPassword()</source>
          <target state="translated">PBEKey.getPassword()</target>
        </trans-unit>
        <trans-unit id="f30b4e4a01532640748fd8cc64b4976fa9268929" translate="yes" xml:space="preserve">
          <source>PBEKey.getSalt()</source>
          <target state="translated">PBEKey.getSalt()</target>
        </trans-unit>
        <trans-unit id="49dda63a225bf115a79f1e7bed6a94e47a811a2d" translate="yes" xml:space="preserve">
          <source>PBEKeySpec</source>
          <target state="translated">PBEKeySpec</target>
        </trans-unit>
        <trans-unit id="3e534045f5e0d8356aca539752b8de9aa578ef1a" translate="yes" xml:space="preserve">
          <source>PBEKeySpec.clearPassword()</source>
          <target state="translated">PBEKeySpec.clearPassword()</target>
        </trans-unit>
        <trans-unit id="e7278ec4b6717ba80845db34a554a15c78cb99fb" translate="yes" xml:space="preserve">
          <source>PBEKeySpec.getIterationCount()</source>
          <target state="translated">PBEKeySpec.getIterationCount()</target>
        </trans-unit>
        <trans-unit id="34b745e05cc36e60770ffeb06ed072a1773db798" translate="yes" xml:space="preserve">
          <source>PBEKeySpec.getKeyLength()</source>
          <target state="translated">PBEKeySpec.getKeyLength()</target>
        </trans-unit>
        <trans-unit id="88fbd2d55c900d7aa11e053c534ea7bea280e260" translate="yes" xml:space="preserve">
          <source>PBEKeySpec.getPassword()</source>
          <target state="translated">PBEKeySpec.getPassword()</target>
        </trans-unit>
        <trans-unit id="e3579f401d811947bea40ddb98f8346da36e57f9" translate="yes" xml:space="preserve">
          <source>PBEKeySpec.getSalt()</source>
          <target state="translated">PBEKeySpec.getSalt()</target>
        </trans-unit>
        <trans-unit id="85a26538924ca095bd7ad3b3d8de3b5c1609d59e" translate="yes" xml:space="preserve">
          <source>PBEParameterSpec</source>
          <target state="translated">PBEParameterSpec</target>
        </trans-unit>
        <trans-unit id="ef374abbf0bc3c9007b3689b6e93a4e31004d5cd" translate="yes" xml:space="preserve">
          <source>PBEParameterSpec.getIterationCount()</source>
          <target state="translated">PBEParameterSpec.getIterationCount()</target>
        </trans-unit>
        <trans-unit id="f644d18ad8012a4f4ed3dbd736b06d84642be481" translate="yes" xml:space="preserve">
          <source>PBEParameterSpec.getParameterSpec()</source>
          <target state="translated">PBEParameterSpec.getParameterSpec()</target>
        </trans-unit>
        <trans-unit id="e6bebc42da90e950715fdf0716f1e76d2c0e3e16" translate="yes" xml:space="preserve">
          <source>PBEParameterSpec.getSalt()</source>
          <target state="translated">PBEParameterSpec.getSalt()</target>
        </trans-unit>
        <trans-unit id="0c1d35e132037e999d0e3ae53d55fbfa8770aacc" translate="yes" xml:space="preserve">
          <source>PCL</source>
          <target state="translated">PCL</target>
        </trans-unit>
        <trans-unit id="baee365e18192cd869def1341b88e0dfa3188ce4" translate="yes" xml:space="preserve">
          <source>PCL 5 data.</source>
          <target state="translated">PCL 5 데이터.</target>
        </trans-unit>
        <trans-unit id="1427040d049f8170da336b101c512415d9d7ebf9" translate="yes" xml:space="preserve">
          <source>PCL 5 data. Table tag &quot;PCLT&quot; in the Open Type Specification.</source>
          <target state="translated">PCL 5 데이터. Open Type 사양의 테이블 태그 「PCLT」입니다.</target>
        </trans-unit>
        <trans-unit id="17000066a71d350c835a2f1b1fcfd79b28581370" translate="yes" xml:space="preserve">
          <source>PCM_FLOAT</source>
          <target state="translated">PCM_FLOAT</target>
        </trans-unit>
        <trans-unit id="7854445d006802d43200398045feb0734f13a280" translate="yes" xml:space="preserve">
          <source>PCM_SIGNED</source>
          <target state="translated">PCM_SIGNED</target>
        </trans-unit>
        <trans-unit id="9d3b31b5d3c024684888743f65ea2b3132dcead9" translate="yes" xml:space="preserve">
          <source>PCM_UNSIGNED</source>
          <target state="translated">PCM_UNSIGNED</target>
        </trans-unit>
        <trans-unit id="d613d88cb2d86f484f6f82d44ac1fc60722abe20" translate="yes" xml:space="preserve">
          <source>PDF</source>
          <target state="translated">PDF</target>
        </trans-unit>
        <trans-unit id="72cfa8f9685c4668bddfce1bf1cd949d0178447c" translate="yes" xml:space="preserve">
          <source>PDLOverrideSupported</source>
          <target state="translated">PDLOverrideSupported</target>
        </trans-unit>
        <trans-unit id="37e3240a49912b3a1ff73a08835ba6c4c73d34f2" translate="yes" xml:space="preserve">
          <source>PDLOverrideSupported.getCategory()</source>
          <target state="translated">PDLOverrideSupported.getCategory()</target>
        </trans-unit>
        <trans-unit id="d12040b1be9bed0e867475ba4dc95e109d28dc24" translate="yes" xml:space="preserve">
          <source>PDLOverrideSupported.getEnumValueTable()</source>
          <target state="translated">PDLOverrideSupported.getEnumValueTable()</target>
        </trans-unit>
        <trans-unit id="5fc3aab695f972022966592f76199f378982f4d9" translate="yes" xml:space="preserve">
          <source>PDLOverrideSupported.getName()</source>
          <target state="translated">PDLOverrideSupported.getName()</target>
        </trans-unit>
        <trans-unit id="b248dd2515f5b97019b84970d888da73684df5e2" translate="yes" xml:space="preserve">
          <source>PDLOverrideSupported.getStringTable()</source>
          <target state="translated">PDLOverrideSupported.getStringTable()</target>
        </trans-unit>
        <trans-unit id="0a7b38b716933a39c0bca66f229cd6d52f0c1271" translate="yes" xml:space="preserve">
          <source>PENDING</source>
          <target state="translated">PENDING</target>
        </trans-unit>
        <trans-unit id="862c9aab7cfc78d64b78972c8c0c014bc9c10185" translate="yes" xml:space="preserve">
          <source>PENDING_HELD</source>
          <target state="translated">PENDING_HELD</target>
        </trans-unit>
        <trans-unit id="4e5b1c8d8d431f9de611287721e9eecb404659a5" translate="yes" xml:space="preserve">
          <source>PERCENT</source>
          <target state="translated">PERCENT</target>
        </trans-unit>
        <trans-unit id="f2eb659f64c58302774395ca55e06a3262c52cb6" translate="yes" xml:space="preserve">
          <source>PERMILLE</source>
          <target state="translated">PERMILLE</target>
        </trans-unit>
        <trans-unit id="bc03a561043ded7554d5ebbd48aafd79c0089f4f" translate="yes" xml:space="preserve">
          <source>PERPIXEL_TRANSLUCENT</source>
          <target state="translated">PERPIXEL_TRANSLUCENT</target>
        </trans-unit>
        <trans-unit id="9c6ed4e1aacb235ca805bbc14fdc7498f4c57810" translate="yes" xml:space="preserve">
          <source>PERPIXEL_TRANSPARENT</source>
          <target state="translated">PERPIXEL_TRANSPARENT</target>
        </trans-unit>
        <trans-unit id="34512fba1d256a361565532a3535096429399084" translate="yes" xml:space="preserve">
          <source>PERSIST</source>
          <target state="translated">PERSIST</target>
        </trans-unit>
        <trans-unit id="3c40f66417da246668f0987b60ef03da26d2920d" translate="yes" xml:space="preserve">
          <source>PERSONAL</source>
          <target state="translated">PERSONAL</target>
        </trans-unit>
        <trans-unit id="4925eb6beb0d5376d4a5f82771055a5cbd2694f8" translate="yes" xml:space="preserve">
          <source>PERSONAL_ENVELOPE</source>
          <target state="translated">PERSONAL_ENVELOPE</target>
        </trans-unit>
        <trans-unit id="f630561c29265f0590760ff8854e812da7f906b4" translate="yes" xml:space="preserve">
          <source>PGDN</source>
          <target state="translated">PGDN</target>
        </trans-unit>
        <trans-unit id="33c7965e0bc5e251250d22c6722ae649c4686d9a" translate="yes" xml:space="preserve">
          <source>PGPData</source>
          <target state="translated">PGPData</target>
        </trans-unit>
        <trans-unit id="b9b846607c5e9665b1885f96dda77dd501588dc7" translate="yes" xml:space="preserve">
          <source>PGUP</source>
          <target state="translated">PGUP</target>
        </trans-unit>
        <trans-unit id="a25b31f13eaa7d56bc00219bcf64ee929441d619" translate="yes" xml:space="preserve">
          <source>PHAGS_PA</source>
          <target state="translated">PHAGS_PA</target>
        </trans-unit>
        <trans-unit id="c09b7c60c9610b38c92595b022f5b394c9f7968c" translate="yes" xml:space="preserve">
          <source>PHAISTOS_DISC</source>
          <target state="translated">PHAISTOS_DISC</target>
        </trans-unit>
        <trans-unit id="7e84f0b51bc5a474d3cb0384e43389b455f4327d" translate="yes" xml:space="preserve">
          <source>PHOENICIAN</source>
          <target state="translated">PHOENICIAN</target>
        </trans-unit>
        <trans-unit id="b10ff7df6f6791d68ba1e4f0ef6368e0e1a5b150" translate="yes" xml:space="preserve">
          <source>PHONETIC_EXTENSIONS</source>
          <target state="translated">PHONETIC_EXTENSIONS</target>
        </trans-unit>
        <trans-unit id="dccbd834d9469b60f8fe32efff9e797aa2a256bc" translate="yes" xml:space="preserve">
          <source>PHONETIC_EXTENSIONS_SUPPLEMENT</source>
          <target state="translated">PHONETIC_EXTENSIONS_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="41754ec3a14f277d967c1ce0190f2d5f60c52c3d" translate="yes" xml:space="preserve">
          <source>PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZERO</source>
          <target state="translated">PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZERO</target>
        </trans-unit>
        <trans-unit id="3b21d04194f8905c1c5bcd303f45b1638849839c" translate="yes" xml:space="preserve">
          <source>PHOTOMETRIC_INTERPRETATION_CIELAB</source>
          <target state="translated">PHOTOMETRIC_INTERPRETATION_CIELAB</target>
        </trans-unit>
        <trans-unit id="8f4ee4e89c14f0e3d85f6e2ddce7dd58e9bde848" translate="yes" xml:space="preserve">
          <source>PHOTOMETRIC_INTERPRETATION_CMYK</source>
          <target state="translated">PHOTOMETRIC_INTERPRETATION_CMYK</target>
        </trans-unit>
        <trans-unit id="d1fb443c39a8781c0e38ed17b7851de8cb809bdd" translate="yes" xml:space="preserve">
          <source>PHOTOMETRIC_INTERPRETATION_ICCLAB</source>
          <target state="translated">PHOTOMETRIC_INTERPRETATION_ICCLAB</target>
        </trans-unit>
        <trans-unit id="0d786e71d60c0eb8de50944a3a41d9af8a8512d2" translate="yes" xml:space="preserve">
          <source>PHOTOMETRIC_INTERPRETATION_PALETTE_COLOR</source>
          <target state="translated">PHOTOMETRIC_INTERPRETATION_PALETTE_COLOR</target>
        </trans-unit>
        <trans-unit id="e3c4825b80d5d7c537059486ee5257f1e72fcd6d" translate="yes" xml:space="preserve">
          <source>PHOTOMETRIC_INTERPRETATION_RGB</source>
          <target state="translated">PHOTOMETRIC_INTERPRETATION_RGB</target>
        </trans-unit>
        <trans-unit id="1ec7f7c0c73c8f80bd2a58ea5efb91e4c5de98c1" translate="yes" xml:space="preserve">
          <source>PHOTOMETRIC_INTERPRETATION_TRANSPARENCY_MASK</source>
          <target state="translated">PHOTOMETRIC_INTERPRETATION_TRANSPARENCY_MASK</target>
        </trans-unit>
        <trans-unit id="8feca19b2a4e81b68795f2cf068a5993dffdfc12" translate="yes" xml:space="preserve">
          <source>PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZERO</source>
          <target state="translated">PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZERO</target>
        </trans-unit>
        <trans-unit id="f963c2ca571dac494f0cc25ea23f28edd808b5b4" translate="yes" xml:space="preserve">
          <source>PHOTOMETRIC_INTERPRETATION_Y_CB_CR</source>
          <target state="translated">PHOTOMETRIC_INTERPRETATION_Y_CB_CR</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
