<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="48bcfce35d2ce4a6f122be92a7e22d519efb2ea7" translate="yes" xml:space="preserve">
          <source>BaseStream.isParallel()</source>
          <target state="translated">BaseStream.isParallel()</target>
        </trans-unit>
        <trans-unit id="0cf0fa77e63347443e48c57c03711407adcdf462" translate="yes" xml:space="preserve">
          <source>BaseStream.iterator()</source>
          <target state="translated">BaseStream.iterator()</target>
        </trans-unit>
        <trans-unit id="fa67257c20306e7633cf559ef235f98460df83a0" translate="yes" xml:space="preserve">
          <source>BaseStream.onClose()</source>
          <target state="translated">BaseStream.onClose()</target>
        </trans-unit>
        <trans-unit id="51f6d7343386125b659c1f5bebd3d195268610cb" translate="yes" xml:space="preserve">
          <source>BaseStream.parallel()</source>
          <target state="translated">BaseStream.parallel()</target>
        </trans-unit>
        <trans-unit id="cf17deed6a070a361d727b37656f72f2eecb164a" translate="yes" xml:space="preserve">
          <source>BaseStream.sequential()</source>
          <target state="translated">BaseStream.sequential()</target>
        </trans-unit>
        <trans-unit id="28793e7901d0014124f2d4e68f113de813abe083" translate="yes" xml:space="preserve">
          <source>BaseStream.spliterator()</source>
          <target state="translated">BaseStream.spliterator()</target>
        </trans-unit>
        <trans-unit id="1114de640ae1f4babada0d3462c9098825e66a5a" translate="yes" xml:space="preserve">
          <source>BaseStream.unordered()</source>
          <target state="translated">BaseStream.unordered()</target>
        </trans-unit>
        <trans-unit id="e6ab7982fa5d5e8fceb52c9b3af93556aeacbae7" translate="yes" xml:space="preserve">
          <source>Baseline</source>
          <target state="translated">Baseline</target>
        </trans-unit>
        <trans-unit id="9ede3dbb35d78d3247f32d6f1981f1ad02c672dd" translate="yes" xml:space="preserve">
          <source>Baseline Layout</source>
          <target state="translated">기준 레이아웃</target>
        </trans-unit>
        <trans-unit id="dfea3eb66f990b398a61245e676b7f0057823a87" translate="yes" xml:space="preserve">
          <source>Baseline Relative Values</source>
          <target state="translated">기준 상대 값</target>
        </trans-unit>
        <trans-unit id="6aa6ce21736e4bbd97f053193bad39e35465097f" translate="yes" xml:space="preserve">
          <source>Baseline alignment is only useful when used along the vertical axis. A &lt;code&gt;ParallelGroup&lt;/code&gt; created with a baseline alignment along the horizontal axis is treated as &lt;code&gt;LEADING&lt;/code&gt;.</source>
          <target state="translated">기준선 정렬은 수직 축을 따라 사용할 때만 유용합니다. &lt;code&gt;ParallelGroup&lt;/code&gt; 는 가로축 기준 정렬로 작성된 같이 취급 &lt;code&gt;LEADING&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7ba91d1a41219c865b84e479af666628006d9ef1" translate="yes" xml:space="preserve">
          <source>Baseline data.</source>
          <target state="translated">기준 데이터.</target>
        </trans-unit>
        <trans-unit id="279caed55a55763d696989268ec51c10c599ef5c" translate="yes" xml:space="preserve">
          <source>Baseline data. Table tag &quot;BASE&quot; in the Open Type Specification.</source>
          <target state="translated">기준 데이터. Open Type 사양의 테이블 태그 「BASE」입니다.</target>
        </trans-unit>
        <trans-unit id="bf3c074e0bc2e39366305dc86f03a5199a5e2b00" translate="yes" xml:space="preserve">
          <source>Baseline table.</source>
          <target state="translated">베이스 라인 테이블.</target>
        </trans-unit>
        <trans-unit id="5834870f31fb110b699f7e5bc79b1bc60ef1e97f" translate="yes" xml:space="preserve">
          <source>Baseline table. Table tag &quot;bsln&quot; in the Open Type Specification.</source>
          <target state="translated">베이스 라인 테이블. Open Type 사양의 테이블 태그 &quot;bsln&quot;입니다.</target>
        </trans-unit>
        <trans-unit id="82786c98389e1ad450b27de35325b02f0c804b8f" translate="yes" xml:space="preserve">
          <source>BaselineTIFFTagSet</source>
          <target state="translated">BaselineTIFFTagSet</target>
        </trans-unit>
        <trans-unit id="cc7bc650ee2edc878d74d035e5b9fae2fbb19f93" translate="yes" xml:space="preserve">
          <source>Basic ISO date</source>
          <target state="translated">기본 ISO 날짜</target>
        </trans-unit>
        <trans-unit id="3e3e87f143e352a5522d926552882f8f75812182" translate="yes" xml:space="preserve">
          <source>Basic L&amp;amp;F for a desktop.</source>
          <target state="translated">데스크탑 용 기본 L &amp;amp; F.</target>
        </trans-unit>
        <trans-unit id="f29abd3fa0bb92920f2bf8cf549ec7e2b8ee9121" translate="yes" xml:space="preserve">
          <source>Basic L&amp;amp;F for a minimized window on a desktop.</source>
          <target state="translated">데스크탑에서 최소화 된 창에 대한 기본 L &amp;amp; F.</target>
        </trans-unit>
        <trans-unit id="d8e20888e159275a0629de3c912e191658144a78" translate="yes" xml:space="preserve">
          <source>Basic L&amp;amp;F implementation of a FileChooser.</source>
          <target state="translated">FileChooser의 기본 L &amp;amp; F 구현입니다.</target>
        </trans-unit>
        <trans-unit id="8b6727734a3b3be264c9febcfd300515e4b40fc6" translate="yes" xml:space="preserve">
          <source>Basic Multilingual Plane (BMP)</source>
          <target state="translated">기본 다국어 비행기 (BMP)</target>
        </trans-unit>
        <trans-unit id="5cd453c8e45b94ea5a61a6fd94c4ee5638de9ff8" translate="yes" xml:space="preserve">
          <source>Basic UI implementation for JComboBox.</source>
          <target state="translated">JComboBox의 기본 UI 구현입니다.</target>
        </trans-unit>
        <trans-unit id="52671e6f7529cd9efafc4195e6aa9ed24267c5c5" translate="yes" xml:space="preserve">
          <source>Basic attributes associated with a file in a file system.</source>
          <target state="translated">파일 시스템의 파일과 연관된 기본 속성</target>
        </trans-unit>
        <trans-unit id="6fe3fda8f983dab53ccb1aa2f7a19721bae796eb" translate="yes" xml:space="preserve">
          <source>Basic constructor.</source>
          <target state="translated">기본 생성자.</target>
        </trans-unit>
        <trans-unit id="dbd8e1f72224e86bef38baf6d103a3432b4769ca" translate="yes" xml:space="preserve">
          <source>Basic file attributes are attributes that are common to many file systems and consist of mandatory and optional file attributes as defined by this interface.</source>
          <target state="translated">기본 파일 속성은 많은 파일 시스템에 공통적 인 속성이며이 인터페이스에 의해 정의 된 필수 및 선택적 파일 속성으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="fc5e2cce2f92eeb8911500f6736597d25c9b7451" translate="yes" xml:space="preserve">
          <source>Basic implementation -- produces a standard &lt;code&gt;Connection&lt;/code&gt; object</source>
          <target state="translated">기본 구현-표준 &lt;code&gt;Connection&lt;/code&gt; 객체 생성</target>
        </trans-unit>
        <trans-unit id="9d298facd7e3872545e6ee5e9658ecfe549b520c" translate="yes" xml:space="preserve">
          <source>Basic implementation of RootPaneUI, there is one shared between all JRootPane instances.</source>
          <target state="translated">RootPaneUI의 기본 구현으로, 모든 JRootPane 인스턴스간에 하나가 공유됩니다.</target>
        </trans-unit>
        <trans-unit id="9dc7fc6d8e01e9eecb9ff810473ad4b3812d1d6d" translate="yes" xml:space="preserve">
          <source>Basic implementation of a file list.</source>
          <target state="translated">파일 목록의 기본 구현.</target>
        </trans-unit>
        <trans-unit id="80a2f59a8dd77d3972fe5687a48240051100a226" translate="yes" xml:space="preserve">
          <source>Basic interface for SAX (Simple API for XML) parsers.</source>
          <target state="translated">SAX (Simple API for XML) 파서 용 기본 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="141c6f35f2efa056d7197e0553057c200689108f" translate="yes" xml:space="preserve">
          <source>Basic interface for SAX error handlers.</source>
          <target state="translated">SAX 오류 처리기를위한 기본 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="4fcde791507268f31955c67644fe4596a09d625f" translate="yes" xml:space="preserve">
          <source>Basic interface for resolving entities.</source>
          <target state="translated">엔티티 해결을위한 기본 인터페이스.</target>
        </trans-unit>
        <trans-unit id="2006a6ec23aa1f0a6794493e34707d71cb3ab6ba" translate="yes" xml:space="preserve">
          <source>Basic internal frame listener.</source>
          <target state="translated">기본 내부 프레임 리스너.</target>
        </trans-unit>
        <trans-unit id="265094f0a11b21110ee3d36557c997bfb5320e27" translate="yes" xml:space="preserve">
          <source>Basic thread blocking primitives for creating locks and other synchronization classes.</source>
          <target state="translated">잠금 및 기타 동기화 클래스를 작성하기위한 기본 스레드 차단 기본 요소.</target>
        </trans-unit>
        <trans-unit id="9b67ce33915a1a8645723d436e50846d9b6530cc" translate="yes" xml:space="preserve">
          <source>BasicArrowButton</source>
          <target state="translated">BasicArrowButton</target>
        </trans-unit>
        <trans-unit id="d19c4356aab17d797cac0b818f2f9895befb8aa8" translate="yes" xml:space="preserve">
          <source>BasicAttribute</source>
          <target state="translated">BasicAttribute</target>
        </trans-unit>
        <trans-unit id="03015b370101d5f9717f7c301c6cf24c55943951" translate="yes" xml:space="preserve">
          <source>BasicAttribute.add()</source>
          <target state="translated">BasicAttribute.add()</target>
        </trans-unit>
        <trans-unit id="f950a96ed6d47eef985a50163169a3c87e151697" translate="yes" xml:space="preserve">
          <source>BasicAttribute.clear()</source>
          <target state="translated">BasicAttribute.clear()</target>
        </trans-unit>
        <trans-unit id="a754d3cb3a72947422cdef6984e56367cbe6527e" translate="yes" xml:space="preserve">
          <source>BasicAttribute.clone()</source>
          <target state="translated">BasicAttribute.clone()</target>
        </trans-unit>
        <trans-unit id="ef986171f865cc328c73bb6624b5b5d697640d8f" translate="yes" xml:space="preserve">
          <source>BasicAttribute.contains()</source>
          <target state="translated">BasicAttribute.contains()</target>
        </trans-unit>
        <trans-unit id="3595adf5d8ae7763456e6e42fb75c8abad4d3ba5" translate="yes" xml:space="preserve">
          <source>BasicAttribute.equals()</source>
          <target state="translated">BasicAttribute.equals()</target>
        </trans-unit>
        <trans-unit id="e1775811780b0983573294bc7ac63366719ca51a" translate="yes" xml:space="preserve">
          <source>BasicAttribute.get()</source>
          <target state="translated">BasicAttribute.get()</target>
        </trans-unit>
        <trans-unit id="b638e6d74adaada5103ccd8b8a59224cd3b8bc85" translate="yes" xml:space="preserve">
          <source>BasicAttribute.getAll()</source>
          <target state="translated">BasicAttribute.getAll()</target>
        </trans-unit>
        <trans-unit id="24b6dce03cc3147b21c377209584d4d85d784df7" translate="yes" xml:space="preserve">
          <source>BasicAttribute.getAttributeDefinition()</source>
          <target state="translated">BasicAttribute.getAttributeDefinition()</target>
        </trans-unit>
        <trans-unit id="9d4e9ef46e3eab6c3ebe82a3bd88286a75421325" translate="yes" xml:space="preserve">
          <source>BasicAttribute.getAttributeSyntaxDefinition()</source>
          <target state="translated">BasicAttribute.getAttributeSyntaxDefinition()</target>
        </trans-unit>
        <trans-unit id="0171e69812f531ef763cda5b9ecd66e201769465" translate="yes" xml:space="preserve">
          <source>BasicAttribute.getID()</source>
          <target state="translated">BasicAttribute.getID()</target>
        </trans-unit>
        <trans-unit id="60ac2aacf3ea5167ba77d29959d3215dab64623b" translate="yes" xml:space="preserve">
          <source>BasicAttribute.hashCode()</source>
          <target state="translated">BasicAttribute.hashCode()</target>
        </trans-unit>
        <trans-unit id="116a906d6ee66140685f01fc8ab5559748f1d18b" translate="yes" xml:space="preserve">
          <source>BasicAttribute.isOrdered()</source>
          <target state="translated">BasicAttribute.isOrdered()</target>
        </trans-unit>
        <trans-unit id="213c6106a0e82d4f695ff378413911a91f1e1d0c" translate="yes" xml:space="preserve">
          <source>BasicAttribute.remove()</source>
          <target state="translated">BasicAttribute.remove()</target>
        </trans-unit>
        <trans-unit id="7bb1ba4a96f527af86172ded93ec0d4298a541a2" translate="yes" xml:space="preserve">
          <source>BasicAttribute.set()</source>
          <target state="translated">BasicAttribute.set()</target>
        </trans-unit>
        <trans-unit id="abd4c48cf56c4e8e0e89094a5f28ed4f74989481" translate="yes" xml:space="preserve">
          <source>BasicAttribute.size()</source>
          <target state="translated">BasicAttribute.size()</target>
        </trans-unit>
        <trans-unit id="bf963e0898975ddd4edc6b07e90db0770a20de7b" translate="yes" xml:space="preserve">
          <source>BasicAttribute.toString()</source>
          <target state="translated">BasicAttribute.toString()</target>
        </trans-unit>
        <trans-unit id="b72da12879287b6b4d051746ab90551b436c5c99" translate="yes" xml:space="preserve">
          <source>BasicAttributes</source>
          <target state="translated">BasicAttributes</target>
        </trans-unit>
        <trans-unit id="483f2675a5c681defe70d8b974897d24f5630202" translate="yes" xml:space="preserve">
          <source>BasicAttributes is either case-sensitive or case-insensitive (case-ignore). This property is determined at the time the BasicAttributes constructor is called. In a case-insensitive BasicAttributes, the case of its attribute identifiers is ignored when searching for an attribute, or adding attributes. In a case-sensitive BasicAttributes, the case is significant.</source>
          <target state="translated">BasicAttributes는 대소 문자를 구분하거나 대소 문자를 구분하지 않습니다 (대소 문자 무시). 이 속성은 BasicAttributes 생성자가 호출 될 때 결정됩니다. 대소 문자를 구분하지 않는 BasicAttributes에서 속성을 검색하거나 속성을 추가 할 때 속성 식별자의 대소 문자는 무시됩니다. 대소 문자 구분 BasicAttributes에서 대소 문자가 중요합니다.</target>
        </trans-unit>
        <trans-unit id="1eb4ecedc9ed668ea2fb58122eec0ed6f6e4983d" translate="yes" xml:space="preserve">
          <source>BasicAttributes.clone()</source>
          <target state="translated">BasicAttributes.clone()</target>
        </trans-unit>
        <trans-unit id="933ac46ddab5a4ec64537a4531f1f0587441604d" translate="yes" xml:space="preserve">
          <source>BasicAttributes.equals()</source>
          <target state="translated">BasicAttributes.equals()</target>
        </trans-unit>
        <trans-unit id="d66370566aa14cc5edb3c9d57fb5544c8cf99a4f" translate="yes" xml:space="preserve">
          <source>BasicAttributes.get()</source>
          <target state="translated">BasicAttributes.get()</target>
        </trans-unit>
        <trans-unit id="49d53aa251e46451b35abee66351d3764bf62604" translate="yes" xml:space="preserve">
          <source>BasicAttributes.getAll()</source>
          <target state="translated">BasicAttributes.getAll()</target>
        </trans-unit>
        <trans-unit id="0f54605f33034c38a2cf0daf8fd7a39e4497f263" translate="yes" xml:space="preserve">
          <source>BasicAttributes.getIDs()</source>
          <target state="translated">BasicAttributes.getIDs()</target>
        </trans-unit>
        <trans-unit id="8ae9f2438df737b60753763f65aec0a266f0fac4" translate="yes" xml:space="preserve">
          <source>BasicAttributes.hashCode()</source>
          <target state="translated">BasicAttributes.hashCode()</target>
        </trans-unit>
        <trans-unit id="d4aa64c921e33871c33fd0dbb072c70ac2230f77" translate="yes" xml:space="preserve">
          <source>BasicAttributes.isCaseIgnored()</source>
          <target state="translated">BasicAttributes.isCaseIgnored()</target>
        </trans-unit>
        <trans-unit id="1447a1c9040353537aed24b64b477d9546d2c820" translate="yes" xml:space="preserve">
          <source>BasicAttributes.put()</source>
          <target state="translated">BasicAttributes.put()</target>
        </trans-unit>
        <trans-unit id="656bca90bf0c9b620083a9f0f5038ddf5213a758" translate="yes" xml:space="preserve">
          <source>BasicAttributes.remove()</source>
          <target state="translated">BasicAttributes.remove()</target>
        </trans-unit>
        <trans-unit id="00533b68257040efff729b0fb3a1d81ad6ed0262" translate="yes" xml:space="preserve">
          <source>BasicAttributes.size()</source>
          <target state="translated">BasicAttributes.size()</target>
        </trans-unit>
        <trans-unit id="5ea4fa7044b5ea2dba2e499e94b593cd4a733519" translate="yes" xml:space="preserve">
          <source>BasicAttributes.toString()</source>
          <target state="translated">BasicAttributes.toString()</target>
        </trans-unit>
        <trans-unit id="21c9d353a779aca446b0dd3e34fd5d6e4de3a3eb" translate="yes" xml:space="preserve">
          <source>BasicBorders</source>
          <target state="translated">BasicBorders</target>
        </trans-unit>
        <trans-unit id="646cb639b203feb2d476f3ba6f1a651f1c526bdb" translate="yes" xml:space="preserve">
          <source>BasicBorders.ButtonBorder</source>
          <target state="translated">BasicBorders.ButtonBorder</target>
        </trans-unit>
        <trans-unit id="259770efbc0012cb78f17894aa1796c1091a62ea" translate="yes" xml:space="preserve">
          <source>BasicBorders.FieldBorder</source>
          <target state="translated">BasicBorders.FieldBorder</target>
        </trans-unit>
        <trans-unit id="9f4f7b47f133c4da0fa670457881068ab1c0c7a3" translate="yes" xml:space="preserve">
          <source>BasicBorders.MarginBorder</source>
          <target state="translated">BasicBorders.MarginBorder</target>
        </trans-unit>
        <trans-unit id="05eabb8601dbfd877780497d375e01cc2fc1cd8c" translate="yes" xml:space="preserve">
          <source>BasicBorders.MenuBarBorder</source>
          <target state="translated">BasicBorders.MenuBarBorder</target>
        </trans-unit>
        <trans-unit id="384ecee0fdfb2fb481f1d273287ce2d0355ae288" translate="yes" xml:space="preserve">
          <source>BasicBorders.RadioButtonBorder</source>
          <target state="translated">BasicBorders.RadioButtonBorder</target>
        </trans-unit>
        <trans-unit id="93b47eeec68e32203df8f2eba6b722a243950659" translate="yes" xml:space="preserve">
          <source>BasicBorders.RolloverButtonBorder</source>
          <target state="translated">BasicBorders.RolloverButtonBorder</target>
        </trans-unit>
        <trans-unit id="cd2249489343ede6e7973d22ab68b9713e605d10" translate="yes" xml:space="preserve">
          <source>BasicBorders.SplitPaneBorder</source>
          <target state="translated">BasicBorders.SplitPaneBorder</target>
        </trans-unit>
        <trans-unit id="0b1685cdd80e054828c2a97d94377164205bbc89" translate="yes" xml:space="preserve">
          <source>BasicBorders.ToggleButtonBorder</source>
          <target state="translated">BasicBorders.ToggleButtonBorder</target>
        </trans-unit>
        <trans-unit id="8635f8378057caaecaabdd17c193404f935df3c4" translate="yes" xml:space="preserve">
          <source>BasicButton implementation</source>
          <target state="translated">BasicButton 구현</target>
        </trans-unit>
        <trans-unit id="de83f0b06dae55cef92c7423d9221e8c1a424d84" translate="yes" xml:space="preserve">
          <source>BasicButtonListener</source>
          <target state="translated">BasicButtonListener</target>
        </trans-unit>
        <trans-unit id="660e87318b9a65de13177200548661fc0586c31e" translate="yes" xml:space="preserve">
          <source>BasicButtonUI</source>
          <target state="translated">BasicButtonUI</target>
        </trans-unit>
        <trans-unit id="737dd5755c742fbfb7a1a7ec54d0fce1a708d25c" translate="yes" xml:space="preserve">
          <source>BasicCaret</source>
          <target state="translated">BasicCaret</target>
        </trans-unit>
        <trans-unit id="b5aacd4c1de15e67899e6447cf08016cafbd6c17" translate="yes" xml:space="preserve">
          <source>BasicCheckBoxMenuItemUI</source>
          <target state="translated">BasicCheckBoxMenuItemUI</target>
        </trans-unit>
        <trans-unit id="f882a3b4d6837331c0a58d5f9d216b5e9a478e83" translate="yes" xml:space="preserve">
          <source>BasicCheckBoxUI</source>
          <target state="translated">BasicCheckBoxUI</target>
        </trans-unit>
        <trans-unit id="5ec7a91ce3246b5eafb0d27e4aa3316ddce7b744" translate="yes" xml:space="preserve">
          <source>BasicCheckboxMenuItem implementation</source>
          <target state="translated">BasicCheckboxMenuItem 구현</target>
        </trans-unit>
        <trans-unit id="84db7fba3b00f387880ed01d99249f8434306380" translate="yes" xml:space="preserve">
          <source>BasicColorChooserUI</source>
          <target state="translated">BasicColorChooserUI</target>
        </trans-unit>
        <trans-unit id="ac6f7f8d783d369d3deac00fa88a668345a914e9" translate="yes" xml:space="preserve">
          <source>BasicColorChooserUI.PropertyHandler</source>
          <target state="translated">BasicColorChooserUI.PropertyHandler</target>
        </trans-unit>
        <trans-unit id="beb5d3aebfa6d4db4cc59a0ba4746af6902c87e3" translate="yes" xml:space="preserve">
          <source>BasicComboBoxEditor</source>
          <target state="translated">BasicComboBoxEditor</target>
        </trans-unit>
        <trans-unit id="8897dea8c8d917e4b1b23639b93344a571498398" translate="yes" xml:space="preserve">
          <source>BasicComboBoxEditor.UIResource</source>
          <target state="translated">BasicComboBoxEditor.UIResource</target>
        </trans-unit>
        <trans-unit id="7efb8bcc55f7f07c384c50f9406d4bc49aecd6c1" translate="yes" xml:space="preserve">
          <source>BasicComboBoxRenderer</source>
          <target state="translated">BasicComboBoxRenderer</target>
        </trans-unit>
        <trans-unit id="a74ee732568e0f2b59edd4fd02b7fdcd51f91e37" translate="yes" xml:space="preserve">
          <source>BasicComboBoxRenderer.UIResource</source>
          <target state="translated">BasicComboBoxRenderer.UIResource</target>
        </trans-unit>
        <trans-unit id="aba60c2f7a830860b22d9ad1167b9e7bce49b2a7" translate="yes" xml:space="preserve">
          <source>BasicComboBoxUI</source>
          <target state="translated">BasicComboBoxUI</target>
        </trans-unit>
        <trans-unit id="d31116fc82216badbf36ab11a9f0ae16dc0f82a5" translate="yes" xml:space="preserve">
          <source>BasicComboBoxUI.ComboBoxLayoutManager</source>
          <target state="translated">BasicComboBoxUI.ComboBoxLayoutManager</target>
        </trans-unit>
        <trans-unit id="60a0cc01cbc2b7bc8357b1c479ea96aaef698b64" translate="yes" xml:space="preserve">
          <source>BasicComboBoxUI.FocusHandler</source>
          <target state="translated">BasicComboBoxUI.FocusHandler</target>
        </trans-unit>
        <trans-unit id="ce8a091e68b5f257bcd388d8cb010309f24c1b21" translate="yes" xml:space="preserve">
          <source>BasicComboBoxUI.ItemHandler</source>
          <target state="translated">BasicComboBoxUI.ItemHandler</target>
        </trans-unit>
        <trans-unit id="d5bd060fc2b1495f88b5355391e5232143fa188e" translate="yes" xml:space="preserve">
          <source>BasicComboBoxUI.KeyHandler</source>
          <target state="translated">BasicComboBoxUI.KeyHandler</target>
        </trans-unit>
        <trans-unit id="83bb559008a654b4ed5ae6e9afab494d9a4a0e28" translate="yes" xml:space="preserve">
          <source>BasicComboBoxUI.ListDataHandler</source>
          <target state="translated">BasicComboBoxUI.ListDataHandler</target>
        </trans-unit>
        <trans-unit id="d465344805f86582bf44c0bf838ebb8aca855982" translate="yes" xml:space="preserve">
          <source>BasicComboBoxUI.PropertyChangeHandler</source>
          <target state="translated">BasicComboBoxUI.PropertyChangeHandler</target>
        </trans-unit>
        <trans-unit id="d6ad1b48b50a086f08586e21370f36223867ec85" translate="yes" xml:space="preserve">
          <source>BasicComboPopup</source>
          <target state="translated">BasicComboPopup</target>
        </trans-unit>
        <trans-unit id="f0aa5e63557d093d9812de2566ebda0edc21a720" translate="yes" xml:space="preserve">
          <source>BasicComboPopup.InvocationKeyHandler</source>
          <target state="translated">BasicComboPopup.InvocationKeyHandler</target>
        </trans-unit>
        <trans-unit id="ed44ffd8caf41498ff15364e63d47f448353a956" translate="yes" xml:space="preserve">
          <source>BasicComboPopup.InvocationMouseHandler</source>
          <target state="translated">BasicComboPopup.InvocationMouseHandler</target>
        </trans-unit>
        <trans-unit id="3677404b30cbaf9e7f0f38dbdffd3cb40e642d8a" translate="yes" xml:space="preserve">
          <source>BasicComboPopup.InvocationMouseMotionHandler</source>
          <target state="translated">BasicComboPopup.InvocationMouseMotionHandler</target>
        </trans-unit>
        <trans-unit id="7ba22a0c866a8de7b0be2a7b4be264c750b5f6de" translate="yes" xml:space="preserve">
          <source>BasicComboPopup.ItemHandler</source>
          <target state="translated">BasicComboPopup.ItemHandler</target>
        </trans-unit>
        <trans-unit id="1ffd8e49424d726eb14ae0dfebd0b8dac5c52757" translate="yes" xml:space="preserve">
          <source>BasicComboPopup.ListDataHandler</source>
          <target state="translated">BasicComboPopup.ListDataHandler</target>
        </trans-unit>
        <trans-unit id="b8c23f5fd6a5bf270e7b544b99efc71302978fd7" translate="yes" xml:space="preserve">
          <source>BasicComboPopup.ListMouseHandler</source>
          <target state="translated">BasicComboPopup.ListMouseHandler</target>
        </trans-unit>
        <trans-unit id="9eba41fb90a9c3f773b2db7f40b161636e4fd6bf" translate="yes" xml:space="preserve">
          <source>BasicComboPopup.ListMouseMotionHandler</source>
          <target state="translated">BasicComboPopup.ListMouseMotionHandler</target>
        </trans-unit>
        <trans-unit id="0e76be778360fc288c9bec715aca2e077c8a5c6c" translate="yes" xml:space="preserve">
          <source>BasicComboPopup.ListSelectionHandler</source>
          <target state="translated">BasicComboPopup.ListSelectionHandler</target>
        </trans-unit>
        <trans-unit id="afe17bf01ad1b682a028a461bc0b6b6013fac682" translate="yes" xml:space="preserve">
          <source>BasicComboPopup.PropertyChangeHandler</source>
          <target state="translated">BasicComboPopup.PropertyChangeHandler</target>
        </trans-unit>
        <trans-unit id="eb88f885adaaaf403a2f6c7a1078acb8f5af6636" translate="yes" xml:space="preserve">
          <source>BasicConstraints</source>
          <target state="translated">BasicConstraints</target>
        </trans-unit>
        <trans-unit id="9aef8c83632c0e5f6494e312f26a4c876624c619" translate="yes" xml:space="preserve">
          <source>BasicControl</source>
          <target state="translated">BasicControl</target>
        </trans-unit>
        <trans-unit id="d7be1f3d7ea2b0123f26a29c1bcfd496f2e5442a" translate="yes" xml:space="preserve">
          <source>BasicControl.getEncodedValue()</source>
          <target state="translated">BasicControl.getEncodedValue()</target>
        </trans-unit>
        <trans-unit id="db57c72ebba785af4526d9d4f922553171829111" translate="yes" xml:space="preserve">
          <source>BasicControl.getID()</source>
          <target state="translated">BasicControl.getID()</target>
        </trans-unit>
        <trans-unit id="e7a5d64ca09c1af8ee155e7c141edf5ddf729147" translate="yes" xml:space="preserve">
          <source>BasicControl.isCritical()</source>
          <target state="translated">BasicControl.isCritical()</target>
        </trans-unit>
        <trans-unit id="33f9b3839bcccfaa3b5a040e5113dd26e168f7ec" translate="yes" xml:space="preserve">
          <source>BasicDesktopIconUI</source>
          <target state="translated">BasicDesktopIconUI</target>
        </trans-unit>
        <trans-unit id="b387447563fa7455b3252ff3d34c6dc94733eb65" translate="yes" xml:space="preserve">
          <source>BasicDesktopIconUI.MouseInputHandler</source>
          <target state="translated">BasicDesktopIconUI.MouseInputHandler</target>
        </trans-unit>
        <trans-unit id="cf17b877e5ed8b4cce58f20b3bf14641ebb75ad0" translate="yes" xml:space="preserve">
          <source>BasicDesktopPaneUI</source>
          <target state="translated">BasicDesktopPaneUI</target>
        </trans-unit>
        <trans-unit id="0ee1257a06272de2af2f282c2b110d9ef80d0995" translate="yes" xml:space="preserve">
          <source>BasicDesktopPaneUI.CloseAction</source>
          <target state="translated">BasicDesktopPaneUI.CloseAction</target>
        </trans-unit>
        <trans-unit id="8dca891ca6045a9419605754e3ea5d71d37a2302" translate="yes" xml:space="preserve">
          <source>BasicDesktopPaneUI.MaximizeAction</source>
          <target state="translated">BasicDesktopPaneUI.MaximizeAction</target>
        </trans-unit>
        <trans-unit id="849c3da571f312dac34f5b4ffb114762b88c4cb3" translate="yes" xml:space="preserve">
          <source>BasicDesktopPaneUI.MinimizeAction</source>
          <target state="translated">BasicDesktopPaneUI.MinimizeAction</target>
        </trans-unit>
        <trans-unit id="c117ddbf40412beecc12fdac7077e5f804ae545f" translate="yes" xml:space="preserve">
          <source>BasicDesktopPaneUI.NavigateAction</source>
          <target state="translated">BasicDesktopPaneUI.NavigateAction</target>
        </trans-unit>
        <trans-unit id="11ce13476a2aaf72b1f3c1497ca0a2d9511ef8c1" translate="yes" xml:space="preserve">
          <source>BasicDesktopPaneUI.OpenAction</source>
          <target state="translated">BasicDesktopPaneUI.OpenAction</target>
        </trans-unit>
        <trans-unit id="207cf5642f6762406963877f5b4fce610ba0a04f" translate="yes" xml:space="preserve">
          <source>BasicDirectoryModel</source>
          <target state="translated">BasicDirectoryModel</target>
        </trans-unit>
        <trans-unit id="c8e98745f51006a5ec548473238ea0edf581c5fe" translate="yes" xml:space="preserve">
          <source>BasicEditorPaneUI</source>
          <target state="translated">BasicEditorPaneUI</target>
        </trans-unit>
        <trans-unit id="d6cab7be681fd837b3e7e1cea467a70388f24f7a" translate="yes" xml:space="preserve">
          <source>BasicFileAttributeView</source>
          <target state="translated">BasicFileAttributeView</target>
        </trans-unit>
        <trans-unit id="d5ee551ba520b744be486dac77fa9abca4c2813f" translate="yes" xml:space="preserve">
          <source>BasicFileAttributeView.name()</source>
          <target state="translated">BasicFileAttributeView.name()</target>
        </trans-unit>
        <trans-unit id="b3d04865b8837642cdf9982a4f297ef63b504a05" translate="yes" xml:space="preserve">
          <source>BasicFileAttributeView.readAttributes()</source>
          <target state="translated">BasicFileAttributeView.readAttributes()</target>
        </trans-unit>
        <trans-unit id="c7c6ca4d680bfeec32a2d71d5df0680849faa366" translate="yes" xml:space="preserve">
          <source>BasicFileAttributeView.setTimes()</source>
          <target state="translated">BasicFileAttributeView.setTimes()</target>
        </trans-unit>
        <trans-unit id="e16cf182b4e826095060f24a95ddee49959afd00" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes</source>
          <target state="translated">BasicFileAttributes</target>
        </trans-unit>
        <trans-unit id="5edab6d700ce4b189e65f8cd46071ec4b87e6bc5" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.creationTime()</source>
          <target state="translated">BasicFileAttributes.creationTime()</target>
        </trans-unit>
        <trans-unit id="91003b38c8b9cbc87ba4dbec31c903422d741bae" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.fileKey()</source>
          <target state="translated">BasicFileAttributes.fileKey()</target>
        </trans-unit>
        <trans-unit id="87e33f37d1063880efe407e1e34b5918d5ca8bc4" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.isDirectory()</source>
          <target state="translated">BasicFileAttributes.isDirectory()</target>
        </trans-unit>
        <trans-unit id="9da5d4a929d73c9b0d59f9402c2ccb18dc1b4f6b" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.isOther()</source>
          <target state="translated">BasicFileAttributes.isOther()</target>
        </trans-unit>
        <trans-unit id="1b6b9fd30281d61b1f5b1d7870ec97bc1f1a1eac" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.isRegularFile()</source>
          <target state="translated">BasicFileAttributes.isRegularFile()</target>
        </trans-unit>
        <trans-unit id="b23dc4043c2ddad5511d27d5ce4a4d2c7d8a281d" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.isSymbolicLink()</source>
          <target state="translated">BasicFileAttributes.isSymbolicLink()</target>
        </trans-unit>
        <trans-unit id="7abbb976f7a5756ba5ddd067fea74e8e11e1350b" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.lastAccessTime()</source>
          <target state="translated">BasicFileAttributes.lastAccessTime()</target>
        </trans-unit>
        <trans-unit id="a17dd1210d7444f3b9e5af5dded59fdaab1b0c5b" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.lastModifiedTime()</source>
          <target state="translated">BasicFileAttributes.lastModifiedTime()</target>
        </trans-unit>
        <trans-unit id="96806d6646a05494b1d20c07a50894ac3bfe7187" translate="yes" xml:space="preserve">
          <source>BasicFileAttributes.size()</source>
          <target state="translated">BasicFileAttributes.size()</target>
        </trans-unit>
        <trans-unit id="071e085c2428563f321ac862701c194f2d5dfc11" translate="yes" xml:space="preserve">
          <source>BasicFileChooserUI</source>
          <target state="translated">BasicFileChooserUI</target>
        </trans-unit>
        <trans-unit id="7e0f6b79a31c0592a86bc3a38a45f34b6fab9c4b" translate="yes" xml:space="preserve">
          <source>BasicFileChooserUI.AcceptAllFileFilter</source>
          <target state="translated">BasicFileChooserUI.AcceptAllFileFilter</target>
        </trans-unit>
        <trans-unit id="deacb4ed20068559843af0e7bd692f2c6ba5ed5e" translate="yes" xml:space="preserve">
          <source>BasicFileChooserUI.ApproveSelectionAction</source>
          <target state="translated">BasicFileChooserUI.ApproveSelectionAction</target>
        </trans-unit>
        <trans-unit id="50735d68d371427d03cd30f5844ab50cc3460652" translate="yes" xml:space="preserve">
          <source>BasicFileChooserUI.BasicFileView</source>
          <target state="translated">BasicFileChooserUI.BasicFileView</target>
        </trans-unit>
        <trans-unit id="a1e4e3d74f6bb6f2dba573112aac5b846f9d60e0" translate="yes" xml:space="preserve">
          <source>BasicFileChooserUI.CancelSelectionAction</source>
          <target state="translated">BasicFileChooserUI.CancelSelectionAction</target>
        </trans-unit>
        <trans-unit id="fa689c4954cb0102a0a7e55b7a533d024defb91d" translate="yes" xml:space="preserve">
          <source>BasicFileChooserUI.ChangeToParentDirectoryAction</source>
          <target state="translated">BasicFileChooserUI.ChangeToParentDirectoryAction</target>
        </trans-unit>
        <trans-unit id="4d7a1c19fe766c59cda11bf9cee9205c75b2a41f" translate="yes" xml:space="preserve">
          <source>BasicFileChooserUI.DoubleClickListener</source>
          <target state="translated">BasicFileChooserUI.DoubleClickListener</target>
        </trans-unit>
        <trans-unit id="ee2587172c21e87c9ba45b08fbb33bb772189703" translate="yes" xml:space="preserve">
          <source>BasicFileChooserUI.GoHomeAction</source>
          <target state="translated">BasicFileChooserUI.GoHomeAction</target>
        </trans-unit>
        <trans-unit id="02b0153900048aade40cc6240ba21d5e6070b566" translate="yes" xml:space="preserve">
          <source>BasicFileChooserUI.NewFolderAction</source>
          <target state="translated">BasicFileChooserUI.NewFolderAction</target>
        </trans-unit>
        <trans-unit id="74df63fea9b99c146d0304d7ed7ae83eed6b293d" translate="yes" xml:space="preserve">
          <source>BasicFileChooserUI.SelectionListener</source>
          <target state="translated">BasicFileChooserUI.SelectionListener</target>
        </trans-unit>
        <trans-unit id="ea2096e00fb372acd964c98d23063370593de449" translate="yes" xml:space="preserve">
          <source>BasicFileChooserUI.UpdateAction</source>
          <target state="translated">BasicFileChooserUI.UpdateAction</target>
        </trans-unit>
        <trans-unit id="d9853dad98ae80ad5b482b292b03a65ee69cd670" translate="yes" xml:space="preserve">
          <source>BasicFileView</source>
          <target state="translated">BasicFileView</target>
        </trans-unit>
        <trans-unit id="ab2141f21d3f0826bb9ab56728f22b9f22552f2a" translate="yes" xml:space="preserve">
          <source>BasicFormattedTextFieldUI</source>
          <target state="translated">BasicFormattedTextFieldUI</target>
        </trans-unit>
        <trans-unit id="6fe742db5db007c57c8e238310d9949bc5ecdc82" translate="yes" xml:space="preserve">
          <source>BasicGraphicsUtils</source>
          <target state="translated">BasicGraphicsUtils</target>
        </trans-unit>
        <trans-unit id="294718164117156339542c4f531ec1ad882b934f" translate="yes" xml:space="preserve">
          <source>BasicHTML</source>
          <target state="translated">BasicHTML</target>
        </trans-unit>
        <trans-unit id="c2ad37baaca4f8d4fc74a6fa2bf536cec50c6d1e" translate="yes" xml:space="preserve">
          <source>BasicHighlighter</source>
          <target state="translated">BasicHighlighter</target>
        </trans-unit>
        <trans-unit id="932f528731cbd4178e752e654d3ba626e7194c2e" translate="yes" xml:space="preserve">
          <source>BasicIconFactory</source>
          <target state="translated">BasicIconFactory</target>
        </trans-unit>
        <trans-unit id="b4b00ceb836bbff2311fa5a7880b99d27c413b79" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameListener</source>
          <target state="translated">BasicInternalFrameListener</target>
        </trans-unit>
        <trans-unit id="c10a26cbfeaf6ff89f400af511b799474b68aa35" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameTitlePane</source>
          <target state="translated">BasicInternalFrameTitlePane</target>
        </trans-unit>
        <trans-unit id="79af2694a25c534a88299b61f1635517be9ba0b4" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameTitlePane.CloseAction</source>
          <target state="translated">BasicInternalFrameTitlePane.CloseAction</target>
        </trans-unit>
        <trans-unit id="e412adbe146d570bb629ab6c5cad6352e9f44a80" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameTitlePane.IconifyAction</source>
          <target state="translated">BasicInternalFrameTitlePane.IconifyAction</target>
        </trans-unit>
        <trans-unit id="fb86169099b79ff8340d88af6ec5f66718d0282c" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameTitlePane.MaximizeAction</source>
          <target state="translated">BasicInternalFrameTitlePane.MaximizeAction</target>
        </trans-unit>
        <trans-unit id="b83ea33053755eb6f2761562ebf26dfeb27b940f" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameTitlePane.MoveAction</source>
          <target state="translated">BasicInternalFrameTitlePane.MoveAction</target>
        </trans-unit>
        <trans-unit id="ca06ec4718eeec4173a4a26ee20d98dea348380b" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameTitlePane.PropertyChangeHandler</source>
          <target state="translated">BasicInternalFrameTitlePane.PropertyChangeHandler</target>
        </trans-unit>
        <trans-unit id="70d6d151bcb66cad0d91e335eeb41afb8b339b8e" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameTitlePane.RestoreAction</source>
          <target state="translated">BasicInternalFrameTitlePane.RestoreAction</target>
        </trans-unit>
        <trans-unit id="1cec7f92a449cf4c513288309cfe09f6e34be672" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameTitlePane.SizeAction</source>
          <target state="translated">BasicInternalFrameTitlePane.SizeAction</target>
        </trans-unit>
        <trans-unit id="c8d64f00b4acbb37fa77fb9e13fa7acf054462a2" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameTitlePane.SystemMenuBar</source>
          <target state="translated">BasicInternalFrameTitlePane.SystemMenuBar</target>
        </trans-unit>
        <trans-unit id="c712980ed7a27963c1b4b449cda5567ac172ce24" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameTitlePane.TitlePaneLayout</source>
          <target state="translated">BasicInternalFrameTitlePane.TitlePaneLayout</target>
        </trans-unit>
        <trans-unit id="af7a7400c910c5b39b19bb8d5db64f3320766da5" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameUI</source>
          <target state="translated">BasicInternalFrameUI</target>
        </trans-unit>
        <trans-unit id="bfc970fb107d46ffa943fc2864154c027a35ac4f" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameUI.BasicInternalFrameListener</source>
          <target state="translated">BasicInternalFrameUI.BasicInternalFrameListener</target>
        </trans-unit>
        <trans-unit id="6c292e9e5e77ba27af1b4bf1d7ffc0bf3768a0f2" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameUI.BorderListener</source>
          <target state="translated">BasicInternalFrameUI.BorderListener</target>
        </trans-unit>
        <trans-unit id="5351db99481111d765cf70e50d8fffc2f74af45c" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameUI.ComponentHandler</source>
          <target state="translated">BasicInternalFrameUI.ComponentHandler</target>
        </trans-unit>
        <trans-unit id="5cb64866499cffd8872eee64011b96ffba59f871" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameUI.GlassPaneDispatcher</source>
          <target state="translated">BasicInternalFrameUI.GlassPaneDispatcher</target>
        </trans-unit>
        <trans-unit id="d2e19180be0fff9f87d35bdfa0fb03f777fc97d9" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameUI.InternalFrameLayout</source>
          <target state="translated">BasicInternalFrameUI.InternalFrameLayout</target>
        </trans-unit>
        <trans-unit id="338ecdd849b9a60ac9e92ff56eea33ac32753062" translate="yes" xml:space="preserve">
          <source>BasicInternalFrameUI.InternalFramePropertyChangeListener</source>
          <target state="translated">BasicInternalFrameUI.InternalFramePropertyChangeListener</target>
        </trans-unit>
        <trans-unit id="bb3e72e9fd7efecd29ba808438ace0f251a015e1" translate="yes" xml:space="preserve">
          <source>BasicLabelUI</source>
          <target state="translated">BasicLabelUI</target>
        </trans-unit>
        <trans-unit id="21860b6ecba0af02b5c6a383226b205272c81141" translate="yes" xml:space="preserve">
          <source>BasicListUI</source>
          <target state="translated">BasicListUI</target>
        </trans-unit>
        <trans-unit id="377bf35a79c56cc9cabe444eb216cbee32583934" translate="yes" xml:space="preserve">
          <source>BasicListUI.FocusHandler</source>
          <target state="translated">BasicListUI.FocusHandler</target>
        </trans-unit>
        <trans-unit id="b3ae85ac08b7246cb8414e2eb1370499392a33b2" translate="yes" xml:space="preserve">
          <source>BasicListUI.ListDataHandler</source>
          <target state="translated">BasicListUI.ListDataHandler</target>
        </trans-unit>
        <trans-unit id="a090123cdb016c88c7f9817df71075c8d71762c9" translate="yes" xml:space="preserve">
          <source>BasicListUI.ListSelectionHandler</source>
          <target state="translated">BasicListUI.ListSelectionHandler</target>
        </trans-unit>
        <trans-unit id="7f65c7d9937ee7c37fb564facdffbe90d9db592f" translate="yes" xml:space="preserve">
          <source>BasicListUI.MouseInputHandler</source>
          <target state="translated">BasicListUI.MouseInputHandler</target>
        </trans-unit>
        <trans-unit id="1dd9db63e22d35d25d6591133a09a21563c9c388" translate="yes" xml:space="preserve">
          <source>BasicListUI.PropertyChangeHandler</source>
          <target state="translated">BasicListUI.PropertyChangeHandler</target>
        </trans-unit>
        <trans-unit id="1d99b861e97595cbcb525bc3c8a935b6443e0cbe" translate="yes" xml:space="preserve">
          <source>BasicLookAndFeel</source>
          <target state="translated">BasicLookAndFeel</target>
        </trans-unit>
        <trans-unit id="89a357fd60693b24649c62bff0fb2ff16562d3e0" translate="yes" xml:space="preserve">
          <source>BasicMenuBarUI</source>
          <target state="translated">BasicMenuBarUI</target>
        </trans-unit>
        <trans-unit id="fa56e83adc230e8fe145010d97f0ccdb2bfbf74b" translate="yes" xml:space="preserve">
          <source>BasicMenuItem implementation</source>
          <target state="translated">BasicMenuItem 구현</target>
        </trans-unit>
        <trans-unit id="94f2ddc5bc2a4fed209d385e11434d2092819c7c" translate="yes" xml:space="preserve">
          <source>BasicMenuItemUI</source>
          <target state="translated">BasicMenuItemUI</target>
        </trans-unit>
        <trans-unit id="79383c18573f31b2c5d9e9ffd071b39fba60abd1" translate="yes" xml:space="preserve">
          <source>BasicMenuItemUI.MouseInputHandler</source>
          <target state="translated">BasicMenuItemUI.MouseInputHandler</target>
        </trans-unit>
        <trans-unit id="04035e26dfe4d12bdfe00e24b4d519d10c1ed82a" translate="yes" xml:space="preserve">
          <source>BasicMenuUI</source>
          <target state="translated">BasicMenuUI</target>
        </trans-unit>
        <trans-unit id="2289c257ff91bd21fb115c3106619f1a24be3c44" translate="yes" xml:space="preserve">
          <source>BasicMenuUI.ChangeHandler</source>
          <target state="translated">BasicMenuUI.ChangeHandler</target>
        </trans-unit>
        <trans-unit id="f01bcda510f323a236cf94e415bd086a1406c5a2" translate="yes" xml:space="preserve">
          <source>BasicMenuUI.MouseInputHandler</source>
          <target state="translated">BasicMenuUI.MouseInputHandler</target>
        </trans-unit>
        <trans-unit id="c35edb102133b624e736cab41e1b76ff31d80b65" translate="yes" xml:space="preserve">
          <source>BasicOptionPaneUI</source>
          <target state="translated">BasicOptionPaneUI</target>
        </trans-unit>
        <trans-unit id="e0705ce8cc194129f4754eea6e6f177e7cfc8506" translate="yes" xml:space="preserve">
          <source>BasicOptionPaneUI.ButtonActionListener</source>
          <target state="translated">BasicOptionPaneUI.ButtonActionListener</target>
        </trans-unit>
        <trans-unit id="717b0edd14095f2377a06f6b3e0b1b315de9f8ba" translate="yes" xml:space="preserve">
          <source>BasicOptionPaneUI.ButtonAreaLayout</source>
          <target state="translated">BasicOptionPaneUI.ButtonAreaLayout</target>
        </trans-unit>
        <trans-unit id="c96762d4ec5c5fa30a4b2556d0acfae94f7bf610" translate="yes" xml:space="preserve">
          <source>BasicOptionPaneUI.PropertyChangeHandler</source>
          <target state="translated">BasicOptionPaneUI.PropertyChangeHandler</target>
        </trans-unit>
        <trans-unit id="4295e3efed526816e6f6b27409494192da2db9d5" translate="yes" xml:space="preserve">
          <source>BasicPanel implementation</source>
          <target state="translated">BasicPanel 구현</target>
        </trans-unit>
        <trans-unit id="ebf6d138394bcee404f8a8a44a03124b184c290d" translate="yes" xml:space="preserve">
          <source>BasicPanelUI</source>
          <target state="translated">BasicPanelUI</target>
        </trans-unit>
        <trans-unit id="92761585a566a3ae42f0e7013a2acf5973d4806e" translate="yes" xml:space="preserve">
          <source>BasicPasswordFieldUI</source>
          <target state="translated">BasicPasswordFieldUI</target>
        </trans-unit>
        <trans-unit id="51cb9b96687d61c164a8378361270a5209cc8c54" translate="yes" xml:space="preserve">
          <source>BasicPermission</source>
          <target state="translated">BasicPermission</target>
        </trans-unit>
        <trans-unit id="310cba51546be2bf910b6958bb45679306a56782" translate="yes" xml:space="preserve">
          <source>BasicPermission objects must be stored in a manner that allows them to be inserted in any order, but that also enables the PermissionCollection &lt;code&gt;implies&lt;/code&gt; method to be implemented in an efficient (and consistent) manner.</source>
          <target state="translated">BasicPermission의 오브젝트들을 임의의 순서에 삽입 될 수있는 방식으로 저장되어야하지만, 역시 더 PermissionCollection 수 &lt;code&gt;implies&lt;/code&gt; 를 효율적으로 일관해 구현되는 방법.</target>
        </trans-unit>
        <trans-unit id="a7a03b5535c7a044296e751b0610b132635d308d" translate="yes" xml:space="preserve">
          <source>BasicPermission.equals()</source>
          <target state="translated">BasicPermission.equals()</target>
        </trans-unit>
        <trans-unit id="dde952aa0a247448351d7ca970b35c16c2b279ca" translate="yes" xml:space="preserve">
          <source>BasicPermission.getActions()</source>
          <target state="translated">BasicPermission.getActions()</target>
        </trans-unit>
        <trans-unit id="3ec5c1dd07c504816208fb0e18a0861a9fec75f6" translate="yes" xml:space="preserve">
          <source>BasicPermission.hashCode()</source>
          <target state="translated">BasicPermission.hashCode()</target>
        </trans-unit>
        <trans-unit id="d1f3ddd34769068bb8e8ddfc5f11b9bd4541ade2" translate="yes" xml:space="preserve">
          <source>BasicPermission.implies()</source>
          <target state="translated">BasicPermission.implies()</target>
        </trans-unit>
        <trans-unit id="2ec016717f2c8b1fa7e7f298313112fa42570843" translate="yes" xml:space="preserve">
          <source>BasicPermission.newPermissionCollection()</source>
          <target state="translated">BasicPermission.newPermissionCollection()</target>
        </trans-unit>
        <trans-unit id="969b03d3feb8d5a586664683cb176062812b0aef" translate="yes" xml:space="preserve">
          <source>BasicPopupMenuSeparatorUI</source>
          <target state="translated">BasicPopupMenuSeparatorUI</target>
        </trans-unit>
        <trans-unit id="0fea62a8ea5ac2956ef22ae53354d26b908e0b77" translate="yes" xml:space="preserve">
          <source>BasicPopupMenuUI</source>
          <target state="translated">BasicPopupMenuUI</target>
        </trans-unit>
        <trans-unit id="2533f8e5507b4099c8426c91b7b60d62b84d4b5b" translate="yes" xml:space="preserve">
          <source>BasicProgressBarUI</source>
          <target state="translated">BasicProgressBarUI</target>
        </trans-unit>
        <trans-unit id="ae21b993f086025784899e6b8e2a523b0eeaccdd" translate="yes" xml:space="preserve">
          <source>BasicProgressBarUI.ChangeHandler</source>
          <target state="translated">BasicProgressBarUI.ChangeHandler</target>
        </trans-unit>
        <trans-unit id="08f2378e559cc50eaa2d2f4c5dc9457aa25da7db" translate="yes" xml:space="preserve">
          <source>BasicRadioButtonMenuItem implementation</source>
          <target state="translated">BasicRadioButtonMenuItem 구현</target>
        </trans-unit>
        <trans-unit id="2ca76433eb91af1f19fe1ec764d634be4dc178ca" translate="yes" xml:space="preserve">
          <source>BasicRadioButtonMenuItemUI</source>
          <target state="translated">BasicRadioButtonMenuItemUI</target>
        </trans-unit>
        <trans-unit id="f3ab86ca2dd9b20aeb8c6b50ac4f585cd9abdfb4" translate="yes" xml:space="preserve">
          <source>BasicRadioButtonUI</source>
          <target state="translated">BasicRadioButtonUI</target>
        </trans-unit>
        <trans-unit id="3d1882a00e9b444f5aa77480801516d81d520baa" translate="yes" xml:space="preserve">
          <source>BasicRootPaneUI</source>
          <target state="translated">BasicRootPaneUI</target>
        </trans-unit>
        <trans-unit id="8eaa39fa9cbf01bd3167d9b6822c53360bacd4ce" translate="yes" xml:space="preserve">
          <source>BasicScrollBarUI</source>
          <target state="translated">BasicScrollBarUI</target>
        </trans-unit>
        <trans-unit id="f6b3b8cb031d60e2e99299f2041609a5fb11275b" translate="yes" xml:space="preserve">
          <source>BasicScrollBarUI.ArrowButtonListener</source>
          <target state="translated">BasicScrollBarUI.ArrowButtonListener</target>
        </trans-unit>
        <trans-unit id="907bad60bfef0b2988554633b87793edd99bf330" translate="yes" xml:space="preserve">
          <source>BasicScrollBarUI.ModelListener</source>
          <target state="translated">BasicScrollBarUI.ModelListener</target>
        </trans-unit>
        <trans-unit id="3ae7f0fbc3ef2332cd6103c4066e7020a5233000" translate="yes" xml:space="preserve">
          <source>BasicScrollBarUI.PropertyChangeHandler</source>
          <target state="translated">BasicScrollBarUI.PropertyChangeHandler</target>
        </trans-unit>
        <trans-unit id="83a5ef0117283b8ced34cfcde16f13bcfe72fbbd" translate="yes" xml:space="preserve">
          <source>BasicScrollBarUI.ScrollListener</source>
          <target state="translated">BasicScrollBarUI.ScrollListener</target>
        </trans-unit>
        <trans-unit id="dedcb614542f220da99c29b2281f9ef3238aba77" translate="yes" xml:space="preserve">
          <source>BasicScrollBarUI.TrackListener</source>
          <target state="translated">BasicScrollBarUI.TrackListener</target>
        </trans-unit>
        <trans-unit id="f74c4a3e6faefdf1990d61c4974d8300650d7ccc" translate="yes" xml:space="preserve">
          <source>BasicScrollPaneUI</source>
          <target state="translated">BasicScrollPaneUI</target>
        </trans-unit>
        <trans-unit id="764e3bf9ca8f67f9b254f24aa14382ed7cf5965b" translate="yes" xml:space="preserve">
          <source>BasicScrollPaneUI.HSBChangeListener</source>
          <target state="translated">BasicScrollPaneUI.HSBChangeListener</target>
        </trans-unit>
        <trans-unit id="13cd37de37f7a09738eb1ea0b90a3b5be7c23a6a" translate="yes" xml:space="preserve">
          <source>BasicScrollPaneUI.MouseWheelHandler</source>
          <target state="translated">BasicScrollPaneUI.MouseWheelHandler</target>
        </trans-unit>
        <trans-unit id="6d11fd551f5274f32a20267e4a0a29f33242ebe2" translate="yes" xml:space="preserve">
          <source>BasicScrollPaneUI.PropertyChangeHandler</source>
          <target state="translated">BasicScrollPaneUI.PropertyChangeHandler</target>
        </trans-unit>
        <trans-unit id="ddad6417ab3de442bf0254620e62a8a7f62a6034" translate="yes" xml:space="preserve">
          <source>BasicScrollPaneUI.VSBChangeListener</source>
          <target state="translated">BasicScrollPaneUI.VSBChangeListener</target>
        </trans-unit>
        <trans-unit id="919f96c8ab0c71c1cd4fa2d5f3e38812f7dc6fcb" translate="yes" xml:space="preserve">
          <source>BasicScrollPaneUI.ViewportChangeHandler</source>
          <target state="translated">BasicScrollPaneUI.ViewportChangeHandler</target>
        </trans-unit>
        <trans-unit id="e7324fcab19ed2b7d731032f41cfaf294eabcf2f" translate="yes" xml:space="preserve">
          <source>BasicSeparatorUI</source>
          <target state="translated">BasicSeparatorUI</target>
        </trans-unit>
        <trans-unit id="a9ebe25171336ea55ba38c4cc3f791d56cc3a2e9" translate="yes" xml:space="preserve">
          <source>BasicSliderUI</source>
          <target state="translated">BasicSliderUI</target>
        </trans-unit>
        <trans-unit id="f8c1e04311b4f8e2efd4606c5203b627186c8bfc" translate="yes" xml:space="preserve">
          <source>BasicSliderUI.ActionScroller</source>
          <target state="translated">BasicSliderUI.ActionScroller</target>
        </trans-unit>
        <trans-unit id="a320c72eec786561aa99446884a027b7b2de8892" translate="yes" xml:space="preserve">
          <source>BasicSliderUI.ChangeHandler</source>
          <target state="translated">BasicSliderUI.ChangeHandler</target>
        </trans-unit>
        <trans-unit id="ff2b64c1d9be4ae093e65d0818b833357a69a89d" translate="yes" xml:space="preserve">
          <source>BasicSliderUI.ComponentHandler</source>
          <target state="translated">BasicSliderUI.ComponentHandler</target>
        </trans-unit>
        <trans-unit id="f292399829f9bffe21d2a6a8f7dd724b584644c9" translate="yes" xml:space="preserve">
          <source>BasicSliderUI.FocusHandler</source>
          <target state="translated">BasicSliderUI.FocusHandler</target>
        </trans-unit>
        <trans-unit id="feb4c139374183851ebda5f9861f25acac18b84c" translate="yes" xml:space="preserve">
          <source>BasicSliderUI.PropertyChangeHandler</source>
          <target state="translated">BasicSliderUI.PropertyChangeHandler</target>
        </trans-unit>
        <trans-unit id="4a133d4e425c3270b11384517fad38862af8167a" translate="yes" xml:space="preserve">
          <source>BasicSliderUI.ScrollListener</source>
          <target state="translated">BasicSliderUI.ScrollListener</target>
        </trans-unit>
        <trans-unit id="9ace781569c805fca25209ceb1b1979ec31ee7ab" translate="yes" xml:space="preserve">
          <source>BasicSliderUI.TrackListener</source>
          <target state="translated">BasicSliderUI.TrackListener</target>
        </trans-unit>
        <trans-unit id="15329858269049f6118f4105955d3d2c176e6354" translate="yes" xml:space="preserve">
          <source>BasicSpinnerUI</source>
          <target state="translated">BasicSpinnerUI</target>
        </trans-unit>
        <trans-unit id="c41b43ea856850f2203f878c6346794d1e578d79" translate="yes" xml:space="preserve">
          <source>BasicSplitPaneDivider</source>
          <target state="translated">BasicSplitPaneDivider</target>
        </trans-unit>
        <trans-unit id="5974a279464cb4ed86d536b2c5bed575e104f75a" translate="yes" xml:space="preserve">
          <source>BasicSplitPaneDivider.DividerLayout</source>
          <target state="translated">BasicSplitPaneDivider.DividerLayout</target>
        </trans-unit>
        <trans-unit id="3437471bee52305116a494e6382c2e4cbcfac44a" translate="yes" xml:space="preserve">
          <source>BasicSplitPaneDivider.DragController</source>
          <target state="translated">BasicSplitPaneDivider.DragController</target>
        </trans-unit>
        <trans-unit id="366c87ed49ec29a0edb71c5b8e91ce9ee3264465" translate="yes" xml:space="preserve">
          <source>BasicSplitPaneDivider.MouseHandler</source>
          <target state="translated">BasicSplitPaneDivider.MouseHandler</target>
        </trans-unit>
        <trans-unit id="ea854a603d01818d6ded423a04bb1cad925da58f" translate="yes" xml:space="preserve">
          <source>BasicSplitPaneDivider.VerticalDragController</source>
          <target state="translated">BasicSplitPaneDivider.VerticalDragController</target>
        </trans-unit>
        <trans-unit id="cad5d7f35efef0765974fc05015199a9b752c094" translate="yes" xml:space="preserve">
          <source>BasicSplitPaneUI</source>
          <target state="translated">BasicSplitPaneUI</target>
        </trans-unit>
        <trans-unit id="7f212616dc4164da81efad15b3ea61b2276d515c" translate="yes" xml:space="preserve">
          <source>BasicSplitPaneUI.BasicHorizontalLayoutManager</source>
          <target state="translated">BasicSplitPaneUI.BasicHorizontalLayoutManager</target>
        </trans-unit>
        <trans-unit id="afd39e478eb038eaf1274ce9fb6cd6c481931152" translate="yes" xml:space="preserve">
          <source>BasicSplitPaneUI.BasicVerticalLayoutManager</source>
          <target state="translated">BasicSplitPaneUI.BasicVerticalLayoutManager</target>
        </trans-unit>
        <trans-unit id="762937f2f66fa3117effbb48f02fbf10d6974874" translate="yes" xml:space="preserve">
          <source>BasicSplitPaneUI.FocusHandler</source>
          <target state="translated">BasicSplitPaneUI.FocusHandler</target>
        </trans-unit>
        <trans-unit id="77b0f123e30a1f64cc1f40e27ade92134774d5cb" translate="yes" xml:space="preserve">
          <source>BasicSplitPaneUI.KeyboardDownRightHandler</source>
          <target state="translated">BasicSplitPaneUI.KeyboardDownRightHandler</target>
        </trans-unit>
        <trans-unit id="421d7c804a5e4461243dedf60f1464c0af886ef5" translate="yes" xml:space="preserve">
          <source>BasicSplitPaneUI.KeyboardEndHandler</source>
          <target state="translated">BasicSplitPaneUI.KeyboardEndHandler</target>
        </trans-unit>
        <trans-unit id="7350343ed21b473d9399830efc8dfadb6826c6f0" translate="yes" xml:space="preserve">
          <source>BasicSplitPaneUI.KeyboardHomeHandler</source>
          <target state="translated">BasicSplitPaneUI.KeyboardHomeHandler</target>
        </trans-unit>
        <trans-unit id="9915ed1dda671eb158ba0439bb5afb63d93d0817" translate="yes" xml:space="preserve">
          <source>BasicSplitPaneUI.KeyboardResizeToggleHandler</source>
          <target state="translated">BasicSplitPaneUI.KeyboardResizeToggleHandler</target>
        </trans-unit>
        <trans-unit id="57bd1d0753ea231a31f741a599dfa95b02ee168f" translate="yes" xml:space="preserve">
          <source>BasicSplitPaneUI.KeyboardUpLeftHandler</source>
          <target state="translated">BasicSplitPaneUI.KeyboardUpLeftHandler</target>
        </trans-unit>
        <trans-unit id="9a7be455e4d7f2a3cfd9e282a7c45c63e9fff0bd" translate="yes" xml:space="preserve">
          <source>BasicSplitPaneUI.PropertyHandler</source>
          <target state="translated">BasicSplitPaneUI.PropertyHandler</target>
        </trans-unit>
        <trans-unit id="62714cbb6dea2b002acf9d09caf12205fcd024a3" translate="yes" xml:space="preserve">
          <source>BasicStroke</source>
          <target state="translated">BasicStroke</target>
        </trans-unit>
        <trans-unit id="6a9c760e93c92ba3a2ea317124bd1a250921c2ab" translate="yes" xml:space="preserve">
          <source>BasicTabbedPaneUI</source>
          <target state="translated">BasicTabbedPaneUI</target>
        </trans-unit>
        <trans-unit id="55b97ea4f189bd4266ae45eabe08c328687d28d0" translate="yes" xml:space="preserve">
          <source>BasicTabbedPaneUI.FocusHandler</source>
          <target state="translated">BasicTabbedPaneUI.FocusHandler</target>
        </trans-unit>
        <trans-unit id="6291637bd488731a5d9687967b378eefbfa15ee3" translate="yes" xml:space="preserve">
          <source>BasicTabbedPaneUI.MouseHandler</source>
          <target state="translated">BasicTabbedPaneUI.MouseHandler</target>
        </trans-unit>
        <trans-unit id="1be5ffbea594f339d6ee6098ca6a19313450586a" translate="yes" xml:space="preserve">
          <source>BasicTabbedPaneUI.PropertyChangeHandler</source>
          <target state="translated">BasicTabbedPaneUI.PropertyChangeHandler</target>
        </trans-unit>
        <trans-unit id="a6cdaf39db2c19f2f45996b24609346178f8ee9e" translate="yes" xml:space="preserve">
          <source>BasicTabbedPaneUI.TabSelectionHandler</source>
          <target state="translated">BasicTabbedPaneUI.TabSelectionHandler</target>
        </trans-unit>
        <trans-unit id="807ebbd1a5cf8492b50b4b6bea260897771bbfaa" translate="yes" xml:space="preserve">
          <source>BasicTabbedPaneUI.TabbedPaneLayout</source>
          <target state="translated">BasicTabbedPaneUI.TabbedPaneLayout</target>
        </trans-unit>
        <trans-unit id="5ab621b520ecd880c5241f87950e2fed3180890a" translate="yes" xml:space="preserve">
          <source>BasicTableHeaderUI</source>
          <target state="translated">BasicTableHeaderUI</target>
        </trans-unit>
        <trans-unit id="194e29be2add212e466963959db71fa6c0e4f089" translate="yes" xml:space="preserve">
          <source>BasicTableHeaderUI implementation</source>
          <target state="translated">BasicTableHeaderUI 구현</target>
        </trans-unit>
        <trans-unit id="874b13495bab6559a683b57108be5bc9228082e4" translate="yes" xml:space="preserve">
          <source>BasicTableHeaderUI.MouseInputHandler</source>
          <target state="translated">BasicTableHeaderUI.MouseInputHandler</target>
        </trans-unit>
        <trans-unit id="c80b4bcc046c02d01b0c3ea0e6c2b62692565be6" translate="yes" xml:space="preserve">
          <source>BasicTableUI</source>
          <target state="translated">BasicTableUI</target>
        </trans-unit>
        <trans-unit id="1f97b2c94439de4b894e9d9efb2b8049fc160f06" translate="yes" xml:space="preserve">
          <source>BasicTableUI implementation</source>
          <target state="translated">BasicTableUI 구현</target>
        </trans-unit>
        <trans-unit id="28dd9ca1f03df5f4ee96c9de5b5eed62f729f0d1" translate="yes" xml:space="preserve">
          <source>BasicTableUI.FocusHandler</source>
          <target state="translated">BasicTableUI.FocusHandler</target>
        </trans-unit>
        <trans-unit id="05741d2661e628ac6b45642f1c09dd1761cde1bb" translate="yes" xml:space="preserve">
          <source>BasicTableUI.KeyHandler</source>
          <target state="translated">BasicTableUI.KeyHandler</target>
        </trans-unit>
        <trans-unit id="b0866316b2d2b84f83466dc4ae5668b4608077b4" translate="yes" xml:space="preserve">
          <source>BasicTableUI.MouseInputHandler</source>
          <target state="translated">BasicTableUI.MouseInputHandler</target>
        </trans-unit>
        <trans-unit id="c90d912a6729a19d95915176419747e94c6640e3" translate="yes" xml:space="preserve">
          <source>BasicTextAreaUI</source>
          <target state="translated">BasicTextAreaUI</target>
        </trans-unit>
        <trans-unit id="a7b31e3f9f92e72ba736161182a3a0fec147b6b6" translate="yes" xml:space="preserve">
          <source>BasicTextFieldUI</source>
          <target state="translated">BasicTextFieldUI</target>
        </trans-unit>
        <trans-unit id="8be4e21810fcf480edfe6ab69c63014e7d0f99b5" translate="yes" xml:space="preserve">
          <source>BasicTextPaneUI</source>
          <target state="translated">BasicTextPaneUI</target>
        </trans-unit>
        <trans-unit id="a630ae8b91dc1807148c3918f906b800aed05a74" translate="yes" xml:space="preserve">
          <source>BasicTextUI</source>
          <target state="translated">BasicTextUI</target>
        </trans-unit>
        <trans-unit id="971b26d35e2f762276738cd16cf816e2bc17cd1d" translate="yes" xml:space="preserve">
          <source>BasicTextUI.BasicCaret</source>
          <target state="translated">BasicTextUI.BasicCaret</target>
        </trans-unit>
        <trans-unit id="c2045a128ff9e22483ededd63b81c4adad9bf6ed" translate="yes" xml:space="preserve">
          <source>BasicTextUI.BasicHighlighter</source>
          <target state="translated">BasicTextUI.BasicHighlighter</target>
        </trans-unit>
        <trans-unit id="57aeee7c9dd320ed0f20bf9f79ccc60b94595d50" translate="yes" xml:space="preserve">
          <source>BasicToggleButton implementation</source>
          <target state="translated">BasicToggleButton 구현</target>
        </trans-unit>
        <trans-unit id="cc40fe0b6b8877188ca11527385154d9fada66a8" translate="yes" xml:space="preserve">
          <source>BasicToggleButtonUI</source>
          <target state="translated">BasicToggleButtonUI</target>
        </trans-unit>
        <trans-unit id="169906d07b6cedb10a20104470f041074852e188" translate="yes" xml:space="preserve">
          <source>BasicToolBarSeparatorUI</source>
          <target state="translated">BasicToolBarSeparatorUI</target>
        </trans-unit>
        <trans-unit id="0779d210e7062d0cb8f76a89ddfaaeff0eaa7060" translate="yes" xml:space="preserve">
          <source>BasicToolBarUI</source>
          <target state="translated">BasicToolBarUI</target>
        </trans-unit>
        <trans-unit id="7c89c2b72d0e275cc6262ca85108bd83a20cf28f" translate="yes" xml:space="preserve">
          <source>BasicToolBarUI.DockingListener</source>
          <target state="translated">BasicToolBarUI.DockingListener</target>
        </trans-unit>
        <trans-unit id="fe8c381ad7ed41a298b5d898c383b1918a7721fb" translate="yes" xml:space="preserve">
          <source>BasicToolBarUI.DragWindow</source>
          <target state="translated">BasicToolBarUI.DragWindow</target>
        </trans-unit>
        <trans-unit id="f58ed186ade54e33ad2599d36bc1aff6322bfbc1" translate="yes" xml:space="preserve">
          <source>BasicToolBarUI.FrameListener</source>
          <target state="translated">BasicToolBarUI.FrameListener</target>
        </trans-unit>
        <trans-unit id="90b62d391ca334dd7342af93e99e5b8e2bfed4fb" translate="yes" xml:space="preserve">
          <source>BasicToolBarUI.PropertyListener</source>
          <target state="translated">BasicToolBarUI.PropertyListener</target>
        </trans-unit>
        <trans-unit id="3a0b9d09a3b6a29e81e8d04d3b77f85b62d912f9" translate="yes" xml:space="preserve">
          <source>BasicToolBarUI.ToolBarContListener</source>
          <target state="translated">BasicToolBarUI.ToolBarContListener</target>
        </trans-unit>
        <trans-unit id="edd31de0435524426c6a35e0372f74088cb8589d" translate="yes" xml:space="preserve">
          <source>BasicToolBarUI.ToolBarFocusListener</source>
          <target state="translated">BasicToolBarUI.ToolBarFocusListener</target>
        </trans-unit>
        <trans-unit id="85e783ebe282552c6a0d495c4cec37eaf1b6a8ef" translate="yes" xml:space="preserve">
          <source>BasicToolTipUI</source>
          <target state="translated">BasicToolTipUI</target>
        </trans-unit>
        <trans-unit id="e4662e8d440c73a6f79697ab7ae50a45a8140922" translate="yes" xml:space="preserve">
          <source>BasicTreeUI</source>
          <target state="translated">BasicTreeUI</target>
        </trans-unit>
        <trans-unit id="7fb964d0fd37238ec216a76a27a40c0920ddbdcb" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.CellEditorHandler</source>
          <target state="translated">BasicTreeUI.CellEditorHandler</target>
        </trans-unit>
        <trans-unit id="37eef9e2babd5199f01f3d05ca0f5825f2df1c0e" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.ComponentHandler</source>
          <target state="translated">BasicTreeUI.ComponentHandler</target>
        </trans-unit>
        <trans-unit id="bfabbc20fc0f55ab619763a44dd3d627c12a5f33" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.FocusHandler</source>
          <target state="translated">BasicTreeUI.FocusHandler</target>
        </trans-unit>
        <trans-unit id="d929f55e0064261d9a06623d4ecdea99f42713e6" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.KeyHandler</source>
          <target state="translated">BasicTreeUI.KeyHandler</target>
        </trans-unit>
        <trans-unit id="7ca2fd44818f3f912e96d23b2bf239a8e521e9b4" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.MouseHandler</source>
          <target state="translated">BasicTreeUI.MouseHandler</target>
        </trans-unit>
        <trans-unit id="a662f12484b445a471900e7c0cdfd4a6b9405010" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.MouseInputHandler</source>
          <target state="translated">BasicTreeUI.MouseInputHandler</target>
        </trans-unit>
        <trans-unit id="dc5f194ff0aed857cd5fb28e48863ef035a062d3" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.NodeDimensionsHandler</source>
          <target state="translated">BasicTreeUI.NodeDimensionsHandler</target>
        </trans-unit>
        <trans-unit id="a1943a385ec59085675305cd8f568b9661de44ef" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.PropertyChangeHandler</source>
          <target state="translated">BasicTreeUI.PropertyChangeHandler</target>
        </trans-unit>
        <trans-unit id="480e35864a70a1fd888211d6c557203c86ceb286" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.SelectionModelPropertyChangeHandler</source>
          <target state="translated">BasicTreeUI.SelectionModelPropertyChangeHandler</target>
        </trans-unit>
        <trans-unit id="4d19a1e51a10ecaba7bee540da4a50f76d758884" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.TreeCancelEditingAction</source>
          <target state="translated">BasicTreeUI.TreeCancelEditingAction</target>
        </trans-unit>
        <trans-unit id="8dcfa0745767df78e061fcebefd70ea05527e768" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.TreeExpansionHandler</source>
          <target state="translated">BasicTreeUI.TreeExpansionHandler</target>
        </trans-unit>
        <trans-unit id="74550dc93ff840f8132fd43fb070e1513e61f516" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.TreeHomeAction</source>
          <target state="translated">BasicTreeUI.TreeHomeAction</target>
        </trans-unit>
        <trans-unit id="c5e7214203d6fde032c3c9ad8b34636754065d43" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.TreeIncrementAction</source>
          <target state="translated">BasicTreeUI.TreeIncrementAction</target>
        </trans-unit>
        <trans-unit id="e2687e99e78902fd6ffd3f18401d942947e61824" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.TreeModelHandler</source>
          <target state="translated">BasicTreeUI.TreeModelHandler</target>
        </trans-unit>
        <trans-unit id="f941d9da9dfac4b9867cb24dd4689a53b5ef9a2a" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.TreePageAction</source>
          <target state="translated">BasicTreeUI.TreePageAction</target>
        </trans-unit>
        <trans-unit id="7d964025651d127a13ec86f46aa451070fa7d4b8" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.TreeSelectionHandler</source>
          <target state="translated">BasicTreeUI.TreeSelectionHandler</target>
        </trans-unit>
        <trans-unit id="4b3c22c875f8b53197727eab30f2b41b82687c48" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.TreeToggleAction</source>
          <target state="translated">BasicTreeUI.TreeToggleAction</target>
        </trans-unit>
        <trans-unit id="f334bdc7ab0ce27dad7a24cf09fc9a6ad18a0c9c" translate="yes" xml:space="preserve">
          <source>BasicTreeUI.TreeTraverseAction</source>
          <target state="translated">BasicTreeUI.TreeTraverseAction</target>
        </trans-unit>
        <trans-unit id="b760d12cea9ad9d70dc2abb04384cff49db5192b" translate="yes" xml:space="preserve">
          <source>BasicVerticalLayoutManager</source>
          <target state="translated">BasicVerticalLayoutManager</target>
        </trans-unit>
        <trans-unit id="233d2aa10b336fa839bab58f3ce7801ffb5c498a" translate="yes" xml:space="preserve">
          <source>BasicViewport implementation</source>
          <target state="translated">BasicViewport 구현</target>
        </trans-unit>
        <trans-unit id="f1c0affce85d0d630b9ca4a9093f79884f96c7e4" translate="yes" xml:space="preserve">
          <source>BasicViewportUI</source>
          <target state="translated">BasicViewportUI</target>
        </trans-unit>
        <trans-unit id="90857b5f0f23879f3d2af52f0f6afcc16c794f36" translate="yes" xml:space="preserve">
          <source>Basically, tests if a method from a class defined using a class loader is on the execution stack.</source>
          <target state="translated">기본적으로 클래스 로더를 사용하여 정의 된 클래스의 메소드가 실행 스택에 있는지 테스트합니다.</target>
        </trans-unit>
        <trans-unit id="d687b0a0221f224cafc894c39cedb9792504b3b4" translate="yes" xml:space="preserve">
          <source>Basis of a look and feel for a JTextField.</source>
          <target state="translated">JTextField에 대한 룩앤필의 기초.</target>
        </trans-unit>
        <trans-unit id="a2f46315fd829b1f13c6a30bc8973f7881a29b1a" translate="yes" xml:space="preserve">
          <source>Basis of a text components look-and-feel.</source>
          <target state="translated">텍스트 구성 요소의 모양과 느낌의 기초입니다.</target>
        </trans-unit>
        <trans-unit id="20e4350a784043641e18c820bca9eddad8a1e962" translate="yes" xml:space="preserve">
          <source>Basis of a text components look-and-feel. This provides the basic editor view and controller services that may be useful when creating a look-and-feel for an extension of &lt;code&gt;JTextComponent&lt;/code&gt;.</source>
          <target state="translated">텍스트 구성 요소의 모양과 느낌의 기초입니다. 이것은 &lt;code&gt;JTextComponent&lt;/code&gt; 확장에 대한 룩앤필을 생성 할 때 유용한 기본 편집기 뷰와 컨트롤러 서비스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="00d9d40e696ae91918f54fe57e8eb2872ba31e8b" translate="yes" xml:space="preserve">
          <source>Batch updates</source>
          <target state="translated">배치 업데이트</target>
        </trans-unit>
        <trans-unit id="0ff4b34329d89065eeb0a5cb69ce3873e1b434f4" translate="yes" xml:space="preserve">
          <source>BatchUpdateException</source>
          <target state="translated">BatchUpdateException</target>
        </trans-unit>
        <trans-unit id="7dee6baa2f134a80800f091a0f6ce68dd230d8c7" translate="yes" xml:space="preserve">
          <source>Be *very* careful in your use of the &quot;privileged&quot; construct, and always remember to make the privileged code section as small as possible. You can pass &lt;code&gt;Permission&lt;/code&gt; arguments to further limit the scope of the &quot;privilege&quot; (see below).</source>
          <target state="translated">&quot;권한이있는&quot;구문을 사용할 때는 매우주의해야하며 항상 권한이있는 코드 섹션을 가능한 작게 만들어야합니다. &quot;권한&quot;의 범위를 추가로 제한하기 위해 &lt;code&gt;Permission&lt;/code&gt; 인수를 전달할 수 있습니다 (아래 참조).</target>
        </trans-unit>
        <trans-unit id="49a97a35b13a2cfa0e7fbb97b78e0584b8252076" translate="yes" xml:space="preserve">
          <source>Be aware that if a ClassLoader in the ClassLoaderRepository calls this method from its &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method, it exposes itself to a deadlock if another ClassLoader in the ClassLoaderRepository does the same thing at the same time. The &lt;a href=&quot;#loadClassBefore(java.lang.ClassLoader,java.lang.String)&quot;&gt;&lt;code&gt;loadClassBefore(java.lang.ClassLoader, java.lang.String)&lt;/code&gt;&lt;/a&gt; method is recommended to avoid the risk of deadlock.</source>
          <target state="translated">ClassLoaderRepository의 ClassLoader가 &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt; 메서드 에서이 메서드를 호출하면 ClassLoaderRepository의 다른 ClassLoader가 동시에 같은 작업을 수행하면 교착 상태에 노출됩니다. &lt;a href=&quot;#loadClassBefore(java.lang.ClassLoader,java.lang.String)&quot;&gt; &lt;code&gt;loadClassBefore(java.lang.ClassLoader, java.lang.String)&lt;/code&gt; &lt;/a&gt; 방법은 교착 상태의 위험을 방지하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b3db4c886be573c347b34969f298e73aea21e787" translate="yes" xml:space="preserve">
          <source>Be aware that if a ClassLoader in the ClassLoaderRepository calls this method from its &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;loadClass&lt;/code&gt;&lt;/a&gt; method, it exposes itself to a deadlock if another ClassLoader in the ClassLoaderRepository does the same thing at the same time. The &lt;a href=&quot;classloaderrepository#loadClassBefore-java.lang.ClassLoader-java.lang.String-&quot;&gt;&lt;code&gt;loadClassBefore(java.lang.ClassLoader, java.lang.String)&lt;/code&gt;&lt;/a&gt; method is recommended to avoid the risk of deadlock.</source>
          <target state="translated">ClassLoaderRepository의 ClassLoader가 &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;loadClass&lt;/code&gt; &lt;/a&gt; 메소드 에서이 메소드를 호출 하는 경우 ClassLoaderRepository의 다른 ClassLoader가 동시에 동일한 작업을 수행하면 교착 상태에 노출됩니다. &lt;a href=&quot;classloaderrepository#loadClassBefore-java.lang.ClassLoader-java.lang.String-&quot;&gt; &lt;code&gt;loadClassBefore(java.lang.ClassLoader, java.lang.String)&lt;/code&gt; &lt;/a&gt; 방법은 교착 상태의 위험을 방지하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="4c0a4f282bb5730f1d1b4df1fcac390dc27f5f98" translate="yes" xml:space="preserve">
          <source>Be careful how you configure the &lt;code&gt;Format&lt;/code&gt; and the &lt;code&gt;InternationalFormatter&lt;/code&gt;, as it is possible to create a situation where certain values can not be input. Consider the date format 'M/d/yy', an &lt;code&gt;InternationalFormatter&lt;/code&gt; that is always valid (&lt;code&gt;setAllowsInvalid(false)&lt;/code&gt;), is in overwrite mode (&lt;code&gt;setOverwriteMode(true)&lt;/code&gt;) and the date 7/1/99. In this case the user will not be able to enter a two digit month or day of month. To avoid this, the format should be 'MM/dd/yy'.</source>
          <target state="translated">특정 값을 입력 할 수없는 상황이 발생할 수 있으므로 &lt;code&gt;Format&lt;/code&gt; 및 &lt;code&gt;InternationalFormatter&lt;/code&gt; 를 구성하는 방법에주의하십시오 . 항상 유효한 &lt;code&gt;InternationalFormatter&lt;/code&gt; ( &lt;code&gt;setAllowsInvalid(false)&lt;/code&gt; ), 덮어 쓰기 모드 ( &lt;code&gt;setOverwriteMode(true)&lt;/code&gt; ) 및 날짜 7/1/99 인 날짜 형식 'M / d / yy'를 고려하십시오 . 이 경우 사용자는 두 자리 월 또는 일을 입력 할 수 없습니다. 이를 방지하려면 형식이 'MM / dd / yy'여야합니다.</target>
        </trans-unit>
        <trans-unit id="bbc9d7eb00aec0e9eb430e9c34d797229abeedd8" translate="yes" xml:space="preserve">
          <source>Be careful when granting FilePermissions. Think about the implications of granting read and especially write access to various files and directories. The &quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot; permission with write action is especially dangerous. This grants permission to write to the entire file system. One thing this effectively allows is replacement of the system binary, including the JVM runtime environment.</source>
          <target state="translated">FilePermission을 부여 할 때주의하십시오. 다양한 파일 및 디렉토리에 대한 읽기 및 특히 쓰기 액세스 권한 부여의 의미에 대해 생각하십시오. 쓰기 작업이있는 &quot;&amp;lt;&amp;lt; 모든 파일 &amp;gt;&amp;gt;&quot;권한이 특히 위험합니다. 전체 파일 시스템에 쓸 수있는 권한을 부여합니다. 이것이 효과적으로 허용하는 한 가지는 JVM 런타임 환경을 포함한 시스템 바이너리의 교체입니다.</target>
        </trans-unit>
        <trans-unit id="1035dc2185c003c3e41e55e751b3076a27c43aa1" translate="yes" xml:space="preserve">
          <source>BeanContext</source>
          <target state="translated">BeanContext</target>
        </trans-unit>
        <trans-unit id="fd2967cdd3549dcec66779102a936617524bcc77" translate="yes" xml:space="preserve">
          <source>BeanContext.addBeanContextMembershipListener()</source>
          <target state="translated">BeanContext.addBeanContextMembershipListener()</target>
        </trans-unit>
        <trans-unit id="3302d9e0ddb6c2327a4b4b9fdf83b9f65c255ec6" translate="yes" xml:space="preserve">
          <source>BeanContext.getResource()</source>
          <target state="translated">BeanContext.getResource()</target>
        </trans-unit>
        <trans-unit id="5c8009de0f76f6f6e3ffeef6b9ee18246788d3e6" translate="yes" xml:space="preserve">
          <source>BeanContext.getResourceAsStream()</source>
          <target state="translated">BeanContext.getResourceAsStream()</target>
        </trans-unit>
        <trans-unit id="73cc28569f6a864314e95e55639957b5a523f718" translate="yes" xml:space="preserve">
          <source>BeanContext.instantiateChild()</source>
          <target state="translated">BeanContext.instantiateChild()</target>
        </trans-unit>
        <trans-unit id="828cf5921264cba2a4a5f8f605eb4b8fbfdd946c" translate="yes" xml:space="preserve">
          <source>BeanContext.removeBeanContextMembershipListener()</source>
          <target state="translated">BeanContext.removeBeanContextMembershipListener()</target>
        </trans-unit>
        <trans-unit id="0c96018c78bce1c1b4d13c81e2dbdaa092fd6497" translate="yes" xml:space="preserve">
          <source>BeanContextChild</source>
          <target state="translated">BeanContextChild</target>
        </trans-unit>
        <trans-unit id="0311f80e4c6a36512a30729d47cb531c4b1dcec1" translate="yes" xml:space="preserve">
          <source>BeanContextChild.addPropertyChangeListener()</source>
          <target state="translated">BeanContextChild.addPropertyChangeListener()</target>
        </trans-unit>
        <trans-unit id="b443e4dbf67f926e123679dac8746788c81ef71e" translate="yes" xml:space="preserve">
          <source>BeanContextChild.addVetoableChangeListener()</source>
          <target state="translated">BeanContextChild.addVetoableChangeListener()</target>
        </trans-unit>
        <trans-unit id="446975a774283316058bd6383390fb4a6e58be65" translate="yes" xml:space="preserve">
          <source>BeanContextChild.getBeanContext()</source>
          <target state="translated">BeanContextChild.getBeanContext()</target>
        </trans-unit>
        <trans-unit id="501d498efa235f4084665fb80f6fa3f07efe8895" translate="yes" xml:space="preserve">
          <source>BeanContextChild.removePropertyChangeListener()</source>
          <target state="translated">BeanContextChild.removePropertyChangeListener()</target>
        </trans-unit>
        <trans-unit id="fb55a1d88e47fdc1d2b7e473f724128bd97a8058" translate="yes" xml:space="preserve">
          <source>BeanContextChild.removeVetoableChangeListener()</source>
          <target state="translated">BeanContextChild.removeVetoableChangeListener()</target>
        </trans-unit>
        <trans-unit id="0e754a0be4390c222d5fc301ec04320f01bd8968" translate="yes" xml:space="preserve">
          <source>BeanContextChild.setBeanContext()</source>
          <target state="translated">BeanContextChild.setBeanContext()</target>
        </trans-unit>
        <trans-unit id="d3d055f9b15a1b44db58caf1c0276c4e5c87911b" translate="yes" xml:space="preserve">
          <source>BeanContextChildComponentProxy</source>
          <target state="translated">BeanContextChildComponentProxy</target>
        </trans-unit>
        <trans-unit id="a5448051ba0e5b33961e8cc4e24971b1ef4bfd29" translate="yes" xml:space="preserve">
          <source>BeanContextChildComponentProxy.getComponent()</source>
          <target state="translated">BeanContextChildComponentProxy.getComponent()</target>
        </trans-unit>
        <trans-unit id="99de42bd712f63bb80091f370cbe825e44053d43" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport</source>
          <target state="translated">BeanContextChildSupport</target>
        </trans-unit>
        <trans-unit id="95d04d3d647033fff27c89ce04b32019372c7d4c" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.addPropertyChangeListener()</source>
          <target state="translated">BeanContextChildSupport.addPropertyChangeListener()</target>
        </trans-unit>
        <trans-unit id="4188957505f3c0b7b280ecafb56b6e6295cc2397" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.addVetoableChangeListener()</source>
          <target state="translated">BeanContextChildSupport.addVetoableChangeListener()</target>
        </trans-unit>
        <trans-unit id="cc07aa35d387cd5b7b4c6e451757598f798efca2" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.firePropertyChange()</source>
          <target state="translated">BeanContextChildSupport.firePropertyChange()</target>
        </trans-unit>
        <trans-unit id="55ea548cc400d51cc07272fa9fd6dbae0b81afcb" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.fireVetoableChange()</source>
          <target state="translated">BeanContextChildSupport.fireVetoableChange()</target>
        </trans-unit>
        <trans-unit id="824b2b29162d08a2a3d0831a1c79c215c117204e" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.getBeanContext()</source>
          <target state="translated">BeanContextChildSupport.getBeanContext()</target>
        </trans-unit>
        <trans-unit id="8b70112d2faefbf3f875e4f58f1dce9ef7d20908" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.getBeanContextChildPeer()</source>
          <target state="translated">BeanContextChildSupport.getBeanContextChildPeer()</target>
        </trans-unit>
        <trans-unit id="912ab1e9facf096d1eb0e2923a2d63285f542d8f" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.initializeBeanContextResources()</source>
          <target state="translated">BeanContextChildSupport.initializeBeanContextResources()</target>
        </trans-unit>
        <trans-unit id="f3a3ae29f8f36f87d6af3734343d6da2c1712918" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.isDelegated()</source>
          <target state="translated">BeanContextChildSupport.isDelegated()</target>
        </trans-unit>
        <trans-unit id="827108e52200a547a316b3e4525c63eef7863c00" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.releaseBeanContextResources()</source>
          <target state="translated">BeanContextChildSupport.releaseBeanContextResources()</target>
        </trans-unit>
        <trans-unit id="404b4cc5b097075207fe1174557546d46e18dafb" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.removePropertyChangeListener()</source>
          <target state="translated">BeanContextChildSupport.removePropertyChangeListener()</target>
        </trans-unit>
        <trans-unit id="a9da19dc7f6656a111da038805de5a529dc9736c" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.removeVetoableChangeListener()</source>
          <target state="translated">BeanContextChildSupport.removeVetoableChangeListener()</target>
        </trans-unit>
        <trans-unit id="4eb573c3eef2e2e8cbf5d9f515f89d5b2de7b71e" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.serviceAvailable()</source>
          <target state="translated">BeanContextChildSupport.serviceAvailable()</target>
        </trans-unit>
        <trans-unit id="6e092db548897c6fd7bf8a5e91dd421d447c6bee" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.serviceRevoked()</source>
          <target state="translated">BeanContextChildSupport.serviceRevoked()</target>
        </trans-unit>
        <trans-unit id="ebe8016d4100481e4780298c1d5ab27700a336e3" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.setBeanContext()</source>
          <target state="translated">BeanContextChildSupport.setBeanContext()</target>
        </trans-unit>
        <trans-unit id="55d123fb385131eea57da4f0c7b2f0e744e2ae93" translate="yes" xml:space="preserve">
          <source>BeanContextChildSupport.validatePendingSetBeanContext()</source>
          <target state="translated">BeanContextChildSupport.validatePendingSetBeanContext()</target>
        </trans-unit>
        <trans-unit id="deeafcea830d355d7ff69390ad54bed10ab722bf" translate="yes" xml:space="preserve">
          <source>BeanContextContainerProxy</source>
          <target state="translated">BeanContextContainerProxy</target>
        </trans-unit>
        <trans-unit id="5015a2992fa1ee31dd2029ffbd2a9843850bcba5" translate="yes" xml:space="preserve">
          <source>BeanContextContainerProxy.getContainer()</source>
          <target state="translated">BeanContextContainerProxy.getContainer()</target>
        </trans-unit>
        <trans-unit id="297018be5cf90fcca4f11a3da51c607faceae648" translate="yes" xml:space="preserve">
          <source>BeanContextEvent</source>
          <target state="translated">BeanContextEvent</target>
        </trans-unit>
        <trans-unit id="5e2a1ae643d5820060d8b2dd99c74256e51f965c" translate="yes" xml:space="preserve">
          <source>BeanContextEvent.getBeanContext()</source>
          <target state="translated">BeanContextEvent.getBeanContext()</target>
        </trans-unit>
        <trans-unit id="c692f4199f3bd12452a0938e121c5448c9757788" translate="yes" xml:space="preserve">
          <source>BeanContextEvent.getPropagatedFrom()</source>
          <target state="translated">BeanContextEvent.getPropagatedFrom()</target>
        </trans-unit>
        <trans-unit id="b3647850719fcea6967c24cd0b59c43c5467fced" translate="yes" xml:space="preserve">
          <source>BeanContextEvent.isPropagated()</source>
          <target state="translated">BeanContextEvent.isPropagated()</target>
        </trans-unit>
        <trans-unit id="087fca3c3a71e10fe7e4b0dbcd6f31549211b5d7" translate="yes" xml:space="preserve">
          <source>BeanContextEvent.setPropagatedFrom()</source>
          <target state="translated">BeanContextEvent.setPropagatedFrom()</target>
        </trans-unit>
        <trans-unit id="f06c2ea76c6cad3f6665cf6d5cbc65b9eac9998d" translate="yes" xml:space="preserve">
          <source>BeanContextMembershipEvent</source>
          <target state="translated">BeanContextMembershipEvent</target>
        </trans-unit>
        <trans-unit id="7fc83f34d41ae613e06ba60c6c81a497f0d89b8d" translate="yes" xml:space="preserve">
          <source>BeanContextMembershipEvent.contains()</source>
          <target state="translated">BeanContextMembershipEvent.contains()</target>
        </trans-unit>
        <trans-unit id="d22d8f4d43c16211d4939f04c8ccb26bc2bd817c" translate="yes" xml:space="preserve">
          <source>BeanContextMembershipEvent.iterator()</source>
          <target state="translated">BeanContextMembershipEvent.iterator()</target>
        </trans-unit>
        <trans-unit id="0e9b579457289c5ebb4a55ee09e20e2441f4eb9b" translate="yes" xml:space="preserve">
          <source>BeanContextMembershipEvent.size()</source>
          <target state="translated">BeanContextMembershipEvent.size()</target>
        </trans-unit>
        <trans-unit id="9bb6f5b135fa64344784a9ae56179be284129a08" translate="yes" xml:space="preserve">
          <source>BeanContextMembershipEvent.toArray()</source>
          <target state="translated">BeanContextMembershipEvent.toArray()</target>
        </trans-unit>
        <trans-unit id="a212c4aee8b5a05cc9452e328c7501f4088d4ee1" translate="yes" xml:space="preserve">
          <source>BeanContextMembershipListener</source>
          <target state="translated">BeanContextMembershipListener</target>
        </trans-unit>
        <trans-unit id="f096244c0f562bafe5bf0e11cb5f0b5168cdd1dc" translate="yes" xml:space="preserve">
          <source>BeanContextMembershipListener.childrenAdded()</source>
          <target state="translated">BeanContextMembershipListener.childrenAdded()</target>
        </trans-unit>
        <trans-unit id="1246c139883b8868b3db4785237c43f75c4142e9" translate="yes" xml:space="preserve">
          <source>BeanContextMembershipListener.childrenRemoved()</source>
          <target state="translated">BeanContextMembershipListener.childrenRemoved()</target>
        </trans-unit>
        <trans-unit id="3eef644e395551a4fbac85f22882727f37181d49" translate="yes" xml:space="preserve">
          <source>BeanContextProxy</source>
          <target state="translated">BeanContextProxy</target>
        </trans-unit>
        <trans-unit id="329223fc27ae1d3a8555d8bb9880d0e2e72d4871" translate="yes" xml:space="preserve">
          <source>BeanContextProxy.getBeanContextProxy()</source>
          <target state="translated">BeanContextProxy.getBeanContextProxy()</target>
        </trans-unit>
        <trans-unit id="2a1a3dafc3db6cfe2b6886a8f561dbee5162fc0d" translate="yes" xml:space="preserve">
          <source>BeanContextServiceAvailableEvent</source>
          <target state="translated">BeanContextServiceAvailableEvent</target>
        </trans-unit>
        <trans-unit id="b2bf8e52971c5c2205241bb3c08938d87ad723aa" translate="yes" xml:space="preserve">
          <source>BeanContextServiceAvailableEvent.getCurrentServiceSelectors()</source>
          <target state="translated">BeanContextServiceAvailableEvent.getCurrentServiceSelectors()</target>
        </trans-unit>
        <trans-unit id="3ba5c606242a388c6bfb1bd46b5eaca0580b4d71" translate="yes" xml:space="preserve">
          <source>BeanContextServiceAvailableEvent.getServiceClass()</source>
          <target state="translated">BeanContextServiceAvailableEvent.getServiceClass()</target>
        </trans-unit>
        <trans-unit id="34917e686eea3cbcbd9eb61faa6da07c4858ac49" translate="yes" xml:space="preserve">
          <source>BeanContextServiceAvailableEvent.getSourceAsBeanContextServices()</source>
          <target state="translated">BeanContextServiceAvailableEvent.getSourceAsBeanContextServices()</target>
        </trans-unit>
        <trans-unit id="2adebcff18b92e15633abf8ee34347d61297e5ab" translate="yes" xml:space="preserve">
          <source>BeanContextServiceProvider</source>
          <target state="translated">BeanContextServiceProvider</target>
        </trans-unit>
        <trans-unit id="8542beb4453cc98ae8a7a5034768432945d3c3b1" translate="yes" xml:space="preserve">
          <source>BeanContextServiceProvider.getCurrentServiceSelectors()</source>
          <target state="translated">BeanContextServiceProvider.getCurrentServiceSelectors()</target>
        </trans-unit>
        <trans-unit id="88be54c2321d68bc7d58dc5fd9e5238a160a31bc" translate="yes" xml:space="preserve">
          <source>BeanContextServiceProvider.getService()</source>
          <target state="translated">BeanContextServiceProvider.getService()</target>
        </trans-unit>
        <trans-unit id="a113a4e4febb61006ca42f13998fbac33f6ce5cf" translate="yes" xml:space="preserve">
          <source>BeanContextServiceProvider.releaseService()</source>
          <target state="translated">BeanContextServiceProvider.releaseService()</target>
        </trans-unit>
        <trans-unit id="fb610c86d20cb9ae6c821229240b620d446dc3da" translate="yes" xml:space="preserve">
          <source>BeanContextServiceProviderBeanInfo</source>
          <target state="translated">BeanContextServiceProviderBeanInfo</target>
        </trans-unit>
        <trans-unit id="a4a7cbcb10dc1db3504fb7e9668482c80e520938" translate="yes" xml:space="preserve">
          <source>BeanContextServiceProviderBeanInfo.getServicesBeanInfo()</source>
          <target state="translated">BeanContextServiceProviderBeanInfo.getServicesBeanInfo()</target>
        </trans-unit>
        <trans-unit id="02932e8a0249cadf834c1a8202efd59f7da74bbb" translate="yes" xml:space="preserve">
          <source>BeanContextServiceProviders wishing to remove a currently registered service from this context may do so via invocation of this method.</source>
          <target state="translated">이 컨텍스트에서 현재 등록 된 서비스를 제거하려는 BeanContextServiceProviders는이 메소드의 호출을 통해이를 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c31ddccca04029ccf2288864c5eba4247e02163e" translate="yes" xml:space="preserve">
          <source>BeanContextServiceProviders wishing to remove a currently registered service from this context may do so via invocation of this method. Upon revocation of the service, the &lt;code&gt;BeanContextServices&lt;/code&gt; fires a &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; to its list of currently registered &lt;code&gt;BeanContextServiceRevokedListeners&lt;/code&gt; and &lt;code&gt;BeanContextServicesListeners&lt;/code&gt;.</source>
          <target state="translated">이 컨텍스트에서 현재 등록 된 서비스를 제거하려는 BeanContextServiceProviders는이 메소드를 호출하여이를 수행 할 수 있습니다. 서비스가 해지되면 &lt;code&gt;BeanContextServices&lt;/code&gt; 는 &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; 를 현재 등록 된 &lt;code&gt;BeanContextServiceRevokedListeners&lt;/code&gt; 및 &lt;code&gt;BeanContextServicesListeners&lt;/code&gt; 목록으로 시작 합니다.</target>
        </trans-unit>
        <trans-unit id="213212b3b42a1c81dd07ec2c966b8aa35020a2ec" translate="yes" xml:space="preserve">
          <source>BeanContextServiceRevokedEvent</source>
          <target state="translated">BeanContextServiceRevokedEvent</target>
        </trans-unit>
        <trans-unit id="f12d3d9269c0f517af47e03aa85a1e103f695ce4" translate="yes" xml:space="preserve">
          <source>BeanContextServiceRevokedEvent.getServiceClass()</source>
          <target state="translated">BeanContextServiceRevokedEvent.getServiceClass()</target>
        </trans-unit>
        <trans-unit id="636b8b5ccd8fa347d7564a5aad835c976814e6aa" translate="yes" xml:space="preserve">
          <source>BeanContextServiceRevokedEvent.getSourceAsBeanContextServices()</source>
          <target state="translated">BeanContextServiceRevokedEvent.getSourceAsBeanContextServices()</target>
        </trans-unit>
        <trans-unit id="720ee8adb892f529fcd5159673d02daab148a6ae" translate="yes" xml:space="preserve">
          <source>BeanContextServiceRevokedEvent.isCurrentServiceInvalidNow()</source>
          <target state="translated">BeanContextServiceRevokedEvent.isCurrentServiceInvalidNow()</target>
        </trans-unit>
        <trans-unit id="168ec8ba389f04e9918ee2948ac67630e743f6d6" translate="yes" xml:space="preserve">
          <source>BeanContextServiceRevokedEvent.isServiceClass()</source>
          <target state="translated">BeanContextServiceRevokedEvent.isServiceClass()</target>
        </trans-unit>
        <trans-unit id="e49b1a5343d8bb57cf6633f216674a5d0d756cb0" translate="yes" xml:space="preserve">
          <source>BeanContextServiceRevokedListener</source>
          <target state="translated">BeanContextServiceRevokedListener</target>
        </trans-unit>
        <trans-unit id="334ac92b73113fa01d0243546120af73dcb41ebe" translate="yes" xml:space="preserve">
          <source>BeanContextServiceRevokedListener.serviceRevoked()</source>
          <target state="translated">BeanContextServiceRevokedListener.serviceRevoked()</target>
        </trans-unit>
        <trans-unit id="6dea41692e49f44bcdd66e53fb33c76ec67dbd16" translate="yes" xml:space="preserve">
          <source>BeanContextServices</source>
          <target state="translated">BeanContextServices</target>
        </trans-unit>
        <trans-unit id="08b51a9fac670b0ad0a86e6520c428210dd132bd" translate="yes" xml:space="preserve">
          <source>BeanContextServices.addBeanContextServicesListener()</source>
          <target state="translated">BeanContextServices.addBeanContextServicesListener()</target>
        </trans-unit>
        <trans-unit id="f49e1502520d4039e697354466e71fa84c60add1" translate="yes" xml:space="preserve">
          <source>BeanContextServices.addService()</source>
          <target state="translated">BeanContextServices.addService()</target>
        </trans-unit>
        <trans-unit id="a6e951b5aaf8afa7324072aa95e1755a0f1c2dd4" translate="yes" xml:space="preserve">
          <source>BeanContextServices.getCurrentServiceClasses()</source>
          <target state="translated">BeanContextServices.getCurrentServiceClasses()</target>
        </trans-unit>
        <trans-unit id="b3785f81eca83069dbf0fc594855103a67a653fa" translate="yes" xml:space="preserve">
          <source>BeanContextServices.getCurrentServiceSelectors()</source>
          <target state="translated">BeanContextServices.getCurrentServiceSelectors()</target>
        </trans-unit>
        <trans-unit id="197bc5a584d593f33e92ef1e4bb8a103ae3782a5" translate="yes" xml:space="preserve">
          <source>BeanContextServices.getService()</source>
          <target state="translated">BeanContextServices.getService()</target>
        </trans-unit>
        <trans-unit id="7e04758865d2b06f446f88259aa1a4ff033d5314" translate="yes" xml:space="preserve">
          <source>BeanContextServices.hasService()</source>
          <target state="translated">BeanContextServices.hasService()</target>
        </trans-unit>
        <trans-unit id="0f22a1360badea47401b7acea0a2d49c1f350b60" translate="yes" xml:space="preserve">
          <source>BeanContextServices.releaseService()</source>
          <target state="translated">BeanContextServices.releaseService()</target>
        </trans-unit>
        <trans-unit id="1aef5c0ba32adb028cdbda2612d912406611a32b" translate="yes" xml:space="preserve">
          <source>BeanContextServices.removeBeanContextServicesListener()</source>
          <target state="translated">BeanContextServices.removeBeanContextServicesListener()</target>
        </trans-unit>
        <trans-unit id="a49552253c3aa5ca7b7236b70d75be19395e235f" translate="yes" xml:space="preserve">
          <source>BeanContextServices.revokeService()</source>
          <target state="translated">BeanContextServices.revokeService()</target>
        </trans-unit>
        <trans-unit id="b412c8957a8c67948fcc787eb5571589b0c1a216" translate="yes" xml:space="preserve">
          <source>BeanContextServicesListener</source>
          <target state="translated">BeanContextServicesListener</target>
        </trans-unit>
        <trans-unit id="0cb50781d2ef396e6cb4c9f3a0b66c5e4f1b70e1" translate="yes" xml:space="preserve">
          <source>BeanContextServicesListener callback, propagates event to all currently registered listeners and BeanContextServices children, if this BeanContextService does not already implement this service itself.</source>
          <target state="translated">BeanContextServicesListener 콜백은이 BeanContextService가이 서비스 자체를 아직 구현하지 않은 경우 현재 등록 된 모든 리스너 및 BeanContextServices 자식에게 이벤트를 전파합니다.</target>
        </trans-unit>
        <trans-unit id="131c446873127e3b28e1a0e2c04c32e1bbe5c8f2" translate="yes" xml:space="preserve">
          <source>BeanContextServicesListener callback, propagates event to all currently registered listeners and BeanContextServices children, if this BeanContextService does not already implement this service itself. subclasses may override or envelope this method to implement their own propagation semantics.</source>
          <target state="translated">BeanContextServicesListener 콜백은이 BeanContextService가이 서비스 자체를 아직 구현하지 않은 경우 현재 등록 된 모든 리스너 및 BeanContextServices 하위에 이벤트를 전파합니다. 서브 클래스는 자체 전파 시맨틱을 구현하기 위해이 메소드를 대체하거나 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76bbd8c39509d5f12868d657786e6a62afc0eeed" translate="yes" xml:space="preserve">
          <source>BeanContextServicesListener.serviceAvailable()</source>
          <target state="translated">BeanContextServicesListener.serviceAvailable()</target>
        </trans-unit>
        <trans-unit id="382df2cb9bbc6c80197ebf159dd1b0c0b019dc95" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport</source>
          <target state="translated">BeanContextServicesSupport</target>
        </trans-unit>
        <trans-unit id="a420ff8b1b6173fffaca2f1325f28a37a1cb14ea" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.BCSSChild</source>
          <target state="translated">BeanContextServicesSupport.BCSSChild</target>
        </trans-unit>
        <trans-unit id="0385c3c334ee6fc970aacb687a14d919f6dcbdc1" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.BCSSProxyServiceProvider</source>
          <target state="translated">BeanContextServicesSupport.BCSSProxyServiceProvider</target>
        </trans-unit>
        <trans-unit id="fcdaae49afc5cc8c79c1cd4275aa66bb697b71a8" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.BCSSProxyServiceProvider.getCurrentServiceSelectors()</source>
          <target state="translated">BeanContextServicesSupport.BCSSProxyServiceProvider.getCurrentServiceSelectors()</target>
        </trans-unit>
        <trans-unit id="2a5fc986c31a4a4b5475dd0b1abf8e12638d0a78" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.BCSSProxyServiceProvider.getService()</source>
          <target state="translated">BeanContextServicesSupport.BCSSProxyServiceProvider.getService()</target>
        </trans-unit>
        <trans-unit id="c64f2219bd224ba011d3639efa292adc630fa83f" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.BCSSProxyServiceProvider.releaseService()</source>
          <target state="translated">BeanContextServicesSupport.BCSSProxyServiceProvider.releaseService()</target>
        </trans-unit>
        <trans-unit id="dbdea8630f90a78b85f25988ef193f16ec23e9d7" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.BCSSProxyServiceProvider.serviceRevoked()</source>
          <target state="translated">BeanContextServicesSupport.BCSSProxyServiceProvider.serviceRevoked()</target>
        </trans-unit>
        <trans-unit id="fb2876806b277d27dfc54d63888637caf1600584" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.BCSSServiceProvider</source>
          <target state="translated">BeanContextServicesSupport.BCSSServiceProvider</target>
        </trans-unit>
        <trans-unit id="a74cb6c3be7b6b05ce01f9e9e5f97049f2328360" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.BCSSServiceProvider.getServiceProvider()</source>
          <target state="translated">BeanContextServicesSupport.BCSSServiceProvider.getServiceProvider()</target>
        </trans-unit>
        <trans-unit id="f7c974eb0c00eb3a472e4ced4d648e56c3b08e18" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.addBeanContextServicesListener()</source>
          <target state="translated">BeanContextServicesSupport.addBeanContextServicesListener()</target>
        </trans-unit>
        <trans-unit id="e8d8e6e3d064dc092591e80bf90fb4213370807b" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.addService()</source>
          <target state="translated">BeanContextServicesSupport.addService()</target>
        </trans-unit>
        <trans-unit id="755180764698fb7533af1b5693818c801a88c727" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.bcsPreDeserializationHook()</source>
          <target state="translated">BeanContextServicesSupport.bcsPreDeserializationHook()</target>
        </trans-unit>
        <trans-unit id="43fa1c9503e790058d3e6c98ca42f8987d244505" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.bcsPreSerializationHook()</source>
          <target state="translated">BeanContextServicesSupport.bcsPreSerializationHook()</target>
        </trans-unit>
        <trans-unit id="34f40e439999ed4f89469daa2eeac917f4a2c839" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.childJustRemovedHook()</source>
          <target state="translated">BeanContextServicesSupport.childJustRemovedHook()</target>
        </trans-unit>
        <trans-unit id="cbe11ba37d088b38a1a21e41b119310caf6c8dc7" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.createBCSChild()</source>
          <target state="translated">BeanContextServicesSupport.createBCSChild()</target>
        </trans-unit>
        <trans-unit id="5873e6b5aa12ab1b4f57eda0d0015a9b7f03ba52" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.createBCSSServiceProvider()</source>
          <target state="translated">BeanContextServicesSupport.createBCSSServiceProvider()</target>
        </trans-unit>
        <trans-unit id="06ff028ed16af635d0457443bb06edd8475c16de" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.fireServiceAdded()</source>
          <target state="translated">BeanContextServicesSupport.fireServiceAdded()</target>
        </trans-unit>
        <trans-unit id="0d966028222b809a7c11568af0fdd88ff449623f" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.fireServiceRevoked()</source>
          <target state="translated">BeanContextServicesSupport.fireServiceRevoked()</target>
        </trans-unit>
        <trans-unit id="712d3e7abc82489363696aaf1056edb151086c78" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.getBeanContextServicesPeer()</source>
          <target state="translated">BeanContextServicesSupport.getBeanContextServicesPeer()</target>
        </trans-unit>
        <trans-unit id="9a3c06107e05f7155e452e462dff6d46a7778145" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.getChildBeanContextServicesListener()</source>
          <target state="translated">BeanContextServicesSupport.getChildBeanContextServicesListener()</target>
        </trans-unit>
        <trans-unit id="4f477d014751b32c84a39cd4769163b317f3a64a" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.getCurrentServiceClasses()</source>
          <target state="translated">BeanContextServicesSupport.getCurrentServiceClasses()</target>
        </trans-unit>
        <trans-unit id="03d6a84942e9dc090e22ff3b8af6b69443dd707e" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.getCurrentServiceSelectors()</source>
          <target state="translated">BeanContextServicesSupport.getCurrentServiceSelectors()</target>
        </trans-unit>
        <trans-unit id="4e4595ac23598aaf761ee5c12d5d94b830e71920" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.getService()</source>
          <target state="translated">BeanContextServicesSupport.getService()</target>
        </trans-unit>
        <trans-unit id="feb091b2ca76df642788431d6849e53ecac07fe1" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.hasService()</source>
          <target state="translated">BeanContextServicesSupport.hasService()</target>
        </trans-unit>
        <trans-unit id="3e99882ad992b0f32e4dd2b1bb4c28b28bc09ec0" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.initialize()</source>
          <target state="translated">BeanContextServicesSupport.initialize()</target>
        </trans-unit>
        <trans-unit id="f11bd73bc41352eeca8e32d13263ff1230488dd9" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.initializeBeanContextResources()</source>
          <target state="translated">BeanContextServicesSupport.initializeBeanContextResources()</target>
        </trans-unit>
        <trans-unit id="839c362611afff79022b99c14035496ff43dcf42" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.releaseBeanContextResources()</source>
          <target state="translated">BeanContextServicesSupport.releaseBeanContextResources()</target>
        </trans-unit>
        <trans-unit id="97f09cee60c454b0cb7d75931684c1840d4837cb" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.releaseService()</source>
          <target state="translated">BeanContextServicesSupport.releaseService()</target>
        </trans-unit>
        <trans-unit id="fb07d4d95bf6b0092e9306602d0aaf502f62cc91" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.removeBeanContextServicesListener()</source>
          <target state="translated">BeanContextServicesSupport.removeBeanContextServicesListener()</target>
        </trans-unit>
        <trans-unit id="b5c35859433d93ed5baef82b9c83198a109d530f" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.revokeService()</source>
          <target state="translated">BeanContextServicesSupport.revokeService()</target>
        </trans-unit>
        <trans-unit id="e5776a35867f159e8803a0da5a8b9afadd49e3d1" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.serviceAvailable()</source>
          <target state="translated">BeanContextServicesSupport.serviceAvailable()</target>
        </trans-unit>
        <trans-unit id="46d1500c286753038054e16fc4fb7592339a76dc" translate="yes" xml:space="preserve">
          <source>BeanContextServicesSupport.serviceRevoked()</source>
          <target state="translated">BeanContextServicesSupport.serviceRevoked()</target>
        </trans-unit>
        <trans-unit id="691316247257a11e2b7219e1be4f0e4c1128dcb0" translate="yes" xml:space="preserve">
          <source>BeanContextSupport</source>
          <target state="translated">BeanContextSupport</target>
        </trans-unit>
        <trans-unit id="70cccef6a9935d4f1cf5e01ae0ca189b4c3c2f62" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.BCSChild</source>
          <target state="translated">BeanContextSupport.BCSChild</target>
        </trans-unit>
        <trans-unit id="b583e5734992ea9204c9f2ec7ebcbfe9ce5bab82" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.BCSIterator</source>
          <target state="translated">BeanContextSupport.BCSIterator</target>
        </trans-unit>
        <trans-unit id="18dd536bb0eb21543cc1476ebdfa34040e8f319a" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.BCSIterator.hasNext()</source>
          <target state="translated">BeanContextSupport.BCSIterator.hasNext()</target>
        </trans-unit>
        <trans-unit id="f57a0fdc6b5369d8d1025547d451cd7cd4d2deda" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.BCSIterator.next()</source>
          <target state="translated">BeanContextSupport.BCSIterator.next()</target>
        </trans-unit>
        <trans-unit id="eea557f2716bd911d8a144dc70395554bf29111a" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.BCSIterator.remove()</source>
          <target state="translated">BeanContextSupport.BCSIterator.remove()</target>
        </trans-unit>
        <trans-unit id="622bfcb38b8309e15f641b27f3ae2a44cc505cb0" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.add()</source>
          <target state="translated">BeanContextSupport.add()</target>
        </trans-unit>
        <trans-unit id="1531bb0a410f25a2f73d2a46503da83208d8be29" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.addAll()</source>
          <target state="translated">BeanContextSupport.addAll()</target>
        </trans-unit>
        <trans-unit id="aefb876f3ccde1c94680c99245dc84741c3b2c2b" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.addBeanContextMembershipListener()</source>
          <target state="translated">BeanContextSupport.addBeanContextMembershipListener()</target>
        </trans-unit>
        <trans-unit id="ece74503d78d287baf5876c85377e091a741a581" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.avoidingGui()</source>
          <target state="translated">BeanContextSupport.avoidingGui()</target>
        </trans-unit>
        <trans-unit id="b20329f7e784914621b28065314383207d03a129" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.bcsChildren()</source>
          <target state="translated">BeanContextSupport.bcsChildren()</target>
        </trans-unit>
        <trans-unit id="c1acaaf760be13c93ce5ffec759144a316f14a6f" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.bcsPreDeserializationHook()</source>
          <target state="translated">BeanContextSupport.bcsPreDeserializationHook()</target>
        </trans-unit>
        <trans-unit id="e79f8962a5ea53fd1e085ee99b392e34e778ccef" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.bcsPreSerializationHook()</source>
          <target state="translated">BeanContextSupport.bcsPreSerializationHook()</target>
        </trans-unit>
        <trans-unit id="251e3f1ea92f7f1d60ed5cc1cf5cd773fa321e1d" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.childDeserializedHook()</source>
          <target state="translated">BeanContextSupport.childDeserializedHook()</target>
        </trans-unit>
        <trans-unit id="20b7655006a12ecc86ca5694f3fca1e141f784d5" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.childJustAddedHook()</source>
          <target state="translated">BeanContextSupport.childJustAddedHook()</target>
        </trans-unit>
        <trans-unit id="29e7ecd57c76178cf2559eec903ea451c469bd58" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.childJustRemovedHook()</source>
          <target state="translated">BeanContextSupport.childJustRemovedHook()</target>
        </trans-unit>
        <trans-unit id="b95ce1b077caaedf9565771ffd4bfc78f8d72641" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.classEquals()</source>
          <target state="translated">BeanContextSupport.classEquals()</target>
        </trans-unit>
        <trans-unit id="99249b0076b22b9d887728c03078d3457dca9a9d" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.clear()</source>
          <target state="translated">BeanContextSupport.clear()</target>
        </trans-unit>
        <trans-unit id="fd294c342e8f2d0c8d361e4a3ab2e388d5f76a81" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.contains()</source>
          <target state="translated">BeanContextSupport.contains()</target>
        </trans-unit>
        <trans-unit id="d96573b2ddddfedab057af190fedb332ea5eb4ce" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.containsAll()</source>
          <target state="translated">BeanContextSupport.containsAll()</target>
        </trans-unit>
        <trans-unit id="76772e499b8901818d11ab8b1fb2c6938a38810d" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.containsKey()</source>
          <target state="translated">BeanContextSupport.containsKey()</target>
        </trans-unit>
        <trans-unit id="a1e55ede80aa09f84e520a351f26569f3f9a3635" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.copyChildren()</source>
          <target state="translated">BeanContextSupport.copyChildren()</target>
        </trans-unit>
        <trans-unit id="c6dc6dfea4830225cd2a828f1bc9527eb7fc0bdd" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.createBCSChild()</source>
          <target state="translated">BeanContextSupport.createBCSChild()</target>
        </trans-unit>
        <trans-unit id="d6c88db9cc72e68818dd24081db2d3b8cce4195e" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.deserialize()</source>
          <target state="translated">BeanContextSupport.deserialize()</target>
        </trans-unit>
        <trans-unit id="41ae64674eb32793a878c8a284904856bbc83c97" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.dontUseGui()</source>
          <target state="translated">BeanContextSupport.dontUseGui()</target>
        </trans-unit>
        <trans-unit id="c9951e4e37252028b75a54248d15aa6e21947b0b" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.fireChildrenAdded()</source>
          <target state="translated">BeanContextSupport.fireChildrenAdded()</target>
        </trans-unit>
        <trans-unit id="2b2c2e2129033ed8e98aeec47dbf1bf80edddd4d" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.fireChildrenRemoved()</source>
          <target state="translated">BeanContextSupport.fireChildrenRemoved()</target>
        </trans-unit>
        <trans-unit id="57e09eb748f4063558e73b164db6e56b3d8a1f69" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getBeanContextPeer()</source>
          <target state="translated">BeanContextSupport.getBeanContextPeer()</target>
        </trans-unit>
        <trans-unit id="306927027ef4fadcce70c1306bfdceabd9ac5d9b" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getChildBeanContextChild()</source>
          <target state="translated">BeanContextSupport.getChildBeanContextChild()</target>
        </trans-unit>
        <trans-unit id="5f377dacaf6a0198da44856ba1b34d14828deeb9" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getChildBeanContextMembershipListener()</source>
          <target state="translated">BeanContextSupport.getChildBeanContextMembershipListener()</target>
        </trans-unit>
        <trans-unit id="937466c14b9e48da93d59870a49b9aa8d6923a69" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getChildPropertyChangeListener()</source>
          <target state="translated">BeanContextSupport.getChildPropertyChangeListener()</target>
        </trans-unit>
        <trans-unit id="d0aea4b079655be054eea20ee7575c465693cf64" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getChildSerializable()</source>
          <target state="translated">BeanContextSupport.getChildSerializable()</target>
        </trans-unit>
        <trans-unit id="47e86769ede2d80592a3463a03067ad5b2d53cad" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getChildVetoableChangeListener()</source>
          <target state="translated">BeanContextSupport.getChildVetoableChangeListener()</target>
        </trans-unit>
        <trans-unit id="2dfc3aa38549ed1fb57db844757780c01e245034" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getChildVisibility()</source>
          <target state="translated">BeanContextSupport.getChildVisibility()</target>
        </trans-unit>
        <trans-unit id="487b74aa641bb54359a9bf3dc580125a0196fa92" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getLocale()</source>
          <target state="translated">BeanContextSupport.getLocale()</target>
        </trans-unit>
        <trans-unit id="25751d4da9e6832f81e18e387ec51d35b5238591" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getResource()</source>
          <target state="translated">BeanContextSupport.getResource()</target>
        </trans-unit>
        <trans-unit id="1fb8f7ab9c3cb90576886cb8302816aca51de526" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.getResourceAsStream()</source>
          <target state="translated">BeanContextSupport.getResourceAsStream()</target>
        </trans-unit>
        <trans-unit id="4f3021e976ea2a45c098b57c10971e420837cf49" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.initialize()</source>
          <target state="translated">BeanContextSupport.initialize()</target>
        </trans-unit>
        <trans-unit id="277c4ea6759cb7286d4ead9f353b7d2ef3e1dcdb" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.instantiateChild()</source>
          <target state="translated">BeanContextSupport.instantiateChild()</target>
        </trans-unit>
        <trans-unit id="f0d71294b1cb403cfbb26ea2b80a5a0a5b052a9d" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.isDesignTime()</source>
          <target state="translated">BeanContextSupport.isDesignTime()</target>
        </trans-unit>
        <trans-unit id="a7c0fd4785c89c59dab2531e2e5dbaa855d5250d" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.isEmpty()</source>
          <target state="translated">BeanContextSupport.isEmpty()</target>
        </trans-unit>
        <trans-unit id="d34b965ae04168f6cbc2e75a7f0f2643654d4d3f" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.isSerializing()</source>
          <target state="translated">BeanContextSupport.isSerializing()</target>
        </trans-unit>
        <trans-unit id="e12687bb21474daf7f271c3a0fe9625ad8d7fe29" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.iterator()</source>
          <target state="translated">BeanContextSupport.iterator()</target>
        </trans-unit>
        <trans-unit id="b991be4b05cf5bd7b19f30f232d1bf291592d2c0" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.needsGui()</source>
          <target state="translated">BeanContextSupport.needsGui()</target>
        </trans-unit>
        <trans-unit id="fe928a6c3f38c6faf9f15321189e6b56b63500b2" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.okToUseGui()</source>
          <target state="translated">BeanContextSupport.okToUseGui()</target>
        </trans-unit>
        <trans-unit id="31550820b5cda810c05e567edc58f3304265d596" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.propertyChange()</source>
          <target state="translated">BeanContextSupport.propertyChange()</target>
        </trans-unit>
        <trans-unit id="f161645d9a7d258ea7483e1f51325c65e672512d" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.readChildren()</source>
          <target state="translated">BeanContextSupport.readChildren()</target>
        </trans-unit>
        <trans-unit id="61d84ef4214d63dbef02d24206e58c03242d5968" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.remove()</source>
          <target state="translated">BeanContextSupport.remove()</target>
        </trans-unit>
        <trans-unit id="a807dc4056d098c9005eaaeb750e614308a9349b" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.removeAll()</source>
          <target state="translated">BeanContextSupport.removeAll()</target>
        </trans-unit>
        <trans-unit id="4f03d57249306ae858ebbac37a731d55ce22422a" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.removeBeanContextMembershipListener()</source>
          <target state="translated">BeanContextSupport.removeBeanContextMembershipListener()</target>
        </trans-unit>
        <trans-unit id="10b165318c3d0be1a35c530f2df49254d0999b63" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.retainAll()</source>
          <target state="translated">BeanContextSupport.retainAll()</target>
        </trans-unit>
        <trans-unit id="8227b8fd287ce0e6f406e0a478497245705884f7" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.serialize()</source>
          <target state="translated">BeanContextSupport.serialize()</target>
        </trans-unit>
        <trans-unit id="786b23a64827bc892c35ebbc6e40bc72bae622b5" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.setDesignTime()</source>
          <target state="translated">BeanContextSupport.setDesignTime()</target>
        </trans-unit>
        <trans-unit id="2da856a5a05a10e3ee56351db6268ef52d93ca71" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.setLocale()</source>
          <target state="translated">BeanContextSupport.setLocale()</target>
        </trans-unit>
        <trans-unit id="1fb54131cdafcbdf798a3ba6f37dc9e345a4ea5e" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.size()</source>
          <target state="translated">BeanContextSupport.size()</target>
        </trans-unit>
        <trans-unit id="7f0db6ff2aa468c79b10a3de99addec6bf2e922d" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.toArray()</source>
          <target state="translated">BeanContextSupport.toArray()</target>
        </trans-unit>
        <trans-unit id="01c4e53b8f5865fb265ccbf4b25d1be0fa1e3de2" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.validatePendingAdd()</source>
          <target state="translated">BeanContextSupport.validatePendingAdd()</target>
        </trans-unit>
        <trans-unit id="cf17e6494455e844b573ddb150e27826d52d81e5" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.validatePendingRemove()</source>
          <target state="translated">BeanContextSupport.validatePendingRemove()</target>
        </trans-unit>
        <trans-unit id="39ab6cc41a60f5183c1137b1a769367da30126d7" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.vetoableChange()</source>
          <target state="translated">BeanContextSupport.vetoableChange()</target>
        </trans-unit>
        <trans-unit id="f447975cb1a6ac3c7569308d227433965bc8f873" translate="yes" xml:space="preserve">
          <source>BeanContextSupport.writeChildren()</source>
          <target state="translated">BeanContextSupport.writeChildren()</target>
        </trans-unit>
        <trans-unit id="78d4fa2bd86998cecd983d09439813a6d97ab329" translate="yes" xml:space="preserve">
          <source>BeanDescriptor</source>
          <target state="translated">BeanDescriptor</target>
        </trans-unit>
        <trans-unit id="7591997d5ebb7ff48b3baea41f6310694d46acd0" translate="yes" xml:space="preserve">
          <source>BeanDescriptor.getBeanClass()</source>
          <target state="translated">BeanDescriptor.getBeanClass()</target>
        </trans-unit>
        <trans-unit id="6627919b1e36c2f9736f53505f8d629b4171677c" translate="yes" xml:space="preserve">
          <source>BeanDescriptor.getCustomizerClass()</source>
          <target state="translated">BeanDescriptor.getCustomizerClass()</target>
        </trans-unit>
        <trans-unit id="b42019fdb9a373a91eae11744abf7c19ca774af0" translate="yes" xml:space="preserve">
          <source>BeanInfo</source>
          <target state="translated">BeanInfo</target>
        </trans-unit>
        <trans-unit id="2fa9bafe3d404f12015fa068c42bc5df21a856cb" translate="yes" xml:space="preserve">
          <source>BeanInfo.getAdditionalBeanInfo()</source>
          <target state="translated">BeanInfo.getAdditionalBeanInfo()</target>
        </trans-unit>
        <trans-unit id="a71f8753ff078906aa372d9d95f03be0dfd9687a" translate="yes" xml:space="preserve">
          <source>BeanInfo.getBeanDescriptor()</source>
          <target state="translated">BeanInfo.getBeanDescriptor()</target>
        </trans-unit>
        <trans-unit id="f343dd290f7b7e3cf889a30f69fc9e5a2d3cedd2" translate="yes" xml:space="preserve">
          <source>BeanInfo.getDefaultEventIndex()</source>
          <target state="translated">BeanInfo.getDefaultEventIndex()</target>
        </trans-unit>
        <trans-unit id="b3e162c551b8fb6b37d9506d7878c379c28a3bee" translate="yes" xml:space="preserve">
          <source>BeanInfo.getDefaultPropertyIndex()</source>
          <target state="translated">BeanInfo.getDefaultPropertyIndex()</target>
        </trans-unit>
        <trans-unit id="68d4d05079924998545c3f3172b5b15a7c0192c6" translate="yes" xml:space="preserve">
          <source>BeanInfo.getEventSetDescriptors()</source>
          <target state="translated">BeanInfo.getEventSetDescriptors()</target>
        </trans-unit>
        <trans-unit id="fc301d6b50b69fe69154f86c31e95a79aff6aa44" translate="yes" xml:space="preserve">
          <source>BeanInfo.getIcon()</source>
          <target state="translated">BeanInfo.getIcon()</target>
        </trans-unit>
        <trans-unit id="342aa37804eb29bb70eefc0eefcde68ad0c5063d" translate="yes" xml:space="preserve">
          <source>BeanInfo.getMethodDescriptors()</source>
          <target state="translated">BeanInfo.getMethodDescriptors()</target>
        </trans-unit>
        <trans-unit id="784bf231d9482e1217fadfe68fc229fd357222c7" translate="yes" xml:space="preserve">
          <source>BeanInfo.getPropertyDescriptors()</source>
          <target state="translated">BeanInfo.getPropertyDescriptors()</target>
        </trans-unit>
        <trans-unit id="6e86c39222a525fdf149fbd410b659a2b6ad1676" translate="yes" xml:space="preserve">
          <source>BeanProperty</source>
          <target state="translated">BeanProperty</target>
        </trans-unit>
        <trans-unit id="66d641bac8069cc122a4051898568808f4598c16" translate="yes" xml:space="preserve">
          <source>Beans</source>
          <target state="translated">Beans</target>
        </trans-unit>
        <trans-unit id="b41d836df4be0ad35b22e06a58be92adf38bc7d4" translate="yes" xml:space="preserve">
          <source>Beans.getInstanceOf()</source>
          <target state="translated">Beans.getInstanceOf()</target>
        </trans-unit>
        <trans-unit id="b8ea14cc6fb92aaaaf04a4e37e9311baf406413a" translate="yes" xml:space="preserve">
          <source>Beans.instantiate()</source>
          <target state="translated">Beans.instantiate()</target>
        </trans-unit>
        <trans-unit id="4ff4b0d7d67ecfbc146f58d78661b6140523c0e5" translate="yes" xml:space="preserve">
          <source>Beans.isDesignTime()</source>
          <target state="translated">Beans.isDesignTime()</target>
        </trans-unit>
        <trans-unit id="db0126c1968905c5bfbe282cd8f02f23ed6a5613" translate="yes" xml:space="preserve">
          <source>Beans.isGuiAvailable()</source>
          <target state="translated">Beans.isGuiAvailable()</target>
        </trans-unit>
        <trans-unit id="488223a036d92a2dd85d9b027d31893f51e4d1d2" translate="yes" xml:space="preserve">
          <source>Beans.isInstanceOf()</source>
          <target state="translated">Beans.isInstanceOf()</target>
        </trans-unit>
        <trans-unit id="07fe079ea83cd92d8d3de1f4ec52ce398efd4411" translate="yes" xml:space="preserve">
          <source>Beans.setDesignTime()</source>
          <target state="translated">Beans.setDesignTime()</target>
        </trans-unit>
        <trans-unit id="6a2acdfa02a641d42e41a25722b494f7d551a1ef" translate="yes" xml:space="preserve">
          <source>Beans.setGuiAvailable()</source>
          <target state="translated">Beans.setGuiAvailable()</target>
        </trans-unit>
        <trans-unit id="5eb6aca461ecff25012528fff2d1c77cb9c2e2f9" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;MethodHandle.invoke&lt;/code&gt;&lt;/a&gt; allows for adaptations between the invoked method type and the bootstrap method handle's method type, there is flexibility in the declaration of the bootstrap method. For a dynamically-computed constant the first parameter type of the bootstrap method handle must be assignable to &lt;code&gt;MethodHandles.Lookup&lt;/code&gt;, other than that constraint the same degree of flexibility applies to bootstrap methods of dynamically-computed call sites and dynamically-computed constants. Note: this constraint allows for the future possibility where the bootstrap method is invoked with just the parameter types of static arguments, thereby supporting a wider range of methods compatible with the static arguments (such as methods that don't declare or require the lookup, name, and type meta-data parameters).</source>
          <target state="translated">&lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;MethodHandle.invoke&lt;/code&gt; &lt;/a&gt; 는 호출 된 메소드 유형과 부트 스트랩 메소드 핸들의 메소드 유형 사이의 적응을 허용하기 때문에 부트 스트랩 메소드 선언에 유연성이 있습니다. 동적으로 계산 된 상수의 경우 부트 스트랩 메서드 핸들의 첫 번째 매개 변수 유형을 &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; 에 할당 할 수 있어야합니다., 그 제약을 제외하고는 동일한 수준의 유연성이 동적으로 계산 된 호출 사이트 및 동적으로 계산 된 상수의 부트 스트랩 메서드에 적용됩니다. 참고 :이 제약 조건은 앞으로 부트 스트랩 메서드가 정적 인수의 매개 변수 유형만으로 호출 될 가능성을 허용하므로 정적 인수와 호환되는 더 광범위한 메서드 (예 : 선언하거나 조회를 요구하지 않는 메서드)를 지원합니다. 이름 및 유형 메타 데이터 매개 변수).</target>
        </trans-unit>
        <trans-unit id="37eb9a49bafd7254b80548372d99847867df8221" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;socketoptions#SO_RCVBUF&quot;&gt;&lt;code&gt;SO_RCVBUF&lt;/code&gt;&lt;/a&gt; is a hint, applications that want to verify what size the buffers were set to should call &lt;a href=&quot;#getReceiveBufferSize()&quot;&gt;&lt;code&gt;getReceiveBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_RCVBUF&quot;&gt; &lt;code&gt;SO_RCVBUF&lt;/code&gt; &lt;/a&gt; 는 힌트 이기 때문에 버퍼의 크기를 확인하려는 응용 프로그램은 &lt;a href=&quot;#getReceiveBufferSize()&quot;&gt; &lt;code&gt;getReceiveBufferSize()&lt;/code&gt; &lt;/a&gt; 호출해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="d513247fd563bcf6456e09988a937f842c805bd0" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;socketoptions#SO_RCVBUF&quot;&gt;&lt;code&gt;SO_RCVBUF&lt;/code&gt;&lt;/a&gt; is a hint, applications that want to verify what size the buffers were set to should call &lt;a href=&quot;socket#getReceiveBufferSize--&quot;&gt;&lt;code&gt;getReceiveBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_RCVBUF&quot;&gt; &lt;code&gt;SO_RCVBUF&lt;/code&gt; &lt;/a&gt; 는 힌트 이므로 버퍼가 설정된 크기를 확인하려는 응용 프로그램은 &lt;a href=&quot;socket#getReceiveBufferSize--&quot;&gt; &lt;code&gt;getReceiveBufferSize()&lt;/code&gt; &lt;/a&gt; 호출해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="fcd87146c6cd347248a884ac238eee3a9edaba63" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;socketoptions#SO_SNDBUF&quot;&gt;&lt;code&gt;SO_SNDBUF&lt;/code&gt;&lt;/a&gt; is a hint, applications that want to verify what size the buffers were set to should call &lt;a href=&quot;#getSendBufferSize()&quot;&gt;&lt;code&gt;getSendBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_SNDBUF&quot;&gt; &lt;code&gt;SO_SNDBUF&lt;/code&gt; &lt;/a&gt; 가 힌트 이기 때문에 버퍼의 크기를 확인하려는 응용 프로그램은 &lt;a href=&quot;#getSendBufferSize()&quot;&gt; &lt;code&gt;getSendBufferSize()&lt;/code&gt; &lt;/a&gt; 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ae67a4a505c9488936e7a159d393b16e207eb431" translate="yes" xml:space="preserve">
          <source>Because &lt;a href=&quot;socketoptions#SO_SNDBUF&quot;&gt;&lt;code&gt;SO_SNDBUF&lt;/code&gt;&lt;/a&gt; is a hint, applications that want to verify what size the buffers were set to should call &lt;a href=&quot;socket#getSendBufferSize--&quot;&gt;&lt;code&gt;getSendBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;socketoptions#SO_SNDBUF&quot;&gt; &lt;code&gt;SO_SNDBUF&lt;/code&gt; &lt;/a&gt; 는 힌트 이므로 버퍼가 설정된 크기를 확인하려는 애플리케이션은 &lt;a href=&quot;socket#getSendBufferSize--&quot;&gt; &lt;code&gt;getSendBufferSize()&lt;/code&gt; &lt;/a&gt; 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="0ac53da399eaa89c5f01d9fd94f953caeac309be" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;Properties&lt;/code&gt; inherits from &lt;code&gt;Hashtable&lt;/code&gt;, the &lt;code&gt;put&lt;/code&gt; and &lt;code&gt;putAll&lt;/code&gt; methods can be applied to a &lt;code&gt;Properties&lt;/code&gt; object. Their use is strongly discouraged as they allow the caller to insert entries whose keys or values are not &lt;code&gt;Strings&lt;/code&gt;. The &lt;code&gt;setProperty&lt;/code&gt; method should be used instead. If the &lt;code&gt;store&lt;/code&gt; or &lt;code&gt;save&lt;/code&gt; method is called on a &quot;compromised&quot; &lt;code&gt;Properties&lt;/code&gt; object that contains a non-&lt;code&gt;String&lt;/code&gt; key or value, the call will fail. Similarly, the call to the &lt;code&gt;propertyNames&lt;/code&gt; or &lt;code&gt;list&lt;/code&gt; method will fail if it is called on a &quot;compromised&quot; &lt;code&gt;Properties&lt;/code&gt; object that contains a non-&lt;code&gt;String&lt;/code&gt; key.</source>
          <target state="translated">때문에 &lt;code&gt;Properties&lt;/code&gt; 에서 상속 &lt;code&gt;Hashtable&lt;/code&gt; 은 &lt;code&gt;put&lt;/code&gt; 및 &lt;code&gt;putAll&lt;/code&gt; 에의 방법은에 적용 할 수있는 &lt;code&gt;Properties&lt;/code&gt; 객체입니다. 호출자가 키 또는 값이 &lt;code&gt;Strings&lt;/code&gt; 이 아닌 항목을 삽입 할 수 있으므로 사용하지 않는 것이 좋습니다 . &lt;code&gt;setProperty&lt;/code&gt; 는의 방법 대신에 사용되어야한다. &lt;code&gt;String&lt;/code&gt; 이 아닌 키 또는 값 을 포함하는 &quot;손상된&quot; &lt;code&gt;Properties&lt;/code&gt; 개체 에서 &lt;code&gt;store&lt;/code&gt; 또는 &lt;code&gt;save&lt;/code&gt; 방법을 호출 하면 호출이 실패합니다. 마찬가지로 &quot;compromised&quot; 에서 호출되면 &lt;code&gt;propertyNames&lt;/code&gt; 또는 &lt;code&gt;list&lt;/code&gt; 메소드에 대한 호출 이 실패합니다. &lt;code&gt;Properties&lt;/code&gt; &lt;code&gt;String&lt;/code&gt; 이 아닌 키 를 포함하는 속성 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="9319761d9c76caa9705106483a329c9fe04c06a0" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;PropertyChangeListener&lt;/code&gt;s are notified asynchronously on the</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; 가 비동기 적으로 알림을 받기 때문에</target>
        </trans-unit>
        <trans-unit id="b2e77a7643ae88339cde19b834a91e4b7b3d9173" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;String&lt;/code&gt; is a &lt;em&gt;simple type&lt;/em&gt;, in the sense of &lt;a href=&quot;openmbean/simpletype&quot;&gt;&lt;code&gt;SimpleType&lt;/code&gt;&lt;/a&gt;, it is not changed in the context of an MXBean. The MXBean proxy behaves the same as a Standard MBean proxy (see &lt;a href=&quot;#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;newMBeanProxy&lt;/code&gt;&lt;/a&gt;) for the attribute &lt;code&gt;
     SimpleAttribute&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 은 &lt;em&gt;단순 유형&lt;/em&gt; 이므로 &lt;a href=&quot;openmbean/simpletype&quot;&gt; &lt;code&gt;SimpleType&lt;/code&gt; &lt;/a&gt; 의 의미 에서 MXBean 컨텍스트에서 변경되지 않습니다. MXBean 프록시 는 &lt;code&gt; SimpleAttribute&lt;/code&gt; 속성에 대한 표준 MBean 프록시 ( &lt;a href=&quot;#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;newMBeanProxy&lt;/code&gt; &lt;/a&gt; 참조 ) 와 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="f49a8041b3ec0e2a4b95c69c1fa13090aa890de4" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;String&lt;/code&gt; is a &lt;em&gt;simple type&lt;/em&gt;, in the sense of &lt;a href=&quot;openmbean/simpletype&quot;&gt;&lt;code&gt;SimpleType&lt;/code&gt;&lt;/a&gt;, it is not changed in the context of an MXBean. The MXBean proxy behaves the same as a Standard MBean proxy (see &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;newMBeanProxy&lt;/code&gt;&lt;/a&gt;) for the attribute &lt;code&gt;SimpleAttribute&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 은 &lt;em&gt;단순 유형&lt;/em&gt; 이므로 &lt;a href=&quot;openmbean/simpletype&quot;&gt; &lt;code&gt;SimpleType&lt;/code&gt; &lt;/a&gt; 의 의미 에서 MXBean 컨텍스트에서 변경되지 않습니다. MXBean 프록시 는 &lt;code&gt;SimpleAttribute&lt;/code&gt; 속성에 대한 표준 MBean 프록시 ( &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;newMBeanProxy&lt;/code&gt; &lt;/a&gt; 참조 ) 와 동일하게 작동합니다 .</target>
        </trans-unit>
        <trans-unit id="801a1aa77e25698ca3758626bddfe3cd0c957a54" translate="yes" xml:space="preserve">
          <source>Because &lt;code&gt;SwingWorker&lt;/code&gt; implements &lt;code&gt;Runnable&lt;/code&gt;, a &lt;code&gt;SwingWorker&lt;/code&gt; can be submitted to an &lt;a href=&quot;../../../java.base/java/util/concurrent/executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; for execution.</source>
          <target state="translated">때문에 &lt;code&gt;SwingWorker&lt;/code&gt; 의 구현 &lt;code&gt;Runnable&lt;/code&gt; 를 하는 &lt;code&gt;SwingWorker&lt;/code&gt; 를가 에 제출 될 수 &lt;a href=&quot;../../../java.base/java/util/concurrent/executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt; 실행.</target>
        </trans-unit>
        <trans-unit id="7e2c674d70acde4abaa1ff2fa2660055563d4db0" translate="yes" xml:space="preserve">
          <source>Because SO_RCVBUF is a hint, applications that want to verify what size the buffers were set to should call &lt;a href=&quot;#getReceiveBufferSize()&quot;&gt;&lt;code&gt;getReceiveBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">SO_RCVBUF는 힌트이기 때문에 버퍼의 크기를 확인하려는 응용 프로그램은 &lt;a href=&quot;#getReceiveBufferSize()&quot;&gt; &lt;code&gt;getReceiveBufferSize()&lt;/code&gt; &lt;/a&gt; 호출해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="ec045989b8ec3507e6530b10af51f14d4626ef86" translate="yes" xml:space="preserve">
          <source>Because SO_RCVBUF is a hint, applications that want to verify what size the buffers were set to should call &lt;a href=&quot;datagramsocket#getReceiveBufferSize--&quot;&gt;&lt;code&gt;getReceiveBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">SO_RCVBUF는 힌트이므로 버퍼가 설정된 크기를 확인하려는 응용 프로그램은 &lt;a href=&quot;datagramsocket#getReceiveBufferSize--&quot;&gt; &lt;code&gt;getReceiveBufferSize()&lt;/code&gt; &lt;/a&gt; 호출해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="9e0625975ae813da446d7d9f8ff0bd1a5cd680be" translate="yes" xml:space="preserve">
          <source>Because TIFF is an extensible format, the reader requires information about any tags used by TIFF extensions in order to emit meaningful metadata. Also, TIFF extensions may define new compression types. Both types of information about extensions may be provided by this interface.</source>
          <target state="translated">TIFF는 확장 가능한 형식이므로 독자는 의미있는 메타 데이터를 생성하기 위해 TIFF 확장에서 사용하는 태그에 대한 정보가 필요합니다. 또한 TIFF 확장은 새로운 압축 유형을 정의 할 수 있습니다. 이 인터페이스는 확장에 대한 두 가지 유형의 정보를 모두 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cdf6ac6fa2e3d472ef0fe23d7c9310bfa609e73a" translate="yes" xml:space="preserve">
          <source>Because a &lt;code&gt;CachedRowSet&lt;/code&gt; object stores data in memory, the amount of data that it can contain at any one time is determined by the amount of memory available. To get around this limitation, a &lt;code&gt;CachedRowSet&lt;/code&gt; object can retrieve data from a &lt;code&gt;ResultSet&lt;/code&gt; object in chunks of data, called</source>
          <target state="translated">&lt;code&gt;CachedRowSet&lt;/code&gt; 개체는 데이터를 메모리에 저장 하기 때문에 한 번에 포함 할 수있는 데이터 양은 사용 가능한 메모리 양에 따라 결정됩니다. 이 제한을 해결하기 위해 &lt;code&gt;CachedRowSet&lt;/code&gt; 객체는 &lt;code&gt;ResultSet&lt;/code&gt; 객체에서 다음과 같은 데이터 청크의 데이터를 검색 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6e9850cabb99423d40435feacd1eafa29b99062b" translate="yes" xml:space="preserve">
          <source>Because a &lt;code&gt;Constraints&lt;/code&gt; object's properties -- representing its edges, size, and location -- can all be set independently and yet are interrelated, a &lt;code&gt;Constraints&lt;/code&gt; object can become &lt;em&gt;over-constrained&lt;/em&gt;. For example, if the &lt;code&gt;WEST&lt;/code&gt;, &lt;code&gt;WIDTH&lt;/code&gt; and &lt;code&gt;EAST&lt;/code&gt; edges are all set, steps must be taken to ensure that the first of the formulas above holds. To do this, the &lt;code&gt;Constraints&lt;/code&gt; object throws away the &lt;em&gt;least recently set&lt;/em&gt; constraint so as to make the formulas hold.</source>
          <target state="translated">때문에 &lt;code&gt;Constraints&lt;/code&gt; 객체의 속성 - 가장자리, 크기 및 위치를 나타내는 - 모든 아직 독립적으로 설정 될 상호되는 수하는 &lt;code&gt;Constraints&lt;/code&gt; 객체가 될 수 &lt;em&gt;이상의 제약&lt;/em&gt; . 예를 들어 &lt;code&gt;WEST&lt;/code&gt; , &lt;code&gt;WIDTH&lt;/code&gt; 및 &lt;code&gt;EAST&lt;/code&gt; 모서리가 모두 설정된 경우 위의 첫 번째 공식이 유지되도록 조치를 취해야합니다. 이를 위해 &lt;code&gt;Constraints&lt;/code&gt; 개체는 수식을 유지하기 위해 &lt;em&gt;가장 최근에 설정된&lt;/em&gt; 제약 조건을 버립니다 .</target>
        </trans-unit>
        <trans-unit id="db06d132663a24be43dffbdb5ffe632503ecd1a7" translate="yes" xml:space="preserve">
          <source>Because a &lt;code&gt;Line.Info&lt;/code&gt; knows the class of the line its describes, a &lt;code&gt;DataLine.Info&lt;/code&gt; object can describe &lt;code&gt;DataLine&lt;/code&gt; subinterfaces such as &lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;. You can query a mixer for lines of any of these types, passing an appropriate instance of &lt;code&gt;DataLine.Info&lt;/code&gt; as the argument to a method such as &lt;a href=&quot;mixer#getLine(javax.sound.sampled.Line.Info)&quot;&gt;&lt;code&gt;Mixer.getLine(Line.Info)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">때문에 &lt;code&gt;Line.Info&lt;/code&gt; 는 기술하는 라인의 클래스를 알고하는 &lt;code&gt;DataLine.Info&lt;/code&gt; 의 목적은 설명 할 수 &lt;code&gt;DataLine&lt;/code&gt; 과 같은 서브 &lt;a href=&quot;sourcedataline&quot;&gt; &lt;code&gt;SourceDataLine&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;targetdataline&quot;&gt; &lt;code&gt;TargetDataLine&lt;/code&gt; 를&lt;/a&gt; , 그리고 &lt;a href=&quot;clip&quot;&gt; &lt;code&gt;Clip&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;mixer#getLine(javax.sound.sampled.Line.Info)&quot;&gt; &lt;code&gt;Mixer.getLine(Line.Info)&lt;/code&gt; &lt;/a&gt; 와 같은 메소드에 대한 인수로 &lt;code&gt;DataLine.Info&lt;/code&gt; 의 적절한 인스턴스를 전달하여 이러한 유형의 라인을 믹서에 쿼리 할 수 ​​있습니다 .</target>
        </trans-unit>
        <trans-unit id="5e8f25c54290955a89166ac8543a07477bb7e73c" translate="yes" xml:space="preserve">
          <source>Because a &lt;code&gt;Line.Info&lt;/code&gt; knows the class of the line its describes, a &lt;code&gt;DataLine.Info&lt;/code&gt; object can describe &lt;code&gt;DataLine&lt;/code&gt; subinterfaces such as &lt;code&gt;&lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;, &lt;code&gt;&lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;, and &lt;code&gt;&lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;. You can query a mixer for lines of any of these types, passing an appropriate instance of &lt;code&gt;DataLine.Info&lt;/code&gt; as the argument to a method such as &lt;code&gt;&lt;a href=&quot;mixer#getLine-javax.sound.sampled.Line.Info-&quot;&gt;&lt;code&gt;Mixer.getLine(Line.Info)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Line.Info&lt;/code&gt; 는 해당 라인의 클래스를 알고 있기 때문에 &lt;code&gt;DataLine.Info&lt;/code&gt; 객체는 &lt;code&gt;&lt;a href=&quot;sourcedataline&quot;&gt;&lt;code&gt;SourceDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; , &lt;code&gt;&lt;a href=&quot;targetdataline&quot;&gt;&lt;code&gt;TargetDataLine&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;clip&quot;&gt;&lt;code&gt;Clip&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 과 같은 &lt;code&gt;DataLine&lt;/code&gt; 하위 인터페이스를 설명 할 수 있습니다 . 이러한 유형의 행에 대해 믹서를 쿼리하여 적절한 &lt;code&gt;DataLine.Info&lt;/code&gt; 인스턴스 를 &lt;code&gt;&lt;a href=&quot;mixer#getLine-javax.sound.sampled.Line.Info-&quot;&gt;&lt;code&gt;Mixer.getLine(Line.Info)&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 와 같은 메소드에 인수로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d879dd3f4271702a62035963ea6f1cdc2036946" translate="yes" xml:space="preserve">
          <source>Because a &lt;code&gt;PreparedStatement&lt;/code&gt; object is precompiled, it is possible to know about the &lt;code&gt;ResultSet&lt;/code&gt; object that it will return without having to execute it. Consequently, it is possible to invoke the method &lt;code&gt;getMetaData&lt;/code&gt; on a &lt;code&gt;PreparedStatement&lt;/code&gt; object rather than waiting to execute it and then invoking the &lt;code&gt;ResultSet.getMetaData&lt;/code&gt; method on the &lt;code&gt;ResultSet&lt;/code&gt; object that is returned.</source>
          <target state="translated">&lt;code&gt;PreparedStatement&lt;/code&gt; 객체는 미리 컴파일 되기 때문에 실행하지 않고도 반환 할 &lt;code&gt;ResultSet&lt;/code&gt; 객체 에 대해 알 수 있습니다. 결과적으로, &lt;code&gt;PreparedStatement&lt;/code&gt; 객체 에서 &lt;code&gt;getMetaData&lt;/code&gt; 메소드 를 실행하기를 기다린 다음 반환 된 &lt;code&gt;ResultSet&lt;/code&gt; 객체 에서 &lt;code&gt;ResultSet.getMetaData&lt;/code&gt; 메소드 를 호출하는 대신 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cabd8ff87b7d80eef3389771a8e3fe4207eae222" translate="yes" xml:space="preserve">
          <source>Because a &lt;code&gt;SyncResolver&lt;/code&gt; object is a &lt;code&gt;RowSet&lt;/code&gt; object, an application can use all of the &lt;code&gt;RowSet&lt;/code&gt; methods for moving the cursor to navigate a &lt;code&gt;SyncResolver&lt;/code&gt; object. For example, an application can use the &lt;code&gt;RowSet&lt;/code&gt; method &lt;code&gt;next&lt;/code&gt; to get to each row and then call the &lt;code&gt;SyncResolver&lt;/code&gt; method &lt;code&gt;getStatus&lt;/code&gt; to see if the row contains a conflict. In a row with one or more conflicts, the application can iterate through the columns to find any non-null values, which will be the values from the data source that are in conflict.</source>
          <target state="translated">때문에 &lt;code&gt;SyncResolver&lt;/code&gt; 객체가이다 &lt;code&gt;RowSet&lt;/code&gt; 객체가, 응용 프로그램은 모두 사용할 수 &lt;code&gt;RowSet&lt;/code&gt; 이동 커서를 이동하는 방법 &lt;code&gt;SyncResolver&lt;/code&gt; 객체. 예를 들어, 애플리케이션은 &lt;code&gt;next&lt;/code&gt; 에 있는 &lt;code&gt;RowSet&lt;/code&gt; 메소드를 사용하여 각 행으로 이동 한 다음 &lt;code&gt;SyncResolver&lt;/code&gt; 메소드 &lt;code&gt;getStatus&lt;/code&gt; 를 호출 하여 행에 충돌이 있는지 확인할 수 있습니다. 하나 이상의 충돌이있는 행에서 애플리케이션은 열을 반복하여 널이 아닌 값을 찾을 수 있습니다. 이는 충돌하는 데이터 소스의 값이됩니다.</target>
        </trans-unit>
        <trans-unit id="5f2c30b3a20da6a4089abe62f0d285de8d126316" translate="yes" xml:space="preserve">
          <source>Because access mode types contain &quot;live&quot; &lt;code&gt;Class&lt;/code&gt; objects, method type matching takes into account both type names and class loaders. Thus, even if a VarHandle &lt;code&gt;VH&lt;/code&gt; is created in one class loader &lt;code&gt;L1&lt;/code&gt; and used in another &lt;code&gt;L2&lt;/code&gt;, VarHandle access mode method calls are type-safe, because the caller's symbolic type descriptor, as resolved in &lt;code&gt;L2&lt;/code&gt;, is matched against the original callee method's symbolic type descriptor, as resolved in &lt;code&gt;L1&lt;/code&gt;. The resolution in &lt;code&gt;L1&lt;/code&gt; happens when &lt;code&gt;VH&lt;/code&gt; is created and its access mode types are assigned, while the resolution in &lt;code&gt;L2&lt;/code&gt; happens when the &lt;code&gt;invokevirtual&lt;/code&gt; instruction is linked.</source>
          <target state="translated">액세스 모드 유형에는 &quot;라이브&quot; &lt;code&gt;Class&lt;/code&gt; 개체가 포함되어 있기 때문에 메서드 유형 일치는 유형 이름과 클래스 로더를 모두 고려합니다. 따라서 VarHandle &lt;code&gt;VH&lt;/code&gt; 가 하나의 클래스 로더 &lt;code&gt;L1&lt;/code&gt; 에서 생성되고 다른 &lt;code&gt;L2&lt;/code&gt; 에서 사용 되더라도, VarHandle 액세스 모드 메서드 호출은 &lt;code&gt;L2&lt;/code&gt; 에서 확인 된 호출자의 기호 형식 설명자가 원래 호출 수신자 메서드의 기호 형식과 일치 하기 때문에 형식에 안전합니다. &lt;code&gt;L1&lt;/code&gt; 에서 해결 된 유형 설명자 . 의 해상도 &lt;code&gt;L1&lt;/code&gt; 이 때 발생 &lt;code&gt;VH&lt;/code&gt; 가 생성되고 그 액세스 모드 유형에 할당되어있는 반면 해상도, &lt;code&gt;L2&lt;/code&gt; 이 때 발생 &lt;code&gt;invokevirtual&lt;/code&gt; 지시가 연결되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ab13314544874f9b2e6f0631040c7095963016d" translate="yes" xml:space="preserve">
          <source>Because all instances of this class are functionally equivalent (they all use the default &lt;code&gt;SSLSocketFactory&lt;/code&gt;), this method simply returns &lt;code&gt;this.getClass().equals(obj.getClass())&lt;/code&gt;.</source>
          <target state="translated">이 클래스의 모든 인스턴스는 기능적으로 동일하기 때문에 (모두 기본 &lt;code&gt;SSLSocketFactory&lt;/code&gt; 사용 ),이 메소드는 단순히 &lt;code&gt;this.getClass().equals(obj.getClass())&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="781ec22162fa0a683696cb70039222d72cb3e26f" translate="yes" xml:space="preserve">
          <source>Because an SQL &lt;code&gt;REF&lt;/code&gt; value is a logical pointer to an SQL structured type, a &lt;code&gt;Ref&lt;/code&gt; object is by default also a logical pointer. Thus, retrieving an SQL &lt;code&gt;REF&lt;/code&gt; value as a &lt;code&gt;Ref&lt;/code&gt; object does not materialize the attributes of the structured type on the client.</source>
          <target state="translated">SQL &lt;code&gt;REF&lt;/code&gt; 값은 SQL 구조화 된 유형에 대한 논리적 포인터 이기 때문에 &lt;code&gt;Ref&lt;/code&gt; 오브젝트는 기본적으로 논리적 포인터이기도합니다. 따라서 SQL &lt;code&gt;REF&lt;/code&gt; 값을 &lt;code&gt;Ref&lt;/code&gt; 객체 로 검색해도 클라이언트에서 구조화 된 유형의 속성이 구체화되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e5c6e7749806a3ccc9beb65a4cd9ec6e8c5041b1" translate="yes" xml:space="preserve">
          <source>Because buffer hash codes are content-dependent, it is inadvisable to use buffers as keys in hash maps or similar data structures unless it is known that their contents will not change.</source>
          <target state="translated">버퍼 해시 코드는 내용에 따라 다르므로, 내용이 변경되지 않는 것으로 알려진 경우가 아니라면 버퍼를 해시 맵 또는 유사한 데이터 구조에서 키로 사용하는 것은 바람직하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4b05ebb0bac9b9bce469712526a0fbeef411ddb9" translate="yes" xml:space="preserve">
          <source>Because checks in acquire are invoked before enqueuing, a newly acquiring thread may &lt;em&gt;barge&lt;/em&gt; ahead of others that are blocked and queued. However, you can, if desired, define &lt;code&gt;tryAcquire&lt;/code&gt; and/or &lt;code&gt;tryAcquireShared&lt;/code&gt; to disable barging by internally invoking one or more of the inspection methods, thereby providing a &lt;em&gt;fair&lt;/em&gt; FIFO acquisition order. In particular, most fair synchronizers can define &lt;code&gt;tryAcquire&lt;/code&gt; to return &lt;code&gt;false&lt;/code&gt; if &lt;a href=&quot;#hasQueuedPredecessors()&quot;&gt;&lt;code&gt;hasQueuedPredecessors()&lt;/code&gt;&lt;/a&gt; (a method specifically designed to be used by fair synchronizers) returns &lt;code&gt;true&lt;/code&gt;. Other variations are possible.</source>
          <target state="translated">취득에서 검사 대기열을 넣는 전에 호출되기 때문에, 새로 취득 스레드 수 &lt;em&gt;에 끼어&lt;/em&gt; 미리 차단하고 대기중인 다른 사람의. 그러나 원하는 경우 &lt;code&gt;tryAcquire&lt;/code&gt; 및 / 또는 &lt;code&gt;tryAcquireShared&lt;/code&gt; 를 정의 하여 내부적으로 하나 이상의 검사 방법을 호출하여 끼어 들기 를 비활성화함으로써 &lt;em&gt;공정한&lt;/em&gt; FIFO 획득 순서 를 제공 할 수 있습니다. 특히, 대부분의 공정한 동기화 프로그램은 &lt;a href=&quot;#hasQueuedPredecessors()&quot;&gt; &lt;code&gt;hasQueuedPredecessors()&lt;/code&gt; &lt;/a&gt; (공정한 동기화 프로그램에서 사용하도록 특별히 설계된 메서드)가 &lt;code&gt;true&lt;/code&gt; 를 반환하는 경우 &lt;code&gt;false&lt;/code&gt; 를 반환하도록 &lt;code&gt;tryAcquire&lt;/code&gt; 를 정의 할 수 있습니다 . 다른 변형도 가능합니다.</target>
        </trans-unit>
        <trans-unit id="d4ccac972442ce5a809c81bc3da7ddc6fa395fc0" translate="yes" xml:space="preserve">
          <source>Because checks in acquire are invoked before enqueuing, a newly acquiring thread may &lt;em&gt;barge&lt;/em&gt; ahead of others that are blocked and queued. However, you can, if desired, define &lt;code&gt;tryAcquire&lt;/code&gt; and/or &lt;code&gt;tryAcquireShared&lt;/code&gt; to disable barging by internally invoking one or more of the inspection methods, thereby providing a &lt;em&gt;fair&lt;/em&gt; FIFO acquisition order. In particular, most fair synchronizers can define &lt;code&gt;tryAcquire&lt;/code&gt; to return &lt;code&gt;false&lt;/code&gt; if &lt;a href=&quot;abstractqueuedsynchronizer#hasQueuedPredecessors--&quot;&gt;&lt;code&gt;hasQueuedPredecessors()&lt;/code&gt;&lt;/a&gt; (a method specifically designed to be used by fair synchronizers) returns &lt;code&gt;true&lt;/code&gt;. Other variations are possible.</source>
          <target state="translated">취득에서 검사 대기열을 넣는 전에 호출되기 때문에, 새로 취득 스레드 수 &lt;em&gt;에 끼어&lt;/em&gt; 미리 차단하고 대기중인 다른 사람의. 그러나 원하는 경우 &lt;code&gt;tryAcquire&lt;/code&gt; 및 / 또는 &lt;code&gt;tryAcquireShared&lt;/code&gt; 를 정의 하여 하나 이상의 검사 방법을 내부적으로 호출하여 참여를 비활성화함으로써 &lt;em&gt;공정한&lt;/em&gt; FIFO 획득 순서 를 제공 할 수 있습니다. 특히, 대부분의 공정 동기화 프로그램은 &lt;a href=&quot;abstractqueuedsynchronizer#hasQueuedPredecessors--&quot;&gt; &lt;code&gt;hasQueuedPredecessors()&lt;/code&gt; &lt;/a&gt; (공정 동기화 프로그램에서 사용하도록 특별히 설계된 메소드)가 &lt;code&gt;true&lt;/code&gt; 를 리턴 하면 &lt;code&gt;tryAcquire&lt;/code&gt; 가 &lt;code&gt;false&lt;/code&gt; 를 리턴하도록 정의 할 수 있습니다 . 다른 변형이 가능하다.</target>
        </trans-unit>
        <trans-unit id="3909ff589dfd92ffdd2bdb1744ec420dced59e11" translate="yes" xml:space="preserve">
          <source>Because class &lt;code&gt;Random&lt;/code&gt; uses a seed with only 48 bits, this algorithm will not return all possible &lt;code&gt;long&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;Random&lt;/code&gt; 클래스 는 48 비트 만있는 seed를 사용 하므로이 알고리즘은 가능한 모든 &lt;code&gt;long&lt;/code&gt; 값을 반환하지는 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c9917af50fd5ad9c0364093a76e92604766eabed" translate="yes" xml:space="preserve">
          <source>Because databases may use an optimized representation for the XML, accessing the value through getSource() and setResult() can lead to improved processing performance without serializing to a stream representation and parsing the XML.</source>
          <target state="translated">데이터베이스는 XML에 대해 최적화 된 표현을 사용할 수 있으므로 getSource () 및 setResult ()를 통해 값에 액세스하면 스트림 표현으로 직렬화하고 XML을 구문 분석하지 않고도 처리 성능을 향상시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e81de40314053a7937201ca1c6eac413c916fb0" translate="yes" xml:space="preserve">
          <source>Because floating-point operations may not be strictly associative, the returned result may not be identical to the value that would be obtained if the operation was performed sequentially.</source>
          <target state="translated">부동 소수점 연산이 엄격하게 연관되지 않을 수 있으므로 리턴 된 결과는 연산이 순차적으로 수행 된 경우 얻을 수있는 값과 동일하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="121fde52eed6acb80fc29df58b4655b95d6b5adc" translate="yes" xml:space="preserve">
          <source>Because it is always connected to its data source, a &lt;code&gt;JdbcRowSet&lt;/code&gt; object can rely on the presence of active &lt;code&gt;Statement&lt;/code&gt;, &lt;code&gt;Connection&lt;/code&gt;, and &lt;code&gt;ResultSet&lt;/code&gt; instances. This means that applications can obtain additional &lt;code&gt;SQLWarning&lt;/code&gt; notifications by calling the &lt;code&gt;getNextWarning&lt;/code&gt; methods that they provide. Disconnected &lt;code&gt;Rowset&lt;/code&gt; objects, such as a &lt;code&gt;CachedRowSet&lt;/code&gt; object, do not have access to these &lt;code&gt;getNextWarning&lt;/code&gt; methods.</source>
          <target state="translated">항상 데이터 소스에 연결되기 때문에 &lt;code&gt;JdbcRowSet&lt;/code&gt; 객체는 활성 &lt;code&gt;Statement&lt;/code&gt; , &lt;code&gt;Connection&lt;/code&gt; 및 &lt;code&gt;ResultSet&lt;/code&gt; 인스턴스 의 존재에 의존 할 수 있습니다 . 이는 애플리케이션이 제공 하는 &lt;code&gt;getNextWarning&lt;/code&gt; 메소드를 호출하여 추가 &lt;code&gt;SQLWarning&lt;/code&gt; 알림을 얻을 수 있음을 의미 합니다. &lt;code&gt;CachedRowSet&lt;/code&gt; 개체 와 같이 연결이 끊긴 &lt;code&gt;Rowset&lt;/code&gt; 개체 는 이러한 &lt;code&gt;getNextWarning&lt;/code&gt; 메서드에 액세스 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="7b0330619b350f9e4468f1b76c3b7c1c38d20153" translate="yes" xml:space="preserve">
          <source>Because it is always connected to its database, an instance of &lt;code&gt;JdbcRowSet&lt;/code&gt; can simply take calls invoked on it and in turn call them on its &lt;code&gt;ResultSet&lt;/code&gt; object. As a consequence, a result set can, for example, be a component in a Swing application.</source>
          <target state="translated">항상 데이터베이스에 연결되어 있기 때문에 &lt;code&gt;JdbcRowSet&lt;/code&gt; 인스턴스 는 단순히 호출 된 호출을 가져 와서 &lt;code&gt;ResultSet&lt;/code&gt; 객체 에서 호출 할 수 있습니다 . 결과적으로 결과 집합은 예를 들어 Swing 응용 프로그램의 구성 요소가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e970760db82f7b1458da7ee7f7e75f226aa4a1e3" translate="yes" xml:space="preserve">
          <source>Because it is possible for extensions to be installed into a running Java virtual machine, this method may return different results each time it is invoked.</source>
          <target state="translated">확장이 실행중인 Java 가상 머신에 설치 될 수 있으므로이 메소드는 호출 될 때마다 다른 결과를 리턴 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf53129095904d8417c3195b78c39b8e59bfec02" translate="yes" xml:space="preserve">
          <source>Because it supports coordinated usage across multiple lock modes, this class does not directly implement the &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt; interfaces. However, a StampedLock may be viewed &lt;a href=&quot;#asReadLock()&quot;&gt;&lt;code&gt;asReadLock()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#asWriteLock()&quot;&gt;&lt;code&gt;asWriteLock()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;#asReadWriteLock()&quot;&gt;&lt;code&gt;asReadWriteLock()&lt;/code&gt;&lt;/a&gt; in applications requiring only the associated set of functionality.</source>
          <target state="translated">여러 잠금 모드에서 조정 된 사용을 지원하기 때문에이 클래스는 &lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; &lt;/a&gt; 인터페이스를 직접 구현하지 않습니다 . 그러나 StampedLock은 관련 기능 집합 만 필요한 응용 프로그램에서 &lt;a href=&quot;#asReadLock()&quot;&gt; &lt;code&gt;asReadLock()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#asWriteLock()&quot;&gt; &lt;code&gt;asWriteLock()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#asReadWriteLock()&quot;&gt; &lt;code&gt;asReadWriteLock()&lt;/code&gt; &lt;/a&gt; 로 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="de754b2addf76ae2be6bf13f8b1b145d9329bce1" translate="yes" xml:space="preserve">
          <source>Because it supports coordinated usage across multiple lock modes, this class does not directly implement the &lt;a href=&quot;lock&quot;&gt;&lt;code&gt;Lock&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;readwritelock&quot;&gt;&lt;code&gt;ReadWriteLock&lt;/code&gt;&lt;/a&gt; interfaces. However, a StampedLock may be viewed &lt;a href=&quot;stampedlock#asReadLock--&quot;&gt;&lt;code&gt;asReadLock()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;stampedlock#asWriteLock--&quot;&gt;&lt;code&gt;asWriteLock()&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;stampedlock#asReadWriteLock--&quot;&gt;&lt;code&gt;asReadWriteLock()&lt;/code&gt;&lt;/a&gt; in applications requiring only the associated set of functionality.</source>
          <target state="translated">여러 잠금 모드에서 조정 된 사용을 지원 &lt;a href=&quot;readwritelock&quot;&gt; &lt;code&gt;ReadWriteLock&lt;/code&gt; &lt;/a&gt; 클래스는 &lt;a href=&quot;lock&quot;&gt; &lt;code&gt;Lock&lt;/code&gt; &lt;/a&gt; 또는 ReadWriteLock 인터페이스를 직접 구현하지 않습니다 . 그러나 연결된 기능 집합 만 필요한 응용 프로그램 에서는 &lt;a href=&quot;stampedlock#asWriteLock--&quot;&gt; &lt;code&gt;asWriteLock()&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;stampedlock#asReadLock--&quot;&gt; &lt;code&gt;asReadLock()&lt;/code&gt; &lt;/a&gt; , asWriteLock () 또는 &lt;a href=&quot;stampedlock#asReadWriteLock--&quot;&gt; &lt;code&gt;asReadWriteLock()&lt;/code&gt; &lt;/a&gt; 으로 볼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6923853c77265efc96981e7d3e74fd40a93c564d" translate="yes" xml:space="preserve">
          <source>Because link-local and site-local addresses are non-global, it is possible that different hosts may have the same destination address and may be reachable through different interfaces on the same originating system. In this case, the originating system is said to be connected to multiple zones of the same scope. In order to disambiguate which is the intended destination zone, it is possible to append a zone identifier (or</source>
          <target state="translated">링크 로컬 주소와 사이트 로컬 주소는 비전 역이므로 다른 호스트가 동일한 대상 주소를 가질 수 있으며 동일한 시작 시스템의 다른 인터페이스를 통해 연결할 수 있습니다. 이 경우, 발신 시스템은 동일한 범위의 여러 영역에 연결되어 있다고합니다. 의도 한 대상 영역을 명확하게하기 위해 영역 식별자를 추가 할 수 있습니다 (또는</target>
        </trans-unit>
        <trans-unit id="d367f3d1259e67426d2aa062e6e92b4054749516" translate="yes" xml:space="preserve">
          <source>Because method types contain &quot;live&quot; &lt;code&gt;Class&lt;/code&gt; objects, method type matching takes into account both type names and class loaders. Thus, even if a method handle &lt;code&gt;M&lt;/code&gt; is created in one class loader &lt;code&gt;L1&lt;/code&gt; and used in another &lt;code&gt;L2&lt;/code&gt;, method handle calls are type-safe, because the caller's symbolic type descriptor, as resolved in &lt;code&gt;L2&lt;/code&gt;, is matched against the original callee method's symbolic type descriptor, as resolved in &lt;code&gt;L1&lt;/code&gt;. The resolution in &lt;code&gt;L1&lt;/code&gt; happens when &lt;code&gt;M&lt;/code&gt; is created and its type is assigned, while the resolution in &lt;code&gt;L2&lt;/code&gt; happens when the &lt;code&gt;invokevirtual&lt;/code&gt; instruction is linked.</source>
          <target state="translated">메소드 유형에는 &quot;라이브&quot; &lt;code&gt;Class&lt;/code&gt; 객체가 포함되어 있으므로 메소드 유형 일치는 유형 이름과 클래스 로더를 모두 고려합니다. 따라서, 방법 핸들하더라도 &lt;code&gt;M&lt;/code&gt; 이 로더 한 클래스 생성 &lt;code&gt;L1&lt;/code&gt; 다른에서 사용 &lt;code&gt;L2&lt;/code&gt; 해결 같이 발신자의 심볼 타입 기술자 때문에, 방법 핸들 통화 입력 안전한 &lt;code&gt;L2&lt;/code&gt; 원래 호 출처에있어서의 심볼 형에 대해 일치 설명자 ( &lt;code&gt;L1&lt;/code&gt; 에서 해결됨) . 의 해상도 &lt;code&gt;L1&lt;/code&gt; 이 때 발생하는 &lt;code&gt;M&lt;/code&gt; 가 생성되고 그 형태가 지정되어있는 동안 해상도, &lt;code&gt;L2&lt;/code&gt; 는 때 발생 &lt;code&gt;invokevirtual&lt;/code&gt; 명령이 연결되어있다.</target>
        </trans-unit>
        <trans-unit id="b43f3bb2a87a2fba261a2b9fbd32f8a83dc2bafb" translate="yes" xml:space="preserve">
          <source>Because method types contain &quot;live&quot; &lt;code&gt;Class&lt;/code&gt; objects, method type matching takes into account both types names and class loaders. Thus, even if a method handle &lt;code&gt;M&lt;/code&gt; is created in one class loader &lt;code&gt;L1&lt;/code&gt; and used in another &lt;code&gt;L2&lt;/code&gt;, method handle calls are type-safe, because the caller's symbolic type descriptor, as resolved in &lt;code&gt;L2&lt;/code&gt;, is matched against the original callee method's symbolic type descriptor, as resolved in &lt;code&gt;L1&lt;/code&gt;. The resolution in &lt;code&gt;L1&lt;/code&gt; happens when &lt;code&gt;M&lt;/code&gt; is created and its type is assigned, while the resolution in &lt;code&gt;L2&lt;/code&gt; happens when the &lt;code&gt;invokevirtual&lt;/code&gt; instruction is linked.</source>
          <target state="translated">메소드 유형에는 &quot;실시간&quot; &lt;code&gt;Class&lt;/code&gt; 오브젝트가 포함되므로 메소드 유형 일치는 유형 이름과 클래스 로더를 모두 고려합니다. 따라서, 방법 핸들하더라도 &lt;code&gt;M&lt;/code&gt; 이 로더 한 클래스 생성 &lt;code&gt;L1&lt;/code&gt; 다른에서 사용 &lt;code&gt;L2&lt;/code&gt; 해결 같이 발신자의 심볼 타입 기술자 때문에, 방법 핸들 통화 입력 안전한 &lt;code&gt;L2&lt;/code&gt; 원래 호 출처에있어서의 심볼 형에 대해 일치 기술자는 같은 해결 &lt;code&gt;L1&lt;/code&gt; . 의 해상도 &lt;code&gt;L1&lt;/code&gt; 이 때 발생하는 &lt;code&gt;M&lt;/code&gt; 가 생성되고 그 형태가 지정되어있는 동안 해상도, &lt;code&gt;L2&lt;/code&gt; 는 때 발생 &lt;code&gt;invokevirtual&lt;/code&gt; 명령이 연결되어있다.</target>
        </trans-unit>
        <trans-unit id="135d5125de0233b433b12c866151d5b84d3b70bd" translate="yes" xml:space="preserve">
          <source>Because objects in the parameters array may not be serializable, during serialization all objects in the parameters array are written as the corresponding Strings (using Object.toString).</source>
          <target state="translated">매개 변수 배열의 오브젝트는 직렬화 할 수 없으므로 직렬화 중에 매개 변수 배열의 모든 오브젝트는 해당 문자열로 작성됩니다 (Object.toString 사용).</target>
        </trans-unit>
        <trans-unit id="d311fd05ebfe86f0d3ff91c0ee4eb8e160c4edf3" translate="yes" xml:space="preserve">
          <source>Because of possible rounding errors it is recommended you ask for the baseline with two consecutive heights and use the return value to determine if you need to pad calculations by 1. The following shows how to calculate the baseline for any height:</source>
          <target state="translated">반올림 오류가 발생할 수 있으므로 두 개의 연속 높이가있는 기준선을 요청하고 반환 값을 사용하여 계산을 1로 채워야하는지 결정하는 것이 좋습니다. 다음은 높이에 대한 기준선을 계산하는 방법을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="d99778e04545ec02cf85c3e472b210c4c74ceb61" translate="yes" xml:space="preserve">
          <source>Because of the action of the &lt;code&gt;asType&lt;/code&gt; step, the following argument conversions are applied as necessary:</source>
          <target state="translated">&lt;code&gt;asType&lt;/code&gt; 단계 의 조치로 인해 다음 인수 변환이 필요에 따라 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="05093551eefc30984d2621b98e42dcbf39452a26" translate="yes" xml:space="preserve">
          <source>Because of the general &lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;equivalence&lt;/a&gt; between &lt;code&gt;invokevirtual&lt;/code&gt; instructions and method handles produced by &lt;code&gt;findVirtual&lt;/code&gt;, if the class is &lt;code&gt;MethodHandle&lt;/code&gt; and the name string is &lt;code&gt;invokeExact&lt;/code&gt; or &lt;code&gt;invoke&lt;/code&gt;, the resulting method handle is equivalent to one produced by &lt;a href=&quot;methodhandles#exactInvoker(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;MethodHandles.exactInvoker&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methodhandles#invoker(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;MethodHandles.invoker&lt;/code&gt;&lt;/a&gt; with the same &lt;code&gt;type&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;invokevirtual&lt;/code&gt; 명령어와 &lt;code&gt;findVirtual&lt;/code&gt; 에 의해 생성 된 메서드 핸들 간의 일반적인 &lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;동등성&lt;/a&gt; 으로 인해 클래스가 &lt;code&gt;MethodHandle&lt;/code&gt; 이고 이름 문자열이 &lt;code&gt;invokeExact&lt;/code&gt; 또는 &lt;code&gt;invoke&lt;/code&gt; 인 경우 결과 메서드 핸들은 동일한 &lt;code&gt;type&lt;/code&gt; &lt;a href=&quot;methodhandles#exactInvoker(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;MethodHandles.exactInvoker&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;methodhandles#invoker(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;MethodHandles.invoker&lt;/code&gt; &lt;/a&gt; 에서 생성 된 것과 동일 합니다. 논의.</target>
        </trans-unit>
        <trans-unit id="ca7d8963488efc2d8c77e912910fa4b8b6ee313e" translate="yes" xml:space="preserve">
          <source>Because of the general &lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;equivalence&lt;/a&gt; between &lt;code&gt;invokevirtual&lt;/code&gt; instructions and method handles produced by &lt;code&gt;findVirtual&lt;/code&gt;, if the class is &lt;code&gt;MethodHandle&lt;/code&gt; and the name string is &lt;code&gt;invokeExact&lt;/code&gt; or &lt;code&gt;invoke&lt;/code&gt;, the resulting method handle is equivalent to one produced by &lt;a href=&quot;methodhandles#exactInvoker-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;MethodHandles.exactInvoker&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;methodhandles#invoker-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;MethodHandles.invoker&lt;/code&gt;&lt;/a&gt; with the same &lt;code&gt;type&lt;/code&gt; argument. &lt;b&gt;Example:&lt;/b&gt;</source>
          <target state="translated">&lt;code&gt;findVirtual&lt;/code&gt; 에 의해 생성 된 &lt;code&gt;invokevirtual&lt;/code&gt; 명령어와 메소드 핸들 간의 일반적인 &lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;동등성&lt;/a&gt; 으로 인해 클래스가 &lt;code&gt;MethodHandle&lt;/code&gt; 이고 이름 문자열이 &lt;code&gt;invokeExact&lt;/code&gt; 또는 &lt;code&gt;invoke&lt;/code&gt; 인 경우 결과 메소드 핸들은 동일한 &lt;code&gt;type&lt;/code&gt; &lt;a href=&quot;methodhandles#exactInvoker-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;MethodHandles.exactInvoker&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;methodhandles#invoker-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;MethodHandles.invoker&lt;/code&gt; 에&lt;/a&gt; 의해 생성 된 것과 동일 합니다. 논의. &lt;b&gt;예:&lt;/b&gt;&lt;b&gt;&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="2a1021feb1d1b36653cb4e2078a43f58d17f0a51" translate="yes" xml:space="preserve">
          <source>Because of the last point, the implementation behaves as if a volatile read of &lt;code&gt;V&lt;/code&gt; were performed by &lt;code&gt;T&lt;/code&gt; immediately after its action &lt;code&gt;A&lt;/code&gt;. In the local ordering of actions in &lt;code&gt;T&lt;/code&gt;, this read happens before any future read of the target of &lt;code&gt;S&lt;/code&gt;. It is as if the implementation arbitrarily picked a read of &lt;code&gt;S&lt;/code&gt;'s target by &lt;code&gt;T&lt;/code&gt;, and forced a read of &lt;code&gt;V&lt;/code&gt; to precede it, thereby ensuring communication of the new target value.</source>
          <target state="translated">마지막 지점으로 인해 구현은 동작 &lt;code&gt;A&lt;/code&gt; 직후 에 &lt;code&gt;T&lt;/code&gt; 에 의해 &lt;code&gt;V&lt;/code&gt; 의 휘발성 읽기 가 T에 의해 수행 된 것처럼 작동 합니다. &lt;code&gt;T&lt;/code&gt; 의 로컬 동작 순서 에서이 읽기는 &lt;code&gt;S&lt;/code&gt; 의 대상에 대한 향후 읽기 전에 발생합니다 . 마치 구현이 임의로 &lt;code&gt;T&lt;/code&gt; 의 &lt;code&gt;S&lt;/code&gt; 대상 읽기를 선택하고 &lt;code&gt;V&lt;/code&gt; 의 읽기를 강제 로 선행하도록하여 새로운 대상 값의 통신을 보장하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="416f586d552b8b4a7a77a58bb6c520b845b6cbfd" translate="yes" xml:space="preserve">
          <source>Because of the need for a &lt;code&gt;signature&lt;/code&gt; to differentiate possibly-overloaded operations, it is much simpler to invoke operations through an &lt;a href=&quot;jmx#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;MBean proxy&lt;/a&gt; where possible. For example, suppose you have a Standard MBean interface like this:</source>
          <target state="translated">오버로드 될 수있는 작업을 구별 하기 위해 &lt;code&gt;signature&lt;/code&gt; 이 필요하기 때문에 가능한 경우 &lt;a href=&quot;jmx#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;MBean 프록시를&lt;/a&gt; 통해 작업을 호출하는 것이 훨씬 간단 합니다. 예를 들어 다음과 같은 표준 MBean 인터페이스가 있다고 가정합니다.</target>
        </trans-unit>
        <trans-unit id="b998cc2f93b9f13cb58ab1554408f2efba64c18c" translate="yes" xml:space="preserve">
          <source>Because of the need for a &lt;code&gt;signature&lt;/code&gt; to differentiate possibly-overloaded operations, it is much simpler to invoke operations through an &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;MBean proxy&lt;/a&gt; where possible. For example, suppose you have a Standard MBean interface like this:</source>
          <target state="translated">과부하가 걸리는 조작을 구별 하기위한 &lt;code&gt;signature&lt;/code&gt; 이 필요하기 때문에 가능하면 &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;MBean 프록시를&lt;/a&gt; 통해 조작을 호출하는 것이 훨씬 간단 합니다. 예를 들어, 다음과 같은 표준 MBean 인터페이스가 있다고 가정하십시오.</target>
        </trans-unit>
        <trans-unit id="c7ee854558ed791fbdc5f7eac1992f256f8860c4" translate="yes" xml:space="preserve">
          <source>Because of the possibility of &lt;a href=&quot;../reflect/method#isBridge()&quot;&gt;bridge methods&lt;/a&gt; and other corner cases, the interface may also have several abstract methods with the same name but having distinct descriptors (types of returns and parameters). In this case, all the methods are bound in common to the one given target. The type check and effective &lt;code&gt;asType&lt;/code&gt; conversion is applied to each method type descriptor, and all abstract methods are bound to the target in common. Beyond this type check, no further checks are made to determine that the abstract methods are related in any way.</source>
          <target state="translated">&lt;a href=&quot;../reflect/method#isBridge()&quot;&gt;브릿지 메소드&lt;/a&gt; 및 기타 코너 케이스 의 가능성으로 인해 인터페이스에는 이름이 동일하지만 고유 한 설명자 (반환 및 매개 변수 유형)가있는 여러 추상 메소드가있을 수도 있습니다. 이 경우 모든 메서드는 주어진 하나의 대상에 공통으로 바인딩됩니다. 타입 검사와 효과적인 &lt;code&gt;asType&lt;/code&gt; 변환은 각 메소드 타입 디스크립터에 적용되며 모든 추상 메소드는 공통적으로 타겟에 바인딩됩니다. 이 유형 검사 외에는 추상 메서드가 어떤 방식 으로든 관련되어 있는지 확인하기위한 추가 검사가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="40d2d088861cbd59d26878d432ec07f0069de761" translate="yes" xml:space="preserve">
          <source>Because of the possibility of &lt;a href=&quot;../reflect/method#isBridge--&quot;&gt;bridge methods&lt;/a&gt; and other corner cases, the interface may also have several abstract methods with the same name but having distinct descriptors (types of returns and parameters). In this case, all the methods are bound in common to the one given target. The type check and effective &lt;code&gt;asType&lt;/code&gt; conversion is applied to each method type descriptor, and all abstract methods are bound to the target in common. Beyond this type check, no further checks are made to determine that the abstract methods are related in any way.</source>
          <target state="translated">&lt;a href=&quot;../reflect/method#isBridge--&quot;&gt;브릿지 메소드&lt;/a&gt; 및 기타 코너 경우 의 가능성으로 인해 인터페이스에는 이름은 같지만 고유 한 설명자 (반환 유형 및 매개 변수)를 갖는 여러 추상 메소드가있을 수도 있습니다. 이 경우 모든 방법이 주어진 대상에 공통으로 바인딩됩니다. 타입 검사와 효과적인 &lt;code&gt;asType&lt;/code&gt; 변환은 각 메소드 타입 설명자에 적용되며 모든 추상 메소드는 공통으로 대상에 바인딩됩니다. 이 유형 검사 외에 추상 메소드가 어떤 식 으로든 연관되어 있는지 확인하기위한 추가 검사는 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d54ef546ba8ad5a324bc4046dd19a5cbf6736160" translate="yes" xml:space="preserve">
          <source>Because of the streaming event model that SAX uses, some entity boundaries cannot be reported under any circumstances:</source>
          <target state="translated">SAX가 사용하는 스트리밍 이벤트 모델로 인해 일부 엔터티 경계는 어떤 상황에서도보고 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="2140300be189c85b139b82819879f97e49708ac0" translate="yes" xml:space="preserve">
          <source>Because of the technique of simplifying the equations for calculation efficiency, some implementations might perform differently when encountering result alpha values of 0.0 on a non-premultiplied destination. Note that the simplification of removing the divide by alpha in the case of the SRC rule is technically not valid if the denominator (alpha) is 0. But, since the results should only be expected to be accurate when viewed in premultiplied form, a resulting alpha of 0 essentially renders the resulting color components irrelevant and so exact behavior in this case should not be expected.</source>
          <target state="translated">계산 효율성을 위해 방정식을 단순화하는 기술로 인해 일부 구현에서는 미리 곱하지 않은 대상에서 결과 알파 값이 0.0 인 경우 다르게 수행 될 수 있습니다. SRC 규칙의 경우 알파로 나누기를 제거하는 단순화는 분모 (알파)가 0 인 경우 기술적으로 유효하지 않습니다. 알파 0은 본질적으로 결과 색상 구성 요소를 무관하게 렌더링하므로이 경우 정확한 동작을 기 대해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="12d2c679157f50eb1b96f4788d82c114f3a7d1e2" translate="yes" xml:space="preserve">
          <source>Because of these issues, it is recommended that clients migrate away from constructing non-conforming locales and use the &lt;code&gt;forLanguageTag&lt;/code&gt; and &lt;code&gt;Locale.Builder&lt;/code&gt; APIs instead. Clients desiring a string representation of the complete locale can then always rely on &lt;code&gt;toLanguageTag&lt;/code&gt; for this purpose.</source>
          <target state="translated">이러한 문제로 인해 클라이언트는 부적합한 로캘을 생성하지 않고 &lt;code&gt;forLanguageTag&lt;/code&gt; 및 &lt;code&gt;Locale.Builder&lt;/code&gt; API를 대신 사용하는 것이 좋습니다. 완전한 로케일의 문자열 표현을 원하는 클라이언트 는이 목적으로 항상 &lt;code&gt;toLanguageTag&lt;/code&gt; 에 의존 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fb48813d61734ea74626fffc485eba9b841abb0f" translate="yes" xml:space="preserve">
          <source>Because of variations in native windowing systems, no guarantees about changes to the focused and active Windows can be made. Developers must never assume that this Window is no longer the focused or active Window until this Window receives a WINDOW_LOST_FOCUS or WINDOW_DEACTIVATED event. On platforms where the top-most window is the focused window, this method will &lt;b&gt;probably&lt;/b&gt; cause this Window to lose focus. In that case, the next highest, focusable Window in this VM will receive focus. On platforms where the stacking order does not typically affect the focused window, this method will &lt;b&gt;probably&lt;/b&gt; leave the focused and active Windows unchanged.</source>
          <target state="translated">기본 윈도우 시스템의 변형으로 인해 포커스 및 활성 Windows에 대한 변경을 보장 할 수 없습니다. 개발자는이 창이 WINDOW_LOST_FOCUS 또는 WINDOW_DEACTIVATED 이벤트를 수신 할 때까지이 창이 더 이상 포커스가 있거나 활성 창이 아니라고 가정해서는 안됩니다. 최상 정도의 윈도우가 포커스 된 윈도우 인 플랫폼에서는,이 메소드는 것입니다 &lt;b&gt;아마&lt;/b&gt; 잃게 초점이 창을 유발한다. 이 경우이 VM에서 다음으로 높은 포커스 가능한 창이 포커스를받습니다. 스택 순서는 일반적으로 포커스 된 윈도우에 영향을주지 않는 플랫폼에서는,이 메소드 &lt;b&gt;아마&lt;/b&gt; 떠날는 집중 및 활성 윈도우 변경.</target>
        </trans-unit>
        <trans-unit id="f165812e4c0130e3fd029f2520b5d6c897f9375e" translate="yes" xml:space="preserve">
          <source>Because quadrant rotations are fairly common, this class should handle these cases reasonably quickly, both in applying the rotations to the transform and in applying the resulting transform to the coordinates. To facilitate this optimal handling, the methods which take an angle of rotation measured in radians attempt to detect angles that are intended to be quadrant rotations and treat them as such. These methods therefore treat an angle &lt;em&gt;theta&lt;/em&gt; as a quadrant rotation if either &lt;code&gt;Math.sin(&lt;em&gt;theta&lt;/em&gt;)&lt;/code&gt; or &lt;code&gt;Math.cos(&lt;em&gt;theta&lt;/em&gt;)&lt;/code&gt; returns exactly 1.0 or -1.0. As a rule of thumb, this property holds true for a range of approximately 0.0000000211 radians (or 0.00000121 degrees) around small multiples of &lt;code&gt;Math.PI/2.0&lt;/code&gt;.</source>
          <target state="translated">사분면 회전은 매우 일반적이기 때문에이 클래스는 회전을 변환에 적용하고 결과 변환을 좌표에 적용 할 때 이러한 경우를 합리적으로 신속하게 처리해야합니다. 이러한 최적의 핸들링을 용이하게하기 위해 라디안 단위로 측정 된 회전 각도를 취하는 방법은 사분면 회전이되도록 의도 된 각도를 감지하고 그에 따라 처리합니다. 따라서 이러한 메서드 는 &lt;code&gt;Math.sin(&lt;em&gt;theta&lt;/em&gt;)&lt;/code&gt; &lt;em&gt;theta&lt;/em&gt; ) 또는 &lt;code&gt;Math.cos(&lt;em&gt;theta&lt;/em&gt;)&lt;/code&gt; &lt;em&gt;theta&lt;/em&gt; ) 가 정확히 1.0 또는 -1.0을 반환 하는 경우 각도 &lt;em&gt;theta&lt;/em&gt; 를 사분면 회전으로 처리합니다 . 경험상이 속성은 &lt;code&gt;Math.PI/2.0&lt;/code&gt; 의 작은 배수를 중심으로 약 0.0000000211 라디안 (또는 0.00000121도)의 범위에 대해 적용됩니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;.</target>
        </trans-unit>
        <trans-unit id="c49f87ca6a8547f4ef50632ef8b98e107c15cbaa" translate="yes" xml:space="preserve">
          <source>Because some operations of &lt;code&gt;Duration&lt;/code&gt; rely on &lt;a href=&quot;../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; even though &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; can hold very large or very small values, some of the methods may not work correctly on such &lt;code&gt;Duration&lt;/code&gt;s. The impacted methods document their dependency on &lt;a href=&quot;../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">일부 작업 때문에 &lt;code&gt;Duration&lt;/code&gt; 에 의존 &lt;a href=&quot;../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 에도 불구하고 &lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; 매우 크거나 매우 작은 값을 저장할 수있는, 방법 중 일부는 제대로 작동하지 않을 수 있습니다 &lt;code&gt;Duration&lt;/code&gt; 의. 영향을받는 메서드는 &lt;a href=&quot;../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; 에&lt;/a&gt; 대한 종속성을 문서화합니다 .</target>
        </trans-unit>
        <trans-unit id="dc3af8384c42d7008c94f006170ee6cc58501de7" translate="yes" xml:space="preserve">
          <source>Because text flavors which do not support the charset parameter are encoded in a non-standard format, this method should not be called for such flavors. However, in order to maintain backward-compatibility, if this method is called for such a flavor, this method will treat the flavor as though it supports the charset parameter and attempt to decode it accordingly. See &lt;code&gt;selectBestTextFlavor&lt;/code&gt; for a list of text flavors which do not support the charset parameter.</source>
          <target state="translated">charset 매개 변수를 지원하지 않는 텍스트 특징은 비표준 형식으로 인코딩되므로 이러한 특징에 대해이 메서드를 호출해서는 안됩니다. 그러나 이전 버전과의 호환성을 유지하기 위해이 메소드가 이러한 플레이버에 대해 호출되면이 메소드는 플레이버를 charset 매개 변수를 지원하는 것처럼 취급하고 그에 따라 디코딩을 시도합니다. charset 매개 변수를 지원하지 않는 텍스트 특징 목록은 &lt;code&gt;selectBestTextFlavor&lt;/code&gt; 를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="64053ec0ab5c0fd627ef8e5a04f6b4e6bd7cad81" translate="yes" xml:space="preserve">
          <source>Because the &lt;code&gt;process&lt;/code&gt; method is invoked asynchronously on the</source>
          <target state="translated">&lt;code&gt;process&lt;/code&gt; 메서드가 비동기식으로 호출 되기 때문에</target>
        </trans-unit>
        <trans-unit id="cce1e62d97fa0aae0df9093385176cea583b30d4" translate="yes" xml:space="preserve">
          <source>Because the data is pre-loaded and has a known length, you can set a clip to start playing at any position in its audio data. You can also create a loop, so that when the clip is played it will cycle repeatedly. Loops are specified with a starting and ending sample frame, along with the number of times that the loop should be played.</source>
          <target state="translated">데이터가 사전로드되어 있고 길이가 알려져 있기 때문에 오디오 데이터의 어느 위치에서나 클립이 재생되도록 설정할 수 있습니다. 클립을 재생할 때 반복적으로 반복되도록 루프를 만들 수도 있습니다. 루프는 시작 및 종료 샘플 프레임과 함께 루프 재생 횟수와 함께 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="ddba84b40a1d91be7956c93eea9fcd9518f15690" translate="yes" xml:space="preserve">
          <source>Because the focus behavior of this method is platform-dependent, developers are strongly encouraged to use &lt;code&gt;requestFocusInWindow(FocusEvent.Cause)&lt;/code&gt; when possible.</source>
          <target state="translated">이 메서드의 포커스 동작은 플랫폼에 따라 다르기 때문에 개발자는 가능하면 &lt;code&gt;requestFocusInWindow(FocusEvent.Cause)&lt;/code&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="4679fef009952687aad64adb845548b2836e6d4d" translate="yes" xml:space="preserve">
          <source>Because the focus behavior of this method is platform-dependent, developers are strongly encouraged to use &lt;code&gt;requestFocusInWindow&lt;/code&gt; when possible.</source>
          <target state="translated">이 메서드의 포커스 동작은 플랫폼에 따라 다르기 때문에 개발자는 가능 하면 &lt;code&gt;requestFocusInWindow&lt;/code&gt; 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="d6d1462239c1937e7001062f7409e2a0040a3b57" translate="yes" xml:space="preserve">
          <source>Because the methods in the &lt;code&gt;SyncFactory&lt;/code&gt; class are all static, there is only one &lt;code&gt;SyncFactory&lt;/code&gt; object per Java VM at any one time. This ensures that there is a single source from which a &lt;code&gt;RowSet&lt;/code&gt; implementation can obtain its &lt;code&gt;SyncProvider&lt;/code&gt; implementation.</source>
          <target state="translated">&lt;code&gt;SyncFactory&lt;/code&gt; 클래스 의 메소드 는 모두 정적이므로 Java VM 당 한 번에 하나의 &lt;code&gt;SyncFactory&lt;/code&gt; 오브젝트 만 있습니다. 이렇게하면 &lt;code&gt;RowSet&lt;/code&gt; 구현이 해당 &lt;code&gt;SyncProvider&lt;/code&gt; 구현을 가져올 수 있는 단일 소스가 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b93a7cdfd7c99bb437d8215debe971e79aec5ce5" translate="yes" xml:space="preserve">
          <source>Because the second button and the panel share the same prevailing row, they are both aligned along their baseline.</source>
          <target state="translated">두 번째 버튼과 패널은 동일한 우선 행을 공유하므로 둘 다 기준선을 따라 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="3aff1c4d3a381edabcaf6682a0b2aba1d8d372e5" translate="yes" xml:space="preserve">
          <source>Because the various types of controls have different purposes and features, all of their functionality is accessed from the subclasses that define each kind of control.</source>
          <target state="translated">다양한 유형의 컨트롤은 목적과 기능이 다르기 때문에 각 기능을 정의하는 하위 클래스에서 모든 기능에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="642913ef4a4bd862329d364f643f4f0968549f1a" translate="yes" xml:space="preserve">
          <source>Because the view makes extensive use of the &lt;code&gt;convertRowIndexToModel&lt;/code&gt;, &lt;code&gt;convertRowIndexToView&lt;/code&gt; and &lt;code&gt;getViewRowCount&lt;/code&gt; methods, these methods need to be fast.</source>
          <target state="translated">뷰는 &lt;code&gt;convertRowIndexToModel&lt;/code&gt; , &lt;code&gt;convertRowIndexToView&lt;/code&gt; 및 &lt;code&gt;getViewRowCount&lt;/code&gt; 메서드 를 광범위하게 사용하기 때문에 이러한 메서드는 빠를 필요가 있습니다.</target>
        </trans-unit>
        <trans-unit id="163b34be87a1198494a0bc5ba52f751e0a5543c9" translate="yes" xml:space="preserve">
          <source>Because the view objects are produced from a factory and therefore cannot necessarily be counted upon to be in a particular pattern, one must be able to perform translation to properly locate spatial representation of the model. The methods for doing this are:</source>
          <target state="translated">뷰 객체는 공장에서 생성되므로 특정 패턴에 있다고 반드시 계산할 수 없기 때문에 모델의 공간 표현을 올바르게 찾기 위해 변환을 수행 할 수 있어야합니다. 이를 수행하는 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2c8daaf17f9de78671bc2384030489ea907aacb8" translate="yes" xml:space="preserve">
          <source>Because this field is final (it is part of an interface), its value cannot be changed.</source>
          <target state="translated">이 필드는 최종 필드이므로 (인터페이스의 일부) 값을 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f615c0a8b17750fc41aeab1a26ba97dda5c52bc2" translate="yes" xml:space="preserve">
          <source>Because this method allows the public key to be specified as a byte array, it may be used for unknown key types.</source>
          <target state="translated">이 방법을 사용하면 공개 키를 바이트 배열로 지정할 수 있으므로 알 수없는 키 유형에 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5e929da612339a4d6ba25b0b5b41bd450b9c590" translate="yes" xml:space="preserve">
          <source>Because this option is a hint, applications that want to verify what loopback mode is set to should call &lt;a href=&quot;#getLoopbackMode()&quot;&gt;&lt;code&gt;getLoopbackMode()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 옵션은 힌트이므로 어떤 루프백 모드가 설정되어 있는지 확인하려는 응용 프로그램은 &lt;a href=&quot;#getLoopbackMode()&quot;&gt; &lt;code&gt;getLoopbackMode()&lt;/code&gt; &lt;/a&gt; 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="b7237d2936cbcdffafd29058533e2a1c33fe7008" translate="yes" xml:space="preserve">
          <source>Because this option is a hint, applications that want to verify what loopback mode is set to should call &lt;a href=&quot;multicastsocket#getLoopbackMode--&quot;&gt;&lt;code&gt;getLoopbackMode()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">이 옵션은 힌트이므로 어떤 루프백 모드가 설정되어 있는지 확인하려는 응용 프로그램은 &lt;a href=&quot;multicastsocket#getLoopbackMode--&quot;&gt; &lt;code&gt;getLoopbackMode()&lt;/code&gt; &lt;/a&gt; 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="1ebe211d6bfd4fa1d5f4559f417adac84ad2d9bc" translate="yes" xml:space="preserve">
          <source>BeepAction</source>
          <target state="translated">BeepAction</target>
        </trans-unit>
        <trans-unit id="7b0915244f7627fd3f02fdbc99aee904efe8a5d2" translate="yes" xml:space="preserve">
          <source>Before AH</source>
          <target state="translated">AH 전</target>
        </trans-unit>
        <trans-unit id="7d4b3a95899e29c0370074b2c6b0c590ee28fc03" translate="yes" xml:space="preserve">
          <source>Before R.O.C.</source>
          <target state="translated">ROC 이전</target>
        </trans-unit>
        <trans-unit id="8c6e246a9fb029787ed62d0121e1dc0e5dc94a6b" translate="yes" xml:space="preserve">
          <source>Before a keystore can be accessed, it must be &lt;a href=&quot;#load(java.io.InputStream,char%5B%5D)&quot;&gt;&lt;code&gt;loaded&lt;/code&gt;&lt;/a&gt; (unless it was already loaded during instantiation).</source>
          <target state="translated">키 저장소에 액세스하려면 먼저 &lt;a href=&quot;#load(java.io.InputStream,char%5B%5D)&quot;&gt; &lt;code&gt;loaded&lt;/code&gt; &lt;/a&gt; 해야합니다 (인스턴스화 중에 이미로드 된 경우 제외).</target>
        </trans-unit>
        <trans-unit id="b90ec4cf563e926a2b5d401db661be6cb1b2cc7c" translate="yes" xml:space="preserve">
          <source>Before a keystore can be accessed, it must be &lt;a href=&quot;keystore#load-java.io.InputStream-char:A-&quot;&gt;&lt;code&gt;loaded&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">키 스토어에 액세스하려면 &lt;a href=&quot;keystore#load-java.io.InputStream-char:A-&quot;&gt; &lt;code&gt;loaded&lt;/code&gt; &lt;/a&gt; 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d2f8841cfae75e6df4226f2c8ba7f3dcae9a3f4c" translate="yes" xml:space="preserve">
          <source>Before calling the &lt;code&gt;execute&lt;/code&gt; method, however, the command and properties needed for establishing a connection must be set. The following code fragment creates a &lt;code&gt;JdbcRowSetImpl&lt;/code&gt; object, sets the command and connection properties, sets the placeholder parameter, and then invokes the method &lt;code&gt;execute&lt;/code&gt;.</source>
          <target state="translated">그러나 &lt;code&gt;execute&lt;/code&gt; 메서드를 호출하기 전에 연결을 설정하는 데 필요한 명령 및 속성을 설정해야합니다. 다음 코드 조각은 &lt;code&gt;JdbcRowSetImpl&lt;/code&gt; 객체를 만들고 , 명령 및 연결 속성을 설정하고, 자리 표시 자 매개 변수를 설정 한 다음 &lt;code&gt;execute&lt;/code&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="753dce172eb0e626c542eda473005f8740491552" translate="yes" xml:space="preserve">
          <source>Before calling the call method, additional aspects of the task can be configured, for example, by calling the &lt;a href=&quot;#setLocale(java.util.Locale)&quot;&gt;setLocale&lt;/a&gt; method.</source>
          <target state="translated">call 메서드를 호출하기 전에 &lt;a href=&quot;#setLocale(java.util.Locale)&quot;&gt;setLocale&lt;/a&gt; 메서드 를 호출하여 작업의 추가 측면을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="296fec54056605de95bd13fbc5b8f8dfc0363d86" translate="yes" xml:space="preserve">
          <source>Before calling the call method, additional aspects of the task can be configured, for example, by calling the &lt;a href=&quot;#setProcessors(java.lang.Iterable)&quot;&gt;setProcessors&lt;/a&gt; method.</source>
          <target state="translated">call 메서드를 호출하기 전에 &lt;a href=&quot;#setProcessors(java.lang.Iterable)&quot;&gt;setProcessors&lt;/a&gt; 메서드 를 호출하는 등 작업의 추가 측면을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2c6581353476a1bfed6b889babc0e047499173b7" translate="yes" xml:space="preserve">
          <source>Before calling the call method, additional aspects of the task can be configured, for example, by calling the &lt;a href=&quot;documentationtool.documentationtask#setLocale-java.util.Locale-&quot;&gt;setLocale&lt;/a&gt; method.</source>
          <target state="translated">call 메소드를 호출하기 전에 &lt;a href=&quot;documentationtool.documentationtask#setLocale-java.util.Locale-&quot;&gt;setLocale&lt;/a&gt; 메소드 를 호출하여 태스크의 추가 측면을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="682fe1f3a87dc5da4197cc050da21c8ceee4d235" translate="yes" xml:space="preserve">
          <source>Before calling the call method, additional aspects of the task can be configured, for example, by calling the &lt;a href=&quot;javacompiler.compilationtask#setProcessors-java.lang.Iterable-&quot;&gt;setProcessors&lt;/a&gt; method.</source>
          <target state="translated">call 메소드를 호출하기 전에 예를 들어 &lt;a href=&quot;javacompiler.compilationtask#setProcessors-java.lang.Iterable-&quot;&gt;setProcessors&lt;/a&gt; 메소드 를 호출하여 태스크의 추가 측면을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="39cbd6cf39059e497df23f5ad5b8839c14c418da" translate="yes" xml:space="preserve">
          <source>Before calling the target, the adapter verifies that the array contains exactly enough elements to provide a correct argument count to the target method handle. (The array may also be null when zero elements are required.)</source>
          <target state="translated">대상을 호출하기 전에 어댑터는 배열에 대상 메소드 핸들에 올바른 인수 수를 제공하기에 충분한 요소가 포함되어 있는지 확인합니다. 0 개의 요소가 필요한 경우 배열이 null 일 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f030655d47a87cc3db22d04b3c1ea93c22b28d9d" translate="yes" xml:space="preserve">
          <source>Before delegation, an absolute resource name is constructed from the given resource name using this algorithm:</source>
          <target state="translated">위임하기 전에이 알고리즘을 사용하여 주어진 리소스 이름에서 절대 리소스 이름이 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="8d4298e7c13480ddbdb679b1fd68ea1710f24d7d" translate="yes" xml:space="preserve">
          <source>Before fetching the printable, this method will gracefully terminate editing, if necessary, to prevent an editor from showing in the printed result. Additionally, &lt;code&gt;JTable&lt;/code&gt; will prepare its renderers during printing such that selection and focus are not indicated. As far as customizing further how the table looks in the printout, developers can provide custom renderers or paint code that conditionalize on the value of &lt;a href=&quot;jcomponent#isPaintingForPrint()&quot;&gt;&lt;code&gt;JComponent.isPaintingForPrint()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인쇄 가능한 항목을 가져 오기 전에이 메서드는 필요한 경우 편집을 정상적으로 종료하여 편집자가 인쇄 된 결과에 표시되지 않도록합니다. 또한 &lt;code&gt;JTable&lt;/code&gt; 은 인쇄 중에 선택 및 초점이 표시되지 않도록 렌더러를 준비합니다. 출력물에서 테이블이 어떻게 보이는지 추가로 사용자 정의하는 한 개발자는 &lt;a href=&quot;jcomponent#isPaintingForPrint()&quot;&gt; &lt;code&gt;JComponent.isPaintingForPrint()&lt;/code&gt; &lt;/a&gt; 의 값을 조건화하는 사용자 정의 렌더러 또는 페인트 코드를 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9e1aa94e1686f63e72ca478b21aec0fce400300f" translate="yes" xml:space="preserve">
          <source>Before invoking its target, if the access mode type differs from the desired given type, the invoker will apply reference casts as necessary and box, unbox, or widen primitive values, as if by &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;. Similarly, the return value will be converted as necessary.</source>
          <target state="translated">대상을 호출하기 전에 액세스 모드 유형이 원하는 지정된 유형과 다른 경우 호출자는 필요에 따라 참조 캐스트를 적용하고 &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt; 에서처럼 기본 값을 box, unbox 또는 widen 합니다. 마찬가지로 반환 값은 필요에 따라 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="b8b6180b4e65e205fad7feb08a0f338d0025dc48" translate="yes" xml:space="preserve">
          <source>Before invoking its target, if the target differs from the expected type, the invoker will apply reference casts as necessary and box, unbox, or widen primitive values, as if by &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;. Similarly, the return value will be converted as necessary. If the target is a &lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;variable arity method handle&lt;/a&gt;, the required arity conversion will be made, again as if by &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">대상을 호출하기 전에 대상이 예상 유형과 다른 경우 호출자는 필요에 따라 참조 캐스트를 적용하고 &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt; 에서처럼 기본 값을 box, unbox 또는 widen 합니다. 마찬가지로 반환 값은 필요에 따라 변환됩니다. 대상이 &lt;a href=&quot;methodhandle#asVarargsCollector(java.lang.Class)&quot;&gt;가변 arity 메서드 handle&lt;/a&gt; 인 경우 &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;asType&lt;/code&gt; 에서처럼&lt;/a&gt; 다시 필요한 arity 변환이 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="e9a1c37e3057da043675d120f996bd6fe95bbbbc" translate="yes" xml:space="preserve">
          <source>Before invoking its target, if the target differs from the expected type, the invoker will apply reference casts as necessary and box, unbox, or widen primitive values, as if by &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;. Similarly, the return value will be converted as necessary. If the target is a &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;variable arity method handle&lt;/a&gt;, the required arity conversion will be made, again as if by &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">대상을 호출하기 전에 대상이 예상되는 유형과 다른 경우 호출자는 &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt; 과 같이 필요에 따라 참조 캐스트를 적용하고 기본 값을 box, unbox 또는 widen 적용 합니다. 마찬가지로 반환 값은 필요에 따라 변환됩니다. 대상이 &lt;a href=&quot;methodhandle#asVarargsCollector-java.lang.Class-&quot;&gt;가변 arity 메소드 핸들&lt;/a&gt; 인 경우 &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;asType&lt;/code&gt; 에&lt;/a&gt; 의한 것처럼 필요한 arity 변환이 다시 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="e30b176f2e4668d552569760e28a3e8966b08c4b" translate="yes" xml:space="preserve">
          <source>Before invoking its target, the invoker will spread the final array, apply reference casts as necessary, and unbox and widen primitive arguments. If, when the invoker is called, the supplied array argument does not have the correct number of elements, the invoker will throw an &lt;a href=&quot;../illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; instead of invoking the target.</source>
          <target state="translated">대상을 호출하기 전에 호출자는 최종 배열을 분산시키고 필요에 따라 참조 캐스트를 적용하며 기본 인수를 개봉하고 넓 힙니다. 호출자가 호출 될 때 제공된 배열 인수에 올바른 수의 요소가없는 경우 호출자는 대상을 호출하는 대신 &lt;a href=&quot;../illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; &lt;/a&gt; 을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="504005d82b337b080b3f2b9ef0eb5ae5475a96df" translate="yes" xml:space="preserve">
          <source>Before making use of the &lt;code&gt;cpe&lt;/code&gt; parameter, this method updates the environment associated with that object by setting the value of the property &lt;a href=&quot;#CPE&quot;&gt;&lt;code&gt;CPE&lt;/code&gt;&lt;/a&gt; to &lt;code&gt;cpe&lt;/code&gt;. This property will be inherited by the continuation context, and may be used by that context's service provider to inspect the fields of this exception.</source>
          <target state="translated">&lt;code&gt;cpe&lt;/code&gt; 매개 변수 를 사용하기 전에이 메소드는 &lt;a href=&quot;#CPE&quot;&gt; &lt;code&gt;CPE&lt;/code&gt; &lt;/a&gt; 특성 값 을 &lt;code&gt;cpe&lt;/code&gt; 로 설정하여 해당 오브젝트와 연관된 환경을 업데이트합니다 . 이 속성은 연속 컨텍스트에 상속되며 해당 컨텍스트의 서비스 공급자가이 예외의 필드를 검사하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd62acf59faaf76e2fc6d5eed1b3b0c735204a19" translate="yes" xml:space="preserve">
          <source>Before method resolution, if the explicitly specified caller class is not identical with the lookup class, or if this lookup object does not have &lt;a href=&quot;methodhandles.lookup#privacc&quot;&gt;private access&lt;/a&gt; privileges, the access fails.</source>
          <target state="translated">메서드 확인 전에 명시 적으로 지정된 호출자 클래스가 조회 클래스와 동일하지 않거나이 조회 개체에 &lt;a href=&quot;methodhandles.lookup#privacc&quot;&gt;개인 액세스&lt;/a&gt; 권한 이없는 경우 액세스가 실패합니다.</target>
        </trans-unit>
        <trans-unit id="f6bea1b12ef687f4dce8bb831deca88d028d9641" translate="yes" xml:space="preserve">
          <source>Before obtaining an item each thread must acquire a permit from the semaphore, guaranteeing that an item is available for use. When the thread has finished with the item it is returned back to the pool and a permit is returned to the semaphore, allowing another thread to acquire that item. Note that no synchronization lock is held when &lt;a href=&quot;#acquire()&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; is called as that would prevent an item from being returned to the pool. The semaphore encapsulates the synchronization needed to restrict access to the pool, separately from any synchronization needed to maintain the consistency of the pool itself.</source>
          <target state="translated">항목을 얻기 전에 각 스레드는 항목을 사용할 수 있음을 보장하는 세마포어로부터 허가를 얻어야합니다. 스레드가 항목을 완료하면 풀로 다시 반환되고 허용이 세마포로 반환되어 다른 스레드가 해당 항목을 얻을 수 있습니다. &lt;a href=&quot;#acquire()&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt; 가 호출 될 때 동기화 잠금이 유지 되지 않으면 항목이 풀로 반환되지 않습니다. 세마포어는 풀 자체의 일관성을 유지하는 데 필요한 동기화와 별도로 풀에 대한 액세스를 제한하는 데 필요한 동기화를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="cf2c479bbccc25a5fcb073098d52fff42c7077d7" translate="yes" xml:space="preserve">
          <source>Before obtaining an item each thread must acquire a permit from the semaphore, guaranteeing that an item is available for use. When the thread has finished with the item it is returned back to the pool and a permit is returned to the semaphore, allowing another thread to acquire that item. Note that no synchronization lock is held when &lt;a href=&quot;semaphore#acquire--&quot;&gt;&lt;code&gt;acquire()&lt;/code&gt;&lt;/a&gt; is called as that would prevent an item from being returned to the pool. The semaphore encapsulates the synchronization needed to restrict access to the pool, separately from any synchronization needed to maintain the consistency of the pool itself.</source>
          <target state="translated">아이템을 얻기 전에 각 스레드는 세마포어로부터 허가를 얻어 아이템을 사용할 수 있음을 보증해야합니다. 스레드가 항목을 완료하면 풀로 다시 리턴되고 허가가 세마포어로 리턴되어 다른 스레드가 해당 항목을 획득 할 수 있습니다. &lt;a href=&quot;semaphore#acquire--&quot;&gt; &lt;code&gt;acquire()&lt;/code&gt; &lt;/a&gt; 가 호출 될 때 동기화 잠금이 유지되지 않으므로 항목이 풀로 리턴되지 않습니다. 세마포어는 풀 자체의 일관성을 유지하는 데 필요한 동기화와 별도로 풀에 대한 액세스를 제한하는 데 필요한 동기화를 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="6ac069b2fb6e56a3ab76a4302dd9ac77db0fddc1" translate="yes" xml:space="preserve">
          <source>Before rounding, the scale of the logical exact intermediate result is the preferred scale for that operation. If the exact numerical result cannot be represented in &lt;code&gt;precision&lt;/code&gt; digits, rounding selects the set of digits to return and the scale of the result is reduced from the scale of the intermediate result to the least scale which can represent the &lt;code&gt;precision&lt;/code&gt; digits actually returned. If the exact result can be represented with at most &lt;code&gt;precision&lt;/code&gt; digits, the representation of the result with the scale closest to the preferred scale is returned. In particular, an exactly representable quotient may be represented in fewer than &lt;code&gt;precision&lt;/code&gt; digits by removing trailing zeros and decreasing the scale. For example, rounding to three digits using the &lt;a href=&quot;roundingmode#FLOOR&quot;&gt;floor&lt;/a&gt; rounding mode,</source>
          <target state="translated">반올림하기 전에 논리적 정확한 중간 결과의 스케일이 해당 조작에 선호되는 스케일입니다. 정확한 숫자 결과를 &lt;code&gt;precision&lt;/code&gt; 자릿수 로 표현할 수없는 경우 반올림은 반환 할 자릿수 세트를 선택하고 결과의 스케일이 중간 결과 스케일에서 실제로 리턴 된 &lt;code&gt;precision&lt;/code&gt; 자릿수를 나타낼 수있는 최소 스케일로 축소 됩니다. 정확한 결과를 최대 &lt;code&gt;precision&lt;/code&gt; 로 표현할 수 있으면 원하는 스케일에 가장 가까운 스케일로 결과를 표시합니다. 특히 정확하게 표현할 수있는 몫은 &lt;code&gt;precision&lt;/code&gt; 보다 덜 표현 될 수 있습니다.후행 0을 제거하고 스케일을 줄임으로써 숫자. 예를 들어, &lt;a href=&quot;roundingmode#FLOOR&quot;&gt;바닥&lt;/a&gt; 반올림 모드를 사용하여 3 자리로 반올림</target>
        </trans-unit>
        <trans-unit id="951648737fa4f2bf743ea48f8ed602b1235c12df" translate="yes" xml:space="preserve">
          <source>Before switching away from an input method, any currently uncommitted text is committed. If no input method or keyboard layout supporting the requested locale is available, then false is returned.</source>
          <target state="translated">입력 방법에서 전환하기 전에 현재 커밋되지 않은 모든 텍스트가 커밋됩니다. 요청 된 로케일을 지원하는 입력 방법이나 키보드 레이아웃을 사용할 수없는 경우 false가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="0a4e0dc90ed4d0429eef5b5740111beb7f935568" translate="yes" xml:space="preserve">
          <source>Before the &lt;code&gt;doInBackground&lt;/code&gt; method is invoked on a</source>
          <target state="translated">&lt;code&gt;doInBackground&lt;/code&gt; 메소드가 호출 되기 전에</target>
        </trans-unit>
        <trans-unit id="cfdda49c0e5c7a8469a6e71341094aade7ecf087" translate="yes" xml:space="preserve">
          <source>Before the JVM can execute a dynamic call site (an &lt;code&gt;invokedynamic&lt;/code&gt; instruction), the call site must first be &lt;em&gt;linked&lt;/em&gt;. Linking is accomplished by calling a &lt;em&gt;bootstrap method&lt;/em&gt; which is given the static information content of the call site, and which must produce a &lt;a href=&quot;methodhandle&quot;&gt;&lt;code&gt;method handle&lt;/code&gt;&lt;/a&gt; that gives the behavior of the call site.</source>
          <target state="translated">JVM이 동적 호출 사이트 ( &lt;code&gt;invokedynamic&lt;/code&gt; 명령)를 실행 하려면 먼저 호출 사이트가 &lt;em&gt;링크되어&lt;/em&gt; 있어야합니다 . 연결은 호출 사이트의 정적 정보 내용이 제공되고 호출 사이트 의 동작을 제공 하는 &lt;a href=&quot;methodhandle&quot;&gt; &lt;code&gt;method handle&lt;/code&gt; &lt;/a&gt; 을 생성해야하는 &lt;em&gt;부트 스트랩 메소드&lt;/em&gt; 를 호출하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="5b359da9098af6736c39a0a9e42441ac43e9cfe7" translate="yes" xml:space="preserve">
          <source>Before the JVM can execute an &lt;code&gt;invokedynamic&lt;/code&gt; instruction, the instruction must first be &lt;em&gt;linked&lt;/em&gt;. Linking is accomplished by calling a &lt;em&gt;bootstrap method&lt;/em&gt; which is given the static information content of the call, and which must produce a &lt;a href=&quot;callsite&quot;&gt;&lt;code&gt;CallSite&lt;/code&gt;&lt;/a&gt; that gives the behavior of the invocation.</source>
          <target state="translated">JVM이 &lt;code&gt;invokedynamic&lt;/code&gt; 명령어를 실행 하려면 먼저 명령어가 &lt;em&gt;링크&lt;/em&gt; 되어야합니다 . 연결은 호출 의 정적 정보 콘텐츠 가 제공되고 호출 동작을 제공 하는 &lt;a href=&quot;callsite&quot;&gt; &lt;code&gt;CallSite&lt;/code&gt; &lt;/a&gt; 를 생성해야하는 &lt;em&gt;부트 스트랩 메서드&lt;/em&gt; 를 호출하여 수행 됩니다.</target>
        </trans-unit>
        <trans-unit id="f66d32089c2232424cd81634116f49302e3834e3" translate="yes" xml:space="preserve">
          <source>Before the context establishment phase is initiated, the context initiator may request specific characteristics desired of the established context. Not all underlying mechanisms support all characteristics that a caller might desire. After the context is established, the caller can check the actual characteristics and services offered by that context by means of various query methods. When using the Kerberos v5 GSS-API mechanism offered by the default &lt;code&gt;GSSManager&lt;/code&gt; instance, all optional services will be available locally. They are mutual authentication, credential delegation, confidentiality and integrity protection, and per-message replay detection and sequencing. Note that in the GSS-API, message integrity is a prerequisite for message confidentiality.</source>
          <target state="translated">컨텍스트 설정 단계가 시작되기 전에 컨텍스트 시작자는 설정된 컨텍스트에서 원하는 특정 특성을 요청할 수 있습니다. 모든 기본 메커니즘이 호출자가 원하는 모든 특성을 지원하는 것은 아닙니다. 컨텍스트가 설정되면 호출자는 다양한 쿼리 메서드를 통해 해당 컨텍스트에서 제공하는 실제 특성과 서비스를 확인할 수 있습니다. 기본 &lt;code&gt;GSSManager&lt;/code&gt; 인스턴스에서 제공하는 Kerberos v5 GSS-API 메커니즘을 사용하는 경우 모든 선택적 서비스를 로컬에서 사용할 수 있습니다. 상호 인증, 자격 증명 위임, 기밀성 및 무결성 보호, 메시지 별 재생 감지 및 순서 지정입니다. GSS-API에서 메시지 무결성은 메시지 기밀성을위한 전제 조건입니다.</target>
        </trans-unit>
        <trans-unit id="1922b3b382ac0bb96cbf14e97d76c3e1906de4d2" translate="yes" xml:space="preserve">
          <source>Before the layout begins the method gets the &lt;code&gt;resizingColumn&lt;/code&gt; of the &lt;code&gt;tableHeader&lt;/code&gt;. When the method is called as a result of the resizing of an enclosing window, the &lt;code&gt;resizingColumn&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;. This means that resizing has taken place &quot;outside&quot; the &lt;code&gt;JTable&lt;/code&gt; and the change - or &quot;delta&quot; - should be distributed to all of the columns regardless of this &lt;code&gt;JTable&lt;/code&gt;'s automatic resize mode.</source>
          <target state="translated">레이아웃이 시작되기 전에 메서드는 &lt;code&gt;tableHeader&lt;/code&gt; 의 &lt;code&gt;resizingColumn&lt;/code&gt; 을 가져옵니다 . 둘러싸는 창의 크기 조정 결과로 메서드가 호출되면 &lt;code&gt;resizingColumn&lt;/code&gt; 은 &lt;code&gt;null&lt;/code&gt; 입니다. 이것은 크기 조정이 &lt;code&gt;JTable&lt;/code&gt; 의 &quot;외부&quot;에서 이루어졌고 변경 (또는 &quot;델타&quot;)이이 &lt;code&gt;JTable&lt;/code&gt; 의 자동 크기 조정 모드에 관계없이 모든 열에 배포되어야 함을 의미 합니다.</target>
        </trans-unit>
        <trans-unit id="fc632d2f313a755920fc79831cb35b0751ad6a20" translate="yes" xml:space="preserve">
          <source>Before the method handle is returned, the passed-in value is converted to the requested type. If the requested type is primitive, widening primitive conversions are attempted, else reference conversions are attempted.</source>
          <target state="translated">메소드 핸들이 리턴되기 전에 전달 된 값이 요청 된 유형으로 변환됩니다. 요청 된 유형이 프리미티브 인 경우 확장 프리미티브 변환이 시도되고, 그렇지 않으면 참조 변환이 시도됩니다.</target>
        </trans-unit>
        <trans-unit id="c1c57a4219a884d0b0a3b4a9cda8e063a8811116" translate="yes" xml:space="preserve">
          <source>Before this &lt;code&gt;CallSite&lt;/code&gt; object is returned from a bootstrap method, or invoked in some other manner, it is usually provided with a more useful target method, via a call to &lt;a href=&quot;callsite#setTarget(java.lang.invoke.MethodHandle)&quot;&gt;&lt;code&gt;setTarget&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;code&gt;CallSite&lt;/code&gt; 객체가 부트 스트랩 메서드에서 반환되거나 다른 방식으로 호출 되기 전에 일반적으로 &lt;a href=&quot;callsite#setTarget(java.lang.invoke.MethodHandle)&quot;&gt; &lt;code&gt;setTarget&lt;/code&gt; &lt;/a&gt; 호출을 통해 더 유용한 대상 메서드가 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="0cb5e0d5680b7f8b647296e7767a646dd9c21d7b" translate="yes" xml:space="preserve">
          <source>Before this &lt;code&gt;CallSite&lt;/code&gt; object is returned from a bootstrap method, or invoked in some other manner, it is usually provided with a more useful target method, via a call to &lt;a href=&quot;callsite#setTarget-java.lang.invoke.MethodHandle-&quot;&gt;&lt;code&gt;setTarget&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;code&gt;CallSite&lt;/code&gt; 객체가 부트 스트랩 메서드에서 반환되거나 다른 방식으로 호출 되기 전에 &lt;a href=&quot;callsite#setTarget-java.lang.invoke.MethodHandle-&quot;&gt; &lt;code&gt;setTarget&lt;/code&gt; 에&lt;/a&gt; 대한 호출을 통해보다 유용한 대상 메서드가 제공됩니다 .</target>
        </trans-unit>
        <trans-unit id="195735368fc0a0ac70b7eb262b52e1ce2a4b90a7" translate="yes" xml:space="preserve">
          <source>Before waiting on the condition the lock must be held by the current thread. A call to &lt;a href=&quot;condition#await()&quot;&gt;&lt;code&gt;Condition.await()&lt;/code&gt;&lt;/a&gt; will atomically release the lock before waiting and re-acquire the lock before the wait returns.</source>
          <target state="translated">조건을 기다리기 전에 현재 스레드가 잠금을 보유해야합니다. &lt;a href=&quot;condition#await()&quot;&gt; &lt;code&gt;Condition.await()&lt;/code&gt; &lt;/a&gt; 대한 호출 은 대기하기 전에 원자 적으로 잠금을 해제하고 대기가 반환되기 전에 잠금을 다시 획득합니다.</target>
        </trans-unit>
        <trans-unit id="6f94b8cc7f7034dbeddeb6c32eb04fe7274d5cd4" translate="yes" xml:space="preserve">
          <source>Before waiting on the condition the lock must be held by the current thread. A call to &lt;a href=&quot;condition#await--&quot;&gt;&lt;code&gt;Condition.await()&lt;/code&gt;&lt;/a&gt; will atomically release the lock before waiting and re-acquire the lock before the wait returns.</source>
          <target state="translated">조건을 대기하기 전에 현재 스레드가 잠금을 유지해야합니다. &lt;a href=&quot;condition#await--&quot;&gt; &lt;code&gt;Condition.await()&lt;/code&gt; &lt;/a&gt; 호출하면 대기 전에 잠금을 해제하고 대기가 다시 시작되기 전에 잠금을 다시 획득합니다.</target>
        </trans-unit>
        <trans-unit id="d21290f4ef30d771e174960f4bd7877417e7b443" translate="yes" xml:space="preserve">
          <source>Begin the scope of a prefix-URI Namespace mapping.</source>
          <target state="translated">접두사 URI 네임 스페이스 매핑의 범위를 시작합니다.</target>
        </trans-unit>
        <trans-unit id="ff935a177d541baa4fb762101b99797aec027879" translate="yes" xml:space="preserve">
          <source>Beginning with Java 1.1, the Abstract Window Toolkit sends the &lt;code&gt;List&lt;/code&gt; object all mouse, keyboard, and focus events that occur over it. (The old AWT event model is being maintained only for backwards compatibility, and its use is discouraged.)</source>
          <target state="translated">Java 1.1부터 Abstract Window Toolkit은 그 위에서 발생하는 모든 마우스, 키보드 및 포커스 이벤트를 &lt;code&gt;List&lt;/code&gt; 객체에 보냅니다 . (이전 AWT 이벤트 모델은 이전 버전과의 호환성을 위해서만 유지되며 사용하지 않는 것이 좋습니다.)</target>
        </trans-unit>
        <trans-unit id="bdcec66e8fdb1bbb7f7fda7938c239babcb54786" translate="yes" xml:space="preserve">
          <source>Beginning with Java 1.1, the background color of offscreen images may be system dependent. Applications should use &lt;code&gt;setColor&lt;/code&gt; followed by &lt;code&gt;fillRect&lt;/code&gt; to ensure that an offscreen image is cleared to a specific color.</source>
          <target state="translated">Java 1.1부터 오프 스크린 이미지의 배경색은 시스템에 따라 달라질 수 있습니다. 응용 프로그램은 &lt;code&gt;setColor&lt;/code&gt; 다음에 &lt;code&gt;fillRect&lt;/code&gt; 를 사용하여 오프 스크린 이미지가 특정 색상으로 지워지도록해야합니다.</target>
        </trans-unit>
        <trans-unit id="77686338e2c58e4b9d124ae917c3ff10ab6136f2" translate="yes" xml:space="preserve">
          <source>Begins the insertion of a new image with undefined pixel values into an existing image stream.</source>
          <target state="translated">정의되지 않은 픽셀 값이있는 새 이미지를 기존 이미지 스트림에 삽입하기 시작합니다.</target>
        </trans-unit>
        <trans-unit id="a1f4c62b027ed19cbf20b859f2391a28ae4839c9" translate="yes" xml:space="preserve">
          <source>Begins the insertion of a new image with undefined pixel values into an existing image stream. Existing images with an index greater than &lt;code&gt;imageIndex&lt;/code&gt; are preserved, and their indices are each increased by 1. A value for &lt;code&gt;imageIndex&lt;/code&gt; of -1 may be used to signify an index one larger than the previous largest index; that is, it will cause the image to be logically appended to the end of the sequence. If the output is an &lt;code&gt;ImageOutputStream&lt;/code&gt;, the entirety of the stream must be both readable and writeable.</source>
          <target state="translated">정의되지 않은 픽셀 값을 가진 새 이미지를 기존 이미지 스트림에 삽입하기 시작합니다. &lt;code&gt;imageIndex&lt;/code&gt; 보다 큰 인덱스를 가진 기존 이미지 는 보존되고 인덱스는 각각 1 씩 증가합니다. &lt;code&gt;imageIndex&lt;/code&gt; 값 이 -1이면 이전의 가장 큰 인덱스보다 1이 큰 인덱스를 나타내는 데 사용할 수 있습니다. 즉, 이미지가 시퀀스의 끝에 논리적으로 추가됩니다. 출력이 &lt;code&gt;ImageOutputStream&lt;/code&gt; 인 경우, 스트림 전체를 읽을 수 있고 쓸 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="424802ce5c3bcb9ef4006d7c588adf578063a629" translate="yes" xml:space="preserve">
          <source>Begins the writing of a complete image stream, consisting of a single image with undefined pixel values and associated metadata and thumbnails, to the output.</source>
          <target state="translated">정의되지 않은 픽셀 값과 관련 메타 데이터 및 축소판이있는 단일 이미지로 구성된 전체 이미지 스트림을 출력에 쓰기 시작합니다.</target>
        </trans-unit>
        <trans-unit id="d746db5295ee254d5e5d57d1a9377bb1983d45cf" translate="yes" xml:space="preserve">
          <source>Begins the writing of a complete image stream, consisting of a single image with undefined pixel values and associated metadata and thumbnails, to the output. The pixel values will be defined by future calls to the &lt;code&gt;replacePixels&lt;/code&gt; methods. If the output is an &lt;code&gt;ImageOutputStream&lt;/code&gt;, its existing contents prior to the current seek position are not affected, and need not be readable or writable.</source>
          <target state="translated">픽셀 값이 정의되지 않은 단일 이미지와 관련 메타 데이터 및 썸네일로 구성된 전체 이미지 스트림을 출력에 기록하기 시작합니다. 픽셀 값은 향후 &lt;code&gt;replacePixels&lt;/code&gt; 메소드 호출로 정의됩니다 . 출력이 &lt;code&gt;ImageOutputStream&lt;/code&gt; 인 경우, 현재 탐색 위치 이전의 기존 내용은 영향을받지 않으며 읽기 또는 쓰기가 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fde3e69c68a04cbf766436fa5c8f0f575fb8dba9" translate="yes" xml:space="preserve">
          <source>Begins writing a new JAR file entry and positions the stream to the start of the entry data.</source>
          <target state="translated">새 JAR 파일 항목 쓰기를 시작하고 항목 데이터의 시작 부분에 스트림을 배치합니다.</target>
        </trans-unit>
        <trans-unit id="ed46de3018b4c134a34940f3521b9ad0eb7cb357" translate="yes" xml:space="preserve">
          <source>Begins writing a new JAR file entry and positions the stream to the start of the entry data. This method will also close any previous entry. The default compression method will be used if no compression method was specified for the entry. The current time will be used if the entry has no set modification time.</source>
          <target state="translated">새로운 JAR 파일 엔트리의 기입을 개시 해, 스트림을 엔트리 데이터의 선두에 배치합니다. 이 방법은 또한 이전 항목을 닫습니다. 항목에 대해 압축 방법을 지정하지 않은 경우 기본 압축 방법이 사용됩니다. 항목에 설정된 수정 시간이없는 경우 현재 시간이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="08da77241d063f02bf075fbed8a4fdfddc6c4ca6" translate="yes" xml:space="preserve">
          <source>Begins writing a new ZIP file entry and positions the stream to the start of the entry data.</source>
          <target state="translated">새 ZIP 파일 항목 쓰기를 시작하고 항목 데이터의 시작 부분에 스트림을 배치합니다.</target>
        </trans-unit>
        <trans-unit id="618be9ae51b3f4e063785849f4a9de1b2b337f32" translate="yes" xml:space="preserve">
          <source>Begins writing a new ZIP file entry and positions the stream to the start of the entry data. Closes the current entry if still active. The default compression method will be used if no compression method was specified for the entry, and the current time will be used if the entry has no set modification time.</source>
          <target state="translated">새 ZIP 파일 항목 쓰기를 시작하고 스트림을 항목 데이터의 시작 부분에 배치합니다. 여전히 활성 상태 인 경우 현재 항목을 닫습니다. 항목에 대해 압축 방법을 지정하지 않으면 기본 압축 방법이 사용되며 항목에 설정된 수정 시간이 없으면 현재 시간이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="70cb647a88bd7c9c17d225eecdaf0f898261eb60" translate="yes" xml:space="preserve">
          <source>Behavior</source>
          <target state="translated">Behavior</target>
        </trans-unit>
        <trans-unit id="07db216b8dccd8f901b852a5b720c24e8b8d8c27" translate="yes" xml:space="preserve">
          <source>Behavior of this method is unspecified in case &lt;code&gt;axis&lt;/code&gt; is neither &lt;code&gt;View.X_AXIS&lt;/code&gt; nor &lt;code&gt;View.Y_AXIS&lt;/code&gt;, and in case &lt;code&gt;offset&lt;/code&gt;, &lt;code&gt;pos&lt;/code&gt;, or &lt;code&gt;len&lt;/code&gt; is null.</source>
          <target state="translated">이 메서드의 동작은 &lt;code&gt;axis&lt;/code&gt; 가 &lt;code&gt;View.X_AXIS&lt;/code&gt; 또는 &lt;code&gt;View.Y_AXIS&lt;/code&gt; 가 아닌 경우, &lt;code&gt;offset&lt;/code&gt; , &lt;code&gt;pos&lt;/code&gt; 또는 &lt;code&gt;len&lt;/code&gt; 이 null 인 경우 지정되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ab9e303d8c9050755bb14d7bbe1a154620cde7a7" translate="yes" xml:space="preserve">
          <source>Being JavaBeans components, all rowsets participate in the JavaBeans event model, inheriting methods for registering listeners and notifying them of changes from the &lt;code&gt;BaseRowSet&lt;/code&gt; class. A listener for a &lt;code&gt;CachedRowSet&lt;/code&gt; object is a component that wants to be notified whenever there is a change in the rowset. For example, if a &lt;code&gt;CachedRowSet&lt;/code&gt; object contains the results of a query and those results are being displayed in, say, a table and a bar graph, the table and bar graph could be registered as listeners with the rowset so that they can update themselves to reflect changes. To become listeners, the table and bar graph classes must implement the &lt;code&gt;RowSetListener&lt;/code&gt; interface. Then they can be added to the &lt;code&gt;CachedRowSet&lt;/code&gt; object's list of listeners, as is illustrated in the following lines of code.</source>
          <target state="translated">JavaBeans 구성 요소이기 때문에 모든 행 집합은 JavaBeans 이벤트 모델에 참여하여 리스너를 등록하고 &lt;code&gt;BaseRowSet&lt;/code&gt; 클래스 에서 변경 사항을 알리는 메서드를 상속합니다 . &lt;code&gt;CachedRowSet&lt;/code&gt; 개체 의 수신기 는 행 집합이 변경 될 때마다 알림을 받고자 하는 구성 요소입니다. 예를 들어 &lt;code&gt;CachedRowSet&lt;/code&gt; 개체에 쿼리 결과가 포함되어 있고 해당 결과가 테이블 및 막대 그래프에 표시되는 경우 테이블 및 막대 그래프를 행 집합에 리스너로 등록하여 자체적으로 업데이트 할 수 있습니다. 변화를 반영합니다. 리스너가 되려면 테이블 및 막대 그래프 클래스가 &lt;code&gt;RowSetListener&lt;/code&gt; 인터페이스를 구현해야합니다 . 그런 다음 &lt;code&gt;CachedRowSet&lt;/code&gt; 에 추가 할 수 있습니다. 다음 코드 줄에 설명 된대로 객체의 리스너 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d03528d440c354c59d851c9ae6606c251359e20c" translate="yes" xml:space="preserve">
          <source>Below is a picture showing an example of a memory pool:</source>
          <target state="translated">아래는 메모리 풀의 예를 보여주는 그림입니다.</target>
        </trans-unit>
        <trans-unit id="65945b7da95e95e90e3873d052e480bcc47dd30c" translate="yes" xml:space="preserve">
          <source>Below is an example code implementing the same logic as the first example above but using the usage threshold notification mechanism to detect low memory conditions instead of polling. In this example code, upon receiving notification, the notification listener notifies another thread to perform the actual action such as to redistribute outstanding tasks, stop receiving tasks, or resume receiving tasks. The &lt;code&gt;handleNotification&lt;/code&gt; method should be designed to do a very minimal amount of work and return without delay to avoid causing delay in delivering subsequent notifications. Time-consuming actions should be performed by a separate thread. The notification listener may be invoked by multiple threads concurrently; so the tasks performed by the listener should be properly synchronized.</source>
          <target state="translated">다음은 위의 첫 번째 예와 동일한 논리를 구현하지만 사용 임계 값 알림 메커니즘을 사용하여 폴링 대신 메모리 부족 상태를 감지하는 코드 예입니다. 이 예제 코드에서 알림을 수신하면 알림 리스너는 미해결 작업을 재배포하거나 작업 수신을 중지하거나 작업 수신을 재개하는 등의 실제 작업을 수행하도록 다른 스레드에 알립니다. &lt;code&gt;handleNotification&lt;/code&gt; 방법은 이후의 통지의 지연을 방지하기 위해 지체없이 작업과 수익의 아주 최소한의 작업을 수행하도록 설계되어야한다. 시간이 많이 걸리는 작업은 별도의 스레드에서 수행해야합니다. 통지 리스너는 여러 스레드에 의해 동시에 호출 될 수 있습니다. 따라서 리스너가 수행 한 작업은 올바르게 동기화되어야합니다.</target>
        </trans-unit>
        <trans-unit id="484cfc24a55c16c6240695e1bf89c6275f4a8bb2" translate="yes" xml:space="preserve">
          <source>Below is an example of an XML archive containing some user interface components from the &lt;em&gt;swing&lt;/em&gt; toolkit:</source>
          <target state="translated">다음은 &lt;em&gt;스윙&lt;/em&gt; 툴킷의 일부 사용자 인터페이스 구성 요소를 포함하는 XML 아카이브의 예입니다 .</target>
        </trans-unit>
        <trans-unit id="cf5374552eafff1ff14559b2da6cc03f9f5a1857" translate="yes" xml:space="preserve">
          <source>Below is an example showing how to access an attribute from the platform extension:</source>
          <target state="translated">아래는 플랫폼 확장에서 속성에 액세스하는 방법을 보여주는 예입니다.</target>
        </trans-unit>
        <trans-unit id="4ca1d865d08d2e3747bc70774d5ee6a615a86d88" translate="yes" xml:space="preserve">
          <source>Below shows another example that takes some action if a memory pool is under low memory and ignores the memory usage changes during the action processing time.</source>
          <target state="translated">아래는 메모리 풀의 메모리가 부족한 경우 조치 처리 시간 동안 메모리 사용량 변경을 무시하는 일부 조치를 취하는 다른 예를 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="934ef7f56af9a72a5318b5e26c3debcb413caa0a" translate="yes" xml:space="preserve">
          <source>Besides &lt;code&gt;getString&lt;/code&gt;, &lt;code&gt;ResourceBundle&lt;/code&gt; also provides a method for getting string arrays, &lt;code&gt;getStringArray&lt;/code&gt;, as well as a generic &lt;code&gt;getObject&lt;/code&gt; method for any other type of object. When using &lt;code&gt;getObject&lt;/code&gt;, you'll have to cast the result to the appropriate type. For example:</source>
          <target state="translated">게다가 &lt;code&gt;getString&lt;/code&gt; , &lt;code&gt;ResourceBundle&lt;/code&gt; 의는 또한 문자열 배열, 취득하기위한 방법을 제공합니다 &lt;code&gt;getStringArray&lt;/code&gt; 와 뿐만 아니라 일반 &lt;code&gt;getObject&lt;/code&gt; 다른 형태의 객체 방법. &lt;code&gt;getObject&lt;/code&gt; 를 사용 하는 경우 결과를 적절한 유형으로 캐스트해야합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8c7d95704932129cdf6309eb99f19e805a69d0cd" translate="yes" xml:space="preserve">
          <source>Besides Queues, this package supplies Collection implementations designed for use in multithreaded contexts: &lt;a href=&quot;concurrenthashmap&quot;&gt;&lt;code&gt;ConcurrentHashMap&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;concurrentskiplistmap&quot;&gt;&lt;code&gt;ConcurrentSkipListMap&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;concurrentskiplistset&quot;&gt;&lt;code&gt;ConcurrentSkipListSet&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;copyonwritearraylist&quot;&gt;&lt;code&gt;CopyOnWriteArrayList&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;copyonwritearrayset&quot;&gt;&lt;code&gt;CopyOnWriteArraySet&lt;/code&gt;&lt;/a&gt;. When many threads are expected to access a given collection, a &lt;code&gt;ConcurrentHashMap&lt;/code&gt; is normally preferable to a synchronized &lt;code&gt;HashMap&lt;/code&gt;, and a &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; is normally preferable to a synchronized &lt;code&gt;TreeMap&lt;/code&gt;. A &lt;code&gt;CopyOnWriteArrayList&lt;/code&gt; is preferable to a synchronized &lt;code&gt;ArrayList&lt;/code&gt; when the expected number of reads and traversals greatly outnumber the number of updates to a list.</source>
          <target state="translated">큐 외에도이 패키지는 다중 스레드 컨텍스트 ( &lt;a href=&quot;concurrenthashmap&quot;&gt; &lt;code&gt;ConcurrentHashMap&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;concurrentskiplistmap&quot;&gt; &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;concurrentskiplistset&quot;&gt; &lt;code&gt;ConcurrentSkipListSet&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;copyonwritearraylist&quot;&gt; &lt;code&gt;CopyOnWriteArrayList&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;copyonwritearrayset&quot;&gt; &lt;code&gt;CopyOnWriteArraySet&lt;/code&gt; )&lt;/a&gt; 에서 사용하도록 설계된 Collection 구현을 제공합니다 . 많은 스레드가 지정된 컬렉션에 액세스 할 것으로 예상되는 경우, &lt;code&gt;ConcurrentHashMap&lt;/code&gt; 의는 동기화에 일반적으로 바람직하다 &lt;code&gt;HashMap&lt;/code&gt; 에 , 그리고 &lt;code&gt;ConcurrentSkipListMap&lt;/code&gt; 과는 동기화에 일반적으로 바람직하다 &lt;code&gt;TreeMap&lt;/code&gt; . &lt;code&gt;CopyOnWriteArrayList&lt;/code&gt; 동기화하는 것이 바람직하다 &lt;code&gt;ArrayList&lt;/code&gt; 예상되는 읽기 및 순회 수가 목록에 대한 업데이트 수보다 훨씬 많은 경우</target>
        </trans-unit>
        <trans-unit id="fac56fb2ddef5be9ffff448a37648184887b68fe" translate="yes" xml:space="preserve">
          <source>Besides a logical exact result, each arithmetic operation has a preferred scale for representing a result. The preferred scale for each operation is listed in the table below.</source>
          <target state="translated">논리적 인 정확한 결과 외에도 각 산술 연산에는 결과를 나타내는 데 선호되는 척도가 있습니다. 각 작업에 대한 선호 척도가 아래 표에 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="8440ac86775b5a49f695ad91edb531623efd8c64" translate="yes" xml:space="preserve">
          <source>Besides its active or inactive status, the &lt;code&gt;VoiceStatus&lt;/code&gt; class provides fields that reveal the voice's current MIDI channel, bank and program number, MIDI note number, and MIDI volume. All of these can change during the course of a voice. While the voice is inactive, each of these fields has an unspecified value, so you should check the active field first.</source>
          <target state="translated">활성 상태 또는 비활성 상태 외에도 &lt;code&gt;VoiceStatus&lt;/code&gt; 클래스는 음색의 현재 MIDI 채널, 뱅크 및 프로그램 번호, MIDI 음표 번호 및 MIDI 볼륨을 표시하는 필드를 제공합니다. 이 모든 것은 음성 중에 변경 될 수 있습니다. 음성이 비활성 상태 인 경우 이러한 각 필드에는 지정되지 않은 값이 있으므로 활성 필드를 먼저 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="6aab534b3d94d739347990b5440ac6add5eff7e1" translate="yes" xml:space="preserve">
          <source>Besides the class information inherited from its superclass, &lt;code&gt;DataLine.Info&lt;/code&gt; provides additional information specific to data lines.</source>
          <target state="translated">&lt;code&gt;DataLine.Info&lt;/code&gt; 는 수퍼 클래스에서 상속 된 클래스 정보 외에도 데이터 라인에 특정한 추가 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1965eb06dd44203226862726b9ad71cbd8011d62" translate="yes" xml:space="preserve">
          <source>Besides the class information inherited from its superclass, &lt;code&gt;DataLine.Info&lt;/code&gt; provides additional information specific to data lines. This information includes:</source>
          <target state="translated">&lt;code&gt;DataLine.Info&lt;/code&gt; 는 수퍼 클래스에서 상속 된 클래스 정보 외에도 데이터 라인에 특정한 추가 정보를 제공합니다. 이 정보에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="58093ac83bb65217337e8a197036923c3278212e" translate="yes" xml:space="preserve">
          <source>Best practice for applications is to pass a &lt;code&gt;Clock&lt;/code&gt; into any method that requires the current instant. A dependency injection framework is one way to achieve this:</source>
          <target state="translated">응용 프로그램의 모범 사례 는 현재 순간이 필요한 모든 메소드에 &lt;code&gt;Clock&lt;/code&gt; 를 전달하는 것 입니다. 의존성 주입 프레임 워크는 이것을 달성하는 한 가지 방법입니다.</target>
        </trans-unit>
        <trans-unit id="aa7a1dacddf5f6f1c0d81bdecdbc25b7daaf9a5d" translate="yes" xml:space="preserve">
          <source>BevelBorder</source>
          <target state="translated">BevelBorder</target>
        </trans-unit>
        <trans-unit id="515f94e489d8774b8331874012c307832c4c9b0c" translate="yes" xml:space="preserve">
          <source>BevelBorderUIResource</source>
          <target state="translated">BevelBorderUIResource</target>
        </trans-unit>
        <trans-unit id="93b969b7be1f298240201dd2bb713e6cd595ae62" translate="yes" xml:space="preserve">
          <source>Beware that bulk operations &lt;code&gt;putAll&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;toArray&lt;/code&gt;, &lt;code&gt;containsValue&lt;/code&gt;, and &lt;code&gt;clear&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; guaranteed to be performed atomically. For example, an iterator operating concurrently with a &lt;code&gt;putAll&lt;/code&gt; operation might view only some of the added elements.</source>
          <target state="translated">대량 작업 &lt;code&gt;putAll&lt;/code&gt; , &lt;code&gt;equals&lt;/code&gt; , &lt;code&gt;toArray&lt;/code&gt; , &lt;code&gt;containsValue&lt;/code&gt; , &lt;code&gt;clear&lt;/code&gt; 는 원자 적으로 수행 되는 &lt;em&gt;것이&lt;/em&gt; 보장 &lt;em&gt;되지 않습니다&lt;/em&gt; . 예를 들어 &lt;code&gt;putAll&lt;/code&gt; 작업 과 동시에 작동하는 반복자 는 추가 된 요소 중 일부만 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="20bb73ab1ad65708315426fe9ff0fbca515fcd2e" translate="yes" xml:space="preserve">
          <source>Beware that when the &lt;code&gt;Document&lt;/code&gt; supports the feature &quot;HTML&quot; [&lt;a href=&quot;http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109&quot;&gt;DOM Level 2 HTML&lt;/a&gt;] , the href attribute of the HTML BASE element takes precedence over this attribute when computing &lt;code&gt;Node.baseURI&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Document&lt;/code&gt; 가 &quot;HTML&quot;[ &lt;a href=&quot;http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109&quot;&gt;DOM Level 2 HTML&lt;/a&gt; ] 기능을 지원할 때 HTML BASE 요소의 href 속성이 &lt;code&gt;Node.baseURI&lt;/code&gt; 를 계산할 때이 속성보다 우선 합니다.</target>
        </trans-unit>
        <trans-unit id="937d963e09e94954376b9c34d556b71f250acb2a" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, the &lt;code&gt;size&lt;/code&gt; method is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these deques, determining the current number of elements requires a traversal of the elements, and so may report inaccurate results if this collection is modified during traversal.</source>
          <target state="translated">대부분의 컬렉션과 달리 &lt;code&gt;size&lt;/code&gt; 메서드는 일정 시간 작업 이 &lt;em&gt;아닙니다&lt;/em&gt; . 이러한 데크의 비동기 특성 때문에 현재 요소 수를 결정하려면 요소 순회가 필요하므로 순회 중에이 컬렉션이 수정되면 부정확 한 결과를보고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="017093ff288d93ef5666987fc26e7682d1f86028" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, the &lt;code&gt;size&lt;/code&gt; method is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these deques, determining the current number of elements requires a traversal of the elements, and so may report inaccurate results if this collection is modified during traversal. Additionally, the bulk operations &lt;code&gt;addAll&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt;, &lt;code&gt;containsAll&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, and &lt;code&gt;toArray&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; guaranteed to be performed atomically. For example, an iterator operating concurrently with an &lt;code&gt;addAll&lt;/code&gt; operation might view only some of the added elements.</source>
          <target state="translated">대부분의 컬렉션과 달리 &lt;code&gt;size&lt;/code&gt; 메서드는 상수 시간 작업 이 &lt;em&gt;아닙니다&lt;/em&gt; . 이러한 deque의 비동기 적 특성으로 인해 현재 요소 수를 판별하려면 요소의 순회가 필요하므로 순회 중에이 콜렉션이 수정되면 부정확 한 결과가보고 될 수 있습니다. 또한 대량 작업 &lt;code&gt;addAll&lt;/code&gt; , &lt;code&gt;removeAll&lt;/code&gt; , &lt;code&gt;retainAll&lt;/code&gt; , &lt;code&gt;containsAll&lt;/code&gt; , &lt;code&gt;equals&lt;/code&gt; 및 &lt;code&gt;toArray&lt;/code&gt; 가 원자 적으로 수행되는 것은 &lt;em&gt;아닙니다&lt;/em&gt; . 예를 들어 &lt;code&gt;addAll&lt;/code&gt; 작업 과 동시에 작동하는 반복기 는 추가 된 일부 요소 만 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fc26e15ace19b4b91b51b0c93ff09fdedf6fec40" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, the &lt;code&gt;size&lt;/code&gt; method is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these queues, determining the current number of elements requires a traversal of the elements, and so may report inaccurate results if this collection is modified during traversal.</source>
          <target state="translated">대부분의 컬렉션과 달리 &lt;code&gt;size&lt;/code&gt; 메서드는 일정 시간 작업 이 &lt;em&gt;아닙니다&lt;/em&gt; . 이러한 큐의 비동기 특성으로 인해 현재 요소 수를 판별하려면 요소 순회가 필요하므로 순회 중에이 컬렉션이 수정되면 부정확 한 결과를보고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bfa4cfe1d0e5287ba98bef1fd18c3f0953790122" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, the &lt;code&gt;size&lt;/code&gt; method is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these queues, determining the current number of elements requires a traversal of the elements, and so may report inaccurate results if this collection is modified during traversal. Additionally, the bulk operations &lt;code&gt;addAll&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt;, &lt;code&gt;containsAll&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, and &lt;code&gt;toArray&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; guaranteed to be performed atomically. For example, an iterator operating concurrently with an &lt;code&gt;addAll&lt;/code&gt; operation might view only some of the added elements.</source>
          <target state="translated">대부분의 컬렉션과 달리 &lt;code&gt;size&lt;/code&gt; 메서드는 상수 시간 작업 이 &lt;em&gt;아닙니다&lt;/em&gt; . 이러한 큐의 비동기 적 특성으로 인해 현재 요소 수를 판별하려면 요소의 순회가 필요하므로 순회 중이 콜렉션이 수정되면 부정확 한 결과를보고 할 수 있습니다. 또한 대량 작업 &lt;code&gt;addAll&lt;/code&gt; , &lt;code&gt;removeAll&lt;/code&gt; , &lt;code&gt;retainAll&lt;/code&gt; , &lt;code&gt;containsAll&lt;/code&gt; , &lt;code&gt;equals&lt;/code&gt; 및 &lt;code&gt;toArray&lt;/code&gt; 가 원자 적으로 수행되는 것은 &lt;em&gt;아닙니다&lt;/em&gt; . 예를 들어 &lt;code&gt;addAll&lt;/code&gt; 작업 과 동시에 작동하는 반복기 는 추가 된 일부 요소 만 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b95ffa88ae54f0eab83145dc8ca8aec53da916d" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, the &lt;code&gt;size&lt;/code&gt; method is &lt;em&gt;not&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these maps, determining the current number of elements requires a traversal of the elements, and so may report inaccurate results if this collection is modified during traversal. Additionally, the bulk operations &lt;code&gt;putAll&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, &lt;code&gt;toArray&lt;/code&gt;, &lt;code&gt;containsValue&lt;/code&gt;, and &lt;code&gt;clear&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; guaranteed to be performed atomically. For example, an iterator operating concurrently with a &lt;code&gt;putAll&lt;/code&gt; operation might view only some of the added elements.</source>
          <target state="translated">대부분의 컬렉션과 달리 &lt;code&gt;size&lt;/code&gt; 메서드는 일정한 시간 작업 이 &lt;em&gt;아닙니다&lt;/em&gt; . 이러한 맵의 비동기 적 특성으로 인해 현재 요소 수를 판별하려면 요소의 순회가 필요하므로 순회 중에이 콜렉션이 수정되면 부정확 한 결과가보고 될 수 있습니다. 또한 대량 작업 &lt;code&gt;putAll&lt;/code&gt; , &lt;code&gt;equals&lt;/code&gt; , &lt;code&gt;toArray&lt;/code&gt; , &lt;code&gt;containsValue&lt;/code&gt; 및 &lt;code&gt;clear&lt;/code&gt; 는 원자 적으로 수행되도록 보장 &lt;em&gt;되지 않습니다&lt;/em&gt; . 예를 들어 &lt;code&gt;putAll&lt;/code&gt; 작업 과 동시에 작동하는 반복기 는 추가 된 일부 요소 만 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="425d41ad9b88c76ebf1e1cc9c26f71f30d40c2e0" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, the &lt;code&gt;size&lt;/code&gt; method is &lt;em&gt;not&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these sets, determining the current number of elements requires a traversal of the elements, and so may report inaccurate results if this collection is modified during traversal.</source>
          <target state="translated">대부분의 컬렉션과 달리 &lt;code&gt;size&lt;/code&gt; 메서드는 일정 시간 작업 이 &lt;em&gt;아닙니다&lt;/em&gt; . 이러한 집합의 비동기 특성으로 인해 현재 요소 수를 결정하려면 요소 순회가 필요하며 순회 중에이 컬렉션이 수정되면 부정확 한 결과를보고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47a58265b3c4586c73c3742b1603c7f79f90523a" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, the &lt;code&gt;size&lt;/code&gt; method is &lt;em&gt;not&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these sets, determining the current number of elements requires a traversal of the elements, and so may report inaccurate results if this collection is modified during traversal. Additionally, the bulk operations &lt;code&gt;addAll&lt;/code&gt;, &lt;code&gt;removeAll&lt;/code&gt;, &lt;code&gt;retainAll&lt;/code&gt;, &lt;code&gt;containsAll&lt;/code&gt;, &lt;code&gt;equals&lt;/code&gt;, and &lt;code&gt;toArray&lt;/code&gt; are &lt;em&gt;not&lt;/em&gt; guaranteed to be performed atomically. For example, an iterator operating concurrently with an &lt;code&gt;addAll&lt;/code&gt; operation might view only some of the added elements.</source>
          <target state="translated">대부분의 컬렉션과 달리 &lt;code&gt;size&lt;/code&gt; 메서드는 일정한 시간 작업 이 &lt;em&gt;아닙니다&lt;/em&gt; . 이러한 세트의 비동기 특성으로 인해 현재 요소 수를 판별하려면 요소의 순회가 필요하므로 순회 중에이 콜렉션이 수정되면 부정확 한 결과가보고 될 수 있습니다. 또한 대량 작업 &lt;code&gt;addAll&lt;/code&gt; , &lt;code&gt;removeAll&lt;/code&gt; , &lt;code&gt;retainAll&lt;/code&gt; , &lt;code&gt;containsAll&lt;/code&gt; , &lt;code&gt;equals&lt;/code&gt; 및 &lt;code&gt;toArray&lt;/code&gt; 가 원자 적으로 수행되는 것은 &lt;em&gt;아닙니다&lt;/em&gt; . 예를 들어 &lt;code&gt;addAll&lt;/code&gt; 작업 과 동시에 작동하는 반복기 는 추가 된 일부 요소 만 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3e58a98475137a958ceb5ab6ed446783c80c2e5" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, this method is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these deques, determining the current number of elements requires traversing them all to count them. Additionally, it is possible for the size to change during execution of this method, in which case the returned result will be inaccurate. Thus, this method is typically not very useful in concurrent applications.</source>
          <target state="translated">대부분의 컬렉션과 달리이 방법은 일정한 시간 동안 작동 &lt;em&gt;하지 않습니다&lt;/em&gt; . 이러한 deque의 비동기 적 특성으로 인해 현재 요소 수를 결정하려면 모든 요소를 ​​순회하여 계산해야합니다. 또한이 메서드를 실행하는 동안 크기가 변경 될 수 있으며이 경우 반환 된 결과가 정확하지 않습니다. 따라서이 방법은 일반적으로 동시 응용 프로그램에서별로 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1ba3900ea53405bf6e70659e3db4077a29d3d23b" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, this method is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these maps, determining the current number of elements requires traversing them all to count them. Additionally, it is possible for the size to change during execution of this method, in which case the returned result will be inaccurate. Thus, this method is typically not very useful in concurrent applications.</source>
          <target state="translated">대부분의 컬렉션과 달리이 방법은 일정한 시간 동안 작동 &lt;em&gt;하지 않습니다&lt;/em&gt; . 이러한 맵의 비동기 특성으로 인해 현재 요소 수를 결정하려면 모든 요소를 ​​순회하여 계산해야합니다. 또한이 메서드를 실행하는 동안 크기가 변경 될 수 있으며이 경우 반환 된 결과가 정확하지 않습니다. 따라서이 방법은 일반적으로 동시 응용 프로그램에서별로 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="86d1be6613755e6659293b7e404b10b8c350a396" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, this method is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these queues, determining the current number of elements requires an O(n) traversal.</source>
          <target state="translated">대부분의 컬렉션과 달리이 방법은 일정한 시간 동안 작동 &lt;em&gt;하지 않습니다&lt;/em&gt; . 이러한 큐의 비동기 특성으로 인해 현재 요소 수를 결정하려면 O (n) 순회가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="4f77cf9e8d728ee45100516f9072a35a0031518a" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, this method is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these queues, determining the current number of elements requires an O(n) traversal. Additionally, if elements are added or removed during execution of this method, the returned result may be inaccurate. Thus, this method is typically not very useful in concurrent applications.</source>
          <target state="translated">대부분의 컬렉션과 달리이 방법은 일정한 시간 동안 작동 &lt;em&gt;하지 않습니다&lt;/em&gt; . 이러한 큐의 비동기 특성으로 인해 현재 요소 수를 결정하려면 O (n) 순회가 필요합니다. 또한이 메서드를 실행하는 동안 요소를 추가하거나 제거하면 반환 된 결과가 정확하지 않을 수 있습니다. 따라서이 방법은 일반적으로 동시 응용 프로그램에서별로 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8515fd397ea688400d345c141b22d27d4ed1ded4" translate="yes" xml:space="preserve">
          <source>Beware that, unlike in most collections, this method is &lt;em&gt;NOT&lt;/em&gt; a constant-time operation. Because of the asynchronous nature of these sets, determining the current number of elements requires traversing them all to count them. Additionally, it is possible for the size to change during execution of this method, in which case the returned result will be inaccurate. Thus, this method is typically not very useful in concurrent applications.</source>
          <target state="translated">대부분의 컬렉션과 달리이 방법은 일정한 시간 동안 작동 &lt;em&gt;하지 않습니다&lt;/em&gt; . 이러한 집합의 비동기 특성으로 인해 현재 요소 수를 결정하려면 해당 요소를 모두 트래버스하여 계산해야합니다. 또한이 메서드를 실행하는 동안 크기가 변경 될 수 있으며이 경우 반환 된 결과가 정확하지 않습니다. 따라서이 방법은 일반적으로 동시 응용 프로그램에서별로 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="03c0b2d2c7e01b5e413c9a4ba8e0a1095a4c5fcf" translate="yes" xml:space="preserve">
          <source>Beyond dates and times, the API also allows the storage of periods and durations of time. A &lt;a href=&quot;duration&quot;&gt;&lt;code&gt;Duration&lt;/code&gt;&lt;/a&gt; is a simple measure of time along the time-line in nanoseconds. A &lt;a href=&quot;period&quot;&gt;&lt;code&gt;Period&lt;/code&gt;&lt;/a&gt; expresses an amount of time in units meaningful to humans, such as years or days.</source>
          <target state="translated">날짜 및 시간 외에도 API는 기간 및 기간을 저장할 수 있습니다. &lt;a href=&quot;duration&quot;&gt; &lt;code&gt;Duration&lt;/code&gt; &lt;/a&gt; 나노초의 시간 - 선을 따라 시간의 간단한 측정 한 것입니다. &lt;a href=&quot;period&quot;&gt; &lt;code&gt;Period&lt;/code&gt; &lt;/a&gt; 등 세 일 등 인간에게 의미있는 단위, 시간의 양을 표현한다.</target>
        </trans-unit>
        <trans-unit id="f89dbede66f17a67316785eee66e744a34cbfde8" translate="yes" xml:space="preserve">
          <source>BiConsumer</source>
          <target state="translated">BiConsumer</target>
        </trans-unit>
        <trans-unit id="9cacc4102634bd89a57597f0d20924ccd1e655e0" translate="yes" xml:space="preserve">
          <source>BiConsumer.accept()</source>
          <target state="translated">BiConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="58c661d38bccc063ab693aa66d198bc7cd203e57" translate="yes" xml:space="preserve">
          <source>BiConsumer.andThen()</source>
          <target state="translated">BiConsumer.andThen()</target>
        </trans-unit>
        <trans-unit id="33e26a54f4d0d5ce1d77e93e3d2288c303fa73e9" translate="yes" xml:space="preserve">
          <source>BiFunction</source>
          <target state="translated">BiFunction</target>
        </trans-unit>
        <trans-unit id="5e66ada09ac62f27f33bbcb603290a5e4eb4f926" translate="yes" xml:space="preserve">
          <source>BiFunction.andThen()</source>
          <target state="translated">BiFunction.andThen()</target>
        </trans-unit>
        <trans-unit id="276585306998b807d0b115e2556dfa4f217b7ee3" translate="yes" xml:space="preserve">
          <source>BiFunction.apply()</source>
          <target state="translated">BiFunction.apply()</target>
        </trans-unit>
        <trans-unit id="5c077f88957790654f46ad09717dedbe9f6bfb22" translate="yes" xml:space="preserve">
          <source>BiPredicate</source>
          <target state="translated">BiPredicate</target>
        </trans-unit>
        <trans-unit id="7a9f332f382a02f31ab0537fabf46e6513293d95" translate="yes" xml:space="preserve">
          <source>BiPredicate.and()</source>
          <target state="translated">BiPredicate.and()</target>
        </trans-unit>
        <trans-unit id="6c7d26d2e29ab9c07f3009ee0e2cb32bb5945d57" translate="yes" xml:space="preserve">
          <source>BiPredicate.negate()</source>
          <target state="translated">BiPredicate.negate()</target>
        </trans-unit>
        <trans-unit id="c03a60e16bb305f01f24d0c59fdf77740e92b054" translate="yes" xml:space="preserve">
          <source>BiPredicate.or()</source>
          <target state="translated">BiPredicate.or()</target>
        </trans-unit>
        <trans-unit id="dd0e470ec59a54c75875931fb7a985d0845ebe0c" translate="yes" xml:space="preserve">
          <source>BiPredicate.test()</source>
          <target state="translated">BiPredicate.test()</target>
        </trans-unit>
        <trans-unit id="6b071eee0aba97eb40774a96d0d674de81394f66" translate="yes" xml:space="preserve">
          <source>Bicubic interpolation type.</source>
          <target state="translated">바이 큐빅 보간 유형.</target>
        </trans-unit>
        <trans-unit id="ea704b005c2d91273b64585134c6a9dcd62dab32" translate="yes" xml:space="preserve">
          <source>Bidi</source>
          <target state="translated">Bidi</target>
        </trans-unit>
        <trans-unit id="ff6e666f4bb0733e8f4e81525ffaa4dc2f980927" translate="yes" xml:space="preserve">
          <source>Bidi.baseIsLeftToRight()</source>
          <target state="translated">Bidi.baseIsLeftToRight()</target>
        </trans-unit>
        <trans-unit id="c7bdb5bd78a3c85a1c4bb9cf1703c41b9eeaf47b" translate="yes" xml:space="preserve">
          <source>Bidi.createLineBidi()</source>
          <target state="translated">Bidi.createLineBidi()</target>
        </trans-unit>
        <trans-unit id="836a5eb55031009532edd51d7f0036d44ea203ca" translate="yes" xml:space="preserve">
          <source>Bidi.getBaseLevel()</source>
          <target state="translated">Bidi.getBaseLevel()</target>
        </trans-unit>
        <trans-unit id="f7244ba33963c39e306e28ac6b324c0f905acc9a" translate="yes" xml:space="preserve">
          <source>Bidi.getLength()</source>
          <target state="translated">Bidi.getLength()</target>
        </trans-unit>
        <trans-unit id="6a481267ab7f44455548576ddbb162a6ef575fca" translate="yes" xml:space="preserve">
          <source>Bidi.getLevelAt()</source>
          <target state="translated">Bidi.getLevelAt()</target>
        </trans-unit>
        <trans-unit id="fa0db764683ee6c0f86a23dccddbb52f54146a07" translate="yes" xml:space="preserve">
          <source>Bidi.getRunCount()</source>
          <target state="translated">Bidi.getRunCount()</target>
        </trans-unit>
        <trans-unit id="f29056423b79e4379e3349e2c0d8ad0e01453992" translate="yes" xml:space="preserve">
          <source>Bidi.getRunLevel()</source>
          <target state="translated">Bidi.getRunLevel()</target>
        </trans-unit>
        <trans-unit id="9d47d9c99b658fa7975ca7d8c0724b886d0ac577" translate="yes" xml:space="preserve">
          <source>Bidi.getRunLimit()</source>
          <target state="translated">Bidi.getRunLimit()</target>
        </trans-unit>
        <trans-unit id="0f2e6d92cbd6e7936c7311a12ee2ee64d2d3818e" translate="yes" xml:space="preserve">
          <source>Bidi.getRunStart()</source>
          <target state="translated">Bidi.getRunStart()</target>
        </trans-unit>
        <trans-unit id="921e1c3e6ff5c28d2f0445fe46891401da07344d" translate="yes" xml:space="preserve">
          <source>Bidi.isLeftToRight()</source>
          <target state="translated">Bidi.isLeftToRight()</target>
        </trans-unit>
        <trans-unit id="ae2f928e6a1553e364f98e75a0ed8f7e506dff9f" translate="yes" xml:space="preserve">
          <source>Bidi.isMixed()</source>
          <target state="translated">Bidi.isMixed()</target>
        </trans-unit>
        <trans-unit id="c04067245b72580933fac22b806115a392d73ce0" translate="yes" xml:space="preserve">
          <source>Bidi.isRightToLeft()</source>
          <target state="translated">Bidi.isRightToLeft()</target>
        </trans-unit>
        <trans-unit id="54cfa9cd141ab2f96f395f33efc44759864b82f3" translate="yes" xml:space="preserve">
          <source>Bidi.reorderVisually()</source>
          <target state="translated">Bidi.reorderVisually()</target>
        </trans-unit>
        <trans-unit id="efe1fc5ddee72343806185c814e2aafa7d04e567" translate="yes" xml:space="preserve">
          <source>Bidi.requiresBidi()</source>
          <target state="translated">Bidi.requiresBidi()</target>
        </trans-unit>
        <trans-unit id="93ec315ce731639806f128eabf8a46704af36721" translate="yes" xml:space="preserve">
          <source>Bidi.toString()</source>
          <target state="translated">Bidi.toString()</target>
        </trans-unit>
        <trans-unit id="22cb401cc97f0046136c02bafb95e6c94be7bd28" translate="yes" xml:space="preserve">
          <source>BidiElementName</source>
          <target state="translated">BidiElementName</target>
        </trans-unit>
        <trans-unit id="2737b25abc5b0cd3ec475b3090f308b3f8734a25" translate="yes" xml:space="preserve">
          <source>BidiLevel</source>
          <target state="translated">BidiLevel</target>
        </trans-unit>
        <trans-unit id="8ba6c78cdcc486245c691304e1725e7b9caa815e" translate="yes" xml:space="preserve">
          <source>Bidirectional level of a character as assigned by the Unicode bidi algorithm.</source>
          <target state="translated">Unicode bidi 알고리즘에 의해 할당 된 양방향 수준의 문자입니다.</target>
        </trans-unit>
        <trans-unit id="3ab0be3f93d8d722278121e74cf7b35c0bf4473f" translate="yes" xml:space="preserve">
          <source>BigDecimal</source>
          <target state="translated">BigDecimal</target>
        </trans-unit>
        <trans-unit id="2767641396beef6edf6cdd69cd773cdaec3d5b6e" translate="yes" xml:space="preserve">
          <source>BigDecimal.abs()</source>
          <target state="translated">BigDecimal.abs()</target>
        </trans-unit>
        <trans-unit id="39bb482d634750f175186929849226346b32a07f" translate="yes" xml:space="preserve">
          <source>BigDecimal.add()</source>
          <target state="translated">BigDecimal.add()</target>
        </trans-unit>
        <trans-unit id="5623a022a21477c146cfb29e964b4c9fb5f6dd47" translate="yes" xml:space="preserve">
          <source>BigDecimal.byteValueExact()</source>
          <target state="translated">BigDecimal.byteValueExact()</target>
        </trans-unit>
        <trans-unit id="82a05fccbe704454bf771faa09ea03f6f550cf9e" translate="yes" xml:space="preserve">
          <source>BigDecimal.compareTo()</source>
          <target state="translated">BigDecimal.compareTo()</target>
        </trans-unit>
        <trans-unit id="809eb937ff8d25e69dee258872577cf46c4ad5c9" translate="yes" xml:space="preserve">
          <source>BigDecimal.divide()</source>
          <target state="translated">BigDecimal.divide()</target>
        </trans-unit>
        <trans-unit id="e267573f1e1e1475286e2c5c37c0e507d0b31a2d" translate="yes" xml:space="preserve">
          <source>BigDecimal.divideAndRemainder()</source>
          <target state="translated">BigDecimal.divideAndRemainder()</target>
        </trans-unit>
        <trans-unit id="f75dd8025bb12765bf175730b146624b00b4e7b3" translate="yes" xml:space="preserve">
          <source>BigDecimal.divideToIntegralValue()</source>
          <target state="translated">BigDecimal.divideToIntegralValue()</target>
        </trans-unit>
        <trans-unit id="a078d894ee09e8c61c84c6653153cc6bf5ecfbad" translate="yes" xml:space="preserve">
          <source>BigDecimal.doubleValue()</source>
          <target state="translated">BigDecimal.doubleValue()</target>
        </trans-unit>
        <trans-unit id="9da8d2806698d2ebd6d4246ee216897217cf929d" translate="yes" xml:space="preserve">
          <source>BigDecimal.equals()</source>
          <target state="translated">BigDecimal.equals()</target>
        </trans-unit>
        <trans-unit id="964fc0fac8e09a231b61ae24eb52f007bcf51eee" translate="yes" xml:space="preserve">
          <source>BigDecimal.floatValue()</source>
          <target state="translated">BigDecimal.floatValue()</target>
        </trans-unit>
        <trans-unit id="08f93cf87b515560ca4e8ced7821c6340bdd2300" translate="yes" xml:space="preserve">
          <source>BigDecimal.hashCode()</source>
          <target state="translated">BigDecimal.hashCode()</target>
        </trans-unit>
        <trans-unit id="774a417ba71a910d2cfee3343271fee0fd5fec1e" translate="yes" xml:space="preserve">
          <source>BigDecimal.intValue()</source>
          <target state="translated">BigDecimal.intValue()</target>
        </trans-unit>
        <trans-unit id="98280dec5ad977eaea0d2d59c58cad275ee7f16f" translate="yes" xml:space="preserve">
          <source>BigDecimal.intValueExact()</source>
          <target state="translated">BigDecimal.intValueExact()</target>
        </trans-unit>
        <trans-unit id="fadb858f71baf1fdd9e8dff73b22b8a450b9d359" translate="yes" xml:space="preserve">
          <source>BigDecimal.longValue()</source>
          <target state="translated">BigDecimal.longValue()</target>
        </trans-unit>
        <trans-unit id="d82f3653b65dfa09c19efb09a5455f8eb51a4299" translate="yes" xml:space="preserve">
          <source>BigDecimal.longValueExact()</source>
          <target state="translated">BigDecimal.longValueExact()</target>
        </trans-unit>
        <trans-unit id="65d06d03a8d3cfc3b4353d13f9ce18c42bc9e09f" translate="yes" xml:space="preserve">
          <source>BigDecimal.max()</source>
          <target state="translated">BigDecimal.max()</target>
        </trans-unit>
        <trans-unit id="71763a41677e7852aa3186be51337790db6fa030" translate="yes" xml:space="preserve">
          <source>BigDecimal.min()</source>
          <target state="translated">BigDecimal.min()</target>
        </trans-unit>
        <trans-unit id="67887a23efb413a6580132dfd706bd9a38b32988" translate="yes" xml:space="preserve">
          <source>BigDecimal.movePointLeft()</source>
          <target state="translated">BigDecimal.movePointLeft()</target>
        </trans-unit>
        <trans-unit id="ce4859d2b9f3ab0899c6ae100ab3cd7fed6d8d67" translate="yes" xml:space="preserve">
          <source>BigDecimal.movePointRight()</source>
          <target state="translated">BigDecimal.movePointRight()</target>
        </trans-unit>
        <trans-unit id="240847bce5d1e11990f74d70cd00e13009cf8ad7" translate="yes" xml:space="preserve">
          <source>BigDecimal.multiply()</source>
          <target state="translated">BigDecimal.multiply()</target>
        </trans-unit>
        <trans-unit id="d49fdda80a700294e95dc2d2a2c5964581ba649c" translate="yes" xml:space="preserve">
          <source>BigDecimal.negate()</source>
          <target state="translated">BigDecimal.negate()</target>
        </trans-unit>
        <trans-unit id="faaf9b9b58d208181b9c3d3b28dbc5e26ae0c405" translate="yes" xml:space="preserve">
          <source>BigDecimal.plus()</source>
          <target state="translated">BigDecimal.plus()</target>
        </trans-unit>
        <trans-unit id="1564bae0247aa3feb7e24fe088cc18eb1307bdeb" translate="yes" xml:space="preserve">
          <source>BigDecimal.pow()</source>
          <target state="translated">BigDecimal.pow()</target>
        </trans-unit>
        <trans-unit id="3f5caedb33ddae4cb7982bf1c46e74844c87ad30" translate="yes" xml:space="preserve">
          <source>BigDecimal.precision()</source>
          <target state="translated">BigDecimal.precision()</target>
        </trans-unit>
        <trans-unit id="f87ed605072a6b4687f2d1d58956003be78f45ea" translate="yes" xml:space="preserve">
          <source>BigDecimal.remainder()</source>
          <target state="translated">BigDecimal.remainder()</target>
        </trans-unit>
        <trans-unit id="f21b816cab583435231d54e2622191dd3b7c2d39" translate="yes" xml:space="preserve">
          <source>BigDecimal.round()</source>
          <target state="translated">BigDecimal.round()</target>
        </trans-unit>
        <trans-unit id="1959545bd6fba4fdeea7a277f7a767a744305541" translate="yes" xml:space="preserve">
          <source>BigDecimal.scale()</source>
          <target state="translated">BigDecimal.scale()</target>
        </trans-unit>
        <trans-unit id="6e8c5b9b003cd2eac79204b523ae635bdf3e1b6f" translate="yes" xml:space="preserve">
          <source>BigDecimal.scaleByPowerOfTen()</source>
          <target state="translated">BigDecimal.scaleByPowerOfTen()</target>
        </trans-unit>
        <trans-unit id="dcc7e68b2250081ca0b47e5a0375fc9654c0eb19" translate="yes" xml:space="preserve">
          <source>BigDecimal.setScale()</source>
          <target state="translated">BigDecimal.setScale()</target>
        </trans-unit>
        <trans-unit id="e07ae1053484bc1e610e7f090d9e4c7a3063accc" translate="yes" xml:space="preserve">
          <source>BigDecimal.shortValueExact()</source>
          <target state="translated">BigDecimal.shortValueExact()</target>
        </trans-unit>
        <trans-unit id="b7561990379d31f2c12df7e668b7df5d020cbc5b" translate="yes" xml:space="preserve">
          <source>BigDecimal.signum()</source>
          <target state="translated">BigDecimal.signum()</target>
        </trans-unit>
        <trans-unit id="6bbbfd5546b2577698085d4783a744fbe1272940" translate="yes" xml:space="preserve">
          <source>BigDecimal.stripTrailingZeros()</source>
          <target state="translated">BigDecimal.stripTrailingZeros()</target>
        </trans-unit>
        <trans-unit id="09b9decb411ecd3cf1e25af07e155f439467e5c8" translate="yes" xml:space="preserve">
          <source>BigDecimal.subtract()</source>
          <target state="translated">BigDecimal.subtract()</target>
        </trans-unit>
        <trans-unit id="153087f4995d89093d64359622cfac72a0c7f57a" translate="yes" xml:space="preserve">
          <source>BigDecimal.toBigInteger()</source>
          <target state="translated">BigDecimal.toBigInteger()</target>
        </trans-unit>
        <trans-unit id="bfa3c9cddd9d1a0b128e215892ee69ccf4558a45" translate="yes" xml:space="preserve">
          <source>BigDecimal.toBigIntegerExact()</source>
          <target state="translated">BigDecimal.toBigIntegerExact()</target>
        </trans-unit>
        <trans-unit id="9bc6af29b8e8104e9c82d63e3252b70193a4d00d" translate="yes" xml:space="preserve">
          <source>BigDecimal.toEngineeringString()</source>
          <target state="translated">BigDecimal.toEngineeringString()</target>
        </trans-unit>
        <trans-unit id="5d5e07f2fdd936fd1a13aa24442fc41f13020238" translate="yes" xml:space="preserve">
          <source>BigDecimal.toPlainString()</source>
          <target state="translated">BigDecimal.toPlainString()</target>
        </trans-unit>
        <trans-unit id="69e67dea669abc9252cb6d4318c85de233450e75" translate="yes" xml:space="preserve">
          <source>BigDecimal.toString()</source>
          <target state="translated">BigDecimal.toString()</target>
        </trans-unit>
        <trans-unit id="3bbcc46b252e80118de2b4a56b98854aebf92c63" translate="yes" xml:space="preserve">
          <source>BigDecimal.ulp()</source>
          <target state="translated">BigDecimal.ulp()</target>
        </trans-unit>
        <trans-unit id="09187255d33003c68fe605c4d13e16abfdaeb0f9" translate="yes" xml:space="preserve">
          <source>BigDecimal.unscaledValue()</source>
          <target state="translated">BigDecimal.unscaledValue()</target>
        </trans-unit>
        <trans-unit id="4ed4e1aef70fe3402b5d1ea1cba76dd03282945e" translate="yes" xml:space="preserve">
          <source>BigDecimal.valueOf()</source>
          <target state="translated">BigDecimal.valueOf()</target>
        </trans-unit>
        <trans-unit id="e8ac8a37ba48fef1656f54a4a2d867ff2b40a63b" translate="yes" xml:space="preserve">
          <source>BigDecimalString:</source>
          <target state="translated">BigDecimalString:</target>
        </trans-unit>
        <trans-unit id="92438720ccb09a8bc6b241c5b27a00fb72144c25" translate="yes" xml:space="preserve">
          <source>BigInteger</source>
          <target state="translated">BigInteger</target>
        </trans-unit>
        <trans-unit id="b79ca910466285c6df9a15e1718345245c7c7d4d" translate="yes" xml:space="preserve">
          <source>BigInteger constructors and operations throw &lt;code&gt;ArithmeticException&lt;/code&gt; when the result is out of the supported range of -2&lt;sup&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/sup&gt; (exclusive) to +2&lt;sup&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/sup&gt; (exclusive).</source>
          <target state="translated">결과가 지원되는 범위 -2 &lt;sup&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/sup&gt; (제외)에서 +2 &lt;sup&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/sup&gt; (제외)의 범위를 벗어나면 BigInteger 생성자와 오퍼레이션에서 &lt;code&gt;ArithmeticException&lt;/code&gt; 이 발생합니다 .&lt;sup&gt;&lt;/sup&gt;&lt;sup&gt;&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="ee39b1a63cabe4ce68478712cd5d29a7ad079d63" translate="yes" xml:space="preserve">
          <source>BigInteger.</source>
          <target state="translated">BigInteger.</target>
        </trans-unit>
        <trans-unit id="97a13285a97d4b9d3db10a5759f855312d9c6aac" translate="yes" xml:space="preserve">
          <source>BigInteger.abs()</source>
          <target state="translated">BigInteger.abs()</target>
        </trans-unit>
        <trans-unit id="cf3b6841efa02f6bfb4adf4c7f08019f1359bde7" translate="yes" xml:space="preserve">
          <source>BigInteger.add()</source>
          <target state="translated">BigInteger.add()</target>
        </trans-unit>
        <trans-unit id="f86f61ffcbcf3da63a5c0b77dcf569346c0df907" translate="yes" xml:space="preserve">
          <source>BigInteger.and()</source>
          <target state="translated">BigInteger.and()</target>
        </trans-unit>
        <trans-unit id="12153a90c178362632a26309fc8b185baa34af0a" translate="yes" xml:space="preserve">
          <source>BigInteger.andNot()</source>
          <target state="translated">BigInteger.andNot()</target>
        </trans-unit>
        <trans-unit id="a9511965aa53786babb9df182bcc838379973f18" translate="yes" xml:space="preserve">
          <source>BigInteger.bitCount()</source>
          <target state="translated">BigInteger.bitCount()</target>
        </trans-unit>
        <trans-unit id="a73a977f943c7f9321e103a360faa3c871f4ccb1" translate="yes" xml:space="preserve">
          <source>BigInteger.bitLength()</source>
          <target state="translated">BigInteger.bitLength()</target>
        </trans-unit>
        <trans-unit id="71d885e0ec44e3d334bb9d4f1db61531e2a2fa19" translate="yes" xml:space="preserve">
          <source>BigInteger.byteValueExact()</source>
          <target state="translated">BigInteger.byteValueExact()</target>
        </trans-unit>
        <trans-unit id="4cd704f215bc23ad8bdd51a27318e094df826536" translate="yes" xml:space="preserve">
          <source>BigInteger.clearBit()</source>
          <target state="translated">BigInteger.clearBit()</target>
        </trans-unit>
        <trans-unit id="6f6edb7eb63a2f4d4d16f8e81e64ebc391a9079e" translate="yes" xml:space="preserve">
          <source>BigInteger.compareTo()</source>
          <target state="translated">BigInteger.compareTo()</target>
        </trans-unit>
        <trans-unit id="c5b3500b7e38f1deef184e9afec462d37f616aea" translate="yes" xml:space="preserve">
          <source>BigInteger.divide()</source>
          <target state="translated">BigInteger.divide()</target>
        </trans-unit>
        <trans-unit id="fef28b9600d790851dbf5bbd727b1f917b83fc1e" translate="yes" xml:space="preserve">
          <source>BigInteger.divideAndRemainder()</source>
          <target state="translated">BigInteger.divideAndRemainder()</target>
        </trans-unit>
        <trans-unit id="9b7c2ddc4cb51fc085caac7fe6ca22c800008a47" translate="yes" xml:space="preserve">
          <source>BigInteger.doubleValue()</source>
          <target state="translated">BigInteger.doubleValue()</target>
        </trans-unit>
        <trans-unit id="88fadb1d0d0a4c372fda3964ba155e6f6e98e321" translate="yes" xml:space="preserve">
          <source>BigInteger.equals()</source>
          <target state="translated">BigInteger.equals()</target>
        </trans-unit>
        <trans-unit id="0833fc52e3c35ac601a15344a259eb58c307254d" translate="yes" xml:space="preserve">
          <source>BigInteger.flipBit()</source>
          <target state="translated">BigInteger.flipBit()</target>
        </trans-unit>
        <trans-unit id="4a41aa30e71c24cafdd0662df6ce61e831cefd1f" translate="yes" xml:space="preserve">
          <source>BigInteger.floatValue()</source>
          <target state="translated">BigInteger.floatValue()</target>
        </trans-unit>
        <trans-unit id="a0f0f14ed3161d5bcc3a5b0720652c1de11448ef" translate="yes" xml:space="preserve">
          <source>BigInteger.gcd()</source>
          <target state="translated">BigInteger.gcd()</target>
        </trans-unit>
        <trans-unit id="3e99970369dc5457c03c1c14387f74d437e1d4e3" translate="yes" xml:space="preserve">
          <source>BigInteger.getLowestSetBit()</source>
          <target state="translated">BigInteger.getLowestSetBit()</target>
        </trans-unit>
        <trans-unit id="1e2c85ecc98cc47e44c9240211039a2ee1645316" translate="yes" xml:space="preserve">
          <source>BigInteger.hashCode()</source>
          <target state="translated">BigInteger.hashCode()</target>
        </trans-unit>
        <trans-unit id="8b6508cfecfee4461eb27ea1cda4f679dc857d17" translate="yes" xml:space="preserve">
          <source>BigInteger.intValue()</source>
          <target state="translated">BigInteger.intValue()</target>
        </trans-unit>
        <trans-unit id="4f2fdb8e4e03c7be71f55f40919b3c11af58ad65" translate="yes" xml:space="preserve">
          <source>BigInteger.intValueExact()</source>
          <target state="translated">BigInteger.intValueExact()</target>
        </trans-unit>
        <trans-unit id="d5ee9992f052e5477af795622a90b3b3aa6803e8" translate="yes" xml:space="preserve">
          <source>BigInteger.isProbablePrime()</source>
          <target state="translated">BigInteger.isProbablePrime()</target>
        </trans-unit>
        <trans-unit id="3c6dc41465a9fb4638064717dbbc6c9637d78508" translate="yes" xml:space="preserve">
          <source>BigInteger.longValue()</source>
          <target state="translated">BigInteger.longValue()</target>
        </trans-unit>
        <trans-unit id="5d06324948fe656ab8eddd15ef8fa4cc59b95e71" translate="yes" xml:space="preserve">
          <source>BigInteger.longValueExact()</source>
          <target state="translated">BigInteger.longValueExact()</target>
        </trans-unit>
        <trans-unit id="68c868c59aa0336bf26ac826206acdadacb8db34" translate="yes" xml:space="preserve">
          <source>BigInteger.max()</source>
          <target state="translated">BigInteger.max()</target>
        </trans-unit>
        <trans-unit id="03f25963cc896e79cd971db2d2ae5698e3d59441" translate="yes" xml:space="preserve">
          <source>BigInteger.min()</source>
          <target state="translated">BigInteger.min()</target>
        </trans-unit>
        <trans-unit id="4f3e17fe4081e575e92949e91227bab7d341ea6e" translate="yes" xml:space="preserve">
          <source>BigInteger.mod()</source>
          <target state="translated">BigInteger.mod()</target>
        </trans-unit>
        <trans-unit id="8295dad78169d03e301704b9ed4c23860d7c9f49" translate="yes" xml:space="preserve">
          <source>BigInteger.modInverse()</source>
          <target state="translated">BigInteger.modInverse()</target>
        </trans-unit>
        <trans-unit id="d3fa7d6505c747e6fd36b0f3d6a9e88bf383b196" translate="yes" xml:space="preserve">
          <source>BigInteger.modPow()</source>
          <target state="translated">BigInteger.modPow()</target>
        </trans-unit>
        <trans-unit id="999364f2cc01efdea5289cf05f443fb5c3f7b11f" translate="yes" xml:space="preserve">
          <source>BigInteger.multiply()</source>
          <target state="translated">BigInteger.multiply()</target>
        </trans-unit>
        <trans-unit id="b628df5924e9610faea70583510a29f9d9d70cac" translate="yes" xml:space="preserve">
          <source>BigInteger.negate()</source>
          <target state="translated">BigInteger.negate()</target>
        </trans-unit>
        <trans-unit id="079c6980718e47b4059b0846f1a1149f138667ba" translate="yes" xml:space="preserve">
          <source>BigInteger.nextProbablePrime()</source>
          <target state="translated">BigInteger.nextProbablePrime()</target>
        </trans-unit>
        <trans-unit id="ed5ab75d14a95af07ceb7d60836ab0ce4a699292" translate="yes" xml:space="preserve">
          <source>BigInteger.not()</source>
          <target state="translated">BigInteger.not()</target>
        </trans-unit>
        <trans-unit id="994fea9dd70cea70b7feafe0ce3a62cfa3fb28f8" translate="yes" xml:space="preserve">
          <source>BigInteger.or()</source>
          <target state="translated">BigInteger.or()</target>
        </trans-unit>
        <trans-unit id="ab6d93fb6d03197002ea2eb6116b66c76f2199ac" translate="yes" xml:space="preserve">
          <source>BigInteger.pow()</source>
          <target state="translated">BigInteger.pow()</target>
        </trans-unit>
        <trans-unit id="1e31894d6fb592146e2da5261ed336ff9e24ca3a" translate="yes" xml:space="preserve">
          <source>BigInteger.probablePrime()</source>
          <target state="translated">BigInteger.probablePrime()</target>
        </trans-unit>
        <trans-unit id="d3df03fb45664a5275da457bcf99ec5076b25e8f" translate="yes" xml:space="preserve">
          <source>BigInteger.remainder()</source>
          <target state="translated">BigInteger.remainder()</target>
        </trans-unit>
        <trans-unit id="a81dc094b336ef1de80202150aaf745ba334a585" translate="yes" xml:space="preserve">
          <source>BigInteger.setBit()</source>
          <target state="translated">BigInteger.setBit()</target>
        </trans-unit>
        <trans-unit id="b42e239752920fc90b7571b2fc6055eb21c4d9d3" translate="yes" xml:space="preserve">
          <source>BigInteger.shiftLeft()</source>
          <target state="translated">BigInteger.shiftLeft()</target>
        </trans-unit>
        <trans-unit id="3028024956d873ff4be875978a7d2cc2d2fe5752" translate="yes" xml:space="preserve">
          <source>BigInteger.shiftRight()</source>
          <target state="translated">BigInteger.shiftRight()</target>
        </trans-unit>
        <trans-unit id="f21dd79da7483d46b26b279c137a25a4b16ab2c6" translate="yes" xml:space="preserve">
          <source>BigInteger.shortValueExact()</source>
          <target state="translated">BigInteger.shortValueExact()</target>
        </trans-unit>
        <trans-unit id="18025279c6aa4aaea94a47b60667eef260a74257" translate="yes" xml:space="preserve">
          <source>BigInteger.signum()</source>
          <target state="translated">BigInteger.signum()</target>
        </trans-unit>
        <trans-unit id="069df15cb3d72e8164488169bfaae1cc58f41e09" translate="yes" xml:space="preserve">
          <source>BigInteger.subtract()</source>
          <target state="translated">BigInteger.subtract()</target>
        </trans-unit>
        <trans-unit id="51441ad1fa1104c6d58d821fa6ff0f2063b3d161" translate="yes" xml:space="preserve">
          <source>BigInteger.testBit()</source>
          <target state="translated">BigInteger.testBit()</target>
        </trans-unit>
        <trans-unit id="0072f3b06f8f71d2c977f8c96b2c5179c17415d6" translate="yes" xml:space="preserve">
          <source>BigInteger.toByteArray()</source>
          <target state="translated">BigInteger.toByteArray()</target>
        </trans-unit>
        <trans-unit id="de78ccb0a7d1ecb43fe110cd7f8f830dccd4a7b0" translate="yes" xml:space="preserve">
          <source>BigInteger.toString()</source>
          <target state="translated">BigInteger.toString()</target>
        </trans-unit>
        <trans-unit id="ab790a4dfea0aee09a37286796ec555171eedee5" translate="yes" xml:space="preserve">
          <source>BigInteger.valueOf()</source>
          <target state="translated">BigInteger.valueOf()</target>
        </trans-unit>
        <trans-unit id="cf90b9270c753ff38b8db27228b961b8b44a96e5" translate="yes" xml:space="preserve">
          <source>BigInteger.xor()</source>
          <target state="translated">BigInteger.xor()</target>
        </trans-unit>
        <trans-unit id="cc8a71a4123844e10831547cfdd550ec244b295e" translate="yes" xml:space="preserve">
          <source>Bilinear interpolation type.</source>
          <target state="translated">쌍 선형 보간 유형.</target>
        </trans-unit>
        <trans-unit id="cae113d7239645cef8fa002ded8bf09d0075fdc0" translate="yes" xml:space="preserve">
          <source>Binary names</source>
          <target state="translated">이진 이름</target>
        </trans-unit>
        <trans-unit id="f24d69fe11a1bc88a738e15194d757fdd43902ef" translate="yes" xml:space="preserve">
          <source>BinaryExponent:</source>
          <target state="translated">BinaryExponent:</target>
        </trans-unit>
        <trans-unit id="bf84adb45596fd0a3010cb7a7b4c6821819436a9" translate="yes" xml:space="preserve">
          <source>BinaryExponentIndicator SignedInteger</source>
          <target state="translated">이항 지수 표시 기호</target>
        </trans-unit>
        <trans-unit id="a6316c6126e0497a7316eb921f6b7cb2299e10cf" translate="yes" xml:space="preserve">
          <source>BinaryExponentIndicator:</source>
          <target state="translated">BinaryExponentIndicator:</target>
        </trans-unit>
        <trans-unit id="f85c226f32fd781905d42235823e2fd6ba7c7a6f" translate="yes" xml:space="preserve">
          <source>BinaryOperator</source>
          <target state="translated">BinaryOperator</target>
        </trans-unit>
        <trans-unit id="10926b09d660024b5412c421ffb0fbe1561aee15" translate="yes" xml:space="preserve">
          <source>BinaryOperator.maxBy()</source>
          <target state="translated">BinaryOperator.maxBy()</target>
        </trans-unit>
        <trans-unit id="3bdf2707777efea7426d689f79a8b5d7dcae0461" translate="yes" xml:space="preserve">
          <source>BinaryOperator.minBy()</source>
          <target state="translated">BinaryOperator.minBy()</target>
        </trans-unit>
        <trans-unit id="804321fea15ea1f0b03a7c7b99275a044b7b5129" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr</source>
          <target state="translated">BinaryRefAddr</target>
        </trans-unit>
        <trans-unit id="51dc78053568164fd437b0464ce3fe6f2650ca58" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr.equals()</source>
          <target state="translated">BinaryRefAddr.equals()</target>
        </trans-unit>
        <trans-unit id="34dfe87a3c49c7896d6baae29a09d79c7c2446f4" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr.getContent()</source>
          <target state="translated">BinaryRefAddr.getContent()</target>
        </trans-unit>
        <trans-unit id="a63a1c31f1a7322923aa4ce681bfadf598fe2ea4" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr.hashCode()</source>
          <target state="translated">BinaryRefAddr.hashCode()</target>
        </trans-unit>
        <trans-unit id="4e9a802ce781c09c0ed768eca63a1f5a8b96683f" translate="yes" xml:space="preserve">
          <source>BinaryRefAddr.toString()</source>
          <target state="translated">BinaryRefAddr.toString()</target>
        </trans-unit>
        <trans-unit id="3fd8d2c8470085fcfe29d3eaffaf67d4fee23b97" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along one edge.</source>
          <target state="translated">한 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 제본합니다.</target>
        </trans-unit>
        <trans-unit id="4beff3aa638b7033a21ebe2b37848fcc9d120852" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along one edge. The exact number and placement of the staples is implementation- and/or site- defined.</source>
          <target state="translated">한 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 바인딩합니다. 스테이플의 정확한 수와 배치는 구현 및 / 또는 사이트 정의입니다.</target>
        </trans-unit>
        <trans-unit id="f6b690b826fd685ed81176e15ae958ddc07ddee4" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the bottom edge.</source>
          <target state="translated">아래쪽 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 제본합니다.</target>
        </trans-unit>
        <trans-unit id="38b15caad1f8cccfdc90a44e804f0aeda92e244a" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the bottom edge. The exact number and placement of the staples is implementation- and/or site-defined.</source>
          <target state="translated">아래쪽 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 바인딩합니다. 스테이플의 정확한 수와 배치는 구현 및 / 또는 사이트 정의입니다.</target>
        </trans-unit>
        <trans-unit id="838b702478b10f8307e8f4471fe828a9505c262d" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the left edge.</source>
          <target state="translated">왼쪽 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 제본합니다.</target>
        </trans-unit>
        <trans-unit id="798d016fab287329709447cc30c503c54c7f2529" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the left edge. The exact number and placement of the staples is implementation- and/or site-defined.</source>
          <target state="translated">왼쪽 가장자리를 따라 문서를 하나 이상의 스테이플 (와이어 스티치)로 묶습니다. 스테이플의 정확한 수와 배치는 구현 및 / 또는 사이트 정의입니다.</target>
        </trans-unit>
        <trans-unit id="9c9cf0120f25da18225585ad0a7f0047fbe5d69d" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the middle fold.</source>
          <target state="translated">문서를 가운데 접기를 따라 하나 이상의 스테이플 (와이어 스티치)로 묶습니다.</target>
        </trans-unit>
        <trans-unit id="74977c9b21caf07f2209906041934254c252a710" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the middle fold. The exact number and placement of the staples and the middle fold is implementation- and/or site-defined.</source>
          <target state="translated">중간 접기를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 묶습니다. 스테이플 및 중간 접기의 정확한 수와 배치는 구현 및 / 또는 사이트 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="76fd44136ff68d0663699f167e8f861ce39ebba9" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the right edge.</source>
          <target state="translated">오른쪽 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 제본합니다.</target>
        </trans-unit>
        <trans-unit id="315fa937f46a56545a7fc022344a87b00068bbec" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the right edge. The exact number and placement of the staples is implementation- and/or site-defined.</source>
          <target state="translated">오른쪽 가장자리를 따라 문서를 하나 이상의 스테이플 (와이어 스티치)로 묶습니다. 스테이플의 정확한 수와 배치는 구현 및 / 또는 사이트 정의입니다.</target>
        </trans-unit>
        <trans-unit id="beae49a45b6529d85821fee13e30e744b23c7696" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the top edge.</source>
          <target state="translated">상단 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 제본합니다.</target>
        </trans-unit>
        <trans-unit id="97f703d6e23a578b9613b26e1444ed005f1d9cc1" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples (wire stitches) along the top edge. The exact number and placement of the staples is implementation- and/or site-defined.</source>
          <target state="translated">상단 가장자리를 따라 하나 이상의 스테이플 (와이어 스티치)로 문서를 묶습니다. 스테이플의 정확한 수와 배치는 구현 및 / 또는 사이트 정의입니다.</target>
        </trans-unit>
        <trans-unit id="3007e602358fe575b7c354349ed237cd5f2f0677" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples in the bottom left corner.</source>
          <target state="translated">왼쪽 하단에서 하나 이상의 스테이플로 문서를 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="a48c8503fc77165ebe222416cffd1be391cd7669" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples in the bottom right corner.</source>
          <target state="translated">오른쪽 하단에 하나 이상의 스테이플이있는 문서를 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="ca91d34daa2b4be2b04166f0d637369d33da7169" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples in the top left corner.</source>
          <target state="translated">왼쪽 상단에 하나 이상의 스테이플이있는 문서를 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="6e5e362e517d0d09949a466ad90f83d411070627" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples in the top right corner.</source>
          <target state="translated">오른쪽 상단 모서리에 하나 이상의 스테이플이있는 문서를 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="b6b5577f15763961656b47610dfcdefd5de09226" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples.</source>
          <target state="translated">하나 이상의 스테이플을 사용하여 문서를 제본합니다.</target>
        </trans-unit>
        <trans-unit id="aafde1c01756df2a3d71f7d896cb8bc0a8070631" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with one or more staples. The exact number and placement of the staples is site-defined.</source>
          <target state="translated">하나 이상의 스테이플로 문서를 바인딩합니다. 스테이플의 정확한 수와 배치는 현장에서 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="5bb2d33426033b0a68e3b6c81a0bb7f9176840fc" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with two staples (wire stitches) along the bottom edge assuming a portrait document (see above).</source>
          <target state="translated">세로 문서를 가정 할 때 아래쪽 가장자리를 따라 두 개의 스테이플 (와이어 스티치)로 문서를 묶습니다 (위 참조).</target>
        </trans-unit>
        <trans-unit id="ae04bf08d39d9e67d508d4e9d878f30f1c55e0a8" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with two staples (wire stitches) along the left edge assuming a portrait document (see above).</source>
          <target state="translated">세로 문서를 가정하고 왼쪽 가장자리를 따라 두 개의 스테이플 (와이어 스티치)로 문서를 바인딩합니다 (위 참조).</target>
        </trans-unit>
        <trans-unit id="0c73748634274f11b9aedd0994a877bcb259dfc6" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with two staples (wire stitches) along the right edge assuming a portrait document (see above).</source>
          <target state="translated">세로 문서를 가정하면 오른쪽 가장자리를 따라 두 개의 스테이플 (와이어 스티치)로 문서를 바인딩합니다 (위 참조).</target>
        </trans-unit>
        <trans-unit id="40d190abf0b705cdc115b3f2a14434a081114d2a" translate="yes" xml:space="preserve">
          <source>Bind the document(s) with two staples (wire stitches) along the top edge assuming a portrait document (see above).</source>
          <target state="translated">세로 문서를 가정 할 때 상단 가장자리를 따라 두 개의 스테이플 (와이어 스티치)로 문서를 묶습니다 (위 참조).</target>
        </trans-unit>
        <trans-unit id="3d07a6a38e603a1fe7c45d2b07e74159376727f5" translate="yes" xml:space="preserve">
          <source>BindException</source>
          <target state="translated">BindException</target>
        </trans-unit>
        <trans-unit id="7f0043e684cc2e548822e45bee14ea4c4673e262" translate="yes" xml:space="preserve">
          <source>Binding</source>
          <target state="translated">Binding</target>
        </trans-unit>
        <trans-unit id="21e7eedef7ec3c19471bbbbe45b4049bb9f4573a" translate="yes" xml:space="preserve">
          <source>Binding record for creating key bindings.</source>
          <target state="translated">키 바인딩을 만들기위한 바인딩 레코드입니다.</target>
        </trans-unit>
        <trans-unit id="f2f0e8426d50dd004936526ec4a53092d7f639c9" translate="yes" xml:space="preserve">
          <source>Binding.getClassName()</source>
          <target state="translated">Binding.getClassName()</target>
        </trans-unit>
        <trans-unit id="3854f635fcab11a97abff363358798981a3a084c" translate="yes" xml:space="preserve">
          <source>Binding.getObject()</source>
          <target state="translated">Binding.getObject()</target>
        </trans-unit>
        <trans-unit id="d109964b8b2b7ce2b0414e69cfeccb938c845a9c" translate="yes" xml:space="preserve">
          <source>Binding.setObject()</source>
          <target state="translated">Binding.setObject()</target>
        </trans-unit>
        <trans-unit id="2088e3252efffb5823d0e7e2d4e40155148df170" translate="yes" xml:space="preserve">
          <source>Binding.toString()</source>
          <target state="translated">Binding.toString()</target>
        </trans-unit>
        <trans-unit id="967382f86044b6efc91dfee8f4e2b4ed941211cd" translate="yes" xml:space="preserve">
          <source>Bindings</source>
          <target state="translated">Bindings</target>
        </trans-unit>
        <trans-unit id="af3f9c9a47da695b2b481cf7dd1056704e860dc4" translate="yes" xml:space="preserve">
          <source>Bindings.containsKey()</source>
          <target state="translated">Bindings.containsKey()</target>
        </trans-unit>
        <trans-unit id="665186311739d7091d10da9425d926cbea92c7b0" translate="yes" xml:space="preserve">
          <source>Bindings.get()</source>
          <target state="translated">Bindings.get()</target>
        </trans-unit>
        <trans-unit id="ad1d10802dae6a5401ec2ac2da0d260f385be05b" translate="yes" xml:space="preserve">
          <source>Bindings.put()</source>
          <target state="translated">Bindings.put()</target>
        </trans-unit>
        <trans-unit id="0b5433c80f15e4df4db9adbe0714c54a9c043552" translate="yes" xml:space="preserve">
          <source>Bindings.putAll()</source>
          <target state="translated">Bindings.putAll()</target>
        </trans-unit>
        <trans-unit id="82a2df7e4c1180f788f22af292c488ca5f913993" translate="yes" xml:space="preserve">
          <source>Bindings.remove()</source>
          <target state="translated">Bindings.remove()</target>
        </trans-unit>
        <trans-unit id="9e4372fbb83968e4a85a9ef36d53695e580f9853" translate="yes" xml:space="preserve">
          <source>Binds a URI to the default namespace This URI is bound in the scope of the current START_ELEMENT / END_ELEMENT pair.</source>
          <target state="translated">URI를 기본 네임 스페이스에 바인딩합니다.이 URI는 현재 START_ELEMENT / END_ELEMENT 쌍의 범위에 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="380a180b5315e2c5ebea3c26086774bfa62c00d2" translate="yes" xml:space="preserve">
          <source>Binds a URI to the default namespace This URI is bound in the scope of the current START_ELEMENT / END_ELEMENT pair. If this method is called before a START_ELEMENT has been written the uri is bound in the root scope.</source>
          <target state="translated">URI를 기본 네임 스페이스에 바인딩합니다.이 URI는 현재 START_ELEMENT / END_ELEMENT 쌍의 범위에 바인딩됩니다. START_ELEMENT가 작성되기 전에이 메서드가 호출되면 uri가 루트 범위에 바인딩됩니다.</target>
        </trans-unit>
        <trans-unit id="b6008db77bc77f4b1f95fa6a20dd4de6be7b2ccd" translate="yes" xml:space="preserve">
          <source>Binds a datagram socket to a local port and address.</source>
          <target state="translated">데이터 그램 소켓을 로컬 포트 ​​및 주소에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="657d990e4c2a8c45525fed295a955698a0fa1fae" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding.</source>
          <target state="translated">연결된 속성과 함께 이름을 개체에 바인딩하여 기존 바인딩을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="bef50f700df7fd08b141ef3efe129a3ed3fef33e" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding. If &lt;code&gt;attrs&lt;/code&gt; is null and &lt;code&gt;obj&lt;/code&gt; is a &lt;code&gt;DirContext&lt;/code&gt;, the attributes from &lt;code&gt;obj&lt;/code&gt; are used. If &lt;code&gt;attrs&lt;/code&gt; is null and &lt;code&gt;obj&lt;/code&gt; is not a &lt;code&gt;DirContext&lt;/code&gt;, any existing attributes associated with the object already bound in the directory remain unchanged. If &lt;code&gt;attrs&lt;/code&gt; is non-null, any existing attributes associated with the object already bound in the directory are removed and &lt;code&gt;attrs&lt;/code&gt; is associated with the named object. If &lt;code&gt;obj&lt;/code&gt; is a &lt;code&gt;DirContext&lt;/code&gt; and &lt;code&gt;attrs&lt;/code&gt; is non-null, the attributes of &lt;code&gt;obj&lt;/code&gt; are ignored.</source>
          <target state="translated">기존 바인딩을 덮어 쓰면서 연관된 속성과 함께 이름을 오브젝트에 바인드합니다. 경우 &lt;code&gt;attrs&lt;/code&gt; 에가 null로 &lt;code&gt;obj&lt;/code&gt; 가 A는 &lt;code&gt;DirContext&lt;/code&gt; 의 에서 속성 &lt;code&gt;obj&lt;/code&gt; 사용된다. 경우 &lt;code&gt;attrs&lt;/code&gt; 에가 null로 &lt;code&gt;obj&lt;/code&gt; 가 하지 않은 것입니다 &lt;code&gt;DirContext&lt;/code&gt; 의 이미 디렉토리에 바인드 된 오브젝트에 관련 지을 수 있었던 기존의 속성은 변경되지 않습니다. &lt;code&gt;attrs&lt;/code&gt; 가 널이 아닌 경우 디렉토리에 이미 바인드 된 오브젝트와 연관된 기존 속성이 제거되고 &lt;code&gt;attrs&lt;/code&gt; 는 이름 지정된 오브젝트와 연관됩니다. 경우 &lt;code&gt;obj&lt;/code&gt; A는 &lt;code&gt;DirContext&lt;/code&gt; 의 및 &lt;code&gt;attrs&lt;/code&gt; null이 아닌 경우 &lt;code&gt;obj&lt;/code&gt; 의 속성 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="c9f66ea94c9e9091c18f6d0cf5a274afb3873e62" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding. See &lt;a href=&quot;#rebind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)&quot;&gt;&lt;code&gt;rebind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">연결된 속성과 함께 이름을 개체에 바인딩하여 기존 바인딩을 덮어 씁니다. 자세한 내용은 &lt;a href=&quot;#rebind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)&quot;&gt; &lt;code&gt;rebind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="59057772ee7f82df12aec96d27729b43409cf252" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding. See &lt;a href=&quot;dircontext#rebind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt;&lt;code&gt;DirContext.rebind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">기존 바인딩을 덮어 쓰면서 연관된 속성과 함께 이름을 오브젝트에 바인드합니다. 자세한 내용은 &lt;a href=&quot;dircontext#rebind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt; &lt;code&gt;DirContext.rebind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="7862b048f583975025e87ee113fdec4eb82eaa35" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes, overwriting any existing binding. See &lt;a href=&quot;dircontext#rebind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt;&lt;code&gt;rebind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">기존 바인딩을 덮어 쓰면서 연관된 속성과 함께 이름을 오브젝트에 바인드합니다. 자세한 내용은 &lt;a href=&quot;dircontext#rebind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt; &lt;code&gt;rebind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1f913f636d74702605561821a1918582c9bac431" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes.</source>
          <target state="translated">연관된 속성과 함께 이름을 오브젝트에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="a85c2b1328618075241decebedad63963121262d" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes. If &lt;code&gt;attrs&lt;/code&gt; is null, the resulting binding will have the attributes associated with &lt;code&gt;obj&lt;/code&gt; if &lt;code&gt;obj&lt;/code&gt; is a &lt;code&gt;DirContext&lt;/code&gt;, and no attributes otherwise. If &lt;code&gt;attrs&lt;/code&gt; is non-null, the resulting binding will have &lt;code&gt;attrs&lt;/code&gt; as its attributes; any attributes associated with &lt;code&gt;obj&lt;/code&gt; are ignored.</source>
          <target state="translated">연관된 속성과 함께 이름을 객체에 바인딩합니다. 경우 &lt;code&gt;attrs&lt;/code&gt; 에이 널 (null)이되면, 관련 지을 수 있었던 속성해야합니다 바인딩 결과 &lt;code&gt;obj&lt;/code&gt; 하는 경우 &lt;code&gt;obj&lt;/code&gt; 가 입니다 &lt;code&gt;DirContext&lt;/code&gt; 의 , 어떤 그렇지 않으면 속성. &lt;code&gt;attrs&lt;/code&gt; 가 널이 아닌 경우 결과 바인딩에는 속성으로 &lt;code&gt;attrs&lt;/code&gt; 이 있습니다 . &lt;code&gt;obj&lt;/code&gt; 와 관련된 모든 속성 은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="53b9a1986ca774b3b37e147ea238ae08deb8d1c3" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes. See &lt;a href=&quot;#bind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)&quot;&gt;&lt;code&gt;bind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">연관된 속성과 함께 이름을 오브젝트에 바인딩합니다. 자세한 내용은 &lt;a href=&quot;#bind(javax.naming.Name,java.lang.Object,javax.naming.directory.Attributes)&quot;&gt; &lt;code&gt;bind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5f423c84e3d9ac276cc54bbc7a1df2267430532e" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes. See &lt;a href=&quot;dircontext#bind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt;&lt;code&gt;DirContext.bind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">연관된 속성과 함께 이름을 객체에 바인딩합니다. 자세한 내용은 &lt;a href=&quot;dircontext#bind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt; &lt;code&gt;DirContext.bind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="49c9411a96668375307df7006b94b502613c5398" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, along with associated attributes. See &lt;a href=&quot;dircontext#bind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt;&lt;code&gt;bind(Name, Object, Attributes)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">연관된 속성과 함께 이름을 객체에 바인딩합니다. 자세한 내용은 &lt;a href=&quot;dircontext#bind-javax.naming.Name-java.lang.Object-javax.naming.directory.Attributes-&quot;&gt; &lt;code&gt;bind(Name, Object, Attributes)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="4a162cb7818dd5afc9aa8847fd5982c8ac0bc166" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding.</source>
          <target state="translated">개체에 이름을 바인딩하여 기존 바인딩을 덮어 씁니다.</target>
        </trans-unit>
        <trans-unit id="2a47974e2946298adc2c1e8785d1a2b146c5866f" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding. All intermediate contexts and the target context (that named by all but terminal atomic component of the name) must already exist.</source>
          <target state="translated">객체에 이름을 바인딩하여 기존 바인딩을 덮어 씁니다. 모든 중간 컨텍스트와 대상 컨텍스트 (이름의 터미널 원자 구성 요소를 제외한 이름)는 이미 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="d8760cbff1f4fe7a56b4aa0e9507ebdd24ad740e" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding. See &lt;a href=&quot;#rebind(javax.naming.Name,java.lang.Object)&quot;&gt;&lt;code&gt;rebind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">개체에 이름을 바인딩하여 기존 바인딩을 덮어 씁니다. 자세한 내용은 &lt;a href=&quot;#rebind(javax.naming.Name,java.lang.Object)&quot;&gt; &lt;code&gt;rebind(Name, Object)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="38c4e144c8baee02925ff9468221c2e31a98a0ab" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding. See &lt;a href=&quot;context#rebind-javax.naming.Name-java.lang.Object-&quot;&gt;&lt;code&gt;Context.rebind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">객체에 이름을 바인딩하여 기존 바인딩을 덮어 씁니다. 자세한 내용은 &lt;a href=&quot;context#rebind-javax.naming.Name-java.lang.Object-&quot;&gt; &lt;code&gt;Context.rebind(Name, Object)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1ec5f3c3d6f354aa52cf76d2f081d51de412e044" translate="yes" xml:space="preserve">
          <source>Binds a name to an object, overwriting any existing binding. See &lt;a href=&quot;context#rebind-javax.naming.Name-java.lang.Object-&quot;&gt;&lt;code&gt;rebind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">객체에 이름을 바인딩하여 기존 바인딩을 덮어 씁니다. 자세한 내용은 &lt;a href=&quot;context#rebind-javax.naming.Name-java.lang.Object-&quot;&gt; &lt;code&gt;rebind(Name, Object)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="251f87ab2bf6a98eed5fa1c3b477ba9f506bc604" translate="yes" xml:space="preserve">
          <source>Binds a name to an object.</source>
          <target state="translated">이름을 개체에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="e5e64d34b4cdb6b99609a59ad25d1a3ad519a414" translate="yes" xml:space="preserve">
          <source>Binds a name to an object. All intermediate contexts and the target context (that named by all but terminal atomic component of the name) must already exist.</source>
          <target state="translated">객체에 이름을 바인딩합니다. 모든 중간 컨텍스트와 대상 컨텍스트 (이름의 터미널 원자 구성 요소를 제외한 이름)는 이미 존재해야합니다.</target>
        </trans-unit>
        <trans-unit id="ab246eee87fbcd91de788fc5d2edfd12f10c365c" translate="yes" xml:space="preserve">
          <source>Binds a name to an object. See &lt;a href=&quot;#bind(javax.naming.Name,java.lang.Object)&quot;&gt;&lt;code&gt;bind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">이름을 개체에 바인딩합니다. 자세한 내용은 &lt;a href=&quot;#bind(javax.naming.Name,java.lang.Object)&quot;&gt; &lt;code&gt;bind(Name, Object)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="22f07ab7847985e8e60fec2932f80e97a99c0603" translate="yes" xml:space="preserve">
          <source>Binds a name to an object. See &lt;a href=&quot;context#bind-javax.naming.Name-java.lang.Object-&quot;&gt;&lt;code&gt;Context.bind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">객체에 이름을 바인딩합니다. 자세한 내용은 &lt;a href=&quot;context#bind-javax.naming.Name-java.lang.Object-&quot;&gt; &lt;code&gt;Context.bind(Name, Object)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1fe532abc5ebc2577888e073f9a9954b0c757df1" translate="yes" xml:space="preserve">
          <source>Binds a name to an object. See &lt;a href=&quot;context#bind-javax.naming.Name-java.lang.Object-&quot;&gt;&lt;code&gt;bind(Name, Object)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">객체에 이름을 바인딩합니다. 자세한 내용은 &lt;a href=&quot;context#bind-javax.naming.Name-java.lang.Object-&quot;&gt; &lt;code&gt;bind(Name, Object)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="55057edf02800de7f787f89d93f937b061321815" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name.</source>
          <target state="translated">새 이름을 이전 이름에 바인딩 된 개체에 바인딩하고 이전 이름을 바인딩 해제합니다.</target>
        </trans-unit>
        <trans-unit id="ad13bf0cb1e9c230eb4c5a12b92482517b9f6640" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name. Both names are relative to this context. Any attributes associated with the old name become associated with the new name. Intermediate contexts of the old name are not changed.</source>
          <target state="translated">이전 이름에 바인딩 된 개체에 새 이름을 바인딩하고 이전 이름을 바인딩 해제합니다. 두 이름 모두이 문맥과 관련이 있습니다. 이전 이름과 관련된 속성은 새 이름과 연결됩니다. 이전 이름의 중간 컨텍스트는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cbf274dfc1ebc1037d58c1b667671334279f481e" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name. See &lt;a href=&quot;#rename(javax.naming.Name,javax.naming.Name)&quot;&gt;&lt;code&gt;rename(Name, Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">새 이름을 이전 이름에 바인딩 된 개체에 바인딩하고 이전 이름을 바인딩 해제합니다. 자세한 내용은 &lt;a href=&quot;#rename(javax.naming.Name,javax.naming.Name)&quot;&gt; &lt;code&gt;rename(Name, Name)&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bdf6640303dc99ed775550a3779d06408bd0b49e" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name. See &lt;a href=&quot;context#rename-javax.naming.Name-javax.naming.Name-&quot;&gt;&lt;code&gt;Context.rename(Name, Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">이전 이름에 바인딩 된 개체에 새 이름을 바인딩하고 이전 이름을 바인딩 해제합니다. 자세한 내용은 &lt;a href=&quot;context#rename-javax.naming.Name-javax.naming.Name-&quot;&gt; &lt;code&gt;Context.rename(Name, Name)&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2f6495aa38d4725a36a720ebc6469d45df032586" translate="yes" xml:space="preserve">
          <source>Binds a new name to the object bound to an old name, and unbinds the old name. See &lt;a href=&quot;context#rename-javax.naming.Name-javax.naming.Name-&quot;&gt;&lt;code&gt;rename(Name, Name)&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">이전 이름에 바인딩 된 개체에 새 이름을 바인딩하고 이전 이름을 바인딩 해제합니다. 자세한 내용은 &lt;a href=&quot;context#rename-javax.naming.Name-javax.naming.Name-&quot;&gt; &lt;code&gt;rename(Name, Name)&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5b4e28023e25c3e90449ef6ab97fe0ba935a3048" translate="yes" xml:space="preserve">
          <source>Binds a remote reference to the specified &lt;code&gt;name&lt;/code&gt; in this registry.</source>
          <target state="translated">이 레지스트리에 지정된 &lt;code&gt;name&lt;/code&gt; 에 원격 참조를 바인드합니다 .</target>
        </trans-unit>
        <trans-unit id="f4ccecc2f1995a168a2e90631f368757ba24ced1" translate="yes" xml:space="preserve">
          <source>Binds a value &lt;code&gt;x&lt;/code&gt; to the first argument of a method handle, without invoking it.</source>
          <target state="translated">값 &lt;code&gt;x&lt;/code&gt; 를 호출하지 않고 메서드 핸들의 첫 번째 인수에 바인딩 합니다.</target>
        </trans-unit>
        <trans-unit id="d709e7ff6c01b64e185f7177232e54cd2748d562" translate="yes" xml:space="preserve">
          <source>Binds a value &lt;code&gt;x&lt;/code&gt; to the first argument of a method handle, without invoking it. The new method handle adapts, as its</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 를 호출하지 않고 메소드 핸들의 첫 번째 인수에 값 x 를 바인딩 합니다. 새로운 메소드 핸들은</target>
        </trans-unit>
        <trans-unit id="71c3e052fa37c0007ee3dd0c54068d206ac64534" translate="yes" xml:space="preserve">
          <source>Binds the &lt;code&gt;ServerSocket&lt;/code&gt; to a specific address (IP address and port number).</source>
          <target state="translated">&lt;code&gt;ServerSocket&lt;/code&gt; 을 특정 주소 (IP 주소 및 포트 번호)에 바인딩합니다 .</target>
        </trans-unit>
        <trans-unit id="d5340b21c5bcf30743e0e17d48b8bd38ada396ca" translate="yes" xml:space="preserve">
          <source>Binds the channel's socket to a local address and configures the socket to listen for connections.</source>
          <target state="translated">채널의 소켓을 로컬 주소에 바인딩하고 연결을 수신하도록 소켓을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="5f9ea286a1c02790ef5e00a40addb6b03b0a5077" translate="yes" xml:space="preserve">
          <source>Binds the channel's socket to a local address.</source>
          <target state="translated">채널의 소켓을 로컬 주소에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="3673d3a19e58f7c7db70887801bcee601fef3d80" translate="yes" xml:space="preserve">
          <source>Binds the socket to a local address.</source>
          <target state="translated">소켓을 로컬 주소에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="740db0921542bd6df9a7c4748257bb47830db756" translate="yes" xml:space="preserve">
          <source>Binds the specified &lt;code&gt;name&lt;/code&gt; to a remote object.</source>
          <target state="translated">지정된 &lt;code&gt;name&lt;/code&gt; 을 원격 개체에 바인딩 합니다.</target>
        </trans-unit>
        <trans-unit id="37e4755756174d1db83cfc7e42a797bc45b05862" translate="yes" xml:space="preserve">
          <source>Binds the specified &lt;code&gt;value&lt;/code&gt; object into the session's application layer data with the given &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;value&lt;/code&gt; 객체를 지정된 &lt;code&gt;name&lt;/code&gt; 으로 세션의 응용 프로그램 계층 데이터에 바인딩합니다 .</target>
        </trans-unit>
        <trans-unit id="124690239bd8a65db1488a68d66c6d5ab4897d0c" translate="yes" xml:space="preserve">
          <source>Binds this DatagramSocket to a specific address and port.</source>
          <target state="translated">이 DatagramSocket을 특정 주소 및 포트에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="f72819abf0c6fe30fe4545b6029d3fad576d29e2" translate="yes" xml:space="preserve">
          <source>Binds this socket to the specified local IP address and port number.</source>
          <target state="translated">이 소켓을 지정된 로컬 IP 주소 및 포트 번호에 바인딩합니다.</target>
        </trans-unit>
        <trans-unit id="eb9bf65dbb672320688439f4fdd91a067e55da32" translate="yes" xml:space="preserve">
          <source>Bit 31 (the bit that is selected by the mask &lt;code&gt;0x80000000&lt;/code&gt;) represents the sign of the floating-point number. Bits 30-23 (the bits that are selected by the mask &lt;code&gt;0x7f800000&lt;/code&gt;) represent the exponent. Bits 22-0 (the bits that are selected by the mask &lt;code&gt;0x007fffff&lt;/code&gt;) represent the significand (sometimes called the mantissa) of the floating-point number.</source>
          <target state="translated">비트 31 (마스크 &lt;code&gt;0x80000000&lt;/code&gt; 에 의해 선택된 비트 )은 부동 소수점 숫자의 부호를 나타냅니다. 비트 30-23 (마스크 &lt;code&gt;0x7f800000&lt;/code&gt; 에 의해 선택된 비트 )은 지수를 나타냅니다. 비트 22-0 (마스크 &lt;code&gt;0x007fffff&lt;/code&gt; 에 의해 선택된 비트 )은 부동 소수점 숫자의 의미 (때로는 가수라고도 함)를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="73cf6da9b8bc4c7b8afc1a74617a7d656eeaff51" translate="yes" xml:space="preserve">
          <source>Bit 63 (the bit that is selected by the mask &lt;code&gt;0x8000000000000000L&lt;/code&gt;) represents the sign of the floating-point number. Bits 62-52 (the bits that are selected by the mask &lt;code&gt;0x7ff0000000000000L&lt;/code&gt;) represent the exponent. Bits 51-0 (the bits that are selected by the mask &lt;code&gt;0x000fffffffffffffL&lt;/code&gt;) represent the significand (sometimes called the mantissa) of the floating-point number.</source>
          <target state="translated">비트 63 (마스크 &lt;code&gt;0x8000000000000000L&lt;/code&gt; 에 의해 선택된 비트 )은 부동 소수점 숫자의 부호를 나타냅니다. 비트 62-52 (마스크 &lt;code&gt;0x7ff0000000000000L&lt;/code&gt; 에 의해 선택된 비트 )는 지수를 나타냅니다. 비트 51-0 (마스크 &lt;code&gt;0x000fffffffffffffL&lt;/code&gt; 에 의해 선택된 비트 )은 부동 소수점 숫자의 유효 값 (때때로 가수라고 함)을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="453ffe06e1f177025b7df438053e3e95f5b987e2" translate="yes" xml:space="preserve">
          <source>Bit Values</source>
          <target state="translated">비트 값</target>
        </trans-unit>
        <trans-unit id="1b50c761d3d767e2454af03c53933f6369efdd51" translate="yes" xml:space="preserve">
          <source>Bit data may be accumulated in memory indefinitely, until &lt;code&gt;flushBefore&lt;/code&gt; is called. At that time, all bit data prior to the flushed position will be written.</source>
          <target state="translated">&lt;code&gt;flushBefore&lt;/code&gt; 가 호출 될 때까지 비트 데이터는 메모리에 무기한으로 누적 될 수 있습니다 . 이때 플러시 된 위치 이전의 모든 비트 데이터가 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="91410f5062503a2f98f586d004eb2c78a1680c89" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다.</target>
        </trans-unit>
        <trans-unit id="05563058e628aace24cda34cd8eb0e4c583c470c" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates Externalizable data written in Block Data mode. Added for PROTOCOL_VERSION_2.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다. 블록 데이터 모드로 작성된 외부화 가능 데이터를 나타냅니다. PROTOCOL_VERSION_2에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="980e6444082734f84ce692d0ac5d54ad5f699b57" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates a Serializable class defines its own writeObject method.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다. Serializable 클래스가 독자적인 writeObject 메소드를 정의하는 것을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f92fed8e99fe69d8719835dab1ec09a124e85bd0" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates class is Externalizable.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다. 클래스가 외부화 가능함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="84d025954ac00dfa8ca9d8dc38de0c08ac7915c3" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates class is Serializable.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다. 클래스가 직렬화 가능함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="04c1cd65ff809622b82410f7c2d53da0f105f7a9" translate="yes" xml:space="preserve">
          <source>Bit mask for ObjectStreamClass flag. Indicates class is an enum type.</source>
          <target state="translated">ObjectStreamClass 플래그의 비트 마스크입니다. 클래스가 열거 형임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ecd33ea63e56de73ca3baa2621e5245a2a2785b9" translate="yes" xml:space="preserve">
          <source>Bit operations operate on a single bit of the two's-complement representation of their operand. If necessary, the operand is sign- extended so that it contains the designated bit. None of the single-bit operations can produce a BigInteger with a different sign from the BigInteger being operated on, as they affect only a single bit, and the &quot;infinite word size&quot; abstraction provided by this class ensures that there are infinitely many &quot;virtual sign bits&quot; preceding each BigInteger.</source>
          <target state="translated">비트 연산은 피연산자에 대한 2의 보수 표현 중 단일 비트에서 작동합니다. 필요한 경우 피연산자는 부호가 확장되어 지정된 비트를 포함합니다. 단일 비트 연산은 단일 비트에만 영향을 미치므로 BigInteger와 다른 부호를 가진 BigInteger를 생성 할 수 없으며이 클래스에서 제공하는 &quot;무한 워드 크기&quot;추상화는 무한히 많은 &quot;가상&quot;을 보장합니다. 각 BigInteger 앞에 부호 비트 &quot;가 있습니다.</target>
        </trans-unit>
        <trans-unit id="d16f30188929980352ec86311340c5e85f211381" translate="yes" xml:space="preserve">
          <source>Bit operations operate on a single bit of the two's-complement representation of their operand. If necessary, the operand is sign- extended so that it contains the designated bit. None of the single-bit operations can produce a BigInteger with a different sign from the BigInteger being operated on, as they affect only a single bit, and the arbitrarily large abstraction provided by this class ensures that conceptually there are infinitely many &quot;virtual sign bits&quot; preceding each BigInteger.</source>
          <target state="translated">비트 연산은 피연산자의 2의 보수 표현의 단일 비트에서 작동합니다. 필요한 경우 피연산자는 지정된 비트를 포함하도록 부호 확장됩니다. 단일 비트 연산은 작동중인 BigInteger와 다른 부호를 가진 BigInteger를 생성 할 수 없습니다. 단일 비트에만 영향을 미치기 때문입니다.이 클래스에서 제공하는 임의의 큰 추상화는 개념적으로 무한히 많은 &quot;가상 부호 비트&quot;를 보장합니다. &quot;각 BigInteger 앞에 있습니다.</target>
        </trans-unit>
        <trans-unit id="f8cd7716f7a5997d4efd153b8de6bda8ac575d3b" translate="yes" xml:space="preserve">
          <source>BitSet</source>
          <target state="translated">BitSet</target>
        </trans-unit>
        <trans-unit id="4c8e097ef5a9e0be43dffcccd18f1bc24d1753c6" translate="yes" xml:space="preserve">
          <source>BitSet.and()</source>
          <target state="translated">BitSet.and()</target>
        </trans-unit>
        <trans-unit id="fb60336f70f94007e406ccb00c92dec7638f45c5" translate="yes" xml:space="preserve">
          <source>BitSet.andNot()</source>
          <target state="translated">BitSet.andNot()</target>
        </trans-unit>
        <trans-unit id="4ddb12170cc0af1c8510dde93d3409b246d62576" translate="yes" xml:space="preserve">
          <source>BitSet.cardinality()</source>
          <target state="translated">BitSet.cardinality()</target>
        </trans-unit>
        <trans-unit id="679ac21a173b71844f1bfddb9122b7de6acfc229" translate="yes" xml:space="preserve">
          <source>BitSet.clear()</source>
          <target state="translated">BitSet.clear()</target>
        </trans-unit>
        <trans-unit id="a86d3f66e5586ed8aa965f3cbff2d1eafcad89b8" translate="yes" xml:space="preserve">
          <source>BitSet.clone()</source>
          <target state="translated">BitSet.clone()</target>
        </trans-unit>
        <trans-unit id="2f1018809af4fef2b11eeba7220754e3c8c55f0f" translate="yes" xml:space="preserve">
          <source>BitSet.equals()</source>
          <target state="translated">BitSet.equals()</target>
        </trans-unit>
        <trans-unit id="34a0e6b1e2786484f51df7d145b3149bc292e112" translate="yes" xml:space="preserve">
          <source>BitSet.flip()</source>
          <target state="translated">BitSet.flip()</target>
        </trans-unit>
        <trans-unit id="236e52eea6dd02143c7f694346a83021046ad45b" translate="yes" xml:space="preserve">
          <source>BitSet.get()</source>
          <target state="translated">BitSet.get()</target>
        </trans-unit>
        <trans-unit id="64d2f277a331da739d543986baaf6695e2106d92" translate="yes" xml:space="preserve">
          <source>BitSet.hashCode()</source>
          <target state="translated">BitSet.hashCode()</target>
        </trans-unit>
        <trans-unit id="4a80a58dc3add60c37954085b109de6111151c8e" translate="yes" xml:space="preserve">
          <source>BitSet.intersects()</source>
          <target state="translated">BitSet.intersects()</target>
        </trans-unit>
        <trans-unit id="93ed99d0c0620a61a0647883b7efab25e0d91d80" translate="yes" xml:space="preserve">
          <source>BitSet.isEmpty()</source>
          <target state="translated">BitSet.isEmpty()</target>
        </trans-unit>
        <trans-unit id="b0d5b6739df61dbad5479e7313573f2fa4ee7fce" translate="yes" xml:space="preserve">
          <source>BitSet.length()</source>
          <target state="translated">BitSet.length()</target>
        </trans-unit>
        <trans-unit id="714103c17ee82a0d18c7ee30f303cfa30b46ff38" translate="yes" xml:space="preserve">
          <source>BitSet.nextClearBit()</source>
          <target state="translated">BitSet.nextClearBit()</target>
        </trans-unit>
        <trans-unit id="80f1ba62dc5e4f614d26c5b6dc10e2cccbd1f067" translate="yes" xml:space="preserve">
          <source>BitSet.nextSetBit()</source>
          <target state="translated">BitSet.nextSetBit()</target>
        </trans-unit>
        <trans-unit id="b21cb83cfa3b52dc1eb29f44966b01f57c99fc6c" translate="yes" xml:space="preserve">
          <source>BitSet.or()</source>
          <target state="translated">BitSet.or()</target>
        </trans-unit>
        <trans-unit id="717efc7d633854520c6326e774d0633b722fb0f0" translate="yes" xml:space="preserve">
          <source>BitSet.previousClearBit()</source>
          <target state="translated">BitSet.previousClearBit()</target>
        </trans-unit>
        <trans-unit id="a19384b78577d60c447b7a61591f6e2a8e5b810d" translate="yes" xml:space="preserve">
          <source>BitSet.previousSetBit()</source>
          <target state="translated">BitSet.previousSetBit()</target>
        </trans-unit>
        <trans-unit id="889bcfe5f707ae49eeb05c27ef1a1dd1e66c7903" translate="yes" xml:space="preserve">
          <source>BitSet.set()</source>
          <target state="translated">BitSet.set()</target>
        </trans-unit>
        <trans-unit id="df7cace24802d62d3de2eb6ec448bc273b094f32" translate="yes" xml:space="preserve">
          <source>BitSet.size()</source>
          <target state="translated">BitSet.size()</target>
        </trans-unit>
        <trans-unit id="453b1b073bf74ff055fc871c4c799969e45d686f" translate="yes" xml:space="preserve">
          <source>BitSet.stream()</source>
          <target state="translated">BitSet.stream()</target>
        </trans-unit>
        <trans-unit id="4083cff4ce93f8a4411f42770d399b164597f061" translate="yes" xml:space="preserve">
          <source>BitSet.toByteArray()</source>
          <target state="translated">BitSet.toByteArray()</target>
        </trans-unit>
        <trans-unit id="07eb1bb1f97d56c7798c265a60803953940f64e2" translate="yes" xml:space="preserve">
          <source>BitSet.toLongArray()</source>
          <target state="translated">BitSet.toLongArray()</target>
        </trans-unit>
        <trans-unit id="6ab19bc74c79ebdf1bd396e120ea266c54e48298" translate="yes" xml:space="preserve">
          <source>BitSet.toString()</source>
          <target state="translated">BitSet.toString()</target>
        </trans-unit>
        <trans-unit id="f264c54281e3ae0f91d901083011ded7e7b273de" translate="yes" xml:space="preserve">
          <source>BitSet.valueOf()</source>
          <target state="translated">BitSet.valueOf()</target>
        </trans-unit>
        <trans-unit id="3ecf11e19835619628bf7f04e8854e8e1fd790cb" translate="yes" xml:space="preserve">
          <source>BitSet.xor()</source>
          <target state="translated">BitSet.xor()</target>
        </trans-unit>
        <trans-unit id="26504da2e82f7d1bef4cde85ae0e762f9c79875f" translate="yes" xml:space="preserve">
          <source>Bitmap data.</source>
          <target state="translated">비트 맵 데이터.</target>
        </trans-unit>
        <trans-unit id="5087244ecdc1dda9eb3b9e9385f7447295e90893" translate="yes" xml:space="preserve">
          <source>Bitmap data. Table tag &quot;bdat&quot; in the Open Type Specification.</source>
          <target state="translated">비트 맵 데이터. Open Type 사양의 테이블 태그 「bdat」입니다.</target>
        </trans-unit>
        <trans-unit id="5d6acb4d1cb9bf4bf0362c6777ffd2b08bdc6d21" translate="yes" xml:space="preserve">
          <source>Bitmap location.</source>
          <target state="translated">비트 맵 위치.</target>
        </trans-unit>
        <trans-unit id="97932d2c38023e131c28edbf9418bc7971956091" translate="yes" xml:space="preserve">
          <source>Bitmap location. Table tag &quot;bloc&quot; in the Open Type Specification.</source>
          <target state="translated">비트 맵 위치. Open Type 사양의 테이블 태그 「bloc」입니다.</target>
        </trans-unit>
        <trans-unit id="6c74cd82b56269d0740800f73cbe5f75b5cfd241" translate="yes" xml:space="preserve">
          <source>Bitwise comparison of &lt;code&gt;float&lt;/code&gt; values or &lt;code&gt;double&lt;/code&gt; values, as performed by the numeric and atomic update access modes, differ from the primitive &lt;code&gt;==&lt;/code&gt; operator and the &lt;a href=&quot;../float#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Float.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../double#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Double.equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; methods, specifically with respect to comparing NaN values or comparing &lt;code&gt;-0.0&lt;/code&gt; with &lt;code&gt;+0.0&lt;/code&gt;. Care should be taken when performing a compare and set or a compare and exchange operation with such values since the operation may unexpectedly fail. There are many possible NaN values that are considered to be &lt;code&gt;NaN&lt;/code&gt; in Java, although no IEEE 754 floating-point operation provided by Java can distinguish between them. Operation failure can occur if the expected or witness value is a NaN value and it is transformed (perhaps in a platform specific manner) into another NaN value, and thus has a different bitwise representation (see &lt;a href=&quot;../float#intBitsToFloat(int)&quot;&gt;&lt;code&gt;Float.intBitsToFloat(int)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../double#longBitsToDouble(long)&quot;&gt;&lt;code&gt;Double.longBitsToDouble(long)&lt;/code&gt;&lt;/a&gt; for more details). The values &lt;code&gt;-0.0&lt;/code&gt; and &lt;code&gt;+0.0&lt;/code&gt; have different bitwise representations but are considered equal when using the primitive &lt;code&gt;==&lt;/code&gt; operator. Operation failure can occur if, for example, a numeric algorithm computes an expected value to be say &lt;code&gt;-0.0&lt;/code&gt; and previously computed the witness value to be say &lt;code&gt;+0.0&lt;/code&gt;.</source>
          <target state="translated">숫자 및 원자 업데이트 액세스 모드에서 수행되는 &lt;code&gt;float&lt;/code&gt; 값 또는 &lt;code&gt;double&lt;/code&gt; 값 의 비트 비교는 기본 &lt;code&gt;==&lt;/code&gt; 연산자 및 &lt;a href=&quot;../float#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Float.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../double#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Double.equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt; 와 다릅니다. 메서드, 특히 NaN 값을 비교하거나 &lt;code&gt;-0.0&lt;/code&gt; 을 &lt;code&gt;+0.0&lt;/code&gt; 과 비교 하는 것과 관련이 있습니다. 이러한 값으로 비교 및 ​​설정 또는 비교 및 ​​교환 작업을 수행 할 때는 작업이 예기치 않게 실패 할 수 있으므로주의해야합니다. 으로 생각되는 수의 NaN 값이 있습니다 &lt;code&gt;NaN&lt;/code&gt; 이는Java에서 제공하는 IEEE 754 부동 소수점 연산은 이들을 구별 할 수 없습니다. 예상 또는 감시 값이 NaN 값이고 (아마도 플랫폼 별 방식으로) 다른 NaN 값으로 변환되어 다른 비트 표현을 갖는 경우 작업 실패가 발생할 수 있습니다 ( &lt;a href=&quot;../float#intBitsToFloat(int)&quot;&gt; &lt;code&gt;Float.intBitsToFloat(int)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../double#longBitsToDouble(long)&quot;&gt; &lt;code&gt;Double.longBitsToDouble(long)&lt;/code&gt; &lt;/a&gt; 참조 ). 자세한 내용은 (긴) ). 값 &lt;code&gt;-0.0&lt;/code&gt; 과 &lt;code&gt;+0.0&lt;/code&gt; 은 다른 비트 표현을 갖지만 기본 &lt;code&gt;==&lt;/code&gt; 연산자를 사용할 때 동일한 것으로 간주됩니다 . 예를 들어 숫자 알고리즘이 예상 값을 &lt;code&gt;-0.0&lt;/code&gt; 으로 계산하고 이전에 증인 값을 계산 한 경우 작업 실패가 발생할 수 있습니다. &lt;code&gt;+0.0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c24315eb20cc1f5a565ec08f29abab31c0925f1a" translate="yes" xml:space="preserve">
          <source>Blob</source>
          <target state="translated">Blob</target>
        </trans-unit>
        <trans-unit id="82dd2cdf36f9436d89f404454654ad3e53fd428d" translate="yes" xml:space="preserve">
          <source>Block</source>
          <target state="translated">Block</target>
        </trans-unit>
        <trans-unit id="abe005907f45526cc92679c0c67c98dfd361e70c" translate="yes" xml:space="preserve">
          <source>Block multicast datagrams from the given source address.</source>
          <target state="translated">주어진 소스 주소에서 멀티 캐스트 데이터 그램을 차단합니다.</target>
        </trans-unit>
        <trans-unit id="3e4d231903439b20916bdd14898f04865fff48ff" translate="yes" xml:space="preserve">
          <source>Block of optional data.</source>
          <target state="translated">선택적 데이터 블록.</target>
        </trans-unit>
        <trans-unit id="1e20e0e36511b5c6baa2d48051902a13b2324cd0" translate="yes" xml:space="preserve">
          <source>Block of optional data. Byte following tag indicates number of bytes in this block data.</source>
          <target state="translated">선택적 데이터 블록. 바이트 다음 태그는이 블록 데이터의 바이트 수를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="437c69e5ed688c0537571d965bf795dd90b1c1d6" translate="yes" xml:space="preserve">
          <source>Block until signalled or interrupted.</source>
          <target state="translated">신호 또는 중단 될 때까지 차단하십시오.</target>
        </trans-unit>
        <trans-unit id="6d7fb4a7f38d5954e20e9f03533bcb480909a2ae" translate="yes" xml:space="preserve">
          <source>Block until signalled, interrupted, or timed out.</source>
          <target state="translated">신호, 중단 또는 시간 초과 될 때까지 차단하십시오.</target>
        </trans-unit>
        <trans-unit id="b57b8bfbe03043a73a6a80f86e47b8ab2b89853d" translate="yes" xml:space="preserve">
          <source>Block until signalled.</source>
          <target state="translated">신호가 날 때까지 차단하십시오.</target>
        </trans-unit>
        <trans-unit id="86932790462e80ef6bced45b5b159baf9aa26054" translate="yes" xml:space="preserve">
          <source>BlockAction</source>
          <target state="translated">BlockAction</target>
        </trans-unit>
        <trans-unit id="e4171c967e29c710844f83d806ed1446a10560b0" translate="yes" xml:space="preserve">
          <source>BlockElement</source>
          <target state="translated">BlockElement</target>
        </trans-unit>
        <trans-unit id="4bdc0aec0c6516c42350bab81f9c76a19c3e5ad4" translate="yes" xml:space="preserve">
          <source>BlockView</source>
          <target state="translated">BlockView</target>
        </trans-unit>
        <trans-unit id="1c76be32fb11096eed20946b126a38d45dfa7615" translate="yes" xml:space="preserve">
          <source>Blocking mode</source>
          <target state="translated">차단 모드</target>
        </trans-unit>
        <trans-unit id="3fb97fe6511d9e06578c8f4cb1af33c9125721f7" translate="yes" xml:space="preserve">
          <source>BlockingDeque</source>
          <target state="translated">BlockingDeque</target>
        </trans-unit>
        <trans-unit id="1894fd5a9c488c4c5b9f09c5f4b244a0f00dee97" translate="yes" xml:space="preserve">
          <source>BlockingDeque.add()</source>
          <target state="translated">BlockingDeque.add()</target>
        </trans-unit>
        <trans-unit id="4596b6727f09dcb15e5b51cf43c598be80a8d2de" translate="yes" xml:space="preserve">
          <source>BlockingDeque.addFirst()</source>
          <target state="translated">BlockingDeque.addFirst()</target>
        </trans-unit>
        <trans-unit id="77eec46debb5440f0901c1d701b251f1c4c81766" translate="yes" xml:space="preserve">
          <source>BlockingDeque.addLast()</source>
          <target state="translated">BlockingDeque.addLast()</target>
        </trans-unit>
        <trans-unit id="32908cf997cd28f11b9056c33b0a4e7372f74dfa" translate="yes" xml:space="preserve">
          <source>BlockingDeque.contains()</source>
          <target state="translated">BlockingDeque.contains()</target>
        </trans-unit>
        <trans-unit id="445db93e8c0cab9552caebbd0820fe21a286facb" translate="yes" xml:space="preserve">
          <source>BlockingDeque.element()</source>
          <target state="translated">BlockingDeque.element()</target>
        </trans-unit>
        <trans-unit id="bc707189b633ce4845f77e97628afb61f1af0534" translate="yes" xml:space="preserve">
          <source>BlockingDeque.iterator()</source>
          <target state="translated">BlockingDeque.iterator()</target>
        </trans-unit>
        <trans-unit id="5929f0c6f5feccd2c5c90d98f2feb4fe189e81ee" translate="yes" xml:space="preserve">
          <source>BlockingDeque.offer()</source>
          <target state="translated">BlockingDeque.offer()</target>
        </trans-unit>
        <trans-unit id="140a11b0f0d0235efd475c3660b7b86c05e7678e" translate="yes" xml:space="preserve">
          <source>BlockingDeque.offerFirst()</source>
          <target state="translated">BlockingDeque.offerFirst()</target>
        </trans-unit>
        <trans-unit id="c1bee168f07d1c735dc203b84ef27498dfb01cfc" translate="yes" xml:space="preserve">
          <source>BlockingDeque.offerLast()</source>
          <target state="translated">BlockingDeque.offerLast()</target>
        </trans-unit>
        <trans-unit id="7e97188ad7991711958350bab7bafbe0fc9555c0" translate="yes" xml:space="preserve">
          <source>BlockingDeque.peek()</source>
          <target state="translated">BlockingDeque.peek()</target>
        </trans-unit>
        <trans-unit id="ba0e617964bcce68f450a7f48d57886e4610c126" translate="yes" xml:space="preserve">
          <source>BlockingDeque.poll()</source>
          <target state="translated">BlockingDeque.poll()</target>
        </trans-unit>
        <trans-unit id="dd57caf81223f28e756d7deb559ba55faa926d04" translate="yes" xml:space="preserve">
          <source>BlockingDeque.pollFirst()</source>
          <target state="translated">BlockingDeque.pollFirst()</target>
        </trans-unit>
        <trans-unit id="92237bc7c00bb60319e5a80992f044fdfd751436" translate="yes" xml:space="preserve">
          <source>BlockingDeque.pollLast()</source>
          <target state="translated">BlockingDeque.pollLast()</target>
        </trans-unit>
        <trans-unit id="5f4ae3f4211e11a8a9d5e2316e2a3554f4ac7178" translate="yes" xml:space="preserve">
          <source>BlockingDeque.push()</source>
          <target state="translated">BlockingDeque.push()</target>
        </trans-unit>
        <trans-unit id="65de85a2a4760d19bd1850350f479e5a3c4d0da5" translate="yes" xml:space="preserve">
          <source>BlockingDeque.put()</source>
          <target state="translated">BlockingDeque.put()</target>
        </trans-unit>
        <trans-unit id="6af7fbca8160d84241b89a313461ea3f9366fe2f" translate="yes" xml:space="preserve">
          <source>BlockingDeque.putFirst()</source>
          <target state="translated">BlockingDeque.putFirst()</target>
        </trans-unit>
        <trans-unit id="9131752413334c1611615cf3b164d8e97d8ab931" translate="yes" xml:space="preserve">
          <source>BlockingDeque.putLast()</source>
          <target state="translated">BlockingDeque.putLast()</target>
        </trans-unit>
        <trans-unit id="1371772a2cba2d195655c47780477a1893d92cb8" translate="yes" xml:space="preserve">
          <source>BlockingDeque.remove()</source>
          <target state="translated">BlockingDeque.remove()</target>
        </trans-unit>
        <trans-unit id="35cadb29caad91cc2949815b42189140e4ffedfd" translate="yes" xml:space="preserve">
          <source>BlockingDeque.removeFirstOccurrence()</source>
          <target state="translated">BlockingDeque.removeFirstOccurrence()</target>
        </trans-unit>
        <trans-unit id="9b54a4d968ba9f46d0fe3f2ece2a6bc3b44cc834" translate="yes" xml:space="preserve">
          <source>BlockingDeque.removeLastOccurrence()</source>
          <target state="translated">BlockingDeque.removeLastOccurrence()</target>
        </trans-unit>
        <trans-unit id="6db8e8dab44e32f9a7e617348c8b3d22410d2c7a" translate="yes" xml:space="preserve">
          <source>BlockingDeque.size()</source>
          <target state="translated">BlockingDeque.size()</target>
        </trans-unit>
        <trans-unit id="e4d0f34b17d91e4c1128a3b7e22f48c7f1bdeb79" translate="yes" xml:space="preserve">
          <source>BlockingDeque.take()</source>
          <target state="translated">BlockingDeque.take()</target>
        </trans-unit>
        <trans-unit id="dc95893eb428b8b8b6d613b7561011b87286b6b4" translate="yes" xml:space="preserve">
          <source>BlockingDeque.takeFirst()</source>
          <target state="translated">BlockingDeque.takeFirst()</target>
        </trans-unit>
        <trans-unit id="c7d370f92ce04a2c57940e61a6c033f10cfbeace" translate="yes" xml:space="preserve">
          <source>BlockingDeque.takeLast()</source>
          <target state="translated">BlockingDeque.takeLast()</target>
        </trans-unit>
        <trans-unit id="3f70916c7cef37053ab5d86448df36eebb93370a" translate="yes" xml:space="preserve">
          <source>BlockingQueue</source>
          <target state="translated">BlockingQueue</target>
        </trans-unit>
        <trans-unit id="da18778895648b5e78e4a0d80c431caaabca8a6a" translate="yes" xml:space="preserve">
          <source>BlockingQueue.add()</source>
          <target state="translated">BlockingQueue.add()</target>
        </trans-unit>
        <trans-unit id="29ffdd05ddcfb0bcdef2590397410e1f1625bea4" translate="yes" xml:space="preserve">
          <source>BlockingQueue.contains()</source>
          <target state="translated">BlockingQueue.contains()</target>
        </trans-unit>
        <trans-unit id="ea1de17bfb3ca844258b3559e1713668c704f97c" translate="yes" xml:space="preserve">
          <source>BlockingQueue.drainTo()</source>
          <target state="translated">BlockingQueue.drainTo()</target>
        </trans-unit>
        <trans-unit id="34694541ddd303bcd20756f399cd6231c4e77329" translate="yes" xml:space="preserve">
          <source>BlockingQueue.offer()</source>
          <target state="translated">BlockingQueue.offer()</target>
        </trans-unit>
        <trans-unit id="1b07cff622e7d09748221e61467aefbc82f10200" translate="yes" xml:space="preserve">
          <source>BlockingQueue.poll()</source>
          <target state="translated">BlockingQueue.poll()</target>
        </trans-unit>
        <trans-unit id="2f8225b7c3adc824195da066166a85d37d2c8120" translate="yes" xml:space="preserve">
          <source>BlockingQueue.put()</source>
          <target state="translated">BlockingQueue.put()</target>
        </trans-unit>
        <trans-unit id="8e2e238b69b4260890766024e4d87fdab89ffb5e" translate="yes" xml:space="preserve">
          <source>BlockingQueue.remainingCapacity()</source>
          <target state="translated">BlockingQueue.remainingCapacity()</target>
        </trans-unit>
        <trans-unit id="26cab4f861e02974ba468ae1433e65c358008910" translate="yes" xml:space="preserve">
          <source>BlockingQueue.remove()</source>
          <target state="translated">BlockingQueue.remove()</target>
        </trans-unit>
        <trans-unit id="78a918d99c4fc28ca827a620a5dbaeb5dc5e4b0f" translate="yes" xml:space="preserve">
          <source>BlockingQueue.take()</source>
          <target state="translated">BlockingQueue.take()</target>
        </trans-unit>
        <trans-unit id="54c45c033f5eb914fae27a646cbd9e23d3750d19" translate="yes" xml:space="preserve">
          <source>Blocks</source>
          <target state="translated">Blocks</target>
        </trans-unit>
        <trans-unit id="8f3ad24dc89b49af619a25cf5e86e97c7828113b" translate="yes" xml:space="preserve">
          <source>Blocks the execution of the current thread and enters a new secondary event loop on the event dispatch thread.</source>
          <target state="translated">현재 스레드의 실행을 차단하고 이벤트 디스패치 스레드에서 새 보조 이벤트 루프에 들어갑니다.</target>
        </trans-unit>
        <trans-unit id="aa7409819aec95a34f71e58863a16d3adeaa6bb4" translate="yes" xml:space="preserve">
          <source>Blocks until all tasks have completed execution after a shutdown request, or the timeout occurs, or the current thread is interrupted, whichever happens first.</source>
          <target state="translated">종료 요청 후 모든 작업이 실행을 완료하거나 시간 초과가 발생하거나 현재 스레드가 중단 될 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="20537270db935e43a5ff4c6d378e4b06abbd075d" translate="yes" xml:space="preserve">
          <source>Blocks until all tasks have completed execution after a shutdown request, or the timeout occurs, or the current thread is interrupted, whichever happens first. Because the &lt;a href=&quot;#commonPool()&quot;&gt;&lt;code&gt;commonPool()&lt;/code&gt;&lt;/a&gt; never terminates until program shutdown, when applied to the common pool, this method is equivalent to &lt;a href=&quot;#awaitQuiescence(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;awaitQuiescence(long, TimeUnit)&lt;/code&gt;&lt;/a&gt; but always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">종료 요청 후 모든 작업이 실행을 완료하거나 시간 초과가 발생하거나 현재 스레드가 중단 될 때까지 차단됩니다. &lt;a href=&quot;#commonPool()&quot;&gt; &lt;code&gt;commonPool()&lt;/code&gt; &lt;/a&gt; 은 프로그램이 종료 될 때까지 절대 종료되지 않기 때문에 공통 풀에 적용될 때이 메서드는 &lt;a href=&quot;#awaitQuiescence(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;awaitQuiescence(long, TimeUnit)&lt;/code&gt; &lt;/a&gt; 와 동일 하지만 항상 &lt;code&gt;false&lt;/code&gt; 를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="8e5851d9dadeeeaa5b008460f5a6f3a3b225e6f2" translate="yes" xml:space="preserve">
          <source>Blocks until all tasks have completed execution after a shutdown request, or the timeout occurs, or the current thread is interrupted, whichever happens first. Because the &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt;&lt;code&gt;commonPool()&lt;/code&gt;&lt;/a&gt; never terminates until program shutdown, when applied to the common pool, this method is equivalent to &lt;a href=&quot;forkjoinpool#awaitQuiescence-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitQuiescence(long, TimeUnit)&lt;/code&gt;&lt;/a&gt; but always returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">종료 요청 후 모든 작업이 실행을 완료하거나 시간 초과가 발생하거나 현재 스레드가 중단 될 때까지 차단합니다. 때문에 &lt;a href=&quot;forkjoinpool#commonPool--&quot;&gt; &lt;code&gt;commonPool()&lt;/code&gt; &lt;/a&gt; 결코 프로그램이 종료 될 때까지 종료하지 않는 일반적인 풀에 적용 할 때,이 방법은 동일합니다 &lt;a href=&quot;forkjoinpool#awaitQuiescence-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitQuiescence(long, TimeUnit)&lt;/code&gt; &lt;/a&gt; 하지만 항상 반환 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6c64ee39352593f34be63ac6145fb49455242569" translate="yes" xml:space="preserve">
          <source>BltBufferStrategy</source>
          <target state="translated">BltBufferStrategy</target>
        </trans-unit>
        <trans-unit id="19e07430eed6d97d6d73cb4a2967b1f316520f54" translate="yes" xml:space="preserve">
          <source>Bold</source>
          <target state="translated">Bold</target>
        </trans-unit>
        <trans-unit id="ec93d9930a54031afe78617b34de72170c7ff39a" translate="yes" xml:space="preserve">
          <source>BoldAction</source>
          <target state="translated">BoldAction</target>
        </trans-unit>
        <trans-unit id="f69f233005f15802770fd26fbf7ead52ec13d9e6" translate="yes" xml:space="preserve">
          <source>Book</source>
          <target state="translated">Book</target>
        </trans-unit>
        <trans-unit id="b76ff4906f33c2dd97ddd929b9662ba8cac6174c" translate="yes" xml:space="preserve">
          <source>Boolean</source>
          <target state="translated">Boolean</target>
        </trans-unit>
        <trans-unit id="8fd608c56ea83a9db9270c1b6943702d3b37ef68" translate="yes" xml:space="preserve">
          <source>Boolean (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, case irrelevant). Is the ability to redefine classes needed by this agent. Values other than &lt;code&gt;true&lt;/code&gt; are considered &lt;code&gt;false&lt;/code&gt;. This attribute is optional, the default is &lt;code&gt;
 false&lt;/code&gt;.</source>
          <target state="translated">부울 ( &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; , 대소 문자와 무관 함). 이 에이전트에 필요한 클래스를 재정의하는 기능입니다. &lt;code&gt;true&lt;/code&gt; 이외의 값 은 &lt;code&gt;false&lt;/code&gt; 로 간주됩니다 . 이 속성은 선택 사항이며 기본값은 &lt;code&gt; false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e125e62854b455a823d0ed016ceaa723d047f75f" translate="yes" xml:space="preserve">
          <source>Boolean (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, case irrelevant). Is the ability to retransform classes needed by this agent. Values other than &lt;code&gt;true&lt;/code&gt; are considered &lt;code&gt;false&lt;/code&gt;. This attribute is optional, the default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">부울 ( &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; , 대소 문자와 무관 함). 이 에이전트에 필요한 클래스를 다시 변환하는 기능입니다. &lt;code&gt;true&lt;/code&gt; 이외의 값 은 &lt;code&gt;false&lt;/code&gt; 로 간주됩니다 . 이 속성은 선택 사항이며 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="18215efa18d148162c1b157547a37823f1ee4229" translate="yes" xml:space="preserve">
          <source>Boolean (&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;, case irrelevant). Is the ability to set native method prefix needed by this agent. Values other than &lt;code&gt;
 true&lt;/code&gt; are considered &lt;code&gt;false&lt;/code&gt;. This attribute is optional, the default is &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">부울 ( &lt;code&gt;true&lt;/code&gt; 또는 &lt;code&gt;false&lt;/code&gt; , 대소 문자와 무관 함). 이 에이전트에 필요한 기본 메서드 접두사를 설정하는 기능입니다. &lt;code&gt; true&lt;/code&gt; 이외의 값 은 &lt;code&gt;false&lt;/code&gt; 로 간주됩니다 . 이 속성은 선택 사항이며 기본값은 &lt;code&gt;false&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ac0a5d43a40d00bca61759471acf8034025af73f" translate="yes" xml:space="preserve">
          <source>Boolean(false)</source>
          <target state="translated">Boolean(false)</target>
        </trans-unit>
        <trans-unit id="5bdcba22e2f5015ec13f986d7b975c6e5b3bea91" translate="yes" xml:space="preserve">
          <source>Boolean.FALSE</source>
          <target state="translated">Boolean.FALSE</target>
        </trans-unit>
        <trans-unit id="755e2cfac54524af42eba823094429e4621fd248" translate="yes" xml:space="preserve">
          <source>Boolean.booleanValue()</source>
          <target state="translated">Boolean.booleanValue()</target>
        </trans-unit>
        <trans-unit id="4f1686ae994305fedcf9f3902e8de82d4c6aba2f" translate="yes" xml:space="preserve">
          <source>Boolean.compare()</source>
          <target state="translated">Boolean.compare()</target>
        </trans-unit>
        <trans-unit id="b2735b2a749b0bfc7bbd5d997b59fde74c1d74b3" translate="yes" xml:space="preserve">
          <source>Boolean.compareTo()</source>
          <target state="translated">Boolean.compareTo()</target>
        </trans-unit>
        <trans-unit id="a7e6cc7126c0810a972cc90de41f9d5e73b50bed" translate="yes" xml:space="preserve">
          <source>Boolean.equals()</source>
          <target state="translated">Boolean.equals()</target>
        </trans-unit>
        <trans-unit id="a6b64bad98cff06904cae8c22449b3ed681058c0" translate="yes" xml:space="preserve">
          <source>Boolean.getBoolean()</source>
          <target state="translated">Boolean.getBoolean()</target>
        </trans-unit>
        <trans-unit id="54ea8021aa4d8619e0fb086a3774b1ec58d679db" translate="yes" xml:space="preserve">
          <source>Boolean.hashCode()</source>
          <target state="translated">Boolean.hashCode()</target>
        </trans-unit>
        <trans-unit id="5385e71f52e787213e89bd9ec9d3aec9b5a31177" translate="yes" xml:space="preserve">
          <source>Boolean.logicalAnd()</source>
          <target state="translated">Boolean.logicalAnd()</target>
        </trans-unit>
        <trans-unit id="4723a7a485d3d52e8b2fd746e03ce78bece1889a" translate="yes" xml:space="preserve">
          <source>Boolean.logicalOr()</source>
          <target state="translated">Boolean.logicalOr()</target>
        </trans-unit>
        <trans-unit id="f174551b1e392e9c404a95e00e1fd023a8ecfa79" translate="yes" xml:space="preserve">
          <source>Boolean.logicalXor()</source>
          <target state="translated">Boolean.logicalXor()</target>
        </trans-unit>
        <trans-unit id="a517cf80486e0d3f2d052bae12a444adfb164516" translate="yes" xml:space="preserve">
          <source>Boolean.parseBoolean()</source>
          <target state="translated">Boolean.parseBoolean()</target>
        </trans-unit>
        <trans-unit id="a7f19794b9adaa375b2fb65fabc1e14d6b0644d4" translate="yes" xml:space="preserve">
          <source>Boolean.toString()</source>
          <target state="translated">Boolean.toString()</target>
        </trans-unit>
        <trans-unit id="36df6179b265f6becdddca2954b7b822cdb5feb4" translate="yes" xml:space="preserve">
          <source>Boolean.valueOf()</source>
          <target state="translated">Boolean.valueOf()</target>
        </trans-unit>
        <trans-unit id="c3a6b6b221f958ec66fdc1ebbea468d791770b67" translate="yes" xml:space="preserve">
          <source>BooleanControl</source>
          <target state="translated">BooleanControl</target>
        </trans-unit>
        <trans-unit id="264493d1d1370cdf5822ebc72afddeff55db11c3" translate="yes" xml:space="preserve">
          <source>BooleanControl.Type</source>
          <target state="translated">BooleanControl.Type</target>
        </trans-unit>
        <trans-unit id="31535f69c539a2c0afbf491f8e73b77b3c9090e1" translate="yes" xml:space="preserve">
          <source>BooleanControl.getStateLabel()</source>
          <target state="translated">BooleanControl.getStateLabel()</target>
        </trans-unit>
        <trans-unit id="11303e81a66d95eda4c521da66e0de85aa0ecec3" translate="yes" xml:space="preserve">
          <source>BooleanControl.getValue()</source>
          <target state="translated">BooleanControl.getValue()</target>
        </trans-unit>
        <trans-unit id="0a7092b20fac0fca2379b95bc69bf5f6201e0b5d" translate="yes" xml:space="preserve">
          <source>BooleanControl.setValue()</source>
          <target state="translated">BooleanControl.setValue()</target>
        </trans-unit>
        <trans-unit id="470fb9dca80e1ee6f9f95de16eb31f04fcce6736" translate="yes" xml:space="preserve">
          <source>BooleanControl.toString()</source>
          <target state="translated">BooleanControl.toString()</target>
        </trans-unit>
        <trans-unit id="455e9681e0f8bdba8a6c0712489d266dc1e9574f" translate="yes" xml:space="preserve">
          <source>BooleanSupplier</source>
          <target state="translated">BooleanSupplier</target>
        </trans-unit>
        <trans-unit id="12223b428db841ff1f72fb7117584ea71d29ff33" translate="yes" xml:space="preserve">
          <source>BooleanSupplier.getAsBoolean()</source>
          <target state="translated">BooleanSupplier.getAsBoolean()</target>
        </trans-unit>
        <trans-unit id="2dfeed6ef3cbd16db981638e61fb8e543a2d82f4" translate="yes" xml:space="preserve">
          <source>Bootstrap class loader. It is the virtual machine's built-in class loader, typically represented as &lt;code&gt;null&lt;/code&gt;, and does not have a parent.</source>
          <target state="translated">부트 스트랩 클래스 로더. 일반적으로 &lt;code&gt;null&lt;/code&gt; 로 표시되는 가상 머신의 기본 제공 클래스 로더이며 상위 항목이 없습니다.</target>
        </trans-unit>
        <trans-unit id="d4749b4f5c5be78fe9668dbe135dee74d12f9344" translate="yes" xml:space="preserve">
          <source>Bootstrap methods for dynamically-computed constants.</source>
          <target state="translated">동적으로 계산 된 상수에 대한 부트 스트랩 메서드.</target>
        </trans-unit>
        <trans-unit id="58202ca0e02ac0bedb3dcba2f247980f98785173" translate="yes" xml:space="preserve">
          <source>BootstrapMethodError</source>
          <target state="translated">BootstrapMethodError</target>
        </trans-unit>
        <trans-unit id="5d10d3f42121c3aa0d7923d1f05cccf56ef176e5" translate="yes" xml:space="preserve">
          <source>Border</source>
          <target state="translated">Border</target>
        </trans-unit>
        <trans-unit id="00b76ebe7142d5e4c57150f32cc098995e040062" translate="yes" xml:space="preserve">
          <source>Border for a Palette.</source>
          <target state="translated">팔레트의 테두리.</target>
        </trans-unit>
        <trans-unit id="3cea08c18255a403dd736851d275c3042c9d0d99" translate="yes" xml:space="preserve">
          <source>Border for a Table Header</source>
          <target state="translated">표 머리글 테두리</target>
        </trans-unit>
        <trans-unit id="1284d90ede4c046de15c4252800d8ab5cada2cc2" translate="yes" xml:space="preserve">
          <source>Border instances are designed to be shared. Rather than creating a new border object using one of border classes, use the BorderFactory methods, which produces a shared instance of the common border types.</source>
          <target state="translated">테두리 인스턴스는 공유되도록 설계되었습니다. 테두리 클래스 중 하나를 사용하여 새 테두리 개체를 만드는 대신 공통 테두리 유형의 공유 인스턴스를 생성하는 BorderFactory 메서드를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7f492ae2df61af896b38f31a280c57b28549bb2e" translate="yes" xml:space="preserve">
          <source>Border listener</source>
          <target state="translated">테두리 리스너</target>
        </trans-unit>
        <trans-unit id="ae6b6860e8b042985ef178d9fc29209d42254ab8" translate="yes" xml:space="preserve">
          <source>Border to use.</source>
          <target state="translated">사용할 테두리입니다.</target>
        </trans-unit>
        <trans-unit id="1d0793d5e15dc54dc74a4b97f82e24703ef88d71" translate="yes" xml:space="preserve">
          <source>BorderFactory</source>
          <target state="translated">BorderFactory</target>
        </trans-unit>
        <trans-unit id="a7c523103173fdff95f0ac435ef3373c8ec778c0" translate="yes" xml:space="preserve">
          <source>BorderLayout</source>
          <target state="translated">BorderLayout</target>
        </trans-unit>
        <trans-unit id="c8561f59d6860b507e99a7ca6c7aa2f5c568ffaf" translate="yes" xml:space="preserve">
          <source>BorderListener</source>
          <target state="translated">BorderListener</target>
        </trans-unit>
        <trans-unit id="7a98e796165de27b506d17c1b8df68a602236c4d" translate="yes" xml:space="preserve">
          <source>BorderUIResource</source>
          <target state="translated">BorderUIResource</target>
        </trans-unit>
        <trans-unit id="d6603988c69141898fd8503ac0e6967945bab9a1" translate="yes" xml:space="preserve">
          <source>BorderUIResource.BevelBorderUIResource</source>
          <target state="translated">BorderUIResource.BevelBorderUIResource</target>
        </trans-unit>
        <trans-unit id="2e89b602b1c3bc0cf5e02eccd5acb97da0208993" translate="yes" xml:space="preserve">
          <source>BorderUIResource.CompoundBorderUIResource</source>
          <target state="translated">BorderUIResource.CompoundBorderUIResource</target>
        </trans-unit>
        <trans-unit id="90955b262a093b6639444c2e3f33bbab5313df47" translate="yes" xml:space="preserve">
          <source>BorderUIResource.EmptyBorderUIResource</source>
          <target state="translated">BorderUIResource.EmptyBorderUIResource</target>
        </trans-unit>
        <trans-unit id="0fc3a5f8722b7a5a3e3f157957aad318caf419ea" translate="yes" xml:space="preserve">
          <source>BorderUIResource.EtchedBorderUIResource</source>
          <target state="translated">BorderUIResource.EtchedBorderUIResource</target>
        </trans-unit>
        <trans-unit id="8b5cb37b951049a963e15a4374c94fe9391186ba" translate="yes" xml:space="preserve">
          <source>BorderUIResource.LineBorderUIResource</source>
          <target state="translated">BorderUIResource.LineBorderUIResource</target>
        </trans-unit>
        <trans-unit id="dea7ff55d9616dcca3ab1e531e8e90f0f75376c0" translate="yes" xml:space="preserve">
          <source>BorderUIResource.MatteBorderUIResource</source>
          <target state="translated">BorderUIResource.MatteBorderUIResource</target>
        </trans-unit>
        <trans-unit id="6cc59feea32efc1b17c82065999b98d7141bf804" translate="yes" xml:space="preserve">
          <source>BorderUIResource.TitledBorderUIResource</source>
          <target state="translated">BorderUIResource.TitledBorderUIResource</target>
        </trans-unit>
        <trans-unit id="29ba42d4e15c33d81dde8a95447c33fef04cb96c" translate="yes" xml:space="preserve">
          <source>Both builder and &lt;code&gt;WebSocket&lt;/code&gt;s created with it operate in a non-blocking fashion. That is, their methods do not block before returning a &lt;code&gt;CompletableFuture&lt;/code&gt;. Asynchronous tasks are executed in this &lt;code&gt;HttpClient&lt;/code&gt;'s executor.</source>
          <target state="translated">빌더와 &lt;code&gt;WebSocket&lt;/code&gt; 은 모두 비 차단 방식으로 작동합니다. 즉, 해당 메서드는 &lt;code&gt;CompletableFuture&lt;/code&gt; 를 반환하기 전에 차단되지 않습니다 . 이 &lt;code&gt;HttpClient&lt;/code&gt; 실행 프로그램에서 비동기 작업이 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="5ad5f67ff8efcbbc82b98bc9c5990f42b67566df" translate="yes" xml:space="preserve">
          <source>Both compound names must have the same number of components.</source>
          <target state="translated">두 복합 이름 모두 동일한 수의 구성 요소를 가져야합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
