<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="46e51b0c32e8f5c5f1aae01079479fe8ba3d2617" translate="yes" xml:space="preserve">
          <source>Like a byte buffer, a short buffer is either &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; or &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt;. A short buffer created via the &lt;code&gt;wrap&lt;/code&gt; methods of this class will be non-direct. A short buffer created as a view of a byte buffer will be direct if, and only if, the byte buffer itself is direct. Whether or not a short buffer is direct may be determined by invoking the &lt;a href=&quot;shortbuffer#isDirect--&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">바이트 버퍼와 마찬가지로 짧은 버퍼는 &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; 또는 &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt; 입니다. 이 클래스 의 &lt;code&gt;wrap&lt;/code&gt; 메소드를 통해 작성된 짧은 버퍼 는 직접적이지 않습니다. 바이트 버퍼의 뷰로 생성 된 짧은 버퍼는 바이트 버퍼 자체가 직접 인 경우에만 직접적입니다. 짧은 버퍼가 직접인지 여부는 &lt;a href=&quot;shortbuffer#isDirect--&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 판별 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6b4673071f5125f061eafe340f45b0d6c23f4fe6" translate="yes" xml:space="preserve">
          <source>Like a byte buffer, an int buffer is either &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; or &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt;. A int buffer created via the &lt;code&gt;wrap&lt;/code&gt; methods of this class will be non-direct. An int buffer created as a view of a byte buffer will be direct if, and only if, the byte buffer itself is direct. Whether or not an int buffer is direct may be determined by invoking the &lt;a href=&quot;#isDirect()&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">바이트 버퍼와 마찬가지로 int 버퍼는 &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; 또는 &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt; 입니다. 이 클래스 의 &lt;code&gt;wrap&lt;/code&gt; 메소드를 통해 생성 된 int 버퍼 는 간접적입니다. 바이트 버퍼의 뷰로 생성 된 int 버퍼는 바이트 버퍼 자체가 직접적 일 경우에만 직접적입니다. int 버퍼가 직접인지 여부는 &lt;a href=&quot;#isDirect()&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하여 결정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="080a9fbd979183f26520dda0f64fd464f96c73ff" translate="yes" xml:space="preserve">
          <source>Like a byte buffer, an int buffer is either &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; or &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt;. A int buffer created via the &lt;code&gt;wrap&lt;/code&gt; methods of this class will be non-direct. An int buffer created as a view of a byte buffer will be direct if, and only if, the byte buffer itself is direct. Whether or not an int buffer is direct may be determined by invoking the &lt;a href=&quot;intbuffer#isDirect--&quot;&gt;&lt;code&gt;isDirect&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">바이트 버퍼와 마찬가지로 int 버퍼는 &lt;a href=&quot;bytebuffer#direct&quot;&gt;&lt;i&gt;direct&lt;/i&gt; 또는 &lt;i&gt;non-direct&lt;/i&gt;&lt;/a&gt; 입니다. 이 클래스 의 &lt;code&gt;wrap&lt;/code&gt; 메소드를 통해 작성된 int 버퍼 는 직접적이지 않습니다. 바이트 버퍼의 뷰로 생성 된 int 버퍼는 바이트 버퍼 자체가 직접 인 경우에만 직접 사용됩니다. int 버퍼가 직접인지 여부는 &lt;a href=&quot;intbuffer#isDirect--&quot;&gt; &lt;code&gt;isDirect&lt;/code&gt; &lt;/a&gt; 를 호출하여 확인할 수 있습니다. 메소드 .</target>
        </trans-unit>
        <trans-unit id="7b4f04cda8307be3b06f84651fd7d0eb7aaf74d0" translate="yes" xml:space="preserve">
          <source>Like all &lt;code&gt;JComponent&lt;/code&gt; classes, you can use &lt;a href=&quot;inputmap&quot;&gt;&lt;code&gt;InputMap&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;actionmap&quot;&gt;&lt;code&gt;ActionMap&lt;/code&gt;&lt;/a&gt; to associate an &lt;a href=&quot;action&quot;&gt;&lt;code&gt;Action&lt;/code&gt;&lt;/a&gt; object with a &lt;a href=&quot;keystroke&quot;&gt;&lt;code&gt;KeyStroke&lt;/code&gt;&lt;/a&gt; and execute the action under specified conditions.</source>
          <target state="translated">모든 &lt;code&gt;JComponent&lt;/code&gt; 클래스 와 마찬가지로 &lt;a href=&quot;inputmap&quot;&gt; &lt;code&gt;InputMap&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;actionmap&quot;&gt; &lt;code&gt;ActionMap&lt;/code&gt; &lt;/a&gt; 을 사용 하여 &lt;a href=&quot;action&quot;&gt; &lt;code&gt;Action&lt;/code&gt; &lt;/a&gt; 객체를 &lt;a href=&quot;keystroke&quot;&gt; &lt;code&gt;KeyStroke&lt;/code&gt; &lt;/a&gt; 와 연결하고 지정된 조건에서 작업을 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d6c817e1c4105574248876d56289dc9703162ed4" translate="yes" xml:space="preserve">
          <source>Like any &lt;a href=&quot;blockingqueue&quot;&gt;&lt;code&gt;BlockingQueue&lt;/code&gt;&lt;/a&gt;, a &lt;code&gt;BlockingDeque&lt;/code&gt; is thread safe, does not permit null elements, and may (or may not) be capacity-constrained.</source>
          <target state="translated">어떤처럼 &lt;a href=&quot;blockingqueue&quot;&gt; &lt;code&gt;BlockingQueue&lt;/code&gt; 를&lt;/a&gt; 하는 &lt;code&gt;BlockingDeque&lt;/code&gt; 를 널 요소를 허가하지 않는 스레드 안전 및 (또는되지 않을 수 있음), 용량 제한 될 수있다.</target>
        </trans-unit>
        <trans-unit id="b5235b510f5b65171cb0feefa6180ab894209265" translate="yes" xml:space="preserve">
          <source>Like any operation of a dynamic MBean, each of these operations is described by &lt;a href=&quot;../../../../java.management/javax/management/mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt; instance. Here's the values returned by this object:</source>
          <target state="translated">동적 MBean의 모든 작업과 마찬가지로 이러한 각 작업은 &lt;a href=&quot;../../../../java.management/javax/management/mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; &lt;/a&gt; 인스턴스에 의해 설명됩니다 . 이 개체가 반환하는 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="8d49a815189915d94a34aa00963acef839e2f53c" translate="yes" xml:space="preserve">
          <source>Like block except that it's expected that the element will be used with a paragraph view so a paragraph element won't need to be synthesized.</source>
          <target state="translated">요소가 단락보기와 함께 사용될 것으로 예상된다는 점을 제외하면 블록과 유사하므로 단락 요소를 합성 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="910ff13b4b091187420e274b10b9dca9b7e4fa9b" translate="yes" xml:space="preserve">
          <source>Like classes and strings, method handles that correspond to accessible fields, methods, and constructors can also be represented directly in a class file's constant pool as constants to be loaded by &lt;code&gt;ldc&lt;/code&gt; bytecodes. A new type of constant pool entry, &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt;, refers directly to an associated &lt;code&gt;CONSTANT_Methodref&lt;/code&gt;, &lt;code&gt;CONSTANT_InterfaceMethodref&lt;/code&gt;, or &lt;code&gt;CONSTANT_Fieldref&lt;/code&gt; constant pool entry. (For full details on method handle constants, see sections 4.4.8 and 5.4.3.5 of the Java Virtual Machine Specification.)</source>
          <target state="translated">클래스 및 문자열과 같이 액세스 가능한 필드, 메서드 및 생성자에 해당하는 메서드 핸들은 클래스 파일의 상수 풀에서 &lt;code&gt;ldc&lt;/code&gt; 바이트 코드에 의해로드되는 상수로 직접 표시 될 수도 있습니다 . 새로운 유형의 상수 풀 항목 인 &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; 은 연관된 &lt;code&gt;CONSTANT_Methodref&lt;/code&gt; , &lt;code&gt;CONSTANT_InterfaceMethodref&lt;/code&gt; 또는 &lt;code&gt;CONSTANT_Fieldref&lt;/code&gt; 상수 풀 항목을 직접 참조합니다 . (메소드 핸들 상수에 대한 자세한 내용은 Java Virtual Machine Specification의 4.4.8 및 5.4.3.5 단원을 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="ed624ec4b5ee5c687a17e062dbe3cb35f295f05f" translate="yes" xml:space="preserve">
          <source>Like classes and strings, method handles that correspond to accessible fields, methods, and constructors can also be represented directly in a class file's constant pool as constants to be loaded by &lt;code&gt;ldc&lt;/code&gt; bytecodes. A new type of constant pool entry, &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt;, refers directly to an associated &lt;code&gt;CONSTANT_Methodref&lt;/code&gt;, &lt;code&gt;CONSTANT_InterfaceMethodref&lt;/code&gt;, or &lt;code&gt;CONSTANT_Fieldref&lt;/code&gt; constant pool entry. (For full details on method handle constants, see sections &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.4.8&quot;&gt;4.4.8&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.4.3.5&quot;&gt;5.4.3.5&lt;/a&gt; of the Java Virtual Machine Specification.)</source>
          <target state="translated">클래스 및 문자열과 마찬가지로 액세스 가능한 필드, 메서드 및 생성자에 해당하는 메서드 핸들은 &lt;code&gt;ldc&lt;/code&gt; 바이트 코드에 의해로드되는 상수로 클래스 파일의 상수 풀에서 직접 표현 될 수도 있습니다 . 새로운 유형의 상수 풀 항목 인 &lt;code&gt;CONSTANT_MethodHandle&lt;/code&gt; 은 연관된 &lt;code&gt;CONSTANT_Methodref&lt;/code&gt; , &lt;code&gt;CONSTANT_InterfaceMethodref&lt;/code&gt; 또는 &lt;code&gt;CONSTANT_Fieldref&lt;/code&gt; 상수 풀 항목을 직접 참조합니다 . (메소드 핸들 상수에 대한 자세한 내용 은 Java Virtual Machine 사양의 섹션 &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.4.8&quot;&gt;4.4.8&lt;/a&gt; 및 &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.4.3.5&quot;&gt;5.4.3.5&lt;/a&gt; 를 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="a7cb7bdbff492c8b5f7b52724a21bad0d563fb6d" translate="yes" xml:space="preserve">
          <source>Like classes and strings, method types can also be represented directly in a class file's constant pool as constants. A method type may be loaded by an &lt;code&gt;ldc&lt;/code&gt; instruction which refers to a suitable &lt;code&gt;CONSTANT_MethodType&lt;/code&gt; constant pool entry. The entry refers to a &lt;code&gt;CONSTANT_Utf8&lt;/code&gt; spelling for the descriptor string. (For full details on method type constants, see sections 4.4.8 and 5.4.3.5 of the Java Virtual Machine Specification.)</source>
          <target state="translated">클래스 및 문자열과 마찬가지로 메소드 유형은 클래스 파일의 상수 풀에서 상수로 직접 표현 될 수도 있습니다. 적절한 &lt;code&gt;CONSTANT_MethodType&lt;/code&gt; 상수 풀 항목 을 참조 하는 &lt;code&gt;ldc&lt;/code&gt; 명령 으로 메소드 유형을로드 할 수 있습니다 . 항목은 &lt;code&gt;CONSTANT_Utf8&lt;/code&gt; 을 나타냅니다. 설명자 문자열에 대한 철자를 . (메소드 유형 상수에 대한 자세한 내용은 Java Virtual Machine Specification의 4.4.8 및 5.4.3.5 섹션을 참조하십시오.)</target>
        </trans-unit>
        <trans-unit id="a566d0e56339ab18a77f2fa353cdb54e61a8b799" translate="yes" xml:space="preserve">
          <source>Like classes and strings, method types can also be represented directly in a class file's constant pool as constants. A method type may be loaded by an &lt;code&gt;ldc&lt;/code&gt; instruction which refers to a suitable &lt;code&gt;CONSTANT_MethodType&lt;/code&gt; constant pool entry. The entry refers to a &lt;code&gt;CONSTANT_Utf8&lt;/code&gt; spelling for the descriptor string. (For full details on method type constants, see sections &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.4.8&quot;&gt;4.4.8&lt;/a&gt; and &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.4.3.5&quot;&gt;5.4.3.5&lt;/a&gt; of the Java Virtual Machine Specification.)</source>
          <target state="translated">클래스 및 문자열과 마찬가지로 메서드 유형은 클래스 파일의 상수 풀에서 상수로 직접 표현 될 수도 있습니다. 메소드 유형은 적합한 &lt;code&gt;CONSTANT_MethodType&lt;/code&gt; 상수 풀 항목 을 참조 하는 &lt;code&gt;ldc&lt;/code&gt; 명령어에 의해로드 될 수 있습니다 . 항목은 설명자 문자열에 대한 &lt;code&gt;CONSTANT_Utf8&lt;/code&gt; 철자를 참조 합니다. (메소드 유형 상수에 대한 자세한 내용 은 Java Virtual Machine 사양의 섹션 &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.4.8&quot;&gt;4.4.8&lt;/a&gt; 및 &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.4.3.5&quot;&gt;5.4.3.5&lt;/a&gt; 를 참조하십시오 .)</target>
        </trans-unit>
        <trans-unit id="240f63a003ec483324f9a5ea4f99f30a77463061" translate="yes" xml:space="preserve">
          <source>Like environment properties, connection request controls of a context &lt;em&gt;are inherited&lt;/em&gt; by contexts that are derived from it. Typically, you initialize the connection request controls using the &lt;code&gt;InitialLdapContext&lt;/code&gt; constructor or &lt;code&gt;LdapReferralContext.getReferralContext()&lt;/code&gt;. These connection request controls are inherited by contexts that share the same connection--that is, contexts derived from the initial or referral contexts.</source>
          <target state="translated">환경 속성과 마찬가지로 컨텍스트의 연결 요청 컨트롤은 해당 컨텍스트 에서 파생 된 컨텍스트에 의해 &lt;em&gt;상속&lt;/em&gt; 됩니다. 일반적으로 &lt;code&gt;InitialLdapContext&lt;/code&gt; 생성자 또는 &lt;code&gt;LdapReferralContext.getReferralContext()&lt;/code&gt; 사용하여 연결 요청 제어를 초기화합니다 . 이러한 연결 요청 제어는 동일한 연결을 공유하는 컨텍스트, 즉 초기 또는 참조 컨텍스트에서 파생 된 컨텍스트에 의해 상속됩니다.</target>
        </trans-unit>
        <trans-unit id="e41795338245914581d48d4cca69d65b5f303630" translate="yes" xml:space="preserve">
          <source>Like most collection classes, this class is not synchronized. A synchronized &lt;code&gt;WeakHashMap&lt;/code&gt; may be constructed using the &lt;a href=&quot;collections#synchronizedMap(java.util.Map)&quot;&gt;&lt;code&gt;Collections.synchronizedMap&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">대부분의 컬렉션 클래스와 마찬가지로이 클래스는 동기화되지 않습니다. 동기화 된 &lt;code&gt;WeakHashMap&lt;/code&gt; 은 &lt;a href=&quot;collections#synchronizedMap(java.util.Map)&quot;&gt; &lt;code&gt;Collections.synchronizedMap&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6e4487bf82d573768e63b4c8eba15154fe137be9" translate="yes" xml:space="preserve">
          <source>Like most collection classes, this class is not synchronized. A synchronized &lt;code&gt;WeakHashMap&lt;/code&gt; may be constructed using the &lt;a href=&quot;collections#synchronizedMap-java.util.Map-&quot;&gt;&lt;code&gt;Collections.synchronizedMap&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">대부분의 컬렉션 클래스와 마찬가지로이 클래스는 동기화되지 않습니다. 동기화 된 &lt;code&gt;WeakHashMap&lt;/code&gt; 은 &lt;a href=&quot;collections#synchronizedMap-java.util.Map-&quot;&gt; &lt;code&gt;Collections.synchronizedMap&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 구성 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dbf309de912bc98d67e16c61f88f5b50dd61d6f5" translate="yes" xml:space="preserve">
          <source>Like most collection implementations &lt;code&gt;EnumMap&lt;/code&gt; is not synchronized. If multiple threads access an enum map concurrently, and at least one of the threads modifies the map, it should be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the enum map. If no such object exists, the map should be &quot;wrapped&quot; using the &lt;a href=&quot;collections#synchronizedMap(java.util.Map)&quot;&gt;&lt;code&gt;Collections.synchronizedMap(java.util.Map&amp;lt;K, V&amp;gt;)&lt;/code&gt;&lt;/a&gt; method. This is best done at creation time, to prevent accidental unsynchronized access:</source>
          <target state="translated">대부분의 컬렉션 구현과 마찬가지로 &lt;code&gt;EnumMap&lt;/code&gt; 은 동기화되지 않습니다. 여러 스레드가 동시에 열거 형 맵에 액세스하고 스레드 중 하나 이상이 맵을 수정하는 경우 외부에서 동기화해야합니다. 이는 일반적으로 enum 맵을 자연스럽게 캡슐화하는 일부 객체에서 동기화하여 수행됩니다. 이러한 객체가 없으면 &lt;a href=&quot;collections#synchronizedMap(java.util.Map)&quot;&gt; &lt;code&gt;Collections.synchronizedMap(java.util.Map&amp;lt;K, V&amp;gt;)&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 맵을 &quot;래핑&quot;해야합니다 . 이는 실수로 동기화되지 않은 액세스를 방지하기 위해 생성시 가장 잘 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="399614ced5707b8e6b8c48cd847188071e48d8bf" translate="yes" xml:space="preserve">
          <source>Like most collection implementations &lt;code&gt;EnumMap&lt;/code&gt; is not synchronized. If multiple threads access an enum map concurrently, and at least one of the threads modifies the map, it should be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the enum map. If no such object exists, the map should be &quot;wrapped&quot; using the &lt;a href=&quot;collections#synchronizedMap-java.util.Map-&quot;&gt;&lt;code&gt;Collections.synchronizedMap(java.util.Map&amp;lt;K, V&amp;gt;)&lt;/code&gt;&lt;/a&gt; method. This is best done at creation time, to prevent accidental unsynchronized access:</source>
          <target state="translated">대부분의 컬렉션 구현과 마찬가지로 &lt;code&gt;EnumMap&lt;/code&gt; 은 동기화되지 않습니다. 여러 스레드가 동시에 열거 형 맵에 액세스하고 하나 이상의 스레드가 맵을 수정하는 경우 외부 적으로 동기화되어야합니다. 이것은 일반적으로 열거 형 맵을 자연스럽게 캡슐화하는 일부 객체를 동기화하여 수행됩니다. 그러한 오브젝트가 존재하지 않는 경우는 &lt;a href=&quot;collections#synchronizedMap-java.util.Map-&quot;&gt; &lt;code&gt;Collections.synchronizedMap(java.util.Map&amp;lt;K, V&amp;gt;)&lt;/code&gt; &lt;/a&gt; 메소드를 사용해 맵을 랩 해주세요 . 우발적 인 비동기 액세스를 방지하기 위해 생성시 가장 잘 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="c207198b516ac4e45afaa21f88641b24af099a20" translate="yes" xml:space="preserve">
          <source>Like most collection implementations, &lt;code&gt;EnumSet&lt;/code&gt; is not synchronized. If multiple threads access an enum set concurrently, and at least one of the threads modifies the set, it should be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the enum set. If no such object exists, the set should be &quot;wrapped&quot; using the &lt;a href=&quot;collections#synchronizedSet(java.util.Set)&quot;&gt;&lt;code&gt;Collections.synchronizedSet(java.util.Set&amp;lt;T&amp;gt;)&lt;/code&gt;&lt;/a&gt; method. This is best done at creation time, to prevent accidental unsynchronized access:</source>
          <target state="translated">대부분의 컬렉션 구현과 마찬가지로 &lt;code&gt;EnumSet&lt;/code&gt; 은 동기화되지 않습니다. 여러 스레드가 동시에 열거 세트에 액세스하고 스레드 중 하나 이상이 세트를 수정하는 경우 외부에서 동기화되어야합니다. 이것은 일반적으로 enum 집합을 자연스럽게 캡슐화하는 일부 개체에서 동기화하여 수행됩니다. 이러한 개체가 없으면 &lt;a href=&quot;collections#synchronizedSet(java.util.Set)&quot;&gt; &lt;code&gt;Collections.synchronizedSet(java.util.Set&amp;lt;T&amp;gt;)&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 집합을 &quot;래핑&quot;해야합니다 . 이는 실수로 동기화되지 않은 액세스를 방지하기 위해 생성시 가장 잘 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="d43decb755ca5fa78264a9b628d4765c8e39561c" translate="yes" xml:space="preserve">
          <source>Like most collection implementations, &lt;code&gt;EnumSet&lt;/code&gt; is not synchronized. If multiple threads access an enum set concurrently, and at least one of the threads modifies the set, it should be synchronized externally. This is typically accomplished by synchronizing on some object that naturally encapsulates the enum set. If no such object exists, the set should be &quot;wrapped&quot; using the &lt;a href=&quot;collections#synchronizedSet-java.util.Set-&quot;&gt;&lt;code&gt;Collections.synchronizedSet(java.util.Set&amp;lt;T&amp;gt;)&lt;/code&gt;&lt;/a&gt; method. This is best done at creation time, to prevent accidental unsynchronized access:</source>
          <target state="translated">대부분의 컬렉션 구현과 마찬가지로 &lt;code&gt;EnumSet&lt;/code&gt; 은 동기화되지 않습니다. 여러 스레드가 동시에 열거 집합에 액세스하고 하나 이상의 스레드가 집합을 수정하는 경우 외부에서 동기화되어야합니다. 이것은 일반적으로 열거 세트를 자연스럽게 캡슐화하는 일부 객체를 동기화하여 수행됩니다. 그러한 오브젝트가 존재하지 않는 경우는 &lt;a href=&quot;collections#synchronizedSet-java.util.Set-&quot;&gt; &lt;code&gt;Collections.synchronizedSet(java.util.Set&amp;lt;T&amp;gt;)&lt;/code&gt; &lt;/a&gt; 메소드를 사용해 세트를 &quot;랩&quot;할 필요가 있습니다 . 우발적 인 비동기 액세스를 방지하기 위해 생성시 가장 잘 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="be7078d8fe7c7850e5fd68efccc46a2ac2813c6f" translate="yes" xml:space="preserve">
          <source>Like most connectors in the JMX Remote API, an RMI connector usually has an address, which is a &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt;. The protocol part of this address is &lt;code&gt;rmi&lt;/code&gt; for a connector that uses the default RMI transport (JRMP).</source>
          <target state="translated">JMX Remote API의 대부분의 커넥터와 마찬가지로 RMI 커넥터에는 일반적으로 &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; &lt;/a&gt; 주소가 있습니다. 이 주소의 프로토콜 부분은 기본 RMI 전송 (JRMP)을 사용하는 커넥터의 &lt;code&gt;rmi&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5429500f165837f3cc2515056849bdb877f82560" translate="yes" xml:space="preserve">
          <source>Like most connectors in the JMX Remote API, an RMI connector usually has an address, which is a &lt;a href=&quot;../jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt;. The protocol part of this address is &lt;code&gt;rmi&lt;/code&gt; for a connector that uses the default RMI transport (JRMP), or &lt;code&gt;iiop&lt;/code&gt; for a connector that uses RMI/IIOP.</source>
          <target state="translated">JMX Remote API의 대부분의 커넥터와 마찬가지로 RMI 커넥터에는 일반적으로 &lt;a href=&quot;../jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; 인&lt;/a&gt; 주소가 있습니다. 이 주소의 프로토콜 부분은 기본 RMI 전송 (JRMP)을 사용하는 커넥터의 경우 &lt;code&gt;rmi&lt;/code&gt; 이거나 RMI / IIOP를 사용하는 커넥터의 경우 &lt;code&gt;iiop&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0405492e967eac57e79d071aff40577fc502aee3" translate="yes" xml:space="preserve">
          <source>Like other blocking queues, a &lt;code&gt;TransferQueue&lt;/code&gt; may be capacity bounded. If so, an attempted transfer operation may initially block waiting for available space, and/or subsequently block waiting for reception by a consumer. Note that in a queue with zero capacity, such as &lt;a href=&quot;synchronousqueue&quot;&gt;&lt;code&gt;SynchronousQueue&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;put&lt;/code&gt; and &lt;code&gt;transfer&lt;/code&gt; are effectively synonymous.</source>
          <target state="translated">다른 블로킹 큐와 마찬가지로 &lt;code&gt;TransferQueue&lt;/code&gt; 는 용량이 제한 될 수 있습니다. 만약 그렇다면, 시도 된 전송 동작은 초기에 이용 가능한 공간을 기다리는 것을 차단하고 그리고 / 또는 소비자에 의한 수신을 기다리는 것을 차단할 수있다. &lt;a href=&quot;synchronousqueue&quot;&gt; &lt;code&gt;SynchronousQueue&lt;/code&gt; &lt;/a&gt; 와 같이 용량이 0 인 큐 에서 &lt;code&gt;put&lt;/code&gt; 및 &lt;code&gt;transfer&lt;/code&gt; 은 사실상 동의어입니다.</target>
        </trans-unit>
        <trans-unit id="0880efd58dab13bc824d3ca3268aa962fe904ea0" translate="yes" xml:space="preserve">
          <source>Like other locale-sensitive classes, &lt;code&gt;Calendar&lt;/code&gt; provides a class method, &lt;code&gt;getInstance&lt;/code&gt;, for getting a generally useful object of this type. &lt;code&gt;Calendar&lt;/code&gt;'s &lt;code&gt;getInstance&lt;/code&gt; method returns a &lt;code&gt;Calendar&lt;/code&gt; object whose calendar fields have been initialized with the current date and time:</source>
          <target state="translated">다른 로케일 구분 클래스와 마찬가지로 &lt;code&gt;Calendar&lt;/code&gt; 는 이 유형의 일반적으로 유용한 객체를 가져 오기위한 클래스 메소드 인 &lt;code&gt;getInstance&lt;/code&gt; 를 제공합니다 . &lt;code&gt;Calendar&lt;/code&gt; 의 &lt;code&gt;getInstance&lt;/code&gt; 메소드는 달력 필드가 현재 날짜 및 시간으로 초기화 된 &lt;code&gt;Calendar&lt;/code&gt; 객체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="2a0094711231f693a7d19e1040142aba17ce7036" translate="yes" xml:space="preserve">
          <source>Like other locale-sensitive classes, you can use the static factory method, &lt;code&gt;getInstance&lt;/code&gt;, to obtain the appropriate &lt;code&gt;Collator&lt;/code&gt; object for a given locale. You will only need to look at the subclasses of &lt;code&gt;Collator&lt;/code&gt; if you need to understand the details of a particular collation strategy or if you need to modify that strategy.</source>
          <target state="translated">다른 로케일 구분 클래스와 마찬가지로 정적 팩토리 메소드 인 &lt;code&gt;getInstance&lt;/code&gt; 를 사용하여 지정된 로케일에 적합한 &lt;code&gt;Collator&lt;/code&gt; 오브젝트 를 얻을 수 있습니다. 특정 데이터 정렬 전략의 세부 사항을 이해해야하거나 해당 전략을 수정해야하는 경우 &lt;code&gt;Collator&lt;/code&gt; 의 서브 클래스 만 살펴 봐야합니다 .</target>
        </trans-unit>
        <trans-unit id="3d7b3d2b8c0527b90af242c511fdd4e5a0c05d46" translate="yes" xml:space="preserve">
          <source>Like socket factories, server Socket factory instances have methods used to create sockets. There is also an environment specific default server socket factory; frameworks will often use their own customized factory.</source>
          <target state="translated">소켓 팩토리와 마찬가지로 서버 소켓 팩토리 인스턴스에는 소켓을 작성하는 데 사용되는 메소드가 있습니다. 환경 특정 기본 서버 소켓 팩토리도 있습니다. 프레임 워크는 종종 자체 맞춤형 공장을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="71b435e2aa73addc2898a6bf2c95323d41c05dd7" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;#matches()&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method, this method always starts at the beginning of the region; unlike that method, it does not require that the entire region be matched.</source>
          <target state="translated">&lt;a href=&quot;#matches()&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt; 메서드 와 마찬가지로이 메서드는 항상 영역의 시작 부분에서 시작합니다. 이 방법과 달리 전체 영역을 일치시킬 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="21ddbb223a4f0c26fa5a0a5dbeeb4bb956d390f3" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;#toArray()&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;#toArray()&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메서드 와 마찬가지로이 메서드는 배열 기반 API와 컬렉션 기반 API 사이의 다리 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a87de3460112cd4942a0b0dcc051838e0f3ca4b" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;../collection#toArray--&quot;&gt;&lt;code&gt;Collection.toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;../collection#toArray--&quot;&gt; &lt;code&gt;Collection.toArray()&lt;/code&gt; &lt;/a&gt; 메서드 와 마찬가지로이 메서드는 배열 기반 API와 컬렉션 기반 API 간의 브리지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a938cbb173fa07644bd5c108d4fc4ab8afc47dec" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;arrayblockingqueue#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;arrayblockingqueue#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3b4e9043a36aa53532138e4d7d3d8e4d540f8be0" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;arraydeque#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;arraydeque#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2412248ac5ac2d916709930629e9e549acde7db3" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;collection#toArray--&quot;&gt;&lt;code&gt;Collection.toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;collection#toArray--&quot;&gt; &lt;code&gt;Collection.toArray()&lt;/code&gt; &lt;/a&gt; 메서드 와 마찬가지로이 메서드는 배열 기반 API와 컬렉션 기반 API 간의 브리지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3f9fa895a1d3cd24f7703a53c7f5458d79dbdfdf" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;collection#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;collection#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="298ebaedc509493df413defd50d08d516a684b34" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;concurrentlinkeddeque#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;concurrentlinkeddeque#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e9fcc4c451f51211a43dc13cd7e3a8a35bb3a6b" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;concurrentlinkedqueue#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;concurrentlinkedqueue#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f924712492fccae7f052df188c37183a4c1a5f0f" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;copyonwritearraylist#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;copyonwritearraylist#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="62334731ec6eebdcc442e0bdd68bcc201bd24db4" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;copyonwritearrayset#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;copyonwritearrayset#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57cabfba9ecb4c88150dc1fa130f1b56adfd69ae" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;delayqueue#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;delayqueue#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7b732dcf1343abee83a37119e2a05f3298f17d04" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;linkedblockingdeque#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;linkedblockingdeque#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6131069917e6bc7e5bf2a7a9fa94ec95649056f" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;linkedblockingqueue#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;linkedblockingqueue#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3a9474609ae67350c522ec1d068663b19fe3d8f" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;linkedlist#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;linkedlist#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fcb0bf7f8df7d4a3b0f8f42664cc903319eb97a6" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;list#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;list#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86fc895338a3933faf358303628afb15a24acec0" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;matcher#matches--&quot;&gt;&lt;code&gt;matches&lt;/code&gt;&lt;/a&gt; method, this method always starts at the beginning of the region; unlike that method, it does not require that the entire region be matched.</source>
          <target state="translated">&lt;a href=&quot;matcher#matches--&quot;&gt; &lt;code&gt;matches&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 항상 영역의 시작 부분에서 시작합니다. 이 방법과 달리 전체 지역을 일치시킬 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="45865f44d4099df0cde9e28d38c781dad3c04c46" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;priorityblockingqueue#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;priorityblockingqueue#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c91fe96787a8cb46cc07d6ff725602082e321b20" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;priorityqueue#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;priorityqueue#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9fad3d6cc7fd0f7213dd4e8b0d54f739ebc85c39" translate="yes" xml:space="preserve">
          <source>Like the &lt;a href=&quot;set#toArray--&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; method, this method acts as bridge between array-based and collection-based APIs. Further, this method allows precise control over the runtime type of the output array, and may, under certain circumstances, be used to save allocation costs.</source>
          <target state="translated">&lt;a href=&quot;set#toArray--&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 메소드 와 마찬가지로이 메소드는 배열 기반 API와 콜렉션 기반 API 간의 브릿지 역할을합니다. 또한이 방법을 사용하면 출력 배열의 런타임 유형을 정확하게 제어 할 수 있으며 특정 상황에서 할당 비용을 절약하는 데 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5309486a6f43c715f7988ceb202be9ea143542ad" translate="yes" xml:space="preserve">
          <source>Like the &lt;code&gt;insertNodeInto&lt;/code&gt; method in the &lt;code&gt;DefaultTreeModel&lt;/code&gt; class, &lt;code&gt;insertElementAt&lt;/code&gt; appends to the &lt;code&gt;Vector&lt;/code&gt; when the index matches the size of the vector. So you can use &lt;code&gt;insertElementAt(Integer, 0)&lt;/code&gt; even when the vector is empty.</source>
          <target state="translated">&lt;code&gt;DefaultTreeModel&lt;/code&gt; 클래스 의 &lt;code&gt;insertNodeInto&lt;/code&gt; 메서드 와 마찬가지로 &lt;code&gt;insertElementAt&lt;/code&gt; 은 인덱스가 벡터의 크기와 일치 할 때 &lt;code&gt;Vector&lt;/code&gt; 에 추가됩니다 . 따라서 벡터가 비어있는 경우에도 &lt;code&gt;insertElementAt(Integer, 0)&lt;/code&gt; 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="82554899eeef235659854dd41f98a70ce5644ff6" translate="yes" xml:space="preserve">
          <source>Like the above techniques this class holds an array of N integers internally but uses a hybrid encoding, which is halfway between the size-based and positional-based approaches. The result is a data structure that takes the same space to store the information but can perform most operations in Log(N) time instead of O(N), where N is the number of entries in the list.</source>
          <target state="translated">위의 기술과 같이이 클래스는 내부적으로 N 개의 정수 배열을 보유하지만 크기 기반 접근 방식과 위치 기반 접근 방식의 중간 인 하이브리드 인코딩을 사용합니다. 결과는 정보를 저장하는 데 동일한 공간을 사용하지만 대부분의 작업을 O (N) 대신 Log (N) 시간에 수행 할 수있는 데이터 구조입니다. 여기서 N은 목록의 항목 수입니다.</target>
        </trans-unit>
        <trans-unit id="0dc7d93d9dc634812d67fd5f4c30c5f5727d4f29" translate="yes" xml:space="preserve">
          <source>Like the backing map, the &lt;code&gt;Map.Entry&lt;/code&gt; objects in the set returned by this method define key and value equality as reference-equality rather than object-equality. This affects the behavior of the &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; methods of these &lt;code&gt;Map.Entry&lt;/code&gt; objects. A reference-equality based &lt;code&gt;Map.Entry
 e&lt;/code&gt; is equal to an object &lt;code&gt;o&lt;/code&gt; if and only if &lt;code&gt;o&lt;/code&gt; is a &lt;code&gt;Map.Entry&lt;/code&gt; and &lt;code&gt;e.getKey()==o.getKey() &amp;amp;&amp;amp;
 e.getValue()==o.getValue()&lt;/code&gt;. To accommodate these equals semantics, the &lt;code&gt;hashCode&lt;/code&gt; method returns &lt;code&gt;System.identityHashCode(e.getKey()) ^
 System.identityHashCode(e.getValue())&lt;/code&gt;.</source>
          <target state="translated">지원지도와 마찬가지로이 메소드에 의해 반환 된 집합 의 &lt;code&gt;Map.Entry&lt;/code&gt; 객체는 키와 값 평등을 객체 평등이 아닌 참조 평등으로 정의합니다. 이는 이러한 &lt;code&gt;Map.Entry&lt;/code&gt; 객체 의 &lt;code&gt;equals&lt;/code&gt; 및 &lt;code&gt;hashCode&lt;/code&gt; 메서드 동작에 영향을줍니다 . 참조 평등 기반 &lt;code&gt;Map.Entry e&lt;/code&gt; 는 &lt;code&gt;o&lt;/code&gt; 가 &lt;code&gt;Map.Entry&lt;/code&gt; 이고 &lt;code&gt;e.getKey()==o.getKey() &amp;amp;&amp;amp; e.getValue()==o.getValue()&lt;/code&gt; 경우에만 객체 &lt;code&gt;o&lt;/code&gt; 와 같습니다. ) . 이러한 &lt;code&gt;System.identityHashCode(e.getKey()) ^ System.identityHashCode(e.getValue())&lt;/code&gt; 의미를 수용하기 위해 &lt;code&gt;hashCode&lt;/code&gt; 메소드는 System.identityHashCode (e.getKey ()) ^ System.identityHashCode (e.getValue ())를 리턴 합니다.</target>
        </trans-unit>
        <trans-unit id="89a9ae0c8778fc3e322a919a538ae5b7fe1123d2" translate="yes" xml:space="preserve">
          <source>Likewise, a suppressed exception can have a cause:</source>
          <target state="translated">마찬가지로, 억제 된 예외는 원인이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34d035f6e36568d5ecba9fb448d7bbfc07310b63" translate="yes" xml:space="preserve">
          <source>Likewise, if &lt;code&gt;T&lt;/code&gt; or &lt;code&gt;MT&lt;/code&gt; is not symbolically accessible from the lookup class's loader, the lookup can still succeed. For example, lookups for &lt;code&gt;MethodHandle.invokeExact&lt;/code&gt; and &lt;code&gt;MethodHandle.invoke&lt;/code&gt; will always succeed, regardless of requested type.</source>
          <target state="translated">마찬가지로, 조회 클래스의 로더에서 &lt;code&gt;T&lt;/code&gt; 또는 &lt;code&gt;MT&lt;/code&gt; 에 기호로 액세스 할 수없는 경우 에도 조회가 성공할 수 있습니다. 예를 들어 &lt;code&gt;MethodHandle.invokeExact&lt;/code&gt; 및 &lt;code&gt;MethodHandle.invoke&lt;/code&gt; 에 대한 조회 는 요청 된 유형에 관계없이 항상 성공합니다.</target>
        </trans-unit>
        <trans-unit id="f418d477f7b685e4b17ea2ab1d113ddf4243f779" translate="yes" xml:space="preserve">
          <source>Likewise, parsing with a &lt;code&gt;MessageFormat&lt;/code&gt; object using patterns containing multiple occurrences of the same argument would return the last match. For example,</source>
          <target state="translated">마찬가지로, 동일한 인수가 여러 번 포함 된 패턴을 사용하여 &lt;code&gt;MessageFormat&lt;/code&gt; 객체로 구문 분석 하면 마지막 일치 항목이 반환됩니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="256b23d1240d2a8778c8bf44a0d694ba5e61bc0e" translate="yes" xml:space="preserve">
          <source>Likewise, the parameter list of &lt;code&gt;end&lt;/code&gt; must be effectively identical to the external parameter list.</source>
          <target state="translated">마찬가지로 &lt;code&gt;end&lt;/code&gt; 의 매개 변수 목록은 외부 매개 변수 목록과 사실상 동일해야합니다.</target>
        </trans-unit>
        <trans-unit id="24d948e4bdbe5b8224bbc0dfbab1923fab00b98e" translate="yes" xml:space="preserve">
          <source>Limit</source>
          <target state="translated">Limit</target>
        </trans-unit>
        <trans-unit id="7bf0ce9512b5fd591a792aacddfd46119dbf5e99" translate="yes" xml:space="preserve">
          <source>Limit determines the maximum or minimum amount by which the glyph can change. Left and right sides of the glyph can have different limits.</source>
          <target state="translated">제한은 글리프가 변경할 수있는 최대 또는 최소 양을 결정합니다. 글리프의 왼쪽과 오른쪽에는 다른 제한이있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e712ca978ec2ed20136ffe0f5a4d5fac7f5f30bb" translate="yes" xml:space="preserve">
          <source>Limit the requested event to be reported at most once after a given number of occurrences.</source>
          <target state="translated">요청 된 이벤트가 주어진 발생 횟수 후에 최대 한 번보고되도록 제한합니다.</target>
        </trans-unit>
        <trans-unit id="0cc555cf40d3831c1351921f0a12e9c379c26a76" translate="yes" xml:space="preserve">
          <source>Limit the requested event to be reported at most once after a given number of occurrences. The event is not reported the first &lt;code&gt;count - 1&lt;/code&gt; times this filter is reached. To request a one-off event, call this method with a count of 1.</source>
          <target state="translated">요청 된 이벤트가 주어진 발생 횟수 후에 최대 한 번보고되도록 제한합니다. 이벤트는 첫 번째 &lt;code&gt;count - 1&lt;/code&gt; 보고되지 않습니다 .이 필터에 1 회 도달했습니다. 일회성 이벤트를 요청하려면 1의 개수를 사용하여이 메서드를 호출해야합니다. ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ</target>
        </trans-unit>
        <trans-unit id="d6bf6451f1e7f515be086e47cf39ff6a4bc80a3e" translate="yes" xml:space="preserve">
          <source>LimitExceededException</source>
          <target state="translated">LimitExceededException</target>
        </trans-unit>
        <trans-unit id="ea9676003762818513c636984faeaa0ae356839a" translate="yes" xml:space="preserve">
          <source>Line</source>
          <target state="translated">Line</target>
        </trans-unit>
        <trans-unit id="8063848dd725bd56f98d4d78213b9bcdc4a7dc13" translate="yes" xml:space="preserve">
          <source>Line Separator</source>
          <target state="translated">선 구분자</target>
        </trans-unit>
        <trans-unit id="eb139fd278adbcec100f27124aa9ca974e374402" translate="yes" xml:space="preserve">
          <source>Line and column numbers begin at 1. Negative values (except &lt;a href=&quot;#NOPOS&quot;&gt;&lt;code&gt;NOPOS&lt;/code&gt;&lt;/a&gt;) and 0 are not valid line or column numbers.</source>
          <target state="translated">행 및 열 번호는 1에서 시작합니다. 음수 값 ( &lt;a href=&quot;#NOPOS&quot;&gt; &lt;code&gt;NOPOS&lt;/code&gt; &lt;/a&gt; 제외 ) 및 0은 유효한 행 또는 열 번호가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="cdbde4652d7d9766d615a52e779607ef96fa9bda" translate="yes" xml:space="preserve">
          <source>Line and column numbers begin at 1. Negative values (except &lt;a href=&quot;diagnostic#NOPOS&quot;&gt;&lt;code&gt;NOPOS&lt;/code&gt;&lt;/a&gt;) and 0 are not valid line or column numbers.</source>
          <target state="translated">행 및 열 번호는 1부터 시작합니다. 음수 값 ( &lt;a href=&quot;diagnostic#NOPOS&quot;&gt; &lt;code&gt;NOPOS&lt;/code&gt; &lt;/a&gt; 제외 ) 및 0은 유효한 행 또는 열 번호가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="7d49b9c52f6bf974aade77d67e236637ac6a55e6" translate="yes" xml:space="preserve">
          <source>Line boundary analysis determines where a text string can be broken when line-wrapping. The mechanism correctly handles punctuation and hyphenated words. Actual line breaking needs to also consider the available line width and is handled by higher-level software.</source>
          <target state="translated">줄 바꿈 분석은 줄 바꿈시 텍스트 문자열이 끊길 수있는 위치를 결정합니다. 이 메커니즘은 구두점과 하이픈이있는 단어를 올바르게 처리합니다. 실제 줄 바꿈도 사용 가능한 줄 너비를 고려해야하며 고급 소프트웨어에서 처리합니다.</target>
        </trans-unit>
        <trans-unit id="32dad465313c55d0967dce08b85facfd7c9c1f32" translate="yes" xml:space="preserve">
          <source>Line separator (&quot;\n&quot; on UNIX)</source>
          <target state="translated">줄 구분 기호 (UNIX의 경우 &quot;\ n&quot;)</target>
        </trans-unit>
        <trans-unit id="39a07c43d4457edd1e1b2f9cc8d3cb3bdafc23c5" translate="yes" xml:space="preserve">
          <source>Line stride (in data array elements) of the region of image data described by this ComponentSampleModel.</source>
          <target state="translated">이 ComponentSampleModel에 의해 기술 된 이미지 데이터 영역의 선 보폭 (데이터 배열 요소).</target>
        </trans-unit>
        <trans-unit id="aa3ba830ebf0f8ac5651680deb0ea80de3efc5f2" translate="yes" xml:space="preserve">
          <source>Line terminators</source>
          <target state="translated">줄 종결 자</target>
        </trans-unit>
        <trans-unit id="c72f1d323f6744511b003450f4ca7afb4a0ad632" translate="yes" xml:space="preserve">
          <source>Line.Info</source>
          <target state="translated">Line.Info</target>
        </trans-unit>
        <trans-unit id="61b4bea62205083d9f24f7b8bb74c0a8f26d6a16" translate="yes" xml:space="preserve">
          <source>Line.Info.getLineClass()</source>
          <target state="translated">Line.Info.getLineClass()</target>
        </trans-unit>
        <trans-unit id="acb3c20251614dad92275d591dd78e1b1f08ae85" translate="yes" xml:space="preserve">
          <source>Line.Info.matches()</source>
          <target state="translated">Line.Info.matches()</target>
        </trans-unit>
        <trans-unit id="d26926c0847bc7c2a5a751fb4c24fc2ab7c6047f" translate="yes" xml:space="preserve">
          <source>Line.Info.toString()</source>
          <target state="translated">Line.Info.toString()</target>
        </trans-unit>
        <trans-unit id="0f6c4bf686450895074f6f3f956e571deb85b070" translate="yes" xml:space="preserve">
          <source>Line.addLineListener()</source>
          <target state="translated">Line.addLineListener()</target>
        </trans-unit>
        <trans-unit id="e918747b3b44d77eee43e349816345442739acad" translate="yes" xml:space="preserve">
          <source>Line.close()</source>
          <target state="translated">Line.close()</target>
        </trans-unit>
        <trans-unit id="e76a77cc927184581bc57d5a0243bf8cd39635df" translate="yes" xml:space="preserve">
          <source>Line.getControl()</source>
          <target state="translated">Line.getControl()</target>
        </trans-unit>
        <trans-unit id="3206cd3eb2cd23cb9b27609e0c11d1eed41fe338" translate="yes" xml:space="preserve">
          <source>Line.getControls()</source>
          <target state="translated">Line.getControls()</target>
        </trans-unit>
        <trans-unit id="9d52fddf96ccdb30961577dac6a2d31aafc358da" translate="yes" xml:space="preserve">
          <source>Line.getLineInfo()</source>
          <target state="translated">Line.getLineInfo()</target>
        </trans-unit>
        <trans-unit id="7c37f1cb67603ac70035d035cf8c979a69dc7239" translate="yes" xml:space="preserve">
          <source>Line.isControlSupported()</source>
          <target state="translated">Line.isControlSupported()</target>
        </trans-unit>
        <trans-unit id="72daef6793473478427afd1e857680dcb8862bf2" translate="yes" xml:space="preserve">
          <source>Line.isOpen()</source>
          <target state="translated">Line.isOpen()</target>
        </trans-unit>
        <trans-unit id="ea7e3bf0293c22f7ab34396b378c116c6522c296" translate="yes" xml:space="preserve">
          <source>Line.open()</source>
          <target state="translated">Line.open()</target>
        </trans-unit>
        <trans-unit id="b599b9ab65f566d79d5d94ca78fea442a4ee92cb" translate="yes" xml:space="preserve">
          <source>Line.removeLineListener()</source>
          <target state="translated">Line.removeLineListener()</target>
        </trans-unit>
        <trans-unit id="01eaf6e4bb877601ca79bca9b07ed3a2f0e8240c" translate="yes" xml:space="preserve">
          <source>Line2D</source>
          <target state="translated">Line2D</target>
        </trans-unit>
        <trans-unit id="d9092a789d18f053d57d2033d41c24be27417c0c" translate="yes" xml:space="preserve">
          <source>Line2D.Double</source>
          <target state="translated">Line2D.Double</target>
        </trans-unit>
        <trans-unit id="d44bf1bec7a3e2122f9f90c1f097b6b656ca46c8" translate="yes" xml:space="preserve">
          <source>Line2D.Float</source>
          <target state="translated">Line2D.Float</target>
        </trans-unit>
        <trans-unit id="0e51a59691b784b258b993ca40e3cc3c97b2f293" translate="yes" xml:space="preserve">
          <source>LineBorder</source>
          <target state="translated">LineBorder</target>
        </trans-unit>
        <trans-unit id="d27c1bc7a2b84e01785ea2e7615bc95966e4a079" translate="yes" xml:space="preserve">
          <source>LineBorderUIResource</source>
          <target state="translated">LineBorderUIResource</target>
        </trans-unit>
        <trans-unit id="ee119f6b31fb52ab7c9edc306581d2479bf1e629" translate="yes" xml:space="preserve">
          <source>LineBreakMeasurer</source>
          <target state="translated">LineBreakMeasurer</target>
        </trans-unit>
        <trans-unit id="724b5d6ce9e29aeda9ebee895650012b807d59eb" translate="yes" xml:space="preserve">
          <source>LineEvent</source>
          <target state="translated">LineEvent</target>
        </trans-unit>
        <trans-unit id="c4a300637c0cee6fa0c096f7345d56597f2f7d33" translate="yes" xml:space="preserve">
          <source>LineEvent.Type</source>
          <target state="translated">LineEvent.Type</target>
        </trans-unit>
        <trans-unit id="be264b67d7b3e582d9383118f3fe02969de24f59" translate="yes" xml:space="preserve">
          <source>LineEvent.Type.equals()</source>
          <target state="translated">LineEvent.Type.equals()</target>
        </trans-unit>
        <trans-unit id="fe8220a555036b93f846519d4dd0b62ac5662643" translate="yes" xml:space="preserve">
          <source>LineEvent.Type.hashCode()</source>
          <target state="translated">LineEvent.Type.hashCode()</target>
        </trans-unit>
        <trans-unit id="f6ef0b8f90018406a9c0efb1e79512b8daba9565" translate="yes" xml:space="preserve">
          <source>LineEvent.Type.toString()</source>
          <target state="translated">LineEvent.Type.toString()</target>
        </trans-unit>
        <trans-unit id="3c7b2fe56d7d22bc7fd199e96a6558c87314ce89" translate="yes" xml:space="preserve">
          <source>LineEvent.getFramePosition()</source>
          <target state="translated">LineEvent.getFramePosition()</target>
        </trans-unit>
        <trans-unit id="b131e08b760e058826b972a13cf7ffaf0d9dc45b" translate="yes" xml:space="preserve">
          <source>LineEvent.getLine()</source>
          <target state="translated">LineEvent.getLine()</target>
        </trans-unit>
        <trans-unit id="cd66a84ba8eb421aca4993c48a06b77f57a32aee" translate="yes" xml:space="preserve">
          <source>LineEvent.getType()</source>
          <target state="translated">LineEvent.getType()</target>
        </trans-unit>
        <trans-unit id="52f26eea7e797fa2929752f2374bf9c204447e0e" translate="yes" xml:space="preserve">
          <source>LineEvent.toString()</source>
          <target state="translated">LineEvent.toString()</target>
        </trans-unit>
        <trans-unit id="045699cbf056ad75bce05f6ce044fa8f6293da03" translate="yes" xml:space="preserve">
          <source>LineListener</source>
          <target state="translated">LineListener</target>
        </trans-unit>
        <trans-unit id="5ccb49506878c8ad2a594fa48402d555dc79322d" translate="yes" xml:space="preserve">
          <source>LineListener.update()</source>
          <target state="translated">LineListener.update()</target>
        </trans-unit>
        <trans-unit id="6f75a7d52bc3001ee28ce6c36c97b4ad319b1665" translate="yes" xml:space="preserve">
          <source>LineMap</source>
          <target state="translated">LineMap</target>
        </trans-unit>
        <trans-unit id="6b20b9a7632852f4e033ba2b6fd163f6bd0829ff" translate="yes" xml:space="preserve">
          <source>LineMetrics</source>
          <target state="translated">LineMetrics</target>
        </trans-unit>
        <trans-unit id="9a39f2c960533af9dcb05b41272a5064cc8a3df8" translate="yes" xml:space="preserve">
          <source>LineNumberInputStream</source>
          <target state="translated">LineNumberInputStream</target>
        </trans-unit>
        <trans-unit id="37174ded010b926c7bb437da578b85ff3ecb035b" translate="yes" xml:space="preserve">
          <source>LineNumberInputStream.available()</source>
          <target state="translated">LineNumberInputStream.available()</target>
        </trans-unit>
        <trans-unit id="cf9d2c03feda6676ec8416179ad93d84e3ec4ad8" translate="yes" xml:space="preserve">
          <source>LineNumberInputStream.getLineNumber()</source>
          <target state="translated">LineNumberInputStream.getLineNumber()</target>
        </trans-unit>
        <trans-unit id="6762255921713e66a719b67e18eab942863aa63f" translate="yes" xml:space="preserve">
          <source>LineNumberInputStream.mark()</source>
          <target state="translated">LineNumberInputStream.mark()</target>
        </trans-unit>
        <trans-unit id="c4d3ca40f7cac1667242073b54c69f1917f697d3" translate="yes" xml:space="preserve">
          <source>LineNumberInputStream.read()</source>
          <target state="translated">LineNumberInputStream.read()</target>
        </trans-unit>
        <trans-unit id="8d39540d63d0d35e5a41b9b0ac8ba440c6f32c8c" translate="yes" xml:space="preserve">
          <source>LineNumberInputStream.reset()</source>
          <target state="translated">LineNumberInputStream.reset()</target>
        </trans-unit>
        <trans-unit id="c0eaa188ae29a8ab90ad3b7c7f137490cf978716" translate="yes" xml:space="preserve">
          <source>LineNumberInputStream.setLineNumber()</source>
          <target state="translated">LineNumberInputStream.setLineNumber()</target>
        </trans-unit>
        <trans-unit id="442cf4e425e5a8e2e967bd24e110ae637bdc30aa" translate="yes" xml:space="preserve">
          <source>LineNumberInputStream.skip()</source>
          <target state="translated">LineNumberInputStream.skip()</target>
        </trans-unit>
        <trans-unit id="3bbf27c6948402d0ec3a2d5abc9a87c3c3c409e9" translate="yes" xml:space="preserve">
          <source>LineNumberReader</source>
          <target state="translated">LineNumberReader</target>
        </trans-unit>
        <trans-unit id="42b11a4e3b5e28e6aebc7094b98e098982e08f83" translate="yes" xml:space="preserve">
          <source>LineNumberReader.getLineNumber()</source>
          <target state="translated">LineNumberReader.getLineNumber()</target>
        </trans-unit>
        <trans-unit id="780218a7b87574088e5ebeb6942bb437bef6e2e0" translate="yes" xml:space="preserve">
          <source>LineNumberReader.mark()</source>
          <target state="translated">LineNumberReader.mark()</target>
        </trans-unit>
        <trans-unit id="d67ad8af807e6f2eb96abd235b795d04785affe5" translate="yes" xml:space="preserve">
          <source>LineNumberReader.read()</source>
          <target state="translated">LineNumberReader.read()</target>
        </trans-unit>
        <trans-unit id="55a436f1801c055c23f8d529a1b010ff93486629" translate="yes" xml:space="preserve">
          <source>LineNumberReader.readLine()</source>
          <target state="translated">LineNumberReader.readLine()</target>
        </trans-unit>
        <trans-unit id="e8f6152b388d669befa40c4f2f45f6e78b1a237f" translate="yes" xml:space="preserve">
          <source>LineNumberReader.reset()</source>
          <target state="translated">LineNumberReader.reset()</target>
        </trans-unit>
        <trans-unit id="302b253394cda6336d8b3c9f443e268fff49b2cb" translate="yes" xml:space="preserve">
          <source>LineNumberReader.setLineNumber()</source>
          <target state="translated">LineNumberReader.setLineNumber()</target>
        </trans-unit>
        <trans-unit id="effc7e0170e2be3a45c6eefdd9a2d51787135e9e" translate="yes" xml:space="preserve">
          <source>LineNumberReader.skip()</source>
          <target state="translated">LineNumberReader.skip()</target>
        </trans-unit>
        <trans-unit id="0ca89a5dfd114f45c57b759a97713586e6672ac3" translate="yes" xml:space="preserve">
          <source>LineSpacing</source>
          <target state="translated">LineSpacing</target>
        </trans-unit>
        <trans-unit id="48bc6ffd0b85cfbd0a98dfdefc70ae8fcac6ef16" translate="yes" xml:space="preserve">
          <source>LineUnavailableException</source>
          <target state="translated">LineUnavailableException</target>
        </trans-unit>
        <trans-unit id="992208350b1d139e3d1d5fd3d7151218508bea65" translate="yes" xml:space="preserve">
          <source>Linear threshold.</source>
          <target state="translated">선형 임계 값.</target>
        </trans-unit>
        <trans-unit id="03ce85ff2ef9b1dca0cd08583d332362f8bd4df2" translate="yes" xml:space="preserve">
          <source>Linear threshold. Table tag &quot;LTSH&quot; in the Open Type Specification.</source>
          <target state="translated">선형 임계 값. Open Type 사양의 테이블 태그 「LTSH」입니다.</target>
        </trans-unit>
        <trans-unit id="1841ac97b63a024ec045a117df1ddfaa5f20ee34" translate="yes" xml:space="preserve">
          <source>LinearGradientPaint</source>
          <target state="translated">LinearGradientPaint</target>
        </trans-unit>
        <trans-unit id="f5fbcfed116a959c83c46b7e5626dc162570af39" translate="yes" xml:space="preserve">
          <source>Linebreak matcher</source>
          <target state="translated">줄 바꿈 매처</target>
        </trans-unit>
        <trans-unit id="4268e063226b060e3cde8b881f1bf249e1dbca2a" translate="yes" xml:space="preserve">
          <source>Lines and paths stroked using the &lt;code&gt;BasicStroke&lt;/code&gt; object may be &quot;normalized&quot; to provide consistent rendering of the outlines when positioned at various points on the drawable and whether drawn with aliased or antialiased rendering. This normalization process is controlled by the &lt;a href=&quot;renderinghints#KEY_STROKE_CONTROL&quot;&gt;&lt;code&gt;KEY_STROKE_CONTROL&lt;/code&gt;&lt;/a&gt; hint. The exact normalization algorithm is not specified, but the goals of this normalization are to ensure that lines are rendered with consistent visual appearance regardless of how they fall on the pixel grid and to promote more solid horizontal and vertical lines in antialiased mode so that they resemble their non-antialiased counterparts more closely. A typical normalization step might promote antialiased line endpoints to pixel centers to reduce the amount of blending or adjust the subpixel positioning of non-antialiased lines so that the floating point line widths round to even or odd pixel counts with equal likelihood. This process can move endpoints by up to half a pixel (usually towards positive infinity along both axes) to promote these consistent results.</source>
          <target state="translated">&lt;code&gt;BasicStroke&lt;/code&gt; 개체를 사용하여 스트로크 한 선과 경로 는 드로어 블의 다양한 지점에 배치 될 때 그리고 앨리어스 렌더링 또는 앤티 앨리어싱 렌더링으로 그릴 때 윤곽선의 일관된 렌더링을 제공하기 위해 &quot;정규화&quot;될 수 있습니다. 이 정규화 프로세스는 &lt;a href=&quot;renderinghints#KEY_STROKE_CONTROL&quot;&gt; &lt;code&gt;KEY_STROKE_CONTROL&lt;/code&gt; 에&lt;/a&gt; 의해 제어됩니다.힌트. 정확한 정규화 알고리즘은 지정되어 있지 않지만,이 정규화의 목표는 선이 픽셀 그리드에 떨어지는 방식에 관계없이 일관된 시각적 모양으로 렌더링되도록하고 앤티 앨리어싱 모드에서 더 단색의 가로 및 세로 선을 닮아서 닮도록 만드는 것입니다. 안티 앨리어싱되지 않은 대응 물이 더 가깝습니다. 일반적인 정규화 단계에서는 안티 앨리어싱 된 라인 끝점을 픽셀 중심으로 승격하여 블렌딩 양을 줄이거 나 비 앤티 앨리어싱되지 않은 라인의 하위 픽셀 위치를 조정하여 부동 소수점 라인 너비가 동일한 가능성으로 짝수 또는 홀수 픽셀 수로 반올림되도록 할 수 있습니다. 이 프로세스는 이러한 일관된 결과를 촉진하기 위해 끝점을 최대 1/2 픽셀 (일반적으로 두 축을 따라 양의 무한대 방향)까지 이동할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="754138967f5ff0660266c24a09ee542e47a9b2b3" translate="yes" xml:space="preserve">
          <source>Lines exist in various states at different times. When a line opens, it reserves system resources for itself, and when it closes, these resources are freed for other objects or applications. The &lt;a href=&quot;#isOpen()&quot;&gt;&lt;code&gt;isOpen()&lt;/code&gt;&lt;/a&gt; method lets you discover whether a line is open or closed. An open line need not be processing data, however. Such processing is typically initiated by subinterface methods such as &lt;a href=&quot;sourcedataline#write(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;SourceDataLine.write&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;targetdataline#read(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;TargetDataLine.read&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">선은 여러 상태에서 서로 다른 시간에 존재합니다. 라인이 열리면 자체 시스템 리소스를 예약하고 닫히면 다른 개체 또는 응용 프로그램을 위해 이러한 리소스가 해제됩니다. &lt;a href=&quot;#isOpen()&quot;&gt; &lt;code&gt;isOpen()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하면 라인의 개폐 여부를 발견 할 수 있습니다. 그러나 열린 라인이 데이터를 처리 할 필요는 없습니다. 이러한 처리는 일반적으로 &lt;a href=&quot;sourcedataline#write(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;SourceDataLine.write&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;targetdataline#read(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;TargetDataLine.read&lt;/code&gt; &lt;/a&gt; 와 같은 하위 인터페이스 메서드에 의해 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="a621582d055b826790bedb93da6d6921a769187c" translate="yes" xml:space="preserve">
          <source>Lines exist in various states at different times. When a line opens, it reserves system resources for itself, and when it closes, these resources are freed for other objects or applications. The &lt;code&gt;&lt;a href=&quot;line#isOpen--&quot;&gt;&lt;code&gt;isOpen()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method lets you discover whether a line is open or closed. An open line need not be processing data, however. Such processing is typically initiated by subinterface methods such as &lt;code&gt;&lt;a href=&quot;sourcedataline#write-byte:A-int-int-&quot;&gt;&lt;code&gt;SourceDataLine.write&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;targetdataline#read-byte:A-int-int-&quot;&gt;&lt;code&gt;TargetDataLine.read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">라인은 다른 시간에 다양한 상태로 존재합니다. 라인이 열리면 시스템 리소스 자체를 예약하고 닫으면이 리소스는 다른 개체 나 응용 프로그램에 사용할 수있게됩니다. &lt;code&gt;&lt;a href=&quot;line#isOpen--&quot;&gt;&lt;code&gt;isOpen()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메서드를 사용하면 라인의 개폐 여부를 발견 할 수 있습니다. 그러나 개방 라인은 데이터를 처리 할 필요가 없습니다. 이러한 처리는 일반적으로 &lt;code&gt;&lt;a href=&quot;sourcedataline#write-byte:A-int-int-&quot;&gt;&lt;code&gt;SourceDataLine.write&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;targetdataline#read-byte:A-int-int-&quot;&gt;&lt;code&gt;TargetDataLine.read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 와 같은 하위 인터페이스 메소드에 의해 시작됩니다 .</target>
        </trans-unit>
        <trans-unit id="951c4efcac4bc4208721f130e8d57b017997130e" translate="yes" xml:space="preserve">
          <source>Linger on close if data is present (when configured in blocking mode only)</source>
          <target state="translated">데이터가있는 경우 닫힘 상태가됩니다 (차단 모드에서만 구성된 경우).</target>
        </trans-unit>
        <trans-unit id="0f7369e1e17a1a7dff465183f33076af6a9e8682" translate="yes" xml:space="preserve">
          <source>Linger on close if data is present.</source>
          <target state="translated">데이터가있는 경우 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="b5ad1b59b8b582e35abdbd7ea521496dfaa02fed" translate="yes" xml:space="preserve">
          <source>Link Explanation. Detail explaining why link resolution failed.</source>
          <target state="translated">링크 설명. 링크 확인에 실패한 이유를 자세히 설명합니다.</target>
        </trans-unit>
        <trans-unit id="00e71118c7f05faf044fe9ebed91e610ee3586f8" translate="yes" xml:space="preserve">
          <source>Link Remaining Name. Portion of link name that has not been resolved.</source>
          <target state="translated">링크 남은 이름. 해결되지 않은 링크 이름 부분.</target>
        </trans-unit>
        <trans-unit id="74a76eeb7cf63935be0038f0f5b6ca3d0cf49be2" translate="yes" xml:space="preserve">
          <source>Link Resolved Name. Portion of link name that has been resolved.</source>
          <target state="translated">링크 확인 이름. 해결 된 링크 이름의 일부입니다.</target>
        </trans-unit>
        <trans-unit id="bd225f5870e45a82923f73cdb4f52119e7cbb4e3" translate="yes" xml:space="preserve">
          <source>Link Resolved Object. Object to which resolution of link name proceeded.</source>
          <target state="translated">링크 해결 오브젝트. 링크 명의 해결이 진행된 객체.</target>
        </trans-unit>
        <trans-unit id="c160bf434c4deef228f8cd6cbbf24c831863944d" translate="yes" xml:space="preserve">
          <source>Link object encapsulating the nth link(s)</source>
          <target state="translated">n 번째 링크를 캡슐화하는 링크 객체</target>
        </trans-unit>
        <trans-unit id="9320d778ef52830e58ccb4e3c317d4e5a0be033f" translate="yes" xml:space="preserve">
          <source>Link-local</source>
          <target state="translated">Link-local</target>
        </trans-unit>
        <trans-unit id="b00bda10609f9a62e51102787408f221e9275c0f" translate="yes" xml:space="preserve">
          <source>Link-time checks</source>
          <target state="translated">링크 타임 체크</target>
        </trans-unit>
        <trans-unit id="89edd8b25be903a11a16dd9afa92020babfd02d3" translate="yes" xml:space="preserve">
          <source>LinkAction</source>
          <target state="translated">LinkAction</target>
        </trans-unit>
        <trans-unit id="06ef6797fe04713c356570c1190265f9f09e063d" translate="yes" xml:space="preserve">
          <source>LinkController</source>
          <target state="translated">LinkController</target>
        </trans-unit>
        <trans-unit id="af7063f0339e3b557739990d307e78cb8a50e3e8" translate="yes" xml:space="preserve">
          <source>LinkException</source>
          <target state="translated">LinkException</target>
        </trans-unit>
        <trans-unit id="26a2f1688f2bda45833599a500c4051568ab0b64" translate="yes" xml:space="preserve">
          <source>LinkException.getLinkExplanation()</source>
          <target state="translated">LinkException.getLinkExplanation()</target>
        </trans-unit>
        <trans-unit id="3f1b472b0c4d27eb9720134e56c8ea1e9c610b8d" translate="yes" xml:space="preserve">
          <source>LinkException.getLinkRemainingName()</source>
          <target state="translated">LinkException.getLinkRemainingName()</target>
        </trans-unit>
        <trans-unit id="83c983eeeb1190bc7cc8a5c1a1f15144c3f07ffe" translate="yes" xml:space="preserve">
          <source>LinkException.getLinkResolvedName()</source>
          <target state="translated">LinkException.getLinkResolvedName()</target>
        </trans-unit>
        <trans-unit id="7e8303f64feafac1dba2a5c5c0d195bc43c8c394" translate="yes" xml:space="preserve">
          <source>LinkException.getLinkResolvedObj()</source>
          <target state="translated">LinkException.getLinkResolvedObj()</target>
        </trans-unit>
        <trans-unit id="720fa0a044a912c19758f480cd9aca398d22fc2e" translate="yes" xml:space="preserve">
          <source>LinkException.setLinkExplanation()</source>
          <target state="translated">LinkException.setLinkExplanation()</target>
        </trans-unit>
        <trans-unit id="c8119780b2febfee0e31e171eab800d1c4fc4f8f" translate="yes" xml:space="preserve">
          <source>LinkException.setLinkRemainingName()</source>
          <target state="translated">LinkException.setLinkRemainingName()</target>
        </trans-unit>
        <trans-unit id="c675915a75c5622f955ffd9e6f9b8ff118b7655c" translate="yes" xml:space="preserve">
          <source>LinkException.setLinkResolvedName()</source>
          <target state="translated">LinkException.setLinkResolvedName()</target>
        </trans-unit>
        <trans-unit id="12048302afa1e5981f204dbced7d30941f634b1b" translate="yes" xml:space="preserve">
          <source>LinkException.setLinkResolvedObj()</source>
          <target state="translated">LinkException.setLinkResolvedObj()</target>
        </trans-unit>
        <trans-unit id="ff29a2c2b666fd901b07bd75d7777bad6a5fa453" translate="yes" xml:space="preserve">
          <source>LinkException.toString()</source>
          <target state="translated">LinkException.toString()</target>
        </trans-unit>
        <trans-unit id="c46f6162f43f81ffdf4cd92adbe46ea85c866d8f" translate="yes" xml:space="preserve">
          <source>LinkLoopException</source>
          <target state="translated">LinkLoopException</target>
        </trans-unit>
        <trans-unit id="64061dc31b0c169da1e21ae1dcdec18265c4bcf0" translate="yes" xml:space="preserve">
          <source>LinkOption</source>
          <target state="translated">LinkOption</target>
        </trans-unit>
        <trans-unit id="48bfe686b0c07b52e4a8df6611b09e5179c8f513" translate="yes" xml:space="preserve">
          <source>LinkOption.valueOf()</source>
          <target state="translated">LinkOption.valueOf()</target>
        </trans-unit>
        <trans-unit id="c4b3ed3d6c19bf4f218a0f0344d9366ba5b2c557" translate="yes" xml:space="preserve">
          <source>LinkOption.values()</source>
          <target state="translated">LinkOption.values()</target>
        </trans-unit>
        <trans-unit id="811070fb749f711358d5411a65ccf874f40841b9" translate="yes" xml:space="preserve">
          <source>LinkPermission</source>
          <target state="translated">LinkPermission</target>
        </trans-unit>
        <trans-unit id="3f0ececbf3f3edc2a7787b19bcf8277e54b467a2" translate="yes" xml:space="preserve">
          <source>LinkRef</source>
          <target state="translated">LinkRef</target>
        </trans-unit>
        <trans-unit id="e2a50b8b02cfeed7d866e071e008388c4a601137" translate="yes" xml:space="preserve">
          <source>LinkRef is bound to a name using the normal Context.bind()/rebind(), and DirContext.bind()/rebind(). Context.lookupLink() is used to retrieve the link itself if the terminal atomic name is bound to a link.</source>
          <target state="translated">LinkRef는 일반 Context.bind () / rebind () 및 DirContext.bind () / rebind ()를 사용하여 이름에 바인딩됩니다. Context.lookupLink ()는 터미널 원자 이름이 링크에 바인딩 된 경우 링크 자체를 검색하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="73376f89dc578ca93aa3fc03e76d2e67973a761a" translate="yes" xml:space="preserve">
          <source>LinkRef.getLinkName()</source>
          <target state="translated">LinkRef.getLinkName()</target>
        </trans-unit>
        <trans-unit id="1ccf8a8f1b8f6be393b840e13ad158d468b6710d" translate="yes" xml:space="preserve">
          <source>LinkRequest</source>
          <target state="translated">LinkRequest</target>
        </trans-unit>
        <trans-unit id="0084b300581a4369f50268c2c401f96431ea7f31" translate="yes" xml:space="preserve">
          <source>LinkStyle</source>
          <target state="translated">LinkStyle</target>
        </trans-unit>
        <trans-unit id="d7ab4a7dc72a542916b4eb2fe9f7d80a3e515779" translate="yes" xml:space="preserve">
          <source>LinkTree</source>
          <target state="translated">LinkTree</target>
        </trans-unit>
        <trans-unit id="2f9a7237759d3e871c0145a4324a81ace9bc1c70" translate="yes" xml:space="preserve">
          <source>LinkageError</source>
          <target state="translated">LinkageError</target>
        </trans-unit>
        <trans-unit id="a41efea32e4d3ca1d9ebc5f1c2b8ecbacf3bce48" translate="yes" xml:space="preserve">
          <source>Linked &lt;code&gt;Component&lt;/code&gt;s are not be resizable.</source>
          <target state="translated">연결된 &lt;code&gt;Component&lt;/code&gt; 는 크기를 조정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="71a5267f0d7f1db3cdd0c04c5e6674e08c4dbe28" translate="yes" xml:space="preserve">
          <source>Linked Components are not be resizable.</source>
          <target state="translated">연결된 구성 요소는 크기를 조정할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6a13825e6f6af09d5b012273d4580e42ec390c90" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque</source>
          <target state="translated">LinkedBlockingDeque</target>
        </trans-unit>
        <trans-unit id="3cf9a6be40c8ed48a5f203cbf125a9579f5227c0" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.add()</source>
          <target state="translated">LinkedBlockingDeque.add()</target>
        </trans-unit>
        <trans-unit id="770e47398c3b1cb8a070d1544c7f3f884873ce7d" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.addFirst()</source>
          <target state="translated">LinkedBlockingDeque.addFirst()</target>
        </trans-unit>
        <trans-unit id="99e30e84dedd4bceed9b94236fdfd77a8541fc2e" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.addLast()</source>
          <target state="translated">LinkedBlockingDeque.addLast()</target>
        </trans-unit>
        <trans-unit id="c921c6afdde9db45f2f2a537aab626090c0635c8" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.clear()</source>
          <target state="translated">LinkedBlockingDeque.clear()</target>
        </trans-unit>
        <trans-unit id="8eb33db16044ec8249cbdb500a582ddeab59e680" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.contains()</source>
          <target state="translated">LinkedBlockingDeque.contains()</target>
        </trans-unit>
        <trans-unit id="ba7aad7be393da5a5be17a67b8efe29d9ce055e7" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.descendingIterator()</source>
          <target state="translated">LinkedBlockingDeque.descendingIterator()</target>
        </trans-unit>
        <trans-unit id="eaf88da7552f10e830bb7273122f02778cf111d7" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.drainTo()</source>
          <target state="translated">LinkedBlockingDeque.drainTo()</target>
        </trans-unit>
        <trans-unit id="3c194cdb3342bf7e59f604440f37b722f995dc42" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.element()</source>
          <target state="translated">LinkedBlockingDeque.element()</target>
        </trans-unit>
        <trans-unit id="e6a92a9f4a456731ed3002e5c6ffd7858fc52444" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.getFirst()</source>
          <target state="translated">LinkedBlockingDeque.getFirst()</target>
        </trans-unit>
        <trans-unit id="f895f28c2752456c58d8efcac1c9a86beacc6bf5" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.getLast()</source>
          <target state="translated">LinkedBlockingDeque.getLast()</target>
        </trans-unit>
        <trans-unit id="2d1e065f50a1ca8c8f8d3f43616187558a67c5a0" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.iterator()</source>
          <target state="translated">LinkedBlockingDeque.iterator()</target>
        </trans-unit>
        <trans-unit id="3c7c33e1482e0491f33bbb73eb274b5c8d0fd1ef" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.offer()</source>
          <target state="translated">LinkedBlockingDeque.offer()</target>
        </trans-unit>
        <trans-unit id="b141f661ea967ce8b9ad832864fbdbaf1f96f342" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.offerFirst()</source>
          <target state="translated">LinkedBlockingDeque.offerFirst()</target>
        </trans-unit>
        <trans-unit id="24f2615c15b953a51acf83feaf1ea6b4e69c97cc" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.offerLast()</source>
          <target state="translated">LinkedBlockingDeque.offerLast()</target>
        </trans-unit>
        <trans-unit id="fb16c249f5f7ff7f35ef5a821508179ba5822710" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.peek()</source>
          <target state="translated">LinkedBlockingDeque.peek()</target>
        </trans-unit>
        <trans-unit id="6456f011c9c16ae2fe202ce6a92aa5802e472b0d" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.peekFirst()</source>
          <target state="translated">LinkedBlockingDeque.peekFirst()</target>
        </trans-unit>
        <trans-unit id="71ac6aedad3d42ed2b1c6492a2f2f947a5aded02" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.peekLast()</source>
          <target state="translated">LinkedBlockingDeque.peekLast()</target>
        </trans-unit>
        <trans-unit id="3fd84703715f76a4b6f7791f39a94d8fa1415718" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.poll()</source>
          <target state="translated">LinkedBlockingDeque.poll()</target>
        </trans-unit>
        <trans-unit id="2eb4bfdb994d6e7a92982269528a3708f8e94d70" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.pollFirst()</source>
          <target state="translated">LinkedBlockingDeque.pollFirst()</target>
        </trans-unit>
        <trans-unit id="eb1b472536d2163e7c93da9eccac0b9ecee010f0" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.pollLast()</source>
          <target state="translated">LinkedBlockingDeque.pollLast()</target>
        </trans-unit>
        <trans-unit id="d798fd55b96316d022ea4c5e3c81ac3643cf4da9" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.pop()</source>
          <target state="translated">LinkedBlockingDeque.pop()</target>
        </trans-unit>
        <trans-unit id="b7f175caa7cf8c7614d8d489387b2da9a69aa4b3" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.push()</source>
          <target state="translated">LinkedBlockingDeque.push()</target>
        </trans-unit>
        <trans-unit id="368b1909eddd5193ec7668bdadf26b291e85b4ae" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.put()</source>
          <target state="translated">LinkedBlockingDeque.put()</target>
        </trans-unit>
        <trans-unit id="462860d11be018789b58c26bedc28bd82ef8e57c" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.putFirst()</source>
          <target state="translated">LinkedBlockingDeque.putFirst()</target>
        </trans-unit>
        <trans-unit id="6934a39de32d4b0c7a3168162044e790a249a369" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.putLast()</source>
          <target state="translated">LinkedBlockingDeque.putLast()</target>
        </trans-unit>
        <trans-unit id="d5eb7fd97b76bf92a990791e48bfc62bd86e9731" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.remainingCapacity()</source>
          <target state="translated">LinkedBlockingDeque.remainingCapacity()</target>
        </trans-unit>
        <trans-unit id="95f3d0d75655f5d14dc4e5d22196df46f10b639a" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.remove()</source>
          <target state="translated">LinkedBlockingDeque.remove()</target>
        </trans-unit>
        <trans-unit id="764addd2a72b8b636aa46ae0711c9e2834cc873d" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.removeFirst()</source>
          <target state="translated">LinkedBlockingDeque.removeFirst()</target>
        </trans-unit>
        <trans-unit id="97442da99b9a5800569b1e8eaf5c5068db0ce87a" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.removeFirstOccurrence()</source>
          <target state="translated">LinkedBlockingDeque.removeFirstOccurrence()</target>
        </trans-unit>
        <trans-unit id="828062c8eb098a749f6de135f18f5bfb7c947106" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.removeLast()</source>
          <target state="translated">LinkedBlockingDeque.removeLast()</target>
        </trans-unit>
        <trans-unit id="eae89207701e401741558ae17fd83d9fbbac48c1" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.removeLastOccurrence()</source>
          <target state="translated">LinkedBlockingDeque.removeLastOccurrence()</target>
        </trans-unit>
        <trans-unit id="7fb909d268af52bdd251b238f2ec27c6c5bcabf6" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.size()</source>
          <target state="translated">LinkedBlockingDeque.size()</target>
        </trans-unit>
        <trans-unit id="9f06759e285fe8158599603b4febdbfbeeb3ea52" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.spliterator()</source>
          <target state="translated">LinkedBlockingDeque.spliterator()</target>
        </trans-unit>
        <trans-unit id="635dc95159e5ddd6606dc9dc8462a4f23590109a" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.take()</source>
          <target state="translated">LinkedBlockingDeque.take()</target>
        </trans-unit>
        <trans-unit id="ebafcc93091d5668fee59efc7621078961746cb4" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.takeFirst()</source>
          <target state="translated">LinkedBlockingDeque.takeFirst()</target>
        </trans-unit>
        <trans-unit id="20553c0294259ba7cd06591ad7977ecbdb484113" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.takeLast()</source>
          <target state="translated">LinkedBlockingDeque.takeLast()</target>
        </trans-unit>
        <trans-unit id="6b7c1a73cd622265f11edecdec6a5104666d060f" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.toArray()</source>
          <target state="translated">LinkedBlockingDeque.toArray()</target>
        </trans-unit>
        <trans-unit id="a0c58c50be17085c9229eccbf1454146d9b097e6" translate="yes" xml:space="preserve">
          <source>LinkedBlockingDeque.toString()</source>
          <target state="translated">LinkedBlockingDeque.toString()</target>
        </trans-unit>
        <trans-unit id="066499461f256046611637e1fd378ead37e235d2" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue</source>
          <target state="translated">LinkedBlockingQueue</target>
        </trans-unit>
        <trans-unit id="f9b5317338c0f82f6d59d37a083b4a25e3aa8d30" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.clear()</source>
          <target state="translated">LinkedBlockingQueue.clear()</target>
        </trans-unit>
        <trans-unit id="bcfabd74fc0921d624fe9244c9233144e27a4909" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.contains()</source>
          <target state="translated">LinkedBlockingQueue.contains()</target>
        </trans-unit>
        <trans-unit id="599ea2323db62503391e99af78d6ae66b91f6447" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.drainTo()</source>
          <target state="translated">LinkedBlockingQueue.drainTo()</target>
        </trans-unit>
        <trans-unit id="43e1f1e69467094fa8ba64617e2eff6ab751b5d3" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.iterator()</source>
          <target state="translated">LinkedBlockingQueue.iterator()</target>
        </trans-unit>
        <trans-unit id="4a4e5c2026225c409fa1932f2698e20bd7eaf69f" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.offer()</source>
          <target state="translated">LinkedBlockingQueue.offer()</target>
        </trans-unit>
        <trans-unit id="077e9f28329ba9c7d0c4baceb37c4d9f060f57b6" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.peek()</source>
          <target state="translated">LinkedBlockingQueue.peek()</target>
        </trans-unit>
        <trans-unit id="33edea03339c7543cb63bade2413ce1b40fd62aa" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.poll()</source>
          <target state="translated">LinkedBlockingQueue.poll()</target>
        </trans-unit>
        <trans-unit id="9b96b4ac255a4829c58fa21bd063826749d17951" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.put()</source>
          <target state="translated">LinkedBlockingQueue.put()</target>
        </trans-unit>
        <trans-unit id="ef801346567996d4702a02aa83a9cef1d3591927" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.remainingCapacity()</source>
          <target state="translated">LinkedBlockingQueue.remainingCapacity()</target>
        </trans-unit>
        <trans-unit id="a09038af9a7b5e31fe4d87099a44df50496f2f37" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.remove()</source>
          <target state="translated">LinkedBlockingQueue.remove()</target>
        </trans-unit>
        <trans-unit id="a0b11f3ee42eba5d17da8b4af8b04fc1dc6ec76a" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.size()</source>
          <target state="translated">LinkedBlockingQueue.size()</target>
        </trans-unit>
        <trans-unit id="999208ef703e5db90ebbe86d4a93c17164fcfecf" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.spliterator()</source>
          <target state="translated">LinkedBlockingQueue.spliterator()</target>
        </trans-unit>
        <trans-unit id="ac2294fbddbacb598be9f6fa874c993480acc391" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.take()</source>
          <target state="translated">LinkedBlockingQueue.take()</target>
        </trans-unit>
        <trans-unit id="9235e180105e767fd851c8c17330379b85ba1c77" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.toArray()</source>
          <target state="translated">LinkedBlockingQueue.toArray()</target>
        </trans-unit>
        <trans-unit id="73b0ec8976fa4467335096905c9fa18ef995a1c4" translate="yes" xml:space="preserve">
          <source>LinkedBlockingQueue.toString()</source>
          <target state="translated">LinkedBlockingQueue.toString()</target>
        </trans-unit>
        <trans-unit id="07410b317023eeb58eba0c065fa4e8416575a68f" translate="yes" xml:space="preserve">
          <source>LinkedHashMap</source>
          <target state="translated">LinkedHashMap</target>
        </trans-unit>
        <trans-unit id="1d200b3fbab139396a0d514714432976f03c8017" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.clear()</source>
          <target state="translated">LinkedHashMap.clear()</target>
        </trans-unit>
        <trans-unit id="911c5d71833cb1cc77468812fc577358849e5b7c" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.containsValue()</source>
          <target state="translated">LinkedHashMap.containsValue()</target>
        </trans-unit>
        <trans-unit id="6215d1083f88c932b184bd3618c3529f3df8332d" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.entrySet()</source>
          <target state="translated">LinkedHashMap.entrySet()</target>
        </trans-unit>
        <trans-unit id="2ca8d0cad2f8c8647ecfeeea7d24aad73add40d9" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.forEach()</source>
          <target state="translated">LinkedHashMap.forEach()</target>
        </trans-unit>
        <trans-unit id="8e472a363902b50ac8293b2da1bea41c3c9ecb5c" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.get()</source>
          <target state="translated">LinkedHashMap.get()</target>
        </trans-unit>
        <trans-unit id="1dc7c7684ed11c201375c2effca5590121632a0a" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.getOrDefault()</source>
          <target state="translated">LinkedHashMap.getOrDefault()</target>
        </trans-unit>
        <trans-unit id="083934af6c0a7d758d147e514bd9fc3ed82a1d3a" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.keySet()</source>
          <target state="translated">LinkedHashMap.keySet()</target>
        </trans-unit>
        <trans-unit id="bf6fab29844959660fe2c3423414552a9a4273b9" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.removeEldestEntry()</source>
          <target state="translated">LinkedHashMap.removeEldestEntry()</target>
        </trans-unit>
        <trans-unit id="1fbb6473ee5fa99273a0baf6bc9f8aca9efa0201" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.replaceAll()</source>
          <target state="translated">LinkedHashMap.replaceAll()</target>
        </trans-unit>
        <trans-unit id="94f7b97337f4b917238bf2113b289db2f3d59703" translate="yes" xml:space="preserve">
          <source>LinkedHashMap.values()</source>
          <target state="translated">LinkedHashMap.values()</target>
        </trans-unit>
        <trans-unit id="9e6a957a7c69081b233af13d7e01702499988584" translate="yes" xml:space="preserve">
          <source>LinkedHashSet</source>
          <target state="translated">LinkedHashSet</target>
        </trans-unit>
        <trans-unit id="c1d32d76efe1a9127888a929d1eee14dd5ffed63" translate="yes" xml:space="preserve">
          <source>LinkedHashSet.spliterator()</source>
          <target state="translated">LinkedHashSet.spliterator()</target>
        </trans-unit>
        <trans-unit id="bab055db373c2bd47845a4b8346d451b92d62d04" translate="yes" xml:space="preserve">
          <source>LinkedList</source>
          <target state="translated">LinkedList</target>
        </trans-unit>
        <trans-unit id="5b5db6f014c0cf47a567ce2ccc94c8d5407410af" translate="yes" xml:space="preserve">
          <source>LinkedList.add()</source>
          <target state="translated">LinkedList.add()</target>
        </trans-unit>
        <trans-unit id="36eaf5f50cd4bb2b004bf7146bb926cbfb7b722b" translate="yes" xml:space="preserve">
          <source>LinkedList.addAll()</source>
          <target state="translated">LinkedList.addAll()</target>
        </trans-unit>
        <trans-unit id="e710ccde696acb23f02ae7578a1d173ece911fb7" translate="yes" xml:space="preserve">
          <source>LinkedList.addFirst()</source>
          <target state="translated">LinkedList.addFirst()</target>
        </trans-unit>
        <trans-unit id="54eae1aa1cca5ee928b1003f1f59e89c8ee0eed6" translate="yes" xml:space="preserve">
          <source>LinkedList.addLast()</source>
          <target state="translated">LinkedList.addLast()</target>
        </trans-unit>
        <trans-unit id="33559a3383cb0e03fafe66cfd5bb300e02cb4da0" translate="yes" xml:space="preserve">
          <source>LinkedList.clear()</source>
          <target state="translated">LinkedList.clear()</target>
        </trans-unit>
        <trans-unit id="0e3757cb8042cd3c3d811ee6aa4d2270df2c2d44" translate="yes" xml:space="preserve">
          <source>LinkedList.clone()</source>
          <target state="translated">LinkedList.clone()</target>
        </trans-unit>
        <trans-unit id="4f1ba1cf2ce029e711039c4098bb0e044c1bbbc8" translate="yes" xml:space="preserve">
          <source>LinkedList.contains()</source>
          <target state="translated">LinkedList.contains()</target>
        </trans-unit>
        <trans-unit id="91af535333263bb31c6bd796a1ac737b6c24164b" translate="yes" xml:space="preserve">
          <source>LinkedList.descendingIterator()</source>
          <target state="translated">LinkedList.descendingIterator()</target>
        </trans-unit>
        <trans-unit id="b34d3aedb5df78048b90678b9ef06c20380e1ede" translate="yes" xml:space="preserve">
          <source>LinkedList.element()</source>
          <target state="translated">LinkedList.element()</target>
        </trans-unit>
        <trans-unit id="404b9a74ad1657b9f0f9b1e40e91a7c1b77b7677" translate="yes" xml:space="preserve">
          <source>LinkedList.get()</source>
          <target state="translated">LinkedList.get()</target>
        </trans-unit>
        <trans-unit id="d868d56a01271d186afbe3ac69c3078250075b5b" translate="yes" xml:space="preserve">
          <source>LinkedList.getFirst()</source>
          <target state="translated">LinkedList.getFirst()</target>
        </trans-unit>
        <trans-unit id="3fb3a05ace635f1beea0e8e73f2d099152f5a693" translate="yes" xml:space="preserve">
          <source>LinkedList.getLast()</source>
          <target state="translated">LinkedList.getLast()</target>
        </trans-unit>
        <trans-unit id="c2cd74e6b7d36ae83fa2b154a29b5a3cb8398431" translate="yes" xml:space="preserve">
          <source>LinkedList.indexOf()</source>
          <target state="translated">LinkedList.indexOf()</target>
        </trans-unit>
        <trans-unit id="320e2114a6b742b7f8f85046f3b6cada9dbae9be" translate="yes" xml:space="preserve">
          <source>LinkedList.lastIndexOf()</source>
          <target state="translated">LinkedList.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="51a9f4ffd62c58493c90cf69d3740ad623cfee16" translate="yes" xml:space="preserve">
          <source>LinkedList.listIterator()</source>
          <target state="translated">LinkedList.listIterator()</target>
        </trans-unit>
        <trans-unit id="abb776507e599593d3407eb5f2b0aac35673cf8d" translate="yes" xml:space="preserve">
          <source>LinkedList.offer()</source>
          <target state="translated">LinkedList.offer()</target>
        </trans-unit>
        <trans-unit id="c91bc9e1de6de503efb7b98a07fccb3d9c2b5fc9" translate="yes" xml:space="preserve">
          <source>LinkedList.offerFirst()</source>
          <target state="translated">LinkedList.offerFirst()</target>
        </trans-unit>
        <trans-unit id="9294be2c795b9ba475b53176dd4dd105dd2f5b25" translate="yes" xml:space="preserve">
          <source>LinkedList.offerLast()</source>
          <target state="translated">LinkedList.offerLast()</target>
        </trans-unit>
        <trans-unit id="79785fc8f14078a4de3f9033965f871c0892b627" translate="yes" xml:space="preserve">
          <source>LinkedList.peek()</source>
          <target state="translated">LinkedList.peek()</target>
        </trans-unit>
        <trans-unit id="4c0f87c07e752c874fee990a843d6e419a9e852d" translate="yes" xml:space="preserve">
          <source>LinkedList.peekFirst()</source>
          <target state="translated">LinkedList.peekFirst()</target>
        </trans-unit>
        <trans-unit id="a02c49fed817e1ce3835b083342411cb9cf581e9" translate="yes" xml:space="preserve">
          <source>LinkedList.peekLast()</source>
          <target state="translated">LinkedList.peekLast()</target>
        </trans-unit>
        <trans-unit id="f093620323375893248dba7bbc5246cadba7c703" translate="yes" xml:space="preserve">
          <source>LinkedList.poll()</source>
          <target state="translated">LinkedList.poll()</target>
        </trans-unit>
        <trans-unit id="212551ddf0ee0a96585693db502d00a9cd8935d5" translate="yes" xml:space="preserve">
          <source>LinkedList.pollFirst()</source>
          <target state="translated">LinkedList.pollFirst()</target>
        </trans-unit>
        <trans-unit id="e52ce7d37ccac0f3202ef13f224ab01cf3e06a03" translate="yes" xml:space="preserve">
          <source>LinkedList.pollLast()</source>
          <target state="translated">LinkedList.pollLast()</target>
        </trans-unit>
        <trans-unit id="2f4ddb23b698cd9a5090d13d59ffeb66ef652486" translate="yes" xml:space="preserve">
          <source>LinkedList.pop()</source>
          <target state="translated">LinkedList.pop()</target>
        </trans-unit>
        <trans-unit id="4c6fce40d8d8bf8ee79e13753b0f88fc0610966b" translate="yes" xml:space="preserve">
          <source>LinkedList.push()</source>
          <target state="translated">LinkedList.push()</target>
        </trans-unit>
        <trans-unit id="0f803f88958ece1606e2444425bbe2949d045549" translate="yes" xml:space="preserve">
          <source>LinkedList.remove()</source>
          <target state="translated">LinkedList.remove()</target>
        </trans-unit>
        <trans-unit id="e202bb2f66376441fe25df5049da5c77ca7a71f1" translate="yes" xml:space="preserve">
          <source>LinkedList.removeFirst()</source>
          <target state="translated">LinkedList.removeFirst()</target>
        </trans-unit>
        <trans-unit id="4410be95bad2c1f32ddfc126a91992d35b0ff04e" translate="yes" xml:space="preserve">
          <source>LinkedList.removeFirstOccurrence()</source>
          <target state="translated">LinkedList.removeFirstOccurrence()</target>
        </trans-unit>
        <trans-unit id="56a18d021312ac21b1c2f9b3b7e4ada06d5f12f4" translate="yes" xml:space="preserve">
          <source>LinkedList.removeLast()</source>
          <target state="translated">LinkedList.removeLast()</target>
        </trans-unit>
        <trans-unit id="42b150ab93b951f38749ecd169538fd91113d1ea" translate="yes" xml:space="preserve">
          <source>LinkedList.removeLastOccurrence()</source>
          <target state="translated">LinkedList.removeLastOccurrence()</target>
        </trans-unit>
        <trans-unit id="d12a0395140855f2dddc8c1c31c3cbfb288cc0e4" translate="yes" xml:space="preserve">
          <source>LinkedList.set()</source>
          <target state="translated">LinkedList.set()</target>
        </trans-unit>
        <trans-unit id="d4ed663cb8e64d28c000471e2173a83d9e511761" translate="yes" xml:space="preserve">
          <source>LinkedList.size()</source>
          <target state="translated">LinkedList.size()</target>
        </trans-unit>
        <trans-unit id="590ba7590ab0b25855ec502c04525824d9c7f31d" translate="yes" xml:space="preserve">
          <source>LinkedList.spliterator()</source>
          <target state="translated">LinkedList.spliterator()</target>
        </trans-unit>
        <trans-unit id="7b1c32dedcc1aeab1b5f7847d986179baa8d9fab" translate="yes" xml:space="preserve">
          <source>LinkedList.toArray()</source>
          <target state="translated">LinkedList.toArray()</target>
        </trans-unit>
        <trans-unit id="939a184cb6be9f092ccc163c519812fbd2202ca6" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue</source>
          <target state="translated">LinkedTransferQueue</target>
        </trans-unit>
        <trans-unit id="f715110237b81f645b4d6a59f676e1c563bbeb8c" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.add()</source>
          <target state="translated">LinkedTransferQueue.add()</target>
        </trans-unit>
        <trans-unit id="223be7778ded6aaa76b37108572b53ed37c229e8" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.contains()</source>
          <target state="translated">LinkedTransferQueue.contains()</target>
        </trans-unit>
        <trans-unit id="b9755eb06ea92a0c99a9c2da69369914cbc367d4" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.drainTo()</source>
          <target state="translated">LinkedTransferQueue.drainTo()</target>
        </trans-unit>
        <trans-unit id="2d0718ad305441f1c0ca5fb663d640f27d127da6" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.getWaitingConsumerCount()</source>
          <target state="translated">LinkedTransferQueue.getWaitingConsumerCount()</target>
        </trans-unit>
        <trans-unit id="0105c87c72e25e610b5d2462bcdb0751924e06db" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.hasWaitingConsumer()</source>
          <target state="translated">LinkedTransferQueue.hasWaitingConsumer()</target>
        </trans-unit>
        <trans-unit id="24bc98860e44519db08f437430936c3d11b7e0cc" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.isEmpty()</source>
          <target state="translated">LinkedTransferQueue.isEmpty()</target>
        </trans-unit>
        <trans-unit id="0f3d49e5af3144789cad6884b50f058de2371823" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.iterator()</source>
          <target state="translated">LinkedTransferQueue.iterator()</target>
        </trans-unit>
        <trans-unit id="f8151a538a3dc2ae5889435dca1a47cf7fa5a3fa" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.offer()</source>
          <target state="translated">LinkedTransferQueue.offer()</target>
        </trans-unit>
        <trans-unit id="dabe674b4977ad9d3f421e991acd566730203337" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.peek()</source>
          <target state="translated">LinkedTransferQueue.peek()</target>
        </trans-unit>
        <trans-unit id="66d35930d3381f0c5cee2be8cd2e1ace30bc3806" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.poll()</source>
          <target state="translated">LinkedTransferQueue.poll()</target>
        </trans-unit>
        <trans-unit id="738474e85a1b6c47434498045b0bb29cb46dbfc9" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.put()</source>
          <target state="translated">LinkedTransferQueue.put()</target>
        </trans-unit>
        <trans-unit id="120c476701053a7a0acd9169d2713655b6c4e437" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.remainingCapacity()</source>
          <target state="translated">LinkedTransferQueue.remainingCapacity()</target>
        </trans-unit>
        <trans-unit id="620ac2b94bb4b900410ece8aadd27e2c3c571d03" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.remove()</source>
          <target state="translated">LinkedTransferQueue.remove()</target>
        </trans-unit>
        <trans-unit id="dac65e6846e7508c881bca96aff689e329f5a243" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.size()</source>
          <target state="translated">LinkedTransferQueue.size()</target>
        </trans-unit>
        <trans-unit id="c22900277946f3d5a8806a3e3829b74f908a56cb" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.spliterator()</source>
          <target state="translated">LinkedTransferQueue.spliterator()</target>
        </trans-unit>
        <trans-unit id="51d9fdac8ea52e8519ad71462b34348d121f75a5" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.take()</source>
          <target state="translated">LinkedTransferQueue.take()</target>
        </trans-unit>
        <trans-unit id="e2458e06ff64c78f7c654d465b9dc5cde4b7e9a4" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.transfer()</source>
          <target state="translated">LinkedTransferQueue.transfer()</target>
        </trans-unit>
        <trans-unit id="bb735262f70983167f59f4e12814c496452e4dd4" translate="yes" xml:space="preserve">
          <source>LinkedTransferQueue.tryTransfer()</source>
          <target state="translated">LinkedTransferQueue.tryTransfer()</target>
        </trans-unit>
        <trans-unit id="b473735ec5b2e102ba945a46e4436bccb7339cf5" translate="yes" xml:space="preserve">
          <source>LinkerServices</source>
          <target state="translated">LinkerServices</target>
        </trans-unit>
        <trans-unit id="84bc4ceb44d72c0085207da88d2b4aceb48a242d" translate="yes" xml:space="preserve">
          <source>Linking starts with resolving the constant pool entry for the bootstrap method, and resolving a &lt;a href=&quot;methodtype&quot;&gt;&lt;code&gt;MethodType&lt;/code&gt;&lt;/a&gt; object for the type descriptor of the dynamic call site. This resolution process may trigger class loading. It may therefore throw an error if a class fails to load. This error becomes the abnormal termination of the dynamic call site execution. Linkage does not trigger class initialization.</source>
          <target state="translated">연결은 부트 스트랩 메서드의 상수 풀 항목을 확인 하고 동적 호출 사이트의 형식 설명자를위한 &lt;a href=&quot;methodtype&quot;&gt; &lt;code&gt;MethodType&lt;/code&gt; &lt;/a&gt; 개체를 확인하는 것으로 시작 합니다. 이 해결 프로세스는 클래스로드를 트리거 할 수 있습니다. 따라서 클래스를로드하지 못하면 오류가 발생할 수 있습니다. 이 오류는 동적 호출 사이트 실행의 비정상 종료가됩니다. 연결은 클래스 초기화를 트리거하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5d5392f9e5c75330a46a638168dff14c22bce352" translate="yes" xml:space="preserve">
          <source>Links an invokedynamic call site.</source>
          <target state="translated">invokedynamic 호출 ​​사이트를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="d78205c8ca16d6fe88a089890d15d1cbc9a4ae8a" translate="yes" xml:space="preserve">
          <source>Links an invokedynamic call site. It will install a method handle into the call site that invokes the relinking mechanism of this linker. Next time the call site is invoked, it will be linked for the actual arguments it was invoked with.</source>
          <target state="translated">invokedynamic 호출 ​​사이트를 연결합니다. 이 링커의 재 연결 메커니즘을 호출하는 호출 사이트에 메서드 핸들을 설치합니다. 다음에 호출 사이트가 호출 될 때 호출 된 실제 인수에 대해 링크됩니다.</target>
        </trans-unit>
        <trans-unit id="3bb01b2e1ebc6058cbeb234860c856644824bcb1" translate="yes" xml:space="preserve">
          <source>Links edge &lt;code&gt;e1&lt;/code&gt; of component &lt;code&gt;c1&lt;/code&gt; to edge &lt;code&gt;e2&lt;/code&gt; of component &lt;code&gt;c2&lt;/code&gt;, with a fixed distance between the edges.</source>
          <target state="translated">구성 요소 &lt;code&gt;c1&lt;/code&gt; 의 가장자리 &lt;code&gt;e1&lt;/code&gt; 을 구성 요소 &lt;code&gt;c2&lt;/code&gt; 의 가장자리 &lt;code&gt;e2&lt;/code&gt; 에 연결하고 가장자리 사이에 고정 된 거리를 둡니다.</target>
        </trans-unit>
        <trans-unit id="6f3fcd428b4822c749716dd1a6a0f4f370ad70a4" translate="yes" xml:space="preserve">
          <source>Links edge &lt;code&gt;e1&lt;/code&gt; of component &lt;code&gt;c1&lt;/code&gt; to edge &lt;code&gt;e2&lt;/code&gt; of component &lt;code&gt;c2&lt;/code&gt;, with a fixed distance between the edges. This constraint will cause the assignment</source>
          <target state="translated">구성 요소 &lt;code&gt;c1&lt;/code&gt; 의 가장자리 &lt;code&gt;e1&lt;/code&gt; 을 구성 요소 &lt;code&gt;c2&lt;/code&gt; 의 가장자리 &lt;code&gt;e2&lt;/code&gt; 에 연결하고 가장자리 사이에 고정 된 거리를 둡니다. 이 제약으로 인해</target>
        </trans-unit>
        <trans-unit id="725eea6948d64e0fc49210ec155bf768e9d8c730" translate="yes" xml:space="preserve">
          <source>Links edge &lt;code&gt;e1&lt;/code&gt; of component &lt;code&gt;c1&lt;/code&gt; to edge &lt;code&gt;e2&lt;/code&gt; of component &lt;code&gt;c2&lt;/code&gt;.</source>
          <target state="translated">구성 요소 &lt;code&gt;c1&lt;/code&gt; 의 가장자리 &lt;code&gt;e1&lt;/code&gt; 을 구성 요소 &lt;code&gt;c2&lt;/code&gt; 의 가장자리 &lt;code&gt;e2&lt;/code&gt; 에 연결합니다 .</target>
        </trans-unit>
        <trans-unit id="b9fb9b2a3a15b412ab1f98ee473b5789a26d8f1b" translate="yes" xml:space="preserve">
          <source>Links edge &lt;code&gt;e1&lt;/code&gt; of component &lt;code&gt;c1&lt;/code&gt; to edge &lt;code&gt;e2&lt;/code&gt; of component &lt;code&gt;c2&lt;/code&gt;. As edge &lt;code&gt;(e2, c2)&lt;/code&gt; changes value, edge &lt;code&gt;(e1, c1)&lt;/code&gt; will be calculated by taking the (spring) sum of &lt;code&gt;(e2, c2)&lt;/code&gt; and &lt;code&gt;s&lt;/code&gt;. Each edge must have one of the following values: &lt;code&gt;SpringLayout.NORTH&lt;/code&gt;, &lt;code&gt;SpringLayout.SOUTH&lt;/code&gt;, &lt;code&gt;SpringLayout.EAST&lt;/code&gt;, &lt;code&gt;SpringLayout.WEST&lt;/code&gt;, &lt;code&gt;SpringLayout.VERTICAL_CENTER&lt;/code&gt;, &lt;code&gt;SpringLayout.HORIZONTAL_CENTER&lt;/code&gt; or &lt;code&gt;SpringLayout.BASELINE&lt;/code&gt;.</source>
          <target state="translated">구성 요소 &lt;code&gt;c1&lt;/code&gt; 의 가장자리 &lt;code&gt;e1&lt;/code&gt; 을 구성 요소 &lt;code&gt;c2&lt;/code&gt; 의 가장자리 &lt;code&gt;e2&lt;/code&gt; 에 연결합니다 . 모서리 &lt;code&gt;(e2, c2)&lt;/code&gt; 가 값을 변경하면 모서리 &lt;code&gt;(e1, c1)&lt;/code&gt; 는 &lt;code&gt;(e2, c2)&lt;/code&gt; 와 &lt;code&gt;s&lt;/code&gt; 의 (스프링) 합을 취하여 계산됩니다 . 각 에지에는 &lt;code&gt;SpringLayout.NORTH&lt;/code&gt; , &lt;code&gt;SpringLayout.SOUTH&lt;/code&gt; , &lt;code&gt;SpringLayout.EAST&lt;/code&gt; , &lt;code&gt;SpringLayout.WEST&lt;/code&gt; , &lt;code&gt;SpringLayout.VERTICAL_CENTER&lt;/code&gt; , &lt;code&gt;SpringLayout.HORIZONTAL_CENTER&lt;/code&gt; 또는 &lt;code&gt;SpringLayout.BASELINE&lt;/code&gt; 값 중 하나가 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="d31498951e70a9c4ec24e739dccda72677242c86" translate="yes" xml:space="preserve">
          <source>Links the specified class.</source>
          <target state="translated">지정된 클래스를 연결합니다.</target>
        </trans-unit>
        <trans-unit id="0139e71a9eda98e6eed3b701660c87507f56dfff" translate="yes" xml:space="preserve">
          <source>Links the specified class. This (misleadingly named) method may be used by a class loader to link a class. If the class &lt;code&gt;c&lt;/code&gt; has already been linked, then this method simply returns. Otherwise, the class is linked as described in the &quot;Execution&quot; chapter of</source>
          <target state="translated">지정된 클래스를 연결합니다. 클래스 로더가 클래스를 연결하는 데이 이름이 잘못 지정 될 수 있습니다. 클래스 &lt;code&gt;c&lt;/code&gt; 가 이미 링크 된 경우이 메소드는 단순히 리턴합니다. 그렇지 않으면 클래스는 &quot;실행&quot;장에 설명 된대로 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="9a4b9200875e5d32b242f72c7d988e9eaa98cf86" translate="yes" xml:space="preserve">
          <source>Linux support is currently limited to Unity. However to make these features work on Unity, the app should be run from a .desktop file with specified &lt;code&gt;java.desktop.appName&lt;/code&gt; system property set to this .desktop file name: &lt;code&gt;Exec=java -Djava.desktop.appName=MyApp.desktop -jar /path/to/myapp.jar&lt;/code&gt; see &lt;a href=&quot;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles&quot;&gt; https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles&lt;/a&gt;</source>
          <target state="translated">Linux 지원은 현재 Unity로 제한됩니다. 그러나 이러한 기능이 Unity에서 작동하도록하려면 지정된 &lt;code&gt;java.desktop.appName&lt;/code&gt; 시스템 속성이 다음 .desktop 파일 이름으로 설정된 .desktop 파일에서 앱을 실행해야합니다 . &lt;code&gt;Exec=java -Djava.desktop.appName=MyApp.desktop -jar /path/to/myapp.jar&lt;/code&gt; 참조 &lt;a href=&quot;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles&quot;&gt;https://help.ubuntu.com/community/UnityLaunchersAndDesktopFiles&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="a1fffaaafb7cc996685bceb829c053cc4f7de43d" translate="yes" xml:space="preserve">
          <source>List</source>
          <target state="translated">List</target>
        </trans-unit>
        <trans-unit id="178ac1cb841dff8c17d24ef7eece0b0030034548" translate="yes" xml:space="preserve">
          <source>List Data Listener contents changed method.</source>
          <target state="translated">List Data Listener 내용 변경 방법.</target>
        </trans-unit>
        <trans-unit id="ee68ea3edce40fb811ac3446e892ba0d852f4902" translate="yes" xml:space="preserve">
          <source>List Data Listener contents changed method. Used to fire the visible data property change</source>
          <target state="translated">List Data Listener 내용 변경 방법. 가시적 인 데이터 속성 변경을 시작하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d3972f9598e942aeca8901e37e89677aa59e0aad" translate="yes" xml:space="preserve">
          <source>List Data Listener interval added method.</source>
          <target state="translated">List Data Listener 간격 추가 방법.</target>
        </trans-unit>
        <trans-unit id="3b31ba43958920c5a902d6cee4036d320132d367" translate="yes" xml:space="preserve">
          <source>List Data Listener interval added method. Used to fire the visible data property change</source>
          <target state="translated">List Data Listener 간격 추가 방법. 가시적 인 데이터 속성 변경을 시작하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b50b4a59cb5b3bac204e9bf2646698d90ae3245f" translate="yes" xml:space="preserve">
          <source>List Data Listener interval removed method.</source>
          <target state="translated">List Data Listener 간격 제거 방법.</target>
        </trans-unit>
        <trans-unit id="d9e405d8dd8d8a3d1b5c7ba62261e80ab0a8ca1a" translate="yes" xml:space="preserve">
          <source>List Data Listener interval removed method. Used to fire the visible data property change</source>
          <target state="translated">List Data Listener 간격 제거 방법. 가시적 인 데이터 속성 변경을 시작하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="b6f3b2d1e680dd7c12ca74a48f81cb8df21d1d0c" translate="yes" xml:space="preserve">
          <source>List Item</source>
          <target state="translated">목록 항목</target>
        </trans-unit>
        <trans-unit id="f60c52ba9cf4f20e3194599b233efa6b9d7a6ee2" translate="yes" xml:space="preserve">
          <source>List Selection Listener value change method.</source>
          <target state="translated">목록 선택 리스너 값 변경 방법.</target>
        </trans-unit>
        <trans-unit id="b94eb620ed0425e36217e343ebe63b5676519ccb" translate="yes" xml:space="preserve">
          <source>List Selection Listener value change method. Used to fire the property change</source>
          <target state="translated">목록 선택 리스너 값 변경 방법. 속성 변경을 시작하는 데 사용</target>
        </trans-unit>
        <trans-unit id="2594a4fe0c35f55f6eb936737e94031a3f87be92" translate="yes" xml:space="preserve">
          <source>List item bullet style.</source>
          <target state="translated">목록 항목 글 머리 기호 스타일.</target>
        </trans-unit>
        <trans-unit id="df97c1483df8b86ecb3892aa3b671e451545b229" translate="yes" xml:space="preserve">
          <source>List item bullet style. See the type attribute definition in HTML 4.0. This attribute is deprecated in HTML 4.0.</source>
          <target state="translated">목록 항목 글 머리 기호 스타일. HTML 4.0의 유형 속성 정의를 참조하십시오. 이 속성은 HTML 4.0에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8d18fad0ed1004eb70c41fb7dc024b43516d461a" translate="yes" xml:space="preserve">
          <source>List item.</source>
          <target state="translated">목록 항목.</target>
        </trans-unit>
        <trans-unit id="2fb0c242c7419a5ceb8b0e5342ee6b46da4c91a4" translate="yes" xml:space="preserve">
          <source>List item. See the LI element definition in HTML 4.0.</source>
          <target state="translated">목록 항목. HTML 4.0의 LI 요소 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a12f563fc0c9848cf3a2ab3ceb0db5fcbef9bf65" translate="yes" xml:space="preserve">
          <source>List of &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt; ownable synchronizers&lt;/a&gt; locked by the thread.</source>
          <target state="translated">스레드가 잠글 수 있는 &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;소유 가능한 동기화 프로그램&lt;/a&gt; 목록</target>
        </trans-unit>
        <trans-unit id="e6cdf747e889c73bc6d076b41dbea9f617c23996" translate="yes" xml:space="preserve">
          <source>List of &lt;code&gt;BeanContextServicesListener&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;BeanContextServicesListener&lt;/code&gt; 객체의 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="e02cace948059dd3e05f4c5a33066aeb5162bf9a" translate="yes" xml:space="preserve">
          <source>List of &lt;code&gt;id&lt;/code&gt; attribute values for header cells.</source>
          <target state="translated">헤더 셀 의 &lt;code&gt;id&lt;/code&gt; 속성 값 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="ec30be5aec1d2cf1d2ef82e41815f7bd1312d62e" translate="yes" xml:space="preserve">
          <source>List of &lt;code&gt;id&lt;/code&gt; attribute values for header cells. See the headers attribute definition in HTML 4.0.</source>
          <target state="translated">헤더 셀 의 &lt;code&gt;id&lt;/code&gt; 속성 값 목록입니다 . HTML 4.0의 headers 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0a1e49723313d5aee81419788ccd460d886baad5" translate="yes" xml:space="preserve">
          <source>List of &lt;code&gt;java.lang.String&lt;/code&gt;, each representing a stratum</source>
          <target state="translated">계층을 각각 나타내는 &lt;code&gt;java.lang.String&lt;/code&gt; 목록</target>
        </trans-unit>
        <trans-unit id="558d268fc6e4f8e7df1615838ba30af4aa5de44f" translate="yes" xml:space="preserve">
          <source>List of TableColumnModelListener</source>
          <target state="translated">TableColumnModelListener 목록</target>
        </trans-unit>
        <trans-unit id="525a978c2a773c373ea96c01f28eb5b6d960742d" translate="yes" xml:space="preserve">
          <source>List of all discovered &lt;code&gt;ScriptEngineFactory&lt;/code&gt;s.</source>
          <target state="translated">발견 된 모든 &lt;code&gt;ScriptEngineFactory&lt;/code&gt; 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="c6ddf1cdff4ce61f542f64bcbf16024588a55a36" translate="yes" xml:space="preserve">
          <source>List of character sets supported by the server.</source>
          <target state="translated">서버에서 지원하는 문자 집합 목록입니다.</target>
        </trans-unit>
        <trans-unit id="364df80a9eb43d874c3dba88948f976dd58cfb0b" translate="yes" xml:space="preserve">
          <source>List of character sets supported by the server. See the accept-charset attribute definition in HTML 4.0.</source>
          <target state="translated">서버에서 지원하는 문자 집합 목록입니다. HTML 4.0의 accept-charset 속성 정의를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="644e7c1b9c5e17ffaff3d7216cb311a375ef4cd1" translate="yes" xml:space="preserve">
          <source>List of listeners</source>
          <target state="translated">청취자 목록</target>
        </trans-unit>
        <trans-unit id="b53f4e099d930013ae75999f6a2a190b68fce17b" translate="yes" xml:space="preserve">
          <source>List of object monitors locked by the thread.</source>
          <target state="translated">스레드에 의해 잠긴 오브젝트 모니터 목록.</target>
        </trans-unit>
        <trans-unit id="e23810a7f1311462b9876303932b3892b8a9aa31" translate="yes" xml:space="preserve">
          <source>List of paths to search when loading libraries</source>
          <target state="translated">라이브러리를로드 할 때 검색 할 경로 목록</target>
        </trans-unit>
        <trans-unit id="a74d1ed21c59dabd6c3a8d4378ad251dcd1b622c" translate="yes" xml:space="preserve">
          <source>List of possible qualified names.</source>
          <target state="translated">가능한 정규화 된 이름 목록입니다.</target>
        </trans-unit>
        <trans-unit id="91527673d332a547df705e4a0a69ac84f2bb8363" translate="yes" xml:space="preserve">
          <source>List of provided features.</source>
          <target state="translated">제공되는 기능 목록입니다.</target>
        </trans-unit>
        <trans-unit id="f6ec32bc74f0125b81a40257c01b148676e2aace" translate="yes" xml:space="preserve">
          <source>List of provided features. Each platform supports a different set of features. You may use the &lt;a href=&quot;taskbar#isSupported(java.awt.Taskbar.Feature)&quot;&gt;&lt;code&gt;Taskbar.isSupported(java.awt.Taskbar.Feature)&lt;/code&gt;&lt;/a&gt; method to determine if the given feature is supported by the current platform.</source>
          <target state="translated">제공되는 기능 목록입니다. 각 플랫폼은 서로 다른 기능 세트를 지원합니다. 당신은 사용할 수 있습니다 &lt;a href=&quot;taskbar#isSupported(java.awt.Taskbar.Feature)&quot;&gt; &lt;code&gt;Taskbar.isSupported(java.awt.Taskbar.Feature)&lt;/code&gt; &lt;/a&gt; 주어진 기능은 현재 플랫폼에서 지원되는지 확인하는 방법을.</target>
        </trans-unit>
        <trans-unit id="ff80a40bbb375c2b17fb7d010558bfe89a922cb9" translate="yes" xml:space="preserve">
          <source>List of the fully qualified names of the Java classes allowed for open data values.</source>
          <target state="translated">열린 데이터 값에 허용되는 Java 클래스의 완전한 이름 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d4eed648c7bea14b9f5ebe1ed61d6f216541973e" translate="yes" xml:space="preserve">
          <source>List of the fully qualified names of the Java classes allowed for open data values. A multidimensional array of any one of these classes or their corresponding primitive types is also an allowed class for open data values.</source>
          <target state="translated">열린 데이터 값에 허용되는 Java 클래스의 완전한 이름 목록입니다. 이러한 클래스 중 하나 또는 해당 기본 유형의 다차원 배열도 열린 데이터 값에 허용되는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="66cbbd54a36bf9318ba01443337dd587bd4d8568" translate="yes" xml:space="preserve">
          <source>List qualified names known for the simple name in the given code immediately to the left of the given cursor position.</source>
          <target state="translated">주어진 커서 위치의 바로 왼쪽에 주어진 코드에서 단순 이름으로 알려진 규정 된 이름을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="1ced5cb6ecc87cd2aa441e042eda17d3337428df" translate="yes" xml:space="preserve">
          <source>List qualified names known for the simple name in the given code immediately to the left of the given cursor position. The qualified names are gathered by inspecting the classpath used by eval (see &lt;a href=&quot;jshell#addToClasspath(java.lang.String)&quot;&gt;&lt;code&gt;JShell.addToClasspath(java.lang.String)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">주어진 커서 위치의 바로 왼쪽에 주어진 코드에서 단순 이름으로 알려진 규정 된 이름을 나열합니다. 정규화 된 이름은 eval에서 사용하는 클래스 경로를 검사하여 수집됩니다 ( &lt;a href=&quot;jshell#addToClasspath(java.lang.String)&quot;&gt; &lt;code&gt;JShell.addToClasspath(java.lang.String)&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="551aabb6984e71f7e395389214b231c232f409cc" translate="yes" xml:space="preserve">
          <source>List region.</source>
          <target state="translated">목록 지역.</target>
        </trans-unit>
        <trans-unit id="29eca64f0b775845ed932ba2083b3cc85aea77ce" translate="yes" xml:space="preserve">
          <source>List region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;List&lt;/code&gt;.</source>
          <target state="translated">목록 지역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 &lt;code&gt;List&lt;/code&gt; 라는 이름을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f2ae7cd3983f80b85317d38659b7fc79324aad1d" translate="yes" xml:space="preserve">
          <source>List the available filesystem roots.</source>
          <target state="translated">사용 가능한 파일 시스템 루트를 나열하십시오.</target>
        </trans-unit>
        <trans-unit id="b6b890c40b834e7344a192d92cfa122bc7b6e012" translate="yes" xml:space="preserve">
          <source>List view icon</source>
          <target state="translated">목록보기 아이콘</target>
        </trans-unit>
        <trans-unit id="46da90d5143dc8362cee0f6b4c9388ea7a92476f" translate="yes" xml:space="preserve">
          <source>List.AccessibleAWTList</source>
          <target state="translated">List.AccessibleAWTList</target>
        </trans-unit>
        <trans-unit id="1f73922b71c42f08979d7b40a4fa432705d6d784" translate="yes" xml:space="preserve">
          <source>List.AccessibleAWTList.AccessibleAWTListChild</source>
          <target state="translated">List.AccessibleAWTList.AccessibleAWTListChild</target>
        </trans-unit>
        <trans-unit id="d14b7c0f12440628dcaefb1e2f628f5c7f28ddde" translate="yes" xml:space="preserve">
          <source>List.add()</source>
          <target state="translated">List.add()</target>
        </trans-unit>
        <trans-unit id="86d488c350fa52e3da1f277bfcba7e7507001a36" translate="yes" xml:space="preserve">
          <source>List.addAll()</source>
          <target state="translated">List.addAll()</target>
        </trans-unit>
        <trans-unit id="1a84b0d8d4b6a09ca8b34c444b8c7376621f0f85" translate="yes" xml:space="preserve">
          <source>List.clear()</source>
          <target state="translated">List.clear()</target>
        </trans-unit>
        <trans-unit id="750836ee21c241608e78f31c473b209f6ccf13f4" translate="yes" xml:space="preserve">
          <source>List.contains()</source>
          <target state="translated">List.contains()</target>
        </trans-unit>
        <trans-unit id="3b2c0bff4f12709c8da887a84be5655107060466" translate="yes" xml:space="preserve">
          <source>List.containsAll()</source>
          <target state="translated">List.containsAll()</target>
        </trans-unit>
        <trans-unit id="644809e4138ce92dcfabee0b4f02d5d216405788" translate="yes" xml:space="preserve">
          <source>List.equals()</source>
          <target state="translated">List.equals()</target>
        </trans-unit>
        <trans-unit id="86a7fc9a68715e2611d9c85d3044c4a0df69fc29" translate="yes" xml:space="preserve">
          <source>List.get()</source>
          <target state="translated">List.get()</target>
        </trans-unit>
        <trans-unit id="3b310f93e5895573de436e7c5c8da76a99bca0ec" translate="yes" xml:space="preserve">
          <source>List.hashCode()</source>
          <target state="translated">List.hashCode()</target>
        </trans-unit>
        <trans-unit id="0cac228b9b3e3fa36ea1e0a08a25f070b733e14f" translate="yes" xml:space="preserve">
          <source>List.indexOf()</source>
          <target state="translated">List.indexOf()</target>
        </trans-unit>
        <trans-unit id="eb4f897db91be5ed91613dfe895e372fc2625367" translate="yes" xml:space="preserve">
          <source>List.isEmpty()</source>
          <target state="translated">List.isEmpty()</target>
        </trans-unit>
        <trans-unit id="374e236e19bedfd585542bc4f7611e6535386ae6" translate="yes" xml:space="preserve">
          <source>List.iterator()</source>
          <target state="translated">List.iterator()</target>
        </trans-unit>
        <trans-unit id="0c6be73180f3499d1cbd278adb992056b23842c9" translate="yes" xml:space="preserve">
          <source>List.lastIndexOf()</source>
          <target state="translated">List.lastIndexOf()</target>
        </trans-unit>
        <trans-unit id="0b95f40b030070ae8fb75d46e7f4c5fbd659b700" translate="yes" xml:space="preserve">
          <source>List.listIterator()</source>
          <target state="translated">List.listIterator()</target>
        </trans-unit>
        <trans-unit id="91244face8cde1eefcf1019ecb2c39865751c226" translate="yes" xml:space="preserve">
          <source>List.remove()</source>
          <target state="translated">List.remove()</target>
        </trans-unit>
        <trans-unit id="ccdbb9a6e2ffd61ef3a8c762016eb8537a1376a3" translate="yes" xml:space="preserve">
          <source>List.removeAll()</source>
          <target state="translated">List.removeAll()</target>
        </trans-unit>
        <trans-unit id="14f087d77f78b3c1abd4432bc118b7c1b03d25c5" translate="yes" xml:space="preserve">
          <source>List.replaceAll()</source>
          <target state="translated">List.replaceAll()</target>
        </trans-unit>
        <trans-unit id="d61e26b7dc8657d8c1c449c4655e03ded15fa4ab" translate="yes" xml:space="preserve">
          <source>List.retainAll()</source>
          <target state="translated">List.retainAll()</target>
        </trans-unit>
        <trans-unit id="fa12ade1cf76b01cc144428a12f18c55b710572c" translate="yes" xml:space="preserve">
          <source>List.set()</source>
          <target state="translated">List.set()</target>
        </trans-unit>
        <trans-unit id="cd4362128a00a8f09c127fb2deaddc8859e69d49" translate="yes" xml:space="preserve">
          <source>List.size()</source>
          <target state="translated">List.size()</target>
        </trans-unit>
        <trans-unit id="69353b05fa9995563a59d6363a8eb36ae6a2bc68" translate="yes" xml:space="preserve">
          <source>List.sort()</source>
          <target state="translated">List.sort()</target>
        </trans-unit>
        <trans-unit id="43bd389aea250e9be1afc7329a8041930a089833" translate="yes" xml:space="preserve">
          <source>List.spliterator()</source>
          <target state="translated">List.spliterator()</target>
        </trans-unit>
        <trans-unit id="8b585401dc6bf10345ead40a70ff641f6d5c99c4" translate="yes" xml:space="preserve">
          <source>List.subList()</source>
          <target state="translated">List.subList()</target>
        </trans-unit>
        <trans-unit id="101d82f3a15011eb520b02011a496e6bfdf1fd60" translate="yes" xml:space="preserve">
          <source>List.toArray()</source>
          <target state="translated">List.toArray()</target>
        </trans-unit>
        <trans-unit id="c04522bcfea57a90f9ee3fab44374010d438898e" translate="yes" xml:space="preserve">
          <source>ListCellRenderer</source>
          <target state="translated">ListCellRenderer</target>
        </trans-unit>
        <trans-unit id="787952dbe8887838a51dfb610409ecc10955d783" translate="yes" xml:space="preserve">
          <source>ListDataEvent</source>
          <target state="translated">ListDataEvent</target>
        </trans-unit>
        <trans-unit id="18b10d59b078940957f75793022d11dea092c59b" translate="yes" xml:space="preserve">
          <source>ListDataHandler</source>
          <target state="translated">ListDataHandler</target>
        </trans-unit>
        <trans-unit id="b9e41e9732168868caf117fd826b70cb36771784" translate="yes" xml:space="preserve">
          <source>ListDataListener</source>
          <target state="translated">ListDataListener</target>
        </trans-unit>
        <trans-unit id="02644711fd77bac3e2e3f9f231f44735cf5f6cf9" translate="yes" xml:space="preserve">
          <source>ListEditor</source>
          <target state="translated">ListEditor</target>
        </trans-unit>
        <trans-unit id="48fb7de1e7f4ec62a77ab4aa73ec82916ebe8c3e" translate="yes" xml:space="preserve">
          <source>ListIterator</source>
          <target state="translated">ListIterator</target>
        </trans-unit>
        <trans-unit id="60f3c82d74017925c19b1eae46f766407e6e1039" translate="yes" xml:space="preserve">
          <source>ListIterator.add()</source>
          <target state="translated">ListIterator.add()</target>
        </trans-unit>
        <trans-unit id="2411b084b7bad65e23d03c66bf1e2cc96ea38fbc" translate="yes" xml:space="preserve">
          <source>ListIterator.hasNext()</source>
          <target state="translated">ListIterator.hasNext()</target>
        </trans-unit>
        <trans-unit id="6ffee08c778d13571d4a34ada644b98929305dcc" translate="yes" xml:space="preserve">
          <source>ListIterator.hasPrevious()</source>
          <target state="translated">ListIterator.hasPrevious()</target>
        </trans-unit>
        <trans-unit id="3e6cb2e7851a6af258d24b859d783e4581adde25" translate="yes" xml:space="preserve">
          <source>ListIterator.next()</source>
          <target state="translated">ListIterator.next()</target>
        </trans-unit>
        <trans-unit id="938993f6a0817d1be09ce1d489ca458f8b00606e" translate="yes" xml:space="preserve">
          <source>ListIterator.nextIndex()</source>
          <target state="translated">ListIterator.nextIndex()</target>
        </trans-unit>
        <trans-unit id="ac0b364ef9d29af3525c5711a052a4080c8db754" translate="yes" xml:space="preserve">
          <source>ListIterator.previous()</source>
          <target state="translated">ListIterator.previous()</target>
        </trans-unit>
        <trans-unit id="4dfcc435848b35f3ef5feb82066dc9b58fc1e958" translate="yes" xml:space="preserve">
          <source>ListIterator.previousIndex()</source>
          <target state="translated">ListIterator.previousIndex()</target>
        </trans-unit>
        <trans-unit id="a614bfe4514cc47b62efbd3eaf68ec84876bbfcb" translate="yes" xml:space="preserve">
          <source>ListIterator.remove()</source>
          <target state="translated">ListIterator.remove()</target>
        </trans-unit>
        <trans-unit id="f498edcf18ba213558c7ceaa1fc659b96ca6644b" translate="yes" xml:space="preserve">
          <source>ListIterator.set()</source>
          <target state="translated">ListIterator.set()</target>
        </trans-unit>
        <trans-unit id="061d3b992f6158640413b2f5971a4f53e514906b" translate="yes" xml:space="preserve">
          <source>ListModel</source>
          <target state="translated">ListModel</target>
        </trans-unit>
        <trans-unit id="50e22e0ed4622d8a5730267e5cff6cf930ecdf16" translate="yes" xml:space="preserve">
          <source>ListMouseHandler</source>
          <target state="translated">ListMouseHandler</target>
        </trans-unit>
        <trans-unit id="26da898464a5933d2c51b9a6c4f0c02284c8fd83" translate="yes" xml:space="preserve">
          <source>ListMouseMotionHandler</source>
          <target state="translated">ListMouseMotionHandler</target>
        </trans-unit>
        <trans-unit id="a42fe9a3aa5cd7b3189fe72dbd1d73b8108f10ae" translate="yes" xml:space="preserve">
          <source>ListResourceBundle</source>
          <target state="translated">ListResourceBundle</target>
        </trans-unit>
        <trans-unit id="dd82776e1d25fe9c5f13cd64a5c77e117c2dbb05" translate="yes" xml:space="preserve">
          <source>ListResourceBundle.getContents()</source>
          <target state="translated">ListResourceBundle.getContents()</target>
        </trans-unit>
        <trans-unit id="5727d27ee4452a339210ea7bc1d60551128ecdd0" translate="yes" xml:space="preserve">
          <source>ListResourceBundle.getKeys()</source>
          <target state="translated">ListResourceBundle.getKeys()</target>
        </trans-unit>
        <trans-unit id="ad6310738f3bc17348348d7bae67d2b9528545a4" translate="yes" xml:space="preserve">
          <source>ListResourceBundle.handleGetObject()</source>
          <target state="translated">ListResourceBundle.handleGetObject()</target>
        </trans-unit>
        <trans-unit id="bdeb43b2cd5c72a540a8f241cf3b990eb31e8e9d" translate="yes" xml:space="preserve">
          <source>ListResourceBundle.handleKeySet()</source>
          <target state="translated">ListResourceBundle.handleKeySet()</target>
        </trans-unit>
        <trans-unit id="4647191cd62930bbba3adf2c88749575da4526fa" translate="yes" xml:space="preserve">
          <source>ListSelectionEvent</source>
          <target state="translated">ListSelectionEvent</target>
        </trans-unit>
        <trans-unit id="f7ba7cdd25e1359ccbf3da165f7746fba5566ffc" translate="yes" xml:space="preserve">
          <source>ListSelectionHandler</source>
          <target state="translated">ListSelectionHandler</target>
        </trans-unit>
        <trans-unit id="80e31c1d65412c24ffb358ea7e4b24436997e086" translate="yes" xml:space="preserve">
          <source>ListSelectionListener</source>
          <target state="translated">ListSelectionListener</target>
        </trans-unit>
        <trans-unit id="824c2cfc8d483e5d1c4516e150a274b868dd1b24" translate="yes" xml:space="preserve">
          <source>ListSelectionModel</source>
          <target state="translated">ListSelectionModel</target>
        </trans-unit>
        <trans-unit id="f071d3303c6b2ad280bed75afeaddc6500524dcd" translate="yes" xml:space="preserve">
          <source>ListUI</source>
          <target state="translated">ListUI</target>
        </trans-unit>
        <trans-unit id="192847b15c33bd4913e8c554131ed60b7aeaed65" translate="yes" xml:space="preserve">
          <source>ListView</source>
          <target state="translated">ListView</target>
        </trans-unit>
        <trans-unit id="834d80d282b3b4e2c8e4ae98d722230fda58074b" translate="yes" xml:space="preserve">
          <source>Listen to all AWT events, system-wide</source>
          <target state="translated">시스템 전체의 모든 AWT 이벤트 수신</target>
        </trans-unit>
        <trans-unit id="4cc8785b12ba90fbcca46c772825d37dd595bc54" translate="yes" xml:space="preserve">
          <source>ListenKey</source>
          <target state="translated">ListenKey</target>
        </trans-unit>
        <trans-unit id="a61750aa4a7a74392ee0d6a43288cb60500ad7c6" translate="yes" xml:space="preserve">
          <source>Listener Implementations</source>
          <target state="translated">리스너 구현</target>
        </trans-unit>
        <trans-unit id="5bcdc195fcd4daa56a7e6374be529710bb123614" translate="yes" xml:space="preserve">
          <source>Listener for changes in the caret position of a text component.</source>
          <target state="translated">텍스트 구성 요소의 캐럿 위치 변경에 대한 리스너.</target>
        </trans-unit>
        <trans-unit id="fd67db307593e1fde2586181cd1ac443dbfeece4" translate="yes" xml:space="preserve">
          <source>Listener for cursor keys.</source>
          <target state="translated">커서 키에 대한 리스너.</target>
        </trans-unit>
        <trans-unit id="a8cc2ef24291ddbec36b260c739ddaf0d5ffcfe6" translate="yes" xml:space="preserve">
          <source>Listener for resizing events.</source>
          <target state="translated">이벤트 크기 조정을위한 리스너.</target>
        </trans-unit>
        <trans-unit id="7ccfd8877c148dbff1790ade1e0ca63b828f22cc" translate="yes" xml:space="preserve">
          <source>Listener for scrolling events initiated in the &lt;code&gt;ScrollPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScrollPane&lt;/code&gt; 에서 시작된 스크롤 이벤트에 대한 리스너 입니다 .</target>
        </trans-unit>
        <trans-unit id="dc4e1333ba7ee92ed7065dc36f2747f8ac3a2098" translate="yes" xml:space="preserve">
          <source>Listener for viewport events.</source>
          <target state="translated">뷰포트 이벤트에 대한 리스너.</target>
        </trans-unit>
        <trans-unit id="d920acb02b07e609862f2bdcdc684639ff83453e" translate="yes" xml:space="preserve">
          <source>Listener on the TreeSelectionModel, resets the row selection if any of the properties of the model change.</source>
          <target state="translated">TreeSelectionModel의 리스너는 모델의 속성이 변경되면 행 선택을 재설정합니다.</target>
        </trans-unit>
        <trans-unit id="584ca45076ad3421f7fb62984b6d91102f0478b1" translate="yes" xml:space="preserve">
          <source>Listener responsible for getting cell editing events and updating the tree accordingly.</source>
          <target state="translated">셀 편집 이벤트를 가져오고 그에 따라 트리를 업데이트하는 리스너입니다.</target>
        </trans-unit>
        <trans-unit id="a30e675062855ac326466a9ae10b534dec1f06a1" translate="yes" xml:space="preserve">
          <source>ListenerNotFoundException</source>
          <target state="translated">ListenerNotFoundException</target>
        </trans-unit>
        <trans-unit id="c4fb8e9aeec04daf7ee2dcb7ff00f9baaa26d8ea" translate="yes" xml:space="preserve">
          <source>Listeners registered on the Component by this Recognizer shall record all Events that are recognized as part of the series of Events that go to comprise a Drag and Drop initiating gesture via this API.</source>
          <target state="translated">이 인식기에 의해 구성 요소에 등록 된 리스너는이 API를 통해 드래그 앤 드롭 시작 제스처를 구성하는 일련의 이벤트의 일부로 인식되는 모든 이벤트를 기록해야합니다.</target>
        </trans-unit>
        <trans-unit id="e1527172f174621faf02df878c6ce52ffaee2070" translate="yes" xml:space="preserve">
          <source>Listeners that are attached to the &lt;code&gt;JTable&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 에 첨부 된 리스너</target>
        </trans-unit>
        <trans-unit id="ff6aff4b6828a8489b25246a7e2ff0e70f0b2923" translate="yes" xml:space="preserve">
          <source>Listeners.</source>
          <target state="translated">Listeners.</target>
        </trans-unit>
        <trans-unit id="ea1c2f1b13754516fbb3731936273447f86f6cb4" translate="yes" xml:space="preserve">
          <source>ListeningConnector</source>
          <target state="translated">ListeningConnector</target>
        </trans-unit>
        <trans-unit id="378d711be1e591490f11c0967f745f5cca0cf145" translate="yes" xml:space="preserve">
          <source>Listens for a connection to be made to this socket and accepts it.</source>
          <target state="translated">이 소켓에 대한 연결을 수신하고 수락합니다.</target>
        </trans-unit>
        <trans-unit id="4cd97db32d4b4800a395279c05e5f05bf11af6a0" translate="yes" xml:space="preserve">
          <source>Listens for a connection to be made to this socket and accepts it. The method blocks until a connection is made.</source>
          <target state="translated">이 소켓에 대한 연결을 청취하고 승인합니다. 연결될 때까지 메소드가 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="3bc6ccc3238144e2537870fa861eb88d0a723355" translate="yes" xml:space="preserve">
          <source>Listens for border adjustments.</source>
          <target state="translated">테두리 조정을 수신합니다.</target>
        </trans-unit>
        <trans-unit id="de650eb75b4425c5a22b3250ac7c3fc57291a651" translate="yes" xml:space="preserve">
          <source>Listens for change events sent by the progress bar's model, redispatching them to change-event listeners registered upon this progress bar.</source>
          <target state="translated">진행률 표시 줄의 모델에서 보낸 변경 이벤트를 수신하여이 진행률 표시 줄에 등록 된 변경 이벤트 리스너에 다시 배포합니다.</target>
        </trans-unit>
        <trans-unit id="b3fe133b5c597d8c6d76b272d83da7956152a5e8" translate="yes" xml:space="preserve">
          <source>Listens for changes in the selection model and updates the display accordingly.</source>
          <target state="translated">선택 모델의 변경 사항을 수신하고 그에 따라 디스플레이를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="b886d7a8adfb6158de18707b85183f82426457c4" translate="yes" xml:space="preserve">
          <source>Listens for mouse movements and acts on them.</source>
          <target state="translated">마우스 움직임을 듣고 그에 따라 행동합니다.</target>
        </trans-unit>
        <trans-unit id="d27c9ccd23fd212949a866f0233df34b95e96337" translate="yes" xml:space="preserve">
          <source>Listens for mouse movements and acts on them. This class should be treated as a &quot;protected&quot; inner class. Instantiate it only within subclasses of &lt;code&gt;BasicDesktopIconUI&lt;/code&gt;.</source>
          <target state="translated">마우스 움직임을 듣고 그에 따라 행동합니다. 이 클래스는 &quot;보호 된&quot;내부 클래스로 취급되어야합니다. &lt;code&gt;BasicDesktopIconUI&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 .</target>
        </trans-unit>
        <trans-unit id="921cf9aeb6cd1da84f63e103eb2223d036192118" translate="yes" xml:space="preserve">
          <source>Listens for one or more connections initiated by target VMs.</source>
          <target state="translated">대상 VM에서 시작된 하나 이상의 연결을 수신합니다.</target>
        </trans-unit>
        <trans-unit id="bcfe50e44a822015aab95690a726018d86a94455" translate="yes" xml:space="preserve">
          <source>Listens for one or more connections initiated by target VMs. The connector uses the given argument map in determining the address at which to listen or else it generates an appropriate listen address. In either case, an address string is returned from this method which can be used in starting target VMs to identify this connector. The format of the address string is connector, transport, and, possibly, platform dependent.</source>
          <target state="translated">대상 VM에서 시작된 하나 이상의 연결을 수신합니다. 커넥터는 수신 할 주소를 결정할 때 주어진 인수 맵을 사용합니다. 그렇지 않으면 적절한 수신 주소를 생성합니다. 두 경우 모두이 메서드에서 주소 문자열이 반환되어이 커넥터를 식별하기 위해 대상 VM을 시작하는 데 사용할 수 있습니다. 주소 문자열의 형식은 커넥터, 전송 및 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="2a91f9818361920b3fd20cf5b407fb4b8fdbaa5d" translate="yes" xml:space="preserve">
          <source>Listens on an address chosen by the transport service.</source>
          <target state="translated">전송 서비스에서 선택한 주소를 수신합니다.</target>
        </trans-unit>
        <trans-unit id="ef8b4cf1b61d291e2232fc21c31a5f75fa891b1e" translate="yes" xml:space="preserve">
          <source>Listens on the specified address for inbound connections.</source>
          <target state="translated">인바운드 연결을 위해 지정된 주소에서 수신합니다.</target>
        </trans-unit>
        <trans-unit id="666bb8907eb7cef27440a7c586373c05260b02a7" translate="yes" xml:space="preserve">
          <source>Listens to the model and updates the &lt;code&gt;expandedState&lt;/code&gt; accordingly when nodes are removed, or changed.</source>
          <target state="translated">Listens to the model and updates the &lt;code&gt;expandedState&lt;/code&gt; accordingly when nodes are removed, or changed.</target>
        </trans-unit>
        <trans-unit id="3b0e2865d02b1b2d4fb7e4536d8fdb392ff0576d" translate="yes" xml:space="preserve">
          <source>Lists (and arrays) of objects that implement this interface can be sorted automatically by &lt;a href=&quot;../util/collections#sort(java.util.List)&quot;&gt;&lt;code&gt;Collections.sort&lt;/code&gt;&lt;/a&gt; (and &lt;a href=&quot;../util/arrays#sort(java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt;). Objects that implement this interface can be used as keys in a &lt;a href=&quot;../util/sortedmap&quot;&gt;sorted map&lt;/a&gt; or as elements in a &lt;a href=&quot;../util/sortedset&quot;&gt;sorted set&lt;/a&gt;, without the need to specify a &lt;a href=&quot;../util/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">Lists (and arrays) of objects that implement this interface can be sorted automatically by &lt;a href=&quot;../util/collections#sort(java.util.List)&quot;&gt; &lt;code&gt;Collections.sort&lt;/code&gt; &lt;/a&gt; (and &lt;a href=&quot;../util/arrays#sort(java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt;). Objects that implement this interface can be used as keys in a &lt;a href=&quot;../util/sortedmap&quot;&gt;sorted map&lt;/a&gt; or as elements in a &lt;a href=&quot;../util/sortedset&quot;&gt;sorted set&lt;/a&gt;, without the need to specify a &lt;a href=&quot;../util/comparator&quot;&gt;comparator&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="874cd864744bb917501ff21c350aed8ed1bffd71" translate="yes" xml:space="preserve">
          <source>Lists (and arrays) of objects that implement this interface can be sorted automatically by &lt;a href=&quot;../util/collections#sort-java.util.List-&quot;&gt;&lt;code&gt;Collections.sort&lt;/code&gt;&lt;/a&gt; (and &lt;a href=&quot;../util/arrays#sort-java.lang.Object:A-&quot;&gt;&lt;code&gt;Arrays.sort&lt;/code&gt;&lt;/a&gt;). Objects that implement this interface can be used as keys in a &lt;a href=&quot;../util/sortedmap&quot;&gt;sorted map&lt;/a&gt; or as elements in a &lt;a href=&quot;../util/sortedset&quot;&gt;sorted set&lt;/a&gt;, without the need to specify a &lt;a href=&quot;../util/comparator&quot;&gt;comparator&lt;/a&gt;.</source>
          <target state="translated">이 인터페이스를 구현하는 객체의 목록 (및 배열)은 &lt;a href=&quot;../util/collections#sort-java.util.List-&quot;&gt; &lt;code&gt;Collections.sort&lt;/code&gt; &lt;/a&gt; (및 &lt;a href=&quot;../util/arrays#sort-java.lang.Object:A-&quot;&gt; &lt;code&gt;Arrays.sort&lt;/code&gt; &lt;/a&gt; )로 자동 정렬 할 수 있습니다 . 이 인터페이스를 구현하는 객체 는 &lt;a href=&quot;../util/comparator&quot;&gt;비교기&lt;/a&gt; 를 지정할 필요없이 &lt;a href=&quot;../util/sortedset&quot;&gt;정렬 &lt;/a&gt;&lt;a href=&quot;../util/sortedmap&quot;&gt;된 맵의&lt;/a&gt; 키 또는 정렬 된 세트의 요소 로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c72f8d1c24ee261405afc826484cfeae5b3b7d84" translate="yes" xml:space="preserve">
          <source>Lists all file objects matching the given criteria in the given location. List file objects in &quot;subpackages&quot; if recurse is true.</source>
          <target state="translated">주어진 위치에서 주어진 기준과 일치하는 모든 파일 객체를 나열합니다. 재귀가 참이면 &quot;하위 패키지&quot;에 파일 객체를 나열합니다.</target>
        </trans-unit>
        <trans-unit id="564905151ae25bfefdc3aaabcde077d9c5b8dc6e" translate="yes" xml:space="preserve">
          <source>Lists all file objects matching the given criteria in the given package-oriented location.</source>
          <target state="translated">Lists all file objects matching the given criteria in the given package-oriented location.</target>
        </trans-unit>
        <trans-unit id="b808558fda64fb70c0505395f807e4dfa59930ea" translate="yes" xml:space="preserve">
          <source>Lists all file objects matching the given criteria in the given package-oriented location. List file objects in &quot;subpackages&quot; if recurse is true.</source>
          <target state="translated">Lists all file objects matching the given criteria in the given package-oriented location. List file objects in &quot;subpackages&quot; if recurse is true.</target>
        </trans-unit>
        <trans-unit id="58bc9776f1f5c9bb209a1ed6e015019246ae1529" translate="yes" xml:space="preserve">
          <source>Lists all printing attributes as described above</source>
          <target state="translated">Lists all printing attributes as described above</target>
        </trans-unit>
        <trans-unit id="9bfe52408f7f19a186d40fe8bde0d76004a3d10e" translate="yes" xml:space="preserve">
          <source>Lists all target VMs which are connected to the debugger.</source>
          <target state="translated">디버거에 연결된 모든 대상 VM을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="4e56617aefba9f02c95a8b1c9f4bbf067bc61d24" translate="yes" xml:space="preserve">
          <source>Lists all target VMs which are connected to the debugger. The list includes &lt;a href=&quot;virtualmachine&quot;&gt;&lt;code&gt;VirtualMachine&lt;/code&gt;&lt;/a&gt; instances for any target VMs which initiated a connection and any target VMs to which this manager has initiated a connection. A target VM will remain in this list until the VM is disconnected. &lt;a href=&quot;event/vmdisconnectevent&quot;&gt;&lt;code&gt;VMDisconnectEvent&lt;/code&gt;&lt;/a&gt; is placed in the event queue after the VM is removed from the list.</source>
          <target state="translated">디버거에 연결된 모든 대상 VM을 나열합니다. 목록에는 연결을 시작한 대상 VM과이 관리자가 연결을 시작한 대상 VM에 대한 &lt;a href=&quot;virtualmachine&quot;&gt; &lt;code&gt;VirtualMachine&lt;/code&gt; &lt;/a&gt; 인스턴스가 포함됩니다 . 대상 VM은 VM 연결이 끊어 질 때까지이 목록에 남아 있습니다. &lt;a href=&quot;event/vmdisconnectevent&quot;&gt; &lt;code&gt;VMDisconnectEvent&lt;/code&gt; &lt;/a&gt; 는 VM이 ​​목록에서 제거 된 후 이벤트 큐에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="ea1f62b300873a3e888aa2c127dcac134b9a8dd9" translate="yes" xml:space="preserve">
          <source>Lists all the alias names of this keystore.</source>
          <target state="translated">이 키 스토어의 별명을 모두 나열합니다.</target>
        </trans-unit>
        <trans-unit id="2a543225f5fd96be9c05c2ed0309c7ae5d0cefae" translate="yes" xml:space="preserve">
          <source>Lists all the locales that are supported.</source>
          <target state="translated">지원되는 모든 로케일을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="ee2deac880b84efa67c4b2a0de437f0857ce30bf" translate="yes" xml:space="preserve">
          <source>Lists asynchronous channels and their descriptions</source>
          <target state="translated">Lists asynchronous channels and their descriptions</target>
        </trans-unit>
        <trans-unit id="dfad21aa8dfba61cc86071cc93781ce6277a8c5a" translate="yes" xml:space="preserve">
          <source>Lists channels and their descriptions</source>
          <target state="translated">Lists channels and their descriptions</target>
        </trans-unit>
        <trans-unit id="73ff85812b51e1601a75e7c040ed9461072dcba3" translate="yes" xml:space="preserve">
          <source>Lists file channels and their descriptions</source>
          <target state="translated">Lists file channels and their descriptions</target>
        </trans-unit>
        <trans-unit id="d089a35c0ec1b893bd4a6fd68f30896fa10fa42e" translate="yes" xml:space="preserve">
          <source>Lists multiplexed, non-blocking channels and their descriptions</source>
          <target state="translated">Lists multiplexed, non-blocking channels and their descriptions</target>
        </trans-unit>
        <trans-unit id="af3b4c75532bf3fdf22186041ff98ac2c54eefa8" translate="yes" xml:space="preserve">
          <source>Lists of format names, file suffixes, and MIME types associated with the service may be obtained by means of the &lt;code&gt;getFormatNames&lt;/code&gt;, &lt;code&gt;getFileSuffixes&lt;/code&gt;, and &lt;code&gt;getMIMEType&lt;/code&gt; methods. These methods may be used to identify candidate &lt;code&gt;ImageWriter&lt;/code&gt;s for writing a particular file or stream based on manual format selection, file naming, or MIME associations.</source>
          <target state="translated">서비스와 연관된 형식 이름, 파일 접미 부 및 MIME 유형 목록은 &lt;code&gt;getFormatNames&lt;/code&gt; , &lt;code&gt;getFileSuffixes&lt;/code&gt; 및 &lt;code&gt;getMIMEType&lt;/code&gt; 메소드를 통해 얻을 수 있습니다 . 이러한 방법은 수동 형식 선택, 파일 이름 지정 또는 MIME 연결을 기반으로 특정 파일 또는 스트림을 작성 하기위한 후보 &lt;code&gt;ImageWriter&lt;/code&gt; 를 식별하는 데 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc15977cead4837ca92bcff24d000ddcfb15a0a9" translate="yes" xml:space="preserve">
          <source>Lists of format names, file suffixes, and MIME types associated with the service may be obtained by means of the &lt;code&gt;getFormatNames&lt;/code&gt;, &lt;code&gt;getFileSuffixes&lt;/code&gt;, and &lt;code&gt;getMIMETypes&lt;/code&gt; methods. These methods may be used to identify candidate &lt;code&gt;ImageReader&lt;/code&gt;s for decoding a particular file or stream based on manual format selection, file naming, or MIME associations (for example, when accessing a file over HTTP or as an email attachment).</source>
          <target state="translated">서비스와 관련된 형식 이름, 파일 접미사 및 MIME 유형 목록은 &lt;code&gt;getFormatNames&lt;/code&gt; 를 통해 얻을 수 있습니다. , &lt;code&gt;getFileSuffixes&lt;/code&gt; 및 &lt;code&gt;getMIMETypes&lt;/code&gt; 메소드를 . 이러한 방법은 수동 형식 선택, 파일 이름 지정 또는 MIME 연결 (예 : HTTP를 통해 또는 전자 메일 첨부 파일로 파일에 액세스 할 때)을 기반으로 특정 파일 또는 스트림을 디코딩 하기위한 후보 &lt;code&gt;ImageReader&lt;/code&gt; 를 식별하는 데 사용될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8d72a1c820321b37b2cd44b18c2a9a8064b9f393" translate="yes" xml:space="preserve">
          <source>Lists that support this operation may place limitations on what elements may be added to this list. In particular, some lists will refuse to add null elements, and others will impose restrictions on the type of elements that may be added. List classes should clearly specify in their documentation any restrictions on what elements may be added.</source>
          <target state="translated">이 작업을 지원하는 목록은이 목록에 추가 할 수있는 요소를 제한 할 수 있습니다. 특히 일부 목록은 null 요소 추가를 거부하고 다른 목록은 추가 할 수있는 요소 유형에 제한을 부과합니다. 목록 클래스는 추가 할 수있는 요소에 대한 제한 사항을 문서에 명확하게 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="02c9453286889e0560bbd72e8a1bf91b68bcef4c" translate="yes" xml:space="preserve">
          <source>Lists the Java virtual machines known to this provider.</source>
          <target state="translated">이 제공자에게 알려진 JVM (Java Virtual Machine)을 나열합니다.</target>
        </trans-unit>
        <trans-unit id="3e41efe9466acee5d9ea137d3f80ffb544094da1" translate="yes" xml:space="preserve">
          <source>Lists the contents of the module, returning a stream of elements that are the names of all resources in the module.</source>
          <target state="translated">Lists the contents of the module, returning a stream of elements that are the names of all resources in the module.</target>
        </trans-unit>
        <trans-unit id="62c50eaf2c94937be34f06930634d4cf357884d8" translate="yes" xml:space="preserve">
          <source>Lists the contents of the module, returning a stream of elements that are the names of all resources in the module. Whether the stream of elements includes names corresponding to directories in the module is module reader specific.</source>
          <target state="translated">Lists the contents of the module, returning a stream of elements that are the names of all resources in the module. Whether the stream of elements includes names corresponding to directories in the module is module reader specific.</target>
        </trans-unit>
        <trans-unit id="f81cf690496984d2f93a3945e8df0671c385d12a" translate="yes" xml:space="preserve">
          <source>Lists the locations for all the modules in a module-oriented location or an output location.</source>
          <target state="translated">Lists the locations for all the modules in a module-oriented location or an output location.</target>
        </trans-unit>
        <trans-unit id="a294ef16adc828f7b4bd8bb3499808a4bd9ca9d2" translate="yes" xml:space="preserve">
          <source>Lists the locations for all the modules in a module-oriented location or an output location. The locations that are returned will be output locations if the given location is an output, or it will be a package-oriented locations.</source>
          <target state="translated">Lists the locations for all the modules in a module-oriented location or an output location. The locations that are returned will be output locations if the given location is an output, or it will be a package-oriented locations.</target>
        </trans-unit>
        <trans-unit id="aa17540c491cfa1af3a83cac849fe03eade7510f" translate="yes" xml:space="preserve">
          <source>Literal - a text literal</source>
          <target state="translated">리터럴-텍스트 리터럴</target>
        </trans-unit>
        <trans-unit id="d41128d7466666ea32239a9cd35fdfe368ccaac5" translate="yes" xml:space="preserve">
          <source>Literal escape</source>
          <target state="translated">리터럴 탈출</target>
        </trans-unit>
        <trans-unit id="fb7195c4801078e413be30a704f3665bdee97fa5" translate="yes" xml:space="preserve">
          <source>Literal newline between</source>
          <target state="translated">Literal newline between</target>
        </trans-unit>
        <trans-unit id="c23ae9d1dabeec66639685751faffe2f853fe551" translate="yes" xml:space="preserve">
          <source>LiteralTree</source>
          <target state="translated">LiteralTree</target>
        </trans-unit>
        <trans-unit id="fffcec8f7b9073e63a6da3ff9ff8cff409663410" translate="yes" xml:space="preserve">
          <source>Load a class, using the given &lt;a href=&quot;classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt; if the class is not found in this MLet's URLs.</source>
          <target state="translated">Load a class, using the given &lt;a href=&quot;classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; &lt;/a&gt; if the class is not found in this MLet's URLs.</target>
        </trans-unit>
        <trans-unit id="bce462f98eeb37a8b4d63421834eb6a727bd64c0" translate="yes" xml:space="preserve">
          <source>Load a class, using the given &lt;a href=&quot;classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt; if the class is not found in this MLet's URLs. The given ClassLoaderRepository can be null, in which case a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; occurs immediately if the class is not found in this MLet's URLs.</source>
          <target state="translated">Load a class, using the given &lt;a href=&quot;classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; &lt;/a&gt; if the class is not found in this MLet's URLs. The given ClassLoaderRepository can be null, in which case a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; occurs immediately if the class is not found in this MLet's URLs.</target>
        </trans-unit>
        <trans-unit id="9469a7f635b720685d8b2608cbc38445fd3ea572" translate="yes" xml:space="preserve">
          <source>Load a class, using the given &lt;a href=&quot;classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt; if the class is not found in this MLet's URLs. The given ClassLoaderRepository can be null, in which case a &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; occurs immediately if the class is not found in this MLet's URLs.</source>
          <target state="translated">이 MLet의 URL에서 클래스를 찾을 수없는 경우 제공된 &lt;a href=&quot;classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; 를&lt;/a&gt; 사용하여 클래스를로드하십시오 . 주어진 ClassLoaderRepository는 null 일 수 있습니다.&lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; 클래스가이 MLet의 URL에서 발견되지 않으면 즉시 발생합니다.</target>
        </trans-unit>
        <trans-unit id="977631b74d3eddc9fb0c5525171ceb317e2ae9c7" translate="yes" xml:space="preserve">
          <source>Load a native agent library by full pathname.</source>
          <target state="translated">전체 경로 이름으로 네이티브 에이전트 라이브러리를로드합니다.</target>
        </trans-unit>
        <trans-unit id="28a8fac4b1d201e392a6f613ff2950eff4258429" translate="yes" xml:space="preserve">
          <source>Load the first available service provider of this loader's service.</source>
          <target state="translated">Load the first available service provider of this loader's service.</target>
        </trans-unit>
        <trans-unit id="8427c845df4a4e557951573599a8672fec957ea4" translate="yes" xml:space="preserve">
          <source>Load the first available service provider of this loader's service. This convenience method is equivalent to invoking the &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator()&lt;/code&gt;&lt;/a&gt; method and obtaining the first element. It therefore returns the first element from the provider cache if possible, it otherwise attempts to load and instantiate the first provider.</source>
          <target state="translated">Load the first available service provider of this loader's service. This convenience method is equivalent to invoking the &lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator()&lt;/code&gt; &lt;/a&gt; method and obtaining the first element. It therefore returns the first element from the provider cache if possible, it otherwise attempts to load and instantiate the first provider.</target>
        </trans-unit>
        <trans-unit id="658e7b0d855acd0afb5101cf2b9e2c30ebb2faa5" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders, excluding the given one.</source>
          <target state="translated">Load the given class name through the list of class loaders, excluding the given one.</target>
        </trans-unit>
        <trans-unit id="d3d323181aa4fb7b1d6949d86ef162d9a19757e9" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders, excluding the given one. Each ClassLoader in turn from the ClassLoaderRepository, except &lt;code&gt;exclude&lt;/code&gt;, is asked to load the class via its &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt;&lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../../java.base/java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the end of the list is reached, a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Load the given class name through the list of class loaders, excluding the given one. Each ClassLoader in turn from the ClassLoaderRepository, except &lt;code&gt;exclude&lt;/code&gt; , is asked to load the class via its &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt; &lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../../java.base/java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the end of the list is reached, a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="1f23e5b904dd3c0fac045713fd872c9880e690bc" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders, excluding the given one. Each ClassLoader in turn from the ClassLoaderRepository, except &lt;code&gt;exclude&lt;/code&gt;, is asked to load the class via its &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt;&lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the end of the list is reached, a &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">주어진 클래스 이름을 제외하고 클래스 로더 목록을 통해 주어진 클래스 이름을로드하십시오. &lt;code&gt;exclude&lt;/code&gt; 를 제외 하고 ClassLoaderRepository에서 차례로 각 ClassLoader 는 &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 클래스를로드하도록 요청됩니다 . &lt;a href=&quot;../../../java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 객체를 성공적으로 반환하면 이 메서드의 결과입니다. &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; 을&lt;/a&gt; 던지면 다음 ClassLoader로 계속 검색합니다. 다른 예외가 발생하면이 메소드에서 예외가 전파됩니다. 목록의 끝에 도달하면 &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="345b50cce6b16271472ed792f7e98256ff75c2a9" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders, stopping at the given one.</source>
          <target state="translated">Load the given class name through the list of class loaders, stopping at the given one.</target>
        </trans-unit>
        <trans-unit id="af76bce10284474b884f000c4cf71c34d0a91c0d" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders, stopping at the given one. Each ClassLoader in turn from the ClassLoaderRepository is asked to load the class via its &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt;&lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../../java.base/java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the search reaches &lt;code&gt;stop&lt;/code&gt; or the end of the list, a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Load the given class name through the list of class loaders, stopping at the given one. Each ClassLoader in turn from the ClassLoaderRepository is asked to load the class via its &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt; &lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../../java.base/java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the search reaches &lt;code&gt;stop&lt;/code&gt; or the end of the list, a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="7b832557c4e69a1fed3fdcdad81d4fb3eef05927" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders, stopping at the given one. Each ClassLoader in turn from the ClassLoaderRepository is asked to load the class via its &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt;&lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the search reaches &lt;code&gt;stop&lt;/code&gt; or the end of the list, a &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">주어진 클래스 이름을 클래스 로더 목록을 통해로드하고 주어진 클래스 이름에서 중지하십시오. ClassLoaderRepository에서 차례로 각 ClassLoader는 &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 클래스를로드하도록 요청됩니다 . &lt;a href=&quot;../../../java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 객체를 성공적으로 반환하면 이 메서드의 결과입니다. &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; 을&lt;/a&gt; 던지면 다음 ClassLoader로 계속 검색합니다. 다른 예외가 발생하면이 메소드에서 예외가 전파됩니다. 검색이 &lt;code&gt;stop&lt;/code&gt; 또는 목록 끝에 도달하면 &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="af90db68f950d7610de18799f629456deada5471" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders.</source>
          <target state="translated">Load the given class name through the list of class loaders.</target>
        </trans-unit>
        <trans-unit id="e11f7ebfdff1bb3718a7bf2203cb01b0b6f00ce7" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders. Each ClassLoader in turn from the ClassLoaderRepository is asked to load the class via its &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt;&lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt;&lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../../java.base/java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the end of the list is reached, a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">Load the given class name through the list of class loaders. Each ClassLoader in turn from the ClassLoaderRepository is asked to load the class via its &lt;a href=&quot;../../../../java.base/java/lang/classloader#loadClass(java.lang.String)&quot;&gt; &lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt; &lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../../java.base/java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the end of the list is reached, a &lt;a href=&quot;../../../../java.base/java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="e97c76b474b56a0c4e3a424b967cd03791a5a98d" translate="yes" xml:space="preserve">
          <source>Load the given class name through the list of class loaders. Each ClassLoader in turn from the ClassLoaderRepository is asked to load the class via its &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt;&lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt;&lt;/a&gt; method. If it successfully returns a &lt;a href=&quot;../../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object, that is the result of this method. If it throws a &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt;, the search continues with the next ClassLoader. If it throws another exception, the exception is propagated from this method. If the end of the list is reached, a &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">클래스 로더 목록을 통해 주어진 클래스 이름을로드하십시오. ClassLoaderRepository에서 차례로 각 ClassLoader는 &lt;a href=&quot;../../../java/lang/classloader#loadClass-java.lang.String-&quot;&gt; &lt;code&gt;ClassLoader.loadClass(String)&lt;/code&gt; &lt;/a&gt; 메소드 를 통해 클래스를로드하도록 요청됩니다 . &lt;a href=&quot;../../../java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 객체를 성공적으로 반환하면 이 메서드의 결과입니다. &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; 을&lt;/a&gt; 던지면 다음 ClassLoader로 계속 검색합니다. 다른 예외가 발생하면이 메소드에서 예외가 전파됩니다. 목록의 끝에 도달하면 &lt;a href=&quot;../../../java/lang/classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c38861d24c9e6b09eac9871771910eb0e8f9ed83" translate="yes" xml:space="preserve">
          <source>Load the local class equivalent of the specified stream class description.</source>
          <target state="translated">Load the local class equivalent of the specified stream class description.</target>
        </trans-unit>
        <trans-unit id="4a4c9e1e1b00f3be881a46f6171d234a6c95f647" translate="yes" xml:space="preserve">
          <source>Load the local class equivalent of the specified stream class description. Subclasses may implement this method to allow classes to be fetched from an alternate source.</source>
          <target state="translated">지정된 스트림 클래스 설명과 동등한 로컬 클래스를로드하십시오. 서브 클래스는이 메소드를 구현하여 대체 소스에서 클래스를 페치 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f7b92698ac22834c55c5fa77c78ff4a67b119df" translate="yes" xml:space="preserve">
          <source>LoaderDelegate</source>
          <target state="translated">LoaderDelegate</target>
        </trans-unit>
        <trans-unit id="2cc4857f1704a4b9d5da8ba5b91f239c09774e56" translate="yes" xml:space="preserve">
          <source>LoaderHandler</source>
          <target state="translated">LoaderHandler</target>
        </trans-unit>
        <trans-unit id="472c7ff8018c0979faa36f9e6d20685b65f942b2" translate="yes" xml:space="preserve">
          <source>Loading Input Methods</source>
          <target state="translated">Loading Input Methods</target>
        </trans-unit>
        <trans-unit id="bb18ecf29fa9bd5d67e025d4576d247ef8002765" translate="yes" xml:space="preserve">
          <source>Loading agent classes and the modules/classes available to the agent class</source>
          <target state="translated">Loading agent classes and the modules/classes available to the agent class</target>
        </trans-unit>
        <trans-unit id="945e2f8867c9fb2ea7acb5e56e52419d8691e6ca" translate="yes" xml:space="preserve">
          <source>Loads a class from a URL.</source>
          <target state="translated">Loads a class from a URL.</target>
        </trans-unit>
        <trans-unit id="2e4b9ee4fa1a87385555685c9be57c2a1d720521" translate="yes" xml:space="preserve">
          <source>Loads a class from a codebase URL path, optionally using the supplied loader.</source>
          <target state="translated">Loads a class from a codebase URL path, optionally using the supplied loader.</target>
        </trans-unit>
        <trans-unit id="25ddd2024f629eb1d61bd0d9bab74ec821aef35f" translate="yes" xml:space="preserve">
          <source>Loads a class from a codebase URL path, optionally using the supplied loader. This method should be used when the caller would like to make available to the provider implementation an additional contextual class loader to consider, such as the loader of a caller on the stack. Typically, a provider implementation will attempt to resolve the named class using the given &lt;code&gt;defaultLoader&lt;/code&gt;, if specified, before attempting to resolve the class from the codebase URL path.</source>
          <target state="translated">Loads a class from a codebase URL path, optionally using the supplied loader. This method should be used when the caller would like to make available to the provider implementation an additional contextual class loader to consider, such as the loader of a caller on the stack. Typically, a provider implementation will attempt to resolve the named class using the given &lt;code&gt;defaultLoader&lt;/code&gt; , if specified, before attempting to resolve the class from the codebase URL path.</target>
        </trans-unit>
        <trans-unit id="8079956628d84b1fd93def1d73ca86c9fdbf78c9" translate="yes" xml:space="preserve">
          <source>Loads a class from a codebase URL path.</source>
          <target state="translated">Loads a class from a codebase URL path.</target>
        </trans-unit>
        <trans-unit id="cd4b2b9daf134f650c2d3d3a87876fa5ea5a0a31" translate="yes" xml:space="preserve">
          <source>Loads a class from a codebase URL.</source>
          <target state="translated">Loads a class from a codebase URL.</target>
        </trans-unit>
        <trans-unit id="f2a72f4dbb934302a925a5b82327f91d61e9bca8" translate="yes" xml:space="preserve">
          <source>Loads a class from a codebase URL. If &lt;code&gt;codebase&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, then this method will behave the same as &lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;loadClass(String,String)&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;null&lt;/code&gt;&lt;code&gt;codebase&lt;/code&gt; and the given class name.</source>
          <target state="translated">Loads a class from a codebase URL. If &lt;code&gt;codebase&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; , then this method will behave the same as &lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;loadClass(String,String)&lt;/code&gt; &lt;/a&gt; with a &lt;code&gt;null&lt;/code&gt; &lt;code&gt;codebase&lt;/code&gt; and the given class name.</target>
        </trans-unit>
        <trans-unit id="04229e7612c6a41dd56366a4f8153d1325b7576e" translate="yes" xml:space="preserve">
          <source>Loads a class from the location specified by the &lt;code&gt;java.rmi.server.codebase&lt;/code&gt; property.</source>
          <target state="translated">Loads a class from the location specified by the &lt;code&gt;java.rmi.server.codebase&lt;/code&gt; property.</target>
        </trans-unit>
        <trans-unit id="36e49a878b7d43076f1617015398b6d46f601a30" translate="yes" xml:space="preserve">
          <source>Loads a dynamic proxy class (see &lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy&quot;&gt;&lt;code&gt;Proxy&lt;/code&gt;&lt;/a&gt;) that implements a set of interfaces with the given names from a codebase URL path.</source>
          <target state="translated">Loads a dynamic proxy class (see &lt;a href=&quot;../../../../java.base/java/lang/reflect/proxy&quot;&gt; &lt;code&gt;Proxy&lt;/code&gt; &lt;/a&gt;) that implements a set of interfaces with the given names from a codebase URL path.</target>
        </trans-unit>
        <trans-unit id="9d8e102dca2587574f53c25291ad3a2b32c55c90" translate="yes" xml:space="preserve">
          <source>Loads a keymap with a bunch of bindings.</source>
          <target state="translated">Loads a keymap with a bunch of bindings.</target>
        </trans-unit>
        <trans-unit id="96d6c7444c98ebb0088dd684b66cf0033381fc2a" translate="yes" xml:space="preserve">
          <source>Loads a keymap with a bunch of bindings. This can be used to take a static table of definitions and load them into some keymap. The following example illustrates an example of binding some keys to the cut, copy, and paste actions associated with a JTextComponent. A code fragment to accomplish this might look as follows:</source>
          <target state="translated">Loads a keymap with a bunch of bindings. This can be used to take a static table of definitions and load them into some keymap. The following example illustrates an example of binding some keys to the cut, copy, and paste actions associated with a JTextComponent. A code fragment to accomplish this might look as follows:</target>
        </trans-unit>
        <trans-unit id="6196501276a50025a6af41341fab178d5fa57136" translate="yes" xml:space="preserve">
          <source>Loads a set of rules that have been specified in terms of CSS1 grammar.</source>
          <target state="translated">Loads a set of rules that have been specified in terms of CSS1 grammar.</target>
        </trans-unit>
        <trans-unit id="e3c8c8fca2587d1b75c68eb232aa83e84b2b0f8a" translate="yes" xml:space="preserve">
          <source>Loads a set of rules that have been specified in terms of CSS1 grammar. If there are collisions with existing rules, the newly specified rule will win.</source>
          <target state="translated">Loads a set of rules that have been specified in terms of CSS1 grammar. If there are collisions with existing rules, the newly specified rule will win.</target>
        </trans-unit>
        <trans-unit id="785666987f7058256595056a513ed22f937729b5" translate="yes" xml:space="preserve">
          <source>Loads a text file containing MLET tags that define the MBeans to be added to the MBean server.</source>
          <target state="translated">Loads a text file containing MLET tags that define the MBeans to be added to the MBean server.</target>
        </trans-unit>
        <trans-unit id="727a1c4bd962db5d5c6c735da6df8e79d3b8d4b7" translate="yes" xml:space="preserve">
          <source>Loads a text file containing MLET tags that define the MBeans to be added to the MBean server. The location of the text file is specified by a URL. The MBeans specified in the MLET file will be instantiated and registered in the MBean server.</source>
          <target state="translated">MBean 서버에 추가 할 MBean을 정의하는 MLET 태그가 포함 된 텍스트 파일을로드합니다. 텍스트 파일의 위치는 URL로 지정됩니다. MLET 파일에 지정된 MBean이 인스턴스화되고 MBean 서버에 등록됩니다.</target>
        </trans-unit>
        <trans-unit id="27a15151275d5be624a5bf1dbe71ef245e90e6e6" translate="yes" xml:space="preserve">
          <source>Loads a text file containing MLET tags that define the MBeans to be added to the MBean server. The location of the text file is specified by a URL. The text file is read using the UTF-8 encoding. The MBeans specified in the MLET file will be instantiated and registered in the MBean server.</source>
          <target state="translated">MBean 서버에 추가 할 MBean을 정의하는 MLET 태그가 포함 된 텍스트 파일을로드합니다. 텍스트 파일의 위치는 URL로 지정됩니다. 텍스트 파일은 UTF-8 인코딩을 사용하여 읽습니다. MLET 파일에 지정된 MBean이 인스턴스화되고 MBean 서버에 등록됩니다.</target>
        </trans-unit>
        <trans-unit id="609b42d0b7c0a99323dae870a91aaac9c45d490e" translate="yes" xml:space="preserve">
          <source>Loads all catalogs[5].</source>
          <target state="translated">Loads all catalogs[5].</target>
        </trans-unit>
        <trans-unit id="20fc2c68b36cb9b1e0cf4213dd4fe668ef90ae1e" translate="yes" xml:space="preserve">
          <source>Loads all of the children to initialize the view.</source>
          <target state="translated">Loads all of the children to initialize the view.</target>
        </trans-unit>
        <trans-unit id="35c251fbc3fc9e479cd68a353e60023848d2a233" translate="yes" xml:space="preserve">
          <source>Loads all of the children to initialize the view. This is called by the &lt;a href=&quot;#setParent(javax.swing.text.View)&quot;&gt;&lt;code&gt;setParent(javax.swing.text.View)&lt;/code&gt;&lt;/a&gt; method. Subclasses can reimplement this to initialize their child views in a different manner. The default implementation creates a child view for each child element.</source>
          <target state="translated">Loads all of the children to initialize the view. This is called by the &lt;a href=&quot;#setParent(javax.swing.text.View)&quot;&gt; &lt;code&gt;setParent(javax.swing.text.View)&lt;/code&gt; &lt;/a&gt; method. Subclasses can reimplement this to initialize their child views in a different manner. The default implementation creates a child view for each child element.</target>
        </trans-unit>
        <trans-unit id="e614c1087b421daf10a196f7f32d5a4f9c9db9be" translate="yes" xml:space="preserve">
          <source>Loads all of the children to initialize the view. This is called by the &lt;a href=&quot;#setParent(javax.swing.text.View)&quot;&gt;&lt;code&gt;setParent&lt;/code&gt;&lt;/a&gt; method. Subclasses can reimplement this to initialize their child views in a different manner. The default implementation creates a child view for each child element.</source>
          <target state="translated">Loads all of the children to initialize the view. This is called by the &lt;a href=&quot;#setParent(javax.swing.text.View)&quot;&gt; &lt;code&gt;setParent&lt;/code&gt; &lt;/a&gt; method. Subclasses can reimplement this to initialize their child views in a different manner. The default implementation creates a child view for each child element.</target>
        </trans-unit>
        <trans-unit id="da5ce979cee445ad97136f7f53b878af6f3faa5a" translate="yes" xml:space="preserve">
          <source>Loads all of the children to initialize the view. This is called by the &lt;code&gt;setParent&lt;/code&gt; method. Subclasses can reimplement this to initialize their child views in a different manner. The default implementation creates a child view for each child element.</source>
          <target state="translated">Loads all of the children to initialize the view. This is called by the &lt;code&gt;setParent&lt;/code&gt; method. Subclasses can reimplement this to initialize their child views in a different manner. The default implementation creates a child view for each child element.</target>
        </trans-unit>
        <trans-unit id="2484979590c8d58794faf13559c476c30f0d03b2" translate="yes" xml:space="preserve">
          <source>Loads all of the children to initialize the view. This is called by the &lt;code&gt;setParent&lt;/code&gt; method. This is reimplemented to not load any children directly (as they are created by the zones). This method creates the initial set of zones. Zones don't actually get populated however until an attempt is made to display them or to do model/view coordinate translation.</source>
          <target state="translated">Loads all of the children to initialize the view. This is called by the &lt;code&gt;setParent&lt;/code&gt; method. This is reimplemented to not load any children directly (as they are created by the zones). This method creates the initial set of zones. Zones don't actually get populated however until an attempt is made to display them or to do model/view coordinate translation.</target>
        </trans-unit>
        <trans-unit id="701d39b9e0a700ceb3914005a31f591f78b053e3" translate="yes" xml:space="preserve">
          <source>Loads all of the children to initialize the view. This is called by the &lt;code&gt;setParent&lt;/code&gt; method. This is reimplemented to not load any children directly (as they are created in the process of formatting). If the layoutPool variable is null, an instance of LogicalView is created to represent the logical view that is used in the process of formatting.</source>
          <target state="translated">Loads all of the children to initialize the view. This is called by the &lt;code&gt;setParent&lt;/code&gt; method. This is reimplemented to not load any children directly (as they are created in the process of formatting). If the layoutPool variable is null, an instance of LogicalView is created to represent the logical view that is used in the process of formatting.</target>
        </trans-unit>
        <trans-unit id="51dcece53870b1eeb48f32eeb7e4665fb719599a" translate="yes" xml:space="preserve">
          <source>Loads all of the properties represented by the XML document on the specified input stream into this properties table.</source>
          <target state="translated">지정된 입력 스트림에서 XML 문서로 표시되는 모든 특성을이 특성 테이블로로드합니다.</target>
        </trans-unit>
        <trans-unit id="d2f136032441c2af3277429ed2f1a7ba7c72dd6d" translate="yes" xml:space="preserve">
          <source>Loads alternative catalogs as needed.</source>
          <target state="translated">Loads alternative catalogs as needed.</target>
        </trans-unit>
        <trans-unit id="e0fc415f561d0656f275fa31a8aaa34c8516523d" translate="yes" xml:space="preserve">
          <source>Loads an agent library.</source>
          <target state="translated">에이전트 라이브러리를로드합니다.</target>
        </trans-unit>
        <trans-unit id="87083b88a2090eb0da075cb89c940a9a6896655d" translate="yes" xml:space="preserve">
          <source>Loads an agent.</source>
          <target state="translated">에이전트를로드합니다.</target>
        </trans-unit>
        <trans-unit id="3a1881bcd85845b6051b76684a601b300c1608c3" translate="yes" xml:space="preserve">
          <source>Loads filename map (a mimetable) from a data file.</source>
          <target state="translated">Loads filename map (a mimetable) from a data file.</target>
        </trans-unit>
        <trans-unit id="ae1da7716239378399cffc3cea04b0a5606e7d40" translate="yes" xml:space="preserve">
          <source>Loads filename map (a mimetable) from a data file. It will first try to load the user-specific table, defined by &quot;content.types.user.table&quot; property. If that fails, it tries to load the default built-in table.</source>
          <target state="translated">데이터 파일에서 파일 이름 맵 (모방 가능)을로드합니다. 먼저 &quot;content.types.user.table&quot;속성으로 정의 된 사용자 별 테이블을로드하려고합니다. 실패하면 기본 내장 테이블을로드하려고 시도합니다.</target>
        </trans-unit>
        <trans-unit id="73d54f5c0ac65830b39cc69988a3b601b6f82614" translate="yes" xml:space="preserve">
          <source>Loads onto the &lt;code&gt;Synthesizer&lt;/code&gt; all instruments contained in the specified &lt;code&gt;Soundbank&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;Soundbank&lt;/code&gt; 에 포함 된 모든 악기를 &lt;code&gt;Synthesizer&lt;/code&gt; 로드 합니다 .</target>
        </trans-unit>
        <trans-unit id="9da44c1e93b4fe8d59833105003e2a8e6b7565fc" translate="yes" xml:space="preserve">
          <source>Loads the &lt;code&gt;LookAndFeel&lt;/code&gt; specified by the given class name, using the current thread's context class loader, and passes it to &lt;code&gt;setLookAndFeel(LookAndFeel)&lt;/code&gt;.</source>
          <target state="translated">Loads the &lt;code&gt;LookAndFeel&lt;/code&gt; specified by the given class name, using the current thread's context class loader, and passes it to &lt;code&gt;setLookAndFeel(LookAndFeel)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1a21629a334fe93c37a12fa9db537123452c1378" translate="yes" xml:space="preserve">
          <source>Loads the children based on &lt;code&gt;childValue&lt;/code&gt;.</source>
          <target state="translated">Loads the children based on &lt;code&gt;childValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3fb60082c2be03325cc33d21b252fbb3841e88d5" translate="yes" xml:space="preserve">
          <source>Loads the children based on &lt;code&gt;childValue&lt;/code&gt;. If &lt;code&gt;childValue&lt;/code&gt; is a &lt;code&gt;Vector&lt;/code&gt; or array each element is added as a child, if &lt;code&gt;childValue&lt;/code&gt; is a &lt;code&gt;Hashtable&lt;/code&gt; each key/value pair is added in the order that &lt;code&gt;Enumeration&lt;/code&gt; returns the keys.</source>
          <target state="translated">Loads the children based on &lt;code&gt;childValue&lt;/code&gt; . If &lt;code&gt;childValue&lt;/code&gt; is a &lt;code&gt;Vector&lt;/code&gt; or array each element is added as a child, if &lt;code&gt;childValue&lt;/code&gt; is a &lt;code&gt;Hashtable&lt;/code&gt; each key/value pair is added in the order that &lt;code&gt;Enumeration&lt;/code&gt; returns the keys.</target>
        </trans-unit>
        <trans-unit id="fa92e1ea217d352cc027b5054a997c2eb7ec4117" translate="yes" xml:space="preserve">
          <source>Loads the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;.</source>
          <target state="translated">Loads the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="59854fe197fd775c3c0853c83d4b0f8c45c6afc2" translate="yes" xml:space="preserve">
          <source>Loads the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;. The default implementation of this method searches for classes in the following order:</source>
          <target state="translated">Loads the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;. The default implementation of this method searches for classes in the following order:</target>
        </trans-unit>
        <trans-unit id="4e098f085977641acd757343c8d7d21a0867b153" translate="yes" xml:space="preserve">
          <source>Loads the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;. This method searches for classes in the same manner as the &lt;a href=&quot;#loadClass(java.lang.String,boolean)&quot;&gt;&lt;code&gt;loadClass(String, boolean)&lt;/code&gt;&lt;/a&gt; method. It is invoked by the Java virtual machine to resolve class references. Invoking this method is equivalent to invoking &lt;a href=&quot;#loadClass(java.lang.String,boolean)&quot;&gt;&lt;code&gt;loadClass(name,
 false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Loads the class with the specified &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt;. This method searches for classes in the same manner as the &lt;a href=&quot;#loadClass(java.lang.String,boolean)&quot;&gt; &lt;code&gt;loadClass(String, boolean)&lt;/code&gt; &lt;/a&gt; method. It is invoked by the Java virtual machine to resolve class references. Invoking this method is equivalent to invoking &lt;a href=&quot;#loadClass(java.lang.String,boolean)&quot;&gt; &lt;code&gt;loadClass(name, false)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="23008203d12b23dee0e597bf4f96db47e96bb80f" translate="yes" xml:space="preserve">
          <source>Loads the class with the specified &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt;. The default implementation of this method searches for classes in the following order:</source>
          <target state="translated">지정된 &lt;a href=&quot;#name&quot;&gt;이진 이름으로&lt;/a&gt; 클래스를로드합니다 . 이 메소드의 기본 구현은 다음 순서로 클래스를 검색합니다.</target>
        </trans-unit>
        <trans-unit id="d662bb835d64e8f4d18945f724326e1ef86c49e9" translate="yes" xml:space="preserve">
          <source>Loads the class with the specified &lt;a href=&quot;#name&quot;&gt;binary name&lt;/a&gt;. This method searches for classes in the same manner as the &lt;a href=&quot;classloader#loadClass-java.lang.String-boolean-&quot;&gt;&lt;code&gt;loadClass(String, boolean)&lt;/code&gt;&lt;/a&gt; method. It is invoked by the Java virtual machine to resolve class references. Invoking this method is equivalent to invoking &lt;a href=&quot;classloader#loadClass-java.lang.String-boolean-&quot;&gt;&lt;code&gt;&lt;code&gt;loadClass(name,
 false)&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;#name&quot;&gt;이진 이름으로&lt;/a&gt; 클래스를로드합니다 . 이 메소드는 &lt;a href=&quot;classloader#loadClass-java.lang.String-boolean-&quot;&gt; &lt;code&gt;loadClass(String, boolean)&lt;/code&gt; &lt;/a&gt; 메소드 와 동일한 방식으로 클래스를 검색합니다 . Java 가상 머신에 의해 호출되어 클래스 참조를 해결합니다. 이 메소드를 호출하는 것은 &lt;a href=&quot;classloader#loadClass-java.lang.String-boolean-&quot;&gt; &lt;code&gt;&lt;code&gt;loadClass(name, false)&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="00313b7bf3ca3ba34d6a8d762d963313d9d997bb" translate="yes" xml:space="preserve">
          <source>Loads the class with the specified &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">Loads the class with the specified &lt;code&gt;name&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a4a64b29d081b2f35a31ac4af6b616d96c96767b" translate="yes" xml:space="preserve">
          <source>Loads the image, returning only when the image is loaded.</source>
          <target state="translated">Loads the image, returning only when the image is loaded.</target>
        </trans-unit>
        <trans-unit id="0aacfd45a97d7357a069d4db4a2bce935e33e14a" translate="yes" xml:space="preserve">
          <source>Loads the instruments referenced by the specified patches, from the specified &lt;code&gt;Soundbank&lt;/code&gt;.</source>
          <target state="translated">Loads the instruments referenced by the specified patches, from the specified &lt;code&gt;Soundbank&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="30078e6ddd9c1f8920d19f9378c8ee5583a27277" translate="yes" xml:space="preserve">
          <source>Loads the instruments referenced by the specified patches, from the specified &lt;code&gt;Soundbank&lt;/code&gt;. Each of the &lt;code&gt;Patch&lt;/code&gt; objects indicates a bank and program number; the &lt;code&gt;Instrument&lt;/code&gt; that has the matching &lt;code&gt;Patch&lt;/code&gt; is loaded into that bank and program location.</source>
          <target state="translated">지정된 &lt;code&gt;Soundbank&lt;/code&gt; 에서 지정된 패치로 참조되는 악기를로드 합니다 . 각 &lt;code&gt;Patch&lt;/code&gt; 객체는 뱅크와 프로그램 번호를 나타냅니다. 일치하는 &lt;code&gt;Patch&lt;/code&gt; 가 있는 &lt;code&gt;Instrument&lt;/code&gt; 가 해당 뱅크 및 프로그램 위치에로드됩니다.</target>
        </trans-unit>
        <trans-unit id="89e9c49d67a086a8903a40759fe1d182ae603eb0" translate="yes" xml:space="preserve">
          <source>Loads the keystore from the given input stream.</source>
          <target state="translated">주어진 입력 스트림에서 키 저장소를로드합니다.</target>
        </trans-unit>
        <trans-unit id="d05e853ecdc5b8e1e89e8dc8a2a38e277de6c7b7" translate="yes" xml:space="preserve">
          <source>Loads the keystore using the given &lt;code&gt;KeyStore.LoadStoreParameter&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;KeyStore.LoadStoreParameter&lt;/code&gt; 를 사용해 키 스토어를로드합니다 .</target>
        </trans-unit>
        <trans-unit id="027dc8829373fd6ff56d51ca11a3549cc2859f55" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the &lt;code&gt;libname&lt;/code&gt; argument.</source>
          <target state="translated">Loads the native library specified by the &lt;code&gt;libname&lt;/code&gt; argument.</target>
        </trans-unit>
        <trans-unit id="c6c5859d25da0d2a2fe2ee3f65751e1f9d3614cb" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the &lt;code&gt;libname&lt;/code&gt; argument. The &lt;code&gt;libname&lt;/code&gt; argument must not contain any platform specific prefix, file extension or path. If a native library called &lt;code&gt;libname&lt;/code&gt; is statically linked with the VM, then the JNI_OnLoad_&lt;code&gt;libname&lt;/code&gt; function exported by the library is invoked. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jni/index.html&quot;&gt; JNI Specification&lt;/a&gt; for more details. Otherwise, the libname argument is loaded from a system library location and mapped to a native library image in an implementation- dependent manner.</source>
          <target state="translated">Loads the native library specified by the &lt;code&gt;libname&lt;/code&gt; argument. The &lt;code&gt;libname&lt;/code&gt; argument must not contain any platform specific prefix, file extension or path. If a native library called &lt;code&gt;libname&lt;/code&gt; is statically linked with the VM, then the JNI_OnLoad_ &lt;code&gt;libname&lt;/code&gt; function exported by the library is invoked. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jni/index.html&quot;&gt; JNI Specification&lt;/a&gt; for more details. Otherwise, the libname argument is loaded from a system library location and mapped to a native library image in an implementation- dependent manner.</target>
        </trans-unit>
        <trans-unit id="ca2982a16eb796f6dd8eb65b563be08d972329a9" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the &lt;code&gt;libname&lt;/code&gt; argument. The &lt;code&gt;libname&lt;/code&gt; argument must not contain any platform specific prefix, file extension or path. If a native library called &lt;code&gt;libname&lt;/code&gt; is statically linked with the VM, then the JNI_OnLoad_&lt;code&gt;libname&lt;/code&gt; function exported by the library is invoked. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jni/index.html&quot;&gt; JNI Specification&lt;/a&gt; for more details. Otherwise, the libname argument is loaded from a system library location and mapped to a native library image in an implementation-dependent manner.</source>
          <target state="translated">&lt;code&gt;libname&lt;/code&gt; 인수로 지정된 기본 라이브러리를로드합니다 . &lt;code&gt;libname&lt;/code&gt; 인수는 플랫폼 특정 접두사, 파일 확장자 또는 경로를 포함 할 수 없습니다. &lt;code&gt;libname&lt;/code&gt; 이라는 네이티브 라이브러리 가 VM과 정적으로 링크 된 경우 라이브러리에서 내 보낸 JNI_OnLoad_ &lt;code&gt;libname&lt;/code&gt; 함수가 호출됩니다. 자세한 내용은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jni/index.html&quot;&gt;JNI 사양&lt;/a&gt; 을 참조하십시오. 그렇지 않으면 libname 인수가 시스템 라이브러리 위치에서로드되고 구현에 따라 달라지는 방식으로 네이티브 라이브러리 이미지에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="2fbd0fe0755eaa272dcd51f896317cf9ac166e52" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the &lt;code&gt;libname&lt;/code&gt; argument. The &lt;code&gt;libname&lt;/code&gt; argument must not contain any platform specific prefix, file extension or path. If a native library called &lt;code&gt;libname&lt;/code&gt; is statically linked with the VM, then the JNI_OnLoad_&lt;code&gt;libname&lt;/code&gt; function exported by the library is invoked. See the JNI Specification for more details. Otherwise, the libname argument is loaded from a system library location and mapped to a native library image in an implementation- dependent manner.</source>
          <target state="translated">&lt;code&gt;libname&lt;/code&gt; 인수로 지정된 기본 라이브러리를로드합니다 . &lt;code&gt;libname&lt;/code&gt; 인수는 플랫폼 특정 접두사, 파일 확장자 또는 경로를 포함 할 수 없습니다. &lt;code&gt;libname&lt;/code&gt; 이라는 기본 라이브러리 가 VM과 정적으로 링크 된 경우 JNI_OnLoad_ &lt;code&gt;libname&lt;/code&gt; 된 경우 라이브러리에서 내 보낸 함수가 호출됩니다. 자세한 내용은 JNI 사양을 참조하십시오. 그렇지 않으면, libname 인수는 시스템 라이브러리 위치에서로드되고 구현 종속 방식으로 기본 라이브러리 이미지에 맵핑됩니다.</target>
        </trans-unit>
        <trans-unit id="823a4a788b1f94f6b27ba48057b02b7772cad47f" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the filename argument.</source>
          <target state="translated">Loads the native library specified by the filename argument.</target>
        </trans-unit>
        <trans-unit id="5f41071d483602d5ad3525d452b2400947b52711" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the filename argument. The filename argument must be an absolute path name. (for example &lt;code&gt;Runtime.getRuntime().load(&quot;/home/avh/lib/libX11.so&quot;);&lt;/code&gt;). If the filename argument, when stripped of any platform-specific library prefix, path, and file extension, indicates a library whose name is, for example, L, and a native library called L is statically linked with the VM, then the JNI_OnLoad_L function exported by the library is invoked rather than attempting to load a dynamic library. A filename matching the argument does not have to exist in the file system. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jni/index.html&quot;&gt; JNI Specification&lt;/a&gt; for more details. Otherwise, the filename argument is mapped to a native library image in an implementation-dependent manner.</source>
          <target state="translated">Loads the native library specified by the filename argument. The filename argument must be an absolute path name. (for example &lt;code&gt;Runtime.getRuntime().load(&quot;/home/avh/lib/libX11.so&quot;);&lt;/code&gt; ). If the filename argument, when stripped of any platform-specific library prefix, path, and file extension, indicates a library whose name is, for example, L, and a native library called L is statically linked with the VM, then the JNI_OnLoad_L function exported by the library is invoked rather than attempting to load a dynamic library. A filename matching the argument does not have to exist in the file system. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jni/index.html&quot;&gt; JNI Specification&lt;/a&gt; for more details. Otherwise, the filename argument is mapped to a native library image in an implementation-dependent manner.</target>
        </trans-unit>
        <trans-unit id="aced88add7c904855d27a29f7b8e154436c15876" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the filename argument. The filename argument must be an absolute path name. (for example &lt;code&gt;Runtime.getRuntime().load(&quot;/home/avh/lib/libX11.so&quot;);&lt;/code&gt;). If the filename argument, when stripped of any platform-specific library prefix, path, and file extension, indicates a library whose name is, for example, L, and a native library called L is statically linked with the VM, then the JNI_OnLoad_L function exported by the library is invoked rather than attempting to load a dynamic library. A filename matching the argument does not have to exist in the file system. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jni/index.html&quot;&gt; JNI Specification&lt;/a&gt; for more details. Otherwise, the filename argument is mapped to a native library image in an implementation-dependent manner.</source>
          <target state="translated">filename 인수로 지정된 네이티브 라이브러리를로드합니다. filename 인수는 절대 경로 이름이어야합니다. (예 : &lt;code&gt;Runtime.getRuntime().load(&quot;/home/avh/lib/libX11.so&quot;);&lt;/code&gt; ). 파일 이름 인수가 플랫폼 별 라이브러리 접두사, 경로 및 파일 확장자를 제거했을 때 이름이 L 인 라이브러리를 나타내며 L이라는 네이티브 라이브러리가 VM과 정적으로 링크 된 경우 JNI_OnLoad_L 함수 동적 라이브러리로드를 시도하지 않고 라이브러리에서 내 보낸 항목이 호출됩니다. 인수와 일치하는 파일 이름이 파일 시스템에 존재할 필요는 없습니다. 자세한 내용은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jni/index.html&quot;&gt;JNI 사양&lt;/a&gt; 을 참조하십시오. 그렇지 않으면 filename 인수는 구현에 따라 달라지는 방식으로 네이티브 라이브러리 이미지에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="b2f13f632b47f9c11fa71496cbeb2c610c91dab7" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the filename argument. The filename argument must be an absolute path name. (for example &lt;code&gt;Runtime.getRuntime().load(&quot;/home/avh/lib/libX11.so&quot;);&lt;/code&gt;). If the filename argument, when stripped of any platform-specific library prefix, path, and file extension, indicates a library whose name is, for example, L, and a native library called L is statically linked with the VM, then the JNI_OnLoad_L function exported by the library is invoked rather than attempting to load a dynamic library. A filename matching the argument does not have to exist in the file system. See the JNI Specification for more details. Otherwise, the filename argument is mapped to a native library image in an implementation-dependent manner.</source>
          <target state="translated">filename 인수로 지정된 기본 라이브러리를로드합니다. filename 인수는 절대 경로 이름이어야합니다. (예 : &lt;code&gt;Runtime.getRuntime().load(&quot;/home/avh/lib/libX11.so&quot;);&lt;/code&gt; ). 플랫폼 별 라이브러리 접두어, 경로 및 파일 확장자를 제거 할 때 filename 인수가 이름이 L 인 라이브러리를 나타내고 L이라는 기본 라이브러리가 VM과 정적으로 링크 된 경우 JNI_OnLoad_L 함수 동적 라이브러리를로드하려고 시도하지 않고 라이브러리에서 내 보냅니다. 인수와 일치하는 파일 이름이 파일 시스템에 존재할 필요는 없습니다. 자세한 내용은 JNI 사양을 참조하십시오. 그렇지 않으면 filename 인수는 구현에 따라 네이티브 라이브러리 이미지에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="e7984e5a7b6d235b676063c8d896cf96221359e5" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the filename argument. The filename argument must be an absolute path name. If the filename argument, when stripped of any platform-specific library prefix, path, and file extension, indicates a library whose name is, for example, L, and a native library called L is statically linked with the VM, then the JNI_OnLoad_L function exported by the library is invoked rather than attempting to load a dynamic library. A filename matching the argument does not have to exist in the file system. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jni/index.html&quot;&gt; JNI Specification&lt;/a&gt; for more details. Otherwise, the filename argument is mapped to a native library image in an implementation-dependent manner.</source>
          <target state="translated">Loads the native library specified by the filename argument. The filename argument must be an absolute path name. If the filename argument, when stripped of any platform-specific library prefix, path, and file extension, indicates a library whose name is, for example, L, and a native library called L is statically linked with the VM, then the JNI_OnLoad_L function exported by the library is invoked rather than attempting to load a dynamic library. A filename matching the argument does not have to exist in the file system. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/specs/jni/index.html&quot;&gt; JNI Specification&lt;/a&gt; for more details. Otherwise, the filename argument is mapped to a native library image in an implementation-dependent manner.</target>
        </trans-unit>
        <trans-unit id="39fb2bfce2e1d047ed82a1af7f71725337a1db44" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the filename argument. The filename argument must be an absolute path name. If the filename argument, when stripped of any platform-specific library prefix, path, and file extension, indicates a library whose name is, for example, L, and a native library called L is statically linked with the VM, then the JNI_OnLoad_L function exported by the library is invoked rather than attempting to load a dynamic library. A filename matching the argument does not have to exist in the file system. See the &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jni/index.html&quot;&gt; JNI Specification&lt;/a&gt; for more details. Otherwise, the filename argument is mapped to a native library image in an implementation-dependent manner.</source>
          <target state="translated">filename 인수로 지정된 네이티브 라이브러리를로드합니다. filename 인수는 절대 경로 이름이어야합니다. 파일 이름 인수가 플랫폼 별 라이브러리 접두사, 경로 및 파일 확장자를 제거했을 때 이름이 L 인 라이브러리를 나타내며 L이라는 네이티브 라이브러리가 VM과 정적으로 링크 된 경우 JNI_OnLoad_L 함수 동적 라이브러리로드를 시도하지 않고 라이브러리에서 내 보낸 항목이 호출됩니다. 인수와 일치하는 파일 이름이 파일 시스템에 존재할 필요는 없습니다. 자세한 내용은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/specs/jni/index.html&quot;&gt;JNI 사양&lt;/a&gt; 을 참조하십시오. 그렇지 않으면 filename 인수는 구현에 따라 달라지는 방식으로 네이티브 라이브러리 이미지에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="5a6c56924d887a5df24871806a75bf01e71ea640" translate="yes" xml:space="preserve">
          <source>Loads the native library specified by the filename argument. The filename argument must be an absolute path name. If the filename argument, when stripped of any platform-specific library prefix, path, and file extension, indicates a library whose name is, for example, L, and a native library called L is statically linked with the VM, then the JNI_OnLoad_L function exported by the library is invoked rather than attempting to load a dynamic library. A filename matching the argument does not have to exist in the file system. See the JNI Specification for more details. Otherwise, the filename argument is mapped to a native library image in an implementation-dependent manner.</source>
          <target state="translated">filename 인수로 지정된 기본 라이브러리를로드합니다. filename 인수는 절대 경로 이름이어야합니다. 플랫폼 별 라이브러리 접두어, 경로 및 파일 확장자를 제거 할 때 filename 인수가 이름이 L 인 라이브러리를 나타내고 L이라는 기본 라이브러리가 VM과 정적으로 링크 된 경우 JNI_OnLoad_L 함수 동적 라이브러리를로드하려고 시도하지 않고 라이브러리에서 내 보냅니다. 인수와 일치하는 파일 이름이 파일 시스템에 존재할 필요는 없습니다. 자세한 내용은 JNI 사양을 참조하십시오. 그렇지 않으면 filename 인수는 구현에 따라 네이티브 라이브러리 이미지에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="d43fc97a57e175c9ef659a36a1656728546c76b4" translate="yes" xml:space="preserve">
          <source>Loads the set of &lt;code&gt;SynthStyle&lt;/code&gt;s that will be used by this &lt;code&gt;SynthLookAndFeel&lt;/code&gt;.</source>
          <target state="translated">Loads the set of &lt;code&gt;SynthStyle&lt;/code&gt; s that will be used by this &lt;code&gt;SynthLookAndFeel&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4d8b9ccb8fd072381c9fb824f02960a12e21ef9f" translate="yes" xml:space="preserve">
          <source>Loads the set of &lt;code&gt;SynthStyle&lt;/code&gt;s that will be used by this &lt;code&gt;SynthLookAndFeel&lt;/code&gt;. &lt;code&gt;resourceBase&lt;/code&gt; is used to resolve any path based resources, for example an &lt;code&gt;Image&lt;/code&gt; would be resolved by &lt;code&gt;resourceBase.getResource(path)&lt;/code&gt;. Refer to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format&lt;/a&gt; for more information.</source>
          <target state="translated">Loads the set of &lt;code&gt;SynthStyle&lt;/code&gt; s that will be used by this &lt;code&gt;SynthLookAndFeel&lt;/code&gt; . &lt;code&gt;resourceBase&lt;/code&gt; is used to resolve any path based resources, for example an &lt;code&gt;Image&lt;/code&gt; would be resolved by &lt;code&gt;resourceBase.getResource(path)&lt;/code&gt; . Refer to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format&lt;/a&gt; for more information.</target>
        </trans-unit>
        <trans-unit id="69a46d759a7088c71733ada0d208a96c27f3ee47" translate="yes" xml:space="preserve">
          <source>Loads the set of &lt;code&gt;SynthStyle&lt;/code&gt;s that will be used by this &lt;code&gt;SynthLookAndFeel&lt;/code&gt;. &lt;code&gt;resourceBase&lt;/code&gt; is used to resolve any path based resources, for example an &lt;code&gt;Image&lt;/code&gt; would be resolved by &lt;code&gt;resourceBase.getResource(path)&lt;/code&gt;. Refer to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format&lt;/a&gt; for more information.</source>
          <target state="translated">이 &lt;code&gt;SynthLookAndFeel&lt;/code&gt; 에서 사용될 &lt;code&gt;SynthStyle&lt;/code&gt; 세트를로드합니다 . &lt;code&gt;resourceBase&lt;/code&gt; 는 모든 경로 기반 리소스를 확인하는 데 사용됩니다. 예를 들어 &lt;code&gt;Image&lt;/code&gt; 는 &lt;code&gt;resourceBase.getResource(path)&lt;/code&gt; 의해 확인됩니다 . 자세한 내용은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth 파일 형식&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ef445b09c2db6bceaa2367d73d24e7a862f4e0a7" translate="yes" xml:space="preserve">
          <source>Loads the set of &lt;code&gt;SynthStyle&lt;/code&gt;s that will be used by this &lt;code&gt;SynthLookAndFeel&lt;/code&gt;. Path based resources are resolved relatively to the specified &lt;code&gt;URL&lt;/code&gt; of the style. For example an &lt;code&gt;Image&lt;/code&gt; would be resolved by &lt;code&gt;new URL(synthFile, path)&lt;/code&gt;. Refer to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format&lt;/a&gt; for more information.</source>
          <target state="translated">Loads the set of &lt;code&gt;SynthStyle&lt;/code&gt; s that will be used by this &lt;code&gt;SynthLookAndFeel&lt;/code&gt; . Path based resources are resolved relatively to the specified &lt;code&gt;URL&lt;/code&gt; of the style. For example an &lt;code&gt;Image&lt;/code&gt; would be resolved by &lt;code&gt;new URL(synthFile, path)&lt;/code&gt; . Refer to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format&lt;/a&gt; for more information.</target>
        </trans-unit>
        <trans-unit id="e1e0b1e5c0ec0336bbf092d6e28c76658b3eb07d" translate="yes" xml:space="preserve">
          <source>Loads the set of &lt;code&gt;SynthStyle&lt;/code&gt;s that will be used by this &lt;code&gt;SynthLookAndFeel&lt;/code&gt;. Path based resources are resolved relatively to the specified &lt;code&gt;URL&lt;/code&gt; of the style. For example an &lt;code&gt;Image&lt;/code&gt; would be resolved by &lt;code&gt;new URL(synthFile, path)&lt;/code&gt;. Refer to &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format&lt;/a&gt; for more information.</source>
          <target state="translated">이 &lt;code&gt;SynthLookAndFeel&lt;/code&gt; 에서 사용될 &lt;code&gt;SynthStyle&lt;/code&gt; 세트를로드합니다 . 경로 기반 리소스는 스타일 의 지정된 &lt;code&gt;URL&lt;/code&gt; 에 상대적으로 확인 됩니다. 예를 들어 &lt;code&gt;Image&lt;/code&gt; 는 &lt;code&gt;new URL(synthFile, path)&lt;/code&gt; 됩니다. 자세한 내용은 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth 파일 형식&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0c757e1fee19ce59a15e83baab1b7a532d129cad" translate="yes" xml:space="preserve">
          <source>Loads this KeyStore from the given input stream.</source>
          <target state="translated">지정된 입력 스트림로부터이 키 스토어를로드합니다.</target>
        </trans-unit>
        <trans-unit id="2921302fa101967d155cee4c42bfb62e65a48166" translate="yes" xml:space="preserve">
          <source>Loads this buffer's content into physical memory.</source>
          <target state="translated">이 버퍼의 내용을 실제 메모리에로드합니다.</target>
        </trans-unit>
        <trans-unit id="261c7b72fa521f57ddf180274784afae1a4d6f0f" translate="yes" xml:space="preserve">
          <source>Loads this keystore using the given &lt;code&gt;LoadStoreParameter&lt;/code&gt;.</source>
          <target state="translated">지정된 &lt;code&gt;LoadStoreParameter&lt;/code&gt; 를 사용해이 키 스토어를로드 합니다 .</target>
        </trans-unit>
        <trans-unit id="2aeedcfd0260aa639712ae88a0e7b0c247a29434" translate="yes" xml:space="preserve">
          <source>Loads this segment's content into physical memory.</source>
          <target state="translated">이 세그먼트의 내용을 실제 메모리로로드합니다.</target>
        </trans-unit>
        <trans-unit id="d85f738a44add74e5e262ee086d2e251576edde4" translate="yes" xml:space="preserve">
          <source>Local change to font.</source>
          <target state="translated">글꼴에 대한 로컬 변경.</target>
        </trans-unit>
        <trans-unit id="f44ace992c81a6728e0427212abc9c8d4a9383f5" translate="yes" xml:space="preserve">
          <source>Local change to font. See the FONT element definition in HTML 4.0. This element is deprecated in HTML 4.0.</source>
          <target state="translated">글꼴에 대한 로컬 변경. HTML 4.0의 FONT 요소 정의를 참조하십시오. 이 요소는 HTML 4.0에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cabdaf4560a1f723610848d646044ec710cf7620" translate="yes" xml:space="preserve">
          <source>Local state is defined as any state associated with a Connection that is local to the current Connection either in the client or the database that is not transparently reproducible.</source>
          <target state="translated">Local state is defined as any state associated with a Connection that is local to the current Connection either in the client or the database that is not transparently reproducible.</target>
        </trans-unit>
        <trans-unit id="71a6a865968d7d4051dd7b61526b62907374868b" translate="yes" xml:space="preserve">
          <source>Local variable declaration</source>
          <target state="translated">지역 변수 선언</target>
        </trans-unit>
        <trans-unit id="7108edd79cd419273bb16ccfa33646c6bc5ae360" translate="yes" xml:space="preserve">
          <source>LocalDate</source>
          <target state="translated">LocalDate</target>
        </trans-unit>
        <trans-unit id="087c4ff7d5d0149ec4aaea679ec48ef46bc3681e" translate="yes" xml:space="preserve">
          <source>LocalDate.adjustInto()</source>
          <target state="translated">LocalDate.adjustInto()</target>
        </trans-unit>
        <trans-unit id="8343e360130d7d351538ec2290ef10a9ab8fc10d" translate="yes" xml:space="preserve">
          <source>LocalDate.atStartOfDay()</source>
          <target state="translated">LocalDate.atStartOfDay()</target>
        </trans-unit>
        <trans-unit id="74e43b3bf9d31628fb13bb05550f5e451ba73348" translate="yes" xml:space="preserve">
          <source>LocalDate.atTime()</source>
          <target state="translated">LocalDate.atTime()</target>
        </trans-unit>
        <trans-unit id="5fc9d0298524001a85f33780126217e9e5ee8c52" translate="yes" xml:space="preserve">
          <source>LocalDate.compareTo()</source>
          <target state="translated">LocalDate.compareTo()</target>
        </trans-unit>
        <trans-unit id="a85c4a56922e16a13c61bd8c9f17ac0a4cdc10ec" translate="yes" xml:space="preserve">
          <source>LocalDate.equals()</source>
          <target state="translated">LocalDate.equals()</target>
        </trans-unit>
        <trans-unit id="c012c5ead40c7b4d757637b103f902d5588a2762" translate="yes" xml:space="preserve">
          <source>LocalDate.format()</source>
          <target state="translated">LocalDate.format()</target>
        </trans-unit>
        <trans-unit id="ae960a0fab47b0f7d4caa1e3b3a104f085fa8c48" translate="yes" xml:space="preserve">
          <source>LocalDate.from()</source>
          <target state="translated">LocalDate.from()</target>
        </trans-unit>
        <trans-unit id="cf9e801a7c95a0c047d42a959edcefd236de23a8" translate="yes" xml:space="preserve">
          <source>LocalDate.get()</source>
          <target state="translated">LocalDate.get()</target>
        </trans-unit>
        <trans-unit id="2c0e40d041803bedc027a0d55129e0fe1116248b" translate="yes" xml:space="preserve">
          <source>LocalDate.getChronology()</source>
          <target state="translated">LocalDate.getChronology()</target>
        </trans-unit>
        <trans-unit id="1796695534df5c7d292039fe6b0b5dfdd510ad81" translate="yes" xml:space="preserve">
          <source>LocalDate.getDayOfMonth()</source>
          <target state="translated">LocalDate.getDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="0e4851d6596b7f40b5aa1bfe448bb3f3d74c0f56" translate="yes" xml:space="preserve">
          <source>LocalDate.getDayOfWeek()</source>
          <target state="translated">LocalDate.getDayOfWeek()</target>
        </trans-unit>
        <trans-unit id="97743e36aae03f9b149db99c7147539e770b4981" translate="yes" xml:space="preserve">
          <source>LocalDate.getDayOfYear()</source>
          <target state="translated">LocalDate.getDayOfYear()</target>
        </trans-unit>
        <trans-unit id="1e8bbff2b73e0139a5e7c1c3d278fec38bf24305" translate="yes" xml:space="preserve">
          <source>LocalDate.getEra()</source>
          <target state="translated">LocalDate.getEra()</target>
        </trans-unit>
        <trans-unit id="f7d7b4b708a9908ab5dc47bc6bef466feaf1fd70" translate="yes" xml:space="preserve">
          <source>LocalDate.getLong()</source>
          <target state="translated">LocalDate.getLong()</target>
        </trans-unit>
        <trans-unit id="6fbced2dd02f23b597cdb572d828ead09d11250a" translate="yes" xml:space="preserve">
          <source>LocalDate.getMonth()</source>
          <target state="translated">LocalDate.getMonth()</target>
        </trans-unit>
        <trans-unit id="a3ac6c3e8f00ced32a0e397a6751f9c06ab94848" translate="yes" xml:space="preserve">
          <source>LocalDate.getMonthValue()</source>
          <target state="translated">LocalDate.getMonthValue()</target>
        </trans-unit>
        <trans-unit id="90529eb88cb6be740bc6d0acde7f5685dc8be466" translate="yes" xml:space="preserve">
          <source>LocalDate.getYear()</source>
          <target state="translated">LocalDate.getYear()</target>
        </trans-unit>
        <trans-unit id="8fb00c640b511e0b942455402d1ac5a191234575" translate="yes" xml:space="preserve">
          <source>LocalDate.hashCode()</source>
          <target state="translated">LocalDate.hashCode()</target>
        </trans-unit>
        <trans-unit id="9b1b535df6bab792fa8c88c5c904e1c1eb999a86" translate="yes" xml:space="preserve">
          <source>LocalDate.isAfter()</source>
          <target state="translated">LocalDate.isAfter()</target>
        </trans-unit>
        <trans-unit id="104753de9bb27906e70851713307a4eafc02473b" translate="yes" xml:space="preserve">
          <source>LocalDate.isBefore()</source>
          <target state="translated">LocalDate.isBefore()</target>
        </trans-unit>
        <trans-unit id="8b2bdc1043360f9155587a4e1186e58ef62fa01e" translate="yes" xml:space="preserve">
          <source>LocalDate.isEqual()</source>
          <target state="translated">LocalDate.isEqual()</target>
        </trans-unit>
        <trans-unit id="966b757e98360d5e950c41b08f370565403f37d8" translate="yes" xml:space="preserve">
          <source>LocalDate.isLeapYear()</source>
          <target state="translated">LocalDate.isLeapYear()</target>
        </trans-unit>
        <trans-unit id="21b33388394208697f945fdc9c95d6a734f8b3e7" translate="yes" xml:space="preserve">
          <source>LocalDate.isSupported()</source>
          <target state="translated">LocalDate.isSupported()</target>
        </trans-unit>
        <trans-unit id="8f86c1b133cd556b969d3068ca2dbc7a845028fb" translate="yes" xml:space="preserve">
          <source>LocalDate.lengthOfMonth()</source>
          <target state="translated">LocalDate.lengthOfMonth()</target>
        </trans-unit>
        <trans-unit id="26e567e8d59556acc86199fa64c6fa6c02ca5bfd" translate="yes" xml:space="preserve">
          <source>LocalDate.lengthOfYear()</source>
          <target state="translated">LocalDate.lengthOfYear()</target>
        </trans-unit>
        <trans-unit id="a8e2618638ae65132002386e11ce95a0181faf48" translate="yes" xml:space="preserve">
          <source>LocalDate.minus()</source>
          <target state="translated">LocalDate.minus()</target>
        </trans-unit>
        <trans-unit id="f7269336ec55529f78dd0469b04dddea9639e7f8" translate="yes" xml:space="preserve">
          <source>LocalDate.minusDays()</source>
          <target state="translated">LocalDate.minusDays()</target>
        </trans-unit>
        <trans-unit id="d119dca31f5e1d5dcb70305a16be97a33950cc48" translate="yes" xml:space="preserve">
          <source>LocalDate.minusMonths()</source>
          <target state="translated">LocalDate.minusMonths()</target>
        </trans-unit>
        <trans-unit id="8c380980b0a294b3d1df8c8db91ebaf87da0fc3e" translate="yes" xml:space="preserve">
          <source>LocalDate.minusWeeks()</source>
          <target state="translated">LocalDate.minusWeeks()</target>
        </trans-unit>
        <trans-unit id="5f544e5e6587bb57a858402aeffa4afd403b7467" translate="yes" xml:space="preserve">
          <source>LocalDate.minusYears()</source>
          <target state="translated">LocalDate.minusYears()</target>
        </trans-unit>
        <trans-unit id="6622d8c43b5f5584ea8295f96649d2c7613689e9" translate="yes" xml:space="preserve">
          <source>LocalDate.now()</source>
          <target state="translated">LocalDate.now()</target>
        </trans-unit>
        <trans-unit id="3becd83c78ed67f80e93323743cd542642c39390" translate="yes" xml:space="preserve">
          <source>LocalDate.of()</source>
          <target state="translated">LocalDate.of()</target>
        </trans-unit>
        <trans-unit id="8460847e7023e89ad6e3e78b4018a7fad28468fb" translate="yes" xml:space="preserve">
          <source>LocalDate.ofEpochDay()</source>
          <target state="translated">LocalDate.ofEpochDay()</target>
        </trans-unit>
        <trans-unit id="767f73bdbca6fd71e1e4170ec7740b4ed0c21908" translate="yes" xml:space="preserve">
          <source>LocalDate.ofYearDay()</source>
          <target state="translated">LocalDate.ofYearDay()</target>
        </trans-unit>
        <trans-unit id="5cd0c72129e0bdd3d30ae0b7797082f68566e643" translate="yes" xml:space="preserve">
          <source>LocalDate.parse()</source>
          <target state="translated">LocalDate.parse()</target>
        </trans-unit>
        <trans-unit id="5bf01f805b5c33e54382e1d60d3ba2dac3641aa0" translate="yes" xml:space="preserve">
          <source>LocalDate.plus()</source>
          <target state="translated">LocalDate.plus()</target>
        </trans-unit>
        <trans-unit id="60c163271fba4bf9653ea1ea379508d79b69a278" translate="yes" xml:space="preserve">
          <source>LocalDate.plusDays()</source>
          <target state="translated">LocalDate.plusDays()</target>
        </trans-unit>
        <trans-unit id="47a0f7409ef24298289eaa4497d65d1dde277014" translate="yes" xml:space="preserve">
          <source>LocalDate.plusMonths()</source>
          <target state="translated">LocalDate.plusMonths()</target>
        </trans-unit>
        <trans-unit id="ccc6d6bc63082ae1a346d074096dab9bc4da6193" translate="yes" xml:space="preserve">
          <source>LocalDate.plusWeeks()</source>
          <target state="translated">LocalDate.plusWeeks()</target>
        </trans-unit>
        <trans-unit id="39e129fb9dd3993fbc1f1f8435098ed5b5ab11a5" translate="yes" xml:space="preserve">
          <source>LocalDate.plusYears()</source>
          <target state="translated">LocalDate.plusYears()</target>
        </trans-unit>
        <trans-unit id="75209b9c6be6b708716e8b56e818a2e96b227160" translate="yes" xml:space="preserve">
          <source>LocalDate.query()</source>
          <target state="translated">LocalDate.query()</target>
        </trans-unit>
        <trans-unit id="f1ae54f72a7fcfc447781b1b12ceab8d6a901a15" translate="yes" xml:space="preserve">
          <source>LocalDate.range()</source>
          <target state="translated">LocalDate.range()</target>
        </trans-unit>
        <trans-unit id="404f23f315db048c64f45b4a1db2bb17d43bda47" translate="yes" xml:space="preserve">
          <source>LocalDate.toEpochDay()</source>
          <target state="translated">LocalDate.toEpochDay()</target>
        </trans-unit>
        <trans-unit id="4102079a48fc09f9067fabc53c161af5093ba72e" translate="yes" xml:space="preserve">
          <source>LocalDate.toString()</source>
          <target state="translated">LocalDate.toString()</target>
        </trans-unit>
        <trans-unit id="505e57d8abb889726027219aa7c048c51f0a55be" translate="yes" xml:space="preserve">
          <source>LocalDate.until()</source>
          <target state="translated">LocalDate.until()</target>
        </trans-unit>
        <trans-unit id="2260aa0e31684df9abe863264c95442e4003212d" translate="yes" xml:space="preserve">
          <source>LocalDate.with()</source>
          <target state="translated">LocalDate.with()</target>
        </trans-unit>
        <trans-unit id="ab3710c8a83a4505592af325b2c66943c66810aa" translate="yes" xml:space="preserve">
          <source>LocalDate.withDayOfMonth()</source>
          <target state="translated">LocalDate.withDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="ef6e1793f9dfcb452fafb95a1ce9fda0fe723b2a" translate="yes" xml:space="preserve">
          <source>LocalDate.withDayOfYear()</source>
          <target state="translated">LocalDate.withDayOfYear()</target>
        </trans-unit>
        <trans-unit id="2550a33355e7fbd3fa64c7c9c234df9e537829fd" translate="yes" xml:space="preserve">
          <source>LocalDate.withMonth()</source>
          <target state="translated">LocalDate.withMonth()</target>
        </trans-unit>
        <trans-unit id="9e8e1e4a0a17b41fdcf63f9008f068695127de9f" translate="yes" xml:space="preserve">
          <source>LocalDate.withYear()</source>
          <target state="translated">LocalDate.withYear()</target>
        </trans-unit>
        <trans-unit id="5f5fbc92aa09673c24f21ed0f797dcb8377f5be7" translate="yes" xml:space="preserve">
          <source>LocalDateTime</source>
          <target state="translated">LocalDateTime</target>
        </trans-unit>
        <trans-unit id="dfdc49741d10c06d383da415c9e903fa0bf5ced6" translate="yes" xml:space="preserve">
          <source>LocalDateTime.adjustInto()</source>
          <target state="translated">LocalDateTime.adjustInto()</target>
        </trans-unit>
        <trans-unit id="c75a3cc696254575da88106fde9c5214a7f407a0" translate="yes" xml:space="preserve">
          <source>LocalDateTime.atOffset()</source>
          <target state="translated">LocalDateTime.atOffset()</target>
        </trans-unit>
        <trans-unit id="59f4cac7877e4bcf4c60810fb3c99cfd6784e079" translate="yes" xml:space="preserve">
          <source>LocalDateTime.atZone()</source>
          <target state="translated">LocalDateTime.atZone()</target>
        </trans-unit>
        <trans-unit id="da29f8384558d634262ad8a2ce64067bc460b32d" translate="yes" xml:space="preserve">
          <source>LocalDateTime.compareTo()</source>
          <target state="translated">LocalDateTime.compareTo()</target>
        </trans-unit>
        <trans-unit id="ead187b775600893e0e1b987fd730653154dc810" translate="yes" xml:space="preserve">
          <source>LocalDateTime.equals()</source>
          <target state="translated">LocalDateTime.equals()</target>
        </trans-unit>
        <trans-unit id="b3bbff4dbeb3a91071536777eba6cfd0a5f8f1d4" translate="yes" xml:space="preserve">
          <source>LocalDateTime.format()</source>
          <target state="translated">LocalDateTime.format()</target>
        </trans-unit>
        <trans-unit id="d51bd34dd019331f8b7efbcdd92cd09bc5c5fff8" translate="yes" xml:space="preserve">
          <source>LocalDateTime.from()</source>
          <target state="translated">LocalDateTime.from()</target>
        </trans-unit>
        <trans-unit id="b9678cf52ab36d0df87b340b5cf89f58fff173e5" translate="yes" xml:space="preserve">
          <source>LocalDateTime.get()</source>
          <target state="translated">LocalDateTime.get()</target>
        </trans-unit>
        <trans-unit id="fa96cc722c36ae1bca512b5f57d128688869b408" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getDayOfMonth()</source>
          <target state="translated">LocalDateTime.getDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="fa5236e87d05ffc9d00385909a5848fd17ef6ce1" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getDayOfWeek()</source>
          <target state="translated">LocalDateTime.getDayOfWeek()</target>
        </trans-unit>
        <trans-unit id="d991e833b9ff567bedff4a42509fb7e75c2802e9" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getDayOfYear()</source>
          <target state="translated">LocalDateTime.getDayOfYear()</target>
        </trans-unit>
        <trans-unit id="1d66fc1316c3ca0dc18f29cd37bb5b87b7e714d5" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getHour()</source>
          <target state="translated">LocalDateTime.getHour()</target>
        </trans-unit>
        <trans-unit id="629c8bf69c9a31538eac970d91b8dc17299dd6c0" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getLong()</source>
          <target state="translated">LocalDateTime.getLong()</target>
        </trans-unit>
        <trans-unit id="d8cf94ec0fbef8afa1074d4e32813a67041e771e" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getMinute()</source>
          <target state="translated">LocalDateTime.getMinute()</target>
        </trans-unit>
        <trans-unit id="ba307f1ec5fcb0810b411567a95e1497778b204b" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getMonth()</source>
          <target state="translated">LocalDateTime.getMonth()</target>
        </trans-unit>
        <trans-unit id="d15e9ab0a56a0725fbe29a11dcadada59ae1de0c" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getMonthValue()</source>
          <target state="translated">LocalDateTime.getMonthValue()</target>
        </trans-unit>
        <trans-unit id="0da1b9f7e16544a45af994c29592474a8120c248" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getNano()</source>
          <target state="translated">LocalDateTime.getNano()</target>
        </trans-unit>
        <trans-unit id="d4920d0484026d3dd04a430c47344595b17b62c3" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getSecond()</source>
          <target state="translated">LocalDateTime.getSecond()</target>
        </trans-unit>
        <trans-unit id="d471f9de255185e1c37427ecf10185db5c840500" translate="yes" xml:space="preserve">
          <source>LocalDateTime.getYear()</source>
          <target state="translated">LocalDateTime.getYear()</target>
        </trans-unit>
        <trans-unit id="b2a5a218f8f83984cb6e37aadf6ea230406cb9dc" translate="yes" xml:space="preserve">
          <source>LocalDateTime.hashCode()</source>
          <target state="translated">LocalDateTime.hashCode()</target>
        </trans-unit>
        <trans-unit id="9e64af14fb5e205db60ce0e495ceab9f62e8f5d5" translate="yes" xml:space="preserve">
          <source>LocalDateTime.isAfter()</source>
          <target state="translated">LocalDateTime.isAfter()</target>
        </trans-unit>
        <trans-unit id="97f2bf8c22d4947ecc1ab35a81054c2876ea3f84" translate="yes" xml:space="preserve">
          <source>LocalDateTime.isBefore()</source>
          <target state="translated">LocalDateTime.isBefore()</target>
        </trans-unit>
        <trans-unit id="865eb51f28c5bbe661610bee105d06fa23270e25" translate="yes" xml:space="preserve">
          <source>LocalDateTime.isEqual()</source>
          <target state="translated">LocalDateTime.isEqual()</target>
        </trans-unit>
        <trans-unit id="b777c50f4e156e09184880c17df2100c7ede04d9" translate="yes" xml:space="preserve">
          <source>LocalDateTime.isSupported()</source>
          <target state="translated">LocalDateTime.isSupported()</target>
        </trans-unit>
        <trans-unit id="89122c727d65be4d570eff1cd30f3e370381b1df" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minus()</source>
          <target state="translated">LocalDateTime.minus()</target>
        </trans-unit>
        <trans-unit id="dbea58bda6f6f5ee8584cb8f6827df435de2d4ff" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minusDays()</source>
          <target state="translated">LocalDateTime.minusDays()</target>
        </trans-unit>
        <trans-unit id="e626cabb8e081a3c64a90771e90769527b0fc466" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minusHours()</source>
          <target state="translated">LocalDateTime.minusHours()</target>
        </trans-unit>
        <trans-unit id="61ab7b3bdb91f3d4a569cd9117a1dca9d54a96f4" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minusMinutes()</source>
          <target state="translated">LocalDateTime.minusMinutes()</target>
        </trans-unit>
        <trans-unit id="b0355f445909d8447c0f8a22dcbc0aa389829444" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minusMonths()</source>
          <target state="translated">LocalDateTime.minusMonths()</target>
        </trans-unit>
        <trans-unit id="f40fe4b5003ec78ca4f0871895ff4e864e8711d3" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minusNanos()</source>
          <target state="translated">LocalDateTime.minusNanos()</target>
        </trans-unit>
        <trans-unit id="2b46f4efe2d28aa545aa24095fa70176d51161e4" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minusSeconds()</source>
          <target state="translated">LocalDateTime.minusSeconds()</target>
        </trans-unit>
        <trans-unit id="c2def8998d79b247d08d4b2ad4da058895f0d717" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minusWeeks()</source>
          <target state="translated">LocalDateTime.minusWeeks()</target>
        </trans-unit>
        <trans-unit id="26c6aa1d24669fac2960d588fab602f76c0de079" translate="yes" xml:space="preserve">
          <source>LocalDateTime.minusYears()</source>
          <target state="translated">LocalDateTime.minusYears()</target>
        </trans-unit>
        <trans-unit id="436d3a5cd66b5240585ce45e6892b4332f98c41e" translate="yes" xml:space="preserve">
          <source>LocalDateTime.now()</source>
          <target state="translated">LocalDateTime.now()</target>
        </trans-unit>
        <trans-unit id="1c1280fede904868e631f0ef600462726c8023e4" translate="yes" xml:space="preserve">
          <source>LocalDateTime.of()</source>
          <target state="translated">LocalDateTime.of()</target>
        </trans-unit>
        <trans-unit id="c67a4741118107310522de71072546df17c594d9" translate="yes" xml:space="preserve">
          <source>LocalDateTime.ofEpochSecond()</source>
          <target state="translated">LocalDateTime.ofEpochSecond()</target>
        </trans-unit>
        <trans-unit id="76a35b37dead8285202f94a2736a20d01a429f21" translate="yes" xml:space="preserve">
          <source>LocalDateTime.ofInstant()</source>
          <target state="translated">LocalDateTime.ofInstant()</target>
        </trans-unit>
        <trans-unit id="f66ed82d969993f34715a922cf310d51dc86c6fd" translate="yes" xml:space="preserve">
          <source>LocalDateTime.parse()</source>
          <target state="translated">LocalDateTime.parse()</target>
        </trans-unit>
        <trans-unit id="a5ce7216f7b3398aa6eab936eff0a19d046210bd" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plus()</source>
          <target state="translated">LocalDateTime.plus()</target>
        </trans-unit>
        <trans-unit id="ba0a36f168f0bb6f7ec87b4587f67814dc190b5d" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plusDays()</source>
          <target state="translated">LocalDateTime.plusDays()</target>
        </trans-unit>
        <trans-unit id="b694b701a34f16cc15b74789b3485ba4c4bd2d1f" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plusHours()</source>
          <target state="translated">LocalDateTime.plusHours()</target>
        </trans-unit>
        <trans-unit id="b3ffe3e6729c3ab363f13595512e86f47cdd3164" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plusMinutes()</source>
          <target state="translated">LocalDateTime.plusMinutes()</target>
        </trans-unit>
        <trans-unit id="78738327ede1762f3ef3b4b808c5a8e140195ec9" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plusMonths()</source>
          <target state="translated">LocalDateTime.plusMonths()</target>
        </trans-unit>
        <trans-unit id="00ec6e91931df177166b26e766fc506b11af04fe" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plusNanos()</source>
          <target state="translated">LocalDateTime.plusNanos()</target>
        </trans-unit>
        <trans-unit id="d7059a474134fcde156dc6d8cef80755c505624c" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plusSeconds()</source>
          <target state="translated">LocalDateTime.plusSeconds()</target>
        </trans-unit>
        <trans-unit id="729c2d9a2582138c19d768c106196b968a670908" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plusWeeks()</source>
          <target state="translated">LocalDateTime.plusWeeks()</target>
        </trans-unit>
        <trans-unit id="39b25f57e2b87bbc52d2f31877c45ea968f10d4c" translate="yes" xml:space="preserve">
          <source>LocalDateTime.plusYears()</source>
          <target state="translated">LocalDateTime.plusYears()</target>
        </trans-unit>
        <trans-unit id="3507cf7574484f4246d3b23dba0f0f1bb73b791e" translate="yes" xml:space="preserve">
          <source>LocalDateTime.query()</source>
          <target state="translated">LocalDateTime.query()</target>
        </trans-unit>
        <trans-unit id="2a05ab0a9ebac298c0ccf30ca90ba1cfe704ce49" translate="yes" xml:space="preserve">
          <source>LocalDateTime.range()</source>
          <target state="translated">LocalDateTime.range()</target>
        </trans-unit>
        <trans-unit id="48d9a49fab1ed1cc472702a5a37fda1f0c6974c3" translate="yes" xml:space="preserve">
          <source>LocalDateTime.toLocalDate()</source>
          <target state="translated">LocalDateTime.toLocalDate()</target>
        </trans-unit>
        <trans-unit id="7b7572ad23b284177a135edbc111271169a44221" translate="yes" xml:space="preserve">
          <source>LocalDateTime.toLocalTime()</source>
          <target state="translated">LocalDateTime.toLocalTime()</target>
        </trans-unit>
        <trans-unit id="7767be4f81afd67f504983d59c16249d28371ea8" translate="yes" xml:space="preserve">
          <source>LocalDateTime.toString()</source>
          <target state="translated">LocalDateTime.toString()</target>
        </trans-unit>
        <trans-unit id="21d24561ff1cfab1bfca94ae4a3cbd25b7c40c0c" translate="yes" xml:space="preserve">
          <source>LocalDateTime.truncatedTo()</source>
          <target state="translated">LocalDateTime.truncatedTo()</target>
        </trans-unit>
        <trans-unit id="1c71c4aa7104135eaee517ef57cb4a075370de14" translate="yes" xml:space="preserve">
          <source>LocalDateTime.until()</source>
          <target state="translated">LocalDateTime.until()</target>
        </trans-unit>
        <trans-unit id="8f30e78516ab90e60399d0d99d5fb618d7246705" translate="yes" xml:space="preserve">
          <source>LocalDateTime.with()</source>
          <target state="translated">LocalDateTime.with()</target>
        </trans-unit>
        <trans-unit id="28d961a092665af37bc153ef166cc8efd6976368" translate="yes" xml:space="preserve">
          <source>LocalDateTime.withDayOfMonth()</source>
          <target state="translated">LocalDateTime.withDayOfMonth()</target>
        </trans-unit>
        <trans-unit id="7a74c1753aafb45cc96493887509ac6964e883c7" translate="yes" xml:space="preserve">
          <source>LocalDateTime.withDayOfYear()</source>
          <target state="translated">LocalDateTime.withDayOfYear()</target>
        </trans-unit>
        <trans-unit id="bdc32eaeb908d6562c487482f6d9aa44f511ad76" translate="yes" xml:space="preserve">
          <source>LocalDateTime.withHour()</source>
          <target state="translated">LocalDateTime.withHour()</target>
        </trans-unit>
        <trans-unit id="b62addd08fa12a30ce8e7d7f482e69d6fc99f9e1" translate="yes" xml:space="preserve">
          <source>LocalDateTime.withMinute()</source>
          <target state="translated">LocalDateTime.withMinute()</target>
        </trans-unit>
        <trans-unit id="2bec4a8db0fa5642d704520797a1b26a13a49ffb" translate="yes" xml:space="preserve">
          <source>LocalDateTime.withMonth()</source>
          <target state="translated">LocalDateTime.withMonth()</target>
        </trans-unit>
        <trans-unit id="07fd5c5fd714ea10fd07157bb95c11fdabe343f3" translate="yes" xml:space="preserve">
          <source>LocalDateTime.withNano()</source>
          <target state="translated">LocalDateTime.withNano()</target>
        </trans-unit>
        <trans-unit id="4bd9131c5639c92df40047ba8271f596f83fda67" translate="yes" xml:space="preserve">
          <source>LocalDateTime.withSecond()</source>
          <target state="translated">LocalDateTime.withSecond()</target>
        </trans-unit>
        <trans-unit id="c5e19927aad5591cefc1d09771f6615c34e60433" translate="yes" xml:space="preserve">
          <source>LocalDateTime.withYear()</source>
          <target state="translated">LocalDateTime.withYear()</target>
        </trans-unit>
        <trans-unit id="3c75895502e44be6868b66878bbbfef5367dc0b0" translate="yes" xml:space="preserve">
          <source>LocalDecimalSeparator</source>
          <target state="translated">LocalDecimalSeparator</target>
        </trans-unit>
        <trans-unit id="cd8f8f2a78389c6677d702ed17c4942a952b9da8" translate="yes" xml:space="preserve">
          <source>LocalExecutionControl</source>
          <target state="translated">LocalExecutionControl</target>
        </trans-unit>
        <trans-unit id="d0859bc8b4de6599b14502c2b611bb075a7f4753" translate="yes" xml:space="preserve">
          <source>LocalExecutionControlProvider</source>
          <target state="translated">LocalExecutionControlProvider</target>
        </trans-unit>
        <trans-unit id="c7409b8146fab43a6144d9f868e62cc581fc2daa" translate="yes" xml:space="preserve">
          <source>LocalGroupSeparator</source>
          <target state="translated">LocalGroupSeparator</target>
        </trans-unit>
        <trans-unit id="d6b1404a9a5f7d9a38210ecdbde2b977a93b409c" translate="yes" xml:space="preserve">
          <source>LocalInfinity</source>
          <target state="translated">LocalInfinity</target>
        </trans-unit>
        <trans-unit id="40d8e5f537e2123950f9b34e993b5a363acf1940" translate="yes" xml:space="preserve">
          <source>LocalNaN</source>
          <target state="translated">LocalNaN</target>
        </trans-unit>
        <trans-unit id="4dd0753daf8e6ea0e093cb1015142ac4c0d5887e" translate="yes" xml:space="preserve">
          <source>LocalNan</source>
          <target state="translated">LocalNan</target>
        </trans-unit>
        <trans-unit id="8d786b8928ffd6e5ce290b020093668ef69d894b" translate="yes" xml:space="preserve">
          <source>LocalNegativePrefix</source>
          <target state="translated">LocalNegativePrefix</target>
        </trans-unit>
        <trans-unit id="f9c753c0bba5382908ea5ac39b093b6c87728ed9" translate="yes" xml:space="preserve">
          <source>LocalNegativeSuffix</source>
          <target state="translated">LocalNegativeSuffix</target>
        </trans-unit>
        <trans-unit id="994191e05a1bb7fe4f53b173cf5d1b6501dec4d2" translate="yes" xml:space="preserve">
          <source>LocalPositivePrefix</source>
          <target state="translated">LocalPositivePrefix</target>
        </trans-unit>
        <trans-unit id="46aea75eb520a0454637a2239beb4d39d7b6770a" translate="yes" xml:space="preserve">
          <source>LocalPositiveSuffix</source>
          <target state="translated">LocalPositiveSuffix</target>
        </trans-unit>
        <trans-unit id="9cb40f7cd87e6348d6d2464d28eeaa1636f17835" translate="yes" xml:space="preserve">
          <source>LocalTime</source>
          <target state="translated">LocalTime</target>
        </trans-unit>
        <trans-unit id="e8808741ecf12e18c397ad9462ba3dbdc483280f" translate="yes" xml:space="preserve">
          <source>LocalTime.adjustInto()</source>
          <target state="translated">LocalTime.adjustInto()</target>
        </trans-unit>
        <trans-unit id="1c7824982c5d35a064166ceb10b84495ebe83d53" translate="yes" xml:space="preserve">
          <source>LocalTime.atDate()</source>
          <target state="translated">LocalTime.atDate()</target>
        </trans-unit>
        <trans-unit id="2ed1dca0ea9fd70ad21f90ec72d0b5f2c0444975" translate="yes" xml:space="preserve">
          <source>LocalTime.atOffset()</source>
          <target state="translated">LocalTime.atOffset()</target>
        </trans-unit>
        <trans-unit id="f0330bba05076ce675234874319e1552aafe6ca0" translate="yes" xml:space="preserve">
          <source>LocalTime.compareTo()</source>
          <target state="translated">LocalTime.compareTo()</target>
        </trans-unit>
        <trans-unit id="44cc8bf7898c91dc233c3252adb44906eb63aa4d" translate="yes" xml:space="preserve">
          <source>LocalTime.equals()</source>
          <target state="translated">LocalTime.equals()</target>
        </trans-unit>
        <trans-unit id="d057cc4360cd0af30f397f80fbf31d595b357748" translate="yes" xml:space="preserve">
          <source>LocalTime.format()</source>
          <target state="translated">LocalTime.format()</target>
        </trans-unit>
        <trans-unit id="7d5f73f35148f14bc39ea1e39d1c01aa336433c2" translate="yes" xml:space="preserve">
          <source>LocalTime.from()</source>
          <target state="translated">LocalTime.from()</target>
        </trans-unit>
        <trans-unit id="577362adf38545d2867c9f3e9cfb20c7a7f73681" translate="yes" xml:space="preserve">
          <source>LocalTime.get()</source>
          <target state="translated">LocalTime.get()</target>
        </trans-unit>
        <trans-unit id="b6f135d24982ec4be87172f7c1022cd340db7fbd" translate="yes" xml:space="preserve">
          <source>LocalTime.getHour()</source>
          <target state="translated">LocalTime.getHour()</target>
        </trans-unit>
        <trans-unit id="d6def79cf77248387eb5c451d70218b8739788a5" translate="yes" xml:space="preserve">
          <source>LocalTime.getLong()</source>
          <target state="translated">LocalTime.getLong()</target>
        </trans-unit>
        <trans-unit id="e910445f5d70be995b2755d7eb34e691827c833b" translate="yes" xml:space="preserve">
          <source>LocalTime.getMinute()</source>
          <target state="translated">LocalTime.getMinute()</target>
        </trans-unit>
        <trans-unit id="4fc68b3dd147597f7caf50ebf9110f02b1ce611d" translate="yes" xml:space="preserve">
          <source>LocalTime.getNano()</source>
          <target state="translated">LocalTime.getNano()</target>
        </trans-unit>
        <trans-unit id="60a3e614b0305083003ef6d7c3df9d62b8127904" translate="yes" xml:space="preserve">
          <source>LocalTime.getSecond()</source>
          <target state="translated">LocalTime.getSecond()</target>
        </trans-unit>
        <trans-unit id="267ae954121c6aa07be0605ba6b2383fc9e4deb7" translate="yes" xml:space="preserve">
          <source>LocalTime.hashCode()</source>
          <target state="translated">LocalTime.hashCode()</target>
        </trans-unit>
        <trans-unit id="c54e4fc62ccad3ec0ea950d8b1ce9facbf0c7c35" translate="yes" xml:space="preserve">
          <source>LocalTime.isAfter()</source>
          <target state="translated">LocalTime.isAfter()</target>
        </trans-unit>
        <trans-unit id="fdf8ed7c582f253df8543d57512ee5d4e5eb4597" translate="yes" xml:space="preserve">
          <source>LocalTime.isBefore()</source>
          <target state="translated">LocalTime.isBefore()</target>
        </trans-unit>
        <trans-unit id="e055d7424d076517f8997f1b0ccf43ea0f3c4ac0" translate="yes" xml:space="preserve">
          <source>LocalTime.isSupported()</source>
          <target state="translated">LocalTime.isSupported()</target>
        </trans-unit>
        <trans-unit id="ec891756942aa65f43d611517d974023590f23d1" translate="yes" xml:space="preserve">
          <source>LocalTime.minus()</source>
          <target state="translated">LocalTime.minus()</target>
        </trans-unit>
        <trans-unit id="6e4f43b8933c1e847136688f836731ee9df4acf8" translate="yes" xml:space="preserve">
          <source>LocalTime.minusHours()</source>
          <target state="translated">LocalTime.minusHours()</target>
        </trans-unit>
        <trans-unit id="143b97f31c6cf6dcbe088810627fb97eca9aaa82" translate="yes" xml:space="preserve">
          <source>LocalTime.minusMinutes()</source>
          <target state="translated">LocalTime.minusMinutes()</target>
        </trans-unit>
        <trans-unit id="647a1d739224e96ed343eee0d094bab2c836cb34" translate="yes" xml:space="preserve">
          <source>LocalTime.minusNanos()</source>
          <target state="translated">LocalTime.minusNanos()</target>
        </trans-unit>
        <trans-unit id="a460128558e56b020387bba334c6e8b028f55990" translate="yes" xml:space="preserve">
          <source>LocalTime.minusSeconds()</source>
          <target state="translated">LocalTime.minusSeconds()</target>
        </trans-unit>
        <trans-unit id="7b8a6797f3978e62963442167a65d25111480fb6" translate="yes" xml:space="preserve">
          <source>LocalTime.now()</source>
          <target state="translated">LocalTime.now()</target>
        </trans-unit>
        <trans-unit id="91f640b82886cbb3b99905c9c3251c0cc705f559" translate="yes" xml:space="preserve">
          <source>LocalTime.of()</source>
          <target state="translated">LocalTime.of()</target>
        </trans-unit>
        <trans-unit id="668b0fba3aa03166c57a33c4563b88522d2a07d3" translate="yes" xml:space="preserve">
          <source>LocalTime.ofNanoOfDay()</source>
          <target state="translated">LocalTime.ofNanoOfDay()</target>
        </trans-unit>
        <trans-unit id="3eb4394e78e255176d45a398865e9deb237a9552" translate="yes" xml:space="preserve">
          <source>LocalTime.ofSecondOfDay()</source>
          <target state="translated">LocalTime.ofSecondOfDay()</target>
        </trans-unit>
        <trans-unit id="a6feaecfe1197297c5645150b298486386b05ddb" translate="yes" xml:space="preserve">
          <source>LocalTime.parse()</source>
          <target state="translated">LocalTime.parse()</target>
        </trans-unit>
        <trans-unit id="94fdaee4b85f85caff15b91c52f81d4edc768b42" translate="yes" xml:space="preserve">
          <source>LocalTime.plus()</source>
          <target state="translated">LocalTime.plus()</target>
        </trans-unit>
        <trans-unit id="d70f7edac7eae46f6cfe060b6aa560b2a9dbd99f" translate="yes" xml:space="preserve">
          <source>LocalTime.plusHours()</source>
          <target state="translated">LocalTime.plusHours()</target>
        </trans-unit>
        <trans-unit id="6edf298c07641438ff0e020fc32188f57ccdde27" translate="yes" xml:space="preserve">
          <source>LocalTime.plusMinutes()</source>
          <target state="translated">LocalTime.plusMinutes()</target>
        </trans-unit>
        <trans-unit id="ad8ae5810bde99124e1bbb90b289ca59c45a7b4a" translate="yes" xml:space="preserve">
          <source>LocalTime.plusNanos()</source>
          <target state="translated">LocalTime.plusNanos()</target>
        </trans-unit>
        <trans-unit id="47f23a2e6be2743fdad11ab507b3fb96da79c24b" translate="yes" xml:space="preserve">
          <source>LocalTime.plusSeconds()</source>
          <target state="translated">LocalTime.plusSeconds()</target>
        </trans-unit>
        <trans-unit id="9390b343e1ba98c00b9aa257793751bbc62437d7" translate="yes" xml:space="preserve">
          <source>LocalTime.query()</source>
          <target state="translated">LocalTime.query()</target>
        </trans-unit>
        <trans-unit id="b9c1434c0959ff4a57bf015627794503e5397380" translate="yes" xml:space="preserve">
          <source>LocalTime.range()</source>
          <target state="translated">LocalTime.range()</target>
        </trans-unit>
        <trans-unit id="0d6415c90042cc5668eedba48fab1dc46317a305" translate="yes" xml:space="preserve">
          <source>LocalTime.toNanoOfDay()</source>
          <target state="translated">LocalTime.toNanoOfDay()</target>
        </trans-unit>
        <trans-unit id="fff38ab5c0df0a8fa4983302dfc58a3f46190257" translate="yes" xml:space="preserve">
          <source>LocalTime.toSecondOfDay()</source>
          <target state="translated">LocalTime.toSecondOfDay()</target>
        </trans-unit>
        <trans-unit id="e99518ff53e7ac3f2f1809fbc4686b271cc8b246" translate="yes" xml:space="preserve">
          <source>LocalTime.toString()</source>
          <target state="translated">LocalTime.toString()</target>
        </trans-unit>
        <trans-unit id="977a0c801de76aa744b7a374625231d5fc97da4d" translate="yes" xml:space="preserve">
          <source>LocalTime.truncatedTo()</source>
          <target state="translated">LocalTime.truncatedTo()</target>
        </trans-unit>
        <trans-unit id="1c321f783d91159217d590941dd8c98bcd3ff113" translate="yes" xml:space="preserve">
          <source>LocalTime.until()</source>
          <target state="translated">LocalTime.until()</target>
        </trans-unit>
        <trans-unit id="42bf4dd305c142ab88274b3baca6a305fd8b1e42" translate="yes" xml:space="preserve">
          <source>LocalTime.with()</source>
          <target state="translated">LocalTime.with()</target>
        </trans-unit>
        <trans-unit id="a730bc743c790caa4974a1b819862f8e661f66e3" translate="yes" xml:space="preserve">
          <source>LocalTime.withHour()</source>
          <target state="translated">LocalTime.withHour()</target>
        </trans-unit>
        <trans-unit id="105f689fbf4254f191e003b1df77bd66cf6c95fa" translate="yes" xml:space="preserve">
          <source>LocalTime.withMinute()</source>
          <target state="translated">LocalTime.withMinute()</target>
        </trans-unit>
        <trans-unit id="3f8f2e5cb771e3b4ae0cffe2425883e9e059ea4f" translate="yes" xml:space="preserve">
          <source>LocalTime.withNano()</source>
          <target state="translated">LocalTime.withNano()</target>
        </trans-unit>
        <trans-unit id="fadaff9c3cbf1c8d52c19e092c9bdb771c70c0e0" translate="yes" xml:space="preserve">
          <source>LocalTime.withSecond()</source>
          <target state="translated">LocalTime.withSecond()</target>
        </trans-unit>
        <trans-unit id="4ccd9ae8f24d15eeda63de4d9df01647d514180f" translate="yes" xml:space="preserve">
          <source>LocalVariable</source>
          <target state="translated">LocalVariable</target>
        </trans-unit>
        <trans-unit id="8970f0e691a0a23a47517698017c997507efd496" translate="yes" xml:space="preserve">
          <source>Locale</source>
          <target state="translated">Locale</target>
        </trans-unit>
        <trans-unit id="61237bfd5226019442d5ea67069f1d703ba3dd9a" translate="yes" xml:space="preserve">
          <source>Locale Constants</source>
          <target state="translated">로케일 상수</target>
        </trans-unit>
        <trans-unit id="1289c157645e650762e71775cb1d92b223d6a49a" translate="yes" xml:space="preserve">
          <source>Locale Matching</source>
          <target state="translated">로케일 일치</target>
        </trans-unit>
        <trans-unit id="b6fe4b6fb4ee6f43b73a4ad131aa0c279ef71640" translate="yes" xml:space="preserve">
          <source>Locale extension, see &lt;a href=&quot;../../util/locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">로캘 확장, &lt;a href=&quot;../../util/locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt; 참조</target>
        </trans-unit>
        <trans-unit id="4287a5bbcd2eb91200cc074a5811700df975a801" translate="yes" xml:space="preserve">
          <source>Locale sensitive factory methods and methods for name retrieval in the &lt;code&gt;java.text&lt;/code&gt; and &lt;code&gt;java.util&lt;/code&gt; packages invoke service provider methods when needed to support the requested locale. The methods first check whether the Java runtime environment itself supports the requested locale, and use its support if available. Otherwise, they call the &lt;a href=&quot;#isSupportedLocale(java.util.Locale)&quot;&gt;&lt;code&gt;isSupportedLocale&lt;/code&gt;&lt;/a&gt; methods of installed providers for the appropriate interface to find one that supports the requested locale. If such a provider is found, its other methods are called to obtain the requested object or name. When checking whether a locale is supported, the &lt;a href=&quot;../locale#def_extensions&quot;&gt; locale's extensions&lt;/a&gt; are ignored by default. (If locale's extensions should also be checked, the &lt;code&gt;isSupportedLocale&lt;/code&gt; method must be overridden.) If neither the Java runtime environment itself nor an installed provider supports the requested locale, the methods go through a list of candidate locales and repeat the availability check for each until a match is found. The algorithm used for creating a list of candidate locales is same as the one used by &lt;code&gt;ResourceBundle&lt;/code&gt; by default (see &lt;a href=&quot;../resourcebundle.control#getCandidateLocales(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;getCandidateLocales&lt;/code&gt;&lt;/a&gt; for the details). Even if a locale is resolved from the candidate list, methods that return requested objects or names are invoked with the original requested locale including &lt;code&gt;Locale&lt;/code&gt; extensions. The Java runtime environment must support the root locale for all locale sensitive services in order to guarantee that this process terminates.</source>
          <target state="translated">Locale sensitive factory methods and methods for name retrieval in the &lt;code&gt;java.text&lt;/code&gt; and &lt;code&gt;java.util&lt;/code&gt; packages invoke service provider methods when needed to support the requested locale. The methods first check whether the Java runtime environment itself supports the requested locale, and use its support if available. Otherwise, they call the &lt;a href=&quot;#isSupportedLocale(java.util.Locale)&quot;&gt; &lt;code&gt;isSupportedLocale&lt;/code&gt; &lt;/a&gt; methods of installed providers for the appropriate interface to find one that supports the requested locale. If such a provider is found, its other methods are called to obtain the requested object or name. When checking whether a locale is supported, the &lt;a href=&quot;../locale#def_extensions&quot;&gt; locale's extensions&lt;/a&gt; are ignored by default. (If locale's extensions should also be checked, the &lt;code&gt;isSupportedLocale&lt;/code&gt; method must be overridden.) If neither the Java runtime environment itself nor an installed provider supports the requested locale, the methods go through a list of candidate locales and repeat the availability check for each until a match is found. The algorithm used for creating a list of candidate locales is same as the one used by &lt;code&gt;ResourceBundle&lt;/code&gt; by default (see &lt;a href=&quot;../resourcebundle.control#getCandidateLocales(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;getCandidateLocales&lt;/code&gt; &lt;/a&gt; for the details). Even if a locale is resolved from the candidate list, methods that return requested objects or names are invoked with the original requested locale including &lt;code&gt;Locale&lt;/code&gt; extensions. The Java runtime environment must support the root locale for all locale sensitive services in order to guarantee that this process terminates.</target>
        </trans-unit>
        <trans-unit id="f090f5825fe693818b3a532132c5f4f57fb9f315" translate="yes" xml:space="preserve">
          <source>Locale sensitive factory methods and methods for name retrieval in the &lt;code&gt;java.text&lt;/code&gt; and &lt;code&gt;java.util&lt;/code&gt; packages invoke service provider methods when needed to support the requested locale. The methods first check whether the Java runtime environment itself supports the requested locale, and use its support if available. Otherwise, they call the &lt;a href=&quot;localeserviceprovider#isSupportedLocale-java.util.Locale-&quot;&gt;&lt;code&gt;isSupportedLocale&lt;/code&gt;&lt;/a&gt; methods of installed providers for the appropriate interface to find one that supports the requested locale. If such a provider is found, its other methods are called to obtain the requested object or name. When checking whether a locale is supported, the &lt;a href=&quot;../locale#def_extensions&quot;&gt; locale's extensions&lt;/a&gt; are ignored by default. (If locale's extensions should also be checked, the &lt;code&gt;isSupportedLocale&lt;/code&gt; method must be overridden.) If neither the Java runtime environment itself nor an installed provider supports the requested locale, the methods go through a list of candidate locales and repeat the availability check for each until a match is found. The algorithm used for creating a list of candidate locales is same as the one used by &lt;code&gt;ResourceBundle&lt;/code&gt; by default (see &lt;a href=&quot;../resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt;&lt;code&gt;getCandidateLocales&lt;/code&gt;&lt;/a&gt; for the details). Even if a locale is resolved from the candidate list, methods that return requested objects or names are invoked with the original requested locale including &lt;code&gt;Locale&lt;/code&gt; extensions. The Java runtime environment must support the root locale for all locale sensitive services in order to guarantee that this process terminates.</source>
          <target state="translated">&lt;code&gt;java.text&lt;/code&gt; 및 &lt;code&gt;java.util&lt;/code&gt; 패키지 에서 이름 검색을위한 로케일 구분 팩토리 메소드 및 메소드 는 요청 된 로케일을 지원해야 할 때 서비스 제공자 메소드를 호출합니다. 메소드는 먼저 Java 런타임 환경 자체가 요청 된 로케일을 지원하는지 확인하고 사용 가능한 경우 해당 지원을 사용합니다. 그렇지 않으면, 적절한 인터페이스에 대해 설치된 제공자 의 &lt;a href=&quot;localeserviceprovider#isSupportedLocale-java.util.Locale-&quot;&gt; &lt;code&gt;isSupportedLocale&lt;/code&gt; &lt;/a&gt; 메소드를 호출 하여 요청 된 로케일을 지원하는 인터페이스를 찾습니다. 그러한 제공자를 찾으면 요청 된 오브젝트 또는 이름을 얻기 위해 다른 메소드가 호출됩니다. 로케일이 지원되는지 여부를 확인하면 &lt;a href=&quot;../locale#def_extensions&quot;&gt;로케일의 확장자&lt;/a&gt; 는 기본적으로 무시됩니다. 로캘의 확장명도 확인해야하는 경우 &lt;code&gt;isSupportedLocale&lt;/code&gt; Java 런타임 환경 자체 또는 설치된 제공자가 요청 된 로케일을 지원하지 않는 경우, 메소드는 후보 로케일 목록을 통과하고 일치 사항이 발견 될 때까지 각각에 대한 가용성 점검을 반복합니다. 후보 로케일 목록을 작성하는 데 사용되는 알고리즘은 기본적 으로 &lt;code&gt;ResourceBundle&lt;/code&gt; 에서 사용하는 알고리즘과 동일 합니다 (자세한 내용 은 &lt;a href=&quot;../resourcebundle.control#getCandidateLocales-java.lang.String-java.util.Locale-&quot;&gt; &lt;code&gt;getCandidateLocales&lt;/code&gt; &lt;/a&gt; 참조). 후보 목록에서 로케일이 분석 되더라도 요청 된 오브젝트 또는 이름을 리턴하는 메소드는 &lt;code&gt;Locale&lt;/code&gt; 확장자를 포함하여 원래 요청 된 로케일로 호출됩니다 . 이 프로세스가 종료되도록하려면 Java 런타임 환경이 모든 로케일 구분 서비스에 대한 루트 로케일을 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="9cb6eacb2fcb4dc4f8b6dd0aba0b10c533fb75bb" translate="yes" xml:space="preserve">
          <source>Locale sensitive service provider interfaces are interfaces that correspond to locale sensitive classes in the &lt;code&gt;java.text&lt;/code&gt; and &lt;code&gt;java.util&lt;/code&gt; packages. The interfaces enable the construction of locale sensitive objects and the retrieval of localized names for these packages. Locale sensitive factory methods and methods for name retrieval in the &lt;code&gt;java.text&lt;/code&gt; and &lt;code&gt;java.util&lt;/code&gt; packages use implementations of the provider interfaces to offer support for locales beyond the set of locales supported by the Java runtime environment itself.</source>
          <target state="translated">로케일 구분 서비스 제공자 인터페이스는 &lt;code&gt;java.text&lt;/code&gt; 및 &lt;code&gt;java.util&lt;/code&gt; 패키지 의 로케일 구분 클래스에 해당하는 인터페이스입니다 . 인터페이스를 통해 로케일 구분 오브젝트를 구성하고 해당 패키지의 현지화 된 이름을 검색 할 수 있습니다. &lt;code&gt;java.text&lt;/code&gt; 및 &lt;code&gt;java.util&lt;/code&gt; 패키지 에서 이름 검색을위한 로케일 구분 팩토리 메소드 및 메소드 는 제공자 인터페이스의 구현을 사용하여 Java 런타임 환경 자체가 지원하는 로케일 세트 이외의 로케일을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="863f8cdf7109664ebb3c98307a12f520a3754083" translate="yes" xml:space="preserve">
          <source>Locale's constructor has always converted three language codes to their earlier, obsoleted forms: &lt;code&gt;he&lt;/code&gt; maps to &lt;code&gt;iw&lt;/code&gt;, &lt;code&gt;yi&lt;/code&gt; maps to &lt;code&gt;ji&lt;/code&gt;, and &lt;code&gt;id&lt;/code&gt; maps to &lt;code&gt;in&lt;/code&gt;. This continues to be the case, in order to not break backwards compatibility.</source>
          <target state="translated">로케일의 생성자는 항상 이전, 폐기 형태로 세 가지 언어 코드를 변환했습니다 &lt;code&gt;he&lt;/code&gt; 매핑 &lt;code&gt;iw&lt;/code&gt; , &lt;code&gt;yi&lt;/code&gt; 에 매핑 &lt;code&gt;ji&lt;/code&gt; , 그리고 &lt;code&gt;id&lt;/code&gt; 매핑 &lt;code&gt;in&lt;/code&gt; . 이전 버전과의 호환성을 유지하지 않기 위해 계속해서 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="243ae215fc31d30ae4fe53e0a5a6dd8551012fdd" translate="yes" xml:space="preserve">
          <source>Locale(&quot;de&quot;, &quot;DE&quot;)</source>
          <target state="translated">로케일 ( &quot;de&quot;, &quot;DE&quot;)</target>
        </trans-unit>
        <trans-unit id="c0be06b40a45b336138a75cd90a28217da13036b" translate="yes" xml:space="preserve">
          <source>Locale(&quot;en&quot;, &quot;US&quot;)</source>
          <target state="translated">로케일 ( &quot;en&quot;, &quot;US&quot;)</target>
        </trans-unit>
        <trans-unit id="86e9c81f7aade762c56e6c4136f2ba7d07dbc61f" translate="yes" xml:space="preserve">
          <source>Locale(&quot;es&quot;, &quot;ES&quot;)</source>
          <target state="translated">로케일 ( &quot;es&quot;, &quot;ES&quot;)</target>
        </trans-unit>
        <trans-unit id="a97655e334ddb4c5487b591ef029614c493b8016" translate="yes" xml:space="preserve">
          <source>Locale(&quot;fr&quot;, &quot;CH&quot;)</source>
          <target state="translated">로케일 ( &quot;fr&quot;, &quot;CH&quot;)</target>
        </trans-unit>
        <trans-unit id="4034a7335c208b4775683b81c9cda7930ea294b9" translate="yes" xml:space="preserve">
          <source>Locale(&quot;fr&quot;, &quot;FR&quot;)</source>
          <target state="translated">로케일 ( &quot;fr&quot;, &quot;FR&quot;)</target>
        </trans-unit>
        <trans-unit id="f1fbe8845594d38db5d5a76bf101327b21ffeb93" translate="yes" xml:space="preserve">
          <source>Locale(&quot;ja&quot;, &quot;JP&quot;, &quot;JP&quot;) is treated as &quot;ja-JP-u-ca-japanese&quot;</source>
          <target state="translated">로케일 ( &quot;ja&quot;, &quot;JP&quot;, &quot;JP&quot;)은 &quot;ja-JP-u-ca-japanese&quot;로 취급됩니다.</target>
        </trans-unit>
        <trans-unit id="992ec2a52350f06318d588b6d466b1ea3a091c5f" translate="yes" xml:space="preserve">
          <source>Locale(&quot;no&quot;, &quot;NO&quot;, &quot;NY&quot;) is treated as &quot;nn-NO&quot;</source>
          <target state="translated">로케일 ( &quot;no&quot;, &quot;NO&quot;, &quot;NY&quot;)은 &quot;nn-NO&quot;로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="f6a87a37786864fb4f05bbc02409c9a40d93cb0b" translate="yes" xml:space="preserve">
          <source>Locale(&quot;th&quot;, &quot;TH&quot;, &quot;TH&quot;) is treated as &quot;th-TH-u-nu-thai&quot;</source>
          <target state="translated">로케일 ( &quot;th&quot;, &quot;TH&quot;, &quot;TH&quot;)은 &quot;th-TH-u-nu-thai&quot;로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="9ad087e0c56b70d5770ff24a313405aab295a699" translate="yes" xml:space="preserve">
          <source>Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getAmPmStrings()&quot;&gt;morning or afternoon&lt;/a&gt; marker in lower case, e.g.&quot;&lt;code&gt;am&lt;/code&gt;&quot; or &quot;&lt;code&gt;pm&lt;/code&gt;&quot;. Use of the conversion prefix &lt;code&gt;'T'&lt;/code&gt; forces this output to upper case.</source>
          <target state="translated">Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getAmPmStrings()&quot;&gt;morning or afternoon&lt;/a&gt; marker in lower case, e.g.&quot; &lt;code&gt;am&lt;/code&gt; &quot; or &quot; &lt;code&gt;pm&lt;/code&gt; &quot;. Use of the conversion prefix &lt;code&gt;'T'&lt;/code&gt; forces this output to upper case.</target>
        </trans-unit>
        <trans-unit id="6eb76f63b721147189c27faaeb4452deb33e08b5" translate="yes" xml:space="preserve">
          <source>Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getAmPmStrings()&quot;&gt;morning or afternoon&lt;/a&gt; marker in lower case, e.g.&quot;&lt;code&gt;am&lt;/code&gt;&quot; or &quot;&lt;code&gt;pm&lt;/code&gt;&quot;. Use of the conversion prefix &lt;code&gt;'T'&lt;/code&gt; forces this output to upper case. (Note that &lt;code&gt;'p'&lt;/code&gt; produces lower-case output. This is different from GNU &lt;code&gt;date&lt;/code&gt; and POSIX &lt;code&gt;strftime(3c)&lt;/code&gt; which produce upper-case output.)</source>
          <target state="translated">Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getAmPmStrings()&quot;&gt;morning or afternoon&lt;/a&gt; marker in lower case, e.g.&quot; &lt;code&gt;am&lt;/code&gt; &quot; or &quot; &lt;code&gt;pm&lt;/code&gt; &quot;. Use of the conversion prefix &lt;code&gt;'T'&lt;/code&gt; forces this output to upper case. (Note that &lt;code&gt;'p'&lt;/code&gt; produces lower-case output. This is different from GNU &lt;code&gt;date&lt;/code&gt; and POSIX &lt;code&gt;strftime(3c)&lt;/code&gt; which produce upper-case output.)</target>
        </trans-unit>
        <trans-unit id="f39dcae9e8a4ca18412d4a664b964241bee0a01d" translate="yes" xml:space="preserve">
          <source>Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getAmPmStrings--&quot;&gt;morning or afternoon&lt;/a&gt; marker in lower case, e.g.&quot;&lt;code&gt;am&lt;/code&gt;&quot; or &quot;&lt;code&gt;pm&lt;/code&gt;&quot;. Use of the conversion prefix &lt;code&gt;'T'&lt;/code&gt; forces this output to upper case.</source>
          <target state="translated">소문자의 로케일 별 &lt;a href=&quot;../text/dateformatsymbols#getAmPmStrings--&quot;&gt;오전 또는 오후&lt;/a&gt; 마커 (예 : &quot; &lt;code&gt;am&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;pm&lt;/code&gt; &quot;). 변환 접두사 &lt;code&gt;'T'&lt;/code&gt; 를 사용하면이 출력이 대문자가됩니다.</target>
        </trans-unit>
        <trans-unit id="f5bef63e4ee4d89d915f489eef5a6b25bd49c187" translate="yes" xml:space="preserve">
          <source>Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getAmPmStrings--&quot;&gt;morning or afternoon&lt;/a&gt; marker in lower case, e.g.&quot;&lt;code&gt;am&lt;/code&gt;&quot; or &quot;&lt;code&gt;pm&lt;/code&gt;&quot;. Use of the conversion prefix &lt;code&gt;'T'&lt;/code&gt; forces this output to upper case. (Note that &lt;code&gt;'p'&lt;/code&gt; produces lower-case output. This is different from GNU &lt;code&gt;date&lt;/code&gt; and POSIX &lt;code&gt;strftime(3c)&lt;/code&gt; which produce upper-case output.)</source>
          <target state="translated">소문자의 로케일 별 &lt;a href=&quot;../text/dateformatsymbols#getAmPmStrings--&quot;&gt;오전 또는 오후&lt;/a&gt; 마커 (예 : &quot; &lt;code&gt;am&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;pm&lt;/code&gt; &quot;). 변환 접두사 &lt;code&gt;'T'&lt;/code&gt; 를 사용하면이 출력이 대문자가됩니다. ( &lt;code&gt;'p'&lt;/code&gt; 는 소문자 출력을 생성합니다. 이것은 대문자 출력을 생성하는 GNU &lt;code&gt;date&lt;/code&gt; 및 POSIX &lt;code&gt;strftime(3c)&lt;/code&gt; 와 다릅니다 .)</target>
        </trans-unit>
        <trans-unit id="dcb4050ac1658c533abe753dc17b497ffa8ee009" translate="yes" xml:space="preserve">
          <source>Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getMonths()&quot;&gt;full month name&lt;/a&gt;, e.g. &lt;code&gt;&quot;January&quot;&lt;/code&gt;, &lt;code&gt;&quot;February&quot;&lt;/code&gt;.</source>
          <target state="translated">Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getMonths()&quot;&gt;full month name&lt;/a&gt;, e.g. &lt;code&gt;&quot;January&quot;&lt;/code&gt; , &lt;code&gt;&quot;February&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18626f22a95760ef08f34af9d16775543bb7bd24" translate="yes" xml:space="preserve">
          <source>Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getMonths--&quot;&gt;full month name&lt;/a&gt;, e.g. &lt;code&gt;&quot;January&quot;&lt;/code&gt;, &lt;code&gt;&quot;February&quot;&lt;/code&gt;.</source>
          <target state="translated">로케일 고유의 &lt;a href=&quot;../text/dateformatsymbols#getMonths--&quot;&gt;전체 월 이름&lt;/a&gt; , 예를 들어 &lt;code&gt;&quot;January&quot;&lt;/code&gt; , &lt;code&gt;&quot;February&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a2bdd2aba9a5f6c5d988110d636cdc5a91042a9b" translate="yes" xml:space="preserve">
          <source>Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getShortMonths()&quot;&gt;abbreviated month name&lt;/a&gt;, e.g. &lt;code&gt;&quot;Jan&quot;&lt;/code&gt;, &lt;code&gt;&quot;Feb&quot;&lt;/code&gt;.</source>
          <target state="translated">Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getShortMonths()&quot;&gt;abbreviated month name&lt;/a&gt;, e.g. &lt;code&gt;&quot;Jan&quot;&lt;/code&gt; , &lt;code&gt;&quot;Feb&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="396f1a408b4c148f44c63807a5067c4e444eb6f3" translate="yes" xml:space="preserve">
          <source>Locale-specific &lt;a href=&quot;../text/dateformatsymbols#getShortMonths--&quot;&gt;abbreviated month name&lt;/a&gt;, e.g. &lt;code&gt;&quot;Jan&quot;&lt;/code&gt;, &lt;code&gt;&quot;Feb&quot;&lt;/code&gt;.</source>
          <target state="translated">로케일 별 &lt;a href=&quot;../text/dateformatsymbols#getShortMonths--&quot;&gt;약식 월 이름&lt;/a&gt; (예 : &lt;code&gt;&quot;Jan&quot;&lt;/code&gt; , &lt;code&gt;&quot;Feb&quot;&lt;/code&gt; ) .</target>
        </trans-unit>
        <trans-unit id="d2d58cdf43e521ac075e3a8fb40465e4478fd7a2" translate="yes" xml:space="preserve">
          <source>Locale-specific full name of the &lt;a href=&quot;../text/dateformatsymbols#getWeekdays()&quot;&gt;day of the week&lt;/a&gt;, e.g. &lt;code&gt;&quot;Sunday&quot;&lt;/code&gt;, &lt;code&gt;&quot;Monday&quot;&lt;/code&gt;</source>
          <target state="translated">Locale-specific full name of the &lt;a href=&quot;../text/dateformatsymbols#getWeekdays()&quot;&gt;day of the week&lt;/a&gt;, e.g. &lt;code&gt;&quot;Sunday&quot;&lt;/code&gt; , &lt;code&gt;&quot;Monday&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b9ce920cbc2a07ed2e914ac9ceee1cf41546b7a2" translate="yes" xml:space="preserve">
          <source>Locale-specific full name of the &lt;a href=&quot;../text/dateformatsymbols#getWeekdays--&quot;&gt;day of the week&lt;/a&gt;, e.g. &lt;code&gt;&quot;Sunday&quot;&lt;/code&gt;, &lt;code&gt;&quot;Monday&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../text/dateformatsymbols#getWeekdays--&quot;&gt;요일의&lt;/a&gt; 로케일 별 전체 이름 ( 예 : &lt;code&gt;&quot;Sunday&quot;&lt;/code&gt; , &lt;code&gt;&quot;Monday&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a174ef1ddf2238e47aef3b6270453ecbb64c5d43" translate="yes" xml:space="preserve">
          <source>Locale-specific short name of the &lt;a href=&quot;../text/dateformatsymbols#getShortWeekdays()&quot;&gt;day of the week&lt;/a&gt;, e.g. &lt;code&gt;&quot;Sun&quot;&lt;/code&gt;, &lt;code&gt;&quot;Mon&quot;&lt;/code&gt;</source>
          <target state="translated">Locale-specific short name of the &lt;a href=&quot;../text/dateformatsymbols#getShortWeekdays()&quot;&gt;day of the week&lt;/a&gt;, e.g. &lt;code&gt;&quot;Sun&quot;&lt;/code&gt; , &lt;code&gt;&quot;Mon&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="df82a835aa03a280dfb47c8ec1b16f048f32958f" translate="yes" xml:space="preserve">
          <source>Locale-specific short name of the &lt;a href=&quot;../text/dateformatsymbols#getShortWeekdays--&quot;&gt;day of the week&lt;/a&gt;, e.g. &lt;code&gt;&quot;Sun&quot;&lt;/code&gt;, &lt;code&gt;&quot;Mon&quot;&lt;/code&gt;</source>
          <target state="translated">&lt;a href=&quot;../text/dateformatsymbols#getShortWeekdays--&quot;&gt;요일의&lt;/a&gt; 로케일 별 짧은 이름 ( 예 : &lt;code&gt;&quot;Sun&quot;&lt;/code&gt; , &lt;code&gt;&quot;Mon&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1157f099a21dd4e871f56628a58ba3a019e3938d" translate="yes" xml:space="preserve">
          <source>Locale.Builder</source>
          <target state="translated">Locale.Builder</target>
        </trans-unit>
        <trans-unit id="ef003eb1302f0b3a70278e8495026ae856ae6788" translate="yes" xml:space="preserve">
          <source>Locale.Builder.addUnicodeLocaleAttribute()</source>
          <target state="translated">Locale.Builder.addUnicodeLocaleAttribute()</target>
        </trans-unit>
        <trans-unit id="f27f43cdd5751a9bcdad1c6a41744acc5f8fdba9" translate="yes" xml:space="preserve">
          <source>Locale.Builder.build()</source>
          <target state="translated">Locale.Builder.build()</target>
        </trans-unit>
        <trans-unit id="6a2ac33ebf17c4468ebfa06d86844fbc9c558fc2" translate="yes" xml:space="preserve">
          <source>Locale.Builder.clear()</source>
          <target state="translated">Locale.Builder.clear()</target>
        </trans-unit>
        <trans-unit id="9b0f5bf729f9cb6f0502fbb86b5492b2ad5168d4" translate="yes" xml:space="preserve">
          <source>Locale.Builder.clearExtensions()</source>
          <target state="translated">Locale.Builder.clearExtensions()</target>
        </trans-unit>
        <trans-unit id="4e48237c6341e89751792adfded1643be6d44107" translate="yes" xml:space="preserve">
          <source>Locale.Builder.removeUnicodeLocaleAttribute()</source>
          <target state="translated">Locale.Builder.removeUnicodeLocaleAttribute()</target>
        </trans-unit>
        <trans-unit id="cd74c4456202f9c2591dee53e23f2301a4834f2c" translate="yes" xml:space="preserve">
          <source>Locale.Builder.setExtension()</source>
          <target state="translated">Locale.Builder.setExtension()</target>
        </trans-unit>
        <trans-unit id="0d3359bd47adfc70c4fdbabfb4f686cbfb1b9690" translate="yes" xml:space="preserve">
          <source>Locale.Builder.setLanguage()</source>
          <target state="translated">Locale.Builder.setLanguage()</target>
        </trans-unit>
        <trans-unit id="833d8cdf0dce57bbb228b68443b036e3d1d7849e" translate="yes" xml:space="preserve">
          <source>Locale.Builder.setLanguageTag()</source>
          <target state="translated">Locale.Builder.setLanguageTag()</target>
        </trans-unit>
        <trans-unit id="8299bdfee8020b424dcac5e5cbe0c71baf54abd6" translate="yes" xml:space="preserve">
          <source>Locale.Builder.setLocale()</source>
          <target state="translated">Locale.Builder.setLocale()</target>
        </trans-unit>
        <trans-unit id="5bc2f44b685498ea18bab289b879c7b6a36ae4df" translate="yes" xml:space="preserve">
          <source>Locale.Builder.setRegion()</source>
          <target state="translated">Locale.Builder.setRegion()</target>
        </trans-unit>
        <trans-unit id="c5e82f7c9f9db59945f954f3971b000e5b577cb3" translate="yes" xml:space="preserve">
          <source>Locale.Builder.setScript()</source>
          <target state="translated">Locale.Builder.setScript()</target>
        </trans-unit>
        <trans-unit id="a9df16fd71296e3cf9357168975ba373171d3d3b" translate="yes" xml:space="preserve">
          <source>Locale.Builder.setUnicodeLocaleKeyword()</source>
          <target state="translated">Locale.Builder.setUnicodeLocaleKeyword()</target>
        </trans-unit>
        <trans-unit id="f6b522bf6c569d653950757499ac35c37b73fb3c" translate="yes" xml:space="preserve">
          <source>Locale.Builder.setVariant()</source>
          <target state="translated">Locale.Builder.setVariant()</target>
        </trans-unit>
        <trans-unit id="17a951d395c0a71c6cb0aa8284583c11c3226691" translate="yes" xml:space="preserve">
          <source>Locale.Category</source>
          <target state="translated">Locale.Category</target>
        </trans-unit>
        <trans-unit id="16791b8a8b4bb2e50ef2ccfb229888101e05ae23" translate="yes" xml:space="preserve">
          <source>Locale.Category.valueOf()</source>
          <target state="translated">Locale.Category.valueOf()</target>
        </trans-unit>
        <trans-unit id="1eca5fd6dcdfb950862d6c527000bf07e9626325" translate="yes" xml:space="preserve">
          <source>Locale.Category.values()</source>
          <target state="translated">Locale.Category.values()</target>
        </trans-unit>
        <trans-unit id="6e1f003d405fdfe78d8d48d3d0b13d1fb4c8995b" translate="yes" xml:space="preserve">
          <source>Locale.FilteringMode</source>
          <target state="translated">Locale.FilteringMode</target>
        </trans-unit>
        <trans-unit id="33b973c04da7233a2030331bf76cf677fbe7ae2e" translate="yes" xml:space="preserve">
          <source>Locale.FilteringMode.valueOf()</source>
          <target state="translated">Locale.FilteringMode.valueOf()</target>
        </trans-unit>
        <trans-unit id="8b4b6ea4ef5c3c82f082d4331212f8d0fd1339c5" translate="yes" xml:space="preserve">
          <source>Locale.FilteringMode.values()</source>
          <target state="translated">Locale.FilteringMode.values()</target>
        </trans-unit>
        <trans-unit id="c93ff35044071cf2bb2690b7258b8d9ce136436c" translate="yes" xml:space="preserve">
          <source>Locale.IsoCountryCode</source>
          <target state="translated">Locale.IsoCountryCode</target>
        </trans-unit>
        <trans-unit id="b1c97f35128849450c894f87a5d44a5e5a0022a1" translate="yes" xml:space="preserve">
          <source>Locale.LanguageRange</source>
          <target state="translated">Locale.LanguageRange</target>
        </trans-unit>
        <trans-unit id="9547f14e1a7fbfeafd451096bb0e4cdf0450d86c" translate="yes" xml:space="preserve">
          <source>Locale.LanguageRange.equals()</source>
          <target state="translated">Locale.LanguageRange.equals()</target>
        </trans-unit>
        <trans-unit id="85481da5ca24bac20ea7a718cff3fcf2ea48370c" translate="yes" xml:space="preserve">
          <source>Locale.LanguageRange.getRange()</source>
          <target state="translated">Locale.LanguageRange.getRange()</target>
        </trans-unit>
        <trans-unit id="0ccd55e37e5e68d9fa92b779e64d664c363c5ae4" translate="yes" xml:space="preserve">
          <source>Locale.LanguageRange.getWeight()</source>
          <target state="translated">Locale.LanguageRange.getWeight()</target>
        </trans-unit>
        <trans-unit id="5caf48af9657ed999d93f19a29e7dad088b48a28" translate="yes" xml:space="preserve">
          <source>Locale.LanguageRange.hashCode()</source>
          <target state="translated">Locale.LanguageRange.hashCode()</target>
        </trans-unit>
        <trans-unit id="e2d731b21fb86880665249da8acee3c71d890728" translate="yes" xml:space="preserve">
          <source>Locale.LanguageRange.mapEquivalents()</source>
          <target state="translated">Locale.LanguageRange.mapEquivalents()</target>
        </trans-unit>
        <trans-unit id="468bb036ab29891969dc202d7ba7593cb78f6150" translate="yes" xml:space="preserve">
          <source>Locale.LanguageRange.parse()</source>
          <target state="translated">Locale.LanguageRange.parse()</target>
        </trans-unit>
        <trans-unit id="ebb88a25d873523ef21321251f62984b42533d3f" translate="yes" xml:space="preserve">
          <source>Locale.clone()</source>
          <target state="translated">Locale.clone()</target>
        </trans-unit>
        <trans-unit id="17ec9f55870ca9698ec750e876770a69b0bed256" translate="yes" xml:space="preserve">
          <source>Locale.equals()</source>
          <target state="translated">Locale.equals()</target>
        </trans-unit>
        <trans-unit id="0720cdf00f1127038ab715c7b08dce6be5f579d5" translate="yes" xml:space="preserve">
          <source>Locale.filter()</source>
          <target state="translated">Locale.filter()</target>
        </trans-unit>
        <trans-unit id="22f2eaea6b1a9f6b8385e383056c40f005accd11" translate="yes" xml:space="preserve">
          <source>Locale.filterTags()</source>
          <target state="translated">Locale.filterTags()</target>
        </trans-unit>
        <trans-unit id="f9950fc3325c1e8792d4f895daf479069efc30ec" translate="yes" xml:space="preserve">
          <source>Locale.forLanguageTag()</source>
          <target state="translated">Locale.forLanguageTag()</target>
        </trans-unit>
        <trans-unit id="0ad2bedd4145ea364ad52a39908dc88b5dd50551" translate="yes" xml:space="preserve">
          <source>Locale.getAvailableLocales()</source>
          <target state="translated">Locale.getAvailableLocales()</target>
        </trans-unit>
        <trans-unit id="fc8869750660578a6f909f0793b204771d180f5f" translate="yes" xml:space="preserve">
          <source>Locale.getCountry()</source>
          <target state="translated">Locale.getCountry()</target>
        </trans-unit>
        <trans-unit id="462cbdfe0f59d86975b13e543df859d154fae556" translate="yes" xml:space="preserve">
          <source>Locale.getDefault()</source>
          <target state="translated">Locale.getDefault()</target>
        </trans-unit>
        <trans-unit id="0eeb393d2301c544edb78036ab40584768a6484a" translate="yes" xml:space="preserve">
          <source>Locale.getDisplayCountry()</source>
          <target state="translated">Locale.getDisplayCountry()</target>
        </trans-unit>
        <trans-unit id="7b6a2c6adf3c91c4f83fab2982c995632f2d6c67" translate="yes" xml:space="preserve">
          <source>Locale.getDisplayLanguage()</source>
          <target state="translated">Locale.getDisplayLanguage()</target>
        </trans-unit>
        <trans-unit id="868ef7415e7e1be75489876028cb101f80e02675" translate="yes" xml:space="preserve">
          <source>Locale.getDisplayName()</source>
          <target state="translated">Locale.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="a14c933588f17cc3dcee1680093c021f2f387432" translate="yes" xml:space="preserve">
          <source>Locale.getDisplayScript()</source>
          <target state="translated">Locale.getDisplayScript()</target>
        </trans-unit>
        <trans-unit id="5fffc7cafddfb31cba2be82218acc1e8d04b7a4a" translate="yes" xml:space="preserve">
          <source>Locale.getDisplayVariant()</source>
          <target state="translated">Locale.getDisplayVariant()</target>
        </trans-unit>
        <trans-unit id="f9d16bb6c2df7f91c6a1301084b964b19f8c9f6a" translate="yes" xml:space="preserve">
          <source>Locale.getExtension()</source>
          <target state="translated">Locale.getExtension()</target>
        </trans-unit>
        <trans-unit id="091ff86a4efeddeaf1e48849005787e0ac8d08d8" translate="yes" xml:space="preserve">
          <source>Locale.getExtensionKeys()</source>
          <target state="translated">Locale.getExtensionKeys()</target>
        </trans-unit>
        <trans-unit id="7d0eeb4e2fd771d37bd836b1f143f4ef45d737c0" translate="yes" xml:space="preserve">
          <source>Locale.getISO3Country()</source>
          <target state="translated">Locale.getISO3Country()</target>
        </trans-unit>
        <trans-unit id="a574bcb341b19220f61133ecabf12fc260bf1c14" translate="yes" xml:space="preserve">
          <source>Locale.getISO3Language()</source>
          <target state="translated">Locale.getISO3Language()</target>
        </trans-unit>
        <trans-unit id="7c53b5862a9d9ca1798b144a78e7cc56d8c454dc" translate="yes" xml:space="preserve">
          <source>Locale.getISOCountries()</source>
          <target state="translated">Locale.getISOCountries()</target>
        </trans-unit>
        <trans-unit id="11e40f3d665f78fae873d5008642c7f070d49f2f" translate="yes" xml:space="preserve">
          <source>Locale.getISOLanguages()</source>
          <target state="translated">Locale.getISOLanguages()</target>
        </trans-unit>
        <trans-unit id="768482a0d945ba5a3decc05032028627d6e4bf40" translate="yes" xml:space="preserve">
          <source>Locale.getLanguage()</source>
          <target state="translated">Locale.getLanguage()</target>
        </trans-unit>
        <trans-unit id="6170a78ebdaa46440c06a459cdc580b180887d33" translate="yes" xml:space="preserve">
          <source>Locale.getScript()</source>
          <target state="translated">Locale.getScript()</target>
        </trans-unit>
        <trans-unit id="5fa322cf209a061f0faf16fe985f1cd3c431cd49" translate="yes" xml:space="preserve">
          <source>Locale.getUnicodeLocaleAttributes()</source>
          <target state="translated">Locale.getUnicodeLocaleAttributes()</target>
        </trans-unit>
        <trans-unit id="5c89a609670a96816236b0b64fb29c4048dc5824" translate="yes" xml:space="preserve">
          <source>Locale.getUnicodeLocaleKeys()</source>
          <target state="translated">Locale.getUnicodeLocaleKeys()</target>
        </trans-unit>
        <trans-unit id="509f3a30a91d1ca7dca4c18e1704be76f9784ad0" translate="yes" xml:space="preserve">
          <source>Locale.getUnicodeLocaleType()</source>
          <target state="translated">Locale.getUnicodeLocaleType()</target>
        </trans-unit>
        <trans-unit id="7db520fe29c8136d4e446b3bad352a23a069824b" translate="yes" xml:space="preserve">
          <source>Locale.getVariant()</source>
          <target state="translated">Locale.getVariant()</target>
        </trans-unit>
        <trans-unit id="09494eb167a5b634ed8a4c6586eeb6fc5e44c889" translate="yes" xml:space="preserve">
          <source>Locale.hasExtensions()</source>
          <target state="translated">Locale.hasExtensions()</target>
        </trans-unit>
        <trans-unit id="56469256be9bc3f3480ba12d5c262c20fb74609d" translate="yes" xml:space="preserve">
          <source>Locale.hashCode()</source>
          <target state="translated">Locale.hashCode()</target>
        </trans-unit>
        <trans-unit id="4ee9a55a1e470c0e688c56824977c4a59ab2bbc7" translate="yes" xml:space="preserve">
          <source>Locale.lookup()</source>
          <target state="translated">Locale.lookup()</target>
        </trans-unit>
        <trans-unit id="959ba06fe8e44dcfa1b69b874b42dd91373d126f" translate="yes" xml:space="preserve">
          <source>Locale.lookupTag()</source>
          <target state="translated">Locale.lookupTag()</target>
        </trans-unit>
        <trans-unit id="f925bdbf811ef52ac252e3e0c8ee2883f4f1e84a" translate="yes" xml:space="preserve">
          <source>Locale.setDefault()</source>
          <target state="translated">Locale.setDefault()</target>
        </trans-unit>
        <trans-unit id="9c48306a96ad29d131f7badef3390bd02426a63d" translate="yes" xml:space="preserve">
          <source>Locale.stripExtensions()</source>
          <target state="translated">Locale.stripExtensions()</target>
        </trans-unit>
        <trans-unit id="522fe59559edb072a41b5d41e2814e37e12aa622" translate="yes" xml:space="preserve">
          <source>Locale.toLanguageTag()</source>
          <target state="translated">Locale.toLanguageTag()</target>
        </trans-unit>
        <trans-unit id="2ef0c9a78b0b580a8b094a05d9487f907c1ba15c" translate="yes" xml:space="preserve">
          <source>Locale.toString()</source>
          <target state="translated">Locale.toString()</target>
        </trans-unit>
        <trans-unit id="76bb9707a89087119b5dbffefb0453e0b2ff867d" translate="yes" xml:space="preserve">
          <source>LocaleNameProvider</source>
          <target state="translated">LocaleNameProvider</target>
        </trans-unit>
        <trans-unit id="00dd403e2802140de3bbc34ebaf41cb2c7a0ac91" translate="yes" xml:space="preserve">
          <source>LocaleNameProvider.getDisplayCountry()</source>
          <target state="translated">LocaleNameProvider.getDisplayCountry()</target>
        </trans-unit>
        <trans-unit id="c54749d473a2dcd85570968727aa2fd42d572a1a" translate="yes" xml:space="preserve">
          <source>LocaleNameProvider.getDisplayLanguage()</source>
          <target state="translated">LocaleNameProvider.getDisplayLanguage()</target>
        </trans-unit>
        <trans-unit id="5ac556a29ecf777528bb05c604dafe39bb67c39d" translate="yes" xml:space="preserve">
          <source>LocaleNameProvider.getDisplayScript()</source>
          <target state="translated">LocaleNameProvider.getDisplayScript()</target>
        </trans-unit>
        <trans-unit id="8af23ac39e8f803d33686086d0c50ecad1fdd9fb" translate="yes" xml:space="preserve">
          <source>LocaleNameProvider.getDisplayVariant()</source>
          <target state="translated">LocaleNameProvider.getDisplayVariant()</target>
        </trans-unit>
        <trans-unit id="b584890e0aa4a3366e623392c21cd3ab2382f053" translate="yes" xml:space="preserve">
          <source>LocaleServiceProvider</source>
          <target state="translated">LocaleServiceProvider</target>
        </trans-unit>
        <trans-unit id="f0a3a4d1f1246dbc053dd91208de9a88b94cedb9" translate="yes" xml:space="preserve">
          <source>LocaleServiceProvider.getAvailableLocales()</source>
          <target state="translated">LocaleServiceProvider.getAvailableLocales()</target>
        </trans-unit>
        <trans-unit id="0a01c81b26f16d7166aef50cefb721c8a3552748" translate="yes" xml:space="preserve">
          <source>LocaleServiceProvider.isSupportedLocale()</source>
          <target state="translated">LocaleServiceProvider.isSupportedLocale()</target>
        </trans-unit>
        <trans-unit id="eb45652f4abd7c63879a289e4e035b72f944745d" translate="yes" xml:space="preserve">
          <source>Locales with any ill-formed fields cause &lt;code&gt;IllformedLocaleException&lt;/code&gt; to be thrown, except for the following three cases which are accepted for compatibility reasons:</source>
          <target state="translated">형식이 잘못된 필드가있는 로케일 은 호환성 이유로 인해 허용되는 다음 세 가지 경우를 제외하고 &lt;code&gt;IllformedLocaleException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="34a7b42b41cc9684eaa9e214022207b752df641f" translate="yes" xml:space="preserve">
          <source>Localization is handled by associating a &lt;code&gt;Locale&lt;/code&gt; with each &lt;code&gt;IIOReadWarningListener&lt;/code&gt; as it is registered with an &lt;code&gt;ImageReader&lt;/code&gt;. It is up to the &lt;code&gt;ImageReader&lt;/code&gt; to provide localized messages.</source>
          <target state="translated">현지화는 &lt;code&gt;ImageReader&lt;/code&gt; 에 등록 된 &lt;code&gt;Locale&lt;/code&gt; 을 각 &lt;code&gt;IIOReadWarningListener&lt;/code&gt; 와 연관시켜 처리합니다 . 현지화 된 메시지를 제공 하는 것은 &lt;code&gt;ImageReader&lt;/code&gt; 의 책임 입니다.</target>
        </trans-unit>
        <trans-unit id="ecde8e097a84c70ba138e3ceb9941d8be6849c04" translate="yes" xml:space="preserve">
          <source>Localization is handled by associating a &lt;code&gt;Locale&lt;/code&gt; with each &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; as it is registered with an &lt;code&gt;ImageWriter&lt;/code&gt;. It is up to the &lt;code&gt;ImageWriter&lt;/code&gt; to provide localized messages.</source>
          <target state="translated">현지화는 &lt;code&gt;ImageWriter&lt;/code&gt; 에 등록 &lt;code&gt;IIOWriteWarningListener&lt;/code&gt; &lt;code&gt;Locale&lt;/code&gt; 을 각 IIOWriteWarningListener 와 연관시켜 처리합니다 . 현지화 된 메시지를 제공 하는 것은 &lt;code&gt;ImageWriter&lt;/code&gt; 의 책임 입니다.</target>
        </trans-unit>
        <trans-unit id="0acd5d1b8d40230784fceaa26a23ee5d1e3202c2" translate="yes" xml:space="preserve">
          <source>Localization occurs by calling &lt;a href=&quot;datetimeformatter#withLocale(java.util.Locale)&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the formatter. Further customization is possible using &lt;a href=&quot;decimalstyle&quot;&gt;&lt;code&gt;DecimalStyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Localization occurs by calling &lt;a href=&quot;datetimeformatter#withLocale(java.util.Locale)&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt; on the formatter. Further customization is possible using &lt;a href=&quot;decimalstyle&quot;&gt; &lt;code&gt;DecimalStyle&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d464a3969a6765e6227f1663d74ecd160b05f010" translate="yes" xml:space="preserve">
          <source>Localization occurs by calling &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the formatter. Further customization is possible using &lt;a href=&quot;decimalstyle&quot;&gt;&lt;code&gt;DecimalStyle&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">포맷터에서 &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt; 을 사용하여 지역화가 발생합니다 . &lt;a href=&quot;decimalstyle&quot;&gt; &lt;code&gt;DecimalStyle&lt;/code&gt; 을&lt;/a&gt; 사용하여 추가 사용자 정의가 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="37101cae979d0fb684ca7d01891277cd8c3aaecf" translate="yes" xml:space="preserve">
          <source>Localize and format the message string from a log record.</source>
          <target state="translated">Localize and format the message string from a log record.</target>
        </trans-unit>
        <trans-unit id="d61a76d29270e7c8b1b9ecd87738b35e1e861693" translate="yes" xml:space="preserve">
          <source>Localize and format the message string from a log record. This method is provided as a convenience for Formatter subclasses to use when they are performing formatting.</source>
          <target state="translated">로그 레코드에서 메시지 문자열을 현지화하고 형식화하십시오. 이 메소드는 포맷터 서브 클래스가 형식화를 수행 할 때 편리하게 사용할 수 있도록 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="9fa1e8e9b1275129532f3ebbdbbb583cfa1bae13" translate="yes" xml:space="preserve">
          <source>Localized decimal style used in date and time formatting.</source>
          <target state="translated">날짜 및 시간 형식에 사용되는 지역화 된 10 진수 스타일입니다.</target>
        </trans-unit>
        <trans-unit id="f83674a444f05ff4bb278109455d22a1bfc98863" translate="yes" xml:space="preserve">
          <source>Localized definitions of the day-of-week, week-of-month and week-of-year fields.</source>
          <target state="translated">요일, 월, 주 필드의 현지화 된 정의.</target>
        </trans-unit>
        <trans-unit id="4b9cedb6840e7a0f7d1bc9f2686908c2f5b589d3" translate="yes" xml:space="preserve">
          <source>Localized numbers</source>
          <target state="translated">현지화 된 숫자</target>
        </trans-unit>
        <trans-unit id="55e65c026721335220fa381684005bce8210da9d" translate="yes" xml:space="preserve">
          <source>Localized?</source>
          <target state="translated">Localized?</target>
        </trans-unit>
        <trans-unit id="d93fed6d67d68f6bf4e20b8b916e127a9257bbec" translate="yes" xml:space="preserve">
          <source>Locatable</source>
          <target state="translated">Locatable</target>
        </trans-unit>
        <trans-unit id="988fb5e7b3b5307c3b0c606d346cdb2d8f5075db" translate="yes" xml:space="preserve">
          <source>LocatableEvent</source>
          <target state="translated">LocatableEvent</target>
        </trans-unit>
        <trans-unit id="c526fe9e3cf42dbd4265dda77ed1fe8fe46a3ec0" translate="yes" xml:space="preserve">
          <source>Locate a value editor for a given target type.</source>
          <target state="translated">주어진 대상 유형에 대한 값 편집기를 찾으십시오.</target>
        </trans-unit>
        <trans-unit id="dbb88aa0e41322b2ae62a9fb729e96cbe987a4e2" translate="yes" xml:space="preserve">
          <source>Locate an alternate URI reference with a URI.</source>
          <target state="translated">Locate an alternate URI reference with a URI.</target>
        </trans-unit>
        <trans-unit id="cd29e17ca9980e3adb971cae30b3d8fd495413d4" translate="yes" xml:space="preserve">
          <source>Locate the external resources with a public or system identifier;</source>
          <target state="translated">Locate the external resources with a public or system identifier;</target>
        </trans-unit>
        <trans-unit id="1cba3d4ace40d45810421e29b5f2325e17c742ef" translate="yes" xml:space="preserve">
          <source>Locate the view responsible for an offset into the box along the major axis.</source>
          <target state="translated">Locate the view responsible for an offset into the box along the major axis.</target>
        </trans-unit>
        <trans-unit id="31352d109150d777a76b9cec7fed540d6e819fe9" translate="yes" xml:space="preserve">
          <source>Locate the view responsible for an offset into the box along the major axis. Make sure that offsets are set on the ChildState objects up to the given target span past the desired offset.</source>
          <target state="translated">Locate the view responsible for an offset into the box along the major axis. Make sure that offsets are set on the ChildState objects up to the given target span past the desired offset.</target>
        </trans-unit>
        <trans-unit id="a3be27fc09e3094a6cc992e41aef3c9d08ed7fcf" translate="yes" xml:space="preserve">
          <source>LocateRegistry</source>
          <target state="translated">LocateRegistry</target>
        </trans-unit>
        <trans-unit id="7f8411ed5b4b64c65b6c480a38d65ee498eb1d82" translate="yes" xml:space="preserve">
          <source>Locates &lt;code&gt;MultiDoc&lt;/code&gt; print &lt;code&gt;Services&lt;/code&gt; capable of printing &lt;code&gt;MultiDocs&lt;/code&gt; containing all the specified doc flavors.</source>
          <target state="translated">Locates &lt;code&gt;MultiDoc&lt;/code&gt; print &lt;code&gt;Services&lt;/code&gt; capable of printing &lt;code&gt;MultiDocs&lt;/code&gt; containing all the specified doc flavors.</target>
        </trans-unit>
        <trans-unit id="9a677212ea0010e9091d709b4d2ed6cdc7178b65" translate="yes" xml:space="preserve">
          <source>Locates &lt;code&gt;MultiDoc&lt;/code&gt; print services which can be positively confirmed to support the combination of attributes and &lt;code&gt;DocFlavors&lt;/code&gt; specified.</source>
          <target state="translated">Locates &lt;code&gt;MultiDoc&lt;/code&gt; print services which can be positively confirmed to support the combination of attributes and &lt;code&gt;DocFlavors&lt;/code&gt; specified.</target>
        </trans-unit>
        <trans-unit id="7b36d85110b96e0c9f687199253566a2e18116cb" translate="yes" xml:space="preserve">
          <source>Locates MultiDoc print Services capable of printing MultiDocs containing all the specified doc flavors.</source>
          <target state="translated">지정된 모든 문서 특징을 포함하는 MultiDoc을 인쇄 할 수있는 MultiDoc 인쇄 서비스를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="1a01158975f54152ede518c1a1ac4170f2a3af5a" translate="yes" xml:space="preserve">
          <source>Locates MultiDoc print services which can be positively confirmed to support the combination of attributes and DocFlavors specified.</source>
          <target state="translated">지정된 속성과 DocFlavors의 조합을 지원하도록 긍정적으로 확인할 수있는 MultiDoc 인쇄 서비스를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="3ae160bcfcd5129ff1f8ef542fd1dd45835e8773" translate="yes" xml:space="preserve">
          <source>Locates a print service that can handle the print request as specified by the &lt;code&gt;DocFlavor&lt;/code&gt; and the attribute set.</source>
          <target state="translated">&lt;code&gt;DocFlavor&lt;/code&gt; 및 속성 세트 로 지정된 인쇄 요청을 처리 할 수있는 인쇄 서비스를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="b9c41276d422d98646c1240ae6b9699d5bd92713" translate="yes" xml:space="preserve">
          <source>Locates and incrementally instantiates the available providers of a given service using the context class loader.</source>
          <target state="translated">Locates and incrementally instantiates the available providers of a given service using the context class loader.</target>
        </trans-unit>
        <trans-unit id="fd45823224abe6204569c7c61e8f66a1e0b0e1ae" translate="yes" xml:space="preserve">
          <source>Locates and incrementally instantiates the available providers of a given service using the context class loader. This convenience method is equivalent to:</source>
          <target state="translated">컨텍스트 클래스 로더를 사용하여 지정된 서비스의 사용 가능한 제공자를 찾아 점차적으로 인스턴스화합니다. 이 편리한 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4cc7af82cc8b05e06b976f79fb51364bd15ef28e" translate="yes" xml:space="preserve">
          <source>Locates factories for print services that can be used with a print job to output a stream of data in the format specified by &lt;code&gt;outputMimeType&lt;/code&gt;.</source>
          <target state="translated">인쇄 작업에 사용하여 &lt;code&gt;outputMimeType&lt;/code&gt; 에 의해 지정된 형식으로 데이터 스트림을 출력 할 수있는 인쇄 서비스 팩토리를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="5f85cdb5561734e2d053c66df82778d3ebe48aee" translate="yes" xml:space="preserve">
          <source>Locates print services capable of printing the specified &lt;a href=&quot;docflavor&quot;&gt;&lt;code&gt;DocFlavor&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 &lt;a href=&quot;docflavor&quot;&gt; &lt;code&gt;DocFlavor&lt;/code&gt; &lt;/a&gt; 를 인쇄 할 수있는 인쇄 서비스를 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="379e2d7b573d8d10b6fa4a8cbfa7ff4159a6c1d7" translate="yes" xml:space="preserve">
          <source>Locates services that can be positively confirmed to support the combination of attributes and &lt;code&gt;DocFlavors&lt;/code&gt; specified.</source>
          <target state="translated">Locates services that can be positively confirmed to support the combination of attributes and &lt;code&gt;DocFlavors&lt;/code&gt; specified.</target>
        </trans-unit>
        <trans-unit id="0baaa59c16d51b85be917fc3bf2403f1c48bbe10" translate="yes" xml:space="preserve">
          <source>Locates services that can be positively confirmed to support the combination of attributes and &lt;code&gt;DocFlavors&lt;/code&gt; specified. This method is not called directly by applications.</source>
          <target state="translated">Locates services that can be positively confirmed to support the combination of attributes and &lt;code&gt;DocFlavors&lt;/code&gt; specified. This method is not called directly by applications.</target>
        </trans-unit>
        <trans-unit id="43f2eb9de17c66d8c7313ef577b74b2e94aa3628" translate="yes" xml:space="preserve">
          <source>Locates services that can be positively confirmed to support the combination of attributes and DocFlavors specified. This method is not called directly by applications.</source>
          <target state="translated">지정된 속성과 DocFlavors의 조합을 지원하도록 확실하게 확인할 수있는 서비스를 찾습니다. 이 메소드는 애플리케이션에서 직접 호출하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b6024ca5ed6fb39d8e361428c3ef62256648462b" translate="yes" xml:space="preserve">
          <source>Locates the component that contains the x,y position.</source>
          <target state="translated">Locates the component that contains the x,y position.</target>
        </trans-unit>
        <trans-unit id="efe9a6b7b13657832f7f1b8f18af8aa4242e039f" translate="yes" xml:space="preserve">
          <source>Locates the component that contains the x,y position. The top-most child component is returned in the case where there is overlap in the components. This is determined by finding the component closest to the index 0 that claims to contain the given point via Component.contains(), except that Components which have native peers take precedence over those which do not (i.e., lightweight Components).</source>
          <target state="translated">Locates the component that contains the x,y position. The top-most child component is returned in the case where there is overlap in the components. This is determined by finding the component closest to the index 0 that claims to contain the given point via Component.contains(), except that Components which have native peers take precedence over those which do not (i.e., lightweight Components).</target>
        </trans-unit>
        <trans-unit id="5a32ade212519e1e0d4327f96c962612e524b399" translate="yes" xml:space="preserve">
          <source>Locates the default print service for this environment.</source>
          <target state="translated">Locates the default print service for this environment.</target>
        </trans-unit>
        <trans-unit id="b2dfbcd4e4615a6cf05fbee1bf6acc7aea5e79a8" translate="yes" xml:space="preserve">
          <source>Locates the default print service for this environment. This may return &lt;code&gt;null&lt;/code&gt;. If multiple lookup services each specify a default, the chosen service is not precisely defined, but a platform native service, rather than an installed service, is usually returned as the default. If there is no clearly identifiable platform native default print service, the default is the first to be located in an implementation-dependent manner.</source>
          <target state="translated">Locates the default print service for this environment. This may return &lt;code&gt;null&lt;/code&gt; . If multiple lookup services each specify a default, the chosen service is not precisely defined, but a platform native service, rather than an installed service, is usually returned as the default. If there is no clearly identifiable platform native default print service, the default is the first to be located in an implementation-dependent manner.</target>
        </trans-unit>
        <trans-unit id="8078f06d6cb482cd3dda8c0eafee487acf85a59e" translate="yes" xml:space="preserve">
          <source>Locates the default print service for this environment. This may return null. If multiple lookup services each specify a default, the chosen service is not precisely defined, but a platform native service, rather than an installed service, is usually returned as the default. If there is no clearly identifiable platform native default print service, the default is the first to be located in an implementation-dependent manner.</source>
          <target state="translated">이 환경에 대한 기본 인쇄 서비스를 찾습니다. null을 돌려주는 일이 있습니다. 여러 조회 서비스가 각각 기본값을 지정하면 선택한 서비스가 정확하게 정의되지 않지만 설치된 서비스가 아닌 플랫폼 기본 서비스가 일반적으로 기본값으로 반환됩니다. 명확하게 식별 할 수있는 플랫폼 기본 인쇄 서비스가없는 경우, 기본값은 구현에 따라 달라지는 첫 번째입니다.</target>
        </trans-unit>
        <trans-unit id="f5deaad30d59f1ea88f0d6f455e4023ebe703142" translate="yes" xml:space="preserve">
          <source>Locates the visible child component that contains the specified point.</source>
          <target state="translated">Locates the visible child component that contains the specified point.</target>
        </trans-unit>
        <trans-unit id="3805c7361e99b50155242805352b88c5f8ed9587" translate="yes" xml:space="preserve">
          <source>Locates the visible child component that contains the specified point. The top-most child component is returned in the case where there is overlap in the components. If the containing child component is a Container, this method will continue searching for the deepest nested child component. Components which are not visible are ignored during the search.</source>
          <target state="translated">Locates the visible child component that contains the specified point. The top-most child component is returned in the case where there is overlap in the components. If the containing child component is a Container, this method will continue searching for the deepest nested child component. Components which are not visible are ignored during the search.</target>
        </trans-unit>
        <trans-unit id="6cb0696c99bc5749c733e0bb2d2ad6a2c8454308" translate="yes" xml:space="preserve">
          <source>Locates the visible child component that contains the specified position.</source>
          <target state="translated">Locates the visible child component that contains the specified position.</target>
        </trans-unit>
        <trans-unit id="e5a187caa5699eef65ca8cc360b06b34d9731c3a" translate="yes" xml:space="preserve">
          <source>Locates the visible child component that contains the specified position. The top-most child component is returned in the case where there is overlap in the components. If the containing child component is a Container, this method will continue searching for the deepest nested child component. Components which are not visible are ignored during the search.</source>
          <target state="translated">Locates the visible child component that contains the specified position. The top-most child component is returned in the case where there is overlap in the components. If the containing child component is a Container, this method will continue searching for the deepest nested child component. Components which are not visible are ignored during the search.</target>
        </trans-unit>
        <trans-unit id="d219c68101f532de10add2cf42fb9dbeca73d3be" translate="yes" xml:space="preserve">
          <source>Location</source>
          <target state="translated">Location</target>
        </trans-unit>
        <trans-unit id="a275504cbf49ec27efc4efae5e2912867c11f1d4" translate="yes" xml:space="preserve">
          <source>Location Path</source>
          <target state="translated">Location Path</target>
        </trans-unit>
        <trans-unit id="5968e6cad63c6a8281cc96232792b43341746c29" translate="yes" xml:space="preserve">
          <source>Location of new class files.</source>
          <target state="translated">새로운 수업 파일의 위치.</target>
        </trans-unit>
        <trans-unit id="f6f8201f8d34e87a2fe92ed1d6a98dec730b4aa5" translate="yes" xml:space="preserve">
          <source>Location of new documentation files.</source>
          <target state="translated">새 문서 파일의 위치</target>
        </trans-unit>
        <trans-unit id="a9372b4070d8f61d329b0d53ace1a8d511f05fd7" translate="yes" xml:space="preserve">
          <source>Location of new native header files.</source>
          <target state="translated">새 기본 헤더 파일의 위치</target>
        </trans-unit>
        <trans-unit id="a35029988978f4c6d4dfb63524f8b9d45018fe40" translate="yes" xml:space="preserve">
          <source>Location of new source files.</source>
          <target state="translated">새 소스 파일의 위치</target>
        </trans-unit>
        <trans-unit id="21d25ce0b1a2601a1dd223e1440d8687466cd6f4" translate="yes" xml:space="preserve">
          <source>Location of the divider when the dragging session began.</source>
          <target state="translated">Location of the divider when the dragging session began.</target>
        </trans-unit>
        <trans-unit id="5dd720d3d4fc3ac6b49b57a92dd64ae718836a33" translate="yes" xml:space="preserve">
          <source>Location to search for annotation processors.</source>
          <target state="translated">주석 프로세서를 검색 할 위치입니다.</target>
        </trans-unit>
        <trans-unit id="bcda1fe273531dd8fe76e51a6e6cd5f1a43c79fa" translate="yes" xml:space="preserve">
          <source>Location to search for doclets.</source>
          <target state="translated">독렛을 검색 할 위치입니다.</target>
        </trans-unit>
        <trans-unit id="b594ba9d731e6b9e5bd6c4378b9c74038c9c4850" translate="yes" xml:space="preserve">
          <source>Location to search for existing source files.</source>
          <target state="translated">기존 소스 파일을 검색 할 위치입니다.</target>
        </trans-unit>
        <trans-unit id="fdfd8d4373b2a55758f272b5843a394cdfa0ea01" translate="yes" xml:space="preserve">
          <source>Location to search for module patches.</source>
          <target state="translated">Location to search for module patches.</target>
        </trans-unit>
        <trans-unit id="fa3787696d441392dd6b971e182d0d4eae02d4e6" translate="yes" xml:space="preserve">
          <source>Location to search for modules containing annotation processors.</source>
          <target state="translated">Location to search for modules containing annotation processors.</target>
        </trans-unit>
        <trans-unit id="ebd057d443b332d52b012b0e99be34e4a848a3ce" translate="yes" xml:space="preserve">
          <source>Location to search for platform classes.</source>
          <target state="translated">Location to search for platform classes.</target>
        </trans-unit>
        <trans-unit id="45555527c0ca45ebbce185ca50d9b364c842f18c" translate="yes" xml:space="preserve">
          <source>Location to search for platform classes. Sometimes called the boot class path.</source>
          <target state="translated">플랫폼 클래스를 검색 할 위치입니다. 부팅 클래스 경로라고도합니다.</target>
        </trans-unit>
        <trans-unit id="1d476b00781e8e0d23bd0f8a56fc6474026f93fb" translate="yes" xml:space="preserve">
          <source>Location to search for precompiled user modules.</source>
          <target state="translated">Location to search for precompiled user modules.</target>
        </trans-unit>
        <trans-unit id="8ae3e2c112d02edcdee66e9f799b792c4b0f90dd" translate="yes" xml:space="preserve">
          <source>Location to search for system modules.</source>
          <target state="translated">Location to search for system modules.</target>
        </trans-unit>
        <trans-unit id="daaeae34a1e4044ade4f7f863a4bf2338109b9be" translate="yes" xml:space="preserve">
          <source>Location to search for taglets.</source>
          <target state="translated">태그를 검색 할 위치입니다.</target>
        </trans-unit>
        <trans-unit id="11af85072361e995f49d1496507edffb94da262d" translate="yes" xml:space="preserve">
          <source>Location to search for the source code of modules.</source>
          <target state="translated">모듈의 소스 코드를 검색 할 위치입니다.</target>
        </trans-unit>
        <trans-unit id="378b1c3d1a8bc232530ce26e87688a8ca783e7fd" translate="yes" xml:space="preserve">
          <source>Location to search for upgradeable system modules.</source>
          <target state="translated">업그레이드 가능한 시스템 모듈을 검색 할 위치입니다.</target>
        </trans-unit>
        <trans-unit id="4b51935d8ec3fb9c3d1ccb9201ca7362e1453dee" translate="yes" xml:space="preserve">
          <source>Location to search for user class files.</source>
          <target state="translated">사용자 클래스 파일을 검색 할 위치입니다.</target>
        </trans-unit>
        <trans-unit id="4ece69c7a443bb65497fe7116d77cc7b9589c74f" translate="yes" xml:space="preserve">
          <source>Locations specific to &lt;a href=&quot;documentationtool&quot;&gt;&lt;code&gt;DocumentationTool&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;documentationtool&quot;&gt; &lt;code&gt;DocumentationTool&lt;/code&gt; &lt;/a&gt; 관련 위치 .</target>
        </trans-unit>
        <trans-unit id="029c39972ba6042647e3f70b02f4bd91260e9fb3" translate="yes" xml:space="preserve">
          <source>Locator</source>
          <target state="translated">Locator</target>
        </trans-unit>
        <trans-unit id="05a4482cbcd2764d2c574248a1185bfde18b70f6" translate="yes" xml:space="preserve">
          <source>Locator2</source>
          <target state="translated">Locator2</target>
        </trans-unit>
        <trans-unit id="8ce582d8f52d55a53ca11e3494f01ae2d0e49d2c" translate="yes" xml:space="preserve">
          <source>Locator2Impl</source>
          <target state="translated">Locator2Impl</target>
        </trans-unit>
        <trans-unit id="42d8033bb85f61a2a9023606618bedabe5e94abc" translate="yes" xml:space="preserve">
          <source>LocatorImpl</source>
          <target state="translated">LocatorImpl</target>
        </trans-unit>
        <trans-unit id="891ebccd5baa32daed16fb5a0825ca7a4464931f" translate="yes" xml:space="preserve">
          <source>Lock</source>
          <target state="translated">Lock</target>
        </trans-unit>
        <trans-unit id="e928fce342556f6b3cef80837918998f766b1cfd" translate="yes" xml:space="preserve">
          <source>Lock.lock()</source>
          <target state="translated">Lock.lock()</target>
        </trans-unit>
        <trans-unit id="b002b75cf564965a7721d3670c106a3a28b7c4b9" translate="yes" xml:space="preserve">
          <source>Lock.lockInterruptibly()</source>
          <target state="translated">Lock.lockInterruptibly()</target>
        </trans-unit>
        <trans-unit id="273a0cd61d20288d17e8acc1cea773cf17941adf" translate="yes" xml:space="preserve">
          <source>Lock.newCondition()</source>
          <target state="translated">Lock.newCondition()</target>
        </trans-unit>
        <trans-unit id="c71078f51c546eeba5ef4ab93969fb0d72c4fae2" translate="yes" xml:space="preserve">
          <source>Lock.tryLock()</source>
          <target state="translated">Lock.tryLock()</target>
        </trans-unit>
        <trans-unit id="f9d078c93ece07cd41d5fd04b31c2c72644f56d6" translate="yes" xml:space="preserve">
          <source>Lock.unlock()</source>
          <target state="translated">Lock.unlock()</target>
        </trans-unit>
        <trans-unit id="e692e09e9bd2f625c4b5b6e120cca7a967cb4f06" translate="yes" xml:space="preserve">
          <source>LockInfo</source>
          <target state="translated">LockInfo</target>
        </trans-unit>
        <trans-unit id="8a0d55e36262575513ea5d63a5b2bd3e6766670d" translate="yes" xml:space="preserve">
          <source>LockInfo.from()</source>
          <target state="translated">LockInfo.from()</target>
        </trans-unit>
        <trans-unit id="cbe64c4f16a1fdf2a0028d154632f411b8a5e259" translate="yes" xml:space="preserve">
          <source>LockInfo.getClassName()</source>
          <target state="translated">LockInfo.getClassName()</target>
        </trans-unit>
        <trans-unit id="fd780ccc3c6cdce8b25c7faf818c104b87ba59b3" translate="yes" xml:space="preserve">
          <source>LockInfo.getIdentityHashCode()</source>
          <target state="translated">LockInfo.getIdentityHashCode()</target>
        </trans-unit>
        <trans-unit id="c2db3eaff037f60c5fe2cc1c177d3252c88036aa" translate="yes" xml:space="preserve">
          <source>LockInfo.toString()</source>
          <target state="translated">LockInfo.toString()</target>
        </trans-unit>
        <trans-unit id="1bee89198d53eea5c592bbbee940088255a69145" translate="yes" xml:space="preserve">
          <source>LockSupport</source>
          <target state="translated">LockSupport</target>
        </trans-unit>
        <trans-unit id="7e8f188ee68005d1b031d0971b91d2736eee53ff" translate="yes" xml:space="preserve">
          <source>LockSupport.getBlocker()</source>
          <target state="translated">LockSupport.getBlocker()</target>
        </trans-unit>
        <trans-unit id="7c0f210ef1b5a3794ceb1e58013a74c86f05165f" translate="yes" xml:space="preserve">
          <source>LockSupport.park()</source>
          <target state="translated">LockSupport.park()</target>
        </trans-unit>
        <trans-unit id="29f2e82fc0c74c753a1cb1609f56bb2590aa5101" translate="yes" xml:space="preserve">
          <source>LockSupport.parkNanos()</source>
          <target state="translated">LockSupport.parkNanos()</target>
        </trans-unit>
        <trans-unit id="f51da555ac71cf98fac5351973abe8d79bb2e877" translate="yes" xml:space="preserve">
          <source>LockSupport.parkUntil()</source>
          <target state="translated">LockSupport.parkUntil()</target>
        </trans-unit>
        <trans-unit id="446e4a1101d10313ea246fb88979d04844936676" translate="yes" xml:space="preserve">
          <source>LockSupport.unpark()</source>
          <target state="translated">LockSupport.unpark()</target>
        </trans-unit>
        <trans-unit id="55ffbc3dff00795cf5be60aecbc822fd5da50db7" translate="yes" xml:space="preserve">
          <source>Locks acquired by a popped frame are released when it is popped. This applies to synchronized methods that are popped, and to any synchronized blocks within them.</source>
          <target state="translated">팝된 프레임에 의해 획득 된 잠금은 팝될 때 해제됩니다. 이것은 팝된 동기화 된 메서드와 그 안의 동기화 된 블록에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="efd9abf681036bfb5a486c9fd73a235ec2e424bb" translate="yes" xml:space="preserve">
          <source>Log RMI calls to the output stream &lt;code&gt;out&lt;/code&gt;.</source>
          <target state="translated">출력 스트림에 로그인 RMI 호출 &lt;code&gt;out&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fa05878290ed5c06104ba9c502876ab42372f97f" translate="yes" xml:space="preserve">
          <source>Log RMI calls to the output stream &lt;code&gt;out&lt;/code&gt;. If &lt;code&gt;out&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, call logging is turned off.</source>
          <target state="translated">출력 스트림에 로그인 RMI 호출 &lt;code&gt;out&lt;/code&gt; . 경우 &lt;code&gt;out&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; , 통화 로깅이 해제됩니다.</target>
        </trans-unit>
        <trans-unit id="2e9b4034edbb0fb306b8df63b3f431293e873244" translate="yes" xml:space="preserve">
          <source>Log a CONFIG message, which is only to be constructed if the logging level is such that the message will actually be logged.</source>
          <target state="translated">로깅 레벨이 메시지가 실제로 로그되는 수준 인 경우에만 구성되는 CONFIG 메시지를 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="f2c361495a42332c5c9413958b61942a3b34f013" translate="yes" xml:space="preserve">
          <source>Log a CONFIG message.</source>
          <target state="translated">CONFIG 메시지를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="cfa618e1c11689620d1536a8a39049e3857ab50b" translate="yes" xml:space="preserve">
          <source>Log a FINE message, which is only to be constructed if the logging level is such that the message will actually be logged.</source>
          <target state="translated">FINE 메시지를 기록하십시오. 로깅 수준이 메시지가 실제로 기록되는 수준 인 경우에만 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="89fadc8ddd5eea925d8f30e4a50cb8725e3513db" translate="yes" xml:space="preserve">
          <source>Log a FINE message.</source>
          <target state="translated">FINE 메시지를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="350fddfbd75024077050aecfbe92d7229f7db523" translate="yes" xml:space="preserve">
          <source>Log a FINER message, which is only to be constructed if the logging level is such that the message will actually be logged.</source>
          <target state="translated">로깅 레벨이 메시지가 실제로 로그되는 수준 인 경우에만 구성되는 FINER 메시지를 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="ab4c4e10029a3623ca1d87701965a83051aea7f1" translate="yes" xml:space="preserve">
          <source>Log a FINER message.</source>
          <target state="translated">FINER 메시지를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="b5b9127affec4e9767eb9f794d84403bf95d0044" translate="yes" xml:space="preserve">
          <source>Log a FINEST message, which is only to be constructed if the logging level is such that the message will actually be logged.</source>
          <target state="translated">FINEST 메시지를 로그하십시오. 로깅 레벨이 메시지가 실제로 로그되는 수준 인 경우에만 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="825f9e29b12f27060731148631fd7b826b765f88" translate="yes" xml:space="preserve">
          <source>Log a FINEST message.</source>
          <target state="translated">FINEST 메시지를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="891637abcad72ae8015aa8d60b3bd5a26c3770dd" translate="yes" xml:space="preserve">
          <source>Log a INFO message, which is only to be constructed if the logging level is such that the message will actually be logged.</source>
          <target state="translated">INFO 메시지를 기록하십시오. 이는 로깅 수준이 메시지가 실제로 기록되는 수준 인 경우에만 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="b88b50d551ed3a7e0a269ffdf6fccf84d115c2fd" translate="yes" xml:space="preserve">
          <source>Log a LogRecord.</source>
          <target state="translated">LogRecord를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="2fa2062fce5d3caf2feca4986bd0a3cb04fe39f7" translate="yes" xml:space="preserve">
          <source>Log a SEVERE message, which is only to be constructed if the logging level is such that the message will actually be logged.</source>
          <target state="translated">로깅 수준이 메시지가 실제로 기록되는 수준 인 경우에만 구성되는 SEVERE 메시지를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="08509ba485f56ce9782f37bf53c5cd00327f9346" translate="yes" xml:space="preserve">
          <source>Log a SEVERE message.</source>
          <target state="translated">SEVERE 메시지를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="4a69f8c1ed6ea827389a423352e108f4117bbe38" translate="yes" xml:space="preserve">
          <source>Log a WARNING message, which is only to be constructed if the logging level is such that the message will actually be logged.</source>
          <target state="translated">로깅 수준이 메시지가 실제로 기록되는 수준 인 경우에만 구성되는 WARNING 메시지를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="c4910e80932ad94d24001a8099dad018d46c67d3" translate="yes" xml:space="preserve">
          <source>Log a WARNING message.</source>
          <target state="translated">경고 메시지를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="14a4a425f52de983e132109f410647495f542684" translate="yes" xml:space="preserve">
          <source>Log a lazily constructed message, specifying source class and method, with associated Throwable information.</source>
          <target state="translated">연관된 Throwable 정보와 함께 소스 클래스 및 메소드를 지정하여 느리게 구성된 메시지를 로깅하십시오.</target>
        </trans-unit>
        <trans-unit id="00d7624c3c04e27c82e4b4d7451d1d32b2c9afa2" translate="yes" xml:space="preserve">
          <source>Log a lazily constructed message, specifying source class and method, with no arguments.</source>
          <target state="translated">인수없이 소스 클래스 및 메소드를 지정하여 느리게 구성된 메시지를 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="ad492ee04a1f853e694a69ce7676ba7099392ab1" translate="yes" xml:space="preserve">
          <source>Log a lazily constructed message, with associated Throwable information.</source>
          <target state="translated">연관된 Throwable 정보와 함께 느리게 구성된 메시지를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="ea083a2cfb1571a0a41f32392e940a36cc351d12" translate="yes" xml:space="preserve">
          <source>Log a message, specifying source class and method, with a single object parameter to the log message.</source>
          <target state="translated">단일 오브젝트 매개 변수를 사용하여 소스 클래스 및 메소드를 지정하여 메시지를 로그 메시지에 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="98ab80a781cf1e8320547d1d6f36f125b2f3f3c2" translate="yes" xml:space="preserve">
          <source>Log a message, specifying source class and method, with an array of object arguments.</source>
          <target state="translated">개체 인수 배열을 사용하여 소스 클래스와 메서드를 지정하여 메시지를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="3b3af2e9f94eb754c029e9f2359cedf4cc9093b8" translate="yes" xml:space="preserve">
          <source>Log a message, specifying source class and method, with associated Throwable information.</source>
          <target state="translated">연관된 Throwable 정보와 함께 소스 클래스 및 메소드를 지정하여 메시지를 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="be1f9a25a9334aa0a22ffb731803a823748bbc58" translate="yes" xml:space="preserve">
          <source>Log a message, specifying source class and method, with no arguments.</source>
          <target state="translated">인수없이 소스 클래스 및 메소드를 지정하여 메시지를 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="ce0a9f4fb74e895f1ec63f317c70c2d2beb1ce13" translate="yes" xml:space="preserve">
          <source>Log a message, specifying source class, method, and resource bundle name with no arguments.</source>
          <target state="translated">인수없이 소스 클래스, 메소드 및 자원 번들 이름을 지정하여 메시지를 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="b2cde7a94125da8f1e46abbdead806243167409d" translate="yes" xml:space="preserve">
          <source>Log a message, specifying source class, method, and resource bundle name, with a single object parameter to the log message.</source>
          <target state="translated">단일 오브젝트 매개 변수와 함께 소스 클래스, 메소드 및 자원 번들 이름을 지정하여 메시지를 로그 메시지에 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="1b6024bf17f687fc387a1487535798f8b4755f9c" translate="yes" xml:space="preserve">
          <source>Log a message, specifying source class, method, and resource bundle name, with an array of object arguments.</source>
          <target state="translated">오브젝트 인수 배열로 소스 클래스, 메소드 및 자원 번들 이름을 지정하여 메시지를 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="b509a1ade407fce8f143a7039cf6feb9225acdb2" translate="yes" xml:space="preserve">
          <source>Log a message, specifying source class, method, and resource bundle name, with associated Throwable information.</source>
          <target state="translated">연관된 Throwable 정보와 함께 소스 클래스, 메소드 및 자원 번들 이름을 지정하여 메시지를 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="f807376cc21a53a21577ce209b889493dd3cba00" translate="yes" xml:space="preserve">
          <source>Log a message, specifying source class, method, and resource bundle, with an optional list of message parameters.</source>
          <target state="translated">선택적 메시지 매개 변수 목록을 사용하여 소스 클래스, 메소드 및 자원 번들을 지정하여 메시지를 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="e57ce451c9b4f697f7a79508e79c7e6c0d5a3b7b" translate="yes" xml:space="preserve">
          <source>Log a message, specifying source class, method, and resource bundle, with associated Throwable information.</source>
          <target state="translated">연관된 Throwable 정보와 함께 소스 클래스, 메소드 및 자원 번들을 지정하여 메시지를 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="1260747aadcd9c39cc8f7aba9f86478aba53c191" translate="yes" xml:space="preserve">
          <source>Log a message, which is only to be constructed if the logging level is such that the message will actually be logged.</source>
          <target state="translated">로깅 수준이 메시지가 실제로 기록되는 수준 인 경우에만 구성되는 메시지를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="4f0620159ddd541ee491ce6a48a179be5773ee86" translate="yes" xml:space="preserve">
          <source>Log a message, with an array of object arguments.</source>
          <target state="translated">객체 인수 배열을 사용하여 메시지를 기록합니다.</target>
        </trans-unit>
        <trans-unit id="7d4f81cf494b9942696aece562fb9378645dace0" translate="yes" xml:space="preserve">
          <source>Log a message, with associated Throwable information.</source>
          <target state="translated">관련된 Throwable 정보와 함께 메시지를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="bacd451d9c81d5a3bdf1e376fb72bd1925275447" translate="yes" xml:space="preserve">
          <source>Log a message, with no arguments.</source>
          <target state="translated">인수없이 메시지를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="7d617dc0481c213b3df8080027beaa85a91c5e30" translate="yes" xml:space="preserve">
          <source>Log a message, with one object parameter.</source>
          <target state="translated">하나의 개체 매개 변수를 사용하여 메시지를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="c47bce4a9a261f46cc37ea5ea8042abb445bc6e3" translate="yes" xml:space="preserve">
          <source>Log a method entry, with an array of parameters.</source>
          <target state="translated">매개 변수 배열을 사용하여 메소드 항목을 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="877b982063f0999a8dbc7231705a4a77f2525da4" translate="yes" xml:space="preserve">
          <source>Log a method entry, with one parameter.</source>
          <target state="translated">하나의 매개 변수를 사용하여 메소드 항목을 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="0033404137d1a8ec9e335ea43a99ab656bbe13cf" translate="yes" xml:space="preserve">
          <source>Log a method entry.</source>
          <target state="translated">메소드 항목을 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="0a742ba14e5d61ada10a7fe5cf6fc1eeba1397af" translate="yes" xml:space="preserve">
          <source>Log a method return, with result object.</source>
          <target state="translated">결과 개체와 함께 메서드 반환을 기록합니다.</target>
        </trans-unit>
        <trans-unit id="a1ca8e07b1ee91fd5b32bee4cdc66d7b02aac5a4" translate="yes" xml:space="preserve">
          <source>Log a method return.</source>
          <target state="translated">메소드 리턴을 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="4f5534bb67183703295c196ac5bf9b1e8baac0d2" translate="yes" xml:space="preserve">
          <source>Log an INFO message.</source>
          <target state="translated">INFO 메시지를 기록하십시오.</target>
        </trans-unit>
        <trans-unit id="b1e7930ce9b8e0cad297995f6204d0acfc82aac1" translate="yes" xml:space="preserve">
          <source>Log graphics operations.</source>
          <target state="translated">그래픽 작업을 기록합니다.</target>
        </trans-unit>
        <trans-unit id="3d0de90d0fa7a171800b5b4f100a2614cde7156a" translate="yes" xml:space="preserve">
          <source>Log in to this provider.</source>
          <target state="translated">이 제공자에 로그인하십시오.</target>
        </trans-unit>
        <trans-unit id="275826d09f7f01d09afd073c3fa202a39957d67b" translate="yes" xml:space="preserve">
          <source>Log out from this provider.</source>
          <target state="translated">이 제공자에서 로그 아웃하십시오.</target>
        </trans-unit>
        <trans-unit id="8d19355cfb80459452fb2b8856ea22c0d6fca69c" translate="yes" xml:space="preserve">
          <source>Log throwing an exception.</source>
          <target state="translated">로그에서 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="eac680d75eba04d72a096023b887e64ff7cdd75d" translate="yes" xml:space="preserve">
          <source>Log, in a system dependent way, the access specified in the permissions component of the ACL entry.</source>
          <target state="translated">ACL 항목의 권한 구성 요소에 지정된 액세스를 시스템 종속 방식으로 로그하십시오.</target>
        </trans-unit>
        <trans-unit id="72f6de230872708882c80aecd27e92ef3e0f48de" translate="yes" xml:space="preserve">
          <source>LogManager</source>
          <target state="translated">LogManager</target>
        </trans-unit>
        <trans-unit id="fdfab037b7e90eeb60f45c54b663ed4328013bf0" translate="yes" xml:space="preserve">
          <source>LogManager &lt;a href=&quot;#getProperty(java.lang.String)&quot;&gt;properties&lt;/a&gt; are updated with the resulting value in the resulting configuration.</source>
          <target state="translated">LogManager &lt;a href=&quot;#getProperty(java.lang.String)&quot;&gt;속성&lt;/a&gt; 은 결과 구성의 결과 값으로 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="84b78dfbfa6f46453ce05583d85d846cfd96ab1e" translate="yes" xml:space="preserve">
          <source>LogManager Configuration</source>
          <target state="translated">LogManager 구성</target>
        </trans-unit>
        <trans-unit id="c1f80faf88d9622e7cccdbb13912c394691c1bd4" translate="yes" xml:space="preserve">
          <source>LogManager.addLogger()</source>
          <target state="translated">LogManager.addLogger()</target>
        </trans-unit>
        <trans-unit id="9ec65323ebdac54a14e3456ba69998e4e3de7aa1" translate="yes" xml:space="preserve">
          <source>LogManager.addPropertyChangeListener()</source>
          <target state="translated">LogManager.addPropertyChangeListener()</target>
        </trans-unit>
        <trans-unit id="ef419db42f9c9a3665e076af2d31cc53f5d6144b" translate="yes" xml:space="preserve">
          <source>LogManager.checkAccess()</source>
          <target state="translated">LogManager.checkAccess()</target>
        </trans-unit>
        <trans-unit id="6e7e18be83e2b3e619ac22effc2550c06871a15f" translate="yes" xml:space="preserve">
          <source>LogManager.getLogManager()</source>
          <target state="translated">LogManager.getLogManager()</target>
        </trans-unit>
        <trans-unit id="a400386941c4b91ad3de0b9a5927db112791cafa" translate="yes" xml:space="preserve">
          <source>LogManager.getLogger()</source>
          <target state="translated">LogManager.getLogger()</target>
        </trans-unit>
        <trans-unit id="b91ac2b551b6abedb18dc3a4e12fe338ea046950" translate="yes" xml:space="preserve">
          <source>LogManager.getLoggerNames()</source>
          <target state="translated">LogManager.getLoggerNames()</target>
        </trans-unit>
        <trans-unit id="98d9f1b6d571be59ecc70d4f62e836695b8d10c9" translate="yes" xml:space="preserve">
          <source>LogManager.getLoggingMXBean()</source>
          <target state="translated">LogManager.getLoggingMXBean()</target>
        </trans-unit>
        <trans-unit id="c366ddf0e61873dd44b0148ce6b8ed1d44127137" translate="yes" xml:space="preserve">
          <source>LogManager.getProperty()</source>
          <target state="translated">LogManager.getProperty()</target>
        </trans-unit>
        <trans-unit id="85570bc8fcb528390813fcc98e9ad7174d69fa54" translate="yes" xml:space="preserve">
          <source>LogManager.readConfiguration()</source>
          <target state="translated">LogManager.readConfiguration()</target>
        </trans-unit>
        <trans-unit id="5d9a5d3e91d19549ff176f41b49e6944bdeae434" translate="yes" xml:space="preserve">
          <source>LogManager.removePropertyChangeListener()</source>
          <target state="translated">LogManager.removePropertyChangeListener()</target>
        </trans-unit>
        <trans-unit id="7f310a68364f32c399e0f9a7f589765ed4b16d18" translate="yes" xml:space="preserve">
          <source>LogManager.reset()</source>
          <target state="translated">LogManager.reset()</target>
        </trans-unit>
        <trans-unit id="fd29f6be8d19422b418e59e3900a6e25d3da48e7" translate="yes" xml:space="preserve">
          <source>LogRecord</source>
          <target state="translated">LogRecord</target>
        </trans-unit>
        <trans-unit id="d2f470ebafb4c0fe3ba0fbdc5f7fad0573efc7ff" translate="yes" xml:space="preserve">
          <source>LogRecord maintains timestamps with nanosecond resolution, using &lt;a href=&quot;../../../../java.base/java/time/instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt; values.</source>
          <target state="translated">LogRecord는 &lt;a href=&quot;../../../../java.base/java/time/instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt; 값을 사용하여 나노초 해상도로 타임 스탬프를 유지 합니다.</target>
        </trans-unit>
        <trans-unit id="65de926c674bef2ed1d5df69abf376e697ac3482" translate="yes" xml:space="preserve">
          <source>LogRecord maintains timestamps with nanosecond resolution, using &lt;a href=&quot;../../../../java.base/java/time/instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt; values. For this reason, &lt;a href=&quot;#setInstant(java.time.Instant)&quot;&gt;&lt;code&gt;setInstant()&lt;/code&gt;&lt;/a&gt; should be used in preference to &lt;code&gt;setMillis()&lt;/code&gt;.</source>
          <target state="translated">LogRecord는 &lt;a href=&quot;../../../../java.base/java/time/instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; &lt;/a&gt; 값을 사용하여 나노초 해상도로 타임 스탬프를 유지 합니다. 이러한 이유로 &lt;code&gt;setMillis()&lt;/code&gt; 보다 우선적으로 &lt;a href=&quot;#setInstant(java.time.Instant)&quot;&gt; &lt;code&gt;setInstant()&lt;/code&gt; &lt;/a&gt; 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="adbc404a04cb3b1e6f75d8785fe46450159e836d" translate="yes" xml:space="preserve">
          <source>LogRecord objects are used to pass logging requests between the logging framework and individual log Handlers.</source>
          <target state="translated">LogRecord 오브젝트는 로깅 프레임 워크와 개별 로그 핸들러간에 로깅 요청을 전달하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a937d47c1e66924bcc58b1540f433617692eb818" translate="yes" xml:space="preserve">
          <source>LogRecord.getLevel()</source>
          <target state="translated">LogRecord.getLevel()</target>
        </trans-unit>
        <trans-unit id="9a4689fb4499b05b6fdf52dc463553d649658ef1" translate="yes" xml:space="preserve">
          <source>LogRecord.getLoggerName()</source>
          <target state="translated">LogRecord.getLoggerName()</target>
        </trans-unit>
        <trans-unit id="2e27da42f6e90d3775849f1db45cafd37998bb12" translate="yes" xml:space="preserve">
          <source>LogRecord.getMessage()</source>
          <target state="translated">LogRecord.getMessage()</target>
        </trans-unit>
        <trans-unit id="3bcd53689d69c5355f36b7411775f1cf27a3fe6f" translate="yes" xml:space="preserve">
          <source>LogRecord.getMillis()</source>
          <target state="translated">LogRecord.getMillis()</target>
        </trans-unit>
        <trans-unit id="fe27f3503916151b6e90eabf0e52af346983cbc2" translate="yes" xml:space="preserve">
          <source>LogRecord.getParameters()</source>
          <target state="translated">LogRecord.getParameters()</target>
        </trans-unit>
        <trans-unit id="27a4924a4d8157684b7919ba5b2dc9fc4327ac0e" translate="yes" xml:space="preserve">
          <source>LogRecord.getResourceBundle()</source>
          <target state="translated">LogRecord.getResourceBundle()</target>
        </trans-unit>
        <trans-unit id="88eb098fbe4dbbdcb16d736db2008cadfda4e99c" translate="yes" xml:space="preserve">
          <source>LogRecord.getResourceBundleName()</source>
          <target state="translated">LogRecord.getResourceBundleName()</target>
        </trans-unit>
        <trans-unit id="c6ada0f9df97804c463b981cf102b4d7835db614" translate="yes" xml:space="preserve">
          <source>LogRecord.getSequenceNumber()</source>
          <target state="translated">LogRecord.getSequenceNumber()</target>
        </trans-unit>
        <trans-unit id="27c3b92cf3b9f1238c927f6646be2c0d96b16fa7" translate="yes" xml:space="preserve">
          <source>LogRecord.getSourceClassName()</source>
          <target state="translated">LogRecord.getSourceClassName()</target>
        </trans-unit>
        <trans-unit id="6f148eba1378f9fe001545bd5e1a80cb8daa201c" translate="yes" xml:space="preserve">
          <source>LogRecord.getSourceMethodName()</source>
          <target state="translated">LogRecord.getSourceMethodName()</target>
        </trans-unit>
        <trans-unit id="6789917cc10d77c6350a2ff086535f4b1bb35a4c" translate="yes" xml:space="preserve">
          <source>LogRecord.getThreadID()</source>
          <target state="translated">LogRecord.getThreadID()</target>
        </trans-unit>
        <trans-unit id="d8f259c74608f4add7d998cbf93d80dc4fee7b7e" translate="yes" xml:space="preserve">
          <source>LogRecord.getThrown()</source>
          <target state="translated">LogRecord.getThrown()</target>
        </trans-unit>
        <trans-unit id="f127c8e98c63a85063918d169f49f6e86a3ca9e2" translate="yes" xml:space="preserve">
          <source>LogRecord.setLevel()</source>
          <target state="translated">LogRecord.setLevel()</target>
        </trans-unit>
        <trans-unit id="1b9e82f154462ac3dae0f3000170379a7bae925c" translate="yes" xml:space="preserve">
          <source>LogRecord.setLoggerName()</source>
          <target state="translated">LogRecord.setLoggerName()</target>
        </trans-unit>
        <trans-unit id="f7457aba7c017dca04d0542765bcec1abea969c7" translate="yes" xml:space="preserve">
          <source>LogRecord.setMessage()</source>
          <target state="translated">LogRecord.setMessage()</target>
        </trans-unit>
        <trans-unit id="eb752032e0f40e61cc53006e1171c4dbc0a6c35f" translate="yes" xml:space="preserve">
          <source>LogRecord.setMillis()</source>
          <target state="translated">LogRecord.setMillis()</target>
        </trans-unit>
        <trans-unit id="033e6808a0540bcae7bb53c0492e02d1fe263c70" translate="yes" xml:space="preserve">
          <source>LogRecord.setParameters()</source>
          <target state="translated">LogRecord.setParameters()</target>
        </trans-unit>
        <trans-unit id="3465e901d93d061db1a74a11d5919f856e58fcd7" translate="yes" xml:space="preserve">
          <source>LogRecord.setResourceBundle()</source>
          <target state="translated">LogRecord.setResourceBundle()</target>
        </trans-unit>
        <trans-unit id="618cc94e4e7fcf3b1b8ab0aad99ecb022dc68040" translate="yes" xml:space="preserve">
          <source>LogRecord.setResourceBundleName()</source>
          <target state="translated">LogRecord.setResourceBundleName()</target>
        </trans-unit>
        <trans-unit id="6ebe7c93e5c59ca599432a070e5731da6e9f2c64" translate="yes" xml:space="preserve">
          <source>LogRecord.setSequenceNumber()</source>
          <target state="translated">LogRecord.setSequenceNumber()</target>
        </trans-unit>
        <trans-unit id="a40d6b39ebbc6e3ad396b43e583215e8ead9805d" translate="yes" xml:space="preserve">
          <source>LogRecord.setSourceClassName()</source>
          <target state="translated">LogRecord.setSourceClassName()</target>
        </trans-unit>
        <trans-unit id="b9f24078b2d376e8af49aac1116d691a2a2023b4" translate="yes" xml:space="preserve">
          <source>LogRecord.setSourceMethodName()</source>
          <target state="translated">LogRecord.setSourceMethodName()</target>
        </trans-unit>
        <trans-unit id="e2362aca38b24b5c4e4ad87de4b9b8da2f050355" translate="yes" xml:space="preserve">
          <source>LogRecord.setThreadID()</source>
          <target state="translated">LogRecord.setThreadID()</target>
        </trans-unit>
        <trans-unit id="16f0b58d01221e551694c7b4568158dd7a4b1730" translate="yes" xml:space="preserve">
          <source>LogRecord.setThrown()</source>
          <target state="translated">LogRecord.setThrown()</target>
        </trans-unit>
        <trans-unit id="15f8b368ef60e4a4b655141caf32693cceb08ecf" translate="yes" xml:space="preserve">
          <source>LogStream</source>
          <target state="translated">LogStream</target>
        </trans-unit>
        <trans-unit id="8432c24573f3f89fad60802fe8eddf1da6315768" translate="yes" xml:space="preserve">
          <source>Logger</source>
          <target state="translated">Logger</target>
        </trans-unit>
        <trans-unit id="64c5b88f33555ed86d6e402519725f173be03ce7" translate="yes" xml:space="preserve">
          <source>Logger objects may be obtained by calls on one of the getLogger factory methods. These will either create a new Logger or return a suitable existing Logger. It is important to note that the Logger returned by one of the &lt;code&gt;getLogger&lt;/code&gt; factory methods may be garbage collected at any time if a strong reference to the Logger is not kept.</source>
          <target state="translated">로거 객체는 getLogger 팩토리 메소드 중 하나를 호출하여 얻을 수 있습니다. 이것들은 새로운 로거를 만들거나 적절한 기존 로거를 반환합니다. &lt;code&gt;getLogger&lt;/code&gt; 팩토리 메소드 중 하나에 의해 리턴 된 Logger는 Logger에 대한 강력한 참조가 유지되지 않는 경우 언제든지 가비지 콜렉션 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba59e579ea8358cb12ccee1821514da4d41d5688" translate="yes" xml:space="preserve">
          <source>Logger.addHandler()</source>
          <target state="translated">Logger.addHandler()</target>
        </trans-unit>
        <trans-unit id="5ea8955b35c88d81aa40f9de17311621274419ff" translate="yes" xml:space="preserve">
          <source>Logger.config()</source>
          <target state="translated">Logger.config()</target>
        </trans-unit>
        <trans-unit id="a3bfe3f1ec305fb3e106d57e6fcac616b889539f" translate="yes" xml:space="preserve">
          <source>Logger.entering()</source>
          <target state="translated">Logger.entering()</target>
        </trans-unit>
        <trans-unit id="f986132444219941358e566ec4c46918fc7603e6" translate="yes" xml:space="preserve">
          <source>Logger.exiting()</source>
          <target state="translated">Logger.exiting()</target>
        </trans-unit>
        <trans-unit id="4db950d7ef1ce142b64dbdc94d9aa6f4fc605719" translate="yes" xml:space="preserve">
          <source>Logger.fine()</source>
          <target state="translated">Logger.fine()</target>
        </trans-unit>
        <trans-unit id="8de7aa21453bb512a5c96827bcede19a5f804b7d" translate="yes" xml:space="preserve">
          <source>Logger.finer()</source>
          <target state="translated">Logger.finer()</target>
        </trans-unit>
        <trans-unit id="9a84c00feffbe32787cd778fa17ef61789aed423" translate="yes" xml:space="preserve">
          <source>Logger.finest()</source>
          <target state="translated">Logger.finest()</target>
        </trans-unit>
        <trans-unit id="971938645c03ea44aa7d35d74c296c3fea9d527c" translate="yes" xml:space="preserve">
          <source>Logger.getAnonymousLogger()</source>
          <target state="translated">Logger.getAnonymousLogger()</target>
        </trans-unit>
        <trans-unit id="4df020ee79211b7bd13fcdfc91699bddd8c4ad73" translate="yes" xml:space="preserve">
          <source>Logger.getFilter()</source>
          <target state="translated">Logger.getFilter()</target>
        </trans-unit>
        <trans-unit id="995c860b701b3cb2ec115ef2ef132a787d0c95e1" translate="yes" xml:space="preserve">
          <source>Logger.getGlobal()</source>
          <target state="translated">Logger.getGlobal()</target>
        </trans-unit>
        <trans-unit id="8d5ec809d51b43f7fd55608a320e1e5c56e3e1dd" translate="yes" xml:space="preserve">
          <source>Logger.getHandlers()</source>
          <target state="translated">Logger.getHandlers()</target>
        </trans-unit>
        <trans-unit id="78a93465db2056bc7c09aab9eb3fcecae3704af5" translate="yes" xml:space="preserve">
          <source>Logger.getLevel()</source>
          <target state="translated">Logger.getLevel()</target>
        </trans-unit>
        <trans-unit id="ecdca9779144ab253fef5ba47f4514c97730a03a" translate="yes" xml:space="preserve">
          <source>Logger.getLogger()</source>
          <target state="translated">Logger.getLogger()</target>
        </trans-unit>
        <trans-unit id="b2a5c3b3b306dd18d703fb208955b0ba060d79e5" translate="yes" xml:space="preserve">
          <source>Logger.getName()</source>
          <target state="translated">Logger.getName()</target>
        </trans-unit>
        <trans-unit id="9584d128d6f110a847c937b2605c227b404061ea" translate="yes" xml:space="preserve">
          <source>Logger.getParent()</source>
          <target state="translated">Logger.getParent()</target>
        </trans-unit>
        <trans-unit id="fe9de8e945288155ad067af76ffa417444679151" translate="yes" xml:space="preserve">
          <source>Logger.getResourceBundle()</source>
          <target state="translated">Logger.getResourceBundle()</target>
        </trans-unit>
        <trans-unit id="95f907c735e246fac325b91baf9f101b51dfaaa3" translate="yes" xml:space="preserve">
          <source>Logger.getResourceBundleName()</source>
          <target state="translated">Logger.getResourceBundleName()</target>
        </trans-unit>
        <trans-unit id="24e5cceed0b878039bf7746ffd32bb343c7e9a6b" translate="yes" xml:space="preserve">
          <source>Logger.getUseParentHandlers()</source>
          <target state="translated">Logger.getUseParentHandlers()</target>
        </trans-unit>
        <trans-unit id="5b7d0d834a8c00effab8e9af6e19030b1e114482" translate="yes" xml:space="preserve">
          <source>Logger.info()</source>
          <target state="translated">Logger.info()</target>
        </trans-unit>
        <trans-unit id="2a68e878cef92e96190ce5974c468859e36b5d66" translate="yes" xml:space="preserve">
          <source>Logger.isLoggable()</source>
          <target state="translated">Logger.isLoggable()</target>
        </trans-unit>
        <trans-unit id="f78bcfd4e8114b2887d6474bac673cdaca9680d1" translate="yes" xml:space="preserve">
          <source>Logger.log()</source>
          <target state="translated">Logger.log()</target>
        </trans-unit>
        <trans-unit id="13c02099dcc382905efba774160bb5939686ee0c" translate="yes" xml:space="preserve">
          <source>Logger.logp()</source>
          <target state="translated">Logger.logp()</target>
        </trans-unit>
        <trans-unit id="551d6f75b77d7000509db323db1e1dfda2a1fbf1" translate="yes" xml:space="preserve">
          <source>Logger.logrb()</source>
          <target state="translated">Logger.logrb()</target>
        </trans-unit>
        <trans-unit id="df305068a4473731ea05ebd2d6454a6d9f925cd4" translate="yes" xml:space="preserve">
          <source>Logger.removeHandler()</source>
          <target state="translated">Logger.removeHandler()</target>
        </trans-unit>
        <trans-unit id="f032101743191cc5c265a67a744158512e18fe6f" translate="yes" xml:space="preserve">
          <source>Logger.setFilter()</source>
          <target state="translated">Logger.setFilter()</target>
        </trans-unit>
        <trans-unit id="5751d83a867d2cd0c2d813c169f8a99d0954fb8c" translate="yes" xml:space="preserve">
          <source>Logger.setLevel()</source>
          <target state="translated">Logger.setLevel()</target>
        </trans-unit>
        <trans-unit id="bec6b2a0dee5abe2849bca82a637cd55aeabbe12" translate="yes" xml:space="preserve">
          <source>Logger.setParent()</source>
          <target state="translated">Logger.setParent()</target>
        </trans-unit>
        <trans-unit id="0a7715c2f592b20891e7b01c341fda356a7926e2" translate="yes" xml:space="preserve">
          <source>Logger.setResourceBundle()</source>
          <target state="translated">Logger.setResourceBundle()</target>
        </trans-unit>
        <trans-unit id="469676540cd10e84bcb674abd2fe8624a2b9dd9f" translate="yes" xml:space="preserve">
          <source>Logger.setUseParentHandlers()</source>
          <target state="translated">Logger.setUseParentHandlers()</target>
        </trans-unit>
        <trans-unit id="19d004f16ef507ed5245fd11d86eb69329e4a54a" translate="yes" xml:space="preserve">
          <source>Logger.severe()</source>
          <target state="translated">Logger.severe()</target>
        </trans-unit>
        <trans-unit id="ee34cff08b5e089a8af597a0ac60b0e83763972b" translate="yes" xml:space="preserve">
          <source>Logger.throwing()</source>
          <target state="translated">Logger.throwing()</target>
        </trans-unit>
        <trans-unit id="d078ac44a0856931e9274f52234562bdecd8db6d" translate="yes" xml:space="preserve">
          <source>Logger.warning()</source>
          <target state="translated">Logger.warning()</target>
        </trans-unit>
        <trans-unit id="2a5285ee5e126df6c85da42c407ba5c4a1b07770" translate="yes" xml:space="preserve">
          <source>LoggerFinder</source>
          <target state="translated">LoggerFinder</target>
        </trans-unit>
        <trans-unit id="1bcb7e2cdeddd75feab61632a1d8c69e5f5bdce8" translate="yes" xml:space="preserve">
          <source>Loggers are organized into a naming hierarchy based on their dot separated names. Thus &quot;a.b.c&quot; is a child of &quot;a.b&quot;, but &quot;a.b1&quot; and a.b2&quot; are peers.</source>
          <target state="translated">로거는 점으로 구분 된 이름을 기반으로 명명 계층 구조로 구성됩니다. 따라서 &quot;abc&quot;는 &quot;ab&quot;의 자식이지만 &quot;a.b1&quot;과 a.b2 &quot;는 피어입니다.</target>
        </trans-unit>
        <trans-unit id="f5497a69d27950bdc4f2d7a9e5b53e1b97585932" translate="yes" xml:space="preserve">
          <source>Logging messages will be forwarded to registered Handler objects, which can forward the messages to a variety of destinations, including consoles, files, OS logs, etc.</source>
          <target state="translated">로깅 메시지는 등록 된 핸들러 오브젝트로 전달되며 콘솔, 파일, OS 로그 등을 포함한 다양한 대상으로 메시지를 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f416cfce8868fe84497d709100d9d6dcde820765" translate="yes" xml:space="preserve">
          <source>Logging out a &lt;code&gt;Subject&lt;/code&gt; involves only one phase. The &lt;code&gt;LoginContext&lt;/code&gt; invokes the LoginModule's &lt;code&gt;logout&lt;/code&gt; method. The &lt;code&gt;logout&lt;/code&gt; method for the &lt;code&gt;LoginModule&lt;/code&gt; then performs the logout procedures, such as removing Principals or Credentials from the &lt;code&gt;Subject&lt;/code&gt; or logging session information.</source>
          <target state="translated">&lt;code&gt;Subject&lt;/code&gt; 를 로그 아웃하려면 한 단계 만 포함됩니다. &lt;code&gt;LoginContext&lt;/code&gt; 로그인 모듈의 호출 &lt;code&gt;logout&lt;/code&gt; 방법. 그런 다음 &lt;code&gt;LoginModule&lt;/code&gt; 의 &lt;code&gt;logout&lt;/code&gt; 메소드 는 &lt;code&gt;Subject&lt;/code&gt; 에서 프린시 펄 또는 신임 정보 제거 또는 세션 정보 로깅 과 같은 로그 아웃 프로 시저를 수행합니다 .</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
