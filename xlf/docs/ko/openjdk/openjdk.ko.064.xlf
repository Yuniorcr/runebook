<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="274190b0577f0d0dcd4180b3f81f886e201a370b" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;enumeration&quot;&gt;&lt;code&gt;Enumeration&lt;/code&gt;&lt;/a&gt; can be converted into an &lt;code&gt;Iterator&lt;/code&gt; by using the &lt;a href=&quot;enumeration#asIterator()&quot;&gt;&lt;code&gt;Enumeration.asIterator()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;enumeration&quot;&gt; &lt;code&gt;Enumeration&lt;/code&gt; &lt;/a&gt; 로 전환 될 수 &lt;code&gt;Iterator&lt;/code&gt; 하여 &lt;a href=&quot;enumeration#asIterator()&quot;&gt; &lt;code&gt;Enumeration.asIterator()&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="935dcd5e72d6e4581b22e340e57695e0b66b55e7" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;exchanger&quot;&gt;&lt;code&gt;Exchanger&lt;/code&gt;&lt;/a&gt; allows two threads to exchange objects at a rendezvous point, and is useful in several pipeline designs.</source>
          <target state="translated">&lt;a href=&quot;exchanger&quot;&gt; &lt;code&gt;Exchanger&lt;/code&gt; &lt;/a&gt; 랑데부 지점에서 교환 개체에 대한 두 개의 스레드를 허용하고, 여러 파이프 라인 설계에 유용하다.</target>
        </trans-unit>
        <trans-unit id="e27c8aaf65d75ce09eff85c14d3c20dce763a054" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;executor&quot;&gt;&lt;code&gt;Executor&lt;/code&gt;&lt;/a&gt; that provides methods to manage termination and methods that can produce a &lt;a href=&quot;future&quot;&gt;&lt;code&gt;Future&lt;/code&gt;&lt;/a&gt; for tracking progress of one or more asynchronous tasks.</source>
          <target state="translated">종료를 관리하는 메서드와 하나 이상의 비동기 작업의 진행 상황을 추적 하기 위해 &lt;a href=&quot;future&quot;&gt; &lt;code&gt;Future&lt;/code&gt; &lt;/a&gt; 를 생성 할 수있는 메서드를 제공 하는 &lt;a href=&quot;executor&quot;&gt; &lt;code&gt;Executor&lt;/code&gt; &lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="bda0cfcde78543a3931d228fe016db10d680fe51" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;executorservice&quot;&gt;&lt;code&gt;ExecutorService&lt;/code&gt;&lt;/a&gt; for running &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">&lt;a href=&quot;executorservice&quot;&gt; &lt;code&gt;ExecutorService&lt;/code&gt; 를&lt;/a&gt; 실행하기위한 &lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt; 들.</target>
        </trans-unit>
        <trans-unit id="bcebfee103ed68fcb7a95dda7ecaff77c1920261" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;executorservice&quot;&gt;&lt;code&gt;ExecutorService&lt;/code&gt;&lt;/a&gt; for running &lt;a href=&quot;forkjointask&quot;&gt;&lt;code&gt;ForkJoinTask&lt;/code&gt;&lt;/a&gt;s. A &lt;code&gt;ForkJoinPool&lt;/code&gt; provides the entry point for submissions from non-&lt;code&gt;ForkJoinTask&lt;/code&gt; clients, as well as management and monitoring operations.</source>
          <target state="translated">&lt;a href=&quot;executorservice&quot;&gt; &lt;code&gt;ExecutorService&lt;/code&gt; 를&lt;/a&gt; 실행하기위한 &lt;a href=&quot;forkjointask&quot;&gt; &lt;code&gt;ForkJoinTask&lt;/code&gt; &lt;/a&gt; 들. &lt;code&gt;ForkJoinPool&lt;/code&gt; 은 비로부터 제출에 대한 진입 점을 제공 &lt;code&gt;ForkJoinTask&lt;/code&gt; 의 고객뿐만 아니라 관리 및 모니터링 작업을.</target>
        </trans-unit>
        <trans-unit id="fb82c3e10e84ea888b99043d94e6f67f83436be9" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;executorservice&quot;&gt;&lt;code&gt;ExecutorService&lt;/code&gt;&lt;/a&gt; that can schedule commands to run after a given delay, or to execute periodically.</source>
          <target state="translated">지정된 지연 후에 실행하거나 주기적으로 실행하도록 명령을 예약 할 수 있는 &lt;a href=&quot;executorservice&quot;&gt; &lt;code&gt;ExecutorService&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6fe4373b66e102cf8d9711f250fd25d164ce6bcd" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;executorservice&quot;&gt;&lt;code&gt;ExecutorService&lt;/code&gt;&lt;/a&gt; that executes each submitted task using one of possibly several pooled threads, normally configured using &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; factory methods.</source>
          <target state="translated">일반적으로 &lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt; 팩토리 메소드를 사용하여 구성된 여러 개의 스레드 된 스레드 중 하나를 사용하여 제출 된 각 태스크를 실행 하는 &lt;a href=&quot;executorservice&quot;&gt; &lt;code&gt;ExecutorService&lt;/code&gt; &lt;/a&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="c32c64304c28fa379b6726ffcf58f65020dc5a9a" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;rmiserver&quot;&gt;&lt;code&gt;RMIServer&lt;/code&gt;&lt;/a&gt; object that is exported through JRMP and that creates client connections as RMI objects exported through JRMP.</source>
          <target state="translated">&lt;a href=&quot;rmiserver&quot;&gt; &lt;code&gt;RMIServer&lt;/code&gt; &lt;/a&gt; JRMP로부터 export RMI는 JRMP로부터 export 객체로 그 클라이언트 접속을 작성하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="8ee2a66ef29756688ac8031b2103f7bd95c0fbfc" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;rmiserver&quot;&gt;&lt;code&gt;RMIServer&lt;/code&gt;&lt;/a&gt; object that is exported through JRMP and that creates client connections as RMI objects exported through JRMP. User code does not usually reference this class directly.</source>
          <target state="translated">&lt;a href=&quot;rmiserver&quot;&gt; &lt;code&gt;RMIServer&lt;/code&gt; &lt;/a&gt; JRMP로부터 export RMI는 JRMP로부터 export 객체로 그 클라이언트 접속을 작성하는 객체입니다. 사용자 코드는 일반적으로이 클래스를 직접 참조하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0d820e40f267bbd7a7c9a292fd4799bfdc72f7d2" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;rmiserverimpl&quot;&gt;&lt;code&gt;RMIServerImpl&lt;/code&gt;&lt;/a&gt; that is exported through IIOP and that creates client connections as RMI objects exported through IIOP.</source>
          <target state="translated">&lt;a href=&quot;rmiserverimpl&quot;&gt; &lt;code&gt;RMIServerImpl&lt;/code&gt; 의&lt;/a&gt; IIOP로부터 export RMI가 IIOP를 통해 수출 객체로 즉 클라이언트 연결을 생성한다.</target>
        </trans-unit>
        <trans-unit id="80d636756fafe7e42672c7ba5c976b14ff0db59e" translate="yes" xml:space="preserve">
          <source>An &lt;a href=&quot;rmiserverimpl&quot;&gt;&lt;code&gt;RMIServerImpl&lt;/code&gt;&lt;/a&gt; that is exported through IIOP and that creates client connections as RMI objects exported through IIOP. User code does not usually reference this class directly.</source>
          <target state="translated">&lt;a href=&quot;rmiserverimpl&quot;&gt; &lt;code&gt;RMIServerImpl&lt;/code&gt; 의&lt;/a&gt; IIOP로부터 export RMI가 IIOP를 통해 수출 객체로 즉 클라이언트 연결을 생성한다. 사용자 코드는 일반적으로이 클래스를 직접 참조하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="035897082c5a646c3645fab59021733e8b60b8e2" translate="yes" xml:space="preserve">
          <source>An &lt;b&gt;unmodifiable view&lt;/b&gt;</source>
          <target state="translated">&lt;b&gt;변경 불가능한 뷰&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="e823b9d30a906d8a8d80dd9e125c993194c3c3b6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;APPLICATION_MODAL&lt;/code&gt; dialog blocks all top-level windows from the same Java application except those from its own child hierarchy.</source>
          <target state="translated">&lt;code&gt;APPLICATION_MODAL&lt;/code&gt; 는 , 자신의 아이 계층으로부터의 것을 제외 해, 같은 Java 응용 프로그램에서 대화의 모든 톱 레벨 윈도우를 블록합니다.</target>
        </trans-unit>
        <trans-unit id="48f2d2c041f1996c5c7db191b1c1d68941fe7a3c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;APPLICATION_MODAL&lt;/code&gt; dialog blocks all top-level windows from the same Java application except those from its own child hierarchy. If there are several applets launched in a browser, they can be treated either as separate applications or a single one. This behavior is implementation-dependent.</source>
          <target state="translated">&lt;code&gt;APPLICATION_MODAL&lt;/code&gt; 는 , 자신의 아이 계층으로부터의 것을 제외 해, 같은 Java 응용 프로그램에서 대화의 모든 톱 레벨 윈도우를 블록합니다. 브라우저에서 실행 된 여러 애플릿이있는 경우 별도의 응용 프로그램 또는 단일 응용 프로그램으로 처리 할 수 ​​있습니다. 이 동작은 구현에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="004b99d35d276ee91ac7b66b78e7e666f4aeff4a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AWTEvent&lt;/code&gt; that adds support for &lt;code&gt;JInternalFrame&lt;/code&gt; objects as the event source.</source>
          <target state="translated">이벤트 소스로 &lt;code&gt;JInternalFrame&lt;/code&gt; 개체에 대한 지원을 추가 하는 &lt;code&gt;AWTEvent&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="8810e044a62d3e0a55969a677e5057310fc1f0a2" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AWTEvent&lt;/code&gt; that adds support for &lt;code&gt;JInternalFrame&lt;/code&gt; objects as the event source. This class has the same event types as &lt;code&gt;WindowEvent&lt;/code&gt;, although different IDs are used. Help on handling internal frame events is in &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/internalframelistener.html&quot;&gt;How to Write an Internal Frame Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">이벤트 소스로 &lt;code&gt;JInternalFrame&lt;/code&gt; 개체에 대한 지원을 추가 하는 &lt;code&gt;AWTEvent&lt;/code&gt; 입니다 . 이 클래스에는 다른 ID가 사용되지만 &lt;code&gt;WindowEvent&lt;/code&gt; 와 동일한 이벤트 유형 이 있습니다. 내부 프레임 이벤트 처리에 대한 도움말 &lt;em&gt;은 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/internalframelistener.html&quot;&gt;How to Write an Internal Frame Listener&lt;/a&gt; 에 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a2c596c31d5b781ed0b66577dacac73bc53ce707" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AWTEvent&lt;/code&gt; that adds support for &lt;code&gt;JInternalFrame&lt;/code&gt; objects as the event source. This class has the same event types as &lt;code&gt;WindowEvent&lt;/code&gt;, although different IDs are used. Help on handling internal frame events is in &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/internalframelistener.html&quot;&gt;How to Write an Internal Frame Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial&lt;/em&gt;.</source>
          <target state="translated">이벤트 소스로 &lt;code&gt;JInternalFrame&lt;/code&gt; 개체에 대한 지원을 추가 하는 &lt;code&gt;AWTEvent&lt;/code&gt; 입니다 . 이 클래스에는 다른 ID가 사용되지만 &lt;code&gt;WindowEvent&lt;/code&gt; 와 동일한 이벤트 유형 이 있습니다. 내부 프레임 이벤트 처리에 대한 도움말 은 &lt;em&gt;The Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/internalframelistener.html&quot;&gt;How to Write an Internal Frame Listener&lt;/a&gt; 에 있습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="aad51860297f3a3a81fbdb2bd897a52c00bde684" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AWTKeyStroke&lt;/code&gt; represents a key action on the keyboard, or equivalent input device.</source>
          <target state="translated">&lt;code&gt;AWTKeyStroke&lt;/code&gt; 키보드 또는 동등의 입력 장치의 키 동작을 나타낸다.</target>
        </trans-unit>
        <trans-unit id="b9df90de69ce6eb66f2b16a16b51a9c718a11cf8" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AWTKeyStroke&lt;/code&gt; represents a key action on the keyboard, or equivalent input device. &lt;code&gt;AWTKeyStroke&lt;/code&gt;s can correspond to only a press or release of a particular key, just as &lt;code&gt;KEY_PRESSED&lt;/code&gt; and &lt;code&gt;KEY_RELEASED KeyEvent&lt;/code&gt;s do; alternately, they can correspond to typing a specific Java character, just as &lt;code&gt;KEY_TYPED KeyEvent&lt;/code&gt;s do. In all cases, &lt;code&gt;AWTKeyStroke&lt;/code&gt;s can specify modifiers (alt, shift, control, meta, altGraph, or a combination thereof) which must be present during the action for an exact match.</source>
          <target state="translated">&lt;code&gt;AWTKeyStroke&lt;/code&gt; 키보드 또는 동등의 입력 장치의 키 동작을 나타낸다. &lt;code&gt;AWTKeyStroke&lt;/code&gt; 는 &lt;code&gt;KEY_PRESSED&lt;/code&gt; 및 &lt;code&gt;KEY_RELEASED KeyEvent&lt;/code&gt; 가하는 것처럼 특정 키의 누르기 또는 놓기에만 대응할 수 있습니다 . 또는 &lt;code&gt;KEY_TYPED KeyEvent&lt;/code&gt; 와 마찬가지로 특정 Java 문자를 입력하는 것과 일치 할 수 있습니다 . 모든 경우에 &lt;code&gt;AWTKeyStroke&lt;/code&gt; 는 정확한 일치를 위해 액션 중에 있어야하는 수정 자 (alt, shift, control, meta, altGraph 또는 이들의 조합)를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f522e6816e525a8346bd94e59b5af67477b4f627" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AbstractFormatter&lt;/code&gt; can only be active in one &lt;code&gt;JFormattedTextField&lt;/code&gt; at a time. &lt;code&gt;JFormattedTextField&lt;/code&gt; invokes &lt;code&gt;install&lt;/code&gt; when it is ready to use it followed by &lt;code&gt;uninstall&lt;/code&gt; when done. Subclasses that wish to install additional state should override &lt;code&gt;install&lt;/code&gt; and message super appropriately.</source>
          <target state="translated">&lt;code&gt;AbstractFormatter&lt;/code&gt; 하나에서 활성화 될 수 &lt;code&gt;JFormattedTextField&lt;/code&gt; 는 한 번에. &lt;code&gt;JFormattedTextField&lt;/code&gt; 는 사용할 준비가되면 &lt;code&gt;install&lt;/code&gt; 호출 하고 완료되면 &lt;code&gt;uninstall&lt;/code&gt; 를 호출합니다 . 추가 상태를 설치하려는 하위 클래스는 &lt;code&gt;install&lt;/code&gt; 및 메시지 super를 적절하게 재정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9364c6a7ff47d1cfa10a3d041957eb148d5c3929" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AccessException&lt;/code&gt; is thrown by certain methods of the &lt;code&gt;java.rmi.Naming&lt;/code&gt; class (specifically &lt;code&gt;bind&lt;/code&gt;, &lt;code&gt;rebind&lt;/code&gt;, and &lt;code&gt;unbind&lt;/code&gt;) and methods of the &lt;code&gt;java.rmi.activation.ActivationSystem&lt;/code&gt; interface to indicate that the caller does not have permission to perform the action requested by the method call.</source>
          <target state="translated">&lt;code&gt;AccessException&lt;/code&gt; 가 의 특정 메소드에 의해 슬로우됩니다 &lt;code&gt;java.rmi.Naming&lt;/code&gt; 의의 클래스 (특히 &lt;code&gt;bind&lt;/code&gt; , &lt;code&gt;rebind&lt;/code&gt; 와 &lt;code&gt;unbind&lt;/code&gt; )과의 방법 &lt;code&gt;java.rmi.activation.ActivationSystem&lt;/code&gt; 라는의 호출자가 요청 된 작업을 수행 할 수있는 권한을 가지고 있지 않는 것을 나타냅니다 인터페이스 메서드 호출로.</target>
        </trans-unit>
        <trans-unit id="c23f4ea4904db9342ee9b9599c7d7fba46712a71" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AccessException&lt;/code&gt; is thrown by certain methods of the &lt;code&gt;java.rmi.Naming&lt;/code&gt; class (specifically &lt;code&gt;bind&lt;/code&gt;, &lt;code&gt;rebind&lt;/code&gt;, and &lt;code&gt;unbind&lt;/code&gt;) and methods of the &lt;code&gt;java.rmi.activation.ActivationSystem&lt;/code&gt; interface to indicate that the caller does not have permission to perform the action requested by the method call. If the method was invoked from a non-local host, then an &lt;code&gt;AccessException&lt;/code&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;AccessException&lt;/code&gt; 가 의 특정 메소드에 의해 슬로우됩니다 &lt;code&gt;java.rmi.Naming&lt;/code&gt; 의의 클래스 (특히 &lt;code&gt;bind&lt;/code&gt; , &lt;code&gt;rebind&lt;/code&gt; 와 &lt;code&gt;unbind&lt;/code&gt; )과의 방법 &lt;code&gt;java.rmi.activation.ActivationSystem&lt;/code&gt; 라는의 호출자가 요청 된 작업을 수행 할 수있는 권한을 가지고 있지 않는 것을 나타냅니다 인터페이스 메서드 호출로. 메소드가 로컬이 아닌 호스트에서 호출 된 경우 &lt;code&gt;AccessException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dcfc6c08f1decd0f03ee197624b2ecb53c08149e" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ActionListener&lt;/code&gt; object is registered via &lt;code&gt;addActionListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ActionListener&lt;/code&gt; 개체에 의해 등록되어 &lt;code&gt;addActionListener&lt;/code&gt; 에 .</target>
        </trans-unit>
        <trans-unit id="090c8db69380c5d0be8a1f259ffb8e0ecdef8972" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ActivationGroup&lt;/code&gt; is</source>
          <target state="translated">&lt;code&gt;ActivationGroup&lt;/code&gt; 이다</target>
        </trans-unit>
        <trans-unit id="e140328f1c362a417d81c0aae596e245431447d0" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ActivationGroup&lt;/code&gt; is responsible for creating new instances of &quot;activatable&quot; objects in its group, informing its &lt;code&gt;ActivationMonitor&lt;/code&gt; when either: its object's become active or inactive, or the group as a whole becomes inactive.</source>
          <target state="translated">&lt;code&gt;ActivationGroup&lt;/code&gt; 그 알려주는 그룹의 &quot;기동 가능한&quot;오브젝트의 새로운 인스턴스를 생성 해 &lt;code&gt;ActivationMonitor&lt;/code&gt; 에 그 오브젝트의 활성 또는 비활성 상태, 또는 그룹 전체의 정지 다음의 경우 중.</target>
        </trans-unit>
        <trans-unit id="c20d7c2e7d7e1247f9c48b1896c47dcaf4eb17f0" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ActivationInstantiator&lt;/code&gt; is responsible for creating instances of &quot;activatable&quot; objects.</source>
          <target state="translated">&lt;code&gt;ActivationInstantiator&lt;/code&gt; 를은 &quot;기동&quot;객체의 인스턴스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="2461ed2fa49ed7b8a8c7658840e0279b78b3f664" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ActivationInstantiator&lt;/code&gt; is responsible for creating instances of &quot;activatable&quot; objects. A concrete subclass of &lt;code&gt;ActivationGroup&lt;/code&gt; implements the &lt;code&gt;newInstance&lt;/code&gt; method to handle creating objects within the group.</source>
          <target state="translated">&lt;code&gt;ActivationInstantiator&lt;/code&gt; 를은 &quot;기동&quot;객체의 인스턴스를 생성합니다. &lt;code&gt;ActivationGroup&lt;/code&gt; 의 구체적인 하위 클래스 는 &lt;code&gt;newInstance&lt;/code&gt; 메서드를 구현 하여 그룹 내에서 개체 만들기를 처리합니다.</target>
        </trans-unit>
        <trans-unit id="91f261569ab3ad0da9c0b0caf626e72e080ba33e" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ActivationMonitor&lt;/code&gt; is specific to an &lt;code&gt;ActivationGroup&lt;/code&gt; and is obtained when a group is reported active via a call to &lt;code&gt;ActivationSystem.activeGroup&lt;/code&gt; (this is done internally).</source>
          <target state="translated">&lt;code&gt;ActivationMonitor&lt;/code&gt; 에가 에 고유 &lt;code&gt;ActivationGroup&lt;/code&gt; 및 그룹 호출 활성화를 통해보고 될 때 얻어지는 &lt;code&gt;ActivationSystem.activeGroup&lt;/code&gt; (이 내부적으로 수행된다).</target>
        </trans-unit>
        <trans-unit id="6007ab20754772b75bafc94ae3758ef9977a87c9" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ActivationMonitor&lt;/code&gt; is specific to an &lt;code&gt;ActivationGroup&lt;/code&gt; and is obtained when a group is reported active via a call to &lt;code&gt;ActivationSystem.activeGroup&lt;/code&gt; (this is done internally). An activation group is responsible for informing its &lt;code&gt;ActivationMonitor&lt;/code&gt; when either: its objects become active or inactive, or the group as a whole becomes inactive.</source>
          <target state="translated">&lt;code&gt;ActivationMonitor&lt;/code&gt; 에가 에 고유 &lt;code&gt;ActivationGroup&lt;/code&gt; 및 그룹 호출 활성화를 통해보고 될 때 얻어지는 &lt;code&gt;ActivationSystem.activeGroup&lt;/code&gt; (이 내부적으로 수행된다). 활성 그룹은 개체가 활성 또는 비활성 상태가되거나 그룹 전체가 비활성 상태가 될 때 &lt;code&gt;ActivationMonitor&lt;/code&gt; 에 알릴 책임 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab9043f44d6d9548e2c4706bce5c7fb930935dee" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AdjustmentListener&lt;/code&gt; object is registered via &lt;code&gt;addAdjustmentListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AdjustmentListener&lt;/code&gt; 개체에 의해 등록되어 &lt;code&gt;addAdjustmentListener&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="732e341ff398c966399ffe8adede4c2af068b316" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AlgorithmParameters&lt;/code&gt; object for managing the parameters for a particular algorithm can be obtained by calling one of the &lt;code&gt;getInstance&lt;/code&gt; factory methods (static methods that return instances of a given class).</source>
          <target state="translated">&lt;code&gt;AlgorithmParameters&lt;/code&gt; 중 하나를 호출하여 얻을 수있다, 특정 알고리즘에 대한 파라미터를 관리하는 오브젝트 &lt;code&gt;getInstance&lt;/code&gt; (즉, 주어진 클래스의 인스턴스 복귀 정적 메소드) 공장 방법.</target>
        </trans-unit>
        <trans-unit id="569ed1ce46f8f2e42560bfed4c800c600d997ab4" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AlreadyBoundException&lt;/code&gt; is thrown if an attempt is made to bind an object in the registry to a name that already has an associated binding.</source>
          <target state="translated">&lt;code&gt;AlreadyBoundException&lt;/code&gt; 시도가 이미 바인딩과 연결되어 이름 레지스트리 내의 객체를 바인드하려고하는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6d9fa88047e406617205383e4b0ee6d510ba2458" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AlreadyBoundException&lt;/code&gt; is thrown if an attempt is made to bind an object to a name that already has an associated binding in the registry.</source>
          <target state="translated">&lt;code&gt;AlreadyBoundException&lt;/code&gt; 시도가 이미 레지스트리에 바인딩과 연결되어있는 이름으로 객체를 바인드하려고하는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3f960b730552ed64c0720f76c2ed048762f1c40c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Area&lt;/code&gt; may take more path segments to describe the same geometry even when the original outline is simple and obvious. The analysis that the &lt;code&gt;Area&lt;/code&gt; class must perform on the path may not reflect the same concepts of &quot;simple and obvious&quot; as a human being perceives.</source>
          <target state="translated">&lt;code&gt;Area&lt;/code&gt; 원래 윤곽이 간단하고 분명한 경우에도 동일한 형상을 설명하기 위해 더 많은 경로 세그먼트를 취할 수있다. &lt;code&gt;Area&lt;/code&gt; 클래스가 경로에서 수행해야하는 분석 은 인간이 인식하는 것과 동일한 &quot;단순하고 명백한&quot;개념을 반영하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="06b9bd80cbd09d66f38275b49e56ee50fb9a02b2" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Area&lt;/code&gt; object stores and manipulates a resolution-independent description of an enclosed area of 2-dimensional space.</source>
          <target state="translated">&lt;code&gt;Area&lt;/code&gt; 객체 저장 및 조작하는 2 차원 공간의 밀폐 된 공간 해상도 독립 묘사.</target>
        </trans-unit>
        <trans-unit id="332b63b9a254f250c77f4f5280970824f2d343a3" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Area&lt;/code&gt; object stores and manipulates a resolution-independent description of an enclosed area of 2-dimensional space. &lt;code&gt;Area&lt;/code&gt; objects can be transformed and can perform various Constructive Area Geometry (CAG) operations when combined with other &lt;code&gt;Area&lt;/code&gt; objects. The CAG operations include area &lt;a href=&quot;#add(java.awt.geom.Area)&quot;&gt;&lt;code&gt;addition&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#subtract(java.awt.geom.Area)&quot;&gt;&lt;code&gt;subtraction&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#intersect(java.awt.geom.Area)&quot;&gt;&lt;code&gt;intersection&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#exclusiveOr(java.awt.geom.Area)&quot;&gt;&lt;code&gt;exclusive or&lt;/code&gt;&lt;/a&gt;. See the linked method documentation for examples of the various operations.</source>
          <target state="translated">&lt;code&gt;Area&lt;/code&gt; 객체 저장 및 조작하는 2 차원 공간의 밀폐 된 공간 해상도 독립 묘사. &lt;code&gt;Area&lt;/code&gt; 객체는 변형 될 수 있으며 다른 &lt;code&gt;Area&lt;/code&gt; 객체 와 결합 될 때 다양한 CAG (구성 영역 지오메트리) 작업을 수행 할 수 있습니다 . CAG 연산에는 영역 &lt;a href=&quot;#add(java.awt.geom.Area)&quot;&gt; &lt;code&gt;addition&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#subtract(java.awt.geom.Area)&quot;&gt; &lt;code&gt;subtraction&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#intersect(java.awt.geom.Area)&quot;&gt; &lt;code&gt;intersection&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#exclusiveOr(java.awt.geom.Area)&quot;&gt; &lt;code&gt;exclusive or&lt;/code&gt; &lt;/a&gt; 됩니다. 다양한 작업의 예는 링크 된 메소드 문서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="32be98b9f0bd655fa83c61c3a17f96f640b0e767" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ArithmeticException&lt;/code&gt; exception is thrown if</source>
          <target state="translated">다음과 같은 경우 &lt;code&gt;ArithmeticException&lt;/code&gt; 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="77a977324a34c1c1a729977bc296fb57fc9940c1" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ArrayOutOfBoundsException&lt;/code&gt; may be thrown if the coordinates are not in bounds. However, explicit bounds checking is not guaranteed.</source>
          <target state="translated">&lt;code&gt;ArrayOutOfBoundsException&lt;/code&gt; 는 좌표가 경계 내에없는 경우 발생 될 수 있습니다. 그러나 명시 적 경계 검사는 보장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="80b9af2dcb96620d0d08ecc6070368a1b0bd5e64" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ArrayOutOfBoundsException&lt;/code&gt; may be thrown if the region is not in bounds. However, explicit bounds checking is not guaranteed.</source>
          <target state="translated">&lt;code&gt;ArrayOutOfBoundsException&lt;/code&gt; 는 영역이 경계 내에없는 경우 발생 될 수 있습니다. 그러나 명시 적 경계 검사는 보장되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cd9298b10458b6cb9b1421b1564f36584d00bf68" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ArrayType&lt;/code&gt; is assignable from another &lt;code&gt;
 ArrayType&lt;/code&gt; if they have the same &lt;a href=&quot;arraytype#getDimension()&quot;&gt;dimension&lt;/a&gt;; and both are &lt;a href=&quot;arraytype#isPrimitiveArray()&quot;&gt;primitive arrays&lt;/a&gt; or neither is; and the &lt;a href=&quot;arraytype#getElementOpenType()&quot;&gt;element type&lt;/a&gt; of the first is assignable from the element type of the second.</source>
          <target state="translated">An &lt;code&gt;ArrayType&lt;/code&gt; is assignable from another &lt;code&gt; ArrayType&lt;/code&gt; if they have the same &lt;a href=&quot;arraytype#getDimension()&quot;&gt;dimension&lt;/a&gt;; and both are &lt;a href=&quot;arraytype#isPrimitiveArray()&quot;&gt;primitive arrays&lt;/a&gt; or neither is; and the &lt;a href=&quot;arraytype#getElementOpenType()&quot;&gt;element type&lt;/a&gt; of the first is assignable from the element type of the second.</target>
        </trans-unit>
        <trans-unit id="c3150a3c54bfdd7c1cc5684dcb0b31ab6d4c013a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ArrayType&lt;/code&gt; is assignable from another &lt;code&gt;ArrayType&lt;/code&gt; if they have the same &lt;a href=&quot;arraytype#getDimension--&quot;&gt;dimension&lt;/a&gt;; and both are &lt;a href=&quot;arraytype#isPrimitiveArray--&quot;&gt;primitive arrays&lt;/a&gt; or neither is; and the &lt;a href=&quot;arraytype#getElementOpenType--&quot;&gt;element type&lt;/a&gt; of the first is assignable from the element type of the second.</source>
          <target state="translated">&lt;code&gt;ArrayType&lt;/code&gt; 은 서로 할당 할 &lt;code&gt;ArrayType&lt;/code&gt; 가 동일한 경우 &lt;a href=&quot;arraytype#getDimension--&quot;&gt;차원을&lt;/a&gt; ; 그리고 둘 다 &lt;a href=&quot;arraytype#isPrimitiveArray--&quot;&gt;프리미티브 배열&lt;/a&gt; 이거나 아니거나; 상기 &lt;a href=&quot;arraytype#getElementOpenType--&quot;&gt;요소 형&lt;/a&gt; 제의 두 번째 요소의 유형의 할당이다.</target>
        </trans-unit>
        <trans-unit id="5526b7ceb6aca1d505a88b30e1fff60d67548a9c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Association&lt;/code&gt; is returned from an &lt;a href=&quot;sctpchannel#association()&quot;&gt;&lt;code&gt;SctpChannel&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;sctpmultichannel#associations()&quot;&gt;&lt;code&gt;SctpMultiChannel&lt;/code&gt;&lt;/a&gt;, as well as being given as a parameter to &lt;a href=&quot;notificationhandler&quot;&gt;&lt;code&gt;NotificationHandler&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">&lt;code&gt;Association&lt;/code&gt; 에서 리턴 &lt;a href=&quot;sctpchannel#association()&quot;&gt; &lt;code&gt;SctpChannel&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;sctpmultichannel#associations()&quot;&gt; &lt;code&gt;SctpMultiChannel&lt;/code&gt; &lt;/a&gt; 파라미터로서 주어지는뿐만 아니라 &lt;a href=&quot;notificationhandler&quot;&gt; &lt;code&gt;NotificationHandler&lt;/code&gt; &lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="153a3fb7efabcd052fc7608e2c4916868820fbd3" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AsynchronousFileChannel&lt;/code&gt; is associated with a thread pool to which tasks are submitted to handle I/O events and dispatch to completion handlers that consume the results of I/O operations on the channel. The completion handler for an I/O operation initiated on a channel is guaranteed to be invoked by one of the threads in the thread pool (This ensures that the completion handler is run by a thread with the expected &lt;em&gt;identity&lt;/em&gt;). Where an I/O operation completes immediately, and the initiating thread is itself a thread in the thread pool, then the completion handler may be invoked directly by the initiating thread. When an &lt;code&gt;AsynchronousFileChannel&lt;/code&gt; is created without specifying a thread pool then the channel is associated with a system-dependent default thread pool that may be shared with other channels. The default thread pool is configured by the system properties defined by the &lt;a href=&quot;asynchronouschannelgroup&quot;&gt;&lt;code&gt;AsynchronousChannelGroup&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;code&gt;AsynchronousFileChannel&lt;/code&gt; 는 작업이 채널의 I / O 작업의 결과를 소모 완료 핸들러에 I / O 이벤트와 파견을 처리하기 위해 제출되는 스레드 풀과 연관되어 있습니다. 채널에서 시작된 I / O 조작의 완료 핸들러는 스레드 풀의 스레드 중 하나에 의해 호출되도록 보장됩니다 (이는 완료 &lt;em&gt;식별자&lt;/em&gt; 가 예상되는 &lt;em&gt;ID를&lt;/em&gt; 가진 스레드에 의해 실행되도록합니다 ). I / O 조작이 즉시 완료되고 시작 스레드 자체가 스레드 풀의 스레드 인 경우, 완료 핸들러는 시작 스레드에 의해 직접 호출 될 수 있습니다. 때 &lt;code&gt;AsynchronousFileChannel&lt;/code&gt; 스레드 풀을 지정하지 않고 작성되면 채널이 다른 채널과 공유 될 수있는 시스템 종속 기본 스레드 풀과 연관됩니다. 기본 스레드 풀은 &lt;a href=&quot;asynchronouschannelgroup&quot;&gt; &lt;code&gt;AsynchronousChannelGroup&lt;/code&gt; &lt;/a&gt; 클래스에 의해 정의 된 시스템 특성으로 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="3c3db66ad3ba110918b097fd77f4598bc42443d0" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AtomicMarkableReference&lt;/code&gt; maintains an object reference along with a mark bit, that can be updated atomically.</source>
          <target state="translated">&lt;code&gt;AtomicMarkableReference&lt;/code&gt; 은 원자 적으로 갱신 가능한 마크 비트와 함께, 객체 참조를 유지한다.</target>
        </trans-unit>
        <trans-unit id="3016ca343ad81aeb0b1615e8d6b447240b35e017" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AtomicStampedReference&lt;/code&gt; maintains an object reference along with an integer &quot;stamp&quot;, that can be updated atomically.</source>
          <target state="translated">&lt;code&gt;AtomicStampedReference&lt;/code&gt; 은 원자 적으로 갱신 할 수있는 정수 &quot;스탬프&quot;와 함께 객체 참조를 유지한다.</target>
        </trans-unit>
        <trans-unit id="b964b5049065bbb9fde7af24174196143f634614" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AttachPermission&lt;/code&gt; object contains a name (also referred to as a &quot;target name&quot;) but no actions list; you either have the named permission or you don't. The following table provides a summary description of what the permission allows, and discusses the risks of granting code the permission.</source>
          <target state="translated">&lt;code&gt;AttachPermission&lt;/code&gt; 의 객체는 이름 ( 「타겟 명 &quot;이라한다)을 포함 합니다만, 액션리스트는 포함 명명 된 권한이 있거나없는 것입니다. 다음 표에서는 권한이 허용하는 사항에 대한 요약 설명을 제공하고 코드에 권한을 부여 할 때의 위험에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="5123f30fd658dab6b046fb2838b15fe7fc022ae6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AttributeValueExp&lt;/code&gt; may be used anywhere a &lt;code&gt;ValueExp&lt;/code&gt; is required.</source>
          <target state="translated">&lt;code&gt;AttributeValueExp&lt;/code&gt; 를은 어디서나 사용할 수있는 &lt;code&gt;ValueExp&lt;/code&gt; 필요합니다.</target>
        </trans-unit>
        <trans-unit id="8f7495226a71eb28232272eba0ac094ee51a6901" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AttributeValueExp&lt;/code&gt; with a null attribute.</source>
          <target state="translated">널 속성이 있는 &lt;code&gt;AttributeValueExp&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="279f42bf99952eeaa9b39b58bc837bfab21b9fd6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; allows iteration through both text and related attribute information.</source>
          <target state="translated">&lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 텍스트와 그 텍스트에 관련하는 속성 정보를, 어느 쪽이나 반복 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9854cf7f134e76ab170aa24d1a103b687670ef81" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Attributes&lt;/code&gt;, &lt;code&gt;SearchControls&lt;/code&gt;, or array object passed as a parameter to any method will not be modified by the service provider. The service provider may keep a reference to it for the duration of the operation, including any enumeration of the method's results and the processing of any referrals generated. The caller should not modify the object during this time. An &lt;code&gt;Attributes&lt;/code&gt; object returned by any method is owned by the caller. The caller may subsequently modify it; the service provider will not.</source>
          <target state="translated">메소드에 매개 변수로 전달 된 &lt;code&gt;Attributes&lt;/code&gt; , &lt;code&gt;SearchControls&lt;/code&gt; 또는 배열 오브젝트는 서비스 제공자가 수정하지 않습니다. 서비스 제공자는 방법의 결과 열거 및 생성 된 참조 처리를 포함하여 작업 기간 동안 참조를 유지할 수 있습니다. 이 시간 동안 호출자는 객체를 수정해서는 안됩니다. 메소드가 리턴 한 &lt;code&gt;Attributes&lt;/code&gt; 오브젝트는 호출자가 소유합니다. 호출자는 나중에이를 수정할 수 있습니다. 서비스 제공 업체는 그렇지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c952d9d193515a12f408dfc6292651d7f8241a6d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AudioFileFormat&lt;/code&gt; object can include a set of properties. A property is a pair of key and value: the key is of type &lt;code&gt;String&lt;/code&gt;, the associated property value is an arbitrary object. Properties specify additional informational meta data (like a author, copyright, or file duration). Properties are optional information, and file reader and file writer implementations are not required to provide or recognize properties.</source>
          <target state="translated">&lt;code&gt;AudioFileFormat&lt;/code&gt; 의 객체는 속성 집합을 포함 할 수 있습니다. 속성은 키와 값의 쌍입니다. 키는 &lt;code&gt;String&lt;/code&gt; 유형 이고 관련 속성 값은 임의의 개체입니다. 속성은 추가 정보 메타 데이터 (작성자, 저작권 또는 파일 기간 등)를 지정합니다. 등록 정보는 선택적 정보이며 파일 판독기 및 파일 작성기 구현은 등록 정보를 제공하거나 인식 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="22cf68840d705f0ae1d9f5a88af1fb6deb52103a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AudioFormat&lt;/code&gt; object can include a set of properties. A property is a pair of key and value: the key is of type &lt;code&gt;String&lt;/code&gt;, the associated property value is an arbitrary object. Properties specify additional format specifications, like the bit rate for compressed formats. Properties are mainly used as a means to transport additional information of the audio format to and from the service providers. Therefore, properties are ignored in the &lt;a href=&quot;#matches(javax.sound.sampled.AudioFormat)&quot;&gt;&lt;code&gt;matches(AudioFormat)&lt;/code&gt;&lt;/a&gt; method. However, methods which rely on the installed service providers, like &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat.Encoding,javax.sound.sampled.AudioFormat)&quot;&gt;&lt;code&gt;(AudioFormat, AudioFormat)
 isConversionSupported&lt;/code&gt;&lt;/a&gt; may consider properties, depending on the respective service provider implementation.</source>
          <target state="translated">An &lt;code&gt;AudioFormat&lt;/code&gt; object can include a set of properties. A property is a pair of key and value: the key is of type &lt;code&gt;String&lt;/code&gt; , the associated property value is an arbitrary object. Properties specify additional format specifications, like the bit rate for compressed formats. Properties are mainly used as a means to transport additional information of the audio format to and from the service providers. Therefore, properties are ignored in the &lt;a href=&quot;#matches(javax.sound.sampled.AudioFormat)&quot;&gt; &lt;code&gt;matches(AudioFormat)&lt;/code&gt; &lt;/a&gt; method. However, methods which rely on the installed service providers, like &lt;a href=&quot;audiosystem#isConversionSupported(javax.sound.sampled.AudioFormat.Encoding,javax.sound.sampled.AudioFormat)&quot;&gt; &lt;code&gt;(AudioFormat, AudioFormat) isConversionSupported&lt;/code&gt; &lt;/a&gt; may consider properties, depending on the respective service provider implementation.</target>
        </trans-unit>
        <trans-unit id="d8267c07578a64bfea8ce9a39a53900834e8cade" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;AudioFormat&lt;/code&gt; object can include a set of properties. A property is a pair of key and value: the key is of type &lt;code&gt;String&lt;/code&gt;, the associated property value is an arbitrary object. Properties specify additional format specifications, like the bit rate for compressed formats. Properties are mainly used as a means to transport additional information of the audio format to and from the service providers. Therefore, properties are ignored in the &lt;a href=&quot;audioformat#matches-javax.sound.sampled.AudioFormat-&quot;&gt;&lt;code&gt;matches(AudioFormat)&lt;/code&gt;&lt;/a&gt; method. However, methods which rely on the installed service providers, like &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat.Encoding-javax.sound.sampled.AudioFormat-&quot;&gt;&lt;code&gt;(AudioFormat, AudioFormat) isConversionSupported&lt;/code&gt;&lt;/a&gt; may consider properties, depending on the respective service provider implementation.</source>
          <target state="translated">&lt;code&gt;AudioFormat&lt;/code&gt; 객체는 속성 집합을 포함 할 수 있습니다. 속성은 키와 값의 쌍입니다. 키는 &lt;code&gt;String&lt;/code&gt; 유형 이고 관련 속성 값은 임의의 개체입니다. 속성은 압축 형식의 비트 전송률과 같은 추가 형식 사양을 지정합니다. 속성은 주로 오디오 형식의 추가 정보를 서비스 공급자와주고받는 수단으로 사용됩니다. 따라서 &lt;a href=&quot;audioformat#matches-javax.sound.sampled.AudioFormat-&quot;&gt; &lt;code&gt;matches(AudioFormat)&lt;/code&gt; &lt;/a&gt; 메서드 에서 속성이 무시됩니다 . 그러나 &lt;a href=&quot;audiosystem#isConversionSupported-javax.sound.sampled.AudioFormat.Encoding-javax.sound.sampled.AudioFormat-&quot;&gt; &lt;code&gt;(AudioFormat, AudioFormat) isConversionSupported&lt;/code&gt; &lt;/a&gt; 와 같이 설치된 서비스 공급자를 사용하는 메서드 는 각 서비스 공급자 구현에 따라 속성을 고려할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39254013db75a6318f326d2a81c1b330d357f85e" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Encoder&lt;/code&gt; is a class which can be used to create files or streams that encode the state of a collection of JavaBeans in terms of their public APIs.</source>
          <target state="translated">&lt;code&gt;Encoder&lt;/code&gt; 파일을 만드는 데 사용 또는 공개 API의 측면에서 그 인코딩을 JavaBeans 상태를 스트림 할 수있는 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="5f459cfef12c6f9d9920877698346ad592441a0b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Encoder&lt;/code&gt; is a class which can be used to create files or streams that encode the state of a collection of JavaBeans in terms of their public APIs. The &lt;code&gt;Encoder&lt;/code&gt;, in conjunction with its persistence delegates, is responsible for breaking the object graph down into a series of &lt;code&gt;Statement&lt;/code&gt;s and &lt;code&gt;Expression&lt;/code&gt;s which can be used to create it. A subclass typically provides a syntax for these expressions using some human readable form - like Java source code or XML.</source>
          <target state="translated">An &lt;code&gt;Encoder&lt;/code&gt; is a class which can be used to create files or streams that encode the state of a collection of JavaBeans in terms of their public APIs. The &lt;code&gt;Encoder&lt;/code&gt; , in conjunction with its persistence delegates, is responsible for breaking the object graph down into a series of &lt;code&gt;Statement&lt;/code&gt; s and &lt;code&gt;Expression&lt;/code&gt; s which can be used to create it. A subclass typically provides a syntax for these expressions using some human readable form - like Java source code or XML.</target>
        </trans-unit>
        <trans-unit id="57db16f3208b781807ac71c1c01187fa3e9377be" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Encoder&lt;/code&gt; is a class which can be used to create files or streams that encode the state of a collection of JavaBeans in terms of their public APIs. The &lt;code&gt;Encoder&lt;/code&gt;, in conjunction with its persistence delegates, is responsible for breaking the object graph down into a series of &lt;code&gt;Statements&lt;/code&gt;s and &lt;code&gt;Expression&lt;/code&gt;s which can be used to create it. A subclass typically provides a syntax for these expressions using some human readable form - like Java source code or XML.</source>
          <target state="translated">&lt;code&gt;Encoder&lt;/code&gt; 파일을 만드는 데 사용 또는 공개 API의 측면에서 그 인코딩을 JavaBeans 상태를 스트림 할 수있는 클래스입니다. &lt;code&gt;Encoder&lt;/code&gt; , 지속적인 위양과 함께, 일련의 아래로 객체 그래프를 파괴 할 책임이 &lt;code&gt;Statements&lt;/code&gt; 들과 &lt;code&gt;Expression&lt;/code&gt; 사용될 수들을 생성한다. 서브 클래스는 일반적으로 Java 소스 코드 또는 XML과 같이 사람이 읽을 수있는 형태를 사용하여 이러한 표현식에 대한 구문을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c77aa943626bfc9cd78c42be99aa5591b9ae7f88" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Entity&lt;/code&gt; node does not have any parent.</source>
          <target state="translated">An &lt;code&gt;Entity&lt;/code&gt; node does not have any parent.</target>
        </trans-unit>
        <trans-unit id="ec3d697bd11ed72dea901f0ebcabfb7737e8bb5a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Entry&lt;/code&gt; object is passed to instances of &lt;code&gt;RowFilter&lt;/code&gt;, allowing the filter to get the value of the entry's data, and thus to determine whether the entry should be shown.</source>
          <target state="translated">An &lt;code&gt;Entry&lt;/code&gt; object is passed to instances of &lt;code&gt;RowFilter&lt;/code&gt; , allowing the filter to get the value of the entry's data, and thus to determine whether the entry should be shown.</target>
        </trans-unit>
        <trans-unit id="1a38d276a61ba43332e677c36a27562bd762f034" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Entry&lt;/code&gt; object is passed to instances of &lt;code&gt;RowFilter&lt;/code&gt;, allowing the filter to get the value of the entry's data, and thus to determine whether the entry should be shown. An &lt;code&gt;Entry&lt;/code&gt; object contains information about the model as well as methods for getting the underlying values from the model.</source>
          <target state="translated">An &lt;code&gt;Entry&lt;/code&gt; object is passed to instances of &lt;code&gt;RowFilter&lt;/code&gt; , allowing the filter to get the value of the entry's data, and thus to determine whether the entry should be shown. An &lt;code&gt;Entry&lt;/code&gt; object contains information about the model as well as methods for getting the underlying values from the model.</target>
        </trans-unit>
        <trans-unit id="c787df111ea8ed53486e1aedc911836a8a553c35" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;EnumControl&lt;/code&gt; provides control over a set of discrete possible values, each represented by an object.</source>
          <target state="translated">An &lt;code&gt;EnumControl&lt;/code&gt; provides control over a set of discrete possible values, each represented by an object.</target>
        </trans-unit>
        <trans-unit id="969f1444a803aff0d57ef7a482817bd88af043f2" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;EnumControl&lt;/code&gt; provides control over a set of discrete possible values, each represented by an object. In a graphical user interface, such a control might be represented by a set of buttons, each of which chooses one value or setting. For example, a reverb control might provide several preset reverberation settings, instead of providing continuously adjustable parameters of the sort that would be represented by &lt;a href=&quot;floatcontrol&quot;&gt;&lt;code&gt;FloatControl&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">An &lt;code&gt;EnumControl&lt;/code&gt; provides control over a set of discrete possible values, each represented by an object. In a graphical user interface, such a control might be represented by a set of buttons, each of which chooses one value or setting. For example, a reverb control might provide several preset reverberation settings, instead of providing continuously adjustable parameters of the sort that would be represented by &lt;a href=&quot;floatcontrol&quot;&gt; &lt;code&gt;FloatControl&lt;/code&gt; &lt;/a&gt; objects.</target>
        </trans-unit>
        <trans-unit id="5466e4649a7deefc8f2bef793fa40e405d33474c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Enumeration&lt;/code&gt; of &lt;code&gt;URL&lt;/code&gt;s. If the loader is closed, the Enumeration contains no elements.</source>
          <target state="translated">An &lt;code&gt;Enumeration&lt;/code&gt; of &lt;code&gt;URL&lt;/code&gt; s. If the loader is closed, the Enumeration contains no elements.</target>
        </trans-unit>
        <trans-unit id="a2762916eff2ee0911d64b1e4075c136b4b6a548" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Error&lt;/code&gt; is a subclass of &lt;code&gt;Throwable&lt;/code&gt; that indicates serious problems that a reasonable application should not try to catch.</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; 의 서브 클래스 &lt;code&gt;Throwable&lt;/code&gt; 합리적 응용 프로그램이라면 파악하려고 시도해서는 안 심각한 문제를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="48a662260ef3ea122e49b8ef9a4f642585cccde8" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Error&lt;/code&gt; is a subclass of &lt;code&gt;Throwable&lt;/code&gt; that indicates serious problems that a reasonable application should not try to catch. Most such errors are abnormal conditions. The &lt;code&gt;ThreadDeath&lt;/code&gt; error, though a &quot;normal&quot; condition, is also a subclass of &lt;code&gt;Error&lt;/code&gt; because most applications should not try to catch it.</source>
          <target state="translated">&lt;code&gt;Error&lt;/code&gt; 의 서브 클래스 &lt;code&gt;Throwable&lt;/code&gt; 합리적 응용 프로그램이라면 파악하려고 시도해서는 안 심각한 문제를 나타냅니다. 이러한 오류는 대부분 비정상적인 상태입니다. &lt;code&gt;ThreadDeath&lt;/code&gt; 에러는 「정상」인 상태입니다 만, 또한의 서브 클래스 &lt;code&gt;Error&lt;/code&gt; 대부분의 응용 프로그램에서는 캐치해서는 안되기 때문이다.</target>
        </trans-unit>
        <trans-unit id="8f42fc0e3758bfd9e9e772d31c245d9cba24225f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Event&lt;/code&gt; object generated when an event occurs to a &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">An &lt;code&gt;Event&lt;/code&gt; object generated when an event occurs to a &lt;code&gt;RowSet&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="8eb88fdb1e0d509eddacdb741f98e7ddfe113ca6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Event&lt;/code&gt; object generated when an event occurs to a &lt;code&gt;RowSet&lt;/code&gt; object. A &lt;code&gt;RowSetEvent&lt;/code&gt; object is generated when a single row in a rowset is changed, the whole rowset is changed, or the rowset cursor moves.</source>
          <target state="translated">An &lt;code&gt;Event&lt;/code&gt; object generated when an event occurs to a &lt;code&gt;RowSet&lt;/code&gt; object. A &lt;code&gt;RowSetEvent&lt;/code&gt; object is generated when a single row in a rowset is changed, the whole rowset is changed, or the rowset cursor moves.</target>
        </trans-unit>
        <trans-unit id="4b3a2e9faa73995630f706c868721098d88c5c50" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Event&lt;/code&gt; object that provides information about the source of a connection-related event.</source>
          <target state="translated">An &lt;code&gt;Event&lt;/code&gt; object that provides information about the source of a connection-related event.</target>
        </trans-unit>
        <trans-unit id="405be285ec6669b2271e5bb048931003260ad91c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Event&lt;/code&gt; object that provides information about the source of a connection-related event. &lt;code&gt;ConnectionEvent&lt;/code&gt; objects are generated when an application closes a pooled connection and when an error occurs. The &lt;code&gt;ConnectionEvent&lt;/code&gt; object contains two kinds of information:</source>
          <target state="translated">An &lt;code&gt;Event&lt;/code&gt; object that provides information about the source of a connection-related event. &lt;code&gt;ConnectionEvent&lt;/code&gt; objects are generated when an application closes a pooled connection and when an error occurs. The &lt;code&gt;ConnectionEvent&lt;/code&gt; object contains two kinds of information:</target>
        </trans-unit>
        <trans-unit id="1200b07a69ebd63bdc4ebbc5f5538cdd70684f33" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;EventSettings&lt;/code&gt; object for a recording can be obtained by invoking the &lt;a href=&quot;recording#enable(java.lang.String)&quot;&gt;&lt;code&gt;Recording.enable(String)&lt;/code&gt;&lt;/a&gt; method which is configured using method chaining.</source>
          <target state="translated">&lt;code&gt;EventSettings&lt;/code&gt; 의 기록 용 오브젝트가 호출하는 것에 의해 얻을 수있다 &lt;a href=&quot;recording#enable(java.lang.String)&quot;&gt; &lt;code&gt;Recording.enable(String)&lt;/code&gt; &lt;/a&gt; 에있어서의 체인을 사용하여 구성되는 방법.</target>
        </trans-unit>
        <trans-unit id="f6f7318713b357b4769d8f1f22a2c306df5b5900" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ExecutorService&lt;/code&gt; can be shut down, which will cause it to reject new tasks. Two different methods are provided for shutting down an &lt;code&gt;ExecutorService&lt;/code&gt;. The &lt;a href=&quot;#shutdown()&quot;&gt;&lt;code&gt;shutdown()&lt;/code&gt;&lt;/a&gt; method will allow previously submitted tasks to execute before terminating, while the &lt;a href=&quot;#shutdownNow()&quot;&gt;&lt;code&gt;shutdownNow()&lt;/code&gt;&lt;/a&gt; method prevents waiting tasks from starting and attempts to stop currently executing tasks. Upon termination, an executor has no tasks actively executing, no tasks awaiting execution, and no new tasks can be submitted. An unused &lt;code&gt;ExecutorService&lt;/code&gt; should be shut down to allow reclamation of its resources.</source>
          <target state="translated">An &lt;code&gt;ExecutorService&lt;/code&gt; can be shut down, which will cause it to reject new tasks. Two different methods are provided for shutting down an &lt;code&gt;ExecutorService&lt;/code&gt; . The &lt;a href=&quot;#shutdown()&quot;&gt; &lt;code&gt;shutdown()&lt;/code&gt; &lt;/a&gt; method will allow previously submitted tasks to execute before terminating, while the &lt;a href=&quot;#shutdownNow()&quot;&gt; &lt;code&gt;shutdownNow()&lt;/code&gt; &lt;/a&gt; method prevents waiting tasks from starting and attempts to stop currently executing tasks. Upon termination, an executor has no tasks actively executing, no tasks awaiting execution, and no new tasks can be submitted. An unused &lt;code&gt;ExecutorService&lt;/code&gt; should be shut down to allow reclamation of its resources.</target>
        </trans-unit>
        <trans-unit id="b25ba7da66a2e434a31c596e1c9a7682b7d798df" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ExecutorService&lt;/code&gt; can be shut down, which will cause it to reject new tasks. Two different methods are provided for shutting down an &lt;code&gt;ExecutorService&lt;/code&gt;. The &lt;a href=&quot;executorservice#shutdown--&quot;&gt;&lt;code&gt;shutdown()&lt;/code&gt;&lt;/a&gt; method will allow previously submitted tasks to execute before terminating, while the &lt;a href=&quot;executorservice#shutdownNow--&quot;&gt;&lt;code&gt;shutdownNow()&lt;/code&gt;&lt;/a&gt; method prevents waiting tasks from starting and attempts to stop currently executing tasks. Upon termination, an executor has no tasks actively executing, no tasks awaiting execution, and no new tasks can be submitted. An unused &lt;code&gt;ExecutorService&lt;/code&gt; should be shut down to allow reclamation of its resources.</source>
          <target state="translated">&lt;code&gt;ExecutorService&lt;/code&gt; 입니다은 이 새 작업을 거부하는 원인이되는, 종료 할 수 있습니다. &lt;code&gt;ExecutorService&lt;/code&gt; 종료를 위해 두 가지 다른 방법이 제공됩니다 . &lt;a href=&quot;executorservice#shutdown--&quot;&gt; &lt;code&gt;shutdown()&lt;/code&gt; &lt;/a&gt; 그동안 방법은 이전에 제출 한 작업을 종료하기 전에 실행 할 수 &lt;a href=&quot;executorservice#shutdownNow--&quot;&gt; &lt;code&gt;shutdownNow()&lt;/code&gt; &lt;/a&gt; 메소드 방지를 시작하고 작업을 실행하는 현재 중지하려는 시도로부터 작업을 기다리고. 종료시 실행자는 현재 실행중인 작업이없고, 실행 대기중인 작업이 없으며, 새 작업을 제출할 수 없습니다. 사용하지 않는 &lt;code&gt;ExecutorService&lt;/code&gt; 를 종료하여 자원을 교정 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="34a794824a4e14db04b15382d70fd07f03ea9260" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ExportException&lt;/code&gt; is a &lt;code&gt;RemoteException&lt;/code&gt; thrown if an attempt to export a remote object fails.</source>
          <target state="translated">An &lt;code&gt;ExportException&lt;/code&gt; is a &lt;code&gt;RemoteException&lt;/code&gt; thrown if an attempt to export a remote object fails.</target>
        </trans-unit>
        <trans-unit id="39d3dceb532a9ec02511fe87f6bbde860ca90ddf" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ExportException&lt;/code&gt; is a &lt;code&gt;RemoteException&lt;/code&gt; thrown if an attempt to export a remote object fails. A remote object is exported via the constructors and &lt;code&gt;exportObject&lt;/code&gt; methods of &lt;code&gt;java.rmi.server.UnicastRemoteObject&lt;/code&gt; and &lt;code&gt;java.rmi.activation.Activatable&lt;/code&gt;.</source>
          <target state="translated">An &lt;code&gt;ExportException&lt;/code&gt; is a &lt;code&gt;RemoteException&lt;/code&gt; thrown if an attempt to export a remote object fails. A remote object is exported via the constructors and &lt;code&gt;exportObject&lt;/code&gt; methods of &lt;code&gt;java.rmi.server.UnicastRemoteObject&lt;/code&gt; and &lt;code&gt;java.rmi.activation.Activatable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="911cc4d361073ce5459c6b73df64355557887a59" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Expression&lt;/code&gt; object represents a primitive expression in which a single method is applied to a target and a set of arguments to return a result - as in &lt;code&gt;&quot;a.getFoo()&quot;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Expression&lt;/code&gt; 처럼 - 오브젝트는 하나의 방법은 타겟 및 결과를 반환하는 인수의 세트에 적용되는 원시 표현 나타내는 &lt;code&gt;&quot;a.getFoo()&quot;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5b6a11c1553dc1458c18e3e0c0e70826fbf7680a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;HTMLCollection&lt;/code&gt; is a list of nodes.</source>
          <target state="translated">&lt;code&gt;HTMLCollection&lt;/code&gt; 는 노드의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="a514333265edbedaaf5b7cddc947d3ffa834d369" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;HTMLCollection&lt;/code&gt; is a list of nodes. An individual node may be accessed by either ordinal index or the node's&lt;code&gt;name&lt;/code&gt; or &lt;code&gt;id&lt;/code&gt; attributes. Note: Collections in the HTML DOM are assumed to be live meaning that they are automatically updated when the underlying document is changed.</source>
          <target state="translated">&lt;code&gt;HTMLCollection&lt;/code&gt; 는 노드의 목록입니다. 개별 노드는 서수 색인이나 노드의 &lt;code&gt;name&lt;/code&gt; 또는 &lt;code&gt;id&lt;/code&gt; 속성 으로 액세스 할 수 있습니다 . 참고 : HTML DOM의 컬렉션은 기본 문서가 변경 될 때 자동으로 업데이트됨을 의미하는 라이브로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="88437c698b82c8dece8aec607a963f7c5385d3af" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;HTMLDocument&lt;/code&gt; is the root of the HTML hierarchy and holds the entire content.</source>
          <target state="translated">&lt;code&gt;HTMLDocument&lt;/code&gt; 의가 되는 HTML 계층 구조의 루트이며, 컨텐츠 전체를 보관 유지합니다.</target>
        </trans-unit>
        <trans-unit id="6273ceca0f30e38689288fb8793108d845981b3c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;HTMLDocument&lt;/code&gt; is the root of the HTML hierarchy and holds the entire content. Besides providing access to the hierarchy, it also provides some convenience methods for accessing certain sets of information from the document.</source>
          <target state="translated">&lt;code&gt;HTMLDocument&lt;/code&gt; 의가 되는 HTML 계층 구조의 루트이며, 컨텐츠 전체를 보관 유지합니다. 계층 구조에 대한 액세스를 제공하는 것 외에도 문서에서 특정 정보 세트에 액세스하기위한 몇 가지 편리한 방법도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d1121514d8e3c0ff39e3e710b7095461935c344d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;HierarchyBoundsListener&lt;/code&gt; object is registered via &lt;code&gt;addHierarchyBoundsListener&lt;/code&gt;.</source>
          <target state="translated">An &lt;code&gt;HierarchyBoundsListener&lt;/code&gt; object is registered via &lt;code&gt;addHierarchyBoundsListener&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="cdb980ef39e188d69415dbe3f5c5201555aa2b11" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;HierarchyListener&lt;/code&gt; object is registered via &lt;code&gt;addHierarchyListener&lt;/code&gt;.</source>
          <target state="translated">An &lt;code&gt;HierarchyListener&lt;/code&gt; object is registered via &lt;code&gt;addHierarchyListener&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="71b416739d8a7c24a93b6a2a268fedf1589a0659" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;HttpClient&lt;/code&gt; can be used to send &lt;a href=&quot;httprequest&quot;&gt;requests&lt;/a&gt; and retrieve their &lt;a href=&quot;httpresponse&quot;&gt;responses&lt;/a&gt;. An &lt;code&gt;
 HttpClient&lt;/code&gt; is created through a &lt;a href=&quot;#newBuilder()&quot;&gt;&lt;code&gt;builder&lt;/code&gt;&lt;/a&gt;. The builder can be used to configure per-client state, like: the preferred protocol version ( HTTP/1.1 or HTTP/2 ), whether to follow redirects, a proxy, an authenticator, etc. Once built, an &lt;code&gt;HttpClient&lt;/code&gt; is immutable, and can be used to send multiple requests.</source>
          <target state="translated">An &lt;code&gt;HttpClient&lt;/code&gt; can be used to send &lt;a href=&quot;httprequest&quot;&gt;requests&lt;/a&gt; and retrieve their &lt;a href=&quot;httpresponse&quot;&gt;responses&lt;/a&gt;. An &lt;code&gt; HttpClient&lt;/code&gt; is created through a &lt;a href=&quot;#newBuilder()&quot;&gt; &lt;code&gt;builder&lt;/code&gt; &lt;/a&gt;. The builder can be used to configure per-client state, like: the preferred protocol version ( HTTP/1.1 or HTTP/2 ), whether to follow redirects, a proxy, an authenticator, etc. Once built, an &lt;code&gt;HttpClient&lt;/code&gt; is immutable, and can be used to send multiple requests.</target>
        </trans-unit>
        <trans-unit id="7717b3d37f46af4ff8f8b4273f9c3e12bd4fa081" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;HttpClient&lt;/code&gt; provides configuration information, and resource sharing, for all requests sent through it.</source>
          <target state="translated">An &lt;code&gt;HttpClient&lt;/code&gt; provides configuration information, and resource sharing, for all requests sent through it.</target>
        </trans-unit>
        <trans-unit id="f17d27936e7a73fbbc027ce5fa454011a243097e" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;HttpHeaders&lt;/code&gt; is not typically created directly, but rather returned from an &lt;a href=&quot;httprequest#headers()&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;httpresponse#headers()&quot;&gt;&lt;code&gt;HttpResponse&lt;/code&gt;&lt;/a&gt;. Specific HTTP headers can be set for a &lt;a href=&quot;httprequest&quot;&gt;request&lt;/a&gt; through one of the request builder's &lt;a href=&quot;httprequest.builder#header(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">An &lt;code&gt;HttpHeaders&lt;/code&gt; is not typically created directly, but rather returned from an &lt;a href=&quot;httprequest#headers()&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt; or an &lt;a href=&quot;httpresponse#headers()&quot;&gt; &lt;code&gt;HttpResponse&lt;/code&gt; &lt;/a&gt;. Specific HTTP headers can be set for a &lt;a href=&quot;httprequest&quot;&gt;request&lt;/a&gt; through one of the request builder's &lt;a href=&quot;httprequest.builder#header(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;headers&lt;/code&gt; &lt;/a&gt; methods.</target>
        </trans-unit>
        <trans-unit id="11c6f410e4f205680cb5a740e84dd27b2032808a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;HttpRequest&lt;/code&gt; instance is built through an &lt;code&gt;HttpRequest&lt;/code&gt;&lt;a href=&quot;httprequest.builder&quot;&gt;builder&lt;/a&gt;. An &lt;code&gt;HttpRequest&lt;/code&gt; builder is obtained from one of the &lt;a href=&quot;#newBuilder(java.net.URI)&quot;&gt;&lt;code&gt;newBuilder&lt;/code&gt;&lt;/a&gt; methods. A request's &lt;a href=&quot;../../../../java.base/java/net/uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt;, headers, and body can be set. Request bodies are provided through a &lt;a href=&quot;httprequest.bodypublisher&quot;&gt;&lt;code&gt;BodyPublisher&lt;/code&gt;&lt;/a&gt; supplied to one of the &lt;a href=&quot;httprequest.builder#POST(java.net.http.HttpRequest.BodyPublisher)&quot;&gt;&lt;code&gt;POST&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;httprequest.builder#PUT(java.net.http.HttpRequest.BodyPublisher)&quot;&gt;&lt;code&gt;PUT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;httprequest.builder#method(java.lang.String,java.net.http.HttpRequest.BodyPublisher)&quot;&gt;&lt;code&gt;method&lt;/code&gt;&lt;/a&gt; methods. Once all required parameters have been set in the builder, &lt;a href=&quot;httprequest.builder#build()&quot;&gt;&lt;code&gt;build&lt;/code&gt;&lt;/a&gt; will return the &lt;code&gt;HttpRequest&lt;/code&gt;. Builders can be copied and modified many times in order to build multiple related requests that differ in some parameters.</source>
          <target state="translated">An &lt;code&gt;HttpRequest&lt;/code&gt; instance is built through an &lt;code&gt;HttpRequest&lt;/code&gt; &lt;a href=&quot;httprequest.builder&quot;&gt;builder&lt;/a&gt;. An &lt;code&gt;HttpRequest&lt;/code&gt; builder is obtained from one of the &lt;a href=&quot;#newBuilder(java.net.URI)&quot;&gt; &lt;code&gt;newBuilder&lt;/code&gt; &lt;/a&gt; methods. A request's &lt;a href=&quot;../../../../java.base/java/net/uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt;, headers, and body can be set. Request bodies are provided through a &lt;a href=&quot;httprequest.bodypublisher&quot;&gt; &lt;code&gt;BodyPublisher&lt;/code&gt; &lt;/a&gt; supplied to one of the &lt;a href=&quot;httprequest.builder#POST(java.net.http.HttpRequest.BodyPublisher)&quot;&gt; &lt;code&gt;POST&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;httprequest.builder#PUT(java.net.http.HttpRequest.BodyPublisher)&quot;&gt; &lt;code&gt;PUT&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;httprequest.builder#method(java.lang.String,java.net.http.HttpRequest.BodyPublisher)&quot;&gt; &lt;code&gt;method&lt;/code&gt; &lt;/a&gt; methods. Once all required parameters have been set in the builder, &lt;a href=&quot;httprequest.builder#build()&quot;&gt; &lt;code&gt;build&lt;/code&gt; &lt;/a&gt; will return the &lt;code&gt;HttpRequest&lt;/code&gt; . Builders can be copied and modified many times in order to build multiple related requests that differ in some parameters.</target>
        </trans-unit>
        <trans-unit id="0f09c8f8c954d15c78d939e82c0b050f51ddbb97" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;HttpResponse&lt;/code&gt; is not created directly, but rather returned as a result of sending an &lt;a href=&quot;httprequest&quot;&gt;&lt;code&gt;HttpRequest&lt;/code&gt;&lt;/a&gt;. An &lt;code&gt;HttpResponse&lt;/code&gt; is made available when the response status code and headers have been received, and typically after the response body has also been completely received. Whether or not the &lt;code&gt;HttpResponse&lt;/code&gt; is made available before the response body has been completely received depends on the &lt;a href=&quot;httpresponse.bodyhandler&quot;&gt;&lt;code&gt;BodyHandler&lt;/code&gt;&lt;/a&gt; provided when sending the &lt;code&gt;HttpRequest&lt;/code&gt;.</source>
          <target state="translated">An &lt;code&gt;HttpResponse&lt;/code&gt; is not created directly, but rather returned as a result of sending an &lt;a href=&quot;httprequest&quot;&gt; &lt;code&gt;HttpRequest&lt;/code&gt; &lt;/a&gt;. An &lt;code&gt;HttpResponse&lt;/code&gt; is made available when the response status code and headers have been received, and typically after the response body has also been completely received. Whether or not the &lt;code&gt;HttpResponse&lt;/code&gt; is made available before the response body has been completely received depends on the &lt;a href=&quot;httpresponse.bodyhandler&quot;&gt; &lt;code&gt;BodyHandler&lt;/code&gt; &lt;/a&gt; provided when sending the &lt;code&gt;HttpRequest&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a565e78f4c713f13978093bc8746ce4316531af4" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ICC_ColorSpace&lt;/code&gt; object can be constructed from an appropriate &lt;code&gt;ICC_Profile&lt;/code&gt;. Typically, an &lt;code&gt;ICC_ColorSpace&lt;/code&gt; would be associated with an ICC Profile which is either an input, display, or output profile (see the ICC specification). There are also device link, abstract, color space conversion, and named color profiles. These are less useful for tagging a color or image, but are useful for other purposes (in particular device link profiles can provide improved performance for converting from one device's color space to another's).</source>
          <target state="translated">&lt;code&gt;ICC_ColorSpace&lt;/code&gt; 의의 객체는 적절한에서 구성 할 수 &lt;code&gt;ICC_Profile&lt;/code&gt; . 일반적으로 &lt;code&gt;ICC_ColorSpace&lt;/code&gt; 는 입력, 디스플레이 또는 출력 프로필 인 ICC 프로필과 연결됩니다 (ICC 사양 참조). 장치 링크, 추상, 색 공간 변환 및 명명 된 색 프로필도 있습니다. 색상이나 이미지에 태그를 지정하는 데는 덜 유용하지만 다른 용도에는 유용합니다 (특히 장치 링크 프로필은 한 장치의 색상 공간에서 다른 장치의 색상 공간으로 변환 할 때 향상된 성능을 제공 할 수 있음).</target>
        </trans-unit>
        <trans-unit id="215a9876e2b623e5944bd9958e1e3ffaf2e78159" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IIOInvalidTreeException&lt;/code&gt; is thrown when an attempt by an &lt;code&gt;IIOMetadata&lt;/code&gt; object to parse a tree of &lt;code&gt;IIOMetadataNode&lt;/code&gt;s fails.</source>
          <target state="translated">&lt;code&gt;IIOInvalidTreeException&lt;/code&gt; 의 시도 할 때 발생합니다 &lt;code&gt;IIOMetadata&lt;/code&gt; 의 객체가 나무를 구문 분석 &lt;code&gt;IIOMetadataNode&lt;/code&gt; 를 의 실패.</target>
        </trans-unit>
        <trans-unit id="3c04129b842e0c295a65eac3a6a7fd549c01fba5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IIOInvalidTreeException&lt;/code&gt; is thrown when an attempt by an &lt;code&gt;IIOMetadata&lt;/code&gt; object to parse a tree of &lt;code&gt;IIOMetadataNode&lt;/code&gt;s fails. The node that led to the parsing error may be stored. As with any parsing error, the actual error may occur at a different point that that where it is detected. The node returned by &lt;code&gt;getOffendingNode&lt;/code&gt; should merely be considered as a clue to the actual nature of the problem.</source>
          <target state="translated">&lt;code&gt;IIOInvalidTreeException&lt;/code&gt; 의 시도 할 때 발생합니다 &lt;code&gt;IIOMetadata&lt;/code&gt; 의 객체가 나무를 구문 분석 &lt;code&gt;IIOMetadataNode&lt;/code&gt; 를 의 실패. 구문 분석 오류가 발생한 노드가 저장되었을 수 있습니다. 구문 분석 오류와 마찬가지로 실제 오류는 감지 된 위치와 다른 지점에서 발생할 수 있습니다. &lt;code&gt;getOffendingNode&lt;/code&gt; 가 리턴 한 노드 는 문제의 실제 특성에 대한 단서로 간주되어야합니다.</target>
        </trans-unit>
        <trans-unit id="ff541d4087da22b8754dd306bbe67f7e60d262ed" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IIOMetadata&lt;/code&gt; object containing metadata associated with the image.</source>
          <target state="translated">이미지와 관련된 메타 데이터를 포함 하는 &lt;code&gt;IIOMetadata&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="8e1604f511b20c861fe9cc5df12c64eb710bbe30" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IIOMetadataController&lt;/code&gt; that is suggested for use as the controller for this &lt;code&gt;IIOMetadata&lt;/code&gt; object.</source>
          <target state="translated">An &lt;code&gt;IIOMetadataController&lt;/code&gt; that is suggested for use as the controller for this &lt;code&gt;IIOMetadata&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="2a1caceefed4d715e967bc65b486a71ca37b7cfa" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IIOMetadataController&lt;/code&gt; that is suggested for use as the controller for this &lt;code&gt;IIOMetadata&lt;/code&gt; object. It may be retrieved via &lt;code&gt;getDefaultController&lt;/code&gt;. To install the default controller, call &lt;code&gt;setController(getDefaultController())&lt;/code&gt;. This instance variable should be set by subclasses that choose to provide their own default controller, usually a GUI, for setting parameters.</source>
          <target state="translated">&lt;code&gt;IIOMetadataController&lt;/code&gt; 이의 콘트롤러로서 사용하도록 추천되고 &lt;code&gt;IIOMetadata&lt;/code&gt; 객체입니다. &lt;code&gt;getDefaultController&lt;/code&gt; 를 통해 검색 할 수 있습니다 . 기본 컨트롤러를 설치하려면 &lt;code&gt;setController(getDefaultController())&lt;/code&gt; 호출하십시오 . 이 인스턴스 변수는 매개 변수 설정을 위해 자체 기본 제어기 (일반적으로 GUI)를 제공하도록 선택한 서브 클래스에 의해 설정되어야합니다.</target>
        </trans-unit>
        <trans-unit id="ffca7cd14f129aa632000db4eed85262cbd1caa8" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IOException&lt;/code&gt; raised in &lt;code&gt;WebSocket&lt;/code&gt; will result in an invocation of &lt;code&gt;onError&lt;/code&gt; with that exception (if the input is not closed). Unless otherwise stated if the listener's method throws an exception or a &lt;code&gt;CompletionStage&lt;/code&gt; returned from a method completes exceptionally, the WebSocket will invoke &lt;code&gt;onError&lt;/code&gt; with this exception.</source>
          <target state="translated">An &lt;code&gt;IOException&lt;/code&gt; raised in &lt;code&gt;WebSocket&lt;/code&gt; will result in an invocation of &lt;code&gt;onError&lt;/code&gt; with that exception (if the input is not closed). Unless otherwise stated if the listener's method throws an exception or a &lt;code&gt;CompletionStage&lt;/code&gt; returned from a method completes exceptionally, the WebSocket will invoke &lt;code&gt;onError&lt;/code&gt; with this exception.</target>
        </trans-unit>
        <trans-unit id="6c85c959befab236390af4d1a3f85834bbfc7544" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IOException&lt;/code&gt; will be thrown if the previous marked position lies in the discarded portion of the stream.</source>
          <target state="translated">&lt;code&gt;IOException&lt;/code&gt; 이는 스트림의 부분 폐기 이전의 표시된 위치에있는 경우 발생한다.</target>
        </trans-unit>
        <trans-unit id="aafc5d76c4d0cc5592e66cdb998a7e61c1d42f5b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if any of the argument keys are not recognized and are not namespace qualified.</source>
          <target state="translated">An &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if any of the argument keys are not recognized and are not namespace qualified.</target>
        </trans-unit>
        <trans-unit id="f00da7be4b076b2f36252e431adece3820c33e35" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if the precision section of the string is out of range (&lt;code&gt;&amp;lt; 0&lt;/code&gt;) or the string is not in the format created by the &lt;a href=&quot;#toString()&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">An &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if the precision section of the string is out of range ( &lt;code&gt;&amp;lt; 0&lt;/code&gt; ) or the string is not in the format created by the &lt;a href=&quot;#toString()&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="9aca7475e60215da9f707c0ba7ec6f4941f6b472" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if the precision section of the string is out of range (&lt;code&gt;&amp;lt; 0&lt;/code&gt;) or the string is not in the format created by the &lt;a href=&quot;mathcontext#toString--&quot;&gt;&lt;code&gt;toString()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;IllegalArgumentException&lt;/code&gt; 가 문자열의 정밀도 부분이 범위 외 (만약 슬로우 &lt;code&gt;&amp;lt; 0&lt;/code&gt; ) 또는 문자열에 의해 생성 된 형식이 아닙니다 &lt;a href=&quot;mathcontext#toString--&quot;&gt; &lt;code&gt;toString()&lt;/code&gt; &lt;/a&gt; 메소드.</target>
        </trans-unit>
        <trans-unit id="93685aab653d24a9dd987c56ff592429121080f9" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if the source is the same as the destination.</source>
          <target state="translated">An &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown if the source is the same as the destination.</target>
        </trans-unit>
        <trans-unit id="119a85c6746c62edfcc8db89ec12c05ab2117e6b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IllegalArgumentException&lt;/code&gt; may be thrown if the source and/or destination image is incompatible with the types of images $ allowed by the class implementing this filter.</source>
          <target state="translated">An &lt;code&gt;IllegalArgumentException&lt;/code&gt; may be thrown if the source and/or destination image is incompatible with the types of images $ allowed by the class implementing this filter.</target>
        </trans-unit>
        <trans-unit id="56ee9deaa2bf04ff47d286b7b248d2b1f5ad44ce" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown if &lt;code&gt;nextSibling&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;node&lt;/code&gt; is not a parent of &lt;code&gt;nextSibling&lt;/code&gt;. An &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown if &lt;code&gt;node&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;nextSibling&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">An &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown if &lt;code&gt;nextSibling&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;node&lt;/code&gt; is not a parent of &lt;code&gt;nextSibling&lt;/code&gt; . An &lt;code&gt;IllegalStateException&lt;/code&gt; is thrown if &lt;code&gt;node&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and &lt;code&gt;nextSibling&lt;/code&gt; is not &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="74817d240b4f8e996deaa3f69b3c57e963e3db18" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ImageFilter&lt;/code&gt; subclass might override this method or not, depending on if and how it can send data in TDLR order. Three possibilities exist:</source>
          <target state="translated">An &lt;code&gt;ImageFilter&lt;/code&gt; subclass might override this method or not, depending on if and how it can send data in TDLR order. Three possibilities exist:</target>
        </trans-unit>
        <trans-unit id="3eff97dad7e057d90c5da902c1c97a2c994b4b70" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ImageReadParam&lt;/code&gt; object is used to specify how an image, or a set of images, will be converted on input from a stream in the context of the Java Image I/O framework. A plug-in for a specific image format will return instances of &lt;code&gt;ImageReadParam&lt;/code&gt; from the &lt;code&gt;getDefaultReadParam&lt;/code&gt; method of its &lt;code&gt;ImageReader&lt;/code&gt; implementation.</source>
          <target state="translated">&lt;code&gt;ImageReadParam&lt;/code&gt; 객체는 이미지 또는 이미지 세트가, 자바 이미지 I / O 프레임 워크의 컨텍스트에서 스트림로부터 입력으로 변환하는 방법을 지정하는 데 사용됩니다. 특정 이미지 형식의 플러그인 은 &lt;code&gt;ImageReader&lt;/code&gt; 구현 의 &lt;code&gt;getDefaultReadParam&lt;/code&gt; 메소드 에서 &lt;code&gt;ImageReadParam&lt;/code&gt; 인스턴스를 리턴합니다 .</target>
        </trans-unit>
        <trans-unit id="0af56b2a30943a55845e373e8a1c863f3264bfd7" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ImageTranscoder&lt;/code&gt; may be used to convert the &lt;code&gt;IIOMetadata&lt;/code&gt; objects supplied by the &lt;code&gt;ImageReader&lt;/code&gt; (representing per-stream and per-image metadata) into corresponding objects suitable for encoding by a particular &lt;code&gt;ImageWriter&lt;/code&gt;. In the case where the methods of this interface are being called directly on an &lt;code&gt;ImageWriter&lt;/code&gt;, the output will be suitable for that writer.</source>
          <target state="translated">&lt;code&gt;ImageTranscoder&lt;/code&gt; 변환하는데 사용될 수있다 &lt;code&gt;IIOMetadata&lt;/code&gt; 에 의해 제공 오브젝트 &lt;code&gt;ImageReader&lt;/code&gt; 를 특정하여 부호화에 적합한 개체에 대응하는 (메타 데이터 스트림마다, 이미지 표현) &lt;code&gt;ImageWriter&lt;/code&gt; . 이 인터페이스의 메소드가 &lt;code&gt;ImageWriter&lt;/code&gt; 로 직접 호출되는 경우, 출력은 해당 라이터에 적합합니다.</target>
        </trans-unit>
        <trans-unit id="7d8a7d1e92624334afdc064444398d6ecbd51424" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; to be used to generate a destination image when reading, or to set the output color type when writing.</source>
          <target state="translated">An &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; to be used to generate a destination image when reading, or to set the output color type when writing.</target>
        </trans-unit>
        <trans-unit id="1b06626b9bc1b7d4424219cb86f9b3a4e96100a9" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; to be used to generate a destination image when reading, or to set the output color type when writing. If non has been set the value will be &lt;code&gt;null&lt;/code&gt;. By default, the value is &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageTypeSpecifier&lt;/code&gt; 판독시 대상 화상을 생성 또는 기록 할 때 출력 색상 종류를 설정하기 위해 사용된다. 설정되지 않은 경우 값은 &lt;code&gt;null&lt;/code&gt; 입니다. 기본적으로 값은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="61eb5323f84c50ba0da8ce5e355ef698aa642788" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ImageWriteParam&lt;/code&gt; may optionally be supplied for cases where it may affect thumbnail handling.</source>
          <target state="translated">&lt;code&gt;ImageWriteParam&lt;/code&gt; 선택적으로 썸네일 처리에 영향을 미칠 수있는 경우에 공급 될 수있다.</target>
        </trans-unit>
        <trans-unit id="cef976dbb17b7d66ea0f7ee9c8bea927e951dbbb" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ImageWriteParam&lt;/code&gt; may optionally be supplied to control the writing process. If &lt;code&gt;param&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, a default write param will be used.</source>
          <target state="translated">&lt;code&gt;ImageWriteParam&lt;/code&gt; 임의로 기록 프로세스를 제어하기 위해 공급 될 수있다. 경우 &lt;code&gt;param&lt;/code&gt; 있습니다 &lt;code&gt;null&lt;/code&gt; , 기본 쓰기 PARAM이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0676238948674450872f874a2fc5e75fe95516fd" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; will be thrown if &lt;code&gt;pos&lt;/code&gt; is smaller than the flushed position (as returned by &lt;code&gt;getflushedPosition&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; 가이 경우에 발생한다 &lt;code&gt;pos&lt;/code&gt; (의해 반환 플러시 위치보다 작은 &lt;code&gt;getflushedPosition&lt;/code&gt; 로부터 ).</target>
        </trans-unit>
        <trans-unit id="fe130b9deb134a5693c2a83a24f3d7b9eaf2dd4f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;InetAddress&lt;/code&gt; representing the address of the network interface used for multicast packets, or if no interface has been set, an &lt;code&gt;InetAddress&lt;/code&gt; representing any local address.</source>
          <target state="translated">&lt;code&gt;InetAddress&lt;/code&gt; 멀티 캐스트 패킷에 사용하는 네트워크 인터페이스의 주소를 나타내는 대답 인터페이스 세트 없었다 경우, &lt;code&gt;InetAddress&lt;/code&gt; 로컬 주소를 나타내는.</target>
        </trans-unit>
        <trans-unit id="5c92d6f2dde615de7d5fde4704fe88b05409eb09" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;InetAddress&lt;/code&gt; representing the address of the network interface used for multicast packets.</source>
          <target state="translated">&lt;code&gt;InetAddress&lt;/code&gt; 를 멀티 캐스트 패킷에 사용하는 네트워크 인터페이스의 주소를 나타내는.</target>
        </trans-unit>
        <trans-unit id="575dfab77f54e9d80f57cf5e6bc7760f0285188c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;InitMaxStreams&lt;/code&gt; instance</source>
          <target state="translated">&lt;code&gt;InitMaxStreams&lt;/code&gt; 의 예</target>
        </trans-unit>
        <trans-unit id="381b3fa54eeedc806d16669d213a81385325e77f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;InputMethodListener&lt;/code&gt; object is registered via &lt;code&gt;addInputMethodListener&lt;/code&gt;.</source>
          <target state="translated">An &lt;code&gt;InputMethodListener&lt;/code&gt; object is registered via &lt;code&gt;addInputMethodListener&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="deb8cf7537deddf0c6f8544b44f9dd3cbc5eb972" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Insets&lt;/code&gt; object is a representation of the borders of a container.</source>
          <target state="translated">An &lt;code&gt;Insets&lt;/code&gt; object is a representation of the borders of a container.</target>
        </trans-unit>
        <trans-unit id="928361216441cf9c71f23ec8de7e70806a2b59d8" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Insets&lt;/code&gt; object is a representation of the borders of a container. It specifies the space that a container must leave at each of its edges. The space can be a border, a blank space, or a title.</source>
          <target state="translated">An &lt;code&gt;Insets&lt;/code&gt; object is a representation of the borders of a container. It specifies the space that a container must leave at each of its edges. The space can be a border, a blank space, or a title.</target>
        </trans-unit>
        <trans-unit id="53aa0eb23f1c7f11a897dd66738bc32f33c521e7" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;InvalidMidiDataException&lt;/code&gt; indicates that inappropriate MIDI data was encountered.</source>
          <target state="translated">&lt;code&gt;InvalidMidiDataException&lt;/code&gt; 부적절한 MIDI 데이터가 검출 된 것을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7bba11aa35eb3242c6e0f5f5f48d0e0feed1e04a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;InvalidMidiDataException&lt;/code&gt; indicates that inappropriate MIDI data was encountered. This often means that the data is invalid in and of itself, from the perspective of the MIDI specification. An example would be an undefined status byte. However, the exception might simply mean that the data was invalid in the context it was used, or that the object to which the data was given was unable to parse or use it. For example, a file reader might not be able to parse a Type 2 MIDI file, even though that format is defined in the MIDI specification.</source>
          <target state="translated">&lt;code&gt;InvalidMidiDataException&lt;/code&gt; 부적절한 MIDI 데이터가 검출 된 것을 나타냅니다. 이것은 종종 MIDI 사양의 관점에서 데이터 자체가 유효하지 않음을 의미합니다. 예를 들어 정의되지 않은 상태 바이트가 있습니다. 그러나 예외는 단순히 데이터가 사용 된 컨텍스트에서 데이터가 유효하지 않거나 데이터가 제공된 오브젝트가 구문 분석하거나 사용할 수 없음을 의미 할 수 있습니다. 예를 들어, 파일 판독기는 형식이 MIDI 사양에 정의되어 있어도 형식 2 MIDI 파일을 구문 분석하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5fe13eb70d6944f3a9cc1317efdfc7e3e5b2f2cb" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ItemListener&lt;/code&gt; object is registered via &lt;code&gt;addItemListener&lt;/code&gt;.</source>
          <target state="translated">An &lt;code&gt;ItemListener&lt;/code&gt; object is registered via &lt;code&gt;addItemListener&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="876a697241aef30034474ad4bac4fc4eb205beab" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Iterator&lt;/code&gt; that yields provider objects for the given service, in some arbitrary order. The iterator will throw an &lt;code&gt;Error&lt;/code&gt; if a provider-configuration file violates the specified format or if a provider class cannot be found and instantiated.</source>
          <target state="translated">주어진 서비스에 대한 제공자 객체를 임의의 순서로 생성 하는 &lt;code&gt;Iterator&lt;/code&gt; 입니다. 공급자 구성 파일이 지정된 형식을 위반하거나 공급자 클래스를 찾아 인스턴스화 할 수없는 경우 반복자는 &lt;code&gt;Error&lt;/code&gt; 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="453a65b4c77bec339c86a663165139d2fc1bc97e" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;OBJECT_CHANGED&lt;/code&gt; event type is fired when (the contents of) an object has changed. This might mean that its attributes have been modified, added, or removed, and/or that the object itself has been replaced. How the object has changed can be determined by examining the &lt;code&gt;NamingEvent&lt;/code&gt;'s old and new bindings.</source>
          <target state="translated">&lt;code&gt;OBJECT_CHANGED&lt;/code&gt; (의 내용) 오브젝트가 변경되었을 때 이벤트 종류가 시작된다. 이는 해당 속성이 수정, 추가 또는 제거되었거나 개체 자체가 교체되었음을 의미 할 수 있습니다. &lt;code&gt;NamingEvent&lt;/code&gt; 의 기존 바인딩과 새로운 바인딩 을 검사하여 개체가 어떻게 변경되었는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="01662decb3ea13e64f59d3c3c37ea323d99c3599" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ObjID&lt;/code&gt; created via this constructor will not clash with any &lt;code&gt;ObjID&lt;/code&gt;s generated via the no-arg constructor.</source>
          <target state="translated">An &lt;code&gt;ObjID&lt;/code&gt; created via this constructor will not clash with any &lt;code&gt;ObjID&lt;/code&gt; s generated via the no-arg constructor.</target>
        </trans-unit>
        <trans-unit id="ed4c2b7df73f2bba1cb41cc9dae536ef66f5986a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ObjID&lt;/code&gt; instance contains an object number (of type &lt;code&gt;long&lt;/code&gt;) and an address space identifier (of type &lt;a href=&quot;uid&quot;&gt;&lt;code&gt;UID&lt;/code&gt;&lt;/a&gt;). In a unique &lt;code&gt;ObjID&lt;/code&gt;, the address space identifier is unique with respect to a given host over time. In a well-known &lt;code&gt;ObjID&lt;/code&gt;, the address space identifier is equivalent to one returned by invoking the &lt;a href=&quot;uid#%3Cinit%3E(short)&quot;&gt;&lt;code&gt;UID(short)&lt;/code&gt;&lt;/a&gt; constructor with the value zero.</source>
          <target state="translated">An &lt;code&gt;ObjID&lt;/code&gt; instance contains an object number (of type &lt;code&gt;long&lt;/code&gt; ) and an address space identifier (of type &lt;a href=&quot;uid&quot;&gt; &lt;code&gt;UID&lt;/code&gt; &lt;/a&gt;). In a unique &lt;code&gt;ObjID&lt;/code&gt; , the address space identifier is unique with respect to a given host over time. In a well-known &lt;code&gt;ObjID&lt;/code&gt; , the address space identifier is equivalent to one returned by invoking the &lt;a href=&quot;uid#%3Cinit%3E(short)&quot;&gt; &lt;code&gt;UID(short)&lt;/code&gt; &lt;/a&gt; constructor with the value zero.</target>
        </trans-unit>
        <trans-unit id="cebae7580f144b2893fd60b11022a25153689298" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ObjID&lt;/code&gt; is used to identify a remote object exported to an RMI runtime.</source>
          <target state="translated">An &lt;code&gt;ObjID&lt;/code&gt; is used to identify a remote object exported to an RMI runtime.</target>
        </trans-unit>
        <trans-unit id="1d88f02c88049f506a26bcc61da5bb687d826268" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ObjID&lt;/code&gt; is used to identify a remote object exported to an RMI runtime. When a remote object is exported, it is assigned an object identifier either implicitly or explicitly, depending on the API used to export.</source>
          <target state="translated">An &lt;code&gt;ObjID&lt;/code&gt; is used to identify a remote object exported to an RMI runtime. When a remote object is exported, it is assigned an object identifier either implicitly or explicitly, depending on the API used to export.</target>
        </trans-unit>
        <trans-unit id="f4a1e28654a182eabca6158e76884be34c9fe9e7" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Object&lt;/code&gt; array parsed from the string.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 배열은 문자열에서 구문 분석.</target>
        </trans-unit>
        <trans-unit id="a89fb1fb9e8b9333e018dcdcae26cf8926a94b8e" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Object&lt;/code&gt; array parsed from the string. In case of error, returns null.</source>
          <target state="translated">문자열에서 구문 분석 된 &lt;code&gt;Object&lt;/code&gt; 배열입니다. 오류가 발생하면 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="44a73feaa1d30e076b53ad0640258478b3baa47a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Object&lt;/code&gt; may be supplied to the plug-in at construction time. The nature of the object is entirely plug-in specific.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 건설시 플러그에 공급 될 수있다. 객체의 특성은 전적으로 플러그인에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="1113d2ff78e48b86013cb0efbe478a6f171736fb" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Object&lt;/code&gt; parsed from the string.</source>
          <target state="translated">문자열에서 구문 분석 된 &lt;code&gt;Object&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="b2b2f9a781ddabf1ce08f839641cdac441c5c350" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Object&lt;/code&gt; parsed from the string. In case of error, returns null.</source>
          <target state="translated">문자열에서 구문 분석 된 &lt;code&gt;Object&lt;/code&gt; 입니다. 오류가 발생하면 null을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f030ca9d09ead7fca4750fa767a999c981460022" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ObjectFactory&lt;/code&gt; is responsible for creating objects of a specific type. In the above example, you may have a &lt;code&gt;PrinterObjectFactory&lt;/code&gt; for creating &lt;code&gt;Printer&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;ObjectFactory&lt;/code&gt; 를이 특정 유형의 개체를 만들 책임이있다. 위의 예제에서 &lt;code&gt;Printer&lt;/code&gt; 객체 를 만들기 위한 &lt;code&gt;PrinterObjectFactory&lt;/code&gt; 가있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="3cffd3d33469f003918640de04922cf8a52ea2f4" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ObjectFactory&lt;/code&gt; is responsible for creating objects of a specific type. In the above example, you may have a PrinterObjectFactory for creating Printer objects.</source>
          <target state="translated">&lt;code&gt;ObjectFactory&lt;/code&gt; 를이 특정 유형의 개체를 만들 책임이있다. 위의 예제에서 Printer 객체를 만들기위한 PrinterObjectFactory가있을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1496da793a8904933db3ca8c67149b1c888e274f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ObjectInstance&lt;/code&gt;, containing the &lt;code&gt;ObjectName&lt;/code&gt; and the Java class name of the newly instantiated MBean. If the contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;n&lt;/code&gt;, the contained Java class name is &lt;code&gt;&lt;a href=&quot;#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getMBeanInfo(n)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">An &lt;code&gt;ObjectInstance&lt;/code&gt; , containing the &lt;code&gt;ObjectName&lt;/code&gt; and the Java class name of the newly instantiated MBean. If the contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;n&lt;/code&gt; , the contained Java class name is &lt;code&gt;&lt;a href=&quot;#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getMBeanInfo(n)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="18ce11c46aec8d8e7573a6e1056894a175c1b584" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ObjectInstance&lt;/code&gt;, containing the &lt;code&gt;ObjectName&lt;/code&gt; and the Java class name of the newly instantiated MBean. If the contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;n&lt;/code&gt;, the contained Java class name is &lt;code&gt;&lt;a href=&quot;#getMBeanInfo(javax.management.ObjectName,javax.security.auth.Subject)&quot;&gt;&lt;code&gt;getMBeanInfo(n)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">An &lt;code&gt;ObjectInstance&lt;/code&gt; , containing the &lt;code&gt;ObjectName&lt;/code&gt; and the Java class name of the newly instantiated MBean. If the contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;n&lt;/code&gt; , the contained Java class name is &lt;code&gt;&lt;a href=&quot;#getMBeanInfo(javax.management.ObjectName,javax.security.auth.Subject)&quot;&gt;&lt;code&gt;getMBeanInfo(n)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="79badb7efe76de8661c61350f881a70fd7e76866" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ObjectInstance&lt;/code&gt;, containing the &lt;code&gt;ObjectName&lt;/code&gt; and the Java class name of the newly instantiated MBean. If the contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;n&lt;/code&gt;, the contained Java class name is &lt;code&gt;&lt;a href=&quot;mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getMBeanInfo(n)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">An &lt;code&gt;ObjectInstance&lt;/code&gt; , containing the &lt;code&gt;ObjectName&lt;/code&gt; and the Java class name of the newly instantiated MBean. If the contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;n&lt;/code&gt; , the contained Java class name is &lt;code&gt;&lt;a href=&quot;mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getMBeanInfo(n)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2060006d14110cec6851003aef5c5a95b2b3ee84" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ObjectInstance&lt;/code&gt;, containing the &lt;code&gt;ObjectName&lt;/code&gt; and the Java class name of the newly instantiated MBean. If the contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;n&lt;/code&gt;, the contained Java class name is &lt;code&gt;&lt;a href=&quot;mbeanserverconnection#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getMBeanInfo(n)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">새로 인스턴스화 된 MBean 의 &lt;code&gt;ObjectName&lt;/code&gt; 및 Java 클래스 이름을 포함 하는 &lt;code&gt;ObjectInstance&lt;/code&gt; . 포함 된 &lt;code&gt;ObjectName&lt;/code&gt; 이 &lt;code&gt;n&lt;/code&gt; 인 경우 포함 된 Java 클래스 이름은 &lt;code&gt;&lt;a href=&quot;mbeanserverconnection#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getMBeanInfo(n)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="96af027203337c8583053e59a2730e00e19b4d0b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ObjectInstance&lt;/code&gt;, containing the &lt;code&gt;ObjectName&lt;/code&gt; and the Java class name of the newly instantiated MBean. If the contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;n&lt;/code&gt;, the contained Java class name is &lt;code&gt;&lt;a href=&quot;rmiconnection#getMBeanInfo-javax.management.ObjectName-javax.security.auth.Subject-&quot;&gt;&lt;code&gt;getMBeanInfo(n)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">새로 인스턴스화 된 MBean 의 &lt;code&gt;ObjectName&lt;/code&gt; 및 Java 클래스 이름을 포함 하는 &lt;code&gt;ObjectInstance&lt;/code&gt; . 포함 된 &lt;code&gt;ObjectName&lt;/code&gt; 이 &lt;code&gt;n&lt;/code&gt; 인 경우 인 경우 포함 된 Java 클래스 이름은 &lt;code&gt;&lt;a href=&quot;rmiconnection#getMBeanInfo-javax.management.ObjectName-javax.security.auth.Subject-&quot;&gt;&lt;code&gt;getMBeanInfo(n)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="970d026d5d18357f881129d77dd94b9ddade6ac8" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ObjectInstance&lt;/code&gt;, containing the &lt;code&gt;ObjectName&lt;/code&gt; and the Java class name of the newly registered MBean. If the contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;n&lt;/code&gt;, the contained Java class name is &lt;code&gt;&lt;a href=&quot;mbeanserver#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getMBeanInfo(n)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">새로 등록 된 MBean 의 &lt;code&gt;ObjectName&lt;/code&gt; 및 Java 클래스 이름을 포함 하는 &lt;code&gt;ObjectInstance&lt;/code&gt; . 포함 된 &lt;code&gt;ObjectName&lt;/code&gt; 이 &lt;code&gt;n&lt;/code&gt; 인 경우 인 경우 포함 된 Java 클래스 이름은 &lt;code&gt;&lt;a href=&quot;mbeanserver#getMBeanInfo-javax.management.ObjectName-&quot;&gt;&lt;code&gt;getMBeanInfo(n)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="367131a0fc288760ae62ba13f1cd340a8c13f2ec" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ObjectInstance&lt;/code&gt;, containing the &lt;code&gt;ObjectName&lt;/code&gt; and the Java class name of the newly registered MBean. If the contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;n&lt;/code&gt;, the contained Java class name is &lt;code&gt;&lt;a href=&quot;mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getMBeanInfo(n)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt;.</source>
          <target state="translated">An &lt;code&gt;ObjectInstance&lt;/code&gt; , containing the &lt;code&gt;ObjectName&lt;/code&gt; and the Java class name of the newly registered MBean. If the contained &lt;code&gt;ObjectName&lt;/code&gt; is &lt;code&gt;n&lt;/code&gt; , the contained Java class name is &lt;code&gt;&lt;a href=&quot;mbeanserverconnection#getMBeanInfo(javax.management.ObjectName)&quot;&gt;&lt;code&gt;getMBeanInfo(n)&lt;/code&gt;&lt;/a&gt;.getClassName()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="22b1238add391577e61ae1c72e366996673e30d4" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Operation&lt;/code&gt; contains a description of a Java method. &lt;code&gt;Operation&lt;/code&gt; objects were used in JDK1.1 version stubs and skeletons. The &lt;code&gt;Operation&lt;/code&gt; class is not needed for 1.2 style stubs (stubs generated with &lt;code&gt;rmic -v1.2&lt;/code&gt;); hence, this class is deprecated.</source>
          <target state="translated">An &lt;code&gt;Operation&lt;/code&gt; contains a description of a Java method. &lt;code&gt;Operation&lt;/code&gt; objects were used in JDK1.1 version stubs and skeletons. The &lt;code&gt;Operation&lt;/code&gt; class is not needed for 1.2 style stubs (stubs generated with &lt;code&gt;rmic -v1.2&lt;/code&gt; ); hence, this class is deprecated.</target>
        </trans-unit>
        <trans-unit id="b85be85ad065bb66de882b8211939479d6c3dcac" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;Operation&lt;/code&gt; contains a description of a Java method. &lt;code&gt;Operation&lt;/code&gt; objects were used in JDK1.1 version stubs and skeletons. The &lt;code&gt;Operation&lt;/code&gt; class is not needed for 1.2 style stubs; hence, this class is deprecated.</source>
          <target state="translated">&lt;code&gt;Operation&lt;/code&gt; 자바 방법에 대한 설명이 포함되어 있습니다. &lt;code&gt;Operation&lt;/code&gt; 오브젝트는 JDK1.1 버전 스텁 및 스켈레톤에서 사용되었습니다. 1.2 스타일 스텁 에는 &lt;code&gt;Operation&lt;/code&gt; 클래스가 필요하지 않습니다. 따라서이 클래스는 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fcb9cd3f7c3d155a9fc1c14173f2c0f205f67800" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; instance associated with a remote object will be downloaded to clients when the remote object's reference is transmitted in an RMI call. This &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; will be used to create connections to the remote object for remote method calls.</source>
          <target state="translated">An &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; instance associated with a remote object will be downloaded to clients when the remote object's reference is transmitted in an RMI call. This &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; will be used to create connections to the remote object for remote method calls.</target>
        </trans-unit>
        <trans-unit id="737549b89ab36e8a6b124f8e5c27276f4eb6f581" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; instance can also be associated with a remote object registry so that clients can use custom socket communication with a remote object registry.</source>
          <target state="translated">An &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; instance can also be associated with a remote object registry so that clients can use custom socket communication with a remote object registry.</target>
        </trans-unit>
        <trans-unit id="d8463cdb48533d2597c474078fd1251f6ea3dabd" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; instance is used by the RMI runtime in order to obtain client sockets for RMI calls.</source>
          <target state="translated">An &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; instance is used by the RMI runtime in order to obtain client sockets for RMI calls.</target>
        </trans-unit>
        <trans-unit id="e9bcb788adf40277c550c55cdcf884f207127aaf" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; instance is used by the RMI runtime in order to obtain client sockets for RMI calls. A remote object can be associated with an &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; when it is created/exported via the constructors or &lt;code&gt;exportObject&lt;/code&gt; methods of &lt;code&gt;java.rmi.server.UnicastRemoteObject&lt;/code&gt; and &lt;code&gt;java.rmi.activation.Activatable&lt;/code&gt; .</source>
          <target state="translated">An &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; instance is used by the RMI runtime in order to obtain client sockets for RMI calls. A remote object can be associated with an &lt;code&gt;RMIClientSocketFactory&lt;/code&gt; when it is created/exported via the constructors or &lt;code&gt;exportObject&lt;/code&gt; methods of &lt;code&gt;java.rmi.server.UnicastRemoteObject&lt;/code&gt; and &lt;code&gt;java.rmi.activation.Activatable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="92484177ebf1cca66e40e9dd93b82ce77dc4872c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RMIFailureHandler&lt;/code&gt; can be registered via the &lt;code&gt;RMISocketFactory.setFailureHandler&lt;/code&gt; call.</source>
          <target state="translated">An &lt;code&gt;RMIFailureHandler&lt;/code&gt; can be registered via the &lt;code&gt;RMISocketFactory.setFailureHandler&lt;/code&gt; call.</target>
        </trans-unit>
        <trans-unit id="e35a6f3c2785b092dc2e5a4bed6acb5573bc8ff8" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RMIFailureHandler&lt;/code&gt; can be registered via the &lt;code&gt;RMISocketFactory.setFailureHandler&lt;/code&gt; call. The &lt;code&gt;failure&lt;/code&gt; method of the handler is invoked when the RMI runtime is unable to create a &lt;code&gt;ServerSocket&lt;/code&gt; to listen for incoming calls. The &lt;code&gt;failure&lt;/code&gt; method returns a boolean indicating whether the runtime should attempt to re-create the &lt;code&gt;ServerSocket&lt;/code&gt;.</source>
          <target state="translated">An &lt;code&gt;RMIFailureHandler&lt;/code&gt; can be registered via the &lt;code&gt;RMISocketFactory.setFailureHandler&lt;/code&gt; call. The &lt;code&gt;failure&lt;/code&gt; method of the handler is invoked when the RMI runtime is unable to create a &lt;code&gt;ServerSocket&lt;/code&gt; to listen for incoming calls. The &lt;code&gt;failure&lt;/code&gt; method returns a boolean indicating whether the runtime should attempt to re-create the &lt;code&gt;ServerSocket&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c078116adbf5600a7ded51d85f04eb769076fa4c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RMISecurityException&lt;/code&gt; signals that a security exception has occurred during the execution of one of &lt;code&gt;java.rmi.RMISecurityManager&lt;/code&gt;'s methods.</source>
          <target state="translated">An &lt;code&gt;RMISecurityException&lt;/code&gt; signals that a security exception has occurred during the execution of one of &lt;code&gt;java.rmi.RMISecurityManager&lt;/code&gt; 's methods.</target>
        </trans-unit>
        <trans-unit id="9260b78df046cacf42a1f047fc16cfee645bc0ef" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; instance associated with a remote object is used to obtain the &lt;code&gt;ServerSocket&lt;/code&gt; used to accept incoming calls from clients.</source>
          <target state="translated">An &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; instance associated with a remote object is used to obtain the &lt;code&gt;ServerSocket&lt;/code&gt; used to accept incoming calls from clients.</target>
        </trans-unit>
        <trans-unit id="1915163dedeaf8aed812f1de11426d318c13ea0b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; instance can also be associated with a remote object registry so that clients can use custom socket communication with a remote object registry.</source>
          <target state="translated">An &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; instance can also be associated with a remote object registry so that clients can use custom socket communication with a remote object registry.</target>
        </trans-unit>
        <trans-unit id="095048bd49f178e3ee754e3cd4158095e703148d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; instance is used by the RMI runtime in order to obtain server sockets for RMI calls.</source>
          <target state="translated">An &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; instance is used by the RMI runtime in order to obtain server sockets for RMI calls.</target>
        </trans-unit>
        <trans-unit id="c1a8f343e388e6844282613843c08934c8a672f7" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; instance is used by the RMI runtime in order to obtain server sockets for RMI calls. A remote object can be associated with an &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; when it is created/exported via the constructors or &lt;code&gt;exportObject&lt;/code&gt; methods of &lt;code&gt;java.rmi.server.UnicastRemoteObject&lt;/code&gt; and &lt;code&gt;java.rmi.activation.Activatable&lt;/code&gt; .</source>
          <target state="translated">An &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; instance is used by the RMI runtime in order to obtain server sockets for RMI calls. A remote object can be associated with an &lt;code&gt;RMIServerSocketFactory&lt;/code&gt; when it is created/exported via the constructors or &lt;code&gt;exportObject&lt;/code&gt; methods of &lt;code&gt;java.rmi.server.UnicastRemoteObject&lt;/code&gt; and &lt;code&gt;java.rmi.activation.Activatable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eadcb28c0983a54e9cf63a2da53bc2bfc55c4499" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RMISocketFactory&lt;/code&gt; instance is used by the RMI runtime in order to obtain client and server sockets for RMI calls.</source>
          <target state="translated">An &lt;code&gt;RMISocketFactory&lt;/code&gt; instance is used by the RMI runtime in order to obtain client and server sockets for RMI calls.</target>
        </trans-unit>
        <trans-unit id="3728c4ed6dca1db72cf2c01b2e8e794022ecb24e" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;RMISocketFactory&lt;/code&gt; instance is used by the RMI runtime in order to obtain client and server sockets for RMI calls. An application may use the &lt;code&gt;setSocketFactory&lt;/code&gt; method to request that the RMI runtime use its socket factory instance instead of the default implementation.</source>
          <target state="translated">An &lt;code&gt;RMISocketFactory&lt;/code&gt; instance is used by the RMI runtime in order to obtain client and server sockets for RMI calls. An application may use the &lt;code&gt;setSocketFactory&lt;/code&gt; method to request that the RMI runtime use its socket factory instance instead of the default implementation.</target>
        </trans-unit>
        <trans-unit id="27d5f50db6e9e9bdc83b2eb043a4c105d5d99f01" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;SCTPServerChannel&lt;/code&gt; is created by invoking the &lt;a href=&quot;#open()&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class. A newly-created SCTP server channel is open but not yet bound. An attempt to invoke the &lt;a href=&quot;#accept()&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method of an unbound channel will cause the &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; to be thrown. An SCTP server channel can be bound by invoking one of the &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; methods defined by this class.</source>
          <target state="translated">&lt;code&gt;SCTPServerChannel&lt;/code&gt; 는 호출에 의해 생성되는 &lt;a href=&quot;#open()&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 이 클래스의 방법을. 새로 생성 된 SCTP 서버 채널이 열려 있지만 아직 바인딩되지 않았습니다. 바인딩되지 않은 채널 의 &lt;a href=&quot;#accept()&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하려고 하면 &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다. SCTP 서버 채널은 이 클래스에 정의 된 &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 메소드 중 하나를 호출하여 바인드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ddc82237d7b837d3a8e58cbfb50d72c135f5cd3a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;SSLEngine&lt;/code&gt; is created by calling &lt;a href=&quot;sslcontext#createSSLEngine()&quot;&gt;&lt;code&gt;SSLContext.createSSLEngine()&lt;/code&gt;&lt;/a&gt; from an initialized &lt;code&gt;SSLContext&lt;/code&gt;. Any configuration parameters should be set before making the first call to &lt;code&gt;wrap()&lt;/code&gt;, &lt;code&gt;unwrap()&lt;/code&gt;, or &lt;code&gt;beginHandshake()&lt;/code&gt;. These methods all trigger the initial handshake.</source>
          <target state="translated">An &lt;code&gt;SSLEngine&lt;/code&gt; is created by calling &lt;a href=&quot;sslcontext#createSSLEngine()&quot;&gt; &lt;code&gt;SSLContext.createSSLEngine()&lt;/code&gt; &lt;/a&gt; from an initialized &lt;code&gt;SSLContext&lt;/code&gt; . Any configuration parameters should be set before making the first call to &lt;code&gt;wrap()&lt;/code&gt; , &lt;code&gt;unwrap()&lt;/code&gt; , or &lt;code&gt;beginHandshake()&lt;/code&gt; . These methods all trigger the initial handshake.</target>
        </trans-unit>
        <trans-unit id="81ed261f51d69e08c9a9a32c6befbbe988d4db6b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;SSLEngine&lt;/code&gt; is created by calling &lt;a href=&quot;sslcontext#createSSLEngine--&quot;&gt;&lt;code&gt;SSLContext.createSSLEngine()&lt;/code&gt;&lt;/a&gt; from an initialized &lt;code&gt;SSLContext&lt;/code&gt;. Any configuration parameters should be set before making the first call to &lt;code&gt;wrap()&lt;/code&gt;, &lt;code&gt;unwrap()&lt;/code&gt;, or &lt;code&gt;beginHandshake()&lt;/code&gt;. These methods all trigger the initial handshake.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 호출함으로써 생성 &lt;a href=&quot;sslcontext#createSSLEngine--&quot;&gt; &lt;code&gt;SSLContext.createSSLEngine()&lt;/code&gt; &lt;/a&gt; 초기화 된으로부터 &lt;code&gt;SSLContext&lt;/code&gt; . &lt;code&gt;wrap()&lt;/code&gt; , &lt;code&gt;unwrap()&lt;/code&gt; 또는 &lt;code&gt;beginHandshake()&lt;/code&gt; 처음 호출하기 전에 모든 구성 매개 변수를 설정해야합니다 . 이 방법들은 모두 초기 핸드 셰이크를 트리거합니다.</target>
        </trans-unit>
        <trans-unit id="e43e593b9594b8ce76f844db0e5f97ad8dd1cb2f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;SSLEngine&lt;/code&gt; using this session may generate SSL/TLS/DTLS packets of any size up to and including the value returned by this method. All &lt;code&gt;SSLEngine&lt;/code&gt; network buffers should be sized at least this large to avoid insufficient space problems when performing &lt;code&gt;wrap&lt;/code&gt; and &lt;code&gt;unwrap&lt;/code&gt; calls.</source>
          <target state="translated">An &lt;code&gt;SSLEngine&lt;/code&gt; using this session may generate SSL/TLS/DTLS packets of any size up to and including the value returned by this method. All &lt;code&gt;SSLEngine&lt;/code&gt; network buffers should be sized at least this large to avoid insufficient space problems when performing &lt;code&gt;wrap&lt;/code&gt; and &lt;code&gt;unwrap&lt;/code&gt; calls.</target>
        </trans-unit>
        <trans-unit id="82c50a07c3818bd2118910613159095eba3080b8" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;SSLEngineResult&lt;/code&gt; enum describing the current handshaking state of this &lt;code&gt;SSLEngine&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SSLEngineResult&lt;/code&gt; 의의 이러한 현재의 상태의 핸드 쉐이크 기술 ENUM &lt;code&gt;SSLEngine&lt;/code&gt; 의이 .</target>
        </trans-unit>
        <trans-unit id="2306dcc0e2cc49d8f2ac4ca584af3de2c2e5f9d5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;SSLEngineResult&lt;/code&gt; enum describing the overall result of the &lt;code&gt;SSLEngine&lt;/code&gt; operation.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 오퍼레이션 의 전체 결과를 설명 하는 &lt;code&gt;SSLEngineResult&lt;/code&gt; 열거 입니다.</target>
        </trans-unit>
        <trans-unit id="e4dff761f32721963abd9bcae6634e956ea992e9" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;SSLEngineResult&lt;/code&gt; enum describing the overall result of the &lt;code&gt;SSLEngine&lt;/code&gt; operation. The &lt;code&gt;Status&lt;/code&gt; value does not reflect the state of a &lt;code&gt;SSLEngine&lt;/code&gt; handshake currently in progress. The &lt;code&gt;SSLEngineResult's HandshakeStatus&lt;/code&gt; should be consulted for that information.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 오퍼레이션 의 전체 결과를 설명 하는 &lt;code&gt;SSLEngineResult&lt;/code&gt; 열거 입니다. &lt;code&gt;Status&lt;/code&gt; 값은의 상태를 반영하지 않습니다 &lt;code&gt;SSLEngine&lt;/code&gt; 현재 진행 악수. &lt;code&gt;SSLEngineResult's HandshakeStatus&lt;/code&gt; 그 정보를 참고해야한다.</target>
        </trans-unit>
        <trans-unit id="12829b08e5831b57223050acffd0216d616fc40d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;SSLServerSocket&lt;/code&gt; contains several pieces of state data which are inherited by the &lt;code&gt;SSLSocket&lt;/code&gt; at socket creation. These include the enabled cipher suites and protocols, whether client authentication is necessary, and whether created sockets should begin handshaking in client or server mode. The state inherited by the created &lt;code&gt;SSLSocket&lt;/code&gt; can be overridden by calling the appropriate methods.</source>
          <target state="translated">&lt;code&gt;SSLServerSocket&lt;/code&gt; 에가 의해 상속 상태 데이터의 여러 개 포함 &lt;code&gt;SSLSocket&lt;/code&gt; 과 소켓의 생성에있다. 여기에는 활성화 된 암호 그룹 및 프로토콜, 클라이언트 인증이 필요한지 여부, 생성 된 소켓이 클라이언트 또는 서버 모드에서 핸드 셰이 킹을 시작해야하는지 여부가 포함됩니다. 생성 된 &lt;code&gt;SSLSocket&lt;/code&gt; 이 상속 한 상태 는 적절한 메서드를 호출하여 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3df0b722a68c7182de32c3a381a10b01aabef3c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;SSLServerSocket&lt;/code&gt; contains several pieces of state data which are inherited by the &lt;code&gt;SSLSocket&lt;/code&gt; at socket creation. These include the enabled cipher suites and protocols, whether client authentication is necessary, and whether created sockets should begin handshaking in client or server mode. The state inherited by the created &lt;code&gt;SSLSocket&lt;/code&gt; can be overriden by calling the appropriate methods.</source>
          <target state="translated">An &lt;code&gt;SSLServerSocket&lt;/code&gt; contains several pieces of state data which are inherited by the &lt;code&gt;SSLSocket&lt;/code&gt; at socket creation. These include the enabled cipher suites and protocols, whether client authentication is necessary, and whether created sockets should begin handshaking in client or server mode. The state inherited by the created &lt;code&gt;SSLSocket&lt;/code&gt; can be overriden by calling the appropriate methods.</target>
        </trans-unit>
        <trans-unit id="f203a677b5d04ea569291552b8adc47ac33fd12f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;SctpMultiChannel&lt;/code&gt; can control more than one association, the association parameter must be given when setting or retrieving this option.</source>
          <target state="translated">&lt;code&gt;SctpMultiChannel&lt;/code&gt; 는 설정하거나이 옵션을 검색 할 때 연결 매개 변수가 제공되어야하며, 하나 이상의 연결을 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cf3f9b2de0e665973874c614b401e798202230b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;ServerNotActiveException&lt;/code&gt; is an &lt;code&gt;Exception&lt;/code&gt; thrown during a call to &lt;code&gt;RemoteServer.getClientHost&lt;/code&gt; if the getClientHost method is called outside of servicing a remote method call.</source>
          <target state="translated">An &lt;code&gt;ServerNotActiveException&lt;/code&gt; is an &lt;code&gt;Exception&lt;/code&gt; thrown during a call to &lt;code&gt;RemoteServer.getClientHost&lt;/code&gt; if the getClientHost method is called outside of servicing a remote method call.</target>
        </trans-unit>
        <trans-unit id="e1fcdf582d32d6ba7bc144654b7abaa845c4d13f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;SslRMIClientSocketFactory&lt;/code&gt; instance is used by the RMI runtime in order to obtain client sockets for RMI calls via SSL.</source>
          <target state="translated">An &lt;code&gt;SslRMIClientSocketFactory&lt;/code&gt; instance is used by the RMI runtime in order to obtain client sockets for RMI calls via SSL.</target>
        </trans-unit>
        <trans-unit id="c2bd11e9b48563b8653db16002d69f1cff7dbff5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;SslRMIServerSocketFactory&lt;/code&gt; instance is used by the RMI runtime in order to obtain server sockets for RMI calls via SSL.</source>
          <target state="translated">An &lt;code&gt;SslRMIServerSocketFactory&lt;/code&gt; instance is used by the RMI runtime in order to obtain server sockets for RMI calls via SSL.</target>
        </trans-unit>
        <trans-unit id="c840d2ce838d86301f730e068fe5a907fa565e45" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UndeclaredThrowableException&lt;/code&gt; instance contains the undeclared checked exception that was thrown by the invocation handler, and it can be retrieved with the &lt;code&gt;getUndeclaredThrowable()&lt;/code&gt; method. &lt;code&gt;UndeclaredThrowableException&lt;/code&gt; extends &lt;code&gt;RuntimeException&lt;/code&gt;, so it is an unchecked exception that wraps a checked exception.</source>
          <target state="translated">&lt;code&gt;UndeclaredThrowableException&lt;/code&gt; 인스턴스를 호출 핸들러에 의해 발생 된 미표시 체크 예외를 포함하며, 그것은 함께 취득 할 수 &lt;code&gt;getUndeclaredThrowable()&lt;/code&gt; 메소드. &lt;code&gt;UndeclaredThrowableException&lt;/code&gt; 은 &lt;code&gt;RuntimeException&lt;/code&gt; 을 확장 하므로, 확인 된 예외를 랩핑하는 확인되지 않은 예외입니다.</target>
        </trans-unit>
        <trans-unit id="e074ab34a3ed61cb104fe9959f84de08d6f2aa83" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UndoableEdit&lt;/code&gt; represents an edit.</source>
          <target state="translated">An &lt;code&gt;UndoableEdit&lt;/code&gt; represents an edit.</target>
        </trans-unit>
        <trans-unit id="580b3b14699ca88b644c037f66d61ca2854a1383" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UndoableEdit&lt;/code&gt; represents an edit. The edit may be undone, or if already undone the edit may be redone.</source>
          <target state="translated">An &lt;code&gt;UndoableEdit&lt;/code&gt; represents an edit. The edit may be undone, or if already undone the edit may be redone.</target>
        </trans-unit>
        <trans-unit id="c540c829e8f7f549925d2f1e2d85e313c7845bad" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UndoableEditListener&lt;/code&gt; method.</source>
          <target state="translated">An &lt;code&gt;UndoableEditListener&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="d976065d2d754995c367990bc8497ffecdd5f31f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UndoableEditListener&lt;/code&gt; method. This invokes &lt;code&gt;addEdit&lt;/code&gt; with &lt;code&gt;e.getEdit()&lt;/code&gt;.</source>
          <target state="translated">An &lt;code&gt;UndoableEditListener&lt;/code&gt; method. This invokes &lt;code&gt;addEdit&lt;/code&gt; with &lt;code&gt;e.getEdit()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19e618e69a3fa425bd2dae2b881bc73dc1a88498" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UnexpectedException&lt;/code&gt; is thrown if the client of a remote method call receives, as a result of the call, a checked exception that is not among the checked exception types declared in the &lt;code&gt;throws&lt;/code&gt; clause of the method in the remote interface.</source>
          <target state="translated">An &lt;code&gt;UnexpectedException&lt;/code&gt; is thrown if the client of a remote method call receives, as a result of the call, a checked exception that is not among the checked exception types declared in the &lt;code&gt;throws&lt;/code&gt; clause of the method in the remote interface.</target>
        </trans-unit>
        <trans-unit id="116a0f478e6098579f16949ba53c3b1caab842c2" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UnknownGroupException&lt;/code&gt; is thrown by methods of classes and interfaces in the &lt;code&gt;java.rmi.activation&lt;/code&gt; package when the &lt;code&gt;ActivationGroupID&lt;/code&gt; parameter to the method is determined to be invalid, i.e., not known by the &lt;code&gt;ActivationSystem&lt;/code&gt;.</source>
          <target state="translated">An &lt;code&gt;UnknownGroupException&lt;/code&gt; is thrown by methods of classes and interfaces in the &lt;code&gt;java.rmi.activation&lt;/code&gt; package when the &lt;code&gt;ActivationGroupID&lt;/code&gt; parameter to the method is determined to be invalid, i.e., not known by the &lt;code&gt;ActivationSystem&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d2f2ca0801be691c47d980d83499b91562068bba" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UnknownGroupException&lt;/code&gt; is thrown by methods of classes and interfaces in the &lt;code&gt;java.rmi.activation&lt;/code&gt; package when the &lt;code&gt;ActivationGroupID&lt;/code&gt; parameter to the method is determined to be invalid, i.e., not known by the &lt;code&gt;ActivationSystem&lt;/code&gt;. An &lt;code&gt;UnknownGroupException&lt;/code&gt; is also thrown if the &lt;code&gt;ActivationGroupID&lt;/code&gt; in an &lt;code&gt;ActivationDesc&lt;/code&gt; refers to a group that is not registered with the &lt;code&gt;ActivationSystem&lt;/code&gt;</source>
          <target state="translated">An &lt;code&gt;UnknownGroupException&lt;/code&gt; is thrown by methods of classes and interfaces in the &lt;code&gt;java.rmi.activation&lt;/code&gt; package when the &lt;code&gt;ActivationGroupID&lt;/code&gt; parameter to the method is determined to be invalid, i.e., not known by the &lt;code&gt;ActivationSystem&lt;/code&gt; . An &lt;code&gt;UnknownGroupException&lt;/code&gt; is also thrown if the &lt;code&gt;ActivationGroupID&lt;/code&gt; in an &lt;code&gt;ActivationDesc&lt;/code&gt; refers to a group that is not registered with the &lt;code&gt;ActivationSystem&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54c9a91956cc2799839a2a2e3a03f3d18b89bff8" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UnknownHostException&lt;/code&gt; is thrown if a &lt;code&gt;java.net.UnknownHostException&lt;/code&gt; occurs while creating a connection to the remote host for a remote method call.</source>
          <target state="translated">An &lt;code&gt;UnknownHostException&lt;/code&gt; is thrown if a &lt;code&gt;java.net.UnknownHostException&lt;/code&gt; occurs while creating a connection to the remote host for a remote method call.</target>
        </trans-unit>
        <trans-unit id="2c3fa84e5e51901a790995cf6e0566221440afbc" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UnknownObjectException&lt;/code&gt; is thrown by methods of classes and interfaces in the &lt;code&gt;java.rmi.activation&lt;/code&gt; package when the &lt;code&gt;ActivationID&lt;/code&gt; parameter to the method is determined to be invalid.</source>
          <target state="translated">An &lt;code&gt;UnknownObjectException&lt;/code&gt; is thrown by methods of classes and interfaces in the &lt;code&gt;java.rmi.activation&lt;/code&gt; package when the &lt;code&gt;ActivationID&lt;/code&gt; parameter to the method is determined to be invalid.</target>
        </trans-unit>
        <trans-unit id="7a24a51f14ab814653b2e45f74574d553c843f1b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UnknownObjectException&lt;/code&gt; is thrown by methods of classes and interfaces in the &lt;code&gt;java.rmi.activation&lt;/code&gt; package when the &lt;code&gt;ActivationID&lt;/code&gt; parameter to the method is determined to be invalid. An &lt;code&gt;ActivationID&lt;/code&gt; is invalid if it is not currently known by the &lt;code&gt;ActivationSystem&lt;/code&gt;. An &lt;code&gt;ActivationID&lt;/code&gt; is obtained by the &lt;code&gt;ActivationSystem.registerObject&lt;/code&gt; method. An &lt;code&gt;ActivationID&lt;/code&gt; is also obtained during the &lt;code&gt;Activatable.register&lt;/code&gt; call.</source>
          <target state="translated">An &lt;code&gt;UnknownObjectException&lt;/code&gt; is thrown by methods of classes and interfaces in the &lt;code&gt;java.rmi.activation&lt;/code&gt; package when the &lt;code&gt;ActivationID&lt;/code&gt; parameter to the method is determined to be invalid. An &lt;code&gt;ActivationID&lt;/code&gt; is invalid if it is not currently known by the &lt;code&gt;ActivationSystem&lt;/code&gt; . An &lt;code&gt;ActivationID&lt;/code&gt; is obtained by the &lt;code&gt;ActivationSystem.registerObject&lt;/code&gt; method. An &lt;code&gt;ActivationID&lt;/code&gt; is also obtained during the &lt;code&gt;Activatable.register&lt;/code&gt; call.</target>
        </trans-unit>
        <trans-unit id="d45d47fa5d80a08b9af2029f48d0cafb02261fd5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UnmarshalException&lt;/code&gt; can be thrown while unmarshalling the parameters or results of a remote method call if any of the following conditions occur:</source>
          <target state="translated">An &lt;code&gt;UnmarshalException&lt;/code&gt; can be thrown while unmarshalling the parameters or results of a remote method call if any of the following conditions occur:</target>
        </trans-unit>
        <trans-unit id="db010e48dc9cda801fb508907c7daa4e9b0b1578" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UnmarshalException&lt;/code&gt; can be thrown while unmarshalling the parameters or results of a remote method call if any of the following conditions occur: if an exception occurs while unmarshalling the call header if the protocol for the return value is invalid if a &lt;code&gt;java.io.IOException&lt;/code&gt; occurs unmarshalling parameters (on the server side) or the return value (on the client side).</source>
          <target state="translated">An &lt;code&gt;UnmarshalException&lt;/code&gt; can be thrown while unmarshalling the parameters or results of a remote method call if any of the following conditions occur: if an exception occurs while unmarshalling the call header if the protocol for the return value is invalid if a &lt;code&gt;java.io.IOException&lt;/code&gt; occurs unmarshalling parameters (on the server side) or the return value (on the client side).</target>
        </trans-unit>
        <trans-unit id="6404023c449522aae0f08ba59857829ecabae11d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;UnsupportedAudioFileException&lt;/code&gt; is an exception indicating that an operation failed because a file did not contain valid data of a recognized file type and format.</source>
          <target state="translated">&lt;code&gt;UnsupportedAudioFileException&lt;/code&gt; 이 파일은 인식 된 파일 타입과 파일 형식의 유효 데이터를 포함하지 않기 위해 (때문에) 조작이 실패한 것을 나타내는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="de261b02eb2a7d2e07d2d24da1230a94cbd7fb1e" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;X509Data&lt;/code&gt; instance may be created by invoking the &lt;a href=&quot;keyinfofactory#newX509Data(java.util.List)&quot;&gt;&lt;code&gt;newX509Data&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;keyinfofactory&quot;&gt;&lt;code&gt;KeyInfoFactory&lt;/code&gt;&lt;/a&gt; class and passing it a list of one or more &lt;a href=&quot;../../xmlstructure&quot;&gt;&lt;code&gt;XMLStructure&lt;/code&gt;&lt;/a&gt;s representing X.509 content; for example:</source>
          <target state="translated">An &lt;code&gt;X509Data&lt;/code&gt; instance may be created by invoking the &lt;a href=&quot;keyinfofactory#newX509Data(java.util.List)&quot;&gt; &lt;code&gt;newX509Data&lt;/code&gt; &lt;/a&gt; methods of the &lt;a href=&quot;keyinfofactory&quot;&gt; &lt;code&gt;KeyInfoFactory&lt;/code&gt; &lt;/a&gt; class and passing it a list of one or more &lt;a href=&quot;../../xmlstructure&quot;&gt; &lt;code&gt;XMLStructure&lt;/code&gt; &lt;/a&gt;s representing X.509 content; for example:</target>
        </trans-unit>
        <trans-unit id="cc6d41be480a2d16670e60753f79f6c5c6c448a6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;X509IssuerSerial&lt;/code&gt; instance may be created by invoking the &lt;a href=&quot;keyinfofactory#newX509IssuerSerial(java.lang.String,java.math.BigInteger)&quot;&gt;&lt;code&gt;newX509IssuerSerial&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;keyinfofactory&quot;&gt;&lt;code&gt;KeyInfoFactory&lt;/code&gt;&lt;/a&gt; class, and passing it a &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;BigInteger&lt;/code&gt; representing the X.500 DN and serial number. Here is an example of creating an &lt;code&gt;X509IssuerSerial&lt;/code&gt; from the issuer DN and serial number of an existing &lt;a href=&quot;../../../../../../java.base/java/security/cert/x509certificate&quot;&gt;&lt;code&gt;X509Certificate&lt;/code&gt;&lt;/a&gt;:</source>
          <target state="translated">An &lt;code&gt;X509IssuerSerial&lt;/code&gt; instance may be created by invoking the &lt;a href=&quot;keyinfofactory#newX509IssuerSerial(java.lang.String,java.math.BigInteger)&quot;&gt; &lt;code&gt;newX509IssuerSerial&lt;/code&gt; &lt;/a&gt; method of the &lt;a href=&quot;keyinfofactory&quot;&gt; &lt;code&gt;KeyInfoFactory&lt;/code&gt; &lt;/a&gt; class, and passing it a &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;BigInteger&lt;/code&gt; representing the X.500 DN and serial number. Here is an example of creating an &lt;code&gt;X509IssuerSerial&lt;/code&gt; from the issuer DN and serial number of an existing &lt;a href=&quot;../../../../../../java.base/java/security/cert/x509certificate&quot;&gt; &lt;code&gt;X509Certificate&lt;/code&gt; &lt;/a&gt;:</target>
        </trans-unit>
        <trans-unit id="2accaf95ffb4d24ff837d64c7b7945cd96063e82" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;XMLSignature&lt;/code&gt; instance may be created by invoking one of the &lt;a href=&quot;xmlsignaturefactory#newXMLSignature(javax.xml.crypto.dsig.SignedInfo,javax.xml.crypto.dsig.keyinfo.KeyInfo)&quot;&gt;&lt;code&gt;newXMLSignature&lt;/code&gt;&lt;/a&gt; methods of the &lt;a href=&quot;xmlsignaturefactory&quot;&gt;&lt;code&gt;XMLSignatureFactory&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">An &lt;code&gt;XMLSignature&lt;/code&gt; instance may be created by invoking one of the &lt;a href=&quot;xmlsignaturefactory#newXMLSignature(javax.xml.crypto.dsig.SignedInfo,javax.xml.crypto.dsig.keyinfo.KeyInfo)&quot;&gt; &lt;code&gt;newXMLSignature&lt;/code&gt; &lt;/a&gt; methods of the &lt;a href=&quot;xmlsignaturefactory&quot;&gt; &lt;code&gt;XMLSignatureFactory&lt;/code&gt; &lt;/a&gt; class.</target>
        </trans-unit>
        <trans-unit id="dec4a56955815c4d307014349968a6341d5d7d4c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;XMLSignatureException&lt;/code&gt; can contain a cause: another throwable that caused this &lt;code&gt;XMLSignatureException&lt;/code&gt; to get thrown.</source>
          <target state="translated">An &lt;code&gt;XMLSignatureException&lt;/code&gt; can contain a cause: another throwable that caused this &lt;code&gt;XMLSignatureException&lt;/code&gt; to get thrown.</target>
        </trans-unit>
        <trans-unit id="df70cac6140d7ffeb32f8181c584409dfe7146f6" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;XPathFactory&lt;/code&gt; instance can be used to create &lt;a href=&quot;javax/xml/xpath/xpath&quot;&gt;&lt;code&gt;XPath&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">An &lt;code&gt;XPathFactory&lt;/code&gt; instance can be used to create &lt;a href=&quot;javax/xml/xpath/xpath&quot;&gt; &lt;code&gt;XPath&lt;/code&gt; &lt;/a&gt; objects.</target>
        </trans-unit>
        <trans-unit id="9232e02efff35f2965dc5d89159624d91980bf0f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;XPathFactory&lt;/code&gt; instance can be used to create &lt;a href=&quot;xpath&quot;&gt;&lt;code&gt;XPath&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">An &lt;code&gt;XPathFactory&lt;/code&gt; instance can be used to create &lt;a href=&quot;xpath&quot;&gt; &lt;code&gt;XPath&lt;/code&gt; &lt;/a&gt; objects.</target>
        </trans-unit>
        <trans-unit id="90c704aba670e7391d13746640fdcf13aba335e7" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;XSLTTransformParameterSpec&lt;/code&gt; is instantiated with a mechanism-dependent (ex: DOM) stylesheet element. For example:</source>
          <target state="translated">An &lt;code&gt;XSLTTransformParameterSpec&lt;/code&gt; is instantiated with a mechanism-dependent (ex: DOM) stylesheet element. For example:</target>
        </trans-unit>
        <trans-unit id="9807b6a286763e8dceb9e51f7434f2b5dbefe8a7" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;XmlReader&lt;/code&gt; object is registered as the XML reader for a &lt;code&gt;WebRowSet&lt;/code&gt; by being assigned to the rowset's &lt;code&gt;xmlReader&lt;/code&gt; field. When the &lt;code&gt;WebRowSet&lt;/code&gt; object's &lt;code&gt;readXml&lt;/code&gt; method is invoked, it in turn invokes its XML reader's &lt;code&gt;readXML&lt;/code&gt; method.</source>
          <target state="translated">An &lt;code&gt;XmlReader&lt;/code&gt; object is registered as the XML reader for a &lt;code&gt;WebRowSet&lt;/code&gt; by being assigned to the rowset's &lt;code&gt;xmlReader&lt;/code&gt; field. When the &lt;code&gt;WebRowSet&lt;/code&gt; object's &lt;code&gt;readXml&lt;/code&gt; method is invoked, it in turn invokes its XML reader's &lt;code&gt;readXML&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="74484601bf62ac80519aab912ab0434bb86f2f91" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; array containing information about a column of pixels.</source>
          <target state="translated">An &lt;code&gt;int&lt;/code&gt; array containing information about a column of pixels.</target>
        </trans-unit>
        <trans-unit id="16e2f766d3506e510c135bd0d449b9fcb26db35c" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; array containing information about a row of pixels.</source>
          <target state="translated">An &lt;code&gt;int&lt;/code&gt; array containing information about a row of pixels.</target>
        </trans-unit>
        <trans-unit id="390ae6ca2cb5769a01bc5b7bd96b2378a316e1c7" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; array in which elements may be updated atomically.</source>
          <target state="translated">안 &lt;code&gt;int&lt;/code&gt; 원소를 원자 적으로 갱신 할 수 int 배열입니다.</target>
        </trans-unit>
        <trans-unit id="7d94ef092538bb368b58cb84a38329afd3009f7b" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; array in which elements may be updated atomically. See the &lt;a href=&quot;../../../lang/invoke/varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; specification for descriptions of the properties of atomic accesses.</source>
          <target state="translated">An &lt;code&gt;int&lt;/code&gt; array in which elements may be updated atomically. See the &lt;a href=&quot;../../../lang/invoke/varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt; specification for descriptions of the properties of atomic accesses.</target>
        </trans-unit>
        <trans-unit id="636bcbd0bd917297b196446fb49964dcd0694f31" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; array in which elements may be updated atomically. See the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.atomic&lt;/code&gt;&lt;/a&gt; package specification for description of the properties of atomic variables.</source>
          <target state="translated">원소를 원자 적으로 갱신 할 수 있는 &lt;code&gt;int&lt;/code&gt; 배열입니다. 참조&lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;java.util.concurrent.atomic&lt;/code&gt; &lt;/a&gt;원자 변수의 특성에 대한 설명은 java.util.concurrent.atomic 패키지 스펙을.</target>
        </trans-unit>
        <trans-unit id="6adca71da0cea7836e3cf323585dddfe827aa0ba" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing a &quot;copy&quot; action.</source>
          <target state="translated">An &lt;code&gt;int&lt;/code&gt; representing a &quot;copy&quot; action.</target>
        </trans-unit>
        <trans-unit id="894bf255eed39bc2a2c5ee44fa1d194f5c947049" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing a &quot;copy&quot; or &quot;move&quot; action.</source>
          <target state="translated">An &lt;code&gt;int&lt;/code&gt; representing a &quot;copy&quot; or &quot;move&quot; action.</target>
        </trans-unit>
        <trans-unit id="d21595724a92abe94d1b3e6060ef58094809af82" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing a &quot;copy&quot; transfer action.</source>
          <target state="translated">An &lt;code&gt;int&lt;/code&gt; representing a &quot;copy&quot; transfer action.</target>
        </trans-unit>
        <trans-unit id="84796e007098d02c4ffd8acc4e82c7b1b83acbda" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing a &quot;copy&quot; transfer action. This value is used when data is copied to a clipboard or copied elsewhere in a drag and drop operation.</source>
          <target state="translated">An &lt;code&gt;int&lt;/code&gt; representing a &quot;copy&quot; transfer action. This value is used when data is copied to a clipboard or copied elsewhere in a drag and drop operation.</target>
        </trans-unit>
        <trans-unit id="0bf200f6b8c3ef6b42d7a9c8aafddedf56b87af1" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing a &quot;link&quot; action.</source>
          <target state="translated">An &lt;code&gt;int&lt;/code&gt; representing a &quot;link&quot; action.</target>
        </trans-unit>
        <trans-unit id="77d8f18fe088705d15c40d655a7edc4303b4eb7f" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing a &quot;link&quot; action. The link verb is found in many, if not all native DnD platforms, and the actual interpretation of LINK semantics is both platform and application dependent. Broadly speaking, the semantic is &quot;do not copy, or move the operand, but create a reference to it&quot;. Defining the meaning of &quot;reference&quot; is where ambiguity is introduced. The verb is provided for completeness, but its use is not recommended for DnD operations between logically distinct applications where misinterpretation of the operations semantics could lead to confusing results for the user.</source>
          <target state="translated">An &lt;code&gt;int&lt;/code&gt; representing a &quot;link&quot; action. The link verb is found in many, if not all native DnD platforms, and the actual interpretation of LINK semantics is both platform and application dependent. Broadly speaking, the semantic is &quot;do not copy, or move the operand, but create a reference to it&quot;. Defining the meaning of &quot;reference&quot; is where ambiguity is introduced. The verb is provided for completeness, but its use is not recommended for DnD operations between logically distinct applications where misinterpretation of the operations semantics could lead to confusing results for the user.</target>
        </trans-unit>
        <trans-unit id="99bc2c543c0d00a6cc69a55639bb704dbef27044" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing a &quot;link&quot; transfer action.</source>
          <target state="translated">An &lt;code&gt;int&lt;/code&gt; representing a &quot;link&quot; transfer action.</target>
        </trans-unit>
        <trans-unit id="6b4cacf72c8462ebf35ace11a28ea67aaacda1c7" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing a &quot;link&quot; transfer action. This value is used to specify that data should be linked in a drag and drop operation.</source>
          <target state="translated">An &lt;code&gt;int&lt;/code&gt; representing a &quot;link&quot; transfer action. This value is used to specify that data should be linked in a drag and drop operation.</target>
        </trans-unit>
        <trans-unit id="d500f0abab03da8c876b6a8aa5e3c5e0c6d9ccd1" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing a &quot;move&quot; action.</source>
          <target state="translated">An &lt;code&gt;int&lt;/code&gt; representing a &quot;move&quot; action.</target>
        </trans-unit>
        <trans-unit id="3936dc2075feb921ba90bf31b3c53f63f2b12c8d" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing a &quot;move&quot; transfer action.</source>
          <target state="translated">An &lt;code&gt;int&lt;/code&gt; representing a &quot;move&quot; transfer action.</target>
        </trans-unit>
        <trans-unit id="c4074ce2cfdee1f2f81ee4570932035f7e3ef57a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing a &quot;move&quot; transfer action. This value is used when data is moved to a clipboard (i.e. a cut) or moved elsewhere in a drag and drop operation.</source>
          <target state="translated">An &lt;code&gt;int&lt;/code&gt; representing a &quot;move&quot; transfer action. This value is used when data is moved to a clipboard (i.e. a cut) or moved elsewhere in a drag and drop operation.</target>
        </trans-unit>
        <trans-unit id="6aa159eebf443e490bc130a36cd4dbb610c1848a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing a &quot;reference&quot; action (synonym for ACTION_LINK).</source>
          <target state="translated">An &lt;code&gt;int&lt;/code&gt; representing a &quot;reference&quot; action (synonym for ACTION_LINK).</target>
        </trans-unit>
        <trans-unit id="f84c09d8cd20e9fa86828d2c322f4b77d12fc7ad" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing a source action capability of either &quot;copy&quot; or &quot;move&quot;.</source>
          <target state="translated">An &lt;code&gt;int&lt;/code&gt; representing a source action capability of either &quot;copy&quot; or &quot;move&quot;.</target>
        </trans-unit>
        <trans-unit id="5bc03b3dd571f980f03149b65ff599dd9c0380ef" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing no action.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 어떤 액션을 나타내는 없습니다.</target>
        </trans-unit>
        <trans-unit id="6dd4c38e495e653134d49880f3cababf48d98415" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing no transfer action.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 의 전송 액션을 나타내는.</target>
        </trans-unit>
        <trans-unit id="7d2464e93b57920d8573d0d5b1da7fc0b3d251d4" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing the three digit HTTP Status-Code.</source>
          <target state="translated">안 &lt;code&gt;int&lt;/code&gt; 3 자리수의 HTTP 상태 코드를 나타내는.</target>
        </trans-unit>
        <trans-unit id="1746979352ac4ad56bb76302627833ad2156485a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; representing the type(s) of action(s) used in this Drag and Drop operation.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 액션의 형식을 나타내는은 (들)이 드래그 앤 드롭 동작에 사용된다.</target>
        </trans-unit>
        <trans-unit id="6f5d56ac307f0e60570dac66a4675fe95b596c76" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; used by updateCurrentCursor() indicating that the &lt;code&gt;Cursor&lt;/code&gt; has entered a &lt;code&gt;DropTarget&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Cursor&lt;/code&gt; 가 &lt;code&gt;DropTarget&lt;/code&gt; 에 들어 갔음을 나타내는 updateCurrentCursor ()에서 사용 하는 &lt;code&gt;int&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="b180dfa43af1f37c797782e019b0fd1b7d714521" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; used by updateCurrentCursor() indicating that the &lt;code&gt;Cursor&lt;/code&gt; is over a &lt;code&gt;DropTarget&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Cursor&lt;/code&gt; 가 &lt;code&gt;DropTarget&lt;/code&gt; 위에 있음을 나타내는 updateCurrentCursor ()에서 사용 하는 &lt;code&gt;int&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="996d353c072c3c0162a1c6535c7bd07f0386ee48" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; used by updateCurrentCursor() indicating that the &lt;code&gt;Cursor&lt;/code&gt; should change to the default (no drop) &lt;code&gt;Cursor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Cursor&lt;/code&gt; 가 기본값 (드롭 없음) &lt;code&gt;Cursor&lt;/code&gt; 로 변경되어야 함을 나타내는 updateCurrentCursor ()에서 사용 하는 &lt;code&gt;int&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="8fe3ea4cb0427238304848fdf989424c952f6d02" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; used by updateCurrentCursor() indicating that the user operation has changed.</source>
          <target state="translated">사용자 작업이 변경되었음을 나타내는 updateCurrentCursor ()에서 사용 하는 &lt;code&gt;int&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="aabdf49c04659510a730bc939a7453b5036f0534" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; value that may be updated atomically.</source>
          <target state="translated">안 &lt;code&gt;int&lt;/code&gt; 원자 적으로 업데이트 될 수 int 값입니다.</target>
        </trans-unit>
        <trans-unit id="436905f82df782d3789bb40d8565ed1d92728ee5" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; value that may be updated atomically. See the &lt;a href=&quot;../../../lang/invoke/varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; specification for descriptions of the properties of atomic accesses. An &lt;code&gt;AtomicInteger&lt;/code&gt; is used in applications such as atomically incremented counters, and cannot be used as a replacement for an &lt;a href=&quot;../../../lang/integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;. However, this class does extend &lt;code&gt;Number&lt;/code&gt; to allow uniform access by tools and utilities that deal with numerically-based classes.</source>
          <target state="translated">원자 적으로 업데이트 할 수 있는 &lt;code&gt;int&lt;/code&gt; 값입니다. 원자 적 액세스 속성에 대한 설명은 &lt;a href=&quot;../../../lang/invoke/varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt; 사양을 참조하세요 . &lt;code&gt;AtomicInteger&lt;/code&gt; 는 같은 원자 적 증분 카운터와 같은 용도에 사용되며, 그리고 대체로서 사용할 수없는 &lt;a href=&quot;../../../lang/integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; . 그러나이 클래스는 숫자 기반 클래스를 처리하는 도구 및 유틸리티에서 균일 한 액세스를 허용 하도록 &lt;code&gt;Number&lt;/code&gt; 를 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="087667c3a645e4575ee0735435442c3f21954505" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;int&lt;/code&gt; value that may be updated atomically. See the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.atomic&lt;/code&gt;&lt;/a&gt; package specification for description of the properties of atomic variables. An &lt;code&gt;AtomicInteger&lt;/code&gt; is used in applications such as atomically incremented counters, and cannot be used as a replacement for an &lt;a href=&quot;../../../lang/integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;. However, this class does extend &lt;code&gt;Number&lt;/code&gt; to allow uniform access by tools and utilities that deal with numerically-based classes.</source>
          <target state="translated">원자 적으로 업데이트 될 수 있는 &lt;code&gt;int&lt;/code&gt; 값입니다. 원자 변수의 특성에 대한 설명은 &lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;java.util.concurrent.atomic&lt;/code&gt; &lt;/a&gt; 패키지 스펙을 참조하십시오 . &lt;code&gt;AtomicInteger&lt;/code&gt; 는 같은 원자 적 증분 카운터와 같은 용도에 사용되며, 그리고 대체로서 사용할 수없는 &lt;a href=&quot;../../../lang/integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; . 그러나이 클래스는 숫자 기반 클래스를 처리하는 도구 및 유틸리티로 균일하게 액세스 할 수 있도록 &lt;code&gt;Number&lt;/code&gt; 를 확장 합니다.</target>
        </trans-unit>
        <trans-unit id="f8e318bf5e5136bdf5ce251ab81cc2fdd83a51b0" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;invokedynamic&lt;/code&gt; instruction is linked just before its first execution. A dynamically-computed constant is resolved just before the first time it is used (by pushing it on the stack or linking it as a bootstrap method parameter). The bootstrap method call implementing the linkage occurs within a thread that is attempting a first execution or first use.</source>
          <target state="translated">&lt;code&gt;invokedynamic&lt;/code&gt; 명령은 단지 첫 번째 실행하기 전에 연결되어 있습니다. 동적으로 계산 된 상수는 처음 사용되기 직전에 해결됩니다 (스택에 푸시하거나 부트 스트랩 메서드 매개 변수로 연결). 연결을 구현하는 부트 스트랩 메서드 호출은 첫 번째 실행 또는 처음 사용을 시도하는 스레드 내에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8d37de712fdf106cad30e68ee187e6f114f55a7a" translate="yes" xml:space="preserve">
          <source>An &lt;code&gt;invokedynamic&lt;/code&gt; instruction is originally in an unlinked state. In this state, there is no target method for the instruction to invoke.</source>
          <target state="translated">&lt;code&gt;invokedynamic&lt;/code&gt; 명령은 해제 된 상태에서 원래이다. 이 상태에서는 명령을 호출 할 대상 메서드가 없습니다.</target>
        </trans-unit>
        <trans-unit id="b9fd26bb801718669246b4dc6aedd1d012db6c0d" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;MXBean&lt;/em&gt; is a variant of Standard MBean where complex types are mapped to a standard set of types defined in the &lt;a href=&quot;openmbean/package-summary&quot;&gt;&lt;code&gt;javax.management.openmbean&lt;/code&gt;&lt;/a&gt; package. MXBeans are appropriate if you would otherwise need to reference application-specific classes in your MBean interface. They are described in detail in the specification for &lt;a href=&quot;mxbean&quot;&gt;&lt;code&gt;MXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;의 MXBean는&lt;/em&gt; 복합 유형이 정의 유형의 표준 집합에 매핑되는 표준의 MBean의 변형입니다 &lt;a href=&quot;openmbean/package-summary&quot;&gt; &lt;code&gt;javax.management.openmbean&lt;/code&gt; 의&lt;/a&gt; 패키지로 제공된다. MBean 인터페이스에서 애플리케이션 특정 클래스를 참조해야하는 경우 MXBean이 적합합니다. 그것들은 사양에 자세히 설명되어 있습니다.&lt;a href=&quot;mxbean&quot;&gt; &lt;code&gt;MXBean&lt;/code&gt; &lt;/a&gt;있습니다.</target>
        </trans-unit>
        <trans-unit id="17089ce6d5594e4e7f2e90276d5c9c7249c48e95" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;Open MBean&lt;/em&gt; is a kind of Dynamic MBean where the types of attributes and of operation parameters and return values are built using a small set of predefined Java classes. Open MBeans facilitate operation with remote management programs that do not necessarily have access to application-specific types, including non-Java programs. Open MBeans are defined by the package &lt;a href=&quot;openmbean/package-summary&quot;&gt;&lt;code&gt;
        javax.management.openmbean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;em&gt;열기 MBean는,&lt;/em&gt; 속성과 작동 매개 변수 및 반환 값의 유형은 미리 정의 된 자바 클래스를 사용해 구축되는 동적 MBean에의 일종이다. Open MBean은 Java 이외의 프로그램을 포함하여 응용 프로그램 특정 유형에 액세스 할 필요가없는 원격 관리 프로그램으로 조작을 용이하게합니다. 공개 MBean은 &lt;a href=&quot;openmbean/package-summary&quot;&gt; &lt;code&gt; javax.management.openmbean&lt;/code&gt; &lt;/a&gt; 패키지에 의해 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="048ed8c4104dbbe06b2cff23468329c5ad2ceb71" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;offset&lt;/em&gt; value can be specified. When an observed value exceeds its threshold, the threshold is incremented by the offset, or by a multiple of the offset sufficient to make the threshold greater than the new observed value.</source>
          <target state="translated">&lt;em&gt;오프셋&lt;/em&gt; 값이 지정 될 수있다. 관찰 된 값이 임계 값을 초과하면, 임계 값은 오프셋에 의해 또는 임계 값을 새로운 관찰 된 값보다 크게 만들기에 충분한 오프셋의 배수만큼 증가합니다.</target>
        </trans-unit>
        <trans-unit id="7fcd831e0b42745d917f0bdce05841f7695e04d6" translate="yes" xml:space="preserve">
          <source>An &lt;em&gt;unquoted value&lt;/em&gt; is a possibly empty string of characters which may not contain any of the characters comma, equals, colon, or quote.</source>
          <target state="translated">&lt;em&gt;인용 부호로 둘러싸이지 않은 값&lt;/em&gt; 문자의 쉼표, 등호, 구두점, 인용 부호를 포함 할 수 없습니다 공 문자열의 가능성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a2684422286ab1507de4a61572052b079877180b" translate="yes" xml:space="preserve">
          <source>An ACL can be thought of as a data structure with multiple ACL entries. Each ACL entry, of interface type AclEntry, contains a set of permissions associated with a particular principal. (A principal represents an entity such as an individual user or a group). Additionally, each ACL entry is specified as being either positive or negative. If positive, the permissions are to be granted to the associated principal. If negative, the permissions are to be denied.</source>
          <target state="translated">ACL은 여러 개의 ACL 항목이있는 데이터 구조로 생각할 수 있습니다. AclEntry 인터페이스 유형의 각 ACL 항목에는 특정 프린시 펄과 연관된 권한 세트가 있습니다. (주체는 개별 사용자 또는 그룹과 같은 엔티티를 나타냅니다). 또한 각 ACL 항목은 양수 또는 음수로 지정됩니다. 긍정적 인 경우 권한이 연결된 보안 주체에게 부여됩니다. 부정 인 경우 권한이 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="9d21ef0f25782f994a17c48fc04b2e65cf5a7b75" translate="yes" xml:space="preserve">
          <source>An ACL can be thought of as a data structure with multiple ACL entry objects. Each ACL entry object contains a set of permissions associated with a particular principal. (A principal represents an entity such as an individual user or a group). Additionally, each ACL entry is specified as being either positive or negative. If positive, the permissions are to be granted to the associated principal. If negative, the permissions are to be denied. Each principal can have at most one positive ACL entry and one negative entry; that is, multiple positive or negative ACL entries are not allowed for any principal. Note: ACL entries are by default positive. An entry becomes a negative entry only if the &lt;a href=&quot;#setNegativePermissions()&quot;&gt;&lt;code&gt;setNegativePermissions&lt;/code&gt;&lt;/a&gt; method is called on it.</source>
          <target state="translated">ACL은 여러 ACL 항목 개체가있는 데이터 구조로 생각할 수 있습니다. 각 ACL 항목 개체에는 특정 주체와 관련된 권한 집합이 포함되어 있습니다. (주체는 개별 사용자 또는 그룹과 같은 엔티티를 나타냅니다.) 또한 각 ACL 항목은 양수 또는 음수로 지정됩니다. 긍정적 인 경우 권한이 연결된 보안 주체에게 부여됩니다. 부정적이면 권한이 거부됩니다. 각 주체는 최대 하나의 긍정적 인 ACL 항목과 하나의 부정적 항목을 가질 수 있습니다. 즉, 어떤 주체에도 여러 개의 긍정적 또는 부정적 ACL 항목이 허용되지 않습니다. 참고 : ACL 항목은 기본적으로 양수입니다. 항목은 &lt;a href=&quot;#setNegativePermissions()&quot;&gt; &lt;code&gt;setNegativePermissions&lt;/code&gt; &lt;/a&gt; 메소드가 호출 된 경우에만 음수 항목이됩니다 .</target>
        </trans-unit>
        <trans-unit id="c70bcd23d632cd866fc4b69e2bbb462334dd40db" translate="yes" xml:space="preserve">
          <source>An ACL can be thought of as a data structure with multiple ACL entry objects. Each ACL entry object contains a set of permissions associated with a particular principal. (A principal represents an entity such as an individual user or a group). Additionally, each ACL entry is specified as being either positive or negative. If positive, the permissions are to be granted to the associated principal. If negative, the permissions are to be denied. Each principal can have at most one positive ACL entry and one negative entry; that is, multiple positive or negative ACL entries are not allowed for any principal. Note: ACL entries are by default positive. An entry becomes a negative entry only if the &lt;a href=&quot;aclentry#setNegativePermissions--&quot;&gt;&lt;code&gt;setNegativePermissions&lt;/code&gt;&lt;/a&gt; method is called on it.</source>
          <target state="translated">ACL은 여러 ACL 항목 오브젝트가있는 데이터 구조로 생각할 수 있습니다. 각 ACL 항목 오브젝트에는 특정 프린시 펄과 연관된 권한 세트가 있습니다. (주체는 개별 사용자 또는 그룹과 같은 엔티티를 나타냅니다). 또한 각 ACL 항목은 양수 또는 음수로 지정됩니다. 긍정적 인 경우 권한이 연결된 보안 주체에게 부여됩니다. 부정 인 경우 권한이 거부됩니다. 각 주체는 최대 하나의 양의 ACL 항목과 하나의 음의 항목을 가질 수 있습니다. 즉, 여러 주체에 여러 개의 양수 또는 음수 ACL 항목이 허용되지 않습니다. 참고 : ACL 항목은 기본적으로 양수입니다. &lt;a href=&quot;aclentry#setNegativePermissions--&quot;&gt; &lt;code&gt;setNegativePermissions&lt;/code&gt; 인&lt;/a&gt; 경우에만 항목이 음수 항목이됩니다. 메소드가 호출 된 .</target>
        </trans-unit>
        <trans-unit id="84e29a6b919f762a173b4649e9c0288050182f35" translate="yes" xml:space="preserve">
          <source>An ANSI-style &lt;code&gt;JOIN&lt;/code&gt; providing a cross product of two tables</source>
          <target state="translated">두 테이블의 외적을 제공 하는 ANSI 스타일 &lt;code&gt;JOIN&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="44b9a73540db77194022f6555c89e7d18b89240b" translate="yes" xml:space="preserve">
          <source>An ANSI-style &lt;code&gt;JOIN&lt;/code&gt; providing a full JOIN.</source>
          <target state="translated">시키는 ANSI 스타일은 &lt;code&gt;JOIN&lt;/code&gt; 전체가 가입 제공한다.</target>
        </trans-unit>
        <trans-unit id="566d47efd4747b25ac71283c0f5aa27aff58dc5d" translate="yes" xml:space="preserve">
          <source>An ANSI-style &lt;code&gt;JOIN&lt;/code&gt; providing a full JOIN. Specifies that all rows from either table be returned regardless of matching records on the other table.</source>
          <target state="translated">시키는 ANSI 스타일은 &lt;code&gt;JOIN&lt;/code&gt; 전체가 가입 제공한다. 다른 테이블에서 일치하는 레코드에 관계없이 두 테이블의 모든 행이 반환되도록 지정합니다.</target>
        </trans-unit>
        <trans-unit id="7d55b7cec5ce8a2585139fd0e9b79313e484e942" translate="yes" xml:space="preserve">
          <source>An ANSI-style &lt;code&gt;JOIN&lt;/code&gt; providing a inner join between two tables.</source>
          <target state="translated">두 테이블 간의 내부 조인을 제공 하는 ANSI 스타일 &lt;code&gt;JOIN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4fa36946076bb31cc326fcb1dbb382782e1dbe84" translate="yes" xml:space="preserve">
          <source>An ANSI-style &lt;code&gt;JOIN&lt;/code&gt; providing a inner join between two tables. Any unmatched rows in either table of the join should be discarded.</source>
          <target state="translated">두 테이블 간의 내부 조인을 제공 하는 ANSI 스타일 &lt;code&gt;JOIN&lt;/code&gt; . 조인의 두 테이블에서 일치하지 않는 행은 모두 버려야합니다.</target>
        </trans-unit>
        <trans-unit id="cc55a1964c919ca7189795c145a81c1a128cd58d" translate="yes" xml:space="preserve">
          <source>An ANSI-style &lt;code&gt;JOIN&lt;/code&gt; providing a left outer join between two tables.</source>
          <target state="translated">두 테이블 사이에 왼쪽 외부 조인을 제공 하는 ANSI 스타일의 &lt;code&gt;JOIN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="0bfeb63d30884eb732252a25afa9b999a18d39b5" translate="yes" xml:space="preserve">
          <source>An ANSI-style &lt;code&gt;JOIN&lt;/code&gt; providing a left outer join between two tables. In SQL, this is described where all records should be returned from the left side of the JOIN statement.</source>
          <target state="translated">두 테이블 사이에 왼쪽 외부 조인을 제공 하는 ANSI 스타일의 &lt;code&gt;JOIN&lt;/code&gt; . SQL에서는 JOIN 문의 왼쪽에서 모든 레코드가 반환되어야하는 위치에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="bff2fc3115155d19a0877d0f67d9a5310e8d1707" translate="yes" xml:space="preserve">
          <source>An ANSI-style &lt;code&gt;JOIN&lt;/code&gt; providing a right outer join between two tables.</source>
          <target state="translated">두 테이블 사이에 오른쪽 외부 조인을 제공 하는 ANSI 스타일의 &lt;code&gt;JOIN&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a67a1302a29674b1e404d9b9e35ee0d622f54805" translate="yes" xml:space="preserve">
          <source>An ANSI-style &lt;code&gt;JOIN&lt;/code&gt; providing a right outer join between two tables. In SQL, this is described where all records from the table on the right side of the JOIN statement even if the table on the left has no matching record.</source>
          <target state="translated">두 테이블 사이에 오른쪽 외부 조인을 제공 하는 ANSI 스타일의 &lt;code&gt;JOIN&lt;/code&gt; . SQL에서는 왼쪽 테이블에 일치하는 레코드가없는 경우에도 JOIN 문의 오른쪽에있는 테이블의 모든 레코드에 대해 설명합니다.</target>
        </trans-unit>
        <trans-unit id="1a95822d61650974831881891441c64e36dabb1b" translate="yes" xml:space="preserve">
          <source>An AWT component, but nothing else is known about it.</source>
          <target state="translated">AWT 구성 요소이지만 이에 대해 알려진 것은 없습니다.</target>
        </trans-unit>
        <trans-unit id="c2034ee9043e4468b2456b2b01be34999ea728cc" translate="yes" xml:space="preserve">
          <source>An AccessControlContext is created by calling the &lt;code&gt;AccessController.getContext&lt;/code&gt; method. The &lt;code&gt;getContext&lt;/code&gt; method takes a &quot;snapshot&quot; of the current calling context, and places it in an AccessControlContext object, which it returns. A sample call is the following:</source>
          <target state="translated">AccessControlContext는 &lt;code&gt;AccessController.getContext&lt;/code&gt; 메소드 를 호출하여 작성됩니다 . 그만큼 &lt;code&gt;getContext&lt;/code&gt; 메소드는, 현재의 호출 측 문맥의 「snapshot」를 취득 해,이 메소드가 돌려주는 AccessControlContext 오브젝트에 배치합니다. 샘플 호출은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d0ed6e045b2bb8038ede83e1403ef7b9a77879fa" translate="yes" xml:space="preserve">
          <source>An AccessControlContext is used to make system resource access decisions based on the context it encapsulates.</source>
          <target state="translated">AccessControlContext는 캡슐화 된 컨텍스트에 따라 시스템 자원 액세스 결정을 내리는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c7dbfe4ea8dad462fc9cbe80583a0eed83ef8424" translate="yes" xml:space="preserve">
          <source>An Action implementation useful for key bindings that are shared across a number of different text components.</source>
          <target state="translated">여러 다른 텍스트 구성 요소에서 공유되는 키 바인딩에 유용한 작업 구현입니다.</target>
        </trans-unit>
        <trans-unit id="b04d37494745bebb06790e1e722823730dd8c1a5" translate="yes" xml:space="preserve">
          <source>An Action implementation useful for key bindings that are shared across a number of different text components. Because the action is shared, it must have a way of getting it's target to act upon. This class provides support to try and find a text component to operate on. The preferred way of getting the component to act upon is through the ActionEvent that is received. If the Object returned by getSource can be narrowed to a text component, it will be used. If the action event is null or can't be narrowed, the last focused text component is tried. This is determined by being used in conjunction with a JTextController which arranges to share that information with a TextAction.</source>
          <target state="translated">여러 다른 텍스트 구성 요소에서 공유되는 키 바인딩에 유용한 작업 구현입니다. 작업이 공유되기 때문에 대상이 실행되도록하는 방법이 있어야합니다. 이 클래스는 작업 할 텍스트 구성 요소를 찾기위한 지원을 제공합니다. 컴포넌트가 작동하도록하는 선호되는 방법은 수신 된 ActionEvent를 사용하는 것입니다. getSource에서 반환 한 Object를 텍스트 구성 요소로 좁힐 수 있으면 사용됩니다. 작업 이벤트가 null이거나 범위를 좁힐 수없는 경우 마지막으로 포커스 된 텍스트 구성 요소가 시도됩니다. 이는 해당 정보를 TextAction과 공유하도록 배열하는 JTextController와 함께 사용하여 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="95ea4cab64e636e81805f6e15cc09616f24433e1" translate="yes" xml:space="preserve">
          <source>An Algorithm</source>
          <target state="translated">알고리즘</target>
        </trans-unit>
        <trans-unit id="3e0d7dcf02ff5c3599b845d4f36804d0afc95643" translate="yes" xml:space="preserve">
          <source>An Annotation object is used as a wrapper for a text attribute value if the attribute has annotation characteristics.</source>
          <target state="translated">속성에 주석 특성이있는 경우 Annotation 객체는 텍스트 속성 값의 래퍼로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="8855173cc3a9b8d3578e593ef7aaec03c1b426ce" translate="yes" xml:space="preserve">
          <source>An Annotation object is used as a wrapper for a text attribute value if the attribute has annotation characteristics. These characteristics are:</source>
          <target state="translated">속성에 주석 특성이있는 경우 Annotation 객체는 텍스트 속성 값의 래퍼로 사용됩니다. 이러한 특성은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4f5b7ff757643d3667612c563d9fa371ec4744c3" translate="yes" xml:space="preserve">
          <source>An AttachProvider is installed on the platform if:</source>
          <target state="translated">다음과 같은 경우 AttachProvider가 플랫폼에 설치됩니다.</target>
        </trans-unit>
        <trans-unit id="38349826443eb5f8b0f145776d6f978e86cac2a5" translate="yes" xml:space="preserve">
          <source>An AttributeModificationException instance is not synchronized against concurrent multithreaded access. Multiple threads trying to access and modify a single AttributeModification instance should lock the object.</source>
          <target state="translated">AttributeModificationException 인스턴스는 동시 다중 스레드 액세스에 대해 동기화되지 않습니다. 단일 AttributeModification 인스턴스에 액세스하고 수정하려는 여러 스레드가 객체를 잠 가야합니다.</target>
        </trans-unit>
        <trans-unit id="b893c9940906556691c2bd941e04be07a66daa05" translate="yes" xml:space="preserve">
          <source>An AttributedString holds text and related attribute information.</source>
          <target state="translated">AttributedString은 텍스트 및 관련 속성 정보를 보유합니다.</target>
        </trans-unit>
        <trans-unit id="bd982501c3c8980f823cdb2bbda7d1230a226b5c" translate="yes" xml:space="preserve">
          <source>An AttributedString holds text and related attribute information. It may be used as the actual data storage in some cases where a text reader wants to access attributed text through the AttributedCharacterIterator interface.</source>
          <target state="translated">AttributedString은 텍스트 및 관련 속성 정보를 보유합니다. 텍스트 리더가 AttributedCharacterIterator 인터페이스를 통해 속성이 지정된 텍스트에 액세스하려는 경우 실제 데이터 저장소로 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9aa147faa0052b354e637283af551e67d954e3d1" translate="yes" xml:space="preserve">
          <source>An EdEC point is specified by its y-coordinate value and a boolean that indicates whether the x-coordinate is odd. The y-coordinate is an element of the field of integers modulo some value p that is determined by the algorithm parameters. This field element is represented by a &lt;code&gt;BigInteger&lt;/code&gt;, and implementations that consume objects of this class may reject integer values which are not in the range [0, p).</source>
          <target state="translated">EdEC 점은 y 좌표 값과 x 좌표가 홀수인지 여부를 나타내는 부울로 지정됩니다. y 좌표는 알고리즘 매개 변수에 의해 결정되는 일부 값 p 모듈로 정수 필드의 요소입니다. 이 필드 요소는 &lt;code&gt;BigInteger&lt;/code&gt; 로 표시 되며이 클래스의 객체를 사용하는 구현은 [0, p) 범위에없는 정수 값을 거부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5769984c78796861939f9d23ad21c901e416beb6" translate="yes" xml:space="preserve">
          <source>An EditorKit has the ability to be read and save documents. It is generally the most pleasing to users if there is no loss of data between the two operation. The policy of the HTMLEditorKit will be to store things not recognized or not necessarily visible so they can be subsequently written out. The model of the HTML document should therefore contain all information discovered while reading the document. This is constrained in some ways by the need to support editing (i.e. incorrect documents sometimes must be normalized). The guiding principle is that information shouldn't be lost, but some might be synthesized to produce a more correct model or it might be rearranged.</source>
          <target state="translated">EditorKit에는 문서를 읽고 저장할 수있는 기능이 있습니다. 두 작업 사이에 데이터 손실이없는 경우 일반적으로 사용자에게 가장 즐겁습니다. HTMLEditorKit의 정책은 인식되지 않거나 반드시 보이지 않아도되는 것들을 저장하여 나중에 쓸 수 있도록하는 것입니다. 따라서 HTML 문서의 모델은 문서를 읽는 동안 발견 된 모든 정보를 포함해야합니다. 이것은 편집을 지원해야하는 필요성 때문에 어떤면에서 제한됩니다 (예 : 잘못된 문서는 때때로 정규화되어야 함). 기본 원칙은 정보가 손실되어서는 안되지만 일부는 더 정확한 모델을 생성하기 위해 합성되거나 재 배열 될 수 있다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="55ad13d3fd77e9d30c8a4af70d833b8bf5aa13e5" translate="yes" xml:space="preserve">
          <source>An Edwards-Curve private key is a bit string. This interface only supports bit string lengths that are a multiple of 8, and the key is represented using a byte array.</source>
          <target state="translated">Edwards-Curve 개인 키는 비트 문자열입니다. 이 인터페이스는 8의 배수 인 비트 문자열 길이 만 지원하며 키는 바이트 배열을 사용하여 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="3dcb04eb21707e0181a94d5bcc58e33aa0eb53b9" translate="yes" xml:space="preserve">
          <source>An Edwards-Curve public key is a point on the curve, which is represented using an EdECPoint.</source>
          <target state="translated">Edwards-Curve 공개 키는 EdECPoint를 사용하여 표현되는 곡선의 한 점입니다.</target>
        </trans-unit>
        <trans-unit id="9a103687f042d35a94ce9f652474bd5296639e63" translate="yes" xml:space="preserve">
          <source>An Element represents a specific region in a Document that begins with startOffset and ends just before endOffset. The start offset of a branch Element is usually the start offset of its first child. Similarly, the end offset of a branch Element is usually the end offset of its last child.</source>
          <target state="translated">요소는 startOffset으로 시작하고 endOffset 직전에 끝나는 문서의 특정 영역을 나타냅니다. 분기 요소의 시작 오프셋은 일반적으로 첫 번째 자식의 시작 오프셋입니다. 마찬가지로 분기 요소의 끝 오프셋은 일반적으로 마지막 자식의 끝 오프셋입니다.</target>
        </trans-unit>
        <trans-unit id="75aa6cb85fd1dfb867d563d4ef0e8288a7199311" translate="yes" xml:space="preserve">
          <source>An Encoded Form</source>
          <target state="translated">인코딩 된 양식</target>
        </trans-unit>
        <trans-unit id="7353d3a9eebd0b0234da36a7665b8b94ec1eac3b" translate="yes" xml:space="preserve">
          <source>An EncryptionKey is defined in Section 4.2.9 of the Kerberos Protocol Specification (&lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;) as:</source>
          <target state="translated">EncryptionKey는 Kerberos 프로토콜 사양 ( &lt;a href=&quot;http://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt; ) 의 섹션 4.2.9에서 다음과 같이 정의 됩니다.</target>
        </trans-unit>
        <trans-unit id="ffc30667cf72bbadd96e88ffa195bf33b7c530f2" translate="yes" xml:space="preserve">
          <source>An EncryptionKey is defined in Section 4.2.9 of the Kerberos Protocol Specification (&lt;a href=&quot;https://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt;) as:</source>
          <target state="translated">EncryptionKey는 Kerberos 프로토콜 사양 ( &lt;a href=&quot;https://www.ietf.org/rfc/rfc4120.txt&quot;&gt;RFC 4120&lt;/a&gt; ) 의 섹션 4.2.9에서 다음과 같이 정의 됩니다.</target>
        </trans-unit>
        <trans-unit id="3bd1b3dcfb3ea555af204a39d90125f75979b9ce" translate="yes" xml:space="preserve">
          <source>An Entry maintaining a key and a value.</source>
          <target state="translated">키와 값을 유지하는 엔트리.</target>
        </trans-unit>
        <trans-unit id="da0746701e8e7695e38c701dca1f984542e011fe" translate="yes" xml:space="preserve">
          <source>An Entry maintaining a key and a value. The value may be changed using the &lt;code&gt;setValue&lt;/code&gt; method. This class facilitates the process of building custom map implementations. For example, it may be convenient to return arrays of &lt;code&gt;SimpleEntry&lt;/code&gt; instances in method &lt;code&gt;Map.entrySet().toArray&lt;/code&gt;.</source>
          <target state="translated">키와 값을 유지하는 엔트리. &lt;code&gt;setValue&lt;/code&gt; 메소드를 사용하여 값을 변경할 수 있습니다 . 이 클래스는 사용자 정의 맵 구현을 빌드하는 프로세스를 용이하게합니다. 예를 들어, &lt;code&gt;SimpleEntry&lt;/code&gt; &lt;code&gt;Map.entrySet().toArray&lt;/code&gt; 메소드에서 SimpleEntry 인스턴스의 배열을 리턴하는 것이 편리 할 수 ​​있습니다 . .</target>
        </trans-unit>
        <trans-unit id="cacdd53a5669de32a448c704a7d46a63b3a404a9" translate="yes" xml:space="preserve">
          <source>An Entry maintaining an immutable key and value.</source>
          <target state="translated">불변의 키와 값을 유지하는 엔트리.</target>
        </trans-unit>
        <trans-unit id="b46e141a48aa50e234a4e444b9b9b2d5f4ee7a2b" translate="yes" xml:space="preserve">
          <source>An Entry maintaining an immutable key and value. This class does not support method &lt;code&gt;setValue&lt;/code&gt;. This class may be convenient in methods that return thread-safe snapshots of key-value mappings.</source>
          <target state="translated">불변의 키와 값을 유지하는 엔트리. 이 클래스는 &lt;code&gt;setValue&lt;/code&gt; 메소드를 지원하지 않습니다 . 이 클래스는 키-값 매핑의 스레드 안전 스냅 샷을 반환하는 메서드에서 편리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="139f9b97ee701e9197d9014df02bdb2f6d47e5bb" translate="yes" xml:space="preserve">
          <source>An ErrorListener instance can be registered to a &lt;a href=&quot;transformerfactory&quot;&gt;&lt;code&gt;TransformerFactory&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt; through the &lt;a href=&quot;transformerfactory#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt;&lt;code&gt;TransformerFactory.setErrorListener(ErrorListener)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;transformer#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt;&lt;code&gt;Transformer.setErrorListener(ErrorListener)&lt;/code&gt;&lt;/a&gt; method to receive errors and warnings reported by the TransformerFactory or Transformer.</source>
          <target state="translated">&lt;a href=&quot;transformerfactory#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt; &lt;code&gt;TransformerFactory.setErrorListener(ErrorListener)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;transformer#setErrorListener(javax.xml.transform.ErrorListener)&quot;&gt; &lt;code&gt;Transformer.setErrorListener(ErrorListener)&lt;/code&gt; &lt;/a&gt; 메소드를 통해 ErrorListener 인스턴스를 &lt;a href=&quot;transformerfactory&quot;&gt; &lt;code&gt;TransformerFactory&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; 에&lt;/a&gt; 등록하여 TransformerFactory 또는 Transformer 가보고 한 오류 및 경고를 수신 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2b27a7be77a8eef346badd76c7e236adbb1f25e" translate="yes" xml:space="preserve">
          <source>An EventSetDescriptor describes a group of events that a given Java bean fires.</source>
          <target state="translated">EventSetDescriptor는 지정된 Java Bean이 실행하는 이벤트 그룹을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="50fd111412d51c66c26ec4a0d0302236610f9a26" translate="yes" xml:space="preserve">
          <source>An Exception thrown by the managed object's getter.</source>
          <target state="translated">관리 대상 객체의 getter에서 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="be7265a58cd913772cac4b10648d630189d7eaf4" translate="yes" xml:space="preserve">
          <source>An Exception thrown by the managed object's invoked method.</source>
          <target state="translated">관리 객체의 호출 된 메소드에 의해 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="c06f5736113d71e86a9d07725f11650d914367b3" translate="yes" xml:space="preserve">
          <source>An Exception thrown by the managed object's setter.</source>
          <target state="translated">관리 객체의 setter에서 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="ef31b04ee6f5f3ee3b1f97fa7b222fc1b3f61e4c" translate="yes" xml:space="preserve">
          <source>An ExceptionListener is notified of internal exceptions.</source>
          <target state="translated">ExceptionListener에 내부 예외가 통지됩니다.</target>
        </trans-unit>
        <trans-unit id="9e34e0a0992ba82837e6b5076d6ac0f44ba2c3a6" translate="yes" xml:space="preserve">
          <source>An Externalizable instance can designate a substitution object via the writeReplace and readResolve methods documented in the Serializable interface.</source>
          <target state="translated">Externalizable 인스턴스는 Serializable 인터페이스에 문서화 된 writeReplace 및 readResolve 메소드를 통해 대체 객체를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c49320ccfc23113894557342521d3e38dcdf010b" translate="yes" xml:space="preserve">
          <source>An HTML link.</source>
          <target state="translated">HTML 링크.</target>
        </trans-unit>
        <trans-unit id="ebba042aa5a7f6213c44f45d281c550563bf22db" translate="yes" xml:space="preserve">
          <source>An HTML reader to load an HTML document with an HTML element structure.</source>
          <target state="translated">HTML 요소 구조가있는 HTML 문서를로드하기위한 HTML 판독기.</target>
        </trans-unit>
        <trans-unit id="13a28add4e7c62ca3333c659cb9b3e9afce1c2df" translate="yes" xml:space="preserve">
          <source>An HTML reader to load an HTML document with an HTML element structure. This is a set of callbacks from the parser, implemented to create a set of elements tagged with attributes. The parse builds up tokens (ElementSpec) that describe the element subtree desired, and burst it into the document under the protection of a write lock using the insert method on the document outer class.</source>
          <target state="translated">HTML 요소 구조가있는 HTML 문서를로드하기위한 HTML 판독기. 이것은 속성으로 태그가 지정된 요소 세트를 생성하기 위해 구현 된 파서의 콜백 세트입니다. 구문 분석은 원하는 요소 하위 트리를 설명하는 토큰 (ElementSpec)을 빌드하고 문서 외부 클래스의 삽입 메서드를 사용하여 쓰기 잠금으로 보호되는 문서로 버스트합니다.</target>
        </trans-unit>
        <trans-unit id="50a661b076108661cc84572bc1cbd39786d3698b" translate="yes" xml:space="preserve">
          <source>An HTTP Client.</source>
          <target state="translated">HTTP 클라이언트</target>
        </trans-unit>
        <trans-unit id="658ef89c11c4f03753ec933e19514b9e51f1d1ed" translate="yes" xml:space="preserve">
          <source>An HTTP header name may appear more than once in the HTTP protocol. As such, headers are represented as a name and a list of values. Each occurrence of a header value is added verbatim, to the appropriate header name list, without interpreting its value. In particular, &lt;code&gt;HttpHeaders&lt;/code&gt; does not perform any splitting or joining of comma separated header value strings. The order of elements in a header value list is preserved when &lt;a href=&quot;httprequest.builder#header(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;building&lt;/code&gt;&lt;/a&gt; a request. For responses, the order of elements in a header value list is the order in which they were received. The &lt;code&gt;Map&lt;/code&gt; returned by the &lt;code&gt;map&lt;/code&gt; method, however, does not provide any guarantee with regard to the ordering of its entries.</source>
          <target state="translated">HTTP 헤더 이름은 HTTP 프로토콜에서 두 번 이상 나타날 수 있습니다. 따라서 헤더는 이름과 값 목록으로 표시됩니다. 헤더 값의 각 항목은 해당 값을 해석하지 않고 적절한 헤더 이름 목록에 그대로 추가됩니다. 특히 &lt;code&gt;HttpHeaders&lt;/code&gt; 는 쉼표로 구분 된 헤더 값 문자열의 분할 또는 결합을 수행하지 않습니다. 경우 헤더 값리스트의 요소의 순서는 보존 &lt;a href=&quot;httprequest.builder#header(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;building&lt;/code&gt; &lt;/a&gt; 요청. 응답의 경우 헤더 값 목록의 요소 순서는 수신 된 순서입니다. &lt;code&gt;Map&lt;/code&gt; 에 의해 반환되는 &lt;code&gt;map&lt;/code&gt; 그러나, 그 항목의 순서와 관련하여 어떤 보증을 제공하지 않습니다, 방법.</target>
        </trans-unit>
        <trans-unit id="96421a44221c6788e75627331a7353bf773dc3fd" translate="yes" xml:space="preserve">
          <source>An HTTP header name may appear more than once in the HTTP protocol. Such,</source>
          <target state="translated">HTTP 헤더 이름은 HTTP 프로토콜에서 두 번 이상 나타날 수 있습니다. 이러한,</target>
        </trans-unit>
        <trans-unit id="46c2f239a5fafa75ffb1b504a9266ac49d11315c" translate="yes" xml:space="preserve">
          <source>An HTTP request.</source>
          <target state="translated">HTTP 요청</target>
        </trans-unit>
        <trans-unit id="0424ee10d867ce5bd6c8533576d303d063de5414" translate="yes" xml:space="preserve">
          <source>An HTTP response.</source>
          <target state="translated">HTTP 응답.</target>
        </trans-unit>
        <trans-unit id="cdc99a7418140f7781457ca1e35c0aacf327c98c" translate="yes" xml:space="preserve">
          <source>An HttpCookie object represents an HTTP cookie, which carries state information between server and user agent.</source>
          <target state="translated">HttpCookie 객체는 서버와 사용자 에이전트간에 상태 정보를 전달하는 HTTP 쿠키를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="8b91adcfa4da1bf69d335cb8f7dcb94f924bead5" translate="yes" xml:space="preserve">
          <source>An HttpCookie object represents an HTTP cookie, which carries state information between server and user agent. Cookie is widely adopted to create stateful sessions.</source>
          <target state="translated">HttpCookie 객체는 서버와 사용자 에이전트간에 상태 정보를 전달하는 HTTP 쿠키를 나타냅니다. 쿠키는 상태 저장 세션을 생성하기 위해 널리 채택됩니다.</target>
        </trans-unit>
        <trans-unit id="57df2712baa86b0ab625ab0d92b75f132380f39f" translate="yes" xml:space="preserve">
          <source>An I/O error occurs, in which case an &lt;code&gt;IOException&lt;/code&gt; other than &lt;code&gt;EOFException&lt;/code&gt; is thrown.</source>
          <target state="translated">I / O 오류가 발생 &lt;code&gt;EOFException&lt;/code&gt; 경우 EOFException 이외 의 &lt;code&gt;IOException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a082821140e659c59c6e6b42353bbea842c5ebe7" translate="yes" xml:space="preserve">
          <source>An ICC_ColorSpace object can be constructed from an appropriate ICC_Profile. Typically, an ICC_ColorSpace would be associated with an ICC Profile which is either an input, display, or output profile (see the ICC specification). There are also device link, abstract, color space conversion, and named color profiles. These are less useful for tagging a color or image, but are useful for other purposes (in particular device link profiles can provide improved performance for converting from one device's color space to another's).</source>
          <target state="translated">ICC_ColorSpace 개체는 적절한 ICC_Profile에서 구성 할 수 있습니다. 일반적으로 ICC_ColorSpace는 입력, 디스플레이 또는 출력 프로필 인 ICC 프로필과 연결됩니다 (ICC 사양 참조). 장치 링크, 추상, 색 공간 변환 및 명명 된 색 프로필도 있습니다. 색상이나 이미지에 태그를 지정하는 데는 덜 유용하지만 다른 용도에는 유용합니다 (특히 장치 링크 프로필은 한 장치의 색상 공간에서 다른 장치의 색상 공간으로 변환 할 때 향상된 성능을 제공 할 수 있음).</target>
        </trans-unit>
        <trans-unit id="aa105b5669c20a7b719a79ac399c1fa631849b9f" translate="yes" xml:space="preserve">
          <source>An IP address is either a 32-bit or 128-bit unsigned number used by IP, a lower-level protocol on which protocols like UDP and TCP are built. The IP address architecture is defined by &lt;a href=&quot;http://www.ietf.org/rfc/rfc790.txt&quot;&gt;&lt;i&gt;RFC 790: Assigned Numbers&lt;/i&gt;&lt;/a&gt;, &lt;a href=&quot;http://www.ietf.org/rfc/rfc1918.txt&quot;&gt; &lt;i&gt;RFC 1918: Address Allocation for Private Internets&lt;/i&gt;&lt;/a&gt;, &lt;a href=&quot;http://www.ietf.org/rfc/rfc2365.txt&quot;&gt;&lt;i&gt;RFC 2365: Administratively Scoped IP Multicast&lt;/i&gt;&lt;/a&gt;, and &lt;a href=&quot;http://www.ietf.org/rfc/rfc2373.txt&quot;&gt;&lt;i&gt;RFC 2373: IP Version 6 Addressing Architecture&lt;/i&gt;&lt;/a&gt;. An instance of an InetAddress consists of an IP address and possibly its corresponding host name (depending on whether it is constructed with a host name or whether it has already done reverse host name resolution).</source>
          <target state="translated">IP 주소는 UDP 및 TCP와 같은 프로토콜이 구축되는 하위 수준 프로토콜 인 IP에서 사용하는 32 비트 또는 128 비트 부호없는 숫자입니다. IP 주소 아키텍처는 &lt;a href=&quot;http://www.ietf.org/rfc/rfc790.txt&quot;&gt;&lt;i&gt;RFC 790 : 할당 번호&lt;/i&gt;&lt;/a&gt; , &lt;a href=&quot;http://www.ietf.org/rfc/rfc1918.txt&quot;&gt;&lt;i&gt;RFC 1918 : 개인 인터넷 주소 할당&lt;/i&gt;&lt;/a&gt; , &lt;a href=&quot;http://www.ietf.org/rfc/rfc2365.txt&quot;&gt;&lt;i&gt;RFC 2365 : 관리 범위 IP 멀티 캐스트&lt;/i&gt;&lt;/a&gt; 및 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2373.txt&quot;&gt;&lt;i&gt;RFC 2373 : IP 버전 6 주소 지정 아키텍처에 의해 정의&lt;/i&gt;&lt;/a&gt; 됩니다. InetAddress의 인스턴스는 IP 주소와 해당 호스트 이름으로 구성됩니다 (호스트 이름으로 구성되었는지 또는 이미 호스트 이름 확인을 수행했는지 여부에 따라 다름). &lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="16958b4a8037ca14ba6d4013daaebd43b1871de4" translate="yes" xml:space="preserve">
          <source>An IP address is either a 32-bit or 128-bit unsigned number used by IP, a lower-level protocol on which protocols like UDP and TCP are built. The IP address architecture is defined by &lt;a href=&quot;https://www.ietf.org/rfc/rfc790.txt&quot;&gt;&lt;i&gt;RFC 790: Assigned Numbers&lt;/i&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.ietf.org/rfc/rfc1918.txt&quot;&gt; &lt;i&gt;RFC 1918: Address Allocation for Private Internets&lt;/i&gt;&lt;/a&gt;, &lt;a href=&quot;https://www.ietf.org/rfc/rfc2365.txt&quot;&gt;&lt;i&gt;RFC 2365: Administratively Scoped IP Multicast&lt;/i&gt;&lt;/a&gt;, and &lt;a href=&quot;https://www.ietf.org/rfc/rfc2373.txt&quot;&gt;&lt;i&gt;RFC 2373: IP Version 6 Addressing Architecture&lt;/i&gt;&lt;/a&gt;. An instance of an InetAddress consists of an IP address and possibly its corresponding host name (depending on whether it is constructed with a host name or whether it has already done reverse host name resolution).</source>
          <target state="translated">IP 주소는 UDP 및 TCP와 같은 프로토콜이 구축되는 하위 수준 프로토콜 인 IP에서 사용하는 32 비트 또는 128 비트 부호없는 숫자입니다. IP 주소 아키텍처는 &lt;a href=&quot;https://www.ietf.org/rfc/rfc790.txt&quot;&gt;&lt;i&gt;RFC 790 : Assigned Numbers&lt;/i&gt;&lt;/a&gt; , &lt;a href=&quot;https://www.ietf.org/rfc/rfc1918.txt&quot;&gt;&lt;i&gt;RFC 1918 : Address Allocation for Private Internets&lt;/i&gt;&lt;/a&gt; , &lt;a href=&quot;https://www.ietf.org/rfc/rfc2365.txt&quot;&gt;&lt;i&gt;RFC 2365 : Administratively Scoped IP Multicast&lt;/i&gt;&lt;/a&gt; 및 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2373.txt&quot;&gt;&lt;i&gt;RFC 2373 : IP Version 6 Addressing Architecture에 의해 정의&lt;/i&gt;&lt;/a&gt; 됩니다. InetAddress의 인스턴스는 IP 주소와 해당 호스트 이름으로 구성됩니다 (호스트 이름으로 구성되었는지 또는 이미 역 호스트 이름 확인을 수행했는지에 따라 다름). &lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;&lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="bcc7a50164ddb8884b98546a09bcb306082cb3fd" translate="yes" xml:space="preserve">
          <source>An IPv6 address enclosed in square brackets (&lt;code&gt;'['&lt;/code&gt; and &lt;code&gt;']'&lt;/code&gt;) and consisting of hexadecimal digits, colon characters (&lt;code&gt;':'&lt;/code&gt;), and possibly an embedded IPv4 address. The full syntax of IPv6 addresses is specified in &lt;a href=&quot;http://www.ietf.org/rfc/rfc2373.txt&quot;&gt;&lt;i&gt;RFC 2373: IPv6 Addressing Architecture&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">대괄호 ( &lt;code&gt;'['&lt;/code&gt; 및 &lt;code&gt;']'&lt;/code&gt; )로 묶고 16 진수, 콜론 문자 ( &lt;code&gt;':'&lt;/code&gt; ) 및 내장 IPv4 주소로 구성되는 IPv6 주소입니다. IPv6 주소의 전체 구문은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2373.txt&quot;&gt;&lt;i&gt;RFC 2373 : IPv6 주소 지정 아키텍처에 지정되어&lt;/i&gt;&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="99fc89317270479e54b4d4c642de89cfc32306d0" translate="yes" xml:space="preserve">
          <source>An IPv6 address enclosed in square brackets (&lt;code&gt;'['&lt;/code&gt; and &lt;code&gt;']'&lt;/code&gt;) and consisting of hexadecimal digits, colon characters (&lt;code&gt;':'&lt;/code&gt;), and possibly an embedded IPv4 address. The full syntax of IPv6 addresses is specified in &lt;a href=&quot;https://www.ietf.org/rfc/rfc2373.txt&quot;&gt;&lt;i&gt;RFC 2373: IPv6 Addressing Architecture&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">대괄호 ( &lt;code&gt;'['&lt;/code&gt; 및 &lt;code&gt;']'&lt;/code&gt; )로 묶이고 16 진수, 콜론 문자 ( &lt;code&gt;':'&lt;/code&gt; ) 및 포함 된 IPv4 주소로 구성된 IPv6 주소입니다. IPv6 주소의 전체 구문은 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2373.txt&quot;&gt;&lt;i&gt;RFC 2373 : IPv6 주소 지정 아키텍처에 지정되어&lt;/i&gt;&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd97f3a670d8d123521bffa2031acd99ead2bfd8" translate="yes" xml:space="preserve">
          <source>An Icon wrapper class which implements UIResource.</source>
          <target state="translated">UIResource를 구현하는 Icon 래퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="c0f4954ec47afb53f1a935adf12bbff2f384bfae" translate="yes" xml:space="preserve">
          <source>An Icon wrapper class which implements UIResource. UI classes which set icon properties should use this class to wrap any icons specified as defaults. This class delegates all method invocations to the Icon &quot;delegate&quot; object specified at construction.</source>
          <target state="translated">UIResource를 구현하는 Icon 래퍼 클래스입니다. 아이콘 속성을 설정하는 UI 클래스는이 클래스를 사용하여 기본값으로 지정된 아이콘을 래핑해야합니다. 이 클래스는 모든 메서드 호출을 생성시 지정된 Icon &quot;delegate&quot;개체에 위임합니다.</target>
        </trans-unit>
        <trans-unit id="55b6ba7e753778b09202deb8cb3a76118d505043" translate="yes" xml:space="preserve">
          <source>An Identity also has a set of certificates (all certifying its own public key). The Principal names specified in these certificates need not be the same, only the key.</source>
          <target state="translated">또한 Identity에는 일련의 인증서 (모두 자체 공개 키를 인증하는 인증서)가 있습니다. 이 인증서에 지정된 프린시 펄 이름은 동일 할 필요는 없으며 키만 필요합니다.</target>
        </trans-unit>
        <trans-unit id="08138760222bab8a65c785edb15ef4a27c00cb10" translate="yes" xml:space="preserve">
          <source>An Identity can be subclassed, to include postal and email addresses, telephone numbers, images of faces and logos, and so on.</source>
          <target state="translated">우편 및 이메일 주소, 전화 번호, 얼굴 및 로고 이미지 등을 포함하도록 Identity를 서브 클래 싱 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc0e5eeb9681d299c2d79d8577fe365b2ad2c529" translate="yes" xml:space="preserve">
          <source>An IdentityScope can contain Identity objects of all kinds, including Signers. All types of Identity objects can be retrieved, added, and removed using the same methods. Note that it is possible, and in fact expected, that different types of identity scopes will apply different policies for their various operations on the various types of Identities.</source>
          <target state="translated">IdentityScope는 서명자를 포함하여 모든 종류의 Identity 객체를 포함 할 수 있습니다. 동일한 방법을 사용하여 모든 유형의 Identity 객체를 검색, 추가 및 제거 할 수 있습니다. 서로 다른 유형의 ID 범위는 다양한 유형의 ID에 대한 다양한 작업에 대해 서로 다른 정책을 적용 할 수 있으며 실제로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="da188ebd0e395b9cc3eb14df8852e78d9a226473" translate="yes" xml:space="preserve">
          <source>An IllegalAccessException is thrown when an application tries to reflectively create an instance (other than an array), set or get a field, or invoke a method, but the currently executing method does not have access to the definition of the specified class, field, method or constructor.</source>
          <target state="translated">응용 프로그램이 배열 이외의 인스턴스를 반사적으로 만들거나, 필드를 설정 또는 가져 오거나, 메소드를 호출하려고하지만 현재 실행중인 메소드가 지정된 클래스, 필드의 정의에 액세스 할 수없는 경우 IllegalAccessException이 발생합니다. 메소드 또는 생성자.</target>
        </trans-unit>
        <trans-unit id="a3aef77fa6e17a70bda29104489070e5139d1e42" translate="yes" xml:space="preserve">
          <source>An ImageFilter class for cropping images.</source>
          <target state="translated">이미지 자르기를위한 ImageFilter 클래스.</target>
        </trans-unit>
        <trans-unit id="4e691d84d718802787f63a476b8c9c92e724f2b1" translate="yes" xml:space="preserve">
          <source>An ImageFilter class for cropping images. This class extends the basic ImageFilter Class to extract a given rectangular region of an existing Image and provide a source for a new image containing just the extracted region. It is meant to be used in conjunction with a FilteredImageSource object to produce cropped versions of existing images.</source>
          <target state="translated">이미지 자르기를위한 ImageFilter 클래스. 이 클래스는 기본 ImageFilter 클래스를 확장하여 기존 이미지의 지정된 직사각형 영역을 추출하고 추출 된 영역 만 포함하는 새 이미지의 소스를 제공합니다. 기존 이미지의 잘린 버전을 생성하기 위해 FilteredImageSource 개체와 함께 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a58276d890980476a29a485304b858d1a160ae2f" translate="yes" xml:space="preserve">
          <source>An ImageFilter class for scaling images using a simple area averaging algorithm that produces smoother results than the nearest neighbor algorithm.</source>
          <target state="translated">최근 접 이웃 알고리즘보다 더 부드러운 결과를 생성하는 단순 영역 평균 알고리즘을 사용하여 이미지 크기를 조정하기위한 ImageFilter 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="de317e1b11599b1e0fc6d8e7b4c5176037b68ef4" translate="yes" xml:space="preserve">
          <source>An ImageFilter class for scaling images using the simplest algorithm.</source>
          <target state="translated">가장 간단한 알고리즘을 사용하여 이미지 크기를 조정하기위한 ImageFilter 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="8915cb730aad203f242dc412b797792550aa7071" translate="yes" xml:space="preserve">
          <source>An ImageFilter class for scaling images using the simplest algorithm. This class extends the basic ImageFilter Class to scale an existing image and provide a source for a new image containing the resampled image. The pixels in the source image are sampled to produce pixels for an image of the specified size by replicating rows and columns of pixels to scale up or omitting rows and columns of pixels to scale down.</source>
          <target state="translated">가장 간단한 알고리즘을 사용하여 이미지 크기를 조정하기위한 ImageFilter 클래스입니다. 이 클래스는 기본 ImageFilter 클래스를 확장하여 기존 이미지의 크기를 조정하고 리샘플링 된 이미지를 포함하는 새 이미지의 소스를 제공합니다. 소스 이미지의 픽셀은 축소를 위해 픽셀의 행과 열을 복제하거나 픽셀의 행과 열을 생략하여 지정된 크기의 이미지에 대한 픽셀을 생성하도록 샘플링됩니다.</target>
        </trans-unit>
        <trans-unit id="970e227ba2f568e1aa11350a1043420cee0a541d" translate="yes" xml:space="preserve">
          <source>An IndexedPropertyDescriptor describes a property that acts like an array and has an indexed read and/or indexed write method to access specific elements of the array.</source>
          <target state="translated">IndexedPropertyDescriptor는 배열처럼 작동하고 배열의 특정 요소에 액세스하기 위해 색인화 된 읽기 및 / 또는 색인화 된 쓰기 메소드를 갖는 특성을 설명합니다.</target>
        </trans-unit>
        <trans-unit id="b175f82551ee9920e38dde5cadd2fbee393dc94a" translate="yes" xml:space="preserve">
          <source>An InitialContext instance is not synchronized against concurrent access by multiple threads. Multiple threads each manipulating a different InitialContext instance need not synchronize. Threads that need to access a single InitialContext instance concurrently should synchronize amongst themselves and provide the necessary locking.</source>
          <target state="translated">InitialContext 인스턴스는 여러 스레드의 동시 액세스와 동기화되지 않습니다. 각각 다른 InitialContext 인스턴스를 조작하는 여러 스레드는 동기화 할 필요가 없습니다. 단일 InitialContext 인스턴스에 동시에 액세스해야하는 스레드는 서로 동기화하고 필요한 잠금을 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="062eb8a9826b6596b750d38bfa86f793f0d1ad24" translate="yes" xml:space="preserve">
          <source>An InputMethodHighlight is used to describe the highlight attributes of text being composed.</source>
          <target state="translated">InputMethodHighlight는 작성중인 텍스트의 강조 속성을 설명하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d6af187949a5a372eb53d647c2a99b68009d49d5" translate="yes" xml:space="preserve">
          <source>An InputMethodHighlight is used to describe the highlight attributes of text being composed. The description can be at two levels: at the abstract level it specifies the conversion state and whether the text is selected; at the concrete level it specifies style attributes used to render the highlight. An InputMethodHighlight must provide the description at the abstract level; it may or may not provide the description at the concrete level. If no concrete style is provided, a renderer should use &lt;a href=&quot;../toolkit#mapInputMethodHighlight(java.awt.im.InputMethodHighlight)&quot;&gt;&lt;code&gt;Toolkit.mapInputMethodHighlight(java.awt.im.InputMethodHighlight)&lt;/code&gt;&lt;/a&gt; to map to a concrete style.</source>
          <target state="translated">InputMethodHighlight는 작성중인 텍스트의 강조 속성을 설명하는 데 사용됩니다. 설명은 두 가지 수준이 될 수 있습니다. 추상 수준에서는 변환 상태와 텍스트 선택 여부를 지정합니다. 구체적인 수준에서 강조 표시를 렌더링하는 데 사용되는 스타일 속성을 지정합니다. InputMethodHighlight는 추상 수준에서 설명을 제공해야합니다. 구체적인 수준에서 설명을 제공하거나 제공하지 않을 수 있습니다. 구체적인 스타일이 제공되지 않은 경우 렌더러는 &lt;a href=&quot;../toolkit#mapInputMethodHighlight(java.awt.im.InputMethodHighlight)&quot;&gt; &lt;code&gt;Toolkit.mapInputMethodHighlight(java.awt.im.InputMethodHighlight)&lt;/code&gt; &lt;/a&gt; 를 사용 하여 구체적인 스타일에 매핑해야합니다.</target>
        </trans-unit>
        <trans-unit id="db071701ada68a4540ff53c966e7be02d8daf402" translate="yes" xml:space="preserve">
          <source>An InputSource object belongs to the application: the SAX parser shall never modify it in any way (it may modify a copy if necessary). However, standard processing of both byte and character streams is to close them on as part of end-of-parse cleanup, so applications should not attempt to re-use such streams after they have been handed to a parser.</source>
          <target state="translated">InputSource 객체는 응용 프로그램에 속합니다. SAX 파서는 어떤 방식으로도이를 수정해서는 안됩니다 (필요한 경우 복사본을 수정할 수 있음). 그러나 바이트 및 문자 스트림의 표준 처리는 구문 분석 끝 정리의 일부로 닫는 것이므로 응용 프로그램은 이러한 스트림이 파서에 전달 된 후에 다시 사용하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="3ba1bea1ccdbd14c5b86dc78157111d9f38bac03" translate="yes" xml:space="preserve">
          <source>An InputSource object describing the new external subset to be used by the parser, or null to indicate that no external subset is provided.</source>
          <target state="translated">파서에서 사용할 새 외부 하위 집합을 설명하는 InputSource 개체 또는 외부 하위 집합이 제공되지 않음을 나타내는 null입니다.</target>
        </trans-unit>
        <trans-unit id="0b24e1b20a78620afd71ea4094ffda97b4450a15" translate="yes" xml:space="preserve">
          <source>An InputSource object describing the new input source to be used by the parser. Returning null directs the parser to resolve the system ID against the base URI and open a connection to resulting URI.</source>
          <target state="translated">파서에서 사용할 새 입력 소스를 설명하는 InputSource 개체입니다. null을 반환하면 파서가 기본 URI에 대해 시스템 ID를 확인하고 결과 URI에 대한 연결을 열도록 지시합니다.</target>
        </trans-unit>
        <trans-unit id="229e2f78eefaeeeebc8da6c3a3131c30639afffc" translate="yes" xml:space="preserve">
          <source>An InputSource object describing the new input source, or null to request that the parser open a regular URI connection to the system identifier.</source>
          <target state="translated">새 입력 소스를 설명하는 InputSource 개체 또는 파서가 시스템 식별자에 대한 일반 URI 연결을 열도록 요청하는 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="8247e8ae0f6557d3464f8b4d4d4b07f9369d8970" translate="yes" xml:space="preserve">
          <source>An InputSource, or null if Source can not be converted.</source>
          <target state="translated">InputSource, 또는 Source를 변환 할 수없는 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="aba9d7808ff6c87be02cfaaa0fe0a751d60ec901" translate="yes" xml:space="preserve">
          <source>An InputStreamReader is a bridge from byte streams to character streams: It reads bytes and decodes them into characters using a specified &lt;a href=&quot;../nio/charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">InputStreamReader는 바이트 스트림에서 문자 스트림으로의 브릿지입니다 . 지정된 &lt;a href=&quot;../nio/charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; 을&lt;/a&gt; 사용하여 바이트를 읽고 문자로 디코딩합니다 .</target>
        </trans-unit>
        <trans-unit id="b25c4c44637dd88f8ef581bd6ecb3f8880d4c2b5" translate="yes" xml:space="preserve">
          <source>An InputStreamReader is a bridge from byte streams to character streams: It reads bytes and decodes them into characters using a specified &lt;a href=&quot;../nio/charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt;. The charset that it uses may be specified by name or may be given explicitly, or the platform's default charset may be accepted.</source>
          <target state="translated">InputStreamReader는 바이트 스트림에서 문자 스트림으로의 브릿지입니다. 지정된 &lt;a href=&quot;../nio/charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; &lt;/a&gt; 사용하여 바이트를 읽고 문자로 디코딩합니다. . . 사용하는 문자 세트는 이름으로 지정되거나 명시 적으로 지정되거나 플랫폼의 기본 문자 세트가 승인 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1615ac13472d339c0a7fff811d2624f3f2d6a386" translate="yes" xml:space="preserve">
          <source>An Integer of 0 if this isn't selected or an Integer of 1 if this is selected.</source>
          <target state="translated">선택하지 않은 경우 정수 0, 선택하면 정수 1.</target>
        </trans-unit>
        <trans-unit id="4e282106af74d7bbea8d45ea2bea92b03d0cc9ca" translate="yes" xml:space="preserve">
          <source>An Integer of 0.</source>
          <target state="translated">0의 정수.</target>
        </trans-unit>
        <trans-unit id="e25f8778a7acb57ecbc8f76157f2e7d777272a00" translate="yes" xml:space="preserve">
          <source>An Integer of 1.</source>
          <target state="translated">1의 정수.</target>
        </trans-unit>
        <trans-unit id="8248bc94ac59984d564244ebfaa48c982dcfd893" translate="yes" xml:space="preserve">
          <source>An Integer representing the data type. For &lt;code&gt;JDBCType&lt;/code&gt;, the value will be the same value as in &lt;code&gt;Types&lt;/code&gt; for the data type.</source>
          <target state="translated">데이터 유형을 나타내는 정수입니다. 들면 &lt;code&gt;JDBCType&lt;/code&gt; 의 값과 동일한 값이 될 것이다 &lt;code&gt;Types&lt;/code&gt; 의 데이터 유형.</target>
        </trans-unit>
        <trans-unit id="a34ccd4915933855882fb3994eeadf0216fddd30" translate="yes" xml:space="preserve">
          <source>An Integer representing the vendor specific data type</source>
          <target state="translated">공급 업체별 데이터 유형을 나타내는 정수</target>
        </trans-unit>
        <trans-unit id="3680dbb15da07882a3b83576060c6ac4cc0fc961" translate="yes" xml:space="preserve">
          <source>An InvalidKeyException with a detail message.</source>
          <target state="translated">세부 메시지가있는 InvalidKeyException입니다.</target>
        </trans-unit>
        <trans-unit id="dc59b05409684c3be739fbe664b962af3d646193" translate="yes" xml:space="preserve">
          <source>An InvalidKeyException with no detail message.</source>
          <target state="translated">세부 메시지가없는 InvalidKeyException</target>
        </trans-unit>
        <trans-unit id="f82726191af9e4037f87325b6ef69bc023b200b4" translate="yes" xml:space="preserve">
          <source>An InvalidOpenTypeException with a detail message.</source>
          <target state="translated">세부 메시지가있는 InvalidOpenTypeException입니다.</target>
        </trans-unit>
        <trans-unit id="a337087b8fc07fcd230bf927b149b6cfbe5dcedc" translate="yes" xml:space="preserve">
          <source>An InvalidOpenTypeException with no detail message.</source>
          <target state="translated">세부 메시지가없는 InvalidOpenTypeException입니다.</target>
        </trans-unit>
        <trans-unit id="357d8263f54541263b646f9c4f71f8fd9cccc4b4" translate="yes" xml:space="preserve">
          <source>An Iterator over String elements is returned in an arbitrary, &lt;strong&gt;implementation dependent&lt;/strong&gt;, order.</source>
          <target state="translated">String 요소에 대한 Iterator는 &lt;strong&gt;구현에 따라&lt;/strong&gt; 임의의 순서 로 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="70a4c3fb116f4cb8fa098f1b416850a522db26c4" translate="yes" xml:space="preserve">
          <source>An Iterator specialized for &lt;code&gt;double&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;double&lt;/code&gt; 특화된 반복자 값에 .</target>
        </trans-unit>
        <trans-unit id="155a282951704944e9cb6e10bac0867700c1d539" translate="yes" xml:space="preserve">
          <source>An Iterator specialized for &lt;code&gt;int&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;int&lt;/code&gt; 를 위한 Iterator 값에 .</target>
        </trans-unit>
        <trans-unit id="3bd0758c0ccd2df72b37d50b6c0c974cfde9e265" translate="yes" xml:space="preserve">
          <source>An Iterator specialized for &lt;code&gt;long&lt;/code&gt; values.</source>
          <target state="translated">&lt;code&gt;long&lt;/code&gt; 전문화 된 반복자 값에 .</target>
        </trans-unit>
        <trans-unit id="d0bc88a2899a5640a06bc758cddba83c6d9e2461" translate="yes" xml:space="preserve">
          <source>An LDAP DNS provider can be used in environments where the default DNS resolution mechanism is not sufficient to accurately pinpoint the correct LDAP servers needed to perform LDAP operations. For example, in an environment containing a mix of &lt;code&gt;ldap&lt;/code&gt; and &lt;code&gt;ldaps&lt;/code&gt; servers you may want the &lt;a href=&quot;../ldapcontext&quot;&gt;LdapContext&lt;/a&gt; to query &lt;code&gt;ldaps&lt;/code&gt; servers only.</source>
          <target state="translated">LDAP DNS 공급자는 기본 DNS 확인 메커니즘이 LDAP 작업을 수행하는 데 필요한 올바른 LDAP 서버를 정확하게 찾아내는 데 충분하지 않은 환경에서 사용할 수 있습니다. 예를 들어, &lt;code&gt;ldap&lt;/code&gt; 및 &lt;code&gt;ldaps&lt;/code&gt; 서버 가 혼합 된 환경 에서 &lt;a href=&quot;../ldapcontext&quot;&gt;LdapContext&lt;/a&gt; 가 &lt;code&gt;ldaps&lt;/code&gt; 서버 만 쿼리하도록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d376cc33b64c9bb61ab3bb5828a7d374619406f3" translate="yes" xml:space="preserve">
          <source>An LDAP DNS provider is a concrete subclass of this class that has a zero-argument constructor. LDAP DNS providers are located using the ServiceLoader facility, as specified by &lt;a href=&quot;../../directory/initialdircontext&quot;&gt;InitialDirectContext&lt;/a&gt;. The &lt;a href=&quot;../../../../../java.base/java/util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; is used to create and register implementations of &lt;code&gt;LdapDnsProvider&lt;/code&gt;.</source>
          <target state="translated">LDAP DNS 공급자는 인수가없는 생성자를 가진이 클래스의 구체적인 하위 클래스입니다. LDAP DNS 공급자는 &lt;a href=&quot;../../directory/initialdircontext&quot;&gt;InitialDirectContext에&lt;/a&gt; 지정된대로 ServiceLoader 기능을 사용하여 찾습니다 . &lt;a href=&quot;../../../../../java.base/java/util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; 이&lt;/a&gt; 구현 생성하고 등록하는데 사용된다 &lt;code&gt;LdapDnsProvider&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="a53095780f8e1614597cbcccccf5b9f62cf1ff4b" translate="yes" xml:space="preserve">
          <source>An LDAP server can send back response controls with an LDAP operation and also with enumeration results, such as those returned by a list or search operation. The &lt;code&gt;LdapContext&lt;/code&gt; provides a method (&lt;code&gt;getResponseControls()&lt;/code&gt;) for getting the response controls sent with an LDAP operation, while the &lt;code&gt;HasControls&lt;/code&gt; interface is used to retrieve response controls associated with enumeration results.</source>
          <target state="translated">LDAP 서버는 LDAP 조작 및 목록 또는 검색 조작에 의해 리턴 된 것과 같은 열거 결과와 함께 응답 제어를 다시 보낼 수 있습니다. &lt;code&gt;LdapContext&lt;/code&gt; 방법 (제공 &lt;code&gt;getResponseControls()&lt;/code&gt; , LDAP 조작과 함께 송신 된 응답 제어를 얻기위한)를 그동안 &lt;code&gt;HasControls&lt;/code&gt; 의 인터페이스가 열거 결과와 연관된 응답 컨트롤을 검색하는 데 사용된다.</target>
        </trans-unit>
        <trans-unit id="ab4cc3bdb94a28c189afa2d189dc64d5e1a90c82" translate="yes" xml:space="preserve">
          <source>An LDAP service provider for &lt;code&gt;ctx&lt;/code&gt; uses a &lt;code&gt;DirStateFactory&lt;/code&gt; (indirectly via &lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt;) and gives it &lt;code&gt;printer&lt;/code&gt; and &lt;code&gt;printerAttrs&lt;/code&gt;. A factory for an LDAP directory might turn &lt;code&gt;printer&lt;/code&gt; into a set of attributes and merge that with &lt;code&gt;printerAttrs&lt;/code&gt;. The service provider then uses the resulting attributes to create an LDAP entry and updates the directory.</source>
          <target state="translated">&lt;code&gt;ctx&lt;/code&gt; 용 LDAP 서비스 제공자 는 &lt;code&gt;DirStateFactory&lt;/code&gt; ( &lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt; 를 통해 간접적으로 )를 사용하여 &lt;code&gt;printer&lt;/code&gt; 및 &lt;code&gt;printerAttrs&lt;/code&gt; 를 제공합니다 . LDAP 디렉토리의 팩토리는 &lt;code&gt;printer&lt;/code&gt; 를 속성 세트로 &lt;code&gt;printerAttrs&lt;/code&gt; 와 병합 할 수 있습니다 . 그런 다음 서비스 제공자는 결과 속성을 사용하여 LDAP 항목을 작성하고 디렉토리를 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="2c6f45db03da3155b831ee0314e342a09c916793" translate="yes" xml:space="preserve">
          <source>An MBean Server can be accessed remotely through a &lt;em&gt;connector&lt;/em&gt;. A connector allows a remote Java application to access an MBean Server in essentially the same way as a local one. The package &lt;a href=&quot;remote/package-summary&quot;&gt;&lt;code&gt;
        javax.management.remote&lt;/code&gt;&lt;/a&gt; defines connectors.</source>
          <target state="translated">MBean 서버는 &lt;em&gt;커넥터를&lt;/em&gt; 통해 원격으로 액세스 할 수 있습니다 . 커넥터는 원격 Java 응용 프로그램이 기본적으로 로컬 MBean 서버와 동일한 방식으로 MBean 서버에 액세스 할 수있게합니다. &lt;a href=&quot;remote/package-summary&quot;&gt; &lt;code&gt; javax.management.remote&lt;/code&gt; &lt;/a&gt; 패키지 는 커넥터를 정의합니다.</target>
        </trans-unit>
        <trans-unit id="fbe2b75cef04f4143b7379aca25f951639c0af3f" translate="yes" xml:space="preserve">
          <source>An MBean Server can be queried for MBeans whose names match certain patterns and/or whose attributes meet certain constraints. Name patterns are constructed using the &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; class and constraints are constructed using the &lt;a href=&quot;query&quot;&gt;&lt;code&gt;Query&lt;/code&gt;&lt;/a&gt; class. The methods &lt;a href=&quot;mbeanserver#queryNames(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt;&lt;code&gt;queryNames&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mbeanserver#queryMBeans(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt;&lt;code&gt;queryMBeans&lt;/code&gt;&lt;/a&gt; then perform the query.</source>
          <target state="translated">MBean 서버는 이름이 특정 패턴과 일치하거나 속성이 특정 제약 조건을 충족하는 MBean에 대해 쿼리 될 수 있습니다. 이름 패턴은 &lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt; 클래스를 사용하여 생성되고 제약 조건은 &lt;a href=&quot;query&quot;&gt; &lt;code&gt;Query&lt;/code&gt; &lt;/a&gt; 클래스를 사용하여 생성됩니다 . 그런 다음 &lt;a href=&quot;mbeanserver#queryNames(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt; &lt;code&gt;queryNames&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;mbeanserver#queryMBeans(javax.management.ObjectName,javax.management.QueryExp)&quot;&gt; &lt;code&gt;queryMBeans&lt;/code&gt; &lt;/a&gt; 메소드 가 쿼리를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="97948eb279240b610b0044cd0566e39e0defdcce" translate="yes" xml:space="preserve">
          <source>An MBean Server can be queried for MBeans whose names match certain patterns and/or whose attributes meet certain constraints. Name patterns are constructed using the &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; class and constraints are constructed using the &lt;a href=&quot;query&quot;&gt;&lt;code&gt;Query&lt;/code&gt;&lt;/a&gt; class. The methods &lt;a href=&quot;mbeanserver#queryNames-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt;&lt;code&gt;queryNames&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mbeanserver#queryMBeans-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt;&lt;code&gt;queryMBeans&lt;/code&gt;&lt;/a&gt; then perform the query.</source>
          <target state="translated">이름이 특정 패턴과 일치하거나 속성이 특정 제한 조건을 충족하는 MBean에 대해 MBean 서버를 조회 할 수 있습니다. 이름 패턴은 &lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt; 클래스를 사용하여 구성되고 제약 조건은 &lt;a href=&quot;query&quot;&gt; &lt;code&gt;Query&lt;/code&gt; &lt;/a&gt; 클래스를 사용하여 구성됩니다 . &lt;a href=&quot;mbeanserver#queryNames-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt; &lt;code&gt;queryNames&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;mbeanserver#queryMBeans-javax.management.ObjectName-javax.management.QueryExp-&quot;&gt; &lt;code&gt;queryMBeans&lt;/code&gt; &lt;/a&gt; 메소드그런 다음 가 조회를 수행합니다.</target>
        </trans-unit>
        <trans-unit id="f09f64f9f479903bc4844a21058804c22f8e764e" translate="yes" xml:space="preserve">
          <source>An MBean Server is an object implementing the interface &lt;a href=&quot;mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt;. The most convenient MBean Server to use is the &lt;em&gt;Platform MBean Server&lt;/em&gt;. This is a single MBean Server that can be shared by different managed components running within the same Java Virtual Machine. The Platform MBean Server is accessed with the method &lt;a href=&quot;../../java/lang/management/managementfactory#getPlatformMBeanServer()&quot;&gt;&lt;code&gt;ManagementFactory.getPlatformMBeanServer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">MBean 서버는 인터페이스 &lt;a href=&quot;mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; 를&lt;/a&gt; 구현하는 객체 입니다. 사용하기에 가장 편리한 MBean 서버는 &lt;em&gt;Platform MBean 서버&lt;/em&gt; 입니다. 이것은 동일한 Java Virtual Machine 내에서 실행되는 다른 관리 구성 요소가 공유 할 수있는 단일 MBean 서버입니다. Platform MBean 서버는 &lt;a href=&quot;../../java/lang/management/managementfactory#getPlatformMBeanServer()&quot;&gt; &lt;code&gt;ManagementFactory.getPlatformMBeanServer()&lt;/code&gt; &lt;/a&gt; 메소드로 액세스됩니다 .</target>
        </trans-unit>
        <trans-unit id="686212de06bf8398834d07ba97c35c4a1aa8d411" translate="yes" xml:space="preserve">
          <source>An MBean Server is an object implementing the interface &lt;a href=&quot;mbeanserver&quot;&gt;&lt;code&gt;MBeanServer&lt;/code&gt;&lt;/a&gt;. The most convenient MBean Server to use is the &lt;em&gt;Platform MBean Server&lt;/em&gt;. This is a single MBean Server that can be shared by different managed components running within the same Java Virtual Machine. The Platform MBean Server is accessed with the method &lt;a href=&quot;../../java/lang/management/managementfactory#getPlatformMBeanServer--&quot;&gt;&lt;code&gt;ManagementFactory.getPlatformMBeanServer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">MBean 서버는 &lt;a href=&quot;mbeanserver&quot;&gt; &lt;code&gt;MBeanServer&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현하는 객체 입니다. 가장 편리한 MBean 서버는 &lt;em&gt;Platform MBean Server&lt;/em&gt; 입니다. 동일한 Java Virtual Machine 내에서 실행되는 다른 관리되는 구성 요소가 공유 할 수있는 단일 MBean 서버입니다. 플랫폼 MBean 서버는 &lt;a href=&quot;../../java/lang/management/managementfactory#getPlatformMBeanServer--&quot;&gt; &lt;code&gt;ManagementFactory.getPlatformMBeanServer()&lt;/code&gt; &lt;/a&gt; 메소드로 액세스합니다 .</target>
        </trans-unit>
        <trans-unit id="8f501a8e0940121cfd56f3f5267fe2b898c29ecc" translate="yes" xml:space="preserve">
          <source>An MBean can be a listener for notifications emitted by other MBeans in the same MBean Server. In this case, it implements &lt;a href=&quot;notificationlistener&quot;&gt;&lt;code&gt;NotificationListener&lt;/code&gt;&lt;/a&gt; and the method &lt;a href=&quot;mbeanserver#addNotificationListener(javax.management.ObjectName,javax.management.ObjectName,javax.management.NotificationFilter,java.lang.Object)&quot;&gt;&lt;code&gt;MBeanServer.addNotificationListener(ObjectName,
        ObjectName, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt; is used to listen.</source>
          <target state="translated">MBean은 동일한 MBean 서버에서 다른 MBean에 의해 생성 된 알림에 대한 리스너가 될 수 있습니다. 이 경우 &lt;a href=&quot;notificationlistener&quot;&gt; &lt;code&gt;NotificationListener&lt;/code&gt; 를&lt;/a&gt; 구현 하고 &lt;a href=&quot;mbeanserver#addNotificationListener(javax.management.ObjectName,javax.management.ObjectName,javax.management.NotificationFilter,java.lang.Object)&quot;&gt; &lt;code&gt;MBeanServer.addNotificationListener(ObjectName, ObjectName, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt; 를 사용하여 수신합니다.</target>
        </trans-unit>
        <trans-unit id="6196712ecd6d41a40d55269bd3af371c1720992a" translate="yes" xml:space="preserve">
          <source>An MBean can be a listener for notifications emitted by other MBeans in the same MBean Server. In this case, it implements &lt;a href=&quot;notificationlistener&quot;&gt;&lt;code&gt;NotificationListener&lt;/code&gt;&lt;/a&gt; and the method &lt;a href=&quot;mbeanserver#addNotificationListener-javax.management.ObjectName-javax.management.ObjectName-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;MBeanServer.addNotificationListener(ObjectName,
        ObjectName, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt; is used to listen.</source>
          <target state="translated">MBean은 같은 MBean 서버의 다른 MBean이 발행 한 알림의 리스너 일 수 있습니다. 이 경우 &lt;a href=&quot;notificationlistener&quot;&gt; &lt;code&gt;NotificationListener&lt;/code&gt; 를&lt;/a&gt; 구현 하고 &lt;a href=&quot;mbeanserver#addNotificationListener-javax.management.ObjectName-javax.management.ObjectName-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;MBeanServer.addNotificationListener(ObjectName, ObjectName, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt; 를 사용하여 청취합니다.</target>
        </trans-unit>
        <trans-unit id="3bd69a8a9ccafe3be26ac8a6d73ee1f2d5de834c" translate="yes" xml:space="preserve">
          <source>An MBean can implement the &lt;a href=&quot;mbeanregistration&quot;&gt;&lt;code&gt;MBeanRegistration&lt;/code&gt;&lt;/a&gt; interface in order to be told when it is registered and unregistered in the MBean Server. Additionally, the &lt;a href=&quot;mbeanregistration#preRegister(javax.management.MBeanServer,javax.management.ObjectName)&quot;&gt;&lt;code&gt;preRegister&lt;/code&gt;&lt;/a&gt; method allows the MBean to get a reference to the &lt;code&gt;MBeanServer&lt;/code&gt; object and to get its &lt;code&gt;ObjectName&lt;/code&gt; within the MBean Server.</source>
          <target state="translated">MBean은 MBean 서버에 등록 및 등록 해제 될 때 알려주기 위해 &lt;a href=&quot;mbeanregistration&quot;&gt; &lt;code&gt;MBeanRegistration&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현할 수 있습니다 . 또한 &lt;a href=&quot;mbeanregistration#preRegister(javax.management.MBeanServer,javax.management.ObjectName)&quot;&gt; &lt;code&gt;preRegister&lt;/code&gt; &lt;/a&gt; 메소드는 MBean이 &lt;code&gt;MBeanServer&lt;/code&gt; 오브젝트에 대한 참조 를 가져오고 MBean 서버 내에서 해당 &lt;code&gt;ObjectName&lt;/code&gt; 을 가져올 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="7a30bf77c8a83531fd79d0d4269b1cd85e0ea8db" translate="yes" xml:space="preserve">
          <source>An MBean can implement the &lt;a href=&quot;mbeanregistration&quot;&gt;&lt;code&gt;MBeanRegistration&lt;/code&gt;&lt;/a&gt; interface in order to be told when it is registered and unregistered in the MBean Server. Additionally, the &lt;a href=&quot;mbeanregistration#preRegister-javax.management.MBeanServer-javax.management.ObjectName-&quot;&gt;&lt;code&gt;preRegister&lt;/code&gt;&lt;/a&gt; method allows the MBean to get a reference to the &lt;code&gt;MBeanServer&lt;/code&gt; object and to get its &lt;code&gt;ObjectName&lt;/code&gt; within the MBean Server.</source>
          <target state="translated">MBean은 &lt;a href=&quot;mbeanregistration&quot;&gt; &lt;code&gt;MBeanRegistration&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현 하여 MBean Server에 등록 및 등록 해제 될 때 알려줍니다. 또한 &lt;a href=&quot;mbeanregistration#preRegister-javax.management.MBeanServer-javax.management.ObjectName-&quot;&gt; &lt;code&gt;preRegister&lt;/code&gt; &lt;/a&gt; 메소드를 사용하면 MBean이 &lt;code&gt;MBeanServer&lt;/code&gt; 오브젝트에 대한 참조 를 얻고 MBean Server 내에서 &lt;code&gt;ObjectName&lt;/code&gt; 을 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e251f67958e23d80ebda42f966d473cba5ea4c1" translate="yes" xml:space="preserve">
          <source>An MBean can perform actions when it is registered in or unregistered from an MBean Server if it implements the &lt;a href=&quot;mbeanregistration&quot;&gt;&lt;code&gt;MBeanRegistration&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">MBean이 &lt;a href=&quot;mbeanregistration&quot;&gt; &lt;code&gt;MBeanRegistration&lt;/code&gt; 을&lt;/a&gt; 구현하는 경우 MBean 서버에 등록되거나 등록 해제 될 때 조치를 수행 할 수 있습니다. 인터페이스를 .</target>
        </trans-unit>
        <trans-unit id="1eed166ef5231879755ac3584c276416cd3f877f" translate="yes" xml:space="preserve">
          <source>An MBean that is of a subclass of &lt;a href=&quot;../../../../java.base/java/lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt; can be used as a class loader to create other MBeans via the method &lt;a href=&quot;../mbeanserver#createMBean(java.lang.String,javax.management.ObjectName,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;MBeanServer.createMBean(String, ObjectName,
	ObjectName, Object[], String[])&lt;/code&gt;&lt;/a&gt;, and to instantiate arbitrary objects via the method &lt;a href=&quot;../mbeanserver#instantiate(java.lang.String,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;MBeanServer.instantiate(String, ObjectName,
	Object[], String[])&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;mlet&quot;&gt;&lt;code&gt;MLet&lt;/code&gt;&lt;/a&gt; class is an example of such an MBean. It is a &lt;a href=&quot;../../../../java.base/java/net/urlclassloader&quot;&gt;&lt;code&gt;URLClassLoader&lt;/code&gt;&lt;/a&gt;, so the list of URLs to load classes from can be configured.</source>
          <target state="translated">&lt;a href=&quot;../../../../java.base/java/lang/classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; &lt;/a&gt; 의 하위 클래스 인 MBean을 클래스 로더로 사용하여 &lt;a href=&quot;../mbeanserver#createMBean(java.lang.String,javax.management.ObjectName,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;MBeanServer.createMBean(String, ObjectName, ObjectName, Object[], String[])&lt;/code&gt; &lt;/a&gt; 메소드를 통해 다른 MBean 을 생성하고 메소드를 통해 임의의 객체를 인스턴스화 할 수 있습니다. &lt;a href=&quot;../mbeanserver#instantiate(java.lang.String,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;MBeanServer.instantiate(String, ObjectName, Object[], String[])&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;mlet&quot;&gt; &lt;code&gt;MLet&lt;/code&gt; &lt;/a&gt; 클래스는 MBean의 예이다. 그것은이다 &lt;a href=&quot;../../../../java.base/java/net/urlclassloader&quot;&gt; &lt;code&gt;URLClassLoader&lt;/code&gt; 를&lt;/a&gt; 구성 할 수 있습니다에서 URL 목록이 클래스를로드 할 수 있도록.</target>
        </trans-unit>
        <trans-unit id="d6e0a47e65f611ffbcc9eebd78bf36dec9777da3" translate="yes" xml:space="preserve">
          <source>An MBean that is of a subclass of &lt;a href=&quot;../../../java/lang/classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt; can be used as a class loader to create other MBeans via the method &lt;a href=&quot;../mbeanserver#createMBean-java.lang.String-javax.management.ObjectName-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;MBeanServer.createMBean(String, ObjectName,
	ObjectName, Object[], String[])&lt;/code&gt;&lt;/a&gt;, and to instantiate arbitrary objects via the method &lt;a href=&quot;../mbeanserver#instantiate-java.lang.String-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;MBeanServer.instantiate(String, ObjectName,
	Object[], String[])&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;mlet&quot;&gt;&lt;code&gt;MLet&lt;/code&gt;&lt;/a&gt; class is an example of such an MBean. It is a &lt;a href=&quot;../../../java/net/urlclassloader&quot;&gt;&lt;code&gt;URLClassLoader&lt;/code&gt;&lt;/a&gt;, so the list of URLs to load classes from can be configured.</source>
          <target state="translated">&lt;a href=&quot;../../../java/lang/classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; &lt;/a&gt; 의 서브 클래스 인 MBean을 클래스 로더로 사용하여 &lt;a href=&quot;../mbeanserver#createMBean-java.lang.String-javax.management.ObjectName-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;MBeanServer.createMBean(String, ObjectName, ObjectName, Object[], String[])&lt;/code&gt; &lt;/a&gt; 메소드를 통해 다른 MBean을 작성하고 메소드 를 통해 임의의 오브젝트를 인스턴스화 할 수 있습니다. &lt;a href=&quot;../mbeanserver#instantiate-java.lang.String-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;MBeanServer.instantiate(String, ObjectName, Object[], String[])&lt;/code&gt; &lt;/a&gt; 입니다. &lt;a href=&quot;mlet&quot;&gt; &lt;code&gt;MLet&lt;/code&gt; &lt;/a&gt; 클래스는 MBean의 예이다. 그것은이다 &lt;a href=&quot;../../../java/net/urlclassloader&quot;&gt; &lt;code&gt;URLClassLoader&lt;/code&gt; 를&lt;/a&gt; 구성 할 수 있습니다에서 URL 목록이 클래스를로드 할 수 있도록.</target>
        </trans-unit>
        <trans-unit id="5ee8e60221fd233794c0a1cdcaf474e9f2e09cf3" translate="yes" xml:space="preserve">
          <source>An MBean that will emit notifications must implement the &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; interface. Usually, it does this by subclassing &lt;a href=&quot;notificationbroadcastersupport&quot;&gt;&lt;code&gt;NotificationBroadcasterSupport&lt;/code&gt;&lt;/a&gt; or delegating to an instance of that class. Here is an example:</source>
          <target state="translated">통지를 발행 할 MBean은 &lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현해야합니다 . 일반적으로 &lt;a href=&quot;notificationbroadcastersupport&quot;&gt; &lt;code&gt;NotificationBroadcasterSupport&lt;/code&gt; &lt;/a&gt; 를 서브 클래 싱하여이를 수행합니다. 하거나 해당 클래스의 인스턴스에 위임하여이를 수행합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4d64b80f2eca1400e06525e015fb932555cdb8a8" translate="yes" xml:space="preserve">
          <source>An MBean which is not an &lt;a href=&quot;mbeanserverdelegate&quot;&gt;&lt;code&gt;MBeanServerDelegate&lt;/code&gt;&lt;/a&gt; may also emit MBeanServerNotifications. In particular, there is a convention for MBeans to emit an MBeanServerNotification for a group of MBeans.</source>
          <target state="translated">&lt;a href=&quot;mbeanserverdelegate&quot;&gt; &lt;code&gt;MBeanServerDelegate&lt;/code&gt; &lt;/a&gt; 가 아닌 MBean 도 MBeanServerNotifications를 생성 할 수 있습니다. 특히, MBean이 MBean 그룹에 대해 MBeanServerNotification을 생성하는 규칙이 있습니다.</target>
        </trans-unit>
        <trans-unit id="95cea1a9029d95f515561a7a036eb04c03f3026b" translate="yes" xml:space="preserve">
          <source>An MBean whose management interface is determined by reflection on a Java interface, and that emits notifications.</source>
          <target state="translated">관리 인터페이스가 Java 인터페이스에 반영되어 결정되고 알림을 생성하는 MBean입니다.</target>
        </trans-unit>
        <trans-unit id="5a5b10fc82b6cd0e3aab40067c0af3302ae2944f" translate="yes" xml:space="preserve">
          <source>An MBean whose management interface is determined by reflection on a Java interface.</source>
          <target state="translated">관리 인터페이스가 Java 인터페이스에 반영되어 결정되는 MBean입니다.</target>
        </trans-unit>
        <trans-unit id="2a16665e14800a2674f071859c3ec94d73b109f2" translate="yes" xml:space="preserve">
          <source>An MBeanPermission contains four items of information:</source>
          <target state="translated">MBeanPermission에는 다음과 같은 네 가지 정보 항목이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="39f9f8437c0998051c143f718f292156eeeaccfe" translate="yes" xml:space="preserve">
          <source>An MBeanServerNotification emitted to denote the registration or unregistration of a group of MBeans has the following characteristics:</source>
          <target state="translated">MBean 그룹의 등록 또는 등록 취소를 표시하기 위해 생성 된 MBeanServerNotification은 다음과 같은 특징이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ba4ca74d70559ec8a55cf7fd17427e673f59ce61" translate="yes" xml:space="preserve">
          <source>An MLet that is not added to the &lt;a href=&quot;classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 추가되지 않습니다 MLet입니다 &lt;a href=&quot;classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; 에&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="684d2ceed16d31eafde9cf6a61f566a3a5e3a6ce" translate="yes" xml:space="preserve">
          <source>An MLet that is not added to the &lt;a href=&quot;classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt;. This class acts exactly like its parent class, &lt;a href=&quot;mlet&quot;&gt;&lt;code&gt;MLet&lt;/code&gt;&lt;/a&gt;, with one exception. When a PrivateMLet is registered in an MBean server, it is not added to that MBean server's &lt;a href=&quot;classloaderrepository&quot;&gt;&lt;code&gt;ClassLoaderRepository&lt;/code&gt;&lt;/a&gt;. This is true because this class implements the interface &lt;a href=&quot;privateclassloader&quot;&gt;&lt;code&gt;PrivateClassLoader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">에 추가되지 않습니다 MLet입니다 &lt;a href=&quot;classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; 에&lt;/a&gt; . 이 클래스는 하나의 예외를 제외하고 는 상위 클래스 &lt;a href=&quot;mlet&quot;&gt; &lt;code&gt;MLet&lt;/code&gt; &lt;/a&gt; 과 똑같이 작동합니다 . PrivateMLet이 MBean 서버에 등록되면 해당 MBean 서버의 &lt;a href=&quot;classloaderrepository&quot;&gt; &lt;code&gt;ClassLoaderRepository&lt;/code&gt; 에&lt;/a&gt; 추가되지 않습니다 . 이것은이 클래스가 &lt;a href=&quot;privateclassloader&quot;&gt; &lt;code&gt;PrivateClassLoader&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현하기 때문에 사실 입니다.</target>
        </trans-unit>
        <trans-unit id="fc13224541b9d8fc1c00fb4c8f5e8f87442494f2" translate="yes" xml:space="preserve">
          <source>An MXBean interface</source>
          <target state="translated">MXBean 인터페이스</target>
        </trans-unit>
        <trans-unit id="989b20991b0fe114ca7ab75b9bf606966fe30205" translate="yes" xml:space="preserve">
          <source>An MXBean interface, or a type referenced within an MXBean interface, can reference another MXBean interface, &lt;em&gt;J&lt;/em&gt;. Then &lt;em&gt;opentype(J)&lt;/em&gt; is &lt;code&gt;SimpleType.OBJECTNAME&lt;/code&gt; and &lt;em&gt;opendata(J)&lt;/em&gt; is &lt;code&gt;ObjectName&lt;/code&gt;.</source>
          <target state="translated">MXBean 인터페이스 또는 MXBean 인터페이스 내에서 참조되는 유형은 다른 MXBean 인터페이스 &lt;em&gt;J를&lt;/em&gt; 참조 할 수 있습니다 . 그런 다음 &lt;em&gt;opentype (J)&lt;/em&gt; 는 &lt;code&gt;SimpleType.OBJECTNAME&lt;/code&gt; 이고 &lt;em&gt;opendata (J)&lt;/em&gt; 는 &lt;code&gt;ObjectName&lt;/code&gt; 입니다. 입니다.</target>
        </trans-unit>
        <trans-unit id="59f414363b8c1ad567d9d9f3cf7a9c9bc32ebdf7" translate="yes" xml:space="preserve">
          <source>An MXBean is a kind of MBean. An MXBean object can be registered directly in the MBean Server, or it can be used as an argument to &lt;a href=&quot;standardmbean&quot;&gt;&lt;code&gt;StandardMBean&lt;/code&gt;&lt;/a&gt; and the resultant MBean registered in the MBean Server.</source>
          <target state="translated">MXBean은 일종의 MBean입니다. MXBean 객체는 MBean 서버에 직접 등록하거나 &lt;a href=&quot;standardmbean&quot;&gt; &lt;code&gt;StandardMBean&lt;/code&gt; 에&lt;/a&gt; 대한 인수 및 MBean 서버에 등록 된 결과 MBean 으로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="20af0d11e58d9b486064088eb6742a33feb2c915" translate="yes" xml:space="preserve">
          <source>An MXBean is a kind of Open MBean, as defined by the &lt;a href=&quot;openmbean/package-summary&quot;&gt;&lt;code&gt;javax.management.openmbean&lt;/code&gt;&lt;/a&gt; package. This means that the types of attributes, operation parameters, and operation return values must all be describable using &lt;em&gt;Open Types&lt;/em&gt;, that is the four standard subclasses of &lt;a href=&quot;openmbean/opentype&quot;&gt;&lt;code&gt;OpenType&lt;/code&gt;&lt;/a&gt;. MXBeans achieve this by mapping Java types into Open Types.</source>
          <target state="translated">MXBean은 &lt;a href=&quot;openmbean/package-summary&quot;&gt; &lt;code&gt;javax.management.openmbean&lt;/code&gt; &lt;/a&gt; 패키지에 의해 정의 된 일종의 Open MBean 입니다. 즉, 속성 유형, 작업 매개 변수 및 작업 반환 값은 모두 &lt;em&gt;Open Types를&lt;/em&gt; 사용하여 설명 할 수 있어야합니다 . 즉, &lt;a href=&quot;openmbean/opentype&quot;&gt; &lt;code&gt;OpenType&lt;/code&gt; &lt;/a&gt; 의 4 가지 표준 하위 클래스입니다. . MXBean은 Java 유형을 Open Type으로 맵핑하여이를 달성합니다.</target>
        </trans-unit>
        <trans-unit id="21cb28e67310ce331577f8cca181796525eed41e" translate="yes" xml:space="preserve">
          <source>An MXBean is a type of Open MBean. However, for compatibility reasons, its &lt;a href=&quot;mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt; is not an &lt;a href=&quot;openmbean/openmbeaninfo&quot;&gt;&lt;code&gt;OpenMBeanInfo&lt;/code&gt;&lt;/a&gt;. In particular, when the type of an attribute, parameter, or operation return value is a primitive type such as &lt;code&gt;int&lt;/code&gt;, or is &lt;code&gt;void&lt;/code&gt; (for a return type), then the attribute, parameter, or operation will be represented respectively by an &lt;a href=&quot;mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt; whose &lt;code&gt;getType()&lt;/code&gt; or &lt;code&gt;
      getReturnType()&lt;/code&gt; returns the primitive name (&quot;&lt;code&gt;int&lt;/code&gt;&quot; etc). This is so even though the mapping rules above specify that the &lt;em&gt;opendata&lt;/em&gt; mapping is the wrapped type (&lt;code&gt;Integer&lt;/code&gt; etc).</source>
          <target state="translated">MXBean은 Open MBean의 한 유형입니다. 그러나 호환성상의 이유로 &lt;a href=&quot;mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;openmbean/openmbeaninfo&quot;&gt; &lt;code&gt;OpenMBeanInfo&lt;/code&gt; &lt;/a&gt; 가 아닙니다 . 특히, 속성, 매개 변수 또는 연산 반환 값의 유형이 &lt;code&gt;int&lt;/code&gt; 와 같은 기본 유형 이거나 &lt;code&gt;void&lt;/code&gt; (반환 유형의 경우) 인 경우 속성, 매개 변수 또는 연산은 각각 &lt;a href=&quot;mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt; 로 표현됩니다 . &lt;a href=&quot;mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt; , 또는 &lt;a href=&quot;mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; 로&lt;/a&gt; &lt;code&gt;getType()&lt;/code&gt; 또는 &lt;code&gt; getReturnType()&lt;/code&gt; 원시 이름 ( &quot;반환 &lt;code&gt;int&lt;/code&gt; &quot;등). 위의 매핑 규칙이 &lt;em&gt;opendata&lt;/em&gt;매핑은 래핑 된 유형 ( &lt;code&gt;Integer&lt;/code&gt; 등)입니다.</target>
        </trans-unit>
        <trans-unit id="dd34150eb05388627fba70e2eb54039cdac7862c" translate="yes" xml:space="preserve">
          <source>An MXBean is a type of Open MBean. However, for compatibility reasons, its &lt;a href=&quot;mbeaninfo&quot;&gt;&lt;code&gt;MBeanInfo&lt;/code&gt;&lt;/a&gt; is not an &lt;a href=&quot;openmbean/openmbeaninfo&quot;&gt;&lt;code&gt;OpenMBeanInfo&lt;/code&gt;&lt;/a&gt;. In particular, when the type of an attribute, parameter, or operation return value is a primitive type such as &lt;code&gt;int&lt;/code&gt;, or is &lt;code&gt;void&lt;/code&gt; (for a return type), then the attribute, parameter, or operation will be represented respectively by an &lt;a href=&quot;mbeanattributeinfo&quot;&gt;&lt;code&gt;MBeanAttributeInfo&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;mbeanparameterinfo&quot;&gt;&lt;code&gt;MBeanParameterInfo&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;mbeanoperationinfo&quot;&gt;&lt;code&gt;MBeanOperationInfo&lt;/code&gt;&lt;/a&gt; whose &lt;code&gt;getType()&lt;/code&gt; or &lt;code&gt;getReturnType()&lt;/code&gt; returns the primitive name (&quot;&lt;code&gt;int&lt;/code&gt;&quot; etc). This is so even though the mapping rules above specify that the &lt;em&gt;opendata&lt;/em&gt; mapping is the wrapped type (&lt;code&gt;Integer&lt;/code&gt; etc).</source>
          <target state="translated">MXBean은 Open MBean 유형입니다. 그러나 호환성을 이유로 &lt;a href=&quot;mbeaninfo&quot;&gt; &lt;code&gt;MBeanInfo&lt;/code&gt; &lt;/a&gt; 는 &lt;a href=&quot;openmbean/openmbeaninfo&quot;&gt; &lt;code&gt;OpenMBeanInfo&lt;/code&gt; &lt;/a&gt; 가 아닙니다 . 특히 속성, 매개 변수 또는 오퍼레이션 리턴 값의 유형이 &lt;code&gt;int&lt;/code&gt; 와 같은 기본 유형 이거나 &lt;code&gt;void&lt;/code&gt; (리턴 유형의 경우) 인 경우 속성, 매개 변수 또는 오퍼레이션은 각각 &lt;a href=&quot;mbeanattributeinfo&quot;&gt; &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; &lt;/a&gt; 로 표시됩니다 . &lt;a href=&quot;mbeanparameterinfo&quot;&gt; &lt;code&gt;MBeanParameterInfo&lt;/code&gt; &lt;/a&gt; , 또는 &lt;a href=&quot;mbeanoperationinfo&quot;&gt; &lt;code&gt;MBeanOperationInfo&lt;/code&gt; 로&lt;/a&gt; &lt;code&gt;getType()&lt;/code&gt; 또는 &lt;code&gt;getReturnType()&lt;/code&gt; 원시 이름 ( &quot;반환 &lt;code&gt;int&lt;/code&gt; &quot;등). 위의 매핑 규칙이 &lt;em&gt;opendata를&lt;/em&gt; 지정하더라도&lt;em&gt;&lt;/em&gt;맵핑은 랩핑 된 유형입니다 ( &lt;code&gt;Integer&lt;/code&gt; 등).</target>
        </trans-unit>
        <trans-unit id="8352f119326f2160cf854e85d7630f9ff86439e2" translate="yes" xml:space="preserve">
          <source>An NT user only has a domain SID if in fact they are logged into an NT domain. If the user is logged into a workgroup or just a standalone configuration, they will NOT have a domain SID.</source>
          <target state="translated">NT 사용자는 실제로 NT 도메인에 로그인 한 경우에만 도메인 SID를 갖습니다. 사용자가 작업 그룹 또는 독립 실행 형 구성에 로그인 한 경우 도메인 SID가 없습니다.</target>
        </trans-unit>
        <trans-unit id="542b942cbce0b3844c4f27707d82afa56cc4e312" translate="yes" xml:space="preserve">
          <source>An Object containing the new value of the attribute.</source>
          <target state="translated">속성의 새로운 값을 포함하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="8df6bdf0b272efecad0ee99b8a017f2209a256fa" translate="yes" xml:space="preserve">
          <source>An Object containing the old value of the attribute.</source>
          <target state="translated">속성의 이전 값을 포함하는 객체입니다.</target>
        </trans-unit>
        <trans-unit id="03fe8ea3b11dee9511e32c9a654b006fa03856b1" translate="yes" xml:space="preserve">
          <source>An Object may not implement this interface and the BeanContextChild interface (or any subinterfaces thereof) they are mutually exclusive.</source>
          <target state="translated">Object는이 인터페이스와 BeanContextChild 인터페이스 (또는 그 하위 인터페이스)를 상호 배타적으로 구현할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="18fab20a8981932e0cdfcb03629a21078cd776dc" translate="yes" xml:space="preserve">
          <source>An ObjectInputStream deserializes primitive data and objects previously written using an ObjectOutputStream.</source>
          <target state="translated">ObjectInputStream은 원시 데이터 및 이전에 ObjectOutputStream을 사용하여 작성된 오브젝트를 직렬화 해제합니다.</target>
        </trans-unit>
        <trans-unit id="e69da085e00a0535ea9b9fd9090f35263c39c4b6" translate="yes" xml:space="preserve">
          <source>An ObjectName can be written as a String with the following elements in order:</source>
          <target state="translated">ObjectName은 다음 요소를 순서대로 사용하여 문자열로 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db3eca8504c2a54b641d40de2aa92e2f7f19aa7b" translate="yes" xml:space="preserve">
          <source>An ObjectName is a &lt;em&gt;property pattern&lt;/em&gt; if it is either a &lt;em&gt;property list pattern&lt;/em&gt; or a &lt;em&gt;property value pattern&lt;/em&gt; or both.</source>
          <target state="translated">ObjectName은 &lt;em&gt;특성 목록 패턴&lt;/em&gt; 이거나 &lt;em&gt;특성 값 패턴&lt;/em&gt; 이거나 둘 다인 경우 &lt;em&gt;특성 패턴&lt;/em&gt; 입니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="c510c9d7563f2a9b7c7d986e71babc6118f59c46" translate="yes" xml:space="preserve">
          <source>An ObjectName is a &lt;em&gt;property value pattern&lt;/em&gt; when at least one of its &lt;em&gt;quoted&lt;/em&gt; or &lt;em&gt;unquoted&lt;/em&gt; key property values contains the wildcard characters asterisk or question mark as described above. In this case it has one or more keys and associated values, with at least one of the values containing wildcard characters. It matches a nonpattern ObjectName whose domain matches and that contains the same keys whose values match; if the property value pattern is also a property list pattern then the nonpattern ObjectName can contain other keys and values.</source>
          <target state="translated">ObjectName은 &lt;em&gt;인용&lt;/em&gt; 되거나 &lt;em&gt;인용되지 않은&lt;/em&gt; 키 특성 값 중 하나 이상 에 와일드 카드 문자 별표 또는 물음표가 포함 된 경우 &lt;em&gt;특성 값 패턴&lt;/em&gt; 입니다. 이 경우 하나 이상의 키와 관련 값이 있으며 하나 이상의 값에 와일드 카드 문자가 포함되어 있습니다. 도메인이 일치하고 값이 일치하는 동일한 키를 포함하는 비 패턴 ObjectName과 일치합니다. 특성 값 패턴이 특성 목록 패턴 인 경우 비 패턴 ObjectName은 다른 키와 값을 포함 할 수 있습니다.&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a363b501b01e48c96e2931f7880a10d1ec8bbb15" translate="yes" xml:space="preserve">
          <source>An ObjectName is a pattern if its domain contains a wildcard or if the ObjectName is a property pattern.</source>
          <target state="translated">도메인에 와일드 카드가 포함되어 있거나 ObjectName이 특성 패턴 인 경우 ObjectName은 패턴입니다.</target>
        </trans-unit>
        <trans-unit id="aab3b6bad2ccd1e7f7e80a174b134a6fde6602c1" translate="yes" xml:space="preserve">
          <source>An ObjectName may be a &lt;em&gt;property list pattern&lt;/em&gt;. In this case it may have zero or more keys and associated values. It matches a nonpattern ObjectName whose domain matches and that contains the same keys and associated values, as well as possibly other keys and values.</source>
          <target state="translated">ObjectName은 &lt;em&gt;프로퍼티리스트 패턴&lt;/em&gt; 일 수 있습니다 . 이 경우 0 개 이상의 키와 관련 값을 가질 수 있습니다. 도메인이 일치하고 동일한 키 및 연관된 값뿐만 아니라 다른 키 및 값을 포함하는 비 패턴 ObjectName과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="efed495670010e9fb0fdfac0012ec76731cee814" translate="yes" xml:space="preserve">
          <source>An ObjectOutputStream writes primitive data types and graphs of Java objects to an OutputStream.</source>
          <target state="translated">ObjectOutputStream은 Java 데이터의 기본 데이터 유형 및 그래프를 OutputStream에 씁니다.</target>
        </trans-unit>
        <trans-unit id="f0bb0438739d4af1d1f3db2d825ca51008a0af6a" translate="yes" xml:space="preserve">
          <source>An ObjectOutputStream writes primitive data types and graphs of Java objects to an OutputStream. The objects can be read (reconstituted) using an ObjectInputStream. Persistent storage of objects can be accomplished by using a file for the stream. If the stream is a network socket stream, the objects can be reconstituted on another host or in another process.</source>
          <target state="translated">ObjectOutputStream은 Java 데이터의 기본 데이터 유형 및 그래프를 OutputStream에 씁니다. ObjectInputStream을 사용하여 객체를 읽거나 재구성 할 수 있습니다. 스트림 용 파일을 사용하여 객체의 영구 저장을 수행 할 수 있습니다. 스트림이 네트워크 소켓 스트림 인 경우 다른 호스트 또는 다른 프로세스에서 오브젝트를 재구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="34e01e685e35391f4028a7c1dab2bc1a0c6b5d2a" translate="yes" xml:space="preserve">
          <source>An OpenDataException with a detail message.</source>
          <target state="translated">세부 메시지가있는 OpenDataException입니다.</target>
        </trans-unit>
        <trans-unit id="06cbacef60277873774d333417d2d8df86173993" translate="yes" xml:space="preserve">
          <source>An OpenDataException with no detail message.</source>
          <target state="translated">세부 메시지가없는 OpenDataException입니다.</target>
        </trans-unit>
        <trans-unit id="18f7952f191dd1ad4237483205ff1688bae7b694" translate="yes" xml:space="preserve">
          <source>An OutputStreamWriter is a bridge from character streams to byte streams: Characters written to it are encoded into bytes using a specified &lt;a href=&quot;../nio/charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">OutputStreamWriter는 문자 스트림에서 바이트 스트림으로의 브릿지입니다. 이에 작성된 문자는 지정된 &lt;a href=&quot;../nio/charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; 을&lt;/a&gt; 사용하여 바이트로 인코딩됩니다 .</target>
        </trans-unit>
        <trans-unit id="9b61197a7d747d33a5b03557fdb06bb541b50fdb" translate="yes" xml:space="preserve">
          <source>An OutputStreamWriter is a bridge from character streams to byte streams: Characters written to it are encoded into bytes using a specified &lt;a href=&quot;../nio/charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt;. The charset that it uses may be specified by name or may be given explicitly, or the platform's default charset may be accepted.</source>
          <target state="translated">OutputStreamWriter는 문자 스트림에서 바이트 스트림으로의 브릿지입니다. 이에 작성된 문자는 지정된 &lt;a href=&quot;../nio/charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; 을&lt;/a&gt; 사용하여 바이트로 인코딩됩니다 . 사용하는 문자 세트는 이름으로 지정되거나 명시 적으로 지정되거나 플랫폼의 기본 문자 세트가 승인 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef98f1b76aaa72aa4454b3bcefe3b2b25e3c6a3c" translate="yes" xml:space="preserve">
          <source>An RMI connector client is usually constructed using &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt;, with a &lt;code&gt;JMXServiceURL&lt;/code&gt; that has &lt;code&gt;rmi&lt;/code&gt; as its protocol.</source>
          <target state="translated">RMI 연결기 클라이언트는 일반적으로 사용하여 구성되어 &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; 에를&lt;/a&gt; 으로, &lt;code&gt;JMXServiceURL&lt;/code&gt; 를 가지고 &lt;code&gt;rmi&lt;/code&gt; 의 프로토콜로한다.</target>
        </trans-unit>
        <trans-unit id="99808230987b6e9929e2105f4c3389aec4750422" translate="yes" xml:space="preserve">
          <source>An RMI connector client is usually constructed using &lt;a href=&quot;../jmxconnectorfactory&quot;&gt;&lt;code&gt;JMXConnectorFactory&lt;/code&gt;&lt;/a&gt;, with a &lt;code&gt;JMXServiceURL&lt;/code&gt; that has &lt;code&gt;rmi&lt;/code&gt; or &lt;code&gt;iiop&lt;/code&gt; as its protocol.</source>
          <target state="translated">RMI 커넥터 클라이언트는 일반적으로 프로토콜로 &lt;code&gt;rmi&lt;/code&gt; 또는 &lt;code&gt;iiop&lt;/code&gt; 가 있는 &lt;code&gt;JMXServiceURL&lt;/code&gt; 과 함께 &lt;a href=&quot;../jmxconnectorfactory&quot;&gt; &lt;code&gt;JMXConnectorFactory&lt;/code&gt; 를&lt;/a&gt; 사용하여 구성됩니다 .</target>
        </trans-unit>
        <trans-unit id="4b910edd874b19213945efb1089e2da5eb5ae5c4" translate="yes" xml:space="preserve">
          <source>An RMI connector server can also be created by constructing an instance of &lt;a href=&quot;rmiconnectorserver&quot;&gt;&lt;code&gt;RMIConnectorServer&lt;/code&gt;&lt;/a&gt;, explicitly or through the MBean server's &lt;code&gt;createMBean&lt;/code&gt; method.</source>
          <target state="translated">RMI 커넥터 서버는 명시 적으로 또는 MBean 서버의 &lt;code&gt;createMBean&lt;/code&gt; 메소드를 통해 &lt;a href=&quot;rmiconnectorserver&quot;&gt; &lt;code&gt;RMIConnectorServer&lt;/code&gt; &lt;/a&gt; 인스턴스를 구성하여 작성할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1dc09f4208b4223c4f8a1f92d1b7d0592ec2bd1d" translate="yes" xml:space="preserve">
          <source>An RMI object representing a connector server.</source>
          <target state="translated">커넥터 서버를 나타내는 RMI 객체</target>
        </trans-unit>
        <trans-unit id="15984ae24067774af2dab2a68552a319f1c32556" translate="yes" xml:space="preserve">
          <source>An RMI object representing a connector server. Remote clients can make connections using the &lt;a href=&quot;#newClient(java.lang.Object)&quot;&gt;&lt;code&gt;newClient(Object)&lt;/code&gt;&lt;/a&gt; method. This method returns an RMI object representing the connection.</source>
          <target state="translated">커넥터 서버를 나타내는 RMI 개체입니다. 원격 클라이언트는 &lt;a href=&quot;#newClient(java.lang.Object)&quot;&gt; &lt;code&gt;newClient(Object)&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 연결할 수 있습니다 . 이 메서드는 연결을 나타내는 RMI 개체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7a37fe4347b2bf73213943b7b26b24257710b125" translate="yes" xml:space="preserve">
          <source>An RMI object representing a connector server. Remote clients can make connections using the &lt;a href=&quot;rmiserverimpl#newClient-java.lang.Object-&quot;&gt;&lt;code&gt;newClient(Object)&lt;/code&gt;&lt;/a&gt; method. This method returns an RMI object representing the connection.</source>
          <target state="translated">커넥터 서버를 나타내는 RMI 객체 원격 클라이언트는 &lt;a href=&quot;rmiserverimpl#newClient-java.lang.Object-&quot;&gt; &lt;code&gt;newClient(Object)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 연결할 수 있습니다 . 이 메소드는 연결을 나타내는 RMI 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="257af9fd1fb09ba448e6bb98857ce2aa3bb4c280" translate="yes" xml:space="preserve">
          <source>An SCTP channel can only control one SCTP association. An &lt;code&gt;SCTPChannel&lt;/code&gt; is created by invoking one of the &lt;a href=&quot;#open()&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods of this class. A newly-created channel is open but not yet connected, that is, there is no association setup with a remote peer. An attempt to invoke an I/O operation upon an unconnected channel will cause a &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetconnectedexception&quot;&gt;&lt;code&gt;NotYetConnectedException&lt;/code&gt;&lt;/a&gt; to be thrown. An association can be setup by connecting the channel using one of its &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt;&lt;code&gt;connect&lt;/code&gt;&lt;/a&gt; methods. Once connected, the channel remains connected until it is closed. Whether or not a channel is connected may be determined by invoking &lt;a href=&quot;#getRemoteAddresses()&quot;&gt;&lt;code&gt;getRemoteAddresses&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">SCTP 채널은 하나의 SCTP 연결 만 제어 할 수 있습니다. &lt;code&gt;SCTPChannel&lt;/code&gt; 이 중 하나를 호출하여 만든 &lt;a href=&quot;#open()&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 이 클래스의 방법을. 새로 생성 된 채널이 열려 있지만 아직 연결되지 않았습니다. 즉, 원격 피어와의 연결 설정이 없습니다. 연결되지 않은 채널에서 I / O 작업을 호출하려고하면 &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetconnectedexception&quot;&gt; &lt;code&gt;NotYetConnectedException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다. &lt;a href=&quot;#connect(java.net.SocketAddress)&quot;&gt; &lt;code&gt;connect&lt;/code&gt; &lt;/a&gt; 방법 중 하나를 사용하여 채널을 연결하여 연결을 설정할 수 있습니다 . 연결되면 채널이 닫힐 때까지 연결된 상태로 유지됩니다. 채널 연결 여부는 &lt;a href=&quot;#getRemoteAddresses()&quot;&gt; &lt;code&gt;getRemoteAddresses&lt;/code&gt; &lt;/a&gt; 를 호출하여 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6c70287919edd0248af1e471e74c79e8b6a8bcad" translate="yes" xml:space="preserve">
          <source>An SCTP channel supports the following notifications: &lt;a href=&quot;associationchangenotification&quot;&gt;&lt;code&gt;AssociationChangeNotification&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;peeraddresschangenotification&quot;&gt;&lt;code&gt;PeerAddressChangeNotification&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;sendfailednotification&quot;&gt;&lt;code&gt;SendFailedNotification&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;shutdownnotification&quot;&gt;&lt;code&gt;ShutdownNotification&lt;/code&gt;&lt;/a&gt;, and may support additional implementation specific notifications.</source>
          <target state="translated">SCTP 채널은 &lt;a href=&quot;associationchangenotification&quot;&gt; &lt;code&gt;AssociationChangeNotification&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;peeraddresschangenotification&quot;&gt; &lt;code&gt;PeerAddressChangeNotification&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;sendfailednotification&quot;&gt; &lt;code&gt;SendFailedNotification&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;shutdownnotification&quot;&gt; &lt;code&gt;ShutdownNotification&lt;/code&gt; &lt;/a&gt; 알림을 지원하며 추가 구현 특정 알림을 지원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="437df8613063d71242fca8f05319c45a550417cf" translate="yes" xml:space="preserve">
          <source>An SCTP multi channel supports many associations on a single socket. An &lt;code&gt;SctpMultiChannel&lt;/code&gt; is created by invoking the &lt;a href=&quot;#open()&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class. A newly-created channel is open but not yet bound. An attempt to invoke the &lt;a href=&quot;#receive(java.nio.ByteBuffer,T,com.sun.nio.sctp.NotificationHandler)&quot;&gt;&lt;code&gt;receive&lt;/code&gt;&lt;/a&gt; method of an unbound channel will cause the &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; to be thrown. An attempt to invoke the &lt;a href=&quot;#send(java.nio.ByteBuffer,com.sun.nio.sctp.MessageInfo)&quot;&gt;&lt;code&gt;send&lt;/code&gt;&lt;/a&gt; method of an unbound channel will cause it to first invoke the &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method. The address(es) that the channel's socket is bound to can be retrieved by calling &lt;a href=&quot;#getAllLocalAddresses()&quot;&gt;&lt;code&gt;getAllLocalAddresses&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">SCTP 다중 채널은 단일 소켓에서 많은 연결을 지원합니다. &lt;code&gt;SctpMultiChannel&lt;/code&gt; 는 호출에 의해 생성되는 &lt;a href=&quot;#open()&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 이 클래스의 방법을. 새로 생성 된 채널이 열려 있지만 아직 바인딩되지 않았습니다. 바인딩되지 않은 채널 의 &lt;a href=&quot;#receive(java.nio.ByteBuffer,T,com.sun.nio.sctp.NotificationHandler)&quot;&gt; &lt;code&gt;receive&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하려고 하면 &lt;a href=&quot;../../../../../java.base/java/nio/channels/notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다. 바인딩되지 않은 채널 의 &lt;a href=&quot;#send(java.nio.ByteBuffer,com.sun.nio.sctp.MessageInfo)&quot;&gt; &lt;code&gt;send&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하려고하면 먼저 &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 메소드를 호출합니다 . 채널의 소켓이 바인딩 된 주소는 &lt;a href=&quot;#getAllLocalAddresses()&quot;&gt; &lt;code&gt;getAllLocalAddresses&lt;/code&gt; &lt;/a&gt; 를 호출하여 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b06c32cc5dc3b65396e4918b45bb21cb85d6634d" translate="yes" xml:space="preserve">
          <source>An SQL statement with or without IN parameters can be pre-compiled and stored in a &lt;code&gt;PreparedStatement&lt;/code&gt; object. This object can then be used to efficiently execute this statement multiple times.</source>
          <target state="translated">IN 매개 변수가 있거나없는 SQL 문은 미리 컴파일되어 &lt;code&gt;PreparedStatement&lt;/code&gt; 오브젝트에 저장 될 수 있습니다 . 그런 다음이 개체를 사용하여이 문을 여러 번 효율적으로 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f228b50887ffd4b7a10bbdacbb16847f0ada2fd" translate="yes" xml:space="preserve">
          <source>An Throwable object, or null.</source>
          <target state="translated">Throwable 개체 또는 null입니다.</target>
        </trans-unit>
        <trans-unit id="04b48e43382bc4313acaa11e4d8357ed179380cb" translate="yes" xml:space="preserve">
          <source>An URL for reading the resource, or null if the resource could not be found or the caller doesn't have adequate privileges to get the resource.</source>
          <target state="translated">리소스를 읽기위한 URL이거나, 리소스를 찾을 수 없거나 호출자가 리소스를 얻을 수있는 권한이없는 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="6725a2697652eca572f8455ea53d73dcc78a057b" translate="yes" xml:space="preserve">
          <source>An UndoableEdit used to remember AttributeSet changes to an Element.</source>
          <target state="translated">요소에 대한 AttributeSet 변경 사항을 기억하는 데 사용되는 UndoableEdit입니다.</target>
        </trans-unit>
        <trans-unit id="e4672ea4886928b32800d79647876fbb666888d6" translate="yes" xml:space="preserve">
          <source>An XML Namespace has the properties:</source>
          <target state="translated">XML 네임 스페이스에는 다음과 같은 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="3c4d262e1066555065cc0ddf6c0d15b599886c74" translate="yes" xml:space="preserve">
          <source>An XML filter is like an XML reader, except that it obtains its events from another XML reader rather than a primary source like an XML document or database. Filters can modify a stream of events as they pass on to the final application.</source>
          <target state="translated">XML 필터는 XML 문서 나 데이터베이스와 같은 기본 소스가 아닌 다른 XML 판독기에서 이벤트를 얻는다는 점을 제외하면 XML 판독기와 비슷합니다. 필터는 최종 애플리케이션으로 전달되는 이벤트 스트림을 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e185fa58233579ba675a813cb2b77e46f1ec733c" translate="yes" xml:space="preserve">
          <source>An XML processor may choose to completely expand entities before the structure model is passed to the DOM; in this case there will be no &lt;code&gt;EntityReference&lt;/code&gt; nodes in the document tree.</source>
          <target state="translated">XML 프로세서는 구조 모델이 DOM에 전달되기 전에 엔티티를 완전히 확장하도록 선택할 수 있습니다. 이 경우 문서 트리에 &lt;code&gt;EntityReference&lt;/code&gt; 노드 가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="eb1a353ece394413a9fc7c4720437b702b4db83f" translate="yes" xml:space="preserve">
          <source>An XMLFilter object, or null if this feature is not supported.</source>
          <target state="translated">XMLFilter 객체 또는이 기능이 지원되지 않는 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="d58aa97fba1a93b37112ffbf36cd08f1c4b6ad23" translate="yes" xml:space="preserve">
          <source>An XMLReader will throw this exception when it finds an unrecognized feature or property identifier; SAX applications and extensions may use this class for other, similar purposes.</source>
          <target state="translated">XMLReader는 인식 할 수없는 기능이나 속성 식별자를 찾으면이 예외를 발생시킵니다. SAX 애플리케이션 및 확장은 다른 유사한 목적으로이 클래스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2cf7eaeb0c2ee71f16ad77135aef4ec34fbfe40d" translate="yes" xml:space="preserve">
          <source>An XMLReader will throw this exception when it recognizes a feature or property identifier, but cannot perform the requested operation (setting a state or value). Other SAX2 applications and extensions may use this class for similar purposes.</source>
          <target state="translated">XMLReader는 기능 또는 속성 식별자를 인식하지만 요청 된 작업 (상태 또는 값 설정)을 수행 할 수없는 경우이 예외를 throw합니다. 다른 SAX2 응용 프로그램 및 확장은 유사한 목적으로이 클래스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf324feb59f454a23437c33c584f449d5703cf35" translate="yes" xml:space="preserve">
          <source>An XMLStreamReader instance is created with an initial event type START_DOCUMENT. At any moment in time, it has a current event that the methods of the interface access and may load the next event through the &lt;a href=&quot;#next()&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; method. The current event type can be determined by &lt;a href=&quot;#getEventType()&quot;&gt;&lt;code&gt;getEventType()&lt;/code&gt;&lt;/a&gt;, and the next returned by the &lt;a href=&quot;#next()&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">XMLStreamReader 인스턴스는 초기 이벤트 유형 START_DOCUMENT로 생성됩니다. 언제든지 인터페이스의 메소드가 액세스하고 &lt;a href=&quot;#next()&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt; 메소드를 통해 다음 이벤트를로드 할 수있는 현재 이벤트가 있습니다 . 현재 이벤트 유형은 &lt;a href=&quot;#getEventType()&quot;&gt; &lt;code&gt;getEventType()&lt;/code&gt; &lt;/a&gt; 의해 결정되고 다음은 &lt;a href=&quot;#next()&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt; 메서드에 의해 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="53baf35ba2383d74488e4ec7872adfc905cd9ee2" translate="yes" xml:space="preserve">
          <source>An XPath &lt;em&gt;expression&lt;/em&gt; is composed of a &lt;em&gt;location path&lt;/em&gt; and one or more optional &lt;em&gt;predicates&lt;/em&gt;. Expressions may also include XPath variables.</source>
          <target state="translated">XPath &lt;em&gt;표현식&lt;/em&gt; 은 &lt;em&gt;위치 경로&lt;/em&gt; 와 하나 이상의 선택적 &lt;em&gt;술어로 구성&lt;/em&gt; 됩니다. 식에는 XPath 변수도 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="154d80c1e5c16d57c365a94ff996c1a920050690" translate="yes" xml:space="preserve">
          <source>An XPath expression is not thread-safe and not reentrant. In other words, it is the application's responsibility to make sure that one &lt;a href=&quot;xpathexpression&quot;&gt;&lt;code&gt;XPathExpression&lt;/code&gt;&lt;/a&gt; object is not used from more than one thread at any given time, and while the &lt;code&gt;evaluate&lt;/code&gt; method is invoked, applications may not recursively call the &lt;code&gt;evaluate&lt;/code&gt; method.</source>
          <target state="translated">XPath 표현식은 스레드로부터 안전하지 않으며 재진입 할 ​​수 없습니다. 즉, 주어진 시간에 하나 이상의 스레드에서 하나의 &lt;a href=&quot;xpathexpression&quot;&gt; &lt;code&gt;XPathExpression&lt;/code&gt; &lt;/a&gt; 개체가 사용되지 않도록하는 것은 응용 프로그램의 책임 이며, &lt;code&gt;evaluate&lt;/code&gt; 메서드가 호출되는 동안 응용 프로그램은 &lt;code&gt;evaluate&lt;/code&gt; 메서드를 재귀 적으로 호출하지 않을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="553fcf489b2b33f37e795f04be02411d69e025f5" translate="yes" xml:space="preserve">
          <source>An XPath object is not thread-safe and not reentrant. In other words, it is the application's responsibility to make sure that one &lt;a href=&quot;xpath&quot;&gt;&lt;code&gt;XPath&lt;/code&gt;&lt;/a&gt; object is not used from more than one thread at any given time, and while the &lt;code&gt;evaluate&lt;/code&gt; method is invoked, applications may not recursively call the &lt;code&gt;evaluate&lt;/code&gt; method.</source>
          <target state="translated">XPath 개체는 스레드로부터 안전하지 않으며 재진입 할 ​​수 없습니다. 즉, 주어진 시간에 하나 이상의 스레드에서 하나의 &lt;a href=&quot;xpath&quot;&gt; &lt;code&gt;XPath&lt;/code&gt; &lt;/a&gt; 객체가 사용되지 않도록하는 것은 응용 프로그램의 책임 이며, &lt;code&gt;evaluate&lt;/code&gt; 메서드가 호출되는 동안 응용 프로그램은 &lt;code&gt;evaluate&lt;/code&gt; 메서드를 재귀 적으로 호출 할 수 없습니다 .</target>
        </trans-unit>
        <trans-unit id="42eb4bbae3f9ef6ea11c82bbc13281ab0e4c2588" translate="yes" xml:space="preserve">
          <source>An absolute path is complete in that it doesn't need to be combined with other path information in order to locate a file.</source>
          <target state="translated">절대 경로는 파일을 찾기 위해 다른 경로 정보와 결합 될 필요가 없다는 점에서 완전합니다.</target>
        </trans-unit>
        <trans-unit id="bffef8734765daab63d0b5ecd1dfdc4896413c2b" translate="yes" xml:space="preserve">
          <source>An absolute, hierarchical URI with a scheme equal to &lt;code&gt;&quot;file&quot;&lt;/code&gt;, a path representing this abstract pathname, and undefined authority, query, and fragment components</source>
          <target state="translated">&lt;code&gt;&quot;file&quot;&lt;/code&gt; 과 동일한 체계 ,이 추상 경로 이름을 나타내는 경로 및 정의되지 않은 권한, 쿼리 및 조각 구성 요소를 가진 절대 계층 적 URI</target>
        </trans-unit>
        <trans-unit id="aaf73b27871ad2dcf58fe937c4251128a2c44fc2" translate="yes" xml:space="preserve">
          <source>An abstract &lt;code&gt;Spliterator.OfDouble&lt;/code&gt; that implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism.</source>
          <target state="translated">추상 &lt;code&gt;Spliterator.OfDouble&lt;/code&gt; 구현이 있음을 &lt;code&gt;trySplit&lt;/code&gt; 제한된 병렬 처리를 허용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2fa2c5de4495301c17f9c874474b9be3f8f2cfc" translate="yes" xml:space="preserve">
          <source>An abstract &lt;code&gt;Spliterator.OfInt&lt;/code&gt; that implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism.</source>
          <target state="translated">추상 &lt;code&gt;Spliterator.OfInt&lt;/code&gt; 구현이 있음을 &lt;code&gt;trySplit&lt;/code&gt; 제한된 병렬 처리를 허용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6076f97f545a7e444ef14f7c17630cb19e7b3a86" translate="yes" xml:space="preserve">
          <source>An abstract &lt;code&gt;Spliterator.OfLong&lt;/code&gt; that implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism.</source>
          <target state="translated">추상 &lt;code&gt;Spliterator.OfLong&lt;/code&gt; 구현이 있음을 &lt;code&gt;trySplit&lt;/code&gt; 제한된 병렬 처리를 허용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec618e04c159f3233d9d95ebe020e1a095fa7e09" translate="yes" xml:space="preserve">
          <source>An abstract &lt;code&gt;Spliterator&lt;/code&gt; that implements &lt;code&gt;trySplit&lt;/code&gt; to permit limited parallelism.</source>
          <target state="translated">추상 &lt;code&gt;Spliterator&lt;/code&gt; 구현이 있음을 &lt;code&gt;trySplit&lt;/code&gt; 제한된 병렬 처리를 허용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a82fde7ce199ff7c32be17308882626cda28d47" translate="yes" xml:space="preserve">
          <source>An abstract Action providing some convenience methods that may be useful in inserting HTML into an existing document.</source>
          <target state="translated">HTML을 기존 문서에 삽입하는 데 유용 할 수있는 몇 가지 편리한 메서드를 제공하는 추상 액션입니다.</target>
        </trans-unit>
        <trans-unit id="2d692f066c7f569b5d0217e33654206d067b17b8" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving ancestor moved and resized events.</source>
          <target state="translated">상위 이동 및 크기 조정 된 이벤트를 수신하기위한 추상 어댑터 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="8bfeac52f4190e98e7646b42dcac3237bbec9857" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving ancestor moved and resized events. The methods in this class are empty. This class exists as a convenience for creating listener objects.</source>
          <target state="translated">상위 이동 및 크기 조정 된 이벤트를 수신하기위한 추상 어댑터 클래스입니다. 이 클래스의 메서드는 비어 있습니다. 이 클래스는 리스너 객체를 생성하기위한 편의를 위해 존재합니다.</target>
        </trans-unit>
        <trans-unit id="ca3a22ed5cbfa7956410e5fed3aa3ab5abec1c99" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving component events.</source>
          <target state="translated">구성 요소 이벤트를 받기위한 추상 어댑터 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="1224d2a27cc0f6e3fddd78f55e10941457456d6d" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving component events. The methods in this class are empty. This class exists as convenience for creating listener objects.</source>
          <target state="translated">구성 요소 이벤트를 받기위한 추상 어댑터 클래스입니다. 이 클래스의 메서드는 비어 있습니다. 이 클래스는 리스너 객체를 생성하기위한 편의를 위해 존재합니다.</target>
        </trans-unit>
        <trans-unit id="4e156be78ee61b7572ddc3e36c6c52975c5857e4" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving container events.</source>
          <target state="translated">컨테이너 이벤트를 수신하기위한 추상 어댑터 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="f7c0641d8f5f705873c41fa9c04fc4fb1871a7e4" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving container events. The methods in this class are empty. This class exists as convenience for creating listener objects.</source>
          <target state="translated">컨테이너 이벤트를 수신하기위한 추상 어댑터 클래스입니다. 이 클래스의 메서드는 비어 있습니다. 이 클래스는 리스너 객체를 생성하기위한 편의를 위해 존재합니다.</target>
        </trans-unit>
        <trans-unit id="3aeee04e2ccac8b6d2ce2bd0637e436907126e39" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving drag source events.</source>
          <target state="translated">드래그 소스 이벤트를 받기위한 추상 어댑터 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="b1fbf4b6d20c833947749527bd8e84a49fb54eb5" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving drag source events. The methods in this class are empty. This class exists only as a convenience for creating listener objects.</source>
          <target state="translated">드래그 소스 이벤트를 받기위한 추상 어댑터 클래스입니다. 이 클래스의 메서드는 비어 있습니다. 이 클래스는 리스너 객체를 만드는 편의를 위해서만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="21202d558c8fcff4823278bde2e68e36bf15510b" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving drop target events.</source>
          <target state="translated">놓기 대상 이벤트를 받기위한 추상 어댑터 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="81a48cea800c58cc6b860e98cb38e5766fe10a51" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving drop target events. The methods in this class are empty. This class exists only as a convenience for creating listener objects.</source>
          <target state="translated">놓기 대상 이벤트를 받기위한 추상 어댑터 클래스입니다. 이 클래스의 메서드는 비어 있습니다. 이 클래스는 리스너 객체를 만드는 편의를 위해서만 존재합니다.</target>
        </trans-unit>
        <trans-unit id="b3621f48ca850e4a91f321aefd98c17902f86905" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving internal frame events.</source>
          <target state="translated">내부 프레임 이벤트를 수신하기위한 추상 어댑터 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="74027e0dc59af4ab914329967364369a2067e05e" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving internal frame events. The methods in this class are empty. This class exists as convenience for creating listener objects, and is functionally equivalent to the WindowAdapter class in the AWT.</source>
          <target state="translated">내부 프레임 이벤트를 수신하기위한 추상 어댑터 클래스입니다. 이 클래스의 메서드는 비어 있습니다. 이 클래스는 리스너 객체를 만들기위한 편의를 위해 존재하며 AWT의 WindowAdapter 클래스와 기능적으로 동일합니다.</target>
        </trans-unit>
        <trans-unit id="db3dfa7e40e760a2317d0ffb62f73beb79d3373c" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving keyboard events.</source>
          <target state="translated">키보드 이벤트를 받기위한 추상 어댑터 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="d41dae1b2bbc096ec0773757f69155a3f53a07ed" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving keyboard events. The methods in this class are empty. This class exists as convenience for creating listener objects.</source>
          <target state="translated">키보드 이벤트를 받기위한 추상 어댑터 클래스입니다. 이 클래스의 메서드는 비어 있습니다. 이 클래스는 리스너 객체를 생성하기위한 편의를 위해 존재합니다.</target>
        </trans-unit>
        <trans-unit id="0c5a5705c46440a889f881a2dacf5fb8a6ae0ab0" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving keyboard focus events.</source>
          <target state="translated">키보드 포커스 이벤트를 받기위한 추상 어댑터 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="c7d838ebfdf60718c5e32be011278e838f5169f4" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving keyboard focus events. The methods in this class are empty. This class exists as convenience for creating listener objects.</source>
          <target state="translated">키보드 포커스 이벤트를 받기위한 추상 어댑터 클래스입니다. 이 클래스의 메서드는 비어 있습니다. 이 클래스는 리스너 객체를 생성하기위한 편의를 위해 존재합니다.</target>
        </trans-unit>
        <trans-unit id="53cfb8eb5fcadb10d4fa1d68d3ebe2158ba703de" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving mouse events.</source>
          <target state="translated">마우스 이벤트를 받기위한 추상 어댑터 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="a6c2d2922922654cee2fb305c6fa1b985dc20acd" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving mouse events. The methods in this class are empty. This class exists as convenience for creating listener objects.</source>
          <target state="translated">마우스 이벤트를 받기위한 추상 어댑터 클래스입니다. 이 클래스의 메서드는 비어 있습니다. 이 클래스는 리스너 객체를 생성하기위한 편의를 위해 존재합니다.</target>
        </trans-unit>
        <trans-unit id="1344e1c25560f474e44fe5b420f1d6ab62cb1e4e" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving mouse motion events.</source>
          <target state="translated">마우스 모션 이벤트를 받기위한 추상 어댑터 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="16f6766afa5f2240fdd9018d55fee9ece624abc3" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving mouse motion events. The methods in this class are empty. This class exists as convenience for creating listener objects.</source>
          <target state="translated">마우스 모션 이벤트를 받기위한 추상 어댑터 클래스입니다. 이 클래스의 메서드는 비어 있습니다. 이 클래스는 리스너 객체를 생성하기위한 편의를 위해 존재합니다.</target>
        </trans-unit>
        <trans-unit id="1725ec70c594bf6143b68d0d3f69604ee103f163" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving print job events.</source>
          <target state="translated">인쇄 작업 이벤트를 받기위한 추상 어댑터 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="c4b86f946931f8ebeb5bbc62389981f1250c17f9" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving print job events. The methods in this class are empty. This class exists as a convenience for creating listener objects. Extend this class to create a &lt;a href=&quot;printjobevent&quot;&gt;&lt;code&gt;PrintJobEvent&lt;/code&gt;&lt;/a&gt; listener and override the methods for the events of interest. Unlike the &lt;a href=&quot;../../../java/awt/event/componentlistener&quot;&gt;&lt;code&gt;ComponentListener&lt;/code&gt;&lt;/a&gt; interface, this abstract interface provides empty methods so that you only need to define the methods you need, rather than all of the methods.</source>
          <target state="translated">인쇄 작업 이벤트를 받기위한 추상 어댑터 클래스입니다. 이 클래스의 메서드는 비어 있습니다. 이 클래스는 리스너 객체를 생성하기위한 편의를 위해 존재합니다. 이 클래스를 확장하여 &lt;a href=&quot;printjobevent&quot;&gt; &lt;code&gt;PrintJobEvent&lt;/code&gt; &lt;/a&gt; 리스너 를 만들고 관심있는 이벤트에 대한 메서드를 재정의합니다. &lt;a href=&quot;../../../java/awt/event/componentlistener&quot;&gt; &lt;code&gt;ComponentListener&lt;/code&gt; &lt;/a&gt; 인터페이스 와 달리이 추상 인터페이스는 빈 메서드를 제공하므로 모든 메서드가 아닌 필요한 메서드 만 정의하면됩니다.</target>
        </trans-unit>
        <trans-unit id="4962c7979856b07aa0561bb05b61d8eb8f071ac0" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving print job events. The methods in this class are empty. This class exists as a convenience for creating listener objects. Extend this class to create a &lt;a href=&quot;printjobevent&quot;&gt;&lt;code&gt;PrintJobEvent&lt;/code&gt;&lt;/a&gt; listener and override the methods for the events of interest. Unlike the &lt;a href=&quot;/openjdk~8_gui/java/awt/event/componentlistener&quot;&gt;&lt;code&gt;ComponentListener&lt;/code&gt;&lt;/a&gt; interface, this abstract interface provides null methods so that you only need to define the methods you need, rather than all of the methods.</source>
          <target state="translated">인쇄 작업 이벤트를 받기위한 추상 어댑터 클래스입니다. 이 클래스의 메소드는 비어 있습니다. 이 클래스는 리스너 객체를 만들기위한 편의상 존재합니다. 이 클래스를 확장하여 &lt;a href=&quot;printjobevent&quot;&gt; &lt;code&gt;PrintJobEvent&lt;/code&gt; &lt;/a&gt; 리스너 를 작성하고 관심있는 이벤트에 대한 메소드를 대체하십시오. 달리&lt;a href=&quot;/openjdk~8_gui/java/awt/event/componentlistener&quot;&gt; &lt;code&gt;ComponentListener&lt;/code&gt; &lt;/a&gt; 인터페이스추상 인터페이스는 널 메소드를 제공하므로 모든 메소드가 아닌 필요한 메소드 만 정의하면됩니다.</target>
        </trans-unit>
        <trans-unit id="fda01820b10d0edc9d564fb3e812534d40c06b76" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving window events.</source>
          <target state="translated">창 이벤트를 받기위한 추상 어댑터 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="07b786ea2218e6b570f94f2abc57a9f013d5b2dd" translate="yes" xml:space="preserve">
          <source>An abstract adapter class for receiving window events. The methods in this class are empty. This class exists as convenience for creating listener objects.</source>
          <target state="translated">창 이벤트를 받기위한 추상 어댑터 클래스입니다. 이 클래스의 메서드는 비어 있습니다. 이 클래스는 리스너 객체를 생성하기위한 편의를 위해 존재합니다.</target>
        </trans-unit>
        <trans-unit id="a80d551f3b11dff11019244e6d437ea72995aadb" translate="yes" xml:space="preserve">
          <source>An abstract annotation processor designed to be a convenient superclass for most concrete annotation processors.</source>
          <target state="translated">대부분의 구체적인 주석 프로세서에 편리한 수퍼 클래스가되도록 설계된 추상 주석 프로세서.</target>
        </trans-unit>
        <trans-unit id="f912b0a1cd697d8b801afff4e06fbb0cba9cd09c" translate="yes" xml:space="preserve">
          <source>An abstract annotation processor designed to be a convenient superclass for most concrete annotation processors. This class examines annotation values to compute the &lt;a href=&quot;#getSupportedOptions()&quot;&gt;options&lt;/a&gt;, &lt;a href=&quot;#getSupportedAnnotationTypes()&quot;&gt;annotation types&lt;/a&gt;, and &lt;a href=&quot;#getSupportedSourceVersion()&quot;&gt;source version&lt;/a&gt; supported by its subtypes.</source>
          <target state="translated">대부분의 구체적인 주석 프로세서를위한 편리한 수퍼 클래스로 설계된 추상 주석 프로세서입니다. 이 클래스는 주석 값을 검사 하여 해당 하위 유형에서 지원 하는 &lt;a href=&quot;#getSupportedOptions()&quot;&gt;옵션&lt;/a&gt; , &lt;a href=&quot;#getSupportedAnnotationTypes()&quot;&gt;주석 유형&lt;/a&gt; 및 &lt;a href=&quot;#getSupportedSourceVersion()&quot;&gt;소스 버전&lt;/a&gt; 을 계산합니다 .</target>
        </trans-unit>
        <trans-unit id="e5702bfe60fe98c79f1e7d3ecec398a4727eeb65" translate="yes" xml:space="preserve">
          <source>An abstract annotation processor designed to be a convenient superclass for most concrete annotation processors. This class examines annotation values to compute the &lt;a href=&quot;abstractprocessor#getSupportedOptions--&quot;&gt;options&lt;/a&gt;, &lt;a href=&quot;abstractprocessor#getSupportedAnnotationTypes--&quot;&gt;annotation types&lt;/a&gt;, and &lt;a href=&quot;abstractprocessor#getSupportedSourceVersion--&quot;&gt;source version&lt;/a&gt; supported by its subtypes.</source>
          <target state="translated">대부분의 구체적인 주석 프로세서에 편리한 수퍼 클래스가되도록 설계된 추상 주석 프로세서. 이 클래스는 주석 값을 조사하여 &lt;a href=&quot;abstractprocessor#getSupportedOptions--&quot;&gt;옵션&lt;/a&gt; , &lt;a href=&quot;abstractprocessor#getSupportedAnnotationTypes--&quot;&gt;주석 유형&lt;/a&gt; 및 &lt;a href=&quot;abstractprocessor#getSupportedSourceVersion--&quot;&gt;소스 버전&lt;/a&gt; 을 계산합니다. 하위 유형이 지원하는 .</target>
        </trans-unit>
        <trans-unit id="009646b2f615da0514565567d20f108ce6f7a605" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide concrete implementations of the &lt;a href=&quot;../breakiterator&quot;&gt;&lt;code&gt;BreakIterator&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../breakiterator&quot;&gt; &lt;code&gt;BreakIterator&lt;/code&gt; &lt;/a&gt; 클래스 의 구체적인 구현을 제공하는 서비스 제공 업체를위한 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="b764d8e0dd1b7d278f74e81b97506264a244b6bf" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide concrete implementations of the &lt;a href=&quot;../collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; 클래스 의 구체적인 구현을 제공하는 서비스 제공 업체를위한 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="c571755642cefdb0beb7220506bf1152322336ff" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide concrete implementations of the &lt;a href=&quot;../dateformat&quot;&gt;&lt;code&gt;DateFormat&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../dateformat&quot;&gt; &lt;code&gt;DateFormat&lt;/code&gt; 을&lt;/a&gt; 구체적으로 구현하는 서비스 제공 업체를위한 추상 클래스 클래스 .</target>
        </trans-unit>
        <trans-unit id="8da2e0907e0b8e895f3071cd44922aefbb842799" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide concrete implementations of the &lt;a href=&quot;../numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt; 클래스 의 구체적인 구현을 제공하는 서비스 제공 업체를위한 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="3d0d85acde131d691ed85179b364e57876677358" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide concrete implementations of the &lt;a href=&quot;java/text/breakiterator&quot;&gt;&lt;code&gt;BreakIterator&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;java/text/breakiterator&quot;&gt; &lt;code&gt;BreakIterator&lt;/code&gt; &lt;/a&gt; 클래스 의 구체적인 구현을 제공하는 서비스 공급자를위한 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="891f190655f8001c6271633bd1e74d549e67bac5" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide concrete implementations of the &lt;a href=&quot;java/text/collator&quot;&gt;&lt;code&gt;Collator&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;java/text/collator&quot;&gt; &lt;code&gt;Collator&lt;/code&gt; &lt;/a&gt; 클래스 의 구체적인 구현을 제공하는 서비스 공급자를위한 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="983339fb296743d41173f61bc58b33825ab22b44" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide concrete implementations of the &lt;a href=&quot;java/text/dateformat&quot;&gt;&lt;code&gt;DateFormat&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;java/text/dateformat&quot;&gt; &lt;code&gt;DateFormat&lt;/code&gt; &lt;/a&gt; 클래스 의 구체적인 구현을 제공하는 서비스 공급자를위한 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="82fa3acf94d5a8905f7b949c395fbbad59c6216d" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide concrete implementations of the &lt;a href=&quot;java/text/numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;java/text/numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; &lt;/a&gt; 클래스 의 구체적인 구현을 제공하는 서비스 공급자를위한 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="2c06f3dee5f3cf3918d735d064a37ba3b1c2f5ba" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide instances of the &lt;a href=&quot;../dateformatsymbols&quot;&gt;&lt;code&gt;DateFormatSymbols&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../dateformatsymbols&quot;&gt; &lt;code&gt;DateFormatSymbols&lt;/code&gt; &lt;/a&gt; 클래스의 인스턴스를 제공하는 서비스 제공 업체의 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="ade1ba7e233bfd984e9f78cab1f28fbf7f6fa058" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide instances of the &lt;a href=&quot;../decimalformatsymbols&quot;&gt;&lt;code&gt;DecimalFormatSymbols&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../decimalformatsymbols&quot;&gt; &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; &lt;/a&gt; 클래스의 인스턴스를 제공하는 서비스 제공 업체를위한 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="6c53cb4214c22771daf4b1fa5445f875f5c93bff" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide instances of the &lt;a href=&quot;java/text/dateformatsymbols&quot;&gt;&lt;code&gt;DateFormatSymbols&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;java/text/dateformatsymbols&quot;&gt; &lt;code&gt;DateFormatSymbols&lt;/code&gt; &lt;/a&gt; 클래스의 인스턴스를 제공하는 서비스 공급자를위한 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="c7f5bf7f801c2ac8326340b7062fc54e5eaf879e" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide instances of the &lt;a href=&quot;java/text/decimalformatsymbols&quot;&gt;&lt;code&gt;DecimalFormatSymbols&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;java/text/decimalformatsymbols&quot;&gt; &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; &lt;/a&gt; 클래스의 인스턴스를 제공하는 서비스 공급자를위한 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="690c2e1d1018a05068138aed006eaec9ccd9482c" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide locale-dependent &lt;a href=&quot;../calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; parameters.</source>
          <target state="translated">로케일 종속 &lt;a href=&quot;../calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 매개 변수 를 제공하는 서비스 제공자의 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="e70f1bff70fd9287bbc13c67c447ef0a5046c16e" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide locale-dependent &lt;a href=&quot;java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; parameters.</source>
          <target state="translated">로케일 종속 &lt;a href=&quot;java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 매개 변수 를 제공하는 서비스 공급자를위한 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="15118c33856866098bb2758cd887dfb0942afe80" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide localized currency symbols and display names for the &lt;a href=&quot;../currency&quot;&gt;&lt;code&gt;Currency&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">현지화 된 통화 기호 및 &lt;a href=&quot;../currency&quot;&gt; &lt;code&gt;Currency&lt;/code&gt; &lt;/a&gt; 클래스의 표시 이름을 제공하는 서비스 제공 업체를위한 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="cc07eaa2a48ef427eda6417dde036890767564e5" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide localized currency symbols and display names for the &lt;a href=&quot;../currency&quot;&gt;&lt;code&gt;Currency&lt;/code&gt;&lt;/a&gt; class. Note that currency symbols are considered names when determining behaviors described in the &lt;a href=&quot;localeserviceprovider&quot;&gt;&lt;code&gt;LocaleServiceProvider&lt;/code&gt;&lt;/a&gt; specification.</source>
          <target state="translated">현지화 된 통화 기호 및 &lt;a href=&quot;../currency&quot;&gt; &lt;code&gt;Currency&lt;/code&gt; &lt;/a&gt; 클래스의 표시 이름을 제공하는 서비스 제공 업체를위한 추상 클래스입니다 . &lt;a href=&quot;localeserviceprovider&quot;&gt; &lt;code&gt;LocaleServiceProvider&lt;/code&gt; &lt;/a&gt; 사양에 설명 된 동작을 결정할 때 통화 기호는 이름으로 간주됩니다 .</target>
        </trans-unit>
        <trans-unit id="00341cf5d7a0ceb10a82d56698f3720085ee36fd" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide localized currency symbols and display names for the &lt;a href=&quot;java/util/currency&quot;&gt;&lt;code&gt;Currency&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;java/util/currency&quot;&gt; &lt;code&gt;Currency&lt;/code&gt; &lt;/a&gt; 클래스에 대해 지역화 된 통화 기호 및 표시 이름을 제공하는 서비스 공급자를위한 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="108fcb539c49163d7fbd58a0d0e0c4844a08df47" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide localized names for the &lt;a href=&quot;../locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt; 현지화 된 이름을 제공하는 서비스 제공 업체를위한 추상 클래스 클래스의 .</target>
        </trans-unit>
        <trans-unit id="a1f54ecc9f080a4165a5c8333226d771e04ea44b" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide localized names for the &lt;a href=&quot;java/util/locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;java/util/locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt; 클래스에 지역화 된 이름을 제공하는 서비스 공급자의 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="8b256820ed22b57293b577b7d443706b1918e366" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide localized string representations (display names) of &lt;code&gt;Calendar&lt;/code&gt; field values.</source>
          <target state="translated">&lt;code&gt;Calendar&lt;/code&gt; 필드 값 의 지역화 된 문자열 표현 (표시 이름)을 제공하는 서비스 제공자의 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="0b978f1331fba49efd486686b9de04f717be9c60" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide localized time zone names for the &lt;a href=&quot;../timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;../timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt; 클래스의 현지화 된 시간대 이름을 제공하는 서비스 제공 업체의 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="8c365c21a94d38e596f7390a8282f3ab8868922b" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide localized time zone names for the &lt;a href=&quot;../timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; class. The localized time zone names available from the implementations of this class are also the source for the &lt;a href=&quot;../../text/dateformatsymbols#getZoneStrings()&quot;&gt;&lt;code&gt;DateFormatSymbols.getZoneStrings()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt; 클래스에 지역화 된 표준 시간대 이름을 제공하는 서비스 공급자를위한 추상 클래스입니다 . 이 클래스의 구현에서 사용할 수있는 지역화 된 표준 시간대 이름은 &lt;a href=&quot;../../text/dateformatsymbols#getZoneStrings()&quot;&gt; &lt;code&gt;DateFormatSymbols.getZoneStrings()&lt;/code&gt; &lt;/a&gt; 메서드 의 소스이기도합니다 .</target>
        </trans-unit>
        <trans-unit id="b79e07cc378372a1f54085a60400b522e9d8e1bd" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide localized time zone names for the &lt;a href=&quot;../timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; class. The localized time zone names available from the implementations of this class are also the source for the &lt;a href=&quot;../../text/dateformatsymbols#getZoneStrings--&quot;&gt;&lt;code&gt;DateFormatSymbols.getZoneStrings()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;a href=&quot;../timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt; 클래스의 현지화 된 시간대 이름을 제공하는 서비스 제공 업체의 추상 클래스입니다 . 이 클래스의 구현에서 사용 가능한 현지화 된 시간대 이름은 &lt;a href=&quot;../../text/dateformatsymbols#getZoneStrings--&quot;&gt; &lt;code&gt;DateFormatSymbols.getZoneStrings()&lt;/code&gt; &lt;/a&gt; 의 소스이기도합니다. 메소드 .</target>
        </trans-unit>
        <trans-unit id="d3733343af66ba8a789513cef322b2ac47eca612" translate="yes" xml:space="preserve">
          <source>An abstract class for service providers that provide localized time zone names for the &lt;a href=&quot;java/util/timezone&quot;&gt;&lt;code&gt;TimeZone&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">&lt;a href=&quot;java/util/timezone&quot;&gt; &lt;code&gt;TimeZone&lt;/code&gt; &lt;/a&gt; 클래스에 지역화 된 표준 시간대 이름을 제공하는 서비스 공급자를위한 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="1f458cc8e441b88433ddd7e555407de6e6f4d215" translate="yes" xml:space="preserve">
          <source>An abstract class implementing the &lt;code&gt;ImageInputStream&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;ImageInputStream&lt;/code&gt; 을 구현하는 추상 클래스 인터페이스를 입니다.</target>
        </trans-unit>
        <trans-unit id="49343ad1181b51e3671145c945c3b03b831bb8b5" translate="yes" xml:space="preserve">
          <source>An abstract class implementing the &lt;code&gt;ImageInputStream&lt;/code&gt; interface. This class is designed to reduce the number of methods that must be implemented by subclasses.</source>
          <target state="translated">&lt;code&gt;ImageInputStream&lt;/code&gt; 을 구현하는 추상 클래스 인터페이스를 입니다. 이 클래스는 서브 클래스에 의해 구현되어야하는 메소드 수를 줄 이도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="476d7596e90918fe5ce80c2b2b437360aa326e2a" translate="yes" xml:space="preserve">
          <source>An abstract class implementing the &lt;code&gt;ImageOutputStream&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;ImageOutputStream&lt;/code&gt; 인터페이스를 구현하는 추상 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="151c68ec149d25e9b76337087ed8e3618ec31ab9" translate="yes" xml:space="preserve">
          <source>An abstract class implementing the &lt;code&gt;ImageOutputStream&lt;/code&gt; interface. This class is designed to reduce the number of methods that must be implemented by subclasses.</source>
          <target state="translated">&lt;code&gt;ImageOutputStream&lt;/code&gt; 인터페이스를 구현하는 추상 클래스 입니다. 이 클래스는 서브 클래스에 의해 구현되어야하는 메소드 수를 줄 이도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="581db72245ed89b297f1889b35b8f839fba56c57" translate="yes" xml:space="preserve">
          <source>An abstract class providing a &lt;code&gt;RowSet&lt;/code&gt; object with its basic functionality.</source>
          <target state="translated">기본 기능을 가진 &lt;code&gt;RowSet&lt;/code&gt; 객체를 제공하는 추상 클래스 .</target>
        </trans-unit>
        <trans-unit id="83bfc2605cd0955eccf3e3374a0407776f51fb46" translate="yes" xml:space="preserve">
          <source>An abstract class providing a &lt;code&gt;RowSet&lt;/code&gt; object with its basic functionality. The basic functions include having properties and sending event notifications, which all JavaBeans components must implement.</source>
          <target state="translated">기본 기능과 함께 &lt;code&gt;RowSet&lt;/code&gt; 객체를 제공하는 추상 클래스 입니다. 기본 기능에는 모든 JavaBeans 구성 요소가 구현해야하는 속성 포함 및 이벤트 알림 전송이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c5fdd1129f49fb581bd0b43e65a79041140546f9" translate="yes" xml:space="preserve">
          <source>An abstract class providing a &lt;code&gt;RowSet&lt;/code&gt; object with its basic functionality. The basic functions include having properties and sending event notifications, which all JavaBeans&amp;trade; components must implement.</source>
          <target state="translated">기본 기능을 가진 &lt;code&gt;RowSet&lt;/code&gt; 객체를 제공하는 추상 클래스 . 기본 기능에는 모든 JavaBeans &amp;trade; 구성 요소가 구현해야하는 특성 보유 및 이벤트 알림 전송이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="9f4ccadec92f3d6b659e6ebe5ca8e35b4179e48f" translate="yes" xml:space="preserve">
          <source>An abstract class that performs one or more checks on an &lt;code&gt;X509Certificate&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;X509Certificate&lt;/code&gt; 에서 하나 이상의 검사를 수행하는 추상 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="cdc1078a2fabb344fe1cd8c3c00c1d40b579e900" translate="yes" xml:space="preserve">
          <source>An abstract class to be extended by objects that represent metadata (non-image data) associated with images and streams.</source>
          <target state="translated">이미지 및 스트림과 관련된 메타 데이터 (이미지가 아닌 데이터)를 나타내는 객체로 확장 할 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="dd0ebcda77af4d0f30eb7405b6592dcce230b3fb" translate="yes" xml:space="preserve">
          <source>An abstract class to be extended by objects that represent metadata (non-image data) associated with images and streams. Plug-ins represent metadata using opaque, plug-in specific objects. These objects, however, provide the ability to access their internal information as a tree of &lt;code&gt;IIOMetadataNode&lt;/code&gt; objects that support the XML DOM interfaces as well as additional interfaces for storing non-textual data and retrieving information about legal data values. The format of such trees is plug-in dependent, but plug-ins may choose to support a plug-in neutral format described below. A single plug-in may support multiple metadata formats, whose names maybe determined by calling &lt;code&gt;getMetadataFormatNames&lt;/code&gt;. The plug-in may also support a single special format, referred to as the &quot;native&quot; format, which is designed to encode its metadata losslessly. This format will typically be designed specifically to work with a specific file format, so that images may be loaded and saved in the same format with no loss of metadata, but may be less useful for transferring metadata between an &lt;code&gt;ImageReader&lt;/code&gt; and an &lt;code&gt;ImageWriter&lt;/code&gt; for different image formats. To convert between two native formats as losslessly as the image file formats will allow, an &lt;code&gt;ImageTranscoder&lt;/code&gt; object must be used.</source>
          <target state="translated">이미지 및 스트림과 관련된 메타 데이터 (이미지가 아닌 데이터)를 나타내는 객체로 확장 할 추상 클래스입니다. 플러그인은 불투명 한 플러그인 특정 객체를 사용하여 메타 데이터를 나타냅니다. 그러나 이러한 객체 는 XML DOM 인터페이스를 지원하는 &lt;code&gt;IIOMetadataNode&lt;/code&gt; 객체 의 트리와 비 텍스트 데이터를 저장하고 법적 데이터 값에 대한 정보를 검색하기위한 추가 인터페이스로 내부 정보에 액세스 할 수있는 기능을 제공 합니다. 이러한 트리의 형식은 플러그인에 따라 다르지만 플러그인은 아래 설명 된 플러그인 중립 형식을 지원하도록 선택할 수 있습니다. 단일 플러그인은 &lt;code&gt;getMetadataFormatNames&lt;/code&gt; 를 호출하여 이름을 판별 할 수있는 여러 메타 데이터 형식을 지원할 수 있습니다. . 플러그인은 메타 데이터를 무손실로 인코딩하도록 설계된 &quot;네이티브&quot;포맷이라고하는 단일 특수 포맷을 지원할 수도 있습니다. 이 형식은 일반적으로 특정 파일 형식으로 작동하도록 특별히 설계되어 메타 데이터 손실없이 이미지를 동일한 형식으로로드 및 저장할 수 있지만 &lt;code&gt;ImageReader&lt;/code&gt; 와 &lt;code&gt;ImageWriter&lt;/code&gt; 간에 메타 데이터를 전송하는 데 덜 유용 할 수 있습니다.다른 이미지 형식. 이미지 파일 형식이 허용하는 한 두 가지 기본 형식을 무손실로 변환하려면 &lt;code&gt;ImageTranscoder&lt;/code&gt; 개체를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="cf70a982e0aada9eae6b72062b66836fcd899863" translate="yes" xml:space="preserve">
          <source>An abstract class to perform lengthy GUI-interaction tasks in a background thread.</source>
          <target state="translated">백그라운드 스레드에서 긴 GUI 상호 작용 작업을 수행하는 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="19f4fe642093727034f0384a0eca0f7a8f4ae4ec" translate="yes" xml:space="preserve">
          <source>An abstract class to perform lengthy GUI-interaction tasks in a background thread. Several background threads can be used to execute such tasks. However, the exact strategy of choosing a thread for any particular &lt;code&gt;SwingWorker&lt;/code&gt; is unspecified and should not be relied on.</source>
          <target state="translated">백그라운드 스레드에서 긴 GUI 상호 작용 작업을 수행하는 추상 클래스입니다. 여러 백그라운드 스레드를 사용하여 이러한 작업을 실행할 수 있습니다. 그러나 특정 &lt;code&gt;SwingWorker&lt;/code&gt; 에 대한 스레드를 선택하는 정확한 전략 은 지정되지 않았으므로 신뢰할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ca8e76b220adb752c9555d8e37026a909fe93c29" translate="yes" xml:space="preserve">
          <source>An abstract class which initiates and executes a print job.</source>
          <target state="translated">인쇄 작업을 시작하고 실행하는 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="5c676543206e055be60b898ae660b8bb64d66ed6" translate="yes" xml:space="preserve">
          <source>An abstract class which initiates and executes a print job. It provides access to a print graphics object which renders to an appropriate print device.</source>
          <target state="translated">인쇄 작업을 시작하고 실행하는 추상 클래스입니다. 적절한 인쇄 장치로 렌더링되는 인쇄 그래픽 개체에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="04da8c842b3f18e42e336f28bee550671b36a253" translate="yes" xml:space="preserve">
          <source>An abstract class which provides a print graphics context for a page.</source>
          <target state="translated">페이지에 대한 인쇄 그래픽 컨텍스트를 제공하는 추상 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="1dfe431faa6adf161406876fe3d696931fb27142" translate="yes" xml:space="preserve">
          <source>An abstract implementation of &lt;code&gt;UndoableEdit&lt;/code&gt;, implementing simple responses to all boolean methods in that interface.</source>
          <target state="translated">&lt;code&gt;UndoableEdit&lt;/code&gt; 의 추상 구현으로 해당 인터페이스의 모든 부울 메서드에 대한 간단한 응답을 구현합니다.</target>
        </trans-unit>
        <trans-unit id="fbc238f52e9b0369d8d6feac585f532fe3c79392" translate="yes" xml:space="preserve">
          <source>An abstract implementation of a calendar system, used to organize and identify dates.</source>
          <target state="translated">날짜를 구성하고 식별하는 데 사용되는 달력 시스템의 추상 구현입니다.</target>
        </trans-unit>
        <trans-unit id="7b673aa232f472e900373570c4b210073bade5b3" translate="yes" xml:space="preserve">
          <source>An abstract pathname denoting a newly-created empty file</source>
          <target state="translated">새로 작성된 빈 파일을 나타내는 추상 경로 이름</target>
        </trans-unit>
        <trans-unit id="4aa47b72c674eca8830def8ce681627d481a9c32" translate="yes" xml:space="preserve">
          <source>An abstract representation of a &lt;code&gt;Data&lt;/code&gt; type containing a node-set.</source>
          <target state="translated">노드 집합을 포함하는 &lt;code&gt;Data&lt;/code&gt; 유형 의 추상 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="ea4271e4bbe1479d8c1869fa59e4d26f3bf4f83b" translate="yes" xml:space="preserve">
          <source>An abstract representation of a &lt;code&gt;Data&lt;/code&gt; type containing a node-set. The type (class) and ordering of the nodes contained in the set are not defined by this class; instead that behavior should be defined by &lt;code&gt;NodeSetData&lt;/code&gt; subclasses.</source>
          <target state="translated">노드 집합을 포함하는 &lt;code&gt;Data&lt;/code&gt; 유형 의 추상 표현입니다 . 세트에 포함 된 노드의 유형 (클래스) 및 순서는이 클래스에 의해 정의되지 않습니다. 대신 해당 동작은 &lt;code&gt;NodeSetData&lt;/code&gt; 하위 클래스에 의해 정의되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="494a6c486577773915372a9639b81c3c04ab3e43" translate="yes" xml:space="preserve">
          <source>An abstract representation of an algorithm defined in the XML Security specifications.</source>
          <target state="translated">XML 보안 사양에 정의 된 알고리즘의 추상 표현입니다.</target>
        </trans-unit>
        <trans-unit id="cee1d6920bb6616be4b679ca8e4a03353f68b6f5" translate="yes" xml:space="preserve">
          <source>An abstract representation of an algorithm defined in the XML Security specifications. Subclasses represent specific types of XML security algorithms, such as a &lt;a href=&quot;dsig/transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">XML 보안 사양에 정의 된 알고리즘의 추상 표현입니다. 서브 클래스는 &lt;a href=&quot;dsig/transform&quot;&gt; &lt;code&gt;Transform&lt;/code&gt; &lt;/a&gt; 과 같은 특정 유형의 XML 보안 알고리즘을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="83b31a7b61002c7d0f84ed3f8d96a8a46141936d" translate="yes" xml:space="preserve">
          <source>An abstract representation of file and directory pathnames.</source>
          <target state="translated">파일 및 디렉토리 경로 이름의 추상 표현.</target>
        </trans-unit>
        <trans-unit id="0646f6422a002e7ffe51d29120e433fddeccfd3e" translate="yes" xml:space="preserve">
          <source>An abstract representation of the result of dereferencing a &lt;a href=&quot;urireference&quot;&gt;&lt;code&gt;URIReference&lt;/code&gt;&lt;/a&gt; or the input/output of subsequent &lt;a href=&quot;dsig/transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt;s.</source>
          <target state="translated">&lt;a href=&quot;urireference&quot;&gt; &lt;code&gt;URIReference&lt;/code&gt; &lt;/a&gt; 또는 후속 &lt;a href=&quot;dsig/transform&quot;&gt; &lt;code&gt;Transform&lt;/code&gt; &lt;/a&gt; 의 입력 / 출력을 역 참조한 결과의 추상 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="32ac5670eac35de92867a7c9a2546799d04cbeef" translate="yes" xml:space="preserve">
          <source>An abstract representation of the result of dereferencing a &lt;a href=&quot;urireference&quot;&gt;&lt;code&gt;URIReference&lt;/code&gt;&lt;/a&gt; or the input/output of subsequent &lt;a href=&quot;dsig/transform&quot;&gt;&lt;code&gt;Transform&lt;/code&gt;&lt;/a&gt;s. The primary purpose of this interface is to group and provide type safety for all &lt;code&gt;Data&lt;/code&gt; subtypes.</source>
          <target state="translated">&lt;a href=&quot;urireference&quot;&gt; &lt;code&gt;URIReference&lt;/code&gt; &lt;/a&gt; 또는 후속 &lt;a href=&quot;dsig/transform&quot;&gt; &lt;code&gt;Transform&lt;/code&gt; &lt;/a&gt; 의 입력 / 출력을 역 참조한 결과의 추상 표현입니다 . 이 인터페이스의 주요 목적은 모든 &lt;code&gt;Data&lt;/code&gt; 하위 유형에 대해 유형 안전성을 그룹화하고 제공하는 것 입니다.</target>
        </trans-unit>
        <trans-unit id="e0f679c55894b5892fa60675f66c243d1d8b3ec2" translate="yes" xml:space="preserve">
          <source>An abstract superclass for encoding and writing images.</source>
          <target state="translated">이미지 인코딩 및 쓰기를위한 추상 슈퍼 클래스.</target>
        </trans-unit>
        <trans-unit id="48c806f3edb65492962375f9ceccf41f068921f8" translate="yes" xml:space="preserve">
          <source>An abstract superclass for encoding and writing images. This class must be subclassed by classes that write out images in the context of the Java Image I/O framework.</source>
          <target state="translated">이미지 인코딩 및 쓰기를위한 추상 슈퍼 클래스. 이 클래스는 Java Image I / O 프레임 워크의 컨텍스트에서 이미지를 작성하는 클래스로 서브 클래스되어야합니다.</target>
        </trans-unit>
        <trans-unit id="d1c16b9886fcbee0d8fe48ece5dfb8fb96ec7a5b" translate="yes" xml:space="preserve">
          <source>An abstract superclass for parsing and decoding of images.</source>
          <target state="translated">이미지 파싱 및 디코딩을위한 추상 슈퍼 클래스.</target>
        </trans-unit>
        <trans-unit id="7d0189d2489db5e3511b17ed06bfc874d45e8dc5" translate="yes" xml:space="preserve">
          <source>An abstract superclass for parsing and decoding of images. This class must be subclassed by classes that read in images in the context of the Java Image I/O framework.</source>
          <target state="translated">이미지 파싱 및 디코딩을위한 추상 슈퍼 클래스. 이 클래스는 Java Image I / O 프레임 워크의 컨텍스트에서 이미지를 읽는 클래스로 서브 클래스되어야합니다.</target>
        </trans-unit>
        <trans-unit id="c596146e8da9e7a6ca55d13ebcccbd3439a4fcf9" translate="yes" xml:space="preserve">
          <source>An abstract wrapper class for an &lt;code&gt;EventListener&lt;/code&gt; class which associates a set of additional parameters with the listener.</source>
          <target state="translated">추가 매개 변수 세트를 리스너와 연관 시키는 &lt;code&gt;EventListener&lt;/code&gt; 클래스 의 추상 랩퍼 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="6da126755702abead0fc328ffed9b176b2437d17" translate="yes" xml:space="preserve">
          <source>An abstract wrapper class for an &lt;code&gt;EventListener&lt;/code&gt; class which associates a set of additional parameters with the listener. Subclasses must provide the storage and accessor methods for the additional arguments or parameters.</source>
          <target state="translated">추가 매개 변수 세트를 리스너와 연관 시키는 &lt;code&gt;EventListener&lt;/code&gt; 클래스 의 추상 랩퍼 클래스입니다 . 서브 클래스는 추가 인수 또는 매개 변수에 대한 스토리지 및 접근 자 메소드를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="7078ed120dbbd2dd1dbe2cc16f46dc2d5971e895" translate="yes" xml:space="preserve">
          <source>An action that assumes it's being fired on a JEditorPane with a StyledEditorKit (or subclass) installed.</source>
          <target state="translated">StyledEditorKit (또는 하위 클래스)가 설치된 JEditorPane에서 발생한다고 가정하는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="4cc79af7a96a1de7b4bf7e09747a19fd5cbdf592" translate="yes" xml:space="preserve">
          <source>An action that assumes it's being fired on a JEditorPane with a StyledEditorKit (or subclass) installed. This has some convenience methods for causing character or paragraph level attribute changes. The convenience methods will throw an IllegalArgumentException if the assumption of a StyledDocument, a JEditorPane, or a StyledEditorKit fail to be true.</source>
          <target state="translated">StyledEditorKit (또는 하위 클래스)가 설치된 JEditorPane에서 발생한다고 가정하는 작업입니다. 여기에는 문자 또는 단락 수준 속성을 변경하는 몇 가지 편리한 방법이 있습니다. StyledDocument, JEditorPane 또는 StyledEditorKit의 가정이 참이 아닌 경우 편의 메서드는 IllegalArgumentException을 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="a5b8521c4bb18bf7a869c1c71aac429aaef0c884" translate="yes" xml:space="preserve">
          <source>An action to be performed in response to parsing a tag.</source>
          <target state="translated">태그 구문 분석에 대한 응답으로 수행 할 작업입니다.</target>
        </trans-unit>
        <trans-unit id="4f99e765da5328ec74a22237e78ad3368f29ed34" translate="yes" xml:space="preserve">
          <source>An action to be performed in response to parsing a tag. This allows customization of how each tag is handled and avoids a large switch statement.</source>
          <target state="translated">태그 구문 분석에 대한 응답으로 수행 할 작업입니다. 이를 통해 각 태그가 처리되는 방식을 사용자 정의 할 수 있으며 큰 switch 문을 피할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6032d8cc5c1fe12fd9e0e8ecb153c9c30d2684e5" translate="yes" xml:space="preserve">
          <source>An action to set foreground color.</source>
          <target state="translated">전경색을 설정하는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="df85bd5c4c3d45f86e93e08f6aaa83530af214ce" translate="yes" xml:space="preserve">
          <source>An action to set foreground color. This sets the &lt;code&gt;StyleConstants.Foreground&lt;/code&gt; attribute for the currently selected range of the target JEditorPane. This is done by calling &lt;code&gt;StyledDocument.setCharacterAttributes&lt;/code&gt; on the styled document associated with the target JEditorPane.</source>
          <target state="translated">전경색을 설정하는 작업입니다. 이것은 대상 JEditorPane의 현재 선택된 범위에 대한 &lt;code&gt;StyleConstants.Foreground&lt;/code&gt; 속성을 설정합니다 . 이는 대상 JEditorPane과 연관된 스타일 문서에서 &lt;code&gt;StyledDocument.setCharacterAttributes&lt;/code&gt; 를 호출하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="c646f38d99721f3a0502debfd4a1f6286e7e0149" translate="yes" xml:space="preserve">
          <source>An action to set paragraph alignment.</source>
          <target state="translated">단락 정렬을 설정하는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="ab4eb01c65a0d85f3bcdae7426f8c7a1c261795d" translate="yes" xml:space="preserve">
          <source>An action to set paragraph alignment. This sets the &lt;code&gt;StyleConstants.Alignment&lt;/code&gt; attribute for the currently selected range of the target JEditorPane. This is done by calling &lt;code&gt;StyledDocument.setParagraphAttributes&lt;/code&gt; on the styled document associated with the target JEditorPane.</source>
          <target state="translated">단락 정렬을 설정하는 작업입니다. 이것은 대상 JEditorPane의 현재 선택된 범위에 대한 &lt;code&gt;StyleConstants.Alignment&lt;/code&gt; 속성을 설정합니다 . 이는 대상 JEditorPane과 연관된 스타일 문서에서 &lt;code&gt;StyledDocument.setParagraphAttributes&lt;/code&gt; 를 호출하여 수행됩니다 .</target>
        </trans-unit>
        <trans-unit id="94356ea789a9c5c5eb3baa5b626b119a927a7b6c" translate="yes" xml:space="preserve">
          <source>An action to set the font family in the associated JEditorPane.</source>
          <target state="translated">연관된 JEditorPane에서 글꼴 패밀리를 설정하는 조치입니다.</target>
        </trans-unit>
        <trans-unit id="a40f2a4349ac038ba1ad7fa74bee679b141c86c7" translate="yes" xml:space="preserve">
          <source>An action to set the font family in the associated JEditorPane. This will use the family specified as the command string on the ActionEvent if there is one, otherwise the family that was initialized with will be used.</source>
          <target state="translated">연관된 JEditorPane에서 글꼴 패밀리를 설정하는 조치입니다. 이것은 ActionEvent의 명령 문자열로 지정된 패밀리가 있으면 사용합니다. 그렇지 않으면 초기화 된 패밀리가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="61ca44f68ff9d90ad154255a6ea4cedddffc5d51" translate="yes" xml:space="preserve">
          <source>An action to set the font size in the associated JEditorPane.</source>
          <target state="translated">연관된 JEditorPane에서 글꼴 크기를 설정하는 조치입니다.</target>
        </trans-unit>
        <trans-unit id="8ff8be4e56dfd0adafb3f51aa2d15867a8926758" translate="yes" xml:space="preserve">
          <source>An action to set the font size in the associated JEditorPane. This will use the size specified as the command string on the ActionEvent if there is one, otherwise the size that was initialized with will be used.</source>
          <target state="translated">연관된 JEditorPane에서 글꼴 크기를 설정하는 조치입니다. ActionEvent에 명령 문자열로 지정된 크기가 있으면 사용하고 그렇지 않으면 초기화 된 크기가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d5ac5013e9a52fc37cba10d88264c0bf69a39d8e" translate="yes" xml:space="preserve">
          <source>An action to toggle the bold attribute.</source>
          <target state="translated">굵은 속성을 전환하는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="9d74cc56a019524d0142fd991432c5a707a97bbc" translate="yes" xml:space="preserve">
          <source>An action to toggle the italic attribute.</source>
          <target state="translated">기울임 꼴 속성을 전환하는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="0327f3bff94038d50ba3ba62187a0ae4039d6b0f" translate="yes" xml:space="preserve">
          <source>An action to toggle the underline attribute.</source>
          <target state="translated">밑줄 속성을 전환하는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="0fdc8c21b5dcef321c426dbd464dc51a4cf035a8" translate="yes" xml:space="preserve">
          <source>An action which causes a component to execute its default action.</source>
          <target state="translated">구성 요소가 기본 작업을 실행하도록하는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="34159b87ca741398b04228ed9addd1c08926e3c0" translate="yes" xml:space="preserve">
          <source>An action which causes a popup to become visible if it is hidden and hidden if it is visible.</source>
          <target state="translated">팝업이 숨겨져 있으면 표시되고 표시되면 숨겨지는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="32c75c5324482d0e906662517c67de8bd78226d1" translate="yes" xml:space="preserve">
          <source>An action which causes a tree node to collapse if expanded and expand if collapsed.</source>
          <target state="translated">트리 노드가 확장되면 축소되고 축소되면 확장되도록하는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="26c59d2eccd45f67377a3a9d440e7a4c3a518eca" translate="yes" xml:space="preserve">
          <source>An action which decrements a value.</source>
          <target state="translated">값을 감소시키는 행동.</target>
        </trans-unit>
        <trans-unit id="d50f5c2570299ac98df617a286c44ae20efea8cb" translate="yes" xml:space="preserve">
          <source>An action which increments a value.</source>
          <target state="translated">값을 증가시키는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="722d485e9e5393ee4ba81b00370dec0f993b8ccb" translate="yes" xml:space="preserve">
          <source>An activating mouse event.</source>
          <target state="translated">활성화 마우스 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="858524d80338de0f4f77d0daea426fe306b79cea" translate="yes" xml:space="preserve">
          <source>An activation descriptor contains the information necessary to activate an object:</source>
          <target state="translated">활성화 설명자는 객체를 활성화하는 데 필요한 정보를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="e4f528286b3a7a3b5eee59f0e9a4bb6487e35029" translate="yes" xml:space="preserve">
          <source>An activation descriptor contains the information necessary to activate an object: the object's group identifier, the object's fully-qualified class name, the object's code location (the location of the class), a codebase URL path, the object's restart &quot;mode&quot;, and, a &quot;marshalled&quot; object that can contain object specific initialization data.</source>
          <target state="translated">활성화 설명자는 객체를 활성화하는 데 필요한 정보를 포함합니다 : 객체의 그룹 식별자, 객체의 정규화 된 클래스 이름, 객체의 코드 위치 (클래스의 위치), 코드베이스 URL 경로, 객체의 재시작 &quot;모드&quot;및 , 객체 별 초기화 데이터를 포함 할 수있는 &quot;마샬링 된&quot;객체입니다.</target>
        </trans-unit>
        <trans-unit id="a1a61b81cb57798e126c7827839997c25882e964" translate="yes" xml:space="preserve">
          <source>An activation group calls its monitor's &lt;code&gt;inactiveObject&lt;/code&gt; method when an object in its group becomes inactive (deactivates).</source>
          <target state="translated">활성 그룹은 그룹 의 오브젝트가 비활성화 (비활성화) 될 때 모니터의 &lt;code&gt;inactiveObject&lt;/code&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="9a4274190220193af229fd53e269f31fe5956ce7" translate="yes" xml:space="preserve">
          <source>An activation group calls its monitor's &lt;code&gt;inactiveObject&lt;/code&gt; method when an object in its group becomes inactive (deactivates). An activation group discovers that an object (that it participated in activating) in its VM is no longer active, via calls to the activation group's &lt;code&gt;inactiveObject&lt;/code&gt; method.</source>
          <target state="translated">활성 그룹은 그룹 의 오브젝트가 비활성화 (비활성화) 될 때 모니터의 &lt;code&gt;inactiveObject&lt;/code&gt; 메소드를 호출합니다 . 활성 그룹은 활성 그룹의 &lt;code&gt;inactiveObject&lt;/code&gt; 메소드에 대한 호출을 통해 VM에있는 오브젝트 (활성화에 참여한)가 더 이상 활성이 아님을 발견합니다 .</target>
        </trans-unit>
        <trans-unit id="ee15e20b4f052542fd54f35aaca29e37fceb2d5b" translate="yes" xml:space="preserve">
          <source>An activation group descriptor contains the information necessary to create/recreate an activation group in which to activate objects.</source>
          <target state="translated">활성 그룹 설명자에는 오브젝트를 활성화 할 활성 그룹을 작성 / 재 작성하는 데 필요한 정보가 있습니다.</target>
        </trans-unit>
        <trans-unit id="30b6561a0a8c53d912608beee865a0d82889d002" translate="yes" xml:space="preserve">
          <source>An activation group descriptor contains the information necessary to create/recreate an activation group in which to activate objects. Such a descriptor contains:</source>
          <target state="translated">활성 그룹 설명자에는 오브젝트를 활성화 할 활성 그룹을 작성 / 재 작성하는 데 필요한 정보가 있습니다. 이러한 설명자에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="c67642b7c6aeefd52e88906d9610975cb3319394" translate="yes" xml:space="preserve">
          <source>An activation identifier for an object can be obtained by registering an object with the activation system. Registration is accomplished in a few ways:</source>
          <target state="translated">개체에 대한 활성화 식별자는 개체를 활성화 시스템에 등록하여 얻을 수 있습니다. 등록은 몇 가지 방법으로 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="903aeff3c4652a2a5a486e6c3b2d7fce139c6346" translate="yes" xml:space="preserve">
          <source>An activation of a toplevel window.</source>
          <target state="translated">최상위 창의 활성화.</target>
        </trans-unit>
        <trans-unit id="d94a3f9d3227d90ee8b91c40a4260e9655fe4e8c" translate="yes" xml:space="preserve">
          <source>An adapter class that implements ImageProducer to allow the asynchronous production of a RenderableImage.</source>
          <target state="translated">RenderableImage의 비동기 생성을 허용하기 위해 ImageProducer를 구현하는 어댑터 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="1ae1821543e910ad9f88330e3e5be1aaadddc7cb" translate="yes" xml:space="preserve">
          <source>An adapter class that implements ImageProducer to allow the asynchronous production of a RenderableImage. The size of the ImageConsumer is determined by the scale factor of the usr2dev transform in the RenderContext. If the RenderContext is null, the default rendering of the RenderableImage is used. This class implements an asynchronous production that produces the image in one thread at one resolution. This class may be subclassed to implement versions that will render the image using several threads. These threads could render either the same image at progressively better quality, or different sections of the image at a single resolution.</source>
          <target state="translated">RenderableImage의 비동기 생성을 허용하기 위해 ImageProducer를 구현하는 어댑터 클래스입니다. ImageConsumer의 크기는 RenderContext에서 usr2dev 변환의 배율에 의해 결정됩니다. RenderContext가 null이면 RenderableImage의 기본 렌더링이 사용됩니다. 이 클래스는 하나의 해상도에서 하나의 스레드에서 이미지를 생성하는 비동기 프로덕션을 구현합니다. 이 클래스는 여러 스레드를 사용하여 이미지를 렌더링하는 버전을 구현하기 위해 서브 클래 싱 될 수 있습니다. 이러한 스레드는 동일한 이미지를 점진적으로 더 나은 품질로 렌더링하거나 단일 해상도에서 이미지의 다른 섹션을 렌더링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2253ad59e015fdf4555b366be77474a31fe902ee" translate="yes" xml:space="preserve">
          <source>An additional case occurs with instances of &lt;a href=&quot;sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;sortedmap&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt;. These collections can be created with a &lt;a href=&quot;comparator&quot;&gt;&lt;code&gt;Comparator&lt;/code&gt;&lt;/a&gt; that imposes an ordering on the set elements or map keys. Such a collection is serializable only if the provided &lt;code&gt;Comparator&lt;/code&gt; is also serializable.</source>
          <target state="translated">&lt;a href=&quot;sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;sortedmap&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; &lt;/a&gt; 인스턴스에서 추가 사례가 발생합니다 . 이러한 컬렉션은 집합 요소 또는 맵 키에 순서를 적용하는 &lt;a href=&quot;comparator&quot;&gt; &lt;code&gt;Comparator&lt;/code&gt; &lt;/a&gt; 를 사용하여 만들 수 있습니다 . 이러한 컬렉션은 제공된 &lt;code&gt;Comparator&lt;/code&gt; 도 직렬화 할 수있는 경우에만 직렬화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b1dd37ad5be3fe930a5d95606563fff64dc33825" translate="yes" xml:space="preserve">
          <source>An additional form (&lt;em&gt;compose&lt;/em&gt;) allows the construction of computation pipelines from functions returning completion stages.</source>
          <target state="translated">추가 양식 ( &lt;em&gt;compose&lt;/em&gt; )을 사용하면 완료 단계를 반환하는 함수에서 계산 파이프 라인을 구성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e6835869da5450c1e88110edee6f20f3541317be" translate="yes" xml:space="preserve">
          <source>An agent JAR file may have both the &lt;code&gt;Premain-Class&lt;/code&gt; and &lt;code&gt;
 Agent-Class&lt;/code&gt; attributes present in the manifest. When the agent is started on the command-line using the &lt;code&gt;-javaagent&lt;/code&gt; option then the &lt;code&gt;
 Premain-Class&lt;/code&gt; attribute specifies the name of the agent class and the &lt;code&gt;
 Agent-Class&lt;/code&gt; attribute is ignored. Similarly, if the agent is started sometime after the VM has started, then the &lt;code&gt;Agent-Class&lt;/code&gt; attribute specifies the name of the agent class (the value of &lt;code&gt;Premain-Class&lt;/code&gt; attribute is ignored).</source>
          <target state="translated">에이전트 JAR 파일 에는 매니페스트에 있는 &lt;code&gt;Premain-Class&lt;/code&gt; 및 &lt;code&gt; Agent-Class&lt;/code&gt; 속성 이 모두있을 수 있습니다 . &lt;code&gt;-javaagent&lt;/code&gt; 옵션을 사용하여 명령 줄에서 에이전트를 시작 하면 &lt;code&gt; Premain-Class&lt;/code&gt; 속성이 에이전트 클래스의 이름을 지정하고 &lt;code&gt; Agent-Class&lt;/code&gt; 속성은 무시됩니다. 마찬가지로 VM이 시작된 후 에이전트가 시작되면 &lt;code&gt;Agent-Class&lt;/code&gt; 속성은 에이전트 클래스의 이름을 지정합니다 ( &lt;code&gt;Premain-Class&lt;/code&gt; 속성 의 값 은 무시 됨).</target>
        </trans-unit>
        <trans-unit id="b8c27a04054143f6b73e6ce3fcbc0723423a9296" translate="yes" xml:space="preserve">
          <source>An agent is deployed as a JAR file. An attribute in the JAR file manifest specifies the agent class which will be loaded to start the agent. Agents can be started in several ways:</source>
          <target state="translated">에이전트는 JAR 파일로 배포됩니다. JAR 파일 매니페스트의 속성은 에이전트를 시작하기 위해로드 될 에이전트 클래스를 지정합니다. 에이전트는 여러 가지 방법으로 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5515b103482b5e4bab56c41dff3f37fe398a8ef0" translate="yes" xml:space="preserve">
          <source>An agent may be packaged with an application in an executable JAR file.</source>
          <target state="translated">에이전트는 실행 가능한 JAR 파일의 애플리케이션과 함께 패키지화 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="87d9498487ae22638db2c1507e7adfbd2ab35666" translate="yes" xml:space="preserve">
          <source>An agent provides an implementation of this interface in order to transform class files.</source>
          <target state="translated">에이전트는 클래스 파일을 변환하기 위해이 인터페이스의 구현을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="87d0888fa7c65da6fccada4341b5a807b948902e" translate="yes" xml:space="preserve">
          <source>An agent provides an implementation of this interface in order to transform class files. The transformation occurs before the class is defined by the JVM.</source>
          <target state="translated">에이전트는 클래스 파일을 변환하기 위해이 인터페이스의 구현을 제공합니다. JVM이 클래스를 정의하기 전에 변환이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="604cb2d9140d6a6048804ee6cdf5bc9c601f218a" translate="yes" xml:space="preserve">
          <source>An algorithm parameter specification is a transparent representation of the sets of parameters used with an algorithm. This package contains algorithm parameter specifications for parameters used with the Diffie-Hellman, DES, Triple DES, PBE, RC2 and RC5 algorithms.</source>
          <target state="translated">알고리즘 매개 변수 사양은 알고리즘과 함께 사용되는 매개 변수 집합을 투명하게 표현한 것입니다. 이 패키지에는 Diffie-Hellman, DES, Triple DES, PBE, RC2 및 RC5 알고리즘과 함께 사용되는 매개 변수에 대한 알고리즘 매개 변수 사양이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="053397605f9db7fc2042b2238d7785c0706e1c43" translate="yes" xml:space="preserve">
          <source>An algorithm parameter specification is a transparent representation of the sets of parameters used with an algorithm. This package contains an algorithm parameter specification for parameters used with the DSA algorithm.</source>
          <target state="translated">알고리즘 매개 변수 사양은 알고리즘과 함께 사용되는 매개 변수 집합을 투명하게 표현한 것입니다. 이 패키지는 DSA 알고리즘과 함께 사용되는 매개 변수에 대한 알고리즘 매개 변수 스펙을 포함합니다.</target>
        </trans-unit>
        <trans-unit id="28906731f6b4142914e4f12f0681eace09aa7c09" translate="yes" xml:space="preserve">
          <source>An alias for &quot;two sided long edge&quot; (see &lt;a href=&quot;#TWO_SIDED_LONG_EDGE&quot;&gt;&lt;code&gt;TWO_SIDED_LONG_EDGE&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&quot;양면 긴 모서리&quot;의 별칭입니다 ( &lt;a href=&quot;#TWO_SIDED_LONG_EDGE&quot;&gt; &lt;code&gt;TWO_SIDED_LONG_EDGE&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="ef9af4ca138f115407607c3b7d84581e03c84cb3" translate="yes" xml:space="preserve">
          <source>An alias for &quot;two sided long edge&quot; (see &lt;a href=&quot;sides#TWO_SIDED_LONG_EDGE&quot;&gt;&lt;code&gt;TWO_SIDED_LONG_EDGE&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&quot;양면 긴 모서리&quot;의 별명입니다 ( &lt;a href=&quot;sides#TWO_SIDED_LONG_EDGE&quot;&gt; &lt;code&gt;TWO_SIDED_LONG_EDGE&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="f38855f16819ee42766d3f3ecee15ba7b88f07ef" translate="yes" xml:space="preserve">
          <source>An alias for &quot;two sided short edge&quot; (see &lt;a href=&quot;#TWO_SIDED_SHORT_EDGE&quot;&gt;&lt;code&gt;TWO_SIDED_SHORT_EDGE&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&quot;양면 짧은 모서리&quot;의 별칭입니다 ( &lt;a href=&quot;#TWO_SIDED_SHORT_EDGE&quot;&gt; &lt;code&gt;TWO_SIDED_SHORT_EDGE&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="8b37d6159a9bdd97f7d3c1960ee5753f16618b62" translate="yes" xml:space="preserve">
          <source>An alias for &quot;two sided short edge&quot; (see &lt;a href=&quot;sides#TWO_SIDED_SHORT_EDGE&quot;&gt;&lt;code&gt;TWO_SIDED_SHORT_EDGE&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&quot;양쪽 짧은 가장자리&quot;의 별칭 ( &lt;a href=&quot;sides#TWO_SIDED_SHORT_EDGE&quot;&gt; &lt;code&gt;TWO_SIDED_SHORT_EDGE&lt;/code&gt; &lt;/a&gt; 참조) ).</target>
        </trans-unit>
        <trans-unit id="28a31fc62271d4750f5cebe34da8756ea636cd8f" translate="yes" xml:space="preserve">
          <source>An alias for INVITE_ENVELOPE.</source>
          <target state="translated">INVITE_ENVELOPE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="e967535bab795790cf49131d85b755dffb6bcda9" translate="yes" xml:space="preserve">
          <source>An alias for INVOICE.</source>
          <target state="translated">INVOICE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="48ba7bee13e55f2fa5aa12477f54dd54bc9ec048" translate="yes" xml:space="preserve">
          <source>An alias for ISO_A0.</source>
          <target state="translated">ISO_A0의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="af76575ac7764b1eec9dfa017aa4a07b28a07dab" translate="yes" xml:space="preserve">
          <source>An alias for ISO_A1.</source>
          <target state="translated">ISO_A1의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="e1bcdcd51abac490b998f58cbb49b21015f7ebb0" translate="yes" xml:space="preserve">
          <source>An alias for ISO_A10.</source>
          <target state="translated">ISO_A10의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="425899ad7ceb8b7ec11ba8c098cc5469b13067f3" translate="yes" xml:space="preserve">
          <source>An alias for ISO_A2.</source>
          <target state="translated">ISO_A2의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="8ee9b8de78758c0d15543bde859424a3b62579e0" translate="yes" xml:space="preserve">
          <source>An alias for ISO_A3.</source>
          <target state="translated">ISO_A3의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="baa156c6a4da666a8148058b61ab955e767fcdf4" translate="yes" xml:space="preserve">
          <source>An alias for ISO_A4.</source>
          <target state="translated">ISO_A4의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="a1b6857f885b472f58a36ac90b9ebd9c72c84ca2" translate="yes" xml:space="preserve">
          <source>An alias for ISO_A5.</source>
          <target state="translated">ISO_A5의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="bb4484dcd8eec5c263653774d2fac919981b011f" translate="yes" xml:space="preserve">
          <source>An alias for ISO_A6.</source>
          <target state="translated">ISO_A6의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="bab2e02cfbeed735b1ecf22e40387703a3bc42e9" translate="yes" xml:space="preserve">
          <source>An alias for ISO_A7.</source>
          <target state="translated">ISO_A7의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="346b26d9f2cbe09a4af3f33047a37d09660c5b10" translate="yes" xml:space="preserve">
          <source>An alias for ISO_A8.</source>
          <target state="translated">ISO_A8의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="7ee36055366b3ac5bff30cf9f36151bbe5adc1a6" translate="yes" xml:space="preserve">
          <source>An alias for ISO_A9.</source>
          <target state="translated">ISO_A9의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="59baa580b0fff3dcdd14ad550348ef58612b744e" translate="yes" xml:space="preserve">
          <source>An alias for ISO_B0.</source>
          <target state="translated">ISO_B0의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="9ea1b5c8a37ac53dc9638af13e22a4713a244b5d" translate="yes" xml:space="preserve">
          <source>An alias for ISO_B1.</source>
          <target state="translated">ISO_B1의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="03c743c757b6561fa5d79bc08db10afd5b0666e7" translate="yes" xml:space="preserve">
          <source>An alias for ISO_B10.</source>
          <target state="translated">ISO_B10의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="394a694f2a16f14134de671acd75c430483c8a64" translate="yes" xml:space="preserve">
          <source>An alias for ISO_B2.</source>
          <target state="translated">ISO_B2의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="faf726e5ad336a76ca761b106fd8a0c68a8297ff" translate="yes" xml:space="preserve">
          <source>An alias for ISO_B3.</source>
          <target state="translated">ISO_B3의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="9230a411a91240a0e83171961e063d600c5f5acb" translate="yes" xml:space="preserve">
          <source>An alias for ISO_B4.</source>
          <target state="translated">ISO_B4의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="59330fd4c7eee657cd1498eec26e1fef201047ec" translate="yes" xml:space="preserve">
          <source>An alias for ISO_B5.</source>
          <target state="translated">ISO_B5의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="638eff80eb6623885f900a594e9601174050e352" translate="yes" xml:space="preserve">
          <source>An alias for ISO_B6.</source>
          <target state="translated">ISO_B6의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="b5bdfeb42a3c3e1ac383a4dceebda82bce615466" translate="yes" xml:space="preserve">
          <source>An alias for ISO_B7.</source>
          <target state="translated">ISO_B7의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="86f1d37679f411a0b56a568605766be20b2f7137" translate="yes" xml:space="preserve">
          <source>An alias for ISO_B8.</source>
          <target state="translated">ISO_B8의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="aa5857f267ff503bb3a926ab9dc799622629f38d" translate="yes" xml:space="preserve">
          <source>An alias for ISO_B9.</source>
          <target state="translated">ISO_B9의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="e0c8d265dc10f0be37238517b8b0dd4be1fa124f" translate="yes" xml:space="preserve">
          <source>An alias for ISO_C0.</source>
          <target state="translated">ISO_C0의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="bd61fb5fd297ec7c32c08842f5238fd4f66baf9b" translate="yes" xml:space="preserve">
          <source>An alias for ISO_C1.</source>
          <target state="translated">ISO_C1의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="ea397cf62eefa4e89b590750e83450f1855afaf0" translate="yes" xml:space="preserve">
          <source>An alias for ISO_C10.</source>
          <target state="translated">ISO_C10의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="65af40111166fba2af7a2459205dc6eca4d9fde1" translate="yes" xml:space="preserve">
          <source>An alias for ISO_C2.</source>
          <target state="translated">ISO_C2의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="0b37fca7848ffd6ccd2b21728bf9523c8f3fe624" translate="yes" xml:space="preserve">
          <source>An alias for ISO_C3.</source>
          <target state="translated">ISO_C3의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="f2acd6956403ea3558b901d3b715b1ca3e43f8e6" translate="yes" xml:space="preserve">
          <source>An alias for ISO_C4.</source>
          <target state="translated">ISO_C4의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="b5e8c5a74a89d7e4102542474aea637e9d3e58f7" translate="yes" xml:space="preserve">
          <source>An alias for ISO_C5.</source>
          <target state="translated">ISO_C5의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="27b702cde3f92dbb64a0113f6427d7dab23ec58e" translate="yes" xml:space="preserve">
          <source>An alias for ISO_C6.</source>
          <target state="translated">ISO_C6의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="eccc860c557fe701119cdbdb6801e4380857f03b" translate="yes" xml:space="preserve">
          <source>An alias for ISO_C7.</source>
          <target state="translated">ISO_C7의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="53c7e4ab53cc0256366fa2a2bbb5dba0f3c9c3e6" translate="yes" xml:space="preserve">
          <source>An alias for ISO_C8.</source>
          <target state="translated">ISO_C8의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="6552fe0a2db2ec6910f8af580f386e493e8499b7" translate="yes" xml:space="preserve">
          <source>An alias for ISO_C9.</source>
          <target state="translated">ISO_C9의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="0c0055019dd2b32bcf62ad5fc9a4da580a97e6a1" translate="yes" xml:space="preserve">
          <source>An alias for ISO_DESIGNATED_LONG.</source>
          <target state="translated">ISO_DESIGNATED_LONG의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="4084fe0742b2934bf22939f15167eed287799e45" translate="yes" xml:space="preserve">
          <source>An alias for ITALY_ENVELOPE.</source>
          <target state="translated">ITALY_ENVELOPE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="14390cb4925a893a9e7eb752a3f3e08b4de31e2f" translate="yes" xml:space="preserve">
          <source>An alias for LEDGER.</source>
          <target state="translated">LEDGER의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="203aaeb41ed730cbea1701623894115d14213d48" translate="yes" xml:space="preserve">
          <source>An alias for MONARCH_ENVELOPE.</source>
          <target state="translated">MONARCH_ENVELOPE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="6b968872cdb041a68bc516034ed33eab3db8a193" translate="yes" xml:space="preserve">
          <source>An alias for NA_10X13_ENVELOPE.</source>
          <target state="translated">NA_10X13_ENVELOPE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="50987540ee2b6590fbfdbe1875d1c2c66bb1d9be" translate="yes" xml:space="preserve">
          <source>An alias for NA_10X14_ENVELOPE.</source>
          <target state="translated">NA_10X14_ENVELOPE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="667984e12a537b98500c2afa2022ce3be49eb719" translate="yes" xml:space="preserve">
          <source>An alias for NA_10X15_ENVELOPE.</source>
          <target state="translated">NA_10X15_ENVELOPE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="43edd3c33215174473fbf3ae6478cef297808be7" translate="yes" xml:space="preserve">
          <source>An alias for NA_6X9_ENVELOPE.</source>
          <target state="translated">NA_6X9_ENVELOPE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="d28df4524c7144f5ba9f0045a455ddc207058c15" translate="yes" xml:space="preserve">
          <source>An alias for NA_7X9_ENVELOPE.</source>
          <target state="translated">NA_7X9_ENVELOPE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="b1a7ac496fe360e51166e40b05ec1e7284ca62f9" translate="yes" xml:space="preserve">
          <source>An alias for NA_9X11_ENVELOPE.</source>
          <target state="translated">NA_9X11_ENVELOPE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="c337d967024998050051c7c28702bcf570d3532e" translate="yes" xml:space="preserve">
          <source>An alias for NA_9X12_ENVELOPE.</source>
          <target state="translated">NA_9X12_ENVELOPE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="0db302990983d4688bf6746b1d41f07a998fd86e" translate="yes" xml:space="preserve">
          <source>An alias for NA_LEGAL.</source>
          <target state="translated">NA_LEGAL의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="c319c52a7acfa823b23af298d0a88b00d0095fe3" translate="yes" xml:space="preserve">
          <source>An alias for NA_LETTER.</source>
          <target state="translated">NA_LETTER의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="7bd0639efc0432aced3da1f0c025edd142107377" translate="yes" xml:space="preserve">
          <source>An alias for NA_NUMBER_10_ENVELOPE.</source>
          <target state="translated">NA_NUMBER_10_ENVELOPE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="0f7bc4058fa646bba907b5a9dcf65694354e8c0b" translate="yes" xml:space="preserve">
          <source>An alias for NA_NUMBER_11_ENVELOPE.</source>
          <target state="translated">NA_NUMBER_11_ENVELOPE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="eb003086b408066d59568b694e06dfe2d4b0f778" translate="yes" xml:space="preserve">
          <source>An alias for NA_NUMBER_12_ENVELOPE.</source>
          <target state="translated">NA_NUMBER_12_ENVELOPE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="8c678079ab035d091a428db30aa51c198d79fe89" translate="yes" xml:space="preserve">
          <source>An alias for NA_NUMBER_14_ENVELOPE.</source>
          <target state="translated">NA_NUMBER_14_ENVELOPE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="bf425fef894f08e9318893d396281c1f4472571a" translate="yes" xml:space="preserve">
          <source>An alias for NA_NUMBER_9_ENVELOPE.</source>
          <target state="translated">NA_NUMBER_9_ENVELOPE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="342714aed92eb857da949b25ee7f7fae6c10b70f" translate="yes" xml:space="preserve">
          <source>An alias for PERSONAL_ENVELOPE.</source>
          <target state="translated">PERSONAL_ENVELOPE의 별칭입니다.</target>
        </trans-unit>
        <trans-unit id="0cec8f4c8316cb9ae751b7e70e52b1cd0ebd923d" translate="yes" xml:space="preserve">
          <source>An alphabetic character (&lt;a href=&quot;#ubpc&quot;&gt;binary property&lt;/a&gt;)</source>
          <target state="translated">알파벳 문자 ( &lt;a href=&quot;#ubpc&quot;&gt;이진 속성&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="7ce8c43e64a39d3100c6fa7ef95283df115ca794" translate="yes" xml:space="preserve">
          <source>An alphabetic character:&lt;code&gt;[\p{Lower}\p{Upper}]&lt;/code&gt;</source>
          <target state="translated">알파벳 문자 : &lt;code&gt;[\p{Lower}\p{Upper}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68497dca612686ff23e0de730e5d394c71e4efea" translate="yes" xml:space="preserve">
          <source>An alphabetic character:&lt;code&gt;\p{IsAlphabetic}&lt;/code&gt;</source>
          <target state="translated">알파벳 문자 : &lt;code&gt;\p{IsAlphabetic}&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="01bae5e119df9571fe53de2b4e015bb858374054" translate="yes" xml:space="preserve">
          <source>An alphanumeric character:&lt;code&gt;[\p{Alpha}\p{Digit}]&lt;/code&gt;</source>
          <target state="translated">영숫자 문자 : &lt;code&gt;[\p{Alpha}\p{Digit}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f93f2b6877cd8e093f0fc8be34e5e7da7d63657b" translate="yes" xml:space="preserve">
          <source>An alphanumeric character:&lt;code&gt;[\p{IsAlphabetic}\p{IsDigit}]&lt;/code&gt;</source>
          <target state="translated">영숫자 문자 : &lt;code&gt;[\p{IsAlphabetic}\p{IsDigit}]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0c9cdb53a3b6bd22f0d34b46ad6ec4a7e7798d55" translate="yes" xml:space="preserve">
          <source>An alternative form that is sometimes more convenient when dealing with a mixed environment of IPv4 and IPv6 nodes is x:x:x:x:x:x:d.d.d.d, where the 'x's are the hexadecimal values of the six high-order 16-bit pieces of the address, and the 'd's are the decimal values of the four low-order 8-bit pieces of the standard IPv4 representation address, for example,</source>
          <target state="translated">IPv4 및 IPv6 노드의 혼합 환경을 처리 할 때 때때로 더 편리한 대체 형식은 x : x : x : x : x : x : dddd입니다. 여기서 'x'는 상위 16 진수 6-16 진수의 16 진수 값입니다. 예를 들어, 주소의 비트 조각과 'd'는 표준 IPv4 표현 주소의 하위 8 비트 4 개 조각의 10 진수 값입니다.</target>
        </trans-unit>
        <trans-unit id="083958913c8349ff856a6a31a6ab26c418405a16" translate="yes" xml:space="preserve">
          <source>An alternative to this method is to format/parse the instant as a single epoch-seconds value. That is achieved using &lt;code&gt;appendValue(INSTANT_SECONDS)&lt;/code&gt;.</source>
          <target state="translated">이 방법의 대안은 순간을 단일 에포크 초 값으로 형식화 / 구문 분석하는 것입니다. 이것은 &lt;code&gt;appendValue(INSTANT_SECONDS)&lt;/code&gt; 사용하여 달성됩니다 .</target>
        </trans-unit>
        <trans-unit id="02d8cd8c9e497571f1f5cba51cd90335080e617e" translate="yes" xml:space="preserve">
          <source>An alternative to using this class, that also permits limited parallelism, is to create a spliterator from an iterator (see &lt;a href=&quot;spliterators#spliterator(java.util.Iterator,long,int)&quot;&gt;&lt;code&gt;Spliterators.spliterator(Iterator, long, int)&lt;/code&gt;&lt;/a&gt;. Depending on the circumstances using an iterator may be easier or more convenient than extending this class, such as when there is already an iterator available to use.</source>
          <target state="translated">제한된 병렬 처리도 허용하는이 클래스 사용의 대안은 반복기에서 분할자를 만드는 것입니다 ( &lt;a href=&quot;spliterators#spliterator(java.util.Iterator,long,int)&quot;&gt; &lt;code&gt;Spliterators.spliterator(Iterator, long, int)&lt;/code&gt; &lt;/a&gt; . 상황에 따라 반복기를 사용하는 것이 이것을 확장하는 것보다 더 쉽고 편리 할 수 ​​있습니다. 사용할 수있는 반복기가 이미있는 경우와 같은 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="80b46c1ca90e4c3aa94fafe8a26da94cd6200d17" translate="yes" xml:space="preserve">
          <source>An alternative to using this class, that also permits limited parallelism, is to create a spliterator from an iterator (see &lt;a href=&quot;spliterators#spliterator(java.util.PrimitiveIterator.OfDouble,long,int)&quot;&gt;&lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfDouble, long, int)&lt;/code&gt;&lt;/a&gt;. Depending on the circumstances using an iterator may be easier or more convenient than extending this class. For example, if there is already an iterator available to use then there is no need to extend this class.</source>
          <target state="translated">제한된 병렬 처리도 허용하는이 클래스 사용의 대안은 반복기에서 분할자를 만드는 것입니다 ( &lt;a href=&quot;spliterators#spliterator(java.util.PrimitiveIterator.OfDouble,long,int)&quot;&gt; &lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfDouble, long, int)&lt;/code&gt; &lt;/a&gt; . 상황에 따라 반복기를 사용하는 것이 더 쉬울 수 있습니다. 또는이 클래스를 확장하는 것보다 더 편리합니다. 예를 들어 사용 가능한 반복기가 이미있는 경우이 클래스를 확장 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="623021bf90b6e035308b03104460b8b5b9d14726" translate="yes" xml:space="preserve">
          <source>An alternative to using this class, that also permits limited parallelism, is to create a spliterator from an iterator (see &lt;a href=&quot;spliterators#spliterator(java.util.PrimitiveIterator.OfInt,long,int)&quot;&gt;&lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfInt, long, int)&lt;/code&gt;&lt;/a&gt;. Depending on the circumstances using an iterator may be easier or more convenient than extending this class. For example, if there is already an iterator available to use then there is no need to extend this class.</source>
          <target state="translated">제한된 병렬 처리도 허용하는이 클래스 사용의 대안은 반복기에서 분할자를 만드는 것입니다 ( &lt;a href=&quot;spliterators#spliterator(java.util.PrimitiveIterator.OfInt,long,int)&quot;&gt; &lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfInt, long, int)&lt;/code&gt; &lt;/a&gt; . 상황에 따라 반복기를 사용하는 것이 더 쉬울 수 있습니다. 또는이 클래스를 확장하는 것보다 더 편리합니다. 예를 들어 사용 가능한 반복기가 이미있는 경우이 클래스를 확장 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="ea5e24e3573d98d4cca36f4fa1fe659a1b0d4729" translate="yes" xml:space="preserve">
          <source>An alternative to using this class, that also permits limited parallelism, is to create a spliterator from an iterator (see &lt;a href=&quot;spliterators#spliterator(java.util.PrimitiveIterator.OfLong,long,int)&quot;&gt;&lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfLong, long, int)&lt;/code&gt;&lt;/a&gt;. Depending on the circumstances using an iterator may be easier or more convenient than extending this class. For example, if there is already an iterator available to use then there is no need to extend this class.</source>
          <target state="translated">제한된 병렬 처리도 허용하는이 클래스 사용의 대안은 반복기에서 분할자를 만드는 것입니다 ( &lt;a href=&quot;spliterators#spliterator(java.util.PrimitiveIterator.OfLong,long,int)&quot;&gt; &lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfLong, long, int)&lt;/code&gt; &lt;/a&gt; . 상황에 따라 반복기를 사용하는 것이 더 쉬울 수 있습니다. 또는이 클래스를 확장하는 것보다 더 편리합니다. 예를 들어 사용 가능한 반복기가 이미있는 경우이 클래스를 확장 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="b1d963055d377ae73238a3fcaf60406dc89690eb" translate="yes" xml:space="preserve">
          <source>An alternative to using this class, that also permits limited parallelism, is to create a spliterator from an iterator (see &lt;a href=&quot;spliterators#spliterator-java.util.Iterator-long-int-&quot;&gt;&lt;code&gt;Spliterators.spliterator(Iterator, long, int)&lt;/code&gt;&lt;/a&gt;. Depending on the circumstances using an iterator may be easier or more convenient than extending this class, such as when there is already an iterator available to use.</source>
          <target state="translated">제한된 병렬 처리를 허용하는이 클래스를 사용하는 대안은 반복자에서 분할기를 작성하는 것입니다 ( &lt;a href=&quot;spliterators#spliterator-java.util.Iterator-long-int-&quot;&gt; &lt;code&gt;Spliterators.spliterator(Iterator, long, int)&lt;/code&gt; &lt;/a&gt; 참조) 반복자를 사용하는 환경에 따라이 확장을 사용하는 것이 더 쉽고 편리 할 수 ​​있습니다. 이미 사용 가능한 반복자가있는 경우와 같은 클래스.</target>
        </trans-unit>
        <trans-unit id="ce1c77f733ad4ab08c17256908e33a35b3aac8bb" translate="yes" xml:space="preserve">
          <source>An alternative to using this class, that also permits limited parallelism, is to create a spliterator from an iterator (see &lt;a href=&quot;spliterators#spliterator-java.util.PrimitiveIterator.OfDouble-long-int-&quot;&gt;&lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfDouble, long, int)&lt;/code&gt;&lt;/a&gt;. Depending on the circumstances using an iterator may be easier or more convenient than extending this class. For example, if there is already an iterator available to use then there is no need to extend this class.</source>
          <target state="translated">제한된 병렬 처리를 허용하는이 클래스를 사용하는 대안은 반복기에서 분할기를 작성하는 것입니다 ( &lt;a href=&quot;spliterators#spliterator-java.util.PrimitiveIterator.OfDouble-long-int-&quot;&gt; &lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfDouble, long, int)&lt;/code&gt; &lt;/a&gt; . 반복자를 사용하는 환경에 따라 더 쉬울 수 있습니다. 예를 들어, 이미 사용 가능한 반복자가 있으면이 클래스를 확장 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="9867f0c7b196e2e6f09d53e33ea9a2c2cd678c54" translate="yes" xml:space="preserve">
          <source>An alternative to using this class, that also permits limited parallelism, is to create a spliterator from an iterator (see &lt;a href=&quot;spliterators#spliterator-java.util.PrimitiveIterator.OfInt-long-int-&quot;&gt;&lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfInt, long, int)&lt;/code&gt;&lt;/a&gt;. Depending on the circumstances using an iterator may be easier or more convenient than extending this class. For example, if there is already an iterator available to use then there is no need to extend this class.</source>
          <target state="translated">제한된 병렬 처리를 허용하는이 클래스를 사용하는 대안은 반복기에서 분할기를 작성하는 것입니다 ( &lt;a href=&quot;spliterators#spliterator-java.util.PrimitiveIterator.OfInt-long-int-&quot;&gt; &lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfInt, long, int)&lt;/code&gt; &lt;/a&gt; . 반복자를 사용하는 환경에 따라 더 쉬울 수 있습니다. 예를 들어, 이미 사용 가능한 반복자가 있으면이 클래스를 확장 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="aef6f9ffa1f8a2d7438871b437f7fa6fac738a89" translate="yes" xml:space="preserve">
          <source>An alternative to using this class, that also permits limited parallelism, is to create a spliterator from an iterator (see &lt;a href=&quot;spliterators#spliterator-java.util.PrimitiveIterator.OfLong-long-int-&quot;&gt;&lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfLong, long, int)&lt;/code&gt;&lt;/a&gt;. Depending on the circumstances using an iterator may be easier or more convenient than extending this class. For example, if there is already an iterator available to use then there is no need to extend this class.</source>
          <target state="translated">제한된 병렬 처리를 허용하는이 클래스를 사용하는 대안은 반복기에서 분할기를 작성하는 것입니다 ( &lt;a href=&quot;spliterators#spliterator-java.util.PrimitiveIterator.OfLong-long-int-&quot;&gt; &lt;code&gt;Spliterators.spliterator(java.util.PrimitiveIterator.OfLong, long, int)&lt;/code&gt; &lt;/a&gt; . 반복자를 사용하는 환경에 따라 더 쉬울 수 있습니다. 예를 들어, 이미 사용 가능한 반복자가 있으면이 클래스를 확장 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="245b5a5f20def8398fdae8dfb34d14dd909b98c7" translate="yes" xml:space="preserve">
          <source>An alternative way to load this component with a string would be to create a StringReader and call the read method. In this case the model would be replaced after it was initialized with the contents of the string.</source>
          <target state="translated">이 구성 요소를 문자열로로드하는 또 다른 방법은 StringReader를 만들고 read 메서드를 호출하는 것입니다. 이 경우 모델은 문자열의 내용으로 초기화 된 후 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="c3bfc322b8b030475541bcee85904527cd152fc3" translate="yes" xml:space="preserve">
          <source>An ancestor-component changed its position on the screen.</source>
          <target state="translated">조상 구성 요소가 화면에서 위치를 변경했습니다.</target>
        </trans-unit>
        <trans-unit id="8da8d2b2e9bb03a27f11335da3ac0fbe6c01c41c" translate="yes" xml:space="preserve">
          <source>An ancestor-component was added to the hierarchy of visible objects (made visible), and is currently being displayed.</source>
          <target state="translated">조상 구성 요소가 표시되는 개체의 계층 구조에 추가되었으며 (표시됨) 현재 표시 중입니다.</target>
        </trans-unit>
        <trans-unit id="db633cabeabacefa39d79a102cace160c41b6c8a" translate="yes" xml:space="preserve">
          <source>An ancestor-component was removed from the hierarchy of visible objects (hidden) and is no longer being displayed.</source>
          <target state="translated">조상 구성 요소가 표시되는 개체의 계층에서 제거 (숨김)되어 더 이상 표시되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6450ce02ff2ddd2c7e118d5649cd28ea6722fb97" translate="yes" xml:space="preserve">
          <source>An annotation</source>
          <target state="translated">주석</target>
        </trans-unit>
        <trans-unit id="f5734ec0c21b484a464b6c058a863248b0ec82e2" translate="yes" xml:space="preserve">
          <source>An annotation element to be converted into a descriptor field can be of any type allowed by the Java language, except an annotation or an array of annotations. The value of the field is derived from the value of the annotation element as follows:</source>
          <target state="translated">설명자 필드로 변환 할 주석 요소는 주석 또는 주석 배열을 제외하고 Java 언어에서 허용하는 모든 유형일 수 있습니다. 필드의 값은 다음과 같이 주석 요소의 값에서 파생됩니다.</target>
        </trans-unit>
        <trans-unit id="a57111638e18d1a66025dd2d993a88820839f7f2" translate="yes" xml:space="preserve">
          <source>An annotation interface declaration.</source>
          <target state="translated">주석 인터페이스 선언.</target>
        </trans-unit>
        <trans-unit id="f98c9fe436f9ee5ad677678414afd9bf996e88f1" translate="yes" xml:space="preserve">
          <source>An annotation interface declaration. A &lt;code&gt;SubKind&lt;/code&gt; of &lt;a href=&quot;snippet.kind#TYPE_DECL&quot;&gt;&lt;code&gt;Snippet.Kind.TYPE_DECL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주석 인터페이스 선언. A는 &lt;code&gt;SubKind&lt;/code&gt; 의 &lt;a href=&quot;snippet.kind#TYPE_DECL&quot;&gt; &lt;code&gt;Snippet.Kind.TYPE_DECL&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="da4a557d978126b1b1da6a254b5e16b199d5008b" translate="yes" xml:space="preserve">
          <source>An annotation is &lt;em&gt;present&lt;/em&gt; if it meets the definition of being present given in &lt;a href=&quot;../../lang/model/annotatedconstruct&quot;&gt;&lt;code&gt;AnnotatedConstruct&lt;/code&gt;&lt;/a&gt;. In brief, an annotation is considered present for the purposes of discovery if it is directly present or present via inheritance. An annotation is &lt;em&gt;not&lt;/em&gt; considered present by virtue of being wrapped by a container annotation. Operationally, this is equivalent to an annotation being present on an element if and only if it would be included in the results of &lt;a href=&quot;../../lang/model/util/elements#getAllAnnotationMirrors(javax.lang.model.element.Element)&quot;&gt;&lt;code&gt;Elements.getAllAnnotationMirrors(Element)&lt;/code&gt;&lt;/a&gt; called on that element. Since annotations inside container annotations are not considered present, to properly process &lt;a href=&quot;../../../../java.base/java/lang/annotation/repeatable&quot;&gt;repeatable annotation types&lt;/a&gt;, processors are advised to include both the repeatable annotation type and its containing annotation type in the set of &lt;a href=&quot;#getSupportedAnnotationTypes()&quot;&gt;supported annotation types&lt;/a&gt; of a processor.</source>
          <target state="translated">&lt;a href=&quot;../../lang/model/annotatedconstruct&quot;&gt; &lt;code&gt;AnnotatedConstruct&lt;/code&gt; 에&lt;/a&gt; 주어진 정의를 충족하는 경우 주석이 &lt;em&gt;존재&lt;/em&gt; 합니다 . 간단히 말해 주석은 직접 존재하거나 상속을 통해 존재하는 경우 발견 목적으로 존재하는 것으로 간주됩니다. 주석은 컨테이너 주석에 의해 래핑되기 때문에 존재하는 것으로 간주 &lt;em&gt;되지 않습니다&lt;/em&gt; . 운영상, 이것은 &lt;a href=&quot;../../lang/model/util/elements#getAllAnnotationMirrors(javax.lang.model.element.Element)&quot;&gt; &lt;code&gt;Elements.getAllAnnotationMirrors(Element)&lt;/code&gt; &lt;/a&gt; 에 대해 호출 된 Elements.getAllAnnotationMirrors (Element) 의 결과에 포함되는 경우에만 요소에 존재하는 주석과 동일합니다 . 컨테이너 주석 내부의 주석은 존재하지 않는 것으로 간주되므로 &lt;a href=&quot;../../../../java.base/java/lang/annotation/repeatable&quot;&gt;반복 가능한 주석 유형&lt;/a&gt; 을 적절하게 처리 합니다.&lt;em&gt;&lt;/em&gt;, 프로세서는 프로세서의 &lt;a href=&quot;#getSupportedAnnotationTypes()&quot;&gt;지원되는 주석 유형&lt;/a&gt; 집합에 반복 가능한 주석 유형과 포함 된 주석 유형을 모두 포함하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="f98399f02cc13014e073ea4e7c0f8a6cfab0cc94" translate="yes" xml:space="preserve">
          <source>An annotation is present if it meets the definition of being present given in &lt;a href=&quot;../../lang/model/annotatedconstruct&quot;&gt;&lt;code&gt;AnnotatedConstruct&lt;/code&gt;&lt;/a&gt;. In brief, an annotation is considered present for the purposes of discovery if it is directly present or present via inheritance. An annotation is &lt;em&gt;not&lt;/em&gt; considered present by virtue of being wrapped by a container annotation. Operationally, this is equivalent to an annotation being present on an element if and only if it would be included in the results of &lt;a href=&quot;../../lang/model/util/elements#getAllAnnotationMirrors(javax.lang.model.element.Element)&quot;&gt;&lt;code&gt;Elements.getAllAnnotationMirrors(Element)&lt;/code&gt;&lt;/a&gt; called on that element. Since annotations inside container annotations are not considered present, to properly process &lt;a href=&quot;../../../../java.base/java/lang/annotation/repeatable&quot;&gt;repeatable annotation types&lt;/a&gt;, processors are advised to include both the repeatable annotation type and its containing annotation type in the set of &lt;a href=&quot;#getSupportedAnnotationTypes()&quot;&gt;supported annotation types&lt;/a&gt; of a processor.</source>
          <target state="translated">&lt;a href=&quot;../../lang/model/annotatedconstruct&quot;&gt; &lt;code&gt;AnnotatedConstruct&lt;/code&gt; 에&lt;/a&gt; 주어진 정의를 충족하면 주석이 존재합니다 . 간단히 말해 주석이 직접 존재하거나 상속을 통해 존재하는 경우 발견 목적으로 존재하는 것으로 간주됩니다. 주석은 컨테이너 주석으로 래핑되기 때문에 존재하는 것으로 간주 &lt;em&gt;되지 않습니다&lt;/em&gt; . 운영상, 이는 &lt;a href=&quot;../../lang/model/util/elements#getAllAnnotationMirrors(javax.lang.model.element.Element)&quot;&gt; &lt;code&gt;Elements.getAllAnnotationMirrors(Element)&lt;/code&gt; &lt;/a&gt; 에 대해 호출 된 Elements.getAllAnnotationMirrors (Element) 의 결과에 포함되는 경우에만 요소에 존재하는 주석과 동일합니다 . 컨테이너 주석 내부의 주석은 존재하지 않는 것으로 간주되므로 &lt;a href=&quot;../../../../java.base/java/lang/annotation/repeatable&quot;&gt;반복 가능한 주석 유형&lt;/a&gt; 을 적절하게 처리 합니다., 프로세서는 프로세서의 &lt;a href=&quot;#getSupportedAnnotationTypes()&quot;&gt;지원되는 주석 유형&lt;/a&gt; 집합에 반복 가능한 주석 유형과 포함 된 주석 유형을 모두 포함하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="88dbabf4d218c33507c48f49c53826848a61d2d1" translate="yes" xml:space="preserve">
          <source>An annotation is present if it meets the definition of being present given in &lt;a href=&quot;../../lang/model/annotatedconstruct&quot;&gt;&lt;code&gt;AnnotatedConstruct&lt;/code&gt;&lt;/a&gt;. In brief, an annotation is considered present for the purposes of discovery if it is directly present or present via inheritance. An annotation is &lt;em&gt;not&lt;/em&gt; considered present by virtue of being wrapped by a container annotation. Operationally, this is equivalent to an annotation being present on an element if and only if it would be included in the results of &lt;a href=&quot;../../lang/model/util/elements#getAllAnnotationMirrors-javax.lang.model.element.Element-&quot;&gt;&lt;code&gt;Elements.getAllAnnotationMirrors(Element)&lt;/code&gt;&lt;/a&gt; called on that element. Since annotations inside container annotations are not considered present, to properly process &lt;a href=&quot;../../../java/lang/annotation/repeatable&quot;&gt;repeatable annotation types&lt;/a&gt;, processors are advised to include both the repeatable annotation type and its containing annotation type in the set of &lt;a href=&quot;processor#getSupportedAnnotationTypes--&quot;&gt;supported annotation types&lt;/a&gt; of a processor.</source>
          <target state="translated">&lt;a href=&quot;../../lang/model/annotatedconstruct&quot;&gt; &lt;code&gt;AnnotatedConstruct&lt;/code&gt; 에&lt;/a&gt; 제공된 존재의 정의를 충족하면 주석이 존재합니다 . 간단히 말하면, 주석이 상속을 통해 직접 존재하거나 존재하는 경우 발견 목적으로 주석이 존재하는 것으로 간주됩니다. 컨테이너 주석에 의해 랩핑되어 주석이 존재 &lt;em&gt;하지 않는&lt;/em&gt; 것으로 간주됩니다. 작동 상, 이것은 &lt;a href=&quot;../../lang/model/util/elements#getAllAnnotationMirrors-javax.lang.model.element.Element-&quot;&gt; &lt;code&gt;Elements.getAllAnnotationMirrors(Element)&lt;/code&gt; &lt;/a&gt; 호출 된 Elements.getAllAnnotationMirrors (Element) 의 결과에 포함되는 경우에만 요소에 주석이 존재하는 것과 같습니다 . 컨테이너 주석 내부의 주석은 존재하지 않는 것으로 간주되므로 &lt;a href=&quot;../../../java/lang/annotation/repeatable&quot;&gt;반복 가능한 주석 유형&lt;/a&gt; 을 올바르게 처리 합니다.프로세서는 프로세서의 &lt;a href=&quot;processor#getSupportedAnnotationTypes--&quot;&gt;지원되는 주석 유형&lt;/a&gt; 세트에 반복 가능한 주석 유형과 포함 주석 유형을 모두 포함하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="d592d8db7f59b40201b85bc8b8b68b5038e10571" translate="yes" xml:space="preserve">
          <source>An annotation of type</source>
          <target state="translated">유형의 주석</target>
        </trans-unit>
        <trans-unit id="210c41a9b3e705c1fb284be5821159ae62174d20" translate="yes" xml:space="preserve">
          <source>An annotation on a constructor that shows how the parameters of that constructor correspond to the constructed object's getter methods.</source>
          <target state="translated">해당 생성자의 매개 변수가 생성 된 오브젝트의 getter 메소드에 해당하는 방법을 표시하는 생성자에 대한 주석입니다.</target>
        </trans-unit>
        <trans-unit id="eefaa37f9e0c544c9a81690204c518d2ff2f4d2f" translate="yes" xml:space="preserve">
          <source>An annotation on a constructor that shows how the parameters of that constructor correspond to the constructed object's getter methods. For example:</source>
          <target state="translated">해당 생성자의 매개 변수가 생성 된 오브젝트의 getter 메소드에 해당하는 방법을 표시하는 생성자에 대한 주석입니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d252e72df414b32c14b183e53db179fe2f77604b" translate="yes" xml:space="preserve">
          <source>An annotation processing tool framework will &lt;a href=&quot;processor#init(javax.annotation.processing.ProcessingEnvironment)&quot;&gt;provide an annotation processor with an object implementing this interface&lt;/a&gt; so the processor can use facilities provided by the framework to write new files, report error messages, and find other utilities.</source>
          <target state="translated">주석 처리 도구 프레임 워크는 &lt;a href=&quot;processor#init(javax.annotation.processing.ProcessingEnvironment)&quot;&gt;이 인터페이스를 구현하는 객체와 함께 주석 프로세서를 제공&lt;/a&gt; 하므로 프로세서는 프레임 워크에서 제공하는 기능을 사용하여 새 파일을 작성하고, 오류 메시지를보고하고, 기타 유틸리티를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f74cfaa213e89d66c4289b69d7b8d430381f0284" translate="yes" xml:space="preserve">
          <source>An annotation processing tool framework will &lt;a href=&quot;processor#init-javax.annotation.processing.ProcessingEnvironment-&quot;&gt;provide an annotation processor with an object implementing this interface&lt;/a&gt; so the processor can use facilities provided by the framework to write new files, report error messages, and find other utilities.</source>
          <target state="translated">주석 처리 도구 프레임 워크는 &lt;a href=&quot;processor#init-javax.annotation.processing.ProcessingEnvironment-&quot;&gt;주석 인터페이스에이 인터페이스를 구현하는 객체를 제공하므로 프로세서&lt;/a&gt; 는 프레임 워크가 제공하는 기능을 사용하여 새 파일을 작성하고 오류 메시지를보고하며 다른 유틸리티를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6bc440dfac24b6f12cf891bd0dc8929552f3f253" translate="yes" xml:space="preserve">
          <source>An annotation processing tool framework will &lt;a href=&quot;processor#process(java.util.Set,javax.annotation.processing.RoundEnvironment)&quot;&gt;provide an annotation processor with an object implementing this interface&lt;/a&gt; so that the processor can query for information about a round of annotation processing.</source>
          <target state="translated">주석 처리 도구 프레임 워크는 &lt;a href=&quot;processor#process(java.util.Set,javax.annotation.processing.RoundEnvironment)&quot;&gt;이 인터페이스를 구현하는 객체를 주석 프로세서에 제공하여 프로세서가&lt;/a&gt; 일련의 주석 처리에 대한 정보를 쿼리 할 수 ​​있도록합니다.</target>
        </trans-unit>
        <trans-unit id="524e047ff62f709be208951e5ef19c0a1d9c3ef1" translate="yes" xml:space="preserve">
          <source>An annotation processing tool framework will &lt;a href=&quot;processor#process-java.util.Set-javax.annotation.processing.RoundEnvironment-&quot;&gt;provide an annotation processor with an object implementing this interface&lt;/a&gt; so that the processor can query for information about a round of annotation processing.</source>
          <target state="translated">주석 처리 툴 프레임 워크는 &lt;a href=&quot;processor#process-java.util.Set-javax.annotation.processing.RoundEnvironment-&quot;&gt;프로세서가&lt;/a&gt; 주석 처리 라운드에 대한 정보를 쿼리 할 수 ​​있도록 이 인터페이스를 구현하는 객체를 주석 처리기에 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="8a4458ea6ca9543231479be25a4283c86fadd141" translate="yes" xml:space="preserve">
          <source>An annotation such as &lt;code&gt;@Units&lt;/code&gt; can be applied to:</source>
          <target state="translated">&lt;code&gt;@Units&lt;/code&gt; 와 같은 주석 을 다음에 적용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7e4ced8faa261fd9c949304d6cbb810f93dc832" translate="yes" xml:space="preserve">
          <source>An annotation type is considered present if there is at least one annotation of that type present on an element enclosed within the root elements of a round. For this purpose, a type parameter is considered to be enclosed by its &lt;a href=&quot;../../lang/model/element/typeparameterelement#getGenericElement()&quot;&gt;generic element&lt;/a&gt;. For this purpose, a package element is &lt;em&gt;not&lt;/em&gt; considered to enclose the top-level types within that package. (A root element representing a package is created when a &lt;code&gt;package-info&lt;/code&gt; file is processed.) Likewise, for this purpose, a module element is &lt;em&gt;not&lt;/em&gt; considered to enclose the packages within that module. (A root element representing a module is created when a &lt;code&gt;module-info&lt;/code&gt; file is processed.) Annotations on &lt;a href=&quot;../../../../java.base/java/lang/annotation/elementtype#TYPE_USE&quot;&gt;type uses&lt;/a&gt;, as opposed to annotations on elements, are ignored when computing whether or not an annotation type is present.</source>
          <target state="translated">라운드의 루트 요소 내에 포함 된 요소에 해당 유형의 주석이 하나 이상있는 경우 주석 유형이있는 것으로 간주됩니다. 이를 위해 유형 매개 변수는 &lt;a href=&quot;../../lang/model/element/typeparameterelement#getGenericElement()&quot;&gt;일반 요소&lt;/a&gt; 로 묶인 것으로 간주됩니다 . 이를 위해 패키지 요소는 해당 패키지 내의 최상위 유형을 포함하는 것으로 간주 &lt;em&gt;되지 않습니다&lt;/em&gt; . (패키지를 나타내는 루트 요소는 &lt;code&gt;package-info&lt;/code&gt; 파일이 처리 될 때 생성됩니다 .) 마찬가지로이를 위해 모듈 요소는 해당 모듈 내에 패키지를 묶는 것으로 간주 &lt;em&gt;되지 않습니다&lt;/em&gt; . ( &lt;code&gt;module-info&lt;/code&gt; 파일을 처리 할 때 모듈을 나타내는 루트 요소가 생성됩니다 .) &lt;a href=&quot;../../../../java.base/java/lang/annotation/elementtype#TYPE_USE&quot;&gt;유형&lt;/a&gt; 에 대한 주석 사용요소에 대한 주석과 달리 주석 유형이 있는지 여부를 계산할 때 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="8b6df1660030d3e87e06eed015ee71e977deaa5e" translate="yes" xml:space="preserve">
          <source>An annotation type is considered present if there is at least one annotation of that type present on an element enclosed within the root elements of a round. For this purpose, a type parameter is considered to be enclosed by its &lt;a href=&quot;../../lang/model/element/typeparameterelement#getGenericElement--&quot;&gt;generic element&lt;/a&gt;. Annotations on &lt;a href=&quot;../../../java/lang/annotation/elementtype#TYPE_USE&quot;&gt;type uses&lt;/a&gt;, as opposed to annotations on elements, are ignored when computing whether or not an annotation type is present.</source>
          <target state="translated">라운드의 루트 요소 내에 포함 된 요소에 해당 형식의 주석이 하나 이상 있으면 주석 유형이 존재하는 것으로 간주됩니다. 이를 위해 형식 매개 변수는 &lt;a href=&quot;../../lang/model/element/typeparameterelement#getGenericElement--&quot;&gt;일반 요소&lt;/a&gt; 로 묶인 것으로 간주됩니다 . 주석의 &lt;a href=&quot;../../../java/lang/annotation/elementtype#TYPE_USE&quot;&gt;타입 용도&lt;/a&gt; 주석 형이 존재하는지의 여부를 계산할 때, 요소 주석 대조적으로 무시된다.</target>
        </trans-unit>
        <trans-unit id="14e63b563a5a2a3136f10849cb425c952686e9de" translate="yes" xml:space="preserve">
          <source>An annotation type.</source>
          <target state="translated">주석 유형</target>
        </trans-unit>
        <trans-unit id="5acf22469336e91ec7942742a86f8fb00dd7e069" translate="yes" xml:space="preserve">
          <source>An annotation used to indicate the latest source version an annotation processor supports.</source>
          <target state="translated">주석 프로세서가 지원하는 최신 소스 버전을 나타내는 데 사용되는 주석.</target>
        </trans-unit>
        <trans-unit id="18cb9fd2c013845d7201b0c459a3113aba2d5089" translate="yes" xml:space="preserve">
          <source>An annotation used to indicate the latest source version an annotation processor supports. The &lt;a href=&quot;processor#getSupportedSourceVersion()&quot;&gt;&lt;code&gt;Processor.getSupportedSourceVersion()&lt;/code&gt;&lt;/a&gt; method can construct its result from the value of this annotation, as done by &lt;a href=&quot;abstractprocessor#getSupportedSourceVersion()&quot;&gt;&lt;code&gt;AbstractProcessor.getSupportedSourceVersion()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주석 프로세서가 지원하는 최신 소스 버전을 나타내는 데 사용되는 주석입니다. &lt;a href=&quot;processor#getSupportedSourceVersion()&quot;&gt; &lt;code&gt;Processor.getSupportedSourceVersion()&lt;/code&gt; &lt;/a&gt; 에 의해 수행 방법으로서,이 주석의 값으로부터의 결과를 구성 할 수 &lt;a href=&quot;abstractprocessor#getSupportedSourceVersion()&quot;&gt; &lt;code&gt;AbstractProcessor.getSupportedSourceVersion()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="75a22bca3d43b7e0045022a54654e9232487a478" translate="yes" xml:space="preserve">
          <source>An annotation used to indicate the latest source version an annotation processor supports. The &lt;a href=&quot;processor#getSupportedSourceVersion--&quot;&gt;&lt;code&gt;Processor.getSupportedSourceVersion()&lt;/code&gt;&lt;/a&gt; method can construct its result from the value of this annotation, as done by &lt;a href=&quot;abstractprocessor#getSupportedSourceVersion--&quot;&gt;&lt;code&gt;AbstractProcessor.getSupportedSourceVersion()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주석 프로세서가 지원하는 최신 소스 버전을 나타내는 데 사용되는 주석. &lt;a href=&quot;processor#getSupportedSourceVersion--&quot;&gt; &lt;code&gt;Processor.getSupportedSourceVersion()&lt;/code&gt; &lt;/a&gt; 에 의해 수행 방법으로서,이 주석의 값으로부터의 결과를 구성 할 수 &lt;a href=&quot;abstractprocessor#getSupportedSourceVersion--&quot;&gt; &lt;code&gt;AbstractProcessor.getSupportedSourceVersion()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4031e4bf917fdf8281946e5549b65817c6e956cf" translate="yes" xml:space="preserve">
          <source>An annotation used to indicate what annotation types an annotation processor supports.</source>
          <target state="translated">주석 프로세서가 지원하는 주석 유형을 나타내는 데 사용되는 주석.</target>
        </trans-unit>
        <trans-unit id="18037e71e2e19bad0ee600cd4edc47f75454e56b" translate="yes" xml:space="preserve">
          <source>An annotation used to indicate what annotation types an annotation processor supports. The &lt;a href=&quot;processor#getSupportedAnnotationTypes()&quot;&gt;&lt;code&gt;Processor.getSupportedAnnotationTypes()&lt;/code&gt;&lt;/a&gt; method can construct its result from the value of this annotation, as done by &lt;a href=&quot;abstractprocessor#getSupportedAnnotationTypes()&quot;&gt;&lt;code&gt;AbstractProcessor.getSupportedAnnotationTypes()&lt;/code&gt;&lt;/a&gt;. Only &lt;a href=&quot;processor#getSupportedAnnotationTypes()&quot;&gt;strings conforming to the grammar&lt;/a&gt; should be used as values.</source>
          <target state="translated">주석 프로세서가 지원하는 주석 유형을 나타내는 데 사용되는 주석입니다. &lt;a href=&quot;processor#getSupportedAnnotationTypes()&quot;&gt; &lt;code&gt;Processor.getSupportedAnnotationTypes()&lt;/code&gt; &lt;/a&gt; 에 의해 수행 방법으로서,이 주석의 값으로부터의 결과를 구성 할 수 &lt;a href=&quot;abstractprocessor#getSupportedAnnotationTypes()&quot;&gt; &lt;code&gt;AbstractProcessor.getSupportedAnnotationTypes()&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;processor#getSupportedAnnotationTypes()&quot;&gt;문법에 맞는 문자열&lt;/a&gt; 만 값으로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9c6b615866c974b486b01e734a1db2e9117def2e" translate="yes" xml:space="preserve">
          <source>An annotation used to indicate what annotation types an annotation processor supports. The &lt;a href=&quot;processor#getSupportedAnnotationTypes--&quot;&gt;&lt;code&gt;Processor.getSupportedAnnotationTypes()&lt;/code&gt;&lt;/a&gt; method can construct its result from the value of this annotation, as done by &lt;a href=&quot;abstractprocessor#getSupportedAnnotationTypes--&quot;&gt;&lt;code&gt;AbstractProcessor.getSupportedAnnotationTypes()&lt;/code&gt;&lt;/a&gt;. Only &lt;a href=&quot;processor#getSupportedAnnotationTypes--&quot;&gt;strings conforming to the grammar&lt;/a&gt; should be used as values.</source>
          <target state="translated">주석 프로세서가 지원하는 주석 유형을 나타내는 데 사용되는 주석. &lt;a href=&quot;processor#getSupportedAnnotationTypes--&quot;&gt; &lt;code&gt;Processor.getSupportedAnnotationTypes()&lt;/code&gt; &lt;/a&gt; 에 의해 수행 방법으로서,이 주석의 값으로부터의 결과를 구성 할 수 &lt;a href=&quot;abstractprocessor#getSupportedAnnotationTypes--&quot;&gt; &lt;code&gt;AbstractProcessor.getSupportedAnnotationTypes()&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;processor#getSupportedAnnotationTypes--&quot;&gt;문법에 맞는 문자열&lt;/a&gt; 만 값으로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="f60174ffc1f6b3c4b12023190798b68e02120e59" translate="yes" xml:space="preserve">
          <source>An annotation used to indicate what options an annotation processor supports.</source>
          <target state="translated">주석 프로세서가 지원하는 옵션을 나타내는 데 사용되는 주석.</target>
        </trans-unit>
        <trans-unit id="1db0ea6726b05188876713fd8ffa0420fb466677" translate="yes" xml:space="preserve">
          <source>An annotation used to indicate what options an annotation processor supports. The &lt;a href=&quot;processor#getSupportedOptions()&quot;&gt;&lt;code&gt;Processor.getSupportedOptions()&lt;/code&gt;&lt;/a&gt; method can construct its result from the value of this annotation, as done by &lt;a href=&quot;abstractprocessor#getSupportedOptions()&quot;&gt;&lt;code&gt;AbstractProcessor.getSupportedOptions()&lt;/code&gt;&lt;/a&gt;. Only &lt;a href=&quot;processor#getSupportedOptions()&quot;&gt;strings conforming to the grammar&lt;/a&gt; should be used as values.</source>
          <target state="translated">주석 프로세서가 지원하는 옵션을 나타내는 데 사용되는 주석입니다. &lt;a href=&quot;processor#getSupportedOptions()&quot;&gt; &lt;code&gt;Processor.getSupportedOptions()&lt;/code&gt; &lt;/a&gt; 에 의해 수행 방법으로서,이 주석의 값으로부터의 결과를 구성 할 수 &lt;a href=&quot;abstractprocessor#getSupportedOptions()&quot;&gt; &lt;code&gt;AbstractProcessor.getSupportedOptions()&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;processor#getSupportedOptions()&quot;&gt;문법에 맞는 문자열&lt;/a&gt; 만 값으로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="e1dd2d1ae6f44b3ce4963b186b86ccaef326db35" translate="yes" xml:space="preserve">
          <source>An annotation used to indicate what options an annotation processor supports. The &lt;a href=&quot;processor#getSupportedOptions--&quot;&gt;&lt;code&gt;Processor.getSupportedOptions()&lt;/code&gt;&lt;/a&gt; method can construct its result from the value of this annotation, as done by &lt;a href=&quot;abstractprocessor#getSupportedOptions--&quot;&gt;&lt;code&gt;AbstractProcessor.getSupportedOptions()&lt;/code&gt;&lt;/a&gt;. Only &lt;a href=&quot;processor#getSupportedOptions--&quot;&gt;strings conforming to the grammar&lt;/a&gt; should be used as values.</source>
          <target state="translated">주석 프로세서가 지원하는 옵션을 나타내는 데 사용되는 주석. &lt;a href=&quot;processor#getSupportedOptions--&quot;&gt; &lt;code&gt;Processor.getSupportedOptions()&lt;/code&gt; &lt;/a&gt; 에 의해 수행 방법으로서,이 주석의 값으로부터의 결과를 구성 할 수 &lt;a href=&quot;abstractprocessor#getSupportedOptions--&quot;&gt; &lt;code&gt;AbstractProcessor.getSupportedOptions()&lt;/code&gt; &lt;/a&gt; . &lt;a href=&quot;processor#getSupportedOptions--&quot;&gt;문법에 맞는 문자열&lt;/a&gt; 만 값으로 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="5a8612536e72755b456724a0e12cb5455d499c12" translate="yes" xml:space="preserve">
          <source>An annotation used to specify some class-related information for the automatically generated &lt;a href=&quot;beaninfo&quot;&gt;&lt;code&gt;BeanInfo&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">자동으로 생성 된 &lt;a href=&quot;beaninfo&quot;&gt; &lt;code&gt;BeanInfo&lt;/code&gt; &lt;/a&gt; 클래스에 대한 일부 클래스 관련 정보를 지정하는 데 사용되는 주석 입니다.</target>
        </trans-unit>
        <trans-unit id="c239b1a6eda139d98da07502d5740851529ceeaf" translate="yes" xml:space="preserve">
          <source>An annotation used to specify some class-related information for the automatically generated &lt;a href=&quot;beaninfo&quot;&gt;&lt;code&gt;BeanInfo&lt;/code&gt;&lt;/a&gt; classes. This annotation is not used if the annotated class has a corresponding user-defined &lt;code&gt;BeanInfo&lt;/code&gt; class, which does not imply the automatic analysis.</source>
          <target state="translated">자동으로 생성 된 &lt;a href=&quot;beaninfo&quot;&gt; &lt;code&gt;BeanInfo&lt;/code&gt; &lt;/a&gt; 클래스에 대한 일부 클래스 관련 정보를 지정하는 데 사용되는 주석 입니다. 이 어노테이션은 어노테이션이있는 클래스에 해당 사용자 정의 &lt;code&gt;BeanInfo&lt;/code&gt; 클래스가있는 경우 사용되지 않으며 이는 자동 분석을 의미하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e818d2a1b1c781d246d2f2f2c4f551a1f5dcfde6" translate="yes" xml:space="preserve">
          <source>An annotation used to specify some property-related information for the automatically generated &lt;a href=&quot;beaninfo&quot;&gt;&lt;code&gt;BeanInfo&lt;/code&gt;&lt;/a&gt; classes.</source>
          <target state="translated">자동 생성 된 &lt;a href=&quot;beaninfo&quot;&gt; &lt;code&gt;BeanInfo&lt;/code&gt; &lt;/a&gt; 클래스에 대한 일부 속성 관련 정보를 지정하는 데 사용되는 주석 입니다.</target>
        </trans-unit>
        <trans-unit id="51dadf80b2a0a1a6e28fac4a94eff3e6c3b7e3a3" translate="yes" xml:space="preserve">
          <source>An annotation used to specify some property-related information for the automatically generated &lt;a href=&quot;beaninfo&quot;&gt;&lt;code&gt;BeanInfo&lt;/code&gt;&lt;/a&gt; classes. This annotation is not used if the annotated class has a corresponding user-defined &lt;code&gt;BeanInfo&lt;/code&gt; class, which does not imply the automatic analysis. If both the read and the write methods of the property are annotated, then the read method annotation will have more priority and replace the write method annotation.</source>
          <target state="translated">자동 생성 된 &lt;a href=&quot;beaninfo&quot;&gt; &lt;code&gt;BeanInfo&lt;/code&gt; &lt;/a&gt; 클래스에 대한 일부 속성 관련 정보를 지정하는 데 사용되는 주석 입니다. 이 어노테이션은 어노테이션이있는 클래스에 해당 사용자 정의 &lt;code&gt;BeanInfo&lt;/code&gt; 클래스가있는 경우 사용되지 않으며 이는 자동 분석을 의미하지 않습니다. 속성의 읽기 및 쓰기 메서드 모두에 주석이 추가 된 경우 읽기 메서드 주석이 더 높은 우선 순위를 가지며 쓰기 메서드 주석을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="afea66a54a8a58ddc2b397a75e56a960364379b6" translate="yes" xml:space="preserve">
          <source>An annotation used to specify some swing-related information for the automatically generated &lt;code&gt;BeanInfo&lt;/code&gt; classes.</source>
          <target state="translated">자동으로 생성 된 &lt;code&gt;BeanInfo&lt;/code&gt; 클래스에 대한 스윙 관련 정보를 지정하는 데 사용되는 주석 입니다.</target>
        </trans-unit>
        <trans-unit id="c8f6068b9d3f70f16ee17e5b3c7d5518a7901a67" translate="yes" xml:space="preserve">
          <source>An annotation used to specify some swing-related information for the automatically generated &lt;code&gt;BeanInfo&lt;/code&gt; classes. This annotation is not used if the annotated class has a corresponding user-defined &lt;code&gt;BeanInfo&lt;/code&gt; class, which does not imply the automatic analysis.</source>
          <target state="translated">자동으로 생성 된 &lt;code&gt;BeanInfo&lt;/code&gt; 클래스에 대한 스윙 관련 정보를 지정하는 데 사용되는 주석 입니다. 이 어노테이션은 어노테이션이있는 클래스에 해당 사용자 정의 &lt;code&gt;BeanInfo&lt;/code&gt; 클래스가있는 경우 사용되지 않으며 이는 자동 분석을 의미하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="84d66d95925dfc3cd78561fe80ec736fcd8159fc" translate="yes" xml:space="preserve">
          <source>An anonymous class is not a &lt;a href=&quot;#isHidden()&quot;&gt;hidden class&lt;/a&gt;.</source>
          <target state="translated">익명 클래스는 &lt;a href=&quot;#isHidden()&quot;&gt;숨겨진&lt;/a&gt; 클래스가 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="c112ed0124d512491ba2a98ceb11fe45964724a1" translate="yes" xml:space="preserve">
          <source>An applet is a small program that is intended not to be run on its own, but rather to be embedded inside another application.</source>
          <target state="translated">애플릿은 자체적으로 실행되는 것이 아니라 다른 응용 프로그램에 포함되도록 고안된 작은 프로그램입니다.</target>
        </trans-unit>
        <trans-unit id="c43686e7febec62d151a03b6306a5f37f51db47a" translate="yes" xml:space="preserve">
          <source>An applet viewer or browser is free to ignore &lt;code&gt;showDocument&lt;/code&gt;.</source>
          <target state="translated">애플릿 뷰어 또는 브라우저는 &lt;code&gt;showDocument&lt;/code&gt; 를 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="94097b98810c70d8481127bda6928c8877670a46" translate="yes" xml:space="preserve">
          <source>An application calls the method &lt;code&gt;setResolvedValue&lt;/code&gt; after it has resolved all of the conflicts in the current conflict row and repeats this process for each conflict row in the &lt;code&gt;SyncResolver&lt;/code&gt; object.</source>
          <target state="translated">애플리케이션 은 현재 충돌 행의 모든 ​​충돌을 해결 한 후 &lt;code&gt;setResolvedValue&lt;/code&gt; 메소드를 호출 하고 &lt;code&gt;SyncResolver&lt;/code&gt; 오브젝트 의 각 충돌 행에 대해이 프로세스를 반복 합니다.</target>
        </trans-unit>
        <trans-unit id="fc0124064e76c2d95eff56f01c731d039597afbe" translate="yes" xml:space="preserve">
          <source>An application can access a platform MXBean in the following ways:</source>
          <target state="translated">애플리케이션은 다음과 같은 방식으로 플랫폼 MXBean에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1727be2804c6184e0af4d6ab5dd3aa80267da524" translate="yes" xml:space="preserve">
          <source>An application can also specify a &quot;relative URL&quot;, which contains only enough information to reach the resource relative to another URL. Relative URLs are frequently used within HTML pages. For example, if the contents of the URL:</source>
          <target state="translated">응용 프로그램은 또한 &quot;상대 URL&quot;을 지정할 수 있습니다. 여기에는 다른 URL과 관련하여 리소스에 도달하기에 충분한 정보 만 포함됩니다. 상대 URL은 HTML 페이지 내에서 자주 사용됩니다. 예를 들어 URL의 내용이 다음과 같은 경우 :</target>
        </trans-unit>
        <trans-unit id="b6fe4a5a29b9b840d12eef98ca9953d13224d94a" translate="yes" xml:space="preserve">
          <source>An application can call the method &lt;code&gt;setConcurrency&lt;/code&gt; at any time to change a &lt;code&gt;RowSet&lt;/code&gt; object's concurrency.</source>
          <target state="translated">애플리케이션은 언제든지 &lt;code&gt;setConcurrency&lt;/code&gt; 메서드를 호출하여 &lt;code&gt;RowSet&lt;/code&gt; 개체의 동시성 을 변경할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6046ea8fd2ff71ec91dbdabf5832814948f14ca0" translate="yes" xml:space="preserve">
          <source>An application can continuously monitor its memory usage by calling either the &lt;a href=&quot;#getUsage()&quot;&gt;&lt;code&gt;getUsage()&lt;/code&gt;&lt;/a&gt; method for all memory pools or the &lt;a href=&quot;#isUsageThresholdExceeded()&quot;&gt;&lt;code&gt;isUsageThresholdExceeded()&lt;/code&gt;&lt;/a&gt; method for those memory pools that support a usage threshold. Below is example code that has a thread dedicated for task distribution and processing. At every interval, it will determine if it should receive and process new tasks based on its memory usage. If the memory usage exceeds its usage threshold, it will redistribute all outstanding tasks to other VMs and stop receiving new tasks until the memory usage returns below its usage threshold.</source>
          <target state="translated">애플리케이션은 모든 메모리 풀에 대해 &lt;a href=&quot;#getUsage()&quot;&gt; &lt;code&gt;getUsage()&lt;/code&gt; &lt;/a&gt; 메서드를 호출하거나 사용량 임계 값을 지원하는 메모리 풀에 대해 &lt;a href=&quot;#isUsageThresholdExceeded()&quot;&gt; &lt;code&gt;isUsageThresholdExceeded()&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 메모리 사용량을 지속적으로 모니터링 할 수 있습니다 . 다음은 작업 배포 및 처리 전용 스레드가있는 예제 코드입니다. 매 간격마다 메모리 사용량에 따라 새 작업을 수신하고 처리해야하는지 여부를 결정합니다. 메모리 사용량이 사용량 임계 값을 초과하면 모든 미해결 작업을 다른 VM에 재배포하고 메모리 사용량이 사용량 임계 값 아래로 돌아올 때까지 새 작업 수신을 중지합니다.</target>
        </trans-unit>
        <trans-unit id="115e820fd6fddc9f896d73ad580483a2f6d34311" translate="yes" xml:space="preserve">
          <source>An application can continuously monitor its memory usage by calling either the &lt;a href=&quot;memorypoolmxbean#getUsage--&quot;&gt;&lt;code&gt;getUsage()&lt;/code&gt;&lt;/a&gt; method for all memory pools or the &lt;a href=&quot;memorypoolmxbean#isUsageThresholdExceeded--&quot;&gt;&lt;code&gt;isUsageThresholdExceeded()&lt;/code&gt;&lt;/a&gt; method for those memory pools that support a usage threshold. Below is example code that has a thread dedicated for task distribution and processing. At every interval, it will determine if it should receive and process new tasks based on its memory usage. If the memory usage exceeds its usage threshold, it will redistribute all outstanding tasks to other VMs and stop receiving new tasks until the memory usage returns below its usage threshold.</source>
          <target state="translated">응용 프로그램은 모든 메모리 풀에 대해 &lt;a href=&quot;memorypoolmxbean#getUsage--&quot;&gt; &lt;code&gt;getUsage()&lt;/code&gt; &lt;/a&gt; 메소드 또는 사용 임계 값을 지원하는 해당 메모리 풀에 대해 &lt;a href=&quot;memorypoolmxbean#isUsageThresholdExceeded--&quot;&gt; &lt;code&gt;isUsageThresholdExceeded()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 메모리 사용을 지속적으로 모니터 할 수 있습니다 . 다음은 작업 배포 및 처리 전용 스레드가있는 예제 코드입니다. 매 간격마다 메모리 사용량에 따라 새 작업을 수신하고 처리해야하는지 결정합니다. 메모리 사용량이 사용량 임계 값을 초과하면 모든 미해결 작업을 다른 VM에 재분배하고 메모리 사용량이 사용량 임계 값 아래로 돌아올 때까지 새 작업 수신을 중지합니다.</target>
        </trans-unit>
        <trans-unit id="f7c8d446a38c2d43ab4ab1869a5b686a9d89d365" translate="yes" xml:space="preserve">
          <source>An application can get information about the columns in a &lt;code&gt;CachedRowSet&lt;/code&gt; object by calling &lt;code&gt;ResultSetMetaData&lt;/code&gt; and &lt;code&gt;RowSetMetaData&lt;/code&gt; methods on a &lt;code&gt;RowSetMetaData&lt;/code&gt; object. The following code fragment, in which</source>
          <target state="translated">응용 프로그램은 &lt;code&gt;RowSetMetaData&lt;/code&gt; 개체 에서 &lt;code&gt;ResultSetMetaData&lt;/code&gt; 및 &lt;code&gt;RowSetMetaData&lt;/code&gt; 메서드를 호출 하여 &lt;code&gt;CachedRowSet&lt;/code&gt; 개체 의 열에 대한 정보를 가져올 수 있습니다 . 다음 코드 조각은</target>
        </trans-unit>
        <trans-unit id="66fc3bccd62c8102da3996580d8b65f0059250a1" translate="yes" xml:space="preserve">
          <source>An application can increase the capacity of an &lt;code&gt;ArrayList&lt;/code&gt; instance before adding a large number of elements using the &lt;code&gt;ensureCapacity&lt;/code&gt; operation. This may reduce the amount of incremental reallocation.</source>
          <target state="translated">&lt;code&gt;ensureCapacity&lt;/code&gt; 작업을 사용하여 많은 수의 요소를 추가하기 전에 응용 프로그램에서 &lt;code&gt;ArrayList&lt;/code&gt; 인스턴스 의 용량을 늘릴 수 있습니다 . 이는 증분 재 할당량을 줄일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7592c455be8d26703b094a8e2452a7a8291e1ecd" translate="yes" xml:space="preserve">
          <source>An application can invoke this method to branch off an association into a separate channel. The new bound and connected &lt;a href=&quot;sctpchannel&quot;&gt;&lt;code&gt;SctpChannel&lt;/code&gt;&lt;/a&gt; will be created for the association. The branched off association will no longer be part of this channel.</source>
          <target state="translated">응용 프로그램은이 메서드를 호출하여 연결을 별도의 채널로 분기 할 수 있습니다. 새로운 바운드 및 연결된 &lt;a href=&quot;sctpchannel&quot;&gt; &lt;code&gt;SctpChannel&lt;/code&gt; &lt;/a&gt; 이 연결에 대해 생성됩니다. 분기 된 연결은 더 이상이 채널의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="5a14f747966a13adfe799654d69362593cdd5855" translate="yes" xml:space="preserve">
          <source>An application can modify the data in a &lt;code&gt;CachedRowSet&lt;/code&gt; object, and those modifications can then be propagated back to the source of the data.</source>
          <target state="translated">애플리케이션은 &lt;code&gt;CachedRowSet&lt;/code&gt; 개체 의 데이터를 수정할 수 있으며 이러한 수정 사항은 데이터 소스로 다시 전파 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="091a5d260c75e604688568fbefd6e2d812988aa0" translate="yes" xml:space="preserve">
          <source>An application can monitor the instrumentation of the Java virtual machine and the runtime in the following ways:</source>
          <target state="translated">애플리케이션은 다음과 같은 방법으로 Java 가상 머신 및 런타임의 계측을 모니터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="810a307f6a3596836b9c2ad0947503e57c9a4014" translate="yes" xml:space="preserve">
          <source>An application can replace the logging backend</source>
          <target state="translated">애플리케이션은 로깅 백엔드를 대체 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e17d44362e4c5ab29fca0e7b705ecaaee190d736" translate="yes" xml:space="preserve">
          <source>An application can retrieve the &lt;code&gt;SyncProvider&lt;/code&gt; object currently in use by a disconnected &lt;code&gt;RowSet&lt;/code&gt; object. It can also retrieve the grade of synchronization with which the provider was implemented and the degree of locking currently in use. In addition, an application has the flexibility to set the degree of locking to be used, which can increase the possibilities for successful synchronization. These operation are shown in the following code fragment.</source>
          <target state="translated">응용 프로그램은 연결이 끊어진 &lt;code&gt;RowSet&lt;/code&gt; 개체 에서 현재 사용중인 &lt;code&gt;SyncProvider&lt;/code&gt; 개체를 검색 할 수 있습니다 . 또한 공급자가 구현 된 동기화 등급과 현재 사용중인 잠금 등급을 검색 할 수 있습니다. 또한 응용 프로그램은 사용할 잠금 수준을 유연하게 설정할 수 있으므로 성공적인 동기화 가능성을 높일 수 있습니다. 이러한 작업은 다음 코드 조각에 나와 있습니다.</target>
        </trans-unit>
        <trans-unit id="95ca80e3187e793ccf9eeb8bfbb650ebc2101454" translate="yes" xml:space="preserve">
          <source>An application can use the method &lt;code&gt;targetMustExist()&lt;/code&gt; to check whether a &lt;code&gt;EventContext&lt;/code&gt; supports registration of nonexistent targets.</source>
          <target state="translated">애플리케이션은 &lt;code&gt;targetMustExist()&lt;/code&gt; 메소드를 사용하여 &lt;code&gt;EventContext&lt;/code&gt; 가 존재하지 않는 대상의 등록을 지원 하는지 여부를 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6a8937d75fad2c11b37dcc0d9eb83c4f65796476" translate="yes" xml:space="preserve">
          <source>An application can use the method &lt;code&gt;targetMustExist()&lt;/code&gt; to check whether an &lt;code&gt;EventContext&lt;/code&gt; supports registration of nonexistent targets.</source>
          <target state="translated">애플리케이션은 &lt;code&gt;targetMustExist()&lt;/code&gt; 메소드를 사용하여 &lt;code&gt;EventContext&lt;/code&gt; 가 존재하지 않는 대상의 등록을 지원 하는지 여부를 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="90ef8a309089eacf6ad4cc4d7c0a38bbfa3a99e3" translate="yes" xml:space="preserve">
          <source>An application cannot create its own instance of this class.</source>
          <target state="translated">응용 프로그램은이 클래스의 자체 인스턴스를 작성할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b3ba1980c269bd64417681572c060a71b272ece9" translate="yes" xml:space="preserve">
          <source>An application does not generally call the &lt;code&gt;getContent&lt;/code&gt; method in this class directly. Instead, an application calls the &lt;code&gt;getContent&lt;/code&gt; method in class &lt;code&gt;URL&lt;/code&gt; or in &lt;code&gt;URLConnection&lt;/code&gt;. The application's content handler factory (an instance of a class that implements the interface &lt;code&gt;ContentHandlerFactory&lt;/code&gt; set up by a call to &lt;a href=&quot;urlconnection#setContentHandlerFactory(java.net.ContentHandlerFactory)&quot;&gt;&lt;code&gt;setContentHandlerFactory&lt;/code&gt;&lt;/a&gt; is called with a &lt;code&gt;String&lt;/code&gt; giving the MIME type of the object being received on the socket. The factory returns an instance of a subclass of &lt;code&gt;ContentHandler&lt;/code&gt;, and its &lt;code&gt;getContent&lt;/code&gt; method is called to create the object.</source>
          <target state="translated">애플리케이션은 일반적 으로이 클래스 의 &lt;code&gt;getContent&lt;/code&gt; 메소드를 직접 호출하지 않습니다 . 대신 애플리케이션은 &lt;code&gt;URL&lt;/code&gt; 클래스 또는 &lt;code&gt;URLConnection&lt;/code&gt; 에서 &lt;code&gt;getContent&lt;/code&gt; 메소드를 호출합니다 . 애플리케이션의 컨텐츠 핸들러 팩토리 ( &lt;a href=&quot;urlconnection#setContentHandlerFactory(java.net.ContentHandlerFactory)&quot;&gt; &lt;code&gt;setContentHandlerFactory&lt;/code&gt; &lt;/a&gt; 호출로 설정된 인터페이스 &lt;code&gt;ContentHandlerFactory&lt;/code&gt; 를 구현하는 클래스의 인스턴스 는 소켓에서 수신되는 객체의 MIME 유형을 제공 하는 &lt;code&gt;String&lt;/code&gt; 로 호출됩니다 . 팩토리는 다음의 하위 클래스 인스턴스를 반환합니다. &lt;code&gt;ContentHandler&lt;/code&gt; 및 &lt;code&gt;getContent&lt;/code&gt; 메소드가 호출되어 객체를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="8a6df7d151a5d6f20800947f9d0709eba3db671b" translate="yes" xml:space="preserve">
          <source>An application does not generally call the &lt;code&gt;getContent&lt;/code&gt; method in this class directly. Instead, an application calls the &lt;code&gt;getContent&lt;/code&gt; method in class &lt;code&gt;URL&lt;/code&gt; or in &lt;code&gt;URLConnection&lt;/code&gt;. The application's content handler factory (an instance of a class that implements the interface &lt;code&gt;ContentHandlerFactory&lt;/code&gt; set up by a call to &lt;code&gt;setContentHandler&lt;/code&gt;) is called with a &lt;code&gt;String&lt;/code&gt; giving the MIME type of the object being received on the socket. The factory returns an instance of a subclass of &lt;code&gt;ContentHandler&lt;/code&gt;, and its &lt;code&gt;getContent&lt;/code&gt; method is called to create the object.</source>
          <target state="translated">어플리케이션은 일반적 으로이 클래스에서 &lt;code&gt;getContent&lt;/code&gt; 메소드를 직접 호출하지 않습니다 . 대신 애플리케이션 은 클래스 &lt;code&gt;URL&lt;/code&gt; 또는 &lt;code&gt;URLConnection&lt;/code&gt; 에서 &lt;code&gt;getContent&lt;/code&gt; 메소드를 호출합니다 . 애플리케이션의 컨텐츠 핸들러 팩토리 ( &lt;code&gt;setContentHandler&lt;/code&gt; 에 대한 호출로 설정된 &lt;code&gt;ContentHandlerFactory&lt;/code&gt; 인터페이스를 구현하는 클래스의 인스턴스 )는 소켓에서 수신되는 오브젝트의 MIME 유형을 제공 하는 &lt;code&gt;String&lt;/code&gt; 으로 호출됩니다 . 팩토리는 &lt;code&gt;ContentHandler&lt;/code&gt; 의 서브 클래스 인스턴스를 리턴 하고 &lt;code&gt;getContent&lt;/code&gt; 메소드가 호출되어 오브젝트를 작성합니다.</target>
        </trans-unit>
        <trans-unit id="d152f8bcdbb685841bbe92604f70c30b74a1c9ce" translate="yes" xml:space="preserve">
          <source>An application does not need to do anything special to participate in a distributed transaction. It simply creates connections to the data sources it wants to use via the &lt;code&gt;DataSource.getConnection&lt;/code&gt; method, just as it normally does. The transaction manager manages the transaction behind the scenes. The &lt;code&gt;XADataSource&lt;/code&gt; interface creates &lt;code&gt;XAConnection&lt;/code&gt; objects, and each &lt;code&gt;XAConnection&lt;/code&gt; object creates an &lt;code&gt;XAResource&lt;/code&gt; object that the transaction manager uses to manage the connection.</source>
          <target state="translated">응용 프로그램은 분산 트랜잭션에 참여하기 위해 특별한 작업을 수행 할 필요가 없습니다. 일반적으로하는 것처럼 &lt;code&gt;DataSource.getConnection&lt;/code&gt; 메소드 를 통해 사용하려는 데이터 소스에 대한 연결을 생성합니다 . 트랜잭션 관리자는 뒤에서 트랜잭션을 관리합니다. &lt;code&gt;XADataSource&lt;/code&gt; 에의 인터페이스를 생성 &lt;code&gt;XAConnection&lt;/code&gt; 는 개체 및 각 &lt;code&gt;XAConnection&lt;/code&gt; 의 목적은 생성 &lt;code&gt;XAResource&lt;/code&gt; 트랜잭션 관리자가 사용하는 연결을 관리하는 것을 목적한다.</target>
        </trans-unit>
        <trans-unit id="87b5d029599758045135722547430a9d62275c1a" translate="yes" xml:space="preserve">
          <source>An application implements a &lt;code&gt;CallbackHandler&lt;/code&gt; and passes it to underlying security services so that they may interact with the application to retrieve specific authentication data, such as usernames and passwords, or to display certain information, such as error and warning messages.</source>
          <target state="translated">애플리케이션은 &lt;code&gt;CallbackHandler&lt;/code&gt; 를 구현하고 이를 기본 보안 서비스에 전달하여 애플리케이션과 상호 작용하여 사용자 이름 및 비밀번호와 같은 특정 인증 데이터를 검색하거나 오류 및 경고 메시지와 같은 특정 정보를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c22cdb38f7fb3493695f954fef42383114c4d79a" translate="yes" xml:space="preserve">
          <source>An application invokes the static methods of the abstract class &lt;a href=&quot;printservicelookup&quot;&gt;&lt;code&gt;PrintServiceLookup&lt;/code&gt;&lt;/a&gt; to locate print services that have the capabilities to satisfy the application's print request. For example, to print a double-sided document, the application first needs to find printers that have the double-sided printing capability.</source>
          <target state="translated">응용 프로그램은 추상 클래스 &lt;a href=&quot;printservicelookup&quot;&gt; &lt;code&gt;PrintServiceLookup&lt;/code&gt; &lt;/a&gt; 의 정적 메소드를 호출하여 응용 프로그램의 인쇄 요청을 충족시키는 기능이있는 인쇄 서비스를 찾습니다. 예를 들어, 양면 문서를 인쇄하려면 응용 프로그램에서 먼저 양면 인쇄 기능이있는 프린터를 찾아야합니다.</target>
        </trans-unit>
        <trans-unit id="de9e08aefd69e9f5ddcc0c29e20fb0e6d24be178" translate="yes" xml:space="preserve">
          <source>An application is guaranteed that a read or write operation of up to the number of bytes returned from &lt;code&gt;available()&lt;/code&gt; will not block; however, there is no guarantee that attempts to read or write more data will block.</source>
          <target state="translated">응용 프로그램은 &lt;code&gt;available()&lt;/code&gt; 에서 리턴 된 최대 바이트 수의 읽기 또는 쓰기 조작이 차단되지 않음을 보증합니다 . 그러나 더 많은 데이터를 읽거나 쓰려는 시도가 차단된다는 보장은 없습니다.</target>
        </trans-unit>
        <trans-unit id="047ca78e756a6d91b656d5564f410992ad57b247" translate="yes" xml:space="preserve">
          <source>An application is registered to a URI or file type. The mechanism of registering, accessing, and launching the associated application is platform-dependent.</source>
          <target state="translated">애플리케이션은 URI 또는 ​​파일 유형에 등록됩니다. 관련 애플리케이션을 등록, 액세스 및 실행하는 메커니즘은 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="d169626f547e30263e64db3053522ec0469e9a56" translate="yes" xml:space="preserve">
          <source>An application is responsible for updating the system selection whenever the user selects text, using either the mouse or the keyboard. Typically, this is implemented by installing a &lt;code&gt;FocusListener&lt;/code&gt; on all &lt;code&gt;Component&lt;/code&gt;s which support text selection, and, between &lt;code&gt;FOCUS_GAINED&lt;/code&gt; and &lt;code&gt;FOCUS_LOST&lt;/code&gt; events delivered to that &lt;code&gt;Component&lt;/code&gt;, updating the system selection &lt;code&gt;Clipboard&lt;/code&gt; when the selection changes inside the &lt;code&gt;Component&lt;/code&gt;. Properly updating the system selection ensures that a Java application will interact correctly with native applications and other Java applications running simultaneously on the system. Note that &lt;code&gt;java.awt.TextComponent&lt;/code&gt; and &lt;code&gt;javax.swing.text.JTextComponent&lt;/code&gt; already adhere to this policy. When using these classes, and their subclasses, developers need not write any additional code.</source>
          <target state="translated">응용 프로그램은 사용자가 마우스 나 키보드를 사용하여 텍스트를 선택할 때마다 시스템 선택을 업데이트해야합니다. 일반적으로, 이것은 설치하여 구현 &lt;code&gt;FocusListener&lt;/code&gt; 모두에 &lt;code&gt;Component&lt;/code&gt; 사이의 어떤 지원 텍스트 선택, &lt;code&gt;FOCUS_GAINED&lt;/code&gt; 와 &lt;code&gt;FOCUS_LOST&lt;/code&gt; 그에게 전달 이벤트 &lt;code&gt;Component&lt;/code&gt; 시스템 선택 업데이트, &lt;code&gt;Clipboard&lt;/code&gt; 할 때 내부의 선택이 변경 &lt;code&gt;Component&lt;/code&gt; . 시스템 선택을 올바르게 업데이트하면 Java 응용 프로그램이 시스템에서 동시에 실행되는 기본 응용 프로그램 및 기타 Java 응용 프로그램과 올바르게 상호 작용할 수 있습니다. 참고 &lt;code&gt;java.awt.TextComponent&lt;/code&gt; 의 과 &lt;code&gt;javax.swing.text.JTextComponent&lt;/code&gt; 는 이미이 정책을 준수합니다. 이러한 클래스와 해당 하위 클래스를 사용할 때 개발자는 추가 코드를 작성할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="6ec4229c7c01ae8a988f9cf348de47bd396e4dc3" translate="yes" xml:space="preserve">
          <source>An application may choose to catch the &lt;code&gt;SyncProviderException&lt;/code&gt; object and retrieve the &lt;code&gt;SyncResolver&lt;/code&gt; object it contains. The &lt;code&gt;SyncResolver&lt;/code&gt; object lists the conflicts row by row and sets a lock on the data source to avoid further conflicts while the current conflicts are being resolved. Further, for each conflict, it provides methods for examining the conflict and setting the value that should be persisted in the data source. After all conflicts have been resolved, an application must call the &lt;code&gt;acceptChanges&lt;/code&gt; method again to write resolved values to the data source. If all of the values in the data source are already the values to be persisted, the method &lt;code&gt;acceptChanges&lt;/code&gt; does nothing.</source>
          <target state="translated">응용 프로그램은 &lt;code&gt;SyncProviderException&lt;/code&gt; 개체 를 포착하고 포함 된 &lt;code&gt;SyncResolver&lt;/code&gt; 개체를 검색 하도록 선택할 수 있습니다. &lt;code&gt;SyncResolver&lt;/code&gt; 개체 목록 충돌은 현재 충돌을 해소하는 동안 상기 충돌을 피하기 위해 로우 및 세트가 데이터 소스에 대한 잠금을 행. 또한 각 충돌에 대해 충돌을 검사하고 데이터 소스에 유지되어야하는 값을 설정하는 방법을 제공합니다. 모든 충돌이 해결 된 후 애플리케이션은 데이터 소스에 해결 된 값을 쓰기 위해 &lt;code&gt;acceptChanges&lt;/code&gt; 메소드를 다시 호출해야합니다 . 데이터 소스의 모든 값이 이미 지속될 값인 경우 &lt;code&gt;acceptChanges&lt;/code&gt; 메서드 는 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="968d5a5fff5cc194ef1dd6be86456eb4c6c94e48" translate="yes" xml:space="preserve">
          <source>An application may customize the contents of a registry as it sees fit, so long as it has the appropriate runtime permission.</source>
          <target state="translated">적절한 런타임 권한이있는 한 응용 프로그램은 레지스트리 내용을 적절하게 사용자 정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4ebf85db2698bfb155ea707d8fec8bb6d08562ce" translate="yes" xml:space="preserve">
          <source>An application may find this information helpful in performance sensitive code.</source>
          <target state="translated">애플리케이션은 성능에 민감한 코드에서이 정보가 도움이 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddd429144b9902b26b95940c5f9a4cdb6aed1995" translate="yes" xml:space="preserve">
          <source>An application may optionally pass in the flavor to be printed. If this is &lt;code&gt;non-null&lt;/code&gt; choices presented to the user can be better validated against those supported by the services. An application must pass in a &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; for returning user choices. On calling the &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; may be empty, or may contain application-specified values.</source>
          <target state="translated">응용 프로그램은 인쇄 할 맛을 선택적으로 전달할 수 있습니다. 이것이 &lt;code&gt;non-null&lt;/code&gt; 이 아닌 경우 사용자에게 제공되는 선택 항목은 서비스에서 지원하는 항목에 대해 더 잘 검증 될 수 있습니다. 응용 프로그램은 사용자 선택을 반환하기 위해 &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; 을 전달해야합니다 . 호출시 &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; 은 비어 있거나 응용 프로그램에서 지정한 값을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f934c6948f61c9b624106e8b500f0eeb8ab4b49" translate="yes" xml:space="preserve">
          <source>An application may optionally pass in the flavor to be printed. If this is non-null choices presented to the user can be better validated against those supported by the services. An application must pass in a PrintRequestAttributeSet for returning user choices. On calling the PrintRequestAttributeSet may be empty, or may contain application-specified values.</source>
          <target state="translated">애플리케이션은 선택적으로 인쇄 될 향미료를 전달할 수있다. 이것이 널이 아닌 선택이면 사용자에게 제시된 선택은 서비스가 지원하는 선택에 대해 더 잘 검증 될 수 있습니다. 응용 프로그램은 사용자 선택을 반환하기 위해 PrintRequestAttributeSet를 전달해야합니다. PrintRequestAttributeSet를 호출하면 비어 있거나 응용 프로그램 지정 값을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8048d4648afe14dcc05476985b8761d45a544bcc" translate="yes" xml:space="preserve">
          <source>An application may pass in a &lt;code&gt;PrintService&lt;/code&gt; to be initially displayed. A &lt;code&gt;non-null&lt;/code&gt; parameter must be included in the array of browsable services. If this parameter is &lt;code&gt;null&lt;/code&gt; a service is chosen by the implementation.</source>
          <target state="translated">응용 프로그램은 처음에 표시 될 &lt;code&gt;PrintService&lt;/code&gt; 를 전달할 수 있습니다 . &lt;code&gt;non-null&lt;/code&gt; 매개 변수는 검색 가능한 서비스의 배열에 포함되어야합니다. 이 매개 변수가 &lt;code&gt;null&lt;/code&gt; 구현에서 서비스를 선택합니다.</target>
        </trans-unit>
        <trans-unit id="9dafe0eaf8756d624939acbe220b2060edebc94a" translate="yes" xml:space="preserve">
          <source>An application may pass in a PrintService to be initially displayed. A non-null parameter must be included in the array of browsable services. If this parameter is null a service is chosen by the implementation.</source>
          <target state="translated">응용 프로그램은 PrintService를 전달하여 처음 표시 될 수 있습니다. 찾아 볼 수있는 서비스 배열에는 널이 아닌 매개 변수가 포함되어야합니다. 이 파라미터가 null의 경우, 구현에 의해 서비스가 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="9208d6da95d99908a9e855fc3b4d326dbf9dfc15" translate="yes" xml:space="preserve">
          <source>An application may set the size and location of an invisible &lt;code&gt;Window&lt;/code&gt; arbitrarily, but the window management system may subsequently change its size and/or location when the &lt;code&gt;Window&lt;/code&gt; is made visible. One or more &lt;code&gt;ComponentEvent&lt;/code&gt;s will be generated to indicate the new geometry.</source>
          <target state="translated">애플리케이션은 보이지의 크기와 위치를 설정할 수있다 &lt;code&gt;Window&lt;/code&gt; 임의로하지만 때 윈도우 관리 시스템은 계속해서 그 크기 및 / 또는 위치를 변경할 수 &lt;code&gt;Window&lt;/code&gt; 표시된다. 새 지오메트리를 나타 내기 위해 하나 이상의 &lt;code&gt;ComponentEvent&lt;/code&gt; 가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="3fd305553305d2462de72939672750e8a6172ab4" translate="yes" xml:space="preserve">
          <source>An application might use the &lt;a href=&quot;#activeCount()&quot;&gt;activeCount&lt;/a&gt; method to get an estimate of how big the array should be, however</source>
          <target state="translated">그러나 애플리케이션은 &lt;a href=&quot;#activeCount()&quot;&gt;activeCount&lt;/a&gt; 메서드를 사용 하여 어레이의 크기를 추정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="844d32edb1861fbc956b693c9352055fed9e23e8" translate="yes" xml:space="preserve">
          <source>An application might use the &lt;a href=&quot;#activeGroupCount()&quot;&gt;activeGroupCount&lt;/a&gt; method to get an estimate of how big the array should be, however</source>
          <target state="translated">그러나 애플리케이션은 &lt;a href=&quot;#activeGroupCount()&quot;&gt;activeGroupCount&lt;/a&gt; 메서드를 사용 하여 어레이의 크기를 추정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b8cebfcf947cef653ead61b4b25fb704b3e1458a" translate="yes" xml:space="preserve">
          <source>An application might use the &lt;a href=&quot;thread#activeCount--&quot;&gt;activeCount&lt;/a&gt; method to get an estimate of how big the array should be, however</source>
          <target state="translated">그러나 응용 프로그램은 &lt;a href=&quot;thread#activeCount--&quot;&gt;activeCount&lt;/a&gt; 메서드를 사용 하여 배열의 크기를 추정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c43b25ce39e541a3ce9b52903fee93e798ca80a1" translate="yes" xml:space="preserve">
          <source>An application might use the &lt;a href=&quot;threadgroup#activeCount--&quot;&gt;activeCount&lt;/a&gt; method to get an estimate of how big the array should be, however</source>
          <target state="translated">그러나 응용 프로그램은 &lt;a href=&quot;threadgroup#activeCount--&quot;&gt;activeCount&lt;/a&gt; 메서드를 사용 하여 배열의 크기를 추정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="71db00cc8d994789c137e61873d70534d3240b28" translate="yes" xml:space="preserve">
          <source>An application might use the &lt;a href=&quot;threadgroup#activeGroupCount--&quot;&gt;activeGroupCount&lt;/a&gt; method to get an estimate of how big the array should be, however</source>
          <target state="translated">그러나 응용 프로그램은 &lt;a href=&quot;threadgroup#activeGroupCount--&quot;&gt;activeGroupCount&lt;/a&gt; 메서드를 사용 하여 배열의 크기를 추정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="39f7a17cc225b582f1f7932840108fb8cfabbad9" translate="yes" xml:space="preserve">
          <source>An application must assume that the parser can no longer perform normal processing after reporting a fatal error and may stop by throwing a &lt;a href=&quot;saxexception&quot;&gt;&lt;code&gt;SAXException&lt;/code&gt;&lt;/a&gt; without calling &lt;a href=&quot;contenthandler#endDocument()&quot;&gt;&lt;code&gt;ContentHandler.endDocument()&lt;/code&gt;&lt;/a&gt;. In addition, the parser cannot be expected to be able to return accurate information about the logical structure on the rest of the document even if it may be able to resume parsing.</source>
          <target state="translated">응용 프로그램은 파서가 치명적인 오류를보고 한 후 더 이상 정상적인 처리를 수행 할 수 없다고 가정해야하며 &lt;a href=&quot;contenthandler#endDocument()&quot;&gt; &lt;code&gt;ContentHandler.endDocument()&lt;/code&gt; &lt;/a&gt; 를 호출하지 않고 &lt;a href=&quot;saxexception&quot;&gt; &lt;code&gt;SAXException&lt;/code&gt; &lt;/a&gt; 을 throw하여 중지 할 수 있습니다 . 또한 구문 분석기는 구문 분석을 재개 할 수 있더라도 문서의 나머지 부분에서 논리적 구조에 대한 정확한 정보를 반환 할 수있을 것으로 기대할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="5110032f75f7ab25dc64c1c8cb464069e864d851" translate="yes" xml:space="preserve">
          <source>An application must pass in an array of print services to browse. The array must be &lt;code&gt;non-null&lt;/code&gt; and non-empty. Typically an application will pass in only &lt;code&gt;PrintServices&lt;/code&gt; capable of printing a particular document flavor.</source>
          <target state="translated">응용 프로그램은 검색 할 인쇄 서비스 배열을 전달해야합니다. 배열은 &lt;code&gt;non-null&lt;/code&gt; 이 아니고 비어 있지 않아야합니다 . 일반적으로 응용 프로그램은 특정 문서 버전을 인쇄 할 수있는 &lt;code&gt;PrintServices&lt;/code&gt; 만 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="9e8913034682b04eada59ac157696312403c2e9f" translate="yes" xml:space="preserve">
          <source>An application must pass in an array of print services to browse. The array must be non-null and non-empty. Typically an application will pass in only PrintServices capable of printing a particular document flavor.</source>
          <target state="translated">응용 프로그램은 찾아보기 위해 인쇄 서비스 배열을 전달해야합니다. 배열은 null이 아니거나 비어 있지 않아야합니다. 일반적으로 응용 프로그램은 특정 문서 맛을 인쇄 할 수있는 PrintServices 만 전달합니다.</target>
        </trans-unit>
        <trans-unit id="0b204a2c59cf5a8087f5c69d3a9a53cfe1b797b0" translate="yes" xml:space="preserve">
          <source>An application must subclass the &lt;code&gt;Canvas&lt;/code&gt; class in order to get useful functionality such as creating a custom component. The &lt;code&gt;paint&lt;/code&gt; method must be overridden in order to perform custom graphics on the canvas.</source>
          <target state="translated">응용 프로그램은 사용자 정의 구성 요소를 만드는 것과 같은 유용한 기능을 얻으려면 &lt;code&gt;Canvas&lt;/code&gt; 클래스를 하위 클래스 로 만들어야합니다. &lt;code&gt;paint&lt;/code&gt; 방법은 캔버스에 사용자 정의 그래픽을 수행하기 위해 재정의해야합니다.</target>
        </trans-unit>
        <trans-unit id="8bc1c2a24be3cd319e7a0f245218b6845765ca38" translate="yes" xml:space="preserve">
          <source>An application obtains a service loader for a given service by invoking one of the static &lt;code&gt;load&lt;/code&gt; methods of &lt;code&gt;ServiceLoader&lt;/code&gt;. If the application is a module, then its module declaration must have a</source>
          <target state="translated">애플리케이션은 &lt;code&gt;ServiceLoader&lt;/code&gt; 의 정적 &lt;code&gt;load&lt;/code&gt; 메소드 중 하나를 호출하여 지정된 서비스에 대한 서비스 로더를 얻습니다 . 응용 프로그램이 모듈 인 경우 해당 모듈 선언에는</target>
        </trans-unit>
        <trans-unit id="78606633e0f2708a42a89136e6d4e92baa21911f" translate="yes" xml:space="preserve">
          <source>An application obtains a service loader for a given service by invoking one of the static &lt;code&gt;load&lt;/code&gt; methods of ServiceLoader. If the application is a module, then its module declaration must have a</source>
          <target state="translated">애플리케이션은 ServiceLoader 의 정적 &lt;code&gt;load&lt;/code&gt; 메소드 중 하나를 호출하여 지정된 서비스에 대한 서비스 로더를 얻습니다 . 응용 프로그램이 모듈 인 경우 해당 모듈 선언에는</target>
        </trans-unit>
        <trans-unit id="3cb84a3dd49c5d89b99ceb5f62997e54570f6cd5" translate="yes" xml:space="preserve">
          <source>An application opening a device explicitly with this call has to close the device by calling &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;. This is necessary to release system resources and allow applications to exit cleanly.</source>
          <target state="translated">이 호출로 명시 적으로 장치를 여는 응용 프로그램은 &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 를 호출하여 장치를 닫아야합니다 . 이는 시스템 리소스를 해제하고 응용 프로그램을 완전히 종료하는 데 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2654ccde0ee418a0ddc05fbfc9f140d72a0de785" translate="yes" xml:space="preserve">
          <source>An application opening a device explicitly with this call has to close the device by calling &lt;a href=&quot;mididevice#close--&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;. This is necessary to release system resources and allow applications to exit cleanly.</source>
          <target state="translated">이 호출로 장치를 명시 적으로 여는 응용 프로그램은 &lt;a href=&quot;mididevice#close--&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 를 호출하여 장치를 닫아야합니다 . 시스템 리소스를 해제하고 응용 프로그램을 완전히 종료 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="0136fb89c69c56817234d0ea241fb726a164b9b1" translate="yes" xml:space="preserve">
          <source>An application programmer does not use the &lt;code&gt;PooledConnection&lt;/code&gt; interface directly; rather, it is used by a middle tier infrastructure that manages the pooling of connections.</source>
          <target state="translated">응용 프로그램 프로그래머는 &lt;code&gt;PooledConnection&lt;/code&gt; 인터페이스를 직접 사용하지 않습니다 . 오히려 연결 풀링을 관리하는 중간 계층 인프라에서 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="584e1884afd852ed47f49a95c6b1d1a9c3c3a478" translate="yes" xml:space="preserve">
          <source>An application programmer does not use this interface directly; rather, it is used by a transaction manager working in the middle tier server.</source>
          <target state="translated">응용 프로그램 프로그래머는이 인터페이스를 직접 사용하지 않습니다. 오히려 중간 계층 서버에서 작업하는 트랜잭션 관리자가 사용합니다.</target>
        </trans-unit>
        <trans-unit id="bc4c1060d77bad7188ebffc0760f414214d48f37" translate="yes" xml:space="preserve">
          <source>An application programmer will not normally call &lt;code&gt;SQLData&lt;/code&gt; methods directly, and the &lt;code&gt;SQLInput&lt;/code&gt; and &lt;code&gt;SQLOutput&lt;/code&gt; methods are called internally by &lt;code&gt;SQLData&lt;/code&gt; methods, not by application code.</source>
          <target state="translated">애플리케이션 프로그래머는 일반적으로 &lt;code&gt;SQLData&lt;/code&gt; 메소드를 직접 호출하지 않으며 &lt;code&gt;SQLInput&lt;/code&gt; 및 &lt;code&gt;SQLOutput&lt;/code&gt; 메소드는 애플리케이션 코드가 아닌 &lt;code&gt;SQLData&lt;/code&gt; 메소드에 의해 내부적으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="50eb92a41ad11a218880f81a1296f8b8fdf101a1" translate="yes" xml:space="preserve">
          <source>An application should catch instances of this class only if it must clean up after being terminated asynchronously. If &lt;code&gt;ThreadDeath&lt;/code&gt; is caught by a method, it is important that it be rethrown so that the thread actually dies.</source>
          <target state="translated">응용 프로그램은 비동기 적으로 종료 된 후 정리해야하는 경우에만이 클래스의 인스턴스를 잡아야합니다. 경우 &lt;code&gt;ThreadDeath&lt;/code&gt; 를이 방법에 의해 체포되어, 재 throw 그래서 스레드가 실제로 종료한다는 것이 중요하다.</target>
        </trans-unit>
        <trans-unit id="c49fd5a8dd636e52dd68846105d011fd47eb26ee" translate="yes" xml:space="preserve">
          <source>An application should not normally try to catch &lt;code&gt;ThreadDeath&lt;/code&gt; unless it must do some extraordinary cleanup operation (note that the throwing of &lt;code&gt;ThreadDeath&lt;/code&gt; causes &lt;code&gt;finally&lt;/code&gt; clauses of &lt;code&gt;try&lt;/code&gt; statements to be executed before the thread officially dies). If a &lt;code&gt;catch&lt;/code&gt; clause catches a &lt;code&gt;ThreadDeath&lt;/code&gt; object, it is important to rethrow the object so that the thread actually dies.</source>
          <target state="translated">응용 프로그램은 일반적으로 잡으려고해서는 안 &lt;code&gt;ThreadDeath&lt;/code&gt; 이 (의 던지는 것을 메모를 몇 가지 특별한 정리 작업을 수행해야하지 않는 &lt;code&gt;ThreadDeath&lt;/code&gt; 원인이 &lt;code&gt;finally&lt;/code&gt; 의 조항 &lt;code&gt;try&lt;/code&gt; 스레드가 공식적으로 죽기 전에 실행할 명령을). 경우 &lt;code&gt;catch&lt;/code&gt; 절이 잡는다 &lt;code&gt;ThreadDeath&lt;/code&gt; 오브젝트를, 그렇게 스레드가 실제로 종료하는 객체를 다시 던지는 것이 중요합니다.</target>
        </trans-unit>
        <trans-unit id="bb54fe294e3ca994cff70a20638a17532b2224db" translate="yes" xml:space="preserve">
          <source>An application starts out by instantiating a &lt;code&gt;GSSManager&lt;/code&gt; which then serves as a factory for a security context. An application can use specific principal names and credentials that are also created using the GSSManager; or it can instantiate a context with system defaults. It then goes through a context establishment loop. Once a context is established with the peer, authentication is complete. Data protection such as integrity and confidentiality can then be obtained from this context.</source>
          <target state="translated">애플리케이션은 보안 컨텍스트에 대한 팩토리 역할을하는 &lt;code&gt;GSSManager&lt;/code&gt; 를 인스턴스화하여 시작합니다 . 애플리케이션은 GSSManager를 사용하여 생성 된 특정 사용자 이름과 자격 증명을 사용할 수 있습니다. 또는 시스템 기본값으로 컨텍스트를 인스턴스화 할 수 있습니다. 그런 다음 컨텍스트 설정 루프를 거칩니다. 피어와 컨텍스트가 설정되면 인증이 완료됩니다. 이 컨텍스트에서 무결성 및 기밀성과 같은 데이터 보호를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="719c7fbff5aad654d0c952998af4a9c7ddae21f4" translate="yes" xml:space="preserve">
          <source>An application that obtains a service loader for a given service is indifferent to whether providers of the service are deployed in modules or packaged as JAR files. The application instantiates service providers via the service loader's iterator, or via &lt;a href=&quot;serviceloader.provider&quot;&gt;&lt;code&gt;Provider&lt;/code&gt;&lt;/a&gt; objects in the service loader's stream, without knowledge of the service providers' locations.</source>
          <target state="translated">주어진 서비스에 대한 서비스 로더를 얻는 응용 프로그램은 서비스 공급자가 모듈에 배포되는지 아니면 JAR 파일로 패키지되는지에 관계가 없습니다. 애플리케이션 은 서비스 공급자의 위치를 ​​알지 못해도 서비스 로더의 반복기 또는 서비스 로더 스트림의 &lt;a href=&quot;serviceloader.provider&quot;&gt; &lt;code&gt;Provider&lt;/code&gt; &lt;/a&gt; 개체를 통해 서비스 공급자를 인스턴스화합니다 .</target>
        </trans-unit>
        <trans-unit id="b509256c238d72c9c7d490a01e3a6dee12555a68" translate="yes" xml:space="preserve">
          <source>An application typically does not deal directly with these interfaces. Instead, it deals with classes that &lt;em&gt;implement&lt;/em&gt; these interfaces. The application gets these classes either as part of a repertoire of extended operations standardized through the IETF, or from directory vendors for vendor-specific extended operations. The request classes should have constructors that accept arguments in a type-safe and user-friendly manner, while the response classes should have access methods for getting the data of the response in a type-safe and user-friendly manner. Internally, the request/response classes deal with encoding and decoding BER values.</source>
          <target state="translated">응용 프로그램은 일반적으로 이러한 인터페이스를 직접 처리하지 않습니다. 대신 이러한 인터페이스 를 &lt;em&gt;구현&lt;/em&gt; 하는 클래스를 처리합니다 . 응용 프로그램은 이러한 클래스를 IETF를 통해 표준화 된 확장 작업 레퍼토리의 일부로 또는 공급 업체별 확장 작업을 위해 디렉토리 공급 업체에서 가져옵니다. 요청 클래스에는 형식이 안전하고 사용자에게 친숙한 방식으로 인수를 허용하는 생성자가 있어야하며 응답 클래스에는 응답에 대한 데이터를 형식이 안전하고 사용자에게 친숙한 방식으로 가져 오는 액세스 방법이 있어야합니다. 내부적으로 요청 / 응답 클래스는 BER 값의 인코딩 및 디코딩을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="cf87097b1d5a717b4f2ac33f62d029328ac00d54" translate="yes" xml:space="preserve">
          <source>An application typically does not deal directly with this interface. Instead, it deals with classes that &lt;em&gt;implement&lt;/em&gt; this interface. The application gets control classes either as part of a repertoire of controls standardized through the IETF, or from directory vendors for vendor-specific controls. The request control classes should have constructors that accept arguments in a type-safe and user-friendly manner, while the response control classes should have access methods for getting the data of the response in a type-safe and user-friendly manner. Internally, the request/response control classes deal with encoding and decoding BER values.</source>
          <target state="translated">응용 프로그램은 일반적으로이 인터페이스를 직접 처리하지 않습니다. 대신 이 인터페이스 를 &lt;em&gt;구현&lt;/em&gt; 하는 클래스를 처리합니다 . 응용 프로그램은 IETF를 통해 표준화 된 컨트롤 레퍼토리의 일부 또는 공급 업체별 컨트롤에 대한 디렉터리 공급 업체로부터 컨트롤 클래스를 가져옵니다. 요청 제어 클래스에는 형식이 안전하고 사용자에게 친숙한 방식으로 인수를 허용하는 생성자가 있어야하며 응답 제어 클래스에는 응답에 대한 데이터를 형식이 안전하고 사용자에게 친숙한 방식으로 가져 오는 액세스 방법이 있어야합니다. 내부적으로 요청 / 응답 제어 클래스는 BER 값의 인코딩 및 디코딩을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="a3d727468a5dad82ca2729c7404152e5156ac534" translate="yes" xml:space="preserve">
          <source>An application, for example, can register its interest in changes to objects in a context as follows:</source>
          <target state="translated">예를 들어 응용 프로그램은 다음과 같이 컨텍스트의 객체 변경에 대한 관심을 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8c9caf20fe0e31da145fef005b6b411b2f51e161" translate="yes" xml:space="preserve">
          <source>An appropriate response in this case is to either return an empty list of completions,</source>
          <target state="translated">이 경우 적절한 응답은 빈 완료 목록을 반환하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="f34e9d5883b37bdc4090ceb20060a1ec962d193d" translate="yes" xml:space="preserve">
          <source>An arbitrary argument of the event.</source>
          <target state="translated">이벤트의 임의 인수입니다.</target>
        </trans-unit>
        <trans-unit id="ce3206d66c7063f14359ab03e4a73340a03a3fa5" translate="yes" xml:space="preserve">
          <source>An arbitrary argument of the event. The value of this field depends on the type of event. &lt;code&gt;arg&lt;/code&gt; has been replaced by event specific property.</source>
          <target state="translated">이벤트의 임의 인수입니다. 이 필드의 값은 이벤트 유형에 따라 다릅니다. &lt;code&gt;arg&lt;/code&gt; 는 이벤트 특정 속성으로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="25918f2ec95968d5250d4bfa652e679922307e41" translate="yes" xml:space="preserve">
          <source>An array appropriate for the specified data type.</source>
          <target state="translated">지정된 데이터 유형에 적합한 배열입니다.</target>
        </trans-unit>
        <trans-unit id="3375b2b67d9fbf3014f9194bef73b350e41d04a8" translate="yes" xml:space="preserve">
          <source>An array of (Notification,listenerID) pairs corresponding to the returned notifications and the listeners they correspond to.</source>
          <target state="translated">리턴 된 통지 및 해당하는 리스너에 해당하는 (Notification, listenerID) 쌍의 배열.</target>
        </trans-unit>
        <trans-unit id="3d3e5b5413218d15a0eaa8ef1a80ddeb592d3cb6" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;Class&lt;/code&gt; objects to be returned from &lt;code&gt;getInputTypes&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getInputTypes&lt;/code&gt; 로부터 반환되는 &lt;code&gt;Class&lt;/code&gt; 객체 의 배열로 , 처음은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="134d246dade1f3b91ae7d4322f377b540dc09583" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;Class&lt;/code&gt; objects to be returned from &lt;code&gt;getOutputTypes&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getOutputTypes&lt;/code&gt; 로부터 반환되는 &lt;code&gt;Class&lt;/code&gt; 객체 의 배열로 , 처음은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="986642b0e80eb019e10cb87b0f61b946091b07ae" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;File&lt;/code&gt; objects denoting the available filesystem roots, or &lt;code&gt;null&lt;/code&gt; if the set of roots could not be determined. The array will be empty if there are no filesystem roots.</source>
          <target state="translated">사용 가능한 파일 시스템 루트를 나타내는 &lt;code&gt;File&lt;/code&gt; 객체 의 배열 . 또는 루트 세트를 확인할 수없는 경우는 &lt;code&gt;null&lt;/code&gt; 파일 시스템 루트가 없으면 배열이 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="aa11442caa640c34cbfaf660f3302a13ef045693" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;Locale&lt;/code&gt;s that may be used to localize warning messages and compression setting values, or &lt;code&gt;null&lt;/code&gt; if localization is not supported.</source>
          <target state="translated">경고 메시지 및 압축 설정 값을 지역화하는 데 사용할 수있는 &lt;code&gt;Locale&lt;/code&gt; 의 배열 또는 지역화가 지원되지 않는 경우 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2f452eecd6bde221a71b85ba04b3ebcc45d28a9c" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;Locale&lt;/code&gt;s that may be used to localize warning messages and compression setting values, or &lt;code&gt;null&lt;/code&gt; if localization is not supported. By default it is initialized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">경고 메시지 및 압축 설정 값을 현지화하는 데 사용할 수있는 &lt;code&gt;Locale&lt;/code&gt; 의 배열 . 현지화가 지원되지 않는 경우는 &lt;code&gt;null&lt;/code&gt; 기본적으로 &lt;code&gt;null&lt;/code&gt; 로 초기화됩니다 .</target>
        </trans-unit>
        <trans-unit id="f5828ac1272e6af9b447a80ae8aa023505636997" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;Locale&lt;/code&gt;s which may be used to localize warning messages, or &lt;code&gt;null&lt;/code&gt; if localization is not supported.</source>
          <target state="translated">경고 메시지를 지역화하는 데 사용할 수있는 &lt;code&gt;Locale&lt;/code&gt; 배열 , 지역화가 지원되지 않는 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9ef7312b21040e50977465666bf0eb762b161e14" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;MBeanAttributeInfo&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;MBeanAttributeInfo&lt;/code&gt; 객체 의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="97cb0ffca3f9a79bde835c8f0514bf86a9f9fd2b" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;MBeanConstructorInfo&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;MBeanConstructorInfo&lt;/code&gt; 객체 의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="099025ea477af03698be0f937824d72208a3d9c4" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;MBeanNotificationInfo&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;MBeanNotificationInfo&lt;/code&gt; 객체 의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="d037385b928aee7ba03da85148233e55db4d3e27" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;MBeanOperationInfo&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;MBeanOperationInfo&lt;/code&gt; 객체 의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="857b8e7db26743b5bf509c5ad095fe8a81853346" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;MBeanParameterInfo&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;MBeanParameterInfo&lt;/code&gt; 객체 의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="439c241981cb9b98bf4921d2be030bb41a831385" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;Method&lt;/code&gt; objects for the target methods within the target listener interface that will get called when events are fired.</source>
          <target state="translated">이벤트가 시작될 때 호출 될 대상 리스너 인터페이스 내의 대상 메소드에 대한 &lt;code&gt;Method&lt;/code&gt; 객체 의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="a11f54d296a121e0d0a900e2e862c8be1025eb1e" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;MethodDescriptor&lt;/code&gt; objects for the target methods within the target listener interface that will get called when events are fired.</source>
          <target state="translated">이벤트가 시작될 때 호출 될 대상 리스너 인터페이스 내의 대상 메소드에 대한 &lt;code&gt;MethodDescriptor&lt;/code&gt; 객체 의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="a6a99c1b9ae1af89c79e0ce3904ad8e80a667585" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;RecordComponent&lt;/code&gt; objects representing all the record components of this record class, or &lt;code&gt;null&lt;/code&gt; if this class is not a record class</source>
          <target state="translated">이 레코드 클래스의 모든 레코드 구성 요소를 나타내는 &lt;code&gt;RecordComponent&lt;/code&gt; 개체 의 배열 또는 이 클래스가 레코드 클래스가 아닌 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="09bfd33147144d479ed0cedfcc852f06a19d8e48" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;String&lt;/code&gt;s containing the class names of any additional image metadata formats supported by this plug-in, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 플러그 인이 지원하는 추가의 이미지 메타 데이타 형식의 클래스 명을 포함한 &lt;code&gt;String&lt;/code&gt; 배열로 처음은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0c6bf3507b6a0a635ddcff11b09f3f52d92b7b1b" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;String&lt;/code&gt;s containing the class names of any additional stream metadata formats supported by this plug-in, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 플러그 인이 지원하는 추가 스트림 메타 데이터 형식의 클래스 명을 포함한 &lt;code&gt;String&lt;/code&gt; 배열로 처음은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c0d1beebcc982c07a604b60c0fa883229539afcf" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;String&lt;/code&gt;s containing the names of any additional image metadata formats supported by this plug-in, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 플러그인이 지원하는 추가 이미지 메타 데이터 형식의 이름을 포함하는 &lt;code&gt;String&lt;/code&gt; 배열로 처음은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="47280e838c730e2ac9ec606b3328a9cb7b71d05c" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;String&lt;/code&gt;s containing the names of any additional stream metadata formats supported by this plug-in, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 플러그 인이 지원하는 추가 스트림 메타 데이터 형식의 이름을 포함한 &lt;code&gt;String&lt;/code&gt; 배열로 처음은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="bae5e78439ab76a56e61ac72d3a1ed6fdd6ada68" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;String&lt;/code&gt;s containing the names of the available compression types.</source>
          <target state="translated">사용 가능한 압축 유형의 이름을 포함하는 &lt;code&gt;String&lt;/code&gt; 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="8c26aaacf7ce2995c9bfe1424377ba6a51a90ec4" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;String&lt;/code&gt;s containing the names of the available compression types. Subclasses must set the value manually.</source>
          <target state="translated">사용 가능한 압축 유형의 이름을 포함하는 &lt;code&gt;String&lt;/code&gt; 배열입니다 . 서브 클래스는 값을 수동으로 설정해야합니다.</target>
        </trans-unit>
        <trans-unit id="6bb43612b6d5a79a634e83f569fea3fb6f82d670" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;int&lt;/code&gt;s indicating which source bands will be used, or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">사용할 소스 밴드를 나타내는 &lt;code&gt;int&lt;/code&gt; 배열 또는 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="da4e0abf0506b17739ce4bb8e037ed106b77be54" translate="yes" xml:space="preserve">
          <source>An array of &lt;code&gt;int&lt;/code&gt;s indicating which source bands will be used, or &lt;code&gt;null&lt;/code&gt;. If &lt;code&gt;null&lt;/code&gt;, the set of source bands to be used is as described in the comment for the &lt;code&gt;setSourceBands&lt;/code&gt; method. No value should be allowed to be negative.</source>
          <target state="translated">배열 &lt;code&gt;int&lt;/code&gt; 소스 대역을 사용하거나 될 나타내는 s는 &lt;code&gt;null&lt;/code&gt; . &lt;code&gt;null&lt;/code&gt; 의 경우 , 사용되는 소스 밴드 세트는 &lt;code&gt;setSourceBands&lt;/code&gt; 메소드 의 코멘트에 기술되어 있습니다. 음수 값을 허용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="5f8a9f14e2ca1c5025b6a7ff7497a534a4b2b0cb" translate="yes" xml:space="preserve">
          <source>An array of ISO 3166 two-letter country codes.</source>
          <target state="translated">ISO 3166 2 자리 국가 코드 배열.</target>
        </trans-unit>
        <trans-unit id="96fbbd22194523e7d590e7def9de46b527c3ac2b" translate="yes" xml:space="preserve">
          <source>An array of ISO 639 two-letter language codes.</source>
          <target state="translated">ISO 639 두 글자 언어 코드의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="1a685af7760d947395e5088cc9d1ca76b1336256" translate="yes" xml:space="preserve">
          <source>An array of abstract pathnames denoting the files and directories in the directory denoted by this abstract pathname. The array will be empty if the directory is empty. Returns &lt;code&gt;null&lt;/code&gt; if this abstract pathname does not denote a directory, or if an I/O error occurs.</source>
          <target state="translated">이 추상 경로명이 나타내는 디렉토리의 파일과 디렉토리를 나타내는 추상 경로명의 배열입니다. 디렉토리가 비어 있으면 배열이 비어 있습니다. 이 추상 경로명이 디렉토리를 나타내지 않거나 I / O 오류가 발생하면 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="fb18981f50ec6ba086453d6b4e535b514bd22117" translate="yes" xml:space="preserve">
          <source>An array of all TIFF fields in order of numerically increasing tag number.</source>
          <target state="translated">태그 번호가 증가하는 순서대로 모든 TIFF 필드의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="1247249a019a2d31c63bafe6198d962bc2529d9e" translate="yes" xml:space="preserve">
          <source>An array of all locales for which this locale service provider can provide localized objects or names.</source>
          <target state="translated">이 로케일 서비스 제공자가 지역화 된 오브젝트 또는 이름을 제공 할 수있는 모든 로케일의 배열.</target>
        </trans-unit>
        <trans-unit id="84f751c7debce4343e28a7b0cd27fb91761da472" translate="yes" xml:space="preserve">
          <source>An array of attribute ids identifying the attributes that will be returned. Can be null.</source>
          <target state="translated">리턴 될 속성을 식별하는 속성 ID의 배열. null 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bec51aa46f9241e86e4cc3153bbe5f4c83c2df96" translate="yes" xml:space="preserve">
          <source>An array of bytes that was provided by the creator of the stream.</source>
          <target state="translated">스트림 작성자가 제공 한 바이트 배열입니다.</target>
        </trans-unit>
        <trans-unit id="50c3bc608966755e1f6382a14ef162f78ffc304c" translate="yes" xml:space="preserve">
          <source>An array of bytes that was provided by the creator of the stream. Elements &lt;code&gt;buf[0]&lt;/code&gt; through &lt;code&gt;buf[count-1]&lt;/code&gt; are the only bytes that can ever be read from the stream; element &lt;code&gt;buf[pos]&lt;/code&gt; is the next byte to be read.</source>
          <target state="translated">스트림 작성자가 제공 한 바이트 배열입니다. 요소 &lt;code&gt;buf[0]&lt;/code&gt; 통해 &lt;code&gt;buf[count-1]&lt;/code&gt; (가) 해당 사상 스트림으로부터 판독 될 수있는 바이트이고; &lt;code&gt;buf[pos]&lt;/code&gt; 요소 는 다음에 읽을 바이트입니다.</target>
        </trans-unit>
        <trans-unit id="0749ec0b49fa5b6397b8d454927e3ae1aebd126c" translate="yes" xml:space="preserve">
          <source>An array of characters or a string can also have an ascent, a descent, and an advance width. The ascent of the array is the maximum ascent of any character in the array. The descent is the maximum descent of any character in the array. The advance width is the sum of the advance widths of each of the characters in the character array. The advance of a &lt;code&gt;String&lt;/code&gt; is the distance along the baseline of the &lt;code&gt;String&lt;/code&gt;. This distance is the width that should be used for centering or right-aligning the &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">문자 배열 또는 문자열은 상승, 하강 및 전진 너비를 가질 수도 있습니다. 배열의 상승은 배열에있는 문자의 최대 상승입니다. 하강은 배열에있는 모든 문자의 최대 하강입니다. 전진 너비는 문자 배열에있는 각 문자의 전진 너비의 합계입니다. a의 사전 &lt;code&gt;String&lt;/code&gt; 의 baseline에 따른 거리입니다 &lt;code&gt;String&lt;/code&gt; . 이 거리는 &lt;code&gt;String&lt;/code&gt; 중앙 정렬 또는 오른쪽 정렬에 사용되어야하는 너비입니다 .</target>
        </trans-unit>
        <trans-unit id="c0b0729a066fdb626ec1690d6f3269f21870473c" translate="yes" xml:space="preserve">
          <source>An array of file filters.</source>
          <target state="translated">파일 필터의 배열.</target>
        </trans-unit>
        <trans-unit id="a729d0bda2fade78392b6c8a928179fcd1324c3e" translate="yes" xml:space="preserve">
          <source>An array of installed locales.</source>
          <target state="translated">설치된 로케일의 배열.</target>
        </trans-unit>
        <trans-unit id="d6d58003ce8b767e2e48a2867e197eb64fc51b57" translate="yes" xml:space="preserve">
          <source>An array of locales for which localized &lt;code&gt;BreakIterator&lt;/code&gt; instances are available.</source>
          <target state="translated">현지화 된 &lt;code&gt;BreakIterator&lt;/code&gt; 인스턴스를 사용할 수 있는 로케일 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="c66081e2ced3ad8c4f8f67af5cdf49b57dab5365" translate="yes" xml:space="preserve">
          <source>An array of locales for which localized &lt;code&gt;Calendar&lt;/code&gt; instances are available.</source>
          <target state="translated">현지화 된 &lt;code&gt;Calendar&lt;/code&gt; 인스턴스를 사용할 수 있는 로캘의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="68c4f2a7d55fe9d1e74aa99805ef5cf0eaad9bd9" translate="yes" xml:space="preserve">
          <source>An array of locales for which localized &lt;code&gt;Collator&lt;/code&gt; instances are available.</source>
          <target state="translated">현지화 된 &lt;code&gt;Collator&lt;/code&gt; 인스턴스를 사용할 수 있는 로캘의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="9f8979fff6f18828e2e07a3db6852fccd5c6cb11" translate="yes" xml:space="preserve">
          <source>An array of locales for which localized &lt;code&gt;DateFormat&lt;/code&gt; instances are available.</source>
          <target state="translated">현지화 된 &lt;code&gt;DateFormat&lt;/code&gt; 인스턴스를 사용할 수 있는 로캘의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="fa4683de0abf7aaba311b8aff3f5bb67c183e839" translate="yes" xml:space="preserve">
          <source>An array of locales for which localized &lt;code&gt;DateFormatSymbols&lt;/code&gt; instances are available.</source>
          <target state="translated">현지화 된 &lt;code&gt;DateFormatSymbols&lt;/code&gt; 인스턴스를 사용할 수 있는 로캘의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="6bb475e666ac44ef2833bf2636d6095cb9b550d0" translate="yes" xml:space="preserve">
          <source>An array of locales for which localized &lt;code&gt;NumberFormat&lt;/code&gt; instances are available.</source>
          <target state="translated">현지화 된 &lt;code&gt;NumberFormat&lt;/code&gt; 인스턴스를 사용할 수 있는 로캘의 배열입니다 .</target>
        </trans-unit>
        <trans-unit id="e96a8e8e65d8956d86c828401e17dbce9341139a" translate="yes" xml:space="preserve">
          <source>An array of names of classes implementing &lt;code&gt;IIOMetadataFormat&lt;/code&gt; and representing the metadata formats, other than the standard and native formats, that are supported by this plug-in, initialized to &lt;code&gt;null&lt;/code&gt; and set via the constructor.</source>
          <target state="translated">&lt;code&gt;IIOMetadataFormat&lt;/code&gt; 을 구현 하고이 플러그인에서 지원하는 표준 및 기본 형식 이외의 메타 데이터 형식을 나타내는 클래스 이름의 배열 로 &lt;code&gt;null&lt;/code&gt; 로 초기화되고 생성자를 통해 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="262378c5aa6d3817b25ebd77f5c879a438a3423c" translate="yes" xml:space="preserve">
          <source>An array of names of formats, other than the standard and native formats, that are supported by this plug-in, initialized to &lt;code&gt;null&lt;/code&gt; and set via the constructor.</source>
          <target state="translated">이 플러그인에서 지원하는 표준 및 기본 형식 이외의 형식 이름 배열은 &lt;code&gt;null&lt;/code&gt; 로 초기화되고 생성자를 통해 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="2897df0b726ebc23204e3fea548a13dccf63622e" translate="yes" xml:space="preserve">
          <source>An array of object references in which elements may be updated atomically.</source>
          <target state="translated">요소가 원자 적으로 업데이트 될 수있는 객체 참조 배열입니다.</target>
        </trans-unit>
        <trans-unit id="0a7e0047daf5f3df32d533e82f11c1139edd187c" translate="yes" xml:space="preserve">
          <source>An array of object references in which elements may be updated atomically. See the &lt;a href=&quot;../../../lang/invoke/varhandle&quot;&gt;&lt;code&gt;VarHandle&lt;/code&gt;&lt;/a&gt; specification for descriptions of the properties of atomic accesses.</source>
          <target state="translated">요소가 원자 적으로 업데이트 될 수있는 개체 참조의 배열입니다. 원자 적 액세스 속성에 대한 설명은 &lt;a href=&quot;../../../lang/invoke/varhandle&quot;&gt; &lt;code&gt;VarHandle&lt;/code&gt; &lt;/a&gt; 사양을 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="fd0bb8c414320ed0f0c3a97caa9a14007a27cde2" translate="yes" xml:space="preserve">
          <source>An array of object references in which elements may be updated atomically. See the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;java.util.concurrent.atomic&lt;/code&gt;&lt;/a&gt; package specification for description of the properties of atomic variables.</source>
          <target state="translated">요소가 원자 적으로 업데이트 될 수있는 객체 참조 배열입니다. 원자 변수의 특성에 대한 설명은 &lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;java.util.concurrent.atomic&lt;/code&gt; &lt;/a&gt; 패키지 스펙을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="241fd4db3ffb93809658c8704f4694c51f33ab7d" translate="yes" xml:space="preserve">
          <source>An array of objects is interpreted as a series of messages (one per object) arranged in a vertical stack. The interpretation is recursive -- each object in the array is interpreted according to its type.</source>
          <target state="translated">객체 배열은 수직 스택에 배열 된 일련의 메시지 (객체 당 하나씩)로 해석됩니다. 해석은 재귀 적입니다. 배열의 각 객체는 유형에 따라 해석됩니다.</target>
        </trans-unit>
        <trans-unit id="0be7be800cb0555f3b94cd5454f727687a4ad285" translate="yes" xml:space="preserve">
          <source>An array of possible values if the value for the field &lt;code&gt;DriverPropertyInfo.value&lt;/code&gt; may be selected from a particular set of values; otherwise null.</source>
          <target state="translated">&lt;code&gt;DriverPropertyInfo.value&lt;/code&gt; 필드 의 값이 특정 값 집합에서 선택 될 수있는 경우 가능한 값의 배열입니다 . 그렇지 않으면 null입니다.</target>
        </trans-unit>
        <trans-unit id="934aad52563b5414334511c0f24bd922b859f0b1" translate="yes" xml:space="preserve">
          <source>An array of preferred tile size range pairs.</source>
          <target state="translated">선호하는 타일 크기 범위 쌍의 배열입니다.</target>
        </trans-unit>
        <trans-unit id="823ae1f2066fcedd303f568ca8bac961a002dfa5" translate="yes" xml:space="preserve">
          <source>An array of preferred tile size range pairs. The default value is &lt;code&gt;null&lt;/code&gt;, which indicates that there are no preferred sizes. If the value is non-&lt;code&gt;null&lt;/code&gt;, it must have an even length of at least two.</source>
          <target state="translated">선호하는 타일 크기 범위 쌍의 배열입니다. 기본값은 &lt;code&gt;null&lt;/code&gt; 이며, 선호하는 크기가 없음을 나타냅니다. 값이 &lt;code&gt;null&lt;/code&gt; 이 아닌 경우 짝수 길이는 2 이상이어야합니다.</target>
        </trans-unit>
        <trans-unit id="228a80770c07ae269508ac6afab96362f4950688" translate="yes" xml:space="preserve">
          <source>An array of primitive type such as &lt;code&gt;long[]&lt;/code&gt; can be represented directly as an Open Type. Thus, &lt;em&gt;openType(&lt;/em&gt;&lt;code&gt;
      long[]&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;
      ArrayType.getPrimitiveArrayType(long[].class)&lt;/code&gt;, and &lt;em&gt;opendata(&lt;/em&gt;&lt;code&gt;long[]&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;
      long[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;long[]&lt;/code&gt; 과 같은 기본 유형의 배열은 개방형으로 직접 표현할 수 있습니다. 따라서 &lt;em&gt;openType ( &lt;/em&gt; &lt;code&gt; long[]&lt;/code&gt; &lt;em&gt;)&lt;/em&gt; 은 &lt;code&gt; ArrayType.getPrimitiveArrayType(long[].class)&lt;/code&gt; 이고 &lt;em&gt;opendata ( &lt;/em&gt; &lt;code&gt;long[]&lt;/code&gt; &lt;em&gt;)&lt;/em&gt; 는 &lt;code&gt; long[]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f381ae0c3269444d63257e301d2361d80ac7d062" translate="yes" xml:space="preserve">
          <source>An array of primitive type such as &lt;code&gt;long[]&lt;/code&gt; can be represented directly as an Open Type. Thus, &lt;em&gt;openType(&lt;/em&gt;&lt;code&gt;long[]&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;ArrayType.getPrimitiveArrayType(long[].class)&lt;/code&gt;, and &lt;em&gt;opendata(&lt;/em&gt;&lt;code&gt;long[]&lt;/code&gt;&lt;em&gt;)&lt;/em&gt; is &lt;code&gt;long[]&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;long[]&lt;/code&gt; 과 같은 기본 유형의 배열은 직접 개방형으로 표시 될 수 있습니다. 따라서 &lt;em&gt;openType ( &lt;/em&gt; &lt;code&gt;long[]&lt;/code&gt; &lt;em&gt;)&lt;/em&gt; 은 &lt;code&gt;ArrayType.getPrimitiveArrayType(long[].class)&lt;/code&gt; 이고 &lt;em&gt;opendata ( &lt;/em&gt; &lt;code&gt;long[]&lt;/code&gt; &lt;em&gt;)&lt;/em&gt; 는 &lt;code&gt;long[]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="761f07384d65aa2a3aa21cda74da36e773f992d1" translate="yes" xml:space="preserve">
          <source>An array of strings naming the files and directories in the directory denoted by this abstract pathname that were accepted by the given &lt;code&gt;filter&lt;/code&gt;. The array will be empty if the directory is empty or if no names were accepted by the filter. Returns &lt;code&gt;null&lt;/code&gt; if this abstract pathname does not denote a directory, or if an I/O error occurs.</source>
          <target state="translated">지정된 &lt;code&gt;filter&lt;/code&gt; 의해 받아 들여지는이 추상 패스 명이 나타내는 디렉토리 내의 파일과 디렉토리를 명명하는 캐릭터 라인의 배열 . 디렉토리가 비어 있거나 필터에서 이름을 승인하지 않으면 배열이 비어 있습니다. 이 추상 경로명이 디렉토리를 나타내지 않거나 I / O 오류가 발생하면 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="4dcd76d7d8936c701b86c8f0d5d00d1e579f5d22" translate="yes" xml:space="preserve">
          <source>An array of strings naming the files and directories in the directory denoted by this abstract pathname. The array will be empty if the directory is empty. Returns &lt;code&gt;null&lt;/code&gt; if this abstract pathname does not denote a directory, or if an I/O error occurs.</source>
          <target state="translated">이 추상 경로명이 나타내는 디렉토리의 파일과 디렉토리를 명명하는 문자열 배열. 디렉토리가 비어 있으면 배열이 비어 있습니다. 이 추상 경로명이 디렉토리를 나타내지 않거나 I / O 오류가 발생하면 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="10dc6859e8526130416f7152e9a4491502d2247c" translate="yes" xml:space="preserve">
          <source>An array of strings to be returned from &lt;code&gt;getFileSuffixes&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getFileSuffixes&lt;/code&gt; 로부터 반환되는 캐릭터 라인의 배열로 처음은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6d8c89a0904ecb41e61f333543dc6e274074fe69" translate="yes" xml:space="preserve">
          <source>An array of strings to be returned from &lt;code&gt;getFormatNames&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getFormatNames&lt;/code&gt; 에서 반환되는 문자열 배열 , 처음에는 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="030bd4856055ab04cbf48a78751b8b2ae10b21e0" translate="yes" xml:space="preserve">
          <source>An array of strings to be returned from &lt;code&gt;getFormatNames&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;. Constructors should set this to a non-&lt;code&gt;null&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;getFormatNames&lt;/code&gt; 로부터 돌려 주어지는 캐릭터 라인의 배열로 처음은 &lt;code&gt;null&lt;/code&gt; 입니다. 생성자는 이것을 &lt;code&gt;null&lt;/code&gt; 이 아닌 값으로 설정해야 합니다.</target>
        </trans-unit>
        <trans-unit id="dd83c0c428a941cf564206213fb272be4e98e0f3" translate="yes" xml:space="preserve">
          <source>An array of strings to be returned from &lt;code&gt;getImageReaderSpiNames&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getImageReaderSpiNames&lt;/code&gt; 로부터 반환되는 캐릭터 라인의 배열로 처음은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="809ddbc54d6752597f0e6989721cf6e2270ecd80" translate="yes" xml:space="preserve">
          <source>An array of strings to be returned from &lt;code&gt;getImageWriterSpiNames&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getImageWriterSpiNames&lt;/code&gt; 로부터 반환되는 캐릭터 라인의 배열로 , 처음은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="cafa442855686f22c535a31c64a7ed2dd61b5332" translate="yes" xml:space="preserve">
          <source>An array of strings to be returned from &lt;code&gt;getMIMETypes&lt;/code&gt;, initially &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getMIMETypes&lt;/code&gt; 로부터 반환되는 캐릭터 라인의 배열로 처음은 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="13c3c10ec355da687f48ba12684b50cb9ab66121" translate="yes" xml:space="preserve">
          <source>An array of supported signature algorithms, in descending order of preference. The return value is an empty array if no signature algorithm is supported.</source>
          <target state="translated">선호하는 내림차순으로 지원되는 서명 알고리즘의 배열입니다. 서명 알고리즘이 지원되지 않으면 반환 값은 빈 배열입니다.</target>
        </trans-unit>
        <trans-unit id="9899ef2c113960b5b4a6da8b82115c9bef30b63b" translate="yes" xml:space="preserve">
          <source>An array of supported signature algorithms, in descending order of preference. The return value is an empty array if the peer has not sent the supported signature algorithms.</source>
          <target state="translated">선호하는 내림차순으로 지원되는 서명 알고리즘의 배열입니다. 피어가 지원되는 서명 알고리즘을 보내지 않은 경우 반환 값은 빈 배열입니다.</target>
        </trans-unit>
        <trans-unit id="0011cb84f3d514765cbd0dbb765891e88e0cb010" translate="yes" xml:space="preserve">
          <source>An array of the command options which will be passed to the new child command by rmid. Note that rmid may add other options before or after these options, or both. Never returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">rmid에 의해 새 자식 명령에 전달 될 명령 옵션의 배열입니다. rmid는 이러한 옵션 앞뒤에 다른 옵션을 추가하거나 둘 다 추가 할 수 있습니다. &lt;code&gt;null&lt;/code&gt; 을 반환하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="4965093f8d91780dfb936cd2f5084d7b6a6afd3c" translate="yes" xml:space="preserve">
          <source>An array type.</source>
          <target state="translated">배열 유형</target>
        </trans-unit>
        <trans-unit id="eb588c5bf837c08898e0a50d6460ccb4179ca08d" translate="yes" xml:space="preserve">
          <source>An assignment expression.</source>
          <target state="translated">할당 식입니다.</target>
        </trans-unit>
        <trans-unit id="7843cac62e4bd43ea50470dafeb3cd957ac92d8f" translate="yes" xml:space="preserve">
          <source>An assignment expression. A &lt;code&gt;SubKind&lt;/code&gt; of &lt;a href=&quot;snippet.kind#EXPRESSION&quot;&gt;&lt;code&gt;Snippet.Kind.EXPRESSION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">할당 식입니다. A는 &lt;code&gt;SubKind&lt;/code&gt; 의 &lt;a href=&quot;snippet.kind#EXPRESSION&quot;&gt; &lt;code&gt;Snippet.Kind.EXPRESSION&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="94ca6465439ac8761e79b2b4d660d77a0df2742d" translate="yes" xml:space="preserve">
          <source>An association exists between two SCTP endpoints. Each endpoint is represented by a list of transport addresses through which that endpoint can be reached and from which it will originate SCTP messages. The association spans over all of the possible source/destination combinations which may be generated from each endpoint's lists of addresses.</source>
          <target state="translated">두 SCTP 끝점 사이에 연결이 존재합니다. 각 끝점은 해당 끝점에 도달 할 수 있고 SCTP 메시지가 시작되는 전송 주소 목록으로 표시됩니다. 연결은 각 엔드 포인트의 주소 목록에서 생성 될 수있는 가능한 모든 소스 / 대상 조합에 걸쳐 있습니다.</target>
        </trans-unit>
        <trans-unit id="ae1f55e24b18c4a7636f2709627cceb24145520e" translate="yes" xml:space="preserve">
          <source>An asterisk ('*') is replaced by a backslash (\) followed by an asterisk.</source>
          <target state="translated">별표 ( '*')는 백 슬래시 (\)와 별표로 대체됩니다.</target>
        </trans-unit>
        <trans-unit id="b6c9768ff7e6901ac92020f4184af0011ee5f826" translate="yes" xml:space="preserve">
          <source>An asterisk may appear by itself, or if immediately preceded by a &quot;.&quot; may appear at the end of the target name, to signify a wildcard match.</source>
          <target state="translated">별표가 단독으로 표시되거나 바로 앞에 &quot;.&quot;가 표시 될 수 있습니다. 와일드 카드 일치를 나타 내기 위해 대상 이름 끝에 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f73a650d8b0b2abdf91d7c6e87e134a597a8c0fc" translate="yes" xml:space="preserve">
          <source>An asynchronous channel for reading, writing, and manipulating a file</source>
          <target state="translated">파일 읽기, 쓰기 및 조작을위한 비동기 채널</target>
        </trans-unit>
        <trans-unit id="04ce0049fb979587f008bb0f36fca66b858bdff8" translate="yes" xml:space="preserve">
          <source>An asynchronous channel for reading, writing, and manipulating a file.</source>
          <target state="translated">파일 읽기, 쓰기 및 조작을위한 비동기 채널.</target>
        </trans-unit>
        <trans-unit id="3f05dfda8e00180392ad1ed2fdbdcc48784a0d25" translate="yes" xml:space="preserve">
          <source>An asynchronous channel for stream-oriented connecting sockets.</source>
          <target state="translated">스트림 지향 연결 소켓을위한 비동기 채널.</target>
        </trans-unit>
        <trans-unit id="eb34342605bb5ebb5f8ddb606c74b8b2735a46c8" translate="yes" xml:space="preserve">
          <source>An asynchronous channel for stream-oriented listening sockets.</source>
          <target state="translated">스트림 지향 청취 소켓을위한 비동기 채널.</target>
        </trans-unit>
        <trans-unit id="fc1ddd80b2747203b083590f5f367717ba6df71b" translate="yes" xml:space="preserve">
          <source>An asynchronous channel group encapsulates the mechanics required to handle the completion of I/O operations initiated by &lt;a href=&quot;asynchronouschannel&quot;&gt;&lt;code&gt;asynchronous channels&lt;/code&gt;&lt;/a&gt; that are bound to the group. A group has an associated thread pool to which tasks are submitted to handle I/O events and dispatch to &lt;a href=&quot;completionhandler&quot;&gt;&lt;code&gt;completion-handlers&lt;/code&gt;&lt;/a&gt; that consume the result of asynchronous operations performed on channels in the group. In addition to handling I/O events, the pooled threads may also execute other tasks required to support the execution of asynchronous I/O operations.</source>
          <target state="translated">비동기 채널 그룹 은 그룹에 바인딩 된 &lt;a href=&quot;asynchronouschannel&quot;&gt; &lt;code&gt;asynchronous channels&lt;/code&gt; &lt;/a&gt; 의해 시작된 I / O 작업의 완료를 처리하는 데 필요한 메커니즘을 캡슐화합니다 . 그룹에는 작업이 제출되어 I / O 이벤트를 처리 하고 그룹의 채널에서 수행 된 비동기 작업의 결과를 사용하는 &lt;a href=&quot;completionhandler&quot;&gt; &lt;code&gt;completion-handlers&lt;/code&gt; &lt;/a&gt; 디스패치되는 관련 스레드 풀이 있습니다 . 풀링 된 스레드는 I / O 이벤트 처리 외에도 비동기 I / O 작업 실행을 지원하는 데 필요한 다른 작업을 실행할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="ca8e70d6a08520c340a455679dfc1b46908dd944" translate="yes" xml:space="preserve">
          <source>An asynchronous channel group is created by invoking the &lt;a href=&quot;#withFixedThreadPool(int,java.util.concurrent.ThreadFactory)&quot;&gt;&lt;code&gt;withFixedThreadPool&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#withCachedThreadPool(java.util.concurrent.ExecutorService,int)&quot;&gt;&lt;code&gt;withCachedThreadPool&lt;/code&gt;&lt;/a&gt; methods defined here. Channels are bound to a group by specifying the group when constructing the channel. The associated thread pool is &lt;em&gt;owned&lt;/em&gt; by the group; termination of the group results in the shutdown of the associated thread pool.</source>
          <target state="translated">비동기 채널 그룹은 여기에 정의 된 &lt;a href=&quot;#withFixedThreadPool(int,java.util.concurrent.ThreadFactory)&quot;&gt; &lt;code&gt;withFixedThreadPool&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#withCachedThreadPool(java.util.concurrent.ExecutorService,int)&quot;&gt; &lt;code&gt;withCachedThreadPool&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 생성됩니다 . 채널을 구성 할 때 그룹을 지정하여 채널을 그룹에 바인딩합니다. 연관된 스레드 풀은 그룹 이 &lt;em&gt;소유&lt;/em&gt; 합니다. 그룹이 종료되면 관련 스레드 풀이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="1bd1578649e7815696b6734d360713fe6bd7c8c9" translate="yes" xml:space="preserve">
          <source>An asynchronous channel group is created by invoking the &lt;a href=&quot;asynchronouschannelgroup#withFixedThreadPool-int-java.util.concurrent.ThreadFactory-&quot;&gt;&lt;code&gt;withFixedThreadPool&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;asynchronouschannelgroup#withCachedThreadPool-java.util.concurrent.ExecutorService-int-&quot;&gt;&lt;code&gt;withCachedThreadPool&lt;/code&gt;&lt;/a&gt; methods defined here. Channels are bound to a group by specifying the group when constructing the channel. The associated thread pool is &lt;em&gt;owned&lt;/em&gt; by the group; termination of the group results in the shutdown of the associated thread pool.</source>
          <target state="translated">비동기 채널 그룹은 여기에 정의 된 &lt;a href=&quot;asynchronouschannelgroup#withFixedThreadPool-int-java.util.concurrent.ThreadFactory-&quot;&gt; &lt;code&gt;withFixedThreadPool&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;asynchronouschannelgroup#withCachedThreadPool-java.util.concurrent.ExecutorService-int-&quot;&gt; &lt;code&gt;withCachedThreadPool&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 작성됩니다 . 채널을 구성 할 때 그룹을 지정하여 채널을 그룹에 바인딩합니다. 연관된 스레드 풀은 그룹 이 &lt;em&gt;소유&lt;/em&gt; 합니다. 그룹이 종료되면 연관된 스레드 풀이 종료됩니다.</target>
        </trans-unit>
        <trans-unit id="ebf886da9ba81fbd1b24f207f7aef86fff5ea9a2" translate="yes" xml:space="preserve">
          <source>An asynchronous channel provider is a concrete subclass of this class that has a zero-argument constructor and implements the abstract methods specified below. A given invocation of the Java virtual machine maintains a single system-wide default provider instance, which is returned by the &lt;a href=&quot;#provider()&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; method. The first invocation of that method will locate the default provider as specified below.</source>
          <target state="translated">비동기 채널 공급자는 인수가없는 생성자를 가지며 아래에 지정된 추상 메서드를 구현하는이 클래스의 구체적인 하위 클래스입니다. Java 가상 머신의 특정 호출은 &lt;a href=&quot;#provider()&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt; 메소드에 의해 리턴되는 단일 시스템 전체 기본 제공자 인스턴스를 유지합니다 . 해당 메서드의 첫 번째 호출은 아래 지정된대로 기본 공급자를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="3d23c4c5494404dae3bfa4153bf162b06bccf6ea" translate="yes" xml:space="preserve">
          <source>An asynchronous channel provider is a concrete subclass of this class that has a zero-argument constructor and implements the abstract methods specified below. A given invocation of the Java virtual machine maintains a single system-wide default provider instance, which is returned by the &lt;a href=&quot;asynchronouschannelprovider#provider--&quot;&gt;&lt;code&gt;provider&lt;/code&gt;&lt;/a&gt; method. The first invocation of that method will locate the default provider as specified below.</source>
          <target state="translated">비동기 채널 공급자는 인수가 0 인 생성자가 있고 아래에 지정된 추상 메서드를 구현하는이 클래스의 구체적 하위 클래스입니다. Java 가상 머신의 지정된 호출은 단일 시스템 전체의 기본 제공자 인스턴스를 유지 보수하며 &lt;a href=&quot;asynchronouschannelprovider#provider--&quot;&gt; &lt;code&gt;provider&lt;/code&gt; &lt;/a&gt; 메소드에 의해 리턴됩니다 . 해당 메소드의 첫 번째 호출은 아래 지정된 기본 제공자를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="187bfcc3c4e185a9fc4302c4c0a15c24daca9dcd" translate="yes" xml:space="preserve">
          <source>An asynchronous channel that can read and write bytes.</source>
          <target state="translated">바이트를 읽고 쓸 수있는 비동기 채널.</target>
        </trans-unit>
        <trans-unit id="25891c7e23ee0f01652a03630a94a2a7bcc400a1" translate="yes" xml:space="preserve">
          <source>An asynchronous channel to a stream-oriented connecting socket</source>
          <target state="translated">스트림 지향 연결 소켓에 대한 비동기 채널</target>
        </trans-unit>
        <trans-unit id="0edfec2733989f66055163921cdee57e8f6c5f29" translate="yes" xml:space="preserve">
          <source>An asynchronous channel to a stream-oriented listening socket</source>
          <target state="translated">스트림 지향 청취 소켓에 대한 비동기 채널</target>
        </trans-unit>
        <trans-unit id="4dfab20de9c8516ae3347ab7d78fc643ad5817fb" translate="yes" xml:space="preserve">
          <source>An asynchronous file channel does not have a</source>
          <target state="translated">비동기 파일 채널에는</target>
        </trans-unit>
        <trans-unit id="5fdcdb96f921683fd4bd423bedd5ac99980e99ff" translate="yes" xml:space="preserve">
          <source>An asynchronous file channel is created when a file is opened by invoking one of the &lt;a href=&quot;#open(java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute...)&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods defined by this class. The file contains a variable-length sequence of bytes that can be read and written and whose current size can be &lt;a href=&quot;#size()&quot;&gt;&lt;code&gt;queried&lt;/code&gt;&lt;/a&gt;. The size of the file increases when bytes are written beyond its current size; the size of the file decreases when it is &lt;a href=&quot;#truncate(long)&quot;&gt;&lt;code&gt;truncated&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비동기 파일 채널은 이 클래스에서 정의한 &lt;a href=&quot;#open(java.nio.file.Path,java.util.Set,java.util.concurrent.ExecutorService,java.nio.file.attribute.FileAttribute...)&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 메서드 중 하나를 호출하여 파일을 열 때 생성됩니다 . 파일에는 읽고 쓸 수 있고 현재 크기를 &lt;a href=&quot;#size()&quot;&gt; &lt;code&gt;queried&lt;/code&gt; &lt;/a&gt; 할 수있는 가변 길이 바이트 시퀀스가 ​​포함되어 있습니다 . 파일 크기는 바이트가 현재 크기 이상으로 기록 될 때 증가합니다. 파일이 &lt;a href=&quot;#truncate(long)&quot;&gt; &lt;code&gt;truncated&lt;/code&gt; &lt;/a&gt; 파일 크기가 줄어 듭니다 .</target>
        </trans-unit>
        <trans-unit id="695c04a2c0d232f881caa8c269a0c45d720196e0" translate="yes" xml:space="preserve">
          <source>An asynchronous file channel is created when a file is opened by invoking one of the &lt;a href=&quot;asynchronousfilechannel#open-java.nio.file.Path-java.util.Set-java.util.concurrent.ExecutorService-java.nio.file.attribute.FileAttribute...-&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; methods defined by this class. The file contains a variable-length sequence of bytes that can be read and written and whose current size can be &lt;a href=&quot;asynchronousfilechannel#size--&quot;&gt;&lt;code&gt;queried&lt;/code&gt;&lt;/a&gt;. The size of the file increases when bytes are written beyond its current size; the size of the file decreases when it is &lt;a href=&quot;asynchronousfilechannel#truncate-long-&quot;&gt;&lt;code&gt;truncated&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">비동기 파일 채널은 이 클래스에 의해 정의 된 &lt;a href=&quot;asynchronousfilechannel#open-java.nio.file.Path-java.util.Set-java.util.concurrent.ExecutorService-java.nio.file.attribute.FileAttribute...-&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 메소드 중 하나를 호출하여 파일을 열 때 작성됩니다 . 파일에는 읽고 쓸 수 있고 현재 크기를 &lt;a href=&quot;asynchronousfilechannel#size--&quot;&gt; &lt;code&gt;queried&lt;/code&gt; &lt;/a&gt; 할 수있는 가변 길이의 바이트 시퀀스가 ​​포함됩니다 . 바이트가 현재 크기 이상으로 기록되면 파일 크기가 증가합니다. 파일이 &lt;a href=&quot;asynchronousfilechannel#truncate-long-&quot;&gt; &lt;code&gt;truncated&lt;/code&gt; &lt;/a&gt; 파일 크기가 줄어 듭니다 .</target>
        </trans-unit>
        <trans-unit id="18e323d0e2685f43c5d831acd8c17652a04238bc" translate="yes" xml:space="preserve">
          <source>An asynchronous server-socket channel is created by invoking the &lt;a href=&quot;#open(java.nio.channels.AsynchronousChannelGroup)&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class. A newly-created asynchronous server-socket channel is open but not yet bound. It can be bound to a local address and configured to listen for connections by invoking the &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method. Once bound, the &lt;a href=&quot;#accept(A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method is used to initiate the accepting of connections to the channel's socket. An attempt to invoke the &lt;code&gt;accept&lt;/code&gt; method on an unbound channel will cause a &lt;a href=&quot;notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">이 클래스 의 &lt;a href=&quot;#open(java.nio.channels.AsynchronousChannelGroup)&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 비동기 서버 소켓 채널을 만듭니다. 새로 생성 된 비동기 서버 소켓 채널이 열려 있지만 아직 바인딩되지 않았습니다. 로컬 주소에 &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 하고 bind 메서드 를 호출하여 연결을 수신하도록 구성 할 수 있습니다 . 일단 바인딩되면 &lt;a href=&quot;#accept(A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 채널 소켓에 대한 연결 수락을 시작합니다. 바인딩되지 않은 채널 에서 &lt;code&gt;accept&lt;/code&gt; 메서드 를 호출하려고 하면 &lt;a href=&quot;notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="35a9dd1f670fedc81c6f0cde0250688df213724f" translate="yes" xml:space="preserve">
          <source>An asynchronous server-socket channel is created by invoking the &lt;a href=&quot;asynchronousserversocketchannel#open-java.nio.channels.AsynchronousChannelGroup-&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; method of this class. A newly-created asynchronous server-socket channel is open but not yet bound. It can be bound to a local address and configured to listen for connections by invoking the &lt;a href=&quot;asynchronousserversocketchannel#bind-java.net.SocketAddress-int-&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; method. Once bound, the &lt;a href=&quot;asynchronousserversocketchannel#accept-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;accept&lt;/code&gt;&lt;/a&gt; method is used to initiate the accepting of connections to the channel's socket. An attempt to invoke the &lt;code&gt;accept&lt;/code&gt; method on an unbound channel will cause a &lt;a href=&quot;notyetboundexception&quot;&gt;&lt;code&gt;NotYetBoundException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">이 클래스 의 &lt;a href=&quot;asynchronousserversocketchannel#open-java.nio.channels.AsynchronousChannelGroup-&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 비동기 서버 소켓 채널이 작성됩니다 . 새로 작성된 비동기 서버 소켓 채널이 열려 있지만 아직 바인드되지 않았습니다. 로컬 주소에 바인드 될 수 있으며 &lt;a href=&quot;asynchronousserversocketchannel#bind-java.net.SocketAddress-int-&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 연결을 청취하도록 구성 할 수 있습니다 . 바인드되면 &lt;a href=&quot;asynchronousserversocketchannel#accept-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;accept&lt;/code&gt; &lt;/a&gt; 메소드는 채널 소켓에 대한 연결 승인을 시작하는 데 사용됩니다. 언 바운드 채널 에서 &lt;code&gt;accept&lt;/code&gt; 메소드 를 호출하려고 하면 &lt;a href=&quot;notyetboundexception&quot;&gt; &lt;code&gt;NotYetBoundException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="554b96139d1446f024e3ea4f86a857682d71ca74" translate="yes" xml:space="preserve">
          <source>An asynchronous update interface for receiving notifications about Image information as the Image is constructed.</source>
          <target state="translated">이미지가 구성 될 때 이미지 정보에 대한 알림을 수신하기위한 비동기 업데이트 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="70c8e04e3bb3cbe85bf7c5ed0b821f8397783cfe" translate="yes" xml:space="preserve">
          <source>An attach provider implementation is typically tied to a Java virtual machine implementation, version, or even mode of operation. That is, a specific provider implementation will typically only be capable of attaching to a specific Java virtual machine implementation or version. For example, Oracle's JDK implementation ships with provider implementations that can only attach to Oracle's</source>
          <target state="translated">첨부 제공자 구현은 일반적으로 JVM (Java Virtual Machine) 구현, 버전 또는 작동 모드에 연결됩니다. 즉, 특정 공급자 구현은 일반적으로 특정 Java 가상 머신 구현 또는 버전에만 연결할 수 있습니다. 예를 들어, Oracle의 JDK 구현은 Oracle의</target>
        </trans-unit>
        <trans-unit id="1ec842404282f4a6da7152de79483756c35c1935" translate="yes" xml:space="preserve">
          <source>An attach provider is a concrete subclass of this class that has a zero-argument constructor and implements the abstract methods specified below.</source>
          <target state="translated">연결 공급자는 인수가없는 생성자를 갖고 아래에 지정된 추상 메서드를 구현하는이 클래스의 구체적인 하위 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="42f7126d7260dab9ae572b884ac8c02ff6a855b6" translate="yes" xml:space="preserve">
          <source>An attach provider is identified by its &lt;a href=&quot;#name()&quot;&gt;&lt;code&gt;&lt;i&gt;name&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#type()&quot;&gt;&lt;code&gt;&lt;i&gt;type&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;. The</source>
          <target state="translated">첨부 공급자는 &lt;a href=&quot;#name()&quot;&gt; &lt;code&gt;&lt;i&gt;name&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 과 &lt;a href=&quot;#type()&quot;&gt; &lt;code&gt;&lt;i&gt;type&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 식별됩니다 . 그만큼</target>
        </trans-unit>
        <trans-unit id="2ca187dbb7c81232775137d23ea8301daefd06a2" translate="yes" xml:space="preserve">
          <source>An attached object may later be retrieved via the &lt;a href=&quot;#attachment()&quot;&gt;&lt;code&gt;attachment&lt;/code&gt;&lt;/a&gt; method. Only one object may be attached at a time; invoking this method causes any previous attachment to be discarded. The current attachment may be discarded by attaching &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">첨부 된 개체는 나중에 &lt;a href=&quot;#attachment()&quot;&gt; &lt;code&gt;attachment&lt;/code&gt; &lt;/a&gt; 방법을 통해 검색 할 수 있습니다 . 한 번에 하나의 개체 만 첨부 할 수 있습니다. 이 메서드를 호출하면 이전 첨부 파일이 삭제됩니다. 현재 첨부는 &lt;code&gt;null&lt;/code&gt; 을 첨부하여 버릴 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0e040a1ab54d2ff79e25ff6a5d352d99c7751808" translate="yes" xml:space="preserve">
          <source>An attached object may later be retrieved via the &lt;a href=&quot;selectionkey#attachment--&quot;&gt;&lt;code&gt;attachment&lt;/code&gt;&lt;/a&gt; method. Only one object may be attached at a time; invoking this method causes any previous attachment to be discarded. The current attachment may be discarded by attaching &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">부착 된 객체는 나중에 &lt;a href=&quot;selectionkey#attachment--&quot;&gt; &lt;code&gt;attachment&lt;/code&gt; &lt;/a&gt; 방법을 통해 검색 될 수있다 . 한 번에 하나의 물체 만 부착 할 수 있습니다. 이 메소드를 호출하면 이전 첨부 파일이 삭제됩니다. &lt;code&gt;null&lt;/code&gt; 을 첨부하면 현재 첨부 파일을 버릴 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f618be52cf8841eaf7f441b5431fec11eb692eb4" translate="yes" xml:space="preserve">
          <source>An attempt is made to read up to</source>
          <target state="translated">까지 읽으려고 시도</target>
        </trans-unit>
        <trans-unit id="afaed010a71b05b31348e2fb4e9852a2e9b230d1" translate="yes" xml:space="preserve">
          <source>An attempt is made to read up to &lt;code&gt;count&lt;/code&gt; bytes from the source channel and write them to this channel's file starting at the given &lt;code&gt;position&lt;/code&gt;. An invocation of this method may or may not transfer all of the requested bytes; whether or not it does so depends upon the natures and states of the channels. Fewer than the requested number of bytes will be transferred if the source channel has fewer than &lt;code&gt;count&lt;/code&gt; bytes remaining, or if the source channel is non-blocking and has fewer than &lt;code&gt;count&lt;/code&gt; bytes immediately available in its input buffer.</source>
          <target state="translated">소스 채널에서 바이트 를 &lt;code&gt;count&lt;/code&gt; 하여 주어진 &lt;code&gt;position&lt;/code&gt; 에서 시작하여이 채널의 파일에 쓰려고 시도 합니다 . 이 메소드의 호출은 요청 된 모든 바이트를 전송하거나 전송하지 않을 수 있습니다. 채널의 특성과 상태에 따라 달라집니다. 소스 채널에 남아있는 &lt;code&gt;count&lt;/code&gt; 바이트 보다 적 거나 소스 채널이 블로킹되지 않고 입력 버퍼에서 즉시 사용 가능한 &lt;code&gt;count&lt;/code&gt; 바이트 보다 적은 경우 요청 된 바이트 수보다 적게 전송 됩니다.</target>
        </trans-unit>
        <trans-unit id="b466afdab2763a9692f1fd28697bb624e4f30d43" translate="yes" xml:space="preserve">
          <source>An attempt is made to read up to &lt;code&gt;count&lt;/code&gt; bytes starting at the given &lt;code&gt;position&lt;/code&gt; in this channel's file and write them to the target channel. An invocation of this method may or may not transfer all of the requested bytes; whether or not it does so depends upon the natures and states of the channels. Fewer than the requested number of bytes are transferred if this channel's file contains fewer than &lt;code&gt;count&lt;/code&gt; bytes starting at the given &lt;code&gt;position&lt;/code&gt;, or if the target channel is non-blocking and it has fewer than &lt;code&gt;count&lt;/code&gt; bytes free in its output buffer.</source>
          <target state="translated">이 채널 파일 의 지정된 &lt;code&gt;position&lt;/code&gt; 에서 시작하여 바이트 를 &lt;code&gt;count&lt;/code&gt; 하여 대상 채널에 쓰려고 시도 합니다. 이 메소드의 호출은 요청 된 모든 바이트를 전송하거나 전송하지 않을 수 있습니다. 채널의 특성과 상태에 따라 달라집니다. 이 채널의 파일 이 지정된 &lt;code&gt;position&lt;/code&gt; 에서 시작하는 &lt;code&gt;count&lt;/code&gt; 바이트 보다 적은 수를 포함 하거나 대상 채널이 비 블로킹이고 출력 버퍼에서 사용 가능한 &lt;code&gt;count&lt;/code&gt; 바이트 보다 적은 경우 요청 된 바이트 수 보다 적게 전송 됩니다.</target>
        </trans-unit>
        <trans-unit id="722aa7ce50f34b6a706302fb44f8a4ddcbcbe4a6" translate="yes" xml:space="preserve">
          <source>An attempt is made to write up to</source>
          <target state="translated">에 쓰려고 시도</target>
        </trans-unit>
        <trans-unit id="daa493fc78c87a1d23c019a31321dea082987cfd" translate="yes" xml:space="preserve">
          <source>An attempt to construct an MXBean that does not conform to the above rules will produce an exception.</source>
          <target state="translated">위의 규칙을 준수하지 않는 MXBean을 구성하려고 시도하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="422fa7a7a56e5962fbba8784c52a95523c59cb40" translate="yes" xml:space="preserve">
          <source>An attempt to load a provider that is not a subtype of one of the above types will result in &lt;code&gt;IllegalArgumentException&lt;/code&gt;.</source>
          <target state="translated">위 유형 중 하나의 하위 유형이 아닌 공급자를로드하려고하면 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="6b52b55dd28b3f2b7689679f95188325c85b1ef0" translate="yes" xml:space="preserve">
          <source>An attempt to position the cursor beyond the first/last row in the result set leaves the cursor before the first row or after the last row.</source>
          <target state="translated">결과 세트의 첫 번째 / 마지막 행을 넘어서 커서를 위치시키려는 시도는 첫 번째 행 앞이나 마지막 행 뒤에 커서를 둡니다.</target>
        </trans-unit>
        <trans-unit id="6aa3113dc73ea41eaab226482455570024e6c567" translate="yes" xml:space="preserve">
          <source>An attempt to serialize explicitly an instance of this class will fail.</source>
          <target state="translated">이 클래스의 인스턴스를 명시 적으로 직렬화하려는 시도는 실패합니다.</target>
        </trans-unit>
        <trans-unit id="3cceca5092588d88b6efd29b07df7c52a16bbb9c" translate="yes" xml:space="preserve">
          <source>An attempt was made to read an object when the next element in the stream is primitive data. In this case, the OptionalDataException's length field is set to the number of bytes of primitive data immediately readable from the stream, and the eof field is set to false.</source>
          <target state="translated">스트림의 다음 요소가 기본 데이터 인 경우 오브젝트를 읽으려고했습니다. 이 경우 OptionalDataException의 길이 필드는 스트림에서 즉시 읽을 수있는 기본 데이터의 바이트 수로 설정되고 eof 필드는 false로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="6760262c20614bbc00dcf1a227400dd2ef092e20" translate="yes" xml:space="preserve">
          <source>An attempt was made to read past the end of data consumable by a class-defined readObject or readExternal method. In this case, the OptionalDataException's eof field is set to true, and the length field is set to 0.</source>
          <target state="translated">클래스 정의 readObject 또는 readExternal 메소드가 소비 할 수있는 데이터의 끝을지나 읽으려고했습니다. 이 경우 OptionalDataException의 eof 필드는 true로 설정되고 길이 필드는 0으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="16aa56556c9f579c2709f92998d373096c035221" translate="yes" xml:space="preserve">
          <source>An attempt will be made to resolve the hostname into an InetAddress. If that attempt fails, the address will be flagged as</source>
          <target state="translated">호스트 이름을 InetAddress로 확인하려고 시도합니다. 시도가 실패하면 주소는</target>
        </trans-unit>
        <trans-unit id="279f3bdf2c9f38de29ce0a27e68895d399181119" translate="yes" xml:space="preserve">
          <source>An attribute &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; in &lt;code&gt;matchingAttributes&lt;/code&gt; is considered to match an attribute &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt; of an object if &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; and &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt; have the same identifier, and each value of &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; is equal to some value of &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt;. This implies that the order of values is not significant, and that &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt; may contain &quot;extra&quot; values not found in &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; without affecting the comparison. It also implies that if &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; has no values, then testing for a match is equivalent to testing for the presence of an attribute &lt;em&gt;A&lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt; with the same identifier.</source>
          <target state="translated">&lt;code&gt;matchingAttributes&lt;/code&gt; 의 속성 &lt;em&gt;A &lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; 은 &lt;em&gt;A &lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; 과 &lt;em&gt;A &lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt; 가 동일한 식별자를 가지고 있고 &lt;em&gt;A &lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; 의 각 값이 &lt;em&gt;A &lt;/em&gt;&lt;sub&gt;2의&lt;/sub&gt; 일부 값 과 동일한 경우 객체 의 속성 &lt;em&gt;A &lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt; 와 일치하는 것으로 간주됩니다 . 이는 값의 순서가 중요하지 않으며 &lt;em&gt;A &lt;/em&gt;&lt;sub&gt;2&lt;/sub&gt; 가 비교에 영향을주지 않고 &lt;em&gt;A &lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; 에서 찾을 수없는 &quot;추가&quot;값을 포함 할 수 있음을 의미합니다 . 또한 &lt;em&gt;A &lt;/em&gt;&lt;sub&gt;1&lt;/sub&gt; 에 값이 없으면 일치 테스트는 속성 &lt;em&gt;A&lt;/em&gt; 의 존재 테스트와 동등 함을 의미합니다 &lt;em&gt;.&lt;/em&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;&lt;em&gt;&lt;/em&gt;&lt;sub&gt;&lt;/sub&gt;동일한 식별자를 가진 &lt;sub&gt;2&lt;/sub&gt; .</target>
        </trans-unit>
        <trans-unit id="0ce7e6287bdf694dcae3c1cb3483102721e3aeea" translate="yes" xml:space="preserve">
          <source>An attribute associated with a PKCS12 keystore entry.</source>
          <target state="translated">PKCS12 키 저장소 항목과 연관된 속성입니다.</target>
        </trans-unit>
        <trans-unit id="7b8a62f3bbe006040eef0aaf0d414a85f523129e" translate="yes" xml:space="preserve">
          <source>An attribute associated with a PKCS12 keystore entry. The attribute name is an ASN.1 Object Identifier and the attribute value is a set of ASN.1 types.</source>
          <target state="translated">PKCS12 키 저장소 항목과 연관된 속성입니다. 속성 이름은 ASN.1 객체 식별자이고 속성 값은 ASN.1 유형의 집합입니다.</target>
        </trans-unit>
        <trans-unit id="b16f2f4d30434202d0727a48b1a9c2241e0fb243" translate="yes" xml:space="preserve">
          <source>An attribute associated with a keystore entry.</source>
          <target state="translated">키 저장소 항목과 연관된 속성입니다.</target>
        </trans-unit>
        <trans-unit id="8ea421495bfbf0fe9812b4798e82485b433e6378" translate="yes" xml:space="preserve">
          <source>An attribute associated with a keystore entry. It comprises a name and one or more values.</source>
          <target state="translated">키 저장소 항목과 연관된 속성입니다. 이름과 하나 이상의 값으로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="5c12ace35e7f44e768a04aabb4ff6210b8ec488c" translate="yes" xml:space="preserve">
          <source>An attribute class used to support requesting a print or page setup dialog be kept displayed on top of all windows or some specific window.</source>
          <target state="translated">인쇄 또는 페이지 설정 대화 상자 요청을 지원하는 데 사용되는 속성 클래스는 모든 창 또는 일부 특정 창 위에 계속 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="c9e3847509c7ebe3cea18e6a71d27093cd8dab9d" translate="yes" xml:space="preserve">
          <source>An attribute expression for the attribute named &lt;code&gt;name&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;name&lt;/code&gt; 이라는 속성의 속성 표현식입니다 .</target>
        </trans-unit>
        <trans-unit id="ef81256df94075f9fe820e5d4a8366ff423b01ba" translate="yes" xml:space="preserve">
          <source>An attribute expression for the attribute named name. The returned object will be serialized as an instance of the non-public class  javax.management.QualifiedAttributeValueExp.</source>
          <target state="translated">name이라는 속성의 속성 표현식입니다. 리턴 된 오브젝트는 비 공용 클래스 javax.management.QualifiedAttributeValueExp의 인스턴스로 직렬화됩니다.</target>
        </trans-unit>
        <trans-unit id="d69ad64e956b7d0c1ccdbfa8a8be25663a4e95d3" translate="yes" xml:space="preserve">
          <source>An attribute expression for the attribute named name. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;../../serialized-form#javax.management.QualifiedAttributeValueExp&quot;&gt; javax.management.QualifiedAttributeValueExp&lt;/a&gt;.</source>
          <target state="translated">name이라는 속성에 대한 속성 표현식입니다. 반환 된 객체는 비공개 클래스 &lt;a href=&quot;../../serialized-form#javax.management.QualifiedAttributeValueExp&quot;&gt;javax.management.QualifiedAttributeValueExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="2f2a63457deb3a55c773e1467e491160ada8356e" translate="yes" xml:space="preserve">
          <source>An attribute expression for the attribute named name. The returned object will be serialized as an instance of the non-public class &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.QualifiedAttributeValueExp&quot;&gt; javax.management.QualifiedAttributeValueExp&lt;/a&gt;.</source>
          <target state="translated">name이라는 속성에 대한 속성 표현식입니다. 반환 된 객체는 비공개 클래스 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/serialized-form.html#javax.management.QualifiedAttributeValueExp&quot;&gt;javax.management.QualifiedAttributeValueExp&lt;/a&gt; 의 인스턴스로 직렬화됩니다 .</target>
        </trans-unit>
        <trans-unit id="2ff164eb6c8c4747f4ec9c5a66581cf576a5ba9d" translate="yes" xml:space="preserve">
          <source>An attribute is a key/value pair, identified by the key. No two attributes on a given character can have the same key.</source>
          <target state="translated">속성은 키로 식별되는 키 / 값 쌍입니다. 주어진 문자의 두 속성이 동일한 키를 가질 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ce056363b5e69ea39fd01894aa0ac5fc2ddbeb31" translate="yes" xml:space="preserve">
          <source>An attribute is written using the same algorithm to find the lexical form as used in START_ELEMENT. The default is to use double quotes to wrap attribute values and to escape any double quotes found in the value. The type value is ignored.</source>
          <target state="translated">START_ELEMENT에서 사용되는 어휘 형식을 찾기 위해 동일한 알고리즘을 사용하여 속성이 작성됩니다. 기본값은 큰 따옴표를 사용하여 속성 값을 래핑하고 값에있는 모든 큰 따옴표를 이스케이프하는 것입니다. 유형 값은 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="43417727ef128afc7f6d12d299865c3f3e5c84fb" translate="yes" xml:space="preserve">
          <source>An attribute list includes only attributes that have been specified or defaulted: #IMPLIED attributes will not be included.</source>
          <target state="translated">속성 목록에는 지정되었거나 기본값이 지정된 속성 만 포함됩니다. #IMPLIED 속성은 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="711649ceb8fb4a13253ff62526cf3ea69f22f307" translate="yes" xml:space="preserve">
          <source>An attribute of a language and binding dependent type that represents a stream of 16-bit units.</source>
          <target state="translated">16 비트 단위의 스트림을 나타내는 언어 및 바인딩 종속 유형의 속성입니다.</target>
        </trans-unit>
        <trans-unit id="5bdb8ae5f5dbdf04eeebdd54a26532a2da5adb74" translate="yes" xml:space="preserve">
          <source>An attribute of a language and binding dependent type that represents a stream of 16-bit units. The application must encode the stream using UTF-16 (defined in [Unicode] and in [ISO/IEC 10646]). It is not a requirement to have an XML declaration when using character streams. If an XML declaration is present, the value of the encoding attribute will be ignored.</source>
          <target state="translated">16 비트 단위의 스트림을 나타내는 언어 및 바인딩 종속 유형의 속성입니다. 응용 프로그램은 UTF-16 ([유니 코드] 및 [ISO / IEC 10646]에 정의 됨)을 사용하여 스트림을 인코딩해야합니다. 문자 스트림을 사용할 때 XML 선언이 필요하지 않습니다. XML 선언이 있으면 인코딩 속성의 값이 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="d22e3b03dc4a22eed7c504ef674a057b41368ac6" translate="yes" xml:space="preserve">
          <source>An attribute of a language and binding dependent type that represents a stream of bytes.</source>
          <target state="translated">바이트 스트림을 나타내는 언어 및 바인딩 종속 유형의 속성입니다.</target>
        </trans-unit>
        <trans-unit id="ab41179d208d3b6e3332c5711a044e50b6c3ad17" translate="yes" xml:space="preserve">
          <source>An attribute of a language and binding dependent type that represents a writable stream of bytes.</source>
          <target state="translated">쓰기 가능한 바이트 스트림을 나타내는 언어 및 바인딩 종속 형식의 특성입니다.</target>
        </trans-unit>
        <trans-unit id="9d60b0a5c754ab7ba3e2e9fe792b77d6a9b0a02c" translate="yes" xml:space="preserve">
          <source>An attribute of a language and binding dependent type that represents a writable stream to which 16-bit units can be output.</source>
          <target state="translated">16 비트 단위를 출력 할 수있는 쓰기 가능한 스트림을 나타내는 언어 및 바인딩 종속 유형의 속성입니다.</target>
        </trans-unit>
        <trans-unit id="4bab69b71afc252a91bb7b8eef477f66804094f7" translate="yes" xml:space="preserve">
          <source>An attribute represents a printing feature that a print service can provide. For each attribute, a print service either does or does not support the attribute. For each possible value of a supported attribute, a print service either does or does not support the value.</source>
          <target state="translated">속성은 인쇄 서비스가 제공 할 수있는 인쇄 기능을 나타냅니다. 각 속성에 대해 인쇄 서비스는 속성을 지원하거나 지원하지 않습니다. 지원되는 속성의 각 가능한 값에 대해 인쇄 서비스는 값을 지원하거나 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7af7806d02935fed73ab539df0b07c01ee57ebc0" translate="yes" xml:space="preserve">
          <source>An attribute set contains a group of</source>
          <target state="translated">속성 집합에는</target>
        </trans-unit>
        <trans-unit id="b6bfd46496d167fff9841e3240580f6db35bd7ff" translate="yes" xml:space="preserve">
          <source>An attribute specifying the encoding used for this document at the time of the parsing.</source>
          <target state="translated">구문 분석시이 문서에 사용 된 인코딩을 지정하는 속성입니다.</target>
        </trans-unit>
        <trans-unit id="4280eb0037f376ffc37c0af7761eb3a86bd946c5" translate="yes" xml:space="preserve">
          <source>An attribute specifying the encoding used for this document at the time of the parsing. This is &lt;code&gt;null&lt;/code&gt; when it is not known, such as when the &lt;code&gt;Document&lt;/code&gt; was created in memory.</source>
          <target state="translated">구문 분석시이 문서에 사용 된 인코딩을 지정하는 속성입니다. 이다 &lt;code&gt;null&lt;/code&gt; 이 같은 경우와 같이, 공지되어 있지 않은 경우 &lt;code&gt;Document&lt;/code&gt; 메모리에 생성되었다.</target>
        </trans-unit>
        <trans-unit id="02c811dea60fb48b64b7b977a023b8d3426aec3a" translate="yes" xml:space="preserve">
          <source>An attribute specifying the encoding used for this entity at the time of parsing, when it is an external parsed entity.</source>
          <target state="translated">외부 구문 분석 된 엔티티 인 경우 구문 분석시이 엔티티에 사용 된 인코딩을 지정하는 속성입니다.</target>
        </trans-unit>
        <trans-unit id="cb4539768cb9fe473cca2e52ddc73213bf93be27" translate="yes" xml:space="preserve">
          <source>An attribute specifying the encoding used for this entity at the time of parsing, when it is an external parsed entity. This is &lt;code&gt;null&lt;/code&gt; if it an entity from the internal subset or if it is not known.</source>
          <target state="translated">외부 구문 분석 된 엔티티 인 경우 구문 분석시이 엔티티에 사용 된 인코딩을 지정하는 속성입니다. 이다 &lt;code&gt;null&lt;/code&gt; 내부 집합으로부터 하나의 엔티티 또는 그 경우는 공지되어 있지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="d5357749b3d867c4532245b3b860894a4d597a08" translate="yes" xml:space="preserve">
          <source>An attribute specifying whether error checking is enforced or not.</source>
          <target state="translated">오류 검사를 시행할지 여부를 지정하는 속성입니다.</target>
        </trans-unit>
        <trans-unit id="88a509e4c461d7b9c604efdfe52994166f875cbe" translate="yes" xml:space="preserve">
          <source>An attribute specifying whether error checking is enforced or not. When set to &lt;code&gt;false&lt;/code&gt;, the implementation is free to not test every possible error case normally defined on DOM operations, and not raise any &lt;code&gt;DOMException&lt;/code&gt; on DOM operations or report errors while using &lt;code&gt;Document.normalizeDocument()&lt;/code&gt;. In case of error, the behavior is undefined. This attribute is &lt;code&gt;true&lt;/code&gt; by default.</source>
          <target state="translated">오류 검사를 시행할지 여부를 지정하는 속성입니다. &lt;code&gt;false&lt;/code&gt; 로 설정되면 구현은 DOM 작업에 일반적으로 정의 된 모든 가능한 오류 사례를 테스트하지 않고 DOM 작업에 대한 &lt;code&gt;DOMException&lt;/code&gt; 을 발생 시키거나 &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; 를 사용하는 동안 오류를보고 하지 않아도 됩니다. 오류가 발생하면 동작이 정의되지 않습니다. 이 속성은 기본적으로 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="70890990e607e8c68bacbc68a074a9c1af6a2dd8" translate="yes" xml:space="preserve">
          <source>An attribute specifying, as part of the &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML declaration&lt;/a&gt;, the encoding of this document.</source>
          <target state="translated">이 문서의 인코딩을 &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML 선언의&lt;/a&gt; 일부로 지정하는 속성 입니다.</target>
        </trans-unit>
        <trans-unit id="b7fc52b5b2d2afef44a4b690c331fdbd8a50e684" translate="yes" xml:space="preserve">
          <source>An attribute specifying, as part of the &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML declaration&lt;/a&gt;, the encoding of this document. This is &lt;code&gt;null&lt;/code&gt; when unspecified or when it is not known, such as when the &lt;code&gt;Document&lt;/code&gt; was created in memory.</source>
          <target state="translated">이 문서의 인코딩을 &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML 선언의&lt;/a&gt; 일부로 지정하는 속성 입니다. 지정되지 않거나 &lt;code&gt;Document&lt;/code&gt; 가 메모리에 생성 된 경우와 같이 알 수 &lt;code&gt;null&lt;/code&gt; 경우 에는 null 입니다.</target>
        </trans-unit>
        <trans-unit id="fa37878d49c1737266af6ad5e8e67a4cfc09a3ae" translate="yes" xml:space="preserve">
          <source>An attribute specifying, as part of the &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML declaration&lt;/a&gt;, the version number of this document.</source>
          <target state="translated">이 문서의 버전 번호를 &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML 선언의&lt;/a&gt; 일부로 지정하는 속성 입니다.</target>
        </trans-unit>
        <trans-unit id="fe2e60156c40952ad6ba6b17ea5f8b65c5772f91" translate="yes" xml:space="preserve">
          <source>An attribute specifying, as part of the &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML declaration&lt;/a&gt;, the version number of this document. If there is no declaration and if this document supports the &quot;XML&quot; feature, the value is &lt;code&gt;&quot;1.0&quot;&lt;/code&gt;. If this document does not support the &quot;XML&quot; feature, the value is always &lt;code&gt;null&lt;/code&gt;. Changing this attribute will affect methods that check for invalid characters in XML names. Application should invoke &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; in order to check for invalid characters in the &lt;code&gt;Node&lt;/code&gt;s that are already part of this &lt;code&gt;Document&lt;/code&gt;.</source>
          <target state="translated">이 문서의 버전 번호를 &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML 선언의&lt;/a&gt; 일부로 지정하는 속성 입니다. 선언이없고이 문서가 &quot;XML&quot;기능을 지원하는 경우 값은 &lt;code&gt;&quot;1.0&quot;&lt;/code&gt; 입니다. 이 문서가 &quot;XML&quot;기능을 지원하지 않는 경우 값은 항상 &lt;code&gt;null&lt;/code&gt; 입니다. 이 속성을 변경하면 XML 이름에서 잘못된 문자를 확인하는 메서드에 영향을줍니다. 애플리케이션 은 이미이 &lt;code&gt;Document&lt;/code&gt; 일부인 &lt;code&gt;Node&lt;/code&gt; 에서 유효하지 않은 문자를 확인하기 위해 &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="4f124ff84289a3c3bf6149f4e443058114d39cab" translate="yes" xml:space="preserve">
          <source>An attribute specifying, as part of the &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML declaration&lt;/a&gt;, whether this document is standalone.</source>
          <target state="translated">이 문서가 독립형인지 여부를 &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML 선언의&lt;/a&gt; 일부로 지정하는 속성 입니다.</target>
        </trans-unit>
        <trans-unit id="86c2d9dd90459500da1ccbb30ba9c6f5361ab0ff" translate="yes" xml:space="preserve">
          <source>An attribute specifying, as part of the &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML declaration&lt;/a&gt;, whether this document is standalone. This is &lt;code&gt;false&lt;/code&gt; when unspecified.</source>
          <target state="translated">이 문서가 독립형인지 여부를 &lt;a href=&quot;http://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML 선언의&lt;/a&gt; 일부로 지정하는 속성 입니다. 이다 &lt;code&gt;false&lt;/code&gt; 지정되지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="8a15d46a6af17fcc7b13ca85b78637972c3e2c1a" translate="yes" xml:space="preserve">
          <source>An attribute specifying, as part of the &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML declaration&lt;/a&gt;, the encoding of this document.</source>
          <target state="translated">이 문서의 인코딩을 &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML 선언의&lt;/a&gt; 일부로 지정하는 속성 입니다.</target>
        </trans-unit>
        <trans-unit id="02becab1d90bd117a047b002f3b10d314e854b98" translate="yes" xml:space="preserve">
          <source>An attribute specifying, as part of the &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML declaration&lt;/a&gt;, the encoding of this document. This is &lt;code&gt;null&lt;/code&gt; when unspecified or when it is not known, such as when the &lt;code&gt;Document&lt;/code&gt; was created in memory.</source>
          <target state="translated">이 문서의 인코딩을 &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML 선언의&lt;/a&gt; 일부로 지정하는 속성 입니다. 지정되지 않았거나 &lt;code&gt;Document&lt;/code&gt; 가 메모리에 생성 된 경우와 같이 알 수 &lt;code&gt;null&lt;/code&gt; 경우 에는 null 입니다.</target>
        </trans-unit>
        <trans-unit id="9aecfcb80dfd7189e17b7a81cd848bf690d4214f" translate="yes" xml:space="preserve">
          <source>An attribute specifying, as part of the &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML declaration&lt;/a&gt;, the version number of this document.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML 선언의 일부로이&lt;/a&gt; 문서의 버전 번호를 지정하는 속성 입니다.</target>
        </trans-unit>
        <trans-unit id="58c5f56e45ef134d8b84a97fed17a8cc08e962ff" translate="yes" xml:space="preserve">
          <source>An attribute specifying, as part of the &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML declaration&lt;/a&gt;, the version number of this document. If there is no declaration and if this document supports the &quot;XML&quot; feature, the value is &lt;code&gt;&quot;1.0&quot;&lt;/code&gt;. If this document does not support the &quot;XML&quot; feature, the value is always &lt;code&gt;null&lt;/code&gt;. Changing this attribute will affect methods that check for invalid characters in XML names. Application should invoke &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; in order to check for invalid characters in the &lt;code&gt;Node&lt;/code&gt;s that are already part of this &lt;code&gt;Document&lt;/code&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML 선언의 일부로이&lt;/a&gt; 문서의 버전 번호를 지정하는 속성 입니다. 선언이없고이 문서가 &quot;XML&quot;기능을 지원하는 경우 값은 &lt;code&gt;&quot;1.0&quot;&lt;/code&gt; 입니다. 이 문서가 &quot;XML&quot;기능을 지원하지 않는 경우 값은 항상 &lt;code&gt;null&lt;/code&gt; 입니다. 이 속성을 변경하면 XML 이름에서 유효하지 않은 문자를 확인하는 메서드에 영향을줍니다. 애플리케이션 은 이미이 &lt;code&gt;Document&lt;/code&gt; 일부인 &lt;code&gt;Node&lt;/code&gt; 에서 유효하지 않은 문자를 확인하기 위해 &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1471f909af7f9dfa999baa36786f999560da6a42" translate="yes" xml:space="preserve">
          <source>An attribute specifying, as part of the &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML declaration&lt;/a&gt;, whether this document is standalone.</source>
          <target state="translated">이 문서가 독립형인지 여부를 &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML 선언의&lt;/a&gt; 일부로 지정하는 속성 입니다.</target>
        </trans-unit>
        <trans-unit id="6bc2eeac79d5bed62258d7206392910bd1af21c9" translate="yes" xml:space="preserve">
          <source>An attribute specifying, as part of the &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML declaration&lt;/a&gt;, whether this document is standalone. This is &lt;code&gt;false&lt;/code&gt; when unspecified.</source>
          <target state="translated">이 문서가 독립형인지 여부를 &lt;a href=&quot;https://www.w3.org/TR/2004/REC-xml-20040204#NT-XMLDecl&quot;&gt;XML 선언의&lt;/a&gt; 일부로 지정하는 속성 입니다. 이다 &lt;code&gt;false&lt;/code&gt; 지정되지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="5e3349eaba5d6b060aa90c656be9bb10b0432b53" translate="yes" xml:space="preserve">
          <source>An attribute specifying, as part of the text declaration, the encoding of this entity, when it is an external parsed entity.</source>
          <target state="translated">텍스트 선언의 일부로이 엔티티가 외부 구문 분석 된 엔티티 인 경우 인코딩을 지정하는 속성입니다.</target>
        </trans-unit>
        <trans-unit id="f1ee2a10bbee75517db8ed8b16da2b77d6d190d9" translate="yes" xml:space="preserve">
          <source>An attribute specifying, as part of the text declaration, the encoding of this entity, when it is an external parsed entity. This is &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">텍스트 선언의 일부로이 엔티티가 외부 구문 분석 된 엔티티 인 경우 인코딩을 지정하는 속성입니다. 이다 &lt;code&gt;null&lt;/code&gt; 이 없습니다.</target>
        </trans-unit>
        <trans-unit id="bba36a44cbe514eb65cb85e00e9d566f4a243ceb" translate="yes" xml:space="preserve">
          <source>An attribute specifying, as part of the text declaration, the version number of this entity, when it is an external parsed entity.</source>
          <target state="translated">이 엔티티가 외부 구문 분석 된 엔티티 인 경우 텍스트 선언의 일부로이 엔티티의 버전 번호를 지정하는 속성입니다.</target>
        </trans-unit>
        <trans-unit id="105844b22112ab70f9459d65ed070eb22c7c5286" translate="yes" xml:space="preserve">
          <source>An attribute specifying, as part of the text declaration, the version number of this entity, when it is an external parsed entity. This is &lt;code&gt;null&lt;/code&gt; otherwise.</source>
          <target state="translated">이 엔티티가 외부 구문 분석 된 엔티티 인 경우 텍스트 선언의 일부로이 엔티티의 버전 번호를 지정하는 속성입니다. 이다 &lt;code&gt;null&lt;/code&gt; 이 없습니다.</target>
        </trans-unit>
        <trans-unit id="2bcc1293de4c5c865a78f34a613ff37bf6e5d9f9" translate="yes" xml:space="preserve">
          <source>An attribute value is a small, atomic data item, such as an integer or an enumerated value. The Java Print Service API does not use primitive data types, such as int, to represent attribute values for these reasons:</source>
          <target state="translated">속성 값은 정수 또는 열거 된 값과 같은 작은 원자 데이터 항목입니다. Java 인쇄 서비스 API는 다음과 같은 이유로 속성 값을 나타내는 데 int와 같은 기본 데이터 유형을 사용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="18466dad7d4465649901732dc8a2f17ba629c555" translate="yes" xml:space="preserve">
          <source>An attribute view provides a read-only or updatable view of the non-opaque values, or &lt;em&gt;metadata&lt;/em&gt;, associated with objects in a file system. The &lt;a href=&quot;fileattributeview&quot;&gt;&lt;code&gt;FileAttributeView&lt;/code&gt;&lt;/a&gt; interface is extended by several other interfaces that provide views to specific sets of file attributes. &lt;code&gt;FileAttributeViews&lt;/code&gt; are selected by invoking the &lt;a href=&quot;../files#getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption...)&quot;&gt;&lt;code&gt;Files.getFileAttributeView(java.nio.file.Path, java.lang.Class&amp;lt;V&amp;gt;, java.nio.file.LinkOption...)&lt;/code&gt;&lt;/a&gt; method with a &lt;em&gt;type-token&lt;/em&gt; to identify the required view. Views can also be identified by name. The &lt;a href=&quot;filestoreattributeview&quot;&gt;&lt;code&gt;FileStoreAttributeView&lt;/code&gt;&lt;/a&gt; interface provides access to file store attributes. A &lt;code&gt;FileStoreAttributeView&lt;/code&gt; of a given type is obtained by invoking the &lt;a href=&quot;../filestore#getFileStoreAttributeView(java.lang.Class)&quot;&gt;&lt;code&gt;FileStore.getFileStoreAttributeView(java.lang.Class&amp;lt;V&amp;gt;)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">속성보기는 파일 시스템의 객체와 연관된 불투명하지 않은 값 또는 &lt;em&gt;메타 데이터에&lt;/em&gt; 대한 읽기 전용 또는 업데이트 가능한보기를 제공합니다 . &lt;a href=&quot;fileattributeview&quot;&gt; &lt;code&gt;FileAttributeView&lt;/code&gt; 의&lt;/a&gt; 인터페이스 파일 속성의 특정 세트에 대한 전망을 제공하는 여러 다른 인터페이스에 의해 확장된다. &lt;code&gt;FileAttributeViews&lt;/code&gt; 는 필요한 뷰를 식별하기 위해 &lt;em&gt;유형 토큰&lt;/em&gt; 과 함께 &lt;a href=&quot;../files#getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption...)&quot;&gt; &lt;code&gt;Files.getFileAttributeView(java.nio.file.Path, java.lang.Class&amp;lt;V&amp;gt;, java.nio.file.LinkOption...)&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 선택됩니다 . 뷰는 이름으로 식별 할 수도 있습니다. &lt;a href=&quot;filestoreattributeview&quot;&gt; &lt;code&gt;FileStoreAttributeView&lt;/code&gt; 의&lt;/a&gt; 인터페이스는 파일 저장소 속성에 대한 액세스를 제공합니다. 주어진 유형 의 &lt;code&gt;FileStoreAttributeView&lt;/code&gt; 는&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;../filestore#getFileStoreAttributeView(java.lang.Class)&quot;&gt; &lt;code&gt;FileStore.getFileStoreAttributeView(java.lang.Class&amp;lt;V&amp;gt;)&lt;/code&gt; &lt;/a&gt; 메서드.</target>
        </trans-unit>
        <trans-unit id="98905b6e28df8109ba3188a3fca8b623c82a47e1" translate="yes" xml:space="preserve">
          <source>An attribute view provides a read-only or updatable view of the non-opaque values, or &lt;em&gt;metadata&lt;/em&gt;, associated with objects in a file system. The &lt;a href=&quot;fileattributeview&quot;&gt;&lt;code&gt;FileAttributeView&lt;/code&gt;&lt;/a&gt; interface is extended by several other interfaces that that views to specific sets of file attributes. &lt;code&gt;FileAttributeViews&lt;/code&gt; are selected by invoking the &lt;a href=&quot;../files#getFileAttributeView-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt;&lt;code&gt;Files.getFileAttributeView(java.nio.file.Path, java.lang.Class&amp;lt;V&amp;gt;, java.nio.file.LinkOption...)&lt;/code&gt;&lt;/a&gt; method with a &lt;em&gt;type-token&lt;/em&gt; to identify the required view. Views can also be identified by name. The &lt;a href=&quot;filestoreattributeview&quot;&gt;&lt;code&gt;FileStoreAttributeView&lt;/code&gt;&lt;/a&gt; interface provides access to file store attributes. A &lt;code&gt;FileStoreAttributeView&lt;/code&gt; of a given type is obtained by invoking the &lt;a href=&quot;../filestore#getFileStoreAttributeView-java.lang.Class-&quot;&gt;&lt;code&gt;FileStore.getFileStoreAttributeView(java.lang.Class&amp;lt;V&amp;gt;)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">속성보기는 파일 시스템의 객체와 관련된 불투명하지 않은 값 또는 &lt;em&gt;메타 데이터&lt;/em&gt; 의 읽기 전용 또는 업데이트 가능한보기를 제공합니다 . &lt;a href=&quot;fileattributeview&quot;&gt; &lt;code&gt;FileAttributeView&lt;/code&gt; 의&lt;/a&gt; 인터페이스는 여러 다른 인터페이스에 의해 확장 파일 속성의 특정 세트에 해당하는 인원. &lt;code&gt;FileAttributeViews&lt;/code&gt; 는 필수보기를 식별하기 위해 &lt;em&gt;유형 토큰&lt;/em&gt; 으로 &lt;a href=&quot;../files#getFileAttributeView-java.nio.file.Path-java.lang.Class-java.nio.file.LinkOption...-&quot;&gt; &lt;code&gt;Files.getFileAttributeView(java.nio.file.Path, java.lang.Class&amp;lt;V&amp;gt;, java.nio.file.LinkOption...)&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 선택됩니다 . 뷰는 이름으로 식별 할 수도 있습니다. &lt;a href=&quot;filestoreattributeview&quot;&gt; &lt;code&gt;FileStoreAttributeView&lt;/code&gt; 의&lt;/a&gt; 인터페이스는 파일 저장소 속성에 대한 액세스를 제공합니다. 주어진 유형 의 &lt;code&gt;FileStoreAttributeView&lt;/code&gt; 는&lt;em&gt;&lt;/em&gt;&lt;a href=&quot;../filestore#getFileStoreAttributeView-java.lang.Class-&quot;&gt; &lt;code&gt;FileStore.getFileStoreAttributeView(java.lang.Class&amp;lt;V&amp;gt;)&lt;/code&gt; &lt;/a&gt; 메소드.</target>
        </trans-unit>
        <trans-unit id="2930bb7b14477a29250d830f64bd20a221ca55dc" translate="yes" xml:space="preserve">
          <source>An attribute view that is a read-only or updatable view of non-opaque values associated with a file in a filesystem.</source>
          <target state="translated">파일 시스템의 파일과 연관된 불투명하지 않은 값의 읽기 전용 또는 업데이트 가능한보기 인 속성보기입니다.</target>
        </trans-unit>
        <trans-unit id="c83eda9be05b6815e3caae6bb31b34563a602715" translate="yes" xml:space="preserve">
          <source>An attribute view that is a read-only or updatable view of non-opaque values associated with a file in a filesystem. This interface is extended or implemented by specific file attribute views that define methods to read and/or update the attributes of a file.</source>
          <target state="translated">파일 시스템의 파일과 연관된 불투명하지 않은 값의 읽기 전용 또는 업데이트 가능한보기 인 속성보기입니다. 이 인터페이스는 파일의 속성을 읽고 업데이트하는 방법을 정의하는 특정 파일 속성보기로 확장되거나 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="10f2cc0e36538e551032569affb5d2ad93a7724d" translate="yes" xml:space="preserve">
          <source>An attribute view that is a read-only or updatable view of the attributes of a &lt;a href=&quot;../filestore&quot;&gt;&lt;code&gt;FileStore&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../filestore&quot;&gt; &lt;code&gt;FileStore&lt;/code&gt; &lt;/a&gt; 속성의 읽기 전용 또는 업데이트 가능한보기 인 속성보기입니다 .</target>
        </trans-unit>
        <trans-unit id="065071a9cea28782c8d56a7c04d9729427684e3a" translate="yes" xml:space="preserve">
          <source>An audio input stream is an input stream with a specified audio format and length.</source>
          <target state="translated">오디오 입력 스트림은 지정된 오디오 형식과 길이를 가진 입력 스트림입니다.</target>
        </trans-unit>
        <trans-unit id="3c20d5cd5008578e867d47cb7d115185299d7288" translate="yes" xml:space="preserve">
          <source>An audio input stream is an input stream with a specified audio format and length. The length is expressed in sample frames, not bytes. Several methods are provided for reading a certain number of bytes from the stream, or an unspecified number of bytes. The audio input stream keeps track of the last byte that was read. You can skip over an arbitrary number of bytes to get to a later position for reading. An audio input stream may support marks. When you set a mark, the current position is remembered so that you can return to it later.</source>
          <target state="translated">오디오 입력 스트림은 지정된 오디오 형식과 길이를 가진 입력 스트림입니다. 길이는 바이트가 아닌 샘플 프레임으로 표현됩니다. 스트림에서 특정 바이트 수 또는 지정되지 않은 바이트 수를 읽기위한 몇 가지 방법이 제공됩니다. 오디오 입력 스트림은 마지막으로 읽은 바이트를 추적합니다. 임의의 바이트 수를 건너 뛰어 나중에 읽을 위치로 이동할 수 있습니다. 오디오 입력 스트림은 마크를 지원할 수 있습니다. 마크를 설정하면 나중에 다시 돌아올 수 있도록 현재 위치가 기억됩니다.</target>
        </trans-unit>
        <trans-unit id="06c39e0a3ecdac6aa25ab01536a4ad86d0408020" translate="yes" xml:space="preserve">
          <source>An automatic module.</source>
          <target state="translated">자동 모듈.</target>
        </trans-unit>
        <trans-unit id="7dfb3f289a8fbaaaf1ad8011ca93617e1dc486cb" translate="yes" xml:space="preserve">
          <source>An automatic module. An automatic module is treated as if it exports and opens all packages.</source>
          <target state="translated">자동 모듈. 자동 모듈은 모든 패키지를 내보내고 여는 것처럼 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="8836aae892719c4ebaf0a0b8a2e2558c851b7ed4" translate="yes" xml:space="preserve">
          <source>An autoscrolling gesture is initiated by the user by keeping the drag cursor motionless with a border region of the &lt;code&gt;Component&lt;/code&gt;, referred to as the &quot;autoscrolling region&quot;, for a predefined period of time, this will result in repeated scroll requests to the &lt;code&gt;Component&lt;/code&gt; until the drag &lt;code&gt;Cursor&lt;/code&gt; resumes its motion.</source>
          <target state="translated">자동 스크롤 제스처의 경계 영역으로 끌어서 커서 움직임을 유지하여 사용자에 의해 개시되는 &lt;code&gt;Component&lt;/code&gt; 미리 정의 된 시간주기 동안 상기 &quot;자동 스크롤 영역&quot;이라한다, 이것은 반복적 스크롤 요청 될 것이다 &lt;code&gt;Component&lt;/code&gt; 까지 드래그 &lt;code&gt;Cursor&lt;/code&gt; 는 동작을 재개합니다.</target>
        </trans-unit>
        <trans-unit id="bd26fa2826cb4db9898c13d9a0774a8dcead3a55" translate="yes" xml:space="preserve">
          <source>An easy way to generate a standard table of value labels is by using the &lt;code&gt;createStandardLabels&lt;/code&gt; method.</source>
          <target state="translated">값 레이블의 표준 테이블을 생성하는 쉬운 방법은 &lt;code&gt;createStandardLabels&lt;/code&gt; 메소드 를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="dbd5013ca74eae81657ba680f9f5cb9f6ee5c326" translate="yes" xml:space="preserve">
          <source>An echo character is useful for text fields where user input should not be echoed to the screen, as in the case of a text field for entering a password.</source>
          <target state="translated">에코 문자는 암호를 입력하기위한 텍스트 필드의 경우처럼 사용자 입력이 화면에 에코되지 않아야하는 텍스트 필드에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="41aa0961dfc7c6d82be6441ab89a01f56a0c08d8" translate="yes" xml:space="preserve">
          <source>An echo character is useful for text fields where user input should not be echoed to the screen, as in the case of a text field for entering a password. If &lt;code&gt;echoChar&lt;/code&gt; = &lt;code&gt;0&lt;/code&gt;, user input is echoed to the screen unchanged.</source>
          <target state="translated">에코 문자는 암호를 입력하기위한 텍스트 필드의 경우처럼 사용자 입력이 화면에 에코되지 않아야하는 텍스트 필드에 유용합니다. 경우 &lt;code&gt;echoChar&lt;/code&gt; 가 = &lt;code&gt;0&lt;/code&gt; , 사용자 입력이 그대로 화면에 표시한다.</target>
        </trans-unit>
        <trans-unit id="9d40d907bdd9c20dfbecde0eb3fe87e05bf5f82c" translate="yes" xml:space="preserve">
          <source>An echo character is useful for text fields where user input should not be echoed to the screen, as in the case of a text field for entering a password. Setting &lt;code&gt;echoChar&lt;/code&gt; = &lt;code&gt;0&lt;/code&gt; allows user input to be echoed to the screen again.</source>
          <target state="translated">에코 문자는 암호를 입력하기위한 텍스트 필드의 경우처럼 사용자 입력이 화면에 에코되지 않아야하는 텍스트 필드에 유용합니다. &lt;code&gt;echoChar&lt;/code&gt; = &lt;code&gt;0&lt;/code&gt; 으로 설정 하면 사용자 입력이 화면에 다시 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="24b8945618f8007b9d2cb008aa6fc7bbd6a390e1" translate="yes" xml:space="preserve">
          <source>An editor for a &lt;code&gt;JSpinner&lt;/code&gt; whose model is a &lt;code&gt;SpinnerDateModel&lt;/code&gt;.</source>
          <target state="translated">모델이 &lt;code&gt;SpinnerDateModel&lt;/code&gt; 인 &lt;code&gt;JSpinner&lt;/code&gt; 의 편집기입니다 .</target>
        </trans-unit>
        <trans-unit id="68fcdbaf56f0fb0909a9ce6c710ff65d5bc00e09" translate="yes" xml:space="preserve">
          <source>An editor for a &lt;code&gt;JSpinner&lt;/code&gt; whose model is a &lt;code&gt;SpinnerDateModel&lt;/code&gt;. The value of the editor is displayed with a &lt;code&gt;JFormattedTextField&lt;/code&gt; whose format is defined by a &lt;code&gt;DateFormatter&lt;/code&gt; instance whose &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt; properties are mapped to the &lt;code&gt;SpinnerDateModel&lt;/code&gt;.</source>
          <target state="translated">모델이 &lt;code&gt;SpinnerDateModel&lt;/code&gt; 인 &lt;code&gt;JSpinner&lt;/code&gt; 의 편집기입니다 . 편집기의 값은 &lt;code&gt;minimum&lt;/code&gt; 및 &lt;code&gt;maximum&lt;/code&gt; 속성이 &lt;code&gt;SpinnerDateModel&lt;/code&gt; 에 매핑 된 &lt;code&gt;DateFormatter&lt;/code&gt; 인스턴스에 의해 형식이 정의 된 &lt;code&gt;JFormattedTextField&lt;/code&gt; 와 함께 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="81fce0442d54d10f53bfea4053079d54c53d6701" translate="yes" xml:space="preserve">
          <source>An editor for a &lt;code&gt;JSpinner&lt;/code&gt; whose model is a &lt;code&gt;SpinnerListModel&lt;/code&gt;.</source>
          <target state="translated">모델이 &lt;code&gt;SpinnerListModel&lt;/code&gt; 인 &lt;code&gt;JSpinner&lt;/code&gt; 의 편집기입니다 .</target>
        </trans-unit>
        <trans-unit id="df3dfd2ca3b5a20d1d0a38c27a6622e486abc1a6" translate="yes" xml:space="preserve">
          <source>An editor for a &lt;code&gt;JSpinner&lt;/code&gt; whose model is a &lt;code&gt;SpinnerNumberModel&lt;/code&gt;.</source>
          <target state="translated">모델이 &lt;code&gt;SpinnerNumberModel&lt;/code&gt; 인 &lt;code&gt;JSpinner&lt;/code&gt; 의 편집기입니다 .</target>
        </trans-unit>
        <trans-unit id="b96c32afde7e6b95f0fc2643bf92cd3dadd15e1d" translate="yes" xml:space="preserve">
          <source>An editor for a &lt;code&gt;JSpinner&lt;/code&gt; whose model is a &lt;code&gt;SpinnerNumberModel&lt;/code&gt;. The value of the editor is displayed with a &lt;code&gt;JFormattedTextField&lt;/code&gt; whose format is defined by a &lt;code&gt;NumberFormatter&lt;/code&gt; instance whose &lt;code&gt;minimum&lt;/code&gt; and &lt;code&gt;maximum&lt;/code&gt; properties are mapped to the &lt;code&gt;SpinnerNumberModel&lt;/code&gt;.</source>
          <target state="translated">모델이 &lt;code&gt;SpinnerNumberModel&lt;/code&gt; 인 &lt;code&gt;JSpinner&lt;/code&gt; 의 편집기입니다 . 편집기의 값은 &lt;code&gt;minimum&lt;/code&gt; 및 &lt;code&gt;maximum&lt;/code&gt; 속성이 &lt;code&gt;SpinnerNumberModel&lt;/code&gt; 에 매핑 된 &lt;code&gt;NumberFormatter&lt;/code&gt; 인스턴스에 의해 형식이 정의 된 &lt;code&gt;JFormattedTextField&lt;/code&gt; 와 함께 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="9001907d31c670e08850b8d941b22960419a094a" translate="yes" xml:space="preserve">
          <source>An editor object for the given target class. The result is null if no suitable editor can be found.</source>
          <target state="translated">지정된 대상 클래스의 편집기 객체입니다. 적합한 편집기를 찾을 수 없으면 결과는 null입니다.</target>
        </trans-unit>
        <trans-unit id="88bdbf99dcd7e408b31aca6471895aa11df7efc5" translate="yes" xml:space="preserve">
          <source>An element as described in a DTD using the ELEMENT construct.</source>
          <target state="translated">ELEMENT 구문을 사용하는 DTD에 설명 된 요소입니다.</target>
        </trans-unit>
        <trans-unit id="144fc4aa920e341513adc97921bdfa3557dc2599" translate="yes" xml:space="preserve">
          <source>An element as described in a DTD using the ELEMENT construct. This is essential the description of a tag. It describes the type, content model, attributes, attribute types etc. It is used to correctly parse a document by the Parser.</source>
          <target state="translated">ELEMENT 구문을 사용하는 DTD에 설명 된 요소입니다. 이것은 태그의 설명에 필수적입니다. 유형, 콘텐츠 모델, 속성, 속성 유형 등을 설명합니다. 파서가 문서를 올바르게 구문 분석하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2b292ce81d8a9408c96fc9abb5bfeb1b867cf4e7" translate="yes" xml:space="preserve">
          <source>An element in a stack trace, as returned by &lt;a href=&quot;throwable#getStackTrace()&quot;&gt;&lt;code&gt;Throwable.getStackTrace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;throwable#getStackTrace()&quot;&gt; &lt;code&gt;Throwable.getStackTrace()&lt;/code&gt; &lt;/a&gt; 의해 반환 된 스택 추적의 요소입니다 .</target>
        </trans-unit>
        <trans-unit id="5684367e1c9c61149137f3586d8adb27e2dbce7e" translate="yes" xml:space="preserve">
          <source>An element in a stack trace, as returned by &lt;a href=&quot;throwable#getStackTrace()&quot;&gt;&lt;code&gt;Throwable.getStackTrace()&lt;/code&gt;&lt;/a&gt;. Each element represents a single stack frame. All stack frames except for the one at the top of the stack represent a method invocation. The frame at the top of the stack represents the execution point at which the stack trace was generated. Typically, this is the point at which the throwable corresponding to the stack trace was created.</source>
          <target state="translated">&lt;a href=&quot;throwable#getStackTrace()&quot;&gt; &lt;code&gt;Throwable.getStackTrace()&lt;/code&gt; &lt;/a&gt; 의해 반환 된 스택 추적의 요소입니다 . 각 요소는 단일 스택 프레임을 나타냅니다. 스택 맨 위에있는 프레임을 제외한 모든 스택 프레임은 메서드 호출을 나타냅니다. 스택 맨 위에있는 프레임은 스택 추적이 생성 된 실행 지점을 나타냅니다. 일반적으로 스택 추적에 해당하는 throwable이 생성 된 지점입니다.</target>
        </trans-unit>
        <trans-unit id="7b4adaaf349e9a6d56f2419e9fc23094b38e3205" translate="yes" xml:space="preserve">
          <source>An element in a stack trace, as returned by &lt;a href=&quot;throwable#getStackTrace--&quot;&gt;&lt;code&gt;Throwable.getStackTrace()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;throwable#getStackTrace--&quot;&gt; &lt;code&gt;Throwable.getStackTrace()&lt;/code&gt; &lt;/a&gt; 의해 반환되는 스택 트레이스의 요소입니다 .</target>
        </trans-unit>
        <trans-unit id="2aeaf37346a0119e0a2542e610c09c1631725bf7" translate="yes" xml:space="preserve">
          <source>An element in a stack trace, as returned by &lt;a href=&quot;throwable#getStackTrace--&quot;&gt;&lt;code&gt;Throwable.getStackTrace()&lt;/code&gt;&lt;/a&gt;. Each element represents a single stack frame. All stack frames except for the one at the top of the stack represent a method invocation. The frame at the top of the stack represents the execution point at which the stack trace was generated. Typically, this is the point at which the throwable corresponding to the stack trace was created.</source>
          <target state="translated">&lt;a href=&quot;throwable#getStackTrace--&quot;&gt; &lt;code&gt;Throwable.getStackTrace()&lt;/code&gt; &lt;/a&gt; 의해 반환되는 스택 트레이스의 요소입니다 . 각 요소는 단일 스택 프레임을 나타냅니다. 스택 맨 위에있는 것을 제외한 모든 스택 프레임은 메소드 호출을 나타냅니다. 스택 상단의 프레임은 스택 추적이 생성 된 실행 지점을 나타냅니다. 일반적으로 스택 추적에 해당하는 던지기 가능 지점이 생성 된 지점입니다.</target>
        </trans-unit>
        <trans-unit id="8e94c1f89829df386e800f1b8f3a57ff70ec5de7" translate="yes" xml:space="preserve">
          <source>An element is considered to be &lt;em&gt;included&lt;/em&gt;, if it is &lt;em&gt;specified&lt;/em&gt; if it contains a &lt;em&gt;specified&lt;/em&gt; element, or it is enclosed in a &lt;em&gt;specified&lt;/em&gt; element, and is &lt;em&gt;selected&lt;/em&gt;. Included elements will be documented.</source>
          <target state="translated">요소가되는 것으로 간주된다 &lt;em&gt;포함&lt;/em&gt; 이된다면, &lt;em&gt;특정&lt;/em&gt; 그것이 포함되어있는 경우 &lt;em&gt;, 지정된&lt;/em&gt; 요소 또는 그것이 표로 &lt;em&gt;지정된&lt;/em&gt; 소자, 및 &lt;em&gt;선택&lt;/em&gt; . 포함 된 요소는 문서화됩니다.</target>
        </trans-unit>
        <trans-unit id="7f4fea0e6d4ae84d22376237789c7f5c5d9f98a8" translate="yes" xml:space="preserve">
          <source>An element is considered to be &lt;em&gt;selected&lt;/em&gt;, if the &lt;em&gt;selection controls&lt;/em&gt;&lt;a href=&quot;#options&quot;&gt;allow&lt;/a&gt; it to be documented. (Note that synthetic elements are never selected.)</source>
          <target state="translated">&lt;em&gt;선택 컨트롤에서&lt;/em&gt; 문서화 &lt;a href=&quot;#options&quot;&gt;할 수있는&lt;/a&gt; 경우 요소가 &lt;em&gt;선택된&lt;/em&gt; 것으로 간주됩니다 . (합성 요소는 선택되지 않습니다.)&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="43a24b28f66c97305f44ba62155cf8a85d2572cf" translate="yes" xml:space="preserve">
          <source>An element that represents a chunk of text that has a set of HTML character level attributes assigned to it.</source>
          <target state="translated">HTML 문자 레벨 속성 세트가 할당 된 텍스트 청크를 나타내는 요소입니다.</target>
        </trans-unit>
        <trans-unit id="453924090bdb4081544da5437d394b79482dc6d4" translate="yes" xml:space="preserve">
          <source>An element that represents a structural &lt;em&gt;block&lt;/em&gt; of HTML.</source>
          <target state="translated">HTML 의 구조적 &lt;em&gt;블록&lt;/em&gt; 을 나타내는 요소입니다 .</target>
        </trans-unit>
        <trans-unit id="da53c2afe9d29f7ac52f55e2e41f3d5ec4d87dfe" translate="yes" xml:space="preserve">
          <source>An elliptic curve point used to specify keys as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc8032&quot;&gt;RFC 8032: Edwards-Curve Digital Signature Algorithm (EdDSA)&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc8032&quot;&gt;RFC 8032 : Edwards-Curve Digital Signature Algorithm (EdDSA)에&lt;/a&gt; 정의 된 대로 키를 지정하는 데 사용되는 타원 곡선 점 입니다.</target>
        </trans-unit>
        <trans-unit id="f790a13c4ea4ce27e247ed4d79e94a0205ecaf63" translate="yes" xml:space="preserve">
          <source>An elliptic curve point used to specify keys as defined by &lt;a href=&quot;https://tools.ietf.org/html/rfc8032&quot;&gt;RFC 8032: Edwards-Curve Digital Signature Algorithm (EdDSA)&lt;/a&gt;. These points are distinct from the points represented by &lt;code&gt;ECPoint&lt;/code&gt;, and they are intended for use with algorithms based on RFC 8032 such as the EdDSA &lt;code&gt;Signature&lt;/code&gt; algorithm.</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/html/rfc8032&quot;&gt;RFC 8032 : Edwards-Curve Digital Signature Algorithm (EdDSA)에&lt;/a&gt; 정의 된 대로 키를 지정하는 데 사용되는 타원 곡선 점 입니다. 이러한 포인트는 &lt;code&gt;ECPoint&lt;/code&gt; 로 표시되는 포인트와 구별되며 EdDSA &lt;code&gt;Signature&lt;/code&gt; 알고리즘 과 같은 RFC 8032 기반 알고리즘과 함께 사용하기위한 것입니다 .</target>
        </trans-unit>
        <trans-unit id="36251f14199865fd6142735cdb22e4b1c9956080" translate="yes" xml:space="preserve">
          <source>An embedded HTML comment.</source>
          <target state="translated">포함 된 HTML 주석입니다.</target>
        </trans-unit>
        <trans-unit id="5a8b1a95f4cec63f7a2632118dfafeb65a886af9" translate="yes" xml:space="preserve">
          <source>An embedded Java applet.</source>
          <target state="translated">임베디드 Java 애플릿.</target>
        </trans-unit>
        <trans-unit id="a4fc1c5e4ad857de7df3a1fee0ca69e147a501b4" translate="yes" xml:space="preserve">
          <source>An embedded Java applet. See the APPLET element definition in HTML 4.0. This element is deprecated in HTML 4.0.</source>
          <target state="translated">임베디드 Java 애플릿. HTML 4.0의 APPLET 요소 정의를 참조하십시오. 이 요소는 HTML 4.0에서 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="71ebad9a9a6d79c85ea83a3bdef46283c11916de" translate="yes" xml:space="preserve">
          <source>An empty &lt;code&gt;Border&lt;/code&gt;.</source>
          <target state="translated">빈 &lt;code&gt;Border&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b906be3cc60517d579d23a464876e7618d348aea" translate="yes" xml:space="preserve">
          <source>An empty &lt;code&gt;Border&lt;/code&gt;. This field might not be used. To change the &lt;code&gt;Border&lt;/code&gt; used by this renderer directly set it using the &lt;code&gt;setBorder&lt;/code&gt; method.</source>
          <target state="translated">빈 &lt;code&gt;Border&lt;/code&gt; . 이 필드는 사용되지 않을 수 있습니다. 이 렌더러에서 사용 하는 &lt;code&gt;Border&lt;/code&gt; 를 변경하려면 &lt;code&gt;setBorder&lt;/code&gt; 메서드를 사용하여 직접 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="2dc511c7d6d460e0a652766b02ebf90d4dcba461" translate="yes" xml:space="preserve">
          <source>An empty &lt;code&gt;Name&lt;/code&gt; has a length of zero.</source>
          <target state="translated">빈 &lt;code&gt;Name&lt;/code&gt; 의 길이는 0입니다.</target>
        </trans-unit>
        <trans-unit id="4fc9ba941abb5d032d2eac1f86606435bcf75d2d" translate="yes" xml:space="preserve">
          <source>An empty &lt;code&gt;Source&lt;/code&gt; is represented as an empty document as constructed by &lt;a href=&quot;../parsers/documentbuilder#newDocument()&quot;&gt;&lt;code&gt;DocumentBuilder.newDocument()&lt;/code&gt;&lt;/a&gt;. The result of transforming an empty &lt;code&gt;Source&lt;/code&gt; depends on the transformation behavior; it is not always an empty &lt;code&gt;Result&lt;/code&gt;.</source>
          <target state="translated">빈 &lt;code&gt;Source&lt;/code&gt; 는 &lt;a href=&quot;../parsers/documentbuilder#newDocument()&quot;&gt; &lt;code&gt;DocumentBuilder.newDocument()&lt;/code&gt; &lt;/a&gt; 의해 생성 된 빈 문서로 표시됩니다 . 빈 &lt;code&gt;Source&lt;/code&gt; 를 변환 한 결과 는 변환 동작에 따라 다릅니다. 항상 빈 &lt;code&gt;Result&lt;/code&gt; 는 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="cea9ce6b1a02f422fcbd03d9b2405439a788304a" translate="yes" xml:space="preserve">
          <source>An empty array is returned if the row count is &lt;code&gt;0&lt;/code&gt;, or the specified indices do not bound the viewable set of rows.</source>
          <target state="translated">행 개수가 &lt;code&gt;0&lt;/code&gt; 이거나 지정된 인덱스가보기 가능한 행 집합을 바인딩하지 않으면 빈 배열이 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="e8f2424473c2673fa0e87d78459db7d99bfa8988" translate="yes" xml:space="preserve">
          <source>An empty attribute set.</source>
          <target state="translated">빈 속성 세트.</target>
        </trans-unit>
        <trans-unit id="f72c63c44cf51008dc34fdff857ba1e4747a5a58" translate="yes" xml:space="preserve">
          <source>An empty authority component is permitted as long as it is followed by a non-empty path, a query component, or a fragment component. This allows the parsing of URIs such as &lt;code&gt;&quot;file:///foo/bar&quot;&lt;/code&gt;, which seems to be the intent of RFC 2396 although the grammar does not permit it. If the authority component is empty then the user-information, host, and port components are undefined.</source>
          <target state="translated">비어 있지 않은 경로, 쿼리 구성 요소 또는 조각 구성 요소가 뒤에 오는 한 빈 권한 구성 요소가 허용됩니다. 이것은 문법이 허용하지 않지만 RFC 2396의 의도 인 것처럼 보이는 &lt;code&gt;&quot;file:///foo/bar&quot;&lt;/code&gt; 와 같은 URI의 구문 분석을 허용합니다. 권한 구성 요소가 비어 있으면 사용자 정보, 호스트 및 포트 구성 요소가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="76e9988ec9a98212c722ef5ad81617f6f164744c" translate="yes" xml:space="preserve">
          <source>An empty border UI resource.</source>
          <target state="translated">빈 테두리 UI 리소스입니다.</target>
        </trans-unit>
        <trans-unit id="095b2341fc7146f8e2b77cf6f642d431966ac361" translate="yes" xml:space="preserve">
          <source>An empty copy of this &lt;code&gt;CachedRowSet&lt;/code&gt; object</source>
          <target state="translated">이 &lt;code&gt;CachedRowSet&lt;/code&gt; 객체 의 빈 복사본</target>
        </trans-unit>
        <trans-unit id="601abb570af5aeb2e85519d110e87efe802695f6" translate="yes" xml:space="preserve">
          <source>An empty descriptor.</source>
          <target state="translated">빈 설명자</target>
        </trans-unit>
        <trans-unit id="5f51af07fd2f1e8cc0095411f511c255ffd87b92" translate="yes" xml:space="preserve">
          <source>An empty enum set of the specified type.</source>
          <target state="translated">지정된 형식의 빈 열거 형 집합입니다.</target>
        </trans-unit>
        <trans-unit id="68fac0fb1876bca863fc1991f3055e5e0303f20d" translate="yes" xml:space="preserve">
          <source>An empty implementation of the &lt;code&gt;MouseInputListener&lt;/code&gt; interface, provided as a convenience to simplify the task of creating listeners, by extending and implementing only the methods of interest.</source>
          <target state="translated">관심있는 메서드 만 확장하고 구현하여 리스너 생성 작업을 단순화하기위한 편의를 위해 제공된 &lt;code&gt;MouseInputListener&lt;/code&gt; 인터페이스 의 빈 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="5f57f1d70904e5f0a8684400e969438b1a147a2f" translate="yes" xml:space="preserve">
          <source>An empty implementation of the &lt;code&gt;MouseInputListener&lt;/code&gt; interface, provided as a convenience to simplify the task of creating listeners, by extending and implementing only the methods of interest. This class also provides an empty implementation of the &lt;code&gt;MouseWheelListener&lt;/code&gt; interface, through its extension from AWT's &lt;code&gt;MouseAdapter&lt;/code&gt;.</source>
          <target state="translated">관심있는 메서드 만 확장하고 구현하여 리스너 생성 작업을 단순화하기위한 편의를 위해 제공된 &lt;code&gt;MouseInputListener&lt;/code&gt; 인터페이스 의 빈 구현입니다 . 이 클래스는 AWT의 &lt;code&gt;MouseAdapter&lt;/code&gt; 확장을 통해 &lt;code&gt;MouseWheelListener&lt;/code&gt; 인터페이스 의 빈 구현도 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="0968569069cf5a928470c665aa5fc5722e191e13" translate="yes" xml:space="preserve">
          <source>An empty input.</source>
          <target state="translated">빈 입력.</target>
        </trans-unit>
        <trans-unit id="79214eddbe8ac48d7e4740156ef9beed27042522" translate="yes" xml:space="preserve">
          <source>An empty input. The input is considered incomplete. Comments and white-space are still considered empty.</source>
          <target state="translated">빈 입력. 입력이 불완전한 것으로 간주됩니다. 주석과 공백은 여전히 ​​비어있는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="d9f588e1348b4e6edb1faa7f2109de7f3c2edf31" translate="yes" xml:space="preserve">
          <source>An empty spliterator</source>
          <target state="translated">빈 스플리터</target>
        </trans-unit>
        <trans-unit id="4d73da5ad1deda746a52ab36e48c105b4e108c39" translate="yes" xml:space="preserve">
          <source>An encapsulation of option name, aliases, parameters and descriptions as used by the Doclet.</source>
          <target state="translated">Doclet에서 사용하는 옵션 이름, 별칭, 매개 변수 및 설명의 캡슐화입니다.</target>
        </trans-unit>
        <trans-unit id="d1999014eee90b29a9e9069792c7b68fbd921276" translate="yes" xml:space="preserve">
          <source>An encapsulation of the result state produced by &lt;code&gt;SSLEngine&lt;/code&gt; I/O calls.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; I / O 호출로 생성 된 결과 상태를 캡슐화 합니다.</target>
        </trans-unit>
        <trans-unit id="19d926004613f135c414bfd53577c34083efe32a" translate="yes" xml:space="preserve">
          <source>An endpoint is a &lt;code&gt;String&lt;/code&gt; representation of an LDAP URL which points to an LDAP server to be used for LDAP operations. The syntax of an LDAP URL is defined by &lt;a href=&quot;https://www.ietf.org/rfc/rfc2255.txt&quot;&gt; &lt;i&gt;RFC 2255: The LDAP URL Format&lt;/i&gt;&lt;/a&gt;.</source>
          <target state="translated">끝점은 LDAP 작업에 사용할 LDAP 서버를 가리키는 LDAP URL 의 &lt;code&gt;String&lt;/code&gt; 표현입니다. LDAP URL의 구문은 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2255.txt&quot;&gt;&lt;i&gt;RFC 2255 : The LDAP URL Format에&lt;/i&gt;&lt;/a&gt; 의해 정의됩니다 . &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="0b5fb5adb98ff53ab0b22026150efd1300b16db6" translate="yes" xml:space="preserve">
          <source>An engine that can transform a sequence of bytes in a specific charset into a sequence of sixteen-bit Unicode characters.</source>
          <target state="translated">특정 문자 집합의 바이트 시퀀스를 16 비트 유니 코드 문자 시퀀스로 변환 할 수있는 엔진입니다.</target>
        </trans-unit>
        <trans-unit id="601670f3715d20387b85d02a07415902a33cf14e" translate="yes" xml:space="preserve">
          <source>An engine that can transform a sequence of sixteen-bit Unicode characters into a sequence of bytes in a specific charset.</source>
          <target state="translated">16 비트 유니 코드 문자 시퀀스를 특정 문자 집합의 바이트 시퀀스로 변환 할 수있는 엔진.</target>
        </trans-unit>
        <trans-unit id="53fd123c4636a6a5e1914f5a8d86c760c4b83c3d" translate="yes" xml:space="preserve">
          <source>An engine that performs match operations on a &lt;a href=&quot;../../lang/charsequence&quot;&gt;character sequence&lt;/a&gt; by interpreting a &lt;a href=&quot;pattern&quot;&gt;&lt;code&gt;Pattern&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;pattern&quot;&gt; &lt;code&gt;Pattern&lt;/code&gt; &lt;/a&gt; 을 해석하여 &lt;a href=&quot;../../lang/charsequence&quot;&gt;문자 시퀀스&lt;/a&gt; 에서 일치 작업을 수행하는 엔진입니다 .</target>
        </trans-unit>
        <trans-unit id="91c43c4cf223cc700bdc4ee248611a2f1fbc3732" translate="yes" xml:space="preserve">
          <source>An engine's client authentication setting is one of the following:</source>
          <target state="translated">엔진의 클라이언트 인증 설정은 다음 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="1f39442318b1b9d1f45f562d49f94d8b6f6a201a" translate="yes" xml:space="preserve">
          <source>An entity declared within a user defined type (class or interface).</source>
          <target state="translated">사용자 정의 유형 (클래스 또는 인터페이스) 내에서 선언 된 엔티티입니다.</target>
        </trans-unit>
        <trans-unit id="adea1826e9a94c8516cd1614ae95b15401701bd1" translate="yes" xml:space="preserve">
          <source>An entity declared within a user defined type (class or interface). This interface is the root of the type component hierarchy which includes &lt;a href=&quot;field&quot;&gt;&lt;code&gt;Field&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;method&quot;&gt;&lt;code&gt;Method&lt;/code&gt;&lt;/a&gt;. Type components of the same name declared in different classes (including those related by inheritance) have different TypeComponent objects. TypeComponents can be used alone to retrieve static information about their declaration, or can be used in conjunction with a &lt;a href=&quot;referencetype&quot;&gt;&lt;code&gt;ReferenceType&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;objectreference&quot;&gt;&lt;code&gt;ObjectReference&lt;/code&gt;&lt;/a&gt; to access values or invoke, as applicable.</source>
          <target state="translated">사용자 정의 유형 (클래스 또는 인터페이스) 내에서 선언 된 엔티티입니다. 이 인터페이스는 &lt;a href=&quot;field&quot;&gt; &lt;code&gt;Field&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;method&quot;&gt; &lt;code&gt;Method&lt;/code&gt; &lt;/a&gt; 를 포함하는 유형 구성 요소 계층의 루트입니다 . 다른 클래스 (상속으로 관련된 것을 포함하여)에서 선언 된 동일한 이름의 유형 구성 요소는 서로 다른 TypeComponent 개체를 갖습니다. TypeComponents는 선언에 대한 정적 정보를 검색하는 데 단독으로 사용하거나 해당되는 경우 &lt;a href=&quot;referencetype&quot;&gt; &lt;code&gt;ReferenceType&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;objectreference&quot;&gt; &lt;code&gt;ObjectReference&lt;/code&gt; &lt;/a&gt; 와 함께 사용하여 값에 액세스하거나 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef1feab55d5da0b9fd2ae2955fe5269dd29dba14" translate="yes" xml:space="preserve">
          <source>An entity is described in a DTD using the ENTITY construct.</source>
          <target state="translated">엔티티는 ENTITY 구성을 사용하여 DTD에 설명됩니다.</target>
        </trans-unit>
        <trans-unit id="50f4d33c0ee3296304821c02c9be62f8111075a3" translate="yes" xml:space="preserve">
          <source>An entity is described in a DTD using the ENTITY construct. It defines the type and value of the entity.</source>
          <target state="translated">엔티티는 ENTITY 구문을 사용하여 DTD에 설명됩니다. 엔티티의 유형과 값을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="34db365d2e44d00d9a5c58f1a54bf2c51fcfcc55" translate="yes" xml:space="preserve">
          <source>An entity that has a field type descriptor.</source>
          <target state="translated">필드 유형 설명자가있는 엔티티입니다.</target>
        </trans-unit>
        <trans-unit id="44a80733046bda2af299bda4f0d13cf67f451791" translate="yes" xml:space="preserve">
          <source>An entity that has a field type descriptor. Field descriptors conforming to JVMS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.3.2&quot;&gt;4.3.2&lt;/a&gt; can be described nominally via &lt;a href=&quot;../class#describeConstable()&quot;&gt;&lt;code&gt;Class::describeConstable&lt;/code&gt;&lt;/a&gt;; otherwise they cannot be described nominally.</source>
          <target state="translated">필드 유형 설명자가있는 엔티티입니다. JVMS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.3.2&quot;&gt;4.3.2를&lt;/a&gt; 준수하는 필드 디스크립터 는 &lt;a href=&quot;../class#describeConstable()&quot;&gt; &lt;code&gt;Class::describeConstable&lt;/code&gt; &lt;/a&gt; 통해 명목상 설명 할 수 있습니다 . 그렇지 않으면 명목상으로 설명 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9b98bd0c0857bdf7fb81b58654dbf735b7622a5c" translate="yes" xml:space="preserve">
          <source>An entity that has a method type descriptor Method descriptors conforming to JVMS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.3.3&quot;&gt;4.3.3&lt;/a&gt; can be described nominally via &lt;a href=&quot;methodtype#describeConstable()&quot;&gt;&lt;code&gt;MethodType::describeConstable&lt;/code&gt;&lt;/a&gt;; otherwise they cannot be described nominally.</source>
          <target state="translated">메소드 유형 설명자가있는 엔티티 JVMS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-4.html#jls-4.3.3&quot;&gt;4.3.3을&lt;/a&gt; 준수하는 메소드 설명 &lt;a href=&quot;methodtype#describeConstable()&quot;&gt; &lt;code&gt;MethodType::describeConstable&lt;/code&gt; &lt;/a&gt; 통해 명목상 설명 할 수 있습니다 . 그렇지 않으면 명목상으로 설명 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="7a1a5110f85ca66fc8eb444a85a26c6cd622be99" translate="yes" xml:space="preserve">
          <source>An entity that has a type descriptor.</source>
          <target state="translated">유형 설명자가있는 엔티티입니다.</target>
        </trans-unit>
        <trans-unit id="dc54b5ec8f2ff867547e4902f8d04acc1615fdf4" translate="yes" xml:space="preserve">
          <source>An entry in an access control list (ACL).</source>
          <target state="translated">ACL (액세스 제어 목록)의 항목</target>
        </trans-unit>
        <trans-unit id="8741bc095e1c76bba768f979075d8eab2c72883d" translate="yes" xml:space="preserve">
          <source>An entry is added to &lt;code&gt;table&lt;/code&gt; for each of the &lt;code&gt;name-color&lt;/code&gt; pairs in &lt;code&gt;systemColors&lt;/code&gt;. The entry key is the &lt;code&gt;name&lt;/code&gt; of the &lt;code&gt;name-color&lt;/code&gt; pair.</source>
          <target state="translated">&lt;code&gt;systemColors&lt;/code&gt; 의 각 &lt;code&gt;name-color&lt;/code&gt; 쌍에 대한 항목이 &lt;code&gt;table&lt;/code&gt; 에 추가됩니다 . 항목의 키입니다 &lt;code&gt;name&lt;/code&gt; 의 &lt;code&gt;name-color&lt;/code&gt; 쌍.</target>
        </trans-unit>
        <trans-unit id="c102da04921e3d086db5e5398bc9772d0da5484e" translate="yes" xml:space="preserve">
          <source>An enum constant.</source>
          <target state="translated">열거 형 상수.</target>
        </trans-unit>
        <trans-unit id="37c2e971e53a5086377f9cb8eb41fa06b2e44984" translate="yes" xml:space="preserve">
          <source>An enum declaration.</source>
          <target state="translated">열거 형 선언.</target>
        </trans-unit>
        <trans-unit id="160694dc98de77a9f7dc4494c0f0ef10ce4eb33c" translate="yes" xml:space="preserve">
          <source>An enum declaration. A &lt;code&gt;SubKind&lt;/code&gt; of &lt;a href=&quot;snippet.kind#TYPE_DECL&quot;&gt;&lt;code&gt;Snippet.Kind.TYPE_DECL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">열거 형 선언. A는 &lt;code&gt;SubKind&lt;/code&gt; 의 &lt;a href=&quot;snippet.kind#TYPE_DECL&quot;&gt; &lt;code&gt;Snippet.Kind.TYPE_DECL&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="80c93847e6f20f4e14d799783360509535c0ce8d" translate="yes" xml:space="preserve">
          <source>An enum set containing all the elements in the specified type.</source>
          <target state="translated">지정된 형식의 모든 요소를 ​​포함하는 열거 집합입니다.</target>
        </trans-unit>
        <trans-unit id="4bce9a83b482251b2f473409d159c9a2669708e0" translate="yes" xml:space="preserve">
          <source>An enum set initialized from the given collection.</source>
          <target state="translated">주어진 컬렉션에서 열거 된 열거 집합입니다.</target>
        </trans-unit>
        <trans-unit id="d356106b14fd8afd2c1e7ef6c8ff2ade51eb6a8e" translate="yes" xml:space="preserve">
          <source>An enum type.</source>
          <target state="translated">열거 형입니다.</target>
        </trans-unit>
        <trans-unit id="19d4879fdd9884be95a7abfe28f6df1dd96e2fb0" translate="yes" xml:space="preserve">
          <source>An enumeration &lt;em&gt;E&lt;/em&gt;</source>
          <target state="translated">열거 형 &lt;em&gt;E&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7589ba0898ba3e956a397cd45699cb51b23be578" translate="yes" xml:space="preserve">
          <source>An enumeration of &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; objects for the resource. If no resources could be found, the enumeration will be empty. Resources that the class loader doesn't have access to will not be in the enumeration.</source>
          <target state="translated">리소스에 대한 &lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 객체 의 열거입니다 . 리소스를 찾을 수 없으면 열거가 비어 있습니다. 클래스 로더가 액세스 할 수없는 자원은 열거에 없습니다.</target>
        </trans-unit>
        <trans-unit id="e9e9197121ea9b8184b303ebe921bf469eb207cb" translate="yes" xml:space="preserve">
          <source>An enumeration of &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; objects for the resources</source>
          <target state="translated">자원에 대한 &lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 객체 의 열거</target>
        </trans-unit>
        <trans-unit id="aad72f9f8c9e29afe8f716b262c4919a5a3c448d" translate="yes" xml:space="preserve">
          <source>An enumeration of &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/a&gt; objects for the resource. If no resources could be found, the enumeration will be empty. Resources for which a &lt;code&gt;URL&lt;/code&gt; cannot be constructed, are in a package that is not opened unconditionally, or access to the resource is denied by the security manager, are not returned in the enumeration.</source>
          <target state="translated">리소스에 대한 &lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;URL&lt;/code&gt; &lt;/a&gt; 개체 의 열거 형입니다 . 리소스를 찾을 수 없으면 열거가 비어 있습니다. 하는 자원 &lt;code&gt;URL&lt;/code&gt; 을 구성 할 수없는이, 보안 관리자에 의해 무조건 개방되지 않았거나 자원에 대한 액세스가 거부 된 패키지에, 열거 반환되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c4aa7c7e628d57532a1c1360001ee6ef0f7ef010" translate="yes" xml:space="preserve">
          <source>An enumeration of URL to the resource. If no resources could be found, the enumeration will be empty. Resources that cannot be accessed will not be in the enumeration.</source>
          <target state="translated">리소스에 대한 URL 열거. 리소스를 찾을 수 없으면 열거가 비어 있습니다. 액세스 할 수없는 리소스는 열거 형에 없습니다.</target>
        </trans-unit>
        <trans-unit id="972c3ecf0f6d294560645ad0152e0b96dfe86d5d" translate="yes" xml:space="preserve">
          <source>An enumeration of all prefixes declared in this context.</source>
          <target state="translated">이 컨텍스트에서 선언 된 모든 접두사의 열거 형입니다.</target>
        </trans-unit>
        <trans-unit id="c7c82bf812c482004d1f9302f36864a703f8a452" translate="yes" xml:space="preserve">
          <source>An enumeration of cryptographic primitives.</source>
          <target state="translated">암호화 프리미티브의 열거.</target>
        </trans-unit>
        <trans-unit id="3c599ebb10cb28e1d50286b7d6b5285431d25dc4" translate="yes" xml:space="preserve">
          <source>An enumeration of prefixes (never empty).</source>
          <target state="translated">접두사의 열거 (비어 있지 않음).</target>
        </trans-unit>
        <trans-unit id="beb61a541e74ed1490f0ce4684e113edb340aa12" translate="yes" xml:space="preserve">
          <source>An enumeration of resource &lt;a href=&quot;../net/url&quot;&gt;&lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; objects</source>
          <target state="translated">리소스 &lt;a href=&quot;../net/url&quot;&gt; &lt;code&gt;&lt;code&gt;URL&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 객체 의 열거</target>
        </trans-unit>
        <trans-unit id="2d50fd766cc593813b72ce2f788ac3ff6216b88d" translate="yes" xml:space="preserve">
          <source>An enumeration of standard namespaces defined by Dynalink.</source>
          <target state="translated">Dynalink에서 정의한 표준 네임 스페이스의 열거 형입니다.</target>
        </trans-unit>
        <trans-unit id="5b1bbcd62e9dcad9208070b0e973cdfb3e7928f4" translate="yes" xml:space="preserve">
          <source>An enumeration of the locale-independent names of any attributes that have been registered with setValue.</source>
          <target state="translated">setValue로 등록 된 속성의 로케일 독립적 이름의 열거.</target>
        </trans-unit>
        <trans-unit id="29e2704be2953d37a8545731362f63d4a79c7d38" translate="yes" xml:space="preserve">
          <source>An enumeration that is always empty.</source>
          <target state="translated">항상 비어있는 열거 형입니다.</target>
        </trans-unit>
        <trans-unit id="95b41c5fed367e1bfb6b8a6fb22cabd1cd54d069" translate="yes" xml:space="preserve">
          <source>An enumeration that is always empty. This is used when an enumeration of a leaf node's children is requested.</source>
          <target state="translated">항상 비어있는 열거 형입니다. 이는 리프 노드의 자식 열거가 요청 될 때 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="e1cf31d30f0363d049af71ea9bc4b7662716d534" translate="yes" xml:space="preserve">
          <source>An environment parameter passed to the &lt;code&gt;getReferralContext()&lt;/code&gt; method is owned by the caller. The service provider will not modify the object or keep a reference to it, but may keep a reference to a clone of it.</source>
          <target state="translated">&lt;code&gt;getReferralContext()&lt;/code&gt; 메소드에 전달 된 환경 매개 변수 는 호출자가 소유합니다. 서비스 공급자는 개체를 수정하거나 참조를 유지하지 않지만 복제본에 대한 참조는 유지할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6a7ccaa3a7ec3ff763316d8e680b3fdfb618f512" translate="yes" xml:space="preserve">
          <source>An environment property with this name is ignored while constructing an initial context.</source>
          <target state="translated">이 이름을 가진 환경 속성은 초기 컨텍스트를 생성하는 동안 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="ae44f8dec7d500240d4c81cd64385e9c31bdede4" translate="yes" xml:space="preserve">
          <source>An environment property with this name is ignored while constructing an initial context. This constant was originally used as a property name to specify an &lt;code&gt;Applet&lt;/code&gt; to retrieve parameters from, when creating an initial context. Currently any applet properties that need to be passed to an initial context should be copied into the environment hashtable:</source>
          <target state="translated">이 이름을 가진 환경 속성은 초기 컨텍스트를 생성하는 동안 무시됩니다. 이 상수는 원래 초기 컨텍스트를 만들 때 매개 변수를 검색 할 &lt;code&gt;Applet&lt;/code&gt; 을 지정하기위한 속성 이름으로 사용되었습니다 . 현재 초기 컨텍스트로 전달해야하는 애플릿 속성은 환경 해시 테이블에 복사해야합니다.</target>
        </trans-unit>
        <trans-unit id="b22a21850580a5551005539ab74ecbda9d89d23e" translate="yes" xml:space="preserve">
          <source>An equivalent sequence of increasing values can be produced sequentially using a &lt;code&gt;for&lt;/code&gt; loop as follows:</source>
          <target state="translated">&lt;code&gt;for&lt;/code&gt; 루프를 사용하여 다음과 같이 연속적으로 증가하는 값을 생성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="59d3ef78fc9c324103ebb73b6e078ae2c9c1219c" translate="yes" xml:space="preserve">
          <source>An equivalent way to find the caller class using the &lt;a href=&quot;#walk(java.util.function.Function)&quot;&gt;&lt;code&gt;walk&lt;/code&gt;&lt;/a&gt; method is as follows (filtering the reflection frames, &lt;code&gt;MethodHandle&lt;/code&gt; and hidden frames not shown below):</source>
          <target state="translated">&lt;a href=&quot;#walk(java.util.function.Function)&quot;&gt; &lt;code&gt;walk&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 호출자 클래스를 찾는 동등한 방법은 다음과 같습니다 ( 아래에 표시되지 않은 반사 프레임, &lt;code&gt;MethodHandle&lt;/code&gt; 및 숨겨진 프레임 필터링 ).</target>
        </trans-unit>
        <trans-unit id="b6c23e72efac7e28cf201277fb81153f3033c863" translate="yes" xml:space="preserve">
          <source>An era in the Hijrah calendar system.</source>
          <target state="translated">Hijrah 달력 시스템의 시대.</target>
        </trans-unit>
        <trans-unit id="8a0fe9ecc4a131e9eec25ea069d34eb24113bc18" translate="yes" xml:space="preserve">
          <source>An era in the ISO calendar system.</source>
          <target state="translated">ISO 캘린더 시스템의 시대.</target>
        </trans-unit>
        <trans-unit id="62bcbe9eaf8ff0c4c4424e1daeeaa0dddaa8dc82" translate="yes" xml:space="preserve">
          <source>An era in the Japanese Imperial calendar system.</source>
          <target state="translated">일본 제국 달력 시스템의 시대.</target>
        </trans-unit>
        <trans-unit id="839edb94c79947e4491762b5f14252c9ed3b9c74" translate="yes" xml:space="preserve">
          <source>An era in the Minguo calendar system.</source>
          <target state="translated">Minguo 캘린더 시스템의 시대.</target>
        </trans-unit>
        <trans-unit id="a2374e18a681c155a680850c562b80c5a765732f" translate="yes" xml:space="preserve">
          <source>An era in the Thai Buddhist calendar system.</source>
          <target state="translated">태국 불교 달력 시스템의 시대.</target>
        </trans-unit>
        <trans-unit id="b31f80db4176959ff8dccbf954da32e245c253aa" translate="yes" xml:space="preserve">
          <source>An era of the time-line.</source>
          <target state="translated">타임 라인의 시대.</target>
        </trans-unit>
        <trans-unit id="067c0f5c310edd94e3f94cccfd0bb9acfb3536a5" translate="yes" xml:space="preserve">
          <source>An error class for reporting factory configuration errors.</source>
          <target state="translated">공장 구성 오류를보고하기위한 오류 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="4e9dbde61b5dadbc3f242c5dea103b2ac13f5e57" translate="yes" xml:space="preserve">
          <source>An error has occurred.</source>
          <target state="translated">오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="d7ca5f6bf89613a7136d658e5df9460a22ef1704" translate="yes" xml:space="preserve">
          <source>An error message</source>
          <target state="translated">오류 메시지</target>
        </trans-unit>
        <trans-unit id="d2c9844f49fc47e3e1bff256050f8755cc56df33" translate="yes" xml:space="preserve">
          <source>An error occurs when attempting to find a module. Possible errors include I/O errors, errors detected parsing a module descriptor (&lt;code&gt;module-info.class&lt;/code&gt;) or two versions of the same module are found in the same directory.</source>
          <target state="translated">모듈을 찾으려고 할 때 오류가 발생합니다. 가능한 오류에는 I / O 오류, 모듈 설명자 ( &lt;code&gt;module-info.class&lt;/code&gt; )를 구문 분석하는 중에 감지 된 오류 또는 동일한 디렉토리에있는 동일한 모듈의 두 버전이 있습니다.</target>
        </trans-unit>
        <trans-unit id="f93c370dd937e05b12088a15093d7d39d1f05bb9" translate="yes" xml:space="preserve">
          <source>An error was encountered while producing the image.</source>
          <target state="translated">이미지를 생성하는 동안 오류가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="45f317061a9a0c7b57fdd2378c1b7dca9f0e2867" translate="yes" xml:space="preserve">
          <source>An escape string that does not precede a meta string (quotes or separator) and is not at the end of a component is treated as an ordinary string.</source>
          <target state="translated">메타 문자열 (따옴표 또는 구분 기호) 앞에 있지 않고 구성 요소 끝에없는 이스케이프 문자열은 일반 문자열로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="8f5d7c9f85be083f62fb0eb6020e241a7825b015" translate="yes" xml:space="preserve">
          <source>An escape string within a quoted component acts as an escape only when followed by the corresponding end-quote string. This can be used to embed an escaped quote within a quoted component.</source>
          <target state="translated">인용 된 구성 요소 내의 이스케이프 문자열은 해당 종료 인용 문자열이 뒤에 오는 경우에만 이스케이프 역할을합니다. 인용 된 구성 요소 내에 이스케이프 된 인용을 포함하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="257eb29f69cca491172de9ea2a2e994ea6f408de" translate="yes" xml:space="preserve">
          <source>An escaped escape string is not treated as an escape string.</source>
          <target state="translated">이스케이프 된 이스케이프 문자열은 이스케이프 문자열로 처리되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="756ecddad80be9fd79fa4f500d3a0c72a53e4d6c" translate="yes" xml:space="preserve">
          <source>An estimate of the area that will be updated by the pass is indicated by the &lt;code&gt;minX&lt;/code&gt;, &lt;code&gt;minY&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;height&lt;/code&gt; parameters. If the pass is interlaced, that is, it only updates selected rows or columns, the &lt;code&gt;periodX&lt;/code&gt; and &lt;code&gt;periodY&lt;/code&gt; parameters will indicate the degree of subsampling. The set of bands that may be affected is indicated by the value of &lt;code&gt;bands&lt;/code&gt;.</source>
          <target state="translated">패스로 업데이트 될 영역의 추정치는 &lt;code&gt;minX&lt;/code&gt; , &lt;code&gt;minY&lt;/code&gt; , &lt;code&gt;width&lt;/code&gt; 및 &lt;code&gt;height&lt;/code&gt; 매개 변수로 표시됩니다. 패스가 인터레이스 된 경우 (즉, 선택된 행 또는 열만 업데이트하는 경우) &lt;code&gt;periodX&lt;/code&gt; 및 &lt;code&gt;periodY&lt;/code&gt; 매개 변수는 서브 샘플링의 정도를 나타냅니다. 영향을받을 수있는 밴드의 세트의 값으로 표시되는 &lt;code&gt;bands&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="6aec68a524e95cbe65d72e0400144f46b19e4f5b" translate="yes" xml:space="preserve">
          <source>An estimate of the memory that the Java virtual machine is using for this buffer pool in bytes, or &lt;code&gt;-1L&lt;/code&gt; if an estimate of the memory usage is not available</source>
          <target state="translated">Java 가상 머신이이 버퍼 풀에 바이트 단위로 사용중인 메모리의 추정치 또는 메모리 사용량의 추정치를 사용할 수없는 경우 &lt;code&gt;-1L&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="35a86aad05409a4443ef8f7c26a0ae5b2623f6c1" translate="yes" xml:space="preserve">
          <source>An estimate of the number of buffers in this pool</source>
          <target state="translated">이 풀의 버퍼 수 추정</target>
        </trans-unit>
        <trans-unit id="9c7be5f46b9993beedafe18d1daa7444f7e43eb1" translate="yes" xml:space="preserve">
          <source>An estimate of the total capacity of the buffers in this pool in bytes</source>
          <target state="translated">이 풀의 버퍼 총 용량 추정치 (바이트)</target>
        </trans-unit>
        <trans-unit id="dcee934079c93a6663a7d12ea517f10308a431a9" translate="yes" xml:space="preserve">
          <source>An etched border UI resource.</source>
          <target state="translated">에칭 된 테두리 UI 리소스입니다.</target>
        </trans-unit>
        <trans-unit id="a7cd1c6c9191e374812a4e569c5f204b15898e6d" translate="yes" xml:space="preserve">
          <source>An even-odd winding rule for determining the interior of a path.</source>
          <target state="translated">경로의 내부를 결정하기위한 짝수 홀수 굴곡 규칙.</target>
        </trans-unit>
        <trans-unit id="6c81d97c6dccc30340a15355e34ff8e97b7403ed" translate="yes" xml:space="preserve">
          <source>An event emitted by a &lt;code&gt;Preferences&lt;/code&gt; node to indicate that a child of that node has been added or removed.</source>
          <target state="translated">해당 노드의 하위가 추가 또는 제거되었음을 표시하기 위해 &lt;code&gt;Preferences&lt;/code&gt; 노드가 생성 한 이벤트 .</target>
        </trans-unit>
        <trans-unit id="06c96077886494750aabd7c2320ccfb76b17746e" translate="yes" xml:space="preserve">
          <source>An event emitted by a &lt;code&gt;Preferences&lt;/code&gt; node to indicate that a preference has been added, removed or has had its value changed.</source>
          <target state="translated">환경 설정이 추가, 제거 또는 값이 변경되었음을 표시하기 위해 &lt;code&gt;Preferences&lt;/code&gt; 노드가 생성 한 이벤트 .</target>
        </trans-unit>
        <trans-unit id="04d558491dd736a8c703c8d4137060a56c89dc82" translate="yes" xml:space="preserve">
          <source>An event indicating that an operation which can be undone has occurred.</source>
          <target state="translated">취소 할 수있는 작업이 발생했음을 나타내는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="282e2ba6326540f5db6b1623230bf3fbe382bc8a" translate="yes" xml:space="preserve">
          <source>An event is classified by its &lt;a href=&quot;#kind()&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; and has a &lt;a href=&quot;#count()&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; to indicate the number of times that the event has been observed. This allows for efficient representation of repeated events. The &lt;a href=&quot;#context()&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; method returns any context associated with the event. In the case of a repeated event then the context is the same for all events.</source>
          <target state="translated">이벤트는에 의해 분류 &lt;a href=&quot;#kind()&quot;&gt; &lt;code&gt;kind&lt;/code&gt; &lt;/a&gt; 와이 &lt;a href=&quot;#count()&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt; 이벤트가 관찰 된 횟수를 표시 할 수 있습니다. 이를 통해 반복되는 이벤트를 효율적으로 표현할 수 있습니다. &lt;a href=&quot;#context()&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt; 방법은 이벤트와 관련된 컨텍스트를 반환합니다. 반복되는 이벤트의 경우 컨텍스트는 모든 이벤트에 대해 동일합니다.</target>
        </trans-unit>
        <trans-unit id="9f5e54c6bf6e5cb8c0aad4f8bf44cffe32722464" translate="yes" xml:space="preserve">
          <source>An event is classified by its &lt;a href=&quot;watchevent#kind--&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; and has a &lt;a href=&quot;watchevent#count--&quot;&gt;&lt;code&gt;count&lt;/code&gt;&lt;/a&gt; to indicate the number of times that the event has been observed. This allows for efficient representation of repeated events. The &lt;a href=&quot;watchevent#context--&quot;&gt;&lt;code&gt;context&lt;/code&gt;&lt;/a&gt; method returns any context associated with the event. In the case of a repeated event then the context is the same for all events.</source>
          <target state="translated">이벤트는에 의해 분류 &lt;a href=&quot;watchevent#kind--&quot;&gt; &lt;code&gt;kind&lt;/code&gt; &lt;/a&gt; 와이 &lt;a href=&quot;watchevent#count--&quot;&gt; &lt;code&gt;count&lt;/code&gt; &lt;/a&gt; 이벤트가 관찰 된 횟수를 표시 할 수 있습니다. 이를 통해 반복되는 이벤트를 효율적으로 표현할 수 있습니다. &lt;a href=&quot;watchevent#context--&quot;&gt; &lt;code&gt;context&lt;/code&gt; &lt;/a&gt; 방법은 이벤트와 관련된 컨텍스트를 반환합니다. 반복되는 이벤트의 경우 컨텍스트는 모든 이벤트에 대해 동일합니다.</target>
        </trans-unit>
        <trans-unit id="e419c0a367c0952c77049429cb02258e2eeee887" translate="yes" xml:space="preserve">
          <source>An event kind, for the purposes of identification.</source>
          <target state="translated">식별을위한 이벤트 종류.</target>
        </trans-unit>
        <trans-unit id="15f065001a5c026588b520e089120d59c698781d" translate="yes" xml:space="preserve">
          <source>An event modifier that qualifies how a &lt;a href=&quot;watchable&quot;&gt;&lt;code&gt;Watchable&lt;/code&gt;&lt;/a&gt; is registered with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의 자격은 어떻게하는 것이 이벤트 수정 &lt;a href=&quot;watchable&quot;&gt; &lt;code&gt;Watchable&lt;/code&gt; &lt;/a&gt; 에 등록되어 &lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d3c2026b10e715c2c07e83b29999c1d04110c221" translate="yes" xml:space="preserve">
          <source>An event or a repeated event for an object that is registered with a &lt;a href=&quot;watchservice&quot;&gt;&lt;code&gt;WatchService&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;watchservice&quot;&gt; &lt;code&gt;WatchService&lt;/code&gt; 에&lt;/a&gt; 등록 된 객체에 대한 이벤트 또는 반복 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="eaa866bbbceec3694667362fb059460ba9e2a202" translate="yes" xml:space="preserve">
          <source>An event reported to a child component that originated from an ancestor in the component hierarchy.</source>
          <target state="translated">구성 요소 계층 구조의 조상에서 시작된 하위 구성 요소에보고 된 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="d686f847c2b54ec5ed578041a97ae28c8f068475" translate="yes" xml:space="preserve">
          <source>An event source may send a null object as the name to indicate that an arbitrary set of if its properties have changed. In this case the old and new values should also be null.</source>
          <target state="translated">이벤트 소스는 속성으로 임의의 세트가 변경되었음을 나타내는 널 오브젝트를 이름으로 보낼 수 있습니다. 이 경우 이전 값과 새 값도 null이어야합니다.</target>
        </trans-unit>
        <trans-unit id="26aa59554694adf8e7ed286d8ac1c037112ef997" translate="yes" xml:space="preserve">
          <source>An event that characterizes a change in selection.</source>
          <target state="translated">선택 변경을 특징으로하는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="896712288c4a0b9a20bdeeeb5e2bf21d577404e3" translate="yes" xml:space="preserve">
          <source>An event that characterizes a change in selection. The change is limited to a a single inclusive interval. The selection of at least one index within the range will have changed. A decent &lt;code&gt;ListSelectionModel&lt;/code&gt; implementation will keep the range as small as possible. &lt;code&gt;ListSelectionListeners&lt;/code&gt; will generally query the source of the event for the new selected status of each potentially changed row.</source>
          <target state="translated">선택 변경을 특징으로하는 이벤트입니다. 변경은 단일 포함 간격으로 제한됩니다. 범위 내에서 하나 이상의 인덱스 선택이 변경됩니다. 적절한 &lt;code&gt;ListSelectionModel&lt;/code&gt; 구현은 범위를 가능한 한 작게 유지합니다. &lt;code&gt;ListSelectionListeners&lt;/code&gt; 는 일반적으로 잠재적으로 변경된 각 행의 새로 선택된 상태에 대해 이벤트 소스를 쿼리합니다.</target>
        </trans-unit>
        <trans-unit id="0248e0950e47fd55b01c78efcb8541d03fdf48e8" translate="yes" xml:space="preserve">
          <source>An event that characterizes a change in the current selection.</source>
          <target state="translated">현재 선택의 변경을 특징으로하는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="e1fa060ce495a1babb59f2ae7a5a0372e80523e1" translate="yes" xml:space="preserve">
          <source>An event that characterizes a change in the current selection. The change is based on any number of paths. TreeSelectionListeners will generally query the source of the event for the new selected status of each potentially changed row.</source>
          <target state="translated">현재 선택의 변경을 특징으로하는 이벤트입니다. 변경은 경로 수를 기반으로합니다. TreeSelectionListeners는 일반적으로 잠재적으로 변경된 각 행의 새로 선택된 상태에 대해 이벤트 소스를 쿼리합니다.</target>
        </trans-unit>
        <trans-unit id="c5b61cabf66d75cb1bbaeac2e194f66f194da3d7" translate="yes" xml:space="preserve">
          <source>An event used to identify a single path in a tree.</source>
          <target state="translated">트리에서 단일 경로를 식별하는 데 사용되는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="e7393bb3557d2d0e2a11d72b0ec0cdcf48fa375f" translate="yes" xml:space="preserve">
          <source>An event used to identify a single path in a tree. The source returned by &lt;b&gt;getSource&lt;/b&gt; will be an instance of JTree.</source>
          <target state="translated">트리에서 단일 경로를 식별하는 데 사용되는 이벤트입니다. &lt;b&gt;getSource&lt;/b&gt; 가 반환하는 소스 는 JTree의 인스턴스입니다.</target>
        </trans-unit>
        <trans-unit id="e10dbfff72f6f17201771dc21ad8044981bd65fd" translate="yes" xml:space="preserve">
          <source>An event which executes the &lt;code&gt;run()&lt;/code&gt; method on a &lt;code&gt;Runnable
 &lt;/code&gt; when dispatched by the AWT event dispatcher thread.</source>
          <target state="translated">AWT 이벤트 디스패처 스레드에 의해 전달 될 때 &lt;code&gt;Runnable &lt;/code&gt; 에서 &lt;code&gt;run()&lt;/code&gt; 메서드 를 실행하는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="50605879fa1adc5a2e983156b4f55e7260546062" translate="yes" xml:space="preserve">
          <source>An event which executes the &lt;code&gt;run()&lt;/code&gt; method on a &lt;code&gt;Runnable
 &lt;/code&gt; when dispatched by the AWT event dispatcher thread. This class can be used as a reference implementation of &lt;code&gt;ActiveEvent&lt;/code&gt; rather than declaring a new class and defining &lt;code&gt;dispatch()&lt;/code&gt;.</source>
          <target state="translated">AWT 이벤트 디스패처 스레드에 의해 전달 될 때 &lt;code&gt;Runnable &lt;/code&gt; 에서 &lt;code&gt;run()&lt;/code&gt; 메서드 를 실행하는 이벤트입니다 . 이 클래스는 새 클래스를 선언하고 &lt;code&gt;dispatch()&lt;/code&gt; 정의하는 대신 &lt;code&gt;ActiveEvent&lt;/code&gt; 의 참조 구현으로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="06f8f57a66f53efff7a9621c6e8b3ff1a48e68c9" translate="yes" xml:space="preserve">
          <source>An event which indicates a change to the &lt;code&gt;Component&lt;/code&gt; hierarchy to which &lt;code&gt;Component&lt;/code&gt; belongs.</source>
          <target state="translated">&lt;code&gt;Component&lt;/code&gt; 가 속한 &lt;code&gt;Component&lt;/code&gt; 계층 의 변경을 나타내는 이벤트입니다 .</target>
        </trans-unit>
        <trans-unit id="d1bee5f36c1751ee7475abdc51fc82965a2048ae" translate="yes" xml:space="preserve">
          <source>An event which indicates that a keystroke occurred in a component.</source>
          <target state="translated">구성 요소에서 키 입력이 발생했음을 나타내는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="a896869c7ea1c755a16f34ba3ea21c511b4471ab" translate="yes" xml:space="preserve">
          <source>An event which indicates that a mouse action occurred in a component.</source>
          <target state="translated">컴포넌트에서 마우스 동작이 발생했음을 나타내는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="c7f62ef3a2c23c52ea64bb9a248c4f0487b93a84" translate="yes" xml:space="preserve">
          <source>An event which indicates that a mouse action occurred in a component. A mouse action is considered to occur in a particular component if and only if the mouse cursor is over the unobscured part of the component's bounds when the action happens. For lightweight components, such as Swing's components, mouse events are only dispatched to the component if the mouse event type has been enabled on the component. A mouse event type is enabled by adding the appropriate mouse-based &lt;code&gt;EventListener&lt;/code&gt; to the component (&lt;a href=&quot;mouselistener&quot;&gt;&lt;code&gt;MouseListener&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;mousemotionlistener&quot;&gt;&lt;code&gt;MouseMotionListener&lt;/code&gt;&lt;/a&gt;), or by invoking &lt;a href=&quot;../component#enableEvents(long)&quot;&gt;&lt;code&gt;Component.enableEvents(long)&lt;/code&gt;&lt;/a&gt; with the appropriate mask parameter (&lt;code&gt;AWTEvent.MOUSE_EVENT_MASK&lt;/code&gt; or &lt;code&gt;AWTEvent.MOUSE_MOTION_EVENT_MASK&lt;/code&gt;). If the mouse event type has not been enabled on the component, the corresponding mouse events are dispatched to the first ancestor that has enabled the mouse event type.</source>
          <target state="translated">컴포넌트에서 마우스 동작이 발생했음을 나타내는 이벤트입니다. 마우스 동작은 동작이 발생할 때 마우스 커서가 컴포넌트 경계의 가려지지 않은 부분 위에있는 경우에만 특정 컴포넌트에서 발생하는 것으로 간주됩니다. Swing의 구성 요소와 같은 경량 구성 요소의 경우 마우스 이벤트 유형이 구성 요소에서 활성화 된 경우에만 마우스 이벤트가 구성 요소로 전달됩니다. 마우스 이벤트 유형은 적절한 마우스 기반 &lt;code&gt;EventListener&lt;/code&gt; 를 컴포넌트 ( &lt;a href=&quot;mouselistener&quot;&gt; &lt;code&gt;MouseListener&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;mousemotionlistener&quot;&gt; &lt;code&gt;MouseMotionListener&lt;/code&gt; &lt;/a&gt; )에 추가하거나 적절한 마스크 매개 변수 ( &lt;code&gt;AWTEvent.MOUSE_EVENT_MASK&lt;/code&gt; 또는 &lt;code&gt;AWTEvent.MOUSE_MOTION_EVENT_MASK&lt;/code&gt; &lt;a href=&quot;../component#enableEvents(long)&quot;&gt; &lt;code&gt;Component.enableEvents(long)&lt;/code&gt; &lt;/a&gt; 와 함께 Component.enableEvents (long) 를 호출 하여 활성화됩니다.). 구성 요소에서 마우스 이벤트 유형이 활성화되지 않은 경우 해당 마우스 이벤트는 마우스 이벤트 유형을 활성화 한 첫 번째 조상에게 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="b237f4be590c9535f6a8931556284368d5ea0a0b" translate="yes" xml:space="preserve">
          <source>An event which indicates that the mouse wheel was rotated in a component.</source>
          <target state="translated">컴포넌트에서 마우스 휠이 회전했음을 나타내는 이벤트입니다.</target>
        </trans-unit>
        <trans-unit id="1c58667598e54fdb2f24f8569a3872e9e89ca801" translate="yes" xml:space="preserve">
          <source>An example is grammatical information attached to a sentence: For the previous sentence, you can say that &quot;an example&quot; is the subject, but you cannot say the same about &quot;an&quot;, &quot;example&quot;, or &quot;exam&quot;. When the text is changed, the grammatical information typically becomes invalid. Another example is Japanese reading information (yomi).</source>
          <target state="translated">예는 문장에 첨부 된 문법 정보입니다. 이전 문장의 경우 &quot;예&quot;가 주제라고 말할 수 있지만 &quot;an&quot;, &quot;example&quot;또는 &quot;exam&quot;에 대해서는 동일하게 말할 수 없습니다. 텍스트가 변경되면 문법 정보는 일반적으로 유효하지 않습니다. 또 다른 예는 일본어 읽기 정보 (yomi)입니다.</target>
        </trans-unit>
        <trans-unit id="8314e4f5c5e80547f95424d5dfb5afb0daf701ff" translate="yes" xml:space="preserve">
          <source>An example of a binary reference address is an BER X.500 presentation address. Another example of a binary reference address is a serialized form of a service's object handle.</source>
          <target state="translated">이진 참조 주소의 예는 BER X.500 프레젠테이션 주소입니다. 이진 참조 주소의 또 다른 예는 직렬화 된 형식의 서비스 개체 핸들입니다.</target>
        </trans-unit>
        <trans-unit id="c422262ad662671c77308969717b4f574d8e6288" translate="yes" xml:space="preserve">
          <source>An example of a string reference address is a host name. Another example of a string reference address is a URL.</source>
          <target state="translated">문자열 참조 주소의 예는 호스트 이름입니다. 문자열 참조 주소의 다른 예는 URL입니다.</target>
        </trans-unit>
        <trans-unit id="0c4df158fcd674071cd2f29ae5791b62257540bf" translate="yes" xml:space="preserve">
          <source>An example of how an assistive technology might use the &lt;code&gt;Translator&lt;/code&gt; class is as follows:</source>
          <target state="translated">보조 기술이 &lt;code&gt;Translator&lt;/code&gt; 클래스를 사용하는 방법의 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="97d8d127146904808136c86d703f1d597aa78e99" translate="yes" xml:space="preserve">
          <source>An example of setting this property is to invoke Java with &lt;code&gt;-Djavax.accessibility.assistive_technologies=MyServiceProvider&lt;/code&gt;. In addition to MyServiceProvider other service providers can be specified using a comma separated list. Service providers are loaded after the AWT toolkit is created.</source>
          <target state="translated">이 속성을 설정하는 예는 &lt;code&gt;-Djavax.accessibility.assistive_technologies=MyServiceProvider&lt;/code&gt; 를 사용하여 Java를 호출하는 것 입니다. MyServiceProvider 외에도 쉼표로 구분 된 목록을 사용하여 다른 서비스 공급자를 지정할 수 있습니다. 서비스 제공자는 AWT 툴킷이 작성된 후로드됩니다.</target>
        </trans-unit>
        <trans-unit id="eac2cd99333f0b1bbe1830270bc0354a7c3a971c" translate="yes" xml:space="preserve">
          <source>An example of setting this property is to invoke Java with &lt;code&gt;-Djavax.accessibility.assistive_technologies=MyServiceProvider&lt;/code&gt;. In addition to MyServiceProvider other service providers can be specified using a comma separated list. Service providers are loaded after the AWT toolkit is created. All errors are handled via an AWTError exception.</source>
          <target state="translated">이 속성을 설정하는 예는 &lt;code&gt;-Djavax.accessibility.assistive_technologies=MyServiceProvider&lt;/code&gt; 를 사용하여 Java를 호출하는 것 입니다. MyServiceProvider 외에도 쉼표로 구분 된 목록을 사용하여 다른 서비스 공급자를 지정할 수 있습니다. 서비스 제공자는 AWT 툴킷이 작성된 후로드됩니다. 모든 오류는 AWTError 예외를 통해 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="bf6bc6d487fd537c1cdb763dfa71d56f909edc8d" translate="yes" xml:space="preserve">
          <source>An example of using a VolatileImage object follows:</source>
          <target state="translated">VolatileImage 객체를 사용하는 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="db5da4ac02ef7c65a5dc16ef28a9ba5d3add4e7d" translate="yes" xml:space="preserve">
          <source>An example of using this method on a legacy throwable type without other support for setting the cause is:</source>
          <target state="translated">원인 설정에 대한 다른 지원없이 레거시 Throwable 유형에서이 방법을 사용하는 예는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9135abf2557d130e528a795718b735e7528d8a4c" translate="yes" xml:space="preserve">
          <source>An excellent tutorial and overview of regular expressions is &lt;a href=&quot;http://www.oreilly.com/catalog/regex/&quot;&gt;&lt;i&gt;Mastering Regular Expressions&lt;/i&gt;, Jeffrey E. F. Friedl, O'Reilly and Associates, 1997.&lt;/a&gt;</source>
          <target state="translated">정규 표현식에 대한 훌륭한 튜토리얼과 개요는 &lt;a href=&quot;http://www.oreilly.com/catalog/regex/&quot;&gt;&lt;i&gt;Mastering Regular Expressions&lt;/i&gt; , Jeffrey EF Friedl, O'Reilly and Associates, 1997입니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="01a75091aca23cf46c6982fff788b4a6950b18ad" translate="yes" xml:space="preserve">
          <source>An excellent tutorial and overview of regular expressions is &lt;a href=&quot;https://www.oreilly.com/catalog/regex/&quot;&gt;&lt;i&gt;Mastering Regular Expressions&lt;/i&gt;, Jeffrey E. F. Friedl, O'Reilly and Associates, 1997.&lt;/a&gt;</source>
          <target state="translated">정규식에 대한 훌륭한 자습서 및 개요는 &lt;a href=&quot;https://www.oreilly.com/catalog/regex/&quot;&gt;&lt;i&gt;Mastering Regular Expressions&lt;/i&gt; , Jeffrey EF Friedl, O'Reilly and Associates, 1997입니다.&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="1e585cb095bdaba25a8339e18cc96d48bcd0f705" translate="yes" xml:space="preserve">
          <source>An exception can have both a cause and one or more suppressed exceptions:</source>
          <target state="translated">예외는 원인과 하나 이상의 억제 된 예외를 모두 가질 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c76da232b28c630a45be3d12fbb935c81a92db4" translate="yes" xml:space="preserve">
          <source>An exception class used for signaling run-time failure of reading and writing operations.</source>
          <target state="translated">읽기 및 쓰기 작업의 런타임 실패를 알리는 데 사용되는 예외 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="55f4b8c4d30adf266f2f50abeef89fe2c653a3f3" translate="yes" xml:space="preserve">
          <source>An exception encountered while trying to add an element may result in only some of the elements having been successfully added when the associated exception is thrown.</source>
          <target state="translated">요소를 추가하는 동안 예외가 발생하면 연관된 예외가 throw 될 때 일부 요소 만 성공적으로 추가 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36426bb10473750780024705d86e053d5bf31ab5" translate="yes" xml:space="preserve">
          <source>An exception indicating one of a variety of problems encountered when building a certification path with a &lt;code&gt;CertPathBuilder&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CertPathBuilder&lt;/code&gt; 로 인증 경로를 구축 할 때 발생하는 다양한 문제 중 하나를 나타내는 예외 입니다.</target>
        </trans-unit>
        <trans-unit id="01bff7fd7d4a32814d6a5362737e0607d8446049" translate="yes" xml:space="preserve">
          <source>An exception indicating one of a variety of problems encountered when validating a certification path.</source>
          <target state="translated">인증 경로를 확인할 때 발생하는 다양한 문제 중 하나를 나타내는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="827b6a6c54d1f1c48aecd7390decd0af34678563" translate="yes" xml:space="preserve">
          <source>An exception indicating one of a variety of problems retrieving certificates and CRLs from a &lt;code&gt;CertStore&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CertStore&lt;/code&gt; 로부터 증명서와 CRL를 가져 오는 다양한 문제의 하나를 나타내는 예외 입니다.</target>
        </trans-unit>
        <trans-unit id="bdf912a9e4b7871a467a7588021056a908314ed8" translate="yes" xml:space="preserve">
          <source>An exception indicating that a &lt;code&gt;DeclarationSnippet&lt;/code&gt; with unresolved references has been encountered.</source>
          <target state="translated">확인되지 않은 참조가 있는 &lt;code&gt;DeclarationSnippet&lt;/code&gt; 이 발생했음을 나타내는 예외 입니다.</target>
        </trans-unit>
        <trans-unit id="2a42110dd66fca35b9a8e7b89155426d193a324c" translate="yes" xml:space="preserve">
          <source>An exception indicating that an &lt;a href=&quot;#invoke(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;invoke(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt; (or theoretically a &lt;a href=&quot;#varValue(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;varValue(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt;) has been interrupted by a &lt;a href=&quot;#stop()&quot;&gt;&lt;code&gt;stop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#invoke(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;invoke(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt; (또는 이론적으로 &lt;a href=&quot;#varValue(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;varValue(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt; )이 &lt;a href=&quot;#stop()&quot;&gt; &lt;code&gt;stop()&lt;/code&gt; &lt;/a&gt; 의해 중단 되었음을 나타내는 예외 입니다.</target>
        </trans-unit>
        <trans-unit id="c69ebd077fcd632c8fe7ed1ebc38d5009db91c8b" translate="yes" xml:space="preserve">
          <source>An exception indicating that an &lt;a href=&quot;executioncontrol#invoke(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;ExecutionControl.invoke(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt; (or theoretically a &lt;a href=&quot;executioncontrol#varValue(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;ExecutionControl.varValue(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt;) has been interrupted by a &lt;a href=&quot;executioncontrol#stop()&quot;&gt;&lt;code&gt;ExecutionControl.stop()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;executioncontrol#invoke(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;ExecutionControl.invoke(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt; (또는 이론적으로 &lt;a href=&quot;executioncontrol#varValue(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;ExecutionControl.varValue(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt; )가 &lt;a href=&quot;executioncontrol#stop()&quot;&gt; &lt;code&gt;ExecutionControl.stop()&lt;/code&gt; &lt;/a&gt; 의해 중단 되었음을 나타내는 예외 () .</target>
        </trans-unit>
        <trans-unit id="5fa7086714c8ef389fe52703a7ff049f7e46769c" translate="yes" xml:space="preserve">
          <source>An exception is thrown if there is an ambiguity, for example, if the object is of a class implementing more than one of these interfaces.</source>
          <target state="translated">예를 들어 객체가 이러한 인터페이스 중 두 개 이상을 구현하는 클래스 인 경우 모호한 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="539a0257d7fb54af59d0655a04e9605a2871fae6" translate="yes" xml:space="preserve">
          <source>An exception is thrown while collecting information about the events. That is, when the listener receives a &lt;code&gt;NamingExceptionEvent&lt;/code&gt;.</source>
          <target state="translated">이벤트에 대한 정보를 수집하는 중에 예외가 발생합니다. 수신기는 수신 한 경우 즉, &lt;code&gt;NamingExceptionEvent&lt;/code&gt; 가이 .</target>
        </trans-unit>
        <trans-unit id="a0d0592d1b01dc12413c57ea90c27fe3a483f573" translate="yes" xml:space="preserve">
          <source>An exception may have suppressed exceptions while also being caused by another exception. Whether or not an exception has a cause is semantically known at the time of its creation, unlike whether or not an exception will suppress other exceptions which is typically only determined after an exception is thrown.</source>
          <target state="translated">예외는 다른 예외로 인해 예외를 억제했을 수 있습니다. 예외가 원인을 갖는지 여부는 예외가 예외가 발생한 후에 만 ​​결정되는 다른 예외를 억제하는지 여부와 달리, 작성 당시 의미 적으로 알려져 있습니다.</target>
        </trans-unit>
        <trans-unit id="53beaa837ddc7ceb7ee67f542711dcb85c2b2b5a" translate="yes" xml:space="preserve">
          <source>An exception occurred during the introspection of an MBean.</source>
          <target state="translated">MBean의 내부 검사 중에 예외가 발생했습니다.</target>
        </trans-unit>
        <trans-unit id="d875fe6048b3e5126d3cdd14afc5d8aa9a9088b5" translate="yes" xml:space="preserve">
          <source>An exception of type &lt;code&gt;NumberFormatException&lt;/code&gt; is thrown if any of the following situations occurs:</source>
          <target state="translated">다음 상황 중 하나가 발생하면 &lt;code&gt;NumberFormatException&lt;/code&gt; 유형의 예외 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="26e5ef4037e4c60c7276617440fb680055be6bd6" translate="yes" xml:space="preserve">
          <source>An exception that indicates an X.509 certificate is revoked.</source>
          <target state="translated">X.509 인증서를 나타내는 예외가 취소되었습니다.</target>
        </trans-unit>
        <trans-unit id="eb2cb5367acdec595b1cf7be61b81bd4e9f62194" translate="yes" xml:space="preserve">
          <source>An exception that indicates an X.509 certificate is revoked. A &lt;code&gt;CertificateRevokedException&lt;/code&gt; contains additional information about the revoked certificate, such as the date on which the certificate was revoked and the reason it was revoked.</source>
          <target state="translated">X.509 인증서를 나타내는 예외가 취소되었습니다. &lt;code&gt;CertificateRevokedException&lt;/code&gt; 이 같은 인증서가 취소 된 날짜 및이 취소 된 이유와 해지 된 인증서에 대한 자세한 정보가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1157e088807d425904f8b0a2ffdf99ca95857e4a" translate="yes" xml:space="preserve">
          <source>An exception that indicates the requested look &amp;amp; feel management classes are not present on the user's system.</source>
          <target state="translated">요청 된 룩앤필 관리 클래스가 사용자 시스템에 없음을 나타내는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="1112cce34009ed8112d963c1429cbdb8eef2167c" translate="yes" xml:space="preserve">
          <source>An exception that provides information on a database access error or other errors.</source>
          <target state="translated">데이터베이스 액세스 오류 또는 기타 오류에 대한 정보를 제공하는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="54e79e952314986864c1ea29e3466a3c5255e1d9" translate="yes" xml:space="preserve">
          <source>An exception that provides information on database access warnings.</source>
          <target state="translated">데이터베이스 액세스 경고에 대한 정보를 제공하는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="7df787dce29b90bf8caed974b6ffa760a840a94b" translate="yes" xml:space="preserve">
          <source>An exception that provides information on database access warnings. Warnings are silently chained to the object whose method caused it to be reported.</source>
          <target state="translated">데이터베이스 액세스 경고에 대한 정보를 제공하는 예외입니다. 경고는 해당 메서드로 인해보고 된 개체에 자동으로 연결됩니다.</target>
        </trans-unit>
        <trans-unit id="27c84afce513eedfc3d41795104aa3b376531267" translate="yes" xml:space="preserve">
          <source>An exception thrown as a &lt;code&gt;DataTruncation&lt;/code&gt; exception (on writes) or reported as a &lt;code&gt;DataTruncation&lt;/code&gt; warning (on reads) when a data values is unexpectedly truncated for reasons other than its having exceeded &lt;code&gt;MaxFieldSize&lt;/code&gt;.</source>
          <target state="translated">데이터 값이 &lt;code&gt;MaxFieldSize&lt;/code&gt; 초과 이외의 이유로 예기치 않게 잘린 경우 &lt;code&gt;DataTruncation&lt;/code&gt; 예외 (쓰기시) 로 throw 되거나 &lt;code&gt;DataTruncation&lt;/code&gt; 경고 (읽기시) 로보고 되는 예외 입니다.</target>
        </trans-unit>
        <trans-unit id="2f160d97246c78d81ce29bd33cee54f7227c87cc" translate="yes" xml:space="preserve">
          <source>An exception thrown when an error occurs during parsing.</source>
          <target state="translated">구문 분석 중 오류가 발생하면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="568073553e60a50c6f3c7444d5cb67c4ef8ab555" translate="yes" xml:space="preserve">
          <source>An exception will be thrown if the application attempts to write more data than the indicated content-length, or if the application closes the OutputStream before writing the indicated amount.</source>
          <target state="translated">애플리케이션이 표시된 콘텐츠 길이보다 많은 데이터를 쓰려고 시도하거나 애플리케이션이 표시된 양을 쓰기 전에 OutputStream을 닫는 경우 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cc5c3fd5dfd0748548f77b57c9e8da871d50cb82" translate="yes" xml:space="preserve">
          <source>An execution of the task throws an exception. In this case calling &lt;a href=&quot;future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; on the returned future will throw &lt;a href=&quot;executionexception&quot;&gt;&lt;code&gt;ExecutionException&lt;/code&gt;&lt;/a&gt;, holding the exception as its cause.</source>
          <target state="translated">작업을 실행하면 예외가 발생합니다. 이 경우 반환 된 future에 대해 &lt;a href=&quot;future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 을 호출 하면 &lt;a href=&quot;executionexception&quot;&gt; &lt;code&gt;ExecutionException&lt;/code&gt; &lt;/a&gt; 이 발생하여 예외가 원인으로 유지됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
