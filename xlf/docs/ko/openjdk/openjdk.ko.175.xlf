<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="f52350011b2bff4b6aadc49010400da9f43d3bb7" translate="yes" xml:space="preserve">
          <source>This will fail if a &lt;code&gt;TreeWillExpandListener&lt;/code&gt; vetos it.</source>
          <target state="translated">&lt;code&gt;TreeWillExpandListener&lt;/code&gt; 가이를 확인하면 실패 합니다.</target>
        </trans-unit>
        <trans-unit id="ab38c9664df556481f2d51dfa76e580d88277188" translate="yes" xml:space="preserve">
          <source>This will generate a new key pair every time it is called.</source>
          <target state="translated">호출 할 때마다 새 키 페어가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="70f58a08959dc1e341564858f87708e283558ea2" translate="yes" xml:space="preserve">
          <source>This will invoke &lt;code&gt;insureRowContinuity&lt;/code&gt; to make sure the currently selected TreePaths are still valid based on the selection mode.</source>
          <target state="translated">그러면 &lt;code&gt;insureRowContinuity&lt;/code&gt; 가 호출 되어 현재 선택된 TreePath가 선택 모드에 따라 여전히 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="0b66aca30d5516165d0d54b76b287be829817962" translate="yes" xml:space="preserve">
          <source>This will look up appropriate values from the provider of localization data.</source>
          <target state="translated">현지화 데이터 제공 업체에서 적절한 값을 찾습니다.</target>
        </trans-unit>
        <trans-unit id="ece8edb688f403bce6cce9790dc7fd91da3e23a4" translate="yes" xml:space="preserve">
          <source>This will look up appropriate values from the provider of localization data. If the locale contains &quot;fw&quot; (First day of week) and/or &quot;rg&quot; (Region Override) &lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt; Unicode extensions&lt;/a&gt;, returned instance will reflect the values specified with those extensions. If both &quot;fw&quot; and &quot;rg&quot; are specified, the value from the &quot;fw&quot; extension supersedes the implicit one from the &quot;rg&quot; extension.</source>
          <target state="translated">그러면 현지화 데이터 제공 업체에서 적절한 값을 찾습니다. 로케일에 &quot;fw&quot;(첫 번째 요일) 및 / 또는 &quot;rg&quot;(지역 재정의) &lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt;유니 코드 확장이 포함 된&lt;/a&gt; 경우 반환 된 인스턴스는 해당 확장으로 지정된 값을 반영합니다. &quot;fw&quot;와 &quot;rg&quot;가 모두 지정되면 &quot;fw&quot;확장의 값이 &quot;rg&quot;확장의 암시 적 값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="df9a68f44aa8097af8ec68f8849aabd2320e2a38" translate="yes" xml:space="preserve">
          <source>This will message the callback for all valid tags, as well as tags that are implied but not explicitly specified. For example, the html string (&amp;lt;p&amp;gt;blah) only has a p tag defined. The callback will see the following methods:</source>
          <target state="translated">이렇게하면 모든 유효한 태그와 암시 적이지만 명시 적으로 지정되지 않은 태그에 대한 콜백 메시지가 표시됩니다. 예를 들어, html 문자열 (&amp;lt;p&amp;gt; blah)에는 ap 태그 만 정의되어 있습니다. 콜백에는 다음 메소드가 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="f07bc0ec249937e8e0df0e258e0fb5875f41ffd7" translate="yes" xml:space="preserve">
          <source>This will normally result in the behavior of breaking on a whitespace location if one can be found, otherwise breaking between characters.</source>
          <target state="translated">이것은 일반적으로 공백 위치를 찾을 수있는 경우 공백 위치에서 중단되고 그렇지 않으면 문자 사이에서 중단되는 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="be2f582267b5b2e46448732bd22aed27aa3c8ea5" translate="yes" xml:space="preserve">
          <source>This will not normally be useful, since the main purpose of this class is to make a snapshot of an existing Locator.</source>
          <target state="translated">이 클래스의 주요 목적은 기존 로케이터의 스냅 샷을 만드는 것이므로 일반적으로 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="51631d282e296baa21b9558d237e218fff48f4a3" translate="yes" xml:space="preserve">
          <source>This will parse a textual representation of a duration, including the string produced by &lt;code&gt;toString()&lt;/code&gt;. The formats accepted are based on the ISO-8601 duration format &lt;code&gt;PnDTnHnMn.nS&lt;/code&gt; with days considered to be exactly 24 hours.</source>
          <target state="translated">&lt;code&gt;toString()&lt;/code&gt; 의해 생성 된 문자열을 포함하여 지속 시간의 텍스트 표현을 구문 분석합니다 . 허용되는 형식은 ISO-8601 기간 형식 &lt;code&gt;PnDTnHnMn.nS&lt;/code&gt; 를 기반으로하며 24 일로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="3ea3fa437e506a5a1971a2ca4e8d888a853c0203" translate="yes" xml:space="preserve">
          <source>This will parse the string produced by &lt;code&gt;toString()&lt;/code&gt; which is based on the ISO-8601 period formats &lt;code&gt;PnYnMnD&lt;/code&gt; and &lt;code&gt;PnW&lt;/code&gt;.</source>
          <target state="translated">이는 ISO-8601 기간 형식 &lt;code&gt;PnYnMnD&lt;/code&gt; 및 &lt;code&gt;PnW&lt;/code&gt; 를 기반으로하는 &lt;code&gt;toString()&lt;/code&gt; 의해 생성 된 문자열을 구문 분석합니다 .</target>
        </trans-unit>
        <trans-unit id="a8eaf12edbe768972c5bf9f8281d0fc56a10c24c" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;../clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">현재 날짜를 얻기 위해 &lt;a href=&quot;../clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2230694209aa2317fc76b1b24e757431678172d5" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;../clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">현재 날짜를 얻기 위해 &lt;a href=&quot;../clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 종속되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9829edbfc032e460de5918c4267818337e50a673" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;../clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date.</source>
          <target state="translated">이것은 현재 날짜를 얻기 위해 기본 시간대 의 &lt;a href=&quot;../clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="973c26b5bc3319d923f63cd006bd44273d33455b" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;../clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date.</source>
          <target state="translated">현재 시간을 얻기 위해 기본 시간대 의 &lt;a href=&quot;../clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="707d6f9ef400c704c21a3c9314815afc6f3cbae7" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date-time. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">현재 날짜-시간을 얻기 위해 &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f3250d0d4aa00af753e7e46d667f29394b7ae229" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date-time. Specifying the time-zone avoids dependence on the default time-zone. The offset will be calculated from the specified time-zone.</source>
          <target state="translated">현재 날짜-시간을 얻기 위해 &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 의존하지 않습니다. 오프셋은 지정된 시간대에서 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="96e22858dc6b7c1e86f19e99efffd50ef421c45a" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">현재 날짜를 얻기 위해 &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="da4f2c0327f11bec29487651be61d6578361f555" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current month-day. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">이것은 현재 월-일을 얻기 위해 &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d1a1112eb2f460e0dd304b636395f87ed48febd8" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current time. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">현재 시간을 얻기 위해 &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f48bd5d3a31851a451315a0d79a98cd5ab1e3b14" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current time. Specifying the time-zone avoids dependence on the default time-zone. The offset will be calculated from the specified time-zone.</source>
          <target state="translated">현재 시간을 얻기 위해 &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 의존하지 않습니다. 오프셋은 지정된 시간대에서 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="27a805d2b63e7781b55eb7034dd8ec7ca5023063" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current year-month. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">이것은 현재 년-월을 얻기 위해 &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7e80ff766c94ce4d9a21f6f3fadb21afa8358e83" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current year. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">현재 연도를 얻기 위해 &lt;a href=&quot;clock#system(java.time.ZoneId)&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 의존하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="41407725abc0b30ba6397cb5f98d01c738927873" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date-time. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">현재 &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 을 얻기 위해 시스템 시계 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 종속되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="665959bc639edfac15a73b628c7d40292c657afd" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date-time. Specifying the time-zone avoids dependence on the default time-zone. The offset will be calculated from the specified time-zone.</source>
          <target state="translated">현재 &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 을 얻기 위해 시스템 시계 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 종속되지 않습니다. 오프셋은 지정된 시간대에서 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="34bf469d6445df27e6d4da34047b5416f4f7778b" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current date. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">현재 날짜를 얻기 위해 &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 종속되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8ee0e9065dc29d677335d80c13d87feb9259ae65" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current month-day. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">현재 월 일을 얻기 위해 &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 종속되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6ad8dfc68d70ae6ac0ab47c11a7c585a6516f6c2" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current time. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">현재 시간을 얻기 위해 &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 종속되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0245657cf2d66d387048d5eca72e6afcd21ef7f9" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current time. Specifying the time-zone avoids dependence on the default time-zone. The offset will be calculated from the specified time-zone.</source>
          <target state="translated">현재 시간을 얻기 위해 &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 종속되지 않습니다. 오프셋은 지정된 시간대에서 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="6c6f86b6dab6dcd4e4a110a4462cc3e9b8289b36" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current year-month. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">현재 년 월을 얻기 위해 &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 종속되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="770bd27e885a9f0b88771df564df12dc7a17ee02" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; to obtain the current year. Specifying the time-zone avoids dependence on the default time-zone.</source>
          <target state="translated">현재 연도를 얻기 위해 &lt;a href=&quot;clock#system-java.time.ZoneId-&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대를 지정하면 기본 시간대에 종속되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="55e1cd2373890a650e142b19f3ce8f55003c0168" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date-time.</source>
          <target state="translated">이것은 현재 날짜-시간을 얻기 위해 기본 시간대 의 &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="e38cd59821854801b573dde473977a0d0fc2fc39" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date-time. The offset will be calculated from the time-zone in the clock.</source>
          <target state="translated">이것은 현재 날짜-시간을 얻기 위해 기본 시간대 의 &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 오프셋은 시계의 시간대에서 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="df68938c781136d1f61e1b6b2dd2f21e72201092" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date-time. The zone and offset will be set based on the time-zone in the clock.</source>
          <target state="translated">이것은 현재 날짜-시간을 얻기 위해 기본 시간대 의 &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 시간대와 오프셋은 시계의 시간대를 기준으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="094bdab27bbe9c27deac96bb3e445c9a0e46eca8" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date.</source>
          <target state="translated">이것은 현재 날짜를 얻기 위해 기본 시간대 의 &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="8403981f35cccf267846d902986c6eeb351ee307" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current month-day.</source>
          <target state="translated">이것은 현재 월-일을 얻기 위해 기본 시간대 의 &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="6c7fc8a9c8477f706a9a96d9c6a9b6a68ece7d70" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current time.</source>
          <target state="translated">이것은 현재 시간을 얻기 위해 기본 시간대 의 &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="80641d9cfd27b89266f1f2388766c7d1de0203fa" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current time. The offset will be calculated from the time-zone in the clock.</source>
          <target state="translated">이것은 현재 시간을 얻기 위해 기본 시간대 의 &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 오프셋은 시계의 시간대에서 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="90a0360b2883da7ff1f36c4e553dac0c74044ee6" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current year-month.</source>
          <target state="translated">이것은 현재 년-월을 얻기 위해 기본 시간대 의 &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="fcbb3771c9dc2793ab9558cdfe6a55646fbe34ef" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current year.</source>
          <target state="translated">현재 연도를 얻기 위해 기본 시간대 의 &lt;a href=&quot;clock#systemDefaultZone()&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="4b30385519a5d72e4a197ac6824fdeb31803d613" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date-time.</source>
          <target state="translated">이것은 쿼리합니다 &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 의 현재 날짜와 시간을 얻기 위해 기본 시간 영역을.</target>
        </trans-unit>
        <trans-unit id="3ce726aba1854603c8707ad4db9f6b85c2ef2632" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date-time. The offset will be calculated from the time-zone in the clock.</source>
          <target state="translated">이것은 쿼리합니다 &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 의 현재 날짜와 시간을 얻기 위해 기본 시간 영역을. 오프셋은 시계의 시간대에서 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="3d7e359999c96071dde4096430f18285388cd7b5" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date-time. The zone and offset will be set based on the time-zone in the clock.</source>
          <target state="translated">이것은 쿼리합니다 &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 의 현재 날짜와 시간을 얻기 위해 기본 시간 영역을. 시간대 및 오프셋은 시계의 시간대를 기준으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="3adff1aa350c98b0ea3203e87ff62393779ffd65" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current date.</source>
          <target state="translated">현재 시간을 얻기 위해 기본 시간대 의 &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="0349406cf4b8868af6b8306ec85731e4f6f75b08" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current month-day.</source>
          <target state="translated">이것은 현재 시간대를 얻기 위해 기본 시간대에서 &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 조회합니다 .</target>
        </trans-unit>
        <trans-unit id="bc5647c2131f117bd2ecdd62acb50fb78a955b58" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current time.</source>
          <target state="translated">현재 시간을 얻기 위해 기본 시간대 의 &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="e1be01c9423aa939291ac93f48bcac53d427c2a3" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current time. The offset will be calculated from the time-zone in the clock.</source>
          <target state="translated">현재 시간을 얻기 위해 기본 시간대 의 &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 . 오프셋은 시계의 시간대에서 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="6e31ca88d8bfcdf0d499745ce10c21a4bf4bf48d" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current year-month.</source>
          <target state="translated">현재 시간대를 얻기 위해 기본 시간대 의 &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="ab9de08ee82ae4786740e7b930d590cf4a6183ac" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt;&lt;code&gt;system clock&lt;/code&gt;&lt;/a&gt; in the default time-zone to obtain the current year.</source>
          <target state="translated">현재 시간대를 얻기 위해 기본 시간대 의 &lt;a href=&quot;clock#systemDefaultZone--&quot;&gt; &lt;code&gt;system clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="7e58be422231c8d742e4de9f3c17d0709a51ddc9" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemUTC()&quot;&gt;&lt;code&gt;system UTC clock&lt;/code&gt;&lt;/a&gt; to obtain the current instant.</source>
          <target state="translated">이것은 현재 순간을 얻기 위해 &lt;a href=&quot;clock#systemUTC()&quot;&gt; &lt;code&gt;system UTC clock&lt;/code&gt; &lt;/a&gt; 를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="f321f27144684e10d42dbb9bf339ee409ea0e88f" translate="yes" xml:space="preserve">
          <source>This will query the &lt;a href=&quot;clock#systemUTC--&quot;&gt;&lt;code&gt;system UTC clock&lt;/code&gt;&lt;/a&gt; to obtain the current instant.</source>
          <target state="translated">현재 &lt;a href=&quot;clock#systemUTC--&quot;&gt; &lt;code&gt;system UTC clock&lt;/code&gt; &lt;/a&gt; 를 얻기 위해 시스템 UTC 시계 를 쿼리합니다 .</target>
        </trans-unit>
        <trans-unit id="71a3c787ff1a4f93da19b797f10dcb8d33cf8745" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date - today. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;../clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 날짜를 쿼리하여 현재 날짜 (오늘)를 얻습니다. 이 방법을 사용하면 테스트를 위해 대체 시계를 사용할 수 있습니다. 대체 클럭은 &lt;a href=&quot;../clock&quot;&gt; &lt;code&gt;dependency injection&lt;/code&gt; &lt;/a&gt; 사용하여 도입 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="26c5245822e1245cd9ca0670bc71059f3444c0ef" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date - today. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;../clock&quot;&gt;dependency injection&lt;/a&gt;.</source>
          <target state="translated">지정된 날짜를 쿼리하여 현재 날짜 (오늘)를 얻습니다. 이 방법을 사용하면 테스트를 위해 대체 시계를 사용할 수 있습니다. 대체 클럭은 &lt;a href=&quot;../clock&quot;&gt;의존성 주입을&lt;/a&gt; 사용하여 도입 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d581abe1f1ca54266a7b3d0b574a865a1bd39666" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date - today. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 날짜를 쿼리하여 현재 날짜 (오늘)를 얻습니다. 이 방법을 사용하면 테스트를 위해 대체 시계를 사용할 수 있습니다. 대체 클럭은 &lt;a href=&quot;clock&quot;&gt; &lt;code&gt;dependency injection&lt;/code&gt; &lt;/a&gt; 사용하여 도입 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e6ecbbe86ade988c0f7af15d7c9e93a7cfbfe9df" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date-time. The offset will be calculated from the time-zone in the clock.</source>
          <target state="translated">현재 날짜-시간을 얻기 위해 지정된 시계를 쿼리합니다. 오프셋은 시계의 시간대에서 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="64464121176e6f8078cbf9b5bbaa582a773f52ff" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date-time. The zone and offset will be set based on the time-zone in the clock.</source>
          <target state="translated">현재 날짜-시간을 얻기 위해 지정된 시계를 쿼리합니다. 시간대 및 오프셋은 시계의 시간대를 기준으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="979323f8a1230cc1ff96b4264fede9355440178b" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current date-time. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현재 날짜-시간을 얻기 위해 지정된 시계를 쿼리합니다. 이 방법을 사용하면 테스트를 위해 대체 시계를 사용할 수 있습니다. 대체 클럭은 &lt;a href=&quot;clock&quot;&gt; &lt;code&gt;dependency injection&lt;/code&gt; &lt;/a&gt; 사용하여 도입 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="066349d83f341ec0776b2f0c8b118c0ac5f0c336" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current month-day. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현재 월-일을 얻기 위해 지정된 시계를 쿼리합니다. 이 방법을 사용하면 테스트를 위해 대체 시계를 사용할 수 있습니다. 대체 클럭은 &lt;a href=&quot;clock&quot;&gt; &lt;code&gt;dependency injection&lt;/code&gt; &lt;/a&gt; 사용하여 도입 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="54eee961956929aac90360979e3f61a8a40984a3" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current time.</source>
          <target state="translated">지정된 시간을 쿼리하여 현재 시간을 얻습니다.</target>
        </trans-unit>
        <trans-unit id="ca01b34fd4e3914216939e9c0d62dfd2005e282d" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current time. The offset will be calculated from the time-zone in the clock.</source>
          <target state="translated">지정된 시간을 쿼리하여 현재 시간을 얻습니다. 오프셋은 시계의 시간대에서 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="66524c4d69a7ed26367a83fe537172c3254f3f30" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current time. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지정된 시간을 쿼리하여 현재 시간을 얻습니다. 이 방법을 사용하면 테스트를 위해 대체 시계를 사용할 수 있습니다. 대체 클럭은 &lt;a href=&quot;clock&quot;&gt; &lt;code&gt;dependency injection&lt;/code&gt; &lt;/a&gt; 사용하여 도입 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="afb747cc0b3b1a469e438d1c2db15a64feb99a97" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current year-month. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현재 년 월을 얻기 위해 지정된 시계를 쿼리합니다. 이 방법을 사용하면 테스트를 위해 대체 시계를 사용할 수 있습니다. 대체 클럭은 &lt;a href=&quot;clock&quot;&gt; &lt;code&gt;dependency injection&lt;/code&gt; &lt;/a&gt; 사용하여 도입 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="13fe7e87e82c99d55ca687f561c4abf1d3b51724" translate="yes" xml:space="preserve">
          <source>This will query the specified clock to obtain the current year. Using this method allows the use of an alternate clock for testing. The alternate clock may be introduced using &lt;a href=&quot;clock&quot;&gt;&lt;code&gt;dependency injection&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현재 연도를 얻기 위해 지정된 시계를 쿼리합니다. 이 방법을 사용하면 테스트를 위해 대체 시계를 사용할 수 있습니다. 대체 클럭은 &lt;a href=&quot;clock&quot;&gt; &lt;code&gt;dependency injection&lt;/code&gt; &lt;/a&gt; 사용하여 도입 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c2e9917fb8c28705c77469341cdcf0b8b05ae375" translate="yes" xml:space="preserve">
          <source>This will register key bindings to show and hide the tooltip text only if &lt;code&gt;component&lt;/code&gt; has focus bindings. This is done so that components that are not normally focus traversable, such as &lt;code&gt;JLabel&lt;/code&gt;, are not made focus traversable as a result of invoking this method.</source>
          <target state="translated">이렇게하면 &lt;code&gt;component&lt;/code&gt; 에 포커스 바인딩이있는 경우에만 도구 설명 텍스트를 표시하고 숨기는 키 바인딩이 등록됩니다 . 이는 &lt;code&gt;JLabel&lt;/code&gt; 과 같이 일반적으로 포커스를 이동할 수없는 구성 요소 가이 메서드를 호출 한 결과 포커스를 탐색 할 수 없도록하기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="123021986b61edabe6c5c7972465bcdbd3f18d26" translate="yes" xml:space="preserve">
          <source>This will return &lt;code&gt;null&lt;/code&gt; if the UI has not installed an ActionMap.</source>
          <target state="translated">UI가 ActionMap을 설치하지 않은 경우 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="f51759ecd6c32d40763f0ea238ee168fc0a593a1" translate="yes" xml:space="preserve">
          <source>This will return &lt;code&gt;null&lt;/code&gt; if the UI has not installed an InputMap of the specified type.</source>
          <target state="translated">UI가 지정된 유형의 InputMap을 설치하지 않은 경우 &lt;code&gt;null&lt;/code&gt; 을 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="e036b6fc9e8cfa17742fa4ded7c21132de8ecb5a" translate="yes" xml:space="preserve">
          <source>This will return true for horizontal, left-to-right writing systems such as Roman.</source>
          <target state="translated">이것은 Roman과 같은 수평, 왼쪽에서 오른쪽 쓰기 시스템에 대해 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c76f87c08875c3c060f69802f808f11a363c8d21" translate="yes" xml:space="preserve">
          <source>This will return true if &lt;code&gt;action&lt;/code&gt; is non-&lt;code&gt;null&lt;/code&gt; and actionPerformed is invoked on it.</source>
          <target state="translated">&lt;code&gt;action&lt;/code&gt; 이 &lt;code&gt;null&lt;/code&gt; 이 아니고 actionPerformed가 호출 되면 true를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="dc00018208a6fb19f49eb297baa138555040e61d" translate="yes" xml:space="preserve">
          <source>This will return true if the text is layed out right to left at position, otherwise false.</source>
          <target state="translated">텍스트가 오른쪽에서 왼쪽으로 배치되면 true를 반환하고 그렇지 않으면 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="912496a0904835c01a2a3f627ed3e1de6dcfd427" translate="yes" xml:space="preserve">
          <source>This will throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; if the object passed in is not one of the afore mentioned values.</source>
          <target state="translated">이것은 던질 것이다 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 전달 개체도 앞서 언급 한 값 중 하나가 아닌 경우.</target>
        </trans-unit>
        <trans-unit id="a91b45e2d6cccd06373696da027c47e938806640" translate="yes" xml:space="preserve">
          <source>This will update the displayed mnemonic property for the specified tab.</source>
          <target state="translated">그러면 지정된 탭에 대해 표시된 니모닉 속성이 업데이트됩니다.</target>
        </trans-unit>
        <trans-unit id="cd390f8dfde647c926076af19a84c11f8de9d52d" translate="yes" xml:space="preserve">
          <source>This would allow an attacker to configure the system identity scope with certificates that should not be trusted, thereby granting applet or application code signed with those certificates privileges that would have been denied by the system's original identity scope.</source>
          <target state="translated">이를 통해 공격자는 신뢰할 수없는 인증서로 시스템 ID 범위를 구성하여 시스템의 원래 ID 범위에서 거부 된 해당 인증서로 서명 된 애플릿 또는 응용 프로그램 코드를 부여 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f4b372775693a3f3729fb4a12596b5f177dba17" translate="yes" xml:space="preserve">
          <source>This would allow an attacker to replace somebody else's (the &quot;target's&quot;) keypair with a possibly weaker keypair (e.g., a keypair of a smaller keysize). This also would allow the attacker to listen in on encrypted communication between the target and its peers. The target's peers might wrap an encryption session key under the target's &quot;new&quot; public key, which would allow the attacker (who possesses the corresponding private key) to unwrap the session key and decipher the communication data encrypted under that session key.</source>
          <target state="translated">이를 통해 침입자는 다른 사람 ( &quot;대상&quot;) 키 쌍을 더 약한 키 쌍 (예 : 더 작은 키 크기의 키 쌍)으로 바꿀 수 있습니다. 또한 공격자는 대상과 해당 피어 간의 암호화 된 통신을 수신 할 수 있습니다. 대상의 피어는 대상의 &quot;새&quot;공개 키 아래에 암호화 세션 키를 래핑하여 공격자 (해당 개인 키를 보유한)가 세션 키를 풀고 해당 세션 키에서 암호화 된 통신 데이터를 해독 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0c3287cbec2ba672203f22a68abe1da17bd16a41" translate="yes" xml:space="preserve">
          <source>This would allow code to read the particular file associated with the file descriptor read. This is dangerous if the file contains confidential data.</source>
          <target state="translated">이를 통해 코드는 파일 디스크립터 읽기와 연관된 특정 파일을 읽을 수 있습니다. 파일에 기밀 데이터가 포함되어 있으면 위험합니다.</target>
        </trans-unit>
        <trans-unit id="88b09ac9d75e1b34a75decabc7990049448779b0" translate="yes" xml:space="preserve">
          <source>This would allow code to read the value, or determine the existence, of a particular environment variable. This is dangerous if the variable contains confidential data.</source>
          <target state="translated">이를 통해 코드는 특정 환경 변수의 값을 읽거나 존재를 확인할 수 있습니다. 변수에 기밀 데이터가 포함되어 있으면 위험합니다.</target>
        </trans-unit>
        <trans-unit id="4cbfabfbb474646305c1c6c72e013cde70ebf828" translate="yes" xml:space="preserve">
          <source>This would allow malfeasant code to share potentially sensitive or confidential information.</source>
          <target state="translated">이렇게하면 악성 코드가 잠재적으로 민감하거나 기밀 정보를 공유 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ab0c0ea081779bc13fbe847295faf7b1c91f223c" translate="yes" xml:space="preserve">
          <source>This would allow malicious code to add tray icons to the system tray. First, such an icon may look like the icon of some known application (such as a firewall or anti-virus) and order a user to do something unsafe (with help of balloon messages). Second, the system tray may be glutted with tray icons so that no one could add a tray icon anymore.</source>
          <target state="translated">이렇게하면 악성 코드가 트레이 아이콘을 시스템 트레이에 추가 할 수 있습니다. 첫째, 이러한 아이콘은 알려진 응용 프로그램 (예 : 방화벽 또는 바이러스 백신)의 아이콘처럼 보일 수 있으며 사용자에게 안전하지 않은 작업 (풍선 메시지 사용)을 명령 할 수 있습니다. 둘째, 아무도 더 이상 트레이 아이콘을 추가 할 수 없도록 시스템 트레이에 트레이 아이콘이 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e78245f19ad38908342afcca7d4670ae693a02bd" translate="yes" xml:space="preserve">
          <source>This would allow somebody to introduce a possibly malicious provider (e.g., one that discloses the private keys passed to it) as the highest-priority provider. This would be possible because the Security object (which manages the installed providers) currently does not check the integrity or authenticity of a provider before attaching it.</source>
          <target state="translated">이를 통해 누군가는 악의적 인 공급자 (예 : 전달 된 개인 키를 공개하는 공급자)를 우선 순위가 높은 공급자로 소개 할 수 있습니다. 설치된 제공자를 관리하는 보안 오브젝트가 현재 제공자를 연결하기 전에 제공자의 무결성 또는 진위 여부를 확인하지 않기 때문에 가능합니다.</target>
        </trans-unit>
        <trans-unit id="6662c8190dbce153e597e67e53e732b988a736d7" translate="yes" xml:space="preserve">
          <source>This would allow somebody to introduce a possibly malicious provider (e.g., one that discloses the private keys passed to it) as the highest-priority provider. This would be possible because the Security object (which manages the installed providers) currently does not check the integrity or authenticity of a provider before attaching it. The &quot;insertProvider&quot; permission subsumes the &quot;insertProvider.{provider name}&quot; permission (see the section below for more information).</source>
          <target state="translated">이를 통해 누군가는 악의적 인 공급자 (예 : 전달 된 개인 키를 공개하는 공급자)를 우선 순위가 높은 공급자로 소개 할 수 있습니다. 설치된 제공자를 관리하는 보안 오브젝트가 현재 제공자를 연결하기 전에 제공자의 무결성 또는 진위 여부를 확인하지 않기 때문에 가능합니다. &quot;insertProvider&quot;권한은 &quot;insertProvider. {provider name}&quot;권한을 갖습니다 (자세한 내용은 아래 섹션 참조).</target>
        </trans-unit>
        <trans-unit id="1a78017524cd98bc8d0f44d22192a40383c71771" translate="yes" xml:space="preserve">
          <source>This would correspond to the following inner class implementation:</source>
          <target state="translated">이것은 다음과 같은 내부 클래스 구현에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="0e3055edf0bfd18992e0a6de528bcff05da3c9d7" translate="yes" xml:space="preserve">
          <source>This would grant an attacker permission to get the class loader for a particular class. This is dangerous because having access to a class's class loader allows the attacker to load other classes available to that class loader. The attacker would typically otherwise not have access to those classes.</source>
          <target state="translated">이를 통해 침입자는 특정 클래스에 대한 클래스 로더를 얻을 수있는 권한을 부여합니다. 클래스의 클래스 로더에 액세스하면 공격자가 해당 클래스 로더에 사용 가능한 다른 클래스를로드 할 수 있으므로 위험합니다. 공격자는 일반적으로 해당 클래스에 액세스 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1ad63d6825444e50e947e58c76661b32b65b26dc" translate="yes" xml:space="preserve">
          <source>This writeReplace method is invoked by serialization if the method exists and it would be accessible from a method defined within the class of the object being serialized. Thus, the method can have private, protected and package-private access. Subclass access to this method follows java accessibility rules.</source>
          <target state="translated">이 writeReplace 메소드는 메소드가 존재하고 직렬화되는 오브젝트의 클래스 내에 정의 된 메소드에서 액세스 할 수있는 경우 직렬화에 의해 호출됩니다. 따라서이 방법은 개인, 보호 및 패키지 개인 액세스 권한을 가질 수 있습니다. 이 메소드에 대한 서브 클래스 액세스는 Java 액세스 가능성 규칙을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="6153a4519f91fd5f347f26300009c2204cb88817" translate="yes" xml:space="preserve">
          <source>This writer</source>
          <target state="translated">이 작가</target>
        </trans-unit>
        <trans-unit id="b38908dca9805c5a238fb04ae01e8f4050fec50f" translate="yes" xml:space="preserve">
          <source>This year will be passed to the formatter to produce a string.</source>
          <target state="translated">올해는 문자열을 생성하기 위해 포맷터로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="3155e2890a538a42cabf40f857ade908fe129fd5" translate="yes" xml:space="preserve">
          <source>This year-month will be passed to the formatter to produce a string.</source>
          <target state="translated">올해는 월을 생성하기 위해 포맷터로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="ca2dc477b42bd28584c257d149ff8e2a45fa2af8" translate="yes" xml:space="preserve">
          <source>This zip entry</source>
          <target state="translated">이 지퍼 항목</target>
        </trans-unit>
        <trans-unit id="021dfe21335b14b4968e4b2ded3d2749b66ffb3d" translate="yes" xml:space="preserve">
          <source>Those that affect the namespace (add/remove/rename an object)</source>
          <target state="translated">네임 스페이스에 영향을 미치는 것들 (객체 추가 / 제거 / 이름 바꾸기)</target>
        </trans-unit>
        <trans-unit id="41d43c29f5ca524c1ab57ac963b166ac1727f85d" translate="yes" xml:space="preserve">
          <source>Those that affect the objects' contents.</source>
          <target state="translated">물체의 내용에 영향을 미치는 것.</target>
        </trans-unit>
        <trans-unit id="c1c1c09efdf88e487e46bf293447de4044e92720" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;null&lt;/code&gt; is a valid &lt;code&gt;name&lt;/code&gt;, when &lt;code&gt;getAttributes(null)&lt;/code&gt; is invoked on a &lt;code&gt;Manifest&lt;/code&gt; obtained from a jar file, &lt;code&gt;null&lt;/code&gt; will be returned. While jar files themselves do not allow &lt;code&gt;null&lt;/code&gt;-named attributes, it is possible to invoke &lt;a href=&quot;#getEntries()&quot;&gt;&lt;code&gt;getEntries()&lt;/code&gt;&lt;/a&gt; on a &lt;code&gt;Manifest&lt;/code&gt;, and on that result, invoke &lt;code&gt;put&lt;/code&gt; with a null key and an arbitrary value. Subsequent invocations of &lt;code&gt;getAttributes(null)&lt;/code&gt; will return the just-&lt;code&gt;put&lt;/code&gt; value.</source>
          <target state="translated">하지만 &lt;code&gt;null&lt;/code&gt; 유효하다 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;getAttributes(null)&lt;/code&gt; A의 호출 &lt;code&gt;Manifest&lt;/code&gt; jar 파일에서 얻은, &lt;code&gt;null&lt;/code&gt; 가 반환됩니다. 단지 자체가 허용하지 않는 파일 동안 &lt;code&gt;null&lt;/code&gt; 속성을 -named, 호출 할 수 있습니다 &lt;a href=&quot;#getEntries()&quot;&gt; &lt;code&gt;getEntries()&lt;/code&gt; &lt;/a&gt; A의 &lt;code&gt;Manifest&lt;/code&gt; 호출하고, 그 결과에 &lt;code&gt;put&lt;/code&gt; 널 키와 임의의 값. 의 후속 호출 &lt;code&gt;getAttributes(null)&lt;/code&gt; 꺼야 단지 .. 돌아갑니다 &lt;code&gt;put&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="f2257a9a6819dd695a05d6dfb0d9d438845c5a51" translate="yes" xml:space="preserve">
          <source>Though &lt;code&gt;null&lt;/code&gt; is a valid &lt;code&gt;name&lt;/code&gt;, when &lt;code&gt;getAttributes(null)&lt;/code&gt; is invoked on a &lt;code&gt;Manifest&lt;/code&gt; obtained from a jar file, &lt;code&gt;null&lt;/code&gt; will be returned. While jar files themselves do not allow &lt;code&gt;null&lt;/code&gt;-named attributes, it is possible to invoke &lt;a href=&quot;manifest#getEntries--&quot;&gt;&lt;code&gt;getEntries()&lt;/code&gt;&lt;/a&gt; on a &lt;code&gt;Manifest&lt;/code&gt;, and on that result, invoke &lt;code&gt;put&lt;/code&gt; with a null key and an arbitrary value. Subsequent invocations of &lt;code&gt;getAttributes(null)&lt;/code&gt; will return the just-&lt;code&gt;put&lt;/code&gt; value.</source>
          <target state="translated">하지만 &lt;code&gt;null&lt;/code&gt; 유효하다 &lt;code&gt;name&lt;/code&gt; , &lt;code&gt;getAttributes(null)&lt;/code&gt; A의 호출 &lt;code&gt;Manifest&lt;/code&gt; jar 파일에서 얻은, &lt;code&gt;null&lt;/code&gt; 가 반환됩니다. 단지 자체가 허용하지 않는 파일 동안 &lt;code&gt;null&lt;/code&gt; 속성을 -named, 호출 할 수 있습니다 &lt;a href=&quot;manifest#getEntries--&quot;&gt; &lt;code&gt;getEntries()&lt;/code&gt; &lt;/a&gt; A의 &lt;code&gt;Manifest&lt;/code&gt; 호출하고, 그 결과에 &lt;code&gt;put&lt;/code&gt; 널 키와 임의의 값. &lt;code&gt;getAttributes(null)&lt;/code&gt; 의 후속 호출은 just- &lt;code&gt;put&lt;/code&gt; 값입니다.</target>
        </trans-unit>
        <trans-unit id="dc7726b449187faa9ac0fce42a6b634bcfe416bd" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;Option.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;optional#isPresent--&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇게 하고 &lt;code&gt;Option.empty()&lt;/code&gt; 반환 한 인스턴스 와 &lt;code&gt;==&lt;/code&gt; 를 비교하여 객체가 비어 있는지 테스트하지 마십시오 . 싱글 톤이라는 보장은 없습니다. 대신 &lt;a href=&quot;optional#isPresent--&quot;&gt; &lt;code&gt;isPresent()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="91a4ed9dd4cd840a425d290fb66814a060470728" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;Option.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;optionaldouble#isPresent--&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇게 하고 &lt;code&gt;Option.empty()&lt;/code&gt; 반환 한 인스턴스 와 &lt;code&gt;==&lt;/code&gt; 를 비교하여 객체가 비어 있는지 테스트하지 마십시오 . 싱글 톤이라는 보장은 없습니다. 대신 &lt;a href=&quot;optionaldouble#isPresent--&quot;&gt; &lt;code&gt;isPresent()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="77aae136cefeffc558a45b9df9b56e6e43f74883" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;Option.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;optionalint#isPresent--&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇게 하고 &lt;code&gt;Option.empty()&lt;/code&gt; 반환 한 인스턴스 와 &lt;code&gt;==&lt;/code&gt; 를 비교하여 객체가 비어 있는지 테스트하지 마십시오 . 싱글 톤이라는 보장은 없습니다. 대신 &lt;a href=&quot;optionalint#isPresent--&quot;&gt; &lt;code&gt;isPresent()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="e62e1ce6b1ba7918fdd05b0b1bc91e6d3a38ca00" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;Option.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;optionallong#isPresent--&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇게 하고 &lt;code&gt;Option.empty()&lt;/code&gt; 반환 한 인스턴스 와 &lt;code&gt;==&lt;/code&gt; 를 비교하여 객체가 비어 있는지 테스트하지 마십시오 . 싱글 톤이라는 보장은 없습니다. 대신 &lt;a href=&quot;optionallong#isPresent--&quot;&gt; &lt;code&gt;isPresent()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c3dc345dd3c212c59813309c93cfb6cce6dbc97e" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;Optional.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;#isPresent()&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇게하는 것이 유혹적 일 수 있지만, &lt;code&gt;Optional.empty()&lt;/code&gt; 반환 된 인스턴스 와 &lt;code&gt;==&lt;/code&gt; 와 비교하여 객체가 비어 있는지 테스트하지 마십시오 . 싱글 톤이라는 보장은 없습니다. 대신 &lt;a href=&quot;#isPresent()&quot;&gt; &lt;code&gt;isPresent()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="ca102c88d30d7335b0e3bf6217ececc55555b19d" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;OptionalDouble.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;#isPresent()&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇게하는 것이 유혹적 일 수 있지만, &lt;code&gt;OptionalDouble.empty()&lt;/code&gt; 반환 된 인스턴스 와 &lt;code&gt;==&lt;/code&gt; 와 비교하여 객체가 비어 있는지 테스트하지 마십시오 . 싱글 톤이라는 보장은 없습니다. 대신 &lt;a href=&quot;#isPresent()&quot;&gt; &lt;code&gt;isPresent()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="7bfc87b8730ab001eaa391027afbe9e6bedfaadb" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;OptionalInt.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;#isPresent()&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇게하는 것이 유혹적 일 수 있지만, &lt;code&gt;OptionalInt.empty()&lt;/code&gt; 반환 된 인스턴스 와 &lt;code&gt;==&lt;/code&gt; 와 비교하여 객체가 비어 있는지 테스트하지 마십시오 . 싱글 톤이라는 보장은 없습니다. 대신 &lt;a href=&quot;#isPresent()&quot;&gt; &lt;code&gt;isPresent()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="2d94b7fc01e59d72cf5eb2bb51150f613f355b05" translate="yes" xml:space="preserve">
          <source>Though it may be tempting to do so, avoid testing if an object is empty by comparing with &lt;code&gt;==&lt;/code&gt; against instances returned by &lt;code&gt;OptionalLong.empty()&lt;/code&gt;. There is no guarantee that it is a singleton. Instead, use &lt;a href=&quot;#isPresent()&quot;&gt;&lt;code&gt;isPresent()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">그렇게하는 것이 유혹적 일 수 있지만, &lt;code&gt;OptionalLong.empty()&lt;/code&gt; 반환 한 인스턴스 와 &lt;code&gt;==&lt;/code&gt; 와 비교하여 객체가 비어 있는지 테스트하지 마십시오 . 싱글 톤이라는 보장은 없습니다. 대신 &lt;a href=&quot;#isPresent()&quot;&gt; &lt;code&gt;isPresent()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="172d058e561fbad190c87f42005f6b323df0602b" translate="yes" xml:space="preserve">
          <source>Though the class is abstract, this should be called by all sub-classes.</source>
          <target state="translated">클래스는 추상적이지만 모든 하위 클래스에서 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="7863f7503e5377891a3b7452c7d6cc377d443fe7" translate="yes" xml:space="preserve">
          <source>Thread</source>
          <target state="translated">Thread</target>
        </trans-unit>
        <trans-unit id="b38699fda488b7482936986c498a536c22765ae1" translate="yes" xml:space="preserve">
          <source>Thread &lt;var&gt;T&lt;/var&gt; is awakened spuriously. (See below.)</source>
          <target state="translated">스레드 &lt;var&gt;T&lt;/var&gt; 가 가짜로 깨어납니다. (아래 참조)</target>
        </trans-unit>
        <trans-unit id="82c156be42f44539fe0b88299d8861156fe936d0" translate="yes" xml:space="preserve">
          <source>Thread &lt;var&gt;T&lt;/var&gt; then becomes disabled for thread scheduling purposes and lies dormant until one of the following occurs:</source>
          <target state="translated">그러면 스레드 &lt;var&gt;T&lt;/var&gt; 가 스레드 스케줄링 목적으로 비활성화되고 다음 중 하나가 발생할 때까지 휴면 상태에 있습니다.</target>
        </trans-unit>
        <trans-unit id="47da6895e1e6b88393c30e25b50c55119b8f50a9" translate="yes" xml:space="preserve">
          <source>Thread CPU time</source>
          <target state="translated">스레드 CPU 시간</target>
        </trans-unit>
        <trans-unit id="2b5c53fe9a4d8244bf0c25a63e7182e6adff93b7" translate="yes" xml:space="preserve">
          <source>Thread Contention Monitoring</source>
          <target state="translated">스레드 경합 모니터링</target>
        </trans-unit>
        <trans-unit id="e36518333df71af3800afef11101d5e994956a61" translate="yes" xml:space="preserve">
          <source>Thread ID</source>
          <target state="translated">스레드 ID</target>
        </trans-unit>
        <trans-unit id="8966395c230e01509af40eaad7d13451c363a8d1" translate="yes" xml:space="preserve">
          <source>Thread ID is a positive long value returned by calling the &lt;a href=&quot;../../../../java.base/java/lang/thread#getId()&quot;&gt;&lt;code&gt;Thread.getId()&lt;/code&gt;&lt;/a&gt; method for a thread. The thread ID is unique during its lifetime. When a thread is terminated, this thread ID may be reused.</source>
          <target state="translated">스레드 ID는 스레드에 대해 &lt;a href=&quot;../../../../java.base/java/lang/thread#getId()&quot;&gt; &lt;code&gt;Thread.getId()&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 반환되는 양의 long 값 입니다. 스레드 ID는 수명 동안 고유합니다. 스레드가 종료되면이 스레드 ID를 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f76e42195d15468b3b9fa18723e7fa6b81585ed" translate="yes" xml:space="preserve">
          <source>Thread ID is a positive long value returned by calling the &lt;a href=&quot;../thread#getId--&quot;&gt;&lt;code&gt;Thread.getId()&lt;/code&gt;&lt;/a&gt; method for a thread. The thread ID is unique during its lifetime. When a thread is terminated, this thread ID may be reused.</source>
          <target state="translated">스레드 ID는 스레드에 대해 &lt;a href=&quot;../thread#getId--&quot;&gt; &lt;code&gt;Thread.getId()&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 리턴 된 양의 long 값 입니다. 스레드 ID는 수명 동안 고유합니다. 스레드가 종료되면이 스레드 ID가 재사용 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="709e7d50f757d668c561bcdc2ac04e1234cd811b" translate="yes" xml:space="preserve">
          <source>Thread ID.</source>
          <target state="translated">스레드 ID</target>
        </trans-unit>
        <trans-unit id="decc9ddc6ccf02c9a5756c9d56cc2fbaf1b269a8" translate="yes" xml:space="preserve">
          <source>Thread confinement</source>
          <target state="translated">스레드 제한</target>
        </trans-unit>
        <trans-unit id="4951041fa59248144f5ebbfd84aeac5ab159b5bd" translate="yes" xml:space="preserve">
          <source>Thread filters allow control over the thread for which events are generated.</source>
          <target state="translated">스레드 필터를 사용하면 이벤트가 생성되는 스레드를 제어 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a3e08a6a8a038b968e3f09ce256b0dafb9d3d418" translate="yes" xml:space="preserve">
          <source>Thread has completed execution</source>
          <target state="translated">스레드가 실행을 완료했습니다.</target>
        </trans-unit>
        <trans-unit id="0825558e2b7fc0a45e2f74cacdf1bdf02b87df6e" translate="yes" xml:space="preserve">
          <source>Thread has not yet been started</source>
          <target state="translated">스레드가 아직 시작되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="db928b13a70f56d0745b7f5a1040b50baa958b5a" translate="yes" xml:space="preserve">
          <source>Thread information.</source>
          <target state="translated">스레드 정보.</target>
        </trans-unit>
        <trans-unit id="d3e04278e885f30adacf4ed40fd0d643789254ec" translate="yes" xml:space="preserve">
          <source>Thread information. &lt;code&gt;ThreadInfo&lt;/code&gt; contains the information about a thread including:</source>
          <target state="translated">스레드 정보. &lt;code&gt;ThreadInfo&lt;/code&gt; 에는 다음을 포함하여 스레드에 대한 정보가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="7eeaeec83aecd2a1149e18cd1e9b6a72b2e35dad" translate="yes" xml:space="preserve">
          <source>Thread is runnable</source>
          <target state="translated">스레드가 실행 가능합니다.</target>
        </trans-unit>
        <trans-unit id="cb04826123975c6ce46ed51c4d676fcb2fb0db1b" translate="yes" xml:space="preserve">
          <source>Thread is sleeping - Thread.sleep() or JVM_Sleep() was called</source>
          <target state="translated">Thread is sleeping-Thread.sleep () 또는 JVM_Sleep ()이 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="e2376b5b3566ee794a1d2b62a5d8dbc31709bc2a" translate="yes" xml:space="preserve">
          <source>Thread is waiting - Object.wait() or JVM_MonitorWait() was called</source>
          <target state="translated">스레드 대기 중-Object.wait () 또는 JVM_MonitorWait ()가 호출되었습니다.</target>
        </trans-unit>
        <trans-unit id="e087babe8f322a04e34b171ac5428952c1f348e5" translate="yes" xml:space="preserve">
          <source>Thread is waiting on a java monitor</source>
          <target state="translated">스레드가 Java 모니터에서 대기 중입니다.</target>
        </trans-unit>
        <trans-unit id="245257161e6583b400ed0b2e4c375d5c08cf3d19" translate="yes" xml:space="preserve">
          <source>Thread pools address two different problems: they usually provide improved performance when executing large numbers of asynchronous tasks, due to reduced per-task invocation overhead, and they provide a means of bounding and managing the resources, including threads, consumed when executing a collection of tasks. Each &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; also maintains some basic statistics, such as the number of completed tasks.</source>
          <target state="translated">스레드 풀은 두 가지 다른 문제를 해결합니다. 일반적으로 작업 당 호출 오버 헤드 감소로 인해 많은 수의 비동기 작업을 실행할 때 성능이 향상되고 스레드를 포함하여 자원을 바인드하고 관리하는 방법을 제공합니다. 작업. 각 &lt;code&gt;ThreadPoolExecutor&lt;/code&gt; 는 완료된 작업 수와 같은 몇 가지 기본 통계도 유지합니다.</target>
        </trans-unit>
        <trans-unit id="498b8432f46fddf13062facb9c2bd487eddb870e" translate="yes" xml:space="preserve">
          <source>Thread priority</source>
          <target state="translated">스레드 우선 순위</target>
        </trans-unit>
        <trans-unit id="d0cef5deb223649da3c92e68bafacf5c8ccd785e" translate="yes" xml:space="preserve">
          <source>Thread safety</source>
          <target state="translated">스레드 안전</target>
        </trans-unit>
        <trans-unit id="72809a8293d05a6a9382d9942b9b926564a1c746" translate="yes" xml:space="preserve">
          <source>Thread state for a runnable thread.</source>
          <target state="translated">실행 가능한 스레드의 스레드 상태입니다.</target>
        </trans-unit>
        <trans-unit id="65e27057aee71462f8ef5ca1cc912182af819db7" translate="yes" xml:space="preserve">
          <source>Thread state for a runnable thread. A thread in the runnable state is executing in the Java virtual machine but it may be waiting for other resources from the operating system such as processor.</source>
          <target state="translated">실행 가능한 스레드의 스레드 상태입니다. 실행 가능 상태의 스레드가 JVM (Java Virtual Machine)에서 실행 중이지만 프로세서와 같은 운영 체제의 다른 자원을 기다리는 중일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="df6c8dd552273072e97ea4c8472d6e96a96d8574" translate="yes" xml:space="preserve">
          <source>Thread state for a terminated thread.</source>
          <target state="translated">종료 된 스레드의 스레드 상태입니다.</target>
        </trans-unit>
        <trans-unit id="8a1446e3c3300c50d045828f33142928402b6b95" translate="yes" xml:space="preserve">
          <source>Thread state for a terminated thread. The thread has completed execution.</source>
          <target state="translated">종료 된 스레드의 스레드 상태 스레드가 실행을 완료했습니다.</target>
        </trans-unit>
        <trans-unit id="73e0ba0f7aeec2eb8c7b530fbb30e6ff959660f0" translate="yes" xml:space="preserve">
          <source>Thread state for a thread blocked waiting for a monitor lock.</source>
          <target state="translated">모니터 잠금을 기다리는 차단 된 스레드의 스레드 상태입니다.</target>
        </trans-unit>
        <trans-unit id="a175dece080502f182a4ac14b2aecbff3d430faa" translate="yes" xml:space="preserve">
          <source>Thread state for a thread blocked waiting for a monitor lock. A thread in the blocked state is waiting for a monitor lock to enter a synchronized block/method or reenter a synchronized block/method after calling &lt;a href=&quot;object#wait()&quot;&gt;&lt;code&gt;Object.wait&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">모니터 잠금을 기다리는 차단 된 스레드의 스레드 상태입니다. 차단 된 상태의 스레드는 모니터 잠금이 동기화 된 블록 / 메서드로 들어가거나 &lt;a href=&quot;object#wait()&quot;&gt; &lt;code&gt;Object.wait&lt;/code&gt; &lt;/a&gt; 를 호출 한 후 동기화 된 블록 / 메소드로 다시 들어가기를 기다리고 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a31282db01ce2b51fcf38902248613f6ffba8e0" translate="yes" xml:space="preserve">
          <source>Thread state for a thread blocked waiting for a monitor lock. A thread in the blocked state is waiting for a monitor lock to enter a synchronized block/method or reenter a synchronized block/method after calling &lt;a href=&quot;object#wait--&quot;&gt;&lt;code&gt;Object.wait&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">스레드의 스레드 상태가 모니터 잠금 대기를 차단했습니다. 차단 된 상태의 스레드가 모니터 잠금이 동기화 된 블록 / 방법으로 들어가기를 기다리거나 &lt;a href=&quot;object#wait--&quot;&gt; &lt;code&gt;Object.wait&lt;/code&gt; &lt;/a&gt; 를 호출 한 후 동기화 된 블록 / 방법을 다시 입력합니다. .</target>
        </trans-unit>
        <trans-unit id="48710439938209a9068defb0dd2b0bf3e76f0613" translate="yes" xml:space="preserve">
          <source>Thread state for a thread which has not yet started.</source>
          <target state="translated">아직 시작되지 않은 스레드의 스레드 상태.</target>
        </trans-unit>
        <trans-unit id="af284d1da127cbc526d950ced6e4a90d2475d1b7" translate="yes" xml:space="preserve">
          <source>Thread state for a waiting thread with a specified waiting time.</source>
          <target state="translated">지정된 대기 시간이있는 대기 스레드의 스레드 상태입니다.</target>
        </trans-unit>
        <trans-unit id="7a7250ddba064781f1554cf011ff62ae96e59908" translate="yes" xml:space="preserve">
          <source>Thread state for a waiting thread with a specified waiting time. A thread is in the timed waiting state due to calling one of the following methods with a specified positive waiting time:</source>
          <target state="translated">대기 시간이 지정된 대기 스레드의 스레드 상태입니다. 지정된 양의 대기 시간으로 다음 방법 중 하나를 호출하여 스레드가 시간 대기 상태에 있습니다.</target>
        </trans-unit>
        <trans-unit id="b54bff3c8b87140de825890e79a5df2c5842fbea" translate="yes" xml:space="preserve">
          <source>Thread state for a waiting thread.</source>
          <target state="translated">대기중인 스레드의 스레드 상태입니다.</target>
        </trans-unit>
        <trans-unit id="941d814bdcb829ba77fc90cf8890778199edba85" translate="yes" xml:space="preserve">
          <source>Thread state for a waiting thread. A thread is in the waiting state due to calling one of the following methods:</source>
          <target state="translated">대기중인 스레드의 스레드 상태 다음 메소드 중 하나를 호출하여 스레드가 대기 상태에 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f1ce44fa0295a976b81d62000e1b31dbca131c4" translate="yes" xml:space="preserve">
          <source>Thread state.</source>
          <target state="translated">스레드 상태.</target>
        </trans-unit>
        <trans-unit id="e128f3449d069ef6b583f18918df98231fb4d7e4" translate="yes" xml:space="preserve">
          <source>Thread status is unknown</source>
          <target state="translated">스레드 상태를 알 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="48b8a713b2305b4293d7fbdc69d9d2dcd0e06979" translate="yes" xml:space="preserve">
          <source>Thread suspensions through events have the same functionality as explicitly requested suspensions. See &lt;a href=&quot;../threadreference#suspend()&quot;&gt;&lt;code&gt;ThreadReference.suspend()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../virtualmachine#suspend()&quot;&gt;&lt;code&gt;VirtualMachine.suspend()&lt;/code&gt;&lt;/a&gt; for details.</source>
          <target state="translated">이벤트를 통한 스레드 일시 중단은 명시 적으로 요청 된 일시 중단과 동일한 기능을 갖습니다. 자세한 내용은 &lt;a href=&quot;../threadreference#suspend()&quot;&gt; &lt;code&gt;ThreadReference.suspend()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../virtualmachine#suspend()&quot;&gt; &lt;code&gt;VirtualMachine.suspend()&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="37915ecf8d3fbed9a5eee81ef2911cbb3a5e3207" translate="yes" xml:space="preserve">
          <source>Thread.State</source>
          <target state="translated">Thread.State</target>
        </trans-unit>
        <trans-unit id="227b8c08cb3e154fa0c97f680236579b595d2cdf" translate="yes" xml:space="preserve">
          <source>Thread.State.valueOf()</source>
          <target state="translated">Thread.State.valueOf()</target>
        </trans-unit>
        <trans-unit id="eab39abeba8f1421cd199818dca838a9a46b93d6" translate="yes" xml:space="preserve">
          <source>Thread.State.values()</source>
          <target state="translated">Thread.State.values()</target>
        </trans-unit>
        <trans-unit id="3b1e1ddec40a1768b399e0e7edd5a51d8ac63a2f" translate="yes" xml:space="preserve">
          <source>Thread.UncaughtExceptionHandler</source>
          <target state="translated">Thread.UncaughtExceptionHandler</target>
        </trans-unit>
        <trans-unit id="b2907aff7a7f3b35e8c36c18838b4cc8379af99b" translate="yes" xml:space="preserve">
          <source>Thread.UncaughtExceptionHandler.uncaughtException()</source>
          <target state="translated">Thread.UncaughtExceptionHandler.uncaughtException()</target>
        </trans-unit>
        <trans-unit id="017eeed09c879121d0e05abd5fe58899b43d4ea0" translate="yes" xml:space="preserve">
          <source>Thread.activeCount()</source>
          <target state="translated">Thread.activeCount()</target>
        </trans-unit>
        <trans-unit id="999d0445f342e796eca1980b7690afdcb5158b12" translate="yes" xml:space="preserve">
          <source>Thread.checkAccess()</source>
          <target state="translated">Thread.checkAccess()</target>
        </trans-unit>
        <trans-unit id="f2c765012cdb2c99f4040d45437af41d1440bb47" translate="yes" xml:space="preserve">
          <source>Thread.clone()</source>
          <target state="translated">Thread.clone()</target>
        </trans-unit>
        <trans-unit id="c8a71b66c4398d49d8980ac355b64a2eebcf7856" translate="yes" xml:space="preserve">
          <source>Thread.countStackFrames()</source>
          <target state="translated">Thread.countStackFrames()</target>
        </trans-unit>
        <trans-unit id="14d63f03738836e668f5f71f9e55e8365a75ae1b" translate="yes" xml:space="preserve">
          <source>Thread.currentThread()</source>
          <target state="translated">Thread.currentThread()</target>
        </trans-unit>
        <trans-unit id="a17a2ac01af96173a4c81f70feeeb92bf1433728" translate="yes" xml:space="preserve">
          <source>Thread.destroy()</source>
          <target state="translated">Thread.destroy()</target>
        </trans-unit>
        <trans-unit id="44c77da31f926c9d694c2a498f020854d765caf6" translate="yes" xml:space="preserve">
          <source>Thread.dumpStack()</source>
          <target state="translated">Thread.dumpStack()</target>
        </trans-unit>
        <trans-unit id="ecc7a70e392fa8cc950aaac5e645a2e789efc731" translate="yes" xml:space="preserve">
          <source>Thread.enumerate()</source>
          <target state="translated">Thread.enumerate()</target>
        </trans-unit>
        <trans-unit id="31cf59305d3b9681e3d76421833bfc1166f6f122" translate="yes" xml:space="preserve">
          <source>Thread.getAllStackTraces()</source>
          <target state="translated">Thread.getAllStackTraces()</target>
        </trans-unit>
        <trans-unit id="1649662c849479f9870629ce2cab73c37e20eedb" translate="yes" xml:space="preserve">
          <source>Thread.getContextClassLoader()</source>
          <target state="translated">Thread.getContextClassLoader()</target>
        </trans-unit>
        <trans-unit id="5a412458b1b23392b311b35cf5bb335105a370fb" translate="yes" xml:space="preserve">
          <source>Thread.getDefaultUncaughtExceptionHandler()</source>
          <target state="translated">Thread.getDefaultUncaughtExceptionHandler()</target>
        </trans-unit>
        <trans-unit id="16f1a575881cc5847fafd379ea1d9d300fa44c53" translate="yes" xml:space="preserve">
          <source>Thread.getId()</source>
          <target state="translated">Thread.getId()</target>
        </trans-unit>
        <trans-unit id="6a0dabdeb42a3697bd9fac5a96a70d14fb3c58df" translate="yes" xml:space="preserve">
          <source>Thread.getName()</source>
          <target state="translated">Thread.getName()</target>
        </trans-unit>
        <trans-unit id="b6170d84660464b3f7f949e18707f34c2e85ee8f" translate="yes" xml:space="preserve">
          <source>Thread.getPriority()</source>
          <target state="translated">Thread.getPriority()</target>
        </trans-unit>
        <trans-unit id="26f9e3f0516e77b15937f086b1eeb053b130f252" translate="yes" xml:space="preserve">
          <source>Thread.getStackTrace()</source>
          <target state="translated">Thread.getStackTrace()</target>
        </trans-unit>
        <trans-unit id="71ac7c92823b4424bc7162bb1b89de74457ffce4" translate="yes" xml:space="preserve">
          <source>Thread.getState()</source>
          <target state="translated">Thread.getState()</target>
        </trans-unit>
        <trans-unit id="e12f6eb305e7411829c51497fd129040d275818a" translate="yes" xml:space="preserve">
          <source>Thread.getThreadGroup()</source>
          <target state="translated">Thread.getThreadGroup()</target>
        </trans-unit>
        <trans-unit id="f7f7ae37d7deb49b7be39a8b531af9d469695dc6" translate="yes" xml:space="preserve">
          <source>Thread.getUncaughtExceptionHandler()</source>
          <target state="translated">Thread.getUncaughtExceptionHandler()</target>
        </trans-unit>
        <trans-unit id="d1aff596760ca7e8dc9570a3667e4b946bf25433" translate="yes" xml:space="preserve">
          <source>Thread.holdsLock()</source>
          <target state="translated">Thread.holdsLock()</target>
        </trans-unit>
        <trans-unit id="0c679e1ae42be00487fdd2405b3876efe6e45677" translate="yes" xml:space="preserve">
          <source>Thread.interrupt()</source>
          <target state="translated">Thread.interrupt()</target>
        </trans-unit>
        <trans-unit id="d0f93e9cceb068dd91c27b2e8f651777100317b6" translate="yes" xml:space="preserve">
          <source>Thread.interrupted()</source>
          <target state="translated">Thread.interrupted()</target>
        </trans-unit>
        <trans-unit id="31066e35d013a30e202a803a47b8519877c009eb" translate="yes" xml:space="preserve">
          <source>Thread.isAlive()</source>
          <target state="translated">Thread.isAlive()</target>
        </trans-unit>
        <trans-unit id="5d05ccb7edc96d5f1ad39a8d33098b7143a0cd91" translate="yes" xml:space="preserve">
          <source>Thread.isDaemon()</source>
          <target state="translated">Thread.isDaemon()</target>
        </trans-unit>
        <trans-unit id="9678dd137c825627a6ae3fdeaa3c4c9a489db969" translate="yes" xml:space="preserve">
          <source>Thread.isInterrupted()</source>
          <target state="translated">Thread.isInterrupted()</target>
        </trans-unit>
        <trans-unit id="073de4e92c9d623f1bd8b870a9e735df18ae281c" translate="yes" xml:space="preserve">
          <source>Thread.join()</source>
          <target state="translated">Thread.join()</target>
        </trans-unit>
        <trans-unit id="b729d431e0b564d96dc90f2bed4afecb0ecd0b33" translate="yes" xml:space="preserve">
          <source>Thread.resume()</source>
          <target state="translated">Thread.resume()</target>
        </trans-unit>
        <trans-unit id="e2d01b8112bf5d5ce95d8ab511e5f58e457b4ebd" translate="yes" xml:space="preserve">
          <source>Thread.run()</source>
          <target state="translated">Thread.run()</target>
        </trans-unit>
        <trans-unit id="2eeb3ea9181940cd157763e860fcc2d31214fef8" translate="yes" xml:space="preserve">
          <source>Thread.setContextClassLoader()</source>
          <target state="translated">Thread.setContextClassLoader()</target>
        </trans-unit>
        <trans-unit id="e6bba6264d61a80c3b03757c36a799fbd9a9a8a5" translate="yes" xml:space="preserve">
          <source>Thread.setDaemon()</source>
          <target state="translated">Thread.setDaemon()</target>
        </trans-unit>
        <trans-unit id="51fc3228f0259239be05e033ff097a6e05bc88e8" translate="yes" xml:space="preserve">
          <source>Thread.setDefaultUncaughtExceptionHandler()</source>
          <target state="translated">Thread.setDefaultUncaughtExceptionHandler()</target>
        </trans-unit>
        <trans-unit id="d2500dc1d856ba3e2e8480d5653722c0d4b94520" translate="yes" xml:space="preserve">
          <source>Thread.setName()</source>
          <target state="translated">Thread.setName()</target>
        </trans-unit>
        <trans-unit id="ef7bd4ccc7035bdacfccfa2c76e7fc3418d5acc3" translate="yes" xml:space="preserve">
          <source>Thread.setPriority()</source>
          <target state="translated">Thread.setPriority()</target>
        </trans-unit>
        <trans-unit id="00b42ae30a214ac4d46dbd095019858a956a56fa" translate="yes" xml:space="preserve">
          <source>Thread.setUncaughtExceptionHandler()</source>
          <target state="translated">Thread.setUncaughtExceptionHandler()</target>
        </trans-unit>
        <trans-unit id="03ccf24176b10508883d0f15c0a5b719b142f622" translate="yes" xml:space="preserve">
          <source>Thread.sleep()</source>
          <target state="translated">Thread.sleep()</target>
        </trans-unit>
        <trans-unit id="c6a87556f30c1e309db6481c92974797e01b0d3c" translate="yes" xml:space="preserve">
          <source>Thread.start()</source>
          <target state="translated">Thread.start()</target>
        </trans-unit>
        <trans-unit id="8df1b2c26de1f0e2c12a00e7f10d398fe12ce9c4" translate="yes" xml:space="preserve">
          <source>Thread.stop()</source>
          <target state="translated">Thread.stop()</target>
        </trans-unit>
        <trans-unit id="947baa5d0e303b1e099f6774b4ba07547fc1ac61" translate="yes" xml:space="preserve">
          <source>Thread.suspend()</source>
          <target state="translated">Thread.suspend()</target>
        </trans-unit>
        <trans-unit id="821acae9dc94b56c58d6278790aa30ffa5fee076" translate="yes" xml:space="preserve">
          <source>Thread.toString()</source>
          <target state="translated">Thread.toString()</target>
        </trans-unit>
        <trans-unit id="c3a7b2ce085b6df3fdd37512478dfb38b0c3a7e0" translate="yes" xml:space="preserve">
          <source>Thread.yield()</source>
          <target state="translated">Thread.yield()</target>
        </trans-unit>
        <trans-unit id="2023533734ec13e574b188e53e027097d56ed4e2" translate="yes" xml:space="preserve">
          <source>ThreadDeath</source>
          <target state="translated">ThreadDeath</target>
        </trans-unit>
        <trans-unit id="0bf665c1a36299fe0d6de351ae18e421a763e4a6" translate="yes" xml:space="preserve">
          <source>ThreadDeathEvent</source>
          <target state="translated">ThreadDeathEvent</target>
        </trans-unit>
        <trans-unit id="9537644b2115941001ab22e236c7afa19caccb51" translate="yes" xml:space="preserve">
          <source>ThreadDeathRequest</source>
          <target state="translated">ThreadDeathRequest</target>
        </trans-unit>
        <trans-unit id="d5cc85fdc4d23e7c32473be563d01a3470f47625" translate="yes" xml:space="preserve">
          <source>ThreadFactory</source>
          <target state="translated">ThreadFactory</target>
        </trans-unit>
        <trans-unit id="639f6a21b1097ef66b7f8d57d149541a4d21130e" translate="yes" xml:space="preserve">
          <source>ThreadFactory.newThread()</source>
          <target state="translated">ThreadFactory.newThread()</target>
        </trans-unit>
        <trans-unit id="22c12761263399de65de26186a64d96b9dd55b6a" translate="yes" xml:space="preserve">
          <source>ThreadGroup</source>
          <target state="translated">ThreadGroup</target>
        </trans-unit>
        <trans-unit id="059898a018c9719d82c47e8df552210a319afaee" translate="yes" xml:space="preserve">
          <source>ThreadGroup that new threads are instantiated into</source>
          <target state="translated">새 스레드가 인스턴스화되는 ThreadGroup</target>
        </trans-unit>
        <trans-unit id="2168fa2cbca8d1075577c5d6ed7f5547778673b5" translate="yes" xml:space="preserve">
          <source>ThreadGroup.activeCount()</source>
          <target state="translated">ThreadGroup.activeCount()</target>
        </trans-unit>
        <trans-unit id="07e64be12afbfadcc7b97b9cd27c5a055c953a07" translate="yes" xml:space="preserve">
          <source>ThreadGroup.activeGroupCount()</source>
          <target state="translated">ThreadGroup.activeGroupCount()</target>
        </trans-unit>
        <trans-unit id="6c3bffc705dd7e213fd32e46407349bd3f7eacdb" translate="yes" xml:space="preserve">
          <source>ThreadGroup.allowThreadSuspension()</source>
          <target state="translated">ThreadGroup.allowThreadSuspension()</target>
        </trans-unit>
        <trans-unit id="e42649105d36947129821d6afcf4d4941152e6f6" translate="yes" xml:space="preserve">
          <source>ThreadGroup.checkAccess()</source>
          <target state="translated">ThreadGroup.checkAccess()</target>
        </trans-unit>
        <trans-unit id="e9f1476100d91f7a4dc9f25d3d892bcc4feac01a" translate="yes" xml:space="preserve">
          <source>ThreadGroup.destroy()</source>
          <target state="translated">ThreadGroup.destroy()</target>
        </trans-unit>
        <trans-unit id="241d3244ab07bffab77bbe3bba3a4ab773658693" translate="yes" xml:space="preserve">
          <source>ThreadGroup.enumerate()</source>
          <target state="translated">ThreadGroup.enumerate()</target>
        </trans-unit>
        <trans-unit id="d44de7cf6f1aef179d419b24a490017cac204f16" translate="yes" xml:space="preserve">
          <source>ThreadGroup.getMaxPriority()</source>
          <target state="translated">ThreadGroup.getMaxPriority()</target>
        </trans-unit>
        <trans-unit id="f40cd031292c5455288b01f9b83ee4a091478356" translate="yes" xml:space="preserve">
          <source>ThreadGroup.getName()</source>
          <target state="translated">ThreadGroup.getName()</target>
        </trans-unit>
        <trans-unit id="72e5af96234c224f451a65a8f85461a187502c95" translate="yes" xml:space="preserve">
          <source>ThreadGroup.getParent()</source>
          <target state="translated">ThreadGroup.getParent()</target>
        </trans-unit>
        <trans-unit id="2ce9a4034c94b1856a7323c10b97ea3cc3b972f5" translate="yes" xml:space="preserve">
          <source>ThreadGroup.interrupt()</source>
          <target state="translated">ThreadGroup.interrupt()</target>
        </trans-unit>
        <trans-unit id="c6ee92ca409444bb1119ad7e5be546639fff1aab" translate="yes" xml:space="preserve">
          <source>ThreadGroup.isDaemon()</source>
          <target state="translated">ThreadGroup.isDaemon()</target>
        </trans-unit>
        <trans-unit id="ef8db58035c24c3952b22cbc94ca8dff9f742ba0" translate="yes" xml:space="preserve">
          <source>ThreadGroup.isDestroyed()</source>
          <target state="translated">ThreadGroup.isDestroyed()</target>
        </trans-unit>
        <trans-unit id="1b950c9b638a93c4424ebca8f4a2d43daebc89d5" translate="yes" xml:space="preserve">
          <source>ThreadGroup.list()</source>
          <target state="translated">ThreadGroup.list()</target>
        </trans-unit>
        <trans-unit id="e0958cbd01ddadec8f957373a4b6880bef0d255d" translate="yes" xml:space="preserve">
          <source>ThreadGroup.parentOf()</source>
          <target state="translated">ThreadGroup.parentOf()</target>
        </trans-unit>
        <trans-unit id="8e9e8cb9830f6025a6d0263c09a26a47bad662bd" translate="yes" xml:space="preserve">
          <source>ThreadGroup.resume()</source>
          <target state="translated">ThreadGroup.resume()</target>
        </trans-unit>
        <trans-unit id="21ba900981c697065bf740d11886e2983b5c636f" translate="yes" xml:space="preserve">
          <source>ThreadGroup.setDaemon()</source>
          <target state="translated">ThreadGroup.setDaemon()</target>
        </trans-unit>
        <trans-unit id="c3127b8d5b70fa4af53794e7f5223f23703c18ff" translate="yes" xml:space="preserve">
          <source>ThreadGroup.setMaxPriority()</source>
          <target state="translated">ThreadGroup.setMaxPriority()</target>
        </trans-unit>
        <trans-unit id="9592078d2d0911b903fe2b1e44c99f493c6c6000" translate="yes" xml:space="preserve">
          <source>ThreadGroup.stop()</source>
          <target state="translated">ThreadGroup.stop()</target>
        </trans-unit>
        <trans-unit id="13611581a61716c64f44d18f4a2552f3ea821453" translate="yes" xml:space="preserve">
          <source>ThreadGroup.suspend()</source>
          <target state="translated">ThreadGroup.suspend()</target>
        </trans-unit>
        <trans-unit id="f3fd385adb838a7df1c1aa867a084dd13ebe0e24" translate="yes" xml:space="preserve">
          <source>ThreadGroup.toString()</source>
          <target state="translated">ThreadGroup.toString()</target>
        </trans-unit>
        <trans-unit id="16f389539d6a08ff1048907b073387ed3e6ad9fa" translate="yes" xml:space="preserve">
          <source>ThreadGroup.uncaughtException()</source>
          <target state="translated">ThreadGroup.uncaughtException()</target>
        </trans-unit>
        <trans-unit id="3328e44e60c36bfb52eeac5b0f4f3a5d112dac73" translate="yes" xml:space="preserve">
          <source>ThreadGroupReference</source>
          <target state="translated">ThreadGroupReference</target>
        </trans-unit>
        <trans-unit id="afc57ece9cf03472cd12808a8721cb53a66a5db4" translate="yes" xml:space="preserve">
          <source>ThreadInfo</source>
          <target state="translated">ThreadInfo</target>
        </trans-unit>
        <trans-unit id="51f458be46fb5e6e46005c703419cb052bd48737" translate="yes" xml:space="preserve">
          <source>ThreadInfo.from()</source>
          <target state="translated">ThreadInfo.from()</target>
        </trans-unit>
        <trans-unit id="5b475793851011cd916326209f8aae652389dff1" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getBlockedCount()</source>
          <target state="translated">ThreadInfo.getBlockedCount()</target>
        </trans-unit>
        <trans-unit id="c2ac56d10c5e84f02866dd5bf2bde296086849a1" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getBlockedTime()</source>
          <target state="translated">ThreadInfo.getBlockedTime()</target>
        </trans-unit>
        <trans-unit id="6bb6cf5e2668e662d342264e63db576ba478a81d" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockInfo()</source>
          <target state="translated">ThreadInfo.getLockInfo()</target>
        </trans-unit>
        <trans-unit id="279fb7e22d469c26bca51c4b4cc47449426fe535" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockName()</source>
          <target state="translated">ThreadInfo.getLockName()</target>
        </trans-unit>
        <trans-unit id="f1442fd463c7c703a720b700e9b34e63b69373dc" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockOwnerId()</source>
          <target state="translated">ThreadInfo.getLockOwnerId()</target>
        </trans-unit>
        <trans-unit id="0e3459f517cf142609f581ec4df76d912782fc29" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockOwnerName()</source>
          <target state="translated">ThreadInfo.getLockOwnerName()</target>
        </trans-unit>
        <trans-unit id="e9f0257cc11605fac44cbb92bbeb2da2206a08dd" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockedMonitors()</source>
          <target state="translated">ThreadInfo.getLockedMonitors()</target>
        </trans-unit>
        <trans-unit id="c76532e0ef6ddfd41220640231ab75476649f719" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getLockedSynchronizers()</source>
          <target state="translated">ThreadInfo.getLockedSynchronizers()</target>
        </trans-unit>
        <trans-unit id="162c47fb57d9ecb804a75415311893cb53dfd1e7" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getStackTrace()</source>
          <target state="translated">ThreadInfo.getStackTrace()</target>
        </trans-unit>
        <trans-unit id="a94d7984cb5a5f902ff8baaf2ef4ef6af80927c7" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getThreadId()</source>
          <target state="translated">ThreadInfo.getThreadId()</target>
        </trans-unit>
        <trans-unit id="317b1a52c13c077a7434cd4b65cb1be1c08c7aca" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getThreadName()</source>
          <target state="translated">ThreadInfo.getThreadName()</target>
        </trans-unit>
        <trans-unit id="18b4298ae9a04f40df9ca1864bbfe9df63823192" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getThreadState()</source>
          <target state="translated">ThreadInfo.getThreadState()</target>
        </trans-unit>
        <trans-unit id="fa450fdcd0d633c012b0196754c8f415e75f14b8" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getWaitedCount()</source>
          <target state="translated">ThreadInfo.getWaitedCount()</target>
        </trans-unit>
        <trans-unit id="5a52e40ceff85f86fd4d15145c74344f31319a91" translate="yes" xml:space="preserve">
          <source>ThreadInfo.getWaitedTime()</source>
          <target state="translated">ThreadInfo.getWaitedTime()</target>
        </trans-unit>
        <trans-unit id="de9e94bbb6033eeca6772ce8168334dc71979b2f" translate="yes" xml:space="preserve">
          <source>ThreadInfo.isInNative()</source>
          <target state="translated">ThreadInfo.isInNative()</target>
        </trans-unit>
        <trans-unit id="43e65e159fd271dd58fb800e6762176c537acf71" translate="yes" xml:space="preserve">
          <source>ThreadInfo.isSuspended()</source>
          <target state="translated">ThreadInfo.isSuspended()</target>
        </trans-unit>
        <trans-unit id="dffcb8b612a67880c30df2549fd53ebad6515bb9" translate="yes" xml:space="preserve">
          <source>ThreadInfo.toString()</source>
          <target state="translated">ThreadInfo.toString()</target>
        </trans-unit>
        <trans-unit id="8a77bfd3db44e0aeb0a80c2f055eea2ff97f89d4" translate="yes" xml:space="preserve">
          <source>ThreadLocal</source>
          <target state="translated">ThreadLocal</target>
        </trans-unit>
        <trans-unit id="15a9e9559806004daf00b91be8ab2489cd4086f3" translate="yes" xml:space="preserve">
          <source>ThreadLocal.get()</source>
          <target state="translated">ThreadLocal.get()</target>
        </trans-unit>
        <trans-unit id="374a65448cdae0a9c4a7564ba1697744ca6286ed" translate="yes" xml:space="preserve">
          <source>ThreadLocal.initialValue()</source>
          <target state="translated">ThreadLocal.initialValue()</target>
        </trans-unit>
        <trans-unit id="dacb0909125c4d07d9f0fc1c0650dc3f858ec4d2" translate="yes" xml:space="preserve">
          <source>ThreadLocal.remove()</source>
          <target state="translated">ThreadLocal.remove()</target>
        </trans-unit>
        <trans-unit id="fad47872087ae46c0ae8801dcd216aac1629b8ba" translate="yes" xml:space="preserve">
          <source>ThreadLocal.set()</source>
          <target state="translated">ThreadLocal.set()</target>
        </trans-unit>
        <trans-unit id="ea76ebb3afba7ca5ca185d93e419ac9d7bef11a0" translate="yes" xml:space="preserve">
          <source>ThreadLocal.withInitial()</source>
          <target state="translated">ThreadLocal.withInitial()</target>
        </trans-unit>
        <trans-unit id="388f79e7f6cd9af6475504d43031fda444936124" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom</source>
          <target state="translated">ThreadLocalRandom</target>
        </trans-unit>
        <trans-unit id="c51cd7526dcb058d5725d7b97c9cf1842042f017" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.current()</source>
          <target state="translated">ThreadLocalRandom.current()</target>
        </trans-unit>
        <trans-unit id="5168002791e5e3766e8d2bac85b194773e4bf72e" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.doubles()</source>
          <target state="translated">ThreadLocalRandom.doubles()</target>
        </trans-unit>
        <trans-unit id="518cecff24b0802c13974e5eb757ed3036528994" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.ints()</source>
          <target state="translated">ThreadLocalRandom.ints()</target>
        </trans-unit>
        <trans-unit id="84faa68f340ad21c01aa0dbf0e1e9b1708ada7a9" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.longs()</source>
          <target state="translated">ThreadLocalRandom.longs()</target>
        </trans-unit>
        <trans-unit id="24fedf2bd3ecab7a2c06bba403ee506fd8b26be3" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.next()</source>
          <target state="translated">ThreadLocalRandom.next()</target>
        </trans-unit>
        <trans-unit id="c8adfe0aba9bab398b7b25b9a5d333645a7fdff5" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextBoolean()</source>
          <target state="translated">ThreadLocalRandom.nextBoolean()</target>
        </trans-unit>
        <trans-unit id="134b41249c461f28c399dde9b6fab0e592a6e3e7" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextDouble()</source>
          <target state="translated">ThreadLocalRandom.nextDouble()</target>
        </trans-unit>
        <trans-unit id="f24698da57c58571edcc85c3374b37628aae6f04" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextFloat()</source>
          <target state="translated">ThreadLocalRandom.nextFloat()</target>
        </trans-unit>
        <trans-unit id="83febbb9d6050b072117e6f1dd63688acbb6631b" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextGaussian()</source>
          <target state="translated">ThreadLocalRandom.nextGaussian()</target>
        </trans-unit>
        <trans-unit id="e575d279e9c78f1ec1dd0ceb779e5210fc6a4b27" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextInt()</source>
          <target state="translated">ThreadLocalRandom.nextInt()</target>
        </trans-unit>
        <trans-unit id="b6fca32ef59f5e0bfe30521e4cfde599339502ae" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.nextLong()</source>
          <target state="translated">ThreadLocalRandom.nextLong()</target>
        </trans-unit>
        <trans-unit id="f8ca4ad4cdfa04559b5b65d9c7a318aa910c6ac1" translate="yes" xml:space="preserve">
          <source>ThreadLocalRandom.setSeed()</source>
          <target state="translated">ThreadLocalRandom.setSeed()</target>
        </trans-unit>
        <trans-unit id="a10ff84fac420e7f316a20bc0b94ea47b14bdade" translate="yes" xml:space="preserve">
          <source>ThreadMXBean</source>
          <target state="translated">ThreadMXBean</target>
        </trans-unit>
        <trans-unit id="3d0b651efc0f0a81c992b53220709251da91b5fc" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.dumpAllThreads()</source>
          <target state="translated">ThreadMXBean.dumpAllThreads()</target>
        </trans-unit>
        <trans-unit id="7c1ba97afe4c4a6572769579cb7c064e7a9a15d5" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.findDeadlockedThreads()</source>
          <target state="translated">ThreadMXBean.findDeadlockedThreads()</target>
        </trans-unit>
        <trans-unit id="2d930f7d99a532b8271117121586e39b589fb39c" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.findMonitorDeadlockedThreads()</source>
          <target state="translated">ThreadMXBean.findMonitorDeadlockedThreads()</target>
        </trans-unit>
        <trans-unit id="7e3fb081e1ace73ca6853739b66bdcb8e822bdf8" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getAllThreadIds()</source>
          <target state="translated">ThreadMXBean.getAllThreadIds()</target>
        </trans-unit>
        <trans-unit id="0e680848a18b89f5046d2e0078bec092bd035396" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getCurrentThreadCpuTime()</source>
          <target state="translated">ThreadMXBean.getCurrentThreadCpuTime()</target>
        </trans-unit>
        <trans-unit id="216ddb51b7ac7475ab788d3d6ec8c6fdf3dabd5f" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getCurrentThreadUserTime()</source>
          <target state="translated">ThreadMXBean.getCurrentThreadUserTime()</target>
        </trans-unit>
        <trans-unit id="535dac6197aed1f130e46ded648770696cd9ce37" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getDaemonThreadCount()</source>
          <target state="translated">ThreadMXBean.getDaemonThreadCount()</target>
        </trans-unit>
        <trans-unit id="bccd3eff09eabed514da6b3f82c1fdf55d88f79e" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getPeakThreadCount()</source>
          <target state="translated">ThreadMXBean.getPeakThreadCount()</target>
        </trans-unit>
        <trans-unit id="25a7985ce2f8a9b9e2a7df1d3076558dfa1bdfe2" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getThreadCount()</source>
          <target state="translated">ThreadMXBean.getThreadCount()</target>
        </trans-unit>
        <trans-unit id="8478ed530d45010a41b3927c61fb835f892753ae" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getThreadCpuTime()</source>
          <target state="translated">ThreadMXBean.getThreadCpuTime()</target>
        </trans-unit>
        <trans-unit id="ee478f284f0bc74be3488715a1ee92be295df179" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getThreadInfo()</source>
          <target state="translated">ThreadMXBean.getThreadInfo()</target>
        </trans-unit>
        <trans-unit id="817b796175b303a6e6804ea24aac176ccecf96eb" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getThreadUserTime()</source>
          <target state="translated">ThreadMXBean.getThreadUserTime()</target>
        </trans-unit>
        <trans-unit id="070aed62e0989092ae5d156b47e79ecfacf0424f" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.getTotalStartedThreadCount()</source>
          <target state="translated">ThreadMXBean.getTotalStartedThreadCount()</target>
        </trans-unit>
        <trans-unit id="22642e0709ff7d93dac027a226301d094f29aa1e" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isCurrentThreadCpuTimeSupported()</source>
          <target state="translated">ThreadMXBean.isCurrentThreadCpuTimeSupported()</target>
        </trans-unit>
        <trans-unit id="4f5eb882b75a3b985ecba7e8200444dd1e9b2842" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isObjectMonitorUsageSupported()</source>
          <target state="translated">ThreadMXBean.isObjectMonitorUsageSupported()</target>
        </trans-unit>
        <trans-unit id="4ca77425cf7ef9d43a09cb76be40e2b572b6ec33" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isSynchronizerUsageSupported()</source>
          <target state="translated">ThreadMXBean.isSynchronizerUsageSupported()</target>
        </trans-unit>
        <trans-unit id="c021cf53a65415b0f248c41bf1327082a2ed894a" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isThreadContentionMonitoringEnabled()</source>
          <target state="translated">ThreadMXBean.isThreadContentionMonitoringEnabled()</target>
        </trans-unit>
        <trans-unit id="30a6d9e52a20a4e80f8dcbba927ffcacc1af758f" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isThreadContentionMonitoringSupported()</source>
          <target state="translated">ThreadMXBean.isThreadContentionMonitoringSupported()</target>
        </trans-unit>
        <trans-unit id="b8e9c7741661179460be305a7b1ff5366c157322" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isThreadCpuTimeEnabled()</source>
          <target state="translated">ThreadMXBean.isThreadCpuTimeEnabled()</target>
        </trans-unit>
        <trans-unit id="1ef8a931131e0666c8f6831f70f2432b7763134a" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.isThreadCpuTimeSupported()</source>
          <target state="translated">ThreadMXBean.isThreadCpuTimeSupported()</target>
        </trans-unit>
        <trans-unit id="984c959dc877c2aca2b750ad50d892ee893874c5" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.resetPeakThreadCount()</source>
          <target state="translated">ThreadMXBean.resetPeakThreadCount()</target>
        </trans-unit>
        <trans-unit id="90a4041d734ffb1bcfc54716dbe0cf7793e9329e" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.setThreadContentionMonitoringEnabled()</source>
          <target state="translated">ThreadMXBean.setThreadContentionMonitoringEnabled()</target>
        </trans-unit>
        <trans-unit id="7c4537db9ab28220401454e0be9e69074f0bcdf8" translate="yes" xml:space="preserve">
          <source>ThreadMXBean.setThreadCpuTimeEnabled()</source>
          <target state="translated">ThreadMXBean.setThreadCpuTimeEnabled()</target>
        </trans-unit>
        <trans-unit id="f4ccad88952fdcd6a1fc61663ba8a6b67b062047" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor</source>
          <target state="translated">ThreadPoolExecutor</target>
        </trans-unit>
        <trans-unit id="f2c79d25c8bbeb1de3eb6b991c9c74c92e3a244e" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.AbortPolicy</source>
          <target state="translated">ThreadPoolExecutor.AbortPolicy</target>
        </trans-unit>
        <trans-unit id="d7cc9e13b352c70b3ae3f5dd893ed6f2e88d6d05" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.AbortPolicy.rejectedExecution()</source>
          <target state="translated">ThreadPoolExecutor.AbortPolicy.rejectedExecution()</target>
        </trans-unit>
        <trans-unit id="7b533b964444519aa5cf3169bc513754145d9b96" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.CallerRunsPolicy</source>
          <target state="translated">ThreadPoolExecutor.CallerRunsPolicy</target>
        </trans-unit>
        <trans-unit id="5c445d96d1e1aaa9fe5baec0f0c7895f8ffddbaf" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.CallerRunsPolicy.rejectedExecution()</source>
          <target state="translated">ThreadPoolExecutor.CallerRunsPolicy.rejectedExecution()</target>
        </trans-unit>
        <trans-unit id="eaf6a5f1aabc931cf9f0c22af511f7a995c70bd3" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.DiscardOldestPolicy</source>
          <target state="translated">ThreadPoolExecutor.DiscardOldestPolicy</target>
        </trans-unit>
        <trans-unit id="40b1fd685130406b521e03f6b69d8e1bfe7a2ad7" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.DiscardOldestPolicy.rejectedExecution()</source>
          <target state="translated">ThreadPoolExecutor.DiscardOldestPolicy.rejectedExecution()</target>
        </trans-unit>
        <trans-unit id="8e3bf12c969ea180a4519fc58d1b9242617651b7" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.DiscardPolicy</source>
          <target state="translated">ThreadPoolExecutor.DiscardPolicy</target>
        </trans-unit>
        <trans-unit id="659da8d6807d95d356ca26bbf195573e27a2aef2" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.DiscardPolicy.rejectedExecution()</source>
          <target state="translated">ThreadPoolExecutor.DiscardPolicy.rejectedExecution()</target>
        </trans-unit>
        <trans-unit id="a07a97ed57555cb5c116d4d576ae5fa5afe4a11a" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.afterExecute()</source>
          <target state="translated">ThreadPoolExecutor.afterExecute()</target>
        </trans-unit>
        <trans-unit id="b6abc016d184ee9001f123cf7acda91338f878fc" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.allowCoreThreadTimeOut()</source>
          <target state="translated">ThreadPoolExecutor.allowCoreThreadTimeOut()</target>
        </trans-unit>
        <trans-unit id="6e4f95316b15e284ab4612f86782a7b28afcb84b" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.allowsCoreThreadTimeOut()</source>
          <target state="translated">ThreadPoolExecutor.allowsCoreThreadTimeOut()</target>
        </trans-unit>
        <trans-unit id="c05151e0a08d6bb09aaef5e33c022ac6e63fa9f8" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.awaitTermination()</source>
          <target state="translated">ThreadPoolExecutor.awaitTermination()</target>
        </trans-unit>
        <trans-unit id="5907ee60c1305e06c4e7c6d216e843fb9401700b" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.beforeExecute()</source>
          <target state="translated">ThreadPoolExecutor.beforeExecute()</target>
        </trans-unit>
        <trans-unit id="cd40bf4b1c64224658a5dda766b3ca0378219d78" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.execute()</source>
          <target state="translated">ThreadPoolExecutor.execute()</target>
        </trans-unit>
        <trans-unit id="6d18ed6bcdeac2481871aff10ed90da081adb943" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.finalize()</source>
          <target state="translated">ThreadPoolExecutor.finalize()</target>
        </trans-unit>
        <trans-unit id="a65cec0917fe013463b0be91a2ff0daa9bb53e5d" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getActiveCount()</source>
          <target state="translated">ThreadPoolExecutor.getActiveCount()</target>
        </trans-unit>
        <trans-unit id="e4b3c04ca39b02420d9d29787cf945f10a50c5a2" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getCompletedTaskCount()</source>
          <target state="translated">ThreadPoolExecutor.getCompletedTaskCount()</target>
        </trans-unit>
        <trans-unit id="63116374dd7127f9740b3e59fdf638fffde3ad16" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getCorePoolSize()</source>
          <target state="translated">ThreadPoolExecutor.getCorePoolSize()</target>
        </trans-unit>
        <trans-unit id="a3412a61aac2a4a090d1279b3351cdbc54894e3c" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getKeepAliveTime()</source>
          <target state="translated">ThreadPoolExecutor.getKeepAliveTime()</target>
        </trans-unit>
        <trans-unit id="aa5dc0279c590e30e67ec8056b1f531642bad724" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getLargestPoolSize()</source>
          <target state="translated">ThreadPoolExecutor.getLargestPoolSize()</target>
        </trans-unit>
        <trans-unit id="5b2487e8db27a8ff85fd7d2ad6c140c79be7179b" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getMaximumPoolSize()</source>
          <target state="translated">ThreadPoolExecutor.getMaximumPoolSize()</target>
        </trans-unit>
        <trans-unit id="1e433e740c79571196ce4c40a7d2e4de9a4d82d8" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getPoolSize()</source>
          <target state="translated">ThreadPoolExecutor.getPoolSize()</target>
        </trans-unit>
        <trans-unit id="16a98562b9a01e91841b292ec928b1c3697c3c5f" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getQueue()</source>
          <target state="translated">ThreadPoolExecutor.getQueue()</target>
        </trans-unit>
        <trans-unit id="7a35a232ce690a4fbd789ec5f1eb91c79350d866" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getRejectedExecutionHandler()</source>
          <target state="translated">ThreadPoolExecutor.getRejectedExecutionHandler()</target>
        </trans-unit>
        <trans-unit id="d9884834a18ae8875adc0dc72374bb5df10b3176" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getTaskCount()</source>
          <target state="translated">ThreadPoolExecutor.getTaskCount()</target>
        </trans-unit>
        <trans-unit id="38a332410da078a93276896dad4c5d958124d97e" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.getThreadFactory()</source>
          <target state="translated">ThreadPoolExecutor.getThreadFactory()</target>
        </trans-unit>
        <trans-unit id="d48791041fe0838566d09999493b06a8f4172585" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.isShutdown()</source>
          <target state="translated">ThreadPoolExecutor.isShutdown()</target>
        </trans-unit>
        <trans-unit id="8db47e1b9fc0fc612ba95c8ab8837cb580e09057" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.isTerminated()</source>
          <target state="translated">ThreadPoolExecutor.isTerminated()</target>
        </trans-unit>
        <trans-unit id="154a1158ff0bc95ff0218a7f6729285e9006f9fa" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.isTerminating()</source>
          <target state="translated">ThreadPoolExecutor.isTerminating()</target>
        </trans-unit>
        <trans-unit id="b8c9e8cab95909d0f9f6f4c14a6eb05ccf7b0c70" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.prestartAllCoreThreads()</source>
          <target state="translated">ThreadPoolExecutor.prestartAllCoreThreads()</target>
        </trans-unit>
        <trans-unit id="e8e0209bc08f6b1bffc4fd25066c640edc090d7d" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.prestartCoreThread()</source>
          <target state="translated">ThreadPoolExecutor.prestartCoreThread()</target>
        </trans-unit>
        <trans-unit id="23dfab8cc11462680b9eeb1bc2197f88b7b18f36" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.purge()</source>
          <target state="translated">ThreadPoolExecutor.purge()</target>
        </trans-unit>
        <trans-unit id="7348f105a42e42d949f33acc99f16f70ea15a7a7" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.remove()</source>
          <target state="translated">ThreadPoolExecutor.remove()</target>
        </trans-unit>
        <trans-unit id="171c9977d1eba377a7a5fba0d1a178f82be4fcc8" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.setCorePoolSize()</source>
          <target state="translated">ThreadPoolExecutor.setCorePoolSize()</target>
        </trans-unit>
        <trans-unit id="ffdcd6085baf7ea939001521e5c6791114da2d41" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.setKeepAliveTime()</source>
          <target state="translated">ThreadPoolExecutor.setKeepAliveTime()</target>
        </trans-unit>
        <trans-unit id="142eb53a1492c0f895f65f0a6d01f644ee8ba3bb" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.setMaximumPoolSize()</source>
          <target state="translated">ThreadPoolExecutor.setMaximumPoolSize()</target>
        </trans-unit>
        <trans-unit id="628548d7b463f0709c6f86a57cdd0d2269e58547" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.setRejectedExecutionHandler()</source>
          <target state="translated">ThreadPoolExecutor.setRejectedExecutionHandler()</target>
        </trans-unit>
        <trans-unit id="9efe3a8706a4364989090e0a5fe176c47e485000" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.setThreadFactory()</source>
          <target state="translated">ThreadPoolExecutor.setThreadFactory()</target>
        </trans-unit>
        <trans-unit id="da192288deea93eb600f964fab0db8c7f6c523e2" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.shutdown()</source>
          <target state="translated">ThreadPoolExecutor.shutdown()</target>
        </trans-unit>
        <trans-unit id="1a067c0a488a5e47d757724e51fc90736e37dc53" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.shutdownNow()</source>
          <target state="translated">ThreadPoolExecutor.shutdownNow()</target>
        </trans-unit>
        <trans-unit id="f64b4cef9f08cda6f2061e93f5d833d78e23fd3b" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.terminated()</source>
          <target state="translated">ThreadPoolExecutor.terminated()</target>
        </trans-unit>
        <trans-unit id="c9cbb28f68a32b755c11fc3f6ccc630ae8bc7429" translate="yes" xml:space="preserve">
          <source>ThreadPoolExecutor.toString()</source>
          <target state="translated">ThreadPoolExecutor.toString()</target>
        </trans-unit>
        <trans-unit id="dfb8fcce70647e393c17dec81898f27d0e3a0ff3" translate="yes" xml:space="preserve">
          <source>ThreadReference</source>
          <target state="translated">ThreadReference</target>
        </trans-unit>
        <trans-unit id="646d42bb8fb29ffc8b5dcdba8288df5dc51b54b7" translate="yes" xml:space="preserve">
          <source>ThreadStartEvent</source>
          <target state="translated">ThreadStartEvent</target>
        </trans-unit>
        <trans-unit id="7ef72c5fa50e1973b0866c10f3ba1902f62fe1a3" translate="yes" xml:space="preserve">
          <source>ThreadStartRequest</source>
          <target state="translated">ThreadStartRequest</target>
        </trans-unit>
        <trans-unit id="5541d0b76d127f6a3c54bbc247ffcc1b6c2bbc25" translate="yes" xml:space="preserve">
          <source>Threading</source>
          <target state="translated">Threading</target>
        </trans-unit>
        <trans-unit id="de4e9c7a680290a7be76fdc747bd300e110ee012" translate="yes" xml:space="preserve">
          <source>Threading Issues</source>
          <target state="translated">스레딩 문제</target>
        </trans-unit>
        <trans-unit id="dec163ec912a72e6830c783d992f4f06d3629f5b" translate="yes" xml:space="preserve">
          <source>Threads need not be suspended.</source>
          <target state="translated">스레드를 일시 중지 할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="1541b44e621bca4b923bcb6b71a660d9ce9725d6" translate="yes" xml:space="preserve">
          <source>Threads running in the mirrored VM are abruptly terminated. A thread death exception is not thrown and finally blocks are not run.</source>
          <target state="translated">미러링 된 VM에서 실행중인 스레드가 갑자기 종료됩니다. 스레드 종료 예외가 발생하지 않고 finally 블록이 실행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fc4f01800311acd6dc47585b32eb83273995c915" translate="yes" xml:space="preserve">
          <source>Three digits for the &lt;a href=&quot;../temporal/chronofield#DAY_OF_YEAR&quot;&gt;&lt;code&gt;day-of-year&lt;/code&gt;&lt;/a&gt;. This is pre-padded by zero to ensure three digits.</source>
          <target state="translated">세 가지가 자릿수 &lt;a href=&quot;../temporal/chronofield#DAY_OF_YEAR&quot;&gt; &lt;code&gt;day-of-year&lt;/code&gt; &lt;/a&gt; . 세 자리를 보장하기 위해 0으로 미리 채워져 있습니다.</target>
        </trans-unit>
        <trans-unit id="b92c0c34ed0eca6d90d4dc9a82a1b224030f48bc" translate="yes" xml:space="preserve">
          <source>Three letter &lt;a href=&quot;../temporal/chronofield#DAY_OF_WEEK&quot;&gt;&lt;code&gt;day-of-week&lt;/code&gt;&lt;/a&gt; in English.</source>
          <target state="translated">영어로 된 3 &lt;a href=&quot;../temporal/chronofield#DAY_OF_WEEK&quot;&gt; &lt;code&gt;day-of-week&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9bdfefee4ac2aa9176fc0669c8e504ff8a01d0f" translate="yes" xml:space="preserve">
          <source>Three letter &lt;a href=&quot;../temporal/chronofield#MONTH_OF_YEAR&quot;&gt;&lt;code&gt;month-of-year&lt;/code&gt;&lt;/a&gt; in English.</source>
          <target state="translated">영어로 된 세 &lt;a href=&quot;../temporal/chronofield#MONTH_OF_YEAR&quot;&gt; &lt;code&gt;month-of-year&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="37139c0ccc1f75933cbec2cca83bd75137c53f0f" translate="yes" xml:space="preserve">
          <source>Three methods on a &lt;code&gt;TextLayout&lt;/code&gt; object (&lt;code&gt;getNextRightHit&lt;/code&gt;, &lt;code&gt;getNextLeftHit&lt;/code&gt;, and &lt;code&gt;hitTestChar&lt;/code&gt;) return instances of &lt;a href=&quot;texthitinfo&quot;&gt;&lt;code&gt;TextHitInfo&lt;/code&gt;&lt;/a&gt;. The offsets contained in these &lt;code&gt;TextHitInfo&lt;/code&gt; objects are relative to the start of the &lt;code&gt;TextLayout&lt;/code&gt;, &lt;b&gt;not&lt;/b&gt; to the text used to create the &lt;code&gt;TextLayout&lt;/code&gt;. Similarly, &lt;code&gt;TextLayout&lt;/code&gt; methods that accept &lt;code&gt;TextHitInfo&lt;/code&gt; instances as parameters expect the &lt;code&gt;TextHitInfo&lt;/code&gt; object's offsets to be relative to the &lt;code&gt;TextLayout&lt;/code&gt;, not to any underlying text storage model.</source>
          <target state="translated">&lt;code&gt;TextLayout&lt;/code&gt; 객체의 세 가지 메서드 ( &lt;code&gt;getNextRightHit&lt;/code&gt; , &lt;code&gt;getNextLeftHit&lt;/code&gt; 및 &lt;code&gt;hitTestChar&lt;/code&gt; )는 &lt;a href=&quot;texthitinfo&quot;&gt; &lt;code&gt;TextHitInfo&lt;/code&gt; &lt;/a&gt; 인스턴스를 반환 합니다 . 이들에 포함 된 오프셋 (offset) &lt;code&gt;TextHitInfo&lt;/code&gt; 객체는 시작에 상대적 &lt;code&gt;TextLayout&lt;/code&gt; 의 , &lt;b&gt;하지&lt;/b&gt; 텍스트를 작성하는 데 사용에 &lt;code&gt;TextLayout&lt;/code&gt; 와 . 마찬가지로 &lt;code&gt;TextHitInfo&lt;/code&gt; 인스턴스를 매개 변수로 허용하는 &lt;code&gt;TextLayout&lt;/code&gt; 메서드 는 &lt;code&gt;TextHitInfo&lt;/code&gt; 개체의 오프셋이 기본 텍스트 저장소 모델이 아니라 &lt;code&gt;TextLayout&lt;/code&gt; 에 상대적 일 것으로 예상합니다 .</target>
        </trans-unit>
        <trans-unit id="16642dcdca4115f5acd44073f0cfac6c8955758e" translate="yes" xml:space="preserve">
          <source>Three sample &lt;a href=&quot;../../../../../../java.base/javax/security/auth/login/configuration&quot;&gt;&lt;code&gt;Configuration&lt;/code&gt;&lt;/a&gt;s are shown below. The first one activates search-first mode. It identifies the LDAP server and specifies that users' entries be located by their &lt;code&gt;uid&lt;/code&gt; and &lt;code&gt;objectClass&lt;/code&gt; attributes. It also specifies that an identity based on the user's &lt;code&gt;employeeNumber&lt;/code&gt; attribute should be created. The second one activates authentication-first mode. It requests that the LDAP server be located dynamically, that authentication be performed using the supplied username directly but without the protection of SSL and that users' entries be located by one of three naming attributes and their &lt;code&gt;objectClass&lt;/code&gt; attribute. The third one activates authentication-only mode. It identifies alternative LDAP servers, it specifies the distinguished name to use for authentication and a fixed identity to use for authorization. No directory search is performed.</source>
          <target state="translated">세 가지 샘플 &lt;a href=&quot;../../../../../../java.base/javax/security/auth/login/configuration&quot;&gt; &lt;code&gt;Configuration&lt;/code&gt; &lt;/a&gt; 이 아래에 나와 있습니다. 첫 번째는 검색 우선 모드를 활성화합니다. LDAP 서버를 식별하고 사용자 항목이 &lt;code&gt;uid&lt;/code&gt; 및 &lt;code&gt;objectClass&lt;/code&gt; 속성 으로 위치하도록 지정 합니다. 또한 사용자의 &lt;code&gt;employeeNumber&lt;/code&gt; 속성을 기반으로하는 ID를 만들어야 함을 지정합니다. 두 번째는 인증 우선 모드를 활성화합니다. LDAP 서버를 동적으로 찾고, 제공된 사용자 이름을 사용하여 직접 인증을 수행하지만 SSL 보호없이 사용자 항목을 세 가지 이름 지정 속성 및 해당 &lt;code&gt;objectClass&lt;/code&gt; 중 하나로 찾을 것을 요청합니다.속성. 세 번째는 인증 전용 모드를 활성화합니다. 대체 LDAP 서버를 식별하고 인증에 사용할 고유 이름과 권한 부여에 사용할 고정 ID를 지정합니다. 디렉토리 검색이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="eab82e400141b434308880b18f5d90ab1df67021" translate="yes" xml:space="preserve">
          <source>Three-letter language/country(region) codes</source>
          <target state="translated">3 글자 언어 / 국가 (지역) 코드</target>
        </trans-unit>
        <trans-unit id="d3394744981ae3b0d160ba5fa153018728b86da8" translate="yes" xml:space="preserve">
          <source>Three-letter time zone IDs</source>
          <target state="translated">3 글자 시간대 ID</target>
        </trans-unit>
        <trans-unit id="c51f7b72279e26fd7cf66d9d61e7f7204bf3b26a" translate="yes" xml:space="preserve">
          <source>Threshold</source>
          <target state="translated">Threshold</target>
        </trans-unit>
        <trans-unit id="5556acb4e84bfb80d4f798219daaad9dbdbdf7ec" translate="yes" xml:space="preserve">
          <source>Through methods of the &lt;code&gt;Line&lt;/code&gt; interface, which &lt;code&gt;Mixer&lt;/code&gt; extends, a mixer might provide a set of controls that are global to the mixer. For example, the mixer can have a master gain control. These global controls are distinct from the controls belonging to each of the mixer's individual lines.</source>
          <target state="translated">&lt;code&gt;Mixer&lt;/code&gt; 확장 하는 &lt;code&gt;Line&lt;/code&gt; 인터페이스의 방법을 통해 믹서 는 믹서에 전역적인 일련의 컨트롤을 제공 할 수 있습니다. 예를 들어 믹서에는 마스터 게인 컨트롤이있을 수 있습니다. 이 글로벌 컨트롤은 각 믹서의 개별 라인에 속하는 컨트롤과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="bc6f0690a388f90a1a01773ee5e8153698da023a" translate="yes" xml:space="preserve">
          <source>Throughout this specification, a &quot;non-exported package&quot; refers to a package that is not exported to all modules, and a &quot;non-open package&quot; refers to a package that is not open to all modules. Specifically, these terms refer to a package that either is not exported/open by its containing module or is exported/open in a qualified fashion by its containing module.</source>
          <target state="translated">이 사양에서 &quot;비 내보내기 패키지&quot;는 모든 모듈에 내보내지지 않는 패키지를 의미하고 &quot;비 개방 패키지&quot;는 모든 모듈에 대해 개방되지 않은 패키지를 의미합니다. 특히, 이러한 용어는 포함 모듈에 의해 내보내거나 열리지 않거나 포함 모듈에 의해 정규화 된 방식으로 내보내 / 열린 패키지를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="be663f5f0260dc7bc778704d125c41b8f7e040e3" translate="yes" xml:space="preserve">
          <source>Throughput and scalability are generally highest for the default barging (also known as &lt;em&gt;greedy&lt;/em&gt;, &lt;em&gt;renouncement&lt;/em&gt;, and &lt;em&gt;convoy-avoidance&lt;/em&gt;) strategy. While this is not guaranteed to be fair or starvation-free, earlier queued threads are allowed to recontend before later queued threads, and each recontention has an unbiased chance to succeed against incoming threads. Also, while acquires do not &quot;spin&quot; in the usual sense, they may perform multiple invocations of &lt;code&gt;tryAcquire&lt;/code&gt; interspersed with other computations before blocking. This gives most of the benefits of spins when exclusive synchronization is only briefly held, without most of the liabilities when it isn't. If so desired, you can augment this by preceding calls to acquire methods with &quot;fast-path&quot; checks, possibly prechecking &lt;a href=&quot;#hasContended()&quot;&gt;&lt;code&gt;hasContended()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;#hasQueuedThreads()&quot;&gt;&lt;code&gt;hasQueuedThreads()&lt;/code&gt;&lt;/a&gt; to only do so if the synchronizer is likely not to be contended.</source>
          <target state="translated">처리량과 확장 성은 일반적으로 기본 끼어 들기 ( &lt;em&gt;greedy&lt;/em&gt; , &lt;em&gt;renouncement&lt;/em&gt; 및 &lt;em&gt;convoy-avoidance&lt;/em&gt; 라고도 함 ) 전략에서 가장 높습니다 . 이것이 공정하거나 굶주림이 없다고 보장되지는 않지만, 이전에 큐에있는 스레드는 나중에 큐에있는 스레드보다 먼저 다시 경쟁 할 수 있으며 각 재 경쟁에는 들어오는 스레드에 대해 성공할 수있는 편견없는 기회가 있습니다. 또한 획득은 일반적인 의미에서 &quot;회전&quot;하지 않지만 &lt;code&gt;tryAcquire&lt;/code&gt; 를 여러 번 호출 할 수 있습니다.차단하기 전에 다른 계산과 산재 해 있습니다. 이는 배타적 동기화가 잠깐 동안 만 유지 될 때 스핀의 대부분의 이점을 제공하며 그렇지 않은 경우 대부분의 책임이 없습니다. 원하는 경우 &quot;빠른 경로&quot;검사를 사용하여 메서드를 획득하기위한 선행 호출을 통해이를 강화할 수 있습니다. 아마도 &lt;a href=&quot;#hasContended()&quot;&gt; &lt;code&gt;hasContended()&lt;/code&gt; &lt;/a&gt; 및 / 또는 &lt;a href=&quot;#hasQueuedThreads()&quot;&gt; &lt;code&gt;hasQueuedThreads()&lt;/code&gt; &lt;/a&gt; 를 사전 검사 하여 동기화 기가 경쟁하지 않을 가능성이있는 경우에만 그렇게 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29fa5a3481369653554d192305a3d49ea5c81669" translate="yes" xml:space="preserve">
          <source>Throughput and scalability are generally highest for the default barging (also known as &lt;em&gt;greedy&lt;/em&gt;, &lt;em&gt;renouncement&lt;/em&gt;, and &lt;em&gt;convoy-avoidance&lt;/em&gt;) strategy. While this is not guaranteed to be fair or starvation-free, earlier queued threads are allowed to recontend before later queued threads, and each recontention has an unbiased chance to succeed against incoming threads. Also, while acquires do not &quot;spin&quot; in the usual sense, they may perform multiple invocations of &lt;code&gt;tryAcquire&lt;/code&gt; interspersed with other computations before blocking. This gives most of the benefits of spins when exclusive synchronization is only briefly held, without most of the liabilities when it isn't. If so desired, you can augment this by preceding calls to acquire methods with &quot;fast-path&quot; checks, possibly prechecking &lt;a href=&quot;abstractqueuedsynchronizer#hasContended--&quot;&gt;&lt;code&gt;hasContended()&lt;/code&gt;&lt;/a&gt; and/or &lt;a href=&quot;abstractqueuedsynchronizer#hasQueuedThreads--&quot;&gt;&lt;code&gt;hasQueuedThreads()&lt;/code&gt;&lt;/a&gt; to only do so if the synchronizer is likely not to be contended.</source>
          <target state="translated">처리량 및 확장 성은 일반적으로 기본 끼어 들기 ( &lt;em&gt;욕심&lt;/em&gt; , &lt;em&gt;포기&lt;/em&gt; 및 &lt;em&gt;호송 회피&lt;/em&gt; 라고도 함 ) 전략에서 가장 높습니다 . 이것이 공평하거나 기아가 없음을 보장하는 것은 아니지만, 이전에 대기중인 스레드는 나중에 대기중인 스레드보다 먼저 다시 경쟁 할 수 있으며 각 재 확보에는 수신 스레드에 대해 성공할 수있는 기회가 있습니다. 또한 일반적인 의미에서 &quot;회전&quot;하지 않으면 서 여러 번의 호출을 수행 할 수 있습니다. &lt;code&gt;tryAcquire&lt;/code&gt; 를차단하기 전에 다른 계산과 산재. 배타적 동기화가 잠깐 동안 만있을 때 스핀의 이점을 대부분 제공하며, 그렇지 않을 때는 대부분의 부채가 없습니다. 원하는 경우, &quot;빠른 경로&quot;확인으로 메소드를 획득하기위한 호출을 선행하여이를 보강 할 수 있습니다 . 동기화 프로그램이 &lt;a href=&quot;abstractqueuedsynchronizer#hasQueuedThreads--&quot;&gt; &lt;code&gt;hasQueuedThreads()&lt;/code&gt; &lt;/a&gt; 하지 않는 경우에만 &lt;a href=&quot;abstractqueuedsynchronizer#hasContended--&quot;&gt; &lt;code&gt;hasContended()&lt;/code&gt; &lt;/a&gt; 및 / 또는 hasQueuedThreads () 를 사전 점검 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="752f7dcf3af4736472c15ac84d4706886da95d27" translate="yes" xml:space="preserve">
          <source>ThrowTree</source>
          <target state="translated">ThrowTree</target>
        </trans-unit>
        <trans-unit id="8abf11297f412ee4fff55514bb434f634e293565" translate="yes" xml:space="preserve">
          <source>Throwable</source>
          <target state="translated">Throwable</target>
        </trans-unit>
        <trans-unit id="98ad00fadfe509294b8793d010a54fc9acb13d66" translate="yes" xml:space="preserve">
          <source>Throwable.addSuppressed()</source>
          <target state="translated">Throwable.addSuppressed()</target>
        </trans-unit>
        <trans-unit id="0c47561a8f890315e653b9cc117aa39ca8c38c67" translate="yes" xml:space="preserve">
          <source>Throwable.fillInStackTrace()</source>
          <target state="translated">Throwable.fillInStackTrace()</target>
        </trans-unit>
        <trans-unit id="cae7225746c3e3d75356859bb685613b213e4379" translate="yes" xml:space="preserve">
          <source>Throwable.getCause()</source>
          <target state="translated">Throwable.getCause()</target>
        </trans-unit>
        <trans-unit id="cd4d4d68986b90e5907c5e1d03ffbf1dcd713548" translate="yes" xml:space="preserve">
          <source>Throwable.getLocalizedMessage()</source>
          <target state="translated">Throwable.getLocalizedMessage()</target>
        </trans-unit>
        <trans-unit id="0e930f6c77fd1a322a22f35a097179d8cb8ef2e4" translate="yes" xml:space="preserve">
          <source>Throwable.getMessage()</source>
          <target state="translated">Throwable.getMessage()</target>
        </trans-unit>
        <trans-unit id="dfdb46c2fa44323329c34d19d00faadb4f29cedb" translate="yes" xml:space="preserve">
          <source>Throwable.getStackTrace()</source>
          <target state="translated">Throwable.getStackTrace()</target>
        </trans-unit>
        <trans-unit id="81966576a0ddab78739d3dd60d9e2f5b4c488a0b" translate="yes" xml:space="preserve">
          <source>Throwable.getSuppressed()</source>
          <target state="translated">Throwable.getSuppressed()</target>
        </trans-unit>
        <trans-unit id="50fa4943f7e6382fb6a0ed657c438da27448c947" translate="yes" xml:space="preserve">
          <source>Throwable.initCause()</source>
          <target state="translated">Throwable.initCause()</target>
        </trans-unit>
        <trans-unit id="4b30a8b60ba03a343483fe862a0a26fb68000e06" translate="yes" xml:space="preserve">
          <source>Throwable.printStackTrace()</source>
          <target state="translated">Throwable.printStackTrace()</target>
        </trans-unit>
        <trans-unit id="3f5d61ee96878a562cc64674a60e417a0bdec190" translate="yes" xml:space="preserve">
          <source>Throwable.setStackTrace()</source>
          <target state="translated">Throwable.setStackTrace()</target>
        </trans-unit>
        <trans-unit id="6562f58691de1dc184d89b483c459a8ab9d6db45" translate="yes" xml:space="preserve">
          <source>Throwable.toString()</source>
          <target state="translated">Throwable.toString()</target>
        </trans-unit>
        <trans-unit id="13986754d05f8d0840da837200315be5d97506ab" translate="yes" xml:space="preserve">
          <source>Throwing &lt;code&gt;null&lt;/code&gt; as if it were a &lt;code&gt;Throwable&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;Throwable&lt;/code&gt; 값인 것처럼 &lt;code&gt;null&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="a4418f356f25cfb7d0c9ce91b95afe579b04ca02" translate="yes" xml:space="preserve">
          <source>Throwing an error in these cases may seem extreme. The rationale for this behavior is that a malformed provider-configuration file, like a malformed class file, indicates a serious problem with the way the Java virtual machine is configured or is being used. As such it is preferable to throw an error rather than try to recover or, even worse, fail silently.</source>
          <target state="translated">이러한 경우 오류를 던지는 것은 극단적 인 것처럼 보일 수 있습니다. 이 동작의 근거는 잘못된 클래스 파일과 같이 잘못된 공급자 구성 파일이 Java 가상 머신이 구성되거나 사용되는 방식에 심각한 문제가 있음을 나타 내기 때문입니다. 따라서 복구를 시도하는 것보다 오류를 던지는 것이 낫습니다.</target>
        </trans-unit>
        <trans-unit id="27e8f7208704cb9c42e23d091c281f52ceed5b04" translate="yes" xml:space="preserve">
          <source>Thrown at the invocation if the call site can not be linked by any available &lt;a href=&quot;linker/guardingdynamiclinker&quot;&gt;&lt;code&gt;GuardingDynamicLinker&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용 가능한 &lt;a href=&quot;linker/guardingdynamiclinker&quot;&gt; &lt;code&gt;GuardingDynamicLinker&lt;/code&gt; 로&lt;/a&gt; 호출 사이트를 연결할 수없는 경우 호출시 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="c7f36b5eecc3dae1784f587e0354ce2988752b3b" translate="yes" xml:space="preserve">
          <source>Thrown by &lt;a href=&quot;virtualmachine#attach(java.lang.String)&quot;&gt;&lt;code&gt;VirtualMachine.attach&lt;/code&gt;&lt;/a&gt; when attempting to attach to a Java virtual machine for which a compatible &lt;a href=&quot;spi/attachprovider&quot;&gt;&lt;code&gt;AttachProvider&lt;/code&gt;&lt;/a&gt; does not exist.</source>
          <target state="translated">호환되는 &lt;a href=&quot;spi/attachprovider&quot;&gt; &lt;code&gt;AttachProvider&lt;/code&gt; &lt;/a&gt; 가 존재하지 않는 JVM (Java Virtual Machine)에 연결을 시도 할 때 &lt;a href=&quot;virtualmachine#attach(java.lang.String)&quot;&gt; &lt;code&gt;VirtualMachine.attach&lt;/code&gt; 에&lt;/a&gt; 의해 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="7060f83bfa4711c8375771627b563612ce5dbba8" translate="yes" xml:space="preserve">
          <source>Thrown by &lt;a href=&quot;virtualmachine#attach(java.lang.String)&quot;&gt;&lt;code&gt;VirtualMachine.attach&lt;/code&gt;&lt;/a&gt; when attempting to attach to a Java virtual machine for which a compatible &lt;a href=&quot;spi/attachprovider&quot;&gt;&lt;code&gt;AttachProvider&lt;/code&gt;&lt;/a&gt; does not exist. It is also thrown by &lt;a href=&quot;spi/attachprovider#attachVirtualMachine(java.lang.String)&quot;&gt;&lt;code&gt;AttachProvider.attachVirtualMachine&lt;/code&gt;&lt;/a&gt; if the provider attempts to attach to a Java virtual machine with which it not comptatible.</source>
          <target state="translated">호환되는 &lt;a href=&quot;spi/attachprovider&quot;&gt; &lt;code&gt;AttachProvider&lt;/code&gt; &lt;/a&gt; 가 존재하지 않는 JVM (Java Virtual Machine)에 연결을 시도 할 때 &lt;a href=&quot;virtualmachine#attach(java.lang.String)&quot;&gt; &lt;code&gt;VirtualMachine.attach&lt;/code&gt; 에&lt;/a&gt; 의해 발생 합니다. 또한 제공자가 호환되지 않는 Java 가상 머신에 연결을 시도하는 경우 &lt;a href=&quot;spi/attachprovider#attachVirtualMachine(java.lang.String)&quot;&gt; &lt;code&gt;AttachProvider.attachVirtualMachine&lt;/code&gt; 에&lt;/a&gt; 의해 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="d4dac3b7a9730402058d3af55f2a3f82c5d5b1e8" translate="yes" xml:space="preserve">
          <source>Thrown by &lt;code&gt;String&lt;/code&gt; methods to indicate that an index is either negative or greater than the size of the string.</source>
          <target state="translated">인덱스가 음수이거나 문자열 크기보다 큰 것을 나타 내기 위해 &lt;code&gt;String&lt;/code&gt; 메서드에 의해 throw됩니다 .</target>
        </trans-unit>
        <trans-unit id="bfa59ae88d1d9ef936b47bbc727d00337768fd02" translate="yes" xml:space="preserve">
          <source>Thrown by &lt;code&gt;String&lt;/code&gt; methods to indicate that an index is either negative or greater than the size of the string. For some methods such as the &lt;a href=&quot;string#charAt(int)&quot;&gt;&lt;code&gt;charAt&lt;/code&gt;&lt;/a&gt; method, this exception also is thrown when the index is equal to the size of the string.</source>
          <target state="translated">인덱스가 음수이거나 문자열 크기보다 크다는 것을 나타 내기 위해 &lt;code&gt;String&lt;/code&gt; 메서드에 의해 throw됩니다 . &lt;a href=&quot;string#charAt(int)&quot;&gt; &lt;code&gt;charAt&lt;/code&gt; &lt;/a&gt; 메서드 와 같은 일부 메서드의 경우 인덱스가 문자열 크기와 같을 때도이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="144e7f92010c33f921437350f5bad319e14da26c" translate="yes" xml:space="preserve">
          <source>Thrown by &lt;code&gt;String&lt;/code&gt; methods to indicate that an index is either negative or greater than the size of the string. For some methods such as the charAt method, this exception also is thrown when the index is equal to the size of the string.</source>
          <target state="translated">인덱스가 음수이거나 문자열 크기보다 큰 것을 나타 내기 위해 &lt;code&gt;String&lt;/code&gt; 메서드에 의해 throw됩니다 . charAt 메소드와 같은 일부 메소드의 경우 인덱스가 문자열 크기와 같을 때도이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3a716c06b290d9848848b3238cc79caaba6d4d9a" translate="yes" xml:space="preserve">
          <source>Thrown by a &lt;a href=&quot;modulefinder&quot;&gt;&lt;code&gt;ModuleFinder&lt;/code&gt;&lt;/a&gt; when an error occurs finding a module.</source>
          <target state="translated">모듈을 찾는 동안 오류가 발생 하면 &lt;a href=&quot;modulefinder&quot;&gt; &lt;code&gt;ModuleFinder&lt;/code&gt; 에서&lt;/a&gt; throw됩니다 .</target>
        </trans-unit>
        <trans-unit id="8f7180a519eb6cf7ddd42524994816801ea0c9d3" translate="yes" xml:space="preserve">
          <source>Thrown by a &lt;a href=&quot;modulefinder&quot;&gt;&lt;code&gt;ModuleFinder&lt;/code&gt;&lt;/a&gt; when an error occurs finding a module. Also thrown by &lt;a href=&quot;configuration#resolve(java.lang.module.ModuleFinder,java.util.List,java.lang.module.ModuleFinder,java.util.Collection)&quot;&gt;&lt;code&gt;Configuration.resolve&lt;/code&gt;&lt;/a&gt; when resolution fails for observability-related reasons.</source>
          <target state="translated">모듈을 찾는 동안 오류가 발생 하면 &lt;a href=&quot;modulefinder&quot;&gt; &lt;code&gt;ModuleFinder&lt;/code&gt; 에서&lt;/a&gt; throw됩니다 . 또한 관찰 성 관련 이유로 해결이 실패 할 때 &lt;a href=&quot;configuration#resolve(java.lang.module.ModuleFinder,java.util.List,java.lang.module.ModuleFinder,java.util.Collection)&quot;&gt; &lt;code&gt;Configuration.resolve&lt;/code&gt; 에&lt;/a&gt; 의해 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="880bf456a54a70675982d129fa0b480180cdaf07" translate="yes" xml:space="preserve">
          <source>Thrown by a &lt;code&gt;Scanner&lt;/code&gt; to indicate that the token retrieved does not match the pattern for the expected type, or that the token is out of range for the expected type.</source>
          <target state="translated">검색된 토큰이 예상 유형의 패턴과 일치하지 않거나 토큰이 예상 유형의 범위를 벗어 났음을 표시하기 위해 &lt;code&gt;Scanner&lt;/code&gt; 에서 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c4174a24dc3725eb8cd3a55fb30924a4fe44438f" translate="yes" xml:space="preserve">
          <source>Thrown by a method invocation on a proxy instance if its invocation handler's &lt;a href=&quot;invocationhandler#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method throws a checked exception (a &lt;code&gt;Throwable&lt;/code&gt; that is not assignable to &lt;code&gt;RuntimeException&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt;) that is not assignable to any of the exception types declared in the &lt;code&gt;throws&lt;/code&gt; clause of the method that was invoked on the proxy instance and dispatched to the invocation handler.</source>
          <target state="translated">호출 핸들러의 &lt;a href=&quot;invocationhandler#invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt; 메소드가 메소드 의 &lt;code&gt;throws&lt;/code&gt; 절에 선언 된 예외 유형에 할당 할 수없는 확인 된 예외 ( &lt;code&gt;RuntimeException&lt;/code&gt; 또는 &lt;code&gt;Error&lt;/code&gt; 에 할당 할 수없는 &lt;code&gt;Throwable&lt;/code&gt; ) 를 throw하는 경우 프록시 인스턴스의 메서드 호출에 의해 throw됩니다. 프록시 인스턴스에서 호출되고 호출 핸들러로 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="449d68c28afb5144db6be3ee1bdaf776191d13c8" translate="yes" xml:space="preserve">
          <source>Thrown by a method invocation on a proxy instance if its invocation handler's &lt;a href=&quot;invocationhandler#invoke-java.lang.Object-java.lang.reflect.Method-java.lang.Object:A-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; method throws a checked exception (a &lt;code&gt;Throwable&lt;/code&gt; that is not assignable to &lt;code&gt;RuntimeException&lt;/code&gt; or &lt;code&gt;Error&lt;/code&gt;) that is not assignable to any of the exception types declared in the &lt;code&gt;throws&lt;/code&gt; clause of the method that was invoked on the proxy instance and dispatched to the invocation handler.</source>
          <target state="translated">의 호출 핸들러의 경우 프록시 인스턴스의 메소드 호출에 의해 슬로우 &lt;a href=&quot;invocationhandler#invoke-java.lang.Object-java.lang.reflect.Method-java.lang.Object:A-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt; 메소드가 확인이 끝난 예외 (A 발생 &lt;code&gt;Throwable&lt;/code&gt; 에 할당 할 수없는 &lt;code&gt;RuntimeException&lt;/code&gt; 을 또는 &lt;code&gt;Error&lt;/code&gt; 예외 유형의이 (가) 선언에 할당 할 수없는) &lt;code&gt;throws&lt;/code&gt; 방법이 절을 프록시 인스턴스에서 호출되어 호출 핸들러로 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="46bc74f574ec776658168405e81db7afdbafd125" translate="yes" xml:space="preserve">
          <source>Thrown by an implementation of &lt;a href=&quot;classfiletransformer#transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)&quot;&gt;&lt;code&gt;ClassFileTransformer.transform&lt;/code&gt;&lt;/a&gt; when its input parameters are invalid.</source>
          <target state="translated">입력 매개 변수가 유효하지 않은 경우 &lt;a href=&quot;classfiletransformer#transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)&quot;&gt; &lt;code&gt;ClassFileTransformer.transform&lt;/code&gt; &lt;/a&gt; 구현에 의해 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="c0b191916804a0ce7ade3e7ad6c72907de653afa" translate="yes" xml:space="preserve">
          <source>Thrown by an implementation of &lt;a href=&quot;classfiletransformer#transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)&quot;&gt;&lt;code&gt;ClassFileTransformer.transform&lt;/code&gt;&lt;/a&gt; when its input parameters are invalid. This may occur either because the initial class file bytes were invalid or a previously applied transform corrupted the bytes.</source>
          <target state="translated">입력 매개 변수가 유효하지 않은 경우 &lt;a href=&quot;classfiletransformer#transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte%5B%5D)&quot;&gt; &lt;code&gt;ClassFileTransformer.transform&lt;/code&gt; &lt;/a&gt; 구현에 의해 발생합니다 . 이는 초기 클래스 파일 바이트가 유효하지 않거나 이전에 적용된 변환으로 인해 바이트가 손상 되었기 때문에 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2026bb949c8942d0b6ff954de426689bedd22a0f" translate="yes" xml:space="preserve">
          <source>Thrown by an implementation of &lt;a href=&quot;classfiletransformer#transform-java.lang.ClassLoader-java.lang.String-java.lang.Class-java.security.ProtectionDomain-byte:A-&quot;&gt;&lt;code&gt;ClassFileTransformer.transform&lt;/code&gt;&lt;/a&gt; when its input parameters are invalid.</source>
          <target state="translated">입력 매개 변수가 유효하지 않은 경우 &lt;a href=&quot;classfiletransformer#transform-java.lang.ClassLoader-java.lang.String-java.lang.Class-java.security.ProtectionDomain-byte:A-&quot;&gt; &lt;code&gt;ClassFileTransformer.transform&lt;/code&gt; &lt;/a&gt; 구현에 의해 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="6451678b25a75ad37657496ad6b021f9742247c7" translate="yes" xml:space="preserve">
          <source>Thrown by an implementation of &lt;a href=&quot;classfiletransformer#transform-java.lang.ClassLoader-java.lang.String-java.lang.Class-java.security.ProtectionDomain-byte:A-&quot;&gt;&lt;code&gt;ClassFileTransformer.transform&lt;/code&gt;&lt;/a&gt; when its input parameters are invalid. This may occur either because the initial class file bytes were invalid or a previously applied transform corrupted the bytes.</source>
          <target state="translated">입력 매개 변수가 유효하지 않은 경우 &lt;a href=&quot;classfiletransformer#transform-java.lang.ClassLoader-java.lang.String-java.lang.Class-java.security.ProtectionDomain-byte:A-&quot;&gt; &lt;code&gt;ClassFileTransformer.transform&lt;/code&gt; &lt;/a&gt; 구현에 의해 발생합니다 . 초기 클래스 파일 바이트가 유효하지 않거나 이전에 적용된 변환으로 인해 바이트가 손상 되었기 때문에 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="36bf512d6b95a3230a8e2fd50d1b4de0d228dc0b" translate="yes" xml:space="preserve">
          <source>Thrown by an implementation of &lt;a href=&quot;instrumentation#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;&lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt;&lt;/a&gt; when one of the specified classes cannot be modified.</source>
          <target state="translated">지정된 클래스 중 하나를 수정할 수없는 경우 &lt;a href=&quot;instrumentation#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt; &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; &lt;/a&gt; 구현에 의해 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="020cb90959939fef07e8618b70b83b808a7ab6c3" translate="yes" xml:space="preserve">
          <source>Thrown by an implementation of &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt;&lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt;&lt;/a&gt; when one of the specified classes cannot be modified.</source>
          <target state="translated">지정된 클래스 중 하나를 수정할 수없는 경우 &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt; &lt;code&gt;Instrumentation.redefineClasses&lt;/code&gt; &lt;/a&gt; 구현에 의해 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="95e9420662d7d9b9afbe109c1554657e148aebbb" translate="yes" xml:space="preserve">
          <source>Thrown by method createFont in the &lt;code&gt;Font&lt;/code&gt; class to indicate that the specified font is bad.</source>
          <target state="translated">지정된 글꼴이 잘못되었음을 나타 내기 위해 &lt;code&gt;Font&lt;/code&gt; 클래스의 createFont 메서드에 의해 throw됩니다 .</target>
        </trans-unit>
        <trans-unit id="d1f4915444489b296f8a95b9b3a5484f0f810de5" translate="yes" xml:space="preserve">
          <source>Thrown by methods in &lt;a href=&quot;locale&quot;&gt;&lt;code&gt;Locale&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;locale.builder&quot;&gt;&lt;code&gt;Locale.Builder&lt;/code&gt;&lt;/a&gt; to indicate that an argument is not a well-formed BCP 47 tag.</source>
          <target state="translated">&lt;a href=&quot;locale&quot;&gt; &lt;code&gt;Locale&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;locale.builder&quot;&gt; &lt;code&gt;Locale.Builder&lt;/code&gt; 의&lt;/a&gt; 메소드에서 인수가 올바른 형식의 BCP 47 태그가 아님을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f7a0ec2666db0d1770ce4ee7ceaa041a300fc918" translate="yes" xml:space="preserve">
          <source>Thrown by methods in the &lt;code&gt;Stack&lt;/code&gt; class to indicate that the stack is empty.</source>
          <target state="translated">스택이 비어 있음을 나타 내기 위해 &lt;code&gt;Stack&lt;/code&gt; 클래스의 메서드에 의해 throw됩니다 .</target>
        </trans-unit>
        <trans-unit id="87839756f2b4a9bdafa9add0a5b76630b551723c" translate="yes" xml:space="preserve">
          <source>Thrown by the security manager to indicate a security violation.</source>
          <target state="translated">보안 관리자가 보안 위반을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="638a53a219cd761cc43bce87f81cd26bd5efe2ad" translate="yes" xml:space="preserve">
          <source>Thrown by various accessor methods to indicate that the element being requested does not exist.</source>
          <target state="translated">요청 된 요소가 존재하지 않음을 나타 내기 위해 다양한 접근 자 메소드에 의해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="508e7b614f5c1b1263478222d628a114be76f6fd" translate="yes" xml:space="preserve">
          <source>Thrown if an application attempts to access or modify a field, or to call a method that it does not have access to.</source>
          <target state="translated">애플리케이션이 필드에 액세스하거나 필드를 수정하려고 시도하거나 액세스 권한이없는 메소드를 호출하려고하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="869d003fbbd88ace377fa534fb1cf7362cbf9994" translate="yes" xml:space="preserve">
          <source>Thrown if an application tries to access or modify a specified field of an object, and that object no longer has that field.</source>
          <target state="translated">응용 프로그램이 객체의 지정된 필드에 액세스하거나 수정하려고하는데 해당 객체에 더 이상 해당 필드가없는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b35416788a1bd097dd83b51fbf396ce3397d9350" translate="yes" xml:space="preserve">
          <source>Thrown if an application tries to call a specified method of a class (either static or instance), and that class no longer has a definition of that method.</source>
          <target state="translated">애플리케이션이 클래스의 지정된 메소드 (정적 또는 인스턴스)를 호출하려고 시도하고 해당 클래스에 더 이상 해당 메소드의 정의가없는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4aa5f401421c28f34721102b2aaea3b599adcdcf" translate="yes" xml:space="preserve">
          <source>Thrown if an application tries to create an array with negative size.</source>
          <target state="translated">응용 프로그램이 음의 크기로 배열을 만들려고하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4cacfda15a370bf1f448b1b8734326c58b5e5ab2" translate="yes" xml:space="preserve">
          <source>Thrown if the Java Virtual Machine cannot find an appropriate native-language definition of a method declared &lt;code&gt;native&lt;/code&gt;.</source>
          <target state="translated">방법의 적절한 네이티브 언어의 정의를 찾을 수없는 Java 가상 머신이 선언 된 경우에 슬로우 &lt;code&gt;native&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ed4b30764bfef85ec04d2330e9c4230db6e74c8e" translate="yes" xml:space="preserve">
          <source>Thrown if the Java Virtual Machine or a &lt;code&gt;ClassLoader&lt;/code&gt; instance tries to load in the definition of a class (as part of a normal method call or as part of creating a new instance using the &lt;code&gt;new&lt;/code&gt; expression) and no definition of the class could be found.</source>
          <target state="translated">Java Virtual Machine 또는 &lt;code&gt;ClassLoader&lt;/code&gt; 인스턴스가 클래스의 정의 (일반 메소드 호출의 일부 또는 &lt;code&gt;new&lt;/code&gt; 표현식을 사용하여 새 인스턴스를 작성하는 일부)를로드하려고 시도하고 클래스 정의를 찾을 수없는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e2a4785aa211f2dc50660bf09b1edea5405e82d1" translate="yes" xml:space="preserve">
          <source>Thrown to indicate a duplicate event request.</source>
          <target state="translated">중복 이벤트 요청을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e41a5283fb09f87113fc151fba33158899deefe0" translate="yes" xml:space="preserve">
          <source>Thrown to indicate a problem with time-zone configuration.</source>
          <target state="translated">시간대 구성에 문제가 있음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a00c65c8705273b864506f2439a5ce94c07ab7e1" translate="yes" xml:space="preserve">
          <source>Thrown to indicate a type mismatch in setting the value of a field or variable, or in specifying the return value of a method.</source>
          <target state="translated">필드 또는 변수의 값을 설정하거나 메서드의 반환 값을 지정할 때 유형 불일치를 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="07f51e8fc28174460f9c752b1eaea8720524716f" translate="yes" xml:space="preserve">
          <source>Thrown to indicate an exception occurred in an invoked method within the target VM.</source>
          <target state="translated">대상 VM 내에서 호출 된 메서드에서 예외가 발생했음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c458fce325e565591ddac6f889e8b33b0bd6f707" translate="yes" xml:space="preserve">
          <source>Thrown to indicate an invalid argument or inconsistent passed to a &lt;a href=&quot;connector&quot;&gt;&lt;code&gt;Connector&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">유효하지 않은 인수 또는 &lt;a href=&quot;connector&quot;&gt; &lt;code&gt;Connector&lt;/code&gt; &lt;/a&gt; 전달 된 일관성이 없음을 나타 내기 위해 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="e633b8d9881d69fa335af23e48c98b66a7c163ab" translate="yes" xml:space="preserve">
          <source>Thrown to indicate an operation cannot be completed because it is not valid for a native method.</source>
          <target state="translated">네이티브 메서드에 유효하지 않기 때문에 작업을 완료 할 수 없음을 나타 내기 위해 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="7edb569a990a4308177a3298535d51a76693af6d" translate="yes" xml:space="preserve">
          <source>Thrown to indicate line number or variable information is not available.</source>
          <target state="translated">줄 번호 또는 변수 정보를 사용할 수 없음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3983324dddc861a832d725ae45cd3b7f60d3579e" translate="yes" xml:space="preserve">
          <source>Thrown to indicate some unexpected internal error has occurred in the Java Virtual Machine.</source>
          <target state="translated">Java Virtual Machine에서 예기치 않은 내부 오류가 발생했음을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7e3e4a0f1f3fa89bbf8d9b5da71fc426af023520" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a HTTP request needs to be retried but cannot be retried automatically, due to streaming mode being enabled.</source>
          <target state="translated">스트리밍 모드가 사용 가능하여 HTTP 요청을 재 시도해야하지만 자동으로 재 시도 할 수 없음을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="540d804314f89ee62b22cb986c1385ddf340ae9d" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a malformed URL has occurred.</source>
          <target state="translated">잘못된 URL이 발생했음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="fa6f32daeda821c29c3ca8469339c0da181d14f4" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a malformed URL has occurred. Either no legal protocol could be found in a specification string or the string could not be parsed.</source>
          <target state="translated">잘못된 URL이 발생했음을 나타 내기 위해 발생합니다. 사양 문자열에서 유효한 프로토콜을 찾을 수 없거나 문자열을 구문 분석 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9b27cf873b7ec3e49797e7c1bd9474615d97e0ff" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a method has been called by an inappropriate caller.</source>
          <target state="translated">부적절한 호출자가 메서드를 호출했음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="db0c26de4391b628372b987bc09c64a422883e4c" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a method has been passed an illegal or inappropriate argument.</source>
          <target state="translated">메소드에 불법 또는 부적절한 인수가 전달되었음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="2ddb6d8e4d777c420df81b8d63878b60ae16bf67" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a module cannot be modified.</source>
          <target state="translated">모듈을 수정할 수 없음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3969dcb5b1cacd4b351f464d7cbd2f69e84f3112" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a preferences operation could not complete because of a failure in the backing store, or a failure to contact the backing store.</source>
          <target state="translated">백업 저장소의 실패 또는 백업 저장소에 연결하지 못해 환경 설정 작업을 완료 할 수 없음을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f2ddf5259c94abd224ba4a9bb539fc79886290d3" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a program has attempted to access an element of an annotation type that was added to the annotation type definition after the annotation was compiled (or serialized).</source>
          <target state="translated">주석이 컴파일 (또는 직렬화) 된 후 주석 유형 정의에 추가 된 주석 유형의 요소에 프로그램이 액세스하려고 시도했음을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5239569b289f742c10f1a049c81ec9e3872a1bbe" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a program has attempted to access an element of an annotation type that was added to the annotation type definition after the annotation was compiled (or serialized). This exception will not be thrown if the new element has a default value. This exception can be thrown by the &lt;a href=&quot;../reflect/annotatedelement&quot;&gt;API used to read annotations reflectively&lt;/a&gt;.</source>
          <target state="translated">주석이 컴파일 (또는 직렬화) 된 후 주석 유형 정의에 추가 된 주석 유형의 요소에 프로그램이 액세스하려고 시도했음을 표시하기 위해 발생합니다. 새 요소에 기본값이있는 경우이 예외가 발생하지 않습니다. 이 예외는 &lt;a href=&quot;../reflect/annotatedelement&quot;&gt;주석을 반사적으로 읽는 데 사용되는 API에&lt;/a&gt; 의해 발생 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="396e7ce9ea643597626cd549a33491cd8c6ef479" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a program has attempted to access an element of an annotation whose type has changed after the annotation was compiled (or serialized).</source>
          <target state="translated">주석이 컴파일 (또는 직렬화) 된 후 유형이 변경된 주석의 요소에 프로그램이 액세스하려고 시도했음을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b56668c6b68c397fb5a223b8e1ca0567f75cb2a3" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a program has attempted to access an element of an annotation whose type has changed after the annotation was compiled (or serialized). This exception can be thrown by the &lt;a href=&quot;../reflect/annotatedelement&quot;&gt;API used to read annotations reflectively&lt;/a&gt;.</source>
          <target state="translated">주석이 컴파일 (또는 직렬화) 된 후 유형이 변경된 주석의 요소에 프로그램이 액세스하려고 시도했음을 표시하기 위해 발생합니다. 이 예외는 &lt;a href=&quot;../reflect/annotatedelement&quot;&gt;주석을 반사적으로 읽는 데 사용되는 API에&lt;/a&gt; 의해 발생 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5d4c519a933997728d1498c9a610464926087237" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a thread has attempted to wait on an object's monitor or to notify other threads waiting on an object's monitor without owning the specified monitor.</source>
          <target state="translated">스레드가 객체의 모니터에서 대기를 시도했거나 지정된 모니터를 소유하지 않고 객체의 모니터에서 대기중인 다른 스레드에 알리려고 시도했음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f5640785c45e7765a6d9b60e968cf411a55241ae" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a thread is not in an appropriate state for the requested operation.</source>
          <target state="translated">요청 된 작업에 스레드가 적절한 상태가 아님을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="104f9c2d0af4cd752935e91bc4dac004678b631a" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that a thread is not in an appropriate state for the requested operation. See, for example, the &lt;code&gt;suspend&lt;/code&gt; and &lt;code&gt;resume&lt;/code&gt; methods in class &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="translated">요청 된 작업에 스레드가 적절한 상태가 아님을 나타 내기 위해 발생합니다. 예를 들어 &lt;code&gt;Thread&lt;/code&gt; 클래스 의 &lt;code&gt;suspend&lt;/code&gt; 및 &lt;code&gt;resume&lt;/code&gt; 메소드를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="66861cc613fc6090138285ae273fece145579c8e" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an &lt;code&gt;invokedynamic&lt;/code&gt; instruction has failed to find its bootstrap method, or the bootstrap method has failed to provide a &lt;a href=&quot;invoke/callsite&quot;&gt;call site&lt;/a&gt; with a &lt;a href=&quot;invoke/callsite#getTarget--&quot;&gt;target&lt;/a&gt; of the correct &lt;a href=&quot;invoke/methodhandle#type&quot;&gt;method type&lt;/a&gt;.</source>
          <target state="translated">것을 나타 내기 위해서 (때문에) 슬로우 &lt;code&gt;invokedynamic&lt;/code&gt; 명령은 부트 스트랩 방법을 찾기 위해 실패, 또는 부트 스트랩 방법은 제공하지 못한 &lt;a href=&quot;invoke/callsite&quot;&gt;호출 사이트&lt;/a&gt; A를 &lt;a href=&quot;invoke/callsite#getTarget--&quot;&gt;대상&lt;/a&gt; 올바른의 &lt;a href=&quot;invoke/methodhandle#type&quot;&gt;방법의 유형을&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8867bef35b671e2b21250e6f5c954f39b1db2ea2" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an &lt;code&gt;invokedynamic&lt;/code&gt; instruction or a dynamic constant failed to resolve its bootstrap method and arguments, or for &lt;code&gt;invokedynamic&lt;/code&gt; instruction the bootstrap method has failed to provide a &lt;a href=&quot;invoke/callsite&quot;&gt;call site&lt;/a&gt; with a &lt;a href=&quot;invoke/callsite#getTarget()&quot;&gt;target&lt;/a&gt; of the correct &lt;a href=&quot;invoke/methodhandle#type()&quot;&gt;method type&lt;/a&gt;, or for a dynamic constant the bootstrap method has failed to provide a constant value of the required type.</source>
          <target state="translated">것을 나타 내기 위해서 (때문에) 슬로우 &lt;code&gt;invokedynamic&lt;/code&gt; 명령 또는 동적 상수는 부트 스트랩 방법과 인수를 해결하는 데 실패, 또는 &lt;code&gt;invokedynamic&lt;/code&gt; 명령 부트 스트랩 방법은 제공하지 못한 &lt;a href=&quot;invoke/callsite&quot;&gt;호출 사이트&lt;/a&gt; A를 &lt;a href=&quot;invoke/callsite#getTarget()&quot;&gt;대상&lt;/a&gt; 올바른의 &lt;a href=&quot;invoke/methodhandle#type()&quot;&gt;방법의 유형을&lt;/a&gt; , 또는 동적 상수 부트 스트랩에 대한 메소드가 필수 유형의 상수 값을 제공하지 못했습니다.</target>
        </trans-unit>
        <trans-unit id="102ef32c651cb8c531134e2d5666f4c8921e8d5a" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an array has been accessed with an illegal index.</source>
          <target state="translated">잘못된 인덱스로 배열에 액세스했음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e638105227ffc56d46887520a9df3fe725ecf6bf" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an array has been accessed with an illegal index. The index is either negative or greater than or equal to the size of the array.</source>
          <target state="translated">잘못된 인덱스로 배열에 액세스했음을 나타 내기 위해 발생합니다. 인덱스가 음수이거나 배열 크기보다 크거나 같습니다.</target>
        </trans-unit>
        <trans-unit id="3788a6bc96dd93a0423e65a2392c4aefa6564479" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an assertion has failed.</source>
          <target state="translated">어설 션이 실패했음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c4b932c33fe1548f8d27998a525122baefbc9517" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an attempt has been made to store the wrong type of object into an array of objects.</source>
          <target state="translated">잘못된 유형의 객체를 객체 배열에 저장하려고 시도했음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7f8dfd8c4ad7a3be4deff5dd0a1a73d68b62f9a3" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an attempt has been made to store the wrong type of object into an array of objects. For example, the following code generates an &lt;code&gt;ArrayStoreException&lt;/code&gt;:</source>
          <target state="translated">잘못된 유형의 객체를 객체 배열에 저장하려고 시도했음을 나타냅니다. 예를 들어 다음 코드는 &lt;code&gt;ArrayStoreException&lt;/code&gt; 을 생성합니다 .</target>
        </trans-unit>
        <trans-unit id="f2f6549a0587858bd0fb2c54a050332bf79bf62e" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an index of some sort (such as to an array, to a string, or to a vector) is out of range.</source>
          <target state="translated">배열, 문자열 또는 벡터와 같은 일종의 인덱스가 범위를 벗어 났음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="41a57f59f92df555e7bc14534566186bfe4a4075" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an operation could not complete because the input did not conform to the appropriate XML document type for a collection of preferences, as per the &lt;a href=&quot;preferences&quot;&gt;&lt;code&gt;Preferences&lt;/code&gt;&lt;/a&gt; specification.</source>
          <target state="translated">&lt;a href=&quot;preferences&quot;&gt; &lt;code&gt;Preferences&lt;/code&gt; &lt;/a&gt; 스펙에 따라 입력이 기본 설정 콜렉션에 적합한 XML 문서 유형을 준수하지 않아 조작을 완료 할 수 없음을 표시하기 위해 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="4ef87496cb36d2707364b4b160f0cab796ab79c2" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an operation could not complete because the input did not conform to the appropriate XML document type for a collection of properties, as per the &lt;a href=&quot;properties&quot;&gt;&lt;code&gt;Properties&lt;/code&gt;&lt;/a&gt; specification.</source>
          <target state="translated">입력이 &lt;a href=&quot;properties&quot;&gt; &lt;code&gt;Properties&lt;/code&gt; &lt;/a&gt; 스펙에 따라 특성 콜렉션에 대한 적절한 XML 문서 유형을 준수하지 않아 조작을 완료 할 수 없음을 표시하기 위해 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="8103270cbbd1a662984e3a54fc94c6e14c56503c" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an unexpected internal error has occurred.</source>
          <target state="translated">예기치 않은 내부 오류가 발생했음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="af993c3944abc68b7713ec33d09f8faacc3dade8" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an unknown service exception has occurred.</source>
          <target state="translated">알 수없는 서비스 예외가 발생했음을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="84b381bb1c81dc4ca192e0de5ff0ecde91c4dac6" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that an unknown service exception has occurred. Either the MIME type returned by a URL connection does not make sense, or the application is attempting to write to a read-only URL connection.</source>
          <target state="translated">알 수없는 서비스 예외가 발생했음을 표시하기 위해 발생합니다. URL 연결에서 반환 된 MIME 형식이 의미가 없거나 응용 프로그램이 읽기 전용 URL 연결에 쓰려고합니다.</target>
        </trans-unit>
        <trans-unit id="5493a6ebb1e010e9dd2cea973b53ecbf4af2dea2" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that code has attempted to call a method handle via the wrong method type.</source>
          <target state="translated">코드가 잘못된 메소드 유형을 통해 메소드 핸들을 호출하려고 시도했음을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="92ac50091a1f8c77798686f70107577cf2451182" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that code has attempted to call a method handle via the wrong method type. As with the bytecode representation of normal Java method calls, method handle calls are strongly typed to a specific type descriptor associated with a call site.</source>
          <target state="translated">코드가 잘못된 메소드 유형을 통해 메소드 핸들을 호출하려고 시도했음을 표시하기 위해 발생합니다. 일반적인 Java 메소드 호출의 바이트 코드 표시와 마찬가지로 메소드 핸들 호출은 호출 사이트와 연관된 특정 유형 설명 자로 강력하게 유형 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="f92c41a850d254a4780135c9c69967168dabaafc" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the &lt;code&gt;clone&lt;/code&gt; method in class &lt;code&gt;Object&lt;/code&gt; has been called to clone an object, but that the object's class does not implement the &lt;code&gt;Cloneable&lt;/code&gt; interface.</source>
          <target state="translated">클래스 의 &lt;code&gt;clone&lt;/code&gt; 메소드 를 나타냅니다 &lt;code&gt;Object&lt;/code&gt; 오브젝트 를 복제하기 위해 호출되었지만 오브젝트의 클래스가 &lt;code&gt;Cloneable&lt;/code&gt; 인터페이스를 구현하지 않음을 표시하기 위해 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="d8478a05f127fe7cb9c0488a21cfdaaa771e4f86" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the IP address of a host could not be determined.</source>
          <target state="translated">호스트의 IP 주소를 확인할 수 없음을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="efa7f8c02d77f4c0cf3b797c8fcecce755192567" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the Java Virtual Machine is broken or has run out of resources necessary for it to continue operating.</source>
          <target state="translated">JVM (Java Virtual Machine)이 손상되었거나 계속 작동하는 데 필요한 자원이 부족함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="383825884ffb24c7fd28f3f1256478dd6354193a" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the application has attempted to convert a string to one of the numeric types, but that the string does not have the appropriate format.</source>
          <target state="translated">응용 프로그램이 문자열을 숫자 유형 중 하나로 변환하려고 시도했지만 문자열의 형식이 올바르지 않음을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2d77fa13959fc7eaa7f9d341784fbcd5f5ca9eea" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the code has attempted to cast an object to a subclass of which it is not an instance.</source>
          <target state="translated">코드가 객체가 인스턴스가 아닌 서브 클래스로 캐스트하려고 시도했음을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c506a5ebbdd9f9271eda27d1cea842ba88758187" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the code has attempted to cast an object to a subclass of which it is not an instance. For example, the following code generates a &lt;code&gt;ClassCastException&lt;/code&gt;:</source>
          <target state="translated">코드가 객체가 인스턴스가 아닌 서브 클래스로 캐스트하려고 시도했음을 표시하기 위해 발생합니다. 예를 들어 다음 코드는 &lt;code&gt;ClassCastException&lt;/code&gt; 을 생성 합니다. .</target>
        </trans-unit>
        <trans-unit id="5cf58324758dffc1d1155b8ef72111f96620a3e6" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the operation is invalid because it would modify the VM and the VM is read-only.</source>
          <target state="translated">VM을 수정하고 VM이 읽기 전용이므로 작업이 유효하지 않음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c0f0a14787bcec58470322c418ddf9cd14570f7d" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the operation is invalid because it would modify the VM and the VM is read-only. See &lt;a href=&quot;virtualmachine#canBeModified()&quot;&gt;&lt;code&gt;VirtualMachine.canBeModified()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">VM을 수정하고 VM이 읽기 전용이므로 작업이 유효하지 않음을 나타 내기 위해 발생합니다. &lt;a href=&quot;virtualmachine#canBeModified()&quot;&gt; &lt;code&gt;VirtualMachine.canBeModified()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a907b8d33d2f53eb11c1d849ed25a86a68162360" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested class has not yet been loaded through the appropriate class loader.</source>
          <target state="translated">요청 된 클래스가 적절한 클래스 로더를 통해 아직로드되지 않았 음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c2e8060d0aa162837e712d9a9d2d1e30b4b56b19" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested event cannot be modified because it is enabled.</source>
          <target state="translated">요청 된 이벤트가 활성화 되었기 때문에 수정할 수 없음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="97eae1a95388dd8252326acf4bcbc9c1bb80f215" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested event cannot be modified because it is enabled. Filters can be added only to disabled event requests. Also thrown if an operation is attempted on a deleted request. See &lt;a href=&quot;eventrequestmanager#deleteEventRequest(com.sun.jdi.request.EventRequest)&quot;&gt;&lt;code&gt;EventRequestManager.deleteEventRequest(EventRequest)&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">요청 된 이벤트가 활성화 되었기 때문에 수정할 수 없음을 나타 내기 위해 발생합니다. 비활성화 된 이벤트 요청에만 필터를 추가 할 수 있습니다. 삭제 된 요청에 대해 작업을 시도하는 경우에도 throw됩니다. &lt;a href=&quot;eventrequestmanager#deleteEventRequest(com.sun.jdi.request.EventRequest)&quot;&gt; &lt;code&gt;EventRequestManager.deleteEventRequest(EventRequest)&lt;/code&gt; &lt;/a&gt; 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5253e21cb5e4058201f1c7c99bfc9f5b403bdee9" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested module is invalid or became invalid after the module was unloaded.</source>
          <target state="translated">요청 된 모듈이 유효하지 않거나 모듈이 언로드 된 후 무효화되었음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d307b74b79419674c3280f83642278de542e5396" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be completed because the a mirror from one target VM is being combined with a mirror from another target VM.</source>
          <target state="translated">한 대상 VM의 미러가 다른 대상 VM의 미러와 결합되어 요청 된 작업을 완료 할 수 없음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="bb4e6d6ccdbc295a36a6c66c95000478dd57db96" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be completed because the specified class has not yet been prepared.</source>
          <target state="translated">지정된 클래스가 아직 준비되지 않았기 때문에 요청 된 작업을 완료 할 수 없음을 나타 내기 위해 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="3dcef24880fabaa3219fd4d8cb3c1a3c502b1d6d" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be completed because the specified code index is not valid.</source>
          <target state="translated">지정된 코드 색인이 유효하지 않기 때문에 요청 된 작업을 완료 할 수 없음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="205697ac6157292f3aa8720ffd2dd16bdf495f37" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be completed because the specified line number is not valid.</source>
          <target state="translated">지정된 라인 번호가 유효하지 않기 때문에 요청 된 작업을 완료 할 수 없음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ffbc4240eb01fd432405bed5c3f0729ff99738e7" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be completed because the specified object has been garbage collected.</source>
          <target state="translated">지정된 개체가 가비지 수집 되었기 때문에 요청 된 작업을 완료 할 수 없음을 나타 내기 위해 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="3c5739d7c57b78a0ea095dea77cbea94fc204a84" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be completed because the specified stack frame is no longer valid.</source>
          <target state="translated">지정된 스택 프레임이 더 이상 유효하지 않기 때문에 요청 된 작업을 완료 할 수 없음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1fa3a4ea21e600b1834769e749179e269e329d1e" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be completed because the target VM has run out of memory.</source>
          <target state="translated">대상 VM의 메모리가 부족하여 요청 된 작업을 완료 할 수 없음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="25f70451808d82b8a68f173dd4fcef3a05f2c206" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be completed while the specified thread is in its current state.</source>
          <target state="translated">지정된 스레드가 현재 상태에있는 동안 요청 된 작업을 완료 할 수 없음을 나타 내기 위해 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="41a1967fe0da3125703acfb2f8268a0b79a2042b" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation cannot be performed because the set is unmodifiable.</source>
          <target state="translated">세트를 수정할 수 없기 때문에 요청한 작업을 수행 할 수 없음을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c5b1734f96c51dcec87166c6792985e9dc831b91" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that the requested operation is not supported.</source>
          <target state="translated">요청한 작업이 지원되지 않음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d99d78d4dde5392bb96f28ceab1fd0b14f1f18e4" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that there is an error creating or accessing a Socket.</source>
          <target state="translated">소켓을 작성하거나 액세스하는 중 오류가 발생했음을 표시하기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9cf43f98e6868d5fac49daf31f93cdbc9d0c4f2f" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that there is an error in the underlying protocol, such as a TCP error.</source>
          <target state="translated">기본 프로토콜에 TCP 오류와 같은 오류가 있음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="16397a05b50ec9b4384ee8d0332c486d0cbaefec" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that there is an inconistency in the debug information provided by the target VM.</source>
          <target state="translated">대상 VM에서 제공하는 디버그 정보에 불일치가 있음을 나타 내기 위해 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a59844f73f2ae72bf41d36aa51b2d277b46f13a1" translate="yes" xml:space="preserve">
          <source>Thrown to indicate that there is an inconistency in the debug information provided by the target VM. For example, this exception is thrown if there is a type mismatch between a retrieved value's runtime type and its declared type as reported by the target VM.</source>
          <target state="translated">대상 VM에서 제공하는 디버그 정보에 불일치가 있음을 나타 내기 위해 발생합니다. 예를 들어, 검색된 값의 런타임 유형과 대상 VM에서보고 한 선언 된 유형간에 유형 불일치가있는 경우이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0020a2f014df109b88c150090155fe5e0ff392a6" translate="yes" xml:space="preserve">
          <source>Thrown when &lt;a href=&quot;executable#getParameters()&quot;&gt;&lt;code&gt;the
 java.lang.reflect package&lt;/code&gt;&lt;/a&gt; attempts to read method parameters from a class file and determines that one or more parameters are malformed.</source>
          <target state="translated">&lt;a href=&quot;executable#getParameters()&quot;&gt; &lt;code&gt;the java.lang.reflect package&lt;/code&gt; &lt;/a&gt; 가 클래스 파일에서 메소드 매개 변수를 읽으려고 시도하고 하나 이상의 매개 변수가 잘못된 형식임을 판별 할 때 발생 합니다 .</target>
        </trans-unit>
        <trans-unit id="5966211edde30cdd2a3cf811bcc64351630ec522" translate="yes" xml:space="preserve">
          <source>Thrown when &lt;a href=&quot;executable#getParameters--&quot;&gt;&lt;code&gt;the
 java.lang.reflect package&lt;/code&gt;&lt;/a&gt; attempts to read method parameters from a class file and determines that one or more parameters are malformed.</source>
          <target state="translated">경우에 슬로우 &lt;a href=&quot;executable#getParameters--&quot;&gt; &lt;code&gt;the java.lang.reflect package&lt;/code&gt; &lt;/a&gt; 시도가 클래스 파일에서 메서드 매개 변수를 읽고 하나 이상의 매개 변수 형식이 잘못되어 있다고 판단 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d2951857e3709e7ab46537dafc94ee6564ca9b97" translate="yes" xml:space="preserve">
          <source>Thrown when Java language access checks cannot be suppressed.</source>
          <target state="translated">Java 언어 액세스 검사를 억제 할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cb4220a02882b11343f17a0ea2b10800ca84cf61" translate="yes" xml:space="preserve">
          <source>Thrown when a connection, over which an &lt;code&gt;HttpRequest&lt;/code&gt; is intended to be sent, is not successfully established within a specified time period.</source>
          <target state="translated">&lt;code&gt;HttpRequest&lt;/code&gt; 를 보내려 는 연결 이 지정된 기간 내에 성공적으로 설정되지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ea327af5e49b562dedb37469442db8fcd3880f1e" translate="yes" xml:space="preserve">
          <source>Thrown when a file system operation fails on one or two files.</source>
          <target state="translated">하나 또는 두 개의 파일에서 파일 시스템 작업이 실패하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c1c8ea5944303943cba55b2bd34f2f77daa12756" translate="yes" xml:space="preserve">
          <source>Thrown when a file system operation fails on one or two files. This class is the general class for file system exceptions.</source>
          <target state="translated">하나 또는 두 개의 파일에서 파일 시스템 작업이 실패하면 발생합니다. 이 클래스는 파일 시스템 예외의 일반 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="5b356658f537a4564f86e8316f0d9b9d4bd5b569" translate="yes" xml:space="preserve">
          <source>Thrown when a particular method cannot be found.</source>
          <target state="translated">특정 메소드를 찾을 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c7af046ff6245868c073a5d05a8d58efb250301d" translate="yes" xml:space="preserve">
          <source>Thrown when a problem with configuration with the Parser Factories exists.</source>
          <target state="translated">파서 팩토리 구성에 문제가있을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="2066b17ef3e174b88acffb0963013f5940815b33" translate="yes" xml:space="preserve">
          <source>Thrown when a problem with configuration with the Parser Factories exists. This error will typically be thrown when the class of a parser factory specified in the system properties cannot be found or instantiated.</source>
          <target state="translated">파서 팩토리 구성에 문제가있을 때 발생합니다. 이 오류는 일반적으로 시스템 속성에 지정된 파서 팩토리의 클래스를 찾거나 인스턴스화 할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b9443a6c7fb738aebf8ff35da034e42d8123b0ee" translate="yes" xml:space="preserve">
          <source>Thrown when a problem with configuration with the Schema Factories exists.</source>
          <target state="translated">스키마 팩토리 구성에 문제가있을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="cebc51291159e9576fc227fcf27e79451ea6cc05" translate="yes" xml:space="preserve">
          <source>Thrown when a problem with configuration with the Schema Factories exists. This error will typically be thrown when the class of a schema factory specified in the system properties cannot be found or instantiated.</source>
          <target state="translated">스키마 팩토리 구성에 문제가있을 때 발생합니다. 이 오류는 일반적으로 시스템 속성에 지정된 스키마 팩토리의 클래스를 찾거나 인스턴스화 할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d3e42270794da6b2c96e0d3f8ad29d66d755b986" translate="yes" xml:space="preserve">
          <source>Thrown when a problem with configuration with the Transformer Factories exists.</source>
          <target state="translated">Transformer Factory 구성에 문제가있을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9955c7643c81f67e799716917c8f3ede4685a928" translate="yes" xml:space="preserve">
          <source>Thrown when a problem with configuration with the Transformer Factories exists. This error will typically be thrown when the class of a transformation factory specified in the system properties cannot be found or instantiated.</source>
          <target state="translated">Transformer Factory 구성에 문제가있을 때 발생합니다. 이 오류는 일반적으로 시스템 속성에 지정된 변환 팩토리의 클래스를 찾거나 인스턴스화 할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3888570a9ed2851c78f15065dafecd85068689fb" translate="yes" xml:space="preserve">
          <source>Thrown when a response is not received within a specified time period.</source>
          <target state="translated">지정된 시간 내에 응답이 수신되지 않을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="473aef2086c18bb75b2527e5f479c40478fb31a6" translate="yes" xml:space="preserve">
          <source>Thrown when a semantically malformed parameterized type is encountered by a reflective method that needs to instantiate it.</source>
          <target state="translated">의미 론적으로 잘못된 매개 변수화 된 유형이 인스턴스화해야하는 반사 메소드에 의해 발생하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="abc8d3f3349c445f738743923e1d85c669bd665d" translate="yes" xml:space="preserve">
          <source>Thrown when a semantically malformed parameterized type is encountered by a reflective method that needs to instantiate it. For example, if the number of type arguments to a parameterized type is wrong.</source>
          <target state="translated">의미 론적으로 잘못된 매개 변수화 된 유형이 인스턴스화해야하는 반사 메소드에 의해 발생하면 발생합니다. 예를 들어, 매개 변수화 된 유형에 대한 유형 인수 수가 올바르지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="1f83e8d7c62a2be973442f570ebc9fd648e27703" translate="yes" xml:space="preserve">
          <source>Thrown when a serious Abstract Window Toolkit error has occurred.</source>
          <target state="translated">심각한 Abstract Window Toolkit 오류가 발생했을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e9f3c5a41292fa168570f2fd4a41460ed538818e" translate="yes" xml:space="preserve">
          <source>Thrown when a serious I/O error has occurred.</source>
          <target state="translated">심각한 I / O 오류가 발생했을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6c339926ccc01f06f95cfd36ba516e167e648173" translate="yes" xml:space="preserve">
          <source>Thrown when a stack overflow occurs because an application recurses too deeply.</source>
          <target state="translated">응용 프로그램이 너무 심하게 반복되어 스택 오버플로가 발생하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a69fa9230dccf801abde7f829b6712ffde1f2600" translate="yes" xml:space="preserve">
          <source>Thrown when a syntactically malformed signature attribute is encountered by a reflective method that needs to interpret the generic signature information for a type, method or constructor.</source>
          <target state="translated">구문 적으로 형식이 잘못된 서명 속성이 유형, 메서드 또는 생성자의 일반 서명 정보를 해석해야하는 리플렉션 방법에 의해 발견되면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="13159ce6dfd56a2d1d891aba708f3644e1858209" translate="yes" xml:space="preserve">
          <source>Thrown when a thread is waiting, sleeping, or otherwise occupied, and the thread is interrupted, either before or during the activity.</source>
          <target state="translated">스레드가 대기 중이거나 휴면 상태이거나 점유되어 있고 활동 전 또는 활동 중에 스레드가 중단 된 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a09b0f18154fb0be95c6024931d3b93eefc7c0c0" translate="yes" xml:space="preserve">
          <source>Thrown when a thread is waiting, sleeping, or otherwise occupied, and the thread is interrupted, either before or during the activity. Occasionally a method may wish to test whether the current thread has been interrupted, and if so, to immediately throw this exception. The following code can be used to achieve this effect:</source>
          <target state="translated">스레드가 대기 중이거나 휴면 상태이거나 점유되어 있고 활동 전 또는 활동 중에 스레드가 중단 된 경우 발생합니다. 때때로 메소드는 현재 스레드가 인터럽트되었는지 여부를 테스트하고,이 경우 즉시이 예외를 발생시키기를 원할 수 있습니다. 이 효과를 얻기 위해 다음 코드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ffc50e4e05b8b47fba417b04297bdf0aa5a790fd" translate="yes" xml:space="preserve">
          <source>Thrown when an UndoableEdit is told to &lt;code&gt;redo()&lt;/code&gt; and can't.</source>
          <target state="translated">UndoableEdit가 &lt;code&gt;redo()&lt;/code&gt; 명령을 받았지만 할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="690e36e00543576250919a2418fe6f7708155e3a" translate="yes" xml:space="preserve">
          <source>Thrown when an UndoableEdit is told to &lt;code&gt;undo()&lt;/code&gt; and can't.</source>
          <target state="translated">UndoableEdit가 &lt;code&gt;undo()&lt;/code&gt; 명령을 받았지만 할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="941d7ef48c29f364b6afef1778dd397e9666f698" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to access a sequence of &lt;a href=&quot;../../../../../java.base/java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; objects each corresponding to a &lt;a href=&quot;typemirror&quot;&gt;&lt;code&gt;TypeMirror&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">애플리케이션이 각각 &lt;a href=&quot;typemirror&quot;&gt; &lt;code&gt;TypeMirror&lt;/code&gt; 에&lt;/a&gt; 해당 하는 일련의 &lt;a href=&quot;../../../../../java.base/java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 객체 에 액세스하려고 할 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="225db7a3c32fdda714d3a100271f518cdd05102e" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to access a sequence of &lt;a href=&quot;../../../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; objects each corresponding to a &lt;a href=&quot;typemirror&quot;&gt;&lt;code&gt;TypeMirror&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">응용 프로그램이 각각 &lt;a href=&quot;typemirror&quot;&gt; &lt;code&gt;TypeMirror&lt;/code&gt; 에&lt;/a&gt; 해당 하는 일련의 &lt;a href=&quot;../../../../java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 객체 에 액세스하려고 할 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="8dc8a7aff1a9851ac4a3c07027a0feabd12085d4" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to access the &lt;a href=&quot;../../../../../java.base/java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object corresponding to a &lt;a href=&quot;typemirror&quot;&gt;&lt;code&gt;TypeMirror&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">응용 프로그램 이 &lt;a href=&quot;typemirror&quot;&gt; &lt;code&gt;TypeMirror&lt;/code&gt; 에&lt;/a&gt; 해당하는 &lt;a href=&quot;../../../../../java.base/java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 객체 에 액세스하려고 할 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="0e9acf0947c9de40df52ae2fe13a861f6ea15113" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to access the &lt;a href=&quot;../../../../java/lang/class&quot;&gt;&lt;code&gt;Class&lt;/code&gt;&lt;/a&gt; object corresponding to a &lt;a href=&quot;typemirror&quot;&gt;&lt;code&gt;TypeMirror&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">응용 프로그램 이 &lt;a href=&quot;typemirror&quot;&gt; &lt;code&gt;TypeMirror&lt;/code&gt; 에&lt;/a&gt; 해당하는 &lt;a href=&quot;../../../../java/lang/class&quot;&gt; &lt;code&gt;Class&lt;/code&gt; &lt;/a&gt; 객체 에 액세스하려고하면 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="b6d2fa5db6cc3f5ae02f3bb6d25cd64e447d437b" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to use &lt;code&gt;null&lt;/code&gt; in a case where an object is required.</source>
          <target state="translated">응용 프로그램에서 &lt;code&gt;null&lt;/code&gt; 을 사용하려고하면 발생합니다.객체가 필요한 경우 에서 하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="54d794833472e9887dedcf95a573622747a3250e" translate="yes" xml:space="preserve">
          <source>Thrown when an application attempts to use &lt;code&gt;null&lt;/code&gt; in a case where an object is required. These include:</source>
          <target state="translated">객체가 필요한 경우 응용 프로그램 에서 &lt;code&gt;null&lt;/code&gt; 을 사용하려고 하면 발생합니다. 여기에는 다음이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="0efdcf35f82ddf5acbc1ee386d430193d9c08f60" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to access a type using a string representing the type's name, but no definition for the type with the specified name can be found.</source>
          <target state="translated">응용 프로그램에서 형식 이름을 나타내는 문자열을 사용하여 형식에 액세스하려고 시도하지만 지정된 이름의 형식에 대한 정의를 찾을 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="d583f6390e88d58a321cdd57cd3f045c610841a6" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to access a type using a string representing the type's name, but no definition for the type with the specified name can be found. This exception differs from &lt;a href=&quot;classnotfoundexception&quot;&gt;&lt;code&gt;ClassNotFoundException&lt;/code&gt;&lt;/a&gt; in that &lt;code&gt;ClassNotFoundException&lt;/code&gt; is a checked exception, whereas this exception is unchecked.</source>
          <target state="translated">응용 프로그램에서 형식 이름을 나타내는 문자열을 사용하여 형식에 액세스하려고 시도하지만 지정된 이름의 형식에 대한 정의를 찾을 수 없습니다. 이 예외는 &lt;code&gt;ClassNotFoundException&lt;/code&gt; 이 확인 된 예외 인 반면,이 예외는 확인되지 않는다는 점에서 &lt;a href=&quot;classnotfoundexception&quot;&gt; &lt;code&gt;ClassNotFoundException&lt;/code&gt; &lt;/a&gt; 과 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="394d02ea1dad51f2e7fea8427dbdfb2dc48460b1" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to access an enum constant by name and the enum type contains no constant with the specified name.</source>
          <target state="translated">응용 프로그램이 이름으로 열거 형 상수에 액세스하려고 시도하고 열거 형에 지정된 이름의 상수가없는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ef87971ac4029e84916a62d3d21f03b3407a94cf" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to access an enum constant by name and the enum type contains no constant with the specified name. This exception can be thrown by the &lt;a href=&quot;reflect/annotatedelement&quot;&gt;API used to read annotations reflectively&lt;/a&gt;.</source>
          <target state="translated">응용 프로그램이 이름으로 열거 형 상수에 액세스하려고 시도하고 열거 형에 지정된 이름의 상수가없는 경우 발생합니다. 이 예외는 &lt;a href=&quot;reflect/annotatedelement&quot;&gt;주석을 반사적으로 읽는 데 사용되는 API에&lt;/a&gt; 의해 발생 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b0e1287ede5f17d39e118dcc0654e2e9da0386c3" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to call an abstract method.</source>
          <target state="translated">어플리케이션이 추상 메소드를 호출하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8952421e86e0b4cec4184d03f07efd2efca2d6f1" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to call an abstract method. Normally, this error is caught by the compiler; this error can only occur at run time if the definition of some class has incompatibly changed since the currently executing method was last compiled.</source>
          <target state="translated">어플리케이션이 추상 메소드를 호출하려고 할 때 발생합니다. 일반적으로이 오류는 컴파일러에서 발생합니다. 이 오류는 현재 실행중인 메소드가 마지막으로 컴파일 된 이후에 일부 클래스의 정의가 호환 불가능하게 변경된 경우에만 런타임시 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d599ac9e124da1067640464856740be65dcb3fc5" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to create an instance of a class using the &lt;code&gt;newInstance&lt;/code&gt; method in class &lt;code&gt;Class&lt;/code&gt;, but the specified class object cannot be instantiated.</source>
          <target state="translated">응용 프로그램의 시도가 사용하여 클래스의 인스턴스를 생성 할 경우에 슬로우 &lt;code&gt;newInstance&lt;/code&gt; 와의 클래스에 메소드를 &lt;code&gt;Class&lt;/code&gt; 하지만 지정된 클래스 오브젝트를 인스턴스화 할 수없는 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f5da040c056249dd1c7fbcfdea1a071f540ddb76" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to create an instance of a class using the &lt;code&gt;newInstance&lt;/code&gt; method in class &lt;code&gt;Class&lt;/code&gt;, but the specified class object cannot be instantiated. The instantiation can fail for a variety of reasons including but not limited to:</source>
          <target state="translated">애플리케이션이 &lt;code&gt;Class&lt;/code&gt; 클래스 의 &lt;code&gt;newInstance&lt;/code&gt; 메소드를 사용하여 클래스의 인스턴스를 작성하려고 시도 하지만 지정된 클래스 오브젝트를 인스턴스화 할 수없는 경우 발생합니다. 다음과 같은 여러 가지 이유로 인스턴스화가 실패 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0bf321247c46d7739ccd9a0b52a0d88daf189f0c" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to load in a class through its string name using:</source>
          <target state="translated">애플리케이션이 다음을 사용하여 문자열 이름을 통해 클래스에로드하려고 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="b1ba4c30bc96d518611c82265d700edfac455648" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to load in a class through its string name using: The &lt;code&gt;forName&lt;/code&gt; method in class &lt;code&gt;Class&lt;/code&gt;.</source>
          <target state="translated">응용 프로그램이 다음을 사용하여 문자열 이름을 통해 클래스에로드하려고 할 때 발생합니다 . &lt;code&gt;Class&lt;/code&gt; 클래스 의 &lt;code&gt;forName&lt;/code&gt; 메소드 .</target>
        </trans-unit>
        <trans-unit id="cf137b773f9859fde3407fbc5844cd52f1a45bfe" translate="yes" xml:space="preserve">
          <source>Thrown when an application tries to use the Java &lt;code&gt;new&lt;/code&gt; construct to instantiate an abstract class or an interface.</source>
          <target state="translated">애플리케이션이 Java &lt;code&gt;new&lt;/code&gt; 구문을 사용하여 추상 클래스 또는 인터페이스를 인스턴스화 하려고 시도 할 때 발생합니다 .</target>
        </trans-unit>
        <trans-unit id="9bbd13add8ba126043071ece75b6a53958168b5c" translate="yes" xml:space="preserve">
          <source>Thrown when an attempt is made to apply either of the following: A subquery expression to an MBean or a qualified attribute expression to an MBean of the wrong class.</source>
          <target state="translated">다음 중 하나를 적용하려고 시도 할 때 발생합니다. 서브 쿼리 표현식을 MBean에 또는 규정 된 속성 표현식을 잘못된 클래스의 MBean에 적용하십시오.</target>
        </trans-unit>
        <trans-unit id="e2f5ccd6d74e1e11b46464103f4bd32cb8d0e745" translate="yes" xml:space="preserve">
          <source>Thrown when an attempt is made to apply either of the following: A subquery expression to an MBean or a qualified attribute expression to an MBean of the wrong class. This exception is used internally by JMX during the evaluation of a query. User code does not usually see it.</source>
          <target state="translated">다음 중 하나를 적용하려고 시도 할 때 발생합니다. 서브 쿼리 표현식을 MBean에 또는 규정 된 속성 표현식을 잘못된 클래스의 MBean에 적용하십시오. 이 예외는 쿼리 평가 중에 JMX에서 내부적으로 사용됩니다. 사용자 코드는 보통 그것을 보지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5d8f8ddb11e46f4a61f57676c0712e4c59869f15" translate="yes" xml:space="preserve">
          <source>Thrown when an exception happens during Introspection.</source>
          <target state="translated">내부 검사 중에 예외가 발생하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c64a77e6ad686df0a89b49b76151c687561da5c2" translate="yes" xml:space="preserve">
          <source>Thrown when an exception is raised in the JavaScript engine.</source>
          <target state="translated">JavaScript 엔진에서 예외가 발생하면 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="e6af00d83e1ccb0edabe1ee4e9fd7e70d74e8770" translate="yes" xml:space="preserve">
          <source>Thrown when an exception is raised in the JavaScript engine. This is merely a marker class to indicate an exception relating to the JavaScript interface.</source>
          <target state="translated">JavaScript 엔진에서 예외가 발생하면 throw됩니다. 이것은 JavaScript 인터페이스와 관련된 예외를 나타내는 마커 클래스 일뿐입니다.</target>
        </trans-unit>
        <trans-unit id="cdf4b1fcd2c1835e34a0b539588da56420cfbfe4" translate="yes" xml:space="preserve">
          <source>Thrown when an exceptional arithmetic condition has occurred.</source>
          <target state="translated">예외적 인 산술 조건이 발생하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a9bb4ab12ab75f88250315d9db590482589a471c" translate="yes" xml:space="preserve">
          <source>Thrown when an exceptional arithmetic condition has occurred. For example, an integer &quot;divide by zero&quot; throws an instance of this class. &lt;code&gt;ArithmeticException&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="translated">예외적 인 산술 조건이 발생했을 때 발생합니다. 예를 들어 정수 &quot;0으로 나누기&quot;는이 클래스의 인스턴스를 던집니다. &lt;code&gt;ArithmeticException&lt;/code&gt; 객체는 &lt;a href=&quot;throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;억제가 비활성화되었거나 스택 추적이 쓰기 불가능한&lt;/a&gt; 것처럼 가상 머신에 의해 생성 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5e4095093e5e2e1f08f1094f0cb7cdc298b4807f" translate="yes" xml:space="preserve">
          <source>Thrown when an exceptional arithmetic condition has occurred. For example, an integer &quot;divide by zero&quot; throws an instance of this class. &lt;code&gt;ArithmeticException&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="translated">예외적 인 산술 조건이 발생하면 발생합니다. 예를 들어 정수 &quot;0으로 나누기&quot;는이 클래스의 인스턴스를 발생시킵니다. &lt;code&gt;ArithmeticException&lt;/code&gt; 객체는, &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;억제를 무효로하거나 스택 트레이스를 쓸 수없는&lt;/a&gt; 것처럼 가상 머신에 의해 구축 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e4c3b51563fba6681b56fff23ad6e3f7caa032a5" translate="yes" xml:space="preserve">
          <source>Thrown when an incompatible class change has occurred to some class definition.</source>
          <target state="translated">일부 클래스 정의에 호환되지 않는 클래스 변경이 발생한 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d03dbcc1ff09820ec670644adf9fb836fd881505" translate="yes" xml:space="preserve">
          <source>Thrown when an incompatible class change has occurred to some class definition. The definition of some class, on which the currently executing method depends, has since changed.</source>
          <target state="translated">일부 클래스 정의에 호환되지 않는 클래스 변경이 발생한 경우 발생합니다. 현재 실행중인 메소드가 의존하는 일부 클래스의 정의가 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="859c313b24fee600258c58da585f738aa69eefda" translate="yes" xml:space="preserve">
          <source>Thrown when an instance is required to have a Serializable interface.</source>
          <target state="translated">인스턴스에 직렬화 가능 인터페이스가 필요한 경우에 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8212e9b4f24451f5d6042e552f5a1924bf917b44" translate="yes" xml:space="preserve">
          <source>Thrown when an instance is required to have a Serializable interface. The serialization runtime or the class of the instance can throw this exception. The argument should be the name of the class.</source>
          <target state="translated">인스턴스에 직렬화 가능 인터페이스가 필요한 경우에 발생합니다. 직렬화 런타임 또는 인스턴스 클래스에서이 예외가 발생할 수 있습니다. 인수는 클래스 이름이어야합니다.</target>
        </trans-unit>
        <trans-unit id="68caee0d2483ccee0c8bedc33ef0d8c32c01186f" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid MBean attribute is passed to a query constructing method.</source>
          <target state="translated">유효하지 않은 MBean 속성이 쿼리 생성 메소드에 전달 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5b4924793bd0e16d66f4de3676bc5bc92d8b866d" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid MBean attribute is passed to a query constructing method. This exception is used internally by JMX during the evaluation of a query. User code does not usually see it.</source>
          <target state="translated">유효하지 않은 MBean 속성이 쿼리 생성 메소드에 전달 될 때 발생합니다. 이 예외는 쿼리 평가 중에 JMX에서 내부적으로 사용됩니다. 사용자 코드는 보통 그것을 보지 않습니다.</target>
        </trans-unit>
        <trans-unit id="65027c2cbefb9a86f7e5896157d0a564dc68c8a2" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid expression is passed to a method for constructing a query.</source>
          <target state="translated">쿼리를 작성하기위한 메소드에 유효하지 않은 표현식이 전달 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="612fd061d4632211a9f42160d42efe19a4953464" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid expression is passed to a method for constructing a query. This exception is used internally by JMX during the evaluation of a query. User code does not usually see it.</source>
          <target state="translated">쿼리를 작성하기위한 메소드에 유효하지 않은 표현식이 전달 될 때 발생합니다. 이 예외는 쿼리 평가 중에 JMX에서 내부적으로 사용됩니다. 사용자 코드는 보통 그것을 보지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d5156c265aa48ef9e6123c4e2b94e041b51d8612" translate="yes" xml:space="preserve">
          <source>Thrown when an invalid string operation is passed to a method for constructing a query.</source>
          <target state="translated">유효하지 않은 문자열 연산이 쿼리를 생성하는 메소드에 전달 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1a721eac456b7c9447845cc8c07c5d51ce86fd74" translate="yes" xml:space="preserve">
          <source>Thrown when an unknown but serious exception has occurred in the Java Virtual Machine.</source>
          <target state="translated">Java Virtual Machine에서 알 수 없지만 심각한 예외가 발생한 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a14a40e60ef7d4bb5ace0b7a526297fb2ebdee8e" translate="yes" xml:space="preserve">
          <source>Thrown when code that is dependent on a keyboard, display, or mouse is called in an environment that does not support a keyboard, display, or mouse.</source>
          <target state="translated">키보드, 디스플레이 또는 마우스를 지원하지 않는 환경에서 키보드, 디스플레이 또는 마우스에 종속 된 코드가 호출 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="25db40a8d175cc35f11aff538e81340fae831424" translate="yes" xml:space="preserve">
          <source>Thrown when code that is dependent on a keyboard, display, or mouse is called in an environment that does not support a keyboard, display, or mouse. Any code that depends on any of those devices should firstly ensure their availability using the &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; method and throw &lt;code&gt;HeadlessException&lt;/code&gt; if the latter returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">키보드, 디스플레이 또는 마우스를 지원하지 않는 환경에서 키보드, 디스플레이 또는 마우스에 종속 된 코드가 호출 될 때 발생합니다. 이러한 장치에 의존하는 모든 코드는 먼저 &lt;code&gt;GraphicsEnvironment.isHeadless()&lt;/code&gt; 메서드를 사용하여 가용성을 확인하고 후자가 &lt;code&gt;true&lt;/code&gt; 를 반환하면 &lt;code&gt;HeadlessException&lt;/code&gt; 을 throw 해야 합니다 .</target>
        </trans-unit>
        <trans-unit id="99f0535770ad610db510a22dd91b17d0ecb07058" translate="yes" xml:space="preserve">
          <source>Thrown when control information that was read from an object stream violates internal consistency checks.</source>
          <target state="translated">객체 스트림에서 읽은 제어 정보가 내부 일관성 검사를 위반할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="10a32691a8fe8b29ae84b519d5eecc4ef5977d3a" translate="yes" xml:space="preserve">
          <source>Thrown when creating a &lt;a href=&quot;modulelayer&quot;&gt;module layer&lt;/a&gt; fails.</source>
          <target state="translated">&lt;a href=&quot;modulelayer&quot;&gt;모듈 계층&lt;/a&gt; 생성이 실패 할 때 발생 합니다.</target>
        </trans-unit>
        <trans-unit id="99ebcfaf6131629d5267e51aab4164218dddbe86" translate="yes" xml:space="preserve">
          <source>Thrown when reading a module descriptor and the module descriptor is found to be malformed or otherwise cannot be interpreted as a module descriptor.</source>
          <target state="translated">모듈 설명자를 읽을 때 발생하며 모듈 설명자가 잘못된 형식으로 발견되거나 그렇지 않으면 모듈 설명 자로 해석 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bf20b9e4ffc2c2b1f8881fb05d4f62d7e499651b" translate="yes" xml:space="preserve">
          <source>Thrown when resolving a set of modules, or resolving a set of modules with service binding, fails.</source>
          <target state="translated">모듈 세트를 해석하거나 서비스 바인딩을 사용하여 모듈 세트를 해석 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a6d94c66beac535279aeecb37d1880f959ac08af" translate="yes" xml:space="preserve">
          <source>Thrown when serialization or deserialization is not active.</source>
          <target state="translated">직렬화 또는 역 직렬화가 활성화되지 않은 경우 발생합니다.</target>
        </trans-unit>
        <trans-unit id="5d46bdd3f1bde41e39251582589cfaad576ea3a9" translate="yes" xml:space="preserve">
          <source>Thrown when the &quot;verifier&quot; detects that a class file, though well formed, contains some sort of internal inconsistency or security problem.</source>
          <target state="translated">&quot;검증 자&quot;가 클래스 파일에 잘 구성되어 있지만 일종의 내부 불일치 또는 보안 문제가 있음을 감지하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="e008bbf65d9a350656cb038f08e70432f6f069f3" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine attempts to read a class file and determines that the file is malformed or otherwise cannot be interpreted as a class file.</source>
          <target state="translated">JVM (Java Virtual Machine)이 클래스 파일을 읽으려고 시도하고 파일이 잘못되었거나 클래스 파일로 해석 될 수 없음을 판별하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8dc1214c2d99c634bec6c595d0849d6c2fe5591c" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine attempts to read a class file and determines that the major and minor version numbers in the file are not supported.</source>
          <target state="translated">JVM (Java Virtual Machine)이 클래스 파일을 읽으려고 시도하고 파일의 주 버전 및 부 버전 번호가 지원되지 않는 것으로 판명 될 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="225d524010f1bd6efec2c88237f9c71cbb8350e3" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine cannot allocate an object because it is out of memory, and no more memory could be made available by the garbage collector.</source>
          <target state="translated">JVM (Java Virtual Machine)에 메모리가 부족하여 오브젝트를 할당 할 수없고 가비지 콜렉터가 더 이상 메모리를 사용할 수 없을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="9bb8f05d665e17abfa0a50b22f1a9f2c8b5e6512" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine cannot allocate an object because it is out of memory, and no more memory could be made available by the garbage collector. &lt;code&gt;OutOfMemoryError&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="translated">Java Virtual Machine이 메모리가 부족하여 객체를 할당 할 수없고 가비지 수집기가 더 이상 메모리를 사용할 수 없을 때 발생합니다. &lt;code&gt;OutOfMemoryError&lt;/code&gt; 개체는 &lt;a href=&quot;throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable,boolean,boolean)&quot;&gt;억제가 비활성화되었거나 스택 추적이 쓰기 불가능한&lt;/a&gt; 것처럼 가상 머신에 의해 생성 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="cc64fdd683025546acfff552400f086c70aac922" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine cannot allocate an object because it is out of memory, and no more memory could be made available by the garbage collector. &lt;code&gt;OutOfMemoryError&lt;/code&gt; objects may be constructed by the virtual machine as if &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;suppression were disabled and/or the stack trace was not writable&lt;/a&gt;.</source>
          <target state="translated">JVM (Java Virtual Machine)에 메모리가 부족하여 오브젝트를 할당 할 수없고 가비지 콜렉터가 더 이상 메모리를 사용할 수 없을 때 발생합니다. &lt;code&gt;OutOfMemoryError&lt;/code&gt; 객체는 &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-boolean-boolean-&quot;&gt;억제가 비활성화되거나 스택 추적이 쓰기 가능하지 않은&lt;/a&gt; 것처럼 가상 시스템에 의해 구성 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="031c30cc5094ce5c4a0da5e119a594f2fec0e626" translate="yes" xml:space="preserve">
          <source>Thrown when the Java Virtual Machine detects a circularity in the superclass hierarchy of a class being loaded.</source>
          <target state="translated">Java Virtual Machine이로드중인 클래스의 수퍼 클래스 계층에서 순환 성을 감지하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="212e011343d58000abfbc7c33228a1c8770b4591" translate="yes" xml:space="preserve">
          <source>Thrown when the Serialization runtime detects one of the following problems with a Class.</source>
          <target state="translated">직렬화 런타임이 클래스에 대해 다음 문제점 중 하나를 발견하면 발생합니다.</target>
        </trans-unit>
        <trans-unit id="268d43717775e9a46e419decbb0b34f324b2fc13" translate="yes" xml:space="preserve">
          <source>Thrown when the annotation parser attempts to read an annotation from a class file and determines that the annotation is malformed.</source>
          <target state="translated">주석 파서가 클래스 파일에서 주석을 읽으려고 시도하고 주석이 잘못되었다고 판단 할 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c2d93b2e90840d752626ad4f57ce3e02d72ee34d" translate="yes" xml:space="preserve">
          <source>Thrown when the annotation parser attempts to read an annotation from a class file and determines that the annotation is malformed. This error can be thrown by the &lt;a href=&quot;../reflect/annotatedelement&quot;&gt;API used to read annotations reflectively&lt;/a&gt;.</source>
          <target state="translated">주석 파서가 클래스 파일에서 주석을 읽으려고 시도하고 주석이 잘못되었다고 판단 할 때 발생합니다. 이 오류는 &lt;a href=&quot;../reflect/annotatedelement&quot;&gt;주석을 반사적으로 읽는 데 사용되는 API에&lt;/a&gt; 의해 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dd4f259c02812b99fbe9dbe5ae49cd400c3a3c49" translate="yes" xml:space="preserve">
          <source>Thrown when the opening handshake has failed.</source>
          <target state="translated">여는 악수가 실패했을 때 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c6589574e8059517df6273b7c1514557652f47ad" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;UnsupportedOperationException&lt;/a&gt;</source>
          <target state="translated">예외 &lt;a href=&quot;../../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;는 UnsupportedOperationException가&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="bc7e5f5a07e99c66c5fe5b4b682ce8c11ab4f35b" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">예외 &lt;a href=&quot;../../../../java.base/java/lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4f7cc30911f6bc18ccf83a3d8c0de18fcd8f93d5" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../clonenotsupportedexception&quot;&gt;&lt;code&gt;CloneNotSupportedException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">예외 &lt;a href=&quot;../clonenotsupportedexception&quot;&gt; &lt;code&gt;CloneNotSupportedException&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="429c4123a0cc6f16fc81f54e7a3b4a289f835ca3" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../clonenotsupportedexception&quot;&gt;&lt;code&gt;CloneNotSupportedException&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;Reference&lt;/code&gt; cannot be meaningfully cloned. Construct a new &lt;code&gt;Reference&lt;/code&gt; instead.</source>
          <target state="translated">예외 &lt;a href=&quot;../clonenotsupportedexception&quot;&gt; &lt;code&gt;CloneNotSupportedException&lt;/code&gt; &lt;/a&gt; . &lt;code&gt;Reference&lt;/code&gt; 의미 복제 할 수 없습니다. 대신 새로운 &lt;code&gt;Reference&lt;/code&gt; 를 생성하십시오.</target>
        </trans-unit>
        <trans-unit id="37fd660c53c5155458a03c531cf971e59cbb246d" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt;&lt;code&gt;IllegalArgumentException&lt;/code&gt;&lt;/a&gt; because &lt;code&gt;&quot;de-*-DE&quot;&lt;/code&gt; is not a valid basic language range.</source>
          <target state="translated">예외 &lt;a href=&quot;../lang/illegalargumentexception&quot;&gt; &lt;code&gt;IllegalArgumentException&lt;/code&gt; 가&lt;/a&gt; 있기 때문에 &lt;code&gt;&quot;de-*-DE&quot;&lt;/code&gt; 유효한 기본 언어 범위가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="b6bcd658de7adf03be526b1f4c13b4043b6de281" translate="yes" xml:space="preserve">
          <source>Throws &lt;a href=&quot;nosuchmethoderror&quot;&gt;&lt;code&gt;NoSuchMethodError&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">예외 &lt;a href=&quot;nosuchmethoderror&quot;&gt; &lt;code&gt;NoSuchMethodError&lt;/code&gt; 가&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="47a244c730ca2429da9b0cbcb0f69a2f7cc754b8" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;CannotRedoException&lt;/code&gt; if &lt;code&gt;canRedo&lt;/code&gt; returns false.</source>
          <target state="translated">예외 &lt;code&gt;CannotRedoException&lt;/code&gt; 를을 경우 &lt;code&gt;canRedo&lt;/code&gt; 가 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="678411bd7a7bd98e55c8df57bb4e6f1115938ea9" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;CannotRedoException&lt;/code&gt; if &lt;code&gt;canRedo&lt;/code&gt; returns false. Sets &lt;code&gt;hasBeenDone&lt;/code&gt; to &lt;code&gt;true&lt;/code&gt;. Subclasses should override to redo the operation represented by this edit. Override should begin with a call to super.</source>
          <target state="translated">예외 &lt;code&gt;CannotRedoException&lt;/code&gt; 를을 경우 &lt;code&gt;canRedo&lt;/code&gt; 가 false를 반환합니다. &lt;code&gt;hasBeenDone&lt;/code&gt; 을 &lt;code&gt;true&lt;/code&gt; 로 설정 합니다 . 이 편집으로 표시된 작업을 다시 실행하려면 하위 클래스를 재정의해야합니다. 재정의는 super에 대한 호출로 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="3790f33e502d2f90b642c2efac55dd5898b137df" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;CannotUndoException&lt;/code&gt; if &lt;code&gt;canUndo&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;.</source>
          <target state="translated">예외 &lt;code&gt;CannotUndoException&lt;/code&gt; 를을 경우 &lt;code&gt;canUndo&lt;/code&gt; 반환 &lt;code&gt;false&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="fff7793826f72d71730a8ab6f9c30caeba72e7b2" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;CannotUndoException&lt;/code&gt; if &lt;code&gt;canUndo&lt;/code&gt; returns &lt;code&gt;false&lt;/code&gt;. Sets &lt;code&gt;hasBeenDone&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. Subclasses should override to undo the operation represented by this edit. Override should begin with a call to super.</source>
          <target state="translated">예외 &lt;code&gt;CannotUndoException&lt;/code&gt; 를을 경우 &lt;code&gt;canUndo&lt;/code&gt; 반환 &lt;code&gt;false&lt;/code&gt; . &lt;code&gt;hasBeenDone&lt;/code&gt; 을 &lt;code&gt;false&lt;/code&gt; 로 설정 합니다 . 이 편집으로 표시된 작업을 실행 취소하려면 하위 클래스를 재정의해야합니다. 재정의는 super에 대한 호출로 시작해야합니다.</target>
        </trans-unit>
        <trans-unit id="f4eb1b7e95ca67674015b9400cf0bd76a61969be" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt; because &lt;code&gt;ReadLocks&lt;/code&gt; do not support conditions.</source>
          <target state="translated">예외 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 하기 때문에 &lt;code&gt;ReadLocks&lt;/code&gt; 이 조건을 지원하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="866a4b95987c85cee1e61367384eb97fddc2254b" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="71463ab935ff7965f4bb58554d2f740ad341d01d" translate="yes" xml:space="preserve">
          <source>Throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;. Setting seeds in this generator is not supported.</source>
          <target state="translated">&lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 던집니다 . 이 생성기에서 시드 설정은 지원되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6bd07e55edb2f5f0a06b2b16c924ab0ed07d91cf" translate="yes" xml:space="preserve">
          <source>Throws CatalogException if there is no match.</source>
          <target state="translated">일치하는 항목이 없으면 CatalogException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="05e2c5607fdd5eb923bca4220eeb994a9887f667" translate="yes" xml:space="preserve">
          <source>Throws CloneNotSupportedException as a Thread can not be meaningfully cloned.</source>
          <target state="translated">스레드를 의미있게 복제 할 수 없기 때문에 CloneNotSupportedException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="78c5180f23af8ef04642e893263bb662bb2d9ce1" translate="yes" xml:space="preserve">
          <source>Throws CloneNotSupportedException as a Thread can not be meaningfully cloned. Construct a new Thread instead.</source>
          <target state="translated">스레드를 의미있게 복제 할 수 없으므로 CloneNotSupportedException이 발생합니다. 대신 새 스레드를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="586a2bda3b8f60777f049d843c966a5984b6bee6" translate="yes" xml:space="preserve">
          <source>Throws CloneNotSupportedException.</source>
          <target state="translated">CloneNotSupportedException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d7906d41002453e852ec1ee359aac34142c9c10e" translate="yes" xml:space="preserve">
          <source>Throws CloneNotSupportedException. This guarantees that enums are never cloned, which is necessary to preserve their &quot;singleton&quot; status.</source>
          <target state="translated">CloneNotSupportedException을 던집니다. 이렇게하면 열거 형이 복제되지 않으며 &quot;단일&quot;상태를 유지하는 데 필요합니다.</target>
        </trans-unit>
        <trans-unit id="ef933213f30747ab820a8ac6fc361588a2855817" translate="yes" xml:space="preserve">
          <source>Throws SocketException if the option is unrecognized, the socket is closed, or some low-level error occurred</source>
          <target state="translated">옵션이 인식되지 않거나 소켓이 닫히거나 일부 하위 레벨 오류가 발생한 경우 SocketException이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="be311179773fef72b8e322098317b5607696664e" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access members.</source>
          <target state="translated">예외 &lt;code&gt;SecurityException&lt;/code&gt; 호출 스레드 멤버에의 액세스가 허가되어 있지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="b0a483d1a1cce3c98637f041f03044671cbe2e89" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access or modify the system properties.</source>
          <target state="translated">호출 스레드가 시스템 특성에 액세스하거나 시스템 특성을 수정할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="74f7c6fbaf9a2607bc25a6acc5fa0c8f060a9989" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the AWT event queue.</source>
          <target state="translated">예외 &lt;code&gt;SecurityException&lt;/code&gt; 호출 스레드가 AWT 이벤트 큐에의 액세스가 허가되어 있지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="58a41bc1c166f380713d9ba97b29c985e0e4a579" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the package specified by the argument.</source>
          <target state="translated">호출 스레드가 인수로 지정된 패키지에 액세스 할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="e0002bb078911e2b80574cebba133bac4b5326a6" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the specified package.</source>
          <target state="translated">호출 스레드가 지정된 패키지에 액세스 할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 throw 합니다.</target>
        </trans-unit>
        <trans-unit id="f496850217aa0260833640ec37d1833905978aad" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the system clipboard.</source>
          <target state="translated">호출중인 스레드가 시스템 클립 보드에 액세스 할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="ee651fa0fe2ac3ba0abb353dbe90d4880e5f272d" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to access the system property with the specified &lt;code&gt;key&lt;/code&gt; name.</source>
          <target state="translated">호출하는 스레드가 지정된 &lt;code&gt;key&lt;/code&gt; 이름으로 시스템 특성에 액세스 할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="8e0f42f7ce4bc6efbaa975a76c42159794ec73ff" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to cause the Java Virtual Machine to halt with the specified status code.</source>
          <target state="translated">호출중인 스레드가 지정된 상태 코드로 Java 가상 머신을 정지시킬 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="1f1ea61f78b2cd6b2339492e62dcd23635cf3fd1" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to create a new class loader.</source>
          <target state="translated">호출하는 스레드가 새 클래스 로더를 작성하도록 허용되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="8a6dbdd3781f34d5c9960948cde79f67a33094d0" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to create a subprocess.</source>
          <target state="translated">호출중인 스레드가 서브 프로세스를 작성할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="94f119cb4bb17d984742723135c67fd80d9a5479" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to define classes in the package specified by the argument.</source>
          <target state="translated">호출 스레드가 인수로 지정된 패키지에서 클래스를 정의 할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="881e352a7390cf2597612b7b60df1167a12a6216" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to define classes in the specified package.</source>
          <target state="translated">호출 스레드가 지정된 패키지의 클래스를 정의 할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 throw 합니다.</target>
        </trans-unit>
        <trans-unit id="93928659d55c05442babb348bde7f9097f9e3bb9" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to delete the specified file.</source>
          <target state="translated">호출중인 스레드가 지정된 파일을 삭제하도록 허용되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="f113bc6b4e60e02159410376302a1c656658a90f" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to dynamic link the library code specified by the string argument file.</source>
          <target state="translated">호출 스레드가 문자열 인수 파일에 지정된 라이브러리 코드를 동적으로 링크 할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 throw 합니다.</target>
        </trans-unit>
        <trans-unit id="a44b9f9df6244dd1cedb020ade27ffd9d377ac2f" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to dynamic link the library code specified by the string argument file. The argument is either a simple library name or a complete filename.</source>
          <target state="translated">호출중인 스레드가 문자열 인수 파일에 의해 지정된 라이브러리 코드를 동적으로 링크 할 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 . 인수는 간단한 라이브러리 이름이거나 완전한 파일 이름입니다.</target>
        </trans-unit>
        <trans-unit id="18eb7ec4e7cf6dd8f0810f8fbd3de11dda2ab520" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to initiate a print job request.</source>
          <target state="translated">예외 &lt;code&gt;SecurityException&lt;/code&gt; 호출 스레드가 인쇄 작업 요구의 개시가 허가되어 있지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="a5f1abf24c7ec33534c68edc39f44985b7130de5" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to modify the thread argument.</source>
          <target state="translated">호출중인 스레드가 스레드 인수를 수정하도록 허용되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="9c82afd4e3102f2b30f0f490f95269fcefb1ea11" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to modify the thread group argument.</source>
          <target state="translated">호출중인 스레드가 스레드 그룹 인수를 수정하도록 허용되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="9348c9c27c4d0b27be635ebd4243b5159774bd3c" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to open a socket connection to the specified host and port number.</source>
          <target state="translated">호출중인 스레드가 지정된 호스트 및 포트 번호에 대한 소켓 연결을 열 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="bd511dcc00428d20e199d504e5a62cf049f420e6" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to read from the specified file descriptor.</source>
          <target state="translated">지정된 파일 기술자로부터 호출 측의 thread를 읽을 수없는 경우 에 &lt;code&gt;SecurityException&lt;/code&gt; 을 Throw합니다 .</target>
        </trans-unit>
        <trans-unit id="613665d6a7892ee299b4b9a41dd7850681647520" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to read the file specified by the string argument.</source>
          <target state="translated">호출중인 스레드가 문자열 인수로 지정된 파일을 읽을 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="04b4f2564e11bd9010431ad73cb7dbcb64671417" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to set the socket factory used by &lt;code&gt;ServerSocket&lt;/code&gt; or &lt;code&gt;Socket&lt;/code&gt;, or the stream handler factory used by &lt;code&gt;URL&lt;/code&gt;.</source>
          <target state="translated">호출하는 스레드가 &lt;code&gt;ServerSocket&lt;/code&gt; 또는 &lt;code&gt;Socket&lt;/code&gt; 에서 사용하는 소켓 팩토리 또는 &lt;code&gt;URL&lt;/code&gt; 에서 사용하는 스트림 핸들러 팩토리 를 설정하도록 허용되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="a992423182e7fd2f0c68a6e3399d48fb61a2c4ea" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to use (join/leave/send/receive) IP multicast.</source>
          <target state="translated">예외 &lt;code&gt;SecurityException&lt;/code&gt; 호출 스레드가 사용 (가입 / 휴가 / 전송 / 수신) IP 멀티 캐스트에 허가되어 있지 않은 경우.</target>
        </trans-unit>
        <trans-unit id="42179baf69e295d476e665b60f38e3b57c0d823e" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to wait for a connection request on the specified local port number.</source>
          <target state="translated">호출중인 스레드가 지정된 로컬 포트 ​​번호에서 연결 요청을 기다릴 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="c6c71db3bcf9f3e867fee15210966a56b5576646" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to write to the file specified by the string argument.</source>
          <target state="translated">호출중인 스레드가 문자열 인수에 의해 지정된 파일에 쓰도록 허용되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="33b59151923ebac69423a301ee1ca0d61eea1f8b" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not allowed to write to the specified file descriptor.</source>
          <target state="translated">호출중인 스레드가 지정된 파일 디스크립터에 쓸 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="fa607d3467b07e33aa5dbab627a8cb509730651e" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the calling thread is not permitted to accept a socket connection from the specified host and port number.</source>
          <target state="translated">호출중인 스레드가 지정된 호스트 및 포트 번호에서 소켓 연결을 허용하도록 허용되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="3911c97d748b3105f51a1c90495fee8541f38427" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the requested access, specified by the given permission, is not permitted based on the security policy currently in effect.</source>
          <target state="translated">주어진 권한으로 지정된 요청 된 액세스가 현재 유효한 보안 정책에 따라 허용되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="eba2327c676431952552ab77f84ca7655867ddd5" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is denied access to the resource specified by the given permission.</source>
          <target state="translated">지정된 보안 컨텍스트가 지정된 권한으로 지정된 리소스에 대한 액세스가 거부 된 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 throw합니다 .</target>
        </trans-unit>
        <trans-unit id="6d182175e27ba08a0b9e896a7124bd7728f59f68" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is denied access to the resource specified by the given permission. The context must be a security context returned by a previous call to &lt;code&gt;getSecurityContext&lt;/code&gt; and the access control decision is based upon the configured security policy for that security context.</source>
          <target state="translated">지정된 보안 컨텍스트가 지정된 권한으로 지정된 자원에 대한 액세스가 거부 된 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 . 컨텍스트는 &lt;code&gt;getSecurityContext&lt;/code&gt; 에 대한 이전 호출에서 리턴 한 보안 컨텍스트 여야하며 액세스 제어 결정은 해당 보안 컨텍스트에 대해 구성된 보안 정책을 기반으로합니다.</target>
        </trans-unit>
        <trans-unit id="4f0a8e2aad645347a8283d1be96e9faf74fb172f" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is not allowed to open a socket connection to the specified host and port number.</source>
          <target state="translated">지정된 보안 컨텍스트가 지정된 호스트 및 포트 번호에 대한 소켓 연결을 열 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 .</target>
        </trans-unit>
        <trans-unit id="f41c19487968a975b17314af7d85473c24c704cf" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is not allowed to read the file specified by the string argument.</source>
          <target state="translated">지정된 보안 컨텍스트가 문자열 인수로 지정된 파일을 읽을 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 throw합니다 .</target>
        </trans-unit>
        <trans-unit id="2fe7a014c93f4282d4cf240fe9f4785ceeb3567c" translate="yes" xml:space="preserve">
          <source>Throws a &lt;code&gt;SecurityException&lt;/code&gt; if the specified security context is not allowed to read the file specified by the string argument. The context must be a security context returned by a previous call to &lt;code&gt;getSecurityContext&lt;/code&gt;.</source>
          <target state="translated">지정된 보안 컨텍스트가 문자열 인수로 지정된 파일을 읽을 수없는 경우 &lt;code&gt;SecurityException&lt;/code&gt; 을 던집니다 . 컨텍스트는 이전의 &lt;code&gt;getSecurityContext&lt;/code&gt; 호출로 리턴 된 보안 컨텍스트 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="08fc4c3667cf82918abc80f384e841bb901427fd" translate="yes" xml:space="preserve">
          <source>Throws an &lt;code&gt;IOException&lt;/code&gt; if the stream has been closed.</source>
          <target state="translated">예외 &lt;code&gt;IOException&lt;/code&gt; 가 스트림이 닫고있는 경우.</target>
        </trans-unit>
        <trans-unit id="304bfe57b073a4145ee415402af9e5b48a0f327f" translate="yes" xml:space="preserve">
          <source>Throws an &lt;code&gt;IOException&lt;/code&gt; if the stream has been closed. Subclasses may call this method from any of their methods that require the stream not to be closed.</source>
          <target state="translated">예외 &lt;code&gt;IOException&lt;/code&gt; 가 스트림이 닫고있는 경우. 서브 클래스는 스트림을 닫지 않아야하는 모든 메소드에서이 메소드를 호출 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="609bcdb27dcdc809a9bd509b8703d67998b69572" translate="yes" xml:space="preserve">
          <source>Throws an AWTError, since a Box can use only a BoxLayout.</source>
          <target state="translated">Box는 BoxLayout 만 사용할 수 있으므로 AWTError를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="4f451515ac1645688e90d030ff9b7ee8761a8ad3" translate="yes" xml:space="preserve">
          <source>Throws an exception appropriate to the result described by this object.</source>
          <target state="translated">이 객체가 기술 한 결과에 적절한 예외를 Throw합니다.</target>
        </trans-unit>
        <trans-unit id="e05991524e70c9e9c8187b002469b800e945b108" translate="yes" xml:space="preserve">
          <source>Throws exception</source>
          <target state="translated">Throws exception</target>
        </trans-unit>
        <trans-unit id="9c1b3e348c5e658c9f04296e21ad3e2315006119" translate="yes" xml:space="preserve">
          <source>Throws:</source>
          <target state="translated">Throws:</target>
        </trans-unit>
        <trans-unit id="3ecbfa1c53472673918cef852b6648cecd3ea06a" translate="yes" xml:space="preserve">
          <source>ThrowsTree</source>
          <target state="translated">ThrowsTree</target>
        </trans-unit>
        <trans-unit id="a30856303a88309d99f53e90a911f2241ad88676" translate="yes" xml:space="preserve">
          <source>Ths default is &quot;sticky&quot;, being a part of the static state of all URLConnections. This flag applies to the next, and all following URLConnections that are created.</source>
          <target state="translated">기본값은 &quot;sticky&quot;이며 모든 URLConnection의 정적 상태의 일부입니다. 이 플래그는 생성 된 다음 URLConnection과 다음 URLConnection에 적용됩니다.</target>
        </trans-unit>
        <trans-unit id="5637b858eb0b17bd5112c0aee97f263d368b4dd9" translate="yes" xml:space="preserve">
          <source>Thumb color</source>
          <target state="translated">Thumb color</target>
        </trans-unit>
        <trans-unit id="805b9e010fa1abe503c1b09648cad64a3c037b98" translate="yes" xml:space="preserve">
          <source>Thumb dark shadow color</source>
          <target state="translated">Thumb dark shadow color</target>
        </trans-unit>
        <trans-unit id="fba611dd71adc1ff044e39366915000d1e76b2f7" translate="yes" xml:space="preserve">
          <source>Thumb highlight color</source>
          <target state="translated">Thumb highlight color</target>
        </trans-unit>
        <trans-unit id="77dbaec2c57d69e7ef56cf8cde6575a9c2bf55a3" translate="yes" xml:space="preserve">
          <source>Thumb light shadow color</source>
          <target state="translated">Thumb light shadow color</target>
        </trans-unit>
        <trans-unit id="f1d2e4e187f8fbaf4ec2112c91df35d27eaa8f08" translate="yes" xml:space="preserve">
          <source>Thumb of the ScrollBar.</source>
          <target state="translated">Thumb of the ScrollBar.</target>
        </trans-unit>
        <trans-unit id="fc844e823ec4889ad648b13d48433f663f74844d" translate="yes" xml:space="preserve">
          <source>Thumb of the ScrollBar. The thumb is the region of the ScrollBar that gives a graphical depiction of what percentage of the View is currently visible. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ScrollBarThumb&lt;/code&gt;.</source>
          <target state="translated">Thumb of the ScrollBar. The thumb is the region of the ScrollBar that gives a graphical depiction of what percentage of the View is currently visible. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;ScrollBarThumb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="1de6ffdc504e5df5941eb577d236d9daa60e2bb5" translate="yes" xml:space="preserve">
          <source>Thumb of the Slider.</source>
          <target state="translated">Thumb of the Slider.</target>
        </trans-unit>
        <trans-unit id="ed33cf3c2ea8dac658c7db1ce37c52d9b0257521" translate="yes" xml:space="preserve">
          <source>Thumb of the Slider. The thumb of the Slider identifies the current value. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;SliderThumb&lt;/code&gt;.</source>
          <target state="translated">Thumb of the Slider. The thumb of the Slider identifies the current value. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;SliderThumb&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b5b9d3c9cd3ceb2320a9d20c152aef3f0b66a967" translate="yes" xml:space="preserve">
          <source>Thumb rectangle</source>
          <target state="translated">Thumb rectangle</target>
        </trans-unit>
        <trans-unit id="7050380a0757ca93c6160fb310b67b6ebbd5740d" translate="yes" xml:space="preserve">
          <source>Thumbnails will be returned in their entirety regardless of the region settings.</source>
          <target state="translated">지역 설정에 관계없이 썸네일 전체가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="76031ddf92450ba52c1e3945097079807a9065c2" translate="yes" xml:space="preserve">
          <source>Thursday</source>
          <target state="translated">Thursday</target>
        </trans-unit>
        <trans-unit id="3d04b20ba0bec439ae9bc45463e71ca3adffc239" translate="yes" xml:space="preserve">
          <source>Thus &quot;FooBah&quot; becomes &quot;fooBah&quot; and &quot;X&quot; becomes &quot;x&quot;, but &quot;URL&quot; stays as &quot;URL&quot;.</source>
          <target state="translated">따라서 &quot;FooBah&quot;는 &quot;fooBah&quot;가되고 &quot;X&quot;는 &quot;x&quot;가되지만 &quot;URL&quot;은 &quot;URL&quot;로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="1406418bbdae0badf2726e6c650822f58e9a9bc5" translate="yes" xml:space="preserve">
          <source>Thus any implementation of ModelMBeanInfo should always add those two notifications in addition to those specified by the application.</source>
          <target state="translated">따라서 ModelMBeanInfo의 구현은 항상 애플리케이션에 의해 지정된 알림 외에이 두 개의 알림을 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="8ecb3e422cd1d28153f56d873a84dcc58af876d1" translate="yes" xml:space="preserve">
          <source>Thus for a class such as &quot;sun.xyz.OurButton&quot; we would first look for a BeanInfo class called &quot;sun.xyz.OurButtonBeanInfo&quot; and if that failed we'd look in each package in the BeanInfo search path for an OurButtonBeanInfo class. With the default search path, this would mean looking for &quot;sun.beans.infos.OurButtonBeanInfo&quot;.</source>
          <target state="translated">따라서 &quot;sun.xyz.OurButton&quot;과 같은 클래스의 경우 먼저 &quot;sun.xyz.OurButtonBeanInfo&quot;라는 BeanInfo 클래스를 찾은 다음 실패하면 BeanInfo 검색 경로에서 OurButtonBeanInfo 클래스의 각 패키지를 찾습니다. 기본 검색 경로를 사용하면 &quot;sun.beans.infos.OurButtonBeanInfo&quot;를 찾는 것입니다.</target>
        </trans-unit>
        <trans-unit id="39eb837b9fc8b3cfe8f618eade937385de94fe08" translate="yes" xml:space="preserve">
          <source>Thus for example a pattern of &quot;%t/java%g.log&quot; with a count of 2 would typically cause log files to be written on Solaris to /var/tmp/java0.log and /var/tmp/java1.log whereas on Windows 95 they would be typically written to C:\TEMP\java0.log and C:\TEMP\java1.log</source>
          <target state="translated">따라서 예를 들어 카운트가 2 인 &quot;% t / java % g.log&quot;패턴은 일반적으로 로그 파일이 Solaris에서 /var/tmp/java0.log 및 /var/tmp/java1.log에 기록됩니다. Windows 95에서는 일반적으로 C : \ TEMP \ java0.log 및 C : \ TEMP \ java1.log에 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="c9bec96d1db6450dc1a885bd7b05bf79842923ad" translate="yes" xml:space="preserve">
          <source>Thus if the argument name is &quot;fred&quot;, it will assume that there is an indexed reader method &quot;getFred&quot;, a non-indexed (array) reader method also called &quot;getFred&quot;, an indexed writer method &quot;setFred&quot;, and finally a non-indexed writer method &quot;setFred&quot;.</source>
          <target state="translated">따라서 인수 이름이 &quot;fred&quot;인 경우 색인화 된 판독기 메소드 &quot;getFred&quot;, 색인화되지 않은 (배열) 판독기 메소드 인 &quot;getFred&quot;, 색인화 된 기록기 메소드 &quot;setFred&quot;, 마지막으로 색인화되지 않은 기록기 메소드 &quot;setFred&quot;.</target>
        </trans-unit>
        <trans-unit id="9c0eef772246048b29012102df64202a5a3b0e9f" translate="yes" xml:space="preserve">
          <source>Thus if three processes were all trying to log to fred%u.%g.txt then they might end up using fred0.0.txt, fred1.0.txt, fred2.0.txt as the first file in their rotating sequences.</source>
          <target state="translated">따라서 세 프로세스가 모두 fred % u. % g.txt에 기록하려고하면 회전 시퀀스의 첫 번째 파일로 fred0.0.txt, fred1.0.txt, fred2.0.txt를 사용하게됩니다.</target>
        </trans-unit>
        <trans-unit id="b30bef851397fcfa834b5d84559d2fc29425fcce" translate="yes" xml:space="preserve">
          <source>Thus these two notifications are always added to those specified by the application.</source>
          <target state="translated">따라서이 두 알림은 항상 응용 프로그램에서 지정한 알림에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="175a69d195bb39a6e49e26db6468a1cc4c4f0c15" translate="yes" xml:space="preserve">
          <source>Thus, a method type mismatch which might show up as a linkage error in a statically typed program can show up as a dynamic &lt;code&gt;WrongMethodTypeException&lt;/code&gt; in a program which uses method handles.</source>
          <target state="translated">따라서 정적 형식의 프로그램에서 연결 오류로 표시 될 수있는 메서드 형식 불일치 는 메서드 핸들을 사용하는 프로그램에서 동적 &lt;code&gt;WrongMethodTypeException&lt;/code&gt; 으로 표시 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e801b41bba098969fbeab29984849586fd477148" translate="yes" xml:space="preserve">
          <source>Thus, an access mode type mismatch which might show up as a linkage error in a statically typed program can show up as a dynamic &lt;code&gt;WrongMethodTypeException&lt;/code&gt; in a program which uses VarHandles.</source>
          <target state="translated">Thus, an access mode type mismatch which might show up as a linkage error in a statically typed program can show up as a dynamic &lt;code&gt;WrongMethodTypeException&lt;/code&gt; in a program which uses VarHandles.</target>
        </trans-unit>
        <trans-unit id="72b7967722f4e5fa58e816e3be6b2e8e809e07b7" translate="yes" xml:space="preserve">
          <source>Thus, byte values between &lt;code&gt;0x00&lt;/code&gt; and &lt;code&gt;0x7f&lt;/code&gt; are simply returned as integer values between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;127&lt;/code&gt;. Values between &lt;code&gt;0x80&lt;/code&gt; and &lt;code&gt;0xff&lt;/code&gt;, which normally represent negative &lt;code&gt;byte&lt;/code&gt; values, will be mapped into positive integers between &lt;code&gt;128&lt;/code&gt; and &lt;code&gt;255&lt;/code&gt;.</source>
          <target state="translated">Thus, byte values between &lt;code&gt;0x00&lt;/code&gt; and &lt;code&gt;0x7f&lt;/code&gt; are simply returned as integer values between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;127&lt;/code&gt; . Values between &lt;code&gt;0x80&lt;/code&gt; and &lt;code&gt;0xff&lt;/code&gt; , which normally represent negative &lt;code&gt;byte&lt;/code&gt; values, will be mapped into positive integers between &lt;code&gt;128&lt;/code&gt; and &lt;code&gt;255&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b1c7f4c120a26932bbddcc1fc1d6486b24537a52" translate="yes" xml:space="preserve">
          <source>Thus, byte values between &lt;code&gt;0x00&lt;/code&gt; and &lt;code&gt;0x7f&lt;/code&gt; are simply returned as integer values between &lt;code&gt;0&lt;/code&gt; and &lt;code&gt;127&lt;/code&gt;. Values between &lt;code&gt;0x80&lt;/code&gt; and &lt;code&gt;0xff&lt;/code&gt;, which normally represent negative &lt;code&gt;byte&lt;/code&gt;values, will be mapped into positive integers between &lt;code&gt;128&lt;/code&gt; and &lt;code&gt;255&lt;/code&gt;.</source>
          <target state="translated">따라서 &lt;code&gt;0x00&lt;/code&gt; 과 &lt;code&gt;0x7f&lt;/code&gt; 사이의 바이트 값 은 단순히 &lt;code&gt;0&lt;/code&gt; 과 &lt;code&gt;127&lt;/code&gt; 사이의 정수 값으로 반환됩니다 . 일반적으로 음의 &lt;code&gt;byte&lt;/code&gt; 값을 나타내는 &lt;code&gt;0x80&lt;/code&gt; 과 &lt;code&gt;0xff&lt;/code&gt; 사이의 값은 &lt;code&gt;128&lt;/code&gt; 과 &lt;code&gt;255&lt;/code&gt; 사이의 양의 정수로 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="d8d5d9388d642541526ec7a4d22824785e336cf7" translate="yes" xml:space="preserve">
          <source>Thus, for any given local date-time there can be zero, one or two valid offsets. This method returns that list of valid offsets, which is a list of size 0, 1 or 2. In the case where there are two offsets, the earlier offset is returned at index 0 and the later offset at index 1.</source>
          <target state="translated">따라서, 주어진 현지 날짜-시간에 대해 0, 1 또는 2 개의 유효한 오프셋이있을 수 있습니다. 이 메소드는 유효한 오프셋 목록 (크기 0, 1 또는 2의 목록)을 리턴합니다. 두 개의 오프셋이있는 경우, 이전 오프셋은 색인 0에서 리턴되고 이후 오프셋은 색인 1에서 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="ecac47baa2a0453ec61d9b7f00a6b3be988dfffb" translate="yes" xml:space="preserve">
          <source>Thus, for any given local date-time there can be zero, one or two valid offsets. This method returns the single offset in the Normal case, and in the Gap or Overlap case it returns the offset before the transition.</source>
          <target state="translated">따라서, 주어진 현지 날짜-시간에 대해 0, 1 또는 2 개의 유효한 오프셋이있을 수 있습니다. 이 메서드는 일반 경우 단일 오프셋을 반환하고 갭 또는 오버랩 경우 전환 전의 오프셋을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a05cc43cc27a279b762a0084bba5cae97c6ea3f3" translate="yes" xml:space="preserve">
          <source>Thus, handles to non-public methods, or to methods in non-public classes, should generally be kept secret. They should not be passed to untrusted code unless their use from the untrusted code would be harmless.</source>
          <target state="translated">따라서 비 공용 메서드 또는 비 공용 클래스의 메서드에 대한 핸들은 일반적으로 비밀로 유지해야합니다. 신뢰할 수없는 코드에서 사용하는 것이 무해하지 않는 한 신뢰할 수없는 코드로 전달되어서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="ffd17657c1d0440eb89690887c93cacc2d6efb86" translate="yes" xml:space="preserve">
          <source>Thus, the purpose of AccessControlContext is for those situations where a security check that should be made within a given context actually needs to be done from within a</source>
          <target state="translated">따라서 AccessControlContext의 목적은 주어진 컨텍스트 내에서 수행해야하는 보안 점검이 실제로는</target>
        </trans-unit>
        <trans-unit id="98476dff4d031897aba6eab3b7fd173f84c35a5b" translate="yes" xml:space="preserve">
          <source>Thus, two &lt;code&gt;Date&lt;/code&gt; objects are equal if and only if the &lt;code&gt;getTime&lt;/code&gt; method returns the same &lt;code&gt;long&lt;/code&gt; value for both.</source>
          <target state="translated">따라서 &lt;code&gt;getTime&lt;/code&gt; 메소드가 둘 다에 대해 동일한 &lt;code&gt;long&lt;/code&gt; 값을 리턴하는 경우에만 두 개의 &lt;code&gt;Date&lt;/code&gt; 오브젝트가 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="72260e824fb4c4e7adfb4bb0b1b8958b7c6930a2" translate="yes" xml:space="preserve">
          <source>Thus, when a &lt;code&gt;Locale&lt;/code&gt; object contains Unicode locale attributes and keywords, &lt;code&gt;getExtension(UNICODE_LOCALE_EXTENSION)&lt;/code&gt; will return a String representing this information, for example, &quot;nu-thai&quot;. The &lt;code&gt;Locale&lt;/code&gt; class also provides &lt;a href=&quot;#getUnicodeLocaleAttributes()&quot;&gt;&lt;code&gt;getUnicodeLocaleAttributes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getUnicodeLocaleKeys()&quot;&gt;&lt;code&gt;getUnicodeLocaleKeys()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#getUnicodeLocaleType(java.lang.String)&quot;&gt;&lt;code&gt;getUnicodeLocaleType(java.lang.String)&lt;/code&gt;&lt;/a&gt; which allow you to access Unicode locale attributes and key/type pairs directly. When represented as a string, the Unicode Locale Extension lists attributes alphabetically, followed by key/type sequences with keys listed alphabetically (the order of subtags comprising a key's type is fixed when the type is defined)</source>
          <target state="translated">Thus, when a &lt;code&gt;Locale&lt;/code&gt; object contains Unicode locale attributes and keywords, &lt;code&gt;getExtension(UNICODE_LOCALE_EXTENSION)&lt;/code&gt; will return a String representing this information, for example, &quot;nu-thai&quot;. The &lt;code&gt;Locale&lt;/code&gt; class also provides &lt;a href=&quot;#getUnicodeLocaleAttributes()&quot;&gt; &lt;code&gt;getUnicodeLocaleAttributes()&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#getUnicodeLocaleKeys()&quot;&gt; &lt;code&gt;getUnicodeLocaleKeys()&lt;/code&gt; &lt;/a&gt;, and &lt;a href=&quot;#getUnicodeLocaleType(java.lang.String)&quot;&gt; &lt;code&gt;getUnicodeLocaleType(java.lang.String)&lt;/code&gt; &lt;/a&gt; which allow you to access Unicode locale attributes and key/type pairs directly. When represented as a string, the Unicode Locale Extension lists attributes alphabetically, followed by key/type sequences with keys listed alphabetically (the order of subtags comprising a key's type is fixed when the type is defined)</target>
        </trans-unit>
        <trans-unit id="92c3d429db909b0bed898ed1c23e12a0253ff1c8" translate="yes" xml:space="preserve">
          <source>Thus, when a &lt;code&gt;Locale&lt;/code&gt; object contains Unicode locale attributes and keywords, &lt;code&gt;getExtension(UNICODE_LOCALE_EXTENSION)&lt;/code&gt; will return a String representing this information, for example, &quot;nu-thai&quot;. The &lt;code&gt;Locale&lt;/code&gt; class also provides &lt;a href=&quot;locale#getUnicodeLocaleAttributes--&quot;&gt;&lt;code&gt;getUnicodeLocaleAttributes()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;locale#getUnicodeLocaleKeys--&quot;&gt;&lt;code&gt;getUnicodeLocaleKeys()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;locale#getUnicodeLocaleType-java.lang.String-&quot;&gt;&lt;code&gt;getUnicodeLocaleType(java.lang.String)&lt;/code&gt;&lt;/a&gt; which allow you to access Unicode locale attributes and key/type pairs directly. When represented as a string, the Unicode Locale Extension lists attributes alphabetically, followed by key/type sequences with keys listed alphabetically (the order of subtags comprising a key's type is fixed when the type is defined)</source>
          <target state="translated">따라서 &lt;code&gt;Locale&lt;/code&gt; 객체에 유니 코드 로캘 속성 및 키워드가 포함 된 경우 &lt;code&gt;getExtension(UNICODE_LOCALE_EXTENSION)&lt;/code&gt; 은이 정보를 나타내는 문자열 (예 : &quot;nu-thai&quot; ) 을 반환합니다. &lt;code&gt;Locale&lt;/code&gt; 클래스는 제공 &lt;a href=&quot;locale#getUnicodeLocaleAttributes--&quot;&gt; &lt;code&gt;getUnicodeLocaleAttributes()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;locale#getUnicodeLocaleKeys--&quot;&gt; &lt;code&gt;getUnicodeLocaleKeys()&lt;/code&gt; &lt;/a&gt; 하고, &lt;a href=&quot;locale#getUnicodeLocaleType-java.lang.String-&quot;&gt; &lt;code&gt;getUnicodeLocaleType(java.lang.String)&lt;/code&gt; &lt;/a&gt; 직접 액세스 유니 코드 로켈의 속성과 키 / 타입 쌍을 수 있습니다. 문자열로 표현 될 때, 유니 코드 로케일 확장은 속성을 알파벳순으로 나열한 다음 키가 알파벳순으로 나열된 키 / 타입 순서를 나열합니다 (키 유형을 포함하는 서브 태그의 순서는 유형이 정의 될 때 고정됨)</target>
        </trans-unit>
        <trans-unit id="6a4b3369e6a303ed019539a3ace8efe19456477d" translate="yes" xml:space="preserve">
          <source>Thus, when copying an integral type source to an integral type destination, if the source sample size is greater than the destination sample size for a particular band, the high order bits of the source sample are truncated. If the source sample size is less than the destination size for a particular band, the high order bits of the destination are zero-extended or sign-extended depending on whether srcRaster's SampleModel treats the sample as a signed or unsigned quantity.</source>
          <target state="translated">Thus, when copying an integral type source to an integral type destination, if the source sample size is greater than the destination sample size for a particular band, the high order bits of the source sample are truncated. If the source sample size is less than the destination size for a particular band, the high order bits of the destination are zero-extended or sign-extended depending on whether srcRaster's SampleModel treats the sample as a signed or unsigned quantity.</target>
        </trans-unit>
        <trans-unit id="866e086146681ed6c2109e5f79647c0874300c87" translate="yes" xml:space="preserve">
          <source>Tick rectangle</source>
          <target state="translated">Tick rectangle</target>
        </trans-unit>
        <trans-unit id="8e5f0e67c1a46279f15bfa1668ff92355a0291ed" translate="yes" xml:space="preserve">
          <source>TileObserver</source>
          <target state="translated">TileObserver</target>
        </trans-unit>
        <trans-unit id="6c82e6dd86807ee3db07e3c82bec1ae1ce00b08b" translate="yes" xml:space="preserve">
          <source>Time</source>
          <target state="translated">Time</target>
        </trans-unit>
        <trans-unit id="0e6784f4bdace33c20dfec97fb8e85a458830053" translate="yes" xml:space="preserve">
          <source>Time formatted for the 12-hour clock as &lt;code&gt;&quot;%tI:%tM:%tS %Tp&quot;&lt;/code&gt;. The location of the morning or afternoon marker (&lt;code&gt;'%Tp'&lt;/code&gt;) may be locale-dependent.</source>
          <target state="translated">12 시간제 형식의 시간은 &lt;code&gt;&quot;%tI:%tM:%tS %Tp&quot;&lt;/code&gt; 됩니다. 오전 또는 오후 마커의 위치 ( &lt;code&gt;'%Tp'&lt;/code&gt; )는 로캘에 따라 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ac0fcf04a794ce3095e0649fe7de98b0aa7efd9c" translate="yes" xml:space="preserve">
          <source>Time formatted for the 24-hour clock as &lt;code&gt;&quot;%tH:%tM&quot;&lt;/code&gt;</source>
          <target state="translated">24 시간 제로 포맷 된 시간은 &lt;code&gt;&quot;%tH:%tM&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="de6d94004f978d6098c423e1892852b097c9b10b" translate="yes" xml:space="preserve">
          <source>Time formatted for the 24-hour clock as &lt;code&gt;&quot;%tH:%tM:%tS&quot;&lt;/code&gt;.</source>
          <target state="translated">24 시간제 형식의 시간은 &lt;code&gt;&quot;%tH:%tM:%tS&quot;&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="fabfafbde1bcee333b2792b5a75b20bd748367c1" translate="yes" xml:space="preserve">
          <source>Time unit representing one second</source>
          <target state="translated">1 초를 나타내는 시간 단위</target>
        </trans-unit>
        <trans-unit id="c9dbcaa261c78b418e4aebabb43ab10eb5d2c894" translate="yes" xml:space="preserve">
          <source>Time unit representing one second.</source>
          <target state="translated">Time unit representing one second.</target>
        </trans-unit>
        <trans-unit id="0427592ba03900f5b05775749a82fa6413478361" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a microsecond</source>
          <target state="translated">1000 분의 1 초를 나타내는 시간 단위</target>
        </trans-unit>
        <trans-unit id="87480b4cfcc3a722c27cbf068afa4dbd8a4442c1" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a microsecond.</source>
          <target state="translated">Time unit representing one thousandth of a microsecond.</target>
        </trans-unit>
        <trans-unit id="61bb947eb596cc0808ba5a6e9ecb5e1f991eafa8" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a millisecond</source>
          <target state="translated">천분의 일 밀리 초를 나타내는 시간 단위</target>
        </trans-unit>
        <trans-unit id="93479bfc7155f5bf2fd0382e7286186abecc0f97" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a millisecond.</source>
          <target state="translated">Time unit representing one thousandth of a millisecond.</target>
        </trans-unit>
        <trans-unit id="c50f471fb69b28b20b8e59aff81ba82cdfda6dba" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a second</source>
          <target state="translated">천분의 일을 나타내는 시간 단위</target>
        </trans-unit>
        <trans-unit id="e31e8bb6df6dd7121d4255ecf461003237d9881a" translate="yes" xml:space="preserve">
          <source>Time unit representing one thousandth of a second.</source>
          <target state="translated">Time unit representing one thousandth of a second.</target>
        </trans-unit>
        <trans-unit id="eab70b98a2301e438690d8226a7540fb93a18051" translate="yes" xml:space="preserve">
          <source>Time unit representing sixty minutes</source>
          <target state="translated">60 분을 나타내는 시간 단위</target>
        </trans-unit>
        <trans-unit id="5dc18d0258a296e4d566c9eb552f6b976086ebc4" translate="yes" xml:space="preserve">
          <source>Time unit representing sixty minutes.</source>
          <target state="translated">Time unit representing sixty minutes.</target>
        </trans-unit>
        <trans-unit id="25db4b139768b0c095e63a33f97da9c2ced0a3e6" translate="yes" xml:space="preserve">
          <source>Time unit representing sixty seconds</source>
          <target state="translated">60 초를 나타내는 시간 단위</target>
        </trans-unit>
        <trans-unit id="8a76eb2dbfa240231ca05866a99810c9b86a64b8" translate="yes" xml:space="preserve">
          <source>Time unit representing sixty seconds.</source>
          <target state="translated">Time unit representing sixty seconds.</target>
        </trans-unit>
        <trans-unit id="020cbda4d020d26de73dea56e6abbaa04d2631e6" translate="yes" xml:space="preserve">
          <source>Time unit representing twenty four hours</source>
          <target state="translated">24 시간을 나타내는 시간 단위</target>
        </trans-unit>
        <trans-unit id="f6c409a4954de100948bf0e3d90e770c6acc66b5" translate="yes" xml:space="preserve">
          <source>Time unit representing twenty four hours.</source>
          <target state="translated">Time unit representing twenty four hours.</target>
        </trans-unit>
        <trans-unit id="89f57c9112e204a7e40fe8299e9501ca95885d1f" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The calculation effectively converts both zoned date-times to instants and then calculates the period between the instants. For example, the period from noon on day 1 to noon the following day in hours may be 23, 24 or 25 hours (or some other amount) depending on whether there was a daylight savings change or not.</source>
          <target state="translated">시간 단위는 즉시 타임 라인에서 작동합니다. 계산은 두 영역 화 된 날짜-시간을 모두 순간으로 효과적으로 변환 한 다음 순간 사이의 기간을 계산합니다. 예를 들어, 1 일 정오부터 다음 날 정오까지의 시간은 일광 절약 시간제 변경의 유무에 따라 23, 24 또는 25 시간 (또는 다른 금액) 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d70941fb95500a6268aa8269ce17251e959f5659" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The period is first added to the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;#ofInstant(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt;&lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt; with the offset before the addition.</source>
          <target state="translated">Time units operate on the instant time-line. The period is first added to the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;#ofInstant(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt; &lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt; with the offset before the addition.</target>
        </trans-unit>
        <trans-unit id="9ed6b3c9aeefe2bc6282eff254e96b8c3817061f" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The period is first added to the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;zoneddatetime#ofInstant-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt;&lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt; with the offset before the addition.</source>
          <target state="translated">시간 단위는 즉시 타임 라인에서 작동합니다. 기간은 먼저 현지 날짜-시간에 추가 된 다음 지역 ID를 사용하여 지역 날짜-시간으로 다시 변환됩니다. 변환은 추가 전 오프셋과 함께 &lt;a href=&quot;zoneddatetime#ofInstant-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt; &lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt; 사용합니다.</target>
        </trans-unit>
        <trans-unit id="4e1cfd464b999bed036579c41e7890f35be3c7a8" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The period is first subtracted from the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;#ofInstant(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt;&lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt; with the offset before the subtraction.</source>
          <target state="translated">Time units operate on the instant time-line. The period is first subtracted from the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;#ofInstant(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt; &lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt; with the offset before the subtraction.</target>
        </trans-unit>
        <trans-unit id="831e64c683b21b66a0babbd03d6b96ebea1847d5" translate="yes" xml:space="preserve">
          <source>Time units operate on the instant time-line. The period is first subtracted from the local date-time, then converted back to a zoned date-time using the zone ID. The conversion uses &lt;a href=&quot;zoneddatetime#ofInstant-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt;&lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt; with the offset before the subtraction.</source>
          <target state="translated">시간 단위는 즉시 타임 라인에서 작동합니다. 먼저 지역 날짜-시간에서 기간을 뺀 다음 영역 ID를 사용하여 지역 날짜-시간으로 다시 변환합니다. 변환은 빼기 전의 오프셋과 함께 &lt;a href=&quot;zoneddatetime#ofInstant-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt; &lt;code&gt;ofInstant(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt; 사용합니다.</target>
        </trans-unit>
        <trans-unit id="050590f9af11ee8fbb6d37006b75678e145d12dd" translate="yes" xml:space="preserve">
          <source>Time with offset</source>
          <target state="translated">오프셋 시간</target>
        </trans-unit>
        <trans-unit id="caa53650ff34d0afa2cc90c62149dba0ee3a43b8" translate="yes" xml:space="preserve">
          <source>Time with or without offset</source>
          <target state="translated">오프셋이 있거나없는 시간</target>
        </trans-unit>
        <trans-unit id="71a771812f6037b30385960c0fae367957acff4a" translate="yes" xml:space="preserve">
          <source>Time without offset</source>
          <target state="translated">오프셋없는 시간</target>
        </trans-unit>
        <trans-unit id="eea79afd832854a3b24153b928ee9c62c7457dbe" translate="yes" xml:space="preserve">
          <source>Time zone</source>
          <target state="translated">시간대</target>
        </trans-unit>
        <trans-unit id="8bb54ab1e88ff1d025269859104bf56b528ef8af" translate="yes" xml:space="preserve">
          <source>Time zone names are supported by &lt;a href=&quot;timezonenameprovider&quot;&gt;&lt;code&gt;TimeZoneNameProvider&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">시간대 이름은 &lt;a href=&quot;timezonenameprovider&quot;&gt; &lt;code&gt;TimeZoneNameProvider&lt;/code&gt; 에서&lt;/a&gt; 지원됩니다 .</target>
        </trans-unit>
        <trans-unit id="3f4878b36a0d9264640a70315c2a5bb65e680e2f" translate="yes" xml:space="preserve">
          <source>Time zone rules are expressed in one of three ways:</source>
          <target state="translated">시간대 규칙은 다음 세 가지 방법 중 하나로 표현됩니다.</target>
        </trans-unit>
        <trans-unit id="29a5c476992123ec99f71484fedd2849b8aecb7b" translate="yes" xml:space="preserve">
          <source>Time-consuming tasks should not be run on the</source>
          <target state="translated">Time-consuming tasks should not be run on the</target>
        </trans-unit>
        <trans-unit id="8e881d4f0c8acf36a5646394d4530435fc6c9f4a" translate="yes" xml:space="preserve">
          <source>Time-scale</source>
          <target state="translated">Time-scale</target>
        </trans-unit>
        <trans-unit id="8830a64163772ea12b0403c9616e1650d28ab38b" translate="yes" xml:space="preserve">
          <source>Time-zone IDs</source>
          <target state="translated">시간대 ID</target>
        </trans-unit>
        <trans-unit id="33ded71aae7cb19513a319ece1e1ed4533d56bc6" translate="yes" xml:space="preserve">
          <source>Time-zone rules are defined by governments and change frequently. There are a number of organizations, known here as groups, that monitor time-zone changes and collate them. The default group is the IANA Time Zone Database (TZDB). Other organizations include IATA (the airline industry body) and Microsoft.</source>
          <target state="translated">시간대 규칙은 정부에 의해 정의되며 자주 변경됩니다. 여기에서 그룹이라고하는 여러 조직이 표준 시간대 변경을 모니터링하고 수집합니다. 기본 그룹은 IANA 시간대 데이터베이스 (TZDB)입니다. 다른 조직으로는 IATA (항공 산업 기관) 및 Microsoft가 있습니다.</target>
        </trans-unit>
        <trans-unit id="6137849a9f17f87165fee1499b4099d6a4fd65ee" translate="yes" xml:space="preserve">
          <source>Time-zone rules are political, thus the data can change at any time. Each provider will provide the latest rules for each zone ID, but they may also provide the history of how the rules changed.</source>
          <target state="translated">시간대 규칙은 정치적이므로 데이터는 언제든지 변경 될 수 있습니다. 각 공급자는 각 영역 ID에 대한 최신 규칙을 제공하지만 규칙 변경 방법에 대한 기록을 제공 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="090fb0c18ce47a2edb59226eb740058c265f757b" translate="yes" xml:space="preserve">
          <source>Time-zone rules, such as daylight savings, mean that not every local date-time is valid for the specified zone, thus the local date-time may not be midnight.</source>
          <target state="translated">일광 절약 시간제와 같은 시간대 규칙은 모든 지역 날짜-시간이 지정된 지역에 대해 유효한 것은 아니므로 현지 날짜-시간이 자정이 아닐 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b065bea6629d2bcd6f2aa65275a8270e77ac97d" translate="yes" xml:space="preserve">
          <source>Time-zone rules, such as daylight savings, mean that not every time on the local time-line exists. If the local date-time is in a gap or overlap according to the rules then a resolver is used to determine the resultant local time and offset. This method uses &lt;a href=&quot;zoneddatetime#ofLocal(java.time.LocalDateTime,java.time.ZoneId,java.time.ZoneOffset)&quot;&gt;&lt;code&gt;ZonedDateTime.ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt;&lt;/a&gt; to retain the offset from this instance if possible.</source>
          <target state="translated">Time-zone rules, such as daylight savings, mean that not every time on the local time-line exists. If the local date-time is in a gap or overlap according to the rules then a resolver is used to determine the resultant local time and offset. This method uses &lt;a href=&quot;zoneddatetime#ofLocal(java.time.LocalDateTime,java.time.ZoneId,java.time.ZoneOffset)&quot;&gt; &lt;code&gt;ZonedDateTime.ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt; &lt;/a&gt; to retain the offset from this instance if possible.</target>
        </trans-unit>
        <trans-unit id="69d8919b61a4696f2edbdb1a0ffd8942c9a32cd6" translate="yes" xml:space="preserve">
          <source>Time-zone rules, such as daylight savings, mean that not every time on the local time-line exists. If the local date-time is in a gap or overlap according to the rules then a resolver is used to determine the resultant local time and offset. This method uses &lt;a href=&quot;zoneddatetime#ofLocal-java.time.LocalDateTime-java.time.ZoneId-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;ZonedDateTime.ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt;&lt;/a&gt; to retain the offset from this instance if possible.</source>
          <target state="translated">일광 절약 시간제와 같은 시간대 규칙은 현지 타임 라인의 모든 시간이 존재하지 않음을 의미합니다. 로컬 날짜-시간이 규칙에 따라 차이가 있거나 겹치는 경우 결과 로컬 시간 및 오프셋을 결정하기 위해 리졸버가 사용됩니다. 이 메서드는 가능한 경우 &lt;a href=&quot;zoneddatetime#ofLocal-java.time.LocalDateTime-java.time.ZoneId-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;ZonedDateTime.ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt; &lt;/a&gt; 을 사용하여이 인스턴스의 오프셋을 유지합니다.</target>
        </trans-unit>
        <trans-unit id="626b62a0eab63d8138cbffcf2c050e1dbc225369" translate="yes" xml:space="preserve">
          <source>Time-zones are defined by governments and change frequently. This method allows applications to find the history of changes to the rules for a single zone ID. The map is keyed by a string, which is the version string associated with the rules.</source>
          <target state="translated">시간대는 정부에 의해 정의되며 자주 변경됩니다. 이 방법을 통해 응용 프로그램은 단일 영역 ID에 대한 규칙 변경 기록을 찾을 수 있습니다. 맵에는 규칙과 연관된 버전 문자열 인 문자열이 입력됩니다.</target>
        </trans-unit>
        <trans-unit id="0de905fd055ac463c8b08925d00ee67eebc8d728" translate="yes" xml:space="preserve">
          <source>TimeLimitExceededException</source>
          <target state="translated">TimeLimitExceededException</target>
        </trans-unit>
        <trans-unit id="df40c3b93b006f00eef205beea090efa3f7e9e8d" translate="yes" xml:space="preserve">
          <source>TimeUnit</source>
          <target state="translated">TimeUnit</target>
        </trans-unit>
        <trans-unit id="dc6d78829b2f8c3106a4bdf822f751696435efcb" translate="yes" xml:space="preserve">
          <source>TimeUnit.convert()</source>
          <target state="translated">TimeUnit.convert()</target>
        </trans-unit>
        <trans-unit id="830cc0bd2e0a2fe9eac0e502ef3b5b9156d31f8b" translate="yes" xml:space="preserve">
          <source>TimeUnit.sleep()</source>
          <target state="translated">TimeUnit.sleep()</target>
        </trans-unit>
        <trans-unit id="83f017325323a2fb1c3d3b6db20dd4b319aa7f08" translate="yes" xml:space="preserve">
          <source>TimeUnit.timedJoin()</source>
          <target state="translated">TimeUnit.timedJoin()</target>
        </trans-unit>
        <trans-unit id="5f6deaa8e8a85d9852e3e80f21a713e5ffac59c6" translate="yes" xml:space="preserve">
          <source>TimeUnit.timedWait()</source>
          <target state="translated">TimeUnit.timedWait()</target>
        </trans-unit>
        <trans-unit id="c8e371532ae3111ecdf8ef29a5548ddd918cb4f1" translate="yes" xml:space="preserve">
          <source>TimeUnit.toDays()</source>
          <target state="translated">TimeUnit.toDays()</target>
        </trans-unit>
        <trans-unit id="99b0f5def87732225751e7031078408f4f134430" translate="yes" xml:space="preserve">
          <source>TimeUnit.toHours()</source>
          <target state="translated">TimeUnit.toHours()</target>
        </trans-unit>
        <trans-unit id="ef73133eee66e8d60b240f6c276328790c87d794" translate="yes" xml:space="preserve">
          <source>TimeUnit.toMicros()</source>
          <target state="translated">TimeUnit.toMicros()</target>
        </trans-unit>
        <trans-unit id="c68987acb22a0f1133564c2feeec03d3e5d7b531" translate="yes" xml:space="preserve">
          <source>TimeUnit.toMillis()</source>
          <target state="translated">TimeUnit.toMillis()</target>
        </trans-unit>
        <trans-unit id="3730ed7851bf04f1d33d3ff0080311423a464267" translate="yes" xml:space="preserve">
          <source>TimeUnit.toMinutes()</source>
          <target state="translated">TimeUnit.toMinutes()</target>
        </trans-unit>
        <trans-unit id="4dd5c6566718095f94c4b947cdb8e61d5741f1d9" translate="yes" xml:space="preserve">
          <source>TimeUnit.toNanos()</source>
          <target state="translated">TimeUnit.toNanos()</target>
        </trans-unit>
        <trans-unit id="a79b9e1c9998086855c45b2ecd7a5f4c333edfe8" translate="yes" xml:space="preserve">
          <source>TimeUnit.toSeconds()</source>
          <target state="translated">TimeUnit.toSeconds()</target>
        </trans-unit>
        <trans-unit id="57ef650399f2712bf741a27ec482a93a859abb4a" translate="yes" xml:space="preserve">
          <source>TimeUnit.valueOf()</source>
          <target state="translated">TimeUnit.valueOf()</target>
        </trans-unit>
        <trans-unit id="a359ca57ee573718caff5b8c3e63b5fc924bf389" translate="yes" xml:space="preserve">
          <source>TimeUnit.values()</source>
          <target state="translated">TimeUnit.values()</target>
        </trans-unit>
        <trans-unit id="a4208dd784207f8d84ef4fa31bd30bdd2b432c1d" translate="yes" xml:space="preserve">
          <source>TimeZone</source>
          <target state="translated">TimeZone</target>
        </trans-unit>
        <trans-unit id="cb3863b86450493de455ba45e15ac953362436e0" translate="yes" xml:space="preserve">
          <source>TimeZone for this.</source>
          <target state="translated">TimeZone for this.</target>
        </trans-unit>
        <trans-unit id="e9cbb9369e1389fce6fec9ee7402639ce40b5d8a" translate="yes" xml:space="preserve">
          <source>TimeZone.clone()</source>
          <target state="translated">TimeZone.clone()</target>
        </trans-unit>
        <trans-unit id="d2c14798f600f15426d37393363602c92fa2a2f2" translate="yes" xml:space="preserve">
          <source>TimeZone.getAvailableIDs()</source>
          <target state="translated">TimeZone.getAvailableIDs()</target>
        </trans-unit>
        <trans-unit id="b37d04d3329436f7f71234e48d7d2bc525eef972" translate="yes" xml:space="preserve">
          <source>TimeZone.getDSTSavings()</source>
          <target state="translated">TimeZone.getDSTSavings()</target>
        </trans-unit>
        <trans-unit id="a36b3c7befab558d8c90ba31a7714dde07f2d526" translate="yes" xml:space="preserve">
          <source>TimeZone.getDefault()</source>
          <target state="translated">TimeZone.getDefault()</target>
        </trans-unit>
        <trans-unit id="6c480eb94416dc3381f7dd97c7c459c72e05d9aa" translate="yes" xml:space="preserve">
          <source>TimeZone.getDisplayName()</source>
          <target state="translated">TimeZone.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="79e758338012138895c385e324e812e297c7e960" translate="yes" xml:space="preserve">
          <source>TimeZone.getID()</source>
          <target state="translated">TimeZone.getID()</target>
        </trans-unit>
        <trans-unit id="5cef88fd890c75151720b6f231afd2108cb8f294" translate="yes" xml:space="preserve">
          <source>TimeZone.getOffset()</source>
          <target state="translated">TimeZone.getOffset()</target>
        </trans-unit>
        <trans-unit id="89330dcc6b6c1d1c028fe320c5f593c5b989fe9e" translate="yes" xml:space="preserve">
          <source>TimeZone.getRawOffset()</source>
          <target state="translated">TimeZone.getRawOffset()</target>
        </trans-unit>
        <trans-unit id="10d1274880ae857877db690d3c0220040aff62da" translate="yes" xml:space="preserve">
          <source>TimeZone.getTimeZone()</source>
          <target state="translated">TimeZone.getTimeZone()</target>
        </trans-unit>
        <trans-unit id="1b8c437f45170fda63fafc1a7c082d45c20fced2" translate="yes" xml:space="preserve">
          <source>TimeZone.hasSameRules()</source>
          <target state="translated">TimeZone.hasSameRules()</target>
        </trans-unit>
        <trans-unit id="ff334a3e562bd71e91ec01e6fe9899d37c05c857" translate="yes" xml:space="preserve">
          <source>TimeZone.inDaylightTime()</source>
          <target state="translated">TimeZone.inDaylightTime()</target>
        </trans-unit>
        <trans-unit id="1f697c26f417f7d9d7cdfbd4587c9d2fcd681320" translate="yes" xml:space="preserve">
          <source>TimeZone.observesDaylightTime()</source>
          <target state="translated">TimeZone.observesDaylightTime()</target>
        </trans-unit>
        <trans-unit id="a0c48fd39e019f85ce0aab5d72e0b366c8359b4d" translate="yes" xml:space="preserve">
          <source>TimeZone.setDefault()</source>
          <target state="translated">TimeZone.setDefault()</target>
        </trans-unit>
        <trans-unit id="626b6b713b4bdcd72171c0a543c3568bf7e9b7d9" translate="yes" xml:space="preserve">
          <source>TimeZone.setID()</source>
          <target state="translated">TimeZone.setID()</target>
        </trans-unit>
        <trans-unit id="1eb9d165355823bccfd58e6ad48f0bf613215d5c" translate="yes" xml:space="preserve">
          <source>TimeZone.setRawOffset()</source>
          <target state="translated">TimeZone.setRawOffset()</target>
        </trans-unit>
        <trans-unit id="05df22f63337599f3180142338eb2e7d8e3d4163" translate="yes" xml:space="preserve">
          <source>TimeZone.toZoneId()</source>
          <target state="translated">TimeZone.toZoneId()</target>
        </trans-unit>
        <trans-unit id="a64731e93346a78a35c5c19948993596c27b8261" translate="yes" xml:space="preserve">
          <source>TimeZone.useDaylightTime()</source>
          <target state="translated">TimeZone.useDaylightTime()</target>
        </trans-unit>
        <trans-unit id="16f1ab458f74bc6b63fec460f972ba78af52cb77" translate="yes" xml:space="preserve">
          <source>TimeZoneNameProvider</source>
          <target state="translated">TimeZoneNameProvider</target>
        </trans-unit>
        <trans-unit id="2cb73024ec0e6f28e0a0dcc16ab5bd51ad99c21a" translate="yes" xml:space="preserve">
          <source>TimeZoneNameProvider.getDisplayName()</source>
          <target state="translated">TimeZoneNameProvider.getDisplayName()</target>
        </trans-unit>
        <trans-unit id="d4eec88fceb36fe86366dd0d4aadff59ad8c78c7" translate="yes" xml:space="preserve">
          <source>TimeZoneNameProvider.getGenericDisplayName()</source>
          <target state="translated">TimeZoneNameProvider.getGenericDisplayName()</target>
        </trans-unit>
        <trans-unit id="3188114969e7bc52ee2de7d28da57b1a4e07a31e" translate="yes" xml:space="preserve">
          <source>TimeoutException</source>
          <target state="translated">TimeoutException</target>
        </trans-unit>
        <trans-unit id="27a4f2c5a6aa7d957af2668e0ec53e32944aba26" translate="yes" xml:space="preserve">
          <source>Timeouts</source>
          <target state="translated">Timeouts</target>
        </trans-unit>
        <trans-unit id="9d9cec22f36fd2bb99d5fe8c4723347bec202ca5" translate="yes" xml:space="preserve">
          <source>Timer</source>
          <target state="translated">Timer</target>
        </trans-unit>
        <trans-unit id="b20460a8965f21d19e98c04e87d17f50bd2afc59" translate="yes" xml:space="preserve">
          <source>Timer used when inside a scrollpane and the scrollbar is adjusting.</source>
          <target state="translated">Timer used when inside a scrollpane and the scrollbar is adjusting.</target>
        </trans-unit>
        <trans-unit id="81883e3bc6886077cba970d3d858196e709beb20" translate="yes" xml:space="preserve">
          <source>Timer.addNotification()</source>
          <target state="translated">Timer.addNotification()</target>
        </trans-unit>
        <trans-unit id="4896acdf5c63a6f47b6f6e5849ec30459d3397c8" translate="yes" xml:space="preserve">
          <source>Timer.cancel()</source>
          <target state="translated">Timer.cancel()</target>
        </trans-unit>
        <trans-unit id="9bb39f74d2e3a29a5d75b90c5890df232ec8a798" translate="yes" xml:space="preserve">
          <source>Timer.getAllNotificationIDs()</source>
          <target state="translated">Timer.getAllNotificationIDs()</target>
        </trans-unit>
        <trans-unit id="97ea8e20a2d0daef8655419765a1ff27524f3f68" translate="yes" xml:space="preserve">
          <source>Timer.getDate()</source>
          <target state="translated">Timer.getDate()</target>
        </trans-unit>
        <trans-unit id="2af097df8af116002578d5ede08febd3159da119" translate="yes" xml:space="preserve">
          <source>Timer.getFixedRate()</source>
          <target state="translated">Timer.getFixedRate()</target>
        </trans-unit>
        <trans-unit id="1df4cccd4d4a572b241065bce89ac0d714bf31c2" translate="yes" xml:space="preserve">
          <source>Timer.getNbNotifications()</source>
          <target state="translated">Timer.getNbNotifications()</target>
        </trans-unit>
        <trans-unit id="529f55d399ba2c6c3ad532c17a0040d4bcbabf41" translate="yes" xml:space="preserve">
          <source>Timer.getNbOccurences()</source>
          <target state="translated">Timer.getNbOccurences()</target>
        </trans-unit>
        <trans-unit id="337e7f895c06efc9798f62fade28c2c7bc75afb0" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationIDs()</source>
          <target state="translated">Timer.getNotificationIDs()</target>
        </trans-unit>
        <trans-unit id="dc7343a202131d19a3692f24d648b04ebe01ace1" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationInfo()</source>
          <target state="translated">Timer.getNotificationInfo()</target>
        </trans-unit>
        <trans-unit id="b7078c5612fe13ddc75429a66eef5a6cf51c7f79" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationMessage()</source>
          <target state="translated">Timer.getNotificationMessage()</target>
        </trans-unit>
        <trans-unit id="df06bf539a64e1d86be94d1f6c21668177afed89" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationType()</source>
          <target state="translated">Timer.getNotificationType()</target>
        </trans-unit>
        <trans-unit id="029175da9ac93fd9fe81c7afedd7c0a95ef244e3" translate="yes" xml:space="preserve">
          <source>Timer.getNotificationUserData()</source>
          <target state="translated">Timer.getNotificationUserData()</target>
        </trans-unit>
        <trans-unit id="57357051a09d379f81cc559540f30392aaeb31ea" translate="yes" xml:space="preserve">
          <source>Timer.getPeriod()</source>
          <target state="translated">Timer.getPeriod()</target>
        </trans-unit>
        <trans-unit id="f78b87ef04f0bb00580e579f2fcd11ab4279366c" translate="yes" xml:space="preserve">
          <source>Timer.getSendPastNotifications()</source>
          <target state="translated">Timer.getSendPastNotifications()</target>
        </trans-unit>
        <trans-unit id="4446979211b5db6ce570fbcb22219fbb9c77aae8" translate="yes" xml:space="preserve">
          <source>Timer.isActive()</source>
          <target state="translated">Timer.isActive()</target>
        </trans-unit>
        <trans-unit id="87706d3abfd020bfef2fb744b330e323bcddc5a8" translate="yes" xml:space="preserve">
          <source>Timer.isEmpty()</source>
          <target state="translated">Timer.isEmpty()</target>
        </trans-unit>
        <trans-unit id="79df4ac63affeeebf92910d568c126ee51c99e46" translate="yes" xml:space="preserve">
          <source>Timer.postDeregister()</source>
          <target state="translated">Timer.postDeregister()</target>
        </trans-unit>
        <trans-unit id="7b5f54b95af92a706d03f83f7098c293894eca3f" translate="yes" xml:space="preserve">
          <source>Timer.postRegister()</source>
          <target state="translated">Timer.postRegister()</target>
        </trans-unit>
        <trans-unit id="447f824bc2e0b6f94331da66e273cf93caaa4ea8" translate="yes" xml:space="preserve">
          <source>Timer.preDeregister()</source>
          <target state="translated">Timer.preDeregister()</target>
        </trans-unit>
        <trans-unit id="a7234e331e0c317bc0dcc660197a94021b492954" translate="yes" xml:space="preserve">
          <source>Timer.preRegister()</source>
          <target state="translated">Timer.preRegister()</target>
        </trans-unit>
        <trans-unit id="469a71915f47f697b0dbc948b29da72d062b3076" translate="yes" xml:space="preserve">
          <source>Timer.purge()</source>
          <target state="translated">Timer.purge()</target>
        </trans-unit>
        <trans-unit id="60bbc2e3fb8c12e5c337cff4039fb8100605ec93" translate="yes" xml:space="preserve">
          <source>Timer.removeAllNotifications()</source>
          <target state="translated">Timer.removeAllNotifications()</target>
        </trans-unit>
        <trans-unit id="f6d90aa3f0b109727d4e7aff37653de419bf0d73" translate="yes" xml:space="preserve">
          <source>Timer.removeNotification()</source>
          <target state="translated">Timer.removeNotification()</target>
        </trans-unit>
        <trans-unit id="230ad18a70470f6b72de5c59f28a6bcb0da1496a" translate="yes" xml:space="preserve">
          <source>Timer.removeNotifications()</source>
          <target state="translated">Timer.removeNotifications()</target>
        </trans-unit>
        <trans-unit id="56182922191e990b74ab5db444640f9b00561de9" translate="yes" xml:space="preserve">
          <source>Timer.schedule()</source>
          <target state="translated">Timer.schedule()</target>
        </trans-unit>
        <trans-unit id="fa0c7e4a2fb9be5aeebfe683e8eb7a3969fb53ab" translate="yes" xml:space="preserve">
          <source>Timer.scheduleAtFixedRate()</source>
          <target state="translated">Timer.scheduleAtFixedRate()</target>
        </trans-unit>
        <trans-unit id="dae275a30a1987fa3697a4e86ae79c78c06b14f3" translate="yes" xml:space="preserve">
          <source>Timer.setSendPastNotifications()</source>
          <target state="translated">Timer.setSendPastNotifications()</target>
        </trans-unit>
        <trans-unit id="68fca54c892ed8115fe16a2ca295987b82732716" translate="yes" xml:space="preserve">
          <source>Timer.start()</source>
          <target state="translated">Timer.start()</target>
        </trans-unit>
        <trans-unit id="464ee22a6605fc707ee61cbe4b6acf2a62a27242" translate="yes" xml:space="preserve">
          <source>Timer.stop()</source>
          <target state="translated">Timer.stop()</target>
        </trans-unit>
        <trans-unit id="4745ab42c374b6ddd2749572dda476df993af964" translate="yes" xml:space="preserve">
          <source>TimerMBean</source>
          <target state="translated">TimerMBean</target>
        </trans-unit>
        <trans-unit id="ab45a18791516a0d8b992c386c17f0a94fc001c7" translate="yes" xml:space="preserve">
          <source>TimerMBean.addNotification()</source>
          <target state="translated">TimerMBean.addNotification()</target>
        </trans-unit>
        <trans-unit id="cabf14affb9bb3d2bbc0f2c10e3cb6215380a957" translate="yes" xml:space="preserve">
          <source>TimerMBean.getAllNotificationIDs()</source>
          <target state="translated">TimerMBean.getAllNotificationIDs()</target>
        </trans-unit>
        <trans-unit id="f2f0224a15f20d7056f6b466379a8ebc59bedc03" translate="yes" xml:space="preserve">
          <source>TimerMBean.getDate()</source>
          <target state="translated">TimerMBean.getDate()</target>
        </trans-unit>
        <trans-unit id="57ad433c1188325131ba6d348a3fc9160a47240e" translate="yes" xml:space="preserve">
          <source>TimerMBean.getFixedRate()</source>
          <target state="translated">TimerMBean.getFixedRate()</target>
        </trans-unit>
        <trans-unit id="4ea1d519219b502c595dfa0c65a4889379e40649" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNbNotifications()</source>
          <target state="translated">TimerMBean.getNbNotifications()</target>
        </trans-unit>
        <trans-unit id="4f12890f2f9cac3684436b6c5b0a1bdec58ece20" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNbOccurences()</source>
          <target state="translated">TimerMBean.getNbOccurences()</target>
        </trans-unit>
        <trans-unit id="636fbad0075124d3cabcdf71e9c9f9391391709d" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNotificationIDs()</source>
          <target state="translated">TimerMBean.getNotificationIDs()</target>
        </trans-unit>
        <trans-unit id="8999c51a2b18d4699c6dda98c540926c265aa3a8" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNotificationMessage()</source>
          <target state="translated">TimerMBean.getNotificationMessage()</target>
        </trans-unit>
        <trans-unit id="6c0efd75ba28af29bcdd7915bb0d7897f6ccf178" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNotificationType()</source>
          <target state="translated">TimerMBean.getNotificationType()</target>
        </trans-unit>
        <trans-unit id="eb83d72bf4861b48f7b70f189221cda6219db761" translate="yes" xml:space="preserve">
          <source>TimerMBean.getNotificationUserData()</source>
          <target state="translated">TimerMBean.getNotificationUserData()</target>
        </trans-unit>
        <trans-unit id="08c496ea5938bf04aa0cdb99f985c2885382ca33" translate="yes" xml:space="preserve">
          <source>TimerMBean.getPeriod()</source>
          <target state="translated">TimerMBean.getPeriod()</target>
        </trans-unit>
        <trans-unit id="843bcdc502f986de4d2ac74ff6b6441a45eaf612" translate="yes" xml:space="preserve">
          <source>TimerMBean.getSendPastNotifications()</source>
          <target state="translated">TimerMBean.getSendPastNotifications()</target>
        </trans-unit>
        <trans-unit id="2e80500c146295abc08326321704a668cb47dbd0" translate="yes" xml:space="preserve">
          <source>TimerMBean.isActive()</source>
          <target state="translated">TimerMBean.isActive()</target>
        </trans-unit>
        <trans-unit id="b529b73caf402e506be7a04417d98526209f1c60" translate="yes" xml:space="preserve">
          <source>TimerMBean.isEmpty()</source>
          <target state="translated">TimerMBean.isEmpty()</target>
        </trans-unit>
        <trans-unit id="31caa0e6959c22a72c11796f5c3053213f1bb25c" translate="yes" xml:space="preserve">
          <source>TimerMBean.removeAllNotifications()</source>
          <target state="translated">TimerMBean.removeAllNotifications()</target>
        </trans-unit>
        <trans-unit id="06443e5fc2f1bcca44edf9fe88470effe45f27e0" translate="yes" xml:space="preserve">
          <source>TimerMBean.removeNotification()</source>
          <target state="translated">TimerMBean.removeNotification()</target>
        </trans-unit>
        <trans-unit id="36084ae3698c86f6e82e72e8816e56d3e3f031e0" translate="yes" xml:space="preserve">
          <source>TimerMBean.removeNotifications()</source>
          <target state="translated">TimerMBean.removeNotifications()</target>
        </trans-unit>
        <trans-unit id="41852f9f70d5bf0ec98d16d92088277a4daaa735" translate="yes" xml:space="preserve">
          <source>TimerMBean.setSendPastNotifications()</source>
          <target state="translated">TimerMBean.setSendPastNotifications()</target>
        </trans-unit>
        <trans-unit id="e691dc971ee42a7b95439844a5ac2c29fb25dd0a" translate="yes" xml:space="preserve">
          <source>TimerMBean.start()</source>
          <target state="translated">TimerMBean.start()</target>
        </trans-unit>
        <trans-unit id="2499248a5c4c8fea79097eec24a71eb010236fd9" translate="yes" xml:space="preserve">
          <source>TimerMBean.stop()</source>
          <target state="translated">TimerMBean.stop()</target>
        </trans-unit>
        <trans-unit id="1e50eeda781ceb9ef85731b34490acd306b91521" translate="yes" xml:space="preserve">
          <source>TimerNotification</source>
          <target state="translated">TimerNotification</target>
        </trans-unit>
        <trans-unit id="df5b02b9b175d4b10e997bf48fda3ed1c1208b04" translate="yes" xml:space="preserve">
          <source>TimerNotification.getNotificationID()</source>
          <target state="translated">TimerNotification.getNotificationID()</target>
        </trans-unit>
        <trans-unit id="db860929e828fe0641ac766efabe87b45c980daf" translate="yes" xml:space="preserve">
          <source>TimerTask</source>
          <target state="translated">TimerTask</target>
        </trans-unit>
        <trans-unit id="9d8bbad39e66d5ec2b1a732a23c2e6f13ecb6887" translate="yes" xml:space="preserve">
          <source>TimerTask.cancel()</source>
          <target state="translated">TimerTask.cancel()</target>
        </trans-unit>
        <trans-unit id="792a79da08a7e0bb591e07d3e8064893b257bd69" translate="yes" xml:space="preserve">
          <source>TimerTask.run()</source>
          <target state="translated">TimerTask.run()</target>
        </trans-unit>
        <trans-unit id="78dadea3be55e36f60d5fbec8b0b892eca60f6cb" translate="yes" xml:space="preserve">
          <source>TimerTask.scheduledExecutionTime()</source>
          <target state="translated">TimerTask.scheduledExecutionTime()</target>
        </trans-unit>
        <trans-unit id="7fb217f30f6443cf3e16104e905101256d5e1626" translate="yes" xml:space="preserve">
          <source>Times out</source>
          <target state="translated">Times out</target>
        </trans-unit>
        <trans-unit id="6c6d476a98f07f16e0d6e2bcb3f917bd62a38d93" translate="yes" xml:space="preserve">
          <source>TimesRoman (use Serif)</source>
          <target state="translated">TimesRoman (use Serif)</target>
        </trans-unit>
        <trans-unit id="312bfcf428f683992f055710f0ce3a6ad094aa08" translate="yes" xml:space="preserve">
          <source>Timespan</source>
          <target state="translated">Timespan</target>
        </trans-unit>
        <trans-unit id="19eabc961735d78f12fc7be906ffcb033853cf85" translate="yes" xml:space="preserve">
          <source>Timestamp</source>
          <target state="translated">Timestamp</target>
        </trans-unit>
        <trans-unit id="94cdc1fe977cba1c2d58d57a70bae983f620006e" translate="yes" xml:space="preserve">
          <source>Timestamp.equals()</source>
          <target state="translated">Timestamp.equals()</target>
        </trans-unit>
        <trans-unit id="f317887dcb89cda6b356ea42eade8c2b5e28868f" translate="yes" xml:space="preserve">
          <source>Timestamp.getSignerCertPath()</source>
          <target state="translated">Timestamp.getSignerCertPath()</target>
        </trans-unit>
        <trans-unit id="69059e7deee2c95ea43368902a077e27ccf8cf59" translate="yes" xml:space="preserve">
          <source>Timestamp.getTimestamp()</source>
          <target state="translated">Timestamp.getTimestamp()</target>
        </trans-unit>
        <trans-unit id="fa5ebbc5912e10adb01112392bbc56892ec74298" translate="yes" xml:space="preserve">
          <source>Timestamp.hashCode()</source>
          <target state="translated">Timestamp.hashCode()</target>
        </trans-unit>
        <trans-unit id="e6f9a7710e9367ff6d7245db561ce54c3724dacd" translate="yes" xml:space="preserve">
          <source>Timestamp.toString()</source>
          <target state="translated">Timestamp.toString()</target>
        </trans-unit>
        <trans-unit id="098024dc5537ca3623978ac7c0a6140ce39062b8" translate="yes" xml:space="preserve">
          <source>Timing</source>
          <target state="translated">Timing</target>
        </trans-unit>
        <trans-unit id="91f5ff61d2144f29c14b3d41f7b5f57a180a71d4" translate="yes" xml:space="preserve">
          <source>Timing of provider discovery</source>
          <target state="translated">Timing of provider discovery</target>
        </trans-unit>
        <trans-unit id="9d83d547ddd2a9519402e1cc1af3a4263caa9c55" translate="yes" xml:space="preserve">
          <source>Timing of resolution</source>
          <target state="translated">Timing of resolution</target>
        </trans-unit>
        <trans-unit id="3557cf461c922fb358962f7a3908fc79d1e1829c" translate="yes" xml:space="preserve">
          <source>Tip for Trouble-shooting</source>
          <target state="translated">Tip for Trouble-shooting</target>
        </trans-unit>
        <trans-unit id="e936a2368fae0dcade82992da382e3a7afc79b6f" translate="yes" xml:space="preserve">
          <source>Tip for Trouble-shooting:</source>
          <target state="translated">Tip for Trouble-shooting:</target>
        </trans-unit>
        <trans-unit id="17aee4a357c6012617a8c4c54a1dae2faaa490a2" translate="yes" xml:space="preserve">
          <source>Title pane</source>
          <target state="translated">Title pane</target>
        </trans-unit>
        <trans-unit id="eabf432b886231bee9b726c95c050e5a2a1d31ef" translate="yes" xml:space="preserve">
          <source>TitleAction</source>
          <target state="translated">TitleAction</target>
        </trans-unit>
        <trans-unit id="fe5417f8737103c29740c880d9fd9c6024616a01" translate="yes" xml:space="preserve">
          <source>TitlePane of an InternalFrame.</source>
          <target state="translated">TitlePane of an InternalFrame.</target>
        </trans-unit>
        <trans-unit id="43f37db998e81dade60d568fc93ec6e092904810" translate="yes" xml:space="preserve">
          <source>TitlePane of an InternalFrame. The TitlePane typically shows a menu, title, widgets to manipulate the internal frame. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;InternalFrameTitlePane&lt;/code&gt;.</source>
          <target state="translated">TitlePane of an InternalFrame. The TitlePane typically shows a menu, title, widgets to manipulate the internal frame. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;InternalFrameTitlePane&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="11bd1d7a27634107404c3d967ee797adfb9a5e1e" translate="yes" xml:space="preserve">
          <source>TitlePaneLayout</source>
          <target state="translated">TitlePaneLayout</target>
        </trans-unit>
        <trans-unit id="c60032656c5e7157b36fdae4781cadecc7aa36f1" translate="yes" xml:space="preserve">
          <source>TitleProperty</source>
          <target state="translated">TitleProperty</target>
        </trans-unit>
        <trans-unit id="f7fb128ab2b2b606667607db6ec0f87259f7a1e5" translate="yes" xml:space="preserve">
          <source>Titlecase</source>
          <target state="translated">Titlecase</target>
        </trans-unit>
        <trans-unit id="232c897822eee0aa4be2243715c458e7a161bdd9" translate="yes" xml:space="preserve">
          <source>TitledBorder</source>
          <target state="translated">TitledBorder</target>
        </trans-unit>
        <trans-unit id="bf10f7d2eec21fc0a918ed3e9f24675f67ee71e7" translate="yes" xml:space="preserve">
          <source>TitledBorderUIResource</source>
          <target state="translated">TitledBorderUIResource</target>
        </trans-unit>
        <trans-unit id="ae79ea1e9c6391a9ed83a2e18a031b835feec0c9" translate="yes" xml:space="preserve">
          <source>To</source>
          <target state="translated">To</target>
        </trans-unit>
        <trans-unit id="5f14923c5999c9e1a81cbb61d2e7edb34d0b3030" translate="yes" xml:space="preserve">
          <source>To &quot;run&quot; as a particular &lt;code&gt;Principal&lt;/code&gt;, code invokes the &lt;code&gt;Subject.doAs(subject, ...)&lt;/code&gt; method. After invoking that method, the code runs as all the Principals associated with the specified &lt;code&gt;Subject&lt;/code&gt;. Note that this &lt;code&gt;Policy&lt;/code&gt; (and the Permissions granted in this &lt;code&gt;Policy&lt;/code&gt;) only become effective after the call to &lt;code&gt;Subject.doAs&lt;/code&gt; has occurred.</source>
          <target state="translated">특정 &lt;code&gt;Principal&lt;/code&gt; 로 &quot;실행&quot;하기 위해 코드는 &lt;code&gt;Subject.doAs(subject, ...)&lt;/code&gt; 메소드를 호출합니다 . 해당 메소드를 호출 한 후 코드는 지정된 &lt;code&gt;Subject&lt;/code&gt; 와 연관된 모든 프린시 펄로 실행됩니다 . 이 &lt;code&gt;Policy&lt;/code&gt; (및이 &lt;code&gt;Policy&lt;/code&gt; 에서 부여 된 권한 ) 은 &lt;code&gt;Subject.doAs&lt;/code&gt; 에 대한 호출 이 발생한 후에 만 적용 됩니다.</target>
        </trans-unit>
        <trans-unit id="57af1372f17114a8bcc2db8d5516bec385ce0653" translate="yes" xml:space="preserve">
          <source>To a user of your program, however, both of these sequences should be treated as the same &quot;user-level&quot; character &quot;A with acute accent&quot;. When you are searching or comparing text, you must ensure that these two sequences are treated as equivalent. In addition, you must handle characters with more than one accent. Sometimes the order of a character's combining accents is significant, while in other cases accent sequences in different orders are really equivalent.</source>
          <target state="translated">그러나 프로그램 사용자에게이 두 시퀀스는 모두 동일한 &quot;사용자 수준&quot;문자 &quot;급성 악센트가있는 A&quot;로 취급되어야합니다. 텍스트를 검색하거나 비교할 때이 두 시퀀스가 ​​동등한 것으로 취급되는지 확인해야합니다. 또한 둘 이상의 악센트가있는 문자를 처리해야합니다. 때로는 캐릭터의 결합 악센트 순서가 중요하지만 다른 경우에는 다른 순서의 악센트 순서가 실제로 동일합니다.</target>
        </trans-unit>
        <trans-unit id="79d468f2080799fd4a5b8cfe80388b11a5d9042a" translate="yes" xml:space="preserve">
          <source>To access the member layout named &lt;code&gt;value&lt;/code&gt;, we can construct a memory access var handle as follows:</source>
          <target state="translated">&lt;code&gt;value&lt;/code&gt; 라는 멤버 레이아웃에 액세스하기 위해 다음과 같이 메모리 액세스 var 핸들을 생성 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c1897506b00f2472473c7bf16938a123ff47b08" translate="yes" xml:space="preserve">
          <source>To access the next page (chunk of data), an application calls the method &lt;code&gt;nextPage&lt;/code&gt;. This method creates a new &lt;code&gt;CachedRowSet&lt;/code&gt; object and fills it with the next page of data. For example, assume that the &lt;code&gt;CachedRowSet&lt;/code&gt; object's command returns a &lt;code&gt;ResultSet&lt;/code&gt; object</source>
          <target state="translated">To access the next page (chunk of data), an application calls the method &lt;code&gt;nextPage&lt;/code&gt; . This method creates a new &lt;code&gt;CachedRowSet&lt;/code&gt; object and fills it with the next page of data. For example, assume that the &lt;code&gt;CachedRowSet&lt;/code&gt; object's command returns a &lt;code&gt;ResultSet&lt;/code&gt; object</target>
        </trans-unit>
        <trans-unit id="ca231756d4836a985dd44e4c864318e7cb7e548f" translate="yes" xml:space="preserve">
          <source>To achieve laziness the actual work of locating and instantiating providers is done by the iterator itself. Its &lt;a href=&quot;iterator#hasNext()&quot;&gt;&lt;code&gt;hasNext&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator#next()&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; methods can therefore throw a &lt;a href=&quot;serviceconfigurationerror&quot;&gt;&lt;code&gt;ServiceConfigurationError&lt;/code&gt;&lt;/a&gt; for any of the reasons specified in the &lt;a href=&quot;#errors&quot;&gt;Errors&lt;/a&gt; section above. To write robust code it is only necessary to catch &lt;code&gt;ServiceConfigurationError&lt;/code&gt; when using the iterator. If an error is thrown then subsequent invocations of the iterator will make a best effort to locate and instantiate the next available provider, but in general such recovery cannot be guaranteed.</source>
          <target state="translated">To achieve laziness the actual work of locating and instantiating providers is done by the iterator itself. Its &lt;a href=&quot;iterator#hasNext()&quot;&gt; &lt;code&gt;hasNext&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;iterator#next()&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; methods can therefore throw a &lt;a href=&quot;serviceconfigurationerror&quot;&gt; &lt;code&gt;ServiceConfigurationError&lt;/code&gt; &lt;/a&gt; for any of the reasons specified in the &lt;a href=&quot;#errors&quot;&gt;Errors&lt;/a&gt; section above. To write robust code it is only necessary to catch &lt;code&gt;ServiceConfigurationError&lt;/code&gt; when using the iterator. If an error is thrown then subsequent invocations of the iterator will make a best effort to locate and instantiate the next available provider, but in general such recovery cannot be guaranteed.</target>
        </trans-unit>
        <trans-unit id="4a36173cb289a14da668f4851982702ec5e661c1" translate="yes" xml:space="preserve">
          <source>To achieve laziness the actual work of locating providers is done when processing the stream. If a service provider cannot be loaded for any of the reasons specified in the &lt;a href=&quot;#errors&quot;&gt;Errors&lt;/a&gt; section above then &lt;a href=&quot;serviceconfigurationerror&quot;&gt;&lt;code&gt;ServiceConfigurationError&lt;/code&gt;&lt;/a&gt; is thrown by whatever method caused the service provider to be loaded.</source>
          <target state="translated">To achieve laziness the actual work of locating providers is done when processing the stream. If a service provider cannot be loaded for any of the reasons specified in the &lt;a href=&quot;#errors&quot;&gt;Errors&lt;/a&gt; section above then &lt;a href=&quot;serviceconfigurationerror&quot;&gt; &lt;code&gt;ServiceConfigurationError&lt;/code&gt; &lt;/a&gt; is thrown by whatever method caused the service provider to be loaded.</target>
        </trans-unit>
        <trans-unit id="2e64d08ea8166d722ce0f8580516aea74cb7327d" translate="yes" xml:space="preserve">
          <source>To achieve laziness the actual work of parsing the available provider-configuration files and instantiating providers must be done by the iterator itself. Its &lt;a href=&quot;iterator#hasNext--&quot;&gt;&lt;code&gt;hasNext&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;iterator#next--&quot;&gt;&lt;code&gt;next&lt;/code&gt;&lt;/a&gt; methods can therefore throw a &lt;a href=&quot;serviceconfigurationerror&quot;&gt;&lt;code&gt;ServiceConfigurationError&lt;/code&gt;&lt;/a&gt; if a provider-configuration file violates the specified format, or if it names a provider class that cannot be found and instantiated, or if the result of instantiating the class is not assignable to the service type, or if any other kind of exception or error is thrown as the next provider is located and instantiated. To write robust code it is only necessary to catch &lt;a href=&quot;serviceconfigurationerror&quot;&gt;&lt;code&gt;ServiceConfigurationError&lt;/code&gt;&lt;/a&gt; when using a service iterator.</source>
          <target state="translated">게으름을 얻으려면 사용 가능한 공급자 구성 파일을 구문 분석하고 공급자를 인스턴스화하는 실제 작업은 반복자 자체에서 수행해야합니다. 그 &lt;a href=&quot;iterator#hasNext--&quot;&gt; &lt;code&gt;hasNext&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;iterator#next--&quot;&gt; &lt;code&gt;next&lt;/code&gt; &lt;/a&gt; 방법을 따라서 던질 수있는 &lt;a href=&quot;serviceconfigurationerror&quot;&gt; &lt;code&gt;ServiceConfigurationError&lt;/code&gt; &lt;/a&gt; 바이더 구성 파일이 지정된 형식을 위반하는 경우, 또는이 이름이 클래스의 인스턴스의 결과가 서비스 유형에 할당 할 수없는 경우 발견하고 인스턴스화, 또는 할 수없는 프로 바이더 클래스를하는 경우 또는 다음 공급자를 찾아 인스턴스화 할 때 다른 종류의 예외 나 오류가 발생하는 경우. 강력한 코드를 작성하려면 서비스 반복기를 사용할 때 &lt;a href=&quot;serviceconfigurationerror&quot;&gt; &lt;code&gt;ServiceConfigurationError&lt;/code&gt; &lt;/a&gt; 를 잡아야 합니다.</target>
        </trans-unit>
        <trans-unit id="f660f1fdf02f0b0c53d2e6bfb4da162ba2db350d" translate="yes" xml:space="preserve">
          <source>To add a border around the main viewport, you can use &lt;code&gt;setViewportBorder&lt;/code&gt;. (Of course, you can also add a border around the whole scroll pane using &lt;code&gt;setBorder&lt;/code&gt;.)</source>
          <target state="translated">To add a border around the main viewport, you can use &lt;code&gt;setViewportBorder&lt;/code&gt; . (Of course, you can also add a border around the whole scroll pane using &lt;code&gt;setBorder&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="588767c38b0b444c375dc69fcf2cc26802572150" translate="yes" xml:space="preserve">
          <source>To add a column to this &lt;code&gt;JTable&lt;/code&gt; to display the &lt;code&gt;modelColumn&lt;/code&gt;'th column of data in the model with a given &lt;code&gt;width&lt;/code&gt;, &lt;code&gt;cellRenderer&lt;/code&gt;, and &lt;code&gt;cellEditor&lt;/code&gt; you can use:</source>
          <target state="translated">To add a column to this &lt;code&gt;JTable&lt;/code&gt; to display the &lt;code&gt;modelColumn&lt;/code&gt; 'th column of data in the model with a given &lt;code&gt;width&lt;/code&gt; , &lt;code&gt;cellRenderer&lt;/code&gt; , and &lt;code&gt;cellEditor&lt;/code&gt; you can use:</target>
        </trans-unit>
        <trans-unit id="863cc423d428bb677b96e6a9d670999f85be2783" translate="yes" xml:space="preserve">
          <source>To add a coordinate transform, use the &lt;code&gt;transform&lt;/code&gt;, &lt;code&gt;rotate&lt;/code&gt;, &lt;code&gt;scale&lt;/code&gt;, or &lt;code&gt;shear&lt;/code&gt; methods. The &lt;code&gt;setTransform&lt;/code&gt; method is intended only for restoring the original &lt;code&gt;Graphics2D&lt;/code&gt; transform after rendering, as shown in this example:</source>
          <target state="translated">To add a coordinate transform, use the &lt;code&gt;transform&lt;/code&gt; , &lt;code&gt;rotate&lt;/code&gt; , &lt;code&gt;scale&lt;/code&gt; , or &lt;code&gt;shear&lt;/code&gt; methods. The &lt;code&gt;setTransform&lt;/code&gt; method is intended only for restoring the original &lt;code&gt;Graphics2D&lt;/code&gt; transform after rendering, as shown in this example:</target>
        </trans-unit>
        <trans-unit id="e906cc18369f863dd230411fdde5ac28d756e1c8" translate="yes" xml:space="preserve">
          <source>To add a new attribute node with a qualified name and namespace URI, use the &lt;code&gt;setAttributeNodeNS&lt;/code&gt; method.</source>
          <target state="translated">규정 된 이름과 네임 스페이스 URI를 사용하여 새 속성 노드를 추가하려면 &lt;code&gt;setAttributeNodeNS&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="dff0f41b75b6bfc32af4b34fb312dcecad708cec" translate="yes" xml:space="preserve">
          <source>To add components to the &lt;code&gt;JRootPane&lt;/code&gt; (other than the optional menu bar), you add the object to the &lt;code&gt;contentPane&lt;/code&gt; of the &lt;code&gt;JRootPane&lt;/code&gt;, like this:</source>
          <target state="translated">To add components to the &lt;code&gt;JRootPane&lt;/code&gt; (other than the optional menu bar), you add the object to the &lt;code&gt;contentPane&lt;/code&gt; of the &lt;code&gt;JRootPane&lt;/code&gt; , like this:</target>
        </trans-unit>
        <trans-unit id="878ec0869f8701c9d2e6abc0d34c545132ce4951" translate="yes" xml:space="preserve">
          <source>To address this problem, and to simplify the design of clients providing multiple docs to a Print Job, every Print Service proxy that supports multidoc print jobs is required to access a &lt;code&gt;MultiDoc&lt;/code&gt; object using the interleaved pattern. That is, given a &lt;code&gt;MultiDoc&lt;/code&gt; object, the print service proxy will call &lt;a href=&quot;#getDoc()&quot;&gt;&lt;code&gt;getDoc()&lt;/code&gt;&lt;/a&gt; one or more times until it successfully obtains the current &lt;code&gt;Doc&lt;/code&gt; object. The print service proxy will then obtain the current doc's print data, not proceeding until all the print data is obtained or an unrecoverable error occurs. If it is able to continue, the print service proxy will then call &lt;a href=&quot;#next()&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; one or more times until it successfully obtains either the next &lt;code&gt;MultiDoc&lt;/code&gt; object or an indication that there are no more. An implementation of interface &lt;code&gt;MultiDoc&lt;/code&gt; can assume the print service proxy will follow this interleaved pattern; for any other pattern of usage, the &lt;code&gt;MultiDoc&lt;/code&gt; implementation's behavior is unspecified.</source>
          <target state="translated">To address this problem, and to simplify the design of clients providing multiple docs to a Print Job, every Print Service proxy that supports multidoc print jobs is required to access a &lt;code&gt;MultiDoc&lt;/code&gt; object using the interleaved pattern. That is, given a &lt;code&gt;MultiDoc&lt;/code&gt; object, the print service proxy will call &lt;a href=&quot;#getDoc()&quot;&gt; &lt;code&gt;getDoc()&lt;/code&gt; &lt;/a&gt; one or more times until it successfully obtains the current &lt;code&gt;Doc&lt;/code&gt; object. The print service proxy will then obtain the current doc's print data, not proceeding until all the print data is obtained or an unrecoverable error occurs. If it is able to continue, the print service proxy will then call &lt;a href=&quot;#next()&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt; one or more times until it successfully obtains either the next &lt;code&gt;MultiDoc&lt;/code&gt; object or an indication that there are no more. An implementation of interface &lt;code&gt;MultiDoc&lt;/code&gt; can assume the print service proxy will follow this interleaved pattern; for any other pattern of usage, the &lt;code&gt;MultiDoc&lt;/code&gt; implementation's behavior is unspecified.</target>
        </trans-unit>
        <trans-unit id="0901ef1364b0bc7003aefcc673f8da9f739ccaea" translate="yes" xml:space="preserve">
          <source>To address this problem, and to simplify the design of clients providing multiple docs to a Print Job, every Print Service proxy that supports multidoc print jobs is required to access a MultiDoc object using the interleaved pattern. That is, given a MultiDoc object, the print service proxy will call &lt;a href=&quot;multidoc#getDoc--&quot;&gt;&lt;code&gt;getDoc()&lt;/code&gt;&lt;/a&gt; one or more times until it successfully obtains the current Doc object. The print service proxy will then obtain the current doc's print data, not proceeding until all the print data is obtained or an unrecoverable error occurs. If it is able to continue, the print service proxy will then call &lt;a href=&quot;multidoc#next--&quot;&gt;&lt;code&gt;next()&lt;/code&gt;&lt;/a&gt; one or more times until it successfully obtains either the next MultiDoc object or an indication that there are no more. An implementation of interface MultiDoc can assume the print service proxy will follow this interleaved pattern; for any other pattern of usage, the MultiDoc implementation's behavior is unspecified.</source>
          <target state="translated">이 문제를 해결하고 인쇄 작업에 여러 문서를 제공하는 클라이언트의 설계를 단순화하기 위해, 다중 문서 인쇄 작업을 지원하는 모든 인쇄 서비스 프록시는 인터리브 패턴을 사용하여 MultiDoc 개체에 액세스해야합니다. 즉, MultiDoc 객체가 주어지면 인쇄 서비스 프록시는 현재 Doc 객체를 성공적으로 얻을 때까지 &lt;a href=&quot;multidoc#getDoc--&quot;&gt; &lt;code&gt;getDoc()&lt;/code&gt; &lt;/a&gt; 한 번 이상 호출 합니다. 그런 다음 인쇄 서비스 프록시는 모든 인쇄 데이터를 얻거나 복구 할 수없는 오류가 발생할 때까지 진행하지 않고 현재 문서의 인쇄 데이터를 얻습니다. 계속할 수 있으면 인쇄 서비스 프록시는 &lt;a href=&quot;multidoc#next--&quot;&gt; &lt;code&gt;next()&lt;/code&gt; &lt;/a&gt; 를 호출합니다.다음 MultiDoc 오브젝트를 얻거나 더 이상 존재하지 않음을 표시 할 때까지 한 번 이상. MultiDoc 인터페이스의 구현은 인쇄 서비스 프록시가이 인터리브 패턴을 따를 것이라고 가정 할 수 있습니다. 다른 사용 패턴의 경우 MultiDoc 구현의 동작은 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3114b61fabbaf8f1204ff4e332d1d6b4ad9fa1cd" translate="yes" xml:space="preserve">
          <source>To align elements along the baseline you &lt;code&gt;createBaselineGroup&lt;/code&gt;, or &lt;code&gt;createParallelGroup&lt;/code&gt; with an alignment of &lt;code&gt;BASELINE&lt;/code&gt;. If the group was not created with a baseline alignment, and you attempt to add an element specifying a baseline alignment, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">To align elements along the baseline you &lt;code&gt;createBaselineGroup&lt;/code&gt; , or &lt;code&gt;createParallelGroup&lt;/code&gt; with an alignment of &lt;code&gt;BASELINE&lt;/code&gt; . If the group was not created with a baseline alignment, and you attempt to add an element specifying a baseline alignment, an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="f7c5b88ac19ad6f7230d27dffbaf4dac3bda87a9" translate="yes" xml:space="preserve">
          <source>To allow attribute values to contain both single and double quotes, the apostrophe or single-quote character (') may be represented as &quot;&amp;amp;apos;&quot;, and the double-quote character (&quot;) as &quot;&amp;amp;quot;&quot;. New line characters and other characters that cannot be represented directly in attribute values in the output character encoding are serialized as a numeric character reference.</source>
          <target state="translated">To allow attribute values to contain both single and double quotes, the apostrophe or single-quote character (') may be represented as &quot;&amp;amp;apos;&quot;, and the double-quote character (&quot;) as &quot;&amp;amp;quot;&quot;. New line characters and other characters that cannot be represented directly in attribute values in the output character encoding are serialized as a numeric character reference.</target>
        </trans-unit>
        <trans-unit id="7a153e650f00cf6ae0dd2b8b108821031836e76a" translate="yes" xml:space="preserve">
          <source>To allow for concurrent handling of new connections, the completion handler is not invoked directly by the initiating thread when a new connection is accepted immediately (see &lt;a href=&quot;asynchronouschannelgroup#threading&quot;&gt;Threading&lt;/a&gt;).</source>
          <target state="translated">새 연결을 동시에 처리 할 수 ​​있도록 새 연결이 즉시 수락 될 때 시작 스레드가 완료 핸들러를 직접 호출하지 않습니다 ( &lt;a href=&quot;asynchronouschannelgroup#threading&quot;&gt;스레딩&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="73cb135d1c1301a310f6e0c2ffc775dacbe8133c" translate="yes" xml:space="preserve">
          <source>To allow for interoperability with existing code, a byte buffer view can be obtained from a memory segment (see &lt;a href=&quot;#asByteBuffer()&quot;&gt;&lt;code&gt;asByteBuffer()&lt;/code&gt;&lt;/a&gt;). This can be useful, for instance, for those clients that want to keep using the &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer&quot;&gt;&lt;code&gt;ByteBuffer&lt;/code&gt;&lt;/a&gt; API, but need to operate on large memory segments. Byte buffers obtained in such a way support the same spatial and temporal access restrictions associated to the memory segment from which they originated.</source>
          <target state="translated">기존 코드와의 상호 운용성을 허용하기 위해 메모리 세그먼트에서 바이트 버퍼 뷰를 얻을 수 있습니다 ( &lt;a href=&quot;#asByteBuffer()&quot;&gt; &lt;code&gt;asByteBuffer()&lt;/code&gt; &lt;/a&gt; 참조 ). 예를 들어 이는 &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer&quot;&gt; &lt;code&gt;ByteBuffer&lt;/code&gt; &lt;/a&gt; API 를 계속 사용하고 싶지만 대용량 메모리 세그먼트에서 작동해야하는 클라이언트에게 유용 할 수 있습니다 . 이러한 방식으로 얻은 바이트 버퍼는 원래 메모리 세그먼트와 관련된 동일한 공간 및 시간 액세스 제한을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="be5a74187e5d5e88e2eac45e5fd470fc826ba10d" translate="yes" xml:space="preserve">
          <source>To allow for upgrading/overriding of modules defined to the platform class loader, and where upgraded modules read modules defined to class loaders other than the platform class loader and its ancestors, then the platform class loader may have to delegate to other class loaders, the application class loader for example. In other words, classes in named modules defined to class loaders other than the platform class loader and its ancestors may be visible to the platform class loader.</source>
          <target state="translated">To allow for upgrading/overriding of modules defined to the platform class loader, and where upgraded modules read modules defined to class loaders other than the platform class loader and its ancestors, then the platform class loader may have to delegate to other class loaders, the application class loader for example. In other words, classes in named modules defined to class loaders other than the platform class loader and its ancestors may be visible to the platform class loader.</target>
        </trans-unit>
        <trans-unit id="b0149ec9554c159ccbe058966b05df35f3701f32" translate="yes" xml:space="preserve">
          <source>To allow subtypes of non-serializable classes to be serialized, the subtype may assume responsibility for saving and restoring the state of the supertype's public, protected, and (if accessible) package fields. The subtype may assume this responsibility only if the class it extends has an accessible no-arg constructor to initialize the class's state. It is an error to declare a class Serializable if this is not the case. The error will be detected at runtime.</source>
          <target state="translated">직렬화 할 수없는 클래스의 하위 유형을 직렬화하기 위해 하위 유형은 수퍼 유형의 공용, 보호 및 (액세스 가능한 경우) 패키지 필드의 상태를 저장하고 복원해야 할 책임이 있습니다. 서브 타입은 그것이 확장하는 클래스가 클래스의 상태를 초기화하기 위해 접근 가능한 no-arg 생성자를 가지고있는 경우에만이 책임을 맡을 수 있습니다. 그렇지 않은 경우 Serializable 클래스를 선언하는 것은 오류입니다. 런타임시 오류가 감지됩니다.</target>
        </trans-unit>
        <trans-unit id="04b02950d208e8aeb726121c4232fee22a90ca25" translate="yes" xml:space="preserve">
          <source>To allow the Relation Service to maintain the consistency (in case of MBean unregistration) and to be able to perform queries, this method must be called when a role is updated.</source>
          <target state="translated">관계 서비스가 일관성을 유지하고 (MBean 등록 취소의 경우) 쿼리를 수행 할 수있게하려면 역할이 업데이트 될 때이 메소드를 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="18f203586f552a8bf3e85ed2fd04ae6a1ec1b0c1" translate="yes" xml:space="preserve">
          <source>To assign a specific &lt;code&gt;ProtectionDomain&lt;/code&gt; to the class, use the &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/a&gt; method that takes a &lt;code&gt;ProtectionDomain&lt;/code&gt; as one of its arguments.</source>
          <target state="translated">To assign a specific &lt;code&gt;ProtectionDomain&lt;/code&gt; to the class, use the &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int,java.security.ProtectionDomain)&quot;&gt; &lt;code&gt;defineClass&lt;/code&gt; &lt;/a&gt; method that takes a &lt;code&gt;ProtectionDomain&lt;/code&gt; as one of its arguments.</target>
        </trans-unit>
        <trans-unit id="098cffcdc8ae98f9e73fb6b3bc4c693ece84d5b2" translate="yes" xml:space="preserve">
          <source>To assign a specific &lt;code&gt;ProtectionDomain&lt;/code&gt; to the class, use the &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-java.security.ProtectionDomain-&quot;&gt;&lt;code&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method that takes a &lt;code&gt;ProtectionDomain&lt;/code&gt; as one of its arguments.</source>
          <target state="translated">특정의 지정하려면 &lt;code&gt;ProtectionDomain&lt;/code&gt; 클래스에, 사용 &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-java.security.ProtectionDomain-&quot;&gt; &lt;code&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/code&gt; 는의&lt;/a&gt; 걸리는 방법 &lt;code&gt;ProtectionDomain&lt;/code&gt; 인수 중 하나입니다.</target>
        </trans-unit>
        <trans-unit id="cb62f55eef3213cfdfd6d6c4b5d133a0d8886c48" translate="yes" xml:space="preserve">
          <source>To attempt to retain the values of the fields, use &lt;a href=&quot;#atZoneSimilarLocal(java.time.ZoneId)&quot;&gt;&lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;#toZonedDateTime()&quot;&gt;&lt;code&gt;toZonedDateTime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To attempt to retain the values of the fields, use &lt;a href=&quot;#atZoneSimilarLocal(java.time.ZoneId)&quot;&gt; &lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt; &lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;#toZonedDateTime()&quot;&gt; &lt;code&gt;toZonedDateTime()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7963056aeb1e3fe7d72c198290f32b36c2c30f8b" translate="yes" xml:space="preserve">
          <source>To attempt to retain the values of the fields, use &lt;a href=&quot;offsetdatetime#atZoneSimilarLocal-java.time.ZoneId-&quot;&gt;&lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;offsetdatetime#toZonedDateTime--&quot;&gt;&lt;code&gt;toZonedDateTime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">필드 값을 유지하려면 &lt;a href=&quot;offsetdatetime#atZoneSimilarLocal-java.time.ZoneId-&quot;&gt; &lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt; &lt;/a&gt; . 영역 ID로 오프셋을 사용하려면 &lt;a href=&quot;offsetdatetime#toZonedDateTime--&quot;&gt; &lt;code&gt;toZonedDateTime()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c860b82be316c2ebd5b8042b5f2ae32cc26ebbd8" translate="yes" xml:space="preserve">
          <source>To avoid &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;, use the &lt;a href=&quot;#normalizeWith(java.util.Calendar)&quot;&gt;&lt;code&gt;normalizeWith(Calendar)&lt;/code&gt;&lt;/a&gt; method to remove the years and months fields.</source>
          <target state="translated">To avoid &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; &lt;/a&gt;, use the &lt;a href=&quot;#normalizeWith(java.util.Calendar)&quot;&gt; &lt;code&gt;normalizeWith(Calendar)&lt;/code&gt; &lt;/a&gt; method to remove the years and months fields.</target>
        </trans-unit>
        <trans-unit id="6ad427fbbb14d96dd25df6d7ec64c8e355ba9449" translate="yes" xml:space="preserve">
          <source>To avoid calling this method on an invalid string and having a &lt;code&gt;NumberFormatException&lt;/code&gt; be thrown, the documentation for &lt;a href=&quot;double#valueOf(java.lang.String)&quot;&gt;&lt;code&gt;Double.valueOf&lt;/code&gt;&lt;/a&gt; lists a regular expression which can be used to screen the input.</source>
          <target state="translated">To avoid calling this method on an invalid string and having a &lt;code&gt;NumberFormatException&lt;/code&gt; be thrown, the documentation for &lt;a href=&quot;double#valueOf(java.lang.String)&quot;&gt; &lt;code&gt;Double.valueOf&lt;/code&gt; &lt;/a&gt; lists a regular expression which can be used to screen the input.</target>
        </trans-unit>
        <trans-unit id="42d51c18a01968c9e81085024407b1e88d5039d3" translate="yes" xml:space="preserve">
          <source>To avoid calling this method on an invalid string and having a &lt;code&gt;NumberFormatException&lt;/code&gt; be thrown, the documentation for &lt;a href=&quot;double#valueOf-java.lang.String-&quot;&gt;&lt;code&gt;Double.valueOf&lt;/code&gt;&lt;/a&gt; lists a regular expression which can be used to screen the input.</source>
          <target state="translated">유효하지 않은 문자열에서이 메소드를 호출하지 않고 &lt;code&gt;NumberFormatException&lt;/code&gt; 이 발생 하지 않도록하기 위해 &lt;a href=&quot;double#valueOf-java.lang.String-&quot;&gt; &lt;code&gt;Double.valueOf&lt;/code&gt; 에&lt;/a&gt; 대한 문서 에는 입력을 선별하는 데 사용할 수있는 정규식이 나열되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="5563f0afb09a3844b6d08118ec1a1c5fc780d991" translate="yes" xml:space="preserve">
          <source>To avoid calling this method on an invalid string and having a &lt;code&gt;NumberFormatException&lt;/code&gt; be thrown, the regular expression below can be used to screen the input string:</source>
          <target state="translated">유효하지 않은 문자열에서이 메소드를 호출하지 않고 &lt;code&gt;NumberFormatException&lt;/code&gt; 이 발생 하지 않도록하기 위해 아래 정규식을 사용하여 입력 문자열을 스크리닝 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="668d902875e5660f744a686581109ccac6b67276" translate="yes" xml:space="preserve">
          <source>To avoid collisions between MBeans supplied by different vendors, a useful convention is to begin the domain name with the reverse DNS name of the organization that specifies the MBeans, followed by a period and a string whose interpretation is determined by that organization. For example, MBeans specified by &lt;code&gt;example.com&lt;/code&gt; would have domains such as &lt;code&gt;com.example.MyDomain&lt;/code&gt;. This is essentially the same convention as for Java-language package names.</source>
          <target state="translated">다른 벤더가 제공 한 MBean 간의 충돌을 피하려면 유용한 규칙은 도메인 이름을 MBean을 지정하는 조직의 역방향 DNS 이름으로 시작한 다음 마침표와 문자열이 해당 조직에 의해 결정됩니다. 예를 들어 &lt;code&gt;example.com&lt;/code&gt; 으로 지정된 MBean 에는 &lt;code&gt;com.example.MyDomain&lt;/code&gt; 과 같은 도메인이 있습니다 . 이것은 본질적으로 Java 언어 패키지 이름과 동일한 규칙입니다.</target>
        </trans-unit>
        <trans-unit id="b11ede55a71c6248b71e81342253042ee5847dea" translate="yes" xml:space="preserve">
          <source>To avoid infinite recursion, if the specified array contains itself as an element, or contains an indirect reference to itself through one or more levels of arrays, the self-reference is converted to the string &lt;code&gt;&quot;[...]&quot;&lt;/code&gt;. For example, an array containing only a reference to itself would be rendered as &lt;code&gt;&quot;[[...]]&quot;&lt;/code&gt;.</source>
          <target state="translated">무한 재귀를 피하기 위해, 지정된 배열 자체를 요소로 포함하거나 하나 이상의 배열 레벨을 통한 간접 참조를 포함하는 경우 자체 참조는 문자열 &lt;code&gt;&quot;[...]&quot;&lt;/code&gt; 로 변환됩니다 . 예를 들어, 자신에 대한 참조 만 포함하는 배열은 &lt;code&gt;&quot;[[...]]&quot;&lt;/code&gt; 로 렌더링됩니다 .</target>
        </trans-unit>
        <trans-unit id="eb9f7d7071e28faad12ca6077ede6939f3bbcb22" translate="yes" xml:space="preserve">
          <source>To avoid race conditions, calls to &lt;code&gt;setTarget&lt;/code&gt; and &lt;code&gt;syncAll&lt;/code&gt; should generally be performed under some sort of mutual exclusion. Note that reader threads may observe an updated target as early as the &lt;code&gt;setTarget&lt;/code&gt; call that install the value (and before the &lt;code&gt;syncAll&lt;/code&gt; that confirms the value). On the other hand, reader threads may observe previous versions of the target until the &lt;code&gt;syncAll&lt;/code&gt; call returns (and after the &lt;code&gt;setTarget&lt;/code&gt; that attempts to convey the updated version).</source>
          <target state="translated">경쟁 조건을 피하려면 &lt;code&gt;setTarget&lt;/code&gt; 및 &lt;code&gt;syncAll&lt;/code&gt; 호출 은 일반적으로 일종의 상호 배제 하에서 수행되어야합니다. 판독기 스레드는 값을 설치하는 &lt;code&gt;setTarget&lt;/code&gt; 호출과 값 을 확인하는 &lt;code&gt;syncAll&lt;/code&gt; 전에 업데이트 된 대상을 관찰 할 수 있습니다 . 한편, 판독기 스레드는 &lt;code&gt;syncAll&lt;/code&gt; 호출이 리턴 될 때까지 (그리고 업데이트 된 버전을 전달하려는 &lt;code&gt;setTarget&lt;/code&gt; 이후) 대상의 이전 버전을 관찰 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2403bf2edea6a88cd7277e157f919db06ae3dfc9" translate="yes" xml:space="preserve">
          <source>To avoid subsequent errors, the contents of the class file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion()&quot;&gt;source version&lt;/a&gt; being used for this run.</source>
          <target state="translated">To avoid subsequent errors, the contents of the class file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion()&quot;&gt;source version&lt;/a&gt; being used for this run.</target>
        </trans-unit>
        <trans-unit id="0b2f4c173618b481634504b07869653ce32189fe" translate="yes" xml:space="preserve">
          <source>To avoid subsequent errors, the contents of the class file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion--&quot;&gt;source version&lt;/a&gt; being used for this run.</source>
          <target state="translated">후속 오류를 피하려면 클래스 파일의 내용 이이 실행에 사용되는 &lt;a href=&quot;processingenvironment#getSourceVersion--&quot;&gt;소스 버전&lt;/a&gt; 과 호환되어야 합니다.</target>
        </trans-unit>
        <trans-unit id="fbf4073a8f6efcb281074255c73dab8cf60b1111" translate="yes" xml:space="preserve">
          <source>To avoid subsequent errors, the contents of the source file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion()&quot;&gt;source version&lt;/a&gt; being used for this run.</source>
          <target state="translated">To avoid subsequent errors, the contents of the source file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion()&quot;&gt;source version&lt;/a&gt; being used for this run.</target>
        </trans-unit>
        <trans-unit id="1aceb19707e74a7f2174ca9ab49548d039860ecb" translate="yes" xml:space="preserve">
          <source>To avoid subsequent errors, the contents of the source file should be compatible with the &lt;a href=&quot;processingenvironment#getSourceVersion--&quot;&gt;source version&lt;/a&gt; being used for this run.</source>
          <target state="translated">후속 오류를 피하려면 소스 파일의 내용 이이 실행에 사용되는 &lt;a href=&quot;processingenvironment#getSourceVersion--&quot;&gt;소스 버전&lt;/a&gt; 과 호환되어야 합니다.</target>
        </trans-unit>
        <trans-unit id="dd2ae549da430ea87fa9d5dcde9da234390b02b0" translate="yes" xml:space="preserve">
          <source>To avoid these potential problems, this exception is thrown.</source>
          <target state="translated">이러한 잠재적 인 문제를 방지하기 위해이 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="dd35ab6a8c06d360cbb65355b85d9fbf1af619f6" translate="yes" xml:space="preserve">
          <source>To be added as a relation, the MBean must conform to the following:</source>
          <target state="translated">관계로 추가하려면 MBean이 다음을 준수해야합니다.</target>
        </trans-unit>
        <trans-unit id="369feee215b2d206e27e067d4a8327d9b7ec460b" translate="yes" xml:space="preserve">
          <source>To be compliant with the spec, the implementation is only required to support W3C XML Schema 1.0. However, if it chooses to support other schema languages listed here, it must conform to the relevant behaviors described in this spec.</source>
          <target state="translated">To be compliant with the spec, the implementation is only required to support W3C XML Schema 1.0. However, if it chooses to support other schema languages listed here, it must conform to the relevant behaviors described in this spec.</target>
        </trans-unit>
        <trans-unit id="bfee6b585f8f264404435c5e1eb3afcaa0fe2b44" translate="yes" xml:space="preserve">
          <source>To be functional, the filter should allow at least all the concrete types in the transitive closure of all objects that might get serialized when serializing all JMX classes referred as parameters in the &lt;a href=&quot;rmiconnection&quot;&gt;&lt;code&gt;RMIConnection&lt;/code&gt;&lt;/a&gt; interface, plus all classes that a &lt;a href=&quot;rmiconnector&quot;&gt;&lt;code&gt;client&lt;/code&gt;&lt;/a&gt; might need to transmit wrapped in &lt;a href=&quot;../../../../../java.rmi/java/rmi/marshalledobject&quot;&gt;marshalled objects&lt;/a&gt; in order to interoperate with the MBeans registered in the &lt;code&gt;MBeanServer&lt;/code&gt;. That would potentially include all the concrete &lt;a href=&quot;../../../../../java.management/javax/management/openmbean/package-summary&quot;&gt;JMX OpenTypes&lt;/a&gt; and the classes they use in their serial form.</source>
          <target state="translated">To be functional, the filter should allow at least all the concrete types in the transitive closure of all objects that might get serialized when serializing all JMX classes referred as parameters in the &lt;a href=&quot;rmiconnection&quot;&gt; &lt;code&gt;RMIConnection&lt;/code&gt; &lt;/a&gt; interface, plus all classes that a &lt;a href=&quot;rmiconnector&quot;&gt; &lt;code&gt;client&lt;/code&gt; &lt;/a&gt; might need to transmit wrapped in &lt;a href=&quot;../../../../../java.rmi/java/rmi/marshalledobject&quot;&gt;marshalled objects&lt;/a&gt; in order to interoperate with the MBeans registered in the &lt;code&gt;MBeanServer&lt;/code&gt; . That would potentially include all the concrete &lt;a href=&quot;../../../../../java.management/javax/management/openmbean/package-summary&quot;&gt;JMX OpenTypes&lt;/a&gt; and the classes they use in their serial form.</target>
        </trans-unit>
        <trans-unit id="c929685592eb7dd72839b0b7ddca865cf01e746f" translate="yes" xml:space="preserve">
          <source>To be handled as a relation, the &lt;code&gt;RelationSupport&lt;/code&gt; object has to be added to the Relation Service using the Relation Service method addRelation().</source>
          <target state="translated">관계로 처리하려면 &lt;code&gt;RelationSupport&lt;/code&gt; 오브젝트 addRelation ()을 사용하여 RelationSupport 오브젝트를 관계 서비스에 추가해야합니다.</target>
        </trans-unit>
        <trans-unit id="a748dd0e04f95aff698fcdef2145934fa8ff1739" translate="yes" xml:space="preserve">
          <source>To be implemented by a any class acting as a notification filter.</source>
          <target state="translated">알림 필터 역할을하는 모든 클래스에 의해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="0bea40cd4dd3d35083217eb1e5827a09e2816a62" translate="yes" xml:space="preserve">
          <source>To be implemented by a any class acting as a notification filter. It allows a registered notification listener to filter the notifications of interest.</source>
          <target state="translated">알림 필터 역할을하는 모든 클래스에 의해 구현됩니다. 등록 된 알림 리스너가 관심있는 알림을 필터링 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3fa1f94f9b6a662f59e0397dd2d57a3b1cf7527b" translate="yes" xml:space="preserve">
          <source>To be robust when running in different tool implementations, an annotation processor should have the following properties:</source>
          <target state="translated">다른 도구 구현에서 강력하게 실행하려면 주석 프로세서에 다음 속성이 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="7365d81ddb8a3e13e3c1703bdd0a47167098d97a" translate="yes" xml:space="preserve">
          <source>To be useful across a wide range of contexts, this class provides many adjustable parameters and extensibility hooks. However, programmers are urged to use the more convenient &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; factory methods &lt;a href=&quot;executors#newCachedThreadPool()&quot;&gt;&lt;code&gt;Executors.newCachedThreadPool()&lt;/code&gt;&lt;/a&gt; (unbounded thread pool, with automatic thread reclamation), &lt;a href=&quot;executors#newFixedThreadPool(int)&quot;&gt;&lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt;&lt;/a&gt; (fixed size thread pool) and &lt;a href=&quot;executors#newSingleThreadExecutor()&quot;&gt;&lt;code&gt;Executors.newSingleThreadExecutor()&lt;/code&gt;&lt;/a&gt; (single background thread), that preconfigure settings for the most common usage scenarios. Otherwise, use the following guide when manually configuring and tuning this class:</source>
          <target state="translated">To be useful across a wide range of contexts, this class provides many adjustable parameters and extensibility hooks. However, programmers are urged to use the more convenient &lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt; factory methods &lt;a href=&quot;executors#newCachedThreadPool()&quot;&gt; &lt;code&gt;Executors.newCachedThreadPool()&lt;/code&gt; &lt;/a&gt; (unbounded thread pool, with automatic thread reclamation), &lt;a href=&quot;executors#newFixedThreadPool(int)&quot;&gt; &lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt; &lt;/a&gt; (fixed size thread pool) and &lt;a href=&quot;executors#newSingleThreadExecutor()&quot;&gt; &lt;code&gt;Executors.newSingleThreadExecutor()&lt;/code&gt; &lt;/a&gt; (single background thread), that preconfigure settings for the most common usage scenarios. Otherwise, use the following guide when manually configuring and tuning this class:</target>
        </trans-unit>
        <trans-unit id="88dbdb72a8dc5710ba81907c1d505d6f93d8a007" translate="yes" xml:space="preserve">
          <source>To be useful across a wide range of contexts, this class provides many adjustable parameters and extensibility hooks. However, programmers are urged to use the more convenient &lt;a href=&quot;executors&quot;&gt;&lt;code&gt;Executors&lt;/code&gt;&lt;/a&gt; factory methods &lt;a href=&quot;executors#newCachedThreadPool--&quot;&gt;&lt;code&gt;Executors.newCachedThreadPool()&lt;/code&gt;&lt;/a&gt; (unbounded thread pool, with automatic thread reclamation), &lt;a href=&quot;executors#newFixedThreadPool-int-&quot;&gt;&lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt;&lt;/a&gt; (fixed size thread pool) and &lt;a href=&quot;executors#newSingleThreadExecutor--&quot;&gt;&lt;code&gt;Executors.newSingleThreadExecutor()&lt;/code&gt;&lt;/a&gt; (single background thread), that preconfigure settings for the most common usage scenarios. Otherwise, use the following guide when manually configuring and tuning this class:</source>
          <target state="translated">광범위한 컨텍스트에서 유용하도록이 클래스는 많은 조정 가능한 매개 변수 및 확장 성 후크를 제공합니다. 그러나 프로그래머는보다 편리한 &lt;a href=&quot;executors&quot;&gt; &lt;code&gt;Executors&lt;/code&gt; &lt;/a&gt; 팩토리 메소드 인 &lt;a href=&quot;executors#newCachedThreadPool--&quot;&gt; &lt;code&gt;Executors.newCachedThreadPool()&lt;/code&gt; &lt;/a&gt; (자동 스레드 교정이있는 언 바운드 스레드 풀), &lt;a href=&quot;executors#newFixedThreadPool-int-&quot;&gt; &lt;code&gt;Executors.newFixedThreadPool(int)&lt;/code&gt; &lt;/a&gt; (고정 크기 스레드 풀) 및 &lt;a href=&quot;executors#newSingleThreadExecutor--&quot;&gt; &lt;code&gt;Executors.newSingleThreadExecutor()&lt;/code&gt; &lt;/a&gt; (단일 백그라운드 ) 를 사용해야합니다. 가장 일반적인 사용 시나리오에 대한 설정을 사전 구성합니다. 그렇지 않으면이 클래스를 수동으로 구성하고 조정할 때 다음 안내서를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="2af1c11afc8cfc4b7a8797ee836b3f9f4ad2b42e" translate="yes" xml:space="preserve">
          <source>To be useful, an MBean must be registered in an &lt;em&gt;MBean Server&lt;/em&gt;. An MBean Server is a repository of MBeans. Usually the only access to the MBeans is through the MBean Server. In other words, code no longer accesses the Java object implementing the MBean directly, but instead accesses the MBean by name through the MBean Server. Each MBean has a unique name within the MBean Server, defined by the &lt;a href=&quot;objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">유용하려면 &lt;em&gt;MBean이 MBean Server에&lt;/em&gt; 등록되어 있어야합니다 . MBean 서버는 MBean의 저장소입니다. 일반적으로 MBean에 대한 유일한 액세스는 MBean 서버를 통한 것입니다. 즉, 코드는 더 이상 MBean을 직접 구현하는 Java 객체에 액세스하지 않고 대신 MBean 서버를 통해 이름으로 MBean에 액세스합니다. 각 MBean은 &lt;a href=&quot;objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt; 클래스에 의해 정의 된 MBean 서버 내에서 고유 한 이름을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="d7d65dc6887ac1dd59675099ed4d4af3e8a59cf9" translate="yes" xml:space="preserve">
          <source>To be valid, the local date-time must not be in a gap and the offset must match one of the valid offsets.</source>
          <target state="translated">유효하려면 로컬 날짜-시간이 차이가 없어야하며 오프셋이 유효한 오프셋 중 하나와 일치해야합니다.</target>
        </trans-unit>
        <trans-unit id="595d2bea644f826bf905ff99aa32537c17280ff0" translate="yes" xml:space="preserve">
          <source>To build a view of the model, one of the following strategies can be employed.</source>
          <target state="translated">To build a view of the model, one of the following strategies can be employed.</target>
        </trans-unit>
        <trans-unit id="54feb46700524af6a40f21fc6cd8b80d114ab55c" translate="yes" xml:space="preserve">
          <source>To cancel the remapping reload instrument &lt;code&gt;from&lt;/code&gt; by invoking one of &lt;a href=&quot;#loadInstrument(javax.sound.midi.Instrument)&quot;&gt;&lt;code&gt;loadInstrument(javax.sound.midi.Instrument)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#loadInstruments(javax.sound.midi.Soundbank,javax.sound.midi.Patch%5B%5D)&quot;&gt;&lt;code&gt;loadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#loadAllInstruments(javax.sound.midi.Soundbank)&quot;&gt;&lt;code&gt;loadAllInstruments(javax.sound.midi.Soundbank)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To cancel the remapping reload instrument &lt;code&gt;from&lt;/code&gt; by invoking one of &lt;a href=&quot;#loadInstrument(javax.sound.midi.Instrument)&quot;&gt; &lt;code&gt;loadInstrument(javax.sound.midi.Instrument)&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;#loadInstruments(javax.sound.midi.Soundbank,javax.sound.midi.Patch%5B%5D)&quot;&gt; &lt;code&gt;loadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#loadAllInstruments(javax.sound.midi.Soundbank)&quot;&gt; &lt;code&gt;loadAllInstruments(javax.sound.midi.Soundbank)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="4d1dda8f60be6ccdd68366fa5b3526dbaaf5e344" translate="yes" xml:space="preserve">
          <source>To cancel the remapping reload instrument &lt;code&gt;from&lt;/code&gt; by invoking one of &lt;a href=&quot;synthesizer#loadInstrument-javax.sound.midi.Instrument-&quot;&gt;&lt;code&gt;loadInstrument(javax.sound.midi.Instrument)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;synthesizer#loadInstruments-javax.sound.midi.Soundbank-javax.sound.midi.Patch:A-&quot;&gt;&lt;code&gt;loadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;synthesizer#loadAllInstruments-javax.sound.midi.Soundbank-&quot;&gt;&lt;code&gt;loadAllInstruments(javax.sound.midi.Soundbank)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">리 맵핑기구를 장전 취소 &lt;code&gt;from&lt;/code&gt; 하나 호출하여 &lt;a href=&quot;synthesizer#loadInstrument-javax.sound.midi.Instrument-&quot;&gt; &lt;code&gt;loadInstrument(javax.sound.midi.Instrument)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;synthesizer#loadInstruments-javax.sound.midi.Soundbank-javax.sound.midi.Patch:A-&quot;&gt; &lt;code&gt;loadInstruments(javax.sound.midi.Soundbank, javax.sound.midi.Patch[])&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;synthesizer#loadAllInstruments-javax.sound.midi.Soundbank-&quot;&gt; &lt;code&gt;loadAllInstruments(javax.sound.midi.Soundbank)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3c755469e1f8e95c5db1f4257371feede4267c06" translate="yes" xml:space="preserve">
          <source>To change the offset while keeping the local time, use &lt;a href=&quot;#withZoneSameLocal(java.time.ZoneId)&quot;&gt;&lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To change the offset while keeping the local time, use &lt;a href=&quot;#withZoneSameLocal(java.time.ZoneId)&quot;&gt; &lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9be8336b7115a72362232acff67cab5d31ad64ab" translate="yes" xml:space="preserve">
          <source>To change the offset while keeping the local time, use &lt;a href=&quot;chronozoneddatetime#withZoneSameLocal-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현지 시간을 유지하면서 오프셋을 변경하려면 &lt;a href=&quot;chronozoneddatetime#withZoneSameLocal-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="ba22c3c91be7bb4a1b614e70312b432e314453d5" translate="yes" xml:space="preserve">
          <source>To change the offset while keeping the local time, use &lt;a href=&quot;zoneddatetime#withZoneSameLocal-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현지 시간을 유지하면서 오프셋을 변경하려면 &lt;a href=&quot;zoneddatetime#withZoneSameLocal-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZoneSameLocal(ZoneId)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="28e48054f0c3e60dffb2e6a36bf0cd3e64b7398f" translate="yes" xml:space="preserve">
          <source>To change the offset without adjusting the local time use &lt;a href=&quot;#withOffsetSameLocal(java.time.ZoneOffset)&quot;&gt;&lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To change the offset without adjusting the local time use &lt;a href=&quot;#withOffsetSameLocal(java.time.ZoneOffset)&quot;&gt; &lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="3fec9c95a4da51399394703581f182ba52a20925" translate="yes" xml:space="preserve">
          <source>To change the offset without adjusting the local time use &lt;a href=&quot;offsetdatetime#withOffsetSameLocal-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현지 시간을 조정하지 않고 오프셋을 변경하려면 &lt;a href=&quot;offsetdatetime#withOffsetSameLocal-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7a8364aad1736c04d486c11667371207fe4ea657" translate="yes" xml:space="preserve">
          <source>To change the offset without adjusting the local time use &lt;a href=&quot;offsettime#withOffsetSameLocal-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현지 시간을 조정하지 않고 오프셋을 변경하려면 &lt;a href=&quot;offsettime#withOffsetSameLocal-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;withOffsetSameLocal(java.time.ZoneOffset)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="147c0b430daa82e45aff80a01b0bd18d8fedb718" translate="yes" xml:space="preserve">
          <source>To change the returned value it is necessary to set the &lt;code&gt;sun.awt.enableExtraMouseButtons&lt;/code&gt; property before the &lt;code&gt;Toolkit&lt;/code&gt; class initialization. This setting could be done on the application startup by the following command:</source>
          <target state="translated">To change the returned value it is necessary to set the &lt;code&gt;sun.awt.enableExtraMouseButtons&lt;/code&gt; property before the &lt;code&gt;Toolkit&lt;/code&gt; class initialization. This setting could be done on the application startup by the following command:</target>
        </trans-unit>
        <trans-unit id="624f42a2ec9597a5fa8bf860e5c53714b80e1ade" translate="yes" xml:space="preserve">
          <source>To change the zone and adjust the local date-time, use &lt;a href=&quot;#withZoneSameInstant(java.time.ZoneId)&quot;&gt;&lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To change the zone and adjust the local date-time, use &lt;a href=&quot;#withZoneSameInstant(java.time.ZoneId)&quot;&gt; &lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="54d53b327a76d23201fb03d673f3a5e3ba6d80dc" translate="yes" xml:space="preserve">
          <source>To change the zone and adjust the local date-time, use &lt;a href=&quot;chronozoneddatetime#withZoneSameInstant-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">영역을 변경하고 현지 날짜-시간을 조정하려면 &lt;a href=&quot;chronozoneddatetime#withZoneSameInstant-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d2bb8e9dce97fedd17ba93b900abfb561816c1a4" translate="yes" xml:space="preserve">
          <source>To change the zone and adjust the local date-time, use &lt;a href=&quot;zoneddatetime#withZoneSameInstant-java.time.ZoneId-&quot;&gt;&lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">영역을 변경하고 현지 날짜-시간을 조정하려면 &lt;a href=&quot;zoneddatetime#withZoneSameInstant-java.time.ZoneId-&quot;&gt; &lt;code&gt;withZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7e2c58b787e33fb2498ddf879b308c08f5de4333" translate="yes" xml:space="preserve">
          <source>To compare elapsed time against a timeout, use</source>
          <target state="translated">To compare elapsed time against a timeout, use</target>
        </trans-unit>
        <trans-unit id="c019e479f28fa520e4b25c1389f58c638560ba3a" translate="yes" xml:space="preserve">
          <source>To compare the dates of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, including dates in two different chronologies, use &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt;&lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">두 개의 다른 연대기 날짜를 포함하여 두 &lt;code&gt;TemporalAccessor&lt;/code&gt; 인스턴스 의 날짜를 비교하려면 &lt;a href=&quot;../temporal/chronofield#EPOCH_DAY&quot;&gt; &lt;code&gt;ChronoField.EPOCH_DAY&lt;/code&gt; &lt;/a&gt; 를 비교 자로 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="fe4f722fe3026ef77704c6c722d1dd4b2c998af4" translate="yes" xml:space="preserve">
          <source>To compare the underlying local time of two &lt;code&gt;TemporalAccessor&lt;/code&gt; instances, use &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt;&lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt;&lt;/a&gt; as a comparator.</source>
          <target state="translated">두 &lt;code&gt;TemporalAccessor&lt;/code&gt; 인스턴스 의 기본 로컬 시간을 비교하려면 &lt;a href=&quot;temporal/chronofield#NANO_OF_DAY&quot;&gt; &lt;code&gt;ChronoField.NANO_OF_DAY&lt;/code&gt; &lt;/a&gt; 를 비교 자로 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="245c4d91674938b9243301b17cdfbec11707bbd6" translate="yes" xml:space="preserve">
          <source>To compare two nanoTime values</source>
          <target state="translated">두 nanoTime 값을 비교하려면</target>
        </trans-unit>
        <trans-unit id="d78c279d229f78f77095561ee9065cfa4d49c959" translate="yes" xml:space="preserve">
          <source>To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest input stream's &lt;a href=&quot;#read()&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest input stream's &lt;a href=&quot;#read()&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; methods.</target>
        </trans-unit>
        <trans-unit id="db54c8f8a02c8d006edd754b51f4c637374eadf8" translate="yes" xml:space="preserve">
          <source>To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest input stream's &lt;a href=&quot;digestinputstream#read--&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">메시지 요약 계산을 완료하려면 이 요약 입력 스트림의 &lt;a href=&quot;digestinputstream#read--&quot;&gt; &lt;code&gt;read&lt;/code&gt; &lt;/a&gt; 메소드 중 하나를 호출 한 후 연관된 메시지 요약 에서 &lt;code&gt;digest&lt;/code&gt; 메소드 중 하나를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="39e64b299ba8072e1d29e749493f1e4a0a967d71" translate="yes" xml:space="preserve">
          <source>To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest output stream's &lt;a href=&quot;#write(int)&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest output stream's &lt;a href=&quot;#write(int)&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; methods.</target>
        </trans-unit>
        <trans-unit id="6ca822c9d032e884c819b5572500df5caeb9a899" translate="yes" xml:space="preserve">
          <source>To complete the message digest computation, call one of the &lt;code&gt;digest&lt;/code&gt; methods on the associated message digest after your calls to one of this digest output stream's &lt;a href=&quot;digestoutputstream#write-int-&quot;&gt;&lt;code&gt;write&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">메시지 요약 계산을 완료하려면 이 요약 출력 스트림의 &lt;a href=&quot;digestoutputstream#write-int-&quot;&gt; &lt;code&gt;write&lt;/code&gt; &lt;/a&gt; 메소드 중 하나를 호출 한 후 연관된 메시지 요약 에서 &lt;code&gt;digest&lt;/code&gt; 메소드 중 하나를 호출하십시오 .</target>
        </trans-unit>
        <trans-unit id="2842855a6f62843707f8d500baadc11f1c0ff16e" translate="yes" xml:space="preserve">
          <source>To completely reinitialize a configuration, an application can first call &lt;a href=&quot;#reset()&quot;&gt;&lt;code&gt;reset&lt;/code&gt;&lt;/a&gt; to fully remove the old configuration, followed by &lt;code&gt;updateConfiguration&lt;/code&gt; to initialize the new configuration.</source>
          <target state="translated">To completely reinitialize a configuration, an application can first call &lt;a href=&quot;#reset()&quot;&gt; &lt;code&gt;reset&lt;/code&gt; &lt;/a&gt; to fully remove the old configuration, followed by &lt;code&gt;updateConfiguration&lt;/code&gt; to initialize the new configuration.</target>
        </trans-unit>
        <trans-unit id="1ab7339ad50ef1a66106e4edb66c156331356176" translate="yes" xml:space="preserve">
          <source>To compute the return value's &lt;code&gt;TimeZone&lt;/code&gt; field,</source>
          <target state="translated">To compute the return value's &lt;code&gt;TimeZone&lt;/code&gt; field,</target>
        </trans-unit>
        <trans-unit id="3f9547964c2738ed3c0c39daef4a026c54f8594a" translate="yes" xml:space="preserve">
          <source>To conform with the definition of SQL &lt;code&gt;DATE&lt;/code&gt;, the millisecond values wrapped by a &lt;code&gt;java.sql.Date&lt;/code&gt; instance must be 'normalized' by setting the hours, minutes, seconds, and milliseconds to zero in the particular time zone with which the instance is associated.</source>
          <target state="translated">To conform with the definition of SQL &lt;code&gt;DATE&lt;/code&gt; , the millisecond values wrapped by a &lt;code&gt;java.sql.Date&lt;/code&gt; instance must be 'normalized' by setting the hours, minutes, seconds, and milliseconds to zero in the particular time zone with which the instance is associated.</target>
        </trans-unit>
        <trans-unit id="adf07d8e8c9cb7ddafb1c87b428791695f534b6e" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtCompleted attribute. To convert a &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; attribute.</source>
          <target state="translated">To construct a &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object to construct the DateTimeAtCompleted attribute. To convert a &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; from the &lt;code&gt;DateTimeAtCompleted&lt;/code&gt; attribute.</target>
        </trans-unit>
        <trans-unit id="441fb7b971ccd667f32f69486a486691e495eadd" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;DateTimeAtCreation&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtCreation attribute. To convert a &lt;code&gt;DateTimeAtCreation&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the &lt;code&gt;DateTimeAtCreation&lt;/code&gt; attribute.</source>
          <target state="translated">To construct a &lt;code&gt;DateTimeAtCreation&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object to construct the DateTimeAtCreation attribute. To convert a &lt;code&gt;DateTimeAtCreation&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; from the &lt;code&gt;DateTimeAtCreation&lt;/code&gt; attribute.</target>
        </trans-unit>
        <trans-unit id="286b9b18c7f4ba8aa3dfde3d3505bcf887aed71a" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtProcessing attribute. To convert a &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; attribute.</source>
          <target state="translated">To construct a &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object to construct the DateTimeAtProcessing attribute. To convert a &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; from the &lt;code&gt;DateTimeAtProcessing&lt;/code&gt; attribute.</target>
        </trans-unit>
        <trans-unit id="a2d2e3b87007882e866b73b9b88a688504813bb1" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute. To convert a &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute.</source>
          <target state="translated">To construct a &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object to construct a &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object, then use the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; object to construct the &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute. To convert a &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../../java.base/java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../../java.base/java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; from the &lt;code&gt;JobHoldUntil&lt;/code&gt; attribute.</target>
        </trans-unit>
        <trans-unit id="4e85b1ac5bb1ea53e984d6388f99052847f6c694" translate="yes" xml:space="preserve">
          <source>To construct a &lt;code&gt;SimpleTimeZone&lt;/code&gt; with a daylight saving time schedule, the schedule can be described with a set of rules, &lt;em&gt;start-rule&lt;/em&gt; and &lt;em&gt;end-rule&lt;/em&gt;. A day when daylight saving time starts or ends is specified by a combination of &lt;em&gt;month&lt;/em&gt;, &lt;em&gt;day-of-month&lt;/em&gt;, and &lt;em&gt;day-of-week&lt;/em&gt; values. The &lt;em&gt;month&lt;/em&gt; value is represented by a Calendar &lt;a href=&quot;calendar#MONTH&quot;&gt;&lt;code&gt;MONTH&lt;/code&gt;&lt;/a&gt; field value, such as &lt;a href=&quot;calendar#MARCH&quot;&gt;&lt;code&gt;Calendar.MARCH&lt;/code&gt;&lt;/a&gt;. The &lt;em&gt;day-of-week&lt;/em&gt; value is represented by a Calendar &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt;&lt;code&gt;DAY_OF_WEEK&lt;/code&gt;&lt;/a&gt; value, such as &lt;a href=&quot;calendar#SUNDAY&quot;&gt;&lt;code&gt;SUNDAY&lt;/code&gt;&lt;/a&gt;. The meanings of value combinations are as follows.</source>
          <target state="translated">일광 절약 시간제 스케줄 로 &lt;code&gt;SimpleTimeZone&lt;/code&gt; 을 구성하기 위해 스케줄, &lt;em&gt;시작 규칙&lt;/em&gt; 및 &lt;em&gt;종료&lt;/em&gt; 규칙 세트로 스케줄을 설명 할 수 있습니다 . 일광 절약 시간 제가 시작되거나 끝나는 &lt;em&gt;요일&lt;/em&gt; 은 &lt;em&gt;month&lt;/em&gt; , &lt;em&gt;day-of-month&lt;/em&gt; 및 &lt;em&gt;day-of-week&lt;/em&gt; 값 의 조합으로 지정됩니다 . &lt;em&gt;개월의&lt;/em&gt; 값은 달력에 의해 표현되는 &lt;a href=&quot;calendar#MONTH&quot;&gt; &lt;code&gt;MONTH&lt;/code&gt; &lt;/a&gt; 다음과 같은 필드 값, &lt;a href=&quot;calendar#MARCH&quot;&gt; &lt;code&gt;Calendar.MARCH&lt;/code&gt; &lt;/a&gt; . &lt;em&gt;요일&lt;/em&gt; 값은 달력에 의해 표현된다 &lt;a href=&quot;calendar#DAY_OF_WEEK&quot;&gt; &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; 에&lt;/a&gt; 같은 값, &lt;a href=&quot;calendar#SUNDAY&quot;&gt; &lt;code&gt;SUNDAY&lt;/code&gt; &lt;/a&gt; . 값 조합의 의미는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="25bcc41bb9be6142d4b382a35be675feb6b382ec" translate="yes" xml:space="preserve">
          <source>To construct a DateTimeAtCompleted attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtCompleted attribute. To convert a DateTimeAtCompleted attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the DateTimeAtCompleted attribute.</source>
          <target state="translated">년, 월, 일,시, 분 등의 별도 값에서 DateTimeAtCompleted 속성을 구성하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 사용하여 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 구성한 다음 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 사용 하여 DateTimeAtCompleted 속성을 구성하십시오. DateTimeAtCompleted 속성을 년, 월, 일,시, 분 등의 값으로 분리하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 만들고 DateTimeAtCompleted 속성에서 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; 로&lt;/a&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="fa286d2c9331083538f7b2483ba40d01066c7be7" translate="yes" xml:space="preserve">
          <source>To construct a DateTimeAtCreation attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtCreation attribute. To convert a DateTimeAtCreation attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the DateTimeAtCreation attribute.</source>
          <target state="translated">년, 월, 일,시, 분 등의 별도 값에서 DateTimeAtCreation 속성을 구성하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 사용하여 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 구성한 다음 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 사용 하여 DateTimeAtCreation 속성을 구성하십시오. DateTimeAtCreation 속성을 년, 월, 일,시, 분 등의 별도 값으로 변환하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 만들고 DateTimeAtCreation 속성에서 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; 로&lt;/a&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="74dd642a97b53fdc97dc32a69febd07a2a41f613" translate="yes" xml:space="preserve">
          <source>To construct a DateTimeAtProcessing attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the DateTimeAtProcessing attribute. To convert a DateTimeAtProcessing attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the DateTimeAtProcessing attribute.</source>
          <target state="translated">년, 월, 일,시, 분 등의 별도 값에서 DateTimeAtProcessing 속성을 구성하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 사용하여 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 구성한 다음 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 사용 하여 DateTimeAtProcessing 속성을 구성하십시오. DateTimeAtProcessing 속성을 년, 월, 일,시, 분 등의 별도 값으로 변환하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 만들고 DateTimeAtProcessing 속성에서 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; 로&lt;/a&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="d51e72cb883d367f9e951d82f4b8bfada0f7edfe" translate="yes" xml:space="preserve">
          <source>To construct a JobHoldUntil attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object to construct a &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object, then use the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; object to construct the JobHoldUntil attribute. To convert a JobHoldUntil attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;a href=&quot;../../../../java/util/calendar&quot;&gt;&lt;code&gt;Calendar&lt;/code&gt;&lt;/a&gt; object and set it to the &lt;a href=&quot;../../../../java/util/date&quot;&gt;&lt;code&gt;Date&lt;/code&gt;&lt;/a&gt; from the JobHoldUntil attribute.</source>
          <target state="translated">년, 월, 일,시, 분 등의 별도 값에서 JobHoldUntil 속성을 구성하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 사용하여 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 구성한 다음 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; &lt;/a&gt; 객체를 사용 하여 JobHoldUntil 속성을 구성하십시오. JobHoldUntil 속성을 년, 월, 일,시, 분 등의 별도 값으로 변환하려면 &lt;a href=&quot;../../../../java/util/calendar&quot;&gt; &lt;code&gt;Calendar&lt;/code&gt; &lt;/a&gt; 객체를 만들고 JobHoldUntil 속성에서 &lt;a href=&quot;../../../../java/util/date&quot;&gt; &lt;code&gt;Date&lt;/code&gt; 로&lt;/a&gt; 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="69c0b94087d4d39699cf7eb51758827f396e268e" translate="yes" xml:space="preserve">
          <source>To construct a date-time attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;code&gt;java.util.Calendar&lt;/code&gt; object to construct a &lt;code&gt;java.util.Date&lt;/code&gt; object, then use the &lt;code&gt;java.util.Date&lt;/code&gt; object to construct the date-time attribute. To convert a date-time attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;code&gt;java.util.Calendar&lt;/code&gt; object and set it to the &lt;code&gt;java.util.Date&lt;/code&gt; from the date-time attribute. Class &lt;code&gt;DateTimeSyntax&lt;/code&gt; stores its value in the form of a &lt;code&gt;java.util.Date&lt;/code&gt; rather than a &lt;code&gt;java.util.Calendar&lt;/code&gt; because it typically takes less memory to store and less time to compare a &lt;code&gt;java.util.Date&lt;/code&gt; than a &lt;code&gt;java.util.Calendar&lt;/code&gt;.</source>
          <target state="translated">To construct a date-time attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;code&gt;java.util.Calendar&lt;/code&gt; object to construct a &lt;code&gt;java.util.Date&lt;/code&gt; object, then use the &lt;code&gt;java.util.Date&lt;/code&gt; object to construct the date-time attribute. To convert a date-time attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;code&gt;java.util.Calendar&lt;/code&gt; object and set it to the &lt;code&gt;java.util.Date&lt;/code&gt; from the date-time attribute. Class &lt;code&gt;DateTimeSyntax&lt;/code&gt; stores its value in the form of a &lt;code&gt;java.util.Date&lt;/code&gt; rather than a &lt;code&gt;java.util.Calendar&lt;/code&gt; because it typically takes less memory to store and less time to compare a &lt;code&gt;java.util.Date&lt;/code&gt; than a &lt;code&gt;java.util.Calendar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db92a2c6c7f08bf559d61fcd335d1b352eb04511" translate="yes" xml:space="preserve">
          <source>To construct a date-time attribute from separate values of the year, month, day, hour, minute, and so on, use a &lt;code&gt;java.util.Calendar&lt;/code&gt; object to construct a &lt;code&gt;java.util.Date&lt;/code&gt; object, then use the &lt;code&gt;java.util.Date&lt;/code&gt; object to construct the date-time attribute. To convert a date-time attribute to separate values of the year, month, day, hour, minute, and so on, create a &lt;code&gt;java.util.Calendar&lt;/code&gt; object and set it to the &lt;code&gt;java.util.Date&lt;/code&gt; from the date-time attribute. Class DateTimeSyntax stores its value in the form of a &lt;code&gt;java.util.Date
 &lt;/code&gt; rather than a &lt;code&gt;java.util.Calendar&lt;/code&gt; because it typically takes less memory to store and less time to compare a &lt;code&gt;java.util.Date&lt;/code&gt; than a &lt;code&gt;java.util.Calendar&lt;/code&gt;.</source>
          <target state="translated">등등 년, 월, 일,시, 분 등 개개의 값으로부터 일자와 시각 속성을 구축하고하려면 사용 &lt;code&gt;java.util.Calendar&lt;/code&gt; 구성하는 객체를 &lt;code&gt;java.util.Date&lt;/code&gt; 의 다음 사용하여 객체를 &lt;code&gt;java.util.Date&lt;/code&gt; 객체는 일자와 시각 속성을 구축합니다. 날짜-시간 속성을 년, 월, 일,시, 분 등의 값으로 분리하려면 &lt;code&gt;java.util.Calendar&lt;/code&gt; 오브젝트를 작성 하고 날짜-시간 속성에서 &lt;code&gt;java.util.Date&lt;/code&gt; 로 설정하십시오. . DateTimeSyntax 클래스는의 형태로 그 값을 저장 &lt;code&gt;java.util.Date &lt;/code&gt; 보다는 &lt;code&gt;java.util.Calendar&lt;/code&gt; 의 는 일반적으로 저장하고 비교하는 더 적은 시간에 더 적은 메모리 걸리기 때문에 &lt;code&gt;java.util.Date&lt;/code&gt; 를 &lt;code&gt;java.util.Calendar&lt;/code&gt; 보다 .</target>
        </trans-unit>
        <trans-unit id="087aae889fb70843b3991a318cba4a5735f9cb01" translate="yes" xml:space="preserve">
          <source>To continue the operation, the client program should re-invoke the method using the same arguments as the original invocation.</source>
          <target state="translated">작업을 계속하려면 클라이언트 프로그램이 원래 호출과 동일한 인수를 사용하여 메소드를 다시 호출해야합니다.</target>
        </trans-unit>
        <trans-unit id="e7a3e03976d269ce626f879a0166b160687d59f1" translate="yes" xml:space="preserve">
          <source>To control receiving of messages, a WebSocket maintains an &lt;a id=&quot;counter&quot;&gt;internal counter&lt;/a&gt;. This counter's value is a number of times the WebSocket has yet to invoke a receive method. While this counter is zero the WebSocket does not invoke receive methods. The counter is incremented by &lt;code&gt;n&lt;/code&gt; when &lt;code&gt;request(n)&lt;/code&gt; is called. The counter is decremented by one when the WebSocket invokes a receive method. &lt;code&gt;onOpen&lt;/code&gt; and &lt;code&gt;onError&lt;/code&gt; are not receive methods. WebSocket invokes &lt;code&gt;onOpen&lt;/code&gt; prior to any other methods on the listener. WebSocket invokes &lt;code&gt;onOpen&lt;/code&gt; at most once. WebSocket may invoke &lt;code&gt;onError&lt;/code&gt; at any given time. If the WebSocket invokes &lt;code&gt;onError&lt;/code&gt; or &lt;code&gt;onClose&lt;/code&gt;, then no further listener's methods will be invoked, no matter the value of the counter. For a newly built WebSocket the counter is zero.</source>
          <target state="translated">To control receiving of messages, a WebSocket maintains an &lt;a id=&quot;counter&quot;&gt;internal counter&lt;/a&gt;. This counter's value is a number of times the WebSocket has yet to invoke a receive method. While this counter is zero the WebSocket does not invoke receive methods. The counter is incremented by &lt;code&gt;n&lt;/code&gt; when &lt;code&gt;request(n)&lt;/code&gt; is called. The counter is decremented by one when the WebSocket invokes a receive method. &lt;code&gt;onOpen&lt;/code&gt; and &lt;code&gt;onError&lt;/code&gt; are not receive methods. WebSocket invokes &lt;code&gt;onOpen&lt;/code&gt; prior to any other methods on the listener. WebSocket invokes &lt;code&gt;onOpen&lt;/code&gt; at most once. WebSocket may invoke &lt;code&gt;onError&lt;/code&gt; at any given time. If the WebSocket invokes &lt;code&gt;onError&lt;/code&gt; or &lt;code&gt;onClose&lt;/code&gt; , then no further listener's methods will be invoked, no matter the value of the counter. For a newly built WebSocket the counter is zero.</target>
        </trans-unit>
        <trans-unit id="2d00134949b777561f41d071da4934d3d23a9bc0" translate="yes" xml:space="preserve">
          <source>To control the amount of recording data stored on disk, the maximum length of time to retain the data can be specified. Data stored on disk that is older than the specified length of time is removed by the Java Virtual Machine (JVM).</source>
          <target state="translated">디스크에 저장되는 기록 데이터의 양을 제어하기 위해 데이터를 보관할 수있는 최대 시간을 지정할 수 있습니다. 지정된 기간보다 오래된 디스크에 저장된 데이터는 JVM (Java Virtual Machine)에 의해 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="0070bd467d97aba3bbf124ba6a13b06eaafba9aa" translate="yes" xml:space="preserve">
          <source>To control the amount of recording data that is stored on disk, the maximum amount of data to retain can be specified. When the maximum limit is exceeded, the Java Virtual Machine (JVM) removes the oldest chunk to make room for a more recent chunk.</source>
          <target state="translated">디스크에 저장되는 기록 데이터의 양을 제어하기 위해 보관할 최대 데이터 양을 지정할 수 있습니다. 최대 제한을 초과하면 JVM (Java Virtual Machine)이 가장 오래된 청크를 제거하여 최신 청크를위한 공간을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="0cf80006582d17ab05fdb596ec329a7499abd75c" translate="yes" xml:space="preserve">
          <source>To control the time-zone used, see &lt;a href=&quot;#atZoneSameInstant(java.time.ZoneId)&quot;&gt;&lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#atZoneSimilarLocal(java.time.ZoneId)&quot;&gt;&lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To control the time-zone used, see &lt;a href=&quot;#atZoneSameInstant(java.time.ZoneId)&quot;&gt; &lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#atZoneSimilarLocal(java.time.ZoneId)&quot;&gt; &lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="23e44dbd2456435fa91cf79de7a65d5d719ff213" translate="yes" xml:space="preserve">
          <source>To control the time-zone used, see &lt;a href=&quot;offsetdatetime#atZoneSameInstant-java.time.ZoneId-&quot;&gt;&lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsetdatetime#atZoneSimilarLocal-java.time.ZoneId-&quot;&gt;&lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용 된 시간대를 제어하려면 &lt;a href=&quot;offsetdatetime#atZoneSameInstant-java.time.ZoneId-&quot;&gt; &lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;offsetdatetime#atZoneSimilarLocal-java.time.ZoneId-&quot;&gt; &lt;code&gt;atZoneSimilarLocal(ZoneId)&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="376d8c3e1efda9f05146c9c2cd711c194b274e43" translate="yes" xml:space="preserve">
          <source>To convert to a specific time in a given time-zone call &lt;a href=&quot;#atTime(java.time.LocalTime)&quot;&gt;&lt;code&gt;atTime(LocalTime)&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;localdatetime#atZone(java.time.ZoneId)&quot;&gt;&lt;code&gt;LocalDateTime.atZone(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To convert to a specific time in a given time-zone call &lt;a href=&quot;#atTime(java.time.LocalTime)&quot;&gt; &lt;code&gt;atTime(LocalTime)&lt;/code&gt; &lt;/a&gt; followed by &lt;a href=&quot;localdatetime#atZone(java.time.ZoneId)&quot;&gt; &lt;code&gt;LocalDateTime.atZone(ZoneId)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="8dd8a7b4f5dab34349b3a4318dd855c7abbe2237" translate="yes" xml:space="preserve">
          <source>To convert to a specific time in a given time-zone call &lt;a href=&quot;localdate#atTime-java.time.LocalTime-&quot;&gt;&lt;code&gt;atTime(LocalTime)&lt;/code&gt;&lt;/a&gt; followed by &lt;a href=&quot;localdatetime#atZone-java.time.ZoneId-&quot;&gt;&lt;code&gt;LocalDateTime.atZone(ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주어진 시간대 호출 &lt;a href=&quot;localdate#atTime-java.time.LocalTime-&quot;&gt; &lt;code&gt;atTime(LocalTime)&lt;/code&gt; &lt;/a&gt; 다음에 &lt;a href=&quot;localdatetime#atZone-java.time.ZoneId-&quot;&gt; &lt;code&gt;LocalDateTime.atZone(ZoneId)&lt;/code&gt; &lt;/a&gt; 에서 특정 시간으로 변환합니다 .</target>
        </trans-unit>
        <trans-unit id="04c0fcc1d36b488dceb3eb03800fffb2574fb9a1" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;RuleBasedCollator&lt;/code&gt; object with specialized rules tailored to your needs, you construct the &lt;code&gt;RuleBasedCollator&lt;/code&gt; with the rules contained in a &lt;code&gt;String&lt;/code&gt; object. For example:</source>
          <target state="translated">필요에 맞게 특수화 된 규칙 을 사용하여 &lt;code&gt;RuleBasedCollator&lt;/code&gt; 오브젝트 를 작성하려면 &lt;code&gt;String&lt;/code&gt; 오브젝트에 포함 된 규칙으로 &lt;code&gt;RuleBasedCollator&lt;/code&gt; 를 구성하십시오 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="5e6448c217bd1036f514fd3babb0cb8df35bdea4" translate="yes" xml:space="preserve">
          <source>To create a &lt;code&gt;SpinnerNumberModel&lt;/code&gt; for the integer range zero to one hundred, with fifty as the initial value, one could write:</source>
          <target state="translated">To create a &lt;code&gt;SpinnerNumberModel&lt;/code&gt; for the integer range zero to one hundred, with fifty as the initial value, one could write:</target>
        </trans-unit>
        <trans-unit id="937c1d166731d3f66caa2bdf2a846465ed1fe1ce" translate="yes" xml:space="preserve">
          <source>To create a DOMSource from a DOMResult:</source>
          <target state="translated">To create a DOMSource from a DOMResult:</target>
        </trans-unit>
        <trans-unit id="e9eb6315376b4cd30a3d04f3b5c315ba3a13eeb0" translate="yes" xml:space="preserve">
          <source>To create a new Raster that contains a subregion of the current Raster, but shares its coordinate system and bands, this method should be called with childMinX equal to parentX, childMinY equal to parentY, and bandList equal to null.</source>
          <target state="translated">To create a new Raster that contains a subregion of the current Raster, but shares its coordinate system and bands, this method should be called with childMinX equal to parentX, childMinY equal to parentY, and bandList equal to null.</target>
        </trans-unit>
        <trans-unit id="d32d63274f2cbf4036683fa92a83776446845000" translate="yes" xml:space="preserve">
          <source>To create a new WritableRaster that contains a subregion of the current WritableRaster, but shares its coordinate system and bands, this method should be called with childMinX equal to parentX, childMinY equal to parentY, and bandList equal to null.</source>
          <target state="translated">To create a new WritableRaster that contains a subregion of the current WritableRaster, but shares its coordinate system and bands, this method should be called with childMinX equal to parentX, childMinY equal to parentY, and bandList equal to null.</target>
        </trans-unit>
        <trans-unit id="b4d8e3aa230fd8d328cb50849ff011b721e8d563" translate="yes" xml:space="preserve">
          <source>To create a new border class, subclass AbstractBorder.</source>
          <target state="translated">To create a new border class, subclass AbstractBorder.</target>
        </trans-unit>
        <trans-unit id="a32afc764b311a6d840f4a6d3c91f1a4e91e603a" translate="yes" xml:space="preserve">
          <source>To create a node changed event for the root node, specify the parent and the child indices as &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">To create a node changed event for the root node, specify the parent and the child indices as &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="791b72a8d90e2e2ec1bac7e05d883ff1e653d19d" translate="yes" xml:space="preserve">
          <source>To create a proxy for some interface &lt;code&gt;Foo&lt;/code&gt;:</source>
          <target state="translated">일부 인터페이스 &lt;code&gt;Foo&lt;/code&gt; 에 대한 프록시를 작성하려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="0dc7f689cdf1bba3e94d6df9657ba2feff02c34a" translate="yes" xml:space="preserve">
          <source>To create a set of &lt;code&gt;n&lt;/code&gt; tasks using a tree of phasers, you could use code of the following form, assuming a Task class with a constructor accepting a &lt;code&gt;Phaser&lt;/code&gt; that it registers with upon construction. After invocation of &lt;code&gt;build(new Task[n], 0, n,
 new Phaser())&lt;/code&gt;, these tasks could then be started, for example by submitting to a pool:</source>
          <target state="translated">페이저 트리를 사용하여 &lt;code&gt;n&lt;/code&gt; 개의 작업 세트를 작성하려면 생성 시 등록한 &lt;code&gt;Phaser&lt;/code&gt; 를 승인하는 생성자가있는 Task 클래스를 가정하여 다음 형식의 코드를 사용할 수 있습니다 . &lt;code&gt;build(new Task[n], 0, n, new Phaser())&lt;/code&gt; 호출 한 후 풀에 제출하여 이러한 태스크를 시작할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76fa5103ec809c37c86b48faae54a31800d4d1c4" translate="yes" xml:space="preserve">
          <source>To create a zoned date-time at the same instant irrespective of the local time-line, use &lt;a href=&quot;#atZoneSameInstant(java.time.ZoneId)&quot;&gt;&lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;#toZonedDateTime()&quot;&gt;&lt;code&gt;toZonedDateTime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">To create a zoned date-time at the same instant irrespective of the local time-line, use &lt;a href=&quot;#atZoneSameInstant(java.time.ZoneId)&quot;&gt; &lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;#toZonedDateTime()&quot;&gt; &lt;code&gt;toZonedDateTime()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="21cef35b7895ed0dec80ac99d3f5fda763229008" translate="yes" xml:space="preserve">
          <source>To create a zoned date-time at the same instant irrespective of the local time-line, use &lt;a href=&quot;offsetdatetime#atZoneSameInstant-java.time.ZoneId-&quot;&gt;&lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt;&lt;/a&gt;. To use the offset as the zone ID, use &lt;a href=&quot;offsetdatetime#toZonedDateTime--&quot;&gt;&lt;code&gt;toZonedDateTime()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">로컬 타임 라인에 상관없이 동일한 순간에 존 날짜-시간을 작성하려면 &lt;a href=&quot;offsetdatetime#atZoneSameInstant-java.time.ZoneId-&quot;&gt; &lt;code&gt;atZoneSameInstant(ZoneId)&lt;/code&gt; &lt;/a&gt; . 영역 ID로 오프셋을 사용하려면 &lt;a href=&quot;offsetdatetime#toZonedDateTime--&quot;&gt; &lt;code&gt;toZonedDateTime()&lt;/code&gt; &lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="60baa4fa76cf50ff7c38d2a22f008a79c85d01d7" translate="yes" xml:space="preserve">
          <source>To create an &lt;code&gt;ActionListener&lt;/code&gt; that sets the the text of a &lt;code&gt;JLabel&lt;/code&gt; to the text value of the &lt;code&gt;JTextField&lt;/code&gt; source of the incoming event, you can use the following code:</source>
          <target state="translated">&lt;code&gt;JLabel&lt;/code&gt; 의 텍스트를 수신 이벤트 의 &lt;code&gt;JTextField&lt;/code&gt; 소스의 텍스트 값으로 설정 하는 &lt;code&gt;ActionListener&lt;/code&gt; 를 작성하려면 다음 코드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="45312066937624f899610291c457e6f409e99be8" translate="yes" xml:space="preserve">
          <source>To create an &lt;code&gt;ActionListener&lt;/code&gt; that shows a &lt;code&gt;JDialog&lt;/code&gt; with &lt;code&gt;dialog.show()&lt;/code&gt;, one can write:</source>
          <target state="translated">&lt;code&gt;dialog.show()&lt;/code&gt; 와 함께 &lt;code&gt;JDialog&lt;/code&gt; 를 표시 하는 &lt;code&gt;ActionListener&lt;/code&gt; 를 작성하려면 다음을 작성할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ee8a21417c0231b6df257f281fdd95449cee6d1" translate="yes" xml:space="preserve">
          <source>To create an attribute with a qualified name and namespace URI, use the &lt;code&gt;createAttributeNS&lt;/code&gt; method.</source>
          <target state="translated">To create an attribute with a qualified name and namespace URI, use the &lt;code&gt;createAttributeNS&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="321d9a78ad904102d13153b2f25df867969dcc2f" translate="yes" xml:space="preserve">
          <source>To create an element with a qualified name and namespace URI, use the &lt;code&gt;createElementNS&lt;/code&gt; method.</source>
          <target state="translated">To create an element with a qualified name and namespace URI, use the &lt;code&gt;createElementNS&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="2f18a394ec1d00d632fa8ea8c9678ed1d607d136" translate="yes" xml:space="preserve">
          <source>To create an empty keystore using the above &lt;code&gt;load&lt;/code&gt; method, pass &lt;code&gt;null&lt;/code&gt; as the &lt;code&gt;InputStream&lt;/code&gt; argument.</source>
          <target state="translated">위의 &lt;code&gt;load&lt;/code&gt; 메소드 를 사용하여 빈 키 저장소를 작성하려면 &lt;code&gt;InputStream&lt;/code&gt; 인수 로 &lt;code&gt;null&lt;/code&gt; 을 전달하십시오.</target>
        </trans-unit>
        <trans-unit id="8af718b63d7e37600b3d65dd7cbfbaf8c854d52b" translate="yes" xml:space="preserve">
          <source>To create and use an &lt;code&gt;JOptionPane&lt;/code&gt; directly, the standard pattern is roughly as follows:</source>
          <target state="translated">To create and use an &lt;code&gt;JOptionPane&lt;/code&gt; directly, the standard pattern is roughly as follows:</target>
        </trans-unit>
        <trans-unit id="8dea388bdca9f830fe55c273e0d4866e5bd285b2" translate="yes" xml:space="preserve">
          <source>To create localized string representations of a floating-point value, use subclasses of &lt;a href=&quot;../text/numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">부동 소수점 값의 현지화 된 문자열 표현을 작성하려면 &lt;a href=&quot;../text/numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; 의&lt;/a&gt; 서브 클래스를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="808da32e3a261ba4ac89ef37045a1f29ac0fb890" translate="yes" xml:space="preserve">
          <source>To create the new file, the prefix and the suffix may first be adjusted to fit the limitations of the underlying platform. If the prefix is too long then it will be truncated, but its first three characters will always be preserved. If the suffix is too long then it too will be truncated, but if it begins with a period character (&lt;code&gt;'.'&lt;/code&gt;) then the period and the first three characters following it will always be preserved. Once these adjustments have been made the name of the new file will be generated by concatenating the prefix, five or more internally-generated characters, and the suffix.</source>
          <target state="translated">새 파일을 만들려면 먼저 기본 플랫폼의 제한에 맞게 접두사와 접미사를 조정할 수 있습니다. 접두사가 너무 길면 잘리지 만 처음 세 문자는 항상 유지됩니다. 접미사가 너무 길면 잘리지 만, 마침표 문자 ( &lt;code&gt;'.'&lt;/code&gt; )로 시작하면 마침표와 그 뒤의 첫 세 문자는 항상 유지됩니다. 이러한 조정이 이루어지면 접두사, 내부적으로 생성 된 5 개 이상의 문자 및 접미사를 연결하여 새 파일의 이름이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="3e4a062b070484f1c27e4ca896fe630eef6f8d83" translate="yes" xml:space="preserve">
          <source>To declare a feature non-transient in a class whose superclass declares it transient, use &lt;code&gt;@Transient(false)&lt;/code&gt;. In all cases, the &lt;a href=&quot;introspector&quot;&gt;&lt;code&gt;Introspector&lt;/code&gt;&lt;/a&gt; decides if a feature is transient by referring to the annotation on the most specific superclass. If no &lt;code&gt;Transient&lt;/code&gt; annotation is present in any superclass the feature is not transient.</source>
          <target state="translated">수퍼 클래스가 일시적인 것으로 선언하는 클래스에서 일시적이지 않은 기능을 선언하려면 &lt;code&gt;@Transient(false)&lt;/code&gt; . 모든 경우에 &lt;a href=&quot;introspector&quot;&gt; &lt;code&gt;Introspector&lt;/code&gt; &lt;/a&gt; 는 가장 구체적인 수퍼 클래스의 주석을 참조하여 기능이 일시적인지 결정합니다. 수퍼 클래스에 &lt;code&gt;Transient&lt;/code&gt; 주석이 없으면 이 기능은 과도하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="57fd356f7d95a14f5404eeb90ff5031af2abdc3b" translate="yes" xml:space="preserve">
          <source>To declare a service provider, a &lt;code&gt;services&lt;/code&gt; subdirectory is placed within the &lt;code&gt;META-INF&lt;/code&gt; directory that is present in every JAR file. This directory contains a file for each service provider interface that has one or more implementation classes present in the JAR file. For example, if the JAR file contained a class named &lt;code&gt;com.mycompany.mypkg.MyServiceImpl&lt;/code&gt; which implements the &lt;code&gt;javax.someapi.SomeService&lt;/code&gt; interface, the JAR file would contain a file named:</source>
          <target state="translated">서비스 제공자를 선언하기 위해 &lt;code&gt;services&lt;/code&gt; 서브 디렉토리는 모든 JAR 파일에 있는 &lt;code&gt;META-INF&lt;/code&gt; 디렉토리 내에 있습니다. 이 디렉토리에는 JAR 파일에 하나 이상의 구현 클래스가있는 각 서비스 제공자 인터페이스에 대한 파일이 있습니다. 예를 들어, JAR 파일 에 &lt;code&gt;javax.someapi.SomeService&lt;/code&gt; 인터페이스 를 구현하는 &lt;code&gt;com.mycompany.mypkg.MyServiceImpl&lt;/code&gt; 이라는 클래스 가 포함 된 경우 JAR 파일에는 다음과 같은 이름의 파일이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="8d5f427026a3bffd1cf9d8eaa3798b47dd458e0e" translate="yes" xml:space="preserve">
          <source>To declare the default element Namespace, use the empty string as the prefix.</source>
          <target state="translated">To declare the default element Namespace, use the empty string as the prefix.</target>
        </trans-unit>
        <trans-unit id="b5daf07cb128e0adef752589303d128fdbba030b" translate="yes" xml:space="preserve">
          <source>To define a Flight Recorder event, extend &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt; and add fields that matches the data types of the payload. Metadata about fields, such as labels, descriptions and units, can be added by using the annotations available in the &lt;code&gt;jdk.jfr&lt;/code&gt; package, or by using a user-defined annotation that has the &lt;a href=&quot;metadatadefinition&quot;&gt;&lt;code&gt;MetadataDefinition&lt;/code&gt;&lt;/a&gt; annotation.</source>
          <target state="translated">Flight Recorder 이벤트를 정의하려면 &lt;a href=&quot;event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; 를&lt;/a&gt; 확장 하고 페이로드의 데이터 유형과 일치하는 필드를 추가하십시오. 레이블, 설명 및 단위와 같은 필드에 대한 메타 데이터는 &lt;code&gt;jdk.jfr&lt;/code&gt; 패키지 에서 사용 가능한 주석을 사용 하거나 &lt;a href=&quot;metadatadefinition&quot;&gt; &lt;code&gt;MetadataDefinition&lt;/code&gt; &lt;/a&gt; 주석 이있는 사용자 정의 주석을 사용하여 추가 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7283b113e7c0164d77d2a8c9fb8573fa56cef93b" translate="yes" xml:space="preserve">
          <source>To define a new attribute category, a vendor defines a new attribute class. This attribute class, like the standard attribute classes, implements &lt;code&gt;Attribute&lt;/code&gt; or one of its subinterfaces and extends an abstract syntax class. The vendor can either use an existing abstract syntax class or define a new one. The new vendor-defined attribute can be used wherever an &lt;code&gt;Attribute&lt;/code&gt; is used, such as in an &lt;code&gt;AttributeSet&lt;/code&gt;.</source>
          <target state="translated">새로운 속성 범주를 정의하기 위해 공급 업체는 새로운 속성 클래스를 정의합니다. 이 속성 클래스는 표준 속성 클래스와 마찬가지로 &lt;code&gt;Attribute&lt;/code&gt; 또는 해당 서브 인터페이스 중 하나를 구현 하고 추상 구문 클래스를 확장합니다. 공급 업체는 기존 추상 구문 클래스를 사용하거나 새로운 추상 구문 클래스를 정의 할 수 있습니다. 목적지 새로운 벤더 정의 속성을 사용할 수있는 &lt;code&gt;Attribute&lt;/code&gt; 그러한 같이 사용되는 &lt;code&gt;AttributeSet&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e347f14baa8fe4d897360a51c83aed5e5fbc4b76" translate="yes" xml:space="preserve">
          <source>To define a new value for an attribute, a client can construct instances of such attributes with arbitrary values at runtime. However, an enumerated attribute using an abstract syntax class of &lt;code&gt;EnumSyntax&lt;/code&gt; specifies all the possible attribute values at compile time as singleton instances of the attribute class. This means that new enumerated values cannot be constructed at run time. To define new vendor-specific values for a standard enumerated attribute, the vendor must define a new attribute class specifying the new singleton instances. To ensure that the new attribute values fall in the same category as the standard attribute values, the new attribute class must be a subclass of the standard attribute class.</source>
          <target state="translated">속성에 대한 새로운 값을 정의하기 위해 클라이언트는 런타임에 임의의 값으로 속성의 인스턴스를 구성 할 수 있습니다. 그러나 &lt;code&gt;EnumSyntax&lt;/code&gt; 의 추상 구문 클래스를 사용하여 열거 된 특성 은 컴파일 타임에 가능한 모든 특성 값을 특성 클래스의 단일 인스턴스로 지정합니다. 즉, 새로운 열거 값을 런타임에 구성 할 수 없습니다. 표준 열거 속성에 대해 새로운 공급 업체별 값을 정의하려면 공급 업체는 새 싱글 톤 인스턴스를 지정하는 새로운 속성 클래스를 정의해야합니다. 새 속성 값이 표준 속성 값과 동일한 범주에 속하도록하려면 새 속성 클래스는 표준 속성 클래스의 서브 클래스 여야합니다.</target>
        </trans-unit>
        <trans-unit id="f939ea17e6648d57afdd0ab71206b3b4ae1f10f1" translate="yes" xml:space="preserve">
          <source>To define an event at compile time, see &lt;a href=&quot;event&quot;&gt;&lt;code&gt;Event&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">컴파일시에 이벤트를 정의하려면 참조 &lt;a href=&quot;event&quot;&gt; &lt;code&gt;Event&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="7be390e424352119396aca90952aa3eb2e129ceb" translate="yes" xml:space="preserve">
          <source>To detect if a MidiDevice represents a hardware MIDI port, the following programming technique can be used:</source>
          <target state="translated">MidiDevice가 하드웨어 MIDI 포트를 나타내는 지 감지하려면 다음 프로그래밍 기술을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e676ccd071b538464ec0f5bba24430555e2f6906" translate="yes" xml:space="preserve">
          <source>To determine certificate equality, this method only compares actual signer certificates. Supporting certificate chains are not taken into consideration by this method.</source>
          <target state="translated">인증서 동등성을 확인하기 위해이 방법은 실제 서명자 인증서 만 비교합니다. 이 방법에서는 지원 인증서 체인을 고려하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ff5817879da34db4f56fdd68b526d292ae2a611c" translate="yes" xml:space="preserve">
          <source>To determine if your environment is a virtual device environment, call &lt;code&gt;getBounds&lt;/code&gt; on all of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; objects in your system. If any of the origins of the returned bounds is not (0, 0), your environment is a virtual device environment.</source>
          <target state="translated">To determine if your environment is a virtual device environment, call &lt;code&gt;getBounds&lt;/code&gt; on all of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; objects in your system. If any of the origins of the returned bounds is not (0, 0), your environment is a virtual device environment.</target>
        </trans-unit>
        <trans-unit id="902c6e685e894ad6aedb9e2a7a97d5aa77dd6669" translate="yes" xml:space="preserve">
          <source>To disable a traversal key, use an empty &lt;code&gt;Set&lt;/code&gt;; &lt;code&gt;Collections.EMPTY_SET&lt;/code&gt; is recommended.</source>
          <target state="translated">To disable a traversal key, use an empty &lt;code&gt;Set&lt;/code&gt; ; &lt;code&gt;Collections.EMPTY_SET&lt;/code&gt; is recommended.</target>
        </trans-unit>
        <trans-unit id="e816b46eabb2d9327b82c3318740e2a587020d84" translate="yes" xml:space="preserve">
          <source>To disable a traversal key, use an empty Set; Collections.EMPTY_SET is recommended.</source>
          <target state="translated">To disable a traversal key, use an empty Set; Collections.EMPTY_SET is recommended.</target>
        </trans-unit>
        <trans-unit id="2491d61c1dce605c04f31a3f9752a63f8d068280" translate="yes" xml:space="preserve">
          <source>To dispatch events to registered actions, the stream must be started. To start processing in the current thread, invoke the &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method. To process actions asynchronously in a separate thread, invoke the &lt;a href=&quot;#startAsync()&quot;&gt;&lt;code&gt;startAsync()&lt;/code&gt;&lt;/a&gt; method. To await completion of the stream, use the awaitTermination &lt;a href=&quot;#awaitTermination()&quot;&gt;&lt;code&gt;awaitTermination()&lt;/code&gt;&lt;/a&gt; or the &lt;a href=&quot;#awaitTermination(java.time.Duration)&quot;&gt;&lt;code&gt;awaitTermination(Duration)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">등록 된 작업에 이벤트를 전달하려면 스트림을 시작해야합니다. 현재 스레드에서 처리를 시작하려면 start &lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt; 메서드를 호출합니다 . 별도의 스레드에서 비동기 적으로 작업을 처리하려면 &lt;a href=&quot;#startAsync()&quot;&gt; &lt;code&gt;startAsync()&lt;/code&gt; &lt;/a&gt; 메서드를 호출합니다 . 스트림 완료를 기다리려면 awaitTermination &lt;a href=&quot;#awaitTermination()&quot;&gt; &lt;code&gt;awaitTermination()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#awaitTermination(java.time.Duration)&quot;&gt; &lt;code&gt;awaitTermination(Duration)&lt;/code&gt; &lt;/a&gt; 메서드를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="521d4df1fdecc5d9afbb280c6d01cbb8e8131919" translate="yes" xml:space="preserve">
          <source>To display the selected item, &lt;code&gt;aRenderer.getListCellRendererComponent&lt;/code&gt; is called, passing the list object and an index of -1.</source>
          <target state="translated">To display the selected item, &lt;code&gt;aRenderer.getListCellRendererComponent&lt;/code&gt; is called, passing the list object and an index of -1.</target>
        </trans-unit>
        <trans-unit id="73759847ca2ddc195bc637dee70c201f5a265565" translate="yes" xml:space="preserve">
          <source>To dynamically define an event, use the &lt;a href=&quot;eventfactory&quot;&gt;&lt;code&gt;EventFactory&lt;/code&gt;&lt;/a&gt; class and define fields by using the &lt;a href=&quot;valuedescriptor&quot;&gt;&lt;code&gt;ValueDescriptor&lt;/code&gt;&lt;/a&gt; class, and define annotations by using the &lt;a href=&quot;annotationelement&quot;&gt;&lt;code&gt;AnnotationElement&lt;/code&gt;&lt;/a&gt; class. Use the factory to allocate an event and the &lt;a href=&quot;event#set(int,java.lang.Object)&quot;&gt;&lt;code&gt;Event.set(int, Object)&lt;/code&gt;&lt;/a&gt; method to populate it.</source>
          <target state="translated">동적으로 이벤트를 정의하려면 사용 &lt;a href=&quot;eventfactory&quot;&gt; &lt;code&gt;EventFactory&lt;/code&gt; &lt;/a&gt; 클래스를하고 사용하여 필드를 정의 &lt;a href=&quot;valuedescriptor&quot;&gt; &lt;code&gt;ValueDescriptor&lt;/code&gt; 의&lt;/a&gt; 클래스를하고 사용하여 주석을 정의 &lt;a href=&quot;annotationelement&quot;&gt; &lt;code&gt;AnnotationElement&lt;/code&gt; 의&lt;/a&gt; 클래스를. 팩토리를 사용하여 이벤트를 할당하고 &lt;a href=&quot;event#set(int,java.lang.Object)&quot;&gt; &lt;code&gt;Event.set(int, Object)&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여이를 채 웁니다.</target>
        </trans-unit>
        <trans-unit id="e0c996f0050be7ce5d2c546057a7079bb77afcba" translate="yes" xml:space="preserve">
          <source>To enable sorting and filtering of rows, use a &lt;code&gt;RowSorter&lt;/code&gt;. You can set up a row sorter in either of two ways:</source>
          <target state="translated">To enable sorting and filtering of rows, use a &lt;code&gt;RowSorter&lt;/code&gt; . You can set up a row sorter in either of two ways:</target>
        </trans-unit>
        <trans-unit id="ab978687241b79866b127e3c7c6ff7a942b26599" translate="yes" xml:space="preserve">
          <source>To enable the &lt;code&gt;AWTEvent&lt;/code&gt;s of a particular type, you call &lt;a href=&quot;../jlayer#setLayerEventMask(long)&quot;&gt;&lt;code&gt;JLayer.setLayerEventMask(long)&lt;/code&gt;&lt;/a&gt; in &lt;a href=&quot;#installUI(javax.swing.JComponent)&quot;&gt;&lt;code&gt;installUI(javax.swing.JComponent)&lt;/code&gt;&lt;/a&gt; and set the layer event mask to &lt;code&gt;0&lt;/code&gt; in &lt;a href=&quot;#uninstallUI(javax.swing.JComponent)&quot;&gt;&lt;code&gt;uninstallUI(javax.swing.JComponent)&lt;/code&gt;&lt;/a&gt; after that. By default this method calls the appropriate &lt;code&gt;process&amp;lt;event&lt;/code&gt;&lt;code&gt;type&amp;gt;Event&lt;/code&gt; method for the given class of event.</source>
          <target state="translated">To enable the &lt;code&gt;AWTEvent&lt;/code&gt; s of a particular type, you call &lt;a href=&quot;../jlayer#setLayerEventMask(long)&quot;&gt; &lt;code&gt;JLayer.setLayerEventMask(long)&lt;/code&gt; &lt;/a&gt; in &lt;a href=&quot;#installUI(javax.swing.JComponent)&quot;&gt; &lt;code&gt;installUI(javax.swing.JComponent)&lt;/code&gt; &lt;/a&gt; and set the layer event mask to &lt;code&gt;0&lt;/code&gt; in &lt;a href=&quot;#uninstallUI(javax.swing.JComponent)&quot;&gt; &lt;code&gt;uninstallUI(javax.swing.JComponent)&lt;/code&gt; &lt;/a&gt; after that. By default this method calls the appropriate &lt;code&gt;process&amp;lt;event&lt;/code&gt; &lt;code&gt;type&amp;gt;Event&lt;/code&gt; method for the given class of event.</target>
        </trans-unit>
        <trans-unit id="9d4331aca8bde50509f15e66b1dc895741884c03" translate="yes" xml:space="preserve">
          <source>To ensure consistency in conversion implementations, the new &lt;code&gt;GregorianCalendar&lt;/code&gt; should be instantiated in following manner.</source>
          <target state="translated">To ensure consistency in conversion implementations, the new &lt;code&gt;GregorianCalendar&lt;/code&gt; should be instantiated in following manner.</target>
        </trans-unit>
        <trans-unit id="ec3f3d2e8b8da37d059135bf9927030dc1a93310" translate="yes" xml:space="preserve">
          <source>To ensure progress, the supplied function must arrange eventual completion of its result.</source>
          <target state="translated">To ensure progress, the supplied function must arrange eventual completion of its result.</target>
        </trans-unit>
        <trans-unit id="fbf6d3ab4a41188c49c32e545df6afa5e97c91be" translate="yes" xml:space="preserve">
          <source>To ensure reasonable behavior in the face of concurrency, the event is dispatched after the mutation has occurred. This means that by the time a notification of removal is dispatched, the document has already been updated and any marks created by &lt;code&gt;createPosition&lt;/code&gt; have already changed. For a removal, the end of the removal range is collapsed down to the start of the range, and any marks in the removal range are collapsed down to the start of the range.</source>
          <target state="translated">To ensure reasonable behavior in the face of concurrency, the event is dispatched after the mutation has occurred. This means that by the time a notification of removal is dispatched, the document has already been updated and any marks created by &lt;code&gt;createPosition&lt;/code&gt; have already changed. For a removal, the end of the removal range is collapsed down to the start of the range, and any marks in the removal range are collapsed down to the start of the range.</target>
        </trans-unit>
        <trans-unit id="11643c6ea43dfed43359a63e34cfeec2c468e235" translate="yes" xml:space="preserve">
          <source>To ensure that all resources associated with the corresponding HTTP exchange are properly released, an implementation of &lt;code&gt;
 BodySubscriber&lt;/code&gt; should ensure to &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;&lt;code&gt;request&lt;/code&gt;&lt;/a&gt; more data until one of &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onComplete()&quot;&gt;&lt;code&gt;onComplete&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt;&lt;code&gt;onError&lt;/code&gt;&lt;/a&gt; are signalled, or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; its &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt;subscription&lt;/a&gt; if unable or unwilling to do so. Calling &lt;code&gt;cancel&lt;/code&gt; before exhausting the response body data may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</source>
          <target state="translated">To ensure that all resources associated with the corresponding HTTP exchange are properly released, an implementation of &lt;code&gt; BodySubscriber&lt;/code&gt; should ensure to &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt; &lt;code&gt;request&lt;/code&gt; &lt;/a&gt; more data until one of &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onComplete()&quot;&gt; &lt;code&gt;onComplete&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt; &lt;code&gt;onError&lt;/code&gt; &lt;/a&gt; are signalled, or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt; its &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt;subscription&lt;/a&gt; if unable or unwilling to do so. Calling &lt;code&gt;cancel&lt;/code&gt; before exhausting the response body data may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</target>
        </trans-unit>
        <trans-unit id="7c1c79b46a51721b58d635598c2eb415a441c368" translate="yes" xml:space="preserve">
          <source>To ensure that all resources associated with the corresponding HTTP exchange are properly released, an implementation of &lt;code&gt;
 BodySubscriber&lt;/code&gt; should ensure to &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;request&lt;/a&gt; more data until one of &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onComplete()&quot;&gt;&lt;code&gt;onComplete&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt;&lt;code&gt;onError&lt;/code&gt;&lt;/a&gt; are signalled, or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;&lt;code&gt;cancel&lt;/code&gt;&lt;/a&gt; its &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt;subscription&lt;/a&gt; if unable or unwilling to do so. Calling &lt;code&gt;cancel&lt;/code&gt; before exhausting the response body data may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</source>
          <target state="translated">해당 HTTP 교환과 관련된 모든 자원이 적절하게 공개되도록하려면,의 구현 &lt;code&gt; BodySubscriber&lt;/code&gt; 는 할 수 있도록해야한다 &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;요청&lt;/a&gt; 중 하나가 될 때까지 더 많은 데이터를 &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onComplete()&quot;&gt; &lt;code&gt;onComplete&lt;/code&gt; 를&lt;/a&gt; 또는 &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt; &lt;code&gt;onError&lt;/code&gt; &lt;/a&gt; 신호되거나 &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt; &lt;code&gt;cancel&lt;/code&gt; &lt;/a&gt; 의 &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt;가입을&lt;/a&gt; 할 수없는 또는 내키지 그렇게 할 경우. 응답 본문 데이터를 소진하기 전에 &lt;code&gt;cancel&lt;/code&gt; 을 호출 하면 기본 HTTP 연결이 닫히고 후속 작업에 다시 사용되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f3eff81a66d8962e609b1164941f2aa109e279a" translate="yes" xml:space="preserve">
          <source>To ensure that all resources associated with the corresponding exchange are properly released the caller must ensure that the provided publisher is subscribed once, and either &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;requests&lt;/a&gt; all bytes until &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onComplete()&quot;&gt;&lt;code&gt;onComplete&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt;&lt;code&gt;onError&lt;/code&gt;&lt;/a&gt; are invoked, or cancel the provided &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt;subscription&lt;/a&gt; if it is unable or unwilling to do so. Note that depending on the actual HTTP protocol &lt;a href=&quot;httpclient.version&quot;&gt;version&lt;/a&gt; used for the exchange, cancelling the subscription instead of exhausting the flow may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</source>
          <target state="translated">To ensure that all resources associated with the corresponding exchange are properly released the caller must ensure that the provided publisher is subscribed once, and either &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscription#request(long)&quot;&gt;requests&lt;/a&gt; all bytes until &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onComplete()&quot;&gt; &lt;code&gt;onComplete&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onError(java.lang.Throwable)&quot;&gt; &lt;code&gt;onError&lt;/code&gt; &lt;/a&gt; are invoked, or cancel the provided &lt;a href=&quot;../../../../java.base/java/util/concurrent/flow.subscriber#onSubscribe(java.util.concurrent.Flow.Subscription)&quot;&gt;subscription&lt;/a&gt; if it is unable or unwilling to do so. Note that depending on the actual HTTP protocol &lt;a href=&quot;httpclient.version&quot;&gt;version&lt;/a&gt; used for the exchange, cancelling the subscription instead of exhausting the flow may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</target>
        </trans-unit>
        <trans-unit id="9745d3a736e887f0e3c7f8472f10fe34a71ab4a4" translate="yes" xml:space="preserve">
          <source>To ensure that all resources associated with the corresponding exchange are properly released the caller must ensure to either read all bytes until EOF is reached, or call &lt;a href=&quot;../../../../java.base/java/io/inputstream#close()&quot;&gt;&lt;code&gt;InputStream.close()&lt;/code&gt;&lt;/a&gt; if it is unable or unwilling to do so. Calling &lt;code&gt;close&lt;/code&gt; before exhausting the stream may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</source>
          <target state="translated">To ensure that all resources associated with the corresponding exchange are properly released the caller must ensure to either read all bytes until EOF is reached, or call &lt;a href=&quot;../../../../java.base/java/io/inputstream#close()&quot;&gt; &lt;code&gt;InputStream.close()&lt;/code&gt; &lt;/a&gt; if it is unable or unwilling to do so. Calling &lt;code&gt;close&lt;/code&gt; before exhausting the stream may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</target>
        </trans-unit>
        <trans-unit id="fa53fd89d6c9264fb3e331487b71d7d22e61aa13" translate="yes" xml:space="preserve">
          <source>To ensure that all resources associated with the corresponding exchange are properly released the caller must ensure to either read all lines until the stream is exhausted, or call &lt;a href=&quot;../../../../java.base/java/util/stream/basestream#close()&quot;&gt;&lt;code&gt;BaseStream.close()&lt;/code&gt;&lt;/a&gt; if it is unable or unwilling to do so. Calling &lt;code&gt;close&lt;/code&gt; before exhausting the stream may cause the underlying HTTP connection to be closed and prevent it from being reused for subsequent operations.</source>
          <target state="translated">해당 교환과 관련된 모든 리소스가 적절하게 해제되었는지 확인하기 위해 호출자는 스트림이 소진 될 때까지 모든 행을 읽 거나 그렇게 할 수 없거나 원하지 않는 경우 &lt;a href=&quot;../../../../java.base/java/util/stream/basestream#close()&quot;&gt; &lt;code&gt;BaseStream.close()&lt;/code&gt; &lt;/a&gt; 호출 해야합니다. 스트림을 소진하기 전에 &lt;code&gt;close&lt;/code&gt; 를 호출 하면 기본 HTTP 연결이 닫히고 후속 작업에 다시 사용되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="740785de36acfcfa114524f1b3afbf22d481fdba" translate="yes" xml:space="preserve">
          <source>To ensure that client parameters will be deserialized at the server side with the correct classloader, client parameters such as parameters used to invoke a method are wrapped in a &lt;a href=&quot;../../../../../java.rmi/java/rmi/marshalledobject&quot;&gt;&lt;code&gt;MarshalledObject&lt;/code&gt;&lt;/a&gt;. An implementation of this interface must first get the appropriate class loader for the operation and its target, then deserialize the marshalled parameters with this classloader. Except as noted, a parameter that is a &lt;code&gt;MarshalledObject&lt;/code&gt; or &lt;code&gt;MarshalledObject[]&lt;/code&gt; must not be null; the behavior is unspecified if it is.</source>
          <target state="translated">클라이언트 매개 변수가 올바른 클래스 로더를 사용하여 서버 측에서 역 직렬화되도록하기 위해 메서드를 호출하는 데 사용되는 매개 변수와 같은 클라이언트 매개 변수는 &lt;a href=&quot;../../../../../java.rmi/java/rmi/marshalledobject&quot;&gt; &lt;code&gt;MarshalledObject&lt;/code&gt; 에&lt;/a&gt; 래핑됩니다 . 이 인터페이스의 구현은 먼저 작업과 대상에 대한 적절한 클래스 로더를 가져온 다음이 클래스 로더를 사용하여 마샬링 된 매개 변수를 역 직렬화해야합니다. 언급 된 경우를 제외하고 &lt;code&gt;MarshalledObject&lt;/code&gt; 또는 &lt;code&gt;MarshalledObject[]&lt;/code&gt; 매개 변수는 null이 아니어야합니다. 그럴 경우 동작은 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b59757c043cfb960c17c98e1a8dd7ce3314ad5d3" translate="yes" xml:space="preserve">
          <source>To ensure that client parameters will be deserialized at the server side with the correct classloader, client parameters such as parameters used to invoke a method are wrapped in a &lt;a href=&quot;/openjdk~8_web/java/rmi/marshalledobject&quot;&gt;&lt;code&gt;MarshalledObject&lt;/code&gt;&lt;/a&gt;. An implementation of this interface must first get the appropriate class loader for the operation and its target, then deserialize the marshalled parameters with this classloader. Except as noted, a parameter that is a &lt;code&gt;MarshalledObject&lt;/code&gt; or &lt;code&gt;MarshalledObject[]&lt;/code&gt; must not be null; the behavior is unspecified if it is.</source>
          <target state="translated">클라이언트 클래스가 올바른 클래스 로더를 사용하여 서버 측에서 직렬화 해제되도록하기 위해 메소드를 호출하는 데 사용되는 매개 변수와 같은 클라이언트 매개 변수는 &lt;a href=&quot;/openjdk~8_web/java/rmi/marshalledobject&quot;&gt; &lt;code&gt;MarshalledObject&lt;/code&gt; 에&lt;/a&gt; 랩됩니다 . 이 인터페이스의 구현은 먼저 조작 및 해당 대상에 적합한 클래스 로더를 확보 한 후이 클래스 로더로 마샬링 된 매개 변수를 직렬화 해제해야합니다. 언급 된 것을 제외하고 &lt;code&gt;MarshalledObject&lt;/code&gt; 또는 &lt;code&gt;MarshalledObject[]&lt;/code&gt; 매개 변수는 널이 아니어야합니다. 있는 경우 동작이 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f2abea5f649f3db3eea3bbf55598ba6f03b42815" translate="yes" xml:space="preserve">
          <source>To ensure that keystore entries are uniquely identified, each entry's alias is prefixed by its &lt;code&gt;keystoreName&lt;/code&gt; followed by the entry name separator and each &lt;code&gt;keystoreName&lt;/code&gt; must be unique within its domain. Entry name prefixes are omitted when storing a keystore.</source>
          <target state="translated">키 저장소 항목을 고유하게 식별하려면 각 항목의 별명 앞에 &lt;code&gt;keystoreName&lt;/code&gt; 이오고 그 뒤에 항목 이름 구분 기호가오고 각 &lt;code&gt;keystoreName&lt;/code&gt; 이름 은 해당 도메인 내에서 고유해야합니다. 키 저장소를 저장할 때 항목 이름 접 두부가 생략됩니다.</target>
        </trans-unit>
        <trans-unit id="7533c6ef00ad28237e37b969dc3e84fa760e069f" translate="yes" xml:space="preserve">
          <source>To ensure that sequential and parallel executions produce equivalent results, the collector functions must satisfy an &lt;em&gt;identity&lt;/em&gt; and an &lt;a href=&quot;package-summary#Associativity&quot;&gt;associativity&lt;/a&gt; constraints.</source>
          <target state="translated">순차적 및 병렬 실행이 동등한 결과를 생성하도록하려면 콜렉터 함수가 &lt;em&gt;ID&lt;/em&gt; 및 &lt;a href=&quot;package-summary#Associativity&quot;&gt;연관성&lt;/a&gt; 제한 조건을 충족시켜야합니다 .</target>
        </trans-unit>
        <trans-unit id="00fe0fe22981250465b7707614b837e155640b61" translate="yes" xml:space="preserve">
          <source>To ensure the integrity of time-zones already created, there is no way to deregister providers.</source>
          <target state="translated">이미 생성 된 시간대의 무결성을 보장하기 위해 공급자를 등록 취소 할 수있는 방법이 없습니다.</target>
        </trans-unit>
        <trans-unit id="b3d5ee6edf0e10a67c0dd7074d245642e41157c8" translate="yes" xml:space="preserve">
          <source>To ensure this is a Java frame, use the &lt;a href=&quot;recordedframe#isJavaFrame()&quot;&gt;&lt;code&gt;RecordedFrame.isJavaFrame()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이것이 Java 프레임인지 확인하려면 &lt;a href=&quot;recordedframe#isJavaFrame()&quot;&gt; &lt;code&gt;RecordedFrame.isJavaFrame()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="5106a2defd4e990de3915bb1a3bd513a8478ebfd" translate="yes" xml:space="preserve">
          <source>To fill in default values, use &lt;a href=&quot;../util/elements#getElementValuesWithDefaults(javax.lang.model.element.AnnotationMirror)&quot;&gt;&lt;code&gt;getElementValuesWithDefaults&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본값을 채우려면 &lt;a href=&quot;../util/elements#getElementValuesWithDefaults(javax.lang.model.element.AnnotationMirror)&quot;&gt; &lt;code&gt;getElementValuesWithDefaults&lt;/code&gt; 를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="054a915983e4b95e8f0a7fc17e50da04ce361fd5" translate="yes" xml:space="preserve">
          <source>To fill in default values, use &lt;a href=&quot;../util/elements#getElementValuesWithDefaults-javax.lang.model.element.AnnotationMirror-&quot;&gt;&lt;code&gt;getElementValuesWithDefaults&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기본값을 채우려면 &lt;a href=&quot;../util/elements#getElementValuesWithDefaults-javax.lang.model.element.AnnotationMirror-&quot;&gt; &lt;code&gt;getElementValuesWithDefaults&lt;/code&gt; 를&lt;/a&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="1b1f92d50f9e865c5004f64d2a4f404c52a1d655" translate="yes" xml:space="preserve">
          <source>To find a &lt;code&gt;SchemaFactory&lt;/code&gt; object for a given schema language, this method looks the following places in the following order where &quot;the class loader&quot; refers to the context class loader:</source>
          <target state="translated">주어진 스키마 언어에 대한 &lt;code&gt;SchemaFactory&lt;/code&gt; 개체 를 찾기 위해이 메서드는 &quot;클래스 로더&quot;가 컨텍스트 클래스 로더를 참조하는 다음 순서로 다음 위치를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="9b8775d414d5739e2553eeb95758778f1b1162a5" translate="yes" xml:space="preserve">
          <source>To find a &lt;code&gt;XPathFactory&lt;/code&gt; object, this method looks the following places in the following order where &quot;the class loader&quot; refers to the context class loader:</source>
          <target state="translated">&lt;code&gt;XPathFactory&lt;/code&gt; 객체 를 찾기 위해이 메소드는 &quot;클래스 로더&quot;가 컨텍스트 클래스 로더를 참조하는 다음 순서로 다음 위치를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="e7a2eb21d729f289e381419913e34035d0572aa1" translate="yes" xml:space="preserve">
          <source>To find a matching method in a class or interface C: If C declares exactly one public method with the specified name and exactly the same formal parameter types, that is the method reflected. If more than one such method is found in C, and one of these methods has a return type that is more specific than any of the others, that method is reflected; otherwise one of the methods is chosen arbitrarily.</source>
          <target state="translated">클래스 또는 인터페이스 C에서 일치하는 메소드를 찾으려면 : C가 지정된 이름과 정확히 동일한 형식 매개 변수 유형으로 정확히 하나의 공용 메소드를 선언하는 경우 해당 메소드가 반영됩니다. C에서 두 개 이상의 이러한 메소드가 발견되고이 메소드 중 하나가 다른 메소드보다 더 구체적인 리턴 유형을 갖는 경우 해당 메소드가 반영됩니다. 그렇지 않으면 방법 중 하나가 임의로 선택됩니다.</target>
        </trans-unit>
        <trans-unit id="18affa8e6289d316bfbb65fcc90a0d84436fb4e2" translate="yes" xml:space="preserve">
          <source>To force a complete SSL/TLS session renegotiation, the current session should be invalidated prior to calling this method.</source>
          <target state="translated">완전한 SSL / TLS 세션 재협상을 강제하려면이 메소드를 호출하기 전에 현재 세션을 무효화해야합니다.</target>
        </trans-unit>
        <trans-unit id="47932eadf2a2f5b763ff01f0e64c92e2c7a1f269" translate="yes" xml:space="preserve">
          <source>To force a complete SSL/TLS/DTLS session renegotiation, the current session should be invalidated prior to calling this method.</source>
          <target state="translated">완전한 SSL / TLS / DTLS 세션 재협상을 강제하려면이 메서드를 호출하기 전에 현재 세션을 무효화해야합니다.</target>
        </trans-unit>
        <trans-unit id="023592bd128d50677e7012f1fdf88fec752749f6" translate="yes" xml:space="preserve">
          <source>To format a date for a different Locale, specify it in the call to &lt;a href=&quot;#getDateInstance(int,java.util.Locale)&quot;&gt;&lt;code&gt;getDateInstance()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다른 로케일의 날짜 형식을 지정하려면 &lt;a href=&quot;#getDateInstance(int,java.util.Locale)&quot;&gt; &lt;code&gt;getDateInstance()&lt;/code&gt; &lt;/a&gt; 호출에서 날짜를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="23a173b3cd0da62e49a4c6312b7effbebcf70a1d" translate="yes" xml:space="preserve">
          <source>To format a date for a different Locale, specify it in the call to &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt;&lt;code&gt;getDateInstance()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">다른 로케일의 날짜를 형식화하려면 &lt;a href=&quot;dateformat#getDateInstance-int-java.util.Locale-&quot;&gt; &lt;code&gt;getDateInstance()&lt;/code&gt; &lt;/a&gt; 호출에서 날짜를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="31c56dc41650b703b7585ee73957c79da8a6ebd8" translate="yes" xml:space="preserve">
          <source>To format a date for the current Locale, use one of the static factory methods:</source>
          <target state="translated">현재 로케일의 날짜를 형식화하려면 정적 팩토리 메소드 중 하나를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="1efc90fec6b3d2be588385321c3b066f49b91be9" translate="yes" xml:space="preserve">
          <source>To format a number for a different Locale, specify it in the call to &lt;code&gt;getInstance&lt;/code&gt;.</source>
          <target state="translated">다른 로케일의 숫자를 형식화하려면 &lt;code&gt;getInstance&lt;/code&gt; 호출에서 해당 숫자를 지정하십시오 .</target>
        </trans-unit>
        <trans-unit id="f8abc2244a33eeafa86f7a9eab9d0022e187c943" translate="yes" xml:space="preserve">
          <source>To format a number for the current Locale, use one of the factory class methods:</source>
          <target state="translated">현재 로케일의 숫자를 형식화하려면 팩토리 클래스 메소드 중 하나를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="66a7e5e7c134d63a47be4ac7fd3cecaecbe5eb3b" translate="yes" xml:space="preserve">
          <source>To generate the new &lt;code&gt;Map&lt;/code&gt;, first the &lt;code&gt;Font&lt;/code&gt; is obtained from the &lt;code&gt;FONT&lt;/code&gt; attribute, and &lt;em&gt;all&lt;/em&gt; of its attributes extracted into a new &lt;code&gt;Map&lt;/code&gt;. Then only the &lt;em&gt;secondary&lt;/em&gt; attributes from the original &lt;code&gt;Map&lt;/code&gt; are added to those in the new &lt;code&gt;Map&lt;/code&gt;. Thus the values of primary attributes come solely from the &lt;code&gt;Font&lt;/code&gt;, and the values of secondary attributes originate with the &lt;code&gt;Font&lt;/code&gt; but can be overridden by other values in the &lt;code&gt;Map&lt;/code&gt;.</source>
          <target state="translated">새 &lt;code&gt;Map&lt;/code&gt; 을 생성하려면 먼저 &lt;code&gt;FONT&lt;/code&gt; 속성 에서 &lt;code&gt;Font&lt;/code&gt; 를 가져 오고 &lt;em&gt;모든&lt;/em&gt; 속성을 새 &lt;code&gt;Map&lt;/code&gt; 으로 추출 합니다. 그런 다음 원래 &lt;code&gt;Map&lt;/code&gt; 의 &lt;em&gt;보조&lt;/em&gt; 속성 만 새 &lt;code&gt;Map&lt;/code&gt; 속성 에 추가됩니다 . 따라서 기본 속성의 값은 전적으로 &lt;code&gt;Font&lt;/code&gt; 에서 가져오고 보조 속성의 값은 &lt;code&gt;Font&lt;/code&gt; 에서 시작 되지만 &lt;code&gt;Map&lt;/code&gt; 의 다른 값에 의해 재정의 될 수 있습니다 .&lt;em&gt;&lt;/em&gt;&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a7068f16c1368da1e38328378e79e407c5026688" translate="yes" xml:space="preserve">
          <source>To get access to the methods in the &lt;code&gt;Joinable&lt;/code&gt; interface, a &lt;code&gt;RowSet&lt;/code&gt; object implements at least one of the five standard &lt;code&gt;RowSet&lt;/code&gt; interfaces and also implements the &lt;code&gt;Joinable&lt;/code&gt; interface. In addition, most &lt;code&gt;RowSet&lt;/code&gt; objects extend the &lt;code&gt;BaseRowSet&lt;/code&gt; class. For example:</source>
          <target state="translated">&lt;code&gt;Joinable&lt;/code&gt; 인터페이스 의 메소드에 액세스하기 위해 &lt;code&gt;RowSet&lt;/code&gt; 객체는 5 개의 표준 &lt;code&gt;RowSet&lt;/code&gt; 인터페이스 중 하나 이상 을 구현하고 &lt;code&gt;Joinable&lt;/code&gt; 인터페이스 도 구현합니다 . 또한 대부분의 &lt;code&gt;RowSet&lt;/code&gt; 객체는 &lt;code&gt;BaseRowSet&lt;/code&gt; 클래스를 확장합니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="52b92f4e22e96872d0eeaf2d39a7292f5d628910" translate="yes" xml:space="preserve">
          <source>To get all prefixes bound to a Namespace URI in the current scope, use &lt;a href=&quot;#getPrefixes(java.lang.String)&quot;&gt;&lt;code&gt;getPrefixes(String namespaceURI)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">현재 범위에서 네임 스페이스 URI에 바인딩 된 모든 접두사를 가져 오려면 &lt;a href=&quot;#getPrefixes(java.lang.String)&quot;&gt; &lt;code&gt;getPrefixes(String namespaceURI)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="d0c3f50bdc8e06b0b1c0cba75b086eb2e0b2a934" translate="yes" xml:space="preserve">
          <source>To get all the print data for a multidoc print job, a Print Service proxy could use either of two patterns:</source>
          <target state="translated">다중 문서 인쇄 작업에 대한 모든 인쇄 데이터를 가져 오기 위해 인쇄 서비스 프록시는 다음 두 패턴 중 하나를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db85f570d409f6ee337c4648a89a556a12485b24" translate="yes" xml:space="preserve">
          <source>To get inherited annotations as well, use &lt;a href=&quot;../util/elements#getAllAnnotationMirrors(javax.lang.model.element.Element)&quot;&gt;&lt;code&gt;getAllAnnotationMirrors&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상속 된 주석도 얻으려면 &lt;a href=&quot;../util/elements#getAllAnnotationMirrors(javax.lang.model.element.Element)&quot;&gt; &lt;code&gt;getAllAnnotationMirrors&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="53f9c125af6f96d56cd5afcb02f4e6777d74a3ee" translate="yes" xml:space="preserve">
          <source>To get inherited annotations as well, use &lt;a href=&quot;../util/elements#getAllAnnotationMirrors-javax.lang.model.element.Element-&quot;&gt;&lt;code&gt;getAllAnnotationMirrors&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상속 된 주석도 얻으려면 &lt;a href=&quot;../util/elements#getAllAnnotationMirrors-javax.lang.model.element.Element-&quot;&gt; &lt;code&gt;getAllAnnotationMirrors&lt;/code&gt; 를&lt;/a&gt; 사용 하십시오 .</target>
        </trans-unit>
        <trans-unit id="c0d6c5ca9be6faabe7c5c4b78779fe5ee5e0974e" translate="yes" xml:space="preserve">
          <source>To get the full nanosecond resolution event time, use &lt;a href=&quot;#getInstant()&quot;&gt;&lt;code&gt;getInstant()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">전체 나노초 해상도 이벤트 시간을 얻으려면 &lt;a href=&quot;#getInstant()&quot;&gt; &lt;code&gt;getInstant()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0edf530fac42c6b9feda41e41a432619d4db95aa" translate="yes" xml:space="preserve">
          <source>To get the pseudo-type corresponding to a package or module, call &lt;code&gt;asType()&lt;/code&gt; on the element modeling the &lt;a href=&quot;../element/packageelement&quot;&gt;package&lt;/a&gt; or &lt;a href=&quot;../element/moduleelement&quot;&gt;module&lt;/a&gt;. Names can be converted to elements for packages or modules using &lt;a href=&quot;elements#getPackageElement(java.lang.CharSequence)&quot;&gt;&lt;code&gt;Elements.getPackageElement(CharSequence)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;elements#getModuleElement(java.lang.CharSequence)&quot;&gt;&lt;code&gt;Elements.getModuleElement(CharSequence)&lt;/code&gt;&lt;/a&gt;, respectively.</source>
          <target state="translated">패키지 또는 모듈 호출에 해당하는 의사 형 얻으려면 &lt;code&gt;asType()&lt;/code&gt; 모델링 요소에 &lt;a href=&quot;../element/packageelement&quot;&gt;패키지&lt;/a&gt; 또는 &lt;a href=&quot;../element/moduleelement&quot;&gt;모듈을&lt;/a&gt; . 이름은 각각 &lt;a href=&quot;elements#getPackageElement(java.lang.CharSequence)&quot;&gt; &lt;code&gt;Elements.getPackageElement(CharSequence)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;elements#getModuleElement(java.lang.CharSequence)&quot;&gt; &lt;code&gt;Elements.getModuleElement(CharSequence)&lt;/code&gt; &lt;/a&gt; 사용하여 패키지 또는 모듈의 요소로 변환 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8be391c458cb78822f7c5bfc69617ab46cc68a26" translate="yes" xml:space="preserve">
          <source>To get the usable bounds of a single display, use &lt;code&gt;GraphicsConfiguration.getBounds()&lt;/code&gt; and &lt;code&gt;Toolkit.getScreenInsets()&lt;/code&gt;.</source>
          <target state="translated">단일 디스플레이의 사용 가능한 경계를 얻으려면 &lt;code&gt;GraphicsConfiguration.getBounds()&lt;/code&gt; 및 &lt;code&gt;Toolkit.getScreenInsets()&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="734faec3693f1b81c8049c2b2612c8bba8fe7efe" translate="yes" xml:space="preserve">
          <source>To give the &quot;backup&quot; service a proxiable nfs service ticket the target permission might be specified:</source>
          <target state="translated">&quot;백업&quot;서비스에 프록시 가능 nfs 서비스 티켓을 제공하려면 대상 권한을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2c844926cf4aa3b93bd05012b27600af333a76db" translate="yes" xml:space="preserve">
          <source>To have an exception thrown if the conversion is inexact (in other words if a nonzero fractional part is discarded), use the &lt;a href=&quot;#toBigIntegerExact()&quot;&gt;&lt;code&gt;toBigIntegerExact()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">변환이 정확하지 않은 경우 (즉, 0이 아닌 소수 부분이 삭제 된 경우) 예외가 발생하도록하려면 &lt;a href=&quot;#toBigIntegerExact()&quot;&gt; &lt;code&gt;toBigIntegerExact()&lt;/code&gt; &lt;/a&gt; 메서드를 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="4efd0f5f6873e8bf5dda3afa59ebf8833c4b8c6e" translate="yes" xml:space="preserve">
          <source>To have an exception thrown if the conversion is inexact (in other words if a nonzero fractional part is discarded), use the &lt;a href=&quot;bigdecimal#toBigIntegerExact--&quot;&gt;&lt;code&gt;toBigIntegerExact()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">변환이 정확하지 않은 경우 (즉, 0이 아닌 소수 부분을 버린 경우) 예외를 발생 시키려면 &lt;a href=&quot;bigdecimal#toBigIntegerExact--&quot;&gt; &lt;code&gt;toBigIntegerExact()&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="7cd77572030e4bc183f87ba9e0b647921b604b65" translate="yes" xml:space="preserve">
          <source>To help ensure portability of Java programs, the definitions of some of the numeric functions in this package require that they produce the same results as certain published algorithms. These algorithms are available from the well-known network library &lt;code&gt;netlib&lt;/code&gt; as the package &quot;Freely Distributable Math Library,&quot; &lt;a href=&quot;ftp://ftp.netlib.org/fdlibm.tar&quot;&gt;&lt;code&gt;fdlibm&lt;/code&gt;&lt;/a&gt;. These algorithms, which are written in the C programming language, are then to be understood as executed with all floating-point operations following the rules of Java floating-point arithmetic.</source>
          <target state="translated">Java 프로그램의 이식성을 보장하기 위해이 패키지의 일부 숫자 함수를 정의하려면 공개 된 특정 알고리즘과 동일한 결과를 생성해야합니다. 이 알고리즘은 잘 알려진 네트워크 라이브러리 &lt;code&gt;netlib&lt;/code&gt; 에서 &quot;Freely Distributable Math Library&quot; &lt;a href=&quot;ftp://ftp.netlib.org/fdlibm.tar&quot;&gt; &lt;code&gt;fdlibm&lt;/code&gt; &lt;/a&gt; 패키지 로 제공 됩니다. C 프로그래밍 언어로 작성된 이러한 알고리즘은 Java 부동 소수점 산술 규칙에 따라 모든 부동 소수점 연산으로 실행되는 것으로 이해됩니다.</target>
        </trans-unit>
        <trans-unit id="2a8d5f6562cab98eef5756c5b46c016af721d200" translate="yes" xml:space="preserve">
          <source>To help ensure portability of Java programs, the definitions of some of the numeric functions in this package require that they produce the same results as certain published algorithms. These algorithms are available from the well-known network library &lt;code&gt;netlib&lt;/code&gt; as the package &quot;Freely Distributable Math Library,&quot; &lt;a href=&quot;https://www.netlib.org/fdlibm/&quot;&gt;&lt;code&gt;fdlibm&lt;/code&gt;&lt;/a&gt;. These algorithms, which are written in the C programming language, are then to be understood as executed with all floating-point operations following the rules of Java floating-point arithmetic.</source>
          <target state="translated">Java 프로그램의 이식성을 보장하기 위해이 패키지의 일부 숫자 함수 정의는 게시 된 특정 알고리즘과 동일한 결과를 생성해야합니다. 이러한 알고리즘은 잘 알려진 네트워크 라이브러리 &lt;code&gt;netlib&lt;/code&gt; 에서 &quot;Freely Distributable Math Library&quot;패키지 인 &lt;a href=&quot;https://www.netlib.org/fdlibm/&quot;&gt; &lt;code&gt;fdlibm&lt;/code&gt; 에서 사용할 수&lt;/a&gt; 있습니다. C 프로그래밍 언어로 작성된 이러한 알고리즘은 Java 부동 소수점 산술 규칙을 따르는 모든 부동 소수점 연산으로 실행되는 것으로 이해되어야합니다.</target>
        </trans-unit>
        <trans-unit id="5e4c97873af70f0195b146c1979f0db569946b5a" translate="yes" xml:space="preserve">
          <source>To implement a list the programmer needs only to extend this class and provide implementations for the &lt;code&gt;listIterator&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; methods. For an unmodifiable list, the programmer need only implement the list iterator's &lt;code&gt;hasNext&lt;/code&gt;, &lt;code&gt;next&lt;/code&gt;, &lt;code&gt;hasPrevious&lt;/code&gt;, &lt;code&gt;previous&lt;/code&gt; and &lt;code&gt;index&lt;/code&gt; methods.</source>
          <target state="translated">리스트를 구현하려면 프로그래머는이 클래스를 확장하고 &lt;code&gt;listIterator&lt;/code&gt; 및 &lt;code&gt;size&lt;/code&gt; 메소드에 대한 구현 만 제공하면 됩니다. 수정 불가능한리스트의 경우, 프로그래머는리스트 반복자의 &lt;code&gt;hasNext&lt;/code&gt; , &lt;code&gt;next&lt;/code&gt; , &lt;code&gt;hasPrevious&lt;/code&gt; , &lt;code&gt;previous&lt;/code&gt; 및 &lt;code&gt;index&lt;/code&gt; 메소드 만 구현하면됩니다 .</target>
        </trans-unit>
        <trans-unit id="86969fc9fa9ff65fcf2df680df949b538474ae52" translate="yes" xml:space="preserve">
          <source>To implement a modifiable collection, the programmer must additionally override this class's &lt;code&gt;add&lt;/code&gt; method (which otherwise throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;), and the iterator returned by the &lt;code&gt;iterator&lt;/code&gt; method must additionally implement its &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">수정 가능한 컬렉션을 구현하려면 프로그래머가이 클래스의 &lt;code&gt;add&lt;/code&gt; 메서드를 추가로 재정의해야하며 (그렇지 않으면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 ) &lt;code&gt;iterator&lt;/code&gt; 메서드에서 반환 된 반복자 는 &lt;code&gt;remove&lt;/code&gt; 메서드를 추가로 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b1560ee47843b7bf3309272a76f86d437bc8f046" translate="yes" xml:space="preserve">
          <source>To implement a modifiable list, the programmer must additionally override the &lt;a href=&quot;#set(int,E)&quot;&gt;&lt;code&gt;set(int, E)&lt;/code&gt;&lt;/a&gt; method (which otherwise throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;). If the list is variable-size the programmer must additionally override the &lt;a href=&quot;#add(int,E)&quot;&gt;&lt;code&gt;add(int, E)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#remove(int)&quot;&gt;&lt;code&gt;remove(int)&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">수정 가능한 목록을 구현하려면 프로그래머는 &lt;a href=&quot;#set(int,E)&quot;&gt; &lt;code&gt;set(int, E)&lt;/code&gt; &lt;/a&gt; 메서드를 추가로 재정의해야합니다 (그렇지 않으면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다). 목록이 가변 크기 인 경우 프로그래머는 &lt;a href=&quot;#add(int,E)&quot;&gt; &lt;code&gt;add(int, E)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#remove(int)&quot;&gt; &lt;code&gt;remove(int)&lt;/code&gt; &lt;/a&gt; 메서드를 추가로 재정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9decea476179857efb8167e4eb3423dfe587d678" translate="yes" xml:space="preserve">
          <source>To implement a modifiable list, the programmer must additionally override the &lt;a href=&quot;abstractlist#set-int-E-&quot;&gt;&lt;code&gt;set(int, E)&lt;/code&gt;&lt;/a&gt; method (which otherwise throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;). If the list is variable-size the programmer must additionally override the &lt;a href=&quot;abstractlist#add-int-E-&quot;&gt;&lt;code&gt;add(int, E)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;abstractlist#remove-int-&quot;&gt;&lt;code&gt;remove(int)&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">수정 가능한 목록을 구현하려면 프로그래머가 &lt;a href=&quot;abstractlist#set-int-E-&quot;&gt; &lt;code&gt;set(int, E)&lt;/code&gt; &lt;/a&gt; 메서드를 추가로 재정의해야합니다 (그렇지 않으면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 발생 ). 리스트가 가변 크기 인 경우 프로그래머는 &lt;a href=&quot;abstractlist#add-int-E-&quot;&gt; &lt;code&gt;add(int, E)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;abstractlist#remove-int-&quot;&gt; &lt;code&gt;remove(int)&lt;/code&gt; &lt;/a&gt; 메소드를 추가로 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="aa7303ac29218f70d971d81a83ee93b68db42140" translate="yes" xml:space="preserve">
          <source>To implement a modifiable map, the programmer must additionally override this class's &lt;code&gt;put&lt;/code&gt; method (which otherwise throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;), and the iterator returned by &lt;code&gt;entrySet().iterator()&lt;/code&gt; must additionally implement its &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">수정 가능한 맵을 구현하려면 프로그래머가이 클래스의 &lt;code&gt;put&lt;/code&gt; 메소드를 추가로 재정의해야하며 (그렇지 않으면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 ), &lt;code&gt;entrySet().iterator()&lt;/code&gt; 의해 리턴 된 반복자 는 &lt;code&gt;remove&lt;/code&gt; 메소드를 추가로 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f4f28c36fafbaae1ba1c6b2a0d879b13be8b6d8f" translate="yes" xml:space="preserve">
          <source>To implement a spliterator an extending class need only implement &lt;a href=&quot;spliterator.ofdouble#tryAdvance-java.util.function.DoubleConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfDouble.tryAdvance(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt; tryAdvance}. The extending class should override &lt;a href=&quot;spliterator.ofdouble#forEachRemaining-java.util.function.DoubleConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfDouble.forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt;&lt;/a&gt; forEach} if it can provide a more performant implementation.</source>
          <target state="translated">스플리터를 구현하려면 확장 클래스는 &lt;a href=&quot;spliterator.ofdouble#tryAdvance-java.util.function.DoubleConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfDouble.tryAdvance(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt; tryAdvance} 만 구현 하면 됩니다. 확장 클래스는 성능이 뛰어난 구현을 제공 할 수있는 경우 &lt;a href=&quot;spliterator.ofdouble#forEachRemaining-java.util.function.DoubleConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfDouble.forEachRemaining(java.util.function.DoubleConsumer)&lt;/code&gt; &lt;/a&gt; forEach}를 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5cc0eceff27a04f1eb4e78d0fa0f239a31937f3c" translate="yes" xml:space="preserve">
          <source>To implement a spliterator an extending class need only implement &lt;a href=&quot;spliterator.ofint#tryAdvance-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfInt.tryAdvance(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt; tryAdvance}. The extending class should override &lt;a href=&quot;spliterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt;&lt;/a&gt; forEach} if it can provide a more performant implementation.</source>
          <target state="translated">스플리터를 구현하려면 확장 클래스는 &lt;a href=&quot;spliterator.ofint#tryAdvance-java.util.function.IntConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfInt.tryAdvance(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt; tryAdvance} 만 구현 하면 됩니다. 확장 클래스는 성능이 뛰어난 구현을 제공 할 수있는 경우 &lt;a href=&quot;spliterator.ofint#forEachRemaining-java.util.function.IntConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfInt.forEachRemaining(java.util.function.IntConsumer)&lt;/code&gt; &lt;/a&gt; forEach}를 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="9d003ef038d7bc2222c0d7ed292f23107be6608e" translate="yes" xml:space="preserve">
          <source>To implement a spliterator an extending class need only implement &lt;a href=&quot;spliterator.oflong#tryAdvance-java.util.function.LongConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfLong.tryAdvance(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt; tryAdvance}. The extending class should override &lt;a href=&quot;spliterator.oflong#forEachRemaining-java.util.function.LongConsumer-&quot;&gt;&lt;code&gt;Spliterator.OfLong.forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt;&lt;/a&gt; forEach} if it can provide a more performant implementation.</source>
          <target state="translated">스플리터를 구현하려면 확장 클래스는 &lt;a href=&quot;spliterator.oflong#tryAdvance-java.util.function.LongConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfLong.tryAdvance(java.util.function.LongConsumer)&lt;/code&gt; &lt;/a&gt; tryAdvance} 만 구현 하면 됩니다. 확장 클래스는 성능이 뛰어난 구현을 제공 할 수있는 경우 &lt;a href=&quot;spliterator.oflong#forEachRemaining-java.util.function.LongConsumer-&quot;&gt; &lt;code&gt;Spliterator.OfLong.forEachRemaining(java.util.function.LongConsumer)&lt;/code&gt; &lt;/a&gt; forEach}를 대체해야합니다 .</target>
        </trans-unit>
        <trans-unit id="f78b953d621ef8dd5612e1e265c23844fa76bede" translate="yes" xml:space="preserve">
          <source>To implement a spliterator an extending class need only implement &lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt;&lt;code&gt;tryAdvance&lt;/code&gt;&lt;/a&gt;. The extending class should override &lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt;&lt;code&gt;forEachRemaining&lt;/code&gt;&lt;/a&gt; if it can provide a more performant implementation.</source>
          <target state="translated">분할자를 구현하려면 확장 클래스는 tryAdvance 만 구현 &lt;a href=&quot;spliterator.ofprimitive#tryAdvance(T_CONS)&quot;&gt; &lt;code&gt;tryAdvance&lt;/code&gt; &lt;/a&gt; 됩니다. 확장 클래스는 더 성능이 좋은 구현을 제공 할 수있는 경우 &lt;a href=&quot;spliterator.ofprimitive#forEachRemaining(T_CONS)&quot;&gt; &lt;code&gt;forEachRemaining&lt;/code&gt; &lt;/a&gt; 을 재정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="671463582399b1ae06cf4aed172d63ff06a22dcf" translate="yes" xml:space="preserve">
          <source>To implement an unmodifiable collection, the programmer needs only to extend this class and provide implementations for the &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;size&lt;/code&gt; methods. (The iterator returned by the &lt;code&gt;iterator&lt;/code&gt; method must implement &lt;code&gt;hasNext&lt;/code&gt; and &lt;code&gt;next&lt;/code&gt;.)</source>
          <target state="translated">수정 불가능한 콜렉션을 구현하려면 프로그래머는이 클래스를 확장하고 &lt;code&gt;iterator&lt;/code&gt; 및 &lt;code&gt;size&lt;/code&gt; 메소드에 대한 구현 만 제공하면 됩니다 . (반복자에 의해 반환 된 &lt;code&gt;iterator&lt;/code&gt; 구현해야하는 방법 &lt;code&gt;hasNext&lt;/code&gt; 및 &lt;code&gt;next&lt;/code&gt; .)</target>
        </trans-unit>
        <trans-unit id="616c7f95abdc4cbce8cbe5c6d1a139815d544745" translate="yes" xml:space="preserve">
          <source>To implement an unmodifiable list, the programmer needs only to extend this class and provide implementations for the &lt;a href=&quot;#get(int)&quot;&gt;&lt;code&gt;get(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;list#size()&quot;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">수정할 수없는 목록을 구현하려면 프로그래머는이 클래스를 확장하고 &lt;a href=&quot;#get(int)&quot;&gt; &lt;code&gt;get(int)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;list#size()&quot;&gt; &lt;code&gt;size()&lt;/code&gt; &lt;/a&gt; 메서드에 대한 구현을 제공하기 만하면됩니다.</target>
        </trans-unit>
        <trans-unit id="5430a4e8b9de5cc4540fc3c7ac301e5ebbad4405" translate="yes" xml:space="preserve">
          <source>To implement an unmodifiable list, the programmer needs only to extend this class and provide implementations for the &lt;a href=&quot;abstractlist#get-int-&quot;&gt;&lt;code&gt;get(int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;list#size--&quot;&gt;&lt;code&gt;size()&lt;/code&gt;&lt;/a&gt; methods.</source>
          <target state="translated">수정 불가능한 목록을 구현하려면 프로그래머는이 클래스를 확장하고 &lt;a href=&quot;abstractlist#get-int-&quot;&gt; &lt;code&gt;get(int)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;list#size--&quot;&gt; &lt;code&gt;size()&lt;/code&gt; &lt;/a&gt; 메소드에 대한 구현 만 제공하면 됩니다.</target>
        </trans-unit>
        <trans-unit id="e46f4737bb04074017c53a93c53e20d7d872b78c" translate="yes" xml:space="preserve">
          <source>To implement an unmodifiable map, the programmer needs only to extend this class and provide an implementation for the &lt;code&gt;entrySet&lt;/code&gt; method, which returns a set-view of the map's mappings. Typically, the returned set will, in turn, be implemented atop &lt;code&gt;AbstractSet&lt;/code&gt;. This set should not support the &lt;code&gt;add&lt;/code&gt; or &lt;code&gt;remove&lt;/code&gt; methods, and its iterator should not support the &lt;code&gt;remove&lt;/code&gt; method.</source>
          <target state="translated">수정 불가능한 맵을 구현하려면 프로그래머는이 클래스를 확장하고 &lt;code&gt;entrySet&lt;/code&gt; 메소드에 대한 구현 만 제공하면됩니다.이 메소드는 맵 맵핑의 설정보기를 리턴합니다. 일반적으로 반환 된 세트는 &lt;code&gt;AbstractSet&lt;/code&gt; 위에 구현 됩니다. 이 세트는 &lt;code&gt;add&lt;/code&gt; 또는 &lt;code&gt;remove&lt;/code&gt; 메소드를 지원하지 않아야하며 반복자는 &lt;code&gt;remove&lt;/code&gt; 메소드를 지원하지 않아야합니다 .</target>
        </trans-unit>
        <trans-unit id="b60c40eb41f5b2d0799d39deb0d1ec4e177d5ce6" translate="yes" xml:space="preserve">
          <source>To implement operations based on the class of an &lt;code&gt;
 Element&lt;/code&gt; object, either use a &lt;a href=&quot;elementvisitor&quot;&gt;visitor&lt;/a&gt; or use the result of the &lt;a href=&quot;#getKind()&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;
 instanceof&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; necessarily a reliable idiom for determining the effective class of an object in this modeling hierarchy since an implementation may choose to have a single object implement multiple &lt;code&gt;Element&lt;/code&gt; subinterfaces.</source>
          <target state="translated">&lt;code&gt; Element&lt;/code&gt; 객체 의 클래스를 기반으로 작업을 구현하려면 &lt;a href=&quot;elementvisitor&quot;&gt;방문자를&lt;/a&gt; 사용하거나 &lt;a href=&quot;#getKind()&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt; 메서드 의 결과를 사용합니다 . 구현시 단일 개체가 여러 &lt;code&gt;Element&lt;/code&gt; 하위 인터페이스를 구현하도록 선택할 수 있으므로 &lt;code&gt; instanceof&lt;/code&gt; 를 사용 하는 것이이 모델링 계층 구조에서 개체의 효과적인 클래스를 결정하는 데 반드시 신뢰할 수있는 관용구 는 &lt;em&gt;아닙니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="37b7894324f4a64e553c356ad8a34880b8ee98eb" translate="yes" xml:space="preserve">
          <source>To implement operations based on the class of an &lt;code&gt;
 TypeMirror&lt;/code&gt; object, either use a &lt;a href=&quot;typevisitor&quot;&gt;visitor&lt;/a&gt; or use the result of the &lt;a href=&quot;#getKind()&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;
 instanceof&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; necessarily a reliable idiom for determining the effective class of an object in this modeling hierarchy since an implementation may choose to have a single object implement multiple &lt;code&gt;TypeMirror&lt;/code&gt; subinterfaces.</source>
          <target state="translated">&lt;code&gt; TypeMirror&lt;/code&gt; 객체 의 클래스를 기반으로 작업을 구현하려면 &lt;a href=&quot;typevisitor&quot;&gt;방문자를&lt;/a&gt; 사용하거나 &lt;a href=&quot;#getKind()&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt; 메서드 의 결과를 사용합니다 . 구현시 단일 개체가 여러 &lt;code&gt;TypeMirror&lt;/code&gt; 하위 인터페이스를 구현하도록 선택할 수 있으므로 &lt;code&gt; instanceof&lt;/code&gt; 를 사용 하는 것이이 모델링 계층 구조에서 개체의 효과적인 클래스를 결정하는 데 반드시 신뢰할 수있는 관용구 는 &lt;em&gt;아닙니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="4da9eb624b21389bac68e88ef77ffb98422a9b5d" translate="yes" xml:space="preserve">
          <source>To implement operations based on the class of an &lt;code&gt;Element&lt;/code&gt; object, either use a &lt;a href=&quot;elementvisitor&quot;&gt;visitor&lt;/a&gt; or use the result of the &lt;a href=&quot;element#getKind--&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;instanceof&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; necessarily a reliable idiom for determining the effective class of an object in this modeling hierarchy since an implementation may choose to have a single object implement multiple &lt;code&gt;Element&lt;/code&gt; subinterfaces.</source>
          <target state="translated">&lt;code&gt;Element&lt;/code&gt; 객체 의 클래스를 기반으로 작업을 구현하려면 &lt;a href=&quot;elementvisitor&quot;&gt;방문자를&lt;/a&gt; 사용하거나 &lt;a href=&quot;element#getKind--&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt; 메서드 의 결과를 사용하십시오 . 구현시 단일 객체가 여러 &lt;code&gt;Element&lt;/code&gt; 서브 인터페이스를 구현하도록 선택할 수 있으므로 &lt;code&gt;instanceof&lt;/code&gt; 를 사용 하는 것이이 모델링 계층에서 객체의 유효 클래스를 결정하는 데 반드시 신뢰할만한 관용구 는 &lt;em&gt;아닙니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="56c3983484a828bf0458dd2e79533731da677b55" translate="yes" xml:space="preserve">
          <source>To implement operations based on the class of an &lt;code&gt;TypeMirror&lt;/code&gt; object, either use a &lt;a href=&quot;typevisitor&quot;&gt;visitor&lt;/a&gt; or use the result of the &lt;a href=&quot;typemirror#getKind--&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; method. Using &lt;code&gt;instanceof&lt;/code&gt; is &lt;em&gt;not&lt;/em&gt; necessarily a reliable idiom for determining the effective class of an object in this modeling hierarchy since an implementation may choose to have a single object implement multiple &lt;code&gt;TypeMirror&lt;/code&gt; subinterfaces.</source>
          <target state="translated">&lt;code&gt;TypeMirror&lt;/code&gt; 객체 의 클래스를 기반으로 작업을 구현하려면 &lt;a href=&quot;typevisitor&quot;&gt;방문자를&lt;/a&gt; 사용하거나 &lt;a href=&quot;typemirror#getKind--&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt; 메서드 의 결과를 사용하십시오 . 구현시 단일 객체가 여러 &lt;code&gt;TypeMirror&lt;/code&gt; 하위 인터페이스를 구현하도록 선택할 수 있으므로 &lt;code&gt;instanceof&lt;/code&gt; 를 사용 하는 것이이 모델링 계층에서 객체의 유효 클래스를 결정하는 데 반드시 신뢰할만한 관용구 는 &lt;em&gt;아닙니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="420dda2755911b0bdb93ee79ff62073e76ad6d16" translate="yes" xml:space="preserve">
          <source>To incorporate a new &lt;code&gt;DragSourceContext&lt;/code&gt; subclass, subclass &lt;code&gt;DragSource&lt;/code&gt; and override this method.</source>
          <target state="translated">새 &lt;code&gt;DragSourceContext&lt;/code&gt; 하위 클래스 를 통합하려면 DragSource를 하위 클래스로 &lt;code&gt;DragSource&lt;/code&gt; 메서드를 재정의합니다.</target>
        </trans-unit>
        <trans-unit id="48cdf821a79e1d7eb2270bd4ff092652154a8722" translate="yes" xml:space="preserve">
          <source>To indicate that a task of unknown length is executing, you can put a progress bar into indeterminate mode. While the bar is in indeterminate mode, it animates constantly to show that work is occurring. As soon as you can determine the task's length and amount of progress, you should update the progress bar's value and switch it back to determinate mode.</source>
          <target state="translated">길이를 알 수없는 작업이 실행 중임을 나타 내기 위해 진행률 표시 줄을 미정 모드로 설정할 수 있습니다. 막대가 불확정 모드에있는 동안 작업이 진행되고 있음을 보여주기 위해 지속적으로 애니메이션됩니다. 작업의 길이와 진행 정도를 확인할 수있는 즉시 진행률 표시 줄의 값을 업데이트하고 결정 모드로 다시 전환해야합니다.</target>
        </trans-unit>
        <trans-unit id="09fd84430bb7e24aa792b7ad96e5b6fdd76e61a4" translate="yes" xml:space="preserve">
          <source>To indicate the root has changed, childIndices and children will be null.</source>
          <target state="translated">루트가 변경되었음을 나타 내기 위해 childIndices 및 children은 null이됩니다.</target>
        </trans-unit>
        <trans-unit id="b4be84618ead6d10538cc9ccc258161cb330d82f" translate="yes" xml:space="preserve">
          <source>To instantiate a &lt;code&gt;PKIXBuilderParameters&lt;/code&gt; object, an application must specify one or more</source>
          <target state="translated">&lt;code&gt;PKIXBuilderParameters&lt;/code&gt; 객체 를 인스턴스화하려면 응용 프로그램에서 하나 이상을 지정해야합니다</target>
        </trans-unit>
        <trans-unit id="a1248ff0d2cedefb6820edb5e4b125b407119479" translate="yes" xml:space="preserve">
          <source>To instantiate a &lt;code&gt;PKIXParameters&lt;/code&gt; object, an application must specify one or more</source>
          <target state="translated">&lt;code&gt;PKIXParameters&lt;/code&gt; 객체 를 인스턴스화하려면 응용 프로그램에서 하나 이상을 지정해야합니다</target>
        </trans-unit>
        <trans-unit id="e7a2a17113f40ab1a2b8b839f4be030b470dc7d9" translate="yes" xml:space="preserve">
          <source>To instantiate the new class, UnresolvedPermission assumes the class provides a zero, one, and/or two-argument constructor. The zero-argument constructor would be used to instantiate a permission without a name and without actions. A one-arg constructor is assumed to take a &lt;code&gt;String&lt;/code&gt; name as input, and a two-arg constructor is assumed to take a &lt;code&gt;String&lt;/code&gt; name and &lt;code&gt;String&lt;/code&gt; actions as input. UnresolvedPermission may invoke a constructor with a &lt;code&gt;null&lt;/code&gt; name and/or actions. If an appropriate permission constructor is not available, the UnresolvedPermission is ignored and the relevant permission will not be granted to executing code.</source>
          <target state="translated">새 클래스를 인스턴스화하기 위해 UnresolvedPermission은 클래스가 0, 1 및 / 또는 2 인수 생성자를 제공한다고 가정합니다. 인수없는 생성자는 이름과 동작없이 권한을 인스턴스화하는 데 사용됩니다. 1 개 인수 생성자는 &lt;code&gt;String&lt;/code&gt; 이름을 입력으로 사용하고 2 개 인수 생성자는 &lt;code&gt;String&lt;/code&gt; 이름과 &lt;code&gt;String&lt;/code&gt; 작업을 입력으로 사용 한다고 가정합니다 . UnresolvedPermission은 &lt;code&gt;null&lt;/code&gt; 이름 및 / 또는 작업 으로 생성자를 호출 할 수 있습니다 . 적절한 권한 생성자를 사용할 수 없으면 UnresolvedPermission이 무시되고 관련 권한이 코드 실행에 부여되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="59dd951cff89541b8bd5f93b0411b551c7798c0c" translate="yes" xml:space="preserve">
          <source>To interpret localized string representations of a floating-point value, use subclasses of &lt;a href=&quot;../text/numberformat&quot;&gt;&lt;code&gt;NumberFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">부동 소수점 값의 지역화 된 문자열 표현을 해석하려면 &lt;a href=&quot;../text/numberformat&quot;&gt; &lt;code&gt;NumberFormat&lt;/code&gt; 의&lt;/a&gt; 서브 클래스를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4db3a57d60a5194adb7c2304e016a6c3b230f081" translate="yes" xml:space="preserve">
          <source>To issue a complete symbolic type descriptor, the compiler must also determine the return type (if polymorphic). This is based on a cast on the method invocation expression, if there is one, or else &lt;code&gt;Object&lt;/code&gt; if the invocation is an expression, or else &lt;code&gt;void&lt;/code&gt; if the invocation is a statement. The cast may be to a primitive type (but not &lt;code&gt;void&lt;/code&gt;).</source>
          <target state="translated">완전한 기호 유형 설명자를 발행하려면 컴파일러가 반환 유형도 결정해야합니다 (다형성 인 경우). 하나, 또는 다른이 경우는, 메소드 호출 식의 캐스트를 기반으로 &lt;code&gt;Object&lt;/code&gt; 호출이 식, 또는 다른 경우 &lt;code&gt;void&lt;/code&gt; 호출이 성명 경우. 캐스트는 기본 유형일 수 있습니다 (그러나 &lt;code&gt;void&lt;/code&gt; 가 아님).</target>
        </trans-unit>
        <trans-unit id="5466cc76778431e496f99d3381063b005b2172db" translate="yes" xml:space="preserve">
          <source>To issue a complete symbolic type descriptor, the compiler must also determine the return type. This is based on a cast on the method invocation expression, if there is one, or else &lt;code&gt;Object&lt;/code&gt; if the invocation is an expression or else &lt;code&gt;void&lt;/code&gt; if the invocation is a statement. The cast may be to a primitive type (but not &lt;code&gt;void&lt;/code&gt;).</source>
          <target state="translated">완전한 기호 유형 설명자를 발행하려면 컴파일러도 리턴 유형을 결정해야합니다. 이것은 메소드 호출 표현식 (있는 경우)에 대한 캐스트 또는 호출이 표현식 인 경우 &lt;code&gt;Object&lt;/code&gt; 또는 호출이 명령문 인 경우 &lt;code&gt;void&lt;/code&gt; 를 기반으로합니다. 캐스트는 기본 유형이 될 수 있지만 &lt;code&gt;void&lt;/code&gt; 는 아닙니다 .</target>
        </trans-unit>
        <trans-unit id="aa22a0c21e50c88f222e2494533202bc0996e2a1" translate="yes" xml:space="preserve">
          <source>To issue a complete symbolic type descriptor, the compiler must also determine the return type. This is based on a cast on the method invocation expression, if there is one, or else &lt;code&gt;Object&lt;/code&gt; if the invocation is an expression, or else &lt;code&gt;void&lt;/code&gt; if the invocation is a statement. The cast may be to a primitive type (but not &lt;code&gt;void&lt;/code&gt;).</source>
          <target state="translated">완전한 기호 형식 설명자를 발행하려면 컴파일러에서 반환 형식도 결정해야합니다. 하나, 또는 다른이 경우는, 메소드 호출 식의 캐스트를 기반으로 &lt;code&gt;Object&lt;/code&gt; 호출이 식, 또는 다른 경우 &lt;code&gt;void&lt;/code&gt; 호출이 성명 경우. 캐스트는 기본 유형일 수 있습니다 (그러나 &lt;code&gt;void&lt;/code&gt; 가 아님).</target>
        </trans-unit>
        <trans-unit id="3862489804c9e4ccfb61d25cb12af67885cc894f" translate="yes" xml:space="preserve">
          <source>To iterate over the &lt;code&gt;true&lt;/code&gt; bits in a &lt;code&gt;BitSet&lt;/code&gt;, use the following loop:</source>
          <target state="translated">&lt;code&gt;BitSet&lt;/code&gt; 에서 &lt;code&gt;true&lt;/code&gt; 비트 를 반복하려면 다음 루프를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="32cbb9d1a2fb3260f1ec41175195b4ba0e499ea7" translate="yes" xml:space="preserve">
          <source>To learn what ports are available, you can retrieve port info objects through the &lt;a href=&quot;mixer#getSourceLineInfo()&quot;&gt;&lt;code&gt;getSourceLineInfo&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;mixer#getTargetLineInfo()&quot;&gt;&lt;code&gt;getTargetLineInfo&lt;/code&gt;&lt;/a&gt; methods of the &lt;code&gt;Mixer&lt;/code&gt; interface. Instances of the &lt;code&gt;Port.Info&lt;/code&gt; class may also be constructed and used to obtain lines matching the parameters specified in the &lt;code&gt;Port.Info&lt;/code&gt; object.</source>
          <target state="translated">사용 가능한 포트를 알아 보려면 &lt;code&gt;Mixer&lt;/code&gt; 인터페이스 의 &lt;a href=&quot;mixer#getSourceLineInfo()&quot;&gt; &lt;code&gt;getSourceLineInfo&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;mixer#getTargetLineInfo()&quot;&gt; &lt;code&gt;getTargetLineInfo&lt;/code&gt; &lt;/a&gt; 메서드를 통해 포트 정보 개체를 검색 할 수 있습니다. &lt;code&gt;Port.Info&lt;/code&gt; 클래스의 인스턴스를 구성하여 &lt;code&gt;Port.Info&lt;/code&gt; 개체에 지정된 매개 변수와 일치하는 줄을 얻을 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7d94124009c8104d9400754da5bae70b65e77522" translate="yes" xml:space="preserve">
          <source>To learn what ports are available, you can retrieve port info objects through the &lt;code&gt;&lt;a href=&quot;mixer#getSourceLineInfo--&quot;&gt;&lt;code&gt;getSourceLineInfo&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; and &lt;code&gt;&lt;a href=&quot;mixer#getTargetLineInfo--&quot;&gt;&lt;code&gt;getTargetLineInfo&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; methods of the &lt;code&gt;Mixer&lt;/code&gt; interface. Instances of the &lt;code&gt;Port.Info&lt;/code&gt; class may also be constructed and used to obtain lines matching the parameters specified in the &lt;code&gt;Port.Info&lt;/code&gt; object.</source>
          <target state="translated">사용 가능한 포트를 배우기 위해 &lt;code&gt;Mixer&lt;/code&gt; 인터페이스 의 &lt;code&gt;&lt;a href=&quot;mixer#getSourceLineInfo--&quot;&gt;&lt;code&gt;getSourceLineInfo&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 및 &lt;code&gt;&lt;a href=&quot;mixer#getTargetLineInfo--&quot;&gt;&lt;code&gt;getTargetLineInfo&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드를 통해 포트 정보 오브젝트를 검색 할 수 있습니다. &lt;code&gt;Port.Info&lt;/code&gt; 클래스의 인스턴스를 구성하여 &lt;code&gt;Port.Info&lt;/code&gt; 객체에 지정된 매개 변수와 일치하는 줄을 얻을 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="495bf9dd4be473b851836868abcd33a6ec1bfa7b" translate="yes" xml:space="preserve">
          <source>To load the JConsole plugins in JConsole, run:</source>
          <target state="translated">JConsole에서 JConsole 플러그인을로드하려면 다음을 실행하십시오.</target>
        </trans-unit>
        <trans-unit id="cca5ea87ce09aec7665e06c31b2fdc7ff940f7d1" translate="yes" xml:space="preserve">
          <source>To locate an encoder for a given encoding name it defines a static factory method which iterates through the known and available providers, returning only when it has located a suitable encoder or has run out of providers.</source>
          <target state="translated">지정된 인코딩 이름의 인코더를 찾기 위해 알려진 인코더와 사용 가능한 제공자를 반복하는 정적 팩토리 메소드를 정의하여 적합한 인코더를 찾거나 제공자가 부족한 경우에만 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="ac598dff30c7e6f4b3338e570c1a2ac571c32ca6" translate="yes" xml:space="preserve">
          <source>To logout the Subject, the caller calls the &lt;code&gt;logout&lt;/code&gt; method. As with the &lt;code&gt;login&lt;/code&gt; method, this &lt;code&gt;logout&lt;/code&gt; method invokes the &lt;code&gt;logout&lt;/code&gt; method for the configured modules.</source>
          <target state="translated">주제를 로그 아웃하기 위해 호출자는 &lt;code&gt;logout&lt;/code&gt; 메소드를 호출합니다 . 와 같이 &lt;code&gt;login&lt;/code&gt; 에있어서,이 &lt;code&gt;logout&lt;/code&gt; 방법은 호출 &lt;code&gt;logout&lt;/code&gt; 구성된 모듈을위한 방법.</target>
        </trans-unit>
        <trans-unit id="200a036ad4ef503032cd273e2682a3988e5db7e4" translate="yes" xml:space="preserve">
          <source>To maintain compatibility with applications that listen to key events but are not aware of input method events, the input method handling in stage 4 provides a compatibility mode for components that do not process input method events. For these components, the committed text is converted to keyTyped key events and processed in the key event pipeline starting at stage 3 instead of in the input method event pipeline.</source>
          <target state="translated">주요 이벤트를 수신하지만 입력 방법 이벤트를 인식하지 못하는 응용 프로그램과의 호환성을 유지하기 위해 4 단계의 입력 방법 처리는 입력 방법 이벤트를 처리하지 않는 구성 요소에 대한 호환성 모드를 제공합니다. 이러한 구성 요소의 경우 커밋 된 텍스트는 keyTyped 키 이벤트로 변환되고 입력 메서드 이벤트 파이프 라인 대신 3 단계에서 시작하는 키 이벤트 파이프 라인에서 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="a565dd907d36cc8d69fe9d44176d38b32a8e625f" translate="yes" xml:space="preserve">
          <source>To maintain the specified guarantees, default implementations of methods including &lt;a href=&quot;#putIfAbsent(K,V)&quot;&gt;&lt;code&gt;putIfAbsent(K, V)&lt;/code&gt;&lt;/a&gt; inherited from &lt;a href=&quot;../map&quot;&gt;&lt;code&gt;Map&lt;/code&gt;&lt;/a&gt; must be overridden by implementations of this interface. Similarly, implementations of the collections returned by methods &lt;a href=&quot;../map#keySet()&quot;&gt;&lt;code&gt;Map.keySet()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../map#values()&quot;&gt;&lt;code&gt;Map.values()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;../map#entrySet()&quot;&gt;&lt;code&gt;Map.entrySet()&lt;/code&gt;&lt;/a&gt; must override methods such as &lt;code&gt;removeIf&lt;/code&gt; when necessary to preserve atomicity guarantees.</source>
          <target state="translated">지정된 보증을 유지하려면 &lt;a href=&quot;../map&quot;&gt; &lt;code&gt;Map&lt;/code&gt; &lt;/a&gt; 에서 상속 된 &lt;a href=&quot;#putIfAbsent(K,V)&quot;&gt; &lt;code&gt;putIfAbsent(K, V)&lt;/code&gt; &lt;/a&gt; 포함한 메서드의 기본 구현을이 인터페이스의 구현으로 재정의해야합니다. 마찬가지로, 모음의 구현 방법에 의해 리턴 &lt;a href=&quot;../map#keySet()&quot;&gt; &lt;code&gt;Map.keySet()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../map#values()&quot;&gt; &lt;code&gt;Map.values()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../map#entrySet()&quot;&gt; &lt;code&gt;Map.entrySet()&lt;/code&gt; &lt;/a&gt; 다음과 같은 방법을 무시해야 &lt;code&gt;removeIf&lt;/code&gt; 을 자성 보증을 유지하기 위해 필요한 경우.</target>
        </trans-unit>
        <trans-unit id="af0222657df4f703bd845c942bc994a362ebce7f" translate="yes" xml:space="preserve">
          <source>To make MBean implementation simple, the JMX API includes the notion of &lt;em&gt;Standard MBeans&lt;/em&gt;. A Standard MBean is one whose attributes and operations are deduced from a Java interface using certain naming patterns, similar to those used by JavaBeans&amp;trade;. For example, consider an interface like this:</source>
          <target state="translated">MBean 구현을 간단하게 만들기 위해 JMX API에는 &lt;em&gt;Standard MBeans&lt;/em&gt; 개념이 포함되어 있습니다. Standard MBean은 JavaBeans &amp;trade;에서 사용하는 것과 유사한 특정 이름 지정 패턴을 사용하여 Java 인터페이스에서 속성 및 작업을 추론하는 MBean입니다. 예를 들어 다음과 같은 인터페이스를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="c5e7b5fa49b2e4052f3cf5d0206015dddaeac66e" translate="yes" xml:space="preserve">
          <source>To make MBean implementation simple, the JMX API includes the notion of &lt;em&gt;Standard MBeans&lt;/em&gt;. A Standard MBean is one whose attributes and operations are deduced from a Java interface using certain naming patterns, similar to those used by JavaBeans. For example, consider an interface like this:</source>
          <target state="translated">MBean 구현을 간단하게 만들기 위해 JMX API에는 &lt;em&gt;Standard MBeans&lt;/em&gt; 개념이 포함되어 있습니다. Standard MBean은 JavaBeans에서 사용하는 것과 유사한 특정 이름 지정 패턴을 사용하여 Java 인터페이스에서 속성과 작업을 추론하는 MBean입니다. 예를 들어 다음과 같은 인터페이스를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="8370a551b9ecf25330a7b4809b220f9b66585147" translate="yes" xml:space="preserve">
          <source>To make MBean implementation simple, the JMX API includes the notion of &lt;em&gt;Standard MBeans&lt;/em&gt;. A Standard MBean is one whose attributes and operations are deduced from a Java interface using certain naming patterns, similar to those used by JavaBeans&lt;sup&gt;TM&lt;/sup&gt;. For example, consider an interface like this:</source>
          <target state="translated">MBean 구현을 단순하게하기 위해 JMX API에는 &lt;em&gt;표준 MBean&lt;/em&gt; 개념이 포함되어 있습니다. 표준 MBean은 JavaBeans &lt;sup&gt;TM에서&lt;/sup&gt; 사용되는 것과 유사한 특정 이름 지정 패턴을 사용하여 Java 인터페이스에서 속성과 조작을 추론하는 것 입니다. 예를 들어 다음과 같은 인터페이스를 고려하십시오.</target>
        </trans-unit>
        <trans-unit id="8dc4298fbcae4cb70b048b2b3ee0e77d114153ad" translate="yes" xml:space="preserve">
          <source>To make each &lt;code&gt;Font&lt;/code&gt; available to Font constructors it must be registered in the &lt;code&gt;GraphicsEnvironment&lt;/code&gt; by calling &lt;a href=&quot;graphicsenvironment#registerFont(java.awt.Font)&quot;&gt;&lt;code&gt;registerFont(Font)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Font 생성자에서 각 &lt;code&gt;Font&lt;/code&gt; 를 사용할 수 있도록하려면 &lt;a href=&quot;graphicsenvironment#registerFont(java.awt.Font)&quot;&gt; &lt;code&gt;registerFont(Font)&lt;/code&gt; &lt;/a&gt; 호출 하여 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 에 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="2be6ccab246702446d76d77301b68cc2bd7b3c8d" translate="yes" xml:space="preserve">
          <source>To make edit-saves automatic whenever the user changes their position in the tree, use &lt;a href=&quot;#setInvokesStopCellEditing(boolean)&quot;&gt;&lt;code&gt;setInvokesStopCellEditing(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">사용자가 트리에서 위치를 변경할 때마다 편집-저장을 자동으로 만들려면 &lt;a href=&quot;#setInvokesStopCellEditing(boolean)&quot;&gt; &lt;code&gt;setInvokesStopCellEditing(boolean)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fd942e71c8bc73a626886336a4686f9ee992b69b" translate="yes" xml:space="preserve">
          <source>To make it easier to navigate a &lt;code&gt;SyncResolver&lt;/code&gt; object, especially when there are large numbers of rows with no conflicts, the &lt;code&gt;SyncResolver&lt;/code&gt; interface defines the methods &lt;code&gt;nextConflict&lt;/code&gt; and &lt;code&gt;previousConflict&lt;/code&gt;, which move only to rows that contain at least one conflict value. Then an application can call the &lt;code&gt;SyncResolver&lt;/code&gt; method &lt;code&gt;getConflictValue&lt;/code&gt;, supplying it with the column number, to get the conflict value itself. The code fragment in the next section gives an example.</source>
          <target state="translated">특히 충돌이없는 행이 많은 경우 &lt;code&gt;SyncResolver&lt;/code&gt; 객체를 보다 쉽게 ​​탐색 할 수 있도록 &lt;code&gt;SyncResolver&lt;/code&gt; 인터페이스는 하나 이상의 충돌 값을 포함하는 행으로 만 이동하는 &lt;code&gt;nextConflict&lt;/code&gt; 및 &lt;code&gt;previousConflict&lt;/code&gt; 메서드를 정의합니다 . 그런 다음 애플리케이션은 &lt;code&gt;SyncResolver&lt;/code&gt; 메소드 &lt;code&gt;getConflictValue&lt;/code&gt; 를 호출하여 열 번호를 제공하여 충돌 값 자체를 가져올 수 있습니다. 다음 섹션의 코드 조각은 예제를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="1ea59fd5e24ed5e053aa6040db4ae63cd06cfd3d" translate="yes" xml:space="preserve">
          <source>To make the &lt;code&gt;Font&lt;/code&gt; available to Font constructors the returned &lt;code&gt;Font&lt;/code&gt; must be registered in the &lt;code&gt;GraphicsEnvironment&lt;/code&gt; by calling &lt;a href=&quot;graphicsenvironment#registerFont(java.awt.Font)&quot;&gt;&lt;code&gt;registerFont(Font)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">Font 생성자 에서 &lt;code&gt;Font&lt;/code&gt; 를 사용할 수 있게하려면 반환 된 &lt;code&gt;Font&lt;/code&gt; 를 &lt;a href=&quot;graphicsenvironment#registerFont(java.awt.Font)&quot;&gt; &lt;code&gt;registerFont(Font)&lt;/code&gt; &lt;/a&gt; 호출 하여 &lt;code&gt;GraphicsEnvironment&lt;/code&gt; 에 등록해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1a451ca1030952d13ab8c6eccc71c2d4c0d4e7e3" translate="yes" xml:space="preserve">
          <source>To make this concrete, suppose &lt;code&gt;list&lt;/code&gt; comprises &lt;code&gt;[a, b, c, d, e]&lt;/code&gt;. To move the element at index &lt;code&gt;1&lt;/code&gt; (&lt;code&gt;b&lt;/code&gt;) forward two positions, perform the following invocation:</source>
          <target state="translated">이를 구체적으로하기 위해, &lt;code&gt;list&lt;/code&gt; 가 &lt;code&gt;[a, b, c, d, e]&lt;/code&gt; 포함 한다고 가정하자 . 인덱스 &lt;code&gt;1&lt;/code&gt; ( &lt;code&gt;b&lt;/code&gt; ) 의 요소를 두 위치 앞으로 이동하려면 다음 호출을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="e93fddb753e32a2945a92ab0e6c73ca71fd6b594" translate="yes" xml:space="preserve">
          <source>To maximize the usefulness of this kit, a great deal of effort has gone into making it extendable. These are some of the features.</source>
          <target state="translated">이 키트의 유용성을 극대화하기 위해 확장 가능하게 만드는 데 많은 노력을 기울였습니다. 다음은 일부 기능입니다.</target>
        </trans-unit>
        <trans-unit id="b4c58cb2bc69f7e6c96cfbf89e008c558629746d" translate="yes" xml:space="preserve">
          <source>To minimize the resources used by a bean, the classes used by bean editors are loaded only when the bean is being edited. They are not needed while the bean is running in an application and therefore not loaded. This information is kept in what's called a bean-info (see &lt;a href=&quot;beaninfo&quot;&gt;&lt;code&gt;BeanInfo&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">Bean이 사용하는 자원을 최소화하기 위해 Bean 편집기가 사용하는 클래스는 Bean을 편집 할 때만로드됩니다. Bean이 응용 프로그램에서 실행 중일 때 필요하지 않으므로로드되지 않습니다. 이 정보는 bean-info ( &lt;a href=&quot;beaninfo&quot;&gt; &lt;code&gt;BeanInfo&lt;/code&gt; &lt;/a&gt; 참조 )에 보관됩니다.</target>
        </trans-unit>
        <trans-unit id="001ebdf96f05e6d648887ada3f8bd648fe04f7a1" translate="yes" xml:space="preserve">
          <source>To modify the Principals Set, the caller must have &lt;code&gt;AuthPermission(&quot;modifyPrincipals&quot;)&lt;/code&gt;. To modify the public credential Set, the caller must have &lt;code&gt;AuthPermission(&quot;modifyPublicCredentials&quot;)&lt;/code&gt;. To modify the private credential Set, the caller must have &lt;code&gt;AuthPermission(&quot;modifyPrivateCredentials&quot;)&lt;/code&gt;.</source>
          <target state="translated">프린시 펄 세트를 수정하려면 호출자에게 &lt;code&gt;AuthPermission(&quot;modifyPrincipals&quot;)&lt;/code&gt; 이 있어야합니다 . 공개 자격 증명 세트를 수정하려면 호출자에게 &lt;code&gt;AuthPermission(&quot;modifyPublicCredentials&quot;)&lt;/code&gt; 가 있어야합니다 . 개인 자격 증명 세트를 수정하려면 호출자에게 &lt;code&gt;AuthPermission(&quot;modifyPrivateCredentials&quot;)&lt;/code&gt; 가 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="747d9090669e7fe96070fad66923fdb34ea9838f" translate="yes" xml:space="preserve">
          <source>To monitor a particular job see &lt;a href=&quot;printjoblistener&quot;&gt;&lt;code&gt;PrintJobListener&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;printjobattributelistener&quot;&gt;&lt;code&gt;PrintJobAttributeListener&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">특정 작업을 모니터하려면 &lt;a href=&quot;printjoblistener&quot;&gt; &lt;code&gt;PrintJobListener&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;printjobattributelistener&quot;&gt; &lt;code&gt;PrintJobAttributeListener&lt;/code&gt; 를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="5089e9351790c46132512de82fa88484edb534b8" translate="yes" xml:space="preserve">
          <source>To move more than one element forward, increase the absolute value of the rotation distance. To move elements backward, use a positive shift distance.</source>
          <target state="translated">둘 이상의 요소를 앞으로 이동하려면 회전 거리의 절대 값을 늘리십시오. 요소를 뒤로 이동하려면 양의 이동 거리를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="cb3503b85c97282f7e6f2c755c071c992dea3dbf" translate="yes" xml:space="preserve">
          <source>To obtain a &lt;a href=&quot;saxtransformerfactory&quot;&gt;&lt;code&gt;SAXTransformerFactory&lt;/code&gt;&lt;/a&gt;, the caller must cast the &lt;a href=&quot;../transformerfactory&quot;&gt;&lt;code&gt;TransformerFactory&lt;/code&gt;&lt;/a&gt; instance returned from &lt;a href=&quot;../transformerfactory#newInstance()&quot;&gt;&lt;code&gt;TransformerFactory.newInstance()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">구하려면 &lt;a href=&quot;saxtransformerfactory&quot;&gt; &lt;code&gt;SAXTransformerFactory&lt;/code&gt; &lt;/a&gt; , 호출자는 캐스트 할 필요가 &lt;a href=&quot;../transformerfactory&quot;&gt; &lt;code&gt;TransformerFactory&lt;/code&gt; &lt;/a&gt; 에서 반환 된 인스턴스를 &lt;a href=&quot;../transformerfactory#newInstance()&quot;&gt; &lt;code&gt;TransformerFactory.newInstance()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b424b38eab454327d9525270686fc4060233f03f" translate="yes" xml:space="preserve">
          <source>To obtain a &lt;code&gt;CompactNumberFormat&lt;/code&gt; for a locale, use one of the factory methods given by &lt;code&gt;NumberFormat&lt;/code&gt; for compact number formatting. For example, &lt;a href=&quot;numberformat#getCompactNumberInstance(java.util.Locale,java.text.NumberFormat.Style)&quot;&gt;&lt;code&gt;NumberFormat.getCompactNumberInstance(Locale, Style)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">로케일에 대한 &lt;code&gt;CompactNumberFormat&lt;/code&gt; 을 얻으려면 압축 숫자 형식화를 위해 &lt;code&gt;NumberFormat&lt;/code&gt; 에서 제공하는 팩토리 메소드 중 하나를 사용하십시오 . 예를 들면 &lt;a href=&quot;numberformat#getCompactNumberInstance(java.util.Locale,java.text.NumberFormat.Style)&quot;&gt; &lt;code&gt;NumberFormat.getCompactNumberInstance(Locale, Style)&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3ca70a679375afb9e5c1facb8c4a73f234fc0942" translate="yes" xml:space="preserve">
          <source>To obtain a &lt;code&gt;NumberFormat&lt;/code&gt; for a specific locale, including the default locale, call one of &lt;code&gt;NumberFormat&lt;/code&gt;'s factory methods, such as &lt;code&gt;getInstance()&lt;/code&gt;. In general, do not call the &lt;code&gt;DecimalFormat&lt;/code&gt; constructors directly, since the &lt;code&gt;NumberFormat&lt;/code&gt; factory methods may return subclasses other than &lt;code&gt;DecimalFormat&lt;/code&gt;. If you need to customize the format object, do something like this:</source>
          <target state="translated">기본 로케일을 포함하여 특정 로케일에 대한 &lt;code&gt;NumberFormat&lt;/code&gt; 을 얻으려면 &lt;code&gt;getInstance()&lt;/code&gt; 와 같은 &lt;code&gt;NumberFormat&lt;/code&gt; 의 팩토리 메소드 중 하나를 호출하십시오 . &lt;code&gt;NumberFormat&lt;/code&gt; 팩토리 메소드는 &lt;code&gt;DecimalFormat&lt;/code&gt; 이외의 서브 클래스를 돌려 줄 가능성이 있기 때문에 , 일반적으로 &lt;code&gt;DecimalFormat&lt;/code&gt; 생성자를 직접 호출하지 말아주세요 . 형식 객체를 사용자 정의해야하는 경우 다음과 같이하십시오.</target>
        </trans-unit>
        <trans-unit id="ae8a17b5ce812b5ceaad690b87f673999972dec5" translate="yes" xml:space="preserve">
          <source>To obtain a pure Julian calendar, set the change date to &lt;code&gt;Date(Long.MAX_VALUE)&lt;/code&gt;. To obtain a pure Gregorian calendar, set the change date to &lt;code&gt;Date(Long.MIN_VALUE)&lt;/code&gt;.</source>
          <target state="translated">순수 Julian 캘린더를 얻으려면 변경 날짜를 &lt;code&gt;Date(Long.MAX_VALUE)&lt;/code&gt; 로 설정하십시오 . 순수한 그레고리력을 얻으려면 변경 날짜를 &lt;code&gt;Date(Long.MIN_VALUE)&lt;/code&gt; 로 설정하십시오 .</target>
        </trans-unit>
        <trans-unit id="20e33629fe48c53be57864a0404e40b70573533b" translate="yes" xml:space="preserve">
          <source>To obtain a service ticket to initiate a context with the &quot;host&quot; service the permission is constructed as follows:</source>
          <target state="translated">&quot;호스트&quot;서비스로 컨텍스트를 시작하는 서비스 티켓을 얻으려면 다음과 같이 권한이 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="4183bcd6b7f5e700ca506552b7f6e4893d309d35" translate="yes" xml:space="preserve">
          <source>To obtain standard formats for a given locale, use the factory methods on NumberFormat such as getInstance or getCurrencyInstance. If you need only minor adjustments to a standard format, you can modify the format returned by a NumberFormat factory method.</source>
          <target state="translated">지정된 로케일의 표준 형식을 얻으려면 getInstance 또는 getCurrencyInstance와 같은 NumberFormat의 팩토리 메소드를 사용하십시오. 표준 형식을 약간만 조정해야하는 경우 NumberFormat 팩토리 메소드에서 리턴 한 형식을 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bac3c8ec9809edfd530be7395e55daf334bf4e69" translate="yes" xml:space="preserve">
          <source>To obtain standard formats for a given locale, use the factory methods on NumberFormat such as getNumberInstance. These factories will return the most appropriate sub-class of NumberFormat for a given locale.</source>
          <target state="translated">지정된 로케일의 표준 형식을 얻으려면 getNumberInstance와 같은 NumberFormat의 팩토리 메소드를 사용하십시오. 이 팩토리는 지정된 로케일에 대해 가장 적합한 NumberFormat 서브 클래스를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="1e223b0a31093d4eb61af1c92247a8a8a470a822" translate="yes" xml:space="preserve">
          <source>To obtain the current position in microseconds, use the &lt;a href=&quot;dataline#getMicrosecondPosition()&quot;&gt;&lt;code&gt;getMicrosecondPosition&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;DataLine&lt;/code&gt;.</source>
          <target state="translated">마이크로 초 단위의 현재 위치를 얻으려면 &lt;code&gt;DataLine&lt;/code&gt; 의 &lt;a href=&quot;dataline#getMicrosecondPosition()&quot;&gt; &lt;code&gt;getMicrosecondPosition&lt;/code&gt; &lt;/a&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="62bf607232950c6e5e7025ae2f04f0f1bad57b89" translate="yes" xml:space="preserve">
          <source>To obtain the current position in microseconds, use the &lt;code&gt;&lt;a href=&quot;dataline#getMicrosecondPosition--&quot;&gt;&lt;code&gt;getMicrosecondPosition&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;DataLine&lt;/code&gt;.</source>
          <target state="translated">마이크로 초 단위로 현재 위치를 얻으려면 &lt;code&gt;DataLine&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;dataline#getMicrosecondPosition--&quot;&gt;&lt;code&gt;getMicrosecondPosition&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ff87a331546e8ce98e59d719dafed97e11e78b05" translate="yes" xml:space="preserve">
          <source>To obtain the current position in sample frames, use the &lt;a href=&quot;dataline#getFramePosition()&quot;&gt;&lt;code&gt;getFramePosition&lt;/code&gt;&lt;/a&gt; method of &lt;code&gt;DataLine&lt;/code&gt;.</source>
          <target state="translated">샘플 프레임에서 현재 위치를 얻으려면 &lt;code&gt;DataLine&lt;/code&gt; 의 &lt;a href=&quot;dataline#getFramePosition()&quot;&gt; &lt;code&gt;getFramePosition&lt;/code&gt; &lt;/a&gt; 메서드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6363ba55df8358f378be9461ccc703149c5241ef" translate="yes" xml:space="preserve">
          <source>To obtain the current position in sample frames, use the &lt;code&gt;&lt;a href=&quot;dataline#getFramePosition--&quot;&gt;&lt;code&gt;getFramePosition&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of &lt;code&gt;DataLine&lt;/code&gt;.</source>
          <target state="translated">샘플 프레임에서 현재 위치를 얻으려면 &lt;code&gt;DataLine&lt;/code&gt; 의 &lt;code&gt;&lt;a href=&quot;dataline#getFramePosition--&quot;&gt;&lt;code&gt;getFramePosition&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="a6430dab5386c8f3fc0e0cf226db51658d927334" translate="yes" xml:space="preserve">
          <source>To obtain the later offset during an overlap, call &lt;a href=&quot;chronozoneddatetime#withLaterOffsetAtOverlap()&quot;&gt;&lt;code&gt;ChronoZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">겹치는 동안 이후 오프셋을 얻으려면 이 메서드의 결과에 대해 &lt;a href=&quot;chronozoneddatetime#withLaterOffsetAtOverlap()&quot;&gt; &lt;code&gt;ChronoZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt; 을 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="421ed1485a6e75b37273583056082a34fe2d7c71" translate="yes" xml:space="preserve">
          <source>To obtain the later offset during an overlap, call &lt;a href=&quot;chronozoneddatetime#withLaterOffsetAtOverlap--&quot;&gt;&lt;code&gt;ChronoZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">겹치는 동안 이후 오프셋을 얻으려면 이 메서드의 결과에서 &lt;a href=&quot;chronozoneddatetime#withLaterOffsetAtOverlap--&quot;&gt; &lt;code&gt;ChronoZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt; 을 호출 하십시오 .</target>
        </trans-unit>
        <trans-unit id="a961efe4d884450a5d578beac9bf433224d6f992" translate="yes" xml:space="preserve">
          <source>To obtain the later offset during an overlap, call &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap()&quot;&gt;&lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; on the result of this method. To throw an exception when there is a gap or overlap, use &lt;a href=&quot;zoneddatetime#ofStrict(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt;&lt;code&gt;ZonedDateTime.ofStrict(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">오버랩 중에 나중에 오프셋을 얻으려면 이 메서드의 결과에 대해 &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap()&quot;&gt; &lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt; 을 호출 합니다. 간격 또는 겹침이있을 때 예외를 발생 시키려면 &lt;a href=&quot;zoneddatetime#ofStrict(java.time.LocalDateTime,java.time.ZoneOffset,java.time.ZoneId)&quot;&gt; &lt;code&gt;ZonedDateTime.ofStrict(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a76d6f4b82757c761a4c955f850c236f16199c83" translate="yes" xml:space="preserve">
          <source>To obtain the later offset during an overlap, call &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt;&lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt;&lt;/a&gt; on the result of this method. To throw an exception when there is a gap or overlap, use &lt;a href=&quot;zoneddatetime#ofStrict-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt;&lt;code&gt;ZonedDateTime.ofStrict(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">겹치는 동안 이후 오프셋을 얻으려면 이 메서드의 결과에서 &lt;a href=&quot;zoneddatetime#withLaterOffsetAtOverlap--&quot;&gt; &lt;code&gt;ZonedDateTime.withLaterOffsetAtOverlap()&lt;/code&gt; &lt;/a&gt; 을 호출 하십시오 . 간격이나 겹침이있을 때 예외를 발생 시키려면 &lt;a href=&quot;zoneddatetime#ofStrict-java.time.LocalDateTime-java.time.ZoneOffset-java.time.ZoneId-&quot;&gt; &lt;code&gt;ZonedDateTime.ofStrict(LocalDateTime, ZoneOffset, ZoneId)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="9c13765230d6cb4336c7100851cd30554f8e01ac" translate="yes" xml:space="preserve">
          <source>To perform a computation, stream &lt;a href=&quot;package-summary#StreamOps&quot;&gt;operations&lt;/a&gt; are composed into a &lt;em&gt;stream pipeline&lt;/em&gt;. A stream pipeline consists of a source (which might be an array, a collection, a generator function, an I/O channel, etc), zero or more &lt;em&gt;intermediate operations&lt;/em&gt; (which transform a stream into another stream, such as &lt;a href=&quot;#filter(java.util.function.Predicate)&quot;&gt;&lt;code&gt;filter(Predicate)&lt;/code&gt;&lt;/a&gt;), and a &lt;em&gt;terminal operation&lt;/em&gt; (which produces a result or side-effect, such as &lt;a href=&quot;#count()&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#forEach(java.util.function.Consumer)&quot;&gt;&lt;code&gt;forEach(Consumer)&lt;/code&gt;&lt;/a&gt;). Streams are lazy; computation on the source data is only performed when the terminal operation is initiated, and source elements are consumed only as needed.</source>
          <target state="translated">계산을 수행하기 위해 스트림 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;작업&lt;/a&gt; 이 &lt;em&gt;스트림 파이프 라인&lt;/em&gt; 으로 구성됩니다 . 스트림 파이프 라인은 소스 (배열, 컬렉션, 생성기 함수, I / O 채널 등일 수 있음), 0 개 이상의 &lt;em&gt;중간 작업&lt;/em&gt; (스트림을 &lt;a href=&quot;#filter(java.util.function.Predicate)&quot;&gt; &lt;code&gt;filter(Predicate)&lt;/code&gt; &lt;/a&gt; 과 같은 다른 스트림으로 변환 )으로 구성됩니다. ) 및 &lt;em&gt;터미널 작업&lt;/em&gt; ( &lt;a href=&quot;#count()&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#forEach(java.util.function.Consumer)&quot;&gt; &lt;code&gt;forEach(Consumer)&lt;/code&gt; &lt;/a&gt; 와 같은 결과 또는 부작용을 생성 함 ). 스트림은 게으르다. 소스 데이터에 대한 계산은 터미널 작업이 시작될 때만 수행되며 소스 요소는 필요한 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="955cdb74994f65d4a739b1a149a26b028d610190" translate="yes" xml:space="preserve">
          <source>To perform a computation, stream &lt;a href=&quot;package-summary#StreamOps&quot;&gt;operations&lt;/a&gt; are composed into a &lt;em&gt;stream pipeline&lt;/em&gt;. A stream pipeline consists of a source (which might be an array, a collection, a generator function, an I/O channel, etc), zero or more &lt;em&gt;intermediate operations&lt;/em&gt; (which transform a stream into another stream, such as &lt;a href=&quot;stream#filter-java.util.function.Predicate-&quot;&gt;&lt;code&gt;filter(Predicate)&lt;/code&gt;&lt;/a&gt;), and a &lt;em&gt;terminal operation&lt;/em&gt; (which produces a result or side-effect, such as &lt;a href=&quot;stream#count--&quot;&gt;&lt;code&gt;count()&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;stream#forEach-java.util.function.Consumer-&quot;&gt;&lt;code&gt;forEach(Consumer)&lt;/code&gt;&lt;/a&gt;). Streams are lazy; computation on the source data is only performed when the terminal operation is initiated, and source elements are consumed only as needed.</source>
          <target state="translated">계산을 수행하기 위해 스트림 &lt;a href=&quot;package-summary#StreamOps&quot;&gt;작업&lt;/a&gt; 은 &lt;em&gt;스트림 파이프 라인&lt;/em&gt; 으로 구성됩니다 . 스트림 파이프 라인은 소스 (배열, 수집, 생성기 함수, I / O 채널 등), 0 개 이상의 &lt;em&gt;중간 작업&lt;/em&gt; (스트림 (예 : &lt;a href=&quot;stream#filter-java.util.function.Predicate-&quot;&gt; &lt;code&gt;filter(Predicate)&lt;/code&gt; &lt;/a&gt; 과 같은 스트림을 다른 스트림으로 변환 )으로 구성됩니다. ) 및 &lt;em&gt;터미널 작업&lt;/em&gt; ( &lt;a href=&quot;stream#count--&quot;&gt; &lt;code&gt;count()&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;stream#forEach-java.util.function.Consumer-&quot;&gt; &lt;code&gt;forEach(Consumer)&lt;/code&gt; &lt;/a&gt; 과 같은 결과 또는 부작용을 생성 함 ). 시냇물은 게으르다. 소스 데이터에 대한 계산은 터미널 작업이 시작될 때만 수행되며 소스 요소는 필요한 경우에만 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f24477df6a8f7d518c4250334cd224fae9b1651e" translate="yes" xml:space="preserve">
          <source>To permit the discovery of additional chronologies, the &lt;a href=&quot;../../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; is used. A file must be added to the &lt;code&gt;META-INF/services&lt;/code&gt; directory with the name 'java.time.chrono.Chronology' listing the implementation classes. See the ServiceLoader for more details on service loading. For lookup by id or calendarType, the system provided calendars are found first followed by application provided calendars.</source>
          <target state="translated">추가 연대를 발견 할 수 있도록 &lt;a href=&quot;../../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; 가 사용됩니다. 구현 클래스를 나열하는 이름이 'java.time.chrono.Chronology'인 &lt;code&gt;META-INF/services&lt;/code&gt; 디렉토리에 파일을 추가해야합니다 . 서비스로드에 대한 자세한 내용은 ServiceLoader를 참조하십시오. id 또는 calendarType으로 조회 할 경우 시스템 제공 캘린더가 먼저 찾은 다음 애플리케이션 제공 캘린더가 검색됩니다.</target>
        </trans-unit>
        <trans-unit id="e20e16a6bc01bfb3a045c27d84b3fd5f5b87c088" translate="yes" xml:space="preserve">
          <source>To preserve optimization opportunities this method binds each stream to its source and accepts only two streams as parameters. For example, the exact size of the concatenated stream source can be computed if the exact size of each input stream source is known. To concatenate more streams without binding, or without nested calls to this method, try creating a stream of streams and flat-mapping with the identity function, for example:</source>
          <target state="translated">최적화 기회를 보존하기 위해이 방법은 각 스트림을 소스에 바인딩하고 매개 변수로 두 개의 스트림 만 허용합니다. 예를 들어, 각 입력 스트림 소스의 정확한 크기를 알고있는 경우 연결된 스트림 소스의 정확한 크기를 계산할 수 있습니다. 바인딩없이 또는이 메서드에 대한 중첩 된 호출없이 더 많은 스트림을 연결하려면 다음과 같이 ID 함수를 사용하여 스트림 스트림 및 플랫 매핑을 만들어보십시오.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
