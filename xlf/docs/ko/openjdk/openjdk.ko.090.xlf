<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="5622adb0dc328c03cde2c22b7575e5cd0b607df3" translate="yes" xml:space="preserve">
          <source>DosFileAttributeView.name()</source>
          <target state="translated">DosFileAttributeView.name()</target>
        </trans-unit>
        <trans-unit id="1dc64619211b712604161e6a7c7923be7dc98de1" translate="yes" xml:space="preserve">
          <source>DosFileAttributeView.readAttributes()</source>
          <target state="translated">DosFileAttributeView.readAttributes()</target>
        </trans-unit>
        <trans-unit id="d480cdd05224f39dd35a35740399fdf3c2d8e301" translate="yes" xml:space="preserve">
          <source>DosFileAttributeView.setArchive()</source>
          <target state="translated">DosFileAttributeView.setArchive()</target>
        </trans-unit>
        <trans-unit id="5eb6e4a403ba96118569aab99fe5a60f7d8cbe89" translate="yes" xml:space="preserve">
          <source>DosFileAttributeView.setHidden()</source>
          <target state="translated">DosFileAttributeView.setHidden()</target>
        </trans-unit>
        <trans-unit id="e33afeee8537c64ef5580e6cab2cb45297db023f" translate="yes" xml:space="preserve">
          <source>DosFileAttributeView.setReadOnly()</source>
          <target state="translated">DosFileAttributeView.setReadOnly()</target>
        </trans-unit>
        <trans-unit id="5c932a198d702d567b0432f51d8d83192366ac20" translate="yes" xml:space="preserve">
          <source>DosFileAttributeView.setSystem()</source>
          <target state="translated">DosFileAttributeView.setSystem()</target>
        </trans-unit>
        <trans-unit id="7289861873c88e0661dfb6a2daa00b78a1ad36e9" translate="yes" xml:space="preserve">
          <source>DosFileAttributes</source>
          <target state="translated">DosFileAttributes</target>
        </trans-unit>
        <trans-unit id="2bd59b5c46ea8f5e76e5dcf294edeea4d572b00c" translate="yes" xml:space="preserve">
          <source>DosFileAttributes.isArchive()</source>
          <target state="translated">DosFileAttributes.isArchive()</target>
        </trans-unit>
        <trans-unit id="e3f268c2bd7319492e6195f2371ee43654987231" translate="yes" xml:space="preserve">
          <source>DosFileAttributes.isHidden()</source>
          <target state="translated">DosFileAttributes.isHidden()</target>
        </trans-unit>
        <trans-unit id="e67481ffec8b33835447e7f1fc40c7835cf1a755" translate="yes" xml:space="preserve">
          <source>DosFileAttributes.isReadOnly()</source>
          <target state="translated">DosFileAttributes.isReadOnly()</target>
        </trans-unit>
        <trans-unit id="f1c9245115bcfd49ef353efc573e1e4f3bcb63f1" translate="yes" xml:space="preserve">
          <source>DosFileAttributes.isSystem()</source>
          <target state="translated">DosFileAttributes.isSystem()</target>
        </trans-unit>
        <trans-unit id="0b941e421cbd4d23450d904cd2bd8f01c7463707" translate="yes" xml:space="preserve">
          <source>DotStar</source>
          <target state="translated">DotStar</target>
        </trans-unit>
        <trans-unit id="933b9cdd989e6b35331ff1dca0ea4a9203458806" translate="yes" xml:space="preserve">
          <source>DotStar:</source>
          <target state="translated">DotStar:</target>
        </trans-unit>
        <trans-unit id="2ce515649cd3527025514bad0b6116667cc775ae" translate="yes" xml:space="preserve">
          <source>Dotall mode can also be enabled via the embedded flag expression &lt;code&gt;(?s)&lt;/code&gt;. (The &lt;code&gt;s&lt;/code&gt; is a mnemonic for &quot;single-line&quot; mode, which is what this is called in Perl.)</source>
          <target state="translated">Dotall 모드는 임베디드 플래그 표현식 &lt;code&gt;(?s)&lt;/code&gt; 통해 활성화 할 수도 있습니다 . ( &lt;code&gt;s&lt;/code&gt; 는 &quot;단일 라인&quot;모드의 니모닉입니다. 이것이 Perl에서 호출되는 것입니다.)</target>
        </trans-unit>
        <trans-unit id="81581597044514bf54d4f97266022fc991f3915e" translate="yes" xml:space="preserve">
          <source>Double</source>
          <target state="translated">Double</target>
        </trans-unit>
        <trans-unit id="5f1b1f71fab3a9a2109cf4f8b4f4a17c2077341a" translate="yes" xml:space="preserve">
          <source>Double buffers can be created either by &lt;a href=&quot;#allocate(int)&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, by &lt;a href=&quot;#wrap(double%5B%5D)&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing double array into a buffer, or by creating a &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;view&lt;/i&gt;&lt;/a&gt; of an existing byte buffer.</source>
          <target state="translated">Double buffers can be created either by &lt;a href=&quot;#allocate(int)&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt;, which allocates space for the buffer's content, by &lt;a href=&quot;#wrap(double%5B%5D)&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; an existing double array into a buffer, or by creating a &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;view&lt;/i&gt;&lt;/a&gt; of an existing byte buffer.</target>
        </trans-unit>
        <trans-unit id="471b4510429fd6b0e265807ed327c1b0856d844b" translate="yes" xml:space="preserve">
          <source>Double buffers can be created either by &lt;a href=&quot;doublebuffer#allocate-int-&quot;&gt;&lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt;&lt;/a&gt;, which allocates space for the buffer's content, by &lt;a href=&quot;doublebuffer#wrap-double:A-&quot;&gt;&lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt;&lt;/a&gt; an existing double array into a buffer, or by creating a &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;view&lt;/i&gt;&lt;/a&gt; of an existing byte buffer.</source>
          <target state="translated">이중 버퍼는 버퍼 내용에 공간을 할당 하는 &lt;a href=&quot;doublebuffer#allocate-int-&quot;&gt; &lt;code&gt;&lt;i&gt;allocation&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; , 기존 이중 배열을 버퍼 에 &lt;a href=&quot;doublebuffer#wrap-double:A-&quot;&gt; &lt;code&gt;&lt;i&gt;wrapping&lt;/i&gt;&lt;/code&gt; &lt;/a&gt; 하거나 기존 바이트 버퍼 의 &lt;a href=&quot;bytebuffer#views&quot;&gt;&lt;i&gt;보기&lt;/i&gt;&lt;/a&gt; 를 작성하여 작성할 수 &lt;i&gt;있습니다&lt;/i&gt; .</target>
        </trans-unit>
        <trans-unit id="04083f411102214404c755c1ebc193b4639c694f" translate="yes" xml:space="preserve">
          <source>Double pixel gray low underline.</source>
          <target state="translated">Double pixel gray low underline.</target>
        </trans-unit>
        <trans-unit id="970a6ab5e9c0093decab8ebb74105a9be2d59e3c" translate="yes" xml:space="preserve">
          <source>Double pixel solid low underline.</source>
          <target state="translated">Double pixel solid low underline.</target>
        </trans-unit>
        <trans-unit id="20fab79fb0cc00732e23ac02f86f59ac37a33266" translate="yes" xml:space="preserve">
          <source>Double.byteValue()</source>
          <target state="translated">Double.byteValue()</target>
        </trans-unit>
        <trans-unit id="a1bdef407a92bfbe303ec1fd85c251540f7d467b" translate="yes" xml:space="preserve">
          <source>Double.compare()</source>
          <target state="translated">Double.compare()</target>
        </trans-unit>
        <trans-unit id="7a6465dc5c79b570f2111f15a2c4f2a86b39f867" translate="yes" xml:space="preserve">
          <source>Double.compareTo()</source>
          <target state="translated">Double.compareTo()</target>
        </trans-unit>
        <trans-unit id="4278d64a07c31f844fa3523d4e74773beedfb78a" translate="yes" xml:space="preserve">
          <source>Double.doubleToLongBits()</source>
          <target state="translated">Double.doubleToLongBits()</target>
        </trans-unit>
        <trans-unit id="48c87135e57e961284084311d491f1023cee30c1" translate="yes" xml:space="preserve">
          <source>Double.doubleToRawLongBits()</source>
          <target state="translated">Double.doubleToRawLongBits()</target>
        </trans-unit>
        <trans-unit id="4a571c76c08c51213b2113ef3acd40865520c0f3" translate="yes" xml:space="preserve">
          <source>Double.doubleValue()</source>
          <target state="translated">Double.doubleValue()</target>
        </trans-unit>
        <trans-unit id="1ca2e2c8aaf6bad317cb16100c9f678645166ee3" translate="yes" xml:space="preserve">
          <source>Double.equals()</source>
          <target state="translated">Double.equals()</target>
        </trans-unit>
        <trans-unit id="24f8a80720ad118ecd4831ad950cce665e86ef3f" translate="yes" xml:space="preserve">
          <source>Double.floatValue()</source>
          <target state="translated">Double.floatValue()</target>
        </trans-unit>
        <trans-unit id="261fa86120f7e9d254ba3a90f2d90525d8020192" translate="yes" xml:space="preserve">
          <source>Double.hashCode()</source>
          <target state="translated">Double.hashCode()</target>
        </trans-unit>
        <trans-unit id="dce9b3706a160fcd3530dc5b7ebb7d52d94c69a5" translate="yes" xml:space="preserve">
          <source>Double.intValue()</source>
          <target state="translated">Double.intValue()</target>
        </trans-unit>
        <trans-unit id="c4659212f482426bc08fce5b753890aa2e8ea08f" translate="yes" xml:space="preserve">
          <source>Double.isFinite()</source>
          <target state="translated">Double.isFinite()</target>
        </trans-unit>
        <trans-unit id="84694204a05fef32a4b432f653abca5c317893ab" translate="yes" xml:space="preserve">
          <source>Double.isInfinite()</source>
          <target state="translated">Double.isInfinite()</target>
        </trans-unit>
        <trans-unit id="873de5aadbff3a74a2839d984ec6100aa497cd6a" translate="yes" xml:space="preserve">
          <source>Double.isNaN()</source>
          <target state="translated">Double.isNaN()</target>
        </trans-unit>
        <trans-unit id="c8565f7074027af28c034dc7a39ce1f7d23954d2" translate="yes" xml:space="preserve">
          <source>Double.longBitsToDouble()</source>
          <target state="translated">Double.longBitsToDouble()</target>
        </trans-unit>
        <trans-unit id="6911b69d5d25800ee8b53d6e671c878b44a9135a" translate="yes" xml:space="preserve">
          <source>Double.longValue()</source>
          <target state="translated">Double.longValue()</target>
        </trans-unit>
        <trans-unit id="4c1addbacf53923ac5263685ca22cbae70eab6ab" translate="yes" xml:space="preserve">
          <source>Double.max()</source>
          <target state="translated">Double.max()</target>
        </trans-unit>
        <trans-unit id="6384309de9a67db7853a70be2778f1db5479e5f5" translate="yes" xml:space="preserve">
          <source>Double.min()</source>
          <target state="translated">Double.min()</target>
        </trans-unit>
        <trans-unit id="88baaecda45616add207a7af2202abe5b43ec080" translate="yes" xml:space="preserve">
          <source>Double.parseDouble()</source>
          <target state="translated">Double.parseDouble()</target>
        </trans-unit>
        <trans-unit id="e85355b8741558d29291457e2e50d92fa7ae7c02" translate="yes" xml:space="preserve">
          <source>Double.shortValue()</source>
          <target state="translated">Double.shortValue()</target>
        </trans-unit>
        <trans-unit id="43a32ed46fb0db3ad2aa3b29df14f41b75a336c5" translate="yes" xml:space="preserve">
          <source>Double.sum()</source>
          <target state="translated">Double.sum()</target>
        </trans-unit>
        <trans-unit id="4c23f6a2ddfe12c06f513bfcc46e13dd5282b90c" translate="yes" xml:space="preserve">
          <source>Double.toHexString()</source>
          <target state="translated">Double.toHexString()</target>
        </trans-unit>
        <trans-unit id="f3ca12617e85372f9eed6514946cd93bae846840" translate="yes" xml:space="preserve">
          <source>Double.toString()</source>
          <target state="translated">Double.toString()</target>
        </trans-unit>
        <trans-unit id="1acd5d0eef604e64945919bd2e15f70d69af4f1e" translate="yes" xml:space="preserve">
          <source>Double.valueOf()</source>
          <target state="translated">Double.valueOf()</target>
        </trans-unit>
        <trans-unit id="3c74513f006c865ae01427c3c9199a125624e94f" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator</source>
          <target state="translated">DoubleAccumulator</target>
        </trans-unit>
        <trans-unit id="4923813deeb846347cd2d8375690aa1f59bf6ce0" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.accumulate()</source>
          <target state="translated">DoubleAccumulator.accumulate()</target>
        </trans-unit>
        <trans-unit id="8e94d286949d1bfed0262794c31fe8aa08fcd0fd" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.doubleValue()</source>
          <target state="translated">DoubleAccumulator.doubleValue()</target>
        </trans-unit>
        <trans-unit id="9f2a21492c809a66e63f7d309e5baef39c447d8e" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.floatValue()</source>
          <target state="translated">DoubleAccumulator.floatValue()</target>
        </trans-unit>
        <trans-unit id="df9a1ba5a4e103203b9b855b0b817b1ec94dc79c" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.get()</source>
          <target state="translated">DoubleAccumulator.get()</target>
        </trans-unit>
        <trans-unit id="64f5856f1ae2779fb024b3eeb22e9aa11ad2c8a2" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.getThenReset()</source>
          <target state="translated">DoubleAccumulator.getThenReset()</target>
        </trans-unit>
        <trans-unit id="733d21edbdff59d7f293965c0afb0a7740b18b8c" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.intValue()</source>
          <target state="translated">DoubleAccumulator.intValue()</target>
        </trans-unit>
        <trans-unit id="e2523cf268bbbfbc74f9f7f7ac9fefcff353a9e4" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.longValue()</source>
          <target state="translated">DoubleAccumulator.longValue()</target>
        </trans-unit>
        <trans-unit id="9097540092c9fdbd1876ebe1ae1dbb4b26a62c1c" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.reset()</source>
          <target state="translated">DoubleAccumulator.reset()</target>
        </trans-unit>
        <trans-unit id="94a4bdb17bf6b067828e1d03526ebadffb34efdc" translate="yes" xml:space="preserve">
          <source>DoubleAccumulator.toString()</source>
          <target state="translated">DoubleAccumulator.toString()</target>
        </trans-unit>
        <trans-unit id="8e2f0d1d98e72449d18ebe91d906b2f3f4d57a9b" translate="yes" xml:space="preserve">
          <source>DoubleAdder</source>
          <target state="translated">DoubleAdder</target>
        </trans-unit>
        <trans-unit id="907409b4a5e496c53f89a45e54ffd30c254c1113" translate="yes" xml:space="preserve">
          <source>DoubleAdder.add()</source>
          <target state="translated">DoubleAdder.add()</target>
        </trans-unit>
        <trans-unit id="9e8799af6965acaf0b9d649e8685527b3525ed63" translate="yes" xml:space="preserve">
          <source>DoubleAdder.doubleValue()</source>
          <target state="translated">DoubleAdder.doubleValue()</target>
        </trans-unit>
        <trans-unit id="5758e4acc740b74f1820a1cc1655834eef9e05a3" translate="yes" xml:space="preserve">
          <source>DoubleAdder.floatValue()</source>
          <target state="translated">DoubleAdder.floatValue()</target>
        </trans-unit>
        <trans-unit id="9d5526a5e41a4832883ce052486746b09e4fb64d" translate="yes" xml:space="preserve">
          <source>DoubleAdder.intValue()</source>
          <target state="translated">DoubleAdder.intValue()</target>
        </trans-unit>
        <trans-unit id="142493c040dddccba370f4cde9b20e7dbf466fc9" translate="yes" xml:space="preserve">
          <source>DoubleAdder.longValue()</source>
          <target state="translated">DoubleAdder.longValue()</target>
        </trans-unit>
        <trans-unit id="c3cf3ddb50f206795678a2bfbdf041251a8c8f83" translate="yes" xml:space="preserve">
          <source>DoubleAdder.reset()</source>
          <target state="translated">DoubleAdder.reset()</target>
        </trans-unit>
        <trans-unit id="4812637cd65c155d17f0d4e2df9496278ec3a4d1" translate="yes" xml:space="preserve">
          <source>DoubleAdder.sum()</source>
          <target state="translated">DoubleAdder.sum()</target>
        </trans-unit>
        <trans-unit id="6963d57010b167f1d8de8659cfc24c675a331c76" translate="yes" xml:space="preserve">
          <source>DoubleAdder.sumThenReset()</source>
          <target state="translated">DoubleAdder.sumThenReset()</target>
        </trans-unit>
        <trans-unit id="2110fe9402f25dc6578e74f50e79aae09a88faf8" translate="yes" xml:space="preserve">
          <source>DoubleAdder.toString()</source>
          <target state="translated">DoubleAdder.toString()</target>
        </trans-unit>
        <trans-unit id="1ca0dcb104e15c0b1249f7ee647403d29508b158" translate="yes" xml:space="preserve">
          <source>DoubleBinaryOperator</source>
          <target state="translated">DoubleBinaryOperator</target>
        </trans-unit>
        <trans-unit id="913684db31c7a6554613b3f143812fb2d4f1e00b" translate="yes" xml:space="preserve">
          <source>DoubleBinaryOperator.applyAsDouble()</source>
          <target state="translated">DoubleBinaryOperator.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="b5af989083591cc73e1414b330d66540c69780d4" translate="yes" xml:space="preserve">
          <source>DoubleBuffer</source>
          <target state="translated">DoubleBuffer</target>
        </trans-unit>
        <trans-unit id="3d7a4e834d124304441b258db237fe0c233be6f1" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.allocate()</source>
          <target state="translated">DoubleBuffer.allocate()</target>
        </trans-unit>
        <trans-unit id="c8759dd3b63108768e9d1f2734532e3fd2e03cc5" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.array()</source>
          <target state="translated">DoubleBuffer.array()</target>
        </trans-unit>
        <trans-unit id="06d4f39fd2a8164e79adc16a88df99f8556ad32d" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.arrayOffset()</source>
          <target state="translated">DoubleBuffer.arrayOffset()</target>
        </trans-unit>
        <trans-unit id="45d2cf6694ef38f19926aed3e26419c58cfd98ad" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.asReadOnlyBuffer()</source>
          <target state="translated">DoubleBuffer.asReadOnlyBuffer()</target>
        </trans-unit>
        <trans-unit id="5e203c9288b71a1402984aeb8d0eb663a7d82ad2" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.compact()</source>
          <target state="translated">DoubleBuffer.compact()</target>
        </trans-unit>
        <trans-unit id="005b8cacfb4200478e0f37db7e280427d4bfab6e" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.compareTo()</source>
          <target state="translated">DoubleBuffer.compareTo()</target>
        </trans-unit>
        <trans-unit id="9b3dbf154c8ab62dff3147448e007415ebf8e94b" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.duplicate()</source>
          <target state="translated">DoubleBuffer.duplicate()</target>
        </trans-unit>
        <trans-unit id="71bbb725c95e2e18c019ea4982ac1d0635fdd35b" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.equals()</source>
          <target state="translated">DoubleBuffer.equals()</target>
        </trans-unit>
        <trans-unit id="e36daed43a73817908cade21b2cb9e8d6b6edd47" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.get()</source>
          <target state="translated">DoubleBuffer.get()</target>
        </trans-unit>
        <trans-unit id="ea47b1d620ffccdee11a2a1ab6aedccfef648b7d" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.hasArray()</source>
          <target state="translated">DoubleBuffer.hasArray()</target>
        </trans-unit>
        <trans-unit id="ba066900eaa0ed8b3f373b35bb114196a7a52a5f" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.hashCode()</source>
          <target state="translated">DoubleBuffer.hashCode()</target>
        </trans-unit>
        <trans-unit id="0d08d5751432bdff8203ceb7d97b2c177ddab11e" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.isDirect()</source>
          <target state="translated">DoubleBuffer.isDirect()</target>
        </trans-unit>
        <trans-unit id="33235656f9fe11047efbed642984cfb4e4cb5f1d" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.order()</source>
          <target state="translated">DoubleBuffer.order()</target>
        </trans-unit>
        <trans-unit id="17b611228eba5152bd77f4b28ae6c56fb7dfe0b7" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.put()</source>
          <target state="translated">DoubleBuffer.put()</target>
        </trans-unit>
        <trans-unit id="e86767c664c27368aecbc4a4bd67faced922e2d9" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.slice()</source>
          <target state="translated">DoubleBuffer.slice()</target>
        </trans-unit>
        <trans-unit id="be60e0897bdae267b9e57771928ab54839a5c4d8" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.toString()</source>
          <target state="translated">DoubleBuffer.toString()</target>
        </trans-unit>
        <trans-unit id="2f0eeeb9b69e187c0afd1c752a6b11191e84111c" translate="yes" xml:space="preserve">
          <source>DoubleBuffer.wrap()</source>
          <target state="translated">DoubleBuffer.wrap()</target>
        </trans-unit>
        <trans-unit id="cc79403bb79070a94ab372df6608d22f1d420477" translate="yes" xml:space="preserve">
          <source>DoubleClickListener</source>
          <target state="translated">DoubleClickListener</target>
        </trans-unit>
        <trans-unit id="0c6c7e402f35d32dd0077c4d3e4467def7ca73f1" translate="yes" xml:space="preserve">
          <source>DoubleConsumer</source>
          <target state="translated">DoubleConsumer</target>
        </trans-unit>
        <trans-unit id="ba51b6c6c6777507e8531c32932c0212f4bf249f" translate="yes" xml:space="preserve">
          <source>DoubleConsumer.accept()</source>
          <target state="translated">DoubleConsumer.accept()</target>
        </trans-unit>
        <trans-unit id="814b6e9045add9f8435e7a598dc5388543b38474" translate="yes" xml:space="preserve">
          <source>DoubleConsumer.andThen()</source>
          <target state="translated">DoubleConsumer.andThen()</target>
        </trans-unit>
        <trans-unit id="430d3ed0ddf93f256728b2e9bce18def0b626aa9" translate="yes" xml:space="preserve">
          <source>DoubleFunction</source>
          <target state="translated">DoubleFunction</target>
        </trans-unit>
        <trans-unit id="37e0f6cd29dae6e60c6e13b967693fe8d9730d3f" translate="yes" xml:space="preserve">
          <source>DoubleFunction.apply()</source>
          <target state="translated">DoubleFunction.apply()</target>
        </trans-unit>
        <trans-unit id="02d79a48ac4c9ccd71c9226deac3a8f25fe5bd3f" translate="yes" xml:space="preserve">
          <source>DoublePredicate</source>
          <target state="translated">DoublePredicate</target>
        </trans-unit>
        <trans-unit id="d8ebd507bffed795545c3129f0a9cb36e828ff83" translate="yes" xml:space="preserve">
          <source>DoublePredicate.and()</source>
          <target state="translated">DoublePredicate.and()</target>
        </trans-unit>
        <trans-unit id="4e0bb14f2f6c1591aa05cfd518c44a47dd090cd4" translate="yes" xml:space="preserve">
          <source>DoublePredicate.negate()</source>
          <target state="translated">DoublePredicate.negate()</target>
        </trans-unit>
        <trans-unit id="31dbde5705c19b394009825c03e61698b70a033a" translate="yes" xml:space="preserve">
          <source>DoublePredicate.or()</source>
          <target state="translated">DoublePredicate.or()</target>
        </trans-unit>
        <trans-unit id="3831d05d1e7a7049eeac2ec0a5a0ec920fde157c" translate="yes" xml:space="preserve">
          <source>DoublePredicate.test()</source>
          <target state="translated">DoublePredicate.test()</target>
        </trans-unit>
        <trans-unit id="d194a8a1841c87485fc5f515f503898570fe2b82" translate="yes" xml:space="preserve">
          <source>DoubleStream</source>
          <target state="translated">DoubleStream</target>
        </trans-unit>
        <trans-unit id="92d5d6c0a0a3fae9b0b0f40221f72b7952bb5e80" translate="yes" xml:space="preserve">
          <source>DoubleStream.Builder</source>
          <target state="translated">DoubleStream.Builder</target>
        </trans-unit>
        <trans-unit id="e0f7f84ba01c8785806a5b5bbf0ba64109c8fdde" translate="yes" xml:space="preserve">
          <source>DoubleStream.Builder.accept()</source>
          <target state="translated">DoubleStream.Builder.accept()</target>
        </trans-unit>
        <trans-unit id="a40b48cb1943b58dc661a85ca45d4e1ca94397ba" translate="yes" xml:space="preserve">
          <source>DoubleStream.Builder.add()</source>
          <target state="translated">DoubleStream.Builder.add()</target>
        </trans-unit>
        <trans-unit id="942c9aa1ce23dc401c83ab7d7c116bbb23952d4c" translate="yes" xml:space="preserve">
          <source>DoubleStream.Builder.build()</source>
          <target state="translated">DoubleStream.Builder.build()</target>
        </trans-unit>
        <trans-unit id="3c0a05c6d718743c031112de7d583c1e9bf1aa09" translate="yes" xml:space="preserve">
          <source>DoubleStream.allMatch()</source>
          <target state="translated">DoubleStream.allMatch()</target>
        </trans-unit>
        <trans-unit id="6f6c246f1f1d6127d7f64fb43013cbfa5b46a46c" translate="yes" xml:space="preserve">
          <source>DoubleStream.anyMatch()</source>
          <target state="translated">DoubleStream.anyMatch()</target>
        </trans-unit>
        <trans-unit id="9ac3b12b54f092c132d9752dd1b99a11a7a82eeb" translate="yes" xml:space="preserve">
          <source>DoubleStream.average()</source>
          <target state="translated">DoubleStream.average()</target>
        </trans-unit>
        <trans-unit id="8d4a9276ec8472b367d0074624b99444f502f30f" translate="yes" xml:space="preserve">
          <source>DoubleStream.boxed()</source>
          <target state="translated">DoubleStream.boxed()</target>
        </trans-unit>
        <trans-unit id="9c04b079091dfddc603a15c3a2f8fb58d2f508ec" translate="yes" xml:space="preserve">
          <source>DoubleStream.builder()</source>
          <target state="translated">DoubleStream.builder()</target>
        </trans-unit>
        <trans-unit id="e5e510278104ba8544458c4519a08c2573224a7b" translate="yes" xml:space="preserve">
          <source>DoubleStream.collect()</source>
          <target state="translated">DoubleStream.collect()</target>
        </trans-unit>
        <trans-unit id="98e7d511189018ebd0b2e13aaf32d7486d08fd6f" translate="yes" xml:space="preserve">
          <source>DoubleStream.concat()</source>
          <target state="translated">DoubleStream.concat()</target>
        </trans-unit>
        <trans-unit id="4890af299a0160a645f5c88d0fbf0f83cf59400c" translate="yes" xml:space="preserve">
          <source>DoubleStream.count()</source>
          <target state="translated">DoubleStream.count()</target>
        </trans-unit>
        <trans-unit id="2d8d2486cc746b41d79d2ce4864dc8aa2eda6472" translate="yes" xml:space="preserve">
          <source>DoubleStream.distinct()</source>
          <target state="translated">DoubleStream.distinct()</target>
        </trans-unit>
        <trans-unit id="9b2adcc7ebe172dc1614fe37d85406cfeeff0352" translate="yes" xml:space="preserve">
          <source>DoubleStream.empty()</source>
          <target state="translated">DoubleStream.empty()</target>
        </trans-unit>
        <trans-unit id="29c5d558354a42815c0e7882c6f4f373b18aacfc" translate="yes" xml:space="preserve">
          <source>DoubleStream.filter()</source>
          <target state="translated">DoubleStream.filter()</target>
        </trans-unit>
        <trans-unit id="c723abe220e435262a0a2915537f5e5a79afb793" translate="yes" xml:space="preserve">
          <source>DoubleStream.findAny()</source>
          <target state="translated">DoubleStream.findAny()</target>
        </trans-unit>
        <trans-unit id="1667a63bc92ca3095450ff4091cc6b3eeccd47c2" translate="yes" xml:space="preserve">
          <source>DoubleStream.findFirst()</source>
          <target state="translated">DoubleStream.findFirst()</target>
        </trans-unit>
        <trans-unit id="69180ea2e365c283876162118041e282459e59a1" translate="yes" xml:space="preserve">
          <source>DoubleStream.flatMap()</source>
          <target state="translated">DoubleStream.flatMap()</target>
        </trans-unit>
        <trans-unit id="fa0a853385b02401e5fc9314c6c8e3976293632c" translate="yes" xml:space="preserve">
          <source>DoubleStream.forEach()</source>
          <target state="translated">DoubleStream.forEach()</target>
        </trans-unit>
        <trans-unit id="ee9ea3b82bd25138fbfc9530cf4de9e1b6fcb593" translate="yes" xml:space="preserve">
          <source>DoubleStream.forEachOrdered()</source>
          <target state="translated">DoubleStream.forEachOrdered()</target>
        </trans-unit>
        <trans-unit id="b33dbcc58d61e3346248e35759e4b6c968a6e798" translate="yes" xml:space="preserve">
          <source>DoubleStream.generate()</source>
          <target state="translated">DoubleStream.generate()</target>
        </trans-unit>
        <trans-unit id="59b75b22be5e7bc7a7484417b45d6c53a121e559" translate="yes" xml:space="preserve">
          <source>DoubleStream.iterate()</source>
          <target state="translated">DoubleStream.iterate()</target>
        </trans-unit>
        <trans-unit id="61f83e114c613791d2c399efc4aadc88239ecb8e" translate="yes" xml:space="preserve">
          <source>DoubleStream.iterator()</source>
          <target state="translated">DoubleStream.iterator()</target>
        </trans-unit>
        <trans-unit id="13361b8ca873639804330351fd0f70d531bbcfe8" translate="yes" xml:space="preserve">
          <source>DoubleStream.limit()</source>
          <target state="translated">DoubleStream.limit()</target>
        </trans-unit>
        <trans-unit id="b1608ce21096d935302d6ed179b1969c0a0458eb" translate="yes" xml:space="preserve">
          <source>DoubleStream.map()</source>
          <target state="translated">DoubleStream.map()</target>
        </trans-unit>
        <trans-unit id="9a2984416c24e437433e4fc7df0f8c2242f3cb09" translate="yes" xml:space="preserve">
          <source>DoubleStream.mapToInt()</source>
          <target state="translated">DoubleStream.mapToInt()</target>
        </trans-unit>
        <trans-unit id="fcb6a01a61a6e17b14c86ba04382fb46ea1dce6e" translate="yes" xml:space="preserve">
          <source>DoubleStream.mapToLong()</source>
          <target state="translated">DoubleStream.mapToLong()</target>
        </trans-unit>
        <trans-unit id="354c79c5b9d2fd8863d5261776bff3d5b153fedc" translate="yes" xml:space="preserve">
          <source>DoubleStream.mapToObj()</source>
          <target state="translated">DoubleStream.mapToObj()</target>
        </trans-unit>
        <trans-unit id="10435a09e12946c07c8f2659c9f45c41db315077" translate="yes" xml:space="preserve">
          <source>DoubleStream.max()</source>
          <target state="translated">DoubleStream.max()</target>
        </trans-unit>
        <trans-unit id="73ad2d16bb3340cf6ac5bd61d0134cb4c7e9ba8a" translate="yes" xml:space="preserve">
          <source>DoubleStream.min()</source>
          <target state="translated">DoubleStream.min()</target>
        </trans-unit>
        <trans-unit id="3607d6ad8e1333cb80fcc61521d1821d028a0f65" translate="yes" xml:space="preserve">
          <source>DoubleStream.noneMatch()</source>
          <target state="translated">DoubleStream.noneMatch()</target>
        </trans-unit>
        <trans-unit id="32571f821b4f1ef643f89b3adb34b0eabfd24ceb" translate="yes" xml:space="preserve">
          <source>DoubleStream.of()</source>
          <target state="translated">DoubleStream.of()</target>
        </trans-unit>
        <trans-unit id="7fc75e6de2d8afd545d9e1ed5054146a75e1fa8b" translate="yes" xml:space="preserve">
          <source>DoubleStream.parallel()</source>
          <target state="translated">DoubleStream.parallel()</target>
        </trans-unit>
        <trans-unit id="3a3ff26342a5035086bff0bcdaf3ceffdfa6f6a2" translate="yes" xml:space="preserve">
          <source>DoubleStream.peek()</source>
          <target state="translated">DoubleStream.peek()</target>
        </trans-unit>
        <trans-unit id="7e9bd0d1c82727e23affad716f34cbb9ad3676b2" translate="yes" xml:space="preserve">
          <source>DoubleStream.reduce()</source>
          <target state="translated">DoubleStream.reduce()</target>
        </trans-unit>
        <trans-unit id="465811de0bd7e1346de947d1a98d97366615c581" translate="yes" xml:space="preserve">
          <source>DoubleStream.sequential()</source>
          <target state="translated">DoubleStream.sequential()</target>
        </trans-unit>
        <trans-unit id="e08f09bc8d42c7f33c030d2a51b0914fe4dda01c" translate="yes" xml:space="preserve">
          <source>DoubleStream.skip()</source>
          <target state="translated">DoubleStream.skip()</target>
        </trans-unit>
        <trans-unit id="0299b97a4e5320933a51c0eb2d38981ae9c74141" translate="yes" xml:space="preserve">
          <source>DoubleStream.sorted()</source>
          <target state="translated">DoubleStream.sorted()</target>
        </trans-unit>
        <trans-unit id="5f47d2b1f2a9fb5f25f82f1c36d9eff69a6a02f7" translate="yes" xml:space="preserve">
          <source>DoubleStream.spliterator()</source>
          <target state="translated">DoubleStream.spliterator()</target>
        </trans-unit>
        <trans-unit id="2b7f4777996cf701db43c8dd0bba0c178b21c89a" translate="yes" xml:space="preserve">
          <source>DoubleStream.sum()</source>
          <target state="translated">DoubleStream.sum()</target>
        </trans-unit>
        <trans-unit id="32371d44fa192af4db1beeaf6b07724f3dee1bbe" translate="yes" xml:space="preserve">
          <source>DoubleStream.summaryStatistics()</source>
          <target state="translated">DoubleStream.summaryStatistics()</target>
        </trans-unit>
        <trans-unit id="b82c9d43db9c6ca497abe8b79304c2697e355890" translate="yes" xml:space="preserve">
          <source>DoubleStream.toArray()</source>
          <target state="translated">DoubleStream.toArray()</target>
        </trans-unit>
        <trans-unit id="7dab5923a94c0589ac7475aec25970cf67d124c2" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics</source>
          <target state="translated">DoubleSummaryStatistics</target>
        </trans-unit>
        <trans-unit id="338be86fedb3e7e75f237c85db663dd33225fb82" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.accept()</source>
          <target state="translated">DoubleSummaryStatistics.accept()</target>
        </trans-unit>
        <trans-unit id="4f6e3d4d65aa57ae072a769c6729757eb10844db" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.combine()</source>
          <target state="translated">DoubleSummaryStatistics.combine()</target>
        </trans-unit>
        <trans-unit id="1899ba9ed77b014529574a455deb54ad93aa7853" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getAverage()</source>
          <target state="translated">DoubleSummaryStatistics.getAverage()</target>
        </trans-unit>
        <trans-unit id="510a920db10155fcbc9e7fda7501acdf5ac24b92" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getCount()</source>
          <target state="translated">DoubleSummaryStatistics.getCount()</target>
        </trans-unit>
        <trans-unit id="a714e4ebfaf37c4c07216ac3a018689fb85396a4" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getMax()</source>
          <target state="translated">DoubleSummaryStatistics.getMax()</target>
        </trans-unit>
        <trans-unit id="0d6a6ad97fbe07d76a010f46c2b424b63c88b045" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getMin()</source>
          <target state="translated">DoubleSummaryStatistics.getMin()</target>
        </trans-unit>
        <trans-unit id="afcd83df2f6cd4eca266ea2afa6647f5f3c71699" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.getSum()</source>
          <target state="translated">DoubleSummaryStatistics.getSum()</target>
        </trans-unit>
        <trans-unit id="646a70972ca082c518bca932c96535819d629106" translate="yes" xml:space="preserve">
          <source>DoubleSummaryStatistics.toString()</source>
          <target state="translated">DoubleSummaryStatistics.toString()</target>
        </trans-unit>
        <trans-unit id="528a21f044bb846434c701b5d9feffc8beed49ed" translate="yes" xml:space="preserve">
          <source>DoubleSupplier</source>
          <target state="translated">DoubleSupplier</target>
        </trans-unit>
        <trans-unit id="ed377b0d1122d9418827e82671473c1372164177" translate="yes" xml:space="preserve">
          <source>DoubleSupplier.getAsDouble()</source>
          <target state="translated">DoubleSupplier.getAsDouble()</target>
        </trans-unit>
        <trans-unit id="0f24012c09999d4eb07dd33fd48b2e39bf22d65e" translate="yes" xml:space="preserve">
          <source>DoubleToIntFunction</source>
          <target state="translated">DoubleToIntFunction</target>
        </trans-unit>
        <trans-unit id="7d2ed9699057c1f9c13e504e4779536fa44d1770" translate="yes" xml:space="preserve">
          <source>DoubleToIntFunction.applyAsInt()</source>
          <target state="translated">DoubleToIntFunction.applyAsInt()</target>
        </trans-unit>
        <trans-unit id="ea24ed983005ef2c44289f69d8352c8050658ad1" translate="yes" xml:space="preserve">
          <source>DoubleToLongFunction</source>
          <target state="translated">DoubleToLongFunction</target>
        </trans-unit>
        <trans-unit id="a083addc7768bdb2808b637dbb44f82aa0cc4ac7" translate="yes" xml:space="preserve">
          <source>DoubleToLongFunction.applyAsLong()</source>
          <target state="translated">DoubleToLongFunction.applyAsLong()</target>
        </trans-unit>
        <trans-unit id="a05e47e735f28d03260e480fc3fd52f43e52587a" translate="yes" xml:space="preserve">
          <source>DoubleType</source>
          <target state="translated">DoubleType</target>
        </trans-unit>
        <trans-unit id="39432ca436cbaa15b5b576f20b33b2a3cbd6174e" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator</source>
          <target state="translated">DoubleUnaryOperator</target>
        </trans-unit>
        <trans-unit id="5a4adcb9c50257f6a018ae22fb36209f50688fbb" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator.andThen()</source>
          <target state="translated">DoubleUnaryOperator.andThen()</target>
        </trans-unit>
        <trans-unit id="173bd7bbaf1b9e6b4b6c6faa529fa2638bc697ba" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator.applyAsDouble()</source>
          <target state="translated">DoubleUnaryOperator.applyAsDouble()</target>
        </trans-unit>
        <trans-unit id="754bcda204e3be18d6194aa5bf3096b71202370e" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator.compose()</source>
          <target state="translated">DoubleUnaryOperator.compose()</target>
        </trans-unit>
        <trans-unit id="5ee39d0585da9927ad895c8a77288133c0a5233f" translate="yes" xml:space="preserve">
          <source>DoubleUnaryOperator.identity()</source>
          <target state="translated">DoubleUnaryOperator.identity()</target>
        </trans-unit>
        <trans-unit id="2d412c52bf8f494e84639f1391d030776dd78d18" translate="yes" xml:space="preserve">
          <source>DoubleValue</source>
          <target state="translated">DoubleValue</target>
        </trans-unit>
        <trans-unit id="126f3fb9c62f7dac514e41acbfdeb939833f7b5c" translate="yes" xml:space="preserve">
          <source>Doubly-linked list implementation of the &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;Deque&lt;/code&gt; interfaces.</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 및 &lt;code&gt;Deque&lt;/code&gt; 인터페이스 의 이중 연결 목록 구현 .</target>
        </trans-unit>
        <trans-unit id="d9709afd00d9e37c56908202de053e0eab2bab79" translate="yes" xml:space="preserve">
          <source>Doubly-linked list implementation of the &lt;code&gt;List&lt;/code&gt; and &lt;code&gt;Deque&lt;/code&gt; interfaces. Implements all optional list operations, and permits all elements (including &lt;code&gt;null&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;List&lt;/code&gt; 및 &lt;code&gt;Deque&lt;/code&gt; 인터페이스 의 이중 연결 목록 구현 . 모든 선택적 목록 작업을 구현하고 모든 요소 ( &lt;code&gt;null&lt;/code&gt; 포함 )를 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="970666664f0682081c6db36368e177996ff5a0dd" translate="yes" xml:space="preserve">
          <source>Drag and Drop is a direct manipulation gesture found in many Graphical User Interface systems that provides a mechanism to transfer information between two entities logically associated with presentation elements in the GUI.</source>
          <target state="translated">Drag and Drop is a direct manipulation gesture found in many Graphical User Interface systems that provides a mechanism to transfer information between two entities logically associated with presentation elements in the GUI.</target>
        </trans-unit>
        <trans-unit id="ffaf880ee9646d44e8c9639ac94d14f31860d1cf" translate="yes" xml:space="preserve">
          <source>Drag and Drop is a direct manipulation gesture found in many Graphical User Interface systems that provides a mechanism to transfer information between two entities logically associated with presentation elements in the GUI. Normally driven by a physical gesture of a human user using an appropriate input device, Drag and Drop provides both a mechanism to enable continuous feedback regarding the possible outcome of any subsequent data transfer to the user during navigation over the presentation elements in the GUI, and the facilities to provide for any subsequent data negotiation and transfer.</source>
          <target state="translated">Drag and Drop is a direct manipulation gesture found in many Graphical User Interface systems that provides a mechanism to transfer information between two entities logically associated with presentation elements in the GUI. Normally driven by a physical gesture of a human user using an appropriate input device, Drag and Drop provides both a mechanism to enable continuous feedback regarding the possible outcome of any subsequent data transfer to the user during navigation over the presentation elements in the GUI, and the facilities to provide for any subsequent data negotiation and transfer.</target>
        </trans-unit>
        <trans-unit id="76ef4bda9fa5a3722a737898506f1b63ead2f56d" translate="yes" xml:space="preserve">
          <source>Drag gesture recognizers created with &lt;a href=&quot;dragsource#createDefaultDragGestureRecognizer(java.awt.Component,int,java.awt.dnd.DragGestureListener)&quot;&gt;&lt;code&gt;DragSource.createDefaultDragGestureRecognizer(java.awt.Component, int, java.awt.dnd.DragGestureListener)&lt;/code&gt;&lt;/a&gt; follow this convention.</source>
          <target state="translated">Drag gesture recognizers created with &lt;a href=&quot;dragsource#createDefaultDragGestureRecognizer(java.awt.Component,int,java.awt.dnd.DragGestureListener)&quot;&gt; &lt;code&gt;DragSource.createDefaultDragGestureRecognizer(java.awt.Component, int, java.awt.dnd.DragGestureListener)&lt;/code&gt; &lt;/a&gt; follow this convention.</target>
        </trans-unit>
        <trans-unit id="78a9ce90e1a72abb920d42217869d9954a64f055" translate="yes" xml:space="preserve">
          <source>DragController</source>
          <target state="translated">DragController</target>
        </trans-unit>
        <trans-unit id="4a069f3a56085d2ddb3ee53e1d2819a6fc37070a" translate="yes" xml:space="preserve">
          <source>DragGestureEvent</source>
          <target state="translated">DragGestureEvent</target>
        </trans-unit>
        <trans-unit id="c2c69e2fe400932ec9e3b8055b86d7cfae22d75d" translate="yes" xml:space="preserve">
          <source>DragGestureListener</source>
          <target state="translated">DragGestureListener</target>
        </trans-unit>
        <trans-unit id="33f22e68fe2b1687e8680582f9edeaf31d9da6cb" translate="yes" xml:space="preserve">
          <source>DragGestureRecognizer</source>
          <target state="translated">DragGestureRecognizer</target>
        </trans-unit>
        <trans-unit id="fb419315856c90666fdef3b2b604e40267f0d6cd" translate="yes" xml:space="preserve">
          <source>DragSource</source>
          <target state="translated">DragSource</target>
        </trans-unit>
        <trans-unit id="3146d4f0d74277233fb8255e702a1733253d5e13" translate="yes" xml:space="preserve">
          <source>DragSourceAdapter</source>
          <target state="translated">DragSourceAdapter</target>
        </trans-unit>
        <trans-unit id="6a2ea01aab9e06f57cfb694acde83606abec66ab" translate="yes" xml:space="preserve">
          <source>DragSourceContext</source>
          <target state="translated">DragSourceContext</target>
        </trans-unit>
        <trans-unit id="3e36de2c8929b60cf7d40f24bd7a1b04f6be994c" translate="yes" xml:space="preserve">
          <source>DragSourceDragEvent</source>
          <target state="translated">DragSourceDragEvent</target>
        </trans-unit>
        <trans-unit id="8f6e45a6f5205b364c8211bfcc23b6fb6b887a8e" translate="yes" xml:space="preserve">
          <source>DragSourceDropEvent</source>
          <target state="translated">DragSourceDropEvent</target>
        </trans-unit>
        <trans-unit id="e9d989887bc2ff21915ef6d364e23cb96622d147" translate="yes" xml:space="preserve">
          <source>DragSourceEvent</source>
          <target state="translated">DragSourceEvent</target>
        </trans-unit>
        <trans-unit id="dd31766ae77950f8382b86962b51f185c738c5fa" translate="yes" xml:space="preserve">
          <source>DragSourceListener</source>
          <target state="translated">DragSourceListener</target>
        </trans-unit>
        <trans-unit id="94dcee91857688ad6631993beee2d2f00208fa39" translate="yes" xml:space="preserve">
          <source>DragSourceMotionListener</source>
          <target state="translated">DragSourceMotionListener</target>
        </trans-unit>
        <trans-unit id="b5f5d1cbecc589c4ec577e9ffa50a5654a1b9b55" translate="yes" xml:space="preserve">
          <source>Dragging</source>
          <target state="translated">Dragging</target>
        </trans-unit>
        <trans-unit id="8e9122c5ccb5a38c18ded8a347be799080116989" translate="yes" xml:space="preserve">
          <source>Drain any buffered data in ObjectOutputStream.</source>
          <target state="translated">Drain any buffered data in ObjectOutputStream.</target>
        </trans-unit>
        <trans-unit id="85bc07ab2148597e58cde588340a55d4100fd913" translate="yes" xml:space="preserve">
          <source>Drain any buffered data in ObjectOutputStream. Similar to flush but does not propagate the flush to the underlying stream.</source>
          <target state="translated">ObjectOutputStream에서 버퍼링 된 데이터를 모두 비 웁니다. 플러시와 유사하지만 플러시를 기본 스트림으로 전파하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bb3cfd24181783fccd4b8fb62c5b8877921805f4" translate="yes" xml:space="preserve">
          <source>Drains queued data from the line by continuing data I/O until the data line's internal buffer has been emptied.</source>
          <target state="translated">Drains queued data from the line by continuing data I/O until the data line's internal buffer has been emptied.</target>
        </trans-unit>
        <trans-unit id="0f09410a3fe6ab85f1ee56e1e295692105ab4e1a" translate="yes" xml:space="preserve">
          <source>Drains queued data from the line by continuing data I/O until the data line's internal buffer has been emptied. This method blocks until the draining is complete. Because this is a blocking method, it should be used with care. If &lt;code&gt;drain()&lt;/code&gt; is invoked on a stopped line that has data in its queue, the method will block until the line is running and the data queue becomes empty. If &lt;code&gt;drain()&lt;/code&gt; is invoked by one thread, and another continues to fill the data queue, the operation will not complete. This method always returns when the data line is closed.</source>
          <target state="translated">데이터 라인의 내부 버퍼가 비워 질 때까지 데이터 I / O를 계속하여 라인에서 데이터를 대기시킵니다. 이 방법은 배수가 완료 될 때까지 차단됩니다. 이 방법은 차단 방법이므로주의해서 사용해야합니다. 경우 &lt;code&gt;drain()&lt;/code&gt; 의 큐에 데이터가있는 라인이 정지 호출 라인이 실행될 때까지 상기 방법은 차단되고, 데이터 큐가 비어진다. 경우 &lt;code&gt;drain()&lt;/code&gt; 하나 개의 스레드에 의해 호출 및 다른 데이터 큐를 작성하는 것을 계속하고, 동작이 완료되지 않은 것이다. 이 메소드는 항상 데이터 라인이 닫힐 때 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="87f821ad9088cce666d93ed9cdac16693909c17c" translate="yes" xml:space="preserve">
          <source>Draw a string with the graphics &lt;code&gt;g&lt;/code&gt; at location (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) just like &lt;code&gt;g.drawString&lt;/code&gt; would.</source>
          <target state="translated">Draw a string with the graphics &lt;code&gt;g&lt;/code&gt; at location ( &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; ) just like &lt;code&gt;g.drawString&lt;/code&gt; would.</target>
        </trans-unit>
        <trans-unit id="09d9b75f578c0b461b6ef2ed70b83d8d5f08dc00" translate="yes" xml:space="preserve">
          <source>Draw a string with the graphics &lt;code&gt;g&lt;/code&gt; at location (&lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;) just like &lt;code&gt;g.drawString&lt;/code&gt; would. The character at index &lt;code&gt;underlinedIndex&lt;/code&gt; in text will be underlined. If &lt;code&gt;index&lt;/code&gt; is beyond the bounds of &lt;code&gt;text&lt;/code&gt; (including &amp;lt; 0), nothing will be underlined.</source>
          <target state="translated">Draw a string with the graphics &lt;code&gt;g&lt;/code&gt; at location ( &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; ) just like &lt;code&gt;g.drawString&lt;/code&gt; would. The character at index &lt;code&gt;underlinedIndex&lt;/code&gt; in text will be underlined. If &lt;code&gt;index&lt;/code&gt; is beyond the bounds of &lt;code&gt;text&lt;/code&gt; (including &amp;lt; 0), nothing will be underlined.</target>
        </trans-unit>
        <trans-unit id="bf914af2efcd2c4a45212445a8bbc6bb4b454c81" translate="yes" xml:space="preserve">
          <source>Draw a string with the graphics &lt;code&gt;g&lt;/code&gt; at location (x,y) just like &lt;code&gt;g.drawString&lt;/code&gt; would.</source>
          <target state="translated">Draw a string with the graphics &lt;code&gt;g&lt;/code&gt; at location (x,y) just like &lt;code&gt;g.drawString&lt;/code&gt; would.</target>
        </trans-unit>
        <trans-unit id="fc1f4542d36e29642f5708cd63e016f171d526bc" translate="yes" xml:space="preserve">
          <source>Draw a string with the graphics &lt;code&gt;g&lt;/code&gt; at location (x,y) just like &lt;code&gt;g.drawString&lt;/code&gt; would. The first occurrence of &lt;code&gt;underlineChar&lt;/code&gt; in text will be underlined. The matching algorithm is not case sensitive.</source>
          <target state="translated">Draw a string with the graphics &lt;code&gt;g&lt;/code&gt; at location (x,y) just like &lt;code&gt;g.drawString&lt;/code&gt; would. The first occurrence of &lt;code&gt;underlineChar&lt;/code&gt; in text will be underlined. The matching algorithm is not case sensitive.</target>
        </trans-unit>
        <trans-unit id="d6a65d494817282835f69d2929594bd0aa1a06b9" translate="yes" xml:space="preserve">
          <source>Draw the icon at the specified location.</source>
          <target state="translated">Draw the icon at the specified location.</target>
        </trans-unit>
        <trans-unit id="1a4913a695e8fce6a410ed8610991c5735b30fb2" translate="yes" xml:space="preserve">
          <source>Draw the icon at the specified location. Icon implementations may use the Component argument to get properties useful for painting, e.g. the foreground or background color.</source>
          <target state="translated">Draw the icon at the specified location. Icon implementations may use the Component argument to get properties useful for painting, e.g. the foreground or background color.</target>
        </trans-unit>
        <trans-unit id="b95caa13f2f237f42e9b5a77b5196372b545103c" translate="yes" xml:space="preserve">
          <source>Drawing a selection range corresponding to a substring in the source text. The selected area may not be visually contiguous:</source>
          <target state="translated">Drawing a selection range corresponding to a substring in the source text. The selected area may not be visually contiguous:</target>
        </trans-unit>
        <trans-unit id="6fc565185dc5d7c44a2ac9c612fd8358b5f6134e" translate="yes" xml:space="preserve">
          <source>Drawing a visually contiguous selection range. The selection range may correspond to more than one substring in the source text. The ranges of the corresponding source text substrings can be obtained with &lt;code&gt;getLogicalRangesForVisualSelection()&lt;/code&gt;:</source>
          <target state="translated">Drawing a visually contiguous selection range. The selection range may correspond to more than one substring in the source text. The ranges of the corresponding source text substrings can be obtained with &lt;code&gt;getLogicalRangesForVisualSelection()&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="95071c0d98ca484b091ea9c10c0675c6cf4912b3" translate="yes" xml:space="preserve">
          <source>Draws a 3-D highlighted outline of the specified rectangle.</source>
          <target state="translated">Draws a 3-D highlighted outline of the specified rectangle.</target>
        </trans-unit>
        <trans-unit id="3e369bf318906ed43ed4f74cb99b66a149b976ff" translate="yes" xml:space="preserve">
          <source>Draws a 3-D highlighted outline of the specified rectangle. The edges of the rectangle are highlighted so that they appear to be beveled and lit from the upper left corner.</source>
          <target state="translated">Draws a 3-D highlighted outline of the specified rectangle. The edges of the rectangle are highlighted so that they appear to be beveled and lit from the upper left corner.</target>
        </trans-unit>
        <trans-unit id="234897383235f25e64f30723ca0c04d6f2983909" translate="yes" xml:space="preserve">
          <source>Draws a bezel.</source>
          <target state="translated">Draws a bezel.</target>
        </trans-unit>
        <trans-unit id="54559b1589edcc7dc12f1c90a1e03397ce2833c9" translate="yes" xml:space="preserve">
          <source>Draws a bit of special highlighting on the progress bar and bouncing box.</source>
          <target state="translated">Draws a bit of special highlighting on the progress bar and bouncing box.</target>
        </trans-unit>
        <trans-unit id="bc90df1f686c95900f0f65a5acb1542dbedfde81" translate="yes" xml:space="preserve">
          <source>Draws a bit of special highlighting on the progress bar and bouncing box. The core painting is deferred to the BasicProgressBar's &lt;code&gt;paintIndeterminate&lt;/code&gt; method.</source>
          <target state="translated">Draws a bit of special highlighting on the progress bar and bouncing box. The core painting is deferred to the BasicProgressBar's &lt;code&gt;paintIndeterminate&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="07500c2b5f8af40b34df7c928ca22fe503ae06de" translate="yes" xml:space="preserve">
          <source>Draws a bit of special highlighting on the progress bar.</source>
          <target state="translated">Draws a bit of special highlighting on the progress bar.</target>
        </trans-unit>
        <trans-unit id="c7dd3f799f4c92ab96c9bc8f72a5e957fe1c888b" translate="yes" xml:space="preserve">
          <source>Draws a bit of special highlighting on the progress bar. The core painting is deferred to the BasicProgressBar's &lt;code&gt;paintDeterminate&lt;/code&gt; method.</source>
          <target state="translated">Draws a bit of special highlighting on the progress bar. The core painting is deferred to the BasicProgressBar's &lt;code&gt;paintDeterminate&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="c4f526ee0fae5ff30584f87f76c8734518731aaa" translate="yes" xml:space="preserve">
          <source>Draws a border around a button.</source>
          <target state="translated">Draws a border around a button.</target>
        </trans-unit>
        <trans-unit id="5a7efb400ac61cdda183de8f794a8d4d2e3dc5ed" translate="yes" xml:space="preserve">
          <source>Draws a closed polygon defined by arrays of</source>
          <target state="translated">Draws a closed polygon defined by arrays of</target>
        </trans-unit>
        <trans-unit id="a41851454264c88591d4a334cc62c97c885b0e76" translate="yes" xml:space="preserve">
          <source>Draws a groove.</source>
          <target state="translated">Draws a groove.</target>
        </trans-unit>
        <trans-unit id="ba8d428dabfae2f48be8c1920caf12d2675ae27d" translate="yes" xml:space="preserve">
          <source>Draws a horizontal dashed line.</source>
          <target state="translated">Draws a horizontal dashed line.</target>
        </trans-unit>
        <trans-unit id="a3f726aec2ca29b609c2a11497385357448d3ddf" translate="yes" xml:space="preserve">
          <source>Draws a horizontal dashed line. It is assumed &lt;code&gt;x1&lt;/code&gt; &amp;lt;= &lt;code&gt;x2&lt;/code&gt;. If &lt;code&gt;x1&lt;/code&gt; is greater than &lt;code&gt;x2&lt;/code&gt;, the method draws nothing.</source>
          <target state="translated">Draws a horizontal dashed line. It is assumed &lt;code&gt;x1&lt;/code&gt; &amp;lt;= &lt;code&gt;x2&lt;/code&gt; . If &lt;code&gt;x1&lt;/code&gt; is greater than &lt;code&gt;x2&lt;/code&gt; , the method draws nothing.</target>
        </trans-unit>
        <trans-unit id="fc1dd82aab0bd733646557fe5432a9c5e7599a78" translate="yes" xml:space="preserve">
          <source>Draws a line between the two end points.</source>
          <target state="translated">Draws a line between the two end points.</target>
        </trans-unit>
        <trans-unit id="b33e9b10a9e8d22431815efba6c6ccc2de04ba71" translate="yes" xml:space="preserve">
          <source>Draws a line, using the current color, between the points &lt;code&gt;(x1,&amp;nbsp;y1)&lt;/code&gt; and &lt;code&gt;(x2,&amp;nbsp;y2)&lt;/code&gt; in this graphics context's coordinate system.</source>
          <target state="translated">Draws a line, using the current color, between the points &lt;code&gt;(x1,&amp;nbsp;y1)&lt;/code&gt; and &lt;code&gt;(x2,&amp;nbsp;y2)&lt;/code&gt; in this graphics context's coordinate system.</target>
        </trans-unit>
        <trans-unit id="257981447d4ca34a396d1b046c50f3479d698b50" translate="yes" xml:space="preserve">
          <source>Draws a lowered bezel.</source>
          <target state="translated">Draws a lowered bezel.</target>
        </trans-unit>
        <trans-unit id="a322c1a301711f870315cf2fb1efaf446199b2d1" translate="yes" xml:space="preserve">
          <source>Draws a sequence of connected lines defined by arrays of</source>
          <target state="translated">Draws a sequence of connected lines defined by arrays of</target>
        </trans-unit>
        <trans-unit id="cc5495539b1521c1d8e934838df1d5da74723874" translate="yes" xml:space="preserve">
          <source>Draws a vertical dashed line.</source>
          <target state="translated">Draws a vertical dashed line.</target>
        </trans-unit>
        <trans-unit id="25e2f732d2d1f53250aa93d908bf2888d16a78a5" translate="yes" xml:space="preserve">
          <source>Draws a vertical dashed line. It is assumed &lt;code&gt;y1&lt;/code&gt; &amp;lt;= &lt;code&gt;y2&lt;/code&gt;. If &lt;code&gt;y1&lt;/code&gt; is greater than &lt;code&gt;y2&lt;/code&gt;, the method draws nothing.</source>
          <target state="translated">Draws a vertical dashed line. It is assumed &lt;code&gt;y1&lt;/code&gt; &amp;lt;= &lt;code&gt;y2&lt;/code&gt; . If &lt;code&gt;y1&lt;/code&gt; is greater than &lt;code&gt;y2&lt;/code&gt; , the method draws nothing.</target>
        </trans-unit>
        <trans-unit id="43c68851897cea741a21eee76659a5e69e019146" translate="yes" xml:space="preserve">
          <source>Draws an etched rectangle.</source>
          <target state="translated">Draws an etched rectangle.</target>
        </trans-unit>
        <trans-unit id="9e9cee04d9ec105131e58dab0865fba139dbf595" translate="yes" xml:space="preserve">
          <source>Draws an outlined round-cornered rectangle using this graphics context's current color.</source>
          <target state="translated">Draws an outlined round-cornered rectangle using this graphics context's current color.</target>
        </trans-unit>
        <trans-unit id="c5df9f2feef480c5067da7bee36db7a425752fa6" translate="yes" xml:space="preserve">
          <source>Draws an outlined round-cornered rectangle using this graphics context's current color. The left and right edges of the rectangle are at &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;x&amp;nbsp;+&amp;nbsp;width&lt;/code&gt;, respectively. The top and bottom edges of the rectangle are at &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;y&amp;nbsp;+&amp;nbsp;height&lt;/code&gt;.</source>
          <target state="translated">Draws an outlined round-cornered rectangle using this graphics context's current color. The left and right edges of the rectangle are at &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;x&amp;nbsp;+&amp;nbsp;width&lt;/code&gt; , respectively. The top and bottom edges of the rectangle are at &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;y&amp;nbsp;+&amp;nbsp;height&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19135d1781c569032439c63575da5261f05e3f88" translate="yes" xml:space="preserve">
          <source>Draws as much of the specified area of the specified image as is currently available, scaling it on the fly to fit inside the specified area of the destination drawable surface.</source>
          <target state="translated">Draws as much of the specified area of the specified image as is currently available, scaling it on the fly to fit inside the specified area of the destination drawable surface.</target>
        </trans-unit>
        <trans-unit id="fc95a42d9bb642fef41353a7e3a2dc39bdce1f50" translate="yes" xml:space="preserve">
          <source>Draws as much of the specified area of the specified image as is currently available, scaling it on the fly to fit inside the specified area of the destination drawable surface. Transparent pixels do not affect whatever pixels are already there.</source>
          <target state="translated">Draws as much of the specified area of the specified image as is currently available, scaling it on the fly to fit inside the specified area of the destination drawable surface. Transparent pixels do not affect whatever pixels are already there.</target>
        </trans-unit>
        <trans-unit id="ffb21aecc4d6a22268a31f2a968fe9f0d141a989" translate="yes" xml:space="preserve">
          <source>Draws as much of the specified image as has already been scaled to fit inside the specified rectangle.</source>
          <target state="translated">Draws as much of the specified image as has already been scaled to fit inside the specified rectangle.</target>
        </trans-unit>
        <trans-unit id="0640f19bc43d38b10a828a228fcf6dcd96b2231e" translate="yes" xml:space="preserve">
          <source>Draws as much of the specified image as is currently available.</source>
          <target state="translated">Draws as much of the specified image as is currently available.</target>
        </trans-unit>
        <trans-unit id="541b19515d316d98d26be3dc8d1837344f3cdc12" translate="yes" xml:space="preserve">
          <source>Draws as much of the specified image as is currently available. The image is drawn with its top-left corner at (</source>
          <target state="translated">Draws as much of the specified image as is currently available. The image is drawn with its top-left corner at (</target>
        </trans-unit>
        <trans-unit id="8b1f3793072ce00d9b4131219759b2885d9df8e4" translate="yes" xml:space="preserve">
          <source>Draws dashed rectangle.</source>
          <target state="translated">Draws dashed rectangle.</target>
        </trans-unit>
        <trans-unit id="65cf0d8da2dcec97ca47d734dbb7d853262a2a4e" translate="yes" xml:space="preserve">
          <source>Draws inverted.</source>
          <target state="translated">Draws inverted.</target>
        </trans-unit>
        <trans-unit id="83f61985737ebcf80cf6fa1f9cbe7e2c3f631061" translate="yes" xml:space="preserve">
          <source>Draws the &lt;code&gt;icon&lt;/code&gt; centered at (x,y).</source>
          <target state="translated">Draws the &lt;code&gt;icon&lt;/code&gt; centered at (x,y).</target>
        </trans-unit>
        <trans-unit id="8cde15eeaf89a9c019a7cc9f62b8e78cf954f652" translate="yes" xml:space="preserve">
          <source>Draws the background of the menu item.</source>
          <target state="translated">Draws the background of the menu item.</target>
        </trans-unit>
        <trans-unit id="51e950bfaec894d80682f79a5b2be24351fb18f1" translate="yes" xml:space="preserve">
          <source>Draws the border around a field.</source>
          <target state="translated">Draws the border around a field.</target>
        </trans-unit>
        <trans-unit id="4f3020e226403eddf6aaa0be37a70a2158cdc403" translate="yes" xml:space="preserve">
          <source>Draws the border around a menu bar.</source>
          <target state="translated">메뉴 모음 주위에 테두리를 그립니다.</target>
        </trans-unit>
        <trans-unit id="d16c53a43356afa023830b17d95b046805829131" translate="yes" xml:space="preserve">
          <source>Draws the border around a radio button.</source>
          <target state="translated">라디오 버튼 주위에 테두리를 그립니다.</target>
        </trans-unit>
        <trans-unit id="9029f5cb5be5e3a89fc6ba64ba606e7098aa3d75" translate="yes" xml:space="preserve">
          <source>Draws the border around a toggle button.</source>
          <target state="translated">토글 버튼 주위에 테두리를 그립니다.</target>
        </trans-unit>
        <trans-unit id="507af9a59509b07ae73262904580bbd145614b50" translate="yes" xml:space="preserve">
          <source>Draws the border around components which support margins.</source>
          <target state="translated">여백을 지원하는 구성 요소 주위에 테두리를 그립니다.</target>
        </trans-unit>
        <trans-unit id="ab7eb731a20b55b43294f61707d1ec65ba05bf74" translate="yes" xml:space="preserve">
          <source>Draws the border around the splitpane.</source>
          <target state="translated">분할 창 주위에 테두리를 그립니다.</target>
        </trans-unit>
        <trans-unit id="6f7bf435399cf270f30ce15024d79562590adcbc" translate="yes" xml:space="preserve">
          <source>Draws the border around the splitpane. To work correctly you should also install a border on the divider (property SplitPaneDivider.border).</source>
          <target state="translated">분할 창 주위에 테두리를 그립니다. 올바르게 작동하려면 구분선 (SplitPaneDivider.border 속성)에 테두리도 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="055964daf051dc5f6f4422424e7b6ff99027876d" translate="yes" xml:space="preserve">
          <source>Draws the given string at the specified location underlining the specified character.</source>
          <target state="translated">지정된 문자에 밑줄을 긋는 지정된 위치에 지정된 문자열을 그립니다.</target>
        </trans-unit>
        <trans-unit id="4823cc68b74f9a78ae590a0de111d0302057fec0" translate="yes" xml:space="preserve">
          <source>Draws the given string at the specified location underlining the specified character. The provided component is used to query text properties and anti-aliasing hints.</source>
          <target state="translated">지정된 문자에 밑줄을 긋는 지정된 위치에 지정된 문자열을 그립니다. 제공된 구성 요소는 텍스트 속성 및 앤티 앨리어싱 힌트를 쿼리하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0449d259283fe63bed4d54e42293b389d1a337c4" translate="yes" xml:space="preserve">
          <source>Draws the given string at the specified location using text properties and anti-aliasing hints from the provided component.</source>
          <target state="translated">제공된 구성 요소의 텍스트 속성 및 앤티 앨리어싱 힌트를 사용하여 지정된 위치에 지정된 문자열을 그립니다.</target>
        </trans-unit>
        <trans-unit id="5da2af70cf175f9606c28ea7565ca46313dc9454" translate="yes" xml:space="preserve">
          <source>Draws the given string at the specified location using text properties and anti-aliasing hints from the provided component. Nothing is drawn for the null string.</source>
          <target state="translated">제공된 구성 요소의 텍스트 속성 및 앤티 앨리어싱 힌트를 사용하여 지정된 위치에 지정된 문자열을 그립니다. 널 문자열에 대해서는 아무것도 그려지지 않습니다.</target>
        </trans-unit>
        <trans-unit id="7b7ed5092fb7f15a53627dd879cff4a73ad72fd1" translate="yes" xml:space="preserve">
          <source>Draws the given text, expanding any tabs that are contained using the given tab expansion technique.</source>
          <target state="translated">지정된 탭 확장 기술을 사용하여 포함 된 모든 탭을 확장하여 지정된 텍스트를 그립니다.</target>
        </trans-unit>
        <trans-unit id="91706b17d9fda6d6d08a83ff9f1fc8e3e28ab351" translate="yes" xml:space="preserve">
          <source>Draws the given text, expanding any tabs that are contained using the given tab expansion technique. This particular implementation renders in a 1.1 style coordinate system where ints are used and 72dpi is assumed.</source>
          <target state="translated">지정된 탭 확장 기술을 사용하여 포함 된 모든 탭을 확장하여 지정된 텍스트를 그립니다. 이 특정 구현은 int가 사용되고 72dpi가 가정되는 1.1 스타일 좌표계에서 렌더링됩니다.</target>
        </trans-unit>
        <trans-unit id="94f868d317eb93aba1edc0af2351907ad3abc1f3" translate="yes" xml:space="preserve">
          <source>Draws the outline of a circular or elliptical arc covering the specified rectangle.</source>
          <target state="translated">지정된 직사각형을 덮는 원형 또는 타원형 호의 윤곽을 그립니다.</target>
        </trans-unit>
        <trans-unit id="39bc6d5a1aa4bb60c455f50ea945eee5e1c909e7" translate="yes" xml:space="preserve">
          <source>Draws the outline of a polygon defined by the specified &lt;code&gt;Polygon&lt;/code&gt; object.</source>
          <target state="translated">지정된 &lt;code&gt;Polygon&lt;/code&gt; 객체로 정의 된 다각형의 윤곽을 그 립니다.</target>
        </trans-unit>
        <trans-unit id="39fe24514d3bd2babff1a57836c50364214b59f9" translate="yes" xml:space="preserve">
          <source>Draws the outline of an oval.</source>
          <target state="translated">타원의 윤곽을 그립니다.</target>
        </trans-unit>
        <trans-unit id="b6e7314676b82f166674549f7335348dc3b70e68" translate="yes" xml:space="preserve">
          <source>Draws the outline of an oval. The result is a circle or ellipse that fits within the rectangle specified by the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;height&lt;/code&gt; arguments.</source>
          <target state="translated">타원의 윤곽을 그립니다. 결과는 &lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; , &lt;code&gt;width&lt;/code&gt; , &lt;code&gt;height&lt;/code&gt; 인수로 지정된 사각형에 맞는 원 또는 타원입니다 .</target>
        </trans-unit>
        <trans-unit id="c41be87e464ffd8b6d6a6235aed13478d6896e8f" translate="yes" xml:space="preserve">
          <source>Draws the outline of the specified rectangle.</source>
          <target state="translated">지정된 사각형의 윤곽선을 그립니다.</target>
        </trans-unit>
        <trans-unit id="a30da8446472625283e72714d4d0e490d5187bd4" translate="yes" xml:space="preserve">
          <source>Draws the outline of the specified rectangle. The left and right edges of the rectangle are at &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;x&amp;nbsp;+&amp;nbsp;width&lt;/code&gt;. The top and bottom edges are at &lt;code&gt;y&lt;/code&gt; and &lt;code&gt;y&amp;nbsp;+&amp;nbsp;height&lt;/code&gt;. The rectangle is drawn using the graphics context's current color.</source>
          <target state="translated">지정된 사각형의 윤곽선을 그립니다. 직사각형의 왼쪽 및 오른쪽 가장자리는 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;x&amp;nbsp;+&amp;nbsp;width&lt;/code&gt; 입니다. 위쪽 및 아래쪽 가장자리는 &lt;code&gt;y&lt;/code&gt; 및 &lt;code&gt;y&amp;nbsp;+&amp;nbsp;height&lt;/code&gt; 있습니다. 사각형은 그래픽 컨텍스트의 현재 색상을 사용하여 그려집니다.</target>
        </trans-unit>
        <trans-unit id="5de5181a542816afd5f665a955ca52a861cf05c8" translate="yes" xml:space="preserve">
          <source>Draws the panel.</source>
          <target state="translated">패널을 그립니다.</target>
        </trans-unit>
        <trans-unit id="580c4f65049aa60ec93ecd1801e70461c9a6efa7" translate="yes" xml:space="preserve">
          <source>Draws the text given by the specified byte array, using this graphics context's current font and color.</source>
          <target state="translated">이 그래픽 컨텍스트의 현재 글꼴 및 색상을 사용하여 지정된 바이트 배열에서 제공하는 텍스트를 그립니다.</target>
        </trans-unit>
        <trans-unit id="c80d250372a74b083d5310c781ea6b60b4532fd3" translate="yes" xml:space="preserve">
          <source>Draws the text given by the specified byte array, using this graphics context's current font and color. The baseline of the first character is at position (</source>
          <target state="translated">이 그래픽 컨텍스트의 현재 글꼴 및 색상을 사용하여 지정된 바이트 배열에서 제공하는 텍스트를 그립니다. 첫 번째 문자의 기준선은 위치 (</target>
        </trans-unit>
        <trans-unit id="b91b1684a9a2172d2f1755c85329d45e3a3460fd" translate="yes" xml:space="preserve">
          <source>Draws the text given by the specified character array, using this graphics context's current font and color.</source>
          <target state="translated">이 그래픽 컨텍스트의 현재 글꼴 및 색상을 사용하여 지정된 문자 배열에서 제공하는 텍스트를 그립니다.</target>
        </trans-unit>
        <trans-unit id="42dbe37fd7f6ac6b8e390e948c2414a5205a753d" translate="yes" xml:space="preserve">
          <source>Draws the text given by the specified character array, using this graphics context's current font and color. The baseline of the first character is at position (</source>
          <target state="translated">이 그래픽 컨텍스트의 현재 글꼴 및 색상을 사용하여 지정된 문자 배열에서 제공하는 텍스트를 그립니다. 첫 번째 문자의 기준선은 위치 (</target>
        </trans-unit>
        <trans-unit id="2b5f4303190fb82a068297551922647ef54b2f7a" translate="yes" xml:space="preserve">
          <source>Draws the text given by the specified string, using this graphics context's current font and color.</source>
          <target state="translated">이 그래픽 컨텍스트의 현재 글꼴 및 색상을 사용하여 지정된 문자열로 지정된 텍스트를 그립니다.</target>
        </trans-unit>
        <trans-unit id="24c9c1041c39c8cda860f68ff9e54eb96369a570" translate="yes" xml:space="preserve">
          <source>Draws the text given by the specified string, using this graphics context's current font and color. The baseline of the leftmost character is at position (</source>
          <target state="translated">이 그래픽 컨텍스트의 현재 글꼴 및 색상을 사용하여 지정된 문자열로 지정된 텍스트를 그립니다. 가장 왼쪽 문자의 기준선은 위치 (</target>
        </trans-unit>
        <trans-unit id="05cfea612b3dac13dd007a4bb96ca2f77cb5fe77" translate="yes" xml:space="preserve">
          <source>Draws viewport contents into an offscreen image.</source>
          <target state="translated">뷰포트 내용을 오프 스크린 이미지로 그립니다.</target>
        </trans-unit>
        <trans-unit id="c11d57183cef4b2ec57c869adce881a2bcb5297e" translate="yes" xml:space="preserve">
          <source>Draws viewport contents into an offscreen image. This was previously the default mode for &lt;code&gt;JTable&lt;/code&gt;. This mode may offer advantages over &quot;blit mode&quot; in some cases, but it requires a large chunk of extra RAM.</source>
          <target state="translated">뷰포트 내용을 오프 스크린 이미지로 그립니다. 이전에는 &lt;code&gt;JTable&lt;/code&gt; 의 기본 모드였습니다 . 이 모드는 경우에 따라 &quot;blit 모드&quot;에 비해 이점을 제공 할 수 있지만 많은 양의 추가 RAM이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="47489a0a5deebea80b60c1319e1f53b3fbd1683e" translate="yes" xml:space="preserve">
          <source>DrbgParameters</source>
          <target state="translated">DrbgParameters</target>
        </trans-unit>
        <trans-unit id="8a28876a9688a9b760fbbdf456836637a810b083" translate="yes" xml:space="preserve">
          <source>DrbgParameters.Capability</source>
          <target state="translated">DrbgParameters.Capability</target>
        </trans-unit>
        <trans-unit id="4b9cbb4a7a823ebc4861ec4b41729e1b3df3422d" translate="yes" xml:space="preserve">
          <source>DrbgParameters.Instantiation</source>
          <target state="translated">DrbgParameters.Instantiation</target>
        </trans-unit>
        <trans-unit id="3120f46f9cc449bf771b916e97a6792cb2d979fe" translate="yes" xml:space="preserve">
          <source>DrbgParameters.NextBytes</source>
          <target state="translated">DrbgParameters.NextBytes</target>
        </trans-unit>
        <trans-unit id="a856fcd62b59d41bce2f8b35ad504e0f9c14d0d2" translate="yes" xml:space="preserve">
          <source>DrbgParameters.Reseed</source>
          <target state="translated">DrbgParameters.Reseed</target>
        </trans-unit>
        <trans-unit id="b5c7d8b545ea7fdba609234ce2324aa0c0d6dbb0" translate="yes" xml:space="preserve">
          <source>Driver</source>
          <target state="translated">Driver</target>
        </trans-unit>
        <trans-unit id="98e0c8c4f91f3ef58457fe013db3e0e1add244ea" translate="yes" xml:space="preserve">
          <source>Driver properties for making a connection.</source>
          <target state="translated">연결을위한 드라이버 속성.</target>
        </trans-unit>
        <trans-unit id="00abe68067d73dae5db23f80c436ed2438963b23" translate="yes" xml:space="preserve">
          <source>Driver properties for making a connection. The &lt;code&gt;DriverPropertyInfo&lt;/code&gt; class is of interest only to advanced programmers who need to interact with a Driver via the method &lt;code&gt;getDriverProperties&lt;/code&gt; to discover and supply properties for connections.</source>
          <target state="translated">연결을위한 드라이버 속성. &lt;code&gt;DriverPropertyInfo&lt;/code&gt; 클래스는 메소드를 통해 드라이버와 상호 작용하는 데 필요한 고급 프로그래머에 관심있는 &lt;code&gt;getDriverProperties&lt;/code&gt; 발견 및 연결에 대한 속성을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="bb72c04da7ef20a3b62e9fa8638ad961ce8f9126" translate="yes" xml:space="preserve">
          <source>Driver vendors provide &lt;code&gt;DataSource&lt;/code&gt; implementations. A particular &lt;code&gt;DataSource&lt;/code&gt; object represents a particular physical data source, and each connection the &lt;code&gt;DataSource&lt;/code&gt; object creates is a connection to that physical data source.</source>
          <target state="translated">드라이버 공급 업체는 &lt;code&gt;DataSource&lt;/code&gt; 구현을 제공 합니다. 특정 &lt;code&gt;DataSource&lt;/code&gt; 개체는 특정 물리적 데이터 소스를 나타내며 &lt;code&gt;DataSource&lt;/code&gt; 개체가 만드는 각 연결은 해당 물리적 ​​데이터 소스에 대한 연결입니다.</target>
        </trans-unit>
        <trans-unit id="05ba0a412564529f5550e15aa337146d7acc7541" translate="yes" xml:space="preserve">
          <source>DriverAction</source>
          <target state="translated">DriverAction</target>
        </trans-unit>
        <trans-unit id="048eef25d2703204a07f1643650e8b094105c83e" translate="yes" xml:space="preserve">
          <source>DriverManager</source>
          <target state="translated">DriverManager</target>
        </trans-unit>
        <trans-unit id="97a1c662cb81c6a6e12b2f7d1a4d37876c84da24" translate="yes" xml:space="preserve">
          <source>DriverPropertyInfo</source>
          <target state="translated">DriverPropertyInfo</target>
        </trans-unit>
        <trans-unit id="821528e4f3f9d1a3561c3c21872bafdb2f068aaa" translate="yes" xml:space="preserve">
          <source>Drivers may internally implement some or all of their API calls with multiple internal driver-database transmissions, and it is left to the driver implementation to determine whether the limit will be applied always to the response to the API call, or to any single request made during the API call.</source>
          <target state="translated">드라이버는 여러 내부 드라이버-데이터베이스 전송을 통해 API 호출의 일부 또는 전부를 내부적으로 구현할 수 있으며, API 호출에 대한 응답 또는 단일 요청에 대한 제한이 항상 적용되는지 여부를 결정하는 것은 드라이버 구현에 맡겨집니다. API 호출 중.</target>
        </trans-unit>
        <trans-unit id="817217f9c1770621b60c66faa1d175943608aad7" translate="yes" xml:space="preserve">
          <source>Drivers that support the JDBC 3.0 API will create &lt;code&gt;Connection&lt;/code&gt; objects with an associated type map. This type map, which is initially empty, can contain one or more fully-qualified SQL names and &lt;code&gt;Class&lt;/code&gt; objects indicating the class to which the named SQL value will be mapped. The type mapping specified in the connection's type map is used for custom type mapping when no other type map supersedes it.</source>
          <target state="translated">JDBC 3.0 API를 지원하는 드라이버 는 연결된 유형 맵을 사용하여 &lt;code&gt;Connection&lt;/code&gt; 개체를 만듭니다 . 처음에 비어있는이 유형 맵에는 하나 이상의 완전한 SQL 이름과 명명 된 SQL 값이 매핑 될 클래스를 나타내는 &lt;code&gt;Class&lt;/code&gt; 객체가 포함될 수 있습니다. 연결의 유형 맵에 지정된 유형 매핑은 다른 유형 맵을 대체하지 않는 경우 사용자 지정 유형 매핑에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cd12066e84b4f03d7fb3bbe72e97f25ce4490562" translate="yes" xml:space="preserve">
          <source>Drop membership.</source>
          <target state="translated">멤버십을 삭제하십시오.</target>
        </trans-unit>
        <trans-unit id="e874be86b7fa3c9b150683e785df9daa09c7d8fb" translate="yes" xml:space="preserve">
          <source>Drop modes, used to determine the method by which a component tracks and indicates a drop location during drag and drop.</source>
          <target state="translated">드롭 모드는 구성 요소가 드래그 앤 드롭 중에 드롭 위치를 추적하고 나타내는 방법을 결정하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0a5fef8d342e961cec250f6e08e4007d3174e2eb" translate="yes" xml:space="preserve">
          <source>DropLocation</source>
          <target state="translated">DropLocation</target>
        </trans-unit>
        <trans-unit id="5332d3da8899d0b649610735b998ca391b65f9e1" translate="yes" xml:space="preserve">
          <source>DropMode</source>
          <target state="translated">DropMode</target>
        </trans-unit>
        <trans-unit id="9595e5c6b9a170ec15dfec6f69366ec5b8b6c3a6" translate="yes" xml:space="preserve">
          <source>DropTarget</source>
          <target state="translated">DropTarget</target>
        </trans-unit>
        <trans-unit id="23b75a6c62be0dd0383ad97fae352e81f4f3ce4a" translate="yes" xml:space="preserve">
          <source>DropTarget.DropTargetAutoScroller</source>
          <target state="translated">DropTarget.DropTargetAutoScroller</target>
        </trans-unit>
        <trans-unit id="0cc89ec6982289cd76149333ebe6f83dbaf44c09" translate="yes" xml:space="preserve">
          <source>DropTargetAdapter</source>
          <target state="translated">DropTargetAdapter</target>
        </trans-unit>
        <trans-unit id="83cc843a304652f3cf598b93ab23f561246e260b" translate="yes" xml:space="preserve">
          <source>DropTargetAutoScroller</source>
          <target state="translated">DropTargetAutoScroller</target>
        </trans-unit>
        <trans-unit id="ac42c24405c5fab2e1351a68ea580f933f94c04c" translate="yes" xml:space="preserve">
          <source>DropTargetContext</source>
          <target state="translated">DropTargetContext</target>
        </trans-unit>
        <trans-unit id="05494920e0bc86b07cf584041be9d1cfde5d3cd2" translate="yes" xml:space="preserve">
          <source>DropTargetContext.TransferableProxy</source>
          <target state="translated">DropTargetContext.TransferableProxy</target>
        </trans-unit>
        <trans-unit id="701114c10c37dbc7982b5c3608e71d113acb9708" translate="yes" xml:space="preserve">
          <source>DropTargetDragEvent</source>
          <target state="translated">DropTargetDragEvent</target>
        </trans-unit>
        <trans-unit id="78a04779d0925b0ccc08e0718be42d6da7a3eeb8" translate="yes" xml:space="preserve">
          <source>DropTargetDropEvent</source>
          <target state="translated">DropTargetDropEvent</target>
        </trans-unit>
        <trans-unit id="8071cbab6daa8e02ff9057f8a82b92a7eb6a715c" translate="yes" xml:space="preserve">
          <source>DropTargetEvent</source>
          <target state="translated">DropTargetEvent</target>
        </trans-unit>
        <trans-unit id="a33be412230cc020ee9084d28783780c73e8a43b" translate="yes" xml:space="preserve">
          <source>DropTargetListener</source>
          <target state="translated">DropTargetListener</target>
        </trans-unit>
        <trans-unit id="2344a954abca9d2ee9cc4c6e9c4befacdc6f6e79" translate="yes" xml:space="preserve">
          <source>Dst</source>
          <target state="translated">Dst</target>
        </trans-unit>
        <trans-unit id="8510fa5b75a1e31df1c18ad29773dbebfe45cd88" translate="yes" xml:space="preserve">
          <source>DstAtop</source>
          <target state="translated">DstAtop</target>
        </trans-unit>
        <trans-unit id="8feb4744471b1a5f2bf4e9d7341774acb47e7401" translate="yes" xml:space="preserve">
          <source>DstIn</source>
          <target state="translated">DstIn</target>
        </trans-unit>
        <trans-unit id="1f4beabd039fcaebb90964d02dd3ed2b9f81845f" translate="yes" xml:space="preserve">
          <source>DstOut</source>
          <target state="translated">DstOut</target>
        </trans-unit>
        <trans-unit id="51c6ddafcedd45d27612b48c81ea561d82858f08" translate="yes" xml:space="preserve">
          <source>DstOver</source>
          <target state="translated">DstOver</target>
        </trans-unit>
        <trans-unit id="a7b111439738afbf5aa384d3fd1522a0b94c685d" translate="yes" xml:space="preserve">
          <source>Due to platform-dependent Drag&amp;amp;Drop implementations, &lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; events may not be delivered during a native Drag&amp;amp;Drop operation.</source>
          <target state="translated">플랫폼에 따라 달라지는 Drag &amp;amp; Drop 구현으로 인해 &lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; 이벤트는 기본 Drag &amp;amp; Drop 작업 중에 전달되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56d82ff49c8bbfbd7b3e4f4ffa2789b0203b85d6" translate="yes" xml:space="preserve">
          <source>Due to polymorphism of both factories and sockets, different kinds of sockets can be used by the same application code just by passing it different kinds of factories.</source>
          <target state="translated">팩토리와 소켓의 다형성으로 인해 다른 종류의 소켓을 다른 종류의 팩토리에 전달하는 것만으로 동일한 응용 프로그램 코드에서 다른 종류의 소켓을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c8209dddfa9c02fedf68e643c9eae1743d58096" translate="yes" xml:space="preserve">
          <source>Due to rasterization effects, this bounds might not enclose all of the pixels rendered by the TextLayout.</source>
          <target state="translated">래스터 화 효과로 인해이 경계는 TextLayout에 의해 렌더링 된 모든 픽셀을 포함하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12a38894d57d3b3784bfa765fc5e5f802d04979e" translate="yes" xml:space="preserve">
          <source>Due to some methods of allocating certain styles of IPv6 addresses, it will be common for addresses to contain long strings of zero bits. In order to make writing addresses containing zero bits easier, a special syntax is available to compress the zeros. The use of &quot;::&quot; indicates multiple groups of 16-bits of zeros. The &quot;::&quot; can only appear once in an address. The &quot;::&quot; can also be used to compress the leading and/or trailing zeros in an address. For example,</source>
          <target state="translated">IPv6 주소의 특정 스타일을 할당하는 일부 방법으로 인해 주소에 긴 문자열의 0 비트가 포함되는 것이 일반적입니다. 0 비트를 포함하는 주소를보다 쉽게 ​​작성하기 위해 0을 압축하는 특수 구문을 사용할 수 있습니다. &quot;::&quot;의 사용은 여러 그룹의 16 비트 0을 나타냅니다. &quot;::&quot;는 주소에 한 번만 나타날 수 있습니다. &quot;::&quot;을 사용하여 주소에서 선행 및 / 또는 후행 0을 압축 할 수도 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="e3c516a2e5fbbeb4b04ec1a82dd449e53d53be7f" translate="yes" xml:space="preserve">
          <source>Due to the asynchronous nature of native event handling, the results returned by &lt;code&gt;getBounds&lt;/code&gt;, &lt;code&gt;getLocation&lt;/code&gt;, &lt;code&gt;getLocationOnScreen&lt;/code&gt;, and &lt;code&gt;getSize&lt;/code&gt; might not reflect the actual geometry of the Window on screen until the last request has been processed. During the processing of subsequent requests these values might change accordingly while the window management system fulfills the requests.</source>
          <target state="translated">네이티브 이벤트 처리의 비동기 특성으로 인해 &lt;code&gt;getBounds&lt;/code&gt; , &lt;code&gt;getLocation&lt;/code&gt; , &lt;code&gt;getLocationOnScreen&lt;/code&gt; 및 &lt;code&gt;getSize&lt;/code&gt; 에서 반환 된 결과 는 마지막 요청이 처리 될 때까지 화면에 표시되는 창의 실제 형상을 반영하지 않을 수 있습니다. 후속 요청을 처리하는 동안이 값은 창 관리 시스템이 요청을 수행하는 동안 그에 따라 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5c4bc115b1e9c1328de95504e68d846f7345c320" translate="yes" xml:space="preserve">
          <source>Due to the asynchronous nature of native event handling, this method can return outdated values (for instance, after several calls of &lt;code&gt;setLocation()&lt;/code&gt; in rapid succession). For this reason, the recommended method of obtaining a component's position is within &lt;code&gt;java.awt.event.ComponentListener.componentMoved()&lt;/code&gt;, which is called after the operating system has finished moving the component.</source>
          <target state="translated">네이티브 이벤트 처리의 비동기 특성으로 인해이 메서드는 오래된 값을 반환 할 수 있습니다 (예 : &lt;code&gt;setLocation()&lt;/code&gt; 을 빠르게 연속적으로 여러 번 호출 한 후 ). 이러한 이유로 구성 요소의 위치를 ​​가져 오는 데 권장되는 메서드 는 운영 체제가 구성 요소 이동을 완료 한 후에 호출되는 &lt;code&gt;java.awt.event.ComponentListener.componentMoved()&lt;/code&gt; 내에 있습니다.</target>
        </trans-unit>
        <trans-unit id="5f59e2aa8400f166eee066b3a5286b653bae771b" translate="yes" xml:space="preserve">
          <source>Due to the differences between the &lt;code&gt;Timestamp&lt;/code&gt; class and the &lt;code&gt;java.util.Date&lt;/code&gt; class mentioned above, it is recommended that code not view &lt;code&gt;Timestamp&lt;/code&gt; values generically as an instance of &lt;code&gt;java.util.Date&lt;/code&gt;. The inheritance relationship between &lt;code&gt;Timestamp&lt;/code&gt; and &lt;code&gt;java.util.Date&lt;/code&gt; really denotes implementation inheritance, and not type inheritance.</source>
          <target state="translated">위에서 언급 한 &lt;code&gt;Timestamp&lt;/code&gt; 클래스와 &lt;code&gt;java.util.Date&lt;/code&gt; 클래스 의 차이로 인해 코드에서 일반적으로 &lt;code&gt;Timestamp&lt;/code&gt; 값을 &lt;code&gt;java.util.Date&lt;/code&gt; 의 인스턴스로 보지 않는 것이 좋습니다 . &lt;code&gt;Timestamp&lt;/code&gt; 와 &lt;code&gt;java.util.Date&lt;/code&gt; 간의 상속 관계는 실제로 유형 상속이 아니라 구현 상속을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c221b3b5d45aa6f2b51d2ff7ad772006b7992fe4" translate="yes" xml:space="preserve">
          <source>Due to the inherent delay between key cancellation and channel deregistration, a channel may remain registered for some time after all of its keys have been cancelled. A channel may also remain registered for some time after it is closed.</source>
          <target state="translated">키 취소와 채널 등록 취소 사이의 고유 한 지연으로 인해 모든 키가 취소 된 후 채널이 일정 시간 동안 계속 유지 될 수 있습니다. 채널을 닫은 후에도 채널이 등록 된 상태로 유지 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="74d5cf48b69cd525a6a5e34930693c1ebc22c7ef" translate="yes" xml:space="preserve">
          <source>Due to the inherent race condition in this method, it is recommended that the method only be used for debugging and monitoring purposes.</source>
          <target state="translated">이 방법의 고유 경쟁 조건으로 인해이 방법은 디버깅 및 모니터링 목적으로 만 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="9d39e57917f1fe8a9141d2532f16e3b218452b71" translate="yes" xml:space="preserve">
          <source>Due to the lazy class linking performed by many VMs, it is possible for a field or variable to be visible in a program before the associated class is loaded. Until the class is loaded all that is available is a signature string. If an attempt is made to set the value of such a field or variable from JDI, the appropriate type checking cannot be done because the destination class has not been loaded. The same is true for the element class of array elements.</source>
          <target state="translated">많은 VM에서 수행되는 지연 클래스 연결로 인해 관련 클래스가로드되기 전에 프로그램에서 필드 또는 변수가 표시 될 수 있습니다. 클래스가로드 될 때까지 사용 가능한 모든 것은 서명 문자열입니다. JDI에서 이러한 필드 또는 변수의 값을 설정하려고하면 대상 클래스가로드되지 않았기 때문에 적절한 유형 검사를 수행 할 수 없습니다. 배열 요소의 요소 클래스도 마찬가지입니다.</target>
        </trans-unit>
        <trans-unit id="0d5c41631d2e02100d3f60e0121c626e70082bd1" translate="yes" xml:space="preserve">
          <source>Due to the mouse wheel's special relationship to scrolling Components, MouseWheelEvents are delivered somewhat differently than other MouseEvents. This is because while other MouseEvents usually affect a change on the Component directly under the mouse cursor (for instance, when clicking a button), MouseWheelEvents often have an effect away from the mouse cursor (moving the wheel while over a Component inside a ScrollPane should scroll one of the Scrollbars on the ScrollPane).</source>
          <target state="translated">마우스 휠의 스크롤링 구성 요소와의 특수한 관계로 인해 MouseWheelEvents는 다른 MouseEvents와 약간 다르게 전달됩니다. 이는 다른 MouseEvents가 일반적으로 마우스 커서 바로 아래에있는 구성 요소의 변경에 영향을 주지만 (예 : 버튼을 클릭 할 때) MouseWheelEvents는 종종 마우스 커서에서 멀어지는 영향을 미치기 때문입니다 (ScrollPane 내부의 구성 요소 위로 휠을 이동하면 ScrollPane의 스크롤바 중 하나를 스크롤합니다).</target>
        </trans-unit>
        <trans-unit id="ce9b8e61ee744cc30663ea7690cda15d17521ec4" translate="yes" xml:space="preserve">
          <source>Due to the platform-dependent nature of the behavior of this constructor, extreme care should be exercised in its use. The thread stack size necessary to perform a given computation will likely vary from one JRE implementation to another. In light of this variation, careful tuning of the stack size parameter may be required, and the tuning may need to be repeated for each JRE implementation on which an application is to run.</source>
          <target state="translated">이 생성자의 동작은 플랫폼에 따라 다르므로 사용시 각별한주의가 필요합니다. 주어진 계산을 수행하는 데 필요한 스레드 스택 크기는 JRE 구현마다 다를 수 있습니다. 이러한 변형에 비추어, 스택 크기 파라미터의 신중한 튜닝이 필요할 수 있으며, 애플리케이션이 실행될 각각의 JRE 구현에 대해 튜닝이 반복 될 필요가있다.</target>
        </trans-unit>
        <trans-unit id="c7f52ea5e07bef9556fc372d0063a2aae55fab6f" translate="yes" xml:space="preserve">
          <source>Dumps a debugging representation of the element hierarchy.</source>
          <target state="translated">요소 계층 구조의 디버깅 표현을 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="c731f53e7429e16c90c2bd103714b83d845ea1c6" translate="yes" xml:space="preserve">
          <source>Dumps recording data to disk on Java Virtual Machine (JVM) exit</source>
          <target state="translated">JVM (Java Virtual Machine) 종료시 디스크에 기록 데이터를 덤프합니다.</target>
        </trans-unit>
        <trans-unit id="820999becc9a9c5b93397447da48577b3e0c84a4" translate="yes" xml:space="preserve">
          <source>Dumps the heap to the &lt;code&gt;outputFile&lt;/code&gt; file in the same format as the hprof heap dump.</source>
          <target state="translated">받는 힙 덤프 &lt;code&gt;outputFile&lt;/code&gt; HPROF 힙 덤프와 같은 형식의 파일을.</target>
        </trans-unit>
        <trans-unit id="ef947e3aef3170e26167c58d17a81acc82301605" translate="yes" xml:space="preserve">
          <source>Dungeon</source>
          <target state="translated">Dungeon</target>
        </trans-unit>
        <trans-unit id="25fd58ae8466e85b0fd7fbf082f5d29ceb5c69fb" translate="yes" xml:space="preserve">
          <source>Duplicate credential element requested.</source>
          <target state="translated">중복 된 자격 증명 요소가 요청되었습니다.</target>
        </trans-unit>
        <trans-unit id="611f9b90ae8fc0f6a7d8b85d23b7994ad4acd078" translate="yes" xml:space="preserve">
          <source>DuplicateFormatFlagsException</source>
          <target state="translated">DuplicateFormatFlagsException</target>
        </trans-unit>
        <trans-unit id="3c356dce20032bdfcd696e3cb6b670fd68285914" translate="yes" xml:space="preserve">
          <source>DuplicateFormatFlagsException.getFlags()</source>
          <target state="translated">DuplicateFormatFlagsException.getFlags()</target>
        </trans-unit>
        <trans-unit id="d9312f6a6f29fc77bb6453b2c755fe17639eb33f" translate="yes" xml:space="preserve">
          <source>DuplicateFormatFlagsException.getMessage()</source>
          <target state="translated">DuplicateFormatFlagsException.getMessage()</target>
        </trans-unit>
        <trans-unit id="8db5a0e4881a75996db3586c2a271651c9fdc2a6" translate="yes" xml:space="preserve">
          <source>DuplicateRequestException</source>
          <target state="translated">DuplicateRequestException</target>
        </trans-unit>
        <trans-unit id="f6ddd2fde866bddce835f6c59d2fe34ed8ce8579" translate="yes" xml:space="preserve">
          <source>Duplicates the contents of a Range</source>
          <target state="translated">범위의 내용을 복제합니다.</target>
        </trans-unit>
        <trans-unit id="1370004da76fa4f3b7a5180fd5436065ef4c7d5b" translate="yes" xml:space="preserve">
          <source>Duration</source>
          <target state="translated">Duration</target>
        </trans-unit>
        <trans-unit id="20d3cd81bdaf7a38fc3afa3981772c301586ef37" translate="yes" xml:space="preserve">
          <source>Duration X is &quot;longer&quot; than Y if and only if X &amp;gt; Y as defined in the section 3.2.6.2 of the XML Schema 1.0 specification.</source>
          <target state="translated">기간 X는 XML Schema 1.0 사양의 섹션 3.2.6.2에 정의 된대로 X&amp;gt; Y 인 경우에만 Y보다 &quot;긴&quot;합니다.</target>
        </trans-unit>
        <trans-unit id="a402b7257cf520473a41ae91eabd3bfc34ce3e53" translate="yes" xml:space="preserve">
          <source>Duration X is equal to Y if and only if time instant t+X and t+Y are the same for all the test time instants specified in the section 3.2.6.2 of the XML Schema 1.0 specification.</source>
          <target state="translated">기간 X는 시간 순간 t + X 및 t + Y가 XML Schema 1.0 사양의 섹션 3.2.6.2에 지정된 모든 테스트 시간 순간에 대해 동일한 경우에만 Y와 같습니다.</target>
        </trans-unit>
        <trans-unit id="7df11f943d5f539171b9117f82e494d1ad59e377" translate="yes" xml:space="preserve">
          <source>Duration and Period</source>
          <target state="translated">기간과 기간</target>
        </trans-unit>
        <trans-unit id="eddd4c3d0caf90c33f22779aedf18514d38569ef" translate="yes" xml:space="preserve">
          <source>Duration objects only have partial order, where two values A and B maybe either:</source>
          <target state="translated">Duration 객체는 부분 순서 만 있으며 두 값 A와 B는 다음 중 하나 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd9025826b1cd7e702cbe93176d1b668d05effb5" translate="yes" xml:space="preserve">
          <source>Duration.abs()</source>
          <target state="translated">Duration.abs()</target>
        </trans-unit>
        <trans-unit id="aa312e8a098ab875b809bf9534b814af64a9759e" translate="yes" xml:space="preserve">
          <source>Duration.addTo()</source>
          <target state="translated">Duration.addTo()</target>
        </trans-unit>
        <trans-unit id="b840cd969d2dd313bb6373719b36c365b3b2b244" translate="yes" xml:space="preserve">
          <source>Duration.between()</source>
          <target state="translated">Duration.between()</target>
        </trans-unit>
        <trans-unit id="23435c649b87c9dcf280ac63f198540368cc5231" translate="yes" xml:space="preserve">
          <source>Duration.compareTo()</source>
          <target state="translated">Duration.compareTo()</target>
        </trans-unit>
        <trans-unit id="2d2a660b05a6946f7e8d68d3f0777b4f3ce04748" translate="yes" xml:space="preserve">
          <source>Duration.dividedBy()</source>
          <target state="translated">Duration.dividedBy()</target>
        </trans-unit>
        <trans-unit id="2497f0dd453a7e9b0dfcff8deeafd55f16abef7a" translate="yes" xml:space="preserve">
          <source>Duration.equals()</source>
          <target state="translated">Duration.equals()</target>
        </trans-unit>
        <trans-unit id="f3398ac63a7ecd9599e44f8ad8c1ad4b2d38f41f" translate="yes" xml:space="preserve">
          <source>Duration.from()</source>
          <target state="translated">Duration.from()</target>
        </trans-unit>
        <trans-unit id="b9300aa117c5a95374dea29a47351a829433f32d" translate="yes" xml:space="preserve">
          <source>Duration.get()</source>
          <target state="translated">Duration.get()</target>
        </trans-unit>
        <trans-unit id="fb5a4179ef4d6e29d337caeaa92d865aa31d3bec" translate="yes" xml:space="preserve">
          <source>Duration.getNano()</source>
          <target state="translated">Duration.getNano()</target>
        </trans-unit>
        <trans-unit id="1491e6edfd8090740291ea563d04af0851984351" translate="yes" xml:space="preserve">
          <source>Duration.getSeconds()</source>
          <target state="translated">Duration.getSeconds()</target>
        </trans-unit>
        <trans-unit id="4fd70e5cd0d11b8f6084016b3d267af614d8071e" translate="yes" xml:space="preserve">
          <source>Duration.getUnits()</source>
          <target state="translated">Duration.getUnits()</target>
        </trans-unit>
        <trans-unit id="affe8075b36dabdb8d118abc7742ad8e66347796" translate="yes" xml:space="preserve">
          <source>Duration.hashCode()</source>
          <target state="translated">Duration.hashCode()</target>
        </trans-unit>
        <trans-unit id="cf9408c9312f0888ff5e9afe3420e94b8e3e64b4" translate="yes" xml:space="preserve">
          <source>Duration.isNegative()</source>
          <target state="translated">Duration.isNegative()</target>
        </trans-unit>
        <trans-unit id="f92190a9658d0f1f4dbc1ceddd1fb62c3a26a136" translate="yes" xml:space="preserve">
          <source>Duration.isZero()</source>
          <target state="translated">Duration.isZero()</target>
        </trans-unit>
        <trans-unit id="9aa7c6d3eb42b70a0c389e693126098f8700dabb" translate="yes" xml:space="preserve">
          <source>Duration.minus()</source>
          <target state="translated">Duration.minus()</target>
        </trans-unit>
        <trans-unit id="d5fdcf8e2c10a9e72d3bc61eedc971b6e94f20a9" translate="yes" xml:space="preserve">
          <source>Duration.minusDays()</source>
          <target state="translated">Duration.minusDays()</target>
        </trans-unit>
        <trans-unit id="cbf93ca0303206b6934c54d2880c361f65e3c9f7" translate="yes" xml:space="preserve">
          <source>Duration.minusHours()</source>
          <target state="translated">Duration.minusHours()</target>
        </trans-unit>
        <trans-unit id="714723ec633026c398af7e42f32a875f8b421957" translate="yes" xml:space="preserve">
          <source>Duration.minusMillis()</source>
          <target state="translated">Duration.minusMillis()</target>
        </trans-unit>
        <trans-unit id="9e4aaa71aae9a99d50359ee427e3d219527a94de" translate="yes" xml:space="preserve">
          <source>Duration.minusMinutes()</source>
          <target state="translated">Duration.minusMinutes()</target>
        </trans-unit>
        <trans-unit id="45f2d8c7184ad62253756e68abae7f2a1f55c5b1" translate="yes" xml:space="preserve">
          <source>Duration.minusNanos()</source>
          <target state="translated">Duration.minusNanos()</target>
        </trans-unit>
        <trans-unit id="8dc28039173039b68b02be72df57ce37329dc7cd" translate="yes" xml:space="preserve">
          <source>Duration.minusSeconds()</source>
          <target state="translated">Duration.minusSeconds()</target>
        </trans-unit>
        <trans-unit id="1d5bfcef31cdc402c2b155550b5a9f42d4618485" translate="yes" xml:space="preserve">
          <source>Duration.multipliedBy()</source>
          <target state="translated">Duration.multipliedBy()</target>
        </trans-unit>
        <trans-unit id="b7c29c0849121b016118709e833f51b8f58413c0" translate="yes" xml:space="preserve">
          <source>Duration.negated()</source>
          <target state="translated">Duration.negated()</target>
        </trans-unit>
        <trans-unit id="d6a2a258e1c6b5872b5f596a5b086b2a95999bba" translate="yes" xml:space="preserve">
          <source>Duration.of()</source>
          <target state="translated">Duration.of()</target>
        </trans-unit>
        <trans-unit id="258409e04ff6722fe76b29a1178060ae2a778710" translate="yes" xml:space="preserve">
          <source>Duration.ofDays()</source>
          <target state="translated">Duration.ofDays()</target>
        </trans-unit>
        <trans-unit id="09d0b0487dc8b6d21930a5b1a36c98c6ca059d4a" translate="yes" xml:space="preserve">
          <source>Duration.ofHours()</source>
          <target state="translated">Duration.ofHours()</target>
        </trans-unit>
        <trans-unit id="ed9ca18062becd1d5cfda9cd3b3243cea165327d" translate="yes" xml:space="preserve">
          <source>Duration.ofMillis()</source>
          <target state="translated">Duration.ofMillis()</target>
        </trans-unit>
        <trans-unit id="50f5f4c2e0db0f082fa09cdc5fb70ef41b1f29b8" translate="yes" xml:space="preserve">
          <source>Duration.ofMinutes()</source>
          <target state="translated">Duration.ofMinutes()</target>
        </trans-unit>
        <trans-unit id="04acb65dc39265ee5d19cf41cf7db19811c52d34" translate="yes" xml:space="preserve">
          <source>Duration.ofNanos()</source>
          <target state="translated">Duration.ofNanos()</target>
        </trans-unit>
        <trans-unit id="838a4fa4ad925136a1d4d5402b3efbf8c14b0850" translate="yes" xml:space="preserve">
          <source>Duration.ofSeconds()</source>
          <target state="translated">Duration.ofSeconds()</target>
        </trans-unit>
        <trans-unit id="84eb67d030f05fe14d70c639d648fe64c4dfbffc" translate="yes" xml:space="preserve">
          <source>Duration.parse()</source>
          <target state="translated">Duration.parse()</target>
        </trans-unit>
        <trans-unit id="f8651625c717f1a7818151031436eac646482f4e" translate="yes" xml:space="preserve">
          <source>Duration.plus()</source>
          <target state="translated">Duration.plus()</target>
        </trans-unit>
        <trans-unit id="5fdd8a38b49ccd1f28d316e21294be7e70d9d3a2" translate="yes" xml:space="preserve">
          <source>Duration.plusDays()</source>
          <target state="translated">Duration.plusDays()</target>
        </trans-unit>
        <trans-unit id="faa749810ff2ba6c49fe432ba0ae6e0828d83ffc" translate="yes" xml:space="preserve">
          <source>Duration.plusHours()</source>
          <target state="translated">Duration.plusHours()</target>
        </trans-unit>
        <trans-unit id="116ae90cecb7c256944073754d8f498218cf3f96" translate="yes" xml:space="preserve">
          <source>Duration.plusMillis()</source>
          <target state="translated">Duration.plusMillis()</target>
        </trans-unit>
        <trans-unit id="7281e3ae17670a7a4f033392e1454ec6d2f0eda6" translate="yes" xml:space="preserve">
          <source>Duration.plusMinutes()</source>
          <target state="translated">Duration.plusMinutes()</target>
        </trans-unit>
        <trans-unit id="307fb9852b8a8d087ba24ae7a3819d8ecdc47b0e" translate="yes" xml:space="preserve">
          <source>Duration.plusNanos()</source>
          <target state="translated">Duration.plusNanos()</target>
        </trans-unit>
        <trans-unit id="5bdb5ae4ad6b604723db04eaeff74c85ed28f7a6" translate="yes" xml:space="preserve">
          <source>Duration.plusSeconds()</source>
          <target state="translated">Duration.plusSeconds()</target>
        </trans-unit>
        <trans-unit id="f9c05a96f7833b65df679ed69f4f6bbba84b55c1" translate="yes" xml:space="preserve">
          <source>Duration.subtractFrom()</source>
          <target state="translated">Duration.subtractFrom()</target>
        </trans-unit>
        <trans-unit id="fca97be59853ebe5716f826aec5de090bd060154" translate="yes" xml:space="preserve">
          <source>Duration.toDays()</source>
          <target state="translated">Duration.toDays()</target>
        </trans-unit>
        <trans-unit id="d022b07e8f4e7cc5b0776021b84e5644805d00e2" translate="yes" xml:space="preserve">
          <source>Duration.toHours()</source>
          <target state="translated">Duration.toHours()</target>
        </trans-unit>
        <trans-unit id="ea2713ff82ff0496b7fb1aef3f5eca7927287c72" translate="yes" xml:space="preserve">
          <source>Duration.toMillis()</source>
          <target state="translated">Duration.toMillis()</target>
        </trans-unit>
        <trans-unit id="fcf5200687fb4cf46a5c2d5187012eee190cf30f" translate="yes" xml:space="preserve">
          <source>Duration.toMinutes()</source>
          <target state="translated">Duration.toMinutes()</target>
        </trans-unit>
        <trans-unit id="09e88c4380b27b903b1943dca4ed67bacbe28633" translate="yes" xml:space="preserve">
          <source>Duration.toNanos()</source>
          <target state="translated">Duration.toNanos()</target>
        </trans-unit>
        <trans-unit id="7537209aeb73ea3454c97bc3b1dcba218d2b40ba" translate="yes" xml:space="preserve">
          <source>Duration.toString()</source>
          <target state="translated">Duration.toString()</target>
        </trans-unit>
        <trans-unit id="f716f82136ea9ad147dce8cd37dcb5fd69fc3e57" translate="yes" xml:space="preserve">
          <source>Duration.withNanos()</source>
          <target state="translated">Duration.withNanos()</target>
        </trans-unit>
        <trans-unit id="ee62ef8ea389fa2590ee0c39af18c07b20503601" translate="yes" xml:space="preserve">
          <source>Duration.withSeconds()</source>
          <target state="translated">Duration.withSeconds()</target>
        </trans-unit>
        <trans-unit id="110302dac043c24a9c4b17beddaccf3e8d190652" translate="yes" xml:space="preserve">
          <source>Durations and periods differ in their treatment of daylight savings time when added to &lt;a href=&quot;zoneddatetime&quot;&gt;&lt;code&gt;ZonedDateTime&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;Duration&lt;/code&gt; will add an exact number of seconds, thus a duration of one day is always exactly 24 hours. By contrast, a &lt;code&gt;Period&lt;/code&gt; will add a conceptual day, trying to maintain the local time.</source>
          <target state="translated">기간과 기간은 &lt;a href=&quot;zoneddatetime&quot;&gt; &lt;code&gt;ZonedDateTime&lt;/code&gt; 에&lt;/a&gt; 추가 될 때 일광 절약 시간 처리 방식이 다릅니다 . &lt;code&gt;Duration&lt;/code&gt; 때문에 1 일의 기간은 항상 정확히 24 시간 (초)의 정확한 수를 추가합니다. 반대로 &lt;code&gt;Period&lt;/code&gt; 은 현지 시간을 유지하기 위해 개념적 날을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="920c0358c4559e1a16ebcdc0d1dd4a13bc58e091" translate="yes" xml:space="preserve">
          <source>During DnD operations it is possible that a user may wish to drop the subject of the operation on a region of a scrollable GUI control that is not currently visible to the user.</source>
          <target state="translated">DnD 작업 중에 사용자가 현재 사용자에게 표시되지 않는 스크롤 가능한 GUI 컨트롤 영역에 작업 주제를 놓기를 원할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d3f9b36481d7df7c5af1384647f5f1661cd1c663" translate="yes" xml:space="preserve">
          <source>During UI adjustment, change subsequent columns to preserve the total width; this is the default behavior.</source>
          <target state="translated">UI 조정 중에 전체 너비를 유지하려면 후속 열을 변경하십시오. 이것이 기본 동작입니다.</target>
        </trans-unit>
        <trans-unit id="05142e54b237e53bb40f7d42bb6f40209d438ef3" translate="yes" xml:space="preserve">
          <source>During a printing operation, this method will be called with &lt;code&gt;isSelected&lt;/code&gt; and &lt;code&gt;hasFocus&lt;/code&gt; values of &lt;code&gt;false&lt;/code&gt; to prevent selection and focus from appearing in the printed output. To do other customization based on whether or not the table is being printed, check the return value from &lt;a href=&quot;../jcomponent#isPaintingForPrint()&quot;&gt;&lt;code&gt;JComponent.isPaintingForPrint()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">인쇄 작업 &lt;code&gt;isSelected&lt;/code&gt; 메서드는 isSelected 및 &lt;code&gt;hasFocus&lt;/code&gt; 값이 &lt;code&gt;false&lt;/code&gt; 로 호출되어 선택 및 포커스가 인쇄 된 출력에 나타나지 않도록합니다. 테이블이 인쇄되고 있는지 여부에 따라 다른 사용자 정의를 수행하려면 &lt;a href=&quot;../jcomponent#isPaintingForPrint()&quot;&gt; &lt;code&gt;JComponent.isPaintingForPrint()&lt;/code&gt; &lt;/a&gt; 의 반환 값을 확인하십시오 .</target>
        </trans-unit>
        <trans-unit id="5ebc10f1b16ef0bd5eda41ba033320ab965eb4a8" translate="yes" xml:space="preserve">
          <source>During a printing operation, this method will configure the renderer without indicating selection or focus, to prevent them from appearing in the printed output. To do other customizations based on whether or not the table is being printed, you can check the value of &lt;a href=&quot;jcomponent#isPaintingForPrint()&quot;&gt;&lt;code&gt;JComponent.isPaintingForPrint()&lt;/code&gt;&lt;/a&gt;, either here or within custom renderers.</source>
          <target state="translated">인쇄 작업 중에이 메서드는 선택 또는 포커스를 표시하지 않고 렌더러를 구성하여 인쇄 된 출력에 나타나지 않도록합니다. 테이블이 인쇄되고 있는지 여부에 따라 다른 사용자 정의를 수행하려면 여기 또는 사용자 정의 렌더러 내에서 &lt;a href=&quot;jcomponent#isPaintingForPrint()&quot;&gt; &lt;code&gt;JComponent.isPaintingForPrint()&lt;/code&gt; &lt;/a&gt; 의 값을 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dd9e7305d6169e832a8666decf5e9435a990d998" translate="yes" xml:space="preserve">
          <source>During activation, this &lt;code&gt;exportObject&lt;/code&gt; method should be invoked explicitly by an &quot;activatable&quot; object, that does not extend the &lt;code&gt;Activatable&lt;/code&gt; class. There is no need for objects that do extend the &lt;code&gt;Activatable&lt;/code&gt; class to invoke this method directly because the object is exported during construction.</source>
          <target state="translated">활성화하는 동안이 &lt;code&gt;exportObject&lt;/code&gt; 메서드는 &lt;code&gt;Activatable&lt;/code&gt; 클래스를 확장하지 않는 &quot;activatable&quot;개체에 의해 명시 적으로 호출되어야합니다 . 개체가 생성 중에 내보내지기 때문에이 메서드를 직접 호출하기 위해 &lt;code&gt;Activatable&lt;/code&gt; 클래스를 확장하는 개체가 필요하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d7430c68778e764878f75c32d9dc9dc282112593" translate="yes" xml:space="preserve">
          <source>During all resize operations, apply adjustments to the last column only.</source>
          <target state="translated">모든 크기 조정 작업 중에 마지막 열에 만 조정을 적용합니다.</target>
        </trans-unit>
        <trans-unit id="0114beb6fe87f447442305a0692be122c46f0992" translate="yes" xml:space="preserve">
          <source>During all resize operations, proportionately resize all columns.</source>
          <target state="translated">모든 크기 조정 작업 중에 모든 열의 크기를 비례 적으로 조정합니다.</target>
        </trans-unit>
        <trans-unit id="5baaeef5b81524f57c1b5477112c0d961d0ffae1" translate="yes" xml:space="preserve">
          <source>During annotation processing, operating on incomplete or erroneous programs is necessary; however, there are fewer guarantees about the nature of the resulting model. If the source code is not syntactically well-formed or has some other irrecoverable error that could not be removed by the generation of new types, a model may or may not be provided as a quality of implementation issue. If a program is syntactically valid but erroneous in some other fashion, any returned model must have no less information than if all the method bodies in the program were replaced by &lt;code&gt;&quot;throw
 new RuntimeException();&quot;&lt;/code&gt;. If a program refers to a missing type XYZ, the returned model must contain no less information than if the declaration of type XYZ were assumed to be &lt;code&gt;&quot;class XYZ {}&quot;&lt;/code&gt;, &lt;code&gt;&quot;interface XYZ {}&quot;&lt;/code&gt;, &lt;code&gt;&quot;enum XYZ {}&quot;&lt;/code&gt;, or &lt;code&gt;&quot;@interface XYZ {}&quot;&lt;/code&gt;. If a program refers to a missing type &lt;code&gt;XYZ&amp;lt;K1, ... ,Kn&amp;gt;&lt;/code&gt;, the returned model must contain no less information than if the declaration of XYZ were assumed to be &lt;code&gt;&quot;class XYZ&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt; or &lt;code&gt;&quot;interface XYZ&amp;lt;T1,
 ... ,Tn&amp;gt; {}&quot;&lt;/code&gt;</source>
          <target state="translated">주석 처리 중에는 불완전하거나 잘못된 프로그램에서 작업해야합니다. 그러나 결과 모델의 특성에 대한 보장은 적습니다. 소스 코드의 구문이 제대로 구성되지 않았거나 새로운 유형의 생성으로 제거 할 수없는 복구 할 수없는 다른 오류가있는 경우 모델이 구현 품질 문제로 제공되거나 제공되지 않을 수 있습니다. 프로그램이 구문 상 유효하지만 다른 방식으로 오류가있는 경우, 리턴 된 모델은 프로그램의 모든 메소드 본문이 &lt;code&gt;&quot;throw new RuntimeException();&quot;&lt;/code&gt; 으로 대체 된 경우보다 적은 정보를 가져야합니다 . . 프로그램이 누락 된 XYZ 유형을 참조하는 경우, 리턴 된 모델에는 XYZ 유형의 선언이 &lt;code&gt;&quot;class XYZ {}&quot;&lt;/code&gt; 로 가정 된 경우보다 적은 정보를 포함해야합니다 . &lt;code&gt;&quot;interface XYZ {}&quot;&lt;/code&gt; , &lt;code&gt;&quot;enum XYZ {}&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;@interface XYZ {}&quot;&lt;/code&gt; 입니다. 프로그램이 누락 된 &lt;code&gt;XYZ&amp;lt;K1, ... ,Kn&amp;gt;&lt;/code&gt; 유형을 참조하는 경우 , 리턴 된 모델에는 XYZ 선언이 &lt;code&gt;&quot;class XYZ&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt; 또는 &lt;code&gt;&quot;interface XYZ&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5756ceb57b9473952061aad89a5562f2a40d9963" translate="yes" xml:space="preserve">
          <source>During annotation processing, operating on incomplete or erroneous programs is necessary; however, there are fewer guarantees about the nature of the resulting model. If the source code is not syntactically well-formed or has some other irrecoverable error that could not be removed by the generation of new types, a model may or may not be provided as a quality of implementation issue. If a program is syntactically valid but erroneous in some other fashion, any returned model must have no less information than if all the method bodies in the program were replaced by &lt;code&gt;&quot;throw
 new RuntimeException();&quot;&lt;/code&gt;. If a program refers to a missing type Xyz, the returned model must contain no less information than if the declaration of type Xyz were assumed to be &lt;code&gt;&quot;class Xyz {}&quot;&lt;/code&gt;, &lt;code&gt;&quot;interface Xyz {}&quot;&lt;/code&gt;, &lt;code&gt;&quot;enum Xyz {}&quot;&lt;/code&gt;, &lt;code&gt;
 &quot;@interface Xyz {}&quot;&lt;/code&gt;, or &lt;code&gt;&quot;record Xyz {}&quot;&lt;/code&gt;. If a program refers to a missing type &lt;code&gt;
 Xyz&amp;lt;K1, ... ,Kn&amp;gt;&lt;/code&gt;, the returned model must contain no less information than if the declaration of Xyz were assumed to be &lt;code&gt;&quot;class Xyz&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt; or &lt;code&gt;&quot;interface Xyz&amp;lt;T1,
 ... ,Tn&amp;gt; {}&quot;&lt;/code&gt;</source>
          <target state="translated">주석 처리 중에는 불완전하거나 오류가있는 프로그램에 대한 작업이 필요합니다. 그러나 결과 모델의 특성에 대한 보장은 적습니다. 소스 코드의 구문이 적절하지 않거나 새로운 유형 생성으로 제거 할 수없는 다른 복구 불가능한 오류가있는 경우, 모델은 구현 품질 문제로 제공되거나 제공되지 않을 수 있습니다. 프로그램이 구문 상 유효하지만 다른 방식으로 오류가있는 경우, 반환 된 모델은 프로그램의 모든 메소드 본문이 &lt;code&gt;&quot;throw new RuntimeException();&quot;&lt;/code&gt; 으로 대체 된 경우보다 적은 정보를 가져야합니다 . . 프로그램이 누락 된 유형 Xyz를 참조하는 경우 리턴 된 모델에는 유형 Xyz의 선언이 &lt;code&gt;&quot;class Xyz {}&quot;&lt;/code&gt; 로 가정 된 경우보다 적은 정보가 포함되어야합니다 . &lt;code&gt;&quot;interface Xyz {}&quot;&lt;/code&gt; , &lt;code&gt;&quot;enum Xyz {}&quot;&lt;/code&gt; , &lt;code&gt; &quot;@interface Xyz {}&quot;&lt;/code&gt; , 또는 &lt;code&gt;&quot;record Xyz {}&quot;&lt;/code&gt; . 프로그램이 누락 된 유형 &lt;code&gt; Xyz&amp;lt;K1, ... ,Kn&amp;gt;&lt;/code&gt; 경우, 리턴 된 모델은 Xyz 선언이 &lt;code&gt;&quot;class Xyz&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt; 으로 가정 된 경우보다 적은 정보를 포함해야합니다. } &quot; 또는 &lt;code&gt;&quot;interface Xyz&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8958d784830ce6a200c7dfa6475c25bbad993fb7" translate="yes" xml:space="preserve">
          <source>During annotation processing, operating on incomplete or erroneous programs is necessary; however, there are fewer guarantees about the nature of the resulting model. If the source code is not syntactically well-formed or has some other irrecoverable error that could not be removed by the generation of new types, a model may or may not be provided as a quality of implementation issue. If a program is syntactically valid but erroneous in some other fashion, any returned model must have no less information than if all the method bodies in the program were replaced by &lt;code&gt;&quot;throw
 new RuntimeException();&quot;&lt;/code&gt;. If a program refers to a missing type Xyz, the returned model must contain no less information than if the declaration of type Xyz were assumed to be &lt;code&gt;&quot;class Xyz {}&quot;&lt;/code&gt;, &lt;code&gt;&quot;interface Xyz {}&quot;&lt;/code&gt;, &lt;code&gt;&quot;enum Xyz {}&quot;&lt;/code&gt;, or &lt;code&gt;
 &quot;@interface Xyz {}&quot;&lt;/code&gt;. If a program refers to a missing type &lt;code&gt;
 Xyz&amp;lt;K1, ... ,Kn&amp;gt;&lt;/code&gt;, the returned model must contain no less information than if the declaration of Xyz were assumed to be &lt;code&gt;&quot;class Xyz&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt; or &lt;code&gt;&quot;interface Xyz&amp;lt;T1,
 ... ,Tn&amp;gt; {}&quot;&lt;/code&gt;</source>
          <target state="translated">주석 처리 중에 불완전하거나 오류가있는 프로그램에 대한 작업이 필요합니다. 그러나 결과 모델의 특성에 대한 보장은 적습니다. 소스 코드의 구문이 잘 구성되어 있지 않거나 새로운 유형 생성으로 제거 할 수없는 다른 복구 불가능한 오류가있는 경우 모델이 구현 품질 문제로 제공되거나 제공되지 않을 수 있습니다. 프로그램이 구문 상 유효하지만 다른 방식으로 오류가있는 경우, 반환 된 모델은 프로그램의 모든 메서드 본문이 &lt;code&gt;&quot;throw new RuntimeException();&quot;&lt;/code&gt; 으로 대체 된 경우보다 적은 정보를 가져야합니다 . . 프로그램이 누락 된 유형 Xyz를 참조하는 경우 리턴 된 모델에는 유형 Xyz의 선언이 &lt;code&gt;&quot;class Xyz {}&quot;&lt;/code&gt; 로 가정 된 경우보다 적은 정보가 포함되어야합니다 . &lt;code&gt;&quot;interface Xyz {}&quot;&lt;/code&gt; , &lt;code&gt;&quot;enum Xyz {}&quot;&lt;/code&gt; 또는 &lt;code&gt; &quot;@interface Xyz {}&quot;&lt;/code&gt; . 프로그램이 누락 된 유형 &lt;code&gt; Xyz&amp;lt;K1, ... ,Kn&amp;gt;&lt;/code&gt; 경우, 리턴 된 모델은 Xyz 선언이 &lt;code&gt;&quot;class Xyz&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt; 으로 가정 된 경우보다 적은 정보를 포함해야합니다. } &quot; 또는 &lt;code&gt;&quot;interface Xyz&amp;lt;T1, ... ,Tn&amp;gt; {}&quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="7ad63436fe53870079ebcacc9ae838ad488776b8" translate="yes" xml:space="preserve">
          <source>During class loading, this method may be called by the &lt;code&gt;loadClass&lt;/code&gt; method of class loaders and by the Java Virtual Machine to ensure that the caller is allowed to access the package of the class that is being loaded.</source>
          <target state="translated">클래스 로딩 &lt;code&gt;loadClass&lt;/code&gt; 메소드는 클래스 로더 의 loadClass 메소드와 Java Virtual Machine에 의해 호출되어 호출자가로드되는 클래스의 패키지에 액세스 할 수 있는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="73c68ded4bdace8585d879839684caafefa0d673" translate="yes" xml:space="preserve">
          <source>During construction a provider may safely access files associated with the default provider but care needs to be taken to avoid circular loading of other installed providers. If circular loading of installed providers is detected then an unspecified error is thrown.</source>
          <target state="translated">구성하는 동안 공급자는 기본 공급자와 관련된 파일에 안전하게 액세스 할 수 있지만 설치된 다른 공급자의 순환로드를 피하기 위해주의를 기울여야합니다. 설치된 제공자의 순환로드가 감지되면 지정되지 않은 오류가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="aab994d11cc97346f4de77f9ddf9299dcb995a3b" translate="yes" xml:space="preserve">
          <source>During construction of the call site, the &lt;code&gt;createTargetHook&lt;/code&gt; is invoked to produce the actual target, as if by a call of the form &lt;code&gt;(MethodHandle) createTargetHook.invoke(this)&lt;/code&gt;.</source>
          <target state="translated">호출 사이트를 구성하는 동안 &lt;code&gt;(MethodHandle) createTargetHook.invoke(this)&lt;/code&gt; 형식의 호출에 의한 것처럼 실제 대상을 생성하기 위해 &lt;code&gt;createTargetHook&lt;/code&gt; 이 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="2ee3bdf7216945802928da957e4f64abef1a8bbd" translate="yes" xml:space="preserve">
          <source>During deserialization, readResolve adds extensions as described in &lt;a href=&quot;#special_cases_constructor&quot;&gt;Special Cases&lt;/a&gt;, only for the two cases th_TH_TH and ja_JP_JP.</source>
          <target state="translated">역 직렬화 중에 readResolve는 &lt;a href=&quot;#special_cases_constructor&quot;&gt;특별한 경우에&lt;/a&gt; 설명 된대로 th_TH_TH 및 ja_JP_JP의 경우에만 확장을 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="5bfd28f5cdef20bd56b959fde27381521c4de273" translate="yes" xml:space="preserve">
          <source>During deserialization, the fields of non-serializable classes will be initialized using the public or protected no-arg constructor of the class. A no-arg constructor must be accessible to the subclass that is serializable. The fields of serializable subclasses will be restored from the stream.</source>
          <target state="translated">직렬화 해제 중 직렬화 불가능 클래스의 필드는 클래스의 공용 또는 보호 된 인수 없음 생성자를 사용하여 초기화됩니다. 인수가없는 생성자는 직렬화 가능한 서브 클래스에 액세스 할 수 있어야합니다. 직렬화 가능 서브 클래스의 필드가 스트림에서 복원됩니다.</target>
        </trans-unit>
        <trans-unit id="ceb751d5e03d16820dfaa9405c9d350874e914b8" translate="yes" xml:space="preserve">
          <source>During each run of an annotation processing tool, a file with a given pathname may be created only once. If that file already exists before the first attempt to create it, the old contents will be deleted. Any subsequent attempt to create the same file during a run will throw a &lt;a href=&quot;filerexception&quot;&gt;&lt;code&gt;FilerException&lt;/code&gt;&lt;/a&gt;, as will attempting to create both a class file and source file for the same type name or same package name. The &lt;a href=&quot;processor&quot;&gt;initial inputs&lt;/a&gt; to the tool are considered to be created by the zeroth round; therefore, attempting to create a source or class file corresponding to one of those inputs will result in a &lt;a href=&quot;filerexception&quot;&gt;&lt;code&gt;FilerException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">주석 처리 도구를 실행할 때마다 지정된 경로 이름을 가진 파일을 한 번만 만들 수 있습니다. 파일을 처음 작성하기 전에 해당 파일이 이미 존재하면 이전 내용이 삭제됩니다. 실행 중에 동일한 파일을 작성하려는 후속 시도 는 동일한 유형 이름 또는 동일한 패키지 이름에 대해 클래스 파일과 소스 파일을 작성하려고 시도하는 것과 같이 &lt;a href=&quot;filerexception&quot;&gt; &lt;code&gt;FilerException&lt;/code&gt; &lt;/a&gt; 을 발생시킵니다. 공구에 대한 &lt;a href=&quot;processor&quot;&gt;초기 입력&lt;/a&gt; 은 0 번째 라운드에서 생성 된 것으로 간주됩니다. 따라서 해당 입력 중 하나에 해당하는 소스 또는 클래스 파일을 작성하려고하면 &lt;a href=&quot;filerexception&quot;&gt; &lt;code&gt;FilerException&lt;/code&gt; 이 발생&lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="3f3ada5a92d2551334675e5e215cd9285f9b8513" translate="yes" xml:space="preserve">
          <source>During each selection operation, keys may be added to and removed from a selector's selected-key set and may be removed from its key and cancelled-key sets. Selection is performed by the &lt;a href=&quot;#select()&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#select(long)&quot;&gt;&lt;code&gt;select(long)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#selectNow()&quot;&gt;&lt;code&gt;selectNow()&lt;/code&gt;&lt;/a&gt; methods, and involves three steps:</source>
          <target state="translated">각 선택 작업 중에 선택기의 선택된 키 세트에 키를 추가하거나 제거 할 수 있으며 키 및 취소 된 키 세트에서 제거 할 수 있습니다. 선택은 &lt;a href=&quot;#select()&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#select(long)&quot;&gt; &lt;code&gt;select(long)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#selectNow()&quot;&gt; &lt;code&gt;selectNow()&lt;/code&gt; &lt;/a&gt; 메서드에 의해 수행되며 다음 세 단계를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="6cf3cfdd5430b93d98f5fbd3648fab52ea500d64" translate="yes" xml:space="preserve">
          <source>During each selection operation, keys may be added to and removed from a selector's selected-key set and may be removed from its key and cancelled-key sets. Selection is performed by the &lt;a href=&quot;selector#select--&quot;&gt;&lt;code&gt;select()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;selector#select-long-&quot;&gt;&lt;code&gt;select(long)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;selector#selectNow--&quot;&gt;&lt;code&gt;selectNow()&lt;/code&gt;&lt;/a&gt; methods, and involves three steps:</source>
          <target state="translated">각각의 선택 동작 동안, 키는 선택기의 선택된 키 세트에 추가 및 제거 될 수 있고, 키 및 취소 된 키 세트에서 제거 될 수있다. 선택은 &lt;a href=&quot;selector#select--&quot;&gt; &lt;code&gt;select()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;selector#select-long-&quot;&gt; &lt;code&gt;select(long)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;selector#selectNow--&quot;&gt; &lt;code&gt;selectNow()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 수행되며 세 단계로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="526fc8a940a28d229a1e6941a46252450e0f279a" translate="yes" xml:space="preserve">
          <source>During each selection operation, keys may be removed from the selector's key, selected-key, and cancelled-key sets. Selection is performed by the &lt;a href=&quot;#select(java.util.function.Consumer)&quot;&gt;&lt;code&gt;select(Consumer)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#select(java.util.function.Consumer,long)&quot;&gt;&lt;code&gt;select(Consumer,long)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#selectNow(java.util.function.Consumer)&quot;&gt;&lt;code&gt;selectNow(Consumer)&lt;/code&gt;&lt;/a&gt; methods, and involves three steps:</source>
          <target state="translated">각 선택 작업 중에 선택기의 키, 선택한 키 및 취소 된 키 세트에서 키를 제거 할 수 있습니다. 선택은 &lt;a href=&quot;#select(java.util.function.Consumer)&quot;&gt; &lt;code&gt;select(Consumer)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#select(java.util.function.Consumer,long)&quot;&gt; &lt;code&gt;select(Consumer,long)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#selectNow(java.util.function.Consumer)&quot;&gt; &lt;code&gt;selectNow(Consumer)&lt;/code&gt; &lt;/a&gt; 메소드에 의해 수행되며 세 단계를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="7d9e243c16cda77441eb0ed9e930e56f1971cc38" translate="yes" xml:space="preserve">
          <source>During formatting, if the source logger has a localization ResourceBundle and if that ResourceBundle has an entry for this message string, then the message string is replaced with the localized value.</source>
          <target state="translated">포맷하는 동안 소스 로거에 현지화 ResourceBundle이 있고 해당 ResourceBundle에이 메시지 문자열에 대한 항목이 있으면 메시지 문자열이 현지화 된 값으로 바뀝니다.</target>
        </trans-unit>
        <trans-unit id="f04fb4b29df71846a3f149bba037dad9efa195df" translate="yes" xml:space="preserve">
          <source>During formatting, the chronology is obtained from the temporal object being formatted, which may have been overridden by &lt;a href=&quot;datetimeformatter#withChronology(java.time.chrono.Chronology)&quot;&gt;&lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt;&lt;/a&gt;. The &lt;code&gt;FULL&lt;/code&gt; and &lt;code&gt;LONG&lt;/code&gt; styles typically require a time-zone. When formatting using these styles, a &lt;code&gt;ZoneId&lt;/code&gt; must be available, either by using &lt;code&gt;ZonedDateTime&lt;/code&gt; or &lt;a href=&quot;datetimeformatter#withZone(java.time.ZoneId)&quot;&gt;&lt;code&gt;DateTimeFormatter.withZone(java.time.ZoneId)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">형식을 지정하는 동안 날짜순은 형식이 지정되는 시간 개체에서 가져 &lt;a href=&quot;datetimeformatter#withChronology(java.time.chrono.Chronology)&quot;&gt; &lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt; &lt;/a&gt; 의해 재정의되었을 수 있습니다 . &lt;code&gt;FULL&lt;/code&gt; 및 &lt;code&gt;LONG&lt;/code&gt; 스타일은 일반적으로 시간대를 필요로한다. 이러한 스타일을 사용하여 서식 때, &lt;code&gt;ZoneId&lt;/code&gt; 은 사용 중, 사용 가능해야합니다 &lt;code&gt;ZonedDateTime&lt;/code&gt; 또는 &lt;a href=&quot;datetimeformatter#withZone(java.time.ZoneId)&quot;&gt; &lt;code&gt;DateTimeFormatter.withZone(java.time.ZoneId)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="b6963c06744c4cb921f8204e451cdd87da55bf7d" translate="yes" xml:space="preserve">
          <source>During formatting, the chronology is obtained from the temporal object being formatted, which may have been overridden by &lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt;&lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">형식을 지정하는 동안 &lt;a href=&quot;datetimeformatter#withChronology-java.time.chrono.Chronology-&quot;&gt; &lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt; &lt;/a&gt; 형식은 DateTimeFormatter.withChronology (Chronology) 로 재정의되었을 수있는 시간 개체에서 시간 순서를 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="74fba356e520df89aabe92afe5884eb28f5d1d8a" translate="yes" xml:space="preserve">
          <source>During formatting, the chronology is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#chronology()&quot;&gt;&lt;code&gt;TemporalQueries.chronology()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../chrono/chronology#getId()&quot;&gt;&lt;code&gt;Chronology.getId()&lt;/code&gt;&lt;/a&gt;. If the chronology cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">포맷하는 동안 시간은 &lt;a href=&quot;../temporal/temporalqueries#chronology()&quot;&gt; &lt;code&gt;TemporalQueries.chronology()&lt;/code&gt; &lt;/a&gt; 하여 시간을 쿼리하는 것과 동일한 메커니즘을 사용하여 얻습니다 . &lt;a href=&quot;../chrono/chronology#getId()&quot;&gt; &lt;code&gt;Chronology.getId()&lt;/code&gt; &lt;/a&gt; 의 결과를 사용하여 인쇄됩니다 . 연대기를 얻을 수없는 경우 포맷터의 섹션이 선택 사항이 아니면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="3fe08a816cee454a7061ca9b0c45783e70300ef1" translate="yes" xml:space="preserve">
          <source>During formatting, the chronology is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#chronology--&quot;&gt;&lt;code&gt;TemporalQueries.chronology()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../chrono/chronology#getId--&quot;&gt;&lt;code&gt;Chronology.getId()&lt;/code&gt;&lt;/a&gt;. If the chronology cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">서식을 지정하는 동안 &lt;a href=&quot;../temporal/temporalqueries#chronology--&quot;&gt; &lt;code&gt;TemporalQueries.chronology()&lt;/code&gt; &lt;/a&gt; 로 시간 을 쿼리하는 것과 동일한 메커니즘을 사용하여 연대기를 얻습니다 . &lt;a href=&quot;../chrono/chronology#getId--&quot;&gt; &lt;code&gt;Chronology.getId()&lt;/code&gt; &lt;/a&gt; 의 결과를 사용하여 인쇄됩니다 . 연대기를 얻을 수 없으면 포맷터 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f2ec18985e92563f7bff4cbe40bd1216047db6f6" translate="yes" xml:space="preserve">
          <source>During formatting, the decorated element will be output and then padded to the specified width. An exception will be thrown during formatting if the pad width is exceeded.</source>
          <target state="translated">서식을 지정하는 동안 데코레이션 된 요소가 출력 된 다음 지정된 너비로 채워집니다. 패드 너비를 초과하면 포맷 중에 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="ff13468242ddc1c4613967e184702ea8b0dc5fa7" translate="yes" xml:space="preserve">
          <source>During formatting, the offset is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#offset()&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt;. If the offset cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">포맷하는 동안 오프셋은 &lt;a href=&quot;../temporal/temporalqueries#offset()&quot;&gt; &lt;code&gt;TemporalQueries.offset()&lt;/code&gt; &lt;/a&gt; 으로 시간 을 쿼리하는 것과 동일한 메커니즘을 사용하여 얻습니다 . 오프셋을 얻을 수없는 경우 포맷터의 섹션이 선택 사항이 아니면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="de60ee907a416e3af160df16e30ced3594b5afe6" translate="yes" xml:space="preserve">
          <source>During formatting, the offset is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#offset()&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt;. It will be printed using the format defined below. If the offset cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">포맷하는 동안 오프셋은 &lt;a href=&quot;../temporal/temporalqueries#offset()&quot;&gt; &lt;code&gt;TemporalQueries.offset()&lt;/code&gt; &lt;/a&gt; 으로 시간 을 쿼리하는 것과 동일한 메커니즘을 사용하여 얻습니다 . 아래 정의 된 형식을 사용하여 인쇄됩니다. 오프셋을 얻을 수없는 경우 포맷터의 섹션이 선택 사항이 아니면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8ac3f1128556516e29fb027d1ef90561f196b709" translate="yes" xml:space="preserve">
          <source>During formatting, the offset is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#offset--&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt;. If the offset cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">포맷하는 동안 &lt;a href=&quot;../temporal/temporalqueries#offset--&quot;&gt; &lt;code&gt;TemporalQueries.offset()&lt;/code&gt; &lt;/a&gt; temporal을 쿼리하는 것과 동일한 메커니즘을 사용하여 오프셋을 얻습니다 . 오프셋을 얻을 수 없으면 포맷터의 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="85927a4e03a6fbb6585d9de9788314d845c99776" translate="yes" xml:space="preserve">
          <source>During formatting, the offset is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#offset--&quot;&gt;&lt;code&gt;TemporalQueries.offset()&lt;/code&gt;&lt;/a&gt;. It will be printed using the format defined below. If the offset cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">포맷하는 동안 &lt;a href=&quot;../temporal/temporalqueries#offset--&quot;&gt; &lt;code&gt;TemporalQueries.offset()&lt;/code&gt; &lt;/a&gt; temporal을 쿼리하는 것과 동일한 메커니즘을 사용하여 오프셋을 얻습니다 . 아래에 정의 된 형식으로 인쇄됩니다. 오프셋을 얻을 수 없으면 포맷터의 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="c857ac6bff4d5a1296b0a77002e3ec1931ab0b57" translate="yes" xml:space="preserve">
          <source>During formatting, the value is obtained and checked that it is in the valid range. If text is not available for the value then it is output as a number. During parsing, the parser will match against the map of text and numeric values.</source>
          <target state="translated">포맷하는 동안 값을 가져 와서 유효한 범위에 있는지 확인합니다. 값에 텍스트를 사용할 수 없으면 숫자로 출력됩니다. 구문 분석 중 구문 분석기는 텍스트 및 숫자 값의 맵과 일치합니다.</target>
        </trans-unit>
        <trans-unit id="ad699c5ee7b8d28dfde1713b1d32205b21703bae" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zone()&quot;&gt;&lt;code&gt;TemporalQueries.zone()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../zoneid#getId()&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">포맷하는 동안 영역은 &lt;a href=&quot;../temporal/temporalqueries#zone()&quot;&gt; &lt;code&gt;TemporalQueries.zone()&lt;/code&gt; &lt;/a&gt; 으로 시간 쿼리와 동일한 메커니즘을 사용하여 가져옵니다 . &lt;a href=&quot;../zoneid#getId()&quot;&gt; &lt;code&gt;ZoneId.getId()&lt;/code&gt; &lt;/a&gt; 의 결과를 사용하여 인쇄됩니다 . 영역을 가져올 수없는 경우 포맷터의 섹션이 선택 사항이 아니면 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="6328c4cece7134fad021cacd94431ba5256de481" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zone--&quot;&gt;&lt;code&gt;TemporalQueries.zone()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">포맷하는 동안 &lt;a href=&quot;../temporal/temporalqueries#zone--&quot;&gt; &lt;code&gt;TemporalQueries.zone()&lt;/code&gt; &lt;/a&gt; temporal을 쿼리하는 것과 동일한 메커니즘을 사용하여 영역을 얻습니다 . &lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;ZoneId.getId()&lt;/code&gt; &lt;/a&gt; 의 결과를 사용하여 인쇄됩니다 . 영역을 확보 할 수없는 경우 포맷터 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="216da154816a11e1dbbd0448af0b02ede1c88f3b" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. If the zone is a &lt;code&gt;ZoneOffset&lt;/code&gt; it will be printed using the result of &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;ZoneOffset.getId()&lt;/code&gt;&lt;/a&gt;. If the zone is not an offset, the textual name will be looked up for the locale set in the &lt;a href=&quot;datetimeformatter&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt;. If the lookup for text does not find any suitable result, then the &lt;a href=&quot;../zoneid#getId()&quot;&gt;&lt;code&gt;ID&lt;/code&gt;&lt;/a&gt; will be printed. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">포맷하는 동안 &lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt; 하여 시간을 쿼리하는 것과 동일한 메커니즘을 사용하여 영역을 가져옵니다 . 영역이 &lt;code&gt;ZoneOffset&lt;/code&gt; 이면 &lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;ZoneOffset.getId()&lt;/code&gt; &lt;/a&gt; 의 결과를 사용하여 인쇄됩니다 . 영역이 오프셋이 아닌 경우 &lt;a href=&quot;datetimeformatter&quot;&gt; &lt;code&gt;DateTimeFormatter&lt;/code&gt; 에&lt;/a&gt; 설정된 로캘에 대해 텍스트 이름이 검색됩니다 . 텍스트 검색에서 적절한 결과를 찾지 못하면 &lt;a href=&quot;../zoneid#getId()&quot;&gt; &lt;code&gt;ID&lt;/code&gt; &lt;/a&gt; 가 인쇄됩니다. 영역을 가져올 수없는 경우 포맷터의 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0b6aa3354127a44f90e045461c83eb875d4e93f4" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. If the zone is a &lt;code&gt;ZoneOffset&lt;/code&gt; it will be printed using the result of &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;ZoneOffset.getId()&lt;/code&gt;&lt;/a&gt;. If the zone is not an offset, the textual name will be looked up for the locale set in the &lt;a href=&quot;datetimeformatter&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt;. If the temporal object being printed represents an instant, or if it is a local date-time that is not in a daylight saving gap or overlap then the text will be the summer or winter time text as appropriate. If the lookup for text does not find any suitable result, then the &lt;a href=&quot;../zoneid#getId()&quot;&gt;&lt;code&gt;ID&lt;/code&gt;&lt;/a&gt; will be printed. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">포맷하는 동안 &lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt; 하여 시간을 쿼리하는 것과 동일한 메커니즘을 사용하여 영역을 가져옵니다 . 영역이 &lt;code&gt;ZoneOffset&lt;/code&gt; 이면 &lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;ZoneOffset.getId()&lt;/code&gt; &lt;/a&gt; 의 결과를 사용하여 인쇄됩니다 . 영역이 오프셋이 아닌 경우 &lt;a href=&quot;datetimeformatter&quot;&gt; &lt;code&gt;DateTimeFormatter&lt;/code&gt; 에&lt;/a&gt; 설정된 로캘에 대해 텍스트 이름이 검색됩니다 . 인쇄되는 시간 개체가 순간을 나타내거나 일광 절약 간격에 속하지 않거나 겹치지 않는 로컬 날짜-시간 인 경우 텍스트는 적절하게 여름 또는 겨울 시간 텍스트가됩니다. 텍스트 조회가 적절한 결과를 찾지 못하면 &lt;a href=&quot;../zoneid#getId()&quot;&gt; &lt;code&gt;ID&lt;/code&gt; &lt;/a&gt;인쇄됩니다. 영역을 가져올 수없는 경우 포맷터의 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d1ef018ba281e8f169e3ca2ca76db9f9da00b97d" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. If the zone is a &lt;code&gt;ZoneOffset&lt;/code&gt; it will be printed using the result of &lt;a href=&quot;../zoneoffset#getId()&quot;&gt;&lt;code&gt;ZoneOffset.getId()&lt;/code&gt;&lt;/a&gt;. If the zone is not an offset, the textual name will be looked up for the locale set in the &lt;a href=&quot;datetimeformatter&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt;. If the temporal object being printed represents an instant, or if it is a local date-time that is not in a daylight saving gap or overlap, then the text will be the summer or winter time text as appropriate. If the lookup for text does not find any suitable result, then the &lt;a href=&quot;../zoneid#getId()&quot;&gt;&lt;code&gt;ID&lt;/code&gt;&lt;/a&gt; will be printed. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">포맷하는 동안 &lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt; 하여 시간을 쿼리하는 것과 동일한 메커니즘을 사용하여 영역을 가져옵니다 . 영역이 &lt;code&gt;ZoneOffset&lt;/code&gt; 이면 &lt;a href=&quot;../zoneoffset#getId()&quot;&gt; &lt;code&gt;ZoneOffset.getId()&lt;/code&gt; &lt;/a&gt; 의 결과를 사용하여 인쇄됩니다 . 영역이 오프셋이 아닌 경우 &lt;a href=&quot;datetimeformatter&quot;&gt; &lt;code&gt;DateTimeFormatter&lt;/code&gt; 에&lt;/a&gt; 설정된 로캘에 대해 텍스트 이름이 검색됩니다 . 인쇄되는 시간 개체가 순간을 나타내거나 일광 절약 간격 또는 겹치지 않는 로컬 날짜-시간 인 경우 텍스트는 적절하게 여름 또는 겨울 시간 텍스트가됩니다. 텍스트 조회가 적절한 결과를 찾지 못하면 &lt;a href=&quot;../zoneid#getId()&quot;&gt; &lt;code&gt;ID&lt;/code&gt; &lt;/a&gt;인쇄됩니다. 영역을 가져올 수없는 경우 포맷터의 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="a3713c35347517f9330778e8fd5cfc4ae24cfb0a" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. If the zone is a &lt;code&gt;ZoneOffset&lt;/code&gt; or it cannot be obtained then an exception is thrown unless the section of the formatter is optional. If the zone is not an offset, then the zone will be printed using the zone ID from &lt;a href=&quot;../zoneid#getId()&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">포맷하는 동안 &lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt; 하여 시간을 쿼리하는 것과 동일한 메커니즘을 사용하여 영역을 가져옵니다 . 영역이 &lt;code&gt;ZoneOffset&lt;/code&gt; 이거나 가져올 수없는 경우 포맷터의 섹션이 선택 사항이 아니면 예외가 throw됩니다. 영역이 오프셋이 아닌 경우 영역은 &lt;a href=&quot;../zoneid#getId()&quot;&gt; &lt;code&gt;ZoneId.getId()&lt;/code&gt; &lt;/a&gt; 의 영역 ID를 사용하여 인쇄됩니다 .</target>
        </trans-unit>
        <trans-unit id="5dcc104caca1c87b9ebc120049e93638c8e87174" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../zoneid#getId()&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">포맷하는 동안 &lt;a href=&quot;../temporal/temporalqueries#zoneId()&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt; 하여 시간을 쿼리하는 것과 동일한 메커니즘을 사용하여 영역을 가져옵니다 . &lt;a href=&quot;../zoneid#getId()&quot;&gt; &lt;code&gt;ZoneId.getId()&lt;/code&gt; &lt;/a&gt; 의 결과를 사용하여 인쇄됩니다 . 영역을 가져올 수없는 경우 포맷터의 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7ae95362869ef373f422eeea5fbbfb739c07fd82" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. If the zone is a &lt;code&gt;ZoneOffset&lt;/code&gt; it will be printed using the result of &lt;a href=&quot;../zoneoffset#getId--&quot;&gt;&lt;code&gt;ZoneOffset.getId()&lt;/code&gt;&lt;/a&gt;. If the zone is not an offset, the textual name will be looked up for the locale set in the &lt;a href=&quot;datetimeformatter&quot;&gt;&lt;code&gt;DateTimeFormatter&lt;/code&gt;&lt;/a&gt;. If the temporal object being printed represents an instant, then the text will be the summer or winter time text as appropriate. If the lookup for text does not find any suitable result, then the &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;ID&lt;/code&gt;&lt;/a&gt; will be printed instead. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">서식을 지정하는 동안 &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt; temporal을 쿼리하는 것과 동일한 메커니즘을 사용하여 영역을 얻습니다 . 영역이 &lt;code&gt;ZoneOffset&lt;/code&gt; 인 경우 &lt;a href=&quot;../zoneoffset#getId--&quot;&gt; &lt;code&gt;ZoneOffset.getId()&lt;/code&gt; &lt;/a&gt; 의 결과를 사용하여 인쇄됩니다 . 영역이 오프셋이 아닌 경우 텍스트 이름은 &lt;a href=&quot;datetimeformatter&quot;&gt; &lt;code&gt;DateTimeFormatter&lt;/code&gt; 에&lt;/a&gt; 설정된 로케일을 찾습니다 . 인쇄되는 임시 개체가 순간을 나타내는 경우, 해당 텍스트는 여름 또는 겨울 시간 텍스트가됩니다. 텍스트 검색에서 적합한 결과를 찾지 못하면 대신 &lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;ID&lt;/code&gt; &lt;/a&gt; 가 인쇄됩니다. 영역을 확보 할 수 없으면 포맷터의 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="d3b90c96a7fcf7a451966988e3a176ba0847ac13" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. If the zone is a &lt;code&gt;ZoneOffset&lt;/code&gt; or it cannot be obtained then an exception is thrown unless the section of the formatter is optional. If the zone is not an offset, then the zone will be printed using the zone ID from &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">포맷하는 동안 &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt; temporal을 쿼리하는 것과 동일한 메커니즘을 사용하여 영역을 얻습니다 . 영역이 &lt;code&gt;ZoneOffset&lt;/code&gt; 이거나 해당 영역을 확보 할 수없는 경우 포맷터의 섹션이 선택 사항이 아닌 한 예외가 발생합니다. 영역이 오프셋이 아닌 경우 &lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;ZoneId.getId()&lt;/code&gt; &lt;/a&gt; 의 영역 ID를 사용하여 영역이 인쇄됩니다 .</target>
        </trans-unit>
        <trans-unit id="2aa240fcbe863a7ef78f61d18a24054e27225dc2" translate="yes" xml:space="preserve">
          <source>During formatting, the zone is obtained using a mechanism equivalent to querying the temporal with &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt;&lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt;&lt;/a&gt;. It will be printed using the result of &lt;a href=&quot;../zoneid#getId--&quot;&gt;&lt;code&gt;ZoneId.getId()&lt;/code&gt;&lt;/a&gt;. If the zone cannot be obtained then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">서식을 지정하는 동안 &lt;a href=&quot;../temporal/temporalqueries#zoneId--&quot;&gt; &lt;code&gt;TemporalQueries.zoneId()&lt;/code&gt; &lt;/a&gt; temporal을 쿼리하는 것과 동일한 메커니즘을 사용하여 영역을 얻습니다 . &lt;a href=&quot;../zoneid#getId--&quot;&gt; &lt;code&gt;ZoneId.getId()&lt;/code&gt; &lt;/a&gt; 의 결과를 사용하여 인쇄됩니다 . 영역을 확보 할 수 없으면 포맷터의 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="4c7804966f6935eab96626a07987e4d2d482291f" translate="yes" xml:space="preserve">
          <source>During formatting, this method has no effect.</source>
          <target state="translated">포맷하는 동안이 방법은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="2d396df68a68a3f28ecd5b773a14e9ffc2a19267" translate="yes" xml:space="preserve">
          <source>During handshaking, if the URL's hostname and the server's identification hostname mismatch, the verification mechanism can call back to implementers of this interface to determine if this connection should be allowed.</source>
          <target state="translated">핸드 셰이 킹 중에 URL의 호스트 이름과 서버의 식별 호스트 이름이 일치하지 않으면 확인 메커니즘이이 인터페이스의 구현자를 호출하여이 연결이 허용되는지 여부를 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3823e4f42960cf811d86c35e7313859bfd3657ea" translate="yes" xml:space="preserve">
          <source>During mouse events caused by the depression or release of a mouse button, &lt;code&gt;button&lt;/code&gt; is used to indicate which mouse button changed state.</source>
          <target state="translated">마우스 버튼을 &lt;code&gt;button&lt;/code&gt; 거나 놓아서 발생하는 마우스 이벤트 동안, 버튼 은 어떤 마우스 버튼이 상태를 변경했는지 표시하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="f0dd78a4d0c5a2b8f2f8358f44f6e1f64d6c419e" translate="yes" xml:space="preserve">
          <source>During mouse events caused by the depression or release of a mouse button, &lt;code&gt;button&lt;/code&gt; is used to indicate which mouse button changed state. The values for &lt;code&gt;button&lt;/code&gt; range from zero to indicate the left button of the mouse, one to indicate the middle button if present, and two to indicate the right button. For mice configured for left handed use in which the button actions are reversed the values are instead read from right to left.</source>
          <target state="translated">마우스 버튼을 &lt;code&gt;button&lt;/code&gt; 거나 놓아서 발생하는 마우스 이벤트 동안, 버튼 은 어떤 마우스 버튼이 상태를 변경했는지 표시하는 데 사용됩니다. &lt;code&gt;button&lt;/code&gt; 의 값 은 0부터 마우스의 왼쪽 버튼을 나타내며, 1은 중간 버튼을 나타내며, 2는 오른쪽 버튼을 나타냅니다. 버튼 동작이 반전 된 왼손잡이 용으로 구성된 마우스의 경우 값이 대신 오른쪽에서 왼쪽으로 읽 힙니다.</target>
        </trans-unit>
        <trans-unit id="0eb8b734c98b923f91249267c6bd8f5f84416330" translate="yes" xml:space="preserve">
          <source>During object input, convert this deserialized enumeration instance to the proper enumeration value defined in the enumeration attribute class.</source>
          <target state="translated">개체를 입력하는 동안이 역 직렬화 된 열거 인스턴스를 열거 특성 클래스에 정의 된 적절한 열거 값으로 변환합니다.</target>
        </trans-unit>
        <trans-unit id="dd4918c0179f00ea2f3e61a3ac5fbc6f82bb13ac" translate="yes" xml:space="preserve">
          <source>During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;. In this situation, the zone id will be determined by the region information from formatter's &lt;a href=&quot;datetimeformatter#getLocale()&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; and the standard zone id for that area, for example, America/New_York for the America Eastern zone. The &lt;a href=&quot;#appendGenericZoneText(java.time.format.TextStyle,java.util.Set)&quot;&gt;&lt;code&gt;appendGenericZoneText(TextStyle, Set)&lt;/code&gt;&lt;/a&gt; may be used to specify a set of preferred &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; in this situation.</source>
          <target state="translated">구문 분석 중에 텍스트 영역 이름, 영역 ID 또는 오프셋이 허용됩니다. CST는 &quot;중부 표준시&quot;및 &quot;중국 표준시&quot;둘 다에 사용할 수있는 것과 같이 많은 텍스트 영역 이름이 고유하지 않습니다. 이 상황에서 영역 ID는 포맷터 &lt;a href=&quot;datetimeformatter#getLocale()&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt; 의 지역 정보 와 해당 지역의 표준 영역 ID (예 : 미국 동부 영역의 경우 America / New_York)에 의해 결정됩니다. &lt;a href=&quot;#appendGenericZoneText(java.time.format.TextStyle,java.util.Set)&quot;&gt; &lt;code&gt;appendGenericZoneText(TextStyle, Set)&lt;/code&gt; &lt;/a&gt; 바람직한 집합을 지정하기 위해 사용될 수있다 &lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; 를&lt;/a&gt; 이 상황에서.</target>
        </trans-unit>
        <trans-unit id="464d388c1316b85fd38a83731987300f5156e587" translate="yes" xml:space="preserve">
          <source>During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;. In this situation, the zone id will be determined by the region information from formatter's &lt;a href=&quot;datetimeformatter#getLocale()&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; and the standard zone id for that area, for example, America/New_York for the America Eastern zone. The &lt;a href=&quot;#appendZoneText(java.time.format.TextStyle,java.util.Set)&quot;&gt;&lt;code&gt;appendZoneText(TextStyle, Set)&lt;/code&gt;&lt;/a&gt; may be used to specify a set of preferred &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; in this situation.</source>
          <target state="translated">구문 분석 중에 텍스트 영역 이름, 영역 ID 또는 오프셋이 허용됩니다. CST는 &quot;중부 표준시&quot;및 &quot;중국 표준시&quot;둘 다에 사용할 수있는 것과 같이 많은 텍스트 영역 이름이 고유하지 않습니다. 이 상황에서 영역 ID는 포맷터 &lt;a href=&quot;datetimeformatter#getLocale()&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt; 의 지역 정보 와 해당 지역의 표준 영역 ID (예 : 미국 동부 영역의 경우 America / New_York)에 의해 결정됩니다. &lt;a href=&quot;#appendZoneText(java.time.format.TextStyle,java.util.Set)&quot;&gt; &lt;code&gt;appendZoneText(TextStyle, Set)&lt;/code&gt; &lt;/a&gt; 바람직한 집합을 지정하기 위해 사용될 수있다 &lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; 를&lt;/a&gt; 이 상황에서.</target>
        </trans-unit>
        <trans-unit id="25665e8e548e7823762f251b6c1b60c45aaf0213" translate="yes" xml:space="preserve">
          <source>During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;. In this situation, the zone id will be determined by the region information from formatter's &lt;a href=&quot;datetimeformatter#getLocale()&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; and the standard zone id for that area, for example, America/New_York for the America Eastern zone. This method also allows a set of preferred &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; to be specified for parsing. The matched preferred zone id will be used if the textural zone name being parsed is not unique.</source>
          <target state="translated">구문 분석 중에 텍스트 영역 이름, 영역 ID 또는 오프셋이 허용됩니다. CST는 &quot;중부 표준시&quot;및 &quot;중국 표준시&quot;둘 다에 사용할 수있는 것과 같이 많은 텍스트 영역 이름이 고유하지 않습니다. 이 상황에서 영역 ID는 포맷터 &lt;a href=&quot;datetimeformatter#getLocale()&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt; 의 지역 정보 와 해당 지역의 표준 영역 ID (예 : 미국 동부 영역의 경우 America / New_York)에 의해 결정됩니다. 또한이 메서드를 사용하면 선호하는 &lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; &lt;/a&gt; 집합 을 구문 분석에 지정할 수 있습니다. 구문 분석중인 텍스처 영역 이름이 고유하지 않은 경우 일치하는 선호 영역 ID가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6aa0d719c8817b3e1d8fc50c109dd5db59b9f750" translate="yes" xml:space="preserve">
          <source>During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;. In this situation, the zone id will be determined by the region information from formatter's &lt;a href=&quot;datetimeformatter#getLocale--&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; and the standard zone id for that area, for example, America/New_York for the America Eastern zone. The &lt;a href=&quot;datetimeformatterbuilder#appendZoneText-java.time.format.TextStyle-java.util.Set-&quot;&gt;&lt;code&gt;appendZoneText(TextStyle, Set)&lt;/code&gt;&lt;/a&gt; may be used to specify a set of preferred &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; in this situation.</source>
          <target state="translated">구문 분석 중 텍스트 영역 이름, 영역 ID 또는 오프셋이 허용됩니다. CST가 &quot;중앙 표준시&quot;와 &quot;중국 표준시&quot;둘 다일 수있는 것과 같이 많은 텍스트 영역 이름이 고유하지 않습니다. 이 상황에서 영역 ID는 포맷터 &lt;a href=&quot;datetimeformatter#getLocale--&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt; 의 지역 정보 및 해당 영역의 표준 영역 ID (예 : 아메리카 동부 영역의 America / New_York)에 의해 결정됩니다. 이 &lt;a href=&quot;datetimeformatterbuilder#appendZoneText-java.time.format.TextStyle-java.util.Set-&quot;&gt; &lt;code&gt;appendZoneText(TextStyle, Set)&lt;/code&gt; &lt;/a&gt; 를 사용하여 선호하는 &lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; &lt;/a&gt; 세트를 지정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="58a86560617fc9e4897a0988ef62e3f71d9b264c" translate="yes" xml:space="preserve">
          <source>During parsing, either the textual zone name, the zone ID or the offset is accepted. Many textual zone names are not unique, such as CST can be for both &quot;Central Standard Time&quot; and &quot;China Standard Time&quot;. In this situation, the zone id will be determined by the region information from formatter's &lt;a href=&quot;datetimeformatter#getLocale--&quot;&gt;&lt;code&gt;locale&lt;/code&gt;&lt;/a&gt; and the standard zone id for that area, for example, America/New_York for the America Eastern zone. This method also allows a set of preferred &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; to be specified for parsing. The matched preferred zone id will be used if the textural zone name being parsed is not unique.</source>
          <target state="translated">구문 분석 중 텍스트 영역 이름, 영역 ID 또는 오프셋이 허용됩니다. CST가 &quot;중앙 표준시&quot;와 &quot;중국 표준시&quot;둘 다일 수있는 것과 같이 많은 텍스트 영역 이름이 고유하지 않습니다. 이 상황에서 영역 ID는 포맷터 &lt;a href=&quot;datetimeformatter#getLocale--&quot;&gt; &lt;code&gt;locale&lt;/code&gt; &lt;/a&gt; 의 지역 정보 및 해당 영역의 표준 영역 ID (예 : 아메리카 동부 영역의 America / New_York)에 의해 결정됩니다. 이 방법을 사용하면 선호하는 &lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; &lt;/a&gt; 세트 를 구문 분석에 지정할 수 있습니다. 구문 분석중인 텍스처 영역 이름이 고유하지 않은 경우 일치하는 선호 영역 ID가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c0a9a1ba277c0d7094f6f5184deccbe7b259db3f" translate="yes" xml:space="preserve">
          <source>During parsing, if a chronology has already been parsed, then it is used. Otherwise the default from &lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt; is used, with &lt;code&gt;IsoChronology&lt;/code&gt; as the fallback.</source>
          <target state="translated">구문 분석 중 연대기가 이미 구문 분석 된 경우 사용됩니다. 그렇지 않으면 &lt;code&gt;DateTimeFormatter.withChronology(Chronology)&lt;/code&gt; 의 기본값 이 사용되며 &lt;code&gt;IsoChronology&lt;/code&gt; 가 폴백으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="716feed90ddcbbb95f038e15ce310e6d17f6f0c2" translate="yes" xml:space="preserve">
          <source>During parsing, the chronology is parsed and must match one of the chronologies in &lt;a href=&quot;../chrono/chronology#getAvailableChronologies()&quot;&gt;&lt;code&gt;Chronology.getAvailableChronologies()&lt;/code&gt;&lt;/a&gt;. If the chronology cannot be parsed then an exception is thrown unless the section of the formatter is optional. The parser uses the &lt;a href=&quot;#parseCaseInsensitive()&quot;&gt;case sensitive&lt;/a&gt; setting.</source>
          <target state="translated">구문 분석 중에 연대기가 구문 분석되고 &lt;a href=&quot;../chrono/chronology#getAvailableChronologies()&quot;&gt; &lt;code&gt;Chronology.getAvailableChronologies()&lt;/code&gt; &lt;/a&gt; 의 연대기 중 하나와 일치해야합니다 . 연대기를 구문 분석 할 수없는 경우 포맷터의 섹션이 선택 사항이 아니면 예외가 발생합니다. 구문 분석기는 &lt;a href=&quot;#parseCaseInsensitive()&quot;&gt;대소 문자 구분&lt;/a&gt; 설정을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="191ca3d4cfb9916eb4775c37f1204bfe60f75597" translate="yes" xml:space="preserve">
          <source>During parsing, the chronology is parsed and must match one of the chronologies in &lt;a href=&quot;../chrono/chronology#getAvailableChronologies--&quot;&gt;&lt;code&gt;Chronology.getAvailableChronologies()&lt;/code&gt;&lt;/a&gt;. If the chronology cannot be parsed then an exception is thrown unless the section of the formatter is optional. The parser uses the &lt;a href=&quot;datetimeformatterbuilder#parseCaseInsensitive--&quot;&gt;case sensitive&lt;/a&gt; setting.</source>
          <target state="translated">구문 분석 중 연대기가 구문 분석되며 &lt;a href=&quot;../chrono/chronology#getAvailableChronologies--&quot;&gt; &lt;code&gt;Chronology.getAvailableChronologies()&lt;/code&gt; &lt;/a&gt; 의 연대 중 하나와 일치해야합니다 . 연대기를 구문 분석 할 수없는 경우 포맷터 섹션이 선택 사항이 아닌 한 예외가 발생합니다. 파서는 &lt;a href=&quot;datetimeformatterbuilder#parseCaseInsensitive--&quot;&gt;대소 문자 구분&lt;/a&gt; 설정을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="660a719637845b5f2477a0ff69b5b7ccfa7eb52f" translate="yes" xml:space="preserve">
          <source>During parsing, the current state of the parse is inspected. If the specified field has no associated value, because it has not been parsed successfully at that point, then the specified value is injected into the parse result. Injection is immediate, thus the field-value pair will be visible to any subsequent elements in the formatter. As such, this method is normally called at the end of the builder.</source>
          <target state="translated">구문 분석 중 구문 분석의 현재 상태가 검사됩니다. 지정된 필드가 해당 지점에서 성공적으로 구문 분석되지 않았기 때문에 연관된 값이없는 경우 지정된 값이 구문 분석 결과에 주입됩니다. 주입이 즉시 이루어 지므로 필드 값 쌍은 포맷터의 모든 후속 요소에 표시됩니다. 따라서이 메소드는 일반적으로 빌더의 끝에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b193b91f8dbd49a4c7e7c7de8ece0cf96f1a1eaf" translate="yes" xml:space="preserve">
          <source>During parsing, the offset is parsed using the format defined above. If the offset cannot be parsed then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">구문 분석 중 위에 정의 된 형식을 사용하여 오프셋이 구문 분석됩니다. 오프셋을 구문 분석 할 수없는 경우 포맷터 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="93d6ed2e246953d5d73452dbaf6d05a817ddc751" translate="yes" xml:space="preserve">
          <source>During parsing, the offset is parsed using the format defined below. If the offset cannot be parsed then an exception is thrown unless the section of the formatter is optional.</source>
          <target state="translated">구문 분석 중 아래 정의 된 형식을 사용하여 오프셋이 구문 분석됩니다. 오프셋을 구문 분석 할 수없는 경우 포맷터 섹션이 선택 사항이 아닌 한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="72e8de8e6e843fddb564fc8660d359fd8bc5f946" translate="yes" xml:space="preserve">
          <source>During parsing, the padding and decorated element are parsed. If parsing is lenient, then the pad width is treated as a maximum. If parsing is case insensitive, then the pad character is matched ignoring case. The padding is parsed greedily. Thus, if the decorated element starts with the pad character, it will not be parsed.</source>
          <target state="translated">구문 분석 중 패딩 및 장식 된 요소가 구문 분석됩니다. 구문 분석이 관대하지 않으면 패드 너비가 최대 값으로 처리됩니다. 구문 분석이 대소 문자를 구분하지 않으면 패드 문자는 대소 문자를 무시하고 일치합니다. 패딩은 탐욕스럽게 구문 분석됩니다. 따라서 장식 된 요소가 패드 문자로 시작하면 구문 분석되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="051e7e637f0a79d80fda592f79caa0cc6df65da5" translate="yes" xml:space="preserve">
          <source>During parsing, the padding and decorated element are parsed. If parsing is lenient, then the pad width is treated as a maximum. The padding is parsed greedily. Thus, if the decorated element starts with the pad character, it will not be parsed.</source>
          <target state="translated">구문 분석 중 패딩 및 장식 된 요소가 구문 분석됩니다. 구문 분석이 관대하지 않으면 패드 너비가 최대 값으로 처리됩니다. 패딩은 탐욕스럽게 구문 분석됩니다. 따라서 장식 된 요소가 패드 문자로 시작하면 구문 분석되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="de57d38f94fd5df94b547b34daa02eafb099fa7f" translate="yes" xml:space="preserve">
          <source>During parsing, the text must match a known zone or offset. There are two types of zone ID, offset-based, such as '+01:30' and region-based, such as 'Europe/London'. These are parsed differently. If the parse starts with '+', '-', 'UT', 'UTC' or 'GMT', then the parser expects an offset-based zone and will not match region-based zones. The offset ID, such as '+02:30', may be at the start of the parse, or prefixed by 'UT', 'UTC' or 'GMT'. The offset ID parsing is equivalent to using &lt;a href=&quot;#appendOffset(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;appendOffset(String, String)&lt;/code&gt;&lt;/a&gt; using the arguments 'HH:MM:ss' and the no offset string '0'. If the parse starts with 'UT', 'UTC' or 'GMT', and the parser cannot match a following offset ID, then &lt;a href=&quot;../zoneoffset#UTC&quot;&gt;&lt;code&gt;ZoneOffset.UTC&lt;/code&gt;&lt;/a&gt; is selected. In all other cases, the list of known region-based zones is used to find the longest available match. If no match is found, and the parse starts with 'Z', then &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; is selected. The parser uses the &lt;a href=&quot;#parseCaseInsensitive()&quot;&gt;case sensitive&lt;/a&gt; setting.</source>
          <target state="translated">구문 분석 중에 텍스트는 알려진 영역 또는 오프셋과 일치해야합니다. 영역 ID에는 '+01 : 30'과 같은 오프셋 기반과 'Europe / London'과 같은 지역 기반의 두 가지 유형이 있습니다. 이들은 다르게 구문 분석됩니다. 구문 분석이 '+', '-', 'UT', 'UTC'또는 'GMT'로 시작하면 구문 분석기는 오프셋 기반 영역을 예상하고 지역 기반 영역과 일치하지 않습니다. '+02 : 30'과 같은 오프셋 ID는 구문 분석 시작 부분에 있거나 'UT', 'UTC'또는 'GMT'로 시작될 수 있습니다. 오프셋 ID 구문 분석은 'HH : MM : ss'인수와 오프셋 없음 문자열 '0' 을 사용하여 &lt;a href=&quot;#appendOffset(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;appendOffset(String, String)&lt;/code&gt; &lt;/a&gt; 사용하는 것과 같습니다 . 구문 분석이 'UT', 'UTC'또는 'GMT'로 시작하고 구문 분석기가 다음 오프셋 ID와 일치 할 수없는 경우 &lt;a href=&quot;../zoneoffset#UTC&quot;&gt; &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; &lt;/a&gt;선택됩니다. 다른 모든 경우에는 알려진 지역 기반 영역 목록을 사용하여 사용 가능한 가장 긴 일치 항목을 찾습니다. 일치하는 항목이없고 구문 분석이 'Z'로 시작하면 &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; 가 선택됩니다. 구문 분석기는 &lt;a href=&quot;#parseCaseInsensitive()&quot;&gt;대소 문자 구분&lt;/a&gt; 설정을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="2afa73df0d5f6aa582b13dfbcefba4da345c228d" translate="yes" xml:space="preserve">
          <source>During parsing, the text must match a known zone or offset. There are two types of zone ID, offset-based, such as '+01:30' and region-based, such as 'Europe/London'. These are parsed differently. If the parse starts with '+', '-', 'UT', 'UTC' or 'GMT', then the parser expects an offset-based zone and will not match region-based zones. The offset ID, such as '+02:30', may be at the start of the parse, or prefixed by 'UT', 'UTC' or 'GMT'. The offset ID parsing is equivalent to using &lt;a href=&quot;datetimeformatterbuilder#appendOffset-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;appendOffset(String, String)&lt;/code&gt;&lt;/a&gt; using the arguments 'HH:MM:ss' and the no offset string '0'. If the parse starts with 'UT', 'UTC' or 'GMT', and the parser cannot match a following offset ID, then &lt;a href=&quot;../zoneoffset#UTC&quot;&gt;&lt;code&gt;ZoneOffset.UTC&lt;/code&gt;&lt;/a&gt; is selected. In all other cases, the list of known region-based zones is used to find the longest available match. If no match is found, and the parse starts with 'Z', then &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; is selected. The parser uses the &lt;a href=&quot;datetimeformatterbuilder#parseCaseInsensitive--&quot;&gt;case sensitive&lt;/a&gt; setting.</source>
          <target state="translated">구문 분석 중 텍스트는 알려진 영역 또는 오프셋과 일치해야합니다. 영역 ID에는 '+01 : 30'과 같은 오프셋 기반과 '유럽 / 런던'과 같은 지역 기반의 두 가지 유형이 있습니다. 이들은 다르게 구문 분석됩니다. 구문 분석이 '+', '-', 'UT', 'UTC'또는 'GMT'로 시작하면 구문 분석기는 오프셋 기반 영역을 예상하며 지역 기반 영역과 일치하지 않습니다. '+02 : 30'과 같은 오프셋 ID는 구문 분석 시작시 또는 'UT', 'UTC'또는 'GMT'로 시작될 수 있습니다. 오프셋 ID 구문 분석은 인수 'HH : MM : ss'및 no offset 문자열 '0' 을 사용하여 &lt;a href=&quot;datetimeformatterbuilder#appendOffset-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;appendOffset(String, String)&lt;/code&gt; &lt;/a&gt; 사용하는 것과 같습니다 . 구문 분석이 'UT', 'UTC'또는 'GMT'로 시작하고 구문 분석기가 다음 오프셋 ID와 일치 할 수없는 경우 &lt;a href=&quot;../zoneoffset#UTC&quot;&gt; &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; &lt;/a&gt;가 선택되었습니다. 다른 모든 경우에는 알려진 지역 기반 영역 목록이 사용 가능한 가장 긴 일치 항목을 찾는 데 사용됩니다. 일치하는 것이 없으면 구문 분석이 'Z'로 시작하면 &lt;code&gt;ZoneOffset.UTC&lt;/code&gt; 가 선택됩니다. 파서는 &lt;a href=&quot;datetimeformatterbuilder#parseCaseInsensitive--&quot;&gt;대소 문자 구분&lt;/a&gt; 설정을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="01765f14af868b8b1aeb62907856eea430bbb176" translate="yes" xml:space="preserve">
          <source>During secure socket negotiations, implementations call methods in this interface to:</source>
          <target state="translated">보안 소켓 협상 중에 구현은이 인터페이스의 메소드를 호출하여 다음을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="033e5031d233d516e8f61663b0beee851fa0d4a8" translate="yes" xml:space="preserve">
          <source>During secure socket negotiations, implentations call methods in this interface to:</source>
          <target state="translated">보안 소켓 협상 중에이 인터페이스에서 함축은 다음을 위해 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="68b8a55bc054d889921736425f1e68d260a17b12" translate="yes" xml:space="preserve">
          <source>During serialization of XML data, namespace fixup is done as defined in [&lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM Level 3 Core&lt;/a&gt;] , Appendix B. [&lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113&quot;&gt;DOM Level 2 Core&lt;/a&gt;] allows empty strings as a real namespace URI. If the &lt;code&gt;namespaceURI&lt;/code&gt; of a &lt;code&gt;Node&lt;/code&gt; is empty string, the serialization will treat them as &lt;code&gt;null&lt;/code&gt;, ignoring the prefix if any.</source>
          <target state="translated">XML 데이터를 직렬화하는 동안 네임 스페이스 수정은 [ &lt;a href=&quot;http://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM Level 3 Core&lt;/a&gt; ], Appendix B에 정의 된대로 수행됩니다 . [ &lt;a href=&quot;http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113&quot;&gt;DOM Level 2 Core&lt;/a&gt; ]는 빈 문자열을 실제 네임 스페이스 URI로 허용합니다. 는 IF &lt;code&gt;namespaceURI&lt;/code&gt; (A)의 &lt;code&gt;Node&lt;/code&gt; 빈 문자열, 직렬화로 취급하므로 &lt;code&gt;null&lt;/code&gt; 접두사가있는 경우를 무시.</target>
        </trans-unit>
        <trans-unit id="592907dd8f3202ec295572708727486329063dd5" translate="yes" xml:space="preserve">
          <source>During serialization of XML data, namespace fixup is done as defined in [&lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM Level 3 Core&lt;/a&gt;] , Appendix B. [&lt;a href=&quot;https://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113&quot;&gt;DOM Level 2 Core&lt;/a&gt;] allows empty strings as a real namespace URI. If the &lt;code&gt;namespaceURI&lt;/code&gt; of a &lt;code&gt;Node&lt;/code&gt; is empty string, the serialization will treat them as &lt;code&gt;null&lt;/code&gt;, ignoring the prefix if any.</source>
          <target state="translated">XML 데이터를 직렬화하는 동안 네임 스페이스 수정은 [ &lt;a href=&quot;https://www.w3.org/TR/2004/REC-DOM-Level-3-Core-20040407&quot;&gt;DOM Level 3 Core&lt;/a&gt; ], Appendix B에 정의 된대로 수행됩니다 . [ &lt;a href=&quot;https://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113&quot;&gt;DOM Level 2 Core&lt;/a&gt; ]는 빈 문자열을 실제 네임 스페이스 URI로 허용합니다. 는 IF &lt;code&gt;namespaceURI&lt;/code&gt; (A)의 &lt;code&gt;Node&lt;/code&gt; 빈 문자열, 직렬화로 취급하므로 &lt;code&gt;null&lt;/code&gt; 접두사가있는 경우를 무시.</target>
        </trans-unit>
        <trans-unit id="ca3d5b9d1e4e5b96a2bd9661fa1be631b78ef705" translate="yes" xml:space="preserve">
          <source>During serialization, writeObject writes all fields to the output stream, including extensions.</source>
          <target state="translated">직렬화 중 writeObject는 확장을 포함하여 모든 필드를 출력 스트림에 씁니다.</target>
        </trans-unit>
        <trans-unit id="b5470469aab3a236c58b1b5447cd21d8ef4cc0eb" translate="yes" xml:space="preserve">
          <source>During the context establishment phase, the &lt;a href=&quot;#isProtReady()&quot;&gt;&lt;code&gt;isProtReady&lt;/code&gt;&lt;/a&gt; method may be called to determine if the context can be used for the per-message operations of &lt;a href=&quot;#wrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;wrap&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getMIC(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt;&lt;code&gt;getMIC&lt;/code&gt;&lt;/a&gt;. This allows applications to use per-message operations on contexts which aren't yet fully established.</source>
          <target state="translated">컨텍스트 설정 단계 동안 &lt;a href=&quot;#isProtReady()&quot;&gt; &lt;code&gt;isProtReady&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 컨텍스트를 &lt;a href=&quot;#wrap(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;wrap&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#getMIC(byte%5B%5D,int,int,org.ietf.jgss.MessageProp)&quot;&gt; &lt;code&gt;getMIC&lt;/code&gt; &lt;/a&gt; 의 메시지 별 작업에 사용할 수 있는지 여부를 결정할 수 있습니다 . 이를 통해 애플리케이션은 아직 완전히 설정되지 않은 컨텍스트에서 메시지 별 작업을 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1ed988ff4f033e76e1664f162d4b67a760c09d65" translate="yes" xml:space="preserve">
          <source>During the drag, the data associated with the current drag operation can be retrieved by calling &lt;code&gt;getTransferable()&lt;/code&gt; on &lt;code&gt;DropTargetDragEvent&lt;/code&gt; instances passed to the listener's methods.</source>
          <target state="translated">드래그하는 동안 리스너의 메서드에 전달 된 &lt;code&gt;DropTargetDragEvent&lt;/code&gt; 인스턴스 에서 &lt;code&gt;getTransferable()&lt;/code&gt; 을 호출하여 현재 드래그 작업과 관련된 데이터를 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="14a3d059cb74ef9c2712cb1356287deee2a37b42" translate="yes" xml:space="preserve">
          <source>During the parse, the XMLReader will provide information about the XML document through the registered event handlers.</source>
          <target state="translated">구문 분석 중에 XMLReader는 등록 된 이벤트 핸들러를 통해 XML 문서에 대한 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f8b3d2fb3dd4754dbcd9d713eed5e8418bcfd115" translate="yes" xml:space="preserve">
          <source>During the resource bundle loading process above, this factory method looks up the cache before calling the &lt;a href=&quot;resourcebundle.control#newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)&quot;&gt;&lt;code&gt;control.newBundle&lt;/code&gt;&lt;/a&gt; method. If the time-to-live period of the resource bundle found in the cache has expired, the factory method calls the &lt;a href=&quot;resourcebundle.control#needsReload(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle,long)&quot;&gt;&lt;code&gt;control.needsReload&lt;/code&gt;&lt;/a&gt; method to determine whether the resource bundle needs to be reloaded. If reloading is required, the factory method calls &lt;code&gt;control.newBundle&lt;/code&gt; to reload the resource bundle. If &lt;code&gt;control.newBundle&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;, the factory method puts a dummy resource bundle in the cache as a mark of nonexistent resource bundles in order to avoid lookup overhead for subsequent requests. Such dummy resource bundles are under the same expiration control as specified by &lt;code&gt;control&lt;/code&gt;.</source>
          <target state="translated">위의 리소스 번들로드 프로세스 &lt;a href=&quot;resourcebundle.control#newBundle(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,boolean)&quot;&gt; &lt;code&gt;control.newBundle&lt;/code&gt; &lt;/a&gt; 팩토리 메서드는 control.newBundle 메서드 를 호출하기 전에 캐시를 조회합니다 . 캐시에서 발견 된 리소스 번들의 수명이 만료 된 경우 팩토리 메서드는 &lt;a href=&quot;resourcebundle.control#needsReload(java.lang.String,java.util.Locale,java.lang.String,java.lang.ClassLoader,java.util.ResourceBundle,long)&quot;&gt; &lt;code&gt;control.needsReload&lt;/code&gt; &lt;/a&gt; 메서드를 호출 하여 리소스 번들을 다시로드해야하는지 여부를 결정합니다. 다시로드가 필요한 경우 팩토리 메서드는 &lt;code&gt;control.newBundle&lt;/code&gt; 을 호출 하여 리소스 번들을 다시로드합니다. 경우 &lt;code&gt;control.newBundle&lt;/code&gt; 의 반환 &lt;code&gt;null&lt;/code&gt; , 순서에 존재하지 않는 자원 번들의 표시로 캐시의 팩토리 메소드 둔다 더미 리소스 번들은 후속 요청에 대한 오버 헤드 조회를 방지 할 수 있습니다. 이러한 더미 리소스 번들은 다음에 지정된 것과 동일한 만료 제어를받습니다. &lt;code&gt;control&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="c6f3bb08de84932901388d0c83861d8f431122f6" translate="yes" xml:space="preserve">
          <source>During the resource bundle loading process above, this factory method looks up the cache before calling the &lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt;&lt;code&gt;control.newBundle&lt;/code&gt;&lt;/a&gt; method. If the time-to-live period of the resource bundle found in the cache has expired, the factory method calls the &lt;a href=&quot;resourcebundle.control#needsReload-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-java.util.ResourceBundle-long-&quot;&gt;&lt;code&gt;control.needsReload&lt;/code&gt;&lt;/a&gt; method to determine whether the resource bundle needs to be reloaded. If reloading is required, the factory method calls &lt;code&gt;control.newBundle&lt;/code&gt; to reload the resource bundle. If &lt;code&gt;control.newBundle&lt;/code&gt; returns &lt;code&gt;null&lt;/code&gt;, the factory method puts a dummy resource bundle in the cache as a mark of nonexistent resource bundles in order to avoid lookup overhead for subsequent requests. Such dummy resource bundles are under the same expiration control as specified by &lt;code&gt;control&lt;/code&gt;.</source>
          <target state="translated">위의 자원 번들로드 프로세스 &lt;a href=&quot;resourcebundle.control#newBundle-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-boolean-&quot;&gt; &lt;code&gt;control.newBundle&lt;/code&gt; &lt;/a&gt; 팩토리 메소드는 control.newBundle 메소드 를 호출하기 전에 캐시를 찾습니다 . 캐시에서 찾은 자원 번들의 유효 기간이 만료 된 경우 팩토리 메소드는 &lt;a href=&quot;resourcebundle.control#needsReload-java.lang.String-java.util.Locale-java.lang.String-java.lang.ClassLoader-java.util.ResourceBundle-long-&quot;&gt; &lt;code&gt;control.needsReload&lt;/code&gt; &lt;/a&gt; 메소드를 호출 하여 자원 번들을 다시로드해야하는지 여부를 판별합니다. 재로드가 필요한 경우, 팩토리 메소드는 &lt;code&gt;control.newBundle&lt;/code&gt; 을 호출 하여 자원 번들을 재로드합니다. 경우 &lt;code&gt;control.newBundle&lt;/code&gt; 의 반환 &lt;code&gt;null&lt;/code&gt; , 순서에 존재하지 않는 자원 번들의 표시로 캐시의 팩토리 메소드 둔다 더미 리소스 번들은 후속 요청에 대한 오버 헤드 조회를 방지 할 수 있습니다. 이러한 더미 자원 번들은 다음과 같은 만료 제어하에 있습니다. &lt;code&gt;control&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="19b1957101b9f5d2231e8190cc51ea9669af30ec" translate="yes" xml:space="preserve">
          <source>During verification, whenever it is necessary to load the class named &lt;code&gt;CN&lt;/code&gt;, the attempt succeeds, producing class &lt;code&gt;C&lt;/code&gt;. No request is made of any class loader.</source>
          <target state="translated">확인하는 동안 &lt;code&gt;CN&lt;/code&gt; 이라는 클래스를로드해야 할 때마다 시도가 성공하여 클래스 &lt;code&gt;C&lt;/code&gt; 를 생성 합니다. 클래스 로더에 대한 요청이 없습니다.</target>
        </trans-unit>
        <trans-unit id="90b092a93fc718cf9531a71680fa4e48d57c24c2" translate="yes" xml:space="preserve">
          <source>Dynalink and Java objects</source>
          <target state="translated">Dynalink 및 Java 객체</target>
        </trans-unit>
        <trans-unit id="5eb220561cfa2cc8b233b0621961e0e88b2e75fb" translate="yes" xml:space="preserve">
          <source>Dynalink and bytecode creation</source>
          <target state="translated">Dynalink 및 바이트 코드 생성</target>
        </trans-unit>
        <trans-unit id="3219644a49e9f17c8a199936cbe2c168648a1eb0" translate="yes" xml:space="preserve">
          <source>Dynalink defines several standard operations in its &lt;a href=&quot;jdk/dynalink/standardoperation&quot;&gt;&lt;code&gt;StandardOperation&lt;/code&gt;&lt;/a&gt; class. The linker for Java objects can link all of these operations, and you are encouraged to at minimum support and use these operations in your language too. The standard operations &lt;code&gt;GET&lt;/code&gt; and &lt;code&gt;SET&lt;/code&gt; need to be combined with at least one &lt;a href=&quot;jdk/dynalink/namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; to be useful, e.g. to express a property getter, you'd use &lt;code&gt;StandardOperation.GET.withNamespace(StandardNamespace.PROPERTY)&lt;/code&gt;. Dynalink defines three standard namespaces in the &lt;a href=&quot;jdk/dynalink/standardnamespace&quot;&gt;&lt;code&gt;StandardNamespace&lt;/code&gt;&lt;/a&gt; class. To associate a fixed name with an operation, you can use &lt;a href=&quot;jdk/dynalink/namedoperation&quot;&gt;&lt;code&gt;NamedOperation&lt;/code&gt;&lt;/a&gt; as in the previous example: &lt;code&gt;StandardOperation.GET.withNamespace(StandardNamespace.PROPERTY).named(&quot;color&quot;)&lt;/code&gt; expresses a getter for the property named &quot;color&quot;.</source>
          <target state="translated">Dynalink는 &lt;a href=&quot;jdk/dynalink/standardoperation&quot;&gt; &lt;code&gt;StandardOperation&lt;/code&gt; &lt;/a&gt; 클래스 에서 몇 가지 표준 작업을 정의합니다 . Java 객체 용 링커는 이러한 모든 작업을 연결할 수 있으며 최소한 이러한 작업을 사용자의 언어로 지원하고 사용하는 것이 좋습니다. 표준 작업은 &lt;code&gt;GET&lt;/code&gt; 및 &lt;code&gt;SET&lt;/code&gt; 의 필요가 적어도 하나와 결합 할 &lt;a href=&quot;jdk/dynalink/namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; &lt;/a&gt; 속성 게터를 표현하기 위해, 예를 유용하려면 사용하십시오 &lt;code&gt;StandardOperation.GET.withNamespace(StandardNamespace.PROPERTY)&lt;/code&gt; . Dynalink는 &lt;a href=&quot;jdk/dynalink/standardnamespace&quot;&gt; &lt;code&gt;StandardNamespace&lt;/code&gt; &lt;/a&gt; 클래스 에서 세 가지 표준 네임 스페이스를 정의합니다 . 고정 이름을 작업과 연결하려면 이전 예제에서와 같이 &lt;a href=&quot;jdk/dynalink/namedoperation&quot;&gt; &lt;code&gt;NamedOperation&lt;/code&gt; &lt;/a&gt; 을 사용할 수 있습니다 . &lt;code&gt;StandardOperation.GET.withNamespace(StandardNamespace.PROPERTY).named(&quot;color&quot;)&lt;/code&gt; 는 &quot;color&quot;라는 속성에 대한 getter를 표현합니다.</target>
        </trans-unit>
        <trans-unit id="1df45789376375078c5f46d9e0c1fd6ef1c8e2e0" translate="yes" xml:space="preserve">
          <source>Dynalink is a library for dynamic linking of high-level operations on objects. These operations include &quot;read a property&quot;, &quot;write a property&quot;, &quot;invoke a function&quot; and so on. Dynalink is primarily useful for implementing programming languages where at least some expressions have dynamic types (that is, types that can not be decided statically), and the operations on dynamic types are expressed as &lt;a href=&quot;../java.base/java/lang/invoke/callsite&quot;&gt;call sites&lt;/a&gt;. These call sites will be linked to appropriate target &lt;a href=&quot;../java.base/java/lang/invoke/methodhandle&quot;&gt;method handles&lt;/a&gt; at run time based on actual types of the values the expressions evaluated to. These can change between invocations, necessitating relinking the call site multiple times to accommodate new types; Dynalink handles all that and more.</source>
          <target state="translated">Dynalink는 객체에 대한 높은 수준의 작업을 동적으로 연결하기위한 라이브러리입니다. 이러한 작업에는 &quot;속성 읽기&quot;, &quot;속성 쓰기&quot;, &quot;함수 호출&quot;등이 포함됩니다. Dynalink는 최소한 일부 표현식에 동적 유형 (정적으로 결정할 수없는 유형)이 있고 동적 유형에 대한 작업이 &lt;a href=&quot;../java.base/java/lang/invoke/callsite&quot;&gt;호출 사이트&lt;/a&gt; 로 표현되는 프로그래밍 언어를 구현하는 데 주로 유용 합니다 . 이러한 호출 사이트는 식이 평가되는 값의 실제 유형을 기반으로 런타임 에 적절한 대상 &lt;a href=&quot;../java.base/java/lang/invoke/methodhandle&quot;&gt;메서드 핸들&lt;/a&gt; 에 연결 됩니다. 이는 호출간에 변경 될 수 있으므로 새로운 유형을 수용하기 위해 호출 사이트를 여러 번 다시 연결해야합니다. Dynalink는이 모든 것을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="297194fbf98a0ae3a1afef7f87521ce4ef58d819" translate="yes" xml:space="preserve">
          <source>Dynalink is at liberty to either cache some of the returned converters or to repeatedly request the converter factory to create the same conversion.</source>
          <target state="translated">Dynalink는 반환 된 변환기 중 일부를 캐시하거나 변환기 팩토리에 동일한 변환을 생성하도록 반복적으로 요청할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4be2fdcba53467c68a9a324dc4d1e8f70ed834ef" translate="yes" xml:space="preserve">
          <source>Dynalink is closely related to, and relies on, the &lt;a href=&quot;../java.base/java/lang/invoke/package-summary&quot;&gt;&lt;code&gt;java.lang.invoke&lt;/code&gt;&lt;/a&gt; package.</source>
          <target state="translated">Dynalink는 &lt;a href=&quot;../java.base/java/lang/invoke/package-summary&quot;&gt; &lt;code&gt;java.lang.invoke&lt;/code&gt; &lt;/a&gt; 패키지 와 밀접한 관련이 있으며 이에 의존 합니다.</target>
        </trans-unit>
        <trans-unit id="7dcc04c1137b6ed8a8499095406b083fac4f6c7d" translate="yes" xml:space="preserve">
          <source>Dynalink is probably best explained by an example showing its use. Let's suppose you have a program in a language where you don't have to declare the type of an object and you want to access a property on it:</source>
          <target state="translated">Dynalink는 아마도 그 사용을 보여주는 예제로 가장 잘 설명 될 것입니다. 객체의 유형을 선언 할 필요가없고 그에 대한 속성에 액세스하려는 언어로 된 프로그램이 있다고 가정 해 보겠습니다.</target>
        </trans-unit>
        <trans-unit id="269426f084d337875a430519ceaf0d8212193edf" translate="yes" xml:space="preserve">
          <source>Dynalink supports implementation of programming languages with object models that differ (even radically) from the JVM's class-based model and have their custom type conversions.</source>
          <target state="translated">Dynalink는 JVM의 클래스 기반 모델과 다르고 (심지어 근본적으로) 사용자 정의 유형 변환이있는 객체 모델을 사용하여 프로그래밍 언어 구현을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="06732e4d93768bcb7fc3c1caf89c9fa9ff73637e" translate="yes" xml:space="preserve">
          <source>Dynalink uses &lt;a href=&quot;jdk/dynalink/callsitedescriptor&quot;&gt;&lt;code&gt;CallSiteDescriptor&lt;/code&gt;&lt;/a&gt; objects to preserve the parameters to the bootstrap method: the lookup and the method type, as it will need them whenever it needs to relink a call site.</source>
          <target state="translated">Dynalink는 &lt;a href=&quot;jdk/dynalink/callsitedescriptor&quot;&gt; &lt;code&gt;CallSiteDescriptor&lt;/code&gt; &lt;/a&gt; 객체를 사용 하여 호출 사이트를 다시 연결해야 할 때마다 필요하므로 부트 스트랩 메서드 (조회 및 ​​메서드 유형)에 대한 매개 변수를 보존합니다.</target>
        </trans-unit>
        <trans-unit id="54720c729f63706320704e5e9060250151702bb9" translate="yes" xml:space="preserve">
          <source>Dynalink uses &lt;a href=&quot;jdk/dynalink/operation&quot;&gt;&lt;code&gt;Operation&lt;/code&gt;&lt;/a&gt; objects to express dynamic operations. It does not prescribe how would you encode the operations in your call site, though. That is why in the above example the &lt;code&gt;parseOperation&lt;/code&gt; function is left empty, and you would be expected to provide the code to parse the string &lt;code&gt;&quot;GET:PROPERTY:color&quot;&lt;/code&gt; in the call site's name into a named property getter operation object as &lt;code&gt;StandardOperation.GET.withNamespace(StandardNamespace.PROPERTY).named(&quot;color&quot;)&lt;/code&gt;.</source>
          <target state="translated">Dynalink는 &lt;a href=&quot;jdk/dynalink/operation&quot;&gt; &lt;code&gt;Operation&lt;/code&gt; &lt;/a&gt; 객체를 사용 하여 동적 작업을 표현합니다. 그러나 호출 사이트에서 작업을 인코딩하는 방법을 규정하지는 않습니다. 이것이 위의 예에서 &lt;code&gt;parseOperation&lt;/code&gt; 함수가 비어있는 이유이며 호출 사이트 이름의 &lt;code&gt;&quot;GET:PROPERTY:color&quot;&lt;/code&gt; 문자열 을 &lt;code&gt;StandardOperation.GET.withNamespace(StandardNamespace.PROPERTY).named(&quot;color&quot;)&lt;/code&gt; 으로 명명 된 속성 getter 작업 개체로 구문 분석하는 코드를 제공해야합니다 . .withNamespace (StandardNamespace.PROPERTY) .named ( &quot;color&quot;) .</target>
        </trans-unit>
        <trans-unit id="298d9d8d5744f92e432401693309d1bbe3ff6074" translate="yes" xml:space="preserve">
          <source>Dynamic Access</source>
          <target state="translated">동적 액세스</target>
        </trans-unit>
        <trans-unit id="8834dae1adbcc14f5b837748cb429a08a1bf96d3" translate="yes" xml:space="preserve">
          <source>Dynamic Address Reconfiguration</source>
          <target state="translated">동적 주소 재구성</target>
        </trans-unit>
        <trans-unit id="c78e4505384decd4038b612ae0d0f30e8b5bddee" translate="yes" xml:space="preserve">
          <source>Dynamic MBeans</source>
          <target state="translated">동적 MBean</target>
        </trans-unit>
        <trans-unit id="4e97c5f24ead91c30ca718451dbc049525f2b3d6" translate="yes" xml:space="preserve">
          <source>Dynamic Modules</source>
          <target state="translated">동적 모듈</target>
        </trans-unit>
        <trans-unit id="7e0f8efcd345f2ea502e218faee30da89844583e" translate="yes" xml:space="preserve">
          <source>Dynamic code downloading</source>
          <target state="translated">동적 코드 다운로드</target>
        </trans-unit>
        <trans-unit id="88aec902f9a10d023d00343fd43acb6f84eaf46b" translate="yes" xml:space="preserve">
          <source>Dynamic linking of the specified library</source>
          <target state="translated">지정된 라이브러리의 동적 링크</target>
        </trans-unit>
        <trans-unit id="7c787ebaf18e8857eb9ac6e68769b4e2afbac264" translate="yes" xml:space="preserve">
          <source>Dynamic resolution of call sites and constants</source>
          <target state="translated">호출 사이트 및 상수의 동적 해결</target>
        </trans-unit>
        <trans-unit id="c534d3bb735c63a8d1a1ba181ce17b3c3817e747" translate="yes" xml:space="preserve">
          <source>Dynamic update of rules is a complex problem and most applications should not use this method or dynamic rules. To achieve dynamic rules, a provider implementation will have to be written as per the specification of this class. In addition, instances of &lt;code&gt;ZoneRules&lt;/code&gt; must not be cached in the application as they will become stale. However, the boolean flag on &lt;a href=&quot;#provideRules(java.lang.String,boolean)&quot;&gt;&lt;code&gt;provideRules(String, boolean)&lt;/code&gt;&lt;/a&gt; allows provider implementations to control the caching of &lt;code&gt;ZoneId&lt;/code&gt;, potentially ensuring that all objects in the system see the new rules. Note that there is likely to be a cost in performance of a dynamic rules provider. Note also that no dynamic rules provider is in this specification.</source>
          <target state="translated">규칙의 동적 업데이트는 복잡한 문제이며 대부분의 응용 프로그램은이 방법이나 동적 규칙을 사용하지 않아야합니다. 동적 규칙을 달성하려면이 클래스의 사양에 따라 공급자 구현을 작성해야합니다. 또한 &lt;code&gt;ZoneRules&lt;/code&gt; 의 인스턴스는 오래된 상태가되므로 응용 프로그램에 캐시 하면 안됩니다. 그러나 &lt;a href=&quot;#provideRules(java.lang.String,boolean)&quot;&gt; &lt;code&gt;provideRules(String, boolean)&lt;/code&gt; &lt;/a&gt; 의 부울 플래그를 사용하면 공급자 구현이 &lt;code&gt;ZoneId&lt;/code&gt; 캐싱을 제어 할 수 있으므로 잠재적으로 시스템의 모든 개체가 새 규칙을 볼 수 있습니다. 동적 규칙 공급자의 성능에 비용이 발생할 수 있습니다. 또한이 사양에는 동적 규칙 공급자가 없습니다.</target>
        </trans-unit>
        <trans-unit id="c0a4c142a61f88983312715c4d27e6f5e339313a" translate="yes" xml:space="preserve">
          <source>Dynamic update of rules is a complex problem and most applications should not use this method or dynamic rules. To achieve dynamic rules, a provider implementation will have to be written as per the specification of this class. In addition, instances of &lt;code&gt;ZoneRules&lt;/code&gt; must not be cached in the application as they will become stale. However, the boolean flag on &lt;a href=&quot;zonerulesprovider#provideRules-java.lang.String-boolean-&quot;&gt;&lt;code&gt;provideRules(String, boolean)&lt;/code&gt;&lt;/a&gt; allows provider implementations to control the caching of &lt;code&gt;ZoneId&lt;/code&gt;, potentially ensuring that all objects in the system see the new rules. Note that there is likely to be a cost in performance of a dynamic rules provider. Note also that no dynamic rules provider is in this specification.</source>
          <target state="translated">규칙의 동적 업데이트는 복잡한 문제이므로 대부분의 응용 프로그램에서는이 방법이나 동적 규칙을 사용하지 않아야합니다. 동적 규칙을 달성하려면이 클래스의 스펙에 따라 제공자 구현을 작성해야합니다. 또한 &lt;code&gt;ZoneRules&lt;/code&gt; 의 인스턴스는 오래 되어 애플리케이션에서 캐시되지 않아야 합니다. 그러나 &lt;a href=&quot;zonerulesprovider#provideRules-java.lang.String-boolean-&quot;&gt; &lt;code&gt;provideRules(String, boolean)&lt;/code&gt; &lt;/a&gt; 의 boolean 플래그 는 제공자 구현이 &lt;code&gt;ZoneId&lt;/code&gt; 의 캐싱을 제어 하여 시스템의 모든 오브젝트가 새 규칙을 볼 수있게합니다. 동적 규칙 공급자의 성능에 비용이 발생할 수 있습니다. 또한이 사양에는 동적 규칙 공급자가 없습니다.</target>
        </trans-unit>
        <trans-unit id="11d3c9df73a060d96cddb99595dd716561f0418f" translate="yes" xml:space="preserve">
          <source>DynamicCallSiteDesc</source>
          <target state="translated">DynamicCallSiteDesc</target>
        </trans-unit>
        <trans-unit id="ed179de5e3ca05d673a3572d592e2aaca057901d" translate="yes" xml:space="preserve">
          <source>DynamicConstantDesc</source>
          <target state="translated">DynamicConstantDesc</target>
        </trans-unit>
        <trans-unit id="9d5279e6e5ed756b491f1b06ddf18d6499e8184b" translate="yes" xml:space="preserve">
          <source>DynamicLinker</source>
          <target state="translated">DynamicLinker</target>
        </trans-unit>
        <trans-unit id="5a289ce88e23a4c3ea0db0bf602e6bcd44cf3680" translate="yes" xml:space="preserve">
          <source>DynamicLinkerFactory</source>
          <target state="translated">DynamicLinkerFactory</target>
        </trans-unit>
        <trans-unit id="fc8a231a2cdc7c41dc1c6e0395464730ea4cecaa" translate="yes" xml:space="preserve">
          <source>DynamicMBean</source>
          <target state="translated">DynamicMBean</target>
        </trans-unit>
        <trans-unit id="2bcfc50ea42917ec195e96de1ced48702c3a988a" translate="yes" xml:space="preserve">
          <source>DynamicMBean.getAttribute()</source>
          <target state="translated">DynamicMBean.getAttribute()</target>
        </trans-unit>
        <trans-unit id="89a7cd259515ecc091c9e50aee6df33b908fa20d" translate="yes" xml:space="preserve">
          <source>DynamicMBean.getAttributes()</source>
          <target state="translated">DynamicMBean.getAttributes()</target>
        </trans-unit>
        <trans-unit id="46a1c4e1954a38579a347affdf6a1643540ce392" translate="yes" xml:space="preserve">
          <source>DynamicMBean.getMBeanInfo()</source>
          <target state="translated">DynamicMBean.getMBeanInfo()</target>
        </trans-unit>
        <trans-unit id="a991f9655da18f8237eb99cd0a2a59bfbc8d4ff4" translate="yes" xml:space="preserve">
          <source>DynamicMBean.invoke()</source>
          <target state="translated">DynamicMBean.invoke()</target>
        </trans-unit>
        <trans-unit id="4a25bc0cc715918dae1a446cddea115342d71b01" translate="yes" xml:space="preserve">
          <source>DynamicMBean.setAttribute()</source>
          <target state="translated">DynamicMBean.setAttribute()</target>
        </trans-unit>
        <trans-unit id="5a5fee6c935edcd5c1e56d373445a1d430f7626b" translate="yes" xml:space="preserve">
          <source>DynamicMBean.setAttributes()</source>
          <target state="translated">DynamicMBean.setAttributes()</target>
        </trans-unit>
        <trans-unit id="5e1abe5044d45b11d2a08e92d6e861f5e4e71857" translate="yes" xml:space="preserve">
          <source>DynamicUtilTreeNode</source>
          <target state="translated">DynamicUtilTreeNode</target>
        </trans-unit>
        <trans-unit id="2aa731cc6975d875276d6dcbc7e9224e988e8bcf" translate="yes" xml:space="preserve">
          <source>Dynamically-computed call sites</source>
          <target state="translated">동적으로 계산 된 호출 사이트</target>
        </trans-unit>
        <trans-unit id="7f205af4dc7dcad3178e9eeb94a30c6c4f8a7cef" translate="yes" xml:space="preserve">
          <source>Dynamically-computed constants</source>
          <target state="translated">동적으로 계산 된 상수</target>
        </trans-unit>
        <trans-unit id="e0184adedf913b076626646d3f52c3b49c39ad6d" translate="yes" xml:space="preserve">
          <source>E</source>
          <target state="translated">E</target>
        </trans-unit>
        <trans-unit id="37556bd5ed42df76f73ebe653563aeeb143ba50e" translate="yes" xml:space="preserve">
          <source>E size .</source>
          <target state="translated">E 사이즈.</target>
        </trans-unit>
        <trans-unit id="8a92f0023efe9b353b01416a728a7984891d4c5a" translate="yes" xml:space="preserve">
          <source>E size.</source>
          <target state="translated">E 사이즈.</target>
        </trans-unit>
        <trans-unit id="8dbc38b8d7f71098f025b909fc27200ee056784a" translate="yes" xml:space="preserve">
          <source>E.g. from HTML: &amp;lt;a href=&quot;http://openjdk.java.net&quot;&amp;gt;OpenJDK&amp;lt;/a&amp;gt; this method would return a String containing the text: 'OpenJDK'.</source>
          <target state="translated">예 : HTML에서 : &amp;lt;a href=&quot;http://openjdk.java.net&quot;&amp;gt; OpenJDK &amp;lt;/a&amp;gt;이 메서드는 'OpenJDK'텍스트를 포함하는 문자열을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e9a79b53c210686429e07eab42107c7ffa067363" translate="yes" xml:space="preserve">
          <source>EARLY_DYNASTIC_CUNEIFORM</source>
          <target state="translated">EARLY_DYNASTIC_CUNEIFORM</target>
        </trans-unit>
        <trans-unit id="b03384b19cd327b19be4776119e100541f0a86bd" translate="yes" xml:space="preserve">
          <source>EAST</source>
          <target state="translated">EAST</target>
        </trans-unit>
        <trans-unit id="8ae8894790377450360a86386acbf86bfcaf5e38" translate="yes" xml:space="preserve">
          <source>EASTERN_ARABIC</source>
          <target state="translated">EASTERN_ARABIC</target>
        </trans-unit>
        <trans-unit id="e4b06f6b152e160765eb34203c1de7ada0bb7b64" translate="yes" xml:space="preserve">
          <source>EAT - Africa/Addis_Ababa</source>
          <target state="translated">EAT-아프리카 / 아디스 _ 아바바</target>
        </trans-unit>
        <trans-unit id="601f2e6dfccb9827ca507e4f4f4f72b0a822f61d" translate="yes" xml:space="preserve">
          <source>ECB</source>
          <target state="translated">ECB</target>
        </trans-unit>
        <trans-unit id="4c486ca702baf7892ef9decd0d5ff6d6b246e424" translate="yes" xml:space="preserve">
          <source>ECDSA_SHA1</source>
          <target state="translated">ECDSA_SHA1</target>
        </trans-unit>
        <trans-unit id="e1b8ac1c994698c89907dfbef6d02a2529fa5099" translate="yes" xml:space="preserve">
          <source>ECDSA_SHA224</source>
          <target state="translated">ECDSA_SHA224</target>
        </trans-unit>
        <trans-unit id="8c28cde841e465433ac448b295c8ab7e946b833b" translate="yes" xml:space="preserve">
          <source>ECDSA_SHA256</source>
          <target state="translated">ECDSA_SHA256</target>
        </trans-unit>
        <trans-unit id="5f622c5bcace6e5729aec9505be779e805b60dc3" translate="yes" xml:space="preserve">
          <source>ECDSA_SHA384</source>
          <target state="translated">ECDSA_SHA384</target>
        </trans-unit>
        <trans-unit id="f0a3e40855b15e4f7673a92061d2a9ca7cc8cf1c" translate="yes" xml:space="preserve">
          <source>ECDSA_SHA512</source>
          <target state="translated">ECDSA_SHA512</target>
        </trans-unit>
        <trans-unit id="484c0540c6bfcedac6849997e5e0766ff2e2acdc" translate="yes" xml:space="preserve">
          <source>ECField</source>
          <target state="translated">ECField</target>
        </trans-unit>
        <trans-unit id="2658a01429323ad39737999b3b7142a3d5d8e196" translate="yes" xml:space="preserve">
          <source>ECField.getFieldSize()</source>
          <target state="translated">ECField.getFieldSize()</target>
        </trans-unit>
        <trans-unit id="d9898f316485620be7b173c694c2ed72e1f5adab" translate="yes" xml:space="preserve">
          <source>ECFieldF2m</source>
          <target state="translated">ECFieldF2m</target>
        </trans-unit>
        <trans-unit id="36e7f19e6ba8f565ca993ca66fd6e17fe7eb308b" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.equals()</source>
          <target state="translated">ECFieldF2m.equals()</target>
        </trans-unit>
        <trans-unit id="8937926871f18b31c7d6d622d6b5e0452f2bb503" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.getFieldSize()</source>
          <target state="translated">ECFieldF2m.getFieldSize()</target>
        </trans-unit>
        <trans-unit id="7ebafde21ad6778e6e4ac34e6eba9db320ad8684" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.getM()</source>
          <target state="translated">ECFieldF2m.getM()</target>
        </trans-unit>
        <trans-unit id="f1cea3791239dc1bf411a7147dece3df618f498c" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.getMidTermsOfReductionPolynomial()</source>
          <target state="translated">ECFieldF2m.getMidTermsOfReductionPolynomial()</target>
        </trans-unit>
        <trans-unit id="63101533955a9be37909b63f6f24e1bcba0bc441" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.getReductionPolynomial()</source>
          <target state="translated">ECFieldF2m.getReductionPolynomial()</target>
        </trans-unit>
        <trans-unit id="3976abd2e6fa17305016254a33c95386394d881b" translate="yes" xml:space="preserve">
          <source>ECFieldF2m.hashCode()</source>
          <target state="translated">ECFieldF2m.hashCode()</target>
        </trans-unit>
        <trans-unit id="bc872885a9855575e40017c153cab5632890dc61" translate="yes" xml:space="preserve">
          <source>ECFieldFp</source>
          <target state="translated">ECFieldFp</target>
        </trans-unit>
        <trans-unit id="53d60f64c65a0d8219fefcc720e2ccf509009a68" translate="yes" xml:space="preserve">
          <source>ECFieldFp.equals()</source>
          <target state="translated">ECFieldFp.equals()</target>
        </trans-unit>
        <trans-unit id="30d1b94dcc58f11b131d3bf43cd966ded02a0fc9" translate="yes" xml:space="preserve">
          <source>ECFieldFp.getFieldSize()</source>
          <target state="translated">ECFieldFp.getFieldSize()</target>
        </trans-unit>
        <trans-unit id="02e8256e1c66bbdf141519e024e9e7ff04c16a91" translate="yes" xml:space="preserve">
          <source>ECFieldFp.getP()</source>
          <target state="translated">ECFieldFp.getP()</target>
        </trans-unit>
        <trans-unit id="65b421ba691a3a68e75d58f81c156cbd493f642d" translate="yes" xml:space="preserve">
          <source>ECFieldFp.hashCode()</source>
          <target state="translated">ECFieldFp.hashCode()</target>
        </trans-unit>
        <trans-unit id="1e9830d00f8ec3259613f4dff1281a7adff4f6af" translate="yes" xml:space="preserve">
          <source>ECGenParameterSpec</source>
          <target state="translated">ECGenParameterSpec</target>
        </trans-unit>
        <trans-unit id="d37406af3bf01864f0a6c55240b87e21b1b5b189" translate="yes" xml:space="preserve">
          <source>ECGenParameterSpec.getName()</source>
          <target state="translated">ECGenParameterSpec.getName()</target>
        </trans-unit>
        <trans-unit id="a95d0a39c7a64e9695e6bd117f38673380c9eb3c" translate="yes" xml:space="preserve">
          <source>ECKey</source>
          <target state="translated">ECKey</target>
        </trans-unit>
        <trans-unit id="26f1460fd392ab6278f38275c90b71e9401e7015" translate="yes" xml:space="preserve">
          <source>ECKey.getParams()</source>
          <target state="translated">ECKey.getParams()</target>
        </trans-unit>
        <trans-unit id="5c71332cc2e4953624e755826970d2fc1a95245b" translate="yes" xml:space="preserve">
          <source>ECParameterSpec</source>
          <target state="translated">ECParameterSpec</target>
        </trans-unit>
        <trans-unit id="aa125d60e4d36280fae87072658c9123a763bcdc" translate="yes" xml:space="preserve">
          <source>ECParameterSpec.getCofactor()</source>
          <target state="translated">ECParameterSpec.getCofactor()</target>
        </trans-unit>
        <trans-unit id="dcd57c7482bcf9c8923cc59195564b8010899383" translate="yes" xml:space="preserve">
          <source>ECParameterSpec.getCurve()</source>
          <target state="translated">ECParameterSpec.getCurve()</target>
        </trans-unit>
        <trans-unit id="4a45e378dc788609ce75184339098e2b7c75ccfd" translate="yes" xml:space="preserve">
          <source>ECParameterSpec.getGenerator()</source>
          <target state="translated">ECParameterSpec.getGenerator()</target>
        </trans-unit>
        <trans-unit id="66c081bfcece1f9d25bb87afd25936de90028129" translate="yes" xml:space="preserve">
          <source>ECParameterSpec.getOrder()</source>
          <target state="translated">ECParameterSpec.getOrder()</target>
        </trans-unit>
        <trans-unit id="131f0aca4fc7fbb9781dca63d6626d89d5db8fa5" translate="yes" xml:space="preserve">
          <source>ECPoint</source>
          <target state="translated">ECPoint</target>
        </trans-unit>
        <trans-unit id="7383fa4bf2e59ad882a32ae14ae81d683e482091" translate="yes" xml:space="preserve">
          <source>ECPoint.equals()</source>
          <target state="translated">ECPoint.equals()</target>
        </trans-unit>
        <trans-unit id="7d350700f06a34948120bb0632a8c123ac1fb971" translate="yes" xml:space="preserve">
          <source>ECPoint.getAffineX()</source>
          <target state="translated">ECPoint.getAffineX()</target>
        </trans-unit>
        <trans-unit id="4ecd3cff17d418a53e0d7cb8aa03a39da734ee30" translate="yes" xml:space="preserve">
          <source>ECPoint.getAffineY()</source>
          <target state="translated">ECPoint.getAffineY()</target>
        </trans-unit>
        <trans-unit id="7e3d647204a9e7b0889041c1399c6d8ed9b1c47f" translate="yes" xml:space="preserve">
          <source>ECPoint.hashCode()</source>
          <target state="translated">ECPoint.hashCode()</target>
        </trans-unit>
        <trans-unit id="7e9a73ec4defdbf0d1961ffb46ae295c5f1339ab" translate="yes" xml:space="preserve">
          <source>ECPrivateKey</source>
          <target state="translated">ECPrivateKey</target>
        </trans-unit>
        <trans-unit id="f11daf09d2ce19a720d760fccebcc0cc1fe0a68b" translate="yes" xml:space="preserve">
          <source>ECPrivateKey.getS()</source>
          <target state="translated">ECPrivateKey.getS()</target>
        </trans-unit>
        <trans-unit id="a01ce6d3172a87d1f54d00877245e24bb7f90413" translate="yes" xml:space="preserve">
          <source>ECPrivateKeySpec</source>
          <target state="translated">ECPrivateKeySpec</target>
        </trans-unit>
        <trans-unit id="2b99934ce584b5dbb0802cc004496c1265e31810" translate="yes" xml:space="preserve">
          <source>ECPrivateKeySpec.getParams()</source>
          <target state="translated">ECPrivateKeySpec.getParams()</target>
        </trans-unit>
        <trans-unit id="36bdb0730aaaaa72a7ffc35fcfae08b77d615237" translate="yes" xml:space="preserve">
          <source>ECPrivateKeySpec.getS()</source>
          <target state="translated">ECPrivateKeySpec.getS()</target>
        </trans-unit>
        <trans-unit id="d1776a7027dff3e5917cb3cebf94fd8101974337" translate="yes" xml:space="preserve">
          <source>ECPublicKey</source>
          <target state="translated">ECPublicKey</target>
        </trans-unit>
        <trans-unit id="af6a51f7b98fb87be1c59401b98b892e8c69ff96" translate="yes" xml:space="preserve">
          <source>ECPublicKey.getW()</source>
          <target state="translated">ECPublicKey.getW()</target>
        </trans-unit>
        <trans-unit id="9f0a498aa9c90edb4329c8a660aeb384742d6781" translate="yes" xml:space="preserve">
          <source>ECPublicKeySpec</source>
          <target state="translated">ECPublicKeySpec</target>
        </trans-unit>
        <trans-unit id="7f82aaa3c1b53eec25a273be77a538d0c2ec3969" translate="yes" xml:space="preserve">
          <source>ECPublicKeySpec.getParams()</source>
          <target state="translated">ECPublicKeySpec.getParams()</target>
        </trans-unit>
        <trans-unit id="fb1af6c34d1ba0faae90738c011291744c98e2f9" translate="yes" xml:space="preserve">
          <source>ECPublicKeySpec.getW()</source>
          <target state="translated">ECPublicKeySpec.getW()</target>
        </trans-unit>
        <trans-unit id="23b9898e476dcc4add4efc0ed7ddb21640c0f19e" translate="yes" xml:space="preserve">
          <source>ECT - Europe/Paris</source>
          <target state="translated">ECT-유럽 / 파리</target>
        </trans-unit>
        <trans-unit id="2367b0d8d5785a4e222cb8570cd08dc9ea66be7d" translate="yes" xml:space="preserve">
          <source>EC_TYPE</source>
          <target state="translated">EC_TYPE</target>
        </trans-unit>
        <trans-unit id="ba9fb1358355ff4ce72752768f260f4aff72d86e" translate="yes" xml:space="preserve">
          <source>ED25519</source>
          <target state="translated">ED25519</target>
        </trans-unit>
        <trans-unit id="65217d334989beb87236fb234496040dd96e82a8" translate="yes" xml:space="preserve">
          <source>ED448</source>
          <target state="translated">ED448</target>
        </trans-unit>
        <trans-unit id="cd348329dbd8b9ba037d93f0520c47012b1fe1e7" translate="yes" xml:space="preserve">
          <source>EDGE_NO_OP</source>
          <target state="translated">EDGE_NO_OP</target>
        </trans-unit>
        <trans-unit id="4c6cb1e40abd19f5ecac8d88f42efa4e5eafe942" translate="yes" xml:space="preserve">
          <source>EDGE_SPACING</source>
          <target state="translated">EDGE_SPACING</target>
        </trans-unit>
        <trans-unit id="402016f21d03e839e24e660b0cf6c79f311ae840" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH</source>
          <target state="translated">EDGE_STITCH</target>
        </trans-unit>
        <trans-unit id="6bbbc6534d75c412ef17b08bd13748b994075f5f" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH_BOTTOM</source>
          <target state="translated">EDGE_STITCH_BOTTOM</target>
        </trans-unit>
        <trans-unit id="ee0dae08682963b6c4ca700b5fcd840f3e2da188" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH_LEFT</source>
          <target state="translated">EDGE_STITCH_LEFT</target>
        </trans-unit>
        <trans-unit id="43c15148aa09100c39cdf6aa78755316addcd9fb" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH_RIGHT</source>
          <target state="translated">EDGE_STITCH_RIGHT</target>
        </trans-unit>
        <trans-unit id="0dde2bed2e929721c8a19a054425e8326cf52ec8" translate="yes" xml:space="preserve">
          <source>EDGE_STITCH_TOP</source>
          <target state="translated">EDGE_STITCH_TOP</target>
        </trans-unit>
        <trans-unit id="328e0b14f6c8e641982cb916a9538871ce205a01" translate="yes" xml:space="preserve">
          <source>EDGE_ZERO_FILL</source>
          <target state="translated">EDGE_ZERO_FILL</target>
        </trans-unit>
        <trans-unit id="17865bdb9110d432d4f2295eb32ab17883d404dc" translate="yes" xml:space="preserve">
          <source>EDIT</source>
          <target state="translated">EDIT</target>
        </trans-unit>
        <trans-unit id="d77c2b04b6e034cbb5a227d25c98ce3d27383559" translate="yes" xml:space="preserve">
          <source>EDITABLE</source>
          <target state="translated">EDITABLE</target>
        </trans-unit>
        <trans-unit id="852af4fbfdbf886b62acf713cf53e6baf9724f7b" translate="yes" xml:space="preserve">
          <source>EDITABLE_PROPERTY</source>
          <target state="translated">EDITABLE_PROPERTY</target>
        </trans-unit>
        <trans-unit id="3c18c89016187dce1b33db75826aba104d6c7d98" translate="yes" xml:space="preserve">
          <source>EDITBAR</source>
          <target state="translated">EDITBAR</target>
        </trans-unit>
        <trans-unit id="503b9b4dae69e65f416c83be926e4a90cbd4afd2" translate="yes" xml:space="preserve">
          <source>EDITOR_PANE</source>
          <target state="translated">EDITOR_PANE</target>
        </trans-unit>
        <trans-unit id="660752e786b88b1d9b2dfbef6bb0a1fef020b836" translate="yes" xml:space="preserve">
          <source>EFFORT</source>
          <target state="translated">EFFORT</target>
        </trans-unit>
        <trans-unit id="6ba33a7b25ec924e3c7cdea49ff5d10a73abcd7d" translate="yes" xml:space="preserve">
          <source>EGYPTIAN_HIEROGLYPHS</source>
          <target state="translated">EGYPTIAN_HIEROGLYPHS</target>
        </trans-unit>
        <trans-unit id="73fbbcf2eee22889bdd09138523f38a389781581" translate="yes" xml:space="preserve">
          <source>EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS</source>
          <target state="translated">EGYPTIAN_HIEROGLYPH_FORMAT_CONTROLS</target>
        </trans-unit>
        <trans-unit id="13fb114cac59f7042bce5e1c98ffb2793504c015" translate="yes" xml:space="preserve">
          <source>ELBASAN</source>
          <target state="translated">ELBASAN</target>
        </trans-unit>
        <trans-unit id="40ad668b0a2a5a37d20917ecd8bd9a7415c9c29b" translate="yes" xml:space="preserve">
          <source>ELEMENT</source>
          <target state="translated">ELEMENT</target>
        </trans-unit>
        <trans-unit id="322c7797aa1f7293df51eeda49bad8fb9cb4701f" translate="yes" xml:space="preserve">
          <source>ELEMENT_NODE</source>
          <target state="translated">ELEMENT_NODE</target>
        </trans-unit>
        <trans-unit id="03b6d8aecd8803c252a6b4d0b0f8d7a86683b932" translate="yes" xml:space="preserve">
          <source>ELEMENT_NODE, ATTRIBUTE_NODE, ENTITY_NODE, ENTITY_REFERENCE_NODE, DOCUMENT_FRAGMENT_NODE</source>
          <target state="translated">ELEMENT_NODE, ATTRIBUTE_NODE, ENTITY_NODE, ENTITY_REFERENCE_NODE, DOCUMENT_FRAGMENT_NODE</target>
        </trans-unit>
        <trans-unit id="dac1669a4bc989a70d4a64eca4f67c258100822c" translate="yes" xml:space="preserve">
          <source>ELYMAIC</source>
          <target state="translated">ELYMAIC</target>
        </trans-unit>
        <trans-unit id="9a6a49a5317fa046854fc275333125dc46e38d5d" translate="yes" xml:space="preserve">
          <source>EM</source>
          <target state="translated">EM</target>
        </trans-unit>
        <trans-unit id="96c40210ca5730cfe8e945177ee7d257d537dc5f" translate="yes" xml:space="preserve">
          <source>EMBEDDED_BY</source>
          <target state="translated">EMBEDDED_BY</target>
        </trans-unit>
        <trans-unit id="a659eeb20a8006559b0bce59eaab83094810bf7d" translate="yes" xml:space="preserve">
          <source>EMBEDDED_BY_PROPERTY</source>
          <target state="translated">EMBEDDED_BY_PROPERTY</target>
        </trans-unit>
        <trans-unit id="56a2af61868ca322a7708b82661a57c5b1bdf392" translate="yes" xml:space="preserve">
          <source>EMBEDS</source>
          <target state="translated">EMBEDS</target>
        </trans-unit>
        <trans-unit id="eec0cd379a73c242ff7ffc18c59fc4f309a40922" translate="yes" xml:space="preserve">
          <source>EMBEDS_PROPERTY</source>
          <target state="translated">EMBEDS_PROPERTY</target>
        </trans-unit>
        <trans-unit id="aa891ea05dd88d34c7bc0f90160ef08ac7326076" translate="yes" xml:space="preserve">
          <source>EMOTICONS</source>
          <target state="translated">EMOTICONS</target>
        </trans-unit>
        <trans-unit id="5bc604777adb22ae457a5473c397202e00689e23" translate="yes" xml:space="preserve">
          <source>EMPTY</source>
          <target state="translated">EMPTY</target>
        </trans-unit>
        <trans-unit id="3a6d67ab2fcaa4996ea55c9897e1e3cae775fff8" translate="yes" xml:space="preserve">
          <source>EMPTY_DESCRIPTOR</source>
          <target state="translated">EMPTY_DESCRIPTOR</target>
        </trans-unit>
        <trans-unit id="fea3b169de7d82824fd128ad809b57f1e9ed83fc" translate="yes" xml:space="preserve">
          <source>EMPTY_ENUMERATION</source>
          <target state="translated">EMPTY_ENUMERATION</target>
        </trans-unit>
        <trans-unit id="dfc809a8ebf4b81e691b32975c5035f21e16fd2c" translate="yes" xml:space="preserve">
          <source>EMPTY_LIST</source>
          <target state="translated">EMPTY_LIST</target>
        </trans-unit>
        <trans-unit id="2e8cdc469d0d7230be597797efd2ed063ada7cae" translate="yes" xml:space="preserve">
          <source>EMPTY_MAP</source>
          <target state="translated">EMPTY_MAP</target>
        </trans-unit>
        <trans-unit id="10621e09be025015f2a0097a6fba7fa1f19ac9b8" translate="yes" xml:space="preserve">
          <source>EMPTY_SET</source>
          <target state="translated">EMPTY_SET</target>
        </trans-unit>
        <trans-unit id="dc99ef77a78d448b1261140a42e0b11d4cf0a13d" translate="yes" xml:space="preserve">
          <source>EMPTY_STATEMENT</source>
          <target state="translated">EMPTY_STATEMENT</target>
        </trans-unit>
        <trans-unit id="e22fb092b5dc81b96c7d8908ff61bfb7e9b3cd2a" translate="yes" xml:space="preserve">
          <source>ENABLED</source>
          <target state="translated">ENABLED</target>
        </trans-unit>
        <trans-unit id="491b3a1cdd9a73aeeef2e2f7ce0522c4ac95684d" translate="yes" xml:space="preserve">
          <source>ENCLOSED_ALPHANUMERICS</source>
          <target state="translated">ENCLOSED_ALPHANUMERICS</target>
        </trans-unit>
        <trans-unit id="5b355594a8d1825c7bb8f59ad5f33b3daa288ed1" translate="yes" xml:space="preserve">
          <source>ENCLOSED_ALPHANUMERIC_SUPPLEMENT</source>
          <target state="translated">ENCLOSED_ALPHANUMERIC_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="4ec78e05d6223330ee2332780376af9b9f64b029" translate="yes" xml:space="preserve">
          <source>ENCLOSED_CJK_LETTERS_AND_MONTHS</source>
          <target state="translated">ENCLOSED_CJK_LETTERS_AND_MONTHS</target>
        </trans-unit>
        <trans-unit id="e8519b58a50233517f3c5d275538bafbc83a8613" translate="yes" xml:space="preserve">
          <source>ENCLOSED_IDEOGRAPHIC_SUPPLEMENT</source>
          <target state="translated">ENCLOSED_IDEOGRAPHIC_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="889059f5218ab9af9e50be715febbbf437573234" translate="yes" xml:space="preserve">
          <source>ENCLOSING_MARK</source>
          <target state="translated">ENCLOSING_MARK</target>
        </trans-unit>
        <trans-unit id="1e306f9d0fec9dc9a627cd5c3b6dd9bb1770a21e" translate="yes" xml:space="preserve">
          <source>ENCODING</source>
          <target state="translated">ENCODING</target>
        </trans-unit>
        <trans-unit id="55bd7a4274c967a0d40bdf3a19b0a8faff1857ed" translate="yes" xml:space="preserve">
          <source>ENCRYPT</source>
          <target state="translated">ENCRYPT</target>
        </trans-unit>
        <trans-unit id="e75d2afc0ed3d23703380d1e72696098ff6dabb6" translate="yes" xml:space="preserve">
          <source>ENCRYPT_MODE</source>
          <target state="translated">ENCRYPT_MODE</target>
        </trans-unit>
        <trans-unit id="0d66009f5bef872d6104b346b77ebe4b6114ce03" translate="yes" xml:space="preserve">
          <source>ENCTYPE</source>
          <target state="translated">ENCTYPE</target>
        </trans-unit>
        <trans-unit id="d205abee3d2a71688a6b66568be289a94050031c" translate="yes" xml:space="preserve">
          <source>END</source>
          <target state="translated">END</target>
        </trans-unit>
        <trans-unit id="393a28fda214136f4aec6cb4d5e4360f2f046e43" translate="yes" xml:space="preserve">
          <source>ENDCOM</source>
          <target state="translated">ENDCOM</target>
        </trans-unit>
        <trans-unit id="b7e65914167d75e1013bd288e846628e8bbb73bf" translate="yes" xml:space="preserve">
          <source>ENDHDR</source>
          <target state="translated">ENDHDR</target>
        </trans-unit>
        <trans-unit id="8b2e5bd2a1a74bacd3940fd3569815719099b391" translate="yes" xml:space="preserve">
          <source>ENDOFF</source>
          <target state="translated">ENDOFF</target>
        </trans-unit>
        <trans-unit id="8aed026f99b127492256fe494fa85697e5488920" translate="yes" xml:space="preserve">
          <source>ENDSIG</source>
          <target state="translated">ENDSIG</target>
        </trans-unit>
        <trans-unit id="b143fee6e7c46f8dfc60a3eeb0ece1e6ccae10b9" translate="yes" xml:space="preserve">
          <source>ENDSIZ</source>
          <target state="translated">ENDSIZ</target>
        </trans-unit>
        <trans-unit id="dc06790ab72abd8ee1c03b84dcf3f268ae4fa511" translate="yes" xml:space="preserve">
          <source>ENDSUB</source>
          <target state="translated">ENDSUB</target>
        </trans-unit>
        <trans-unit id="a681742bdd54768b5a1a883e90fdd2dbfb0993fb" translate="yes" xml:space="preserve">
          <source>ENDTAG</source>
          <target state="translated">ENDTAG</target>
        </trans-unit>
        <trans-unit id="3d528274c7d29305fe76c5d34bcc42a830b08b3b" translate="yes" xml:space="preserve">
          <source>ENDTOT</source>
          <target state="translated">ENDTOT</target>
        </trans-unit>
        <trans-unit id="21e0f190192239a641a40c34cfe7ac6e04163f65" translate="yes" xml:space="preserve">
          <source>END_DOCUMENT</source>
          <target state="translated">END_DOCUMENT</target>
        </trans-unit>
        <trans-unit id="ba67108ef1ee9acb0047b9074bb27c6f8adf3ecc" translate="yes" xml:space="preserve">
          <source>END_ELEMENT</source>
          <target state="translated">END_ELEMENT</target>
        </trans-unit>
        <trans-unit id="3e11a998bc0323c14e989b22d66120389efdae55" translate="yes" xml:space="preserve">
          <source>END_OF_EXCLUSIVE</source>
          <target state="translated">END_OF_EXCLUSIVE</target>
        </trans-unit>
        <trans-unit id="2c9d04702f9d8be59da552603a90ac3e455ad308" translate="yes" xml:space="preserve">
          <source>END_PUNCTUATION</source>
          <target state="translated">END_PUNCTUATION</target>
        </trans-unit>
        <trans-unit id="af51d4c1c38ed298c0f9350a493c547baedc761a" translate="yes" xml:space="preserve">
          <source>END_TO_END</source>
          <target state="translated">END_TO_END</target>
        </trans-unit>
        <trans-unit id="9c0f35a2dd4297b471bcb649848abbe8947f5436" translate="yes" xml:space="preserve">
          <source>END_TO_START</source>
          <target state="translated">END_TO_START</target>
        </trans-unit>
        <trans-unit id="983e5366e4eea9b037be5e23f216579d19fc4609" translate="yes" xml:space="preserve">
          <source>ENGINE</source>
          <target state="translated">ENGINE</target>
        </trans-unit>
        <trans-unit id="349f2678344b9b0a2523d795d5fb6b827a8c0785" translate="yes" xml:space="preserve">
          <source>ENGINE_SCOPE</source>
          <target state="translated">ENGINE_SCOPE</target>
        </trans-unit>
        <trans-unit id="699f2d4f0cdb276b958015dc5dca45acab251e76" translate="yes" xml:space="preserve">
          <source>ENGINE_VERSION</source>
          <target state="translated">ENGINE_VERSION</target>
        </trans-unit>
        <trans-unit id="4a2b354b77f946e12e0e5b81b3239cc8efcbe278" translate="yes" xml:space="preserve">
          <source>ENGLISH</source>
          <target state="translated">ENGLISH</target>
        </trans-unit>
        <trans-unit id="a64aaaebc0e5ce3752e163c6684cbd61669548db" translate="yes" xml:space="preserve">
          <source>ENHANCED_FOR_LOOP</source>
          <target state="translated">ENHANCED_FOR_LOOP</target>
        </trans-unit>
        <trans-unit id="54febf31399865b922c143850536b3c8103720f9" translate="yes" xml:space="preserve">
          <source>ENTER</source>
          <target state="translated">ENTER</target>
        </trans-unit>
        <trans-unit id="e81736da4db98e3e416d7a1d7bc799db11434391" translate="yes" xml:space="preserve">
          <source>ENTERED</source>
          <target state="translated">ENTERED</target>
        </trans-unit>
        <trans-unit id="c94604a8f316df2ba13181d92d05f0aee9d95acd" translate="yes" xml:space="preserve">
          <source>ENTITIES</source>
          <target state="translated">ENTITIES</target>
        </trans-unit>
        <trans-unit id="06e71220e447ac7e5931ca6d88c2302747d2cf69" translate="yes" xml:space="preserve">
          <source>ENTITY</source>
          <target state="translated">ENTITY</target>
        </trans-unit>
        <trans-unit id="5da3f187b960372168de4f4bfb909151ff410187" translate="yes" xml:space="preserve">
          <source>ENTITY_DECLARATION</source>
          <target state="translated">ENTITY_DECLARATION</target>
        </trans-unit>
        <trans-unit id="6262b5d712e6a2b6f4a97a3d3916b07475648991" translate="yes" xml:space="preserve">
          <source>ENTITY_NODE</source>
          <target state="translated">ENTITY_NODE</target>
        </trans-unit>
        <trans-unit id="6a2e22cda59a6934696f97929d8af2aaa2618235" translate="yes" xml:space="preserve">
          <source>ENTITY_REFERENCE</source>
          <target state="translated">ENTITY_REFERENCE</target>
        </trans-unit>
        <trans-unit id="7b552c2729f60d24bac9bf07873875151243cc88" translate="yes" xml:space="preserve">
          <source>ENTITY_REFERENCE_NODE</source>
          <target state="translated">ENTITY_REFERENCE_NODE</target>
        </trans-unit>
        <trans-unit id="ef991d5c4cde33653d2665b6c13fc11c56eb3f5b" translate="yes" xml:space="preserve">
          <source>ENTRY_CREATE</source>
          <target state="translated">ENTRY_CREATE</target>
        </trans-unit>
        <trans-unit id="e1a74e12d659227c84ef7223e000cabff2b54fb7" translate="yes" xml:space="preserve">
          <source>ENTRY_DELETE</source>
          <target state="translated">ENTRY_DELETE</target>
        </trans-unit>
        <trans-unit id="4b7934ace8e8fd618f6a5e0481147c47c29eabb8" translate="yes" xml:space="preserve">
          <source>ENTRY_MODIFY</source>
          <target state="translated">ENTRY_MODIFY</target>
        </trans-unit>
        <trans-unit id="507ccbdaf83ab03c2929498330b7d2836e4c06b2" translate="yes" xml:space="preserve">
          <source>ENUM</source>
          <target state="translated">ENUM</target>
        </trans-unit>
        <trans-unit id="68475bec775f8b9b380a0e04a912508dc18dcd0b" translate="yes" xml:space="preserve">
          <source>ENUM_CONSTANT</source>
          <target state="translated">ENUM_CONSTANT</target>
        </trans-unit>
        <trans-unit id="80a24af6395c50ff8f07be1bbe9064f747eee470" translate="yes" xml:space="preserve">
          <source>ENUM_SUBKIND</source>
          <target state="translated">ENUM_SUBKIND</target>
        </trans-unit>
        <trans-unit id="5a1314ccd8e6a487c3b381d66baf0dd1803fa1cf" translate="yes" xml:space="preserve">
          <source>ENVELOPE</source>
          <target state="translated">ENVELOPE</target>
        </trans-unit>
        <trans-unit id="d5cda10decad38cea58e0c971be53d4f6cc2ef19" translate="yes" xml:space="preserve">
          <source>ENVELOPED</source>
          <target state="translated">ENVELOPED</target>
        </trans-unit>
        <trans-unit id="72faeac82662e2a240f0f4c59a08c67efc44f618" translate="yes" xml:space="preserve">
          <source>ENVIRON_VAR</source>
          <target state="translated">ENVIRON_VAR</target>
        </trans-unit>
        <trans-unit id="ce87a664cbc46a5a8d32d4c6375254869c208c6f" translate="yes" xml:space="preserve">
          <source>ENV_10</source>
          <target state="translated">ENV_10</target>
        </trans-unit>
        <trans-unit id="fbd621c378baf7090ca217019a967c29b0791c93" translate="yes" xml:space="preserve">
          <source>ENV_10X13</source>
          <target state="translated">ENV_10X13</target>
        </trans-unit>
        <trans-unit id="11781b33abb566cebd50918511d8bd91687c91eb" translate="yes" xml:space="preserve">
          <source>ENV_10X14</source>
          <target state="translated">ENV_10X14</target>
        </trans-unit>
        <trans-unit id="36b2e38a71bc97b7dd252a6f5b75abe16e4ca736" translate="yes" xml:space="preserve">
          <source>ENV_10X15</source>
          <target state="translated">ENV_10X15</target>
        </trans-unit>
        <trans-unit id="eb6a16c83b8ddbf215ea073db55ff04d5ee3d64b" translate="yes" xml:space="preserve">
          <source>ENV_11</source>
          <target state="translated">ENV_11</target>
        </trans-unit>
        <trans-unit id="95285a108f914eceaee79ed1e5db088a6ec5e2ce" translate="yes" xml:space="preserve">
          <source>ENV_12</source>
          <target state="translated">ENV_12</target>
        </trans-unit>
        <trans-unit id="1c02ad18edbbc695341db54c1e956c19449ea1e4" translate="yes" xml:space="preserve">
          <source>ENV_14</source>
          <target state="translated">ENV_14</target>
        </trans-unit>
        <trans-unit id="264e5587a8822f1917ddb42d3d17623a9c1fe0e9" translate="yes" xml:space="preserve">
          <source>ENV_6X9</source>
          <target state="translated">ENV_6X9</target>
        </trans-unit>
        <trans-unit id="dc0985227af89356db7d775107e665f66ef5c87f" translate="yes" xml:space="preserve">
          <source>ENV_7X9</source>
          <target state="translated">ENV_7X9</target>
        </trans-unit>
        <trans-unit id="15e6c9dcbb7754254fa20683f451332282d0d7fa" translate="yes" xml:space="preserve">
          <source>ENV_9</source>
          <target state="translated">ENV_9</target>
        </trans-unit>
        <trans-unit id="92d6be03eba11ed0bdf0bb0e8a651965911c2e79" translate="yes" xml:space="preserve">
          <source>ENV_9X11</source>
          <target state="translated">ENV_9X11</target>
        </trans-unit>
        <trans-unit id="61fff7c4035b90326e87d38ac2181890fee68155" translate="yes" xml:space="preserve">
          <source>ENV_9X12</source>
          <target state="translated">ENV_9X12</target>
        </trans-unit>
        <trans-unit id="425ee36792e6bec332851f47b37eadb6d15d873c" translate="yes" xml:space="preserve">
          <source>ENV_INVITE</source>
          <target state="translated">ENV_INVITE</target>
        </trans-unit>
        <trans-unit id="4483babd72fb051506ad3f798ffd84b4a2cd14e5" translate="yes" xml:space="preserve">
          <source>ENV_ITALY</source>
          <target state="translated">ENV_ITALY</target>
        </trans-unit>
        <trans-unit id="d094ac5a289f9596fd25c87d05a4f3d962e0b42c" translate="yes" xml:space="preserve">
          <source>ENV_MONARCH</source>
          <target state="translated">ENV_MONARCH</target>
        </trans-unit>
        <trans-unit id="4e59fa0d0f39bf16f522bcc159feae9e9b196c4c" translate="yes" xml:space="preserve">
          <source>ENV_PERSONAL</source>
          <target state="translated">ENV_PERSONAL</target>
        </trans-unit>
        <trans-unit id="c6bf2c7899e6331223de4ae9f50d76a0f8fe3c52" translate="yes" xml:space="preserve">
          <source>EOFException</source>
          <target state="translated">EOFException</target>
        </trans-unit>
        <trans-unit id="180f4ca1eb6f7e228940831c3ed7caa720e87779" translate="yes" xml:space="preserve">
          <source>EPOCH</source>
          <target state="translated">EPOCH</target>
        </trans-unit>
        <trans-unit id="1fcc7a3122a5f8c4140f007182abe0fade082e65" translate="yes" xml:space="preserve">
          <source>EPOCH_DAY</source>
          <target state="translated">EPOCH_DAY</target>
        </trans-unit>
        <trans-unit id="c41a4b4ae13ef007bf159e37752b1d297454b600" translate="yes" xml:space="preserve">
          <source>EQ</source>
          <target state="translated">EQ</target>
        </trans-unit>
        <trans-unit id="988d431198d2495602e3d8a4ab698f1499c93e9b" translate="yes" xml:space="preserve">
          <source>EQUAL</source>
          <target state="translated">EQUAL</target>
        </trans-unit>
        <trans-unit id="5ca5ed0a44dacbd8e86b87706f229979aaf867fe" translate="yes" xml:space="preserve">
          <source>EQUAL_TO</source>
          <target state="translated">EQUAL_TO</target>
        </trans-unit>
        <trans-unit id="47adbfcf54b9ab1b1b54eea502241843be28c71d" translate="yes" xml:space="preserve">
          <source>ERA</source>
          <target state="translated">ERA</target>
        </trans-unit>
        <trans-unit id="e4aa96e435fce45d0d56b2b0019620a16eed5688" translate="yes" xml:space="preserve">
          <source>ERAS</source>
          <target state="translated">ERAS</target>
        </trans-unit>
        <trans-unit id="077bb97a54f149834bd40c1ad3ab8141b7e634d4" translate="yes" xml:space="preserve">
          <source>ERA_FIELD</source>
          <target state="translated">ERA_FIELD</target>
        </trans-unit>
        <trans-unit id="28c9048ebbd84a8abf70d6233460f952308d59bb" translate="yes" xml:space="preserve">
          <source>ERGONOMIC</source>
          <target state="translated">ERGONOMIC</target>
        </trans-unit>
        <trans-unit id="012a70d5dc7136e6a751b460413a94cfebfd8ca4" translate="yes" xml:space="preserve">
          <source>ERRONEOUS</source>
          <target state="translated">ERRONEOUS</target>
        </trans-unit>
        <trans-unit id="0b99cebe565822c64ac5d84aecb00fe40e59cbd3" translate="yes" xml:space="preserve">
          <source>ERROR</source>
          <target state="translated">ERROR</target>
        </trans-unit>
        <trans-unit id="651b9fb242d78b288546cebe26106d3d3f3b246f" translate="yes" xml:space="preserve">
          <source>ERROR message type.</source>
          <target state="translated">오류 메시지 유형.</target>
        </trans-unit>
        <trans-unit id="b62771d0367b66fd9b2d8a2fdb142ebf8bf2ae6b" translate="yes" xml:space="preserve">
          <source>ERRORED</source>
          <target state="translated">ERRORED</target>
        </trans-unit>
        <trans-unit id="6612bce860682c3ec5aaea49933d7336d76173df" translate="yes" xml:space="preserve">
          <source>ERROR_DIALOG</source>
          <target state="translated">ERROR_DIALOG</target>
        </trans-unit>
        <trans-unit id="6a154c64247831d8a7c51b455b6b6b0d10aaf15d" translate="yes" xml:space="preserve">
          <source>ERROR_MESSAGE</source>
          <target state="translated">ERROR_MESSAGE</target>
        </trans-unit>
        <trans-unit id="0d7c8aea238a7dcb2091bade76911d4c7adcf6e1" translate="yes" xml:space="preserve">
          <source>ERROR_OPTION</source>
          <target state="translated">ERROR_OPTION</target>
        </trans-unit>
        <trans-unit id="ac47189c9768197d8574c8f14988b8ef7e5d8f6d" translate="yes" xml:space="preserve">
          <source>ESCAPE</source>
          <target state="translated">ESCAPE</target>
        </trans-unit>
        <trans-unit id="fd484dbbc827b7622686956381db36daef7f712b" translate="yes" xml:space="preserve">
          <source>EST - -05:00</source>
          <target state="translated">EST--05 : 00</target>
        </trans-unit>
        <trans-unit id="46c27e93c556dbe00ef891baf86b3418d50553fd" translate="yes" xml:space="preserve">
          <source>ETHIOPIC</source>
          <target state="translated">ETHIOPIC</target>
        </trans-unit>
        <trans-unit id="a15a2079da08e3a30c732b3350dafe3bf6305b9f" translate="yes" xml:space="preserve">
          <source>ETHIOPIC_EXTENDED</source>
          <target state="translated">ETHIOPIC_EXTENDED</target>
        </trans-unit>
        <trans-unit id="4e601c4ffe07965449feba2058f2c6a512e892b1" translate="yes" xml:space="preserve">
          <source>ETHIOPIC_EXTENDED_A</source>
          <target state="translated">ETHIOPIC_EXTENDED_A</target>
        </trans-unit>
        <trans-unit id="e7f1c3b504601965ec63c3c5738199dc6e01741d" translate="yes" xml:space="preserve">
          <source>ETHIOPIC_SUPPLEMENT</source>
          <target state="translated">ETHIOPIC_SUPPLEMENT</target>
        </trans-unit>
        <trans-unit id="b396600e5857bc2a45a4993ebc34394cd7943854" translate="yes" xml:space="preserve">
          <source>EUROPEAN</source>
          <target state="translated">EUROPEAN</target>
        </trans-unit>
        <trans-unit id="fce39c68ed65f718ed283533e549dce3a865f962" translate="yes" xml:space="preserve">
          <source>EXCEEDS_PAD</source>
          <target state="translated">EXCEEDS_PAD</target>
        </trans-unit>
        <trans-unit id="587b648c037dd2a8df4f910cea10c5f1645ef052" translate="yes" xml:space="preserve">
          <source>EXCEPTION</source>
          <target state="translated">EXCEPTION</target>
        </trans-unit>
        <trans-unit id="c8a13c755c402a64971d4b98652a6f4e8e3ab1f5" translate="yes" xml:space="preserve">
          <source>EXCEPTION_PARAMETER</source>
          <target state="translated">EXCEPTION_PARAMETER</target>
        </trans-unit>
        <trans-unit id="6a142f6999680571fa05b1a87552e101c1e3b874" translate="yes" xml:space="preserve">
          <source>EXCLUSIVE</source>
          <target state="translated">EXCLUSIVE</target>
        </trans-unit>
        <trans-unit id="85b4313ae6183cace21094761807cbeccf2d5f3a" translate="yes" xml:space="preserve">
          <source>EXCLUSIVE_WITH_COMMENTS</source>
          <target state="translated">EXCLUSIVE_WITH_COMMENTS</target>
        </trans-unit>
        <trans-unit id="03534e945b5d675d412aa5ef2987348d732061fd" translate="yes" xml:space="preserve">
          <source>EXECUTABLE</source>
          <target state="translated">EXECUTABLE</target>
        </trans-unit>
        <trans-unit id="790392d6b839abbb5b061152b6a3114de84502b4" translate="yes" xml:space="preserve">
          <source>EXECUTE</source>
          <target state="translated">EXECUTE</target>
        </trans-unit>
        <trans-unit id="21e0242b95d07993cab09796e508fc8f99d2f69c" translate="yes" xml:space="preserve">
          <source>EXECUTE_FAILED</source>
          <target state="translated">EXECUTE_FAILED</target>
        </trans-unit>
        <trans-unit id="1731ffba0ee4baab452bcabda551595bf603c3b5" translate="yes" xml:space="preserve">
          <source>EXECUTIVE</source>
          <target state="translated">EXECUTIVE</target>
        </trans-unit>
        <trans-unit id="265f8ccfdbf128782bb6e1b613287c8fb4285ac3" translate="yes" xml:space="preserve">
          <source>EXIF_VERSION_2_1</source>
          <target state="translated">EXIF_VERSION_2_1</target>
        </trans-unit>
        <trans-unit id="765b1af0c38f17a0139e81e22884fbf42b7d3819" translate="yes" xml:space="preserve">
          <source>EXIF_VERSION_2_2</source>
          <target state="translated">EXIF_VERSION_2_2</target>
        </trans-unit>
        <trans-unit id="7741ee63e8b7308da71204656ef6eb360ec25a7a" translate="yes" xml:space="preserve">
          <source>EXITED</source>
          <target state="translated">EXITED</target>
        </trans-unit>
        <trans-unit id="d602272f80ba3a8084ea183039ec301de0a74acd" translate="yes" xml:space="preserve">
          <source>EXIT_ON_CLOSE</source>
          <target state="translated">EXIT_ON_CLOSE</target>
        </trans-unit>
        <trans-unit id="6a542797a9d0def7950c1ca477d8e47dd91511c8" translate="yes" xml:space="preserve">
          <source>EXPANDABLE</source>
          <target state="translated">EXPANDABLE</target>
        </trans-unit>
        <trans-unit id="21cae3b0fd89260bfbf57631aa97d32cfd961e4c" translate="yes" xml:space="preserve">
          <source>EXPANDED</source>
          <target state="translated">EXPANDED</target>
        </trans-unit>
        <trans-unit id="8e50b8fc3c383858d56a6418c56bf50dcdf6e4b5" translate="yes" xml:space="preserve">
          <source>EXPANDS_SELECTED_PATHS_PROPERTY</source>
          <target state="translated">EXPANDS_SELECTED_PATHS_PROPERTY</target>
        </trans-unit>
        <trans-unit id="72c0bb5a2c016bd8fd0870d3850d52a2c48c2800" translate="yes" xml:space="preserve">
          <source>EXPIRED</source>
          <target state="translated">EXPIRED</target>
        </trans-unit>
        <trans-unit id="c0c45b9f7e7e985fdee868b380dba9d6e4c82edb" translate="yes" xml:space="preserve">
          <source>EXPLICIT</source>
          <target state="translated">EXPLICIT</target>
        </trans-unit>
        <trans-unit id="b217ce5e2f5a84693915f65137b50128a2d93ecf" translate="yes" xml:space="preserve">
          <source>EXPONENT</source>
          <target state="translated">EXPONENT</target>
        </trans-unit>
        <trans-unit id="4d05c12014f8617e34cf49b2b6521fd877c48bc7" translate="yes" xml:space="preserve">
          <source>EXPONENT_SIGN</source>
          <target state="translated">EXPONENT_SIGN</target>
        </trans-unit>
        <trans-unit id="c2bcab92bdc244db609a58e049f5cefc054387e2" translate="yes" xml:space="preserve">
          <source>EXPONENT_SYMBOL</source>
          <target state="translated">EXPONENT_SYMBOL</target>
        </trans-unit>
        <trans-unit id="e9e012170f2df7cb18fa26019e2b46cbf4a91319" translate="yes" xml:space="preserve">
          <source>EXPORTS</source>
          <target state="translated">EXPORTS</target>
        </trans-unit>
        <trans-unit id="1cb81bbefb95ab841ad090ad64790c70ec0555fb" translate="yes" xml:space="preserve">
          <source>EXPOSURE_MODE_AUTO_BRACKET</source>
          <target state="translated">EXPOSURE_MODE_AUTO_BRACKET</target>
        </trans-unit>
        <trans-unit id="88918aeadd8180bf0b8e46f39ba3957c755aef24" translate="yes" xml:space="preserve">
          <source>EXPOSURE_MODE_AUTO_EXPOSURE</source>
          <target state="translated">EXPOSURE_MODE_AUTO_EXPOSURE</target>
        </trans-unit>
        <trans-unit id="0e123aadfd6077d49774eb5acb2052aeb1ab6cec" translate="yes" xml:space="preserve">
          <source>EXPOSURE_MODE_MANUAL_EXPOSURE</source>
          <target state="translated">EXPOSURE_MODE_MANUAL_EXPOSURE</target>
        </trans-unit>
        <trans-unit id="4ca7e239429054de5a52591d35dbcb769617cec4" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_ACTION_PROGRAM</source>
          <target state="translated">EXPOSURE_PROGRAM_ACTION_PROGRAM</target>
        </trans-unit>
        <trans-unit id="560fd1045a64d1cfd5045f2bd364df1eb414deef" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_APERTURE_PRIORITY</source>
          <target state="translated">EXPOSURE_PROGRAM_APERTURE_PRIORITY</target>
        </trans-unit>
        <trans-unit id="492a0f53ce9dba35566d20e65a7f0607fb38a5d4" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_CREATIVE_PROGRAM</source>
          <target state="translated">EXPOSURE_PROGRAM_CREATIVE_PROGRAM</target>
        </trans-unit>
        <trans-unit id="813c27de2197086f8e0bf370dd8adef414711379" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_LANDSCAPE_MODE</source>
          <target state="translated">EXPOSURE_PROGRAM_LANDSCAPE_MODE</target>
        </trans-unit>
        <trans-unit id="99beb87991699e7ac7624b769c61e8cb5bd5451f" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_MANUAL</source>
          <target state="translated">EXPOSURE_PROGRAM_MANUAL</target>
        </trans-unit>
        <trans-unit id="4cb11f65480f0ea1968f9764a168e780aae9f2a7" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_MAX_RESERVED</source>
          <target state="translated">EXPOSURE_PROGRAM_MAX_RESERVED</target>
        </trans-unit>
        <trans-unit id="41408dddb1dfb37f1f4a74291b7609974069a32c" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_NORMAL_PROGRAM</source>
          <target state="translated">EXPOSURE_PROGRAM_NORMAL_PROGRAM</target>
        </trans-unit>
        <trans-unit id="4850260cac761733bd738f7300d381382c9ff07c" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_NOT_DEFINED</source>
          <target state="translated">EXPOSURE_PROGRAM_NOT_DEFINED</target>
        </trans-unit>
        <trans-unit id="3e81b5d24204352f21ef0d6f60feaa2172d794a9" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_PORTRAIT_MODE</source>
          <target state="translated">EXPOSURE_PROGRAM_PORTRAIT_MODE</target>
        </trans-unit>
        <trans-unit id="47375b028192697d6d3ade74cb997f5a313696b7" translate="yes" xml:space="preserve">
          <source>EXPOSURE_PROGRAM_SHUTTER_PRIORITY</source>
          <target state="translated">EXPOSURE_PROGRAM_SHUTTER_PRIORITY</target>
        </trans-unit>
        <trans-unit id="891bbd450e125f5b1ee12d035ddc1a7eef7a872c" translate="yes" xml:space="preserve">
          <source>EXPRESSION</source>
          <target state="translated">EXPRESSION</target>
        </trans-unit>
        <trans-unit id="6c745b5ec2f9f8567878ce4cc6c193dbd4fdf2b6" translate="yes" xml:space="preserve">
          <source>EXPRESSION_STATEMENT</source>
          <target state="translated">EXPRESSION_STATEMENT</target>
        </trans-unit>
        <trans-unit id="26a2fbfc322563a8440845ba951ca490ee30369d" translate="yes" xml:space="preserve">
          <source>EXTCRC</source>
          <target state="translated">EXTCRC</target>
        </trans-unit>
        <trans-unit id="559c39e7ff4e3125fde31d180992fe7f9223a0a7" translate="yes" xml:space="preserve">
          <source>EXTENDED</source>
          <target state="translated">EXTENDED</target>
        </trans-unit>
        <trans-unit id="cb537b8baaa53b3f29896a0373eaa7d0333a79eb" translate="yes" xml:space="preserve">
          <source>EXTENDED_FILTERING</source>
          <target state="translated">EXTENDED_FILTERING</target>
        </trans-unit>
        <trans-unit id="7ed3b34723ca4dedb1edc092966362a0133e4ccd" translate="yes" xml:space="preserve">
          <source>EXTENDS_WILDCARD</source>
          <target state="translated">EXTENDS_WILDCARD</target>
        </trans-unit>
        <trans-unit id="4db927d43d61b35fff54bd6c323b8710b34c3d99" translate="yes" xml:space="preserve">
          <source>EXTENSION_INSTALLATION</source>
          <target state="translated">EXTENSION_INSTALLATION</target>
        </trans-unit>
        <trans-unit id="41eb60c34fe710529f77d955b275d64c5915a5de" translate="yes" xml:space="preserve">
          <source>EXTENSION_LIST</source>
          <target state="translated">EXTENSION_LIST</target>
        </trans-unit>
        <trans-unit id="6857c1686c9ac8872c8c0399e4cf9dc0375c2608" translate="yes" xml:space="preserve">
          <source>EXTENSION_NAME</source>
          <target state="translated">EXTENSION_NAME</target>
        </trans-unit>
        <trans-unit id="5773fcd27b5d64b8c5e2a344515db52b928e31a2" translate="yes" xml:space="preserve">
          <source>EXTHDR</source>
          <target state="translated">EXTHDR</target>
        </trans-unit>
        <trans-unit id="a45713b57586e6acc311c72dac2275618c96be2c" translate="yes" xml:space="preserve">
          <source>EXTLEN</source>
          <target state="translated">EXTLEN</target>
        </trans-unit>
        <trans-unit id="55d13329c000a46c7b56f6e6e0dd304192c5d8df" translate="yes" xml:space="preserve">
          <source>EXTRA_SAMPLES_ASSOCIATED_ALPHA</source>
          <target state="translated">EXTRA_SAMPLES_ASSOCIATED_ALPHA</target>
        </trans-unit>
        <trans-unit id="9367576f95ed5badaa7d392d92d839aab3058eaa" translate="yes" xml:space="preserve">
          <source>EXTRA_SAMPLES_UNASSOCIATED_ALPHA</source>
          <target state="translated">EXTRA_SAMPLES_UNASSOCIATED_ALPHA</target>
        </trans-unit>
        <trans-unit id="c92e8254ff0e94e0e91f28a83fe73b5d8ae2c479" translate="yes" xml:space="preserve">
          <source>EXTRA_SAMPLES_UNSPECIFIED</source>
          <target state="translated">EXTRA_SAMPLES_UNSPECIFIED</target>
        </trans-unit>
        <trans-unit id="d898f6ff8fc917535a2d6319379be4322d743dc2" translate="yes" xml:space="preserve">
          <source>EXTSIG</source>
          <target state="translated">EXTSIG</target>
        </trans-unit>
        <trans-unit id="4b242b26c327d4a78a810fa263c50adc3f2ef775" translate="yes" xml:space="preserve">
          <source>EXTSIZ</source>
          <target state="translated">EXTSIZ</target>
        </trans-unit>
        <trans-unit id="bfcd7ad573aecb8012c07a6e30382c23b73f59d3" translate="yes" xml:space="preserve">
          <source>E_RESIZE_CURSOR</source>
          <target state="translated">E_RESIZE_CURSOR</target>
        </trans-unit>
        <trans-unit id="cfbf2c29538c8d5e46b5f7ccfd1a51dccd28488c" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;../componentui&quot;&gt;&lt;code&gt;ComponentUI&lt;/code&gt;&lt;/a&gt; implementation in Synth associates itself with one &lt;a href=&quot;synthstyle&quot;&gt;&lt;code&gt;SynthStyle&lt;/code&gt;&lt;/a&gt; per &lt;a href=&quot;region&quot;&gt;&lt;code&gt;Region&lt;/code&gt;&lt;/a&gt;, most &lt;code&gt;Components&lt;/code&gt; only have one &lt;code&gt;Region&lt;/code&gt; and therefor only one &lt;code&gt;SynthStyle&lt;/code&gt;. &lt;code&gt;SynthStyle&lt;/code&gt; is used to access all style related properties: fonts, colors and other &lt;code&gt;Component&lt;/code&gt; properties. In addition &lt;code&gt;SynthStyle&lt;/code&gt;s are used to obtain &lt;a href=&quot;synthpainter&quot;&gt;&lt;code&gt;SynthPainter&lt;/code&gt;&lt;/a&gt;s for painting the background, border, focus and other portions of a &lt;code&gt;Component&lt;/code&gt;. The &lt;code&gt;ComponentUI&lt;/code&gt;s obtain &lt;code&gt;SynthStyle&lt;/code&gt;s from a &lt;a href=&quot;synthstylefactory&quot;&gt;&lt;code&gt;SynthStyleFactory&lt;/code&gt;&lt;/a&gt;. A &lt;code&gt;SynthStyleFactory&lt;/code&gt; can be provided directly by way of &lt;a href=&quot;synthlookandfeel#setStyleFactory(javax.swing.plaf.synth.SynthStyleFactory)&quot;&gt;&lt;code&gt;SynthLookAndFeel.setStyleFactory(javax.swing.plaf.synth.SynthStyleFactory)&lt;/code&gt;&lt;/a&gt;, or indirectly by way of &lt;a href=&quot;synthlookandfeel#load(java.io.InputStream,java.lang.Class)&quot;&gt;&lt;code&gt;SynthLookAndFeel.load(java.io.InputStream, java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt;. The following example uses the &lt;code&gt;SynthLookAndFeel.load()&lt;/code&gt; method to configure a &lt;code&gt;SynthLookAndFeel&lt;/code&gt; and sets it as the current look and feel:</source>
          <target state="translated">Synth의 각 &lt;a href=&quot;../componentui&quot;&gt; &lt;code&gt;ComponentUI&lt;/code&gt; &lt;/a&gt; 구현은 &lt;a href=&quot;region&quot;&gt; &lt;code&gt;Region&lt;/code&gt; &lt;/a&gt; 당 하나의 &lt;a href=&quot;synthstyle&quot;&gt; &lt;code&gt;SynthStyle&lt;/code&gt; &lt;/a&gt; 과 연결되며 , 대부분의 &lt;code&gt;Components&lt;/code&gt; 에는 &lt;code&gt;Region&lt;/code&gt; 이 하나만 있고 &lt;code&gt;SynthStyle&lt;/code&gt; 하나만 있습니다 . &lt;code&gt;SynthStyle&lt;/code&gt; 은 글꼴, 색상 및 기타 &lt;code&gt;Component&lt;/code&gt; 속성 과 같은 모든 스타일 관련 속성에 액세스하는 데 사용됩니다 . 또한 &lt;code&gt;SynthStyle&lt;/code&gt; 은 배경, 테두리, 초점 및 &lt;code&gt;Component&lt;/code&gt; 의 다른 부분을 칠 하기위한 &lt;a href=&quot;synthpainter&quot;&gt; &lt;code&gt;SynthPainter&lt;/code&gt; &lt;/a&gt; 를 얻는 데 사용됩니다 . &lt;code&gt;ComponentUI&lt;/code&gt; 얻을이야 &lt;code&gt;SynthStyle&lt;/code&gt; 의가에서 &lt;a href=&quot;synthstylefactory&quot;&gt; &lt;code&gt;SynthStyleFactory&lt;/code&gt; &lt;/a&gt; . ㅏ &lt;code&gt;SynthStyleFactory&lt;/code&gt; 는 &lt;a href=&quot;synthlookandfeel#setStyleFactory(javax.swing.plaf.synth.SynthStyleFactory)&quot;&gt; &lt;code&gt;SynthLookAndFeel.setStyleFactory(javax.swing.plaf.synth.SynthStyleFactory)&lt;/code&gt; &lt;/a&gt; 를 통해 직접 제공 되거나 &lt;a href=&quot;synthlookandfeel#load(java.io.InputStream,java.lang.Class)&quot;&gt; &lt;code&gt;SynthLookAndFeel.load(java.io.InputStream, java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 를 통해 간접적으로 제공 될 수 있습니다 . 다음 예제에서는 &lt;code&gt;SynthLookAndFeel.load()&lt;/code&gt; 메서드를 사용하여 &lt;code&gt;SynthLookAndFeel&lt;/code&gt; 을 구성 하고 현재 모양과 느낌으로 설정합니다.</target>
        </trans-unit>
        <trans-unit id="da248787a223916e361a85d5182392daac8dc025" translate="yes" xml:space="preserve">
          <source>Each &lt;a href=&quot;../modulelayer&quot;&gt;&lt;code&gt;layer&lt;/code&gt;&lt;/a&gt; of modules in the Java virtual machine is created from a configuration. The configuration for the &lt;a href=&quot;../modulelayer#boot()&quot;&gt;&lt;code&gt;boot&lt;/code&gt;&lt;/a&gt; layer is obtained by invoking &lt;code&gt;
 ModuleLayer.boot().configuration()&lt;/code&gt;. The configuration for the boot layer will often be the parent when creating new configurations.</source>
          <target state="translated">JVM (Java Virtual Machine)의 각 모듈 &lt;a href=&quot;../modulelayer&quot;&gt; &lt;code&gt;layer&lt;/code&gt; &lt;/a&gt; 은 구성에서 생성됩니다. &lt;a href=&quot;../modulelayer#boot()&quot;&gt; &lt;code&gt;boot&lt;/code&gt; &lt;/a&gt; 계층에 대한 구성은 &lt;code&gt; ModuleLayer.boot().configuration()&lt;/code&gt; 을 호출하여 얻습니다 . 부팅 계층에 대한 구성은 새 구성을 만들 때 종종 부모가됩니다.</target>
        </trans-unit>
        <trans-unit id="a6d0cff754314713de966651f47bf73018de3040" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ArrayList&lt;/code&gt; instance has a</source>
          <target state="translated">각 &lt;code&gt;ArrayList&lt;/code&gt; 인스턴스에는</target>
        </trans-unit>
        <trans-unit id="0ac481ea2ac49d007102ab13a142c47741576701" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CachedRowSet&lt;/code&gt; method that moves the cursor or changes data also notifies registered listeners of the changes, so &lt;code&gt;table&lt;/code&gt; and &lt;code&gt;barGraph&lt;/code&gt; will be notified when there is a change in &lt;code&gt;crs&lt;/code&gt;.</source>
          <target state="translated">각각 &lt;code&gt;CachedRowSet&lt;/code&gt; 정도로 커서 이동 또는 데이터를 변경한다는 방법도 통지는 변경 리스너 등록 &lt;code&gt;table&lt;/code&gt; 과 &lt;code&gt;barGraph&lt;/code&gt; 의이 변화가있는 때에 통지되는 &lt;code&gt;crs&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="642186babe02b4786c0913c6a080f938964519d8" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CachedRowSet&lt;/code&gt; object's &lt;code&gt;SyncProvider&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it's constructors.</source>
          <target state="translated">각 &lt;code&gt;CachedRowSet&lt;/code&gt; 객체의 &lt;code&gt;SyncProvider&lt;/code&gt; 에는 생성자에 전달 된 &lt;code&gt;ResultSet&lt;/code&gt; 또는 JDBC 속성 의 &lt;code&gt;Connection&lt;/code&gt; 객체가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="b8899455cc12cf2a5280f0b59f353f4d1c15ff7a" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CachedRowSet&lt;/code&gt; object's &lt;code&gt;SyncProvider&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it's constructors. This method wraps the &lt;code&gt;Connection&lt;/code&gt; commit method to allow flexible auto commit or non auto commit transactional control support.</source>
          <target state="translated">각 &lt;code&gt;CachedRowSet&lt;/code&gt; 객체의 &lt;code&gt;SyncProvider&lt;/code&gt; 에는 생성자에 전달 된 &lt;code&gt;ResultSet&lt;/code&gt; 또는 JDBC 속성 의 &lt;code&gt;Connection&lt;/code&gt; 객체가 포함 됩니다. 이 메서드는 &lt;code&gt;Connection&lt;/code&gt; commit 메서드를 래핑하여 유연한 자동 커밋 또는 비 자동 커밋 트랜잭션 제어 지원을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="6222a085166204e6c59bd3a50dd9571efba94026" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CachedRowSet&lt;/code&gt; object's &lt;code&gt;SyncProvider&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the original &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it.</source>
          <target state="translated">각 &lt;code&gt;CachedRowSet&lt;/code&gt; 객체의 &lt;code&gt;SyncProvider&lt;/code&gt; 에는 전달 된 원래 &lt;code&gt;ResultSet&lt;/code&gt; 또는 JDBC 속성 의 &lt;code&gt;Connection&lt;/code&gt; 객체가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="ca13a52b641d900d061b51017f19f5986654d83b" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CertPath&lt;/code&gt; object must support one or more encodings so that the object can be translated into a byte array for storage or transmission to other parties. Preferably, these encodings should be well-documented standards (such as PKCS#7). One of the encodings supported by a &lt;code&gt;CertPath&lt;/code&gt; is considered the default encoding. This encoding is used if no encoding is explicitly requested (for the &lt;a href=&quot;#getEncoded()&quot;&gt;&lt;code&gt;getEncoded()&lt;/code&gt;&lt;/a&gt; method, for instance).</source>
          <target state="translated">각 &lt;code&gt;CertPath&lt;/code&gt; 개체는 하나 이상의 인코딩을 지원해야 개체를 저장하거나 다른 당사자에게 전송할 수 있도록 바이트 배열로 변환 할 수 있습니다. 이러한 인코딩은 잘 문서화 된 표준이어야합니다 (예 : PKCS # 7). &lt;code&gt;CertPath&lt;/code&gt; 에서 지원하는 인코딩 중 하나가 기본 인코딩으로 간주됩니다. 이 인코딩은 명시 적으로 요청 된 인코딩이없는 경우에 사용됩니다 (예 : &lt;a href=&quot;#getEncoded()&quot;&gt; &lt;code&gt;getEncoded()&lt;/code&gt; &lt;/a&gt; 메서드의 경우).</target>
        </trans-unit>
        <trans-unit id="a840f61339005907763e96498f0cf96263613394" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CertPath&lt;/code&gt; object must support one or more encodings so that the object can be translated into a byte array for storage or transmission to other parties. Preferably, these encodings should be well-documented standards (such as PKCS#7). One of the encodings supported by a &lt;code&gt;CertPath&lt;/code&gt; is considered the default encoding. This encoding is used if no encoding is explicitly requested (for the &lt;a href=&quot;certpath#getEncoded--&quot;&gt;&lt;code&gt;getEncoded()&lt;/code&gt;&lt;/a&gt; method, for instance).</source>
          <target state="translated">각 &lt;code&gt;CertPath&lt;/code&gt; 객체는 하나 이상의 인코딩을 지원해야 객체를 저장하거나 다른 당사자에게 전송할 수 있도록 바이트 배열로 변환 할 수 있습니다. 바람직하게는, 이들 인코딩은 잘 문서화 된 표준 (예를 들어 PKCS # 7)이어야한다. &lt;code&gt;CertPath&lt;/code&gt; 에서 지원하는 인코딩 중 하나가 기본 인코딩으로 간주됩니다. 이 인코딩은 명시 적으로 요청 된 인코딩이없는 경우 (예 : &lt;a href=&quot;certpath#getEncoded--&quot;&gt; &lt;code&gt;getEncoded()&lt;/code&gt; &lt;/a&gt; 메소드의 경우) 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="149fca2b607196a4885c857e57aa928b14d4cd95" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;CompiledScript&lt;/code&gt; is associated with a &lt;code&gt;ScriptEngine&lt;/code&gt; -- A call to an &lt;code&gt;eval&lt;/code&gt; method of the &lt;code&gt;CompiledScript&lt;/code&gt; causes the execution of the script by the &lt;code&gt;ScriptEngine&lt;/code&gt;. Changes in the state of the &lt;code&gt;ScriptEngine&lt;/code&gt; caused by execution of the &lt;code&gt;CompiledScript&lt;/code&gt; may visible during subsequent executions of scripts by the engine.</source>
          <target state="translated">각 &lt;code&gt;CompiledScript&lt;/code&gt; 를는 와 연관된 &lt;code&gt;ScriptEngine&lt;/code&gt; -에 대한 호출 &lt;code&gt;eval&lt;/code&gt; 의 방법 &lt;code&gt;CompiledScript&lt;/code&gt; 를는 바이 스크립트 실행 발생 &lt;code&gt;ScriptEngine&lt;/code&gt; 를 검색 . &lt;code&gt;CompiledScript&lt;/code&gt; 실행으로 인한 &lt;code&gt;ScriptEngine&lt;/code&gt; 상태의 변경 사항 은 엔진에서 후속 스크립트를 실행하는 동안 표시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b920b9e6c102afcda71f6cb71988e34314718a46" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Component&lt;/code&gt; object is limited in its maximum size and its location because the values are stored as an integer. Also, a platform may further restrict maximum size and location coordinates. The exact maximum values are dependent on the platform. There is no way to change these maximum values, either in Java code or in native code. These limitations also impose restrictions on component layout. If the bounds of a Component object exceed a platform limit, there is no way to properly arrange them within a Container object. The object's bounds are defined by any object's coordinate in combination with its size on a respective axis.</source>
          <target state="translated">값이 정수로 저장되기 때문에 각 &lt;code&gt;Component&lt;/code&gt; 개체는 최대 크기와 위치가 제한됩니다. 또한 플랫폼은 최대 크기 및 위치 좌표를 추가로 제한 할 수 있습니다. 정확한 최대 값은 플랫폼에 따라 다릅니다. Java 코드 또는 원시 코드에서 이러한 최대 값을 변경할 수있는 방법은 없습니다. 이러한 제한은 구성 요소 레이아웃에도 제한을 부과합니다. Component 객체의 경계가 플랫폼 제한을 초과하면 Container 객체 내에서 적절하게 배열 할 방법이 없습니다. 객체의 경계는 각 축의 크기와 결합 된 객체의 좌표로 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="80a759c144e71d923e5bd491612f86b2cacc7fc0" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Document&lt;/code&gt; has a &lt;code&gt;doctype&lt;/code&gt; attribute whose value is either &lt;code&gt;null&lt;/code&gt; or a &lt;code&gt;DocumentType&lt;/code&gt; object.</source>
          <target state="translated">각 &lt;code&gt;Document&lt;/code&gt; 에는 값이 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;DocumentType&lt;/code&gt; 개체 인 &lt;code&gt;doctype&lt;/code&gt; 속성이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="71bead5ee53ca6876dc26d5c977691e6c014ef1c" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Document&lt;/code&gt; has a &lt;code&gt;doctype&lt;/code&gt; attribute whose value is either &lt;code&gt;null&lt;/code&gt; or a &lt;code&gt;DocumentType&lt;/code&gt; object. The &lt;code&gt;DocumentType&lt;/code&gt; interface in the DOM Core provides an interface to the list of entities that are defined for the document, and little else because the effect of namespaces and the various XML schema efforts on DTD representation are not clearly understood as of this writing.</source>
          <target state="translated">각 &lt;code&gt;Document&lt;/code&gt; 에는 값이 &lt;code&gt;null&lt;/code&gt; 또는 &lt;code&gt;DocumentType&lt;/code&gt; 개체 인 &lt;code&gt;doctype&lt;/code&gt; 속성이 있습니다 . DOM Core 의 &lt;code&gt;DocumentType&lt;/code&gt; 인터페이스는 문서 에 대해 정의 된 엔터티 목록에 대한 인터페이스를 제공하며, 네임 스페이스의 영향과 DTD 표현에 대한 다양한 XML 스키마 노력이이 글을 쓰는 시점에서 명확하게 이해되지 않았기 때문입니다.</target>
        </trans-unit>
        <trans-unit id="d194b42595de95b78001024663c0ae1838ff88e9" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;DropTarget&lt;/code&gt; is associated with a &lt;code&gt;FlavorMap&lt;/code&gt;. The default &lt;code&gt;FlavorMap&lt;/code&gt; hereafter designates the &lt;code&gt;FlavorMap&lt;/code&gt; returned by &lt;code&gt;SystemFlavorMap.getDefaultFlavorMap()&lt;/code&gt;.</source>
          <target state="translated">각 &lt;code&gt;DropTarget&lt;/code&gt; 은 &lt;code&gt;FlavorMap&lt;/code&gt; 과 연결됩니다 . 이후 기본 &lt;code&gt;FlavorMap&lt;/code&gt; 은 &lt;code&gt;SystemFlavorMap.getDefaultFlavorMap()&lt;/code&gt; 의해 반환 된 &lt;code&gt;FlavorMap&lt;/code&gt; 을 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="65a0e6bd3b1d57e14b8350f6e0fc41469416cad5" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; represents two sets of metrics, which are</source>
          <target state="translated">각 &lt;code&gt;GlyphJustificationInfo&lt;/code&gt; 는 두 세트의 메트릭을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f27124d10894e68d1709bed5e29c408a3fa942eb" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ImageReaderSpi&lt;/code&gt; provides several types of information about the &lt;code&gt;ImageReader&lt;/code&gt; class with which it is associated.</source>
          <target state="translated">각 &lt;code&gt;ImageReaderSpi&lt;/code&gt; 는 연결된 &lt;code&gt;ImageReader&lt;/code&gt; 클래스 에 대한 여러 유형의 정보를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="72ee52ae769db4712131ca37095c4dc2f78ce671" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ImageWriterSpi&lt;/code&gt; provides several types of information about the &lt;code&gt;ImageWriter&lt;/code&gt; class with which it is associated.</source>
          <target state="translated">각 &lt;code&gt;ImageWriterSpi&lt;/code&gt; 는 연결된 &lt;code&gt;ImageWriter&lt;/code&gt; 클래스 에 대한 여러 유형의 정보를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="d94383be3f3f0c163a098b317ea993f35beddc58" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;JdbcRowSet&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it's constructors.</source>
          <target state="translated">각 &lt;code&gt;JdbcRowSet&lt;/code&gt; 에는 생성자에 전달 된 &lt;code&gt;ResultSet&lt;/code&gt; 또는 JDBC 속성 의 &lt;code&gt;Connection&lt;/code&gt; 객체 가 포함 됩니다.</target>
        </trans-unit>
        <trans-unit id="1a6bbe06a6aa7adbe0032e618ddb49fb8b853378" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;JdbcRowSet&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it's constructors. This method wraps the &lt;code&gt;Connection&lt;/code&gt; commit method to allow flexible auto commit or non auto commit transactional control support.</source>
          <target state="translated">각 &lt;code&gt;JdbcRowSet&lt;/code&gt; 에는 생성자에 전달 된 &lt;code&gt;ResultSet&lt;/code&gt; 또는 JDBC 속성 의 &lt;code&gt;Connection&lt;/code&gt; 객체 가 포함 됩니다. 이 메서드는 &lt;code&gt;Connection&lt;/code&gt; commit 메서드를 래핑하여 유연한 자동 커밋 또는 비 자동 커밋 트랜잭션 제어 지원을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="1d1b258ca61b6513923027b00f6a85f3a58fd590" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;JdbcRowSet&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the original &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it.</source>
          <target state="translated">각 &lt;code&gt;JdbcRowSet&lt;/code&gt; 에는 원래 &lt;code&gt;ResultSet&lt;/code&gt; 의 &lt;code&gt;Connection&lt;/code&gt; 객체 또는 전달 된 JDBC 속성이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1349b19f9931758b2ece8a2b18929e659b373a65" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;JdbcRowSet&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the original &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it. This method wraps the &lt;code&gt;Connection&lt;/code&gt;'s &lt;code&gt;getAutoCommit&lt;/code&gt; method to allow an application to determine the &lt;code&gt;JdbcRowSet&lt;/code&gt; transaction behavior.</source>
          <target state="translated">각 &lt;code&gt;JdbcRowSet&lt;/code&gt; 에는 원래 &lt;code&gt;ResultSet&lt;/code&gt; 의 &lt;code&gt;Connection&lt;/code&gt; 객체 또는 전달 된 JDBC 속성이 포함되어 있습니다. 이 메서드는 &lt;code&gt;Connection&lt;/code&gt; 의 &lt;code&gt;getAutoCommit&lt;/code&gt; 메서드를 래핑하여 응용 프로그램이 &lt;code&gt;JdbcRowSet&lt;/code&gt; 트랜잭션 동작 을 결정할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="37e567af0037708b3e1feaced1154c834fbacf12" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;JdbcRowSet&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the original &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it. This method wraps the &lt;code&gt;Connection&lt;/code&gt;'s &lt;code&gt;getAutoCommit&lt;/code&gt; method to allow an application to set the &lt;code&gt;JdbcRowSet&lt;/code&gt; transaction behavior.</source>
          <target state="translated">각 &lt;code&gt;JdbcRowSet&lt;/code&gt; 에는 원래 &lt;code&gt;ResultSet&lt;/code&gt; 의 &lt;code&gt;Connection&lt;/code&gt; 객체 또는 전달 된 JDBC 속성이 포함되어 있습니다. 이 메서드는 &lt;code&gt;Connection&lt;/code&gt; 의 &lt;code&gt;getAutoCommit&lt;/code&gt; 메서드를 래핑하여 응용 프로그램이 &lt;code&gt;JdbcRowSet&lt;/code&gt; 트랜잭션 동작 을 설정할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="1e70e16bd676858c2d8523762ce1e197ced896a2" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;JdbcRowSet&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the original &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it. Undoes all changes made in the current transaction and releases any database locks currently held by this &lt;code&gt;Connection&lt;/code&gt; object. This method should be used only when auto-commit mode has been disabled.</source>
          <target state="translated">각 &lt;code&gt;JdbcRowSet&lt;/code&gt; 에는 원래 &lt;code&gt;ResultSet&lt;/code&gt; 의 &lt;code&gt;Connection&lt;/code&gt; 객체 또는 전달 된 JDBC 속성이 포함되어 있습니다. 현재 트랜잭션의 모든 변경 사항을 실행 취소하고이 &lt;code&gt;Connection&lt;/code&gt; 개체가 현재 보유하고있는 모든 데이터베이스 잠금을 해제 합니다. 이 방법은 자동 커밋 모드가 비활성화 된 경우에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="759fb3f91fa9dcc58dd0f0848c7ea4410a0acdc6" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;JdbcRowSet&lt;/code&gt; contains a &lt;code&gt;Connection&lt;/code&gt; object from the original &lt;code&gt;ResultSet&lt;/code&gt; or JDBC properties passed to it. Undoes all changes made in the current transaction to the last set savepoint and releases any database locks currently held by this &lt;code&gt;Connection&lt;/code&gt; object. This method should be used only when auto-commit mode has been disabled.</source>
          <target state="translated">각 &lt;code&gt;JdbcRowSet&lt;/code&gt; 에는 &lt;code&gt;Connection&lt;/code&gt; 원래 &lt;code&gt;ResultSet&lt;/code&gt; Connection 객체 또는 전달 된 JDBC 속성이 포함되어 있습니다. 현재 트랜잭션에서 마지막으로 설정된 저장 점에 대한 모든 변경 사항을 실행 취소하고이 &lt;code&gt;Connection&lt;/code&gt; 개체가 현재 보유하고있는 모든 데이터베이스 잠금을 해제 합니다. 이 방법은 자동 커밋 모드가 비활성화 된 경우에만 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="344e5b514a3f5acb4c353bb4e3260d470718742d" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;LookAndFeel&lt;/code&gt; implementation must provide an implementation of the appropriate &lt;code&gt;ComponentUI&lt;/code&gt; subclass by specifying a value for each of Swing's ui class ids in the &lt;code&gt;
 UIDefaults&lt;/code&gt; object returned from &lt;code&gt;getDefaults&lt;/code&gt;. For example, &lt;code&gt;BasicLookAndFeel&lt;/code&gt; uses &lt;code&gt;BasicTreeUI&lt;/code&gt; as the concrete implementation for &lt;code&gt;TreeUI&lt;/code&gt;. This is accomplished by &lt;code&gt;
 BasicLookAndFeel&lt;/code&gt; providing the key-value pair &lt;code&gt;
 &quot;TreeUI&quot;-&quot;javax.swing.plaf.basic.BasicTreeUI&quot;&lt;/code&gt;, in the &lt;code&gt;UIDefaults&lt;/code&gt; returned from &lt;code&gt;getDefaults&lt;/code&gt;. Refer to &lt;a href=&quot;uidefaults#getUI(javax.swing.JComponent)&quot;&gt;&lt;code&gt;UIDefaults.getUI(JComponent)&lt;/code&gt;&lt;/a&gt; for details on how the implementation of the &lt;code&gt;ComponentUI&lt;/code&gt; subclass is obtained.</source>
          <target state="translated">각 &lt;code&gt;LookAndFeel&lt;/code&gt; 구현은 &lt;code&gt;getDefaults&lt;/code&gt; 에서 반환 된 &lt;code&gt; UIDefaults&lt;/code&gt; 객체 에 Swing의 각 ui 클래스 ID 값을 지정 하여 적절한 &lt;code&gt;ComponentUI&lt;/code&gt; 하위 클래스 의 구현을 제공해야합니다 . 예를 들어 &lt;code&gt;BasicLookAndFeel&lt;/code&gt; 은 &lt;code&gt;BasicTreeUI&lt;/code&gt; 를 &lt;code&gt;TreeUI&lt;/code&gt; 의 구체적인 구현으로 사용합니다 . 이렇게하여 수행됩니다 &lt;code&gt; BasicLookAndFeel&lt;/code&gt; 에 키 - 값 쌍 제공 &lt;code&gt; &quot;TreeUI&quot;-&quot;javax.swing.plaf.basic.BasicTreeUI&quot;&lt;/code&gt; 의에 &lt;code&gt;UIDefaults&lt;/code&gt; 에서 반환 &lt;code&gt;getDefaults&lt;/code&gt; . &lt;a href=&quot;uidefaults#getUI(javax.swing.JComponent)&quot;&gt; &lt;code&gt;UIDefaults.getUI(JComponent)&lt;/code&gt; &lt;/a&gt; 참조하십시오. &lt;code&gt;ComponentUI&lt;/code&gt; 하위 클래스 구현 방법에 대한 자세한 내용 은</target>
        </trans-unit>
        <trans-unit id="1ef2b1fff42323fb4c5c06f1cc5fc73781997d14" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;Module&lt;/code&gt; in a layer is created so that it &lt;a href=&quot;module#isExported(java.lang.String)&quot;&gt;&lt;code&gt;exports&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;module#isOpen(java.lang.String)&quot;&gt;&lt;code&gt;opens&lt;/code&gt;&lt;/a&gt; the packages described by its &lt;a href=&quot;module/moduledescriptor&quot;&gt;&lt;code&gt;ModuleDescriptor&lt;/code&gt;&lt;/a&gt;. Qualified exports (where a package is exported to a set of target modules rather than all modules) are reified when creating the layer as follows:</source>
          <target state="translated">각 &lt;code&gt;Module&lt;/code&gt; 층에는 너무 만들어 &lt;a href=&quot;module#isExported(java.lang.String)&quot;&gt; &lt;code&gt;exports&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;module#isOpen(java.lang.String)&quot;&gt; &lt;code&gt;opens&lt;/code&gt; &lt;/a&gt; 패키지가 설명 &lt;a href=&quot;module/moduledescriptor&quot;&gt; &lt;code&gt;ModuleDescriptor&lt;/code&gt; &lt;/a&gt; . 정규화 된 내보내기 (패키지가 모든 모듈이 아닌 대상 모듈 집합으로 내보내 짐)는 계층을 만들 때 다음과 같이 수정됩니다.</target>
        </trans-unit>
        <trans-unit id="9fd3cc0500b20ea7e632cc10c3d71e047b6e2776" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; specified implements additional checks on a certificate. Typically, these are checks to process and verify private extensions contained in certificates. Each &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; should be instantiated with any initialization parameters needed to execute the check.</source>
          <target state="translated">지정된 각 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 는 인증서에 대한 추가 검사를 구현합니다. 일반적으로 이들은 인증서에 포함 된 개인용 확장을 처리하고 확인하기위한 검사입니다. 각 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 는 점검을 실행하는 데 필요한 초기화 매개 변수로 인스턴스화해야합니다.</target>
        </trans-unit>
        <trans-unit id="c4bc814f0442e2a365e1984e9a9ac3e17be723aa" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; must be able to check the revocation status of certificates with OCSP and CRLs. By default, OCSP is the preferred mechanism for checking revocation status, with CRLs as the fallback mechanism. However, this preference can be switched to CRLs with the &lt;a href=&quot;pkixrevocationchecker.option#PREFER_CRLS&quot;&gt;&lt;code&gt;PREFER_CRLS&lt;/code&gt;&lt;/a&gt; option. In addition, the fallback mechanism can be disabled with the &lt;a href=&quot;pkixrevocationchecker.option#NO_FALLBACK&quot;&gt;&lt;code&gt;NO_FALLBACK&lt;/code&gt;&lt;/a&gt; option.</source>
          <target state="translated">각 &lt;code&gt;PKIXRevocationChecker&lt;/code&gt; 는 OCSP 및 CRL을 사용하여 인증서의 폐기 상태를 확인할 수 있어야합니다. 기본적으로 OCSP는 CRL을 폴백 메커니즘으로 사용하여 해지 상태를 확인하는 데 선호되는 메커니즘입니다. 그러나 &lt;a href=&quot;pkixrevocationchecker.option#PREFER_CRLS&quot;&gt; &lt;code&gt;PREFER_CRLS&lt;/code&gt; &lt;/a&gt; 옵션 을 사용하여이 환경 설정을 CRL로 전환 할 수 있습니다 . 또한 &lt;a href=&quot;pkixrevocationchecker.option#NO_FALLBACK&quot;&gt; &lt;code&gt;NO_FALLBACK&lt;/code&gt; &lt;/a&gt; 옵션을 사용하여 폴백 메커니즘을 비활성화 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8c13d441d014f6148c9d1a63f34c97fb8c5c06dc" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ProcessBuilder&lt;/code&gt; instance manages a collection of process attributes. The &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method creates a new &lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; instance with those attributes. The &lt;a href=&quot;#start()&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method can be invoked repeatedly from the same instance to create new subprocesses with identical or related attributes.</source>
          <target state="translated">각 &lt;code&gt;ProcessBuilder&lt;/code&gt; 인스턴스는 프로세스 속성 모음을 관리합니다. &lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt; 메소드는 새로운 생성 &lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt; 해당 속성과 인스턴스를. &lt;a href=&quot;#start()&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt; 메소드는, 동일하거나 관련 특성과 새로운 하위 프로세스를 생성하기 위해 동일한 인스턴스에서 반복적으로 호출 될 수있다.</target>
        </trans-unit>
        <trans-unit id="6f3faea01a84f93ced762c58f36c9ec3c5d9f8eb" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ProcessBuilder&lt;/code&gt; instance manages a collection of process attributes. The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method creates a new &lt;a href=&quot;process&quot;&gt;&lt;code&gt;Process&lt;/code&gt;&lt;/a&gt; instance with those attributes. The &lt;a href=&quot;processbuilder#start--&quot;&gt;&lt;code&gt;start()&lt;/code&gt;&lt;/a&gt; method can be invoked repeatedly from the same instance to create new subprocesses with identical or related attributes.</source>
          <target state="translated">각 &lt;code&gt;ProcessBuilder&lt;/code&gt; 인스턴스는 프로세스 속성의 컬렉션을 관리합니다. &lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt; 메소드는 새로운 생성 &lt;a href=&quot;process&quot;&gt; &lt;code&gt;Process&lt;/code&gt; &lt;/a&gt; 해당 속성과 인스턴스를. &lt;a href=&quot;processbuilder#start--&quot;&gt; &lt;code&gt;start()&lt;/code&gt; &lt;/a&gt; 메소드는, 동일하거나 관련 특성과 새로운 하위 프로세스를 생성하기 위해 동일한 인스턴스에서 반복적으로 호출 될 수있다.</target>
        </trans-unit>
        <trans-unit id="7c21cf863134c04fb1b1210002465ea769c2dcb2" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;SQLException&lt;/code&gt; provides several kinds of information:</source>
          <target state="translated">각 &lt;code&gt;SQLException&lt;/code&gt; 은 여러 종류의 정보를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="17fc51fd2d609f948524d4b3dd28d15a7f87f9d7" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;SynthStyle&lt;/code&gt; has a set of &lt;code&gt;ColorType&lt;/code&gt;s that are accessed by way of the &lt;a href=&quot;synthstyle#getColor(javax.swing.plaf.synth.SynthContext,javax.swing.plaf.synth.ColorType)&quot;&gt;&lt;code&gt;SynthStyle.getColor(SynthContext, ColorType)&lt;/code&gt;&lt;/a&gt; method. &lt;code&gt;SynthStyle&lt;/code&gt;'s &lt;code&gt;installDefaults&lt;/code&gt; will install the &lt;code&gt;FOREGROUND&lt;/code&gt; color as the foreground of the Component, and the &lt;code&gt;BACKGROUND&lt;/code&gt; color to the background of the component (assuming that you have not explicitly specified a foreground and background color). Some components support more color based properties, for example &lt;code&gt;JList&lt;/code&gt; has the property &lt;code&gt;selectionForeground&lt;/code&gt; which will be mapped to &lt;code&gt;FOREGROUND&lt;/code&gt; with a component state of &lt;code&gt;SynthConstants.SELECTED&lt;/code&gt;.</source>
          <target state="translated">각 &lt;code&gt;SynthStyle&lt;/code&gt; 에는 &lt;a href=&quot;synthstyle#getColor(javax.swing.plaf.synth.SynthContext,javax.swing.plaf.synth.ColorType)&quot;&gt; &lt;code&gt;SynthStyle.getColor(SynthContext, ColorType)&lt;/code&gt; &lt;/a&gt; 메서드를 통해 액세스되는 &lt;code&gt;ColorType&lt;/code&gt; 집합 이 있습니다 . &lt;code&gt;SynthStyle&lt;/code&gt; 의 &lt;code&gt;installDefaults&lt;/code&gt; 는 &lt;code&gt;FOREGROUND&lt;/code&gt; 색상을 구성 요소의 전경으로 설치하고 &lt;code&gt;BACKGROUND&lt;/code&gt; 색상을 구성 요소의 배경에 설치합니다 (전경 및 배경 색상을 명시 적으로 지정하지 않았다고 가정). 일부 구성 요소는 더 많은 색상 기반 속성을 지원합니다. 예를 들어 &lt;code&gt;JList&lt;/code&gt; 에는 구성 요소 상태가 &lt;code&gt;SynthConstants.SELECTED&lt;/code&gt; 인 &lt;code&gt;FOREGROUND&lt;/code&gt; 에 매핑되는 &lt;code&gt;selectionForeground&lt;/code&gt; 속성 이 있습니다..</target>
        </trans-unit>
        <trans-unit id="70a825afc410be57f11b3140618489849a3eca76" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;ThreadGroup&lt;/code&gt; will receive its own instance; this allows different &lt;code&gt;Applet&lt;/code&gt;s in the same browser (for example) to each have their own registry.</source>
          <target state="translated">각 &lt;code&gt;ThreadGroup&lt;/code&gt; 은 자체 인스턴스를받습니다. 이것은 같은 브라우저 (예를 들어)에서 서로 다른 &lt;code&gt;Applet&lt;/code&gt; 이 각각 자신의 레지스트리를 갖도록합니다.</target>
        </trans-unit>
        <trans-unit id="d8c28e32fe582759ca72c38dccf1b5a1ad1a4858" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;XMLSignature&lt;/code&gt; created by the factory can also be marshalled to an XML representation and signed, by invoking the &lt;a href=&quot;xmlsignature#sign(javax.xml.crypto.dsig.XMLSignContext)&quot;&gt;&lt;code&gt;sign&lt;/code&gt;&lt;/a&gt; method of the &lt;a href=&quot;xmlsignature&quot;&gt;&lt;code&gt;XMLSignature&lt;/code&gt;&lt;/a&gt; object and passing it a mechanism-specific &lt;a href=&quot;xmlsigncontext&quot;&gt;&lt;code&gt;XMLSignContext&lt;/code&gt;&lt;/a&gt; object containing the signing key and marshalling parameters (see &lt;a href=&quot;dom/domsigncontext&quot;&gt;&lt;code&gt;DOMSignContext&lt;/code&gt;&lt;/a&gt;). For example:</source>
          <target state="translated">팩토리에 의해 생성 된 각 &lt;code&gt;XMLSignature&lt;/code&gt; 는 &lt;a href=&quot;xmlsignature&quot;&gt; &lt;code&gt;XMLSignature&lt;/code&gt; &lt;/a&gt; 객체 의 &lt;a href=&quot;xmlsignature#sign(javax.xml.crypto.dsig.XMLSignContext)&quot;&gt; &lt;code&gt;sign&lt;/code&gt; &lt;/a&gt; 메서드를 호출 하고 서명 키와 마샬링 매개 변수를 포함 하는 메커니즘 별 &lt;a href=&quot;xmlsigncontext&quot;&gt; &lt;code&gt;XMLSignContext&lt;/code&gt; &lt;/a&gt; 객체를 전달 하여 XML 표현으로 마샬링되고 서명 될 수도 있습니다 ( &lt;a href=&quot;dom/domsigncontext&quot;&gt; &lt;code&gt;DOMSignContext&lt;/code&gt; &lt;/a&gt; 참조) . ). 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="2ac1f0b84eb7c736f7b6a2b6fe9393c3da9813b8" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;XMLSignatureFactory&lt;/code&gt; must support the required &lt;code&gt;XMLValidateContext&lt;/code&gt; types for that factory type, but may support others. A DOM &lt;code&gt;XMLSignatureFactory&lt;/code&gt; must support &lt;a href=&quot;dom/domvalidatecontext&quot;&gt;&lt;code&gt;DOMValidateContext&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">각 &lt;code&gt;XMLSignatureFactory&lt;/code&gt; 는 해당 팩토리 유형에 필요한 &lt;code&gt;XMLValidateContext&lt;/code&gt; 유형을 지원해야 하지만 다른 유형은 지원할 수 있습니다. DOM &lt;code&gt;XMLSignatureFactory&lt;/code&gt; 는 &lt;a href=&quot;dom/domvalidatecontext&quot;&gt; &lt;code&gt;DOMValidateContext&lt;/code&gt; &lt;/a&gt; 를 지원해야합니다. 객체 합니다.</target>
        </trans-unit>
        <trans-unit id="619b708c71fa97acd169df488ae705d3dfc98335" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;byte&lt;/code&gt; in the subarray is converted to a &lt;code&gt;char&lt;/code&gt; as specified in the &lt;a href=&quot;#%3Cinit%3E(byte%5B%5D,int)&quot;&gt;&lt;code&gt;String(byte[],int)&lt;/code&gt;&lt;/a&gt; constructor.</source>
          <target state="translated">하위 배열의 각 &lt;code&gt;byte&lt;/code&gt; 는 &lt;a href=&quot;#%3Cinit%3E(byte%5B%5D,int)&quot;&gt; &lt;code&gt;String(byte[],int)&lt;/code&gt; &lt;/a&gt; 지정된대로 &lt;code&gt;char&lt;/code&gt; 로 변환됩니다. 생성자에 .</target>
        </trans-unit>
        <trans-unit id="ead1ca17c6d920968eacad59c4f36582e117a902" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;byte&lt;/code&gt; in the subarray is converted to a &lt;code&gt;char&lt;/code&gt; as specified in the method above.</source>
          <target state="translated">하위 배열의 각 &lt;code&gt;byte&lt;/code&gt; 는 위의 방법에서 지정한대로 &lt;code&gt;char&lt;/code&gt; 로 변환됩니다 .</target>
        </trans-unit>
        <trans-unit id="b7d4cbe8023a80b2c2a8860e8d316e49318ead98" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;invokedynamic&lt;/code&gt; instruction statically specifies its own bootstrap method as a constant pool reference. The constant pool reference also specifies the call site's name and type descriptor, just like &lt;code&gt;invokevirtual&lt;/code&gt; and the other invoke instructions.</source>
          <target state="translated">각 &lt;code&gt;invokedynamic&lt;/code&gt; 명령어는 고유 한 부트 스트랩 방법을 상수 풀 참조로 정적으로 지정합니다. 상수 풀 참조는 &lt;code&gt;invokevirtual&lt;/code&gt; 및 기타 호출 명령과 마찬가지로 호출 사이트의 이름 및 유형 설명자를 지정합니다 .</target>
        </trans-unit>
        <trans-unit id="b2b5e3afcd79dd56a7ba41aea1bc588e8050a51d" translate="yes" xml:space="preserve">
          <source>Each &lt;code&gt;invokedynamic&lt;/code&gt; instruction statically specifies its own bootstrap method as a constant pool reference. The constant pool reference also specifies the invocation's name and method type descriptor, just like &lt;code&gt;invokestatic&lt;/code&gt; and the other invoke instructions.</source>
          <target state="translated">각 &lt;code&gt;invokedynamic&lt;/code&gt; 명령어는 자체 부트 스트랩 메서드를 상수 풀 참조로 정적으로 지정합니다. 상수 풀 참조는 &lt;code&gt;invokestatic&lt;/code&gt; 과 마찬가지로 호출의 이름과 메서드 유형 설명자를 지정합니다. 및 다른 invoke 명령어와 .</target>
        </trans-unit>
        <trans-unit id="ea0ce09c4af09947386ad8cc81d2d4762a70f4c5" translate="yes" xml:space="preserve">
          <source>Each &lt;em&gt;key&lt;/em&gt; is a nonempty string of characters which may not contain any of the characters comma (&lt;code&gt;,&lt;/code&gt;), equals (&lt;code&gt;=&lt;/code&gt;), colon, asterisk, or question mark. The same key may not occur twice in a given ObjectName.</source>
          <target state="translated">각 &lt;em&gt;키&lt;/em&gt; 는 비어 있지 않은 문자열로 쉼표 ( &lt;code&gt;,&lt;/code&gt; ), 등호 ( &lt;code&gt;=&lt;/code&gt; ), 콜론, 별표 또는 물음표를 포함 할 수 없습니다 . 지정된 ObjectName에서 동일한 키가 두 번 나타나지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a8216429331768e0b4417c39ef6544205df56fd" translate="yes" xml:space="preserve">
          <source>Each &lt;em&gt;value&lt;/em&gt; associated with a key is a string of characters that is either unquoted or quoted.</source>
          <target state="translated">키와 관련된 각 &lt;em&gt;값&lt;/em&gt; 은 따옴표 또는 따옴표로 묶인 문자열입니다.</target>
        </trans-unit>
        <trans-unit id="6f7c6449524ce58c93d9e67f3d6e5cc4b261a37e" translate="yes" xml:space="preserve">
          <source>Each Filter class will document the attributes which they make available.</source>
          <target state="translated">각 필터 클래스는 사용 가능한 속성을 문서화합니다.</target>
        </trans-unit>
        <trans-unit id="ea27d1d350db72f5244c756d7e0a958f0f571b86" translate="yes" xml:space="preserve">
          <source>Each Filter in the chain, invokes the next filter within its own doFilter() implementation. The final Filter in the chain invokes the applications exchange handler.</source>
          <target state="translated">체인의 각 필터는 자체 doFilter () 구현 내에서 다음 필터를 호출합니다. 체인의 마지막 필터는 응용 프로그램 교환 처리기를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="63200ade0ddff96018a1d34e2c186a641ed81ded" translate="yes" xml:space="preserve">
          <source>Each Hijrah variant is configured individually. Each variant is defined by a property resource that defines the &lt;code&gt;ID&lt;/code&gt;, the &lt;code&gt;calendar type&lt;/code&gt;, the start of the calendar, the alignment with the ISO calendar, and the length of each month for a range of years. The variants are identified in the &lt;code&gt;calendars.properties&lt;/code&gt; file. The new properties are prefixed with &lt;code&gt;&quot;calendars.hijrah.&quot;&lt;/code&gt;:</source>
          <target state="translated">각 Hijrah 변형은 개별적으로 구성됩니다. 각 변형은 &lt;code&gt;ID&lt;/code&gt; , &lt;code&gt;calendar type&lt;/code&gt; , 달력 의 시작, ISO 달력과의 정렬 및 연도 범위의 각 월 길이 를 정의하는 속성 자원으로 정의 됩니다. 변형은 &lt;code&gt;calendars.properties&lt;/code&gt; 파일 에서 식별 됩니다. 새로운 속성은 &lt;code&gt;&quot;calendars.hijrah.&quot;&lt;/code&gt; 로 시작 됩니다. :</target>
        </trans-unit>
        <trans-unit id="518e6bd3e102293fd6f511c42a740303254307df" translate="yes" xml:space="preserve">
          <source>Each Hijrah variant is configured individually. Each variant is defined by a property resource that defines the &lt;code&gt;ID&lt;/code&gt;, the &lt;code&gt;calendar type&lt;/code&gt;, the start of the calendar, the alignment with the ISO calendar, and the length of each month for a range of years. The variants are loaded by HijrahChronology as a resource from hijrah-config-&amp;lt;calendar type&amp;gt;.properties.</source>
          <target state="translated">각 Hijrah 변형은 개별적으로 구성됩니다. 각 변형은 &lt;code&gt;ID&lt;/code&gt; 를 정의하는 속성 리소스에 의해 정의됩니다 . &lt;code&gt;calendar type&lt;/code&gt; , 달력 의 시작, ISO 달력과의 정렬 및 연도 범위에 대한 매월 길이 . 변형은 HijrahChronology에 의해 hijrah-config- &amp;lt;calendar type&amp;gt; .properties의 리소스로로드됩니다.</target>
        </trans-unit>
        <trans-unit id="4f3e9f4eaf3f51b06c2df388bb21b1f3fed4d446" translate="yes" xml:space="preserve">
          <source>Each HijrahDate is created bound to a particular HijrahChronology, The same chronology is propagated to each HijrahDate computed from the date. To use a different Hijrah variant, its HijrahChronology can be used to create new HijrahDate instances. Alternatively, the &lt;a href=&quot;#withVariant(java.time.chrono.HijrahChronology)&quot;&gt;&lt;code&gt;withVariant(java.time.chrono.HijrahChronology)&lt;/code&gt;&lt;/a&gt; method can be used to convert to a new HijrahChronology.</source>
          <target state="translated">각 HijrahDate는 특정 HijrahChronology에 바인딩되어 생성됩니다. 동일한 연대기가 날짜에서 계산 된 각 HijrahDate에 전파됩니다. 다른 Hijrah 변형을 사용하려면 HijrahChronology를 사용하여 새 HijrahDate 인스턴스를 만들 수 있습니다. 또는 &lt;a href=&quot;#withVariant(java.time.chrono.HijrahChronology)&quot;&gt; &lt;code&gt;withVariant(java.time.chrono.HijrahChronology)&lt;/code&gt; &lt;/a&gt; 메서드를 사용하여 새 HijrahChronology로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="55c1e383d0a9ffc65595adce6358af59c57f36b2" translate="yes" xml:space="preserve">
          <source>Each HijrahDate is created bound to a particular HijrahChronology, The same chronology is propagated to each HijrahDate computed from the date. To use a different Hijrah variant, its HijrahChronology can be used to create new HijrahDate instances. Alternatively, the &lt;a href=&quot;hijrahdate#withVariant-java.time.chrono.HijrahChronology-&quot;&gt;&lt;code&gt;withVariant(java.time.chrono.HijrahChronology)&lt;/code&gt;&lt;/a&gt; method can be used to convert to a new HijrahChronology.</source>
          <target state="translated">각 HijrahDate는 특정 HijrahChronology에 바인딩되어 생성됩니다. 날짜로부터 계산 된 각 HijrahDate에 동일한 연대기가 전파됩니다. 다른 Hijrah 변형을 사용하기 위해 HijrahChronology를 사용하여 새 HijrahDate 인스턴스를 만들 수 있습니다. 또는 &lt;a href=&quot;hijrahdate#withVariant-java.time.chrono.HijrahChronology-&quot;&gt; &lt;code&gt;withVariant(java.time.chrono.HijrahChronology)&lt;/code&gt; &lt;/a&gt; 메소드를 사용하여 새 HijrahChronology로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cc1c16ba9d553f616b5d2859beee5990afc805d9" translate="yes" xml:space="preserve">
          <source>Each HttpURLConnection instance is used to make a single request but the underlying network connection to the HTTP server may be transparently shared by other instances. Calling the close() methods on the InputStream or OutputStream of an HttpURLConnection after a request may free network resources associated with this instance but has no effect on any shared persistent connection. Calling the disconnect() method may close the underlying socket if a persistent connection is otherwise idle at that time.</source>
          <target state="translated">각 HttpURLConnection 인스턴스는 단일 요청을하는 데 사용되지만 HTTP 서버에 대한 기본 네트워크 연결은 다른 인스턴스와 투명하게 공유 될 수 있습니다. 요청 후 HttpURLConnection의 InputStream 또는 OutputStream에서 close () 메서드를 호출하면이 인스턴스와 연결된 네트워크 리소스가 해제 될 수 있지만 공유 영구 연결에는 영향을 미치지 않습니다. 그 때 영구 연결이 유휴 상태 인 경우 disconnect () 메서드를 호출하면 기본 소켓이 닫힐 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db30d9a58fa9a7fc324f1e68bab8617024f37c0e" translate="yes" xml:space="preserve">
          <source>Each Logger and each Handler can have a filter associated with it. The Logger or Handler will call the isLoggable method to check if a given LogRecord should be published. If isLoggable returns false, the LogRecord will be discarded.</source>
          <target state="translated">각 로거와 각 핸들러에는 이와 연관된 필터가있을 수 있습니다. 로거 또는 핸들러는 isLoggable 메소드를 호출하여 지정된 LogRecord가 공개되어야하는지 여부를 확인합니다. isLoggable이 false를 반환하면 LogRecord가 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="b4b441776e0dfacc09dbb8e4364d83bf2d0985f0" translate="yes" xml:space="preserve">
          <source>Each Logger has a &quot;Level&quot; associated with it. This reflects a minimum Level that this logger cares about. If a Logger's level is set to &lt;code&gt;null&lt;/code&gt;, then its effective level is inherited from its parent, which may in turn obtain it recursively from its parent, and so on up the tree.</source>
          <target state="translated">각 로거에는 &quot;레벨&quot;이 연결되어 있습니다. 이것은이 로거가 신경 쓰는 최소 레벨을 반영합니다. 로거의 레벨이 &lt;code&gt;null&lt;/code&gt; 로 설정되면 (자) , 실효 레벨은 그 부모로부터 상속되어, 그 부모로부터 재귀 적으로 얻을 수있는 등, 트리의 위로 올라갑니다.</target>
        </trans-unit>
        <trans-unit id="0539a3e314b03b3ea9a0cbb43e0f8610ddc537c5" translate="yes" xml:space="preserve">
          <source>Each Logger keeps track of a &quot;parent&quot; Logger, which is its nearest existing ancestor in the Logger namespace.</source>
          <target state="translated">각 로거는 &quot;상위&quot;로거를 추적하며, 이는 로거 네임 스페이스에서 가장 가까운 기존 조상입니다.</target>
        </trans-unit>
        <trans-unit id="32ba008a6bf5acdfc4aa839c35c87a6bbbc08dca" translate="yes" xml:space="preserve">
          <source>Each Logger may have a &lt;code&gt;ResourceBundle&lt;/code&gt; associated with it. The &lt;code&gt;ResourceBundle&lt;/code&gt; may be specified by name, using the &lt;a href=&quot;#getLogger(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;getLogger(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt; factory method, or by value - using the &lt;a href=&quot;#setResourceBundle(java.util.ResourceBundle)&quot;&gt;&lt;code&gt;setResourceBundle&lt;/code&gt;&lt;/a&gt; method. This bundle will be used for localizing logging messages. If a Logger does not have its own &lt;code&gt;ResourceBundle&lt;/code&gt; or resource bundle name, then it will inherit the &lt;code&gt;ResourceBundle&lt;/code&gt; or resource bundle name from its parent, recursively up the tree.</source>
          <target state="translated">각 로거에는 연결된 &lt;code&gt;ResourceBundle&lt;/code&gt; 이있을 수 있습니다 . &lt;code&gt;ResourceBundle&lt;/code&gt; 은 USING 이름으로 지정 될 수있다 &lt;a href=&quot;#getLogger(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;getLogger(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt; 공장 메소드 또는 값에 의해 -은 USING &lt;a href=&quot;#setResourceBundle(java.util.ResourceBundle)&quot;&gt; &lt;code&gt;setResourceBundle&lt;/code&gt; &lt;/a&gt; 방법. 이 번들은 로깅 메시지를 현지화하는 데 사용됩니다. 로거에 자체 &lt;code&gt;ResourceBundle&lt;/code&gt; 또는 리소스 번들 이름 이없는 경우 상위 트리에서 &lt;code&gt;ResourceBundle&lt;/code&gt; 또는 리소스 번들 이름을 상속받습니다 .</target>
        </trans-unit>
        <trans-unit id="b96a7dd0055962446eaf1a58405a8ea9dd09ba04" translate="yes" xml:space="preserve">
          <source>Each Logger may have a &lt;code&gt;ResourceBundle&lt;/code&gt; associated with it. The &lt;code&gt;ResourceBundle&lt;/code&gt; may be specified by name, using the &lt;a href=&quot;logger#getLogger-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;getLogger(java.lang.String, java.lang.String)&lt;/code&gt;&lt;/a&gt; factory method, or by value - using the &lt;a href=&quot;logger#setResourceBundle-java.util.ResourceBundle-&quot;&gt;&lt;code&gt;setResourceBundle&lt;/code&gt;&lt;/a&gt; method. This bundle will be used for localizing logging messages. If a Logger does not have its own &lt;code&gt;ResourceBundle&lt;/code&gt; or resource bundle name, then it will inherit the &lt;code&gt;ResourceBundle&lt;/code&gt; or resource bundle name from its parent, recursively up the tree.</source>
          <target state="translated">각 로거에는 &lt;code&gt;ResourceBundle&lt;/code&gt; 이 연결되어있을 수 있습니다. &lt;code&gt;ResourceBundle&lt;/code&gt; 은 USING 이름으로 지정 될 수있다 &lt;a href=&quot;logger#getLogger-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;getLogger(java.lang.String, java.lang.String)&lt;/code&gt; &lt;/a&gt; 공장 메소드 또는 값에 의해 -은 USING &lt;a href=&quot;logger#setResourceBundle-java.util.ResourceBundle-&quot;&gt; &lt;code&gt;setResourceBundle&lt;/code&gt; &lt;/a&gt; 방법. 이 번들은 로깅 메시지를 현지화하는 데 사용됩니다. 로거에 자체 &lt;code&gt;ResourceBundle&lt;/code&gt; 또는 자원 번들 이름 이없는 경우 , 트리에서 재귀 적으로 상위에서 &lt;code&gt;ResourceBundle&lt;/code&gt; 또는 자원 번들 이름을 상속합니다 .</target>
        </trans-unit>
        <trans-unit id="bcd6ebda729df082abf18e65f38b772aa8d0e579" translate="yes" xml:space="preserve">
          <source>Each ProcessHandle identifies and allows control of a process in the native system. ProcessHandles are returned from the factory methods &lt;a href=&quot;#current()&quot;&gt;&lt;code&gt;current()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#of(long)&quot;&gt;&lt;code&gt;of(long)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#children()&quot;&gt;&lt;code&gt;children()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#descendants()&quot;&gt;&lt;code&gt;descendants()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#parent()&quot;&gt;&lt;code&gt;parent()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#allProcesses()&quot;&gt;&lt;code&gt;allProcesses()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">각 ProcessHandle은 기본 시스템에서 프로세스를 식별하고 제어 할 수 있습니다. ProcessHandles는 팩토리 메서드 &lt;a href=&quot;#current()&quot;&gt; &lt;code&gt;current()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#of(long)&quot;&gt; &lt;code&gt;of(long)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#children()&quot;&gt; &lt;code&gt;children()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#descendants()&quot;&gt; &lt;code&gt;descendants()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#parent()&quot;&gt; &lt;code&gt;parent()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#allProcesses()&quot;&gt; &lt;code&gt;allProcesses()&lt;/code&gt; &lt;/a&gt; 에서 반환됩니다 .</target>
        </trans-unit>
        <trans-unit id="45cd0cc22b239c187710f4ce2bcccac9b6d7dc99" translate="yes" xml:space="preserve">
          <source>Each PropertyEditor should have a null constructor.</source>
          <target state="translated">각 PropertyEditor에는 널 생성자가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="58dd6b68d2a52f4d25d07ee4f763280ce9fd2773" translate="yes" xml:space="preserve">
          <source>Each SSL/TLS connection must have one client and one server, thus each endpoint must decide which role to assume. This choice determines who begins the handshaking process as well as which type of messages should be sent by each party. The method &lt;a href=&quot;sslengine#setUseClientMode-boolean-&quot;&gt;&lt;code&gt;setUseClientMode(boolean)&lt;/code&gt;&lt;/a&gt; configures the mode. Once the initial handshaking has started, an &lt;code&gt;SSLEngine&lt;/code&gt; can not switch between client and server modes, even when performing renegotiations.</source>
          <target state="translated">각 SSL / TLS 연결에는 하나의 클라이언트와 하나의 서버가 있어야하므로 각 엔드 포인트는 어떤 역할을 맡을 것인지 결정해야합니다. 이 선택에 따라 핸드 셰이 킹 프로세스를 시작하는 사람과 각 당사자가 어떤 유형의 메시지를 보내야하는지 결정됩니다. &lt;a href=&quot;sslengine#setUseClientMode-boolean-&quot;&gt; &lt;code&gt;setUseClientMode(boolean)&lt;/code&gt; &lt;/a&gt; 메소드 는 모드를 구성합니다. 초기 핸드 쉐이킹이 시작되면 재협상을 수행하더라도 &lt;code&gt;SSLEngine&lt;/code&gt; 은 클라이언트와 서버 모드 사이를 전환 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="bae7798821f541c34acf4864f48a8c940fb474aa" translate="yes" xml:space="preserve">
          <source>Each SSL/TLS/DTLS connection must have one client and one server, thus each endpoint must decide which role to assume. This choice determines who begins the handshaking process as well as which type of messages should be sent by each party. The method &lt;a href=&quot;#setUseClientMode(boolean)&quot;&gt;&lt;code&gt;setUseClientMode(boolean)&lt;/code&gt;&lt;/a&gt; configures the mode. Note that the default mode for a new &lt;code&gt;SSLEngine&lt;/code&gt; is provider-specific. Applications should set the mode explicitly before invoking other methods of the &lt;code&gt;SSLEngine&lt;/code&gt;. Once the initial handshaking has started, an &lt;code&gt;SSLEngine&lt;/code&gt; can not switch between client and server modes, even when performing renegotiations.</source>
          <target state="translated">각 SSL / TLS / DTLS 연결에는 하나의 클라이언트와 하나의 서버가 있어야하므로 각 엔드 포인트는 맡을 역할을 결정해야합니다. 이 선택은 핸드 셰이 킹 프로세스를 시작하는 사람과 각 당사자가 보낼 메시지 유형을 결정합니다. &lt;a href=&quot;#setUseClientMode(boolean)&quot;&gt; &lt;code&gt;setUseClientMode(boolean)&lt;/code&gt; &lt;/a&gt; 메소드 는 모드를 구성합니다. 새 &lt;code&gt;SSLEngine&lt;/code&gt; 의 기본 모드 는 공급자별로 다릅니다. 응용 프로그램은 &lt;code&gt;SSLEngine&lt;/code&gt; 의 다른 메서드를 호출하기 전에 명시 적으로 모드를 설정해야합니다 . 초기 핸드 셰이 킹이 시작되면 &lt;code&gt;SSLEngine&lt;/code&gt; 은 재협상을 수행하는 경우에도 클라이언트 모드와 서버 모드간에 전환 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="73898cfbabfe511dab97005abc423f20eb079fb7" translate="yes" xml:space="preserve">
          <source>Each SizeRequirements object contains information about either the width (and X alignment) or height (and Y alignment) of a single component or a group of components:</source>
          <target state="translated">각 SizeRequirements 개체에는 단일 구성 요소 또는 구성 요소 그룹의 너비 (및 X 정렬) 또는 높이 (및 Y 정렬)에 대한 정보가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="65b4dd558748b2ead02c202dc9e9ffdc03970678" translate="yes" xml:space="preserve">
          <source>Each TerminalFactory has a &lt;code&gt;type&lt;/code&gt; indicating how it was implemented. It must be specified when the implementation is obtained using a &lt;a href=&quot;#getInstance(java.lang.String,java.lang.Object)&quot;&gt;getInstance()&lt;/a&gt; method and can be retrieved via the &lt;a href=&quot;#getType()&quot;&gt;getType()&lt;/a&gt; method.</source>
          <target state="translated">각 TerminalFactory에는 구현 방법을 나타내는 &lt;code&gt;type&lt;/code&gt; 이 있습니다. &lt;a href=&quot;#getInstance(java.lang.String,java.lang.Object)&quot;&gt;getInstance ()&lt;/a&gt; 메서드를 사용하여 구현을 가져올 때 지정해야하며 &lt;a href=&quot;#getType()&quot;&gt;getType ()&lt;/a&gt; 메서드 를 통해 검색 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="235badd313cb2d2c7c411e663d1587ab0b64dc8a" translate="yes" xml:space="preserve">
          <source>Each VM option has a default value. A VM option can be set at VM creation time typically as a command line argument to the launcher or an argument passed to the VM created using the JNI invocation interface. In addition, a VM option may be set via an environment variable or a configuration file. A VM option can also be set dynamically via a management interface after the VM was started. A &lt;code&gt;VMOption&lt;/code&gt; contains the value of a VM option and the origin of that value at the time this &lt;code&gt;VMOption&lt;/code&gt; object was constructed. The value of the VM option may be changed after the &lt;code&gt;VMOption&lt;/code&gt; object was constructed,</source>
          <target state="translated">각 VM 옵션에는 기본값이 있습니다. VM 옵션은 일반적으로 실행기에 대한 명령 줄 인수 또는 JNI 호출 인터페이스를 사용하여 만든 VM에 전달 된 인수로 VM 생성시 설정할 수 있습니다. 또한 VM 옵션은 환경 변수 또는 구성 파일을 통해 설정할 수 있습니다. VM이 시작된 후 관리 인터페이스를 통해 VM 옵션을 동적으로 설정할 수도 있습니다. &lt;code&gt;VMOption&lt;/code&gt; 는 VM에 옵션이 시점에서 그 값의 기원의 값이 포함되어 &lt;code&gt;VMOption&lt;/code&gt; 의 객체가 구축되었다. VM 옵션의 값은 &lt;code&gt;VMOption&lt;/code&gt; 객체가 생성 된 후에 변경 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b0ebd53ce2a77fe511750e5d5d22b92b05c82777" translate="yes" xml:space="preserve">
          <source>Each access mode is associated with one &lt;em&gt;access mode method&lt;/em&gt;, a &lt;a href=&quot;methodhandle#sigpoly&quot;&gt;signature polymorphic&lt;/a&gt; method named for the access mode. When an access mode method is invoked on a VarHandle instance, the initial arguments to the invocation are coordinate expressions that indicate in precisely which object the variable is to be accessed. Trailing arguments to the invocation represent values of importance to the access mode. For example, the various compare-and-set or compare-and-exchange access modes require two trailing arguments for the variable's expected value and new value.</source>
          <target state="translated">각 액세스 모드는 하나의 &lt;em&gt;액세스 모드 방법&lt;/em&gt; 인 &lt;a href=&quot;methodhandle#sigpoly&quot;&gt;서명 다형성&lt;/a&gt; 과 연관됩니다. 대해 명명 방법 인 연결됩니다. 액세스 모드 메서드가 VarHandle 인스턴스에서 호출 될 때 호출에 대한 초기 인수는 변수에 액세스 할 개체를 정확하게 나타내는 좌표 식입니다. 호출의 후행 인수는 액세스 모드에 중요한 값을 나타냅니다. 예를 들어, 다양한 비교 및 ​​설정 또는 비교 및 ​​교환 액세스 모드에는 변수의 예상 값과 새 값에 대해 두 개의 후행 인수가 필요합니다.</target>
        </trans-unit>
        <trans-unit id="dfee108b90e259b3bdecf55d6cbeb3c5f9c291d0" translate="yes" xml:space="preserve">
          <source>Each action in a thread</source>
          <target state="translated">스레드의 각 동작</target>
        </trans-unit>
        <trans-unit id="ab945bb477e4c661cdb87606596d4fcdc3d5ffe3" translate="yes" xml:space="preserve">
          <source>Each actual implementation of this method should first check if there is a security manager installed. If there is, the method should call the security manager's &lt;a href=&quot;../../../java.base/java/lang/securitymanager#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission&lt;/code&gt;&lt;/a&gt; method to check &lt;code&gt;AWTPermission(&quot;accessClipboard&quot;)&lt;/code&gt;.</source>
          <target state="translated">이 방법의 각 실제 구현은 먼저 보안 관리자가 설치되어 있는지 확인해야합니다. 있는 경우 메서드는 보안 관리자의 &lt;a href=&quot;../../../java.base/java/lang/securitymanager#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 &lt;code&gt;AWTPermission(&quot;accessClipboard&quot;)&lt;/code&gt; 를 확인해야 합니다.</target>
        </trans-unit>
        <trans-unit id="85ade237cb92365873dddf9dbcccdd695df5481a" translate="yes" xml:space="preserve">
          <source>Each actual implementation of this method should first check if there is a security manager installed. If there is, the method should call the security manager's &lt;code&gt;checkPrintJobAccess&lt;/code&gt; method to ensure initiation of a print operation is allowed. If the default implementation of &lt;code&gt;checkPrintJobAccess&lt;/code&gt; is used (that is, that method is not overriden), then this results in a call to the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with a &lt;code&gt;RuntimePermission(&quot;queuePrintJob&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">이 방법의 각 실제 구현은 먼저 보안 관리자가 설치되어 있는지 확인해야합니다. 있는 경우 메서드는 보안 관리자의 &lt;code&gt;checkPrintJobAccess&lt;/code&gt; 메서드를 호출하여 인쇄 작업 시작이 허용되는지 확인해야합니다. &lt;code&gt;checkPrintJobAccess&lt;/code&gt; 의 기본 구현 이 사용되는 경우 (즉, 해당 메서드가 재정의되지 않음) 이로 인해 &lt;code&gt;RuntimePermission(&quot;queuePrintJob&quot;)&lt;/code&gt; 권한 이있는 보안 관리자의 &lt;code&gt;checkPermission&lt;/code&gt; 메서드가 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="cf57af6813d2347ad8cdb271130fc2cef65f053e" translate="yes" xml:space="preserve">
          <source>Each agent is passed its agent options via the &lt;code&gt;agentArgs&lt;/code&gt; parameter. The agent options are passed as a single string, any additional parsing should be performed by the agent itself.</source>
          <target state="translated">각 에이전트는 &lt;code&gt;agentArgs&lt;/code&gt; 매개 변수 를 통해 에이전트 옵션에 전달 됩니다. 에이전트 옵션은 단일 문자열로 전달되며 추가 구문 분석은 에이전트 자체에서 수행해야합니다.</target>
        </trans-unit>
        <trans-unit id="f22835e80cd2b663031fbea21b671773b92c12f8" translate="yes" xml:space="preserve">
          <source>Each attribute class implements one or more of these tagging subinterfaces to indicate where the attribute can be used in the API. If an attribute class implements multiple tagging subinterfaces, the attribute can be used in multiple contexts. For example, the media attribute can apply to one document in a print job as a &lt;code&gt;DocAttribute&lt;/code&gt; or to an entire print job as a &lt;code&gt;PrintRequestAttribute&lt;/code&gt;. Certain low-level attributes are never used on their own but are always aggregated into higher-level attributes. These low-level attribute classes only implement interface &lt;a href=&quot;attribute&quot;&gt;Attribute&lt;/a&gt;, not any of the tagging subinterfaces.</source>
          <target state="translated">각 속성 클래스는 이러한 태그 지정 하위 인터페이스 중 하나 이상을 구현하여 API에서 속성을 사용할 수있는 위치를 나타냅니다. 속성 클래스가 여러 태그 지정 서브 인터페이스를 구현하는 경우 속성을 여러 컨텍스트에서 사용할 수 있습니다. 예를 들어, 미디어 속성은 인쇄 작업에서 하나의 문서에 &lt;code&gt;DocAttribute&lt;/code&gt; 또는 전체 인쇄 작업에 &lt;code&gt;PrintRequestAttribute&lt;/code&gt; 로 적용될 수 있습니다 . 특정 하위 레벨 속성은 자체적으로 사용되지 않지만 항상 상위 레벨 속성으로 집계됩니다. 이러한 저수준 속성 클래스 는 태그 지정 하위 인터페이스가 아닌 인터페이스 &lt;a href=&quot;attribute&quot;&gt;Attribute&lt;/a&gt; 만 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="bdc4f018d78ba26ff9dc9ce389eb162a1bc736da" translate="yes" xml:space="preserve">
          <source>Each attribute class implements the &lt;code&gt;Attribute&lt;/code&gt; interface, either directly or indirectly, to mark it as a printing attribute. An attribute class that can appear in restricted attribute sets in certain contexts also implements one or more subinterfaces of &lt;code&gt;Attribute&lt;/code&gt;. Most attribute classes also extend the appropriate abstract syntax class to get the implementation. Consider the &lt;code&gt;Sides&lt;/code&gt; attribute class:</source>
          <target state="translated">각 속성 클래스는 &lt;code&gt;Attribute&lt;/code&gt; 인쇄 속성으로 표시하기 위해 직접 또는 간접적으로 속성 인터페이스를 구현 합니다. 특정 컨텍스트에서 제한된 속성 세트에 나타날 수있는 속성 클래스는 하나 이상의 &lt;code&gt;Attribute&lt;/code&gt; 서브 인터페이스를 구현 합니다. 대부분의 속성 클래스는 적절한 추상 구문 클래스를 확장하여 구현합니다. &lt;code&gt;Sides&lt;/code&gt; 속성 클래스를 고려하십시오 .</target>
        </trans-unit>
        <trans-unit id="25292b39101445c9a8a8fb254f4d59015aa2b12c" translate="yes" xml:space="preserve">
          <source>Each attribute key of the &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; will be of type &lt;code&gt;NumberFormat.Field&lt;/code&gt;, with the attribute value being the same as the attribute key. The prefix and the suffix parts of the returned iterator (if present) are represented by the attributes &lt;a href=&quot;numberformat.field#PREFIX&quot;&gt;&lt;code&gt;NumberFormat.Field.PREFIX&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;numberformat.field#SUFFIX&quot;&gt;&lt;code&gt;NumberFormat.Field.SUFFIX&lt;/code&gt;&lt;/a&gt; respectively.</source>
          <target state="translated">&lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 의 각 속성 키는 &lt;code&gt;NumberFormat.Field&lt;/code&gt; 유형 이며 속성 값은 속성 키와 동일합니다. 반환 된 반복기 (있는 경우)의 접두사 및 접미사 부분은 각각 &lt;a href=&quot;numberformat.field#PREFIX&quot;&gt; &lt;code&gt;NumberFormat.Field.PREFIX&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;numberformat.field#SUFFIX&quot;&gt; &lt;code&gt;NumberFormat.Field.SUFFIX&lt;/code&gt; &lt;/a&gt; 속성으로 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="1cf4053aa46bfb1c3e5e89ba0fab4d494a89a713" translate="yes" xml:space="preserve">
          <source>Each attribute key of the AttributedCharacterIterator will be of type &lt;code&gt;DateFormat.Field&lt;/code&gt;, with the corresponding attribute value being the same as the attribute key.</source>
          <target state="translated">AttributedCharacterIterator의 각 속성 키는 &lt;code&gt;DateFormat.Field&lt;/code&gt; 유형 이며 해당 속성 값은 속성 키와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="5713dda8efda83aaf04914a5b85a2f542a3aa4d2" translate="yes" xml:space="preserve">
          <source>Each attribute key of the AttributedCharacterIterator will be of type &lt;code&gt;Field&lt;/code&gt;. It is up to each &lt;code&gt;Format&lt;/code&gt; implementation to define what the legal values are for each attribute in the &lt;code&gt;AttributedCharacterIterator&lt;/code&gt;, but typically the attribute key is also used as the attribute value.</source>
          <target state="translated">AttributedCharacterIterator의 각 속성 키는 &lt;code&gt;Field&lt;/code&gt; 유형 입니다. &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 의 각 속성에 유효한 값을 정의하는 것은 각 &lt;code&gt;Format&lt;/code&gt; 구현에 달려 있지만 일반적으로 속성 키도 속성 값으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="170153981068eb46095e70fc8e45a9ab4b3358c2" translate="yes" xml:space="preserve">
          <source>Each attribute key of the AttributedCharacterIterator will be of type &lt;code&gt;NumberFormat.Field&lt;/code&gt;, with the attribute value being the same as the attribute key.</source>
          <target state="translated">AttributedCharacterIterator의 각 속성 키는 &lt;code&gt;NumberFormat.Field&lt;/code&gt; 유형 이며 속성 값은 속성 키와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="5ee2047cab7c974ace281bd2ac217169d97bf32a" translate="yes" xml:space="preserve">
          <source>Each byte read from the input stream is regarded as a character in the range &lt;code&gt;'\u0000'&lt;/code&gt; through &lt;code&gt;'\u00FF'&lt;/code&gt;. The character value is used to look up five possible attributes of the character:</source>
          <target state="translated">입력 스트림에서 읽은 각 바이트는 &lt;code&gt;'\u0000'&lt;/code&gt; ~ &lt;code&gt;'\u00FF'&lt;/code&gt; 범위의 문자로 간주됩니다 . 문자 값은 문자의 5 가지 가능한 속성을 찾는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c488eefdcedb528cd3d36bce554ca5f1fd5e0c56" translate="yes" xml:space="preserve">
          <source>Each call to &lt;a href=&quot;#readObject()&quot;&gt;&lt;code&gt;readObject&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#readUnshared()&quot;&gt;&lt;code&gt;readUnshared&lt;/code&gt;&lt;/a&gt; increases the depth by 1 before reading an object and decreases by 1 before returning normally or exceptionally. The depth starts at &lt;code&gt;1&lt;/code&gt; and increases for each nested object and decrements when each nested call returns. The count of references in the stream starts at &lt;code&gt;1&lt;/code&gt; and is increased before reading an object.</source>
          <target state="translated">&lt;a href=&quot;#readObject()&quot;&gt; &lt;code&gt;readObject&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#readUnshared()&quot;&gt; &lt;code&gt;readUnshared&lt;/code&gt; 를&lt;/a&gt; 호출 할 때마다 객체를 읽기 전에 깊이가 1 씩 증가하고 정상적으로 또는 예외적으로 반환되기 전에 1 씩 감소합니다. 깊이는 &lt;code&gt;1&lt;/code&gt; 에서 시작하여 각 중첩 된 개체에 대해 증가하고 각 중첩 된 호출이 반환 될 때 감소합니다. 스트림의 참조 수는 &lt;code&gt;1&lt;/code&gt; 부터 시작 하여 개체를 읽기 전에 증가합니다.</target>
        </trans-unit>
        <trans-unit id="b0d110f5467f34e4ed3151e5c56d7e84c466cde9" translate="yes" xml:space="preserve">
          <source>Each call to the &lt;a href=&quot;#getKeyStore()&quot;&gt;&lt;code&gt;getKeyStore()&lt;/code&gt;&lt;/a&gt; method on the returned builder will return a new KeyStore object of type &lt;code&gt;type&lt;/code&gt;. Its &lt;a href=&quot;keystore#load(java.security.KeyStore.LoadStoreParameter)&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; method is invoked using a &lt;code&gt;LoadStoreParameter&lt;/code&gt; that encapsulates &lt;code&gt;protection&lt;/code&gt;.</source>
          <target state="translated">리턴 된 빌더 에서 &lt;a href=&quot;#getKeyStore()&quot;&gt; &lt;code&gt;getKeyStore()&lt;/code&gt; &lt;/a&gt; 메소드에 대한 각 호출 은 type &lt;code&gt;type&lt;/code&gt; 의 새 KeyStore 오브젝트를 리턴합니다 . 그 &lt;a href=&quot;keystore#load(java.security.KeyStore.LoadStoreParameter)&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt; 메소드는 사용하여 호출 &lt;code&gt;LoadStoreParameter&lt;/code&gt; 캡슐화 &lt;code&gt;protection&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="565935ca5a7a8dff2c75d40a78fe34cbc9914ba0" translate="yes" xml:space="preserve">
          <source>Each call to the &lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt;&lt;code&gt;getKeyStore()&lt;/code&gt;&lt;/a&gt; method on the returned builder will return a new KeyStore object of type &lt;code&gt;type&lt;/code&gt;. Its &lt;a href=&quot;keystore#load-java.security.KeyStore.LoadStoreParameter-&quot;&gt;&lt;code&gt;load()&lt;/code&gt;&lt;/a&gt; method is invoked using a &lt;code&gt;LoadStoreParameter&lt;/code&gt; that encapsulates &lt;code&gt;protection&lt;/code&gt;.</source>
          <target state="translated">리턴 된 빌더 에서 &lt;a href=&quot;keystore.builder#getKeyStore--&quot;&gt; &lt;code&gt;getKeyStore()&lt;/code&gt; &lt;/a&gt; 메소드를 호출 할 때마다 type &lt;code&gt;type&lt;/code&gt; 의 새 KeyStore 오브젝트가 리턴됩니다 . 그 &lt;a href=&quot;keystore#load-java.security.KeyStore.LoadStoreParameter-&quot;&gt; &lt;code&gt;load()&lt;/code&gt; &lt;/a&gt; 메소드는 사용하여 호출 &lt;code&gt;LoadStoreParameter&lt;/code&gt; 캡슐화 &lt;code&gt;protection&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="32d094e5b72387ceb5cfa4ba8d22254eb005c99f" translate="yes" xml:space="preserve">
          <source>Each call to this method returns a fresh &lt;code&gt;PathIterator&lt;/code&gt; object that traverses the &lt;code&gt;Shape&lt;/code&gt; object geometry independently from any other &lt;code&gt;PathIterator&lt;/code&gt; objects in use at the same time.</source>
          <target state="translated">이 메서드에 대한 각 호출 은 동시에 사용중인 다른 &lt;code&gt;PathIterator&lt;/code&gt; 개체와 독립적으로 &lt;code&gt;Shape&lt;/code&gt; 개체 지오메트리 를 탐색 하는 새로운 &lt;code&gt;PathIterator&lt;/code&gt; 개체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7d3025ca4cca91ec1e1aa155dbcded76694b96ec" translate="yes" xml:space="preserve">
          <source>Each call to this method returns a fresh &lt;code&gt;PathIterator&lt;/code&gt; object that traverses the geometry of the &lt;code&gt;Shape&lt;/code&gt; object independently from any other &lt;code&gt;PathIterator&lt;/code&gt; objects in use at the same time.</source>
          <target state="translated">이 메서드에 대한 각 호출 은 동시에 사용중인 다른 &lt;code&gt;PathIterator&lt;/code&gt; 개체와 독립적으로 &lt;code&gt;Shape&lt;/code&gt; 개체 의 지오메트리를 탐색 하는 새로운 &lt;code&gt;PathIterator&lt;/code&gt; 개체를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="62a2b8eb8432d2bb19b62991410a2d367b2cdc90" translate="yes" xml:space="preserve">
          <source>Each category of events is handled by a corresponding listener: &lt;code&gt;NamespaceChangeListener&lt;/code&gt;, &lt;code&gt;ObjectChangeListener&lt;/code&gt;.</source>
          <target state="translated">각 이벤트 범주는 해당 리스너 ( &lt;code&gt;NamespaceChangeListener&lt;/code&gt; , &lt;code&gt;ObjectChangeListener&lt;/code&gt; )에 의해 처리됩니다 .</target>
        </trans-unit>
        <trans-unit id="415096700b0f811e1c654bf65b30052bf2302aff" translate="yes" xml:space="preserve">
          <source>Each chronology must define a chronology ID that is unique within the system. If the chronology represents a calendar system defined by the CLDR specification then the calendar type is the concatenation of the CLDR type and, if applicable, the CLDR variant,</source>
          <target state="translated">각 연대기는 시스템 내에서 고유 한 연대기 ID를 정의해야합니다. 연대기가 CLDR 사양에 의해 정의 된 캘린더 시스템을 나타내는 경우 캘린더 유형은 CLDR 유형과 해당되는 경우 CLDR 변형의 연결입니다.</target>
        </trans-unit>
        <trans-unit id="68e6cd0db506e8288cb2666f7ad6f004b81bca6f" translate="yes" xml:space="preserve">
          <source>Each chronology must define a chronology ID that is unique within the system. If the chronology represents a calendar system defined by the CLDR specification then the calendar type is the concatenation of the CLDR type and, if applicable, the CLDR variant.</source>
          <target state="translated">각 연대기는 시스템 내에서 고유 한 연대기 ID를 정의해야합니다. 연대기가 CLDR 사양에 의해 정의 된 달력 시스템을 나타내는 경우 달력 유형은 CLDR 유형 및 적용 가능한 경우 CLDR 변형의 연결입니다.</target>
        </trans-unit>
        <trans-unit id="ae2d6cc6afa42e50b69369bd84b9bdddfa4ee6b9" translate="yes" xml:space="preserve">
          <source>Each cipher suite in the &lt;code&gt;suites&lt;/code&gt; parameter must have been listed by getSupportedCipherSuites(), or the method will fail. Following a successful call to this method, only suites listed in the &lt;code&gt;suites&lt;/code&gt; parameter are enabled for use.</source>
          <target state="translated">&lt;code&gt;suites&lt;/code&gt; 매개 변수 의 각 암호 스위트는 getSupportedCipherSuites ()에 의해 나열되어야합니다. 그렇지 않으면 메소드가 실패합니다. 이 메소드를 성공적으로 호출하면 &lt;code&gt;suites&lt;/code&gt; 매개 변수에 나열된 스위트 만 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c9c3b451a2d3ee3d8844988245d012190589a542" translate="yes" xml:space="preserve">
          <source>Each class implementing &lt;code&gt;ScriptEngine&lt;/code&gt; has a corresponding factory that exposes metadata describing the engine class.</source>
          <target state="translated">&lt;code&gt;ScriptEngine&lt;/code&gt; 을 구현하는 각 클래스 에는 엔진 클래스를 설명하는 메타 데이터를 노출하는 해당 팩토리가 있습니다.</target>
        </trans-unit>
        <trans-unit id="0a013194633cd94a45ede10ade4370bf07ad0e44" translate="yes" xml:space="preserve">
          <source>Each class in the returned list was created by this class loader either by defining it directly or by delegation to another class loader (see JVMS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.3&quot;&gt;5.3&lt;/a&gt;).</source>
          <target state="translated">리턴 된 목록의 각 클래스는 직접 정의하거나 다른 클래스 로더에 대한 위임을 통해이 클래스 로더에 의해 작성되었습니다 (JVMS &lt;a href=&quot;https://docs.oracle.com/javase/specs/jvms/se15/html/jvms-5.html#jls-5.3&quot;&gt;5.3&lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="7a91d31af8f03563292751345aae397335abb093" translate="yes" xml:space="preserve">
          <source>Each class named by &lt;code&gt;markerInterfaces&lt;/code&gt; is subject to the same restrictions as &lt;code&gt;Rd&lt;/code&gt;, the return type of &lt;code&gt;invokedType&lt;/code&gt;, as described &lt;a href=&quot;lambdametafactory&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/a&gt;. Each &lt;code&gt;MethodType&lt;/code&gt; named by &lt;code&gt;bridges&lt;/code&gt; is subject to the same restrictions as &lt;code&gt;samMethodType&lt;/code&gt;, as described &lt;a href=&quot;lambdametafactory&quot;&gt;&lt;code&gt;above&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;markerInterfaces&lt;/code&gt; 로 명명 된 각 클래스 에는 &lt;a href=&quot;lambdametafactory&quot;&gt; &lt;code&gt;above&lt;/code&gt; &lt;/a&gt; 설명한 &lt;code&gt;invokedType&lt;/code&gt; 의 반환 유형 인 &lt;code&gt;Rd&lt;/code&gt; 와 동일한 제한이 적용됩니다 . &lt;code&gt;bridges&lt;/code&gt; 로 명명 된 각 &lt;code&gt;MethodType&lt;/code&gt; 에는 &lt;a href=&quot;lambdametafactory&quot;&gt; &lt;code&gt;above&lt;/code&gt; &lt;/a&gt; 설명한 대로 &lt;code&gt;samMethodType&lt;/code&gt; 과 동일한 제한이 적용됩니다 .</target>
        </trans-unit>
        <trans-unit id="184595c909d9e12155729e9aa086cc9b5b9fb380" translate="yes" xml:space="preserve">
          <source>Each clause is treated as a four-tuple of functions, called &quot;init&quot;, &quot;step&quot;, &quot;pred&quot;, and &quot;fini&quot;.</source>
          <target state="translated">각 절은 &quot;init&quot;, &quot;step&quot;, &quot;pred&quot;및 &quot;fini&quot;라고하는 4 개의 튜플 함수로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="7b9ac24a6e2ab6737b3e9c0084cab8135e7af1cd" translate="yes" xml:space="preserve">
          <source>Each cleaner operates independently, managing the pending cleaning actions and handling threading and termination when the cleaner is no longer in use. Registering an object reference and corresponding cleaning action returns a &lt;a href=&quot;cleaner.cleanable&quot;&gt;&lt;code&gt;Cleanable&lt;/code&gt;&lt;/a&gt;. The most efficient use is to explicitly invoke the &lt;a href=&quot;cleaner.cleanable#clean()&quot;&gt;&lt;code&gt;clean&lt;/code&gt;&lt;/a&gt; method when the object is closed or no longer needed. The cleaning action is a &lt;a href=&quot;../runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; to be invoked at most once when the object has become phantom reachable unless it has already been explicitly cleaned. Note that the cleaning action must not refer to the object being registered. If so, the object will not become phantom reachable and the cleaning action will not be invoked automatically.</source>
          <target state="translated">각 클리너는 독립적으로 작동하여 보류중인 청소 작업을 관리하고 클리너가 더 이상 사용되지 않을 때 스레딩 및 종료를 처리합니다. 개체 참조 및 해당 정리 작업을 등록하면 &lt;a href=&quot;cleaner.cleanable&quot;&gt; &lt;code&gt;Cleanable&lt;/code&gt; 이&lt;/a&gt; 반환 됩니다. 가장 효율적인 사용은 객체가 닫히거나 더 이상 필요하지 않을 때 &lt;a href=&quot;cleaner.cleanable#clean()&quot;&gt; &lt;code&gt;clean&lt;/code&gt; &lt;/a&gt; 메서드 를 명시 적으로 호출하는 것 입니다. 정리 작업은 이미 명시 적으로 정리되지 않은 경우 개체가 팬텀에 도달 할 수있게 될 때 최대 한 번 호출 되는 &lt;a href=&quot;../runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt; 입니다. 청소 작업은 등록중인 개체를 참조해서는 안됩니다. 그렇다면 개체는 팬텀에 도달 할 수 없으며 청소 작업이 자동으로 호출되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6d60b28ad1f9a5d1a9d51e8f7b9a52c84ed48aae" translate="yes" xml:space="preserve">
          <source>Each client is created by an instance of &lt;a href=&quot;jmxconnectorprovider&quot;&gt;&lt;code&gt;JMXConnectorProvider&lt;/code&gt;&lt;/a&gt;. This instance is found as follows. Suppose the given &lt;a href=&quot;jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt; looks like &lt;code&gt;&quot;service:jmx:&lt;em&gt;protocol&lt;/em&gt;:&lt;em&gt;remainder&lt;/em&gt;&quot;&lt;/code&gt;. Then the factory will attempt to find the appropriate &lt;a href=&quot;jmxconnectorprovider&quot;&gt;&lt;code&gt;JMXConnectorProvider&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt;. Each occurrence of the character &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; in &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; is replaced by &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt;, respectively.</source>
          <target state="translated">각 클라이언트는 &lt;a href=&quot;jmxconnectorprovider&quot;&gt; &lt;code&gt;JMXConnectorProvider&lt;/code&gt; &lt;/a&gt; 인스턴스에 의해 작성됩니다 . 이 인스턴스는 다음과 같습니다. 주어진 가정 &lt;a href=&quot;jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; &lt;/a&gt; 같은 외모 &lt;code&gt;&quot;service:jmx:&lt;em&gt;protocol&lt;/em&gt;:&lt;em&gt;remainder&lt;/em&gt;&quot;&lt;/code&gt; . 그런 다음 공장은 적절한 찾기 위해 시도합니다 &lt;a href=&quot;jmxconnectorprovider&quot;&gt; &lt;code&gt;JMXConnectorProvider&lt;/code&gt; &lt;/a&gt; 을위한 &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; . 각 문자의 발생 &lt;code&gt;+&lt;/code&gt; 또는 &lt;code&gt;-&lt;/code&gt; 의 &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; 로 대체됩니다 &lt;code&gt;.&lt;/code&gt; 또는 &lt;code&gt;_&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="422f83ece01fb48d8d51d8739208166443856a03" translate="yes" xml:space="preserve">
          <source>Each column description has the following columns:</source>
          <target state="translated">각 열 설명에는 다음 열이 있습니다.</target>
        </trans-unit>
        <trans-unit id="5a4a9b25133b5474decd08c11d66dbf1140352ad" translate="yes" xml:space="preserve">
          <source>Each component in the &lt;code&gt;parent&lt;/code&gt; container is reshaped to be the size of the container, minus space for surrounding insets, horizontal gaps, and vertical gaps.</source>
          <target state="translated">&lt;code&gt;parent&lt;/code&gt; 컨테이너의 각 구성 요소는 컨테이너의 크기로 재구성되고 주변 삽입, 수평 간격 및 수직 간격을위한 공간이 제외됩니다.</target>
        </trans-unit>
        <trans-unit id="dc81b358652b50a3ccd5fbf45dd13f2ad5691a0b" translate="yes" xml:space="preserve">
          <source>Each component managed by a &lt;code&gt;GridBagLayout&lt;/code&gt; is associated with an instance of &lt;a href=&quot;gridbagconstraints&quot;&gt;&lt;code&gt;GridBagConstraints&lt;/code&gt;&lt;/a&gt;. The constraints object specifies where a component's display area should be located on the grid and how the component should be positioned within its display area. In addition to its constraints object, the &lt;code&gt;GridBagLayout&lt;/code&gt; also considers each component's minimum and preferred sizes in order to determine a component's size.</source>
          <target state="translated">&lt;code&gt;GridBagLayout&lt;/code&gt; 에서 관리하는 각 구성 요소 는 &lt;a href=&quot;gridbagconstraints&quot;&gt; &lt;code&gt;GridBagConstraints&lt;/code&gt; &lt;/a&gt; 인스턴스와 연결됩니다 . constraints 객체는 구성 요소의 표시 영역이 그리드에서 배치되어야하는 위치와 구성 요소가 표시 영역 내에 배치되는 방법을 지정합니다. 제약 객체 외에도 &lt;code&gt;GridBagLayout&lt;/code&gt; 은 구성 요소의 크기를 결정하기 위해 각 구성 요소의 최소 및 기본 크기를 고려합니다.</target>
        </trans-unit>
        <trans-unit id="d27e800ca310edd19e81773b5637a62b55a3da9e" translate="yes" xml:space="preserve">
          <source>Each concrete &lt;code&gt;XMLSignatureFactory&lt;/code&gt; or &lt;code&gt;KeyInfoFactory&lt;/code&gt; implementation supports a specific XML mechanism type that identifies the XML processing mechanism that an implementation uses internally to parse and generate XML signature and KeyInfo structures.</source>
          <target state="translated">각 구체적인 &lt;code&gt;XMLSignatureFactory&lt;/code&gt; 또는 &lt;code&gt;KeyInfoFactory&lt;/code&gt; 구현은 구현이 내부적으로 XML 서명 및 KeyInfo 구조를 구문 분석하고 생성하는 데 사용하는 XML 처리 메커니즘을 식별하는 특정 XML 메커니즘 유형을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="8000ceb2cb5760f446a63dd9dff4d11a4e8ec2d3" translate="yes" xml:space="preserve">
          <source>Each configuration file should contain a list of fully-qualified class names, one per line. Space and tab characters surrounding each name, as well as blank lines, are ignored. The comment character is &lt;code&gt;'#'&lt;/code&gt; (&lt;code&gt;0x23&lt;/code&gt;); on each line all characters following the first comment character are ignored. The file must be encoded in UTF-8.</source>
          <target state="translated">각 구성 파일에는 정규화 된 클래스 이름 목록이 한 줄에 하나씩 있어야합니다. 빈 줄뿐만 아니라 각 이름을 둘러싼 공백과 탭 문자는 무시됩니다. 주석 문자는 &lt;code&gt;'#'&lt;/code&gt; ( &lt;code&gt;0x23&lt;/code&gt; )입니다. 각 줄에서 첫 번째 주석 문자 다음의 모든 문자는 무시됩니다. 파일은 UTF-8로 인코딩되어야합니다.</target>
        </trans-unit>
        <trans-unit id="782519cfed22f6e5630e1de515f995c9b7d02625" translate="yes" xml:space="preserve">
          <source>Each connector server is created by an instance of &lt;a href=&quot;jmxconnectorserverprovider&quot;&gt;&lt;code&gt;JMXConnectorServerProvider&lt;/code&gt;&lt;/a&gt;. This instance is found as follows. Suppose the given &lt;a href=&quot;jmxserviceurl&quot;&gt;&lt;code&gt;JMXServiceURL&lt;/code&gt;&lt;/a&gt; looks like &lt;code&gt;&quot;service:jmx:&lt;em&gt;protocol&lt;/em&gt;:&lt;em&gt;remainder&lt;/em&gt;&quot;&lt;/code&gt;. Then the factory will attempt to find the appropriate &lt;a href=&quot;jmxconnectorserverprovider&quot;&gt;&lt;code&gt;JMXConnectorServerProvider&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt;. Each occurrence of the character &lt;code&gt;+&lt;/code&gt; or &lt;code&gt;-&lt;/code&gt; in &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; is replaced by &lt;code&gt;.&lt;/code&gt; or &lt;code&gt;_&lt;/code&gt;, respectively.</source>
          <target state="translated">각 커넥터 서버는 &lt;a href=&quot;jmxconnectorserverprovider&quot;&gt; &lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; &lt;/a&gt; 인스턴스에 의해 작성됩니다 . 이 인스턴스는 다음과 같습니다. 주어진 &lt;a href=&quot;jmxserviceurl&quot;&gt; &lt;code&gt;JMXServiceURL&lt;/code&gt; &lt;/a&gt; 이 &lt;code&gt;&quot;service:jmx:&lt;em&gt;protocol&lt;/em&gt;:&lt;em&gt;remainder&lt;/em&gt;&quot;&lt;/code&gt; 와 같다고 가정 해 봅시다 . 그런 다음 공장은 적절한 찾기 위해 시도합니다 &lt;a href=&quot;jmxconnectorserverprovider&quot;&gt; &lt;code&gt;JMXConnectorServerProvider&lt;/code&gt; &lt;/a&gt; 을위한 &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; . 각 문자의 발생 &lt;code&gt;+&lt;/code&gt; 또는 &lt;code&gt;-&lt;/code&gt; 의 &lt;code&gt;&lt;em&gt;protocol&lt;/em&gt;&lt;/code&gt; 로 대체됩니다 &lt;code&gt;.&lt;/code&gt; 또는 &lt;code&gt;_&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6541e8c9ab7eed02383f5cde11342bacc7556ee4" translate="yes" xml:space="preserve">
          <source>Each constraint, represented by a &lt;code&gt;Spring&lt;/code&gt; object, controls the vertical or horizontal distance between two component edges. The edges can belong to any child of the container, or to the container itself. For example, the allowable width of a component can be expressed using a constraint that controls the distance between the west (left) and east (right) edges of the component. The allowable &lt;em&gt;y&lt;/em&gt; coordinates for a component can be expressed by constraining the distance between the north (top) edge of the component and the north edge of its container.</source>
          <target state="translated">&lt;code&gt;Spring&lt;/code&gt; 객체로 표시되는 각 제약 조건 은 두 구성 요소 가장자리 사이의 수직 또는 수평 거리를 제어합니다. 가장자리는 컨테이너의 자식 또는 컨테이너 자체에 속할 수 있습니다. 예를 들어, 컴포넌트의 허용 가능한 너비는 컴포넌트의 서쪽 (왼쪽)과 동쪽 (오른쪽) 모서리 사이의 거리를 제어하는 ​​구속 조건을 사용하여 표현할 수 있습니다. 컴포넌트 의 허용 가능한 &lt;em&gt;y&lt;/em&gt; 좌표는 컴포넌트의 북쪽 (상단) 가장자리와 컨테이너의 북쪽 가장자리 사이의 거리를 제한하여 표현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="57bc38c8f6c57bd6e23990238c181815f876d6f0" translate="yes" xml:space="preserve">
          <source>Each customizer should have a null constructor.</source>
          <target state="translated">각 커 스터 마이저에는 null 생성자가 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="47ecc95f5a6c3bf69dcc6fd7a4ebe68db660d248" translate="yes" xml:space="preserve">
          <source>Each customizer should inherit from the java.awt.Component class so it can be instantiated inside an AWT dialog or panel.</source>
          <target state="translated">각 커 스터 마이 저는 java.awt.Component 클래스에서 상속 받아 AWT 대화 상자 나 패널 내에서 인스턴스화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d01b68dad2676514cbe7be058ccbd40bc1155394" translate="yes" xml:space="preserve">
          <source>Each date time instance is composed of fields that are conveniently made available by the APIs. For lower level access to the fields refer to the &lt;code&gt;java.time.temporal&lt;/code&gt; package. Each class includes support for printing and parsing all manner of dates and times. Refer to the &lt;code&gt;java.time.format&lt;/code&gt; package for customization options.</source>
          <target state="translated">각 날짜 시간 인스턴스는 API에서 편리하게 사용할 수있는 필드로 구성됩니다. 필드에 대한 하위 레벨 액세스는 &lt;code&gt;java.time.temporal&lt;/code&gt; 패키지를 참조하십시오 . 각 수업은 모든 방식의 날짜와 시간을 인쇄하고 파싱하는 기능을 지원합니다. 사용자 정의 옵션 에 대해서는 &lt;code&gt;java.time.format&lt;/code&gt; 패키지를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="a11cc35a89643391e6013e902ac7edeaaeae3d1a" translate="yes" xml:space="preserve">
          <source>Each digit character</source>
          <target state="translated">각 자리 문자</target>
        </trans-unit>
        <trans-unit id="439734a3da9088e6a6c7a455014e759a9ff0721d" translate="yes" xml:space="preserve">
          <source>Each driver should supply a class that implements the Driver interface.</source>
          <target state="translated">각 드라이버는 Driver 인터페이스를 구현하는 클래스를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="4b39eb0020b55f7217398b3c88064ccde0bd175b" translate="yes" xml:space="preserve">
          <source>Each dynamically-computed constant statically specifies its own bootstrap method as a constant pool reference. The constant pool reference also specifies the constant's name and field type descriptor, just like &lt;code&gt;getstatic&lt;/code&gt; and the other field reference instructions. (Roughly speaking, a dynamically-computed constant is to a dynamically-computed call site as a &lt;code&gt;CONSTANT_Fieldref&lt;/code&gt; is to a &lt;code&gt;CONSTANT_Methodref&lt;/code&gt;.)</source>
          <target state="translated">동적으로 계산 된 각 상수는 자체 부트 스트랩 메서드를 상수 풀 참조로 정적으로 지정합니다. 상수 풀 참조는 &lt;code&gt;getstatic&lt;/code&gt; 및 기타 필드 참조 명령어와 마찬가지로 상수의 이름과 필드 유형 설명자를 지정합니다 . (a와 거의 말하면, 동적으로 계산 된 상수는 동적으로 계산 된 전화 사이트이다 &lt;code&gt;CONSTANT_Fieldref&lt;/code&gt; 는 (A)에있다 &lt;code&gt;CONSTANT_Methodref&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="e111bd4bc65f1905bd4e7e655775cb3ed0d50729" translate="yes" xml:space="preserve">
          <source>Each element in the array that is returned is an &lt;code&gt;Object&lt;/code&gt; instance that contains the values of the parameters supplied to a setter method. The order of the elements is determined by the value supplied for</source>
          <target state="translated">반환되는 배열의 각 요소 는 setter 메서드에 제공된 매개 변수의 값을 포함 하는 &lt;code&gt;Object&lt;/code&gt; 인스턴스입니다. 요소의 순서는 다음에 제공된 값에 의해 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="e36a7868cff2665d84aa03b66df21807197680ce" translate="yes" xml:space="preserve">
          <source>Each element in this array corresponds to an observed object in the vector. It contains a bit mask of the flags &lt;a href=&quot;#OBSERVED_OBJECT_ERROR_NOTIFIED&quot;&gt;&lt;code&gt;OBSERVED_OBJECT_ERROR_NOTIFIED&lt;/code&gt;&lt;/a&gt; etc, indicating whether the corresponding notification has already been sent for the MBean being monitored.</source>
          <target state="translated">이 배열의 각 요소는 벡터에서 관찰 된 객체에 해당합니다. 여기에는 &lt;a href=&quot;#OBSERVED_OBJECT_ERROR_NOTIFIED&quot;&gt; &lt;code&gt;OBSERVED_OBJECT_ERROR_NOTIFIED&lt;/code&gt; &lt;/a&gt; 등 플래그의 비트 마스크가 포함되어 있으며 , 모니터링중인 MBean에 대해 해당 알림이 이미 전송되었는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="6d1d6f4796b80a8ad203ea5c5b68aef2c7309166" translate="yes" xml:space="preserve">
          <source>Each element in this array corresponds to an observed object in the vector. It contains a bit mask of the flags &lt;a href=&quot;monitor#OBSERVED_OBJECT_ERROR_NOTIFIED&quot;&gt;&lt;code&gt;OBSERVED_OBJECT_ERROR_NOTIFIED&lt;/code&gt;&lt;/a&gt; etc, indicating whether the corresponding notification has already been sent for the MBean being monitored.</source>
          <target state="translated">이 배열의 각 요소는 벡터에서 관찰 된 객체에 해당합니다. 여기에는 플래그 &lt;a href=&quot;monitor#OBSERVED_OBJECT_ERROR_NOTIFIED&quot;&gt; &lt;code&gt;OBSERVED_OBJECT_ERROR_NOTIFIED&lt;/code&gt; &lt;/a&gt; 등 의 비트 마스크가 포함되어 있으며 , 모니터링중인 MBean에 해당 알림이 이미 전송되었는지 여부를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3f87dde92d31d6810a3ee06f461b787634d6bd98" translate="yes" xml:space="preserve">
          <source>Each element is a &lt;code&gt;CompositeData&lt;/code&gt; representing StackTraceElement containing the following attributes:</source>
          <target state="translated">각 요소는 다음 속성을 포함하는 StackTraceElement를 나타내는 &lt;code&gt;CompositeData&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="c9b486ced08a371da2db28809fa38c445c9f90c5" translate="yes" xml:space="preserve">
          <source>Each element of the array should be a set of three &lt;code&gt;Strings&lt;/code&gt; containing the name, the type, and a description. For example:</source>
          <target state="translated">배열의 각 요소는 이름, 유형 및 설명을 포함하는 세 개의 &lt;code&gt;Strings&lt;/code&gt; 세트 여야합니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="5bbd4a068f3d140129d4dfe51f624b125fc9ba6e" translate="yes" xml:space="preserve">
          <source>Each element of the array should be a set of three strings containing the name, the type, and a description. For example:</source>
          <target state="translated">배열의 각 요소는 이름, 유형 및 설명을 포함하는 세 개의 문자열 세트 여야합니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="1f6bf4d0adf1bf11f2e3b8671e73113281627f53" translate="yes" xml:space="preserve">
          <source>Each element of the set is a &lt;code&gt;String&lt;/code&gt; representing the Object Identifier (OID) of the X.509 extension that is supported. The OID is represented by a set of nonnegative integers separated by periods.</source>
          <target state="translated">세트의 각 요소 는 지원되는 X.509 확장의 OID (Object Identifier)를 나타내는 &lt;code&gt;String&lt;/code&gt; 입니다. OID는 마침표로 구분 된 음이 아닌 정수 세트로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="0ccad0c61ca3cfcebb99a67ead0c1161822d4188" translate="yes" xml:space="preserve">
          <source>Each element of this queue is a &lt;a href=&quot;scheduledfuture&quot;&gt;&lt;code&gt;ScheduledFuture&lt;/code&gt;&lt;/a&gt;. For tasks submitted via one of the &lt;code&gt;schedule&lt;/code&gt; methods, the element will be identical to the returned &lt;code&gt;ScheduledFuture&lt;/code&gt;. For tasks submitted using &lt;a href=&quot;#execute(java.lang.Runnable)&quot;&gt;&lt;code&gt;execute&lt;/code&gt;&lt;/a&gt;, the element will be a zero-delay &lt;code&gt;ScheduledFuture&lt;/code&gt;.</source>
          <target state="translated">이 큐의 각 요소는 &lt;a href=&quot;scheduledfuture&quot;&gt; &lt;code&gt;ScheduledFuture&lt;/code&gt; &lt;/a&gt; 입니다. &lt;code&gt;schedule&lt;/code&gt; 메서드 중 하나를 통해 제출 된 작업의 경우 요소는 반환 된 &lt;code&gt;ScheduledFuture&lt;/code&gt; 와 동일합니다 . &lt;a href=&quot;#execute(java.lang.Runnable)&quot;&gt; &lt;code&gt;execute&lt;/code&gt; 를&lt;/a&gt; 사용하여 제출 된 작업의 경우 요소는 지연이없는 &lt;code&gt;ScheduledFuture&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="2dac62c065c1000a9a51697be436335502f33e84" translate="yes" xml:space="preserve">
          <source>Each element represents a method call.</source>
          <target state="translated">각 요소는 메소드 호출을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d19220aee7d71656e00ce6276767f27bb53aaaf2" translate="yes" xml:space="preserve">
          <source>Each entry in a keystore is identified by an &quot;alias&quot; string. In the case of private keys and their associated certificate chains, these strings distinguish among the different ways in which the entity may authenticate itself. For example, the entity may authenticate itself using different certificate authorities, or using different public key algorithms.</source>
          <target state="translated">키 저장소의 각 항목은 &quot;별칭&quot;문자열로 식별됩니다. 개인 키 및 관련 인증서 체인의 경우 이러한 문자열은 엔터티가 자신을 인증 할 수있는 여러 가지 방법을 구분합니다. 예를 들어, 엔티티는 다른 인증 기관을 사용하거나 다른 공개 키 알고리즘을 사용하여 자체 인증 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="088d514368fa29cc6091cc91bcf119d3b0a2d2d3" translate="yes" xml:space="preserve">
          <source>Each entry in the &lt;code&gt;Configuration&lt;/code&gt; is indexed via an application name,</source>
          <target state="translated">&lt;code&gt;Configuration&lt;/code&gt; 각 항목 은 응용 프로그램 이름을 통해 색인화됩니다.</target>
        </trans-unit>
        <trans-unit id="da1f5b3e98b650d15b6fcc93e098064f4007429c" translate="yes" xml:space="preserve">
          <source>Each entry in the &lt;code&gt;Policy&lt;/code&gt; is represented as a &lt;b&gt;&lt;i&gt;grant&lt;/i&gt;&lt;/b&gt; entry. Each &lt;b&gt;&lt;i&gt;grant&lt;/i&gt;&lt;/b&gt; entry specifies a codebase, code signers, and Principals triplet, as well as the Permissions granted to that triplet.</source>
          <target state="translated">&lt;code&gt;Policy&lt;/code&gt; 각 항목은 &lt;b&gt;&lt;i&gt;보조금&lt;/i&gt;&lt;/b&gt; 항목으로 표시됩니다 . 각 &lt;b&gt;&lt;i&gt;부여&lt;/i&gt;&lt;/b&gt; 항목은 코드베이스, 코드 서명자 및 사용자 삼중 항과 해당 삼중 항에 부여 된 권한을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="53bca0a226db60f720e5b307655be1aef2e67c09" translate="yes" xml:space="preserve">
          <source>Each entry in the &lt;code&gt;Vector&lt;/code&gt; represents an &lt;code&gt;AccessibleRelation&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Vector&lt;/code&gt; 의 각 항목 은 &lt;code&gt;AccessibleRelation&lt;/code&gt; 을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="1b7361658c24a672ba18ff02cf80be317972d726" translate="yes" xml:space="preserve">
          <source>Each entry in the &lt;code&gt;Vector&lt;/code&gt; represents an &lt;code&gt;AccessibleState&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Vector&lt;/code&gt; 의 각 항목 은 &lt;code&gt;AccessibleState&lt;/code&gt; 를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="c165313a4b93b70e64ec0cc44e00d76a511e23f5" translate="yes" xml:space="preserve">
          <source>Each extension contains an object identifier, a criticality setting indicating whether it is a critical or a non-critical extension, and an ASN.1 DER-encoded value. Its ASN.1 definition is:</source>
          <target state="translated">각 확장에는 개체 식별자, 중요 확장인지 중요하지 않은 확장인지를 나타내는 중요도 설정 및 ASN.1 DER 인코딩 값이 포함됩니다. ASN.1 정의는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2550370ed13c7f4ac08a6a67450eb8b55df82cad" translate="yes" xml:space="preserve">
          <source>Each extension contains an object identifier, a criticality setting indicating whether it is a critical or a non-critical extension, and and an ASN.1 DER-encoded value. Its ASN.1 definition is:</source>
          <target state="translated">각 확장에는 개체 식별자, 중요 확장인지 아닌지를 나타내는 중요도 설정 및 ASN.1 DER 인코딩 값이 포함됩니다. ASN.1 정의는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="743a4bde1183aedc0cbc8935c3fa92ce0cd4f60b" translate="yes" xml:space="preserve">
          <source>Each extension in a certificate/CRL may be designated as critical or non-critical. A certificate/CRL-using system (an application validating a certificate/CRL) must reject the certificate/CRL if it encounters a critical extension it does not recognize. A non-critical extension may be ignored if it is not recognized.</source>
          <target state="translated">인증서 / CRL의 각 확장은 중요 또는 중요하지 않은 것으로 지정 될 수 있습니다. 인증서 / CRL 사용 시스템 (인증서 / CRL을 검증하는 응용 프로그램)은 인식 할 수없는 중요한 확장명을 발견하면 인증서 / CRL을 거부해야합니다. 중요하지 않은 확장은 인식되지 않으면 무시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b7069adeee248e2073c9ff4ae57f7c6095f03187" translate="yes" xml:space="preserve">
          <source>Each file must be separated from the one that follows it by a comma (,).</source>
          <target state="translated">각 파일은 쉼표 (,)로 뒤에 오는 파일과 분리되어야합니다.</target>
        </trans-unit>
        <trans-unit id="d0338ed9d4b01109c0fece6add20ad8441fea588" translate="yes" xml:space="preserve">
          <source>Each foreign key column description has the following columns:</source>
          <target state="translated">각 외래 키 열 설명에는 다음 열이 있습니다.</target>
        </trans-unit>
        <trans-unit id="8f872d04602ba76f68dd64ae07977d0d41c0dbe8" translate="yes" xml:space="preserve">
          <source>Each function description has the following columns:</source>
          <target state="translated">각 기능 설명에는 다음 열이 있습니다.</target>
        </trans-unit>
        <trans-unit id="d0ae06bf9012c5a5614a45f104ab7638a0ad8399" translate="yes" xml:space="preserve">
          <source>Each given argument object must match the corresponding bound parameter type. If a bound parameter type is a primitive, the argument object must be a wrapper, and will be unboxed to produce the primitive value.</source>
          <target state="translated">주어진 각 인수 객체는 해당 바운드 매개 변수 유형과 일치해야합니다. 바인드 된 매개 변수 유형이 기본 유형 인 경우 인수 오브젝트는 랩퍼 여야하며 기본 값을 생성하기 위해 개봉됩니다.</target>
        </trans-unit>
        <trans-unit id="6e0078f8ee6b18d2ffdb5e7493ab727438f14546" translate="yes" xml:space="preserve">
          <source>Each group defines its own format for the region ID it provides. The TZDB group defines IDs such as 'Europe/London' or 'America/New_York'. TZDB IDs take precedence over other groups.</source>
          <target state="translated">각 그룹은 제공하는 지역 ID에 대해 고유 한 형식을 정의합니다. TZDB 그룹은 '유럽 / 런던'또는 'America / New_York'와 같은 ID를 정의합니다. TZDB ID는 다른 그룹보다 우선합니다.</target>
        </trans-unit>
        <trans-unit id="566ce783f6648eb3aa4f4bfbca16e6511aff8175" translate="yes" xml:space="preserve">
          <source>Each group may contain any number of elements, where an element is a &lt;code&gt;Group&lt;/code&gt;, &lt;code&gt;Component&lt;/code&gt;, or gap. A gap can be thought of as an invisible component with a minimum, preferred and maximum size. In addition &lt;code&gt;GroupLayout&lt;/code&gt; supports a preferred gap, whose value comes from &lt;code&gt;LayoutStyle&lt;/code&gt;.</source>
          <target state="translated">각 그룹은 여러 요소를 포함 할 수 있으며 요소는 &lt;code&gt;Group&lt;/code&gt; , &lt;code&gt;Component&lt;/code&gt; 또는 간격입니다. 간격은 최소, 기본 및 최대 크기를 가진 보이지 않는 구성 요소로 생각할 수 있습니다. 또한 &lt;code&gt;GroupLayout&lt;/code&gt; 은 값이 &lt;code&gt;LayoutStyle&lt;/code&gt; 에서 오는 선호 간격을 지원합니다 .</target>
        </trans-unit>
        <trans-unit id="65bc89a3ea9cd46de7285bc3bf8c2cc87bcd59c1" translate="yes" xml:space="preserve">
          <source>Each implementation of a &lt;code&gt;Processor&lt;/code&gt; must provide a public no-argument constructor to be used by tools to instantiate the processor. The tool infrastructure will interact with classes implementing this interface as follows:</source>
          <target state="translated">&lt;code&gt;Processor&lt;/code&gt; 의 각 구현은 도구를 사용하여 프로세서를 인스턴스화하기 위해 인수없는 공용 생성자를 제공해야합니다. 도구 인프라는 다음과 같이이 인터페이스를 구현하는 클래스와 상호 작용합니다.</target>
        </trans-unit>
        <trans-unit id="b3d61cb2b50775d88567640dd3eeedd8e808ed52" translate="yes" xml:space="preserve">
          <source>Each implementation of a taglet must provide a public no-argument constructor to be used by doclets to instantiate the taglet. A doclet will interact with classes implementing this interface as follows:</source>
          <target state="translated">taglet의 각 구현은 taglet을 인스턴스화하기 위해 doclet에서 사용할 인수없는 공개 생성자를 제공해야합니다. doclet은 다음과 같이이 인터페이스를 구현하는 클래스와 상호 작용합니다.</target>
        </trans-unit>
        <trans-unit id="29634714a659479b7ec0af8659b88d3fa2238376" translate="yes" xml:space="preserve">
          <source>Each index column description has the following columns:</source>
          <target state="translated">각 색인 열 설명에는 다음 열이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e95fc2d8685498e5f670ee443a7fa690844d41a" translate="yes" xml:space="preserve">
          <source>Each init function is executed in clause order (passing the external arguments &lt;code&gt;(a...)&lt;/code&gt;) and the non-&lt;code&gt;void&lt;/code&gt; values are saved (as the iteration variables &lt;code&gt;(v...)&lt;/code&gt;) into locals. These locals will be loop varying (unless their steps behave as identity functions, as noted above).</source>
          <target state="translated">각 init 함수는 절 순서로 실행되고 (외부 인수 &lt;code&gt;(a...)&lt;/code&gt; ) &lt;code&gt;void&lt;/code&gt; 가 아닌 값은 (반복 변수 &lt;code&gt;(v...)&lt;/code&gt; ) 로컬에 저장됩니다. 이러한 로컬은 루프가 다양합니다 (위에서 언급 한대로 해당 단계가 ID 함수로 작동하지 않는 한).</target>
        </trans-unit>
        <trans-unit id="a9f7a4f3a9ef8aebcbb757e602adec74fd060770" translate="yes" xml:space="preserve">
          <source>Each instance of &lt;code&gt;KeyInfoFactory&lt;/code&gt; supports a specific XML mechanism type. To create a &lt;code&gt;KeyInfoFactory&lt;/code&gt;, call one of the static &lt;a href=&quot;#getInstance(java.lang.String)&quot;&gt;&lt;code&gt;getInstance&lt;/code&gt;&lt;/a&gt; methods, passing in the XML mechanism type desired, for example:</source>
          <target state="translated">&lt;code&gt;KeyInfoFactory&lt;/code&gt; 의 각 인스턴스는 특정 XML 메커니즘 유형을 지원합니다. &lt;code&gt;KeyInfoFactory&lt;/code&gt; 를 만들려면 정적 &lt;a href=&quot;#getInstance(java.lang.String)&quot;&gt; &lt;code&gt;getInstance&lt;/code&gt; &lt;/a&gt; 메서드 중 하나를 호출하여 원하는 XML 메커니즘 유형을 전달합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d4d02ace1339b3e52fd1dc198e7643c01a5d45bc" translate="yes" xml:space="preserve">
          <source>Each instance of &lt;code&gt;TransformService&lt;/code&gt; supports a specific transform or canonicalization algorithm and XML mechanism type. To create a &lt;code&gt;TransformService&lt;/code&gt;, call one of the static &lt;a href=&quot;#getInstance(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;getInstance&lt;/code&gt;&lt;/a&gt; methods, passing in the algorithm URI and XML mechanism type desired, for example:</source>
          <target state="translated">&lt;code&gt;TransformService&lt;/code&gt; 의 각 인스턴스는 특정 변환 또는 정규화 알고리즘과 XML 메커니즘 유형을 지원합니다. &lt;code&gt;TransformService&lt;/code&gt; 를 만들려면 정적 &lt;a href=&quot;#getInstance(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;getInstance&lt;/code&gt; &lt;/a&gt; 메서드 중 하나를 호출하여 원하는 알고리즘 URI 및 XML 메커니즘 유형을 전달합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6efc2154d2ce87f52e8e84f2297faaa3d77c2732" translate="yes" xml:space="preserve">
          <source>Each instance of &lt;code&gt;XMLSignatureFactory&lt;/code&gt; supports a specific XML mechanism type. To create an &lt;code&gt;XMLSignatureFactory&lt;/code&gt;, call one of the static &lt;a href=&quot;#getInstance(java.lang.String)&quot;&gt;&lt;code&gt;getInstance&lt;/code&gt;&lt;/a&gt; methods, passing in the XML mechanism type desired, for example:</source>
          <target state="translated">&lt;code&gt;XMLSignatureFactory&lt;/code&gt; 의 각 인스턴스는 특정 XML 메커니즘 유형을 지원합니다. &lt;code&gt;XMLSignatureFactory&lt;/code&gt; 를 만들려면 정적 &lt;a href=&quot;#getInstance(java.lang.String)&quot;&gt; &lt;code&gt;getInstance&lt;/code&gt; &lt;/a&gt; 메서드 중 하나를 호출하여 원하는 XML 메커니즘 유형을 전달합니다. 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c7f5cca9312a7fb6da75596d83e4b5d9c805297a" translate="yes" xml:space="preserve">
          <source>Each invocation of a write() method causes the encoding converter to be invoked on the given character(s). The resulting bytes are accumulated in a buffer before being written to the underlying output stream. Note that the characters passed to the write() methods are not buffered.</source>
          <target state="translated">write () 메서드를 호출 할 때마다 인코딩 변환기가 지정된 문자에 대해 호출됩니다. 결과 바이트는 기본 출력 스트림에 기록되기 전에 버퍼에 누적됩니다. write () 메서드에 전달 된 문자는 버퍼링되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a3c045647fbfd21ec0428affc10628c1e56392c0" translate="yes" xml:space="preserve">
          <source>Each invocation of a write() method causes the encoding converter to be invoked on the given character(s). The resulting bytes are accumulated in a buffer before being written to the underlying output stream. The size of this buffer may be specified, but by default it is large enough for most purposes. Note that the characters passed to the write() methods are not buffered.</source>
          <target state="translated">write () 메소드를 호출 할 때마다 주어진 문자에서 인코딩 변환기가 호출됩니다. 결과 바이트는 기본 출력 스트림에 기록되기 전에 버퍼에 누적됩니다. 이 버퍼의 크기는 지정 될 수 있지만 기본적으로 대부분의 목적에 충분한 크기입니다. write () 메소드에 전달 된 문자는 버퍼링되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5fe2076d3d2b08d5f4414c4cdde943dd467b1a57" translate="yes" xml:space="preserve">
          <source>Each invocation of one of an InputStreamReader's read() methods may cause one or more bytes to be read from the underlying byte-input stream. To enable the efficient conversion of bytes to characters, more bytes may be read ahead from the underlying stream than are necessary to satisfy the current read operation.</source>
          <target state="translated">InputStreamReader의 read () 메소드 중 하나를 호출 할 때마다 기본 바이트 입력 스트림에서 하나 이상의 바이트를 읽을 수 있습니다. 바이트를 문자로 효율적으로 변환 할 수 있도록하려면 현재 읽기 작업을 충족하는 데 필요한 것보다 기본 스트림에서 더 많은 바이트를 미리 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2119c8c491bd8aeb2b71348eada150139ffea000" translate="yes" xml:space="preserve">
          <source>Each invocation of the &lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method will decode as many bytes as possible from the input buffer, writing the resulting characters to the output buffer. The &lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method returns when more input is required, when there is not enough room in the output buffer, or when a decoding error has occurred. In each case a &lt;a href=&quot;coderresult&quot;&gt;&lt;code&gt;CoderResult&lt;/code&gt;&lt;/a&gt; object is returned to describe the reason for termination. An invoker can examine this object and fill the input buffer, flush the output buffer, or attempt to recover from a decoding error, as appropriate, and try again.</source>
          <target state="translated">&lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 메서드를 호출 할 때마다 입력 버퍼에서 가능한 한 많은 바이트를 디코딩하여 결과 문자를 출력 버퍼에 씁니다. &lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 출력 버퍼에 충분한 공간이 없을 때, 또는 디코딩 에러가 발생한 경우에있어서의 복귀가보다 입력이 요구되는 경우. 각각의 경우에 &lt;a href=&quot;coderresult&quot;&gt; &lt;code&gt;CoderResult&lt;/code&gt; &lt;/a&gt; 객체가 반환되어 종료 이유를 설명합니다. 호출자는이 개체를 검사하고 입력 버퍼를 채우거나 출력 버퍼를 플러시하거나 디코딩 오류에서 적절하게 복구를 시도하고 다시 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8313be77f4b58b1cf695df8a48f3380a7a774eb2" translate="yes" xml:space="preserve">
          <source>Each invocation of the &lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method will encode as many characters as possible from the input buffer, writing the resulting bytes to the output buffer. The &lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method returns when more input is required, when there is not enough room in the output buffer, or when an encoding error has occurred. In each case a &lt;a href=&quot;coderresult&quot;&gt;&lt;code&gt;CoderResult&lt;/code&gt;&lt;/a&gt; object is returned to describe the reason for termination. An invoker can examine this object and fill the input buffer, flush the output buffer, or attempt to recover from an encoding error, as appropriate, and try again.</source>
          <target state="translated">&lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 메소드를 호출 할 때마다 입력 버퍼에서 가능한 한 많은 문자를 인코딩하여 결과 바이트를 출력 버퍼에 기록합니다. &lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 출력 버퍼에 충분한 공간이 없을 때, 또는 부호화 에러가 발생한 경우에있어서의 복귀가보다 입력이 요구되는 경우. 각각의 경우에 &lt;a href=&quot;coderresult&quot;&gt; &lt;code&gt;CoderResult&lt;/code&gt; &lt;/a&gt; 객체가 반환되어 종료 이유를 설명합니다. 호출자는이 개체를 검사하고 입력 버퍼를 채우거나 출력 버퍼를 비우거나 인코딩 오류에서 복구를 시도한 다음 다시 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9473b8fa268ed48aa24d17927cd4344a0eb30672" translate="yes" xml:space="preserve">
          <source>Each invocation of the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method will decode as many bytes as possible from the input buffer, writing the resulting characters to the output buffer. The &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method returns when more input is required, when there is not enough room in the output buffer, or when a decoding error has occurred. In each case a &lt;a href=&quot;coderresult&quot;&gt;&lt;code&gt;CoderResult&lt;/code&gt;&lt;/a&gt; object is returned to describe the reason for termination. An invoker can examine this object and fill the input buffer, flush the output buffer, or attempt to recover from a decoding error, as appropriate, and try again.</source>
          <target state="translated">&lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 메소드를 호출 할 때마다 입력 버퍼에서 가능한 많은 바이트를 디코딩하여 결과 문자를 출력 버퍼에 씁니다. &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 출력 버퍼에 충분한 공간이 없을 때, 또는 디코딩 에러가 발생한 경우에있어서의 복귀가보다 입력이 요구되는 경우. 각각의 경우 종료 이유를 설명하기 위해 &lt;a href=&quot;coderresult&quot;&gt; &lt;code&gt;CoderResult&lt;/code&gt; &lt;/a&gt; 객체가 반환됩니다. 호출자는이 오브젝트를 검사하고 입력 버퍼를 채우거나, 출력 버퍼를 플러시하거나, 디코딩 오류를 적절히 복구 한 후 다시 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01c67700d3876b38e31aa40447f02d09292cfb08" translate="yes" xml:space="preserve">
          <source>Each invocation of the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method will encode as many characters as possible from the input buffer, writing the resulting bytes to the output buffer. The &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method returns when more input is required, when there is not enough room in the output buffer, or when an encoding error has occurred. In each case a &lt;a href=&quot;coderresult&quot;&gt;&lt;code&gt;CoderResult&lt;/code&gt;&lt;/a&gt; object is returned to describe the reason for termination. An invoker can examine this object and fill the input buffer, flush the output buffer, or attempt to recover from an encoding error, as appropriate, and try again.</source>
          <target state="translated">&lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 메소드를 호출 할 때마다 입력 버퍼에서 가능한 많은 문자를 인코딩하여 결과 바이트를 출력 버퍼에 씁니다. &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 출력 버퍼에 충분한 공간이 없을 때, 또는 부호화 에러가 발생한 경우에있어서의 복귀가보다 입력이 요구되는 경우. 각각의 경우 종료 이유를 설명하기 위해 &lt;a href=&quot;coderresult&quot;&gt; &lt;code&gt;CoderResult&lt;/code&gt; &lt;/a&gt; 객체가 반환됩니다. 호출자는이 오브젝트를 검사하고 입력 버퍼를 채우거나, 출력 버퍼를 플러시하거나, 인코딩 오류를 적절히 복구 한 후 다시 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8e88e400c4654f5b09bd9dd19d97774dccdd2ff9" translate="yes" xml:space="preserve">
          <source>Each invocation of this method enables or disables verbose output globally.</source>
          <target state="translated">이 메소드를 호출 할 때마다 상세 출력을 전체적으로 사용 가능 또는 사용 불가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="886d2dc1b920b05266d4d5488b21ee95ee257a49" translate="yes" xml:space="preserve">
          <source>Each item in a menu must belong to the &lt;code&gt;MenuItem&lt;/code&gt; class. It can be an instance of &lt;code&gt;MenuItem&lt;/code&gt;, a submenu (an instance of &lt;code&gt;Menu&lt;/code&gt;), or a check box (an instance of &lt;code&gt;CheckboxMenuItem&lt;/code&gt;).</source>
          <target state="translated">메뉴의 각 항목은 &lt;code&gt;MenuItem&lt;/code&gt; 클래스에 속해야합니다 . &lt;code&gt;MenuItem&lt;/code&gt; 의 인스턴스 , 하위 메뉴 ( &lt;code&gt;Menu&lt;/code&gt; 의 인스턴스 ) 또는 확인란 ( &lt;code&gt;CheckboxMenuItem&lt;/code&gt; 의 인스턴스 ) 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0efccffcc698fe5174885988c8c62bf0912599fa" translate="yes" xml:space="preserve">
          <source>Each item value's hash code is added to the returned hash code. If an item value is an array, its hash code is obtained as if by calling the &lt;a href=&quot;../../../../java.base/java/util/arrays#deepHashCode(java.lang.Object%5B%5D)&quot;&gt;&lt;code&gt;deepHashCode&lt;/code&gt;&lt;/a&gt; method for arrays of object reference types or the appropriate overloading of &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; for arrays of primitive types.</source>
          <target state="translated">각 항목 값의 해시 코드가 반환 된 해시 코드에 추가됩니다. 항목 값이 배열이면 객체 참조 유형의 배열에 대해 &lt;a href=&quot;../../../../java.base/java/util/arrays#deepHashCode(java.lang.Object%5B%5D)&quot;&gt; &lt;code&gt;deepHashCode&lt;/code&gt; &lt;/a&gt; 메서드를 호출 하거나 기본 유형의 배열에 대해 &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; 의 적절한 오버로딩을 호출하는 것처럼 해시 코드를 얻습니다 .</target>
        </trans-unit>
        <trans-unit id="cb7cb79e7be4786368a3d0dd817157d0652b7e06" translate="yes" xml:space="preserve">
          <source>Each item value's hash code is added to the returned hash code. If an item value is an array, its hash code is obtained as if by calling the &lt;a href=&quot;../../../java/util/arrays#deepHashCode-java.lang.Object:A-&quot;&gt;&lt;code&gt;deepHashCode&lt;/code&gt;&lt;/a&gt; method for arrays of object reference types or the appropriate overloading of &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; for arrays of primitive types.</source>
          <target state="translated">각 항목 값의 해시 코드가 반환 된 해시 코드에 추가됩니다. 항목 값이 배열 인 경우 객체 참조 유형의 배열에 대해 &lt;a href=&quot;../../../java/util/arrays#deepHashCode-java.lang.Object:A-&quot;&gt; &lt;code&gt;deepHashCode&lt;/code&gt; &lt;/a&gt; 메소드를 호출 하거나 기본 유형의 배열에 대해 적절한 &lt;code&gt;Arrays.hashCode(e)&lt;/code&gt; 를 오버로드 하여 해시 코드를 얻는 것처럼됩니다 .</target>
        </trans-unit>
        <trans-unit id="b6cf9c462f153d7df40f29787cf703a11033a0aa" translate="yes" xml:space="preserve">
          <source>Each key in an &lt;code&gt;AttributeSet&lt;/code&gt; corresponds to a category, and the value of the key can only be one of the attribute values that belong to the category represented by the key. Thus, unlike a &lt;code&gt;Map&lt;/code&gt;, an &lt;code&gt;AttributeSet&lt;/code&gt; restricts the possible values of a key: an attribute category cannot be set to an attribute value that does not belong to that category.</source>
          <target state="translated">&lt;code&gt;AttributeSet&lt;/code&gt; 의 각 키 는 범주에 해당하며 키 값은 키로 표시되는 범주에 속하는 특성 값 중 하나 일 수 있습니다. 따라서, 달리 &lt;code&gt;Map&lt;/code&gt; , &lt;code&gt;AttributeSet&lt;/code&gt; 키의 가능한 값을 제한한다 : 속성 카테고리는 그 카테고리에 속하지 않는 속성 값으로 설정 될 수 없다.</target>
        </trans-unit>
        <trans-unit id="ac52c43de1066f436085209661d030de63b9572e" translate="yes" xml:space="preserve">
          <source>Each key in the cancelled-key set is removed from each key set of which it is a member, and its channel is deregistered. This step leaves the cancelled-key set empty.</source>
          <target state="translated">취소 된 키 세트의 각 키는 멤버 인 각 키 세트에서 제거되고 해당 채널은 등록 취소됩니다. 이 단계는 취소 된 키 세트를 비워 둡니다.</target>
        </trans-unit>
        <trans-unit id="3cbd27a5e5299b41f1319632d13712009604c3ed" translate="yes" xml:space="preserve">
          <source>Each key object in a &lt;code&gt;WeakHashMap&lt;/code&gt; is stored indirectly as the referent of a weak reference. Therefore a key will automatically be removed only after the weak references to it, both inside and outside of the map, have been cleared by the garbage collector.</source>
          <target state="translated">&lt;code&gt;WeakHashMap&lt;/code&gt; 의 각 키 개체 는 약한 참조의 참조로 간접적으로 저장됩니다. 따라서 가비지 수집기에서 맵 안팎의 약한 참조를 지운 후에 만 ​​키가 자동으로 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="b54b71f09ad222ddc97cca5b5f8e2c1df04ef645" translate="yes" xml:space="preserve">
          <source>Each layer is a distinct integer number. The layer attribute can be set on a &lt;code&gt;Component&lt;/code&gt; by passing an &lt;code&gt;Integer&lt;/code&gt; object during the add call.</source>
          <target state="translated">각 레이어는 고유 한 정수입니다. 레이어 속성은 추가 호출 중에 &lt;code&gt;Integer&lt;/code&gt; 개체 를 전달하여 &lt;code&gt;Component&lt;/code&gt; 에 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c1549981aef0d08e7ce4a435a2790ae2dd56c329" translate="yes" xml:space="preserve">
          <source>Each location maps a source line to a range of code indices. The beginning of the range can be determined through &lt;a href=&quot;location#codeIndex()&quot;&gt;&lt;code&gt;Location.codeIndex()&lt;/code&gt;&lt;/a&gt;. The returned list is ordered by code index (from low to high).</source>
          <target state="translated">각 위치는 소스 행을 코드 인덱스 범위에 매핑합니다. 범위의 시작은 &lt;a href=&quot;location#codeIndex()&quot;&gt; &lt;code&gt;Location.codeIndex()&lt;/code&gt; &lt;/a&gt; 통해 확인할 수 있습니다 . 반환 된 목록은 코드 인덱스 (낮은 순서에서 높은 순서로)에 따라 정렬됩니다.</target>
        </trans-unit>
        <trans-unit id="cdadb53c2052905b8fe804c108a88c55eee893c4" translate="yes" xml:space="preserve">
          <source>Each match result is produced as if by &lt;a href=&quot;#toMatchResult()&quot;&gt;&lt;code&gt;toMatchResult()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">각 일치 결과는 &lt;a href=&quot;#toMatchResult()&quot;&gt; &lt;code&gt;toMatchResult()&lt;/code&gt; &lt;/a&gt; 의해 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="60a53531e28505693c3a4e37c248fd62c97f55c9" translate="yes" xml:space="preserve">
          <source>Each memory pool has a manageable attribute called the</source>
          <target state="translated">각 메모리 풀에는 관리 가능한 속성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="141ba060b8253b158b6ab748e17ed362a3ba3939" translate="yes" xml:space="preserve">
          <source>Each method in an implementation of interface &lt;code&gt;Doc&lt;/code&gt; is permitted always to return the same object each time the method is called. This has implications for a Print Job or other caller of a doc object whose print data representation object &quot;consumes&quot; the print data as the caller obtains the print data, such as a print data representation object which is a stream. Once the Print Job has called &lt;a href=&quot;#getPrintData()&quot;&gt;&lt;code&gt;getPrintData()&lt;/code&gt;&lt;/a&gt; and obtained the stream, any further calls to &lt;a href=&quot;#getPrintData()&quot;&gt;&lt;code&gt;getPrintData()&lt;/code&gt;&lt;/a&gt; will return the same stream object upon which reading may already be in progress,</source>
          <target state="translated">인터페이스 &lt;code&gt;Doc&lt;/code&gt; 구현의 각 메서드는 메서드가 호출 될 때마다 항상 동일한 객체를 반환하도록 허용됩니다. 이것은 인쇄 작업 또는 인쇄 데이터 표현 객체가 인쇄 데이터를 &quot;소비&quot;하는 doc 객체의 다른 호출자에게 의미가 있습니다. 호출자가 스트림 인 인쇄 데이터 표현 객체와 같은 인쇄 데이터를 얻을 때 인쇄 데이터를 &quot;소비&quot;합니다. 인쇄 작업이 &lt;a href=&quot;#getPrintData()&quot;&gt; &lt;code&gt;getPrintData()&lt;/code&gt; &lt;/a&gt; 호출하고 스트림 을 가져 오면 &lt;a href=&quot;#getPrintData()&quot;&gt; &lt;code&gt;getPrintData()&lt;/code&gt; &lt;/a&gt; 대한 추가 호출 은 읽기가 이미 진행 중일 수있는 동일한 스트림 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e0e2d99e157b618b87e35252d9dc48542f98cb59" translate="yes" xml:space="preserve">
          <source>Each method in an implementation of interface Doc is permitted always to return the same object each time the method is called. This has implications for a Print Job or other caller of a doc object whose print data representation object &quot;consumes&quot; the print data as the caller obtains the print data, such as a print data representation object which is a stream. Once the Print Job has called &lt;a href=&quot;doc#getPrintData--&quot;&gt;&lt;code&gt;getPrintData()&lt;/code&gt;&lt;/a&gt; and obtained the stream, any further calls to &lt;a href=&quot;doc#getPrintData--&quot;&gt;&lt;code&gt;getPrintData()&lt;/code&gt;&lt;/a&gt; will return the same stream object upon which reading may already be in progress,</source>
          <target state="translated">Doc 인터페이스 구현의 각 메소드는 메소드가 호출 될 때마다 항상 동일한 오브젝트를 리턴 할 수 있습니다. 이것은 인쇄 데이터 표현 객체가 호출자가 인쇄 데이터를 얻을 때 인쇄 데이터를 &quot;소비&quot;하는 doc 객체의 인쇄 작업 또는 다른 호출자에게 영향을 미치며, 이는 스트림 인 인쇄 데이터 표현 객체와 같은 것이다. 인쇄 작업이 호출되면 &lt;a href=&quot;doc#getPrintData--&quot;&gt; &lt;code&gt;getPrintData()&lt;/code&gt; &lt;/a&gt; 및 스트림을 얻을에 더 호출 &lt;a href=&quot;doc#getPrintData--&quot;&gt; &lt;code&gt;getPrintData()&lt;/code&gt; &lt;/a&gt; 읽기가 이미 진행 될 수있는 동일한 스트림 객체를 반환합니다</target>
        </trans-unit>
        <trans-unit id="9110fcbc74236beb4efa152ba7e92463f1311eed" translate="yes" xml:space="preserve">
          <source>Each method in this class returns either an &lt;code&gt;Icon&lt;/code&gt; or &lt;code&gt;null&lt;/code&gt;, where &lt;code&gt;null&lt;/code&gt; implies that there is no default icon.</source>
          <target state="translated">이 클래스의 각 메서드는 &lt;code&gt;Icon&lt;/code&gt; 또는 &lt;code&gt;null&lt;/code&gt; 을 반환합니다. 여기서 &lt;code&gt;null&lt;/code&gt; 은 기본 아이콘이 없음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="398081cc3447c225706e96b7ee673b725daa6a59" translate="yes" xml:space="preserve">
          <source>Each method invocation on the queue returned by this method results in exactly one method invocation on the backing deque, with one exception. The &lt;a href=&quot;collection#addAll(java.util.Collection)&quot;&gt;&lt;code&gt;addAll&lt;/code&gt;&lt;/a&gt; method is implemented as a sequence of &lt;a href=&quot;deque#addFirst(E)&quot;&gt;&lt;code&gt;addFirst&lt;/code&gt;&lt;/a&gt; invocations on the backing deque.</source>
          <target state="translated">이 메서드에 의해 반환 된 큐에 대한 각 메서드 호출은 하나의 예외를 제외하고 백킹 데크에서 정확히 하나의 메서드 호출을 발생시킵니다. &lt;a href=&quot;collection#addAll(java.util.Collection)&quot;&gt; &lt;code&gt;addAll&lt;/code&gt; &lt;/a&gt; 방법의 시퀀스로서 구현된다 &lt;a href=&quot;deque#addFirst(E)&quot;&gt; &lt;code&gt;addFirst&lt;/code&gt; &lt;/a&gt; 백킹 양단에 호출.</target>
        </trans-unit>
        <trans-unit id="4e4a43a83beb89b612ad871a2f3a7ae9dcfaf2dd" translate="yes" xml:space="preserve">
          <source>Each method invocation on the queue returned by this method results in exactly one method invocation on the backing deque, with one exception. The &lt;a href=&quot;collection#addAll-java.util.Collection-&quot;&gt;&lt;code&gt;addAll&lt;/code&gt;&lt;/a&gt; method is implemented as a sequence of &lt;a href=&quot;deque#addFirst-E-&quot;&gt;&lt;code&gt;addFirst&lt;/code&gt;&lt;/a&gt; invocations on the backing deque.</source>
          <target state="translated">이 메소드에 의해 리턴 된 큐의 각 메소드 호출은 하나의 예외를 제외하고는 백업 큐에서 정확히 하나의 메소드 호출을 발생시킵니다. &lt;a href=&quot;collection#addAll-java.util.Collection-&quot;&gt; &lt;code&gt;addAll&lt;/code&gt; &lt;/a&gt; 방법의 시퀀스로서 구현된다 &lt;a href=&quot;deque#addFirst-E-&quot;&gt; &lt;code&gt;addFirst&lt;/code&gt; &lt;/a&gt; 백킹 양단에 호출.</target>
        </trans-unit>
        <trans-unit id="b998914b040c836fdbef3cc87306da0d4d5d957e" translate="yes" xml:space="preserve">
          <source>Each method invocation on the set returned by this method results in exactly one method invocation on the backing map or its &lt;code&gt;keySet&lt;/code&gt; view, with one exception. The &lt;code&gt;addAll&lt;/code&gt; method is implemented as a sequence of &lt;code&gt;put&lt;/code&gt; invocations on the backing map.</source>
          <target state="translated">세트의 각 메소드 호출은 배킹지도 또는 정확히 하나의 메소드 호출 방법이 결과에 의해 리턴 &lt;code&gt;keySet&lt;/code&gt; 중 하나 개를 제외하고 도면. &lt;code&gt;addAll&lt;/code&gt; 방법의 시퀀스로서 구현된다 &lt;code&gt;put&lt;/code&gt; 보강지도 호출.</target>
        </trans-unit>
        <trans-unit id="783132c372e3366f8fef14de6ff263e84edbf665" translate="yes" xml:space="preserve">
          <source>Each method of this interface that returns a list of elements will return them in the order that is natural for the underlying source of program information. For example, if the underlying source of information is Java source code, then the elements will be returned in source code order.</source>
          <target state="translated">요소 목록을 리턴하는이 인터페이스의 각 메소드는 기본 프로그램 정보 소스에 고유 한 순서로 요소를 리턴합니다. 예를 들어, 기본 정보 소스가 Java 소스 코드 인 경우 요소는 소스 코드 순서로 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="673e0ec0aa7ef41b16f66294c8a1d2774bb4f309" translate="yes" xml:space="preserve">
          <source>Each method returns an appropriate object or &lt;code&gt;null&lt;/code&gt; if the provider does not support the given encoding. Typical providers support more than one encoding.</source>
          <target state="translated">각 메서드는 적절한 객체를 반환하거나 공급자가 지정된 인코딩을 지원하지 않으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 . 일반적인 공급자는 둘 이상의 인코딩을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="f5f6fbfdc1823b94935e68c69bc688f9840f2965" translate="yes" xml:space="preserve">
          <source>Each name in the &lt;code&gt;Collection&lt;/code&gt; may be specified either as a &lt;code&gt;String&lt;/code&gt; or as an ASN.1 encoded byte array. For more details about the formats used, see &lt;a href=&quot;#addPathToName(int,java.lang.String)&quot;&gt;&lt;code&gt;addPathToName(int type, String name)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#addPathToName(int,byte%5B%5D)&quot;&gt;&lt;code&gt;addPathToName(int type, byte [] name)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Collection&lt;/code&gt; 각 이름은 &lt;code&gt;String&lt;/code&gt; 또는 ASN.1 인코딩 바이트 배열로 지정 될 수 있습니다 . 사용되는 형식에 대한 자세한 내용은 &lt;a href=&quot;#addPathToName(int,java.lang.String)&quot;&gt; &lt;code&gt;addPathToName(int type, String name)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#addPathToName(int,byte%5B%5D)&quot;&gt; &lt;code&gt;addPathToName(int type, byte [] name)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="44627a58d5af00c8a91a9cfaf99c9a74f62ca41e" translate="yes" xml:space="preserve">
          <source>Each name in the &lt;code&gt;Collection&lt;/code&gt; may be specified either as a &lt;code&gt;String&lt;/code&gt; or as an ASN.1 encoded byte array. For more details about the formats used, see &lt;a href=&quot;x509certselector#addPathToName-int-java.lang.String-&quot;&gt;&lt;code&gt;addPathToName(int type, String name)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;x509certselector#addPathToName-int-byte:A-&quot;&gt;&lt;code&gt;addPathToName(int type, byte [] name)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Collection&lt;/code&gt; 의 각 이름은 &lt;code&gt;String&lt;/code&gt; 또는 ASN.1로 인코딩 된 바이트 배열로 지정할 수 있습니다 . 사용되는 형식에 대한 자세한 내용은 &lt;a href=&quot;x509certselector#addPathToName-int-java.lang.String-&quot;&gt; &lt;code&gt;addPathToName(int type, String name)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;x509certselector#addPathToName-int-byte:A-&quot;&gt; &lt;code&gt;addPathToName(int type, byte [] name)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5b9a48cf2f6e1c897b3ede0cdbdf6dc89635caf1" translate="yes" xml:space="preserve">
          <source>Each name passed as an argument to a &lt;code&gt;Context&lt;/code&gt; method is relative to that context. The empty name is used to name the context itself. A name parameter may never be null.</source>
          <target state="translated">&lt;code&gt;Context&lt;/code&gt; 메소드에 인수로 전달 된 각 이름은 해당 컨텍스트와 관련이 있습니다. 빈 이름은 컨텍스트 자체의 이름을 지정하는 데 사용됩니다. 이름 매개 변수는 널이 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="cf5b9b92d0b960981f6e6716445c7a7f55ac6d65" translate="yes" xml:space="preserve">
          <source>Each name passed as an argument to a &lt;code&gt;DirContext&lt;/code&gt; method is relative to that context. The empty name is used to name the context itself. The name parameter may never be null.</source>
          <target state="translated">&lt;code&gt;DirContext&lt;/code&gt; 메소드에 인수로 전달 된 각 이름은 해당 컨텍스트와 관련이 있습니다. 빈 이름은 컨텍스트 자체의 이름을 지정하는 데 사용됩니다. name 매개 변수는 널이 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="b5c840a39d64d33072abe46688a7807f46c74c29" translate="yes" xml:space="preserve">
          <source>Each new size will be calculated using:</source>
          <target state="translated">각각의 새로운 크기는 다음을 사용하여 계산됩니다.</target>
        </trans-unit>
        <trans-unit id="345d261c4126bd01c7e26ff54f32d4db820f5af8" translate="yes" xml:space="preserve">
          <source>Each non-init function will be able to observe the current values &lt;code&gt;(v...)&lt;/code&gt; of all iteration variables.</source>
          <target state="translated">초기화가 아닌 각 함수는 모든 반복 변수 의 현재 값 &lt;code&gt;(v...)&lt;/code&gt; 을 관찰 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd9fd91c22d3d82aa93d0176951e81ef7776d0b6" translate="yes" xml:space="preserve">
          <source>Each observer has its &lt;code&gt;update&lt;/code&gt; method called with two arguments: this observable object and &lt;code&gt;null&lt;/code&gt;. In other words, this method is equivalent to:</source>
          <target state="translated">각 옵저버에는 이 관찰 가능 객체와 &lt;code&gt;null&lt;/code&gt; 이라는 두 개의 인수로 호출되는 &lt;code&gt;update&lt;/code&gt; 메소드가 있습니다. 즉,이 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e5ce380da675e7f0b1e4917bc23055f5e7ce4335" translate="yes" xml:space="preserve">
          <source>Each observer has its &lt;code&gt;update&lt;/code&gt; method called with two arguments: this observable object and the &lt;code&gt;arg&lt;/code&gt; argument.</source>
          <target state="translated">각 옵저버에는 이 관찰 가능 객체와 &lt;code&gt;arg&lt;/code&gt; 인수 라는 두 가지 인수로 호출되는 &lt;code&gt;update&lt;/code&gt; 메소드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="30cdabac1e887dec9d2991e8a7d1e5b51136b14a" translate="yes" xml:space="preserve">
          <source>Each of the &lt;code&gt;Class&lt;/code&gt; objects representing array types, primitive types, and &lt;code&gt;void&lt;/code&gt; returns &lt;code&gt;this&lt;/code&gt; to indicate that the represented entity belongs to the nest consisting only of itself, and is the nest host.</source>
          <target state="translated">배열 유형, 기본 유형 및 &lt;code&gt;void&lt;/code&gt; 를 나타내는 각 &lt;code&gt;Class&lt;/code&gt; 객체 는 &lt;code&gt;this&lt;/code&gt; 을 반환 하여 표시된 엔티티가 자신으로 만 구성된 중첩에 속하고 중첩 호스트임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="d3781f23674ff532ad529c277cf5a19e10709547" translate="yes" xml:space="preserve">
          <source>Each of the &lt;code&gt;Class&lt;/code&gt; objects representing array types, primitive types, and &lt;code&gt;void&lt;/code&gt; returns an array containing only &lt;code&gt;this&lt;/code&gt;.</source>
          <target state="translated">배열 유형, 기본 유형 및 &lt;code&gt;void&lt;/code&gt; 를 나타내는 각 &lt;code&gt;Class&lt;/code&gt; 객체는 &lt;code&gt;this&lt;/code&gt; 만 포함하는 배열을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="7326f6adbfb6fce8eb6d6ee41386976b238ebfc2" translate="yes" xml:space="preserve">
          <source>Each of the &lt;code&gt;ComponentUI&lt;/code&gt;s provided by &lt;code&gt;
 BasicLookAndFeel&lt;/code&gt; derives its behavior from the defaults table. Unless otherwise noted each of the &lt;code&gt;ComponentUI&lt;/code&gt; implementations in this package document the set of defaults they use. Unless otherwise noted the defaults are installed at the time &lt;code&gt;installUI&lt;/code&gt; is invoked, and follow the recommendations outlined in &lt;code&gt;LookAndFeel&lt;/code&gt; for installing defaults.</source>
          <target state="translated">&lt;code&gt; BasicLookAndFeel&lt;/code&gt; 에서 제공하는 각 &lt;code&gt;ComponentUI&lt;/code&gt; 는 기본 테이블에서 동작을 파생합니다. 이 패키지 의 각 &lt;code&gt;ComponentUI&lt;/code&gt; 구현은 별도로 언급하지 않는 한 이들이 사용하는 기본값 집합을 문서화합니다. 달리 명시되지 않는 한 기본값은 &lt;code&gt;installUI&lt;/code&gt; 가 호출 될 때 설치 되며 &lt;code&gt;LookAndFeel&lt;/code&gt; 에 설명 된 기본값 설치 권장 사항을 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="ab01e9b4cd9f20368965d32d6e805c7fa5d87413" translate="yes" xml:space="preserve">
          <source>Each of the &lt;code&gt;ComponentUI&lt;/code&gt;s provided by &lt;code&gt;
 MetalLookAndFeel&lt;/code&gt; derives its behavior from the defaults table. Unless otherwise noted each of the &lt;code&gt;ComponentUI&lt;/code&gt; implementations in this package document the set of defaults they use. Unless otherwise noted the defaults are installed at the time &lt;code&gt;installUI&lt;/code&gt; is invoked, and follow the recommendations outlined in &lt;code&gt;LookAndFeel&lt;/code&gt; for installing defaults.</source>
          <target state="translated">&lt;code&gt; MetalLookAndFeel&lt;/code&gt; 에서 제공하는 각 &lt;code&gt;ComponentUI&lt;/code&gt; 는 기본 테이블에서 동작을 가져옵니다. 이 패키지 의 각 &lt;code&gt;ComponentUI&lt;/code&gt; 구현은 별도로 언급하지 않는 한 이들이 사용하는 기본값 집합을 문서화합니다. 달리 명시되지 않는 한 기본값은 &lt;code&gt;installUI&lt;/code&gt; 가 호출 될 때 설치 되며 &lt;code&gt;LookAndFeel&lt;/code&gt; 에 설명 된 기본값 설치 권장 사항을 따릅니다 .</target>
        </trans-unit>
        <trans-unit id="502a1a2ef66daf3fbef3ae47056f78891a6d1445" translate="yes" xml:space="preserve">
          <source>Each of the above &lt;code&gt;set&lt;/code&gt; methods has a corresponding &lt;code&gt;get&lt;/code&gt; method to retrieve the value of the parameter or general request property. The specific parameters and general request properties that are applicable are protocol specific.</source>
          <target state="translated">위에 &lt;code&gt;set&lt;/code&gt; 각 메소드에는 매개 변수 또는 일반 요청 특성의 값을 검색 하는 해당 &lt;code&gt;get&lt;/code&gt; 메소드가 있습니다. 적용 가능한 특정 매개 변수 및 일반 요청 특성은 프로토콜마다 다릅니다.</target>
        </trans-unit>
        <trans-unit id="780514c666418b367d7a7fe297a789ef05a04a64" translate="yes" xml:space="preserve">
          <source>Each of the above calls to &lt;code&gt;invokeExact&lt;/code&gt; or plain &lt;code&gt;invoke&lt;/code&gt; generates a single invokevirtual instruction with the symbolic type descriptor indicated in the following comment. In these examples, the helper method &lt;code&gt;assertEquals&lt;/code&gt; is assumed to be a method which calls &lt;a href=&quot;../../util/objects#equals(java.lang.Object,java.lang.Object)&quot;&gt;&lt;code&gt;Objects.equals&lt;/code&gt;&lt;/a&gt; on its arguments, and asserts that the result is true.</source>
          <target state="translated">&lt;code&gt;invokeExact&lt;/code&gt; 또는 일반 &lt;code&gt;invoke&lt;/code&gt; 에 대한 위의 각 호출 은 다음 주석에 표시된 기호 유형 설명자를 사용하여 단일 invokevirtual 명령어를 생성합니다. 이 예에서 도우미 메서드 &lt;code&gt;assertEquals&lt;/code&gt; 는 인수에 대해 &lt;a href=&quot;../../util/objects#equals(java.lang.Object,java.lang.Object)&quot;&gt; &lt;code&gt;Objects.equals&lt;/code&gt; &lt;/a&gt; 를 호출 하고 결과가 참이라고 주장 하는 메서드로 가정됩니다 .</target>
        </trans-unit>
        <trans-unit id="ef0d03c8aac8695e27586407b58bd4b97a9ed806" translate="yes" xml:space="preserve">
          <source>Each of the above calls to &lt;code&gt;invokeExact&lt;/code&gt; or plain &lt;code&gt;invoke&lt;/code&gt; generates a single invokevirtual instruction with the symbolic type descriptor indicated in the following comment. In these examples, the helper method &lt;code&gt;assertEquals&lt;/code&gt; is assumed to be a method which calls &lt;a href=&quot;../../util/objects#equals-java.lang.Object-java.lang.Object-&quot;&gt;&lt;code&gt;Objects.equals&lt;/code&gt;&lt;/a&gt; on its arguments, and asserts that the result is true.</source>
          <target state="translated">&lt;code&gt;invokeExact&lt;/code&gt; 또는 일반 &lt;code&gt;invoke&lt;/code&gt; 에 대한 위의 각 호출 은 다음 주석에 표시된 기호 유형 설명자를 사용하여 단일 invokevirtual 명령을 생성합니다. 이 예제에서 도우미 메소드 &lt;code&gt;assertEquals&lt;/code&gt; 는 인수에서 &lt;a href=&quot;../../util/objects#equals-java.lang.Object-java.lang.Object-&quot;&gt; &lt;code&gt;Objects.equals&lt;/code&gt; &lt;/a&gt; 를 호출 하고 결과가 참이라고 주장 하는 메소드로 가정 합니다.</target>
        </trans-unit>
        <trans-unit id="99ee5645be1450d105b3e522af3eaaafb76d02e9" translate="yes" xml:space="preserve">
          <source>Each of the above categories has an associated unique &lt;a href=&quot;processbuilder.redirect.type&quot;&gt;&lt;code&gt;Type&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">위의 각 범주에는 고유 한 &lt;a href=&quot;processbuilder.redirect.type&quot;&gt; &lt;code&gt;Type&lt;/code&gt; 이&lt;/a&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="4a7f4c0662fcbdc13a62ca3a777bbbc303e3102c" translate="yes" xml:space="preserve">
          <source>Each of the components in the &lt;a href=&quot;#verStr&quot;&gt;version&lt;/a&gt; is compared in the following order of precedence: version numbers, pre-release identifiers, build numbers, optional build information.</source>
          <target state="translated">&lt;a href=&quot;#verStr&quot;&gt;버전&lt;/a&gt; 의 각 구성 요소는 버전 번호, 시험판 식별자, 빌드 번호, 선택적 빌드 정보와 같은 우선 순위에 따라 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="d955d4acbd65ec03706a307e0a060780c16cac09" translate="yes" xml:space="preserve">
          <source>Each of the standard plug-ins supports a so-called &quot;native&quot; metadata format, which encodes its metadata losslessly:</source>
          <target state="translated">각 표준 플러그인은 메타 데이터를 무손실로 인코딩하는 소위 &quot;네이티브&quot;메타 데이터 형식을 지원합니다.</target>
        </trans-unit>
        <trans-unit id="778d2bd2c0c0e19e0cd696b11a1cdf3b609fd234" translate="yes" xml:space="preserve">
          <source>Each of the ten components has the &lt;code&gt;fill&lt;/code&gt; field of its associated &lt;code&gt;GridBagConstraints&lt;/code&gt; object set to &lt;code&gt;GridBagConstraints.BOTH&lt;/code&gt;. In addition, the components have the following non-default constraints:</source>
          <target state="translated">열 각각의 구성 요소는이 &lt;code&gt;fill&lt;/code&gt; 관련 분야 &lt;code&gt;GridBagConstraints&lt;/code&gt; 설정 객체 &lt;code&gt;GridBagConstraints.BOTH&lt;/code&gt; . 또한 구성 요소에는 다음과 같은 기본이 아닌 제약 조건이 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c0b36440aea8153ae41de4799147054c7e06929" translate="yes" xml:space="preserve">
          <source>Each of these corresponds to the IPP &quot;media&quot; attribute. The current API does not support describing media by characteristics (eg colour, opacity). This may be supported in a later revision of the specification.</source>
          <target state="translated">이들 각각은 IPP &quot;미디어&quot;속성에 해당합니다. 현재 API는 특성 (예 : 색상, 불투명도)으로 미디어 설명을 지원하지 않습니다. 이것은 사양의 이후 개정에서 지원 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a754ee244cc09928f06ccdae13b725fad5ea8f5b" translate="yes" xml:space="preserve">
          <source>Each of these methods also comes in a &lt;code&gt;showInternalXXX&lt;/code&gt; flavor, which uses an internal frame to hold the dialog box (see &lt;a href=&quot;jinternalframe&quot;&gt;&lt;code&gt;JInternalFrame&lt;/code&gt;&lt;/a&gt;). Multiple convenience methods have also been defined -- overloaded versions of the basic methods that use different parameter lists.</source>
          <target state="translated">이러한 메소드 각각은 내부 프레임을 사용하여 대화 상자를 보유 하는 &lt;code&gt;showInternalXXX&lt;/code&gt; 플레이버로 제공됩니다 ( &lt;a href=&quot;jinternalframe&quot;&gt; &lt;code&gt;JInternalFrame&lt;/code&gt; &lt;/a&gt; 참조 ). 여러 편의 메서드도 정의되었습니다. 즉, 다른 매개 변수 목록을 사용하는 기본 메서드의 오버로드 버전입니다.</target>
        </trans-unit>
        <trans-unit id="69ab4a975283fc7ad1605a8f60196eed4c2c6918" translate="yes" xml:space="preserve">
          <source>Each of these methods by default throws &lt;a href=&quot;../../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;. Implementations of these methods must be internally thread-safe, and should in general be short and not block. Defining these methods is the &lt;em&gt;only&lt;/em&gt; supported means of using this class. All other methods are declared &lt;code&gt;final&lt;/code&gt; because they cannot be independently varied.</source>
          <target state="translated">이러한 각 메소드는 기본적으로 &lt;a href=&quot;../../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다. 이러한 메소드의 구현은 내부적으로 스레드로부터 안전해야하며 일반적으로 짧고 차단되지 않아야합니다. 이 메소드를 정의하는 것이이 클래스를 사용 하는 &lt;em&gt;유일한&lt;/em&gt; 지원 수단입니다. 다른 모든 방법은 독립적으로 변할 수 없으므로 &lt;code&gt;final&lt;/code&gt; 으로 선언 됩니다.</target>
        </trans-unit>
        <trans-unit id="6828b8f34a5c4ea3d2023fa0a14df6e8565b19eb" translate="yes" xml:space="preserve">
          <source>Each of these methods has two variants; one with an explicit locale and one without; the latter uses the default &lt;a href=&quot;locale.category#FORMAT&quot;&gt;&lt;code&gt;FORMAT&lt;/code&gt;&lt;/a&gt; locale:</source>
          <target state="translated">이러한 각 방법에는 두 가지 변형이 있습니다. 하나는 명시 적 로케일이 있고 다른 하나는없는 후자는 기본 &lt;a href=&quot;locale.category#FORMAT&quot;&gt; &lt;code&gt;FORMAT&lt;/code&gt; &lt;/a&gt; 로케일을 사용합니다 .</target>
        </trans-unit>
        <trans-unit id="dcaffb86273fddf28001dd1a11bb0827e2b68eaf" translate="yes" xml:space="preserve">
          <source>Each of these methods returns a boolean indicating success or failure. More information about a successful match can be obtained by querying the state of the matcher.</source>
          <target state="translated">이러한 각 메소드는 성공 또는 실패를 나타내는 부울을 리턴합니다. 성공적인 일치에 대한 자세한 정보는 매처의 상태를 조회하여 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="80b19b6ca6a626f62a7c3238ef8f29a6abc072f0" translate="yes" xml:space="preserve">
          <source>Each of these permissions is a consequence of the fact that a lookup object with private access can be securely traced back to an originating class, whose &lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;bytecode behaviors&lt;/a&gt; and Java language access permissions can be reliably determined and emulated by method handles.</source>
          <target state="translated">이러한 각 권한은 개인 액세스 권한이있는 조회 객체를 원래 클래스로 안전하게 추적 할 수 있기 때문에 &lt;a href=&quot;methodhandles.lookup#equiv&quot;&gt;바이트 코드 동작&lt;/a&gt; 및 Java 언어 액세스 권한을 메소드 핸들로 안정적으로 결정하고 에뮬레이션 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c31025bd6f307b8e7124f717b7fc13f9e8df6c41" translate="yes" xml:space="preserve">
          <source>Each of these ways to start an agent is described below.</source>
          <target state="translated">에이전트를 시작하는 각 방법은 아래에 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="1722b027fcdcfd9f501a8cd674530de960adde88" translate="yes" xml:space="preserve">
          <source>Each operation is an action type represented by the &lt;a href=&quot;desktop.action&quot;&gt;&lt;code&gt;Desktop.Action&lt;/code&gt;&lt;/a&gt; class.</source>
          <target state="translated">각 작업은 &lt;a href=&quot;desktop.action&quot;&gt; &lt;code&gt;Desktop.Action&lt;/code&gt; &lt;/a&gt; 클래스로 표시되는 작업 유형 입니다.</target>
        </trans-unit>
        <trans-unit id="98dc0df5b86b3497590f5ccef06a4a0cf8165494" translate="yes" xml:space="preserve">
          <source>Each pair of init and step functions agrees in their return type &lt;code&gt;V&lt;/code&gt;.</source>
          <target state="translated">각 init 및 step 함수 쌍은 반환 유형 &lt;code&gt;V&lt;/code&gt; 에서 일치합니다 .</target>
        </trans-unit>
        <trans-unit id="19d05d316190d95ec73c2c5bf47077402a6a53da" translate="yes" xml:space="preserve">
          <source>Each particular &lt;code&gt;ImageReader&lt;/code&gt; implementation may call this method at whatever frequency it desires. A rule of thumb is to call it around each 5 percent mark.</source>
          <target state="translated">각각의 특정 &lt;code&gt;ImageReader&lt;/code&gt; 구현은 원하는 빈도로이 메소드를 호출 할 수 있습니다. 일반적으로 5 % 마크마다 호출합니다.</target>
        </trans-unit>
        <trans-unit id="a61f51548504f8ca936a09ec82bd4068fa6143d1" translate="yes" xml:space="preserve">
          <source>Each particular &lt;code&gt;ImageWriter&lt;/code&gt; implementation may call this method at whatever frequency it desires. A rule of thumb is to call it around each 5 percent mark.</source>
          <target state="translated">각각의 특정 &lt;code&gt;ImageWriter&lt;/code&gt; 구현은 원하는 빈도로이 메소드를 호출 할 수 있습니다. 일반적으로 5 % 마크마다 호출합니다.</target>
        </trans-unit>
        <trans-unit id="1042aaa89f3bf5ef54a1e72fccf65f86119568ef" translate="yes" xml:space="preserve">
          <source>Each platform MXBean is a &lt;a href=&quot;platformmanagedobject&quot;&gt;&lt;code&gt;PlatformManagedObject&lt;/code&gt;&lt;/a&gt; and it has a unique &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; for registration in the platform &lt;code&gt;MBeanServer&lt;/code&gt; as returned by by the &lt;a href=&quot;platformmanagedobject#getObjectName()&quot;&gt;&lt;code&gt;getObjectName&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">각 플랫폼 MXBean은 &lt;a href=&quot;platformmanagedobject&quot;&gt; &lt;code&gt;PlatformManagedObject&lt;/code&gt; &lt;/a&gt; 이며 &lt;a href=&quot;platformmanagedobject#getObjectName()&quot;&gt; &lt;code&gt;getObjectName&lt;/code&gt; &lt;/a&gt; 메소드 에 의해 리턴 된대로 플랫폼 &lt;code&gt;MBeanServer&lt;/code&gt; 에 등록하기위한 고유 한 &lt;a href=&quot;../../../javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt; 이 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ce679f49476b014252750ba7796bd850eb4c8536" translate="yes" xml:space="preserve">
          <source>Each platform MXBean is a &lt;a href=&quot;platformmanagedobject&quot;&gt;&lt;code&gt;PlatformManagedObject&lt;/code&gt;&lt;/a&gt; and it has a unique &lt;a href=&quot;../../../javax/management/objectname&quot;&gt;&lt;code&gt;ObjectName&lt;/code&gt;&lt;/a&gt; for registration in the platform &lt;code&gt;MBeanServer&lt;/code&gt; as returned by by the &lt;a href=&quot;platformmanagedobject#getObjectName--&quot;&gt;&lt;code&gt;getObjectName&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">각 플랫폼 MXBean은 &lt;a href=&quot;platformmanagedobject&quot;&gt; &lt;code&gt;PlatformManagedObject&lt;/code&gt; &lt;/a&gt; 이며 &lt;a href=&quot;platformmanagedobject#getObjectName--&quot;&gt; &lt;code&gt;getObjectName&lt;/code&gt; &lt;/a&gt; 메소드가 리턴 한대로 플랫폼 &lt;code&gt;MBeanServer&lt;/code&gt; 에 등록 할 고유 한 &lt;a href=&quot;../../../javax/management/objectname&quot;&gt; &lt;code&gt;ObjectName&lt;/code&gt; &lt;/a&gt; 을 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="3eec50a10dab0294645912799c93c6476f16d71d" translate="yes" xml:space="preserve">
          <source>Each potential service provider is required to implement the method &lt;a href=&quot;#isObjectModelSupported(java.lang.String)&quot;&gt;&lt;code&gt;isObjectModelSupported(String objectModel)&lt;/code&gt;&lt;/a&gt;. The first service provider found that supports the specified object model is returned.</source>
          <target state="translated">각 잠재적 서비스 제공자는 &lt;a href=&quot;#isObjectModelSupported(java.lang.String)&quot;&gt; &lt;code&gt;isObjectModelSupported(String objectModel)&lt;/code&gt; &lt;/a&gt; 메소드를 구현해야합니다 . 지정된 개체 모델을 지원하는 첫 번째 서비스 공급자가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6c62a9e7dd1b5f674767bc5feae75f932b278b68" translate="yes" xml:space="preserve">
          <source>Each potential service provider is required to implement the method &lt;a href=&quot;#isSchemaLanguageSupported(java.lang.String)&quot;&gt;&lt;code&gt;isSchemaLanguageSupported(String schemaLanguage)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">각 잠재적 서비스 공급자는 &lt;a href=&quot;#isSchemaLanguageSupported(java.lang.String)&quot;&gt; &lt;code&gt;isSchemaLanguageSupported(String schemaLanguage)&lt;/code&gt; &lt;/a&gt; 메서드를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1e496481543f9caaa5ac1b5e3d51cbbb5318304d" translate="yes" xml:space="preserve">
          <source>Each primary key column description has the following columns:</source>
          <target state="translated">각 기본 키 열 설명에는 다음 열이 있습니다.</target>
        </trans-unit>
        <trans-unit id="1daea9f1ccaa0b5e62c4ab09835e81e4fb9a51e9" translate="yes" xml:space="preserve">
          <source>Each principal can have at most one positive ACL entry and one negative entry; that is, multiple positive or negative ACL entries are not allowed for any principal. Each entry specifies the set of permissions that are to be granted (if positive) or denied (if negative).</source>
          <target state="translated">각 주체는 최대 하나의 양의 ACL 항목과 하나의 음의 항목을 가질 수 있습니다. 즉, 여러 주체에 여러 개의 양수 또는 음수 ACL 항목이 허용되지 않습니다. 각 항목은 부여 (긍정) 또는 거부 (부정) 할 권한 집합을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2932feb10e4d108367970313b7982962322be54a" translate="yes" xml:space="preserve">
          <source>Each printer has a set of capabilities, such as the ability to print on different paper sizes or the ability to print more than one copy. Each of the capabilities has a range of values. For example, a printer's orientation capability might have this range of values: [landscape, portrait]. For each print request, the capability is set to one of these values. The Java Print Service API uses the term &lt;b&gt;attribute category&lt;/b&gt; to refer to a printer capability and the term &lt;b&gt;attribute value&lt;/b&gt; to refer to the value of the capability.</source>
          <target state="translated">각 프린터에는 서로 다른 용지 크기에 인쇄하는 기능 또는 둘 이상의 사본을 인쇄하는 기능과 같은 일련의 기능이 있습니다. 각 기능에는 다양한 값이 있습니다. 예를 들어, 프린터의 방향 기능은 [가로, 세로]의 값 범위를 가질 수 있습니다. 각 인쇄 요청에 대해 기능은이 값 중 하나로 설정됩니다. Java Print Service API는 &lt;b&gt;속성 카테고리&lt;/b&gt; 라는 용어를 사용하여 프린터 기능을 나타내고 &lt;b&gt;속성 값&lt;/b&gt; 이라는 용어 는 기능의 값을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ec8f92e36fababd832add7263b085b3231ad359b" translate="yes" xml:space="preserve">
          <source>Each privilege description has the following columns:</source>
          <target state="translated">각 권한 설명에는 다음 열이 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb38ced1e73e0b8983a967fcdb07632dabf87fb2" translate="yes" xml:space="preserve">
          <source>Each procedure description has the following columns:</source>
          <target state="translated">각 절차 설명에는 다음 열이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a7e300e813772a0f83953eca2f3b2527d020d8d1" translate="yes" xml:space="preserve">
          <source>Each process builder manages these process attributes:</source>
          <target state="translated">각 프로세스 빌더는 다음 프로세스 속성을 관리합니다.</target>
        </trans-unit>
        <trans-unit id="f2643492bfb6e0a17a5aed694e05561e85f1356c" translate="yes" xml:space="preserve">
          <source>Each process builder's command is checked to be a valid operating system command. Which commands are valid is system-dependent, but at the very least the command must be a non-empty list of non-null strings.</source>
          <target state="translated">각 프로세스 빌더의 명령은 유효한 운영 체제 명령인지 확인됩니다. 유효한 명령은 시스템에 따라 다르지만 최소한 명령은 널이 아닌 문자열의 비어 있지 않은 목록이어야합니다.</target>
        </trans-unit>
        <trans-unit id="849598ea766b43e4919ab3fa820b73a6427b2744" translate="yes" xml:space="preserve">
          <source>Each provider has a name and a version number, and is configured in each runtime it is installed in.</source>
          <target state="translated">각 제공자는 이름과 버전 번호를 가지며, 설치된 각 런타임에 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="1685913f6da636487032ec07b22dfc531737c189" translate="yes" xml:space="preserve">
          <source>Each provider has a name and a version string. A provider normally identifies itself with a file named &lt;code&gt;java.security.Provider&lt;/code&gt; in the resource directory &lt;code&gt;META-INF/services&lt;/code&gt;. Security providers are looked up via the &lt;a href=&quot;../util/serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt; mechanism using the &lt;a href=&quot;../lang/classloader#getSystemClassLoader()&quot;&gt;&lt;code&gt;application class loader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">각 공급자에는 이름과 버전 문자열이 있습니다. 공급자는 일반적으로 리소스 디렉토리 &lt;code&gt;META-INF/services&lt;/code&gt; 에있는 &lt;code&gt;java.security.Provider&lt;/code&gt; 파일로 자신을 식별합니다 . 보안 공급자는 다음을 사용하여 &lt;a href=&quot;../util/serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt; 메커니즘을 통해 조회됩니다 .&lt;a href=&quot;../lang/classloader#getSystemClassLoader()&quot;&gt; &lt;code&gt;application class loader&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="0a90a42155e73a5b9ab2065847b923d2c8b2b899" translate="yes" xml:space="preserve">
          <source>Each proxy class has one public constructor that takes one argument, an implementation of the interface &lt;a href=&quot;invocationhandler&quot;&gt;&lt;code&gt;InvocationHandler&lt;/code&gt;&lt;/a&gt;, to set the invocation handler for a proxy instance. Rather than having to use the reflection API to access the public constructor, a proxy instance can be also be created by calling the &lt;a href=&quot;proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt;&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;&lt;/a&gt; method, which combines the actions of calling &lt;a href=&quot;proxy#getProxyClass-java.lang.ClassLoader-java.lang.Class...-&quot;&gt;&lt;code&gt;Proxy.getProxyClass&lt;/code&gt;&lt;/a&gt; with invoking the constructor with an invocation handler.</source>
          <target state="translated">각 프록시 클래스에는 프록시 인스턴스에 대한 호출 핸들러를 설정하기 위해 인터페이스 &lt;a href=&quot;invocationhandler&quot;&gt; &lt;code&gt;InvocationHandler&lt;/code&gt; &lt;/a&gt; 의 구현 인 하나의 인수를 취하는 하나의 공용 생성자가 있습니다. 리플렉션 API를 사용하여 퍼블릭 생성자에 액세스하는 대신 &lt;a href=&quot;proxy#getProxyClass-java.lang.ClassLoader-java.lang.Class...-&quot;&gt; &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; &lt;/a&gt; 호출 작업과 생성자 호출 호출 핸들러 를 결합한 &lt;a href=&quot;proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt; &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; &lt;/a&gt; 메소드 를 호출하여 프록시 인스턴스를 작성할 수도 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f1c9b2b8ca787a68b327181bc7d2ab469b20a0e3" translate="yes" xml:space="preserve">
          <source>Each proxy instance has an associated invocation handler, the one that was passed to its constructor. The static &lt;a href=&quot;#getInvocationHandler(java.lang.Object)&quot;&gt;&lt;code&gt;Proxy.getInvocationHandler&lt;/code&gt;&lt;/a&gt; method will return the invocation handler associated with the proxy instance passed as its argument.</source>
          <target state="translated">각 프록시 인스턴스에는 생성자에 전달 된 호출 핸들러가 연관되어 있습니다. 정적 &lt;a href=&quot;#getInvocationHandler(java.lang.Object)&quot;&gt; &lt;code&gt;Proxy.getInvocationHandler&lt;/code&gt; &lt;/a&gt; 메소드는 인수로 전달 된 프록시 인스턴스와 연관된 호출 핸들러를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="295ede88a9dcd8719a71bb39c67706b4af5059f3" translate="yes" xml:space="preserve">
          <source>Each proxy instance has an associated invocation handler, the one that was passed to its constructor. The static &lt;a href=&quot;proxy#getInvocationHandler-java.lang.Object-&quot;&gt;&lt;code&gt;Proxy.getInvocationHandler&lt;/code&gt;&lt;/a&gt; method will return the invocation handler associated with the proxy instance passed as its argument.</source>
          <target state="translated">각 프록시 인스턴스에는 생성자에 전달 된 관련 호출 핸들러가 있습니다. 정적 &lt;a href=&quot;proxy#getInvocationHandler-java.lang.Object-&quot;&gt; &lt;code&gt;Proxy.getInvocationHandler&lt;/code&gt; &lt;/a&gt; 메소드는 인수로 전달 된 프록시 인스턴스와 연관된 호출 핸들러를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="67ec388961cae122e1aeaea5e044281ae2107003" translate="yes" xml:space="preserve">
          <source>Each proxy instance has an associated invocation handler. When a method is invoked on a proxy instance, the method invocation is encoded and dispatched to the &lt;code&gt;invoke&lt;/code&gt; method of its invocation handler.</source>
          <target state="translated">각 프록시 인스턴스에는 연관된 호출 핸들러가 있습니다. 프록시 인스턴스에서 메소드가 호출되면 메소드 호출이 인코딩되어 호출 핸들러 의 &lt;code&gt;invoke&lt;/code&gt; 메소드로 전달됩니다 .</target>
        </trans-unit>
        <trans-unit id="7f962b6257b24c91cf89e8dec117771a794ef205" translate="yes" xml:space="preserve">
          <source>Each reference-object type is implemented by a subclass of the abstract base &lt;a href=&quot;reference&quot;&gt;&lt;code&gt;Reference&lt;/code&gt;&lt;/a&gt; class. An instance of one of these subclasses encapsulates a single reference to a particular object, called the &lt;em&gt;referent&lt;/em&gt;. Every reference object provides methods for getting and clearing the reference. Aside from the clearing operation reference objects are otherwise immutable, so no &lt;code&gt;set&lt;/code&gt; operation is provided. A program may further subclass these subclasses, adding whatever fields and methods are required for its purposes, or it may use these subclasses without change.</source>
          <target state="translated">각 참조 객체 유형은 추상 기본 &lt;a href=&quot;reference&quot;&gt; &lt;code&gt;Reference&lt;/code&gt; &lt;/a&gt; 클래스 의 하위 클래스에 의해 구현됩니다 . 이러한 하위 클래스 중 하나의 인스턴스는 &lt;em&gt;referent&lt;/em&gt; 라는 특정 객체에 대한 단일 참조를 캡슐화합니다 . 모든 참조 객체는 참조를 가져오고 지우는 방법을 제공합니다. 지우기 작업을 제외하고 참조 개체는 변경이 불가능하므로 &lt;code&gt;set&lt;/code&gt; 작업이 제공 되지 않습니다 . 프로그램은 이러한 서브 클래스를 추가로 서브 클래 싱하여 목적에 필요한 필드와 메소드를 추가하거나 변경없이 이러한 서브 클래스를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7c8ce44b1e764007312807fbf1d2280ffc542191" translate="yes" xml:space="preserve">
          <source>Each remote interface must either be public and reside in a package that is &lt;a href=&quot;../../../../java.base/java/lang/module#isExported(java.lang.String,java.lang.Module)&quot;&gt;exported&lt;/a&gt; to at least the &lt;code&gt;java.rmi&lt;/code&gt; module, or it must reside in a package that is &lt;a href=&quot;../../../../java.base/java/lang/module#isOpen(java.lang.String,java.lang.Module)&quot;&gt;open&lt;/a&gt; to at least the &lt;code&gt;java.rmi&lt;/code&gt; module.</source>
          <target state="translated">각 원격 인터페이스는 공용이어야 하며 최소한 &lt;code&gt;java.rmi&lt;/code&gt; 모듈로 &lt;a href=&quot;../../../../java.base/java/lang/module#isExported(java.lang.String,java.lang.Module)&quot;&gt;내 보낸&lt;/a&gt; 패키지에 상주하거나 최소한 &lt;code&gt;java.rmi&lt;/code&gt; 에&lt;a href=&quot;../../../../java.base/java/lang/module#isOpen(java.lang.String,java.lang.Module)&quot;&gt;열려&lt;/a&gt; 있는 패키지에 상주해야합니다. 모듈.</target>
        </trans-unit>
        <trans-unit id="e4fa56c08a79e653dbfc2dc554b903cdcaf57d3f" translate="yes" xml:space="preserve">
          <source>Each resource bundle in a family contains the same items, but the items have been translated for the locale represented by that resource bundle. For example, both &quot;MyResources&quot; and &quot;MyResources_de&quot; may have a &lt;code&gt;String&lt;/code&gt; that's used on a button for canceling operations. In &quot;MyResources&quot; the &lt;code&gt;String&lt;/code&gt; may contain &quot;Cancel&quot; and in &quot;MyResources_de&quot; it may contain &quot;Abbrechen&quot;.</source>
          <target state="translated">제품군의 각 자원 번들에는 동일한 항목이 포함되어 있지만 해당 자원 번들로 표시되는 로케일로 항목이 변환되었습니다. 예를 들어, &quot;MyResources&quot;및 &quot;MyResources_de&quot;둘 다 조작 취소를 위해 단추에 사용되는 &lt;code&gt;String&lt;/code&gt; 을 가질 수 있습니다 . &quot;MyResources&quot;에서 &lt;code&gt;String&lt;/code&gt; 은 &quot;Cancel&quot;을 포함 할 수 있고 &quot;MyResources_de&quot;에서 &quot;Abbrechen&quot;을 포함 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4d0bcb7dd76220d8c20abfafeece056add1af87c" translate="yes" xml:space="preserve">
          <source>Each returned &lt;code&gt;Chronology&lt;/code&gt; is available for use in the system. The set of chronologies includes the system chronologies and any chronologies provided by the application via ServiceLoader configuration.</source>
          <target state="translated">반환 된 각 &lt;code&gt;Chronology&lt;/code&gt; 시스템에서 사용할 수 있습니다. 연대기 세트에는 시스템 연대기 및 ServiceLoader 구성을 통해 애플리케이션이 제공하는 모든 연대기가 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4ef148205bd5bfd7b3e9dbe0dbf368bcaf66fc0c" translate="yes" xml:space="preserve">
          <source>Each revoked certificate is identified in a CRL by its certificate serial number. When a certificate-using system uses a certificate (e.g., for verifying a remote user's digital signature), that system not only checks the certificate signature and validity but also acquires a suitably- recent CRL and checks that the certificate serial number is not on that CRL. The meaning of &quot;suitably-recent&quot; may vary with local policy, but it usually means the most recently-issued CRL. A CA issues a new CRL on a regular periodic basis (e.g., hourly, daily, or weekly). Entries are added to CRLs as revocations occur, and an entry may be removed when the certificate expiration date is reached.</source>
          <target state="translated">해지 된 각 인증서는 CRL에서 인증서 일련 번호로 식별됩니다. 인증서 사용 시스템이 인증서를 사용하는 경우 (예 : 원격 사용자의 디지털 서명 확인), 시스템은 인증서 서명 및 유효성을 검사 할뿐만 아니라 적절하게 최근의 CRL을 획득하고 인증서 일련 번호가 해당 인증서에 없는지 확인합니다. CRL. &quot;적절한 최근&quot;의 의미는 지역 정책에 따라 다를 수 있지만 일반적으로 가장 최근에 발행 된 CRL을 의미합니다. CA는 정기적으로 (예 : 시간별, 일별 또는 주별) 새 CRL을 발급합니다. 해지가 발생하면 CRL에 항목이 추가되고 인증서 만료 날짜에 도달하면 항목이 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db350bf10d3e66364747bf91e7b7f389f31a3615" translate="yes" xml:space="preserve">
          <source>Each root module is located using the given &lt;code&gt;before&lt;/code&gt; module finder. If a module is not found then it is located in the parent configuration as if by invoking the &lt;a href=&quot;#findModule(java.lang.String)&quot;&gt;&lt;code&gt;findModule&lt;/code&gt;&lt;/a&gt; method on each parent in iteration order. If not found then the module is located using the given &lt;code&gt;after&lt;/code&gt; module finder. The same search order is used to locate transitive dependences. Root modules or dependences that are located in a parent configuration are resolved no further and are not included in the resulting configuration.</source>
          <target state="translated">각 루트 모듈은 주어진 &lt;code&gt;before&lt;/code&gt; 모듈 파인더를 사용하여 찾습니다. 모듈을 찾을 수 없으면 반복 순서로 각 상위에서 &lt;a href=&quot;#findModule(java.lang.String)&quot;&gt; &lt;code&gt;findModule&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것처럼 상위 구성 에 있습니다. 찾을 수 없으면 주어진 &lt;code&gt;after&lt;/code&gt; module finder를 사용하여 모듈을 찾습니다. 전 이적 종속성을 찾는 데 동일한 검색 순서가 사용됩니다. 상위 구성에있는 루트 모듈 또는 종속성은 더 이상 해결되지 않으며 결과 구성에 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ab69b8d97f0843c200980c52dbafa3fedf56bd64" translate="yes" xml:space="preserve">
          <source>Each rounding mode description includes a table listing how different two-digit decimal values would round to a one digit decimal value under the rounding mode in question. The result column in the tables could be gotten by creating a &lt;code&gt;BigDecimal&lt;/code&gt; number with the specified value, forming a &lt;a href=&quot;mathcontext&quot;&gt;&lt;code&gt;MathContext&lt;/code&gt;&lt;/a&gt; object with the proper settings (&lt;code&gt;precision&lt;/code&gt; set to &lt;code&gt;1&lt;/code&gt;, and the &lt;code&gt;roundingMode&lt;/code&gt; set to the rounding mode in question), and calling &lt;a href=&quot;bigdecimal#round(java.math.MathContext)&quot;&gt;&lt;code&gt;round&lt;/code&gt;&lt;/a&gt; on this number with the proper &lt;code&gt;MathContext&lt;/code&gt;. A summary table showing the results of these rounding operations for all rounding modes appears below.</source>
          <target state="translated">각 반올림 모드 설명에는 해당 반올림 모드에서 서로 다른 두 자리 십진수 값이 한 자리 십진수 값으로 반올림되는 방법을 나열하는 표가 포함되어 있습니다. 표에 제시된 결과 열이 만들어받은 수 &lt;code&gt;BigDecimal&lt;/code&gt; 지정된 값 번호를 성형 &lt;a href=&quot;mathcontext&quot;&gt; &lt;code&gt;MathContext&lt;/code&gt; &lt;/a&gt; 적절한 설정 오브젝트 ( &lt;code&gt;precision&lt;/code&gt; 로 설정 &lt;code&gt;1&lt;/code&gt; , 상기 &lt;code&gt;roundingMode&lt;/code&gt; 당해 반올림 모드로 설정), 및 호출 &lt;a href=&quot;bigdecimal#round(java.math.MathContext)&quot;&gt; &lt;code&gt;round&lt;/code&gt; &lt;/a&gt; 이를 적절한 &lt;code&gt;MathContext&lt;/code&gt; 가있는 숫자입니다 . 모든 반올림 모드에 대한 이러한 반올림 작업의 결과를 보여주는 요약 테이블이 아래에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="16ad7bc118cab62541d32ce735ae842b5ce036ad" translate="yes" xml:space="preserve">
          <source>Each rounding mode description includes a table listing how different two-digit decimal values would round to a one digit decimal value under the rounding mode in question. The result column in the tables could be gotten by creating a &lt;code&gt;BigDecimal&lt;/code&gt; number with the specified value, forming a &lt;a href=&quot;mathcontext&quot;&gt;&lt;code&gt;MathContext&lt;/code&gt;&lt;/a&gt; object with the proper settings (&lt;code&gt;precision&lt;/code&gt; set to &lt;code&gt;1&lt;/code&gt;, and the &lt;code&gt;roundingMode&lt;/code&gt; set to the rounding mode in question), and calling &lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt;&lt;code&gt;round&lt;/code&gt;&lt;/a&gt; on this number with the proper &lt;code&gt;MathContext&lt;/code&gt;. A summary table showing the results of these rounding operations for all rounding modes appears below.</source>
          <target state="translated">각 반올림 모드 설명에는 해당 반올림 모드에서 서로 다른 두 자리 10 진수 값이 1 자리 10 진수 값으로 반올림되는 방법이 나와있는 표가 포함되어 있습니다. 표에 제시된 결과 열이 만들어받은 수 &lt;code&gt;BigDecimal&lt;/code&gt; 지정된 값 번호를 성형 &lt;a href=&quot;mathcontext&quot;&gt; &lt;code&gt;MathContext&lt;/code&gt; &lt;/a&gt; 적절한 설정 오브젝트 ( &lt;code&gt;precision&lt;/code&gt; 로 설정 &lt;code&gt;1&lt;/code&gt; , 상기 &lt;code&gt;roundingMode&lt;/code&gt; 당해 반올림 모드로 설정), 및 호출 &lt;a href=&quot;bigdecimal#round-java.math.MathContext-&quot;&gt; &lt;code&gt;round&lt;/code&gt; &lt;/a&gt; 이를 적절한 &lt;code&gt;MathContext&lt;/code&gt; 와 함께 숫자 . 모든 반올림 모드에 대한 이러한 반올림 작업의 결과를 보여주는 요약 테이블이 아래에 나타납니다.</target>
        </trans-unit>
        <trans-unit id="de87eb62fe5f0e9455839ea5be476da76533316c" translate="yes" xml:space="preserve">
          <source>Each row in the &lt;code&gt;ResultSet&lt;/code&gt; is a parameter description or column description with the following fields:</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; 의 각 행 은 다음 필드가있는 매개 변수 설명 또는 열 설명입니다.</target>
        </trans-unit>
        <trans-unit id="d20fb97033b247c5f84bfbf8789d113917f880de" translate="yes" xml:space="preserve">
          <source>Each row in the &lt;code&gt;ResultSet&lt;/code&gt; is a parameter description, column description or return type description with the following fields:</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; 의 각 행 은 다음 필드가있는 매개 변수 설명, 열 설명 또는 리턴 유형 설명입니다.</target>
        </trans-unit>
        <trans-unit id="85c23566253184c749049a21bca595078b457b40" translate="yes" xml:space="preserve">
          <source>Each row may have a baseline; the baseline is determined by the components in that row that have a valid baseline and are aligned along the baseline (the component's anchor value is one of &lt;code&gt;
 BASELINE&lt;/code&gt;, &lt;code&gt;BASELINE_LEADING&lt;/code&gt; or &lt;code&gt;BASELINE_TRAILING&lt;/code&gt;). If none of the components in the row has a valid baseline, the row does not have a baseline.</source>
          <target state="translated">각 행에는 기준선이있을 수 있습니다. 기준선은 유효한 기준선이 있고 기준선을 따라 정렬 된 해당 행의 구성 요소에 의해 결정됩니다 (구성 요소의 앵커 값은 &lt;code&gt; BASELINE&lt;/code&gt; , &lt;code&gt;BASELINE_LEADING&lt;/code&gt; 또는 &lt;code&gt;BASELINE_TRAILING&lt;/code&gt; 중 하나임 ). 행의 구성 요소에 유효한 기준선이없는 경우 행에 기준선이없는 것입니다.</target>
        </trans-unit>
        <trans-unit id="afff2d8eaf293550ee1ffa7f6265f77e7b908339" translate="yes" xml:space="preserve">
          <source>Each scroll bar in this example could be created with code similar to the following:</source>
          <target state="translated">이 예제의 각 스크롤 막대는 다음과 유사한 코드로 만들 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f2a267075acf93d9f65e428d79bf8aefeaba71a1" translate="yes" xml:space="preserve">
          <source>Each service has a provider that offers the service, a type, an algorithm name, and the name of the class that implements the service. Optionally, it also includes a list of alternate algorithm names for this service (aliases) and attributes, which are a map of (name, value) String pairs.</source>
          <target state="translated">각 서비스에는 서비스를 제공하는 공급자, 유형, 알고리즘 이름 및 서비스를 구현하는 클래스 이름이 있습니다. 선택적으로이 서비스에 대한 대체 알고리즘 이름 (별칭) 및 속성 (이름, 값) 문자열 쌍의 맵 목록도 포함합니다.</target>
        </trans-unit>
        <trans-unit id="53b6e2fd52325416fb94ae5510103f0016e4b5ea" translate="yes" xml:space="preserve">
          <source>Each service provider has an optional resource that lists properties specific to that provider. The name of this resource is:</source>
          <target state="translated">각 서비스 공급자에는 해당 공급자에 특정한 속성을 나열하는 선택적 리소스가 있습니다. 이 자원의 이름은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e6ac1a0de770e5c4698c2f0745abb337c8a73c4c" translate="yes" xml:space="preserve">
          <source>Each service provider implementation is named and can be activated via the &lt;a href=&quot;#activate()&quot;&gt;&lt;code&gt;activate()&lt;/code&gt;&lt;/a&gt; method. Service providers can be loaded when the default &lt;a href=&quot;../../java/awt/toolkit&quot;&gt;&lt;code&gt;toolkit&lt;/code&gt;&lt;/a&gt; is initialized.</source>
          <target state="translated">각 서비스 공급자 구현은 이름이 지정되고 &lt;a href=&quot;#activate()&quot;&gt; &lt;code&gt;activate()&lt;/code&gt; &lt;/a&gt; 메서드 를 통해 활성화 될 수 있습니다 . 기본 &lt;a href=&quot;../../java/awt/toolkit&quot;&gt; &lt;code&gt;toolkit&lt;/code&gt; &lt;/a&gt; 이 초기화 될 때 서비스 제공자를로드 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a7b6d2ea66ae4dfff33e0237dccaf90ab711c5f2" translate="yes" xml:space="preserve">
          <source>Each source snippet is represented by an instance of a subclass of &lt;a href=&quot;snippet&quot;&gt;&lt;code&gt;Snippet&lt;/code&gt;&lt;/a&gt;. For example, a statement is represented by an instance of &lt;a href=&quot;statementsnippet&quot;&gt;&lt;code&gt;StatementSnippet&lt;/code&gt;&lt;/a&gt;, and a method declaration is represented by an instance of &lt;a href=&quot;methodsnippet&quot;&gt;&lt;code&gt;MethodSnippet&lt;/code&gt;&lt;/a&gt;. Snippets are created when &lt;a href=&quot;jshell#eval(java.lang.String)&quot;&gt;&lt;code&gt;JShell.eval(String)&lt;/code&gt;&lt;/a&gt; is invoked with an input which includes one or more snippets of code.</source>
          <target state="translated">각 소스 스 니펫은 &lt;a href=&quot;snippet&quot;&gt; &lt;code&gt;Snippet&lt;/code&gt; &lt;/a&gt; 하위 클래스의 인스턴스로 표현됩니다 . 예를 들어 문은 &lt;a href=&quot;statementsnippet&quot;&gt; &lt;code&gt;StatementSnippet&lt;/code&gt; &lt;/a&gt; 의 인스턴스로 표현되고 메서드 선언은 &lt;a href=&quot;methodsnippet&quot;&gt; &lt;code&gt;MethodSnippet&lt;/code&gt; &lt;/a&gt; 의 인스턴스로 표현됩니다 . 코드 조각이 하나 이상 포함 된 입력으로 &lt;a href=&quot;jshell#eval(java.lang.String)&quot;&gt; &lt;code&gt;JShell.eval(String)&lt;/code&gt; &lt;/a&gt; 을 호출 하면 조각이 만들어 집니다 .</target>
        </trans-unit>
        <trans-unit id="5ebfe680ac13f8a894e9241d9f8bb1ab4eb08143" translate="yes" xml:space="preserve">
          <source>Each state displays a progress in a platform-dependent way.</source>
          <target state="translated">각 상태는 플랫폼에 따라 진행 상황을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="947a4a3bac9b13f4588b4bbdc024a61f9cf7e54d" translate="yes" xml:space="preserve">
          <source>Each string returned in the set must be a period separated sequence of &lt;a href=&quot;../../lang/model/sourceversion#isIdentifier(java.lang.CharSequence)&quot;&gt;identifiers&lt;/a&gt;:</source>
          <target state="translated">집합에 반환 된 각 문자열은 마침표로 구분 된 &lt;a href=&quot;../../lang/model/sourceversion#isIdentifier(java.lang.CharSequence)&quot;&gt;식별자&lt;/a&gt; 시퀀스 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="68225e69d8223f42292918c2840519ebc09c2a9a" translate="yes" xml:space="preserve">
          <source>Each string returned in the set must be a period separated sequence of &lt;a href=&quot;../../lang/model/sourceversion#isIdentifier-java.lang.CharSequence-&quot;&gt;identifiers&lt;/a&gt;:</source>
          <target state="translated">집합에 반환 된 각 문자열은 마침표로 구분 된 &lt;a href=&quot;../../lang/model/sourceversion#isIdentifier-java.lang.CharSequence-&quot;&gt;식별자&lt;/a&gt; 시퀀스 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="29d53ac4ebdabf077e56b1744a2b04ec6c72de3d" translate="yes" xml:space="preserve">
          <source>Each string returned in the set must be accepted by the following grammar:</source>
          <target state="translated">세트에 리턴 된 각 문자열은 다음 문법으로 승인되어야합니다.</target>
        </trans-unit>
        <trans-unit id="dd276d8fbdecb3a8e77edb016e17592db14aee02" translate="yes" xml:space="preserve">
          <source>Each subclass of this class defines two categories of</source>
          <target state="translated">이 클래스의 각 서브 클래스는</target>
        </trans-unit>
        <trans-unit id="eb77807963caaf41ebaf21fc47796c1fcbfbfb39" translate="yes" xml:space="preserve">
          <source>Each subclass should state the precise behavior of this method so that users and developers know what to expect.</source>
          <target state="translated">각 서브 클래스는 사용자와 개발자가 무엇을 기대할 수 있도록이 메소드의 정확한 동작을 명시해야합니다.</target>
        </trans-unit>
        <trans-unit id="b8d250c965f624d9973aaef0f1cfcbf17bd3a857" translate="yes" xml:space="preserve">
          <source>Each subject alternative name in the &lt;code&gt;Collection&lt;/code&gt; may be specified either as a &lt;code&gt;String&lt;/code&gt; or as an ASN.1 encoded byte array. For more details about the formats used, see &lt;a href=&quot;#addSubjectAlternativeName(int,java.lang.String)&quot;&gt;&lt;code&gt;addSubjectAlternativeName(int type, String name)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#addSubjectAlternativeName(int,byte%5B%5D)&quot;&gt;&lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Collection&lt;/code&gt; 각 주제 대체 이름은 &lt;code&gt;String&lt;/code&gt; 또는 ASN.1 인코딩 바이트 배열로 지정 될 수 있습니다 . 사용되는 형식에 대한 자세한 내용은 &lt;a href=&quot;#addSubjectAlternativeName(int,java.lang.String)&quot;&gt; &lt;code&gt;addSubjectAlternativeName(int type, String name)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#addSubjectAlternativeName(int,byte%5B%5D)&quot;&gt; &lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="4a02ef9eaef14560e891b0e332f4c9637c765295" translate="yes" xml:space="preserve">
          <source>Each subject alternative name in the &lt;code&gt;Collection&lt;/code&gt; may be specified either as a &lt;code&gt;String&lt;/code&gt; or as an ASN.1 encoded byte array. For more details about the formats used, see &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-java.lang.String-&quot;&gt;&lt;code&gt;addSubjectAlternativeName(int type, String name)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-byte:A-&quot;&gt;&lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;Collection&lt;/code&gt; 의 각 주제 대체 이름은 &lt;code&gt;String&lt;/code&gt; 또는 ASN.1로 인코딩 된 바이트 배열로 지정할 수 있습니다 . 사용되는 형식에 대한 자세한 내용은 &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-java.lang.String-&quot;&gt; &lt;code&gt;addSubjectAlternativeName(int type, String name)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;x509certselector#addSubjectAlternativeName-int-byte:A-&quot;&gt; &lt;code&gt;addSubjectAlternativeName(int type, byte [] name)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5efd1df1b2a9f178adf85be2a61638dd17ead995" translate="yes" xml:space="preserve">
          <source>Each subpath can be closed manually by ending the last segment in the subpath on the same coordinate as the beginning &quot;MOVETO&quot; segment for that subpath or by using a &quot;CLOSE&quot; segment to append a line segment from the last point back to the first. Be aware that manually closing an outline as opposed to using a &quot;CLOSE&quot; segment to close the path might result in different line style decorations being used at the end points of the subpath. For example, the &lt;a href=&quot;../basicstroke&quot;&gt;&lt;code&gt;BasicStroke&lt;/code&gt;&lt;/a&gt; object uses a line &quot;JOIN&quot; decoration to connect the first and last points if a &quot;CLOSE&quot; segment is encountered, whereas simply ending the path on the same coordinate as the beginning coordinate results in line &quot;CAP&quot; decorations being used at the ends.</source>
          <target state="translated">각 하위 경로는 해당 하위 경로의 시작 &quot;MOVETO&quot;세그먼트와 동일한 좌표에서 하위 경로의 마지막 세그먼트를 종료하거나 &quot;CLOSE&quot;세그먼트를 사용하여 마지막 지점에서 첫 번째 지점으로 다시 선 세그먼트를 추가하여 수동으로 닫을 수 있습니다. 경로를 닫기 위해 &quot;CLOSE&quot;세그먼트를 사용하는 것과는 반대로 외곽선을 수동으로 닫으면 하위 경로의 끝점에서 다른 선 스타일 장식이 사용될 수 있습니다. 예를 들어, &lt;a href=&quot;../basicstroke&quot;&gt; &lt;code&gt;BasicStroke&lt;/code&gt; &lt;/a&gt; 객체는 &quot;CLOSE&quot;세그먼트가 발견되면 첫 번째 지점과 마지막 지점을 연결하기 위해 선 &quot;JOIN&quot;장식을 사용하는 반면, 시작 좌표와 동일한 좌표에서 경로를 끝내면 &quot;CAP&quot;장식이 표시됩니다. 끝에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="20a464bf89048950dbb6f72154be12ce1ae8128c" translate="yes" xml:space="preserve">
          <source>Each table description has the following columns:</source>
          <target state="translated">각 테이블 설명에는 다음 열이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad0afa5a231d77ce08ec9ac6b13d21a485cc5195" translate="yes" xml:space="preserve">
          <source>Each thread holds an implicit reference to its copy of a thread-local variable as long as the thread is alive and the &lt;code&gt;ThreadLocal&lt;/code&gt; instance is accessible; after a thread goes away, all of its copies of thread-local instances are subject to garbage collection (unless other references to these copies exist).</source>
          <target state="translated">스레드가 활성 상태이고 &lt;code&gt;ThreadLocal&lt;/code&gt; 인스턴스에 액세스 할 수 있으면 각 스레드는 스레드 로컬 변수의 사본에 대한 내재적 참조를 보유합니다 . 스레드가 사라진 후에는 스레드 로컬 인스턴스의 모든 복사본이 가비지 수집 대상이됩니다 (이 복사본에 대한 다른 참조가없는 한).</target>
        </trans-unit>
        <trans-unit id="bcdd3e05535987ced116009335109ebc7bf40dfd" translate="yes" xml:space="preserve">
          <source>Each time a client connection is made or broken, a notification of class &lt;a href=&quot;jmxconnectionnotification&quot;&gt;&lt;code&gt;JMXConnectionNotification&lt;/code&gt;&lt;/a&gt; is emitted.</source>
          <target state="translated">클라이언트 연결이 설정되거나 끊어 질 때마다 &lt;a href=&quot;jmxconnectionnotification&quot;&gt; &lt;code&gt;JMXConnectionNotification&lt;/code&gt; &lt;/a&gt; 클래스의 알림 이 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="b28a1f2d1535d1e0a7c78f155e0f38ebb44fa227" translate="yes" xml:space="preserve">
          <source>Each time this method is called and the reading of the file succeeds with no exception (say, I/O error or file format error), the result should be saved for &lt;code&gt;principal&lt;/code&gt;. The implementation can also save keys for other principals having keys in the same keytab object if convenient.</source>
          <target state="translated">이 메소드가 호출되고 파일 읽기가 예외없이 성공할 때마다 (예 : I / O 오류 또는 파일 형식 오류) 결과는 &lt;code&gt;principal&lt;/code&gt; 에 저장되어야합니다 . 구현시 편리한 경우 동일한 키탭 객체에 키가있는 다른 보안 주체의 키를 저장할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="4499ef7bff9b468ad4c94daff0d721abad2fec63" translate="yes" xml:space="preserve">
          <source>Each time this method is called, the existing buffer strategy for this component is discarded.</source>
          <target state="translated">이 메서드가 호출 될 때마다이 구성 요소에 대한 기존 버퍼 전략이 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="45abc3299550d7741c179824a2718e967daf227e" translate="yes" xml:space="preserve">
          <source>Each type description has the following columns:</source>
          <target state="translated">각 유형 설명에는 다음 열이 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5c15fae8f08888493f2e6722e42350e0b13e7cb" translate="yes" xml:space="preserve">
          <source>Each type is represented by its &lt;a href=&quot;../class#getSimpleName()&quot;&gt;&lt;code&gt;simple name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">각 유형은 &lt;a href=&quot;../class#getSimpleName()&quot;&gt; &lt;code&gt;simple name&lt;/code&gt; &lt;/a&gt; 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="a896189259e1fefee623bcac0a3f0eea065a7550" translate="yes" xml:space="preserve">
          <source>Each type is represented by its &lt;a href=&quot;../class#getSimpleName--&quot;&gt;&lt;code&gt;simple name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">각 유형은 &lt;a href=&quot;../class#getSimpleName--&quot;&gt; &lt;code&gt;simple name&lt;/code&gt; &lt;/a&gt; 표시됩니다 .</target>
        </trans-unit>
        <trans-unit id="705eb480b415dd26023cb12ca8c8cdf975ba93fb" translate="yes" xml:space="preserve">
          <source>Each vector tries to optimize storage management by maintaining a &lt;code&gt;capacity&lt;/code&gt; and a &lt;code&gt;capacityIncrement&lt;/code&gt;. The &lt;code&gt;capacity&lt;/code&gt; is always at least as large as the vector size; it is usually larger because as components are added to the vector, the vector's storage increases in chunks the size of &lt;code&gt;capacityIncrement&lt;/code&gt;. An application can increase the capacity of a vector before inserting a large number of components; this reduces the amount of incremental reallocation.</source>
          <target state="translated">각 벡터는 &lt;code&gt;capacity&lt;/code&gt; 과 capacityIncrement 를 유지하여 스토리지 관리를 최적화 &lt;code&gt;capacityIncrement&lt;/code&gt; . &lt;code&gt;capacity&lt;/code&gt; 적어도 벡터의 크기가 큰로서 항상; 구성 요소가 벡터에 추가 될 때 벡터의 저장 &lt;code&gt;capacityIncrement&lt;/code&gt; 은 capacityIncrement 크기의 청크가 증가하기 때문에 일반적으로 더 큽니다 . 응용 프로그램은 많은 수의 구성 요소를 삽입하기 전에 벡터의 용량을 늘릴 수 있습니다. 이는 증분 재 할당량을 줄입니다.</target>
        </trans-unit>
        <trans-unit id="c9385be5922e4106519d7a87eb5af865b2439a01" translate="yes" xml:space="preserve">
          <source>Earlier eras have sequentially lower values, which may be negative.</source>
          <target state="translated">이전 시대는 순차적으로 낮은 값을 가지며 이는 음수 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="85a043bbea95b4de1c928a747210bf7d21cd3fa9" translate="yes" xml:space="preserve">
          <source>Early Delay(ms)</source>
          <target state="translated">조기 지연 (ms)</target>
        </trans-unit>
        <trans-unit id="ab079413746f0381de30564c42ac98e28aa04795" translate="yes" xml:space="preserve">
          <source>Early Intensity (dB)</source>
          <target state="translated">초기 강도 (dB)</target>
        </trans-unit>
        <trans-unit id="d31fe460072ae7b7a89d7d4b787fb1f1a8fad238" translate="yes" xml:space="preserve">
          <source>Ease-of-use constant for &lt;code&gt;getAlignmentX&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getAlignmentX&lt;/code&gt; 에 대한 사용 용이성 상수입니다 .</target>
        </trans-unit>
        <trans-unit id="ff930ca0fd3f734413ecb1349336b2174b39c042" translate="yes" xml:space="preserve">
          <source>Ease-of-use constant for &lt;code&gt;getAlignmentX&lt;/code&gt;. Specifies an alignment to the left side of the component.</source>
          <target state="translated">&lt;code&gt;getAlignmentX&lt;/code&gt; 에 대한 사용 용이성 상수입니다 . 구성 요소의 왼쪽 정렬을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="518135d7cb5f7389d8e39934540be0f109480ee5" translate="yes" xml:space="preserve">
          <source>Ease-of-use constant for &lt;code&gt;getAlignmentX&lt;/code&gt;. Specifies an alignment to the right side of the component.</source>
          <target state="translated">&lt;code&gt;getAlignmentX&lt;/code&gt; 에 대한 사용 용이성 상수입니다 . 구성 요소의 오른쪽 정렬을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="24c1aa904a21f7e6ae839023dcac6c131eed8003" translate="yes" xml:space="preserve">
          <source>Ease-of-use constant for &lt;code&gt;getAlignmentY()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getAlignmentY()&lt;/code&gt; 대한 사용하기 쉬운 상수 .</target>
        </trans-unit>
        <trans-unit id="b4b1c8c61ed0b349dc2f108662113aa522994569" translate="yes" xml:space="preserve">
          <source>Ease-of-use constant for &lt;code&gt;getAlignmentY()&lt;/code&gt;. Specifies an alignment to the top of the component.</source>
          <target state="translated">&lt;code&gt;getAlignmentY()&lt;/code&gt; 대한 사용하기 쉬운 상수 . 구성 요소 상단에 대한 정렬을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="ef0e1e93d6e28da97c89cc010d6a434478f6f73a" translate="yes" xml:space="preserve">
          <source>Ease-of-use constant for &lt;code&gt;getAlignmentY&lt;/code&gt; and &lt;code&gt;getAlignmentX&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getAlignmentY&lt;/code&gt; 및 &lt;code&gt;getAlignmentX&lt;/code&gt; 에 대한 사용 용이성 상수입니다 .</target>
        </trans-unit>
        <trans-unit id="e93cc15ed08cdbdf4eb997d4499de87c5c1d8715" translate="yes" xml:space="preserve">
          <source>Ease-of-use constant for &lt;code&gt;getAlignmentY&lt;/code&gt; and &lt;code&gt;getAlignmentX&lt;/code&gt;. Specifies an alignment to the center of the component</source>
          <target state="translated">&lt;code&gt;getAlignmentY&lt;/code&gt; 및 사용하기 쉬운 상수 &lt;code&gt;getAlignmentX&lt;/code&gt; 에 . 구성 요소 중심에 대한 정렬을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a96d75e3c5bcecee002a933ed55c4b2819596d95" translate="yes" xml:space="preserve">
          <source>Ease-of-use constant for &lt;code&gt;getAlignmentY&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;getAlignmentY&lt;/code&gt; 에 대한 사용 용이성 상수 .</target>
        </trans-unit>
        <trans-unit id="eb0aa3a62d07190a6e51f2d3ea3573e53ff171a3" translate="yes" xml:space="preserve">
          <source>Ease-of-use constant for &lt;code&gt;getAlignmentY&lt;/code&gt;. Specifies an alignment to the bottom of the component.</source>
          <target state="translated">&lt;code&gt;getAlignmentY&lt;/code&gt; 에 대한 사용 용이성 상수 . 구성 요소 하단에 대한 정렬을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="a7b9031e8992ebc9a8063a4e098ad122746e6844" translate="yes" xml:space="preserve">
          <source>East pane</source>
          <target state="translated">동쪽 창</target>
        </trans-unit>
        <trans-unit id="68aba8b862b8e5ee91ba876653f3b26cb358d31c" translate="yes" xml:space="preserve">
          <source>EdDSAParameterSpec</source>
          <target state="translated">EdDSAParameterSpec</target>
        </trans-unit>
        <trans-unit id="200887d84a9190e4d75b12e8f860a0c2d1680639" translate="yes" xml:space="preserve">
          <source>EdECKey</source>
          <target state="translated">EdECKey</target>
        </trans-unit>
        <trans-unit id="79885c14be1b16b6ef345aec055c560600ed9d39" translate="yes" xml:space="preserve">
          <source>EdECPoint</source>
          <target state="translated">EdECPoint</target>
        </trans-unit>
        <trans-unit id="6ef02e2a42b17b2e931cc7f1451d7213f993d7e2" translate="yes" xml:space="preserve">
          <source>EdECPrivateKey</source>
          <target state="translated">EdECPrivateKey</target>
        </trans-unit>
        <trans-unit id="bda54a50e2e9703ef378ffd61389c8e5a96881b7" translate="yes" xml:space="preserve">
          <source>EdECPrivateKeySpec</source>
          <target state="translated">EdECPrivateKeySpec</target>
        </trans-unit>
        <trans-unit id="2a318bc3677cd186cbf0b97782389821d292f458" translate="yes" xml:space="preserve">
          <source>EdECPublicKey</source>
          <target state="translated">EdECPublicKey</target>
        </trans-unit>
        <trans-unit id="480f21c4fecfd26bbe1220ea70a34dde4156cbe2" translate="yes" xml:space="preserve">
          <source>EdECPublicKeySpec</source>
          <target state="translated">EdECPublicKeySpec</target>
        </trans-unit>
        <trans-unit id="dcd5defeb7fd16b6d3f503044c79a0895e5d8c67" translate="yes" xml:space="preserve">
          <source>Editing container, will contain the &lt;code&gt;editorComponent&lt;/code&gt;.</source>
          <target state="translated">편집 컨테이너, &lt;code&gt;editorComponent&lt;/code&gt; 포함 .</target>
        </trans-unit>
        <trans-unit id="fc7ab9e81de7036ce5e88554d1f2551ae7112bbf" translate="yes" xml:space="preserve">
          <source>Editor for the entries.</source>
          <target state="translated">항목 편집자.</target>
        </trans-unit>
        <trans-unit id="a0867869473e2e6e74c9f2c21fbd57cbfb65b3f8" translate="yes" xml:space="preserve">
          <source>Editor for the entries. Default is &lt;code&gt;null&lt;/code&gt; (tree is not editable).</source>
          <target state="translated">항목 편집자. 기본값은 &lt;code&gt;null&lt;/code&gt; 입니다. (트리는 편집 할 수 없음).</target>
        </trans-unit>
        <trans-unit id="97b53892723fd5f7cd72a34d7feb5163533f3204" translate="yes" xml:space="preserve">
          <source>Editor for the tree.</source>
          <target state="translated">트리에 대한 편집기.</target>
        </trans-unit>
        <trans-unit id="7f57c8270d06d66858e3af17ca28aef216c6db6c" translate="yes" xml:space="preserve">
          <source>Editor handling the editing.</source>
          <target state="translated">편집을 처리하는 편집자.</target>
        </trans-unit>
        <trans-unit id="f6d143fe56e700f06129350470e021c80290a4ec" translate="yes" xml:space="preserve">
          <source>EditorContainer</source>
          <target state="translated">EditorContainer</target>
        </trans-unit>
        <trans-unit id="d1d2c37991924c7c618b3be6da621a27dd88a2ba" translate="yes" xml:space="preserve">
          <source>EditorDelegate</source>
          <target state="translated">EditorDelegate</target>
        </trans-unit>
        <trans-unit id="ccb9b5f07fde3d42d7618115f0ae1c0ad34fd248" translate="yes" xml:space="preserve">
          <source>EditorKit</source>
          <target state="translated">EditorKit</target>
        </trans-unit>
        <trans-unit id="a91825d9324f291b2e2daf016a16685fcabc6803" translate="yes" xml:space="preserve">
          <source>EditorPane region.</source>
          <target state="translated">EditorPane 영역.</target>
        </trans-unit>
        <trans-unit id="3bb500ae2ff0c366b59201e5efbe1ebb21f6f0cd" translate="yes" xml:space="preserve">
          <source>EditorPane region. To bind a style to this &lt;code&gt;Region&lt;/code&gt; use the name &lt;code&gt;EditorPane&lt;/code&gt;.</source>
          <target state="translated">EditorPane 영역. 이 &lt;code&gt;Region&lt;/code&gt; 스타일을 바인딩하려면 &lt;code&gt;EditorPane&lt;/code&gt; 이라는 이름을 사용하십시오. .</target>
        </trans-unit>
        <trans-unit id="9211ae5979703d4b3d87e6495bf857d37006e8ac" translate="yes" xml:space="preserve">
          <source>Effect on</source>
          <target state="translated">영향을 끼치다</target>
        </trans-unit>
        <trans-unit id="23b98c95a06c4a4359b5c46aa20fe23014dc8fc9" translate="yes" xml:space="preserve">
          <source>Effectively the list of preferences now becomes {..., (A, m1), (B, null)}.</source>
          <target state="translated">이제 기본 설정 목록은 {..., (A, m1), (B, null)}이됩니다.</target>
        </trans-unit>
        <trans-unit id="b2e460476cb6c2a3dfb0efc0a704f6ba8dd8febc" translate="yes" xml:space="preserve">
          <source>Eight-bit UCS Transformation Format</source>
          <target state="translated">8 비트 UCS 변환 형식</target>
        </trans-unit>
        <trans-unit id="4ef1415307c2764c7902e5073b06866fb4ef3897" translate="yes" xml:space="preserve">
          <source>Eight-bit UCS Transformation Format.</source>
          <target state="translated">8 비트 UCS 변환 형식.</target>
        </trans-unit>
        <trans-unit id="3bb3b33251059cb5f93747019aa489c21ce5547c" translate="yes" xml:space="preserve">
          <source>Either</source>
          <target state="translated">Either</target>
        </trans-unit>
        <trans-unit id="21437b371f18022b4d09931fdd8d2b1ca638ccec" translate="yes" xml:space="preserve">
          <source>Either &lt;code&gt;isSelected&lt;/code&gt;/&lt;code&gt;setSelected&lt;/code&gt; or &lt;code&gt;getState&lt;/code&gt;/&lt;code&gt;setState&lt;/code&gt; can be used to determine/specify the menu item's selection state. The preferred methods are &lt;code&gt;isSelected&lt;/code&gt; and &lt;code&gt;setSelected&lt;/code&gt;, which work for all menus and buttons. The &lt;code&gt;getState&lt;/code&gt; and &lt;code&gt;setState&lt;/code&gt; methods exist for compatibility with other component sets.</source>
          <target state="translated">하나 &lt;code&gt;isSelected&lt;/code&gt; / &lt;code&gt;setSelected&lt;/code&gt; 또는 &lt;code&gt;getState&lt;/code&gt; 와 / &lt;code&gt;setState&lt;/code&gt; 를은 / 결정하는 메뉴 항목의 선택 상태를 지정할 수 있습니다. 선호하는 메소드는 모든 메뉴와 버튼에 대해 작동하는 &lt;code&gt;isSelected&lt;/code&gt; 및 &lt;code&gt;setSelected&lt;/code&gt; 입니다. &lt;code&gt;getState&lt;/code&gt; 와 &lt;code&gt;setState&lt;/code&gt; 를 메소드는 다른 컴포넌트 세트와의 호환성이 존재한다.</target>
        </trans-unit>
        <trans-unit id="345e98237075cf074936b4456ad9186d211ede5a" translate="yes" xml:space="preserve">
          <source>Either Rt and Ru are the same type, or both are reference types and Rt is a subtype of Ru</source>
          <target state="translated">Rt와 Ru는 동일한 유형이거나 둘 다 참조 유형이며 Rt는 Ru의 하위 유형입니다.</target>
        </trans-unit>
        <trans-unit id="9d3389410ffbf2f9d3f650116f68b30adbe66640" translate="yes" xml:space="preserve">
          <source>Either form of the &lt;code&gt;getStateToBind()&lt;/code&gt; method of a DirStateFactory may be invoked multiple times, possibly using different parameters. The implementation is thread-safe.</source>
          <target state="translated">DirStateFactory 의 &lt;code&gt;getStateToBind()&lt;/code&gt; 메소드 형식은 여러 매개 변수를 사용하여 여러 번 호출 될 수 있습니다. 구현은 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="051758efa142eabb4ee2cd8f1971c235d993cb64" translate="yes" xml:space="preserve">
          <source>Either socket factory may be &lt;code&gt;null&lt;/code&gt;, in which case the corresponding client or server socket creation method of &lt;a href=&quot;rmisocketfactory&quot;&gt;&lt;code&gt;RMISocketFactory&lt;/code&gt;&lt;/a&gt; is used instead.</source>
          <target state="translated">소켓 팩토리는 &lt;code&gt;null&lt;/code&gt; 일 수 있으며 ,이 경우 &lt;a href=&quot;rmisocketfactory&quot;&gt; &lt;code&gt;RMISocketFactory&lt;/code&gt; &lt;/a&gt; 의 해당 클라이언트 또는 서버 소켓 생성 방법이 대신 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="d2b3602ab558974c3cb5aa398f1abc62a336668d" translate="yes" xml:space="preserve">
          <source>Either store the chronology (calendar system) in the user profile or lookup the chronology from the user locale</source>
          <target state="translated">연대기 (달력 시스템)를 사용자 프로필에 저장하거나 사용자 로캘에서 연대기를 조회하십시오.</target>
        </trans-unit>
        <trans-unit id="d4dc08b66484660f9fd2aa82b465cf8b697ae9aa" translate="yes" xml:space="preserve">
          <source>Either the caption or the text may be &lt;code&gt;null&lt;/code&gt;, but an &lt;code&gt;NullPointerException&lt;/code&gt; is thrown if both are &lt;code&gt;null&lt;/code&gt;. When displayed, the caption or text strings may be truncated on some platforms; the number of characters that may be displayed is platform-dependent.</source>
          <target state="translated">캡션 또는 텍스트가 &lt;code&gt;null&lt;/code&gt; 일 수 있지만 둘 다 &lt;code&gt;null&lt;/code&gt; 인 경우 &lt;code&gt;NullPointerException&lt;/code&gt; 이 throw됩니다. . 표시 될 때 일부 플랫폼에서 캡션 또는 텍스트 문자열이 잘릴 수 있습니다. 표시 될 수있는 문자 수는 플랫폼에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="ba9a00474c69db17290f2d39d3d9c815fb41fab2" translate="yes" xml:space="preserve">
          <source>Either the snippet whose change caused this update or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">변경으로 인해이 업데이트가 발생한 스 니펫 또는 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8bc18a4af647581a2ddbb1db44de5dd4b6ac33af" translate="yes" xml:space="preserve">
          <source>Either the snippet whose change caused this update or &lt;code&gt;null&lt;/code&gt;. This returns &lt;code&gt;null&lt;/code&gt; if this change is the creation of a new Snippet via &lt;a href=&quot;jshell#eval(java.lang.String)&quot;&gt;&lt;code&gt;eval&lt;/code&gt;&lt;/a&gt; or it is the explicit drop of a Snippet with &lt;a href=&quot;jshell#drop(jdk.jshell.Snippet)&quot;&gt;&lt;code&gt;drop&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">변경으로 인해이 업데이트가 발생한 스 니펫 또는 &lt;code&gt;null&lt;/code&gt; 입니다. 이 수익률은 &lt;code&gt;null&lt;/code&gt; 이 변경을 통해 새로운 코드 조각의 창조 인 경우 &lt;a href=&quot;jshell#eval(java.lang.String)&quot;&gt; &lt;code&gt;eval&lt;/code&gt; &lt;/a&gt; 하거나와 코드 조각의 명시 드롭입니다 &lt;a href=&quot;jshell#drop(jdk.jshell.Snippet)&quot;&gt; &lt;code&gt;drop&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="0e19e742c3d0ba224db7b90eec3f2e20ef67f4c8" translate="yes" xml:space="preserve">
          <source>Either the stream is unordered, or the collector has the &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt;&lt;code&gt;Collector.Characteristics.UNORDERED&lt;/code&gt;&lt;/a&gt; characteristic.</source>
          <target state="translated">스트림이 정렬되지 않았거나 콜렉터에 &lt;a href=&quot;collector.characteristics#UNORDERED&quot;&gt; &lt;code&gt;Collector.Characteristics.UNORDERED&lt;/code&gt; &lt;/a&gt; 특성이 있습니다.</target>
        </trans-unit>
        <trans-unit id="a51e4cb5590b3755c3eaf82562f6168dc8494534" translate="yes" xml:space="preserve">
          <source>Either the text-argument must already be present in the sequence, or some initial substring of the text-argument must be present. (e.g. &quot;a &amp;lt; b &amp;amp; ae &amp;lt; e&quot; is valid since &quot;a&quot; is present in the sequence before &quot;ae&quot; is reset). In this latter case, &quot;ae&quot; is not entered and treated as a single character; instead, &quot;e&quot; is sorted as if it were expanded to two characters: &quot;a&quot; followed by an &quot;e&quot;. This difference appears in natural languages: in traditional Spanish &quot;ch&quot; is treated as though it contracts to a single character (expressed as &quot;c &amp;lt; ch &amp;lt; d&quot;), while in traditional German a-umlaut is treated as though it expanded to two characters (expressed as &quot;a,A &amp;lt; b,B ... &amp;amp;ae;\u00e3&amp;amp;AE;\u00c3&quot;). [\u00e3 and \u00c3 are, of course, the escape sequences for a-umlaut.]</source>
          <target state="translated">텍스트 인수가 이미 시퀀스에 있거나 텍스트 인수의 초기 하위 문자열이 있어야합니다. (예 : &quot;ae&quot;가 재설정되기 전에 &quot;a&quot;가 시퀀스에 있으므로 &quot;a &amp;lt;b &amp;amp; ae &amp;lt;e&quot;는 유효 함). 후자의 경우 &quot;ae&quot;는 입력되지 않으며 단일 문자로 취급됩니다. 대신 &quot;e&quot;는 &quot;a&quot;다음에 &quot;e&quot;라는 두 문자로 확장 된 것처럼 정렬됩니다. 이 차이는 자연 언어로 나타납니다. 전통적인 스페인어에서 &quot;ch&quot;는 단일 문자 ( &quot;c &amp;lt;ch &amp;lt;d&quot;로 표현됨)로 축소 된 것처럼 취급되지만 전통적인 독일어에서는 a-umlaut가 2로 확장 된 것처럼 처리됩니다 문자 ( &quot;a, A &amp;lt;b, B ... &amp;amp; ae; \ u00e3 &amp;amp; AE; \ u00c3&quot;으로 표시). [\ u00e3 및 \ u00c3은 물론a- 움라우트의 탈출 서열.]</target>
        </trans-unit>
        <trans-unit id="49fa9fd831096c82ab950bc7aa0a0a7ef8a10998" translate="yes" xml:space="preserve">
          <source>Element</source>
          <target state="translated">Element</target>
        </trans-unit>
        <trans-unit id="9996941ca5ede1ec0df239e637066f091586a928" translate="yes" xml:space="preserve">
          <source>Element Detail</source>
          <target state="translated">요소 세부 정보</target>
        </trans-unit>
        <trans-unit id="879dba2d32bcbd884432351be781cbc8253f7d28" translate="yes" xml:space="preserve">
          <source>Element Details</source>
          <target state="translated">요소 세부 정보</target>
        </trans-unit>
        <trans-unit id="cc9af106f99440de8f01cdf729d696761ee61d55" translate="yes" xml:space="preserve">
          <source>Element Type</source>
          <target state="translated">요소 유형</target>
        </trans-unit>
        <trans-unit id="c6db7c4460be51cdc98ae55f6e5d6bba83bd5486" translate="yes" xml:space="preserve">
          <source>Element indicating source of event, or null</source>
          <target state="translated">이벤트 소스를 나타내는 요소 또는 null</target>
        </trans-unit>
        <trans-unit id="c0c92ea18d40088fa08050e63475586b20c779fd" translate="yes" xml:space="preserve">
          <source>Element removal results in two events being fired, the &lt;code&gt;DocumentEvent&lt;/code&gt; for changes in element structure and &lt;code&gt;
 UndoableEditEvent&lt;/code&gt; for changes in document content.</source>
          <target state="translated">요소를 제거하면 두 개의 이벤트가 발생합니다 . 요소 구조 변경에 대한 &lt;code&gt;DocumentEvent&lt;/code&gt; 와 문서 내용 변경에 대한 &lt;code&gt; UndoableEditEvent&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d12bc38d41b177a817f2ed518d23848bd1fe1b45" translate="yes" xml:space="preserve">
          <source>Element types and encodings</source>
          <target state="translated">요소 유형 및 인코딩</target>
        </trans-unit>
        <trans-unit id="f3788f21d8e30d32896fa8ecc2d03e4e26f5a529" translate="yes" xml:space="preserve">
          <source>Element.accept()</source>
          <target state="translated">Element.accept()</target>
        </trans-unit>
        <trans-unit id="7819f3c8316400615edd72f73e6e0e9d615356ae" translate="yes" xml:space="preserve">
          <source>Element.asType()</source>
          <target state="translated">Element.asType()</target>
        </trans-unit>
        <trans-unit id="abb502e59c23584125404a1cbfe853dd7aa35c31" translate="yes" xml:space="preserve">
          <source>Element.equals()</source>
          <target state="translated">Element.equals()</target>
        </trans-unit>
        <trans-unit id="c7384296b6dfcd7df8e56c6618c5d022a41dbfbd" translate="yes" xml:space="preserve">
          <source>Element.getAnnotation()</source>
          <target state="translated">Element.getAnnotation()</target>
        </trans-unit>
        <trans-unit id="1e22efdfe7c4c1847ffdb09b22cd8fb78f4e08b3" translate="yes" xml:space="preserve">
          <source>Element.getAnnotationMirrors()</source>
          <target state="translated">Element.getAnnotationMirrors()</target>
        </trans-unit>
        <trans-unit id="d0c770a5eebd00d985b050e921e5e96f4d31d3c7" translate="yes" xml:space="preserve">
          <source>Element.getEnclosedElements()</source>
          <target state="translated">Element.getEnclosedElements()</target>
        </trans-unit>
        <trans-unit id="42cae139a4a04fffe7981251145ae4bb4f85c4a1" translate="yes" xml:space="preserve">
          <source>Element.getEnclosingElement()</source>
          <target state="translated">Element.getEnclosingElement()</target>
        </trans-unit>
        <trans-unit id="9a6398f79303d00b46b5daa093300527e27a9e32" translate="yes" xml:space="preserve">
          <source>Element.getKind()</source>
          <target state="translated">Element.getKind()</target>
        </trans-unit>
        <trans-unit id="b61135d55d73729b376b547fbca2c9a8e3202a0a" translate="yes" xml:space="preserve">
          <source>Element.getModifiers()</source>
          <target state="translated">Element.getModifiers()</target>
        </trans-unit>
        <trans-unit id="43758e66949c1006ec6fa2978e12fb4961b13e93" translate="yes" xml:space="preserve">
          <source>Element.getSimpleName()</source>
          <target state="translated">Element.getSimpleName()</target>
        </trans-unit>
        <trans-unit id="64b5a1060274ad51443f3c1edb36a42df8a786fe" translate="yes" xml:space="preserve">
          <source>Element.hashCode()</source>
          <target state="translated">Element.hashCode()</target>
        </trans-unit>
        <trans-unit id="b84395f7f7eda12929cdc283fb163987b2e970ff" translate="yes" xml:space="preserve">
          <source>ElementBuffer</source>
          <target state="translated">ElementBuffer</target>
        </trans-unit>
        <trans-unit id="cffab4c6beb33b9e8e4dde3262e3a725abe28506" translate="yes" xml:space="preserve">
          <source>ElementCSSInlineStyle</source>
          <target state="translated">ElementCSSInlineStyle</target>
        </trans-unit>
        <trans-unit id="809a983581d6bb5bdac51511977bddebc09ff12d" translate="yes" xml:space="preserve">
          <source>ElementEdit</source>
          <target state="translated">ElementEdit</target>
        </trans-unit>
        <trans-unit id="03ef23eee6ea95729585eb54d328821a3e1f8fe5" translate="yes" xml:space="preserve">
          <source>ElementFilter</source>
          <target state="translated">ElementFilter</target>
        </trans-unit>
        <trans-unit id="fbdef4c8d40b27fb546a07e72f61db3d33533d01" translate="yes" xml:space="preserve">
          <source>ElementFilter.constructorsIn()</source>
          <target state="translated">ElementFilter.constructorsIn()</target>
        </trans-unit>
        <trans-unit id="66b05c1f09b78e7260695648a745a0392cc39ed8" translate="yes" xml:space="preserve">
          <source>ElementFilter.fieldsIn()</source>
          <target state="translated">ElementFilter.fieldsIn()</target>
        </trans-unit>
        <trans-unit id="39be203ae1064531ddf5282c544ed5f432b4e193" translate="yes" xml:space="preserve">
          <source>ElementFilter.methodsIn()</source>
          <target state="translated">ElementFilter.methodsIn()</target>
        </trans-unit>
        <trans-unit id="bad471bb65e7a8af49561dd245fc4ceafccb79c4" translate="yes" xml:space="preserve">
          <source>ElementFilter.packagesIn()</source>
          <target state="translated">ElementFilter.packagesIn()</target>
        </trans-unit>
        <trans-unit id="15552e436e570e2e014a62a02241b35f94439224" translate="yes" xml:space="preserve">
          <source>ElementFilter.typesIn()</source>
          <target state="translated">ElementFilter.typesIn()</target>
        </trans-unit>
        <trans-unit id="3085293e2af6ea813b860ac88517d51618fd9bb9" translate="yes" xml:space="preserve">
          <source>ElementIterator</source>
          <target state="translated">ElementIterator</target>
        </trans-unit>
        <trans-unit id="6ed9e8c28f3642dc670950d103dd9ec171ebf7ae" translate="yes" xml:space="preserve">
          <source>ElementIterator, as the name suggests, iterates over the Element tree.</source>
          <target state="translated">이름에서 알 수 있듯이 ElementIterator는 요소 트리를 반복합니다.</target>
        </trans-unit>
        <trans-unit id="21a9bf7f8ed489e74db14e3a5f5fd1f035b96760" translate="yes" xml:space="preserve">
          <source>ElementIterator, as the name suggests, iterates over the Element tree. The constructor can be invoked with either Document or an Element as an argument. If the constructor is invoked with a Document as an argument then the root of the iteration is the return value of document.getDefaultRootElement(). The iteration happens in a depth-first manner. In terms of how boundary conditions are handled: a) if next() is called before first() or current(), the root will be returned. b) next() returns null to indicate the end of the list. c) previous() returns null when the current element is the root or next() has returned null. The ElementIterator does no locking of the Element tree. This means that it does not track any changes. It is the responsibility of the user of this class, to ensure that no changes happen during element iteration. Simple usage example: public void iterate() { ElementIterator it = new ElementIterator(root); Element elem; while (true) { if ((elem = next()) != null) { // process element System.out.println(&quot;elem: &quot; + elem.getName()); } else { break; } } }</source>
          <target state="translated">이름에서 알 수 있듯이 ElementIterator는 요소 트리를 반복합니다. 생성자는 Document 또는 Element를 인수로 사용하여 호출 할 수 있습니다. 생성자가 Document를 인수로 사용하여 호출되는 경우 반복의 루트는 document.getDefaultRootElement ()의 반환 값입니다. 반복은 깊이 우선 방식으로 발생합니다. 경계 조건을 처리하는 방법에 관해서 : a) first () 또는 current () 전에 next ()가 호출되면 루트가 반환됩니다. b) next ()는 목록의 끝을 나타 내기 위해 null을 반환합니다. c) previous ()는 현재 요소가 루트이거나 next ()가 null을 반환 한 경우 null을 반환합니다. ElementIterator는 요소 트리를 잠그지 않습니다. 이는 변경 사항을 추적하지 않음을 의미합니다. 요소 반복 중에 변경이 발생하지 않도록하는 것은이 클래스의 사용자의 책임입니다.간단한 사용 예 : public void iterate () {ElementIterator it = new ElementIterator (root); 요소 elem; while (true) {if ((elem = next ())! = null) {// 프로세스 요소 System.out.println ( &quot;elem :&quot;+ elem.getName ()); } else {휴식; }}}</target>
        </trans-unit>
        <trans-unit id="0f34849d331d71c2015ff63f3a57ab4c43ef5b3c" translate="yes" xml:space="preserve">
          <source>ElementKind</source>
          <target state="translated">ElementKind</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
