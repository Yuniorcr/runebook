<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="d309edf78bb778186fb9cb4f6f6c1c3beee8b3fa" translate="yes" xml:space="preserve">
          <source>The height of this &lt;code&gt;RoundRectangle2D&lt;/code&gt;.</source>
          <target state="translated">The height of this &lt;code&gt;RoundRectangle2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3ef74edb4754696c85f7e72673e45ddd4c19614" translate="yes" xml:space="preserve">
          <source>The height of this Raster.</source>
          <target state="translated">The height of this Raster.</target>
        </trans-unit>
        <trans-unit id="edd2ebd147d4048eb2abcbda44a2f200cc96b903" translate="yes" xml:space="preserve">
          <source>The hide-window default window close operation</source>
          <target state="translated">The hide-window default window close operation</target>
        </trans-unit>
        <trans-unit id="5737454dda055bd8bb162cd9eb4846920e7b432e" translate="yes" xml:space="preserve">
          <source>The high threshold value.</source>
          <target state="translated">높은 임계 값입니다.</target>
        </trans-unit>
        <trans-unit id="15326738362d08a71045fe2aaa50b89b8bdc9feb" translate="yes" xml:space="preserve">
          <source>The higher-level code that calls getCustomEditor may either embed the Component in some larger property sheet, or it may put it in its own individual dialog, or ...</source>
          <target state="translated">getCustomEditor를 호출하는 상위 레벨 코드는 더 큰 특성 시트에 Component를 포함하거나 고유 한 개별 대화 상자에 배치하거나 ...</target>
        </trans-unit>
        <trans-unit id="960d5fb054f1e3fe7c0a799520ce868908c47938" translate="yes" xml:space="preserve">
          <source>The highest justification priority.</source>
          <target state="translated">The highest justification priority.</target>
        </trans-unit>
        <trans-unit id="9b75574b2286c0f20e97f602454a50fa333e3d7f" translate="yes" xml:space="preserve">
          <source>The highlights (if any) are painted.</source>
          <target state="translated">The highlights (if any) are painted.</target>
        </trans-unit>
        <trans-unit id="31982dd70867d5c4e880c2e13841ee34ddf0228e" translate="yes" xml:space="preserve">
          <source>The historical name of this encoding, or &lt;code&gt;null&lt;/code&gt; if the stream has been closed</source>
          <target state="translated">이 인코딩의 히스토리 이름 . 스트림이 닫힌 경우 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="54f0c950a5ffae3623bf86533115f2ac87fb076a" translate="yes" xml:space="preserve">
          <source>The historical name of this encoding, or possibly &lt;code&gt;null&lt;/code&gt; if the stream has been closed</source>
          <target state="translated">이 인코딩의 히스토리 이름이거나 &lt;code&gt;null&lt;/code&gt; 일 수 있습니다. . 스트림이 닫혀있는 경우는</target>
        </trans-unit>
        <trans-unit id="4119b3c56ec8cdf2cd86fad835660f7db959c4e5" translate="yes" xml:space="preserve">
          <source>The hold count information is typically only used for testing and debugging purposes. For example, if a certain section of code should not be entered with the lock already held then we can assert that fact:</source>
          <target state="translated">홀드 카운트 정보는 일반적으로 테스트 및 디버깅 목적으로 만 사용됩니다. 예를 들어, 잠금을 이미 보유한 상태에서 특정 코드 섹션을 입력하지 않으면 다음과 같은 사실을 주장 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="feb71ca01e20f35ec2e60135062bb088ddef248f" translate="yes" xml:space="preserve">
          <source>The hook is said to bind the call site to a target method handle, and a typical action would be &lt;code&gt;someTarget.bindTo(this)&lt;/code&gt;. However, the hook is free to take any action whatever, including ignoring the call site and returning a constant target.</source>
          <target state="translated">후크는 호출 사이트를 대상 메소드 핸들에 바인딩한다고하며 일반적인 조치는 &lt;code&gt;someTarget.bindTo(this)&lt;/code&gt; 입니다. 그러나 후크는 콜 사이트를 무시하고 일정한 대상을 반환하는 것을 포함하여 어떤 작업이든 자유롭게 수행 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bb3e245037ba7cfe8449f5732d485dda63526de4" translate="yes" xml:space="preserve">
          <source>The horizontal alignment of &lt;code&gt;JTextField&lt;/code&gt; can be set to be left justified, leading justified, centered, right justified or trailing justified. Right/trailing justification is useful if the required size of the field text is smaller than the size allocated to it. This is determined by the &lt;code&gt;setHorizontalAlignment&lt;/code&gt; and &lt;code&gt;getHorizontalAlignment&lt;/code&gt; methods. The default is to be leading justified.</source>
          <target state="translated">The horizontal alignment of &lt;code&gt;JTextField&lt;/code&gt; can be set to be left justified, leading justified, centered, right justified or trailing justified. Right/trailing justification is useful if the required size of the field text is smaller than the size allocated to it. This is determined by the &lt;code&gt;setHorizontalAlignment&lt;/code&gt; and &lt;code&gt;getHorizontalAlignment&lt;/code&gt; methods. The default is to be leading justified.</target>
        </trans-unit>
        <trans-unit id="d451faf770164fc6cddda0afa6e5c80cbf0a8e5a" translate="yes" xml:space="preserve">
          <source>The horizontal axis consists of a sequential group containing two parallel groups. The first parallel group contains the labels, and the second parallel group contains the text fields.</source>
          <target state="translated">The horizontal axis consists of a sequential group containing two parallel groups. The first parallel group contains the labels, and the second parallel group contains the text fields.</target>
        </trans-unit>
        <trans-unit id="113ff9348c7a1f504d7da5d3492b39b54a0bb923" translate="yes" xml:space="preserve">
          <source>The horizontal coordinate at which the event occurred relative to the DOM implementation's client area.</source>
          <target state="translated">The horizontal coordinate at which the event occurred relative to the DOM implementation's client area.</target>
        </trans-unit>
        <trans-unit id="6e9b66c91d2663a72807b0247f903e14bb71380d" translate="yes" xml:space="preserve">
          <source>The horizontal coordinate at which the event occurred relative to the origin of the screen coordinate system.</source>
          <target state="translated">The horizontal coordinate at which the event occurred relative to the origin of the screen coordinate system.</target>
        </trans-unit>
        <trans-unit id="8154d08b076cdc7ad41f96fe6859cc9b2e54ac2c" translate="yes" xml:space="preserve">
          <source>The horizontal element of legs between nodes starts at the right of the left-hand side of the child node by default.</source>
          <target state="translated">The horizontal element of legs between nodes starts at the right of the left-hand side of the child node by default.</target>
        </trans-unit>
        <trans-unit id="ea33749c268bb127682d2031c5bceb8a153985c1" translate="yes" xml:space="preserve">
          <source>The horizontal element of legs between nodes starts at the right of the left-hand side of the child node by default. This method makes the leg end before that.</source>
          <target state="translated">The horizontal element of legs between nodes starts at the right of the left-hand side of the child node by default. This method makes the leg end before that.</target>
        </trans-unit>
        <trans-unit id="a78eb699ee386d149fce0ecce892268c6bd08062" translate="yes" xml:space="preserve">
          <source>The host component of a URI cannot contain escaped octets, hence this method does not perform any decoding.</source>
          <target state="translated">URI의 호스트 구성 요소는 이스케이프 된 옥텟을 포함 할 수 없으므로이 방법은 디코딩을 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="34bc17988021d57400932c60a1e04c33487914e0" translate="yes" xml:space="preserve">
          <source>The host component of a URI, if defined, will have one of the following forms:</source>
          <target state="translated">URI의 호스트 구성 요소는 정의 된 경우 다음 형식 중 하나를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="bab1b3cf2cb0aea0d2eaa0c153c81181ea3acbd4" translate="yes" xml:space="preserve">
          <source>The host component of this URI, or &lt;code&gt;null&lt;/code&gt; if the host is undefined</source>
          <target state="translated">이 URI의 호스트 컴퍼넌트 . 호스트가 정의되어 있지 않은 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9d7d4425f6a4629ec73708d5020ba7356b6e15fb" translate="yes" xml:space="preserve">
          <source>The host is expressed as a DNS name, as a numerical IP address, or as &quot;localhost&quot; (for the local machine). The wildcard &quot;*&quot; may be included once in a DNS name host specification. If it is included, it must be in the leftmost position, as in &quot;*.example.com&quot;.</source>
          <target state="translated">호스트는 DNS 이름, 숫자 IP 주소 또는 &quot;localhost&quot;(로컬 시스템의 경우)로 표현됩니다. 와일드 카드 &quot;*&quot;는 DNS 이름 호스트 사양에 한 번 포함될 수 있습니다. 포함 된 경우 &quot;* .example.com&quot;과 같이 맨 왼쪽 위치에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="eb770726793d61fc3715477603a657f226342af0" translate="yes" xml:space="preserve">
          <source>The host is expressed as a DNS name, as a numerical IP address, or as &quot;localhost&quot; (for the local machine). The wildcard &quot;*&quot; may be included once in a DNS name host specification. If it is included, it must be in the leftmost position, as in &quot;*.sun.com&quot;.</source>
          <target state="translated">호스트는 DNS 이름, 숫자 IP 주소 또는 &quot;localhost&quot;(로컬 시스템의 경우)로 표시됩니다. 와일드 카드 &quot;*&quot;는 DNS 이름 호스트 사양에 한 번만 포함될 수 있습니다. 포함 된 경우 &quot;* .sun.com&quot;과 같이 가장 왼쪽에 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="7e252805e8eb7c5662da677e362f2cd533b3c21d" translate="yes" xml:space="preserve">
          <source>The host name can either be a machine name, such as &quot;&lt;code&gt;java.sun.com&lt;/code&gt;&quot;, or a textual representation of its IP address.</source>
          <target state="translated">호스트 이름은 &quot; &lt;code&gt;java.sun.com&lt;/code&gt; &quot; 과 같은 시스템 이름 이거나 IP 주소의 텍스트 표현 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fe1afa1c850d1e44153fc7f23be8c095a3d2063c" translate="yes" xml:space="preserve">
          <source>The host name can either be a machine name, such as &quot;&lt;code&gt;java.sun.com&lt;/code&gt;&quot;, or a textual representation of its IP address. If a literal IP address is supplied, only the validity of the address format is checked.</source>
          <target state="translated">호스트 이름은 &quot; &lt;code&gt;java.sun.com&lt;/code&gt; &quot; 과 같은 시스템 이름 이거나 IP 주소의 텍스트 표현 일 수 있습니다. 리터럴 IP 주소가 제공되면 주소 형식의 유효성 만 검사됩니다.</target>
        </trans-unit>
        <trans-unit id="321d8c0c6af230f36c5fd0d26e504fb69f51da0f" translate="yes" xml:space="preserve">
          <source>The host name can either be a machine name, such as &quot;&lt;code&gt;www.example.com&lt;/code&gt;&quot;, or a textual representation of its IP address.</source>
          <target state="translated">호스트 이름은 &quot; &lt;code&gt;www.example.com&lt;/code&gt; &quot; 과 같은 시스템 이름 이거나 IP 주소의 텍스트 표현 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ee4b30519873a291995fdada227ae56320a42460" translate="yes" xml:space="preserve">
          <source>The host name can either be a machine name, such as &quot;&lt;code&gt;www.example.com&lt;/code&gt;&quot;, or a textual representation of its IP address. If a literal IP address is supplied, only the validity of the address format is checked.</source>
          <target state="translated">호스트 이름은 &quot; &lt;code&gt;www.example.com&lt;/code&gt; &quot; 과 같은 시스템 이름 이거나 IP 주소의 텍스트 표현 일 수 있습니다. 리터럴 IP 주소가 제공되면 주소 형식의 유효성 만 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="7453f74d08a304c820da7c292de80356ba304cac" translate="yes" xml:space="preserve">
          <source>The host part of the Service URL.</source>
          <target state="translated">The host part of the Service URL.</target>
        </trans-unit>
        <trans-unit id="8a6d6b969a44478105ab1226785be062f3948eb1" translate="yes" xml:space="preserve">
          <source>The host part of the Service URL. If the Service URL was constructed with the constructor that takes a URL string parameter, the result is the substring specifying the host in that URL. If the Service URL was constructed with a constructor that takes a separate host parameter, the result is the string that was specified. If that string was null, the result is &lt;code&gt;InetAddress.getLocalHost().getHostName()&lt;/code&gt; if local host name can be resolved to an IP. Else numeric IP address of an active network interface will be used.</source>
          <target state="translated">The host part of the Service URL. If the Service URL was constructed with the constructor that takes a URL string parameter, the result is the substring specifying the host in that URL. If the Service URL was constructed with a constructor that takes a separate host parameter, the result is the string that was specified. If that string was null, the result is &lt;code&gt;InetAddress.getLocalHost().getHostName()&lt;/code&gt; if local host name can be resolved to an IP. Else numeric IP address of an active network interface will be used.</target>
        </trans-unit>
        <trans-unit id="a3428c73a7d464a7c6ecc80b4fae8fd1231500c2" translate="yes" xml:space="preserve">
          <source>The host part of the Service URL. If the Service URL was constructed with the constructor that takes a URL string parameter, the result is the substring specifying the host in that URL. If the Service URL was constructed with a constructor that takes a separate host parameter, the result is the string that was specified. If that string was null, the result is &lt;code&gt;InetAddress.getLocalHost().getHostName()&lt;/code&gt;.</source>
          <target state="translated">서비스 URL의 호스트 부분. URL 문자열 매개 변수를 사용하는 생성자로 서비스 URL을 구성한 경우 결과는 해당 URL의 호스트를 지정하는 하위 문자열입니다. 서비스 URL이 별도의 호스트 매개 변수를 사용하는 생성자로 구성된 경우 결과는 지정된 문자열입니다. 해당 문자열이 널인 경우 결과는 &lt;code&gt;InetAddress.getLocalHost().getHostName()&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d6f10298a308df49412c25a25857bf7b3ebae4b5" translate="yes" xml:space="preserve">
          <source>The hour of day of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt;, from 0 to 23.</source>
          <target state="translated">The hour of day of this &lt;code&gt;XMLGregorianCalendar&lt;/code&gt; , from 0 to 23.</target>
        </trans-unit>
        <trans-unit id="1dcee8edf5db3c10041f3cbfdb216b1982c4cffa" translate="yes" xml:space="preserve">
          <source>The hour-of-am-pm.</source>
          <target state="translated">오후 1시</target>
        </trans-unit>
        <trans-unit id="b720f6beb2fbf1d5c52c3391ad82145cb332f215" translate="yes" xml:space="preserve">
          <source>The hour-of-day.</source>
          <target state="translated">시간.</target>
        </trans-unit>
        <trans-unit id="8d6745522470848c71447e96662401b92d690fee" translate="yes" xml:space="preserve">
          <source>The html spec does not specify how spaces are to be coalesced very well. Specifically, the following scenarios are not discussed (note that a space should be used here, but I am using &amp;amp;nbsp to force the space to be displayed):</source>
          <target state="translated">The html spec does not specify how spaces are to be coalesced very well. Specifically, the following scenarios are not discussed (note that a space should be used here, but I am using &amp;amp;nbsp to force the space to be displayed):</target>
        </trans-unit>
        <trans-unit id="01edc38d3117a9fe881c313fc58cca68efb8a8e6" translate="yes" xml:space="preserve">
          <source>The http response code.</source>
          <target state="translated">http 응답 코드</target>
        </trans-unit>
        <trans-unit id="efbfcb29bb8aad23ba95b3d84c34e4e8deb5d165" translate="yes" xml:space="preserve">
          <source>The human-readable description of the feature.</source>
          <target state="translated">The human-readable description of the feature.</target>
        </trans-unit>
        <trans-unit id="cb25decfe5ed2dfff9dc329951405e04436a4e8f" translate="yes" xml:space="preserve">
          <source>The human-readable description of the feature. It is recommended that subclasses call &lt;a href=&quot;#getDescription()&quot;&gt;&lt;code&gt;getDescription()&lt;/code&gt;&lt;/a&gt; rather than reading this field, and that they not change it.</source>
          <target state="translated">The human-readable description of the feature. It is recommended that subclasses call &lt;a href=&quot;#getDescription()&quot;&gt; &lt;code&gt;getDescription()&lt;/code&gt; &lt;/a&gt; rather than reading this field, and that they not change it.</target>
        </trans-unit>
        <trans-unit id="b1398050303d32bd6bb6a984fba0512e95f44388" translate="yes" xml:space="preserve">
          <source>The human-readable description of the feature. It is recommended that subclasses call &lt;a href=&quot;mbeanfeatureinfo#getDescription--&quot;&gt;&lt;code&gt;getDescription()&lt;/code&gt;&lt;/a&gt; rather than reading this field, and that they not change it.</source>
          <target state="translated">사람이 읽을 수있는 기능에 대한 설명입니다. 서브 클래스는 이 필드를 읽지 않고 &lt;a href=&quot;mbeanfeatureinfo#getDescription--&quot;&gt; &lt;code&gt;getDescription()&lt;/code&gt; &lt;/a&gt; 호출 하고 변경하지 않는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="067c8f1c5a2df4367c4fb697f0db77afbe16cfb8" translate="yes" xml:space="preserve">
          <source>The hyperbolic cosine of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">의 쌍곡선 코사인 &lt;code&gt;x&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="ac815b6ce55116fb0ad007c349798f1c55dd700a" translate="yes" xml:space="preserve">
          <source>The hyperbolic sine of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 쌍곡 사인 .</target>
        </trans-unit>
        <trans-unit id="f1dc45b4f7299ddca231f496c19774a95fb60160" translate="yes" xml:space="preserve">
          <source>The hyperbolic tangent of &lt;code&gt;x&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; 의 쌍곡 탄젠트 .</target>
        </trans-unit>
        <trans-unit id="c47d8ef13a7a97ac1e829267770ee71c2e09e4d9" translate="yes" xml:space="preserve">
          <source>The icon cache</source>
          <target state="translated">The icon cache</target>
        </trans-unit>
        <trans-unit id="3b164b99370dc1298ebcb383ecc869e03738287a" translate="yes" xml:space="preserve">
          <source>The icon shown in the top-left corner of this internal frame.</source>
          <target state="translated">The icon shown in the top-left corner of this internal frame.</target>
        </trans-unit>
        <trans-unit id="dea612915f2790cdf004fe380112ed112e6b74c8" translate="yes" xml:space="preserve">
          <source>The icon that is displayed when this internal frame is iconified.</source>
          <target state="translated">The icon that is displayed when this internal frame is iconified.</target>
        </trans-unit>
        <trans-unit id="2982313ccbd2852c4e889f2aa881faf139812265" translate="yes" xml:space="preserve">
          <source>The icon that represents this file in the &lt;code&gt;JFileChooser&lt;/code&gt;.</source>
          <target state="translated">The icon that represents this file in the &lt;code&gt;JFileChooser&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a959e29b115d33fd4c2adc0d849fb5ffe96d73a1" translate="yes" xml:space="preserve">
          <source>The icon to be used for tiling the border.</source>
          <target state="translated">The icon to be used for tiling the border.</target>
        </trans-unit>
        <trans-unit id="92c75c6e8f04988ee2d3ff9d4a41138b855c728a" translate="yes" xml:space="preserve">
          <source>The icon's size should be 16&amp;times;16 pixels.</source>
          <target state="translated">The icon's size should be 16&amp;times;16 pixels.</target>
        </trans-unit>
        <trans-unit id="4a644dadf53aac7a46e5cb201730a658fdda2b46" translate="yes" xml:space="preserve">
          <source>The icon.</source>
          <target state="translated">The icon.</target>
        </trans-unit>
        <trans-unit id="39e35629c516ce597389cd6f5ffe71bbd24e90ee" translate="yes" xml:space="preserve">
          <source>The iconify button.</source>
          <target state="translated">The iconify button.</target>
        </trans-unit>
        <trans-unit id="ff5cc3f9428241a3ab19fb18eaf8f2cb199e0a78" translate="yes" xml:space="preserve">
          <source>The iconify icon.</source>
          <target state="translated">The iconify icon.</target>
        </trans-unit>
        <trans-unit id="5ceebf4829e52c6881341df19a363dee2748a39d" translate="yes" xml:space="preserve">
          <source>The id of the authorized user. &lt;code&gt;null&lt;/code&gt; means the authorization failed.</source>
          <target state="translated">권한이 부여 된 사용자의 ID입니다. &lt;code&gt;null&lt;/code&gt; 은 인증이 실패했음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="190daa117302150eaa044ad50f789c954c118362" translate="yes" xml:space="preserve">
          <source>The id of this attribute. It cannot be null.</source>
          <target state="translated">이 속성의 ID입니다. 널이 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="f46b1dbaf75a94928c4b935b4ce22004db10a7c2" translate="yes" xml:space="preserve">
          <source>The identifier component of this descriptor.</source>
          <target state="translated">이 설명 자의 식별자 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="94bb0ffe35167c0644337c9a1cb414dc41add78f" translate="yes" xml:space="preserve">
          <source>The identifier for a registered activation group serves several purposes:</source>
          <target state="translated">The identifier for a registered activation group serves several purposes:</target>
        </trans-unit>
        <trans-unit id="2aebdd3a076ec94a6f6447bf5af334d3f691af59" translate="yes" xml:space="preserve">
          <source>The identifier for a registered activation group serves several purposes: identifies the group uniquely within the activation system, and contains a reference to the group's activation system so that the group can contact its activation system when necessary.</source>
          <target state="translated">The identifier for a registered activation group serves several purposes: identifies the group uniquely within the activation system, and contains a reference to the group's activation system so that the group can contact its activation system when necessary.</target>
        </trans-unit>
        <trans-unit id="daba0b23189a9e6380ffb117c81b7b9d322721c8" translate="yes" xml:space="preserve">
          <source>The identifier for the Backward focus traversal keys.</source>
          <target state="translated">The identifier for the Backward focus traversal keys.</target>
        </trans-unit>
        <trans-unit id="c710666b83fa17426a3e8d39e8ab1757aa0bee61" translate="yes" xml:space="preserve">
          <source>The identifier for the Down Cycle focus traversal keys.</source>
          <target state="translated">The identifier for the Down Cycle focus traversal keys.</target>
        </trans-unit>
        <trans-unit id="1594e87372197359f6d29f4e5950f77a7b591e90" translate="yes" xml:space="preserve">
          <source>The identifier for the Forward focus traversal keys.</source>
          <target state="translated">The identifier for the Forward focus traversal keys.</target>
        </trans-unit>
        <trans-unit id="4e72102fbc365551e48e4511cc4337e698d13e09" translate="yes" xml:space="preserve">
          <source>The identifier for the Up Cycle focus traversal keys.</source>
          <target state="translated">The identifier for the Up Cycle focus traversal keys.</target>
        </trans-unit>
        <trans-unit id="c8ce9e404a42ce040777de910ab116bb426d6835" translate="yes" xml:space="preserve">
          <source>The identifier for this Java virtual machine.</source>
          <target state="translated">이 JVM (Java Virtual Machine)의 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="686ecb3ef54ea2e35c719a341562d692aa41ff08" translate="yes" xml:space="preserve">
          <source>The identifier is the fully qualified name of the event class, if not set using the &lt;a href=&quot;name&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt; annotation.</source>
          <target state="translated">식별자는 &lt;a href=&quot;name&quot;&gt; &lt;code&gt;Name&lt;/code&gt; &lt;/a&gt; 어노테이션을 사용하여 설정하지 않은 경우 이벤트 클래스의 완전한 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="af4834bd960aa2b9216df25c846ec21872b9bcac" translate="yes" xml:space="preserve">
          <source>The identifier of the new created timer notification.</source>
          <target state="translated">새로 작성된 타이머 알림의 식별자입니다.</target>
        </trans-unit>
        <trans-unit id="9f826dacde229ce2d8640f93c05a284337137571" translate="yes" xml:space="preserve">
          <source>The identifier.</source>
          <target state="translated">식별자입니다.</target>
        </trans-unit>
        <trans-unit id="d1ce93c6e5ab18ed05408db6926a49f7e9fe9a87" translate="yes" xml:space="preserve">
          <source>The identifying name of the import.</source>
          <target state="translated">가져 오기의 식별 이름입니다.</target>
        </trans-unit>
        <trans-unit id="7247b34fe7c056e8e70b0a2bf833b64e7ad00fb5" translate="yes" xml:space="preserve">
          <source>The identifying name of the import. For on-demand imports (&lt;a href=&quot;snippet.subkind#TYPE_IMPORT_ON_DEMAND_SUBKIND&quot;&gt;&lt;code&gt;Snippet.SubKind.TYPE_IMPORT_ON_DEMAND_SUBKIND&lt;/code&gt;&lt;/a&gt; or (&lt;a href=&quot;snippet.subkind#STATIC_IMPORT_ON_DEMAND_SUBKIND&quot;&gt;&lt;code&gt;Snippet.SubKind.STATIC_IMPORT_ON_DEMAND_SUBKIND&lt;/code&gt;&lt;/a&gt;) that is the full specifier including any qualifiers and the asterisks. For single imports (&lt;a href=&quot;snippet.subkind#SINGLE_TYPE_IMPORT_SUBKIND&quot;&gt;&lt;code&gt;Snippet.SubKind.SINGLE_TYPE_IMPORT_SUBKIND&lt;/code&gt;&lt;/a&gt; or (&lt;a href=&quot;snippet.subkind#SINGLE_STATIC_IMPORT_SUBKIND&quot;&gt;&lt;code&gt;Snippet.SubKind.SINGLE_STATIC_IMPORT_SUBKIND&lt;/code&gt;&lt;/a&gt;), it is the imported name. That is, the unqualified name.</source>
          <target state="translated">가져 오기의 식별 이름입니다. 온 디맨드 가져 오기 ( &lt;a href=&quot;snippet.subkind#TYPE_IMPORT_ON_DEMAND_SUBKIND&quot;&gt; &lt;code&gt;Snippet.SubKind.TYPE_IMPORT_ON_DEMAND_SUBKIND&lt;/code&gt; &lt;/a&gt; 또는 ( &lt;a href=&quot;snippet.subkind#STATIC_IMPORT_ON_DEMAND_SUBKIND&quot;&gt; &lt;code&gt;Snippet.SubKind.STATIC_IMPORT_ON_DEMAND_SUBKIND&lt;/code&gt; &lt;/a&gt; )의 경우 모든 한정자와 별표를 포함하는 전체 지정자입니다. 단일 가져 오기의 경우 ( &lt;a href=&quot;snippet.subkind#SINGLE_TYPE_IMPORT_SUBKIND&quot;&gt; &lt;code&gt;Snippet.SubKind.SINGLE_TYPE_IMPORT_SUBKIND&lt;/code&gt; &lt;/a&gt; 또는 ( &lt;a href=&quot;snippet.subkind#SINGLE_STATIC_IMPORT_SUBKIND&quot;&gt; &lt;code&gt;Snippet.SubKind.SINGLE_STATIC_IMPORT_SUBKIND&lt;/code&gt; &lt;/a&gt; ) 가져온 이름 즉, 규정되지 않은 이름입니다.</target>
        </trans-unit>
        <trans-unit id="5f01919588f40a4b942e738f32090ead7b0d1160" translate="yes" xml:space="preserve">
          <source>The identity constraint says that for any partially accumulated result, combining it with an empty result container must produce an equivalent result. That is, for a partially accumulated result &lt;code&gt;a&lt;/code&gt; that is the result of any series of accumulator and combiner invocations, &lt;code&gt;a&lt;/code&gt; must be equivalent to &lt;code&gt;combiner.apply(a, supplier.get())&lt;/code&gt;.</source>
          <target state="translated">ID 제약 조건에 따르면 부분적으로 누적 된 결과에 대해 빈 결과 컨테이너와 결합하면 동등한 결과가 생성되어야합니다. 즉, 부분적으로 축적 된 결과에 대해 누산기 및 결합기 호출의 임의의 일련의 결과 즉, &lt;code&gt;a&lt;/code&gt; 는 동등해야 &lt;code&gt;combiner.apply(a, supplier.get())&lt;/code&gt; . &lt;code&gt;a&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="83d98d6fb589e5da25e66f09be93daaabac69244" translate="yes" xml:space="preserve">
          <source>The identity of a function object produced by deserializing the serialized form is unpredictable, and therefore identity-sensitive operations (such as reference equality, object locking, and &lt;code&gt;System.identityHashCode()&lt;/code&gt; may produce different results in different implementations, or even upon different deserializations in the same implementation.</source>
          <target state="translated">The identity of a function object produced by deserializing the serialized form is unpredictable, and therefore identity-sensitive operations (such as reference equality, object locking, and &lt;code&gt;System.identityHashCode()&lt;/code&gt; may produce different results in different implementations, or even upon different deserializations in the same implementation.</target>
        </trans-unit>
        <trans-unit id="a98ad4c844ccaeef716227f0929dd675df827093" translate="yes" xml:space="preserve">
          <source>The identity of a remote client of the JMX Remote API.</source>
          <target state="translated">JMX Remote API의 리모트 클라이언트의 아이덴티티.</target>
        </trans-unit>
        <trans-unit id="19fe17d5c256a0124b906229dac6f2ed7989ca1a" translate="yes" xml:space="preserve">
          <source>The identity of an element involves implicit state not directly accessible from the element's methods, including state about the presence of unrelated types. Element objects created by different implementations of these interfaces should</source>
          <target state="translated">The identity of an element involves implicit state not directly accessible from the element's methods, including state about the presence of unrelated types. Element objects created by different implementations of these interfaces should</target>
        </trans-unit>
        <trans-unit id="c084425fd634ec561ebf2e67c297bae72cc52903" translate="yes" xml:space="preserve">
          <source>The identity of the value does not matter, only the actual value. For example, &lt;code&gt;TextAttribute.WEIGHT_BOLD&lt;/code&gt; and &lt;code&gt;Float.valueOf(2.0f)&lt;/code&gt; indicate the same &lt;code&gt;WEIGHT&lt;/code&gt;.</source>
          <target state="translated">The identity of the value does not matter, only the actual value. For example, &lt;code&gt;TextAttribute.WEIGHT_BOLD&lt;/code&gt; and &lt;code&gt;Float.valueOf(2.0f)&lt;/code&gt; indicate the same &lt;code&gt;WEIGHT&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="50a057a048396611cc27a43faa15d99cedba2e6f" translate="yes" xml:space="preserve">
          <source>The illegal Unicode code point</source>
          <target state="translated">잘못된 유니 코드 코드 포인트</target>
        </trans-unit>
        <trans-unit id="f118b75c2086f0962577e58b3b46529624d030c6" translate="yes" xml:space="preserve">
          <source>The illegal charset name</source>
          <target state="translated">잘못된 문자셋 이름</target>
        </trans-unit>
        <trans-unit id="213794262dbeac8bb81e8cb800deb620866f8fde" translate="yes" xml:space="preserve">
          <source>The image contain a single static image.</source>
          <target state="translated">The image contain a single static image.</target>
        </trans-unit>
        <trans-unit id="4e094f4a0323dac0ba9d9262bdc8616f1eab3127" translate="yes" xml:space="preserve">
          <source>The image contain a single static image. The pixels will be defined in calls to the setPixels methods and then the imageComplete method will be called with the STATICIMAGEDONE flag after which no more image data will be delivered. An example of an image type which would not meet these criteria would be the output of a video feed, or the representation of a 3D rendering being manipulated by the user. The end of each frame in those types of images will be indicated by calling imageComplete with the SINGLEFRAMEDONE flag.</source>
          <target state="translated">The image contain a single static image. The pixels will be defined in calls to the setPixels methods and then the imageComplete method will be called with the STATICIMAGEDONE flag after which no more image data will be delivered. An example of an image type which would not meet these criteria would be the output of a video feed, or the representation of a 3D rendering being manipulated by the user. The end of each frame in those types of images will be indicated by calling imageComplete with the SINGLEFRAMEDONE flag.</target>
        </trans-unit>
        <trans-unit id="650107fc502ca4b1e9a1b9ac9eb0045aaaf8cb53" translate="yes" xml:space="preserve">
          <source>The image contents may be supplied later using the &lt;code&gt;replacePixels&lt;/code&gt; method. The insertion is not complete until a call to &lt;code&gt;endInsertEmpty&lt;/code&gt; occurs. Calls to &lt;code&gt;prepareReplacePixels&lt;/code&gt;, &lt;code&gt;replacePixels&lt;/code&gt;, and &lt;code&gt;endReplacePixels&lt;/code&gt; may occur between calls to &lt;code&gt;prepareInsertEmpty&lt;/code&gt; and &lt;code&gt;endInsertEmpty&lt;/code&gt;. However, calls to &lt;code&gt;prepareInsertEmpty&lt;/code&gt; cannot be nested, and calls to &lt;code&gt;prepareWriteEmpty&lt;/code&gt; and &lt;code&gt;prepareInsertEmpty&lt;/code&gt; may not be interspersed.</source>
          <target state="translated">이미지 내용은 나중에 &lt;code&gt;replacePixels&lt;/code&gt; 방법을 사용하여 제공 될 수 있습니다 . &lt;code&gt;endInsertEmpty&lt;/code&gt; 에 대한 호출이 발생할 때까지 삽입이 완료되지 않습니다 . 를 호출 &lt;code&gt;prepareReplacePixels&lt;/code&gt; , &lt;code&gt;replacePixels&lt;/code&gt; 및 &lt;code&gt;endReplacePixels&lt;/code&gt; 는 호출 사이에 발생할 수 &lt;code&gt;prepareInsertEmpty&lt;/code&gt; 및 &lt;code&gt;endInsertEmpty&lt;/code&gt; . 그러나 호출 &lt;code&gt;prepareInsertEmpty&lt;/code&gt; 중첩 될 수 없으며, 호출 &lt;code&gt;prepareWriteEmpty&lt;/code&gt; 와 &lt;code&gt;prepareInsertEmpty&lt;/code&gt; 산재되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="82167449f7a5a3fc43bd8123d78d62ad91b97c2a" translate="yes" xml:space="preserve">
          <source>The image creation process was deliberately aborted.</source>
          <target state="translated">The image creation process was deliberately aborted.</target>
        </trans-unit>
        <trans-unit id="0b03f1837d3a60fb7040339f17e7b24479ff74be" translate="yes" xml:space="preserve">
          <source>The image data is downloaded asynchronously in another thread, and an appropriately scaled screen representation of the image is generated.</source>
          <target state="translated">The image data is downloaded asynchronously in another thread, and an appropriately scaled screen representation of the image is generated.</target>
        </trans-unit>
        <trans-unit id="1d33b4e926de1659092487a8d33def5c221eb13e" translate="yes" xml:space="preserve">
          <source>The image data may take the form of either a &lt;code&gt;RenderedImage&lt;/code&gt;, or a &lt;code&gt;Raster&lt;/code&gt;. Reader methods that return an &lt;code&gt;IIOImage&lt;/code&gt; will always return a &lt;code&gt;BufferedImage&lt;/code&gt; using the &lt;code&gt;RenderedImage&lt;/code&gt; reference. Writer methods that accept an &lt;code&gt;IIOImage&lt;/code&gt; will always accept a &lt;code&gt;RenderedImage&lt;/code&gt;, and may optionally accept a &lt;code&gt;Raster&lt;/code&gt;.</source>
          <target state="translated">이미지 데이터는 &lt;code&gt;RenderedImage&lt;/code&gt; 또는 &lt;code&gt;Raster&lt;/code&gt; 형식 일 수 있습니다 . 반환 리더 방법 &lt;code&gt;IIOImage&lt;/code&gt; 를이 항상 돌아갑니다 &lt;code&gt;BufferedImage&lt;/code&gt; 를 를 사용하여 &lt;code&gt;RenderedImage&lt;/code&gt; 참조를 . &lt;code&gt;IIOImage&lt;/code&gt; 를 받아들이는 라이터 메소드 는 항상 &lt;code&gt;RenderedImage&lt;/code&gt; 를 받아들이고, 선택적으로 &lt;code&gt;Raster&lt;/code&gt; 를 받아 들일 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a9634015de44fa10469d261b81d7bd8321a94836" translate="yes" xml:space="preserve">
          <source>The image is complete and there are no more pixels or frames to be delivered.</source>
          <target state="translated">The image is complete and there are no more pixels or frames to be delivered.</target>
        </trans-unit>
        <trans-unit id="ffbcc0db34f9156b59f14025e1a392763c0be17b" translate="yes" xml:space="preserve">
          <source>The image is drawn inside the specified rectangle of this graphics context's coordinate space, and is scaled if necessary. Transparent pixels are drawn in the specified background color. This operation is equivalent to filling a rectangle of the width and height of the specified image with the given color and then drawing the image on top of it, but possibly more efficient.</source>
          <target state="translated">The image is drawn inside the specified rectangle of this graphics context's coordinate space, and is scaled if necessary. Transparent pixels are drawn in the specified background color. This operation is equivalent to filling a rectangle of the width and height of the specified image with the given color and then drawing the image on top of it, but possibly more efficient.</target>
        </trans-unit>
        <trans-unit id="31a613492c855530e0498145a239fd12f412a1fa" translate="yes" xml:space="preserve">
          <source>The image is drawn inside the specified rectangle of this graphics context's coordinate space, and is scaled if necessary. Transparent pixels do not affect whatever pixels are already there.</source>
          <target state="translated">The image is drawn inside the specified rectangle of this graphics context's coordinate space, and is scaled if necessary. Transparent pixels do not affect whatever pixels are already there.</target>
        </trans-unit>
        <trans-unit id="cbf52c5d0d3f8fc66a94d98b15dd5920f92b3d76" translate="yes" xml:space="preserve">
          <source>The image may contain transparent areas, and thus the reported bounds may be larger than the visible splash screen image on the screen.</source>
          <target state="translated">The image may contain transparent areas, and thus the reported bounds may be larger than the visible splash screen image on the screen.</target>
        </trans-unit>
        <trans-unit id="2b29540773a3e6ba434d2b097fffa0c79873a7a0" translate="yes" xml:space="preserve">
          <source>The image may contain transparent areas, and thus the reported size may be larger than the visible splash screen image on the screen.</source>
          <target state="translated">The image may contain transparent areas, and thus the reported size may be larger than the visible splash screen image on the screen.</target>
        </trans-unit>
        <trans-unit id="bcee0bb2e49666ba14873e56d922ec392d842b66" translate="yes" xml:space="preserve">
          <source>The image returned will be formatted according to the first &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; returned from &lt;code&gt;getImageTypes&lt;/code&gt;.</source>
          <target state="translated">리턴 된 이미지는 &lt;code&gt;getImageTypes&lt;/code&gt; 에서 리턴 된 첫 번째 &lt;code&gt;ImageTypeSpecifier&lt;/code&gt; 에 따라 형식화됩니다 .</target>
        </trans-unit>
        <trans-unit id="1bf117f3a022e647194270c3833ce7a8f6d654f4" translate="yes" xml:space="preserve">
          <source>The imageComplete method is called when the ImageProducer is finished delivering all of the pixels that the source image contains, or when a single frame of a multi-frame animation has been completed, or when an error in loading or producing the image has occurred.</source>
          <target state="translated">The imageComplete method is called when the ImageProducer is finished delivering all of the pixels that the source image contains, or when a single frame of a multi-frame animation has been completed, or when an error in loading or producing the image has occurred.</target>
        </trans-unit>
        <trans-unit id="fe307a07bd67c06b79d1756e6794cbc38cca603b" translate="yes" xml:space="preserve">
          <source>The imageComplete method is called when the ImageProducer is finished delivering all of the pixels that the source image contains, or when a single frame of a multi-frame animation has been completed, or when an error in loading or producing the image has occurred. The ImageConsumer should remove itself from the list of consumers registered with the ImageProducer at this time, unless it is interested in successive frames.</source>
          <target state="translated">The imageComplete method is called when the ImageProducer is finished delivering all of the pixels that the source image contains, or when a single frame of a multi-frame animation has been completed, or when an error in loading or producing the image has occurred. The ImageConsumer should remove itself from the list of consumers registered with the ImageProducer at this time, unless it is interested in successive frames.</target>
        </trans-unit>
        <trans-unit id="dc3738c35dfe132a23ab59ac962e72a1fc1c4392" translate="yes" xml:space="preserve">
          <source>The imageComplete method is part of the ImageConsumer API which this class must implement to retrieve the pixels.</source>
          <target state="translated">The imageComplete method is part of the ImageConsumer API which this class must implement to retrieve the pixels.</target>
        </trans-unit>
        <trans-unit id="92ba74861aa993d420846e0ec04af01afba0f5ee" translate="yes" xml:space="preserve">
          <source>The immediate children of the container are printed with an indentation of &lt;code&gt;indent+1&lt;/code&gt;. The children of those children are printed at &lt;code&gt;indent+2&lt;/code&gt; and so on.</source>
          <target state="translated">The immediate children of the container are printed with an indentation of &lt;code&gt;indent+1&lt;/code&gt; . The children of those children are printed at &lt;code&gt;indent+2&lt;/code&gt; and so on.</target>
        </trans-unit>
        <trans-unit id="a8c4a80175dda61de0d20199a8a735a2ef57e13d" translate="yes" xml:space="preserve">
          <source>The impact of the diagnostic command, this value is the same as the one printed in the 'impact' section of the help message of the diagnostic command, and it is different from the getImpact() of the MBeanOperationInfo</source>
          <target state="translated">진단 명령의 영향,이 값은 진단 명령 도움말 메시지의 'impact'섹션에 인쇄 된 값과 동일하며 MBeanOperationInfo의 getImpact ()와 다릅니다.</target>
        </trans-unit>
        <trans-unit id="7b5154802a9e7d900d0991f4a290316f47536854" translate="yes" xml:space="preserve">
          <source>The implementation MUST support &lt;code&gt;DOMStructure&lt;/code&gt;s as the mechanism for the application to specify extensible content (any elements or mixed content).</source>
          <target state="translated">구현은 애플리케이션이 확장 가능한 콘텐츠 (모든 요소 또는 혼합 콘텐츠)를 지정하는 메커니즘으로 &lt;code&gt;DOMStructure&lt;/code&gt; 를 지원해야합니다 .</target>
        </trans-unit>
        <trans-unit id="33c42e040f3646db66a28b2d1f494d78e84172c2" translate="yes" xml:space="preserve">
          <source>The implementation chooses a buffer size, which is measured in bytes but which encompasses an integral number of sample frames. The buffer size that the system has chosen may be queried by subsequently calling &lt;a href=&quot;dataline#getBufferSize()&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">The implementation chooses a buffer size, which is measured in bytes but which encompasses an integral number of sample frames. The buffer size that the system has chosen may be queried by subsequently calling &lt;a href=&quot;dataline#getBufferSize()&quot;&gt; &lt;code&gt;DataLine.getBufferSize()&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="e197f5a9ad36c59e97de5e88bba346ebf104c3a2" translate="yes" xml:space="preserve">
          <source>The implementation chooses a buffer size, which is measured in bytes but which encompasses an integral number of sample frames. The buffer size that the system has chosen may be queried by subsequently calling &lt;a href=&quot;dataline#getBufferSize()&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">The implementation chooses a buffer size, which is measured in bytes but which encompasses an integral number of sample frames. The buffer size that the system has chosen may be queried by subsequently calling &lt;a href=&quot;dataline#getBufferSize()&quot;&gt; &lt;code&gt;DataLine.getBufferSize()&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="f6325bd4afd820329b33a81aad4acb98f22f1739" translate="yes" xml:space="preserve">
          <source>The implementation chooses a buffer size, which is measured in bytes but which encompasses an integral number of sample frames. The buffer size that the system has chosen may be queried by subsequently calling &lt;code&gt;&lt;a href=&quot;dataline#getBufferSize--&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;</source>
          <target state="translated">구현시 버퍼 크기를 선택합니다.이 크기는 바이트 단위로 측정되지만 정수 샘플 프레임을 포함합니다. 시스템이 선택한 버퍼 크기는 나중에 &lt;code&gt;&lt;a href=&quot;dataline#getBufferSize--&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 호출하여 쿼리 할 수 ​​있습니다.</target>
        </trans-unit>
        <trans-unit id="5d8ee360abb575ae83e0aad557bc14c7679e4103" translate="yes" xml:space="preserve">
          <source>The implementation chooses a buffer size, which is measured in bytes but which encompasses an integral number of sample frames. The buffer size that the system has chosen may be queried by subsequently calling &lt;code&gt;&lt;a href=&quot;dataline#getBufferSize--&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt;.</source>
          <target state="translated">구현시 버퍼 크기를 선택합니다.이 크기는 바이트 단위로 측정되지만 정수 샘플 프레임을 포함합니다. 시스템이 선택한 버퍼 크기는 이후에 호출하여 쿼리 할 수 ​​있습니다. &lt;code&gt;&lt;a href=&quot;dataline#getBufferSize--&quot;&gt;&lt;code&gt;DataLine.getBufferSize()&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="09ccd30cdba3e587d31b9f21539df9dbcdfde8d9" translate="yes" xml:space="preserve">
          <source>The implementation conforms to &lt;a href=&quot;http://www.ietf.org/rfc/rfc2965.txt&quot;&gt;RFC 2965&lt;/a&gt;, section 3.3.</source>
          <target state="translated">구현은 &lt;a href=&quot;http://www.ietf.org/rfc/rfc2965.txt&quot;&gt;RFC 2965&lt;/a&gt; 섹션 3.3을 준수합니다 .</target>
        </trans-unit>
        <trans-unit id="f28c86dd75718b663c40681fbf77456325447397" translate="yes" xml:space="preserve">
          <source>The implementation conforms to &lt;a href=&quot;https://www.ietf.org/rfc/rfc2965.txt&quot;&gt;RFC 2965&lt;/a&gt;, section 3.3.</source>
          <target state="translated">구현은 &lt;a href=&quot;https://www.ietf.org/rfc/rfc2965.txt&quot;&gt;RFC 2965&lt;/a&gt; , 섹션 3.3을 준수합니다 .</target>
        </trans-unit>
        <trans-unit id="14e2c00678648d5a3c84fa75329fd77db6950875" translate="yes" xml:space="preserve">
          <source>The implementation creates a &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;late-binding&lt;/a&gt;&lt;/em&gt; spliterator from the set's &lt;code&gt;Iterator&lt;/code&gt;. The spliterator inherits the &lt;em&gt;fail-fast&lt;/em&gt; properties of the set's iterator. The created &lt;code&gt;Spliterator&lt;/code&gt; additionally reports &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt;&lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">구현은 세트의 &lt;code&gt;Iterator&lt;/code&gt; 로부터 &lt;em&gt;&lt;a href=&quot;spliterator#binding&quot;&gt;후기 바인딩&lt;/a&gt;&lt;/em&gt; 스플리터를 작성합니다 . spliterator는 세트 반복자 의 &lt;em&gt;fail-fast&lt;/em&gt; 특성을 상속 합니다. 생성 된 &lt;code&gt;Spliterator&lt;/code&gt; 는 를 추가로보고 &lt;a href=&quot;spliterator#SUBSIZED&quot;&gt; &lt;code&gt;Spliterator.SUBSIZED&lt;/code&gt; &lt;/a&gt;&lt;em&gt;&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="5223f3996aa8fb012e6b7bd1bc47d31df8164864" translate="yes" xml:space="preserve">
          <source>The implementation ensures that the synthesizer is brought to a consistent state when jumping to the loop start point by sending appropriate controllers, pitch bend, and program change events.</source>
          <target state="translated">이 구현은 적절한 컨트롤러, 피치 벤드 및 프로그램 변경 이벤트를 전송하여 루프 시작점으로 점프 할 때 신시사이저가 일관된 상태가되도록합니다.</target>
        </trans-unit>
        <trans-unit id="aa213c32e8080f7d4be6c40003d301082c11e27e" translate="yes" xml:space="preserve">
          <source>The implementation first checks to see if an expression with this value has already been written.</source>
          <target state="translated">The implementation first checks to see if an expression with this value has already been written.</target>
        </trans-unit>
        <trans-unit id="81e190cedf9e21a5a2481992af348a4d3f5f90b0" translate="yes" xml:space="preserve">
          <source>The implementation first checks to see if an expression with this value has already been written. If not, the expression is cloned, using the same procedure as &lt;code&gt;writeStatement&lt;/code&gt;, and the value of this expression is reconciled with the value of the cloned expression by calling &lt;code&gt;writeObject&lt;/code&gt;.</source>
          <target state="translated">구현은 먼저이 값을 가진 표현식이 이미 작성되었는지 확인합니다. 그렇지 않은 경우 &lt;code&gt;writeStatement&lt;/code&gt; 와 동일한 프로 시저를 사용하여 표현식이 복제 되며이 표현식의 값은 다음을 호출하여 복제 된 표현식의 값과 조정됩니다. &lt;code&gt;writeObject&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="bc0e80d3ab7d372a4a0c07c1b90ed127df13f7fa" translate="yes" xml:space="preserve">
          <source>The implementation in this class just returns &lt;a href=&quot;#DEFAULT_VALUE&quot;&gt;&lt;code&gt;DEFAULT_VALUE&lt;/code&gt;&lt;/a&gt;; subclasses will commonly override this method.</source>
          <target state="translated">The implementation in this class just returns &lt;a href=&quot;#DEFAULT_VALUE&quot;&gt; &lt;code&gt;DEFAULT_VALUE&lt;/code&gt; &lt;/a&gt;; subclasses will commonly override this method.</target>
        </trans-unit>
        <trans-unit id="8d9004fc45aa79bbeb3638cc4e2594da5ab2ce28" translate="yes" xml:space="preserve">
          <source>The implementation in this class throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt; and performs no other action.</source>
          <target state="translated">The implementation in this class throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt; and performs no other action.</target>
        </trans-unit>
        <trans-unit id="3e4117171efd1e562e9775eafdf56901e4eb9408" translate="yes" xml:space="preserve">
          <source>The implementation in this class throws &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">이 클래스의 구현은 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="fb31750f24b5622b73c269c716ddbdb794191239" translate="yes" xml:space="preserve">
          <source>The implementation in this class throws an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; for the indicated conditions; overriding methods may choose to do otherwise.</source>
          <target state="translated">The implementation in this class throws an &lt;code&gt;IndexOutOfBoundsException&lt;/code&gt; for the indicated conditions; overriding methods may choose to do otherwise.</target>
        </trans-unit>
        <trans-unit id="e41c6d1c80d2a90b6d969a9d8d80248e7a24b028" translate="yes" xml:space="preserve">
          <source>The implementation in this class throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt;.</source>
          <target state="translated">The implementation in this class throws an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2d2e0430763706ada574ef1a18c66c5e6280d189" translate="yes" xml:space="preserve">
          <source>The implementation is responsible of associating the appropriate media type with the serialized data.</source>
          <target state="translated">The implementation is responsible of associating the appropriate media type with the serialized data.</target>
        </trans-unit>
        <trans-unit id="082ae6d11432c0c07be7bb9e88e34002e4494502" translate="yes" xml:space="preserve">
          <source>The implementation may constrain the set of processes by which the interprocess token may be imported, either as a function of local security policy, or as a result of implementation decisions. For example, some implementations may constrain contexts to be passed only between processes that run under the same account, or which are part of the same process group.</source>
          <target state="translated">The implementation may constrain the set of processes by which the interprocess token may be imported, either as a function of local security policy, or as a result of implementation decisions. For example, some implementations may constrain contexts to be passed only between processes that run under the same account, or which are part of the same process group.</target>
        </trans-unit>
        <trans-unit id="9cb9f909f198fcf0061370bf797f93bff7fa7ff4" translate="yes" xml:space="preserve">
          <source>The implementation method is described with a method handle. In theory, any method handle could be used. Currently supported are direct method handles representing invocation of virtual, interface, constructor and static methods.</source>
          <target state="translated">구현 방법은 메소드 핸들로 설명됩니다. 이론적으로는 모든 메소드 핸들을 사용할 수 있습니다. 가상, 인터페이스, 생성자 및 정적 메소드의 호출을 나타내는 직접 메소드 핸들이 현재 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="e0f9a4ef58c41d6065832b1b74a1b3fa3eaa4f52" translate="yes" xml:space="preserve">
          <source>The implementation must take the input object and add to it. The implementation defines the logic of the addition and is responsible for documenting that logic. It may use any method on &lt;code&gt;Temporal&lt;/code&gt; to query the temporal object and perform the addition. The returned object must have the same observable type as the input object</source>
          <target state="translated">구현시 입력 개체를 가져 와서 추가해야합니다. 구현은 추가 논리를 정의하고 해당 논리를 문서화합니다. &lt;code&gt;Temporal&lt;/code&gt; 에서 임의의 메소드를 사용 하여 임시 오브젝트를 쿼리하고 추가를 수행 할 수 있습니다. 반환 된 객체는 입력 객체와 동일한 관찰 가능 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="3e56e06001459e0c1e6e272244337fd5cebdd144" translate="yes" xml:space="preserve">
          <source>The implementation must take the input object and adjust it. The implementation defines the logic of the adjustment and is responsible for documenting that logic. It may use any method on &lt;code&gt;Temporal&lt;/code&gt; to query the temporal object and perform the adjustment. The returned object must have the same observable type as the input object</source>
          <target state="translated">구현시 입력 개체를 가져 와서 조정해야합니다. 구현은 조정의 논리를 정의하며 해당 논리를 문서화합니다. &lt;code&gt;Temporal&lt;/code&gt; 에서 임의의 메소드를 사용 하여 임시 오브젝트를 쿼리하고 조정을 수행 할 수 있습니다. 반환 된 객체는 입력 객체와 동일한 관찰 가능 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="2da52b48d84c4b30715e4af7716531223f872291" translate="yes" xml:space="preserve">
          <source>The implementation must take the input object and query it. The implementation defines the logic of the query and is responsible for documenting that logic. It may use any method on &lt;code&gt;TemporalAccessor&lt;/code&gt; to determine the result. The input object must not be altered.</source>
          <target state="translated">구현시 입력 개체를 가져 와서 쿼리해야합니다. 구현은 쿼리의 논리를 정의하며 해당 논리를 문서화합니다. &lt;code&gt;TemporalAccessor&lt;/code&gt; 의 모든 메소드 를 사용하여 결과를 판별 할 수 있습니다. 입력 개체를 변경해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="2dacb5e6e4d33c85aaf3a8b2840566262196b216" translate="yes" xml:space="preserve">
          <source>The implementation must take the input object and subtract from it. The implementation defines the logic of the subtraction and is responsible for documenting that logic. It may use any method on &lt;code&gt;Temporal&lt;/code&gt; to query the temporal object and perform the subtraction. The returned object must have the same observable type as the input object</source>
          <target state="translated">구현시 입력 객체를 가져와 빼야합니다. 구현은 감산의 논리를 정의하고 해당 논리를 문서화합니다. &lt;code&gt;Temporal&lt;/code&gt; 에서 임의의 메소드를 사용 하여 임시 오브젝트를 쿼리하고 빼기를 수행 할 수 있습니다. 반환 된 객체는 입력 객체와 동일한 관찰 가능 유형이어야합니다.</target>
        </trans-unit>
        <trans-unit id="6d3f978b3deb38b54e9338fc087195544cf28b4b" translate="yes" xml:space="preserve">
          <source>The implementation of &lt;a href=&quot;../spi/executioncontrol&quot;&gt;&lt;code&gt;ExecutionControl&lt;/code&gt;&lt;/a&gt; that the JShell-core uses by default.</source>
          <target state="translated">JShell-core가 기본적으로 사용하는 &lt;a href=&quot;../spi/executioncontrol&quot;&gt; &lt;code&gt;ExecutionControl&lt;/code&gt; &lt;/a&gt; 의 구현입니다 .</target>
        </trans-unit>
        <trans-unit id="68747f9e95ca7177fd286eeeb632eb3b041015ac" translate="yes" xml:space="preserve">
          <source>The implementation of &lt;a href=&quot;../spi/executioncontrol&quot;&gt;&lt;code&gt;ExecutionControl&lt;/code&gt;&lt;/a&gt; that the JShell-core uses by default. Launches a remote process -- the &quot;remote agent&quot;. Interfaces to the remote agent over a socket and via JDI. Designed to work with &lt;a href=&quot;remoteexecutioncontrol&quot;&gt;&lt;code&gt;RemoteExecutionControl&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">JShell-core가 기본적으로 사용하는 &lt;a href=&quot;../spi/executioncontrol&quot;&gt; &lt;code&gt;ExecutionControl&lt;/code&gt; &lt;/a&gt; 의 구현입니다 . &quot;원격 에이전트&quot;라는 원격 프로세스를 시작합니다. 소켓 및 JDI를 통해 원격 에이전트에 대한 인터페이스. &lt;a href=&quot;remoteexecutioncontrol&quot;&gt; &lt;code&gt;RemoteExecutionControl&lt;/code&gt; &lt;/a&gt; 과 함께 작동하도록 설계되었습니다 .</target>
        </trans-unit>
        <trans-unit id="14c4605c1fc41a74a7285633c2cb13fc37606aa9" translate="yes" xml:space="preserve">
          <source>The implementation of &lt;code&gt;ComboPopup&lt;/code&gt; that is used to show the popup.</source>
          <target state="translated">The implementation of &lt;code&gt;ComboPopup&lt;/code&gt; that is used to show the popup.</target>
        </trans-unit>
        <trans-unit id="71ce8f2e81c8d3437a0a5ec06854dc19be3b1bfa" translate="yes" xml:space="preserve">
          <source>The implementation of &lt;code&gt;replaceEditor&lt;/code&gt; should be coordinated with the &lt;code&gt;createEditor&lt;/code&gt; method.</source>
          <target state="translated">The implementation of &lt;code&gt;replaceEditor&lt;/code&gt; should be coordinated with the &lt;code&gt;createEditor&lt;/code&gt; method.</target>
        </trans-unit>
        <trans-unit id="bd649c4c9a306542067e2337ea94241b40146d2f" translate="yes" xml:space="preserve">
          <source>The implementation of &lt;code&gt;setSeed&lt;/code&gt; by class &lt;code&gt;Random&lt;/code&gt; happens to use only 48 bits of the given seed. In general, however, an overriding method may use all 64 bits of the &lt;code&gt;long&lt;/code&gt; argument as a seed value.</source>
          <target state="translated">&lt;code&gt;Random&lt;/code&gt; 클래스에 의한 &lt;code&gt;setSeed&lt;/code&gt; 의 구현은 주어진 시드의 48 비트만을 사용합니다. 그러나 일반적으로 재정의 방법은 &lt;code&gt;long&lt;/code&gt; 인수 의 64 비트를 모두 시드 값으로 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="35791792ef6356de1f2cbc30dca9984d8aef3776" translate="yes" xml:space="preserve">
          <source>The implementation of a &lt;code&gt;ListResourceBundle&lt;/code&gt; subclass must be thread-safe if it's simultaneously used by multiple threads. The default implementations of the methods in this class are thread-safe.</source>
          <target state="translated">&lt;code&gt;ListResourceBundle&lt;/code&gt; 서브 클래스 의 구현은 여러 스레드가 동시에 사용하는 경우 스레드 안전해야합니다. 이 클래스의 메소드의 기본 구현은 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="dbd88d54003995fa128d1a669f95113fbbc46b8d" translate="yes" xml:space="preserve">
          <source>The implementation of a &lt;code&gt;PropertyResourceBundle&lt;/code&gt; subclass must be thread-safe if it's simultaneously used by multiple threads. The default implementations of the non-abstract methods in this class are thread-safe.</source>
          <target state="translated">&lt;code&gt;PropertyResourceBundle&lt;/code&gt; 서브 클래스 의 구현은 다중 스레드에서 동시에 사용되는 경우 스레드 안전해야합니다. 이 클래스에서 비추 상 메소드의 기본 구현은 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="8f2a4a09568db481af411da9df2b6666a394506d" translate="yes" xml:space="preserve">
          <source>The implementation of a &lt;code&gt;ResourceBundle&lt;/code&gt; subclass must be thread-safe if it's simultaneously used by multiple threads. The default implementations of the non-abstract methods in this class, and the methods in the direct known concrete subclasses &lt;code&gt;ListResourceBundle&lt;/code&gt; and &lt;code&gt;PropertyResourceBundle&lt;/code&gt; are thread-safe.</source>
          <target state="translated">&lt;code&gt;ResourceBundle&lt;/code&gt; 서브 클래스 의 구현은 여러 스레드에서 동시에 사용되는 경우 스레드 안전해야합니다. 이 클래스의 비추 상 메소드의 기본 구현과 직접 알려진 구체적인 서브 클래스 &lt;code&gt;ListResourceBundle&lt;/code&gt; 및 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 의 메소드 는 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="218d96d7349cb8c6c787276d3ab79190cbbdb85f" translate="yes" xml:space="preserve">
          <source>The implementation of a look and feel may choose to ignore this property.</source>
          <target state="translated">The implementation of a look and feel may choose to ignore this property.</target>
        </trans-unit>
        <trans-unit id="c837f88953461d8bc6a51ac1bbb4fcd58eec5398" translate="yes" xml:space="preserve">
          <source>The implementation of class &lt;code&gt;java.awt.datatransfer.DataFlavor&lt;/code&gt; does not guarantee that equivalent data flavors will have the same serialized representation. &lt;code&gt;DocFlavor&lt;/code&gt; does, and can be used in services which need this.</source>
          <target state="translated">The implementation of class &lt;code&gt;java.awt.datatransfer.DataFlavor&lt;/code&gt; does not guarantee that equivalent data flavors will have the same serialized representation. &lt;code&gt;DocFlavor&lt;/code&gt; does, and can be used in services which need this.</target>
        </trans-unit>
        <trans-unit id="967f67768043a0e5a6e3ce4151e32a33e8442d96" translate="yes" xml:space="preserve">
          <source>The implementation of class &lt;code&gt;java.awt.datatransfer.DataFlavor&lt;/code&gt; does not guarantee that equivalent data flavors will have the same serialized representation. DocFlavor does, and can be used in services which need this.</source>
          <target state="translated">클래스 &lt;code&gt;java.awt.datatransfer.DataFlavor&lt;/code&gt; 의 구현은 동등한 데이터 플레이버가 동일한 직렬화 표현을 가질 것이라고 보증하지 않습니다. DocFlavor는이를 필요로하는 서비스에서 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5aa595b341b716ddfe95468de8d46da61dd15f01" translate="yes" xml:space="preserve">
          <source>The implementation of class &lt;code&gt;java.awt.datatransfer.DataFlavor&lt;/code&gt; includes a human presentable name as part of the serialized representation. This is not appropriate as part of a service matching constraint.</source>
          <target state="translated">클래스 &lt;code&gt;java.awt.datatransfer.DataFlavor&lt;/code&gt; 의 구현 에는 직렬화 된 표현의 일부로 사람이 표시 할 수있는 이름이 포함됩니다. 이는 서비스 일치 제한 조건의 일부로 적합하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6d605e7356769fdd893c4e8460accfdb98a6d781" translate="yes" xml:space="preserve">
          <source>The implementation of selectors, selectable channels, and selection keys can be replaced by &quot;plugging in&quot; an alternative definition or instance of the &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; class defined in the &lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.nio.channels.spi&lt;/code&gt;&lt;/a&gt; package. It is not expected that many developers will actually make use of this facility; it is provided primarily so that sophisticated users can take advantage of operating-system-specific I/O-multiplexing mechanisms when very high performance is required.</source>
          <target state="translated">The implementation of selectors, selectable channels, and selection keys can be replaced by &quot;plugging in&quot; an alternative definition or instance of the &lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt; class defined in the &lt;a href=&quot;spi/package-summary&quot;&gt; &lt;code&gt;java.nio.channels.spi&lt;/code&gt; &lt;/a&gt; package. It is not expected that many developers will actually make use of this facility; it is provided primarily so that sophisticated users can take advantage of operating-system-specific I/O-multiplexing mechanisms when very high performance is required.</target>
        </trans-unit>
        <trans-unit id="f3f640b6933929080a0a003b9d5726689efac7dc" translate="yes" xml:space="preserve">
          <source>The implementation of selectors, selectable channels, and selection keys can be replaced by &quot;plugging in&quot; an alternative definition or instance of the &lt;a href=&quot;spi/selectorprovider&quot;&gt;&lt;code&gt;SelectorProvider&lt;/code&gt;&lt;/a&gt; class defined in the &lt;code&gt;&lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.nio.channels.spi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; package. It is not expected that many developers will actually make use of this facility; it is provided primarily so that sophisticated users can take advantage of operating-system-specific I/O-multiplexing mechanisms when very high performance is required.</source>
          <target state="translated">선택기, 선택 가능 채널 및 선택 키의 구현은 &lt;code&gt;&lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.nio.channels.spi&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 패키지에 정의 된 &lt;a href=&quot;spi/selectorprovider&quot;&gt; &lt;code&gt;SelectorProvider&lt;/code&gt; &lt;/a&gt; 클래스 의 대체 정의 또는 인스턴스를 &quot;플러그인&quot;하여 대체 할 수 있습니다 . 많은 개발자들이 실제로이 기능을 사용할 것으로 예상되지는 않습니다. 기본적으로 고급 사용자가 매우 높은 성능이 필요할 때 운영 체제 별 I / O 멀티플렉싱 메커니즘을 활용할 수 있도록 제공됩니다.</target>
        </trans-unit>
        <trans-unit id="a187657438deb477b8dd98f82159ddc1bb249b2a" translate="yes" xml:space="preserve">
          <source>The implementation of the &lt;code&gt;RowSet&lt;/code&gt; method &lt;code&gt;execute&lt;/code&gt; in the &lt;code&gt;JdbcRowSet&lt;/code&gt; reference implementation differs from that in the &lt;code&gt;CachedRowSet&lt;/code&gt; reference implementation to account for the different requirements of connected and disconnected &lt;code&gt;RowSet&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;JdbcRowSet&lt;/code&gt; 참조 구현 에서 &lt;code&gt;execute&lt;/code&gt; 되는 &lt;code&gt;RowSet&lt;/code&gt; 메서드 의 구현은 연결된 및 연결 해제 된 &lt;code&gt;RowSet&lt;/code&gt; 개체 의 다양한 요구 사항을 설명하기 위해 &lt;code&gt;CachedRowSet&lt;/code&gt; 참조 구현 의 구현과 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="822ffb50765d2b429b6b3dd79cd26cf2aa79f154" translate="yes" xml:space="preserve">
          <source>The implementation of the &lt;code&gt;RowSet&lt;/code&gt; method &lt;code&gt;execute&lt;/code&gt; in the &lt;code&gt;JdbcRowSet&lt;/code&gt; reference implementation differs from that in the &lt;code&gt;CachedRowSet&lt;/code&gt;&amp;trade; reference implementation to account for the different requirements of connected and disconnected &lt;code&gt;RowSet&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;JdbcRowSet&lt;/code&gt; 참조 구현 에서 &lt;code&gt;execute&lt;/code&gt; 되는 &lt;code&gt;RowSet&lt;/code&gt; 메소드 의 구현은 연결된 및 연결 해제 된 &lt;code&gt;RowSet&lt;/code&gt; 객체 의 다양한 요구 사항을 고려하기 위해 &lt;code&gt;CachedRowSet&lt;/code&gt; &amp;trade; 참조 구현 에서 실행되는 것과 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="e5140dd892d98896590e3f8471080d842fc25e4f" translate="yes" xml:space="preserve">
          <source>The implementation of the following static methods</source>
          <target state="translated">다음 정적 메서드의 구현</target>
        </trans-unit>
        <trans-unit id="c6f39c9939ea586098262803c585de45d3f336cc" translate="yes" xml:space="preserve">
          <source>The implementation of the hook should return as soon as possible, to avoid blocking other Flight Recorder operations. The hook should emit one or more events of the specified type. When a hook is added, the interval at which the call is invoked is configurable using the &lt;code&gt;&quot;period&quot;&lt;/code&gt; setting.</source>
          <target state="translated">다른 Flight Recorder 작업을 차단하지 않도록 후크 구현은 가능한 한 빨리 반환되어야합니다. 후크는 지정된 유형의 이벤트를 하나 이상 내 보냅니다. 후크가 추가되면 &lt;code&gt;&quot;period&quot;&lt;/code&gt; 설정을 사용하여 호출이 호출되는 간격을 구성 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5f19423ec0a494ae6494fd85f2b386a09303d0d4" translate="yes" xml:space="preserve">
          <source>The implementation of the method &lt;code&gt;SQLData.writeSQ&lt;/code&gt; calls the appropriate &lt;code&gt;SQLOutputImpl.writeXXX&lt;/code&gt; method(s) for writing each of the object's attributes in order. The attributes must be read from an &lt;code&gt;SQLInput&lt;/code&gt; input stream and written to an &lt;code&gt;SQLOutputImpl&lt;/code&gt; output stream in the same order in which they were listed in the SQL definition of the user-defined type.</source>
          <target state="translated">&lt;code&gt;SQLData.writeSQ&lt;/code&gt; 메소드의 구현은 각 오브젝트의 속성을 순서대로 쓰기 위해 적절한 &lt;code&gt;SQLOutputImpl.writeXXX&lt;/code&gt; 메소드를 호출합니다 . 속성은 &lt;code&gt;SQLInput&lt;/code&gt; 입력 스트림 에서 읽고 사용자 정의 유형의 SQL 정의에 나열된 순서와 동일한 순서로 &lt;code&gt;SQLOutputImpl&lt;/code&gt; 출력 스트림에 작성되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="f99b05ce7229c6e9c00c10671fd5556b39199a24" translate="yes" xml:space="preserve">
          <source>The implementation of the string concatenation operator is left to the discretion of a Java compiler, as long as the compiler ultimately conforms to</source>
          <target state="translated">문자열 연결 연산자의 구현은 컴파일러가 궁극적으로 다음을 준수하는 한 Java 컴파일러의 재량에 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="a16aac757eee134d7254450b49a909f24adac216" translate="yes" xml:space="preserve">
          <source>The implementation of this &lt;code&gt;CachedRowSet&lt;/code&gt; object may obtain the the name internally from the &lt;code&gt;RowSetMetaDataImpl&lt;/code&gt; object.</source>
          <target state="translated">이 &lt;code&gt;CachedRowSet&lt;/code&gt; 객체 의 구현은 &lt;code&gt;RowSetMetaDataImpl&lt;/code&gt; 객체 로부터 내부적으로 이름을 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d1783d029ef344e41e430f17d5f10e6b3b15270a" translate="yes" xml:space="preserve">
          <source>The implementation of this Standard MBean (or MXBean).</source>
          <target state="translated">이 표준 MBean (또는 MXBean)의 구현입니다.</target>
        </trans-unit>
        <trans-unit id="8b58175546ebfe14f92898d0cbf17e52506a300e" translate="yes" xml:space="preserve">
          <source>The implementation of this method attempts to retrieve the user's Unix &lt;code&gt;Subject&lt;/code&gt; information by making a native Unix system call.</source>
          <target state="translated">이 메소드의 구현은 원시 Unix 시스템 호출을 수행 하여 사용자의 Unix &lt;code&gt;Subject&lt;/code&gt; 정보 를 검색하려고 시도합니다 .</target>
        </trans-unit>
        <trans-unit id="382a6dd38dda6c0a39223f62855989d45f555777" translate="yes" xml:space="preserve">
          <source>The implementation of this method authenticates a &lt;code&gt;Subject&lt;/code&gt;. For example, it may prompt for &lt;code&gt;Subject&lt;/code&gt; information such as a username and password and then attempt to verify the password. This method saves the result of the authentication attempt as private state within the LoginModule.</source>
          <target state="translated">이 메소드의 구현은 &lt;code&gt;Subject&lt;/code&gt; 를 인증합니다 . 예를 들어, 사용자 이름 및 비밀번호와 같은 &lt;code&gt;Subject&lt;/code&gt; 정보를 묻는 프롬프트가 표시 되면 비밀번호 확인을 시도 할 수 있습니다. 이 방법은 인증 시도 결과를 LoginModule 내 개인 상태로 저장합니다.</target>
        </trans-unit>
        <trans-unit id="5411c087059bdfeffe2870127039654f07163654" translate="yes" xml:space="preserve">
          <source>The implementation of this method can be expressed as follows:</source>
          <target state="translated">이 메서드의 구현은 다음과 같이 표현할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f858f34f76a8d32fba15b3e497ed1df2fe0bb20c" translate="yes" xml:space="preserve">
          <source>The implementation of this method may transform the supplied class file and return a new replacement class file.</source>
          <target state="translated">이 메소드의 구현은 제공된 클래스 파일을 변환하고 새로운 대체 클래스 파일을 리턴 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="189b4e42c525714ae069e5c16d67456217dfb5f7" translate="yes" xml:space="preserve">
          <source>The implementation of this method provided by the &lt;code&gt;Applet&lt;/code&gt; class does nothing.</source>
          <target state="translated">&lt;code&gt;Applet&lt;/code&gt; 클래스에서 제공하는이 메서드의 구현 은 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="66d802063d5f107af40abcadc656ad92ba6e873a" translate="yes" xml:space="preserve">
          <source>The implementation of this method provided by the &lt;code&gt;Applet&lt;/code&gt; class returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Applet&lt;/code&gt; 클래스에서 제공하는이 메서드의 구현은 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a86e1e80207e9e386e4c654763035a03b4d2e4e7" translate="yes" xml:space="preserve">
          <source>The implementation of this method returns the process id as: &lt;a href=&quot;#toHandle()&quot;&gt;&lt;code&gt;toHandle().pid()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드의 구현은 프로세스 ID를 &lt;a href=&quot;#toHandle()&quot;&gt; &lt;code&gt;toHandle().pid()&lt;/code&gt; &lt;/a&gt; 로 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="da217fb99c45be9261de17bf2e7721b7070d4e0c" translate="yes" xml:space="preserve">
          <source>The implementation of this method should return as soon as possible to avoid blocking normal operation of Flight Recorder.</source>
          <target state="translated">이 메서드의 구현은 Flight Recorder의 정상적인 작동을 차단하지 않도록 가능한 한 빨리 반환되어야합니다. ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ</target>
        </trans-unit>
        <trans-unit id="5621f16ce87e09eca19aa3e0b40c7ee6b5d44b52" translate="yes" xml:space="preserve">
          <source>The implementation of this method will produce a second expression to represent the same expression in an environment that will exist when the stream is read. This is achieved simply by calling &lt;code&gt;writeObject&lt;/code&gt; on the target and all the arguments and building a new expression with the results.</source>
          <target state="translated">이 메소드의 구현은 스트림을 읽을 때 존재할 환경에서 동일한 표현식을 나타내는 두 번째 표현식을 생성합니다. 대상과 모든 인수에서 &lt;code&gt;writeObject&lt;/code&gt; 를 호출 하고 결과를 사용하여 새 표현식을 작성하면됩니다.</target>
        </trans-unit>
        <trans-unit id="32201864694d5e4caa1ee710ebef56302cb24601" translate="yes" xml:space="preserve">
          <source>The implementation resolution mechanisms are &lt;a href=&quot;#DatatypeFactory.newInstance&quot;&gt;defined&lt;/a&gt; in this &lt;code&gt;Class&lt;/code&gt;'s documentation.</source>
          <target state="translated">구현 해결 메커니즘은 이 &lt;code&gt;Class&lt;/code&gt; 의 문서에 &lt;a href=&quot;#DatatypeFactory.newInstance&quot;&gt;정의&lt;/a&gt; 되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f6c0c74d6ce56b3b7dcf48a3803936cda181fb0" translate="yes" xml:space="preserve">
          <source>The implementation should not do anything with the result of any of the result supplier, accumulator, or combiner functions other than to pass them again to the accumulator, combiner, or finisher functions, or return them to the caller of the reduction operation.</source>
          <target state="translated">구현은 결과 공급 업체, 누산기 또는 결합기 함수의 결과로 누산기, 결합기 또는 피니셔 함수로 다시 전달하거나 축소 연산의 호출자에게 반환하는 것 이외의 다른 결과를 수행해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="c606b027d78d1c8b28b809bad80a66b9a67bf360" translate="yes" xml:space="preserve">
          <source>The implementation stabilizes the stack by anchoring a frame specific to the stack walking and ensures that the stack walking is performed above the anchored frame. When the stream object is closed or being reused, &lt;code&gt;IllegalStateException&lt;/code&gt; will be thrown.</source>
          <target state="translated">이 구현은 스택 워킹에 특정한 프레임을 고정하여 스택을 안정화하고 스택 워킹이 고정 된 프레임 위에서 수행되도록합니다. 스트림 객체가 닫히거나 재사용되면 &lt;code&gt;IllegalStateException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="764bc44f931b2a056f6de3d2e74007be7dab4252" translate="yes" xml:space="preserve">
          <source>The implementation takes equal advantage of ascending and descending order in its input array, and can take advantage of ascending and descending order in different parts of the same input array. It is well-suited to merging two or more sorted arrays: simply concatenate the arrays and sort the resulting array.</source>
          <target state="translated">구현시 입력 배열에서 오름차순 및 내림차순을 동일하게 사용하며 동일한 입력 배열의 다른 부분에서 오름차순 및 내림차순을 활용할 수 있습니다. 둘 이상의 정렬 된 배열을 병합하는 데 적합합니다. 단순히 배열을 연결하고 결과 배열을 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="20e810f071954672f66c3ff4da645466cee6a581" translate="yes" xml:space="preserve">
          <source>The implementation takes equal advantage of ascending and descending order in its input array, and can take advantage of ascending and descending order in different parts of the the same input array. It is well-suited to merging two or more sorted arrays: simply concatenate the arrays and sort the resulting array.</source>
          <target state="translated">구현시 입력 배열에서 오름차순 및 내림차순을 동일하게 사용하며 동일한 입력 배열의 다른 부분에서 오름차순 및 내림차순을 활용할 수 있습니다. 둘 이상의 정렬 된 배열을 병합하는 데 적합합니다. 단순히 배열을 연결하고 결과 배열을 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="d19f87950e204f701655c7eb90a32dffeb95482a" translate="yes" xml:space="preserve">
          <source>The implementation that observes events from the file system is intended to map directly on to the native file event notification facility where available, or to use a primitive mechanism, such as polling, when a native facility is not available. Consequently, many of the details on how events are detected, their timeliness, and whether their ordering is preserved are highly implementation specific. For example, when a file in a watched directory is modified then it may result in a single &lt;a href=&quot;standardwatcheventkinds#ENTRY_MODIFY&quot;&gt;&lt;code&gt;ENTRY_MODIFY&lt;/code&gt;&lt;/a&gt; event in some implementations but several events in other implementations. Short-lived files (meaning files that are deleted very quickly after they are created) may not be detected by primitive implementations that periodically poll the file system to detect changes.</source>
          <target state="translated">파일 시스템에서 이벤트를 관찰하는 구현은 사용 가능한 경우 기본 파일 이벤트 알림 기능에 직접 맵핑하거나 기본 기능을 사용할 수없는 경우 폴링과 같은 기본 메커니즘을 사용하기위한 것입니다. 결과적으로 이벤트 감지 방법, 적시성 및 순서 유지 여부에 대한 많은 세부 사항은 구현에 따라 다릅니다. 예를 들어 감시 된 디렉토리의 파일이 수정 되면 일부 구현 에서는 단일 &lt;a href=&quot;standardwatcheventkinds#ENTRY_MODIFY&quot;&gt; &lt;code&gt;ENTRY_MODIFY&lt;/code&gt; &lt;/a&gt; 이벤트가 발생하지만 다른 구현에서는 여러 이벤트 가 발생할 수 있습니다 . 수명이 짧은 파일 (생성 된 후 파일이 매우 빠르게 삭제됨)은 파일 시스템을 정기적으로 폴링하여 변경 사항을 감지하는 기본 구현에서 감지되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c2d66d33c9220cc88ec7f77711dd3f7ca2bf80a6" translate="yes" xml:space="preserve">
          <source>The implementation title, version, and vendor strings identify an implementation and are made available conveniently to enable accurate reporting of the packages involved when a problem occurs. The contents all three implementation strings are vendor specific. The implementation version strings have no specified syntax and should only be compared for equality with desired version identifiers.</source>
          <target state="translated">구현 제목, 버전 및 공급 업체 문자열은 구현을 식별하며 문제가 발생할 때 관련된 패키지를 정확하게보고 할 수 있도록 편리하게 제공됩니다. 세 가지 구현 문자열의 내용은 모두 공급 업체에 따라 다릅니다. 구현 버전 문자열에는 지정된 구문이 없으며 원하는 버전 식별자와 동일한 지 비교해야합니다.</target>
        </trans-unit>
        <trans-unit id="f348190d718bffe13008c0ecdf1745c28e601e6d" translate="yes" xml:space="preserve">
          <source>The implementation typically achieves this goal by producing a series of &quot;what happened&quot; statements involving the &lt;code&gt;oldInstance&lt;/code&gt; and its publicly available state. These statements are sent to the output stream using its &lt;code&gt;writeExpression&lt;/code&gt; method which returns an expression involving elements in a cloned environment simulating the state of an input stream during reading. Each statement returned will have had all instances the old environment replaced with objects which exist in the new one. In particular, references to the target of these statements, which start out as references to &lt;code&gt;oldInstance&lt;/code&gt; are returned as references to the &lt;code&gt;newInstance&lt;/code&gt; instead. Executing these statements effects an incremental alignment of the state of the two objects as a series of modifications to the objects in the new environment. By the time the initialize method returns it should be impossible to tell the two instances apart by using their public APIs. Most importantly, the sequence of steps that were used to make these objects appear equivalent will have been recorded by the output stream and will form the actual output when the stream is flushed.</source>
          <target state="translated">구현은 일반적으로 &lt;code&gt;oldInstance&lt;/code&gt; 및 공개적으로 사용 가능한 상태와 관련된 일련의 &quot;무슨 일&quot;을 생성하여이 목표를 달성합니다 . 이 명령문은 &lt;code&gt;writeExpression&lt;/code&gt; 메소드를 사용하여 출력 스트림으로 전송됩니다.이 메소드는 읽기 환경에서 입력 스트림의 상태를 시뮬레이션하는 복제 된 환경의 요소와 관련된 표현식을 리턴합니다. 리턴 된 각 명령문에는 이전 환경이 새 환경에 존재하는 오브젝트로 대체 된 모든 인스턴스가 있습니다. 특히, &lt;code&gt;oldInstance&lt;/code&gt; 에 대한 참조로 시작되는 이러한 명령문의 대상에 대한 참조는 &lt;code&gt;newInstance&lt;/code&gt; 에 대한 참조로 리턴됩니다.대신에. 이 명령문을 실행하면 새 환경의 오브젝트에 대한 일련의 수정 사항으로 두 오브젝트의 상태가 점진적으로 정렬됩니다. initialize 메소드가 리턴 할 때까지 공용 API를 사용하여 두 인스턴스를 구별하는 것은 불가능합니다. 가장 중요하게는, 이러한 객체를 동일하게 보이게하는데 사용 된 일련의 단계는 출력 스트림에 의해 기록 될 것이고 스트림이 플러시 될 때 실제 출력을 형성 할 것입니다.</target>
        </trans-unit>
        <trans-unit id="0071233711fe7922557f3cc5e77ff86d3c7489b1" translate="yes" xml:space="preserve">
          <source>The implementation was adapted from Tim Peters's list sort for Python (&lt;a href=&quot;http://svn.python.org/projects/python/trunk/Objects/listsort.txt&quot;&gt; TimSort&lt;/a&gt;). It uses techniques from Peter McIlroy's &quot;Optimistic Sorting and Information Theoretic Complexity&quot;, in Proceedings of the Fourth Annual ACM-SIAM Symposium on Discrete Algorithms, pp 467-474, January 1993.</source>
          <target state="translated">이 구현은 Tim Peters의 목록 정렬에서 Python ( &lt;a href=&quot;http://svn.python.org/projects/python/trunk/Objects/listsort.txt&quot;&gt;TimSort&lt;/a&gt; ) 으로 채택되었습니다 . 이 문서는 Peter McIlroy의 &quot;최적 정렬 및 정보 이론적 복잡성&quot;기술을 사용하여 1993 년 1 월, 이산 알고리즘에 관한 제 4 차 ACM-SIAM 심포지엄의 절차에서 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="9ff0f3b8413e36a5361b1e71459d786f534916de" translate="yes" xml:space="preserve">
          <source>The implementation was adapted from Tim Peters's list sort for Python (&lt;a href=&quot;https://svn.python.org/projects/python/trunk/Objects/listsort.txt&quot;&gt; TimSort&lt;/a&gt;). It uses techniques from Peter McIlroy's &quot;Optimistic Sorting and Information Theoretic Complexity&quot;, in Proceedings of the Fourth Annual ACM-SIAM Symposium on Discrete Algorithms, pp 467-474, January 1993.</source>
          <target state="translated">구현은 Tim Peters의 Python 목록 정렬 ( &lt;a href=&quot;https://svn.python.org/projects/python/trunk/Objects/listsort.txt&quot;&gt;TimSort&lt;/a&gt; )에서 수정되었습니다. 이 기술은 Peter McIlroy의 &quot;Optimistic Sorting and Information Theoretic Complexity&quot;의 기술을 사용합니다. Proceedings of the Fourth Annual ACM-SIAM Symposium on Discrete Algorithms, pp 467-474, January 1993.</target>
        </trans-unit>
        <trans-unit id="13c96c1ad096f5a00f55072e0f2d6780edfeb958" translate="yes" xml:space="preserve">
          <source>The implementer must ensure that the returned node has not been removed. If a like-named child of this node was previously removed, the implementer must return a newly constructed &lt;code&gt;AbstractPreferences&lt;/code&gt; node; once removed, an &lt;code&gt;AbstractPreferences&lt;/code&gt; node cannot be &quot;resuscitated.&quot;</source>
          <target state="translated">구현자는 리턴 된 노드가 제거되지 않았는지 확인해야합니다. 이 노드의 같은 이름의 자식이 이전에 제거 된 경우 구현자는 새로 구성된 &lt;code&gt;AbstractPreferences&lt;/code&gt; 노드를 반환해야 합니다. 일단 제거되면 &lt;code&gt;AbstractPreferences&lt;/code&gt; 노드는 &quot;소생&quot;될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9ef8dcbf55f1377ba0f6614596e7efbe0b86999c" translate="yes" xml:space="preserve">
          <source>The implementor must also ensure that the relation is transitive: &lt;code&gt;((compare(x, y)&amp;gt;0) &amp;amp;&amp;amp; (compare(y, z)&amp;gt;0))&lt;/code&gt; implies &lt;code&gt;compare(x, z)&amp;gt;0&lt;/code&gt;.</source>
          <target state="translated">구현할 경우도 전이 관계인지 확인한다 : &lt;code&gt;((compare(x, y)&amp;gt;0) &amp;amp;&amp;amp; (compare(y, z)&amp;gt;0))&lt;/code&gt; 것을 의미 &lt;code&gt;compare(x, z)&amp;gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="83a6f5823b0e633634dd36ef598776a62c2b361f" translate="yes" xml:space="preserve">
          <source>The implementor must also ensure that the relation is transitive: &lt;code&gt;(x.compareTo(y) &amp;gt; 0 &amp;amp;&amp;amp; y.compareTo(z) &amp;gt; 0)&lt;/code&gt; implies &lt;code&gt;x.compareTo(z) &amp;gt; 0&lt;/code&gt;.</source>
          <target state="translated">구현자는 또한 관계가 전이 &lt;code&gt;(x.compareTo(y) &amp;gt; 0 &amp;amp;&amp;amp; y.compareTo(z) &amp;gt; 0)&lt;/code&gt; 확인해야합니다 : (x.compareTo (y)&amp;gt; 0 &amp;amp;&amp;amp; y.compareTo (z)&amp;gt; 0) implies &lt;code&gt;x.compareTo(z) &amp;gt; 0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="93c35843f73a7cf775788fe7aa6a58715a248347" translate="yes" xml:space="preserve">
          <source>The implementor must also ensure that the relation is transitive: &lt;code&gt;(x.compareTo(y)&amp;gt;0 &amp;amp;&amp;amp; y.compareTo(z)&amp;gt;0)&lt;/code&gt; implies &lt;code&gt;x.compareTo(z)&amp;gt;0&lt;/code&gt;.</source>
          <target state="translated">구현자가 또한 전이 관계인지 확인한다 : &lt;code&gt;(x.compareTo(y)&amp;gt;0 &amp;amp;&amp;amp; y.compareTo(z)&amp;gt;0)&lt;/code&gt; 의미 &lt;code&gt;x.compareTo(z)&amp;gt;0&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="984e8a841ada6b193bdac6bd769182c3ed6633a1" translate="yes" xml:space="preserve">
          <source>The implementor must ensure &lt;code&gt;sgn(x.compareTo(y)) == -sgn(y.compareTo(x))&lt;/code&gt; for all &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. (This implies that &lt;code&gt;x.compareTo(y)&lt;/code&gt; must throw an exception iff &lt;code&gt;y.compareTo(x)&lt;/code&gt; throws an exception.)</source>
          <target state="translated">구현자는 모든 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 에 대해 &lt;code&gt;sgn(x.compareTo(y)) == -sgn(y.compareTo(x))&lt;/code&gt; 를 확인해야 합니다. (이것은 &lt;code&gt;y.compareTo(x)&lt;/code&gt; 가 예외를 던지면 &lt;code&gt;x.compareTo(y)&lt;/code&gt; 가 예외를 발생시켜야 함을 의미합니다 .)</target>
        </trans-unit>
        <trans-unit id="6f253988de023323ef8d0ef1dfa1dcf6d324129a" translate="yes" xml:space="preserve">
          <source>The implementor must ensure that &lt;code&gt;sgn(compare(x, y)) ==
 -sgn(compare(y, x))&lt;/code&gt; for all &lt;code&gt;x&lt;/code&gt; and &lt;code&gt;y&lt;/code&gt;. (This implies that &lt;code&gt;compare(x, y)&lt;/code&gt; must throw an exception if and only if &lt;code&gt;compare(y, x)&lt;/code&gt; throws an exception.)</source>
          <target state="translated">구현자는 모든 &lt;code&gt;x&lt;/code&gt; 및 &lt;code&gt;y&lt;/code&gt; 에 대해 &lt;code&gt;sgn(compare(x, y)) == -sgn(compare(y, x))&lt;/code&gt; 해야합니다 . (이것은 &lt;code&gt;compare(y, x)&lt;/code&gt; 가 예외를 던지는 경우에만 &lt;code&gt;compare(x, y)&lt;/code&gt; 가 예외를 throw해야 함을 의미합니다 .</target>
        </trans-unit>
        <trans-unit id="ec10f19371a9d11721ea1000bbcc8b30c58e2b96" translate="yes" xml:space="preserve">
          <source>The implicit declaration of the canonical constructor has the same accessibility as the record class and initializes the component fields from the corresponding constructor arguments. The implicit declaration of the accessor methods returns the value of the corresponding component field. The implicit declaration of the &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;Object.equals(Object)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;object#hashCode()&quot;&gt;&lt;code&gt;Object.hashCode()&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;object#toString()&quot;&gt;&lt;code&gt;Object.toString()&lt;/code&gt;&lt;/a&gt; methods are derived from all of the component fields.</source>
          <target state="translated">표준 생성자의 암시 적 선언은 레코드 클래스와 동일한 액세스 가능성을 가지며 해당 생성자 인수에서 구성 요소 필드를 초기화합니다. 접근 자 메서드의 암시 적 선언은 해당 구성 요소 필드의 값을 반환합니다. &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;Object.equals(Object)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;object#hashCode()&quot;&gt; &lt;code&gt;Object.hashCode()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;object#toString()&quot;&gt; &lt;code&gt;Object.toString()&lt;/code&gt; &lt;/a&gt; 메서드 의 암시 적 선언은 모든 구성 요소 필드에서 파생됩니다.</target>
        </trans-unit>
        <trans-unit id="8f99500f7af7d801bfa9660bcd7539b508039288" translate="yes" xml:space="preserve">
          <source>The implicit size may not be a fixed value, especially for a DTLS protocols implementation.</source>
          <target state="translated">암시 적 크기는 특히 DTLS 프로토콜 구현의 경우 고정 값이 아닐 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c5bd518953d05705af43274895fb8112f343bc54" translate="yes" xml:space="preserve">
          <source>The implicit state of a matcher includes the input character sequence as well as the</source>
          <target state="translated">매처의 내재 된 상태에는 입력 문자 순서와</target>
        </trans-unit>
        <trans-unit id="648ee0f64ff7b406b146abf2b44239a2bc419dd2" translate="yes" xml:space="preserve">
          <source>The implicitly provided implementation returns &lt;code&gt;true&lt;/code&gt; if and only if the argument is an instance of the same record type as this record, and each component of this record is equal to the corresponding component of the argument; otherwise, &lt;code&gt;
 false&lt;/code&gt; is returned. Equality of a component &lt;code&gt;c&lt;/code&gt; is determined as follows:</source>
          <target state="translated">암시 적으로 제공된 구현은 &lt;code&gt;true&lt;/code&gt; 레코드와 동일한 레코드 유형의 인스턴스이고이 레코드의 각 구성 요소가 인수의 해당 구성 요소와 동일한 경우에만 true를 반환 합니다 . 그렇지 않으면 &lt;code&gt; false&lt;/code&gt; 가 반환됩니다. 성분 &lt;code&gt;c&lt;/code&gt; 의 동등성은 다음과 같이 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="5c5f4aa231f9db27c59a00fb4983dccd1895e289" translate="yes" xml:space="preserve">
          <source>The implicitly provided implementation returns a hash code value derived by combining appropriate hashes from each component. The precise algorithm used in the implicitly provided implementation is unspecified and is subject to change within the above limits. The resulting integer need not remain consistent from one execution of an application to another execution of the same application, even if the hashes of the component values were to remain consistent in this way. Also, a component of primitive type may contribute its bits to the hash code differently than the &lt;code&gt;hashCode&lt;/code&gt; of its primitive wrapper class.</source>
          <target state="translated">암시 적으로 제공된 구현은 각 구성 요소에서 적절한 해시를 결합하여 파생 된 해시 코드 값을 반환합니다. 암시 적으로 제공된 구현에 사용되는 정확한 알고리즘은 지정되지 않았으며 위의 제한 내에서 변경 될 수 있습니다. 구성 요소 값의 해시가 이러한 방식으로 일관성을 유지해야하더라도 결과 정수는 응용 프로그램의 한 실행에서 동일한 응용 프로그램의 다른 실행까지 일관성을 유지할 필요가 없습니다. 또한, 프리미티브 타입의 컴포넌트 는 프리미티브 래퍼 클래스 의 &lt;code&gt;hashCode&lt;/code&gt; 와는 다르게 해시 코드에 비트를 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f3043eae8661a4aa42d0518d014141c9f1b3b135" translate="yes" xml:space="preserve">
          <source>The implicitly provided implementation returns a string which contains the name of the record class, the names of components of the record, and string representations of component values, so as to fulfill the contract of this method. The precise format produced by this implicitly provided implementation is subject to change, so the present syntax should not be parsed by applications to recover record component values.</source>
          <target state="translated">암시 적으로 제공된 구현은이 메서드의 계약을 이행하기 위해 레코드 클래스의 이름, 레코드의 구성 요소 이름 및 구성 요소 값의 문자열 표현을 포함하는 문자열을 반환합니다. 이 암시 적으로 제공된 구현에 의해 생성 된 정확한 형식은 변경 될 수 있으므로 레코드 구성 요소 값을 복구하기 위해 응용 프로그램에서 현재 구문을 구문 분석해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="7aa873e376794141b49cb1ea8a0bd75fbba299ec" translate="yes" xml:space="preserve">
          <source>The importance of this to parallel evaluation can be seen if we expand this to four terms:</source>
          <target state="translated">이것을 4 개의 용어로 확장하면 병렬 평가에 대한 중요성을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47f872f2e181d170c9f064e4e0e278d2b43b7e7a" translate="yes" xml:space="preserve">
          <source>The important point to note is the first argument to the &lt;code&gt;
 add&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; methods is the field maintaining the listeners. In addition you must assign the result of the &lt;code&gt;add&lt;/code&gt; and &lt;code&gt;remove&lt;/code&gt; methods to the field maintaining the listeners.</source>
          <target state="translated">주목해야 할 중요한 점은 &lt;code&gt; add&lt;/code&gt; 및 &lt;code&gt;remove&lt;/code&gt; 메서드에 대한 첫 번째 인수 는 리스너를 유지 관리하는 필드라는 것입니다. 또한 &lt;code&gt;add&lt;/code&gt; 및 &lt;code&gt;remove&lt;/code&gt; 메서드 의 결과를 리스너를 유지하는 필드에 할당해야합니다 .</target>
        </trans-unit>
        <trans-unit id="c1e10b89a974f0ebd3253725c84055ab09cbc083" translate="yes" xml:space="preserve">
          <source>The imported node copies its &lt;code&gt;target&lt;/code&gt; and &lt;code&gt;data&lt;/code&gt; values from those of the source node.Note that the &lt;code&gt;deep&lt;/code&gt; parameter has no effect on this type of nodes since they cannot have any children.</source>
          <target state="translated">가져온 노드 는 소스 노드의 &lt;code&gt;target&lt;/code&gt; 및 &lt;code&gt;data&lt;/code&gt; 값을 복사 합니다. &lt;code&gt;deep&lt;/code&gt; 매개 변수는 자식을 가질 수 없기 때문에이 유형의 노드에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="21c35430c664768194fbb13c6a879d3843e0bfe7" translate="yes" xml:space="preserve">
          <source>The imported node that belongs to this &lt;code&gt;Document&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;Document&lt;/code&gt; 속한 가져온 노드입니다 .</target>
        </trans-unit>
        <trans-unit id="14b8f3fc9feb417d0cc733925e38d2fcdc82d0b5" translate="yes" xml:space="preserve">
          <source>The in-memory representation of an elements may contain a reference to an &lt;code&gt;Object&lt;/code&gt;. There is no provision for representing such objects textually.</source>
          <target state="translated">요소의 메모리 내 표현에는 &lt;code&gt;Object&lt;/code&gt; 에 대한 참조가 포함될 수 있습니다 . 그러한 객체를 텍스트로 표현할 규정은 없습니다.</target>
        </trans-unit>
        <trans-unit id="d11ff3668969981f7d9c4c8296a5b6396f07bac9" translate="yes" xml:space="preserve">
          <source>The inapplicable conversion</source>
          <target state="translated">적용 할 수없는 전환</target>
        </trans-unit>
        <trans-unit id="bb2a6499474ea9eac81ba3d143a5276ee4c995c9" translate="yes" xml:space="preserve">
          <source>The inbound network buffer may be modified as a result of this call: therefore if the network data packet is required for some secondary purpose, the data should be duplicated before calling this method. Note: the network data will not be useful to a second SSLEngine, as each SSLEngine contains unique random state which influences the SSL/TLS messages.</source>
          <target state="translated">이 호출의 결과로 인바운드 네트워크 버퍼가 수정 될 수 있습니다. 따라서 일부 보조 목적으로 네트워크 데이터 패킷이 필요한 경우이 메소드를 호출하기 전에 데이터를 복제해야합니다. 참고 : 각 SSLEngine에는 SSL / TLS 메시지에 영향을주는 고유 한 임의 상태가 포함되므로 네트워크 데이터는 두 번째 SSLEngine에 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8d699eb8aa8de1405731c919b0b4de83e04c8bf2" translate="yes" xml:space="preserve">
          <source>The inbound network buffer may be modified as a result of this call: therefore if the network data packet is required for some secondary purpose, the data should be duplicated before calling this method. Note: the network data will not be useful to a second SSLEngine, as each SSLEngine contains unique random state which influences the SSL/TLS/DTLS messages.</source>
          <target state="translated">이 호출의 결과로 인바운드 네트워크 버퍼가 수정 될 수 있습니다. 따라서 네트워크 데이터 패킷이 일부 보조 목적으로 필요한 경우이 메서드를 호출하기 전에 데이터를 복제해야합니다. 참고 : 각 SSLEngine에는 SSL / TLS / DTLS 메시지에 영향을주는 고유 한 임의 상태가 포함되어 있으므로 네트워크 데이터는 두 번째 SSLEngine에 유용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="aa3b2a5b0cce44110ed80362543628b78d7b8ccd" translate="yes" xml:space="preserve">
          <source>The inclusive lower bound of the rollback codes.</source>
          <target state="translated">롤백 코드의 포함 하한입니다.</target>
        </trans-unit>
        <trans-unit id="35fe39a3e8daa9f8d821a93e30e78b4396b3accd" translate="yes" xml:space="preserve">
          <source>The inclusive upper bound of the rollback error code.</source>
          <target state="translated">롤백 오류 코드의 포함 상한입니다.</target>
        </trans-unit>
        <trans-unit id="4591152df21bb221a96ff5b50e6d3a7a7e4f08c1" translate="yes" xml:space="preserve">
          <source>The increase button.</source>
          <target state="translated">증가 버튼.</target>
        </trans-unit>
        <trans-unit id="d09f0816d06c72350347621095fd55b4391384a1" translate="yes" xml:space="preserve">
          <source>The index argument must be greater than or equal to &lt;code&gt;0&lt;/code&gt;, and less than the length of this sequence.</source>
          <target state="translated">인덱스 인수는 &lt;code&gt;0&lt;/code&gt; 보다 크거나 같아야하며이 시퀀스의 길이보다 작아야합니다.</target>
        </trans-unit>
        <trans-unit id="80b450539685211ccc1833f27483d2868aa7a50c" translate="yes" xml:space="preserve">
          <source>The index array passed into the &lt;code&gt;setMatchColumn&lt;/code&gt; methods indicates how many match columns are being set (the length of the array) in addition to which columns will be used for the match. For example:</source>
          <target state="translated">&lt;code&gt;setMatchColumn&lt;/code&gt; 메소드에 전달 된 인덱스 배열 은 일치에 사용될 열 외에도 설정중인 일치 열 수 (배열 길이)를 나타냅니다. 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="c501f93a2ca90f9ea5482a86ad03134df8cccb7a" translate="yes" xml:space="preserve">
          <source>The index is included in this exception's detail message. The exact presentation format of the detail message is unspecified.</source>
          <target state="translated">색인은이 예외의 세부 사항 메시지에 포함됩니다. 세부 메시지의 정확한 표시 형식은 지정되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="d110c0303b7504a3d86b1ba9fbbb90cb3182eff3" translate="yes" xml:space="preserve">
          <source>The index must be a value greater than or equal to &lt;code&gt;0&lt;/code&gt; and less than or equal to the current size of the vector. (If the index is equal to the current size of the vector, the new element is appended to the Vector.)</source>
          <target state="translated">인덱스는 &lt;code&gt;0&lt;/code&gt; 보다 크거나 같고 현재 벡터 크기 보다 작거나 같은 값이어야합니다 . 색인이 벡터의 현재 크기와 같으면 새 요소가 벡터에 추가됩니다.</target>
        </trans-unit>
        <trans-unit id="c8b94ccd821ae168771b3c0bce8f50e0fa10c633" translate="yes" xml:space="preserve">
          <source>The index must be a value greater than or equal to &lt;code&gt;0&lt;/code&gt; and less than the current size of the vector.</source>
          <target state="translated">인덱스는 &lt;code&gt;0&lt;/code&gt; 보다 크거나 같고 벡터의 현재 크기보다 작아야합니다.</target>
        </trans-unit>
        <trans-unit id="62e63686068957c51275db449165d29003ac47e5" translate="yes" xml:space="preserve">
          <source>The index of the attribute, or -1 if it does not appear in the list.</source>
          <target state="translated">속성의 인덱스 또는 목록에 나타나지 않는 경우 -1입니다.</target>
        </trans-unit>
        <trans-unit id="634cf8881bffb28436cbadcdf2fa68fc2f5e5ccf" translate="yes" xml:space="preserve">
          <source>The index of the button.</source>
          <target state="translated">버튼의 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="ab04bf90af1fca72f6bd4fa0c209a856d9a63eeb" translate="yes" xml:space="preserve">
          <source>The index of the column being dragged.</source>
          <target state="translated">끌고있는 열의 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="739fedab35265517ea308014b27461b4ea4d32be" translate="yes" xml:space="preserve">
          <source>The index of the column being dragged. &lt;code&gt;null&lt;/code&gt; if not dragging.</source>
          <target state="translated">끌고있는 열의 인덱스입니다. 드래그하지 않으면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="f34aed7c60a9e28a443a907e7eecff6c58ebb518" translate="yes" xml:space="preserve">
          <source>The index of the column being resized.</source>
          <target state="translated">크기를 조정할 열의 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="5709d32206c70e14fc102c4325947a272b7eef73" translate="yes" xml:space="preserve">
          <source>The index of the column being resized. &lt;code&gt;null&lt;/code&gt; if not resizing.</source>
          <target state="translated">크기를 조정할 열의 인덱스입니다. 크기를 조정하지 않으면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="3c713de2c6cd1e10a2ee8eca913f67cfa7787102" translate="yes" xml:space="preserve">
          <source>The index of the column from where it was moved or removed</source>
          <target state="translated">이동 또는 제거 된 열의 인덱스</target>
        </trans-unit>
        <trans-unit id="5476d5cd262fc98778e43b57c1769e4271ac097c" translate="yes" xml:space="preserve">
          <source>The index of the column in the model which is to be displayed by this &lt;code&gt;TableColumn&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;TableColumn&lt;/code&gt; 에 의해 표시 될 모델의 열 인덱스입니다 .</target>
        </trans-unit>
        <trans-unit id="b1970e00b3ec369750567ac9ff0ca623c4d79a78" translate="yes" xml:space="preserve">
          <source>The index of the column in the model which is to be displayed by this &lt;code&gt;TableColumn&lt;/code&gt;. As columns are moved around in the view &lt;code&gt;modelIndex&lt;/code&gt; remains constant.</source>
          <target state="translated">이 &lt;code&gt;TableColumn&lt;/code&gt; 에 의해 표시 될 모델의 열 인덱스입니다 . 뷰에서 열이 이동함에 따라 &lt;code&gt;modelIndex&lt;/code&gt; 는 일정하게 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="97237181c67180c3a85ff731ca9e29203dc4fe35" translate="yes" xml:space="preserve">
          <source>The index of the column to where it was moved or added</source>
          <target state="translated">이동 또는 추가 된 열의 인덱스</target>
        </trans-unit>
        <trans-unit id="b43760d2baa9ed65d859133ddb3fcdf80bb96958" translate="yes" xml:space="preserve">
          <source>The index of the end of this buffer.</source>
          <target state="translated">이 버퍼 끝의 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="f695822c13213a26a764fdd97f97ec145aace4f7" translate="yes" xml:space="preserve">
          <source>The index of the end of this buffer. There is not valid data at or beyond this index.</source>
          <target state="translated">이 버퍼 끝의 인덱스입니다. 이 인덱스 이상의 유효한 데이터가 없습니다.</target>
        </trans-unit>
        <trans-unit id="1590c17a9cdabf74852b9b628b34f6bb6547ef85" translate="yes" xml:space="preserve">
          <source>The index of the first character captured by the group, or &lt;code&gt;-1&lt;/code&gt; if the match was successful but the group itself did not match anything</source>
          <target state="translated">그룹이 캡처 한 첫 번째 문자의 색인이거나 , 일치했지만 그룹 자체가 아무 것도 일치하지 않으면 &lt;code&gt;-1&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="14690427864e8e9fb011be08cf98fb6bec38525d" translate="yes" xml:space="preserve">
          <source>The index of the first character matched</source>
          <target state="translated">일치하는 첫 번째 문자의 색인</target>
        </trans-unit>
        <trans-unit id="037f2614e75c97fb1b5d71d0d0cea4aaad2f9e8e" translate="yes" xml:space="preserve">
          <source>The index of the focused component.</source>
          <target state="translated">포커스가있는 구성 요소의 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="2b1a675cd8d72171fb8d26b97ee0f084893697b2" translate="yes" xml:space="preserve">
          <source>The index of the next character to read from the input stream buffer.</source>
          <target state="translated">입력 스트림 버퍼에서 읽을 다음 문자의 색인입니다.</target>
        </trans-unit>
        <trans-unit id="6236644c7f73481257e874584222314b9bf01500" translate="yes" xml:space="preserve">
          <source>The index of the next character to read from the input stream buffer. This value should always be nonnegative and not larger than the value of &lt;code&gt;count&lt;/code&gt;. The next byte to be read from the input stream buffer will be &lt;code&gt;buf[pos]&lt;/code&gt;.</source>
          <target state="translated">입력 스트림 버퍼에서 읽을 다음 문자의 색인입니다. 이 값은 항상 음수가 아니어야하며 &lt;code&gt;count&lt;/code&gt; 값보다 크지 않아야 합니다. 입력 스트림 버퍼에서 읽을 다음 바이트는 &lt;code&gt;buf[pos]&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="5efc56a51a0de538997e4f3583c8deb79cf74c6d" translate="yes" xml:space="preserve">
          <source>The index of the position in the circular buffer at which the next byte of data will be read by this piped input stream.</source>
          <target state="translated">이 파이프 된 입력 스트림이 다음 바이트의 데이터를 읽을 순환 버퍼의 위치 색인입니다.</target>
        </trans-unit>
        <trans-unit id="d5d543d602524132f86d32c3de4d6c1230cc0041" translate="yes" xml:space="preserve">
          <source>The index of the position in the circular buffer at which the next byte of data will be stored when received from the connected piped output stream.</source>
          <target state="translated">연결된 파이프 된 출력 스트림에서 수신 될 때 데이터의 다음 바이트가 저장 될 순환 버퍼의 위치 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="7730a24d44411399e802148bed0e48e3d5ce6bbf" translate="yes" xml:space="preserve">
          <source>The index of the position in the circular buffer at which the next byte of data will be stored when received from the connected piped output stream. &lt;code&gt;in&amp;lt;0&lt;/code&gt; implies the buffer is empty, &lt;code&gt;in==out&lt;/code&gt; implies the buffer is full</source>
          <target state="translated">연결된 파이프 출력 스트림에서 수신 될 때 다음 바이트의 데이터가 저장 될 원형 버퍼의 위치 인덱스. &lt;code&gt;in&amp;lt;0&lt;/code&gt; 은 버퍼가 비어 있음을 나타내고 &lt;code&gt;in==out&lt;/code&gt; 은 버퍼가 가득 찼음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="c03f1a67d6303d66266947fada9aa37131e41fa3" translate="yes" xml:space="preserve">
          <source>The index of this &lt;code&gt;OPTION&lt;/code&gt; in its parent &lt;code&gt;SELECT&lt;/code&gt; , starting from 0.</source>
          <target state="translated">0부터 시작 하는 부모 &lt;code&gt;SELECT&lt;/code&gt; 에있는 이 &lt;code&gt;OPTION&lt;/code&gt; 의 인덱스입니다 .</target>
        </trans-unit>
        <trans-unit id="2226b46f59787a9b0e3b60f1c764fb9de8294a00" translate="yes" xml:space="preserve">
          <source>The index of this cell in the row, starting from 0.</source>
          <target state="translated">0부터 시작하는 행에있는이 셀의 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="0fd44a29d4fd280e01b66005ce677791610ec93a" translate="yes" xml:space="preserve">
          <source>The index of this cell in the row, starting from 0. This index is in document tree order and not display order.</source>
          <target state="translated">0부터 시작하는 행에있는이 셀의 인덱스입니다.이 인덱스는 표시 순서가 아닌 문서 트리 순서입니다.</target>
        </trans-unit>
        <trans-unit id="3fff2a5e1d285b214f04c67a81d7e059da262614" translate="yes" xml:space="preserve">
          <source>The index of this row, relative to the current section ( &lt;code&gt;THEAD&lt;/code&gt; , &lt;code&gt;TFOOT&lt;/code&gt; , or &lt;code&gt;TBODY&lt;/code&gt; ), starting from 0.</source>
          <target state="translated">0부터 시작 하는 현재 섹션 ( &lt;code&gt;THEAD&lt;/code&gt; , &lt;code&gt;TFOOT&lt;/code&gt; 또는 &lt;code&gt;TBODY&lt;/code&gt; )에 상대적인이 행의 색인입니다 .</target>
        </trans-unit>
        <trans-unit id="e822cfa1652391e22e71c07a07522ba182006f9d" translate="yes" xml:space="preserve">
          <source>The index of this row, relative to the entire table, starting from 0.</source>
          <target state="translated">0부터 시작하여 전체 테이블에 상대적인이 행의 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="9f94f0315cfad6977369420f7d9189f57dbfa2ca" translate="yes" xml:space="preserve">
          <source>The index of this row, relative to the entire table, starting from 0. This is in document tree order and not display order. The &lt;code&gt;rowIndex&lt;/code&gt; does not take into account sections ( &lt;code&gt;THEAD&lt;/code&gt; , &lt;code&gt;TFOOT&lt;/code&gt; , or &lt;code&gt;TBODY&lt;/code&gt; ) within the table.</source>
          <target state="translated">0부터 시작하는 전체 테이블과 관련된이 행의 인덱스입니다. 이는 문서 트리 순서이며 표시 순서가 아닙니다. &lt;code&gt;rowIndex&lt;/code&gt; 에이 계정 섹션 (고려하지 않는 &lt;code&gt;THEAD&lt;/code&gt; , &lt;code&gt;TFOOT&lt;/code&gt; , 또는 &lt;code&gt;TBODY&lt;/code&gt; 테이블 내에서).</target>
        </trans-unit>
        <trans-unit id="5dab56f9b14368b91d79e93d282b496b521bfa4f" translate="yes" xml:space="preserve">
          <source>The index one greater than the index of the last valid byte in the buffer.</source>
          <target state="translated">버퍼에있는 마지막 유효한 바이트의 인덱스보다 하나 큰 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="35f63ccce04acce64e5535be8e7c215541fbc335" translate="yes" xml:space="preserve">
          <source>The index one greater than the index of the last valid byte in the buffer. This value is always in the range &lt;code&gt;0&lt;/code&gt; through &lt;code&gt;buf.length&lt;/code&gt;; elements &lt;code&gt;buf[0]&lt;/code&gt; through &lt;code&gt;buf[count-1]
 &lt;/code&gt;contain buffered input data obtained from the underlying input stream.</source>
          <target state="translated">버퍼에서 마지막 유효 바이트의 인덱스보다 하나 큰 인덱스. 이 값은 항상 &lt;code&gt;0&lt;/code&gt; 에서 &lt;code&gt;buf.length&lt;/code&gt; 범위입니다 . &lt;code&gt;buf[0]&lt;/code&gt; ~ &lt;code&gt;buf[count-1] &lt;/code&gt; 요소 는 기본 입력 스트림에서 얻은 버퍼링 된 입력 데이터를 포함합니다.</target>
        </trans-unit>
        <trans-unit id="1d986b4bba5b7f2c725fe87ab2ecbfa0c88a3dc3" translate="yes" xml:space="preserve">
          <source>The index one greater than the index of the last valid byte in the buffer. This value is always in the range &lt;code&gt;0&lt;/code&gt; through &lt;code&gt;buf.length&lt;/code&gt;; elements &lt;code&gt;buf[0]&lt;/code&gt; through &lt;code&gt;buf[count-1]&lt;/code&gt; contain buffered input data obtained from the underlying input stream.</source>
          <target state="translated">버퍼에있는 마지막 유효한 바이트의 인덱스보다 하나 큰 인덱스입니다. 이 값은 항상 &lt;code&gt;0&lt;/code&gt; - &lt;code&gt;buf.length&lt;/code&gt; 범위에 있습니다 . 요소 &lt;code&gt;buf[0]&lt;/code&gt; 통해 &lt;code&gt;buf[count-1]&lt;/code&gt; 기본 입력 스트림 버퍼로부터 얻어진 입력 데이터를 포함한다.</target>
        </trans-unit>
        <trans-unit id="7603e35433e10f4f8d37bf47974c33eb262bf2cf" translate="yes" xml:space="preserve">
          <source>The index one greater than the last valid character in the input stream buffer.</source>
          <target state="translated">입력 스트림 버퍼의 마지막 유효한 문자보다 하나 큰 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="7532d289f9d5f9dcf22dd308f11ba59cb53013a2" translate="yes" xml:space="preserve">
          <source>The index one greater than the last valid character in the input stream buffer. This value should always be nonnegative and not larger than the length of &lt;code&gt;buf&lt;/code&gt;. It is one greater than the position of the last byte within &lt;code&gt;buf&lt;/code&gt; that can ever be read from the input stream buffer.</source>
          <target state="translated">입력 스트림 버퍼의 마지막 유효 문자보다 1 큰 인덱스. 이 값은 항상 음이 아니어야하고 &lt;code&gt;buf&lt;/code&gt; 길이보다 크지 않아야 합니다. 입력 스트림 버퍼에서 읽을 수 있는 &lt;code&gt;buf&lt;/code&gt; 내의 마지막 바이트 위치보다 1이 큽니다 .</target>
        </trans-unit>
        <trans-unit id="c9b5de3fe1d20ea7f6963929d78c83ff1a95b6b4" translate="yes" xml:space="preserve">
          <source>The index specifying the property element that was changed.</source>
          <target state="translated">변경된 프로퍼티 요소를 지정하는 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="c808feb859a3fe39a90463f672194143ca8902dc" translate="yes" xml:space="preserve">
          <source>The index within the media block's rule collection of the newly inserted rule.</source>
          <target state="translated">새로 삽입 된 규칙의 미디어 블록 규칙 컬렉션 내의 인덱스입니다.</target>
        </trans-unit>
        <trans-unit id="6acb97d362b1a82f1ac55d96b963a2347f93e74d" translate="yes" xml:space="preserve">
          <source>The index within the style sheet's rule collection of the newly inserted rule.</source>
          <target state="translated">새로 삽입 된 규칙의 스타일 시트 규칙 컬렉션에있는 색인입니다.</target>
        </trans-unit>
        <trans-unit id="08089d9ad69bfd725ff2770a856862de638e3f18" translate="yes" xml:space="preserve">
          <source>The indexed byte's memory address modulo the unit size</source>
          <target state="translated">인덱싱 된 바이트의 메모리 주소 모듈로 단위 크기</target>
        </trans-unit>
        <trans-unit id="4b24ac1a949792295085eae5d4bcbdde7887c31d" translate="yes" xml:space="preserve">
          <source>The indexed byte's memory address modulus the unit size</source>
          <target state="translated">인덱싱 된 바이트의 메모리 주소 모듈러스 단위 크기</target>
        </trans-unit>
        <trans-unit id="d3784a6dc8c24e3b9cfd559138d87a6ec297e1ea" translate="yes" xml:space="preserve">
          <source>The indexing of RDNs in the list follows the numbering of RDNs described in the class description.</source>
          <target state="translated">목록에서 RDN의 색인 작성은 클래스 설명에 설명 된 RDN의 번호 지정을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="faa5405bce53fb18abb915b5abeb8c78b7d17c39" translate="yes" xml:space="preserve">
          <source>The individual positive and negative permission sets are also determined. The positive permission set contains the permissions specified in the positive ACL entry (if any) for the principal. Similarly, the negative permission set contains the permissions specified in the negative ACL entry (if any) for the principal. The individual positive (or negative) permission set is considered to be null if there is not a positive (negative) ACL entry for the principal in this ACL.</source>
          <target state="translated">개별 긍정적 및 부정적 권한 집합도 결정됩니다. 긍정적 인 권한 집합에는 보안 주체에 대한 긍정적 인 ACL 항목 (있는 경우)에 지정된 권한이 포함됩니다. 마찬가지로, 부정 권한 세트에는 보안 주체에 대한 부정 ACL 항목 (있는 경우)에 지정된 권한이 포함됩니다. 이 ACL의 프린시 펄에 대한 긍정적 (음) ACL 항목이없는 경우 개별 긍정적 (또는 부정) 권한 세트는 널로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="2f79e825e8f4aa1f775a10a39ea722f4a68689bd" translate="yes" xml:space="preserve">
          <source>The information about a garbage collection</source>
          <target state="translated">가비지 컬렉션에 대한 정보</target>
        </trans-unit>
        <trans-unit id="ef3f30727d6bb6becf057ae182437cf5ed0c6feb" translate="yes" xml:space="preserve">
          <source>The information about a memory notification.</source>
          <target state="translated">메모리 알림에 대한 정보입니다.</target>
        </trans-unit>
        <trans-unit id="f3c2ce74a453d840c3d3cb85683165a975a38bfc" translate="yes" xml:space="preserve">
          <source>The information from this event is not necessary for normal Namespace processing: the SAX XML reader will automatically replace prefixes for element and attribute names when the &lt;code&gt;http://xml.org/sax/features/namespaces&lt;/code&gt; feature is &lt;var&gt;true&lt;/var&gt; (the default).</source>
          <target state="translated">이 이벤트의 정보는 일반적인 네임 스페이스 처리에 필요하지 않습니다. SAX XML 판독기는 &lt;code&gt;http://xml.org/sax/features/namespaces&lt;/code&gt; 기능이 &lt;var&gt;true&lt;/var&gt; (기본값) 인 경우 요소 및 속성 이름의 접두사를 자동으로 바꿉니다 .</target>
        </trans-unit>
        <trans-unit id="ca5670133dfad682241f9a7899b676fcf937d136" translate="yes" xml:space="preserve">
          <source>The information is returned as a set of pairs; the first element of a pair contains an (inclusive) minimum width and height, and the second element contains an (inclusive) maximum width and height. Together, each pair defines a valid range of sizes. To specify a fixed size, the same width and height will appear for both elements. A return value of &lt;code&gt;null&lt;/code&gt; indicates that the size is arbitrary or unknown.</source>
          <target state="translated">정보는 한 쌍의 세트로 리턴됩니다. 쌍의 첫 번째 요소에는 최소 너비와 높이가 포함되며 두 번째 요소에는 최대 너비와 높이가 포함됩니다. 각 쌍은 유효한 크기 범위를 정의합니다. 고정 크기를 지정하려면 두 요소 모두에 동일한 너비와 높이가 나타납니다. &lt;code&gt;null&lt;/code&gt; 값을 반환 하면 크기가 임의적이거나 알 수 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a415dbd9864205bad4fef6fbdbf7a0c48d16cbbf" translate="yes" xml:space="preserve">
          <source>The information is returned as a set of pairs; the first element of a pair contains an (inclusive) minimum width and height, and the second element contains an (inclusive) maximum width and height. Together, each pair defines a valid range of sizes. To specify a fixed size, use the same width and height for both elements. To specify an arbitrary range, a value of &lt;code&gt;null&lt;/code&gt; is used in place of an actual array of &lt;code&gt;Dimension&lt;/code&gt;s.</source>
          <target state="translated">정보는 한 쌍의 세트로 리턴됩니다. 쌍의 첫 번째 요소에는 최소 너비와 높이가 포함되며 두 번째 요소에는 최대 너비와 높이가 포함됩니다. 각 쌍은 유효한 크기 범위를 정의합니다. 고정 크기를 지정하려면 두 요소 모두에 동일한 너비와 높이를 사용하십시오. 임의의 범위를 지정하기 위해 실제 &lt;code&gt;Dimension&lt;/code&gt; 배열 대신 &lt;code&gt;null&lt;/code&gt; 값 이 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="3103eb0cb29acd4b776d2c741f795f0cb2bfd745" translate="yes" xml:space="preserve">
          <source>The information stored in a &lt;code&gt;ProtectionParameter&lt;/code&gt; object protects the contents of a keystore. For example, protection parameters may be used to check the integrity of keystore data, or to protect the confidentiality of sensitive keystore data (such as a &lt;code&gt;PrivateKey&lt;/code&gt;).</source>
          <target state="translated">&lt;code&gt;ProtectionParameter&lt;/code&gt; 객체에 저장된 정보 는 키 저장소의 내용을 보호합니다. 예를 들어, 보호 매개 변수를 사용하여 키 저장소 데이터의 무결성을 확인하거나 민감한 키 저장소 데이터 (예 : &lt;code&gt;PrivateKey&lt;/code&gt; ) 의 기밀성을 보호 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f232b85978434189e4a717f030e028407dbe5c9" translate="yes" xml:space="preserve">
          <source>The information that can be retrieved from an object class definition is directory-dependent.</source>
          <target state="translated">객체 클래스 정의에서 검색 할 수있는 정보는 디렉토리에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="d4844822fb540c78ff0305e65b984a34e04d1176" translate="yes" xml:space="preserve">
          <source>The information that you can retrieve from a syntax definition is directory-dependent.</source>
          <target state="translated">구문 정의에서 검색 할 수있는 정보는 디렉토리에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="d754234c829daf3f7bdab4a40e2f1300ae4ef5c9" translate="yes" xml:space="preserve">
          <source>The inherited channel, if any, otherwise &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">어떤 경우 상속 채널은, 그렇지 않으면 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7705348178942231d79bd3fd49fff2d6d64056a0" translate="yes" xml:space="preserve">
          <source>The inherited methods &lt;code&gt;getMessage&lt;/code&gt;, &lt;code&gt;getSQLState&lt;/code&gt;, and &lt;code&gt;getErrorCode&lt;/code&gt; retrieve information contained in a &lt;code&gt;RowSetWarning&lt;/code&gt; object.</source>
          <target state="translated">상속 된 메소드 &lt;code&gt;getMessage&lt;/code&gt; , &lt;code&gt;getSQLState&lt;/code&gt; 및 &lt;code&gt;getErrorCode&lt;/code&gt; 는 &lt;code&gt;RowSetWarning&lt;/code&gt; 객체에 포함 된 정보를 검색 합니다.</target>
        </trans-unit>
        <trans-unit id="582d443042d4213cc0a62c853c554f1e08daabbf" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will be equal to the number of bytes read from the file so far. Reading bytes from this stream will increment the channel's position. Changing the channel's position, either explicitly or by reading, will change this stream's file position.</source>
          <target state="translated">반환 된 채널 의 초기 &lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt; 는 지금까지 파일에서 읽은 바이트 수와 같습니다. 이 스트림에서 바이트를 읽으면 채널의 위치가 증가합니다. 명시 적으로 또는 읽기로 채널의 위치를 ​​변경하면이 스트림의 파일 위치가 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="5fc61bc42b89728b893cc2036ea85014ba2a2590" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will be equal to the number of bytes written to the file so far unless this stream is in append mode, in which case it will be equal to the size of the file. Writing bytes to this stream will increment the channel's position accordingly. Changing the channel's position, either explicitly or by writing, will change this stream's file position.</source>
          <target state="translated">반환 된 채널 의 초기 &lt;a href=&quot;../nio/channels/filechannel#position()&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt; 는이 스트림이 추가 모드에 있지 않으면 지금까지 파일에 기록 된 바이트 수와 같습니다.이 경우 파일 크기와 동일합니다. 이 스트림에 바이트를 쓰면 그에 따라 채널의 위치가 증가합니다. 명시 적으로 또는 쓰기를 통해 채널의 위치를 ​​변경하면이 스트림의 파일 위치가 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="23fdec03cbe08d9ee1145b99b267e04326a46f01" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will be equal to the number of bytes read from the file so far. Reading bytes from this stream will increment the channel's position. Changing the channel's position, either explicitly or by reading, will change this stream's file position.</source>
          <target state="translated">리턴 된 채널 의 초기 &lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt; 는 지금까지 파일에서 읽은 바이트 수와 같습니다. 이 스트림에서 바이트를 읽으면 채널 위치가 증가합니다. 채널 위치를 명시 적으로 또는 읽음으로 변경하면이 스트림의 파일 위치가 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="e56adadcca778289c07ac038c40805d5ee9569a3" translate="yes" xml:space="preserve">
          <source>The initial &lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt;&lt;code&gt;position&lt;/code&gt;&lt;/a&gt; of the returned channel will be equal to the number of bytes written to the file so far unless this stream is in append mode, in which case it will be equal to the size of the file. Writing bytes to this stream will increment the channel's position accordingly. Changing the channel's position, either explicitly or by writing, will change this stream's file position.</source>
          <target state="translated">리턴 된 채널 의 초기 &lt;a href=&quot;../nio/channels/filechannel#position--&quot;&gt; &lt;code&gt;position&lt;/code&gt; &lt;/a&gt; 는이 스트림이 추가 모드에 있지 않는 한 지금까지 파일에 기록 된 바이트 수와 같으며,이 경우 파일 크기와 같습니다. 이 스트림에 바이트를 쓰면 그에 따라 채널의 위치가 증가합니다. 채널 위치를 명시 적 또는 쓰기로 변경하면이 스트림의 파일 위치가 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="17264991b607e7774754f4f15104f38cccd2023e" translate="yes" xml:space="preserve">
          <source>The initial address that the channel's socket is bound to using &lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt;&lt;code&gt;bind&lt;/code&gt;&lt;/a&gt; may be removed from the bound addresses for the channel's socket.</source>
          <target state="translated">&lt;a href=&quot;#bind(java.net.SocketAddress,int)&quot;&gt; &lt;code&gt;bind&lt;/code&gt; &lt;/a&gt; 를 사용하여 채널의 소켓이 바인딩 된 초기 주소는 채널 소켓 의 바인딩 된 주소에서 제거 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="54104849828faeb71a83684ba5a379183a42a8a1" translate="yes" xml:space="preserve">
          <source>The initial capacity controls a tradeoff between wasted space and the need for &lt;code&gt;rehash&lt;/code&gt; operations, which are time-consuming. No &lt;code&gt;rehash&lt;/code&gt; operations will</source>
          <target state="translated">초기 용량은 낭비되는 공간과 시간이 많이 걸리는 &lt;code&gt;rehash&lt;/code&gt; 작업 의 필요성 간의 균형을 제어합니다 . &lt;code&gt;rehash&lt;/code&gt; 작업이 없습니다</target>
        </trans-unit>
        <trans-unit id="d566609c979c8e49cfb0dc2950fb7324f878fe5f" translate="yes" xml:space="preserve">
          <source>The initial capacity of a &lt;code&gt;Properties&lt;/code&gt; object created with this constructor is unspecified.</source>
          <target state="translated">이 생성자로 생성 된 &lt;code&gt;Properties&lt;/code&gt; 객체 의 초기 용량 은 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="db054b9bc58cff191805517256422fe118db7cfb" translate="yes" xml:space="preserve">
          <source>The initial class file bytes represent the bytes passed to &lt;a href=&quot;../../../../java.base/java/lang/classloader#defineClass(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;ClassLoader.defineClass&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt;&lt;code&gt;redefineClasses&lt;/code&gt;&lt;/a&gt; (before any transformations were applied), however they might not exactly match them. The constant pool might not have the same layout or contents. The constant pool may have more or fewer entries. Constant pool entries may be in a different order; however, constant pool indices in the bytecodes of methods will correspond. Some attributes may not be present. Where order is not meaningful, for example the order of methods, order might not be preserved.</source>
          <target state="translated">초기 클래스 파일 바이트는 &lt;a href=&quot;../../../../java.base/java/lang/classloader#defineClass(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;ClassLoader.defineClass&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#redefineClasses(java.lang.instrument.ClassDefinition...)&quot;&gt; &lt;code&gt;redefineClasses&lt;/code&gt; &lt;/a&gt; (변환이 적용되기 전)에 전달 된 바이트를 나타내지 만 정확히 일치하지 않을 수 있습니다. 상수 풀에는 동일한 레이아웃이나 내용이 없을 수 있습니다. 상수 풀에는 항목이 더 많거나 적을 수 있습니다. 상수 풀 항목은 순서가 다를 수 있습니다. 그러나 메서드의 바이트 코드에있는 상수 풀 인덱스가 일치합니다. 일부 속성이 없을 수 있습니다. 순서가 의미가없는 경우 (예 : 메서드 순서) 순서가 유지되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="73036cdb82068da260ec582e655554dd532915b6" translate="yes" xml:space="preserve">
          <source>The initial class file bytes represent the bytes passed to &lt;a href=&quot;../classloader#defineClass-byte:A-int-int-&quot;&gt;&lt;code&gt;ClassLoader.defineClass&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt;&lt;code&gt;redefineClasses&lt;/code&gt;&lt;/a&gt; (before any transformations were applied), however they might not exactly match them. The constant pool might not have the same layout or contents. The constant pool may have more or fewer entries. Constant pool entries may be in a different order; however, constant pool indices in the bytecodes of methods will correspond. Some attributes may not be present. Where order is not meaningful, for example the order of methods, order might not be preserved.</source>
          <target state="translated">초기 클래스 파일 바이트는 변환이 적용되기 전에 &lt;a href=&quot;../classloader#defineClass-byte:A-int-int-&quot;&gt; &lt;code&gt;ClassLoader.defineClass&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;instrumentation#redefineClasses-java.lang.instrument.ClassDefinition...-&quot;&gt; &lt;code&gt;redefineClasses&lt;/code&gt; 에&lt;/a&gt; 전달 된 바이트를 나타내지 만 정확하게 일치하지 않을 수 있습니다. 상수 풀의 레이아웃이나 내용이 같지 않을 수 있습니다. 상수 풀에는 더 많거나 적은 항목이있을 수 있습니다. 상수 풀 항목은 다른 순서로있을 수 있습니다. 그러나 메소드의 바이트 코드에서 상수 풀 인덱스는 일치합니다. 일부 속성이 없을 수 있습니다. 순서가 의미가없는 경우 (예 : 메소드 순서) 순서가 유지되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad81007d5811bb624623fea0ed5de856f5ea5fbc" translate="yes" xml:space="preserve">
          <source>The initial context implementation is determined at runtime. The default policy uses the environment property &quot;&lt;a href=&quot;context#INITIAL_CONTEXT_FACTORY&quot;&gt;&lt;code&gt;java.naming.factory.initial&lt;/code&gt;&lt;/a&gt;&quot;, which contains the class name of the initial context factory. An exception to this policy is made when resolving URL strings, as described below.</source>
          <target state="translated">초기 컨텍스트 구현은 런타임에 결정됩니다. 기본 정책은 초기 컨텍스트 팩토리의 클래스 이름을 포함 하는 환경 특성 &quot; &lt;a href=&quot;context#INITIAL_CONTEXT_FACTORY&quot;&gt; &lt;code&gt;java.naming.factory.initial&lt;/code&gt; &lt;/a&gt; &quot;을 사용합니다 . 아래 설명과 같이 URL 문자열을 확인할 때이 정책은 예외입니다.</target>
        </trans-unit>
        <trans-unit id="b83fd820055d3d386f3fa568c59529845227e73a" translate="yes" xml:space="preserve">
          <source>The initial inherited setting may be overridden by calling &lt;a href=&quot;sslsocket#setNeedClientAuth(boolean)&quot;&gt;&lt;code&gt;SSLSocket.setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sslsocket#setWantClientAuth(boolean)&quot;&gt;&lt;code&gt;SSLSocket.setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">초기 상속 설정은 &lt;a href=&quot;sslsocket#setNeedClientAuth(boolean)&quot;&gt; &lt;code&gt;SSLSocket.setNeedClientAuth(boolean)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;sslsocket#setWantClientAuth(boolean)&quot;&gt; &lt;code&gt;SSLSocket.setWantClientAuth(boolean)&lt;/code&gt; &lt;/a&gt; 을 호출하여 재정의 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="5968bd4b24be43322be2226d7e4b483ae0f3d038" translate="yes" xml:space="preserve">
          <source>The initial inherited setting may be overridden by calling &lt;a href=&quot;sslsocket#setNeedClientAuth-boolean-&quot;&gt;&lt;code&gt;SSLSocket.setNeedClientAuth(boolean)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;sslsocket#setWantClientAuth-boolean-&quot;&gt;&lt;code&gt;SSLSocket.setWantClientAuth(boolean)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">상속 된 초기 설정은 &lt;a href=&quot;sslsocket#setNeedClientAuth-boolean-&quot;&gt; &lt;code&gt;SSLSocket.setNeedClientAuth(boolean)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;sslsocket#setWantClientAuth-boolean-&quot;&gt; &lt;code&gt;SSLSocket.setWantClientAuth(boolean)&lt;/code&gt; &lt;/a&gt; 을 호출하여 무시할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b1897ad9016c1b8f5933ba77ebd479010f4eaa18" translate="yes" xml:space="preserve">
          <source>The initial interpretation of the user's gesture, and the subsequent starting of the drag operation are the responsibility of the implementing &lt;code&gt;Component&lt;/code&gt;, which is usually implemented by a &lt;code&gt;DragGestureRecognizer&lt;/code&gt;.</source>
          <target state="translated">사용자 제스처의 초기 해석과 드래그 작업의 후속 시작 은 일반적으로 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 에 의해 구현되는 &lt;code&gt;Component&lt;/code&gt; 구현의 책임입니다 .</target>
        </trans-unit>
        <trans-unit id="52f36d4af5ef3717e82f46af43c8962803c23e03" translate="yes" xml:space="preserve">
          <source>The initial size of this container is set to 100x100, but can be reset using setSize().</source>
          <target state="translated">이 컨테이너의 초기 크기는 100x100으로 설정되어 있지만 setSize ()를 사용하여 재설정 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a611d393e040fa6908cfe45ae4f8bccb6cdd990b" translate="yes" xml:space="preserve">
          <source>The initial state of the Range returned from this method is such that both of its boundary-points are positioned at the beginning of the corresponding Document, before any content. The Range returned can only be used to select content associated with this Document, or with DocumentFragments and Attrs for which this Document is the &lt;code&gt;ownerDocument&lt;/code&gt;.</source>
          <target state="translated">이 메서드에서 반환 된 Range의 초기 상태는 두 경계 지점이 콘텐츠 앞에 해당 문서의 시작 부분에 위치하는 것입니다. 반환 된 Range는이 문서 또는이 문서가 ownerDocument 인 DocumentFragments 및 Attrs와 연결된 콘텐츠를 선택하는 &lt;code&gt;ownerDocument&lt;/code&gt; 있습니다.</target>
        </trans-unit>
        <trans-unit id="d827b64415ef0a5d45d6dc2e526c43b3bca8568b" translate="yes" xml:space="preserve">
          <source>The initial state when a &lt;code&gt;Recording&lt;/code&gt; is created.</source>
          <target state="translated">&lt;code&gt;Recording&lt;/code&gt; 이 생성 될 때의 초기 상태 입니다.</target>
        </trans-unit>
        <trans-unit id="9935552c412b3a39d923f441da111d0d265b51da" translate="yes" xml:space="preserve">
          <source>The initial threshold value.</source>
          <target state="translated">초기 임계 값입니다.</target>
        </trans-unit>
        <trans-unit id="e4712f648942f6879aa403441218fb6b8e9518fe" translate="yes" xml:space="preserve">
          <source>The initial threshold.</source>
          <target state="translated">초기 임계 값입니다.</target>
        </trans-unit>
        <trans-unit id="bdc9501532a47a6e31c18417935f798102b78798" translate="yes" xml:space="preserve">
          <source>The initial value of this field is -4.</source>
          <target state="translated">이 필드의 초기 값은 -4입니다.</target>
        </trans-unit>
        <trans-unit id="f2f1d7dcaca30d81c998107fa35d0caadf3769db" translate="yes" xml:space="preserve">
          <source>The initial value of this field is 0.0.</source>
          <target state="translated">이 필드의 초기 값은 0.0입니다.</target>
        </trans-unit>
        <trans-unit id="b2c6b58f2a898e929dd294246d0e9d9b915b3041" translate="yes" xml:space="preserve">
          <source>The initial value of this field is null.</source>
          <target state="translated">이 필드의 초기 값은 null입니다.</target>
        </trans-unit>
        <trans-unit id="480fad772f115d1b94ae7ccdff16d0e302222891" translate="yes" xml:space="preserve">
          <source>The initial value of this socket option is &lt;code&gt;FALSE&lt;/code&gt;. The socket option may be enabled or disabled at any time.</source>
          <target state="translated">이 소켓 옵션의 초기 값은 &lt;code&gt;FALSE&lt;/code&gt; 입니다. 소켓 옵션은 언제든지 활성화하거나 비활성화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d64b75cc22cc7a22a6b3905f1b539199bfb6427f" translate="yes" xml:space="preserve">
          <source>The initial value of this socket option is &lt;code&gt;FALSE&lt;/code&gt;. The socket option may be enabled or disabled at any time. Some operating systems may require that the Java virtual machine be started with implementation specific privileges to enable this option or send broadcast datagrams.</source>
          <target state="translated">이 소켓 옵션의 초기 값은 &lt;code&gt;FALSE&lt;/code&gt; 입니다. 소켓 옵션은 언제든지 활성화하거나 비활성화 할 수 있습니다. 일부 운영 체제에서는이 옵션을 사용하거나 브로드 캐스트 데이터 그램을 전송하기 위해 구현 별 권한으로 Java 가상 머신을 시작해야 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b53baf5e2a73c2a6e3ac07e7437cbec9e913530a" translate="yes" xml:space="preserve">
          <source>The initial value of this socket option is a negative value, meaning that the option is disabled. The option may be enabled, or the linger interval changed, at any time. The maximum value of the linger interval is system dependent. Setting the linger interval to a value that is greater than its maximum value causes the linger interval to be set to its maximum value.</source>
          <target state="translated">이 소켓 옵션의 초기 값은 음수이며 옵션이 비활성화되어 있음을 의미합니다. 이 옵션은 언제든지 활성화되거나 지연 간격이 변경 될 수 있습니다. 지연 간격의 최대 값은 시스템에 따라 다릅니다. 지연 간격을 최대 값보다 큰 값으로 설정하면 지연 간격이 최대 값으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="145aa0f5c504a6b90dfb4929918b3107cf434d35" translate="yes" xml:space="preserve">
          <source>The initial/default size of the socket receive buffer and the range of allowable values is system dependent although a negative size is not allowed. An attempt to set the socket receive buffer to larger than its maximum size causes it to be set to its maximum size.</source>
          <target state="translated">소켓 수신 버퍼의 초기 / 기본 크기와 허용 가능한 값의 범위는 음수 크기는 허용되지 않지만 시스템에 따라 다릅니다. 소켓 수신 버퍼를 최대 크기보다 크게 설정하려고하면 최대 크기로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="51f73748332022abeb0586fd7f96ab66f0792fc2" translate="yes" xml:space="preserve">
          <source>The initial/default size of the socket send buffer and the range of allowable values is system dependent although a negative size is not allowed. An attempt to set the socket send buffer to larger than its maximum size causes it to be set to its maximum size.</source>
          <target state="translated">소켓 송신 버퍼의 초기 / 기본 크기와 허용 가능한 값의 범위는 음수 크기는 허용되지 않지만 시스템에 따라 다릅니다. 소켓 송신 버퍼를 최대 크기보다 크게 설정하려고하면 최대 크기로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="ed6a796b3846abce78654b51752b778ce337d346" translate="yes" xml:space="preserve">
          <source>The initial/default value of the TOS field in the ToS octet is implementation specific but will typically be &lt;code&gt;0&lt;/code&gt;. For datagram-oriented sockets the option may be configured at any time after the socket has been bound. The new value of the octet is used when sending subsequent datagrams. It is system dependent whether this option can be queried or changed prior to binding the socket.</source>
          <target state="translated">ToS 옥텟에서 TOS 필드의 초기 / 기본 값은 구현에 따라 다르지만 일반적으로 &lt;code&gt;0&lt;/code&gt; 입니다. 데이터 그램 지향 소켓의 경우, 소켓이 바인드 된 후 언제든지 옵션을 구성 할 수 있습니다. 후속 데이터 그램을 전송할 때 옥텟의 새로운 값이 사용됩니다. 소켓 바인딩 전에이 옵션을 쿼리하거나 변경할 수 있는지 여부는 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="e93c89bc9134002e795c3937793d09a863552a6d" translate="yes" xml:space="preserve">
          <source>The initial/default value of the time-to-live setting is typically &lt;code&gt;1&lt;/code&gt;. An implementation allows this socket option to be set after the socket is bound. Whether the socket option can be queried or changed prior to binding the socket is system dependent.</source>
          <target state="translated">유효 기간 설정의 초기 / 기본값은 일반적으로 &lt;code&gt;1&lt;/code&gt; 입니다. 구현에서는 소켓이 바인드 된 후이 소켓 옵션을 설정할 수 있습니다. 소켓을 바인딩하기 전에 소켓 옵션을 쿼리하거나 변경할 수 있는지 여부는 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="8f14681da9e2cf817ea3cfed63d4502d38744917" translate="yes" xml:space="preserve">
          <source>The initial/default value of this socket option is &lt;code&gt;TRUE&lt;/code&gt;. An implementation allows this socket option to be set after the socket is bound. Whether the socket option can be queried or changed prior to binding the socket is system dependent.</source>
          <target state="translated">이 소켓 옵션의 초기 / 기본값은 &lt;code&gt;TRUE&lt;/code&gt; 입니다. 구현에서는 소켓이 바인드 된 후이 소켓 옵션을 설정할 수 있습니다. 소켓을 바인딩하기 전에 소켓 옵션을 쿼리하거나 변경할 수 있는지 여부는 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="7a10bc1d584244ec597309a501f8537f0906aac2" translate="yes" xml:space="preserve">
          <source>The initial/default value of this socket option may be &lt;code&gt;null&lt;/code&gt; to indicate that outgoing interface will be selected by the operating system, typically based on the network routing tables. An implementation allows this socket option to be set after the socket is bound. Whether the socket option can be queried or changed prior to binding the socket is system dependent.</source>
          <target state="translated">이 소켓 옵션의 초기 값 / 기본값 은 네트워크 라우팅 테이블을 기반으로 운영 체제에서 발신 인터페이스가 선택됨을 나타 내기 위해 &lt;code&gt;null&lt;/code&gt; 일 수 있습니다 . 구현에서는 소켓이 바인드 된 후이 소켓 옵션을 설정할 수 있습니다. 소켓을 바인딩하기 전에 소켓 옵션을 쿼리하거나 변경할 수 있는지 여부는 시스템에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="b9fedeff43c59d7b5dbcc75d3c74145f2e5a51f4" translate="yes" xml:space="preserve">
          <source>The input (via the &lt;code&gt;classfileBuffer&lt;/code&gt; parameter) to the first transformer is:</source>
          <target state="translated">첫 번째 변환기에 대한 입력 ( &lt;code&gt;classfileBuffer&lt;/code&gt; 매개 변수 를 통한 )은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0353ae3109c30633907963c70d9936359968faf7" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-10 (five days earlier).</source>
          <target state="translated">매개 변수 (MONDAY)에 대한 2011-01-15 (토요일) 입력은 2011-01-10 (5 일 전)을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="97cf88e493d8b44880901ab10ce09e76612bd97e" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (MONDAY) will return 2011-01-17 (two days later).</source>
          <target state="translated">매개 변수 (MONDAY)에 대한 2011-01-15 (토요일) 입력은 2011-01-17 (2 일 후)을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="9bef351d0d747e19c535a278617e57a2452563ef" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-08 (seven days earlier).</source>
          <target state="translated">매개 변수 (SATURDAY)에 대한 2011-01-15 (토요일) 입력은 2011-01-08 (7 일 전)을 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="459e681c26aecf2f2ec743dc66e3693663f75fd5" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-15 (same as input).</source>
          <target state="translated">매개 변수 (SATURDAY)에 대한 2011-01-15 (토요일) 입력은 2011-01-15 (입력과 동일)를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="fd71f4910bd3fe09f4a43f337e9282decd32cea5" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (SATURDAY) will return 2011-01-22 (seven days later).</source>
          <target state="translated">매개 변수 (SATURDAY)에 대한 2011-01-15 (토요일) 입력은 2011-01-22 (7 일 후)를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="0efcc6067b189acef66d69c2de50d8589fa25cbf" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-12 (three days earlier).</source>
          <target state="translated">매개 변수 (WEDNESDAY)에 대한 2011-01-15 (토요일) 입력은 2011-01-12 (3 일 전)를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="7b80d3ce9751afa5ad36e2eb87a5ace0f63cba29" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 (a Saturday) for parameter (WEDNESDAY) will return 2011-01-19 (four days later).</source>
          <target state="translated">매개 변수 (WEDNESDAY)에 대한 2011-01-15 (토요일) 입력은 2011-01-19 (4 일 후)를 리턴합니다.</target>
        </trans-unit>
        <trans-unit id="7f73626e5956acb720a1570a8f4536e229179c28" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 will return 2011-01-01.</source>
          <target state="translated">2011-01-15 입력은 2011-01-01을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="0124e9614f4487f35850bcf026ed566a4761b1d3" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 will return 2011-01-31.</source>
          <target state="translated">2011-01-15 입력은 2011-01-31을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7ab919d34d3b479bb430190e4c37a22ea00323df" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 will return 2011-02-01.</source>
          <target state="translated">2011-01-15 입력은 2011-02-01을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="40c59e3915752f42edd5a88ff72e759568a6189a" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 will return 2011-12-31.</source>
          <target state="translated">입력 2011-01-15는 2011-12-31을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="727c7b425fd65ecf52b229b890c5788c0dc30227" translate="yes" xml:space="preserve">
          <source>The input 2011-01-15 will return 2012-01-01.</source>
          <target state="translated">2011-01-15 입력은 2012-01-01을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c09e595a2bedd7bb1101024bc041b5b29e2d95e2" translate="yes" xml:space="preserve">
          <source>The input 2011-02-15 will return 2011-01-01.</source>
          <target state="translated">2011-02-15 입력은 2011-01-01을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5cc26e63ef17d6b476896380461bf4720673e59e" translate="yes" xml:space="preserve">
          <source>The input 2011-02-15 will return 2011-02-01.</source>
          <target state="translated">2011-02-15 입력은 2011-02-01을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="7bab49004e8b5e91474ec75a110529a798471e37" translate="yes" xml:space="preserve">
          <source>The input 2011-02-15 will return 2011-02-28.</source>
          <target state="translated">2011-02-15 입력은 2011-02-28을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6af6d6025b1ce4e1ae4e9a586de3fc7c32e1e4fe" translate="yes" xml:space="preserve">
          <source>The input 2011-02-15 will return 2011-03-01.</source>
          <target state="translated">입력 2011-02-15는 2011-03-01을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="6b043e7ffb342331a742f793366c7737a0d6e3fd" translate="yes" xml:space="preserve">
          <source>The input 2011-02-15 will return 2011-12-31.</source>
          <target state="translated">2011-02-15 입력은 2011-12-31을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="c894c15b25c9be063955c487b0570699b1d5eab8" translate="yes" xml:space="preserve">
          <source>The input 2011-04-15 will return 2011-04-30.</source>
          <target state="translated">2011-04-15 입력은 2011-04-30을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="674c825d6c5d4d93b9ccdbda2b8b7895d7891b2a" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (-1,TUESDAY) will return 2011-12-27 (last in month).</source>
          <target state="translated">(-1, TUESDAY)에 대한 2011-12-15 입력은 2011-12-27 (마지막 달)을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f45c3e12c42281a12669c273ca00a557f31deb4e" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (-4,TUESDAY) will return 2011-12-06 (3 weeks before last in month).</source>
          <target state="translated">(-4, TUESDAY)에 대한 2011-12-15 입력은 2011-12-06 (지난달 3 주 전)을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="e511359656fd86726c2553e964175b3339937510" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (-5,TUESDAY) will return 2011-11-29 (4 weeks before last in month).</source>
          <target state="translated">(-5, TUESDAY)에 대한 2011-12-15 입력은 2011-11-29 (매달 마지막 4 주 전)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="61f6b1886bb948c2d22a9f26dbaf718741f9d55f" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (0,TUESDAY) will return 2011-11-29 (last in previous month).</source>
          <target state="translated">(0, TUESDAY)에 대한 2011-12-15 입력은 2011-11-29 (이전 달 마지막)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="f7aa0d892978892f55b314a5cb46650cec948a67" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (1,TUESDAY) will return 2011-12-06.</source>
          <target state="translated">(1, TUESDAY)에 대한 2011-12-15 입력은 2011-12-06을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="08504b039b2c14ec9e3edb95f9f492e2689a26fe" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (2,TUESDAY) will return 2011-12-13.</source>
          <target state="translated">(2, TUESDAY)에 대한 2011-12-15 입력은 2011-12-13을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="434481f6384a2e789c2579a256e032c2a65c242a" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (3,TUESDAY) will return 2011-12-20.</source>
          <target state="translated">(3, TUESDAY)에 대한 2011-12-15 입력은 2011-12-20을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a82ae127fda436ed10390e170c5197b4b398e8a1" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (4,TUESDAY) will return 2011-12-27.</source>
          <target state="translated">(4, TUESDAY)에 대한 2011-12-15 입력은 2011-12-27을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5a711831c25339a45671c5ac67f113204cb02e01" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (5,TUESDAY) will return 2012-01-03.</source>
          <target state="translated">(5, TUESDAY)의 2011-12-15 입력은 2012-01-03을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="8c6eb26c15efb0ec8afeabaaa608820b693f2649" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (FRIDAY) will return 2011-12-02.</source>
          <target state="translated">(금요일)에 대한 2011-12-15 입력은 2011-12-02를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="567a413ddb1e838b7fa5d14dcbe912be2ae1fa62" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (FRIDAY) will return 2011-12-30.</source>
          <target state="translated">(금요일)에 대한 2011-12-15 입력은 2011-12-30을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1e72c437ba8ad9a6ff2bc3eeff73507f67a633af" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (MONDAY) will return 2011-12-05.</source>
          <target state="translated">(월요일)에 대한 2011-12-15 입력은 2011-12-05를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d64c410b23535de8786153e85ed7090c36fe6d3d" translate="yes" xml:space="preserve">
          <source>The input 2011-12-15 for (MONDAY) will return 2011-12-26.</source>
          <target state="translated">(월요일)에 대한 2011-12-15 입력은 2011-12-26을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b914beb04279584398f5931bb837c143e20f3c7b" translate="yes" xml:space="preserve">
          <source>The input 2012-02-15 will return 2012-02-29 (leap year).</source>
          <target state="translated">입력 2012-02-15는 2012-02-29 (윤년)를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="edb13fdec6e5487029f19ef469d2d4b7243b4fe9" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt;, for example, yields the following results with these expressions:</source>
          <target state="translated">예를 들어, 입력 &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt; 는 다음 표현식으로 다음과 같은 결과를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="e76816c962ee6c820f09b31b57f2a819c6ee424e" translate="yes" xml:space="preserve">
          <source>The input &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt;, for example, yields the following results with these parameters:</source>
          <target state="translated">예를 들어, 입력 &lt;code&gt;&quot;boo:and:foo&quot;&lt;/code&gt; 는 다음 매개 변수를 사용하여 다음 결과를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7fe0fa4d1613c22f20c32d6adf058d34e0d76640" translate="yes" xml:space="preserve">
          <source>The input byte sequence is provided in a byte buffer or a series of such buffers. The output character sequence is written to a character buffer or a series of such buffers. A decoder should always be used by making the following sequence of method invocations, hereinafter referred to as a</source>
          <target state="translated">입력 바이트 시퀀스는 바이트 버퍼 또는 일련의 이러한 버퍼로 제공됩니다. 출력 문자 시퀀스는 문자 버퍼 또는 일련의 이러한 버퍼에 기록됩니다. 디코더는 항상 다음과 같은 메소드 호출 시퀀스를 작성하여 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="19ef1842ed4e5eb52651c1849cddba210d1892ca" translate="yes" xml:space="preserve">
          <source>The input character sequence is provided in a character buffer or a series of such buffers. The output byte sequence is written to a byte buffer or a series of such buffers. An encoder should always be used by making the following sequence of method invocations, hereinafter referred to as an</source>
          <target state="translated">입력 문자 시퀀스는 문자 버퍼 또는 일련의 이러한 버퍼로 제공됩니다. 출력 바이트 시퀀스는 바이트 버퍼 또는 일련의 이러한 버퍼에 기록됩니다. 엔코더는 항상 다음과 같은 일련의 메소드 호출을 수행하여 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="fa13778322adabdaeaa9ed2fecf32bdec71db0c6" translate="yes" xml:space="preserve">
          <source>The input is a complete source snippet (declaration or statement) as is.</source>
          <target state="translated">입력은있는 그대로 완전한 소스 스 니펫 (선언 또는 문)입니다.</target>
        </trans-unit>
        <trans-unit id="f3b7f4f251101855e542e61fc24db9f102f470ce" translate="yes" xml:space="preserve">
          <source>The input method framework will usually defer loading of input method classes until they are absolutely needed. It loads only the &lt;code&gt;InputMethodDescriptor&lt;/code&gt; implementations during AWT initialization. It loads an &lt;code&gt;InputMethod&lt;/code&gt; implementation when the input method has been selected.</source>
          <target state="translated">입력 메소드 프레임 워크는 일반적으로 절대적으로 필요할 때까지 입력 메소드 클래스의로드를 연기합니다. AWT 초기화 중에 &lt;code&gt;InputMethodDescriptor&lt;/code&gt; 구현 만로드합니다 . 입력 방법이 선택되었을 때 &lt;code&gt;InputMethod&lt;/code&gt; 구현을 로드합니다 .</target>
        </trans-unit>
        <trans-unit id="079602637d7f1a668b5a22c9dc43256cd86d280e" translate="yes" xml:space="preserve">
          <source>The input method may provide a list of attributes that it is interested in. In that case, information about other attributes that the implementor may have need not be made accessible through the iterator. If the list is null, all available attribute information should be made accessible.</source>
          <target state="translated">입력 방법은 관심있는 속성 목록을 제공 할 수 있습니다.이 경우 구현자가 가질 수있는 다른 속성에 대한 정보는 반복기를 통해 액세스 할 필요가 없습니다. 목록이 null이면 사용 가능한 모든 속성 정보에 액세스 할 수 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="a088aaf0b2bc0291cc106b647d4deda76401815e" translate="yes" xml:space="preserve">
          <source>The input method must also provide at least two classes: one class implementing the &lt;code&gt;java.awt.im.spi.InputMethodDescriptor&lt;/code&gt; interface, one class implementing the &lt;code&gt;java.awt.im.spi.InputMethod&lt;/code&gt; interface. The input method should separate the implementations for these interfaces, so that loading of the class implementing &lt;code&gt;InputMethod&lt;/code&gt; can be deferred until actually needed.</source>
          <target state="translated">입력 메소드는 또한 적어도 두 개의 클래스를 제공해야합니다. 하나는 &lt;code&gt;java.awt.im.spi.InputMethodDescriptor&lt;/code&gt; 인터페이스를 구현하는 클래스, 하나는 &lt;code&gt;java.awt.im.spi.InputMethod&lt;/code&gt; 인터페이스를 구현하는 클래스 입니다. &lt;code&gt;InputMethod&lt;/code&gt; 를 구현하는 클래스의로드가 실제로 필요할 때까지 지연 될 수 있도록 입력 메서드는 이러한 인터페이스에 대한 구현을 분리해야 합니다.</target>
        </trans-unit>
        <trans-unit id="5173f5df733d6fe86f606f9d7f97c46fd4e851ba" translate="yes" xml:space="preserve">
          <source>The input method underline affects both the visual bounds and the outline of the text.</source>
          <target state="translated">입력 방법 밑줄은 텍스트의 시각적 경계와 윤곽 모두에 영향을줍니다.</target>
        </trans-unit>
        <trans-unit id="83653305fe618a807c36ae9ff751ddeb894361e2" translate="yes" xml:space="preserve">
          <source>The input object must not be altered. Instead, an adjusted copy of the original must be returned. This provides equivalent, safe behavior for immutable and mutable temporal objects.</source>
          <target state="translated">입력 개체를 변경해서는 안됩니다. 대신 조정 된 원본을 반환해야합니다. 이것은 불변 및 변경 가능한 시간 객체에 대해 동등하고 안전한 동작을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="5690fa337aa0337299da10cf4d08093aec330c3b" translate="yes" xml:space="preserve">
          <source>The input set will be empty if the processor supports &lt;code&gt;
 &quot;*&quot;&lt;/code&gt; and the root elements have no annotations. A &lt;code&gt;
 Processor&lt;/code&gt; must gracefully handle an empty set of annotations.</source>
          <target state="translated">프로세서가 &lt;code&gt; &quot;*&quot;&lt;/code&gt; 를 지원 하고 루트 요소에 주석이없는 경우 입력 세트는 비어 있습니다 . &lt;code&gt; Processor&lt;/code&gt; 정상적으로 주석의 빈 세트를 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="5c910580a21e4b944c3ab323f7cd8f43016d192b" translate="yes" xml:space="preserve">
          <source>The input set will be empty if the processor supports &lt;code&gt;&quot;*&quot;&lt;/code&gt; and the root elements have no annotations. A &lt;code&gt;Processor&lt;/code&gt; must gracefully handle an empty set of annotations.</source>
          <target state="translated">프로세서가 &lt;code&gt;&quot;*&quot;&lt;/code&gt; 를 지원 하고 루트 요소에 주석이없는 경우 입력 세트가 비어 있습니다 . &lt;code&gt;Processor&lt;/code&gt; 정상적으로 주석의 빈 세트를 처리해야합니다.</target>
        </trans-unit>
        <trans-unit id="6bcbdf5e1188922a044da67c40a6d67d6e9f2afe" translate="yes" xml:space="preserve">
          <source>The input should be exactly one complete snippet of source code, that is, one expression, statement, variable declaration, method declaration, class declaration, or import. To break arbitrary input into individual complete snippets, use &lt;a href=&quot;#analyzeCompletion(java.lang.String)&quot;&gt;&lt;code&gt;analyzeCompletion(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">입력은 정확히 하나의 완전한 소스 코드 스 니펫, 즉 하나의 표현식, 명령문, 변수 선언, 메소드 선언, 클래스 선언 또는 가져 오기 여야합니다. 임의의 입력을 개별 완전한 조각으로 나누려면 &lt;a href=&quot;#analyzeCompletion(java.lang.String)&quot;&gt; &lt;code&gt;analyzeCompletion(String)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="41c78859d7b19d25e6131946c1a27219b5b577d8" translate="yes" xml:space="preserve">
          <source>The input should be exactly one complete snippet of source code, that is, one expression, statement, variable declaration, method declaration, class declaration, or import. To break arbitrary input into individual complete snippets, use &lt;a href=&quot;sourcecodeanalysis#analyzeCompletion(java.lang.String)&quot;&gt;&lt;code&gt;SourceCodeAnalysis.analyzeCompletion(String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">입력은 정확히 하나의 완전한 소스 코드 스 니펫, 즉 하나의 표현식, 명령문, 변수 선언, 메소드 선언, 클래스 선언 또는 가져 오기 여야합니다. 임의의 입력을 개별 전체 스 니펫으로 나누려면 &lt;a href=&quot;sourcecodeanalysis#analyzeCompletion(java.lang.String)&quot;&gt; &lt;code&gt;SourceCodeAnalysis.analyzeCompletion(String)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="f47befcb4ecd8767475f3f12fb5018863e6b534b" translate="yes" xml:space="preserve">
          <source>The input source that is being parsed.</source>
          <target state="translated">구문 분석중인 입력 소스입니다.</target>
        </trans-unit>
        <trans-unit id="da84d3d644e8622d72a13b523764f8b0f609c2da" translate="yes" xml:space="preserve">
          <source>The input source that was parsed.</source>
          <target state="translated">구문 분석 된 입력 소스입니다.</target>
        </trans-unit>
        <trans-unit id="ed552da2306d43fec33a5ddad4dd6d2b2ba78449" translate="yes" xml:space="preserve">
          <source>The input stream to be filtered.</source>
          <target state="translated">필터링 할 입력 스트림입니다.</target>
        </trans-unit>
        <trans-unit id="309bc11db643dd7e62cb11f361090715463174e8" translate="yes" xml:space="preserve">
          <source>The input string</source>
          <target state="translated">입력 문자열</target>
        </trans-unit>
        <trans-unit id="72cf1f9cc3cabe9c8646b2af8556b597a7195bbf" translate="yes" xml:space="preserve">
          <source>The input temporal object may be in a calendar system other than ISO. Implementations may choose to document compatibility with other calendar systems, or reject non-ISO temporal objects by &lt;a href=&quot;temporalqueries#chronology()&quot;&gt;&lt;code&gt;querying the chronology&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">입력 시간 객체는 ISO가 아닌 캘린더 시스템에있을 수 있습니다. 구현은 다른 달력 시스템과의 호환성을 문서화하거나 &lt;a href=&quot;temporalqueries#chronology()&quot;&gt; &lt;code&gt;querying the chronology&lt;/code&gt; &lt;/a&gt; 를 쿼리하여 ISO가 아닌 시간 객체를 거부하도록 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6ff27ced2c6ba8898b27209a9d944d8366a139de" translate="yes" xml:space="preserve">
          <source>The input temporal object may be in a calendar system other than ISO. Implementations may choose to document compatibility with other calendar systems, or reject non-ISO temporal objects by &lt;a href=&quot;temporalqueries#chronology--&quot;&gt;&lt;code&gt;querying the chronology&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">입력 시간 객체는 ISO 이외의 캘린더 시스템에있을 수 있습니다. 구현은 다른 달력 시스템과의 호환성을 문서화하거나 &lt;a href=&quot;temporalqueries#chronology--&quot;&gt; &lt;code&gt;querying the chronology&lt;/code&gt; &lt;/a&gt; 를 쿼리하여 비 ISO 시간 객체를 거부하도록 선택할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0d3b87a06c1e41fe7f41be8cab3347c69577c90b" translate="yes" xml:space="preserve">
          <source>The inputLocale parameter specifies the locale for which text is input. This parameter can only take values obtained from this descriptor's &lt;a href=&quot;#getAvailableLocales()&quot;&gt;&lt;code&gt;getAvailableLocales()&lt;/code&gt;&lt;/a&gt; method or null. If it is null, an input locale independent icon for the input method should be returned.</source>
          <target state="translated">inputLocale 매개 변수는 텍스트가 입력되는 로케일을 지정합니다. 이 매개 변수는이 설명 자의 &lt;a href=&quot;#getAvailableLocales()&quot;&gt; &lt;code&gt;getAvailableLocales()&lt;/code&gt; &lt;/a&gt; 메소드 에서 얻은 값 또는 null 만 사용할 수 있습니다 . 널이면 입력 방법에 대한 입력 로케일 독립 아이콘이 리턴되어야합니다.</target>
        </trans-unit>
        <trans-unit id="9f14980372b0683f49775bc052e867c452e6b24b" translate="yes" xml:space="preserve">
          <source>The inputLocale parameter specifies the locale for which text is input. This parameter can only take values obtained from this descriptor's &lt;a href=&quot;#getAvailableLocales()&quot;&gt;&lt;code&gt;getAvailableLocales()&lt;/code&gt;&lt;/a&gt; method or null. If it is null, an input locale independent name for the input method should be returned.</source>
          <target state="translated">inputLocale 매개 변수는 텍스트가 입력되는 로케일을 지정합니다. 이 매개 변수는이 설명 자의 &lt;a href=&quot;#getAvailableLocales()&quot;&gt; &lt;code&gt;getAvailableLocales()&lt;/code&gt; &lt;/a&gt; 메서드 에서 얻은 값 또는 null 만 사용할 수 있습니다 . 널인 경우 입력 방법에 대한 입력 로케일 독립 이름이 리턴되어야합니다.</target>
        </trans-unit>
        <trans-unit id="dd1c46fb8b8168a7a6f2a17a66f2bba45c0571bc" translate="yes" xml:space="preserve">
          <source>The inputs to the generator are the &lt;a href=&quot;snippet&quot;&gt;&lt;code&gt;Snippet&lt;/code&gt;&lt;/a&gt; and an integer. The integer will be the same for two Snippets which would overwrite one-another, but otherwise is unique.</source>
          <target state="translated">생성기에 대한 입력은 &lt;a href=&quot;snippet&quot;&gt; &lt;code&gt;Snippet&lt;/code&gt; &lt;/a&gt; 과 정수입니다. 정수는 서로 덮어 쓰는 두 개의 스 니펫에 대해 동일하지만 그렇지 않으면 고유합니다.</target>
        </trans-unit>
        <trans-unit id="7f998451d8fd17341ecd575326c6da13b972f8ed" translate="yes" xml:space="preserve">
          <source>The inset from the bottom.</source>
          <target state="translated">바닥에서 삽입.</target>
        </trans-unit>
        <trans-unit id="9909785dde9a7db7fd7c3489dd2432327b22beec" translate="yes" xml:space="preserve">
          <source>The inset from the bottom. This value is subtracted from the Bottom of the rectangle to yield a new location for the Bottom.</source>
          <target state="translated">바닥에서 삽입. 이 값은 직사각형의 하단에서 빼서 하단의 새 위치를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="32e4e7cb57c5d657c8d6be8a8f58d05f136fb644" translate="yes" xml:space="preserve">
          <source>The inset from the left.</source>
          <target state="translated">왼쪽에서 삽입.</target>
        </trans-unit>
        <trans-unit id="0f85206032d1b7aa0b2590ae416e84603f1fc292" translate="yes" xml:space="preserve">
          <source>The inset from the left. This value is added to the Left of the rectangle to yield a new location for the Left edge.</source>
          <target state="translated">왼쪽에서 삽입. 이 값은 직사각형의 왼쪽에 추가되어 왼쪽 가장자리의 새 위치를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="7859a9787008d3cb83b312b3ea03987faffb05aa" translate="yes" xml:space="preserve">
          <source>The inset from the right.</source>
          <target state="translated">오른쪽에서 삽입.</target>
        </trans-unit>
        <trans-unit id="0e55dddcf716d1da17a0a953811329895b77b94e" translate="yes" xml:space="preserve">
          <source>The inset from the right. This value is subtracted from the Right of the rectangle to yield a new location for the Right edge.</source>
          <target state="translated">오른쪽에서 삽입. 이 값은 직사각형의 오른쪽에서 빼서 오른쪽 가장자리에 대한 새 위치를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="d9e6390956b222702f7a3eea0e86763329609332" translate="yes" xml:space="preserve">
          <source>The inset from the top.</source>
          <target state="translated">상단에서 삽입.</target>
        </trans-unit>
        <trans-unit id="bf4a416b8b50d352edd91dedc2b33e26d77474e8" translate="yes" xml:space="preserve">
          <source>The inset from the top. This value is added to the Top of the rectangle to yield a new location for the Top.</source>
          <target state="translated">상단에서 삽입. 이 값은 직사각형의 상단에 추가되어 상단의 새 위치를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="64ef7cd78ee4c7e0380dc6ff644d86db08178e33" translate="yes" xml:space="preserve">
          <source>The inside border.</source>
          <target state="translated">안쪽 테두리.</target>
        </trans-unit>
        <trans-unit id="ef7c230813f47d25b0bb9baa60684daea97ed112" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;BasicMenuUI&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;BasicMenuUI&lt;/code&gt; 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="e5d19fc65665c81f51ad0c8c47210f34978e2df8" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;CellRendererPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CellRendererPane&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="a52eb9cffd20ae8dd0e39567d5fd93d88148a0cb" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;ChangeListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ChangeListener&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="3050c0761589cc65cf86335a10b4986c6206bc7d" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;ContainerListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ContainerListener&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="56c1414724a0b82f497677275354efc130e02c3a" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;DesktopManager&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DesktopManager&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="1e9fae94d45e8e4c1b92e6d6319a2c6d0c94cc04" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;DragWindow&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;DragWindow&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="cf536239e4b8346cfaba6859216ca03b0dc1e86e" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JComboBox&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JComboBox&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="0fb20ee9382ffa5c7051c45dbb95c0fccbf4a0fa" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JDesktopPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JDesktopPane&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="66631710f5ec11954113eb3676261af25fbe85ea" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JInternalFrame.JDesktopIcon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JInternalFrame.JDesktopIcon&lt;/code&gt; 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="632f9ed5ba73647235467c63c327de9c7dfcdcc5" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JInternalFrame&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JInternalFrame&lt;/code&gt; 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="925208244c886af22aa2744d9cea0c94ab4d4520" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JList&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="3820f4bf48f239b19c20df25c6dfcfb56db5f0df" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JMenu&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JMenu&lt;/code&gt; 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="22ed66de0a214c398cb7a10b2be2a1a582406b4f" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JMenuBar&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JMenuBar&lt;/code&gt; 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="68ff9d8a589625bd315d364d0d46335e30b62439" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JMenuItem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JMenuItem&lt;/code&gt; 의 인스턴스 .</target>
        </trans-unit>
        <trans-unit id="128af600e93df1fc6536b9f1672b869203ad6eb0" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JPopupMenu&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JPopupMenu&lt;/code&gt; 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="39af606ddae8316475830f58f1877123645a5a19" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JProgressBar&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JProgressBar&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="d34b9f548afd02c3b3aab40cc6a6e44ce3295366" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JScrollPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JScrollPane&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="87e476f44e15ea2285a7a64212d88e82bfdd4f4e" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JTable&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="8b9a1788b3012e2ee0d16580297c0ce75cbb0dd8" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;JToolBar&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JToolBar&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="98187218bd6ed5ebf2b7978e468ab5c8b05fdf61" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;MenuDragMouseListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MenuDragMouseListener&lt;/code&gt; 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="1c8b46ae7fc0922badf38279de19f9f75094825c" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;MenuKeyListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MenuKeyListener&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="09723b4ba5956acbe634c05a94fb690ba777a9ba" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;MenuListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MenuListener&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="f91076b8018a79d203766eeb0e337e972dd0f8b0" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;MouseInputListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MouseInputListener&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="7855b98dd4924fcb4aadfc2ec3c8cffae69c25dd" translate="yes" xml:space="preserve">
          <source>The instance of &lt;code&gt;PropertyChangeListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="c2065d04201b39ee3ed93de71763ab49c1b1af62" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;CloseAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;CloseAction&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="0d6496ac7d2b3b02531ba8df65f784842bed2bdf" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;ContainerListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ContainerListener&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="71b9e7712f29139f3cbcbee6022020c12f1fa790" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;FocusListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;FocusListener&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="1998a0b5bebf33080eadbb59dd265bba1edad948" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;MaximizeAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MaximizeAction&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="fc806021c5042b88e87f9a39cf39e9e2b8330e4f" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;MouseInputListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MouseInputListener&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="bf849ffc273c5021ec7716ebb1d8baf2ae892747" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;MoveAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MoveAction&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="429fdf6f0082da24eac66244a4fa25a00d93e856" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;PropertyChangeListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="9ac464fa807965926d89ef63588888c660fef346" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;RestoreAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RestoreAction&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="8234d2ce7fa0706e646aef5921d46b70c6d0bd74" translate="yes" xml:space="preserve">
          <source>The instance of a &lt;code&gt;SizeAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SizeAction&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="e70073e947cfc18cfed7dd7045c9c01141369bb5" translate="yes" xml:space="preserve">
          <source>The instance of an &lt;code&gt;IconifyAction&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;IconifyAction&lt;/code&gt; 의 인스턴스입니다 .</target>
        </trans-unit>
        <trans-unit id="821545cbe636d66216bdce755849750bfe359d8c" translate="yes" xml:space="preserve">
          <source>The instance of the &lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; class is returned for the &lt;code&gt;Bean&lt;/code&gt; class.</source>
          <target state="translated">&lt;code&gt;BeanPersistenceDelegate&lt;/code&gt; 클래스 의 인스턴스 는 &lt;code&gt;Bean&lt;/code&gt; 클래스에 대해 리턴됩니다 .</target>
        </trans-unit>
        <trans-unit id="fe35d64909d53ad3510a2a12bb002668399923b1" translate="yes" xml:space="preserve">
          <source>The instance registered in the platform &lt;code&gt;MBeanServer&lt;/code&gt; is also a &lt;a href=&quot;../../lang/management/platformloggingmxbean&quot;&gt;&lt;code&gt;PlatformLoggingMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">플랫폼 &lt;code&gt;MBeanServer&lt;/code&gt; 에 등록 된 인스턴스 도 &lt;a href=&quot;../../lang/management/platformloggingmxbean&quot;&gt; &lt;code&gt;PlatformLoggingMXBean&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="8034f1687833a6f8c4d1326d8592f90018f9b440" translate="yes" xml:space="preserve">
          <source>The instance registered in the platform &lt;code&gt;MBeanServer&lt;/code&gt; with this &lt;code&gt;ObjectName&lt;/code&gt; implements all attributes defined by &lt;a href=&quot;../../util/logging/loggingmxbean&quot;&gt;&lt;code&gt;LoggingMXBean&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 &lt;code&gt;ObjectName&lt;/code&gt; 으로 플랫폼 &lt;code&gt;MBeanServer&lt;/code&gt; 에 등록 된 인스턴스 는 &lt;a href=&quot;../../util/logging/loggingmxbean&quot;&gt; &lt;code&gt;LoggingMXBean&lt;/code&gt; 에&lt;/a&gt; 의해 정의 된 모든 속성을 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="7c0bba197e066898250665f6de73aa5e08d026f9" translate="yes" xml:space="preserve">
          <source>The instance specific getRequestProperty method should be used after an appropriate instance of URLConnection is obtained.</source>
          <target state="translated">URLConnection의 적절한 인스턴스를 얻은 후에 인스턴스 특정 getRequestProperty 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="3338c212374dff0d244e2a29925e58c59d21bf00" translate="yes" xml:space="preserve">
          <source>The instance specific setRequestProperty method should be used after an appropriate instance of URLConnection is obtained.</source>
          <target state="translated">적절한 URLConnection 인스턴스를 얻은 후에 인스턴스 특정 setRequestProperty 메소드를 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="33d1db5d66bf10179cbc91eb8c39b48825229a3d" translate="yes" xml:space="preserve">
          <source>The instance specific setRequestProperty method should be used after an appropriate instance of URLConnection is obtained. Invoking this method will have no effect.</source>
          <target state="translated">적절한 URLConnection 인스턴스를 얻은 후에 인스턴스 특정 setRequestProperty 메소드를 사용해야합니다. 이 메서드를 호출해도 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="d1fbeab41e2aa5267a94fe378603af36274b8722" translate="yes" xml:space="preserve">
          <source>The instant epoch-seconds.</source>
          <target state="translated">즉각적인 시대.</target>
        </trans-unit>
        <trans-unit id="7901aafd15bf23c3b39d73b5e02e372acef541aa" translate="yes" xml:space="preserve">
          <source>The instant is obtained using &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and optionally (@code NANO_OF_SECOND). The value of &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; may be outside the maximum range of &lt;code&gt;LocalDateTime&lt;/code&gt;.</source>
          <target state="translated">인스턴트는 &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt; 및 선택적으로 (@code NANO_OF_SECOND)를 사용하여 얻습니다 . &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; 값이 최대 &lt;code&gt;LocalDateTime&lt;/code&gt; 범위 를 벗어날 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f9bae62297e2eb85f85adcb5c23f1964c77f72c5" translate="yes" xml:space="preserve">
          <source>The instant is obtained using &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt;&lt;code&gt;INSTANT_SECONDS&lt;/code&gt;&lt;/a&gt; and optionally &lt;code&gt;NANO_OF_SECOND&lt;/code&gt;. The value of &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; may be outside the maximum range of &lt;code&gt;LocalDateTime&lt;/code&gt;.</source>
          <target state="translated">인스턴트는 &lt;a href=&quot;../temporal/chronofield#INSTANT_SECONDS&quot;&gt; &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; &lt;/a&gt; 및 선택적으로 &lt;code&gt;NANO_OF_SECOND&lt;/code&gt; 를 사용하여 얻 습니다 . &lt;code&gt;INSTANT_SECONDS&lt;/code&gt; 의 값은 &lt;code&gt;LocalDateTime&lt;/code&gt; 의 최대 범위 를 벗어날 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="30129dac0e1c5b07ebec910099af96e81c4f9dd8" translate="yes" xml:space="preserve">
          <source>The instantiateChild method is a convenience hook in BeanContext to simplify the task of instantiating a Bean, nested, into a &lt;code&gt;BeanContext&lt;/code&gt;.</source>
          <target state="translated">instantiateChild 메소드는 상자로 콩, 인스턴스의 작업을 단순화하는 BeanContext의 간이 훅입니다 &lt;code&gt;BeanContext&lt;/code&gt; 의를 .</target>
        </trans-unit>
        <trans-unit id="f77c078c5f9aeaf66bf15d02253d245e615ac88d" translate="yes" xml:space="preserve">
          <source>The instrument must be part of a soundbank that this &lt;code&gt;Synthesizer&lt;/code&gt; supports. (To make sure, you can use the &lt;code&gt;getSoundbank&lt;/code&gt; method of &lt;code&gt;Instrument&lt;/code&gt; and the &lt;code&gt;isSoundbankSupported&lt;/code&gt; method of &lt;code&gt;Synthesizer&lt;/code&gt;.)</source>
          <target state="translated">악기는이 &lt;code&gt;Synthesizer&lt;/code&gt; 지원 하는 사운드 뱅크의 일부 여야 합니다. (확장하기 위해 &lt;code&gt;Instrument&lt;/code&gt; 의 &lt;code&gt;getSoundbank&lt;/code&gt; 메소드 와 &lt;code&gt;Synthesizer&lt;/code&gt; 의 &lt;code&gt;isSoundbankSupported&lt;/code&gt; 메소드를 사용할 수 있습니다 .)</target>
        </trans-unit>
        <trans-unit id="9a37a2eb226e14bcfb598f5019503fb1c263149a" translate="yes" xml:space="preserve">
          <source>The int at the buffer's current position</source>
          <target state="translated">버퍼의 현재 위치에있는 int</target>
        </trans-unit>
        <trans-unit id="f399009c35348dad1f9b984754bb8ad44cf2f1fa" translate="yes" xml:space="preserve">
          <source>The int at the given index</source>
          <target state="translated">주어진 인덱스의 int</target>
        </trans-unit>
        <trans-unit id="cd5bd83985b7ab506a14fd7d1fe1f37e7e280658" translate="yes" xml:space="preserve">
          <source>The int value at the buffer's current position</source>
          <target state="translated">버퍼의 현재 위치의 int 값</target>
        </trans-unit>
        <trans-unit id="1ad78d2b15738eeaffcdd43ad90d8ea023e56b29" translate="yes" xml:space="preserve">
          <source>The int value at the given index</source>
          <target state="translated">주어진 인덱스의 int 값</target>
        </trans-unit>
        <trans-unit id="5853f3fa53f15931c8c19c152516c6b810652678" translate="yes" xml:space="preserve">
          <source>The integer part of &lt;code&gt;this / divisor&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;this / divisor&lt;/code&gt; 의 정수 부분 .</target>
        </trans-unit>
        <trans-unit id="af9b8b0307980238eed12ed1ddf6de7930d96166" translate="yes" xml:space="preserve">
          <source>The integer that is returned by &lt;code&gt;HSBtoRGB&lt;/code&gt; encodes the value of a color in bits 0-23 of an integer value that is the same format used by the method &lt;a href=&quot;#getRGB()&quot;&gt;&lt;code&gt;getRGB&lt;/code&gt;&lt;/a&gt;. This integer can be supplied as an argument to the &lt;code&gt;Color&lt;/code&gt; constructor that takes a single integer argument.</source>
          <target state="translated">&lt;code&gt;HSBtoRGB&lt;/code&gt; 에서 반환 하는 정수는 &lt;a href=&quot;#getRGB()&quot;&gt; &lt;code&gt;getRGB&lt;/code&gt; &lt;/a&gt; 메서드에서 사용하는 것과 동일한 형식 인 정수 값의 비트 0-23에서 색상 값을 인코딩합니다 . 이 정수는 단일 정수 인수 를 사용하는 &lt;code&gt;Color&lt;/code&gt; 생성자에 인수로 제공 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d189b186ec362039be16f80734b20b4c4f3b7d9a" translate="yes" xml:space="preserve">
          <source>The intended destination media for style information.</source>
          <target state="translated">스타일 정보를위한 대상 미디어입니다.</target>
        </trans-unit>
        <trans-unit id="5db6a12c6a37e8daecdca1e7fe4e78e3b179ac95" translate="yes" xml:space="preserve">
          <source>The intended destination media for style information. The media is often specified in the &lt;code&gt;ownerNode&lt;/code&gt;. If no media has been specified, the &lt;code&gt;MediaList&lt;/code&gt; will be empty. See the media attribute definition for the &lt;code&gt;LINK&lt;/code&gt; element in HTML 4.0, and the media pseudo-attribute for the XML style sheet processing instruction . Modifying the media list may cause a change to the attribute &lt;code&gt;disabled&lt;/code&gt;.</source>
          <target state="translated">스타일 정보를위한 대상 미디어입니다. 미디어는 종종 &lt;code&gt;ownerNode&lt;/code&gt; 에 지정됩니다 . 미디어가 지정되지 않은 경우 &lt;code&gt;MediaList&lt;/code&gt; 는 비어 있습니다. HTML 4.0 의 &lt;code&gt;LINK&lt;/code&gt; 요소에 대한 미디어 속성 정의 와 XML 스타일 시트 처리 명령에 대한 미디어 의사 속성을 참조하십시오. 미디어 목록을 수정하면 &lt;code&gt;disabled&lt;/code&gt; 된 속성이 변경 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7b3962a31770a8a1a3dd88816d3e71b6159a620d" translate="yes" xml:space="preserve">
          <source>The intention is to allow developers to turn on voluminous logging, but to limit the messages that are sent to certain &lt;code&gt;Handlers&lt;/code&gt;.</source>
          <target state="translated">개발자가 대량 로깅을 켤 수 있지만 특정 &lt;code&gt;Handlers&lt;/code&gt; 로 전송되는 메시지를 제한하는 것이 목적 입니다.</target>
        </trans-unit>
        <trans-unit id="7ae57ebccdbb22db556eaf3cff8f99142d9c282e" translate="yes" xml:space="preserve">
          <source>The interactions of &lt;code&gt;getTarget&lt;/code&gt; with memory are the same as of a read from a &lt;code&gt;volatile&lt;/code&gt; field.</source>
          <target state="translated">&lt;code&gt;getTarget&lt;/code&gt; 과 메모리 의 상호 작용은 &lt;code&gt;volatile&lt;/code&gt; 필드 에서 읽은 것과 동일 합니다.</target>
        </trans-unit>
        <trans-unit id="e26c912cdad75eed02864256ebb606789bb54554" translate="yes" xml:space="preserve">
          <source>The interactions of &lt;code&gt;getTarget&lt;/code&gt; with memory are the same as of a read from an ordinary variable, such as an array element or a non-volatile, non-final field.</source>
          <target state="translated">&lt;code&gt;getTarget&lt;/code&gt; 과 메모리 의 상호 작용은 배열 요소 또는 비 휘발성, 최종 필드와 같은 일반 변수에서 읽은 것과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="dbd4770385ec4ef685776fb36c773c630df22d7a" translate="yes" xml:space="preserve">
          <source>The interactions with memory are the same as of a write to a volatile field. In particular, any threads is guaranteed to see the updated target the next time it calls &lt;code&gt;getTarget&lt;/code&gt;.</source>
          <target state="translated">메모리와의 상호 작용은 휘발성 필드에 쓰는 것과 동일합니다. 특히, 모든 스레드는 다음에 &lt;code&gt;getTarget&lt;/code&gt; 을 호출 할 때 업데이트 된 대상을 볼 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="d52462e55d1986519fb9c0c7702ec405729f552d" translate="yes" xml:space="preserve">
          <source>The interactions with memory are the same as of a write to an ordinary variable, such as an array element or a non-volatile, non-final field.</source>
          <target state="translated">메모리와의 상호 작용은 배열 요소 또는 비 휘발성, 비 최종 필드와 같은 일반 변수에 쓰는 것과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="4a497b9e4bd64268147027cd4c3bdfe5dd24e18c" translate="yes" xml:space="preserve">
          <source>The interface &lt;code&gt;SyncResolver&lt;/code&gt; provides a way for an application to decide manually what to do when a conflict occurs. When the &lt;code&gt;CachedRowSet&lt;/code&gt; method &lt;code&gt;acceptChanges&lt;/code&gt; finishes and has detected one or more conflicts, it throws a &lt;code&gt;SyncProviderException&lt;/code&gt; object. An application can catch the exception and have it retrieve a &lt;code&gt;SyncResolver&lt;/code&gt; object by calling the method &lt;code&gt;SyncProviderException.getSyncResolver()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SyncResolver&lt;/code&gt; 인터페이스 는 충돌 발생시 수행 할 작업을 애플리케이션이 수동으로 결정할 수있는 방법을 제공합니다. 때 &lt;code&gt;CachedRowSet&lt;/code&gt; 방법 &lt;code&gt;acceptChanges&lt;/code&gt; 완료 및 하나 개 이상의 충돌 감지, 이는 슬로우 &lt;code&gt;SyncProviderException&lt;/code&gt; 개체. 애플리케이션은 예외를 포착하고 &lt;code&gt;SyncProviderException.getSyncResolver()&lt;/code&gt; 메소드를 호출하여 &lt;code&gt;SyncResolver&lt;/code&gt; 객체를 검색하도록 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b273bc96bd0f1dbfa83a413ec1f9f6d41c2e5dca" translate="yes" xml:space="preserve">
          <source>The interface definitions provided in this package form the basis for all compliant JDBC &lt;code&gt;RowSet&lt;/code&gt; implementations. Vendors and more advanced developers who intend to provide their own compliant &lt;code&gt;RowSet&lt;/code&gt; implementations should pay particular attention to the assertions detailed in specification interfaces.</source>
          <target state="translated">이 패키지에 제공된 인터페이스 정의는 모든 호환 JDBC &lt;code&gt;RowSet&lt;/code&gt; 구현 의 기반을 형성합니다 . 자체적으로 호환되는 &lt;code&gt;RowSet&lt;/code&gt; 구현 을 제공하려는 공급 업체 및 고급 개발자 는 사양 인터페이스에 자세히 설명 된 어설 션에 특히주의해야합니다.</target>
        </trans-unit>
        <trans-unit id="ffce5f400e966e604662faf7eb9edb69314ee268" translate="yes" xml:space="preserve">
          <source>The interface for a custom taglet supported by doclets such as the &lt;a href=&quot;standarddoclet&quot;&gt;&lt;code&gt;standard doclet&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;standarddoclet&quot;&gt; &lt;code&gt;standard doclet&lt;/code&gt; &lt;/a&gt; doclet과 같은 doclet에서 지원하는 사용자 정의 taglet의 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="90ebdbfaee190288abc75b90b51d8860676ec115" translate="yes" xml:space="preserve">
          <source>The interface for a custom taglet supported by doclets such as the &lt;a href=&quot;standarddoclet&quot;&gt;&lt;code&gt;standard doclet&lt;/code&gt;&lt;/a&gt;. Custom taglets are used to handle custom tags in documentation comments; custom tags can be instantiated individually as either</source>
          <target state="translated">&lt;a href=&quot;standarddoclet&quot;&gt; &lt;code&gt;standard doclet&lt;/code&gt; &lt;/a&gt; doclet과 같은 doclet에서 지원하는 사용자 정의 taglet의 인터페이스입니다 . 사용자 정의 태그 렛은 문서 주석에서 사용자 정의 태그를 처리하는 데 사용됩니다. 사용자 정의 태그는 다음 중 하나로 개별적으로 인스턴스화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="44db249a7592112af83543802bee3fa2791eef24" translate="yes" xml:space="preserve">
          <source>The interface for a javac plug-in.</source>
          <target state="translated">javac 플러그인의 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="014408c9d911a7844a8b809c1365a12d70d22469" translate="yes" xml:space="preserve">
          <source>The interface for an annotation processor.</source>
          <target state="translated">주석 처리기의 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="815a2f3fe499d670029a246fc413829947cb8ed8" translate="yes" xml:space="preserve">
          <source>The interface for objects expressing interest in image data through the ImageProducer interfaces.</source>
          <target state="translated">ImageProducer 인터페이스를 통해 이미지 데이터에 대한 관심을 표현하는 객체를위한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="dc32d90db8ccb9d0fceccac880b29396b38f320c" translate="yes" xml:space="preserve">
          <source>The interface for objects expressing interest in image data through the ImageProducer interfaces. When a consumer is added to an image producer, the producer delivers all of the data about the image using the method calls defined in this interface.</source>
          <target state="translated">ImageProducer 인터페이스를 통해 이미지 데이터에 대한 관심을 표현하는 객체를위한 인터페이스입니다. 소비자가 이미지 제작자에 추가되면 제작자는이 인터페이스에 정의 된 메서드 호출을 사용하여 이미지에 대한 모든 데이터를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="7139ca9620764f1257da5481b1366059bfffba57" translate="yes" xml:space="preserve">
          <source>The interface for objects which can produce the image data for Images.</source>
          <target state="translated">이미지에 대한 이미지 데이터를 생성 할 수있는 개체에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="ebd39d25c8a62a39f40fbacb23ec03b0a983d6b6" translate="yes" xml:space="preserve">
          <source>The interface for objects which can produce the image data for Images. Each image contains an ImageProducer which is used to reconstruct the image whenever it is needed, for example, when a new size of the Image is scaled, or when the width or height of the Image is being requested.</source>
          <target state="translated">이미지에 대한 이미지 데이터를 생성 할 수있는 개체에 대한 인터페이스입니다. 각 이미지에는 필요할 때마다 이미지를 재구성하는 데 사용되는 ImageProducer가 포함되어 있습니다 (예 : 이미지의 새 크기가 조정되거나 이미지의 너비 또는 높이가 요청 될 때).</target>
        </trans-unit>
        <trans-unit id="fd46510baa1da6efd67e1d8d8ef941c14bc2bd97" translate="yes" xml:space="preserve">
          <source>The interface for objects which contain a set of items for which zero or more can be selected.</source>
          <target state="translated">0 개 이상을 선택할 수있는 항목 집합을 포함하는 개체에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="2d2e39260adc4b1e7a790d5c2b75fbeea89985e5" translate="yes" xml:space="preserve">
          <source>The interface for objects which have an adjustable numeric value contained within a bounded range of values.</source>
          <target state="translated">제한된 값 범위 내에 포함 된 조정 가능한 숫자 값이있는 개체의 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="99054625c1486a351cef471e9cb044893a75dcb2" translate="yes" xml:space="preserve">
          <source>The interface is designed to support one of two input user interfaces:</source>
          <target state="translated">인터페이스는 두 가지 입력 사용자 인터페이스 중 하나를 지원하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="b4d2d968b034bed958f5e02e5377b1b7679e8e20" translate="yes" xml:space="preserve">
          <source>The interface must be public. No additional access checks are performed.</source>
          <target state="translated">인터페이스는 공용이어야합니다. 추가 액세스 확인이 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="88b5e4b417f3ffb65f834c2fb994905cba4b3348" translate="yes" xml:space="preserve">
          <source>The interface that a &lt;code&gt;RowSet&lt;/code&gt; object implements in order to present itself to a &lt;code&gt;RowSetReader&lt;/code&gt; or &lt;code&gt;RowSetWriter&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 개체가 자신을 &lt;code&gt;RowSetReader&lt;/code&gt; 또는 &lt;code&gt;RowSetWriter&lt;/code&gt; 개체 에 표시하기 위해 구현 하는 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="237b5c22ea8f7adabe44539264010dfc2fb6837a" translate="yes" xml:space="preserve">
          <source>The interface that a &lt;code&gt;RowSet&lt;/code&gt; object implements in order to present itself to a &lt;code&gt;RowSetReader&lt;/code&gt; or &lt;code&gt;RowSetWriter&lt;/code&gt; object. The &lt;code&gt;RowSetInternal&lt;/code&gt; interface contains methods that let the reader or writer access and modify the internal state of the rowset.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; 개체가 자신을 &lt;code&gt;RowSetReader&lt;/code&gt; 또는 &lt;code&gt;RowSetWriter&lt;/code&gt; 개체 에 표시하기 위해 구현 하는 인터페이스입니다 . &lt;code&gt;RowSetInternal&lt;/code&gt; 의 인터페이스는 독자 또는 작가 접근 할 수 있도록하고, 행 세트의 내부 상태를 수정하는 방법이 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="7d7f0195a4e627d3e08cc4d2f7cdc44dd3952022" translate="yes" xml:space="preserve">
          <source>The interface that adds support to the JDBC API for the JavaBeans component model.</source>
          <target state="translated">JavaBeans 구성 요소 모델에 대한 JDBC API에 대한 지원을 추가하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="84520ffa5f5af5dec870ca1fa654282bf45951b0" translate="yes" xml:space="preserve">
          <source>The interface that adds support to the JDBC API for the JavaBeans component model. A rowset, which can be used as a JavaBeans component in a visual Bean development environment, can be created and configured at design time and executed at run time.</source>
          <target state="translated">JavaBeans 구성 요소 모델에 대한 JDBC API에 대한 지원을 추가하는 인터페이스입니다. Visual Bean 개발 환경에서 JavaBeans 구성 요소로 사용할 수있는 행 집합은 디자인 타임에 만들고 구성하고 런타임에 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2b33bf1c3e5e47208ecb26c4656693ec0a731bfe" translate="yes" xml:space="preserve">
          <source>The interface that adds support to the JDBC API for the JavaBeans&amp;trade; component model.</source>
          <target state="translated">JavaBeans &amp;trade; 컴포넌트 모델에 대한 JDBC API에 대한 지원을 추가하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="76a2844bf74f0625edaf8520bc6024340f01adf0" translate="yes" xml:space="preserve">
          <source>The interface that adds support to the JDBC API for the JavaBeans&amp;trade; component model. A rowset, which can be used as a JavaBeans component in a visual Bean development environment, can be created and configured at design time and executed at run time.</source>
          <target state="translated">JavaBeans &amp;trade; 컴포넌트 모델에 대한 JDBC API에 대한 지원을 추가하는 인터페이스입니다. Visual Bean 개발 환경에서 JavaBeans 구성 요소로 사용할 수있는 행 집합은 디자인 타임에 만들고 구성하고 런타임에 실행할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0c8ea60334ce45697e942c34efac5bacbbb6cd8" translate="yes" xml:space="preserve">
          <source>The interface that all standard implementations of &lt;code&gt;CachedRowSet&lt;/code&gt; must implement.</source>
          <target state="translated">&lt;code&gt;CachedRowSet&lt;/code&gt; 의 모든 표준 구현이 구현해야하는 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="2a366a603678d4be4c1e51b5bf1cd25eef0ba2f7" translate="yes" xml:space="preserve">
          <source>The interface that defines a &lt;code&gt;KeySelectionManager&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;KeySelectionManager&lt;/code&gt; 를 정의하는 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="92a994fc926b48e60bc432f1b12dd7a0cf8833ec" translate="yes" xml:space="preserve">
          <source>The interface that defines a &lt;code&gt;KeySelectionManager&lt;/code&gt;. To qualify as a &lt;code&gt;KeySelectionManager&lt;/code&gt;, the class needs to implement the method that identifies the list index given a character and the combo box data model.</source>
          <target state="translated">&lt;code&gt;KeySelectionManager&lt;/code&gt; 를 정의하는 인터페이스입니다 . &lt;code&gt;KeySelectionManager&lt;/code&gt; 자격을 얻으려면 클래스가 문자 및 콤보 상자 데이터 모델이 지정된 목록 인덱스를 식별하는 메서드를 구현해야합니다.</target>
        </trans-unit>
        <trans-unit id="156522656c8ba136a0bd17f52208d4429357e173" translate="yes" xml:space="preserve">
          <source>The interface that every driver class must implement.</source>
          <target state="translated">모든 드라이버 클래스가 구현해야하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="b83e5587b5e3268f7bd3121d72946c5268c5087e" translate="yes" xml:space="preserve">
          <source>The interface to a DSA public key.</source>
          <target state="translated">DSA 공개 키에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="9ed25013cc4c4ff6dfb08741855f976f636b0905" translate="yes" xml:space="preserve">
          <source>The interface to a DSA public key. DSA (Digital Signature Algorithm) is defined in NIST's FIPS-186.</source>
          <target state="translated">DSA 공개 키에 대한 인터페이스입니다. DSA (Digital Signature Algorithm)는 NIST의 FIPS-186에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="463dbbe10e7a119d6739cd125d3ac314683f9e4d" translate="yes" xml:space="preserve">
          <source>The interface to a DSA public or private key.</source>
          <target state="translated">DSA 공개 또는 개인 키에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="044208746fb44cc724fe5c2f514ca19e29568745" translate="yes" xml:space="preserve">
          <source>The interface to a DSA public or private key. DSA (Digital Signature Algorithm) is defined in NIST's FIPS-186.</source>
          <target state="translated">DSA 공개 또는 개인 키에 대한 인터페이스입니다. DSA (Digital Signature Algorithm)는 NIST의 FIPS-186에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="adefbd72188ceac085b3c4a9f4be42b94848b3ce" translate="yes" xml:space="preserve">
          <source>The interface to a Diffie-Hellman key.</source>
          <target state="translated">Diffie-Hellman 키에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="0e7434107d0fa07c24f0a582e03af6e48009d021" translate="yes" xml:space="preserve">
          <source>The interface to a Diffie-Hellman private key.</source>
          <target state="translated">Diffie-Hellman 개인 키에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="4acf01c0df81cddc20d7dfb79ad62615a15e5c84" translate="yes" xml:space="preserve">
          <source>The interface to a Diffie-Hellman public key.</source>
          <target state="translated">Diffie-Hellman 공개 키에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="bb7785adea75ae08367d3fad0898e7f74e3a25df" translate="yes" xml:space="preserve">
          <source>The interface to a PBE key.</source>
          <target state="translated">PBE 키에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="a842dd810f1156e09e9ab91f8793e0b003e7a971" translate="yes" xml:space="preserve">
          <source>The interface to a public or private key in &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard, such as those for RSA, or RSASSA-PSS algorithms.</source>
          <target state="translated">RSA 또는 RSASSA-PSS 알고리즘에 대한 것과 같은 &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS # 1 v2.2&lt;/a&gt; 표준 의 공개 또는 개인 키에 대한 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="91e4056f5dd925551a0070946d45540c821673da" translate="yes" xml:space="preserve">
          <source>The interface to an RSA multi-prime private key, as defined in the &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard, using the</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS # 1 v2.2&lt;/a&gt; 표준에 정의 된 RSA 멀티 프라임 개인 키에 대한 인터페이스</target>
        </trans-unit>
        <trans-unit id="5c1db7ae0638b04f0ceada2e49d2df2966d53fb8" translate="yes" xml:space="preserve">
          <source>The interface to an RSA multi-prime private key, as defined in the PKCS#1 v2.1, using the</source>
          <target state="translated">PKCS # 1 v2.1에 정의 된 RSA 멀티-프라임 개인 키에 대한 인터페이스</target>
        </trans-unit>
        <trans-unit id="a93dc36b23643b7698e78209d821a3579ed3fa7c" translate="yes" xml:space="preserve">
          <source>The interface to an RSA private key, as defined in the &lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS#1 v2.2&lt;/a&gt; standard, using the</source>
          <target state="translated">&lt;a href=&quot;https://tools.ietf.org/rfc/rfc8017.txt&quot;&gt;PKCS # 1 v2.2&lt;/a&gt; 표준에 정의 된 RSA 개인 키에 대한 인터페이스</target>
        </trans-unit>
        <trans-unit id="962644ae619db56ffc6c6dad22fd41157b2fd2a0" translate="yes" xml:space="preserve">
          <source>The interface to an RSA private key, as defined in the PKCS#1 standard, using the</source>
          <target state="translated">PKCS # 1 표준에 정의 된대로 RSA 개인 키에 대한 인터페이스</target>
        </trans-unit>
        <trans-unit id="9af190896ba0f3ec911fd1ca9076fd92e2426bcb" translate="yes" xml:space="preserve">
          <source>The interface to an RSA private key.</source>
          <target state="translated">RSA 개인 키에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="40ba9f0717c9368de370e6c22458f351ecd83c45" translate="yes" xml:space="preserve">
          <source>The interface to an RSA public key.</source>
          <target state="translated">RSA 공개 키에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="21ca22444f4daa0fa309978083c83a357a706d1a" translate="yes" xml:space="preserve">
          <source>The interface to an RSA public or private key.</source>
          <target state="translated">RSA 공개 또는 개인 키에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="7eddc4f13981b28b7fc90f393624b67b1c6494e1" translate="yes" xml:space="preserve">
          <source>The interface to an elliptic curve (EC) key.</source>
          <target state="translated">타원 곡선 (EC) 키에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="e0aecd668220d63ab8af6b0ed5fd7985ec0495d5" translate="yes" xml:space="preserve">
          <source>The interface to an elliptic curve (EC) private key.</source>
          <target state="translated">EC (Elliptic Curve) 개인 키에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="b4cca451c5f37a2fb4b20bef00c3b41668f48298" translate="yes" xml:space="preserve">
          <source>The interface to an elliptic curve (EC) public key.</source>
          <target state="translated">EC (Elliptic Curve) 공개 키에 대한 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="9db75f5b48a5bcf9d2e52e47def4c368d334ede1" translate="yes" xml:space="preserve">
          <source>The interface used for the custom mapping of an SQL user-defined type (UDT) to a class in the Java programming language.</source>
          <target state="translated">SQL 사용자 정의 유형 (UDT)을 Java 프로그래밍 언어의 클래스로 사용자 정의 매핑하는 데 사용되는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="f8a229341f31a1748b35e7f9ad3be26ae2fca2a9" translate="yes" xml:space="preserve">
          <source>The interface used for the custom mapping of an SQL user-defined type (UDT) to a class in the Java programming language. The class object for a class implementing the &lt;code&gt;SQLData&lt;/code&gt; interface will be entered in the appropriate &lt;code&gt;Connection&lt;/code&gt; object's type map along with the SQL name of the UDT for which it is a custom mapping.</source>
          <target state="translated">SQL 사용자 정의 유형 (UDT)을 Java 프로그래밍 언어의 클래스로 사용자 정의 매핑하는 데 사용되는 인터페이스입니다. &lt;code&gt;SQLData&lt;/code&gt; 인터페이스를 구현하는 클래스의 클래스 개체 는 사용자 지정 매핑 인 UDT의 SQL 이름과 함께 적절한 &lt;code&gt;Connection&lt;/code&gt; 개체의 유형 맵에 입력됩니다.</target>
        </trans-unit>
        <trans-unit id="0dfc68c91d6204b1bb749c632244d68f09a4cfe9" translate="yes" xml:space="preserve">
          <source>The interface used to execute SQL stored procedures.</source>
          <target state="translated">SQL 저장 프로 시저를 실행하는 데 사용되는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="41e253d110bb4cc12058ca9717d76c2818ce3388" translate="yes" xml:space="preserve">
          <source>The interface used to execute SQL stored procedures. The JDBC API provides a stored procedure SQL escape syntax that allows stored procedures to be called in a standard way for all RDBMSs. This escape syntax has one form that includes a result parameter and one that does not. If used, the result parameter must be registered as an OUT parameter. The other parameters can be used for input, output or both. Parameters are referred to sequentially, by number, with the first parameter being 1.</source>
          <target state="translated">SQL 저장 프로 시저를 실행하는 데 사용되는 인터페이스입니다. JDBC API는 저장 프로 시저를 모든 RDBMS에 대해 표준 방식으로 호출 할 수있는 저장 프로 시저 SQL 이스케이프 구문을 제공합니다. 이 이스케이프 구문에는 결과 매개 변수를 포함하는 양식과 그렇지 않은 양식이 있습니다. 사용하는 경우 결과 매개 변수를 OUT 매개 변수로 등록해야합니다. 다른 매개 변수는 입력, 출력 또는 둘 다에 사용할 수 있습니다. 매개 변수는 첫 번째 매개 변수가 1 인 숫자로 순차적으로 참조됩니다.</target>
        </trans-unit>
        <trans-unit id="5a31b6987c2c79396d491dc908293fbe58b41db8" translate="yes" xml:space="preserve">
          <source>The interface which defines the methods required for the implementation of the popup portion of a combo box.</source>
          <target state="translated">콤보 상자의 팝업 부분을 구현하는 데 필요한 메서드를 정의하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="4fa870ba5a0a544cc68fd31508316e7b610bd371" translate="yes" xml:space="preserve">
          <source>The interface whose implementing classes are used to connect Script Engines with objects, such as scoped Bindings, in hosting applications.</source>
          <target state="translated">호스팅 응용 프로그램에서 스크립트 엔진을 범위 바인딩과 같은 개체와 연결하는 데 구현 클래스가 사용되는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="ad68169d81438deea93e7cdddc0d3f1cc9aa0897" translate="yes" xml:space="preserve">
          <source>The interface whose implementing classes are used to connect Script Engines with objects, such as scoped Bindings, in hosting applications. Each scope is a set of named attributes whose values can be set and retrieved using the &lt;code&gt;ScriptContext&lt;/code&gt; methods. ScriptContexts also expose Readers and Writers that can be used by the ScriptEngines for input and output.</source>
          <target state="translated">호스팅 응용 프로그램에서 스크립트 엔진을 범위 바인딩과 같은 개체와 연결하는 데 구현 클래스가 사용되는 인터페이스입니다. 각 범위는 &lt;code&gt;ScriptContext&lt;/code&gt; 메서드를 사용하여 값을 설정하고 검색 할 수있는 명명 된 특성 집합입니다 . ScriptContext는 또한 입력 및 출력을 위해 ScriptEngine에서 사용할 수있는 리더 및 라이터를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="335bcfeb28a2280febc28797333307ddf650e172" translate="yes" xml:space="preserve">
          <source>The interfaces and classes in this package came from Document Object Model (DOM) Level 3 XPath Specification, Working Draft 20 August 2002. Refer to &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-3-XPath/&quot;&gt; Document Object Model (DOM) Level 3 XPath Specification, Version 1.0, W3C Working Group Note 26 February 2004&lt;/a&gt; except that the values of &lt;a href=&quot;xpathexception#INVALID_EXPRESSION_ERR&quot;&gt;&lt;code&gt;XPathException.INVALID_EXPRESSION_ERR&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;xpathexception#TYPE_ERR&quot;&gt;&lt;code&gt;XPathException.TYPE_ERR&lt;/code&gt;&lt;/a&gt; are 1 and 2 respectively (instead of 51 and 52).</source>
          <target state="translated">이 패키지의 인터페이스와 클래스는 문서 객체 모델 (DOM) 레벨 3의 XPath 사양, 작업 초안 (20) 2002 년 8 월을 참조하십시오에서 온 &lt;a href=&quot;https://www.w3.org/TR/DOM-Level-3-XPath/&quot;&gt;문서 객체 모델 (DOM) 레벨 3의 XPath 사양, 버전 1.0, W3C 워킹 그룹 노트 2004년 2월 26일&lt;/a&gt; 제외 &lt;a href=&quot;xpathexception#INVALID_EXPRESSION_ERR&quot;&gt; &lt;code&gt;XPathException.INVALID_EXPRESSION_ERR&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;xpathexception#TYPE_ERR&quot;&gt; &lt;code&gt;XPathException.TYPE_ERR&lt;/code&gt; &lt;/a&gt; 의 값은 각각 1과 2입니다 (51과 52 대신).</target>
        </trans-unit>
        <trans-unit id="b586a8bc8674bef4ff71be9874a1bca665e48ea2" translate="yes" xml:space="preserve">
          <source>The interfaces in this package are annotated with &lt;a href=&quot;../../lang/functionalinterface&quot;&gt;&lt;code&gt;FunctionalInterface&lt;/code&gt;&lt;/a&gt;. This annotation is not a requirement for the compiler to recognize an interface as a functional interface, but merely an aid to capture design intent and enlist the help of the compiler in identifying accidental violations of design intent.</source>
          <target state="translated">이 패키지의 인터페이스는 &lt;a href=&quot;../../lang/functionalinterface&quot;&gt; &lt;code&gt;FunctionalInterface&lt;/code&gt; &lt;/a&gt; 로 주석 처리됩니다 . 이 주석은 컴파일러가 인터페이스를 기능적 인터페이스로 인식하기위한 요구 사항이 아니라 설계 의도를 포착하고 우발적 인 설계 의도 위반을 식별하는 데 컴파일러의 도움을 요청하는 데 도움이됩니다.</target>
        </trans-unit>
        <trans-unit id="f8e80ea45bc954fd03a7e9d97b2ac2fddee32d9c" translate="yes" xml:space="preserve">
          <source>The interfaces in this package are general purpose functional interfaces used by the JDK, and are available to be used by user code as well. While they do not identify a complete set of function shapes to which lambda expressions might be adapted, they provide enough to cover common requirements. Other functional interfaces provided for specific purposes, such as &lt;a href=&quot;../../io/filefilter&quot;&gt;&lt;code&gt;FileFilter&lt;/code&gt;&lt;/a&gt;, are defined in the packages where they are used.</source>
          <target state="translated">이 패키지의 인터페이스는 JDK에서 사용하는 범용 기능 인터페이스이며 사용자 코드에서도 사용할 수 있습니다. 람다 식을 적용 할 수있는 완전한 함수 셰이프 집합을 식별하지는 않지만 공통 요구 사항을 충분히 충족 할 수 있습니다. &lt;a href=&quot;../../io/filefilter&quot;&gt; &lt;code&gt;FileFilter&lt;/code&gt; &lt;/a&gt; 와 같은 특정 목적으로 제공되는 다른 기능 인터페이스 는 사용되는 패키지에 정의되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="afbaffc2c6398945440a2e49ce26cd85be3ec891" translate="yes" xml:space="preserve">
          <source>The interfaces of an &lt;code&gt;AttributeSet&lt;/code&gt; resemble those of the Java Collections API's &lt;code&gt;java.util.Map&lt;/code&gt; interface, but is more restrictive in the types it will accept, and combines keys and values into an &lt;code&gt;Attribute&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;AttributeSet&lt;/code&gt; 의 인터페이스는 Java Collections API의 &lt;code&gt;java.util.Map&lt;/code&gt; 인터페이스와 비슷하지만 허용되는 유형이 더 제한적이며 키와 값을 &lt;code&gt;Attribute&lt;/code&gt; 로 결합합니다 .</target>
        </trans-unit>
        <trans-unit id="4f0aedf60340a18f664d801740438927103a34c5" translate="yes" xml:space="preserve">
          <source>The interfaces of an AttributeSet resemble those of the Java Collections API's java.util.Map interface, but is more restrictive in the types it will accept, and combines keys and values into an Attribute.</source>
          <target state="translated">AttributeSet의 인터페이스는 Java Collections API의 java.util.Map 인터페이스의 인터페이스와 유사하지만 허용되는 유형이 더 제한적이며 키와 값을 속성으로 결합합니다.</target>
        </trans-unit>
        <trans-unit id="986cf04dad930a7f864970ec2d2807d31aa71120" translate="yes" xml:space="preserve">
          <source>The interfaces that the CatalogResolver extend specified checked exceptions, including:</source>
          <target state="translated">CatalogResolver가 다음을 포함하여 지정된 확인 된 예외를 확장하는 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="8f8b3b9b5f4ed01d13daed32997afb725777101d" translate="yes" xml:space="preserve">
          <source>The interfaces will be resolved similar to classes loaded via the &lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;loadClass(String,String)&lt;/code&gt;&lt;/a&gt; method using the given &lt;code&gt;codebase&lt;/code&gt;.</source>
          <target state="translated">인터페이스는 주어진 &lt;code&gt;codebase&lt;/code&gt; 사용하여 &lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;loadClass(String,String)&lt;/code&gt; &lt;/a&gt; 메서드를 통해로드 된 클래스와 유사하게 해결됩니다 .</target>
        </trans-unit>
        <trans-unit id="d06b1a6249e8d629b4af020df493456736e07626" translate="yes" xml:space="preserve">
          <source>The interiors of the individual stored sub-paths are all non-empty and non-overlapping. Paths are decomposed during construction into separate component non-overlapping parts, empty pieces of the path are discarded, and then these non-empty and non-overlapping properties are maintained through all subsequent CAG operations. Outlines of different component sub-paths may touch each other, as long as they do not cross so that their enclosed areas overlap.</source>
          <target state="translated">저장된 개별 하위 경로의 내부는 모두 비어 있지 않고 겹치지 않습니다. 경로는 구성 중에 별도의 구성 요소 겹치지 않는 부분으로 분해되고, 경로의 빈 부분은 폐기되며, 이러한 비어 있지 않고 겹치지 않는 속성은 모든 후속 CAG 작업을 통해 유지됩니다. 서로 다른 구성 요소 하위 경로의 윤곽선은 둘러싸여있는 영역이 겹치도록 교차하지 않는 한 서로 닿을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f01d7ff8717035e216dfcc98680087099b0aef79" translate="yes" xml:space="preserve">
          <source>The internal buffer array where the data is stored.</source>
          <target state="translated">데이터가 저장되는 내부 버퍼 배열입니다.</target>
        </trans-unit>
        <trans-unit id="4c88b3d99811fc3ce8911d52260d63fb6bd23bc5" translate="yes" xml:space="preserve">
          <source>The internal buffer array where the data is stored. When necessary, it may be replaced by another array of a different size.</source>
          <target state="translated">데이터가 저장되는 내부 버퍼 배열. 필요한 경우 다른 크기의 다른 어레이로 교체 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e467d22d50f08036b2d07e61bd60b6c01391383c" translate="yes" xml:space="preserve">
          <source>The internal buffer where data is stored.</source>
          <target state="translated">데이터가 저장되는 내부 버퍼.</target>
        </trans-unit>
        <trans-unit id="4b83e6877fa5cf0fe0c11f806ceb26931ce826b9" translate="yes" xml:space="preserve">
          <source>The internal details of converting an &lt;code&gt;IIOMetadata&lt;/code&gt; object into a writer-specific format will vary according to the context of the operation. Typically, an &lt;code&gt;ImageWriter&lt;/code&gt; will inspect the incoming object to see if it implements additional interfaces with which the writer is familiar. This might be the case, for example, if the object was obtained by means of a read operation on a reader plug-in written by the same vendor as the writer. In this case, the writer may access the incoming object by means of its plug-in specific interfaces. In this case, the re-encoding may be close to lossless if the image file format is kept constant. If the format is changing, the writer may still attempt to preserve as much information as possible.</source>
          <target state="translated">&lt;code&gt;IIOMetadata&lt;/code&gt; 객체를 작성 기별 형식으로 변환하는 내부 세부 사항은 작업의 상황에 따라 다릅니다. 일반적으로 &lt;code&gt;ImageWriter&lt;/code&gt; 는 들어오는 객체를 검사하여 작성기가 익숙한 추가 인터페이스를 구현하는지 확인합니다. 예를 들어, 작성자와 동일한 벤더가 작성한 리더 플러그인에서 읽기 조작을 통해 오브젝트를 얻은 경우가 이에 해당합니다. 이 경우 기록기는 플러그인 특정 인터페이스를 통해 수신 객체에 액세스 할 수 있습니다. 이 경우, 이미지 파일 포맷이 일정하게 유지되면 재 인코딩은 손실이 거의 없을 수있다. 형식이 변경되면 기록기는 가능한 한 많은 정보를 보존하려고 시도 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="026c3bb1a08b7e0301eba9e3961c4a88004f9391" translate="yes" xml:space="preserve">
          <source>The internal field corresponding to the type name of this &lt;code&gt;ArrayType&lt;/code&gt; instance is also set to the class name of the array instances it describes. In other words, the methods &lt;code&gt;getClassName&lt;/code&gt; and &lt;code&gt;getTypeName&lt;/code&gt; return the same string value. The internal field corresponding to the description of this &lt;code&gt;ArrayType&lt;/code&gt; instance is set to a string value which follows the following template:</source>
          <target state="translated">이 &lt;code&gt;ArrayType&lt;/code&gt; 인스턴스 의 형식 이름에 해당하는 내부 필드 도 설명하는 배열 인스턴스의 클래스 이름으로 설정됩니다. 즉, &lt;code&gt;getClassName&lt;/code&gt; 및 &lt;code&gt;getTypeName&lt;/code&gt; 메소드 는 동일한 문자열 값을 리턴합니다. 이 &lt;code&gt;ArrayType&lt;/code&gt; 인스턴스 의 설명에 해당하는 내부 필드 는 다음 템플릿을 따르는 문자열 값으로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="97873cfa8b14ac5ef85a6a7f8b7047b379afa867" translate="yes" xml:space="preserve">
          <source>The internal implementation can approximate some of the equations and it can also eliminate some steps to avoid unnecessary operations. For example, consider a discrete integer image with non-premultiplied alpha values that uses 8 bits per component for storage. The stored values for a nearly transparent darkened red might be:</source>
          <target state="translated">내부 구현은 방정식의 일부를 근사 할 수 있으며 불필요한 작업을 피하기 위해 일부 단계를 제거 할 수도 있습니다. 예를 들어, 저장을 위해 구성 요소 당 8 비트를 사용하는 프리 멀티플 라이드 알파 값이있는 이산 정수 이미지를 생각해보십시오. 거의 투명한 진한 빨간색에 대해 저장된 값은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0552ecd2a51650fc6dff9db26c8cd0f352bcf862" translate="yes" xml:space="preserve">
          <source>The internal subset as a string, or &lt;code&gt;null&lt;/code&gt; if there is none.</source>
          <target state="translated">문자열로서의 내부 서브 세트 또는 &lt;code&gt;null&lt;/code&gt; 경우 null 입니다.</target>
        </trans-unit>
        <trans-unit id="9fc176506ed531eac8b6831ba5710d3abdbe4d9e" translate="yes" xml:space="preserve">
          <source>The internal subset as a string, or &lt;code&gt;null&lt;/code&gt; if there is none. This is does not contain the delimiting square brackets.</source>
          <target state="translated">문자열로서의 내부 서브 세트 또는 &lt;code&gt;null&lt;/code&gt; 경우 null 입니다. 이것은 구분 대괄호를 포함하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bc341f1196d05a1444add689183382b41f0973e8" translate="yes" xml:space="preserve">
          <source>The interpretation of &lt;code&gt;filterExpr&lt;/code&gt; is based on RFC 2254. It may additionally contain variables of the form &lt;code&gt;{i}&lt;/code&gt; -- where &lt;code&gt;i&lt;/code&gt; is an integer -- that refer to objects in the &lt;code&gt;filterArgs&lt;/code&gt; array. The interpretation of &lt;code&gt;filterExpr&lt;/code&gt; is otherwise identical to that of the &lt;code&gt;filter&lt;/code&gt; parameter of the method &lt;code&gt;search(Name, String, SearchControls)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;filterExpr&lt;/code&gt; 의 해석은 RFC 2254를 기반으로 합니다. 또한 &lt;code&gt;filterArgs&lt;/code&gt; 배열의 오브젝트를 참조하는 &lt;code&gt;{i}&lt;/code&gt; 형식의 변수 ( 여기서 &lt;code&gt;i&lt;/code&gt; 는 정수임)를 포함 할 수 있습니다 . &lt;code&gt;filterExpr&lt;/code&gt; 의 해석은 &lt;code&gt;search(Name, String, SearchControls)&lt;/code&gt; 메소드 의 &lt;code&gt;filter&lt;/code&gt; 매개 변수의 해석과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b4f366dca572308a4867f800357c6e5fcddc0581" translate="yes" xml:space="preserve">
          <source>The interpretation of the &lt;code&gt;x&lt;/code&gt;, &lt;code&gt;y&lt;/code&gt;, &lt;code&gt;width&lt;/code&gt;, and &lt;code&gt;height&lt;/code&gt; arguments depends on the value of the &lt;code&gt;infoflags&lt;/code&gt; argument.</source>
          <target state="translated">&lt;code&gt;x&lt;/code&gt; , &lt;code&gt;y&lt;/code&gt; , &lt;code&gt;width&lt;/code&gt; 및 &lt;code&gt;height&lt;/code&gt; 인수 의 해석은 &lt;code&gt;infoflags&lt;/code&gt; 인수 의 값에 따라 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="1c3ddf5060a453d2b330d621230c3bacbb138c19" translate="yes" xml:space="preserve">
          <source>The interpretation of the arguments will be specific to each tool.</source>
          <target state="translated">인수의 해석은 각 도구에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="5001084159cfa4f6e3056151d0d16dcc6d196054" translate="yes" xml:space="preserve">
          <source>The interprocess token may contain security-sensitive information (for example cryptographic keys). While mechanisms are encouraged to either avoid placing such sensitive information within interprocess tokens, or to encrypt the token before returning it to the application, in a typical GSS-API implementation this may not be possible. Thus the application must take care to protect the interprocess token, and ensure that any process to which the token is transferred is trustworthy.</source>
          <target state="translated">프로세스 간 토큰에는 보안에 민감한 정보 (예 : 암호화 키)가 포함될 수 있습니다. 프로세스 간 토큰 내에 이러한 민감한 정보를 배치하지 않거나 토큰을 애플리케이션에 반환하기 전에 암호화하는 메커니즘이 권장되지만 일반적인 GSS-API 구현에서는 불가능할 수 있습니다. 따라서 응용 프로그램은 프로세스 간 토큰을 보호하고 토큰이 전송되는 모든 프로세스가 신뢰할 수 있는지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="b773d8fe124e09e0a4e5802401f905ddbdf56461" translate="yes" xml:space="preserve">
          <source>The intersect filter operation.</source>
          <target state="translated">교차 필터 작업입니다.</target>
        </trans-unit>
        <trans-unit id="b17b0be7e9649edb0287ead5101582dc5811a7d1" translate="yes" xml:space="preserve">
          <source>The ints between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the int at index</source>
          <target state="translated">버퍼의 현재 위치와 한계 사이의 정수 (있는 경우)가 버퍼의 시작 부분에 복사됩니다. 즉, 인덱스의 int</target>
        </trans-unit>
        <trans-unit id="ff83170f74252dff1b7b1bd744031e44a438cc62" translate="yes" xml:space="preserve">
          <source>The inverse transform is done by converting the PCS Y components to device Gray via the inverse of the grayTRC.</source>
          <target state="translated">역변환은 grayTRC의 역을 통해 PCS Y 구성 요소를 장치 Gray로 변환하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="25fdeb0ee9ae180e4b8bb71954a75456e0340f80" translate="yes" xml:space="preserve">
          <source>The inverse transform is performed by converting PCS XYZ components to linear RGB components through the inverse of the above 3x3 matrix, and then converting linear RGB to device RGB through inverses of the TRCs.</source>
          <target state="translated">역변환은 위의 3x3 행렬의 역을 통해 PCS XYZ 구성 요소를 선형 RGB 구성 요소로 변환 한 다음 TRC의 역을 통해 선형 RGB를 장치 RGB로 변환하여 수행됩니다.</target>
        </trans-unit>
        <trans-unit id="f319001c4eea02470448a8107b38966f0461733e" translate="yes" xml:space="preserve">
          <source>The invocation &lt;code&gt;new Random(seed)&lt;/code&gt; is equivalent to:</source>
          <target state="translated">&lt;code&gt;new Random(seed)&lt;/code&gt; 호출 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="06514fe669538cd61fc4305976402430821d73fb" translate="yes" xml:space="preserve">
          <source>The invocation is defined by the interface &lt;a href=&quot;doclet&quot;&gt;&lt;code&gt;Doclet&lt;/code&gt;&lt;/a&gt; -- the &lt;a href=&quot;doclet#run(jdk.javadoc.doclet.DocletEnvironment)&quot;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt; interface method, defines the entry point.</source>
          <target state="translated">호출이 인터페이스에 의해 정의된다 &lt;a href=&quot;doclet&quot;&gt; &lt;code&gt;Doclet&lt;/code&gt; &lt;/a&gt; - &lt;a href=&quot;doclet#run(jdk.javadoc.doclet.DocletEnvironment)&quot;&gt; &lt;code&gt;run&lt;/code&gt; &lt;/a&gt; 인터페이스 방법, 진입 점을 정의합니다.</target>
        </trans-unit>
        <trans-unit id="bd2eb8cb841fce5d4fbf7dc58ba68afe24b793f2" translate="yes" xml:space="preserve">
          <source>The invocation of this method, and the subsequent use of the resulting map, may cause time-consuming disk or network I/O operations to occur. This method is provided for applications that need to enumerate all of the available charsets, for example to allow user charset selection. This method is not used by the &lt;a href=&quot;#forName(java.lang.String)&quot;&gt;&lt;code&gt;forName&lt;/code&gt;&lt;/a&gt; method, which instead employs an efficient incremental lookup algorithm.</source>
          <target state="translated">이 메서드를 호출하고 결과 맵을 계속 사용하면 시간이 많이 걸리는 디스크 또는 네트워크 I / O 작업이 발생할 수 있습니다. 이 메서드는 사용 가능한 모든 문자 집합을 열거해야하는 응용 프로그램에 제공됩니다 (예 : 사용자 문자 집합 선택 허용). 이 메서드는 대신 효율적인 증분 조회 알고리즘을 사용하는 &lt;a href=&quot;#forName(java.lang.String)&quot;&gt; &lt;code&gt;forName&lt;/code&gt; &lt;/a&gt; 메서드에서 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="babf9d5bd6a8a8c2f47c1a276ea3aea89de709e2" translate="yes" xml:space="preserve">
          <source>The invocation of this method, and the subsequent use of the resulting map, may cause time-consuming disk or network I/O operations to occur. This method is provided for applications that need to enumerate all of the available charsets, for example to allow user charset selection. This method is not used by the &lt;a href=&quot;charset#forName-java.lang.String-&quot;&gt;&lt;code&gt;forName&lt;/code&gt;&lt;/a&gt; method, which instead employs an efficient incremental lookup algorithm.</source>
          <target state="translated">이 메소드의 호출 및 결과 맵의 후속 사용으로 인해 시간이 많이 걸리는 디스크 또는 네트워크 I / O 조작이 발생할 수 있습니다. 이 방법은 사용 가능한 모든 문자 집합을 열거해야하는 응용 프로그램 (예 : 사용자 문자 집합 선택 허용)에 제공됩니다. 이 메소드는 효율적인 증분 조회 알고리즘을 사용하는 &lt;a href=&quot;charset#forName-java.lang.String-&quot;&gt; &lt;code&gt;forName&lt;/code&gt; &lt;/a&gt; 메소드에서 사용되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="9ccc3699c6e206dd25e4bae1756a647ed741cea5" translate="yes" xml:space="preserve">
          <source>The invoker will invoke its target like a call to &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; with the indicated &lt;code&gt;type&lt;/code&gt;. That is, if the target is exactly of the given &lt;code&gt;type&lt;/code&gt;, it will behave like &lt;code&gt;invokeExact&lt;/code&gt;; otherwise it behave as if &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt; is used to convert the target to the required &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">호출자는 표시된 &lt;code&gt;type&lt;/code&gt; 으로 &lt;a href=&quot;methodhandle#invoke(java.lang.Object...)&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt; 하는 호출처럼 대상을 호출 합니다 . 즉, 대상이 정확히 지정된 &lt;code&gt;type&lt;/code&gt; 이면 &lt;code&gt;invokeExact&lt;/code&gt; 와 같이 동작합니다 . 그렇지 않으면 &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt; 을 사용하여 대상을 필수 &lt;code&gt;type&lt;/code&gt; 으로 변환하는 것처럼 작동 합니다 .</target>
        </trans-unit>
        <trans-unit id="1cd061a90ad70184b57e438747c712b7578eb71c" translate="yes" xml:space="preserve">
          <source>The invoker will invoke its target like a call to &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt;&lt;code&gt;invoke&lt;/code&gt;&lt;/a&gt; with the indicated &lt;code&gt;type&lt;/code&gt;. That is, if the target is exactly of the given &lt;code&gt;type&lt;/code&gt;, it will behave like &lt;code&gt;invokeExact&lt;/code&gt;; otherwise it behave as if &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt;&lt;code&gt;asType&lt;/code&gt;&lt;/a&gt; is used to convert the target to the required &lt;code&gt;type&lt;/code&gt;.</source>
          <target state="translated">호출자는 표시된 &lt;code&gt;type&lt;/code&gt; 을 &lt;a href=&quot;methodhandle#invoke-java.lang.Object...-&quot;&gt; &lt;code&gt;invoke&lt;/code&gt; &lt;/a&gt; 하는 호출처럼 대상을 호출 합니다 . 즉, 대상이 지정된 &lt;code&gt;type&lt;/code&gt; 인 경우 &lt;code&gt;invokeExact&lt;/code&gt; 처럼 동작합니다 . 그렇지 않으면 &lt;a href=&quot;methodhandle#asType-java.lang.invoke.MethodType-&quot;&gt; &lt;code&gt;asType&lt;/code&gt; &lt;/a&gt; 을 사용하여 대상을 필요한 &lt;code&gt;type&lt;/code&gt; 으로 변환하는 것처럼 동작 합니다 .</target>
        </trans-unit>
        <trans-unit id="310452cd1f3861f99c2e30719b2a1c80c625887f" translate="yes" xml:space="preserve">
          <source>The issuer name field contains an X.500 distinguished name (DN). The ASN.1 definition for this is:</source>
          <target state="translated">발급자 이름 필드에는 X.500 식별 이름 (DN)이 있습니다. 이에 대한 ASN.1 정의는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="dda5b60c2df1313dd9695d0c63df28209bd62ad6" translate="yes" xml:space="preserve">
          <source>The italic action identifier</source>
          <target state="translated">기울임 꼴 작업 식별자</target>
        </trans-unit>
        <trans-unit id="7e99b790f51395efa49f0c878be9c43ea3745e55" translate="yes" xml:space="preserve">
          <source>The italicized style constant.</source>
          <target state="translated">기울임 꼴 스타일 상수입니다.</target>
        </trans-unit>
        <trans-unit id="39dfde18151d8c4014de09150f8c0606f546fc6b" translate="yes" xml:space="preserve">
          <source>The italicized style constant. This can be combined with the other style constants (except PLAIN) for mixed styles.</source>
          <target state="translated">기울임 꼴 스타일 상수입니다. 혼합 스타일의 경우 다른 스타일 상수 (PLAIN 제외)와 결합 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="08dca3a128f626f521194ee9b931ee93ae31fa59" translate="yes" xml:space="preserve">
          <source>The item labeled &lt;code&gt;Check&lt;/code&gt; shows a check box menu item in its &quot;off&quot; state.</source>
          <target state="translated">&lt;code&gt;Check&lt;/code&gt; 레이블이 붙은 항목은 &quot;꺼짐&quot;상태의 확인란 메뉴 항목을 표시합니다.</target>
        </trans-unit>
        <trans-unit id="e3a4374a69a545d2d36dd55d746577d2917d79cb" translate="yes" xml:space="preserve">
          <source>The items in</source>
          <target state="translated">항목</target>
        </trans-unit>
        <trans-unit id="8dcb14bc60ef5885dc021116d39b6eca424c65f4" translate="yes" xml:space="preserve">
          <source>The items in the &lt;code&gt;CSSRuleList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">&lt;code&gt;CSSRuleList&lt;/code&gt; 의 항목 은 0부터 시작하는 정수 인덱스를 통해 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="12b90b70e812db945fca73c7ee81205442fcf32a" translate="yes" xml:space="preserve">
          <source>The items in the &lt;code&gt;CSSValueList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">&lt;code&gt;CSSValueList&lt;/code&gt; 의 항목 은 0부터 시작하는 정수 인덱스를 통해 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="86079e6d3cc5c04a67ea4080658884c779335a2b" translate="yes" xml:space="preserve">
          <source>The items in the &lt;code&gt;MediaList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">&lt;code&gt;MediaList&lt;/code&gt; 의 항목 은 0부터 시작하는 정수 인덱스를 통해 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="25c9a779205bbb0e74f97df838d6ff1b0dfbe82b" translate="yes" xml:space="preserve">
          <source>The items in the &lt;code&gt;NodeList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">&lt;code&gt;NodeList&lt;/code&gt; 의 항목 은 0부터 시작하는 정수 인덱스를 통해 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c729ea32aee5aa65333a8623671e0fb7f98f922b" translate="yes" xml:space="preserve">
          <source>The items in the &lt;code&gt;StyleSheetList&lt;/code&gt; are accessible via an integral index, starting from 0.</source>
          <target state="translated">&lt;code&gt;StyleSheetList&lt;/code&gt; 의 항목 은 0부터 시작하는 정수 인덱스를 통해 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="323876616a739af5f320dccf8f27051507bab619" translate="yes" xml:space="preserve">
          <source>The iteration happens in a depth-first manner. In terms of how boundary conditions are handled:</source>
          <target state="translated">반복은 깊이 우선 방식으로 발생합니다. 경계 조건이 처리되는 방식과 관련하여 :</target>
        </trans-unit>
        <trans-unit id="cec95eb21126bfbb8afd0c3fcad98843912b0a70" translate="yes" xml:space="preserve">
          <source>The iteration order of mappings is unspecified and is subject to change.</source>
          <target state="translated">매핑의 반복 순서는 지정되지 않으며 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf35164f15764afcdbaeb7e897602674b8179f69" translate="yes" xml:space="preserve">
          <source>The iteration order of set elements is unspecified and is subject to change.</source>
          <target state="translated">집합 요소의 반복 순서는 지정되지 않으며 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fbaae247dadd838110dca38086cdf6f357ef7497" translate="yes" xml:space="preserve">
          <source>The iteration variable type for each clause is determined using the clause's init and step return types.</source>
          <target state="translated">각 절의 반복 변수 유형은 절의 init 및 단계 반환 유형을 사용하여 결정됩니다.</target>
        </trans-unit>
        <trans-unit id="2ea26b501627b7284031eb61bb08869e5f38e2a0" translate="yes" xml:space="preserve">
          <source>The iterator for this class is not multi-threaded safe, which means that the &lt;code&gt;Path2D&lt;/code&gt; class does not guarantee that modifications to the geometry of this &lt;code&gt;Path2D&lt;/code&gt; object do not affect any iterations of that geometry that are already in process.</source>
          <target state="translated">이 클래스의 이터레이터는 다중 스레드로부터 안전 하지 않습니다. 즉, &lt;code&gt;Path2D&lt;/code&gt; 클래스가이 &lt;code&gt;Path2D&lt;/code&gt; 객체 의 지오메트리에 대한 수정 이 이미 처리중인 지오메트리의 반복에 영향을주지 않는다는 것을 보장 하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="39f105bda0911b5e12c6548ef142e6d88a4f28d0" translate="yes" xml:space="preserve">
          <source>The iterator for this class is not multi-threaded safe, which means that this &lt;code&gt;Path2D&lt;/code&gt; class does not guarantee that modifications to the geometry of this &lt;code&gt;Path2D&lt;/code&gt; object do not affect any iterations of that geometry that are already in process.</source>
          <target state="translated">이 클래스의 이터레이터는 다중 스레드로부터 안전 하지 않습니다. 즉,이 &lt;code&gt;Path2D&lt;/code&gt; 클래스가이 &lt;code&gt;Path2D&lt;/code&gt; 객체 의 지오메트리에 대한 수정 이 이미 처리중인 지오메트리의 반복에 영향을주지 않는다는 것을 보장 하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="43677bd6fb1d8e6b8fec88d0eb15823021a7a4bf" translate="yes" xml:space="preserve">
          <source>The iterator is</source>
          <target state="translated">반복자는</target>
        </trans-unit>
        <trans-unit id="e77191fb3f83d580a46bbe09ef0f96ce777ac7e9" translate="yes" xml:space="preserve">
          <source>The iterator itself will be determined by the evaluation of the &lt;code&gt;iterator&lt;/code&gt; handle. Each value it produces will be stored in a loop iteration variable of type &lt;code&gt;T&lt;/code&gt;.</source>
          <target state="translated">반복기 자체는 &lt;code&gt;iterator&lt;/code&gt; 핸들 의 평가에 의해 결정됩니다 . 생성되는 각 값은 &lt;code&gt;T&lt;/code&gt; 유형의 루프 반복 변수에 저장됩니다 .</target>
        </trans-unit>
        <trans-unit id="cdb1b0cfd2b96c4cab16724e40575d357666e05a" translate="yes" xml:space="preserve">
          <source>The iterator must contain only implementations of the &lt;a href=&quot;namespace&quot;&gt;&lt;code&gt;Namespace&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">반복자는 &lt;a href=&quot;namespace&quot;&gt; &lt;code&gt;Namespace&lt;/code&gt; &lt;/a&gt; 인터페이스의 구현 만 포함해야합니다 .</target>
        </trans-unit>
        <trans-unit id="132e01992eabb7e0055de05d1e4e968149107d8f" translate="yes" xml:space="preserve">
          <source>The iterator must contain only implementations of the javax.xml.stream.Namespace interface.</source>
          <target state="translated">반복자는 javax.xml.stream.Namespace 인터페이스의 구현 만 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="4b6b8926c9cd791c0458723db88ac0a2c8e56241" translate="yes" xml:space="preserve">
          <source>The iterator must specify a single paragraph of text because an entire paragraph is required for the bidirectional algorithm.</source>
          <target state="translated">양방향 알고리즘에는 전체 단락이 필요하므로 반복기는 텍스트의 단일 단락을 지정해야합니다.</target>
        </trans-unit>
        <trans-unit id="89828064d0a9b123146c05ca87946b21b3543b5c" translate="yes" xml:space="preserve">
          <source>The iterator returned by the &lt;code&gt;iterator&lt;/code&gt; method traverses the elements in their</source>
          <target state="translated">&lt;code&gt;iterator&lt;/code&gt; 메소드에 의해 리턴 된 iterator는 해당 요소를 순회합니다.</target>
        </trans-unit>
        <trans-unit id="10f88f7effdb04bd9feaa9e20b80972277925243" translate="yes" xml:space="preserve">
          <source>The iterator returned by this method does not support removal. Invoking its &lt;a href=&quot;iterator#remove()&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; method will cause an &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">이 메서드에서 반환 된 반복기는 제거를 지원하지 않습니다. &lt;a href=&quot;iterator#remove()&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt; 메서드를 호출하면 &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt; 이 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="f9acc692e383944ec985155a5700e56e7ee30437" translate="yes" xml:space="preserve">
          <source>The iterator returned by this method does not support removal. Invoking its &lt;a href=&quot;iterator#remove--&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; method will cause an &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">이 메소드에 의해 리턴 된 반복기는 제거를 지원하지 않습니다. &lt;a href=&quot;iterator#remove--&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt; 메소드를 호출하면 &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="98e2680cc8dc738c981f8a34b95901f4a62969ea" translate="yes" xml:space="preserve">
          <source>The iterator returned by this method first yields all of the elements of the provider cache, in instantiation order. It then lazily loads and instantiates any remaining providers, adding each one to the cache in turn.</source>
          <target state="translated">이 메소드에 의해 리턴 된 반복자는 먼저 인스턴스화 순서로 제공자 캐시의 모든 요소를 ​​생성합니다. 그런 다음 나머지 공급자를 느리게로드하고 인스턴스화하여 각 공급자를 차례로 캐시에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="8c539fc62d88aef2c2e54557784510917732570d" translate="yes" xml:space="preserve">
          <source>The iterator returned from a call to &lt;a href=&quot;enumeration#asIterator()&quot;&gt;&lt;code&gt;Enumeration.asIterator()&lt;/code&gt;&lt;/a&gt; does not support removal of elements from the specified collection. This is necessary to avoid unintentionally increasing the capabilities of the returned enumeration.</source>
          <target state="translated">&lt;a href=&quot;enumeration#asIterator()&quot;&gt; &lt;code&gt;Enumeration.asIterator()&lt;/code&gt; &lt;/a&gt; 호출에서 반환 된 반복기 는 지정된 컬렉션에서 요소 제거를 지원하지 않습니다. 이는 반환 된 열거의 기능이 의도하지 않게 증가하는 것을 방지하기 위해 필요합니다.</target>
        </trans-unit>
        <trans-unit id="7596d0c3e99ad866c46e5d332b27bd327a16802e" translate="yes" xml:space="preserve">
          <source>The iterators returned by all of this class's &quot;collection view methods&quot; are</source>
          <target state="translated">이 클래스의 모든 &quot;컬렉션 뷰 메소드&quot;에 의해 리턴 된 반복자는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="34c7dfd11c16c2eb6589c6b0cbc4a3695a380b36" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of the collections returned by all of this class's &quot;collection view methods&quot; are</source>
          <target state="translated">이 클래스의 모든 &quot;컬렉션 뷰 메소드&quot;에 의해 리턴 된 콜렉션 의 &lt;code&gt;iterator&lt;/code&gt; 메소드에 의해 리턴 된 반복자 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="29c7796237b6ac9e744a01ef9154f15dbb163658" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of the collections returned by all of this class's &quot;collection view methods&quot; are &lt;em&gt;fail-fast&lt;/em&gt;: if the Hashtable is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future. The Enumerations returned by Hashtable's &lt;a href=&quot;#keys()&quot;&gt;&lt;code&gt;keys&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#elements()&quot;&gt;&lt;code&gt;elements&lt;/code&gt;&lt;/a&gt; methods are &lt;em&gt;not&lt;/em&gt; fail-fast; if the Hashtable is structurally modified at any time after the enumeration is created then the results of enumerating are undefined.</source>
          <target state="translated">이 클래스의 모든 &quot;컬렉션 뷰 메서드&quot;에 의해 반환 된 컬렉션 의 &lt;code&gt;iterator&lt;/code&gt; 메서드에 의해 반환 된 반복기 는 &lt;em&gt;실패 속도가 빠릅니다&lt;/em&gt; . 반복자가 생성 된 후 언제든지 Hashtable이 구조적으로 수정되는 경우 (반복자 자체 &lt;code&gt;remove&lt;/code&gt; 통한 경우를 제외) 메서드에서 반복자는 &lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다. 따라서 동시 수정에 직면하여 반복자는 미래에 결정되지 않은 시간에 임의의 비 결정적 동작을 위험에 빠뜨리지 않고 빠르고 깔끔하게 실패합니다. 해시 테이블의에 의해 반환되는 열거 &lt;a href=&quot;#keys()&quot;&gt; &lt;code&gt;keys&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;#elements()&quot;&gt; &lt;code&gt;elements&lt;/code&gt; &lt;/a&gt; 방법은 &lt;em&gt;없습니다&lt;/em&gt;빠른 실패; Hashtable이 열거가 생성 된 후 언제든지 구조적으로 수정되면 열거 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ec72967e40c5a796ec5761ebb8f998c720cf475e" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of the collections returned by all of this class's &quot;collection view methods&quot; are &lt;em&gt;fail-fast&lt;/em&gt;: if the Hashtable is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future. The Enumerations returned by Hashtable's keys and elements methods are &lt;em&gt;not&lt;/em&gt; fail-fast.</source>
          <target state="translated">에 의해 반환 된 반복자 &lt;code&gt;iterator&lt;/code&gt; 이 클래스의 &quot;모음보기 방법&quot;모든 의해 반환되는 컬렉션의 방법이있다 &lt;em&gt;르파&lt;/em&gt; : Hashtable의이 구조적으로 변경하면 반복자는 반복자 자체 이외 방법으로 만든 후 &lt;code&gt;remove&lt;/code&gt; 메소드에서 반복자는 &lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다. 따라서 동시 수정에 직면하여 반복자는 미래에 결정되지 않은 시간에 임의의 비 결정적 동작을 위험에 빠뜨리기보다는 신속하고 깨끗하게 실패합니다. Hashtable의 키 및 요소 메소드가 리턴 한 열거는 실패 &lt;em&gt;하지&lt;/em&gt; 않습니다.</target>
        </trans-unit>
        <trans-unit id="f8e4d6a942fbd556ea4a1ce02973c09959dfe624" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of the collections returned by all of this class's &quot;collection view methods&quot; are &lt;em&gt;fail-fast&lt;/em&gt;: if the map is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</source>
          <target state="translated">에 의해 반환 된 반복자 &lt;code&gt;iterator&lt;/code&gt; 이 클래스의 &quot;모음보기 방법&quot;모든 의해 반환되는 컬렉션의 방법이있다 &lt;em&gt;르파&lt;/em&gt; : 맵이 구조적으로 변경하면 반복자는 반복자 자체 이외 방법으로 만든 후 &lt;code&gt;remove&lt;/code&gt; 메소드에서 반복자는 &lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다. 따라서 동시 수정에 직면하여 반복자는 미래에 결정되지 않은 시간에 임의의 비 결정적 동작을 위험에 빠뜨리기보다는 신속하고 깨끗하게 실패합니다.</target>
        </trans-unit>
        <trans-unit id="cccc07ae6435dcf4ba8a8450330120f750cedaed" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of the collections returned by all of this class's collection view methods are &lt;em&gt;fail-fast&lt;/em&gt;: if the map is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</source>
          <target state="translated">에 의해 반환 된 반복자 &lt;code&gt;iterator&lt;/code&gt; 이 클래스의 콜렉션 뷰의 모든 메소드에 의해 반환되는 컬렉션의 방법이있다 &lt;em&gt;르파&lt;/em&gt; : 맵이 구조적으로 변경하면 반복자는 반복자 자체 이외 방법으로 만든 후 &lt;code&gt;remove&lt;/code&gt; , 방법 반복자는 &lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다. 따라서 동시 수정에 직면하여 반복자는 미래에 결정되지 않은 시간에 임의의 비 결정적 동작을 위험에 빠뜨리기보다는 신속하고 깨끗하게 실패합니다.</target>
        </trans-unit>
        <trans-unit id="c6afa57c2f19c822e3e46741e459736d8f927b2f" translate="yes" xml:space="preserve">
          <source>The iterators returned by the &lt;code&gt;iterator&lt;/code&gt; method of this class's &quot;collection views&quot; (that is, &lt;code&gt;entrySet()&lt;/code&gt;, &lt;code&gt;keySet()&lt;/code&gt;, and &lt;code&gt;values()&lt;/code&gt;) may not fail-fast (unlike the Hashtable implementation). These iterators are guaranteed to traverse elements as they existed upon construction exactly once, and may (but are not guaranteed to) reflect any modifications subsequent to construction.</source>
          <target state="translated">이 클래스의 &quot;컬렉션 뷰&quot;(즉, &lt;code&gt;entrySet()&lt;/code&gt; , &lt;code&gt;keySet()&lt;/code&gt; 및 &lt;code&gt;values()&lt;/code&gt; ) 의 &lt;code&gt;iterator&lt;/code&gt; 메서드에 의해 반환 된 반복기 는 Hashtable 구현과 달리 fail-fast가 아닐 수 있습니다. 이러한 반복자는 구성시 정확히 한 번 존재 했으므로 요소를 순회하도록 보장되며 구성 이후의 모든 수정 사항을 반영 할 수 있습니다 (보장되지는 않음).</target>
        </trans-unit>
        <trans-unit id="2da37306b969710494d91cdeb111735b4bbcce4b" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#listIterator(int)&quot;&gt;&lt;code&gt;listIterator&lt;/code&gt;&lt;/a&gt; methods are &lt;em&gt;fail-fast&lt;/em&gt;: if the list is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;a href=&quot;listiterator#remove()&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;listiterator#add(E)&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt; methods, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</source>
          <target state="translated">이 클래스의 &lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#listIterator(int)&quot;&gt; &lt;code&gt;listIterator&lt;/code&gt; &lt;/a&gt; 메서드에 의해 반환되는 반복기 는 &lt;em&gt;실패 속도가 빠릅니다&lt;/em&gt; . 반복자가 생성 된 후 언제든지 목록이 구조적으로 수정되면 반복기의 자체 &lt;a href=&quot;listiterator#remove()&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;listiterator#add(E)&quot;&gt; &lt;code&gt;add&lt;/code&gt; &lt;/a&gt; 메서드를 통하지 않는 한 반복기 가 &lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt; 을 throw합니다 . 따라서 동시 수정에 직면하여 반복자는 미래에 결정되지 않은 시간에 임의의 비 결정적 동작을 위험에 빠뜨리지 않고 빠르고 깔끔하게 실패합니다.</target>
        </trans-unit>
        <trans-unit id="82961df45650161b22b12c350ab2fc92ce76e188" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#listIterator(int)&quot;&gt;&lt;code&gt;listIterator&lt;/code&gt;&lt;/a&gt; methods are &lt;em&gt;fail-fast&lt;/em&gt;: if the vector is structurally modified at any time after the iterator is created, in any way except through the iterator's own &lt;a href=&quot;listiterator#remove()&quot;&gt;&lt;code&gt;remove&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;listiterator#add(E)&quot;&gt;&lt;code&gt;add&lt;/code&gt;&lt;/a&gt; methods, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future. The &lt;a href=&quot;enumeration&quot;&gt;&lt;code&gt;Enumerations&lt;/code&gt;&lt;/a&gt; returned by the &lt;a href=&quot;#elements()&quot;&gt;&lt;code&gt;elements&lt;/code&gt;&lt;/a&gt; method are &lt;em&gt;not&lt;/em&gt; fail-fast; if the Vector is structurally modified at any time after the enumeration is created then the results of enumerating are undefined.</source>
          <target state="translated">이 클래스의 &lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#listIterator(int)&quot;&gt; &lt;code&gt;listIterator&lt;/code&gt; &lt;/a&gt; 메서드에 의해 반환되는 반복기 는 &lt;em&gt;실패 속도가 빠릅니다&lt;/em&gt; . 반복자가 생성 된 후 언제든지 벡터가 구조적으로 수정되면 반복기의 자체 &lt;a href=&quot;listiterator#remove()&quot;&gt; &lt;code&gt;remove&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;listiterator#add(E)&quot;&gt; &lt;code&gt;add&lt;/code&gt; &lt;/a&gt; 메서드를 통하는 경우를 제외하고 반복기가 &lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; &lt;/a&gt; 을 throw합니다 . 따라서 동시 수정에 직면하여 반복자는 미래에 결정되지 않은 시간에 임의의 비 결정적 동작을 위험에 빠뜨리지 않고 빠르고 깔끔하게 실패합니다. &lt;a href=&quot;enumeration&quot;&gt; &lt;code&gt;Enumerations&lt;/code&gt; &lt;/a&gt; 의해 리턴 &lt;a href=&quot;#elements()&quot;&gt; &lt;code&gt;elements&lt;/code&gt; &lt;/a&gt; 방법은 &lt;em&gt;없다&lt;/em&gt;빠른 실패; 열거가 생성 된 후 언제든지 Vector가 구조적으로 수정되면 열거 결과가 정의되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="274376d37e7301e7cea9ebed5591dc1ce0b96e4e" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;a href=&quot;#iterator()&quot;&gt;&lt;code&gt;iterator&lt;/code&gt;&lt;/a&gt; method are &lt;em&gt;fail-fast&lt;/em&gt;: If the deque is modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will generally throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</source>
          <target state="translated">이 클래스의 &lt;a href=&quot;#iterator()&quot;&gt; &lt;code&gt;iterator&lt;/code&gt; &lt;/a&gt; 메서드에 의해 반환되는 반복기 는 &lt;em&gt;실패 속도가 빠릅니다&lt;/em&gt; . 반복기가 생성 된 후 언제든지 deque가 수정되면 반복기의 자체 &lt;code&gt;remove&lt;/code&gt; 메서드를 통하지 않는 한 반복기가 일반적으로 &lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 을&lt;/a&gt; throw합니다 . 따라서 동시 수정에 직면하여 반복자는 미래에 결정되지 않은 시간에 임의의 비 결정적 동작을 위험에 빠뜨리지 않고 빠르고 깔끔하게 실패합니다.</target>
        </trans-unit>
        <trans-unit id="8c30ea8ce4044e97226c1fcafa002e966fc4f237" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;code&gt;iterator&lt;/code&gt; and &lt;code&gt;listIterator&lt;/code&gt; methods are</source>
          <target state="translated">이 클래스의 &lt;code&gt;iterator&lt;/code&gt; 와 &lt;code&gt;listIterator&lt;/code&gt; 메소드에 의해 리턴 된 반복자는 다음 과 같습니다.</target>
        </trans-unit>
        <trans-unit id="9b599f5e9e9a7e23378ba3619eaae05e0afe1eb2" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;code&gt;iterator&lt;/code&gt; method are</source>
          <target state="translated">이 클래스의 &lt;code&gt;iterator&lt;/code&gt; 메소드에 의해 리턴 된 반복자 는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="2e2ec0ba428f721ed670c5e29b21fdd61f4f2917" translate="yes" xml:space="preserve">
          <source>The iterators returned by this class's &lt;code&gt;iterator&lt;/code&gt; method are &lt;em&gt;fail-fast&lt;/em&gt;: if the set is modified at any time after the iterator is created, in any way except through the iterator's own &lt;code&gt;remove&lt;/code&gt; method, the iterator will throw a &lt;a href=&quot;concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt;. Thus, in the face of concurrent modification, the iterator fails quickly and cleanly, rather than risking arbitrary, non-deterministic behavior at an undetermined time in the future.</source>
          <target state="translated">이 클래스의 &lt;code&gt;iterator&lt;/code&gt; 메소드에 의해 리턴 된 반복자 는 다음과 같습니다.&lt;em&gt; 실패가 빠릅니다&lt;/em&gt; . 이터레이터가 작성된 후 언제라도 세트가 수정되면 (자신의 반복자 자신의 &lt;code&gt;remove&lt;/code&gt; 메소드를 제외하고 ), 이터레이터는 &lt;a href=&quot;concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 을 발생&lt;/a&gt; 시킵니다. 따라서 동시 수정에 직면하여 반복자는 미래에 결정되지 않은 시간에 임의의 비 결정적 동작을 위험에 빠뜨리기보다는 신속하고 깨끗하게 실패합니다.</target>
        </trans-unit>
        <trans-unit id="283d7498c0d3b7b909b279a49824d5148b7ab7bf" translate="yes" xml:space="preserve">
          <source>The java.awt.Robot object allows code to generate native-level mouse and keyboard events as well as read the screen. It could allow malicious code to control the system, run other programs, read the display, and deny mouse and keyboard access to the user.</source>
          <target state="translated">java.awt.Robot 객체를 사용하면 코드에서 기본 수준의 마우스 및 키보드 이벤트를 생성하고 화면을 읽을 수 있습니다. 악성 코드가 시스템을 제어하고, 다른 프로그램을 실행하고, 디스플레이를 읽고, 사용자에 대한 마우스 및 키보드 액세스를 거부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7057c3b7f819f2cd324cffa3c20a81381e435781" translate="yes" xml:space="preserve">
          <source>The java.lang.management API is thread-safe.</source>
          <target state="translated">java.lang.management API는 스레드로부터 안전합니다.</target>
        </trans-unit>
        <trans-unit id="e7c83bed6a4c21ec225e1e00cad4e5dd333ca4f4" translate="yes" xml:space="preserve">
          <source>The java.net package can be roughly divided in two sections:</source>
          <target state="translated">java.net 패키지는 크게 두 섹션으로 나눌 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e7c2bad11a3cf57b9ee11fb20fc537e2355f9273" translate="yes" xml:space="preserve">
          <source>The java.nio.file package defines classes to access files and file systems. The API to access file and file system attributes is defined in the &lt;a href=&quot;attribute/package-summary&quot;&gt;&lt;code&gt;java.nio.file.attribute&lt;/code&gt;&lt;/a&gt; package. The &lt;a href=&quot;spi/package-summary&quot;&gt;&lt;code&gt;java.nio.file.spi&lt;/code&gt;&lt;/a&gt; package is used by service provider implementors wishing to extend the platform default provider, or to construct other provider implementations.</source>
          <target state="translated">java.nio.file 패키지는 파일 및 파일 시스템에 액세스하기위한 클래스를 정의합니다. 파일 및 파일 시스템 속성에 액세스하기위한 API는 &lt;a href=&quot;attribute/package-summary&quot;&gt; &lt;code&gt;java.nio.file.attribute&lt;/code&gt; 에&lt;/a&gt; 정의되어 있습니다. 패키지에 있습니다. &lt;a href=&quot;spi/package-summary&quot;&gt; &lt;code&gt;java.nio.file.spi&lt;/code&gt; 의&lt;/a&gt; 패키지는 플랫폼의 디폴트의 프로 바이더를 확장하기 위해, 또는 다른 프로 바이더 구현을 구축하고자하는 서비스 제공 업체 구현하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="a63bd7fc516a14802ec93497b3d1badada24a9f6" translate="yes" xml:space="preserve">
          <source>The javac plug-in mechanism allows a user to specify one or more plug-ins on the javac command line, to be started soon after the compilation has begun. Plug-ins are identified by a user-friendly name. Each plug-in that is started will be passed an array of strings, which may be used to provide the plug-in with values for any desired options or other arguments.</source>
          <target state="translated">javac 플러그인 메커니즘을 사용하면 컴파일이 시작된 직후에 시작될 javac 명령 줄에서 하나 이상의 플러그인을 지정할 수 있습니다. 플러그인은 사용자에게 친숙한 이름으로 식별됩니다. 시작된 각 플러그인은 원하는 옵션 또는 기타 인수에 대한 값을 플러그인에 제공하는 데 사용할 수있는 문자열 배열로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="483a7643805d6b96505b26053cb80d495ba54051" translate="yes" xml:space="preserve">
          <source>The javadoc of the given element.</source>
          <target state="translated">주어진 요소의 javadoc.</target>
        </trans-unit>
        <trans-unit id="99d0b7979f480d0de703c57bc073a94c2aeed640" translate="yes" xml:space="preserve">
          <source>The javax.print.attribute package includes &lt;a href=&quot;hashattributeset&quot;&gt;HashAttributeSet&lt;/a&gt; as a concrete implementation of the attribute set interface. &lt;code&gt;HashAttributeSet&lt;/code&gt; provides an attribute set based on a hash map. You can use this implementation or provide your own implementation of interface &lt;code&gt;AttributeSet&lt;/code&gt;.</source>
          <target state="translated">javax.print.attribute 패키지에는 &lt;a href=&quot;hashattributeset&quot;&gt;HashAttributeSet&lt;/a&gt; 가 속성 세트 인터페이스의 구체적 구현으로 포함 되어 있습니다. &lt;code&gt;HashAttributeSet&lt;/code&gt; 은 해시 맵을 기반으로 속성 세트를 제공합니다. 이 구현을 사용하거나 고유 한 &lt;code&gt;AttributeSet&lt;/code&gt; 인터페이스 구현을 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1678718fb51e8a372345b9b0dfb2993996ca9d85" translate="yes" xml:space="preserve">
          <source>The jaxp.properties file is read only once by the JAXP implementation and its values are then cached for future use. If the file does not exist when the first attempt is made to read from it, no further attempts are made to check for its existence. It is not possible to change the value of any property in jaxp.properties after it has been read for the first time.</source>
          <target state="translated">jaxp.properties 파일은 JAXP 구현에 의해 한 번만 읽히고 그 값은 나중에 사용하기 위해 캐시됩니다. 파일을 처음 읽으려고 할 때 파일이 존재하지 않으면 그 존재를 확인하기 위해 더 이상 시도하지 않습니다. jaxp.properties의 특성 값을 처음 읽은 후에는 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="6c521e858ecd4ab6e95f87508838395e8e62c1d9" translate="yes" xml:space="preserve">
          <source>The job completed successfully.</source>
          <target state="translated">작업이 성공적으로 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="0b636fb4d8f71bf41576b4222e32f43072da2d49" translate="yes" xml:space="preserve">
          <source>The job completed successfully. This value should be supported.</source>
          <target state="translated">작업이 성공적으로 완료되었습니다. 이 값이 지원되어야합니다.</target>
        </trans-unit>
        <trans-unit id="8155a352638c0e35699f4e18930a5f89bca7e15c" translate="yes" xml:space="preserve">
          <source>The job completed with errors (and possibly warnings too).</source>
          <target state="translated">작업이 완료되었지만 오류 (및 경고도있을 수 있음)가 있습니다.</target>
        </trans-unit>
        <trans-unit id="0fd4acc47470905777d0757b6122b704c219c78d" translate="yes" xml:space="preserve">
          <source>The job completed with errors (and possibly warnings too). This value should be supported if the implementation detects errors.</source>
          <target state="translated">작업이 오류로 완료되었습니다 (경고도 가능). 구현이 오류를 감지하면이 값이 지원되어야합니다.</target>
        </trans-unit>
        <trans-unit id="3a3c2a022a57f1b5ea9853cd04a785a252013a06" translate="yes" xml:space="preserve">
          <source>The job completed with warnings.</source>
          <target state="translated">작업이 경고와 함께 완료되었습니다.</target>
        </trans-unit>
        <trans-unit id="8272d85dfb27f8fd7635d41c55d941a998fa4421" translate="yes" xml:space="preserve">
          <source>The job completed with warnings. This value should be supported if the implementation detects warnings.</source>
          <target state="translated">작업이 경고와 함께 완료되었습니다. 구현이 경고를 감지하면이 값이 지원되어야합니다.</target>
        </trans-unit>
        <trans-unit id="ac82b7846af137164072bad73d3b370dc566c461" translate="yes" xml:space="preserve">
          <source>The job has been aborted by the system (usually while the job was in the &lt;code&gt;PROCESSING&lt;/code&gt; or &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; state), the printer has completed aborting the job, and all job status attributes have reached their final values for the job.</source>
          <target state="translated">작업이 시스템에 의해 중단되고 (일반적으로 작업이 &lt;code&gt;PROCESSING&lt;/code&gt; 또는 &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; 상태 에있는 동안 ) 프린터가 작업 중단을 완료했으며 모든 작업 상태 속성이 작업의 최종 값에 도달했습니다.</target>
        </trans-unit>
        <trans-unit id="3fa0a38dd507499cc814820dacf2ad92d0a08deb" translate="yes" xml:space="preserve">
          <source>The job has been aborted by the system (usually while the job was in the &lt;code&gt;PROCESSING&lt;/code&gt; or &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; state), the printer has completed aborting the job, and all job status attributes have reached their final values for the job. While the printer is aborting the job, the job remains in its current state, but the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain the &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; and &lt;code&gt;ABORTED_BY_SYSTEM&lt;/code&gt; values. When the job moves to the &lt;code&gt;ABORTED&lt;/code&gt; state, the &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; value, if present, must be removed, but the &lt;code&gt;ABORTED_BY_SYSTEM&lt;/code&gt; value, if present, must remain.</source>
          <target state="translated">작업이 시스템에 의해 중단되고 (일반적으로 작업이 &lt;code&gt;PROCESSING&lt;/code&gt; 또는 &lt;code&gt;PROCESSING_STOPPED&lt;/code&gt; 상태 에있는 동안 ) 프린터가 작업 중단을 완료했으며 모든 작업 상태 속성이 작업의 최종 값에 도달했습니다. 프린터가 작업을 중단하는 동안 작업은 현재 상태로 유지되지만 작업의 &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt; 속성에는 &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; 및 &lt;code&gt;ABORTED_BY_SYSTEM&lt;/code&gt; 값 이 포함되어야합니다 . 작업이 &lt;code&gt;ABORTED&lt;/code&gt; 상태로 이동 하면 &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; 값 (있는 경우)은 제거해야하지만 &lt;code&gt;ABORTED_BY_SYSTEM&lt;/code&gt; 값 (있는 경우)은 유지해야합니다.</target>
        </trans-unit>
        <trans-unit id="1318a856b10c21c5a8306845084662ae891af882" translate="yes" xml:space="preserve">
          <source>The job has been aborted by the system (usually while the job was in the PROCESSING or PROCESSING_STOPPED state), the printer has completed aborting the job, and all job status attributes have reached their final values for the job. While the printer is aborting the job, the job remains in its current state, but the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain the PROCESSING_TO_STOP_POINT and ABORTED_BY_SYSTEM values. When the job moves to the ABORTED state, the PROCESSING_TO_STOP_POINT value, if present, must be removed, but the ABORTED_BY_SYSTEM value, if present, must remain.</source>
          <target state="translated">시스템이 작업을 중단했습니다 (일반적으로 작업이 PROCESSING 또는 PROCESSING_STOPPED 상태 인 동안). 프린터가 작업 중단을 완료했으며 모든 작업 상태 속성이 작업의 최종 값에 도달했습니다. 프린터가 작업을 중단하는 동안 작업은 현재 상태로 유지되지만 작업의 &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt; 속성에는 PROCESSING_TO_STOP_POINT 및 ABORTED_BY_SYSTEM 값이 포함되어야합니다. 작업이 ABORTED 상태로 이동하면 PROCESSING_TO_STOP_POINT 값 (있는 경우)을 제거해야하지만 ABORTED_BY_SYSTEM 값 (있는 경우)은 남아 있어야합니다.</target>
        </trans-unit>
        <trans-unit id="8826a5e766a81a6295f135841ab968154d7bfc03" translate="yes" xml:space="preserve">
          <source>The job has been canceled by some human agency, the printer has completed canceling the job, and all job status attributes have reached their final values for the job.</source>
          <target state="translated">작업이 일부 인간 기관에 의해 취소되었으며 프린터가 작업 취소를 완료했으며 모든 작업 상태 속성이 작업에 대한 최종 값에 도달했습니다.</target>
        </trans-unit>
        <trans-unit id="30faefcc51f8781c70e62a210124c825ec9c7178" translate="yes" xml:space="preserve">
          <source>The job has been canceled by some human agency, the printer has completed canceling the job, and all job status attributes have reached their final values for the job. While the printer is canceling the job, the job remains in its current state, but the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain the &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; value and one of the &lt;code&gt;CANCELED_BY_USER&lt;/code&gt;, &lt;code&gt;CANCELED_BY_OPERATOR&lt;/code&gt;, or &lt;code&gt;CANCELED_AT_DEVICE&lt;/code&gt; values. When the job moves to the &lt;code&gt;CANCELED&lt;/code&gt; state, the &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; value, if present, must be removed, but the CANCELED_BY_</source>
          <target state="translated">작업이 일부 인간 기관에 의해 취소되었으며 프린터가 작업 취소를 완료했으며 모든 작업 상태 속성이 작업에 대한 최종 값에 도달했습니다. 프린터가 작업을 취소하는 동안 작업은 현재 상태로 유지되지만 작업의 &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt; 속성에는 &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; 값과 &lt;code&gt;CANCELED_BY_USER&lt;/code&gt; , &lt;code&gt;CANCELED_BY_OPERATOR&lt;/code&gt; 또는 &lt;code&gt;CANCELED_AT_DEVICE&lt;/code&gt; 값 중 하나 가 포함되어야합니다 . 작업이 &lt;code&gt;CANCELED&lt;/code&gt; 상태로 이동 하면 &lt;code&gt;PROCESSING_TO_STOP_POINT&lt;/code&gt; 값 (있는 경우)을 제거해야하지만 CANCELED_BY_</target>
        </trans-unit>
        <trans-unit id="4332eeb1d3703dff2185e0b2a548dc30deab2693" translate="yes" xml:space="preserve">
          <source>The job has been canceled by some human agency, the printer has completed canceling the job, and all job status attributes have reached their final values for the job. While the printer is canceling the job, the job remains in its current state, but the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain the PROCESSING_TO_STOP_POINT value and one of the CANCELED_BY_USER, CANCELED_BY_OPERATOR, or CANCELED_AT_DEVICE values. When the job moves to the CANCELED state, the PROCESSING_TO_STOP_POINT value, if present, must be removed, but the CANCELED_BY_</source>
          <target state="translated">일부 휴먼 에이전시가 작업을 취소했으며 프린터가 작업 취소를 완료했으며 모든 작업 상태 속성이 작업의 최종 값에 도달했습니다. 프린터가 작업을 취소하는 동안 작업은 현재 상태로 유지되지만 작업의 &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt; 속성에는 PROCESSING_TO_STOP_POINT 값과 CANCELED_BY_USER, CANCELED_BY_OPERATOR 또는 CANCELED_AT_DEVICE 값 중 하나가 포함되어야합니다. 작업이 CANCELED 상태로 이동하면 PROCESSING_TO_STOP_POINT 값 (있는 경우)을 제거해야하지만 CANCELED_BY_</target>
        </trans-unit>
        <trans-unit id="ce2a00888b20866cd4ea217f4a48f5d8196ce648" translate="yes" xml:space="preserve">
          <source>The job has been forwarded to a device or print system that is unable to send back status.</source>
          <target state="translated">작업이 상태를 되돌릴 수없는 장치 또는 인쇄 시스템으로 전달되었습니다.</target>
        </trans-unit>
        <trans-unit id="513bf67deaad4fb47c4e06f335d75d6db09fb79a" translate="yes" xml:space="preserve">
          <source>The job has been forwarded to a device or print system that is unable to send back status. The printer sets the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; attribute to &lt;code&gt;COMPLETED&lt;/code&gt; and adds the &lt;code&gt;QUEUED_IN_DEVICE&lt;/code&gt; reason to the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute to indicate that the printer has no additional information about the job and never will have any better information.</source>
          <target state="translated">작업이 상태를 되돌릴 수없는 장치 또는 인쇄 시스템으로 전달되었습니다. 프린터는 작업의 설정 &lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; 가의&lt;/a&gt; 에 속성을 &lt;code&gt;COMPLETED&lt;/code&gt; 하고 추가 &lt;code&gt;QUEUED_IN_DEVICE&lt;/code&gt; 의 작업의에 이유 &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; 속성은&lt;/a&gt; 더 좋은 정보가있을 것이다 결코 프린터가 작업에 대한 추가 정보가없는 것을 나타 내기 위해서 속성없고.</target>
        </trans-unit>
        <trans-unit id="a653104c3b056ccc18c59053c73e2cb5305a3165" translate="yes" xml:space="preserve">
          <source>The job has been forwarded to a device or print system that is unable to send back status. The printer sets the job's &lt;a href=&quot;jobstate&quot;&gt;&lt;code&gt;JobState&lt;/code&gt;&lt;/a&gt; attribute to COMPLETED and adds the QUEUED_IN_DEVICE reason to the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute to indicate that the printer has no additional information about the job and never will have any better information.</source>
          <target state="translated">상태를 되돌릴 수없는 장치 또는 인쇄 시스템으로 작업이 전달되었습니다. 프린터는 작업의 &lt;a href=&quot;jobstate&quot;&gt; &lt;code&gt;JobState&lt;/code&gt; &lt;/a&gt; 속성을 COMPLETED로 설정하고 QUEUED_IN_DEVICE 이유를 작업의 &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; 에&lt;/a&gt; 추가합니다. 속성에 추가하여 프린터에 해당 작업에 대한 추가 정보가없고 더 나은 정보가 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="33f7a56a3010a619ba3c9f828da9dd6b5acbab28" translate="yes" xml:space="preserve">
          <source>The job has completed successfully or with warnings or errors after processing, all of the job media sheets have been successfully stacked in the appropriate output bin(s), and all job status attributes have reached their final values for the job.</source>
          <target state="translated">작업이 성공적으로 완료되었거나 처리 후 경고 또는 오류와 함께 모든 작업 미디어 시트가 적절한 출력 용지함에 성공적으로 적재되었으며 모든 작업 상태 속성이 작업에 대한 최종 값에 도달했습니다.</target>
        </trans-unit>
        <trans-unit id="7e0a7f6df9f0ca0950e5594598134f9b5ed8a210" translate="yes" xml:space="preserve">
          <source>The job has completed successfully or with warnings or errors after processing, all of the job media sheets have been successfully stacked in the appropriate output bin(s), and all job status attributes have reached their final values for the job. The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain one of these values: &lt;code&gt;COMPLETED_SUCCESSFULLY&lt;/code&gt;, &lt;code&gt;COMPLETED_WITH_WARNINGS&lt;/code&gt;, or &lt;code&gt;COMPLETED_WITH_ERRORS&lt;/code&gt;.</source>
          <target state="translated">작업이 성공적으로 완료되었거나 처리 후 경고 또는 오류와 함께 모든 작업 미디어 시트가 적절한 출력 용지함에 성공적으로 적재되었으며 모든 작업 상태 속성이 작업에 대한 최종 값에 도달했습니다. 작업의 &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt; 속성에는 &lt;code&gt;COMPLETED_SUCCESSFULLY&lt;/code&gt; , &lt;code&gt;COMPLETED_WITH_WARNINGS&lt;/code&gt; 또는 &lt;code&gt;COMPLETED_WITH_ERRORS&lt;/code&gt; 값 중 하나가 포함되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="266c985b90e5a872533d16a586b8f9e841a46189" translate="yes" xml:space="preserve">
          <source>The job has completed successfully or with warnings or errors after processing, all of the job media sheets have been successfully stacked in the appropriate output bin(s), and all job status attributes have reached their final values for the job. The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute should contain one of these values: COMPLETED_SUCCESSFULLY, COMPLETED_WITH_WARNINGS, or COMPLETED_WITH_ERRORS.</source>
          <target state="translated">작업이 완료된 후 또는 처리 후 경고 또는 오류와 함께 완료되었으며 모든 작업 매체 시트가 해당 출력 용지함에 성공적으로 쌓였으며 모든 작업 상태 속성이 작업의 최종 값에 도달했습니다. 작업의 &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt; 속성은 COMPLETED_SUCCESSFULLY, COMPLETED_WITH_WARNINGS 또는 COMPLETED_WITH_ERRORS 값 중 하나를 포함해야합니다.</target>
        </trans-unit>
        <trans-unit id="6c2e880de00e68d2f8400fd2197b6700463297eb" translate="yes" xml:space="preserve">
          <source>The job has stopped while processing for any number of reasons and will return to the &lt;code&gt;PROCESSING&lt;/code&gt; state as soon as the reasons are no longer present.</source>
          <target state="translated">여러 이유로 처리하는 동안 작업이 중지 되었으며 그 이유가 더 이상 존재하지 않는 즉시 &lt;code&gt;PROCESSING&lt;/code&gt; 상태로 돌아갑니다 .</target>
        </trans-unit>
        <trans-unit id="8d9059818004d12f90da07d03f90fef85b39741b" translate="yes" xml:space="preserve">
          <source>The job has stopped while processing for any number of reasons and will return to the PROCESSING state as soon as the reasons are no longer present.</source>
          <target state="translated">여러 가지 이유로 처리하는 동안 작업이 중지되었으며 이유가 더 이상 존재하지 않는 즉시 처리 중 상태로 돌아갑니다.</target>
        </trans-unit>
        <trans-unit id="675475d1527f18e49351cb37e1cfcf5fde5e8631" translate="yes" xml:space="preserve">
          <source>The job is a candidate to start processing, but is not yet processing.</source>
          <target state="translated">작업이 처리를 시작할 후보이지만 아직 처리되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="bb62af76ec98818871166d0863a023e576d42b3b" translate="yes" xml:space="preserve">
          <source>The job is in the &lt;code&gt;PENDING_HELD&lt;/code&gt;, &lt;code&gt;PENDING&lt;/code&gt;, or &lt;code&gt;PROCESSING&lt;/code&gt; state, but more specifically, the printer has completed enough processing of the document to be able to start marking and the job is waiting for the marker.</source>
          <target state="translated">작업이 &lt;code&gt;PENDING_HELD&lt;/code&gt; , &lt;code&gt;PENDING&lt;/code&gt; 또는 &lt;code&gt;PROCESSING&lt;/code&gt; 상태이지만보다 구체적으로 프린터가 마킹을 시작할 수있을만큼 문서 처리를 완료했으며 작업이 마커를 기다리고 있습니다.</target>
        </trans-unit>
        <trans-unit id="33c9dfb835982ae57e76b90a418374af74a82b16" translate="yes" xml:space="preserve">
          <source>The job is in the &lt;code&gt;PENDING_HELD&lt;/code&gt;, &lt;code&gt;PENDING&lt;/code&gt;, or &lt;code&gt;PROCESSING&lt;/code&gt; state, but more specifically, the printer has completed enough processing of the document to be able to start marking and the job is waiting for the marker. Systems that require human intervention to release jobs put the job into the &lt;code&gt;PENDING_HELD&lt;/code&gt; job state. Systems that automatically select a job to use the marker put the job into the &lt;code&gt;PENDING&lt;/code&gt; job state or keep the job in the &lt;code&gt;PROCESSING&lt;/code&gt; job state while waiting for the marker, depending on implementation. All implementations put the job into (or back into) the &lt;code&gt;PROCESSING&lt;/code&gt; state when marking does begin.</source>
          <target state="translated">작업이 &lt;code&gt;PENDING_HELD&lt;/code&gt; , &lt;code&gt;PENDING&lt;/code&gt; 또는 &lt;code&gt;PROCESSING&lt;/code&gt; 상태이지만보다 구체적으로 프린터가 마킹을 시작할 수있을만큼 문서 처리를 완료했으며 작업이 마커를 기다리고 있습니다. 작업을 해제하기 위해 사람의 개입이 필요한 시스템은 작업을 &lt;code&gt;PENDING_HELD&lt;/code&gt; 작업 상태로 만듭니다. 마커를 사용하기 위해 작업을 자동으로 선택하는 시스템은 구현에 따라 작업을 &lt;code&gt;PENDING&lt;/code&gt; 작업 상태로 설정하거나 마커를 기다리는 동안 작업을 &lt;code&gt;PROCESSING&lt;/code&gt; 작업 상태로 유지합니다 . 모든 구현은 마킹이 시작될 때 작업을 &lt;code&gt;PROCESSING&lt;/code&gt; 상태 로 (또는 다시) 처리 합니다.</target>
        </trans-unit>
        <trans-unit id="61c006330a7170bc7b7bc855d3dbbdd28d9639bf" translate="yes" xml:space="preserve">
          <source>The job is in the &lt;code&gt;PROCESSING&lt;/code&gt; state, but more specifically, the printer has queued the document data.</source>
          <target state="translated">작업이 &lt;code&gt;PROCESSING&lt;/code&gt; 상태이지만 더 구체적으로 프린터가 문서 데이터를 대기열에 넣었습니다.</target>
        </trans-unit>
        <trans-unit id="22a79027329f135f999662a310e8f2acaf5c42d9" translate="yes" xml:space="preserve">
          <source>The job is in the &lt;code&gt;PROCESSING&lt;/code&gt; state, but more specifically, the printer ia interpreting the document data.</source>
          <target state="translated">작업이 &lt;code&gt;PROCESSING&lt;/code&gt; 상태이지만보다 구체적으로 프린터가 문서 데이터를 해석합니다.</target>
        </trans-unit>
        <trans-unit id="5abeac9ba8d8defe01ad50de60caa73052a69a7d" translate="yes" xml:space="preserve">
          <source>The job is in the &lt;code&gt;PROCESSING&lt;/code&gt; state, but more specifically, the printer is interpreting document data and producing another electronic representation.</source>
          <target state="translated">작업이 &lt;code&gt;PROCESSING&lt;/code&gt; 상태이지만보다 구체적으로 프린터가 문서 데이터를 해석하고 다른 전자적 표현을 생성하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="94fbbfda8878e9c8767ac15a0f96595971bbe119" translate="yes" xml:space="preserve">
          <source>The job is in the PENDING_HELD, PENDING, or PROCESSING state, but more specifically, the printer has completed enough processing of the document to be able to start marking and the job is waiting for the marker. Systems that require human intervention to release jobs put the job into the PENDING_HELD job state. Systems that automatically select a job to use the marker put the job into the PENDING job state or keep the job in the PROCESSING job state while waiting for the marker, depending on implementation. All implementations put the job into (or back into) the PROCESSING state when marking does begin.</source>
          <target state="translated">작업이 PENDING_HELD, PENDING 또는 PROCESSING 상태에 있지만,보다 구체적으로, 프린터가 문서 처리를 완료하여 표시를 시작할 수 있고 작업이 마커를 기다리고 있습니다. 작업을 해제하기 위해 사람의 개입이 필요한 시스템은 작업을 PENDING_HELD 작업 상태로 만듭니다. 마커를 사용할 작업을 자동으로 선택하는 시스템은 구현에 따라 마커를 기다리는 동안 작업을 보류중인 작업 상태로 유지하거나 작업을 처리 중 작업 상태로 유지합니다. 모든 구현은 표시가 시작될 때 작업을 처리 중 상태로 (또는 다시) 처리 상태로 전환합니다.</target>
        </trans-unit>
        <trans-unit id="440add9f3c70b123e291ba209d9d13c202aebf8a" translate="yes" xml:space="preserve">
          <source>The job is in the PROCESSING state, but more specifically, the printer has queued the document data.</source>
          <target state="translated">작업이 처리 중 상태에 있지만보다 구체적으로 프린터가 문서 데이터를 대기했습니다.</target>
        </trans-unit>
        <trans-unit id="6550860dc3bbe7f26a73280ffe7ded2c79054235" translate="yes" xml:space="preserve">
          <source>The job is in the PROCESSING state, but more specifically, the printer ia interpreting the document data.</source>
          <target state="translated">작업이 처리 중 상태에 있지만보다 구체적으로 프린터는 문서 데이터를 해석합니다.</target>
        </trans-unit>
        <trans-unit id="50339846786a673ce932982a8475461929680e1d" translate="yes" xml:space="preserve">
          <source>The job is in the PROCESSING state, but more specifically, the printer is interpreting document data and producing another electronic representation.</source>
          <target state="translated">작업이 처리 중 상태에 있지만보다 구체적으로 프린터는 문서 데이터를 해석하고 다른 전자 표현을 생성합니다.</target>
        </trans-unit>
        <trans-unit id="6a7ceaa57ea80e7bb8771c4a3056dcbe66797d94" translate="yes" xml:space="preserve">
          <source>The job is not a candidate for processing for any number of reasons but will return to the &lt;code&gt;PENDING&lt;/code&gt; state as soon as the reasons are no longer present.</source>
          <target state="translated">작업은 여러 가지 이유로 처리 대상이 아니지만 이유가 더 이상 존재하지 않는 즉시 &lt;code&gt;PENDING&lt;/code&gt; 상태로 돌아갑니다 .</target>
        </trans-unit>
        <trans-unit id="075f3a0a6331f37be1d4ffb1de347f1fc0d64ba7" translate="yes" xml:space="preserve">
          <source>The job is not a candidate for processing for any number of reasons but will return to the &lt;code&gt;PENDING&lt;/code&gt; state as soon as the reasons are no longer present. The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute must indicate why the job is no longer a candidate for processing.</source>
          <target state="translated">작업은 여러 가지 이유로 처리 대상이 아니지만 이유가 더 이상 존재하지 않는 즉시 &lt;code&gt;PENDING&lt;/code&gt; 상태로 돌아갑니다 . 작업의 &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt; 속성은 작업이 더 이상 처리 대상이 아닌 이유를 나타내야합니다.</target>
        </trans-unit>
        <trans-unit id="7c883467e1f58bb632ab1fe6de3c39731be7c1e7" translate="yes" xml:space="preserve">
          <source>The job is not a candidate for processing for any number of reasons but will return to the PENDING state as soon as the reasons are no longer present. The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute must indicate why the job is no longer a candidate for processing.</source>
          <target state="translated">작업은 여러 가지 이유로 처리 대상이 아니지만 더 이상 존재하지 않는 즉시 보류 중 상태로 돌아갑니다. 직업의 &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt; 속성은 작업이 더 이상 처리 후보가 아닌 이유를 나타내야합니다.</target>
        </trans-unit>
        <trans-unit id="bebfca1ea3866b4e064346584b98ffdd7a9baba5" translate="yes" xml:space="preserve">
          <source>The job is not necessarily printed yet, but the data has been transferred successfully from the client to the print service.</source>
          <target state="translated">작업이 아직 인쇄 될 필요는 없지만 데이터가 클라이언트에서 인쇄 서비스로 성공적으로 전송되었습니다.</target>
        </trans-unit>
        <trans-unit id="c50316af496d257de7881101a659e9cde7e0ec16" translate="yes" xml:space="preserve">
          <source>The job is not necessarily printed yet, but the data has been transferred successfully from the client to the print service. The client may free data resources.</source>
          <target state="translated">작업이 아직 인쇄 될 필요는 없지만 데이터가 클라이언트에서 인쇄 서비스로 성공적으로 전송되었습니다. 클라이언트는 데이터 리소스를 비울 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2334f9c2afdad5f4d62f294b3a81fb71d3fae696" translate="yes" xml:space="preserve">
          <source>The job is processing.</source>
          <target state="translated">작업이 처리 중입니다.</target>
        </trans-unit>
        <trans-unit id="209216b743606ba4c7f7175fec73f11c99e87d88" translate="yes" xml:space="preserve">
          <source>The job is processing. One or more of the following activities is occurring:</source>
          <target state="translated">작업이 처리 중입니다. 다음 활동 중 하나 이상이 발생하고 있습니다.</target>
        </trans-unit>
        <trans-unit id="a6a0dd57e931629de301fcb48e865636ac06175c" translate="yes" xml:space="preserve">
          <source>The job is using, or is attempting to use, one or more hardware devices that are interpreting a PDL, making marks on a medium, and/or performing finishing, such as stapling, etc.</source>
          <target state="translated">작업이 PDL을 해석하고 매체에 표시를하거나 스테이플 링과 같은 마무리 작업을 수행하는 하나 이상의 하드웨어 장치를 사용 중이거나 사용하려고합니다.</target>
        </trans-unit>
        <trans-unit id="cbbe4328ec52eb0099830e578ba82c98df184ae4" translate="yes" xml:space="preserve">
          <source>The job is using, or is attempting to use, one or more purely software processes that are analyzing, creating, or interpreting a PDL, etc.</source>
          <target state="translated">작업이 PDL 등을 분석, 작성 또는 해석하는 하나 이상의 순전히 소프트웨어 프로세스를 사용 중이거나 사용하려고합니다.</target>
        </trans-unit>
        <trans-unit id="4f96406038b892668822c1209d18a7df1c7acab9" translate="yes" xml:space="preserve">
          <source>The job must be printed exactly as specified. or else rejected.</source>
          <target state="translated">작업은 지정된대로 정확하게 인쇄해야합니다. 그렇지 않으면 거부됩니다.</target>
        </trans-unit>
        <trans-unit id="c07c4ad8a99d51d5f9f9cf302dd2f36cdfc5a2e9" translate="yes" xml:space="preserve">
          <source>The job of honoring this property, and recognizing a user drag gesture, lies with the look and feel implementation, and in particular, the component's &lt;code&gt;TextUI&lt;/code&gt;. When automatic drag handling is enabled, most look and feels (including those that subclass &lt;code&gt;BasicLookAndFeel&lt;/code&gt;) begin a drag and drop operation whenever the user presses the mouse button over a selection and then moves the mouse a few pixels. Setting this property to &lt;code&gt;true&lt;/code&gt; can therefore have a subtle effect on how selections behave.</source>
          <target state="translated">이 속성을 존중하고 사용자 드래그 제스처를 인식하는 일은 룩앤필 구현, 특히 구성 요소의 &lt;code&gt;TextUI&lt;/code&gt; 에 있습니다. 자동 드래그 처리가 활성화되면 대부분의 룩앤필 ( &lt;code&gt;BasicLookAndFeel&lt;/code&gt; 하위 클래스 포함 )은 사용자가 선택 영역에서 마우스 버튼을 누른 다음 마우스를 몇 픽셀 움직일 때마다 드래그 앤 드롭 작업을 시작합니다. 따라서이 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정하면 선택이 작동하는 방식에 미묘한 영향을 미칠 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8263ec18c1bd0146e5254ea9fdfbabf1798d17c2" translate="yes" xml:space="preserve">
          <source>The job of honoring this property, and recognizing a user drag gesture, lies with the look and feel implementation, and in particular, the list's &lt;code&gt;ListUI&lt;/code&gt;. When automatic drag handling is enabled, most look and feels (including those that subclass &lt;code&gt;BasicLookAndFeel&lt;/code&gt;) begin a drag and drop operation whenever the user presses the mouse button over an item and then moves the mouse a few pixels. Setting this property to &lt;code&gt;true&lt;/code&gt; can therefore have a subtle effect on how selections behave.</source>
          <target state="translated">이 속성을 존중하고 사용자 드래그 제스처를 인식하는 작업은 룩앤필 구현, 특히 목록의 &lt;code&gt;ListUI&lt;/code&gt; 에 있습니다. 자동 드래그 처리가 활성화되면 대부분의 룩앤필 ( &lt;code&gt;BasicLookAndFeel&lt;/code&gt; 하위 클래스 포함 )은 사용자가 항목 위로 마우스 버튼을 누른 다음 마우스를 몇 픽셀 움직일 때마다 드래그 앤 드롭 작업을 시작합니다. 따라서이 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정하면 선택이 작동하는 방식에 미묘한 영향을 미칠 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="278ebdd7ed175d50dd30671af7a8707ab6ae0042" translate="yes" xml:space="preserve">
          <source>The job of honoring this property, and recognizing a user drag gesture, lies with the look and feel implementation, and in particular, the table's &lt;code&gt;TableUI&lt;/code&gt;. When automatic drag handling is enabled, most look and feels (including those that subclass &lt;code&gt;BasicLookAndFeel&lt;/code&gt;) begin a drag and drop operation whenever the user presses the mouse button over an item (in single selection mode) or a selection (in other selection modes) and then moves the mouse a few pixels. Setting this property to &lt;code&gt;true&lt;/code&gt; can therefore have a subtle effect on how selections behave.</source>
          <target state="translated">이 속성을 존중하고 사용자 드래그 제스처를 인식하는 작업은 룩앤필 구현, 특히 테이블의 &lt;code&gt;TableUI&lt;/code&gt; 에 있습니다. 자동 드래그 처리가 활성화되면 대부분의 룩앤필 ( &lt;code&gt;BasicLookAndFeel&lt;/code&gt; 하위 클래스 포함 )은 사용자가 항목 (단일 선택 모드에서) 또는 선택 (다른 선택 모드에서) 위에 마우스 버튼을 누를 때마다 드래그 앤 드롭 작업을 시작합니다. 그런 다음 마우스를 몇 픽셀 이동합니다. 따라서이 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정하면 선택이 작동하는 방식에 미묘한 영향을 미칠 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ef1391de24846ba8b9cad0ce6268ef0f51927a87" translate="yes" xml:space="preserve">
          <source>The job of honoring this property, and recognizing a user drag gesture, lies with the look and feel implementation, and in particular, the tree's &lt;code&gt;TreeUI&lt;/code&gt;. When automatic drag handling is enabled, most look and feels (including those that subclass &lt;code&gt;BasicLookAndFeel&lt;/code&gt;) begin a drag and drop operation whenever the user presses the mouse button over an item and then moves the mouse a few pixels. Setting this property to &lt;code&gt;true&lt;/code&gt; can therefore have a subtle effect on how selections behave.</source>
          <target state="translated">이 속성을 존중하고 사용자 드래그 제스처를 인식하는 작업은 룩앤필 구현, 특히 트리의 &lt;code&gt;TreeUI&lt;/code&gt; 에 있습니다. 자동 드래그 처리가 활성화되면 대부분의 룩앤필 ( &lt;code&gt;BasicLookAndFeel&lt;/code&gt; 하위 클래스 포함 )은 사용자가 항목 위로 마우스 버튼을 누른 다음 마우스를 몇 픽셀 움직일 때마다 드래그 앤 드롭 작업을 시작합니다. 따라서이 속성을 &lt;code&gt;true&lt;/code&gt; 로 설정하면 선택이 작동하는 방식에 미묘한 영향을 미칠 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cb8c62716a47758e70f54b73e39fca959c16d48b" translate="yes" xml:space="preserve">
          <source>The job state is unknown.</source>
          <target state="translated">작업 상태를 알 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="a228d2f87c5f4fb3cabf7a84903a5003c90b6606" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the document data's document format (doc flavor) is not among those supported by the printer.</source>
          <target state="translated">문서 데이터의 문서 형식 (doc flavor)이 프린터에서 지원하는 형식이 아니기 때문에 작업이 시스템에 의해 중단되었습니다.</target>
        </trans-unit>
        <trans-unit id="3af2aeb06b03ea668e154919c750fa9342e5cced" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the document data's document format (doc flavor) is not among those supported by the printer. If the client specifies a doc flavor with a MIME type of &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt;, the printer may abort the job if the printer cannot determine the document data's actual format through auto-sensing (even if the printer supports the document format if specified explicitly). This value must be supported, since a doc flavor is required to be specified for each doc.</source>
          <target state="translated">문서 데이터의 문서 형식 (doc 플레이버)이 프린터가 지원하는 형식이 아니기 때문에 시스템에서 작업이 중단되었습니다. 클라이언트가 MIME 유형의 &lt;code&gt;&quot;application/octet-stream&quot;&lt;/code&gt; 으로 문서 특징을 지정 하면 프린터가 자동 감지를 통해 문서 데이터의 실제 형식을 확인할 수없는 경우 프린터가 작업을 중단 할 수 있습니다 (프린터가 문서 형식을 지원하는 경우에도) 명시 적으로 지정). 각 doc마다 doc 플레이버를 지정해야하므로이 값을 지원해야합니다.</target>
        </trans-unit>
        <trans-unit id="abb2c035cbb322ddd0719e07d0d1f19562c87a2f" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer determined while attempting to decompress the document's data that the compression is actually not among those supported by the printer.</source>
          <target state="translated">프린터가 문서 데이터의 압축을 풀려고 시도하는 동안 실제로 압축이 프린터에서 지원하는 데이터가 아니라는 것을 확인했기 때문에 작업이 시스템에 의해 중단되었습니다.</target>
        </trans-unit>
        <trans-unit id="64678937e2569caf310fb1b6b932bfb85891b875" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer determined while attempting to decompress the document's data that the compression is actually not among those supported by the printer. This value must be supported, since &lt;a href=&quot;compression&quot;&gt;&lt;code&gt;Compression&lt;/code&gt;&lt;/a&gt; is a required doc description attribute.</source>
          <target state="translated">프린터가 문서 데이터를 압축 해제하려고 시도하는 동안 실제로 압축이 프린터에서 지원하는 데이터 중 하나가 아니라고 판별했기 때문에 시스템에서 작업이 중단되었습니다. &lt;a href=&quot;compression&quot;&gt; &lt;code&gt;Compression&lt;/code&gt; &lt;/a&gt; 은 필수 문서 설명 속성이므로이 값이 지원되어야 합니다.</target>
        </trans-unit>
        <trans-unit id="3a3ac7544a00673c7f8c53016bf8bc4243efaf78" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while decompressing it.</source>
          <target state="translated">프린터에서 문서 데이터의 압축을 푸는 동안 오류가 발생하여 작업이 시스템에 의해 중단되었습니다.</target>
        </trans-unit>
        <trans-unit id="8663e6a801b7bcbc697ec1ce30f2121d2d569f0d" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while decompressing it. If the printer posts this reason, the document data has already passed any tests that would have led to the &lt;code&gt;UNSUPPORTED_COMPRESSION&lt;/code&gt; job state reason.</source>
          <target state="translated">프린터에서 문서 데이터의 압축을 푸는 동안 오류가 발생하여 작업이 시스템에 의해 중단되었습니다. 프린터가이 이유를 게시하면 문서 데이터가 이미 &lt;code&gt;UNSUPPORTED_COMPRESSION&lt;/code&gt; 작업 상태 이유를 유발할 수있는 모든 테스트를 통과 한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="c9651e27388cf9a31a3794779e922572b6356320" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while decompressing it. If the printer posts this reason, the document data has already passed any tests that would have led to the UNSUPPORTED_COMPRESSION job state reason.</source>
          <target state="translated">압축을 풀 때 문서 데이터에 프린터 오류가 발생하여 시스템에서 작업을 중단했습니다. 프린터가이 이유를 게시하면 문서 데이터는 이미 UNSUPPORTED_COMPRESSION 작업 상태 이유로 이어진 모든 테스트를 통과 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="a5891e464aabaf6d903e99070ab1cfd2da3a228a" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while processing it.</source>
          <target state="translated">프린터에서 문서 데이터를 처리하는 동안 오류가 발생하여 작업이 시스템에 의해 중단되었습니다.</target>
        </trans-unit>
        <trans-unit id="398a3dd1a51ddcc4bdb2d5a16e080071a7759c72" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while processing it. If the printer posts this reason, the document data has already passed any tests that would have led to the &lt;code&gt;UNSUPPORTED_DOCUMENT_FORMAT&lt;/code&gt; job state reason.</source>
          <target state="translated">프린터에서 문서 데이터를 처리하는 동안 오류가 발생하여 작업이 시스템에 의해 중단되었습니다. 프린터가이 이유를 게시하면 문서 데이터가 이미 &lt;code&gt;UNSUPPORTED_DOCUMENT_FORMAT&lt;/code&gt; 작업 상태 이유를 유발할 수있는 테스트를 통과 한 것 입니다.</target>
        </trans-unit>
        <trans-unit id="4a1074380020f59f8ea4577a52c011d7142eb05b" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system because the printer encountered an error in the document data while processing it. If the printer posts this reason, the document data has already passed any tests that would have led to the UNSUPPORTED_DOCUMENT_FORMAT job state reason.</source>
          <target state="translated">프린터가 문서 데이터를 처리하는 중에 오류가 발생하여 시스템에서 작업을 중단했습니다. 프린터가이 이유를 게시하면 문서 데이터가 이미 UNSUPPORTED_DOCUMENT_FORMAT 작업 상태 이유로 이어진 모든 테스트를 통과 한 것입니다.</target>
        </trans-unit>
        <trans-unit id="bfe1ef1e2b2babdc8e61cb1c8d9f3c8fd20627e3" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system.</source>
          <target state="translated">작업이 시스템에 의해 중단되었습니다.</target>
        </trans-unit>
        <trans-unit id="80021461b49438812dfae96acc98b5c17eca0040" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system. Either the job (1) is in the process of being aborted, (2) has been aborted by the system and placed in the &lt;code&gt;ABORTED&lt;/code&gt; state, or (3) has been aborted by the system and placed in the &lt;code&gt;PENDING_HELD&lt;/code&gt; state, so that a user or operator can manually try the job again. This value should be supported.</source>
          <target state="translated">작업이 시스템에 의해 중단되었습니다. 작업 (1)이 중단되는 과정에 있거나, (2) 시스템에 의해 중단되고 &lt;code&gt;ABORTED&lt;/code&gt; 상태에 놓 이거나, (3) 시스템에 의해 중단되고 &lt;code&gt;PENDING_HELD&lt;/code&gt; 상태가되었으므로 사용자 또는 운영자는 작업을 수동으로 다시 시도 할 수 있습니다. 이 값은 지원되어야합니다.</target>
        </trans-unit>
        <trans-unit id="0c81f6d0b7d6876f860772ffa689ed85b796bc1f" translate="yes" xml:space="preserve">
          <source>The job was aborted by the system. Either the job (1) is in the process of being aborted, (2) has been aborted by the system and placed in the ABORTED state, or (3) has been aborted by the system and placed in the PENDING_HELD state, so that a user or operator can manually try the job again. This value should be supported.</source>
          <target state="translated">시스템에 의해 작업이 중단되었습니다. 작업 (1)이 중단되는 중이거나, (2) 시스템에 의해 중단되고 ABORTED 상태에 놓이거나, (3) 시스템에 의해 중단되고 PENDING_HELD 상태에있게되어 사용자 또는 운영자는 수동으로 작업을 다시 시도 할 수 있습니다. 이 값이 지원되어야합니다.</target>
        </trans-unit>
        <trans-unit id="75d03c55e5439d8b95948d37e4f4c9b4680f7e7f" translate="yes" xml:space="preserve">
          <source>The job was canceled by an unidentified local user, i.e., a user at a console at the device.</source>
          <target state="translated">식별되지 않은 로컬 사용자 (예 : 장치의 콘솔에있는 사용자)가 작업을 취소했습니다.</target>
        </trans-unit>
        <trans-unit id="8bf7d9b5fa01bc8bff3bfee2e8a72f12d197056b" translate="yes" xml:space="preserve">
          <source>The job was canceled by an unidentified local user, i.e., a user at a console at the device. This value should be supported if the implementation supports canceling jobs at the console.</source>
          <target state="translated">식별되지 않은 로컬 사용자, 즉 장치의 콘솔에있는 사용자가 작업을 취소했습니다. 구현이 콘솔에서 작업 취소를 지원하는 경우이 값이 지원되어야합니다.</target>
        </trans-unit>
        <trans-unit id="3cc153a43dcc333ffda8997278b8d3b1822d0927" translate="yes" xml:space="preserve">
          <source>The job was canceled by the &lt;a href=&quot;../printservice&quot;&gt;&lt;code&gt;PrintService&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;../printservice&quot;&gt; &lt;code&gt;PrintService&lt;/code&gt; 에&lt;/a&gt; 의해 작업이 취소되었습니다 .</target>
        </trans-unit>
        <trans-unit id="6feb69c5c44972d5c437c2b6edf6e054d3d4c3b5" translate="yes" xml:space="preserve">
          <source>The job was canceled by the operator, i.e., by a user who has been authenticated as having operator privileges (whether local or remote).</source>
          <target state="translated">작업이 운영자에 의해 취소되었습니다. 즉, 운영자 권한이있는 것으로 인증 된 사용자 (로컬 또는 원격)에 의해 취소되었습니다.</target>
        </trans-unit>
        <trans-unit id="eede175a41da055cf9fbe7c9bea273be2babd32b" translate="yes" xml:space="preserve">
          <source>The job was canceled by the operator, i.e., by a user who has been authenticated as having operator privileges (whether local or remote). If the security policy is to allow anyone to cancel anyone's job, then this value may be used when the job is canceled by someone other than the owner of the job. For such a security policy, in effect, everyone is an operator as far as canceling jobs is concerned. This value should be supported if the implementation permits canceling by someone other than the owner of the job.</source>
          <target state="translated">운영자, 즉 운영자 권한을 가진 사용자 (로컬 또는 원격)에 의해 작업이 취소되었습니다. 보안 정책이 누군가가 다른 사람의 작업을 취소하도록 허용하는 경우이 값은 작업 소유자 이외의 사람이 작업을 취소 할 때 사용될 수 있습니다. 이러한 보안 정책의 경우 사실상 작업 취소와 관련된 모든 사람이 운영자입니다. 구현이 작업 소유자 이외의 사람이 취소를 허용하는 경우이 값이 지원되어야합니다.</target>
        </trans-unit>
        <trans-unit id="32c5c26e90c8714bae45cb570ce509f49f621fd3" translate="yes" xml:space="preserve">
          <source>The job was canceled by the owner of the job, i.e., by a user whose authenticated identity is the same as the value of the originating user that created the Print Job, or by some other authorized end-user, such as a member of the job owner's security group.</source>
          <target state="translated">작업 소유자가 작업을 취소했습니다. 즉, 인증 된 ID가 인쇄 작업을 만든 원래 사용자의 값과 동일한 사용자 또는 다른 승인 된 최종 사용자 (예 : 작업 소유자의 보안 그룹.</target>
        </trans-unit>
        <trans-unit id="e77770a6bf43cb0d83acec3fbfc99bccb18adceb" translate="yes" xml:space="preserve">
          <source>The job was canceled by the owner of the job, i.e., by a user whose authenticated identity is the same as the value of the originating user that created the Print Job, or by some other authorized end-user, such as a member of the job owner's security group. This value should be supported.</source>
          <target state="translated">작업 소유자, 즉 인증 된 ID가 인쇄 작업을 생성 한 원래 사용자의 값과 동일한 사용자 또는 인증 된 다른 최종 사용자 (예 : 작업 소유자의 보안 그룹. 이 값이 지원되어야합니다.</target>
        </trans-unit>
        <trans-unit id="92c041c56ddbd824f348c9978061838a2c76180a" translate="yes" xml:space="preserve">
          <source>The job was not completely submitted for some unforeseen reason.</source>
          <target state="translated">예상치 못한 이유로 작업이 완전히 제출되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="a608d3651752def364a16735ed653b3688b7fab7" translate="yes" xml:space="preserve">
          <source>The job was not completely submitted for some unforeseen reason. Possibilities include (1) the printer has crashed before the job was fully submitted by the client, (2) the printer or the document transfer method has crashed in some non-recoverable way before the document data was entirely transferred to the printer, (3) the client crashed before the job was fully submitted.</source>
          <target state="translated">예상치 못한 이유로 작업이 완전히 제출되지 않았습니다. (1) 클라이언트가 작업을 완전히 제출하기 전에 프린터가 충돌했거나 (2) 문서 데이터가 프린터로 완전히 전송되기 전에 프린터 또는 문서 전송 방법이 복구 할 수없는 방식으로 충돌 한 경우 (3) ) 작업이 완전히 제출되기 전에 클라이언트가 충돌했습니다.</target>
        </trans-unit>
        <trans-unit id="7da33eec734a2ad4a396547252a8edff4bbad6a3" translate="yes" xml:space="preserve">
          <source>The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute may indicate why the job has stopped processing. For example, if the output device is stopped, the &lt;code&gt;PRINTER_STOPPED&lt;/code&gt; value may be included in the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">작업의 &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt; 속성은 작업 처리가 중지 된 이유를 나타낼 수 있습니다. 예를 들어, 출력 장치가 중지되면 &lt;code&gt;PRINTER_STOPPED&lt;/code&gt; 값이 작업의 &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt; 속성에 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e3b5dbd8418dde3945a7a407762a21b4f98ee6fc" translate="yes" xml:space="preserve">
          <source>The job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute may indicate why the job has stopped processing. For example, if the output device is stopped, the PRINTER_STOPPED value may be included in the job's &lt;a href=&quot;jobstatereasons&quot;&gt;&lt;code&gt;JobStateReasons&lt;/code&gt;&lt;/a&gt; attribute.</source>
          <target state="translated">작업의 &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt; 속성은 작업 처리가 중지 된 이유를 나타낼 수 있습니다. 예를 들어, 출력 장치가 중지되면 PRINTER_STOPPED 값이 작업의 &lt;a href=&quot;jobstatereasons&quot;&gt; &lt;code&gt;JobStateReasons&lt;/code&gt; &lt;/a&gt; 속성에 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fc3386dfd5b10cc369651ee2e31cf078b7359b41" translate="yes" xml:space="preserve">
          <source>The justification for the title.</source>
          <target state="translated">제목의 정당성.</target>
        </trans-unit>
        <trans-unit id="e273c4e24e3008768287b9553b857266ad9f1734" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;String&lt;/code&gt; should be a locale independent key for the role. It is not intended to be used as the actual &lt;code&gt;String&lt;/code&gt; to display to the user. To get the localized string, use &lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt;&lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">키 &lt;code&gt;String&lt;/code&gt; 은 역할에 대한 로케일 독립 키 여야합니다. 사용자에게 표시 할 실제 &lt;code&gt;String&lt;/code&gt; 로 사용하기위한 것이 아닙니다 . 현지화 된 문자열을 얻으려면 &lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt; &lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="e9272016a913da868c969604ed679ec13ea1bb51" translate="yes" xml:space="preserve">
          <source>The key &lt;code&gt;String&lt;/code&gt; should be a locale independent key for the state. It is not intended to be used as the actual &lt;code&gt;String&lt;/code&gt; to display to the user. To get the localized string, use &lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt;&lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">키 &lt;code&gt;String&lt;/code&gt; 은 상태에 대한 로케일 독립 키 여야합니다. 사용자에게 표시 할 실제 &lt;code&gt;String&lt;/code&gt; 로 사용하기위한 것이 아닙니다 . 현지화 된 문자열을 얻으려면 &lt;a href=&quot;accessiblebundle#toDisplayString()&quot;&gt; &lt;code&gt;AccessibleBundle.toDisplayString()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="afeba22c76bd0a4c4accca690f5b24b6151023b3" translate="yes" xml:space="preserve">
          <source>The key abstraction introduced in this package is &lt;em&gt;stream&lt;/em&gt;. The classes &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;intstream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;longstream&quot;&gt;&lt;code&gt;LongStream&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;doublestream&quot;&gt;&lt;code&gt;DoubleStream&lt;/code&gt;&lt;/a&gt; are streams over objects and the primitive &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt; and &lt;code&gt;double&lt;/code&gt; types. Streams differ from collections in several ways:</source>
          <target state="translated">이 패키지에 도입 된 주요 추상화는 &lt;em&gt;stream&lt;/em&gt; 입니다. &lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;intstream&quot;&gt; &lt;code&gt;IntStream&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;longstream&quot;&gt; &lt;code&gt;LongStream&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;doublestream&quot;&gt; &lt;code&gt;DoubleStream&lt;/code&gt; &lt;/a&gt; 클래스 는 객체와 기본 &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;long&lt;/code&gt; 및 &lt;code&gt;double&lt;/code&gt; 유형의 스트림 입니다. 스트림은 여러 가지면에서 컬렉션과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="22b9782e1cd06bc027ae7110195d34f30d3f52c6" translate="yes" xml:space="preserve">
          <source>The key abstraction introduced in this package is &lt;em&gt;stream&lt;/em&gt;. The classes &lt;a href=&quot;stream&quot;&gt;&lt;code&gt;Stream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;intstream&quot;&gt;&lt;code&gt;IntStream&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;longstream&quot;&gt;&lt;code&gt;LongStream&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;doublestream&quot;&gt;&lt;code&gt;DoubleStream&lt;/code&gt;&lt;/a&gt; are streams over objects and the primitive &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, and &lt;code&gt;double&lt;/code&gt; types. Streams differ from collections in several ways:</source>
          <target state="translated">이 패키지에 소개 된 핵심 추상화는 &lt;em&gt;stream&lt;/em&gt; 입니다. &lt;a href=&quot;stream&quot;&gt; &lt;code&gt;Stream&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;intstream&quot;&gt; &lt;code&gt;IntStream&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;longstream&quot;&gt; &lt;code&gt;LongStream&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;doublestream&quot;&gt; &lt;code&gt;DoubleStream&lt;/code&gt; &lt;/a&gt; 클래스 는 객체 및 기본 &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;long&lt;/code&gt; 및 &lt;code&gt;double&lt;/code&gt; 유형에 대한 스트림 입니다. 스트림은 여러 가지면에서 컬렉션과 다릅니다.</target>
        </trans-unit>
        <trans-unit id="20aca74de811ac39ad51b80e6cab2c0c1e6c49a1" translate="yes" xml:space="preserve">
          <source>The key abstractions introduced by this package are &lt;a href=&quot;memorysegment&quot;&gt;&lt;code&gt;MemorySegment&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;memoryaddress&quot;&gt;&lt;code&gt;MemoryAddress&lt;/code&gt;&lt;/a&gt;. The first models a contiguous memory region, which can reside either inside or outside the Java heap; the latter models an address - which can sometimes be expressed as an offset into a given segment. A memory address represents the main access coordinate of a memory access var handle, which can be obtained using the combinator methods defined in the &lt;a href=&quot;memoryhandles&quot;&gt;&lt;code&gt;MemoryHandles&lt;/code&gt;&lt;/a&gt; class. Finally, the &lt;a href=&quot;memorylayout&quot;&gt;&lt;code&gt;MemoryLayout&lt;/code&gt;&lt;/a&gt; class hierarchy enables description of &lt;em&gt;memory layouts&lt;/em&gt; and basic operations such as computing the size in bytes of a given layout, obtain its alignment requirements, and so on. Memory layouts also provide an alternate, more abstract way, to produce memory access var handles, e.g. using &lt;a href=&quot;memorylayout#layout-paths&quot;&gt;&lt;em&gt;layout paths&lt;/em&gt;&lt;/a&gt;. For example, to allocate an off-heap memory region big enough to hold 10 values of the primitive type &lt;code&gt;int&lt;/code&gt;, and fill it with values ranging from &lt;code&gt;0&lt;/code&gt; to &lt;code&gt;9&lt;/code&gt;, we can use the following code:</source>
          <target state="translated">이 패키지에서 소개하는 핵심 추상화는 &lt;a href=&quot;memorysegment&quot;&gt; &lt;code&gt;MemorySegment&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;memoryaddress&quot;&gt; &lt;code&gt;MemoryAddress&lt;/code&gt; &lt;/a&gt; 입니다. 첫 번째는 Java 힙 내부 또는 외부에 상주 할 수있는 연속 메모리 영역을 모델링합니다. 후자는 주소를 모델링합니다.이 주소는 때때로 주어진 세그먼트에 대한 오프셋으로 표현 될 수 있습니다. 메모리 주소는 &lt;a href=&quot;memoryhandles&quot;&gt; &lt;code&gt;MemoryHandles&lt;/code&gt; &lt;/a&gt; 클래스에 정의 된 combinator 메서드를 사용하여 얻을 수있는 메모리 액세스 var 핸들의 기본 액세스 좌표를 나타냅니다 . 마지막으로 &lt;a href=&quot;memorylayout&quot;&gt; &lt;code&gt;MemoryLayout&lt;/code&gt; &lt;/a&gt; 클래스 계층 구조는 &lt;em&gt;메모리 레이아웃에&lt;/em&gt; 대한 설명을 가능하게합니다.&lt;em&gt;&lt;/em&gt;및 주어진 레이아웃의 바이트 단위 크기 계산, 정렬 요구 사항 획득 등과 같은 기본 작업. 메모리 레이아웃은 또한 예를 들어 &lt;a href=&quot;memorylayout#layout-paths&quot;&gt;&lt;em&gt;레이아웃 경로를&lt;/em&gt;&lt;/a&gt; 사용하여 메모리 액세스 var 핸들을 생성하는 대체적이고 더 추상적 인 방법을 제공 &lt;em&gt;합니다&lt;/em&gt; . 예를 들어, 기본 유형 &lt;code&gt;int&lt;/code&gt; 의 10 개 값을 저장할 수있을만큼 큰 오프 힙 메모리 영역을 할당하고 &lt;code&gt;0&lt;/code&gt; 에서 &lt;code&gt;9&lt;/code&gt; 사이의 값으로 채우 려면 다음 코드를 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9a84e5030e8e2a0fb9cc31fad2393fb5bb07bb25" translate="yes" xml:space="preserve">
          <source>The key assumptions are that the class has a nullary constructor and that its state is accurately represented by matching pairs of &quot;setter&quot; and &quot;getter&quot; methods in the order they are returned by the Introspector. In addition to providing code-free persistence for JavaBeans, the &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; provides a convenient means to effect persistent storage for classes that have a constructor that, while not nullary, simply requires some property values as arguments.</source>
          <target state="translated">주요 가정은 클래스에 nullary 생성자가 있고 해당 상태가 Introspector에 의해 반환되는 순서대로 &quot;setter&quot;및 &quot;getter&quot;메서드 쌍을 일치시켜 정확하게 표현된다는 것입니다. JavaBeans에 대한 코드없는 지속성을 제공하는 것 외에도 &lt;code&gt;DefaultPersistenceDelegate&lt;/code&gt; 는 널 (null)은 아니지만 단순히 일부 특성 값을 인수로 요구하는 생성자가있는 클래스에 대해 지속적 저장에 영향을주는 편리한 수단을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="db226997511f7e7996e39cc88dbdf0bd036ad847" translate="yes" xml:space="preserve">
          <source>The key code of the key that was pressed in a keyboard event.</source>
          <target state="translated">키보드 이벤트에서 눌린 키의 키 코드입니다.</target>
        </trans-unit>
        <trans-unit id="c3114daa0611f12be89e4183584fe33d0fae4b2f" translate="yes" xml:space="preserve">
          <source>The key code of the key that was pressed in a keyboard event. This has been replaced by KeyEvent.getKeyCode()</source>
          <target state="translated">키보드 이벤트에서 눌린 키의 키 코드입니다. 이것은 KeyEvent.getKeyCode ()로 대체되었습니다.</target>
        </trans-unit>
        <trans-unit id="7b01a7825dcb6f5ba043067697b1d8be70e427a1" translate="yes" xml:space="preserve">
          <source>The key contains all of the characters in the line starting with the first non-white space character and up to, but not including, the first unescaped &lt;code&gt;'='&lt;/code&gt;, &lt;code&gt;':'&lt;/code&gt;, or white space character other than a line terminator. All of these key termination characters may be included in the key by escaping them with a preceding backslash character; for example,</source>
          <target state="translated">이 키에는 공백이 아닌 첫 번째 공백 문자로 시작하고 이스케이프 처리되지 않은 첫 번째 &lt;code&gt;'='&lt;/code&gt; , &lt;code&gt;':'&lt;/code&gt; 또는 행 종결자가 아닌 공백 문자를 포함하지 않는 행의 모든 ​​문자가 포함됩니다. 이 키 종료 문자는 모두 앞의 백 슬래시 문자로 이스케이프하여 키에 포함될 수 있습니다. 예를 들어</target>
        </trans-unit>
        <trans-unit id="10925f9bd3a7bf79574e77d146d7ce5cafee6d2d" translate="yes" xml:space="preserve">
          <source>The key elements of this package include:</source>
          <target state="translated">이 패키지의 핵심 요소는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="c6cae5d488028cb19cb419452c7a2edb32b1f590" translate="yes" xml:space="preserve">
          <source>The key event is passed to every &lt;code&gt;KeyListener&lt;/code&gt; or &lt;code&gt;KeyAdapter&lt;/code&gt; object which registered to receive such events using the component's &lt;code&gt;addKeyListener&lt;/code&gt; method. (&lt;code&gt;KeyAdapter&lt;/code&gt; objects implement the &lt;code&gt;KeyListener&lt;/code&gt; interface.)</source>
          <target state="translated">키 이벤트는 구성 요소의 &lt;code&gt;addKeyListener&lt;/code&gt; 메서드를 사용하여 이러한 이벤트를 수신하도록 등록한 모든 &lt;code&gt;KeyListener&lt;/code&gt; 또는 &lt;code&gt;KeyAdapter&lt;/code&gt; 개체에 전달됩니다 . ( &lt;code&gt;KeyAdapter&lt;/code&gt; 객체는 &lt;code&gt;KeyListener&lt;/code&gt; 인터페이스를 구현합니다 .)</target>
        </trans-unit>
        <trans-unit id="c9a2b7616c25d87b7cce2eb0034e5fe8882713d0" translate="yes" xml:space="preserve">
          <source>The key for Unicode locale extension ('u').</source>
          <target state="translated">유니 코드 로캘 확장 ( 'u')의 키입니다.</target>
        </trans-unit>
        <trans-unit id="b66a163c85811c1f14b1e7a47ff99a8c4c87773a" translate="yes" xml:space="preserve">
          <source>The key for the principal will be retrieved from the keytab. If the key is not available in the keytab the user will be prompted for the principal's password. The Subject will be populated with the principal's key either from the keytab or derived from the password entered.</source>
          <target state="translated">주체의 키는 키 탭에서 검색됩니다. 키 탭에서 키를 사용할 수없는 경우 사용자에게 보안 주체의 암호를 입력하라는 메시지가 표시됩니다. 제목은 키 탭에서 또는 입력 한 암호에서 파생 된 보안 주체의 키로 채워집니다.</target>
        </trans-unit>
        <trans-unit id="8428fe01972833a14a72389b516a924f19614bf1" translate="yes" xml:space="preserve">
          <source>The key for the private use extension ('x').</source>
          <target state="translated">개인용 확장 프로그램 ( 'x')의 키입니다.</target>
        </trans-unit>
        <trans-unit id="39adb11f6504601433950670cbefd81cef9c88e0" translate="yes" xml:space="preserve">
          <source>The key is &lt;code&gt;&quot;fruits&quot;&lt;/code&gt; and the associated element is:</source>
          <target state="translated">핵심은 &lt;code&gt;&quot;fruits&quot;&lt;/code&gt; 이며 관련 요소는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="a0149c1aab52142013341ca2aee2dbd36da314ee" translate="yes" xml:space="preserve">
          <source>The key material of a &lt;code&gt;KerberosKey&lt;/code&gt; is defined as the value of the &lt;code&gt;keyValue&lt;/code&gt; above.</source>
          <target state="translated">&lt;code&gt;KerberosKey&lt;/code&gt; 의 키 자료는 위 의 &lt;code&gt;keyValue&lt;/code&gt; 값으로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="e092b2c83cdba16c729e10c599650354f61f11ae" translate="yes" xml:space="preserve">
          <source>The key material of an &lt;code&gt;EncryptionKey&lt;/code&gt; is defined as the value of the &lt;code&gt;keyValue&lt;/code&gt; above.</source>
          <target state="translated">&lt;code&gt;EncryptionKey&lt;/code&gt; 의 키 자료는 위 의 &lt;code&gt;keyValue&lt;/code&gt; 값으로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="8129dd58b1558046a43f513a6782825b85e25fcc" translate="yes" xml:space="preserve">
          <source>The key of a character is an integer composed of primary order(short), secondary order(byte), and tertiary order(byte). Java strictly defines the size and signedness of its primitive data types. Therefore, the static functions &lt;code&gt;primaryOrder&lt;/code&gt;, &lt;code&gt;secondaryOrder&lt;/code&gt;, and &lt;code&gt;tertiaryOrder&lt;/code&gt; return &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, and &lt;code&gt;short&lt;/code&gt; respectively to ensure the correctness of the key value.</source>
          <target state="translated">문자의 키는 1 차 순서 (short), 2 차 순서 (byte) 및 3 차 순서 (byte)로 구성된 정수입니다. Java는 기본 데이터 유형의 크기와 서명을 엄격하게 정의합니다. 따라서 정적 함수 &lt;code&gt;primaryOrder&lt;/code&gt; , &lt;code&gt;secondaryOrder&lt;/code&gt; 및 &lt;code&gt;tertiaryOrder&lt;/code&gt; 는 각각 키 값의 정확성을 보장하기 위해 &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; 및 &lt;code&gt;short&lt;/code&gt; 를 각각 반환 합니다.</target>
        </trans-unit>
        <trans-unit id="9f985888e1c35d4435d90834a189099e0d2cd718" translate="yes" xml:space="preserve">
          <source>The key of the preference that was changed.</source>
          <target state="translated">변경된 환경 설정의 키입니다.</target>
        </trans-unit>
        <trans-unit id="6e8fcf42cfa361807a43d2b30af7d9cda84c3efe" translate="yes" xml:space="preserve">
          <source>The key operations supported by this class are those of</source>
          <target state="translated">이 클래스에서 지원하는 주요 작업은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3387fc9f2a2285c3b881b40c90c411fdd5064150" translate="yes" xml:space="preserve">
          <source>The key property list string. This string is independent of whether the ObjectName is a pattern.</source>
          <target state="translated">키 특성 목록 문자열 이 문자열은 ObjectName이 패턴인지 여부와 무관합니다.</target>
        </trans-unit>
        <trans-unit id="591c5debdb55c54ccf4211c0d46262a7acb20492" translate="yes" xml:space="preserve">
          <source>The key returned when this channel was last registered with the given selector, or &lt;code&gt;null&lt;/code&gt; if this channel is not currently registered with that selector</source>
          <target state="translated">이 셀렉터가 지정된 셀렉터에 마지막으로 등록되었을 때에 리턴 된 키. 이 채널이 현재 그 셀렉터에 등록되어 있지 않은 경우는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0df978032106f5a48ada8ce642e290c157b95524" translate="yes" xml:space="preserve">
          <source>The key set is &lt;a href=&quot;#ksc&quot;&gt;not thread-safe&lt;/a&gt;.</source>
          <target state="translated">키 세트는 &lt;a href=&quot;#ksc&quot;&gt;스레드로부터 안전하지 않습니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="57ef8dd9009d16c64f42c6500fb027397a1c181c" translate="yes" xml:space="preserve">
          <source>The key set is not directly modifiable. A key is removed only after it has been cancelled and its channel has been deregistered. Any attempt to modify the key set will cause an &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt; to be thrown.</source>
          <target state="translated">키 세트는 직접 수정할 수 없습니다. 키는 취소되고 채널이 등록 해제 된 후에 만 ​​제거됩니다. 키 세트를 수정하려고하면 &lt;a href=&quot;../../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="0555fd1ced7983df0b16ac9310410ee14e835da7" translate="yes" xml:space="preserve">
          <source>The key store provider. If not specified, uses the standard search order to find the provider.</source>
          <target state="translated">키 저장소 공급자입니다. 지정하지 않으면 표준 검색 순서를 사용하여 공급자를 찾습니다.</target>
        </trans-unit>
        <trans-unit id="7ede62eee0acc00784b0b84443a9e91e3fc638f8" translate="yes" xml:space="preserve">
          <source>The key store type. If not specified, defaults to the result of calling &lt;code&gt;KeyStore.getDefaultType()&lt;/code&gt;. If the type is &quot;PKCS11&quot;, then keyStoreURL must be &quot;NONE&quot; and privateKeyPasswordURL must not be specified.</source>
          <target state="translated">키 저장소 유형입니다. 지정되지 않은 경우 기본값은 &lt;code&gt;KeyStore.getDefaultType()&lt;/code&gt; 을 호출 한 결과입니다 . 유형이 &quot;PKCS11&quot;인 경우 keyStoreURL은 &quot;NONE&quot;이어야하며 privateKeyPasswordURL을 지정하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="1d9c9d8289128682425a313c74602226e7f84949" translate="yes" xml:space="preserve">
          <source>The key that generates &lt;code&gt;VK_Q&lt;/code&gt; when using a U.S. keyboard layout also generates a unique code for Russian or Hebrew layout. There is no a &lt;code&gt;VK_&lt;/code&gt; constant for these and many other codes in various layouts. These codes may be obtained by using &lt;code&gt;getExtendedKeyCode&lt;/code&gt; and are used whenever a &lt;code&gt;VK_&lt;/code&gt; constant is used.</source>
          <target state="translated">미국 키보드 레이아웃을 사용할 때 &lt;code&gt;VK_Q&lt;/code&gt; 를 생성하는 키는 러시아어 또는 히브리어 레이아웃에 대한 고유 코드도 생성합니다. 이러한 코드와 다양한 레이아웃의 다른 많은 코드에 대한 &lt;code&gt;VK_&lt;/code&gt; 상수 는 없습니다 . 이러한 코드는 &lt;code&gt;getExtendedKeyCode&lt;/code&gt; 를 사용하여 얻을 수 있으며 &lt;code&gt;VK_&lt;/code&gt; 상수가 사용될 때마다 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="fff43c55d2687265a85c98dde4c42fdce9575cdc" translate="yes" xml:space="preserve">
          <source>The key used for storing a &lt;code&gt;Boolean&lt;/code&gt; that corresponds to the selected state.</source>
          <target state="translated">선택한 상태에 해당 하는 &lt;code&gt;Boolean&lt;/code&gt; 을 저장하는 데 사용되는 키 입니다.</target>
        </trans-unit>
        <trans-unit id="a06203cc6b56a5b789124f777f4f1e6b8e3decc0" translate="yes" xml:space="preserve">
          <source>The key used for storing a &lt;code&gt;Boolean&lt;/code&gt; that corresponds to the selected state. This is typically used only for components that have a meaningful selection state. For example, &lt;code&gt;JRadioButton&lt;/code&gt; and &lt;code&gt;JCheckBox&lt;/code&gt; make use of this but instances of &lt;code&gt;JMenu&lt;/code&gt; don't.</source>
          <target state="translated">선택한 상태에 해당 하는 &lt;code&gt;Boolean&lt;/code&gt; 을 저장하는 데 사용되는 키 입니다. 일반적으로 의미있는 선택 상태를 가진 구성 요소에만 사용됩니다. 예를 들어 &lt;code&gt;JRadioButton&lt;/code&gt; 과 &lt;code&gt;JCheckBox&lt;/code&gt; 는 이것을 사용하지만 &lt;code&gt;JMenu&lt;/code&gt; 의 인스턴스는 사용 하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cc755a5d588ff3e99ca6ecb6db0feb0b99b106aa" translate="yes" xml:space="preserve">
          <source>The key used for storing a &lt;code&gt;KeyStroke&lt;/code&gt; to be used as the accelerator for the action.</source>
          <target state="translated">작업의 가속기로 사용할 &lt;code&gt;KeyStroke&lt;/code&gt; 를 저장하는 데 사용되는 키 입니다.</target>
        </trans-unit>
        <trans-unit id="3af69e2ee60894317f962df10e77486cf1003639" translate="yes" xml:space="preserve">
          <source>The key used for storing a longer &lt;code&gt;String&lt;/code&gt; description for the action, could be used for context-sensitive help.</source>
          <target state="translated">작업에 대한 긴 &lt;code&gt;String&lt;/code&gt; 설명 을 저장하는 데 사용되는 키 는 상황에 맞는 도움말에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4313350c8220b00b8ca46701c3fbe79249521eb8" translate="yes" xml:space="preserve">
          <source>The key used for storing a short &lt;code&gt;String&lt;/code&gt; description for the action, used for tooltip text.</source>
          <target state="translated">툴팁 텍스트에 사용되는 작업에 대한 짧은 &lt;code&gt;String&lt;/code&gt; 설명 을 저장하는 데 사용되는 키 입니다.</target>
        </trans-unit>
        <trans-unit id="cbc06bf453db346ac5d98109ef1a74424f0b1e39" translate="yes" xml:space="preserve">
          <source>The key used for storing a small &lt;code&gt;Icon&lt;/code&gt;, such as &lt;code&gt;ImageIcon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageIcon&lt;/code&gt; 과 같은 작은 &lt;code&gt;Icon&lt;/code&gt; 을 저장하는 데 사용되는 키 입니다.</target>
        </trans-unit>
        <trans-unit id="ca28f88c8b6822311e066df2073ccfca128ffab5" translate="yes" xml:space="preserve">
          <source>The key used for storing a small &lt;code&gt;Icon&lt;/code&gt;, such as &lt;code&gt;ImageIcon&lt;/code&gt;. This is typically used with menus such as &lt;code&gt;JMenuItem&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ImageIcon&lt;/code&gt; 과 같은 작은 &lt;code&gt;Icon&lt;/code&gt; 을 저장하는 데 사용되는 키 입니다. 이것은 일반적으로 &lt;code&gt;JMenuItem&lt;/code&gt; 과 같은 메뉴와 함께 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="510c4e314bfc357f8a142c0f12ecfbdf60ef4c6d" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Icon&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Icon&lt;/code&gt; 을 저장하는 데 사용되는 키 입니다.</target>
        </trans-unit>
        <trans-unit id="3f85af6019774c273c52b21a75abdba33f13cbed" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Icon&lt;/code&gt;. This is typically used by buttons, such as &lt;code&gt;JButton&lt;/code&gt; and &lt;code&gt;JToggleButton&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Icon&lt;/code&gt; 을 저장하는 데 사용되는 키 입니다. 일반적으로 &lt;code&gt;JButton&lt;/code&gt; 및 &lt;code&gt;JToggleButton&lt;/code&gt; 과 같은 버튼에서 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="7441f7374e1db2e35bd44136a9d25bea7f4b6545" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Integer&lt;/code&gt; that corresponds to one of the &lt;code&gt;KeyEvent&lt;/code&gt; key codes.</source>
          <target state="translated">&lt;code&gt;KeyEvent&lt;/code&gt; 키 코드 중 하나에 해당 하는 &lt;code&gt;Integer&lt;/code&gt; 를 저장하는 데 사용되는 키입니다.</target>
        </trans-unit>
        <trans-unit id="e5d4c03a7904fd08c844709cf3b00e41a2b633a6" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Integer&lt;/code&gt; that corresponds to one of the &lt;code&gt;KeyEvent&lt;/code&gt; key codes. The value is commonly used to specify a mnemonic. For example: &lt;code&gt;myAction.putValue(Action.MNEMONIC_KEY, KeyEvent.VK_A)&lt;/code&gt; sets the mnemonic of &lt;code&gt;myAction&lt;/code&gt; to 'a', while &lt;code&gt;myAction.putValue(Action.MNEMONIC_KEY, KeyEvent.getExtendedKeyCodeForChar('&amp;Ntilde;'))&lt;/code&gt; sets the mnemonic of &lt;code&gt;myAction&lt;/code&gt; to Cyrillic letter &quot;Ef&quot;.</source>
          <target state="translated">&lt;code&gt;KeyEvent&lt;/code&gt; 키 코드 중 하나에 해당 하는 &lt;code&gt;Integer&lt;/code&gt; 를 저장하는 데 사용되는 키입니다. 이 값은 일반적으로 니모닉을 지정하는 데 사용됩니다. 예 : &lt;code&gt;myAction.putValue(Action.MNEMONIC_KEY, KeyEvent.VK_A)&lt;/code&gt; 는 &lt;code&gt;myAction&lt;/code&gt; 의 니모닉 을 'a'로 설정하고 &lt;code&gt;myAction.putValue(Action.MNEMONIC_KEY, KeyEvent.getExtendedKeyCodeForChar('&amp;Ntilde;'))&lt;/code&gt; 는 &lt;code&gt;myAction&lt;/code&gt; 의 니모닉을 다음 으로 설정합니다. 키릴 문자 &quot;Ef&quot;.</target>
        </trans-unit>
        <trans-unit id="13893d6d133909575ce011e4a4bd5413e29f806c" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Integer&lt;/code&gt; that corresponds to the index in the text (identified by the &lt;code&gt;NAME&lt;/code&gt; property) that the decoration for a mnemonic should be rendered at.</source>
          <target state="translated">니모닉의 장식이 렌더링되어야 하는 텍스트 ( &lt;code&gt;NAME&lt;/code&gt; 속성으로 식별 됨)의 인덱스에 해당 하는 &lt;code&gt;Integer&lt;/code&gt; 를 저장하는 데 사용되는 키 입니다.</target>
        </trans-unit>
        <trans-unit id="d459d2f52abef201da41ccf4dded26819715dc4e" translate="yes" xml:space="preserve">
          <source>The key used for storing an &lt;code&gt;Integer&lt;/code&gt; that corresponds to the index in the text (identified by the &lt;code&gt;NAME&lt;/code&gt; property) that the decoration for a mnemonic should be rendered at. If the value of this property is greater than or equal to the length of the text, it will treated as -1.</source>
          <target state="translated">니모닉의 장식이 렌더링되어야 하는 텍스트 ( &lt;code&gt;NAME&lt;/code&gt; 속성으로 식별 됨)의 인덱스에 해당 하는 &lt;code&gt;Integer&lt;/code&gt; 를 저장하는 데 사용되는 키 입니다. 이 속성의 값이 텍스트 길이보다 크거나 같으면 -1로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="8ee1794b44d425373319d35e314eb0fe551d5e36" translate="yes" xml:space="preserve">
          <source>The key used for storing the &lt;code&gt;String&lt;/code&gt; name for the action, used for a menu or button.</source>
          <target state="translated">메뉴 또는 버튼에 사용되는 작업 의 &lt;code&gt;String&lt;/code&gt; 이름 을 저장하는 데 사용되는 키 입니다.</target>
        </trans-unit>
        <trans-unit id="980838ebdbc8d0916ba657f4bc82b0737f06ce5b" translate="yes" xml:space="preserve">
          <source>The key used to determine the command &lt;code&gt;String&lt;/code&gt; for the &lt;code&gt;ActionEvent&lt;/code&gt; that will be created when an &lt;code&gt;Action&lt;/code&gt; is going to be notified as the result of residing in a &lt;code&gt;Keymap&lt;/code&gt; associated with a &lt;code&gt;JComponent&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JComponent&lt;/code&gt; 와 연관된 &lt;code&gt;Keymap&lt;/code&gt; 에있는 결과로 &lt;code&gt;Action&lt;/code&gt; 이 통지 될 때 생성 될 &lt;code&gt;ActionEvent&lt;/code&gt; 에 대한 명령 &lt;code&gt;String&lt;/code&gt; 을 결정하는 데 사용되는 키 입니다.</target>
        </trans-unit>
        <trans-unit id="07021616652b4190834cc6f5cd3d6a99828ab34d" translate="yes" xml:space="preserve">
          <source>The key.</source>
          <target state="translated">열쇠.</target>
        </trans-unit>
        <trans-unit id="7d7d2eafd0bd1f2e703614a07a3808fcba5c87ea" translate="yes" xml:space="preserve">
          <source>The keys in Map are case-insensitive.</source>
          <target state="translated">Map의 키는 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9fcfd0ac958dc909e6b60a2e46db0de0826aceb0" translate="yes" xml:space="preserve">
          <source>The keys involved in establishing a shared secret are created by one of the key generators (&lt;code&gt;KeyPairGenerator&lt;/code&gt; or &lt;code&gt;KeyGenerator&lt;/code&gt;), a &lt;code&gt;KeyFactory&lt;/code&gt;, or as a result from an intermediate phase of the key agreement protocol (&lt;a href=&quot;#engineDoPhase(java.security.Key,boolean)&quot;&gt;&lt;code&gt;engineDoPhase&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">공유 비밀을 설정하는 데 관련된 키는 키 생성기 ( &lt;code&gt;KeyPairGenerator&lt;/code&gt; 또는 &lt;code&gt;KeyGenerator&lt;/code&gt; ), &lt;code&gt;KeyFactory&lt;/code&gt; 중 하나 또는 키 계약 프로토콜 ( &lt;a href=&quot;#engineDoPhase(java.security.Key,boolean)&quot;&gt; &lt;code&gt;engineDoPhase&lt;/code&gt; &lt;/a&gt; ) 의 중간 단계의 결과로 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="8f370fcfd44322aa2b8d1091b0a099098abd9ad6" translate="yes" xml:space="preserve">
          <source>The keys involved in establishing a shared secret are created by one of the key generators (&lt;code&gt;KeyPairGenerator&lt;/code&gt; or &lt;code&gt;KeyGenerator&lt;/code&gt;), a &lt;code&gt;KeyFactory&lt;/code&gt;, or as a result from an intermediate phase of the key agreement protocol (&lt;a href=&quot;keyagreementspi#engineDoPhase-java.security.Key-boolean-&quot;&gt;&lt;code&gt;engineDoPhase&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">공유 비밀을 설정하는 데 관련된 키는 키 생성기 ( &lt;code&gt;KeyPairGenerator&lt;/code&gt; 또는 &lt;code&gt;KeyGenerator&lt;/code&gt; ) 중 하나 , &lt;code&gt;KeyFactory&lt;/code&gt; 또는 키 계약 프로토콜 ( &lt;a href=&quot;keyagreementspi#engineDoPhase-java.security.Key-boolean-&quot;&gt; &lt;code&gt;engineDoPhase&lt;/code&gt; &lt;/a&gt; ) 의 중간 단계에서 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="723f16f5244db1190e45ab85ded24007968e816f" translate="yes" xml:space="preserve">
          <source>The keys involved in establishing a shared secret are created by one of the key generators (&lt;code&gt;KeyPairGenerator&lt;/code&gt; or &lt;code&gt;KeyGenerator&lt;/code&gt;), a &lt;code&gt;KeyFactory&lt;/code&gt;, or as a result from an intermediate phase of the key agreement protocol.</source>
          <target state="translated">공유 비밀을 설정하는 데 관련된 키는 키 생성기 ( &lt;code&gt;KeyPairGenerator&lt;/code&gt; 또는 &lt;code&gt;KeyGenerator&lt;/code&gt; ) 중 하나 , &lt;code&gt;KeyFactory&lt;/code&gt; 또는 키 계약 프로토콜의 중간 단계에서 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="5fe9470c6519546a44549a43906b2494c99a3b8b" translate="yes" xml:space="preserve">
          <source>The keys used to control the hints are all special values that subclass the associated &lt;a href=&quot;renderinghints.key&quot;&gt;&lt;code&gt;RenderingHints.Key&lt;/code&gt;&lt;/a&gt; class. Many common hints are expressed below as static constants in this class, but the list is not meant to be exhaustive. Other hints may be created by other packages by defining new objects which subclass the &lt;code&gt;Key&lt;/code&gt; class and defining the associated values.</source>
          <target state="translated">힌트를 제어하는 ​​데 사용되는 키는 관련된 &lt;a href=&quot;renderinghints.key&quot;&gt; &lt;code&gt;RenderingHints.Key&lt;/code&gt; &lt;/a&gt; 클래스 를 하위 클래스로 만드는 모든 특수 값입니다 . 많은 일반적인 힌트가이 클래스의 정적 상수로 아래에 표현되어 있지만 목록이 완전한 것은 아닙니다. 다른 힌트는 &lt;code&gt;Key&lt;/code&gt; 클래스 를 하위 클래스로 분류 하고 관련 값 을 정의하는 새 개체를 정의하여 다른 패키지에서 만들 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="93449d8bc735c86f66b7af66ec3fc6632ea6e0e9" translate="yes" xml:space="preserve">
          <source>The keystore location.</source>
          <target state="translated">키 저장소 위치</target>
        </trans-unit>
        <trans-unit id="71b0abd8de97d396da90382775d49f0501bc9b82" translate="yes" xml:space="preserve">
          <source>The keystore type.</source>
          <target state="translated">키 스토어 타입.</target>
        </trans-unit>
        <trans-unit id="842a8022c0b70f37cfdb00d1ecc419e098528a20" translate="yes" xml:space="preserve">
          <source>The keytab file format is described at &lt;a href=&quot;http://www.ioplex.com/utilities/keytab.txt&quot;&gt; http://www.ioplex.com/utilities/keytab.txt&lt;/a&gt;.</source>
          <target state="translated">키탭 파일 형식은 &lt;a href=&quot;http://www.ioplex.com/utilities/keytab.txt&quot;&gt;http://www.ioplex.com/utilities/keytab.txt에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="6953cdbddb10689e6af5f44202dafc94da88e43d" translate="yes" xml:space="preserve">
          <source>The keytab file format is described at &lt;a href=&quot;https://www.ioplex.com/utilities/keytab.txt&quot;&gt; http://www.ioplex.com/utilities/keytab.txt&lt;/a&gt;.</source>
          <target state="translated">keytab 파일 형식은 &lt;a href=&quot;https://www.ioplex.com/utilities/keytab.txt&quot;&gt;http://www.ioplex.com/utilities/keytab.txt에&lt;/a&gt; 설명되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="935cbb5c5e7ca73c0e61d1fed5057a9e10848ab7" translate="yes" xml:space="preserve">
          <source>The keywords are mapped to a BCP 47 extension value using the extension key 'u' (&lt;a href=&quot;#UNICODE_LOCALE_EXTENSION&quot;&gt;&lt;code&gt;UNICODE_LOCALE_EXTENSION&lt;/code&gt;&lt;/a&gt;). The above example, &quot;nu-thai&quot;, becomes the extension &quot;u-nu-thai&quot;.</source>
          <target state="translated">키워드는 확장 키 'u'( &lt;a href=&quot;#UNICODE_LOCALE_EXTENSION&quot;&gt; &lt;code&gt;UNICODE_LOCALE_EXTENSION&lt;/code&gt; &lt;/a&gt; )를 사용하여 BCP 47 확장 값에 매핑됩니다 . 위의 예인 &quot;nu-thai&quot;는 &quot;u-nu-thai&quot;확장자가됩니다.</target>
        </trans-unit>
        <trans-unit id="e06cb2d0e49b96e83b7706a492fb99378d956821" translate="yes" xml:space="preserve">
          <source>The keywords are mapped to a BCP 47 extension value using the extension key 'u' (&lt;a href=&quot;locale#UNICODE_LOCALE_EXTENSION&quot;&gt;&lt;code&gt;UNICODE_LOCALE_EXTENSION&lt;/code&gt;&lt;/a&gt;). The above example, &quot;nu-thai&quot;, becomes the extension &quot;u-nu-thai&quot;.code</source>
          <target state="translated">확장 키 'u'( &lt;a href=&quot;locale#UNICODE_LOCALE_EXTENSION&quot;&gt; &lt;code&gt;UNICODE_LOCALE_EXTENSION&lt;/code&gt; &lt;/a&gt; )를 사용하여 키워드가 BCP 47 확장 값에 맵핑됩니다 . 위의 예제 &quot;nu-thai&quot;는 확장자 &quot;u-nu-thai&quot;가됩니다.</target>
        </trans-unit>
        <trans-unit id="375da35f31e68ae714e256dbe151bcc22de45f00" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;declaredtype&quot;&gt;declared type&lt;/a&gt; is &lt;a href=&quot;typekind#DECLARED&quot;&gt;&lt;code&gt;DECLARED&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">a의 종류 &lt;a href=&quot;declaredtype&quot;&gt;선언 된 유형이&lt;/a&gt; 있다 &lt;a href=&quot;typekind#DECLARED&quot;&gt; &lt;code&gt;DECLARED&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="c948d3b3342e1192114d359180cef867021ab3b8" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;moduleelement&quot;&gt;module&lt;/a&gt; is &lt;a href=&quot;elementkind#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;moduleelement&quot;&gt;모듈&lt;/a&gt; 의 종류 는 &lt;a href=&quot;elementkind#MODULE&quot;&gt; &lt;code&gt;MODULE&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="46088e042db73dff6822bf04d277e868be98d37f" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;moduleelement.providesdirective&quot;&gt;provides directive&lt;/a&gt; is &lt;a href=&quot;moduleelement.directivekind#PROVIDES&quot;&gt;&lt;code&gt;PROVIDES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;moduleelement.providesdirective&quot;&gt;제공 지시문&lt;/a&gt; 의 종류 는 &lt;a href=&quot;moduleelement.directivekind#PROVIDES&quot;&gt; &lt;code&gt;PROVIDES&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="661f1ada115489e444bf29ee31713d3227744fa7" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;moduleelement.requiresdirective&quot;&gt;requires directive&lt;/a&gt; is &lt;a href=&quot;moduleelement.directivekind#REQUIRES&quot;&gt;&lt;code&gt;REQUIRES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;moduleelement.directivekind#REQUIRES&quot;&gt; &lt;code&gt;REQUIRES&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;moduleelement.requiresdirective&quot;&gt; 지시문&lt;/a&gt; 의 종류 는 REQUIRES 입니다.</target>
        </trans-unit>
        <trans-unit id="342ce735e0660fbac0d526df32343c6484bb5e08" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;moduleelement.usesdirective&quot;&gt;uses directive&lt;/a&gt; is &lt;a href=&quot;moduleelement.directivekind#USES&quot;&gt;&lt;code&gt;USES&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;moduleelement.usesdirective&quot;&gt;uses 지시문&lt;/a&gt; 의 종류 는 &lt;a href=&quot;moduleelement.directivekind#USES&quot;&gt; &lt;code&gt;USES&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="db1353ef29c0931432bf00ae5edc58b9fffe8bc2" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;notype&quot;&gt;pseudo-type&lt;/a&gt; is one of &lt;a href=&quot;typekind#VOID&quot;&gt;&lt;code&gt;VOID&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;typekind#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;typekind#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;typekind#NONE&quot;&gt;&lt;code&gt;NONE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">a의 종류 &lt;a href=&quot;notype&quot;&gt;의사 유형&lt;/a&gt; 중 하나입니다 &lt;a href=&quot;typekind#VOID&quot;&gt; &lt;code&gt;VOID&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;typekind#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;typekind#MODULE&quot;&gt; &lt;code&gt;MODULE&lt;/code&gt; &lt;/a&gt; , 또는 &lt;a href=&quot;typekind#NONE&quot;&gt; &lt;code&gt;NONE&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aa974555ae5c724ba0e26864a3b0f53616a19f0e" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;nulltype&quot;&gt;null type&lt;/a&gt; is &lt;a href=&quot;typekind#NULL&quot;&gt;&lt;code&gt;NULL&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">a의 종류 &lt;a href=&quot;nulltype&quot;&gt;널 유형&lt;/a&gt; 입니다 &lt;a href=&quot;typekind#NULL&quot;&gt; &lt;code&gt;NULL&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="861710719ca8446c0159fe0e5f6fc1e3c52bc47a" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;packageelement&quot;&gt;package&lt;/a&gt; is &lt;a href=&quot;elementkind#PACKAGE&quot;&gt;&lt;code&gt;PACKAGE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;packageelement&quot;&gt;패키지&lt;/a&gt; 의 종류 는 &lt;a href=&quot;elementkind#PACKAGE&quot;&gt; &lt;code&gt;PACKAGE&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ccbc727524cd8939b454cc1d6740cf503ded5193" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;primitivetype&quot;&gt;primitive type&lt;/a&gt; is one of the kinds for which &lt;a href=&quot;typekind#isPrimitive()&quot;&gt;&lt;code&gt;TypeKind.isPrimitive()&lt;/code&gt;&lt;/a&gt; returns &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">a의 종류 &lt;a href=&quot;primitivetype&quot;&gt;원시적 형이&lt;/a&gt; 있는 종류 중 하나입니다 &lt;a href=&quot;typekind#isPrimitive()&quot;&gt; &lt;code&gt;TypeKind.isPrimitive()&lt;/code&gt; &lt;/a&gt; 반환 &lt;code&gt;true&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="2ff941c362740cf1b79dabe9ac85098f96b8f1b6" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;recordcomponentelement&quot;&gt;record component&lt;/a&gt; is &lt;a href=&quot;elementkind#RECORD_COMPONENT&quot;&gt;&lt;code&gt;RECORD_COMPONENT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;recordcomponentelement&quot;&gt;레코드 구성 요소&lt;/a&gt; 의 종류 는 &lt;a href=&quot;elementkind#RECORD_COMPONENT&quot;&gt; &lt;code&gt;RECORD_COMPONENT&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c077b2a6aad9449a7861ef7dd06bc2640648fa14" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;typeelement&quot;&gt;type element&lt;/a&gt; is one of &lt;a href=&quot;elementkind#ANNOTATION_TYPE&quot;&gt;&lt;code&gt;ANNOTATION_TYPE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#CLASS&quot;&gt;&lt;code&gt;CLASS&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#ENUM&quot;&gt;&lt;code&gt;ENUM&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#INTERFACE&quot;&gt;&lt;code&gt;INTERFACE&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;elementkind#RECORD&quot;&gt;&lt;code&gt;RECORD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;typeelement&quot;&gt;유형 요소&lt;/a&gt; 의 종류는 &lt;a href=&quot;elementkind#ANNOTATION_TYPE&quot;&gt; &lt;code&gt;ANNOTATION_TYPE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementkind#CLASS&quot;&gt; &lt;code&gt;CLASS&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementkind#ENUM&quot;&gt; &lt;code&gt;ENUM&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementkind#INTERFACE&quot;&gt; &lt;code&gt;INTERFACE&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;elementkind#RECORD&quot;&gt; &lt;code&gt;RECORD&lt;/code&gt; &lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="043348a2919f2aa5dcb140a4027a2b2d133ff987" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;typeparameterelement&quot;&gt;type parameter&lt;/a&gt; is &lt;a href=&quot;elementkind#TYPE_PARAMETER&quot;&gt;&lt;code&gt;TYPE_PARAMETER&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;typeparameterelement&quot;&gt;유형 매개 변수&lt;/a&gt; 의 종류 는 &lt;a href=&quot;elementkind#TYPE_PARAMETER&quot;&gt; &lt;code&gt;TYPE_PARAMETER&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4e9f7190eda4edcc1a42ef655d42d597ef927397" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;typevariable&quot;&gt;type variable&lt;/a&gt; is &lt;a href=&quot;typekind#TYPEVAR&quot;&gt;&lt;code&gt;TYPEVAR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;typevariable&quot;&gt;유형 변수&lt;/a&gt; 의 종류 는 &lt;a href=&quot;typekind#TYPEVAR&quot;&gt; &lt;code&gt;TYPEVAR&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e6ae26bcf1d58aaf6ac53eb4365e0102a8c9ff70" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;uniontype&quot;&gt;union type&lt;/a&gt; is &lt;a href=&quot;typekind#UNION&quot;&gt;&lt;code&gt;UNION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">a의 종류 &lt;a href=&quot;uniontype&quot;&gt;노동 조합 유형&lt;/a&gt; 입니다 &lt;a href=&quot;typekind#UNION&quot;&gt; &lt;code&gt;UNION&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="27b973c61298fff10d4953e88923bca47f6adfb8" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;variableelement&quot;&gt;variable&lt;/a&gt; is one of &lt;a href=&quot;elementkind#ENUM_CONSTANT&quot;&gt;&lt;code&gt;ENUM_CONSTANT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#EXCEPTION_PARAMETER&quot;&gt;&lt;code&gt;EXCEPTION_PARAMETER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#FIELD&quot;&gt;&lt;code&gt;FIELD&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#LOCAL_VARIABLE&quot;&gt;&lt;code&gt;LOCAL_VARIABLE&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#PARAMETER&quot;&gt;&lt;code&gt;PARAMETER&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#RESOURCE_VARIABLE&quot;&gt;&lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;elementkind#BINDING_VARIABLE&quot;&gt;&lt;code&gt;BINDING_VARIABLE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;variableelement&quot;&gt;변수&lt;/a&gt; 의 종류는 &lt;a href=&quot;elementkind#ENUM_CONSTANT&quot;&gt; &lt;code&gt;ENUM_CONSTANT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementkind#EXCEPTION_PARAMETER&quot;&gt; &lt;code&gt;EXCEPTION_PARAMETER&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementkind#FIELD&quot;&gt; &lt;code&gt;FIELD&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementkind#LOCAL_VARIABLE&quot;&gt; &lt;code&gt;LOCAL_VARIABLE&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementkind#PARAMETER&quot;&gt; &lt;code&gt;PARAMETER&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementkind#RESOURCE_VARIABLE&quot;&gt; &lt;code&gt;RESOURCE_VARIABLE&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;elementkind#BINDING_VARIABLE&quot;&gt; &lt;code&gt;BINDING_VARIABLE&lt;/code&gt; &lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="5c3b63f81b04e4d5830705b1aa27020f3180edf9" translate="yes" xml:space="preserve">
          <source>The kind of a &lt;a href=&quot;wildcardtype&quot;&gt;wildcard type&lt;/a&gt; is &lt;a href=&quot;typekind#WILDCARD&quot;&gt;&lt;code&gt;WILDCARD&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">a의 종류 &lt;a href=&quot;wildcardtype&quot;&gt;와일드 카드 타입&lt;/a&gt; 이다 &lt;a href=&quot;typekind#WILDCARD&quot;&gt; &lt;code&gt;WILDCARD&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="3abc78cec7443be172a73f11d0ea46ef51b57125" translate="yes" xml:space="preserve">
          <source>The kind of a type mirror.</source>
          <target state="translated">타입 미러의 ​​종류.</target>
        </trans-unit>
        <trans-unit id="4a506a0d79c5e161f4d1b30d8f212c6a5dce9d50" translate="yes" xml:space="preserve">
          <source>The kind of an &lt;a href=&quot;arraytype&quot;&gt;array type&lt;/a&gt; is &lt;a href=&quot;typekind#ARRAY&quot;&gt;&lt;code&gt;ARRAY&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의 종류 &lt;a href=&quot;arraytype&quot;&gt;어레이 타입&lt;/a&gt; 이다 &lt;a href=&quot;typekind#ARRAY&quot;&gt; &lt;code&gt;ARRAY&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6a1634d159dc67cd2a8ebc7926091bd87fbd3bf2" translate="yes" xml:space="preserve">
          <source>The kind of an &lt;a href=&quot;errortype&quot;&gt;error type&lt;/a&gt; is &lt;a href=&quot;typekind#ERROR&quot;&gt;&lt;code&gt;ERROR&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의 종류 &lt;a href=&quot;errortype&quot;&gt;오류 유형&lt;/a&gt; 이다 &lt;a href=&quot;typekind#ERROR&quot;&gt; &lt;code&gt;ERROR&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="5670966a563817c9ba34d395219252d367c594f8" translate="yes" xml:space="preserve">
          <source>The kind of an &lt;a href=&quot;executableelement&quot;&gt;executable&lt;/a&gt; is one of &lt;a href=&quot;elementkind#CONSTRUCTOR&quot;&gt;&lt;code&gt;CONSTRUCTOR&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#INSTANCE_INIT&quot;&gt;&lt;code&gt;INSTANCE_INIT&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;elementkind#METHOD&quot;&gt;&lt;code&gt;METHOD&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;elementkind#STATIC_INIT&quot;&gt;&lt;code&gt;STATIC_INIT&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;executableelement&quot;&gt;실행 파일&lt;/a&gt; 의 종류는 &lt;a href=&quot;elementkind#CONSTRUCTOR&quot;&gt; &lt;code&gt;CONSTRUCTOR&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementkind#INSTANCE_INIT&quot;&gt; &lt;code&gt;INSTANCE_INIT&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;elementkind#METHOD&quot;&gt; &lt;code&gt;METHOD&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;elementkind#STATIC_INIT&quot;&gt; &lt;code&gt;STATIC_INIT&lt;/code&gt; &lt;/a&gt; 중 하나입니다 .</target>
        </trans-unit>
        <trans-unit id="f2fa2601b17d2271b1860560383affe4c801e5a6" translate="yes" xml:space="preserve">
          <source>The kind of an &lt;a href=&quot;executabletype&quot;&gt;executable type&lt;/a&gt; is &lt;a href=&quot;typekind#EXECUTABLE&quot;&gt;&lt;code&gt;EXECUTABLE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의 종류 &lt;a href=&quot;executabletype&quot;&gt;실행 유형&lt;/a&gt; 입니다 &lt;a href=&quot;typekind#EXECUTABLE&quot;&gt; &lt;code&gt;EXECUTABLE&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="fa41dd0817c33c95f01eaced29c8603d0197d9d8" translate="yes" xml:space="preserve">
          <source>The kind of an &lt;a href=&quot;intersectiontype&quot;&gt;intersection type&lt;/a&gt; is &lt;a href=&quot;typekind#INTERSECTION&quot;&gt;&lt;code&gt;INTERSECTION&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">의 종류 &lt;a href=&quot;intersectiontype&quot;&gt;교차 유형&lt;/a&gt; 입니다 &lt;a href=&quot;typekind#INTERSECTION&quot;&gt; &lt;code&gt;INTERSECTION&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="366b95d924ff6501d52b605623a321dad99e28c5" translate="yes" xml:space="preserve">
          <source>The kind of an &lt;a href=&quot;moduleelement.exportsdirective&quot;&gt;exports directive&lt;/a&gt; is &lt;a href=&quot;moduleelement.directivekind#EXPORTS&quot;&gt;&lt;code&gt;EXPORTS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;moduleelement.exportsdirective&quot;&gt;내보내기 지시문&lt;/a&gt; 의 종류 는 &lt;a href=&quot;moduleelement.directivekind#EXPORTS&quot;&gt; &lt;code&gt;EXPORTS&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="55f9d38772b783b6901c43fb708f0728b62dc03d" translate="yes" xml:space="preserve">
          <source>The kind of an &lt;a href=&quot;moduleelement.opensdirective&quot;&gt;opens directive&lt;/a&gt; is &lt;a href=&quot;moduleelement.directivekind#OPENS&quot;&gt;&lt;code&gt;OPENS&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;moduleelement.opensdirective&quot;&gt;opens 지시문&lt;/a&gt; 의 종류 는 &lt;a href=&quot;moduleelement.directivekind#OPENS&quot;&gt; &lt;code&gt;OPENS&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="149c5b00c88e251d2c8a1a22ada686ab5b08b553" translate="yes" xml:space="preserve">
          <source>The kind of an attribute value.</source>
          <target state="translated">속성 값의 종류입니다.</target>
        </trans-unit>
        <trans-unit id="8828dfe29f1a7b20a060ba70739da4de66cee953" translate="yes" xml:space="preserve">
          <source>The kind of an option.</source>
          <target state="translated">옵션의 종류.</target>
        </trans-unit>
        <trans-unit id="b55a64a58b1a8a3a0a94999b0d9d71bcdaa8ce43" translate="yes" xml:space="preserve">
          <source>The kind of location in which a tag may be used.</source>
          <target state="translated">태그를 사용할 수있는 위치의 종류입니다.</target>
        </trans-unit>
        <trans-unit id="90121a0d321cbdac9d35ced0fd1856a834f7533e" translate="yes" xml:space="preserve">
          <source>The kind of the module.</source>
          <target state="translated">모듈의 종류.</target>
        </trans-unit>
        <trans-unit id="e71bcb16dc077322da2b88fd1337ba338c4914a1" translate="yes" xml:space="preserve">
          <source>The kind of this file object.</source>
          <target state="translated">이 파일 객체의 종류입니다.</target>
        </trans-unit>
        <trans-unit id="b72b3d0d1ce95271f47b359eb4749826724d0d57" translate="yes" xml:space="preserve">
          <source>The label of an event class can be set with &lt;a href=&quot;label&quot;&gt;&lt;code&gt;Label&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이벤트 클래스의 레이블은 &lt;a href=&quot;label&quot;&gt; &lt;code&gt;Label&lt;/code&gt; &lt;/a&gt; 로 설정할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="141dd3c5cb7eba596a30aeaf19bfe3fe567f98aa" translate="yes" xml:space="preserve">
          <source>The label should not be used as an identifier, see &lt;a href=&quot;name&quot;&gt;&lt;code&gt;Name&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">레이블을 식별자로 사용해서는 안됩니다 . &lt;a href=&quot;name&quot;&gt; &lt;code&gt;Name&lt;/code&gt; &lt;/a&gt; 참조 하십시오 .</target>
        </trans-unit>
        <trans-unit id="24838371a11c2732eaa99a0fcc229f55490881e5" translate="yes" xml:space="preserve">
          <source>The label text displayed on the approve button when a directory is selected and the current selection mode is FILES_ONLY.</source>
          <target state="translated">디렉토리가 선택되고 현재 선택 모드가 FILES_ONLY 일 때 승인 버튼에 표시되는 레이블 텍스트입니다.</target>
        </trans-unit>
        <trans-unit id="060ad24a2e020eedaf95c63bf56985e351899937" translate="yes" xml:space="preserve">
          <source>The language code &quot;und&quot; is mapped to language &quot;&quot;.</source>
          <target state="translated">언어 코드 &quot;und&quot;는 언어 &quot;&quot;에 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="eed90a84dfe6824cdfb069525f0a0cdbf5c234ed" translate="yes" xml:space="preserve">
          <source>The language code, or the empty string if none is defined.</source>
          <target state="translated">언어 코드 또는 정의되지 않은 경우 빈 문자열</target>
        </trans-unit>
        <trans-unit id="098e8da937e9d6a746c9e6894744ca7720a21e02" translate="yes" xml:space="preserve">
          <source>The language codes &quot;he&quot;, &quot;yi&quot;, and &quot;id&quot; are mapped to &quot;iw&quot;, &quot;ji&quot;, and &quot;in&quot; respectively. (This is the same canonicalization that's done in Locale's constructors.)</source>
          <target state="translated">언어 코드 &quot;he&quot;, &quot;yi&quot;및 &quot;id&quot;는 각각 &quot;iw&quot;, &quot;ji&quot;및 &quot;in&quot;에 매핑됩니다. (이것은 로케일의 생성자에서 수행 된 것과 동일한 정식화입니다.)</target>
        </trans-unit>
        <trans-unit id="ab199358c4c30717fef9325e862f54f258b020c1" translate="yes" xml:space="preserve">
          <source>The large capacity input tray in the printer.</source>
          <target state="translated">프린터의 대용량 입력 용지함.</target>
        </trans-unit>
        <trans-unit id="4065b23b870a90c8d978a1b147aeaad63f54d921" translate="yes" xml:space="preserve">
          <source>The largest acceptable size for the thumb.</source>
          <target state="translated">엄지 손가락에 허용되는 최대 크기입니다.</target>
        </trans-unit>
        <trans-unit id="a4047539503997b6709f1736adf335f568d1db43" translate="yes" xml:space="preserve">
          <source>The largest reasonable width/height of the component or component group, in pixels.</source>
          <target state="translated">구성 요소 또는 구성 요소 그룹의 적절한 가장 큰 너비 / 높이 (픽셀 단위)입니다.</target>
        </trans-unit>
        <trans-unit id="87a66203f240a0446e3e56749de0de7014433cb7" translate="yes" xml:space="preserve">
          <source>The largest valid &lt;code&gt;CHILD_POLICY_*&lt;/code&gt; constant, to be used for range checks.</source>
          <target state="translated">범위 점검에 사용될 가장 큰 유효한 &lt;code&gt;CHILD_POLICY_*&lt;/code&gt; 상수.</target>
        </trans-unit>
        <trans-unit id="042615e8f7e4ca7fe481b68f5839de05b2ef7dac" translate="yes" xml:space="preserve">
          <source>The last &lt;code&gt;viewPosition&lt;/code&gt; that we've painted, so we know how much of the backing store image is valid.</source>
          <target state="translated">우리가 그린 마지막 &lt;code&gt;viewPosition&lt;/code&gt; 이므로 백업 스토어 이미지가 얼마나 유효한지 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="63c95d7f54d8b200cb320258b2605a3a1ecdb740" translate="yes" xml:space="preserve">
          <source>The last access time is from the extended timestamp fields of entry's &lt;code&gt;optional extra data&lt;/code&gt; when read from a ZIP file or ZIP file formatted stream.</source>
          <target state="translated">마지막 액세스 시간은 ZIP 파일 또는 ZIP 파일 형식의 스트림에서 읽을 때 항목의 &lt;code&gt;optional extra data&lt;/code&gt; 의 확장 된 시간 소인 필드 에서 가져옵니다.</target>
        </trans-unit>
        <trans-unit id="018404389cff4be23d8a44b9b108e339eccb815f" translate="yes" xml:space="preserve">
          <source>The last access time of the entry, null if not specified</source>
          <target state="translated">항목의 마지막 액세스 시간. 지정되지 않은 경우 null</target>
        </trans-unit>
        <trans-unit id="fe1aba57c57c1ac2f063c8c6fe24c263634b58f4" translate="yes" xml:space="preserve">
          <source>The last boundary before the specified offset or &lt;code&gt;BreakIterator.DONE&lt;/code&gt; if the first text boundary is passed in as the offset.</source>
          <target state="translated">지정된 오프셋 이전의 마지막 경계 또는 첫 번째 텍스트 경계가 오프셋으로 전달 된 경우 &lt;code&gt;BreakIterator.DONE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b438429a36288d32e766c2b54edee92101e89ca1" translate="yes" xml:space="preserve">
          <source>The last child of this node.</source>
          <target state="translated">이 노드의 마지막 자식입니다.</target>
        </trans-unit>
        <trans-unit id="d90655fc682934476ffa5413f1cd86a86ea41209" translate="yes" xml:space="preserve">
          <source>The last child of this node. If there is no such node, this returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 노드의 마지막 자식입니다. 그러한 노드가 없으면 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="b05f3ad1e679d3642ea5ebb7a2df031a3faf24c6" translate="yes" xml:space="preserve">
          <source>The last column</source>
          <target state="translated">마지막 열</target>
        </trans-unit>
        <trans-unit id="39d734b7eda93fa8a5f0567cb50de31f210e478a" translate="yes" xml:space="preserve">
          <source>The last edit added to this &lt;code&gt;CompoundEdit&lt;/code&gt; is given a chance to &lt;code&gt;addEdit(anEdit)&lt;/code&gt;. If it refuses (returns false), &lt;code&gt;anEdit&lt;/code&gt; is given a chance to &lt;code&gt;replaceEdit&lt;/code&gt; the last edit. If &lt;code&gt;anEdit&lt;/code&gt; returns false here, it is added to &lt;code&gt;edits&lt;/code&gt;.</source>
          <target state="translated">이 &lt;code&gt;CompoundEdit&lt;/code&gt; 에 마지막으로 추가 된 편집에는 &lt;code&gt;addEdit(anEdit)&lt;/code&gt; 기회가 주어집니다 . 거부하면 (false 반환), &lt;code&gt;anEdit&lt;/code&gt; 는 마지막 편집 을 &lt;code&gt;replaceEdit&lt;/code&gt; 할 기회가 주어집니다 . 경우 &lt;code&gt;anEdit&lt;/code&gt; 는이 여기 false를 반환이 추가됩니다 &lt;code&gt;edits&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="3786764214c419fc8c5e1b4f929d864bbcb97cc1" translate="yes" xml:space="preserve">
          <source>The last example assumes that the extra arguments are of type &lt;code&gt;CONSTANT_String&lt;/code&gt; and &lt;code&gt;CONSTANT_Integer&lt;/code&gt;, respectively. The second-to-last example assumes that all extra arguments are of type &lt;code&gt;CONSTANT_String&lt;/code&gt;. The other examples work with all types of extra arguments.</source>
          <target state="translated">마지막 예는 추가 인수가 각각 &lt;code&gt;CONSTANT_String&lt;/code&gt; 및 &lt;code&gt;CONSTANT_Integer&lt;/code&gt; 유형이라고 가정합니다 . 두 번째부터 마지막까지의 예제는 모든 추가 인수가 &lt;code&gt;CONSTANT_String&lt;/code&gt; 유형이라고 가정합니다 . 다른 예제는 모든 유형의 추가 인수와 함께 작동합니다.</target>
        </trans-unit>
        <trans-unit id="4f1d594e084594230e4357bd7bf2b39b4cde74ca" translate="yes" xml:space="preserve">
          <source>The last example assumes that the extra arguments are of type &lt;code&gt;String&lt;/code&gt; and &lt;code&gt;Integer&lt;/code&gt; (or &lt;code&gt;int&lt;/code&gt;), respectively. The second-to-last example assumes that all extra arguments are of type &lt;code&gt;String&lt;/code&gt;. The other examples work with all types of extra arguments. Note that all the examples except the second and third also work with dynamically-computed constants if the return type is changed to be compatible with the constant's declared type (such as &lt;code&gt;Object&lt;/code&gt;, which is always compatible).</source>
          <target state="translated">마지막 예제에서는 추가 인수가 각각 &lt;code&gt;String&lt;/code&gt; 및 &lt;code&gt;Integer&lt;/code&gt; (또는 &lt;code&gt;int&lt;/code&gt; ) 유형이라고 가정합니다 . 마지막 두 번째 예제에서는 모든 추가 인수가 &lt;code&gt;String&lt;/code&gt; 유형이라고 가정합니다 . 다른 예제는 모든 유형의 추가 인수와 함께 작동합니다. 반환 유형이 상수의 선언 된 유형과 호환되도록 변경된 경우 두 번째 및 세 번째를 제외한 모든 예제도 동적으로 계산 된 상수와 함께 작동합니다 (예 : 항상 호환되는 &lt;code&gt;Object&lt;/code&gt; ).</target>
        </trans-unit>
        <trans-unit id="b90ed7ca70d3a841924037be711880b436dc3571" translate="yes" xml:space="preserve">
          <source>The last exception thrown by the Appendable or &lt;code&gt;null&lt;/code&gt; if no such exception exists.</source>
          <target state="translated">Appendable이 마지막으로 throw 한 예외 또는 해당 예외가 없으면 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="04079ef138add28eebb8f572cbade8dbe2eced17" translate="yes" xml:space="preserve">
          <source>The last line will print &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt;.</source>
          <target state="translated">마지막 줄은 &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt; 인쇄 합니다.</target>
        </trans-unit>
        <trans-unit id="16c00d55a4101ed7505b7fc71de8beab93af645d" translate="yes" xml:space="preserve">
          <source>The last line will print &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt;. The &lt;a href=&quot;#unescapeValue(java.lang.String)&quot;&gt;&lt;code&gt;unescapeValue()&lt;/code&gt;&lt;/a&gt; method can be used to unescape the escaped comma resulting in the original value &lt;code&gt;&quot;Juicy, Fruit&quot;&lt;/code&gt;. The &lt;a href=&quot;#escapeValue(java.lang.Object)&quot;&gt;&lt;code&gt;escapeValue()&lt;/code&gt;&lt;/a&gt; method adds the escape back preceding the comma.</source>
          <target state="translated">마지막 줄은 &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt; 인쇄 합니다. &lt;a href=&quot;#unescapeValue(java.lang.String)&quot;&gt; &lt;code&gt;unescapeValue()&lt;/code&gt; &lt;/a&gt; 메소드는 원래의 값으로 인한 도주 콤마 이스케이프를 위해 사용될 수있는 &lt;code&gt;&quot;Juicy, Fruit&quot;&lt;/code&gt; . &lt;a href=&quot;#escapeValue(java.lang.Object)&quot;&gt; &lt;code&gt;escapeValue()&lt;/code&gt; &lt;/a&gt; 메소드는 쉼표 앞에 이스케이프 다시 추가합니다.</target>
        </trans-unit>
        <trans-unit id="c36ea3c145fcf0621af5506876da5c006b8fc7c5" translate="yes" xml:space="preserve">
          <source>The last line will print &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt;. The &lt;a href=&quot;rdn#unescapeValue-java.lang.String-&quot;&gt;&lt;code&gt;&lt;code&gt;unescapeValue()&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method can be used to unescape the escaped comma resulting in the original value &lt;code&gt;&quot;Juicy, Fruit&quot;&lt;/code&gt;. The &lt;a href=&quot;rdn#escapeValue-java.lang.Object-&quot;&gt;&lt;code&gt;&lt;code&gt;escapeValue()&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; method adds the escape back preceding the comma.</source>
          <target state="translated">마지막 줄은 &lt;code&gt;cn=Juicy\, Fruit&lt;/code&gt; 인쇄 합니다. &lt;a href=&quot;rdn#unescapeValue-java.lang.String-&quot;&gt; &lt;code&gt;&lt;code&gt;unescapeValue()&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 메소드는 원래의 값으로 인한 도주 콤마 이스케이프를 위해 사용될 수있는 &lt;code&gt;&quot;Juicy, Fruit&quot;&lt;/code&gt; . &lt;a href=&quot;rdn#escapeValue-java.lang.Object-&quot;&gt; &lt;code&gt;&lt;code&gt;escapeValue()&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 메소드는 쉼표 앞에 이스케이프 다시 추가합니다.</target>
        </trans-unit>
        <trans-unit id="6704a2570d140aa6d4d1a0195309b7cded09294b" translate="yes" xml:space="preserve">
          <source>The last low order bit is always ignored as this corresponds to the MBZ (must be zero) bit.</source>
          <target state="translated">마지막 하위 비트는 MBZ (0이어야 함) 비트에 해당하므로 항상 무시됩니다.</target>
        </trans-unit>
        <trans-unit id="9c42346f1311bb8f9376444bec038d823340d058" translate="yes" xml:space="preserve">
          <source>The last method called on the reader.</source>
          <target state="translated">독자에게 호출 된 마지막 메서드입니다.</target>
        </trans-unit>
        <trans-unit id="181209f3bb70c71f89a85a76af54339a74a94fbb" translate="yes" xml:space="preserve">
          <source>The last method called on the reader. It allows any pending changes to be flushed into the document. Since this is currently loading synchronously, the entire set of changes are pushed in at this point.</source>
          <target state="translated">독자에게 호출 된 마지막 메서드입니다. 보류중인 변경 사항을 문서로 플러시 할 수 있습니다. 현재 동기식으로로드 중이므로이 시점에서 전체 변경 사항 집합이 푸시됩니다.</target>
        </trans-unit>
        <trans-unit id="d12b5f31c0f846b9270a88fcc19d75c11add62d8" translate="yes" xml:space="preserve">
          <source>The last modification time of the entry in local date-time</source>
          <target state="translated">로컬 날짜-시간 항목의 마지막 수정 시간</target>
        </trans-unit>
        <trans-unit id="136ced763d4f0395ea838a91b0392e85ac9d09ec" translate="yes" xml:space="preserve">
          <source>The last modification time of the entry in milliseconds since the epoch, or -1 if not specified</source>
          <target state="translated">신기원 이후 엔트리의 마지막 수정 시간 (밀리 초) 또는 지정되지 않은 경우 -1</target>
        </trans-unit>
        <trans-unit id="d8097498df46abde4481e8c5cf7533f5f787ec54" translate="yes" xml:space="preserve">
          <source>The last modification time of the entry, null if not specified</source>
          <target state="translated">항목의 마지막 수정 시간. 지정하지 않으면 null</target>
        </trans-unit>
        <trans-unit id="4ae9fa4acb1e8204c952823554c5745571d95e66" translate="yes" xml:space="preserve">
          <source>The last number in the range of IDs used for internal frame events.</source>
          <target state="translated">내부 프레임 이벤트에 사용되는 ID 범위의 마지막 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="8c94343c4851dd263ca740ac6649adf12af19d18" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for action events.</source>
          <target state="translated">조치 이벤트에 사용되는 ID 범위의 마지막 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="f6ed12e9a6b12a22c4a1f6a2641b77dc40668de8" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for component events.</source>
          <target state="translated">구성 요소 이벤트에 사용되는 ID 범위의 마지막 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="6ae55d137704a05f9f1458a052a01ca71de805c5" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for container events.</source>
          <target state="translated">컨테이너 이벤트에 사용되는 ID 범위의 마지막 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="3843eb877a32e9dba757037c54330c63c77e3ec2" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for focus events.</source>
          <target state="translated">포커스 이벤트에 사용되는 ID 범위의 마지막 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="95989ce6173eee87283f755eeb7916d793d3a551" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for item events.</source>
          <target state="translated">항목 이벤트에 사용되는 ID 범위의 마지막 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="cac645452d55f9b450d35d48e35c759312f739dc" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for key events.</source>
          <target state="translated">키 이벤트에 사용되는 ID 범위의 마지막 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="9e356e925e05441038ce8f86048dd79a37e896ba" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for mouse events.</source>
          <target state="translated">마우스 이벤트에 사용되는 ID 범위의 마지막 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="a8fe649447f3efb24aa206f3bfb7116d646a397d" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for text events.</source>
          <target state="translated">텍스트 이벤트에 사용되는 ID 범위의 마지막 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="8919efb69d38c4583f7e96922e023f30250ca01a" translate="yes" xml:space="preserve">
          <source>The last number in the range of ids used for window events.</source>
          <target state="translated">창 이벤트에 사용되는 ID 범위의 마지막 숫자입니다.</target>
        </trans-unit>
        <trans-unit id="8f4d29e940c417fddff123f783468855cfe4eab2" translate="yes" xml:space="preserve">
          <source>The last row</source>
          <target state="translated">마지막 행</target>
        </trans-unit>
        <trans-unit id="07a7eab075194af4ad162905352b91efdbcf875e" translate="yes" xml:space="preserve">
          <source>The last row that has changed.</source>
          <target state="translated">변경된 마지막 행입니다.</target>
        </trans-unit>
        <trans-unit id="b6bceffcf31fdaadf2098b38a902b0d82ea3fde8" translate="yes" xml:space="preserve">
          <source>The last seen allocation (for repainting when changes are flushed upward).</source>
          <target state="translated">마지막으로 본 할당 (변경 사항이 위로 플러시 될 때 다시 그리기)</target>
        </trans-unit>
        <trans-unit id="eaa1d51eb137e5542fe1128506eda2fbb9582580" translate="yes" xml:space="preserve">
          <source>The last significant edit is &lt;b&gt;A&lt;/b&gt;, so that invoking &lt;code&gt;undo&lt;/code&gt; again invokes &lt;code&gt;undo&lt;/code&gt; on</source>
          <target state="translated">마지막 중요한 편집은 &lt;b&gt;A&lt;/b&gt; 이므로 &lt;code&gt;undo&lt;/code&gt; 다시 호출 &lt;code&gt;undo&lt;/code&gt; 에서 실행 취소 가 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="8b0079f1492d37c87c9a6e2434f8a080dfc40767" translate="yes" xml:space="preserve">
          <source>The last stop in writing out content.</source>
          <target state="translated">콘텐츠 작성의 마지막 중지.</target>
        </trans-unit>
        <trans-unit id="bf947b882b123cacd97631120521a2da8a1d042a" translate="yes" xml:space="preserve">
          <source>The last stop in writing out content. All the write methods eventually make it to this method, which invokes &lt;code&gt;write&lt;/code&gt; on the Writer.</source>
          <target state="translated">콘텐츠 작성의 마지막 중지. 결국 모든 쓰기 메서드는이 메서드를 &lt;code&gt;write&lt;/code&gt; 하여 Writer에 대한 쓰기 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="3181bd7eca0b7159c1c88cf63d3760586057c6df" translate="yes" xml:space="preserve">
          <source>The last thread arrives; or</source>
          <target state="translated">마지막 실이 도착합니다. 또는</target>
        </trans-unit>
        <trans-unit id="24921a8e3a7f2cbc396820ff95cee47630697935" translate="yes" xml:space="preserve">
          <source>The last value returned by an operation may be cached in the operation's descriptor which is in the ModelMBeanOperationInfo's descriptor. The valid value will be in the 'value' field if there is one. If the 'currencyTimeLimit' field in the descriptor is:</source>
          <target state="translated">오퍼레이션에 의해 리턴 된 마지막 값은 ModelMBeanOperationInfo 디스크립터에있는 오퍼레이션 디스크립터에 캐시 될 수 있습니다. 유효한 값은 '값'필드에 있습니다 (있는 경우). 디스크립터의 'currencyTimeLimit'필드가 다음과 같은 경우 :</target>
        </trans-unit>
        <trans-unit id="65d00f7b5812b299404a119144f3c9040ae7f32b" translate="yes" xml:space="preserve">
          <source>The latter is typically used when you want a more complex user interaction that requires custom components on the tab. For example, you could provide a custom component that animates or one that has widgets for closing the tab.</source>
          <target state="translated">후자는 일반적으로 탭에서 사용자 지정 구성 요소가 필요한보다 복잡한 사용자 상호 작용을 원할 때 사용됩니다. 예를 들어, 애니메이션을 적용하는 사용자 정의 구성 요소 또는 탭을 닫기위한 위젯이있는 구성 요소를 제공 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="425594d3660745a66391869dc19be9ecfcfbfa9f" translate="yes" xml:space="preserve">
          <source>The latter sequence of calls is inferred to be able to throw the additional exception types &lt;a href=&quot;reflect/invocationtargetexception&quot;&gt;&lt;code&gt;InvocationTargetException&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;nosuchmethodexception&quot;&gt;&lt;code&gt;NoSuchMethodException&lt;/code&gt;&lt;/a&gt;. Both of these exception types are subclasses of &lt;a href=&quot;reflectiveoperationexception&quot;&gt;&lt;code&gt;ReflectiveOperationException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">후자의 호출 시퀀스는 추가 예외 유형 &lt;a href=&quot;reflect/invocationtargetexception&quot;&gt; &lt;code&gt;InvocationTargetException&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;nosuchmethodexception&quot;&gt; &lt;code&gt;NoSuchMethodException&lt;/code&gt; 을&lt;/a&gt; 발생시킬 수 있도록 추론됩니다 . 이러한 예외 유형은 모두 &lt;a href=&quot;reflectiveoperationexception&quot;&gt; &lt;code&gt;ReflectiveOperationException&lt;/code&gt; 의&lt;/a&gt; 하위 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="c777bc44eac4ac0d9bdb1525116876d69d411dcc" translate="yes" xml:space="preserve">
          <source>The launch= value</source>
          <target state="translated">launch = 값</target>
        </trans-unit>
        <trans-unit id="525093ff647ddbbdbc48ca2cdc3100fde45b2b7a" translate="yes" xml:space="preserve">
          <source>The layer attribute can also be set on a Component by calling</source>
          <target state="translated">계층 속성은 다음을 호출하여 구성 요소에 설정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="e670c82bc63797a1c361d38b43da5fb16f5d0be9" translate="yes" xml:space="preserve">
          <source>The layer used for modal dialogs. They will appear on top of any toolbars, palettes, or standard components in the container.</source>
          <target state="translated">모달 대화 상자에 사용되는 레이어입니다. 컨테이너의 도구 모음, 팔레트 또는 표준 구성 요소 위에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="061909bc6c6b3e145805a5f7a76712768e861d0c" translate="yes" xml:space="preserve">
          <source>The layered pane that manages the menu bar and content pane.</source>
          <target state="translated">메뉴 모음과 콘텐츠 창을 관리하는 계층화 된 창입니다.</target>
        </trans-unit>
        <trans-unit id="3e6e7dcb9d0607b26b2e9b733f6cd19b14cc410c" translate="yes" xml:space="preserve">
          <source>The layeredPane may not be null.</source>
          <target state="translated">layeredPane은 null 일 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4eeeff1cbbabee35cb669977c67cd53625a7f370" translate="yes" xml:space="preserve">
          <source>The layout before floating.</source>
          <target state="translated">플로팅 전 레이아웃입니다.</target>
        </trans-unit>
        <trans-unit id="1b212702428106a780f398f622b94efb2a72b7ca" translate="yes" xml:space="preserve">
          <source>The layout manager used by &lt;code&gt;JScrollPane&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;JScrollPane&lt;/code&gt; 에서 사용하는 레이아웃 관리자 입니다 .</target>
        </trans-unit>
        <trans-unit id="ab281cd69ca0da4ac757a9384d1d4174c09420b4" translate="yes" xml:space="preserve">
          <source>The layout manager used by &lt;code&gt;JScrollPane&lt;/code&gt;. &lt;code&gt;JScrollPaneLayout&lt;/code&gt; is responsible for nine components: a viewport, two scrollbars, a row header, a column header, and four &quot;corner&quot; components.</source>
          <target state="translated">&lt;code&gt;JScrollPane&lt;/code&gt; 에서 사용하는 레이아웃 관리자 입니다 . &lt;code&gt;JScrollPaneLayout&lt;/code&gt; 은 뷰포트, 스크롤바 2 개, 행 헤더, 열 헤더 및 4 개의 &quot;코너&quot;구성 요소의 9 개 구성 요소를 담당합니다.</target>
        </trans-unit>
        <trans-unit id="63aeb45ca03701efe224b5a47a306b484bafc9b8" translate="yes" xml:space="preserve">
          <source>The layout must be valid prior to attempting to make the translation. The translation is not valid, and must not be attempted while changes are being broadcasted from the model via a &lt;code&gt;DocumentEvent&lt;/code&gt;.</source>
          <target state="translated">번역을 시도하기 전에 레이아웃이 유효해야합니다. 번역이 유효하지 않으며 변경 사항이 &lt;code&gt;DocumentEvent&lt;/code&gt; 를 통해 모델에서 브로드 캐스팅되는 동안 시도해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="0c946e02cf7bb113bde4f4cf3943bb511e4009b7" translate="yes" xml:space="preserve">
          <source>The layout of a variant 2 (Leach-Salz) UUID is as follows: The most significant long consists of the following unsigned fields:</source>
          <target state="translated">변형 2 (Leach-Salz) UUID의 레이아웃은 다음과 같습니다. 가장 중요한 long은 다음 부호없는 필드로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="1ef51f3136fcb1fac789f5890c185fdf389223f5" translate="yes" xml:space="preserve">
          <source>The lead TreePath is the last path that was added (or set). The lead row is then the row that corresponds to the TreePath as determined from the RowMapper.</source>
          <target state="translated">리드 TreePath는 추가 (또는 설정) 된 마지막 경로입니다. 리드 행은 RowMapper에서 결정된대로 TreePath에 해당하는 행입니다.</target>
        </trans-unit>
        <trans-unit id="f1682937acc10a90e095bee4b77c7dde9712bf4d" translate="yes" xml:space="preserve">
          <source>The lead path is set to the last element in &lt;code&gt;paths&lt;/code&gt;.</source>
          <target state="translated">인출 경로에서 마지막 요소에 설정되어 &lt;code&gt;paths&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d20a4f2226831a6decc443b64178bf6260a3eab0" translate="yes" xml:space="preserve">
          <source>The lead path is set to the last unique path.</source>
          <target state="translated">리드 경로는 마지막 고유 경로로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="3834488d7096f73cdf61b2e3a27c485e7092a6ae" translate="yes" xml:space="preserve">
          <source>The leading &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;white space&lt;/a&gt; characters on the last line are also counted even if &lt;a href=&quot;#isBlank()&quot;&gt;blank&lt;/a&gt;.</source>
          <target state="translated">마지막 줄 의 선행 &lt;a href=&quot;character#isWhitespace(int)&quot;&gt;공백&lt;/a&gt; 문자도 &lt;a href=&quot;#isBlank()&quot;&gt;비어&lt;/a&gt; 있어도 계산됩니다 .</target>
        </trans-unit>
        <trans-unit id="d9dddc27cf2fa85a276add3f7964382de560568e" translate="yes" xml:space="preserve">
          <source>The leading edge is based on the axis and &lt;code&gt;
 ComponentOrientation&lt;/code&gt;. For the vertical axis the top edge is always the leading edge, and the bottom edge is always the trailing edge. When the &lt;code&gt;ComponentOrientation&lt;/code&gt; is &lt;code&gt;
 LEFT_TO_RIGHT&lt;/code&gt;, the leading edge is the left edge and the trailing edge the right edge. A &lt;code&gt;ComponentOrientation&lt;/code&gt; of &lt;code&gt;RIGHT_TO_LEFT&lt;/code&gt; flips the left and right edges. Child elements are aligned based on the specified alignment the element was added with. If you do not specify an alignment, the alignment specified for the &lt;code&gt;ParallelGroup&lt;/code&gt; is used.</source>
          <target state="translated">앞쪽 가장자리는 축 및 &lt;code&gt; ComponentOrientation&lt;/code&gt; 을 기반으로합니다 . 수직 축의 경우 위쪽 가장자리는 항상 앞쪽 가장자리이고 아래쪽 가장자리는 항상 뒤쪽 가장자리입니다. 때 &lt;code&gt;ComponentOrientation&lt;/code&gt; 있다 &lt;code&gt; LEFT_TO_RIGHT&lt;/code&gt; , 첨단 왼쪽 가장자리와 후행 가장자리 오른쪽 가장자리입니다. &lt;code&gt;ComponentOrientation&lt;/code&gt; 의 &lt;code&gt;RIGHT_TO_LEFT&lt;/code&gt; 는 왼쪽과 오른쪽 가장자리를 뒤집습니다. 자식 요소는 요소가 추가 된 지정된 정렬을 기반으로 정렬됩니다. 정렬을 지정하지 않으면 &lt;code&gt;ParallelGroup&lt;/code&gt; 에 지정된 정렬 이 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="17cff58578c91a8d50007c245887e9d13f0ca29a" translate="yes" xml:space="preserve">
          <source>The leading is computed from the leading, descent, and baseline of all glyphvectors in the &lt;code&gt;TextLayout&lt;/code&gt;. The algorithm is roughly as follows:</source>
          <target state="translated">행간은 &lt;code&gt;TextLayout&lt;/code&gt; 에있는 모든 글리프 벡터의 행간, 하강 및 기준선에서 계산됩니다 . 알고리즘은 대략 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7af9b55c9143f8cca06d1210ae464e4b24586bea" translate="yes" xml:space="preserve">
          <source>The leading plus/minus sign, and negative values for other units are not part of the ISO-8601 standard.</source>
          <target state="translated">다른 단위의 선행 플러스 / 마이너스 부호 및 음수 값은 ISO-8601 표준의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="b8afe06a23c97844adb78033caa70b9b0d3bbee8" translate="yes" xml:space="preserve">
          <source>The leading plus/minus sign, and negative values for other units are not part of the ISO-8601 standard. In addition, ISO-8601 does not permit mixing between the &lt;code&gt;PnYnMnD&lt;/code&gt; and &lt;code&gt;PnW&lt;/code&gt; formats. Any week-based input is multiplied by 7 and treated as a number of days.</source>
          <target state="translated">다른 단위의 선행 더하기 / 빼기 기호 및 음수 값은 ISO-8601 표준의 일부가 아닙니다. 또한 ISO-8601은 &lt;code&gt;PnYnMnD&lt;/code&gt; 와 &lt;code&gt;PnW&lt;/code&gt; 형식의 혼합을 허용하지 않습니다 . 모든 주 기반 입력에 7을 곱하고 며칠로 처리합니다.</target>
        </trans-unit>
        <trans-unit id="63cecf4a8fa95d4d0270f57a3e75af217a6a1a81" translate="yes" xml:space="preserve">
          <source>The least significant 64 bits of this UUID's 128 bit value</source>
          <target state="translated">이 UUID 128 비트 값 중 최하위 64 비트</target>
        </trans-unit>
        <trans-unit id="a83da07b2f48d8970311283f85c7e3bac23d44ea" translate="yes" xml:space="preserve">
          <source>The least significant long consists of the following unsigned fields:</source>
          <target state="translated">최하위 길이는 다음과 같은 부호없는 필드로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="a2f3185970f510e8441751a15794c894d3ec5120" translate="yes" xml:space="preserve">
          <source>The left inset of the border.</source>
          <target state="translated">테두리의 왼쪽 삽입.</target>
        </trans-unit>
        <trans-unit id="2b87abbdcc21cbd8f730b01cb369d0a0fb5d7daa" translate="yes" xml:space="preserve">
          <source>The left or top component.</source>
          <target state="translated">왼쪽 또는 상단 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="ba1e2b2bee4af48713fe9094a6295309b86010e3" translate="yes" xml:space="preserve">
          <source>The legal values for &lt;code&gt;calendarField&lt;/code&gt; are:</source>
          <target state="translated">&lt;code&gt;calendarField&lt;/code&gt; 의 유효한 값 은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="90796de19f379c872e10f161378da6519c486d81" translate="yes" xml:space="preserve">
          <source>The length of &lt;code&gt;identifier&lt;/code&gt; is less than 1 or greater than 128 characters</source>
          <target state="translated">&lt;code&gt;identifier&lt;/code&gt; 길이 가 1 자 미만이거나 128 자보다 큽니다.</target>
        </trans-unit>
        <trans-unit id="41a95b6715d8d8c27a219e7e506b9f0ffacf1046" translate="yes" xml:space="preserve">
          <source>The length of a tick.</source>
          <target state="translated">진드기의 길이.</target>
        </trans-unit>
        <trans-unit id="87c3957c33024c262a7af561fbc4382beb1c10cd" translate="yes" xml:space="preserve">
          <source>The length of each month is 29 or 30 days. Ordinary years have 354 days; leap years have 355 days.</source>
          <target state="translated">매월 길이는 29 일 또는 30 일입니다. 보통 354 일이 있습니다. 윤년에는 355 일이 있습니다.</target>
        </trans-unit>
        <trans-unit id="ddbb38752fc76e23de090a340e192731d09329a6" translate="yes" xml:space="preserve">
          <source>The length of the MIDI file in bytes.</source>
          <target state="translated">MIDI 파일의 길이 (바이트)입니다.</target>
        </trans-unit>
        <trans-unit id="d2435fa816d6768395fd2a4aa385ef8e24c5ddee" translate="yes" xml:space="preserve">
          <source>The length of the array is the number of methods on the execution stack. The element at index &lt;code&gt;0&lt;/code&gt; is the class of the currently executing method, the element at index &lt;code&gt;1&lt;/code&gt; is the class of that method's caller, and so on.</source>
          <target state="translated">배열의 길이는 실행 스택의 메소드 수입니다. 인덱스 &lt;code&gt;0&lt;/code&gt; 의 요소 는 현재 실행중인 메소드 의 클래스이고 인덱스 &lt;code&gt;1&lt;/code&gt; 의 요소 는 해당 메소드의 호출자 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="db0cba7fd12ec33074630b97168f59fc41388714" translate="yes" xml:space="preserve">
          <source>The length of the duration is stored using two fields - seconds and nanoseconds. The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to the length in seconds. The total duration is defined by calling &lt;a href=&quot;#getNano()&quot;&gt;&lt;code&gt;getNano()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#getSeconds()&quot;&gt;&lt;code&gt;getSeconds()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기간의 길이는 초 및 나노초의 두 필드를 사용하여 저장됩니다. 나노초 부분은 0에서 999,999,999 사이의 값으로 초 단위의 길이를 조정합니다. 총 기간은 &lt;a href=&quot;#getNano()&quot;&gt; &lt;code&gt;getNano()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#getSeconds()&quot;&gt; &lt;code&gt;getSeconds()&lt;/code&gt; &lt;/a&gt; 를 호출하여 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="5b7612856469de2aec5e2bc66e25332200f0c8ce" translate="yes" xml:space="preserve">
          <source>The length of the duration is stored using two fields - seconds and nanoseconds. The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to the length in seconds. The total duration is defined by calling this method and &lt;a href=&quot;#getNano()&quot;&gt;&lt;code&gt;getNano()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기간의 길이는 초 및 나노초의 두 필드를 사용하여 저장됩니다. 나노초 부분은 0에서 999,999,999 사이의 값으로 초 단위의 길이를 조정합니다. 총 기간은이 메서드와 &lt;a href=&quot;#getNano()&quot;&gt; &lt;code&gt;getNano()&lt;/code&gt; &lt;/a&gt; 호출하여 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="52f1926df908fd6c91c3cdc7317b153da5f04881" translate="yes" xml:space="preserve">
          <source>The length of the duration is stored using two fields - seconds and nanoseconds. The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to the length in seconds. The total duration is defined by calling this method and &lt;a href=&quot;#getSeconds()&quot;&gt;&lt;code&gt;getSeconds()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">기간의 길이는 초 및 나노초의 두 필드를 사용하여 저장됩니다. 나노초 부분은 0에서 999,999,999 사이의 값으로 초 단위의 길이를 조정합니다. 총 기간은이 메서드와 &lt;a href=&quot;#getSeconds()&quot;&gt; &lt;code&gt;getSeconds()&lt;/code&gt; &lt;/a&gt; 호출하여 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="b857f2f3bd91b155a9e3b739281c3f76ebd897e1" translate="yes" xml:space="preserve">
          <source>The length of the duration is stored using two fields - seconds and nanoseconds. The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to the length in seconds. The total duration is defined by calling this method and &lt;a href=&quot;duration#getNano--&quot;&gt;&lt;code&gt;getNano()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지속 시간의 길이는 초와 나노초의 두 필드를 사용하여 저장됩니다. 나노초 부분은 0에서 999,999,999 사이의 값으로 초 단위의 길이를 조정합니다. 총 지속 시간은이 메소드와 &lt;a href=&quot;duration#getNano--&quot;&gt; &lt;code&gt;getNano()&lt;/code&gt; &lt;/a&gt; 호출하여 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="799f33b236c13bbcd8f6b24c22ed60055e48b108" translate="yes" xml:space="preserve">
          <source>The length of the duration is stored using two fields - seconds and nanoseconds. The nanoseconds part is a value from 0 to 999,999,999 that is an adjustment to the length in seconds. The total duration is defined by calling this method and &lt;a href=&quot;duration#getSeconds--&quot;&gt;&lt;code&gt;getSeconds()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">지속 시간의 길이는 초와 나노초의 두 필드를 사용하여 저장됩니다. 나노초 부분은 0에서 999,999,999 사이의 값으로 초 단위의 길이를 조정합니다. 총 지속 시간은이 메소드와 &lt;a href=&quot;duration#getSeconds--&quot;&gt; &lt;code&gt;getSeconds()&lt;/code&gt; &lt;/a&gt; 호출하여 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="297f7fc3454a1ac9b72ec75e82b737d1c3e02d73" translate="yes" xml:space="preserve">
          <source>The length of the erroneous input, a positive integer</source>
          <target state="translated">잘못된 입력의 길이, 양의 정수</target>
        </trans-unit>
        <trans-unit id="2a624dce814ded4fc8a788876213688d849daba7" translate="yes" xml:space="preserve">
          <source>The length of the returned array equals the number of bytes read from the stream. If &lt;code&gt;len&lt;/code&gt; is zero, then no bytes are read and an empty byte array is returned. Otherwise, up to &lt;code&gt;len&lt;/code&gt; bytes are read from the stream. Fewer than &lt;code&gt;len&lt;/code&gt; bytes may be read if end of stream is encountered.</source>
          <target state="translated">반환 된 배열의 길이는 스트림에서 읽은 바이트 수와 같습니다. 경우 &lt;code&gt;len&lt;/code&gt; 제로이며, 다음 바이트를 읽을되지 않고 빈 바이트 배열이 반환됩니다. 그렇지 않으면 스트림에서 최대 &lt;code&gt;len&lt;/code&gt; 바이트를 읽습니다. 스트림의 끝에 &lt;code&gt;len&lt;/code&gt; 하면 len 바이트 보다 적은 바이트를 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="eccf785a92405032ba8c968732208000460f0139" translate="yes" xml:space="preserve">
          <source>The length of the simple name in the original code for which the qualified names where gathered.</source>
          <target state="translated">정규화 된 이름이 수집 된 원래 코드의 단순 이름 길이입니다.</target>
        </trans-unit>
        <trans-unit id="919271a96dbead07bffe665f55582cbbbb8ef438" translate="yes" xml:space="preserve">
          <source>The length of the solar day is the standard way that humans measure time. This has traditionally been subdivided into 24 hours of 60 minutes of 60 seconds, forming a 86400 second day.</source>
          <target state="translated">태양의 하루는 인간이 시간을 측정하는 표준 방법입니다. 이것은 전통적으로 60 초 60 분의 24 시간으로 세분화되어 86400 초를 형성합니다.</target>
        </trans-unit>
        <trans-unit id="33b014d560da82e0f5d8f763343933b2684c530a" translate="yes" xml:space="preserve">
          <source>The length of this character buffer</source>
          <target state="translated">이 문자 버퍼의 길이</target>
        </trans-unit>
        <trans-unit id="a1267c7d6b40b8c0d034f6025fd6b9fc8ca3a757" translate="yes" xml:space="preserve">
          <source>The length, in bytes, of the file denoted by this abstract pathname, or &lt;code&gt;0L&lt;/code&gt; if the file does not exist. Some operating systems may return &lt;code&gt;0L&lt;/code&gt; for pathnames denoting system-dependent entities such as devices or pipes.</source>
          <target state="translated">이 추상 경로명이 나타내는 파일의 길이 (바이트 단위) . 파일이 존재하지 않는 경우는 &lt;code&gt;0L&lt;/code&gt; 일부 운영 체제는 장치 또는 파이프와 같은 시스템 종속 엔터티를 나타내는 경로 이름에 대해 &lt;code&gt;0L&lt;/code&gt; 을 반환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="581d35e78b7ce49a00c13c4b7ee295fe5f34e3bd" translate="yes" xml:space="preserve">
          <source>The lengths of the 12 months of the year separated by whitespace. A numeric year property must be present for every year without any gaps. The month lengths must be between 29-32 inclusive.</source>
          <target state="translated">일년 중 12 개월 길이는 공백으로 구분됩니다. 숫자 연도 속성은 격차없이 매년 존재해야합니다. 월 길이는 29-32 사이 여야합니다.</target>
        </trans-unit>
        <trans-unit id="5b66e74de97e7f14be88c15b844d4047ab288d4b" translate="yes" xml:space="preserve">
          <source>The letter 'T'. Parsing is case insensitive.</source>
          <target state="translated">문자 'T'. 파싱은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="fc227fcf89d7cc814e4981de81e0c19a58943c38" translate="yes" xml:space="preserve">
          <source>The letter 'W'. Parsing is case insensitive.</source>
          <target state="translated">문자 'W'. 파싱은 대소 문자를 구분하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d77c8cf193187a7a8a4df4378c110186f76ee90c" translate="yes" xml:space="preserve">
          <source>The letters A-Z in their uppercase (&lt;code&gt;'\u0041'&lt;/code&gt; through &lt;code&gt;'\u005A'&lt;/code&gt;), lowercase (&lt;code&gt;'\u0061'&lt;/code&gt; through &lt;code&gt;'\u007A'&lt;/code&gt;), and full width variant (&lt;code&gt;'\uFF21'&lt;/code&gt; through &lt;code&gt;'\uFF3A'&lt;/code&gt; and &lt;code&gt;'\uFF41'&lt;/code&gt; through &lt;code&gt;'\uFF5A'&lt;/code&gt;) forms have numeric values from 10 through 35. This is independent of the Unicode specification, which does not assign numeric values to these &lt;code&gt;char&lt;/code&gt; values.</source>
          <target state="translated">대문자 ( &lt;code&gt;'\u0041'&lt;/code&gt; ~ &lt;code&gt;'\u005A'&lt;/code&gt; ), 소문자 ( &lt;code&gt;'\u0061'&lt;/code&gt; ~ &lt;code&gt;'\u007A'&lt;/code&gt; ) 및 전각 변형 ( &lt;code&gt;'\uFF21'&lt;/code&gt; ~ &lt;code&gt;'\uFF3A'&lt;/code&gt; 및 &lt;code&gt;'\uFF41'&lt;/code&gt; through &lt;code&gt;'\uFF5A'&lt;/code&gt; ) 형식은 10-35 사이의 숫자 값을 갖습니다. 이는 유니 코드 스펙과 무관하며 숫자 값을 이러한 &lt;code&gt;char&lt;/code&gt; 값에 지정하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="099a2135b8e7e4f9044f572d83bbcd49c70dfd02" translate="yes" xml:space="preserve">
          <source>The levels in descending order are:</source>
          <target state="translated">내림차순의 레벨은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0e8ba1b886b6e805ca0a71d56eee50e6a8bc10b6" translate="yes" xml:space="preserve">
          <source>The lexicographical ordering of &lt;code&gt;CharSequence&lt;/code&gt; is defined as follows. Consider a &lt;code&gt;CharSequence&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;CharSequence&lt;/code&gt; 의 사전 식 순서는 다음과 같이 정의됩니다. &lt;code&gt;CharSequence&lt;/code&gt; 고려</target>
        </trans-unit>
        <trans-unit id="78712e45be2b841ae964401fcce550e1a00f462a" translate="yes" xml:space="preserve">
          <source>The life-cycle of the returned buffer will be tied to that of this segment. That means that if the this segment is closed (see &lt;a href=&quot;#close()&quot;&gt;&lt;code&gt;close()&lt;/code&gt;&lt;/a&gt;, accessing the returned buffer will throw an &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt;&lt;code&gt;IllegalStateException&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">반환 된 버퍼의 수명주기는이 세그먼트의 수명주기와 연결됩니다. 즉,이 세그먼트가 닫히면 ( &lt;a href=&quot;#close()&quot;&gt; &lt;code&gt;close()&lt;/code&gt; &lt;/a&gt; 참조 ) 반환 된 버퍼에 액세스하면 &lt;a href=&quot;../../../../java.base/java/lang/illegalstateexception&quot;&gt; &lt;code&gt;IllegalStateException&lt;/code&gt; 이 발생합니다&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2c5e9331cf323774666c68e79793b3d8477a4183" translate="yes" xml:space="preserve">
          <source>The lifetime of a StackFrame is very limited. It is available only for suspended threads and becomes invalid once its thread is resumed.</source>
          <target state="translated">StackFrame의 수명은 매우 제한적입니다. 일시 중단 된 스레드에만 사용할 수 있으며 스레드가 재개되면 무효화됩니다.</target>
        </trans-unit>
        <trans-unit id="aaba787bd83219a9dcbfeeac67a7f10d3959fe01" translate="yes" xml:space="preserve">
          <source>The lightest predefined weight.</source>
          <target state="translated">미리 정의 된 가장 가벼운 무게입니다.</target>
        </trans-unit>
        <trans-unit id="adb3d673f7476255c74ac6d7d9fa9326dae1d524" translate="yes" xml:space="preserve">
          <source>The limit of persistent storage allocated for spooling has been reached.</source>
          <target state="translated">스풀링에 할당 된 지속적 스토리지 한계에 도달했습니다.</target>
        </trans-unit>
        <trans-unit id="e4ba24e69512c484f4d6ceb119bca02cab802a8d" translate="yes" xml:space="preserve">
          <source>The limit of persistent storage allocated for spooling has been reached. The printer is temporarily unable to accept more jobs. The printer will remove this reason when it is able to accept more jobs. This value should be used by a non-spooling printer that only accepts one or a small number jobs at a time or a spooling printer that has filled the spool space.</source>
          <target state="translated">스풀링에 할당 된 지속적 스토리지 한계에 도달했습니다. 프린터가 일시적으로 더 많은 작업을 수락 할 수 없습니다. 프린터는 더 많은 작업을 수락 할 수 있으면이 이유를 제거합니다. 이 값은 한 번에 하나 또는 적은 수의 작업 만 허용하는 스풀링이 아닌 프린터 또는 스풀 공간을 채운 스풀링 프린터에서 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="38ae39f9f342a1c60cd5cbb9ab2d4d849160241e" translate="yes" xml:space="preserve">
          <source>The limit of this buffer</source>
          <target state="translated">이 버퍼의 한계</target>
        </trans-unit>
        <trans-unit id="ab9c6e922a12a9462c9be31812943f21ad4a8106" translate="yes" xml:space="preserve">
          <source>The limit to trim a line join that has a JOIN_MITER decoration. A line join is trimmed when the ratio of miter length to stroke width is greater than the miterlimit value. The miter length is the diagonal length of the miter, which is the distance between the inside corner and the outside corner of the intersection. The smaller the angle formed by two line segments, the longer the miter length and the sharper the angle of intersection. The default miterlimit value of 10.0f causes all angles less than 11 degrees to be trimmed. Trimming miters converts the decoration of the line join to bevel.</source>
          <target state="translated">JOIN_MITER 장식이있는 선 결합을 자르는 한계입니다. 선 연결은 스트로크 너비에 대한 마이 터 길이의 비율이 마이 터 제한 값보다 클 때 잘립니다. 마이 터 길이는 마이 터의 대각선 길이로, 교차점의 내부 코너와 외부 코너 사이의 거리입니다. 두 개의 선분으로 형성된 각도가 작을수록 연귀 길이가 길어지고 교차 각도가 더 선명 해집니다. 기본 miterlimit 값 10.0f를 사용하면 11도 미만의 모든 각도가 잘립니다. 마이 터를 트리밍하면 선 결합의 장식이 경사로 변환됩니다.</target>
        </trans-unit>
        <trans-unit id="74d9cdefdf1f884bc0a559db2675d6e2b7088424" translate="yes" xml:space="preserve">
          <source>The line number as an integer, or -1 if none is available.</source>
          <target state="translated">정수로 된 행 번호 또는 사용할 수없는 경우 -1입니다.</target>
        </trans-unit>
        <trans-unit id="77c032fbbd794d07ea48f8c91991c009a7b8b837" translate="yes" xml:space="preserve">
          <source>The line number begins at &lt;code&gt;0&lt;/code&gt;, and is incremented by &lt;code&gt;1&lt;/code&gt; when a &lt;code&gt;read&lt;/code&gt; returns a newline character.</source>
          <target state="translated">행 번호에서 시작 &lt;code&gt;0&lt;/code&gt; , 및 씩 증가 &lt;code&gt;1&lt;/code&gt; 때 &lt;code&gt;read&lt;/code&gt; 개행 문자를 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="92305e3b358afecfa44f83d1bcf7ae6dd7cb851f" translate="yes" xml:space="preserve">
          <source>The line number of the end of the text where the exception occurred.</source>
          <target state="translated">예외가 발생한 텍스트 끝의 줄 번호입니다.</target>
        </trans-unit>
        <trans-unit id="2355611f420db2d07fc016726af4faa7b71fe1ea" translate="yes" xml:space="preserve">
          <source>The line number of this Location.</source>
          <target state="translated">이 위치의 줄 번호입니다.</target>
        </trans-unit>
        <trans-unit id="f6f66624b436609504e5460cf106b1c4d4148e86" translate="yes" xml:space="preserve">
          <source>The line number of this Location. The line number is relative to the source specified by &lt;a href=&quot;#sourceName(java.lang.String)&quot;&gt;&lt;code&gt;sourceName(stratum)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 위치의 줄 번호입니다. 줄 번호는 &lt;a href=&quot;#sourceName(java.lang.String)&quot;&gt; &lt;code&gt;sourceName(stratum)&lt;/code&gt; &lt;/a&gt; 지정된 소스에 상대적 입니다.</target>
        </trans-unit>
        <trans-unit id="cddc84c180049c473d968f703982ac6a38c01347" translate="yes" xml:space="preserve">
          <source>The line number this locator is pointing to, or &lt;code&gt;-1&lt;/code&gt; if there is no column number available.</source>
          <target state="translated">이 로케이터가 가리키는 라인 번호 또는 사용 가능한 열 번호가없는 경우 &lt;code&gt;-1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="166a8e4f12900a4c636e64b35cecf089e2b6e881" translate="yes" xml:space="preserve">
          <source>The line number, or -1 if none is available.</source>
          <target state="translated">줄 번호 또는 사용할 수없는 경우 -1입니다.</target>
        </trans-unit>
        <trans-unit id="6d055d92518c915ab1ac205ce84b4eb5bcc880a5" translate="yes" xml:space="preserve">
          <source>The line number. Returns -1 if a line number is unavailable.</source>
          <target state="translated">줄 번호. 행 번호를 사용할 수없는 경우 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="427d04746239c7210cdccd3ee110daac2acf52b0" translate="yes" xml:space="preserve">
          <source>The line views do all of their rendering through the &lt;code&gt;drawLine&lt;/code&gt; method which in turn does all of its rendering through the &lt;code&gt;drawSelectedText&lt;/code&gt; and &lt;code&gt;drawUnselectedText&lt;/code&gt; methods. This enables subclasses to easily specialize the rendering without concern for the layout aspects.</source>
          <target state="translated">라인 뷰는 &lt;code&gt;drawLine&lt;/code&gt; 메서드를 통해 모든 렌더링을 수행하고 &lt;code&gt;drawSelectedText&lt;/code&gt; 및 &lt;code&gt;drawUnselectedText&lt;/code&gt; 메서드를 통해 모든 렌더링을 수행 합니다. 이를 통해 하위 클래스는 레이아웃 측면에 대한 걱정없이 쉽게 렌더링을 전문화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b409c56200d65a52d0a4e38f68805b5ad4c0f519" translate="yes" xml:space="preserve">
          <source>The lines of a file can be obtained from &lt;a href=&quot;../../io/bufferedreader#lines()&quot;&gt;&lt;code&gt;BufferedReader.lines()&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">파일의 행은 &lt;a href=&quot;../../io/bufferedreader#lines()&quot;&gt; &lt;code&gt;BufferedReader.lines()&lt;/code&gt; &lt;/a&gt; 에서 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d0fbc9f6cfd3d04e440801fa393ad994718e72cd" translate="yes" xml:space="preserve">
          <source>The lines of a file can be obtained from &lt;a href=&quot;../../io/bufferedreader#lines--&quot;&gt;&lt;code&gt;BufferedReader.lines()&lt;/code&gt;&lt;/a&gt;;</source>
          <target state="translated">파일의 라인은 &lt;a href=&quot;../../io/bufferedreader#lines--&quot;&gt; &lt;code&gt;BufferedReader.lines()&lt;/code&gt; &lt;/a&gt; 에서 얻을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="672e97082f5f1db510822c0106b8069f9a2cf6d6" translate="yes" xml:space="preserve">
          <source>The linker for &lt;a href=&quot;relinkablecallsite&quot;&gt;&lt;code&gt;RelinkableCallSite&lt;/code&gt;&lt;/a&gt; objects.</source>
          <target state="translated">&lt;a href=&quot;relinkablecallsite&quot;&gt; &lt;code&gt;RelinkableCallSite&lt;/code&gt; &lt;/a&gt; 개체에 대한 링커입니다 .</target>
        </trans-unit>
        <trans-unit id="d36a93bdec55013e4d0a8d4d42b1912a077316ed" translate="yes" xml:space="preserve">
          <source>The linker for &lt;a href=&quot;relinkablecallsite&quot;&gt;&lt;code&gt;RelinkableCallSite&lt;/code&gt;&lt;/a&gt; objects. A dynamic linker is a main objects when using Dynalink, it coordinates linking of call sites with linkers of available language runtimes that are represented by &lt;a href=&quot;linker/guardingdynamiclinker&quot;&gt;&lt;code&gt;GuardingDynamicLinker&lt;/code&gt;&lt;/a&gt; objects (you only need to deal with these if you are yourself implementing a language runtime with its own object model and/or type conversions). To use Dynalink, you have to create one or more dynamic linkers using a &lt;a href=&quot;dynamiclinkerfactory&quot;&gt;&lt;code&gt;DynamicLinkerFactory&lt;/code&gt;&lt;/a&gt;. Subsequently, you need to invoke its &lt;a href=&quot;#link(T)&quot;&gt;&lt;code&gt;link(RelinkableCallSite)&lt;/code&gt;&lt;/a&gt; method from &lt;code&gt;invokedynamic&lt;/code&gt; bootstrap methods to let it manage all the call sites they create. Usual usage would be to create at least one class per language runtime to contain one linker instance as:</source>
          <target state="translated">&lt;a href=&quot;relinkablecallsite&quot;&gt; &lt;code&gt;RelinkableCallSite&lt;/code&gt; &lt;/a&gt; 개체에 대한 링커입니다 . 동적 링커는 Dynalink를 사용할 때 기본 개체이며 &lt;a href=&quot;linker/guardingdynamiclinker&quot;&gt; &lt;code&gt;GuardingDynamicLinker&lt;/code&gt; &lt;/a&gt; 개체 로 표시되는 사용 가능한 언어 런타임의 링커와 호출 사이트의 연결을 조정 합니다 (자체 개체 모델로 언어 런타임을 구현하는 경우에만 처리해야 함). 및 / 또는 유형 변환). Dynalink를 사용하려면 &lt;a href=&quot;dynamiclinkerfactory&quot;&gt; &lt;code&gt;DynamicLinkerFactory&lt;/code&gt; 를&lt;/a&gt; 사용하여 하나 이상의 동적 링커를 만들어야 합니다. 그런 다음 &lt;code&gt;invokedynamic&lt;/code&gt; 에서 &lt;a href=&quot;#link(T)&quot;&gt; &lt;code&gt;link(RelinkableCallSite)&lt;/code&gt; &lt;/a&gt; 메서드 를 호출해야합니다.부트 스트랩 메서드를 사용하여 생성 한 모든 호출 사이트를 관리 할 수 ​​있습니다. 일반적으로 다음과 같이 링커 인스턴스 하나를 포함하도록 언어 런타임 당 하나 이상의 클래스를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="1da4ff24559b092bdd6dbfa74dfe3af5beeb0606" translate="yes" xml:space="preserve">
          <source>The list containing all the enabled attribute names.</source>
          <target state="translated">사용 가능한 모든 속성 이름이 포함 된 목록입니다.</target>
        </trans-unit>
        <trans-unit id="f6baad02fe3b9954bd6badb60ae27c47fc3bb918" translate="yes" xml:space="preserve">
          <source>The list containing all the enabled notification types.</source>
          <target state="translated">사용 가능한 모든 알림 유형이 포함 된 목록입니다.</target>
        </trans-unit>
        <trans-unit id="f3ea619d9f715deb3d2e3f1b2741f191c4bbc56c" translate="yes" xml:space="preserve">
          <source>The list of &lt;code&gt;Certificate&lt;/code&gt;s is an ordered &lt;code&gt;List&lt;/code&gt; of zero or more &lt;code&gt;Certificate&lt;/code&gt;s. This &lt;code&gt;List&lt;/code&gt; and all of the &lt;code&gt;Certificate&lt;/code&gt;s contained in it must be immutable.</source>
          <target state="translated">목록 &lt;code&gt;Certificate&lt;/code&gt; 들 순서입니다 &lt;code&gt;List&lt;/code&gt; 0 개 이상의 &lt;code&gt;Certificate&lt;/code&gt; 의. 이 &lt;code&gt;List&lt;/code&gt; 과 그에 포함 된 모든 &lt;code&gt;Certificate&lt;/code&gt; 는 변경 불가능해야합니다.</target>
        </trans-unit>
        <trans-unit id="b916d31edb7a209420a16f9027d0923d3faa5654" translate="yes" xml:space="preserve">
          <source>The list of ChangeListeners for this model.</source>
          <target state="translated">이 모델의 ChangeListener 목록입니다.</target>
        </trans-unit>
        <trans-unit id="10bfa47e8164a90866857998be35737173041df7" translate="yes" xml:space="preserve">
          <source>The list of ChangeListeners for this model. Subclasses may store their own listeners here.</source>
          <target state="translated">이 모델의 ChangeListener 목록입니다. 서브 클래스는 여기에 자신의 리스너를 저장할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cd0934730ffafda86be98b2e11c9a6431cd700ca" translate="yes" xml:space="preserve">
          <source>The list of IDs for currently-open connections to this connector server.</source>
          <target state="translated">이 커넥터 서버에 현재 열려있는 연결의 ID 목록입니다.</target>
        </trans-unit>
        <trans-unit id="f13e9c64749b8ed1f5479b46d29755512554be72" translate="yes" xml:space="preserve">
          <source>The list of ListenerType - Listener pairs</source>
          <target state="translated">ListenerType-리스너 쌍 목록</target>
        </trans-unit>
        <trans-unit id="cbf332d9549df163b0b7e42036484336ca82fb86" translate="yes" xml:space="preserve">
          <source>The list of Management Interfaces and their single instances</source>
          <target state="translated">관리 인터페이스 및 해당 단일 인스턴스 목록</target>
        </trans-unit>
        <trans-unit id="2d0575a4700f528c27b5830a39fd80993029bb31" translate="yes" xml:space="preserve">
          <source>The list of all CSS rules contained within the style sheet.</source>
          <target state="translated">스타일 시트에 포함 된 모든 CSS 규칙의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="79e835b88080323444fbf262a36b6d26f664132a" translate="yes" xml:space="preserve">
          <source>The list of all CSS rules contained within the style sheet. This includes both rule sets and at-rules.</source>
          <target state="translated">스타일 시트에 포함 된 모든 CSS 규칙의 목록입니다. 여기에는 규칙 세트와 at- 규칙이 모두 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="aa533ed7806370d614ec3db1940b0acd3b42190d" translate="yes" xml:space="preserve">
          <source>The list of areas defined for the image map.</source>
          <target state="translated">이미지 맵에 대해 정의 된 영역 목록입니다.</target>
        </trans-unit>
        <trans-unit id="d3edf1b8ae53c360c1c5b20e97917aa355190641" translate="yes" xml:space="preserve">
          <source>The list of attributes retrieved.</source>
          <target state="translated">검색된 속성 목록.</target>
        </trans-unit>
        <trans-unit id="a733a32deedbd729aa7b488bf3de06d8d71e5e72" translate="yes" xml:space="preserve">
          <source>The list of attributes that were set, with their new values.</source>
          <target state="translated">새로운 값으로 설정된 속성 목록.</target>
        </trans-unit>
        <trans-unit id="14a4e1e5cb8c7574ab3f323e3ba345046ec22d99" translate="yes" xml:space="preserve">
          <source>The list of buttons participating in this group.</source>
          <target state="translated">이 그룹에 참여하는 버튼 목록입니다.</target>
        </trans-unit>
        <trans-unit id="0fdae3bd72419d0a97c00be302983175d31ccb88" translate="yes" xml:space="preserve">
          <source>The list of children affected by this event notification.</source>
          <target state="translated">이 이벤트 알림의 영향을받는 자식 목록입니다.</target>
        </trans-unit>
        <trans-unit id="26ed6ff2dccafe178897a47f12d26e2b3c797bad" translate="yes" xml:space="preserve">
          <source>The list of events (in order) that the &lt;code&gt;DragGestureRecognizer&lt;/code&gt; &quot;recognized&quot; as a &quot;gesture&quot; that triggers a drag.</source>
          <target state="translated">&lt;code&gt;DragGestureRecognizer&lt;/code&gt; 가 드래그를 트리거하는 &quot;제스처&quot;로 &quot;인식&quot;한 이벤트 목록 (순서대로) .</target>
        </trans-unit>
        <trans-unit id="4880783278f1d1416ebf9b109da75b67eedaa0de" translate="yes" xml:space="preserve">
          <source>The list of events from updating declarations dependent on the dropped snippet.</source>
          <target state="translated">삭제 된 스 니펫에 따라 업데이트 선언의 이벤트 목록입니다.</target>
        </trans-unit>
        <trans-unit id="7ae61477db1267667809d3a08c8f514fa6a79474" translate="yes" xml:space="preserve">
          <source>The list of extensions.</source>
          <target state="translated">확장명 목록.</target>
        </trans-unit>
        <trans-unit id="b394ccf2a7aed6442f07818a8341401fd3df6290" translate="yes" xml:space="preserve">
          <source>The list of listener type, listener pairs</source>
          <target state="translated">리스너 유형, 리스너 쌍 목록</target>
        </trans-unit>
        <trans-unit id="1df53ae501acdd85420414bca713b21207b00184" translate="yes" xml:space="preserve">
          <source>The list of listeners.</source>
          <target state="translated">리스너 목록입니다.</target>
        </trans-unit>
        <trans-unit id="6ebc6df8965040b3ce7dc92bd4596d6121981619" translate="yes" xml:space="preserve">
          <source>The list of mime types.</source>
          <target state="translated">MIME 유형의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="4437772a3d8b697777cf41a340957151122fb04d" translate="yes" xml:space="preserve">
          <source>The list of the parameters supported by this &lt;code&gt;DOMConfiguration&lt;/code&gt; object and for which at least one value can be set by the application.</source>
          <target state="translated">이 &lt;code&gt;DOMConfiguration&lt;/code&gt; 객체에서 지원 하고 애플리케이션에서 하나 이상의 값을 설정할 수있는 매개 변수 목록입니다 .</target>
        </trans-unit>
        <trans-unit id="cc54843827b6539c88c4d61550825bb01e64ccec" translate="yes" xml:space="preserve">
          <source>The list of the parameters supported by this &lt;code&gt;DOMConfiguration&lt;/code&gt; object and for which at least one value can be set by the application. Note that this list can also contain parameter names defined outside this specification.</source>
          <target state="translated">이 &lt;code&gt;DOMConfiguration&lt;/code&gt; 객체에서 지원 하고 애플리케이션에서 하나 이상의 값을 설정할 수있는 매개 변수 목록입니다 . 이 목록에는이 사양 외부에서 정의 된 매개 변수 이름도 포함될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2a7748aeeee58a5b52705cd02ff41d8df27062b6" translate="yes" xml:space="preserve">
          <source>The list of the retrieved attributes.</source>
          <target state="translated">검색된 속성의 목록입니다.</target>
        </trans-unit>
        <trans-unit id="411c02d68ec92711ab8406bcc5a78e9ff249944a" translate="yes" xml:space="preserve">
          <source>The list of this layer's parents</source>
          <target state="translated">이 레이어의 부모 목록</target>
        </trans-unit>
        <trans-unit id="aba858810c5aa18739c636e7b18c7408ef0a29c0" translate="yes" xml:space="preserve">
          <source>The list of units completely and uniquely represents the state of the object without omissions, overlaps or duplication. The units are in order from longest duration to shortest.</source>
          <target state="translated">단위 목록은 누락, 겹침 또는 복제없이 객체의 상태를 완전하고 고유하게 나타냅니다. 단위는 가장 긴 시간부터 가장 짧은 시간 순서입니다.</target>
        </trans-unit>
        <trans-unit id="ffb6e93d63259c6469ce39fab1b0f30d3de6ba63" translate="yes" xml:space="preserve">
          <source>The list of virtual machine descriptors which describe the Java virtual machines known to this provider (may be empty).</source>
          <target state="translated">이 제공자에게 알려진 Java 가상 머신을 설명하는 가상 머신 디스크립터 목록입니다 (비어있을 수 있음).</target>
        </trans-unit>
        <trans-unit id="5a6af1f76163a23480bdc449d660e60da27dc96d" translate="yes" xml:space="preserve">
          <source>The list of virtual machine descriptors.</source>
          <target state="translated">가상 머신 설명자 목록입니다.</target>
        </trans-unit>
        <trans-unit id="f0a31b4438d214ff5ab44fbf1e6df091597039c9" translate="yes" xml:space="preserve">
          <source>The list will be empty for fixed offset rules and for any time-zone where there has only ever been a single offset. The list will also be empty if the transition rules are unknown.</source>
          <target state="translated">고정 오프셋 규칙 및 단일 오프셋 만있는 시간대에 대해서는 목록이 비어 있습니다. 전환 규칙을 알 수없는 경우에도 목록이 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="df0c9468b72bfab4969f222df61b6ab502e1a758" translate="yes" xml:space="preserve">
          <source>The list will be empty for fixed offset rules and for any time-zone where there is no daylight saving time. The list will also be empty if the transition rules are unknown.</source>
          <target state="translated">고정 오프셋 규칙 및 일광 절약 시간 제가없는 시간대의 경우 목록이 비어 있습니다. 전환 규칙을 알 수없는 경우에도 목록이 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="e3f7de82bdbb25e5787b3964abd332a8bf295b2b" translate="yes" xml:space="preserve">
          <source>The list will not contain attributes that were declared #IMPLIED but not specified in the start tag. It will also not contain attributes used as Namespace declarations (xmlns*) unless the &lt;code&gt;http://xml.org/sax/features/namespace-prefixes&lt;/code&gt; feature is set to &lt;var&gt;true&lt;/var&gt; (it is &lt;var&gt;false&lt;/var&gt; by default). Because SAX2 conforms to the original &quot;Namespaces in XML&quot; recommendation, it normally does not give namespace declaration attributes a namespace URI.</source>
          <target state="translated">목록에는 #IMPLIED로 선언되었지만 시작 태그에 지정되지 않은 속성이 포함되지 않습니다. 또한 &lt;code&gt;http://xml.org/sax/features/namespace-prefixes&lt;/code&gt; 기능이 &lt;var&gt;true&lt;/var&gt; ( 기본값 은 &lt;var&gt;false&lt;/var&gt; ) 로 설정되어 있지 않으면 네임 스페이스 선언 (xmlns *)으로 사용되는 속성도 포함되지 않습니다 . SAX2는 원래 &quot;XML의 네임 스페이스&quot;권장 사항을 따르기 때문에 일반적으로 네임 스페이스 선언 속성에 네임 스페이스 URI를 제공하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="27844bc6af8434ed5116d0992a6ff6c763ad2302" translate="yes" xml:space="preserve">
          <source>The list-iterator is</source>
          <target state="translated">리스트 반복자는</target>
        </trans-unit>
        <trans-unit id="7f92bf7d6987c47057b3f2bdbf85f39eb676f3f9" translate="yes" xml:space="preserve">
          <source>The listener &lt;code&gt;myListener&lt;/code&gt; will only receive notifications the type of which equals/starts with &quot;my_example.my_type&quot;.</source>
          <target state="translated">리스너 &lt;code&gt;myListener&lt;/code&gt; 는 &quot;my_example.my_type&quot;과 같은 유형의 알림 만 수신합니다.</target>
        </trans-unit>
        <trans-unit id="6084d864c4b6f5b4544fc69b60315b434163b6f4" translate="yes" xml:space="preserve">
          <source>The listener ID.</source>
          <target state="translated">리스너 ID</target>
        </trans-unit>
        <trans-unit id="57bc8a7e5c23ed6b6f740ba7b53d85cb121e7436" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &quot;interesting&quot; mouse events (press, release, click, enter, and exit) on a component.</source>
          <target state="translated">구성 요소에서 &quot;흥미로운&quot;마우스 이벤트 (누르기, 놓기, 클릭, 입력 및 종료)를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="94b650252b7748b4f18f00d71d5724ea14d5b3c3" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &quot;interesting&quot; mouse events (press, release, click, enter, and exit) on a component. (To track mouse moves and mouse drags, use the &lt;code&gt;MouseMotionListener&lt;/code&gt;.)</source>
          <target state="translated">구성 요소에서 &quot;흥미로운&quot;마우스 이벤트 (누르기, 놓기, 클릭, 입력 및 종료)를 수신하기위한 리스너 인터페이스입니다. (마우스 이동 및 마우스 드래그를 추적하려면 &lt;code&gt;MouseMotionListener&lt;/code&gt; 를 사용하십시오 .)</target>
        </trans-unit>
        <trans-unit id="3ca4adf4d22463d5be377865984608d8896c3b85" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; 객체 를 받기위한 리스너 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="9831fa0c76b61ac6b48f7edcb579a53278a9108b" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; objects. A class that is interested in processing a &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; implements this interface.</source>
          <target state="translated">&lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; 객체 를 받기위한 리스너 인터페이스입니다 . &lt;code&gt;BeanContextServiceAvailableEvent&lt;/code&gt; 처리에 관심이있는 클래스는 이 인터페이스를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="609d94d290b2f275c653b99c1f7e5a6a92448bc7" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; objects.</source>
          <target state="translated">&lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; 객체 를 받기위한 리스너 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="5b8110e74303433769bb43009b8ee46a1e6e9536" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; objects. A class that is interested in processing a &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; implements this interface.</source>
          <target state="translated">&lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; 객체 를 받기위한 리스너 인터페이스입니다 . &lt;code&gt;BeanContextServiceRevokedEvent&lt;/code&gt; 처리에 관심이있는 클래스는 이 인터페이스를 구현합니다.</target>
        </trans-unit>
        <trans-unit id="8967b4cafac2c1346bdb5684d29888b2a7006c87" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;WindowEvents&lt;/code&gt;, including &lt;code&gt;WINDOW_GAINED_FOCUS&lt;/code&gt; and &lt;code&gt;WINDOW_LOST_FOCUS&lt;/code&gt; events.</source>
          <target state="translated">&lt;code&gt;WINDOW_GAINED_FOCUS&lt;/code&gt; 및 &lt;code&gt;WINDOW_LOST_FOCUS&lt;/code&gt; 이벤트를 포함하여 &lt;code&gt;WindowEvents&lt;/code&gt; 를 수신하기위한 리스너 인터페이스입니다 .</target>
        </trans-unit>
        <trans-unit id="9e3bf64f53823d12d7070cf10bb2a3c32849bb05" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving &lt;code&gt;WindowEvents&lt;/code&gt;, including &lt;code&gt;WINDOW_GAINED_FOCUS&lt;/code&gt; and &lt;code&gt;WINDOW_LOST_FOCUS&lt;/code&gt; events. The class that is interested in processing a &lt;code&gt;WindowEvent&lt;/code&gt; either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;WindowAdapter&lt;/code&gt; class (overriding only the methods of interest). The listener object created from that class is then registered with a &lt;code&gt;Window&lt;/code&gt; using the &lt;code&gt;Window&lt;/code&gt;'s &lt;code&gt;addWindowFocusListener&lt;/code&gt; method. When the &lt;code&gt;Window&lt;/code&gt;'s status changes by virtue of it being opened, closed, activated, deactivated, iconified, or deiconified, or by focus being transferred into or out of the &lt;code&gt;Window&lt;/code&gt;, the relevant method in the listener object is invoked, and the &lt;code&gt;WindowEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">&lt;code&gt;WINDOW_GAINED_FOCUS&lt;/code&gt; 및 &lt;code&gt;WINDOW_LOST_FOCUS&lt;/code&gt; 이벤트를 포함하여 &lt;code&gt;WindowEvents&lt;/code&gt; 를 수신하기위한 리스너 인터페이스입니다 . &lt;code&gt;WindowEvent&lt;/code&gt; 처리에 관심이있는 클래스는 이 인터페이스 (및 포함 된 모든 메서드)를 구현하거나 추상 &lt;code&gt;WindowAdapter&lt;/code&gt; 클래스를 확장합니다 (관심있는 메서드 만 재정의). 그러한 클래스로부터 작성된 리스너 오브젝트 다음에 등록 된 &lt;code&gt;Window&lt;/code&gt; 은 USING &lt;code&gt;Window&lt;/code&gt; 의 &lt;code&gt;addWindowFocusListener&lt;/code&gt; 의 방법. 때 &lt;code&gt;Window&lt;/code&gt; 의 상태가 열리거나 닫히거나 활성화되거나 비활성화되거나 아이콘 화되거나 아이콘 화되지 않았거나 &lt;code&gt;Window&lt;/code&gt; 안팎으로 포커스가 전송되어 리스너 객체의 관련 메서드가 호출되고 &lt;code&gt;WindowEvent&lt;/code&gt; 가 그것.</target>
        </trans-unit>
        <trans-unit id="2210a94d07b13e1708014a554d960f43d802860d" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving action events.</source>
          <target state="translated">액션 이벤트를 받기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="44aaad1f22857e7f37adbeee3971e333bf1478af" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving action events. The class that is interested in processing an action event implements this interface, and the object created with that class is registered with a component, using the component's &lt;code&gt;addActionListener&lt;/code&gt; method. When the action event occurs, that object's &lt;code&gt;actionPerformed&lt;/code&gt; method is invoked.</source>
          <target state="translated">액션 이벤트를 받기위한 리스너 인터페이스입니다. 액션 이벤트 처리에 관심이있는 클래스가이 인터페이스를 구현하고 해당 클래스로 생성 된 객체는 컴포넌트의 &lt;code&gt;addActionListener&lt;/code&gt; 메소드를 사용하여 컴포넌트에 등록됩니다 . 작업 이벤트가 발생하면 해당 개체의 &lt;code&gt;actionPerformed&lt;/code&gt; 메서드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="00481095f54f04b1438b3c70335567d77c787b53" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving adjustment events.</source>
          <target state="translated">조정 이벤트를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="f74efcc9f924ef4ddbb75d04ff313c461ac67b46" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving ancestor moved and resized events.</source>
          <target state="translated">상위 이동 및 크기 조정 된 이벤트를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="9c9fb6c6d5cb612e709c6561fb33185e1282a46a" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving ancestor moved and resized events. The class that is interested in processing these events either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;HierarchyBoundsAdapter&lt;/code&gt; class (overriding only the method of interest). The listener object created from that class is then registered with a Component using the Component's &lt;code&gt;addHierarchyBoundsListener&lt;/code&gt; method. When the hierarchy to which the Component belongs changes by the resizing or movement of an ancestor, the relevant method in the listener object is invoked, and the &lt;code&gt;HierarchyEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">상위 이동 및 크기 조정 된 이벤트를 수신하기위한 리스너 인터페이스입니다. 이러한 이벤트를 처리하는 데 관심이있는 클래스는이 인터페이스 (및 포함 된 모든 메서드)를 구현하거나 추상 &lt;code&gt;HierarchyBoundsAdapter&lt;/code&gt; 클래스를 확장합니다 (관심있는 메서드 만 재정의). 그런 다음 해당 클래스에서 생성 된 리스너 객체는 Component의 &lt;code&gt;addHierarchyBoundsListener&lt;/code&gt; 메소드를 사용하여 Component에 등록됩니다 . 상위 항목의 크기 조정이나 이동에 의해 Component가 속한 계층이 변경되면 리스너 객체의 관련 메서드가 호출되고 &lt;code&gt;HierarchyEvent&lt;/code&gt; 가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="90cdd407940bda984d8e64426a26ab551a4da521" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving component events.</source>
          <target state="translated">구성 요소 이벤트를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="7aa95cc25a9eedaeeb276f09b2fb164966ec1ede" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving component events. The class that is interested in processing a component event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;ComponentAdapter&lt;/code&gt; class (overriding only the methods of interest). The listener object created from that class is then registered with a component using the component's &lt;code&gt;addComponentListener&lt;/code&gt; method. When the component's size, location, or visibility changes, the relevant method in the listener object is invoked, and the &lt;code&gt;ComponentEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">구성 요소 이벤트를 수신하기위한 리스너 인터페이스입니다. 구성 요소 이벤트 처리에 관심이있는 클래스는이 인터페이스 (및 포함 된 모든 메서드)를 구현하거나 추상 &lt;code&gt;ComponentAdapter&lt;/code&gt; 클래스 (관심있는 메서드 만 재정 의)를 확장합니다 . 그런 다음 해당 클래스에서 생성 된 리스너 객체는 구성 요소의 &lt;code&gt;addComponentListener&lt;/code&gt; 메서드를 사용하여 구성 요소에 등록됩니다 . 구성 요소의 크기, 위치 또는 가시성이 변경되면 리스너 객체의 관련 메서드가 호출되고 &lt;code&gt;ComponentEvent&lt;/code&gt; 가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="890552b57b756139822609b780bfb4956f13f4ac" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving container events.</source>
          <target state="translated">컨테이너 이벤트를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="2fc56b922809d90a27cf9eff61571095b10ff438" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving container events. The class that is interested in processing a container event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;ContainerAdapter&lt;/code&gt; class (overriding only the methods of interest). The listener object created from that class is then registered with a component using the component's &lt;code&gt;addContainerListener&lt;/code&gt; method. When the container's contents change because a component has been added or removed, the relevant method in the listener object is invoked, and the &lt;code&gt;ContainerEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">컨테이너 이벤트를 수신하기위한 리스너 인터페이스입니다. 컨테이너 이벤트 처리에 관심이있는 클래스는이 인터페이스 (및 포함 된 모든 메서드)를 구현하거나 추상 &lt;code&gt;ContainerAdapter&lt;/code&gt; 클래스를 확장합니다 (관심있는 메서드 만 재정의). 그런 다음 해당 클래스에서 생성 된 리스너 객체는 구성 요소의 &lt;code&gt;addContainerListener&lt;/code&gt; 메서드를 사용하여 구성 요소에 등록됩니다 . 컴포넌트가 추가되거나 제거되어 컨테이너의 내용이 변경되면 리스너 객체의 관련 메서드가 호출되고 &lt;code&gt;ContainerEvent&lt;/code&gt; 가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="efe5a9e3d412b2aa50b0183fe05ad9b2eb0dbbb8" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving drag gesture events.</source>
          <target state="translated">드래그 동작 이벤트를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="15fa10c4878c98ecdeff5867b8880a49492e9107" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving drag gesture events. This interface is intended for a drag gesture recognition implementation. See a specification for &lt;code&gt;DragGestureRecognizer&lt;/code&gt; for details on how to register the listener interface. Upon recognition of a drag gesture the &lt;code&gt;
 DragGestureRecognizer&lt;/code&gt; calls this interface's &lt;a href=&quot;#dragGestureRecognized(java.awt.dnd.DragGestureEvent)&quot;&gt;&lt;code&gt;dragGestureRecognized()&lt;/code&gt;&lt;/a&gt; method and passes a &lt;code&gt;DragGestureEvent&lt;/code&gt;.</source>
          <target state="translated">드래그 동작 이벤트를 수신하기위한 리스너 인터페이스입니다. 이 인터페이스는 드래그 제스처 인식 구현을위한 것입니다. 리스너 인터페이스를 등록하는 방법에 대한 자세한 내용 은 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 사양을 참조하세요 . 드래그 제스처를 인식하면 &lt;code&gt; DragGestureRecognizer&lt;/code&gt; 는이 인터페이스의 &lt;a href=&quot;#dragGestureRecognized(java.awt.dnd.DragGestureEvent)&quot;&gt; &lt;code&gt;dragGestureRecognized()&lt;/code&gt; &lt;/a&gt; 메서드를 호출 하고 &lt;code&gt;DragGestureEvent&lt;/code&gt; 를 전달합니다 .</target>
        </trans-unit>
        <trans-unit id="8c2ba980f1ffa6a1e693c2e81186f0140ecae865" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving hierarchy changed events.</source>
          <target state="translated">계층 변경 이벤트를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="00dfcc9fbbc4af9b6f644dad4856515c715735a0" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving hierarchy changed events. The class that is interested in processing a hierarchy changed event should implement this interface. The listener object created from that class is then registered with a Component using the Component's &lt;code&gt;addHierarchyListener&lt;/code&gt; method. When the hierarchy to which the Component belongs changes, the &lt;code&gt;hierarchyChanged&lt;/code&gt; method in the listener object is invoked, and the &lt;code&gt;HierarchyEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">계층 변경 이벤트를 수신하기위한 리스너 인터페이스입니다. 계층 변경 이벤트 처리에 관심이있는 클래스는이 인터페이스를 구현해야합니다. 그런 다음 해당 클래스에서 생성 된 리스너 객체는 Component의 &lt;code&gt;addHierarchyListener&lt;/code&gt; 메소드를 사용하여 Component에 등록됩니다 . Component가 속한 &lt;code&gt;hierarchyChanged&lt;/code&gt; 변경되면 리스너 객체 의 hierarchyChanged 메서드가 호출되고 &lt;code&gt;HierarchyEvent&lt;/code&gt; 가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="58ada86b28047533e641ed98b6599c7db695cc11" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving input method events.</source>
          <target state="translated">입력 방법 이벤트를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="7a08e2d02f7f85fe29f73c9f21011bec490a42b8" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving input method events. A text editing component has to install an input method event listener in order to work with input methods.</source>
          <target state="translated">입력 방법 이벤트를 수신하기위한 리스너 인터페이스입니다. 텍스트 편집 구성 요소는 입력 방법을 사용하려면 입력 방법 이벤트 리스너를 설치해야합니다.</target>
        </trans-unit>
        <trans-unit id="aa0126d87b3a2ff4702bb38d66b6fe4bea766e5d" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving internal frame events.</source>
          <target state="translated">내부 프레임 이벤트를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="150ad64d77ea0b03512efe80e030779edab3376d" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving internal frame events. This class is functionally equivalent to the WindowListener class in the AWT.</source>
          <target state="translated">내부 프레임 이벤트를 수신하기위한 리스너 인터페이스입니다. 이 클래스는 AWT의 WindowListener 클래스와 기능적으로 동일합니다.</target>
        </trans-unit>
        <trans-unit id="516d18657e74f4887fa5c4e579c454ee66d1e071" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving item events.</source>
          <target state="translated">항목 이벤트를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="109e7da1b01afba7911db87e11f9cbf0f86c20ba" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving item events. The class that is interested in processing an item event implements this interface. The object created with that class is then registered with a component using the component's &lt;code&gt;addItemListener&lt;/code&gt; method. When an item-selection event occurs, the listener object's &lt;code&gt;itemStateChanged&lt;/code&gt; method is invoked.</source>
          <target state="translated">항목 이벤트를 수신하기위한 리스너 인터페이스입니다. 항목 이벤트 처리에 관심이있는 클래스가이 인터페이스를 구현합니다. 그런 다음 해당 클래스로 생성 된 객체는 구성 요소의 &lt;code&gt;addItemListener&lt;/code&gt; 메서드를 사용하여 구성 요소에 등록됩니다 . 항목 선택 이벤트가 발생하면 리스너 객체의 &lt;code&gt;itemStateChanged&lt;/code&gt; 메서드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="718d4e2886454c0fd765c4d41fb491716a8ae738" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving keyboard events (keystrokes).</source>
          <target state="translated">키보드 이벤트 (키 입력)를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="08c5d49fb62e2c9e7c054a96269a5256f34bd4de" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving keyboard events (keystrokes). The class that is interested in processing a keyboard event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;KeyAdapter&lt;/code&gt; class (overriding only the methods of interest).</source>
          <target state="translated">키보드 이벤트 (키 입력)를 수신하기위한 리스너 인터페이스입니다. 키보드 이벤트 처리에 관심이있는 클래스는이 인터페이스 (및 포함 된 모든 메서드)를 구현하거나 추상 &lt;code&gt;KeyAdapter&lt;/code&gt; 클래스 (관심있는 메서드 만 재정 의)를 확장합니다 .</target>
        </trans-unit>
        <trans-unit id="e90ebf8a4e829b636c445b793a834c1f0dd5a9e2" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving keyboard focus events on a component.</source>
          <target state="translated">구성 요소에서 키보드 포커스 이벤트를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="b4d1ab461fe520253ef0a4700f74c9639e383e0c" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving keyboard focus events on a component. The class that is interested in processing a focus event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;FocusAdapter&lt;/code&gt; class (overriding only the methods of interest). The listener object created from that class is then registered with a component using the component's &lt;code&gt;addFocusListener&lt;/code&gt; method. When the component gains or loses the keyboard focus, the relevant method in the listener object is invoked, and the &lt;code&gt;FocusEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">구성 요소에서 키보드 포커스 이벤트를 받기위한 리스너 인터페이스입니다. 포커스 이벤트 처리에 관심이있는 클래스는이 인터페이스 (및 포함 된 모든 메서드)를 구현하거나 추상 &lt;code&gt;FocusAdapter&lt;/code&gt; 클래스를 확장합니다 (관심있는 메서드 만 재정의). 그런 다음 해당 클래스에서 생성 된 리스너 객체는 구성 요소의 &lt;code&gt;addFocusListener&lt;/code&gt; 메서드를 사용하여 구성 요소에 등록됩니다 . 컴포넌트가 키보드 포커스를 얻거나 잃으면 리스너 객체의 관련 메서드가 호출되고 &lt;code&gt;FocusEvent&lt;/code&gt; 가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="42d8d00c4b844423914d02e6030ad08ee6922952" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving mouse motion events on a component.</source>
          <target state="translated">구성 요소에서 마우스 모션 이벤트를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="f2008feb0b751d961f85da91749d357984c1699d" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving mouse motion events on a component. (For clicks and other mouse events, use the &lt;code&gt;MouseListener&lt;/code&gt;.)</source>
          <target state="translated">구성 요소에서 마우스 모션 이벤트를 수신하기위한 리스너 인터페이스입니다. (클릭 및 기타 마우스 이벤트의 경우 &lt;code&gt;MouseListener&lt;/code&gt; 를 사용하십시오 .)</target>
        </trans-unit>
        <trans-unit id="0cb541b4370e67f6c2ae53e37637e7778682d265" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving mouse wheel events on a component.</source>
          <target state="translated">구성 요소에서 마우스 휠 이벤트를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="967e419e81c0bedffb9b7df254e23a6edfef07f9" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving mouse wheel events on a component. (For clicks and other mouse events, use the &lt;code&gt;MouseListener&lt;/code&gt;. For mouse movement and drags, use the &lt;code&gt;MouseMotionListener&lt;/code&gt;.)</source>
          <target state="translated">구성 요소에서 마우스 휠 이벤트를 수신하기위한 리스너 인터페이스입니다. (클릭 및 기타 마우스 이벤트의 경우 &lt;code&gt;MouseListener&lt;/code&gt; 를 사용하고 마우스 이동 및 드래그의 경우 &lt;code&gt;MouseMotionListener&lt;/code&gt; 를 사용하십시오 .)</target>
        </trans-unit>
        <trans-unit id="3f5665da8b9abc72812af1cbb517327271212111" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving notification of events dispatched to objects that are instances of Component or MenuComponent or their subclasses.</source>
          <target state="translated">Component 또는 MenuComponent 또는 해당 하위 클래스의 인스턴스 인 객체에 전달 된 이벤트 알림을 받기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="7534bf9eee28537cd9998b81c39c60b881f11322" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving notification of events dispatched to objects that are instances of Component or MenuComponent or their subclasses. Unlike the other EventListeners in this package, AWTEventListeners passively observe events being dispatched in the AWT, system-wide. Most applications should never use this class; applications which might use AWTEventListeners include event recorders for automated testing, and facilities such as the Java Accessibility package.</source>
          <target state="translated">Component 또는 MenuComponent 또는 해당 하위 클래스의 인스턴스 인 객체에 전달 된 이벤트 알림을 받기위한 리스너 인터페이스입니다. 이 패키지의 다른 EventListeners와 달리 AWTEventListeners는 시스템 전체에서 AWT에서 전달되는 이벤트를 수동적으로 관찰합니다. 대부분의 응용 프로그램은이 클래스를 사용해서는 안됩니다. AWTEventListeners를 사용할 수있는 애플리케이션에는 자동화 된 테스트를위한 이벤트 레코더와 Java Accessibility 패키지와 같은 기능이 포함됩니다.</target>
        </trans-unit>
        <trans-unit id="4323395a69ffa98d3d07fcdd4649a11a22402953" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving text events.</source>
          <target state="translated">텍스트 이벤트를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="938b53fbd4386e3cae1e98bf9f82640c36945784" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving text events. The class that is interested in processing a text event implements this interface. The object created with that class is then registered with a component using the component's &lt;code&gt;addTextListener&lt;/code&gt; method. When the component's text changes, the listener object's &lt;code&gt;textValueChanged&lt;/code&gt; method is invoked.</source>
          <target state="translated">텍스트 이벤트를 수신하기위한 리스너 인터페이스입니다. 텍스트 이벤트 처리에 관심이있는 클래스가이 인터페이스를 구현합니다. 그런 다음 해당 클래스로 만든 객체는 구성 요소의 &lt;code&gt;addTextListener&lt;/code&gt; 메서드를 사용하여 구성 요소에 등록됩니다 . 구성 요소의 텍스트가 변경되면 리스너 객체의 &lt;code&gt;textValueChanged&lt;/code&gt; 메서드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="930458e2872f62959a7709377c9a5b8539f81548" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving window events.</source>
          <target state="translated">윈도우 이벤트를 받기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="046ae6aeb700a9000b9edffea84c976746d2574f" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving window events. The class that is interested in processing a window event either implements this interface (and all the methods it contains) or extends the abstract &lt;code&gt;WindowAdapter&lt;/code&gt; class (overriding only the methods of interest). The listener object created from that class is then registered with a Window using the window's &lt;code&gt;addWindowListener&lt;/code&gt; method. When the window's status changes by virtue of being opened, closed, activated or deactivated, iconified or deiconified, the relevant method in the listener object is invoked, and the &lt;code&gt;WindowEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">윈도우 이벤트를 받기위한 리스너 인터페이스입니다. 창 이벤트 처리에 관심이있는 클래스는이 인터페이스 (및 포함 된 모든 메서드)를 구현하거나 추상 &lt;code&gt;WindowAdapter&lt;/code&gt; 클래스 (관심있는 메서드 만 재정 의)를 확장합니다 . 그런 다음 해당 클래스에서 생성 된 리스너 객체는 창의 &lt;code&gt;addWindowListener&lt;/code&gt; 메서드를 사용하여 Window에 등록됩니다 . 창 열기, 닫힘, 활성화 또는 비활성화, 아이콘 화 또는 아이콘 화 해제로 인해 창의 상태가 변경되면 리스너 객체의 관련 메서드가 호출되고 &lt;code&gt;WindowEvent&lt;/code&gt; 가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="94bd6d305775c68579de461457e8be81bf487d24" translate="yes" xml:space="preserve">
          <source>The listener interface for receiving window state events.</source>
          <target state="translated">창 상태 이벤트를 수신하기위한 리스너 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="2b6d52f6670826cb36f572318c0f36261aa54308" translate="yes" xml:space="preserve">
          <source>The listener interface used by a &lt;a href=&quot;transformerfactory&quot;&gt;&lt;code&gt;TransformerFactory&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt; to notify callers of error messages that occur during a transformation process.</source>
          <target state="translated">&lt;a href=&quot;transformerfactory&quot;&gt; &lt;code&gt;TransformerFactory&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; &lt;/a&gt; 가 변환 프로세스 중에 발생하는 오류 메시지를 호출자에게 알리기 위해 사용하는 리스너 인터페이스 입니다.</target>
        </trans-unit>
        <trans-unit id="71f9f61fe4e8ba779f8322dcfde7484914223ec6" translate="yes" xml:space="preserve">
          <source>The listener interface used by a &lt;a href=&quot;transformerfactory&quot;&gt;&lt;code&gt;TransformerFactory&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;transformer&quot;&gt;&lt;code&gt;Transformer&lt;/code&gt;&lt;/a&gt; to notify callers of error messages that occur during a transformation process. An ErrorListener receives three levels of messages: warnings, errors and fatal errors as classified by their severity. Each of them is handled as described in their respective method.</source>
          <target state="translated">&lt;a href=&quot;transformerfactory&quot;&gt; &lt;code&gt;TransformerFactory&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;transformer&quot;&gt; &lt;code&gt;Transformer&lt;/code&gt; &lt;/a&gt; 가 변환 프로세스 중에 발생하는 오류 메시지를 호출자에게 알리기 위해 사용하는 리스너 인터페이스 입니다. ErrorListener는 심각도별로 분류 된 경고, 오류 및 치명적 오류의 세 가지 수준의 메시지를 수신합니다. 각각은 각각의 방법에 설명 된대로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="c3a43493fbe188522b28ce60b8adf822abfbed0a" translate="yes" xml:space="preserve">
          <source>The listener is invoked with privileges that are restricted by the calling context of this method. The order in which the listeners are invoked is unspecified.</source>
          <target state="translated">리스너는이 메소드의 호출 컨텍스트에 의해 제한되는 권한으로 호출됩니다. 리스너가 호출되는 순서는 지정되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9400f2b1615e7d08e936f201c493bf222d8d5d3f" translate="yes" xml:space="preserve">
          <source>The listener list.</source>
          <target state="translated">리스너 목록입니다.</target>
        </trans-unit>
        <trans-unit id="e4590d176c2f3cdb63c4fefc574df69b196589b3" translate="yes" xml:space="preserve">
          <source>The listener method is executed in the same thread as this method. See the &lt;a href=&quot;package-summary#THREADING&quot;&gt;package description&lt;/a&gt; for more information on threading issues.</source>
          <target state="translated">리스너 메소드는이 메소드와 동일한 스레드에서 실행됩니다. 스레딩 문제에 대한 자세한 내용은 &lt;a href=&quot;package-summary#THREADING&quot;&gt;패키지 설명&lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="5ed10f8995a36338e91e111a510c1f3b0baf668c" translate="yes" xml:space="preserve">
          <source>The listener object created from that class is then registered with a component using the component's &lt;code&gt;addKeyListener&lt;/code&gt; method. A keyboard event is generated when a key is pressed, released, or typed. The relevant method in the listener object is then invoked, and the &lt;code&gt;KeyEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">그런 다음 해당 클래스에서 생성 된 리스너 객체는 구성 요소의 &lt;code&gt;addKeyListener&lt;/code&gt; 메서드를 사용하여 구성 요소에 등록됩니다 . 키를 누르거나 놓거나 입력하면 키보드 이벤트가 생성됩니다. 그런 다음 리스너 객체의 관련 메서드가 호출되고 &lt;code&gt;KeyEvent&lt;/code&gt; 가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="21060f18757cd559d669528f219a8bca2d12923f" translate="yes" xml:space="preserve">
          <source>The listener object created from that class is then registered with a component using the component's &lt;code&gt;addMouseListener&lt;/code&gt; method. A mouse event is generated when the mouse is pressed, released clicked (pressed and released). A mouse event is also generated when the mouse cursor enters or leaves a component. When a mouse event occurs, the relevant method in the listener object is invoked, and the &lt;code&gt;MouseEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">그런 다음 해당 클래스에서 생성 된 리스너 객체는 구성 요소의 &lt;code&gt;addMouseListener&lt;/code&gt; 메서드를 사용하여 구성 요소에 등록됩니다 . 마우스를 눌렀다가 놓을 때 (눌렀다 놓을 때) 마우스 이벤트가 생성됩니다. 마우스 커서가 구성 요소에 들어가거나 나갈 때도 마우스 이벤트가 생성됩니다. 마우스 이벤트가 발생하면 리스너 객체의 관련 메서드가 호출되고 &lt;code&gt;MouseEvent&lt;/code&gt; 가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="29f8512d75f316740d807a9f3ce730476b012525" translate="yes" xml:space="preserve">
          <source>The listener object created from that class is then registered with a component using the component's &lt;code&gt;addMouseMotionListener&lt;/code&gt; method. A mouse motion event is generated when the mouse is moved or dragged. (Many such events will be generated). When a mouse motion event occurs, the relevant method in the listener object is invoked, and the &lt;code&gt;MouseEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">그런 다음 해당 클래스에서 생성 된 리스너 객체는 구성 요소의 &lt;code&gt;addMouseMotionListener&lt;/code&gt; 메서드를 사용하여 구성 요소에 등록됩니다 . 마우스를 움직이거나 끌면 마우스 모션 이벤트가 생성됩니다. (이러한 이벤트가 많이 생성됩니다). 마우스 모션 이벤트가 발생하면 리스너 객체의 관련 메서드가 호출되고 &lt;code&gt;MouseEvent&lt;/code&gt; 가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="7bde3a9f8c2f35edc65df4054ae9cced53dc0f55" translate="yes" xml:space="preserve">
          <source>The listener object created from that class is then registered with a component using the component's &lt;code&gt;addMouseWheelListener&lt;/code&gt; method. A mouse wheel event is generated when the mouse wheel is rotated. When a mouse wheel event occurs, that object's &lt;code&gt;mouseWheelMoved&lt;/code&gt; method is invoked.</source>
          <target state="translated">그런 다음 해당 클래스에서 생성 된 리스너 객체는 구성 요소의 &lt;code&gt;addMouseWheelListener&lt;/code&gt; 메서드를 사용하여 구성 요소에 등록됩니다 . 마우스 휠이 회전하면 마우스 휠 이벤트가 생성됩니다. 마우스 휠 이벤트가 발생하면 해당 객체의 &lt;code&gt;mouseWheelMoved&lt;/code&gt; 메서드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="8462433b24f6ee1894e3c488f73375914de70411" translate="yes" xml:space="preserve">
          <source>The listener object created from that class is then registered with a window using the &lt;code&gt;Window&lt;/code&gt;'s &lt;code&gt;addWindowStateListener&lt;/code&gt; method. When the window's state changes by virtue of being iconified, maximized etc., the &lt;code&gt;windowStateChanged&lt;/code&gt; method in the listener object is invoked, and the &lt;code&gt;WindowEvent&lt;/code&gt; is passed to it.</source>
          <target state="translated">그런 다음 해당 클래스에서 생성 된 리스너 객체는 &lt;code&gt;Window&lt;/code&gt; 의 &lt;code&gt;addWindowStateListener&lt;/code&gt; 메서드를 사용하여 창에 등록됩니다 . 아이콘 화, 최대화 등으로 창의 상태가 변경 되면 리스너 객체 의 &lt;code&gt;windowStateChanged&lt;/code&gt; 메서드가 호출되고 &lt;code&gt;WindowEvent&lt;/code&gt; 가 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="62e7843c514bbb78ca4f4720402ec2ddbbae0aa7" translate="yes" xml:space="preserve">
          <source>The listener object that receives notifications is the one that is registered with the given name at the time this method is called. Even if it is subsequently unregistered, it will continue to receive notifications.</source>
          <target state="translated">통지를받는 리스너 객체는이 메소드가 호출 될 때 지정된 이름으로 등록 된 리스너 객체입니다. 이후에 등록이 해제 되더라도 계속 알림을받습니다.</target>
        </trans-unit>
        <trans-unit id="f9a383f1ca2012ed7089a225fb67552330b9a6d7" translate="yes" xml:space="preserve">
          <source>The listener that's notified when a lists selection value changes.</source>
          <target state="translated">목록 선택 값이 변경 될 때 알림을받는 리스너입니다.</target>
        </trans-unit>
        <trans-unit id="3c03fc456754958e1ca2af69310e7c90cc61d1de" translate="yes" xml:space="preserve">
          <source>The listener that's notified when a tree expands or collapses a node.</source>
          <target state="translated">트리가 노드를 확장하거나 축소 할 때 알림을받는 리스너입니다.</target>
        </trans-unit>
        <trans-unit id="e9dee44b0182c8c0b0a0c8f9892dc7638ded761c" translate="yes" xml:space="preserve">
          <source>The listener that's notified when a tree expands or collapses a node. For further documentation and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;How to Write a Tree Expansion Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">트리가 노드를 확장하거나 축소 할 때 알림을받는 리스너입니다. 추가 문서 및 예제 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;How to Write a Tree Expansion Listener를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="f236b0e97ac50feb674a6fba5807fe37364f440e" translate="yes" xml:space="preserve">
          <source>The listener that's notified when a tree expands or collapses a node. For further documentation and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;How to Write a Tree Expansion Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">트리가 노드를 확장하거나 축소 할 때 알림을받는 리스너입니다. 추가 문서 및 예제 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treeexpansionlistener.html&quot;&gt;How to Write a Tree Expansion Listener를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="d762ba2d794493894963a774297af06660359b59" translate="yes" xml:space="preserve">
          <source>The listener that's notified when a tree expands or collapses a node. For further information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">트리가 노드를 확장하거나 축소 할 때 알림을받는 리스너입니다. 자세한 내용과 예제 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="295a3b26f9456d1b6eafc7f4fda4973bb06ad61f" translate="yes" xml:space="preserve">
          <source>The listener that's notified when a tree expands or collapses a node. For further information and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">트리가 노드를 확장하거나 축소 할 때 알림을받는 리스너입니다. 자세한 정보와 예제 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treewillexpandlistener.html&quot;&gt;How to Write a Tree-Will-Expand Listener를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="721b231dea75a2b4cc1ad5ba9849ccb3290dc873" translate="yes" xml:space="preserve">
          <source>The listener that's notified when the selection in a TreeSelectionModel changes.</source>
          <target state="translated">TreeSelectionModel의 선택이 변경 될 때 알림을받는 리스너입니다.</target>
        </trans-unit>
        <trans-unit id="439ef69a7ffa5c27f6bf33edf46a994c872d72ee" translate="yes" xml:space="preserve">
          <source>The listener that's notified when the selection in a TreeSelectionModel changes. For more information and examples see &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeselectionlistener.html&quot;&gt;How to Write a Tree Selection Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">TreeSelectionModel의 선택이 변경 될 때 알림을받는 리스너입니다. 자세한 내용과 예제 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/events/treeselectionlistener.html&quot;&gt;How to Write a Tree Selection Listener를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="2a0c4f0dd342df75a9916450805530d1d447ca7a" translate="yes" xml:space="preserve">
          <source>The listener that's notified when the selection in a TreeSelectionModel changes. For more information and examples see &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treeselectionlistener.html&quot;&gt;How to Write a Tree Selection Listener&lt;/a&gt;, a section in &lt;em&gt;The Java Tutorial.&lt;/em&gt;</source>
          <target state="translated">TreeSelectionModel의 선택이 변경 될 때 알림을받는 리스너입니다. 자세한 내용과 예제 &lt;em&gt;는 Java Tutorial&lt;/em&gt; 의 섹션 인 &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/events/treeselectionlistener.html&quot;&gt;How to Write a Tree Selection Listener를&lt;/a&gt; 참조하십시오 &lt;em&gt;.&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="32532a060b2fbfa14ccb1f188acdf277c1e917e2" translate="yes" xml:space="preserve">
          <source>The listener will be notified whenever an event occurs on this &lt;code&gt;RowSet&lt;/code&gt; object.</source>
          <target state="translated">리스너는이 &lt;code&gt;RowSet&lt;/code&gt; 객체 에서 이벤트가 발생할 때마다 알림을 받습니다.</target>
        </trans-unit>
        <trans-unit id="5a499cf5fe19789e705f2938d0b79e35a4290dd2" translate="yes" xml:space="preserve">
          <source>The listeners waiting for model changes.</source>
          <target state="translated">모델 변경을 기다리는 리스너.</target>
        </trans-unit>
        <trans-unit id="93d4ae77866ed79f0452590354a6b35148aba02e" translate="yes" xml:space="preserve">
          <source>The lists and their &lt;a href=&quot;#subList(int,int)&quot;&gt;&lt;code&gt;subList&lt;/code&gt;&lt;/a&gt; views implement the &lt;a href=&quot;randomaccess&quot;&gt;&lt;code&gt;RandomAccess&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">목록 및 해당 &lt;a href=&quot;#subList(int,int)&quot;&gt; &lt;code&gt;subList&lt;/code&gt; &lt;/a&gt; 목록 보기는 &lt;a href=&quot;randomaccess&quot;&gt; &lt;code&gt;RandomAccess&lt;/code&gt; &lt;/a&gt; 인터페이스를 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="58ed8ea8bc03ea144ba1b908e1725a3240f27929" translate="yes" xml:space="preserve">
          <source>The local date time and first combined to form a local date-time. The local date-time is then resolved to a single instant on the time-line. This is achieved by finding a valid offset from UTC/Greenwich for the local date-time as defined by the &lt;a href=&quot;zone/zonerules&quot;&gt;&lt;code&gt;rules&lt;/code&gt;&lt;/a&gt; of the zone ID.</source>
          <target state="translated">현지 날짜 시간과 현지 날짜-시간을 만들기 위해 처음 결합되었습니다. 그런 다음 현지 날짜-시간이 타임 라인에서 단일 인스턴트로 분석됩니다. 이것은 존 ID &lt;a href=&quot;zone/zonerules&quot;&gt; &lt;code&gt;rules&lt;/code&gt; &lt;/a&gt; 에 의해 정의 된 현지 날짜-시간에 대해 UTC / 그리니치로부터 유효한 오프셋을 찾아서 달성됩니다 .</target>
        </trans-unit>
        <trans-unit id="cd77d03e50afe46d82e00a8893f50de031896408" translate="yes" xml:space="preserve">
          <source>The local date-time is expressed in terms of the UTC offset.</source>
          <target state="translated">현지 날짜-시간은 UTC 오프셋으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="062cd543edcf93d28b39a205798c522e0df4cbd0" translate="yes" xml:space="preserve">
          <source>The local date-time is expressed in terms of the standard offset.</source>
          <target state="translated">현지 날짜-시간은 표준 오프셋으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="43473430726ae9afe2869644c4fa1a6cc3eb2c73" translate="yes" xml:space="preserve">
          <source>The local date-time is expressed in terms of the wall offset.</source>
          <target state="translated">현지 날짜-시간은 월 오프셋으로 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="9ba325c8ca4eea5edc4128597b124ea80adfafce" translate="yes" xml:space="preserve">
          <source>The local date-time is resolved to a single instant on the time-line. This is achieved by finding a valid offset from UTC/Greenwich for the local date-time as defined by the &lt;a href=&quot;../zone/zonerules&quot;&gt;&lt;code&gt;rules&lt;/code&gt;&lt;/a&gt; of the zone ID.</source>
          <target state="translated">현지 날짜-시간은 타임 라인에서 단일 인스턴트로 해석됩니다. 이것은 존 ID &lt;a href=&quot;../zone/zonerules&quot;&gt; &lt;code&gt;rules&lt;/code&gt; &lt;/a&gt; 에 의해 정의 된 현지 날짜-시간에 대해 UTC / 그리니치로부터 유효한 오프셋을 찾아서 달성됩니다 .</target>
        </trans-unit>
        <trans-unit id="dc0d2dd18ffa81c5846139cec04f27fc21a2f918" translate="yes" xml:space="preserve">
          <source>The local date-time is resolved to a single instant on the time-line. This is achieved by finding a valid offset from UTC/Greenwich for the local date-time as defined by the &lt;a href=&quot;zone/zonerules&quot;&gt;&lt;code&gt;rules&lt;/code&gt;&lt;/a&gt; of the zone ID.</source>
          <target state="translated">현지 날짜-시간은 타임 라인에서 단일 인스턴트로 해석됩니다. 이것은 존 ID &lt;a href=&quot;zone/zonerules&quot;&gt; &lt;code&gt;rules&lt;/code&gt; &lt;/a&gt; 에 의해 정의 된 현지 날짜-시간에 대해 UTC / 그리니치로부터 유효한 오프셋을 찾아서 달성됩니다 .</target>
        </trans-unit>
        <trans-unit id="f23710a2bfeea2609ac083326e1c68eeaf7a3131" translate="yes" xml:space="preserve">
          <source>The local hostname to connect to.</source>
          <target state="translated">연결할 로컬 호스트 이름입니다.</target>
        </trans-unit>
        <trans-unit id="67bc6f31d72edc1ff822de3fec3708bde5aa89ea" translate="yes" xml:space="preserve">
          <source>The local name (without prefix).</source>
          <target state="translated">로컬 이름 (접두사 없음).</target>
        </trans-unit>
        <trans-unit id="8e75eca195c8a616553ea521a5e740acb05a3b17" translate="yes" xml:space="preserve">
          <source>The local name, or the empty string if Namespace processing is not being performed, or null if the index is out of range.</source>
          <target state="translated">로컬 이름 또는 네임 스페이스 처리가 수행되지 않는 경우 빈 문자열, 인덱스가 범위를 벗어난 경우 null입니다.</target>
        </trans-unit>
        <trans-unit id="f6ea3d24c46a396fa3d936ab0cdc9e719b6a5045" translate="yes" xml:space="preserve">
          <source>The local part is not validated as a &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt; as specified in &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="translated">로컬 부분은 &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/&quot;&gt;XML의 네임 스페이스에&lt;/a&gt; 지정된 &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt; 으로 유효성이 검사되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="7bf68d3d6ad4f23042f950cf994e4815f792acb7" translate="yes" xml:space="preserve">
          <source>The local part is not validated as a &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt; as specified in &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="translated">로컬 부분은 &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/&quot;&gt;XML의 네임 스페이스에&lt;/a&gt; 지정된 &lt;a href=&quot;https://www.w3.org/TR/REC-xml-names/#NT-NCName&quot;&gt;NCName&lt;/a&gt; 으로 유효성이 검사되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="28603a3e523d1a11d2a1ceeb9552533b74d8f296" translate="yes" xml:space="preserve">
          <source>The local port must be between 0 and 65535 inclusive. A port number of &lt;code&gt;zero&lt;/code&gt; will let the system pick up an ephemeral port in a &lt;code&gt;bind&lt;/code&gt; operation.</source>
          <target state="translated">로컬 포트는 0에서 65535 사이 여야합니다. 포트 번호가 &lt;code&gt;zero&lt;/code&gt; 이면 시스템이 &lt;code&gt;bind&lt;/code&gt; 작업 에서 임시 포트를 선택할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="01c1227cbd2c58d3edc580370fa60fb57d2529eb" translate="yes" xml:space="preserve">
          <source>The local port number to which this socket is connected.</source>
          <target state="translated">이 소켓이 연결된 로컬 포트 ​​번호입니다.</target>
        </trans-unit>
        <trans-unit id="d5c20c55cb87df99a369c70cbea570fb23af8461" translate="yes" xml:space="preserve">
          <source>The local port number.</source>
          <target state="translated">로컬 포트 ​​번호</target>
        </trans-unit>
        <trans-unit id="164d4cf144a6005f646e68ccb7201e68e4df1175" translate="yes" xml:space="preserve">
          <source>The local time can be converted to an instant using the standard offset, the wall offset or UTC.</source>
          <target state="translated">현지 시간은 표준 오프셋, 월 오프셋 또는 UTC를 사용하여 순간으로 변환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="930043567de1d9c36d9065d240bbac838f2c72a8" translate="yes" xml:space="preserve">
          <source>The locale 'en_US' will always be present.</source>
          <target state="translated">로케일 'en_US'는 항상 존재합니다.</target>
        </trans-unit>
        <trans-unit id="69fa2a5dc2599c2aef839ef3d763ad4fe4202dc1" translate="yes" xml:space="preserve">
          <source>The locale always used is the one returned by &lt;a href=&quot;../util/locale#getDefault()&quot;&gt;&lt;code&gt;Locale.getDefault()&lt;/code&gt;&lt;/a&gt;, regardless of any previous invocations of other formatting methods on this object.</source>
          <target state="translated">항상 사용되는 로케일은 이 객체에 대한 다른 형식 지정 메서드의 이전 호출에 관계없이 &lt;a href=&quot;../util/locale#getDefault()&quot;&gt; &lt;code&gt;Locale.getDefault()&lt;/code&gt; &lt;/a&gt; 의해 반환 된 것입니다.</target>
        </trans-unit>
        <trans-unit id="a3e873afe8c7896eaad724e6fd9f0691de5d7994" translate="yes" xml:space="preserve">
          <source>The locale always used is the one returned by &lt;a href=&quot;../util/locale#getDefault(java.util.Locale.Category)&quot;&gt;&lt;code&gt;Locale.getDefault(Locale.Category)&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;../util/locale.category#FORMAT&quot;&gt;&lt;code&gt;FORMAT&lt;/code&gt;&lt;/a&gt; category specified, regardless of any previous invocations of other formatting methods on this object.</source>
          <target state="translated">항상 사용되는 로케일은에 의해 반환 된 하나입니다 &lt;a href=&quot;../util/locale#getDefault(java.util.Locale.Category)&quot;&gt; &lt;code&gt;Locale.getDefault(Locale.Category)&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;../util/locale.category#FORMAT&quot;&gt; &lt;code&gt;FORMAT&lt;/code&gt; &lt;/a&gt; 에 관계없이이 객체에서 다른 포맷 방법의 이전 호출의 지정 범주입니다.</target>
        </trans-unit>
        <trans-unit id="dc211fe28f69063a85ba24c9840522a2af09d7b2" translate="yes" xml:space="preserve">
          <source>The locale always used is the one returned by &lt;a href=&quot;../util/locale#getDefault(java.util.Locale.Category)&quot;&gt;&lt;code&gt;Locale.getDefault(Locale.Category)&lt;/code&gt;&lt;/a&gt; with &lt;a href=&quot;../util/locale.category#FORMAT&quot;&gt;&lt;code&gt;FORMAT&lt;/code&gt;&lt;/a&gt; category specified.</source>
          <target state="translated">항상 사용되는 로케일은 &lt;a href=&quot;../util/locale.category#FORMAT&quot;&gt; &lt;code&gt;FORMAT&lt;/code&gt; &lt;/a&gt; 범주가 지정된 &lt;a href=&quot;../util/locale#getDefault(java.util.Locale.Category)&quot;&gt; &lt;code&gt;Locale.getDefault(Locale.Category)&lt;/code&gt; &lt;/a&gt; 에서 반환 된 것 입니다.</target>
        </trans-unit>
        <trans-unit id="6b35dc1cb6dc43f6b2f67f74ddcd4a6124b64160" translate="yes" xml:space="preserve">
          <source>The locale always used is the one returned by &lt;a href=&quot;../util/locale#getDefault--&quot;&gt;&lt;code&gt;Locale.getDefault()&lt;/code&gt;&lt;/a&gt;, regardless of any previous invocations of other formatting methods on this object.</source>
          <target state="translated">사용 된 로케일은 이 객체에 대한 다른 형식화 ​​메소드의 이전 호출에 관계없이 항상 &lt;a href=&quot;../util/locale#getDefault--&quot;&gt; &lt;code&gt;Locale.getDefault()&lt;/code&gt; &lt;/a&gt; 의해 리턴되는 로케일 입니다.</target>
        </trans-unit>
        <trans-unit id="e47fa25a26b7655787b36c2d11262ab526454c0c" translate="yes" xml:space="preserve">
          <source>The locale always used is the one returned by &lt;a href=&quot;../util/locale#getDefault--&quot;&gt;&lt;code&gt;Locale.getDefault()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">항상 사용되는 로케일은 &lt;a href=&quot;../util/locale#getDefault--&quot;&gt; &lt;code&gt;Locale.getDefault()&lt;/code&gt; &lt;/a&gt; 의해 리턴 된 로케일 입니다.</target>
        </trans-unit>
        <trans-unit id="3d7e04fa09d3af3067039bd45965a73087608eb3" translate="yes" xml:space="preserve">
          <source>The locale independent name of the state.</source>
          <target state="translated">로케일 독립적 인 상태 이름입니다.</target>
        </trans-unit>
        <trans-unit id="73e7d6163fd1d2f45cd9898119ab92faa657b7c8" translate="yes" xml:space="preserve">
          <source>The locale independent name of the state. This is a programmatic name that is not intended to be read by humans.</source>
          <target state="translated">로케일 독립적 인 상태 이름입니다. 이것은 사람이 읽을 수없는 프로그램 이름입니다.</target>
        </trans-unit>
        <trans-unit id="f1e6d2a7a476bbe469e93757125a537c9589e962" translate="yes" xml:space="preserve">
          <source>The locale is determined from the formatter. The formatter returned directly by this method will use the &lt;a href=&quot;../../util/locale#getDefault()&quot;&gt;&lt;code&gt;default FORMAT locale&lt;/code&gt;&lt;/a&gt;. The locale can be controlled using &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">로케일은 포맷터에서 결정됩니다. 이 메서드에서 직접 반환되는 포맷터는 &lt;a href=&quot;../../util/locale#getDefault()&quot;&gt; &lt;code&gt;default FORMAT locale&lt;/code&gt; &lt;/a&gt; 사용합니다 . 로케일 은이 메소드의 결과에 &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt; 을 사용하여 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="782cd591ae328adc75282e93e04de6da0a8ed6cd" translate="yes" xml:space="preserve">
          <source>The locale is determined from the formatter. The formatter returned directly by this method will use the &lt;a href=&quot;../../util/locale#getDefault(java.util.Locale.Category)&quot;&gt;&lt;code&gt;default FORMAT locale&lt;/code&gt;&lt;/a&gt;. The locale can be controlled using &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">로케일은 포맷터에서 결정됩니다. 이 메서드에서 직접 반환되는 포맷터는 &lt;a href=&quot;../../util/locale#getDefault(java.util.Locale.Category)&quot;&gt; &lt;code&gt;default FORMAT locale&lt;/code&gt; &lt;/a&gt; 사용합니다 . 로케일 은이 메소드의 결과에 &lt;a href=&quot;#withLocale(java.util.Locale)&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt; 을 사용하여 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="366a0be68a17c43905b7bd782f1e30699df8f11a" translate="yes" xml:space="preserve">
          <source>The locale is determined from the formatter. The formatter returned directly by this method will use the &lt;a href=&quot;../../util/locale#getDefault--&quot;&gt;&lt;code&gt;default FORMAT locale&lt;/code&gt;&lt;/a&gt;. The locale can be controlled using &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">로케일은 포맷터에서 결정됩니다. 이 메소드에 의해 직접 돌려 주어진 포매터는 &lt;a href=&quot;../../util/locale#getDefault--&quot;&gt; &lt;code&gt;default FORMAT locale&lt;/code&gt; &lt;/a&gt; 사용합니다 . 이 메소드의 결과에서 &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt; 을 사용하여 로케일을 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="65991f7ad7454909e91fa953adc69eb74b95bfbb" translate="yes" xml:space="preserve">
          <source>The locale is determined from the formatter. The formatter returned directly by this method will use the &lt;a href=&quot;../../util/locale#getDefault-java.util.Locale.Category-&quot;&gt;&lt;code&gt;default FORMAT locale&lt;/code&gt;&lt;/a&gt;. The locale can be controlled using &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt;&lt;code&gt;withLocale(Locale)&lt;/code&gt;&lt;/a&gt; on the result of this method.</source>
          <target state="translated">로케일은 포맷터에서 결정됩니다. 이 메소드에 의해 직접 돌려 주어진 포매터는 &lt;a href=&quot;../../util/locale#getDefault-java.util.Locale.Category-&quot;&gt; &lt;code&gt;default FORMAT locale&lt;/code&gt; &lt;/a&gt; 사용합니다 . 이 메소드의 결과에서 &lt;a href=&quot;datetimeformatter#withLocale-java.util.Locale-&quot;&gt; &lt;code&gt;withLocale(Locale)&lt;/code&gt; &lt;/a&gt; 을 사용하여 로케일을 제어 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="bc20fbb44a9773c78c103dd5fcdf6058fe0d0f4b" translate="yes" xml:space="preserve">
          <source>The locale is stored as passed in, without further processing. If the locale has &lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt; Unicode extensions&lt;/a&gt;, they may be used later in text processing. To set the chronology, time-zone and decimal style from unicode extensions, see &lt;a href=&quot;#localizedBy(java.util.Locale)&quot;&gt;&lt;code&gt;localizedBy()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">로케일은 추가 처리없이 전달 된대로 저장됩니다. 로케일에 &lt;a href=&quot;../../util/locale#def_locale_extension&quot;&gt;유니 코드 확장자&lt;/a&gt; 가있는 경우 나중에 텍스트 처리에서 사용할 수 있습니다. 유니 코드 확장에서 연대기, 시간대 및 십진 스타일을 설정하려면 &lt;a href=&quot;#localizedBy(java.util.Locale)&quot;&gt; &lt;code&gt;localizedBy()&lt;/code&gt; &lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="d27a035926e24202e324c8dbaceea94c517d56fb" translate="yes" xml:space="preserve">
          <source>The locale that best represents the language tag.</source>
          <target state="translated">언어 태그를 가장 잘 나타내는 로캘입니다.</target>
        </trans-unit>
        <trans-unit id="0399622d8514a7a2a23bbbb6e5f585ab4dd83b37" translate="yes" xml:space="preserve">
          <source>The locale used is the &lt;a href=&quot;locale#getDefault(java.util.Locale.Category)&quot;&gt;default locale&lt;/a&gt; for &lt;a href=&quot;locale.category#FORMAT&quot;&gt;formatting&lt;/a&gt; for this instance of the Java virtual machine.</source>
          <target state="translated">사용 된 로케일 은이 JVM (Java Virtual Machine) 인스턴스에 대한 &lt;a href=&quot;locale.category#FORMAT&quot;&gt;형식화를&lt;/a&gt; 위한 &lt;a href=&quot;locale#getDefault(java.util.Locale.Category)&quot;&gt;기본 로케일&lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ad8955176109149292d2490f96896813a8b15f84" translate="yes" xml:space="preserve">
          <source>The locale used is the &lt;a href=&quot;locale#getDefault-java.util.Locale.Category-&quot;&gt;default locale&lt;/a&gt; for &lt;a href=&quot;locale.category#FORMAT&quot;&gt;formatting&lt;/a&gt; for this instance of the Java virtual machine.</source>
          <target state="translated">사용되는 로케일은,이다 &lt;a href=&quot;locale#getDefault-java.util.Locale.Category-&quot;&gt;기본 로케일&lt;/a&gt; 에 대한 &lt;a href=&quot;locale.category#FORMAT&quot;&gt;서식&lt;/a&gt; 이 Java 가상 머신 인스턴스.</target>
        </trans-unit>
        <trans-unit id="e6a785aadaa78a38e75567a0f703ed28d6b3f7e0" translate="yes" xml:space="preserve">
          <source>The locale-independent names of the parameters. May return a null array if the parameter names aren't known.</source>
          <target state="translated">로케일 독립적 매개 변수 이름. 매개 변수 이름을 모르면 null 배열을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e5bd420f4c65808d7d95a170751fbed05770db22" translate="yes" xml:space="preserve">
          <source>The localized description of this throwable.</source>
          <target state="translated">이 Throwable에 대한 현지화 된 설명입니다.</target>
        </trans-unit>
        <trans-unit id="f6a467b908d5d92876f19e97efb8504a392a6111" translate="yes" xml:space="preserve">
          <source>The localized display name for the property/method/event. This defaults to the same as its programmatic name from getName.</source>
          <target state="translated">특성 / 방법 / 이벤트의 현지화 된 표시 이름입니다. 기본적으로 getName의 프로그램 이름과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="41938becbbbdbf5e0fb9f5e208b9fb0515a70942" translate="yes" xml:space="preserve">
          <source>The localized formats are defined in terms of the following parameters, which for a particular locale are taken from that locale's &lt;a href=&quot;../text/decimalformat&quot;&gt;&lt;code&gt;DecimalFormat&lt;/code&gt;&lt;/a&gt; object, &lt;code&gt;df&lt;/code&gt;, and its and &lt;a href=&quot;../text/decimalformatsymbols&quot;&gt;&lt;code&gt;DecimalFormatSymbols&lt;/code&gt;&lt;/a&gt; object, &lt;code&gt;dfs&lt;/code&gt;.</source>
          <target state="translated">지역화 된 형식은 다음 매개 변수로 정의되며, 특정 로케일의 경우 해당 로케일의 &lt;a href=&quot;../text/decimalformat&quot;&gt; &lt;code&gt;DecimalFormat&lt;/code&gt; &lt;/a&gt; 객체 &lt;code&gt;df&lt;/code&gt; 및 해당 &lt;a href=&quot;../text/decimalformatsymbols&quot;&gt; &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; &lt;/a&gt; 객체 &lt;code&gt;dfs&lt;/code&gt; 에서 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="0cf9e4f2c1f022d7c96c2bda99e0a922ee3b6ae4" translate="yes" xml:space="preserve">
          <source>The location is represented as a 0-thickness caret, that is, it has 0 width if the text is drawn horizontally, and 0 height if the text is drawn vertically. Other text orientations need to be mapped to horizontal or vertical orientation. The rectangle uses absolute screen coordinates.</source>
          <target state="translated">위치는 0- 두께 캐럿으로 표시됩니다. 즉, 텍스트가 가로로 그려지면 너비가 0이고 세로로 그려지면 높이가 0입니다. 다른 텍스트 방향은 가로 또는 세로 방향으로 매핑해야합니다. 사각형은 절대 화면 좌표를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="724bef0fd2ea9af49e65ae3c0f10e235a11eb4f9" translate="yes" xml:space="preserve">
          <source>The location of the document or &lt;code&gt;null&lt;/code&gt; if undefined or if the &lt;code&gt;Document&lt;/code&gt; was created using &lt;code&gt;DOMImplementation.createDocument&lt;/code&gt;.</source>
          <target state="translated">문서의 위치 또는 정의되지 않은 경우 또는 &lt;code&gt;Document&lt;/code&gt; 가 &lt;code&gt;DOMImplementation.createDocument&lt;/code&gt; 를 사용하여 작성된 경우 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="4c7fbd8183c454de5363e0e106d5247fd0e66513" translate="yes" xml:space="preserve">
          <source>The location of the document or &lt;code&gt;null&lt;/code&gt; if undefined or if the &lt;code&gt;Document&lt;/code&gt; was created using &lt;code&gt;DOMImplementation.createDocument&lt;/code&gt;. No lexical checking is performed when setting this attribute; this could result in a &lt;code&gt;null&lt;/code&gt; value returned when using &lt;code&gt;Node.baseURI&lt;/code&gt; .</source>
          <target state="translated">문서의 위치 또는 정의되지 않은 경우 또는 &lt;code&gt;Document&lt;/code&gt; 가 &lt;code&gt;DOMImplementation.createDocument&lt;/code&gt; 를 사용하여 작성된 경우 &lt;code&gt;null&lt;/code&gt; 입니다. 이 속성을 설정할 때 어휘 검사가 수행되지 않습니다. 이로 인해 &lt;code&gt;Node.baseURI&lt;/code&gt; 를 사용할 때 &lt;code&gt;null&lt;/code&gt; 값이 반환 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e62a857411e0950715cc33c61e291929b293cbd3" translate="yes" xml:space="preserve">
          <source>The location of the error.</source>
          <target state="translated">오류 위치입니다.</target>
        </trans-unit>
        <trans-unit id="43ca4ec04cf16a4dddcecc08b9428340938a4429" translate="yes" xml:space="preserve">
          <source>The location of the last offset calculation that is valid.</source>
          <target state="translated">유효한 마지막 오프셋 계산의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="16fcde1074fbb51aa34a7605e3bb5a9d694593b1" translate="yes" xml:space="preserve">
          <source>The location of the style sheet to be imported.</source>
          <target state="translated">가져올 스타일 시트의 위치입니다.</target>
        </trans-unit>
        <trans-unit id="bd53f70d92650dcac56665537eaed5e360915bb1" translate="yes" xml:space="preserve">
          <source>The location of the style sheet to be imported. The attribute will not contain the &lt;code&gt;&quot;url(...)&quot;&lt;/code&gt; specifier around the URI.</source>
          <target state="translated">가져올 스타일 시트의 위치입니다. 속성은 URI 주위에 &lt;code&gt;&quot;url(...)&quot;&lt;/code&gt; 지정자를 포함하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="c5c074507fcf47cdfff3a6cb060d1c4bb23a59b6" translate="yes" xml:space="preserve">
          <source>The location or an empty &lt;code&gt;Optional&lt;/code&gt; if not known</source>
          <target state="translated">위치 또는 알 수없는 경우 비어있는 &lt;code&gt;Optional&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3bc5f7897b9b13130f88e8ac225afff134b290bc" translate="yes" xml:space="preserve">
          <source>The location string</source>
          <target state="translated">위치 문자열</target>
        </trans-unit>
        <trans-unit id="d43499cca4d0c0e95f567286ba7e24dead4afe12" translate="yes" xml:space="preserve">
          <source>The locator allows the application to determine the end position of any document-related event, even if the parser is not reporting an error. Typically, the application will use this information for reporting its own errors (such as character content that does not match an application's business rules). The information returned by the locator is probably not sufficient for use with a search engine.</source>
          <target state="translated">로케이터를 사용하면 파서가 오류를보고하지 않더라도 응용 프로그램이 문서 관련 이벤트의 끝 위치를 확인할 수 있습니다. 일반적으로 애플리케이션은 자체 오류 (예 : 애플리케이션의 비즈니스 규칙과 일치하지 않는 문자 컨텐츠)를보고하기 위해이 정보를 사용합니다. 로케이터에서 반환 된 정보는 검색 엔진에서 사용하기에 충분하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6f1ed4b2d7d8226fd944d0cbe6eea2ec95a9f2b3" translate="yes" xml:space="preserve">
          <source>The lock associated with this &lt;code&gt;Condition&lt;/code&gt; is atomically released and the current thread becomes disabled for thread scheduling purposes and lies dormant until &lt;em&gt;one&lt;/em&gt; of four things happens:</source>
          <target state="translated">이 &lt;code&gt;Condition&lt;/code&gt; 과 관련된 잠금 은 원자 적으로 해제되며 현재 스레드는 스레드 예약을 위해 비활성화되며 다음 4 가지 &lt;em&gt;중 하나&lt;/em&gt; 가 발생할 때까지 휴면 상태 가됩니다.</target>
        </trans-unit>
        <trans-unit id="61d711789cff8fa58268433d15e08dadb98f0892" translate="yes" xml:space="preserve">
          <source>The lock associated with this condition is atomically released and the current thread becomes disabled for thread scheduling purposes and lies dormant until &lt;em&gt;one&lt;/em&gt; of five things happens:</source>
          <target state="translated">이 조건과 관련된 잠금은 원자 적으로 해제되며 현재 스레드는 스레드 예약 목적으로 비활성화되고 5 가지 &lt;em&gt;중 하나&lt;/em&gt; 가 발생할 때까지 휴면 상태 가됩니다.</target>
        </trans-unit>
        <trans-unit id="65da01b12ed06c1129194ab04ecdfefe3305ba72" translate="yes" xml:space="preserve">
          <source>The lock associated with this condition is atomically released and the current thread becomes disabled for thread scheduling purposes and lies dormant until &lt;em&gt;one&lt;/em&gt; of three things happens:</source>
          <target state="translated">이 조건과 관련된 잠금은 원자 적으로 해제되며 현재 스레드는 스레드 예약 목적으로 비활성화되고 다음 세 가지 &lt;em&gt;중 하나&lt;/em&gt; 가 발생할 때까지 휴면 상태 가됩니다.</target>
        </trans-unit>
        <trans-unit id="a3f9b6f8110f68ff501a635d948cf5536975a242" translate="yes" xml:space="preserve">
          <source>The lock is acquired by the current thread; or</source>
          <target state="translated">잠금은 현재 스레드에 의해 획득됩니다. 또는</target>
        </trans-unit>
        <trans-unit id="bbc7e7e6345309fe74fecb274268a17d149329cf" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;#readLock()&quot;&gt;&lt;code&gt;readLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#readLock()&quot;&gt; &lt;code&gt;readLock()&lt;/code&gt; &lt;/a&gt; 메서드에 의해 반환 된 잠금 입니다.</target>
        </trans-unit>
        <trans-unit id="82a202c86804101245aa87611d0e365e06ad2c1f" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;#writeLock()&quot;&gt;&lt;code&gt;writeLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;#writeLock()&quot;&gt; &lt;code&gt;writeLock()&lt;/code&gt; &lt;/a&gt; 메서드에 의해 반환 된 잠금 입니다.</target>
        </trans-unit>
        <trans-unit id="23315cf702ddd4b0be90689a9788330de51e0d4d" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;readwritelock#readLock()&quot;&gt;&lt;code&gt;ReadWriteLock.readLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;readwritelock#readLock()&quot;&gt; &lt;code&gt;ReadWriteLock.readLock()&lt;/code&gt; &lt;/a&gt; 메서드에서 반환 된 잠금 입니다.</target>
        </trans-unit>
        <trans-unit id="56c7affd56a555e9fcf7d1093f497b2b16d518a4" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;readwritelock#writeLock()&quot;&gt;&lt;code&gt;ReadWriteLock.writeLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;readwritelock#writeLock()&quot;&gt; &lt;code&gt;ReadWriteLock.writeLock()&lt;/code&gt; &lt;/a&gt; 메서드에서 반환 된 잠금 입니다.</target>
        </trans-unit>
        <trans-unit id="0072d09fd66f1487f8e8bb5641f7beb40597488c" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;reentrantreadwritelock#readLock()&quot;&gt;&lt;code&gt;ReentrantReadWriteLock.readLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;reentrantreadwritelock#readLock()&quot;&gt; &lt;code&gt;ReentrantReadWriteLock.readLock()&lt;/code&gt; &lt;/a&gt; 메서드에서 반환 된 잠금 입니다.</target>
        </trans-unit>
        <trans-unit id="936446f11735d6f00e64d3dc5894e2b30dc3b6a3" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;reentrantreadwritelock#readLock--&quot;&gt;&lt;code&gt;ReentrantReadWriteLock.readLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;reentrantreadwritelock#readLock--&quot;&gt; &lt;code&gt;ReentrantReadWriteLock.readLock()&lt;/code&gt; &lt;/a&gt; 메소드가 리턴 한 잠금 입니다.</target>
        </trans-unit>
        <trans-unit id="a63fbd323480ae7eac9b087b684a954032e23d63" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;reentrantreadwritelock#readLock--&quot;&gt;&lt;code&gt;readLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">잠금이 메소드에 의해 반환 &lt;a href=&quot;reentrantreadwritelock#readLock--&quot;&gt; &lt;code&gt;readLock()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="21893c0407686ad33ab1139bb10fbcd160c1129d" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;reentrantreadwritelock#writeLock()&quot;&gt;&lt;code&gt;ReentrantReadWriteLock.writeLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;reentrantreadwritelock#writeLock()&quot;&gt; &lt;code&gt;ReentrantReadWriteLock.writeLock()&lt;/code&gt; &lt;/a&gt; 메서드에서 반환 된 잠금 입니다.</target>
        </trans-unit>
        <trans-unit id="39b8fdb8be94320a454a1547f61b7660e9a57cf7" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;reentrantreadwritelock#writeLock--&quot;&gt;&lt;code&gt;ReentrantReadWriteLock.writeLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;reentrantreadwritelock#writeLock--&quot;&gt; &lt;code&gt;ReentrantReadWriteLock.writeLock()&lt;/code&gt; &lt;/a&gt; 메소드에서 리턴 한 잠금 입니다.</target>
        </trans-unit>
        <trans-unit id="905e63fe2eb05904cf02aa94f5b5e717a84245ed" translate="yes" xml:space="preserve">
          <source>The lock returned by method &lt;a href=&quot;reentrantreadwritelock#writeLock--&quot;&gt;&lt;code&gt;writeLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;a href=&quot;reentrantreadwritelock#writeLock--&quot;&gt; &lt;code&gt;writeLock()&lt;/code&gt; &lt;/a&gt; 메소드에 의해 리턴 된 락 입니다.</target>
        </trans-unit>
        <trans-unit id="47ca08ec8ab201e5079422dee8f4a34be221eb71" translate="yes" xml:space="preserve">
          <source>The locks held on a particular file by a single Java virtual machine do not overlap. The &lt;a href=&quot;#overlaps(long,long)&quot;&gt;&lt;code&gt;overlaps&lt;/code&gt;&lt;/a&gt; method may be used to test whether a candidate lock range overlaps an existing lock.</source>
          <target state="translated">단일 JVM (Java Virtual Machine)이 특정 파일에 보유한 잠금은 겹치지 않습니다. &lt;a href=&quot;#overlaps(long,long)&quot;&gt; &lt;code&gt;overlaps&lt;/code&gt; &lt;/a&gt; 방법은 후보 로크 범위 기존 로크 중첩 여부를 테스트하는데 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="45d3fceafada8cb1318b2a1c9ef2a9a359190c9a" translate="yes" xml:space="preserve">
          <source>The locks held on a particular file by a single Java virtual machine do not overlap. The &lt;a href=&quot;filelock#overlaps-long-long-&quot;&gt;&lt;code&gt;overlaps&lt;/code&gt;&lt;/a&gt; method may be used to test whether a candidate lock range overlaps an existing lock.</source>
          <target state="translated">단일 Java 가상 머신이 특정 파일에 보유한 잠금은 겹치지 않습니다. &lt;a href=&quot;filelock#overlaps-long-long-&quot;&gt; &lt;code&gt;overlaps&lt;/code&gt; &lt;/a&gt; 방법은 후보 로크 범위 기존 로크 중첩 여부를 테스트하는데 사용될 수있다.</target>
        </trans-unit>
        <trans-unit id="8b536145c701b36ffc6ce15241826909032276e3" translate="yes" xml:space="preserve">
          <source>The log level can be configured based on the properties from the logging configuration file, as described in the description of the LogManager class. However it may also be dynamically changed by calls on the Logger.setLevel method. If a logger's level is changed the change may also affect child loggers, since any child logger that has &lt;code&gt;null&lt;/code&gt; as its level will inherit its effective level from its parent.</source>
          <target state="translated">LogManager 클래스 설명에 설명 된대로 로깅 구성 파일의 특성을 기반으로 로그 레벨을 구성 할 수 있습니다. 그러나 Logger.setLevel 메서드를 호출하여 동적으로 변경 될 수도 있습니다. 로거 레벨이 변경되면, 레벨로 &lt;code&gt;null&lt;/code&gt; 하위 로거 는 상위 레벨에서 유효 레벨을 상속 하므로 변경 사항은 하위 로거에도 영향을 줄 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="07735f84aee92e88e5622726dcab14478e640923" translate="yes" xml:space="preserve">
          <source>The log writer is a character output stream to which all logging and tracing messages for this data source will be printed. This includes messages printed by the methods of this object, messages printed by methods of other objects manufactured by this object, and so on. Messages printed to a data source specific log writer are not printed to the log writer associated with the &lt;code&gt;java.sql.DriverManager&lt;/code&gt; class. When a &lt;code&gt;DataSource&lt;/code&gt; object is created, the log writer is initially null; in other words, the default is for logging to be disabled.</source>
          <target state="translated">로그 기록기는이 데이터 소스에 대한 모든 로깅 및 추적 메시지가 인쇄되는 문자 출력 스트림입니다. 여기에는이 개체의 메서드에 의해 인쇄 된 메시지,이 개체에 의해 제조 된 다른 개체의 메서드에 의해 인쇄 된 메시지 등이 포함됩니다. 데이터 소스 특정 로그 작성기에 인쇄 된 메시지는 &lt;code&gt;java.sql.DriverManager&lt;/code&gt; 클래스 와 연관된 로그 작성기에 인쇄되지 않습니다 . &lt;code&gt;DataSource&lt;/code&gt; 오브젝트가 작성 될 때 로그 작성기는 초기에 널입니다. 즉, 기본값은 로깅을 비활성화하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5cccadbef627b3bf817508c7a75663e7f418adec" translate="yes" xml:space="preserve">
          <source>The log writer is a character output stream to which all logging and tracing messages for this data source will be printed. This includes messages printed by the methods of this object, messages printed by methods of other objects manufactured by this object, and so on. Messages printed to a data source- specific log writer are not printed to the log writer associated with the &lt;code&gt;java.sql.DriverManager&lt;/code&gt; class. When a &lt;code&gt;DataSource&lt;/code&gt; object is created the log writer is initially null; in other words, the default is for logging to be disabled.</source>
          <target state="translated">로그 기록기는이 데이터 소스에 대한 모든 로깅 및 추적 메시지가 인쇄되는 문자 출력 스트림입니다. 여기에는이 개체의 메서드에 의해 인쇄 된 메시지,이 개체에 의해 제조 된 다른 개체의 메서드에 의해 인쇄 된 메시지 등이 포함됩니다. 데이터 소스 별 로그 작성기에 인쇄 된 메시지는 &lt;code&gt;java.sql.DriverManager&lt;/code&gt; 클래스 와 연관된 로그 작성기에 인쇄되지 않습니다 . &lt;code&gt;DataSource&lt;/code&gt; 객체가 생성 될 때 로그 기록기는 초기에 null입니다. 즉, 기본값은 로깅을 비활성화하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="5efe6a79a4cc53f2502e279de30e6e5f2feda9d7" translate="yes" xml:space="preserve">
          <source>The logger will be initially configured with a null Level and with useParentHandlers set to true.</source>
          <target state="translated">로거는 초기에 널 레벨로 설정되고 useParentHandlers가 true로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="136797d5f389dccc8697d89b60c4d8a0eba2f6fd" translate="yes" xml:space="preserve">
          <source>The logging methods are grouped in five main categories:</source>
          <target state="translated">로깅 방법은 5 가지 주요 범주로 그룹화됩니다.</target>
        </trans-unit>
        <trans-unit id="641b7e7a10638613ca35f5abccd985aaf6071af7" translate="yes" xml:space="preserve">
          <source>The logging request was made initially to a &lt;code&gt;Logger&lt;/code&gt; object, which initialized the &lt;code&gt;LogRecord&lt;/code&gt; and forwarded it here.</source>
          <target state="translated">로깅 요청은 처음에 &lt;code&gt;Logger&lt;/code&gt; 객체 에 이루어졌으며 &lt;code&gt;LogRecord&lt;/code&gt; 객체를 초기화하여 여기에 전달했습니다.</target>
        </trans-unit>
        <trans-unit id="1d108ce9ead2995d5648f2a343727b8efa189c0c" translate="yes" xml:space="preserve">
          <source>The logical &lt;code&gt;Connection&lt;/code&gt; is closed by calling &lt;code&gt;Connection.close&lt;/code&gt; prior to returning the &lt;code&gt;PooledConnection&lt;/code&gt; to the cache.</source>
          <target state="translated">논리적 &lt;code&gt;Connection&lt;/code&gt; 은 &lt;code&gt;PooledConnection&lt;/code&gt; 을 캐시 로 반환하기 전에 &lt;code&gt;Connection.close&lt;/code&gt; 를 호출하여 닫힙니다 .</target>
        </trans-unit>
        <trans-unit id="6dad57151ed4626619c50b76ba68fff7c40b5807" translate="yes" xml:space="preserve">
          <source>The logical bounds of the text will be filled using this &lt;code&gt;Paint&lt;/code&gt;, and then the text will be rendered on top of it (but see &lt;a href=&quot;#SWAP_COLORS&quot;&gt;&lt;code&gt;SWAP_COLORS&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">텍스트의 논리적 경계는이 &lt;code&gt;Paint&lt;/code&gt; 를 사용하여 채워 지고 텍스트는 그 위에 렌더링됩니다 (그러나 &lt;a href=&quot;#SWAP_COLORS&quot;&gt; &lt;code&gt;SWAP_COLORS&lt;/code&gt; &lt;/a&gt; 참조 ).</target>
        </trans-unit>
        <trans-unit id="136e6cda260b4679498d4d36f7be0ae33707be48" translate="yes" xml:space="preserve">
          <source>The logical name of this &lt;code&gt;Font&lt;/code&gt;, as passed to the constructor.</source>
          <target state="translated">생성자에 전달 된 이 &lt;code&gt;Font&lt;/code&gt; 의 논리적 이름입니다 .</target>
        </trans-unit>
        <trans-unit id="4d8db4df86dcda2ace25e40dbb938ffa56000bcb" translate="yes" xml:space="preserve">
          <source>The logical selection ranges are 0-3, 4-6 (ABC, ef) because the visually contiguous text is logically discontiguous. Also note that since the rightmost position on the layout (to the right of 'A') is selected, the selection is extended to the right of the bounds.</source>
          <target state="translated">논리적 선택 범위는 0-3, 4-6 (ABC, ef)입니다. 시각적으로 연속 된 텍스트는 논리적으로 불 연속적입니다. 또한 레이아웃의 가장 오른쪽 위치 ( 'A'오른쪽)가 선택되었으므로 선택 영역이 경계의 오른쪽으로 확장됩니다.</target>
        </trans-unit>
        <trans-unit id="c39967c867e0bcc330b56743772ed038a1947efc" translate="yes" xml:space="preserve">
          <source>The logical style choice action identifier The logical style is passed in as an argument</source>
          <target state="translated">논리적 스타일 선택 작업 식별자 논리적 스타일은 인수로 전달됩니다.</target>
        </trans-unit>
        <trans-unit id="f3195ba410c910cb1453bdf6d15fa282cb473f14" translate="yes" xml:space="preserve">
          <source>The long at the buffer's current position</source>
          <target state="translated">버퍼의 현재 위치에서 길다</target>
        </trans-unit>
        <trans-unit id="9b857784a51cb5186a4c310af8fad668265cd2f5" translate="yes" xml:space="preserve">
          <source>The long at the given index</source>
          <target state="translated">주어진 색인에서 긴</target>
        </trans-unit>
        <trans-unit id="d925d78726502c1517a0719c5c67fa836bb30baf" translate="yes" xml:space="preserve">
          <source>The long buffer is not modified by this method, and no reference to the buffer is retained by the bit set.</source>
          <target state="translated">긴 버퍼는이 방법으로 수정되지 않으며 버퍼에 대한 참조는 비트 세트로 유지되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b26bffcfbc958bd15ecb825f2a9fae2f40f6a817" translate="yes" xml:space="preserve">
          <source>The long value at the buffer's current position</source>
          <target state="translated">버퍼의 현재 위치에서 긴 값</target>
        </trans-unit>
        <trans-unit id="c79239282ea84b694c2ff3f7994ebbc2e5632bef" translate="yes" xml:space="preserve">
          <source>The long value at the given index</source>
          <target state="translated">주어진 인덱스에서 긴 값</target>
        </trans-unit>
        <trans-unit id="dfaf557e40de816032daab1d1e5fa1bca6c17fee" translate="yes" xml:space="preserve">
          <source>The longest parameter list (which is necessarily unique) is called the &quot;external parameter list&quot; (&lt;code&gt;(A...)&lt;/code&gt;).</source>
          <target state="translated">가장 긴 매개 변수 목록 (반드시 고유해야 함)을 &quot;외부 매개 변수 목록&quot;( &lt;code&gt;(A...)&lt;/code&gt; )이라고합니다.</target>
        </trans-unit>
        <trans-unit id="1d72b29a13e96aa2ab5bec4f4960d9bf05dd4ca7" translate="yes" xml:space="preserve">
          <source>The longs between the buffer's current position and its limit, if any, are copied to the beginning of the buffer. That is, the long at index</source>
          <target state="translated">버퍼의 현재 위치와 한계 사이의 길이 (있는 경우)가 버퍼의 시작 부분에 복사됩니다. 즉, 인덱스에서 긴</target>
        </trans-unit>
        <trans-unit id="8f97430d73cc9eb412585724172865d7a0204ec4" translate="yes" xml:space="preserve">
          <source>The look and feel can be specified in two distinct ways: by specifying the fully qualified name of the class for the look and feel, or by creating an instance of &lt;code&gt;LookAndFeel&lt;/code&gt; and passing it to &lt;code&gt;setLookAndFeel&lt;/code&gt;. The following example illustrates setting the look and feel to the system look and feel:</source>
          <target state="translated">룩앤필은 룩앤필에 대한 클래스의 정규화 된 이름을 지정하거나 &lt;code&gt;LookAndFeel&lt;/code&gt; 인스턴스를 만들어 &lt;code&gt;setLookAndFeel&lt;/code&gt; 에 전달하는 두 가지 고유 한 방법으로 지정할 수 있습니다 . 다음 예제는 시스템 룩앤필에 대한 룩앤필 설정을 보여줍니다.</target>
        </trans-unit>
        <trans-unit id="a463f1c161b0d4fb031b15ef8115b10141fc9f2d" translate="yes" xml:space="preserve">
          <source>The look and feel delegate for this component.</source>
          <target state="translated">이 구성 요소의 룩앤필 델리게이트입니다.</target>
        </trans-unit>
        <trans-unit id="db4d630ff9e9a96eaf54953466e703b389363e92" translate="yes" xml:space="preserve">
          <source>The lookup context here is determined by the &lt;a href=&quot;#lookupClass()&quot;&gt;lookup class&lt;/a&gt; and the &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt;.</source>
          <target state="translated">여기에서 조회 컨텍스트는 &lt;a href=&quot;#lookupClass()&quot;&gt;조회 클래스&lt;/a&gt; 와 &lt;a href=&quot;#lookupModes()&quot;&gt;조회 모드에&lt;/a&gt; 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="40975c4dee3ca2e0f78259cd0ab4e0ceb950d836" translate="yes" xml:space="preserve">
          <source>The lookup context here is determined by the &lt;a href=&quot;#lookupClass()&quot;&gt;lookup class&lt;/a&gt;, its class loader, and the &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt;.</source>
          <target state="translated">여기에서 조회 컨텍스트는 &lt;a href=&quot;#lookupClass()&quot;&gt;조회 클래스&lt;/a&gt; , 클래스 로더 및 &lt;a href=&quot;#lookupModes()&quot;&gt;조회 모드에&lt;/a&gt; 의해 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="724d90431dc6c40dfa771623abe64fe926c9582a" translate="yes" xml:space="preserve">
          <source>The lookup context here is determined by the &lt;a href=&quot;#lookupClass()&quot;&gt;lookup class&lt;/a&gt;, its class loader, and the &lt;a href=&quot;#lookupModes()&quot;&gt;lookup modes&lt;/a&gt;. In particular, the method first attempts to load the requested class, and then determines whether the class is accessible to this lookup object.</source>
          <target state="translated">여기에서 조회 컨텍스트는 &lt;a href=&quot;#lookupClass()&quot;&gt;조회 클래스&lt;/a&gt; , 클래스 로더 및 &lt;a href=&quot;#lookupModes()&quot;&gt;조회 모드에&lt;/a&gt; 의해 결정됩니다 . 특히 메서드는 먼저 요청 된 클래스를로드 한 다음이 조회 개체에서 클래스에 액세스 할 수 있는지 여부를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="115845b78e3d345e654654b29fbc9a49e13cfd06" translate="yes" xml:space="preserve">
          <source>The lookup descriptor string has the same format as for the lookup methods on &lt;a href=&quot;../invoke/methodhandles.lookup&quot;&gt;&lt;code&gt;MethodHandles.Lookup&lt;/code&gt;&lt;/a&gt;. If &lt;code&gt;kind&lt;/code&gt; is &lt;code&gt;CONSTRUCTOR&lt;/code&gt;, the name is ignored and the return type of the lookup type must be &lt;code&gt;void&lt;/code&gt;. If &lt;code&gt;kind&lt;/code&gt; corresponds to a virtual method invocation, the lookup type includes the method parameters but not the receiver type.</source>
          <target state="translated">조회 설명자 문자열은 &lt;a href=&quot;../invoke/methodhandles.lookup&quot;&gt; &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; &lt;/a&gt; 의 조회 메서드와 동일한 형식을 갖습니다 . 경우 &lt;code&gt;kind&lt;/code&gt; 입니다 &lt;code&gt;CONSTRUCTOR&lt;/code&gt; 의 이름은 무시되고 조회 형식의 반환 형식이어야합니다 &lt;code&gt;void&lt;/code&gt; . &lt;code&gt;kind&lt;/code&gt; 가 가상 메소드 호출에 해당하는 경우 조회 유형에는 메소드 매개 변수가 포함되지만 수신자 유형은 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="b272f649079873d2e863da4a821d90ce67298a81" translate="yes" xml:space="preserve">
          <source>The lookup descriptor string has the same format as for the various variants of &lt;code&gt;CONSTANT_MethodHandle_info&lt;/code&gt; and for the lookup methods on &lt;a href=&quot;../invoke/methodhandles.lookup&quot;&gt;&lt;code&gt;MethodHandles.Lookup&lt;/code&gt;&lt;/a&gt;. For a method or constructor invocation, it is interpreted as a method type descriptor; for field access, it is interpreted as a field descriptor. If &lt;code&gt;kind&lt;/code&gt; is &lt;code&gt;CONSTRUCTOR&lt;/code&gt;, the &lt;code&gt;name&lt;/code&gt; parameter is ignored and the return type of the lookup descriptor must be &lt;code&gt;void&lt;/code&gt;. If &lt;code&gt;kind&lt;/code&gt; corresponds to a virtual method invocation, the lookup type includes the method parameters but not the receiver type.</source>
          <target state="translated">조회 설명자 문자열은 &lt;code&gt;CONSTANT_MethodHandle_info&lt;/code&gt; 의 다양한 변형 및 &lt;a href=&quot;../invoke/methodhandles.lookup&quot;&gt; &lt;code&gt;MethodHandles.Lookup&lt;/code&gt; &lt;/a&gt; 의 조회 메서드와 동일한 형식을 갖습니다 . 메서드 또는 생성자 호출의 경우 메서드 유형 설명 자로 해석됩니다. 필드 액세스의 경우 필드 설명 자로 해석됩니다. 경우 &lt;code&gt;kind&lt;/code&gt; 입니다 &lt;code&gt;CONSTRUCTOR&lt;/code&gt; 의 &lt;code&gt;name&lt;/code&gt; 매개 변수는 무시되고 조회 기술자의 반환 형식이어야합니다 &lt;code&gt;void&lt;/code&gt; . &lt;code&gt;kind&lt;/code&gt; 가 가상 메소드 호출에 해당하는 경우 조회 유형에는 메소드 매개 변수가 포함되지만 수신자 유형은 포함되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5c72e04246b336a2af96b0479870fef89b228464" translate="yes" xml:space="preserve">
          <source>The lookup has the &lt;a href=&quot;methodhandles.lookup#MODULE&quot;&gt;&lt;code&gt;MODULE&lt;/code&gt;&lt;/a&gt; lookup mode.</source>
          <target state="translated">조회에는 &lt;a href=&quot;methodhandles.lookup#MODULE&quot;&gt; &lt;code&gt;MODULE&lt;/code&gt; &lt;/a&gt; 조회 모드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1dafcee2bd49424918b839236e0943f9a18e833f" translate="yes" xml:space="preserve">
          <source>The lookup operation returns the best matching language tags. It is defined in RFC 4647 as follows: &quot;By contrast with filtering, each language range represents the most specific tag that is an acceptable match. The first matching tag found, according to the user's priority, is considered the closest match and is the item returned.&quot;</source>
          <target state="translated">조회 작업은 가장 일치하는 언어 태그를 반환합니다. RFC 4647에서 다음과 같이 정의됩니다. &quot;필터링과 달리 각 언어 범위는 가장 일치하는 태그를 나타냅니다. 사용자의 우선 순위에 따라 첫 번째로 일치하는 태그가 가장 근접한 것으로 간주되어 항목입니다 돌아 왔습니다. &quot;</target>
        </trans-unit>
        <trans-unit id="582ea1d78ac5e0bbdf20061d342770ab78ddb355" translate="yes" xml:space="preserve">
          <source>The loop counter &lt;code&gt;i&lt;/code&gt; is a loop iteration variable of type &lt;code&gt;int&lt;/code&gt;. The &lt;code&gt;start&lt;/code&gt; and &lt;code&gt;end&lt;/code&gt; handles determine the start (inclusive) and end (exclusive) values of the loop counter. The loop counter will be initialized to the &lt;code&gt;int&lt;/code&gt; value returned from the evaluation of the &lt;code&gt;start&lt;/code&gt; handle and run to the value returned from &lt;code&gt;end&lt;/code&gt; (exclusively) with a step width of 1.</source>
          <target state="translated">루프 카운터 &lt;code&gt;i&lt;/code&gt; 는 &lt;code&gt;int&lt;/code&gt; 유형의 루프 반복 변수입니다 . &lt;code&gt;start&lt;/code&gt; 과 &lt;code&gt;end&lt;/code&gt; 핸들 루프 카운터의 개시 (포함) 및 최종 (전용)의 값을 결정한다. 루프 카운터는 &lt;code&gt;start&lt;/code&gt; 핸들 의 평가에서 반환 된 &lt;code&gt;int&lt;/code&gt; 값 으로 초기화되고 단계 너비가 1 인 &lt;code&gt;end&lt;/code&gt; (배타적) 에서 반환 된 값으로 실행됩니다 .</target>
        </trans-unit>
        <trans-unit id="5820f1110b4ac8206be50aedb9a96eb1dee59652" translate="yes" xml:space="preserve">
          <source>The loop handle's parameter types are the types &lt;code&gt;(A...)&lt;/code&gt;, from the external parameter list.</source>
          <target state="translated">루프 핸들의 매개 변수 유형은 외부 매개 변수 목록 의 유형 &lt;code&gt;(A...)&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="05c190dd921348eef4cc73ac43f724bbb06cf616" translate="yes" xml:space="preserve">
          <source>The loop handle's result type is the result type &lt;code&gt;V&lt;/code&gt; of the body.</source>
          <target state="translated">루프 핸들의 결과 유형은 본문 의 결과 유형 &lt;code&gt;V&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="0b15aba7014ff4a3b81f3cf9a325dec861715d64" translate="yes" xml:space="preserve">
          <source>The low threshold value.</source>
          <target state="translated">임계 값이 낮습니다.</target>
        </trans-unit>
        <trans-unit id="e1027b0c41f8a52e9615bc3f18f897cf025a055b" translate="yes" xml:space="preserve">
          <source>The low-level description of the method</source>
          <target state="translated">방법의 저수준 설명</target>
        </trans-unit>
        <trans-unit id="ffff1c68c1a0ba5294760be0d89a2dde4ba6c681" translate="yes" xml:space="preserve">
          <source>The lower bound for the value.</source>
          <target state="translated">값의 하한입니다.</target>
        </trans-unit>
        <trans-unit id="e619709126d9f839cc6e96eab8827b8daf2ca29f" translate="yes" xml:space="preserve">
          <source>The lower grades of synchronization are known as</source>
          <target state="translated">낮은 등급의 동기화는 다음과 같이 알려져 있습니다.</target>
        </trans-unit>
        <trans-unit id="89c09aa4a3982e510232a448559f376283539736" translate="yes" xml:space="preserve">
          <source>The lowercase letters &lt;code&gt;'a'&lt;/code&gt; through &lt;code&gt;'z'&lt;/code&gt; (&lt;code&gt;'\u0061'&lt;/code&gt; through &lt;code&gt;'\u007a'&lt;/code&gt;),</source>
          <target state="translated">소문자 &lt;code&gt;'a'&lt;/code&gt; ~ &lt;code&gt;'z'&lt;/code&gt; ( &lt;code&gt;'\u0061'&lt;/code&gt; ~ &lt;code&gt;'\u007a'&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="e7adbe88d306194f65bd3e489d21fb2637f8310d" translate="yes" xml:space="preserve">
          <source>The lowest justification priority.</source>
          <target state="translated">The lowest justification priority.</target>
        </trans-unit>
        <trans-unit id="7f05176865317c7a2037690568a4839fcef6385c" translate="yes" xml:space="preserve">
          <source>The lowest level of synchronization is simply writing any changes made to the &lt;code&gt;RowSet&lt;/code&gt; object to its underlying data source. The writer does nothing to check for conflicts. If there is a conflict and the data source values are overwritten, the changes other parties have made by to the data source are lost.</source>
          <target state="translated">The lowest level of synchronization is simply writing any changes made to the &lt;code&gt;RowSet&lt;/code&gt; object to its underlying data source. The writer does nothing to check for conflicts. If there is a conflict and the data source values are overwritten, the changes other parties have made by to the data source are lost.</target>
        </trans-unit>
        <trans-unit id="c289c722dc9ced058183a4c8dddca407e0a3bc2d" translate="yes" xml:space="preserve">
          <source>The lowest scope. Returns -1 if no attribute with the given name is defined in any scope.</source>
          <target state="translated">가장 낮은 범위입니다. 지정된 이름의 속성이 범위에 정의되어 있지 않으면 -1을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4ad9007613dd197a0fbc0803b4bc74f8f25064fb" translate="yes" xml:space="preserve">
          <source>The lub of the exception parameter</source>
          <target state="translated">예외 매개 변수의 lub</target>
        </trans-unit>
        <trans-unit id="bd3e31a106389ea2a7d2a231b5298c5fd7241a88" translate="yes" xml:space="preserve">
          <source>The m-let service extends the &lt;code&gt;java.net.URLClassLoader&lt;/code&gt; and can be used to load remote classes and jar files in the VM of the agent.</source>
          <target state="translated">m-let 서비스는 &lt;code&gt;java.net.URLClassLoader&lt;/code&gt; 를 확장 하며 에이전트의 VM에서 원격 클래스 및 jar 파일을로드하는 데 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="76e9f4ba76cdff11494ca93f5ded5f00aaee995c" translate="yes" xml:space="preserve">
          <source>The magic caret position is set to null when the caret position changes. A timer is used to determine the new location (after the caret change). When the timer fires, if the magic caret position is still null it is reset to the current caret position. Any actions that change the caret position and want the magic caret position to remain the same, must remember the magic caret position, change the cursor, and then set the magic caret position to its original value. This has the benefit that only actions that want the magic caret position to persist (such as open/down) need to know about it.</source>
          <target state="translated">The magic caret position is set to null when the caret position changes. A timer is used to determine the new location (after the caret change). When the timer fires, if the magic caret position is still null it is reset to the current caret position. Any actions that change the caret position and want the magic caret position to remain the same, must remember the magic caret position, change the cursor, and then set the magic caret position to its original value. This has the benefit that only actions that want the magic caret position to persist (such as open/down) need to know about it.</target>
        </trans-unit>
        <trans-unit id="9f854df23c307bcb9e34b9849451f1d804656d22" translate="yes" xml:space="preserve">
          <source>The magnitude is formatted as the integer part of</source>
          <target state="translated">크기는 정수 부분으로 형식화됩니다</target>
        </trans-unit>
        <trans-unit id="de144eeaeb048750a7b6ca494a4484b91c3ca8c0" translate="yes" xml:space="preserve">
          <source>The main API for dates, times, instants, and durations.</source>
          <target state="translated">날짜, 시간, 인스턴트 및 기간에 대한 기본 API입니다.</target>
        </trans-unit>
        <trans-unit id="87ad397b72e4e2670cb9fd154ad2b5c78ebccb49" translate="yes" xml:space="preserve">
          <source>The main API is based around the calendar system defined in ISO-8601. However, there are other calendar systems, and this package provides basic support for them. The alternate calendars are provided in the &lt;a href=&quot;package-summary&quot;&gt;&lt;code&gt;java.time.chrono&lt;/code&gt;&lt;/a&gt; package.</source>
          <target state="translated">기본 API는 ISO-8601에 정의 된 캘린더 시스템을 기반으로합니다. 그러나 다른 달력 시스템이 있으며이 패키지는이를 지원합니다. 대체 캘린더는 &lt;a href=&quot;package-summary&quot;&gt; &lt;code&gt;java.time.chrono&lt;/code&gt; &lt;/a&gt; 패키지에 제공 됩니다.</target>
        </trans-unit>
        <trans-unit id="8c8f745cb8e21c4eb3d06ea2d2c82dc8a5899e5a" translate="yes" xml:space="preserve">
          <source>The main areas of functionality of &lt;code&gt;javax.script&lt;/code&gt; package include</source>
          <target state="translated">&lt;code&gt;javax.script&lt;/code&gt; 패키지 의 주요 기능 영역은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fa38b9d3cc817e051120893ceae532dec4aa8c9a" translate="yes" xml:space="preserve">
          <source>The main class for creating a dialog window.</source>
          <target state="translated">The main class for creating a dialog window.</target>
        </trans-unit>
        <trans-unit id="6c1502deae96e4a60d2e7e71a3c7ca6c943736aa" translate="yes" xml:space="preserve">
          <source>The main class for creating a dialog window. You can use this class to create a custom dialog, or invoke the many class methods in &lt;a href=&quot;joptionpane&quot;&gt;&lt;code&gt;JOptionPane&lt;/code&gt;&lt;/a&gt; to create a variety of standard dialogs. For information about creating dialogs, see &lt;em&gt;The Java Tutorial&lt;/em&gt; section &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;How to Make Dialogs&lt;/a&gt;.</source>
          <target state="translated">The main class for creating a dialog window. You can use this class to create a custom dialog, or invoke the many class methods in &lt;a href=&quot;joptionpane&quot;&gt; &lt;code&gt;JOptionPane&lt;/code&gt; &lt;/a&gt; to create a variety of standard dialogs. For information about creating dialogs, see &lt;em&gt;The Java Tutorial&lt;/em&gt; section &lt;a href=&quot;http://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;How to Make Dialogs&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="97bb8e37bd5c9c59f40ebeba9d77505224afb692" translate="yes" xml:space="preserve">
          <source>The main class for creating a dialog window. You can use this class to create a custom dialog, or invoke the many class methods in &lt;a href=&quot;joptionpane&quot;&gt;&lt;code&gt;JOptionPane&lt;/code&gt;&lt;/a&gt; to create a variety of standard dialogs. For information about creating dialogs, see &lt;em&gt;The Java Tutorial&lt;/em&gt; section &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;How to Make Dialogs&lt;/a&gt;.</source>
          <target state="translated">대화 창을 만들기위한 기본 클래스입니다. 이 클래스를 사용하여 사용자 정의 대화 상자를 만들거나 &lt;a href=&quot;joptionpane&quot;&gt; &lt;code&gt;JOptionPane&lt;/code&gt; &lt;/a&gt; 에서 많은 클래스 메서드를 호출하여 다양한 표준 대화 상자를 만들 수 있습니다. 대화 상자를 만드는 방법에 대한 자세한 내용은 &lt;em&gt;The Java Tutorial&lt;/em&gt; section &lt;a href=&quot;https://docs.oracle.com/javase/tutorial/uiswing/components/dialog.html&quot;&gt;How to Make Dialogs를&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fabda07c3b6a162bd5e5f2d89cab43fa50597f1e" translate="yes" xml:space="preserve">
          <source>The main class name of the initial module</source>
          <target state="translated">The main class name of the initial module</target>
        </trans-unit>
        <trans-unit id="1c8b07dc81c5cae446072ef321854dc8c9b754b2" translate="yes" xml:space="preserve">
          <source>The main computation performed by this task.</source>
          <target state="translated">이 작업으로 수행되는 주요 계산입니다.</target>
        </trans-unit>
        <trans-unit id="b5a067152faa9b4aadd51479a1dd861ea68df4fd" translate="yes" xml:space="preserve">
          <source>The main date and time API is built on the ISO calendar system. The chronology operates behind the scenes to represent the general concept of a calendar system.</source>
          <target state="translated">기본 날짜 및 시간 API는 ISO 캘린더 시스템에 구축되어 있습니다. 연대기는 배후에서 작동하여 달력 시스템의 일반적인 개념을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="b853030ffb2c3edc982b0284b46a35af47f22884" translate="yes" xml:space="preserve">
          <source>The main date and time API is built on the ISO calendar system. The chronology operates behind the scenes to represent the general concept of a calendar system. For example, the Japanese, Minguo, Thai Buddhist and others.</source>
          <target state="translated">기본 날짜 및 시간 API는 ISO 캘린더 시스템에 구축되어 있습니다. 연대기는 배후에서 작동하여 달력 시스템의 일반적인 개념을 나타냅니다. 예를 들어, 일본어, Minguo, 태국 불교 등.</target>
        </trans-unit>
        <trans-unit id="9e477ae5e9b40e17482fe2bfa8054488de70b68c" translate="yes" xml:space="preserve">
          <source>The main date-time classes provide two methods - one for formatting, &lt;code&gt;format(DateTimeFormatter formatter)&lt;/code&gt;, and one for parsing, &lt;code&gt;parse(CharSequence text, DateTimeFormatter formatter)&lt;/code&gt;.</source>
          <target state="translated">기본 날짜-시간 클래스는 &lt;code&gt;format(DateTimeFormatter formatter)&lt;/code&gt; 지정 ( format (DateTimeFormatter formatter) )과 &lt;code&gt;parse(CharSequence text, DateTimeFormatter formatter)&lt;/code&gt; 두 가지 메소드를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="bb46ba1feb50e25623a3a5d3b3522e2efd2bea39" translate="yes" xml:space="preserve">
          <source>The main input tray in the printer.</source>
          <target state="translated">프린터의 기본 입력 용지함.</target>
        </trans-unit>
        <trans-unit id="cc02b164970a6d4a21efa3fd53651baa0221e88b" translate="yes" xml:space="preserve">
          <source>The main package of the Java Image I/O API.</source>
          <target state="translated">Java Image I / O API의 기본 패키지입니다.</target>
        </trans-unit>
        <trans-unit id="1d37f37048cf33621cee29dc0a50808607688cb5" translate="yes" xml:space="preserve">
          <source>The main purpose of this class is to provide the information needed by a developer to determine the suitability of a transfer or to import the data contained within. But it also doubles as a controller for customizing properties during drag and drop, such as whether or not to show the drop location, and which drop action to use.</source>
          <target state="translated">The main purpose of this class is to provide the information needed by a developer to determine the suitability of a transfer or to import the data contained within. But it also doubles as a controller for customizing properties during drag and drop, such as whether or not to show the drop location, and which drop action to use.</target>
        </trans-unit>
        <trans-unit id="de83861a0d99308ff61bd5e2a4e93009db4a5f14" translate="yes" xml:space="preserve">
          <source>The major version of the profile.</source>
          <target state="translated">The major version of the profile.</target>
        </trans-unit>
        <trans-unit id="6e6d641c4b17fb0dacb9c8e5fb7c375230a35ab5" translate="yes" xml:space="preserve">
          <source>The majority of methods for setting placeholder parameters take two parameters, with the first parameter indicating which placeholder parameter is to be set, and the second parameter giving the value to be set. Methods such as &lt;code&gt;setInt&lt;/code&gt;, &lt;code&gt;setString&lt;/code&gt;, &lt;code&gt;setBoolean&lt;/code&gt;, and &lt;code&gt;setLong&lt;/code&gt; fall into this category. After these methods have been called, a call to the method &lt;code&gt;getParams&lt;/code&gt; will return an array with the values that have been set. Each element in the array is an &lt;code&gt;Object&lt;/code&gt; instance representing the values that have been set. The order of these values in the array is determined by the &lt;code&gt;int&lt;/code&gt; (the first parameter) passed to the setter method. The values in the array are the values (the second parameter) passed to the setter method. In other words, the first element in the array is the value to be set for the first placeholder parameter in the &lt;code&gt;RowSet&lt;/code&gt; object's command. The second element is the value to be set for the second placeholder parameter, and so on.</source>
          <target state="translated">The majority of methods for setting placeholder parameters take two parameters, with the first parameter indicating which placeholder parameter is to be set, and the second parameter giving the value to be set. Methods such as &lt;code&gt;setInt&lt;/code&gt; , &lt;code&gt;setString&lt;/code&gt; , &lt;code&gt;setBoolean&lt;/code&gt; , and &lt;code&gt;setLong&lt;/code&gt; fall into this category. After these methods have been called, a call to the method &lt;code&gt;getParams&lt;/code&gt; will return an array with the values that have been set. Each element in the array is an &lt;code&gt;Object&lt;/code&gt; instance representing the values that have been set. The order of these values in the array is determined by the &lt;code&gt;int&lt;/code&gt; (the first parameter) passed to the setter method. The values in the array are the values (the second parameter) passed to the setter method. In other words, the first element in the array is the value to be set for the first placeholder parameter in the &lt;code&gt;RowSet&lt;/code&gt; object's command. The second element is the value to be set for the second placeholder parameter, and so on.</target>
        </trans-unit>
        <trans-unit id="7c2589d24fa9c9214645e03d72358e3dc3ded803" translate="yes" xml:space="preserve">
          <source>The malicious window might make itself look and behave like a real full desktop, so that information entered by the unsuspecting user is captured and subsequently misused</source>
          <target state="translated">The malicious window might make itself look and behave like a real full desktop, so that information entered by the unsuspecting user is captured and subsequently misused</target>
        </trans-unit>
        <trans-unit id="0e36b3ef42e46df654a51669dc5826745c3c9e82" translate="yes" xml:space="preserve">
          <source>The management interface for a buffer pool, for example a pool of &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer#allocateDirect(int)&quot;&gt;&lt;code&gt;direct&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/nio/mappedbytebuffer&quot;&gt;&lt;code&gt;mapped&lt;/code&gt;&lt;/a&gt; buffers.</source>
          <target state="translated">The management interface for a buffer pool, for example a pool of &lt;a href=&quot;../../../../java.base/java/nio/bytebuffer#allocateDirect(int)&quot;&gt; &lt;code&gt;direct&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/nio/mappedbytebuffer&quot;&gt; &lt;code&gt;mapped&lt;/code&gt; &lt;/a&gt; buffers.</target>
        </trans-unit>
        <trans-unit id="41ec39971544e0ec4cf01b3d1f692a5a209747ec" translate="yes" xml:space="preserve">
          <source>The management interface for a buffer pool, for example a pool of &lt;a href=&quot;../../nio/bytebuffer#allocateDirect-int-&quot;&gt;&lt;code&gt;direct&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../nio/mappedbytebuffer&quot;&gt;&lt;code&gt;mapped&lt;/code&gt;&lt;/a&gt; buffers.</source>
          <target state="translated">버퍼 풀의 관리 인터페이스 (예 : &lt;a href=&quot;../../nio/bytebuffer#allocateDirect-int-&quot;&gt; &lt;code&gt;direct&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../nio/mappedbytebuffer&quot;&gt; &lt;code&gt;mapped&lt;/code&gt; &lt;/a&gt; 버퍼 풀)</target>
        </trans-unit>
        <trans-unit id="479285103caa46331ea7728d61e5be1ac361ef47" translate="yes" xml:space="preserve">
          <source>The management interface for a memory manager.</source>
          <target state="translated">메모리 관리자를위한 관리 인터페이스.</target>
        </trans-unit>
        <trans-unit id="fcf3a8512fdd807d7e4faed1fbe89790494ceb21" translate="yes" xml:space="preserve">
          <source>The management interface for a memory manager. A memory manager manages one or more memory pools of the Java virtual machine.</source>
          <target state="translated">메모리 관리자를위한 관리 인터페이스. 메모리 관리자는 Java 가상 머신의 하나 이상의 메모리 풀을 관리합니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
