<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="c06c1ce8a39c986dc062094680d50f906264fd51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LongSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;reduction&lt;/a&gt; target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;LongSummaryStatistics&lt;/code&gt; 는 &lt;a href=&quot;stream/stream&quot;&gt;스트림&lt;/a&gt; 의 &lt;a href=&quot;stream/stream#collect(java.util.stream.Collector)&quot;&gt;감소&lt;/a&gt; 대상 으로 사용할 수 있습니다 . 예를 들면 :</target>
        </trans-unit>
        <trans-unit id="fe40cf5a0c540e512a970d39b1fe3e2ed2a27a9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LongSummaryStatistics&lt;/code&gt; can be used as a &lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;Stream.collect(Collector)&lt;/a&gt; reduction} target for a &lt;a href=&quot;stream/stream&quot;&gt;stream&lt;/a&gt;. For example:</source>
          <target state="translated">&lt;code&gt;LongSummaryStatistics&lt;/code&gt; 는 &lt;a href=&quot;stream/stream&quot;&gt;스트림&lt;/a&gt; 의 &lt;a href=&quot;stream/stream#collect-java.util.stream.Collector-&quot;&gt;Stream.collect (Collector)&lt;/a&gt; reduction} 대상 으로 사용할 수 있습니다 . 예를 들면 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="10b1ffb40eaff00c7a1433afcc696364c75a8d14" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LookAndFeel&lt;/code&gt;, as the name implies, encapsulates a look and feel.</source>
          <target state="translated">&lt;code&gt;LookAndFeel&lt;/code&gt; 은 이름에서 알 수 있듯이 모양과 느낌을 캡슐화합니다.</target>
        </trans-unit>
        <trans-unit id="aebfe27b59099d91cecf8d4bb4ddf83d069a7002" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;LookAndFeel&lt;/code&gt;, as the name implies, encapsulates a look and feel. Beyond installing a look and feel most developers never need to interact directly with &lt;code&gt;LookAndFeel&lt;/code&gt;. In general only developers creating a custom look and feel need to concern themselves with this class.</source>
          <target state="translated">&lt;code&gt;LookAndFeel&lt;/code&gt; 은 이름에서 알 수 있듯이 모양과 느낌을 캡슐화합니다. 모양과 느낌을 설치하는 것 외에 대부분의 개발자는 &lt;code&gt;LookAndFeel&lt;/code&gt; 과 직접 상호 작용할 필요가 없습니다 . 일반적으로 사용자 지정 모양과 느낌을 만드는 개발자 만이 클래스에 관심을 가져야합니다.</target>
        </trans-unit>
        <trans-unit id="69076c6772cd965e02c6c47b9fb650c6866211c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the kind of file manager forwarded to by this object</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; 이 객체에 의해 전송 된 파일 관리자의 종류</target>
        </trans-unit>
        <trans-unit id="dca1ab3b491612f56682eb781666eec867316456" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the model</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - 모델 유형</target>
        </trans-unit>
        <trans-unit id="77d261006b8e07101f7bcedc43e7f6fb1c4f4f9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the model the &lt;code&gt;RowFilter&lt;/code&gt; applies to</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - &lt;code&gt;RowFilter&lt;/code&gt; 가 적용되는 모델의 유형</target>
        </trans-unit>
        <trans-unit id="bfc4570005edffbd39ee303a9b120a663d80f244" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the model to which the &lt;code&gt;RowFilter&lt;/code&gt; applies</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - &lt;code&gt;RowFilter&lt;/code&gt; 가 적용되는 모델의 유형</target>
        </trans-unit>
        <trans-unit id="d00e40668e0df86397f02daa21c0937f56a79825" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the model, which must be an implementation of &lt;code&gt;TableModel&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - &lt;code&gt;TableModel&lt;/code&gt; 의 구현이어야하는 모델의 유형</target>
        </trans-unit>
        <trans-unit id="272b9f141e22803e983aa961786e91b506716e85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the model; for example &lt;code&gt;PersonModel&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - 모델의 유형; 예를 들어 &lt;code&gt;PersonModel&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="68a8b4dfea9599cfe86bf0512d623759d8e9e013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the resulting &lt;code&gt;ConcurrentMap&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - 결과 &lt;code&gt;ConcurrentMap&lt;/code&gt; 의 유형</target>
        </trans-unit>
        <trans-unit id="53f43757309e4e44acf3be6d255188e86e6fccf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the resulting &lt;code&gt;Map&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - 결과 &lt;code&gt;Map&lt;/code&gt; 의 유형</target>
        </trans-unit>
        <trans-unit id="f980e11347e5a103e5f2d981d468daa74f9a2216" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;M&lt;/code&gt; - the type of the underlying model</source>
          <target state="translated">&lt;code&gt;M&lt;/code&gt; - 기본 모델의 유형</target>
        </trans-unit>
        <trans-unit id="0aceb7282d98fbd98293227151377de51093bfd2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MBeanServerPermission(&quot;createMBeanServer&quot;)&lt;/code&gt; implies &lt;code&gt;MBeanServerPermission(&quot;newMBeanServer&quot;)&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MBeanServerPermission(&quot;createMBeanServer&quot;)&lt;/code&gt; 의미 &lt;code&gt;MBeanServerPermission(&quot;newMBeanServer&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="275620a4a0e33bba654cf67432c0cba90dfdc542" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICROS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of microseconds added. This is equivalent to &lt;a href=&quot;instant#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICROS&lt;/code&gt; - 지정된 마이크로 초 수를 더한 &lt;code&gt;Instant&lt;/code&gt; 를 반환합니다 . 이것은 1,000을 곱한 &lt;a href=&quot;instant#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="dc8ae6ce638ccefcc165409d1db5067ca7eb46b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICROS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of microseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICROS&lt;/code&gt; - 지정된 수의 마이크로 초가 추가 된 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 양에 1,000을 곱한 &lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="758cfad5f3eb63bd7ade931e37341b4dd68153a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICROS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of microseconds added. This is equivalent to &lt;a href=&quot;localtime#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICROS&lt;/code&gt; - 지정된 수의 마이크로 초가 추가 된 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 1,000을 곱한 &lt;a href=&quot;localtime#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="4960b9e0a4ec57c6d69dab4d83595b7edb3a661f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICROS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of microseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICROS&lt;/code&gt; - 지정된 수의 마이크로 초가 추가 된 &lt;code&gt;Instant&lt;/code&gt; 를 반환합니다 . 이것은 양에 1,000을 곱한 &lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d865c617ce03e7f5e2fc344256727da3c5f4fbcf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICRO_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified micro-of-day. This completely replaces the time and is equivalent to using &lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt; with the micro-of-day multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICRO_OF_DAY&lt;/code&gt; - 지정된 마이크로 일 의 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 시간을 완전히 대체하며 &lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt; 를 마이크로-오브-데이에 1,000을 곱한 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="78d8aed84e75340fccec40c838f77b07bfd67fbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICRO_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified micro-of-day. This completely replaces the time and is equivalent to using &lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt; with the micro-of-day multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MICRO_OF_DAY&lt;/code&gt; - 지정된 날짜를 가진 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 시간을 완전히 대체하며 &lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt; 를 사용하는 것과 같습니다. 을 1,000에 곱한 오늘의 .</target>
        </trans-unit>
        <trans-unit id="fb086ce993caad7fcbf5885ba9e7089553c08000" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICRO_OF_SECOND&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the nano-of-second replaced by the specified micro-of-second multiplied by 1,000. The hour, minute and second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MICRO_OF_SECOND&lt;/code&gt; - 초를 나노초로 지정한 초 단위로 1,000을 곱한 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 시, 분 및 초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="73cfb94a8463eee9d517d161e0190472d9b30d5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MICRO_OF_SECOND&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the nano-of-second replaced by the specified micro-of-second multiplied by 1,000. The epoch-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MICRO_OF_SECOND&lt;/code&gt; - 지정된 초 단위에 1,000을 곱한 초 단위의 나노초로 &lt;code&gt;Instant&lt;/code&gt; 를 반환합니다 . 에포크 초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3157be627b93fb984f98af52c04b7586dc625fe4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; - 지정된 천년이 더해진 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 이는 1,000을 곱한 금액으로 &lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 . 새 달과 연도에 대해 유효하지 않은 경우 날짜는 변경되지 않습니다. 이 경우 날짜는 새 월과 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="2b222e9423ffdc15611372113c2cebd20aa090b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;localdate#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; - 지정된 수의 천년이 추가 된 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 이는 1,000을 곱한 &lt;a href=&quot;localdate#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 호출과 동일합니다 . 새 월과 연도에 유효하지 않은 한, 월은 변경되지 않습니다. 이 경우 월은 새 달과 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="3872fc60eafce889212bc09ad0b8f08230b3893e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; - 지정된 천년을 더한 &lt;code&gt;Year&lt;/code&gt; 를 반환합니다 . 이는 1,000을 곱한 금액으로 &lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="011b340b99bba91e92a8fe40dd62c56e37aee39a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;year#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; - 지정된 수의 천년이 추가 된 &lt;code&gt;Year&lt;/code&gt; 를 반환합니다 . 이는 1,000을 곱한 &lt;a href=&quot;year#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 호출과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="27a6370c7b40d4826a6d1fb48880788fadc620a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; - 지정된 천년을 더한 &lt;code&gt;YearMonth&lt;/code&gt; 를 반환합니다 . 이는 1,000을 곱한 금액으로 &lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="3c064d23f75e51fc6ce892da9fc8437f36a4bc04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLENNIA&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of millennia added. This is equivalent to calling &lt;a href=&quot;yearmonth#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000.</source>
          <target state="translated">&lt;code&gt;MILLENNIA&lt;/code&gt; - 지정된 수의 천년이 추가 된 &lt;code&gt;YearMonth&lt;/code&gt; 를 반환합니다 . 이는 1,000을 곱한 &lt;a href=&quot;yearmonth#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 호출과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="3b5b9c5c0c7482ef9da87f2ea19a85b1ab3b0b56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLIS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of milliseconds added. This is equivalent to &lt;a href=&quot;instant#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLIS&lt;/code&gt; - 지정된 밀리 초가 추가 된 &lt;code&gt;Instant&lt;/code&gt; 을 반환합니다 . 이는 1,000,000을 곱한 &lt;a href=&quot;instant#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f048ddc272f621cb1afa076a1e24ce34e431e97d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLIS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of milliseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLIS&lt;/code&gt; - 지정된 밀리 초가 추가 된 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 양에 1,000,000을 곱한 &lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ec1240411ee90ccaa40430da6eecf66a0a0b2b5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLIS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of milliseconds added. This is equivalent to &lt;a href=&quot;localtime#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLIS&lt;/code&gt; - 지정된 밀리 초가 추가 된 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이는 1,000,000을 곱한 &lt;a href=&quot;localtime#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="64e2494098e102b1e1cf05595d5a4ff1116dfab9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLIS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of milliseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLIS&lt;/code&gt; - 지정된 밀리 초가 추가 된 &lt;code&gt;Instant&lt;/code&gt; 를 반환합니다 . 이것은 양에 1,000,000을 곱한 &lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="0c7a3319d5b32bb8eddc107c5a6a97fd80f476b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLI_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified milli-of-day. This completely replaces the time and is equivalent to using &lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt; with the milli-of-day multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLI_OF_DAY&lt;/code&gt; - 지정된 밀리- 오일 의 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 시간을 완전히 대체하며 , 밀리-오브 일에 1,000,000을 곱한 &lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt; 를 사용하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="1cdb67c5d2d1731ec4727e2be70579e5f5895edb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLI_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified milli-of-day. This completely replaces the time and is equivalent to using &lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt; with the milli-of-day multiplied by 1,000,000.</source>
          <target state="translated">&lt;code&gt;MILLI_OF_DAY&lt;/code&gt; - 지정된 날짜를 가진 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 시간을 완전히 대체하며 &lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt; 를 백만 분의 1을 곱한 값으로 사용하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="4be7716ab1b357a7a7487ad9eff06d2f3b85afdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the nano-of-second replaced by the specified milli-of-second multiplied by 1,000,000. The hour, minute and second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; - 지정된 밀리 초로 1,000,000을 곱한 초 단위의 나노초로 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 시, 분 및 초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f0706116c4949378dc73354dba353d09564af583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the nano-of-second replaced by the specified milli-of-second multiplied by 1,000,000. The epoch-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MILLI_OF_SECOND&lt;/code&gt; - 지정된 밀리 초로 1,000,000을 곱한 초 단위 나노초로 &lt;code&gt;Instant&lt;/code&gt; 를 반환합니다 . 에포크 초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="986faa0149ffbe6e7a1f8f2ae3cf153c34ee5cf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MIMEType&lt;/code&gt; - a &lt;code&gt;String&lt;/code&gt; containing a file suffix (</source>
          <target state="translated">&lt;code&gt;MIMEType&lt;/code&gt; - &lt;code&gt;String&lt;/code&gt; 파일 접미사를 포함하는 (</target>
        </trans-unit>
        <trans-unit id="dfd8077c71e40a35b7c069b386fa98a10b3a2aaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MIMETypes&lt;/code&gt; - an array of &lt;code&gt;String&lt;/code&gt;s indicating the format's MIME types. If no MIME types are defined, &lt;code&gt;null&lt;/code&gt; should be supplied. An array of length 0 will be normalized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MIMETypes&lt;/code&gt; - 형식의 MIME 타입을 나타내는 &lt;code&gt;String&lt;/code&gt; 배열 MIME 유형이 정의되어 있지 않으면 &lt;code&gt;null&lt;/code&gt; 을 제공해야합니다. 길이가 0 인 배열은 &lt;code&gt;null&lt;/code&gt; 로 정규화됩니다 .</target>
        </trans-unit>
        <trans-unit id="4d6f2f33fe0292fb3746649f633b15a900c87701" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MIMETypes&lt;/code&gt; - an array of &lt;code&gt;String&lt;/code&gt;s indicating the format's MIME types. If no suffixes are defined, &lt;code&gt;null&lt;/code&gt; should be supplied. An array of length 0 will be normalized to &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MIMETypes&lt;/code&gt; - 형식의 MIME 타입을 나타내는 &lt;code&gt;String&lt;/code&gt; 배열 접미사가 정의되어 있지 않으면 &lt;code&gt;null&lt;/code&gt; 을 제공해야합니다. 길이가 0 인 배열은 &lt;code&gt;null&lt;/code&gt; 로 정규화됩니다 .</target>
        </trans-unit>
        <trans-unit id="c00d6797f122b2e0a2040e8b3e291b32dde186d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTES&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of minutes added. This is equivalent to &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 60.</source>
          <target state="translated">&lt;code&gt;MINUTES&lt;/code&gt; - 지정된 시간 (분)이 추가 된 &lt;code&gt;Instant&lt;/code&gt; 를 반환합니다 . 양에 60을 곱한 &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="aec0242da4a5b45ccd580835c85b902f794143dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTES&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of minutes added. This is equivalent to &lt;a href=&quot;#plusMinutes(long)&quot;&gt;&lt;code&gt;plusMinutes(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MINUTES&lt;/code&gt; - 반환 &lt;code&gt;LocalTime&lt;/code&gt; 추가 지정된 시간 (분)으로한다. 이것은 &lt;a href=&quot;#plusMinutes(long)&quot;&gt; &lt;code&gt;plusMinutes(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="fc6581c95b350aae6e7561ffa5b274f87a40e296" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTES&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of minutes added. This is equivalent to &lt;a href=&quot;localtime#plusMinutes-long-&quot;&gt;&lt;code&gt;plusMinutes(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MINUTES&lt;/code&gt; - 반환 &lt;code&gt;LocalTime&lt;/code&gt; 추가 지정된 시간 (분)으로한다. 이것은 &lt;a href=&quot;localtime#plusMinutes-long-&quot;&gt; &lt;code&gt;plusMinutes(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5f9301edfad0a968ce8d21372577cb347891c181" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTES&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of minutes added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt; with the amount multiplied by 60.</source>
          <target state="translated">&lt;code&gt;MINUTES&lt;/code&gt; - 지정된 시간 (분)이 추가 된 &lt;code&gt;Instant&lt;/code&gt; 을 반환합니다 . 이는 양에 60을 곱한 &lt;a href=&quot;#plusSeconds(long)&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="6b43e03380bd9feb31e7706b7d0b89b0aecd7d64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTE_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified minute-of-day. The second-of-minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MINUTE_OF_DAY&lt;/code&gt; - 지정된 요일이 있는 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 초와 나노초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5e5386981cecab229ba147fbf04cfdf412444a5e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified minute-of-hour. The hour, second-of-minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;MINUTE_OF_HOUR&lt;/code&gt; - 지정된 시간으로 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 시간, 초 및 나노초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="68d5ffe9725bdeacc3d1f8879b27212371fc3c5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODELESS&lt;/code&gt; dialog doesn't block any top-level windows.</source>
          <target state="translated">&lt;code&gt;MODELESS&lt;/code&gt; 대화 상자는 최상위 창을 차단하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0482e5082ef0b5fecb1a5cde873fb57bdc5139f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; - The image will conform to the metadata object passed in to a write. &lt;code&gt;setTiling&lt;/code&gt; will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; - 이미지는 쓰기로 전달 된 메타 데이터 개체를 따릅니다. &lt;code&gt;setTiling&lt;/code&gt; 은 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="de4c3e7e43bf04eb98d2586edad699178fc54444" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; - The output image will use whatever progression parameters are found in the metadata objects passed into the writer.</source>
          <target state="translated">&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; - 출력 이미지는 라이터로 전달 된 메타 데이터 개체에서 찾은 진행 매개 변수를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="06b48f2ba2e8d422b131232ba5b83710bca0fbd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; - Use whatever compression parameters are specified in metadata objects passed in to the writer.</source>
          <target state="translated">&lt;code&gt;MODE_COPY_FROM_METADATA&lt;/code&gt; - 기록기에 전달 된 메타 데이터 개체에 지정된 압축 매개 변수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="8450b8a8e562cb70ca9bb009dd21772bec303c2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DEFAULT&lt;/code&gt; - The image will be tiled using default parameters. &lt;code&gt;setTiling&lt;/code&gt; will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MODE_DEFAULT&lt;/code&gt; - 이미지는 기본 매개 변수를 사용하여 바둑판 식으로 배열됩니다. &lt;code&gt;setTiling&lt;/code&gt; 은 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="37d9f7063eed0f08ff989209aefe7373a5e5cf9c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DEFAULT&lt;/code&gt; - The image will be written progressively, with parameters chosen by the writer.</source>
          <target state="translated">&lt;code&gt;MODE_DEFAULT&lt;/code&gt; - 라이터가 선택한 매개 변수를 사용하여 이미지가 점진적으로 기록됩니다.</target>
        </trans-unit>
        <trans-unit id="a638892fe2001d5254d0071c363e02a7228a4f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DEFAULT&lt;/code&gt; - Use default compression parameters.</source>
          <target state="translated">&lt;code&gt;MODE_DEFAULT&lt;/code&gt; - 기본 압축 매개 변수를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="528da00ce58da145cebea2c4dab97be90a8c91dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DISABLED&lt;/code&gt; - If the mode is set to &lt;code&gt;MODE_DISABLED&lt;/code&gt;, methods that query or modify the compression type or parameters will throw an &lt;code&gt;IllegalStateException&lt;/code&gt; (if compression is normally supported by the plug-in). Some writers, such as JPEG, do not normally offer uncompressed output. In this case, attempting to set the mode to &lt;code&gt;MODE_DISABLED&lt;/code&gt; will throw an &lt;code&gt;UnsupportedOperationException&lt;/code&gt; and the mode will not be changed.</source>
          <target state="translated">&lt;code&gt;MODE_DISABLED&lt;/code&gt; - 모드가 &lt;code&gt;MODE_DISABLED&lt;/code&gt; 로 설정된 경우 압축 유형 또는 매개 변수를 조회하거나 수정하는 메소드는 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생시킵니다 (일반적으로 플러그인이 압축을 지원하는 경우). JPEG와 같은 일부 작성자는 일반적으로 압축되지 않은 출력을 제공하지 않습니다. 이 경우 모드를 &lt;code&gt;MODE_DISABLED&lt;/code&gt; 로 설정하려고 하면 &lt;code&gt;UnsupportedOperationException&lt;/code&gt; 이 발생 하고 모드가 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="f206e6196afc4ad94c8df84d4d3e5579127b6325" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DISABLED&lt;/code&gt; - No progression. Use this to turn off progression.</source>
          <target state="translated">&lt;code&gt;MODE_DISABLED&lt;/code&gt; - 진행되지 않습니다. 진행을 끄려면 이것을 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="b50b40acbcde82ffcf24c01be42755116db76fde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_DISABLED&lt;/code&gt; - The image will not be tiled. &lt;code&gt;setTiling&lt;/code&gt; will throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MODE_DISABLED&lt;/code&gt; - 이미지가 바둑판 식으로 배열되지 않습니다. &lt;code&gt;setTiling&lt;/code&gt; 은 &lt;code&gt;IllegalStateException&lt;/code&gt; 을 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="5560582ceb954a684763a67ee6047633da9f9b47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; - Compress using the compression type and quality settings specified in this &lt;code&gt;ImageWriteParam&lt;/code&gt;. Any previously set compression parameters are discarded.</source>
          <target state="translated">&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; - 이 &lt;code&gt;ImageWriteParam&lt;/code&gt; 에 지정된 압축 유형 및 품질 설정을 사용하여 압축합니다 . 이전에 설정된 압축 매개 변수는 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="680145e8265ebb943e714b525c627b831ccab0c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; - The image will be tiled according to parameters given in the &lt;a href=&quot;#setTiling(int,int,int,int)&quot;&gt;&lt;code&gt;setTiling&lt;/code&gt;&lt;/a&gt; method. Any previously set tiling parameters are discarded.</source>
          <target state="translated">&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; - 이미지는 &lt;a href=&quot;#setTiling(int,int,int,int)&quot;&gt; &lt;code&gt;setTiling&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 매개 변수에 따라 타일링됩니다 . 이전에 설정된 타일링 매개 변수는 모두 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="e62c8ed22e04601d262ad72623d5093f995262bd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; - The image will be tiled according to parameters given in the &lt;a href=&quot;imagewriteparam#setTiling-int-int-int-int-&quot;&gt;&lt;code&gt;setTiling&lt;/code&gt;&lt;/a&gt; method. Any previously set tiling parameters are discarded.</source>
          <target state="translated">&lt;code&gt;MODE_EXPLICIT&lt;/code&gt; - 이미지는 &lt;a href=&quot;imagewriteparam#setTiling-int-int-int-int-&quot;&gt; &lt;code&gt;setTiling&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 매개 변수에 따라 바둑판 식으로 배열됩니다 . 이전에 설정된 타일링 매개 변수는 삭제됩니다.</target>
        </trans-unit>
        <trans-unit id="d9e6697c2c353a18d4331a09ee2ccabfb2c1cb06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTHS&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of months added. This is equivalent to &lt;a href=&quot;#plusMonths(long)&quot;&gt;&lt;code&gt;plusMonths(long)&lt;/code&gt;&lt;/a&gt;. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;MONTHS&lt;/code&gt; - 지정된 개월 수가 추가 된 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 이것은 &lt;a href=&quot;#plusMonths(long)&quot;&gt; &lt;code&gt;plusMonths(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 . 새 달과 연도에 대해 유효하지 않은 경우 날짜는 변경되지 않습니다. 이 경우 날짜는 새 월과 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="35fd54ca93a59bacc3006f1ce3027ace744edf73" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTHS&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of months added. This is equivalent to &lt;a href=&quot;localdate#plusMonths-long-&quot;&gt;&lt;code&gt;plusMonths(long)&lt;/code&gt;&lt;/a&gt;. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;MONTHS&lt;/code&gt; - 지정된 개월 수가 추가 된 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 이것은 &lt;a href=&quot;localdate#plusMonths-long-&quot;&gt; &lt;code&gt;plusMonths(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 . 새 월과 연도에 유효하지 않은 한, 월은 변경되지 않습니다. 이 경우 월은 새 달과 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="602fb31be003841ee46a4c305ee2778b480b95a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTHS&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of months added. This is equivalent to &lt;a href=&quot;#plusMonths(long)&quot;&gt;&lt;code&gt;plusMonths(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MONTHS&lt;/code&gt; - 반환 &lt;code&gt;YearMonth&lt;/code&gt; 추가 개월의 지정된 번호를. 이것은 &lt;a href=&quot;#plusMonths(long)&quot;&gt; &lt;code&gt;plusMonths(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="4765ed8e635693fee304cc0c7c22eb226d0ee681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTHS&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of months added. This is equivalent to &lt;a href=&quot;yearmonth#plusMonths-long-&quot;&gt;&lt;code&gt;plusMonths(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;MONTHS&lt;/code&gt; - 반환 &lt;code&gt;YearMonth&lt;/code&gt; 추가 개월의 지정된 번호를. 이것은 &lt;a href=&quot;yearmonth#plusMonths-long-&quot;&gt; &lt;code&gt;plusMonths(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="a7b9a1c53940311a0d34ddca6467ea28bb9c8280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified month-of-year. The year will be unchanged. The day-of-month will also be unchanged, unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; - 지정된 연도 의 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 연도는 변경되지 않습니다. 새 월과 연도에 유효하지 않은 한, 월도 변경되지 않습니다. 이 경우 월은 새 달과 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="376c694ce18aaf2f716de71060cfc2fe6c3e6124" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified month-of-year. The year will be unchanged.</source>
          <target state="translated">&lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; - 지정된 연도 의 &lt;code&gt;YearMonth&lt;/code&gt; 를 반환합니다 . 연도는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="121eab465441f63a73c8383822bab0e7ce4515eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; events are delivered to the &lt;code&gt;Component&lt;/code&gt; in which the mouse button was pressed until the mouse button is released (regardless of whether the mouse position is within the bounds of the &lt;code&gt;Component&lt;/code&gt;). Due to platform-dependent Drag&amp;amp;Drop implementations, &lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; events may not be delivered during a native Drag&amp;amp;Drop operation. In a multi-screen environment mouse drag events are delivered to the &lt;code&gt;Component&lt;/code&gt; even if the mouse position is outside the bounds of the &lt;code&gt;GraphicsConfiguration&lt;/code&gt; associated with that &lt;code&gt;Component&lt;/code&gt;. However, the reported position for mouse drag events in this case may differ from the actual mouse position:</source>
          <target state="translated">&lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; 이벤트는 마우스 버튼을 놓을 때까지 마우스 버튼을 눌렀 던 &lt;code&gt;Component&lt;/code&gt; 에 전달됩니다 (마우스 위치가 &lt;code&gt;Component&lt;/code&gt; 경계 내에 있는지 여부에 관계없이 ). 플랫폼에 따라 달라지는 Drag &amp;amp; Drop 구현으로 인해 &lt;code&gt;MOUSE_DRAGGED&lt;/code&gt; 이벤트는 기본 Drag &amp;amp; Drop 작업 중에 전달되지 않을 수 있습니다. 다중 화면 환경에서 마우스 드래그 이벤트는 마우스 위치가 해당 &lt;code&gt;Component&lt;/code&gt; 와 관련된 &lt;code&gt;GraphicsConfiguration&lt;/code&gt; 경계를 벗어난 경우에도 &lt;code&gt;Component&lt;/code&gt; 에 전달됩니다 . 그러나이 경우 마우스 끌기 이벤트에 대해보고 된 위치는 실제 마우스 위치와 다를 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="24d1182915192717959f1a97d1cb1c6b57d86b39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Map&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Map&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ff63702eaeb0fd043018a7488668a3494a4523b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MarshalledObject&lt;/code&gt; facilitates passing objects in RMI calls that are not automatically deserialized immediately by the remote peer.</source>
          <target state="translated">&lt;code&gt;MarshalledObject&lt;/code&gt; 는 원격 피어에 의해 즉시 자동으로 역 직렬화되지 않는 RMI 호출에서 개체를 전달하는 것을 용이하게합니다.</target>
        </trans-unit>
        <trans-unit id="0fb6dd037a96250c328c8d92ced4aeb04bf7b380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaskFormatter&lt;/code&gt; is used to format and edit strings.</source>
          <target state="translated">&lt;code&gt;MaskFormatter&lt;/code&gt; 는 문자열을 형식화하고 편집하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="4b44d2f2c495f04c3c1f363e40a7a654ebda789e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MaskFormatter&lt;/code&gt; is used to format and edit strings. The behavior of a &lt;code&gt;MaskFormatter&lt;/code&gt; is controlled by way of a String mask that specifies the valid characters that can be contained at a particular location in the &lt;code&gt;Document&lt;/code&gt; model. The following characters can be specified:</source>
          <target state="translated">&lt;code&gt;MaskFormatter&lt;/code&gt; 는 문자열을 형식화하고 편집하는 데 사용됩니다. &lt;code&gt;MaskFormatter&lt;/code&gt; 의 동작은 &lt;code&gt;Document&lt;/code&gt; 모델 의 특정 위치에 포함될 수있는 유효한 문자를 지정하는 문자열 마스크를 통해 제어됩니다 . 다음 문자를 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="56346b54ddc05b5bad96363388a06e5337fb8a1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MediaSize&lt;/code&gt; is not yet used to specify media. Its current role is as a mapping for named media (see &lt;a href=&quot;mediasizename&quot;&gt;&lt;code&gt;MediaSizeName&lt;/code&gt;&lt;/a&gt;). Clients can use the mapping method &lt;code&gt;MediaSize.getMediaSizeForName(MediaSizeName)&lt;/code&gt; to find the physical dimensions of the &lt;code&gt;MediaSizeName&lt;/code&gt; instances enumerated in this API. This is useful for clients which need this information to format &amp;amp; paginate printing.</source>
          <target state="translated">&lt;code&gt;MediaSize&lt;/code&gt; 는 아직 미디어를 지정하는 데 사용되지 않습니다. 현재 역할은 명명 된 미디어에 대한 매핑입니다 ( &lt;a href=&quot;mediasizename&quot;&gt; &lt;code&gt;MediaSizeName&lt;/code&gt; &lt;/a&gt; 참조 ). 클라이언트는 매핑 메서드 &lt;code&gt;MediaSize.getMediaSizeForName(MediaSizeName)&lt;/code&gt; 을 사용 하여이 API에 열거 된 &lt;code&gt;MediaSizeName&lt;/code&gt; 인스턴스 의 물리적 크기를 찾을 수 있습니다. 이것은 인쇄를 포맷하고 페이지를 매기는 데이 정보가 필요한 클라이언트에게 유용합니다.</target>
        </trans-unit>
        <trans-unit id="6b338ba3ddb2c6a300cb5e6c334e45ac7bf2bb10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MediaSizeName&lt;/code&gt; matching these dimensions, or &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MediaSizeName&lt;/code&gt; 이 차원과 일치하는 MediaSizeName 또는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="dc94883fc9e07c6c8d5f85a6e3870288443c3944" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MemoryUsage&lt;/code&gt; is a &lt;em&gt;model-specific class&lt;/em&gt;. With Standard MBeans, a client of the MBean Server cannot access the &lt;code&gt;Usage&lt;/code&gt; attribute if it does not know the class &lt;code&gt;MemoryUsage&lt;/code&gt;. Suppose the client is a generic console based on JMX technology. Then the console would have to be configured with the model-specific classes of every application it might connect to. The problem is even worse for clients that are not written in the Java language. Then there may not be any way to tell the client what a &lt;code&gt;MemoryUsage&lt;/code&gt; looks like.</source>
          <target state="translated">&lt;code&gt;MemoryUsage&lt;/code&gt; 는 &lt;em&gt;모델 별 클래스&lt;/em&gt; 입니다. 표준 MBean을 사용하면 MBean 서버의 클라이언트가 &lt;code&gt;MemoryUsage&lt;/code&gt; 클래스를 모르면 &lt;code&gt;Usage&lt;/code&gt; 속성에 액세스 할 수 없습니다 . 클라이언트가 JMX 기술에 기반한 일반 콘솔이라고 가정하십시오. 그런 다음 콘솔은 연결할 수있는 모든 응용 프로그램의 모델 별 클래스로 구성해야합니다. Java 언어로 작성되지 않은 클라이언트의 경우 문제가 더욱 악화됩니다. 그러면 클라이언트에게 &lt;code&gt;MemoryUsage&lt;/code&gt; 의 모양 을 알려주는 방법이 없을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2631a6c8258f4f1c679e020fd0f7232d7ea4cdff" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MemoryUsage&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; with attributes as specified in the &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;MemoryUsage&lt;/code&gt; 는 &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 속성 을 사용하여 &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 에&lt;/a&gt; 맵핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="9e76812395aa6e5732329df1c79c4c9edb846ec9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MemoryUsage&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; with attributes as specified in the &lt;a href=&quot;memoryusage#from-javax.management.openmbean.CompositeData-&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;MemoryUsage&lt;/code&gt; 는 &lt;a href=&quot;memoryusage#from-javax.management.openmbean.CompositeData-&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 속성 을 사용하여 &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 에&lt;/a&gt; 맵핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="5b986b604d7d375068f37a30961d975d461c9911" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageFormat&lt;/code&gt; provides a means to produce concatenated messages in a language-neutral way.</source>
          <target state="translated">&lt;code&gt;MessageFormat&lt;/code&gt; 은 언어 중립적 인 방식으로 연결된 메시지를 생성하는 수단을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="9520869e6e04c0dbfdf170a31127c8e8e4df4ea6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageFormat&lt;/code&gt; provides a means to produce concatenated messages in a language-neutral way. Use this to construct messages displayed for end users.</source>
          <target state="translated">&lt;code&gt;MessageFormat&lt;/code&gt; 은 언어 중립적 인 방식으로 연결된 메시지를 생성하는 수단을 제공합니다. 이를 사용하여 최종 사용자에게 표시되는 메시지를 구성하십시오.</target>
        </trans-unit>
        <trans-unit id="9ef1967fdaaeaaa97e2c583a8747c5532b6c8a68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageFormat&lt;/code&gt; takes a set of objects, formats them, then inserts the formatted strings into the pattern at the appropriate places.</source>
          <target state="translated">&lt;code&gt;MessageFormat&lt;/code&gt; 은 일련의 객체를 가져 와서 포맷 한 다음 형식이 지정된 문자열을 적절한 위치의 패턴에 삽입합니다.</target>
        </trans-unit>
        <trans-unit id="c3cf391f8a99415be580806a8d0e01562d5f4047" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MessageFormat&lt;/code&gt; uses patterns of the following form:</source>
          <target state="translated">&lt;code&gt;MessageFormat&lt;/code&gt; 은 다음 형식의 패턴을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="fee9acc35c10ee430a5974eec9c8f5a90db1abf7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalLookAndFeel&lt;/code&gt; derives it's color palette and fonts from &lt;code&gt;MetalTheme&lt;/code&gt;. The default theme is &lt;code&gt;OceanTheme&lt;/code&gt;. The theme can be changed using the &lt;code&gt;setCurrentTheme&lt;/code&gt; method, refer to it for details on changing the theme. Prior to 1.5 the default theme was &lt;code&gt;DefaultMetalTheme&lt;/code&gt;. The system property &lt;code&gt;&quot;swing.metalTheme&quot;&lt;/code&gt; can be set to &lt;code&gt;&quot;steel&quot;&lt;/code&gt; to indicate the default should be &lt;code&gt;DefaultMetalTheme&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MetalLookAndFeel&lt;/code&gt; 은 &lt;code&gt;MetalTheme&lt;/code&gt; 에서 색상 팔레트와 글꼴을 가져옵니다 . 기본 테마는 &lt;code&gt;OceanTheme&lt;/code&gt; 입니다. 테마는 &lt;code&gt;setCurrentTheme&lt;/code&gt; 메소드를 사용하여 변경할 수 있습니다 . 테마 변경에 대한 자세한 내용은이를 참조하십시오. 1.5 이전의 기본 테마는 &lt;code&gt;DefaultMetalTheme&lt;/code&gt; 입니다. 시스템 속성 &lt;code&gt;&quot;swing.metalTheme&quot;&lt;/code&gt; 를 &lt;code&gt;&quot;steel&quot;&lt;/code&gt; 로 설정 하여 기본값이 &lt;code&gt;DefaultMetalTheme&lt;/code&gt; 여야 함을 나타낼 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="2590625a9a9683e4bd7d3869bc8cf6bf18e0d5b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalLookAndFeel&lt;/code&gt; maintains the current theme that the the &lt;code&gt;ComponentUI&lt;/code&gt; implementations for metal use. Refer to &lt;a href=&quot;metallookandfeel#setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&quot;&gt;&lt;code&gt;MetalLookAndFeel.setCurrentTheme(MetalTheme)&lt;/code&gt;&lt;/a&gt; for details on changing the current theme.</source>
          <target state="translated">&lt;code&gt;MetalLookAndFeel&lt;/code&gt; 은 금속 사용을위한 &lt;code&gt;ComponentUI&lt;/code&gt; 구현 이 현재 테마를 유지합니다 . 를 참조하십시오 &lt;a href=&quot;metallookandfeel#setCurrentTheme(javax.swing.plaf.metal.MetalTheme)&quot;&gt; &lt;code&gt;MetalLookAndFeel.setCurrentTheme(MetalTheme)&lt;/code&gt; &lt;/a&gt; 현재의 테마를 변경하는 방법에 대한 자세한 내용은.</target>
        </trans-unit>
        <trans-unit id="c9f53fb25fbb023dd23903d230e78d50776306de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalRootPaneUI&lt;/code&gt; provides support for the &lt;code&gt;windowDecorationStyle&lt;/code&gt; property of &lt;code&gt;JRootPane&lt;/code&gt;. &lt;code&gt;MetalRootPaneUI&lt;/code&gt; does this by way of installing a custom &lt;code&gt;LayoutManager&lt;/code&gt;, a private &lt;code&gt;Component&lt;/code&gt; to render the appropriate widgets, and a private &lt;code&gt;Border&lt;/code&gt;. The &lt;code&gt;LayoutManager&lt;/code&gt; is always installed, regardless of the value of the &lt;code&gt;windowDecorationStyle&lt;/code&gt; property, but the &lt;code&gt;Border&lt;/code&gt; and &lt;code&gt;Component&lt;/code&gt; are only installed/added if the &lt;code&gt;windowDecorationStyle&lt;/code&gt; is other than &lt;code&gt;JRootPane.NONE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MetalRootPaneUI&lt;/code&gt; 는 &lt;code&gt;JRootPane&lt;/code&gt; 의 &lt;code&gt;windowDecorationStyle&lt;/code&gt; 속성에 대한 지원을 제공합니다 . &lt;code&gt;MetalRootPaneUI&lt;/code&gt; 는 사용자 정의 &lt;code&gt;LayoutManager&lt;/code&gt; , 적절한 위젯을 렌더링 하는 개인 &lt;code&gt;Component&lt;/code&gt; 및 개인 &lt;code&gt;Border&lt;/code&gt; 를 설치하여이를 수행 합니다. &lt;code&gt;LayoutManager&lt;/code&gt; 관계없이 항상의 값에 설치되어 &lt;code&gt;windowDecorationStyle&lt;/code&gt; 의 특성,하지만 &lt;code&gt;Border&lt;/code&gt; 및 &lt;code&gt;Component&lt;/code&gt; 경우에만 설치 / 추가 &lt;code&gt;windowDecorationStyle&lt;/code&gt; 이 이외 &lt;code&gt;JRootPane.NONE&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d68288751909ed7d5ecee1048c477e01e2dad650" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalTheme&lt;/code&gt; is abstract, see &lt;code&gt;DefaultMetalTheme&lt;/code&gt; and &lt;code&gt;OceanTheme&lt;/code&gt; for concrete implementations.</source>
          <target state="translated">&lt;code&gt;MetalTheme&lt;/code&gt; 는 추상 입니다. 구체적인 구현 은 &lt;code&gt;DefaultMetalTheme&lt;/code&gt; 및 &lt;code&gt;OceanTheme&lt;/code&gt; 를 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="9fff4e537b4a9182e7eb89277f216c1273922a9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalTheme&lt;/code&gt; provides a number of public methods for getting colors. These methods are implemented in terms of a handful of protected abstract methods. A subclass need only override the protected abstract methods (&lt;code&gt;getPrimary1&lt;/code&gt;, &lt;code&gt;getPrimary2&lt;/code&gt;, &lt;code&gt;getPrimary3&lt;/code&gt;, &lt;code&gt;getSecondary1&lt;/code&gt;, &lt;code&gt;getSecondary2&lt;/code&gt;, and &lt;code&gt;getSecondary3&lt;/code&gt;); although a subclass may override the other public methods for more control over the set of colors that are used.</source>
          <target state="translated">&lt;code&gt;MetalTheme&lt;/code&gt; 는 색상을 얻기위한 다양한 공개 방법을 제공합니다. 이러한 메서드는 보호 된 추상 메서드의 측면에서 구현됩니다. 서브 클래스는 보호 된 추상 메서드 ( &lt;code&gt;getPrimary1&lt;/code&gt; , &lt;code&gt;getPrimary2&lt;/code&gt; , &lt;code&gt;getPrimary3&lt;/code&gt; , &lt;code&gt;getSecondary1&lt;/code&gt; , &lt;code&gt;getSecondary2&lt;/code&gt; 및 &lt;code&gt;getSecondary3&lt;/code&gt; ) 만 재정의하면됩니다 . 사용되는 색상 세트를 더 잘 제어하기 위해 하위 클래스가 다른 공용 메서드를 재정의 할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="39c5f184c133a129c1d46365a4a2cd94174db342" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalTheme&lt;/code&gt; provides the color palette and fonts used by the Java Look and Feel.</source>
          <target state="translated">&lt;code&gt;MetalTheme&lt;/code&gt; 는 Java Look and Feel에서 사용하는 색상 팔레트와 글꼴을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7912e8cfe14ca9cd1892901356cff75ec9a881d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MetalTreeUI&lt;/code&gt; allows for configuring how to visually render the spacing and delineation between nodes. The following hints are supported:</source>
          <target state="translated">&lt;code&gt;MetalTreeUI&lt;/code&gt; 를 사용하면 노드 간의 간격과 묘사를 시각적으로 렌더링하는 방법을 구성 할 수 있습니다. 다음 힌트가 지원됩니다.</target>
        </trans-unit>
        <trans-unit id="1ad9f5aeb9a85beb3ae2195036e7be21db838e0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MethodType&lt;/code&gt; objects are sometimes derived from bytecode instructions such as &lt;code&gt;invokedynamic&lt;/code&gt;, specifically from the type descriptor strings associated with the instructions in a class file's constant pool.</source>
          <target state="translated">&lt;code&gt;MethodType&lt;/code&gt; 객체는 때때로 &lt;code&gt;invokedynamic&lt;/code&gt; 과 같은 바이트 코드 명령어 , 특히 클래스 파일의 상수 풀에있는 명령어와 관련된 형식 설명자 문자열에서 파생됩니다 .</target>
        </trans-unit>
        <trans-unit id="e7eb915d538d5617b4efd4c2d02820c4afb3fcdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDevice&lt;/code&gt; is the base interface for all MIDI devices.</source>
          <target state="translated">&lt;code&gt;MidiDevice&lt;/code&gt; 는 모든 MIDI 장치의 기본 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="26fe6a8452f631ee24f8b497f415179f3fdfa388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDevice&lt;/code&gt; is the base interface for all MIDI devices. Common devices include synthesizers, sequencers, MIDI input ports, and MIDI output ports.</source>
          <target state="translated">&lt;code&gt;MidiDevice&lt;/code&gt; 는 모든 MIDI 장치의 기본 인터페이스입니다. 일반적인 장치로는 신디사이저, 시퀀서, MIDI 입력 포트 및 MIDI 출력 포트가 있습니다.</target>
        </trans-unit>
        <trans-unit id="405225ae64a16ff62ec079f1d60dce0ec42e6f47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDeviceReceiver&lt;/code&gt; is a &lt;code&gt;Receiver&lt;/code&gt; which represents a MIDI input connector of a &lt;code&gt;MidiDevice&lt;/code&gt; (see &lt;a href=&quot;mididevice#getReceiver()&quot;&gt;&lt;code&gt;MidiDevice.getReceiver()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;MidiDeviceReceiver&lt;/code&gt; 는 A는 &lt;code&gt;Receiver&lt;/code&gt; (A)의 MIDI 입력 커넥터 나타내는 &lt;code&gt;MidiDevice&lt;/code&gt; 에가 (참조 &lt;a href=&quot;mididevice#getReceiver()&quot;&gt; &lt;code&gt;MidiDevice.getReceiver()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="0d8560ce74ba97d352f2e900a13909e682085f6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDeviceReceiver&lt;/code&gt; is a &lt;code&gt;Receiver&lt;/code&gt; which represents a MIDI input connector of a &lt;code&gt;MidiDevice&lt;/code&gt; (see &lt;a href=&quot;mididevice#getReceiver--&quot;&gt;&lt;code&gt;MidiDevice.getReceiver()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;MidiDeviceReceiver&lt;/code&gt; 는 A는 &lt;code&gt;Receiver&lt;/code&gt; (A)의 MIDI 입력 커넥터 나타내는 &lt;code&gt;MidiDevice&lt;/code&gt; 에가 (참조 &lt;a href=&quot;mididevice#getReceiver--&quot;&gt; &lt;code&gt;MidiDevice.getReceiver()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="a7b6cd9103cfaed812877522dcfcfc8fdfab0369" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; is a &lt;code&gt;Transmitter&lt;/code&gt; which represents a MIDI input connector of a &lt;code&gt;MidiDevice&lt;/code&gt; (see &lt;a href=&quot;mididevice#getTransmitter()&quot;&gt;&lt;code&gt;MidiDevice.getTransmitter()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; 는 A는 &lt;code&gt;Transmitter&lt;/code&gt; (A)의 MIDI 입력 커넥터 나타내는 &lt;code&gt;MidiDevice&lt;/code&gt; 에가 (참조 &lt;a href=&quot;mididevice#getTransmitter()&quot;&gt; &lt;code&gt;MidiDevice.getTransmitter()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="195d91d5fc1464655aaec4aa20de063d7858bace" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; is a &lt;code&gt;Transmitter&lt;/code&gt; which represents a MIDI input connector of a &lt;code&gt;MidiDevice&lt;/code&gt; (see &lt;a href=&quot;mididevice#getTransmitter--&quot;&gt;&lt;code&gt;MidiDevice.getTransmitter()&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;MidiDeviceTransmitter&lt;/code&gt; 는 A는 &lt;code&gt;Transmitter&lt;/code&gt; (A)의 MIDI 입력 커넥터 나타내는 &lt;code&gt;MidiDevice&lt;/code&gt; 에가 (참조 &lt;a href=&quot;mididevice#getTransmitter--&quot;&gt; &lt;code&gt;MidiDevice.getTransmitter()&lt;/code&gt; &lt;/a&gt; ).</target>
        </trans-unit>
        <trans-unit id="b2039df56725431a9a6773410c88c9c90a3f9da5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiMessage&lt;/code&gt; includes methods to get, but not set, these values. Setting them is a subclass responsibility.</source>
          <target state="translated">&lt;code&gt;MidiMessage&lt;/code&gt; 에는 이러한 값을 가져 오지만 설정하지 않는 메소드가 포함되어 있습니다. 그것들을 설정하는 것은 서브 클래스 책임입니다.</target>
        </trans-unit>
        <trans-unit id="ed042f848775afd38fb16b7ed17b1f10e0c7a1c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiMessage&lt;/code&gt; is the base class for MIDI messages.</source>
          <target state="translated">&lt;code&gt;MidiMessage&lt;/code&gt; 는 MIDI 메시지의 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="c08ba538afce075697225999b176a47b8db644a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MidiMessage&lt;/code&gt; is the base class for MIDI messages. They include not only the standard MIDI messages that a synthesizer can respond to, but also &quot;meta-events&quot; that can be used by sequencer programs. There are meta-events for such information as lyrics, copyrights, tempo indications, time and key signatures, markers, etc. For more information, see the Standard MIDI Files 1.0 specification, which is part of the Complete MIDI 1.0 Detailed Specification published by the MIDI Manufacturer's Association (&lt;a href=&quot;http://www.midi.org&quot;&gt;http://www.midi.org&lt;/a&gt;).</source>
          <target state="translated">&lt;code&gt;MidiMessage&lt;/code&gt; 는 MIDI 메시지의 기본 클래스입니다. 여기에는 신디사이저가 응답 할 수있는 표준 MIDI 메시지뿐만 아니라 시퀀서 프로그램에서 사용할 수있는 &quot;메타 이벤트&quot;도 포함됩니다. 가사, 저작권, 템포 표시, 시간 및 키 서명, 마커 등의 정보에 대한 메타 이벤트가 있습니다. 자세한 내용은 표준 MIDI 파일 1.0 사양을 참조하십시오. MIDI 제조업체 협회 ( &lt;a href=&quot;http://www.midi.org&quot;&gt;http://www.midi.org&lt;/a&gt; )</target>
        </trans-unit>
        <trans-unit id="86298ca308c9018cb4234698f85245e854878994" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MinguoEra&lt;/code&gt; is an enum representing the Minguo eras of BEFORE_ROC/ROC. This factory allows the enum to be obtained from the &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;MinguoEra&lt;/code&gt; 는 BEFORE_ROC / ROC의 Minguo 시대를 나타내는 열거 형입니다. 이 팩토리는, 열거 치를 &lt;code&gt;int&lt;/code&gt; 치 로부터 취득 할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="47b2c431155112d67b907341379ef8ea9df308bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModelWrapper&lt;/code&gt; makes a distinction between values as &lt;code&gt;Object&lt;/code&gt;s and &lt;code&gt;String&lt;/code&gt;s. This allows implementations to provide a custom string converter to be used instead of invoking &lt;code&gt;toString&lt;/code&gt; on the object.</source>
          <target state="translated">&lt;code&gt;ModelWrapper&lt;/code&gt; 는 값을 &lt;code&gt;Object&lt;/code&gt; 및 &lt;code&gt;String&lt;/code&gt; 으로 구분합니다 . 이를 통해 구현시 개체에서 &lt;code&gt;toString&lt;/code&gt; 을 호출하는 대신 사용할 사용자 지정 문자열 변환기를 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a17cad9396d74724601a9916024400e728758ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModuleDescriptor&lt;/code&gt; defines the &lt;a href=&quot;moduledescriptor#newModule(java.lang.String,java.util.Set)&quot;&gt;&lt;code&gt;newModule&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;moduledescriptor#newOpenModule(java.lang.String)&quot;&gt;&lt;code&gt;newOpenModule&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;moduledescriptor#newAutomaticModule(java.lang.String)&quot;&gt;&lt;code&gt;newAutomaticModule&lt;/code&gt;&lt;/a&gt; methods to create builders for building &lt;em&gt;normal&lt;/em&gt;, open, and automatic modules.</source>
          <target state="translated">&lt;code&gt;ModuleDescriptor&lt;/code&gt; 는 정의 &lt;a href=&quot;moduledescriptor#newModule(java.lang.String,java.util.Set)&quot;&gt; &lt;code&gt;newModule&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;moduledescriptor#newOpenModule(java.lang.String)&quot;&gt; &lt;code&gt;newOpenModule&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;moduledescriptor#newAutomaticModule(java.lang.String)&quot;&gt; &lt;code&gt;newAutomaticModule&lt;/code&gt; 의&lt;/a&gt; 구축 빌더를 만들 수있는 방법 &lt;em&gt;정상&lt;/em&gt; 개방, 자동 모듈.</target>
        </trans-unit>
        <trans-unit id="aa9f4b530f678df9fcc1a1769e9e4474daf7622e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ModuleDescriptor&lt;/code&gt; objects are immutable and safe for use by multiple concurrent threads.</source>
          <target state="translated">&lt;code&gt;ModuleDescriptor&lt;/code&gt; 객체는 여러 동시 스레드에서 사용하기에 불변하고 안전합니다.</target>
        </trans-unit>
        <trans-unit id="96ca82ac6d53abce80dada33b416776e964cc71f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonitorInfo&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; with attributes as specified in the &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;MonitorInfo&lt;/code&gt; 는 &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 속성 을 사용하여 &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 에&lt;/a&gt; 맵핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="a8cdb01369e01f3dedba8852c7b75c937295ece3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonitorInfo&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; with attributes as specified in the &lt;a href=&quot;monitorinfo#from-javax.management.openmbean.CompositeData-&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;MonitorInfo&lt;/code&gt; 는 &lt;a href=&quot;monitorinfo#from-javax.management.openmbean.CompositeData-&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 속성 을 가진 &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 에&lt;/a&gt; 맵핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="ebcf84a871263b6dbd5e43fbf162230b7727e862" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Month&lt;/code&gt; is an enum representing the 12 months of the year - January, February, March, April, May, June, July, August, September, October, November and December.</source>
          <target state="translated">&lt;code&gt;Month&lt;/code&gt; 은 1 월, 2 월, 3 월, 4 월, 5 월, 6 월, 7 월, 8 월, 9 월, 10 월, 11 월 및 12 월의 12 개월을 나타내는 열거 형입니다.</target>
        </trans-unit>
        <trans-unit id="57f29d4394ab40d0a748fd0e494f79c61d2e354c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Month&lt;/code&gt; is an enum representing the 12 months of the year. This factory allows the enum to be obtained from the &lt;code&gt;int&lt;/code&gt; value. The &lt;code&gt;int&lt;/code&gt; value follows the ISO-8601 standard, from 1 (January) to 12 (December).</source>
          <target state="translated">&lt;code&gt;Month&lt;/code&gt; 는 해당 연도의 12 개월을 나타내는 열거 형입니다. 이 팩토리는, 열거 치를 &lt;code&gt;int&lt;/code&gt; 치 로부터 취득 할 수 있도록합니다 . &lt;code&gt;int&lt;/code&gt; 값은 12 (12 월) 1 (년 1 월)에서 ISO-8601 표준을 따른다.</target>
        </trans-unit>
        <trans-unit id="e52c26c31ad3e0d356c866a23a748fc1098c94d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Month&lt;/code&gt; returns &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Month&lt;/code&gt; 은 &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="67bee7fd3d103a4c688f71811bd554f2d17ea0f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Month&lt;/code&gt; returns &lt;code&gt;MONTHS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Month&lt;/code&gt; 은 &lt;code&gt;MONTHS&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b7f2e0af6d8b9f20cff50fa4bdd489195f53fbf3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Month&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;Month&lt;/code&gt; 은 null을 반환</target>
        </trans-unit>
        <trans-unit id="4dc683f0bfc8790b020b9839b52b55382b5fe41a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonthDay&lt;/code&gt; is an immutable date-time object that represents the combination of a month and day-of-month. Any field that can be derived from a month and day, such as quarter-of-year, can be obtained.</source>
          <target state="translated">&lt;code&gt;MonthDay&lt;/code&gt; 는 변경 불가능한 날짜-시간 객체로 월과 일의 조합을 나타냅니다. 분기와 같이 월과 일에서 파생 될 수있는 모든 필드를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="dd469d958e54ff45b0e6f662d91e1d7d60507ee3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonthDay&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;MonthDay&lt;/code&gt; 는 null을 반환</target>
        </trans-unit>
        <trans-unit id="51421d3c0b56c0062b370587258d51af7289349b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonthDay&lt;/code&gt; returns null (does not represent a complete date or time)</source>
          <target state="translated">&lt;code&gt;MonthDay&lt;/code&gt; 는 null을 반환합니다 (완전한 날짜 또는 시간을 나타내지 않음)</target>
        </trans-unit>
        <trans-unit id="7e104804f5763e262284dd8a1601b5e7fac5b571" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonthDay&lt;/code&gt; returns null &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;MonthDay&lt;/code&gt; null를 돌려줍니다 &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt; 을</target>
        </trans-unit>
        <trans-unit id="4e934c2578f4b6a829793be8efc1665460fa70f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MonthDay&lt;/code&gt;, the combination of month-of-year and day-of-month, does not implement this interface. While the combination is contiguous, from days to months within years, the combination does not have sufficient information to define the valid range of values for day-of-month. As such, it is unable to implement plus/minus correctly.</source>
          <target state="translated">&lt;code&gt;MonthDay&lt;/code&gt; 년과 월의 조합 인 MonthDay 는이 인터페이스를 구현하지 않습니다. 조합이 연속되어 있지만 수년 내에 며칠에서 몇 달까지 지속되지만이 조합에는 유효한 월 값 범위를 정의하기에 충분한 정보가 없습니다. 따라서 플러스 / 마이너스를 올바르게 구현할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="99160db0e1f9f9e289d7b5e412bf5baa2ddb6d63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MouseInfo&lt;/code&gt; provides methods for getting information about the mouse, such as mouse pointer location and the number of mouse buttons.</source>
          <target state="translated">&lt;code&gt;MouseInfo&lt;/code&gt; 는 마우스 포인터 위치 및 마우스 단추 수와 같은 마우스에 대한 정보를 가져 오는 메서드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0dc0c531a21fa5d0fa52b7d7a7d9d5a421e4788e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MouseInputListener&lt;/code&gt; that are attached to the &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MouseInputListener&lt;/code&gt; &lt;code&gt;JTable&lt;/code&gt; 에 첨부 된 MouseInputListener .</target>
        </trans-unit>
        <trans-unit id="87e0ad612e015f3114d0402d4efd42c36b02c394" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;MouseInputListener&lt;/code&gt; that attached to &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;MouseInputListener&lt;/code&gt; &lt;code&gt;JList&lt;/code&gt; 에 첨부 된 MouseInputListener .</target>
        </trans-unit>
        <trans-unit id="3e8054e67a87654d667d8f32ebad101271b80481" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NAME = &lt;/code&gt;&lt;var&gt;mbeanname&lt;/var&gt;</source>
          <target state="translated">&lt;code&gt;NAME = &lt;/code&gt; &lt;var&gt;mbeanname&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="9da2bf96c6148955e43c58216af629bfaa07941d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANOS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of nanoseconds added. This is equivalent to &lt;a href=&quot;instant#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANOS&lt;/code&gt; - 지정된 나노초 수가 추가 된 &lt;code&gt;Instant&lt;/code&gt; 을 반환합니다 . 이것은 &lt;a href=&quot;instant#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5858ed006b01eb0219b0446df2fcc10aa97be73a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANOS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of nanoseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANOS&lt;/code&gt; - 지정된 수의 나노초가 추가 된 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 &lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="1a99ec50942f14620b5e3d876b47d131754b8621" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANOS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of nanoseconds added. This is equivalent to &lt;a href=&quot;localtime#plusNanos-long-&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANOS&lt;/code&gt; - 지정된 나노초 수가 추가 된 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 &lt;a href=&quot;localtime#plusNanos-long-&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="14d3b699722a37162938678071b56c793fc5e1ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANOS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of nanoseconds added. This is equivalent to &lt;a href=&quot;#plusNanos(long)&quot;&gt;&lt;code&gt;plusNanos(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANOS&lt;/code&gt; - 지정된 수의 나노초가 추가 된 &lt;code&gt;Instant&lt;/code&gt; 를 반환합니다 . 이것은 &lt;a href=&quot;#plusNanos(long)&quot;&gt; &lt;code&gt;plusNanos(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="6b52dc6ae65e63be82bb97fb2aeb5af28e442768" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANO_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified nano-of-day. This completely replaces the time and is equivalent to &lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANO_OF_DAY&lt;/code&gt; - 지정된 나노 하루 의 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 시간을 완전히 대체하며 &lt;a href=&quot;#ofNanoOfDay(long)&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="8b36aeb5ce4c969166cfb457a07417d59d8803a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANO_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified nano-of-day. This completely replaces the time and is equivalent to &lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt;&lt;code&gt;ofNanoOfDay(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;NANO_OF_DAY&lt;/code&gt; - 지정된 나노 일로 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 이것은 시간을 완전히 대체하며 &lt;a href=&quot;localtime#ofNanoOfDay-long-&quot;&gt; &lt;code&gt;ofNanoOfDay(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="6eeececab1f16b8c765bd9831190626e99ccb087" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANO_OF_SECOND&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified nano-of-second. The hour, minute and second will be unchanged.</source>
          <target state="translated">&lt;code&gt;NANO_OF_SECOND&lt;/code&gt; - 지정된 나노초로 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 시, 분 및 초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="68d2ccd536d498cc08e835b63acc425d64d3df07" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NANO_OF_SECOND&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified nano-of-second. The epoch-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;NANO_OF_SECOND&lt;/code&gt; - 지정된 초 단위의 &lt;code&gt;Instant&lt;/code&gt; 을 반환합니다 . 에포크 초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e30462139c3babdfb78ca3dcb7434a96cc974e37" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NClob&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;NCLOB&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;NClob&lt;/code&gt; 인터페이스-SQL &lt;code&gt;NCLOB&lt;/code&gt; 매핑</target>
        </trans-unit>
        <trans-unit id="69b56c115b67ab432819f031e752a8eecbc86383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NEVER_UPDATE&lt;/code&gt;: the caret stays at the same absolute position in the document regardless of any document updates, except when document length becomes less than the current caret position due to removal. In that case caret position is adjusted to the end of the document. The caret doesn't try to keep itself visible by scrolling the associated view when using this policy.</source>
          <target state="translated">&lt;code&gt;NEVER_UPDATE&lt;/code&gt; : 제거로 인해 문서 길이가 현재 캐럿 위치보다 작아지는 경우를 제외하고 캐럿은 문서 업데이트에 관계없이 문서에서 동일한 절대 위치에 유지됩니다. 이 경우 캐럿 위치는 문서의 끝으로 조정됩니다. 캐럿은이 정책을 사용할 때 연결된보기를 스크롤하여 자신을 계속 표시하려고하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c903da937c120083927738d07d2688b708396156" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NOBUTTON&lt;/code&gt;, &lt;code&gt;BUTTON1&lt;/code&gt;, &lt;code&gt;BUTTON2&lt;/code&gt; or &lt;code&gt;BUTTON3&lt;/code&gt; if support for the extended mouse buttons is &lt;a href=&quot;../toolkit#areExtraMouseButtonsEnabled()&quot;&gt;&lt;code&gt;disabled&lt;/code&gt;&lt;/a&gt; by Java</source>
          <target state="translated">&lt;code&gt;NOBUTTON&lt;/code&gt; , &lt;code&gt;BUTTON1&lt;/code&gt; , &lt;code&gt;BUTTON2&lt;/code&gt; 또는 &lt;code&gt;BUTTON3&lt;/code&gt; ( Java 에서 확장 마우스 단추 지원을 &lt;a href=&quot;../toolkit#areExtraMouseButtonsEnabled()&quot;&gt; &lt;code&gt;disabled&lt;/code&gt; &lt;/a&gt; 한 경우)</target>
        </trans-unit>
        <trans-unit id="9e7151d6f3ed327dc35788c5d098e3052166b620" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NONE&lt;/code&gt;: Do not resize the component.</source>
          <target state="translated">&lt;code&gt;NONE&lt;/code&gt; : 구성 요소의 크기를 조정하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4c565387ab34ab593403d5a537bfca5e1bcf6269" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NULL_ATTRIBUTE_VALUE&lt;/code&gt; used in cases where the value for the attribute has not been specified.</source>
          <target state="translated">&lt;code&gt;NULL_ATTRIBUTE_VALUE&lt;/code&gt; 속성 값이 지정되지 않은 경우 NULL_ATTRIBUTE_VALUE가 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="2e09080dfbf2deb2898bf93fa2eab4796a224515" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; - the string representing &quot;not a number&quot;</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; - &quot;숫자가 아님&quot;을 나타내는 문자열</target>
        </trans-unit>
        <trans-unit id="f7923f945b5badac0adc7bdb118b9bc4f6ac0493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NaN&lt;/code&gt; is formatted as a string, which typically has a single character &lt;code&gt;\uFFFD&lt;/code&gt;. This string is determined by the &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; object. This is the only value for which the prefixes and suffixes are not used.</source>
          <target state="translated">&lt;code&gt;NaN&lt;/code&gt; 은 문자열로 형식화되며 일반적으로 단일 문자 &lt;code&gt;\uFFFD&lt;/code&gt; 있습니다. 이 문자열은 &lt;code&gt;DecimalFormatSymbols&lt;/code&gt; 객체에 의해 결정됩니다 . 접두사와 접미사가 사용되지 않는 유일한 값입니다.</target>
        </trans-unit>
        <trans-unit id="1a6a7aeb0a2894d956910a6b4911723daf4d8dfd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Class-Path&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Class-Path&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="101a7a108e633b6b4fbb89dfc51d8da27aa902fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Class-Path&lt;/code&gt; manifest attribute. Bundled extensions can use this attribute to find other JAR files containing needed classes.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Class-Path&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 . 번들 확장은이 속성을 사용하여 필요한 클래스가 포함 된 다른 JAR 파일을 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6654cd7280ebd2d5dfce0c0318300e21d0609a9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Content-Type&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Content-Type&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="95da2853ab970bd4edb49bc10c8dfdf3c2f477c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-Installation&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Extension-Installation&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="d87e841ebb45a7150d76ed1a2f28074f3bb82330" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-List&lt;/code&gt; manifest attribute used for declaring dependencies on installed extensions.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 설치된 확장에 대한 종속성을 선언하는 데 사용되는 &lt;code&gt;Extension-List&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="9e14cb2ea87b1d044e05d03e887dd9e68e3652e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-List&lt;/code&gt; manifest attribute used for the extension mechanism that is no longer supported.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 더 이상 지원되지 않는 확장 메커니즘에 사용되는 &lt;code&gt;Extension-List&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="76d242a455b81a66698a1a596505593f54d5e39c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-Name&lt;/code&gt; manifest attribute used for declaring dependencies on installed extensions.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 설치된 확장에 대한 종속성을 선언하는 데 사용되는 &lt;code&gt;Extension-Name&lt;/code&gt; 매니페스트 속성의 Name 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="aae384968af91d1d14b71db2e96a5823478da8fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-Name&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Extension-Name&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="2c860d78e955b5b599147931d72161aa3e0a42cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Extension-Name&lt;/code&gt; manifest attribute. used for the extension mechanism that is no longer supported.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Extension-Name&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 . 더 이상 지원되지 않는 확장 메커니즘에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="29b5b898d03b4b9e75bb44bfc0199efec1907a15" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-Title&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 패키지 버전 관리에 사용되는 &lt;code&gt;Implementation-Title&lt;/code&gt; Manifest 속성의 Name 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="054f9ef5fdf2f394e4fab7fdb7bcadaaea1a4c92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-URL&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 패키지 버전 관리에 사용되는 &lt;code&gt;Implementation-URL&lt;/code&gt; manifest 속성의 Name 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="eff2ee3407a5d95b509418d9ca1bcac096fa166e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-URL&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Implementation-URL&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="820f281ef9969d6bb50289f79c4e8e7f9c5d4f10" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-Vendor-Id&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 패키지 버전 관리에 사용되는 &lt;code&gt;Implementation-Vendor-Id&lt;/code&gt; Manifest 속성의 Name 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="9ec931851cbced412f5ce4e6169a92e1cf4a984f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-Vendor-Id&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Implementation-Vendor-Id&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="4bb43e73882adede71fb8e848ce659cbc9a2fd42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-Vendor&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 패키지 버전 관리에 사용되는 &lt;code&gt;Implementation-Vendor&lt;/code&gt; 매니페스트 속성의 Name 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="fae56761a20760d61939eb3fbeeb84150b351012" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Implementation-Version&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 패키지 버전 관리에 사용되는 &lt;code&gt;Implementation-Version&lt;/code&gt; Manifest 속성의 Name 객체입니다 .</target>
        </trans-unit>
        <trans-unit id="239d226962d8f7fb63db0d86f7228fa6cb341b1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Main-Class&lt;/code&gt; manifest attribute used for launching applications packaged in JAR files.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; JAR 파일에 패키지 된 응용 프로그램을 시작하는 데 사용되는 &lt;code&gt;Main-Class&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="24366770dc570f2f5b633058a6838f0a271637dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Main-Class&lt;/code&gt; manifest attribute used for launching applications packaged in JAR files. The &lt;code&gt;Main-Class&lt;/code&gt; attribute is used in conjunction with the &lt;code&gt;-jar&lt;/code&gt; command-line option of the &lt;code&gt;java&lt;/code&gt; application launcher.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; JAR 파일에 패키지 된 응용 프로그램을 시작하는 데 사용되는 &lt;code&gt;Main-Class&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 . &lt;code&gt;Main-Class&lt;/code&gt; 속성은 함께 사용됩니다 &lt;code&gt;-jar&lt;/code&gt; 의 명령 줄 옵션 &lt;code&gt;java&lt;/code&gt; 응용 프로그램 실행기.</target>
        </trans-unit>
        <trans-unit id="0c93e12f9a6889a1277855927439bed82251ac5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Manifest-Version&lt;/code&gt; manifest attribute.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Manifest-Version&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="6f05b54a28cd813420114981c64ba24f38fa58a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Manifest-Version&lt;/code&gt; manifest attribute. This attribute indicates the version number of the manifest standard to which a JAR file's manifest conforms.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Manifest-Version&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 . 이 속성은 JAR 파일의 매니페스트가 준수하는 매니페스트 표준의 버전 번호를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="ce7b67d87efd00f4bf99d32f8dbc323187fd9dfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Multi-Release&lt;/code&gt; manifest attribute that indicates this is a multi-release JAR file.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 다중 릴리스 JAR 파일임을 나타내는 &lt;code&gt;Multi-Release&lt;/code&gt; 매니페스트 속성의 이름 오브젝트입니다 .</target>
        </trans-unit>
        <trans-unit id="233db5a58c168cde66546f727e09a2541aa09a72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Sealed&lt;/code&gt; manifest attribute used for sealing.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; &lt;code&gt;Sealed&lt;/code&gt; 사용 된 봉인 된 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="291017efe44c9301310dc04279e049aec72a7d7e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Signature-Version&lt;/code&gt; manifest attribute used when signing JAR files.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; JAR 파일을 서명 할 때 사용되는 서명 &lt;code&gt;Signature-Version&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="36432e9123ad8d3d1de130d3d0e733bfaf7bd710" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Specification-Title&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 패키지 버전 관리에 사용되는 &lt;code&gt;Specification-Title&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="3a9f39386bfa7266d984f41d525adebcd04511d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Specification-Vendor&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 패키지 버전 관리에 사용되는 &lt;code&gt;Specification-Vendor&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="0e09f828f9a6428b437c6fa59632c64ff7b0d393" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Name&lt;/code&gt; object for &lt;code&gt;Specification-Version&lt;/code&gt; manifest attribute used for package versioning.</source>
          <target state="translated">&lt;code&gt;Name&lt;/code&gt; 패키지 버전 관리에 사용되는 &lt;code&gt;Specification-Version&lt;/code&gt; 매니페스트 속성의 이름 개체입니다 .</target>
        </trans-unit>
        <trans-unit id="1dc0371053a1f0434316d53a3d60058cd0b5afac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NamedNodeMap&lt;/code&gt; objects in the DOM are live.</source>
          <target state="translated">&lt;code&gt;NamedNodeMap&lt;/code&gt; DOM의 NamedNodeMap 객체는 라이브입니다.</target>
        </trans-unit>
        <trans-unit id="17cd49e3414bb9cba7a7c1cd9d63e5333e1184ee" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NamingEvent&lt;/code&gt; represents an event that occurs in a naming or directory service. There are two categories of naming events:</source>
          <target state="translated">&lt;code&gt;NamingEvent&lt;/code&gt; 는 이름 지정 또는 디렉토리 서비스에서 발생하는 이벤트를 나타냅니다. 명명 이벤트에는 두 가지 범주가 있습니다.</target>
        </trans-unit>
        <trans-unit id="1db2f5e519e46461d928a970d7c295fab04e8930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NamingManager.getObjectInstance()&lt;/code&gt; successively loads in object factories and invokes this method on them until one produces a non-null answer. When an exception is thrown by an object factory, the exception is passed on to the caller of &lt;code&gt;NamingManager.getObjectInstance()&lt;/code&gt; (and no search is made for other factories that may produce a non-null answer). An object factory should only throw an exception if it is sure that it is the only intended factory and that no other object factories should be tried. If this factory cannot create an object using the arguments supplied, it should return null.</source>
          <target state="translated">&lt;code&gt;NamingManager.getObjectInstance()&lt;/code&gt; 는 객체 팩토리에 연속적으로로드되어 널이 아닌 응답을 생성 할 때까지이 메소드를 호출합니다. 객체 팩토리에서 예외가 발생하면 &lt;code&gt;NamingManager.getObjectInstance()&lt;/code&gt; 호출자에게 예외가 전달됩니다 (널이 아닌 응답을 생성 할 수있는 다른 팩토리는 검색되지 않습니다). 오브젝트 팩토리가 유일한 팩토리이고 다른 오브젝트 팩토리를 시도해서는 안되는 경우에만 오브젝트 팩토리가 예외를 처리해야합니다. 이 팩토리가 제공된 인수를 사용하여 객체를 만들 수 없으면 null을 반환해야합니다.</target>
        </trans-unit>
        <trans-unit id="d64280ca1e45b694b8ae4874b022d2eee1f18d8a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NamingManager.getStateToBind()&lt;/code&gt; successively loads in state factories and invokes this method on them until one produces a non-null answer. &lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt; successively loads in state factories. If a factory implements &lt;code&gt;DirStateFactory&lt;/code&gt;, then &lt;code&gt;DirectoryManager&lt;/code&gt; invokes &lt;code&gt;DirStateFactory.getStateToBind()&lt;/code&gt;; otherwise it invokes &lt;code&gt;StateFactory.getStateToBind()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NamingManager.getStateToBind()&lt;/code&gt; 는 상태 팩토리에 연속적으로로드되어 널이 아닌 응답을 생성 할 때까지이 메소드를 호출합니다. &lt;code&gt;DirectoryManager.getStateToBind()&lt;/code&gt; 연속적으로로드됩니다. 공장 구현하는 경우 &lt;code&gt;DirStateFactory&lt;/code&gt; 는 다음 &lt;code&gt;DirectoryManager&lt;/code&gt; 가 호출 &lt;code&gt;DirStateFactory.getStateToBind()&lt;/code&gt; ; 그렇지 않으면 &lt;code&gt;StateFactory.getStateToBind()&lt;/code&gt; 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="37b7486bfec76e1ea72808e8bad65133fb5f28d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NavigationFilter&lt;/code&gt; can be used to restrict where the cursor can be positioned.</source>
          <target state="translated">&lt;code&gt;NavigationFilter&lt;/code&gt; 를 사용하여 커서를 배치 할 수있는 위치를 제한 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9ae8914d40c81648f3e49bd74d0fcd8af7daba0b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NavigationFilter&lt;/code&gt; can be used to restrict where the cursor can be positioned. When the default cursor positioning actions attempt to reposition the cursor they will call into the &lt;code&gt;NavigationFilter&lt;/code&gt;, assuming the &lt;code&gt;JTextComponent&lt;/code&gt; has a non-null &lt;code&gt;NavigationFilter&lt;/code&gt; set. In this manner the &lt;code&gt;NavigationFilter&lt;/code&gt; can effectively restrict where the cursor can be positioned. Similarly &lt;code&gt;DefaultCaret&lt;/code&gt; will call into the &lt;code&gt;NavigationFilter&lt;/code&gt; when the user is changing the selection to further restrict where the cursor can be positioned.</source>
          <target state="translated">&lt;code&gt;NavigationFilter&lt;/code&gt; 를 사용하여 커서를 배치 할 수있는 위치를 제한 할 수 있습니다. 기본 커서 위치 지정 작업이 커서 위치를 변경하려고 하면 &lt;code&gt;JTextComponent&lt;/code&gt; 에 null이 아닌 &lt;code&gt;NavigationFilter&lt;/code&gt; 세트 가 있다고 가정하여 &lt;code&gt;NavigationFilter&lt;/code&gt; 를 호출 합니다. 이러한 방식으로 &lt;code&gt;NavigationFilter&lt;/code&gt; 는 커서가 위치 할 수있는 위치를 효과적으로 제한 할 수 있습니다. 유사하게 &lt;code&gt;DefaultCaret&lt;/code&gt; 은 사용자가 커서가 위치 할 수있는 위치를 더 제한하기 위해 선택을 변경할 때 &lt;code&gt;NavigationFilter&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="1b02b3a9b17a7c6cda60e7655c9a99c73f643a17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NoSuchElementException&lt;/code&gt; - if this vector has no components</source>
          <target state="translated">&lt;code&gt;NoSuchElementException&lt;/code&gt; - 이 벡터에 컴포넌트가없는 경우</target>
        </trans-unit>
        <trans-unit id="bf0ca623ba94785698d7e451a3ca572babd13ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Node&lt;/code&gt; -- &lt;code&gt;Node.class&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Node&lt;/code&gt; - &lt;code&gt;Node.class&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="47bdc81cda3e7e7f0daa60ec88d87aa20b530842" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NodeFilters&lt;/code&gt; do not need to know how to traverse from node to node, nor do they need to know anything about the data structure that is being traversed. This makes it very easy to write filters, since the only thing they have to know how to do is evaluate a single node. One filter may be used with a number of different kinds of traversals, encouraging code reuse.</source>
          <target state="translated">&lt;code&gt;NodeFilters&lt;/code&gt; 는 노드에서 노드로 이동하는 방법을 알 필요가 없으며 이동중인 데이터 구조에 대해 알 필요도 없습니다. 이렇게하면 필터를 작성하기가 매우 쉽습니다. 수행하는 방법을 알아야하는 유일한 것은 단일 노드를 평가하는 것입니다. 여러 종류의 순회에 하나의 필터를 사용하여 코드 재사용을 장려 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b2edca722138d3b1139699c656c7cea8c7d4a39d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NodeIterators&lt;/code&gt; are used to step through a set of nodes, e.g.</source>
          <target state="translated">&lt;code&gt;NodeIterators&lt;/code&gt; 는 노드 집합을 단계별로 실행하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="c53e05a98286f7bc9ba514419c61933b80e450e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NodeIterators&lt;/code&gt; are used to step through a set of nodes, e.g. the set of nodes in a &lt;code&gt;NodeList&lt;/code&gt;, the document subtree governed by a particular &lt;code&gt;Node&lt;/code&gt;, the results of a query, or any other set of nodes. The set of nodes to be iterated is determined by the implementation of the &lt;code&gt;NodeIterator&lt;/code&gt;. DOM Level 2 specifies a single &lt;code&gt;NodeIterator&lt;/code&gt; implementation for document-order traversal of a document subtree. Instances of these &lt;code&gt;NodeIterators&lt;/code&gt; are created by calling &lt;code&gt;DocumentTraversal&lt;/code&gt;&lt;code&gt;.createNodeIterator()&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;NodeIterators&lt;/code&gt; 는 노드 집합 (예 : &lt;code&gt;NodeList&lt;/code&gt; 의 노드 집합 , 특정 &lt;code&gt;Node&lt;/code&gt; 가 관리하는 문서 하위 트리 , 쿼리 결과 또는 기타 노드 집합)을 단계별로 실행하는 데 사용 됩니다. 반복 할 노드 집합은 &lt;code&gt;NodeIterator&lt;/code&gt; 구현에 의해 결정됩니다 . DOM 레벨 2 는 문서 서브 트리의 문서 순서 순회를위한 단일 &lt;code&gt;NodeIterator&lt;/code&gt; 구현을 지정합니다 . 이러한 &lt;code&gt;NodeIterators&lt;/code&gt; 인스턴스는 &lt;code&gt;DocumentTraversal&lt;/code&gt; &lt;code&gt;.createNodeIterator()&lt;/code&gt; 호출하여 생성됩니다 .</target>
        </trans-unit>
        <trans-unit id="6705e7796155d0ab638bdb0eab1c503c594536d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Nodeset&lt;/code&gt; -- &lt;code&gt;XPathNodes.class&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Nodeset&lt;/code&gt; - &lt;code&gt;XPathNodes.class&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e7431568a4e997688dcd2fe8485a0ecf5e645a47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Notation&lt;/code&gt; nodes can be imported, however in the current release of the DOM the &lt;code&gt;DocumentType&lt;/code&gt; is readonly. Ability to add these imported nodes to a &lt;code&gt;DocumentType&lt;/code&gt; will be considered for addition to a future release of the DOM.On import, the &lt;code&gt;publicId&lt;/code&gt; and &lt;code&gt;systemId&lt;/code&gt; attributes are copied. Note that the &lt;code&gt;deep&lt;/code&gt; parameter has no effect on this type of nodes since they cannot have any children.</source>
          <target state="translated">&lt;code&gt;Notation&lt;/code&gt; 노드를 가져올 수 있지만 현재 DOM 릴리스에서는 &lt;code&gt;DocumentType&lt;/code&gt; 이 읽기 전용입니다. 이러한 가져온 노드를 &lt;code&gt;DocumentType&lt;/code&gt; 에 추가하는 기능은 DOM의 향후 릴리스에 추가 할 때 고려됩니다. 가져 오기시 &lt;code&gt;publicId&lt;/code&gt; 및 &lt;code&gt;systemId&lt;/code&gt; 속성이 복사됩니다. 점을 유의 &lt;code&gt;deep&lt;/code&gt; 그들이 어떤 아이를 가질 수 없기 때문에 매개 변수는 노드의이 유형에 영향을주지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a5570bb694562e5a548ac75bc58bdaaf2e740c82" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Notation&lt;/code&gt; nodes cannot be adopted.</source>
          <target state="translated">&lt;code&gt;Notation&lt;/code&gt; 노드는 채택 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="08f520ff0b2c1120a1b1efb420b122d27bab1db1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Number&lt;/code&gt; -- &lt;code&gt;Number.class&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Number&lt;/code&gt; - &lt;code&gt;Number.class&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="69704c9f6d1a18a613bb40d5045ce4bac49f8125" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormat&lt;/code&gt; helps you to format and parse numbers for any locale. Your code can be completely independent of the locale conventions for decimal points, thousands-separators, or even the particular decimal digits used, or whether the number format is even decimal.</source>
          <target state="translated">&lt;code&gt;NumberFormat&lt;/code&gt; 을 사용하면 모든 로캘의 숫자를 형식화하고 구문 분석 할 수 있습니다. 코드는 소수점, 천 단위 구분자 또는 사용 된 특정 소수 자릿수 또는 숫자 형식이 10 진수인지에 대한 로케일 규칙과 완전히 독립적 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a62dcdecdb771696235e908fc00600289aedc2c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormat&lt;/code&gt; is the abstract base class for all number formats.</source>
          <target state="translated">&lt;code&gt;NumberFormat&lt;/code&gt; 은 모든 숫자 형식의 추상 기본 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="3f8b124e4dcf0afad09b7b86e28e457462dac5df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormat&lt;/code&gt; is the abstract base class for all number formats. This class provides the interface for formatting and parsing numbers. &lt;code&gt;NumberFormat&lt;/code&gt; also provides methods for determining which locales have number formats, and what their names are.</source>
          <target state="translated">&lt;code&gt;NumberFormat&lt;/code&gt; 은 모든 숫자 형식의 추상 기본 클래스입니다. 이 클래스는 숫자 형식화 및 구문 분석을위한 인터페이스를 제공합니다. &lt;code&gt;NumberFormat&lt;/code&gt; 은 숫자 형식이있는 로케일과 이름이 무엇인지 판별하는 방법도 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c3ba2e72dcc3a147bbf1b505e678ea6aa3b97354" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormatter&lt;/code&gt; provides slightly different behavior to &lt;code&gt;stringToValue&lt;/code&gt; than that of its superclass. If you have specified a Class for values, &lt;a href=&quot;defaultformatter#setValueClass(java.lang.Class)&quot;&gt;&lt;code&gt;DefaultFormatter.setValueClass(java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt;, that is one of of &lt;code&gt;Integer&lt;/code&gt;, &lt;code&gt;Long&lt;/code&gt;, &lt;code&gt;Float&lt;/code&gt;, &lt;code&gt;Double&lt;/code&gt;, &lt;code&gt;Byte&lt;/code&gt; or &lt;code&gt;Short&lt;/code&gt; and the Format's &lt;code&gt;parseObject&lt;/code&gt; returns an instance of &lt;code&gt;Number&lt;/code&gt;, the corresponding instance of the value class will be created using the constructor appropriate for the primitive type the value class represents. For example: &lt;code&gt;setValueClass(Integer.class)&lt;/code&gt; will cause the resulting value to be created via &lt;code&gt;Integer.valueOf(((Number)formatter.parseObject(string)).intValue())&lt;/code&gt;. This is typically useful if you wish to set a min/max value as the various &lt;code&gt;Number&lt;/code&gt; implementations are generally not comparable to each other. This is also useful if for some reason you need a specific &lt;code&gt;Number&lt;/code&gt; implementation for your values.</source>
          <target state="translated">&lt;code&gt;NumberFormatter&lt;/code&gt; 는 수퍼 클래스 와는 약간 다른 동작을 &lt;code&gt;stringToValue&lt;/code&gt; 에 제공합니다 . 당신이 값 클래스를 지정한 경우, &lt;a href=&quot;defaultformatter#setValueClass(java.lang.Class)&quot;&gt; &lt;code&gt;DefaultFormatter.setValueClass(java.lang.Class&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의 중 하나입니다, &lt;code&gt;Integer&lt;/code&gt; , &lt;code&gt;Long&lt;/code&gt; , &lt;code&gt;Float&lt;/code&gt; , &lt;code&gt;Double&lt;/code&gt; , &lt;code&gt;Byte&lt;/code&gt; 또는 &lt;code&gt;Short&lt;/code&gt; 과 형식의 &lt;code&gt;parseObject&lt;/code&gt; 의 인스턴스를 반환 &lt;code&gt;Number&lt;/code&gt; 는 값 클래스의 해당 인스턴스는 값 클래스가 나타내는 기본 유형에 적합한 생성자를 사용하여 생성됩니다. 예 : &lt;code&gt;setValueClass(Integer.class)&lt;/code&gt; 결과 값은 &lt;code&gt;Integer.valueOf(((Number)formatter.parseObject(string)).intValue())&lt;/code&gt; 를 통해 생성됩니다 . 다양한 &lt;code&gt;Number&lt;/code&gt; 구현이 일반적으로 서로 비교할 수 없기 때문에 최소 / 최대 값을 설정하려는 경우 일반적으로 유용합니다 . 어떤 이유로 값에 특정 &lt;code&gt;Number&lt;/code&gt; 구현 이 필요한 경우에도 유용 합니다.</target>
        </trans-unit>
        <trans-unit id="828d002b3afbbcc2f93875ba43578cbc4de28fc9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormatter&lt;/code&gt; subclasses &lt;code&gt;InternationalFormatter&lt;/code&gt; adding special behavior for numbers.</source>
          <target state="translated">&lt;code&gt;NumberFormatter&lt;/code&gt; 는 숫자에 대한 특별한 동작을 추가하는 &lt;code&gt;InternationalFormatter&lt;/code&gt; 의 하위 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="bb16e6e39a618c2251cd1e1b2d85f0006ce3d55b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumberFormatter&lt;/code&gt; subclasses &lt;code&gt;InternationalFormatter&lt;/code&gt; adding special behavior for numbers. Among the specializations are (these are only used if the &lt;code&gt;NumberFormatter&lt;/code&gt; does not display invalid numbers, for example, &lt;code&gt;setAllowsInvalid(false)&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;NumberFormatter&lt;/code&gt; 는 숫자에 대한 특별한 동작을 추가하는 &lt;code&gt;InternationalFormatter&lt;/code&gt; 의 하위 클래스 입니다. 전문화 중에는 다음과 같은 것들이 있습니다 ( 예 : &lt;code&gt;setAllowsInvalid(false)&lt;/code&gt; 같이 &lt;code&gt;NumberFormatter&lt;/code&gt; 가 유효하지 않은 숫자를 표시하지 않는 경우에만 사용됨 ).</target>
        </trans-unit>
        <trans-unit id="ee0419c27c215157223e7ab8eab3f6c49e979585" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;NumericShaper&lt;/code&gt; Constants</source>
          <target state="translated">&lt;code&gt;NumericShaper&lt;/code&gt; 상수</target>
        </trans-unit>
        <trans-unit id="8185e03fc7c6426082a3f24e65952aa655667088" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OBJECT = &lt;/code&gt;&lt;var&gt;serfile&lt;/var&gt;</source>
          <target state="translated">&lt;code&gt;OBJECT = &lt;/code&gt; &lt;var&gt;serfile&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="e8eeb23fb07ae1cee8d44619de7607f778f1e9f9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OPAQUE&lt;/code&gt; if all colors used by this &lt;code&gt;Paint&lt;/code&gt; object are opaque, &lt;code&gt;TRANSLUCENT&lt;/code&gt; if at least one of the colors used by this &lt;code&gt;Paint&lt;/code&gt; object is not opaque.</source>
          <target state="translated">&lt;code&gt;OPAQUE&lt;/code&gt; 은 이 사용하는 모든 색상 경우 &lt;code&gt;Paint&lt;/code&gt; 객체가 불투명, &lt;code&gt;TRANSLUCENT&lt;/code&gt; 이가 사용하는 색상의 적어도 하나의 경우 &lt;code&gt;Paint&lt;/code&gt; 객체는 불투명하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="80f10e18d714ff767c08003d54dacb63050f4bd0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt; references whose legal values are defined as a range must implement the &lt;code&gt;Comparable&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 유효한 값이 범위로 정의 된 객체 참조는 &lt;code&gt;Comparable&lt;/code&gt; 인터페이스를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="ca87a14235f184e15de9592b8154a4d1e9bbd4fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Object&lt;/code&gt; representation of text</source>
          <target state="translated">&lt;code&gt;Object&lt;/code&gt; 텍스트의 객체 표현</target>
        </trans-unit>
        <trans-unit id="c9f2653079246ad0302e9b55a05b78d3f74924cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt; is an immutable representation of a date-time with an offset. This class stores all date and time fields, to a precision of nanoseconds, as well as the offset from UTC/Greenwich. For example, the value &quot;2nd October 2007 at 13:45.30.123456789 +02:00&quot; can be stored in an &lt;code&gt;OffsetDateTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; 은 오프셋이있는 날짜-시간을 변경할 수없는 표현입니다. 이 클래스는 모든 날짜 및 시간 필드를 정밀한 나노초 및 UTC / 그리니치 오프셋으로 저장합니다. 예를 들어, &quot;2007 년 10 월 2 일 13 : 45.30.123456789 +02 : 00&quot;값은 &lt;code&gt;OffsetDateTime&lt;/code&gt; 에 저장 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fd5d11805842ba2f963fc4088087af559a9b8cae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt; is an immutable representation of a date-time with an offset. This class stores all date and time fields, to a precision of nanoseconds, as well as the offset from UTC/Greenwich. For example, the value &quot;2nd October 2007 at 13:45:30.123456789 +02:00&quot; can be stored in an &lt;code&gt;OffsetDateTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; 은 오프셋이있는 날짜-시간의 변경 불가능한 표현입니다. 이 클래스는 모든 날짜 및 시간 필드를 나노초의 정밀도와 UTC / 그리니치로부터의 오프셋으로 저장합니다. 예를 들어 '2007 년 10 월 2 일 13 : 45 : 30.123456789 +02 : 00'값은 &lt;code&gt;OffsetDateTime&lt;/code&gt; 에 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0d3f6ee4197f3b2b983bca3cca829db904232908" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt; returns &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; 은 IsoChronology를 반환합니다 &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6edaafd79341b725c5f8e6ebeccc458c11de8581" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; 는 반환 &lt;code&gt;NANOS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="05fe4e4a096b20b61d48662f41d683e52ee7c4bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; 은 null을 반환</target>
        </trans-unit>
        <trans-unit id="cc0f13b6a3cd72c40fc03bdbbbdfd8afab8c8cde" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetDateTime&lt;/code&gt;, &lt;a href=&quot;zoneddatetime&quot;&gt;&lt;code&gt;ZonedDateTime&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;instant&quot;&gt;&lt;code&gt;Instant&lt;/code&gt;&lt;/a&gt; all store an instant on the time-line to nanosecond precision. &lt;code&gt;Instant&lt;/code&gt; is the simplest, simply representing the instant. &lt;code&gt;OffsetDateTime&lt;/code&gt; adds to the instant the offset from UTC/Greenwich, which allows the local date-time to be obtained. &lt;code&gt;ZonedDateTime&lt;/code&gt; adds full time-zone rules.</source>
          <target state="translated">&lt;code&gt;OffsetDateTime&lt;/code&gt; , &lt;a href=&quot;zoneddatetime&quot;&gt; &lt;code&gt;ZonedDateTime&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;instant&quot;&gt; &lt;code&gt;Instant&lt;/code&gt; 는&lt;/a&gt; 모두 타임 라인에 순간을 나노초 단위로 저장합니다. &lt;code&gt;Instant&lt;/code&gt; 는 가장 간단하며 단순히 인스턴트를 나타냅니다. &lt;code&gt;OffsetDateTime&lt;/code&gt; 은 UTC / 그리니치로부터의 오프셋을 순간에 추가하여 현지 날짜-시간을 얻을 수있게합니다. &lt;code&gt;ZonedDateTime&lt;/code&gt; 은 표준 시간대 규칙을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="747ef8ee3778f91e8ac9d910664411561a55c9d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetTime&lt;/code&gt; is an immutable date-time object that represents a time, often viewed as hour-minute-second-offset. This class stores all time fields, to a precision of nanoseconds, as well as a zone offset. For example, the value &quot;13:45.30.123456789+02:00&quot; can be stored in an &lt;code&gt;OffsetTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 은 시간을 나타내는 불변의 날짜-시간 객체로, 종종 시분 초 오프셋으로 표시됩니다. 이 클래스는 모든 시간 필드를 정밀한 나노초 및 영역 오프셋으로 저장합니다. 예를 들어, &quot;13 : 45.30.123456789 + 02 : 00&quot;값은 &lt;code&gt;OffsetTime&lt;/code&gt; 에 저장 될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="8a77af86f7130ef19d25ae4ebac7f5a5386ebc24" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetTime&lt;/code&gt; is an immutable date-time object that represents a time, often viewed as hour-minute-second-offset. This class stores all time fields, to a precision of nanoseconds, as well as a zone offset. For example, the value &quot;13:45:30.123456789+02:00&quot; can be stored in an &lt;code&gt;OffsetTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 은 시간을 나타내는 변경 불가능한 날짜-시간 객체로, 종종 시간-분-초-오프셋으로 표시됩니다. 이 클래스는 모든 시간 필드를 나노초 단위의 정밀도와 영역 오프셋으로 저장합니다. 예를 들어 &quot;13 : 45 : 30.123456789 + 02 : 00&quot;값은 &lt;code&gt;OffsetTime&lt;/code&gt; 에 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="fb556f1d044c93dd78fc127a07542edfbf5c323d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetTime&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 은 &lt;code&gt;NANOS&lt;/code&gt; 를 반환</target>
        </trans-unit>
        <trans-unit id="a6c69736d03b4fa389637a846b670c2e73d679e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetTime&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 은 null을 반환</target>
        </trans-unit>
        <trans-unit id="32491c76af56dd803b6d0f847510706d254ed46f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OffsetTime&lt;/code&gt; returns null (does not represent a date)</source>
          <target state="translated">&lt;code&gt;OffsetTime&lt;/code&gt; 은 null을 반환합니다 (날짜를 나타내지 않음)</target>
        </trans-unit>
        <trans-unit id="7309fc575e1f2c3685e6ad0e704892b1c62eb4fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Optional&lt;/code&gt; is primarily intended for use as a method return type where there is a clear need to represent &quot;no result,&quot; and where using &lt;code&gt;null&lt;/code&gt; is likely to cause errors. A variable whose type is &lt;code&gt;Optional&lt;/code&gt; should never itself be &lt;code&gt;null&lt;/code&gt;; it should always point to an &lt;code&gt;Optional&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;Optional&lt;/code&gt; 은 주로 &quot;결과 없음&quot;을 나타내야하는 분명한 필요가 있고 &lt;code&gt;null&lt;/code&gt; 을 사용 하면 오류가 발생할 가능성이 있는 메서드 반환 유형으로 사용하기위한 것입니다 . 유형이 &lt;code&gt;Optional&lt;/code&gt; 인 변수는 자체적으로 &lt;code&gt;null&lt;/code&gt; 이 아니어야합니다 . 항상 &lt;code&gt;Optional&lt;/code&gt; 인스턴스를 가리켜 야 합니다.</target>
        </trans-unit>
        <trans-unit id="f1f24b3fba50109e527e904488bb44e22ec470ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OptionalDouble&lt;/code&gt; is primarily intended for use as a method return type where there is a clear need to represent &quot;no result.&quot; A variable whose type is &lt;code&gt;OptionalDouble&lt;/code&gt; should never itself be &lt;code&gt;null&lt;/code&gt;; it should always point to an &lt;code&gt;OptionalDouble&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;OptionalDouble&lt;/code&gt; 은 주로 &quot;결과 없음&quot;을 나타내야하는 분명한 요구가있는 메서드 반환 유형으로 사용하기위한 것입니다. 유형이 &lt;code&gt;OptionalDouble&lt;/code&gt; 인 변수는 자체적으로 &lt;code&gt;null&lt;/code&gt; 이 아니어야합니다 . 항상 &lt;code&gt;OptionalDouble&lt;/code&gt; 인스턴스를 가리켜 야 합니다.</target>
        </trans-unit>
        <trans-unit id="b877a4fccfde4c8156b8c47ee8b462ef38c2bc9a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OptionalInt&lt;/code&gt; is primarily intended for use as a method return type where there is a clear need to represent &quot;no result.&quot; A variable whose type is &lt;code&gt;OptionalInt&lt;/code&gt; should never itself be &lt;code&gt;null&lt;/code&gt;; it should always point to an &lt;code&gt;OptionalInt&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;OptionalInt&lt;/code&gt; 는 기본적으로 &quot;결과 없음&quot;을 나타내야하는 명확한 요구가있는 메서드 반환 형식으로 사용하기위한 것입니다. 유형이 &lt;code&gt;OptionalInt&lt;/code&gt; 인 변수는 자체적으로 &lt;code&gt;null&lt;/code&gt; 이 아니어야합니다 . 항상 &lt;code&gt;OptionalInt&lt;/code&gt; 인스턴스를 가리켜 야 합니다.</target>
        </trans-unit>
        <trans-unit id="cf2607c5b1175552b80c75c09227eae06be75347" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;OptionalLong&lt;/code&gt; is primarily intended for use as a method return type where there is a clear need to represent &quot;no result.&quot; A variable whose type is &lt;code&gt;OptionalLong&lt;/code&gt; should never itself be &lt;code&gt;null&lt;/code&gt;; it should always point to an &lt;code&gt;OptionalLong&lt;/code&gt; instance.</source>
          <target state="translated">&lt;code&gt;OptionalLong&lt;/code&gt; 은 주로 &quot;결과 없음&quot;을 나타내야하는 분명한 필요성이있는 메서드 반환 유형으로 사용하기위한 것입니다. 유형이 &lt;code&gt;OptionalLong&lt;/code&gt; 인 변수는 자체적으로 &lt;code&gt;null&lt;/code&gt; 이 아니어야합니다 . 항상 &lt;code&gt;OptionalLong&lt;/code&gt; 인스턴스를 가리켜 야 합니다.</target>
        </trans-unit>
        <trans-unit id="77dac311fc96d660e341cef7460eeea0f8d7c514" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt; - the type of the additional parameter to the visitor's methods</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; - 방문자의 메소드에 대한 추가 매개 변수 유형</target>
        </trans-unit>
        <trans-unit id="922006ae4f2d58df64f97acb7a01b82595c3d105" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt; - the type of the additional parameter to this visitor's methods.</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; - 이 방문자의 메소드에 대한 추가 매개 변수의 유형입니다.</target>
        </trans-unit>
        <trans-unit id="c62ebd37997a8e857f60b36d7ca67d9b0351d5f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;P&lt;/code&gt; - the type of the additional parameter to this visitor's methods. Use &lt;code&gt;Void&lt;/code&gt; for visitors that do not need an additional parameter.</source>
          <target state="translated">&lt;code&gt;P&lt;/code&gt; - 이 방문자의 메소드에 대한 추가 매개 변수의 유형입니다. 추가 매개 변수가 필요하지 않은 방문자에게는 &lt;code&gt;Void&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="bf991d6427ef4a01b1368453ba715a86e4b880b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;POST&lt;/code&gt; corresponds to the POST from method</source>
          <target state="translated">&lt;code&gt;POST&lt;/code&gt; 는 POST from 메소드에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="4187f6d523accc36108f687c2d15a65e8a549328" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; - If present, then it is split into the &lt;code&gt;YEAR&lt;/code&gt; and &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;. If the mode is strict or smart then the field is validated.</source>
          <target state="translated">&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; -있는 경우 &lt;code&gt;YEAR&lt;/code&gt; 및 &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; 로 분할됩니다 . 모드가 엄격하거나 스마트하면 필드의 유효성이 검사됩니다.</target>
        </trans-unit>
        <trans-unit id="8e4c2b1bef8f7b831de2ce63ea052d62bf4486ac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified proleptic-month. The day-of-month will be unchanged, unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; - 지정된 proleptic-month 로 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 새 월과 연도에 유효하지 않은 한, 월은 변경되지 않습니다. 이 경우 월은 새 달 및 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="e09b11fee61d275d63c2254d9be273d616ad7a90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified proleptic-month. This completely replaces the year and month of this object.</source>
          <target state="translated">&lt;code&gt;PROLEPTIC_MONTH&lt;/code&gt; - 지정된 proleptic-month가 있는 &lt;code&gt;YearMonth&lt;/code&gt; 를 반환합니다 . 이것은이 객체의 연도와 월을 완전히 대체합니다.</target>
        </trans-unit>
        <trans-unit id="6a733f517cf6ef22d5273ea3306a50eb5b611e09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Pacific Standard Time&lt;/code&gt;; &lt;code&gt;PST&lt;/code&gt;; &lt;code&gt;GMT-08:00&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Pacific Standard Time&lt;/code&gt; ; &lt;code&gt;PST&lt;/code&gt; ; &lt;code&gt;GMT-08:00&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="12c3c1a284fc6b9d375f248307f17359a66ab888" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Package&lt;/code&gt; objects contain version information about the implementation and specification of a Java package.</source>
          <target state="translated">&lt;code&gt;Package&lt;/code&gt; 객체에는 Java 패키지의 구현 및 사양에 대한 버전 정보가 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="4308eb4729e35d6bf10b5f07656f4548fe66e043" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Package&lt;/code&gt; objects contain version information about the implementation and specification of a Java package. This versioning information is retrieved and made available by the &lt;a href=&quot;classloader&quot;&gt;&lt;code&gt;ClassLoader&lt;/code&gt;&lt;/a&gt; instance that loaded the class(es). Typically, it is stored in the manifest that is distributed with the classes.</source>
          <target state="translated">&lt;code&gt;Package&lt;/code&gt; 객체에는 Java 패키지의 구현 및 사양에 대한 버전 정보가 포함되어 있습니다. 이 버전 정보는 클래스를로드 한 &lt;a href=&quot;classloader&quot;&gt; &lt;code&gt;ClassLoader&lt;/code&gt; &lt;/a&gt; 인스턴스 에서 검색하여 사용할 수 있습니다 . 일반적으로 클래스와 함께 배포되는 매니페스트에 저장됩니다.</target>
        </trans-unit>
        <trans-unit id="3184fcc28bfbb3e3652e068c94ac106af122eec3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Painter&lt;/code&gt;s are simply encapsulations of Java2D code and make it fairly trivial to reuse existing &lt;code&gt;Painter&lt;/code&gt;s or to combine them together. Implementations of this interface are also trivial to write, such that if you can't find a &lt;code&gt;Painter&lt;/code&gt; that does what you need, you can write one with minimal effort. Writing a &lt;code&gt;Painter&lt;/code&gt; requires knowledge of Java2D.</source>
          <target state="translated">&lt;code&gt;Painter&lt;/code&gt; 는 단순히 Java2D 코드의 캡슐화이며 기존 &lt;code&gt;Painter&lt;/code&gt; 를 재사용 하거나 함께 결합하는 것이 매우 간단 합니다. 이 인터페이스의 구현은 작성하기가 간단하므로 필요한 작업을 수행 하는 &lt;code&gt;Painter&lt;/code&gt; 를 찾을 수없는 경우 최소한의 노력으로 작성할 수 있습니다. &lt;code&gt;Painter&lt;/code&gt; 를 작성 하려면 Java2D에 대한 지식이 필요합니다.</target>
        </trans-unit>
        <trans-unit id="2ae426ea16f6c01f7525e4fb9b8daa7c7ee0008a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Panel&lt;/code&gt; is the simplest container class.</source>
          <target state="translated">&lt;code&gt;Panel&lt;/code&gt; 은 가장 간단한 컨테이너 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="bf58b12f094b17fd0230c881bc1c6f20e1e4a93a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Panel&lt;/code&gt; is the simplest container class. A panel provides space in which an application can attach any other component, including other panels.</source>
          <target state="translated">&lt;code&gt;Panel&lt;/code&gt; 은 가장 간단한 컨테이너 클래스입니다. 패널은 응용 프로그램이 다른 패널을 포함하여 다른 구성 요소를 연결할 수있는 공간을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="f88524b1c692827b9287752ed80bb843e014e773" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParagraphView&lt;/code&gt; instances are breakable along the &lt;code&gt;Y_AXIS&lt;/code&gt; only, and only if &lt;code&gt;len&lt;/code&gt; is after the first line.</source>
          <target state="translated">&lt;code&gt;ParagraphView&lt;/code&gt; 인스턴스는 &lt;code&gt;Y_AXIS&lt;/code&gt; 를 따라서 만 깨질 수 있으며 &lt;code&gt;len&lt;/code&gt; 이 첫 번째 줄 뒤에있는 경우에만 가능합니다 .</target>
        </trans-unit>
        <trans-unit id="59266e78d3708d29d7685fac4eae848b92d30711" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParagraphView&lt;/code&gt; instances are breakable along the &lt;code&gt;Y_AXIS&lt;/code&gt; only, and only if &lt;code&gt;len&lt;/code&gt; is after the first row. If the length is less than one row, a value of &lt;code&gt;BadBreakWeight&lt;/code&gt; is returned.</source>
          <target state="translated">&lt;code&gt;ParagraphView&lt;/code&gt; 인스턴스는 &lt;code&gt;Y_AXIS&lt;/code&gt; 를 따라서 만 깨질 수 있으며 &lt;code&gt;len&lt;/code&gt; 이 첫 번째 행 뒤에있는 경우에만 가능합니다 . 길이가 한 행 미만이면 &lt;code&gt;BadBreakWeight&lt;/code&gt; 값 이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="3c941976ba8bbde2caadcd614cc35eb62f4e4de0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParallelGroup&lt;/code&gt;s created with an alignment other than &lt;code&gt;BASELINE&lt;/code&gt; align elements that are smaller than the size of the group in one of three ways: centered, anchored to the leading edge, or anchored to the trailing edge.</source>
          <target state="translated">&lt;code&gt;ParallelGroup&lt;/code&gt; &lt;code&gt;BASELINE&lt;/code&gt; 이외의 선형으로 작성된 ParallelGroup 은 세 가지 방법 중 하나로 그룹 크기보다 작은 요소를 정렬합니다.</target>
        </trans-unit>
        <trans-unit id="4f1bef79e76b3c298b8f1e0ea0107bf3710c853a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParameterMetaData&lt;/code&gt; interface -- provides information about the parameters to &lt;code&gt;PreparedStatement&lt;/code&gt; commands</source>
          <target state="translated">&lt;code&gt;ParameterMetaData&lt;/code&gt; 인터페이스 &lt;code&gt;PreparedStatement&lt;/code&gt; 명령에 매개 변수에 대한 정보를 제공 합니다.</target>
        </trans-unit>
        <trans-unit id="d332e015aea351b8b9c98d96fad816ef5c64bd2d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParsePosition&lt;/code&gt; is a simple class used by &lt;code&gt;Format&lt;/code&gt; and its subclasses to keep track of the current position during parsing.</source>
          <target state="translated">&lt;code&gt;ParsePosition&lt;/code&gt; 은 구문 분석 중 현재 위치를 추적하기 위해 &lt;code&gt;Format&lt;/code&gt; 및 해당 서브 클래스에서 사용하는 간단한 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="0b01d465e11f55069c6f0d71183162dfea21a9b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ParsePosition&lt;/code&gt; is a simple class used by &lt;code&gt;Format&lt;/code&gt; and its subclasses to keep track of the current position during parsing. The &lt;code&gt;parseObject&lt;/code&gt; method in the various &lt;code&gt;Format&lt;/code&gt; classes requires a &lt;code&gt;ParsePosition&lt;/code&gt; object as an argument.</source>
          <target state="translated">&lt;code&gt;ParsePosition&lt;/code&gt; 은 구문 분석 중 현재 위치를 추적하기 위해 &lt;code&gt;Format&lt;/code&gt; 및 해당 서브 클래스에서 사용하는 간단한 클래스 입니다. 다양한 &lt;code&gt;Format&lt;/code&gt; 클래스 의 &lt;code&gt;parseObject&lt;/code&gt; 메서드 에는 &lt;code&gt;ParsePosition&lt;/code&gt; 객체가 인수로 필요합니다 .</target>
        </trans-unit>
        <trans-unit id="54bb2ec20881507a99c401abc6b56363280e79a1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Path2D&lt;/code&gt; provides exactly those facilities required for basic construction and management of a geometric path and implementation of the above interfaces with little added interpretation. If it is useful to manipulate the interiors of closed geometric shapes beyond simple hit testing then the &lt;a href=&quot;area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class provides additional capabilities specifically targeted at closed figures. While both classes nominally implement the &lt;code&gt;Shape&lt;/code&gt; interface, they differ in purpose and together they provide two useful views of a geometric shape where &lt;code&gt;Path2D&lt;/code&gt; deals primarily with a trajectory formed by path segments and &lt;code&gt;Area&lt;/code&gt; deals more with interpretation and manipulation of enclosed regions of 2D geometric space.</source>
          <target state="translated">&lt;code&gt;Path2D&lt;/code&gt; 는 기하학적 경로의 기본 구성 및 관리와 위 인터페이스의 구현에 필요한 기능을 거의 추가 해석없이 제공합니다. 단순한 적중 테스트를 넘어 닫힌 기하학적 모양의 내부를 조작하는 것이 유용하다면 &lt;a href=&quot;area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt; 클래스는 닫힌 그림을 특별히 대상으로하는 추가 기능을 제공합니다. 두 클래스 모두 명목상 &lt;code&gt;Shape&lt;/code&gt; 인터페이스를 구현하지만 목적이 다르며 함께 &lt;code&gt;Path2D&lt;/code&gt; 가 주로 경로 세그먼트로 형성된 궤적 을 처리 하고 &lt;code&gt;Area&lt;/code&gt; 가 2D 기하학적 공간의 밀폐 된 영역의 해석 및 조작을 더 많이 처리 하는 기하학적 모양에 대한 두 가지 유용한보기를 제공 합니다. .</target>
        </trans-unit>
        <trans-unit id="bd85a37b9664d4f2321ca036855aff097361659f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Popup&lt;/code&gt; does not descend from &lt;code&gt;Component&lt;/code&gt;, rather implementations of &lt;code&gt;Popup&lt;/code&gt; are responsible for creating and maintaining their own &lt;code&gt;Component&lt;/code&gt;s to render the requested &lt;code&gt;Component&lt;/code&gt; to the user.</source>
          <target state="translated">&lt;code&gt;Popup&lt;/code&gt; 은 &lt;code&gt;Component&lt;/code&gt; 의 자손이 아니라, &lt;code&gt;Popup&lt;/code&gt; 구현은 요청 된 &lt;code&gt;Component&lt;/code&gt; 를 사용자 에게 렌더링하기 위해 자신의 &lt;code&gt;Component&lt;/code&gt; 를 만들고 유지하는 책임 이 있습니다.</target>
        </trans-unit>
        <trans-unit id="fb740f402aa150f39d20bfb1c1a658728470a780" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PopupFactory&lt;/code&gt;, as the name implies, is used to obtain instances of &lt;code&gt;Popup&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;PopupFactory&lt;/code&gt; 이름에서 알 수 있듯이 PopupFactory 는 &lt;code&gt;Popup&lt;/code&gt; 의 인스턴스를 얻는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="ab474a9710faea400895816054c5d100740d952f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PopupFactory&lt;/code&gt;, as the name implies, is used to obtain instances of &lt;code&gt;Popup&lt;/code&gt;s. &lt;code&gt;Popup&lt;/code&gt;s are used to display a &lt;code&gt;Component&lt;/code&gt; above all other &lt;code&gt;Component&lt;/code&gt;s in a particular containment hierarchy. The general contract is that once you have obtained a &lt;code&gt;Popup&lt;/code&gt; from a &lt;code&gt;PopupFactory&lt;/code&gt;, you must invoke &lt;code&gt;hide&lt;/code&gt; on the &lt;code&gt;Popup&lt;/code&gt;. The typical usage is:</source>
          <target state="translated">&lt;code&gt;PopupFactory&lt;/code&gt; 이름에서 알 수 있듯이 PopupFactory 는 &lt;code&gt;Popup&lt;/code&gt; 의 인스턴스를 얻는 데 사용됩니다 . &lt;code&gt;Popup&lt;/code&gt; S는 디스플레이에 사용되는 &lt;code&gt;Component&lt;/code&gt; 다른 상기 &lt;code&gt;Component&lt;/code&gt; 특정 봉쇄 계층들. 일반 계약은 당신이 얻을 일단 있다는 것이다 &lt;code&gt;Popup&lt;/code&gt; A로부터 &lt;code&gt;PopupFactory&lt;/code&gt; , 당신이 호출해야 &lt;code&gt;hide&lt;/code&gt; 온 &lt;code&gt;Popup&lt;/code&gt; . 일반적인 사용법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="0f0413c8cf1cdf77186650256b11a1e2936e0d3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Position&lt;/code&gt; with an offset of 0 is a special case. It never changes its offset while document content is altered.</source>
          <target state="translated">&lt;code&gt;Position&lt;/code&gt; 오프셋이 0 인 위치 는 특별한 경우입니다. 문서 내용이 변경되는 동안에는 오프셋이 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="79f3a6ee69b3394457b9595b0feea4b5ceeb2b05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PreparedStatement&lt;/code&gt; -- used to send prepared statements or basic SQL statements (derived from &lt;code&gt;Statement&lt;/code&gt;)</source>
          <target state="translated">&lt;code&gt;PreparedStatement&lt;/code&gt; - 준비된 문 또는 기본 SQL 문을 보내는 데 사용됩니다 ( &lt;code&gt;Statement&lt;/code&gt; 에서 파생 됨 ).</target>
        </trans-unit>
        <trans-unit id="ddfec47f813ac5bfe133b54d7e1655ef912631f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintJob&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;PrintJob&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="24d03c1feaac5c5d678afd40cc4c37019901508f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintJobAttribute&lt;/code&gt; is a tagging interface which a printing attribute class implements to indicate the attribute describes the status of a Print Job or some other characteristic of a Print Job.</source>
          <target state="translated">&lt;code&gt;PrintJobAttribute&lt;/code&gt; 는 인쇄 작업의 상태 또는 인쇄 작업의 다른 특성을 설명하는 속성을 나타 내기 위해 인쇄 속성 클래스가 구현하는 태그 지정 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="20bfd128f1b76f898859d45fa950060bf5c041a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintJobAttribute&lt;/code&gt; is a tagging interface which a printing attribute class implements to indicate the attribute describes the status of a Print Job or some other characteristic of a Print Job. A Print Service instance adds a number of &lt;code&gt;PrintJobAttributes&lt;/code&gt; to a Print Job's attribute set to report the Print Job's status. If an attribute implements &lt;a href=&quot;printrequestattribute&quot;&gt;&lt;code&gt;PrintRequestAttribute&lt;/code&gt;&lt;/a&gt; as well as &lt;code&gt;PrintJobAttribute&lt;/code&gt;, the client may include the attribute in a attribute set to specify the attribute's value for the Print Job.</source>
          <target state="translated">&lt;code&gt;PrintJobAttribute&lt;/code&gt; 는 인쇄 작업의 상태 또는 인쇄 작업의 다른 특성을 설명하는 속성을 나타 내기 위해 인쇄 속성 클래스가 구현하는 태그 지정 인터페이스입니다. 인쇄 서비스 인스턴스는 인쇄 작업의 상태를보고하기 위해 인쇄 작업의 속성 세트에 여러 &lt;code&gt;PrintJobAttributes&lt;/code&gt; 를 추가합니다 . 속성이 &lt;a href=&quot;printrequestattribute&quot;&gt; &lt;code&gt;PrintRequestAttribute&lt;/code&gt; &lt;/a&gt; 및 &lt;code&gt;PrintJobAttribute&lt;/code&gt; 를 구현하는 경우 클라이언트는 속성 세트에 속성을 포함하여 인쇄 작업에 대한 속성 값을 지정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="49f9e3feaf5d8167b442ce9300d0511dcf6c6795" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; is just an &lt;a href=&quot;attributeset&quot;&gt;&lt;code&gt;AttributeSet&lt;/code&gt;&lt;/a&gt; whose constructors and mutating operations guarantee an additional invariant, namely that all attribute values in the &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; must be instances of interface &lt;a href=&quot;printrequestattribute&quot;&gt;&lt;code&gt;PrintRequestAttribute&lt;/code&gt;&lt;/a&gt;. The &lt;a href=&quot;#add(javax.print.attribute.Attribute)&quot;&gt;&lt;code&gt;add(Attribute)&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;#addAll(javax.print.attribute.AttributeSet)&quot;&gt;&lt;code&gt;addAll(AttributeSet)&lt;/code&gt;&lt;/a&gt; operations are respecified below to guarantee this additional invariant.</source>
          <target state="translated">&lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; 를이 단지입니다 &lt;a href=&quot;attributeset&quot;&gt; &lt;code&gt;AttributeSet&lt;/code&gt; 에&lt;/a&gt; 그 생성자와 돌연변이의 조작의 모든 속성 값, 즉 것을 추가 불변 보장 &lt;code&gt;PrintRequestAttributeSet&lt;/code&gt; 를이 인터페이스의 인스턴스해야 &lt;a href=&quot;printrequestattribute&quot;&gt; &lt;code&gt;PrintRequestAttribute&lt;/code&gt; 을&lt;/a&gt; . &lt;a href=&quot;#add(javax.print.attribute.Attribute)&quot;&gt; &lt;code&gt;add(Attribute)&lt;/code&gt; &lt;/a&gt; , 및 &lt;a href=&quot;#addAll(javax.print.attribute.AttributeSet)&quot;&gt; &lt;code&gt;addAll(AttributeSet)&lt;/code&gt; &lt;/a&gt; 작업이 추가 불변을 보장하기 위해 아래 respecified된다.</target>
        </trans-unit>
        <trans-unit id="f899e09674ba72d841f60ba92cefab52905c6fe9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintService&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;PrintService&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="eef3f14e5df3d0d2706edd64e3b8ca579f73575a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrintService&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;PrintService&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="e01793b4167c22062078a543832e66af0d0719e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PrinterResolution&lt;/code&gt; is used in multiple ways:</source>
          <target state="translated">&lt;code&gt;PrinterResolution&lt;/code&gt; 은 여러 방법으로 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="cb0094c2401044684191945838ede7bd2b46a2c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Process&lt;/code&gt; provides control of native processes started by ProcessBuilder.start and Runtime.exec.</source>
          <target state="translated">&lt;code&gt;Process&lt;/code&gt; 는 ProcessBuilder.start 및 Runtime.exec에 의해 시작된 기본 프로세스를 제어합니다.</target>
        </trans-unit>
        <trans-unit id="3b8ec7db8395b083ec838a28db64a25bf83b3930" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Process&lt;/code&gt; provides control of native processes started by ProcessBuilder.start and Runtime.exec. The class provides methods for performing input from the process, performing output to the process, waiting for the process to complete, checking the exit status of the process, and destroying (killing) the process. The &lt;a href=&quot;processbuilder#start()&quot;&gt;&lt;code&gt;ProcessBuilder.start()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;runtime#exec(java.lang.String%5B%5D,java.lang.String%5B%5D,java.io.File)&quot;&gt;&lt;code&gt;Runtime.exec&lt;/code&gt;&lt;/a&gt; methods create a native process and return an instance of a subclass of &lt;code&gt;Process&lt;/code&gt; that can be used to control the process and obtain information about it.</source>
          <target state="translated">&lt;code&gt;Process&lt;/code&gt; 는 ProcessBuilder.start 및 Runtime.exec에 의해 시작된 기본 프로세스를 제어합니다. 이 클래스는 프로세스에서 입력을 수행하고, 프로세스에 출력을 수행하고, 프로세스가 완료 될 때까지 대기하고, 프로세스의 종료 상태를 확인하고, 프로세스를 파괴 (종료)하는 메서드를 제공합니다. &lt;a href=&quot;processbuilder#start()&quot;&gt; &lt;code&gt;ProcessBuilder.start()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;runtime#exec(java.lang.String%5B%5D,java.lang.String%5B%5D,java.io.File)&quot;&gt; &lt;code&gt;Runtime.exec&lt;/code&gt; 의의&lt;/a&gt; 방법은 기본 프로세스를 생성하는 서브 클래스의 인스턴스를 리턴 &lt;code&gt;Process&lt;/code&gt; 프로세스를 제어하고 정보의 취득을 할 수있다.</target>
        </trans-unit>
        <trans-unit id="9c966b2587f0f3e6f3eadbe2c03d187ad210d483" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that a change has occurred in a component's bounds.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; 구성 요소의 경계에서 변경이 발생했음을 나타내는 PropertyChangeEvent .</target>
        </trans-unit>
        <trans-unit id="f33b28a5934c627cd00b184f0c2b45891534112f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that a change has occurred in a component's bounds. The &lt;code&gt;oldValue&lt;/code&gt; is the old component bounds and the &lt;code&gt;newValue&lt;/code&gt; is the new component bounds.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; 구성 요소의 경계에서 변경이 발생했음을 나타내는 PropertyChangeEvent . &lt;code&gt;oldValue&lt;/code&gt; 입니다은 기존의 구성 요소 경계하고 &lt;code&gt;newValue&lt;/code&gt; 새 구성 요소 경계입니다.</target>
        </trans-unit>
        <trans-unit id="1fc6054b990682647628eab0832fedebb8332f62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that a significant change has occurred to the children of a component like a tree or text.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; 트리 또는 텍스트와 같은 구성 요소의 자식에 중요한 변경이 발생했음을 나타내는 PropertyChangeEvent .</target>
        </trans-unit>
        <trans-unit id="60571f7c0debfd7d9c48d0c61bd9e8edf99bb1e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that a significant change has occurred to the children of a component like a tree or text. This change notifies the event listener that it needs to reacquire the state of the subcomponents. The &lt;code&gt;oldValue&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; and the &lt;code&gt;newValue&lt;/code&gt; is the component whose children have become invalid.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; 트리 또는 텍스트와 같은 구성 요소의 자식에 중요한 변경이 발생했음을 나타내는 PropertyChangeEvent . 이 변경은 이벤트 리스너에게 하위 구성 요소의 상태를 다시 획득해야 함을 알립니다. &lt;code&gt;oldValue&lt;/code&gt; 입니다은 입니다 &lt;code&gt;null&lt;/code&gt; 과 &lt;code&gt;newValue&lt;/code&gt; 그 아이들 무효가 한 구성 요소입니다.</target>
        </trans-unit>
        <trans-unit id="7ff8dd3094c5297ae6a9b431bb15f8519d14a511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that text attributes have changed.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; 텍스트 속성이 변경되었음을 나타내는 PropertyChangeEvent .</target>
        </trans-unit>
        <trans-unit id="7d5e1b9441a9527d77606d4a9630d0f10c32ae68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeEvent&lt;/code&gt; which indicates that text has changed.</source>
          <target state="translated">&lt;code&gt;PropertyChangeEvent&lt;/code&gt; 텍스트가 변경되었음을 나타내는 PropertyChangeEvent .</target>
        </trans-unit>
        <trans-unit id="7e58a8d75baba6e6d89910e2db7656658699c50d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeListener&lt;/code&gt; installed on the scroll pane.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; 스크롤 창에 설치된 PropertyChangeListener .</target>
        </trans-unit>
        <trans-unit id="ba06b0dd08ce4d57a239a3b9dddd4a16a33ab51d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeListener&lt;/code&gt; returned from &lt;code&gt;createPropertyChangeListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; &lt;code&gt;createPropertyChangeListener&lt;/code&gt; 에서 반환 된 PropertyChangeListener 입니다.</target>
        </trans-unit>
        <trans-unit id="a6958e056e94f9d39980355fd9db462d2f00a97c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeListener&lt;/code&gt; returned from &lt;code&gt;createPropertyChangeListener&lt;/code&gt;. You should not need to access this field, rather if you want to customize the &lt;code&gt;PropertyChangeListener&lt;/code&gt; override &lt;code&gt;createPropertyChangeListener&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; &lt;code&gt;createPropertyChangeListener&lt;/code&gt; 에서 반환 된 PropertyChangeListener 입니다. &lt;code&gt;PropertyChangeListener&lt;/code&gt; 재정의 &lt;code&gt;createPropertyChangeListener&lt;/code&gt; 를 사용자 정의하려는 경우이 필드에 액세스 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="399b556c838e2cf11db4df4893f7c0f77933070c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeListener&lt;/code&gt; that attached to &lt;code&gt;JList&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyChangeListener&lt;/code&gt; &lt;code&gt;JList&lt;/code&gt; 에 첨부 된 PropertyChangeListener 입니다 .</target>
        </trans-unit>
        <trans-unit id="2d699fbd7532c65d9b67bd95b5a209a336df8924" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeListeners&lt;/code&gt; are notified asynchronously on the</source>
          <target state="translated">&lt;code&gt;PropertyChangeListeners&lt;/code&gt; 는</target>
        </trans-unit>
        <trans-unit id="59067153cfbf767bf0eae368624ecf2fda3e6023" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyChangeSupport&lt;/code&gt; for this &lt;code&gt;SwingWorker&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;PropertyChangeSupport&lt;/code&gt; 이 &lt;code&gt;SwingWorker&lt;/code&gt; 에 대한 PropertyChangeSupport</target>
        </trans-unit>
        <trans-unit id="18dd12e6b13bdc8d1392690785a89b93fd970019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyListener&lt;/code&gt; for &lt;code&gt;JSlider.isFilled&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;PropertyListener&lt;/code&gt; &lt;code&gt;JSlider.isFilled&lt;/code&gt; 용 PropertyListener .</target>
        </trans-unit>
        <trans-unit id="749c70a759310b6c0ac6be6b8e9326bb4117feac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyResourceBundle&lt;/code&gt; can be constructed either from an &lt;code&gt;InputStream&lt;/code&gt; or a &lt;code&gt;Reader&lt;/code&gt;, which represents a property file. Constructing a &lt;code&gt;PropertyResourceBundle&lt;/code&gt; instance from an &lt;code&gt;InputStream&lt;/code&gt; requires that the input stream be encoded in &lt;code&gt;UTF-8&lt;/code&gt;. By default, if a &lt;a href=&quot;../nio/charset/malformedinputexception&quot;&gt;&lt;code&gt;MalformedInputException&lt;/code&gt;&lt;/a&gt; or an &lt;a href=&quot;../nio/charset/unmappablecharacterexception&quot;&gt;&lt;code&gt;UnmappableCharacterException&lt;/code&gt;&lt;/a&gt; occurs on reading the input stream, then the &lt;code&gt;PropertyResourceBundle&lt;/code&gt; instance resets to the state before the exception, re-reads the input stream in &lt;code&gt;ISO-8859-1&lt;/code&gt;, and continues reading. If the system property &lt;code&gt;java.util.PropertyResourceBundle.encoding&lt;/code&gt; is set to either &quot;ISO-8859-1&quot; or &quot;UTF-8&quot;, the input stream is solely read in that encoding, and throws the exception if it encounters an invalid sequence. If &quot;ISO-8859-1&quot; is specified, characters that cannot be represented in ISO-8859-1 encoding must be represented by Unicode Escapes as defined in section 3.3 of</source>
          <target state="translated">&lt;code&gt;PropertyResourceBundle&lt;/code&gt; 은 속성 파일을 나타내는 &lt;code&gt;InputStream&lt;/code&gt; 또는 &lt;code&gt;Reader&lt;/code&gt; 에서 생성 할 수 있습니다 . 구축 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 가 된 에서 인스턴스 &lt;code&gt;InputStream&lt;/code&gt; 입력 스트림이 인코딩 될 것을 요구 &lt;code&gt;UTF-8&lt;/code&gt; . 기본적으로 입력 스트림을 읽을 때 &lt;a href=&quot;../nio/charset/malformedinputexception&quot;&gt; &lt;code&gt;MalformedInputException&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../nio/charset/unmappablecharacterexception&quot;&gt; &lt;code&gt;UnmappableCharacterException&lt;/code&gt; 이&lt;/a&gt; 발생하면 &lt;code&gt;PropertyResourceBundle&lt;/code&gt; 인스턴스가 예외 이전 상태로 재설정되고 &lt;code&gt;ISO-8859-1&lt;/code&gt; 에서 입력 스트림을 다시 읽고 계속 읽습니다. 시스템 속성 &lt;code&gt;java.util.PropertyResourceBundle.encoding&lt;/code&gt; &quot;ISO-8859-1&quot;또는 &quot;UTF-8&quot;로 설정되면 입력 스트림은 해당 인코딩으로 만 읽히고 유효하지 않은 시퀀스가 ​​발견되면 예외가 발생합니다. &quot;ISO-8859-1&quot;이 지정된 경우 ISO-8859-1 인코딩으로 표시 할 수없는 문자는의 섹션 3.3에 정의 된대로 유니 코드 이스케이프로 표시되어야합니다.</target>
        </trans-unit>
        <trans-unit id="fc24baabfee4175aa3af89492a6508e2fc036e98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyResourceBundle&lt;/code&gt; is a concrete subclass of &lt;code&gt;ResourceBundle&lt;/code&gt; that manages resources for a locale using a set of static strings from a property file.</source>
          <target state="translated">&lt;code&gt;PropertyResourceBundle&lt;/code&gt; 은 속성 파일의 정적 문자열 집합을 사용하여 로캘에 대한 &lt;code&gt;ResourceBundle&lt;/code&gt; 를 관리 하는 ResourceBundle 의 구체적인 하위 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="e96ec8b508fe11d2f8bb4f08f31370e4ecf1c82a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;PropertyResourceBundle&lt;/code&gt; is a concrete subclass of &lt;code&gt;ResourceBundle&lt;/code&gt; that manages resources for a locale using a set of static strings from a property file. See &lt;a href=&quot;resourcebundle&quot;&gt;&lt;code&gt;ResourceBundle&lt;/code&gt;&lt;/a&gt; for more information about resource bundles.</source>
          <target state="translated">&lt;code&gt;PropertyResourceBundle&lt;/code&gt; 은 속성 파일의 정적 문자열 집합을 사용하여 로캘에 대한 &lt;code&gt;ResourceBundle&lt;/code&gt; 를 관리 하는 ResourceBundle 의 구체적인 하위 클래스입니다 . 자원 번들에 대한 자세한 정보는 &lt;a href=&quot;resourcebundle&quot;&gt; &lt;code&gt;ResourceBundle&lt;/code&gt; &lt;/a&gt; 을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="408b51230bab9b7150ec7ee422a6ef3e7f58e82e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; throws &lt;code&gt;IllegalArgumentException&lt;/code&gt; for the same reasons that &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; does.</source>
          <target state="translated">&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; 가 발생 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 하는 것과 같은 이유로 &lt;code&gt;Proxy.getProxyClass&lt;/code&gt; 의는 않습니다.</target>
        </trans-unit>
        <trans-unit id="da530510929fe6c96f463bc0c49e1ee92cd5450a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Proxy&lt;/code&gt; provides static methods for creating dynamic proxy classes and instances, and it is also the superclass of all dynamic proxy classes created by those methods.</source>
          <target state="translated">&lt;code&gt;Proxy&lt;/code&gt; 는 동적 프록시 클래스 및 인스턴스를 작성하기위한 정적 메소드를 제공하며 해당 메소드로 작성된 모든 동적 프록시 클래스의 수퍼 클래스이기도합니다.</target>
        </trans-unit>
        <trans-unit id="60c8ecf884af360e6a1a2e1af05573b45adf00c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Proxy&lt;/code&gt; provides static methods for creating objects that act like instances of interfaces but allow for customized method invocation.</source>
          <target state="translated">&lt;code&gt;Proxy&lt;/code&gt; 는 인터페이스의 인스턴스처럼 작동하지만 사용자 지정 메서드 호출을 허용하는 개체를 만들기위한 정적 메서드를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="7f206786bed47d96888a69848c08426679cc5eb6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Proxy&lt;/code&gt; provides static methods for creating objects that act like instances of interfaces but allow for customized method invocation. To create a proxy instance for some interface &lt;code&gt;Foo&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;Proxy&lt;/code&gt; 는 인터페이스의 인스턴스처럼 작동하지만 사용자 지정 메서드 호출을 허용하는 개체를 만들기위한 정적 메서드를 제공합니다. 일부 인터페이스 &lt;code&gt;Foo&lt;/code&gt; 에 대한 프록시 인스턴스를 만들려면 다음을 수행하십시오.</target>
        </trans-unit>
        <trans-unit id="ca585ada7df00c4b1d8fea4d54987978ddbccd39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; constructor specifying the Namespace URI and local part.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 네임 스페이스 URI 및 로컬 부분을 지정하는 QName 생성자.</target>
        </trans-unit>
        <trans-unit id="e2eedc4571c3eec827bcfe60939843df95e4d603" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; constructor specifying the Namespace URI, local part and prefix.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 네임 스페이스 URI, 로컬 부분 및 접두사를 지정하는 QName 생성자.</target>
        </trans-unit>
        <trans-unit id="c55545fb2750e34975ef7192b5fb00823b2a74ef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; constructor specifying the local part.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 로컬 부분을 지정하는 QName 생성자.</target>
        </trans-unit>
        <trans-unit id="bbd029620df34bd9762a8223840db541c1dc8110" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; corresponding to the given &lt;code&gt;String&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 주어진 &lt;code&gt;String&lt;/code&gt; 해당하는 QName</target>
        </trans-unit>
        <trans-unit id="a8c85a6a30518746adb38fbd850ec25ed2cf89cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; derived from parsing the formatted &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 형식화 된 &lt;code&gt;String&lt;/code&gt; 구문 분석에서 파생 된 QName .</target>
        </trans-unit>
        <trans-unit id="81e9568b1ff909b6fedc25500eaba911395070d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; is immutable.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 은 변경할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="4c6e14f13a0f624db15eb12df316be14fa9502ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;QName&lt;/code&gt; represents a &lt;strong&gt;qualified name&lt;/strong&gt; as defined in the XML specifications: &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#QName&quot;&gt;XML Schema Part2: Datatypes specification&lt;/a&gt;, &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#ns-qualnames&quot;&gt;Namespaces in XML&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;QName&lt;/code&gt; 은 XML 사양 ( &lt;a href=&quot;http://www.w3.org/TR/xmlschema-2/#QName&quot;&gt;XML Schema Part2 : Datatypes specification&lt;/a&gt; , &lt;a href=&quot;http://www.w3.org/TR/REC-xml-names/#ns-qualnames&quot;&gt;Namespaces in XML)에&lt;/a&gt; 정의 된 &lt;strong&gt;정규화 된 이름&lt;/strong&gt; 을 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="b396eea9383cb4b88b5b025775c976d9863badd1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Queue&lt;/code&gt; Method</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; 방법</target>
        </trans-unit>
        <trans-unit id="0b93516b8e1e330d60d039e95c0fb02772feaad9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Queue&lt;/code&gt; implementations generally do not allow insertion of &lt;code&gt;null&lt;/code&gt; elements, although some implementations, such as &lt;a href=&quot;linkedlist&quot;&gt;&lt;code&gt;LinkedList&lt;/code&gt;&lt;/a&gt;, do not prohibit insertion of &lt;code&gt;null&lt;/code&gt;. Even in the implementations that permit it, &lt;code&gt;null&lt;/code&gt; should not be inserted into a &lt;code&gt;Queue&lt;/code&gt;, as &lt;code&gt;null&lt;/code&gt; is also used as a special return value by the &lt;code&gt;poll&lt;/code&gt; method to indicate that the queue contains no elements.</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; &lt;a href=&quot;linkedlist&quot;&gt; &lt;code&gt;LinkedList&lt;/code&gt; &lt;/a&gt; 와 같은 일부 구현에서는 &lt;code&gt;null&lt;/code&gt; 삽입을 금지하지 않지만 큐 구현에서는 일반적으로 &lt;code&gt;null&lt;/code&gt; 요소를 삽입 할 수 없습니다 . 심지어 허용 구현에서는 &lt;code&gt;null&lt;/code&gt; (A) 내로 삽입되지 않아야 &lt;code&gt;Queue&lt;/code&gt; 로서, &lt;code&gt;null&lt;/code&gt; 또한 의해 특수 반환 값으로서 사용된다 &lt;code&gt;poll&lt;/code&gt; 큐 요소가없는 것을 나타내는 방법.</target>
        </trans-unit>
        <trans-unit id="8679c55cdb78a70e595d02b028825709fb730408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Queue&lt;/code&gt; implementations generally do not define element-based versions of methods &lt;code&gt;equals&lt;/code&gt; and &lt;code&gt;hashCode&lt;/code&gt; but instead inherit the identity based versions from class &lt;code&gt;Object&lt;/code&gt;, because element-based equality is not always well-defined for queues with the same elements but different ordering properties.</source>
          <target state="translated">&lt;code&gt;Queue&lt;/code&gt; 구현은 일반적으로 요소 기반 버전의 메소드 &lt;code&gt;equals&lt;/code&gt; 및 &lt;code&gt;hashCode&lt;/code&gt; 를 정의하지 않지만 대신 요소 기반 동등성이 요소는 동일하지만 순서 특성이 다른 큐에 대해 잘 정의되어 있기 때문에 &lt;code&gt;Object&lt;/code&gt; 클래스에서 ID 기반 버전을 상속합니다 .</target>
        </trans-unit>
        <trans-unit id="d5b3084d90510a484a935829d3ff8b444a3ddac6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - The element type of the new stream</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 새 스트림의 요소 유형</target>
        </trans-unit>
        <trans-unit id="f629e4a546cc14c51a7987f2aef05acc9d7d69ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - The final result type of the new collector</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 새 수집기의 최종 결과 유형</target>
        </trans-unit>
        <trans-unit id="60d3b1beb316e1205baef79de9638a11fef62fd6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - The type of intermediate accumulation result, and final result, for the new collector</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 새 수집기의 중간 누적 결과 유형 및 최종 결과</target>
        </trans-unit>
        <trans-unit id="7754430553251d06e99e56218086c9955a5ef401" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - result type of collector</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 수집기의 결과 유형</target>
        </trans-unit>
        <trans-unit id="16d793d0e9e37a8b2abb141bcb19ff1586f17209" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - result type of the downstream collector</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 다운 스트림 콜렉터의 결과 유형</target>
        </trans-unit>
        <trans-unit id="33f562cfb608d3acccf73609f1456db5167a2834" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the published item type</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 게시 된 항목 유형</target>
        </trans-unit>
        <trans-unit id="8c76b51e69a0849c323c7465e221b08f87a89bc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the result type of the reduction operation</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 감소 연산의 결과 유형</target>
        </trans-unit>
        <trans-unit id="1f05c5bda74f948a003c8606ea1462bb62baf4ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the return type of the visitor's methods</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 방문자 메소드의 리턴 유형</target>
        </trans-unit>
        <trans-unit id="4560e8e675a7acc63ca504ce2fb3e54fb35b188c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the return type of this visitor's methods</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 이 방문자 메소드의 리턴 유형</target>
        </trans-unit>
        <trans-unit id="c77aeb842dafaa1f8c1e5e71b034081d5ff32c0d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the return type of this visitor's methods. Use &lt;a href=&quot;../../../../../java.base/java/lang/void&quot;&gt;&lt;code&gt;Void&lt;/code&gt;&lt;/a&gt; for visitors that do not need to return results.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - the return type of this visitor's methods. Use &lt;a href=&quot;../../../../../java.base/java/lang/void&quot;&gt; &lt;code&gt;Void&lt;/code&gt; &lt;/a&gt; for visitors that do not need to return results.</target>
        </trans-unit>
        <trans-unit id="918c3fc3373408ca6ce2da43c8190d3ed0fd5c58" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the return type of this visitor's methods. Use &lt;a href=&quot;../../../../java/lang/void&quot;&gt;&lt;code&gt;Void&lt;/code&gt;&lt;/a&gt; for visitors that do not need to return results.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 이 방문자 메소드의 리턴 유형 결과를 반환하지 않아도되는 방문자에게는 &lt;a href=&quot;../../../../java/lang/void&quot;&gt; &lt;code&gt;Void&lt;/code&gt; &lt;/a&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="fc83d57ed38eebfff120b35ee913384621bf2606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the return type of this visitor's methods. Use &lt;code&gt;Void&lt;/code&gt; for visitors that do not need to return results.</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 이 방문자 메소드의 리턴 유형 결과를 반환하지 않아도되는 방문자에게는 &lt;code&gt;Void&lt;/code&gt; 를 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d28a3271151222f7a67611f53075a5b628c7cce1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type of the Temporal object</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 임시 객체의 유형</target>
        </trans-unit>
        <trans-unit id="7313d88e31203e0f8d42968a231940bba48838e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type of the mutable result container</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - the type of the mutable result container</target>
        </trans-unit>
        <trans-unit id="4eb784ce6b9c857b370cc34ebb112c5f7d8a53a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type of the result</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 결과의 유형</target>
        </trans-unit>
        <trans-unit id="4bb6dfc6fe71a4ea2106649887d0bbe1aee5753e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type of the result of the function</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 함수 결과의 유형</target>
        </trans-unit>
        <trans-unit id="6752128866cc67ce79fe2fab671aa74da246532d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - the type returned from the query</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 쿼리에서 반환 된 유형</target>
        </trans-unit>
        <trans-unit id="572787d050c17378048bd8d95bf105f18ac9a20c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;R&lt;/code&gt; - type of the result</source>
          <target state="translated">&lt;code&gt;R&lt;/code&gt; - 결과 유형</target>
        </trans-unit>
        <trans-unit id="67bcbbb823d949e9a2614deae5bef9e0749cea1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RMIClassLoader&lt;/code&gt; comprises static methods to support dynamic class loading with RMI.</source>
          <target state="translated">&lt;code&gt;RMIClassLoader&lt;/code&gt; comprises static methods to support dynamic class loading with RMI.</target>
        </trans-unit>
        <trans-unit id="21a3551f68fe0e3f44babcb2d8c844e6f30a03db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RMIClassLoader&lt;/code&gt; comprises static methods to support dynamic class loading with RMI. Included are methods for loading classes from a network location (one or more URLs) and obtaining the location from which an existing class should be loaded by remote parties. These methods are used by the RMI runtime when marshalling and unmarshalling classes contained in the arguments and return values of remote method calls, and they also may be invoked directly by applications in order to mimic RMI's dynamic class loading behavior.</source>
          <target state="translated">&lt;code&gt;RMIClassLoader&lt;/code&gt; comprises static methods to support dynamic class loading with RMI. Included are methods for loading classes from a network location (one or more URLs) and obtaining the location from which an existing class should be loaded by remote parties. These methods are used by the RMI runtime when marshalling and unmarshalling classes contained in the arguments and return values of remote method calls, and they also may be invoked directly by applications in order to mimic RMI's dynamic class loading behavior.</target>
        </trans-unit>
        <trans-unit id="d88506e3e9135913bcd88803f18d035564e60855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; is the service provider interface for &lt;code&gt;RMIClassLoader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; is the service provider interface for &lt;code&gt;RMIClassLoader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="de0c91bac67fc2222fd604f4ed7d597fa8904b7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; is the service provider interface for &lt;code&gt;RMIClassLoader&lt;/code&gt;. In particular, an &lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; instance provides an implementation of the following static methods of &lt;code&gt;RMIClassLoader&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; is the service provider interface for &lt;code&gt;RMIClassLoader&lt;/code&gt; . In particular, an &lt;code&gt;RMIClassLoaderSpi&lt;/code&gt; instance provides an implementation of the following static methods of &lt;code&gt;RMIClassLoader&lt;/code&gt; :</target>
        </trans-unit>
        <trans-unit id="21dff0411f1aca90f50abcb44a1221d16817046c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RMISecurityManager&lt;/code&gt; implements a policy identical to the policy implemented by &lt;a href=&quot;../../../java.base/java/lang/securitymanager&quot;&gt;&lt;code&gt;SecurityManager&lt;/code&gt;&lt;/a&gt;. RMI applications should use the &lt;code&gt;SecurityManager&lt;/code&gt; class or another appropriate &lt;code&gt;SecurityManager&lt;/code&gt; implementation instead of this class. RMI's class loader will download classes from remote locations only if a security manager has been set.</source>
          <target state="translated">&lt;code&gt;RMISecurityManager&lt;/code&gt; implements a policy identical to the policy implemented by &lt;a href=&quot;../../../java.base/java/lang/securitymanager&quot;&gt; &lt;code&gt;SecurityManager&lt;/code&gt; &lt;/a&gt;. RMI applications should use the &lt;code&gt;SecurityManager&lt;/code&gt; class or another appropriate &lt;code&gt;SecurityManager&lt;/code&gt; implementation instead of this class. RMI's class loader will download classes from remote locations only if a security manager has been set.</target>
        </trans-unit>
        <trans-unit id="064d766acc118d90826f3cd801ec7ee46447bff0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RR&lt;/code&gt; - result type of the resulting collector</source>
          <target state="translated">&lt;code&gt;RR&lt;/code&gt; - 결과 콜렉터의 결과 유형</target>
        </trans-unit>
        <trans-unit id="08e56083939315acb3ac8d6d9eb96ef047650fb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSA/ECB/OAEPWithSHA-1AndMGF1Padding&lt;/code&gt; (1024, 2048)</source>
          <target state="translated">&lt;code&gt;RSA/ECB/OAEPWithSHA-1AndMGF1Padding&lt;/code&gt; (1024, 2048)</target>
        </trans-unit>
        <trans-unit id="cf4f7e3a6ec30bd47895fa42228f3c7581d40155" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSA/ECB/OAEPWithSHA-256AndMGF1Padding&lt;/code&gt; (1024, 2048)</source>
          <target state="translated">&lt;code&gt;RSA/ECB/OAEPWithSHA-256AndMGF1Padding&lt;/code&gt; (1024, 2048)</target>
        </trans-unit>
        <trans-unit id="08d0860727c4a7d941dce0f8a1ee3917b24f840b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSA/ECB/PKCS1Padding&lt;/code&gt; (1024, 2048)</source>
          <target state="translated">&lt;code&gt;RSA/ECB/PKCS1Padding&lt;/code&gt; (1024, 2048)</target>
        </trans-unit>
        <trans-unit id="62b2f4466d958c3f3ed5b550a38c7c0f1729fce5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSA&lt;/code&gt; (1024, 2048)</source>
          <target state="translated">&lt;code&gt;RSA&lt;/code&gt; (1024, 2048)</target>
        </trans-unit>
        <trans-unit id="3dd51987ef2d55d99d3b337efe4ed149d3974ae4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RSA&lt;/code&gt; (1024, 2048, 4096)</source>
          <target state="translated">&lt;code&gt;RSA&lt;/code&gt; (1024, 2048, 4096)</target>
        </trans-unit>
        <trans-unit id="815e3a487397227803232ef66641e18db3fd87f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Rdn&lt;/code&gt; will properly parse all valid RDNs, but does not attempt to detect all possible violations when parsing invalid RDNs. It is &quot;generous&quot; in accepting invalid RDNs. The &quot;validity&quot; of a name is determined ultimately when it is supplied to an LDAP server, which may accept or reject the name based on factors such as its schema information and interoperability considerations.</source>
          <target state="translated">&lt;code&gt;Rdn&lt;/code&gt; 은 유효한 모든 RDN을 올바르게 구문 분석하지만 유효하지 않은 RDN을 구문 분석 할 때 가능한 모든 위반을 감지하지는 않습니다. 유효하지 않은 RDN을 허용하는 것은 &quot;관대합니다&quot;. 이름의 &quot;유효성&quot;은 최종적으로 LDAP 서버에 제공 될 때 결정되며, 스키마 정보 및 상호 운용성 고려 사항과 같은 요인에 따라 이름을 승인하거나 거부 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0b2bd8531858a5408bab3b061558434deab0f7b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reader&lt;/code&gt; through which the partial &lt;code&gt;Clob&lt;/code&gt; value can be read.</source>
          <target state="translated">&lt;code&gt;Reader&lt;/code&gt; through which the partial &lt;code&gt;Clob&lt;/code&gt; value can be read.</target>
        </trans-unit>
        <trans-unit id="cb89420b5a6168c1926ef1a349b07badce26d93f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Reader&lt;/code&gt; through which the partial &lt;code&gt;SerialClob&lt;/code&gt; value can be read.</source>
          <target state="translated">&lt;code&gt;Reader&lt;/code&gt; through which the partial &lt;code&gt;SerialClob&lt;/code&gt; value can be read.</target>
        </trans-unit>
        <trans-unit id="190d6ea7948cbea5101e314c49f2d828b4a3a990" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RectangularShape&lt;/code&gt; is the base class for a number of &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; objects whose geometry is defined by a rectangular frame.</source>
          <target state="translated">&lt;code&gt;RectangularShape&lt;/code&gt; is the base class for a number of &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; objects whose geometry is defined by a rectangular frame.</target>
        </trans-unit>
        <trans-unit id="bca0b3b9feaae8ba2603c7480c12bc9b507327ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RectangularShape&lt;/code&gt; is the base class for a number of &lt;a href=&quot;../shape&quot;&gt;&lt;code&gt;Shape&lt;/code&gt;&lt;/a&gt; objects whose geometry is defined by a rectangular frame. This class does not directly specify any specific geometry by itself, but merely provides manipulation methods inherited by a whole category of &lt;code&gt;Shape&lt;/code&gt; objects. The manipulation methods provided by this class can be used to query and modify the rectangular frame, which provides a reference for the subclasses to define their geometry.</source>
          <target state="translated">&lt;code&gt;RectangularShape&lt;/code&gt; is the base class for a number of &lt;a href=&quot;../shape&quot;&gt; &lt;code&gt;Shape&lt;/code&gt; &lt;/a&gt; objects whose geometry is defined by a rectangular frame. This class does not directly specify any specific geometry by itself, but merely provides manipulation methods inherited by a whole category of &lt;code&gt;Shape&lt;/code&gt; objects. The manipulation methods provided by this class can be used to query and modify the rectangular frame, which provides a reference for the subclasses to define their geometry.</target>
        </trans-unit>
        <trans-unit id="b405d689b832d3e935123ce31bb2b643c2b65904" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Redirect&lt;/code&gt; policy is set through the &lt;a href=&quot;httpclient.builder#followRedirects(java.net.http.HttpClient.Redirect)&quot;&gt;Builder.followRedirects&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;Redirect&lt;/code&gt; policy is set through the &lt;a href=&quot;httpclient.builder#followRedirects(java.net.http.HttpClient.Redirect)&quot;&gt;Builder.followRedirects&lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="3270607507eec3e0380e86661b6b97a44f66cb59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Ref&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;REF&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Ref&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;REF&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e171fb3a12d4c7971286d8920295e04b989404f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ReferralException&lt;/code&gt; is an abstract class. Concrete implementations determine its synchronization and serialization properties.</source>
          <target state="translated">&lt;code&gt;ReferralException&lt;/code&gt; 은 추상 클래스입니다. 구체적인 구현은 동기화 및 직렬화 속성을 결정합니다.</target>
        </trans-unit>
        <trans-unit id="0abee82700c66126c40567a46238d65513f57497" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Registry&lt;/code&gt; is a remote interface to a simple remote object registry that provides methods for storing and retrieving remote object references bound with arbitrary string names.</source>
          <target state="translated">&lt;code&gt;Registry&lt;/code&gt; is a remote interface to a simple remote object registry that provides methods for storing and retrieving remote object references bound with arbitrary string names.</target>
        </trans-unit>
        <trans-unit id="ffa9f67a6e6e8cc3751736392cd46e339e63274d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Registry&lt;/code&gt; is a remote interface to a simple remote object registry that provides methods for storing and retrieving remote object references bound with arbitrary string names. The &lt;code&gt;bind&lt;/code&gt;, &lt;code&gt;unbind&lt;/code&gt;, and &lt;code&gt;rebind&lt;/code&gt; methods are used to alter the name bindings in the registry, and the &lt;code&gt;lookup&lt;/code&gt; and &lt;code&gt;list&lt;/code&gt; methods are used to query the current name bindings.</source>
          <target state="translated">&lt;code&gt;Registry&lt;/code&gt; is a remote interface to a simple remote object registry that provides methods for storing and retrieving remote object references bound with arbitrary string names. The &lt;code&gt;bind&lt;/code&gt; , &lt;code&gt;unbind&lt;/code&gt; , and &lt;code&gt;rebind&lt;/code&gt; methods are used to alter the name bindings in the registry, and the &lt;code&gt;lookup&lt;/code&gt; and &lt;code&gt;list&lt;/code&gt; methods are used to query the current name bindings.</target>
        </trans-unit>
        <trans-unit id="fed59a121a01f78e1d40cee1c3e9e212b4884dfa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RegistryHandler&lt;/code&gt; is an interface used internally by the RMI runtime in previous implementation versions. It should never be accessed by application code.</source>
          <target state="translated">&lt;code&gt;RegistryHandler&lt;/code&gt; is an interface used internally by the RMI runtime in previous implementation versions. It should never be accessed by application code.</target>
        </trans-unit>
        <trans-unit id="3991f2a2d42fbb14855a3e612c11e7d44be6a32d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RemoteCall&lt;/code&gt; is an abstraction used solely by the RMI runtime (in conjunction with stubs and skeletons of remote objects) to carry out a call to a remote object. The &lt;code&gt;RemoteCall&lt;/code&gt; interface is deprecated because it is only used by deprecated methods of &lt;code&gt;java.rmi.server.RemoteRef&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RemoteCall&lt;/code&gt; is an abstraction used solely by the RMI runtime (in conjunction with stubs and skeletons of remote objects) to carry out a call to a remote object. The &lt;code&gt;RemoteCall&lt;/code&gt; interface is deprecated because it is only used by deprecated methods of &lt;code&gt;java.rmi.server.RemoteRef&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="70b15fba3fa84029ec247e5de0cb62463efb7d62" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RemoteObjectInvocationHandler&lt;/code&gt; implements this method as follows:</source>
          <target state="translated">&lt;code&gt;RemoteObjectInvocationHandler&lt;/code&gt; implements this method as follows:</target>
        </trans-unit>
        <trans-unit id="68faf08f5939f3b3edd3d6736a08fe3892a2bc16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RemoteRef&lt;/code&gt; represents the handle for a remote object.</source>
          <target state="translated">&lt;code&gt;RemoteRef&lt;/code&gt; represents the handle for a remote object.</target>
        </trans-unit>
        <trans-unit id="f96ccdf7740dbaec50ae8c3f8d8d081f971af8b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RemoteRef&lt;/code&gt; represents the handle for a remote object. A &lt;code&gt;RemoteStub&lt;/code&gt; uses a remote reference to carry out a remote method invocation to a remote object.</source>
          <target state="translated">&lt;code&gt;RemoteRef&lt;/code&gt; represents the handle for a remote object. A &lt;code&gt;RemoteStub&lt;/code&gt; uses a remote reference to carry out a remote method invocation to a remote object.</target>
        </trans-unit>
        <trans-unit id="d612181669519d05eb73f1a010b91c5bc950e970" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResolvedModule&lt;/code&gt; defines the &lt;a href=&quot;#configuration()&quot;&gt;&lt;code&gt;configuration&lt;/code&gt;&lt;/a&gt; method to get the configuration that the resolved module is in. It defines the &lt;a href=&quot;#reference()&quot;&gt;&lt;code&gt;reference&lt;/code&gt;&lt;/a&gt; method to get the reference to the module's content.</source>
          <target state="translated">&lt;code&gt;ResolvedModule&lt;/code&gt; defines the &lt;a href=&quot;#configuration()&quot;&gt; &lt;code&gt;configuration&lt;/code&gt; &lt;/a&gt; method to get the configuration that the resolved module is in. It defines the &lt;a href=&quot;#reference()&quot;&gt; &lt;code&gt;reference&lt;/code&gt; &lt;/a&gt; method to get the reference to the module's content.</target>
        </trans-unit>
        <trans-unit id="7002152bf7373912ffbca68bcdc0b39553fb6bb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods during the bundle loading process.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt; factory methods during the bundle loading process.</target>
        </trans-unit>
        <trans-unit id="d3aaf853b7b606795204fe52223c22b18f4e96f0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;resourcebundle#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods during the bundle loading process.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;resourcebundle#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt; factory methods during the bundle loading process.</target>
        </trans-unit>
        <trans-unit id="1b8639d51169c0c5effd0eb8b76da726ad17c9eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;resourcebundle#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods during the bundle loading process. In other words, a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; collaborates with the factory methods for loading resource bundles. The default implementation of the callback methods provides the information necessary for the factory methods to perform the &lt;a href=&quot;resourcebundle#default_behavior&quot;&gt;default behavior&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;resourcebundle#getBundle(java.lang.String,java.util.Locale,java.lang.ClassLoader,java.util.ResourceBundle.Control)&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt; factory methods during the bundle loading process. In other words, a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; collaborates with the factory methods for loading resource bundles. The default implementation of the callback methods provides the information necessary for the factory methods to perform the &lt;a href=&quot;resourcebundle#default_behavior&quot;&gt;default behavior&lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="9bc668c8bbed6dc5bb76e0f70a605ac7573114b3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods during the bundle loading process.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; 은 번들로드 프로세스 중에 &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt; 팩토리 메소드에 의해 호출되는 콜백 메소드 세트를 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="8e93382bf5a4bd6d45990819ce9ad24466ec435c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; defines a set of callback methods that are invoked by the &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods during the bundle loading process. In other words, a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; collaborates with the factory methods for loading resource bundles. The default implementation of the callback methods provides the information necessary for the factory methods to perform the &lt;a href=&quot;resourcebundle#default_behavior&quot;&gt;default behavior&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; 은 번들로드 프로세스 중에 &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt; 팩토리 메소드에 의해 호출되는 콜백 메소드 세트를 정의합니다 . 즉, &lt;code&gt;ResourceBundle.Control&lt;/code&gt; 은 자원 번들을로드하기위한 팩토리 메소드와 협업합니다. 콜백 메소드의 기본 구현은 팩토리 메소드가 &lt;a href=&quot;resourcebundle#default_behavior&quot;&gt;기본 동작&lt;/a&gt; 을 수행하는 데 필요한 정보를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="b4eaf806b6b4e5c2ab3718eb76827fa1167c3d5d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle.Control&lt;/code&gt; is not supported in named modules. If the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; method with a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; is called in a named module, the method will throw an &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt;&lt;code&gt;UnsupportedOperationException&lt;/code&gt;&lt;/a&gt;. Any service providers of &lt;a href=&quot;spi/resourcebundlecontrolprovider&quot;&gt;&lt;code&gt;ResourceBundleControlProvider&lt;/code&gt;&lt;/a&gt; are ignored in named modules.</source>
          <target state="translated">&lt;code&gt;ResourceBundle.Control&lt;/code&gt; is not supported in named modules. If the &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; method with a &lt;code&gt;ResourceBundle.Control&lt;/code&gt; is called in a named module, the method will throw an &lt;a href=&quot;../lang/unsupportedoperationexception&quot;&gt; &lt;code&gt;UnsupportedOperationException&lt;/code&gt; &lt;/a&gt;. Any service providers of &lt;a href=&quot;spi/resourcebundlecontrolprovider&quot;&gt; &lt;code&gt;ResourceBundleControlProvider&lt;/code&gt; &lt;/a&gt; are ignored in named modules.</target>
        </trans-unit>
        <trans-unit id="631d53d09c73a80467cf823de9d98a388619ab47" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundle&lt;/code&gt; of the given &lt;code&gt;baseName&lt;/code&gt; and &lt;code&gt;locale&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt; if no resource bundle is found</source>
          <target state="translated">&lt;code&gt;ResourceBundle&lt;/code&gt; of the given &lt;code&gt;baseName&lt;/code&gt; and &lt;code&gt;locale&lt;/code&gt; , or &lt;code&gt;null&lt;/code&gt; if no resource bundle is found</target>
        </trans-unit>
        <trans-unit id="b8c05ab03857e0e09e08e9100b575af7d33249f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundleProvider&lt;/code&gt; is a service provider interface for resource bundles.</source>
          <target state="translated">&lt;code&gt;ResourceBundleProvider&lt;/code&gt; is a service provider interface for resource bundles.</target>
        </trans-unit>
        <trans-unit id="0ccb808daa165b14dbbb698c6c5ff159bd58486e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResourceBundleProvider&lt;/code&gt; is a service provider interface for resource bundles. It is used by &lt;a href=&quot;../resourcebundle#getBundle(java.lang.String)&quot;&gt;&lt;code&gt;ResourceBundle.getBundle&lt;/code&gt;&lt;/a&gt; factory methods to locate and load the service providers that are deployed as modules via &lt;a href=&quot;../serviceloader&quot;&gt;&lt;code&gt;ServiceLoader&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;ResourceBundleProvider&lt;/code&gt; is a service provider interface for resource bundles. It is used by &lt;a href=&quot;../resourcebundle#getBundle(java.lang.String)&quot;&gt; &lt;code&gt;ResourceBundle.getBundle&lt;/code&gt; &lt;/a&gt; factory methods to locate and load the service providers that are deployed as modules via &lt;a href=&quot;../serviceloader&quot;&gt; &lt;code&gt;ServiceLoader&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a4c954169d57604e9a0c6c189ae2fa340694e007" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet.TYPE_FORWARD_ONLY&lt;/code&gt;, &lt;code&gt;ResultSet.TYPE_SCROLL_INSENSITIVE&lt;/code&gt;, or &lt;code&gt;ResultSet.TYPE_SCROLL_SENSITIVE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ResultSet.TYPE_FORWARD_ONLY&lt;/code&gt; , &lt;code&gt;ResultSet.TYPE_SCROLL_INSENSITIVE&lt;/code&gt; , or &lt;code&gt;ResultSet.TYPE_SCROLL_SENSITIVE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8a666ccf1634b9e5f0677cbe41c2a500bf0a8f95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row describes a stored procedure parameter or column</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row describes a stored procedure parameter or column</target>
        </trans-unit>
        <trans-unit id="19b7b0a589025cbcfb6a4b1905708eb16d587ca4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row describes a user function parameter, column or return type</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row describes a user function parameter, column or return type</target>
        </trans-unit>
        <trans-unit id="4a0456197c8cf4c0b3a0da8e6e8ba419471f1e7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a column description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is a column description</target>
        </trans-unit>
        <trans-unit id="965d886d08cb7bc3c7c54206ece75834c564a66a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a column privilege description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is a column privilege description</target>
        </trans-unit>
        <trans-unit id="e74705730655155da6310bb90a817d5d3c01462c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a foreign key column description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is a foreign key column description</target>
        </trans-unit>
        <trans-unit id="1721e34c1dfcb5a1dbc19b26e34f4448c895c681" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a function description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is a function description</target>
        </trans-unit>
        <trans-unit id="72e7841c8e3a8213bccb775b04db24de85e0f00c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a primary key column description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is a primary key column description</target>
        </trans-unit>
        <trans-unit id="fd09482cc86833da653ab8c54602d9662610bd0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a procedure description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is a procedure description</target>
        </trans-unit>
        <trans-unit id="659a085aade031f021812f066a8e58efcdb9402b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a table description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is a table description</target>
        </trans-unit>
        <trans-unit id="cae558a7051ea9a7111c08597ce537782d5d3c25" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is a table privilege description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is a table privilege description</target>
        </trans-unit>
        <trans-unit id="fd54fff16f1300e9793c28198f2d030ec7e24c75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; - each row is an index column description</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; - each row is an index column description</target>
        </trans-unit>
        <trans-unit id="0e78e7fcda18bca9e2ed8a0f523e0310209e866b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; holdability -- ability to specify whether cursors should be held open or closed at the end of a transaction</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; holdability -- ability to specify whether cursors should be held open or closed at the end of a transaction</target>
        </trans-unit>
        <trans-unit id="b05cd551de56bd90029b38b7ae884cd394685efe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; interface</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; interface</target>
        </trans-unit>
        <trans-unit id="2513acd82505e81f2dde2ba7576159ee9369894a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSet&lt;/code&gt; object in which each row describes a UDT</source>
          <target state="translated">&lt;code&gt;ResultSet&lt;/code&gt; object in which each row describes a UDT</target>
        </trans-unit>
        <trans-unit id="a1658e8024878241ba251caea41c2d3133894bc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ResultSetMetaData&lt;/code&gt; interface -- provides information about the columns of a &lt;code&gt;ResultSet&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;ResultSetMetaData&lt;/code&gt; interface -- provides information about the columns of a &lt;code&gt;ResultSet&lt;/code&gt; object</target>
        </trans-unit>
        <trans-unit id="c2d9f791677a368b321a608cb8eec1ce67b0e10e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RoundingMode&lt;/code&gt; corresponding to the given integer.</source>
          <target state="translated">&lt;code&gt;RoundingMode&lt;/code&gt; 주어진 정수에 해당하는 RoundingMode .</target>
        </trans-unit>
        <trans-unit id="1fdcf84ed5053a874f5d4162c341a513473a7e63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowFilter&lt;/code&gt; has two formal type parameters that allow you to create a &lt;code&gt;RowFilter&lt;/code&gt; for a specific model. For example, the following assumes a specific model that is wrapping objects of type &lt;code&gt;Person&lt;/code&gt;. Only &lt;code&gt;Person&lt;/code&gt;s with an age over 20 will be shown:</source>
          <target state="translated">&lt;code&gt;RowFilter&lt;/code&gt; has two formal type parameters that allow you to create a &lt;code&gt;RowFilter&lt;/code&gt; for a specific model. For example, the following assumes a specific model that is wrapping objects of type &lt;code&gt;Person&lt;/code&gt; . Only &lt;code&gt;Person&lt;/code&gt; s with an age over 20 will be shown:</target>
        </trans-unit>
        <trans-unit id="54f6778f7acce0cfe887ed685880049c58947337" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowFilter&lt;/code&gt; is used to filter out entries from the model so that they are not shown in the view.</source>
          <target state="translated">&lt;code&gt;RowFilter&lt;/code&gt; is used to filter out entries from the model so that they are not shown in the view.</target>
        </trans-unit>
        <trans-unit id="5e7a2b096ed31692163aec67d7170f9ce5401c2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowFilter&lt;/code&gt; is used to filter out entries from the model so that they are not shown in the view. For example, a &lt;code&gt;RowFilter&lt;/code&gt; associated with a &lt;code&gt;JTable&lt;/code&gt; might only allow rows that contain a column with a specific string. The meaning of &lt;em&gt;entry&lt;/em&gt; depends on the component type. For example, when a filter is associated with a &lt;code&gt;JTable&lt;/code&gt;, an entry corresponds to a row; when associated with a &lt;code&gt;JTree&lt;/code&gt;, an entry corresponds to a node.</source>
          <target state="translated">&lt;code&gt;RowFilter&lt;/code&gt; is used to filter out entries from the model so that they are not shown in the view. For example, a &lt;code&gt;RowFilter&lt;/code&gt; associated with a &lt;code&gt;JTable&lt;/code&gt; might only allow rows that contain a column with a specific string. The meaning of &lt;em&gt;entry&lt;/em&gt; depends on the component type. For example, when a filter is associated with a &lt;code&gt;JTable&lt;/code&gt; , an entry corresponds to a row; when associated with a &lt;code&gt;JTree&lt;/code&gt; , an entry corresponds to a node.</target>
        </trans-unit>
        <trans-unit id="a62bad87bb32530e6b909097040d2be3c34b03ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowFilter&lt;/code&gt;'s &lt;code&gt;include&lt;/code&gt; method is passed an &lt;code&gt;Entry&lt;/code&gt; that wraps the underlying model. The number of columns in the &lt;code&gt;Entry&lt;/code&gt; corresponds to the number of columns in the &lt;code&gt;ModelWrapper&lt;/code&gt;. The identifier comes from the &lt;code&gt;ModelWrapper&lt;/code&gt; as well.</source>
          <target state="translated">&lt;code&gt;RowFilter&lt;/code&gt; 's &lt;code&gt;include&lt;/code&gt; method is passed an &lt;code&gt;Entry&lt;/code&gt; that wraps the underlying model. The number of columns in the &lt;code&gt;Entry&lt;/code&gt; corresponds to the number of columns in the &lt;code&gt;ModelWrapper&lt;/code&gt; . The identifier comes from the &lt;code&gt;ModelWrapper&lt;/code&gt; as well.</target>
        </trans-unit>
        <trans-unit id="dd6fa59398a489e40df155285814ed3fd335b1ca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowId&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;ROWID&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;RowId&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;ROWID&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ffb3b24ad73205966a8adeadd3569c92ed985423" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSet&lt;/code&gt; implementations can use the method &lt;code&gt;RowSet.getURL()&lt;/code&gt; to retrieve a &lt;code&gt;java.net.URL&lt;/code&gt; object, which can be used to manipulate the external data.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; implementations can use the method &lt;code&gt;RowSet.getURL()&lt;/code&gt; to retrieve a &lt;code&gt;java.net.URL&lt;/code&gt; object, which can be used to manipulate the external data.</target>
        </trans-unit>
        <trans-unit id="b4a1850613de664696cd804e54eb0f449203871b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSet&lt;/code&gt; implementations can use the method &lt;code&gt;RowSet.getURL&lt;/code&gt; to retrieve a &lt;code&gt;java.net.URL&lt;/code&gt; object, which can be used to manipulate the external data.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; implementations can use the method &lt;code&gt;RowSet.getURL&lt;/code&gt; to retrieve a &lt;code&gt;java.net.URL&lt;/code&gt; object, which can be used to manipulate the external data.</target>
        </trans-unit>
        <trans-unit id="09de9dca764ed588784c655b559a3e3b5ada030a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSet&lt;/code&gt; objects that implement the &lt;code&gt;Joinable&lt;/code&gt; interface must ensure that a key-like constraint continues to be enforced until the method &lt;code&gt;CachedRowSet.unsetKeyColumns&lt;/code&gt; has been called on the designated column.</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; objects that implement the &lt;code&gt;Joinable&lt;/code&gt; interface must ensure that a key-like constraint continues to be enforced until the method &lt;code&gt;CachedRowSet.unsetKeyColumns&lt;/code&gt; has been called on the designated column.</target>
        </trans-unit>
        <trans-unit id="44784d9b5d29a68624b98bd2ded6ab9ac38490c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSet&lt;/code&gt; technology -- providing a convenient means of handling and passing data</source>
          <target state="translated">&lt;code&gt;RowSet&lt;/code&gt; technology -- providing a convenient means of handling and passing data</target>
        </trans-unit>
        <trans-unit id="0eda6ada678c264b134ad0f4a5400d6cf8f6280f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorter&lt;/code&gt; implementations typically don't have a one-to-one mapping with the underlying model, but they can. For example, if a database does the sorting, &lt;code&gt;toggleSortOrder&lt;/code&gt; might call through to the database (on a background thread), and override the mapping methods to return the argument that is passed in.</source>
          <target state="translated">&lt;code&gt;RowSorter&lt;/code&gt; implementations typically don't have a one-to-one mapping with the underlying model, but they can. For example, if a database does the sorting, &lt;code&gt;toggleSortOrder&lt;/code&gt; might call through to the database (on a background thread), and override the mapping methods to return the argument that is passed in.</target>
        </trans-unit>
        <trans-unit id="821dd02c989cffdebf359529b5bc977c97ee2587" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorter&lt;/code&gt; provides notification of changes by way of &lt;code&gt;RowSorterListener&lt;/code&gt;. Two types of notification are sent:</source>
          <target state="translated">&lt;code&gt;RowSorter&lt;/code&gt; provides notification of changes by way of &lt;code&gt;RowSorterListener&lt;/code&gt; . Two types of notification are sent:</target>
        </trans-unit>
        <trans-unit id="9e9dd4a551b7e19a7005465bc5eb7a68e6b0d0e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorter&lt;/code&gt; provides the basis for sorting and filtering.</source>
          <target state="translated">&lt;code&gt;RowSorter&lt;/code&gt; provides the basis for sorting and filtering.</target>
        </trans-unit>
        <trans-unit id="62560c806671aaf7d19a928c426d7819649dcc57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorter&lt;/code&gt; provides the basis for sorting and filtering. Beyond creating and installing a &lt;code&gt;RowSorter&lt;/code&gt;, you very rarely need to interact with one directly. Refer to &lt;a href=&quot;table/tablerowsorter&quot;&gt;&lt;code&gt;TableRowSorter&lt;/code&gt;&lt;/a&gt; for a concrete implementation of &lt;code&gt;RowSorter&lt;/code&gt; for &lt;code&gt;JTable&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RowSorter&lt;/code&gt; provides the basis for sorting and filtering. Beyond creating and installing a &lt;code&gt;RowSorter&lt;/code&gt; , you very rarely need to interact with one directly. Refer to &lt;a href=&quot;table/tablerowsorter&quot;&gt; &lt;code&gt;TableRowSorter&lt;/code&gt; &lt;/a&gt; for a concrete implementation of &lt;code&gt;RowSorter&lt;/code&gt; for &lt;code&gt;JTable&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="db818f86fe7f0686c4451718d966191a1373bb41" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorter&lt;/code&gt;'s primary role is to provide a mapping between two coordinate systems: that of the view (for example a &lt;code&gt;JTable&lt;/code&gt;) and that of the underlying data source, typically a model.</source>
          <target state="translated">&lt;code&gt;RowSorter&lt;/code&gt; 's primary role is to provide a mapping between two coordinate systems: that of the view (for example a &lt;code&gt;JTable&lt;/code&gt; ) and that of the underlying data source, typically a model.</target>
        </trans-unit>
        <trans-unit id="b8f8a1e97f3f4066ed71031f59df29b426956d2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterEvent.Type.SORTED&lt;/code&gt; &amp;mdash; notifies listeners that the mapping maintained by the &lt;code&gt;RowSorter&lt;/code&gt; has changed in some way.</source>
          <target state="translated">&lt;code&gt;RowSorterEvent.Type.SORTED&lt;/code&gt; &amp;mdash; notifies listeners that the mapping maintained by the &lt;code&gt;RowSorter&lt;/code&gt; has changed in some way.</target>
        </trans-unit>
        <trans-unit id="9f504c4d653176c0e43badac606389ab84a8bdb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterEvent.Type.SORT_ORDER_CHANGED&lt;/code&gt; &amp;mdash; notifies listeners that the sort order has changed. This is typically followed by a notification that the sort has changed.</source>
          <target state="translated">&lt;code&gt;RowSorterEvent.Type.SORT_ORDER_CHANGED&lt;/code&gt; &amp;mdash; notifies listeners that the sort order has changed. This is typically followed by a notification that the sort has changed.</target>
        </trans-unit>
        <trans-unit id="55ea85ba15fd90e0b02644c32317b957685b6952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterEvent&lt;/code&gt; provides notification of changes to a &lt;code&gt;RowSorter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RowSorterEvent&lt;/code&gt; provides notification of changes to a &lt;code&gt;RowSorter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="86e5506758545dc0f1ab2d607a1c53706cc9cb74" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterEvent&lt;/code&gt; provides notification of changes to a &lt;code&gt;RowSorter&lt;/code&gt;. Two types of notification are possible:</source>
          <target state="translated">&lt;code&gt;RowSorterEvent&lt;/code&gt; provides notification of changes to a &lt;code&gt;RowSorter&lt;/code&gt; . Two types of notification are possible:</target>
        </trans-unit>
        <trans-unit id="45061a9ac389f705c96fdc1e4deed6c56d6ca0b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterListener&lt;/code&gt; notification that the &lt;code&gt;RowSorter&lt;/code&gt; has changed in some way.</source>
          <target state="translated">&lt;code&gt;RowSorterListener&lt;/code&gt; notification that the &lt;code&gt;RowSorter&lt;/code&gt; has changed in some way.</target>
        </trans-unit>
        <trans-unit id="3828badaa4cdbafd77514b7d80b2e45ab1745819" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RowSorterListener&lt;/code&gt;s are notified of changes to a &lt;code&gt;RowSorter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;RowSorterListener&lt;/code&gt; s are notified of changes to a &lt;code&gt;RowSorter&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="386e45f1522a57e8d24fa65f7237c39a4cd48149" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuleBasedCollator&lt;/code&gt; automatically processes its rule table to include both pre-composed and combining-character versions of accented characters. Even if the provided rule string contains only base characters and separate combining accent characters, the pre-composed accented characters matching all canonical combinations of characters from the rule string will be entered in the table.</source>
          <target state="translated">&lt;code&gt;RuleBasedCollator&lt;/code&gt; 는 자동으로 규칙 테이블을 처리하여 악센트 문자의 사전 구성 및 결합 문자 버전을 모두 포함합니다. 제공된 규칙 문자열에 기본 문자와 별도의 결합 악센트 문자 만 포함되어 있어도 규칙 문자열의 모든 표준 조합 문자와 일치하는 미리 작성된 악센트 문자가 테이블에 입력됩니다.</target>
        </trans-unit>
        <trans-unit id="b5ca2151532edc56020ec873d9966225698866fc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuleBasedCollator&lt;/code&gt; has the following restrictions for efficiency (other subclasses may be used for more complex languages) :</source>
          <target state="translated">&lt;code&gt;RuleBasedCollator&lt;/code&gt; 에는 효율성에 대한 다음 제한 사항이 있습니다 (다른 서브 클래스는 더 복잡한 언어에 사용될 수 있음).</target>
        </trans-unit>
        <trans-unit id="aed8291a7ad5e60c2d511c9d7c2bc1c5e9514b8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuntimeException&lt;/code&gt; and its subclasses are &lt;em&gt;unchecked exceptions&lt;/em&gt;. Unchecked exceptions do &lt;em&gt;not&lt;/em&gt; need to be declared in a method or constructor's &lt;code&gt;throws&lt;/code&gt; clause if they can be thrown by the execution of the method or constructor and propagate outside the method or constructor boundary.</source>
          <target state="translated">&lt;code&gt;RuntimeException&lt;/code&gt; 및 그 서브 클래스는 &lt;em&gt;미확인의 예외&lt;/em&gt; 입니다. 확인되지 않은 예외는 메소드 또는 생성자의 실행에 의해 발생하고 메소드 또는 생성자 경계 외부로 전파 될 수있는 경우 메소드 또는 생성자의 &lt;code&gt;throws&lt;/code&gt; 절 에서 선언 될 필요 가 &lt;em&gt;없습니다&lt;/em&gt; .</target>
        </trans-unit>
        <trans-unit id="ee89d7519d663a3f64bd7e4162d4413889ee0d23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;RuntimeException&lt;/code&gt; is the superclass of those exceptions that can be thrown during the normal operation of the Java Virtual Machine.</source>
          <target state="translated">&lt;code&gt;RuntimeException&lt;/code&gt; 은 Java Virtual Machine의 정상적인 작동 중에 발생할 수있는 예외의 수퍼 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="fa2ba50f3b3f6212cb9e965aa1c39a14f6c55abb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - The service type</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - The service type</target>
        </trans-unit>
        <trans-unit id="607167fa6edcd61a86ed92347a5f708ed5ce5f90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - The type of the service to be loaded by this loader</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - 이 로더가로드 할 서비스의 유형</target>
        </trans-unit>
        <trans-unit id="aa7614aaa5d4f31668a529139146e6102c7b4f33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the class of the service type</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - 서비스 유형의 클래스</target>
        </trans-unit>
        <trans-unit id="b456f70b973c54cd2560b6686e7a22c746d10e90" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the service class</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - the service class</target>
        </trans-unit>
        <trans-unit id="927b65107d7f9a534c7cdbd3229a37c2f62bcca7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of of the stream implementing &lt;code&gt;BaseStream&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - &lt;code&gt;BaseStream&lt;/code&gt; 을 구현하는 스트림 유형</target>
        </trans-unit>
        <trans-unit id="548414ab1abf4affd37801c91b1896419aba2800" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of source object used by this diagnostic</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - 이 진단에서 사용하는 소스 객체의 유형</target>
        </trans-unit>
        <trans-unit id="923b305de01acd1b3e85477885db89643548d938" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of source objects used by diagnostics received by this listener</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - 이 청취자가 수신 한 진단에 의해 사용되는 소스 객체의 타입</target>
        </trans-unit>
        <trans-unit id="3f2104735ab5900bc917a3c463944fa7a95f51e5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of source objects used by diagnostics received by this object</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - 이 객체가 수신 한 진단에 사용되는 소스 객체의 유형</target>
        </trans-unit>
        <trans-unit id="e76302bbafeacbd22b0dda6b5b6514a1a75a10fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of the Subscriber</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - the type of the Subscriber</target>
        </trans-unit>
        <trans-unit id="10a980d8f23cdd89adb02637640b16ac5ed158f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of the stream implementing &lt;code&gt;BaseStream&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - the type of the stream implementing &lt;code&gt;BaseStream&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ca0fc77f39061845f23b81c1416f2d8b6edb4a38" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;S&lt;/code&gt; - the type of the thread local's value</source>
          <target state="translated">&lt;code&gt;S&lt;/code&gt; - 스레드 로컬 값의 유형</target>
        </trans-unit>
        <trans-unit id="5a936b609567701f674df21513fe38d96d018bc7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SAXParser&lt;/code&gt; is reset to the same state as when it was created with &lt;a href=&quot;saxparserfactory#newSAXParser()&quot;&gt;&lt;code&gt;SAXParserFactory.newSAXParser()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;reset()&lt;/code&gt; is designed to allow the reuse of existing &lt;code&gt;SAXParser&lt;/code&gt;s thus saving resources associated with the creation of new &lt;code&gt;SAXParser&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SAXParser&lt;/code&gt; is reset to the same state as when it was created with &lt;a href=&quot;saxparserfactory#newSAXParser()&quot;&gt; &lt;code&gt;SAXParserFactory.newSAXParser()&lt;/code&gt; &lt;/a&gt;. &lt;code&gt;reset()&lt;/code&gt; is designed to allow the reuse of existing &lt;code&gt;SAXParser&lt;/code&gt; s thus saving resources associated with the creation of new &lt;code&gt;SAXParser&lt;/code&gt; s.</target>
        </trans-unit>
        <trans-unit id="f27f6467b7b3911aebccb5f1ecc6dd64a3a6d2c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCROLLBARS_BOTH&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;SCROLLBARS_BOTH&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="92bc058aa5512a5acc8b9fe578de2b07fd794e68" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCROLLBARS_HORIZONTAL_ONLY&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;SCROLLBARS_HORIZONTAL_ONLY&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="47c2269c028775e7b57c9959022e7c0cd0de20c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCROLLBARS_NONE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SCROLLBARS_NONE&lt;/code&gt;.</target>
        </trans-unit>
        <trans-unit id="a3169927a13b8ae78e660803e302207f5475c1c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SCROLLBARS_VERTICAL_ONLY&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;SCROLLBARS_VERTICAL_ONLY&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="083db2bc433e705fdbdc2302b4fd77c5cf1db1e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECONDS&lt;/code&gt; - Returns a &lt;code&gt;Instant&lt;/code&gt; with the specified number of seconds added. This is equivalent to &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SECONDS&lt;/code&gt; - 지정된 시간 (초)이 추가 된 &lt;code&gt;Instant&lt;/code&gt; 을 반환합니다 . 이것은 &lt;a href=&quot;instant#plusSeconds-long-&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="8daa819d4664a473d84d152122968917b7078334" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECONDS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of seconds added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SECONDS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of seconds added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="da8c097475c769ccd39c187184fe7a13eec9caa1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECONDS&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified number of seconds added. This is equivalent to &lt;a href=&quot;localtime#plusSeconds-long-&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SECONDS&lt;/code&gt; - 반환 &lt;code&gt;LocalTime&lt;/code&gt; 추가 지정된 시간 (초)에 있습니다. 이것은 &lt;a href=&quot;localtime#plusSeconds-long-&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="2a9f10907263955203ea7c5a553c4ed004b8cde3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECONDS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of seconds added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt;&lt;code&gt;plusSeconds(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SECONDS&lt;/code&gt; - Returns an &lt;code&gt;Instant&lt;/code&gt; with the specified number of seconds added. This is equivalent to &lt;a href=&quot;#plusSeconds(long)&quot;&gt; &lt;code&gt;plusSeconds(long)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="7034306b5bc65e85fe377cb02c4fd3599a6a8bdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECOND_OF_DAY&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified second-of-day. The nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;SECOND_OF_DAY&lt;/code&gt; - 지정된 요일이 있는 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 나노초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6842382cc3006eb68d8b59c27b0f511e0e9fb383" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; - Returns a &lt;code&gt;LocalTime&lt;/code&gt; with the specified second-of-minute. The hour, minute and nano-of-second will be unchanged.</source>
          <target state="translated">&lt;code&gt;SECOND_OF_MINUTE&lt;/code&gt; - 지정된 분 단위의 &lt;code&gt;LocalTime&lt;/code&gt; 을 반환합니다 . 시, 분 및 나노초는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="ab6a7728328b9be64727231fc085295cecab0b7d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with its own specified binding.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with its own specified binding.</target>
        </trans-unit>
        <trans-unit id="4ab9f055d4326082fe06c53eee2c0cf10701caf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with the specified binding.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with the specified binding.</target>
        </trans-unit>
        <trans-unit id="6347cd0491acb8347236f100472700863890005e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- For each separate input doc, its own specified page ranges will be printed.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- For each separate input doc, its own specified page ranges will be printed.</target>
        </trans-unit>
        <trans-unit id="ccf283f83435567d18ec74050bd29449c6deb5b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- For each separate input doc, the specified page ranges will be printed.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- For each separate input doc, the specified page ranges will be printed.</target>
        </trans-unit>
        <trans-unit id="9beda333d4a836f62192f3e0f6a2e6643e5da185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media impression will consist of</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media impression will consist of</target>
        </trans-unit>
        <trans-unit id="a93e331637f6fd9bd3256f375b9f510a887ff2af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media sheet will consist of</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media sheet will consist of</target>
        </trans-unit>
        <trans-unit id="f49da7ed0a139da1b3fad1754c030eee7f46f759" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. For input doc</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. For input doc</target>
        </trans-unit>
        <trans-unit id="8b55e046de6824337553dda006227aecb2651efa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The result will be the first input document, the second input document, . . . the last input document, the group of documents being repeated</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; -- The result will be the first input document, the second input document, . . . the last input document, the group of documents being repeated</target>
        </trans-unit>
        <trans-unit id="a6d5354f4169de474e66ec2ec5b2be74d114b9e3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with its own specified binding.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with its own specified binding.</target>
        </trans-unit>
        <trans-unit id="fb9b7c8d7450f822cfc2b40569db13a0e4001f08" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with the specified binding.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- Each input doc will be bound separately with the specified binding.</target>
        </trans-unit>
        <trans-unit id="1cd2f03eb02556539762d77ade16a2db8b82fc7f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- For each separate input doc, its own specified page ranges will be printed.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- For each separate input doc, its own specified page ranges will be printed.</target>
        </trans-unit>
        <trans-unit id="f7d1c776009c54c4959cf568c548bc24270781f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- For each separate input doc, the specified page ranges will be printed.</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- For each separate input doc, the specified page ranges will be printed.</target>
        </trans-unit>
        <trans-unit id="6f121433c698e8ff2fe2ad8a4e153959a0ec0997" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media impression will consist of</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media impression will consist of</target>
        </trans-unit>
        <trans-unit id="8e0810edae4d87f2e7d2c1d211d38b1c4655612c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media sheet will consist of</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. Each media sheet will consist of</target>
        </trans-unit>
        <trans-unit id="2587d4f86db5bdeaddd06c692c256e7332e525a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. For input doc</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The input docs will remain separate. For input doc</target>
        </trans-unit>
        <trans-unit id="210594f2cd002c755cc021facd147c1df9f8ae40" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The result will be</source>
          <target state="translated">&lt;code&gt;SEPARATE_DOCUMENTS_UNCOLLATED_COPIES&lt;/code&gt; -- The result will be</target>
        </trans-unit>
        <trans-unit id="a5748cd343f6cdf345d9cff9449b2a51d598ea4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SHIFT-TAB&lt;/code&gt; on &lt;code&gt;KEY_PRESSED&lt;/code&gt;, &lt;code&gt;CTRL-SHIFT-TAB&lt;/code&gt; on &lt;code&gt;KEY_PRESSED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SHIFT-TAB&lt;/code&gt; on &lt;code&gt;KEY_PRESSED&lt;/code&gt; , &lt;code&gt;CTRL-SHIFT-TAB&lt;/code&gt; on &lt;code&gt;KEY_PRESSED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="26950784cf000632a2bbcff7001eed528ba0fe51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be bound together as one output document with the specified binding.</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be bound together as one output document with the specified binding.</target>
        </trans-unit>
        <trans-unit id="48b4d0f440d9a4632ee4e1ab6c1d1ca2f3a4ef05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media impression will consist of</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media impression will consist of</target>
        </trans-unit>
        <trans-unit id="c680e0fba084cf66acab19081ed0dc5bb1779eb1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media sheet will consist of</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media sheet will consist of</target>
        </trans-unit>
        <trans-unit id="de8fee43c483a13dd9c4f9dd4a0f495579009952" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be combined together into one output document. The specified page ranges of that output document will be printed.</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- All the input docs will be combined together into one output document. The specified page ranges of that output document will be printed.</target>
        </trans-unit>
        <trans-unit id="f3f31b4bdc3174848c8e179b65054503546b9a4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- The result will be</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; -- The result will be</target>
        </trans-unit>
        <trans-unit id="3b26c8e40fea57b0d38ed587c63d23997b4ccf5c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; is the same as &lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; with respect to ordering of print-stream pages, but not media sheet generation, since &lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; will put the first page of the next document on the back side of a sheet if an odd number of pages have been produced so far for the job, while &lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; always forces the next document or document copy on to a new sheet.</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; is the same as &lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; with respect to ordering of print-stream pages, but not media sheet generation, since &lt;code&gt;SINGLE_DOCUMENT&lt;/code&gt; will put the first page of the next document on the back side of a sheet if an odd number of pages have been produced so far for the job, while &lt;code&gt;SEPARATE_DOCUMENTS_COLLATED_COPIES&lt;/code&gt; always forces the next document or document copy on to a new sheet.</target>
        </trans-unit>
        <trans-unit id="0927f05eef173a899f75065bebef4a7132163637" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be bound together as one output document with the specified binding, and the first impression of each input doc will always start on a new media sheet.</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be bound together as one output document with the specified binding, and the first impression of each input doc will always start on a new media sheet.</target>
        </trans-unit>
        <trans-unit id="0931ecdef69e8e5bd3af0cad3d9ff0ef67e6283a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be combined together into one output document, and the first impression of each input doc will always start on a new media sheet. The specified page ranges of that output document will be printed.</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be combined together into one output document, and the first impression of each input doc will always start on a new media sheet. The specified page ranges of that output document will be printed.</target>
        </trans-unit>
        <trans-unit id="5b9ed75db8c5da2a8b35d314b80be3505c2b57ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media impression will consist of</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media impression will consist of</target>
        </trans-unit>
        <trans-unit id="fabb1b8ef5e998d853356a02979098fd6094277f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media sheet will consist of</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- All the input docs will be combined together into one output document. Each media sheet will consist of</target>
        </trans-unit>
        <trans-unit id="d9338cdd4e544485897b042b4bf2ef15c7fa4e5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- The result will be</source>
          <target state="translated">&lt;code&gt;SINGLE_DOCUMENT_NEW_SHEET&lt;/code&gt; -- The result will be</target>
        </trans-unit>
        <trans-unit id="f3cbbad3b7929587ebfb11751f16a3791b2a765c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SNIMatcher&lt;/code&gt; objects are immutable. Subclasses should not provide methods that can change the state of an instance once it has been created.</source>
          <target state="translated">&lt;code&gt;SNIMatcher&lt;/code&gt; 객체는 변경할 수 없습니다. 서브 클래스는 생성 된 인스턴스의 상태를 변경할 수있는 메소드를 제공해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="12bf6f9be7c1428c486b2da202c2c67d5c1852f5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SNIServerName&lt;/code&gt; objects are immutable. Subclasses should not provide methods that can change the state of an instance once it has been created.</source>
          <target state="translated">&lt;code&gt;SNIServerName&lt;/code&gt; 오브젝트는 변경할 수 없습니다. 서브 클래스는 생성 된 인스턴스의 상태를 변경할 수있는 메소드를 제공해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="a10380367af0114ace1aac4951a2770e8534310f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLData&lt;/code&gt; interface -- specifies the mapping of a UDT to an instance of this class</source>
          <target state="translated">&lt;code&gt;SQLData&lt;/code&gt; 인터페이스-이 클래스의 인스턴스에 대한 UDT 매핑을 지정합니다.</target>
        </trans-unit>
        <trans-unit id="2b7155e66a20ff83c051a18fac2935325e3abaa7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLException&lt;/code&gt; -- thrown by most methods when there is a problem accessing data and by some methods for other reasons</source>
          <target state="translated">&lt;code&gt;SQLException&lt;/code&gt; - 데이터 액세스에 문제가있을 때 대부분의 메서드에서 발생하고 다른 이유로 인해 일부 메서드에서 발생</target>
        </trans-unit>
        <trans-unit id="85f7ee54affd1251e2412911fc8d6b52ac71b1de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLInput&lt;/code&gt; interface -- provides methods for reading UDT attributes from a stream</source>
          <target state="translated">&lt;code&gt;SQLInput&lt;/code&gt; 인터페이스-스트림에서 UDT 속성을 읽는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="d4cb807b69d5277300f5667d62d674001a729cef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLOutput&lt;/code&gt; interface -- provides methods for writing UDT attributes back to a stream</source>
          <target state="translated">&lt;code&gt;SQLOutput&lt;/code&gt; 인터페이스-UDT 속성을 스트림에 다시 쓰는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="09efcbdf7586109e577d7fad691ee5bd1a6f6a5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLPermission&lt;/code&gt; class -- provides permission when code running within a Security Manager, such as an applet, attempts to set up a logging stream through the &lt;code&gt;DriverManager&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SQLPermission&lt;/code&gt; 클래스-애플릿과 같은 보안 관리자 내에서 실행되는 코드가 &lt;code&gt;DriverManager&lt;/code&gt; 를 통해 로깅 스트림을 설정하려고 할 때 권한을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="0bdb5b8e6def6cb0fcf4bd36bd5d471b39015774" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLState&lt;/code&gt; - an XOPEN code identifying the warning; if a non standard XOPEN</source>
          <target state="translated">&lt;code&gt;SQLState&lt;/code&gt; - 경고를 식별하는 XOPEN 코드. 비표준 XOPEN 인 경우</target>
        </trans-unit>
        <trans-unit id="8da05d2d7563c425db843a8204e1b1ff0d74e2fd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLState&lt;/code&gt; - an XOPEN or SQL:2003 code identifying the exception</source>
          <target state="translated">&lt;code&gt;SQLState&lt;/code&gt; - 예외를 식별하는 XOPEN 또는 SQL : 2003 코드</target>
        </trans-unit>
        <trans-unit id="a147eab74994e05107b5fe8882f54d43d9f00aca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLState&lt;/code&gt; - an XOPEN or SQL:2003 code identifying the warning</source>
          <target state="translated">&lt;code&gt;SQLState&lt;/code&gt; - 경고를 식별하는 XOPEN 또는 SQL : 2003 코드</target>
        </trans-unit>
        <trans-unit id="ddfd7f3af12152280ead5a5d8a5fa085b5cb540a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLType&lt;/code&gt; - the column's SQL type</source>
          <target state="translated">&lt;code&gt;SQLType&lt;/code&gt; - 열의 SQL 유형</target>
        </trans-unit>
        <trans-unit id="d0bf228575646ed283a6e706d05753a737448583" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLType&lt;/code&gt; - the designated column's SQL type, which must be one of the constants in the class &lt;code&gt;java.sql.Types&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SQLType&lt;/code&gt; - 지정된 열의 SQL 유형. &lt;code&gt;java.sql.Types&lt;/code&gt; 클래스의 상수 중 하나 여야합니다.</target>
        </trans-unit>
        <trans-unit id="b034a56720b573ab6b1faf386635a56eba8baaaf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLWarning&lt;/code&gt; -- thrown to indicate a warning</source>
          <target state="translated">&lt;code&gt;SQLWarning&lt;/code&gt; - 경고를 나타 내기 위해 발생</target>
        </trans-unit>
        <trans-unit id="632c8c3c9e45befc0bcba234f66777737fadab06" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SQLXML&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;XML&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SQLXML&lt;/code&gt; 인터페이스-SQL &lt;code&gt;XML&lt;/code&gt; 매핑</target>
        </trans-unit>
        <trans-unit id="f6ff64a6c409ff2f4d27d351ef9a48df78196a84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLEngine&lt;/code&gt; application data buffers must be large enough to hold the application data from any inbound network application data packet received. Typically, outbound application data buffers can be of any size.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 애플리케이션 데이터 버퍼는 수신 된 인바운드 네트워크 애플리케이션 데이터 패킷의 애플리케이션 데이터를 보유 할 수있을 정도로 커야합니다. 일반적으로 아웃 바운드 응용 프로그램 데이터 버퍼는 임의의 크기 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="52b5f6df8a8bd32a9beddeb5913cb0fa3f281bb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLEngine&lt;/code&gt; implementations may use the &lt;code&gt;peerHost&lt;/code&gt; and &lt;code&gt;peerPort&lt;/code&gt; parameters as hints for their internal session reuse strategy.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 구현은 사용할 수 &lt;code&gt;peerHost&lt;/code&gt; 와 &lt;code&gt;peerPort&lt;/code&gt; 을 내부 세션의 재사용에 관한 힌트 같은 파라미터.</target>
        </trans-unit>
        <trans-unit id="4cb4bc4aa36ce9c29b5969f549ad3158ac08d8d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLEngine&lt;/code&gt; operations may require the results of operations that block, or may take an extended period of time to complete. This method is used to obtain an outstanding &lt;a href=&quot;../../../java/lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; operation (task). Each task must be assigned a thread (possibly the current) to perform the &lt;a href=&quot;../../../java/lang/runnable#run()&quot;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt; operation. Once the &lt;code&gt;run&lt;/code&gt; method returns, the &lt;code&gt;Runnable&lt;/code&gt; object is no longer needed and may be discarded.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 작업은 차단 된 작업의 결과를 요구하거나 완료하는 데 오랜 시간이 걸릴 수 있습니다. 이 방법은 뛰어난 &lt;a href=&quot;../../../java/lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt; 작업 (작업) 을 얻는 데 사용됩니다 . &lt;a href=&quot;../../../java/lang/runnable#run()&quot;&gt; &lt;code&gt;run&lt;/code&gt; &lt;/a&gt; 작업 을 수행하려면 각 작업에 스레드 (현재 작업)가 할당되어야합니다 . &lt;code&gt;run&lt;/code&gt; 메서드가 반환 되면 &lt;code&gt;Runnable&lt;/code&gt; 개체는 더 이상 필요하지 않으며 버릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e124743cbfae1376018f7988b134ed5eadc09910" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLEngine&lt;/code&gt; operations may require the results of operations that block, or may take an extended period of time to complete. This method is used to obtain an outstanding &lt;a href=&quot;../../../java/lang/runnable&quot;&gt;&lt;code&gt;Runnable&lt;/code&gt;&lt;/a&gt; operation (task). Each task must be assigned a thread (possibly the current) to perform the &lt;a href=&quot;../../../java/lang/runnable#run--&quot;&gt;&lt;code&gt;run&lt;/code&gt;&lt;/a&gt; operation. Once the &lt;code&gt;run&lt;/code&gt; method returns, the &lt;code&gt;Runnable&lt;/code&gt; object is no longer needed and may be discarded.</source>
          <target state="translated">&lt;code&gt;SSLEngine&lt;/code&gt; 조작은 차단하는 조작 결과가 필요할 수 있거나 완료하는 데 오랜 시간이 걸릴 수 있습니다. 이 방법은 뛰어난 &lt;a href=&quot;../../../java/lang/runnable&quot;&gt; &lt;code&gt;Runnable&lt;/code&gt; &lt;/a&gt; 작업 (작업) 을 얻는 데 사용됩니다 . &lt;a href=&quot;../../../java/lang/runnable#run--&quot;&gt; &lt;code&gt;run&lt;/code&gt; &lt;/a&gt; 작업 을 수행하려면 각 작업에 스레드 (현재)가 할당되어 있어야합니다 . &lt;code&gt;run&lt;/code&gt; 메소드가 리턴 되면 &lt;code&gt;Runnable&lt;/code&gt; 오브젝트가 더 이상 필요하지 않으므로 버릴 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e32ee651bece7ee367ccb4b46f18627e0d3f5ca9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLServerSocket&lt;/code&gt;s contain several pieces of state data which are inherited by the &lt;code&gt;SSLSocket&lt;/code&gt; at socket creation. These include the enabled cipher suites and protocols, whether client authentication is necessary, and whether created sockets should begin handshaking in client or server mode. The state inherited by the created &lt;code&gt;SSLSocket&lt;/code&gt; can be overriden by calling the appropriate methods.</source>
          <target state="translated">&lt;code&gt;SSLServerSocket&lt;/code&gt; 은 소켓 작성시 &lt;code&gt;SSLSocket&lt;/code&gt; 에 의해 상속되는 여러 상태 데이터 조각을 포함합니다 . 여기에는 활성화 된 암호 제품군 및 프로토콜, 클라이언트 인증이 필요한지 여부 및 생성 된 소켓이 클라이언트 또는 서버 모드에서 핸드 셰이 킹을 시작할지 여부가 포함됩니다. 작성된 &lt;code&gt;SSLSocket&lt;/code&gt; 에 의해 상속 된 상태 는 적절한 메소드를 호출하여 대체 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2857607296e17100bc99874e4f9e9d9ba422abc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLServerSocketFactory&lt;/code&gt;s create &lt;code&gt;SSLServerSocket&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SSLServerSocketFactory&lt;/code&gt; 의 작성 &lt;code&gt;SSLServerSocket&lt;/code&gt; 에 의.</target>
        </trans-unit>
        <trans-unit id="95a5d586a821b29834bc1c2e75c552ba7da26391" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLSocket&lt;/code&gt;s returned from &lt;code&gt;accept()&lt;/code&gt; inherit this setting.</source>
          <target state="translated">&lt;code&gt;SSLSocket&lt;/code&gt; &lt;code&gt;accept()&lt;/code&gt; 에서 리턴 된 SSLSocket 은이 설정을 상속합니다.</target>
        </trans-unit>
        <trans-unit id="3a920b9ddb24cfbe3c3e189e7152a5b3d3902d64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SSLSocketFactory&lt;/code&gt;s create &lt;code&gt;SSLSocket&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SSLSocketFactory&lt;/code&gt; 의 생성 &lt;code&gt;SSLSocket&lt;/code&gt; 의.</target>
        </trans-unit>
        <trans-unit id="0549f5b4b7d9ff54466b0305b66f6a06cc439939" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SUPERSCRIPT&lt;/code&gt; can impact the ascent and descent of a font. The ascent and descent can never become negative, however.</source>
          <target state="translated">&lt;code&gt;SUPERSCRIPT&lt;/code&gt; 는 글꼴의 상승 및 하강에 영향을 줄 수 있습니다. 그러나 상승과 하강은 결코 음수가 될 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="1ef07b1494ed2bd5ac4802d53ef450a14cae38b5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SaslClientFactory.&lt;/code&gt;&lt;em&gt;&lt;code&gt;mechanism_name&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SaslClientFactory.&lt;/code&gt;&lt;em&gt;&lt;code&gt;mechanism_name&lt;/code&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="bb43c36b48a422fa0d1566e175d57a3ecde2286d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SaslServerFactory.&lt;/code&gt;&lt;em&gt;&lt;code&gt;mechanism_name&lt;/code&gt;&lt;/em&gt;</source>
          <target state="translated">&lt;code&gt;SaslServerFactory.&lt;/code&gt;&lt;em&gt;&lt;code&gt;mechanism_name&lt;/code&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="5415aad73aed2b0e551b3de1b6bc9accedf9e89d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Savepoint&lt;/code&gt; -- provides savepoints in a transaction</source>
          <target state="translated">&lt;code&gt;Savepoint&lt;/code&gt; - 트랜잭션의 세이브 포인트를 제공한다</target>
        </trans-unit>
        <trans-unit id="9fca6c6c59b1a6ea6962493157917a5c4eae5b05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptContext.ENGINE_SCOPE&lt;/code&gt; - The set of named values representing the state of this &lt;code&gt;ScriptEngine&lt;/code&gt;. The values are generally visible in scripts using the associated keys as variable names.</source>
          <target state="translated">&lt;code&gt;ScriptContext.ENGINE_SCOPE&lt;/code&gt; - 이 &lt;code&gt;ScriptEngine&lt;/code&gt; 상태를 나타내는 명명 된 값 세트입니다 . 일반적으로 값은 관련 키를 변수 이름으로 사용하여 스크립트에 표시됩니다.</target>
        </trans-unit>
        <trans-unit id="e118f3e4518f17cee7aadc6517dfbb89fb5ce521" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptContext.ENGINE_SCOPE&lt;/code&gt; - The specified &lt;code&gt;Bindings&lt;/code&gt; replaces the engine scope of the &lt;code&gt;ScriptEngine&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptContext.ENGINE_SCOPE&lt;/code&gt; - 지정된 &lt;code&gt;Bindings&lt;/code&gt; 이 &lt;code&gt;ScriptEngine&lt;/code&gt; 의 엔진 범위를 대체합니다 .</target>
        </trans-unit>
        <trans-unit id="166244d545ed7d8bfcf528a37381f43f7ff22f86" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptContext.GLOBAL_SCOPE&lt;/code&gt; - The set of named values representing global scope. If this &lt;code&gt;ScriptEngine&lt;/code&gt; is created by a &lt;code&gt;ScriptEngineManager&lt;/code&gt;, then the manager sets global scope bindings. This may be &lt;code&gt;null&lt;/code&gt; if no global scope is associated with this &lt;code&gt;ScriptEngine&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ScriptContext.GLOBAL_SCOPE&lt;/code&gt; - 전역 범위를 나타내는 명명 된 값 집합입니다. 이 경우 &lt;code&gt;ScriptEngine&lt;/code&gt; a로 만들어 &lt;code&gt;ScriptEngineManager&lt;/code&gt; 는 , 매니저는 글로벌 스코프 바인딩을 설정합니다. 이 &lt;code&gt;ScriptEngine&lt;/code&gt; 과 관련된 전역 범위가 없으면 &lt;code&gt;null&lt;/code&gt; 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="474e614bb8e94409fe202102a2daf20b4a3c29c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptContext.GLOBAL_SCOPE&lt;/code&gt; - The specified &lt;code&gt;Bindings&lt;/code&gt; must be visible as the &lt;code&gt;GLOBAL_SCOPE&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptContext.GLOBAL_SCOPE&lt;/code&gt; - 지정된 &lt;code&gt;Bindings&lt;/code&gt; 이 &lt;code&gt;GLOBAL_SCOPE&lt;/code&gt; 로 표시되어야합니다 .</target>
        </trans-unit>
        <trans-unit id="e8b358949ab228606096ee7355ef135a4ab3ef4c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptEngine&lt;/code&gt; is the fundamental interface whose methods must be fully functional in every implementation of this specification.</source>
          <target state="translated">&lt;code&gt;ScriptEngine&lt;/code&gt; 은이 사양의 모든 구현에서 메서드가 완벽하게 작동해야하는 기본 인터페이스입니다.</target>
        </trans-unit>
        <trans-unit id="ec19a99d3619511a11056d3247195323fe7f40bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptEngineFactory&lt;/code&gt; is used to describe and instantiate &lt;code&gt;ScriptEngines&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ScriptEngineFactory&lt;/code&gt; 에는 설명하고 인스턴스화를하는 데 사용됩니다 &lt;code&gt;ScriptEngines&lt;/code&gt; 에 .</target>
        </trans-unit>
        <trans-unit id="642a3ce02f0b38ed5fbcb81b5c3b8d38266c4320" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ScriptException&lt;/code&gt; constructor specifying message, filename, line number and column number.</source>
          <target state="translated">&lt;code&gt;ScriptException&lt;/code&gt; 메시지, 파일 이름, 줄 번호 및 열 번호를 지정하는 ScriptException 생성자</target>
        </trans-unit>
        <trans-unit id="75c266ed7cce5f778bb83ab49d48b6dad41999af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecureRandom&lt;/code&gt; objects are safe for use by multiple concurrent threads.</source>
          <target state="translated">&lt;code&gt;SecureRandom&lt;/code&gt; 개체는 여러 동시 스레드에서 사용하기에 안전합니다.</target>
        </trans-unit>
        <trans-unit id="9ceb0398a6944486fbe1ea4d23d0947ec6cc2714" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SecureRandom&lt;/code&gt; will call the applicable engine methods without any synchronization.</source>
          <target state="translated">&lt;code&gt;SecureRandom&lt;/code&gt; 은 동기화없이 적용 가능한 엔진 메서드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="2a82e5d1100f7738a7dfdea6f8b77faf3a473f1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SerialBlob&lt;/code&gt; methods make it possible to make a copy of a &lt;code&gt;SerialBlob&lt;/code&gt; object as an array of bytes or as a stream. They also make it possible to locate a given pattern of bytes or a &lt;code&gt;Blob&lt;/code&gt; object within a &lt;code&gt;SerialBlob&lt;/code&gt; object and to update or truncate a &lt;code&gt;Blob&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;SerialBlob&lt;/code&gt; 메서드를 사용하면 &lt;code&gt;SerialBlob&lt;/code&gt; 개체 의 복사본 을 바이트 배열 또는 스트림으로 만들 수 있습니다. 그들은 또한 가능 지정된 바이트 패턴이나 찾을 수 있도록 &lt;code&gt;Blob&lt;/code&gt; 내에서 객체를 &lt;code&gt;SerialBlob&lt;/code&gt; 의 개체를 업데이트하거나 절단 &lt;code&gt;Blob&lt;/code&gt; 객체.</target>
        </trans-unit>
        <trans-unit id="74419653c1f40ff91cfe62d1189834d049f6a220" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SerialBlob&lt;/code&gt; methods make it possible to make a copy of a &lt;code&gt;SerialBlob&lt;/code&gt; object as an array of bytes or as a stream. They also make it possible to locate a given pattern of bytes or a &lt;code&gt;Blob&lt;/code&gt; object within a &lt;code&gt;SerialBlob&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;SerialBlob&lt;/code&gt; 메서드를 사용하면 &lt;code&gt;SerialBlob&lt;/code&gt; 개체 의 복사본 을 바이트 배열 또는 스트림으로 만들 수 있습니다. 또한 &lt;code&gt;SerialBlob&lt;/code&gt; 개체 내에서 지정된 바이트 패턴 또는 &lt;code&gt;Blob&lt;/code&gt; 개체 를 찾을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9fc439651f33039d5a719055108c01235fcfc2b2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SerialClob&lt;/code&gt; methods make it possible to get a substring from a &lt;code&gt;SerialClob&lt;/code&gt; object or to locate the start of a pattern of characters.</source>
          <target state="translated">&lt;code&gt;SerialClob&lt;/code&gt; 메서드를 사용하면 &lt;code&gt;SerialClob&lt;/code&gt; 개체 에서 하위 문자열을 가져 오거나 문자 패턴의 시작 위치를 찾을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="11aef03e8b2e55e04fb03b654f6005371127ed30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SerializedLambda&lt;/code&gt; has a &lt;code&gt;readResolve&lt;/code&gt; method that looks for a (possibly private) static method called &lt;code&gt;$deserializeLambda$(SerializedLambda)&lt;/code&gt; in the capturing class, invokes that with itself as the first argument, and returns the result. Lambda classes implementing &lt;code&gt;$deserializeLambda$&lt;/code&gt; are responsible for validating that the properties of the &lt;code&gt;SerializedLambda&lt;/code&gt; are consistent with a lambda actually captured by that class.</source>
          <target state="translated">&lt;code&gt;SerializedLambda&lt;/code&gt; 에는 캡처 클래스에서 &lt;code&gt;$deserializeLambda$(SerializedLambda)&lt;/code&gt; 라는 (비공개) 정적 메서드를 찾고 &lt;code&gt;readResolve&lt;/code&gt; 메서드가있어 이를 첫 번째 인수로 사용하여 결과를 반환합니다. &lt;code&gt;$deserializeLambda$&lt;/code&gt; 구현하는 Lambda 클래스 는 &lt;code&gt;SerializedLambda&lt;/code&gt; 의 속성이 해당 클래스에서 실제로 캡처 한 람다와 일치하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="2e8a2a9f1c6675667be2c3609e26630eaad05e33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Set&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Set&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="2c3814ace93a00dd1c189266f962c46ceee25663" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleAttributeSet&lt;/code&gt; containing the attributes</source>
          <target state="translated">&lt;code&gt;SimpleAttributeSet&lt;/code&gt; 속성을 포함하는 SimpleAttributeSet</target>
        </trans-unit>
        <trans-unit id="b01d9ce1e35c15847c93cfb4f475071af6d3549f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleDateFormat&lt;/code&gt; allows you to start by choosing any user-defined patterns for date-time formatting. However, you are encouraged to create a date-time formatter with either &lt;code&gt;getTimeInstance&lt;/code&gt;, &lt;code&gt;getDateInstance&lt;/code&gt;, or &lt;code&gt;getDateTimeInstance&lt;/code&gt; in &lt;code&gt;DateFormat&lt;/code&gt;. Each of these class methods can return a date/time formatter initialized with a default format pattern. You may modify the format pattern using the &lt;code&gt;applyPattern&lt;/code&gt; methods as desired. For more information on using these methods, see &lt;a href=&quot;dateformat&quot;&gt;&lt;code&gt;DateFormat&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;SimpleDateFormat&lt;/code&gt; 을 사용하면 날짜-시간 형식에 대한 사용자 정의 패턴을 선택하여 시작할 수 있습니다. 그러나 &lt;code&gt;getTimeInstance&lt;/code&gt; , &lt;code&gt;getDateInstance&lt;/code&gt; 또는 &lt;code&gt;DateFormat&lt;/code&gt; 에서 &lt;code&gt;getDateTimeInstance&lt;/code&gt; 를 사용하여 날짜-시간 포맷터를 작성하는 것이 좋습니다 . 이러한 각 클래스 메소드는 기본 형식 패턴으로 초기화 된 날짜 / 시간 포맷터를 리턴 할 수 있습니다. 원하는대로 &lt;code&gt;applyPattern&lt;/code&gt; 메소드를 사용하여 형식 패턴을 수정할 수 있습니다 . 이러한 메서드 사용에 대한 자세한 내용은 &lt;a href=&quot;dateformat&quot;&gt; &lt;code&gt;DateFormat&lt;/code&gt; 을&lt;/a&gt; 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3e2d9b63de5c9f9c4dc26179609fceee4ae162a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleDateFormat&lt;/code&gt; also supports &lt;em&gt;localized date and time pattern&lt;/em&gt; strings. In these strings, the pattern letters described above may be replaced with other, locale dependent, pattern letters. &lt;code&gt;SimpleDateFormat&lt;/code&gt; does not deal with the localization of text other than the pattern letters; that's up to the client of the class.</source>
          <target state="translated">&lt;code&gt;SimpleDateFormat&lt;/code&gt; 은 &lt;em&gt;현지화 된 날짜 및 시간 패턴&lt;/em&gt; 문자열 도 지원합니다 . 이 문자열에서 위에서 설명한 패턴 문자는 다른 로케일 종속 패턴 문자로 대체 될 수 있습니다. &lt;code&gt;SimpleDateFormat&lt;/code&gt; 은 패턴 문자 이외의 텍스트 지역화를 처리하지 않습니다. 그것은 클래스의 클라이언트에 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="eee60a82249fad86b3f9c641534c50c42eef0c6b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleDateFormat&lt;/code&gt; is a concrete class for formatting and parsing dates in a locale-sensitive manner.</source>
          <target state="translated">&lt;code&gt;SimpleDateFormat&lt;/code&gt; 은 로케일 구분 방식으로 날짜를 형식화하고 구문 분석하기위한 구체적인 클래스입니다.</target>
        </trans-unit>
        <trans-unit id="095aeb3228774faa5db7939d6aba2e728fda82cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleDateFormat&lt;/code&gt; is a concrete class for formatting and parsing dates in a locale-sensitive manner. It allows for formatting (date &amp;rarr; text), parsing (text &amp;rarr; date), and normalization.</source>
          <target state="translated">&lt;code&gt;SimpleDateFormat&lt;/code&gt; 은 로케일 구분 방식으로 날짜를 형식화하고 구문 분석하기위한 구체적인 클래스입니다. 형식화 (날짜 &amp;rarr; 텍스트), 구문 분석 (텍스트 &amp;rarr; 날짜) 및 정규화가 가능합니다.</target>
        </trans-unit>
        <trans-unit id="3999b0fcea53cbfca5b6860f2e79adffedf9aeb4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleTimeZone&lt;/code&gt; is a concrete subclass of &lt;code&gt;TimeZone&lt;/code&gt; that represents a time zone for use with a Gregorian calendar.</source>
          <target state="translated">&lt;code&gt;SimpleTimeZone&lt;/code&gt; 은 Gregorian 달력과 함께 사용할 &lt;code&gt;TimeZone&lt;/code&gt; 를 나타내는 TimeZone 의 구체적인 하위 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="582a5d3ad210edcd948f728205b52043091f02c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleTimeZone&lt;/code&gt; is a concrete subclass of &lt;code&gt;TimeZone&lt;/code&gt; that represents a time zone for use with a Gregorian calendar. The class holds an offset from GMT, called &lt;em&gt;raw offset&lt;/em&gt;, and start and end rules for a daylight saving time schedule. Since it only holds single values for each, it cannot handle historical changes in the offset from GMT and the daylight saving schedule, except that the &lt;a href=&quot;#setStartYear(int)&quot;&gt;&lt;code&gt;setStartYear&lt;/code&gt;&lt;/a&gt; method can specify the year when the daylight saving time schedule starts in effect.</source>
          <target state="translated">&lt;code&gt;SimpleTimeZone&lt;/code&gt; 은 그레고리력과 함께 사용할 &lt;code&gt;TimeZone&lt;/code&gt; 를 나타내는 TimeZone 의 구체적인 하위 클래스입니다 . 클래스에는 &lt;em&gt;원시 오프셋&lt;/em&gt; 이라고하는 GMT의 오프셋 과 일광 절약 시간표에 대한 시작 및 종료 규칙이 있습니다. 각각에 대해 단일 값만 보유하므로 &lt;a href=&quot;#setStartYear(int)&quot;&gt; &lt;code&gt;setStartYear&lt;/code&gt; &lt;/a&gt; 메서드가 일광 절약 시간 일정이 적용되는 연도를 지정할 수 있다는 점을 제외하고는 GMT 오프셋 및 일광 절약 일정의 과거 변경 사항을 처리 할 수 ​​없습니다 .</target>
        </trans-unit>
        <trans-unit id="226a45adfe31c45f833557c019715ad02ab8ca9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleTimeZone&lt;/code&gt; is a concrete subclass of &lt;code&gt;TimeZone&lt;/code&gt; that represents a time zone for use with a Gregorian calendar. The class holds an offset from GMT, called &lt;em&gt;raw offset&lt;/em&gt;, and start and end rules for a daylight saving time schedule. Since it only holds single values for each, it cannot handle historical changes in the offset from GMT and the daylight saving schedule, except that the &lt;a href=&quot;simpletimezone#setStartYear-int-&quot;&gt;&lt;code&gt;setStartYear&lt;/code&gt;&lt;/a&gt; method can specify the year when the daylight saving time schedule starts in effect.</source>
          <target state="translated">&lt;code&gt;SimpleTimeZone&lt;/code&gt; 은 Gregorian 달력과 함께 사용할 &lt;code&gt;TimeZone&lt;/code&gt; 를 나타내는 TimeZone 의 구체적인 하위 클래스입니다 . 이 클래스는 &lt;em&gt;raw 오프셋&lt;/em&gt; 이라는 GMT의 오프셋 과 일광 절약 시간표의 시작 및 종료 규칙을 보유합니다. 각 값에 대해 단일 값만 보유하므로 &lt;a href=&quot;simpletimezone#setStartYear-int-&quot;&gt; &lt;code&gt;setStartYear&lt;/code&gt; &lt;/a&gt; 메소드가 일광 절약 시간제 스케줄이 시작되는 연도를 지정할 수 있다는 점을 제외하고 GMT 및 일광 절약 시간표의 오프셋에서 히스토리 변경 사항을 처리 할 수 ​​없습니다 .</target>
        </trans-unit>
        <trans-unit id="abba4a41eeae3163007a16e87e6b0405572fa2d2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleType.BOOLEAN&lt;/code&gt;, etc</source>
          <target state="translated">&lt;code&gt;SimpleType.BOOLEAN&lt;/code&gt; 등</target>
        </trans-unit>
        <trans-unit id="6aa5dfe01213bf072f10976c42910c732f519f72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SimpleType.INTEGER&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;SimpleType.INTEGER&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="a1987884fcdf95bdb93f7b3c08f2df127eb74ae1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Socket s = new Socket(Proxy.NO_PROXY);&lt;/code&gt; will create a plain socket ignoring any other proxy configuration.</source>
          <target state="translated">&lt;code&gt;Socket s = new Socket(Proxy.NO_PROXY);&lt;/code&gt; 다른 프록시 구성을 무시하고 일반 소켓을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="844a32d79478574daff7a859b0c6c5512155a1a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Socket s = new Socket(new Proxy(Proxy.Type.SOCKS, new InetSocketAddress(&quot;socks.mydom.com&quot;, 1080)));&lt;/code&gt; will create a socket connecting through the specified SOCKS proxy server.</source>
          <target state="translated">&lt;code&gt;Socket s = new Socket(new Proxy(Proxy.Type.SOCKS, new InetSocketAddress(&quot;socks.mydom.com&quot;, 1080)));&lt;/code&gt; 지정된 SOCKS 프록시 서버를 통해 연결하는 소켓을 작성합니다.</target>
        </trans-unit>
        <trans-unit id="a022cddd8f9c2721d5f1ffe4ca29c34995c4183a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SortedMap&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SortedMap&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f0ac90c4479b724b8cea60590d7ac28464fe6838" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SortedSet&amp;lt;&lt;/code&gt;&lt;em&gt;E&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; (see below)</source>
          <target state="translated">&lt;code&gt;SortedSet&amp;lt;&lt;/code&gt; &lt;em&gt;E &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; (아래 참조)</target>
        </trans-unit>
        <trans-unit id="10fef87c15836ea8ed0aa5b594adea95be454925" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Soundbank&lt;/code&gt; includes methods that return &lt;code&gt;String&lt;/code&gt; objects containing the sound bank's name, manufacturer, version number, and description. The precise content and format of these strings is left to the implementor.</source>
          <target state="translated">&lt;code&gt;Soundbank&lt;/code&gt; 에는 사운드 뱅크의 이름, 제조업체, 버전 번호 및 설명이 포함 된 &lt;code&gt;String&lt;/code&gt; 객체 를 반환하는 메서드가 포함되어 있습니다 . 이러한 문자열의 정확한 내용과 형식은 구현 자에게 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f15aba6026499e033d5684305223819fded0093" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Source&lt;/code&gt; / &lt;code&gt;Result&lt;/code&gt; Accepted</source>
          <target state="translated">&lt;code&gt;Source&lt;/code&gt; / &lt;code&gt;Result&lt;/code&gt; 승인</target>
        </trans-unit>
        <trans-unit id="db3ceaf3c4770bdebad4cbd65e7667ad6893277c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SpringLayout&lt;/code&gt; also provides a way to solve many of the difficult layout problems that cannot be solved by nesting combinations of &lt;code&gt;Box&lt;/code&gt;es. That said, &lt;code&gt;SpringLayout&lt;/code&gt; honors the &lt;code&gt;LayoutManager2&lt;/code&gt; contract correctly and so can be nested with other layout managers -- a technique that can be preferable to creating the constraints implied by the other layout managers.</source>
          <target state="translated">&lt;code&gt;SpringLayout&lt;/code&gt; 은 또한 &lt;code&gt;Box&lt;/code&gt; es의 중첩 조합으로 해결할 수없는 어려운 레이아웃 문제를 해결하는 방법을 제공합니다 . 즉, &lt;code&gt;SpringLayout&lt;/code&gt; 은 &lt;code&gt;LayoutManager2&lt;/code&gt; 계약을 올바르게 준수 하므로 다른 레이아웃 관리자와 중첩 될 수 있습니다.이 기술은 다른 레이아웃 관리자가 암시하는 제약 조건을 만드는 것보다 선호 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec91ed8f9123d61216804a6acde10441218f9889" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StAXSource&lt;/code&gt;s are consumed during processing and are not reusable.</source>
          <target state="translated">&lt;code&gt;StAXSource&lt;/code&gt; 는 처리 중에 사용되며 재사용 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="ea0b7335f020836736aa6dff2f652b1c0bff086a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StackTraceElement&lt;/code&gt; for this stack frame.</source>
          <target state="translated">&lt;code&gt;StackTraceElement&lt;/code&gt; 이 스택 프레임에 대한 StackTraceElement 입니다.</target>
        </trans-unit>
        <trans-unit id="8041bd6384dd3ecdb1e93b1a2a106bb847aeb068" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StackTraceElement&lt;/code&gt; that locked the object monitor, or &lt;code&gt;null&lt;/code&gt; if not available.</source>
          <target state="translated">&lt;code&gt;StackTraceElement&lt;/code&gt; 객체 모니터를 잠근 StackTraceElement . 사용할 수 &lt;code&gt;null&lt;/code&gt; 경우는 null</target>
        </trans-unit>
        <trans-unit id="29a2aa694d97d15db4eceb1116c8181fecb83ff9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StackWalker&lt;/code&gt; is thread-safe. Multiple threads can share a single &lt;code&gt;StackWalker&lt;/code&gt; object to traverse its own stack. A permission check is performed when a &lt;code&gt;StackWalker&lt;/code&gt; is created, according to the options it requests. No further permission check is done at stack walking time.</source>
          <target state="translated">&lt;code&gt;StackWalker&lt;/code&gt; 는 스레드로부터 안전합니다. 여러 스레드가 단일 &lt;code&gt;StackWalker&lt;/code&gt; 객체를 공유하여 자체 스택을 탐색 할 수 있습니다. 요청하는 옵션에 따라 &lt;code&gt;StackWalker&lt;/code&gt; 가 생성 될 때 권한 검사가 수행됩니다 . 스택 워킹 시간에는 추가 권한 검사가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1d6a1f969d0d5ebd472a51875d672053d4129edc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StartTlsRequest&lt;/code&gt;/&lt;code&gt;StartTlsResponse&lt;/code&gt; are used to establish a TLS connection over the existing LDAP connection associated with the JNDI context on which &lt;code&gt;extendedOperation()&lt;/code&gt; is invoked. Typically, a JNDI program uses these classes as follows.</source>
          <target state="translated">&lt;code&gt;StartTlsRequest&lt;/code&gt; / &lt;code&gt;StartTlsResponse&lt;/code&gt; 는 &lt;code&gt;extendedOperation()&lt;/code&gt; 이 호출 되는 JNDI 컨텍스트와 연관된 기존 LDAP 연결을 통해 TLS 연결을 설정하는 데 사용 됩니다. 일반적으로 JNDI 프로그램은 다음과 같이 이러한 클래스를 사용합니다.</target>
        </trans-unit>
        <trans-unit id="ef9f730de20dae7770242297e64e70f83abcd6ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StateFactory&lt;/code&gt; is intended for use with service providers that implement only the &lt;code&gt;Context&lt;/code&gt; interface. &lt;code&gt;DirStateFactory&lt;/code&gt; is intended for use with service providers that implement the &lt;code&gt;DirContext&lt;/code&gt; interface.</source>
          <target state="translated">&lt;code&gt;StateFactory&lt;/code&gt; 는 &lt;code&gt;Context&lt;/code&gt; 인터페이스 만 구현하는 서비스 제공자와 함께 사용하도록 설계되었습니다 . &lt;code&gt;DirStateFactory&lt;/code&gt; 는 &lt;code&gt;DirContext&lt;/code&gt; 인터페이스 를 구현하는 서비스 제공자와 함께 사용하기위한 것입니다 .</target>
        </trans-unit>
        <trans-unit id="129618728f6b3efccfa306aa06ad990999b3aa4f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Statement.EXECUTE_FAILED&lt;/code&gt; to indicate that the command failed to execute successfully</source>
          <target state="translated">&lt;code&gt;Statement.EXECUTE_FAILED&lt;/code&gt; - 명령 실행에 실패했음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="59506452a3f530aa4dfdbecfe44bad38215c7572" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Statement.SUCCESS_NO_INFO&lt;/code&gt; to indicate that the command executed successfully but the number of rows affected is unknown</source>
          <target state="translated">&lt;code&gt;Statement.SUCCESS_NO_INFO&lt;/code&gt; 는 명령이 성공적으로 실행되었지만 영향을받은 행 수를 알 수 없음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9e3ea72d63719f308a4865dc35ef821859cd95be" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Statement&lt;/code&gt; -- used to send basic SQL statements</source>
          <target state="translated">&lt;code&gt;Statement&lt;/code&gt; -기본 SQL 문을 보내는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="0a2666a6c024cb35ccf78992d06447056310480a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Stream.iterate&lt;/code&gt; should produce the same sequence of elements as produced by the corresponding for-loop:</source>
          <target state="translated">&lt;code&gt;Stream.iterate&lt;/code&gt; 는 해당 for 루프에서 생성 된 것과 동일한 요소 시퀀스를 생성해야합니다.</target>
        </trans-unit>
        <trans-unit id="83d3fb42133bff3d5aa29cddfe8b40c597c0ee1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; -- &lt;code&gt;String.class&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; - &lt;code&gt;String.class&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0a838b39decfb2294c0b8862c0f9fc0659f60422" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; -- The print data consists of the Unicode characters in the string.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; -인쇄 데이터는 문자열의 유니 코드 문자로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="e96e53f605a844ffcd002c2930bca38bba8f524f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; representation of this &lt;code&gt;QName&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 이 &lt;code&gt;QName&lt;/code&gt; 의 문자열 표현</target>
        </trans-unit>
        <trans-unit id="25b29359bc12a29ea3a6b38dbf0cbf432ae9e931" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; representation of this &lt;code&gt;QName&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 이 &lt;code&gt;QName&lt;/code&gt; 의 문자열 표현입니다 .</target>
        </trans-unit>
        <trans-unit id="104a0ccb552a1e7671deec21d6324d5564b5b36a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;String&lt;/code&gt; version of this two-dimensional size attribute</source>
          <target state="translated">&lt;code&gt;String&lt;/code&gt; 이 2 차원 크기 속성의 문자열 버전</target>
        </trans-unit>
        <trans-unit id="17d26d0e56342b14556b773585795dc7f60f72e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringBuffer&lt;/code&gt; implements &lt;code&gt;Comparable&lt;/code&gt; but does not override &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;. Thus, the natural ordering of &lt;code&gt;StringBuffer&lt;/code&gt; is inconsistent with equals. Care should be exercised if &lt;code&gt;StringBuffer&lt;/code&gt; objects are used as keys in a &lt;code&gt;SortedMap&lt;/code&gt; or elements in a &lt;code&gt;SortedSet&lt;/code&gt;. See &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../util/sortedmap&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../util/sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;StringBuffer&lt;/code&gt; 는 &lt;code&gt;Comparable&lt;/code&gt; 을 구현 하지만 &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 를&lt;/a&gt; 재정의하지 않습니다 . 따라서 &lt;code&gt;StringBuffer&lt;/code&gt; 의 자연스러운 순서는 같음과 일치하지 않습니다. &lt;code&gt;StringBuffer&lt;/code&gt; 객체가 &lt;code&gt;SortedMap&lt;/code&gt; 의 키 또는 &lt;code&gt;SortedSet&lt;/code&gt; 의 요소 로 사용되는 경우주의해야합니다 . 자세한 내용은 &lt;a href=&quot;comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../util/sortedmap&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../util/sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ce4ba99eb1531465f93022e15257d7af0a594df5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringBuilder&lt;/code&gt; implements &lt;code&gt;Comparable&lt;/code&gt; but does not override &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals&lt;/code&gt;&lt;/a&gt;. Thus, the natural ordering of &lt;code&gt;StringBuilder&lt;/code&gt; is inconsistent with equals. Care should be exercised if &lt;code&gt;StringBuilder&lt;/code&gt; objects are used as keys in a &lt;code&gt;SortedMap&lt;/code&gt; or elements in a &lt;code&gt;SortedSet&lt;/code&gt;. See &lt;a href=&quot;comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../util/sortedmap&quot;&gt;&lt;code&gt;SortedMap&lt;/code&gt;&lt;/a&gt;, or &lt;a href=&quot;../util/sortedset&quot;&gt;&lt;code&gt;SortedSet&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">&lt;code&gt;StringBuilder&lt;/code&gt; 는 &lt;code&gt;Comparable&lt;/code&gt; 을 구현 하지만 &lt;a href=&quot;object#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals&lt;/code&gt; 를&lt;/a&gt; 재정의하지 않습니다 . 따라서 &lt;code&gt;StringBuilder&lt;/code&gt; 의 자연스러운 순서는 같음과 일치하지 않습니다. &lt;code&gt;StringBuilder&lt;/code&gt; 객체가 &lt;code&gt;SortedMap&lt;/code&gt; 의 키 또는 &lt;code&gt;SortedSet&lt;/code&gt; 의 요소 로 사용되는 경우주의해야합니다 . 자세한 내용은 &lt;a href=&quot;comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../util/sortedmap&quot;&gt; &lt;code&gt;SortedMap&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../util/sortedset&quot;&gt; &lt;code&gt;SortedSet&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="05442803e74defea6168462ab72660a17f23ec67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringCharacterIterator&lt;/code&gt; implements the &lt;code&gt;CharacterIterator&lt;/code&gt; protocol for a &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StringCharacterIterator&lt;/code&gt; 는 &lt;code&gt;String&lt;/code&gt; 의 &lt;code&gt;CharacterIterator&lt;/code&gt; 프로토콜을 구현합니다 .</target>
        </trans-unit>
        <trans-unit id="e99f4eccee869a2545780e0c78bad182a3e54dc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringCharacterIterator&lt;/code&gt; implements the &lt;code&gt;CharacterIterator&lt;/code&gt; protocol for a &lt;code&gt;String&lt;/code&gt;. The &lt;code&gt;StringCharacterIterator&lt;/code&gt; class iterates over the entire &lt;code&gt;String&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;StringCharacterIterator&lt;/code&gt; 는 &lt;code&gt;String&lt;/code&gt; 의 &lt;code&gt;CharacterIterator&lt;/code&gt; 프로토콜을 구현합니다 . &lt;code&gt;StringCharacterIterator&lt;/code&gt; 의 클래스는 전체 반복 할 &lt;code&gt;String&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="5abba757a9c8a22ad071ad0672f0b19b7011fd05" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringJoiner&lt;/code&gt; is used to construct a sequence of characters separated by a delimiter and optionally starting with a supplied prefix and ending with a supplied suffix.</source>
          <target state="translated">&lt;code&gt;StringJoiner&lt;/code&gt; 는 분리 문자로 구분되고 선택적으로 제공된 접 두부로 시작하고 제공된 접미 부로 끝나는 일련의 문자를 구성하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="dc1a831a4a48a82bad38250223afca4dab93dd1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;StringTokenizer&lt;/code&gt; is a legacy class that is retained for compatibility reasons although its use is discouraged in new code. It is recommended that anyone seeking this functionality use the &lt;code&gt;split&lt;/code&gt; method of &lt;code&gt;String&lt;/code&gt; or the java.util.regex package instead.</source>
          <target state="translated">&lt;code&gt;StringTokenizer&lt;/code&gt; 는 새 코드에서는 사용을 권장하지 않지만 호환성 이유로 유지되는 레거시 클래스입니다. 이 기능을 원하는 사람 은 &lt;code&gt;String&lt;/code&gt; 또는 java.util.regex 패키지 의 &lt;code&gt;split&lt;/code&gt; 메소드를 대신 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="846fd30669f7f4ca899e139ae5970d2a57205b3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Struct&lt;/code&gt; interface -- mapping for SQL &lt;code&gt;STRUCT&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Struct&lt;/code&gt; 인터페이스-SQL &lt;code&gt;STRUCT&lt;/code&gt; 매핑</target>
        </trans-unit>
        <trans-unit id="4682346c146b15c4dc8c13a975c3f9e9461682ed" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingConstants.CENTER&lt;/code&gt; (the default)</source>
          <target state="translated">&lt;code&gt;SwingConstants.CENTER&lt;/code&gt; (기본값)</target>
        </trans-unit>
        <trans-unit id="f0874a1f56e0ae79da5bffb09836e6a186e663b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingConstants.TRAILING&lt;/code&gt; (the default)</source>
          <target state="translated">&lt;code&gt;SwingConstants.TRAILING&lt;/code&gt; (기본값)</target>
        </trans-unit>
        <trans-unit id="ac04e74360d0d3d91962f23cc215a9dfcee5b829" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingConstants.VERTICAL&lt;/code&gt; or &lt;code&gt;SwingConstants.HORIZONTAL&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;SwingConstants.VERTICAL&lt;/code&gt; 또는 &lt;code&gt;SwingConstants.HORIZONTAL&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5f5f5ee2142f8256579bd407a7ac24d418c39441" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingWorker&lt;/code&gt; is &lt;code&gt;DONE&lt;/code&gt; after &lt;code&gt;doInBackground&lt;/code&gt; method is finished.</source>
          <target state="translated">&lt;code&gt;SwingWorker&lt;/code&gt; 의가 있다 &lt;code&gt;DONE&lt;/code&gt; 후 &lt;code&gt;doInBackground&lt;/code&gt; 의 방법이 완료됩니다.</target>
        </trans-unit>
        <trans-unit id="200f683304c2ec654cbb098c762d92d50845d6d1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingWorker&lt;/code&gt; is &lt;code&gt;STARTED&lt;/code&gt; before invoking &lt;code&gt;doInBackground&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;SwingWorker&lt;/code&gt; &lt;code&gt;doInBackground&lt;/code&gt; 를 호출 &lt;code&gt;STARTED&lt;/code&gt; 전에 SwingWorker 가 시작 됩니다.</target>
        </trans-unit>
        <trans-unit id="6228bde435579fa2ab039b856d9dedfe6aa34441" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingWorker&lt;/code&gt; is designed for situations where you need to have a long running task run in a background thread and provide updates to the UI either when done, or while processing. Subclasses of &lt;code&gt;SwingWorker&lt;/code&gt; must implement the &lt;a href=&quot;#doInBackground()&quot;&gt;&lt;code&gt;doInBackground()&lt;/code&gt;&lt;/a&gt; method to perform the background computation.</source>
          <target state="translated">&lt;code&gt;SwingWorker&lt;/code&gt; 는 백그라운드 스레드에서 장기 실행 작업을 실행하고 완료시 또는 처리 중에 UI에 업데이트를 제공해야하는 상황을 위해 설계되었습니다. &lt;code&gt;SwingWorker&lt;/code&gt; 의 서브 클래스는 백그라운드 계산을 수행하기 위해 &lt;a href=&quot;#doInBackground()&quot;&gt; &lt;code&gt;doInBackground()&lt;/code&gt; &lt;/a&gt; 메서드를 구현해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7daf9cd552f9f62ea5601a1993af472e55c4b229" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SwingWorker&lt;/code&gt; is only designed to be executed once. Executing a &lt;code&gt;SwingWorker&lt;/code&gt; more than once will not result in invoking the &lt;code&gt;doInBackground&lt;/code&gt; method twice.</source>
          <target state="translated">&lt;code&gt;SwingWorker&lt;/code&gt; 는 한 번만 실행되도록 설계되었습니다. &lt;code&gt;SwingWorker&lt;/code&gt; 를 두 번 이상 실행 해도 &lt;code&gt;doInBackground&lt;/code&gt; 메서드가 두 번 호출되지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="4196f1bfcc657773ada73b70fea09e6b8b5af309" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SyncProvider&lt;/code&gt; implementations that supply XML data reader capabilities such as output XML stream capabilities can implement this interface to provide standard &lt;code&gt;XmlReader&lt;/code&gt; objects to &lt;code&gt;WebRowSet&lt;/code&gt; implementations.</source>
          <target state="translated">&lt;code&gt;SyncProvider&lt;/code&gt; 출력 XML 스트림 기능과 같은 XML 데이터 판독기 기능을 제공하는 SyncProvider 구현은이 인터페이스를 구현 하여 &lt;code&gt;WebRowSet&lt;/code&gt; 구현에 표준 &lt;code&gt;XmlReader&lt;/code&gt; 개체를 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d9d52f5eac3295025057315703f33bdfe14d4896" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SyncProvider&lt;/code&gt; implementations that supply XML data writer capabilities such as output XML stream capabilities can implement this interface to provide standard &lt;code&gt;XmlWriter&lt;/code&gt; objects to &lt;code&gt;WebRowSet&lt;/code&gt; implementations.</source>
          <target state="translated">&lt;code&gt;SyncProvider&lt;/code&gt; 출력 XML 스트림 기능과 같은 XML 데이터 기록기 기능을 제공하는 SyncProvider 구현은이 인터페이스를 구현 하여 &lt;code&gt;WebRowSet&lt;/code&gt; 구현에 표준 &lt;code&gt;XmlWriter&lt;/code&gt; 개체를 제공 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c07ed42b19c910960415bc8be913c8bb2aed3274" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthPainter&lt;/code&gt; is abstract in so far as it does no painting, all the methods are empty. While none of these methods are typed to throw an exception, subclasses can assume that valid arguments are passed in, and if not they can throw a &lt;code&gt;NullPointerException&lt;/code&gt; or &lt;code&gt;IllegalArgumentException&lt;/code&gt; in response to invalid arguments.</source>
          <target state="translated">&lt;code&gt;SynthPainter&lt;/code&gt; 는 페인팅을하지 않는 한 추상적이며 모든 메소드는 비어 있습니다. 이러한 메소드 중 어느 것도 예외를 발생하도록 형식화되지 않았지만 서브 클래스는 유효한 인수가 전달되었다고 가정 할 수 있으며 그렇지 않은 경우 유효하지 않은 인수에 대한 응답으로 &lt;code&gt;NullPointerException&lt;/code&gt; 또는 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 을 발생시킬 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="0738580db4ef00684ffad070f1a83a1ffc56d380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthPainter&lt;/code&gt; is used for painting portions of &lt;code&gt;JComponent&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;SynthPainter&lt;/code&gt; 는 &lt;code&gt;JComponent&lt;/code&gt; 의 일부를 칠하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="b03301bff08ea3d1cda6ec5b9a0c6e81568f0cf1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthPainter&lt;/code&gt; is used for painting portions of &lt;code&gt;JComponent&lt;/code&gt;s. At a minimum each &lt;code&gt;JComponent&lt;/code&gt; has two paint methods: one for the border and one for the background. Some &lt;code&gt;JComponent&lt;/code&gt;s have more than one &lt;code&gt;Region&lt;/code&gt;, and as a consequence more paint methods.</source>
          <target state="translated">&lt;code&gt;SynthPainter&lt;/code&gt; 는 &lt;code&gt;JComponent&lt;/code&gt; 의 일부를 칠하는 데 사용됩니다 . 최소한 각 &lt;code&gt;JComponent&lt;/code&gt; 에는 테두리와 배경에 대한 두 가지 페인트 메서드가 있습니다. 일부 &lt;code&gt;JComponent&lt;/code&gt; 에는 둘 이상의 &lt;code&gt;Region&lt;/code&gt; 이 있으며 결과적으로 더 많은 페인트 메서드가 있습니다.</target>
        </trans-unit>
        <trans-unit id="a07e5cfaeabd910b7f59d499497be9d62bc1aadd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthStyle&lt;/code&gt; is a set of style properties.</source>
          <target state="translated">&lt;code&gt;SynthStyle&lt;/code&gt; 은 스타일 속성 집합입니다.</target>
        </trans-unit>
        <trans-unit id="6921afa3434d09c5dc37b05583cc85391ef9d493" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;SynthStyle&lt;/code&gt; is a set of style properties. Each &lt;code&gt;SynthUI&lt;/code&gt; references at least one &lt;code&gt;SynthStyle&lt;/code&gt; that is obtained using a &lt;code&gt;SynthStyleFactory&lt;/code&gt;. You typically don't need to interact with this class directly, rather you will load a &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth File Format file&lt;/a&gt; into &lt;code&gt;SynthLookAndFeel&lt;/code&gt; that will create a set of SynthStyles.</source>
          <target state="translated">&lt;code&gt;SynthStyle&lt;/code&gt; 은 스타일 속성 집합입니다. 각 &lt;code&gt;SynthUI&lt;/code&gt; 의 참조 적어도 하나 개 &lt;code&gt;SynthStyle&lt;/code&gt; 하여 얻어지는 &lt;code&gt;SynthStyleFactory&lt;/code&gt; . 일반적으로이 클래스와 직접 상호 작용할 필요는 없습니다. 대신 SynthStyles 집합을 생성하는 &lt;code&gt;SynthLookAndFeel&lt;/code&gt; 에&lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.desktop/javax/swing/plaf/synth/doc-files/synthFileFormat.html&quot;&gt;Synth 파일 형식 파일&lt;/a&gt; 을 로드합니다 .</target>
        </trans-unit>
        <trans-unit id="585e31788aacba94cba584cfb189bf6a2d162739" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;System.Logger&lt;/code&gt; instances log messages that will be routed to the underlying logging framework the &lt;a href=&quot;system.loggerfinder&quot;&gt;&lt;code&gt;LoggerFinder&lt;/code&gt;&lt;/a&gt; uses.</source>
          <target state="translated">&lt;code&gt;System.Logger&lt;/code&gt; 인스턴스는 &lt;a href=&quot;system.loggerfinder&quot;&gt; &lt;code&gt;LoggerFinder&lt;/code&gt; 가&lt;/a&gt; 사용 하는 기본 로깅 프레임 워크로 라우팅 될 메시지를 로깅 합니다.</target>
        </trans-unit>
        <trans-unit id="6b6780e7d3d88e8db41659a81dda648f999d2bc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;System.Logger&lt;/code&gt; instances log messages that will be routed to the underlying logging framework the &lt;a href=&quot;system.loggerfinder&quot;&gt;&lt;code&gt;LoggerFinder&lt;/code&gt;&lt;/a&gt; uses. &lt;code&gt;System.Logger&lt;/code&gt; instances are typically obtained from the &lt;a href=&quot;system&quot;&gt;&lt;code&gt;System&lt;/code&gt;&lt;/a&gt; class, by calling &lt;a href=&quot;system#getLogger(java.lang.String)&quot;&gt;&lt;code&gt;System.getLogger(loggerName)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;system#getLogger(java.lang.String,java.util.ResourceBundle)&quot;&gt;&lt;code&gt;System.getLogger(loggerName, bundle)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;System.Logger&lt;/code&gt; 인스턴스는 &lt;a href=&quot;system.loggerfinder&quot;&gt; &lt;code&gt;LoggerFinder&lt;/code&gt; 가&lt;/a&gt; 사용 하는 기본 로깅 프레임 워크로 라우팅 될 메시지를 로깅 합니다. &lt;code&gt;System.Logger&lt;/code&gt; 인스턴스는 일반적으로 &lt;a href=&quot;system#getLogger(java.lang.String)&quot;&gt; &lt;code&gt;System.getLogger(loggerName)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;system#getLogger(java.lang.String,java.util.ResourceBundle)&quot;&gt; &lt;code&gt;System.getLogger(loggerName, bundle)&lt;/code&gt; &lt;/a&gt; 을 호출 하여 &lt;a href=&quot;system&quot;&gt; &lt;code&gt;System&lt;/code&gt; &lt;/a&gt; 클래스 에서 가져옵니다 .</target>
        </trans-unit>
        <trans-unit id="432722d984024862451f1393e1a4cffc94321b3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T2&lt;/code&gt; (or a third thread) then calls &lt;code&gt;CV.remove(C)&lt;/code&gt;, undoing &lt;code&gt;T2&lt;/code&gt;'s work</source>
          <target state="translated">&lt;code&gt;T2&lt;/code&gt; (또는 세 번째 스레드)는 &lt;code&gt;CV.remove(C)&lt;/code&gt; 를 호출 하여 &lt;code&gt;T2&lt;/code&gt; 의 작업을 취소 합니다.</target>
        </trans-unit>
        <trans-unit id="de1282e67caa3cb38bdb0f2d862a36bd5576eef7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T2&lt;/code&gt; quickly computes a similar time-dependent value &lt;code&gt;V1&lt;/code&gt; and installs it on &lt;code&gt;CV.get(C)&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T2&lt;/code&gt; 는 유사한 시간 종속 값 &lt;code&gt;V1&lt;/code&gt; 을 신속하게 계산하여 &lt;code&gt;CV.get(C)&lt;/code&gt; 에 설치합니다.</target>
        </trans-unit>
        <trans-unit id="6dcc2e3370d8ea9d35631dea5f935d793c3aa5e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - Allows the compiler to check that &lt;code&gt;implementation&lt;/code&gt; does indeed implement the class described by &lt;code&gt;mbeanInterface&lt;/code&gt;. The compiler can only check this if &lt;code&gt;mbeanInterface&lt;/code&gt; is a class literal such as &lt;code&gt;MyMBean.class&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러가 &lt;code&gt;implementation&lt;/code&gt; 이 실제로 &lt;code&gt;mbeanInterface&lt;/code&gt; 에 의해 설명 된 클래스 를 구현 하고 있는지 확인할 수 있습니다. 컴파일러는 &lt;code&gt;mbeanInterface&lt;/code&gt; 가 &lt;code&gt;MyMBean.class&lt;/code&gt; 와 같은 클래스 리터럴 인 경우에만이를 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d98ea9921663d2eacd8470ef000aa084e7f8f117" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The class type that will be returned by the XPath expression.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -XPath 표현식에서 반환 할 클래스 유형입니다.</target>
        </trans-unit>
        <trans-unit id="95ba15351f5078dff161ba24372e003a68f416dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The enum type whose constant is to be returned</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 정수를 돌려주는 열거 형</target>
        </trans-unit>
        <trans-unit id="7f9a40bdea403cdddb5226c4132dbd7b9793393f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The result type returned by this future's &lt;code&gt;join&lt;/code&gt; and &lt;code&gt;get&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이 퓨처의 &lt;code&gt;join&lt;/code&gt; 및 &lt;code&gt;get&lt;/code&gt; 메서드 에서 반환 된 결과 유형</target>
        </trans-unit>
        <trans-unit id="adb8a31e81b655e7f510ab545971bf3ae795456d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of element returned by the iterator</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 반복자가 돌려주는 요소의 타입</target>
        </trans-unit>
        <trans-unit id="6088a6251bfb20139b5be1dd3e2a158f1974fb42" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of input elements for the new collector</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 새 콜렉터의 입력 요소 유형</target>
        </trans-unit>
        <trans-unit id="f02a7da6353446ba19cd5914ba3176b873e0b361" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of reference to the files</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 파일에 대한 참조 유형</target>
        </trans-unit>
        <trans-unit id="44831613362015ca2008c05c75dfd96b1aaa0efa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of stream elements</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 스트림 요소의 유형</target>
        </trans-unit>
        <trans-unit id="965cdc28bc507dd4bd91b771600cf6b9c635e15a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the array elements</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 배열 요소의 유형</target>
        </trans-unit>
        <trans-unit id="e6402813030ed7b2e5d5a05f2a0dec650ef8cebb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the context object associated with the event</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이벤트와 연관된 컨텍스트 오브젝트의 유형</target>
        </trans-unit>
        <trans-unit id="dd7f818faad1c693c82a8da3fe094263c7051013" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the file attribute value</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 파일 속성 값의 유형</target>
        </trans-unit>
        <trans-unit id="66b4f8d985a4070895126cbddfb33899bdafbfbb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the non-existent value</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 존재하지 않는 값의 유형</target>
        </trans-unit>
        <trans-unit id="4f715de3a93d4a1325adf7976bf1e0519b30c7f2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the object holding the updatable field</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 업데이트 가능한 필드를 보유한 오브젝트의 유형</target>
        </trans-unit>
        <trans-unit id="f0b5c4b9ea15d28815a39982c4ed017559037b72" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the result of applying the function to the stream of &lt;a href=&quot;stackwalker.stackframe&quot;&gt;stack frame&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -&lt;a href=&quot;stackwalker.stackframe&quot;&gt;스택 프레임&lt;/a&gt; 의 스트림에 함수를 적용한 결과의 유형입니다 .</target>
        </trans-unit>
        <trans-unit id="fced19de39fdc49f3543cd4b98a3f618545229bb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the socket option value</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 소켓 옵션 값의 유형</target>
        </trans-unit>
        <trans-unit id="c8eeb6eeda1a3d4c7860c0bd3637a9fca5325e80" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - The type of the socket option value.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 소켓 옵션 값의 유형</target>
        </trans-unit>
        <trans-unit id="9e13b8b435198952685a0fb5f9ebe33f58446c2c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - Type of elements</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 요소 유형</target>
        </trans-unit>
        <trans-unit id="664c82518d7dbe51d95dc0376308c7b080b24885" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - Type of the non-existent value</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 존재하지 않는 값의 유형</target>
        </trans-unit>
        <trans-unit id="6fc5b2ce6f49c66d4978328ac73e2cccd63806b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to check that the &lt;code&gt;
 defaultValue&lt;/code&gt; and &lt;code&gt;legalValues&lt;/code&gt;, if non-null, have the correct Java type for the given &lt;code&gt;openType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러가 null이 아닌 경우 &lt;code&gt; defaultValue&lt;/code&gt; 및 &lt;code&gt;legalValues&lt;/code&gt; 가 주어진 &lt;code&gt;openType&lt;/code&gt; 에 대해 올바른 Java 유형을 갖는지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="47053d5a6e7d312d26e0ae45310c2370314009ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to check that the &lt;code&gt;
 defaultValue&lt;/code&gt;, &lt;code&gt;minValue&lt;/code&gt;, and &lt;code&gt;maxValue&lt;/code&gt;, if non-null, have the correct Java type for the given &lt;code&gt;
 openType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러가 &lt;code&gt; defaultValue&lt;/code&gt; , &lt;code&gt;minValue&lt;/code&gt; 및 &lt;code&gt;maxValue&lt;/code&gt; 가 널이 아닌 경우 주어진 &lt;code&gt; openType&lt;/code&gt; 에 대해 올바른 Java 유형을 가지고 있는지 확인할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="2cca368ab1d05f403a456411366a46a54d041c50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to check that the &lt;code&gt;defaultValue&lt;/code&gt; and &lt;code&gt;legalValues&lt;/code&gt;, if non-null, have the correct Java type for the given &lt;code&gt;openType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러는 null이 아닌 경우 &lt;code&gt;defaultValue&lt;/code&gt; 및 &lt;code&gt;legalValues&lt;/code&gt; 가 지정된 &lt;code&gt;openType&lt;/code&gt; 에 대해 올바른 Java 유형을 가지고 있는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7da93c037f6bd746c409db9a9a1b00223431a0dc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to check that the &lt;code&gt;defaultValue&lt;/code&gt;, &lt;code&gt;minValue&lt;/code&gt;, and &lt;code&gt;maxValue&lt;/code&gt;, if non-null, have the correct Java type for the given &lt;code&gt;openType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러가 &lt;code&gt;defaultValue&lt;/code&gt; , &lt;code&gt;minValue&lt;/code&gt; 및 &lt;code&gt;maxValue&lt;/code&gt; 가 null이 아닌 경우 주어진 &lt;code&gt;openType&lt;/code&gt; 에 대해 올바른 Java 유형을 가지고 있는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="d38da2b8f1415f0bfea67001da1e7a786c9c7e92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to check that the &lt;code&gt;defaultValue&lt;/code&gt;, if non-null, has the correct Java type for the given &lt;code&gt;openType&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러가 null이 아닌 경우 &lt;code&gt;defaultValue&lt;/code&gt; 가 지정된 &lt;code&gt;openType&lt;/code&gt; 에 대해 올바른 Java 유형을 가지고 있는지 확인할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="a7cb62e7104db5f392c61ea3e8a79952ec6f7aea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to know that if the &lt;code&gt;
 interfaceClass&lt;/code&gt; parameter is &lt;code&gt;MyMBean.class&lt;/code&gt;, for example, then the return type is &lt;code&gt;MyMBean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러가 예를 들어 &lt;code&gt; interfaceClass&lt;/code&gt; 매개 변수가 &lt;code&gt;MyMBean.class&lt;/code&gt; 인 경우 반환 유형이 &lt;code&gt;MyMBean&lt;/code&gt; 임을 알 수 있도록 합니다.</target>
        </trans-unit>
        <trans-unit id="a57394c155db5ba75faeb0bd09208f6ccbeda1d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to know that if the &lt;code&gt;
 interfaceClass&lt;/code&gt; parameter is &lt;code&gt;MyMXBean.class&lt;/code&gt;, for example, then the return type is &lt;code&gt;MyMXBean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러가 예를 들어 &lt;code&gt; interfaceClass&lt;/code&gt; 매개 변수가 &lt;code&gt;MyMXBean.class&lt;/code&gt; 인 경우 반환 유형이 &lt;code&gt;MyMXBean&lt;/code&gt; 임을 알 수 있도록 합니다.</target>
        </trans-unit>
        <trans-unit id="019ca4079877b49738764e49ac125a3ff05a9261" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to know that if the &lt;code&gt;interfaceClass&lt;/code&gt; parameter is &lt;code&gt;MyMBean.class&lt;/code&gt;, for example, then the return type is &lt;code&gt;MyMBean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러는 &lt;code&gt;interfaceClass&lt;/code&gt; 매개 변수가 &lt;code&gt;MyMBean.class&lt;/code&gt; 인 경우 리턴 유형이 &lt;code&gt;MyMBean&lt;/code&gt; 임을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cf87baaa7eb6ff571f806e206e747d483737fb70" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - allows the compiler to know that if the &lt;code&gt;interfaceClass&lt;/code&gt; parameter is &lt;code&gt;MyMXBean.class&lt;/code&gt;, for example, then the return type is &lt;code&gt;MyMXBean&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컴파일러는 &lt;code&gt;interfaceClass&lt;/code&gt; 매개 변수가 &lt;code&gt;MyMXBean.class&lt;/code&gt; 인 경우 리턴 유형이 &lt;code&gt;MyMXBean&lt;/code&gt; 임을 알 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1f5d25a6903901fb9d715669cfb586215f9e259f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - an &lt;code&gt;mxbeanInterface&lt;/code&gt; type parameter</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - &lt;code&gt;mxbeanInterface&lt;/code&gt; 타입의 파라미터</target>
        </trans-unit>
        <trans-unit id="c64f5d1d81ef21d566ca25cc543b790061385f92" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - element type for the input and output of the reduction</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 감소의 입력 및 출력을위한 요소 유형</target>
        </trans-unit>
        <trans-unit id="761739249d88d9a5f6c9d149ff7e128959f1268e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; type of element to be compared</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; 요소 의 비교 가능한 유형</target>
        </trans-unit>
        <trans-unit id="2425f24b42a4aef224203279a797d8af157fa9c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the Java type that described instances must have</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 설명 된 인스턴스가 가져야하는 Java 유형</target>
        </trans-unit>
        <trans-unit id="f3d60a759c6d88cb4f5f4f04879d60ca4259f184" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the Java type that instances described by this type must have. For example, &lt;a href=&quot;simpletype#INTEGER&quot;&gt;&lt;code&gt;SimpleType.INTEGER&lt;/code&gt;&lt;/a&gt; is a &lt;code&gt;
 SimpleType&amp;lt;Integer&amp;gt;&lt;/code&gt; which is a subclass of &lt;code&gt;OpenType&amp;lt;Integer&amp;gt;&lt;/code&gt;, meaning that an attribute, parameter, or return value that is described as a &lt;code&gt;SimpleType.INTEGER&lt;/code&gt; must have Java type &lt;a href=&quot;../../../../java.base/java/lang/integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이 유형이 설명하는 인스턴스가 가져야하는 Java 유형. 예를 들어, &lt;a href=&quot;simpletype#INTEGER&quot;&gt; &lt;code&gt;SimpleType.INTEGER&lt;/code&gt; &lt;/a&gt; 는 &lt;code&gt;OpenType&amp;lt;Integer&amp;gt;&lt;/code&gt; 의 서브 클래스 인 &lt;code&gt; SimpleType&amp;lt;Integer&amp;gt;&lt;/code&gt; 입니다 . 즉, &lt;code&gt;SimpleType.INTEGER&lt;/code&gt; 로 설명되는 속성, 매개 변수 또는 리턴 값 에는 Java 유형 &lt;a href=&quot;../../../../java.base/java/lang/integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; 가 있어야합니다 .</target>
        </trans-unit>
        <trans-unit id="894c7eec84c824444ef88d01aaf9ceb5f03aa0a8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the Java type that instances described by this type must have. For example, &lt;a href=&quot;simpletype#INTEGER&quot;&gt;&lt;code&gt;SimpleType.INTEGER&lt;/code&gt;&lt;/a&gt; is a &lt;code&gt;SimpleType&amp;lt;Integer&amp;gt;&lt;/code&gt; which is a subclass of &lt;code&gt;OpenType&amp;lt;Integer&amp;gt;&lt;/code&gt;, meaning that an attribute, parameter, or return value that is described as a &lt;code&gt;SimpleType.INTEGER&lt;/code&gt; must have Java type &lt;a href=&quot;../../../java/lang/integer&quot;&gt;&lt;code&gt;Integer&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이 유형으로 설명 된 인스턴스에 있어야하는 Java 유형 예를 들어, &lt;a href=&quot;simpletype#INTEGER&quot;&gt; &lt;code&gt;SimpleType.INTEGER&lt;/code&gt; 는&lt;/a&gt; A는 &lt;code&gt;SimpleType&amp;lt;Integer&amp;gt;&lt;/code&gt; 의 서브 &lt;code&gt;OpenType&amp;lt;Integer&amp;gt;&lt;/code&gt; 하는 것으로 설명 된 특성 파라미터 나 리턴 값 의미 &lt;code&gt;SimpleType.INTEGER&lt;/code&gt; 는 자바 입력 있어야 &lt;a href=&quot;../../../java/lang/integer&quot;&gt; &lt;code&gt;Integer&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="dc465a5a9d2c2cbf50d30c564058a30d47c1ba53" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the class in which the constructor is declared</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 생성자가 선언 된 클래스</target>
        </trans-unit>
        <trans-unit id="1e4584e369e74590d881b6e5740edf21260a2e2f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the class of the elements to add and of the collection</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 추가 할 요소와 컬렉션의 클래스</target>
        </trans-unit>
        <trans-unit id="716d56ee32ecd92b0115d87992cba8b2de171240" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the class of the object to copy and of the objects in the returned list.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 복사 할 객체의 클래스와 반환 된 목록에있는 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="9c5a6fc83418f573408ae87688286e5e06fb466a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the class of the objects compared by the comparator</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 비교기에 의해 비교 된 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="dfa09e49c5203487c0a728d2bee18946ea511feb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the class of the objects in the array</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 배열 내의 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="6a5cd6f165a92f065d2331d40398ac5d5ff56b23" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the class of the objects in the collection</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컬렉션 내의 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="640db8b2abd20ba3c95f182e3e7f3e2338a71f85" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the class of the objects in the deque</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -deque에있는 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="50b3662a4417314defc8540dddd30d39152b732a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the class of the objects in the enumeration</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 열거 내의 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="e8a8ba5643ce5ec9f452f857cc82e679dd7631d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the class of the objects in the list</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 리스트 내의 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="e6b5bc44876dcfdabcb5f70b5b56076dd74f91d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the class of the objects in the lists</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 리스트 내의 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="ae3d4466e7c26cdf7eaba306bae4bd39cf400a49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the class of the objects in the returned array</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 돌려 주어진 배열 내의 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="e5e8b5a632cf2f91f7babb30d0740868152cbbdb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the class of the objects in the set</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 세트 내의 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="b13a5fe274b1fe80fdf6c5819302508bddb5ebc5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the class of the objects returned by the enumeration</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 열거에 의해 돌려 주어지는 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="082b1956bacc1124582ba525abba8cf5ea7de3ba" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the class of the objects to be sorted</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 정렬되는 객체의 클래스</target>
        </trans-unit>
        <trans-unit id="a752d0b0dccae9a160b0e245804e4dac6ae9f80f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the class of the value</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 값의 클래스</target>
        </trans-unit>
        <trans-unit id="23161a9c75a4dcb22d9b7367bb97650cede84b4d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the component type of the array to contain the collection</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컬렉션을 포함 할 배열의 구성 요소 유형</target>
        </trans-unit>
        <trans-unit id="8ed1c17df0bf63cfee9424a3886f8d7dd1e0f5e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the desired type of the result, either &lt;a href=&quot;../reflect/member&quot;&gt;&lt;code&gt;Member&lt;/code&gt;&lt;/a&gt; or a subtype</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 원하는 결과 유형 ( &lt;a href=&quot;../reflect/member&quot;&gt; &lt;code&gt;Member&lt;/code&gt; &lt;/a&gt; 또는 하위 유형)</target>
        </trans-unit>
        <trans-unit id="1ab20accf2b46daa8003ef044f191efd1f573db9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the desired type of the wrapper, a single-method interface</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 원하는 래퍼 유형, 단일 메소드 인터페이스</target>
        </trans-unit>
        <trans-unit id="7131c3a7b6928b813d9cf800b2546309b9b5b955" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the implementation type of the MBean</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -MBean의 구현 유형</target>
        </trans-unit>
        <trans-unit id="4df58326ccda87f79d41b726934a009d33f9fae8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the listener type</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 리스너 유형</target>
        </trans-unit>
        <trans-unit id="18712c45f30f5d46221ae47384066c11cde2f871" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the object type returned by the XPath evaluation.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -XPath 평가에서 반환 된 개체 유형입니다.</target>
        </trans-unit>
        <trans-unit id="a45a62641356543a10c20bde147ef47a857c9e18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the published item type</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 게시 된 항목 유형</target>
        </trans-unit>
        <trans-unit id="47f9dcfcc8ba48ed902153a91ea99164daaba392" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the push promise response body type</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 푸시 약속 응답 본문 유형</target>
        </trans-unit>
        <trans-unit id="41be81d529346249b5cdbbb762980d57f14591d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the response body type</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 응답 본문 유형</target>
        </trans-unit>
        <trans-unit id="fa000574f73309b29deadf7a90c0d90ebc552653" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the result type returned by this &lt;code&gt;SwingWorker's&lt;/code&gt;&lt;code&gt;doInBackground&lt;/code&gt; and &lt;code&gt;get&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이 &lt;code&gt;SwingWorker's&lt;/code&gt; &lt;code&gt;doInBackground&lt;/code&gt; 및 &lt;code&gt;get&lt;/code&gt; 메소드에 의해 리턴 된 결과 유형</target>
        </trans-unit>
        <trans-unit id="20349d56373f4ad4c397463810e739644ef3130c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the runtime type of the array to contain the collection</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 컬렉션을 포함하는 배열의 런타임 타입</target>
        </trans-unit>
        <trans-unit id="38b7a3be7087d68bb52b3a28332ea9cb1257c2e6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the subscribed item type</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 구독 항목 유형</target>
        </trans-unit>
        <trans-unit id="3c1c5940088e2884d78396b675334a145748fc66" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of &lt;code&gt;DragGestureRecognizer&lt;/code&gt; to create</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 생성 할 &lt;code&gt;DragGestureRecognizer&lt;/code&gt; 유형</target>
        </trans-unit>
        <trans-unit id="e64dbdd85066afc899e5246160639c1c675988d0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of &lt;code&gt;EventListener&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - &lt;code&gt;EventListener&lt;/code&gt; 의 유형</target>
        </trans-unit>
        <trans-unit id="0933b3a5c2e41dc769d032e5f570a1349a206a87" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of &lt;code&gt;EventListener&lt;/code&gt; class being requested</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 요청되는 &lt;code&gt;EventListener&lt;/code&gt; 클래스 의 유형</target>
        </trans-unit>
        <trans-unit id="9b1211b0768f5d6523f9bd0ebbccdbb00da09dcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of &lt;code&gt;EventListener&lt;/code&gt; to add</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 추가 할 &lt;code&gt;EventListener&lt;/code&gt; 의 유형</target>
        </trans-unit>
        <trans-unit id="954ce93b9c0e4e73bc6626b0b9b6f8cc54bd3033" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of &lt;code&gt;EventListener&lt;/code&gt; to search for</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 검색 할 &lt;code&gt;EventListener&lt;/code&gt; 의 유형</target>
        </trans-unit>
        <trans-unit id="8fa0fc70beeaf2ac0d182c6cdc5f0bfe20c66430" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of DragGestureRecognizer to create</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 생성 할 DragGestureRecognizer 유형</target>
        </trans-unit>
        <trans-unit id="ab4ea51251fafa1496af3cecbffd2c58f26eb01f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of arguments to the predicate</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 술어에 대한 인수 유형</target>
        </trans-unit>
        <trans-unit id="bdd353a5e6e3227b3d9a7ca4f41933beab75fadb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of arguments to the specified predicate</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 지정된 술어에 대한 인수 유형</target>
        </trans-unit>
        <trans-unit id="6876a62e3ca17478bec35551da4c787e9ee9aefa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of array elements</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 배열 요소의 유형</target>
        </trans-unit>
        <trans-unit id="39e94a5830a3540d0c6cfbfe2f1db0259d0898ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of comparable array elements</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 비교 가능한 배열 요소의 유형</target>
        </trans-unit>
        <trans-unit id="b2c9a9fec76184db68803eb7b2108db510f2f1df" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of element to be compared</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 비교할 요소의 유형</target>
        </trans-unit>
        <trans-unit id="f81eb7f2a679a8c4fcf95f9155819f5244f302c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of elements returned by the iterator</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 반복자가 돌려주는 요소의 타입</target>
        </trans-unit>
        <trans-unit id="7a2d204497de99e869838d6ac4ed26faef00f321" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of elements returned by this PrimitiveIterator. The type must be a wrapper type for a primitive type, such as &lt;code&gt;Integer&lt;/code&gt; for the primitive &lt;code&gt;int&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이 PrimitiveIterator가 돌려주는 요소의 형태 유형은 기본 &lt;code&gt;int&lt;/code&gt; 유형의 &lt;code&gt;Integer&lt;/code&gt; 와 같이 기본 유형의 랩퍼 유형이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="93d9229943d2c1185f1c5b0bdb4f1adb2c352a12" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of elements returned by this Spliterator</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이 스플리터가 돌려주는 요소의 타입</target>
        </trans-unit>
        <trans-unit id="3c8d966694d8c50a4def8607c50d85e9d152f054" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of elements returned by this Spliterator. The type must be a wrapper type for a primitive type, such as &lt;code&gt;Integer&lt;/code&gt; for the primitive &lt;code&gt;int&lt;/code&gt; type.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이 스플리터가 돌려주는 요소의 타입 유형은 기본 &lt;code&gt;int&lt;/code&gt; 유형의 &lt;code&gt;Integer&lt;/code&gt; 와 같이 기본 유형의 랩퍼 유형이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="584dc0d192e2b4a6f8565c6583516580c7211b6f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of input elements to the reduction operation</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 감소 연산에 대한 입력 요소 유형</target>
        </trans-unit>
        <trans-unit id="f4446c1e2b4d662ed3a1bd22fbb57b50c3147b18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of listener objects</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 리스너 객체의 유형</target>
        </trans-unit>
        <trans-unit id="fb1cadeb378cb27c517962f87c95bd227643386a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of nodes maintained by this set</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이 세트에 의해 유지되는 노드 유형</target>
        </trans-unit>
        <trans-unit id="b8eed29ddd9fe4a6ac5febedbc08c77929ff8492" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of objects that may be compared by this comparator</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이 비교기에 의해 비교 될 수있는 객체의 유형</target>
        </trans-unit>
        <trans-unit id="2b470a1b652677fcf277dd66b3710c0622c32d1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of objects that this object may be compared to</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이 객체와 비교할 수있는 객체의 유형</target>
        </trans-unit>
        <trans-unit id="32f1f0521131c933a41aaf425acca5b3a5bdba27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of requested listeners</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 요청 된 리스너의 유형</target>
        </trans-unit>
        <trans-unit id="f210f08881c655221defeddfce79b7ae9b28f964" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of results supplied by this supplier</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이 공급 업체가 제공 한 결과 유형</target>
        </trans-unit>
        <trans-unit id="f24ce77aab098fa1459cf9df14d7ab38fb78d56a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of stream elements</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 스트림 요소의 유형</target>
        </trans-unit>
        <trans-unit id="226e0f8f23c17f4bd08c8bc9692b3f820c586109" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the annotation to query for and return if directly or indirectly present</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 직접 또는 간접적으로 존재하는 경우 쿼리하고 반환 할 주석의 유형</target>
        </trans-unit>
        <trans-unit id="80a7f3195a8a78f740d6ca78779a4cb94dc93a51" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the annotation to query for and return if directly present</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 직접 존재하는 경우 쿼리하고 반환 할 주석의 유형</target>
        </trans-unit>
        <trans-unit id="5915c7fb7cc24087876679f1cac215e6eb9f9e54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the annotation to query for and return if present</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 존재하는 경우 조회하고 리턴 할 주석의 유형</target>
        </trans-unit>
        <trans-unit id="9e4951212fae0351b5f71ea29b33c3c1c5c84909" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the array elements</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 배열 요소의 유형</target>
        </trans-unit>
        <trans-unit id="8092329e497079a493aaa51170dec38b4eeb77cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the callable's result</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 호출 가능 결과의 유형</target>
        </trans-unit>
        <trans-unit id="8431436f8d21236349239b6701a90d199d1c10b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the category.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 카테고리의 유형</target>
        </trans-unit>
        <trans-unit id="9350df2756698105c784a8134dbf032cb63cc5d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the class modeled by &lt;code&gt;c&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - &lt;code&gt;c&lt;/code&gt; 로 모델링 한 클래스의 유형</target>
        </trans-unit>
        <trans-unit id="0622b05e7f3aca57deffe2223686090050c7ef1e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the class modeled by this &lt;code&gt;Class&lt;/code&gt; object. For example, the type of &lt;code&gt;String.class&lt;/code&gt; is &lt;code&gt;
 Class&amp;lt;String&amp;gt;&lt;/code&gt;. Use &lt;code&gt;Class&amp;lt;?&amp;gt;&lt;/code&gt; if the class being modeled is unknown.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이 &lt;code&gt;Class&lt;/code&gt; 객체에 의해 모델링 된 클래스의 유형 . 예를 들어 &lt;code&gt;String.class&lt;/code&gt; 의 유형 은 &lt;code&gt; Class&amp;lt;String&amp;gt;&lt;/code&gt; 입니다. 모델링되는 클래스를 알 수없는 경우 &lt;code&gt;Class&amp;lt;?&amp;gt;&lt;/code&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6c726f1610c2bc2b4ba8c4bc11181da59c03a556" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the class modeled by this &lt;code&gt;Class&lt;/code&gt; object. For example, the type of &lt;code&gt;String.class&lt;/code&gt; is &lt;code&gt;Class&amp;lt;String&amp;gt;&lt;/code&gt;. Use &lt;code&gt;Class&amp;lt;?&amp;gt;&lt;/code&gt; if the class being modeled is unknown.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이 &lt;code&gt;Class&lt;/code&gt; 객체에 의해 모델링 된 클래스의 유형 예를 들어 &lt;code&gt;String.class&lt;/code&gt; 의 유형 은 &lt;code&gt;Class&amp;lt;String&amp;gt;&lt;/code&gt; 입니다. 모델링중인 클래스를 알 수없는 경우 &lt;code&gt;Class&amp;lt;?&amp;gt;&lt;/code&gt; 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="e7b8cabedc0e6b361e146e792a71a3e2cec1d2b8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the class modeled by this Class object</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이 Class 객체에 의해 모델링 된 클래스의 유형</target>
        </trans-unit>
        <trans-unit id="6a10d71c9544aa30de9000ede99d090af94ffe16" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the directory entry</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 디렉토리 엔트리의 타입</target>
        </trans-unit>
        <trans-unit id="9549d9cee7c699a0b8274a3017b7b5f02dae0c98" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the elements to be compared</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 비교할 요소의 유형</target>
        </trans-unit>
        <trans-unit id="b9c4bb5f90b70160debe3ee58693ee340668c12b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the first argument and return type</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 첫 번째 인수의 유형 및 반환 유형</target>
        </trans-unit>
        <trans-unit id="8b681f9e7080c8abbcdee564ec228f4ebd7863ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the first argument to the function</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 함수의 첫 번째 인수 유형</target>
        </trans-unit>
        <trans-unit id="4e3d8c3de6cbb88379f1a361f339b1bbbb833726" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the first argument to the operation</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 연산에 대한 첫 번째 인수 유형</target>
        </trans-unit>
        <trans-unit id="aa193d645a48c827ddf3a1545df3fa2307578e30" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the first argument to the predicate</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 술어에 대한 첫 번째 인수의 유형</target>
        </trans-unit>
        <trans-unit id="c56903cc97f1f2d7086b48bf58a99dce227705d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the given value</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 주어진 값의 유형</target>
        </trans-unit>
        <trans-unit id="cac53549d455b5a2bf3867e165af8512e8e7acb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the input and output objects to the function</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 함수에 대한 입력 및 출력 객체의 유형</target>
        </trans-unit>
        <trans-unit id="68640d99c7a18750e9cd0942b4b62d19205b7b9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the input and output of the operator</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 연산자의 입력 및 출력 유형</target>
        </trans-unit>
        <trans-unit id="a2b83a626d9213453f289dc471336ba074eb53f6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the input arguments of the comparator</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 비교기의 입력 인수 유형</target>
        </trans-unit>
        <trans-unit id="70f6723a14337a9687ee5de2e2afd0915b1e8691" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the input elements</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 입력 요소의 유형</target>
        </trans-unit>
        <trans-unit id="44dc8f3f4d22df083c419651f005df4985d921d9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the input to the function</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 함수에 대한 입력 유형</target>
        </trans-unit>
        <trans-unit id="35b31df6dde3cf3bf77a28028131ec59e384dded" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the input to the operation</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 조작에 대한 입력 유형</target>
        </trans-unit>
        <trans-unit id="ce6707f1c83b8a3c294b65acd01d9e8bef51e712" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the input to the predicate</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 술어에 대한 입력 유형</target>
        </trans-unit>
        <trans-unit id="7bca4f7884584fbaa3fd0ffba8772c9a01bfcc95" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the interface to return</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 돌려주는 인터페이스의 형태</target>
        </trans-unit>
        <trans-unit id="18dae9a9ce7946ae0724256a3a3f66524cb82211" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the key specification to be returned</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 리턴되는 키 스펙의 유형</target>
        </trans-unit>
        <trans-unit id="47684611245a4f5d32b62af46fc6ea72aed0e074" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the listeners</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 청취자의 유형</target>
        </trans-unit>
        <trans-unit id="e2ae405e6055b25e9202ac0ac81eb565866c058b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the object argument to the operation</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 오퍼레이션에 대한 오브젝트 인수의 유형</target>
        </trans-unit>
        <trans-unit id="45e85fb646af102c1adb8bf87b76c164d3ce10eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the object contained in this &lt;code&gt;MarshalledObject&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이 &lt;code&gt;MarshalledObject&lt;/code&gt; 에 포함 된 객체의 유형</target>
        </trans-unit>
        <trans-unit id="b21ff4b2e0e2eebfa1c88afad30cc7b9996bcc63" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the object.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 객체의 유형</target>
        </trans-unit>
        <trans-unit id="becf93f4a01f01068c7e65992ef38285f9cbfbea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the objects being compared</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 비교되는 객체의 유형</target>
        </trans-unit>
        <trans-unit id="8cc0bfb3f1957810d3af548e73706e9e5617d71d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the operand and result of the operator</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 피연산자의 유형 및 연산자 결과</target>
        </trans-unit>
        <trans-unit id="26f09fbdf46686e2f90aebc3c53d61cceeef8be8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the operands and result of the operator</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 피연산자의 유형 및 연산자 결과</target>
        </trans-unit>
        <trans-unit id="15ed04f1dcc982708e4a3a939d92c04e57224a50" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the parameter specification to be returned</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 돌려 주어지는 파라미터 사양의 타입</target>
        </trans-unit>
        <trans-unit id="d24c9a8abc52c268bf3346fd1089a31e28648bc3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the parameter specification to be returrned</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 복귀 될 매개 변수 스펙의 유형</target>
        </trans-unit>
        <trans-unit id="7cdbd72fdf517c06b7f628192a27c3b45b78d547" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the parsed date-time</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 구문 분석 된 날짜-시간의 유형</target>
        </trans-unit>
        <trans-unit id="9acad769e7d26a3fe6da32df1d90545d3bfc588e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the provider.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 제공자의 유형</target>
        </trans-unit>
        <trans-unit id="80b2f8b1cabba95e828480d55ac0debcbc9cd001" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the providerClass.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -providerClass의 유형</target>
        </trans-unit>
        <trans-unit id="81cd480f9d14170f1a3531ba6e5522199210bd89" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the reference</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 참조의 유형</target>
        </trans-unit>
        <trans-unit id="1d4de4b8079f5b846a32b6568b343fa2904d8981" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the response body</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 응답 본문의 유형</target>
        </trans-unit>
        <trans-unit id="b4396fad93eeddb93d8956c9145f39f6ae948bbd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the result</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 결과 유형</target>
        </trans-unit>
        <trans-unit id="80173e36df471c58a4f04fd7674a5d43d6fc717a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the returned object</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 리턴 된 객체의 유형</target>
        </trans-unit>
        <trans-unit id="ac2ad655c0f8328d9ffb2ca6b004134da346272c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the specified service attribute</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 지정된 서비스 속성의 유형</target>
        </trans-unit>
        <trans-unit id="44673dcaf70f8aa5e118746b3de82d33c5c07231" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the stream elements</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 스트림 요소의 유형</target>
        </trans-unit>
        <trans-unit id="9f2d39b6154690473e0e6893f737725f0168a3ae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the task's result</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 작업 결과의 유형</target>
        </trans-unit>
        <trans-unit id="f405495302573d670c731bf44a1c167c15dc3e21" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the value</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 값의 유형</target>
        </trans-unit>
        <trans-unit id="c1c16e92f8552aeba666ea5c50bd898863f23215" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the value returned by the PrivilegedAction's &lt;code&gt;run&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -PrivilegedAction의 &lt;code&gt;run&lt;/code&gt; 메소드에 의해 반환되는 값의 형태</target>
        </trans-unit>
        <trans-unit id="deed75bc874cc70808c03de65b7db8dc25132740" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the value returned by the PrivilegedExceptionAction's &lt;code&gt;run&lt;/code&gt; method.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; -PrivilegedExceptionAction의 &lt;code&gt;run&lt;/code&gt; 메소드에 의해 반환되는 값의 형태</target>
        </trans-unit>
        <trans-unit id="4bdffd7889694767db1bafada2de1bcd23ac9a88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of the values returned from the tasks</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 작업에서 반환 된 값의 유형</target>
        </trans-unit>
        <trans-unit id="ebf7e42b9937a552e320ebfc2477f34914cbb28c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type of value</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 값의 유형</target>
        </trans-unit>
        <trans-unit id="59428a59ca9a50996a11b7c8f5fcfbfa8d5e30ec" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the type to create</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 작성하는 타입</target>
        </trans-unit>
        <trans-unit id="1fc9caee45321f54280450d3054df76fe913707b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - the upstream body type</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 업스트림 바디 유형</target>
        </trans-unit>
        <trans-unit id="489f06a30f4c9b0beea8f4f10922320abc8cf80a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - type of array elements. The same type as &lt;code&gt;&amp;lt;E&amp;gt;&lt;/code&gt; or a supertype of &lt;code&gt;&amp;lt;E&amp;gt;&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 배열 요소의 유형. 동일한 유형 &lt;code&gt;&amp;lt;E&amp;gt;&lt;/code&gt; 또는 퍼 &lt;code&gt;&amp;lt;E&amp;gt;&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="eca52f2edd0cdd42202143edb7543d5c3caa84eb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - type of elements</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 요소 유형</target>
        </trans-unit>
        <trans-unit id="0b8712e3259af20a9d4779b07315c2ec973a94d3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - type of elements of the array</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 배열 요소의 유형</target>
        </trans-unit>
        <trans-unit id="4d419ac65868afa900a3eeed66b2fc9a067bbb44" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - type of elements, if there were any, in the iterator</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 이터레이터에있는 요소의 유형</target>
        </trans-unit>
        <trans-unit id="dc381accfd565a819c19b3cd043c48cda30079d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; - type of elements, if there were any, in the list</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; - 목록에 요소 유형 (있는 경우)</target>
        </trans-unit>
        <trans-unit id="b333607a5dad535096412fb29813ff0afdf79549" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; calls &lt;code&gt;CV.get(C)&lt;/code&gt; and sees state &lt;code&gt;2N&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 는 &lt;code&gt;CV.get(C)&lt;/code&gt; 호출 하고 상태 &lt;code&gt;2N&lt;/code&gt; 을 본다</target>
        </trans-unit>
        <trans-unit id="debf04b3e8c832efa23f4e8f265391ccfb3b2019" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; is hit by an unlucky paging or scheduling event, and goes to sleep for a long time</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 는 운이 좋지 않은 페이징 또는 스케줄링 이벤트에 부딪 히고 오랫동안 절전 모드로 전환됩니다</target>
        </trans-unit>
        <trans-unit id="ddd6b5ec0d47218d597ec98392c5e3acccb67f57" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T&lt;/code&gt; quickly computes a time-dependent value &lt;code&gt;V0&lt;/code&gt; and gets ready to install it</source>
          <target state="translated">&lt;code&gt;T&lt;/code&gt; 는 시간에 따른 값 &lt;code&gt;V0&lt;/code&gt; 을 빠르게 계산 하여 설치할 준비를합니다.</target>
        </trans-unit>
        <trans-unit id="d8bb1672c90fd2e5c04c0f2b4739cb10e5727eb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TAB&lt;/code&gt; on &lt;code&gt;KEY_PRESSED&lt;/code&gt;, &lt;code&gt;CTRL-TAB&lt;/code&gt; on &lt;code&gt;KEY_PRESSED&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;TAB&lt;/code&gt; 의 &lt;code&gt;KEY_PRESSED&lt;/code&gt; , &lt;code&gt;CTRL-TAB&lt;/code&gt; 의 &lt;code&gt;KEY_PRESSED&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fc15634895fb2a6a9dab2dc1f2d283da581eac1d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TIFFTag.TIFF_BYTE&lt;/code&gt; and &lt;code&gt;TIFF_UNDEFINED&lt;/code&gt; data are treated as unsigned; that is, no sign extension will take place and the returned value will be in the range [0, 255]. &lt;code&gt;TIFF_SBYTE&lt;/code&gt; data will be returned in the range [-128, 127].</source>
          <target state="translated">&lt;code&gt;TIFFTag.TIFF_BYTE&lt;/code&gt; 및 &lt;code&gt;TIFF_UNDEFINED&lt;/code&gt; 데이터는 서명되지 않은 데이터로 처리됩니다. 즉, 부호 확장이 발생하지 않고 반환 된 값은 [0, 255] 범위에 있습니다. &lt;code&gt;TIFF_SBYTE&lt;/code&gt; 데이터는 [-128, 127] 범위에서 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="6555f67562224b0c38d87a71c15ddc2e24a5c2a5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TIFFTag.TIFF_BYTE&lt;/code&gt; values are treated as unsigned; that is, no sign extension will take place and the returned value will be in the range [0, 255]. &lt;code&gt;TIFF_SBYTE&lt;/code&gt; data will be returned in the range [-128, 127].</source>
          <target state="translated">&lt;code&gt;TIFFTag.TIFF_BYTE&lt;/code&gt; 값은 부호없는 것으로 처리됩니다. 즉, 부호 확장이 발생하지 않고 반환 된 값은 [0, 255] 범위에 있습니다. &lt;code&gt;TIFF_SBYTE&lt;/code&gt; 데이터는 [-128, 127] 범위에서 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="ac105a47efe304846054ede3e79d7c5bc3ac84b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TOOLKIT_EXCLUDE&lt;/code&gt; indicates that a top-level window won't be blocked by application-modal or toolkit-modal dialogs.</source>
          <target state="translated">&lt;code&gt;TOOLKIT_EXCLUDE&lt;/code&gt; 는 최상위 창이 응용 프로그램 모달 또는 도구 키트 모달 대화 상자에 의해 차단되지 않음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="3658f6a36a72b7acd30cdcd8d93f78064b100d19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TOOLKIT_EXCLUDE&lt;/code&gt; indicates that a top-level window won't be blocked by application-modal or toolkit-modal dialogs. Also, it isn't blocked by document-modal dialogs from outside of its child hierarchy. The &quot;toolkitModality&quot; &lt;code&gt;AWTPermission&lt;/code&gt; must be granted for this exclusion. If an exclusion property is being changed to &lt;code&gt;TOOLKIT_EXCLUDE&lt;/code&gt; and this permission is not granted, a &lt;code&gt;SecurityException&lt;/code&gt; will be thrown, and the exclusion property will be left unchanged.</source>
          <target state="translated">&lt;code&gt;TOOLKIT_EXCLUDE&lt;/code&gt; 는 최상위 창이 응용 프로그램 모달 또는 도구 키트 모달 대화 상자에 의해 차단되지 않음을 나타냅니다. 또한 자식 계층 외부의 문서 모달 대화 상자에 의해 차단되지 않습니다. 이 제외를 위해 &quot;toolkitModality&quot; &lt;code&gt;AWTPermission&lt;/code&gt; 이 부여되어야합니다. 제외 속성이 &lt;code&gt;TOOLKIT_EXCLUDE&lt;/code&gt; 로 변경 되고이 권한이 부여되지 않은 경우 &lt;code&gt;SecurityException&lt;/code&gt; 이 throw되고 제외 속성은 변경되지 않은 상태로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="8ceebe37d28f1d72259de8b4f6f6bed19c0e2774" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRACE&lt;/code&gt; level: usually used to log diagnostic information.</source>
          <target state="translated">&lt;code&gt;TRACE&lt;/code&gt; 수준 : 일반적으로 진단 정보를 기록하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="81bb88067a4bdb25a62e15116e4e0d89a91a9817" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TRACE&lt;/code&gt; level: usually used to log diagnostic information. This level &lt;a href=&quot;#getSeverity()&quot;&gt;severity&lt;/a&gt; is &lt;code&gt;400&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TRACE&lt;/code&gt; 수준 : 일반적으로 진단 정보를 기록하는 데 사용됩니다. 이 수준의 &lt;a href=&quot;#getSeverity()&quot;&gt;심각도&lt;/a&gt; 는 &lt;code&gt;400&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="6073ed2a61c61a6b0c3558edd63d7267bc2bca2b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TT_EOF&lt;/code&gt; indicates that the end of the input stream has been reached.</source>
          <target state="translated">&lt;code&gt;TT_EOF&lt;/code&gt; 는 입력 스트림의 끝에 도달했음을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f5eb51cddaa885c174d7dcbc27b63eedce532c84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TT_EOL&lt;/code&gt; indicates that the end of line has been read. The field can only have this value if the &lt;code&gt;eolIsSignificant&lt;/code&gt; method has been called with the argument &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TT_EOL&lt;/code&gt; 은 행 의 끝을 읽었 음을 나타냅니다. &lt;code&gt;eolIsSignificant&lt;/code&gt; 메소드가 &lt;code&gt;true&lt;/code&gt; 인수와 함께 호출 된 경우에만 필드에이 값이있을 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="efd51c0b8c2f459d05a267806dfd4bb9612e4501" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TT_NUMBER&lt;/code&gt; indicates that the token is a number.</source>
          <target state="translated">&lt;code&gt;TT_NUMBER&lt;/code&gt; 는 토큰이 숫자임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="f851fdc074d99c72743403f807590d318ac36beb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TT_WORD&lt;/code&gt; indicates that the token is a word.</source>
          <target state="translated">&lt;code&gt;TT_WORD&lt;/code&gt; 는 토큰이 단어임을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="9889519c55285db83d0858e95e04828c9bbf376c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T_CONS&lt;/code&gt; - the type of primitive consumer. The type must be a primitive specialization of &lt;a href=&quot;function/consumer&quot;&gt;&lt;code&gt;Consumer&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;T&lt;/code&gt;, such as &lt;a href=&quot;function/intconsumer&quot;&gt;&lt;code&gt;IntConsumer&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;Integer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T_CONS&lt;/code&gt; - 원시 소비자의 유형 형식은 &lt;a href=&quot;function/intconsumer&quot;&gt; &lt;code&gt;IntConsumer&lt;/code&gt; &lt;/a&gt; for &lt;code&gt;Integer&lt;/code&gt; 와 같이 &lt;a href=&quot;function/consumer&quot;&gt; &lt;code&gt;Consumer&lt;/code&gt; &lt;/a&gt; for &lt;code&gt;T&lt;/code&gt; 의 기본 전문화 형식이어야합니다 .</target>
        </trans-unit>
        <trans-unit id="8946cc3bab0a07cc64da8eaf862b04a37945cdd3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;T_SPLITR&lt;/code&gt; - the type of primitive Spliterator. The type must be a primitive specialization of Spliterator for &lt;code&gt;T&lt;/code&gt;, such as &lt;a href=&quot;spliterator.ofint&quot;&gt;&lt;code&gt;Spliterator.OfInt&lt;/code&gt;&lt;/a&gt; for &lt;code&gt;Integer&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;T_SPLITR&lt;/code&gt; - 프리미티브 스플리터 유형. 형식은 &lt;a href=&quot;spliterator.ofint&quot;&gt; &lt;code&gt;Spliterator.OfInt&lt;/code&gt; &lt;/a&gt; for &lt;code&gt;Integer&lt;/code&gt; 와 같이 &lt;code&gt;T&lt;/code&gt; 의 Spliterator의 기본 특수화 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="d049f46d2474ce1ba87c4b76f1e2a534ac247a71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TableRowSorter&lt;/code&gt; has one formal type parameter: the type of the model. Passing in a type that corresponds exactly to your model allows you to filter based on your model without casting. Refer to the documentation of &lt;code&gt;RowFilter&lt;/code&gt; for an example of this.</source>
          <target state="translated">&lt;code&gt;TableRowSorter&lt;/code&gt; 에는 모델 유형이라는 하나의 형식적인 유형 매개 변수가 있습니다. 모델과 정확히 일치하는 유형을 전달하면 캐스팅하지 않고 모델을 기반으로 필터링 할 수 있습니다. 이에 대한 예는 &lt;code&gt;RowFilter&lt;/code&gt; 의 문서를 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="fcd5fd8d2aef7b6517fc0160560c6d05ad825756" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TableRowSorter&lt;/code&gt; uses &lt;code&gt;Comparator&lt;/code&gt;s for doing comparisons. The following defines how a &lt;code&gt;Comparator&lt;/code&gt; is chosen for a column:</source>
          <target state="translated">&lt;code&gt;TableRowSorter&lt;/code&gt; 는 &lt;code&gt;Comparator&lt;/code&gt; 위해 Comparator를 사용합니다 . 다음은 열에 대해 &lt;code&gt;Comparator&lt;/code&gt; 가 선택되는 방법을 정의합니다 .</target>
        </trans-unit>
        <trans-unit id="6779735dfab929c65689057d35373bc5a5248d11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TabularData&lt;/code&gt; is an interface. The concrete class that is used to represent a &lt;code&gt;Map&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; as Open Data is &lt;a href=&quot;openmbean/tabulardatasupport&quot;&gt;&lt;code&gt;TabularDataSupport&lt;/code&gt;&lt;/a&gt;, or another class implementing &lt;code&gt;
      TabularData&lt;/code&gt; that serializes as &lt;code&gt;TabularDataSupport&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TabularData&lt;/code&gt; 는 인터페이스입니다. &lt;code&gt;Map&amp;lt;&lt;/code&gt; &lt;em&gt;K&lt;/em&gt; , &lt;em&gt;V &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 를 Open Data 로 표현하는 데 사용되는 구체적인 클래스 는 &lt;a href=&quot;openmbean/tabulardatasupport&quot;&gt; &lt;code&gt;TabularDataSupport&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt; TabularData&lt;/code&gt; Support 로 직렬화되는 &lt;code&gt;TabularDataSupport&lt;/code&gt; 구현하는 다른 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="f8015b96c4c9d6fa6a946d1650ba28e9e976ccdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TabularData&lt;/code&gt; is an interface. The concrete class that is used to represent a &lt;code&gt;Map&amp;lt;&lt;/code&gt;&lt;em&gt;K&lt;/em&gt;,&lt;em&gt;V&lt;/em&gt;&lt;code&gt;&amp;gt;&lt;/code&gt; as Open Data is &lt;a href=&quot;openmbean/tabulardatasupport&quot;&gt;&lt;code&gt;TabularDataSupport&lt;/code&gt;&lt;/a&gt;, or another class implementing &lt;code&gt;TabularData&lt;/code&gt; that serializes as &lt;code&gt;TabularDataSupport&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TabularData&lt;/code&gt; 는 인터페이스입니다. 열린 데이터로서 &lt;code&gt;Map&amp;lt;&lt;/code&gt; &lt;em&gt;K&lt;/em&gt; , &lt;em&gt;V &lt;/em&gt; &lt;code&gt;&amp;gt;&lt;/code&gt; 를 나타내는 데 사용되는 구체적 클래스 는 &lt;a href=&quot;openmbean/tabulardatasupport&quot;&gt; &lt;code&gt;TabularDataSupport&lt;/code&gt; &lt;/a&gt; 또는 &lt;code&gt;TabularData&lt;/code&gt; Support 로 직렬화되는 &lt;code&gt;TabularDataSupport&lt;/code&gt; 구현하는 다른 클래스 입니다.</target>
        </trans-unit>
        <trans-unit id="4f3e3e46f41ecd5e9c2acaa0a8d6543be9071177" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Test.java&lt;/code&gt; (this URI depends on the current directory and does not have a schema)</source>
          <target state="translated">&lt;code&gt;Test.java&lt;/code&gt; (이 URI는 현재 디렉토리에 따라 다르며 스키마가 없음)</target>
        </trans-unit>
        <trans-unit id="f47587cb189526b690a98ea9f4c19578c16e7281" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TextAttribute&lt;/code&gt; instances are used as attribute keys to identify attributes in &lt;a href=&quot;../font&quot;&gt;&lt;code&gt;Font&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;textlayout&quot;&gt;&lt;code&gt;TextLayout&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;../../../../java.base/java/text/attributedcharacteriterator&quot;&gt;&lt;code&gt;AttributedCharacterIterator&lt;/code&gt;&lt;/a&gt;, and other classes handling text attributes. Other constants defined in this class can be used as attribute values.</source>
          <target state="translated">&lt;code&gt;TextAttribute&lt;/code&gt; 인스턴스는 &lt;a href=&quot;../font&quot;&gt; &lt;code&gt;Font&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;textlayout&quot;&gt; &lt;code&gt;TextLayout&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;../../../../java.base/java/text/attributedcharacteriterator&quot;&gt; &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; &lt;/a&gt; 및 텍스트 속성을 처리하는 기타 클래스의 속성을 식별하기위한 속성 키로 사용됩니다 . 이 클래스에 정의 된 다른 상수를 속성 값으로 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7992d2b3b8edc628d055c1a5086a828713f16c71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TextField&lt;/code&gt; used when no editor is supplied.</source>
          <target state="translated">&lt;code&gt;TextField&lt;/code&gt; 편집기가 제공되지 않을 때 사용되는 TextField 입니다.</target>
        </trans-unit>
        <trans-unit id="854160f68dfed927f4b9630c2b536cb98f6c7e93" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TextField&lt;/code&gt; used when no editor is supplied. This textfield locks into the border it is constructed with. It also prefers its parents font over its font. And if the renderer is not &lt;code&gt;null&lt;/code&gt; and no font has been specified the preferred height is that of the renderer.</source>
          <target state="translated">&lt;code&gt;TextField&lt;/code&gt; 편집기가 제공되지 않을 때 사용되는 TextField 입니다. 이 텍스트 필드는 구성되는 테두리에 고정됩니다. 또한 글꼴보다 상위 글꼴을 선호합니다. 렌더러가 &lt;code&gt;null&lt;/code&gt; 이 아니고 글꼴이 지정되지 않은 경우 선호하는 높이는 렌더러의 높이입니다.</target>
        </trans-unit>
        <trans-unit id="5be3ab5ff881db0becf6e1b30ec4a0c9039b4d17" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TextHitInfo&lt;/code&gt; is used primarily by &lt;a href=&quot;textlayout&quot;&gt;&lt;code&gt;TextLayout&lt;/code&gt;&lt;/a&gt; and clients of &lt;code&gt;TextLayout&lt;/code&gt;. Clients of &lt;code&gt;TextLayout&lt;/code&gt; query &lt;code&gt;TextHitInfo&lt;/code&gt; instances for an insertion offset, where new text is inserted into the text model. The insertion offset is equal to the character position in the &lt;code&gt;TextHitInfo&lt;/code&gt; if the bias is leading, and one character after if the bias is trailing. The insertion offset for TextHitInfo.trailing(1) is 2.</source>
          <target state="translated">&lt;code&gt;TextHitInfo&lt;/code&gt; 를가 주로 사용 &lt;a href=&quot;textlayout&quot;&gt; &lt;code&gt;TextLayout&lt;/code&gt; &lt;/a&gt; 와의 클라이언트 &lt;code&gt;TextLayout&lt;/code&gt; . &lt;code&gt;TextLayout&lt;/code&gt; 의 클라이언트는 텍스트 모델에 새 텍스트가 삽입되는 삽입 오프셋에 대해 &lt;code&gt;TextHitInfo&lt;/code&gt; 인스턴스를 쿼리 합니다 . 삽입 오프셋은 편향이 선행 인 경우 &lt;code&gt;TextHitInfo&lt;/code&gt; 의 문자 위치와 같고 편향이 후행 인 경우 한 문자 뒤입니다. TextHitInfo.trailing (1)의 삽입 오프셋은 2입니다.</target>
        </trans-unit>
        <trans-unit id="21746d3d1ba4bc743c969db27754eb44b9d760b1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TextLayout&lt;/code&gt; and &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; work in terms of &lt;code&gt;Maps&lt;/code&gt; of &lt;code&gt;TextAttributes&lt;/code&gt;. Normally, all the attributes are examined and used to select and configure a &lt;code&gt;Font&lt;/code&gt; instance. If a &lt;code&gt;FONT&lt;/code&gt; attribute is present, though, its associated &lt;code&gt;Font&lt;/code&gt; will be used. This provides a way for users to override the resolution of font attributes into a &lt;code&gt;Font&lt;/code&gt;, or force use of a particular &lt;code&gt;Font&lt;/code&gt; instance. This also allows users to specify subclasses of &lt;code&gt;Font&lt;/code&gt; in cases where a &lt;code&gt;Font&lt;/code&gt; can be subclassed.</source>
          <target state="translated">&lt;code&gt;TextLayout&lt;/code&gt; 및 &lt;code&gt;AttributedCharacterIterator&lt;/code&gt; 는 &lt;code&gt;TextAttributes&lt;/code&gt; 의 &lt;code&gt;Maps&lt;/code&gt; 측면에서 작동 합니다. 일반적으로 모든 속성을 검사하고 &lt;code&gt;Font&lt;/code&gt; 인스턴스 를 선택하고 구성하는 데 사용 합니다. 그러나 &lt;code&gt;FONT&lt;/code&gt; 속성이 있으면 연관된 &lt;code&gt;Font&lt;/code&gt; 이 사용됩니다. 이는 사용자가 글꼴 속성의 해상도를 &lt;code&gt;Font&lt;/code&gt; 로 재정의 하거나 특정 &lt;code&gt;Font&lt;/code&gt; 인스턴스를 강제로 사용할 수있는 방법을 제공 합니다. 이것은 또한 사용자가 &lt;code&gt;Font&lt;/code&gt; 가 서브 클래 싱 될 수있는 경우 에 &lt;code&gt;Font&lt;/code&gt; 의 서브 클래스를 지정할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="c9206993b34370c65a293507f9222f026a919487" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TextLayout&lt;/code&gt; can be constructed either directly or through the use of a &lt;a href=&quot;linebreakmeasurer&quot;&gt;&lt;code&gt;LineBreakMeasurer&lt;/code&gt;&lt;/a&gt;. When constructed directly, the source text represents a single paragraph. &lt;code&gt;LineBreakMeasurer&lt;/code&gt; allows styled text to be broken into lines that fit within a particular width. See the &lt;code&gt;LineBreakMeasurer&lt;/code&gt; documentation for more information.</source>
          <target state="translated">&lt;code&gt;TextLayout&lt;/code&gt; 은 직접 또는 &lt;a href=&quot;linebreakmeasurer&quot;&gt; &lt;code&gt;LineBreakMeasurer&lt;/code&gt; 를&lt;/a&gt; 사용하여 생성 할 수 있습니다 . 직접 구성 할 경우 소스 텍스트는 단일 단락을 나타냅니다. &lt;code&gt;LineBreakMeasurer&lt;/code&gt; 를 사용하면 스타일이 지정된 텍스트를 특정 너비에 맞는 줄로 나눌 수 있습니다. 자세한 내용은 &lt;code&gt;LineBreakMeasurer&lt;/code&gt; 설명서를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="157b5b930035e0c574f70f0366cf835201bcc683" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TextLayout&lt;/code&gt; construction logically proceeds as follows:</source>
          <target state="translated">&lt;code&gt;TextLayout&lt;/code&gt; 생성은 논리적으로 다음과 같이 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="ea04e75b8e25bd4c141974ac164d951b3bab021a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TextLayout&lt;/code&gt; is an immutable graphical representation of styled character data.</source>
          <target state="translated">&lt;code&gt;TextLayout&lt;/code&gt; 은 스타일이 지정된 문자 데이터의 변경 불가능한 그래픽 표현입니다.</target>
        </trans-unit>
        <trans-unit id="fb584bf364754eab57d03b84ffbd48abbea33263" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TextLayout&lt;/code&gt; objects are constructed from styled text, but they do not retain a reference to their source text. Thus, changes in the text previously used to generate a &lt;code&gt;TextLayout&lt;/code&gt; do not affect the &lt;code&gt;TextLayout&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TextLayout&lt;/code&gt; 객체는 스타일이 지정된 텍스트로 구성되지만 소스 텍스트에 대한 참조를 유지하지 않습니다. 따라서 이전에 &lt;code&gt;TextLayout&lt;/code&gt; 을 생성하는 데 사용 된 텍스트의 변경 사항 은 &lt;code&gt;TextLayout&lt;/code&gt; 에 영향을주지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b050c89af895af3fcad9ebf97e98f96ed2335cc1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ThaiBuddhistEra&lt;/code&gt; is an enum representing the Thai Buddhist eras of BEFORE_BE/BE. This factory allows the enum to be obtained from the &lt;code&gt;int&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;ThaiBuddhistEra&lt;/code&gt; 는 BEFORE_BE / BE의 태국 불교 시대를 나타내는 열거 형입니다. 이 팩토리는, 열거 치를 &lt;code&gt;int&lt;/code&gt; 치 로부터 취득 할 수 있도록합니다 .</target>
        </trans-unit>
        <trans-unit id="5c4d45cb7957486f12e908f40c547b884f4043de" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Thread.State&lt;/code&gt; of the associated thread.</source>
          <target state="translated">&lt;code&gt;Thread.State&lt;/code&gt; 관련 스레드.</target>
        </trans-unit>
        <trans-unit id="ad55d822c5d5bb7cfcde0075896e55f2e14713a9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ThreadInfo&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; with attributes as specified in the &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;ThreadInfo&lt;/code&gt; 는 &lt;a href=&quot;#from(javax.management.openmbean.CompositeData)&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt; 메서드에 지정된 속성 을 사용하여 &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 에&lt;/a&gt; 매핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="b3f64812c70947e5be04f46eae19fea68b65b3a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ThreadInfo&lt;/code&gt; is mapped to a &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt;&lt;code&gt;CompositeData&lt;/code&gt;&lt;/a&gt; with attributes as specified in the &lt;a href=&quot;threadinfo#from-javax.management.openmbean.CompositeData-&quot;&gt;&lt;code&gt;from&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">&lt;code&gt;ThreadInfo&lt;/code&gt; 는 &lt;a href=&quot;threadinfo#from-javax.management.openmbean.CompositeData-&quot;&gt; &lt;code&gt;from&lt;/code&gt; &lt;/a&gt; 메소드에 지정된 속성 을 가진 &lt;a href=&quot;../../../javax/management/openmbean/compositedata&quot;&gt; &lt;code&gt;CompositeData&lt;/code&gt; 에&lt;/a&gt; 맵핑됩니다 .</target>
        </trans-unit>
        <trans-unit id="35936a1be93b023bb0091510408628ebb0c94c65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Time&lt;/code&gt; class -- mapping for SQL &lt;code&gt;TIME&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Time&lt;/code&gt; 클래스-SQL &lt;code&gt;TIME&lt;/code&gt; 매핑</target>
        </trans-unit>
        <trans-unit id="2ffc8cc6fc275caf38e26a7dc94a7d0d94db6c35" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TimeZone&lt;/code&gt; represents a time zone offset, and also figures out daylight savings.</source>
          <target state="translated">&lt;code&gt;TimeZone&lt;/code&gt; 은 표준 시간대 오프셋을 나타내며 일광 절약 시간도 계산합니다.</target>
        </trans-unit>
        <trans-unit id="f128b747774e6b526609577cf8098ba942ecee1a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timers&lt;/code&gt; are constructed by specifying both a delay parameter and an &lt;code&gt;ActionListener&lt;/code&gt;. The delay parameter is used to set both the initial delay and the delay between event firing, in milliseconds. Once the timer has been started, it waits for the initial delay before firing its first &lt;code&gt;ActionEvent&lt;/code&gt; to registered listeners. After this first event, it continues to fire events every time the between-event delay has elapsed, until it is stopped.</source>
          <target state="translated">&lt;code&gt;Timers&lt;/code&gt; 는 delay 매개 변수와 &lt;code&gt;ActionListener&lt;/code&gt; 를 모두 지정하여 구성됩니다 . 지연 매개 변수는 초기 지연과 이벤트 발생 사이의 지연을 밀리 초 단위로 설정하는 데 사용됩니다. 타이머가 시작되면 등록 된 리스너에게 첫 번째 &lt;code&gt;ActionEvent&lt;/code&gt; 를 발생시키기 전에 초기 지연을 기다립니다 . 이 첫 번째 이벤트 이후에는 중지 될 때까지 이벤트 간 지연이 경과 할 때마다 이벤트가 계속 발생합니다.</target>
        </trans-unit>
        <trans-unit id="8019ed93b039a63a8dc41b5d95314824fd681ec1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Timestamp&lt;/code&gt; class -- mapping for SQL &lt;code&gt;TIMESTAMP&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Timestamp&lt;/code&gt; 클래스-SQL &lt;code&gt;TIMESTAMP&lt;/code&gt; 매핑</target>
        </trans-unit>
        <trans-unit id="c08cda3bc9232e693472d0333038a209fa1ab2a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TitledBorder.BOTTOM&lt;/code&gt; (sitting on the bottom line)</source>
          <target state="translated">&lt;code&gt;TitledBorder.BOTTOM&lt;/code&gt; (하단에 있음)</target>
        </trans-unit>
        <trans-unit id="e5f7409d966726013cc957a3757e75e0c22b0655" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TitledBorder.DEFAULT_JUSTIFICATION&lt;/code&gt; (leading)</source>
          <target state="translated">&lt;code&gt;TitledBorder.DEFAULT_JUSTIFICATION&lt;/code&gt; (선행)</target>
        </trans-unit>
        <trans-unit id="214c4434a48e695ac0eecf3609dff79578e0c06a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TitledBorder.DEFAULT_POSITION&lt;/code&gt; (the title position is determined by the current look and feel)</source>
          <target state="translated">&lt;code&gt;TitledBorder.DEFAULT_POSITION&lt;/code&gt; (제목 위치는 현재 룩앤필에 따라 결정됨)</target>
        </trans-unit>
        <trans-unit id="ef1fef8667124070fb9647a45bca2a6c3b471364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TitledBorder.TOP&lt;/code&gt; (sitting on the top line)</source>
          <target state="translated">&lt;code&gt;TitledBorder.TOP&lt;/code&gt; (맨 위 줄에 앉음 )</target>
        </trans-unit>
        <trans-unit id="84770ed13f2b6b50bbbcbc649c670503174e9880" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TransferableProxy&lt;/code&gt; is a helper inner class that implements &lt;code&gt;Transferable&lt;/code&gt; interface and serves as a proxy for another &lt;code&gt;Transferable&lt;/code&gt; object which represents data transfer for a particular drag-n-drop operation.</source>
          <target state="translated">&lt;code&gt;TransferableProxy&lt;/code&gt; 는 &lt;code&gt;Transferable&lt;/code&gt; 인터페이스 를 구현 하고 특정 끌어서 놓기 작업에 대한 데이터 전송을 나타내는 다른 &lt;code&gt;Transferable&lt;/code&gt; 개체에 대한 프록시 역할을 하는 도우미 내부 클래스입니다 .</target>
        </trans-unit>
        <trans-unit id="ee7e275ddec65256965ecce05bf8a28d8862703c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TransformService&lt;/code&gt; implementations are registered and loaded using the &lt;a href=&quot;../../../../../java.base/java/security/provider&quot;&gt;&lt;code&gt;Provider&lt;/code&gt;&lt;/a&gt; mechanism. Each &lt;code&gt;TransformService&lt;/code&gt; service provider implementation should include a &lt;code&gt;MechanismType&lt;/code&gt; service attribute that identifies the XML mechanism type that it supports. If the attribute is not specified, &quot;DOM&quot; is assumed. For example, a service provider that supports the XPath Filter 2 Transform and DOM mechanism would be specified in the &lt;code&gt;Provider&lt;/code&gt; subclass as:</source>
          <target state="translated">&lt;code&gt;TransformService&lt;/code&gt; 구현은 &lt;a href=&quot;../../../../../java.base/java/security/provider&quot;&gt; &lt;code&gt;Provider&lt;/code&gt; &lt;/a&gt; 메커니즘을 사용하여 등록 및로드됩니다 . 각 &lt;code&gt;TransformService&lt;/code&gt; 서비스 공급자 구현에는 지원하는 XML 메커니즘 유형을 식별 하는 &lt;code&gt;MechanismType&lt;/code&gt; 서비스 속성 이 포함되어야 합니다. 속성을 지정하지 않으면 &quot;DOM&quot;으로 간주됩니다. 예를 들어 XPath Filter 2 Transform 및 DOM 메커니즘을 지원하는 서비스 공급자는 &lt;code&gt;Provider&lt;/code&gt; 하위 클래스에 다음과 같이 지정 됩니다.</target>
        </trans-unit>
        <trans-unit id="e6f91533174d7109b0e0bde09cac6462245873af" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TransformService&lt;/code&gt; implementations that support the DOM mechanism type must abide by the DOM interoperability requirements defined in the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_xmldsig_rqmts&quot;&gt;DOM Mechanism Requirements&lt;/a&gt; section of the API overview. See the &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_xmldsig_provider&quot;&gt;Service Providers&lt;/a&gt; section of the API overview for a list of standard mechanism types.</source>
          <target state="translated">&lt;code&gt;TransformService&lt;/code&gt; DOM 메커니즘 유형을 지원하는 TransformService 구현 은 API 개요 의 &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_xmldsig_rqmts&quot;&gt;DOM 메커니즘 요구 사항&lt;/a&gt; 섹션에 정의 된 DOM 상호 운용성 요구 사항을 준수해야합니다 . 표준 메커니즘 유형 목록은 API 개요 의 &lt;a href=&quot;https://www.oracle.com/pls/topic/lookup?ctx=javase11&amp;amp;id=security_guide_xmldsig_provider&quot;&gt;서비스 제공 업체&lt;/a&gt; 섹션을 참조하세요 .</target>
        </trans-unit>
        <trans-unit id="488cbd88dcd4e9963e1cff5709f21c7639faf090" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Transformer&lt;/code&gt; associated with this &lt;code&gt;TransformerHandler&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Transformer&lt;/code&gt; 관련된 &lt;code&gt;TransformerHandler&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="560b5e4111ba979a35778e76b72d3de74a939e04" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Transformer&lt;/code&gt; is reset to the same state as when it was created with &lt;a href=&quot;transformerfactory#newTransformer()&quot;&gt;&lt;code&gt;TransformerFactory.newTransformer()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;transformerfactory#newTransformer(javax.xml.transform.Source)&quot;&gt;&lt;code&gt;TransformerFactory.newTransformer(Source source)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;templates#newTransformer()&quot;&gt;&lt;code&gt;Templates.newTransformer()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;reset()&lt;/code&gt; is designed to allow the reuse of existing &lt;code&gt;Transformer&lt;/code&gt;s thus saving resources associated with the creation of new &lt;code&gt;Transformer&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;Transformer&lt;/code&gt; 는 &lt;a href=&quot;transformerfactory#newTransformer()&quot;&gt; &lt;code&gt;TransformerFactory.newTransformer()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;transformerfactory#newTransformer(javax.xml.transform.Source)&quot;&gt; &lt;code&gt;TransformerFactory.newTransformer(Source source)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;templates#newTransformer()&quot;&gt; &lt;code&gt;Templates.newTransformer()&lt;/code&gt; &lt;/a&gt; 로 생성되었을 때와 동일한 상태로 재설정됩니다 . &lt;code&gt;reset()&lt;/code&gt; 은 기존 &lt;code&gt;Transformer&lt;/code&gt; 를 재사용 할 수 있도록 설계되어 새로운 &lt;code&gt;Transformer&lt;/code&gt; 생성과 관련된 리소스를 절약합니다 .</target>
        </trans-unit>
        <trans-unit id="3052bf5e75911d860b3c70caab3b6b1a42353185" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Transformer&lt;/code&gt;s may use this mechanism to report XML parsing errors as well as transformation errors.</source>
          <target state="translated">&lt;code&gt;Transformer&lt;/code&gt; 는이 메커니즘을 사용하여 XML 구문 분석 오류와 변환 오류를보고 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a0fd069e9de500d2f19365b13885ae9b6724ecbf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TreePath&lt;/code&gt; is used extensively by &lt;code&gt;JTree&lt;/code&gt; and related classes. For example, &lt;code&gt;JTree&lt;/code&gt; represents the selection as an array of &lt;code&gt;TreePath&lt;/code&gt;s. When used with &lt;code&gt;JTree&lt;/code&gt;, the elements of the path are the objects returned from the &lt;code&gt;TreeModel&lt;/code&gt;. When &lt;code&gt;JTree&lt;/code&gt; is paired with &lt;code&gt;DefaultTreeModel&lt;/code&gt;, the elements of the path are &lt;code&gt;TreeNode&lt;/code&gt;s. The following example illustrates extracting the user object from the selection of a &lt;code&gt;JTree&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;TreePath&lt;/code&gt; 는 &lt;code&gt;JTree&lt;/code&gt; 및 관련 클래스에서 광범위하게 사용됩니다 . 예를 들어, &lt;code&gt;JTree&lt;/code&gt; 는 선택 항목을 &lt;code&gt;TreePath&lt;/code&gt; 배열로 나타냅니다 . &lt;code&gt;JTree&lt;/code&gt; 와 함께 사용할 때 경로의 요소는 &lt;code&gt;TreeModel&lt;/code&gt; 에서 반환 된 객체 입니다. 경우 &lt;code&gt;JTree&lt;/code&gt; 페어링되어 &lt;code&gt;DefaultTreeModel&lt;/code&gt; 의 경로의 요소는 다음 &lt;code&gt;TreeNode&lt;/code&gt; 들. 다음 예제는 &lt;code&gt;JTree&lt;/code&gt; 선택에서 사용자 객체를 추출하는 방법을 보여줍니다 .</target>
        </trans-unit>
        <trans-unit id="56cdeff63230c52d67510d5ad2b9054fcba9534b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TreePath&lt;/code&gt; represents an array of objects that uniquely identify the path to a node in a tree.</source>
          <target state="translated">&lt;code&gt;TreePath&lt;/code&gt; 는 트리의 노드에 대한 경로를 고유하게 식별하는 개체의 배열을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="fcf4f03feeea4fafa22e7b043fef7d95918161db" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TreePath&lt;/code&gt; represents an array of objects that uniquely identify the path to a node in a tree. The elements of the array are ordered with the root as the first element of the array. For example, a file on the file system is uniquely identified based on the array of parent directories and the name of the file. The path &lt;code&gt;/tmp/foo/bar&lt;/code&gt; could be represented by a &lt;code&gt;TreePath&lt;/code&gt; as &lt;code&gt;new TreePath(new Object[] {&quot;tmp&quot;, &quot;foo&quot;, &quot;bar&quot;})&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TreePath&lt;/code&gt; 는 트리의 노드에 대한 경로를 고유하게 식별하는 개체의 배열을 나타냅니다. 배열의 요소는 배열의 첫 번째 요소로 루트를 사용하여 정렬됩니다. 예를 들어, 파일 시스템의 파일은 상위 디렉토리 배열과 파일 이름을 기반으로 고유하게 식별됩니다. 경로 &lt;code&gt;/tmp/foo/bar&lt;/code&gt; a로 표현 될 수 &lt;code&gt;TreePath&lt;/code&gt; 에 같은 &lt;code&gt;new TreePath(new Object[] {&quot;tmp&quot;, &quot;foo&quot;, &quot;bar&quot;})&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="a0794c01d912727887c2f225cc7a5dd52b560352" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TreeTraverseAction&lt;/code&gt; is the action used for left/right keys.</source>
          <target state="translated">&lt;code&gt;TreeTraverseAction&lt;/code&gt; 은 왼쪽 / 오른쪽 키에 사용되는 작업입니다.</target>
        </trans-unit>
        <trans-unit id="ec3be1fce2da42800a3357605cb3fc9b9a0250d7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TreeTraverseAction&lt;/code&gt; is the action used for left/right keys. Will toggle the expandedness of a node, as well as potentially incrementing the selection.</source>
          <target state="translated">&lt;code&gt;TreeTraverseAction&lt;/code&gt; 은 왼쪽 / 오른쪽 키에 사용되는 작업입니다. 노드의 확장 성을 토글하고 잠재적으로 선택을 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="a062b40be2f7857e3264c39a988906c59b2ab9da" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TreeWalker&lt;/code&gt; objects are used to navigate a document tree or subtree using the view of the document defined by their &lt;code&gt;whatToShow&lt;/code&gt; flags and filter (if any).</source>
          <target state="translated">&lt;code&gt;TreeWalker&lt;/code&gt; 개체는 &lt;code&gt;whatToShow&lt;/code&gt; 플래그 및 필터 (있는 경우)로 정의 된 문서보기를 사용하여 문서 트리 또는 하위 트리를 탐색하는 데 사용됩니다 .</target>
        </trans-unit>
        <trans-unit id="1e8298addb9cba9665a606ad6bd0d7fa36f039aa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TreeWalker&lt;/code&gt; objects are used to navigate a document tree or subtree using the view of the document defined by their &lt;code&gt;whatToShow&lt;/code&gt; flags and filter (if any). Any function which performs navigation using a &lt;code&gt;TreeWalker&lt;/code&gt; will automatically support any view defined by a &lt;code&gt;TreeWalker&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;TreeWalker&lt;/code&gt; 개체는 &lt;code&gt;whatToShow&lt;/code&gt; 플래그 및 필터 (있는 경우)로 정의 된 문서보기를 사용하여 문서 트리 또는 하위 트리를 탐색하는 데 사용됩니다 . 하여 탐색을 수행하는 함수 &lt;code&gt;TreeWalker&lt;/code&gt; 가 자동적으로 정의 된 뷰 지원 &lt;code&gt;TreeWalker&lt;/code&gt; 를 .</target>
        </trans-unit>
        <trans-unit id="6680a4c4e64d284bc9ce46fd3b27d9826827ea8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if this attribute was explicitly given a value in the instance document, &lt;code&gt;false&lt;/code&gt; otherwise.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 이 속성이 명시 적으로 인스턴스 문서에 값, 주어진 경우 &lt;code&gt;false&lt;/code&gt; , 그렇지.</target>
        </trans-unit>
        <trans-unit id="f490c4c1aedfffb9ac1cdcc4b9a80461ea806f45" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;True&lt;/code&gt; if this attribute was explicitly given a value in the instance document, &lt;code&gt;false&lt;/code&gt; otherwise. If the application changed the value of this attribute node (even if it ends up having the same value as the default value) then it is set to &lt;code&gt;true&lt;/code&gt;. The implementation may handle attributes with default values from other schemas similarly but applications should use &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; to guarantee this information is up-to-date.</source>
          <target state="translated">&lt;code&gt;True&lt;/code&gt; 이 속성이 명시 적으로 인스턴스 문서에 값, 주어진 경우 &lt;code&gt;false&lt;/code&gt; , 그렇지. 애플리케이션이이 속성 노드의 값을 변경 한 경우 (기본값과 동일한 값을 가지더라도) &lt;code&gt;true&lt;/code&gt; 로 설정됩니다 . 구현시 다른 스키마의 기본값이있는 속성을 유사하게 처리 할 수 ​​있지만 응용 프로그램은 &lt;code&gt;Document.normalizeDocument()&lt;/code&gt; 를 사용 하여이 정보가 최신 상태인지 확인해야합니다.</target>
        </trans-unit>
        <trans-unit id="12ab7448769c7b4b51030a13680545fc15273380" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TrustManager&lt;/code&gt;s are created by either using a &lt;code&gt;TrustManagerFactory&lt;/code&gt;, or by implementing one of the &lt;code&gt;TrustManager&lt;/code&gt; subclasses.</source>
          <target state="translated">&lt;code&gt;TrustManager&lt;/code&gt; 는 &lt;code&gt;TrustManagerFactory&lt;/code&gt; 를 사용 하거나 &lt;code&gt;TrustManager&lt;/code&gt; 서브 클래스 중 하나를 구현하여 작성 됩니다.</target>
        </trans-unit>
        <trans-unit id="d516a9be4be27871294be0d622fed08577c0d963" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;TrustManager&lt;/code&gt;s are responsible for managing the trust material that is used when making trust decisions, and for deciding whether credentials presented by a peer should be accepted.</source>
          <target state="translated">&lt;code&gt;TrustManager&lt;/code&gt; 는 트러스트 결정을 할 때 사용되는 트러스트 자료를 관리하고 피어가 제공 한 자격 증명을 수락해야하는지 여부를 결정합니다.</target>
        </trans-unit>
        <trans-unit id="7f17b74e5ebb265ac06db7b98d25ea24d5cda6d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tuesday&lt;/code&gt;; &lt;code&gt;Tue&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Tuesday&lt;/code&gt; ; &lt;code&gt;Tue&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="8c18f14b50a2f963796add7c9ff42a496ddabfb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tx&lt;/code&gt; - the &lt;code&gt;AffineTransform&lt;/code&gt; object from which to copy the transform</source>
          <target state="translated">&lt;code&gt;Tx&lt;/code&gt; - &lt;code&gt;AffineTransform&lt;/code&gt; 복사 해 객체 변환</target>
        </trans-unit>
        <trans-unit id="313071fb403eacbe5038bf9d445d6a7a9af26c9b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tx&lt;/code&gt; - the &lt;code&gt;AffineTransform&lt;/code&gt; object to be composed with the current &lt;code&gt;Transform&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Tx&lt;/code&gt; - &lt;code&gt;AffineTransform&lt;/code&gt; 개체를 현재로 구성되는 &lt;code&gt;Transform&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b8c0e2052c50e293df3d3a5ef900bdc8e6b77ece" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tx&lt;/code&gt; - the &lt;code&gt;AffineTransform&lt;/code&gt; object to be concatenated with this &lt;code&gt;AffineTransform&lt;/code&gt; object.</source>
          <target state="translated">&lt;code&gt;Tx&lt;/code&gt; - &lt;code&gt;AffineTransform&lt;/code&gt; 객체는이와 연결되는 &lt;code&gt;AffineTransform&lt;/code&gt; 객체입니다.</target>
        </trans-unit>
        <trans-unit id="53f3f7b3d471a1bd9b10c9c223edb4d1eea4787c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tx&lt;/code&gt; - the &lt;code&gt;AffineTransform&lt;/code&gt; object to copy</source>
          <target state="translated">&lt;code&gt;Tx&lt;/code&gt; - 복사 할 &lt;code&gt;AffineTransform&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="9f5f93a64c5dcef342f0b3af1a29700f554bf1c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Tx&lt;/code&gt; - the &lt;code&gt;AffineTransform&lt;/code&gt; that was retrieved from the &lt;code&gt;getTransform&lt;/code&gt; method</source>
          <target state="translated">&lt;code&gt;Tx&lt;/code&gt; - &lt;code&gt;getTransform&lt;/code&gt; 메소드 에서 검색된 &lt;code&gt;AffineTransform&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a6d8b09c47fe6343f23392a27a5a7aa74202e787" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type.SORTED&lt;/code&gt;: indicates the contents of the model have been transformed in some way. For example, the contents may have been sorted or filtered.</source>
          <target state="translated">&lt;code&gt;Type.SORTED&lt;/code&gt; : 모델의 내용이 어떤 방식 으로든 변형되었음을 나타냅니다. 예를 들어 내용이 정렬되거나 필터링되었을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="33e8eb1d62899b96a1b86c7b1e8ac99a5c5fead8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Type.SORT_ORDER_CHANGED&lt;/code&gt;: indicates the sort order has changed. This is typically followed by a notification of:</source>
          <target state="translated">&lt;code&gt;Type.SORT_ORDER_CHANGED&lt;/code&gt; : 정렬 순서가 변경되었음을 나타냅니다. 일반적으로 다음에 대한 알림이 이어집니다.</target>
        </trans-unit>
        <trans-unit id="10490341b6d96d198df6047a771077bae4b3f095" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Types&lt;/code&gt; class -- provides constants for SQL types</source>
          <target state="translated">&lt;code&gt;Types&lt;/code&gt; 클래스-SQL 유형에 대한 상수 제공</target>
        </trans-unit>
        <trans-unit id="7da436487a1b3b0d6dea6f04bbfcfa8365ae3fc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - The type of the result</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 결과 유형</target>
        </trans-unit>
        <trans-unit id="fad4430994741bca8af96b561888ae3e7dfcc2f8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - The type of the result of the mapping function</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 맵핑 함수 결과의 유형</target>
        </trans-unit>
        <trans-unit id="a1a56d1eda2061b58f1a7bc2b8b5fc5dd12fc7fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - The type of the value returned from the mapping function</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 매핑 함수에서 반환 된 값의 유형</target>
        </trans-unit>
        <trans-unit id="89b64d3554886cb26c8a8e5d0ca93c5f360e1235" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - The type of value of the &lt;code&gt;Optional&lt;/code&gt; returned by the mapping function</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 매핑 함수에 의해 반환 된 &lt;code&gt;Optional&lt;/code&gt; 값의 유형</target>
        </trans-unit>
        <trans-unit id="5bb1c88c25030fafc65b427fa28a3e5b5a5e0774" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - The type parameter to the &lt;code&gt;Optional&lt;/code&gt; returned by</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; 는 -받는 사람 유형 매개 변수 &lt;code&gt;Optional&lt;/code&gt; 에 의해 반환</target>
        </trans-unit>
        <trans-unit id="9c7ee0dd786efe3dbc8d48bdff64b116502c4803" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the class of the objects in the original array</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 원래 배열의 객체 클래스</target>
        </trans-unit>
        <trans-unit id="1f1268b5feccde3d1289fc2abaac47f0a6658051" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the element type of the new stream</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 새로운 스트림의 요소 형</target>
        </trans-unit>
        <trans-unit id="f3b745cfb12ff6e0b4da48652dac4e76ad9893a7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the function's return type</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 함수의 반환 유형</target>
        </trans-unit>
        <trans-unit id="74ac6d25f4cac988a4cefb312091df448a306f97" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the output type of the value mapping function</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 값 매핑 함수의 출력 유형</target>
        </trans-unit>
        <trans-unit id="99bc2146b102c0bd5de65e4329f702aa334b6239" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the response body type</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 응답 본문 유형</target>
        </trans-unit>
        <trans-unit id="15394a55ed23a73fba7849d21e225ab4637de123" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the return type of the search function</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 검색 함수의 리턴 유형</target>
        </trans-unit>
        <trans-unit id="e9a5ae4318157515036c39e274ff4986e27bb869" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the return type of the transformer</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 변압기의 반환 유형</target>
        </trans-unit>
        <trans-unit id="e49667fd278b07d4d8b79336e328ee8edad30c3a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the type of instances of tclass</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; -tclass 인스턴스 유형</target>
        </trans-unit>
        <trans-unit id="93619ad2668f65f27f6ab9b6f7cedaa84bc49eef" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the type of the &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; sort key</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; -&lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; &lt;/a&gt; 정렬 키 의 유형</target>
        </trans-unit>
        <trans-unit id="504e5e9a161f8065b1501b9188ac0a9e6995bebc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the type of the &lt;code&gt;Comparable&lt;/code&gt; sort key</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - &lt;code&gt;Comparable&lt;/code&gt; 정렬 키 의 유형</target>
        </trans-unit>
        <trans-unit id="a8cc1f0271091e3c229b8ae5602251f048d747d8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the type of the body subscriber returned</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 반환 된 본문 구독자의 유형</target>
        </trans-unit>
        <trans-unit id="07a67f4ad8ec627c017acf1582c92e1eb80403ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the type of the mapped values</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 매핑 된 값의 유형</target>
        </trans-unit>
        <trans-unit id="d8662076f5ae759ebc3137e3c5fa1b83009e4855" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the type of the other CompletionStage's result</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 다른 CompletionStage의 결과 유형</target>
        </trans-unit>
        <trans-unit id="9af6c2960342ad5f00c83accc0dcc6f97643c658" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the type of the response body</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 응답 본문의 유형</target>
        </trans-unit>
        <trans-unit id="35900c72c903d52986d44cc30e016fcd82c7018e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the type of the returned CompletionStage's result</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 리턴 된 CompletionStage 결과의 유형</target>
        </trans-unit>
        <trans-unit id="731b6f960699d0f69285d1047fde03eaf896e254" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the type of the second argument the predicate</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 술어의 두 번째 인수 유형</target>
        </trans-unit>
        <trans-unit id="dd30739b6e6aefdeccdcf9138c1b0fc768ca5922" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the type of the second argument to the function</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 함수에 대한 두 번째 인수의 유형</target>
        </trans-unit>
        <trans-unit id="f2f99a6c39e96a4f59c5e72162695700f69856a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the type of the second argument to the operation</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 연산에 대한 두 번째 인수의 유형</target>
        </trans-unit>
        <trans-unit id="48707043bea7574e1191b6d6a6eba45f9eb19e52" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the type of the sort key</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 정렬 키의 유형</target>
        </trans-unit>
        <trans-unit id="a6e70f222e03a53fe6258bfa2f9f2015c95a9add" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the type of the value</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 값의 타입</target>
        </trans-unit>
        <trans-unit id="474d2c90526db098803c10f3b20753b1924cc5d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - the type to cast this class object to</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 이 클래스 객체를 캐스트하는 타입</target>
        </trans-unit>
        <trans-unit id="2a78302fb4d9365520fd2f8e4ed348e337c84b75" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;U&lt;/code&gt; - type of elements accepted by downstream collector</source>
          <target state="translated">&lt;code&gt;U&lt;/code&gt; - 다운 스트림 컬렉터가 허용하는 요소 유형</target>
        </trans-unit>
        <trans-unit id="72426425325d0ae94f56386fce03f83d8374dee2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UIDefaults&lt;/code&gt; from the current look and feel</source>
          <target state="translated">&lt;code&gt;UIDefaults&lt;/code&gt; 현재 룩앤필의 UIDefaults</target>
        </trans-unit>
        <trans-unit id="270249ef31fb2ff8a7bdeccee08cfbab0e1f0366" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UIManager&lt;/code&gt; manages the current look and feel, the set of available look and feels, &lt;code&gt;PropertyChangeListeners&lt;/code&gt; that are notified when the look and feel changes, look and feel defaults, and convenience methods for obtaining various default values.</source>
          <target state="translated">&lt;code&gt;UIManager&lt;/code&gt; 는 현재 룩앤필, 사용 가능한 룩앤필 세트 , 룩앤필이 변경 될 때 알림을받는 &lt;code&gt;PropertyChangeListeners&lt;/code&gt; , 룩앤필 기본값, 다양한 기본값을 얻기위한 편리한 메소드를 관리합니다.</target>
        </trans-unit>
        <trans-unit id="aa3370508858d194d3a313417585ba39815a7a81" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UIManager&lt;/code&gt; manages three sets of &lt;code&gt;UIDefaults&lt;/code&gt;. In order, they are:</source>
          <target state="translated">&lt;code&gt;UIManager&lt;/code&gt; 는 세 세트의 &lt;code&gt;UIDefaults&lt;/code&gt; 를 관리합니다 . 순서대로 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="cd3c4bc132d0bf481cebf19c231bd8d128b01600" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UPDATE&lt;/code&gt; - some of the table data has changed</source>
          <target state="translated">&lt;code&gt;UPDATE&lt;/code&gt; -일부 테이블 데이터가 변경되었습니다.</target>
        </trans-unit>
        <trans-unit id="e55df04c8bcbda04a14611084b9418e411539eb9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UPDATE_WHEN_ON_EDT&lt;/code&gt;: acts like &lt;code&gt;ALWAYS_UPDATE&lt;/code&gt; if the document updates are performed on the Event Dispatching Thread and like &lt;code&gt;NEVER_UPDATE&lt;/code&gt; if updates are performed on other thread.</source>
          <target state="translated">&lt;code&gt;UPDATE_WHEN_ON_EDT&lt;/code&gt; : 문서 업데이트가 Event Dispatching Thread에서 수행되면 &lt;code&gt;ALWAYS_UPDATE&lt;/code&gt; 처럼 작동 하고 다른 스레드에서 업데이트가 수행되면 &lt;code&gt;NEVER_UPDATE&lt;/code&gt; 처럼 작동합니다.</target>
        </trans-unit>
        <trans-unit id="413577f9513a906a46d9a8ea74ba52982b9db287" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;URL&lt;/code&gt; object for reading the resource; &lt;code&gt;null&lt;/code&gt; if the resource could not be found, a &lt;code&gt;URL&lt;/code&gt; could not be constructed to locate the resource, the resource is in a package that is not opened unconditionally, or access to the resource is denied by the security manager.</source>
          <target state="translated">&lt;code&gt;URL&lt;/code&gt; 리소스를 읽기위한 URL 개체입니다. 리소스 를 찾을 수 없거나 리소스를 찾기 위한 &lt;code&gt;URL&lt;/code&gt; 을 구성 할 수 없거나 리소스가 무조건 열리지 않은 패키지에 있거나 보안 관리자가 리소스에 대한 액세스를 거부 한 경우 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9b9b949118ee8f071d339c49f07c02baa545b26b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UndoManager&lt;/code&gt; maintains an ordered list of edits and the index of the next edit in that list. The index of the next edit is either the size of the current list of edits, or if &lt;code&gt;undo&lt;/code&gt; has been invoked it corresponds to the index of the last significant edit that was undone. When &lt;code&gt;undo&lt;/code&gt; is invoked all edits from the index of the next edit to the last significant edit are undone, in reverse order. For example, consider an &lt;code&gt;UndoManager&lt;/code&gt; consisting of the following edits: &lt;b&gt;A&lt;/b&gt;</source>
          <target state="translated">&lt;code&gt;UndoManager&lt;/code&gt; 는 정렬 된 편집 목록과 해당 목록의 다음 편집 색인을 유지합니다. 다음 편집의 색인은 현재 편집 목록의 크기이거나 &lt;code&gt;undo&lt;/code&gt; 가 호출 된 경우 실행 취소 된 마지막 중요 편집의 색인에 해당합니다. &lt;code&gt;undo&lt;/code&gt; 가 호출 되면 다음 편집의 색인에서 마지막 중요한 편집까지의 모든 편집이 역순으로 실행 취소됩니다. 예를 들어, 다음 편집으로 구성된 &lt;code&gt;UndoManager&lt;/code&gt; 를 고려하십시오 . &lt;b&gt;A&lt;/b&gt;</target>
        </trans-unit>
        <trans-unit id="e28d777895266f4ab2d862475bec152a6d83c866" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UndoManager&lt;/code&gt; manages a list of &lt;code&gt;UndoableEdits&lt;/code&gt;, providing a way to undo or redo the appropriate edits.</source>
          <target state="translated">&lt;code&gt;UndoManager&lt;/code&gt; 는 &lt;code&gt;UndoableEdits&lt;/code&gt; 목록을 관리 하여 적절한 편집을 실행 취소하거나 다시 실행할 수있는 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="6101cfc41898d3d243a62ac0ed39e888a28c25ea" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UndoManager&lt;/code&gt; manages a list of &lt;code&gt;UndoableEdits&lt;/code&gt;, providing a way to undo or redo the appropriate edits. There are two ways to add edits to an &lt;code&gt;UndoManager&lt;/code&gt;. Add the edit directly using the &lt;code&gt;addEdit&lt;/code&gt; method, or add the &lt;code&gt;UndoManager&lt;/code&gt; to a bean that supports &lt;code&gt;UndoableEditListener&lt;/code&gt;. The following examples creates an &lt;code&gt;UndoManager&lt;/code&gt; and adds it as an &lt;code&gt;UndoableEditListener&lt;/code&gt; to a &lt;code&gt;JTextField&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;UndoManager&lt;/code&gt; 는 &lt;code&gt;UndoableEdits&lt;/code&gt; 목록을 관리 하여 적절한 편집을 실행 취소하거나 다시 실행할 수있는 방법을 제공합니다. &lt;code&gt;UndoManager&lt;/code&gt; 에 편집 내용을 추가하는 방법에는 두 가지가 있습니다 . &lt;code&gt;addEdit&lt;/code&gt; 메소드를 사용하여 직접 &lt;code&gt;UndoManager&lt;/code&gt; 을 추가하거나 &lt;code&gt;UndoableEditListener&lt;/code&gt; 를 지원하는 Bean에 UndoManager 를 추가하십시오 . 다음 예제는 &lt;code&gt;UndoManager&lt;/code&gt; 를 만들고 &lt;code&gt;JTextField&lt;/code&gt; 에 &lt;code&gt;UndoableEditListener&lt;/code&gt; 로 추가합니다 .</target>
        </trans-unit>
        <trans-unit id="48dc4d5ed08d96154c7ef8e998565bd4449fa57b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;UndoableEdit&lt;/code&gt; is designed to be used with the &lt;code&gt;UndoManager&lt;/code&gt;. As &lt;code&gt;UndoableEdit&lt;/code&gt;s are generated by an &lt;code&gt;UndoableEditListener&lt;/code&gt; they are typically added to the &lt;code&gt;UndoManager&lt;/code&gt;. When an &lt;code&gt;UndoableEdit&lt;/code&gt; is added to an &lt;code&gt;UndoManager&lt;/code&gt; the following occurs (assuming &lt;code&gt;end&lt;/code&gt; has not been called on the &lt;code&gt;UndoManager&lt;/code&gt;):</source>
          <target state="translated">&lt;code&gt;UndoableEdit&lt;/code&gt; 는 &lt;code&gt;UndoManager&lt;/code&gt; 와 함께 사용하도록 설계되었습니다 . 마찬가지로 &lt;code&gt;UndoableEdit&lt;/code&gt; 에의 S가함으로써 생성된다 &lt;code&gt;UndoableEditListener&lt;/code&gt; 에 그들이 일반적으로 첨가 &lt;code&gt;UndoManager&lt;/code&gt; . 때 &lt;code&gt;UndoableEdit&lt;/code&gt; 에가 내지 An 첨가 &lt;code&gt;UndoManager&lt;/code&gt; 다음은 (발생 가정 &lt;code&gt;end&lt;/code&gt; 상의 호출되지 않은 &lt;code&gt;UndoManager&lt;/code&gt; )</target>
        </trans-unit>
        <trans-unit id="a54b81b8084a89e34286bffd523a3544b84378dd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - The &lt;code&gt;FileAttributeView&lt;/code&gt; type</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - &lt;code&gt;FileAttributeView&lt;/code&gt; 유형</target>
        </trans-unit>
        <trans-unit id="2cd735bbe120e2afe2f79dbe6438a7ad2493a438" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - The &lt;code&gt;FileStoreAttributeView&lt;/code&gt; type</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - &lt;code&gt;FileStoreAttributeView&lt;/code&gt; 유형</target>
        </trans-unit>
        <trans-unit id="7beb001593a3e0479fb33b39fdf9053372678729" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - The result type of the I/O operation</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; -I / O 조작의 결과 유형</target>
        </trans-unit>
        <trans-unit id="90f3e8f91506407991c86162fbe24fc104c76969" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - The result type returned by this Future</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - 이 미래가 반환 한 결과 유형</target>
        </trans-unit>
        <trans-unit id="c02266edf7e9a075dccfc88c1fff84d0346ce935" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - The result type returned by this Future's &lt;code&gt;get&lt;/code&gt; method</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - 이 Future의 &lt;code&gt;get&lt;/code&gt; 메소드에 의해 반환되는 결과 형</target>
        </trans-unit>
        <trans-unit id="abc3732b9244554624d8605cbcfdbbfdd6fb4676" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - The result type returned by this FutureTask's &lt;code&gt;get&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - 이 FutureTask의 &lt;code&gt;get&lt;/code&gt; 메소드가 돌려주는 결과 형</target>
        </trans-unit>
        <trans-unit id="b8eed1aeb237cf6eeaf4323f01441a802253f1e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - The type of object referred to by this reference</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - 이 참조가 참조하는 객체의 유형</target>
        </trans-unit>
        <trans-unit id="edabe946dc79569f63d382eceeb92207521b0c56" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - The type of objects that may be exchanged</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - 교환 될 수있는 객체의 유형</target>
        </trans-unit>
        <trans-unit id="1877d58403399fb3e2139c37ebe4899a9275d443" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - The type of the field</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - 필드의 유형</target>
        </trans-unit>
        <trans-unit id="8fa0f9bb4fac3781e4dd9b7502c69551fd7141c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - one of the super types of &lt;code&gt;JLayer&lt;/code&gt;'s view component</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - &lt;code&gt;JLayer&lt;/code&gt; 의 뷰 컴포넌트 의 수퍼 유형 중 하나</target>
        </trans-unit>
        <trans-unit id="84867109c0288a19472ac2e12d454029d6ef0a4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the &lt;a href=&quot;../lang/comparable&quot;&gt;&lt;code&gt;Comparable&lt;/code&gt;&lt;/a&gt; type of the map values</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - &lt;a href=&quot;../lang/comparable&quot;&gt; &lt;code&gt;Comparable&lt;/code&gt; 를&lt;/a&gt; 지도 값의 유형</target>
        </trans-unit>
        <trans-unit id="dd34436a55e7091dd0ab285c599b22c5cc860803" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the &lt;code&gt;Map&lt;/code&gt;'s value type</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - &lt;code&gt;Map&lt;/code&gt; 의 값 유형</target>
        </trans-unit>
        <trans-unit id="5fabd512431357cdf3817d0d404a0b9aa0554a18" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the class of the map values</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - 지도 값의 클래스</target>
        </trans-unit>
        <trans-unit id="24afab00ab2d396886b777e71711a33d81d2f511" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the function's return type</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - 함수의 반환 유형</target>
        </trans-unit>
        <trans-unit id="fd0965149bec2388f930519695a8794af7337c3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the result type of method &lt;code&gt;call&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - 메소드 &lt;code&gt;call&lt;/code&gt; 의 결과 유형</target>
        </trans-unit>
        <trans-unit id="344977c5eecd3d87001a11a7b8f62e7ef4e9e73b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the type of &lt;code&gt;JLayer&lt;/code&gt;'s view component</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - &lt;code&gt;JLayer&lt;/code&gt; 의 뷰 컴포넌트 유형</target>
        </trans-unit>
        <trans-unit id="9371a00d8a98c5189e6720e50838ea953171395c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the type of input to the &lt;code&gt;before&lt;/code&gt; function, and to the composed function</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - &lt;code&gt;before&lt;/code&gt; 함수 및 작성된 함수에 대한 입력 유형</target>
        </trans-unit>
        <trans-unit id="5c4a6edec879dacbdd7dd593c2d1fbba14c8ee33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the type of mapped values</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - 매핑 된 값의 유형</target>
        </trans-unit>
        <trans-unit id="ba4350524287d2de88c32b2d0dc6d263ae60d3cf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the type of output of the &lt;code&gt;after&lt;/code&gt; function, and of the composed function</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - &lt;code&gt;after&lt;/code&gt; 함수 및 구성된 함수 의 출력 유형</target>
        </trans-unit>
        <trans-unit id="86bee36724da1cf713c7e6b0e0cd49f4e92ac6e9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the type of the callable's result</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - 호출 가능 결과의 유형</target>
        </trans-unit>
        <trans-unit id="a4bdf1b0ff04c2b7988fdd682addbc356e216bdc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the type of the map values</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - 지도 값의 유형</target>
        </trans-unit>
        <trans-unit id="cbd146472ea3754ec5673abd2aeec356f8bc4b11" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the type of the task's result</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - 작업 결과의 유형</target>
        </trans-unit>
        <trans-unit id="e5869040d11a64188b889d71e97ede8aa17229ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the type used for carrying out intermediate results by this &lt;code&gt;SwingWorker's&lt;/code&gt;&lt;code&gt;publish&lt;/code&gt; and &lt;code&gt;process&lt;/code&gt; methods</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - 이 &lt;code&gt;SwingWorker's&lt;/code&gt; &lt;code&gt;publish&lt;/code&gt; 및 &lt;code&gt;process&lt;/code&gt; 방법에 의해 중간 결과를 수행하는 데 사용되는 유형</target>
        </trans-unit>
        <trans-unit id="9c85befdd8ff0b916d7be1fab379abe2bbb9c4c7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - the value's type</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - 값의 유형</target>
        </trans-unit>
        <trans-unit id="6c7b9c43f00991234976a17f4b03144ad6547bb8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;V&lt;/code&gt; - type of map values</source>
          <target state="translated">&lt;code&gt;V&lt;/code&gt; - 지도 값의 유형</target>
        </trans-unit>
        <trans-unit id="fbd659cfcff1121d60ddadbd189d2952f372b864" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VERSION = &lt;/code&gt;&lt;var&gt;version&lt;/var&gt;</source>
          <target state="translated">&lt;code&gt;VERSION = &lt;/code&gt; &lt;var&gt;version&lt;/var&gt;</target>
        </trans-unit>
        <trans-unit id="18edaba9dbc62a8f9ebeec8331159eebdfe77963" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VERTICAL&lt;/code&gt;: Make the component tall enough to fill its display area vertically, but do not change its width.</source>
          <target state="translated">&lt;code&gt;VERTICAL&lt;/code&gt; : 디스플레이 영역을 세로로 채울 수있을만큼 구성 요소를 높이지만 너비는 변경하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cf74be951bb5d4dc9df29ff5b3fe4e7e99be4f09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Validator&lt;/code&gt; is reset to the same state as when it was created with &lt;a href=&quot;schema#newValidator()&quot;&gt;&lt;code&gt;Schema.newValidator()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;reset()&lt;/code&gt; is designed to allow the reuse of existing &lt;code&gt;Validator&lt;/code&gt;s thus saving resources associated with the creation of new &lt;code&gt;Validator&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;Validator&lt;/code&gt; 는 &lt;a href=&quot;schema#newValidator()&quot;&gt; &lt;code&gt;Schema.newValidator()&lt;/code&gt; &lt;/a&gt; 로 생성되었을 때와 동일한 상태로 재설정됩니다 . &lt;code&gt;reset()&lt;/code&gt; 은 기존 &lt;code&gt;Validator&lt;/code&gt; 의 재사용을 허용하여 새로운 &lt;code&gt;Validator&lt;/code&gt; 생성과 관련된 자원을 절약 하도록 설계되었습니다 .</target>
        </trans-unit>
        <trans-unit id="391d5de67ee90736fff00b9aaa600c6bdd7d16e7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;VariableElement&lt;/code&gt; (representing an enum constant)</source>
          <target state="translated">&lt;code&gt;VariableElement&lt;/code&gt; (열 상수를 나타냄)</target>
        </trans-unit>
        <trans-unit id="4ff14e60f63f9eef59b3b907b1c4013e529641e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;W&lt;/code&gt; - the type of instances of vclass</source>
          <target state="translated">&lt;code&gt;W&lt;/code&gt; -vclass 인스턴스 유형</target>
        </trans-unit>
        <trans-unit id="aef2f403048d0f85a813683a6eab4eb58047cded" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;W&lt;/code&gt; - the width of the &lt;code&gt;Rectangle&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;W&lt;/code&gt; - &lt;code&gt;Rectangle&lt;/code&gt; 의 너비</target>
        </trans-unit>
        <trans-unit id="78cbe3f33a28c97c685067b4af9d5227f3f0aaa8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WARNING&lt;/code&gt; level: usually used to log warning messages.</source>
          <target state="translated">&lt;code&gt;WARNING&lt;/code&gt; 수준 : 일반적으로 경고 메시지를 기록하는 데 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="1bf8e5a2890221a1df0b5fc10b130e27a1c693c2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WARNING&lt;/code&gt; level: usually used to log warning messages. This level &lt;a href=&quot;#getSeverity()&quot;&gt;severity&lt;/a&gt; is &lt;code&gt;900&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;WARNING&lt;/code&gt; 수준 : 일반적으로 경고 메시지를 기록하는 데 사용됩니다. 이 수준의 &lt;a href=&quot;#getSeverity()&quot;&gt;심각도&lt;/a&gt; 는 &lt;code&gt;900&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="9ed200d4131c96e4d46616eb45e3ae7cb6fa6c4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WEEKS&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of weeks added. This is equivalent to &lt;a href=&quot;#plusWeeks(long)&quot;&gt;&lt;code&gt;plusWeeks(long)&lt;/code&gt;&lt;/a&gt; and uses a 7 day week.</source>
          <target state="translated">&lt;code&gt;WEEKS&lt;/code&gt; - 지정된 주 수가 추가 된 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 이것은 &lt;a href=&quot;#plusWeeks(long)&quot;&gt; &lt;code&gt;plusWeeks(long)&lt;/code&gt; &lt;/a&gt; 와 동일하며 주 7 일을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="d14c47fbfc6f7c417b8ebf36ed5d3717176f1b67" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WEEKS&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of weeks added. This is equivalent to &lt;a href=&quot;localdate#plusWeeks-long-&quot;&gt;&lt;code&gt;plusWeeks(long)&lt;/code&gt;&lt;/a&gt; and uses a 7 day week.</source>
          <target state="translated">&lt;code&gt;WEEKS&lt;/code&gt; - 지정된 주 수가 추가 된 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 이것은 &lt;a href=&quot;localdate#plusWeeks-long-&quot;&gt; &lt;code&gt;plusWeeks(long)&lt;/code&gt; &lt;/a&gt; 와 동일하며 일주일에 7 일을 사용합니다.</target>
        </trans-unit>
        <trans-unit id="23ae49d74165411b73cf73ec0b9767b68760a809" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WINDOW_CLOSING&lt;/code&gt;:</source>
          <target state="translated">&lt;code&gt;WINDOW_CLOSING&lt;/code&gt;:</target>
        </trans-unit>
        <trans-unit id="080c0e0cd27da5cb53ca292ee1429357c9cf60e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WebSocket&lt;/code&gt; handles received Ping and Close messages automatically (as per the WebSocket Protocol) by replying with Pong and Close messages. If the listener receives Ping or Close messages, no mandatory actions from the listener are required.</source>
          <target state="translated">&lt;code&gt;WebSocket&lt;/code&gt; 은 Pong 및 Close 메시지로 응답하여 WebSocket 프로토콜에 따라 수신 된 Ping 및 Close 메시지를 자동으로 처리합니다. 리스너가 Ping 또는 Close 메시지를 수신하는 경우 리스너의 필수 작업이 필요하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1c297133aea6d2fc21b5162728c9ccf99aa50fad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;WebSocket&lt;/code&gt; instances are created through &lt;a href=&quot;websocket.builder&quot;&gt;&lt;code&gt;WebSocket.Builder&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;WebSocket&lt;/code&gt; 인스턴스를 생성 &lt;a href=&quot;websocket.builder&quot;&gt; &lt;code&gt;WebSocket.Builder&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="aea6979c8d85b89a0391a77b2579e8afb1aa75b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Window&lt;/code&gt; objects are the validate roots, and, therefore, they override this method to return &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;Window&lt;/code&gt; 객체는 validate 루트이므로이 메서드를 재정 의하여 &lt;code&gt;true&lt;/code&gt; 를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="bc92beb013bbaf825fc179af79a89b8e3efe393a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; - Type of the exception to be thrown</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; - 발생되는 예외 유형</target>
        </trans-unit>
        <trans-unit id="821ed0e8fecbdfaa5017af9971c38a6eeb21e755" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; - if no value is present</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; - 값이없는 경우</target>
        </trans-unit>
        <trans-unit id="af2a5d87b719dd6ca852861292393527f4d895c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; - if there is no value present</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; - 값이없는 경우</target>
        </trans-unit>
        <trans-unit id="3948d9a52ae3d0fb6788ba215d7da3ffffad7d4b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; - the specified X coordinate</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; - 지정된 X 좌표</target>
        </trans-unit>
        <trans-unit id="a133f935beb152e96face42a1173049404059e2e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; dimension</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; 치수</target>
        </trans-unit>
        <trans-unit id="86f8696e3d7db6d426359d5b0ac2d3389adef950" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;X&lt;/code&gt; dimension (&amp;micro;m)</source>
          <target state="translated">&lt;code&gt;X&lt;/code&gt; 치수 (&amp;micro;m)</target>
        </trans-unit>
        <trans-unit id="cf9135c997facd39c9b97eab0160d3f236d9ca88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLConstants.DEFAULT_NS_PREFIX&lt;/code&gt; (&quot;&quot;)</source>
          <target state="translated">&lt;code&gt;XMLConstants.DEFAULT_NS_PREFIX&lt;/code&gt; ( &quot;&quot;)</target>
        </trans-unit>
        <trans-unit id="25b4203fcfbb9cb3a65f72cbb69b92459efcc360" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLConstants.XMLNS_ATTRIBUTE&lt;/code&gt; (&quot;xmlns&quot;)</source>
          <target state="translated">&lt;code&gt;XMLConstants.XMLNS_ATTRIBUTE&lt;/code&gt; ( &quot;xmlns&quot;)</target>
        </trans-unit>
        <trans-unit id="775f17d1d13cb4b2a9abe220936658ef024e557f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLConstants.XMLNS_ATTRIBUTE_NS_URI&lt;/code&gt; (&quot;http://www.w3.org/2000/xmlns/&quot;)</source>
          <target state="translated">&lt;code&gt;XMLConstants.XMLNS_ATTRIBUTE_NS_URI&lt;/code&gt; ( &quot;http://www.w3.org/2000/xmlns/&quot;)</target>
        </trans-unit>
        <trans-unit id="d744b76a8fe550589569cb7baebaffa39f59ac0f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLConstants.XML_NS_PREFIX&lt;/code&gt; (&quot;xml&quot;)</source>
          <target state="translated">&lt;code&gt;XMLConstants.XML_NS_PREFIX&lt;/code&gt; ( &quot;xml&quot;)</target>
        </trans-unit>
        <trans-unit id="26e0f5f8a2f09e9dc7e9341f54fc7ec7925199d5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLConstants.XML_NS_URI&lt;/code&gt; (&quot;http://www.w3.org/XML/1998/namespace&quot;)</source>
          <target state="translated">&lt;code&gt;XMLConstants.XML_NS_URI&lt;/code&gt; ( &quot;http://www.w3.org/XML/1998/namespace&quot;)</target>
        </trans-unit>
        <trans-unit id="956ed258917bbf02d6e208bbdcc36bb9d225fd1f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLEventReader&lt;/code&gt; must be a non-&lt;code&gt;null&lt;/code&gt; reference.</source>
          <target state="translated">&lt;code&gt;XMLEventReader&lt;/code&gt; 는 &lt;code&gt;null&lt;/code&gt; 이 아닌 참조 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="4f9f31aaaad517f71ad0f567c68345f7b338ebc8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLEventReader&lt;/code&gt; must be in &lt;a href=&quot;../../stream/xmlstreamconstants#START_DOCUMENT&quot;&gt;&lt;code&gt;XMLStreamConstants.START_DOCUMENT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../stream/xmlstreamconstants#START_ELEMENT&quot;&gt;&lt;code&gt;XMLStreamConstants.START_ELEMENT&lt;/code&gt;&lt;/a&gt; state.</source>
          <target state="translated">&lt;code&gt;XMLEventReader&lt;/code&gt; 는 &lt;a href=&quot;../../stream/xmlstreamconstants#START_DOCUMENT&quot;&gt; &lt;code&gt;XMLStreamConstants.START_DOCUMENT&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../stream/xmlstreamconstants#START_ELEMENT&quot;&gt; &lt;code&gt;XMLStreamConstants.START_ELEMENT&lt;/code&gt; &lt;/a&gt; 상태 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="cf3444c900d8738e1e42e51129ddb6359982bd4e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLEventReader&lt;/code&gt; used by this &lt;code&gt;StAXSource&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XMLEventReader&lt;/code&gt; 의는 이에 의해 사용 &lt;code&gt;StAXSource&lt;/code&gt; 의 .</target>
        </trans-unit>
        <trans-unit id="6a9fe7901bfa50acc7195b62588c06059016bbcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLEventReader&lt;/code&gt; will be &lt;code&gt;null&lt;/code&gt;. if this &lt;code&gt;StAXSource&lt;/code&gt; was created with a &lt;code&gt;XMLStreamReader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XMLEventReader&lt;/code&gt; 는 &lt;code&gt;null&lt;/code&gt; 이 됩니다. 이 &lt;code&gt;StAXSource&lt;/code&gt; 가 &lt;code&gt;XMLStreamReader&lt;/code&gt; 로 생성 된 경우 .</target>
        </trans-unit>
        <trans-unit id="7c886435154f13d4059f395f323233a51959979a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLEventWriter&lt;/code&gt; must be a non-&lt;code&gt;null&lt;/code&gt; reference.</source>
          <target state="translated">&lt;code&gt;XMLEventWriter&lt;/code&gt; 는 &lt;code&gt;null&lt;/code&gt; 이 아닌 참조 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="4463cc37f6da374cf64156bb140181fda2b021c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLEventWriter&lt;/code&gt; used by this &lt;code&gt;StAXResult&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XMLEventWriter&lt;/code&gt; 이 &lt;code&gt;StAXResult&lt;/code&gt; 가 사용하는 XMLEventWriter 입니다.</target>
        </trans-unit>
        <trans-unit id="a342ebf2618cedd2c9d98d22a639d387cac13cb2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLEventWriter&lt;/code&gt; will be &lt;code&gt;null&lt;/code&gt; if this &lt;code&gt;StAXResult&lt;/code&gt; was created with a &lt;code&gt;XMLStreamWriter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XMLEventWriter&lt;/code&gt; 이 &lt;code&gt;StAXResult&lt;/code&gt; 가 &lt;code&gt;XMLStreamWriter&lt;/code&gt; 로 생성 된 경우 XMLEventWriter 는 &lt;code&gt;null&lt;/code&gt; 이 됩니다 .</target>
        </trans-unit>
        <trans-unit id="1690983c321426c06ec07061da3734b50b6850e2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLGregorianCalendar eon&lt;/code&gt; and &lt;code&gt;fractionalSecond&lt;/code&gt; are set to &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;XMLGregorianCalendar eon&lt;/code&gt; 및 &lt;code&gt;fractionalSecond&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 로 설정 됨</target>
        </trans-unit>
        <trans-unit id="c38541a9fe8b7ff76edf1bbd53a8923bbce8ec26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLGregorianCalendar&lt;/code&gt; created from &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;XMLGregorianCalendar&lt;/code&gt; &lt;code&gt;java.util.GregorianCalendar&lt;/code&gt; 에서 생성 된 XMLGregorianCalendar</target>
        </trans-unit>
        <trans-unit id="e5d7851f9bb4d52b888a5bfed0755e09f1c3244b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLGregorianCalendar&lt;/code&gt; created from parameter values.</source>
          <target state="translated">&lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 매개 변수 값에서 생성 된 XMLGregorianCalendar .</target>
        </trans-unit>
        <trans-unit id="6d252f85ae2ed0f45b7017ce2da881402f629bae" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLGregorianCalendar&lt;/code&gt; created from specified values.</source>
          <target state="translated">&lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 지정된 값에서 생성 된 XMLGregorianCalendar .</target>
        </trans-unit>
        <trans-unit id="50ddb8a83d5249010c01e506919c65c4d4aacc8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLGregorianCalendar&lt;/code&gt; created from the &lt;code&gt;lexicalRepresentation&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XMLGregorianCalendar&lt;/code&gt; &lt;code&gt;lexicalRepresentation&lt;/code&gt; 에서 생성 된 XMLGregorianCalendar .</target>
        </trans-unit>
        <trans-unit id="a47a77baaa5c90837e4a307fd6c67182d42ef063" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLGregorianCalendar&lt;/code&gt; is reset to the same values as when it was created with &lt;a href=&quot;datatypefactory#newXMLGregorianCalendar()&quot;&gt;&lt;code&gt;DatatypeFactory.newXMLGregorianCalendar()&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypefactory#newXMLGregorianCalendar(java.lang.String)&quot;&gt;&lt;code&gt;DatatypeFactory.newXMLGregorianCalendar(String lexicalRepresentation)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypefactory#newXMLGregorianCalendar(java.math.BigInteger,int,int,int,int,int,java.math.BigDecimal,int)&quot;&gt;&lt;code&gt;DatatypeFactory.newXMLGregorianCalendar(
   BigInteger year,
   int month,
   int day,
   int hour,
   int minute,
   int second,
   BigDecimal fractionalSecond,
   int timezone)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypefactory#newXMLGregorianCalendar(int,int,int,int,int,int,int,int)&quot;&gt;&lt;code&gt;DatatypeFactory.newXMLGregorianCalendar(
   int year,
   int month,
   int day,
   int hour,
   int minute,
   int second,
   int millisecond,
   int timezone)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypefactory#newXMLGregorianCalendar(java.util.GregorianCalendar)&quot;&gt;&lt;code&gt;DatatypeFactory.newXMLGregorianCalendar(GregorianCalendar cal)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypefactory#newXMLGregorianCalendarDate(int,int,int,int)&quot;&gt;&lt;code&gt;DatatypeFactory.newXMLGregorianCalendarDate(
   int year,
   int month,
   int day,
   int timezone)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypefactory#newXMLGregorianCalendarTime(int,int,int,int)&quot;&gt;&lt;code&gt;DatatypeFactory.newXMLGregorianCalendarTime(
   int hours,
   int minutes,
   int seconds,
   int timezone)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;datatypefactory#newXMLGregorianCalendarTime(int,int,int,java.math.BigDecimal,int)&quot;&gt;&lt;code&gt;DatatypeFactory.newXMLGregorianCalendarTime(
   int hours,
   int minutes,
   int seconds,
   BigDecimal fractionalSecond,
   int timezone)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;datatypefactory#newXMLGregorianCalendarTime(int,int,int,int,int)&quot;&gt;&lt;code&gt;DatatypeFactory.newXMLGregorianCalendarTime(
   int hours,
   int minutes,
   int seconds,
   int milliseconds,
   int timezone)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;XMLGregorianCalendar&lt;/code&gt; 는 &lt;a href=&quot;datatypefactory#newXMLGregorianCalendar()&quot;&gt; &lt;code&gt;DatatypeFactory.newXMLGregorianCalendar()&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;datatypefactory#newXMLGregorianCalendar(java.lang.String)&quot;&gt; &lt;code&gt;DatatypeFactory.newXMLGregorianCalendar(String lexicalRepresentation)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;datatypefactory#newXMLGregorianCalendar(java.math.BigInteger,int,int,int,int,int,java.math.BigDecimal,int)&quot;&gt; &lt;code&gt;DatatypeFactory.newXMLGregorianCalendar( BigInteger year, int month, int day, int hour, int minute, int second, BigDecimal fractionalSecond, int timezone)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;datatypefactory#newXMLGregorianCalendar(int,int,int,int,int,int,int,int)&quot;&gt; &lt;code&gt;DatatypeFactory.newXMLGregorianCalendar( int year, int month, int day, int hour, int minute, int second, int millisecond, int timezone)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;datatypefactory#newXMLGregorianCalendar(java.util.GregorianCalendar)&quot;&gt; &lt;code&gt;DatatypeFactory.newXMLGregorianCalendar(GregorianCalendar cal)&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;datatypefactory#newXMLGregorianCalendarDate(int,int,int,int)&quot;&gt; &lt;code&gt;DatatypeFactory.newXMLGregorianCalendarDate( int year, int month, int day, int timezone)&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;datatypefactory#newXMLGregorianCalendarTime(int,int,int,int)&quot;&gt; &lt;code&gt;DatatypeFactory.newXMLGregorianCalendarTime( int hours, int minutes, int seconds, int timezone)&lt;/code&gt; &lt;/a&gt; ,&lt;a href=&quot;datatypefactory#newXMLGregorianCalendarTime(int,int,int,java.math.BigDecimal,int)&quot;&gt; &lt;code&gt;DatatypeFactory.newXMLGregorianCalendarTime( int hours, int minutes, int seconds, BigDecimal fractionalSecond, int timezone)&lt;/code&gt; &lt;/a&gt;timezone) int timezone) 또는&lt;a href=&quot;datatypefactory#newXMLGregorianCalendarTime(int,int,int,int,int)&quot;&gt; &lt;code&gt;DatatypeFactory.newXMLGregorianCalendarTime( int hours, int minutes, int seconds, int milliseconds, int timezone)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="6e628cb202d33d2d3824756e5290d38d315c111c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLSignatureFactory&lt;/code&gt; implementations are registered and loaded using the &lt;a href=&quot;../../../../../java.base/java/security/provider&quot;&gt;&lt;code&gt;Provider&lt;/code&gt;&lt;/a&gt; mechanism. For example, a service provider that supports the DOM mechanism would be specified in the &lt;code&gt;Provider&lt;/code&gt; subclass as:</source>
          <target state="translated">&lt;code&gt;XMLSignatureFactory&lt;/code&gt; 구현은 &lt;a href=&quot;../../../../../java.base/java/security/provider&quot;&gt; &lt;code&gt;Provider&lt;/code&gt; &lt;/a&gt; 메커니즘을 사용하여 등록 및로드됩니다 . 예를 들어 DOM 메커니즘을 지원하는 서비스 공급자는 &lt;code&gt;Provider&lt;/code&gt; 하위 클래스에 다음과 같이 지정 됩니다.</target>
        </trans-unit>
        <trans-unit id="a41ca41626df226e0dd5afae4abf94c6f675cfcc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLStreamException&lt;/code&gt;&lt;sup&gt;[2]&lt;/sup&gt;</source>
          <target state="translated">&lt;code&gt;XMLStreamException&lt;/code&gt;&lt;sup&gt;[2]&lt;/sup&gt;</target>
        </trans-unit>
        <trans-unit id="f3b7a2938f36cd9ef67f90e6375f6f569edab604" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLStreamReader&lt;/code&gt; must be a non-&lt;code&gt;null&lt;/code&gt; reference.</source>
          <target state="translated">&lt;code&gt;XMLStreamReader&lt;/code&gt; 는 &lt;code&gt;null&lt;/code&gt; 이 아닌 참조 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="c0d58b42240f44d19452881e7cb341ba96897858" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLStreamReader&lt;/code&gt; must be in &lt;a href=&quot;../../stream/xmlstreamconstants#START_DOCUMENT&quot;&gt;&lt;code&gt;XMLStreamConstants.START_DOCUMENT&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../stream/xmlstreamconstants#START_ELEMENT&quot;&gt;&lt;code&gt;XMLStreamConstants.START_ELEMENT&lt;/code&gt;&lt;/a&gt; state.</source>
          <target state="translated">&lt;code&gt;XMLStreamReader&lt;/code&gt; 는 &lt;a href=&quot;../../stream/xmlstreamconstants#START_DOCUMENT&quot;&gt; &lt;code&gt;XMLStreamConstants.START_DOCUMENT&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../stream/xmlstreamconstants#START_ELEMENT&quot;&gt; &lt;code&gt;XMLStreamConstants.START_ELEMENT&lt;/code&gt; &lt;/a&gt; 상태 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="254f04adbaae0fcf43954fb885a458ff8ec6c075" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLStreamReader&lt;/code&gt; used by this &lt;code&gt;StAXSource&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XMLStreamReader&lt;/code&gt; 이 &lt;code&gt;StAXSource&lt;/code&gt; 가 사용하는 XMLStreamReader 입니다.</target>
        </trans-unit>
        <trans-unit id="d4b658af2246b043d093f33e0e612a932d234215" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLStreamReader&lt;/code&gt; will be &lt;code&gt;null&lt;/code&gt; if this &lt;code&gt;StAXSource&lt;/code&gt; was created with a &lt;code&gt;XMLEventReader&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XMLStreamReader&lt;/code&gt; 될 것 &lt;code&gt;null&lt;/code&gt; 이 경우 &lt;code&gt;StAXSource&lt;/code&gt; 의이 로 만들어진 &lt;code&gt;XMLEventReader&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e5346247b88fa238d5315b1e11c997da80c23e33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLStreamWriter&lt;/code&gt; must be a non-&lt;code&gt;null&lt;/code&gt; reference.</source>
          <target state="translated">&lt;code&gt;XMLStreamWriter&lt;/code&gt; 는 &lt;code&gt;null&lt;/code&gt; 이 아닌 참조 여야합니다 .</target>
        </trans-unit>
        <trans-unit id="cb44006361ee01e226546856887a0c48feaf8bb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLStreamWriter&lt;/code&gt; used by this &lt;code&gt;StAXResult&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XMLStreamWriter&lt;/code&gt; 이 &lt;code&gt;StAXResult&lt;/code&gt; 가 사용하는 XMLStreamWriter 입니다.</target>
        </trans-unit>
        <trans-unit id="4084252ccb3e0e6a149625f6c94a8bd5029db399" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XMLStreamWriter&lt;/code&gt; will be &lt;code&gt;null&lt;/code&gt; if this &lt;code&gt;StAXResult&lt;/code&gt; was created with a &lt;code&gt;XMLEventWriter&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;XMLStreamWriter&lt;/code&gt; 이 &lt;code&gt;StAXResult&lt;/code&gt; 가 &lt;code&gt;XMLEventWriter&lt;/code&gt; 로 생성 된 경우 XMLStreamWriter 는 &lt;code&gt;null&lt;/code&gt; 이 됩니다 .</target>
        </trans-unit>
        <trans-unit id="14c7f84138cdc7dd8e912bc3a69a864972290b49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XPath&lt;/code&gt; is reset to the same state as when it was created with &lt;a href=&quot;xpathfactory#newXPath()&quot;&gt;&lt;code&gt;XPathFactory.newXPath()&lt;/code&gt;&lt;/a&gt;. &lt;code&gt;reset()&lt;/code&gt; is designed to allow the reuse of existing &lt;code&gt;XPath&lt;/code&gt;s thus saving resources associated with the creation of new &lt;code&gt;XPath&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;XPath&lt;/code&gt; 는 &lt;a href=&quot;xpathfactory#newXPath()&quot;&gt; &lt;code&gt;XPathFactory.newXPath()&lt;/code&gt; &lt;/a&gt; 로 생성되었을 때와 동일한 상태로 재설정됩니다 . &lt;code&gt;reset()&lt;/code&gt; 은 기존 &lt;code&gt;XPath&lt;/code&gt; 의 재사용을 허용하여 새 &lt;code&gt;XPath&lt;/code&gt; 생성과 관련된 리소스를 절약 하도록 설계되었습니다 .</target>
        </trans-unit>
        <trans-unit id="f317009811658193ebb2e67e617a8219e542f2a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XPath&lt;/code&gt; provides access to the XPath evaluation environment and expressions.</source>
          <target state="translated">&lt;code&gt;XPath&lt;/code&gt; 는 XPath 평가 환경 및 표현식에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="8a8686c256eab04ebf73a65677604259ca23bbf9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XPath&lt;/code&gt; provides access to the XPath evaluation environment and expressions. The XPath evaluation is affected by the factors described in the following table.</source>
          <target state="translated">&lt;code&gt;XPath&lt;/code&gt; 는 XPath 평가 환경 및 표현식에 대한 액세스를 제공합니다. XPath 평가는 다음 표에 설명 된 요소의 영향을받습니다.</target>
        </trans-unit>
        <trans-unit id="fa06b02bbeaf166198c8667b0d5db5032aff984f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XPathException&lt;/code&gt; represents a generic XPath exception.</source>
          <target state="translated">&lt;code&gt;XPathException&lt;/code&gt; 은 일반 XPath 예외를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="e2cf88e206f0805f4b89a9ccb06ebf180c520265" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XPathExpression&lt;/code&gt; provides access to compiled XPath expressions.</source>
          <target state="translated">&lt;code&gt;XPathExpression&lt;/code&gt; 은 컴파일 된 XPath 표현식에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="ec281acb520fbecc5117aac866f346cc26fb97f4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XPathExpression&lt;/code&gt; provides access to compiled XPath expressions. The XPath evaluation is affected by the factors described in the following table.</source>
          <target state="translated">&lt;code&gt;XPathExpression&lt;/code&gt; 은 컴파일 된 XPath 표현식에 대한 액세스를 제공합니다. XPath 평가는 다음 표에 설명 된 요소의 영향을받습니다.</target>
        </trans-unit>
        <trans-unit id="17d23b9d5e8b9f7110760115e2129076df07e92e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XPathExpressionException&lt;/code&gt; represents an error in an XPath expression.</source>
          <target state="translated">&lt;code&gt;XPathExpressionException&lt;/code&gt; 은 XPath 표현식의 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="7567d70b541e837adffc87b292d9f31f7ee8acc2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XPathFactoryConfigurationException&lt;/code&gt; represents a configuration error in a &lt;code&gt;XPathFactory&lt;/code&gt; environment.</source>
          <target state="translated">&lt;code&gt;XPathFactoryConfigurationException&lt;/code&gt; 은 &lt;code&gt;XPathFactory&lt;/code&gt; 환경 의 구성 오류를 나타냅니다 .</target>
        </trans-unit>
        <trans-unit id="6c0fb5915d5470d4b67753d3a45f14ae6f8c96c1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XPathFunction&lt;/code&gt; provides access to XPath functions.</source>
          <target state="translated">&lt;code&gt;XPathFunction&lt;/code&gt; 은 XPath 함수에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="b5cefff35b40c6ac713216dfde5649d5042fc27b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XPathFunctionException&lt;/code&gt; represents an error with an XPath function.</source>
          <target state="translated">&lt;code&gt;XPathFunctionException&lt;/code&gt; 은 XPath 함수의 오류를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="02c1559665c20c84cae6d67528cd98ed6a019090" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XPathFunctionResolver&lt;/code&gt; provides access to the set of user defined &lt;code&gt;XPathFunction&lt;/code&gt;s.</source>
          <target state="translated">&lt;code&gt;XPathFunctionResolver&lt;/code&gt; 는 사용자 정의 &lt;code&gt;XPathFunction&lt;/code&gt; 집합에 대한 액세스를 제공합니다 .</target>
        </trans-unit>
        <trans-unit id="2c4bb3d424f5222f8e654f3fd60f7aef6a26804a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;XPathVariableResolver&lt;/code&gt; provides access to the set of user defined XPath variables.</source>
          <target state="translated">&lt;code&gt;XPathVariableResolver&lt;/code&gt; 는 사용자 정의 XPath 변수 세트에 대한 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="c804865acd4fac583831b6a46241173fbf2bf156" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Y&lt;/code&gt; - the specified Y coordinate</source>
          <target state="translated">&lt;code&gt;Y&lt;/code&gt; - 지정된 Y 좌표</target>
        </trans-unit>
        <trans-unit id="fdf191b3611885893b3cc2d694968d31eb8d5519" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Y&lt;/code&gt; dimension</source>
          <target state="translated">&lt;code&gt;Y&lt;/code&gt; 치수</target>
        </trans-unit>
        <trans-unit id="9b7c912bdece5e07147d07e12c86557603d79710" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Y&lt;/code&gt; dimension (&amp;micro;m)</source>
          <target state="translated">&lt;code&gt;Y&lt;/code&gt; 치수 (&amp;micro;m)</target>
        </trans-unit>
        <trans-unit id="b7c7e0e7980bcbffd0c4f56aaf1079baa0b1a875" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified year. The month will be unchanged. The day-of-month will also be unchanged, unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;YEAR&lt;/code&gt; - 반환 &lt;code&gt;LocalDate&lt;/code&gt; 지정된 연도로한다. 월은 변경되지 않습니다. 새 월과 연도에 유효하지 않은 한, 월도 변경되지 않습니다. 이 경우 월은 새 달과 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="3e0895e99a8f79e0b9b5079387bcceb6687ba84b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified year. This completely replaces the date and is equivalent to &lt;a href=&quot;#of(int)&quot;&gt;&lt;code&gt;of(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;YEAR&lt;/code&gt; - 지정된 연도 의 &lt;code&gt;Year&lt;/code&gt; 를 반환합니다 . 이것은 날짜를 완전히 대체하며 &lt;a href=&quot;#of(int)&quot;&gt; &lt;code&gt;of(int)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="e18ff523ac3e70f02204acd526f17e69f5b8984c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified year. This completely replaces the date and is equivalent to &lt;a href=&quot;year#of-int-&quot;&gt;&lt;code&gt;of(int)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;YEAR&lt;/code&gt; - 지정된 연도가 있는 &lt;code&gt;Year&lt;/code&gt; 를 반환합니다 . 이것은 날짜를 완전히 대체하며 &lt;a href=&quot;year#of-int-&quot;&gt; &lt;code&gt;of(int)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f8f11860493af663498797665d462f7fb25b53b9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified year. The month will be unchanged.</source>
          <target state="translated">&lt;code&gt;YEAR&lt;/code&gt; - 반환 &lt;code&gt;YearMonth&lt;/code&gt; 지정된 연도로한다. 월은 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="26a61ea4f3b2e1579c57142cc781e3dccb5c7bac" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR&lt;/code&gt; and &lt;code&gt;DAY_OF_YEAR&lt;/code&gt; - If both are present, then they are combined to form a &lt;code&gt;LocalDate&lt;/code&gt;. In all three modes, the &lt;code&gt;YEAR&lt;/code&gt; is validated. If the mode is lenient, then the date is combined in a manner equivalent to creating a date on the first of January in the requested year, then adding the difference in days. If the mode is smart or strict, then the two fields must form a valid date.</source>
          <target state="translated">&lt;code&gt;YEAR&lt;/code&gt; 및 &lt;code&gt;DAY_OF_YEAR&lt;/code&gt; - 둘 다 있으면 &lt;code&gt;LocalDate&lt;/code&gt; 를 형성하기 위해 결합됩니다 . 세 가지 모드 모두에서 &lt;code&gt;YEAR&lt;/code&gt; 의 유효성이 검사됩니다. 모드가 관대하지 않으면 날짜는 요청 된 연도의 1 월 1 일에 날짜를 작성한 다음 날짜 차이를 추가하는 것과 같은 방식으로 결합됩니다. 스마트 또는 엄격 모드 인 경우 두 필드는 유효한 날짜를 형성해야합니다.</target>
        </trans-unit>
        <trans-unit id="63cfe5bca67d7df128835171cb058485fff51332" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR&lt;/code&gt; and &lt;code&gt;DAY_OF_YEAR&lt;/code&gt; - If both are present, then they are combined to form a date. In all three modes, the &lt;code&gt;YEAR&lt;/code&gt; is validated. If the mode is lenient, then the date is combined in a manner equivalent to creating a date on the first day of the requested year, then adding the difference in days. If the mode is smart or strict, then the two fields must form a valid date.</source>
          <target state="translated">&lt;code&gt;YEAR&lt;/code&gt; 및 &lt;code&gt;DAY_OF_YEAR&lt;/code&gt; - 둘 다 존재하는 경우 결합되어 날짜를 형성합니다. 세 가지 모드 모두에서 &lt;code&gt;YEAR&lt;/code&gt; 의 유효성이 검사됩니다. 모드가 관대하지 않으면 날짜는 요청 된 연도의 첫날에 날짜를 작성한 다음 날짜 차이를 추가하는 것과 같은 방식으로 결합됩니다. 스마트 또는 엄격 모드 인 경우 두 필드는 유효한 날짜를 형성해야합니다.</target>
        </trans-unit>
        <trans-unit id="f4912e73e77aa745379fe97c1e8f2ae791759682" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;ALIGNED_WEEK_OF_YEAR&lt;/code&gt; and &lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_YEAR&lt;/code&gt; - If all three are present, then they are combined to form a &lt;code&gt;LocalDate&lt;/code&gt;. In all three modes, the &lt;code&gt;YEAR&lt;/code&gt; is validated. If the mode is lenient, then the date is combined in a manner equivalent to creating a date on the first of January in the requested year, then adding the difference in weeks, then in days. If the mode is smart or strict, then the all three fields are validated to their outer ranges. The date is then combined in a manner equivalent to creating a date on the first day of the requested year, then adding the amount in weeks and days to reach their values. If the mode is strict, the date is additionally validated to check that the day and week adjustment did not change the year.</source>
          <target state="translated">&lt;code&gt;YEAR&lt;/code&gt; , &lt;code&gt;ALIGNED_WEEK_OF_YEAR&lt;/code&gt; 및 &lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_YEAR&lt;/code&gt; &amp;ndash; 세 개 모두 존재하는 경우 &lt;code&gt;LocalDate&lt;/code&gt; 를 형성하기 위해 결합됩니다 . 세 가지 모드 모두에서 &lt;code&gt;YEAR&lt;/code&gt; 확인됩니다. 모드가 관대하지 않으면 날짜는 요청 된 연도의 1 월 1 일에 날짜를 만든 다음 주 단위로 차이를 더한 다음 일 단위로 날짜와 동일한 방식으로 결합됩니다. 모드가 똑똑하거나 엄격하면 세 필드 모두 외부 범위로 검증됩니다. 그런 다음 날짜는 요청 된 연도의 첫 날에 날짜를 만든 다음 주 및 일 단위로 금액을 추가하여 해당 값에 도달하는 것과 같은 방식으로 결합됩니다. 모드가 엄격한 경우 날짜와 주 조정이 연도를 변경하지 않았는지 확인하기 위해 날짜가 추가로 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="08b678c3b66b7f53ab0b11afe6cbf6c035837c26" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;ALIGNED_WEEK_OF_YEAR&lt;/code&gt; and &lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_YEAR&lt;/code&gt; - If all three are present, then they are combined to form a date. In all three modes, the &lt;code&gt;YEAR&lt;/code&gt; is validated. If the mode is lenient, then the date is combined in a manner equivalent to creating a date on the first day of the requested year, then adding the difference in weeks, then in days. If the mode is smart or strict, then the all three fields are validated to their outer ranges. The date is then combined in a manner equivalent to creating a date on the first day of the requested year, then adding the amount in weeks and days to reach their values. If the mode is strict, the date is additionally validated to check that the day and week adjustment did not change the year.</source>
          <target state="translated">&lt;code&gt;YEAR&lt;/code&gt; , &lt;code&gt;ALIGNED_WEEK_OF_YEAR&lt;/code&gt; 및 &lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_YEAR&lt;/code&gt; - 세 개 모두 존재하는 경우 날짜를 구성하기 위해 결합됩니다. 세 가지 모드 모두에서 &lt;code&gt;YEAR&lt;/code&gt; 의 유효성이 검사됩니다. 모드가 관대하지 않으면 날짜는 요청 된 연도의 첫날에 날짜를 만든 다음 주 단위로 차이를 더한 다음 일 단위로 날짜와 동일한 방식으로 결합됩니다. 모드가 똑똑하거나 엄격하면 세 필드 모두 외부 범위로 검증됩니다. 그런 다음 날짜는 요청 된 연도의 첫 날에 날짜를 만든 다음 주 및 일 단위로 금액을 추가하여 해당 값에 도달하는 것과 같은 방식으로 결합됩니다. 모드가 엄격한 경우 날짜와 주 조정이 연도를 변경하지 않았는지 확인하기 위해 날짜가 추가로 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="433bb6960cb94845566ffc7fbc8020db21c7b538" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;ALIGNED_WEEK_OF_YEAR&lt;/code&gt; and &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; - If all three are present, then they are combined to form a &lt;code&gt;LocalDate&lt;/code&gt;. The approach is the same as described above for years and weeks in &lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_YEAR&lt;/code&gt;. The day-of-week is adjusted as the next or same matching day-of-week once the years and weeks have been handled.</source>
          <target state="translated">&lt;code&gt;YEAR&lt;/code&gt; , &lt;code&gt;ALIGNED_WEEK_OF_YEAR&lt;/code&gt; 및 &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &amp;ndash;이 세 가지가 모두 있으면 &lt;code&gt;LocalDate&lt;/code&gt; 를 형성하기 위해 결합됩니다 . 이 방법은 &lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_YEAR&lt;/code&gt; 의 몇 년 동안 몇 주 동안 설명한 것과 같습니다 . 연도 및 주가 처리되면 요일이 다음 또는 일치하는 요일로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="ebccc3d503d0d60342c4bc1a9983b1d4fb56f143" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;ALIGNED_WEEK_OF_YEAR&lt;/code&gt; and &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; - If all three are present, then they are combined to form a date. The approach is the same as described above for years and weeks in &lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_YEAR&lt;/code&gt;. The day-of-week is adjusted as the next or same matching day-of-week once the years and weeks have been handled.</source>
          <target state="translated">&lt;code&gt;YEAR&lt;/code&gt; , &lt;code&gt;ALIGNED_WEEK_OF_YEAR&lt;/code&gt; 및 &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; - 세 개 모두 존재하는 경우 날짜가되도록 결합됩니다. 이 방법은 &lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_YEAR&lt;/code&gt; 의 몇 년 동안 몇 주 동안 설명한 것과 같습니다 . 연도 및 주가 처리되면 요일이 다음 또는 일치하는 요일로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="0ed89eb2e86fdc78b4c6518a4efdc5d059b2b8b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; and &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; - If all three are present, then they are combined to form a &lt;code&gt;LocalDate&lt;/code&gt;. In all three modes, the &lt;code&gt;YEAR&lt;/code&gt; is validated. If the mode is smart or strict, then the month and day are validated, with the day validated from 1 to 31. If the mode is lenient, then the date is combined in a manner equivalent to creating a date on the first of January in the requested year, then adding the difference in months, then the difference in days. If the mode is smart, and the day-of-month is greater than the maximum for the year-month, then the day-of-month is adjusted to the last day-of-month. If the mode is strict, then the three fields must form a valid date.</source>
          <target state="translated">&lt;code&gt;YEAR&lt;/code&gt; , &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; 및 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; - 세 개가 모두 있으면 결합되어 &lt;code&gt;LocalDate&lt;/code&gt; 를 형성합니다 . 세 가지 모드 모두에서 &lt;code&gt;YEAR&lt;/code&gt; 의 유효성이 검사됩니다. 스마트 또는 엄격 모드 인 경우 월과 일의 유효성이 검사되고 일의 유효 기간이 1에서 31까지입니다. 모드가 관대하지 않으면 날짜는 1 월 1 일에 날짜를 만드는 것과 같은 방식으로 결합됩니다. 요청 된 연도, 그 다음 달의 차이를 더한 다음 일의 차이를 더합니다. 모드가 똑똑하고 월이 최대 한 달보다 크면 월이 마지막 달로 조정됩니다. 모드가 엄격한 경우 3 개의 필드가 유효한 날짜를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="9525eb995f17b2e0df5d93acf34f92e4bda9f47e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; and &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; - If all three are present, then they are combined to form a date. In all three modes, the &lt;code&gt;YEAR&lt;/code&gt; is validated. If the mode is smart or strict, then the month and day are validated. If the mode is lenient, then the date is combined in a manner equivalent to creating a date on the first day of the first month in the requested year, then adding the difference in months, then the difference in days. If the mode is smart, and the day-of-month is greater than the maximum for the year-month, then the day-of-month is adjusted to the last day-of-month. If the mode is strict, then the three fields must form a valid date.</source>
          <target state="translated">&lt;code&gt;YEAR&lt;/code&gt; , &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; 및 &lt;code&gt;DAY_OF_MONTH&lt;/code&gt; - 세 개 모두 존재하는 경우 날짜를 구성하기 위해 결합됩니다. 세 가지 모드 모두에서 &lt;code&gt;YEAR&lt;/code&gt; 의 유효성이 검사됩니다. 스마트 또는 엄격 모드 인 경우 월과 일의 유효성이 검사됩니다. 모드가 관대하지 않으면 날짜는 요청 된 해의 첫 번째 달의 첫 번째 날에 날짜를 만든 다음 달의 차이를 더한 다음 일의 차이와 같은 방식으로 결합됩니다. 모드가 스마트하고 월이 최대 한 달보다 크면 월이 마지막 달로 조정됩니다. 모드가 엄격한 경우 3 개의 필드가 유효한 날짜를 구성해야합니다.</target>
        </trans-unit>
        <trans-unit id="456be59feb6af317a0c706b4183f250c8ff03aaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;, &lt;code&gt;ALIGNED_WEEK_OF_MONTH&lt;/code&gt; and &lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_MONTH&lt;/code&gt; - If all four are present, then they are combined to form a &lt;code&gt;LocalDate&lt;/code&gt;. In all three modes, the &lt;code&gt;YEAR&lt;/code&gt; is validated. If the mode is lenient, then the date is combined in a manner equivalent to creating a date on the first of January in the requested year, then adding the difference in months, then the difference in weeks, then in days. If the mode is smart or strict, then the all four fields are validated to their outer ranges. The date is then combined in a manner equivalent to creating a date on the first day of the requested year and month, then adding the amount in weeks and days to reach their values. If the mode is strict, the date is additionally validated to check that the day and week adjustment did not change the month.</source>
          <target state="translated">&lt;code&gt;YEAR&lt;/code&gt; , &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; , &lt;code&gt;ALIGNED_WEEK_OF_MONTH&lt;/code&gt; 및 &lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_MONTH&lt;/code&gt; -4 개가 모두 존재하면 &lt;code&gt;LocalDate&lt;/code&gt; 를 형성하기 위해 결합됩니다 . 세 가지 모드 모두에서 &lt;code&gt;YEAR&lt;/code&gt; 확인됩니다. 모드가 관대하지 않으면 날짜는 요청 된 연도의 1 월 1 일에 날짜를 만든 다음 달, 차, 주, 차를 추가하는 것과 같은 방식으로 결합됩니다. 모드가 똑똑하거나 엄격하면 4 개의 필드가 모두 외부 범위로 검증됩니다. 그런 다음 날짜는 요청 된 연도 및 월의 첫날에 날짜를 만든 다음 주 및 일 단위로 금액을 추가하여 해당 값에 도달하는 것과 같은 방식으로 결합됩니다. 모드가 엄격한 경우 날짜와 주 조정이 월을 변경하지 않았는지 확인하기 위해 날짜가 추가로 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="9f48440081a1e285c7b47ff7ec1f716aaa3cb664" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;, &lt;code&gt;ALIGNED_WEEK_OF_MONTH&lt;/code&gt; and &lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_MONTH&lt;/code&gt; - If all four are present, then they are combined to form a date. In all three modes, the &lt;code&gt;YEAR&lt;/code&gt; is validated. If the mode is lenient, then the date is combined in a manner equivalent to creating a date on the first day of the first month in the requested year, then adding the difference in months, then the difference in weeks, then in days. If the mode is smart or strict, then the all four fields are validated to their outer ranges. The date is then combined in a manner equivalent to creating a date on the first day of the requested year and month, then adding the amount in weeks and days to reach their values. If the mode is strict, the date is additionally validated to check that the day and week adjustment did not change the month.</source>
          <target state="translated">&lt;code&gt;YEAR&lt;/code&gt; , &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; , &lt;code&gt;ALIGNED_WEEK_OF_MONTH&lt;/code&gt; 및 &lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_MONTH&lt;/code&gt; -4 개가 모두 있으면 날짜가되도록 결합됩니다. 세 가지 모드 모두에서 &lt;code&gt;YEAR&lt;/code&gt; 확인됩니다. 모드가 관대하지 않은 경우 날짜는 요청 된 해의 첫 번째 달의 첫 번째 날에 날짜를 만든 다음 달의 차이를 추가 한 다음 주 단위의 차이를 일 단위로 추가하는 것과 같은 방식으로 결합됩니다. 모드가 똑똑하거나 엄격하면 4 개의 필드가 모두 외부 범위로 검증됩니다. 그런 다음 날짜는 요청 된 연도 및 월의 첫날에 날짜를 만든 다음 주 및 일 단위로 금액을 추가하여 해당 값에 도달하는 것과 같은 방식으로 결합됩니다. 모드가 엄격한 경우 날짜와 주 조정이 월을 변경하지 않았는지 확인하기 위해 날짜가 추가로 확인됩니다.</target>
        </trans-unit>
        <trans-unit id="024fe410842dfe9c2e43aafec4465e2342253042" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;, &lt;code&gt;ALIGNED_WEEK_OF_MONTH&lt;/code&gt; and &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; - If all four are present, then they are combined to form a &lt;code&gt;LocalDate&lt;/code&gt;. The approach is the same as described above for years, months and weeks in &lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_MONTH&lt;/code&gt;. The day-of-week is adjusted as the next or same matching day-of-week once the years, months and weeks have been handled.</source>
          <target state="translated">&lt;code&gt;YEAR&lt;/code&gt; , &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; , &lt;code&gt;ALIGNED_WEEK_OF_MONTH&lt;/code&gt; 및 &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; &amp;ndash; 4 개가 모두 존재하는 경우 &lt;code&gt;LocalDate&lt;/code&gt; 를 형성하기 위해 결합됩니다 . 이 접근 방식은 &lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_MONTH&lt;/code&gt; 의 몇 년, 몇 달, 몇 주 동안 위에서 설명한 것과 같습니다 . 연도, 월 및 주가 처리되면 요일이 다음 또는 일치하는 요일로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="31de21e7501528650b31130209ad22cbfbf5a997" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR&lt;/code&gt;, &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt;, &lt;code&gt;ALIGNED_WEEK_OF_MONTH&lt;/code&gt; and &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; - If all four are present, then they are combined to form a date. The approach is the same as described above for years, months and weeks in &lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_MONTH&lt;/code&gt;. The day-of-week is adjusted as the next or same matching day-of-week once the years, months and weeks have been handled.</source>
          <target state="translated">&lt;code&gt;YEAR&lt;/code&gt; , &lt;code&gt;MONTH_OF_YEAR&lt;/code&gt; , &lt;code&gt;ALIGNED_WEEK_OF_MONTH&lt;/code&gt; 및 &lt;code&gt;DAY_OF_WEEK&lt;/code&gt; -4 개가 모두 있으면 날짜를 구성하기 위해 결합됩니다. 이 접근 방식은 &lt;code&gt;ALIGNED_DAY_OF_WEEK_IN_MONTH&lt;/code&gt; 의 몇 년, 몇 달, 몇 주 동안 위에서 설명한 것과 동일 합니다. 연도, 월 및 주가 처리되면 요일이 다음 또는 일치하는 요일로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="7940539446eddb3c5c033b344611ce37c96f3349" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEARS&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of years added. This is equivalent to &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt;. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;YEARS&lt;/code&gt; - 반환 &lt;code&gt;LocalDate&lt;/code&gt; 추가 년의 지정된 수 있습니다. 이것은 &lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 . 새 달과 연도에 대해 유효하지 않은 경우 날짜는 변경되지 않습니다. 이 경우 날짜는 새 월과 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="76be062752db7dd1f95adb3779c071f1704f5d33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEARS&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified number of years added. This is equivalent to &lt;a href=&quot;localdate#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt;. The day-of-month will be unchanged unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;YEARS&lt;/code&gt; - 반환 &lt;code&gt;LocalDate&lt;/code&gt; 추가 년의 지정된 수 있습니다. 이것은 &lt;a href=&quot;localdate#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 . 새 월과 연도에 유효하지 않은 한, 월은 변경되지 않습니다. 이 경우 월은 새 달과 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="429aa46ae42ff523833eaebfecc79fe9d68495fa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEARS&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified number of years added. This is equivalent to &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;YEARS&lt;/code&gt; - 지정된 &lt;code&gt;Year&lt;/code&gt; 가 추가 된 연도 를 반환합니다 . 이것은 &lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="5e180f30263730fd19a45fee0f4931be28c84e27" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEARS&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified number of years added. This is equivalent to &lt;a href=&quot;year#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;YEARS&lt;/code&gt; - 지정된 &lt;code&gt;Year&lt;/code&gt; 가 추가 된 연도 를 반환합니다 . 이것은 &lt;a href=&quot;year#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="70d537fe7155f64db6a633f6543b4dc9f3d450e4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEARS&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of years added. This is equivalent to &lt;a href=&quot;#plusYears(long)&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;YEARS&lt;/code&gt; - 반환 &lt;code&gt;YearMonth&lt;/code&gt; 추가 년의 지정된 수 있습니다. 이것은 &lt;a href=&quot;#plusYears(long)&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="f92887427a7629cf17128d6bfdfd4a4a9aa8c96e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEARS&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified number of years added. This is equivalent to &lt;a href=&quot;yearmonth#plusYears-long-&quot;&gt;&lt;code&gt;plusYears(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">&lt;code&gt;YEARS&lt;/code&gt; - 반환 &lt;code&gt;YearMonth&lt;/code&gt; 추가 년의 지정된 수 있습니다. 이것은 &lt;a href=&quot;yearmonth#plusYears-long-&quot;&gt; &lt;code&gt;plusYears(long)&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="b4cec2a26ee78fe9fbafee6d81faf3e3d2779029" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR_OF_ERA&lt;/code&gt; - Returns a &lt;code&gt;LocalDate&lt;/code&gt; with the specified year-of-era. The era and month will be unchanged. The day-of-month will also be unchanged, unless it would be invalid for the new month and year. In that case, the day-of-month is adjusted to the maximum valid value for the new month and year.</source>
          <target state="translated">&lt;code&gt;YEAR_OF_ERA&lt;/code&gt; - 지정된 연도 의 &lt;code&gt;LocalDate&lt;/code&gt; 를 반환합니다 . 시대와 달은 바뀌지 않을 것입니다. 새 월과 연도에 유효하지 않은 한, 월도 변경되지 않습니다. 이 경우 월은 새 달과 연도의 최대 유효 값으로 조정됩니다.</target>
        </trans-unit>
        <trans-unit id="37d77e1067882dcdabb706dfeac212e48bfc2cdf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR_OF_ERA&lt;/code&gt; - Returns a &lt;code&gt;Year&lt;/code&gt; with the specified year-of-era The era will be unchanged.</source>
          <target state="translated">&lt;code&gt;YEAR_OF_ERA&lt;/code&gt; - 지정된 연도가 지정된 연도를 반환합니다. &lt;code&gt;Year&lt;/code&gt; 는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4f1f13c24becc810e99538ed368a06a1fab47645" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR_OF_ERA&lt;/code&gt; - Returns a &lt;code&gt;YearMonth&lt;/code&gt; with the specified year-of-era The month and era will be unchanged.</source>
          <target state="translated">&lt;code&gt;YEAR_OF_ERA&lt;/code&gt; - 지정된 연도가 있는 &lt;code&gt;YearMonth&lt;/code&gt; 를 반환합니다 . 월과 연도는 변경되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d594b15ff8aa8657c897b71d9ee6f834fe541d1b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR_OF_ERA&lt;/code&gt; and &lt;code&gt;ERA&lt;/code&gt; - If both are present, then they are combined to form a &lt;code&gt;YEAR&lt;/code&gt;. In lenient mode, the &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; range is not validated, in smart and strict mode it is. The &lt;code&gt;ERA&lt;/code&gt; is validated for range in all three modes. If only the &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; is present, and the mode is smart or lenient, then the current era (CE/AD) is assumed. In strict mode, no era is assumed and the &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; is left untouched. If only the &lt;code&gt;ERA&lt;/code&gt; is present, then it is left untouched.</source>
          <target state="translated">&lt;code&gt;YEAR_OF_ERA&lt;/code&gt; 및 &lt;code&gt;ERA&lt;/code&gt; 는 - 모두가있는 경우, 그들은이 형성 결합 &lt;code&gt;YEAR&lt;/code&gt; . &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; 모드에서 YEAR_OF_ERA 범위는 검증되지 않으며 스마트 및 엄격 모드에서는 유효합니다. &lt;code&gt;ERA&lt;/code&gt; 는 세 가지 모드에서 범위를 확인한다. &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; 만 존재하고 모드가 똑똑하거나 관대하다면 현재 시대 (CE / AD)로 가정합니다. 엄격 모드에서는 시대가 가정되지 않으며 &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; 는 그대로 유지됩니다. &lt;code&gt;ERA&lt;/code&gt; 만있는 경우 그대로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="daff3fcedc1c1ef8fd027cbe5b997305d098112d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YEAR_OF_ERA&lt;/code&gt; and &lt;code&gt;ERA&lt;/code&gt; - If both are present, then they are combined to form a &lt;code&gt;YEAR&lt;/code&gt;. In lenient mode, the &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; range is not validated, in smart and strict mode it is. The &lt;code&gt;ERA&lt;/code&gt; is validated for range in all three modes. If only the &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; is present, and the mode is smart or lenient, then the last available era is assumed. In strict mode, no era is assumed and the &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; is left untouched. If only the &lt;code&gt;ERA&lt;/code&gt; is present, then it is left untouched.</source>
          <target state="translated">&lt;code&gt;YEAR_OF_ERA&lt;/code&gt; 및 &lt;code&gt;ERA&lt;/code&gt; 는 - 모두가있는 경우, 그들은이 형성 결합 &lt;code&gt;YEAR&lt;/code&gt; . &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; 모드에서 YEAR_OF_ERA 범위는 검증되지 않으며 스마트 및 엄격 모드에서는 유효합니다. &lt;code&gt;ERA&lt;/code&gt; 는 세 가지 모드에서 범위를 확인한다. &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; 만 존재하고 모드가 똑똑하거나 관대하다면, 마지막으로 사용 가능한 시대가 가정됩니다. 엄격 모드에서는 시대가 가정되지 않으며 &lt;code&gt;YEAR_OF_ERA&lt;/code&gt; 는 그대로 유지됩니다. &lt;code&gt;ERA&lt;/code&gt; 만있는 경우 그대로 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="5817555a1d6ec7e3dfdcdabefba3fc558aea4307" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Year&lt;/code&gt; is an immutable date-time object that represents a year. Any field that can be derived from a year can be obtained.</source>
          <target state="translated">&lt;code&gt;Year&lt;/code&gt; 는 연도 를 나타내는 변경 불가능한 날짜-시간 개체입니다. 1 년에서 파생 될 수있는 모든 필드를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5401f436340e948b90fb04a61ab868b587ea56fe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Year&lt;/code&gt; returns &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Year&lt;/code&gt; 는 &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt; 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a88972d000e84cb7e72052d424b7b6dc911d2c59" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Year&lt;/code&gt; returns &lt;code&gt;YEARS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;Year&lt;/code&gt; 는 &lt;code&gt;YEARS&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="a0dfa9f1eac49ecb68f1d8c18351e90a12a202c8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Year&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;Year&lt;/code&gt; 는 null을 반환</target>
        </trans-unit>
        <trans-unit id="84b9ad8253a814ed9e721642f54fbfc918483d39" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YearMonth&lt;/code&gt; is an immutable date-time object that represents the combination of a year and month. Any field that can be derived from a year and month, such as quarter-of-year, can be obtained.</source>
          <target state="translated">&lt;code&gt;YearMonth&lt;/code&gt; 는 연도와 월의 조합을 나타내는 변경 불가능한 날짜-시간 개체입니다. 연도와 같이 연도 및 월에서 파생 될 수있는 모든 필드를 얻을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccae8492d704082ad2d8e6f60362410c188e0174" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YearMonth&lt;/code&gt; returns &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;YearMonth&lt;/code&gt; 는 IsoChronology를 반환합니다 &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="13d5055a442212d05894eacd7cfbd2c2b25b3c5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YearMonth&lt;/code&gt; returns &lt;code&gt;MONTHS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;YearMonth&lt;/code&gt; 는 &lt;code&gt;MONTHS&lt;/code&gt; 를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="fcc0ef700765e5a599e98ebafa2ec139ad235c78" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;YearMonth&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;YearMonth&lt;/code&gt; 는 null을 반환</target>
        </trans-unit>
        <trans-unit id="3daeabb11846d14cfddc39d693977b3e1b833ebf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Z&lt;/code&gt; - for UTC</source>
          <target state="translated">&lt;code&gt;Z&lt;/code&gt; -UTC</target>
        </trans-unit>
        <trans-unit id="77fcc42796409dfdd08fd9e79c7a4e8b4cb10241" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;Z&lt;/code&gt; - for UTC (ISO-8601)</source>
          <target state="translated">&lt;code&gt;Z&lt;/code&gt; -UTC 용 (ISO-8601)</target>
        </trans-unit>
        <trans-unit id="05cb247ef1a4a7fdca434c82e523e928dd4700f1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ZoneDateTime&lt;/code&gt; can store points on the time-line further in the future and further in the past than &lt;code&gt;GregorianCalendar&lt;/code&gt;. In this scenario, this method will throw an &lt;code&gt;IllegalArgumentException&lt;/code&gt; exception.</source>
          <target state="translated">&lt;code&gt;ZoneDateTime&lt;/code&gt; 은 미래에 그리고 과거에 &lt;code&gt;GregorianCalendar&lt;/code&gt; 보다 더 타임 라인에 포인트를 저장할 수 있습니다 . 이 시나리오에서이 메소드는 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 예외를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="75f41659bf3d9e481bf6b10c0e9a483c8da79996" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ZoneOffset&lt;/code&gt; returns null</source>
          <target state="translated">&lt;code&gt;ZoneOffset&lt;/code&gt; 은 null을 반환</target>
        </trans-unit>
        <trans-unit id="5d249324d3d022ba08dbe6210b00c2a7022ed033" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ZoneOffset&lt;/code&gt; returns null (does not represent a date or time)</source>
          <target state="translated">&lt;code&gt;ZoneOffset&lt;/code&gt; 은 null을 반환합니다 (날짜 또는 시간을 나타내지 않음)</target>
        </trans-unit>
        <trans-unit id="c0952662fd457019fd90ff65a6de6fb69f651bfe" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ZoneOffset&lt;/code&gt; returns null (does not represent a date)</source>
          <target state="translated">&lt;code&gt;ZoneOffset&lt;/code&gt; 은 null을 반환합니다 (날짜를 나타내지 않음).</target>
        </trans-unit>
        <trans-unit id="670b8b44938198c062e2580799b72f71fea8f4b6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ZonedDateTime&lt;/code&gt; is an immutable representation of a date-time with a time-zone. This class stores all date and time fields, to a precision of nanoseconds, and a time-zone, with a zone offset used to handle ambiguous local date-times. For example, the value &quot;2nd October 2007 at 13:45.30.123456789 +02:00 in the Europe/Paris time-zone&quot; can be stored in a &lt;code&gt;ZonedDateTime&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;ZonedDateTime&lt;/code&gt; 은 표준 시간대를 사용하여 날짜-시간을 변경할 수없는 표현입니다. 이 클래스는 모호한 로컬 날짜 시간을 처리하는 데 사용되는 영역 오프셋을 사용하여 모든 날짜 및 시간 필드를 정밀한 나노초 및 시간대로 저장합니다. 예를 들어, &quot;유럽 / 파리 시간대의 2007 년 10 월 2 일 13 : 45.30.123456789 +02 : 00&quot;값은 &lt;code&gt;ZonedDateTime&lt;/code&gt; 에 저장할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="238a374f4b3cde52edd54efde718828604c5765a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ZonedDateTime&lt;/code&gt; returns &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ZonedDateTime&lt;/code&gt; 은 IsoChronology를 반환합니다 &lt;code&gt;IsoChronology.INSTANCE&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ffc8b4ecbc7bbef2d1d864e4b969e9304f50aaf2" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ZonedDateTime&lt;/code&gt; returns &lt;code&gt;NANOS&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;ZonedDateTime&lt;/code&gt; 는 반환 &lt;code&gt;NANOS&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e17971bd6be281d5ddaa6fa16da7615797f3817b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;ZonedDateTime&lt;/code&gt; returns the associated zone</source>
          <target state="translated">&lt;code&gt;ZonedDateTime&lt;/code&gt; 은 연결된 영역을 반환</target>
        </trans-unit>
        <trans-unit id="3920714dc4e1c99e98de6fc59a1a16c15c0f6a8c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[&lt;/code&gt;&lt;var&gt;arglist&lt;/var&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[&lt;/code&gt;&lt;var&gt;arglist&lt;/var&gt;&lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9b59602b01bf114da3203944556212205ae9ba4a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[CODEBASE = &lt;/code&gt;&lt;var&gt;codebaseURL&lt;/var&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[CODEBASE = &lt;/code&gt; &lt;var&gt;codebaseURL&lt;/var&gt; &lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="bcf9a37b0ec5b8c8cae9f84701423a60e451c8bf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[NAME = &lt;/code&gt;&lt;var&gt;mbeanname&lt;/var&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[NAME = &lt;/code&gt; &lt;var&gt;mbeanname&lt;/var&gt; &lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="422cc04aaaace372cecf507ffd9d675c6b0adccc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[VERSION = &lt;/code&gt;&lt;var&gt;version&lt;/var&gt;&lt;code&gt;]&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;[VERSION = &lt;/code&gt; &lt;var&gt;version&lt;/var&gt; &lt;code&gt;]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cb049a094db1549a611cecd441a0797e548eab6e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;[]&lt;/code&gt;, then an exception of type &lt;a href=&quot;../annotation/annotationformaterror&quot;&gt;&lt;code&gt;AnnotationFormatError&lt;/code&gt;&lt;/a&gt; is thrown.</source>
          <target state="translated">&lt;code&gt;[]&lt;/code&gt; 이면 &lt;a href=&quot;../annotation/annotationformaterror&quot;&gt; &lt;code&gt;AnnotationFormatError&lt;/code&gt; &lt;/a&gt; 유형의 예외 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="1ad4e1ea671adce2b4d20d725a3996eda4119adf" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\X &lt;/code&gt;Match Unicode &lt;a href=&quot;http://www.unicode.org/reports/tr18/#Default_Grapheme_Clusters&quot;&gt; &lt;i&gt;extended grapheme cluster&lt;/i&gt;&lt;/a&gt;</source>
          <target state="translated">&lt;code&gt;\X &lt;/code&gt; Match 유니 코드 &lt;a href=&quot;http://www.unicode.org/reports/tr18/#Default_Grapheme_Clusters&quot;&gt;&lt;i&gt;확장 grapheme 클러스터&lt;/i&gt;&lt;/a&gt; &lt;i&gt;&lt;/i&gt;</target>
        </trans-unit>
        <trans-unit id="83340a24e377b53d78b8820450494fe7f7950388" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u0000&lt;/code&gt;,</source>
          <target state="translated">&lt;code&gt;\u0000&lt;/code&gt;,</target>
        </trans-unit>
        <trans-unit id="3e12abeaf683cfab5e715fb72e21a97d7a2daf84" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u0001&lt;/code&gt; to &lt;code&gt;\u007F&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\u0001&lt;/code&gt; ~ &lt;code&gt;\u007F&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="cee57f8cb137f41fc2e353dec1ab0b4ca1cab6e1" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u000A&lt;/code&gt;, LINE FEED</source>
          <target state="translated">&lt;code&gt;\u000A&lt;/code&gt; , 라인 피드</target>
        </trans-unit>
        <trans-unit id="72713c8127959f3f347f79dd2aba263e36b7dd32" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u000D&lt;/code&gt; followed by &lt;code&gt;\u000A&lt;/code&gt;, CARRIAGE RETURN followed by LINE FEED</source>
          <target state="translated">&lt;code&gt;\u000D&lt;/code&gt; 뒤에 &lt;code&gt;\u000A&lt;/code&gt; , 캐리지 리턴, LINE FEED</target>
        </trans-unit>
        <trans-unit id="6e190fbf529c2901cdf94f36486e2b42c553a17e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u000D&lt;/code&gt;, CARRIAGE RETURN</source>
          <target state="translated">&lt;code&gt;\u000D&lt;/code&gt; , 캐리지 리턴</target>
        </trans-unit>
        <trans-unit id="5db02a1d4ad351e7c2764ac0bd17783c93e7fb96" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u0080&lt;/code&gt; to &lt;code&gt;\u07FF&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\u0080&lt;/code&gt; ~ &lt;code&gt;\u07FF&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="36f63e87dab18adcf01437da5bc0ab7ff8ad0dca" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;\u0800&lt;/code&gt; to &lt;code&gt;\uFFFF&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;\u0800&lt;/code&gt; ~ &lt;code&gt;\uFFFF&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5e62ce08a82138b74c826ee8f2caee551841e30e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;]&lt;/code&gt; cannot be converted to the component type of the destination array; when the exception is thrown, source array components from positions &lt;code&gt;srcPos&lt;/code&gt; through &lt;code&gt;srcPos+&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;]&lt;/code&gt; 는 대상 배열의 구성 요소 유형으로 변환 할 수 없습니다. 예외가 발생하면 &lt;code&gt;srcPos&lt;/code&gt; 위치 에서 &lt;code&gt;srcPos+&lt;/code&gt; 까지의 소스 배열 구성 요소</target>
        </trans-unit>
        <trans-unit id="44c896ae97e6e607c8df8a54373d25d259cff70b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;]&lt;/code&gt; through &lt;code&gt;b[b.length-1]&lt;/code&gt; unaffected.</source>
          <target state="translated">&lt;code&gt;]&lt;/code&gt; 에서 &lt;code&gt;b[b.length-1]&lt;/code&gt; 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c43769cb0b3ea057d9004cfd5a8c20ef8812d364" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;]&lt;/code&gt; through &lt;code&gt;b[off+len-1]&lt;/code&gt; unaffected.</source>
          <target state="translated">&lt;code&gt;]&lt;/code&gt; 에서 &lt;code&gt;b[off+len-1]&lt;/code&gt; 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="37bf83a6c9297c3a52945eeb580f5d04d6cd5eb5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a1&lt;/code&gt; - one array to be tested for equality</source>
          <target state="translated">&lt;code&gt;a1&lt;/code&gt; -동일한 지 테스트 할 하나의 배열</target>
        </trans-unit>
        <trans-unit id="f86ade9e503f4d3962b90239cfa976ee9696a37a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a2&lt;/code&gt; - the other array to be tested for equality</source>
          <target state="translated">&lt;code&gt;a2&lt;/code&gt; - 동등성을 테스트 할 다른 배열</target>
        </trans-unit>
        <trans-unit id="5014c5089eac3f97aac933e866d17dd4511689a4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - - &lt;code&gt;Accessible&lt;/code&gt; to be set as the parent</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - - &lt;code&gt;Accessible&lt;/code&gt; 부모로서 설정</target>
        </trans-unit>
        <trans-unit id="9d70b9244aed42165010689c15c3477de2e1447d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;JComponent&lt;/code&gt; for which to get count of accessible children</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;JComponent&lt;/code&gt; 에 대한 액세스 할 아이들의 수를 얻을 수 있습니다</target>
        </trans-unit>
        <trans-unit id="434d36ac4a2ed44a2de1b0ede64307e4202b8280" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - An attribute expression</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 속성 표현</target>
        </trans-unit>
        <trans-unit id="77835ec2afa3b1b1e76e3a0a34b803bb6889a43f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - An attribute expression.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 속성 식입니다.</target>
        </trans-unit>
        <trans-unit id="238b16c69ae8ad80a5aee815ac4f6623ec0c390e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - Bounds of the View</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; -보기의 경계</target>
        </trans-unit>
        <trans-unit id="00aa264f3672ff02d3e251d414bb005f587b3d3e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - Destination for the formatted output. If &lt;code&gt;a&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt; then a &lt;a href=&quot;../lang/stringbuilder&quot;&gt;&lt;code&gt;StringBuilder&lt;/code&gt;&lt;/a&gt; will be created.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 포맷 된 출력 대상. 경우 &lt;code&gt;a&lt;/code&gt; 이다 &lt;code&gt;null&lt;/code&gt; 다음 &lt;a href=&quot;../lang/stringbuilder&quot;&gt; &lt;code&gt;StringBuilder&lt;/code&gt; &lt;/a&gt; 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="d18321186b137851b4a5b800116bb18637b42e88" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - JPopupMenu requesting Popup</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - JPopupMenu를 요청하는 팝업</target>
        </trans-unit>
        <trans-unit id="2af087de9183eb4c9d0dd8252105c40dd46f59c9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - The &lt;code&gt;Arc2D&lt;/code&gt; to use to set the arc's values.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Arc2D&lt;/code&gt; 호의 값을 설정하기 위해서 사용합니다.</target>
        </trans-unit>
        <trans-unit id="2f7596f0d496a7b1b06c633f5640ad8d1c3ff555" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - The authenticator to be set. If a is &lt;code&gt;null&lt;/code&gt; then any previously set authenticator is removed.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 인증 자 설정할 수 있습니다. a가 &lt;code&gt;null&lt;/code&gt; 이면 이전에 설정된 인증자가 제거됩니다.</target>
        </trans-unit>
        <trans-unit id="880e35b62cf360c76938ea0fc51b97498498fd3b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - The element attributes</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 요소 속성</target>
        </trans-unit>
        <trans-unit id="38c2bf61dc5c4b36d0f31fd4f5cd72a5b9fcbd71" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - The set of attributes to be represented in the the compact form.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 속성의 세트는 컴팩트 한 형태로 표현된다.</target>
        </trans-unit>
        <trans-unit id="3c3b24f49bb25027c9a3bb144516dc7d24476137" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - The set of attributes to be represented in the the larger form.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 속성의 세트는 더 큰 형태로 표현된다.</target>
        </trans-unit>
        <trans-unit id="b64ee7a24a78827fac79c608439f8b8bbe60da94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - a &lt;code&gt;JComboBox&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;JComboBox&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="b88a88ec308a91420b1387c170bda812c96be06e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - a &lt;code&gt;JComponent&lt;/code&gt; for which to get a child object</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;JComponent&lt;/code&gt; 에 대한 자식 개체를 얻을 수 있습니다</target>
        </trans-unit>
        <trans-unit id="4146f69019bf630d9787b61c83cb140e97a71ea7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - a &lt;code&gt;JOptionPane&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;JOptionPane&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="9aac2e4d8b8f41eabbbb26e982ca0c6a82e6428f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - a &lt;code&gt;JSplitPane&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;JSplitPane&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e9b0bb11ae3b66cdf8f816fe813bd2efe9a13260" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - a &lt;code&gt;JTree&lt;/code&gt; object</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;JTree&lt;/code&gt; 객체</target>
        </trans-unit>
        <trans-unit id="b3befe807f184ef345f6467520809efbe60b33c6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - a &lt;code&gt;MouseEvent&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;MouseEvent&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="267ddaaa211e9231e31753b2bc7b87d3feab1227" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - a &lt;code&gt;double&lt;/code&gt; value.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;double&lt;/code&gt; 값</target>
        </trans-unit>
        <trans-unit id="a6ca290a9213915a97f4988f5b83cc2312984ae3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - a file</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 파일</target>
        </trans-unit>
        <trans-unit id="4f921562ae3e2ac3f9a7516f62143528ae58affb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - a file object</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 파일 객체</target>
        </trans-unit>
        <trans-unit id="a04b8b69a0de922ebb38b9ba3f12161deaed44c4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - a floating-point value to be rounded to a &lt;code&gt;long&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 부동 소수점 값은 반올림 될 수 있습니다 &lt;code&gt;long&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8bbdb87351b89d22eb17b679028c1e827d28f2a6" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - a floating-point value to be rounded to an integer.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 부동 소수점 값이 정수로 반올림된다.</target>
        </trans-unit>
        <trans-unit id="f5d1347350dfbc64935a3227b812d63cea06d606" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - a set of CSS attributes</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; -CSS 속성 세트</target>
        </trans-unit>
        <trans-unit id="741666c0b651e6a15978b2054c7f5d783fc64e9d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - a set of attributes</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 속성 세트</target>
        </trans-unit>
        <trans-unit id="6c283cf059d30b3e44c3a1996be1b1f4e72c283f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - a value</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 값</target>
        </trans-unit>
        <trans-unit id="17c97d9946f446827c50af7a2fe8518b7fe95897" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - a value.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 값.</target>
        </trans-unit>
        <trans-unit id="edfe46303f2f61885f842884a5441cefd8e06ba0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - action-listener-a</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 액션 리스너</target>
        </trans-unit>
        <trans-unit id="5f0258d0ccbe251499d927e34f4bb6ee58353275" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - adjustment-listener-a</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 조정 청취자</target>
        </trans-unit>
        <trans-unit id="3353a48fe0cf57ea951deeeccf0a6a0de2e8d644" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - an &lt;code&gt;AccessibleTable&lt;/code&gt; representing the column headers</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;AccessibleTable&lt;/code&gt; 를가 열 머리글을 나타내는</target>
        </trans-unit>
        <trans-unit id="c3ca292f4704c04e58a54af4bd8d84568a7d6c54" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - an &lt;code&gt;AccessibleTable&lt;/code&gt; representing the row headers</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;AccessibleTable&lt;/code&gt; 를은 행 머리글을 나타내는</target>
        </trans-unit>
        <trans-unit id="e02a6a2b3a6a0a38686862738db45321f206873d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - an &lt;code&gt;Action&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Action&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="6555a1b84d34075d0c0b67e6cd5d5d77a986c395" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - an angle, in radians.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 각도, 라디안이다.</target>
        </trans-unit>
        <trans-unit id="c7806cba9353ec0a11df09f36ff39371923254b4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - an argument.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 인수.</target>
        </trans-unit>
        <trans-unit id="b121b7553e75c69cc6300a96b124b422eef250ad" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - an instance of an &lt;code&gt;Action&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Action&lt;/code&gt; 의 인스턴스</target>
        </trans-unit>
        <trans-unit id="8366062084eb2211acfe410de6526fa09f95f4cc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - an object</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 객체</target>
        </trans-unit>
        <trans-unit id="a03737e22cb264d8c20d4f687756d3daa8e9afcd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - annotation to examine</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 주석 검토하기</target>
        </trans-unit>
        <trans-unit id="8fd865a18671240001bcc18ce76369519b476b8f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - annotation type being requested</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 주석 형이 요청되는</target>
        </trans-unit>
        <trans-unit id="ea6ba239c64717351e5eeea4ac5f7b5d59e66818" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - base.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 기본.</target>
        </trans-unit>
        <trans-unit id="b11bcc11f4289e558c42be7887dd9c6c6c2c5be7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - component-listener-a</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 구성 요소 리스너</target>
        </trans-unit>
        <trans-unit id="8c30ba63f3cd12d7df5759a2e06e5869e96c3b49" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - container-listener-a</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 컨테이너 리스너</target>
        </trans-unit>
        <trans-unit id="d94bf0561824c33a35eac9299d8dd4f8b07f48b7" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - event listener-a</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 이벤트 청취자 a</target>
        </trans-unit>
        <trans-unit id="73839200008d066fa9e2efcb8f6d8a36cea1e6fb" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - focus-listener-a</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 포커스 청취자 a</target>
        </trans-unit>
        <trans-unit id="183e8ec2e05239751692be0ceca576be336a31e0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - hierarchy-bounds-listener-a</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 계층 경계 리스너</target>
        </trans-unit>
        <trans-unit id="28f692e9e4eb91aada21ec6b5abd230c0fdfa3bc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - hierarchy-listener-a</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 계층 리스너</target>
        </trans-unit>
        <trans-unit id="3e91baa73dfa78d2c4a46a39ca3d4638e762f4b0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - input-method-listener-a</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 입력 방법 청취자</target>
        </trans-unit>
        <trans-unit id="9101e5aeda0a2602a57468bfbae720cf8283978a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - item-listener-a</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 항목 리스너</target>
        </trans-unit>
        <trans-unit id="ab77a488458bd3a34af05bc0f99a4c635801fc83" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - key-listener-a</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 키 리스너</target>
        </trans-unit>
        <trans-unit id="a97392149aed661b576a85d04c9d9455e5026f94" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - listener-a</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 청취자 a</target>
        </trans-unit>
        <trans-unit id="8b4b6e4aceb1590e80f8db000acd0c56dd01582a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - mouse-listener-a</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 마우스 청취자</target>
        </trans-unit>
        <trans-unit id="2360f4c4bda3f8d3ff81eab31a5543955bcbcc5f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - mouse-motion-listener-a</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 마우스 모션 청취자</target>
        </trans-unit>
        <trans-unit id="263fbc8d39c9134df06cdc63420fdecfab782d2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - mouse-wheel-listener-a</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 마우스 휠 청취자</target>
        </trans-unit>
        <trans-unit id="4f713ddc4f07cc09a5862bba6b2b1eab2e69c305" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - one array to be tested for equality</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 하나 개의 배열은 어떤지를 테스트 할</target>
        </trans-unit>
        <trans-unit id="2432bd6545530efab177a24cc2a6be8a2acde382" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - tag action handler</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 태그 액션 핸들러</target>
        </trans-unit>
        <trans-unit id="aa918ce82318580b2d1b5418b928a2ec2fd8022a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - text-listener-a</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 텍스트 청취자</target>
        </trans-unit>
        <trans-unit id="a175dda58a17f1ac6e18f58704983759c2ad3863" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;Action&lt;/code&gt; for the &lt;code&gt;AbstractButton&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Action&lt;/code&gt; 에 대한 &lt;code&gt;AbstractButton&lt;/code&gt; 에 , 또는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="eebd484ce213e25764fe6158cb2d291b23e26ffc" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;Action&lt;/code&gt; for the &lt;code&gt;JComboBox&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Action&lt;/code&gt; 에 대한 &lt;code&gt;JComboBox&lt;/code&gt; 에 , 또는 &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="173dd04a3004228fc7945ee89f4613713419ff99" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;Action&lt;/code&gt; for the &lt;code&gt;JTextField&lt;/code&gt;, or &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Action&lt;/code&gt; 에 대한 &lt;code&gt;JTextField&lt;/code&gt; 를 , 또는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="f21b4fa99be9993e4002b7f28a269b821fc10179" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;Action&lt;/code&gt; for the button to be added</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Action&lt;/code&gt; 버튼의가 추가 될</target>
        </trans-unit>
        <trans-unit id="6686266eed1d0734366031d1a148165e645cfae3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;Action&lt;/code&gt; for the menu item to be added</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Action&lt;/code&gt; 메뉴 항목을 추가 할</target>
        </trans-unit>
        <trans-unit id="97512df3b80786f4bb1eed91a32e2a541a46d47e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;Action&lt;/code&gt; from which to get the properties, or &lt;code&gt;null&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Action&lt;/code&gt; 에서이 속성을 얻거나하는 &lt;code&gt;null&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="0ebc076e4506a6c433fd698973b0e926100bb135" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;Action&lt;/code&gt; object for the menu item to add</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Action&lt;/code&gt; 메뉴 항목에 대한 객체 추가</target>
        </trans-unit>
        <trans-unit id="00667be734b3f423bb1ee67430b78bdb42a6bb33" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;Action&lt;/code&gt; object to add as a new menu item</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Action&lt;/code&gt; 객체는 새로운 메뉴 항목으로 추가</target>
        </trans-unit>
        <trans-unit id="51316530e95ec3909286565e91649108c2c71f8e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;Action&lt;/code&gt; object to insert</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Action&lt;/code&gt; 인서트 객체</target>
        </trans-unit>
        <trans-unit id="19a6ad647f4f365e157d0f5a9e84d5ff83be7989" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;Action&lt;/code&gt; on which to base the radio button menu item</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Action&lt;/code&gt; 에 라디오 버튼 메뉴 항목을 기반으로하는</target>
        </trans-unit>
        <trans-unit id="bf7258fa859c584d750a8845b9c085ae4e3e36c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;Action&lt;/code&gt; to add to the menu</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Action&lt;/code&gt; 메뉴에 추가</target>
        </trans-unit>
        <trans-unit id="63964d213ab3154c3c3d0fbf00e4252f754cf138" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;Action&lt;/code&gt; used to specify the new button</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Action&lt;/code&gt; 새 단추를 지정하는 데 사용</target>
        </trans-unit>
        <trans-unit id="0af834a282987822ef15576ec09e633ccd76f5a3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;Action&lt;/code&gt; used to specify the new check box</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Action&lt;/code&gt; 새로운 확인란을 지정하는 데 사용</target>
        </trans-unit>
        <trans-unit id="84dfa136f33d01d4e70bc66f809db9ebf0c0112c" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;Graphics&lt;/code&gt; context in which to paint</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;Graphics&lt;/code&gt; 페인트 대상의 문맥</target>
        </trans-unit>
        <trans-unit id="6f5925895016b7ce4c3cb00445100a35cc87cbdd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;JTree&lt;/code&gt; being edited</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;JTree&lt;/code&gt; 편집중인</target>
        </trans-unit>
        <trans-unit id="da6a09bf70960ad5331633b3b8e7e04f09032489" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;JTree&lt;/code&gt; for &lt;code&gt;path&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;JTree&lt;/code&gt; 에 대한 &lt;code&gt;path&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="fd24d6a1f5a23a0ba4ac731dfe75392c20bdb01e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;JTree&lt;/code&gt; for which to count rows</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;JTree&lt;/code&gt; 에 행을 계산하기위한</target>
        </trans-unit>
        <trans-unit id="e9e3f2c81fdc9960cb81eb68ebd0ea43b48916c0" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;JTree&lt;/code&gt; for which to return a path</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;JTree&lt;/code&gt; 의 경로를 반환 할</target>
        </trans-unit>
        <trans-unit id="82bd69dfdb88ca1cddf0d940f68e950e7c03adab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the &lt;code&gt;char&lt;/code&gt; array</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;char&lt;/code&gt; 배열</target>
        </trans-unit>
        <trans-unit id="173c96699101354e4c41823e6a3da516d5fa5392" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the action</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 액션</target>
        </trans-unit>
        <trans-unit id="c570353844bafcc859185cbb3bc4383f596be2d4" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the action of the &lt;code&gt;JCheckBoxMenuItem&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;JCheckBoxMenuItem&lt;/code&gt; 의 조치</target>
        </trans-unit>
        <trans-unit id="e696af30fe71ea20b4c1e3417282f9b8723dff0a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the action of the &lt;code&gt;JMenuItem&lt;/code&gt;</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - &lt;code&gt;JMenuItem&lt;/code&gt; 의 조치</target>
        </trans-unit>
        <trans-unit id="39a1120635e0a1d1c662972e41da764fb07d00e8" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the alignment &amp;gt;= 0</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 정렬&amp;gt; = 0</target>
        </trans-unit>
        <trans-unit id="264b29b1a1f2c26a8048582dc5d84ec7566edb19" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the alignment &amp;gt;= 0.0f &amp;amp;&amp;amp; &amp;lt;= 1.0f</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 정렬&amp;gt; = 0.0f를 &amp;amp;&amp;amp; &amp;lt;= 1.0F</target>
        </trans-unit>
        <trans-unit id="e29c2febf52a92a947aaf85c24e18371a91f647e" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the allocated region in which to render</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 렌더링에 할당 할 수 있었던 영역</target>
        </trans-unit>
        <trans-unit id="dd1dfd87ef4b08619aeeac35831970413e0760c5" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the allocated region to render into</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 할당 된 지역으로 렌더링하기</target>
        </trans-unit>
        <trans-unit id="8d80d896fcd25c5419f3cd79627bca356b859295" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the allocation</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 할당</target>
        </trans-unit>
        <trans-unit id="b345265b9276d1fdb8b0adff4298b5f2736e4d09" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the allocation given to the view</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 뷰로 지정된 할당</target>
        </trans-unit>
        <trans-unit id="85539b2b647526b6b05e16464f9ad98164876529" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the allocation given to the view, which may need to be adjusted.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 조정해야 할 수도 뷰에 지정된 할당.</target>
        </trans-unit>
        <trans-unit id="92b3444ff83f52a06185147640200afb4f7abbe3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the allocation to the View</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; -보기에 할당</target>
        </trans-unit>
        <trans-unit id="57985a651191aa2e78b3cece407c90dcb2860b3f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the allocation to the interior of the box on entry, and the allocation of the child view at the index on exit.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 항목에있는 상자의 내부에 할당 및 종료에 대한 인덱스의 아이 뷰의 할당.</target>
        </trans-unit>
        <trans-unit id="4a939301a05542ac517d0f6dac9382fdefd8d7f3" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the allocation to the interior of the box on entry, and the allocation of the view containing the position on exit</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 항목에있는 상자의 내부에 할당 및 출구에 위치를 포함하는 뷰의 할당</target>
        </trans-unit>
        <trans-unit id="36be2298c86d01f69fced60000f2594ea67da5ce" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the allocation to the table on entry, and the allocation of the view containing the position on exit</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 항목의 테이블에 할당 및 출구에 위치를 포함하는 뷰의 할당</target>
        </trans-unit>
        <trans-unit id="d096fee640ddb8667a3fb6bd81b45042ea833c64" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the allocation to this view</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; -이 뷰에 대한 할당</target>
        </trans-unit>
        <trans-unit id="e216bc9136bcd2d1028c65427948fe6abd622434" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the allocation to this view.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; -이 뷰에 대한 할당.</target>
        </trans-unit>
        <trans-unit id="14efb92c27d964fc50ddfb33a3e41ce80518038f" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the alpha component</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 알파 성분</target>
        </trans-unit>
        <trans-unit id="d4728ed8443e57302ac4cc5bef2136702584dcaa" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the annotation containing the annotation value</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 주석이 주석 값을 포함</target>
        </trans-unit>
        <trans-unit id="86cc65650d0acb9711e9ccb8311e14248e9a9ce9" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the annotation mirror being examined</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - the annotation mirror being examined</target>
        </trans-unit>
        <trans-unit id="0d57f1a98cb0e3a4ffbd167155080470c2311d3d" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the annotation to use as a position hint</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 주석이 위치 힌트로 사용하는</target>
        </trans-unit>
        <trans-unit id="fb5376379e52c47842e2693b1f4400dc2018b2ab" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the area of the view, which encompasses the requested character</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - the area of the view, which encompasses the requested character</target>
        </trans-unit>
        <trans-unit id="519a7a92906b78efd290b67a5ca9791590548e65" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the area of the view, which encompasses the requested region</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - the area of the view, which encompasses the requested region</target>
        </trans-unit>
        <trans-unit id="400db1395df46c9d387dce38a375970bebafaa5b" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the argument whose absolute value is to be determined</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 절대 값을 결정하는 인자</target>
        </trans-unit>
        <trans-unit id="32778404777d56725e4c2d677b2f6da123b75a2a" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the argument whose absolute value is to be determined.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 절대 값을 결정하는 인자.</target>
        </trans-unit>
        <trans-unit id="f1eb823e2a6ae6f5e79400ee69b71533359bf539" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the array</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 배열</target>
        </trans-unit>
        <trans-unit id="a2c0f88079950ab71521c0db8a6c8e18a8dfe408" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the array by which the list will be backed</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; - 목록이 기가되는 배열</target>
        </trans-unit>
        <trans-unit id="5502648628d6a00ddbb5f492bc2244c22b1ca1cd" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the array into which the elements of the Vector are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose.</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; -Vector 요소가 충분히 큰 경우 저장되는 배열 그렇지 않으면 동일한 런타임 유형의 새 배열이이 목적으로 할당됩니다.</target>
        </trans-unit>
        <trans-unit id="e9a9c840d1245f6900dc88759e0ec3217b8a4687" translate="yes" xml:space="preserve">
          <source>&lt;code&gt;a&lt;/code&gt; - the array into which the elements of the deque are to be stored, if it is big enough; otherwise, a new array of the same runtime type is allocated for this purpose</source>
          <target state="translated">&lt;code&gt;a&lt;/code&gt; -deque 요소가 충분히 큰 경우, 배열의 요소가 저장되는 배열 그렇지 않으면 동일한 런타임 유형의 새 배열이이 목적으로 할당됩니다.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
