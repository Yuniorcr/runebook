<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" version="1.2">
  <file source-language="en" target-language="ko" datatype="htmlbody" original="openjdk">
    <body>
      <group id="openjdk">
        <trans-unit id="838273e4d4c3afa680e7aa83ec4385dfa9583961" translate="yes" xml:space="preserve">
          <source>This job media sheets attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">이 작업 매체 시트 속성 값과 &lt;code&gt;object&lt;/code&gt; 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="de3deada5978343c7ae28bc382eaaa4eb7708954" translate="yes" xml:space="preserve">
          <source>This job media sheets completed attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">이 작업 미디어 시트는 완성 된 속성 값과 &lt;code&gt;object&lt;/code&gt; 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="3afb14ae1e4acf07802173b3536b7644e4debc03" translate="yes" xml:space="preserve">
          <source>This job media sheets supported attribute's members and &lt;code&gt;object&lt;/code&gt;'s members are the same.</source>
          <target state="translated">지원되는이 작업 매체 시트 속성의 구성원과 &lt;code&gt;object&lt;/code&gt; 의 구성원이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="8a08e608bc977b9b4c6038b4fce830163c750672" translate="yes" xml:space="preserve">
          <source>This job message from operator attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="translated">운영자 속성의 로케일 및 &lt;code&gt;object&lt;/code&gt; 로케일의이 작업 메시지 는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="f81935108ca14648fd5fad2a9b90d65078401d36" translate="yes" xml:space="preserve">
          <source>This job message from operator attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="translated">운영자 속성의 기본 문자열과 &lt;code&gt;object&lt;/code&gt; 의 기본 문자열에서이 작업 메시지 는 동일합니다.</target>
        </trans-unit>
        <trans-unit id="8573b3ffcede7e8f93e17d6c8fa2e94259da36e3" translate="yes" xml:space="preserve">
          <source>This job name attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="translated">이 작업 이름 속성의 로케일과 &lt;code&gt;object&lt;/code&gt; 의 로케일이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="0cfe10df41cbc7462d16efc16bfb69a3ecea7ed1" translate="yes" xml:space="preserve">
          <source>This job name attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="translated">이 작업 이름 속성의 기본 문자열과 &lt;code&gt;object&lt;/code&gt; 의 기본 문자열이 같습니다.</target>
        </trans-unit>
        <trans-unit id="220af8d7a532aa9546a31fa0bbdde8d8f26c2ba7" translate="yes" xml:space="preserve">
          <source>This job originating user name attribute's locale and &lt;code&gt;object&lt;/code&gt;'s locale are equal.</source>
          <target state="translated">이 작업을 시작한 사용자 이름 속성의 로캘 및 &lt;code&gt;object&lt;/code&gt; 의 로케일이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="1a933d56df8aa13ad4b227fc833465d27d5a99ef" translate="yes" xml:space="preserve">
          <source>This job originating user name attribute's underlying string and &lt;code&gt;object&lt;/code&gt;'s underlying string are equal.</source>
          <target state="translated">이 작업 시작 사용자 이름 속성의 기본 문자열과 &lt;code&gt;object&lt;/code&gt; 의 기본 문자열이 동일합니다.</target>
        </trans-unit>
        <trans-unit id="acec6d0fcdfe71ac2627f8c9ce9ce5d904d8207b" translate="yes" xml:space="preserve">
          <source>This job priority attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">이 작업 우선 순위 속성 값과 &lt;code&gt;object&lt;/code&gt; 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="d30066dbd2bd1b6a5282fdcccde9d53715f165f6" translate="yes" xml:space="preserve">
          <source>This job priority supported attribute's value and &lt;code&gt;object&lt;/code&gt;'s value are equal.</source>
          <target state="translated">이 작업 우선 순위 지원 속성 값과 &lt;code&gt;object&lt;/code&gt; 값이 같습니다.</target>
        </trans-unit>
        <trans-unit id="d08bff79d7efea86b07bb2462680f681632d9396" translate="yes" xml:space="preserve">
          <source>This key's channel</source>
          <target state="translated">이 키의 채널</target>
        </trans-unit>
        <trans-unit id="c9ff12ff91ae98cc554261912b7101e293f6eae9" translate="yes" xml:space="preserve">
          <source>This key's interest set</source>
          <target state="translated">이 키의 관심사</target>
        </trans-unit>
        <trans-unit id="484578ab393992ca6b35a256c926024ac4dc1ee9" translate="yes" xml:space="preserve">
          <source>This key's ready-operation set</source>
          <target state="translated">이 키의 준비된 작동 세트</target>
        </trans-unit>
        <trans-unit id="2bd50f3229021f6ed4b5ed6fc741de067a259d3f" translate="yes" xml:space="preserve">
          <source>This key's selector</source>
          <target state="translated">이 키의 선택기</target>
        </trans-unit>
        <trans-unit id="73baf2dac208aeeefd239b512ce83c57bf5fb818" translate="yes" xml:space="preserve">
          <source>This language model follows a</source>
          <target state="translated">이 언어 모델은</target>
        </trans-unit>
        <trans-unit id="02083baa37ca03ae48a795e1863460256795cea9" translate="yes" xml:space="preserve">
          <source>This layout consists of the following.</source>
          <target state="translated">이 레이아웃은 다음과 같이 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="08bafb4de8fa150a066e013b957eac47b5b87da5" translate="yes" xml:space="preserve">
          <source>This layout consists of three components:</source>
          <target state="translated">이 레이아웃은 세 가지 구성 요소로 구성됩니다.</target>
        </trans-unit>
        <trans-unit id="d06378025803f7e834e7fbe6de083b43033b9704" translate="yes" xml:space="preserve">
          <source>This layout manager handles the 'standard' layout of combo boxes.</source>
          <target state="translated">이 레이아웃 관리자는 콤보 상자의 '표준'레이아웃을 처리합니다.</target>
        </trans-unit>
        <trans-unit id="d28749f47b48e5f7b74eb805a1dfbfae1fd36db9" translate="yes" xml:space="preserve">
          <source>This layout manager handles the 'standard' layout of combo boxes. It puts the arrow button to the right and the editor to the left. If there is no editor it still keeps the arrow button to the right. This public inner class should be treated as protected. Instantiate it only within subclasses of &lt;code&gt;BasicComboBoxUI&lt;/code&gt;.</source>
          <target state="translated">이 레이아웃 관리자는 콤보 상자의 '표준'레이아웃을 처리합니다. 화살표 버튼은 오른쪽에, 편집기는 왼쪽에 배치됩니다. 편집기가없는 경우에도 화살표 버튼이 오른쪽으로 유지됩니다. 이 공용 내부 클래스는 보호 된 것으로 취급되어야합니다. &lt;code&gt;BasicComboBoxUI&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 .</target>
        </trans-unit>
        <trans-unit id="a9a4fc2ed95a342a8fda1a8cc53202e20b93bc6e" translate="yes" xml:space="preserve">
          <source>This leniency value is overwritten by a call to &lt;a href=&quot;#setCalendar(java.util.Calendar)&quot;&gt;&lt;code&gt;setCalendar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 관용 값은 &lt;a href=&quot;#setCalendar(java.util.Calendar)&quot;&gt; &lt;code&gt;setCalendar()&lt;/code&gt; &lt;/a&gt; 호출로 덮어 씁니다 .</target>
        </trans-unit>
        <trans-unit id="4c2c3e90746d07e042f7de1d3edae0977de2cab2" translate="yes" xml:space="preserve">
          <source>This leniency value is overwritten by a call to &lt;a href=&quot;dateformat#setCalendar-java.util.Calendar-&quot;&gt;&lt;code&gt;setCalendar()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 leniency 값은 &lt;a href=&quot;dateformat#setCalendar-java.util.Calendar-&quot;&gt; &lt;code&gt;setCalendar()&lt;/code&gt; &lt;/a&gt; 호출로 겹쳐 씁니다 .</target>
        </trans-unit>
        <trans-unit id="1e3f08a3b3746f9d959d955d6e0b9530fd999f6a" translate="yes" xml:space="preserve">
          <source>This list is always available even if the types have not yet been created or loaded.</source>
          <target state="translated">이 목록은 유형이 아직 생성되거나로드되지 않은 경우에도 항상 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6745b06683b74107be10e019a2fb743b65af4636" translate="yes" xml:space="preserve">
          <source>This list is for drawing the current item in the combo box.</source>
          <target state="translated">이 목록은 콤보 상자에 현재 항목을 그리기위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="9976da2e9bb71e18b5f5ad51885abc1487df76aa" translate="yes" xml:space="preserve">
          <source>This list must be modifiable, but need not be resizable.</source>
          <target state="translated">이 목록은 수정 가능해야하지만 크기를 조정할 필요는 없습니다.</target>
        </trans-unit>
        <trans-unit id="268b58557765ce29bab85b86825bb0e18a07fee9" translate="yes" xml:space="preserve">
          <source>This list of classes allowed by filter should correspond to the transitive closure of the credentials class (or classes) used by the installed &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxauthenticator&quot;&gt;JMXAuthenticator&lt;/a&gt; associated with the &lt;a href=&quot;rmiserver&quot;&gt;RMIServer&lt;/a&gt; implementation. If the attribute is not set then any class is deemed acceptable.</source>
          <target state="translated">필터에서 허용하는이 클래스 목록은 &lt;a href=&quot;rmiserver&quot;&gt;RMIServer&lt;/a&gt; 구현 과 연관된 설치된 &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxauthenticator&quot;&gt;JMXAuthenticator에서&lt;/a&gt; 사용하는 자격 증명 클래스 (또는 클래스)의 전 이적 폐쇄에 해당해야합니다 . 속성이 설정되지 않은 경우 모든 클래스가 허용되는 것으로 간주됩니다.</target>
        </trans-unit>
        <trans-unit id="f295b81d72a3d3fa2b6c144b63ebbfa16bf7f622" translate="yes" xml:space="preserve">
          <source>This list of classes should correspond to the transitive closure of the credentials class (or classes) used by the installed &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxauthenticator&quot;&gt;JMXAuthenticator&lt;/a&gt; associated with the &lt;a href=&quot;rmiserver&quot;&gt;RMIServer&lt;/a&gt; implementation.</source>
          <target state="translated">이 클래스 목록은 &lt;a href=&quot;rmiserver&quot;&gt;RMIServer&lt;/a&gt; 구현 과 관련된 설치된 &lt;a href=&quot;../../../../../java.management/javax/management/remote/jmxauthenticator&quot;&gt;JMXAuthenticator에서&lt;/a&gt; 사용하는 자격 증명 클래스 (또는 클래스)의 전 이적 폐쇄와 일치해야합니다 .</target>
        </trans-unit>
        <trans-unit id="7a0beb373abb5775c863c42ecb09405681eca1d1" translate="yes" xml:space="preserve">
          <source>This list of types is called the &quot;iteration variable types&quot; (&lt;code&gt;(V...)&lt;/code&gt;).</source>
          <target state="translated">이 유형 목록을 &quot;반복 변수 유형&quot;( &lt;code&gt;(V...)&lt;/code&gt; )이라고합니다.</target>
        </trans-unit>
        <trans-unit id="1e7f6bd81cf6613199477a515c77c4800a751e69" translate="yes" xml:space="preserve">
          <source>This listener changes the selected item as you move the mouse over the list.</source>
          <target state="translated">이 리스너는 목록 위로 마우스를 이동하면 선택한 항목을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="42c3c2d1be2a2a7ed0178b74fadcc23eac38981c" translate="yes" xml:space="preserve">
          <source>This listener changes the selected item as you move the mouse over the list. The selection change is not committed to the model, this is for user feedback only.</source>
          <target state="translated">이 리스너는 목록 위로 마우스를 이동하면 선택한 항목을 변경합니다. 선택 변경은 모델에 적용되지 않으며 사용자 피드백만을위한 것입니다.</target>
        </trans-unit>
        <trans-unit id="acdd89278f6bce413066df6772389d19f2897bb9" translate="yes" xml:space="preserve">
          <source>This listener checks to see if the key event isn't a navigation key.</source>
          <target state="translated">이 리스너는 키 이벤트가 탐색 키가 아닌지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="34f40c5fc67700c7e2b5adcbf643209ef2211fc7" translate="yes" xml:space="preserve">
          <source>This listener checks to see if the key event isn't a navigation key. If it finds a key event that wasn't a navigation key it dispatches it to JComboBox.selectWithKeyChar() so that it can do type-ahead. This public inner class should be treated as protected. Instantiate it only within subclasses of &lt;code&gt;BasicComboBoxUI&lt;/code&gt;.</source>
          <target state="translated">이 리스너는 키 이벤트가 탐색 키가 아닌지 확인합니다. 탐색 키가 아닌 키 이벤트를 찾으면 JComboBox.selectWithKeyChar ()로 전달하여 자동 완성 기능을 수행 할 수 있습니다. 이 공용 내부 클래스는 보호 된 것으로 취급되어야합니다. &lt;code&gt;BasicComboBoxUI&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 .</target>
        </trans-unit>
        <trans-unit id="0a26d371d4c74d935c25dc08050ad6c810a85df0" translate="yes" xml:space="preserve">
          <source>This listener hides the popup when the focus is lost.</source>
          <target state="translated">이 리스너는 포커스를 잃었을 때 팝업을 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="8b3aeea66d948f2b69fe0a07136db681ee0576d3" translate="yes" xml:space="preserve">
          <source>This listener hides the popup when the focus is lost. It also repaints when focus is gained or lost. This public inner class should be treated as protected. Instantiate it only within subclasses of &lt;code&gt;BasicComboBoxUI&lt;/code&gt;.</source>
          <target state="translated">이 리스너는 포커스를 잃었을 때 팝업을 숨 깁니다. 또한 초점을 얻거나 잃을 때 다시 칠합니다. 이 공용 내부 클래스는 보호 된 것으로 취급되어야합니다. &lt;code&gt;BasicComboBoxUI&lt;/code&gt; 의 하위 클래스 내에서만 인스턴스화하십시오 .</target>
        </trans-unit>
        <trans-unit id="57e34331cc044959216ba18c57386c3256dde613" translate="yes" xml:space="preserve">
          <source>This listener hides the popup when the mouse is released in the list.</source>
          <target state="translated">이 리스너는 목록에서 마우스를 놓을 때 팝업을 숨 깁니다.</target>
        </trans-unit>
        <trans-unit id="5be5e232c1d560f1f29e0df14979e0389aa3d44e" translate="yes" xml:space="preserve">
          <source>This listener watches for bound properties that have changed in the combo box.</source>
          <target state="translated">이 리스너는 콤보 상자에서 변경된 바인딩 된 속성을 감시합니다.</target>
        </trans-unit>
        <trans-unit id="44b5bb7938d309b66d68d99dff9a37c740da0388" translate="yes" xml:space="preserve">
          <source>This listener watches for changes in the &lt;code&gt;ComboBoxModel&lt;/code&gt;.</source>
          <target state="translated">이 리스너는 &lt;code&gt;ComboBoxModel&lt;/code&gt; 의 변경 사항을 감시합니다 .</target>
        </trans-unit>
        <trans-unit id="1eeb1a09db6fd54765101be694c1e8a38eef2939" translate="yes" xml:space="preserve">
          <source>This listener watches for changes to the selection in the combo box.</source>
          <target state="translated">이 리스너는 콤보 상자에서 선택 항목의 변경 사항을 감시합니다.</target>
        </trans-unit>
        <trans-unit id="28569be1ee52d5cb80cb1c29a43380e03dd05b9a" translate="yes" xml:space="preserve">
          <source>This listener watches for dragging and updates the current selection in the list if it is dragging over the list.</source>
          <target state="translated">이 리스너는 드래그를 감시하고 목록 위로 드래그하는 경우 목록의 현재 선택을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="ae4f32d527341dc4907dea7f8ce1ed40f9011233" translate="yes" xml:space="preserve">
          <source>This loads the rules for the specified zone ID. The provider implementation must validate that the zone ID is valid and available, throwing a &lt;code&gt;ZoneRulesException&lt;/code&gt; if it is not. The result of the method in the valid case depends on the caching flag.</source>
          <target state="translated">지정된 영역 ID에 대한 규칙을로드합니다. 공급자 구현은 영역 ID가 유효하고 사용 가능한지 확인하여 &lt;code&gt;ZoneRulesException&lt;/code&gt; 을 발생시켜야합니다. 않은 경우 발생 . 유효한 경우 메소드의 결과는 캐싱 플래그에 따라 다릅니다.</target>
        </trans-unit>
        <trans-unit id="39fc7580f18990809098420829cd6895c80668b4" translate="yes" xml:space="preserve">
          <source>This lock allows both readers and writers to reacquire read or write locks in the style of a &lt;a href=&quot;reentrantlock&quot;&gt;&lt;code&gt;ReentrantLock&lt;/code&gt;&lt;/a&gt;. Non-reentrant readers are not allowed until all write locks held by the writing thread have been released.</source>
          <target state="translated">이 잠금을 사용하면 리더와 작성자가 &lt;a href=&quot;reentrantlock&quot;&gt; &lt;code&gt;ReentrantLock&lt;/code&gt; &lt;/a&gt; 스타일의 읽기 또는 쓰기 잠금을 다시 획득 할 수 있습니다 . 쓰기 스레드가 보유한 모든 쓰기 잠금이 해제 될 때까지 재진입 할 ​​수없는 판독기는 허용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="4f17de85a2537643f6e3bf98800bfe94fe213e92" translate="yes" xml:space="preserve">
          <source>This lock supports a maximum of 2147483647 recursive locks by the same thread. Attempts to exceed this limit result in &lt;a href=&quot;../../../lang/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; throws from locking methods.</source>
          <target state="translated">이 잠금은 동일한 스레드에서 최대 2147483647 재귀 잠금을 지원합니다. 이 한계를 초과하면 잠금 메소드 에서 &lt;a href=&quot;../../../lang/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="f8a9c4c5c4bd80a6e77a206482c5c4028f099b12" translate="yes" xml:space="preserve">
          <source>This lock supports a maximum of 65535 recursive write locks and 65535 read locks. Attempts to exceed these limits result in &lt;a href=&quot;../../../lang/error&quot;&gt;&lt;code&gt;Error&lt;/code&gt;&lt;/a&gt; throws from locking methods.</source>
          <target state="translated">이 잠금은 최대 65535 재귀 쓰기 잠금 및 65535 읽기 잠금을 지원합니다. 이러한 한계를 초과하면 잠금 방법 에서 &lt;a href=&quot;../../../lang/error&quot;&gt; &lt;code&gt;Error&lt;/code&gt; &lt;/a&gt; 가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="498ae751748b7f332cb118e1a386ca5e28361c2e" translate="yes" xml:space="preserve">
          <source>This low-level event is generated by a component object (such as a List) when the component is moved, resized, rendered invisible, or made visible again. The event is passed to every &lt;code&gt;ComponentListener&lt;/code&gt; or &lt;code&gt;ComponentAdapter&lt;/code&gt; object which registered to receive such events using the component's &lt;code&gt;addComponentListener&lt;/code&gt; method. (&lt;code&gt;ComponentAdapter&lt;/code&gt; objects implement the &lt;code&gt;ComponentListener&lt;/code&gt; interface.) Each such listener object gets this &lt;code&gt;ComponentEvent&lt;/code&gt; when the event occurs.</source>
          <target state="translated">이 하위 수준 이벤트는 구성 요소가 이동, 크기 조정, 보이지 않게 렌더링되거나 다시 표시 될 때 구성 요소 개체 (예 : List)에 의해 생성됩니다. 이벤트는 컴포넌트의 &lt;code&gt;addComponentListener&lt;/code&gt; 메소드를 사용하여 이러한 이벤트를 수신하도록 등록 된 모든 &lt;code&gt;ComponentListener&lt;/code&gt; 또는 &lt;code&gt;ComponentAdapter&lt;/code&gt; 오브젝트 로 전달됩니다 . ( &lt;code&gt;ComponentAdapter&lt;/code&gt; 객체는 &lt;code&gt;ComponentListener&lt;/code&gt; 인터페이스를 구현합니다 .) 이러한 각 리스너 객체는 이벤트가 발생할 때이 &lt;code&gt;ComponentEvent&lt;/code&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="477272bd4fdf8e37d0735c27fcd1c11d4225a5b8" translate="yes" xml:space="preserve">
          <source>This low-level event is generated by a component object (such as a text field) when a key is pressed, released, or typed. The event is passed to every &lt;code&gt;KeyListener&lt;/code&gt; or &lt;code&gt;KeyAdapter&lt;/code&gt; object which registered to receive such events using the component's &lt;code&gt;addKeyListener&lt;/code&gt; method. (&lt;code&gt;KeyAdapter&lt;/code&gt; objects implement the &lt;code&gt;KeyListener&lt;/code&gt; interface.) Each such listener object gets this &lt;code&gt;KeyEvent&lt;/code&gt; when the event occurs.</source>
          <target state="translated">이 하위 수준 이벤트는 키를 누르거나, 놓거나, 입력 할 때 구성 요소 개체 (예 : 텍스트 필드)에 의해 생성됩니다. 이벤트는 구성 요소의 &lt;code&gt;addKeyListener&lt;/code&gt; 메서드를 사용하여 이러한 이벤트를 수신하도록 등록한 모든 &lt;code&gt;KeyListener&lt;/code&gt; 또는 &lt;code&gt;KeyAdapter&lt;/code&gt; 개체에 전달됩니다 . ( &lt;code&gt;KeyAdapter&lt;/code&gt; 객체는 &lt;code&gt;KeyListener&lt;/code&gt; 인터페이스를 구현합니다 .) 이러한 각 리스너 객체는 이벤트가 발생할 때이 &lt;code&gt;KeyEvent&lt;/code&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="b0cb36b21d4b9f38e8a58fba2c8242ad9bc81a3c" translate="yes" xml:space="preserve">
          <source>This low-level event is generated by a component object for:</source>
          <target state="translated">이 저수준 이벤트는 다음에 대한 구성 요소 개체에 의해 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="13b76ceac28c9fbc7c77c51f61ab6569a4a53efb" translate="yes" xml:space="preserve">
          <source>This low-level event is generated by a container object (such as a Panel) when a component is added to it or removed from it. The event is passed to every &lt;code&gt;ContainerListener&lt;/code&gt; or &lt;code&gt;ContainerAdapter&lt;/code&gt; object which registered to receive such events using the component's &lt;code&gt;addContainerListener&lt;/code&gt; method. (&lt;code&gt;ContainerAdapter&lt;/code&gt; objects implement the &lt;code&gt;ContainerListener&lt;/code&gt; interface.) Each such listener object gets this &lt;code&gt;ContainerEvent&lt;/code&gt; when the event occurs.</source>
          <target state="translated">이 하위 수준 이벤트는 구성 요소가 추가되거나 제거 될 때 컨테이너 개체 (예 : Panel)에 의해 생성됩니다. 이벤트는 구성 요소의 &lt;code&gt;addContainerListener&lt;/code&gt; 메서드를 사용하여 이러한 이벤트를 수신하도록 등록 된 모든 &lt;code&gt;ContainerListener&lt;/code&gt; 또는 &lt;code&gt;ContainerAdapter&lt;/code&gt; 개체에 전달됩니다 . ( &lt;code&gt;ContainerAdapter&lt;/code&gt; 객체는 &lt;code&gt;ContainerListener&lt;/code&gt; 인터페이스를 구현합니다 .) 이러한 각 리스너 객체는 이벤트가 발생할 때이 &lt;code&gt;ContainerEvent&lt;/code&gt; 를 가져 옵니다.</target>
        </trans-unit>
        <trans-unit id="5f0ec25fdf5dc877766df703b934928f678dda94" translate="yes" xml:space="preserve">
          <source>This makes it possible for a MBeanServer implementation to wrap another MBeanServer implementation, in order to implement, e.g, security checks, or to prevent access to the actual MBeanServer implementation by returning a pointer to a wrapping object.</source>
          <target state="translated">이것에 의해, MBeanServer 구현은, 예를 들어 시큐리티 체크를 구현하거나, 랩핑 객체에의 포인터를 돌려 실제의 MBeanServer 구현에의 액세스를 막기 위해서 다른 MBeanServer 구현을 랩 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ad52a127b76c9d66c4665870a7f2db773ae8df39" translate="yes" xml:space="preserve">
          <source>This makes it possible to decouple configuration from KeyStore object creation and e.g. delay a password prompt until it is needed.</source>
          <target state="translated">이를 통해 KeyStore 객체 생성과 구성을 분리 할 수 ​​있으며 필요할 때까지 비밀번호 프롬프트를 지연시킬 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c6eed4b0728c771888a382dcda28f5cacc2ab26" translate="yes" xml:space="preserve">
          <source>This manageable usage threshold attribute is designed for monitoring the increasing trend of memory usage with low overhead. Usage threshold may not be appropriate for some memory pools. For example, a generational garbage collector, a common garbage collection algorithm used in many Java virtual machine implementations, manages two or more generations segregating objects by age. Most of the objects are allocated in the &lt;em&gt;youngest generation&lt;/em&gt; (say a nursery memory pool). The nursery memory pool is designed to be filled up and collecting the nursery memory pool will free most of its memory space since it is expected to contain mostly short-lived objects and mostly are unreachable at garbage collection time. In this case, it is more appropriate for the nursery memory pool not to support a usage threshold. In addition, if the cost of an object allocation in one memory pool is very low (for example, just atomic pointer exchange), the Java virtual machine would probably not support the usage threshold for that memory pool since the overhead in comparing the usage with the threshold is higher than the cost of object allocation.</source>
          <target state="translated">이 관리 가능한 사용 임계 값 속성은 낮은 오버 헤드로 증가하는 메모리 사용 추세를 모니터링하기 위해 설계되었습니다. 일부 메모리 풀에는 사용 임계 값이 적절하지 않을 수 있습니다. 예를 들어, 많은 Java 가상 머신 구현에 사용되는 공통 가비지 콜렉션 알고리즘 인 세대 가비지 콜렉터는 연령별로 오브젝트를 분리하는 둘 이상의 세대를 관리합니다. 대부분의 객체는&lt;em&gt; 가장 어린 세대에&lt;/em&gt;(보육실 메모리 풀). 종묘장 메모리 풀은 채워지도록 설계되었으며 종묘장 메모리 풀을 수집하면 대부분 수명이 짧은 객체를 포함하고 가비지 콜렉션 시간에 도달 할 수 없기 때문에 대부분의 메모리 공간을 비 웁니다. 이 경우, 보육 메모리 풀이 사용 임계 값을 지원하지 않는 것이 더 적절합니다. 또한 하나의 메모리 풀에서 객체 할당 비용이 매우 낮은 경우 (예 : 원자 포인터 교환) Java 가상 머신은 사용량을 비교하는 오버 헤드 때문에 해당 메모리 풀의 사용량 임계 값을 지원하지 않을 수 있습니다. 임계 값은 오브젝트 할당 비용보다 높습니다.</target>
        </trans-unit>
        <trans-unit id="35481535999e219226ed7260bb8d577155df60a6" translate="yes" xml:space="preserve">
          <source>This mandatory attribute specifies one or more &lt;code&gt;.jar&lt;/code&gt; files containing MBeans or other resources used by the MBean to be obtained. One of the &lt;code&gt;.jar&lt;/code&gt; files must contain the file specified by the &lt;code&gt;CODE&lt;/code&gt; or &lt;code&gt;OBJECT&lt;/code&gt; attribute. If archivelist contains more than one file:</source>
          <target state="translated">이 필수 속성은 MBean 또는 획득 할 MBean에서 사용하는 기타 자원을 포함하는 하나 이상의 &lt;code&gt;.jar&lt;/code&gt; 파일을 지정합니다 . &lt;code&gt;.jar&lt;/code&gt; 파일 중 하나에 &lt;code&gt;CODE&lt;/code&gt; 또는 &lt;code&gt;OBJECT&lt;/code&gt; 속성으로 지정된 파일이 있어야합니다 . archivelist에 둘 이상의 파일이 포함 된 경우 :</target>
        </trans-unit>
        <trans-unit id="87c7d28cf318caf3d2eb42565e1c5809c7163593" translate="yes" xml:space="preserve">
          <source>This map and its views have a predictable iteration order, namely the order that keys were inserted into the map, as with &lt;a href=&quot;../linkedhashmap&quot;&gt;&lt;code&gt;LinkedHashMap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 맵과 해당 뷰에는 예측 가능한 반복 순서, 즉 &lt;a href=&quot;../linkedhashmap&quot;&gt; &lt;code&gt;LinkedHashMap&lt;/code&gt; &lt;/a&gt; 과 같이 키가 맵에 삽입 된 순서가 있습니다.</target>
        </trans-unit>
        <trans-unit id="f5524cba1eecadcebc8c35911aae88ca196ee038" translate="yes" xml:space="preserve">
          <source>This map contains a mapping of the IDs that is in line with TZDB 2005r and later, where 'EST', 'MST' and 'HST' map to IDs which do not include daylight savings.</source>
          <target state="translated">이 맵에는 TZDB 2005r 이상과 일치하는 ID의 맵핑이 포함되어 있습니다. 여기서 'EST', 'MST'및 'HST'는 일광 절약 시간이 포함되지 않은 ID에 맵핑됩니다.</target>
        </trans-unit>
        <trans-unit id="911207d2c588140463ecb8b52de79e69fce22112" translate="yes" xml:space="preserve">
          <source>This maps as follows:</source>
          <target state="translated">이것은 다음과 같이 매핑됩니다.</target>
        </trans-unit>
        <trans-unit id="a5a13882774a3d179decff4a601406ffbfefc228" translate="yes" xml:space="preserve">
          <source>This matcher</source>
          <target state="translated">이 매처</target>
        </trans-unit>
        <trans-unit id="3f464a6ed2b31d27d45078a00dadf8011534d911" translate="yes" xml:space="preserve">
          <source>This matcher's state should not be modified during execution of the returned stream's pipeline. The returned stream's source &lt;code&gt;Spliterator&lt;/code&gt; is &lt;em&gt;fail-fast&lt;/em&gt; and will, on a best-effort basis, throw a &lt;a href=&quot;../concurrentmodificationexception&quot;&gt;&lt;code&gt;ConcurrentModificationException&lt;/code&gt;&lt;/a&gt; if such modification is detected.</source>
          <target state="translated">이 매처의 상태는 반환 된 스트림의 파이프 라인을 실행하는 동안 수정해서는 안됩니다. 반환 된 스트림의 소스 &lt;code&gt;Spliterator&lt;/code&gt; 는 &lt;em&gt;오류가 빠르고&lt;/em&gt; 수정이 감지되면 최선을 다해 &lt;a href=&quot;../concurrentmodificationexception&quot;&gt; &lt;code&gt;ConcurrentModificationException&lt;/code&gt; 을&lt;/a&gt; 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="30411f00314cf455c61ae6720a79e4171750cf70" translate="yes" xml:space="preserve">
          <source>This matrix can be used for color transforms in the forward direction of the profile--from the profile color space to the CIEXYZ PCS.</source>
          <target state="translated">이 매트릭스는 프로파일 색상 공간에서 CIEXYZ PCS까지 프로파일의 정방향으로 색상 변환에 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="84b9d1706f6d64171d5d05c25027addb6e865427" translate="yes" xml:space="preserve">
          <source>This may be -1 if the column or parameter index is unknown, in which case the &lt;code&gt;parameter&lt;/code&gt; and &lt;code&gt;read&lt;/code&gt; fields should be ignored.</source>
          <target state="translated">열 또는 매개 변수 색인을 알 수없는 경우 -1이 될 수 있으며,이 경우 &lt;code&gt;parameter&lt;/code&gt; 및 &lt;code&gt;read&lt;/code&gt; 필드를 무시해야합니다.</target>
        </trans-unit>
        <trans-unit id="0b307bc548b8ee4a0055cb8dedb40c30e8dec645" translate="yes" xml:space="preserve">
          <source>This may be used in conjunction with &lt;a href=&quot;#UNDERLINE&quot;&gt;&lt;code&gt;UNDERLINE&lt;/code&gt;&lt;/a&gt; if desired. The primary purpose is for use by input methods. Other use of these underlines for simple ornamentation might confuse users.</source>
          <target state="translated">원하는 경우 &lt;a href=&quot;#UNDERLINE&quot;&gt; &lt;code&gt;UNDERLINE&lt;/code&gt; &lt;/a&gt; 과 함께 사용할 수 있습니다 . 기본 목적은 입력 방법에서 사용하는 것입니다. 간단한 장식을 위해 이러한 밑줄을 다른 용도로 사용하면 사용자에게 혼란을 줄 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a9b4a4dab6a1c51f10cbe63188a2e2e3478a17cb" translate="yes" xml:space="preserve">
          <source>This may change the behavior or disable execution of other parts of the program. If a provider subsequently requested by the program has been removed, execution may fail. Also, if the removed provider is not explicitly requested by the rest of the program, but it would normally be the provider chosen when a cryptography service is requested (due to its previous order in the list of providers), a different provider will be chosen instead, or no suitable provider will be found, thereby resulting in program failure.</source>
          <target state="translated">이것은 프로그램의 다른 부분의 동작을 변경하거나 실행하지 못하게 할 수 있습니다. 프로그램이 요청한 공급자가 제거 된 경우 실행이 실패 할 수 있습니다. 또한 제거 된 제공자가 프로그램의 나머지 부분에서 명시 적으로 요청되지 않았지만 암호화 서비스가 요청 될 때 (제공자 목록의 이전 순서로 인해) 일반적으로 선택되는 제공자 인 경우 다른 제공자가 선택됩니다. 대신 적절한 공급자를 찾지 못해 프로그램이 실패합니다.</target>
        </trans-unit>
        <trans-unit id="e25c3d88b5316836314b17b8a0985e4bf4894b4f" translate="yes" xml:space="preserve">
          <source>This may change the selection if the current selection is not valid for the new mode. For example, if three TreePaths are selected when the mode is changed to &lt;code&gt;SINGLE_TREE_SELECTION&lt;/code&gt;, only one TreePath will remain selected. It is up to the particular implementation to decide what TreePath remains selected.</source>
          <target state="translated">현재 선택이 새 모드에 유효하지 않은 경우 선택이 변경 될 수 있습니다. 예를 들어 모드가 &lt;code&gt;SINGLE_TREE_SELECTION&lt;/code&gt; 으로 변경 될 때 세 개의 TreePath가 선택되면 하나의 TreePath 만 선택된 상태로 유지됩니다. 어떤 TreePath가 선택 될지 결정하는 것은 특정 구현에 달려 있습니다.</target>
        </trans-unit>
        <trans-unit id="7a8156d5a9cb5ada74a83aa742bb0991ff39d16b" translate="yes" xml:space="preserve">
          <source>This may include making use of any preferences API that is available as part of the Java or native platform. This algorithm may be overridden by a user setting the property &lt;code&gt;javax.print.defaultPrinter&lt;/code&gt;. A service specified must be discovered to be valid and currently available to be returned as the default.</source>
          <target state="translated">여기에는 Java 또는 기본 플랫폼의 일부로 사용 가능한 기본 설정 API를 사용하는 것이 포함될 수 있습니다. 이 알고리즘은 &lt;code&gt;javax.print.defaultPrinter&lt;/code&gt; 속성을 설정하는 사용자에 의해 재정의 될 수 있습니다 . 지정된 서비스는 유효하고 현재 기본값으로 반환 될 수있는 것으로 검색되어야합니다.</target>
        </trans-unit>
        <trans-unit id="cf34dce9122aca3b2ff13e553ac77235975bd1d1" translate="yes" xml:space="preserve">
          <source>This may include making use of any preferences API that is available as part of the Java or native platform. This algorithm may be overridden by a user setting the property javax.print.defaultPrinter. A service specified must be discovered to be valid and currently available to be returned as the default.</source>
          <target state="translated">여기에는 Java 또는 기본 플랫폼의 일부로 사용 가능한 환경 설정 API를 사용하는 것이 포함될 수 있습니다. 이 알고리즘은 사용자가 javax.print.defaultPrinter 특성을 설정하여 대체 할 수 있습니다. 지정된 서비스가 유효하고 현재 기본값으로 리턴 될 수 있음을 발견해야합니다.</target>
        </trans-unit>
        <trans-unit id="bd36de123ef5dbe7af50d2c99fb6a96d6e586ce5" translate="yes" xml:space="preserve">
          <source>This may load either synchronously or asynchronously depending upon the document returned by the &lt;code&gt;EditorKit&lt;/code&gt;. If the &lt;code&gt;Document&lt;/code&gt; is of type &lt;code&gt;AbstractDocument&lt;/code&gt; and has a value returned by &lt;code&gt;AbstractDocument.getAsynchronousLoadPriority&lt;/code&gt; that is greater than or equal to zero, the page will be loaded on a separate thread using that priority.</source>
          <target state="translated">이것은 &lt;code&gt;EditorKit&lt;/code&gt; 에 의해 반환 된 문서에 따라 동기식 또는 비동기식으로로드 될 수 있습니다 . 는 IF &lt;code&gt;Document&lt;/code&gt; 형이고 &lt;code&gt;AbstractDocument&lt;/code&gt; 에 의해 리턴 된 값을 갖는다 &lt;code&gt;AbstractDocument.getAsynchronousLoadPriority&lt;/code&gt; 에 혹은 제로인보다 크고, 페이지는 그 우선 순위를 사용하여 별도의 스레드에로드한다.</target>
        </trans-unit>
        <trans-unit id="2eb64e6727cd33a0bb000ac74e42189ae9a791c4" translate="yes" xml:space="preserve">
          <source>This may return a &lt;code&gt;NumberFormat&lt;/code&gt; instance with the Thai numbering system, instead of the Latin numbering system.</source>
          <target state="translated">라틴어 번호 시스템 대신 태국어 번호 시스템을 사용 하여 &lt;code&gt;NumberFormat&lt;/code&gt; 인스턴스를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="02a1de890dcb2dc4d84e3222192853c0d1e45fd8" translate="yes" xml:space="preserve">
          <source>This means a minimum of 2 integer digits, 1 fraction digit, and a maximum of 2 fraction digits.</source>
          <target state="translated">이는 최소 2 자리 정수, 1 자리, 최대 2 자리를 의미합니다.</target>
        </trans-unit>
        <trans-unit id="1dee7b6afbfaff12dc1f11cf78e171e872edea4a" translate="yes" xml:space="preserve">
          <source>This means that for some &lt;code&gt;Shapes&lt;/code&gt; this method might return &lt;code&gt;false&lt;/code&gt; even though the &lt;code&gt;Shape&lt;/code&gt; contains the &lt;code&gt;Rectangle2D&lt;/code&gt;. The &lt;a href=&quot;area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class performs more accurate geometric computations than most &lt;code&gt;Shape&lt;/code&gt; objects and therefore can be used if a more precise answer is required.</source>
          <target state="translated">즉 , &lt;code&gt;Shape&lt;/code&gt; 에 &lt;code&gt;Rectangle2D&lt;/code&gt; 가 포함되어 있어도 일부 &lt;code&gt;Shapes&lt;/code&gt; 경우이 메서드가 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있습니다 . &lt;a href=&quot;area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt; 클래스가 수행하는보다 정확한 기하학적 가장 비해 계산 &lt;code&gt;Shape&lt;/code&gt; 보다 정확한 결과가 필요한 경우 따라서 물체와 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="bc5eb2b4ea7589ab3a51e6c81e57bc928144b808" translate="yes" xml:space="preserve">
          <source>This means that for some &lt;code&gt;Shapes&lt;/code&gt; this method might return &lt;code&gt;false&lt;/code&gt; even though the &lt;code&gt;Shape&lt;/code&gt; contains the &lt;code&gt;Rectangle2D&lt;/code&gt;. The &lt;a href=&quot;geom/area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class performs more accurate geometric computations than most &lt;code&gt;Shape&lt;/code&gt; objects and therefore can be used if a more precise answer is required.</source>
          <target state="translated">즉 , &lt;code&gt;Shape&lt;/code&gt; 에 &lt;code&gt;Rectangle2D&lt;/code&gt; 가 포함되어 있어도 일부 &lt;code&gt;Shapes&lt;/code&gt; 경우이 메서드가 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있습니다 . &lt;a href=&quot;geom/area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt; 클래스가 수행하는보다 정확한 기하학적 가장 비해 계산 &lt;code&gt;Shape&lt;/code&gt; 보다 정확한 결과가 필요한 경우 따라서 물체와 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1d490c3effb1a3804fec14d34c4c9740df62ae43" translate="yes" xml:space="preserve">
          <source>This means that for some &lt;code&gt;Shapes&lt;/code&gt; this method might return &lt;code&gt;false&lt;/code&gt; even though the &lt;code&gt;Shape&lt;/code&gt; contains the rectangular area. The &lt;a href=&quot;area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class performs more accurate geometric computations than most &lt;code&gt;Shape&lt;/code&gt; objects and therefore can be used if a more precise answer is required.</source>
          <target state="translated">이는 일부 &lt;code&gt;Shape&lt;/code&gt; 의 경우 Shape 에 사각형 영역이 포함되어 &lt;code&gt;Shapes&lt;/code&gt; 메서드가 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있음을 의미합니다 . &lt;a href=&quot;area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt; 클래스가 수행하는보다 정확한 기하학적 가장 비해 계산 &lt;code&gt;Shape&lt;/code&gt; 보다 정확한 결과가 필요한 경우 따라서 물체와 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0f0b38b2990f15abcd0cdfebf2c1d08cf3833c19" translate="yes" xml:space="preserve">
          <source>This means that for some &lt;code&gt;Shapes&lt;/code&gt; this method might return &lt;code&gt;false&lt;/code&gt; even though the &lt;code&gt;Shape&lt;/code&gt; contains the rectangular area. The &lt;a href=&quot;geom/area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class performs more accurate geometric computations than most &lt;code&gt;Shape&lt;/code&gt; objects and therefore can be used if a more precise answer is required.</source>
          <target state="translated">이는 일부 &lt;code&gt;Shape&lt;/code&gt; 의 경우 Shape 에 사각형 영역이 포함되어 &lt;code&gt;Shapes&lt;/code&gt; 메서드가 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있음을 의미합니다 . &lt;a href=&quot;geom/area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt; 클래스가 수행하는보다 정확한 기하학적 가장 비해 계산 &lt;code&gt;Shape&lt;/code&gt; 보다 정확한 결과가 필요한 경우 따라서 물체와 사용할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="66828844d2daf815b1f02bd687a02e198a2ea126" translate="yes" xml:space="preserve">
          <source>This means that for some &lt;code&gt;Shapes&lt;/code&gt; this method might return &lt;code&gt;true&lt;/code&gt; even though the &lt;code&gt;Rectangle2D&lt;/code&gt; does not intersect the &lt;code&gt;Shape&lt;/code&gt;. The &lt;a href=&quot;area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class performs more accurate computations of geometric intersection than most &lt;code&gt;Shape&lt;/code&gt; objects and therefore can be used if a more precise answer is required.</source>
          <target state="translated">이것은 &lt;code&gt;Rectangle2D&lt;/code&gt; 가 &lt;code&gt;Shape&lt;/code&gt; 과 교차하지 않더라도 일부 &lt;code&gt;Shapes&lt;/code&gt; 의 경우이 메서드가 &lt;code&gt;true&lt;/code&gt; 를 반환 할 수 있음을 의미합니다 . &lt;a href=&quot;area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt; 대부분보다 기하학적 교차점의 클래스 계산을 수행 정확한 &lt;code&gt;Shape&lt;/code&gt; 보다 정확한 결과가 필요한 경우에 따라서 목적 및 사용할 수있다.</target>
        </trans-unit>
        <trans-unit id="80cb4254ae570ce16655b149ff3242e54ebfe7c2" translate="yes" xml:space="preserve">
          <source>This means that for some &lt;code&gt;Shapes&lt;/code&gt; this method might return &lt;code&gt;true&lt;/code&gt; even though the &lt;code&gt;Rectangle2D&lt;/code&gt; does not intersect the &lt;code&gt;Shape&lt;/code&gt;. The &lt;a href=&quot;geom/area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class performs more accurate computations of geometric intersection than most &lt;code&gt;Shape&lt;/code&gt; objects and therefore can be used if a more precise answer is required.</source>
          <target state="translated">이것은 &lt;code&gt;Rectangle2D&lt;/code&gt; 가 &lt;code&gt;Shape&lt;/code&gt; 과 교차하지 않더라도 일부 &lt;code&gt;Shapes&lt;/code&gt; 의 경우이 메서드가 &lt;code&gt;true&lt;/code&gt; 를 반환 할 수 있음을 의미합니다 . &lt;a href=&quot;geom/area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt; 대부분보다 기하학적 교차점의 클래스 계산을 수행 정확한 &lt;code&gt;Shape&lt;/code&gt; 보다 정확한 결과가 필요한 경우에 따라서 목적 및 사용할 수있다.</target>
        </trans-unit>
        <trans-unit id="1b29811ac736e7b8b21304c8119e39791df83d6e" translate="yes" xml:space="preserve">
          <source>This means that for some &lt;code&gt;Shapes&lt;/code&gt; this method might return &lt;code&gt;true&lt;/code&gt; even though the rectangular area does not intersect the &lt;code&gt;Shape&lt;/code&gt;. The &lt;a href=&quot;area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class performs more accurate computations of geometric intersection than most &lt;code&gt;Shape&lt;/code&gt; objects and therefore can be used if a more precise answer is required.</source>
          <target state="translated">이것은 직사각형 영역이 &lt;code&gt;Shape&lt;/code&gt; 과 교차하지 않더라도 일부 &lt;code&gt;Shapes&lt;/code&gt; 의 경우이 메서드가 &lt;code&gt;true&lt;/code&gt; 를 반환 할 수 있음을 의미합니다 . &lt;a href=&quot;area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt; 대부분보다 기하학적 교차점의 클래스 계산을 수행 정확한 &lt;code&gt;Shape&lt;/code&gt; 보다 정확한 결과가 필요한 경우에 따라서 목적 및 사용할 수있다.</target>
        </trans-unit>
        <trans-unit id="dd98346ef8fe8b5e8c598dfa992f307d06144e5f" translate="yes" xml:space="preserve">
          <source>This means that for some &lt;code&gt;Shapes&lt;/code&gt; this method might return &lt;code&gt;true&lt;/code&gt; even though the rectangular area does not intersect the &lt;code&gt;Shape&lt;/code&gt;. The &lt;a href=&quot;geom/area&quot;&gt;&lt;code&gt;Area&lt;/code&gt;&lt;/a&gt; class performs more accurate computations of geometric intersection than most &lt;code&gt;Shape&lt;/code&gt; objects and therefore can be used if a more precise answer is required.</source>
          <target state="translated">이것은 직사각형 영역이 &lt;code&gt;Shape&lt;/code&gt; 과 교차하지 않더라도 일부 &lt;code&gt;Shapes&lt;/code&gt; 의 경우이 메서드가 &lt;code&gt;true&lt;/code&gt; 를 반환 할 수 있음을 의미합니다 . &lt;a href=&quot;geom/area&quot;&gt; &lt;code&gt;Area&lt;/code&gt; &lt;/a&gt; 대부분보다 기하학적 교차점의 클래스 계산을 수행 정확한 &lt;code&gt;Shape&lt;/code&gt; 보다 정확한 결과가 필요한 경우에 따라서 목적 및 사용할 수있다.</target>
        </trans-unit>
        <trans-unit id="a91841d75e767a08d26a9cbfb4237550b49254a5" translate="yes" xml:space="preserve">
          <source>This means:</source>
          <target state="translated">이것은 다음을 의미합니다.</target>
        </trans-unit>
        <trans-unit id="175c122d043e36e6f1bd35d5db17f5a3f55b8e3d" translate="yes" xml:space="preserve">
          <source>This mechanism may be used to obtain &lt;code&gt;ImageReaders&lt;/code&gt; that will generated non-pixel meta-data (see &lt;code&gt;IIOExtraDataInfo&lt;/code&gt;) in a structure understood by an &lt;code&gt;ImageWriter&lt;/code&gt;. By reading the image and obtaining this data from one of the &lt;code&gt;ImageReaders&lt;/code&gt; obtained with this method and passing it on to the &lt;code&gt;ImageWriter&lt;/code&gt;, a client program can read an image, modify it in some way, and write it back out preserving all meta-data, without having to understand anything about the internal structure of the meta-data, or even about the image format.</source>
          <target state="translated">이 메커니즘은 &lt;code&gt;ImageWriter&lt;/code&gt; 가 이해하는 구조에서 비 픽셀 메타 데이터 ( &lt;code&gt;IIOExtraDataInfo&lt;/code&gt; 참조 )를 생성하는 &lt;code&gt;ImageReaders&lt;/code&gt; 를 얻는 데 사용될 수 있습니다 . 클라이언트 프로그램은 이 메소드로 얻은 &lt;code&gt;ImageReaders&lt;/code&gt; 중 하나 에서 이미지를 읽고이 데이터를 가져와 &lt;code&gt;ImageWriter&lt;/code&gt; 로 전달 함으로써 이미지를 읽고 어떤 방식 으로든 수정 한 후 모든 메타 데이터를 보존하여 다시 쓸 수 있습니다. 메타 데이터의 내부 구조 나 이미지 형식에 대해 전혀 이해할 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="9477ec011ccc6cd62b18edb4a3330853eab03d19" translate="yes" xml:space="preserve">
          <source>This mechanism may be used to obtain &lt;code&gt;ImageWriters&lt;/code&gt; that will understand the internal structure of non-pixel meta-data (see &lt;code&gt;IIOTreeInfo&lt;/code&gt;) generated by an &lt;code&gt;ImageReader&lt;/code&gt;. By obtaining this data from the &lt;code&gt;ImageReader&lt;/code&gt; and passing it on to one of the &lt;code&gt;ImageWriters&lt;/code&gt; obtained with this method, a client program can read an image, modify it in some way, and write it back out while preserving all meta-data, without having to understand anything about the internal structure of the meta-data, or even about the image format.</source>
          <target state="translated">이 메커니즘은 &lt;code&gt;ImageReader&lt;/code&gt; 에 의해 생성 된 비 픽셀 메타 데이터 ( &lt;code&gt;IIOTreeInfo&lt;/code&gt; 참조 ) 의 내부 구조를 이해하는 &lt;code&gt;ImageWriters&lt;/code&gt; 를 얻는 데 사용될 수 있습니다 . 클라이언트 프로그램은 &lt;code&gt;ImageReader&lt;/code&gt; 에서이 데이터를 가져 &lt;code&gt;ImageWriters&lt;/code&gt; 방법으로 얻은 ImageWriter 중 하나로 전달 함으로써 이미지를 읽고 어떤 방식 으로든 수정 한 후 모든 메타 데이터를 보존하면서 다시 쓸 수 있습니다. 메타 데이터의 내부 구조 또는 이미지 형식에 대해 이해합니다.</target>
        </trans-unit>
        <trans-unit id="8d697d58de89ca07c4000044004190c244fe1fb3" translate="yes" xml:space="preserve">
          <source>This media size attribute's &lt;code&gt;X&lt;/code&gt; dimension is equal to &lt;code&gt;object&lt;/code&gt;'s &lt;code&gt;X&lt;/code&gt; dimension.</source>
          <target state="translated">이 매체 사이즈 속성의 &lt;code&gt;X&lt;/code&gt; 의 크기는 동일 &lt;code&gt;object&lt;/code&gt; 의 &lt;code&gt;X&lt;/code&gt; 의 차원.</target>
        </trans-unit>
        <trans-unit id="2a0c1614de59d3da6f1f880b774bfe797a1dec13" translate="yes" xml:space="preserve">
          <source>This media size attribute's &lt;code&gt;Y&lt;/code&gt; dimension is equal to &lt;code&gt;object&lt;/code&gt;'s &lt;code&gt;Y&lt;/code&gt; dimension.</source>
          <target state="translated">이 매체 사이즈 속성의 &lt;code&gt;Y&lt;/code&gt; 의 크기는 동일 &lt;code&gt;object&lt;/code&gt; 의 &lt;code&gt;Y&lt;/code&gt; 의 차원.</target>
        </trans-unit>
        <trans-unit id="fff14e76e51b02ad662012f54442a58e001ebfca" translate="yes" xml:space="preserve">
          <source>This media size attribute's X dimension is equal to &lt;code&gt;object&lt;/code&gt;'s X dimension.</source>
          <target state="translated">이 미디어 크기 속성의 X 차원은 &lt;code&gt;object&lt;/code&gt; 의 X 차원과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="2d5678d6bc3b126d851653c58af1c418b754a3c4" translate="yes" xml:space="preserve">
          <source>This media size attribute's Y dimension is equal to &lt;code&gt;object&lt;/code&gt;'s Y dimension.</source>
          <target state="translated">이 미디어 크기 속성의 Y 치수는 &lt;code&gt;object&lt;/code&gt; 의 Y 치수와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="ea82da6b140a0e965f6a617a910099dd753b8f82" translate="yes" xml:space="preserve">
          <source>This membership key</source>
          <target state="translated">이 멤버쉽 키</target>
        </trans-unit>
        <trans-unit id="1fe5b77aaa8bd2afc34312a4ca12b492551504ec" translate="yes" xml:space="preserve">
          <source>This message is the opposite of addEdit--anEdit has typically already been queued in an &lt;code&gt;UndoManager&lt;/code&gt; (or other UndoableEditListener), and the receiver is being given a chance to take its place.</source>
          <target state="translated">이 메시지는 addEdit의 반대 메시지입니다. anEdit는 일반적으로 이미 &lt;code&gt;UndoManager&lt;/code&gt; (또는 다른 UndoableEditListener)의 대기열에 있으며 수신자에게 그 자리를 대신 할 기회가 주어집니다.</target>
        </trans-unit>
        <trans-unit id="4e4d250127621f81a309496eef97f9c17361e687" translate="yes" xml:space="preserve">
          <source>This message may be either the final text or a localization key.</source>
          <target state="translated">이 메시지는 최종 텍스트이거나 현지화 키일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1add261afe876410ef3a22a8c296c2d87752408e" translate="yes" xml:space="preserve">
          <source>This method (which varies in argument types across different classes) atomically sets a variable to the &lt;code&gt;updateValue&lt;/code&gt; if it currently holds the &lt;code&gt;expectedValue&lt;/code&gt;, reporting &lt;code&gt;true&lt;/code&gt; on success. The classes in this package also contain methods to get and unconditionally set values, as well as a weaker conditional atomic update operation &lt;code&gt;weakCompareAndSet&lt;/code&gt; described below.</source>
          <target state="translated">(클래스가 다르면 인수의 형태도 다르다)이 방법은 원자 적으로 변수 설정 &lt;code&gt;updateValue&lt;/code&gt; 에를 가 현재 보유하고있는 경우 &lt;code&gt;expectedValue&lt;/code&gt; 를을 보고, &lt;code&gt;true&lt;/code&gt; 성공. 이 패키지의 클래스에는 아래에 설명 된 약한 조건부 원자 업데이트 작업 &lt;code&gt;weakCompareAndSet&lt;/code&gt; 뿐만 아니라 값을 가져오고 무조건 설정하는 메소드도 포함되어 있습니다.</target>
        </trans-unit>
        <trans-unit id="676abcf10cf3f6ca400c78527f174dc0cfff75a2" translate="yes" xml:space="preserve">
          <source>This method &lt;em&gt;does not&lt;/em&gt; close the provided &lt;code&gt;ImageOutputStream&lt;/code&gt; after the write operation has completed; it is the responsibility of the caller to close the stream, if desired.</source>
          <target state="translated">이 메소드 &lt;em&gt;는&lt;/em&gt; 쓰기 작업이 완료된 후 제공된 &lt;code&gt;ImageOutputStream&lt;/code&gt; 을 닫지 &lt;em&gt;않습니다&lt;/em&gt; . 원하는 경우 스트림을 닫는 것은 호출자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="3aa6518e55bff6393254c8f4353f326d6df08b81" translate="yes" xml:space="preserve">
          <source>This method &lt;em&gt;does not&lt;/em&gt; close the provided &lt;code&gt;InputStream&lt;/code&gt; after the read operation has completed; it is the responsibility of the caller to close the stream, if desired.</source>
          <target state="translated">이 메소드 &lt;em&gt;는&lt;/em&gt; 읽기 조작이 완료된 후 제공된 &lt;code&gt;InputStream&lt;/code&gt; 을 닫지 &lt;em&gt;않습니다&lt;/em&gt; . 원하는 경우 스트림을 닫는 것은 호출자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="173872128eb75c92df9c4eedf694b762d8282c0d" translate="yes" xml:space="preserve">
          <source>This method &lt;em&gt;does not&lt;/em&gt; close the provided &lt;code&gt;OutputStream&lt;/code&gt; after the write operation has completed; it is the responsibility of the caller to close the stream, if desired.</source>
          <target state="translated">이 메소드 &lt;em&gt;는&lt;/em&gt; 쓰기 조작이 완료된 후 제공된 &lt;code&gt;OutputStream&lt;/code&gt; 을 닫지 &lt;em&gt;않습니다&lt;/em&gt; . 원하는 경우 스트림을 닫는 것은 호출자의 책임입니다.</target>
        </trans-unit>
        <trans-unit id="849cc220f7f2288d02ac0a0d016b42c4a03abbb3" translate="yes" xml:space="preserve">
          <source>This method accepts a year value from the proleptic ISO calendar system.</source>
          <target state="translated">이 방법은 다발 ISO 달력 시스템에서 연도 값을받습니다.</target>
        </trans-unit>
        <trans-unit id="5f33e5832c8e17748897d2fe1a31b7c8f5a1edc2" translate="yes" xml:space="preserve">
          <source>This method accepts block names in the following forms:</source>
          <target state="translated">이 방법은 다음 형식의 블록 이름을 허용합니다.</target>
        </trans-unit>
        <trans-unit id="be4ea4e84c942ca1b6148d7b00bd849f83ea77b7" translate="yes" xml:space="preserve">
          <source>This method accepts either a full file path, or a file name with an extension if used together with the &lt;code&gt;setDirectory&lt;/code&gt; method.</source>
          <target state="translated">이 메소드는 전체 파일 경로 또는 &lt;code&gt;setDirectory&lt;/code&gt; 메소드 와 함께 사용되는 경우 확장자가있는 파일 이름을 허용합니다 .</target>
        </trans-unit>
        <trans-unit id="4c3bcbac3b7f25845a57529ee7ed62a91a0e59a7" translate="yes" xml:space="preserve">
          <source>This method acts as a bridge between array-based and collection-based APIs. It allows an existing array to be reused under certain circumstances. Use &lt;a href=&quot;#toArray()&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; to create an array whose runtime type is &lt;code&gt;Object[]&lt;/code&gt;, or use &lt;a href=&quot;#toArray(java.util.function.IntFunction)&quot;&gt;&lt;code&gt;toArray(IntFunction)&lt;/code&gt;&lt;/a&gt; to control the runtime type of the array.</source>
          <target state="translated">이 메서드는 배열 기반 API와 컬렉션 기반 API 간의 다리 역할을합니다. 특정 상황에서 기존 어레이를 재사용 할 수 있습니다. 사용 &lt;a href=&quot;#toArray()&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 그 런타임 타입 배열 만드는 &lt;code&gt;Object[]&lt;/code&gt; 또는 사용 &lt;a href=&quot;#toArray(java.util.function.IntFunction)&quot;&gt; &lt;code&gt;toArray(IntFunction)&lt;/code&gt; &lt;/a&gt; 배열의 실행시의 형태를 제어 할.</target>
        </trans-unit>
        <trans-unit id="8aed27dc29ef257c49b9018c2391b286d194d737" translate="yes" xml:space="preserve">
          <source>This method acts as a bridge between array-based and collection-based APIs. It allows creation of an array of a particular runtime type. Use &lt;a href=&quot;#toArray()&quot;&gt;&lt;code&gt;toArray()&lt;/code&gt;&lt;/a&gt; to create an array whose runtime type is &lt;code&gt;Object[]&lt;/code&gt;, or use &lt;a href=&quot;#toArray(T%5B%5D)&quot;&gt;&lt;code&gt;toArray(T[])&lt;/code&gt;&lt;/a&gt; to reuse an existing array.</source>
          <target state="translated">이 메서드는 배열 기반 API와 컬렉션 기반 API 간의 다리 역할을합니다. 특정 런타임 유형의 배열을 생성 할 수 있습니다. 사용 &lt;a href=&quot;#toArray()&quot;&gt; &lt;code&gt;toArray()&lt;/code&gt; &lt;/a&gt; 그 런타임 타입 배열 만드는 &lt;code&gt;Object[]&lt;/code&gt; 또는 사용 &lt;a href=&quot;#toArray(T%5B%5D)&quot;&gt; &lt;code&gt;toArray(T[])&lt;/code&gt; &lt;/a&gt; 기존 배열 재사용.</target>
        </trans-unit>
        <trans-unit id="fc0a66c0fbd1f93f2c07c8f1c3d1cc8338c01004" translate="yes" xml:space="preserve">
          <source>This method acts as a bridge between array-based and collection-based APIs. It returns an array whose runtime type is &lt;code&gt;Object[]&lt;/code&gt;. Use &lt;a href=&quot;#toArray(T%5B%5D)&quot;&gt;&lt;code&gt;toArray(T[])&lt;/code&gt;&lt;/a&gt; to reuse an existing array, or use &lt;a href=&quot;#toArray(java.util.function.IntFunction)&quot;&gt;&lt;code&gt;toArray(IntFunction)&lt;/code&gt;&lt;/a&gt; to control the runtime type of the array.</source>
          <target state="translated">이 메서드는 배열 기반 API와 컬렉션 기반 API 간의 다리 역할을합니다. 런타임 유형이 &lt;code&gt;Object[]&lt;/code&gt; 인 배열을 반환합니다 . 사용 &lt;a href=&quot;#toArray(T%5B%5D)&quot;&gt; &lt;code&gt;toArray(T[])&lt;/code&gt; &lt;/a&gt; 기존 배열을 재사용하거나 사용 &lt;a href=&quot;#toArray(java.util.function.IntFunction)&quot;&gt; &lt;code&gt;toArray(IntFunction)&lt;/code&gt; &lt;/a&gt; 배열의 실행시의 형태를 제어 할.</target>
        </trans-unit>
        <trans-unit id="6c6d6292ef57fe02db3d1ce2c962bcdc8a68a6c5" translate="yes" xml:space="preserve">
          <source>This method acts as bridge between array-based and collection-based APIs, in combination with &lt;a href=&quot;collection#toArray()&quot;&gt;&lt;code&gt;Collection.toArray()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;collection#toArray()&quot;&gt; &lt;code&gt;Collection.toArray()&lt;/code&gt; &lt;/a&gt; 와 함께 배열 기반 API와 컬렉션 기반 API 간의 다리 역할을 합니다.</target>
        </trans-unit>
        <trans-unit id="1d4934e321968b6b5737a20b8db7eb111c01aa8b" translate="yes" xml:space="preserve">
          <source>This method acts as bridge between array-based and collection-based APIs.</source>
          <target state="translated">이 방법은 배열 기반 API와 컬렉션 기반 API 간의 브리지 역할을합니다.</target>
        </trans-unit>
        <trans-unit id="7e0da3d203223cc23c9cf5d79ff584364135d7b6" translate="yes" xml:space="preserve">
          <source>This method acts as if the document was going through a save and load cycle, putting the document in a &quot;normal&quot; form.</source>
          <target state="translated">이 방법은 문서가 저장 및로드주기를 거치는 것처럼 작동하여 문서를 &quot;일반&quot;형식으로 만듭니다.</target>
        </trans-unit>
        <trans-unit id="1c837a4f52171ddf5b65c571fb87d3f9a0677da7" translate="yes" xml:space="preserve">
          <source>This method acts as if the document was going through a save and load cycle, putting the document in a &quot;normal&quot; form. As a consequence, this method updates the replacement tree of &lt;code&gt;EntityReference&lt;/code&gt; nodes and normalizes &lt;code&gt;Text&lt;/code&gt; nodes, as defined in the method &lt;code&gt;Node.normalize()&lt;/code&gt;.</source>
          <target state="translated">이 방법은 문서가 저장 및로드주기를 거치는 것처럼 작동하여 문서를 &quot;일반&quot;형식으로 만듭니다. 결과적으로이 메서드 는 &lt;code&gt;Node.normalize()&lt;/code&gt; 메서드에 정의 된대로 &lt;code&gt;EntityReference&lt;/code&gt; 노드 의 대체 트리를 업데이트하고 &lt;code&gt;Text&lt;/code&gt; 노드를 정규화 합니다.</target>
        </trans-unit>
        <trans-unit id="95557be314a2a19adcd116b95485d6e7a69d2350" translate="yes" xml:space="preserve">
          <source>This method actually delegates the work of painting to three protected methods: &lt;code&gt;paintComponent&lt;/code&gt;, &lt;code&gt;paintBorder&lt;/code&gt;, and &lt;code&gt;paintChildren&lt;/code&gt;. They're called in the order listed to ensure that children appear on top of component itself. Generally speaking, the component and its children should not paint in the insets area allocated to the border. Subclasses can just override this method, as always. A subclass that just wants to specialize the UI (look and feel) delegate's &lt;code&gt;paint&lt;/code&gt; method should just override &lt;code&gt;paintComponent&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 실제로 페인팅 작업을 &lt;code&gt;paintComponent&lt;/code&gt; , &lt;code&gt;paintBorder&lt;/code&gt; 및 &lt;code&gt;paintChildren&lt;/code&gt; 의 세 가지 보호 된 메서드에 위임합니다 . 나열된 순서대로 호출되어 자식이 구성 요소 자체 위에 표시되도록합니다. 일반적으로 구성 요소와 해당 하위 요소는 테두리에 할당 된 삽입 영역에 페인트하지 않아야합니다. 서브 클래스는 항상이 메서드를 재정의 할 수 있습니다. UI (룩앤필) 델리게이트의 &lt;code&gt;paint&lt;/code&gt; 메서드 를 전문화하려는 하위 클래스는 &lt;code&gt;paintComponent&lt;/code&gt; 를 재정의해야합니다 .</target>
        </trans-unit>
        <trans-unit id="8f7a73b05a699a1a1d86cc68bc21fc580f553f8b" translate="yes" xml:space="preserve">
          <source>This method actually reshapes the components in the specified container in order to satisfy the constraints of this &lt;code&gt;BorderLayout&lt;/code&gt; object. The &lt;code&gt;NORTH&lt;/code&gt; and &lt;code&gt;SOUTH&lt;/code&gt; components, if any, are placed at the top and bottom of the container, respectively. The &lt;code&gt;WEST&lt;/code&gt; and &lt;code&gt;EAST&lt;/code&gt; components are then placed on the left and right, respectively. Finally, the &lt;code&gt;CENTER&lt;/code&gt; object is placed in any remaining space in the middle.</source>
          <target state="translated">이 메서드는 실제로이 &lt;code&gt;BorderLayout&lt;/code&gt; 개체 의 제약 조건을 충족하기 위해 지정된 컨테이너의 구성 요소를 재구성 합니다. &lt;code&gt;NORTH&lt;/code&gt; 및 &lt;code&gt;SOUTH&lt;/code&gt; 성분이있는 경우, 각각 용기의 상단과 하단에 배치된다. 그런 다음 &lt;code&gt;WEST&lt;/code&gt; 및 &lt;code&gt;EAST&lt;/code&gt; 구성 요소가 각각 왼쪽과 오른쪽에 배치됩니다. 마지막으로 &lt;code&gt;CENTER&lt;/code&gt; 개체는 중간의 나머지 공간에 배치됩니다.</target>
        </trans-unit>
        <trans-unit id="052c035bb4da3462cdf3d609eef23ce392e671e6" translate="yes" xml:space="preserve">
          <source>This method adds an event to the consumer.</source>
          <target state="translated">이 메서드는 소비자에게 이벤트를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="4bd020f3822f90bdb712fee286f33037e7aaa856" translate="yes" xml:space="preserve">
          <source>This method adds an event to the consumer. Calling this method invalidates the event parameter. The client application should discard all references to this event upon calling add. The behavior of an application that continues to use such references is undefined.</source>
          <target state="translated">이 메서드는 소비자에게 이벤트를 추가합니다. 이 메서드를 호출하면 이벤트 매개 변수가 무효화됩니다. 클라이언트 응용 프로그램은 add를 호출 할 때이 이벤트에 대한 모든 참조를 삭제해야합니다. 이러한 참조를 계속 사용하는 응용 프로그램의 동작은 정의되지 않았습니다.</target>
        </trans-unit>
        <trans-unit id="a40479ccfb0dd4f5ddd9034df3781ac2ce146a18" translate="yes" xml:space="preserve">
          <source>This method adds the necessary listeners to the JComboBox.</source>
          <target state="translated">이 메소드는 JComboBox에 필요한 리스너를 추가합니다.</target>
        </trans-unit>
        <trans-unit id="3af30e48dd60471f402029a6e08b9337cffb2e47" translate="yes" xml:space="preserve">
          <source>This method adds the specified amount in weeks to the days field incrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded.</source>
          <target state="translated">이 방법은 결과가 유효한 상태를 유지하기 위해 필요에 따라 월과 연도 필드를 증가시키는 요일 필드에 지정된 양을 주 단위로 추가합니다. 최대 / 최소 연도를 초과 한 경우에만 결과가 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="78e0e942f2ca0740ef7acb28824e1b9f833fdf85" translate="yes" xml:space="preserve">
          <source>This method adds the specified amount to the days field incrementing the month and year fields as necessary to ensure the result remains valid. The result is only invalid if the maximum/minimum year is exceeded.</source>
          <target state="translated">이 방법은 결과가 유효하게 유지되도록 필요한만큼 월과 연도 필드를 증가시키는 일 필드에 지정된 양을 추가합니다. 최대 / 최소 연도를 초과 한 경우에만 결과가 유효하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cffdf06049808a33bc8bcf6006cc27ef38580c8b" translate="yes" xml:space="preserve">
          <source>This method adds the specified amount to the months field in three steps:</source>
          <target state="translated">이 방법은 지정된 금액을 월 필드에 세 단계로 추가합니다.</target>
        </trans-unit>
        <trans-unit id="af609df000243b0ab0dcffce4951b5476af479ce" translate="yes" xml:space="preserve">
          <source>This method adds the specified amount to the years field in three steps:</source>
          <target state="translated">이 방법은 세 단계로 지정된 금액을 연도 필드에 추가합니다.</target>
        </trans-unit>
        <trans-unit id="67aff9913a6ecbed4b87b406cb001845fb078e86" translate="yes" xml:space="preserve">
          <source>This method allocates an event given the current state of the XMLStreamReader.</source>
          <target state="translated">이 메서드는 XMLStreamReader의 현재 상태가 지정된 이벤트를 할당합니다.</target>
        </trans-unit>
        <trans-unit id="37df9bc333f19d884a70ae5ea834da2b54687bcf" translate="yes" xml:space="preserve">
          <source>This method allocates an event given the current state of the XMLStreamReader. If this XMLEventAllocator does not have a one-to-one mapping between reader states and events this method will return null. This method must not modify the state of the XMLStreamReader.</source>
          <target state="translated">이 메서드는 XMLStreamReader의 현재 상태가 지정된 이벤트를 할당합니다. 이 XMLEventAllocator에 판독기 상태와 이벤트 간의 일대일 매핑이없는 경우이 메서드는 null을 반환합니다. 이 메서드는 XMLStreamReader의 상태를 수정해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="62b3598c083446c10d8a55ae8905944742f0ebfb" translate="yes" xml:space="preserve">
          <source>This method allocates an event or set of events given the current state of the XMLStreamReader and adds the event or set of events to the consumer that was passed in.</source>
          <target state="translated">이 메서드는 XMLStreamReader의 현재 상태에 따라 이벤트 또는 이벤트 집합을 할당하고 전달 된 소비자에게 이벤트 또는 이벤트 집합을 추가합니다.</target>
        </trans-unit>
        <trans-unit id="ecca30353576edf110adf0c3a21976618d2e5556" translate="yes" xml:space="preserve">
          <source>This method allocates an event or set of events given the current state of the XMLStreamReader and adds the event or set of events to the consumer that was passed in. This method can be used to expand or contract reader states into event states. This method may modify the state of the XMLStreamReader.</source>
          <target state="translated">이 메서드는 XMLStreamReader의 현재 상태에 따라 이벤트 또는 이벤트 집합을 할당하고 전달 된 소비자에게 이벤트 또는 이벤트 집합을 추가합니다.이 메서드는 판독기 상태를 이벤트 상태로 확장하거나 축소하는 데 사용할 수 있습니다. 이 메서드는 XMLStreamReader의 상태를 수정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e2de16d648cb476253668f1d004178f701a76980" translate="yes" xml:space="preserve">
          <source>This method allows an application to mark a place in a sequence of character content.</source>
          <target state="translated">이 방법을 사용하면 애플리케이션이 일련의 문자 콘텐츠에서 장소를 표시 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3e44c01f3cf7e3470d16ddbcf818e8bce9470acb" translate="yes" xml:space="preserve">
          <source>This method allows an application to mark a place in a sequence of character content. This mark can then be used to tracks change as insertions and removals are made in the content. The policy is that insertions always occur prior to the current position (the most common case) unless the insertion location is zero, in which case the insertion is forced to a position that follows the original position.</source>
          <target state="translated">이 방법을 사용하면 애플리케이션이 일련의 문자 콘텐츠에서 장소를 표시 할 수 있습니다. 그런 다음이 표시를 사용하여 콘텐츠에 삽입 및 제거가 수행 될 때 변경 사항을 추적 할 수 있습니다. 정책은 삽입 위치가 0이 아닌 경우 삽입이 항상 현재 위치 (가장 일반적인 경우)보다 먼저 발생하는 것입니다.이 경우 삽입은 원래 위치를 따르는 위치로 강제 실행됩니다.</target>
        </trans-unit>
        <trans-unit id="1651391ffaab46b132075603bdd32cb42a6eeb1a" translate="yes" xml:space="preserve">
          <source>This method allows an application to request that the providers check for any updates to the provided rules. After calling this method, the offset stored in any &lt;a href=&quot;../zoneddatetime&quot;&gt;&lt;code&gt;ZonedDateTime&lt;/code&gt;&lt;/a&gt; may be invalid for the zone ID.</source>
          <target state="translated">이 방법을 통해 응용 프로그램은 공급자가 제공된 규칙에 대한 업데이트를 확인하도록 요청할 수 있습니다. 이 메서드를 호출하면 &lt;a href=&quot;../zoneddatetime&quot;&gt; &lt;code&gt;ZonedDateTime&lt;/code&gt; 에&lt;/a&gt; 저장된 오프셋 이 영역 ID에 유효하지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b65a16ffef740e56c73f4dec86bb629cfdd3b8f0" translate="yes" xml:space="preserve">
          <source>This method allows an application writer to reuse an attribute list easily.</source>
          <target state="translated">이 방법을 사용하면 애플리케이션 작성자가 속성 목록을 쉽게 재사용 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a29475975cfb0c2dd788274120e8610d4a4a5648" translate="yes" xml:space="preserve">
          <source>This method allows an arbitrary number of nanoseconds to be passed in. The factory will alter the values of the second and nanosecond in order to ensure that the stored nanosecond is in the range 0 to 999,999,999. For example, the following will result in exactly the same duration:</source>
          <target state="translated">이 방법을 사용하면 임의의 수의 나노초를 전달할 수 있습니다. 공장에서는 저장된 나노초가 0 ~ 999,999,999 범위에 있도록하기 위해 초 및 나노초 값을 변경합니다. 예를 들어, 다음은 정확히 동일한 기간이됩니다.</target>
        </trans-unit>
        <trans-unit id="eb1b5b9b82863edd11ff7a092dc17e369ff6cefe" translate="yes" xml:space="preserve">
          <source>This method allows an arbitrary number of nanoseconds to be passed in. The factory will alter the values of the second and nanosecond in order to ensure that the stored nanosecond is in the range 0 to 999,999,999. For example, the following will result in exactly the same instant:</source>
          <target state="translated">이 방법을 사용하면 임의의 수의 나노초를 전달할 수 있습니다. 공장에서는 저장된 나노초가 0 ~ 999,999,999 범위에 있도록하기 위해 초 및 나노초 값을 변경합니다. 예를 들어, 다음은 정확히 동일한 순간이됩니다.</target>
        </trans-unit>
        <trans-unit id="eda444d0e2b0fbe233bda8959023b04aee5aa9f8" translate="yes" xml:space="preserve">
          <source>This method allows an arbitrary number of nanoseconds to be passed in. The factory will alter the values of the second and nanosecond in order to ensure that the stored nanosecond is in the range 0 to 999,999,999. For example, the following will result in the exactly the same duration:</source>
          <target state="translated">이 방법을 사용하면 임의의 수의 나노초가 전달 될 수 있습니다. 팩토리는 저장된 나노초가 0에서 999,999,999 범위에 있도록 초와 나노초의 값을 변경합니다. 예를 들어, 다음과 같은 기간은 정확히 같습니다.</target>
        </trans-unit>
        <trans-unit id="e97d0e4aaa0ceccd00c8a59cdcb938962da99c44" translate="yes" xml:space="preserve">
          <source>This method allows an arbitrary number of nanoseconds to be passed in. The factory will alter the values of the second and nanosecond in order to ensure that the stored nanosecond is in the range 0 to 999,999,999. For example, the following will result in the exactly the same instant:</source>
          <target state="translated">이 방법을 사용하면 임의의 수의 나노초가 전달 될 수 있습니다. 팩토리는 저장된 나노초가 0에서 999,999,999 범위에 있도록 초와 나노초의 값을 변경합니다. 예를 들어, 다음과 같은 순간이됩니다.</target>
        </trans-unit>
        <trans-unit id="0f6e8bdfdc141c983067a4c04276404976b527b6" translate="yes" xml:space="preserve">
          <source>This method allows clients to implement their own initialization mechanism that is executed before a &lt;code&gt;FlightRecorder&lt;/code&gt; instance is returned by &lt;a href=&quot;flightrecorder#getFlightRecorder()&quot;&gt;&lt;code&gt;FlightRecorder.getFlightRecorder()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 클라이언트가 이전에 실행 자신의 초기화 메커니즘을 구현할 수 있습니다 &lt;code&gt;FlightRecorder&lt;/code&gt; 의 인스턴스에 의해 반환 &lt;a href=&quot;flightrecorder#getFlightRecorder()&quot;&gt; &lt;code&gt;FlightRecorder.getFlightRecorder()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a27648580aa87a7bc876a42c4766cd20ab0eba60" translate="yes" xml:space="preserve">
          <source>This method allows for subclasses to package the painting of different states with possibly different canvas sizes, etc, into one AbstractRegionPainter implementation.</source>
          <target state="translated">이 메서드를 사용하면 하위 클래스가 캔버스 크기가 다를 수있는 여러 상태의 그림을 하나의 AbstractRegionPainter 구현으로 패키지화 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="7f5b63419c8ca9a087d2129fc95966034700e350" translate="yes" xml:space="preserve">
          <source>This method allows formats that normally apply a color conversion, such as JPEG, and formats that do not normally have an associated colorspace, such as remote sensing or medical imaging data, to provide access to raw pixel data.</source>
          <target state="translated">이 방법을 사용하면 JPEG와 같은 일반적으로 색상 변환을 적용하는 형식과 원격 감지 또는 의료 이미징 데이터와 같이 일반적으로 관련 색 공간이없는 형식을 사용하여 원시 픽셀 데이터에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fdcf3f10349d6d14764776471113885263458d59" translate="yes" xml:space="preserve">
          <source>This method allows setting of the Location on each event that is created by this factory.</source>
          <target state="translated">이 방법을 사용하면이 공장에서 생성 된 각 이벤트에 대한 위치를 설정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="b5504007f2b3c552cf919c739179f84b7fbfcfba" translate="yes" xml:space="preserve">
          <source>This method allows setting of the Location on each event that is created by this factory. The values are copied by value into the events created by this factory. To reset the location information set the location to null.</source>
          <target state="translated">이 방법을 사용하면이 공장에서 생성 된 각 이벤트에 대한 위치를 설정할 수 있습니다. 값은이 팩토리에서 생성 된 이벤트에 값별로 복사됩니다. 위치 정보를 재설정하려면 위치를 null로 설정하십시오.</target>
        </trans-unit>
        <trans-unit id="0fd483899cb392f14434b2761f591f0dae8034ac" translate="yes" xml:space="preserve">
          <source>This method allows sophisticated applications to extend a PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; or &lt;code&gt;CertPathBuilder&lt;/code&gt;. Each of the specified &lt;code&gt;PKIXCertPathChecker&lt;/code&gt;s will be called, in turn, by a PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; or &lt;code&gt;CertPathBuilder&lt;/code&gt; for each certificate processed or validated.</source>
          <target state="translated">이 방법을 사용하면 정교한 응용 프로그램에서 PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; 또는 &lt;code&gt;CertPathBuilder&lt;/code&gt; 를 확장 할 수 있습니다 . 지정된 각 &lt;code&gt;PKIXCertPathChecker&lt;/code&gt; 는 차례로 처리 또는 검증 된 각 인증서에 대해 PKIX &lt;code&gt;CertPathValidator&lt;/code&gt; 또는 &lt;code&gt;CertPathBuilder&lt;/code&gt; 에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="f3c16478b12053acfce4d4de421bb0861c11b06e" translate="yes" xml:space="preserve">
          <source>This method allows the application of a function to &lt;code&gt;this&lt;/code&gt; string.</source>
          <target state="translated">이 메서드를 사용하면 &lt;code&gt;this&lt;/code&gt; 문자열에 함수를 적용 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e90c3e48cf1d7dfba53b94e3a26b8c5a02fc3dcb" translate="yes" xml:space="preserve">
          <source>This method allows the application of a function to &lt;code&gt;this&lt;/code&gt; string. The function should expect a single String argument and produce an &lt;code&gt;R&lt;/code&gt; result.</source>
          <target state="translated">이 메서드를 사용하면 &lt;code&gt;this&lt;/code&gt; 문자열에 함수를 적용 할 수 있습니다 . 이 함수는 단일 문자열 인수를 예상하고 &lt;code&gt;R&lt;/code&gt; 결과를 생성해야합니다. ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ</target>
        </trans-unit>
        <trans-unit id="6de17824b1e74f1e592206471706d3e1ed570943" translate="yes" xml:space="preserve">
          <source>This method allows the application to link the filter to a parent reader (which may be another filter). The argument may not be null.</source>
          <target state="translated">이 방법을 사용하면 애플리케이션이 필터를 상위 리더 (다른 필터 일 수 있음)에 연결할 수 있습니다. 인수는 널일 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="c7aa9730575e5f663e0d18ca05a9a271835ff90c" translate="yes" xml:space="preserve">
          <source>This method allows the application to query the parent reader (which may be another filter). It is generally a bad idea to perform any operations on the parent reader directly: they should all pass through this filter.</source>
          <target state="translated">이 메소드를 사용하면 애플리케이션이 상위 리더 (다른 필터 일 수 있음)를 조회 할 수 있습니다. 일반적으로 상위 리더에서 직접 작업을 수행하는 것은 좋지 않습니다. 모든 작업은이 필터를 통과해야합니다.</target>
        </trans-unit>
        <trans-unit id="6d8556797fba1b77cd0451d414905190015a4f00" translate="yes" xml:space="preserve">
          <source>This method allows the caller to add a name to the set of issuer names which &lt;code&gt;X509CRLs&lt;/code&gt; may contain. The specified name is added to any previous value for the issuerNames criterion. If the specified name is a duplicate, it may be ignored.</source>
          <target state="translated">이 메소드를 사용하면 호출자가 &lt;code&gt;X509CRLs&lt;/code&gt; 포함 할 수있는 발행자 이름 세트에 이름을 추가 할 수 있습니다. 지정된 이름이 issuerNames 기준의 이전 값에 추가됩니다. 지정된 이름이 중복되면 무시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a53dd998739b4376f63ebea8a55616b55400bdc8" translate="yes" xml:space="preserve">
          <source>This method allows the caller to add a name to the set of issuer names which &lt;code&gt;X509CRLs&lt;/code&gt; may contain. The specified name is added to any previous value for the issuerNames criterion. If the specified name is a duplicate, it may be ignored. If a name is specified as a byte array, it should contain a single DER encoded distinguished name, as defined in X.501. The ASN.1 notation for this structure is as follows.</source>
          <target state="translated">이 메소드를 사용하면 호출자가 &lt;code&gt;X509CRLs&lt;/code&gt; 포함 할 수있는 발행자 이름 세트에 이름을 추가 할 수 있습니다. 지정된 이름이 issuerNames 기준의 이전 값에 추가됩니다. 지정된 이름이 중복되면 무시 될 수 있습니다. 이름이 바이트 배열로 지정된 경우 X.501에 정의 된대로 단일 DER로 인코딩 된 식별 이름을 포함해야합니다. 이 구조에 대한 ASN.1 표기법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="6ad13d13006adb44bd6041030d8f05a1aedf5e56" translate="yes" xml:space="preserve">
          <source>This method allows the caller to add a name to the set of names which the &lt;code&gt;X509Certificates&lt;/code&gt;'s name constraints must permit. The specified name is added to any previous value for the pathToNames criterion. If the name is a duplicate, it may be ignored.</source>
          <target state="translated">이 메소드를 사용하면 호출자가 &lt;code&gt;X509Certificates&lt;/code&gt; 의 이름 제한 조건이 허용해야하는 이름 세트에 이름을 추가 할 수 있습니다. 지정된 이름이 pathToNames 기준의 이전 값에 추가됩니다. 이름이 중복되면 무시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="1e4632e39bbefa94b32729bd5a8212dd3b42660c" translate="yes" xml:space="preserve">
          <source>This method allows the caller to add a name to the set of subject alternative names. The specified name is added to any previous value for the subjectAlternativeNames criterion. If the specified name is a duplicate, it may be ignored.</source>
          <target state="translated">이 메소드를 사용하면 호출자가 주제 대체 이름 세트에 이름을 추가 할 수 있습니다. 지정된 이름이 subjectAlternativeNames 기준의 이전 값에 추가됩니다. 지정된 이름이 중복되면 무시 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="cbce34c15635b1a6ca7855d219a5cbcefd189b29" translate="yes" xml:space="preserve">
          <source>This method allows the caller to specify, with a single method call, the complete set of issuer names which &lt;code&gt;X509CRLs&lt;/code&gt; may contain. The specified value replaces the previous value for the issuerNames criterion.</source>
          <target state="translated">이 메소드를 사용하면 호출자가 단일 메소드 호출로 &lt;code&gt;X509CRLs&lt;/code&gt; 포함될 수있는 완전한 발행자 이름 세트를 지정할 수 있습니다. 지정된 값이 issuerNames 기준의 이전 값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="4aefaf491baf8c4e5456b621b5c0a498daa636e0" translate="yes" xml:space="preserve">
          <source>This method allows the caller to specify, with a single method call, the complete set of names which the &lt;code&gt;X509Certificates&lt;/code&gt;'s name constraints must permit. The specified value replaces the previous value for the pathToNames criterion.</source>
          <target state="translated">이 메소드를 사용하면 호출자가 단일 메소드 호출로 &lt;code&gt;X509Certificates&lt;/code&gt; 의 이름 제한 조건이 허용해야하는 완전한 이름 세트를 지정할 수 있습니다. 지정된 값이 pathToNames 기준의 이전 값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="0bd4362610e1ac10a2f64be47d995751ffb00a8d" translate="yes" xml:space="preserve">
          <source>This method allows the caller to specify, with a single method call, the complete set of subject alternative names for the subjectAlternativeNames criterion. The specified value replaces the previous value for the subjectAlternativeNames criterion.</source>
          <target state="translated">이 메소드를 사용하면 호출자가 단일 메소드 호출로 subjectAlternativeNames 기준에 대한 완전한 대체 주제 이름 세트를 지정할 수 있습니다. 지정된 값이 subjectAlternativeNames 기준의 이전 값을 대체합니다.</target>
        </trans-unit>
        <trans-unit id="f9f90f491d215eeb67507ed96cdae148a66028d9" translate="yes" xml:space="preserve">
          <source>This method allows the dispatch of events into the implementations event model.</source>
          <target state="translated">이 메서드를 사용하면 이벤트를 구현 이벤트 모델로 전달할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="59fad912283256dc0cd53da04c91a25d38451d2a" translate="yes" xml:space="preserve">
          <source>This method allows the dispatch of events into the implementations event model. Events dispatched in this manner will have the same capturing and bubbling behavior as events dispatched directly by the implementation. The target of the event is the &lt;code&gt; EventTarget&lt;/code&gt; on which &lt;code&gt;dispatchEvent&lt;/code&gt; is called.</source>
          <target state="translated">이 메서드를 사용하면 이벤트를 구현 이벤트 모델로 전달할 수 있습니다. 이러한 방식으로 전달 된 이벤트는 구현에서 직접 전달 된 이벤트와 동일한 캡처 및 버블 링 동작을 갖습니다. 이벤트의 대상은 &lt;code&gt;dispatchEvent&lt;/code&gt; 가 호출 되는 &lt;code&gt; EventTarget&lt;/code&gt; 입니다 .</target>
        </trans-unit>
        <trans-unit id="6dcf82cfbb87bd32ad28c6229a44a3b34df3ca25" translate="yes" xml:space="preserve">
          <source>This method allows the registration of event listeners on the event target.</source>
          <target state="translated">이 메서드를 사용하면 이벤트 대상에 이벤트 리스너를 등록 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="8ff1e4da820f6cd003ae96cff1ee808d14554783" translate="yes" xml:space="preserve">
          <source>This method allows the registration of event listeners on the event target. If an &lt;code&gt;EventListener&lt;/code&gt; is added to an &lt;code&gt;EventTarget&lt;/code&gt; while it is processing an event, it will not be triggered by the current actions but may be triggered during a later stage of event flow, such as the bubbling phase.</source>
          <target state="translated">이 메서드를 사용하면 이벤트 대상에 이벤트 리스너를 등록 할 수 있습니다. 는 IF &lt;code&gt;EventListener&lt;/code&gt; 에 추가 &lt;code&gt;EventTarget&lt;/code&gt; 이벤트 처리 중에, 현재의 액션 트리거되지 않지만 버블 국면으로 이벤트 흐름의 나중 단계에서 트리거 될 수있다.</target>
        </trans-unit>
        <trans-unit id="31f4ef68f0f41698bceb054291b72f9794f67125" translate="yes" xml:space="preserve">
          <source>This method allows the removal of event listeners from the event target.</source>
          <target state="translated">This method allows the removal of event listeners from the event target.</target>
        </trans-unit>
        <trans-unit id="c5afc15d05bde090b9fc40fc4fb71d785249cb2d" translate="yes" xml:space="preserve">
          <source>This method allows the removal of event listeners from the event target. If an &lt;code&gt;EventListener&lt;/code&gt; is removed from an &lt;code&gt;EventTarget&lt;/code&gt; while it is processing an event, it will not be triggered by the current actions. &lt;code&gt;EventListener&lt;/code&gt;s can never be invoked after being removed.</source>
          <target state="translated">This method allows the removal of event listeners from the event target. If an &lt;code&gt;EventListener&lt;/code&gt; is removed from an &lt;code&gt;EventTarget&lt;/code&gt; while it is processing an event, it will not be triggered by the current actions. &lt;code&gt;EventListener&lt;/code&gt; s can never be invoked after being removed.</target>
        </trans-unit>
        <trans-unit id="fa5b58913a9bb46725ae4548a0b5ad24164aa7d8" translate="yes" xml:space="preserve">
          <source>This method also accepts a single array as an argument. The element type of the resulting list will be the component type of the array, and the size of the list will be equal to the length of the array. To create a list with a single element that is an array, do the following:</source>
          <target state="translated">This method also accepts a single array as an argument. The element type of the resulting list will be the component type of the array, and the size of the list will be equal to the length of the array. To create a list with a single element that is an array, do the following:</target>
        </trans-unit>
        <trans-unit id="5290936ab8f951658b677b245f18d7a9c3f576d3" translate="yes" xml:space="preserve">
          <source>This method also accepts a single array as an argument. The element type of the resulting set will be the component type of the array, and the size of the set will be equal to the length of the array. To create a set with a single element that is an array, do the following:</source>
          <target state="translated">This method also accepts a single array as an argument. The element type of the resulting set will be the component type of the array, and the size of the set will be equal to the length of the array. To create a set with a single element that is an array, do the following:</target>
        </trans-unit>
        <trans-unit id="6363dd2696fe7d2c7e0313fab52ebec04a0c819a" translate="yes" xml:space="preserve">
          <source>This method also allows a set of preferred &lt;a href=&quot;../zoneid&quot;&gt;&lt;code&gt;ZoneId&lt;/code&gt;&lt;/a&gt; to be specified for parsing. The matched preferred zone id will be used if the textural zone name being parsed is not unique.</source>
          <target state="translated">This method also allows a set of preferred &lt;a href=&quot;../zoneid&quot;&gt; &lt;code&gt;ZoneId&lt;/code&gt; &lt;/a&gt; to be specified for parsing. The matched preferred zone id will be used if the textural zone name being parsed is not unique.</target>
        </trans-unit>
        <trans-unit id="1c705334a0f7cff751d14c4a4a21383e06465e76" translate="yes" xml:space="preserve">
          <source>This method also provides a convenient way to create a fixed-size list initialized to contain several elements:</source>
          <target state="translated">이 방법은 또한 여러 요소를 포함하도록 초기화 된 고정 크기 목록을 작성하는 편리한 방법을 제공합니다.</target>
        </trans-unit>
        <trans-unit id="33989ec54357ff31534589bc846f46e3b3866393" translate="yes" xml:space="preserve">
          <source>This method also updates the line length based on &lt;code&gt;length&lt;/code&gt;. If this is invoked to output a newline, the current line length will need to be reset as will no longer be valid. If it is up to the caller to do this. Use &lt;code&gt;writeLineSeparator&lt;/code&gt; to write out a newline, which will property update the current line length.</source>
          <target state="translated">This method also updates the line length based on &lt;code&gt;length&lt;/code&gt; . If this is invoked to output a newline, the current line length will need to be reset as will no longer be valid. If it is up to the caller to do this. Use &lt;code&gt;writeLineSeparator&lt;/code&gt; to write out a newline, which will property update the current line length.</target>
        </trans-unit>
        <trans-unit id="10efe58e09a54d7be31a3a18541b3ef4a089b9ec" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with the charset's default replacement string. The &lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt;&lt;code&gt;CharsetDecoder&lt;/code&gt;&lt;/a&gt; class should be used when more control over the decoding process is required.</source>
          <target state="translated">This method always replaces malformed-input and unmappable-character sequences with the charset's default replacement string. The &lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt; &lt;code&gt;CharsetDecoder&lt;/code&gt; &lt;/a&gt; class should be used when more control over the decoding process is required.</target>
        </trans-unit>
        <trans-unit id="4fa62a2a0ad1a06eae0027923f56e07ec351d22f" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with the default replacement string for the platform's default character set. The &lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt;CharsetDecoder&lt;/a&gt; class should be used when more control over the decoding process is required.</source>
          <target state="translated">이 방법은 항상 잘못된 입력 및 매핑 할 수없는 문자 시퀀스를 플랫폼의 기본 문자 세트에 대한 기본 대체 문자열로 바꿉니다. &lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt;CharsetDecoder의&lt;/a&gt; 부호화 처리 된 데이터를 복호화하는 과정을 더 제어 할 필요가있는 경우, 클래스를 사용하여야한다.</target>
        </trans-unit>
        <trans-unit id="7ecf2c16eaf38e3a3f1d0841641a821887c12161" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement byte array. In order to detect such sequences, use the &lt;a href=&quot;charsetdecoder#decode(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;CharsetDecoder.decode(java.nio.ByteBuffer)&lt;/code&gt;&lt;/a&gt; method directly.</source>
          <target state="translated">This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement byte array. In order to detect such sequences, use the &lt;a href=&quot;charsetdecoder#decode(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;CharsetDecoder.decode(java.nio.ByteBuffer)&lt;/code&gt; &lt;/a&gt; method directly.</target>
        </trans-unit>
        <trans-unit id="2a3f7738d52d60d9dab45317ecb84bee2edd004d" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement byte array. In order to detect such sequences, use the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;CharsetDecoder.decode(java.nio.ByteBuffer)&lt;/code&gt;&lt;/a&gt; method directly.</source>
          <target state="translated">이 메소드는 항상 잘못된 입력 및 매핑 할 수없는 문자 시퀀스를이 문자 세트의 기본 대체 바이트 배열로 바꿉니다. 이러한 시퀀스를 감지하려면 &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;CharsetDecoder.decode(java.nio.ByteBuffer)&lt;/code&gt; &lt;/a&gt; 메소드를 직접 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="38587c881fb9338bfc5f7b0b4c57b21c51ed6440" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement byte array. The &lt;a href=&quot;../nio/charset/charsetencoder&quot;&gt;&lt;code&gt;CharsetEncoder&lt;/code&gt;&lt;/a&gt; class should be used when more control over the encoding process is required.</source>
          <target state="translated">이 메소드는 항상 잘못된 입력 및 매핑 할 수없는 문자 시퀀스를이 문자 세트의 기본 대체 바이트 배열로 바꿉니다. &lt;a href=&quot;../nio/charset/charsetencoder&quot;&gt; &lt;code&gt;CharsetEncoder&lt;/code&gt; 의&lt;/a&gt; 부호화 처리를 더 제어 할 필요가있는 경우, 클래스가 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="432bb81bdbb0e99607af672168deb1b6a7034192" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement string. In order to detect such sequences, use the &lt;a href=&quot;charsetencoder#encode(java.nio.CharBuffer)&quot;&gt;&lt;code&gt;CharsetEncoder.encode(java.nio.CharBuffer)&lt;/code&gt;&lt;/a&gt; method directly.</source>
          <target state="translated">This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement string. In order to detect such sequences, use the &lt;a href=&quot;charsetencoder#encode(java.nio.CharBuffer)&quot;&gt; &lt;code&gt;CharsetEncoder.encode(java.nio.CharBuffer)&lt;/code&gt; &lt;/a&gt; method directly.</target>
        </trans-unit>
        <trans-unit id="1f13faeb3f76e5dd8cc2f8d9308ca1a600558991" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement string. In order to detect such sequences, use the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;CharsetEncoder.encode(java.nio.CharBuffer)&lt;/code&gt;&lt;/a&gt; method directly.</source>
          <target state="translated">이 방법은 항상 잘못된 입력 및 매핑 할 수없는 문자 시퀀스를이 문자 세트의 기본 대체 문자열로 바꿉니다. 이러한 시퀀스를 감지하려면 &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;CharsetEncoder.encode(java.nio.CharBuffer)&lt;/code&gt; &lt;/a&gt; 메소드를 직접 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="be8bfafc52125e8313cc18e3a05d6ae74e1d8f25" translate="yes" xml:space="preserve">
          <source>This method always replaces malformed-input and unmappable-character sequences with this charset's default replacement string. The &lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt;&lt;code&gt;CharsetDecoder&lt;/code&gt;&lt;/a&gt; class should be used when more control over the decoding process is required.</source>
          <target state="translated">이 방법은 항상 잘못된 입력 및 매핑 할 수없는 문자 시퀀스를이 문자 세트의 기본 대체 문자열로 바꿉니다. &lt;a href=&quot;../nio/charset/charsetdecoder&quot;&gt; &lt;code&gt;CharsetDecoder&lt;/code&gt; 의&lt;/a&gt; 부호화 처리 된 데이터를 복호화하는 과정을 더 제어 할 필요가있는 경우, 클래스를 사용하여야한다.</target>
        </trans-unit>
        <trans-unit id="31d89ea493db17d7d18f5d26846b42d4cd45c369" translate="yes" xml:space="preserve">
          <source>This method always returns &lt;code&gt;true&lt;/code&gt; when invoked on an unnamed module. A package that is &lt;a href=&quot;#isOpen(java.lang.String)&quot;&gt;&lt;code&gt;opened&lt;/code&gt;&lt;/a&gt; unconditionally is considered exported unconditionally at run-time and so this method returns &lt;code&gt;true&lt;/code&gt; if the package is opened unconditionally.</source>
          <target state="translated">This method always returns &lt;code&gt;true&lt;/code&gt; when invoked on an unnamed module. A package that is &lt;a href=&quot;#isOpen(java.lang.String)&quot;&gt; &lt;code&gt;opened&lt;/code&gt; &lt;/a&gt; unconditionally is considered exported unconditionally at run-time and so this method returns &lt;code&gt;true&lt;/code&gt; if the package is opened unconditionally.</target>
        </trans-unit>
        <trans-unit id="285d7f20de5584473ceabbdd9d24956a7fa1b1da" translate="yes" xml:space="preserve">
          <source>This method always returns &lt;code&gt;true&lt;/code&gt; when invoked on an unnamed module. Additionally, it always returns &lt;code&gt;true&lt;/code&gt; when invoked on an &lt;a href=&quot;module/moduledescriptor#isOpen()&quot;&gt;&lt;code&gt;open&lt;/code&gt;&lt;/a&gt; module with a package in the module.</source>
          <target state="translated">This method always returns &lt;code&gt;true&lt;/code&gt; when invoked on an unnamed module. Additionally, it always returns &lt;code&gt;true&lt;/code&gt; when invoked on an &lt;a href=&quot;module/moduledescriptor#isOpen()&quot;&gt; &lt;code&gt;open&lt;/code&gt; &lt;/a&gt; module with a package in the module.</target>
        </trans-unit>
        <trans-unit id="57dc20e65565e132587a6bae1fa3b9925f66233f" translate="yes" xml:space="preserve">
          <source>This method always returns false for unresolved permissions.</source>
          <target state="translated">This method always returns false for unresolved permissions.</target>
        </trans-unit>
        <trans-unit id="cc60d1f3bbc26c7042daee639e5042e34e0d52e8" translate="yes" xml:space="preserve">
          <source>This method always returns false for unresolved permissions. That is, an UnresolvedPermission is never considered to imply another permission.</source>
          <target state="translated">이 메소드는 해결되지 않은 권한에 대해 항상 false를 리턴합니다. 즉, UnresolvedPermission은 다른 권한을 의미하는 것으로 간주되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="0f05635828e4aece22bcc87aaef94aaadd55b76d" translate="yes" xml:space="preserve">
          <source>This method always returns immediately, whether or not the audio clip exists. When this applet attempts to play the audio clip, the data will be loaded.</source>
          <target state="translated">This method always returns immediately, whether or not the audio clip exists. When this applet attempts to play the audio clip, the data will be loaded.</target>
        </trans-unit>
        <trans-unit id="62cd0afdee249bc7ec993c0089f76c2ab4357533" translate="yes" xml:space="preserve">
          <source>This method always returns immediately, whether or not the image exists. When the applet attempts to draw the image on the screen, the data will be loaded. The graphics primitives that draw the image will incrementally paint on the screen.</source>
          <target state="translated">This method always returns immediately, whether or not the image exists. When the applet attempts to draw the image on the screen, the data will be loaded. The graphics primitives that draw the image will incrementally paint on the screen.</target>
        </trans-unit>
        <trans-unit id="f550c5e5043e5c4e3f19852733414bbbb9aefe52" translate="yes" xml:space="preserve">
          <source>This method always returns immediately, whether or not the image exists. When this applet attempts to draw the image on the screen, the data will be loaded. The graphics primitives that draw the image will incrementally paint on the screen.</source>
          <target state="translated">This method always returns immediately, whether or not the image exists. When this applet attempts to draw the image on the screen, the data will be loaded. The graphics primitives that draw the image will incrementally paint on the screen.</target>
        </trans-unit>
        <trans-unit id="068c0abec377b125bf29eb559f87700c5119e492" translate="yes" xml:space="preserve">
          <source>This method always throws an UnsupportedOperationException and should not be used because SQL &lt;code&gt;Date&lt;/code&gt; values do not have a time component.</source>
          <target state="translated">This method always throws an UnsupportedOperationException and should not be used because SQL &lt;code&gt;Date&lt;/code&gt; values do not have a time component.</target>
        </trans-unit>
        <trans-unit id="6bf3933de9cd4244504ce7bebf9a6351ccc2b77b" translate="yes" xml:space="preserve">
          <source>This method always throws an UnsupportedOperationException and should not be used because SQL &lt;code&gt;Time&lt;/code&gt; values do not have a date component.</source>
          <target state="translated">This method always throws an UnsupportedOperationException and should not be used because SQL &lt;code&gt;Time&lt;/code&gt; values do not have a date component.</target>
        </trans-unit>
        <trans-unit id="118956f0bca7372a534ff95ad23286b9d53d9573" translate="yes" xml:space="preserve">
          <source>This method always uses the unscaled version of the image to render the scaled rectangle and performs the required scaling on the fly. It does not use a cached, scaled version of the image for this operation. Scaling of the image from source to destination is performed such that the first coordinate of the source rectangle is mapped to the first coordinate of the destination rectangle, and the second source coordinate is mapped to the second destination coordinate. The subimage is scaled and flipped as needed to preserve those mappings.</source>
          <target state="translated">This method always uses the unscaled version of the image to render the scaled rectangle and performs the required scaling on the fly. It does not use a cached, scaled version of the image for this operation. Scaling of the image from source to destination is performed such that the first coordinate of the source rectangle is mapped to the first coordinate of the destination rectangle, and the second source coordinate is mapped to the second destination coordinate. The subimage is scaled and flipped as needed to preserve those mappings.</target>
        </trans-unit>
        <trans-unit id="16225678abeadf71c6cbee077427074f7b270d0a" translate="yes" xml:space="preserve">
          <source>This method and/or the code it invokes may need to read some data from the stream to determine whether its data format is supported. The implementation may therefore need to mark the stream, read enough data to determine whether it is in a supported format, and reset the stream's read pointer to its original position. If the input stream does not permit this set of operations, this method may fail with an &lt;code&gt;IOException&lt;/code&gt;.</source>
          <target state="translated">이 메소드 및 / 또는 그것이 호출하는 코드는 데이터 형식이 지원되는지 여부를 판별하기 위해 스트림에서 일부 데이터를 읽어야 할 수도 있습니다. 따라서 구현시 스트림을 표시하고, 지원되는 형식인지 확인하기 위해 충분한 데이터를 읽고, 스트림의 읽기 포인터를 원래 위치로 재설정해야합니다. 입력 스트림이이 오퍼레이션 세트를 허가하지 않는 경우,이 메소드는 &lt;code&gt;IOException&lt;/code&gt; 로 실패 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="220bc5d5cf6a1c88e16fdcd92006d7257a133ce6" translate="yes" xml:space="preserve">
          <source>This method applies an arbitrary scale factor to each of the three RGB components of this &lt;code&gt;Color&lt;/code&gt; to create a brighter version of this &lt;code&gt;Color&lt;/code&gt;. The &lt;code&gt;alpha&lt;/code&gt; value is preserved. Although &lt;code&gt;brighter&lt;/code&gt; and &lt;code&gt;darker&lt;/code&gt; are inverse operations, the results of a series of invocations of these two methods might be inconsistent because of rounding errors.</source>
          <target state="translated">This method applies an arbitrary scale factor to each of the three RGB components of this &lt;code&gt;Color&lt;/code&gt; to create a brighter version of this &lt;code&gt;Color&lt;/code&gt; . The &lt;code&gt;alpha&lt;/code&gt; value is preserved. Although &lt;code&gt;brighter&lt;/code&gt; and &lt;code&gt;darker&lt;/code&gt; are inverse operations, the results of a series of invocations of these two methods might be inconsistent because of rounding errors.</target>
        </trans-unit>
        <trans-unit id="36ba40cb06c07aabc39276b6aae1f22449d6b735" translate="yes" xml:space="preserve">
          <source>This method applies an arbitrary scale factor to each of the three RGB components of this &lt;code&gt;Color&lt;/code&gt; to create a darker version of this &lt;code&gt;Color&lt;/code&gt;. The &lt;code&gt;alpha&lt;/code&gt; value is preserved. Although &lt;code&gt;brighter&lt;/code&gt; and &lt;code&gt;darker&lt;/code&gt; are inverse operations, the results of a series of invocations of these two methods might be inconsistent because of rounding errors.</source>
          <target state="translated">This method applies an arbitrary scale factor to each of the three RGB components of this &lt;code&gt;Color&lt;/code&gt; to create a darker version of this &lt;code&gt;Color&lt;/code&gt; . The &lt;code&gt;alpha&lt;/code&gt; value is preserved. Although &lt;code&gt;brighter&lt;/code&gt; and &lt;code&gt;darker&lt;/code&gt; are inverse operations, the results of a series of invocations of these two methods might be inconsistent because of rounding errors.</target>
        </trans-unit>
        <trans-unit id="4da6da35c7250af512899cb384b862226dc445d2" translate="yes" xml:space="preserve">
          <source>This method applies the current rules for leap years across the whole time-line. In general, a year is a leap year if it is divisible by four without remainder. However, years divisible by 100, are not leap years, with the exception of years divisible by 400 which are.</source>
          <target state="translated">이 방법은 전체 기간에 걸쳐 윤년에 대한 현재 규칙을 적용합니다. 일반적으로 1 년은 나머지없이 4로 나눌 수있는 윤년입니다. 그러나 100으로 나눌 수있는 연도는 윤년이 아니며, 400으로 나눌 수있는 연도는 예외입니다.</target>
        </trans-unit>
        <trans-unit id="58d118980dcf7f4ec8ac86a1b8ea2252fc0dfc16" translate="yes" xml:space="preserve">
          <source>This method applies to a &lt;code&gt;RowSet&lt;/code&gt; object only while it is connected to a database using a JDBC driver.</source>
          <target state="translated">This method applies to a &lt;code&gt;RowSet&lt;/code&gt; object only while it is connected to a database using a JDBC driver.</target>
        </trans-unit>
        <trans-unit id="94822fc61a39722aa704ca79332e8b359d9ee390" translate="yes" xml:space="preserve">
          <source>This method applies to a &lt;code&gt;RowSet&lt;/code&gt; object only while it is connected to a database using a JDBC driver. For connected &lt;code&gt;RowSet&lt;/code&gt; implementations such as &lt;code&gt;JdbcRowSet&lt;/code&gt;, this method has a direct and immediate effect on the underlying JDBC driver.</source>
          <target state="translated">This method applies to a &lt;code&gt;RowSet&lt;/code&gt; object only while it is connected to a database using a JDBC driver. For connected &lt;code&gt;RowSet&lt;/code&gt; implementations such as &lt;code&gt;JdbcRowSet&lt;/code&gt; , this method has a direct and immediate effect on the underlying JDBC driver.</target>
        </trans-unit>
        <trans-unit id="268718a6011dcfbddd887deca0fb0a458bf3d563" translate="yes" xml:space="preserve">
          <source>This method assigns a default &lt;a href=&quot;../security/protectiondomain&quot;&gt;&lt;code&gt;&lt;code&gt;ProtectionDomain&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; to the newly defined class. The &lt;code&gt;ProtectionDomain&lt;/code&gt; is effectively granted the same set of permissions returned when &lt;a href=&quot;../security/policy#getPermissions-java.security.CodeSource-&quot;&gt;&lt;code&gt;&lt;code&gt;Policy.getPolicy().getPermissions(new CodeSource(null, null))&lt;/code&gt;&lt;/code&gt;&lt;/a&gt; is invoked. The default domain is created on the first invocation of &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-&quot;&gt;&lt;code&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/code&gt;&lt;/a&gt;, and re-used on subsequent invocations.</source>
          <target state="translated">이 메소드는 기본 &lt;a href=&quot;../security/protectiondomain&quot;&gt; &lt;code&gt;&lt;code&gt;ProtectionDomain&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 을 새로 정의 된 클래스에 지정합니다. &lt;code&gt;ProtectionDomain&lt;/code&gt; 효과적으로 때 반환 권한의 동일한 집합이 부여됩니다 &lt;a href=&quot;../security/policy#getPermissions-java.security.CodeSource-&quot;&gt; &lt;code&gt;&lt;code&gt;Policy.getPolicy().getPermissions(new CodeSource(null, null))&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 호출을. 기본 도메인은 &lt;a href=&quot;classloader#defineClass-java.lang.String-byte:A-int-int-&quot;&gt; &lt;code&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/code&gt; &lt;/a&gt; 의 첫 번째 호출에서 작성 되고 후속 호출에서 재사용됩니다.</target>
        </trans-unit>
        <trans-unit id="21f263dd4db449be2f65b287a3511dda8a269b1e" translate="yes" xml:space="preserve">
          <source>This method assigns a default &lt;a href=&quot;../security/protectiondomain&quot;&gt;&lt;code&gt;ProtectionDomain&lt;/code&gt;&lt;/a&gt; to the newly defined class. The &lt;code&gt;ProtectionDomain&lt;/code&gt; is effectively granted the same set of permissions returned when &lt;a href=&quot;../security/policy#getPermissions(java.security.CodeSource)&quot;&gt;&lt;code&gt;Policy.getPolicy().getPermissions(new CodeSource(null, null))&lt;/code&gt;&lt;/a&gt; is invoked. The default protection domain is created on the first invocation of &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;defineClass&lt;/code&gt;&lt;/a&gt;, and re-used on subsequent invocations.</source>
          <target state="translated">This method assigns a default &lt;a href=&quot;../security/protectiondomain&quot;&gt; &lt;code&gt;ProtectionDomain&lt;/code&gt; &lt;/a&gt; to the newly defined class. The &lt;code&gt;ProtectionDomain&lt;/code&gt; is effectively granted the same set of permissions returned when &lt;a href=&quot;../security/policy#getPermissions(java.security.CodeSource)&quot;&gt; &lt;code&gt;Policy.getPolicy().getPermissions(new CodeSource(null, null))&lt;/code&gt; &lt;/a&gt; is invoked. The default protection domain is created on the first invocation of &lt;a href=&quot;#defineClass(java.lang.String,byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;defineClass&lt;/code&gt; &lt;/a&gt;, and re-used on subsequent invocations.</target>
        </trans-unit>
        <trans-unit id="a06830bb8cf26de066a52fad7e0c239478bcefaa" translate="yes" xml:space="preserve">
          <source>This method attempts to locate and load the class or interface. It does not link the class, and does not run the class initializer. If the class is not found, this method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 클래스 또는 인터페이스를 찾아서로드하려고합니다. 클래스를 링크하지 않으며 클래스 이니셜 라이저를 실행하지 않습니다. 클래스를 찾을 수없는 경우이 메서드는 &lt;code&gt;null&lt;/code&gt; 을 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="a855004fac76ae452788b9d6bb51ee9388af7555" translate="yes" xml:space="preserve">
          <source>This method attempts to locate, load, and link the class or interface. It does not run the class initializer. If the class is not found, this method returns &lt;code&gt;null&lt;/code&gt;.</source>
          <target state="translated">This method attempts to locate, load, and link the class or interface. It does not run the class initializer. If the class is not found, this method returns &lt;code&gt;null&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f426f8160bb66663f3038acb7b0ab97dfff5f242" translate="yes" xml:space="preserve">
          <source>This method attempts to match the given certificate with each keystore entry. If the entry being considered was created by a call to &lt;code&gt;setCertificateEntry&lt;/code&gt;, or created by a call to &lt;code&gt;setEntry&lt;/code&gt; with a &lt;code&gt;TrustedCertificateEntry&lt;/code&gt;, then the given certificate is compared to that entry's certificate.</source>
          <target state="translated">이 메소드는 지정된 인증서를 각 키 저장소 항목과 일치 시키려고합니다. 항목이 호출에 의해 생성 된 것으로 간주되는 경우 &lt;code&gt;setCertificateEntry&lt;/code&gt; 의 호출에 의해, 또는 생성 &lt;code&gt;setEntry&lt;/code&gt; A를 &lt;code&gt;TrustedCertificateEntry&lt;/code&gt; 를 한 후 지정된 증명서는 그 엔트리의 인증서와 비교됩니다.</target>
        </trans-unit>
        <trans-unit id="b55f6d668c98e4f21925df06791513339c91fad6" translate="yes" xml:space="preserve">
          <source>This method behaves as if (for non-&lt;code&gt;null&lt;/code&gt; array elements):</source>
          <target state="translated">This method behaves as if (for non- &lt;code&gt;null&lt;/code&gt; array elements):</target>
        </trans-unit>
        <trans-unit id="0ebe86017c28d7421d042c4fed59b52ddd39f5ee" translate="yes" xml:space="preserve">
          <source>This method behaves as if (for non-&lt;code&gt;null&lt;/code&gt; array references and elements):</source>
          <target state="translated">This method behaves as if (for non- &lt;code&gt;null&lt;/code&gt; array references and elements):</target>
        </trans-unit>
        <trans-unit id="f552e85b78eeca3e673fb6dbf48fa9499e6d1a4d" translate="yes" xml:space="preserve">
          <source>This method behaves as if (for non-&lt;code&gt;null&lt;/code&gt; array references):</source>
          <target state="translated">This method behaves as if (for non- &lt;code&gt;null&lt;/code&gt; array references):</target>
        </trans-unit>
        <trans-unit id="f6548b6484bb5d6e1c2e0cfec77a947254dc94fe" translate="yes" xml:space="preserve">
          <source>This method behaves as if the method handle to be invoked is the result of adapting the given method handle, via &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt;&lt;code&gt;MethodHandle.asType(java.lang.invoke.MethodType)&lt;/code&gt;&lt;/a&gt;, to adjust the return type to the desired type.</source>
          <target state="translated">This method behaves as if the method handle to be invoked is the result of adapting the given method handle, via &lt;a href=&quot;methodhandle#asType(java.lang.invoke.MethodType)&quot;&gt; &lt;code&gt;MethodHandle.asType(java.lang.invoke.MethodType)&lt;/code&gt; &lt;/a&gt;, to adjust the return type to the desired type.</target>
        </trans-unit>
        <trans-unit id="2bb8f56d354cd47ac54e9cf5407697f09cf92bb2" translate="yes" xml:space="preserve">
          <source>This method behaves as if:</source>
          <target state="translated">This method behaves as if:</target>
        </trans-unit>
        <trans-unit id="17c6875b40f8854d2e8c9c961692d842b35cddb4" translate="yes" xml:space="preserve">
          <source>This method behaves exactly as &lt;code&gt;Subject.doAs&lt;/code&gt;, except that instead of retrieving the current Thread's &lt;code&gt;AccessControlContext&lt;/code&gt;, it uses the provided &lt;code&gt;AccessControlContext&lt;/code&gt;. If the provided &lt;code&gt;AccessControlContext&lt;/code&gt; is &lt;code&gt;null&lt;/code&gt;, this method instantiates a new &lt;code&gt;AccessControlContext&lt;/code&gt; with an empty collection of ProtectionDomains.</source>
          <target state="translated">이 메소드 는 현재 Thread의 &lt;code&gt;AccessControlContext&lt;/code&gt; 를 검색하는 대신 제공된 &lt;code&gt;AccessControlContext&lt;/code&gt; 를 사용 한다는 점을 제외하면 &lt;code&gt;Subject.doAs&lt;/code&gt; 와 동일하게 작동합니다 . 제공된 &lt;code&gt;AccessControlContext&lt;/code&gt; 가 &lt;code&gt;null&lt;/code&gt; 인 경우 ,이 메소드 는 비어있는 ProtectionDomain 컬렉션으로 새로운 &lt;code&gt;AccessControlContext&lt;/code&gt; 를 인스턴스화합니다 .</target>
        </trans-unit>
        <trans-unit id="6677fb815e4992e874b461ab8f62f78cce359d25" translate="yes" xml:space="preserve">
          <source>This method behaves the same as &lt;a href=&quot;#decode(java.lang.String,java.nio.charset.Charset)&quot;&gt;decode(java.lang.String,java.nio.charset.Charset)&lt;/a&gt; except that it will &lt;a href=&quot;../nio/charset/charset#forName(java.lang.String)&quot;&gt;look up the charset&lt;/a&gt; using the given encoding name.</source>
          <target state="translated">This method behaves the same as &lt;a href=&quot;#decode(java.lang.String,java.nio.charset.Charset)&quot;&gt;decode(java.lang.String,java.nio.charset.Charset)&lt;/a&gt; except that it will &lt;a href=&quot;../nio/charset/charset#forName(java.lang.String)&quot;&gt;look up the charset&lt;/a&gt; using the given encoding name.</target>
        </trans-unit>
        <trans-unit id="b584428fffe2cb7319f7d3b9d2ef45265686d22f" translate="yes" xml:space="preserve">
          <source>This method behaves the same as &lt;a href=&quot;#encode(java.lang.String,java.nio.charset.Charset)&quot;&gt;encode(java.lang.String,java.nio.charset.Charset)&lt;/a&gt; except that it will &lt;a href=&quot;../nio/charset/charset#forName(java.lang.String)&quot;&gt;look up the charset&lt;/a&gt; using the given encoding name.</source>
          <target state="translated">This method behaves the same as &lt;a href=&quot;#encode(java.lang.String,java.nio.charset.Charset)&quot;&gt;encode(java.lang.String,java.nio.charset.Charset)&lt;/a&gt; except that it will &lt;a href=&quot;../nio/charset/charset#forName(java.lang.String)&quot;&gt;look up the charset&lt;/a&gt; using the given encoding name.</target>
        </trans-unit>
        <trans-unit id="08fc4a5d50c6d15e38c5477baa68db4cba62e04c" translate="yes" xml:space="preserve">
          <source>This method behaves the same as &lt;a href=&quot;#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;newMBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt;&lt;/a&gt;, but additionally, if &lt;code&gt;notificationEmitter&lt;/code&gt; is &lt;code&gt;
 true&lt;/code&gt;, then the MBean is assumed to be a &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; and the returned proxy will implement &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; as well as &lt;code&gt;interfaceClass&lt;/code&gt;. A call to &lt;a href=&quot;notificationbroadcaster#addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt;&lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt;&lt;/a&gt; on the proxy will result in a call to &lt;a href=&quot;mbeanserverconnection#addNotificationListener(javax.management.ObjectName,javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt;&lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName,
 NotificationListener, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;, and likewise for the other methods of &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method behaves the same as &lt;a href=&quot;#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;newMBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt; &lt;/a&gt;, but additionally, if &lt;code&gt;notificationEmitter&lt;/code&gt; is &lt;code&gt; true&lt;/code&gt; , then the MBean is assumed to be a &lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt; and the returned proxy will implement &lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt; as well as &lt;code&gt;interfaceClass&lt;/code&gt; . A call to &lt;a href=&quot;notificationbroadcaster#addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt; &lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt; &lt;/a&gt; on the proxy will result in a call to &lt;a href=&quot;mbeanserverconnection#addNotificationListener(javax.management.ObjectName,javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt; &lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt;, and likewise for the other methods of &lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="a50e4a6345499807a9912ff057eaa3589805702b" translate="yes" xml:space="preserve">
          <source>This method behaves the same as &lt;a href=&quot;#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt;&lt;code&gt;newMXBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt;&lt;/a&gt;, but additionally, if &lt;code&gt;notificationEmitter&lt;/code&gt; is &lt;code&gt;
 true&lt;/code&gt;, then the MXBean is assumed to be a &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; and the returned proxy will implement &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; as well as &lt;code&gt;interfaceClass&lt;/code&gt;. A call to &lt;a href=&quot;notificationbroadcaster#addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt;&lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt;&lt;/a&gt; on the proxy will result in a call to &lt;a href=&quot;mbeanserverconnection#addNotificationListener(javax.management.ObjectName,javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt;&lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName,
 NotificationListener, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;, and likewise for the other methods of &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method behaves the same as &lt;a href=&quot;#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class)&quot;&gt; &lt;code&gt;newMXBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt; &lt;/a&gt;, but additionally, if &lt;code&gt;notificationEmitter&lt;/code&gt; is &lt;code&gt; true&lt;/code&gt; , then the MXBean is assumed to be a &lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt; and the returned proxy will implement &lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt; as well as &lt;code&gt;interfaceClass&lt;/code&gt; . A call to &lt;a href=&quot;notificationbroadcaster#addNotificationListener(javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt; &lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt; &lt;/a&gt; on the proxy will result in a call to &lt;a href=&quot;mbeanserverconnection#addNotificationListener(javax.management.ObjectName,javax.management.NotificationListener,javax.management.NotificationFilter,java.lang.Object)&quot;&gt; &lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt;, and likewise for the other methods of &lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="77855a893221f1ce4a0389601130e3a381d80efd" translate="yes" xml:space="preserve">
          <source>This method behaves the same as &lt;a href=&quot;#storeToXML(java.io.OutputStream,java.lang.String,java.nio.charset.Charset)&quot;&gt;storeToXML(OutputStream os, String comment, Charset charset)&lt;/a&gt; except that it will &lt;a href=&quot;../nio/charset/charset#forName(java.lang.String)&quot;&gt;look up the charset&lt;/a&gt; using the given encoding name.</source>
          <target state="translated">This method behaves the same as &lt;a href=&quot;#storeToXML(java.io.OutputStream,java.lang.String,java.nio.charset.Charset)&quot;&gt;storeToXML(OutputStream os, String comment, Charset charset)&lt;/a&gt; except that it will &lt;a href=&quot;../nio/charset/charset#forName(java.lang.String)&quot;&gt;look up the charset&lt;/a&gt; using the given encoding name.</target>
        </trans-unit>
        <trans-unit id="7ab20aadadf75efe0ea98bf999bdd4234990df0e" translate="yes" xml:space="preserve">
          <source>This method behaves the same as &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;newMBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt;&lt;/a&gt;, but additionally, if &lt;code&gt;notificationEmitter&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then the MBean is assumed to be a &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; and the returned proxy will implement &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; as well as &lt;code&gt;interfaceClass&lt;/code&gt;. A call to &lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt;&lt;/a&gt; on the proxy will result in a call to &lt;a href=&quot;mbeanserverconnection#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName,
 NotificationListener, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;, and likewise for the other methods of &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;newMBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt; &lt;/a&gt; 와 동일하게 작동 하지만, &lt;code&gt;notificationEmitter&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 경우 MBean은 &lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; 로&lt;/a&gt; 간주되며 리턴 된 프록시는 &lt;code&gt;interfaceClass&lt;/code&gt; 뿐만 아니라 &lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt; 를 구현 합니다. 프록시 에서 &lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt; &lt;/a&gt; 를 호출하면 &lt;a href=&quot;mbeanserverconnection#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt; 가 호출됩니다.마찬가지로 &lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt; 의 다른 방법도 마찬가지입니다 .</target>
        </trans-unit>
        <trans-unit id="040a2b5e4aeb36e7b9a8f65a99d90ff3a5e5bc95" translate="yes" xml:space="preserve">
          <source>This method behaves the same as &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt;&lt;code&gt;newMXBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt;&lt;/a&gt;, but additionally, if &lt;code&gt;notificationEmitter&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;, then the MXBean is assumed to be a &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; and the returned proxy will implement &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt; as well as &lt;code&gt;interfaceClass&lt;/code&gt;. A call to &lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt;&lt;/a&gt; on the proxy will result in a call to &lt;a href=&quot;mbeanserverconnection#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt;&lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName,
 NotificationListener, NotificationFilter, Object)&lt;/code&gt;&lt;/a&gt;, and likewise for the other methods of &lt;a href=&quot;notificationbroadcaster&quot;&gt;&lt;code&gt;NotificationBroadcaster&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;notificationemitter&quot;&gt;&lt;code&gt;NotificationEmitter&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-&quot;&gt; &lt;code&gt;newMXBeanProxy(MBeanServerConnection, ObjectName, Class)&lt;/code&gt; &lt;/a&gt; 와 동일하게 작동 하지만, &lt;code&gt;notificationEmitter&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; 인 경우 MXBean은 &lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; 로&lt;/a&gt; 간주되며 반환 된 프록시는 &lt;code&gt;interfaceClass&lt;/code&gt; 뿐만 아니라 &lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt; 를 구현 합니다. 프록시 에서 &lt;a href=&quot;notificationbroadcaster#addNotificationListener-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;NotificationBroadcaster.addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)&lt;/code&gt; &lt;/a&gt; 를 호출하면 &lt;a href=&quot;mbeanserverconnection#addNotificationListener-javax.management.ObjectName-javax.management.NotificationListener-javax.management.NotificationFilter-java.lang.Object-&quot;&gt; &lt;code&gt;MBeanServerConnection.addNotificationListener(ObjectName, NotificationListener, NotificationFilter, Object)&lt;/code&gt; &lt;/a&gt; 가 호출됩니다.마찬가지로 &lt;a href=&quot;notificationbroadcaster&quot;&gt; &lt;code&gt;NotificationBroadcaster&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;notificationemitter&quot;&gt; &lt;code&gt;NotificationEmitter&lt;/code&gt; &lt;/a&gt; 의 다른 방법도 마찬가지입니다 .</target>
        </trans-unit>
        <trans-unit id="2a3a050dc4ad75c04fab2f530821a2d8b2826a19" translate="yes" xml:space="preserve">
          <source>This method behaves the same as calling &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt;&lt;code&gt;getBundle(String, Locale, ClassLoader, Control)&lt;/code&gt;&lt;/a&gt; passing a default instance of &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; unless another &lt;a href=&quot;resourcebundle.control&quot;&gt;&lt;code&gt;ResourceBundle.Control&lt;/code&gt;&lt;/a&gt; is provided with the &lt;a href=&quot;spi/resourcebundlecontrolprovider&quot;&gt;&lt;code&gt;ResourceBundleControlProvider&lt;/code&gt;&lt;/a&gt; SPI. Refer to the description of &lt;a href=&quot;#modify_default_behavior&quot;&gt;modifying the default behavior&lt;/a&gt;.</source>
          <target state="translated">이 메소드 는 다른 &lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt; 이 &lt;a href=&quot;spi/resourcebundlecontrolprovider&quot;&gt; &lt;code&gt;ResourceBundleControlProvider&lt;/code&gt; &lt;/a&gt; SPI 와 함께 제공 되지 않는 한 &lt;a href=&quot;resourcebundle.control&quot;&gt; &lt;code&gt;ResourceBundle.Control&lt;/code&gt; &lt;/a&gt; 의 기본 인스턴스를 전달하는 &lt;a href=&quot;resourcebundle#getBundle-java.lang.String-java.util.Locale-java.lang.ClassLoader-java.util.ResourceBundle.Control-&quot;&gt; &lt;code&gt;getBundle(String, Locale, ClassLoader, Control)&lt;/code&gt; &lt;/a&gt; 호출과 동일하게 작동합니다 . &lt;a href=&quot;#modify_default_behavior&quot;&gt;기본 동작 수정&lt;/a&gt; 에 대한 설명을 참조하십시오 .</target>
        </trans-unit>
        <trans-unit id="3c9caa97bdb472bf9e1d8c81bfe7a5c110e30b01" translate="yes" xml:space="preserve">
          <source>This method behaves very much like &lt;a href=&quot;#asCollector(java.lang.Class,int)&quot;&gt;&lt;code&gt;asCollector(Class, int)&lt;/code&gt;&lt;/a&gt;, but differs in that its &lt;code&gt;
 collectArgPos&lt;/code&gt; argument indicates at which position in the parameter list arguments should be collected. This index is zero-based.</source>
          <target state="translated">This method behaves very much like &lt;a href=&quot;#asCollector(java.lang.Class,int)&quot;&gt; &lt;code&gt;asCollector(Class, int)&lt;/code&gt; &lt;/a&gt;, but differs in that its &lt;code&gt; collectArgPos&lt;/code&gt; argument indicates at which position in the parameter list arguments should be collected. This index is zero-based.</target>
        </trans-unit>
        <trans-unit id="5604ac7620e207f4e23a637ce3fd305672c2f5d6" translate="yes" xml:space="preserve">
          <source>This method behaves very much like &lt;a href=&quot;#asSpreader(java.lang.Class,int)&quot;&gt;&lt;code&gt;asSpreader(Class, int)&lt;/code&gt;&lt;/a&gt;, but accepts an additional &lt;code&gt;spreadArgPos&lt;/code&gt; argument to indicate at which position in the parameter list the spreading should take place.</source>
          <target state="translated">This method behaves very much like &lt;a href=&quot;#asSpreader(java.lang.Class,int)&quot;&gt; &lt;code&gt;asSpreader(Class, int)&lt;/code&gt; &lt;/a&gt;, but accepts an additional &lt;code&gt;spreadArgPos&lt;/code&gt; argument to indicate at which position in the parameter list the spreading should take place.</target>
        </trans-unit>
        <trans-unit id="4ef540b8fd24f2da7b9e12b97b85f8eda555b2c9" translate="yes" xml:space="preserve">
          <source>This method blocks until a datagram is received. The &lt;code&gt;length&lt;/code&gt; field of the datagram packet object contains the length of the received message. If the message is longer than the packet's length, the message is truncated.</source>
          <target state="translated">이 방법은 데이터 그램이 수신 될 때까지 차단됩니다. 데이터 그램 패킷 객체 의 &lt;code&gt;length&lt;/code&gt; 필드는 수신 된 메시지의 길이를 포함한다. 메시지가 패킷 길이보다 길면 메시지가 잘립니다.</target>
        </trans-unit>
        <trans-unit id="9edb264cc1a33d9820b53af8c3cdc1fb275ae554" translate="yes" xml:space="preserve">
          <source>This method blocks until a newline character is read, a carriage return and the byte following it are read (to see if it is a newline), the end of the file is reached, or an exception is thrown.</source>
          <target state="translated">이 메소드는 개행 문자를 읽을 때, 캐리지 리턴 및 그 뒤에 오는 바이트를 읽거나 (줄 바꿈인지 여부를 확인하기 위해), 파일 끝에 도달하거나 예외가 발생할 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="65d90c85a52039a4ff19c943ccb3cb5f594c3337" translate="yes" xml:space="preserve">
          <source>This method blocks until all the bytes are read, the end of the stream is detected, or an exception is thrown.</source>
          <target state="translated">이 메소드는 모든 바이트를 읽거나 스트림의 끝이 감지되거나 예외가 발생할 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="8613d9e28f1e50e06732c3a04ed3315fc4de1b49" translate="yes" xml:space="preserve">
          <source>This method blocks until input data is available, end of file is detected, or an exception is thrown.</source>
          <target state="translated">이 방법은 입력 데이터를 사용할 수 있거나 파일 끝이 감지되거나 예외가 발생할 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="69d6a4f6358b50ecc853876960af6eed4f3af288" translate="yes" xml:space="preserve">
          <source>This method blocks until one of the following conditions occurs:</source>
          <target state="translated">이 방법은 다음 조건 중 하나가 발생할 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="d24e22ae204bbffb1aae51350c2b8591a89a1031" translate="yes" xml:space="preserve">
          <source>This method blocks until the byte is read, the end of the stream is detected, or an exception is thrown.</source>
          <target state="translated">이 메소드는 바이트를 읽을 때, 스트림의 끝이 감지되거나 예외가 발생할 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="dc2aa5b3b05ad6ab736997f223584ea0ea01792a" translate="yes" xml:space="preserve">
          <source>This method blocks until the eight bytes are read, the end of the stream is detected, or an exception is thrown.</source>
          <target state="translated">이 메소드는 8 바이트를 읽거나 스트림의 끝이 감지되거나 예외가 발생할 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="9bb676367f81fc57a11814f7fb38d025266194d0" translate="yes" xml:space="preserve">
          <source>This method blocks until the four bytes are read, the end of the stream is detected, or an exception is thrown.</source>
          <target state="translated">이 메소드는 4 바이트를 읽을 때까지, 스트림의 끝이 발견되거나 예외가 발생 될 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="3d5091fd6af7b86eae2699fd1b079cbd872ffc42" translate="yes" xml:space="preserve">
          <source>This method blocks until the group has terminated, or the timeout occurs, or the current thread is interrupted, whichever happens first.</source>
          <target state="translated">이 방법은 그룹이 종료되거나 시간 초과가 발생하거나 현재 스레드가 중단 될 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="371ee03cc5dd98ef08b15c10e5c894e5634e72b2" translate="yes" xml:space="preserve">
          <source>This method blocks until the requested number of bytes have been skipped, end of file is reached, or an exception is thrown.</source>
          <target state="translated">이 메서드는 요청 된 바이트 수를 건너 뛰거나 파일 끝에 도달하거나 예외가 throw 될 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="8079da03ae0f8ee6fddde7359cb926ba4859755c" translate="yes" xml:space="preserve">
          <source>This method blocks until the two bytes are read, the end of the stream is detected, or an exception is thrown.</source>
          <target state="translated">이 메소드는 2 바이트를 읽을 때까지, 스트림의 끝이 감지되거나 예외가 발생 될 때까지 차단합니다.</target>
        </trans-unit>
        <trans-unit id="93e2b6fc7eb187fb8de015dfbdaad0350f0d9bea" translate="yes" xml:space="preserve">
          <source>This method builds a data model for the &lt;a href=&quot;../../../org/xml/sax/inputsource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; and calls &lt;a href=&quot;#evaluate(java.lang.Object,javax.xml.namespace.QName)&quot;&gt;&lt;code&gt;evaluate(Object item, QName returnType)&lt;/code&gt;&lt;/a&gt; on the resulting document object.</source>
          <target state="translated">This method builds a data model for the &lt;a href=&quot;../../../org/xml/sax/inputsource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt; and calls &lt;a href=&quot;#evaluate(java.lang.Object,javax.xml.namespace.QName)&quot;&gt; &lt;code&gt;evaluate(Object item, QName returnType)&lt;/code&gt; &lt;/a&gt; on the resulting document object.</target>
        </trans-unit>
        <trans-unit id="7549bd39810c91722092bed4e8d609ab6124a963" translate="yes" xml:space="preserve">
          <source>This method builds a data model for the &lt;a href=&quot;../../../org/xml/sax/inputsource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; and calls &lt;a href=&quot;#evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)&quot;&gt;&lt;code&gt;evaluate(String expression, Object item, QName returnType)&lt;/code&gt;&lt;/a&gt; on the resulting document object.</source>
          <target state="translated">This method builds a data model for the &lt;a href=&quot;../../../org/xml/sax/inputsource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt; and calls &lt;a href=&quot;#evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)&quot;&gt; &lt;code&gt;evaluate(String expression, Object item, QName returnType)&lt;/code&gt; &lt;/a&gt; on the resulting document object.</target>
        </trans-unit>
        <trans-unit id="0332bcfdaccf71a07c16f0d7577cb6e000cb73d8" translate="yes" xml:space="preserve">
          <source>This method builds a data model for the &lt;a href=&quot;../../../org/xml/sax/inputsource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; and calls &lt;a href=&quot;#evaluateExpression(java.lang.Object,java.lang.Class)&quot;&gt;&lt;code&gt;evaluateExpression(Object item, Class type)&lt;/code&gt;&lt;/a&gt; on the resulting document object.</source>
          <target state="translated">This method builds a data model for the &lt;a href=&quot;../../../org/xml/sax/inputsource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt; and calls &lt;a href=&quot;#evaluateExpression(java.lang.Object,java.lang.Class)&quot;&gt; &lt;code&gt;evaluateExpression(Object item, Class type)&lt;/code&gt; &lt;/a&gt; on the resulting document object.</target>
        </trans-unit>
        <trans-unit id="e6a3ad6efbb37110ff48ecafed0ca780e0812fb2" translate="yes" xml:space="preserve">
          <source>This method builds a data model for the &lt;a href=&quot;../../../org/xml/sax/inputsource&quot;&gt;&lt;code&gt;InputSource&lt;/code&gt;&lt;/a&gt; and calls &lt;a href=&quot;#evaluateExpression(java.lang.String,java.lang.Object,java.lang.Class)&quot;&gt;&lt;code&gt;evaluateExpression(String expression, Object item, Class type)&lt;/code&gt;&lt;/a&gt; on the resulting document object. The data model is usually &lt;a href=&quot;../../../org/w3c/dom/document&quot;&gt;&lt;code&gt;Document&lt;/code&gt;&lt;/a&gt;</source>
          <target state="translated">This method builds a data model for the &lt;a href=&quot;../../../org/xml/sax/inputsource&quot;&gt; &lt;code&gt;InputSource&lt;/code&gt; &lt;/a&gt; and calls &lt;a href=&quot;#evaluateExpression(java.lang.String,java.lang.Object,java.lang.Class)&quot;&gt; &lt;code&gt;evaluateExpression(String expression, Object item, Class type)&lt;/code&gt; &lt;/a&gt; on the resulting document object. The data model is usually &lt;a href=&quot;../../../org/w3c/dom/document&quot;&gt; &lt;code&gt;Document&lt;/code&gt; &lt;/a&gt;</target>
        </trans-unit>
        <trans-unit id="f7db78271a125ac89c34ce9bb6bd2d9c603fda06" translate="yes" xml:space="preserve">
          <source>This method by default throws OperationNotSupportedException. A subclass should override this method if it supports schema.</source>
          <target state="translated">이 메소드는 기본적으로 OperationNotSupportedException을 발생시킵니다. 서브 클래스가 스키마를 지원하는 경우이 메소드를 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="f00cb961b8001af76c8cba1d373956d2342fd3bf" translate="yes" xml:space="preserve">
          <source>This method calculates the maximum value of &lt;a href=&quot;calendar#WEEK_OF_YEAR&quot;&gt;&lt;code&gt;WEEK_OF_YEAR&lt;/code&gt;&lt;/a&gt; based on the &lt;a href=&quot;calendar#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; (calendar year) value, not the &lt;a href=&quot;#week_year&quot;&gt;week year&lt;/a&gt;. Call &lt;a href=&quot;#getWeeksInWeekYear()&quot;&gt;&lt;code&gt;getWeeksInWeekYear()&lt;/code&gt;&lt;/a&gt; to get the maximum value of &lt;code&gt;
 WEEK_OF_YEAR&lt;/code&gt; in the week year of this &lt;code&gt;GregorianCalendar&lt;/code&gt;.</source>
          <target state="translated">This method calculates the maximum value of &lt;a href=&quot;calendar#WEEK_OF_YEAR&quot;&gt; &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; &lt;/a&gt; based on the &lt;a href=&quot;calendar#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt; (calendar year) value, not the &lt;a href=&quot;#week_year&quot;&gt;week year&lt;/a&gt;. Call &lt;a href=&quot;#getWeeksInWeekYear()&quot;&gt; &lt;code&gt;getWeeksInWeekYear()&lt;/code&gt; &lt;/a&gt; to get the maximum value of &lt;code&gt; WEEK_OF_YEAR&lt;/code&gt; in the week year of this &lt;code&gt;GregorianCalendar&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="7b0c83cb3f14b5f9ba0e18c88bd5ebf12a4ae946" translate="yes" xml:space="preserve">
          <source>This method calculates the maximum value of &lt;a href=&quot;calendar#WEEK_OF_YEAR&quot;&gt;&lt;code&gt;WEEK_OF_YEAR&lt;/code&gt;&lt;/a&gt; based on the &lt;a href=&quot;calendar#YEAR&quot;&gt;&lt;code&gt;YEAR&lt;/code&gt;&lt;/a&gt; (calendar year) value, not the &lt;a href=&quot;#week_year&quot;&gt;week year&lt;/a&gt;. Call &lt;a href=&quot;gregoriancalendar#getWeeksInWeekYear--&quot;&gt;&lt;code&gt;getWeeksInWeekYear()&lt;/code&gt;&lt;/a&gt; to get the maximum value of &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; in the week year of this &lt;code&gt;GregorianCalendar&lt;/code&gt;.</source>
          <target state="translated">이 메소드 는 &lt;a href=&quot;#week_year&quot;&gt;week year가&lt;/a&gt; 아니라 &lt;a href=&quot;calendar#YEAR&quot;&gt; &lt;code&gt;YEAR&lt;/code&gt; &lt;/a&gt; (calendar year) 값을 기반으로 &lt;a href=&quot;calendar#WEEK_OF_YEAR&quot;&gt; &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; &lt;/a&gt; 의 최대 값을 계산합니다 . &lt;a href=&quot;gregoriancalendar#getWeeksInWeekYear--&quot;&gt; &lt;code&gt;getWeeksInWeekYear()&lt;/code&gt; &lt;/a&gt; 를 호출 하여이 &lt;code&gt;GregorianCalendar&lt;/code&gt; 의 주중 에 &lt;code&gt;WEEK_OF_YEAR&lt;/code&gt; 의 최대 값을 가져 오십시오 .</target>
        </trans-unit>
        <trans-unit id="5ade30ad500240ec5041de280a08fc6f1364e7b4" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;#evaluate(java.lang.Object,javax.xml.namespace.QName)&quot;&gt;&lt;code&gt;evaluate(Object item, QName returnType)&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;returnType&lt;/code&gt; of &lt;a href=&quot;xpathconstants#STRING&quot;&gt;&lt;code&gt;XPathConstants.STRING&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method calls &lt;a href=&quot;#evaluate(java.lang.Object,javax.xml.namespace.QName)&quot;&gt; &lt;code&gt;evaluate(Object item, QName returnType)&lt;/code&gt; &lt;/a&gt; with a &lt;code&gt;returnType&lt;/code&gt; of &lt;a href=&quot;xpathconstants#STRING&quot;&gt; &lt;code&gt;XPathConstants.STRING&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="e87ed2d4d38703026cd1893c546ae4178a55dea8" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;#evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)&quot;&gt;&lt;code&gt;evaluate(String expression, Object item, QName returnType)&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;returnType&lt;/code&gt; of &lt;a href=&quot;xpathconstants#STRING&quot;&gt;&lt;code&gt;XPathConstants.STRING&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method calls &lt;a href=&quot;#evaluate(java.lang.String,java.lang.Object,javax.xml.namespace.QName)&quot;&gt; &lt;code&gt;evaluate(String expression, Object item, QName returnType)&lt;/code&gt; &lt;/a&gt; with a &lt;code&gt;returnType&lt;/code&gt; of &lt;a href=&quot;xpathconstants#STRING&quot;&gt; &lt;code&gt;XPathConstants.STRING&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="d0d1ecc8797f9bc95742de3bf84237eb2ac9b1f4" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;#evaluate(java.lang.String,org.xml.sax.InputSource,javax.xml.namespace.QName)&quot;&gt;&lt;code&gt;evaluate(String expression, InputSource source, QName returnType)&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;returnType&lt;/code&gt; of &lt;a href=&quot;xpathconstants#STRING&quot;&gt;&lt;code&gt;XPathConstants.STRING&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method calls &lt;a href=&quot;#evaluate(java.lang.String,org.xml.sax.InputSource,javax.xml.namespace.QName)&quot;&gt; &lt;code&gt;evaluate(String expression, InputSource source, QName returnType)&lt;/code&gt; &lt;/a&gt; with a &lt;code&gt;returnType&lt;/code&gt; of &lt;a href=&quot;xpathconstants#STRING&quot;&gt; &lt;code&gt;XPathConstants.STRING&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="93fa4d7db120cbf238837fbfc43637db1b235d6d" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;#evaluate(org.xml.sax.InputSource,javax.xml.namespace.QName)&quot;&gt;&lt;code&gt;evaluate(InputSource source, QName returnType)&lt;/code&gt;&lt;/a&gt; with a &lt;code&gt;returnType&lt;/code&gt; of &lt;a href=&quot;xpathconstants#STRING&quot;&gt;&lt;code&gt;XPathConstants.STRING&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method calls &lt;a href=&quot;#evaluate(org.xml.sax.InputSource,javax.xml.namespace.QName)&quot;&gt; &lt;code&gt;evaluate(InputSource source, QName returnType)&lt;/code&gt; &lt;/a&gt; with a &lt;code&gt;returnType&lt;/code&gt; of &lt;a href=&quot;xpathconstants#STRING&quot;&gt; &lt;code&gt;XPathConstants.STRING&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="5fe36911271723f5ccfa4a67a59619ae34e78e45" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;#getKind()&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;fileobject#toUri()&quot;&gt;&lt;code&gt;FileObject.toUri()&lt;/code&gt;&lt;/a&gt; and does not access the fields &lt;a href=&quot;#uri&quot;&gt;&lt;code&gt;uri&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; directly.</source>
          <target state="translated">This method calls &lt;a href=&quot;#getKind()&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;fileobject#toUri()&quot;&gt; &lt;code&gt;FileObject.toUri()&lt;/code&gt; &lt;/a&gt; and does not access the fields &lt;a href=&quot;#uri&quot;&gt; &lt;code&gt;uri&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;#kind&quot;&gt; &lt;code&gt;kind&lt;/code&gt; &lt;/a&gt; directly.</target>
        </trans-unit>
        <trans-unit id="ebd0ae5483113bc432bfc32853310768e6929523" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;calendar#complete()&quot;&gt;&lt;code&gt;Calendar.complete()&lt;/code&gt;&lt;/a&gt; before adding the amount so that all the calendar fields are normalized. If there is any calendar field having an out-of-range value in non-lenient mode, then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">This method calls &lt;a href=&quot;calendar#complete()&quot;&gt; &lt;code&gt;Calendar.complete()&lt;/code&gt; &lt;/a&gt; before adding the amount so that all the calendar fields are normalized. If there is any calendar field having an out-of-range value in non-lenient mode, then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</target>
        </trans-unit>
        <trans-unit id="ee7da62d22051f70cb00bcf36d44c4eb6f430a77" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;calendar#complete()&quot;&gt;&lt;code&gt;Calendar.complete()&lt;/code&gt;&lt;/a&gt; before calculating the week year.</source>
          <target state="translated">This method calls &lt;a href=&quot;calendar#complete()&quot;&gt; &lt;code&gt;Calendar.complete()&lt;/code&gt; &lt;/a&gt; before calculating the week year.</target>
        </trans-unit>
        <trans-unit id="269bea040be761a329f2dcd426e9e7e5650eee88" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;calendar#complete--&quot;&gt;&lt;code&gt;Calendar.complete()&lt;/code&gt;&lt;/a&gt; before adding the amount so that all the calendar fields are normalized. If there is any calendar field having an out-of-range value in non-lenient mode, then an &lt;code&gt;IllegalArgumentException&lt;/code&gt; is thrown.</source>
          <target state="translated">이 메소드는 모든 캘린더 필드가 정규화되도록 금액을 추가하기 전에 &lt;a href=&quot;calendar#complete--&quot;&gt; &lt;code&gt;Calendar.complete()&lt;/code&gt; &lt;/a&gt; 를 호출합니다 . 무소음 모드에서 범위를 벗어난 값을 가진 달력 필드가 있으면 &lt;code&gt;IllegalArgumentException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="37051f601b556b3395026e8474644866b3636c1d" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;calendar#complete--&quot;&gt;&lt;code&gt;Calendar.complete()&lt;/code&gt;&lt;/a&gt; before calculating the week year.</source>
          <target state="translated">이 메소드는 주년을 계산하기 전에 &lt;a href=&quot;calendar#complete--&quot;&gt; &lt;code&gt;Calendar.complete()&lt;/code&gt; &lt;/a&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="3d2e8eda130fd16fedb0d019fdddb0fc7a855cfa" translate="yes" xml:space="preserve">
          <source>This method calls &lt;a href=&quot;simplejavafileobject#getKind--&quot;&gt;&lt;code&gt;getKind()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;simplejavafileobject#toUri--&quot;&gt;&lt;code&gt;toUri()&lt;/code&gt;&lt;/a&gt; and does not access the fields &lt;a href=&quot;simplejavafileobject#uri&quot;&gt;&lt;code&gt;uri&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;simplejavafileobject#kind&quot;&gt;&lt;code&gt;kind&lt;/code&gt;&lt;/a&gt; directly.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;simplejavafileobject#getKind--&quot;&gt; &lt;code&gt;getKind()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;simplejavafileobject#toUri--&quot;&gt; &lt;code&gt;toUri()&lt;/code&gt; &lt;/a&gt; 호출 하고 &lt;a href=&quot;simplejavafileobject#uri&quot;&gt; &lt;code&gt;uri&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;simplejavafileobject#kind&quot;&gt; &lt;code&gt;kind&lt;/code&gt; &lt;/a&gt; 필드에 직접 액세스하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="e06fe40c6f4df5c5dacf982a86322e1fc4b787d1" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;AccessController.checkPermission&lt;/code&gt; with the given permission.</source>
          <target state="translated">이 메소드 는 주어진 권한으로 &lt;code&gt;AccessController.checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="19738604ec6313155cae470a190e14c1867fe9c5" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;AWTPermission(&quot;accessClipboard&quot;)&lt;/code&gt; permission. In the case of subset Profiles of Java SE that do not include the &lt;code&gt;java.awt&lt;/code&gt; package, &lt;code&gt;checkPermission&lt;/code&gt; is instead called to check the permission &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;AWTPermission(&quot;accessClipboard&quot;)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 . &lt;code&gt;java.awt&lt;/code&gt; 패키지를 포함하지 않는 Java SE의 서브 세트 프로파일의 경우 &lt;code&gt;java.security.AllPermission&lt;/code&gt; 권한을 확인하기 위해 &lt;code&gt;checkPermission&lt;/code&gt; 이 대신 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="73c694fe3a42693c434e002d948fff87adb94657" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;AWTPermission(&quot;accessEventQueue&quot;)&lt;/code&gt; permission. In the case of subset Profiles of Java SE that do not include the &lt;code&gt;java.awt&lt;/code&gt; package, &lt;code&gt;checkPermission&lt;/code&gt; is instead called to check the permission &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;AWTPermission(&quot;accessEventQueue&quot;)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 . &lt;code&gt;java.awt&lt;/code&gt; 패키지를 포함하지 않는 Java SE의 서브 세트 프로파일의 경우 &lt;code&gt;java.security.AllPermission&lt;/code&gt; 권한을 확인하기 위해 &lt;code&gt;checkPermission&lt;/code&gt; 이 대신 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="ae3f7d9a114a9c3d1fc1ce191ace01aa23dfb43f" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;AWTPermission(&quot;showWindowWithoutWarningBanner&quot;)&lt;/code&gt; permission, and returns &lt;code&gt;true&lt;/code&gt; if a SecurityException is not thrown, otherwise it returns &lt;code&gt;false&lt;/code&gt;. In the case of subset Profiles of Java SE that do not include the &lt;code&gt;java.awt&lt;/code&gt; package, &lt;code&gt;checkPermission&lt;/code&gt; is instead called to check the permission &lt;code&gt;java.security.AllPermission&lt;/code&gt;.</source>
          <target state="translated">이 방법은 호출 &lt;code&gt;checkPermission&lt;/code&gt; 와 &lt;code&gt;AWTPermission(&quot;showWindowWithoutWarningBanner&quot;)&lt;/code&gt; 의 허가, 반환 &lt;code&gt;true&lt;/code&gt; 그렇지 않으면 반환는 SecurityException가 슬로우되지 않는 경우 &lt;code&gt;false&lt;/code&gt; . &lt;code&gt;java.awt&lt;/code&gt; 패키지를 포함하지 않는 Java SE의 서브 세트 프로파일의 경우 &lt;code&gt;java.security.AllPermission&lt;/code&gt; 권한을 확인하기 위해 &lt;code&gt;checkPermission&lt;/code&gt; 이 대신 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="6fdeff44c78d3902723ee823eaba70d551148962" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;FilePermission(cmd,&quot;execute&quot;)&lt;/code&gt; permission if cmd is an absolute path, otherwise it calls &lt;code&gt;checkPermission&lt;/code&gt; with &lt;code&gt;FilePermission(&quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot;,&quot;execute&quot;)&lt;/code&gt;.</source>
          <target state="translated">이 방법은 호출 &lt;code&gt;checkPermission&lt;/code&gt; 으로 &lt;code&gt;FilePermission(cmd,&quot;execute&quot;)&lt;/code&gt; 그렇지 않으면 호출 (CMD)가 절대 경로이면 권한 &lt;code&gt;checkPermission&lt;/code&gt; 함께 &lt;code&gt;FilePermission(&quot;&amp;lt;&amp;lt;ALL FILES&amp;gt;&amp;gt;&quot;,&quot;execute&quot;)&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e4090e1573f03a7b969ed4eb8baecc6269248e94" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;FilePermission(file,&quot;delete&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;FilePermission(file,&quot;delete&quot;)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="5b08355483b5bd71a870e28cb3c5b9be8d105425" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;FilePermission(file,&quot;read&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;FilePermission(file,&quot;read&quot;)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="bf80d8cebcf2bce202e03e26fa56b4fb477a5349" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;FilePermission(file,&quot;write&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;FilePermission(file,&quot;write&quot;)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="cd2746d5381e5e48e2b8bdaa68b516a5e32229e4" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;PropertyPermission(&quot;*&quot;, &quot;read,write&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;PropertyPermission(&quot;*&quot;, &quot;read,write&quot;)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="9f92e0c9ec1b3265d4a078b50f0f7c17f3b27464" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;PropertyPermission(key, &quot;read&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;PropertyPermission(key, &quot;read&quot;)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="443e1d17071c8a6b440e7feff746619b08781cc6" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;createClassLoader&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;RuntimePermission(&quot;createClassLoader&quot;)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="fd341d2c15b82687c519829666f6ea5af730951d" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;exitVM.&quot;+status)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;RuntimePermission(&quot;exitVM.&quot;+status)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="bd503776cdbf3af7134033cff2c250360e0eb170" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;loadLibrary.&quot;+lib)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;RuntimePermission(&quot;loadLibrary.&quot;+lib)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="9a5f72e1a355b0bee29959fa41870127a6a77604" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;queuePrintJob&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;RuntimePermission(&quot;queuePrintJob&quot;)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="2c5a22c480aa72ad9bdd63094f6d01b22499680f" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;readFileDescriptor&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;RuntimePermission(&quot;readFileDescriptor&quot;)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="1805302599444c237841bd5b2fcf4b128fb3e5b9" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;setFactory&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;RuntimePermission(&quot;setFactory&quot;)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="2f2885e0544d4e73448a66b931e57fddd504ba67" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;RuntimePermission(&quot;writeFileDescriptor&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;RuntimePermission(&quot;writeFileDescriptor&quot;)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="6f6f908bf811b7f71042ad9e5310f118a65335bb" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;SocketPermission(&quot;localhost:&quot;+port,&quot;listen&quot;)&lt;/code&gt;.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;SocketPermission(&quot;localhost:&quot;+port,&quot;listen&quot;)&lt;/code&gt; 과 함께 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="a6588ddd0d20ef53b4230dba57c169828b93e1b8" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;SocketPermission(host+&quot;:&quot;+port,&quot;accept&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;SocketPermission(host+&quot;:&quot;+port,&quot;accept&quot;)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="5782c7b7162da363323088e4f1544e5232ea96f2" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;SocketPermission(host+&quot;:&quot;+port,&quot;connect&quot;)&lt;/code&gt; permission if the port is not equal to -1. If the port is equal to -1, then it calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;SocketPermission(host,&quot;resolve&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드 는 포트가 -1이 아닌 경우 &lt;code&gt;SocketPermission(host+&quot;:&quot;+port,&quot;connect&quot;)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 . 포트가 -1 인 경우 &lt;code&gt;SocketPermission(host,&quot;resolve&quot;)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="4fafc2d6e9c84a5d190a2a437331af72604794ee" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;checkPermission&lt;/code&gt; with the &lt;code&gt;java.net.SocketPermission(maddr.getHostAddress(),
 &quot;accept,connect&quot;)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드 는 &lt;code&gt;java.net.SocketPermission(maddr.getHostAddress(), &quot;accept,connect&quot;)&lt;/code&gt; 권한으로 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="a2e5f703172d1163aa6fd1c5af5682264111ba8e" translate="yes" xml:space="preserve">
          <source>This method calls &lt;code&gt;flush&lt;/code&gt;, writes the closing postamble and then closes the output stream associated with this stream.</source>
          <target state="translated">이 메소드는 &lt;code&gt;flush&lt;/code&gt; 를 호출 하고 닫는 포스트 앰블을 쓴 다음이 스트림과 연관된 출력 스트림을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="a4cd427e199dc0b479af836be9b3ba3b54a47bbe" translate="yes" xml:space="preserve">
          <source>This method calls into the &lt;code&gt;ComponentUI&lt;/code&gt; method of the same name. If this component does not have a &lt;code&gt;ComponentUI&lt;/code&gt; -1 will be returned. If a value &amp;gt;= 0 is returned, then the component has a valid baseline for any size &amp;gt;= the minimum size and &lt;code&gt;getBaselineResizeBehavior&lt;/code&gt; can be used to determine how the baseline changes with size.</source>
          <target state="translated">This method calls into the &lt;code&gt;ComponentUI&lt;/code&gt; method of the same name. If this component does not have a &lt;code&gt;ComponentUI&lt;/code&gt; -1 will be returned. If a value &amp;gt;= 0 is returned, then the component has a valid baseline for any size &amp;gt;= the minimum size and &lt;code&gt;getBaselineResizeBehavior&lt;/code&gt; can be used to determine how the baseline changes with size.</target>
        </trans-unit>
        <trans-unit id="4e21f6b965dc5468d92d3ed13f12dfdb2840d305" translate="yes" xml:space="preserve">
          <source>This method calls into the &lt;code&gt;ComponentUI&lt;/code&gt; method of the same name. If this component does not have a &lt;code&gt;ComponentUI&lt;/code&gt;&lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; will be returned. Subclasses should never return &lt;code&gt;null&lt;/code&gt;; if the baseline can not be calculated return &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt;. Callers should first ask for the baseline using &lt;code&gt;getBaseline&lt;/code&gt; and if a value &amp;gt;= 0 is returned use this method. It is acceptable for this method to return a value other than &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; even if &lt;code&gt;getBaseline&lt;/code&gt; returns a value less than 0.</source>
          <target state="translated">This method calls into the &lt;code&gt;ComponentUI&lt;/code&gt; method of the same name. If this component does not have a &lt;code&gt;ComponentUI&lt;/code&gt; &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; will be returned. Subclasses should never return &lt;code&gt;null&lt;/code&gt; ; if the baseline can not be calculated return &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; . Callers should first ask for the baseline using &lt;code&gt;getBaseline&lt;/code&gt; and if a value &amp;gt;= 0 is returned use this method. It is acceptable for this method to return a value other than &lt;code&gt;BaselineResizeBehavior.OTHER&lt;/code&gt; even if &lt;code&gt;getBaseline&lt;/code&gt; returns a value less than 0.</target>
        </trans-unit>
        <trans-unit id="5d82ffb4febd31a6137f409a989965d5cbb64206" translate="yes" xml:space="preserve">
          <source>This method calls on this &lt;code&gt;CachedRowSet&lt;/code&gt; object's writer to do the work behind the scenes. Standard &lt;code&gt;CachedRowSet&lt;/code&gt; implementations should use the &lt;code&gt;SyncFactory&lt;/code&gt; singleton to obtain a &lt;code&gt;SyncProvider&lt;/code&gt; instance providing a &lt;code&gt;RowSetWriter&lt;/code&gt; object (writer). The writer will attempt to propagate changes made in this &lt;code&gt;CachedRowSet&lt;/code&gt; object back to the data source.</source>
          <target state="translated">This method calls on this &lt;code&gt;CachedRowSet&lt;/code&gt; object's writer to do the work behind the scenes. Standard &lt;code&gt;CachedRowSet&lt;/code&gt; implementations should use the &lt;code&gt;SyncFactory&lt;/code&gt; singleton to obtain a &lt;code&gt;SyncProvider&lt;/code&gt; instance providing a &lt;code&gt;RowSetWriter&lt;/code&gt; object (writer). The writer will attempt to propagate changes made in this &lt;code&gt;CachedRowSet&lt;/code&gt; object back to the data source.</target>
        </trans-unit>
        <trans-unit id="056704de3f264617d5178595663f8c57cdd5f1d0" translate="yes" xml:space="preserve">
          <source>This method calls the &lt;code&gt;exit&lt;/code&gt; method in class &lt;code&gt;Runtime&lt;/code&gt;. This method never returns normally.</source>
          <target state="translated">이 메소드는 &lt;code&gt;Runtime&lt;/code&gt; 클래스 에서 &lt;code&gt;exit&lt;/code&gt; 메소드를 호출합니다 . 이 메소드는 정상적으로 리턴되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="19910e494ac70504362312992306c0f21460cb09" translate="yes" xml:space="preserve">
          <source>This method calls the full featured &lt;a href=&quot;#print(java.text.MessageFormat,java.text.MessageFormat,boolean,javax.print.PrintService,javax.print.attribute.PrintRequestAttributeSet,boolean)&quot;&gt;&lt;code&gt;print&lt;/code&gt;&lt;/a&gt; method to perform printing.</source>
          <target state="translated">This method calls the full featured &lt;a href=&quot;#print(java.text.MessageFormat,java.text.MessageFormat,boolean,javax.print.PrintService,javax.print.attribute.PrintRequestAttributeSet,boolean)&quot;&gt; &lt;code&gt;print&lt;/code&gt; &lt;/a&gt; method to perform printing.</target>
        </trans-unit>
        <trans-unit id="06b9c57a605a53610502cde7d2c38fff8d3a5277" translate="yes" xml:space="preserve">
          <source>This method calls the method &lt;a href=&quot;rmiserverimpl#close()&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on the connector server's &lt;code&gt;RMIServerImpl&lt;/code&gt; object.</source>
          <target state="translated">This method calls the method &lt;a href=&quot;rmiserverimpl#close()&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; on the connector server's &lt;code&gt;RMIServerImpl&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="0c466e2b5d2a812ecbc3c46657a8721f4dcfe360" translate="yes" xml:space="preserve">
          <source>This method calls the method &lt;a href=&quot;rmiserverimpl#close--&quot;&gt;&lt;code&gt;close&lt;/code&gt;&lt;/a&gt; on the connector server's &lt;code&gt;RMIServerImpl&lt;/code&gt; object.</source>
          <target state="translated">이 메소드 는 커넥터 서버의 &lt;code&gt;RMIServerImpl&lt;/code&gt; 오브젝트 에서 메소드 &lt;a href=&quot;rmiserverimpl#close--&quot;&gt; &lt;code&gt;close&lt;/code&gt; &lt;/a&gt; 를 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="03584ad9df1ca13639c4652a28102939262933ab" translate="yes" xml:space="preserve">
          <source>This method calls the various &lt;code&gt;getStandard*Node&lt;/code&gt; methods to supply each of the subtrees rooted at the children of the root node. If any of those methods returns &lt;code&gt;null&lt;/code&gt;, the corresponding subtree will be omitted. If all of them return &lt;code&gt;null&lt;/code&gt;, a tree consisting of a single root node will be returned.</source>
          <target state="translated">이 메소드는 다양한 &lt;code&gt;getStandard*Node&lt;/code&gt; 메소드를 호출 하여 루트 노드의 하위에있는 각 서브 트리를 제공합니다. 이러한 메소드 중 하나가 &lt;code&gt;null&lt;/code&gt; 을 리턴 하면 해당 서브 트리가 생략됩니다. 모두 &lt;code&gt;null&lt;/code&gt; 을 반환 하면 단일 루트 노드로 구성된 트리가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="aede171c15ea87027366232d73799a4b5b5d8569" translate="yes" xml:space="preserve">
          <source>This method can also be overridden in a subclass. It is recommended to use the &lt;a href=&quot;formatter#formatMessage(java.util.logging.LogRecord)&quot;&gt;&lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt;&lt;/a&gt; convenience method to localize and format the message field.</source>
          <target state="translated">This method can also be overridden in a subclass. It is recommended to use the &lt;a href=&quot;formatter#formatMessage(java.util.logging.LogRecord)&quot;&gt; &lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt; &lt;/a&gt; convenience method to localize and format the message field.</target>
        </trans-unit>
        <trans-unit id="ce3397a67d6e7430b7581b0bc7e5b19cf215832d" translate="yes" xml:space="preserve">
          <source>This method can also be overridden in a subclass. It is recommended to use the &lt;a href=&quot;formatter#formatMessage-java.util.logging.LogRecord-&quot;&gt;&lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt;&lt;/a&gt; convenience method to localize and format the message field.</source>
          <target state="translated">이 메소드는 서브 클래스에서 재정의 될 수도 있습니다. 메시지 필드를 현지화하고 &lt;a href=&quot;formatter#formatMessage-java.util.logging.LogRecord-&quot;&gt; &lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt; &lt;/a&gt; 하려면 Formatter.formatMessage (java.util.logging.LogRecord) 편의 메소드 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="c8df6391fe0e1a45f47456bdd69e24919b1e9aa0" translate="yes" xml:space="preserve">
          <source>This method can also be used with documents that have no DOCTYPE declaration. When the root element is encountered, but no DOCTYPE declaration has been seen, this method is invoked. If it returns a value for the external subset, that root element is declared to be the root element, giving the effect of splicing a DOCTYPE declaration at the end the prolog of a document that could not otherwise be valid. The sequence of parser callbacks in that case logically resembles this:</source>
          <target state="translated">This method can also be used with documents that have no DOCTYPE declaration. When the root element is encountered, but no DOCTYPE declaration has been seen, this method is invoked. If it returns a value for the external subset, that root element is declared to be the root element, giving the effect of splicing a DOCTYPE declaration at the end the prolog of a document that could not otherwise be valid. The sequence of parser callbacks in that case logically resembles this:</target>
        </trans-unit>
        <trans-unit id="863587eeeb9765c5166cdb0d93c028707abd1d5e" translate="yes" xml:space="preserve">
          <source>This method can be called at most once. It is generally called from within the constructor, or immediately after creating the throwable. If this throwable was created with &lt;a href=&quot;#%3Cinit%3E(java.lang.Throwable)&quot;&gt;&lt;code&gt;Throwable(Throwable)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.Throwable)&quot;&gt;&lt;code&gt;Throwable(String,Throwable)&lt;/code&gt;&lt;/a&gt;, this method cannot be called even once.</source>
          <target state="translated">This method can be called at most once. It is generally called from within the constructor, or immediately after creating the throwable. If this throwable was created with &lt;a href=&quot;#%3Cinit%3E(java.lang.Throwable)&quot;&gt; &lt;code&gt;Throwable(Throwable)&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.Throwable)&quot;&gt; &lt;code&gt;Throwable(String,Throwable)&lt;/code&gt; &lt;/a&gt;, this method cannot be called even once.</target>
        </trans-unit>
        <trans-unit id="352b3b2ea94b58a5dcdb0f786a7107bbc301dd2c" translate="yes" xml:space="preserve">
          <source>This method can be called at most once. It is generally called from within the constructor, or immediately after creating the throwable. If this throwable was created with &lt;a href=&quot;#%3Cinit%3E(java.lang.Throwable)&quot;&gt;&lt;code&gt;TransformerException(Throwable)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.Throwable)&quot;&gt;&lt;code&gt;TransformerException(String,Throwable)&lt;/code&gt;&lt;/a&gt;, this method cannot be called even once.</source>
          <target state="translated">This method can be called at most once. It is generally called from within the constructor, or immediately after creating the throwable. If this throwable was created with &lt;a href=&quot;#%3Cinit%3E(java.lang.Throwable)&quot;&gt; &lt;code&gt;TransformerException(Throwable)&lt;/code&gt; &lt;/a&gt; or &lt;a href=&quot;#%3Cinit%3E(java.lang.String,java.lang.Throwable)&quot;&gt; &lt;code&gt;TransformerException(String,Throwable)&lt;/code&gt; &lt;/a&gt;, this method cannot be called even once.</target>
        </trans-unit>
        <trans-unit id="106b60f2b5148ce2dfd6561051705bbc560592e1" translate="yes" xml:space="preserve">
          <source>This method can be called at most once. It is generally called from within the constructor, or immediately after creating the throwable. If this throwable was created with &lt;a href=&quot;../../../../java.base/java/lang/throwable#%3Cinit%3E(java.lang.Throwable)&quot;&gt;&lt;code&gt;Throwable(Throwable)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../../java.base/java/lang/throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable)&quot;&gt;&lt;code&gt;Throwable(String,Throwable)&lt;/code&gt;&lt;/a&gt;, this method cannot be called even once.</source>
          <target state="translated">이 메서드는 최대 한 번 호출 할 수 있습니다. 일반적으로 생성자 내에서 또는 throwable을 만든 직후에 호출됩니다. &lt;a href=&quot;../../../../java.base/java/lang/throwable#%3Cinit%3E(java.lang.Throwable)&quot;&gt; &lt;code&gt;Throwable(Throwable)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../../../java.base/java/lang/throwable#%3Cinit%3E(java.lang.String,java.lang.Throwable)&quot;&gt; &lt;code&gt;Throwable(String,Throwable)&lt;/code&gt; &lt;/a&gt; 로이 throwable이 생성 된 경우이 메서드는 한 번도 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="0d3a331e5b72dbd387cdfa97e259d07f1ffd3519" translate="yes" xml:space="preserve">
          <source>This method can be called at most once. It is generally called from within the constructor, or immediately after creating the throwable. If this throwable was created with &lt;a href=&quot;../../../java/lang/throwable#Throwable-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable.Throwable(Throwable)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;../../../java/lang/throwable#Throwable-java.lang.String-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable.Throwable(String,Throwable)&lt;/code&gt;&lt;/a&gt;, this method cannot be called even once.</source>
          <target state="translated">이 메소드는 최대 한 번 호출 할 수 있습니다. 일반적으로 생성자 내에서 또는 Throwable을 만든 직후에 호출됩니다. 이 Throwable이 &lt;a href=&quot;../../../java/lang/throwable#Throwable-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable.Throwable(Throwable)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;../../../java/lang/throwable#Throwable-java.lang.String-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable.Throwable(String,Throwable)&lt;/code&gt; &lt;/a&gt; 로 작성된 경우이 메소드는 한 번도 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="9eceeaff05ffa1d9d5a81b7c43ae8cfaa35608b7" translate="yes" xml:space="preserve">
          <source>This method can be called at most once. It is generally called from within the constructor, or immediately after creating the throwable. If this throwable was created with &lt;a href=&quot;throwable#Throwable-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable(Throwable)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-&quot;&gt;&lt;code&gt;Throwable(String,Throwable)&lt;/code&gt;&lt;/a&gt;, this method cannot be called even once.</source>
          <target state="translated">이 메소드는 최대 한 번 호출 할 수 있습니다. 일반적으로 생성자 내에서 또는 Throwable을 만든 직후에 호출됩니다. 이 Throwable이 &lt;a href=&quot;throwable#Throwable-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable(Throwable)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;throwable#Throwable-java.lang.String-java.lang.Throwable-&quot;&gt; &lt;code&gt;Throwable(String,Throwable)&lt;/code&gt; &lt;/a&gt; 로 작성된 경우이 메소드를 한 번도 호출 할 수 없습니다.</target>
        </trans-unit>
        <trans-unit id="451e8ea893a5b1c5ac03287943f0ded8f29954a5" translate="yes" xml:space="preserve">
          <source>This method can be called by any thread including the event dispatch thread. This thread will be blocked until the &lt;a href=&quot;#exit()&quot;&gt;&lt;code&gt;exit()&lt;/code&gt;&lt;/a&gt; method is called or the loop is terminated. A new secondary loop will be created on the event dispatch thread for dispatching events in either case.</source>
          <target state="translated">This method can be called by any thread including the event dispatch thread. This thread will be blocked until the &lt;a href=&quot;#exit()&quot;&gt; &lt;code&gt;exit()&lt;/code&gt; &lt;/a&gt; method is called or the loop is terminated. A new secondary loop will be created on the event dispatch thread for dispatching events in either case.</target>
        </trans-unit>
        <trans-unit id="60b50eff7937b117f5a61dbded0f8ffb05cfc95d" translate="yes" xml:space="preserve">
          <source>This method can be called by multiple threads concurrently. Each invocation of this method enables or disables the verbose output globally.</source>
          <target state="translated">이 메소드는 여러 스레드에서 동시에 호출 할 수 있습니다. 이 메소드를 호출 할 때마다 상세 출력을 전체적으로 사용 가능 또는 사용 불가능하게합니다.</target>
        </trans-unit>
        <trans-unit id="39e06517b3541bd17d5119122ded9843cb3329ea" translate="yes" xml:space="preserve">
          <source>This method can be called even during a middle of a validation.</source>
          <target state="translated">This method can be called even during a middle of a validation.</target>
        </trans-unit>
        <trans-unit id="299c4e6667b32b99868f975c8bd6dd86e470f87b" translate="yes" xml:space="preserve">
          <source>This method can be called even if the &lt;code&gt;Sequencer&lt;/code&gt; is closed.</source>
          <target state="translated">&lt;code&gt;Sequencer&lt;/code&gt; 가 닫혀 있어도이 메소드를 호출 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="04935a12b0a22b12bf855a5e71e19bb9c50c2083" translate="yes" xml:space="preserve">
          <source>This method can be called more than once with different &lt;a href=&quot;../mbeanserverforwarder&quot;&gt;&lt;code&gt;MBeanServerForwarder&lt;/code&gt;&lt;/a&gt; objects. The result is a chain of forwarders. The last forwarder added is the first in the chain. In more detail:</source>
          <target state="translated">이 메소드는 다른 &lt;a href=&quot;../mbeanserverforwarder&quot;&gt; &lt;code&gt;MBeanServerForwarder&lt;/code&gt; &lt;/a&gt; 오브젝트로 두 번 이상 호출 될 수 있습니다 . 결과는 전달자 체인입니다. 추가 된 마지막 전달자는 체인에서 첫 번째 전달자입니다. 더 자세하게:</target>
        </trans-unit>
        <trans-unit id="4098755630331cc7cc4951a664fbc922c3cd70b1" translate="yes" xml:space="preserve">
          <source>This method can be called more than once with different &lt;a href=&quot;mbeanserverforwarder&quot;&gt;&lt;code&gt;MBeanServerForwarder&lt;/code&gt;&lt;/a&gt; objects. The result is a chain of forwarders. The last forwarder added is the first in the chain. In more detail:</source>
          <target state="translated">이 메소드는 다른 &lt;a href=&quot;mbeanserverforwarder&quot;&gt; &lt;code&gt;MBeanServerForwarder&lt;/code&gt; &lt;/a&gt; 오브젝트로 두 번 이상 호출 될 수 있습니다 . 결과는 전달자 체인입니다. 추가 된 마지막 전달자는 체인에서 첫 번째 전달자입니다. 더 자세하게:</target>
        </trans-unit>
        <trans-unit id="3cefca4869a02afd855fa38bb24a17d15f64911b" translate="yes" xml:space="preserve">
          <source>This method can be called while servicing the getTabbedSpan or getPreferredSize. It has to arrange for its own text buffer to make the measurements.</source>
          <target state="translated">This method can be called while servicing the getTabbedSpan or getPreferredSize. It has to arrange for its own text buffer to make the measurements.</target>
        </trans-unit>
        <trans-unit id="152704c734848030c731049bd66073a9f3304ac8" translate="yes" xml:space="preserve">
          <source>This method can be invoked more than once, such as to set a limit for an area of JDBC code, and to reset to the default on exit from this area. Invocation of this method has no impact on already outstanding requests.</source>
          <target state="translated">This method can be invoked more than once, such as to set a limit for an area of JDBC code, and to reset to the default on exit from this area. Invocation of this method has no impact on already outstanding requests.</target>
        </trans-unit>
        <trans-unit id="a41b91d7e4f07f0f6f9df115255c343bbf1f9c4a" translate="yes" xml:space="preserve">
          <source>This method can be overridden if the policy implementation supports returning a set of permissions granted to a ProtectionDomain.</source>
          <target state="translated">정책 구현이 ProtectionDomain에 부여 된 일련의 권한 반환을 지원하는 경우이 방법을 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="0d3f1e249d40ca9606279e6b3d83f971baf37161" translate="yes" xml:space="preserve">
          <source>This method can be overridden in a subclass. It is recommended to use the &lt;a href=&quot;formatter#formatMessage(java.util.logging.LogRecord)&quot;&gt;&lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt;&lt;/a&gt; convenience method to localize and format the message field.</source>
          <target state="translated">This method can be overridden in a subclass. It is recommended to use the &lt;a href=&quot;formatter#formatMessage(java.util.logging.LogRecord)&quot;&gt; &lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt; &lt;/a&gt; convenience method to localize and format the message field.</target>
        </trans-unit>
        <trans-unit id="ac5849453ee153448b53e320bc46f0e17e938bb7" translate="yes" xml:space="preserve">
          <source>This method can be overridden in a subclass. It is recommended to use the &lt;a href=&quot;formatter#formatMessage-java.util.logging.LogRecord-&quot;&gt;&lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt;&lt;/a&gt; convenience method to localize and format the message field.</source>
          <target state="translated">이 메소드는 서브 클래스에서 재정의 될 수 있습니다. 메시지 필드를 현지화하고 &lt;a href=&quot;formatter#formatMessage-java.util.logging.LogRecord-&quot;&gt; &lt;code&gt;Formatter.formatMessage(java.util.logging.LogRecord)&lt;/code&gt; &lt;/a&gt; 하려면 Formatter.formatMessage (java.util.logging.LogRecord) 편의 메소드 를 사용하는 것이 좋습니다 .</target>
        </trans-unit>
        <trans-unit id="711318b8052541a5e77ca790049f7305df0bef3f" translate="yes" xml:space="preserve">
          <source>This method can be reimplemented to use some other kind of type registry. This can be reimplemented to use the Java Activation Framework, for example.</source>
          <target state="translated">This method can be reimplemented to use some other kind of type registry. This can be reimplemented to use the Java Activation Framework, for example.</target>
        </trans-unit>
        <trans-unit id="1852617286275c45d6e39c38e26249e33a824e0c" translate="yes" xml:space="preserve">
          <source>This method can be used as an adapter between &lt;code&gt;
 BodyPublisher&lt;/code&gt; and &lt;code&gt;Flow.Publisher&lt;/code&gt;, where the amount of request body that the publisher will publish is known.</source>
          <target state="translated">This method can be used as an adapter between &lt;code&gt; BodyPublisher&lt;/code&gt; and &lt;code&gt;Flow.Publisher&lt;/code&gt; , where the amount of request body that the publisher will publish is known.</target>
        </trans-unit>
        <trans-unit id="75b3b5419fa7dadd4d6c5ccef635f96d787acf74" translate="yes" xml:space="preserve">
          <source>This method can be used as an adapter between &lt;code&gt;
 BodyPublisher&lt;/code&gt; and &lt;code&gt;Flow.Publisher&lt;/code&gt;, where the amount of request body that the publisher will publish is unknown.</source>
          <target state="translated">This method can be used as an adapter between &lt;code&gt; BodyPublisher&lt;/code&gt; and &lt;code&gt;Flow.Publisher&lt;/code&gt; , where the amount of request body that the publisher will publish is unknown.</target>
        </trans-unit>
        <trans-unit id="f22c8c5e786fe4e6f9c7ce23468c2bfa1e7bcf6b" translate="yes" xml:space="preserve">
          <source>This method can be used as an adapter between &lt;code&gt;
 BodySubscriber&lt;/code&gt; and &lt;code&gt;Flow.Subscriber&lt;/code&gt;.</source>
          <target state="translated">This method can be used as an adapter between &lt;code&gt; BodySubscriber&lt;/code&gt; and &lt;code&gt;Flow.Subscriber&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="55b865bcd8b2368a90962271fa6c0e6bd17372b4" translate="yes" xml:space="preserve">
          <source>This method can be used as an adapter between a &lt;code&gt;
 BodySubscriber&lt;/code&gt; and a text based &lt;code&gt;Flow.Subscriber&lt;/code&gt; that parses text line by line.</source>
          <target state="translated">This method can be used as an adapter between a &lt;code&gt; BodySubscriber&lt;/code&gt; and a text based &lt;code&gt;Flow.Subscriber&lt;/code&gt; that parses text line by line.</target>
        </trans-unit>
        <trans-unit id="8463a54210c00c023047945ec36b5c80e8f95890" translate="yes" xml:space="preserve">
          <source>This method can be used as an alternative to the &lt;code&gt;execute&lt;/code&gt; method when an application has a connection to an open &lt;code&gt;ResultSet&lt;/code&gt; object. Using the method &lt;code&gt;populate&lt;/code&gt; can be more efficient than using the version of the &lt;code&gt;execute&lt;/code&gt; method that takes no parameters because it does not open a new connection and re-execute this &lt;code&gt;CachedRowSet&lt;/code&gt; object's command. Using the &lt;code&gt;populate&lt;/code&gt; method is more a matter of convenience when compared to using the version of &lt;code&gt;execute&lt;/code&gt; that takes a &lt;code&gt;ResultSet&lt;/code&gt; object.</source>
          <target state="translated">This method can be used as an alternative to the &lt;code&gt;execute&lt;/code&gt; method when an application has a connection to an open &lt;code&gt;ResultSet&lt;/code&gt; object. Using the method &lt;code&gt;populate&lt;/code&gt; can be more efficient than using the version of the &lt;code&gt;execute&lt;/code&gt; method that takes no parameters because it does not open a new connection and re-execute this &lt;code&gt;CachedRowSet&lt;/code&gt; object's command. Using the &lt;code&gt;populate&lt;/code&gt; method is more a matter of convenience when compared to using the version of &lt;code&gt;execute&lt;/code&gt; that takes a &lt;code&gt;ResultSet&lt;/code&gt; object.</target>
        </trans-unit>
        <trans-unit id="28bf6b4f8f117dd9ab0d5110d4b86315aa73bdee" translate="yes" xml:space="preserve">
          <source>This method can be used as part of a chain to produce a date:</source>
          <target state="translated">이 방법은 날짜를 생성하기 위해 체인의 일부로 사용될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="db24ab0dd8e2925069a021f43db80a3535884cf5" translate="yes" xml:space="preserve">
          <source>This method can be used by a server application that needs to observe the inbound data but still create valid SSL/TLS connections: for example, inspection of Server Name Indication (SNI) extensions (See section 3 of &lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;TLS Extensions (RFC6066)&lt;/a&gt;). Data that has been already removed from the underlying &lt;a href=&quot;../../../java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; should be loaded into the &lt;code&gt;consumed&lt;/code&gt; stream before this method is called, perhaps using a &lt;a href=&quot;../../../java/io/bytearrayinputstream&quot;&gt;&lt;code&gt;ByteArrayInputStream&lt;/code&gt;&lt;/a&gt;. When this &lt;a href=&quot;../../../java/net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; begins handshaking, it will read all of the data in &lt;code&gt;consumed&lt;/code&gt; until it reaches &lt;code&gt;EOF&lt;/code&gt;, then all further data is read from the underlying &lt;a href=&quot;../../../java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; as usual.</source>
          <target state="translated">이 방법은 인바운드 데이터를 관찰해야하지만 여전히 유효한 SSL / TLS 연결을 작성해야하는 서버 애플리케이션에서 사용할 수 있습니다 (예 : SNI (Server Name Indication) 확장 검사 &lt;a href=&quot;http://www.ietf.org/rfc/rfc6066.txt&quot;&gt;(RFC6066)&lt;/a&gt; 섹션 3 참조 ). 기본 &lt;a href=&quot;../../../java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt; 에서 이미 제거 된 데이터는 이 메소드를 호출하기 전에 &lt;a href=&quot;../../../java/io/bytearrayinputstream&quot;&gt; &lt;code&gt;ByteArrayInputStream&lt;/code&gt; 을&lt;/a&gt; 사용하여 &lt;code&gt;consumed&lt;/code&gt; 스트림 으로로드해야합니다 . 이 &lt;a href=&quot;../../../java/net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt; 이 핸드 쉐이킹을 시작 하면 &lt;code&gt;EOF&lt;/code&gt; 에 도달 할 때까지 &lt;code&gt;consumed&lt;/code&gt; 모든 데이터를 읽은 다음 평소대로 기본 &lt;a href=&quot;../../../java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt; 에서 모든 추가 데이터를 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="993cd75a919a27d0b797eff972efac7d10d7004d" translate="yes" xml:space="preserve">
          <source>This method can be used by a server application that needs to observe the inbound data but still create valid SSL/TLS connections: for example, inspection of Server Name Indication (SNI) extensions (See section 3 of &lt;a href=&quot;https://www.ietf.org/rfc/rfc6066.txt&quot;&gt;TLS Extensions (RFC6066)&lt;/a&gt;). Data that has been already removed from the underlying &lt;a href=&quot;../../../java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; should be loaded into the &lt;code&gt;consumed&lt;/code&gt; stream before this method is called, perhaps using a &lt;a href=&quot;../../../java/io/bytearrayinputstream&quot;&gt;&lt;code&gt;ByteArrayInputStream&lt;/code&gt;&lt;/a&gt;. When this &lt;a href=&quot;../../../java/net/socket&quot;&gt;&lt;code&gt;Socket&lt;/code&gt;&lt;/a&gt; begins handshaking, it will read all of the data in &lt;code&gt;consumed&lt;/code&gt; until it reaches &lt;code&gt;EOF&lt;/code&gt;, then all further data is read from the underlying &lt;a href=&quot;../../../java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt; as usual.</source>
          <target state="translated">이 방법은 인바운드 데이터를 관찰해야하지만 유효한 SSL / TLS 연결을 생성해야하는 서버 애플리케이션에서 사용할 수 있습니다 (예 : SNI (Server Name Indication) 확장 검사 ( &lt;a href=&quot;https://www.ietf.org/rfc/rfc6066.txt&quot;&gt;TLS 확장 (RFC6066)&lt;/a&gt; 섹션 3 참조 ) ). 기본 &lt;a href=&quot;../../../java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt; 에서 이미 제거 된 데이터 는 &lt;a href=&quot;../../../java/io/bytearrayinputstream&quot;&gt; &lt;code&gt;ByteArrayInputStream&lt;/code&gt; 을&lt;/a&gt; 사용하여이 메서드가 호출되기 전에 &lt;code&gt;consumed&lt;/code&gt; 스트림 으로로드되어야합니다 . 이 &lt;a href=&quot;../../../java/net/socket&quot;&gt; &lt;code&gt;Socket&lt;/code&gt; &lt;/a&gt; 이 핸드 쉐이킹을 시작 하면 &lt;code&gt;EOF&lt;/code&gt; 에 도달 할 때까지 &lt;code&gt;consumed&lt;/code&gt; 모든 데이터를 읽은 다음 평소와 같이 기본 &lt;a href=&quot;../../../java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; &lt;/a&gt; 에서 모든 추가 데이터를 읽습니다 .</target>
        </trans-unit>
        <trans-unit id="213b3625cf6d5ba07208869fbd5adce1b71d45df" translate="yes" xml:space="preserve">
          <source>This method can be used by a server to verify the acceptable &lt;code&gt;SNIHostName&lt;/code&gt;s. For example,</source>
          <target state="translated">이 메소드는 서버가 허용 가능한 &lt;code&gt;SNIHostName&lt;/code&gt; 을 확인하는 데 사용할 수 있습니다 . 예를 들어</target>
        </trans-unit>
        <trans-unit id="431f2a04c941e9bafd2a6c3390c2e62b0b6f13eb" translate="yes" xml:space="preserve">
          <source>This method can be used for cases where a &lt;em&gt;consumer module&lt;/em&gt; uses a qualified opens to open a package to an &lt;em&gt;API module&lt;/em&gt; but where the reflective access to the members of classes in the consumer module is delegated to code in another module. Code in the API module can use this method to open the package in the consumer module to the other module.</source>
          <target state="translated">This method can be used for cases where a &lt;em&gt;consumer module&lt;/em&gt; uses a qualified opens to open a package to an &lt;em&gt;API module&lt;/em&gt; but where the reflective access to the members of classes in the consumer module is delegated to code in another module. Code in the API module can use this method to open the package in the consumer module to the other module.</target>
        </trans-unit>
        <trans-unit id="c00bdda37d48238fd8c0728f49001c92de5221d8" translate="yes" xml:space="preserve">
          <source>This method can be used in conjunction with the &lt;a href=&quot;#getHeaderFieldKey(int)&quot;&gt;&lt;code&gt;getHeaderFieldKey&lt;/code&gt;&lt;/a&gt; method to iterate through all the headers in the message.</source>
          <target state="translated">This method can be used in conjunction with the &lt;a href=&quot;#getHeaderFieldKey(int)&quot;&gt; &lt;code&gt;getHeaderFieldKey&lt;/code&gt; &lt;/a&gt; method to iterate through all the headers in the message.</target>
        </trans-unit>
        <trans-unit id="928c1d271faddcde95dcea8e56f6185dffe614f5" translate="yes" xml:space="preserve">
          <source>This method can be used in conjunction with the &lt;a href=&quot;httpurlconnection#getHeaderFieldKey-int-&quot;&gt;&lt;code&gt;getHeaderFieldKey&lt;/code&gt;&lt;/a&gt; method to iterate through all the headers in the message.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;httpurlconnection#getHeaderFieldKey-int-&quot;&gt; &lt;code&gt;getHeaderFieldKey&lt;/code&gt; &lt;/a&gt; 메소드 와 함께 사용되어 메시지의 모든 헤더를 반복 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f703d7479b308d8360a4a0178f9318bbca19adae" translate="yes" xml:space="preserve">
          <source>This method can be used in conjunction with the &lt;a href=&quot;urlconnection#getHeaderFieldKey-int-&quot;&gt;&lt;code&gt;getHeaderFieldKey&lt;/code&gt;&lt;/a&gt; method to iterate through all the headers in the message.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;urlconnection#getHeaderFieldKey-int-&quot;&gt; &lt;code&gt;getHeaderFieldKey&lt;/code&gt; &lt;/a&gt; 메소드 와 함께 사용되어 메시지의 모든 헤더를 반복 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="c49ca84b0514b7b765442bb0401fc1d867d8b5e3" translate="yes" xml:space="preserve">
          <source>This method can be used in the &lt;code&gt;mouseDragged&lt;/code&gt; method of a UI class to extend a selection.</source>
          <target state="translated">This method can be used in the &lt;code&gt;mouseDragged&lt;/code&gt; method of a UI class to extend a selection.</target>
        </trans-unit>
        <trans-unit id="02868c0c24d21acc9b85ee5a1068a3af1e28e5e1" translate="yes" xml:space="preserve">
          <source>This method can be used instead of &lt;a href=&quot;#setIconImages(java.util.List)&quot;&gt;&lt;code&gt;setIconImages()&lt;/code&gt;&lt;/a&gt; to specify a single image as a window's icon.</source>
          <target state="translated">This method can be used instead of &lt;a href=&quot;#setIconImages(java.util.List)&quot;&gt; &lt;code&gt;setIconImages()&lt;/code&gt; &lt;/a&gt; to specify a single image as a window's icon.</target>
        </trans-unit>
        <trans-unit id="4a85a2ca166ead5a15deaefb8c30ab84046ef4e7" translate="yes" xml:space="preserve">
          <source>This method can be used on fields annotated with &lt;code&gt;@Timespan&lt;/code&gt;, and of the following types: &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, and &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;@Timespan&lt;/code&gt; 주석이 달린 필드와 &lt;code&gt;long&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;char&lt;/code&gt; 및 &lt;code&gt;byte&lt;/code&gt; 유형의 필드에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="470265f986adaaa57a2c7396c7ab7136cc99a83d" translate="yes" xml:space="preserve">
          <source>This method can be used on fields annotated with &lt;code&gt;@Timestamp&lt;/code&gt;, and of the following types: &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt; and &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;@Timestamp&lt;/code&gt; 주석이 달린 필드와 &lt;code&gt;long&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;char&lt;/code&gt; 및 &lt;code&gt;byte&lt;/code&gt; 유형의 필드에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="e84062c4b7e877cfac58cf8068091f20cfd3f79a" translate="yes" xml:space="preserve">
          <source>This method can be used on fields of the following types: &lt;code&gt;double&lt;/code&gt;, &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, and &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;double&lt;/code&gt; , &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;long&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;char&lt;/code&gt; 및 &lt;code&gt;byte&lt;/code&gt; 유형의 필드에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="80bf2ecdebcbfa6984eb44425640e9057fed5e02" translate="yes" xml:space="preserve">
          <source>This method can be used on fields of the following types: &lt;code&gt;float&lt;/code&gt;, &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, and &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;float&lt;/code&gt; , &lt;code&gt;long&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;char&lt;/code&gt; 및 &lt;code&gt;byte&lt;/code&gt; 유형의 필드에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="6e0e0806849c24edb3012d13fc6914a570addf94" translate="yes" xml:space="preserve">
          <source>This method can be used on fields of the following types: &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, and &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;char&lt;/code&gt; 및 &lt;code&gt;byte&lt;/code&gt; 유형의 필드에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="57ee520717af51f3b1155fe278457ee162ad2156" translate="yes" xml:space="preserve">
          <source>This method can be used on fields of the following types: &lt;code&gt;long&lt;/code&gt;, &lt;code&gt;int&lt;/code&gt;, &lt;code&gt;short&lt;/code&gt;, &lt;code&gt;char&lt;/code&gt;, and &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;long&lt;/code&gt; , &lt;code&gt;int&lt;/code&gt; , &lt;code&gt;short&lt;/code&gt; , &lt;code&gt;char&lt;/code&gt; 및 &lt;code&gt;byte&lt;/code&gt; 유형의 필드에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="7f0037458dcf0e9601907d651ae6234308fd083b" translate="yes" xml:space="preserve">
          <source>This method can be used on the following types: &lt;code&gt;short&lt;/code&gt; and &lt;code&gt;byte&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;short&lt;/code&gt; 및 &lt;code&gt;byte&lt;/code&gt; 유형에서 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="1e38dd709c7fd1e6574c35d57d28c8173d7ce0bb" translate="yes" xml:space="preserve">
          <source>This method can be used to lookup CRL entries in indirect CRLs, that means CRLs that contain entries from issuers other than the CRL issuer. The default implementation will only return entries for certificates issued by the CRL issuer. Subclasses that wish to support indirect CRLs should override this method.</source>
          <target state="translated">이 방법은 간접 CRL에서 CRL 항목을 조회하는 데 사용할 수 있습니다. 즉, CRL 발급자 이외의 발급자의 항목이 포함 된 CRL을 의미합니다. 기본 구현은 CRL 발급자가 발급 한 인증서에 대한 항목 만 반환합니다. 간접 CRL을 지원하려는 서브 클래스는이 메소드를 대체해야합니다.</target>
        </trans-unit>
        <trans-unit id="24a6fbecd6b7a97e5ee6d2d32f7469da543abf6c" translate="yes" xml:space="preserve">
          <source>This method can be used to transform a &lt;code&gt;Stream&lt;/code&gt; of optional doubles to a &lt;code&gt;DoubleStream&lt;/code&gt; of present doubles:</source>
          <target state="translated">This method can be used to transform a &lt;code&gt;Stream&lt;/code&gt; of optional doubles to a &lt;code&gt;DoubleStream&lt;/code&gt; of present doubles:</target>
        </trans-unit>
        <trans-unit id="f87a58c2ee09f237fa1a33f2797a4c5ff3a10987" translate="yes" xml:space="preserve">
          <source>This method can be used to transform a &lt;code&gt;Stream&lt;/code&gt; of optional elements to a &lt;code&gt;Stream&lt;/code&gt; of present value elements:</source>
          <target state="translated">This method can be used to transform a &lt;code&gt;Stream&lt;/code&gt; of optional elements to a &lt;code&gt;Stream&lt;/code&gt; of present value elements:</target>
        </trans-unit>
        <trans-unit id="3f850aad2294519b89350ed09111e9102e926bf5" translate="yes" xml:space="preserve">
          <source>This method can be used to transform a &lt;code&gt;Stream&lt;/code&gt; of optional integers to an &lt;code&gt;IntStream&lt;/code&gt; of present integers:</source>
          <target state="translated">This method can be used to transform a &lt;code&gt;Stream&lt;/code&gt; of optional integers to an &lt;code&gt;IntStream&lt;/code&gt; of present integers:</target>
        </trans-unit>
        <trans-unit id="c3f80e68ac33e9e9b656166704fc52757555cac1" translate="yes" xml:space="preserve">
          <source>This method can be used to transform a &lt;code&gt;Stream&lt;/code&gt; of optional longs to an &lt;code&gt;LongStream&lt;/code&gt; of present longs:</source>
          <target state="translated">This method can be used to transform a &lt;code&gt;Stream&lt;/code&gt; of optional longs to an &lt;code&gt;LongStream&lt;/code&gt; of present longs:</target>
        </trans-unit>
        <trans-unit id="ab4d3b36814ecc5f9e6f1f1582133b3012251b42" translate="yes" xml:space="preserve">
          <source>This method can only be called while the dialog is not displayable. To make this dialog decorated, it must be opaque and have the default shape, otherwise the &lt;code&gt;IllegalComponentStateException&lt;/code&gt; will be thrown. Refer to &lt;a href=&quot;window#setShape(java.awt.Shape)&quot;&gt;&lt;code&gt;Window.setShape(java.awt.Shape)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;window#setOpacity(float)&quot;&gt;&lt;code&gt;Window.setOpacity(float)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;window#setBackground(java.awt.Color)&quot;&gt;&lt;code&gt;Window.setBackground(java.awt.Color)&lt;/code&gt;&lt;/a&gt; for details</source>
          <target state="translated">This method can only be called while the dialog is not displayable. To make this dialog decorated, it must be opaque and have the default shape, otherwise the &lt;code&gt;IllegalComponentStateException&lt;/code&gt; will be thrown. Refer to &lt;a href=&quot;window#setShape(java.awt.Shape)&quot;&gt; &lt;code&gt;Window.setShape(java.awt.Shape)&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;window#setOpacity(float)&quot;&gt; &lt;code&gt;Window.setOpacity(float)&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;window#setBackground(java.awt.Color)&quot;&gt; &lt;code&gt;Window.setBackground(java.awt.Color)&lt;/code&gt; &lt;/a&gt; for details</target>
        </trans-unit>
        <trans-unit id="59920c8c0965026ce9677374b818551b65b70db1" translate="yes" xml:space="preserve">
          <source>This method can only be called while the frame is not displayable. To make this frame decorated, it must be opaque and have the default shape, otherwise the &lt;code&gt;IllegalComponentStateException&lt;/code&gt; will be thrown. Refer to &lt;a href=&quot;window#setShape(java.awt.Shape)&quot;&gt;&lt;code&gt;Window.setShape(java.awt.Shape)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;window#setOpacity(float)&quot;&gt;&lt;code&gt;Window.setOpacity(float)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;window#setBackground(java.awt.Color)&quot;&gt;&lt;code&gt;Window.setBackground(java.awt.Color)&lt;/code&gt;&lt;/a&gt; for details</source>
          <target state="translated">This method can only be called while the frame is not displayable. To make this frame decorated, it must be opaque and have the default shape, otherwise the &lt;code&gt;IllegalComponentStateException&lt;/code&gt; will be thrown. Refer to &lt;a href=&quot;window#setShape(java.awt.Shape)&quot;&gt; &lt;code&gt;Window.setShape(java.awt.Shape)&lt;/code&gt; &lt;/a&gt;, &lt;a href=&quot;window#setOpacity(float)&quot;&gt; &lt;code&gt;Window.setOpacity(float)&lt;/code&gt; &lt;/a&gt; and &lt;a href=&quot;window#setBackground(java.awt.Color)&quot;&gt; &lt;code&gt;Window.setBackground(java.awt.Color)&lt;/code&gt; &lt;/a&gt; for details</target>
        </trans-unit>
        <trans-unit id="515dbc83a9d17200131e255617345851e1d91d97" translate="yes" xml:space="preserve">
          <source>This method can only be used to measure elapsed time and is not related to any other notion of system or wall-clock time. The value returned represents nanoseconds since some fixed but arbitrary</source>
          <target state="translated">이 방법은 경과 시간을 측정하는 데만 사용할 수 있으며 다른 시스템 또는 벽시계 시간 개념과 관련이 없습니다. 반환 값은 고정되었지만 임의이므로 임의의 나노초를 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="1a51b53255dcd675cbaf2af24d47355a4b2c81d0" translate="yes" xml:space="preserve">
          <source>This method can only start one new event loop at a time per object. If a secondary event loop has already been started by this object and is currently still running, this method returns &lt;code&gt;false&lt;/code&gt; to indicate that it was not successful in starting a new event loop. Otherwise, this method blocks the calling thread and later returns &lt;code&gt;true&lt;/code&gt; when the new event loop is terminated. At such time, this object can again be used to start another new event loop.</source>
          <target state="translated">This method can only start one new event loop at a time per object. If a secondary event loop has already been started by this object and is currently still running, this method returns &lt;code&gt;false&lt;/code&gt; to indicate that it was not successful in starting a new event loop. Otherwise, this method blocks the calling thread and later returns &lt;code&gt;true&lt;/code&gt; when the new event loop is terminated. At such time, this object can again be used to start another new event loop.</target>
        </trans-unit>
        <trans-unit id="e10030988b1a71e41e9ac9a62527916dd0f43b89" translate="yes" xml:space="preserve">
          <source>This method can quickly check whether Flight Recorder can be initialized, without actually doing the initialization work. The value may change during runtime and it is not safe to cache it.</source>
          <target state="translated">이 방법을 사용하면 실제로 초기화 작업을하지 않고도 Flight Recorder를 초기화 할 수 있는지 빠르게 확인할 수 있습니다. 값은 런타임 중에 변경 될 수 있으며 캐시하는 것이 안전하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="21b13cf3cc1e2afcf12364ed3ba12cfcc714e0ba" translate="yes" xml:space="preserve">
          <source>This method can return the following value not defined on the IANA page:</source>
          <target state="translated">This method can return the following value not defined on the IANA page:</target>
        </trans-unit>
        <trans-unit id="6b0826ff6d73c277dcb6df37b0800472398a3a4e" translate="yes" xml:space="preserve">
          <source>This method cannot be used to enable &lt;a href=&quot;#set(java.lang.Object,java.lang.Object)&quot;&gt;&lt;em&gt;write&lt;/em&gt;&lt;/a&gt; access to a &lt;em&gt;non-modifiable&lt;/em&gt; final field. The following fields are non-modifiable:</source>
          <target state="translated">이 메서드는 &lt;em&gt;수정할 수없는&lt;/em&gt; 최종 필드에 대한 &lt;a href=&quot;#set(java.lang.Object,java.lang.Object)&quot;&gt;&lt;em&gt;쓰기&lt;/em&gt;&lt;/a&gt; 액세스를 활성화하는 데 사용할 수 없습니다 . 다음 필드는 수정할 수 없습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="7fad408daef77d934d350d47817ef10514ea080b" translate="yes" xml:space="preserve">
          <source>This method cannot be used to enable &lt;a href=&quot;field#set(java.lang.Object,java.lang.Object)&quot;&gt;&lt;em&gt;write&lt;/em&gt;&lt;/a&gt; access to a &lt;em&gt;non-modifiable&lt;/em&gt; final field. The following fields are non-modifiable:</source>
          <target state="translated">이 메서드는 &lt;em&gt;수정할 수없는&lt;/em&gt; 최종 필드에 대한 &lt;a href=&quot;field#set(java.lang.Object,java.lang.Object)&quot;&gt;&lt;em&gt;쓰기&lt;/em&gt;&lt;/a&gt; 액세스를 활성화하는 데 사용할 수 없습니다 . 다음 필드는 수정할 수 없습니다.&lt;em&gt;&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit id="a0eedcac980f22bb465aa2bea247bb2a7edfea48" translate="yes" xml:space="preserve">
          <source>This method cannot be used to enable access to private members, members with default (package) access, protected instance members, or protected constructors when the declaring class is in a different module to the caller and the package containing the declaring class is not open to the caller's module.</source>
          <target state="translated">This method cannot be used to enable access to private members, members with default (package) access, protected instance members, or protected constructors when the declaring class is in a different module to the caller and the package containing the declaring class is not open to the caller's module.</target>
        </trans-unit>
        <trans-unit id="37ac1594ca579fbc31f8bc26c78b28d0b47b952f" translate="yes" xml:space="preserve">
          <source>This method cannot be used to set the focus owner to no Component at all. Use &lt;code&gt;KeyboardFocusManager.clearGlobalFocusOwner()&lt;/code&gt; instead.</source>
          <target state="translated">This method cannot be used to set the focus owner to no Component at all. Use &lt;code&gt;KeyboardFocusManager.clearGlobalFocusOwner()&lt;/code&gt; instead.</target>
        </trans-unit>
        <trans-unit id="884543a9dea1ae99b90dc88120840de895e7ce48" translate="yes" xml:space="preserve">
          <source>This method cannot be used to set the focus owner to no component at all. Use &lt;code&gt;KeyboardFocusManager.clearGlobalFocusOwner&lt;/code&gt; instead.</source>
          <target state="translated">This method cannot be used to set the focus owner to no component at all. Use &lt;code&gt;KeyboardFocusManager.clearGlobalFocusOwner&lt;/code&gt; instead.</target>
        </trans-unit>
        <trans-unit id="1026f02beb60ec3bc72723daed93928afc228cca" translate="yes" xml:space="preserve">
          <source>This method cannot handle &lt;a href=&quot;#supplementary&quot;&gt; supplementary characters&lt;/a&gt;. To support all Unicode characters, including supplementary characters, use the &lt;a href=&quot;#toString(int)&quot;&gt;&lt;code&gt;toString(int)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">This method cannot handle &lt;a href=&quot;#supplementary&quot;&gt; supplementary characters&lt;/a&gt;. To support all Unicode characters, including supplementary characters, use the &lt;a href=&quot;#toString(int)&quot;&gt; &lt;code&gt;toString(int)&lt;/code&gt; &lt;/a&gt; method.</target>
        </trans-unit>
        <trans-unit id="43df95e88fab9a3f3c24f1b80d081aa01bbd9975" translate="yes" xml:space="preserve">
          <source>This method cannot reduce the set of modules that a module reads, nor reduce the set of packages that it exports or opens, nor reduce the set of services that it uses or provides. This method is a no-op when invoked to redefine an unnamed module.</source>
          <target state="translated">This method cannot reduce the set of modules that a module reads, nor reduce the set of packages that it exports or opens, nor reduce the set of services that it uses or provides. This method is a no-op when invoked to redefine an unnamed module.</target>
        </trans-unit>
        <trans-unit id="4fec536b3f6a191347ba70d3121bfd0d2cb06db2" translate="yes" xml:space="preserve">
          <source>This method causes the current thread (call it &lt;var&gt;T&lt;/var&gt;) to place itself in the wait set for this object and then to relinquish any and all synchronization claims on this object. Thread &lt;var&gt;T&lt;/var&gt; becomes disabled for thread scheduling purposes and lies dormant until one of four things happens:</source>
          <target state="translated">이 메소드는 현재 스레드 ( &lt;var&gt;T&lt;/var&gt; 라고 함 )가이 오브젝트의 대기 세트에 자신을 배치 한 다음이 오브젝트에 대한 모든 동기화 청구를 포기합니다. 스레드 &lt;var&gt;T&lt;/var&gt; 는 스레드 스케줄링 목적으로 사용 불가능하게되고 다음 4 가지 중 하나가 발생할 때까지 휴면 상태가됩니다.</target>
        </trans-unit>
        <trans-unit id="5dd04fc27a643d764c5509eff4da64fb40bdba99" translate="yes" xml:space="preserve">
          <source>This method causes the current thread (referred to here as &lt;var&gt;T&lt;/var&gt;) to place itself in the wait set for this object and then to relinquish any and all synchronization claims on this object. Note that only the locks on this object are relinquished; any other objects on which the current thread may be synchronized remain locked while the thread waits.</source>
          <target state="translated">This method causes the current thread (referred to here as &lt;var&gt;T&lt;/var&gt; ) to place itself in the wait set for this object and then to relinquish any and all synchronization claims on this object. Note that only the locks on this object are relinquished; any other objects on which the current thread may be synchronized remain locked while the thread waits.</target>
        </trans-unit>
        <trans-unit id="8c8fb0901563ffb631d201729498da3e444ca3d2" translate="yes" xml:space="preserve">
          <source>This method causes this Configuration object to refresh/reload its contents in an implementation-dependent manner. For example, if this Configuration object stores its entries in a file, calling &lt;code&gt;refresh&lt;/code&gt; may cause the file to be re-read.</source>
          <target state="translated">이 메소드는이 Configuration 객체가 구현에 따라 콘텐츠를 새로 고치거나 다시로드합니다. 예를 들어,이 Configuration 객체가 해당 항목을 파일에 저장하는 경우 &lt;code&gt;refresh&lt;/code&gt; 를 호출 하면 파일을 다시 읽을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="fddc8f5ad8ea28f9d3e410df7981f8dccd5dffee" translate="yes" xml:space="preserve">
          <source>This method causes this matcher to lose information about the groups of the last match that occurred. The matcher's position in the input is maintained and its last append position is unaffected.</source>
          <target state="translated">이 방법을 사용하면이 매처는 마지막으로 발생한 일치 그룹에 대한 정보를 유실합니다. 입력에서 매처의 위치는 유지되며 마지막 추가 위치는 영향을받지 않습니다.</target>
        </trans-unit>
        <trans-unit id="1d1f81bab3a52524ce08c86b4332e81bfd92c55c" translate="yes" xml:space="preserve">
          <source>This method causes this object to refresh/reload its current Policy. This is implementation-dependent. For example, if the Policy object is stored in a file, calling &lt;code&gt;refresh&lt;/code&gt; will cause the file to be re-read.</source>
          <target state="translated">이 방법을 사용하면이 개체가 현재 정책을 새로 고치거나 다시로드합니다. 이것은 구현에 따라 다릅니다. 예를 들어, 정책 개체가 파일에 저장된 경우 &lt;code&gt;refresh&lt;/code&gt; 를 호출 하면 파일을 다시 읽습니다.</target>
        </trans-unit>
        <trans-unit id="19a7aad3866fb9814353164cf676292b0af0ef72" translate="yes" xml:space="preserve">
          <source>This method changes layout-related information, and therefore, invalidates the component hierarchy.</source>
          <target state="translated">This method changes layout-related information, and therefore, invalidates the component hierarchy.</target>
        </trans-unit>
        <trans-unit id="45778c96edf5c2b0d9dab1a64f79c9f3ef59c2a1" translate="yes" xml:space="preserve">
          <source>This method changes layout-related information, and therefore, invalidates the component hierarchy. If the container has already been displayed, the hierarchy must be validated thereafter in order to display the added component.</source>
          <target state="translated">This method changes layout-related information, and therefore, invalidates the component hierarchy. If the container has already been displayed, the hierarchy must be validated thereafter in order to display the added component.</target>
        </trans-unit>
        <trans-unit id="a67ca0d624fc976ec54ab2f4324c067dadfb06de" translate="yes" xml:space="preserve">
          <source>This method changes layout-related information, and therefore, invalidates the component hierarchy. If the container has already been displayed, the hierarchy must be validated thereafter in order to reflect the changes.</source>
          <target state="translated">This method changes layout-related information, and therefore, invalidates the component hierarchy. If the container has already been displayed, the hierarchy must be validated thereafter in order to reflect the changes.</target>
        </trans-unit>
        <trans-unit id="3296a2f999228f4cc6234021423bf4c10e89c1da" translate="yes" xml:space="preserve">
          <source>This method changes the time-zone and retains the instant. This normally results in a change to the local date-time.</source>
          <target state="translated">이 방법은 시간대를 변경하고 순간을 유지합니다. 이로 인해 일반적으로 현지 날짜-시간이 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="f58a4832d2894c57bf6b53fdc25d36c50ca64543" translate="yes" xml:space="preserve">
          <source>This method changes the time-zone and retains the local date-time. The local date-time is only changed if it is invalid for the new zone, determined using the same approach as &lt;a href=&quot;#ofLocal(java.time.LocalDateTime,java.time.ZoneId,java.time.ZoneOffset)&quot;&gt;&lt;code&gt;ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">This method changes the time-zone and retains the local date-time. The local date-time is only changed if it is invalid for the new zone, determined using the same approach as &lt;a href=&quot;#ofLocal(java.time.LocalDateTime,java.time.ZoneId,java.time.ZoneOffset)&quot;&gt; &lt;code&gt;ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt; &lt;/a&gt;.</target>
        </trans-unit>
        <trans-unit id="6d0f6dec553a6941b395b610d1f5cce0efbd8f9b" translate="yes" xml:space="preserve">
          <source>This method changes the time-zone and retains the local date-time. The local date-time is only changed if it is invalid for the new zone, determined using the same approach as &lt;a href=&quot;zoneddatetime#ofLocal-java.time.LocalDateTime-java.time.ZoneId-java.time.ZoneOffset-&quot;&gt;&lt;code&gt;ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 시간대를 변경하고 현지 날짜-시간을 유지합니다. 로컬 날짜-시간은 새 지역에 대해 유효하지 않은 경우에만 변경되며 &lt;a href=&quot;zoneddatetime#ofLocal-java.time.LocalDateTime-java.time.ZoneId-java.time.ZoneOffset-&quot;&gt; &lt;code&gt;ofLocal(LocalDateTime, ZoneId, ZoneOffset)&lt;/code&gt; &lt;/a&gt; 과 동일한 접근 방식을 사용하여 결정됩니다 .</target>
        </trans-unit>
        <trans-unit id="46a23253baf38b2f1c044ac18305191965f3786a" translate="yes" xml:space="preserve">
          <source>This method changes the time-zone and retains the local date-time. The local date-time is only changed if it is invalid for the new zone.</source>
          <target state="translated">이 방법은 시간대를 변경하고 현지 날짜-시간을 유지합니다. 로컬 날짜-시간은 새 영역에 유효하지 않은 경우에만 변경됩니다.</target>
        </trans-unit>
        <trans-unit id="9b7dba98cefc7d4e08cd67030dfe875c9a5b7a1c" translate="yes" xml:space="preserve">
          <source>This method checks against the range of the field in the ISO-8601 calendar system. This range may be incorrect for other calendar systems. Use &lt;a href=&quot;../chrono/chronology#range(java.time.temporal.ChronoField)&quot;&gt;&lt;code&gt;Chronology.range(ChronoField)&lt;/code&gt;&lt;/a&gt; to access the correct range for a different calendar system.</source>
          <target state="translated">This method checks against the range of the field in the ISO-8601 calendar system. This range may be incorrect for other calendar systems. Use &lt;a href=&quot;../chrono/chronology#range(java.time.temporal.ChronoField)&quot;&gt; &lt;code&gt;Chronology.range(ChronoField)&lt;/code&gt; &lt;/a&gt; to access the correct range for a different calendar system.</target>
        </trans-unit>
        <trans-unit id="5310049153ef893dddbedcbaea486c6508e001ef" translate="yes" xml:space="preserve">
          <source>This method checks against the range of the field in the ISO-8601 calendar system. This range may be incorrect for other calendar systems. Use &lt;a href=&quot;../chrono/chronology#range-java.time.temporal.ChronoField-&quot;&gt;&lt;code&gt;Chronology.range(ChronoField)&lt;/code&gt;&lt;/a&gt; to access the correct range for a different calendar system.</source>
          <target state="translated">이 방법은 ISO-8601 달력 시스템에서 필드 범위를 확인합니다. 다른 달력 시스템에서는이 범위가 올바르지 않을 수 있습니다. 사용 &lt;a href=&quot;../chrono/chronology#range-java.time.temporal.ChronoField-&quot;&gt; &lt;code&gt;Chronology.range(ChronoField)&lt;/code&gt; &lt;/a&gt; 다른 달력 시스템에 대한 올바른 범위에 액세스 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="c857b14e72d1582778eab33648b7bb93672a7ba7" translate="yes" xml:space="preserve">
          <source>This method checks if the &lt;code&gt;LogRecord&lt;/code&gt; has an appropriate &lt;code&gt;Level&lt;/code&gt; and whether it satisfies any &lt;code&gt;Filter&lt;/code&gt;. It also may make other &lt;code&gt;Handler&lt;/code&gt; specific checks that might prevent a handler from logging the &lt;code&gt;LogRecord&lt;/code&gt;. It will return false if the &lt;code&gt;LogRecord&lt;/code&gt; is null.</source>
          <target state="translated">이 메소드는 &lt;code&gt;LogRecord&lt;/code&gt; 에 적절한 &lt;code&gt;Level&lt;/code&gt; 있고 &lt;code&gt;Filter&lt;/code&gt; 만족하는지 여부를 확인합니다 . 또한 핸들러가 &lt;code&gt;LogRecord&lt;/code&gt; 를 로깅하지 못하게하는 다른 &lt;code&gt;Handler&lt;/code&gt; 특정 점검을 수행 할 수도 있습니다 . &lt;code&gt;LogRecord&lt;/code&gt; 가 null이면 false를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="b9cae628e4cbb314ffd27f1df73f8bc56609f660" translate="yes" xml:space="preserve">
          <source>This method checks if the &lt;code&gt;LogRecord&lt;/code&gt; has an appropriate level and whether it satisfies any &lt;code&gt;Filter&lt;/code&gt;. However it does &lt;b&gt;not&lt;/b&gt; check whether the &lt;code&gt;LogRecord&lt;/code&gt; would result in a &quot;push&quot; of the buffer contents. It will return false if the &lt;code&gt;LogRecord&lt;/code&gt; is null.</source>
          <target state="translated">이 메소드는 &lt;code&gt;LogRecord&lt;/code&gt; 에 적절한 레벨이 있고 &lt;code&gt;Filter&lt;/code&gt; 만족하는지 여부를 확인합니다 . 그러나 &lt;code&gt;LogRecord&lt;/code&gt; 가 버퍼 내용의 &quot;푸시&quot;를 유발 하는지 여부는 확인 하지 &lt;b&gt;않습니다&lt;/b&gt; . &lt;code&gt;LogRecord&lt;/code&gt; 가 null이면 false를 반환 합니다 .</target>
        </trans-unit>
        <trans-unit id="7d654c3b8bd21b790c01a40658ed4f6204877578" translate="yes" xml:space="preserve">
          <source>This method checks if the &lt;code&gt;LogRecord&lt;/code&gt; has an appropriate level and whether it satisfies any &lt;code&gt;Filter&lt;/code&gt;. It will also return false if no output stream has been assigned yet or the LogRecord is null.</source>
          <target state="translated">이 메소드는 &lt;code&gt;LogRecord&lt;/code&gt; 에 적절한 레벨이 있고 &lt;code&gt;Filter&lt;/code&gt; 만족하는지 여부를 확인합니다 . 출력 스트림이 아직 할당되지 않았거나 LogRecord가 null 인 경우에도 false를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="5f84a892f763ba53195d9e2c5adaa7a9d804bc54" translate="yes" xml:space="preserve">
          <source>This method checks if the specified &lt;code&gt;namespaceURI&lt;/code&gt; is the default namespace or not.</source>
          <target state="translated">This method checks if the specified &lt;code&gt;namespaceURI&lt;/code&gt; is the default namespace or not.</target>
        </trans-unit>
        <trans-unit id="383b68cf26d225dc362b15b7eac00ca6802a249a" translate="yes" xml:space="preserve">
          <source>This method checks if the specified package starts with or equals any of the packages in the &lt;code&gt;package.access&lt;/code&gt; Security Property. An implementation may also check the package against an additional list of restricted packages as noted below. If the package is restricted, &lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission(Permission)&lt;/code&gt;&lt;/a&gt; is called with a &lt;code&gt;RuntimePermission(&quot;accessClassInPackage.&quot;+pkg)&lt;/code&gt; permission.</source>
          <target state="translated">This method checks if the specified package starts with or equals any of the packages in the &lt;code&gt;package.access&lt;/code&gt; Security Property. An implementation may also check the package against an additional list of restricted packages as noted below. If the package is restricted, &lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission(Permission)&lt;/code&gt; &lt;/a&gt; is called with a &lt;code&gt;RuntimePermission(&quot;accessClassInPackage.&quot;+pkg)&lt;/code&gt; permission.</target>
        </trans-unit>
        <trans-unit id="27b7aee2b9eacd15fd77b67ffe665a5bbbf61bf3" translate="yes" xml:space="preserve">
          <source>This method checks if the specified package starts with or equals any of the packages in the &lt;code&gt;package.definition&lt;/code&gt; Security Property. An implementation may also check the package against an additional list of restricted packages as noted below. If the package is restricted, &lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt;&lt;code&gt;checkPermission(Permission)&lt;/code&gt;&lt;/a&gt; is called with a &lt;code&gt;RuntimePermission(&quot;defineClassInPackage.&quot;+pkg)&lt;/code&gt; permission.</source>
          <target state="translated">This method checks if the specified package starts with or equals any of the packages in the &lt;code&gt;package.definition&lt;/code&gt; Security Property. An implementation may also check the package against an additional list of restricted packages as noted below. If the package is restricted, &lt;a href=&quot;#checkPermission(java.security.Permission)&quot;&gt; &lt;code&gt;checkPermission(Permission)&lt;/code&gt; &lt;/a&gt; is called with a &lt;code&gt;RuntimePermission(&quot;defineClassInPackage.&quot;+pkg)&lt;/code&gt; permission.</target>
        </trans-unit>
        <trans-unit id="74391c52a27ced5a9b2079a0933c22c720eef4b2" translate="yes" xml:space="preserve">
          <source>This method checks that &lt;code&gt;cmdarray&lt;/code&gt; is a valid operating system command. Which commands are valid is system-dependent, but at the very least the command must be a non-empty list of non-null strings.</source>
          <target state="translated">이 방법은 &lt;code&gt;cmdarray&lt;/code&gt; 가 유효한 운영 체제 명령인지 확인합니다. 어떤 명령이 유효한지는 시스템에 따라 다르지만 최소한 명령은 비어 있지 않은 문자열이 아닌 목록이어야합니다.</target>
        </trans-unit>
        <trans-unit id="02b9f2626413e81b573bfe50d50d41f41858234a" translate="yes" xml:space="preserve">
          <source>This method checks that the command is a valid operating system command. Which commands are valid is system-dependent, but at the very least the command must be a non-empty list of non-null strings.</source>
          <target state="translated">이 방법은 명령이 유효한 운영 체제 명령인지 확인합니다. 유효한 명령은 시스템에 따라 다르지만 최소한 명령은 비어 있지 않은 문자열이 아닌 목록이어야합니다.</target>
        </trans-unit>
        <trans-unit id="80106af0f11970b7bc5d84c28e2c9715b1421695" translate="yes" xml:space="preserve">
          <source>This method checks the existence of a file and that this Java virtual machine has appropriate privileges that would allow it access the file according to all of access modes specified in the &lt;code&gt;modes&lt;/code&gt; parameter as follows:</source>
          <target state="translated">이 메소드는 파일의 존재를 확인하고이 Java 가상 머신에 다음과 같이 &lt;code&gt;modes&lt;/code&gt; 매개 변수에 지정된 모든 액세스 모드에 따라 파일에 액세스 할 수있는 적절한 권한이 있는지 확인합니다 .</target>
        </trans-unit>
        <trans-unit id="3555333348f5253ac448ef05852394979a8a0107" translate="yes" xml:space="preserve">
          <source>This method checks to see that there is an &lt;code&gt;SQLPermission&lt;/code&gt; object before allowing the method to proceed. If a &lt;code&gt;SecurityManager&lt;/code&gt; exists and its &lt;code&gt;checkPermission&lt;/code&gt; method denies calling &lt;code&gt;abort&lt;/code&gt;, this method throws a &lt;code&gt;java.lang.SecurityException&lt;/code&gt;.</source>
          <target state="translated">This method checks to see that there is an &lt;code&gt;SQLPermission&lt;/code&gt; object before allowing the method to proceed. If a &lt;code&gt;SecurityManager&lt;/code&gt; exists and its &lt;code&gt;checkPermission&lt;/code&gt; method denies calling &lt;code&gt;abort&lt;/code&gt; , this method throws a &lt;code&gt;java.lang.SecurityException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="f3f39d8bbeca7640ed5bdcd4200bc9479efd8717" translate="yes" xml:space="preserve">
          <source>This method checks to see that there is an &lt;code&gt;SQLPermission&lt;/code&gt; object before allowing the method to proceed. If a &lt;code&gt;SecurityManager&lt;/code&gt; exists and its &lt;code&gt;checkPermission&lt;/code&gt; method denies calling &lt;code&gt;setNetworkTimeout&lt;/code&gt;, this method throws a &lt;code&gt;java.lang.SecurityException&lt;/code&gt;.</source>
          <target state="translated">This method checks to see that there is an &lt;code&gt;SQLPermission&lt;/code&gt; object before allowing the method to proceed. If a &lt;code&gt;SecurityManager&lt;/code&gt; exists and its &lt;code&gt;checkPermission&lt;/code&gt; method denies calling &lt;code&gt;setNetworkTimeout&lt;/code&gt; , this method throws a &lt;code&gt;java.lang.SecurityException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="b07c81c430ba1bb5857396f1dd0fa9273ee0e6f7" translate="yes" xml:space="preserve">
          <source>This method checks to see that there is an &lt;code&gt;SQLPermission&lt;/code&gt; object which grants the permission &lt;code&gt;setSyncFactory&lt;/code&gt; before allowing the method to succeed. If a &lt;code&gt;SecurityManager&lt;/code&gt; exists and its &lt;code&gt;checkPermission&lt;/code&gt; method denies calling &lt;code&gt;setJNDIContext&lt;/code&gt;, this method throws a &lt;code&gt;java.lang.SecurityException&lt;/code&gt;.</source>
          <target state="translated">This method checks to see that there is an &lt;code&gt;SQLPermission&lt;/code&gt; object which grants the permission &lt;code&gt;setSyncFactory&lt;/code&gt; before allowing the method to succeed. If a &lt;code&gt;SecurityManager&lt;/code&gt; exists and its &lt;code&gt;checkPermission&lt;/code&gt; method denies calling &lt;code&gt;setJNDIContext&lt;/code&gt; , this method throws a &lt;code&gt;java.lang.SecurityException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="8f20904499fa3053ce7e9e5bc9b9fd9c6c8f6b32" translate="yes" xml:space="preserve">
          <source>This method checks to see that there is an &lt;code&gt;SQLPermission&lt;/code&gt; object which grants the permission &lt;code&gt;setSyncFactory&lt;/code&gt; before allowing the method to succeed. If a &lt;code&gt;SecurityManager&lt;/code&gt; exists and its &lt;code&gt;checkPermission&lt;/code&gt; method denies calling &lt;code&gt;setLogger&lt;/code&gt;, this method throws a &lt;code&gt;java.lang.SecurityException&lt;/code&gt;.</source>
          <target state="translated">This method checks to see that there is an &lt;code&gt;SQLPermission&lt;/code&gt; object which grants the permission &lt;code&gt;setSyncFactory&lt;/code&gt; before allowing the method to succeed. If a &lt;code&gt;SecurityManager&lt;/code&gt; exists and its &lt;code&gt;checkPermission&lt;/code&gt; method denies calling &lt;code&gt;setLogger&lt;/code&gt; , this method throws a &lt;code&gt;java.lang.SecurityException&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="813e7219d13ff3f0ff1e399420f1630dd4d45425" translate="yes" xml:space="preserve">
          <source>This method checks whether this month and day and the input year form a valid date. This can only return false for February 29th.</source>
          <target state="translated">이 방법은이 월과 일 및 입력 연도가 유효한 날짜를 형성하는지 확인합니다. 2 월 29 일에 대해서만 false를 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6ca0ea3874885ad825737fe01643853174112aeb" translate="yes" xml:space="preserve">
          <source>This method checks whether this year and month and the input day form a valid date.</source>
          <target state="translated">이 방법은 올해와 월 및 입력 날짜가 유효한 날짜인지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="b0ae8ca0a80a5b42c94d0b36381fb9056daa9563" translate="yes" xml:space="preserve">
          <source>This method checks whether this year and the input month and day form a valid date.</source>
          <target state="translated">이 방법은 올해와 입력 월 및 일이 유효한 날짜를 형성하는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="052b77b1752d1f1058dc33720d9da6f0e36d649c" translate="yes" xml:space="preserve">
          <source>This method cleans up any state that was originally saved as part of the authentication attempt from the &lt;code&gt;login&lt;/code&gt; and &lt;code&gt;commit&lt;/code&gt; methods.</source>
          <target state="translated">이 방법은 &lt;code&gt;login&lt;/code&gt; 및 &lt;code&gt;commit&lt;/code&gt; 방법 에서 인증 시도의 일부로 원래 저장된 모든 상태를 정리합니다 .</target>
        </trans-unit>
        <trans-unit id="0ca677a5a8086c56a096bf1cc7c3d7c11e81a570" translate="yes" xml:space="preserve">
          <source>This method clears the selection and resets any variable row heights.</source>
          <target state="translated">This method clears the selection and resets any variable row heights.</target>
        </trans-unit>
        <trans-unit id="9d7cfe6c5917eedcd56be0220cd20dbf8d413d0c" translate="yes" xml:space="preserve">
          <source>This method closes the input stream associated with this stream.</source>
          <target state="translated">이 메소드는이 스트림과 연관된 입력 스트림을 닫습니다.</target>
        </trans-unit>
        <trans-unit id="bf582cf8447bc598db54dfe48cb3b8dcda5ce503" translate="yes" xml:space="preserve">
          <source>This method closes this object and releases the resources that it held.</source>
          <target state="translated">This method closes this object and releases the resources that it held.</target>
        </trans-unit>
        <trans-unit id="6c0ae1cb88e9f88a79cbac7f33a7459027bfc011" translate="yes" xml:space="preserve">
          <source>This method closes this object and releases the resources that it held. The SQL XML object becomes invalid and neither readable or writable when this method is called. After &lt;code&gt;free&lt;/code&gt; has been called, any attempt to invoke a method other than &lt;code&gt;free&lt;/code&gt; will result in a &lt;code&gt;SQLException&lt;/code&gt; being thrown. If &lt;code&gt;free&lt;/code&gt; is called multiple times, the subsequent calls to &lt;code&gt;free&lt;/code&gt; are treated as a no-op.</source>
          <target state="translated">이 메서드는이 개체를 닫고 보유한 리소스를 해제합니다. 이 메서드를 호출하면 SQL XML 개체가 무효화되고 읽기 또는 쓰기가 불가능합니다. 후 &lt;code&gt;free&lt;/code&gt; 호출 된, 이외의 방법 호출하려는 시도 &lt;code&gt;free&lt;/code&gt; A의 발생합니다 &lt;code&gt;SQLException&lt;/code&gt; 발생된다. 경우 &lt;code&gt;free&lt;/code&gt; 여러 번 호출에 후속 호출 &lt;code&gt;free&lt;/code&gt; 무 조작으로 처리됩니다.</target>
        </trans-unit>
        <trans-unit id="4af619981e883e0ed74c8af20b4b6c4b1d11ed7b" translate="yes" xml:space="preserve">
          <source>This method combines &lt;a href=&quot;#isIntValue()&quot;&gt;&lt;code&gt;isIntValue()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#isValidValue(long)&quot;&gt;&lt;code&gt;isValidValue(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#isIntValue()&quot;&gt; &lt;code&gt;isIntValue()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#isValidValue(long)&quot;&gt; &lt;code&gt;isValidValue(long)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="dff493e06662208f386fd8c2f9ff5678c725d551" translate="yes" xml:space="preserve">
          <source>This method combines &lt;a href=&quot;valuerange#isIntValue--&quot;&gt;&lt;code&gt;isIntValue()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;valuerange#isValidValue-long-&quot;&gt;&lt;code&gt;isValidValue(long)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;valuerange#isIntValue--&quot;&gt; &lt;code&gt;isIntValue()&lt;/code&gt; &lt;/a&gt; 와 &lt;a href=&quot;valuerange#isValidValue-long-&quot;&gt; &lt;code&gt;isValidValue(long)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="1dd6469ce58e7474eb9aedf9925e9c38c3d7f088" translate="yes" xml:space="preserve">
          <source>This method completes a 2-phase authentication process by calling each configured LoginModule's &lt;code&gt;commit&lt;/code&gt; method if the overall authentication succeeded (the relevant REQUIRED, REQUISITE, SUFFICIENT, and OPTIONAL LoginModules succeeded), or by calling each configured LoginModule's &lt;code&gt;abort&lt;/code&gt; method if the overall authentication failed. If authentication succeeded, each successful LoginModule's &lt;code&gt;commit&lt;/code&gt; method associates the relevant Principals and Credentials with the &lt;code&gt;Subject&lt;/code&gt;. If authentication failed, each LoginModule's &lt;code&gt;abort&lt;/code&gt; method removes/destroys any previously stored state.</source>
          <target state="translated">이 메소드 는 전체 인증이 성공한 경우 (관련된 REQUIRED, REQUISITE, SUFFICIENT 및 OPTIONAL LoginModule이 성공한 경우) 구성된 각 LoginModule의 &lt;code&gt;commit&lt;/code&gt; 메소드를 호출하거나 전체 인증이 실패한 경우 구성된 각 LoginModule의 &lt;code&gt;abort&lt;/code&gt; 메소드 를 호출 하여 2 단계 인증 프로세스를 완료합니다 . 인증이 성공한 경우, 성공적인 각 LoginModule의 &lt;code&gt;commit&lt;/code&gt; 메소드는 관련 프린시 펄 및 신임 정보를 &lt;code&gt;Subject&lt;/code&gt; 와 연관시킵니다 . 인증이 실패하면 각 LoginModule의 &lt;code&gt;abort&lt;/code&gt; 메소드는 이전에 저장된 상태를 제거 / 파기합니다.</target>
        </trans-unit>
        <trans-unit id="0bdf3031aebd241da3e146a392f7cd34da1b30e8" translate="yes" xml:space="preserve">
          <source>This method computes an approximation of the containment relation: If it returns &lt;code&gt;true&lt;/code&gt; then the given charset is known to be contained by this charset; if it returns &lt;code&gt;false&lt;/code&gt;, however, then it is not necessarily the case that the given charset is not contained in this charset.</source>
          <target state="translated">이 메소드는 포함 관계의 근사값을 계산합니다. &lt;code&gt;true&lt;/code&gt; 를 리턴 하면 주어진 문자 세트가이 문자 세트에 포함 된 것으로 알려져 있습니다. 그러나 &lt;code&gt;false&lt;/code&gt; 를 돌려주는 경우, 지정된 캐릭터 세트가이 캐릭터 세트에 포함되어 있지 않은 것은 아닙니다.</target>
        </trans-unit>
        <trans-unit id="c6a131b13cabaff4b78300f7f15a82854308a329" translate="yes" xml:space="preserve">
          <source>This method conforms to &lt;a href=&quot;https://unicode.org/reports/tr31/#R1&quot;&gt; UAX31-R1: Default Identifiers&lt;/a&gt; requirement of the Unicode Standard, with the following profile of UAX31:</source>
          <target state="translated">이 방법은 &lt;a href=&quot;https://unicode.org/reports/tr31/#R1&quot;&gt;UAX31-R1 : UAX31&lt;/a&gt; 의 다음 프로파일과 함께 유니 코드 표준의 기본 식별자 요구 사항을 준수합니다 .</target>
        </trans-unit>
        <trans-unit id="fefb6b9da151a9dbb26b6c1fc7fc84c27e6c3ee8" translate="yes" xml:space="preserve">
          <source>This method constructs a &lt;code&gt;ListSelectionEvent&lt;/code&gt; with this list as the source, and the specified arguments, and sends it to the registered &lt;code&gt;ListSelectionListeners&lt;/code&gt;.</source>
          <target state="translated">이 방법은 구축 &lt;code&gt;ListSelectionEvent&lt;/code&gt; 소스 및 인수로 지정된이리스트를 상기 등록에 보낼 &lt;code&gt;ListSelectionListeners&lt;/code&gt; 에 .</target>
        </trans-unit>
        <trans-unit id="016880e8460b7fc1d677359206f7ba9fb7006a7b" translate="yes" xml:space="preserve">
          <source>This method constructs a new watch service that may be used to watch registered objects for changes and events.</source>
          <target state="translated">이 방법은 등록 된 객체의 변경 및 이벤트를 감시하는 데 사용할 수있는 새로운 감시 서비스를 구성합니다.</target>
        </trans-unit>
        <trans-unit id="547aed285aaefda991ad0b3904151ce026c60ac4" translate="yes" xml:space="preserve">
          <source>This method constructs an absolute &lt;a href=&quot;../../net/uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;../../net/uri#getScheme()&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt; equal to the URI scheme that identifies the provider. The exact form of the scheme specific part is highly provider dependent.</source>
          <target state="translated">이 메서드 는 공급자를 식별하는 URI 체계 와 동일한 &lt;a href=&quot;../../net/uri#getScheme()&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt; 로 절대 &lt;a href=&quot;../../net/uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 를 생성합니다 . 체계 특정 부분의 정확한 형태는 공급자에 따라 크게 다릅니다.</target>
        </trans-unit>
        <trans-unit id="e45582cbf00c605da5516a5f1e3f215544800cb8" translate="yes" xml:space="preserve">
          <source>This method constructs an absolute &lt;a href=&quot;../../net/uri&quot;&gt;&lt;code&gt;URI&lt;/code&gt;&lt;/a&gt; with a &lt;a href=&quot;../../net/uri#getScheme--&quot;&gt;&lt;code&gt;scheme&lt;/code&gt;&lt;/a&gt; equal to the URI scheme that identifies the provider. The exact form of the scheme specific part is highly provider dependent.</source>
          <target state="translated">이 메소드 는 제공자를 식별하는 URI 스킴과 동일한 &lt;a href=&quot;../../net/uri#getScheme--&quot;&gt; &lt;code&gt;scheme&lt;/code&gt; &lt;/a&gt; 으로 절대 &lt;a href=&quot;../../net/uri&quot;&gt; &lt;code&gt;URI&lt;/code&gt; &lt;/a&gt; 를 구성합니다 . 체계 특정 부분의 정확한 형식은 공급자에 따라 크게 다릅니다.</target>
        </trans-unit>
        <trans-unit id="72795cabb6417067cf089969a9efc76ccd71e6d0" translate="yes" xml:space="preserve">
          <source>This method converts using the type of this enum. The output is defined relative to the 'before' offset of the transition.</source>
          <target state="translated">이 메소드는이 열거 형의 유형을 사용하여 변환합니다. 출력은 전환의 '이전'오프셋과 관련하여 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="00dac656c296813381472debfacb1a05c81072c0" translate="yes" xml:space="preserve">
          <source>This method copies a file to the target file with the &lt;code&gt;
 options&lt;/code&gt; parameter specifying how the copy is performed. By default, the copy fails if the target file already exists or is a symbolic link, except if the source and target are the &lt;a href=&quot;#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt;&lt;code&gt;same&lt;/code&gt;&lt;/a&gt; file, in which case the method completes without copying the file. File attributes are not required to be copied to the target file. If symbolic links are supported, and the file is a symbolic link, then the final target of the link is copied. If the file is a directory then it creates an empty directory in the target location (entries in the directory are not copied). This method can be used with the &lt;a href=&quot;#walkFileTree(java.nio.file.Path,java.util.Set,int,java.nio.file.FileVisitor)&quot;&gt;&lt;code&gt;walkFileTree&lt;/code&gt;&lt;/a&gt; method to copy a directory and all entries in the directory, or an entire</source>
          <target state="translated">이 방법 은 복사 수행 방법을 지정하는 &lt;code&gt; options&lt;/code&gt; 매개 변수를 사용하여 파일을 대상 파일 에 복사합니다. 기본적으로 대상 파일이 이미 존재하거나 심볼릭 링크 인 경우 복사가 실패합니다. 단, 소스와 대상이 &lt;a href=&quot;#isSameFile(java.nio.file.Path,java.nio.file.Path)&quot;&gt; &lt;code&gt;same&lt;/code&gt; &lt;/a&gt; 파일 인 경우에는 파일을 복사하지 않고 메소드가 완료됩니다. 파일 속성은 대상 파일에 복사 할 필요가 없습니다. 기호 링크가 지원되고 파일이 기호 링크 인 경우 링크의 최종 대상이 복사됩니다. 파일이 디렉토리이면 대상 위치에 빈 디렉토리를 만듭니다 (디렉토리의 항목은 복사되지 않음). 이 메서드는 &lt;a href=&quot;#walkFileTree(java.nio.file.Path,java.util.Set,int,java.nio.file.FileVisitor)&quot;&gt; &lt;code&gt;walkFileTree&lt;/code&gt; &lt;/a&gt; 메서드 와 함께 사용 하여 디렉터리와 디렉터리의 모든 항목 또는 전체 항목을 복사 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4e1e1c030bc0362fbc369e8636af9a9c47b0f469" translate="yes" xml:space="preserve">
          <source>This method copies a file to the target file with the &lt;code&gt;options&lt;/code&gt; parameter specifying how the copy is performed. By default, the copy fails if the target file already exists or is a symbolic link, except if the source and target are the &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt;&lt;code&gt;same&lt;/code&gt;&lt;/a&gt; file, in which case the method completes without copying the file. File attributes are not required to be copied to the target file. If symbolic links are supported, and the file is a symbolic link, then the final target of the link is copied. If the file is a directory then it creates an empty directory in the target location (entries in the directory are not copied). This method can be used with the &lt;a href=&quot;files#walkFileTree-java.nio.file.Path-java.util.Set-int-java.nio.file.FileVisitor-&quot;&gt;&lt;code&gt;walkFileTree&lt;/code&gt;&lt;/a&gt; method to copy a directory and all entries in the directory, or an entire</source>
          <target state="translated">이 방법 은 복사 수행 방법을 지정하는 &lt;code&gt;options&lt;/code&gt; 매개 변수를 사용하여 파일을 대상 파일로 복사합니다. 기본적으로 대상 파일이 이미 존재하거나 소스와 대상이 &lt;a href=&quot;files#isSameFile-java.nio.file.Path-java.nio.file.Path-&quot;&gt; &lt;code&gt;same&lt;/code&gt; &lt;/a&gt; 파일 인 경우를 제외하고 기호 링크 인 경우 복사에 실패합니다.이 경우 파일 을 복사하지 않고 메소드가 완료됩니다. 파일 속성은 대상 파일로 복사 할 필요가 없습니다. 심볼릭 링크가 지원되고 파일이 심볼릭 링크 인 경우 링크의 최종 대상이 복사됩니다. 파일이 디렉토리 인 경우 대상 위치에 빈 디렉토리가 작성됩니다 (디렉토리의 항목은 복사되지 않습니다). 이 메소드는 &lt;a href=&quot;files#walkFileTree-java.nio.file.Path-java.util.Set-int-java.nio.file.FileVisitor-&quot;&gt; &lt;code&gt;walkFileTree&lt;/code&gt; &lt;/a&gt; 메소드 와 함께 사용 하여 디렉토리 및 디렉토리의 모든 항목 또는 전체를 복사 할 수 있습니다</target>
        </trans-unit>
        <trans-unit id="2780988947d63fadfb1235f1aa5adebc81ae0ea1" translate="yes" xml:space="preserve">
          <source>This method copies bytes into this buffer from the given source array. The position of this buffer is unchanged. An invocation of this method of the form &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; behaves in exactly the same way as the invocation:</source>
          <target state="translated">이 메서드는 지정된 소스 배열에서이 버퍼로 바이트를 복사합니다. 이 버퍼의 위치는 변경되지 않습니다. &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="8bbe608f4d25b6b4cfaa2c350800699e4dfeb415" translate="yes" xml:space="preserve">
          <source>This method copies chars into this buffer from the given source array. The position of this buffer is unchanged. An invocation of this method of the form &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; behaves in exactly the same way as the invocation:</source>
          <target state="translated">이 메서드는 지정된 소스 배열에서이 버퍼로 문자를 복사합니다. 이 버퍼의 위치는 변경되지 않습니다. &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="9e1a0992ecd5b9768639281136421c2e50ee4a87" translate="yes" xml:space="preserve">
          <source>This method copies doubles into this buffer from the given source array. The position of this buffer is unchanged. An invocation of this method of the form &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; behaves in exactly the same way as the invocation:</source>
          <target state="translated">이 메소드는 주어진 소스 배열에서이 버퍼로 double을 복사합니다. 이 버퍼의 위치는 변경되지 않습니다. &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="7fd6d005bb36a2c473f02da66ebfcbce3a3f6871" translate="yes" xml:space="preserve">
          <source>This method copies floats into this buffer from the given source array. The position of this buffer is unchanged. An invocation of this method of the form &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; behaves in exactly the same way as the invocation:</source>
          <target state="translated">이 메소드는 주어진 소스 배열에서이 버퍼로 float를 복사합니다. 이 버퍼의 위치는 변경되지 않습니다. &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="edf1f09b4270149bced6a0d17e4da276c9490d4d" translate="yes" xml:space="preserve">
          <source>This method copies ints into this buffer from the given source array. The position of this buffer is unchanged. An invocation of this method of the form &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; behaves in exactly the same way as the invocation:</source>
          <target state="translated">이 메서드는 지정된 소스 배열에서이 버퍼로 int를 복사합니다. 이 버퍼의 위치는 변경되지 않습니다. &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ef64ccfafbda48d7cd7e2798abddd99d403f2fe8" translate="yes" xml:space="preserve">
          <source>This method copies longs into this buffer from the given source array. The position of this buffer is unchanged. An invocation of this method of the form &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; behaves in exactly the same way as the invocation:</source>
          <target state="translated">이 메소드는 주어진 소스 배열에서이 버퍼로 long을 복사합니다. 이 버퍼의 위치는 변경되지 않습니다. &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="7dd61c79c8c4fa840319fb240aed54673ecedc1a" translate="yes" xml:space="preserve">
          <source>This method copies shorts into this buffer from the given source array. The position of this buffer is unchanged. An invocation of this method of the form &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; behaves in exactly the same way as the invocation:</source>
          <target state="translated">이 메서드는 주어진 소스 배열에서이 버퍼로 단락을 복사합니다. 이 버퍼의 위치는 변경되지 않습니다. &lt;code&gt;dst.put(index,&amp;nbsp;src)&lt;/code&gt; 형식의이 메소드 호출은 호출과 정확히 동일한 방식으로 작동합니다.</target>
        </trans-unit>
        <trans-unit id="ecacf2e8b79b3e3f9abeeda02f6def2695827e53" translate="yes" xml:space="preserve">
          <source>This method corresponds to the fusedMultiplyAdd operation defined in IEEE 754-2008.</source>
          <target state="translated">이 메서드는 IEEE 754-2008에 정의 된 fusedMultiplyAdd 연산에 해당합니다.</target>
        </trans-unit>
        <trans-unit id="8310f53ea86c0c1e41a135195fbc40f3bcfaa980" translate="yes" xml:space="preserve">
          <source>This method creates a &lt;code&gt;SecurityPermission&lt;/code&gt; object for the given permission target name and calls &lt;code&gt;checkPermission&lt;/code&gt; with it.</source>
          <target state="translated">이 메소드 는 주어진 권한 대상 이름에 대한 &lt;code&gt;SecurityPermission&lt;/code&gt; 오브젝트를 작성하고이를 사용하여 &lt;code&gt;checkPermission&lt;/code&gt; 을 호출 합니다.</target>
        </trans-unit>
        <trans-unit id="21728d2edb7d5eff2049d493420b1c7bc5fe6356" translate="yes" xml:space="preserve">
          <source>This method creates a cipher for the algorithm that had been used in the sealing operation, using an implementation of that algorithm from the given &lt;code&gt;provider&lt;/code&gt;. The Cipher object is initialized for decryption, using the given &lt;code&gt;key&lt;/code&gt; and the parameters (if any) that had been used in the sealing operation.</source>
          <target state="translated">이 메소드는, 지정된 &lt;code&gt;provider&lt;/code&gt; 알고리즘의 구현을 사용해, 실링 조작에 사용 된 알고리즘의 암호를 작성합니다 . 지정된 &lt;code&gt;key&lt;/code&gt; 와 봉인 작업에 사용 된 매개 변수 (있는 경우)를 사용하여 암호 개체가 암호 해독을 위해 초기화 됩니다.</target>
        </trans-unit>
        <trans-unit id="5900f0bafbcd4b92904f8343617b0ece38d9cf8f" translate="yes" xml:space="preserve">
          <source>This method creates a cipher for the algorithm that had been used in the sealing operation. If the default provider package provides an implementation of that algorithm, an instance of Cipher containing that implementation is used. If the algorithm is not available in the default package, other packages are searched. The Cipher object is initialized for decryption, using the given &lt;code&gt;key&lt;/code&gt; and the parameters (if any) that had been used in the sealing operation.</source>
          <target state="translated">이 방법은 봉인 작업에 사용 된 알고리즘의 암호를 만듭니다. 기본 제공자 패키지가 해당 알고리즘의 구현을 제공하는 경우 해당 구현을 포함하는 Cipher 인스턴스가 사용됩니다. 기본 패키지에서 알고리즘을 사용할 수 없으면 다른 패키지가 검색됩니다. 지정된 &lt;code&gt;key&lt;/code&gt; 와 봉인 작업에 사용 된 매개 변수 (있는 경우)를 사용하여 암호 개체가 암호 해독을 위해 초기화 됩니다.</target>
        </trans-unit>
        <trans-unit id="41c23fd7f248fecd4ef38ec3b17316eb566611c2" translate="yes" xml:space="preserve">
          <source>This method creates a copy that can be persisted to the data source.</source>
          <target state="translated">이 메서드는 데이터 원본에 유지할 수있는 복사본을 만듭니다.</target>
        </trans-unit>
        <trans-unit id="395a4f6e2c26035768653bb2dc8996778868cd75" translate="yes" xml:space="preserve">
          <source>This method creates a new MBeanServer implementation object.</source>
          <target state="translated">이 메소드는 새로운 MBeanServer 구현 객체를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="996ced6827ff26e8c9efb36b41525f3db595392c" translate="yes" xml:space="preserve">
          <source>This method creates a new MBeanServer implementation object. When creating a new MBeanServer the &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; first calls &lt;code&gt;newMBeanServerDelegate()&lt;/code&gt; in order to obtain a new &lt;a href=&quot;mbeanserverdelegate&quot;&gt;&lt;code&gt;MBeanServerDelegate&lt;/code&gt;&lt;/a&gt; for the new MBeanServer. Then it calls &lt;code&gt;newMBeanServer(defaultDomain,outer,delegate)&lt;/code&gt; passing the &lt;var&gt;delegate&lt;/var&gt; that should be used by the MBeanServer implementation.</source>
          <target state="translated">이 메소드는 새로운 MBeanServer 구현 오브젝트를 작성합니다. 새의 MBeanServer 작성시 &lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; 는이&lt;/a&gt; 최초 호출 &lt;code&gt;newMBeanServerDelegate()&lt;/code&gt; 새로 획득하기 위해 &lt;a href=&quot;mbeanserverdelegate&quot;&gt; &lt;code&gt;MBeanServerDelegate&lt;/code&gt; 가이&lt;/a&gt; 새로운 MBeanServer에 대한. 그런 다음 MBeanServer 구현에서 사용해야 하는 &lt;var&gt;delegate&lt;/var&gt; 를 전달하여 &lt;code&gt;newMBeanServer(defaultDomain,outer,delegate)&lt;/code&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="ec78ae9b0540978afd2265082aac940e99f2f5d9" translate="yes" xml:space="preserve">
          <source>This method creates a new MBeanServerDelegate for a new MBeanServer.</source>
          <target state="translated">이 메소드는 새로운 MBeanServer에 대한 새로운 MBeanServerDelegate를 생성합니다.</target>
        </trans-unit>
        <trans-unit id="bed9906b1f8929561794f9981e9f989e7b4781de" translate="yes" xml:space="preserve">
          <source>This method creates a new MBeanServerDelegate for a new MBeanServer. When creating a new MBeanServer the &lt;a href=&quot;mbeanserverfactory&quot;&gt;&lt;code&gt;MBeanServerFactory&lt;/code&gt;&lt;/a&gt; first calls this method in order to create a new MBeanServerDelegate.</source>
          <target state="translated">이 메소드는 새로운 MBeanServer를위한 새로운 MBeanServerDelegate를 작성합니다. 새로운 MBeanServer를 작성시 &lt;a href=&quot;mbeanserverfactory&quot;&gt; &lt;code&gt;MBeanServerFactory&lt;/code&gt; &lt;/a&gt; 먼저 새 MBeanServerDelegate를을 생성하기 위해이 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="6468f34ccbac98fc3854db7cffa8f4be6c6028de" translate="yes" xml:space="preserve">
          <source>This method creates a predicate that behaves as if it creates a matcher from the input sequence and then calls &lt;code&gt;find&lt;/code&gt;, for example a predicate of the form:</source>
          <target state="translated">이 메서드는 입력 시퀀스에서 매처를 생성하는 것처럼 동작 하는 조건자를 생성 한 다음 &lt;code&gt;find&lt;/code&gt; 를 호출 합니다 (예 : 다음 형식의 조건 자).</target>
        </trans-unit>
        <trans-unit id="78a16783512f805ad21d43d54ea02b6449fda80e" translate="yes" xml:space="preserve">
          <source>This method creates a predicate that behaves as if it creates a matcher from the input sequence and then calls &lt;code&gt;matches&lt;/code&gt;, for example a predicate of the form:</source>
          <target state="translated">이 메서드는 입력 시퀀스에서 매처를 생성하는 것처럼 동작 하는 조건자를 생성 한 다음 &lt;code&gt;matches&lt;/code&gt; 를 호출 합니다 (예 : 다음 형식의 조건 자).</target>
        </trans-unit>
        <trans-unit id="9ea803ee70e1400ed3818468ce56c18d0b33f1b8" translate="yes" xml:space="preserve">
          <source>This method creates an instance of the XMLEventAllocator.</source>
          <target state="translated">이 메서드는 XMLEventAllocator의 인스턴스를 만듭니다.</target>
        </trans-unit>
        <trans-unit id="cc0ec02bce584b4a5320d012febd78367e2c2b41" translate="yes" xml:space="preserve">
          <source>This method creates an instance of the XMLEventAllocator. This allows the XMLInputFactory to allocate a new instance per reader.</source>
          <target state="translated">이 메서드는 XMLEventAllocator의 인스턴스를 만듭니다. 이렇게하면 XMLInputFactory가 판독기 당 새 인스턴스를 할당 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="240e1595b12fbf49cf9126d9525558e418a5e11e" translate="yes" xml:space="preserve">
          <source>This method deactivates the security context and creates an interprocess token which, when passed to &lt;a href=&quot;gssmanager#createContext(byte%5B%5D)&quot;&gt;&lt;code&gt;GSSManager.createContext&lt;/code&gt;&lt;/a&gt; in another process, will re-activate the context in the second process. Only a single instantiation of a given context may be active at any one time; a subsequent attempt by a context exporter to access the exported security context will fail.</source>
          <target state="translated">이 메소드는 보안 컨텍스트를 비활성화하고 다른 프로세스에서 &lt;a href=&quot;gssmanager#createContext(byte%5B%5D)&quot;&gt; &lt;code&gt;GSSManager.createContext&lt;/code&gt; &lt;/a&gt; 로 전달 될 때 두 번째 프로세스에서 컨텍스트를 다시 활성화 하는 프로세스 간 토큰을 생성합니다 . 주어진 컨텍스트의 단일 인스턴스화 만 한 번에 활성화 될 수 있습니다. 컨텍스트 내보내기가 내 보낸 보안 컨텍스트에 액세스하려는 후속 시도는 실패합니다.</target>
        </trans-unit>
        <trans-unit id="b6bcd4b8596622b5c825085a376773994f418477" translate="yes" xml:space="preserve">
          <source>This method declares a prefix in the current Namespace context; the prefix will remain in force until this context is popped, unless it is shadowed in a descendant context.</source>
          <target state="translated">이 메서드는 현재 네임 스페이스 컨텍스트에서 접두사를 선언합니다. 접두사는 하위 컨텍스트에 그림자가없는 한이 컨텍스트가 팝업 될 때까지 유효합니다.</target>
        </trans-unit>
        <trans-unit id="88761bfb87eabecfd4e636cc525f40d9e9deede0" translate="yes" xml:space="preserve">
          <source>This method defines a package in this class loader corresponding to the package of the &lt;code&gt;Class&lt;/code&gt; (if such a package has not already been defined in this class loader). The name of the defined package is derived from the &lt;a href=&quot;#binary-name&quot;&gt;binary name&lt;/a&gt; of the class specified by the byte array &lt;code&gt;b&lt;/code&gt;. Other properties of the defined package are as specified by &lt;a href=&quot;package&quot;&gt;&lt;code&gt;Package&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법의 패키지에 해당하는이 클래스 로더의 패키지 정의 &lt;code&gt;Class&lt;/code&gt; (예 : 패키지가 이미이 클래스 로더에 정의되어 있지 않은 경우). 정의 된 패키지의 이름은 바이트 배열 &lt;code&gt;b&lt;/code&gt; 로 지정된 클래스 의 &lt;a href=&quot;#binary-name&quot;&gt;이진 이름&lt;/a&gt; 에서 파생됩니다 . 정의 된 패키지의 다른 속성은 &lt;a href=&quot;package&quot;&gt; &lt;code&gt;Package&lt;/code&gt; 에서&lt;/a&gt; 지정한 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e4b8a6e84ce7db55c3f06614cad2a63db23a9e15" translate="yes" xml:space="preserve">
          <source>This method delegates to &lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;loadClass(String,String)&lt;/code&gt;&lt;/a&gt;, passing &lt;code&gt;null&lt;/code&gt; as the first argument and &lt;code&gt;name&lt;/code&gt; as the second argument.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#loadClass(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;loadClass(String,String)&lt;/code&gt; &lt;/a&gt; 위임 하여 첫 번째 인수로 &lt;code&gt;null&lt;/code&gt; 을 전달 하고 두 번째 인수로 &lt;code&gt;name&lt;/code&gt; 을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="25dd154e155822601a589b1e6b8e33c51e28a04f" translate="yes" xml:space="preserve">
          <source>This method delegates to the &lt;a href=&quot;rmiclassloaderspi#getClassAnnotation(java.lang.Class)&quot;&gt;&lt;code&gt;RMIClassLoaderSpi.getClassAnnotation(Class)&lt;/code&gt;&lt;/a&gt; method of the provider instance, passing &lt;code&gt;cl&lt;/code&gt; as the argument.</source>
          <target state="translated">이 메서드 는 공급자 인스턴스 의 &lt;a href=&quot;rmiclassloaderspi#getClassAnnotation(java.lang.Class)&quot;&gt; &lt;code&gt;RMIClassLoaderSpi.getClassAnnotation(Class)&lt;/code&gt; &lt;/a&gt; 메서드에 위임하여 &lt;code&gt;cl&lt;/code&gt; 을 인수로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="40bce0f44a339529989512d987e3420e457c50bc" translate="yes" xml:space="preserve">
          <source>This method delegates to the &lt;a href=&quot;rmiclassloaderspi#getClassLoader(java.lang.String)&quot;&gt;&lt;code&gt;RMIClassLoaderSpi.getClassLoader(String)&lt;/code&gt;&lt;/a&gt; method of the provider instance, passing &lt;code&gt;codebase&lt;/code&gt; as the argument.</source>
          <target state="translated">이 메서드 는 공급자 인스턴스 의 &lt;a href=&quot;rmiclassloaderspi#getClassLoader(java.lang.String)&quot;&gt; &lt;code&gt;RMIClassLoaderSpi.getClassLoader(String)&lt;/code&gt; &lt;/a&gt; 메서드에 위임하여 &lt;code&gt;codebase&lt;/code&gt; 를 인수로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="56d397a6b12f48e4195c4a8c43deca7c93858978" translate="yes" xml:space="preserve">
          <source>This method delegates to the &lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;RMIClassLoaderSpi.loadClass(String,String,ClassLoader)&lt;/code&gt;&lt;/a&gt; method of the provider instance, passing &lt;code&gt;codebase&lt;/code&gt; as the first argument, &lt;code&gt;name&lt;/code&gt; as the second argument, and &lt;code&gt;defaultLoader&lt;/code&gt; as the third argument.</source>
          <target state="translated">이 메서드 는 공급자 인스턴스 의 &lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;RMIClassLoaderSpi.loadClass(String,String,ClassLoader)&lt;/code&gt; &lt;/a&gt; 메서드에 위임하여 &lt;code&gt;codebase&lt;/code&gt; 를 첫 번째 인수로, &lt;code&gt;name&lt;/code&gt; 을 두 번째 인수로, &lt;code&gt;defaultLoader&lt;/code&gt; 를 세 번째 인수로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="be9d7b5e9cdfa8fa6e577784cff238e38fb49edf" translate="yes" xml:space="preserve">
          <source>This method delegates to the &lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;RMIClassLoaderSpi.loadClass(String,String,ClassLoader)&lt;/code&gt;&lt;/a&gt; method of the provider instance, passing &lt;code&gt;codebase&lt;/code&gt; as the first argument, &lt;code&gt;name&lt;/code&gt; as the second argument, and &lt;code&gt;null&lt;/code&gt; as the third argument.</source>
          <target state="translated">이 메서드 는 공급자 인스턴스 의 &lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;RMIClassLoaderSpi.loadClass(String,String,ClassLoader)&lt;/code&gt; &lt;/a&gt; 메서드에 위임하여 &lt;code&gt;codebase&lt;/code&gt; 를 첫 번째 인수로, &lt;code&gt;name&lt;/code&gt; 을 두 번째 인수로, &lt;code&gt;null&lt;/code&gt; 을 세 번째 인수로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="1807713d7184f8a7b230003b9a119a7995d270ce" translate="yes" xml:space="preserve">
          <source>This method delegates to the &lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;RMIClassLoaderSpi.loadClass(String,String,ClassLoader)&lt;/code&gt;&lt;/a&gt; method of the provider instance, passing the result of invoking &lt;a href=&quot;../../../../java.base/java/net/url#toString()&quot;&gt;&lt;code&gt;URL.toString()&lt;/code&gt;&lt;/a&gt; on the given URL (or &lt;code&gt;null&lt;/code&gt; if &lt;code&gt;codebase&lt;/code&gt; is null) as the first argument, &lt;code&gt;name&lt;/code&gt; as the second argument, and &lt;code&gt;null&lt;/code&gt; as the third argument.</source>
          <target state="translated">이 메소드받는 대표 &lt;a href=&quot;rmiclassloaderspi#loadClass(java.lang.String,java.lang.String,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;RMIClassLoaderSpi.loadClass(String,String,ClassLoader)&lt;/code&gt; &lt;/a&gt; 호출 한 결과 통과 바이더 인스턴스의 방법, &lt;a href=&quot;../../../../java.base/java/net/url#toString()&quot;&gt; &lt;code&gt;URL.toString()&lt;/code&gt; &lt;/a&gt; 지정된 URL에을 (또는 &lt;code&gt;null&lt;/code&gt; 의 경우 &lt;code&gt;codebase&lt;/code&gt; NULL의) 첫 번째 인수로, &lt;code&gt;name&lt;/code&gt; 등 두 번째 인수, 세 번째 인수는 &lt;code&gt;null&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="243fa7fd106a6da86b94f449e4f0b1a0b0c6f6ec" translate="yes" xml:space="preserve">
          <source>This method delegates to the &lt;a href=&quot;rmiclassloaderspi#loadProxyClass(java.lang.String,java.lang.String%5B%5D,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;RMIClassLoaderSpi.loadProxyClass(String,String[],ClassLoader)&lt;/code&gt;&lt;/a&gt; method of the provider instance, passing &lt;code&gt;codebase&lt;/code&gt; as the first argument, &lt;code&gt;interfaces&lt;/code&gt; as the second argument, and &lt;code&gt;defaultLoader&lt;/code&gt; as the third argument.</source>
          <target state="translated">이 메서드 는 공급자 인스턴스 의 &lt;a href=&quot;rmiclassloaderspi#loadProxyClass(java.lang.String,java.lang.String%5B%5D,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;RMIClassLoaderSpi.loadProxyClass(String,String[],ClassLoader)&lt;/code&gt; &lt;/a&gt; 메서드에 위임하여 &lt;code&gt;codebase&lt;/code&gt; 를 첫 번째 인수로, &lt;code&gt;interfaces&lt;/code&gt; 를 두 번째 인수로, &lt;code&gt;defaultLoader&lt;/code&gt; 를 세 번째 인수로 전달합니다.</target>
        </trans-unit>
        <trans-unit id="d431575ba426919d2f1021e8e8d75877e5899e7c" translate="yes" xml:space="preserve">
          <source>This method determines whether the current element is in the range specified.</source>
          <target state="translated">이 메서드는 현재 요소가 지정된 범위에 있는지 여부를 확인합니다.</target>
        </trans-unit>
        <trans-unit id="9cb43f5e692129de5564aaab7ae1cf49dcf4520c" translate="yes" xml:space="preserve">
          <source>This method determines whether the current element is in the range specified. When no range is specified, the range is initialized to be the entire document. inRange() returns true if the range specified intersects with the element's range.</source>
          <target state="translated">이 메서드는 현재 요소가 지정된 범위에 있는지 여부를 확인합니다. 범위를 지정하지 않으면 범위가 전체 문서로 초기화됩니다. inRange ()는 지정된 범위가 요소의 범위와 교차하는 경우 true를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="503bb0e0f19f77204d3e26371951b3cbbe9b2955" translate="yes" xml:space="preserve">
          <source>This method differs from &lt;a href=&quot;../../time/duration#toNanos()&quot;&gt;&lt;code&gt;Duration.toNanos()&lt;/code&gt;&lt;/a&gt; in that it does not throw &lt;a href=&quot;../../lang/arithmeticexception&quot;&gt;&lt;code&gt;ArithmeticException&lt;/code&gt;&lt;/a&gt; on numeric overflow.</source>
          <target state="translated">이 메서드는 숫자 오버플로에 대해 &lt;a href=&quot;../../lang/arithmeticexception&quot;&gt; &lt;code&gt;ArithmeticException&lt;/code&gt; &lt;/a&gt; 을 throw하지 않는다는 점에서 &lt;a href=&quot;../../time/duration#toNanos()&quot;&gt; &lt;code&gt;Duration.toNanos()&lt;/code&gt; &lt;/a&gt; 와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="e6217d88652482916af1a176c3b94c9c0d618d7c" translate="yes" xml:space="preserve">
          <source>This method differs from the &lt;a href=&quot;rectangularshape#getBounds()&quot;&gt;&lt;code&gt;getBounds&lt;/code&gt;&lt;/a&gt; in that the &lt;code&gt;getBounds&lt;/code&gt; method only returns the bounds of the enclosing ellipse of this &lt;code&gt;Arc2D&lt;/code&gt; without considering the starting and ending angles of this &lt;code&gt;Arc2D&lt;/code&gt;.</source>
          <target state="translated">로부터이 메소드는 다릅니다 &lt;a href=&quot;rectangularshape#getBounds()&quot;&gt; &lt;code&gt;getBounds&lt;/code&gt; &lt;/a&gt; 점에서 &lt;code&gt;getBounds&lt;/code&gt; 메소드는 이것의 둘러싸는 타원의 경계를 반환 &lt;code&gt;Arc2D&lt;/code&gt; 시작을 고려하고 이것의 각도를 종료하지 않고 &lt;code&gt;Arc2D&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="e05d72a179b028472a2c491a28a1c40ca78f832f" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.OffsetDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 날짜-시간의 순간 만 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.OffsetDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이는 &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt; 를 사용하는 것과 같습니다. .</target>
        </trans-unit>
        <trans-unit id="a95810fcd150d876302b2538f0011def691efc42" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.OffsetDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 날짜-시간의 순간 만 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.OffsetDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이것은 &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt; 를 사용하는 것과 같습니다 . .</target>
        </trans-unit>
        <trans-unit id="e147669356b62e010541584db96b08793daff662" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.OffsetDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 날짜-시간의 순간 만 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.OffsetDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이것은 &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt; 를 사용하는 것과 같습니다 . .</target>
        </trans-unit>
        <trans-unit id="8deaacfbe410d059d0ad4fb6445dfc3f98f99857" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.OffsetDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying instant.</source>
          <target state="translated">이 메서드는 기본 순간 만 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.OffsetDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="64deb8c1ec8ff978d9a9c9ced5f47266400d0a80" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.OffsetTime)&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the time. This is equivalent to converting both times to an instant using the same date and comparing the instants.</source>
          <target state="translated">이 메소드는 시간의 순간만을 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.OffsetTime)&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이것은 동일한 날짜를 사용하고 순간을 비교하는 두 시간을 순간으로 변환하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="eafb0c41c6db1e63c84ada713a6949fd948981da" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.OffsetTime)&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the time. This is equivalent to converting both times to an instant using the same date and comparing the instants.</source>
          <target state="translated">이 메서드는 시간의 순간 만 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.OffsetTime)&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이것은 동일한 날짜를 사용하고 순간을 비교하는 두 시간을 순간으로 변환하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="7ded6f5945dd24118a0001490dfed25e31bce36a" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position. This is equivalent to using &lt;code&gt;date1.toEpochDay() &amp;gt; date2.toEpochDay()&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 연대기가 아닌 기본 날짜 만 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 타임 라인 위치에 따라 다른 달력 시스템의 날짜를 비교할 수 있습니다. 이것은 &lt;code&gt;date1.toEpochDay() &amp;gt; date2.toEpochDay()&lt;/code&gt; 를 사용하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="4b83483aed8055a20f2e3ae66ddfce32120e1a6e" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position. This is equivalent to using &lt;code&gt;date1.toEpochDay() &amp;lt; date2.toEpochDay()&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 연대기가 아닌 기본 날짜 만 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 타임 라인 위치에 따라 다른 달력 시스템의 날짜를 비교할 수 있습니다. 이것은 &lt;code&gt;date1.toEpochDay() &amp;lt; date2.toEpochDay()&lt;/code&gt; 를 사용하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="a25464eb19cbf4f40a0c9d6f579f44c12e949108" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position. This is equivalent to using &lt;code&gt;date1.toEpochDay() == date2.toEpochDay()&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 연대기가 아닌 기본 날짜 만 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDate)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 타임 라인 위치에 따라 다른 달력 시스템의 날짜를 비교할 수 있습니다. 이것은 &lt;code&gt;date1.toEpochDay() == date2.toEpochDay()&lt;/code&gt; 를 사용하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="5e878ede181115290bcfc6f4f32e97c63f8887aa" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and time and not the chronology. This allows date-times in different calendar systems to be compared based on the time-line position.</source>
          <target state="translated">이 방법은 연대기가 아닌 기본 날짜와 시간 만 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 타임 라인 위치에 따라 다른 달력 시스템의 날짜-시간을 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9bf4dd3918f27c219f99b7d88ceb4ed3034de052" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date-time and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position.</source>
          <target state="translated">이 메서드는 연대기가 아닌 기본 날짜-시간 만 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.chrono.ChronoLocalDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 타임 라인 위치에 따라 다른 달력 시스템의 날짜를 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="089a505f5df44176a312d0c72c836bb5a18d2ef3" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">이 방법은 날짜-시간의 순간만을 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이는 &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt; 를 사용하는 것과 같습니다. .</target>
        </trans-unit>
        <trans-unit id="8529134b4f94eb68c2d21e23494147582f563ff5" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">이 방법은 날짜-시간의 순간만을 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이것은 &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt; 를 사용하는 것과 같습니다 . .</target>
        </trans-unit>
        <trans-unit id="a3ef79b65f506a9e19a502b66c4753909e7759c9" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">이 방법은 날짜-시간의 순간만을 비교한다는 점 에서 &lt;a href=&quot;#compareTo(java.time.chrono.ChronoZonedDateTime)&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이것은 &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt; 를 사용하는 것과 같습니다 . .</target>
        </trans-unit>
        <trans-unit id="c8a8a426401075bfebe76bd1131b78e727507772" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position. This is equivalent to using &lt;code&gt;date1.toEpochDay() &amp;gt; date2.toEpochDay()&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 연대기가 아닌 기본 날짜 만 비교한다는 점 에서 &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 다른 달력 시스템의 날짜를 타임 라인 위치를 기준으로 비교할 수 있습니다. 이것은 &lt;code&gt;date1.toEpochDay() &amp;gt; date2.toEpochDay()&lt;/code&gt; 를 사용하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="d865ce7bbce8731f8919dcc191c99881dc0763b3" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position. This is equivalent to using &lt;code&gt;date1.toEpochDay() &amp;lt; date2.toEpochDay()&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 연대기가 아닌 기본 날짜 만 비교한다는 점 에서 &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 다른 달력 시스템의 날짜를 타임 라인 위치를 기준으로 비교할 수 있습니다. 이것은 &lt;code&gt;date1.toEpochDay() &amp;lt; date2.toEpochDay()&lt;/code&gt; 를 사용하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e67dfebd9078f7bbd8a4464632831ff22f4db473" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position. This is equivalent to using &lt;code&gt;date1.toEpochDay() == date2.toEpochDay()&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 연대기가 아닌 기본 날짜 만 비교한다는 점 에서 &lt;a href=&quot;chronolocaldate#compareTo-java.time.chrono.ChronoLocalDate-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDate)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 다른 달력 시스템의 날짜를 타임 라인 위치를 기준으로 비교할 수 있습니다. 이것은 &lt;code&gt;date1.toEpochDay() == date2.toEpochDay()&lt;/code&gt; 를 사용하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="73af9e0f5eb7c76b238b4f76e4874c7da82c1c8e" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date and time and not the chronology. This allows date-times in different calendar systems to be compared based on the time-line position.</source>
          <target state="translated">이 메소드는 연대기가 아닌 기본 날짜와 시간 만 비교한다는 점 에서 &lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 다른 캘린더 시스템의 날짜-시간을 타임 라인 위치를 기준으로 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5e422892980a4143434c4a33271842f6ca101b62" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying date-time and not the chronology. This allows dates in different calendar systems to be compared based on the time-line position.</source>
          <target state="translated">이 메소드는 연대기가 아니라 기본 날짜-시간 만 비교한다는 점 에서 &lt;a href=&quot;chronolocaldatetime#compareTo-java.time.chrono.ChronoLocalDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoLocalDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이를 통해 다른 달력 시스템의 날짜를 타임 라인 위치를 기준으로 비교할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="69679f35e3a14abac97b704557a6a28c58d1d819" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;chronozoneddatetime#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 날짜-시간의 순간 만 비교한다는 점 에서 &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;chronozoneddatetime#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt; 비교와 다릅니다 . 이것은 &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt; 를 사용하는 것과 같습니다. .</target>
        </trans-unit>
        <trans-unit id="2a310bdbafb8caf48753a75e15e9d61ad7c49945" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 날짜-시간의 순간 만 비교한다는 점 에서 &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이것은 &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt; 를 사용하는 것과 같습니다 . .</target>
        </trans-unit>
        <trans-unit id="2efc5d8ad2ddce9136c3cbf23a4408d68bae821e" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 날짜-시간의 순간 만 비교한다는 점 에서 &lt;a href=&quot;chronozoneddatetime#compareTo-java.time.chrono.ChronoZonedDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.chrono.ChronoZonedDateTime&amp;lt;?&amp;gt;)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이것은 &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt; 를 사용하는 것과 같습니다 . .</target>
        </trans-unit>
        <trans-unit id="1c0acca56b765b2bc1764861b9d596c46bdc9784" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsetdatetime#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 날짜-시간의 순간 만 비교한다는 점 에서 &lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;offsetdatetime#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이것은 &lt;code&gt;dateTime1.toInstant().equals(dateTime2.toInstant());&lt;/code&gt; 를 사용하는 것과 같습니다. .</target>
        </trans-unit>
        <trans-unit id="95bd83ca10b6e2e579e7453880a4102248c15b52" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsetdatetime#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 날짜-시간의 순간 만 비교한다는 점 에서 &lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;offsetdatetime#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이것은 &lt;code&gt;dateTime1.toInstant().isAfter(dateTime2.toInstant());&lt;/code&gt; 를 사용하는 것과 같습니다 . .</target>
        </trans-unit>
        <trans-unit id="b9b67c6d81b67989e43d00b4d9e11db5649e4712" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the date-time. This is equivalent to using &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 날짜-시간의 순간 만 비교한다는 점 에서 &lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이것은 &lt;code&gt;dateTime1.toInstant().isBefore(dateTime2.toInstant());&lt;/code&gt; 를 사용하는 것과 같습니다 . .</target>
        </trans-unit>
        <trans-unit id="276e0dc62cdc78db144c25c794c005156b01d95b" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt;&lt;/a&gt; in that it only compares the underlying instant.</source>
          <target state="translated">이 메소드는 기본 인스턴트 만 비교한다는 점 에서 &lt;a href=&quot;offsetdatetime#compareTo-java.time.OffsetDateTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetDateTime)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 .</target>
        </trans-unit>
        <trans-unit id="2b4a8edd55adb2adcee3e7f94c3d11b7b90edd30" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsettime#compareTo-java.time.OffsetTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;offsettime#equals-java.lang.Object-&quot;&gt;&lt;code&gt;equals(java.lang.Object)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the time. This is equivalent to converting both times to an instant using the same date and comparing the instants.</source>
          <target state="translated">이 메소드는 시간의 순간 만 비교한다는 점 에서 &lt;a href=&quot;offsettime#compareTo-java.time.OffsetTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;offsettime#equals-java.lang.Object-&quot;&gt; &lt;code&gt;equals(java.lang.Object)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이는 동일한 날짜를 사용하여 두 시간을 순간으로 변환하고 순간을 비교하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e4e5de1c223ead70e6f5f63ebf13ad79c5ab57cd" translate="yes" xml:space="preserve">
          <source>This method differs from the comparison in &lt;a href=&quot;offsettime#compareTo-java.time.OffsetTime-&quot;&gt;&lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt;&lt;/a&gt; in that it only compares the instant of the time. This is equivalent to converting both times to an instant using the same date and comparing the instants.</source>
          <target state="translated">이 메소드는 시간의 순간 만 비교한다는 점 에서 &lt;a href=&quot;offsettime#compareTo-java.time.OffsetTime-&quot;&gt; &lt;code&gt;compareTo(java.time.OffsetTime)&lt;/code&gt; &lt;/a&gt; 의 비교와 다릅니다 . 이는 동일한 날짜를 사용하여 두 시간을 순간으로 변환하고 순간을 비교하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="81446ff3de29ce70008e0ee03dc5c04c4486f1e7" translate="yes" xml:space="preserve">
          <source>This method discovers the attributes and operations that an MBean exposes for management.</source>
          <target state="translated">이 메소드는 MBean이 관리를 위해 공개하는 속성 및 조작을 감지합니다.</target>
        </trans-unit>
        <trans-unit id="5c4b9860d67fd6071459494762d41825a9131b33" translate="yes" xml:space="preserve">
          <source>This method does &lt;em&gt;not&lt;/em&gt; report which of these caused the method to return. Callers should re-check the conditions which caused the thread to park in the first place. Callers may also determine, for example, the interrupt status of the thread upon return.</source>
          <target state="translated">이 메소드는 메소드를 리턴 한 원인을보고 하지 &lt;em&gt;않습니다&lt;/em&gt; . 발신자는 실이 먼저 멈춘 원인을 다시 확인해야합니다. 호출자는 또한 예를 들어 리턴시 스레드의 인터럽트 상태를 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4bcd6d36fb527564bc407ca010b1b0701d5a9c43" translate="yes" xml:space="preserve">
          <source>This method does &lt;em&gt;not&lt;/em&gt; report which of these caused the method to return. Callers should re-check the conditions which caused the thread to park in the first place. Callers may also determine, for example, the interrupt status of the thread, or the current time upon return.</source>
          <target state="translated">이 메소드는 메소드를 리턴 한 원인을보고 하지 &lt;em&gt;않습니다&lt;/em&gt; . 발신자는 실이 먼저 멈춘 원인을 다시 확인해야합니다. 호출자는 예를 들어 스레드의 인터럽트 상태 또는 리턴시 현재 시간을 결정할 수도 있습니다.</target>
        </trans-unit>
        <trans-unit id="f230e6ae839a96b93aabb4880473f2a0be743de0" translate="yes" xml:space="preserve">
          <source>This method does &lt;em&gt;not&lt;/em&gt; report which of these caused the method to return. Callers should re-check the conditions which caused the thread to park in the first place. Callers may also determine, for example, the interrupt status of the thread, or the elapsed time upon return.</source>
          <target state="translated">이 메소드는 메소드를 리턴 한 원인을보고 하지 &lt;em&gt;않습니다&lt;/em&gt; . 발신자는 실이 먼저 멈춘 원인을 다시 확인해야합니다. 호출자는 또한 예를 들어 스레드의 인터럽트 상태 또는 리턴시 경과 시간을 결정할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="28f335c86563c754acfdbd40ac1e41a91b21ad68" translate="yes" xml:space="preserve">
          <source>This method does &lt;em&gt;not&lt;/em&gt; translate Unicode escapes such as &quot;&lt;code&gt;\u2022&lt;/code&gt;&quot;. Unicode escapes are translated by the Java compiler when reading input characters and are not part of the string literal specification.</source>
          <target state="translated">이 메서드는 &quot; &lt;code&gt;\u2022&lt;/code&gt; &quot; 와 같은 유니 코드 이스케이프를 번역 하지 &lt;em&gt;않습니다&lt;/em&gt; . 유니 코드 이스케이프는 입력 문자를 읽을 때 Java 컴파일러에 의해 번역되며 문자열 리터럴 사양의 일부가 아닙니다.</target>
        </trans-unit>
        <trans-unit id="296a681616b3fe87058a60d901f78cfd8684f909" translate="yes" xml:space="preserve">
          <source>This method does custom mapping if the array elements are a UDT and the given type map has an entry for that UDT. Custom mapping is recursive, meaning that if, for instance, an element of an SQL structured type is an SQL structured type that itself has an element that is an SQL structured type, each structured type that has a custom mapping will be mapped according to the given type map.</source>
          <target state="translated">이 메서드는 배열 요소가 UDT이고 지정된 유형 맵에 해당 UDT에 대한 항목이있는 경우 사용자 지정 매핑을 수행합니다. 사용자 지정 매핑은 재귀 적입니다. 즉, 예를 들어 SQL 구조화 된 유형의 요소가 자체적으로 SQL 구조화 된 유형 인 요소가있는 SQL 구조화 된 유형 인 경우 사용자 지정 매핑이있는 각 구조화 된 유형은 다음에 따라 매핑됩니다. 주어진 유형 맵.</target>
        </trans-unit>
        <trans-unit id="fab16aba06cb87779b43364062c9208954eabe14" translate="yes" xml:space="preserve">
          <source>This method does not accept the network interface on which to join the multicast group.</source>
          <target state="translated">이 방법은 멀티 캐스트 그룹에 가입 할 네트워크 인터페이스를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e56bdbaf75c90317927e46f41f8030ff720d3a10" translate="yes" xml:space="preserve">
          <source>This method does not accept the network interface on which to join the multicast group. Use &lt;a href=&quot;#joinGroup(java.net.SocketAddress,java.net.NetworkInterface)&quot;&gt;&lt;code&gt;joinGroup(SocketAddress, NetworkInterface)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">이 방법은 멀티 캐스트 그룹에 가입 할 네트워크 인터페이스를 허용하지 않습니다. 대신 &lt;a href=&quot;#joinGroup(java.net.SocketAddress,java.net.NetworkInterface)&quot;&gt; &lt;code&gt;joinGroup(SocketAddress, NetworkInterface)&lt;/code&gt; &lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="dd9980c7d65d4f7b5250987febca912e5cc04639" translate="yes" xml:space="preserve">
          <source>This method does not accept the network interface on which to leave the multicast group.</source>
          <target state="translated">이 방법은 멀티 캐스트 그룹에서 탈퇴 할 네트워크 인터페이스를 허용하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c740f252095b60681a2933eeaab485a5a8968801" translate="yes" xml:space="preserve">
          <source>This method does not accept the network interface on which to leave the multicast group. Use &lt;a href=&quot;#leaveGroup(java.net.SocketAddress,java.net.NetworkInterface)&quot;&gt;&lt;code&gt;leaveGroup(SocketAddress, NetworkInterface)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">이 방법은 멀티 캐스트 그룹에서 탈퇴 할 네트워크 인터페이스를 허용하지 않습니다. 대신 &lt;a href=&quot;#leaveGroup(java.net.SocketAddress,java.net.NetworkInterface)&quot;&gt; &lt;code&gt;leaveGroup(SocketAddress, NetworkInterface)&lt;/code&gt; &lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="7ec668043a6e942ad250bbeefecd6bb8d8002b6b" translate="yes" xml:space="preserve">
          <source>This method does not access the file system; the path may not locate a file that exists. Eliminating &quot;&lt;code&gt;..&lt;/code&gt;&quot; and a preceding name from a path may result in the path that locates a different file than the original path. This can arise when the preceding name is a symbolic link.</source>
          <target state="translated">이 방법은 파일 시스템에 액세스하지 않습니다. 경로가 존재하는 파일을 찾지 못할 수 있습니다. 경로에서 &quot; &lt;code&gt;..&lt;/code&gt; &quot;및 선행 이름을 제거 하면 원래 경로와 다른 파일을 찾는 경로가 생성 될 수 있습니다. 위의 이름이 기호 링크 인 경우 발생할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9e40f43f5275cd9b2cf9e39b15d8ee8b5b58ae2e" translate="yes" xml:space="preserve">
          <source>This method does not actually change the active Window as far as the native windowing system is concerned. It merely stores the value to be subsequently returned by &lt;code&gt;getActiveWindow()&lt;/code&gt;. Use &lt;code&gt;Component.requestFocus()&lt;/code&gt; or &lt;code&gt;Component.requestFocusInWindow()&lt;/code&gt; to change the active Window, subject to platform limitations.</source>
          <target state="translated">이 방법은 네이티브 윈도우 시스템에 관한 한 활성 윈도우를 실제로 변경하지 않습니다. &lt;code&gt;getActiveWindow()&lt;/code&gt; 의해 이후에 반환 될 값을 저장하기 만합니다 . 사용 &lt;code&gt;Component.requestFocus()&lt;/code&gt; 또는 &lt;code&gt;Component.requestFocusInWindow()&lt;/code&gt; , 플랫폼의 제한 사항이 적용을 활성 창을 변경합니다.</target>
        </trans-unit>
        <trans-unit id="48c31ae9e2272e95342caa210e4b2d45146a976a" translate="yes" xml:space="preserve">
          <source>This method does not actually change the focused Window as far as the native windowing system is concerned. It merely stores the value to be subsequently returned by &lt;code&gt;getFocusedWindow()&lt;/code&gt;. Use &lt;code&gt;Component.requestFocus()&lt;/code&gt; or &lt;code&gt;Component.requestFocusInWindow()&lt;/code&gt; to change the focused Window, subject to platform limitations.</source>
          <target state="translated">이 방법은 네이티브 윈도우 시스템에 관한 한 실제로 포커스 된 윈도우를 변경하지 않습니다. &lt;code&gt;getFocusedWindow()&lt;/code&gt; 의해 이후에 반환 될 값을 저장하기 만합니다 . 사용 &lt;code&gt;Component.requestFocus()&lt;/code&gt; 또는 &lt;code&gt;Component.requestFocusInWindow()&lt;/code&gt; (가) 윈도우 플랫폼의 제한에 따라 초점을 맞춘 변경 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="29efc8d1d0a975c0106803bf392fa8e4c9140058" translate="yes" xml:space="preserve">
          <source>This method does not actually erase the data in the buffer, but it is named as if it did because it will most often be used in situations in which that might as well be the case.</source>
          <target state="translated">이 방법은 실제로 버퍼의 데이터를 지우지는 않지만 그럴 수있는 상황에서 가장 자주 사용되기 때문에 마치 마치 마치 마치 이름이 지정됩니다.</target>
        </trans-unit>
        <trans-unit id="13e7d2a2f4b73611ac0457aaf336b3f091c4bd91" translate="yes" xml:space="preserve">
          <source>This method does not actually set the focus to the specified Component. It merely stores the value to be subsequently returned by &lt;code&gt;getFocusOwner()&lt;/code&gt;. Use &lt;code&gt;Component.requestFocus()&lt;/code&gt; or &lt;code&gt;Component.requestFocusInWindow()&lt;/code&gt; to change the focus owner, subject to platform limitations.</source>
          <target state="translated">이 메서드는 실제로 지정된 구성 요소에 포커스를 설정하지 않습니다. &lt;code&gt;getFocusOwner()&lt;/code&gt; 나중에 반환 할 값을 저장하기 만합니다 . 플랫폼 제한에 따라 포커스 소유자를 변경 하려면 &lt;code&gt;Component.requestFocus()&lt;/code&gt; 또는 &lt;code&gt;Component.requestFocusInWindow()&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="710eb7d58c81047ff9568eaa375e5ee54de93791" translate="yes" xml:space="preserve">
          <source>This method does not actually set the focus to the specified Component. It merely stores the value to be subsequently returned by &lt;code&gt;getPermanentFocusOwner()&lt;/code&gt;. Use &lt;code&gt;Component.requestFocus()&lt;/code&gt; or &lt;code&gt;Component.requestFocusInWindow()&lt;/code&gt; to change the focus owner, subject to platform limitations.</source>
          <target state="translated">이 메서드는 실제로 지정된 구성 요소에 포커스를 설정하지 않습니다. &lt;code&gt;getPermanentFocusOwner()&lt;/code&gt; 의해 이후에 반환 될 값만 저장합니다 . 플랫폼 제한에 따라 포커스 소유자를 변경 하려면 &lt;code&gt;Component.requestFocus()&lt;/code&gt; 또는 &lt;code&gt;Component.requestFocusInWindow()&lt;/code&gt; 를 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="d0462f8cd40a193807741b2a955105e488b1a6dc" translate="yes" xml:space="preserve">
          <source>This method does not attempt to locate &lt;code&gt;ImageReader&lt;/code&gt;s that can read directly from a &lt;code&gt;File&lt;/code&gt;; that may be accomplished using &lt;code&gt;IIORegistry&lt;/code&gt; and &lt;code&gt;ImageReaderSpi&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;File&lt;/code&gt; 로부터 직접 읽을 수있는 &lt;code&gt;ImageReader&lt;/code&gt; 를 찾으려고하지 않습니다 . &lt;code&gt;IIORegistry&lt;/code&gt; 및 &lt;code&gt;ImageReaderSpi&lt;/code&gt; 를 사용하여 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="f5028ce13fc5fa887cf07e88a999f30391cac7a8" translate="yes" xml:space="preserve">
          <source>This method does not attempt to locate &lt;code&gt;ImageReader&lt;/code&gt;s that can read directly from a &lt;code&gt;URL&lt;/code&gt;; that may be accomplished using &lt;code&gt;IIORegistry&lt;/code&gt; and &lt;code&gt;ImageReaderSpi&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;URL&lt;/code&gt; 로부터 직접 읽을 수있는 &lt;code&gt;ImageReader&lt;/code&gt; 를 찾지 않습니다 . &lt;code&gt;IIORegistry&lt;/code&gt; 및 &lt;code&gt;ImageReaderSpi&lt;/code&gt; 를 사용하여 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="08d84f5481057ffe75137ea92fd191d915f3dd45" translate="yes" xml:space="preserve">
          <source>This method does not attempt to locate &lt;code&gt;ImageReader&lt;/code&gt;s that can read directly from an &lt;code&gt;InputStream&lt;/code&gt;; that may be accomplished using &lt;code&gt;IIORegistry&lt;/code&gt; and &lt;code&gt;ImageReaderSpi&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;InputStream&lt;/code&gt; 로부터 직접 읽을 수있는 &lt;code&gt;ImageReader&lt;/code&gt; 를 찾지 않습니다 . &lt;code&gt;IIORegistry&lt;/code&gt; 및 &lt;code&gt;ImageReaderSpi&lt;/code&gt; 를 사용하여 수행 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9f08760e220c331627a09f409aecc4d1ef380373" translate="yes" xml:space="preserve">
          <source>This method does not automatically escape characters that are illegal in URLs.</source>
          <target state="translated">이 방법은 URL에서 잘못된 문자를 자동으로 이스케이프하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="65240b95a4c361a7cb7f7fb6d928357b34b4e6db" translate="yes" xml:space="preserve">
          <source>This method does not automatically escape characters that are illegal in URLs. It is recommended that new code convert an abstract pathname into a URL by first converting it into a URI, via the &lt;a href=&quot;#toURI()&quot;&gt;&lt;code&gt;toURI&lt;/code&gt;&lt;/a&gt; method, and then converting the URI into a URL via the &lt;a href=&quot;../net/uri#toURL()&quot;&gt;&lt;code&gt;URI.toURL&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 방법은 URL에서 잘못된 문자를 자동으로 이스케이프하지 않습니다. 그것은하는 것이 좋습니다 새로운 코드로 변환 먼저 통해하는 URI로 변환하여 URL에 추상 패스 &lt;a href=&quot;#toURI()&quot;&gt; &lt;code&gt;toURI&lt;/code&gt; &lt;/a&gt; 를 통해 URL에 URI를 변환 한 후 방법 및 &lt;a href=&quot;../net/uri#toURL()&quot;&gt; &lt;code&gt;URI.toURL&lt;/code&gt; 의&lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="fac3576c4d1c22034682c222249823c14a504b13" translate="yes" xml:space="preserve">
          <source>This method does not block. An invocation always returns immediately, either having acquired a lock on the requested region or having failed to do so. If it fails to acquire a lock because an overlapping lock is held by another program then it returns &lt;code&gt;null&lt;/code&gt;. If it fails to acquire a lock for any other reason then an appropriate exception is thrown.</source>
          <target state="translated">이 방법은 차단되지 않습니다. 요청 된 영역에서 잠금을 획득했거나 실패한 경우 항상 호출이 즉시 리턴됩니다. 겹치는 잠금이 다른 프로그램에 의해 보류되어 잠금을 획득하지 못하면 &lt;code&gt;null&lt;/code&gt; 을 리턴합니다 . 다른 이유로 잠금을 획득하지 못하면 적절한 예외가 발생합니다.</target>
        </trans-unit>
        <trans-unit id="739f6c4ec447092dad0768d6522ca501b45abbd6" translate="yes" xml:space="preserve">
          <source>This method does not cause &lt;a href=&quot;module/configuration#resolveAndBind(java.lang.module.ModuleFinder,java.lang.module.ModuleFinder,java.util.Collection)&quot;&gt;&lt;code&gt;resolveAndBind&lt;/code&gt;&lt;/a&gt; to be re-run.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;module/configuration#resolveAndBind(java.lang.module.ModuleFinder,java.lang.module.ModuleFinder,java.util.Collection)&quot;&gt; &lt;code&gt;resolveAndBind&lt;/code&gt; &lt;/a&gt; 를 다시 실행 하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="776db5599544763bcd336fd173724144761f8aed" translate="yes" xml:space="preserve">
          <source>This method does not cause any initialization except that which would occur under the customary JVM semantics. In other words, redefining a class does not cause its initializers to be run. The values of static variables will remain as they were prior to the call.</source>
          <target state="translated">이 메소드는 일반적인 JVM 시맨틱에서 발생하는 것을 제외하고는 초기화를 일으키지 않습니다. 다시 말해, 클래스를 재정의해도 초기화 프로그램이 실행되지는 않습니다. 정적 변수의 값은 호출 이전과 동일하게 유지됩니다.</target>
        </trans-unit>
        <trans-unit id="0ff258b4775889f64e810ff1b7d83a79ed4e0058" translate="yes" xml:space="preserve">
          <source>This method does not cause the image to begin loading. An application must call &lt;code&gt;prepareImage&lt;/code&gt; to force the loading of an image.</source>
          <target state="translated">이 메서드는 이미지로드를 시작하지 않습니다. 애플리케이션은 &lt;code&gt;prepareImage&lt;/code&gt; 를 강제로로드하기 위해 prepareImage 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="502696048ce187593e01a1e92f213bb9e32421f6" translate="yes" xml:space="preserve">
          <source>This method does not cause the image to begin loading. An application must use the &lt;code&gt;prepareImage&lt;/code&gt; method to force the loading of an image.</source>
          <target state="translated">이 메서드는 이미지로드를 시작하지 않습니다. 애플리케이션은 &lt;code&gt;prepareImage&lt;/code&gt; 메소드를 사용하여 이미지 를 강제로로드 해야합니다 .</target>
        </trans-unit>
        <trans-unit id="d5091406f447744b13fff86c3f85275b25918ca2" translate="yes" xml:space="preserve">
          <source>This method does not change the value of &lt;code&gt;java.class.path&lt;/code&gt;&lt;a href=&quot;../../../../java.base/java/lang/system#getProperties()&quot;&gt;&lt;code&gt;system property&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;java.class.path&lt;/code&gt; &lt;a href=&quot;../../../../java.base/java/lang/system#getProperties()&quot;&gt; &lt;code&gt;system property&lt;/code&gt; &lt;/a&gt; 의 값을 변경하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="029519cbdd36144790d6e5a27b657276f60210ce" translate="yes" xml:space="preserve">
          <source>This method does not change the value of &lt;code&gt;java.class.path&lt;/code&gt;&lt;a href=&quot;../system#getProperties--&quot;&gt;&lt;code&gt;system property&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;java.class.path&lt;/code&gt; &lt;a href=&quot;../system#getProperties--&quot;&gt; &lt;code&gt;system property&lt;/code&gt; &lt;/a&gt; 의 값을 변경하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="98a36351e0ecacf5f32a3587fc6f8e0fd34e5a19" translate="yes" xml:space="preserve">
          <source>This method does not check if the given module reads this module.</source>
          <target state="translated">이 메소드는 주어진 모듈이이 모듈을 읽는지 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="5929427b54e2302f122807623467ff2382bc655b" translate="yes" xml:space="preserve">
          <source>This method does not check the arguments in any way. It is strongly recommended that &lt;code&gt;non-null&lt;/code&gt; values are supplied else exceptions may occur when &lt;code&gt;createValue&lt;/code&gt; is invoked on the returned object.</source>
          <target state="translated">이 메서드는 어떤 식 으로든 인수를 확인하지 않습니다. &lt;code&gt;non-null&lt;/code&gt; 이 아닌 값을 제공 하는 것이 좋습니다. 그렇지 않으면 반환 된 객체에서 &lt;code&gt;createValue&lt;/code&gt; 가 호출 될 때 예외가 발생할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="4e51d88576feeacca335af8660cdb2a0b4826955" translate="yes" xml:space="preserve">
          <source>This method does not check whether the requested class is accessible to its caller.</source>
          <target state="translated">이 메서드는 요청 된 클래스가 호출자가 액세스 할 수 있는지 여부를 확인하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="bf7c40198c08d4b4ad4f93e1073ba63c702e0f5d" translate="yes" xml:space="preserve">
          <source>This method does not close the &lt;a href=&quot;../../../java.base/java/io/inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../../../java.base/java/io/inputstream&quot;&gt; &lt;code&gt;InputStream&lt;/code&gt; 을&lt;/a&gt; 닫지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="59c45ec5a546bc59cc86f4993fa3d3302d1df3ef" translate="yes" xml:space="preserve">
          <source>This method does not do full validation of the resulting &lt;code&gt;QName&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 결과 &lt;code&gt;QName&lt;/code&gt; 의 전체 유효성 검사를 수행하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="d76e4056f05ca2e3ee1fb23c60bd22d376458e51" translate="yes" xml:space="preserve">
          <source>This method does not find any method with name &quot;&lt;code&gt;&amp;lt;init&amp;gt;&lt;/code&gt;&quot; or &quot;&lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt;&quot;.</source>
          <target state="translated">이 메소드는 이름이 &quot; &lt;code&gt;&amp;lt;init&amp;gt;&lt;/code&gt; &quot;또는 &quot; &lt;code&gt;&amp;lt;clinit&amp;gt;&lt;/code&gt; &quot;인 메소드를 찾지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="0867a150fdb37c1ec80e7b7ddc899966608b687a" translate="yes" xml:space="preserve">
          <source>This method does not modify internal state of this &lt;code&gt;Builder&lt;/code&gt; object and can be called multiple times to generate multiple &lt;code&gt;JarSigner&lt;/code&gt; objects. After this method is called, calling any method on this &lt;code&gt;Builder&lt;/code&gt; will have no effect on the newly built &lt;code&gt;JarSigner&lt;/code&gt; object.</source>
          <target state="translated">이 메서드는이 &lt;code&gt;Builder&lt;/code&gt; 개체 의 내부 상태를 수정하지 않으며 여러 번 호출하여 여러 &lt;code&gt;JarSigner&lt;/code&gt; 개체 를 생성 할 수 있습니다 . 이 메소드가 호출 된 후이 &lt;code&gt;Builder&lt;/code&gt; 메소드를 호출해도 새로 빌드 된 &lt;code&gt;JarSigner&lt;/code&gt; 오브젝트 에 영향을주지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="16cbeb9b6b383c135b9d4fffaae8b1ac2d8b8242" translate="yes" xml:space="preserve">
          <source>This method does not modify this channel's position. If the given position is greater than the file's current size then no bytes are transferred. If the source channel has a position then bytes are read starting at that position and then the position is incremented by the number of bytes read.</source>
          <target state="translated">이 방법은이 채널의 위치를 ​​수정하지 않습니다. 주어진 위치가 파일의 현재 크기보다 크면 바이트가 전송되지 않습니다. 소스 채널에 위치가 있으면 해당 위치에서 시작하여 바이트를 읽고 읽은 바이트 수만큼 위치를 증가시킵니다.</target>
        </trans-unit>
        <trans-unit id="2f6fb75afad10086596870671066a96fdeb3f586" translate="yes" xml:space="preserve">
          <source>This method does not modify this channel's position. If the given position is greater than the file's current size then no bytes are transferred. If the target channel has a position then bytes are written starting at that position and then the position is incremented by the number of bytes written.</source>
          <target state="translated">이 방법은이 채널의 위치를 ​​수정하지 않습니다. 주어진 위치가 파일의 현재 크기보다 크면 바이트가 전송되지 않습니다. 대상 채널에 위치가 있으면 해당 위치에서 시작하여 바이트가 기록되고 그 위치는 기록 된 바이트 수만큼 증가합니다.</target>
        </trans-unit>
        <trans-unit id="72c23e6263d976b1f680a7795906a0c4e0672722" translate="yes" xml:space="preserve">
          <source>This method does not offer real-time guarantees: It schedules the timeout as if by invoking the &lt;a href=&quot;../../lang/object#wait(long)&quot;&gt;&lt;code&gt;Object.wait(long)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 실시간 보장을 제공하지 않습니다. 마치 &lt;a href=&quot;../../lang/object#wait(long)&quot;&gt; &lt;code&gt;Object.wait(long)&lt;/code&gt; &lt;/a&gt; 메서드를 호출하는 것처럼 시간 초과를 예약합니다 .</target>
        </trans-unit>
        <trans-unit id="799659d1b1680f85ef944208828233ac6460e32e" translate="yes" xml:space="preserve">
          <source>This method does not offer real-time guarantees: It schedules the timeout as if by invoking the &lt;a href=&quot;../../lang/object#wait-long-&quot;&gt;&lt;code&gt;Object.wait(long)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드는 실시간 보증을 제공하지 않습니다. &lt;a href=&quot;../../lang/object#wait-long-&quot;&gt; &lt;code&gt;Object.wait(long)&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것처럼 시간 종료를 스케줄합니다 .</target>
        </trans-unit>
        <trans-unit id="47483e602bdd01b38a25c8886a05c4277118ad08" translate="yes" xml:space="preserve">
          <source>This method does not offer real-time guarantees: It schedules the timeout as if by invoking the &lt;a href=&quot;../object#wait(long)&quot;&gt;&lt;code&gt;Object.wait(long)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 실시간 보장을 제공하지 않습니다. 마치 &lt;a href=&quot;../object#wait(long)&quot;&gt; &lt;code&gt;Object.wait(long)&lt;/code&gt; &lt;/a&gt; 메서드를 호출하는 것처럼 시간 초과를 예약합니다 .</target>
        </trans-unit>
        <trans-unit id="423dc1fb5fa90201dd1f3386013a35af973fbed0" translate="yes" xml:space="preserve">
          <source>This method does not offer real-time guarantees: It schedules the timeout as if by invoking the &lt;a href=&quot;../object#wait-long-&quot;&gt;&lt;code&gt;Object.wait(long)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메소드는 실시간 보증을 제공하지 않습니다. &lt;a href=&quot;../object#wait-long-&quot;&gt; &lt;code&gt;Object.wait(long)&lt;/code&gt; &lt;/a&gt; 메소드를 호출하는 것처럼 시간 종료를 스케줄합니다 .</target>
        </trans-unit>
        <trans-unit id="5b3139d01998a4214e8fa2b187962b58a7805f7f" translate="yes" xml:space="preserve">
          <source>This method does not perform type-safe checking to determine if the returned type is the expected type as this responsibility is delegated to the UDT mapping as implemented by a &lt;code&gt;SQLData&lt;/code&gt; implementation.</source>
          <target state="translated">이 책임은 &lt;code&gt;SQLData&lt;/code&gt; 구현에 의해 구현 된대로 UDT 매핑에 위임되므로이 메서드는 반환 된 형식이 예상 형식인지 확인하기 위해 형식 안전 검사를 수행하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="8a94584d9f7a6f25ea37eb4f359358da8ae932f4" translate="yes" xml:space="preserve">
          <source>This method does not perform type-safe checking to determine if the returned type is the expected type; this responsibility is delegated to the UDT mapping as defined by a &lt;code&gt;SQLData&lt;/code&gt; implementation.</source>
          <target state="translated">이 메서드는 반환 된 형식이 예상 형식인지 확인하기 위해 형식 안전 검사를 수행하지 않습니다. 이 책임은 &lt;code&gt;SQLData&lt;/code&gt; 구현에 정의 된대로 UDT 매핑에 위임됩니다 .</target>
        </trans-unit>
        <trans-unit id="f63e96ea52e997b8e7efa71e312ecad05edb18aa" translate="yes" xml:space="preserve">
          <source>This method does not properly convert bytes into characters.</source>
          <target state="translated">이 메서드는 바이트를 문자로 제대로 변환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8e032a3094a39915f5d3643f41f97b0f7da21e9d" translate="yes" xml:space="preserve">
          <source>This method does not properly convert bytes into characters. As of JDK 1.1, the preferred way to do this is via the &lt;a href=&quot;#toString(java.lang.String)&quot;&gt;&lt;code&gt;toString(String charsetName)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#toString(java.nio.charset.Charset)&quot;&gt;&lt;code&gt;toString(Charset charset)&lt;/code&gt;&lt;/a&gt; method, which takes an encoding-name or charset argument, or the &lt;code&gt;toString()&lt;/code&gt; method, which uses the platform's default character encoding.</source>
          <target state="translated">이 메서드는 바이트를 문자로 제대로 변환하지 않습니다. JDK 1.1에서 선호하는 방법 은 encoding-name 또는 charset 인수 를 사용하는 &lt;a href=&quot;#toString(java.lang.String)&quot;&gt; &lt;code&gt;toString(String charsetName)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#toString(java.nio.charset.Charset)&quot;&gt; &lt;code&gt;toString(Charset charset)&lt;/code&gt; &lt;/a&gt; 메소드 또는 플랫폼의 기본 문자를 사용하는 &lt;code&gt;toString()&lt;/code&gt; 메소드를 사용하는 것입니다. 부호화.</target>
        </trans-unit>
        <trans-unit id="544372581daa3c4f898f6522f58a51d4a00bbee8" translate="yes" xml:space="preserve">
          <source>This method does not properly convert bytes into characters. As of JDK 1.1, the preferred way to do this is via the &lt;code&gt;String&lt;/code&gt; constructors that take a &lt;a href=&quot;../nio/charset/charset&quot;&gt;&lt;code&gt;Charset&lt;/code&gt;&lt;/a&gt;, charset name, or that use the platform's default charset.</source>
          <target state="translated">이 메서드는 바이트를 문자로 제대로 변환하지 않습니다. JDK 1.1에서 선호하는 방법 은 &lt;a href=&quot;../nio/charset/charset&quot;&gt; &lt;code&gt;Charset&lt;/code&gt; &lt;/a&gt; , charset 이름을 사용하거나 플랫폼의 기본 문자 집합 을 사용하는 &lt;code&gt;String&lt;/code&gt; 생성자 를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="1ea789d5f5b5c57ff102d10970b22e6f22a0062d" translate="yes" xml:space="preserve">
          <source>This method does not properly convert bytes to characters.</source>
          <target state="translated">이 메서드는 바이트를 문자로 올바르게 변환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e6d9b371108b739a941164269f12b49cd128ae9b" translate="yes" xml:space="preserve">
          <source>This method does not properly convert bytes to characters. As of JDK 1.1, the preferred way to read lines of text is via the &lt;code&gt;BufferedReader.readLine()&lt;/code&gt; method. Programs that use the &lt;code&gt;DataInputStream&lt;/code&gt; class to read lines can be converted to use the &lt;code&gt;BufferedReader&lt;/code&gt; class by replacing code of the form:</source>
          <target state="translated">이 메서드는 바이트를 문자로 올바르게 변환하지 않습니다. JDK 1.1에서 텍스트 줄을 읽는 데 선호되는 방법은 &lt;code&gt;BufferedReader.readLine()&lt;/code&gt; 메서드를 사용하는 것입니다. &lt;code&gt;DataInputStream&lt;/code&gt; 클래스를 사용하여 행을 읽는 프로그램 은 다음 형식의 코드를 대체 하여 &lt;code&gt;BufferedReader&lt;/code&gt; 클래스 를 사용하도록 변환 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="b7432fd7162333e764ce5a6da0930598f3742663" translate="yes" xml:space="preserve">
          <source>This method does not properly convert bytes to characters. see DataInputStream for the details and alternatives.</source>
          <target state="translated">이 메서드는 바이트를 문자로 올바르게 변환하지 않습니다. 세부 사항 및 대안은 DataInputStream을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="0a2f240b42a61e95aa85ce4bb61e86e63ea9b95b" translate="yes" xml:space="preserve">
          <source>This method does not properly convert characters into bytes.</source>
          <target state="translated">이 메서드는 문자를 바이트로 올바르게 변환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="35d697fca471ffff1987bb3cd921e1ff02318b44" translate="yes" xml:space="preserve">
          <source>This method does not properly convert characters into bytes. As of JDK 1.1, the preferred way to do this is via the &lt;a href=&quot;#getBytes()&quot;&gt;&lt;code&gt;getBytes()&lt;/code&gt;&lt;/a&gt; method, which uses the platform's default charset.</source>
          <target state="translated">이 메서드는 문자를 바이트로 올바르게 변환하지 않습니다. JDK 1.1에서이 작업을 수행하는 데 선호되는 방법 은 플랫폼의 기본 문자 집합을 사용하는 &lt;a href=&quot;#getBytes()&quot;&gt; &lt;code&gt;getBytes()&lt;/code&gt; &lt;/a&gt; 메서드를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="ef4e2b767949a4548f2c7dfa408e0075ab625240" translate="yes" xml:space="preserve">
          <source>This method does not reset this matcher. Matching starts on initiation of the terminal stream operation either at the beginning of this matcher's region, or, if the matcher has not since been reset, at the first character not matched by a previous match.</source>
          <target state="translated">이 메서드는이 매처를 재설정하지 않습니다. 일치는이 일치 자의 영역의 시작 부분에서 또는 일치자가 재설정되지 않은 경우 이전 일치와 일치하지 않는 첫 번째 문자에서 터미널 스트림 작업이 시작될 때 시작됩니다.</target>
        </trans-unit>
        <trans-unit id="bbb597bced40ad019088b4772b4ed2482b1397a3" translate="yes" xml:space="preserve">
          <source>This method does not return a &lt;a href=&quot;../virtualmachine&quot;&gt;&lt;code&gt;VirtualMachine&lt;/code&gt;&lt;/a&gt;, and, normally, returns before any target VM initiates a connection. The connected target is obtained through &lt;a href=&quot;#accept(java.util.Map)&quot;&gt;&lt;code&gt;accept(java.util.Map&amp;lt;java.lang.String, ? extends com.sun.jdi.connect.Connector.Argument&amp;gt;)&lt;/code&gt;&lt;/a&gt; (using the same argument map as is passed to this method).</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../virtualmachine&quot;&gt; &lt;code&gt;VirtualMachine&lt;/code&gt; 을&lt;/a&gt; 반환하지 않으며 일반적으로 대상 VM이 연결을 시작하기 전에 반환됩니다. 연결된 대상은 &lt;a href=&quot;#accept(java.util.Map)&quot;&gt; &lt;code&gt;accept(java.util.Map&amp;lt;java.lang.String, ? extends com.sun.jdi.connect.Connector.Argument&amp;gt;)&lt;/code&gt; &lt;/a&gt; 를 통해 얻습니다 ( 이 메소드에 전달 된 것과 동일한 인수 맵 사용).</target>
        </trans-unit>
        <trans-unit id="5570a434f19b86902951953a53543c81dd138c16" translate="yes" xml:space="preserve">
          <source>This method does not return a default parameter value, which cannot be determined until the node context is evaluated during the transformation process.</source>
          <target state="translated">이 메서드는 변환 프로세스 중에 노드 컨텍스트가 평가 될 때까지 확인할 수없는 기본 매개 변수 값을 반환하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="d7f15777525f7e8945fda482bbcf045a1555dcdb" translate="yes" xml:space="preserve">
          <source>This method does not return an &lt;code&gt;Optional&amp;lt;ClassLoader&amp;gt;&lt;/code&gt; because `null` must be used to represent the bootstrap class loader.</source>
          <target state="translated">부트 스트랩 클래스 로더를 나타내려면`null`을 사용해야하므로이 메서드는 &lt;code&gt;Optional&amp;lt;ClassLoader&amp;gt;&lt;/code&gt; 반환하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="ae8c5701c43f6ce666072de5f4390fd87667a45c" translate="yes" xml:space="preserve">
          <source>This method does not run the class initializer. The class initializer may run at a later time, as detailed in section 12.4 of the &lt;em&gt;The Java Language Specification&lt;/em&gt;.</source>
          <target state="translated">이 메서드는 클래스 이니셜 라이저를 실행하지 않습니다. 클래스 이니셜 라이저는 &lt;em&gt;Java 언어 사양의&lt;/em&gt; 섹션 12.4에 자세히 설명 된대로 나중에 실행할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="518fdf9a62a1842e132c618648de357ecd4be46f" translate="yes" xml:space="preserve">
          <source>This method does not start loading the images if they are not already loading.</source>
          <target state="translated">이 메서드는 이미지가 아직로드되지 않은 경우로드를 시작하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c0bfc1092de4583f7c47d0938c2509e60107b2f4" translate="yes" xml:space="preserve">
          <source>This method does not throw an IOException if an I/O error occurs while saving the property list.</source>
          <target state="translated">이 메서드는 속성 목록을 저장하는 동안 I / O 오류가 발생하는 경우 IOException을 throw하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="030784be9e5c5d1721015f5e36e6b54d932fef1e" translate="yes" xml:space="preserve">
          <source>This method does not throw an IOException if an I/O error occurs while saving the property list. The preferred way to save a properties list is via the &lt;code&gt;store(OutputStream out,
 String comments)&lt;/code&gt; method or the &lt;code&gt;storeToXML(OutputStream os, String comment)&lt;/code&gt; method.</source>
          <target state="translated">이 메서드는 속성 목록을 저장하는 동안 I / O 오류가 발생하는 경우 IOException을 throw하지 않습니다. 속성 목록을 저장하는 기본 방법은 &lt;code&gt;store(OutputStream out, String comments)&lt;/code&gt; 메서드 또는 &lt;code&gt;storeToXML(OutputStream os, String comment)&lt;/code&gt; 메서드를 사용하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="34e93ac3f68ab2b9b6af400e0d50626a5d6e720b" translate="yes" xml:space="preserve">
          <source>This method does not wait for actively executing tasks to terminate. Use &lt;a href=&quot;#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">이 메서드는 적극적으로 실행중인 작업이 종료 될 때까지 기다리지 않습니다. 그렇게 하려면 &lt;a href=&quot;#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="f0e031463de8f37b10593f4a2c786da5b71fa914" translate="yes" xml:space="preserve">
          <source>This method does not wait for actively executing tasks to terminate. Use &lt;a href=&quot;executorservice#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">이 메서드는 적극적으로 실행중인 작업이 종료 될 때까지 기다리지 않습니다. 그렇게 하려면 &lt;a href=&quot;executorservice#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="0cfca155e4fe2088fe576ea1b39061a44946c4ff" translate="yes" xml:space="preserve">
          <source>This method does not wait for actively executing tasks to terminate. Use &lt;a href=&quot;executorservice#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">이 방법은 적극적으로 실행중인 작업이 종료 될 때까지 기다리지 않습니다. &lt;a href=&quot;executorservice#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt; 위해 awaitTermination 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ae53fc019903cb63e96647acf94b63258487c8dc" translate="yes" xml:space="preserve">
          <source>This method does not wait for actively executing tasks to terminate. Use &lt;a href=&quot;threadpoolexecutor#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">이 방법은 적극적으로 실행중인 작업이 종료 될 때까지 기다리지 않습니다. &lt;a href=&quot;threadpoolexecutor#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt; 위해 awaitTermination 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="3925e6f51a78fc788c3de647dd1823c24cc018e1" translate="yes" xml:space="preserve">
          <source>This method does not wait for previously submitted tasks to complete execution. Use &lt;a href=&quot;#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">이 메서드는 이전에 제출 된 작업이 실행을 완료 할 때까지 기다리지 않습니다. 그렇게 하려면 &lt;a href=&quot;#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="ddab13986e0508b266c9f24a0e3ee4836b168f6c" translate="yes" xml:space="preserve">
          <source>This method does not wait for previously submitted tasks to complete execution. Use &lt;a href=&quot;executorservice#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">이 메서드는 이전에 제출 된 작업이 실행을 완료 할 때까지 기다리지 않습니다. 그렇게 하려면 &lt;a href=&quot;executorservice#awaitTermination(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt; 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="6845b8bb705b91430417229ccdbccb9324f99e41" translate="yes" xml:space="preserve">
          <source>This method does not wait for previously submitted tasks to complete execution. Use &lt;a href=&quot;executorservice#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">이 방법은 이전에 제출 된 작업이 실행을 완료하기를 기다리지 않습니다. &lt;a href=&quot;executorservice#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt; 위해 awaitTermination 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="d8b986bb2830801c1c0e469068e7bda1db7a0f3a" translate="yes" xml:space="preserve">
          <source>This method does not wait for previously submitted tasks to complete execution. Use &lt;a href=&quot;threadpoolexecutor#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;awaitTermination&lt;/code&gt;&lt;/a&gt; to do that.</source>
          <target state="translated">이 방법은 이전에 제출 된 작업이 실행을 완료하기를 기다리지 않습니다. &lt;a href=&quot;threadpoolexecutor#awaitTermination-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;awaitTermination&lt;/code&gt; &lt;/a&gt; 위해 awaitTermination 을 사용하십시오 .</target>
        </trans-unit>
        <trans-unit id="4f3e08068e290d1bd435b2f9f76451c0b488a2d2" translate="yes" xml:space="preserve">
          <source>This method does not write the values contained by this &lt;code&gt;PutField&lt;/code&gt; object in a proper format, and may result in corruption of the serialization stream.</source>
          <target state="translated">이 메서드는이 &lt;code&gt;PutField&lt;/code&gt; 개체에 포함 된 값을 적절한 형식으로 쓰지 않으므로 직렬화 스트림이 손상 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="802083cd9c9fc6cd1c1858848242ac37646238e4" translate="yes" xml:space="preserve">
          <source>This method does not write the values contained by this &lt;code&gt;PutField&lt;/code&gt; object in a proper format, and may result in corruption of the serialization stream. The correct way to write &lt;code&gt;PutField&lt;/code&gt; data is by calling the &lt;a href=&quot;objectoutputstream#writeFields()&quot;&gt;&lt;code&gt;ObjectOutputStream.writeFields()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는이 &lt;code&gt;PutField&lt;/code&gt; 개체에 포함 된 값을 적절한 형식으로 쓰지 않으므로 직렬화 스트림이 손상 될 수 있습니다. &lt;code&gt;PutField&lt;/code&gt; 데이터 를 쓰는 올바른 방법 은 &lt;a href=&quot;objectoutputstream#writeFields()&quot;&gt; &lt;code&gt;ObjectOutputStream.writeFields()&lt;/code&gt; &lt;/a&gt; 메서드를 호출하는 것입니다.</target>
        </trans-unit>
        <trans-unit id="cb7158612eaa76d7379392a77d066179a90687bb" translate="yes" xml:space="preserve">
          <source>This method does the same thing as the concatenateTransform method. It is here for backward compatibility with previous releases which misspelled the method name.</source>
          <target state="translated">이 메서드는 concatenateTransform 메서드와 동일한 작업을 수행합니다. 메서드 이름을 잘못 입력 한 이전 릴리스와의 역 호환성을 위해 여기에 있습니다.</target>
        </trans-unit>
        <trans-unit id="603e6c221899fe81d3a8e3e23a52d2b882f23156" translate="yes" xml:space="preserve">
          <source>This method does the same thing as the preConcatenateTransform method. It is here for backward compatibility with previous releases which misspelled the method name.</source>
          <target state="translated">이 메서드는 preConcatenateTransform 메서드와 동일한 작업을 수행합니다. 메서드 이름을 잘못 입력 한 이전 릴리스와의 역 호환성을 위해 여기에 있습니다.</target>
        </trans-unit>
        <trans-unit id="a04f810e9c905f9c1329c7a9c73fea317cca2c2f" translate="yes" xml:space="preserve">
          <source>This method doesn't block, i.e. no reverse name service lookup is performed.</source>
          <target state="translated">이 방법은 차단되지 않습니다. 즉, 역방향 이름 서비스 조회가 수행되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="3208bec693022db00751015acfc76d7263afdcf0" translate="yes" xml:space="preserve">
          <source>This method doesn't validate the specified character to be a valid Unicode code point. The caller must validate the character value using &lt;a href=&quot;#isValidCodePoint(int)&quot;&gt;&lt;code&gt;isValidCodePoint&lt;/code&gt;&lt;/a&gt; if necessary.</source>
          <target state="translated">이 메서드는 지정된 문자가 유효한 유니 코드 코드 포인트인지 확인하지 않습니다. 호출자는 필요한 경우 &lt;a href=&quot;#isValidCodePoint(int)&quot;&gt; &lt;code&gt;isValidCodePoint&lt;/code&gt; 를&lt;/a&gt; 사용하여 문자 값의 유효성을 검사해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1a1542c95859ae75bda25c0a1de2520f230fa72f" translate="yes" xml:space="preserve">
          <source>This method doesn't validate the specified character to be a valid Unicode code point. The caller must validate the character value using &lt;a href=&quot;../../../java.base/java/lang/character#isValidCodePoint(int)&quot;&gt;&lt;code&gt;Character.isValidCodePoint&lt;/code&gt;&lt;/a&gt; if necessary.</source>
          <target state="translated">이 메서드는 지정된 문자가 유효한 유니 코드 코드 포인트인지 확인하지 않습니다. 호출자는 필요한 경우 &lt;a href=&quot;../../../java.base/java/lang/character#isValidCodePoint(int)&quot;&gt; &lt;code&gt;Character.isValidCodePoint&lt;/code&gt; 를&lt;/a&gt; 사용하여 문자 값의 유효성을 검사해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b35853e0da75c2dd9285f53bc7ad476eb18426a5" translate="yes" xml:space="preserve">
          <source>This method doesn't validate the specified character to be a valid Unicode code point. The caller must validate the character value using &lt;a href=&quot;character#isValidCodePoint-int-&quot;&gt;&lt;code&gt;isValidCodePoint&lt;/code&gt;&lt;/a&gt; if necessary.</source>
          <target state="translated">이 메서드는 지정된 문자가 유효한 유니 코드 코드 포인트인지 확인하지 않습니다. 호출자는 필요한 경우 &lt;a href=&quot;character#isValidCodePoint-int-&quot;&gt; &lt;code&gt;isValidCodePoint&lt;/code&gt; 를&lt;/a&gt; 사용하여 문자 값의 유효성을 검사해야합니다 .</target>
        </trans-unit>
        <trans-unit id="1048fa05f79a4bbc08eb87aea2b9b0a538ddeb9c" translate="yes" xml:space="preserve">
          <source>This method draws the polygon defined by &lt;code&gt;nPoint&lt;/code&gt; line segments, where the first &lt;code&gt;nPoint&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; line segments are line segments from &lt;code&gt;(xPoints[i&amp;nbsp;-&amp;nbsp;1],&amp;nbsp;yPoints[i&amp;nbsp;-&amp;nbsp;1])&lt;/code&gt; to &lt;code&gt;(xPoints[i],&amp;nbsp;yPoints[i])&lt;/code&gt;, for 1 &amp;le;</source>
          <target state="translated">이 방법은 &lt;code&gt;nPoint&lt;/code&gt; 선분으로 정의 된 다각형을 그립니다. 여기서 첫 번째 &lt;code&gt;nPoint&amp;nbsp;-&amp;nbsp;1&lt;/code&gt; 선분은 &lt;code&gt;(xPoints[i&amp;nbsp;-&amp;nbsp;1],&amp;nbsp;yPoints[i&amp;nbsp;-&amp;nbsp;1])&lt;/code&gt; 에서 &lt;code&gt;(xPoints[i],&amp;nbsp;yPoints[i])&lt;/code&gt; 까지의 선분입니다. , 1 &amp;le;</target>
        </trans-unit>
        <trans-unit id="9b0d757f872c8992ebbba76f2a37b8cb57802645" translate="yes" xml:space="preserve">
          <source>This method eliminates the need for explicit range operations (of the sort that commonly exist for arrays). Any operation that expects a List can be used as a range operation by operating on a subList view instead of a whole List. For example, the following idiom removes a range of elements from a List:</source>
          <target state="translated">이 방법을 사용하면 명시적인 범위 연산 (배열에 일반적으로 존재하는 정렬)이 필요하지 않습니다. List를 예상하는 모든 작업은 전체 List 대신 하위 목록보기에서 작업하여 범위 작업으로 사용할 수 있습니다. 예를 들어 다음 관용구는 목록에서 다양한 요소를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="b87f0cb9c5df7254ccafa323a476c57fb867a722" translate="yes" xml:space="preserve">
          <source>This method eliminates the need for explicit range operations (of the sort that commonly exist for arrays). Any operation that expects a list can be used as a range operation by passing a subList view instead of a whole list. For example, the following idiom removes a range of elements from a list:</source>
          <target state="translated">이 방법을 사용하면 명시적인 범위 연산 (배열에 일반적으로 존재하는 정렬)이 필요하지 않습니다. 목록이 필요한 모든 작업은 전체 목록 대신 하위 목록보기를 전달하여 범위 작업으로 사용할 수 있습니다. 예를 들어 다음 관용구는 목록에서 다양한 요소를 제거합니다.</target>
        </trans-unit>
        <trans-unit id="b1ff817159e43733ecf46a19d3ed3ba55ea9ff82" translate="yes" xml:space="preserve">
          <source>This method empties a rowset, as opposed to the &lt;code&gt;close&lt;/code&gt; method, which marks the entire rowset as recoverable to allow the garbage collector the rowset's Java VM resources.</source>
          <target state="translated">이 메서드 는 가비지 수집기가 행 집합의 Java VM 리소스를 허용하도록 전체 행 집합을 복구 가능으로 표시 하는 &lt;code&gt;close&lt;/code&gt; 메서드 와 달리 행 집합을 비 웁니다 .</target>
        </trans-unit>
        <trans-unit id="d1c6c7c0a3f0e3d56a14189ead8dc65d2d8ca336" translate="yes" xml:space="preserve">
          <source>This method enables the current &lt;code&gt;BeanInfo&lt;/code&gt; object to return an arbitrary collection of other &lt;code&gt;BeanInfo&lt;/code&gt; objects that provide additional information about the current bean.</source>
          <target state="translated">이 메소드를 사용하면 현재 &lt;code&gt;BeanInfo&lt;/code&gt; 오브젝트가 현재 Bean에 대한 추가 정보를 제공하는 다른 &lt;code&gt;BeanInfo&lt;/code&gt; 오브젝트 의 임의 콜렉션을 리턴 할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="ebf3fada9a8a6c4c60de6d762aaf5512b45b9cf4" translate="yes" xml:space="preserve">
          <source>This method encapsulates the basic decoding loop, decoding as many bytes as possible until it either runs out of input, runs out of room in the output buffer, or encounters a decoding error. This method is invoked by the &lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method, which handles result interpretation and error recovery.</source>
          <target state="translated">이 메서드는 기본 디코딩 루프를 캡슐화하여 입력이 부족하거나 출력 버퍼의 공간이 부족하거나 디코딩 오류가 발생할 때까지 가능한 한 많은 바이트를 디코딩합니다. 이 메서드는 결과 해석 및 오류 복구를 처리 하는 &lt;a href=&quot;#decode(java.nio.ByteBuffer,java.nio.CharBuffer,boolean)&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 메서드에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="78b1fe125c73b5076363add79751d8af78528e7f" translate="yes" xml:space="preserve">
          <source>This method encapsulates the basic decoding loop, decoding as many bytes as possible until it either runs out of input, runs out of room in the output buffer, or encounters a decoding error. This method is invoked by the &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt;&lt;code&gt;decode&lt;/code&gt;&lt;/a&gt; method, which handles result interpretation and error recovery.</source>
          <target state="translated">이 방법은 기본 디코딩 루프를 캡슐화하여 입력이 부족하거나 출력 버퍼의 공간이 부족하거나 디코딩 오류가 발생할 때까지 가능한 한 많은 바이트를 디코딩합니다. 이 메소드는 결과 해석 및 오류 복구를 처리 하는 &lt;a href=&quot;charsetdecoder#decode-java.nio.ByteBuffer-java.nio.CharBuffer-boolean-&quot;&gt; &lt;code&gt;decode&lt;/code&gt; &lt;/a&gt; 메소드에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="9736e21d81231197049729da3a9a8a1d07dd6db3" translate="yes" xml:space="preserve">
          <source>This method encapsulates the basic encoding loop, encoding as many characters as possible until it either runs out of input, runs out of room in the output buffer, or encounters an encoding error. This method is invoked by the &lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method, which handles result interpretation and error recovery.</source>
          <target state="translated">이 메서드는 기본 인코딩 루프를 캡슐화하여 입력이 부족하거나 출력 버퍼의 공간이 부족하거나 인코딩 오류가 발생할 때까지 가능한 한 많은 문자를 인코딩합니다. 이 메서드는 결과 해석 및 오류 복구를 처리 하는 &lt;a href=&quot;#encode(java.nio.CharBuffer,java.nio.ByteBuffer,boolean)&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 메서드에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="34cc00ba57c172360457e325a1b154234e6f6295" translate="yes" xml:space="preserve">
          <source>This method encapsulates the basic encoding loop, encoding as many characters as possible until it either runs out of input, runs out of room in the output buffer, or encounters an encoding error. This method is invoked by the &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt;&lt;code&gt;encode&lt;/code&gt;&lt;/a&gt; method, which handles result interpretation and error recovery.</source>
          <target state="translated">이 방법은 기본 인코딩 루프를 캡슐화하여 입력이 부족하거나 출력 버퍼의 공간이 부족하거나 인코딩 오류가 발생할 때까지 가능한 한 많은 문자를 인코딩합니다. 이 메소드는 결과 해석 및 오류 복구를 처리 하는 &lt;a href=&quot;charsetencoder#encode-java.nio.CharBuffer-java.nio.ByteBuffer-boolean-&quot;&gt; &lt;code&gt;encode&lt;/code&gt; &lt;/a&gt; 메소드에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="e13d1eff2306bf62de827dd65b5dd54d90ab0411" translate="yes" xml:space="preserve">
          <source>This method ensures that the display is up-to-date. It is useful for animation.</source>
          <target state="translated">이 방법은 디스플레이가 최신 상태인지 확인합니다. 애니메이션에 유용합니다.</target>
        </trans-unit>
        <trans-unit id="eead0dd018d2f589deaf560909f62c98c6fdfd3f" translate="yes" xml:space="preserve">
          <source>This method ensures the &lt;code&gt;document&lt;/code&gt; is not mutated during printing. To indicate it visually, &lt;code&gt;setEnabled(false)&lt;/code&gt; is set for the duration of printing.</source>
          <target state="translated">이 방법을 사용하면 인쇄 중에 &lt;code&gt;document&lt;/code&gt; 가 변경되지 않습니다. 시각적으로 나타 내기 위해 인쇄 기간 동안 &lt;code&gt;setEnabled(false)&lt;/code&gt; 를 설정합니다.</target>
        </trans-unit>
        <trans-unit id="89bb57ef916608db7878a65d5364178a0fe60c35" translate="yes" xml:space="preserve">
          <source>This method establishes an ordering for &lt;a href=&quot;package-summary#reachability&quot;&gt;&lt;em&gt;strong reachability&lt;/em&gt;&lt;/a&gt; with respect to garbage collection. It controls relations that are otherwise only implicit in a program -- the reachability conditions triggering garbage collection. This method is designed for use in uncommon situations of premature finalization where using &lt;code&gt;synchronized&lt;/code&gt; blocks or methods, or using other synchronization facilities are not possible or do not provide the desired control. This method is applicable only when reclamation may have visible effects, which is possible for objects with finalizers (See &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/html/jls-12.html#jls-12.6&quot;&gt; Section 12.6 17 of &lt;cite&gt;The Java&amp;trade; Language Specification&lt;/cite&gt;&lt;/a&gt;) that are implemented in ways that rely on ordering control for correctness.</source>
          <target state="translated">이 메서드는 가비지 수집과 관련하여 &lt;a href=&quot;package-summary#reachability&quot;&gt;&lt;em&gt;강력한 도달 가능성&lt;/em&gt;&lt;/a&gt; 에 대한 순서를 설정합니다 . 그렇지 않으면 프로그램에 내재 된 관계, 즉 가비지 수집을 트리거하는 도달 가능성 조건을 제어합니다. 이 방법은 &lt;code&gt;synchronized&lt;/code&gt; 블록 또는 방법을 사용하거나 다른 동기화 기능을 사용할 수 없거나 원하는 제어를 제공하지 못하는 경우에 조기 종료의 흔하지 않은 상황에서 사용하도록 설계되었습니다 . 이 방법은 교정이 가시적 인 효과를 가질 수있는 경우에만 적용 할 수 있으며, 이는 정확성을 위해 순서 제어에 의존하는 방식으로 구현되는 종료자가있는 객체 ( &lt;a href=&quot;https://docs.oracle.com/javase/specs/jls/se8/html/jls-12.html#jls-12.6&quot;&gt;&lt;cite&gt;Java &amp;trade; 언어 사양&lt;/cite&gt;&lt;/a&gt; 의 섹션 12.6 17&lt;cite&gt;&lt;/cite&gt; 참조 )에 대해 가능합니다.</target>
        </trans-unit>
        <trans-unit id="bd6a0b6596e4b41e7f80c880ef175d933ff272f9" translate="yes" xml:space="preserve">
          <source>This method establishes an ordering for &lt;a href=&quot;package-summary#reachability&quot;&gt;&lt;em&gt;strong reachability&lt;/em&gt;&lt;/a&gt; with respect to garbage collection. It controls relations that are otherwise only implicit in a program -- the reachability conditions triggering garbage collection. This method is designed for use in uncommon situations of premature finalization where using &lt;code&gt;synchronized&lt;/code&gt; blocks or methods, or using other synchronization facilities are not possible or do not provide the desired control. This method is applicable only when reclamation may have visible effects, which is possible for objects with finalizers (See Section 12.6 of</source>
          <target state="translated">이 메소드는 가비지 콜렉션과 관련하여 &lt;a href=&quot;package-summary#reachability&quot;&gt;&lt;em&gt;강력한 도달 가능성&lt;/em&gt;&lt;/a&gt; 에 대한 순서를 설정합니다 . 그렇지 않으면 프로그램에 내재 된 관계, 즉 가비지 수집을 트리거하는 도달 가능성 조건을 제어합니다. 이 방법은 &lt;code&gt;synchronized&lt;/code&gt; 블록 또는 방법을 사용하거나 다른 동기화 기능을 사용할 수 없거나 원하는 제어를 제공하지 못하는 경우에 조기 종료의 흔하지 않은 상황에서 사용하도록 설계되었습니다 . 이 방법은 재 확보에 가시적 효과가있을 때만 적용 할 수 있으며, 이는 종료자가있는 개체에 대해 가능합니다 (섹션 12.6 참조).</target>
        </trans-unit>
        <trans-unit id="74ace9a4696b375af288eedb658c5a0479b2c340" translate="yes" xml:space="preserve">
          <source>This method evaluates the &lt;em&gt;existential quantification&lt;/em&gt; of the predicate over the elements of the stream (for some x P(x)).</source>
          <target state="translated">이 메소드 는 스트림 요소에 대한 술어 의 &lt;em&gt;존재 수량&lt;/em&gt; 을 평가합니다 (일부 x P (x)에 대해).</target>
        </trans-unit>
        <trans-unit id="8e29b39c37d9f0876c9909a031c3012531b4c71c" translate="yes" xml:space="preserve">
          <source>This method evaluates the &lt;em&gt;universal quantification&lt;/em&gt; of the negated predicate over the elements of the stream (for all x ~P(x)). If the stream is empty, the quantification is said to be vacuously satisfied and is always &lt;code&gt;true&lt;/code&gt;, regardless of P(x).</source>
          <target state="translated">이 메소드 는 스트림 요소에 대해 부정 된 술어의 전체 &lt;em&gt;정량&lt;/em&gt; 을 평가합니다 (모든 x ~ P (x)에 대해). 스트림이 비어있는 경우 P (x)에 관계없이 수량 화가 빈번히 만족한다고하며 항상 &lt;code&gt;true&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="d7db2070540c2c562f74f31f3655c1a32f3083a2" translate="yes" xml:space="preserve">
          <source>This method evaluates the &lt;em&gt;universal quantification&lt;/em&gt; of the predicate over the elements of the stream (for all x P(x)). If the stream is empty, the quantification is said to be &lt;em&gt;vacuously satisfied&lt;/em&gt; and is always &lt;code&gt;true&lt;/code&gt; (regardless of P(x)).</source>
          <target state="translated">이 방법 은 스트림 요소에 대한 술어 의 &lt;em&gt;범용 정량&lt;/em&gt; 을 평가합니다 (모든 x P (x)에 대해). 스트림이 비어있는 경우 수량화는 &lt;em&gt;완전히 만족&lt;/em&gt; 한다고하며 항상 P (x)에 관계없이 &lt;code&gt;true&lt;/code&gt; 됩니다.</target>
        </trans-unit>
        <trans-unit id="6913a5692ccd2bbb3f38e0b7cb96fa5e17e992f5" translate="yes" xml:space="preserve">
          <source>This method examines each CardTerminal of this object. If a card was inserted into or removed from a CardTerminal since the previous call to &lt;code&gt;waitForChange()&lt;/code&gt;, it returns immediately. Otherwise, or if this is the first call to &lt;code&gt;waitForChange()&lt;/code&gt; on this object, it blocks until a card is inserted into or removed from a CardTerminal.</source>
          <target state="translated">이 메서드는이 개체의 각 CardTerminal을 검사합니다. &lt;code&gt;waitForChange()&lt;/code&gt; 대한 이전 호출 이후 CardTerminal에 카드가 삽입되거나 제거 된 경우 즉시 반환됩니다. 그렇지 않은 경우 또는 &lt;code&gt;waitForChange()&lt;/code&gt; 개체에 대한 waitForChange () 에 대한 첫 번째 호출 인 경우 카드가 CardTerminal에 삽입되거나 제거 될 때까지 차단됩니다.</target>
        </trans-unit>
        <trans-unit id="16cf4a1fcc5d6973ae156692d6317157013b5c90" translate="yes" xml:space="preserve">
          <source>This method exists mainly to support debugging, where you want to see the elements as they flow past a certain point in a pipeline:</source>
          <target state="translated">이 방법은 주로 디버깅을 지원하기 위해 존재하며, 파이프 라인의 특정 지점을지나 가면서 요소를 확인하려는 경우 :</target>
        </trans-unit>
        <trans-unit id="982c59d7cd4f643b57742247e7e55732ba66ae60" translate="yes" xml:space="preserve">
          <source>This method exists primarily for writing test cases. Non test-code will typically use other methods to create an offset time. &lt;code&gt;LocalDateTime&lt;/code&gt; has five additional convenience variants of the equivalent factory method taking fewer arguments. They are not provided here to reduce the footprint of the API.</source>
          <target state="translated">이 방법은 주로 테스트 사례를 작성하기 위해 존재합니다. 테스트 코드가 아닌 코드는 일반적으로 다른 방법을 사용하여 오프셋 시간을 만듭니다. &lt;code&gt;LocalDateTime&lt;/code&gt; 에는 인수를 덜 사용하는 동등한 팩토리 메소드의 5 가지 추가 편의 변형이 있습니다. API의 설치 공간을 줄이기 위해 여기에 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="cd1761201ffb394e8a819ed4bce3831fbbee5af5" translate="yes" xml:space="preserve">
          <source>This method exists primarily for writing test cases. Non test-code will typically use other methods to create an offset time. &lt;code&gt;LocalTime&lt;/code&gt; has two additional convenience variants of the equivalent factory method taking fewer arguments. They are not provided here to reduce the footprint of the API.</source>
          <target state="translated">이 방법은 주로 테스트 사례를 작성하기 위해 존재합니다. 테스트 코드가 아닌 코드는 일반적으로 다른 방법을 사용하여 오프셋 시간을 만듭니다. &lt;code&gt;LocalTime&lt;/code&gt; 에는 더 적은 인수를 사용하는 동등한 팩토리 메소드의 두 가지 추가 편리한 변형이 있습니다. API의 설치 공간을 줄이기 위해 여기에 제공되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="6c568dfc8a6465cd4ea3973fb49dd2c07553ddf6" translate="yes" xml:space="preserve">
          <source>This method exists so that Connectors may create a virtual machine mirror when a connection is established to a target VM. Only developers creating new Connector implementations should need to make direct use of this method.</source>
          <target state="translated">이 방법은 커넥터가 대상 VM에 대한 연결이 설정 될 때 가상 머신 미러를 생성 할 수 있도록 존재합니다. 새 커넥터 구현을 만드는 개발자 만이 방법을 직접 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="9f346697f89a2670d7238c30b8db3324b0fb3dc0" translate="yes" xml:space="preserve">
          <source>This method exists solely for use with &lt;a href=&quot;#suspend()&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt;, which has been deprecated because it is deadlock-prone.</source>
          <target state="translated">이 메서드 는 교착 상태가 발생하기 쉬우므로 더 이상 사용되지 않는 &lt;a href=&quot;#suspend()&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt; 와 함께 사용하기 위해서만 존재합니다 .</target>
        </trans-unit>
        <trans-unit id="7e14e52b294b5085e008e5c63bbf9530225f503c" translate="yes" xml:space="preserve">
          <source>This method exists solely for use with &lt;a href=&quot;#suspend()&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt;, which has been deprecated because it is deadlock-prone. For more information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html&quot;&gt;Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?&lt;/a&gt;.</source>
          <target state="translated">이 메서드 는 교착 상태가 발생하기 쉬우므로 더 이상 사용되지 않는 &lt;a href=&quot;#suspend()&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt; 와 함께 사용하기 위해서만 존재합니다 . 자세한 내용 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html&quot;&gt;은 Thread.stop, Thread.suspend 및 Thread.resume이&lt;/a&gt; 더 이상 사용되지 않는 이유를 참조하세요 . .</target>
        </trans-unit>
        <trans-unit id="e81d676622985deb5cf0936cbe4b26a3ca193b9c" translate="yes" xml:space="preserve">
          <source>This method exists solely for use with &lt;a href=&quot;#suspend()&quot;&gt;&lt;code&gt;suspend()&lt;/code&gt;&lt;/a&gt;, which has been deprecated because it is deadlock-prone. For more information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html&quot;&gt;Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?&lt;/a&gt;.</source>
          <target state="translated">이 메서드 는 교착 상태가 발생하기 쉽기 때문에 더 이상 사용되지 않는 &lt;a href=&quot;#suspend()&quot;&gt; &lt;code&gt;suspend()&lt;/code&gt; &lt;/a&gt; 와 함께 사용하기 위해서만 존재합니다 . 자세한 내용 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html&quot;&gt;은 Thread.stop, Thread.suspend 및 Thread.resume이&lt;/a&gt; 더 이상 사용되지 않는 이유를 참조하세요 . .</target>
        </trans-unit>
        <trans-unit id="9b58458b6cd02ffd97fdf8240b91b18bd00bcd97" translate="yes" xml:space="preserve">
          <source>This method exists to be used as a &lt;a href=&quot;function/predicate&quot;&gt;&lt;code&gt;Predicate&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;filter(Objects::isNull)&lt;/code&gt;</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;function/predicate&quot;&gt; &lt;code&gt;Predicate&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;filter(Objects::isNull)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="ad117920c2cdf44107f517b6de5ada3dbf71681f" translate="yes" xml:space="preserve">
          <source>This method exists to be used as a &lt;a href=&quot;function/predicate&quot;&gt;&lt;code&gt;Predicate&lt;/code&gt;&lt;/a&gt;, &lt;code&gt;filter(Objects::nonNull)&lt;/code&gt;</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;function/predicate&quot;&gt; &lt;code&gt;Predicate&lt;/code&gt; &lt;/a&gt; , &lt;code&gt;filter(Objects::nonNull)&lt;/code&gt; 로 사용하기 위해 존재합니다.</target>
        </trans-unit>
        <trans-unit id="a1587a8654f211ca8dc7252ca4186a66fa3fe887" translate="yes" xml:space="preserve">
          <source>This method filters &lt;a href=&quot;stackwalker.option#SHOW_REFLECT_FRAMES&quot;&gt;reflection frames&lt;/a&gt;, &lt;a href=&quot;invoke/methodhandle&quot;&gt;&lt;code&gt;MethodHandle&lt;/code&gt;&lt;/a&gt;, and &lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt;hidden frames&lt;/a&gt; regardless of the &lt;a href=&quot;stackwalker.option#SHOW_REFLECT_FRAMES&quot;&gt;&lt;code&gt;SHOW_REFLECT_FRAMES&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt;&lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt;&lt;/a&gt; options this &lt;code&gt;StackWalker&lt;/code&gt; has been configured with.</source>
          <target state="translated">이 메서드 는 이 &lt;code&gt;StackWalker&lt;/code&gt; 에 구성된 &lt;a href=&quot;stackwalker.option#SHOW_REFLECT_FRAMES&quot;&gt; &lt;code&gt;SHOW_REFLECT_FRAMES&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt; &lt;code&gt;SHOW_HIDDEN_FRAMES&lt;/code&gt; &lt;/a&gt; 옵션에 관계없이 &lt;a href=&quot;stackwalker.option#SHOW_REFLECT_FRAMES&quot;&gt;반사 프레임&lt;/a&gt; , &lt;a href=&quot;invoke/methodhandle&quot;&gt; &lt;code&gt;MethodHandle&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;stackwalker.option#SHOW_HIDDEN_FRAMES&quot;&gt;숨겨진 프레임을 &lt;/a&gt;필터링 합니다.</target>
        </trans-unit>
        <trans-unit id="df6d84498f6e8e8102f003c3f11bd5dcd829650b" translate="yes" xml:space="preserve">
          <source>This method finds deadlocks involving only object monitors. To find deadlocks involving both object monitors and &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;ownable synchronizers&lt;/a&gt;, the &lt;a href=&quot;#findDeadlockedThreads()&quot;&gt;&lt;code&gt;findDeadlockedThreads&lt;/code&gt;&lt;/a&gt; method should be used.</source>
          <target state="translated">이 메서드는 개체 모니터 만 관련된 교착 상태를 찾습니다. 객체 모니터 모두 포함 교착 찾으려면 &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;소유 가능한 싱크로 나이저를&lt;/a&gt; 의 &lt;a href=&quot;#findDeadlockedThreads()&quot;&gt; &lt;code&gt;findDeadlockedThreads&lt;/code&gt; 의&lt;/a&gt; 방법이 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="3567eed99c163537118a86339bf638abc11755d6" translate="yes" xml:space="preserve">
          <source>This method finds deadlocks involving only object monitors. To find deadlocks involving both object monitors and &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;ownable synchronizers&lt;/a&gt;, the &lt;a href=&quot;threadmxbean#findDeadlockedThreads--&quot;&gt;&lt;code&gt;findDeadlockedThreads&lt;/code&gt;&lt;/a&gt; method should be used.</source>
          <target state="translated">이 메소드는 오브젝트 모니터 만 포함하는 교착 상태를 찾습니다. 개체 모니터와 &lt;a href=&quot;lockinfo#OwnableSynchronizer&quot;&gt;소유 가능한 동기화 프로그램&lt;/a&gt; 과 관련된 교착 상태를 찾으려면 의 &lt;a href=&quot;threadmxbean#findDeadlockedThreads--&quot;&gt; &lt;code&gt;findDeadlockedThreads&lt;/code&gt; 의&lt;/a&gt; 방법이 사용되어야한다.</target>
        </trans-unit>
        <trans-unit id="2b4dc1a8cd711f7f3fa89cb707ce5c4e33beea21" translate="yes" xml:space="preserve">
          <source>This method finds the desired calendar system by in a manner equivalent to passing &quot;ca&quot; to &lt;a href=&quot;../../util/locale#getUnicodeLocaleType-java.lang.String-&quot;&gt;&lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt;&lt;/a&gt;. If the &quot;ca&quot; key is not present, then &lt;code&gt;IsoChronology&lt;/code&gt; is returned.</source>
          <target state="translated">이 메소드는 &quot;ca&quot;를 &lt;a href=&quot;../../util/locale#getUnicodeLocaleType-java.lang.String-&quot;&gt; &lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt; &lt;/a&gt; 에 전달하는 것과 동일한 방식으로 원하는 달력 시스템을 찾습니다. . &quot;ca&quot;키가 없으면 &lt;code&gt;IsoChronology&lt;/code&gt; 가 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="4979da53ed79430975a42d2fc6d1d8f29cdba772" translate="yes" xml:space="preserve">
          <source>This method finds the desired calendar system in a manner equivalent to passing &quot;ca&quot; to &lt;a href=&quot;../../util/locale#getUnicodeLocaleType(java.lang.String)&quot;&gt;&lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt;&lt;/a&gt;. If the &quot;ca&quot; key is not present, then &lt;code&gt;IsoChronology&lt;/code&gt; is returned.</source>
          <target state="translated">이 메서드는 &quot;ca&quot;를 &lt;a href=&quot;../../util/locale#getUnicodeLocaleType(java.lang.String)&quot;&gt; &lt;code&gt;Locale.getUnicodeLocaleType(String)&lt;/code&gt; &lt;/a&gt; 에 전달하는 것과 동일한 방식으로 원하는 달력 시스템을 찾습니다 . &quot;ca&quot;키가 없으면 &lt;code&gt;IsoChronology&lt;/code&gt; 가 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="2e3b0f852ae29e4879324d857fc31d934ccc57cf" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if &lt;code&gt;list&lt;/code&gt; is not equal to the current list.</source>
          <target state="translated">이 방법은 화재 &lt;code&gt;ChangeEvent&lt;/code&gt; 를이 경우 &lt;code&gt;list&lt;/code&gt; 현재 목록과 동일하지 않다.</target>
        </trans-unit>
        <trans-unit id="06a074e040067954b633d62ad58ccfa15051fb5c" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if the &lt;code&gt;calendarField&lt;/code&gt; has changed.</source>
          <target state="translated">이 메서드 는 &lt;code&gt;calendarField&lt;/code&gt; 가 변경된 경우 &lt;code&gt;ChangeEvent&lt;/code&gt; 를 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="850504b87b962593a8402fc6862d7fe014780127" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if the &lt;code&gt;end&lt;/code&gt; has changed.</source>
          <target state="translated">이 메서드 는 &lt;code&gt;end&lt;/code&gt; 이 변경된 경우 &lt;code&gt;ChangeEvent&lt;/code&gt; 를 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="4e33a47701e6220e1af994470a4a5b47fa0136f6" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if the &lt;code&gt;maximum&lt;/code&gt; has changed.</source>
          <target state="translated">이 메서드 는 &lt;code&gt;maximum&lt;/code&gt; 이 변경된 경우 &lt;code&gt;ChangeEvent&lt;/code&gt; 를 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="e5eabef80f7d43866fe8cfe1cfa369a8e99d42e0" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if the &lt;code&gt;minimum&lt;/code&gt; has changed.</source>
          <target state="translated">이 메서드 는 &lt;code&gt;minimum&lt;/code&gt; 이 변경된 경우 &lt;code&gt;ChangeEvent&lt;/code&gt; 를 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="c6c725eaa2ab8fa77e09a915034e93dbb53a76e9" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if the &lt;code&gt;start&lt;/code&gt; has changed.</source>
          <target state="translated">이 메서드 는 &lt;code&gt;start&lt;/code&gt; 이 변경된 경우 &lt;code&gt;ChangeEvent&lt;/code&gt; 를 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="456564a673c1bf2fff461bd658e1be0a301d9f2f" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if the &lt;code&gt;stepSize&lt;/code&gt; has changed.</source>
          <target state="translated">이 메서드 는 &lt;code&gt;stepSize&lt;/code&gt; 가 변경된 경우 &lt;code&gt;ChangeEvent&lt;/code&gt; 를 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="e0669704328a789efd980ec0b1450820e661edbc" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if the &lt;code&gt;value&lt;/code&gt; has changed.</source>
          <target state="translated">이 메서드 는 &lt;code&gt;value&lt;/code&gt; 이 변경된 경우 &lt;code&gt;ChangeEvent&lt;/code&gt; 를 발생시킵니다 .</target>
        </trans-unit>
        <trans-unit id="d72ce51ee15e0aeb7febde5c83cb3ecf4954af7a" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;ChangeEvent&lt;/code&gt; if the value has changed.</source>
          <target state="translated">이 메서드 는 값이 변경된 경우 &lt;code&gt;ChangeEvent&lt;/code&gt; 를 발생시킵니다.</target>
        </trans-unit>
        <trans-unit id="53fa6df3bd702b6335d0c2b4aa744c4b73f261ae" translate="yes" xml:space="preserve">
          <source>This method fires a &lt;code&gt;PropertyChangeEvent&lt;/code&gt; when appropriate, with the property name &lt;code&gt;&quot;rowSorter&quot;&lt;/code&gt;. For backward-compatibility, this method fires an additional event with the property name &lt;code&gt;&quot;sorter&quot;&lt;/code&gt;.</source>
          <target state="translated">이 방법은 화재 &lt;code&gt;PropertyChangeEvent&lt;/code&gt; 할 때 속성 이름과 적절한, &lt;code&gt;&quot;rowSorter&quot;&lt;/code&gt; . 이전 버전과의 호환성을 위해이 메서드는 속성 이름이 &lt;code&gt;&quot;sorter&quot;&lt;/code&gt; 인 추가 이벤트를 발생 시킵니다.</target>
        </trans-unit>
        <trans-unit id="a776215816b7d8117a5194f494359e4d80da422b" translate="yes" xml:space="preserve">
          <source>This method first attempts to locate an installed provider in exactly the same manner as the &lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt;&lt;/a&gt; method. If none of the installed providers support the URI scheme then an attempt is made to locate the provider using the given class loader. If a provider supporting the URI scheme is located then its &lt;a href=&quot;spi/filesystemprovider#newFileSystem(java.net.URI,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt;&lt;/a&gt; is invoked to construct the new file system.</source>
          <target state="translated">이 메서드는 먼저 &lt;a href=&quot;#newFileSystem(java.net.URI,java.util.Map)&quot;&gt; &lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt; &lt;/a&gt; 메서드 와 정확히 동일한 방식으로 설치된 공급자를 찾으려고 시도합니다 . 설치된 공급자가 URI 체계를 지원하지 않는 경우 지정된 클래스 로더를 사용하여 공급자를 찾으려고 시도합니다. URI 체계를 지원하는 공급자를 &lt;a href=&quot;spi/filesystemprovider#newFileSystem(java.net.URI,java.util.Map)&quot;&gt; &lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt; &lt;/a&gt; 해당 newFileSystem (URI, Map) 이 호출되어 새 파일 시스템을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="f6c5f19bb1ce9db9f3adffa77882c13da63267ec" translate="yes" xml:space="preserve">
          <source>This method first attempts to locate an installed provider in exactly the same manner as the &lt;a href=&quot;#newFileSystem(java.nio.file.Path,java.util.Map,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;newFileSystem(Path, Map, ClassLoader)&lt;/code&gt;&lt;/a&gt; method with an empty map. If none of the installed providers return a &lt;code&gt;FileSystem&lt;/code&gt; then an attempt is made to locate the provider using the given class loader. If a provider returns a file system then the lookup terminates and the file system is returned.</source>
          <target state="translated">이 메서드는 먼저 빈 맵이 있는 &lt;a href=&quot;#newFileSystem(java.nio.file.Path,java.util.Map,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;newFileSystem(Path, Map, ClassLoader)&lt;/code&gt; &lt;/a&gt; 메서드와 동일한 방식으로 설치된 공급자를 찾으려고합니다 . 설치된 공급자가 &lt;code&gt;FileSystem&lt;/code&gt; 을 반환하지 않으면 지정된 클래스 로더를 사용하여 공급자를 찾으려고 시도합니다. 공급자가 파일 시스템을 반환하면 조회가 종료되고 파일 시스템이 반환됩니다.</target>
        </trans-unit>
        <trans-unit id="18b9bf8568a4cbe9b77bde3b1de7f3460a6fdcf9" translate="yes" xml:space="preserve">
          <source>This method first attempts to locate an installed provider in exactly the same manner as the &lt;a href=&quot;#newFileSystem(java.nio.file.Path,java.util.Map,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;newFileSystem(Path, Map, ClassLoader)&lt;/code&gt;&lt;/a&gt; method. If found, the provider's &lt;a href=&quot;spi/filesystemprovider#newFileSystem(java.nio.file.Path,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem(Path, Map)&lt;/code&gt;&lt;/a&gt; method is invoked to construct the new file system.</source>
          <target state="translated">이 메서드는 먼저 &lt;a href=&quot;#newFileSystem(java.nio.file.Path,java.util.Map,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;newFileSystem(Path, Map, ClassLoader)&lt;/code&gt; &lt;/a&gt; 메서드 와 동일한 방식으로 설치된 공급자를 찾으려고 시도합니다 . 발견되면 공급자의 &lt;a href=&quot;spi/filesystemprovider#newFileSystem(java.nio.file.Path,java.util.Map)&quot;&gt; &lt;code&gt;newFileSystem(Path, Map)&lt;/code&gt; &lt;/a&gt; 메서드가 호출되어 새 파일 시스템을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="874ced70251c223abb61eaa20089bbdeb0f8bb58" translate="yes" xml:space="preserve">
          <source>This method first attempts to locate an installed provider in exactly the same manner as the &lt;a href=&quot;#newFileSystem(java.nio.file.Path,java.util.Map,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;newFileSystem(Path, Map, ClassLoader)&lt;/code&gt;&lt;/a&gt; method. If found, the provider's &lt;a href=&quot;spi/filesystemprovider#newFileSystem(java.nio.file.Path,java.util.Map)&quot;&gt;&lt;code&gt;newFileSystem(Path, Map)&lt;/code&gt;&lt;/a&gt; method is invoked with an empty map to construct the new file system.</source>
          <target state="translated">이 메서드는 먼저 &lt;a href=&quot;#newFileSystem(java.nio.file.Path,java.util.Map,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;newFileSystem(Path, Map, ClassLoader)&lt;/code&gt; &lt;/a&gt; 메서드 와 동일한 방식으로 설치된 공급자를 찾으려고 시도합니다 . 찾은 경우 공급자의 &lt;a href=&quot;spi/filesystemprovider#newFileSystem(java.nio.file.Path,java.util.Map)&quot;&gt; &lt;code&gt;newFileSystem(Path, Map)&lt;/code&gt; &lt;/a&gt; 메서드가 빈 맵과 함께 호출되어 새 파일 시스템을 구성합니다.</target>
        </trans-unit>
        <trans-unit id="2780f49595166eb2ccf26df44113b129089ef21e" translate="yes" xml:space="preserve">
          <source>This method first attempts to locate an installed provider in exactly the same manner as the &lt;a href=&quot;filesystems#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt;&lt;/a&gt; method. If none of the installed providers support the URI scheme then an attempt is made to locate the provider using the given class loader. If a provider supporting the URI scheme is located then its &lt;a href=&quot;spi/filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt;&lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt;&lt;/a&gt; is invoked to construct the new file system.</source>
          <target state="translated">이 메소드는 먼저 &lt;a href=&quot;filesystems#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt; &lt;/a&gt; 과 동일한 방식으로 설치된 제공자를 찾으려고합니다. 메소드 . 설치된 프로 바이더 중 어느 것도 URI 스킴을 지원하지 않는 경우, 지정된 클래스 로더를 사용해 프로 바이더를 찾으려고합니다. URI 스킴을 지원하는 제공자가있는 경우 새 파일 시스템을 구성하기 위해 &lt;a href=&quot;spi/filesystemprovider#newFileSystem-java.net.URI-java.util.Map-&quot;&gt; &lt;code&gt;newFileSystem(URI,Map)&lt;/code&gt; &lt;/a&gt; 이 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4b57f25a6b3cc623b4e2792af6b2bd96a3576eb1" translate="yes" xml:space="preserve">
          <source>This method first calls &lt;a href=&quot;#getCachedMBeanInfo()&quot;&gt;&lt;code&gt;getCachedMBeanInfo()&lt;/code&gt;&lt;/a&gt; in order to retrieve the cached MBeanInfo for this MBean, if any. If the MBeanInfo returned by &lt;a href=&quot;#getCachedMBeanInfo()&quot;&gt;&lt;code&gt;getCachedMBeanInfo()&lt;/code&gt;&lt;/a&gt; is not null, then it is returned.</source>
          <target state="translated">이 메소드 는이 MBean에 대해 캐시 된 MBeanInfo &lt;a href=&quot;#getCachedMBeanInfo()&quot;&gt; &lt;code&gt;getCachedMBeanInfo()&lt;/code&gt; &lt;/a&gt; 를 검색하기 위해 먼저 getCachedMBeanInfo () 를 호출 합니다. &lt;a href=&quot;#getCachedMBeanInfo()&quot;&gt; &lt;code&gt;getCachedMBeanInfo()&lt;/code&gt; &lt;/a&gt; 의해 리턴 된 MBeanInfo 가 널이 아닌 경우 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="1798d4617d377c84e9b80df321391c4d2c5cf3ad" translate="yes" xml:space="preserve">
          <source>This method first calls &lt;a href=&quot;standardmbean#getCachedMBeanInfo--&quot;&gt;&lt;code&gt;getCachedMBeanInfo()&lt;/code&gt;&lt;/a&gt; in order to retrieve the cached MBeanInfo for this MBean, if any. If the MBeanInfo returned by &lt;a href=&quot;standardmbean#getCachedMBeanInfo--&quot;&gt;&lt;code&gt;getCachedMBeanInfo()&lt;/code&gt;&lt;/a&gt; is not null, then it is returned.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;standardmbean#getCachedMBeanInfo--&quot;&gt; &lt;code&gt;getCachedMBeanInfo()&lt;/code&gt; &lt;/a&gt; MBean에 대해 캐시 된 MBeanInfo를 검색하기 위해 getCachedMBeanInfo () 를 호출 합니다. MBeanInfo가 다음을 반환 한 경우&lt;a href=&quot;standardmbean#getCachedMBeanInfo--&quot;&gt; &lt;code&gt;getCachedMBeanInfo()&lt;/code&gt; &lt;/a&gt;가 널이 아닌 경우 리턴됩니다.</target>
        </trans-unit>
        <trans-unit id="aacc6528fa3281a8c1b599e3c3459f4fc658ba24" translate="yes" xml:space="preserve">
          <source>This method first checks if there is a security manager installed. If so, the method calls the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with the corresponding permission to ensure that the access to the image is allowed. If the connection to the specified URL requires either &lt;code&gt;URLPermission&lt;/code&gt; or &lt;code&gt;SocketPermission&lt;/code&gt;, then &lt;code&gt;URLPermission&lt;/code&gt; is used for security checks.</source>
          <target state="translated">이 방법은 먼저 보안 관리자가 설치되어 있는지 확인합니다. 이 경우 메서드는 해당 권한으로 보안 관리자의 &lt;code&gt;checkPermission&lt;/code&gt; 메서드를 호출 하여 이미지에 대한 액세스가 허용되는지 확인합니다. 지정된 URL에 대한 연결 중 하나를 필요로하는 경우 &lt;code&gt;URLPermission&lt;/code&gt; 또는 &lt;code&gt;SocketPermission&lt;/code&gt; 이외를 , 다음 &lt;code&gt;URLPermission&lt;/code&gt; 은 보안 검사에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="6ea5c4bd66873346f9b1da750d44ed4f498cb983" translate="yes" xml:space="preserve">
          <source>This method first checks if there is a security manager installed. If so, the method calls the security manager's &lt;code&gt;checkPermission&lt;/code&gt; method with the corresponding permission to ensure that the image creation is allowed. If the connection to the specified URL requires either &lt;code&gt;URLPermission&lt;/code&gt; or &lt;code&gt;SocketPermission&lt;/code&gt;, then &lt;code&gt;URLPermission&lt;/code&gt; is used for security checks.</source>
          <target state="translated">이 방법은 먼저 보안 관리자가 설치되어 있는지 확인합니다. 이 경우 메서드는 해당 권한을 사용 하여 보안 관리자의 &lt;code&gt;checkPermission&lt;/code&gt; 메서드를 호출 하여 이미지 생성이 허용되는지 확인합니다. 지정된 URL에 대한 연결 중 하나를 필요로하는 경우 &lt;code&gt;URLPermission&lt;/code&gt; 또는 &lt;code&gt;SocketPermission&lt;/code&gt; 이외를 , 다음 &lt;code&gt;URLPermission&lt;/code&gt; 은 보안 검사에 사용됩니다.</target>
        </trans-unit>
        <trans-unit id="7fc6ae63d9e644ae43455c4a2af401f8eab8e485" translate="yes" xml:space="preserve">
          <source>This method first checks if there is a security manager installed. If so, the method calls the security manager's &lt;code&gt;checkRead&lt;/code&gt; method with the file specified to ensure that the access to the image is allowed.</source>
          <target state="translated">이 방법은 먼저 보안 관리자가 설치되어 있는지 확인합니다. 그렇다면 메서드는 지정된 파일과 함께 보안 관리자의 &lt;code&gt;checkRead&lt;/code&gt; 메서드를 호출 하여 이미지에 대한 액세스가 허용되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="69fad2dcf99744deb714415f32d488ebfd5940dd" translate="yes" xml:space="preserve">
          <source>This method first checks if there is a security manager installed. If so, the method calls the security manager's &lt;code&gt;checkRead&lt;/code&gt; method with the specified file to ensure that the image creation is allowed.</source>
          <target state="translated">이 방법은 먼저 보안 관리자가 설치되어 있는지 확인합니다. 그렇다면 메서드는 지정된 파일과 함께 보안 관리자의 &lt;code&gt;checkRead&lt;/code&gt; 메서드를 호출 하여 이미지 생성이 허용되는지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="1d1d8095176e6fb0977224ddd2f62aa734054610" translate="yes" xml:space="preserve">
          <source>This method first determines the content type of the object by calling the &lt;code&gt;getContentType&lt;/code&gt; method. If this is the first time that the application has seen that specific content type, a content handler for that content type is created.</source>
          <target state="translated">이 메소드는 먼저 &lt;code&gt;getContentType&lt;/code&gt; 메소드 를 호출하여 오브젝트의 컨텐츠 유형을 판별합니다 . 애플리케이션이 특정 콘텐츠 유형을 처음 본 경우 해당 콘텐츠 유형에 대한 콘텐츠 핸들러가 생성됩니다.</target>
        </trans-unit>
        <trans-unit id="59140a76baec806eb4e690ef3b6f858bd5d141de" translate="yes" xml:space="preserve">
          <source>This method first determines the content type of the object by calling the &lt;code&gt;getContentType&lt;/code&gt; method. If this is the first time that the application has seen that specific content type, a content handler for that content type is created:</source>
          <target state="translated">이 메소드는 먼저 다음을 호출하여 오브젝트의 컨텐츠 유형을 판별합니다. &lt;code&gt;getContentType&lt;/code&gt; 메소드 . 애플리케이션이 특정 컨텐츠 유형을 처음 본 경우 해당 컨텐츠 유형에 대한 컨텐츠 핸들러가 작성됩니다.</target>
        </trans-unit>
        <trans-unit id="76c12afd2f5682a61d6b55898ae3f3e4274be13b" translate="yes" xml:space="preserve">
          <source>This method first encodes all input bytes into a base64 encoded byte array and then constructs a new String by using the encoded byte array and the &lt;a href=&quot;../nio/charset/standardcharsets#ISO_8859_1&quot;&gt;&lt;code&gt;ISO-8859-1&lt;/code&gt;&lt;/a&gt; charset.</source>
          <target state="translated">이 메소드는 먼저 모든 입력 바이트를 base64로 인코딩 된 바이트 배열로 인코딩 한 다음 인코딩 된 바이트 배열과 &lt;a href=&quot;../nio/charset/standardcharsets#ISO_8859_1&quot;&gt; &lt;code&gt;ISO-8859-1&lt;/code&gt; &lt;/a&gt; 문자 세트 를 사용하여 새 문자열을 구성합니다 .</target>
        </trans-unit>
        <trans-unit id="428e7d1173d67880a9e00fdf54335f66d0af40dd" translate="yes" xml:space="preserve">
          <source>This method first gets a list of restricted packages by obtaining a comma-separated list from a call to &lt;code&gt;java.security.Security.getProperty(&quot;package.access&quot;)&lt;/code&gt;, and checks to see if &lt;code&gt;pkg&lt;/code&gt; starts with or equals any of the restricted packages. If it does, then &lt;code&gt;checkPermission&lt;/code&gt; gets called with the &lt;code&gt;RuntimePermission(&quot;accessClassInPackage.&quot;+pkg)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드는 먼저 &lt;code&gt;java.security.Security.getProperty(&quot;package.access&quot;)&lt;/code&gt; 에 대한 호출에서 쉼표로 구분 된 목록을 가져 와서 제한된 패키지 목록을 가져오고 &lt;code&gt;pkg&lt;/code&gt; 가 제한된 패키지로 시작 하는지 확인 합니다. . 그렇다면 &lt;code&gt;checkPermission&lt;/code&gt; 은 &lt;code&gt;RuntimePermission(&quot;accessClassInPackage.&quot;+pkg)&lt;/code&gt; 권한으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="fd34702b84494134e43e3bafa9dd777fc7c1bdd2" translate="yes" xml:space="preserve">
          <source>This method first gets a list of restricted packages by obtaining a comma-separated list from a call to &lt;code&gt;java.security.Security.getProperty(&quot;package.definition&quot;)&lt;/code&gt;, and checks to see if &lt;code&gt;pkg&lt;/code&gt; starts with or equals any of the restricted packages. If it does, then &lt;code&gt;checkPermission&lt;/code&gt; gets called with the &lt;code&gt;RuntimePermission(&quot;defineClassInPackage.&quot;+pkg)&lt;/code&gt; permission.</source>
          <target state="translated">이 메소드는 먼저 &lt;code&gt;java.security.Security.getProperty(&quot;package.definition&quot;)&lt;/code&gt; 에 대한 호출에서 쉼표로 구분 된 목록을 가져 와서 제한된 패키지 목록을 가져 와서 &lt;code&gt;pkg&lt;/code&gt; 이 제한된 패키지로 시작 하는지 확인 합니다. . 그렇다면 &lt;code&gt;checkPermission&lt;/code&gt; 은 &lt;code&gt;RuntimePermission(&quot;defineClassInPackage.&quot;+pkg)&lt;/code&gt; 권한으로 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="cc04ec3ab29b13f97c8adbca0afe5de9bb6c72b6" translate="yes" xml:space="preserve">
          <source>This method first invalidates the component hierarchy starting from this component up to the nearest validate root. Afterwards, the component hierarchy is validated starting from the nearest validate root.</source>
          <target state="translated">이 메서드는 먼저이 구성 요소에서 시작하여 가장 가까운 유효성 검사 루트까지 구성 요소 계층 구조를 무효화합니다. 그 후 가장 가까운 유효성 검사 루트부터 구성 요소 계층의 유효성을 검사합니다.</target>
        </trans-unit>
        <trans-unit id="f52ec93dc4e339104e0b67d6d4053a3bbfe3135a" translate="yes" xml:space="preserve">
          <source>This method first invokes the &lt;a href=&quot;virtualmachinedescriptor#provider()&quot;&gt;&lt;code&gt;provider()&lt;/code&gt;&lt;/a&gt; method of the given virtual machine descriptor to obtain the attach provider. It then invokes the attach provider's &lt;a href=&quot;spi/attachprovider#attachVirtualMachine(com.sun.tools.attach.VirtualMachineDescriptor)&quot;&gt;&lt;code&gt;attachVirtualMachine&lt;/code&gt;&lt;/a&gt; to attach to the target VM.</source>
          <target state="translated">이 메서드는 먼저 지정된 가상 머신 설명 자의 &lt;a href=&quot;virtualmachinedescriptor#provider()&quot;&gt; &lt;code&gt;provider()&lt;/code&gt; &lt;/a&gt; 메서드를 호출 하여 연결 공급자를 가져옵니다. 그런 다음 연결 공급자의 &lt;a href=&quot;spi/attachprovider#attachVirtualMachine(com.sun.tools.attach.VirtualMachineDescriptor)&quot;&gt; &lt;code&gt;attachVirtualMachine&lt;/code&gt; &lt;/a&gt; 을 호출 하여 대상 VM에 연결합니다.</target>
        </trans-unit>
        <trans-unit id="730855207dd47a9c40665bc4aefc8a6ed4d9f4ff" translate="yes" xml:space="preserve">
          <source>This method first looks up the &lt;code&gt;ActionMap&lt;/code&gt; from the defaults using the key &lt;code&gt;&quot;AuditoryCues.actionMap&quot;&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 먼저 &lt;code&gt;&quot;AuditoryCues.actionMap&quot;&lt;/code&gt; 키를 사용하여 기본값 에서 &lt;code&gt;ActionMap&lt;/code&gt; 을 찾습니다 .</target>
        </trans-unit>
        <trans-unit id="d4200ececcafa704647a20c671eb7acf0f0a9be1" translate="yes" xml:space="preserve">
          <source>This method first registers an activation descriptor for the specified object as follows. It obtains the activation system by invoking the method &lt;a href=&quot;activationgroup#getSystem()&quot;&gt;&lt;code&gt;ActivationGroup.getSystem&lt;/code&gt;&lt;/a&gt;. This method then obtains an &lt;a href=&quot;activationid&quot;&gt;&lt;code&gt;ActivationID&lt;/code&gt;&lt;/a&gt; for the object by invoking the activation system's &lt;a href=&quot;activationsystem#registerObject(java.rmi.activation.ActivationDesc)&quot;&gt;&lt;code&gt;registerObject&lt;/code&gt;&lt;/a&gt; method with an &lt;a href=&quot;activationdesc&quot;&gt;&lt;code&gt;ActivationDesc&lt;/code&gt;&lt;/a&gt; constructed with the specified object's class name, and the specified location, data, and restart mode. If an exception occurs obtaining the activation system or registering the activation descriptor, that exception is thrown to the caller.</source>
          <target state="translated">이 메서드는 먼저 다음과 같이 지정된 개체에 대한 활성화 설명자를 등록합니다. &lt;a href=&quot;activationgroup#getSystem()&quot;&gt; &lt;code&gt;ActivationGroup.getSystem&lt;/code&gt; &lt;/a&gt; 메소드를 호출하여 활성화 시스템을 얻습니다 . 그런 다음이 메서드 는 지정된 개체의 클래스 이름과 지정된 위치, 데이터 및 다시 시작 모드 로 구성된 &lt;a href=&quot;activationdesc&quot;&gt; &lt;code&gt;ActivationDesc&lt;/code&gt; &lt;/a&gt; 를 사용하여 활성화 시스템의 &lt;a href=&quot;activationsystem#registerObject(java.rmi.activation.ActivationDesc)&quot;&gt; &lt;code&gt;registerObject&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 개체에 대한 &lt;a href=&quot;activationid&quot;&gt; &lt;code&gt;ActivationID&lt;/code&gt; &lt;/a&gt; 를 가져옵니다 . 활성화 시스템을 얻거나 활성화 설명자를 등록하는 중에 예외가 발생하면 해당 예외가 호출자에게 throw됩니다.</target>
        </trans-unit>
        <trans-unit id="d410430eeea2cb1c0a2ca1eba6bb4f828fcf9548" translate="yes" xml:space="preserve">
          <source>This method first resets this matcher. It then scans the input sequence looking for a match of the pattern. Characters that are not part of the match are appended directly to the result string; the match is replaced in the result by the applying the replacer function that returns a replacement string. The replacement string may contain references to captured subsequences as in the &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 먼저이 일치자를 재설정합니다. 그런 다음 입력 시퀀스를 스캔하여 일치하는 패턴을 찾습니다. 일치의 일부가 아닌 문자는 결과 문자열에 직접 추가됩니다. 대체 문자열을 반환하는 대체 함수를 적용하여 결과에서 일치 항목을 대체합니다. 대체 문자열에는 &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt; 메서드 에서와 같이 캡처 된 하위 시퀀스에 대한 참조가 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="168d8133a872f0f2f16a18d76149ac6cc6c27d1a" translate="yes" xml:space="preserve">
          <source>This method first resets this matcher. It then scans the input sequence looking for a match of the pattern. Characters that are not part of the match are appended directly to the result string; the match is replaced in the result by the replacement string. The replacement string may contain references to captured subsequences as in the &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 먼저이 일치자를 재설정합니다. 그런 다음 입력 시퀀스를 스캔하여 일치하는 패턴을 찾습니다. 일치의 일부가 아닌 문자는 결과 문자열에 직접 추가됩니다. 일치는 결과에서 대체 문자열로 대체됩니다. 대체 문자열에는 &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt; 메서드 에서와 같이 캡처 된 하위 시퀀스에 대한 참조가 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="dee20129dc59e859025bd28928a1b166bb308aac" translate="yes" xml:space="preserve">
          <source>This method first resets this matcher. It then scans the input sequence looking for a match of the pattern. Characters that are not part of the match are appended directly to the result string; the match is replaced in the result by the replacement string. The replacement string may contain references to captured subsequences as in the &lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 방법은 먼저이 매처를 재설정합니다. 그런 다음 패턴과 일치하는 입력 시퀀스를 스캔합니다. 일치하지 않는 문자는 결과 문자열에 직접 추가됩니다. 일치하는 결과는 대체 문자열로 대체됩니다. 교체 문자열에는 &lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt; 에서와 같이 캡처 된 하위 시퀀스에 대한 참조가 포함될 수 있습니다 . 메소드 .</target>
        </trans-unit>
        <trans-unit id="32a24529079404af9aa0856c5c0c11cb502ea26b" translate="yes" xml:space="preserve">
          <source>This method first resets this matcher. It then scans the input sequence looking for matches of the pattern. Characters that are not part of any match are appended directly to the result string; each match is replaced in the result by the applying the replacer function that returns a replacement string. Each replacement string may contain references to captured subsequences as in the &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 먼저이 일치자를 재설정합니다. 그런 다음 입력 시퀀스를 스캔하여 일치하는 패턴을 찾습니다. 일치하지 않는 문자는 결과 문자열에 직접 추가됩니다. 각 일치 항목은 대체 문자열을 반환하는 대체 함수를 적용하여 결과에서 대체됩니다. 각 대체 문자열에는 &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt; 메서드 에서와 같이 캡처 된 하위 시퀀스에 대한 참조가 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="9d887e5ee337e27333e8a38810e9f71beaff22c1" translate="yes" xml:space="preserve">
          <source>This method first resets this matcher. It then scans the input sequence looking for matches of the pattern. Characters that are not part of any match are appended directly to the result string; each match is replaced in the result by the replacement string. The replacement string may contain references to captured subsequences as in the &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 먼저이 일치자를 재설정합니다. 그런 다음 입력 시퀀스를 스캔하여 일치하는 패턴을 찾습니다. 일치하지 않는 문자는 결과 문자열에 직접 추가됩니다. 각 일치는 결과에서 대체 문자열로 대체됩니다. 대체 문자열에는 &lt;a href=&quot;#appendReplacement(java.lang.StringBuffer,java.lang.String)&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt; 메서드 에서와 같이 캡처 된 하위 시퀀스에 대한 참조가 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="26f6cb3387c41fe104f31644a6b216b8ba0d8140" translate="yes" xml:space="preserve">
          <source>This method first resets this matcher. It then scans the input sequence looking for matches of the pattern. Characters that are not part of any match are appended directly to the result string; each match is replaced in the result by the replacement string. The replacement string may contain references to captured subsequences as in the &lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt;&lt;code&gt;appendReplacement&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 방법은 먼저이 매처를 재설정합니다. 그런 다음 패턴과 일치하는 입력 시퀀스를 스캔합니다. 일치하지 않는 문자는 결과 문자열에 직접 추가됩니다. 각 일치 항목은 결과에서 대체 문자열로 대체됩니다. 대체 문자열에는 &lt;a href=&quot;matcher#appendReplacement-java.lang.StringBuffer-java.lang.String-&quot;&gt; &lt;code&gt;appendReplacement&lt;/code&gt; &lt;/a&gt; 메소드 에서와 같이 캡처 된 서브 시퀀스에 대한 참조가 포함될 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="454b55b13454df1ffb7a9f545d399b9998fbac9f" translate="yes" xml:space="preserve">
          <source>This method first retrieves the current Thread's &lt;code&gt;AccessControlContext&lt;/code&gt; via &lt;code&gt;AccessController.getContext&lt;/code&gt;, and then instantiates a new &lt;code&gt;AccessControlContext&lt;/code&gt; using the retrieved context along with a new &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; (constructed using the provided &lt;code&gt;Subject&lt;/code&gt;). Finally, this method invokes &lt;code&gt;AccessController.doPrivileged&lt;/code&gt;, passing it the provided &lt;code&gt;PrivilegedAction&lt;/code&gt;, as well as the newly constructed &lt;code&gt;AccessControlContext&lt;/code&gt;.</source>
          <target state="translated">이 방법은 먼저 현재의 쓰레드의 검색 &lt;code&gt;AccessControlContext&lt;/code&gt; 통해 &lt;code&gt;AccessController.getContext&lt;/code&gt; 하고 새 인스턴스 &lt;code&gt;AccessControlContext&lt;/code&gt; 새로운 따라 검색된 컨텍스트를 사용 &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; 에 (제공된하여 구성 &lt;code&gt;Subject&lt;/code&gt; ). 마지막으로,이 메소드는 &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; 를 호출 하여 제공된 &lt;code&gt;PrivilegedAction&lt;/code&gt; 과 새로 생성 된 PrivilegedAction을 전달합니다. &lt;code&gt;AccessControlContext&lt;/code&gt; 를 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="37b325e60cde38d418deb1d8e962ea5c6de2a359" translate="yes" xml:space="preserve">
          <source>This method first retrieves the current Thread's &lt;code&gt;AccessControlContext&lt;/code&gt; via &lt;code&gt;AccessController.getContext&lt;/code&gt;, and then instantiates a new &lt;code&gt;AccessControlContext&lt;/code&gt; using the retrieved context along with a new &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; (constructed using the provided &lt;code&gt;Subject&lt;/code&gt;). Finally, this method invokes &lt;code&gt;AccessController.doPrivileged&lt;/code&gt;, passing it the provided &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt;, as well as the newly constructed &lt;code&gt;AccessControlContext&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 먼저 현재 스레드의 &lt;code&gt;AccessControlContext&lt;/code&gt; 를 검색합니다. 통해 &lt;code&gt;AccessController.getContext&lt;/code&gt; 하고 새 인스턴스 &lt;code&gt;AccessControlContext&lt;/code&gt; 새로운 따라 검색된 컨텍스트를 사용 &lt;code&gt;SubjectDomainCombiner&lt;/code&gt; 에 (제공된하여 구성 &lt;code&gt;Subject&lt;/code&gt; ). 마지막으로,이 메소드는 &lt;code&gt;AccessController.doPrivileged&lt;/code&gt; 를 호출 하여 제공된 &lt;code&gt;PrivilegedExceptionAction&lt;/code&gt; 과 새로 구성된 &lt;code&gt;AccessControlContext&lt;/code&gt; 를 전달 합니다.</target>
        </trans-unit>
        <trans-unit id="3721220fa080e7d6464d6c7eb00c8b6d61b5f653" translate="yes" xml:space="preserve">
          <source>This method first verifies that this channel is open and that the given initial interest set is valid.</source>
          <target state="translated">이 방법은 먼저이 채널이 열려 있고 지정된 초기 관심사 세트가 유효한지 확인합니다.</target>
        </trans-unit>
        <trans-unit id="7d0c6e67c905619f3119435a65c48ff048cc99c1" translate="yes" xml:space="preserve">
          <source>This method follows symbolic links if the file referenced by this object is a symbolic link. Depending on the implementation, this method may require to read file permissions, access control lists, or other file attributes in order to check the effective access to the file. To determine the effective access to a file may require access to several attributes and so in some implementations this method may not be atomic with respect to other file system operations.</source>
          <target state="translated">이 객체가 참조하는 파일이 심볼릭 링크 인 경우이 메소드는 심볼릭 링크를 따릅니다. 구현에 따라이 방법은 파일에 대한 효과적인 액세스를 확인하기 위해 파일 권한, 액세스 제어 목록 또는 기타 파일 속성을 읽어야 할 수 있습니다. 파일에 대한 효과적인 액세스를 결정하려면 여러 속성에 대한 액세스가 필요할 수 있으므로 일부 구현에서이 방법은 다른 파일 시스템 작업과 관련하여 원 자성이 아닐 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="3d054a9d374ac852644bb34d3645f826a25d06c4" translate="yes" xml:space="preserve">
          <source>This method follows the inheritance rules specified in the JLS (8.4.6) to determine visibility.</source>
          <target state="translated">이 메소드는 가시성을 결정하기 위해 JLS (8.4.6)에 지정된 상속 규칙을 따릅니다.</target>
        </trans-unit>
        <trans-unit id="9416a62f512b9426d755bc916a71a8cb0c92c819" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;Array&lt;/code&gt; object and releases the resources that it holds.</source>
          <target state="translated">이 메서드는 &lt;code&gt;Array&lt;/code&gt; 개체를 해제하고 보유하고있는 리소스를 해제합니다.</target>
        </trans-unit>
        <trans-unit id="bb29629cc3555edadfbf5a28ef80d4ae1f2bd6af" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;Array&lt;/code&gt; object and releases the resources that it holds. The object is invalid once the &lt;code&gt;free&lt;/code&gt; method is called.</source>
          <target state="translated">이 메서드는 &lt;code&gt;Array&lt;/code&gt; 개체를 해제하고 보유하고있는 리소스를 해제합니다. &lt;code&gt;free&lt;/code&gt; 메서드가 호출 되면 개체가 유효하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="72ff3e6bcbf8666ac1344549049e7307f3dea02c" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;Blob&lt;/code&gt; object and releases the resources that it holds.</source>
          <target state="translated">이 메서드는 &lt;code&gt;Blob&lt;/code&gt; 개체를 해제하고 보유하고있는 리소스를 해제합니다.</target>
        </trans-unit>
        <trans-unit id="35b690bde0d7c9dc42755353da794ebab895463f" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;Blob&lt;/code&gt; object and releases the resources that it holds. The object is invalid once the &lt;code&gt;free&lt;/code&gt; method is called.</source>
          <target state="translated">이 메서드는 &lt;code&gt;Blob&lt;/code&gt; 개체를 해제하고 보유하고있는 리소스를 해제합니다. &lt;code&gt;free&lt;/code&gt; 메서드가 호출 되면 개체가 유효하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="f5b5f113b1ad563ea7d422b246c369b06c0ff043" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;SerialArray&lt;/code&gt; object and releases the resources that it holds.</source>
          <target state="translated">이 메서드는 &lt;code&gt;SerialArray&lt;/code&gt; 개체를 해제하고 보유하고있는 리소스를 해제합니다.</target>
        </trans-unit>
        <trans-unit id="42c2c633c39322de9e165220b32376e593114ddf" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;SerialArray&lt;/code&gt; object and releases the resources that it holds. The object is invalid once the &lt;code&gt;free&lt;/code&gt; method is called.</source>
          <target state="translated">이 메서드는 &lt;code&gt;SerialArray&lt;/code&gt; 개체를 해제하고 보유하고있는 리소스를 해제합니다. &lt;code&gt;free&lt;/code&gt; 메서드가 호출 되면 개체가 유효하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="2d647c1e3b28cde29410f634b69775c381d37eff" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;SerialBlob&lt;/code&gt; object and releases the resources that it holds.</source>
          <target state="translated">이 메서드는 &lt;code&gt;SerialBlob&lt;/code&gt; 개체를 해제하고 보유하고있는 리소스를 해제합니다.</target>
        </trans-unit>
        <trans-unit id="3a6692ec888fc11d0f4a4d2eff35fbbf5a492ff6" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;SerialBlob&lt;/code&gt; object and releases the resources that it holds. The object is invalid once the &lt;code&gt;free&lt;/code&gt; method is called.</source>
          <target state="translated">이 메서드는 &lt;code&gt;SerialBlob&lt;/code&gt; 개체를 해제하고 보유하고있는 리소스를 해제합니다. &lt;code&gt;free&lt;/code&gt; 메서드가 호출 되면 개체가 유효하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="fcd04518ff752369fda70b73ccfaf40f93448232" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;SerialClob&lt;/code&gt; object and releases the resources that it holds.</source>
          <target state="translated">이 메서드는 &lt;code&gt;SerialClob&lt;/code&gt; 개체를 해제하고 보유하고있는 리소스를 해제합니다.</target>
        </trans-unit>
        <trans-unit id="6ed7b7277d94d3e61bdc0faf46ad15eebcac6272" translate="yes" xml:space="preserve">
          <source>This method frees the &lt;code&gt;SerialClob&lt;/code&gt; object and releases the resources that it holds. The object is invalid once the &lt;code&gt;free&lt;/code&gt; method is called.</source>
          <target state="translated">이 메서드는 &lt;code&gt;SerialClob&lt;/code&gt; 개체를 해제하고 보유하고있는 리소스를 해제합니다. &lt;code&gt;free&lt;/code&gt; 메서드가 호출 되면 개체가 유효하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="b8e24bd7fc6343edc5e4b4c35d09f073ad5899c8" translate="yes" xml:space="preserve">
          <source>This method generally cannot be called to determine whether a connection to a database is valid or invalid. A typical client can determine that a connection is invalid by catching any exceptions that might be thrown when an operation is attempted.</source>
          <target state="translated">이 메서드는 일반적으로 데이터베이스에 대한 연결이 유효한지 여부를 확인하기 위해 호출 할 수 없습니다. 일반적인 클라이언트는 작업이 시도 될 때 발생할 수있는 예외를 포착하여 연결이 유효하지 않은지 확인할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="2f4a455b4a0884cb4ca36d968f9c39ac863c667d" translate="yes" xml:space="preserve">
          <source>This method gets called every time when a rollover column in the table header is updated.</source>
          <target state="translated">이 메서드는 테이블 헤더의 롤오버 열이 업데이트 될 때마다 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="716689e661d3bd42f8f76a4094f93e53ebf0f2a9" translate="yes" xml:space="preserve">
          <source>This method gets called every time when a rollover column in the table header is updated. Every look and feel that supports a rollover effect in a table header should override this method and repaint the header.</source>
          <target state="translated">이 메서드는 테이블 헤더의 롤오버 열이 업데이트 될 때마다 호출됩니다. 테이블 헤더에서 롤오버 효과를 지원하는 모든 룩앤필은이 메서드를 재정의하고 헤더를 다시 그려야합니다.</target>
        </trans-unit>
        <trans-unit id="1ed696dd767146112c705a208dd3d445c09cc20a" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed on the associated JTextComponent.</source>
          <target state="translated">이 메서드는 연결된 JTextComponent에서 바인딩 된 속성이 변경 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f67870623db01abf4133046b5a9aab58f5364e1d" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed on the associated JTextComponent. This is a hook which UI implementations may change to reflect how the UI displays bound properties of JTextComponent subclasses.</source>
          <target state="translated">이 메서드는 연결된 JTextComponent에서 바인딩 된 속성이 변경 될 때 호출됩니다. 이것은 UI가 JTextComponent 하위 클래스의 바인딩 된 속성을 표시하는 방법을 반영하기 위해 UI 구현이 변경할 수있는 후크입니다.</target>
        </trans-unit>
        <trans-unit id="3e845d79d662dcf6885270d2d8f70170cec96f62" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed on the associated JTextComponent. This is a hook which UI implementations may change to reflect how the UI displays bound properties of JTextComponent subclasses. If the font, foreground or document has changed, the the appropriate property is set in the default style of the document.</source>
          <target state="translated">이 메서드는 연결된 JTextComponent에서 바인딩 된 속성이 변경 될 때 호출됩니다. 이것은 UI가 JTextComponent 하위 클래스의 바인딩 된 속성을 표시하는 방법을 반영하기 위해 UI 구현이 변경할 수있는 후크입니다. 글꼴, 전경 또는 문서가 변경된 경우 적절한 속성이 문서의 기본 스타일로 설정됩니다.</target>
        </trans-unit>
        <trans-unit id="3ef43e46063d331cbfaf4b18ae2273343f2a2666" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed on the associated JTextComponent. This is a hook which UI implementations may change to reflect how the UI displays bound properties of JTextComponent subclasses. This is implemented to do nothing (i.e. the response to properties in JTextComponent itself are handled prior to calling this method).</source>
          <target state="translated">이 메서드는 연결된 JTextComponent에서 바인딩 된 속성이 변경 될 때 호출됩니다. 이것은 UI가 JTextComponent 하위 클래스의 바인딩 된 속성을 표시하는 방법을 반영하기 위해 UI 구현이 변경할 수있는 후크입니다. 이것은 아무것도하지 않도록 구현됩니다 (즉, JTextComponent 자체의 속성에 대한 응답은이 메서드를 호출하기 전에 처리됩니다).</target>
        </trans-unit>
        <trans-unit id="8b7b7c32e05929899e4bbf10e34641cb170273cd" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed on the associated JTextComponent. This is a hook which UI implementations may change to reflect how the UI displays bound properties of JTextComponent subclasses. This is implemented to do nothing (i.e. the response to properties in JTextComponent itself are handled prior to calling this method). This implementation updates the background of the text component if the editable and/or enabled state changes.</source>
          <target state="translated">이 메서드는 연결된 JTextComponent에서 바인딩 된 속성이 변경 될 때 호출됩니다. 이것은 UI가 JTextComponent 하위 클래스의 바인딩 된 속성을 표시하는 방법을 반영하기 위해 UI 구현이 변경할 수있는 후크입니다. 이것은 아무것도하지 않도록 구현됩니다 (즉, JTextComponent 자체의 속성에 대한 응답은이 메서드를 호출하기 전에 처리됩니다). 이 구현은 편집 가능 및 / 또는 활성화 상태가 변경되는 경우 텍스트 구성 요소의 배경을 업데이트합니다.</target>
        </trans-unit>
        <trans-unit id="0b3f899917d4222f21426921a11e9b94ecea8d90" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed on the associated JTextComponent. This is a hook which UI implementations may change to reflect how the UI displays bound properties of JTextComponent subclasses. This is implemented to rebuild the ActionMap based upon an EditorKit change.</source>
          <target state="translated">이 메서드는 연결된 JTextComponent에서 바인딩 된 속성이 변경 될 때 호출됩니다. 이것은 UI가 JTextComponent 하위 클래스의 바인딩 된 속성을 표시하는 방법을 반영하기 위해 UI 구현이 변경할 수있는 후크입니다. 이것은 EditorKit 변경에 따라 ActionMap을 다시 빌드하기 위해 구현됩니다.</target>
        </trans-unit>
        <trans-unit id="5e8e43d425fb2b3f8d855c57cd9179f81cadec8e" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed on the associated JTextComponent. This is a hook which UI implementations may change to reflect how the UI displays bound properties of JTextComponent subclasses. This is implemented to rebuild the View when the &lt;em&gt;WrapLine&lt;/em&gt; or the &lt;em&gt;WrapStyleWord&lt;/em&gt; property changes.</source>
          <target state="translated">이 메서드는 연결된 JTextComponent에서 바인딩 된 속성이 변경 될 때 호출됩니다. 이것은 UI가 JTextComponent 하위 클래스의 바인딩 된 속성을 표시하는 방법을 반영하기 위해 UI 구현이 변경할 수있는 후크입니다. 이는 &lt;em&gt;WrapLine&lt;/em&gt; 또는 &lt;em&gt;WrapStyleWord&lt;/em&gt; 속성이 변경 될 때 View를 다시 작성하기 위해 구현 됩니다.</target>
        </trans-unit>
        <trans-unit id="d162285c691fe9ba58164f60c01d1f90afda5b8d" translate="yes" xml:space="preserve">
          <source>This method gets called when a bound property is changed.</source>
          <target state="translated">바인딩 된 속성이 변경되면이 메서드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e0a919a268cd80181fb6acbf66f00fc444540914" translate="yes" xml:space="preserve">
          <source>This method gets called when a child node is added.</source>
          <target state="translated">이 메소드는 자식 노드가 추가 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="fd9efef61dcaca2310dfb7656d4109520bd8413f" translate="yes" xml:space="preserve">
          <source>This method gets called when a child node is removed.</source>
          <target state="translated">이 메소드는 자식 노드가 제거 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="c696073c099d1d3c7484136336e5c0f85bdff14b" translate="yes" xml:space="preserve">
          <source>This method gets called when a constrained property is changed.</source>
          <target state="translated">제한된 속성이 변경되면이 메서드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="2fd1ac397c8871de42362b11036ea73cbe290206" translate="yes" xml:space="preserve">
          <source>This method gets called when a preference is added, removed or when its value is changed.</source>
          <target state="translated">이 메소드는 환경 설정이 추가, 제거 또는 값이 변경 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="67c4b16e7a8f74ea8d858a0e27a6e8073b85e3c6" translate="yes" xml:space="preserve">
          <source>This method gives flow strategies access to the logical view of the FlowView.</source>
          <target state="translated">이 메서드는 FlowView의 논리적보기에 대한 흐름 전략 액세스를 제공합니다.</target>
        </trans-unit>
        <trans-unit id="207eb5b964d32ee5e893b2d65f22257f9a8977ea" translate="yes" xml:space="preserve">
          <source>This method has been deprecated because it returns an instance of XMLInputFactory, which is of the wrong class.</source>
          <target state="translated">이 메서드는 잘못된 클래스의 XMLInputFactory 인스턴스를 반환하기 때문에 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="14510be1a54f84764142cf23fd501ffc2bf126d7" translate="yes" xml:space="preserve">
          <source>This method has been deprecated because it returns an instance of XMLInputFactory, which is of the wrong class. Use the new method &lt;a href=&quot;#newFactory(java.lang.String,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;newFactory(java.lang.String,
              java.lang.ClassLoader)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">이 메서드는 잘못된 클래스의 XMLInputFactory 인스턴스를 반환하기 때문에 더 이상 사용되지 않습니다. 대신 새 메소드 &lt;a href=&quot;#newFactory(java.lang.String,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;newFactory(java.lang.String, java.lang.ClassLoader)&lt;/code&gt; &lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="6b6eadd6ed5abe62940d217f1edc699a08051a61" translate="yes" xml:space="preserve">
          <source>This method has been deprecated to maintain API consistency.</source>
          <target state="translated">이 메서드는 API 일관성을 유지하기 위해 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2587168806a67ba083e4360aee6c340c1058a892" translate="yes" xml:space="preserve">
          <source>This method has been deprecated to maintain API consistency. All newInstance methods have been replaced with corresponding newFactory methods. The replacement &lt;a href=&quot;#newFactory(java.lang.String,java.lang.ClassLoader)&quot;&gt;&lt;code&gt;newFactory(java.lang.String, java.lang.ClassLoader)&lt;/code&gt;&lt;/a&gt; method defines no changes in behavior.</source>
          <target state="translated">이 메서드는 API 일관성을 유지하기 위해 더 이상 사용되지 않습니다. 모든 newInstance 메서드는 해당하는 newFactory 메서드로 대체되었습니다. 대체 &lt;a href=&quot;#newFactory(java.lang.String,java.lang.ClassLoader)&quot;&gt; &lt;code&gt;newFactory(java.lang.String, java.lang.ClassLoader)&lt;/code&gt; &lt;/a&gt; 메소드는 동작의 변경을 정의하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="a1dcc62600f89ce19ff9bcfc62fa01450510f5c4" translate="yes" xml:space="preserve">
          <source>This method has been deprecated, as it is inherently deadlock-prone.</source>
          <target state="translated">이 방법은 본질적으로 교착 상태가 발생하기 쉬우므로 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2d373e87d490f98aee9a6b4780b2e36e033add7d" translate="yes" xml:space="preserve">
          <source>This method has been deprecated, as it is inherently deadlock-prone. If the target thread holds a lock on the monitor protecting a critical system resource when it is suspended, no thread can access this resource until the target thread is resumed. If the thread that would resume the target thread attempts to lock this monitor prior to calling &lt;code&gt;resume&lt;/code&gt;, deadlock results. Such deadlocks typically manifest themselves as &quot;frozen&quot; processes. For more information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html&quot;&gt;Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?&lt;/a&gt;.</source>
          <target state="translated">이 방법은 본질적으로 교착 상태가 발생하기 쉬우므로 더 이상 사용되지 않습니다. 대상 스레드가 일시 중단 될 때 중요한 시스템 자원을 보호하는 모니터에 잠금을 보유하면 대상 스레드가 재개 될 때까지 스레드가이 자원에 액세스 할 수 없습니다. 대상 스레드를 재개 할 스레드가 &lt;code&gt;resume&lt;/code&gt; 을 호출하기 전에이 모니터를 잠그려고하면 교착 상태가 발생합니다. 이러한 교착 상태는 일반적으로 &quot;고정 된&quot;프로세스로 나타납니다. 자세한 내용 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html&quot;&gt;은 Thread.stop, Thread.suspend 및 Thread.resume이&lt;/a&gt; 더 이상 사용되지 않는 이유를 참조하세요 . .</target>
        </trans-unit>
        <trans-unit id="282d6631d38a2c85b88b01772c0def013d1c5892" translate="yes" xml:space="preserve">
          <source>This method has been deprecated, as it is inherently deadlock-prone. If the target thread holds a lock on the monitor protecting a critical system resource when it is suspended, no thread can access this resource until the target thread is resumed. If the thread that would resume the target thread attempts to lock this monitor prior to calling &lt;code&gt;resume&lt;/code&gt;, deadlock results. Such deadlocks typically manifest themselves as &quot;frozen&quot; processes. For more information, see &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html&quot;&gt;Why are Thread.stop, Thread.suspend and Thread.resume Deprecated?&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 본질적으로 교착 상태가 발생하기 쉬우므로 더 이상 사용되지 않습니다. 대상 스레드가 일시 중단 될 때 중요한 시스템 자원을 보호하는 모니터에 잠금을 보유하는 경우 대상 스레드가 재개 될 때까지 스레드가이 자원에 액세스 할 수 없습니다. 대상 스레드를 재개 할 스레드가 &lt;code&gt;resume&lt;/code&gt; 을 호출하기 전에이 모니터를 잠그려고하면 교착 상태가 발생합니다. 이러한 교착 상태는 일반적으로 &quot;고정 된&quot;프로세스로 나타납니다. 자세한 내용 &lt;a href=&quot;https://docs.oracle.com/en/java/javase/15/docs/api/java.base/java/lang/doc-files/threadPrimitiveDeprecation.html&quot;&gt;은 Thread.stop, Thread.suspend 및 Thread.resume이&lt;/a&gt; 더 이상 사용되지 않는 이유를 참조하세요 . .</target>
        </trans-unit>
        <trans-unit id="9c38da1a7f1377b16091a41f41b36de52baa5fc8" translate="yes" xml:space="preserve">
          <source>This method has been superseded by the &lt;a href=&quot;#acquiredBy()&quot;&gt;&lt;code&gt;acquiredBy&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 방법에 의해 대체되었습니다 &lt;a href=&quot;#acquiredBy()&quot;&gt; &lt;code&gt;acquiredBy&lt;/code&gt; 의&lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="9c6bfc3827438059a1a5628710ed9ab1b5dbd71f" translate="yes" xml:space="preserve">
          <source>This method has been superseded by the &lt;a href=&quot;filelock#acquiredBy--&quot;&gt;&lt;code&gt;acquiredBy&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 방법에 의해 대체되었습니다 &lt;a href=&quot;filelock#acquiredBy--&quot;&gt; &lt;code&gt;acquiredBy&lt;/code&gt; 의&lt;/a&gt; 방법.</target>
        </trans-unit>
        <trans-unit id="4df9de07317ceff1a8210df7d20f82d08d221595" translate="yes" xml:space="preserve">
          <source>This method has no effect if the package is already &lt;em&gt;open&lt;/em&gt; to the given module.</source>
          <target state="translated">패키지가 이미 주어진 모듈에 &lt;em&gt;열려&lt;/em&gt; 있는 경우이 메서드는 효과가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="be48bab8316d91d535d99ea1285afc6f957304f5" translate="yes" xml:space="preserve">
          <source>This method has no effect if the package is already exported (or &lt;em&gt;open&lt;/em&gt;) to the given module.</source>
          <target state="translated">이 메서드는 패키지가 이미 지정된 모듈로 내 보내진 (또는 &lt;em&gt;열려있는 경우&lt;/em&gt; ) 효과가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="46656d29a1828add6efcdcf82ec4862c8f694eca" translate="yes" xml:space="preserve">
          <source>This method has no effect when the application provides a character stream.</source>
          <target state="translated">이 메서드는 응용 프로그램이 문자 스트림을 제공하는 경우 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="634a3cfad53091bd832c4037a77d7a8811ca13ad" translate="yes" xml:space="preserve">
          <source>This method has no effect.</source>
          <target state="translated">이 방법은 효과가 없습니다.</target>
        </trans-unit>
        <trans-unit id="38b5307892f13307c213bad78d134b69a08c9113" translate="yes" xml:space="preserve">
          <source>This method has no effect. The MBean Server used to obtain an attribute value is &lt;a href=&quot;queryeval#getMBeanServer()&quot;&gt;&lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 효과가 없습니다. 속성 값을 얻는 데 사용되는 MBean 서버는 &lt;a href=&quot;queryeval#getMBeanServer()&quot;&gt; &lt;code&gt;QueryEval.getMBeanServer()&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="e4c532ad9046d663b2d9ca41898a698ec54f6f23" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(V,V)&quot;&gt;&lt;code&gt;compareAndExchange(V, V)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(V,V)&quot;&gt;&lt;code&gt;compareAndSet(V, V)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이 메서드에는 일반 메모리 효과가 있지만 메서드 이름은 휘발성 메모리 효과를 의미합니다 ( &lt;a href=&quot;#compareAndExchange(V,V)&quot;&gt; &lt;code&gt;compareAndExchange(V, V)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#compareAndSet(V,V)&quot;&gt; &lt;code&gt;compareAndSet(V, V)&lt;/code&gt; &lt;/a&gt; 와 같은 메서드 참조 ).</target>
        </trans-unit>
        <trans-unit id="cd02e49d4de525cd43027c0a8b9d741a85ba2405" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(V,V)&quot;&gt;&lt;code&gt;compareAndExchange(V, V)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(V,V)&quot;&gt;&lt;code&gt;compareAndSet(V, V)&lt;/code&gt;&lt;/a&gt;). To avoid confusion over plain or volatile memory effects it is recommended that the method &lt;a href=&quot;#weakCompareAndSetPlain(V,V)&quot;&gt;&lt;code&gt;weakCompareAndSetPlain(V, V)&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">이 메서드에는 일반 메모리 효과가 있지만 메서드 이름은 휘발성 메모리 효과를 의미합니다 ( &lt;a href=&quot;#compareAndExchange(V,V)&quot;&gt; &lt;code&gt;compareAndExchange(V, V)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#compareAndSet(V,V)&quot;&gt; &lt;code&gt;compareAndSet(V, V)&lt;/code&gt; &lt;/a&gt; 와 같은 메서드 참조 ). 일반 또는 휘발성 메모리 효과에 대한 혼동을 피하기 위해 &lt;a href=&quot;#weakCompareAndSetPlain(V,V)&quot;&gt; &lt;code&gt;weakCompareAndSetPlain(V, V)&lt;/code&gt; &lt;/a&gt; 메서드를 대신 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="0ae439f4ad31d44319933a43ae29db25bc1b0dc1" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(boolean,boolean)&quot;&gt;&lt;code&gt;compareAndExchange(boolean, boolean)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(boolean,boolean)&quot;&gt;&lt;code&gt;compareAndSet(boolean, boolean)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이 메서드에는 일반 메모리 효과가 있지만 메서드 이름은 휘발성 메모리 효과를 의미합니다 ( &lt;a href=&quot;#compareAndExchange(boolean,boolean)&quot;&gt; &lt;code&gt;compareAndExchange(boolean, boolean)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#compareAndSet(boolean,boolean)&quot;&gt; &lt;code&gt;compareAndSet(boolean, boolean)&lt;/code&gt; &lt;/a&gt; 와 같은 메서드 참조 ).</target>
        </trans-unit>
        <trans-unit id="2fcdc40f63d235c2adea02680e759e172b3acffd" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(boolean,boolean)&quot;&gt;&lt;code&gt;compareAndExchange(boolean, boolean)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(boolean,boolean)&quot;&gt;&lt;code&gt;compareAndSet(boolean, boolean)&lt;/code&gt;&lt;/a&gt;). To avoid confusion over plain or volatile memory effects it is recommended that the method &lt;a href=&quot;#weakCompareAndSetPlain(boolean,boolean)&quot;&gt;&lt;code&gt;weakCompareAndSetPlain(boolean, boolean)&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">이 메서드에는 일반 메모리 효과가 있지만 메서드 이름은 휘발성 메모리 효과를 의미합니다 ( &lt;a href=&quot;#compareAndExchange(boolean,boolean)&quot;&gt; &lt;code&gt;compareAndExchange(boolean, boolean)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#compareAndSet(boolean,boolean)&quot;&gt; &lt;code&gt;compareAndSet(boolean, boolean)&lt;/code&gt; &lt;/a&gt; 와 같은 메서드 참조 ). 일반 또는 휘발성 메모리 효과에 대한 혼동을 피하기 위해 &lt;a href=&quot;#weakCompareAndSetPlain(boolean,boolean)&quot;&gt; &lt;code&gt;weakCompareAndSetPlain(boolean, boolean)&lt;/code&gt; &lt;/a&gt; 메서드를 대신 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a6a296b61d02a14af7deae2e4981e9236f2d70b8" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(int,E,E)&quot;&gt;&lt;code&gt;compareAndExchange(int, E, E)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(int,E,E)&quot;&gt;&lt;code&gt;compareAndSet(int, E, E)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이 메서드에는 일반 메모리 효과가 있지만 메서드 이름은 휘발성 메모리 효과를 의미합니다 ( &lt;a href=&quot;#compareAndExchange(int,E,E)&quot;&gt; &lt;code&gt;compareAndExchange(int, E, E)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#compareAndSet(int,E,E)&quot;&gt; &lt;code&gt;compareAndSet(int, E, E)&lt;/code&gt; &lt;/a&gt; 와 같은 메서드 참조 ).</target>
        </trans-unit>
        <trans-unit id="ee7abc334b2d55e1f51e4501ea8e975ae11a24b2" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(int,E,E)&quot;&gt;&lt;code&gt;compareAndExchange(int, E, E)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(int,E,E)&quot;&gt;&lt;code&gt;compareAndSet(int, E, E)&lt;/code&gt;&lt;/a&gt;). To avoid confusion over plain or volatile memory effects it is recommended that the method &lt;a href=&quot;#weakCompareAndSetPlain(int,E,E)&quot;&gt;&lt;code&gt;weakCompareAndSetPlain(int, E, E)&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">이 메서드에는 일반 메모리 효과가 있지만 메서드 이름은 휘발성 메모리 효과를 의미합니다 ( &lt;a href=&quot;#compareAndExchange(int,E,E)&quot;&gt; &lt;code&gt;compareAndExchange(int, E, E)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#compareAndSet(int,E,E)&quot;&gt; &lt;code&gt;compareAndSet(int, E, E)&lt;/code&gt; &lt;/a&gt; 와 같은 메서드 참조 ). 일반 또는 휘발성 메모리 효과에 대한 혼동을 피하기 위해 &lt;a href=&quot;#weakCompareAndSetPlain(int,E,E)&quot;&gt; &lt;code&gt;weakCompareAndSetPlain(int, E, E)&lt;/code&gt; &lt;/a&gt; 메서드를 대신 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="b0ddf0c94c32a133090d344b5fccc21d6d78d2b8" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(int,int)&quot;&gt;&lt;code&gt;compareAndExchange(int, int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(int,int)&quot;&gt;&lt;code&gt;compareAndSet(int, int)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이 메서드에는 일반 메모리 효과가 있지만 메서드 이름은 휘발성 메모리 효과를 의미합니다 ( &lt;a href=&quot;#compareAndExchange(int,int)&quot;&gt; &lt;code&gt;compareAndExchange(int, int)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#compareAndSet(int,int)&quot;&gt; &lt;code&gt;compareAndSet(int, int)&lt;/code&gt; &lt;/a&gt; 와 같은 메서드 참조 ).</target>
        </trans-unit>
        <trans-unit id="c90d91ede833ec79934e330c75e6883f865b60cf" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(int,int)&quot;&gt;&lt;code&gt;compareAndExchange(int, int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(int,int)&quot;&gt;&lt;code&gt;compareAndSet(int, int)&lt;/code&gt;&lt;/a&gt;). To avoid confusion over plain or volatile memory effects it is recommended that the method &lt;a href=&quot;#weakCompareAndSetPlain(int,int)&quot;&gt;&lt;code&gt;weakCompareAndSetPlain(int, int)&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">이 메서드에는 일반 메모리 효과가 있지만 메서드 이름은 휘발성 메모리 효과를 의미합니다 ( &lt;a href=&quot;#compareAndExchange(int,int)&quot;&gt; &lt;code&gt;compareAndExchange(int, int)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#compareAndSet(int,int)&quot;&gt; &lt;code&gt;compareAndSet(int, int)&lt;/code&gt; &lt;/a&gt; 와 같은 메서드 참조 ). 일반 또는 휘발성 메모리 효과에 대한 혼동을 피하기 위해 &lt;a href=&quot;#weakCompareAndSetPlain(int,int)&quot;&gt; &lt;code&gt;weakCompareAndSetPlain(int, int)&lt;/code&gt; &lt;/a&gt; 메서드를 대신 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="76a9c475b9ff989879bf4bdcb38c6d59bb82a20d" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(int,int,int)&quot;&gt;&lt;code&gt;compareAndExchange(int, int, int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(int,int,int)&quot;&gt;&lt;code&gt;compareAndSet(int, int, int)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이 메서드에는 일반 메모리 효과가 있지만 메서드 이름은 휘발성 메모리 효과를 의미합니다 ( &lt;a href=&quot;#compareAndExchange(int,int,int)&quot;&gt; &lt;code&gt;compareAndExchange(int, int, int)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#compareAndSet(int,int,int)&quot;&gt; &lt;code&gt;compareAndSet(int, int, int)&lt;/code&gt; &lt;/a&gt; 와 같은 메서드 참조 ).</target>
        </trans-unit>
        <trans-unit id="e126fef024aaf1a23ae7ec1d66f0eb886d34137c" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(int,int,int)&quot;&gt;&lt;code&gt;compareAndExchange(int, int, int)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(int,int,int)&quot;&gt;&lt;code&gt;compareAndSet(int, int, int)&lt;/code&gt;&lt;/a&gt;). To avoid confusion over plain or volatile memory effects it is recommended that the method &lt;a href=&quot;#weakCompareAndSetPlain(int,int,int)&quot;&gt;&lt;code&gt;weakCompareAndSetPlain(int, int, int)&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">이 메서드에는 일반 메모리 효과가 있지만 메서드 이름은 휘발성 메모리 효과를 의미합니다 ( &lt;a href=&quot;#compareAndExchange(int,int,int)&quot;&gt; &lt;code&gt;compareAndExchange(int, int, int)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#compareAndSet(int,int,int)&quot;&gt; &lt;code&gt;compareAndSet(int, int, int)&lt;/code&gt; &lt;/a&gt; 와 같은 메서드 참조 ). 일반 또는 휘발성 메모리 효과에 대한 혼동을 피하기 위해 &lt;a href=&quot;#weakCompareAndSetPlain(int,int,int)&quot;&gt; &lt;code&gt;weakCompareAndSetPlain(int, int, int)&lt;/code&gt; &lt;/a&gt; 메서드를 대신 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="a6e28dac97bc15a27b3cd08c998d15e0fc2cf7d9" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(int,long,long)&quot;&gt;&lt;code&gt;compareAndExchange(int, long, long)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(int,long,long)&quot;&gt;&lt;code&gt;compareAndSet(int, long, long)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이 메서드에는 일반 메모리 효과가 있지만 메서드 이름은 휘발성 메모리 효과를 의미합니다 ( &lt;a href=&quot;#compareAndExchange(int,long,long)&quot;&gt; &lt;code&gt;compareAndExchange(int, long, long)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#compareAndSet(int,long,long)&quot;&gt; &lt;code&gt;compareAndSet(int, long, long)&lt;/code&gt; &lt;/a&gt; 와 같은 메서드 참조 ).</target>
        </trans-unit>
        <trans-unit id="e5226827d996e17bc9730515b341ac4d1b77438e" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(int,long,long)&quot;&gt;&lt;code&gt;compareAndExchange(int, long, long)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(int,long,long)&quot;&gt;&lt;code&gt;compareAndSet(int, long, long)&lt;/code&gt;&lt;/a&gt;). To avoid confusion over plain or volatile memory effects it is recommended that the method &lt;a href=&quot;#weakCompareAndSetPlain(int,long,long)&quot;&gt;&lt;code&gt;weakCompareAndSetPlain(int, long, long)&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">이 메서드에는 일반 메모리 효과가 있지만 메서드 이름은 휘발성 메모리 효과를 의미합니다 ( &lt;a href=&quot;#compareAndExchange(int,long,long)&quot;&gt; &lt;code&gt;compareAndExchange(int, long, long)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#compareAndSet(int,long,long)&quot;&gt; &lt;code&gt;compareAndSet(int, long, long)&lt;/code&gt; &lt;/a&gt; 와 같은 메서드 참조 ). 일반 또는 휘발성 메모리 효과에 대한 혼동을 피하기 위해 &lt;a href=&quot;#weakCompareAndSetPlain(int,long,long)&quot;&gt; &lt;code&gt;weakCompareAndSetPlain(int, long, long)&lt;/code&gt; &lt;/a&gt; 메서드를 대신 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="35aac93e837fecb4131365d2180100cf295b5331" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(long,long)&quot;&gt;&lt;code&gt;compareAndExchange(long, long)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(long,long)&quot;&gt;&lt;code&gt;compareAndSet(long, long)&lt;/code&gt;&lt;/a&gt;).</source>
          <target state="translated">이 메서드에는 일반 메모리 효과가 있지만 메서드 이름은 휘발성 메모리 효과를 의미합니다 ( &lt;a href=&quot;#compareAndExchange(long,long)&quot;&gt; &lt;code&gt;compareAndExchange(long, long)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#compareAndSet(long,long)&quot;&gt; &lt;code&gt;compareAndSet(long, long)&lt;/code&gt; &lt;/a&gt; 와 같은 메서드 참조 ).</target>
        </trans-unit>
        <trans-unit id="f304dab6006c29fb7906255b9c5aa0d8e64d0e0e" translate="yes" xml:space="preserve">
          <source>This method has plain memory effects but the method name implies volatile memory effects (see methods such as &lt;a href=&quot;#compareAndExchange(long,long)&quot;&gt;&lt;code&gt;compareAndExchange(long, long)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#compareAndSet(long,long)&quot;&gt;&lt;code&gt;compareAndSet(long, long)&lt;/code&gt;&lt;/a&gt;). To avoid confusion over plain or volatile memory effects it is recommended that the method &lt;a href=&quot;#weakCompareAndSetPlain(long,long)&quot;&gt;&lt;code&gt;weakCompareAndSetPlain(long, long)&lt;/code&gt;&lt;/a&gt; be used instead.</source>
          <target state="translated">이 메서드에는 일반 메모리 효과가 있지만 메서드 이름은 휘발성 메모리 효과를 의미합니다 ( &lt;a href=&quot;#compareAndExchange(long,long)&quot;&gt; &lt;code&gt;compareAndExchange(long, long)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#compareAndSet(long,long)&quot;&gt; &lt;code&gt;compareAndSet(long, long)&lt;/code&gt; &lt;/a&gt; 와 같은 메서드 참조 ). 일반 또는 휘발성 메모리 효과에 대한 혼동을 피하기 위해 &lt;a href=&quot;#weakCompareAndSetPlain(long,long)&quot;&gt; &lt;code&gt;weakCompareAndSetPlain(long, long)&lt;/code&gt; &lt;/a&gt; 메서드를 대신 사용하는 것이 좋습니다.</target>
        </trans-unit>
        <trans-unit id="8ae8131f6e61c58e9d4e35ee2f177a95a5e20fd2" translate="yes" xml:space="preserve">
          <source>This method has the following implementation restriction. It returns masks for a limited number of buttons only. The maximum number is implementation dependent and may vary. This limit is defined by the relevant number of buttons that may hypothetically exist on the mouse but it is greater than the &lt;a href=&quot;../mouseinfo#getNumberOfButtons()&quot;&gt;&lt;code&gt;MouseInfo.getNumberOfButtons()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드에는 다음과 같은 구현 제한이 있습니다. 제한된 수의 버튼에 대해서만 마스크를 반환합니다. 최대 수는 구현에 따라 다르며 다를 수 있습니다. 이 제한은 마우스에 가상적으로 존재할 수 있지만 &lt;a href=&quot;../mouseinfo#getNumberOfButtons()&quot;&gt; &lt;code&gt;MouseInfo.getNumberOfButtons()&lt;/code&gt; &lt;/a&gt; 보다 큰 관련 버튼 수로 정의됩니다 .</target>
        </trans-unit>
        <trans-unit id="bfe3c4ed632064ac65107b4fcb553341f7587817" translate="yes" xml:space="preserve">
          <source>This method has the same behavior as &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(Object)&lt;/code&gt; &lt;/a&gt; 동일한 동작을 합니다.</target>
        </trans-unit>
        <trans-unit id="c1d89341c629d415526544a81b37c759f2c6cf67" translate="yes" xml:space="preserve">
          <source>This method has the same behavior as &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt;&lt;code&gt;equals(Object)&lt;/code&gt;&lt;/a&gt;. The only difference being that it takes a &lt;code&gt;DataFlavor&lt;/code&gt; instance as a parameter.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#equals(java.lang.Object)&quot;&gt; &lt;code&gt;equals(Object)&lt;/code&gt; &lt;/a&gt; 동일한 동작을 합니다. 유일한 차이점은 &lt;code&gt;DataFlavor&lt;/code&gt; 인스턴스를 매개 변수로 사용한다는 것입니다.</target>
        </trans-unit>
        <trans-unit id="0a6e588b77bbb04b209146042c0d7e7bcd41a69e" translate="yes" xml:space="preserve">
          <source>This method has the same effect as appending each of the constituent parts directly to this builder surrounded by an &lt;a href=&quot;#optionalStart()&quot;&gt;&lt;code&gt;optionalStart()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#optionalEnd()&quot;&gt;&lt;code&gt;optionalEnd()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#optionalStart()&quot;&gt; &lt;code&gt;optionalStart()&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#optionalEnd()&quot;&gt; &lt;code&gt;optionalEnd()&lt;/code&gt; &lt;/a&gt; 둘러싸인이 빌더에 직접 각 구성 파트를 추가하는 것과 동일한 효과를 갖습니다 .</target>
        </trans-unit>
        <trans-unit id="88bebe56fe3ff2e1591dbb7a6b5405ca671ad816" translate="yes" xml:space="preserve">
          <source>This method has the same effect as appending each of the constituent parts directly to this builder surrounded by an &lt;a href=&quot;datetimeformatterbuilder#optionalStart--&quot;&gt;&lt;code&gt;optionalStart()&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;datetimeformatterbuilder#optionalEnd--&quot;&gt;&lt;code&gt;optionalEnd()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;datetimeformatterbuilder#optionalStart--&quot;&gt; &lt;code&gt;optionalStart()&lt;/code&gt; &lt;/a&gt; 둘러싸인 각 빌더를이 빌더에 직접 추가하는 것과 동일한 효과를 갖습니다. 및 &lt;a href=&quot;datetimeformatterbuilder#optionalEnd--&quot;&gt; &lt;code&gt;optionalEnd()&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="96db534ebadbf295dac57f668d2d340d0f0dede6" translate="yes" xml:space="preserve">
          <source>This method has the same effect as appending each of the constituent parts of the formatter directly to this builder.</source>
          <target state="translated">이 방법은 포맷터의 각 구성 부분을이 빌더에 직접 추가하는 것과 동일한 효과를 갖습니다.</target>
        </trans-unit>
        <trans-unit id="a5f4b409f13cc185e763af0b8d5703f2f1dc4105" translate="yes" xml:space="preserve">
          <source>This method implements &lt;a href=&quot;dynamicmbean#getMBeanInfo()&quot;&gt;&lt;code&gt;DynamicMBean.getMBeanInfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;dynamicmbean#getMBeanInfo()&quot;&gt; &lt;code&gt;DynamicMBean.getMBeanInfo()&lt;/code&gt; &lt;/a&gt; 구현 합니다.</target>
        </trans-unit>
        <trans-unit id="51bbeed2db8fef426d1e1af8073829b7c5b2411c" translate="yes" xml:space="preserve">
          <source>This method implements &lt;a href=&quot;dynamicmbean#getMBeanInfo--&quot;&gt;&lt;code&gt;DynamicMBean.getMBeanInfo()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;dynamicmbean#getMBeanInfo--&quot;&gt; &lt;code&gt;DynamicMBean.getMBeanInfo()&lt;/code&gt; &lt;/a&gt;합니다.</target>
        </trans-unit>
        <trans-unit id="8cfae46a7f5456687b8a16dfbdd9df59a7d55d3a" translate="yes" xml:space="preserve">
          <source>This method implements an entire &lt;a href=&quot;#steps&quot;&gt;decoding operation&lt;/a&gt;; that is, it resets this decoder, then it decodes the bytes in the given byte buffer, and finally it flushes this decoder. This method should therefore not be invoked if a decoding operation is already in progress.</source>
          <target state="translated">이 방법은 전체를 구현합니다 &lt;a href=&quot;#steps&quot;&gt; 디코딩 작업을&lt;/a&gt; . 즉,이 디코더를 재설정 한 다음 지정된 바이트 버퍼의 바이트를 디코딩 한 다음이 디코더를 플러시합니다. 따라서 디코딩 작업이 이미 진행중인 경우이 방법을 호출하지 않아야합니다.</target>
        </trans-unit>
        <trans-unit id="4ac9435c198b287b7c60fc48bf877b6db17d492c" translate="yes" xml:space="preserve">
          <source>This method implements an entire &lt;a href=&quot;#steps&quot;&gt;encoding operation&lt;/a&gt;; that is, it resets this encoder, then it encodes the characters in the given character buffer, and finally it flushes this encoder. This method should therefore not be invoked if an encoding operation is already in progress.</source>
          <target state="translated">이 방법은 전체를 구현합니다 &lt;a href=&quot;#steps&quot;&gt; 인코딩 작업을&lt;/a&gt; . 즉,이 인코더를 재설정 한 다음 주어진 문자 버퍼에서 문자를 인코딩 한 다음이 인코더를 플러시합니다. 따라서 인코딩 작업이 이미 진행중인 경우이 메서드를 호출하면 안됩니다.</target>
        </trans-unit>
        <trans-unit id="a10d37ae7a842062c873687a0f71b2550b892fc4" translate="yes" xml:space="preserve">
          <source>This method implements the general contract of the corresponding &lt;code&gt;&lt;a href=&quot;inputstream#read(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class. As an additional convenience, it attempts to read as many bytes as possible by repeatedly invoking the &lt;code&gt;read&lt;/code&gt; method of the underlying stream. This iterated &lt;code&gt;read&lt;/code&gt; continues until one of the following conditions becomes true:</source>
          <target state="translated">이 메서드 는 &lt;code&gt;&lt;a href=&quot;inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 클래스 의 해당 &lt;code&gt;&lt;a href=&quot;inputstream#read(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메서드에 대한 일반 계약을 구현합니다 . 추가적인 편의 를 위해 기본 스트림 의 &lt;code&gt;read&lt;/code&gt; 메서드를 반복적으로 호출하여 가능한 한 많은 바이트를 읽으려고 합니다. 이 반복 된 &lt;code&gt;read&lt;/code&gt; 는 다음 조건 중 하나가 참이 될 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="a217daaac530aeb0811702d8e5b97de7db1d9da9" translate="yes" xml:space="preserve">
          <source>This method implements the general contract of the corresponding &lt;code&gt;&lt;a href=&quot;inputstream#read-byte:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class. As an additional convenience, it attempts to read as many bytes as possible by repeatedly invoking the &lt;code&gt;read&lt;/code&gt; method of the underlying stream. This iterated &lt;code&gt;read&lt;/code&gt; continues until one of the following conditions becomes true:</source>
          <target state="translated">이 메소드 는 &lt;code&gt;&lt;a href=&quot;inputstream&quot;&gt;&lt;code&gt;InputStream&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 클래스 의 해당 &lt;code&gt;&lt;a href=&quot;inputstream#read-byte:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드의 일반 계약을 구현합니다 . 추가적인 편의로, 기본 스트림 의 &lt;code&gt;read&lt;/code&gt; 메소드를 반복적으로 호출하여 가능한 많은 바이트를 읽으려고 시도 합니다. 이 반복 &lt;code&gt;read&lt;/code&gt; 는 다음 조건 중 하나에 해당 될 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="61df848a40336d8db01883b06b76e5e1e9b1bcce" translate="yes" xml:space="preserve">
          <source>This method implements the general contract of the corresponding &lt;code&gt;&lt;a href=&quot;reader#read(char%5B%5D,int,int)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class. As an additional convenience, it attempts to read as many characters as possible by repeatedly invoking the &lt;code&gt;read&lt;/code&gt; method of the underlying stream. This iterated &lt;code&gt;read&lt;/code&gt; continues until one of the following conditions becomes true:</source>
          <target state="translated">이 메서드 는 &lt;code&gt;&lt;a href=&quot;reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 클래스 의 해당 &lt;code&gt;&lt;a href=&quot;reader#read(char%5B%5D,int,int)&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메서드에 대한 일반 계약을 구현합니다 . 추가적인 편의 를 위해 기본 스트림 의 &lt;code&gt;read&lt;/code&gt; 메서드를 반복적으로 호출하여 가능한 한 많은 문자를 읽으려고 합니다. 이 반복 된 &lt;code&gt;read&lt;/code&gt; 는 다음 조건 중 하나가 참이 될 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="d79db10c8a15dc4c5930fc6d96d770f283377867" translate="yes" xml:space="preserve">
          <source>This method implements the general contract of the corresponding &lt;code&gt;&lt;a href=&quot;reader#read-char:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; method of the &lt;code&gt;&lt;a href=&quot;reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; class. As an additional convenience, it attempts to read as many characters as possible by repeatedly invoking the &lt;code&gt;read&lt;/code&gt; method of the underlying stream. This iterated &lt;code&gt;read&lt;/code&gt; continues until one of the following conditions becomes true:</source>
          <target state="translated">이 메소드 는 &lt;code&gt;&lt;a href=&quot;reader&quot;&gt;&lt;code&gt;Reader&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 클래스 의 해당 &lt;code&gt;&lt;a href=&quot;reader#read-char:A-int-int-&quot;&gt;&lt;code&gt;read&lt;/code&gt;&lt;/a&gt;&lt;/code&gt; 메소드의 일반 계약을 구현합니다 . 추가 편의 를 위해 기본 스트림 의 &lt;code&gt;read&lt;/code&gt; 메소드를 반복적으로 호출하여 가능한 많은 문자를 읽으려고 시도 합니다. 이 반복 &lt;code&gt;read&lt;/code&gt; 는 다음 조건 중 하나에 해당 될 때까지 계속됩니다.</target>
        </trans-unit>
        <trans-unit id="bef6cd50581d421dc0e551ac77328ee9c627639c" translate="yes" xml:space="preserve">
          <source>This method indicates to the service provider that it is free to release resources associated with the enumeration, and can notify servers to cancel any outstanding requests. The &lt;code&gt;close()&lt;/code&gt; method is a hint to implementations for managing their resources. Implementations are encouraged to use appropriate algorithms to manage their resources when client omits the &lt;code&gt;close()&lt;/code&gt; calls.</source>
          <target state="translated">이 방법은 서비스 공급자에게 열거와 관련된 리소스를 자유롭게 해제 할 수 있음을 나타내며 미해결 요청을 취소하도록 서버에 알릴 수 있습니다. &lt;code&gt;close()&lt;/code&gt; 메소드는 자신의 자원을 관리하는 구현에의 힌트입니다. 구현시 클라이언트가 생략 할 때 적절한 알고리즘을 사용하여 리소스를 관리하는 것이 좋습니다. &lt;code&gt;close()&lt;/code&gt; 호출을 .</target>
        </trans-unit>
        <trans-unit id="ae08174a88c2b44b1885525c111a3b0c1402b67b" translate="yes" xml:space="preserve">
          <source>This method initializes from a stream.</source>
          <target state="translated">이 메서드는 스트림에서 초기화됩니다.</target>
        </trans-unit>
        <trans-unit id="d4e736a50f66261316f0da1fa64f34b936de8f04" translate="yes" xml:space="preserve">
          <source>This method initializes from a stream. If the kit is set to be of type &lt;code&gt;HTMLEditorKit&lt;/code&gt;, and the &lt;code&gt;desc&lt;/code&gt; parameter is an &lt;code&gt;HTMLDocument&lt;/code&gt;, then it invokes the &lt;code&gt;HTMLEditorKit&lt;/code&gt; to initiate the read. Otherwise it calls the superclass method which loads the model as plain text.</source>
          <target state="translated">이 메서드는 스트림에서 초기화됩니다. 킷이 형의로 설정되어있는 경우 &lt;code&gt;HTMLEditorKit&lt;/code&gt; 하고, &lt;code&gt;desc&lt;/code&gt; 매개 변수가있다 &lt;code&gt;HTMLDocument&lt;/code&gt; 의 , 다음은 호출 &lt;code&gt;HTMLEditorKit&lt;/code&gt; 읽기를 시작할 수 있습니다. 그렇지 않으면 모델을 일반 텍스트로로드하는 수퍼 클래스 메소드를 호출합니다.</target>
        </trans-unit>
        <trans-unit id="f9054da5984af09c0d9d749bf1f89c47945fed75" translate="yes" xml:space="preserve">
          <source>This method initiates a focus traversal operation if and only if the KeyEvent represents a focus traversal key for the specified focusedComponent.</source>
          <target state="translated">이 메서드는 KeyEvent가 지정된 focusComponent에 대한 포커스 탐색 키를 나타내는 경우에만 포커스 탐색 작업을 시작합니다.</target>
        </trans-unit>
        <trans-unit id="b17c6f22313492a0cc857cc51659fb999b5e238c" translate="yes" xml:space="preserve">
          <source>This method initiates a focus traversal operation if and only if the KeyEvent represents a focus traversal key for the specified focusedComponent. It is expected that focusedComponent is the current focus owner, although this need not be the case. If it is not, focus traversal will nevertheless proceed as if focusedComponent were the current focus owner.</source>
          <target state="translated">이 메서드는 KeyEvent가 지정된 focusComponent에 대한 포커스 탐색 키를 나타내는 경우에만 포커스 탐색 작업을 시작합니다. 그럴 필요는 없지만 focusComponent가 현재 포커스 소유자 일 것으로 예상됩니다. 그렇지 않은 경우에도 포커스 순회는 focusComponent가 현재 포커스 소유자 인 것처럼 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="876ae4526bbf97e54dcc75d576d2244305e6d60b" translate="yes" xml:space="preserve">
          <source>This method initiates a focus traversal operation if and only if the KeyEvent represents a focus traversal key for the specified focusedComponent. It is expected that focusedComponent is the current focus owner, although this need not be the case. If it is not, focus traversal will nevertheless proceed as if focusedComponent were the focus owner.</source>
          <target state="translated">이 메서드는 KeyEvent가 지정된 focusComponent에 대한 포커스 탐색 키를 나타내는 경우에만 포커스 탐색 작업을 시작합니다. 그럴 필요는 없지만 focusComponent가 현재 포커스 소유자 일 것으로 예상됩니다. 그렇지 않은 경우에도 Focus Traversal은 focusComponent가 포커스 소유자 인 것처럼 진행됩니다.</target>
        </trans-unit>
        <trans-unit id="2a35fe7383019769b12946558370f4e4eb84750d" translate="yes" xml:space="preserve">
          <source>This method initiates a read of up to</source>
          <target state="translated">이 방법은 최대 읽기를 시작합니다</target>
        </trans-unit>
        <trans-unit id="195dc1ea9cd446d54f70fa3ceb58eae15f2abec4" translate="yes" xml:space="preserve">
          <source>This method initiates a write of up to</source>
          <target state="translated">이 방법은 최대 쓰기를 시작합니다</target>
        </trans-unit>
        <trans-unit id="5b4a146fe1db63f22764c064f29188fc4be633a5" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous operation to accept a connection made to this channel's socket. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when a connection is accepted (or the operation fails). The result passed to the completion handler is the &lt;a href=&quot;asynchronoussocketchannel&quot;&gt;&lt;code&gt;AsynchronousSocketChannel&lt;/code&gt;&lt;/a&gt; to the new connection.</source>
          <target state="translated">이 메소드는이 채널의 소켓에 대한 연결을 승인하기 위해 비동기 조작을 시작합니다. &lt;code&gt;handler&lt;/code&gt; 파라미터 연결이 허용된다 (또는 조작이 실패) 때 호출되는 핸들러가 완료된다. 완료 핸들러로 전달 된 결과 는 새 연결에 대한 &lt;a href=&quot;asynchronoussocketchannel&quot;&gt; &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; &lt;/a&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="7a4c8bb3b6c6879cd7f7a82f80ec89ace424cb84" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous operation to accept a connection made to this channel's socket. The method behaves in exactly the same manner as the &lt;a href=&quot;#accept(A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;accept(Object, CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;
 Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;asynchronoussocketchannel&quot;&gt;&lt;code&gt;AsynchronousSocketChannel&lt;/code&gt;&lt;/a&gt; to the new connection on successful completion.</source>
          <target state="translated">이 메서드는이 채널의 소켓에 대한 연결을 수락하는 비동기 작업을 시작합니다. 이 메서드 는 완료 처리기를 지정하는 대신이 메서드가 보류중인 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 반환한다는 점을 제외 하면 &lt;a href=&quot;#accept(A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;accept(Object, CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메서드 와 똑같은 방식으로 작동 합니다 . &lt;code&gt; Future&lt;/code&gt; 의는 &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 방법 반환 &lt;a href=&quot;asynchronoussocketchannel&quot;&gt; &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; 을&lt;/a&gt; 성공적으로 완료에 새 연결합니다.</target>
        </trans-unit>
        <trans-unit id="36c77446ccad13303c3b9fd58465698d5f302634" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous operation to accept a connection made to this channel's socket. The method behaves in exactly the same manner as the &lt;a href=&quot;asynchronousserversocketchannel#accept-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;accept(Object, CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;asynchronoussocketchannel&quot;&gt;&lt;code&gt;AsynchronousSocketChannel&lt;/code&gt;&lt;/a&gt; to the new connection on successful completion.</source>
          <target state="translated">이 메소드는이 채널의 소켓에 대한 연결을 승인하기 위해 비동기 조작을 시작합니다. 이 메소드 는 완료 핸들러를 지정하는 대신 보류중인 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 리턴한다는 점을 제외 하면 &lt;a href=&quot;asynchronousserversocketchannel#accept-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;accept(Object, CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메소드 와 정확히 동일한 방식으로 작동 합니다 . &lt;code&gt;Future&lt;/code&gt; 의는 &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 방법 반환 &lt;a href=&quot;asynchronoussocketchannel&quot;&gt; &lt;code&gt;AsynchronousSocketChannel&lt;/code&gt; 을&lt;/a&gt; 성공적으로 완료에 새 연결합니다.</target>
        </trans-unit>
        <trans-unit id="ca924575c95b56e4ac6541e64d1a3b4577a289b9" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous read operation to read a sequence of bytes from this channel into the given buffer. The &lt;code&gt;
 handler&lt;/code&gt; parameter is a completion handler that is invoked when the read operation completes (or fails). The result passed to the completion handler is the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if no bytes could be read because the channel has reached end-of-stream.</source>
          <target state="translated">이 메서드는 비동기 읽기 작업을 시작하여이 채널에서 지정된 버퍼로 바이트 시퀀스를 읽습니다. &lt;code&gt; handler&lt;/code&gt; 파라미터는 동작이 완료 될 때 호출 읽기 (혹은 실패)하는 종료 핸들러이다. 완료 핸들러에 전달 된 결과는 읽은 바이트 수이거나 채널이 스트림의 끝에 도달하여 바이트를 읽을 수없는 경우 &lt;code&gt;-1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="ee6e1a56838a97e25f3a78eccf440495412459ce" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous read operation to read a sequence of bytes from this channel into the given buffer. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when the read operation completes (or fails). The result passed to the completion handler is the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if no bytes could be read because the channel has reached end-of-stream.</source>
          <target state="translated">이 메소드는 비동기 읽기 조작을 시작하여이 채널에서 지정된 버퍼로 바이트 시퀀스를 읽습니다. &lt;code&gt;handler&lt;/code&gt; 파라미터는 동작이 완료 될 때 호출 읽기 (혹은 실패)하는 종료 핸들러이다. 완료 핸들러에 전달 된 결과는 읽은 바이트 수 또는 &lt;code&gt;-1&lt;/code&gt; 입니다. 채널이 스트림 끝에 도달하여 읽을 수있는 바이트가없는 경우 입니다.</target>
        </trans-unit>
        <trans-unit id="1af641fa4e423c4c08645ad7f9eed9006e308c11" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous read operation to read a sequence of bytes from this channel into the given buffer. The method behaves in exactly the same manner as the &lt;a href=&quot;#read(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if no bytes could be read because the channel has reached end-of-stream.</source>
          <target state="translated">이 메서드는 비동기 읽기 작업을 시작하여이 채널에서 지정된 버퍼로 바이트 시퀀스를 읽습니다. 이 메서드 는 완료 처리기를 지정하는 대신 보류중인 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 반환한다는 점을 제외 하면 &lt;a href=&quot;#read(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메서드 와 정확히 동일한 방식으로 작동 합니다 . &lt;code&gt;Future&lt;/code&gt; 의는 &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메서드가 반환 바이트 수를 읽거나 &lt;code&gt;-1&lt;/code&gt; 채널이 스트림의 마지막에 도달 때문에 바이트를 읽어 들일 수 있다면.</target>
        </trans-unit>
        <trans-unit id="64fbbff989da456cec7bcadaec9f0bebb07bc5de" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous read operation to read a sequence of bytes from this channel into the given buffer. The method behaves in exactly the same manner as the &lt;a href=&quot;asynchronousbytechannel#read(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if no bytes could be read because the channel has reached end-of-stream.</source>
          <target state="translated">이 메서드는 비동기 읽기 작업을 시작하여이 채널에서 지정된 버퍼로 바이트 시퀀스를 읽습니다. 이 메서드 는 완료 처리기를 지정하는 대신 보류중인 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 반환한다는 점을 제외 하면 &lt;a href=&quot;asynchronousbytechannel#read(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메서드 와 정확히 동일한 방식으로 작동 합니다 . &lt;code&gt;Future&lt;/code&gt; 의는 &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메서드가 반환 바이트 수를 읽거나 &lt;code&gt;-1&lt;/code&gt; 채널이 스트림의 마지막에 도달 때문에 바이트를 읽어 들일 수 있다면.</target>
        </trans-unit>
        <trans-unit id="b4e5adf06733fe348da70a4c4ad9658c1cbcbd4f" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous read operation to read a sequence of bytes from this channel into the given buffer. The method behaves in exactly the same manner as the &lt;a href=&quot;asynchronousbytechannel#read-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if no bytes could be read because the channel has reached end-of-stream.</source>
          <target state="translated">이 메소드는 비동기 읽기 조작을 시작하여이 채널에서 지정된 버퍼로 바이트 시퀀스를 읽습니다. 이 메소드 는 완료 핸들러를 지정하는 대신 보류중인 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 리턴한다는 점을 제외하고 &lt;a href=&quot;asynchronousbytechannel#read-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;read(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메소드 와 정확히 동일한 방식으로 작동 합니다 . &lt;code&gt;Future&lt;/code&gt; 의는 &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메서드가 반환 바이트 수를 읽거나 &lt;code&gt;-1&lt;/code&gt; 채널이 스트림의 마지막에 도달 때문에 바이트를 읽어 들일 수 있다면.</target>
        </trans-unit>
        <trans-unit id="a2e2249e76cb96a8bdf810bffadd9cb2cb6d63b3" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous write operation to write a sequence of bytes to this channel from the given buffer. The &lt;code&gt;
 handler&lt;/code&gt; parameter is a completion handler that is invoked when the write operation completes (or fails). The result passed to the completion handler is the number of bytes written.</source>
          <target state="translated">이 메서드는 비동기 쓰기 작업을 시작하여 지정된 버퍼에서이 채널에 일련의 바이트를 기록합니다. &lt;code&gt; handler&lt;/code&gt; 파라미터는 기록 동작이 완료 (또는 실패) 때 호출되는 핸들러가 완료된다. 완료 핸들러에 전달 된 결과는 기록 된 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="884f1eed34505d79db8e140611a1bda7f4feda2c" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous write operation to write a sequence of bytes to this channel from the given buffer. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when the write operation completes (or fails). The result passed to the completion handler is the number of bytes written.</source>
          <target state="translated">이 메소드는 비동기 쓰기 조작을 시작하여 지정된 버퍼에서이 채널에 바이트 시퀀스를 기록합니다. &lt;code&gt;handler&lt;/code&gt; 파라미터는 기록 동작이 완료 (또는 실패) 때 호출되는 핸들러가 완료된다. 완료 핸들러에 전달 된 결과는 쓴 바이트 수입니다.</target>
        </trans-unit>
        <trans-unit id="6280c2c1facc5c74fd815282490f419d0019166e" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous write operation to write a sequence of bytes to this channel from the given buffer. The method behaves in exactly the same manner as the &lt;a href=&quot;#write(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes written.</source>
          <target state="translated">이 메서드는 비동기 쓰기 작업을 시작하여 지정된 버퍼에서이 채널에 일련의 바이트를 기록합니다. 이 메서드 는 완료 처리기를 지정하는 대신이 메서드가 보류중인 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 반환한다는 점을 제외 하면 &lt;a href=&quot;#write(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메서드 와 정확히 동일한 방식으로 작동 합니다 . &lt;code&gt;Future&lt;/code&gt; 의 &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 방법은 기록 된 바이트 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="989fda8feed6d0ea89f0f24d0f134aa25bf9fc9d" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous write operation to write a sequence of bytes to this channel from the given buffer. The method behaves in exactly the same manner as the &lt;a href=&quot;asynchronousbytechannel#write(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes written.</source>
          <target state="translated">이 메서드는 비동기 쓰기 작업을 시작하여 지정된 버퍼에서이 채널에 일련의 바이트를 기록합니다. 이 메서드 는 완료 처리기를 지정하는 대신이 메서드가 보류중인 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 반환한다는 점을 제외 하면 &lt;a href=&quot;asynchronousbytechannel#write(java.nio.ByteBuffer,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메서드 와 정확히 동일한 방식으로 작동 합니다 . &lt;code&gt;Future&lt;/code&gt; 의 &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 방법은 기록 된 바이트 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="425dcdb9947c1226ce9e013431356c819774a519" translate="yes" xml:space="preserve">
          <source>This method initiates an asynchronous write operation to write a sequence of bytes to this channel from the given buffer. The method behaves in exactly the same manner as the &lt;a href=&quot;asynchronousbytechannel#write-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes written.</source>
          <target state="translated">이 메소드는 비동기 쓰기 조작을 시작하여 지정된 버퍼에서이 채널에 바이트 시퀀스를 기록합니다. 이 메소드 는 완료 핸들러를 지정하는 대신 보류중인 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 리턴한다는 점을 제외하고 &lt;a href=&quot;asynchronousbytechannel#write-java.nio.ByteBuffer-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;write(ByteBuffer,Object,CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메소드 와 정확히 동일한 방식으로 작동 합니다 . &lt;code&gt;Future&lt;/code&gt; 의 &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 방법은 기록 된 바이트 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="d69bc96e539dc381a9fbbd2f36f985610a68eafc" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to acquire a lock on the given region of this channel's file. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when the lock is acquired (or the operation fails). The result passed to the completion handler is the resulting &lt;code&gt;FileLock&lt;/code&gt;.</source>
          <target state="translated">이 메소드는이 채널 파일의 지정된 영역에서 잠금을 획득하기위한 조작을 시작합니다. &lt;code&gt;handler&lt;/code&gt; 파라미터는 로크가 획득된다 (또는 조작이 실패) 때 호출되는 핸들러가 완료된다. 완료 핸들러에 전달 된 결과는 결과 &lt;code&gt;FileLock&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="a52fcf3ae79eceaedd6da642a6fda9d7a15dafcd" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to acquire a lock on the given region of this channel's file. The method behaves in exactly the same manner as the &lt;a href=&quot;#lock(long,long,boolean,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;lock(long, long, boolean, Object, CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;FileLock&lt;/code&gt;&lt;/a&gt; on successful completion.</source>
          <target state="translated">이 메서드는이 채널 파일의 지정된 영역에 대한 잠금을 획득하는 작업을 시작합니다. 이 메서드 는 완료 처리기를 지정하는 대신이 메서드가 보류중인 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 반환한다는 점을 제외 하면 &lt;a href=&quot;#lock(long,long,boolean,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;lock(long, long, boolean, Object, CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메서드 와 정확히 동일한 방식으로 동작 합니다 . &lt;code&gt;Future&lt;/code&gt; 의 &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 방법은 반환 &lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;FileLock&lt;/code&gt; &lt;/a&gt; 성공적인 완료에 있습니다.</target>
        </trans-unit>
        <trans-unit id="ade494af179c7fa5dd56b70c37320ff095534a3d" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to acquire a lock on the given region of this channel's file. The method behaves in exactly the same manner as the &lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;lock(long, long, boolean, Object, CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;FileLock&lt;/code&gt;&lt;/a&gt; on successful completion.</source>
          <target state="translated">이 방법은이 채널 파일의 지정된 영역에서 잠금을 획득하는 작업을 시작합니다. 이 메소드 는 완료 핸들러를 지정하는 대신 보류중인 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 리턴한다는 점을 제외하고 &lt;a href=&quot;asynchronousfilechannel#lock-long-long-boolean-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;lock(long, long, boolean, Object, CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메소드 와 정확히 동일한 방식으로 작동 합니다 . &lt;code&gt;Future&lt;/code&gt; 의 &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 방법은 반환 &lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;FileLock&lt;/code&gt; &lt;/a&gt; 성공적인 완료에 있습니다.</target>
        </trans-unit>
        <trans-unit id="8d90a68123fd61ba33b7753c6caa1615e99ad189" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to acquire an exclusive lock on this channel's file. The method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result of the operation. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;FileLock&lt;/code&gt;&lt;/a&gt; on successful completion.</source>
          <target state="translated">이 메소드는이 채널의 파일에 대한 독점 잠금을 획득하는 작업을 시작합니다. 이 메서드는 작업의 보류중인 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 반환 합니다. &lt;code&gt;Future&lt;/code&gt; 의 &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 방법은 반환 &lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;FileLock&lt;/code&gt; &lt;/a&gt; 성공적인 완료에 있습니다.</target>
        </trans-unit>
        <trans-unit id="8efe04b7e4bd5e33dc579eaa5a2c7ba89e20c9d8" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to acquire an exclusive lock on this channel's file. The method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result of the operation. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the &lt;a href=&quot;filelock&quot;&gt;&lt;code&gt;FileLock&lt;/code&gt;&lt;/a&gt; on successful completion.</source>
          <target state="translated">이 메소드는이 채널 파일에 대한 독점 잠금을 획득하기위한 조작을 시작합니다. 이 메소드는 보류중인 작업 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 반환 합니다. &lt;code&gt;Future&lt;/code&gt; 의 &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 방법은 반환 &lt;a href=&quot;filelock&quot;&gt; &lt;code&gt;FileLock&lt;/code&gt; &lt;/a&gt; 성공적인 완료에 있습니다.</target>
        </trans-unit>
        <trans-unit id="ccec9e8297a340fc281d8a33e5acb34845e0008f" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to connect this channel. The &lt;code&gt;handler&lt;/code&gt; parameter is a completion handler that is invoked when the connection is successfully established or connection cannot be established. If the connection cannot be established then the channel is closed.</source>
          <target state="translated">이 방법은이 채널을 연결하는 작업을 시작합니다. &lt;code&gt;handler&lt;/code&gt; 매개 변수는 성공적으로 연결하거나 연결을 설정할 수없는 때 호출되는 완료 핸들러입니다. 연결을 설정할 수 없으면 채널이 닫힙니다.</target>
        </trans-unit>
        <trans-unit id="6532d1d48efb71683750abaca05d604dc7fa7f05" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to connect this channel. This method behaves in exactly the same manner as the &lt;a href=&quot;#connect(java.net.SocketAddress,A,java.nio.channels.CompletionHandler)&quot;&gt;&lt;code&gt;connect(SocketAddress, Object, CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;
 Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;null&lt;/code&gt; on successful completion.</source>
          <target state="translated">이 메서드는이 채널을 연결하는 작업을 시작합니다. 이 메서드 는 완료 처리기를 지정하는 대신 보류중인 결과를 나타내는 &lt;code&gt; Future&lt;/code&gt; 를 반환한다는 점을 제외 하면 &lt;a href=&quot;#connect(java.net.SocketAddress,A,java.nio.channels.CompletionHandler)&quot;&gt; &lt;code&gt;connect(SocketAddress, Object, CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메서드 와 정확히 동일한 방식으로 작동 합니다 . &lt;code&gt;Future&lt;/code&gt; 의 &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메소드가 리턴은 &lt;code&gt;null&lt;/code&gt; 을 성공적으로 완료에.</target>
        </trans-unit>
        <trans-unit id="fa8f92f210402ec46afc6ff1e5c2f4ed013064dd" translate="yes" xml:space="preserve">
          <source>This method initiates an operation to connect this channel. This method behaves in exactly the same manner as the &lt;a href=&quot;asynchronoussocketchannel#connect-java.net.SocketAddress-A-java.nio.channels.CompletionHandler-&quot;&gt;&lt;code&gt;connect(SocketAddress, Object, CompletionHandler)&lt;/code&gt;&lt;/a&gt; method except that instead of specifying a completion handler, this method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns &lt;code&gt;null&lt;/code&gt; on successful completion.</source>
          <target state="translated">이 방법은이 채널을 연결하는 작업을 시작합니다. 이 메소드 는 완료 핸들러를 지정하는 대신 보류중인 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 리턴한다는 점을 제외 하면 &lt;a href=&quot;asynchronoussocketchannel#connect-java.net.SocketAddress-A-java.nio.channels.CompletionHandler-&quot;&gt; &lt;code&gt;connect(SocketAddress, Object, CompletionHandler)&lt;/code&gt; &lt;/a&gt; 메소드 와 정확히 동일한 방식으로 작동 합니다 . &lt;code&gt;Future&lt;/code&gt; 의 &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메소드가 리턴은 &lt;code&gt;null&lt;/code&gt; 을 성공적으로 완료에.</target>
        </trans-unit>
        <trans-unit id="30130f900e70b9de0cdf13b5d4484fc27d0cf423" translate="yes" xml:space="preserve">
          <source>This method initiates the reading of a sequence of bytes from this channel into the given buffer, starting at the given file position. The result of the read is the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if the given position is greater than or equal to the file's size at the time that the read is attempted.</source>
          <target state="translated">이 방법은 주어진 파일 위치에서 시작하여이 채널에서 주어진 버퍼로의 바이트 시퀀스 읽기를 시작합니다. 읽은 결과는 읽은 바이트 수 또는 지정된 위치가 읽은 시간에 파일 크기보다 크거나 같은 경우 &lt;code&gt;-1&lt;/code&gt; 입니다.</target>
        </trans-unit>
        <trans-unit id="c8e9fed9ef823a6e7aedd1d271b19802a305cde9" translate="yes" xml:space="preserve">
          <source>This method initiates the reading of a sequence of bytes from this channel into the given buffer, starting at the given file position. This method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result of the operation. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if the given position is greater than or equal to the file's size at the time that the read is attempted.</source>
          <target state="translated">이 메서드는 주어진 파일 위치에서 시작하여이 채널에서 주어진 버퍼로 바이트 시퀀스 읽기를 시작합니다. 이 메서드는 작업의 보류중인 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 반환 합니다. &lt;code&gt;Future&lt;/code&gt; 의는 &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메서드가 반환하는 바이트 수를 읽거나 &lt;code&gt;-1&lt;/code&gt; 주어진 위치 또는 읽기가 시도되는 시간에 파일의 크기와 동일보다 큰 경우.</target>
        </trans-unit>
        <trans-unit id="a3264d07d05d29bee8f76107fdf7105ffffe704b" translate="yes" xml:space="preserve">
          <source>This method initiates the reading of a sequence of bytes from this channel into the given buffer, starting at the given file position. This method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result of the operation. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes read or &lt;code&gt;-1&lt;/code&gt; if the given position is greater than or equal to the file's size at the time that the read is attempted.</source>
          <target state="translated">이 방법은 주어진 파일 위치에서 시작하여이 채널에서 주어진 버퍼로의 바이트 시퀀스 읽기를 시작합니다. 이 메소드는 보류중인 작업 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 반환 합니다. &lt;code&gt;Future&lt;/code&gt; 의는 &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 메서드가 반환하는 바이트 수를 읽거나 &lt;code&gt;-1&lt;/code&gt; 주어진 위치 또는 읽기가 시도되는 시간에 파일의 크기와 동일보다 큰 경우.</target>
        </trans-unit>
        <trans-unit id="8c16aa65ee4f69d5712a24457ff9d6f1a3f2bbe7" translate="yes" xml:space="preserve">
          <source>This method initiates the writing of a sequence of bytes to this channel from the given buffer, starting at the given file position. The method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result of the write operation. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes written.</source>
          <target state="translated">이 메서드는 주어진 파일 위치에서 시작하여 주어진 버퍼에서이 채널에 바이트 시퀀스 쓰기를 시작합니다. 이 메서드는 쓰기 작업의 보류중인 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 반환 합니다. &lt;code&gt;Future&lt;/code&gt; 의 &lt;a href=&quot;../../util/concurrent/future#get()&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 방법은 기록 된 바이트 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="4c8aa12f9311f3afdff1963436aba815aca9a681" translate="yes" xml:space="preserve">
          <source>This method initiates the writing of a sequence of bytes to this channel from the given buffer, starting at the given file position. The method returns a &lt;code&gt;Future&lt;/code&gt; representing the pending result of the write operation. The &lt;code&gt;Future&lt;/code&gt;'s &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt;&lt;code&gt;get&lt;/code&gt;&lt;/a&gt; method returns the number of bytes written.</source>
          <target state="translated">이 메소드는 주어진 파일 위치에서 시작하여 주어진 버퍼에서이 채널에 바이트 시퀀스 쓰기를 시작합니다. 이 메소드는 쓰기 작업의 보류 결과를 나타내는 &lt;code&gt;Future&lt;/code&gt; 를 반환 합니다. &lt;code&gt;Future&lt;/code&gt; 의 &lt;a href=&quot;../../util/concurrent/future#get--&quot;&gt; &lt;code&gt;get&lt;/code&gt; &lt;/a&gt; 방법은 기록 된 바이트 수를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="46a4338713f2d071fd29cd8ad8a5faced93b314e" translate="yes" xml:space="preserve">
          <source>This method instructs the bean that it is OK to use the Gui.</source>
          <target state="translated">이 메소드는 Bean에 Gui를 사용하는 것이 좋다고 지시합니다.</target>
        </trans-unit>
        <trans-unit id="d03ba6b1925fc9e4d5bdab71fe41aa59137b4d30" translate="yes" xml:space="preserve">
          <source>This method instructs the bean that it should not use the Gui.</source>
          <target state="translated">이 메소드는 Bean에 Gui를 사용해서는 안된다고 지시합니다.</target>
        </trans-unit>
        <trans-unit id="6a0dcfddcee506e38f38fcfac4eb8e0084fa7bac" translate="yes" xml:space="preserve">
          <source>This method invokes &lt;a href=&quot;#readNBytes(int)&quot;&gt;&lt;code&gt;readNBytes(int)&lt;/code&gt;&lt;/a&gt; with a length of &lt;a href=&quot;../lang/integer#MAX_VALUE&quot;&gt;&lt;code&gt;Integer.MAX_VALUE&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../lang/integer#MAX_VALUE&quot;&gt; &lt;code&gt;Integer.MAX_VALUE&lt;/code&gt; &lt;/a&gt; 길이로 &lt;a href=&quot;#readNBytes(int)&quot;&gt; &lt;code&gt;readNBytes(int)&lt;/code&gt; &lt;/a&gt; 를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="5d891fcf0ebd8ff0e8208eb5a8695e9445768a93" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#exportObject(java.rmi.Remote,java.lang.String,java.rmi.MarshalledObject,boolean,int)&quot;&gt;&lt;code&gt;exportObject&lt;/code&gt;&lt;/a&gt; method with this object, and the specified location, data, restart mode, and port. Subsequent calls to &lt;a href=&quot;#getID()&quot;&gt;&lt;code&gt;getID()&lt;/code&gt;&lt;/a&gt; will return the activation identifier returned from the call to &lt;code&gt;exportObject&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 이 개체 및 지정된 위치, 데이터, 다시 시작 모드 및 포트와 함께 &lt;a href=&quot;#exportObject(java.rmi.Remote,java.lang.String,java.rmi.MarshalledObject,boolean,int)&quot;&gt; &lt;code&gt;exportObject&lt;/code&gt; &lt;/a&gt; 메서드를 호출합니다 . 후속 &lt;a href=&quot;#getID()&quot;&gt; &lt;code&gt;getID()&lt;/code&gt; &lt;/a&gt; 호출은 &lt;code&gt;exportObject&lt;/code&gt; 호출에서 반환 된 활성화 식별자를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="5ba37a8a78f8f76e7ad837fc31994797df0aa8ca" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#exportObject(java.rmi.Remote,java.lang.String,java.rmi.MarshalledObject,boolean,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt;&lt;code&gt;exportObject&lt;/code&gt;&lt;/a&gt; method with the specified object, location, data, restart mode, and port, and &lt;code&gt;null&lt;/code&gt; for both client and server socket factories, and then returns the resulting activation identifier.</source>
          <target state="translated">이 메서드는 지정된 개체, 위치, 데이터, 다시 시작 모드 및 포트를 사용하여 &lt;a href=&quot;#exportObject(java.rmi.Remote,java.lang.String,java.rmi.MarshalledObject,boolean,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt; &lt;code&gt;exportObject&lt;/code&gt; &lt;/a&gt; 메서드를 호출하고 클라이언트 및 서버 소켓 팩토리 모두에 대해 &lt;code&gt;null&lt;/code&gt; 을 호출 한 다음 결과 활성화 식별자를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b3895aedb16b9991f32b61932ea5c7bd7286ee22" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#exportObject(java.rmi.Remote,java.lang.String,java.rmi.MarshalledObject,boolean,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt;&lt;code&gt;exportObject&lt;/code&gt;&lt;/a&gt; method with this object, and the specified location, data, restart mode, port, and client and server socket factories. Subsequent calls to &lt;a href=&quot;#getID()&quot;&gt;&lt;code&gt;getID()&lt;/code&gt;&lt;/a&gt; will return the activation identifier returned from the call to &lt;code&gt;exportObject&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 이 개체와 지정된 위치, 데이터, 재시작 모드, 포트, 클라이언트 및 서버 소켓 팩토리와 함께 &lt;a href=&quot;#exportObject(java.rmi.Remote,java.lang.String,java.rmi.MarshalledObject,boolean,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt; &lt;code&gt;exportObject&lt;/code&gt; &lt;/a&gt; 메서드를 호출합니다 . 후속 &lt;a href=&quot;#getID()&quot;&gt; &lt;code&gt;getID()&lt;/code&gt; &lt;/a&gt; 호출은 &lt;code&gt;exportObject&lt;/code&gt; 호출에서 반환 된 활성화 식별자를 반환합니다 .</target>
        </trans-unit>
        <trans-unit id="d5cb64c26d67f708a429ee3472d60b15ec33d86f" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#implFlush(java.nio.ByteBuffer)&quot;&gt;&lt;code&gt;implFlush&lt;/code&gt;&lt;/a&gt; method to perform the actual flushing operation.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#implFlush(java.nio.ByteBuffer)&quot;&gt; &lt;code&gt;implFlush&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 실제 플러시 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="a729204a84931d6bcb08cd96b4ff744395c6591c" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#implFlush(java.nio.CharBuffer)&quot;&gt;&lt;code&gt;implFlush&lt;/code&gt;&lt;/a&gt; method to perform the actual flushing operation.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#implFlush(java.nio.CharBuffer)&quot;&gt; &lt;code&gt;implFlush&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 실제 플러시 작업을 수행합니다.</target>
        </trans-unit>
        <trans-unit id="0b5a85fbd3a063c22916d00144b237ba59bd5b6c" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#implOnMalformedInput(java.nio.charset.CodingErrorAction)&quot;&gt;&lt;code&gt;implOnMalformedInput&lt;/code&gt;&lt;/a&gt; method, passing the new action.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#implOnMalformedInput(java.nio.charset.CodingErrorAction)&quot;&gt; &lt;code&gt;implOnMalformedInput&lt;/code&gt; &lt;/a&gt; 메서드를 호출 하여 새 작업을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="0e03b6a98aea482ce03a1d450be5dbb1d1fa4d79" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)&quot;&gt;&lt;code&gt;implOnUnmappableCharacter&lt;/code&gt;&lt;/a&gt; method, passing the new action.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)&quot;&gt; &lt;code&gt;implOnUnmappableCharacter&lt;/code&gt; &lt;/a&gt; 메서드를 호출 하여 새 작업을 전달합니다.</target>
        </trans-unit>
        <trans-unit id="75b5c3c5f9f32fff91e7e77c76719ae1b3f9727b" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#implReplaceWith(byte%5B%5D)&quot;&gt;&lt;code&gt;implReplaceWith&lt;/code&gt;&lt;/a&gt; method, passing the new replacement, after checking that the new replacement is acceptable.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#implReplaceWith(byte%5B%5D)&quot;&gt; &lt;code&gt;implReplaceWith&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 새 교체가 허용 되는지 확인한 후 새 교체를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="dd9e4f7796b1cff97e72b907cf4f01521f1e6fad" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#implReplaceWith(java.lang.String)&quot;&gt;&lt;code&gt;implReplaceWith&lt;/code&gt;&lt;/a&gt; method, passing the new replacement, after checking that the new replacement is acceptable.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#implReplaceWith(java.lang.String)&quot;&gt; &lt;code&gt;implReplaceWith&lt;/code&gt; &lt;/a&gt; 메서드를 호출하여 새 교체가 허용 되는지 확인한 후 새 교체를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="03410d0126e6258ad8ccb9de242ab55e097880f6" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#release()&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#release()&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt; 메서드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="a480824b559deda0c7d1907f15913d6a60657889" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;#release()&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; method. It was added to the class so that it could be used in conjunction with the automatic resource management block construct.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#release()&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt; 메서드를 호출합니다 . 자동 자원 관리 블록 구성과 함께 사용할 수 있도록 클래스에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="eeff678a91716b0a42e47201bdbc4ceb988bbbf1" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetdecoder#implFlush-java.nio.CharBuffer-&quot;&gt;&lt;code&gt;implFlush&lt;/code&gt;&lt;/a&gt; method to perform the actual flushing operation.</source>
          <target state="translated">이 메소드는 실제 플러시 조작을 수행하기 위해 &lt;a href=&quot;charsetdecoder#implFlush-java.nio.CharBuffer-&quot;&gt; &lt;code&gt;implFlush&lt;/code&gt; &lt;/a&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="7cc4bc54886d6e859dfb0a0349c595e5484237ea" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetdecoder#implOnMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt;&lt;code&gt;implOnMalformedInput&lt;/code&gt;&lt;/a&gt; method, passing the new action.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;charsetdecoder#implOnMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt; &lt;code&gt;implOnMalformedInput&lt;/code&gt; &lt;/a&gt; 메소드를 호출 하여 새 조치를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="9382f3d508bb3cdc2b89496be0a551dc47ca8836" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetdecoder#implOnUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt;&lt;code&gt;implOnUnmappableCharacter&lt;/code&gt;&lt;/a&gt; method, passing the new action.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;charsetdecoder#implOnUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt; &lt;code&gt;implOnUnmappableCharacter&lt;/code&gt; &lt;/a&gt; 메소드를 호출 하여 새 조치를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="31054bfe51b35fcc9c6c84d577625707b866633a" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetdecoder#implReplaceWith-java.lang.String-&quot;&gt;&lt;code&gt;implReplaceWith&lt;/code&gt;&lt;/a&gt; method, passing the new replacement, after checking that the new replacement is acceptable.</source>
          <target state="translated">이 메소드는 새 교체가 허용 &lt;a href=&quot;charsetdecoder#implReplaceWith-java.lang.String-&quot;&gt; &lt;code&gt;implReplaceWith&lt;/code&gt; &lt;/a&gt; 확인한 후 implReplaceWith 메소드를 호출하여 새 교체를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="5c104f7fb6d4a6bc7f7c359da6bb8e5370594817" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetencoder#implFlush-java.nio.ByteBuffer-&quot;&gt;&lt;code&gt;implFlush&lt;/code&gt;&lt;/a&gt; method to perform the actual flushing operation.</source>
          <target state="translated">이 메소드는 실제 플러시 조작을 수행하기 위해 &lt;a href=&quot;charsetencoder#implFlush-java.nio.ByteBuffer-&quot;&gt; &lt;code&gt;implFlush&lt;/code&gt; &lt;/a&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="1d68eb989e6b2cec48fb1d9608b53360e33c5501" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetencoder#implOnMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt;&lt;code&gt;implOnMalformedInput&lt;/code&gt;&lt;/a&gt; method, passing the new action.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;charsetencoder#implOnMalformedInput-java.nio.charset.CodingErrorAction-&quot;&gt; &lt;code&gt;implOnMalformedInput&lt;/code&gt; &lt;/a&gt; 메소드를 호출 하여 새 조치를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="afd6d10a1b1e6193932849b08ddb519274872dcb" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetencoder#implOnUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt;&lt;code&gt;implOnUnmappableCharacter&lt;/code&gt;&lt;/a&gt; method, passing the new action.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;charsetencoder#implOnUnmappableCharacter-java.nio.charset.CodingErrorAction-&quot;&gt; &lt;code&gt;implOnUnmappableCharacter&lt;/code&gt; &lt;/a&gt; 메소드를 호출 하여 새 조치를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="0b72b131850d9b320a093c2e3604e8be32c2042c" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;charsetencoder#implReplaceWith-byte:A-&quot;&gt;&lt;code&gt;implReplaceWith&lt;/code&gt;&lt;/a&gt; method, passing the new replacement, after checking that the new replacement is acceptable.</source>
          <target state="translated">이 메소드는 새 교체가 허용 &lt;a href=&quot;charsetencoder#implReplaceWith-byte:A-&quot;&gt; &lt;code&gt;implReplaceWith&lt;/code&gt; &lt;/a&gt; 확인한 후 implReplaceWith 메소드를 호출하여 새 교체를 전달합니다.</target>
        </trans-unit>
        <trans-unit id="ad0ffa02b5be5094d7b4978dfaa39f5914c1520b" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;a href=&quot;filelock#release--&quot;&gt;&lt;code&gt;release()&lt;/code&gt;&lt;/a&gt; method. It was added to the class so that it could be used in conjunction with the automatic resource management block construct.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;filelock#release--&quot;&gt; &lt;code&gt;release()&lt;/code&gt; &lt;/a&gt; 메소드를 호출합니다 . 자동 자원 관리 블록 구성과 함께 사용될 수 있도록 클래스에 추가되었습니다.</target>
        </trans-unit>
        <trans-unit id="0d38c44073f00644ab9b57c3ea55d3a7eda2d72b" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;code&gt;doFinal&lt;/code&gt; method of the encapsulated cipher object, which causes any bytes buffered by the encapsulated cipher to be processed. The result is written out by calling the &lt;code&gt;flush&lt;/code&gt; method of this output stream.</source>
          <target state="translated">이 메소드는 캡슐화 된 암호 오브젝트 의 &lt;code&gt;doFinal&lt;/code&gt; 메소드를 호출하여 캡슐화 된 암호에 의해 버퍼링 된 바이트를 처리합니다. &lt;code&gt;flush&lt;/code&gt; 를 호출하여 결과가 기록됩니다.이 출력 스트림 메소드를 출력합니다.</target>
        </trans-unit>
        <trans-unit id="1bdb46a893dfa0483a9c4bd9290f9f4065057bd2" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;code&gt;login&lt;/code&gt; method for each LoginModule configured for the</source>
          <target state="translated">이 메소드는 에 대해 구성된 각 LoginModule에 대한 &lt;code&gt;login&lt;/code&gt; 메소드를 호출합니다 .</target>
        </trans-unit>
        <trans-unit id="945890c31957c102b30f2abb295e38f3d7c96e8d" translate="yes" xml:space="preserve">
          <source>This method invokes the &lt;code&gt;logout&lt;/code&gt; method for each &lt;code&gt;LoginModule&lt;/code&gt; configured for this &lt;code&gt;LoginContext&lt;/code&gt;. Each &lt;code&gt;LoginModule&lt;/code&gt; performs its respective logout procedure which may include removing/destroying &lt;code&gt;Principal&lt;/code&gt; and &lt;code&gt;Credential&lt;/code&gt; information from the &lt;code&gt;Subject&lt;/code&gt; and state cleanup.</source>
          <target state="translated">이 메소드는 이 &lt;code&gt;LoginContext&lt;/code&gt; 에 대해 구성된 각 &lt;code&gt;LoginModule&lt;/code&gt; 에 대해 &lt;code&gt;logout&lt;/code&gt; 메소드를 호출합니다 . 각 &lt;code&gt;LoginModule&lt;/code&gt; / 제거 파괴 포함 각각의 로그 아웃 절차를 수행하는 &lt;code&gt;Principal&lt;/code&gt; 및 &lt;code&gt;Credential&lt;/code&gt; 로부터 정보 &lt;code&gt;Subject&lt;/code&gt; 및 상태 정리.</target>
        </trans-unit>
        <trans-unit id="7fdde84115c0a56bd58b40513d143d43fdce1e31" translate="yes" xml:space="preserve">
          <source>This method is &lt;em&gt;restricted&lt;/em&gt;. Restricted methods are unsafe, and, if used incorrectly, their use might crash the JVM or, worse, silently result in memory corruption. Thus, clients should refrain from depending on restricted methods, and use safe and supported functionalities, where possible.</source>
          <target state="translated">이 방법은 &lt;em&gt;제한되어&lt;/em&gt; 있습니다. 제한된 메서드는 안전하지 않으며 잘못 사용하면 JVM이 중단되거나 더 나쁜 경우 메모리 손상이 자동으로 발생할 수 있습니다. 따라서 클라이언트는 제한된 방법에 의존하지 말고 가능한 경우 안전하고 지원되는 기능을 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="dad108669fb35a290a1b897c6b625f43fcba7dbb" translate="yes" xml:space="preserve">
          <source>This method is a cover that delegates to &lt;code&gt;getMinSelectionIndex&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;getMinSelectionIndex&lt;/code&gt; 에 위임하는 표지입니다 .</target>
        </trans-unit>
        <trans-unit id="c3e9f338e4814e9694b9c8800990ba819781ee6b" translate="yes" xml:space="preserve">
          <source>This method is a no-op if the &lt;code&gt;accessible&lt;/code&gt; flag for this reflected object is &lt;code&gt;true&lt;/code&gt;.</source>
          <target state="translated">이 반사 된 객체에 대한 &lt;code&gt;accessible&lt;/code&gt; 플래그가 &lt;code&gt;true&lt;/code&gt; 인 경우이 메서드는 작동하지 않습니다 .</target>
        </trans-unit>
        <trans-unit id="da0e1466ecd7a361566d14e2a3b23e59ec3e7651" translate="yes" xml:space="preserve">
          <source>This method is a shortcut for the common case of reading a document from a system identifier. It is the exact equivalent of the following:</source>
          <target state="translated">이 방법은 시스템 식별자에서 문서를 읽는 일반적인 경우에 대한 바로 가기입니다. 다음과 정확히 동일합니다.</target>
        </trans-unit>
        <trans-unit id="15edee9096244088501de41179160b4763526961" translate="yes" xml:space="preserve">
          <source>This method is a synonym for &lt;a href=&quot;#writeShort(int)&quot;&gt;&lt;code&gt;writeShort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#writeShort(int)&quot;&gt; &lt;code&gt;writeShort&lt;/code&gt; &lt;/a&gt; 의 동의어입니다 .</target>
        </trans-unit>
        <trans-unit id="fdb1880895c894bfd297246b1aa1118ff40e8627" translate="yes" xml:space="preserve">
          <source>This method is a synonym for &lt;a href=&quot;imageoutputstream#writeShort-int-&quot;&gt;&lt;code&gt;writeShort&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;imageoutputstream#writeShort-int-&quot;&gt; &lt;code&gt;writeShort&lt;/code&gt; 와&lt;/a&gt; 동의어입니다 .</target>
        </trans-unit>
        <trans-unit id="a5cc06003433eebab8325177aa608d991144029e" translate="yes" xml:space="preserve">
          <source>This method is a way to explicitly initiate an LDAP &quot;bind&quot; operation. For example, you can use this method to set request controls for the LDAP &quot;bind&quot; operation, or to explicitly connect to the server to get response controls returned by the LDAP &quot;bind&quot; operation.</source>
          <target state="translated">이 방법은 LDAP &quot;바인드&quot;작업을 명시 적으로 시작하는 방법입니다. 예를 들어,이 방법을 사용하여 LDAP &quot;바인드&quot;조작에 대한 요청 제어를 설정하거나 LDAP &quot;바인드&quot;조작으로 리턴 된 응답 제어를 얻기 위해 서버에 명시 적으로 연결할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="155b0904a24816755b685dc14f8a3b7dea7909ab" translate="yes" xml:space="preserve">
          <source>This method is also be invoked when a listener is added to an already initialized Flight Recorder.</source>
          <target state="translated">이 메서드는 이미 초기화 된 Flight Recorder에 리스너가 추가 된 경우에도 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f682cfd7ed488d6df08e1bbda8fd4a9615756c5f" translate="yes" xml:space="preserve">
          <source>This method is also equivalent to the following code:</source>
          <target state="translated">이 방법은 다음 코드와 동일합니다.</target>
        </trans-unit>
        <trans-unit id="07f1a21ff3dd618112585d4b6991b2bf70586a3b" translate="yes" xml:space="preserve">
          <source>This method is also the standard mechanism for setting extended handlers.</source>
          <target state="translated">이 메소드는 확장 핸들러 설정을위한 표준 메커니즘이기도합니다.</target>
        </trans-unit>
        <trans-unit id="026f6f13a19bcd38af6d3577b7bac7af7a220278" translate="yes" xml:space="preserve">
          <source>This method is always invoked by the thread performing acquire. If this method reports failure, the acquire method may queue the thread, if it is not already queued, until it is signalled by a release from some other thread.</source>
          <target state="translated">이 메소드는 항상 획득을 수행하는 스레드에 의해 호출됩니다. 이 메소드가 실패를보고하는 경우, 획득 메소드는 스레드가 아직 큐에없는 경우 다른 스레드의 릴리스에서 신호를 보낼 때까지 큐를 대기 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="137f6f823ea807cb22f2663f25b917c4ea7368d9" translate="yes" xml:space="preserve">
          <source>This method is always invoked by the thread performing acquire. If this method reports failure, the acquire method may queue the thread, if it is not already queued, until it is signalled by a release from some other thread. This can be used to implement method &lt;a href=&quot;lock#tryLock()&quot;&gt;&lt;code&gt;Lock.tryLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 항상 획득을 수행하는 스레드에 의해 호출됩니다. 이 메서드가 실패를보고하는 경우, 획득 메서드는 다른 스레드에서 릴리스에 의해 신호를받을 때까지 아직 큐에 있지 않은 경우 스레드를 큐에 넣을 수 있습니다. &lt;a href=&quot;lock#tryLock()&quot;&gt; &lt;code&gt;Lock.tryLock()&lt;/code&gt; &lt;/a&gt; 메서드를 구현하는 데 사용할 수 있습니다 .</target>
        </trans-unit>
        <trans-unit id="854e9e724162b78faf1d56eae1beffd001d61340" translate="yes" xml:space="preserve">
          <source>This method is always invoked by the thread performing acquire. If this method reports failure, the acquire method may queue the thread, if it is not already queued, until it is signalled by a release from some other thread. This can be used to implement method &lt;a href=&quot;lock#tryLock--&quot;&gt;&lt;code&gt;Lock.tryLock()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 항상 획득을 수행하는 스레드에 의해 호출됩니다. 이 메소드가 실패를보고하는 경우, 획득 메소드는 스레드가 아직 큐에없는 경우 다른 스레드의 릴리스에서 신호를 보낼 때까지 큐를 대기 할 수 있습니다. &lt;a href=&quot;lock#tryLock--&quot;&gt; &lt;code&gt;Lock.tryLock()&lt;/code&gt; &lt;/a&gt; 메소드를 구현하는 데 사용할 수 있습니다. .</target>
        </trans-unit>
        <trans-unit id="c66c1667c9809f5bac5c98e29f63d17cebc866ae" translate="yes" xml:space="preserve">
          <source>This method is always invoked by the thread performing release.</source>
          <target state="translated">이 메소드는 항상 릴리스를 수행하는 스레드에 의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="e12a158fafb7dc3b19a42b2172f8a90668b184b7" translate="yes" xml:space="preserve">
          <source>This method is always synchronous, even if the &lt;code&gt;LSParser&lt;/code&gt; is asynchronous (&lt;code&gt;LSParser.async&lt;/code&gt; is &lt;code&gt;true&lt;/code&gt;).</source>
          <target state="translated">이 메서드는 &lt;code&gt;LSParser&lt;/code&gt; 가 비동기 ( &lt;code&gt;LSParser.async&lt;/code&gt; 가 &lt;code&gt;true&lt;/code&gt; ) 인 경우 에도 항상 동기 입니다.</target>
        </trans-unit>
        <trans-unit id="7d2837baf09f33244695dcef0eb90a4fa45160bf" translate="yes" xml:space="preserve">
          <source>This method is an exception to the general rule that the results of concurrently executing multiple methods in this class yields results equivalent to some serial execution. If the preferences at this node are modified concurrently with an invocation of this method, the exported preferences comprise a &quot;fuzzy snapshot&quot; of the preferences contained in the node; some of the concurrent modifications may be reflected in the exported data while others may not.</source>
          <target state="translated">이 메소드는이 클래스에서 여러 메소드를 동시에 실행 한 결과가 일부 직렬 실행과 동등한 결과를 생성한다는 일반 규칙의 예외입니다. 이 노드의 환경 설정이이 메소드의 호출과 동시에 수정되는 경우, 내 보낸 환경 설정은 노드에 포함 된 환경 설정의 &quot;퍼지 스냅 샷&quot;을 포함합니다. 동시 수정 중 일부는 내 보낸 데이터에 반영 될 수 있지만 나머지는 수정되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="64dc8b5021c31bbaac7e73e665736fe1345660d5" translate="yes" xml:space="preserve">
          <source>This method is an exception to the general rule that the results of concurrently executing multiple methods in this class yields results equivalent to some serial execution. If the preferences or nodes in the subtree rooted at this node are modified concurrently with an invocation of this method, the exported preferences comprise a &quot;fuzzy snapshot&quot; of the subtree; some of the concurrent modifications may be reflected in the exported data while others may not.</source>
          <target state="translated">이 메소드는이 클래스에서 여러 메소드를 동시에 실행 한 결과가 일부 직렬 실행과 동등한 결과를 생성한다는 일반 규칙의 예외입니다. 이 노드를 기반으로하는 서브 트리의 환경 설정 또는 노드가이 메소드의 호출과 동시에 수정되는 경우, 내 보낸 환경 설정은 서브 트리의 &quot;퍼지 스냅 샷&quot;을 포함합니다. 동시 수정 중 일부는 내 보낸 데이터에 반영 될 수 있지만 나머지는 수정되지 않을 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="f400661c1d342f7d8aad41a7c6671c648807f98c" translate="yes" xml:space="preserve">
          <source>This method is an exception to the general rule that the results of concurrently executing multiple methods in this class yields results equivalent to some serial execution. The method behaves as if implemented on top of the other public methods in this class, notably &lt;a href=&quot;#node(java.lang.String)&quot;&gt;&lt;code&gt;node(String)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;#put(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;put(String, String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는이 클래스에서 여러 메서드를 동시에 실행 한 결과가 일부 직렬 실행과 동일한 결과를 산출한다는 일반적인 규칙에 대한 예외입니다. 이 메서드는이 클래스의 다른 공용 메서드, 특히 &lt;a href=&quot;#node(java.lang.String)&quot;&gt; &lt;code&gt;node(String)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;#put(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;put(String, String)&lt;/code&gt; &lt;/a&gt; 위에 구현 된 것처럼 동작 합니다.</target>
        </trans-unit>
        <trans-unit id="21fb541cdce5155c0679500a74475ea5393d42c3" translate="yes" xml:space="preserve">
          <source>This method is an exception to the general rule that the results of concurrently executing multiple methods in this class yields results equivalent to some serial execution. The method behaves as if implemented on top of the other public methods in this class, notably &lt;a href=&quot;preferences#node-java.lang.String-&quot;&gt;&lt;code&gt;node(String)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;preferences#put-java.lang.String-java.lang.String-&quot;&gt;&lt;code&gt;put(String, String)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는이 클래스에서 여러 메소드를 동시에 실행 한 결과가 일부 직렬 실행과 동등한 결과를 생성한다는 일반 규칙의 예외입니다. 이 메소드는이 클래스의 다른 공용 메소드, 특히 &lt;a href=&quot;preferences#node-java.lang.String-&quot;&gt; &lt;code&gt;node(String)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;preferences#put-java.lang.String-java.lang.String-&quot;&gt; &lt;code&gt;put(String, String)&lt;/code&gt; &lt;/a&gt; 위에서 구현 된 것처럼 작동 합니다.</target>
        </trans-unit>
        <trans-unit id="d454ff45511ed4b12e30e058a0a7a4d9e297bf46" translate="yes" xml:space="preserve">
          <source>This method is analogous to &lt;a href=&quot;../optional#flatMap(java.util.function.Function)&quot;&gt;&lt;code&gt;Optional.flatMap&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../stream/stream#flatMap(java.util.function.Function)&quot;&gt;&lt;code&gt;Stream.flatMap&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../optional#flatMap(java.util.function.Function)&quot;&gt; &lt;code&gt;Optional.flatMap&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../stream/stream#flatMap(java.util.function.Function)&quot;&gt; &lt;code&gt;Stream.flatMap&lt;/code&gt; &lt;/a&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="2463f5fc1b81bec103c907724c2f36a021463ab7" translate="yes" xml:space="preserve">
          <source>This method is analogous to &lt;a href=&quot;../optional#map(java.util.function.Function)&quot;&gt;&lt;code&gt;Optional.map&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;../stream/stream#map(java.util.function.Function)&quot;&gt;&lt;code&gt;Stream.map&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../optional#map(java.util.function.Function)&quot;&gt; &lt;code&gt;Optional.map&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;../stream/stream#map(java.util.function.Function)&quot;&gt; &lt;code&gt;Stream.map&lt;/code&gt; &lt;/a&gt; 과 유사합니다 .</target>
        </trans-unit>
        <trans-unit id="9082bb5b477fb1f55bdafc54e1299e80956114bb" translate="yes" xml:space="preserve">
          <source>This method is associated with</source>
          <target state="translated">이 방법은 다음과 관련이 있습니다.</target>
        </trans-unit>
        <trans-unit id="e8542852fa3bffcff27089b4783d473c11ff3d44" translate="yes" xml:space="preserve">
          <source>This method is based on retaining the same instant, thus gaps and overlaps in the local time-line have no effect on the result.</source>
          <target state="translated">이 방법은 동일한 순간을 유지하는 것을 기반으로하므로 로컬 타임 라인의 간격과 겹침은 결과에 영향을 미치지 않습니다.</target>
        </trans-unit>
        <trans-unit id="2ea95ed80c3052b46d554f1c216450a40eb76143" translate="yes" xml:space="preserve">
          <source>This method is called</source>
          <target state="translated">이 메서드는</target>
        </trans-unit>
        <trans-unit id="c7ba826bf2926f9d34022ed208953d3cd0c31bdc" translate="yes" xml:space="preserve">
          <source>This method is called after an object has been read but before it is returned from readObject. The default resolveObject method just returns the same object.</source>
          <target state="translated">이 메소드는 오브젝트를 읽은 후 readObject에서 리턴하기 전에 호출됩니다. 기본 resolveObject 메소드는 동일한 객체를 반환합니다.</target>
        </trans-unit>
        <trans-unit id="1e41b7352b64f668a6f154b30077af26b623a697" translate="yes" xml:space="preserve">
          <source>This method is called automatically when any layout-related information changes (e.g. setting the bounds of the component, or adding the component to a container).</source>
          <target state="translated">이 메서드는 레이아웃 관련 정보가 변경 될 때 자동으로 호출됩니다 (예 : 구성 요소 경계 설정 또는 구성 요소를 컨테이너에 추가).</target>
        </trans-unit>
        <trans-unit id="c2ec115e817a5f9e800984c8a3b6f72d8a0d799f" translate="yes" xml:space="preserve">
          <source>This method is called before the popup menu becomes invisible Note that a JPopupMenu can become invisible any time</source>
          <target state="translated">이 메소드는 팝업 메뉴가 보이지 않게되기 전에 호출됩니다. JPopupMenu는 언제든지 보이지 않게 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="a1a18c830a10a79dcdf8619d12a902e2ae25c6f1" translate="yes" xml:space="preserve">
          <source>This method is called before the popup menu becomes visible</source>
          <target state="translated">이 메서드는 팝업 메뉴가 표시되기 전에 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="158cc5239e1d2551b871a6e06c9c9acc16a0ff50" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;#getDescription(javax.management.MBeanAttributeInfo)&quot;&gt;&lt;code&gt;getDescription(MBeanAttributeInfo)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getDescription(javax.management.MBeanOperationInfo)&quot;&gt;&lt;code&gt;getDescription(MBeanOperationInfo)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;#getDescription(javax.management.MBeanConstructorInfo)&quot;&gt;&lt;code&gt;getDescription(MBeanConstructorInfo)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#getDescription(javax.management.MBeanAttributeInfo)&quot;&gt; &lt;code&gt;getDescription(MBeanAttributeInfo)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#getDescription(javax.management.MBeanOperationInfo)&quot;&gt; &lt;code&gt;getDescription(MBeanOperationInfo)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;#getDescription(javax.management.MBeanConstructorInfo)&quot;&gt; &lt;code&gt;getDescription(MBeanConstructorInfo)&lt;/code&gt; &lt;/a&gt; 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="148d9e498cc5dd8d17eff6748107ecc9ea243f34" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;#sendNotification(javax.management.Notification)&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt; for each listener in order to send the notification to that listener.</source>
          <target state="translated">이 메소드는 해당 리스너에 알림을 보내기 위해 각 리스너에 대해 &lt;a href=&quot;#sendNotification(javax.management.Notification)&quot;&gt; &lt;code&gt;sendNotification&lt;/code&gt; &lt;/a&gt; 에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="a59be729890b290cb4c1d42c34f56ddf2639c2ef" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;#sendNotification(javax.management.Notification)&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt; for each listener in order to send the notification to that listener. It can be overridden in subclasses to change the behavior of notification delivery, for instance to deliver the notification in a separate thread.</source>
          <target state="translated">이 메소드는 해당 리스너에 알림을 보내기 위해 각 리스너에 대해 &lt;a href=&quot;#sendNotification(javax.management.Notification)&quot;&gt; &lt;code&gt;sendNotification&lt;/code&gt; &lt;/a&gt; 에 의해 호출됩니다 . 예를 들어 별도의 스레드에서 알림을 전달하기 위해 알림 전달의 동작을 변경하기 위해 하위 클래스에서 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="4c787ecfe88e1d5f8aa0eba53588be0c6ff0e643" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;../inputcontext#dispatchEvent(java.awt.AWTEvent)&quot;&gt;&lt;code&gt;InputContext.dispatchEvent&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../inputcontext#dispatchEvent(java.awt.AWTEvent)&quot;&gt; &lt;code&gt;InputContext.dispatchEvent&lt;/code&gt; 에&lt;/a&gt; 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="cb1971f5866b834410f37778c00158042f066487" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;../inputcontext#dispose()&quot;&gt;&lt;code&gt;InputContext.dispose&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../inputcontext#dispose()&quot;&gt; &lt;code&gt;InputContext.dispose&lt;/code&gt; 에&lt;/a&gt; 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="f2610aa79c8673183b2120e38fba59ed63d25e56" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;../inputcontext#getInputMethodControlObject()&quot;&gt;&lt;code&gt;InputContext.getInputMethodControlObject&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../inputcontext#getInputMethodControlObject()&quot;&gt; &lt;code&gt;InputContext.getInputMethodControlObject&lt;/code&gt; 에&lt;/a&gt; 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="ff341e7bc5d46602416051f72c683475703a0480" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;../inputcontext#reconvert()&quot;&gt;&lt;code&gt;InputContext.reconvert&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../inputcontext#reconvert()&quot;&gt; &lt;code&gt;InputContext.reconvert&lt;/code&gt; 에&lt;/a&gt; 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="3bff94f1340fb1f9335c9c4ecce1071136f2d6e6" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;../inputcontext#removeNotify(java.awt.Component)&quot;&gt;&lt;code&gt;InputContext.removeNotify&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../inputcontext#removeNotify(java.awt.Component)&quot;&gt; &lt;code&gt;InputContext.removeNotify&lt;/code&gt; 에&lt;/a&gt; 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="79425ac1087fb3dd51e651191d4533cb7b19b8da" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;notificationbroadcastersupport#sendNotification-javax.management.Notification-&quot;&gt;&lt;code&gt;sendNotification&lt;/code&gt;&lt;/a&gt; for each listener in order to send the notification to that listener. It can be overridden in subclasses to change the behavior of notification delivery, for instance to deliver the notification in a separate thread.</source>
          <target state="translated">이 메소드는 통지를 해당 리스너에게 보내기 위해 각 리스너에 대해 &lt;a href=&quot;notificationbroadcastersupport#sendNotification-javax.management.Notification-&quot;&gt; &lt;code&gt;sendNotification&lt;/code&gt; &lt;/a&gt; 에 의해 호출됩니다 . 알림 전달 동작을 변경하기 위해 서브 클래스에서 재정의 할 수 있습니다 (예 : 별도의 스레드에서 알림을 전달하기 위해).</target>
        </trans-unit>
        <trans-unit id="1ee68b73f449a54624673c8c02a1a403a8f6e744" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanAttributeInfo-&quot;&gt;&lt;code&gt;getDescription(MBeanAttributeInfo)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanOperationInfo-&quot;&gt;&lt;code&gt;getDescription(MBeanOperationInfo)&lt;/code&gt;&lt;/a&gt;, &lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanConstructorInfo-&quot;&gt;&lt;code&gt;getDescription(MBeanConstructorInfo)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanAttributeInfo-&quot;&gt; &lt;code&gt;getDescription(MBeanAttributeInfo)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanOperationInfo-&quot;&gt; &lt;code&gt;getDescription(MBeanOperationInfo)&lt;/code&gt; &lt;/a&gt; , &lt;a href=&quot;standardmbean#getDescription-javax.management.MBeanConstructorInfo-&quot;&gt; &lt;code&gt;getDescription(MBeanConstructorInfo)&lt;/code&gt; &lt;/a&gt; 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="abe5b4a02d79b6ed369f46a9ad3120a21f027d94" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;code&gt;installUI&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;installUI&lt;/code&gt; 에 의해 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="5822ab480991ae893767f5fa62a415c8f564a823" translate="yes" xml:space="preserve">
          <source>This method is called by &lt;code&gt;uninstallUI&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;uninstallUI&lt;/code&gt; 에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="78c36fbc7bd9b7e18589c618e0c328aa179c6064" translate="yes" xml:space="preserve">
          <source>This method is called by AWT when the invalidate method is called on the Container. Since the invalidate method may be called asynchronously to the event thread, this method may be called asynchronously.</source>
          <target state="translated">이 메소드는 컨테이너에서 invalidate 메소드가 호출 될 때 AWT에 의해 호출됩니다. invalidate 메서드는 이벤트 스레드에 대해 비동기 적으로 호출 될 수 있으므로이 메서드는 비동기 적으로 호출 될 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="6c6e929bbce3c103de0eef6428de998ec76d5193" translate="yes" xml:space="preserve">
          <source>This method is called by a &lt;code&gt;FilteredRowSet&lt;/code&gt; object to check whether the value lies between the filtering criterion (or criteria if multiple constraints exist) set using the &lt;code&gt;setFilter()&lt;/code&gt; method.</source>
          <target state="translated">이 메서드는 값이 &lt;code&gt;setFilter()&lt;/code&gt; 메서드를 사용하여 설정된 필터링 기준 (또는 여러 제약 조건이있는 경우 기준) 사이에 있는지 여부를 확인하기 위해 &lt;code&gt;FilteredRowSet&lt;/code&gt; 객체에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="4eadd8fa5a1b76cb8181cbe7fd16cd75fe41648e" translate="yes" xml:space="preserve">
          <source>This method is called by components &lt;code&gt;prepareImage&lt;/code&gt; methods.</source>
          <target state="translated">이 메서드는 구성 요소 &lt;code&gt;prepareImage&lt;/code&gt; 메서드에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="7e4285348f892222bf022a4ee8689f23ff034614" translate="yes" xml:space="preserve">
          <source>This method is called by installUI to get the editor component of the &lt;code&gt;JSpinner&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;JSpinner&lt;/code&gt; 의 편집기 구성 요소를 가져 오기 위해 installUI에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="c8575edcd7b394b0ef790ff68e1bc217aa8f95ed" translate="yes" xml:space="preserve">
          <source>This method is called by installUI to get the editor component of the &lt;code&gt;JSpinner&lt;/code&gt;. By default it just returns &lt;code&gt;JSpinner.getEditor()&lt;/code&gt;. Subclasses can override &lt;code&gt;createEditor&lt;/code&gt; to return a component that contains the spinner's editor or null, if they're going to handle adding the editor to the &lt;code&gt;JSpinner&lt;/code&gt; in an &lt;code&gt;installUI&lt;/code&gt; override.</source>
          <target state="translated">이 메소드는 &lt;code&gt;JSpinner&lt;/code&gt; 의 편집기 구성 요소를 가져 오기 위해 installUI에 의해 호출됩니다 . 기본적으로 &lt;code&gt;JSpinner.getEditor()&lt;/code&gt; 만 반환합니다 . 하위 클래스는 &lt;code&gt;createEditor&lt;/code&gt; 를 재정 의하여 spinner의 편집기를 포함하는 구성 요소를 반환하거나 &lt;code&gt;installUI&lt;/code&gt; 재정의 에서 &lt;code&gt;JSpinner&lt;/code&gt; 에 편집기 추가를 처리하려는 경우 null을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="51594e02f9eba30f23b0c316d7b641c815bc036c" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;code&gt;FilteredRowSet&lt;/code&gt; object to check whether the value lies between the filtering criteria set using the setFilter method.</source>
          <target state="translated">이 메소드는 값이 setFilter 메소드를 사용하여 설정된 필터링 기준 사이에 있는지 확인하기 위해 &lt;code&gt;FilteredRowSet&lt;/code&gt; 오브젝트에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="3de0b2e3cdbdaf07c4fa04462cd483d787e7bcde" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;code&gt;LoginContext&lt;/code&gt; after this &lt;code&gt;LoginModule&lt;/code&gt; has been instantiated. The purpose of this method is to initialize this &lt;code&gt;LoginModule&lt;/code&gt; with the relevant information. If this &lt;code&gt;LoginModule&lt;/code&gt; does not understand any of the data stored in &lt;code&gt;sharedState&lt;/code&gt; or &lt;code&gt;options&lt;/code&gt; parameters, they can be ignored.</source>
          <target state="translated">이 메소드는 이 &lt;code&gt;LoginModule&lt;/code&gt; 이 인스턴스화 된 후에 &lt;code&gt;LoginContext&lt;/code&gt; 에 의해 호출됩니다 . 이 방법의 목적은 관련 정보를 사용 하여이 &lt;code&gt;LoginModule&lt;/code&gt; 을 초기화하는 것입니다 . 이 &lt;code&gt;LoginModule&lt;/code&gt; 이 &lt;code&gt;sharedState&lt;/code&gt; 또는 &lt;code&gt;options&lt;/code&gt; 저장된 데이터를 이해하지 못하는 경우 매개 변수에 무시할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="e11ab4932ac374e31fa0b944a33cd4ccc0325ce4" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;code&gt;clear&lt;/code&gt; operation on this list and its subLists. Overriding this method to take advantage of the internals of the list implementation can</source>
          <target state="translated">이 메소드는 &lt;code&gt;clear&lt;/code&gt; 에 의해 호출됩니다. 이리스트 및 해당 서브리스트 조작으로 . 리스트 구현의 내부를 이용하기 위해이 메소드를 재정의 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="16983a0b5c69ac5b6174ce76db7b6ed59b401a9d" translate="yes" xml:space="preserve">
          <source>This method is called by the &lt;code&gt;loadClass&lt;/code&gt; method of some class loaders.</source>
          <target state="translated">이 메서드는 일부 클래스 로더 의 &lt;code&gt;loadClass&lt;/code&gt; 메서드에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="96196245341248b20f0b672f3d0fe197fee491b6" translate="yes" xml:space="preserve">
          <source>This method is called by the AWT event dispatcher requesting that the current KeyboardFocusManager dispatch the specified event on its behalf.</source>
          <target state="translated">이 메서드는 현재 KeyboardFocusManager가 지정된 이벤트를 대신 전달하도록 요청하는 AWT 이벤트 발송자에 의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="62a269bbea2146aed4fe1bd92818f0fa37c8b53e" translate="yes" xml:space="preserve">
          <source>This method is called by the AWT event dispatcher requesting that the current KeyboardFocusManager dispatch the specified event on its behalf. DefaultKeyboardFocusManagers dispatch all FocusEvents, all WindowEvents related to focus, and all KeyEvents. These events are dispatched based on the KeyboardFocusManager's notion of the focus owner and the focused and active Windows, sometimes overriding the source of the specified AWTEvent. If this method returns &lt;code&gt;false&lt;/code&gt;, then the AWT event dispatcher will attempt to dispatch the event itself.</source>
          <target state="translated">이 메서드는 현재 KeyboardFocusManager가 지정된 이벤트를 대신 전달하도록 요청하는 AWT 이벤트 발송자에 의해 호출됩니다. DefaultKeyboardFocusManager는 모든 FocusEvent, 포커스와 관련된 모든 WindowEvent 및 모든 KeyEvent를 전달합니다. 이러한 이벤트는 포커스 소유자 및 포커스가있는 활성 Windows에 대한 KeyboardFocusManager의 개념을 기반으로 전달되며 지정된 AWTEvent의 소스를 재정의하는 경우도 있습니다. 이 메서드가 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 AWT 이벤트 디스패처는 이벤트 자체를 전달하려고합니다.</target>
        </trans-unit>
        <trans-unit id="3cd8788bbf971b4fffcc5210be356e5e3a784e2c" translate="yes" xml:space="preserve">
          <source>This method is called by the AWT event dispatcher requesting that the current KeyboardFocusManager dispatch the specified event on its behalf. It is expected that all KeyboardFocusManagers will dispatch all FocusEvents, all WindowEvents related to focus, and all KeyEvents. These events should be dispatched based on the KeyboardFocusManager's notion of the focus owner and the focused and active Windows, sometimes overriding the source of the specified AWTEvent. Dispatching must be done using &lt;code&gt;redispatchEvent&lt;/code&gt; to prevent the AWT event dispatcher from recursively requesting that the KeyboardFocusManager dispatch the event again. If this method returns &lt;code&gt;false&lt;/code&gt;, then the AWT event dispatcher will attempt to dispatch the event itself.</source>
          <target state="translated">이 메서드는 현재 KeyboardFocusManager가 지정된 이벤트를 대신 전달하도록 요청하는 AWT 이벤트 발송자에 의해 호출됩니다. 모든 KeyboardFocusManager는 모든 FocusEvent, 포커스와 관련된 모든 WindowEvent 및 모든 KeyEvent를 전달합니다. 이러한 이벤트는 포커스 소유자와 포커스가있는 활성 Windows에 대한 KeyboardFocusManager의 개념을 기반으로 전달되어야하며 때로는 지정된 AWTEvent의 소스를 재정의해야합니다. AWT 이벤트 디스패처가 KeyboardFocusManager가 이벤트를 다시 디스패치하도록 재귀 적으로 요청하지 않도록하려면 &lt;code&gt;redispatchEvent&lt;/code&gt; 를 사용하여 디스패치를 ​​수행해야 합니다. 이 메서드가 &lt;code&gt;false&lt;/code&gt; 를 반환 하면 AWT 이벤트 디스패처는 이벤트 자체를 전달하려고합니다.</target>
        </trans-unit>
        <trans-unit id="eab8d65001f11023e79a91da8407b01caedde4b4" translate="yes" xml:space="preserve">
          <source>This method is called by the component's &lt;code&gt;checkImage&lt;/code&gt; methods.</source>
          <target state="translated">이 메서드는 구성 요소의 &lt;code&gt;checkImage&lt;/code&gt; 메서드에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="a706401d3613ffe809e69feb9da559c71b74cf15" translate="yes" xml:space="preserve">
          <source>This method is called by the constructors to create the &lt;code&gt;JComponent&lt;/code&gt; that displays the current value of the sequence.</source>
          <target state="translated">이 메서드는 시퀀스의 현재 값을 표시하는 &lt;code&gt;JComponent&lt;/code&gt; 를 생성하기 위해 생성자에 의해 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="fa5bda590a4a2702fc8acd477a43d6a8ac040c64" translate="yes" xml:space="preserve">
          <source>This method is called by the constructors to create the &lt;code&gt;JComponent&lt;/code&gt; that displays the current value of the sequence. The editor may also allow the user to enter an element of the sequence directly. An editor must listen for &lt;code&gt;ChangeEvents&lt;/code&gt; on the &lt;code&gt;model&lt;/code&gt; and keep the value it displays in sync with the value of the model.</source>
          <target state="translated">이 메서드는 시퀀스의 현재 값을 표시하는 &lt;code&gt;JComponent&lt;/code&gt; 를 생성하기 위해 생성자에 의해 호출됩니다 . 편집기는 사용자가 시퀀스의 요소를 직접 입력하도록 허용 할 수도 있습니다. 편집기는 &lt;code&gt;model&lt;/code&gt; 에서 &lt;code&gt;ChangeEvents&lt;/code&gt; 를 수신 하고 표시되는 값을 모델 값과 동기화 상태로 유지해야합니다.</target>
        </trans-unit>
        <trans-unit id="08e88c55fb817a13854413c06eb1248bcb9bfc0b" translate="yes" xml:space="preserve">
          <source>This method is called by the current KeyboardFocusManager requesting that this KeyEventDispatcher dispatch the specified event on its behalf.</source>
          <target state="translated">이 메서드는이 KeyEventDispatcher가 대신 지정된 이벤트를 전달하도록 요청하는 현재 KeyboardFocusManager에 의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4fb713ed39b2e2bdbc5887ee28711789834dadb1" translate="yes" xml:space="preserve">
          <source>This method is called by the current KeyboardFocusManager requesting that this KeyEventDispatcher dispatch the specified event on its behalf. This KeyEventDispatcher is free to retarget the event, consume it, dispatch it itself, or make other changes. This capability is typically used to deliver KeyEvents to Components other than the focus owner. This can be useful when navigating children of non-focusable Windows in an accessible environment, for example. Note that if a KeyEventDispatcher dispatches the KeyEvent itself, it must use &lt;code&gt;redispatchEvent&lt;/code&gt; to prevent the current KeyboardFocusManager from recursively requesting that this KeyEventDispatcher dispatch the event again.</source>
          <target state="translated">이 메서드는이 KeyEventDispatcher가 대신 지정된 이벤트를 전달하도록 요청하는 현재 KeyboardFocusManager에 의해 호출됩니다. 이 KeyEventDispatcher는 자유롭게 이벤트 대상을 변경하거나, 사용하거나, 자체적으로 전달하거나, 다른 변경을 수행 할 수 있습니다. 이 기능은 일반적으로 포커스 소유자가 아닌 다른 구성 요소에 KeyEvents를 전달하는 데 사용됩니다. 예를 들어 액세스 가능한 환경에서 초점을 맞출 수없는 Windows의 자식을 탐색 할 때 유용 할 수 있습니다. KeyEventDispatcher가 KeyEvent 자체를 전달하는 경우 &lt;code&gt;redispatchEvent&lt;/code&gt; 를 사용하여 현재 KeyboardFocusManager가이 KeyEventDispatcher가 이벤트를 다시 전달하도록 재귀 적으로 요청하지 않도록 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="8721dadc199fed2fa3aa4c04f429272992094d05" translate="yes" xml:space="preserve">
          <source>This method is called by the current KeyboardFocusManager, requesting that this KeyEventPostProcessor perform any necessary post-processing which should be part of the KeyEvent's final resolution.</source>
          <target state="translated">이 메서드는 현재 KeyboardFocusManager에 의해 호출되어이 KeyEventPostProcessor가 KeyEvent의 최종 해결의 일부가되어야하는 필요한 사후 처리를 수행하도록 요청합니다.</target>
        </trans-unit>
        <trans-unit id="0fafc9ec7e2bb975511df409b7378e05f52b7ff2" translate="yes" xml:space="preserve">
          <source>This method is called by the current KeyboardFocusManager, requesting that this KeyEventPostProcessor perform any necessary post-processing which should be part of the KeyEvent's final resolution. At the time this method is invoked, typically the KeyEvent has already been dispatched to and handled by its target. However, if no Component in the application currently owns the focus, then the KeyEvent has not been dispatched to any Component. Typically, KeyEvent post-processing will be used to implement features which require global KeyEvent post-handling, such as menu shortcuts. Note that if a KeyEventPostProcessor wishes to dispatch the KeyEvent, it must use &lt;code&gt;redispatchEvent&lt;/code&gt; to prevent the AWT from recursively requesting that this KeyEventPostProcessor perform post-processing of the event again.</source>
          <target state="translated">이 메서드는 현재 KeyboardFocusManager에 의해 호출되어이 KeyEventPostProcessor가 KeyEvent의 최종 해결의 일부가되어야하는 필요한 사후 처리를 수행하도록 요청합니다. 이 메서드가 호출 될 때 일반적으로 KeyEvent는 이미 해당 대상에 전달되고 처리되었습니다. 그러나 응용 프로그램의 구성 요소가 현재 포커스를 소유하고 있지 않으면 KeyEvent가 구성 요소로 전달되지 않은 것입니다. 일반적으로 KeyEvent 사후 처리는 메뉴 바로 가기와 같이 전역 KeyEvent 사후 처리가 필요한 기능을 구현하는 데 사용됩니다. KeyEventPostProcessor가 KeyEvent를 전달하려면 &lt;code&gt;redispatchEvent&lt;/code&gt; 를 사용하여 AWT가이 KeyEventPostProcessor가 이벤트의 사후 처리를 다시 수행하도록 재귀 적으로 요청하지 않도록 해야 합니다.</target>
        </trans-unit>
        <trans-unit id="a9c102bcf51095e621b5b8e2021b08fb181e809b" translate="yes" xml:space="preserve">
          <source>This method is called by the toolkit internally and should not be called directly by programs. Code overriding this method should call &lt;code&gt;super.removeNotify&lt;/code&gt; as the first line of the overriding method.</source>
          <target state="translated">이 메소드는 툴킷에서 내부적으로 호출되며 프로그램에서 직접 호출해서는 안됩니다. 이 메서드를 재정의하는 코드는 재정의 메서드 의 첫 번째 줄로 &lt;code&gt;super.removeNotify&lt;/code&gt; 를 호출해야합니다 .</target>
        </trans-unit>
        <trans-unit id="5a8d3936ceec8a0addfb729f9bcd067526799a89" translate="yes" xml:space="preserve">
          <source>This method is called by trusted subclasses of ObjectInputStream that constructed ObjectInputStream using the protected no-arg constructor.</source>
          <target state="translated">이 메서드는 보호 된 인수없는 생성자를 사용하여 ObjectInputStream을 생성 한 ObjectInputStream의 신뢰할 수있는 하위 클래스에 의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="8cc3e12dbe7d61a7a2ced2b65d983a2f99e47f89" translate="yes" xml:space="preserve">
          <source>This method is called by trusted subclasses of ObjectInputStream that constructed ObjectInputStream using the protected no-arg constructor. The subclass is expected to provide an override method with the modifier &quot;final&quot;.</source>
          <target state="translated">이 메서드는 보호 된 인수없는 생성자를 사용하여 ObjectInputStream을 생성 한 ObjectInputStream의 신뢰할 수있는 하위 클래스에 의해 호출됩니다. 하위 클래스는 &quot;final&quot;수정자를 사용하여 재정의 메서드를 제공해야합니다.</target>
        </trans-unit>
        <trans-unit id="e7e609540e5ada6526046320bca805295867460b" translate="yes" xml:space="preserve">
          <source>This method is called by trusted subclasses of ObjectOutputStream that constructed ObjectOutputStream using the protected no-arg constructor.</source>
          <target state="translated">이 메서드는 보호 된 인수없는 생성자를 사용하여 ObjectOutputStream을 생성 한 ObjectOutputStream의 신뢰할 수있는 하위 클래스에 의해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="07cced3d72aa75fe15d69546e9ed868a56713ecf" translate="yes" xml:space="preserve">
          <source>This method is called by trusted subclasses of ObjectOutputStream that constructed ObjectOutputStream using the protected no-arg constructor. The subclass is expected to provide an override method with the modifier &quot;final&quot;.</source>
          <target state="translated">이 메소드는, 인수 없음의 protected 생성자를 사용해 ObjectOutputStream를 구축 한 ObjectOutputStream의 신뢰할 수있는 서브 클래스에 의해 불려갑니다. 서브 클래스는 수정 자 &quot;final&quot;을 갖는 대체 메소드를 제공 할 것으로 예상됩니다.</target>
        </trans-unit>
        <trans-unit id="ab47d4a71e2e6b30c5f86017969bd0e1c4033693" translate="yes" xml:space="preserve">
          <source>This method is called each time the user requests a unit scroll.</source>
          <target state="translated">이 메서드는 사용자가 단위 스크롤을 요청할 때마다 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0d0e648fcdb59d9e3a7ce6bcb5edadfe481a4723" translate="yes" xml:space="preserve">
          <source>This method is called exactly once for each unique proxy class descriptor in the stream.</source>
          <target state="translated">이 메소드는 스트림의 각 고유 프록시 클래스 디스크립터에 대해 정확히 한 번 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4902d3756b01e69bda499308c33de60ca1a4f179" translate="yes" xml:space="preserve">
          <source>This method is called exactly once for each unique proxy class descriptor in the stream. The default implementation of this method in &lt;code&gt;ObjectOutputStream&lt;/code&gt; does nothing.</source>
          <target state="translated">이 메소드는 스트림의 각 고유 프록시 클래스 디스크립터에 대해 정확히 한 번 호출됩니다. &lt;code&gt;ObjectOutputStream&lt;/code&gt; 에서이 메소드의 기본 구현 은 아무 것도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="668803da70b120993b475636cc80a01040df1564" translate="yes" xml:space="preserve">
          <source>This method is called for each parameter name/value pair and should return the normalized representation of the &lt;code&gt;parameterValue&lt;/code&gt;.</source>
          <target state="translated">이 방법은 각 파라미터의 이름 / 값 쌍에 대한 호출과의 정규화 된 표현을 돌려 &lt;code&gt;parameterValue&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="4b16e23c438d362138bbd158668a5915c5bea4f4" translate="yes" xml:space="preserve">
          <source>This method is called from the default implementation of the &lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale)&quot;&gt;&lt;code&gt;getBundle(String, Locale)&lt;/code&gt;&lt;/a&gt; method.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#getBundle(java.lang.String,java.util.Locale)&quot;&gt; &lt;code&gt;getBundle(String, Locale)&lt;/code&gt; &lt;/a&gt; 메서드 의 기본 구현에서 호출됩니다 .</target>
        </trans-unit>
        <trans-unit id="0ff7635964cce9a2b09366d8936a1667c8418954" translate="yes" xml:space="preserve">
          <source>This method is called if the LoginContext's overall authentication failed.</source>
          <target state="translated">이 메서드는 LoginContext의 전체 인증이 실패한 경우 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="f62861d342032164149b4be32e3cdb512c31df69" translate="yes" xml:space="preserve">
          <source>This method is called if the LoginContext's overall authentication failed. (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules did not succeed).</source>
          <target state="translated">LoginContext의 전체 인증에 실패한 경우이 메소드가 호출됩니다. (필요한 필수, 필수, 충분하고 선택적인 로그인 모듈이 성공하지 못했습니다).</target>
        </trans-unit>
        <trans-unit id="d7098aa1df43974ecddcceb11655f6df1d3b3f56" translate="yes" xml:space="preserve">
          <source>This method is called if the LoginContext's overall authentication succeeded (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules succeeded).</source>
          <target state="translated">LoginContext의 전체 인증에 성공하면 (관련된 REQUIRED, REQUISITE, SUFFICIENT 및 OPTIONAL LoginModule이 성공한 경우)이 메소드가 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="bce777a733f30b40b8e120285a1a945882c77d8d" translate="yes" xml:space="preserve">
          <source>This method is called if the overall authentication failed. (the relevant REQUIRED, REQUISITE, SUFFICIENT and OPTIONAL LoginModules did not succeed).</source>
          <target state="translated">이 메서드는 전체 인증이 실패한 경우 호출됩니다. (관련 REQUIRED, REQUISITE, SUFFICIENT 및 OPTIONAL LoginModules가 성공하지 못했습니다).</target>
        </trans-unit>
        <trans-unit id="e73138ad40dfe8f1f035e3713fc82e027cc055f9" translate="yes" xml:space="preserve">
          <source>This method is called in response to a call to &lt;code&gt;repaint&lt;/code&gt;. The canvas is first cleared by filling it with the background color, and then completely redrawn by calling this canvas's &lt;code&gt;paint&lt;/code&gt; method. Note: applications that override this method should either call super.update(g) or incorporate the functionality described above into their own code.</source>
          <target state="translated">이 메서드는 &lt;code&gt;repaint&lt;/code&gt; 호출에 대한 응답으로 호출됩니다 . 캔버스는 먼저 배경색으로 채워서 지운 다음이 캔버스의 &lt;code&gt;paint&lt;/code&gt; 메소드를 호출하여 완전히 다시 그 립니다. 참고 :이 메서드를 재정의하는 응용 프로그램은 super.update (g)를 호출하거나 위에 설명 된 기능을 자체 코드에 통합해야합니다.</target>
        </trans-unit>
        <trans-unit id="1d0e91b2b0ec3e9627bea546c5687154c565e963" translate="yes" xml:space="preserve">
          <source>This method is called internally after the any modified values in the current row have been synchronized with the data source. The current row must be tagged as no longer inserted, deleted or updated.</source>
          <target state="translated">이 메서드는 현재 행의 수정 된 값이 데이터 소스와 동기화 된 후 내부적으로 호출됩니다. 현재 행은 더 이상 삽입, 삭제 또는 업데이트되지 않는 태그가 지정되어야합니다.</target>
        </trans-unit>
        <trans-unit id="40c671b49d4481faf4c6abe49a51cd253275b713" translate="yes" xml:space="preserve">
          <source>This method is called internally by the &lt;code&gt;setCommand&lt;/code&gt; method to clear all of the parameters set for the previous command.</source>
          <target state="translated">이 메소드는 &lt;code&gt;setCommand&lt;/code&gt; 메소드에 의해 내부적으로 호출 되어 이전 명령에 설정된 모든 매개 변수를 지 웁니다.</target>
        </trans-unit>
        <trans-unit id="7425d80641a211430f584e850e5d60ec11180445" translate="yes" xml:space="preserve">
          <source>This method is called on the error handler when an error occurs.</source>
          <target state="translated">이 메서드는 오류가 발생할 때 오류 처리기에서 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0da23fb97961c817b3aa6d45ae24b2b7dde1e6d9" translate="yes" xml:space="preserve">
          <source>This method is called once immediately after instantiating this input method.</source>
          <target state="translated">이 메서드는이 입력 메서드를 인스턴스화 한 직후 한 번 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7c368290535afffaa4821caf905a0e01d5eba0b7" translate="yes" xml:space="preserve">
          <source>This method is called only once when each object is first encountered. All subsequent references to the object will be redirected to the new object.</source>
          <target state="translated">이 메소드는 각 오브젝트가 처음 발견 될 때 한 번만 호출됩니다. 객체에 대한 모든 후속 참조는 새 객체로 리디렉션됩니다.</target>
        </trans-unit>
        <trans-unit id="33de51ae564d5ca1f29b4fe2db0bfe64dafb039f" translate="yes" xml:space="preserve">
          <source>This method is called only once when each object is first encountered. All subsequent references to the object will be redirected to the new object. This method should return the object to be substituted or the original object.</source>
          <target state="translated">이 메소드는 각 오브젝트가 처음 발견 될 때 한 번만 호출됩니다. 객체에 대한 모든 후속 참조는 새 객체로 리디렉션됩니다. 이 메소드는 대체 할 오브젝트 또는 원래 오브젝트를 리턴해야합니다.</target>
        </trans-unit>
        <trans-unit id="f94351efc79c41fe0153823b3f805af002bd870b" translate="yes" xml:space="preserve">
          <source>This method is called repeatedly during a drag and drop operation to allow the developer to configure properties of, and to return the acceptability of transfers; with a return value of &lt;code&gt;true&lt;/code&gt; indicating that the transfer represented by the given &lt;code&gt;TransferSupport&lt;/code&gt; (which contains all of the details of the transfer) is acceptable at the current time, and a value of &lt;code&gt;false&lt;/code&gt; rejecting the transfer.</source>
          <target state="translated">이 메서드는 끌어서 놓기 작업 중에 반복적으로 호출되어 개발자가 속성을 구성하고 전송 허용 여부를 반환 할 수 있도록합니다. 반환 값이 &lt;code&gt;true&lt;/code&gt; 인 것은 주어진 &lt;code&gt;TransferSupport&lt;/code&gt; ( 전송 에 대한 모든 세부 정보 포함)가 나타내는 전송이 현재 시간에 허용됨을 나타내고 &lt;code&gt;false&lt;/code&gt; 값은 전송을 거부 함을 나타냅니다.</target>
        </trans-unit>
        <trans-unit id="a0eed4d586185f4ffd1f91f2ebfffd35acbc4f03" translate="yes" xml:space="preserve">
          <source>This method is called to determine if the resource manager instance represented by the target object is the same as the resouce manager instance represented by the parameter</source>
          <target state="translated">이 메소드는 대상 오브젝트가 나타내는 자원 관리자 인스턴스가 매개 변수가 나타내는 자원 관리자 인스턴스와 동일한 지 판별하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="d1292d3d9de7277667d188cc1d8ef38c4478e139" translate="yes" xml:space="preserve">
          <source>This method is called to submit a form in response to a click on an image -- an &amp;lt;INPUT&amp;gt; form element of type &quot;image&quot;.</source>
          <target state="translated">이 메소드는 &quot;이미지&quot;유형의 &amp;lt;INPUT&amp;gt; 양식 요소 인 이미지 클릭에 대한 응답으로 양식을 제출하기 위해 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="068dab729154aa667cdce9f52f55abeef31ce05c" translate="yes" xml:space="preserve">
          <source>This method is called when a container calls its &lt;code&gt;getMinimumSize&lt;/code&gt; method. Most applications do not call this method directly.</source>
          <target state="translated">이 메소드는 컨테이너가 &lt;code&gt;getMinimumSize&lt;/code&gt; 메소드를 호출 할 때 호출됩니다 . 대부분의 응용 프로그램은이 메서드를 직접 호출하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e7ddcda585d8eb0c34c43752ae7410aca0f78d51" translate="yes" xml:space="preserve">
          <source>This method is called when a recoverable exception has been caught.</source>
          <target state="translated">이 메소드는 복구 가능한 예외가 발생했을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7ab79e96d5e1eb6d413b78b2d871e7dbb2a7ab3a" translate="yes" xml:space="preserve">
          <source>This method is called when information about an image which was previously requested using an asynchronous interface becomes available.</source>
          <target state="translated">이 메서드는 비동기 인터페이스를 사용하여 이전에 요청한 이미지에 대한 정보를 사용할 수있을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="55143e3ff5be3ce84c1386fc6ebba055dbe1ca74" translate="yes" xml:space="preserve">
          <source>This method is called when information about an image which was previously requested using an asynchronous interface becomes available. Asynchronous interfaces are method calls such as getWidth(ImageObserver) and drawImage(img, x, y, ImageObserver) which take an ImageObserver object as an argument. Those methods register the caller as interested either in information about the overall image itself (in the case of getWidth(ImageObserver)) or about an output version of an image (in the case of the drawImage(img, x, y, [w, h,] ImageObserver) call).</source>
          <target state="translated">이 메서드는 비동기 인터페이스를 사용하여 이전에 요청한 이미지에 대한 정보를 사용할 수있을 때 호출됩니다. 비동기 인터페이스는 ImageObserver 개체를 인수로 사용하는 getWidth (ImageObserver) 및 drawImage (img, x, y, ImageObserver)와 같은 메서드 호출입니다. 이러한 메서드는 전체 이미지 자체에 대한 정보 (getWidth (ImageObserver)의 경우) 또는 이미지의 출력 버전 (drawImage (img, x, y, [w, h,] ImageObserver) 호출).</target>
        </trans-unit>
        <trans-unit id="ce2fc127451c7e31c5913cdb0568429a74bf929f" translate="yes" xml:space="preserve">
          <source>This method is called when the contents of the component should be painted; such as when the component is first being shown or is damaged and in need of repair. The clip rectangle in the &lt;code&gt;Graphics&lt;/code&gt; parameter is set to the area which needs to be painted. Subclasses of &lt;code&gt;Component&lt;/code&gt; that override this method need not call &lt;code&gt;super.paint(g)&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 구성 요소의 내용을 칠해야 할 때 호출됩니다. 예를 들어 구성 요소가 처음 표시되거나 손상되어 수리가 필요한 경우. &lt;code&gt;Graphics&lt;/code&gt; 매개 변수 의 클립 사각형은 칠해야하는 영역으로 설정됩니다. 이 메서드를 재정의 하는 &lt;code&gt;Component&lt;/code&gt; 의 하위 클래스는 &lt;code&gt;super.paint(g)&lt;/code&gt; 호출 할 필요가 없습니다 .</target>
        </trans-unit>
        <trans-unit id="341439874d0b5630ceceea69d18dab9b69756dd0" translate="yes" xml:space="preserve">
          <source>This method is called when the frame becomes selected.</source>
          <target state="translated">이 메서드는 프레임이 선택 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="eb828197d426f8558d7c6787dab9471dbf3a206e" translate="yes" xml:space="preserve">
          <source>This method is called when the frame becomes selected. This action is delegated to the desktopManager.</source>
          <target state="translated">이 메서드는 프레임이 선택 될 때 호출됩니다. 이 작업은 desktopManager에 위임됩니다.</target>
        </trans-unit>
        <trans-unit id="8a39e9860a715b851fed3c9e8095a515d83286b3" translate="yes" xml:space="preserve">
          <source>This method is called when the frame is no longer selected.</source>
          <target state="translated">이 메서드는 프레임이 더 이상 선택되지 않을 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="7783c5ae1cb71f6a4b8c3dfaa04c3aab84743d56" translate="yes" xml:space="preserve">
          <source>This method is called when the frame is no longer selected. This action is delegated to the desktopManager.</source>
          <target state="translated">이 메서드는 프레임이 더 이상 선택되지 않을 때 호출됩니다. 이 작업은 desktopManager에 위임됩니다.</target>
        </trans-unit>
        <trans-unit id="46417986305582645648e197e476e93ef6e4c9bc" translate="yes" xml:space="preserve">
          <source>This method is called when the popup menu is canceled</source>
          <target state="translated">이 메서드는 팝업 메뉴가 취소 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0eb89c25e5822dc692763541c6b9178b62709a58" translate="yes" xml:space="preserve">
          <source>This method is called when the spinner's model's state changes.</source>
          <target state="translated">이 메서드는 스피너의 모델 상태가 변경 될 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="bdb7c24844631b153208e5fbdd5c747a5ba3eec2" translate="yes" xml:space="preserve">
          <source>This method is called when the spinner's model's state changes. It sets the &lt;code&gt;value&lt;/code&gt; of the text field to the current value of the spinners model.</source>
          <target state="translated">이 메서드는 스피너의 모델 상태가 변경 될 때 호출됩니다. 그것은 설정 &lt;code&gt;value&lt;/code&gt; 스피 나 모델의 현재 값으로 텍스트 필드의를.</target>
        </trans-unit>
        <trans-unit id="aa63dac936486538d8e5c6256ff60a9716579dfb" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to close the frame.</source>
          <target state="translated">이 메서드는 사용자가 프레임을 닫으려고 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="93aa017dd25b46f737df3a8f3b3cb5b43556349d" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to close the frame. The &lt;code&gt;playCloseSound&lt;/code&gt; Action is fired. This action is delegated to the desktopManager.</source>
          <target state="translated">이 메서드는 사용자가 프레임을 닫으려고 할 때 호출됩니다. &lt;code&gt;playCloseSound&lt;/code&gt; 조치 발생합니다. 이 작업은 desktopManager에 위임됩니다.</target>
        </trans-unit>
        <trans-unit id="4688052964dd5ada15f085cf02409aeb6d35e7c4" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to deiconify the frame.</source>
          <target state="translated">이 메서드는 사용자가 프레임을 아이콘 화 해제하려고 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b1e3dd5b85dfe123a3cb6c5689eb818cdc8f3ed2" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to deiconify the frame. The &lt;code&gt;playRestoreUpSound&lt;/code&gt; Action is fired. This action is delegated to the desktopManager.</source>
          <target state="translated">이 메서드는 사용자가 프레임을 아이콘 화 해제하려고 할 때 호출됩니다. &lt;code&gt;playRestoreUpSound&lt;/code&gt; 조치 발생합니다. 이 작업은 desktopManager에 위임됩니다.</target>
        </trans-unit>
        <trans-unit id="5917f54542bf2e9b862425b4cbfc5cab686b7c34" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to iconify the frame.</source>
          <target state="translated">이 메서드는 사용자가 프레임을 아이콘 화하려고 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="ccb80988993d08a7dc14bd540a8a82635affec54" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to iconify the frame. The &lt;code&gt;playMinimizeSound&lt;/code&gt; Action is fired. This action is delegated to the desktopManager.</source>
          <target state="translated">이 메서드는 사용자가 프레임을 아이콘 화하려고 할 때 호출됩니다. &lt;code&gt;playMinimizeSound&lt;/code&gt; 조치 발생합니다. 이 작업은 desktopManager에 위임됩니다.</target>
        </trans-unit>
        <trans-unit id="85c067791e6333fa32d7ff14282adcefa288da2a" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to maximize the frame.</source>
          <target state="translated">이 메서드는 사용자가 프레임을 최대화하려고 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="b762b368a2f813892990a6021afdfccf7cfd521b" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to maximize the frame. The &lt;code&gt;playMaximizeSound&lt;/code&gt; Action is fired. This action is delegated to the desktopManager.</source>
          <target state="translated">이 메서드는 사용자가 프레임을 최대화하려고 할 때 호출됩니다. &lt;code&gt;playMaximizeSound&lt;/code&gt; 조치 발생합니다. 이 작업은 desktopManager에 위임됩니다.</target>
        </trans-unit>
        <trans-unit id="f2f32ddc0861e8f7d9021355838abba76eb6d68c" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to minimize the frame.</source>
          <target state="translated">이 메소드는 사용자가 프레임을 최소화하고자 할 때 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="0aae1ad268f13724c9ef54fe46beb90bfbfc63bd" translate="yes" xml:space="preserve">
          <source>This method is called when the user wants to minimize the frame. The &lt;code&gt;playRestoreDownSound&lt;/code&gt; Action is fired. This action is delegated to the desktopManager.</source>
          <target state="translated">이 메소드는 사용자가 프레임을 최소화하고자 할 때 호출됩니다. &lt;code&gt;playRestoreDownSound&lt;/code&gt; 액션이 발생합니다. 이 작업은 desktopManager에 위임됩니다.</target>
        </trans-unit>
        <trans-unit id="6527368ca8b52c1aefd2d22426b2413726f13956" translate="yes" xml:space="preserve">
          <source>This method is called whenever an event occurs of the type for which the &lt;code&gt; EventListener&lt;/code&gt; interface was registered.</source>
          <target state="translated">이 메서드는 &lt;code&gt; EventListener&lt;/code&gt; 인터페이스가 등록 된 유형의 이벤트가 발생할 때마다 호출 됩니다.</target>
        </trans-unit>
        <trans-unit id="39da71e95177699e92890004d5c76006e0584aaa" translate="yes" xml:space="preserve">
          <source>This method is called whenever the node for which this handler is registered is imported or cloned.</source>
          <target state="translated">이 메소드는이 핸들러가 등록 된 노드를 가져 오거나 복제 할 때마다 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="4d6be72c0a0bc2f90a1ce5f903c04d4ec355dfb0" translate="yes" xml:space="preserve">
          <source>This method is called whenever the observed object is changed.</source>
          <target state="translated">이 메서드는 관찰 된 객체가 변경 될 때마다 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="9cca6ab3d4da2b086f82ba0002c0396f03a4b119" translate="yes" xml:space="preserve">
          <source>This method is called whenever the observed object is changed. An application calls an &lt;code&gt;Observable&lt;/code&gt; object's &lt;code&gt;notifyObservers&lt;/code&gt; method to have all the object's observers notified of the change.</source>
          <target state="translated">이 메소드는 관찰 된 객체가 변경 될 때마다 호출됩니다. 응용 프로그램은 &lt;code&gt;Observable&lt;/code&gt; 객체의 &lt;code&gt;notifyObservers&lt;/code&gt; 메서드를 호출하여 모든 객체의 관찰자에게 변경 사항을 알립니다.</target>
        </trans-unit>
        <trans-unit id="fffb1c56a63b52b2e43abc2fb4153ff4c28cc913" translate="yes" xml:space="preserve">
          <source>This method is caller sensitive, which means that it may return different values to different callers.</source>
          <target state="translated">이 방법은 호출자에 민감하므로 다른 호출자에게 다른 값을 반환 할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="42cb73f168bcaf88d12264f0507782007199aee0" translate="yes" xml:space="preserve">
          <source>This method is closely related to &lt;a href=&quot;#foldArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)&quot;&gt;&lt;code&gt;foldArguments(MethodHandle, MethodHandle)&lt;/code&gt;&lt;/a&gt;, but allows to control the position in the parameter list at which folding takes place. The argument controlling this, &lt;code&gt;pos&lt;/code&gt;, is a zero-based index. The aforementioned method &lt;a href=&quot;#foldArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)&quot;&gt;&lt;code&gt;foldArguments(MethodHandle, MethodHandle)&lt;/code&gt;&lt;/a&gt; assumes position 0.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#foldArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)&quot;&gt; &lt;code&gt;foldArguments(MethodHandle, MethodHandle)&lt;/code&gt; &lt;/a&gt; 과 밀접한 관련이 있지만 매개 변수 목록에서 접기가 발생하는 위치를 제어 할 수 있습니다. 이를 제어하는 ​​인수 &lt;code&gt;pos&lt;/code&gt; 는 0부터 시작하는 인덱스입니다. 앞서 언급 한 &lt;a href=&quot;#foldArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)&quot;&gt; &lt;code&gt;foldArguments(MethodHandle, MethodHandle)&lt;/code&gt; &lt;/a&gt; 메서드 는 위치 0을 가정합니다.</target>
        </trans-unit>
        <trans-unit id="9e1c5173e7f3fa222c06c11b3cc371c7b3d31b73" translate="yes" xml:space="preserve">
          <source>This method is defined as:</source>
          <target state="translated">이 방법은 다음과 같이 정의됩니다.</target>
        </trans-unit>
        <trans-unit id="ae19898917349a14a11291ce84b8e211a3d13306" translate="yes" xml:space="preserve">
          <source>This method is defined for compatibility with &lt;code&gt;java.util.Random&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;java.util.Random&lt;/code&gt; 과의 호환성을 위해 정의되었습니다. .</target>
        </trans-unit>
        <trans-unit id="bf2642771743581deaaba7d7e735661a814734f8" translate="yes" xml:space="preserve">
          <source>This method is defined so that performance-sensitive Java code can allocate direct buffers with the same byte order as the hardware. Native code libraries are often more efficient when such buffers are used.</source>
          <target state="translated">이 방법은 성능에 민감한 Java 코드가 하드웨어와 동일한 바이트 순서로 직접 버퍼를 할당 할 수 있도록 정의됩니다. 이러한 버퍼를 사용하면 기본 코드 라이브러리가 더 효율적입니다.</target>
        </trans-unit>
        <trans-unit id="aa45c2b02a519a2f2aaaeb85a745efe28f883b9c" translate="yes" xml:space="preserve">
          <source>This method is defined so that the &lt;code&gt;String&lt;/code&gt; class can implement the &lt;a href=&quot;charsequence&quot;&gt;&lt;code&gt;CharSequence&lt;/code&gt;&lt;/a&gt; interface.</source>
          <target state="translated">이 메소드는 &lt;code&gt;String&lt;/code&gt; 클래스가 &lt;a href=&quot;charsequence&quot;&gt; &lt;code&gt;CharSequence&lt;/code&gt; 를&lt;/a&gt; 구현할 수 있도록 정의됩니다. 인터페이스를 됩니다.</target>
        </trans-unit>
        <trans-unit id="804a666badc3dff32d376a89cfcffa549b4726d9" translate="yes" xml:space="preserve">
          <source>This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt; values do not have a date component.</source>
          <target state="translated">이 메서드는 더 이상 사용되지 않으며 SQL &lt;code&gt;TIME&lt;/code&gt; 값에 날짜 구성 요소가 없기 때문에 사용해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="9620d2038291d98dd6c4e199b3c3d0010bbc195c" translate="yes" xml:space="preserve">
          <source>This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt; values do not have a day component.</source>
          <target state="translated">이 메서드는 더 이상 사용되지 않으며 SQL &lt;code&gt;TIME&lt;/code&gt; 값에 요일 구성 요소가 없기 때문에 사용해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="f6a5e9248323ee689466d0987f99636e5839c9e9" translate="yes" xml:space="preserve">
          <source>This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt; values do not have a month component.</source>
          <target state="translated">이 메서드는 더 이상 사용되지 않으며 SQL &lt;code&gt;TIME&lt;/code&gt; 값에 월 구성 요소가 없기 때문에 사용해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="5ff10230e70acbdfee03d02e5d3fbb422e3cd1ae" translate="yes" xml:space="preserve">
          <source>This method is deprecated and should not be used because SQL &lt;code&gt;TIME&lt;/code&gt; values do not have a year component.</source>
          <target state="translated">이 메서드는 더 이상 사용되지 않으며 SQL &lt;code&gt;TIME&lt;/code&gt; 값에 연도 구성 요소가 없으므로 사용해서는 안됩니다 .</target>
        </trans-unit>
        <trans-unit id="d9bd70deab6c73de961348bb8c9bc5b416d9eb44" translate="yes" xml:space="preserve">
          <source>This method is deprecated and should not be used because SQL Date values do not have a time component.</source>
          <target state="translated">이 메서드는 더 이상 사용되지 않으며 SQL 날짜 값에 시간 구성 요소가 없으므로 사용해서는 안됩니다.</target>
        </trans-unit>
        <trans-unit id="aa990b57ffc3bea2a543ffe858e6b2703dfc0c5a" translate="yes" xml:space="preserve">
          <source>This method is deprecated because it supports only static stubs.</source>
          <target state="translated">이 메서드는 정적 스텁 만 지원하므로 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="89d1b53f1f692a3235f7b69db22ad00244a5c069" translate="yes" xml:space="preserve">
          <source>This method is deprecated because it supports only static stubs. Use &lt;a href=&quot;#exportObject(java.rmi.Remote,int)&quot;&gt;&lt;code&gt;exportObject(Remote, port)&lt;/code&gt;&lt;/a&gt; or &lt;a href=&quot;#exportObject(java.rmi.Remote,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt;&lt;code&gt;exportObject(Remote, port, csf, ssf)&lt;/code&gt;&lt;/a&gt; instead.</source>
          <target state="translated">이 메서드는 정적 스텁 만 지원하므로 더 이상 사용되지 않습니다. 대신 &lt;a href=&quot;#exportObject(java.rmi.Remote,int)&quot;&gt; &lt;code&gt;exportObject(Remote, port)&lt;/code&gt; &lt;/a&gt; 또는 &lt;a href=&quot;#exportObject(java.rmi.Remote,int,java.rmi.server.RMIClientSocketFactory,java.rmi.server.RMIServerSocketFactory)&quot;&gt; &lt;code&gt;exportObject(Remote, port, csf, ssf)&lt;/code&gt; &lt;/a&gt; 사용하십시오.</target>
        </trans-unit>
        <trans-unit id="341bc6254eb2574735cca4401ef4c829c572bffc" translate="yes" xml:space="preserve">
          <source>This method is deprecated because its name hints that it checks if the reflected object is accessible when it actually indicates if the checks for Java language access control are suppressed.</source>
          <target state="translated">이 메소드는 Java 언어 액세스 제어에 대한 검사가 억제되는지 여부를 실제로 표시 할 때 해당 이름이 반영된 오브젝트에 액세스 할 수 있는지 여부를 확인하기 때문에 더 이상 사용되지 않습니다.</target>
        </trans-unit>
        <trans-unit id="c4ff47686483784f448f5aefdcddece73c0c06c5" translate="yes" xml:space="preserve">
          <source>This method is deprecated because its name hints that it checks if the reflected object is accessible when it actually indicates if the checks for Java language access control are suppressed. This method may return &lt;code&gt;false&lt;/code&gt; on a reflected object that is accessible to the caller. To test if this reflected object is accessible, it should use &lt;a href=&quot;#canAccess(java.lang.Object)&quot;&gt;&lt;code&gt;canAccess(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 Java 언어 액세스 제어에 대한 검사가 억제되는지 여부를 실제로 표시 할 때 해당 이름이 반영된 오브젝트에 액세스 할 수 있는지 여부를 확인하기 때문에 더 이상 사용되지 않습니다. 이 메서드는 호출자가 액세스 할 수있는 반사 된 개체에 대해 &lt;code&gt;false&lt;/code&gt; 를 반환 할 수 있습니다 . 이 반사 된 객체에 액세스 할 수 있는지 테스트하려면 &lt;a href=&quot;#canAccess(java.lang.Object)&quot;&gt; &lt;code&gt;canAccess(Object)&lt;/code&gt; &lt;/a&gt; 사용해야합니다 .</target>
        </trans-unit>
        <trans-unit id="b3abe168aefda8d09df2cff25ccabb9b1022fd8c" translate="yes" xml:space="preserve">
          <source>This method is deprecated; the method &lt;code&gt;getCharacterStream&lt;/code&gt; should be used in its place.</source>
          <target state="translated">이 메소드는 더 이상 사용되지 않습니다. &lt;code&gt;getCharacterStream&lt;/code&gt; 메소드를 대신 사용해야합니다.</target>
        </trans-unit>
        <trans-unit id="fe5b6f57087b04e0bc121233831d03f60237e3e6" translate="yes" xml:space="preserve">
          <source>This method is designed for troubleshooting use, but not for synchronization control. It might be an expensive operation.</source>
          <target state="translated">이 방법은 문제 해결 용도로 설계되었지만 동기화 제어에는 적합하지 않습니다. 비용이 많이 드는 작업 일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="5b65be200e753f327578c45c2734dd4d51b4756f" translate="yes" xml:space="preserve">
          <source>This method is designed for use in monitoring system memory usage and detecting low memory condition.</source>
          <target state="translated">이 방법은 시스템 메모리 사용량 모니터링 및 메모리 부족 상태 감지에 사용하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="0d3f0f88baf42118de72db535c5af7f9c932197f" translate="yes" xml:space="preserve">
          <source>This method is designed to allow a program to assert that the current thread already holds a specified lock:</source>
          <target state="translated">이 메소드는 프로그램이 현재 스레드가 이미 지정된 잠금을 보유하고 있다고 주장하도록 설계되었습니다.</target>
        </trans-unit>
        <trans-unit id="243daba8ccba3dd657d68ba98ae805db34f22e88" translate="yes" xml:space="preserve">
          <source>This method is designed to be invoked by &lt;em&gt;other&lt;/em&gt; tasks. To terminate the current task, you can just return or throw an unchecked exception from its computation method, or invoke &lt;a href=&quot;#completeExceptionally(java.lang.Throwable)&quot;&gt;&lt;code&gt;completeExceptionally(Throwable)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;em&gt;다른&lt;/em&gt; 작업에서 호출하도록 설계되었습니다 . 현재 작업을 종료하려면 계산 메서드에서 확인되지 않은 예외를 반환하거나 throw하거나 &lt;a href=&quot;#completeExceptionally(java.lang.Throwable)&quot;&gt; &lt;code&gt;completeExceptionally(Throwable)&lt;/code&gt; &lt;/a&gt; 호출하면 됩니다 .</target>
        </trans-unit>
        <trans-unit id="a685d5c3b4c812a26f26b2438180d21020a9a02c" translate="yes" xml:space="preserve">
          <source>This method is designed to be invoked by &lt;em&gt;other&lt;/em&gt; tasks. To terminate the current task, you can just return or throw an unchecked exception from its computation method, or invoke &lt;a href=&quot;forkjointask#completeExceptionally-java.lang.Throwable-&quot;&gt;&lt;code&gt;completeExceptionally(Throwable)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;em&gt;다른&lt;/em&gt; 작업에 의해 호출되도록 설계되었습니다 . 현재 작업을 종료하려면 계산 방법에서 확인되지 않은 예외를 반환하거나 throw하거나 &lt;a href=&quot;forkjointask#completeExceptionally-java.lang.Throwable-&quot;&gt; &lt;code&gt;completeExceptionally(Throwable)&lt;/code&gt; &lt;/a&gt; 호출하면 됩니다 .</target>
        </trans-unit>
        <trans-unit id="68106609b6f6ccd0de9ffcdd406946b47ca7185a" translate="yes" xml:space="preserve">
          <source>This method is designed to be used by a fair synchronizer to avoid &lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;barging&lt;/a&gt;. Such a synchronizer's &lt;a href=&quot;#tryAcquire(int)&quot;&gt;&lt;code&gt;tryAcquire(int)&lt;/code&gt;&lt;/a&gt; method should return &lt;code&gt;false&lt;/code&gt;, and its &lt;a href=&quot;#tryAcquireShared(int)&quot;&gt;&lt;code&gt;tryAcquireShared(int)&lt;/code&gt;&lt;/a&gt; method should return a negative value, if this method returns &lt;code&gt;true&lt;/code&gt; (unless this is a reentrant acquire). For example, the &lt;code&gt;
 tryAcquire&lt;/code&gt; method for a fair, reentrant, exclusive mode synchronizer might look like this:</source>
          <target state="translated">이 방법은 공정한 동기화 장치가 &lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;끼어 들지&lt;/a&gt; 않도록 사용하도록 설계되었습니다 . 이러한 동기의 &lt;a href=&quot;#tryAcquire(int)&quot;&gt; &lt;code&gt;tryAcquire(int)&lt;/code&gt; &lt;/a&gt; 방법은 반환해야 &lt;code&gt;false&lt;/code&gt; , 그 &lt;a href=&quot;#tryAcquireShared(int)&quot;&gt; &lt;code&gt;tryAcquireShared(int)&lt;/code&gt; &lt;/a&gt; , 방법은 음의 값을 반환해야하는 경우이 방법을 반환 &lt;code&gt;true&lt;/code&gt; (이 재진입 획득하지 않는 한). 예를 들어 공정, 재진입, 배타적 모드 동기화 &lt;code&gt; tryAcquire&lt;/code&gt; 대한 tryAcquire 메서드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="4a31c2ee578e14493c9d0a18aafc85e4cd3407bd" translate="yes" xml:space="preserve">
          <source>This method is designed to be used by a fair synchronizer to avoid &lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;barging&lt;/a&gt;. Such a synchronizer's &lt;a href=&quot;#tryAcquire(long)&quot;&gt;&lt;code&gt;tryAcquire(long)&lt;/code&gt;&lt;/a&gt; method should return &lt;code&gt;false&lt;/code&gt;, and its &lt;a href=&quot;#tryAcquireShared(long)&quot;&gt;&lt;code&gt;tryAcquireShared(long)&lt;/code&gt;&lt;/a&gt; method should return a negative value, if this method returns &lt;code&gt;true&lt;/code&gt; (unless this is a reentrant acquire). For example, the &lt;code&gt;
 tryAcquire&lt;/code&gt; method for a fair, reentrant, exclusive mode synchronizer might look like this:</source>
          <target state="translated">이 방법은 공정한 동기화 장치가 &lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;끼어 들지&lt;/a&gt; 않도록 사용하도록 설계되었습니다 . 이러한 동기의 &lt;a href=&quot;#tryAcquire(long)&quot;&gt; &lt;code&gt;tryAcquire(long)&lt;/code&gt; &lt;/a&gt; 방법은 반환해야 &lt;code&gt;false&lt;/code&gt; , 그 &lt;a href=&quot;#tryAcquireShared(long)&quot;&gt; &lt;code&gt;tryAcquireShared(long)&lt;/code&gt; &lt;/a&gt; , 방법은 음의 값을 반환해야하는 경우이 방법을 반환 &lt;code&gt;true&lt;/code&gt; (이 재진입 획득하지 않는 한). 예를 들어 공정, 재진입, 배타적 모드 동기화 &lt;code&gt; tryAcquire&lt;/code&gt; 대한 tryAcquire 메서드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="74ee81fb970e8086cdb6cbd89cb3cb795e9c4467" translate="yes" xml:space="preserve">
          <source>This method is designed to be used by a fair synchronizer to avoid &lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;barging&lt;/a&gt;. Such a synchronizer's &lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquire-long-&quot;&gt;&lt;code&gt;tryAcquire(long)&lt;/code&gt;&lt;/a&gt; method should return &lt;code&gt;false&lt;/code&gt;, and its &lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquireShared-long-&quot;&gt;&lt;code&gt;tryAcquireShared(long)&lt;/code&gt;&lt;/a&gt; method should return a negative value, if this method returns &lt;code&gt;true&lt;/code&gt; (unless this is a reentrant acquire). For example, the &lt;code&gt;tryAcquire&lt;/code&gt; method for a fair, reentrant, exclusive mode synchronizer might look like this:</source>
          <target state="translated">이 방법은 피하기 위해 공정한 동기에 의해 사용할 수 있도록 설계 &lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;화물 운반선을&lt;/a&gt; . 이러한 동기의 &lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquire-long-&quot;&gt; &lt;code&gt;tryAcquire(long)&lt;/code&gt; &lt;/a&gt; 방법은 반환해야 &lt;code&gt;false&lt;/code&gt; , 그 &lt;a href=&quot;abstractqueuedlongsynchronizer#tryAcquireShared-long-&quot;&gt; &lt;code&gt;tryAcquireShared(long)&lt;/code&gt; &lt;/a&gt; , 방법은 음의 값을 반환해야하는 경우이 방법을 반환 &lt;code&gt;true&lt;/code&gt; (이 재진입 획득하지 않는 한). 예를 들어, 공정하고 재진입 가능한 독점 모드 동기화 기 의 &lt;code&gt;tryAcquire&lt;/code&gt; 메소드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b59e8c2df3bab79c2fe16e6644745f396fb521c8" translate="yes" xml:space="preserve">
          <source>This method is designed to be used by a fair synchronizer to avoid &lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;barging&lt;/a&gt;. Such a synchronizer's &lt;a href=&quot;abstractqueuedsynchronizer#tryAcquire-int-&quot;&gt;&lt;code&gt;tryAcquire(int)&lt;/code&gt;&lt;/a&gt; method should return &lt;code&gt;false&lt;/code&gt;, and its &lt;a href=&quot;abstractqueuedsynchronizer#tryAcquireShared-int-&quot;&gt;&lt;code&gt;tryAcquireShared(int)&lt;/code&gt;&lt;/a&gt; method should return a negative value, if this method returns &lt;code&gt;true&lt;/code&gt; (unless this is a reentrant acquire). For example, the &lt;code&gt;tryAcquire&lt;/code&gt; method for a fair, reentrant, exclusive mode synchronizer might look like this:</source>
          <target state="translated">이 방법은 피하기 위해 공정한 동기에 의해 사용할 수 있도록 설계 &lt;a href=&quot;abstractqueuedsynchronizer#barging&quot;&gt;화물 운반선을&lt;/a&gt; . 이러한 동기의 &lt;a href=&quot;abstractqueuedsynchronizer#tryAcquire-int-&quot;&gt; &lt;code&gt;tryAcquire(int)&lt;/code&gt; &lt;/a&gt; 방법은 반환해야 &lt;code&gt;false&lt;/code&gt; , 그 &lt;a href=&quot;abstractqueuedsynchronizer#tryAcquireShared-int-&quot;&gt; &lt;code&gt;tryAcquireShared(int)&lt;/code&gt; &lt;/a&gt; , 방법은 음의 값을 반환해야하는 경우이 방법을 반환 &lt;code&gt;true&lt;/code&gt; (이 재진입 획득하지 않는 한). 예를 들어, 공정하고 재진입 가능한 독점 모드 동기화 기 의 &lt;code&gt;tryAcquire&lt;/code&gt; 메소드는 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="fccbd3e6989670e486a81b6121525638bef59a71" translate="yes" xml:space="preserve">
          <source>This method is designed to provide a hint about the system load and may be queried frequently. The load average may be unavailable on some platform where it is expensive to implement this method.</source>
          <target state="translated">이 방법은 시스템로드에 대한 힌트를 제공하도록 설계되었으며 자주 쿼리 될 수 있습니다. 이 방법을 구현하는 데 비용이 많이 드는 일부 플랫폼에서는로드 평균을 사용하지 못할 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="ec2901bd0d41cba4655d9eb80b10a539ac8b2b79" translate="yes" xml:space="preserve">
          <source>This method is empty, because all painting is done by &lt;a href=&quot;#paint(java.awt.Graphics)&quot;&gt;&lt;code&gt;paint(Graphics)&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;plaf/componentui#update(java.awt.Graphics,javax.swing.JComponent)&quot;&gt;&lt;code&gt;ComponentUI.update(Graphics, JComponent)&lt;/code&gt;&lt;/a&gt; methods</source>
          <target state="translated">모든 페인팅이 &lt;a href=&quot;#paint(java.awt.Graphics)&quot;&gt; &lt;code&gt;paint(Graphics)&lt;/code&gt; &lt;/a&gt; 및 &lt;a href=&quot;plaf/componentui#update(java.awt.Graphics,javax.swing.JComponent)&quot;&gt; &lt;code&gt;ComponentUI.update(Graphics, JComponent)&lt;/code&gt; &lt;/a&gt; 메소드에 의해 수행되기 때문에이 메소드는 비어 있습니다.</target>
        </trans-unit>
        <trans-unit id="96f36f108ff8beab249af70da0aac7e6ec0abfce" translate="yes" xml:space="preserve">
          <source>This method is equivalent to</source>
          <target state="translated">이 방법은</target>
        </trans-unit>
        <trans-unit id="e630b5b2fd1df8564281b7fa74274a2a88a347fa" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#add(E)&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#add(E)&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b83998f084dce168c614587a74226ad9a07d3052" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#addFirst(E)&quot;&gt;&lt;code&gt;addFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#addFirst(E)&quot;&gt; &lt;code&gt;addFirst(E)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="34b2e65f06583c6220e77431d7b6204917225fd4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#addFirst(E)&quot;&gt;&lt;code&gt;addFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#addFirst(E)&quot;&gt; &lt;code&gt;addFirst&lt;/code&gt; &lt;/a&gt; 와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="f28341ca05137434ee47b9e658b6772d0701966e" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#addLast(E)&quot;&gt;&lt;code&gt;addLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#addLast(E)&quot;&gt; &lt;code&gt;addLast(E)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="5bd4aa74fb0950d987e34634b648e9c344495e1b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#addLast(E)&quot;&gt;&lt;code&gt;addLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#addLast(E)&quot;&gt; &lt;code&gt;addLast&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b7bd9952d5cb6047716e24422d6e16f568f64a04" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#connect(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt;&lt;code&gt;connect(serviceURL, null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#connect(javax.management.remote.JMXServiceURL,java.util.Map)&quot;&gt; &lt;code&gt;connect(serviceURL, null)&lt;/code&gt; &lt;/a&gt; 과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="516a91a7e7509fc255e4cf9be5afac369f2dc992" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#createMBean(java.lang.String,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;createMBean(className, name, (Object[]) null, (String[])
 null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#createMBean(java.lang.String,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;createMBean(className, name, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="2ba3e6028997a7c2d1ab6288f635ec4225511ecf" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#createMBean(java.lang.String,javax.management.ObjectName,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;createMBean(className, name, loaderName, (Object[]) null,
 (String[]) null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#createMBean(java.lang.String,javax.management.ObjectName,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;createMBean(className, name, loaderName, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="772363ff7be3272071362acf193d504d35a9f8f3" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#getFirst()&quot;&gt;&lt;code&gt;getFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#getFirst()&quot;&gt; &lt;code&gt;getFirst()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="ff9a732b6a86f2be55c61f9e0940b85f41c66580" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#getFirst()&quot;&gt;&lt;code&gt;getFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#getFirst()&quot;&gt; &lt;code&gt;getFirst&lt;/code&gt; &lt;/a&gt; 와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="78cc66d9dd92c49e796e8df7ef025d4a6c92aece" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#instantiate(java.lang.String,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;instantiate(className, (Object[]) null, (String[]) null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#instantiate(java.lang.String,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;instantiate(className, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="62584ee86ca75378e737c320d00e1154395f4812" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#instantiate(java.lang.String,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;instantiate(className, loaderName, (Object[]) null, (String[])
 null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#instantiate(java.lang.String,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;instantiate(className, loaderName, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="f58507639a6eaaba6098da258d9b788ad92ad392" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class,boolean)&quot;&gt;&lt;code&gt;newMBeanProxy(connection, objectName, interfaceClass,
 false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#newMBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class,boolean)&quot;&gt; &lt;code&gt;newMBeanProxy(connection, objectName, interfaceClass, false)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="f5c15a7fd81fac47e3a418d6112b261809f0d647" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class,boolean)&quot;&gt;&lt;code&gt;newMXBeanProxy(connection, objectName, interfaceClass,
 false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#newMXBeanProxy(javax.management.MBeanServerConnection,javax.management.ObjectName,java.lang.Class,boolean)&quot;&gt; &lt;code&gt;newMXBeanProxy(connection, objectName, interfaceClass, false)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="3f7c13586198e8117d646fc3e77781e59639414e" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#offerLast(E)&quot;&gt;&lt;code&gt;offerLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#offerLast(E)&quot;&gt; &lt;code&gt;offerLast(E)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="4ecc606006b09bb909777c6ed4ac080720811bd5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#offerLast(E)&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#offerLast(E)&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="9595b55a29fcdfcf6ad885adb77fa91c406ce450" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#offerLast(E,long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#offerLast(E,long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="7d05db7cc106ddc05bbe72ff87732228cbead48b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#peekFirst()&quot;&gt;&lt;code&gt;peekFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#peekFirst()&quot;&gt; &lt;code&gt;peekFirst()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="8bd50e852a3dd8faa0150137f85c10a14b82b830" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">이 메서드는 양이 부정 된 &lt;a href=&quot;#plus(long,java.time.temporal.TemporalUnit)&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 와 같습니다. 덧셈과 뺄셈이 어떻게 작동하는지에 대한 자세한 설명은 해당 방법을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fa7b874f63cf9546d63d1326c99d9e2286451ff0" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#pollFirst()&quot;&gt;&lt;code&gt;pollFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#pollFirst()&quot;&gt; &lt;code&gt;pollFirst()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="d6fbf06d636489465e127fce2163ced1aacebad7" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#pollFirst(long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;pollFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#pollFirst(long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;pollFirst&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="3303bd9f3c991005ee09dd868680c105fb6645f8" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#putLast(E)&quot;&gt;&lt;code&gt;putLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#putLast(E)&quot;&gt; &lt;code&gt;putLast&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="9b079083ea9c6a74bfc6dd97a720e31172be961a" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#removeFirst()&quot;&gt;&lt;code&gt;removeFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#removeFirst()&quot;&gt; &lt;code&gt;removeFirst()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="25719809c3327998e7044cbc909b7b1dcb19e326" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#removeFirst()&quot;&gt;&lt;code&gt;removeFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#removeFirst()&quot;&gt; &lt;code&gt;removeFirst&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="48f69676f4cfdbda72c26f14121eb7aef7aca95d" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#removeFirstOccurrence(java.lang.Object)&quot;&gt;&lt;code&gt;removeFirstOccurrence(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#removeFirstOccurrence(java.lang.Object)&quot;&gt; &lt;code&gt;removeFirstOccurrence(Object)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="f9a9b0b6282161e8020ebf2d63cc9b16c6a97862" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#removeFirstOccurrence(java.lang.Object)&quot;&gt;&lt;code&gt;removeFirstOccurrence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#removeFirstOccurrence(java.lang.Object)&quot;&gt; &lt;code&gt;removeFirstOccurrence&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="cff13b442d4d5a3da99b1ebab2a49f2eb6818f7b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#takeFirst()&quot;&gt;&lt;code&gt;takeFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#takeFirst()&quot;&gt; &lt;code&gt;takeFirst&lt;/code&gt; &lt;/a&gt; 와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="31475f1d5ca622ab63f23c690428ec1a958a9f08" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#write(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;this.write(buf, 0, buf.length)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#write(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;this.write(buf, 0, buf.length)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="e18a8e0db44f349b4c69b924c2600a8eae4ffcfc" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;#write(byte%5B%5D,int,int)&quot;&gt;&lt;code&gt;write(b, 0, b.length)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#write(byte%5B%5D,int,int)&quot;&gt; &lt;code&gt;write(b, 0, b.length)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="92d3caffdfc1f4211fba19e6ea46efe6a653a6a2" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../../../java.base/java/lang/reflect/proxy#newProxyInstance(java.lang.ClassLoader,java.lang.Class%5B%5D,java.lang.reflect.InvocationHandler)&quot;&gt;&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(interfaceClass.getClassLoader(),
 interfaces, handler)&lt;/code&gt;. Here &lt;code&gt;handler&lt;/code&gt; is the result of &lt;a href=&quot;#%3Cinit%3E(javax.management.MBeanServerConnection,javax.management.ObjectName,boolean)&quot;&gt;&lt;code&gt;new
 MBeanServerInvocationHandler(connection, objectName)&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;interfaces&lt;/code&gt; is an array that has one element if &lt;code&gt;notificationBroadcaster&lt;/code&gt; is false and two if it is true. The first element of &lt;code&gt;interfaces&lt;/code&gt; is &lt;code&gt;interfaceClass&lt;/code&gt; and the second, if present, is &lt;code&gt;NotificationEmitter.class&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../../../java.base/java/lang/reflect/proxy#newProxyInstance(java.lang.ClassLoader,java.lang.Class%5B%5D,java.lang.reflect.InvocationHandler)&quot;&gt; &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(interfaceClass.getClassLoader(), interfaces, handler)&lt;/code&gt; 합니다. 여기서 &lt;code&gt;handler&lt;/code&gt; 는 &lt;a href=&quot;#%3Cinit%3E(javax.management.MBeanServerConnection,javax.management.ObjectName,boolean)&quot;&gt; &lt;code&gt;new MBeanServerInvocationHandler(connection, objectName)&lt;/code&gt; &lt;/a&gt; 의 결과 이고 &lt;code&gt;interfaces&lt;/code&gt; 는 &lt;code&gt;notificationBroadcaster&lt;/code&gt; 가 거짓 이면 하나 , 참이면 두 요소를 갖는 배열입니다 . 첫 번째 요소 &lt;code&gt;interfaces&lt;/code&gt; 이다 &lt;code&gt;interfaceClass&lt;/code&gt; 및 제 존재하는 경우이다 &lt;code&gt;NotificationEmitter.class&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="59627a0a952b2c96182d0298341a95db1edd5251" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../../java/lang/reflect/proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt;&lt;code&gt;Proxy.newProxyInstance&lt;/code&gt;&lt;/a&gt;&lt;code&gt;(interfaceClass.getClassLoader(),
 interfaces, handler)&lt;/code&gt;. Here &lt;code&gt;handler&lt;/code&gt; is the result of &lt;a href=&quot;mbeanserverinvocationhandler#MBeanServerInvocationHandler-javax.management.MBeanServerConnection-javax.management.ObjectName-boolean-&quot;&gt;&lt;code&gt;new
 MBeanServerInvocationHandler(connection, objectName)&lt;/code&gt;&lt;/a&gt;, and &lt;code&gt;interfaces&lt;/code&gt; is an array that has one element if &lt;code&gt;notificationBroadcaster&lt;/code&gt; is false and two if it is true. The first element of &lt;code&gt;interfaces&lt;/code&gt; is &lt;code&gt;interfaceClass&lt;/code&gt; and the second, if present, is &lt;code&gt;NotificationEmitter.class&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../../java/lang/reflect/proxy#newProxyInstance-java.lang.ClassLoader-java.lang.Class:A-java.lang.reflect.InvocationHandler-&quot;&gt; &lt;code&gt;Proxy.newProxyInstance&lt;/code&gt; &lt;/a&gt; &lt;code&gt;(interfaceClass.getClassLoader(), interfaces, handler)&lt;/code&gt; 합니다. 여기서 &lt;code&gt;handler&lt;/code&gt; 는 &lt;a href=&quot;mbeanserverinvocationhandler#MBeanServerInvocationHandler-javax.management.MBeanServerConnection-javax.management.ObjectName-boolean-&quot;&gt; &lt;code&gt;new MBeanServerInvocationHandler(connection, objectName)&lt;/code&gt; &lt;/a&gt; 의 결과이며 , &lt;code&gt;interfaces&lt;/code&gt; 는 &lt;code&gt;notificationBroadcaster&lt;/code&gt; 가 false이면 true이고, 2이면 true 인 요소를 갖는 배열입니다 . 첫 번째 요소 &lt;code&gt;interfaces&lt;/code&gt; 이다 &lt;code&gt;interfaceClass&lt;/code&gt; 및 제 존재하는 경우이다 &lt;code&gt;NotificationEmitter.class&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="210390569953d2a1fb65e39645490450f4c3e0c8" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#addFirst(E)&quot;&gt;&lt;code&gt;Deque.addFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../deque#addFirst(E)&quot;&gt; &lt;code&gt;Deque.addFirst(E)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="41b871bbf5ed8b253ef9f92469346969fa3beca5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#addFirst-E-&quot;&gt;&lt;code&gt;Deque.addFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../deque#addFirst-E-&quot;&gt; &lt;code&gt;Deque.addFirst(E)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="cac22f1855ae5b7390c25006ff238519ecbbd45d" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#getFirst()&quot;&gt;&lt;code&gt;Deque.getFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../deque#getFirst()&quot;&gt; &lt;code&gt;Deque.getFirst()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="5d59fb4e03f88c079b08b27c259e791e175ab325" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#getFirst()&quot;&gt;&lt;code&gt;getFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../deque#getFirst()&quot;&gt; &lt;code&gt;getFirst&lt;/code&gt; &lt;/a&gt; 와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="2dcee12da93abc3c7af5ad4ce14c0019e041a784" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#getFirst--&quot;&gt;&lt;code&gt;Deque.getFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../deque#getFirst--&quot;&gt; &lt;code&gt;Deque.getFirst()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="745e5cfa13c0d688770b3801419f42026f19e039" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#getFirst--&quot;&gt;&lt;code&gt;getFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../deque#getFirst--&quot;&gt; &lt;code&gt;getFirst&lt;/code&gt; &lt;/a&gt; 와 동등 합니다 .</target>
        </trans-unit>
        <trans-unit id="f833cec6eb7d8141f17ad110249d3d533c1701f6" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#peekFirst()&quot;&gt;&lt;code&gt;peekFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../deque#peekFirst()&quot;&gt; &lt;code&gt;peekFirst&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="c382bb82fc2e86926ecec5c28b84071b57312910" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#peekFirst--&quot;&gt;&lt;code&gt;Deque.peekFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../deque#peekFirst--&quot;&gt; &lt;code&gt;Deque.peekFirst()&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="0631034b9db85350b6d3a5a0b58236179b145fe8" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#peekFirst--&quot;&gt;&lt;code&gt;peekFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;../deque#peekFirst--&quot;&gt; &lt;code&gt;peekFirst&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="e7e13d171fb7577c081824246f685fcdc83982a7" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#pollFirst()&quot;&gt;&lt;code&gt;Deque.pollFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../deque#pollFirst()&quot;&gt; &lt;code&gt;Deque.pollFirst()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="6d08a898f9783931fa0e55d9366a8934ed8f7cb8" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#pollFirst--&quot;&gt;&lt;code&gt;Deque.pollFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../deque#pollFirst--&quot;&gt; &lt;code&gt;Deque.pollFirst()&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="ebaa4e21fbeb534491dd25658127e7f9ca4beda4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#removeFirst()&quot;&gt;&lt;code&gt;Deque.removeFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../deque#removeFirst()&quot;&gt; &lt;code&gt;Deque.removeFirst()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="820d097b800c341352b183ead29bb4e687912d1b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#removeFirst()&quot;&gt;&lt;code&gt;removeFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;../deque#removeFirst()&quot;&gt; &lt;code&gt;removeFirst&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b38d19681d4dc401a29728e6d548c221f5bcb79a" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#removeFirst--&quot;&gt;&lt;code&gt;Deque.removeFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;../deque#removeFirst--&quot;&gt; &lt;code&gt;Deque.removeFirst()&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="40f5c20b5451ca28023239544a541050d97c7b30" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;../deque#removeFirst--&quot;&gt;&lt;code&gt;removeFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;../deque#removeFirst--&quot;&gt; &lt;code&gt;removeFirst&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="f0366b7f34e5dd9a4ece4eca4d17b633c707b1f9" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;arraydeque#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="84aeefd9475793e355aa463fe4f64ffd579c71ff" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#addFirst-E-&quot;&gt;&lt;code&gt;addFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;arraydeque#addFirst-E-&quot;&gt; &lt;code&gt;addFirst(E)&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="d3ff6d9782be86d95408c2001495dc4a2426d21b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#addLast-E-&quot;&gt;&lt;code&gt;addLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;arraydeque#addLast-E-&quot;&gt; &lt;code&gt;addLast(E)&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="48503c548c56fcf06a9686103f293ac0edb786bc" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#getFirst--&quot;&gt;&lt;code&gt;getFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;arraydeque#getFirst--&quot;&gt; &lt;code&gt;getFirst()&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="6b2f5465d56163a7753c4189e32633114cefa009" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#offerLast-E-&quot;&gt;&lt;code&gt;offerLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;arraydeque#offerLast-E-&quot;&gt; &lt;code&gt;offerLast(E)&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="8f71cf790974f6f2687330e58932a14065507a97" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#peekFirst--&quot;&gt;&lt;code&gt;peekFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;arraydeque#peekFirst--&quot;&gt; &lt;code&gt;peekFirst()&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="0c02821bab241c240b3f857eee16cb26153365c4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#pollFirst--&quot;&gt;&lt;code&gt;pollFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;arraydeque#pollFirst--&quot;&gt; &lt;code&gt;pollFirst()&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="45f21773493dfaad2f57844a4677ad0e0c138742" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#removeFirst--&quot;&gt;&lt;code&gt;removeFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;arraydeque#removeFirst--&quot;&gt; &lt;code&gt;removeFirst()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="14466d27f8fb0ddd3e20e6a928313d060fc8e944" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;arraydeque#removeFirstOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeFirstOccurrence(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;arraydeque#removeFirstOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeFirstOccurrence(Object)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="8a6cecb5cbbb864d6b6b93147fec644d39f919bd" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#addFirst(E)&quot;&gt;&lt;code&gt;addFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;blockingdeque#addFirst(E)&quot;&gt; &lt;code&gt;addFirst&lt;/code&gt; &lt;/a&gt; 와 동일 합니다 .</target>
        </trans-unit>
        <trans-unit id="e26727ec89566260b76ce72249e4f122264c8810" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#addFirst-E-&quot;&gt;&lt;code&gt;addFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;blockingdeque#addFirst-E-&quot;&gt; &lt;code&gt;addFirst&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="4b1fa66f69196026a4f61822989e06cfa76d5a44" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#addLast-E-&quot;&gt;&lt;code&gt;addLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;blockingdeque#addLast-E-&quot;&gt; &lt;code&gt;addLast&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="69457576f81c07b3774cdcd9c0ea73fdba5004de" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#offerLast(E)&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;blockingdeque#offerLast(E)&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="8fb51f5fbf56de87b5668cd78c0e2ec86451c98c" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#offerLast(E,long,java.util.concurrent.TimeUnit)&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;blockingdeque#offerLast(E,long,java.util.concurrent.TimeUnit)&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="15686caf1a02fd0b22268428a9ac9ff79b6814b4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#offerLast-E-&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;blockingdeque#offerLast-E-&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="2d723e78205a7c25f18be4193f3f7c567b99f050" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#offerLast-E-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;offerLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;blockingdeque#offerLast-E-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;offerLast&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="532967591efc91576fc6e010529bea850ce4cea5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#pollFirst-long-java.util.concurrent.TimeUnit-&quot;&gt;&lt;code&gt;pollFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;blockingdeque#pollFirst-long-java.util.concurrent.TimeUnit-&quot;&gt; &lt;code&gt;pollFirst&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="bdf168a0ab3ba3b9d9a719bc144920f999cb59e7" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#putLast(E)&quot;&gt;&lt;code&gt;putLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;blockingdeque#putLast(E)&quot;&gt; &lt;code&gt;putLast&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="034c5b9ff9c457c13d6709bfd488955a171c19be" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#putLast-E-&quot;&gt;&lt;code&gt;putLast&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;blockingdeque#putLast-E-&quot;&gt; &lt;code&gt;putLast&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="7eb2a61b86ed7c494cc47cbe91537252b5654c68" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#removeFirstOccurrence(java.lang.Object)&quot;&gt;&lt;code&gt;removeFirstOccurrence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;blockingdeque#removeFirstOccurrence(java.lang.Object)&quot;&gt; &lt;code&gt;removeFirstOccurrence&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="f3c53069740e2e09f72f107766aba77990158398" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#removeFirstOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeFirstOccurrence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;blockingdeque#removeFirstOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeFirstOccurrence&lt;/code&gt; &lt;/a&gt; 하는 것과 같습니다. .</target>
        </trans-unit>
        <trans-unit id="efa03c367d161f342aabff9967b488c6bb7165c6" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;blockingdeque#takeFirst--&quot;&gt;&lt;code&gt;takeFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;blockingdeque#takeFirst--&quot;&gt; &lt;code&gt;takeFirst&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="2224c7eb479604f0ecca5e9a1e2c87ba0d1c5fe9" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;concurrentlinkeddeque#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;concurrentlinkeddeque#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="e1b6ac92f7a4569794ef3ba9510df764461fb67f" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;deque#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="fc7c08304f720f2c778b85321913e4057f82db47" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#addFirst-E-&quot;&gt;&lt;code&gt;addFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;deque#addFirst-E-&quot;&gt; &lt;code&gt;addFirst(E)&lt;/code&gt; &lt;/a&gt; 와 같습니다. .</target>
        </trans-unit>
        <trans-unit id="f2a34939e65bb98ed731d8feb7d4b3c6b715405f" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#addLast-E-&quot;&gt;&lt;code&gt;addLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;deque#addLast-E-&quot;&gt; &lt;code&gt;addLast(E)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="7b56a92dcbc2c2ae04921fa93ee4fa2b9be3a456" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#getFirst--&quot;&gt;&lt;code&gt;getFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;deque#getFirst--&quot;&gt; &lt;code&gt;getFirst()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="2772efc22ade84a9481f3bf8c55e91f9cbd1c008" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#offerLast-E-&quot;&gt;&lt;code&gt;offerLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;deque#offerLast-E-&quot;&gt; &lt;code&gt;offerLast(E)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="fa6250a70146f2631f9fe33099bdcbbee72c179c" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#peekFirst()&quot;&gt;&lt;code&gt;Deque.peekFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;deque#peekFirst()&quot;&gt; &lt;code&gt;Deque.peekFirst()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="396765a86fbb7bdfb4abb942856005cf95afa374" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#peekFirst--&quot;&gt;&lt;code&gt;peekFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;deque#peekFirst--&quot;&gt; &lt;code&gt;peekFirst()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="7a613c8b576425dfa4ea9313922a4eb950542811" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#pollFirst()&quot;&gt;&lt;code&gt;Deque.pollFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;deque#pollFirst()&quot;&gt; &lt;code&gt;Deque.pollFirst()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="3c429a0973aed6b85b67e3b540ed30b9cfc5b3b5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#pollFirst--&quot;&gt;&lt;code&gt;pollFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;deque#pollFirst--&quot;&gt; &lt;code&gt;pollFirst()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="3029d057d6dc59b232e7eed0a4af8f56540dbddf" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#removeFirst--&quot;&gt;&lt;code&gt;removeFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;deque#removeFirst--&quot;&gt; &lt;code&gt;removeFirst()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="24b009d11c7b1a8b9f8ac1e9ae63463a43aeac15" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;deque#removeFirstOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeFirstOccurrence(Object)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;deque#removeFirstOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeFirstOccurrence(Object)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="59f9a2170534a464fa749a403663fbd5a466cafb" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;instant#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">이 방법은 양이 무효화 된 &lt;a href=&quot;instant#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 와 같습니다. 덧셈과 뺄셈의 작동 방식에 대한 자세한 설명은 해당 방법을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="2109fc69a4aa29cb9580c5f081baad0a3c197997" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-boolean-&quot;&gt;&lt;code&gt;newMBeanProxy(connection, objectName, interfaceClass,
 false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;jmx#newMBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-boolean-&quot;&gt; &lt;code&gt;newMBeanProxy(connection, objectName, interfaceClass, false)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="c341b0dac95e5c31e97ed0423dc9ed28097f483d" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-boolean-&quot;&gt;&lt;code&gt;newMXBeanProxy(connection, objectName, interfaceClass,
 false)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;jmx#newMXBeanProxy-javax.management.MBeanServerConnection-javax.management.ObjectName-java.lang.Class-boolean-&quot;&gt; &lt;code&gt;newMXBeanProxy(connection, objectName, interfaceClass, false)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="2b318b118677eaab0a3ce1f299e1cb60ca177f38" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt;&lt;code&gt;connect(serviceURL, null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;jmxconnectorfactory#connect-javax.management.remote.JMXServiceURL-java.util.Map-&quot;&gt; &lt;code&gt;connect(serviceURL, null)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="f74c047cfd571c36fd5612482e89d051e7303e33" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedblockingdeque#addLast-E-&quot;&gt;&lt;code&gt;addLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;linkedblockingdeque#addLast-E-&quot;&gt; &lt;code&gt;addLast(E)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="8bb02af00d191e0b898003f4e3593065418c52b8" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedblockingdeque#getFirst--&quot;&gt;&lt;code&gt;getFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;linkedblockingdeque#getFirst--&quot;&gt; &lt;code&gt;getFirst&lt;/code&gt; &lt;/a&gt; 와 동등 합니다 .</target>
        </trans-unit>
        <trans-unit id="7bac904e167d9f58308622a82640847f1c3cdf55" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedblockingdeque#removeFirst--&quot;&gt;&lt;code&gt;removeFirst&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;linkedblockingdeque#removeFirst--&quot;&gt; &lt;code&gt;removeFirst&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="f58b8153cbaeb760942f5eecf4040c8767c9217e" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedblockingdeque#removeFirstOccurrence-java.lang.Object-&quot;&gt;&lt;code&gt;removeFirstOccurrence&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;linkedblockingdeque#removeFirstOccurrence-java.lang.Object-&quot;&gt; &lt;code&gt;removeFirstOccurrence&lt;/code&gt; &lt;/a&gt; 와 같습니다 .</target>
        </trans-unit>
        <trans-unit id="0a4edf0d1327f9808d462cef4f47a06f648fb8a1" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedlist#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;linkedlist#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="9353ad6d61cd960f6a999e78739cde0f5bea707a" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedlist#addFirst-E-&quot;&gt;&lt;code&gt;addFirst(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;linkedlist#addFirst-E-&quot;&gt; &lt;code&gt;addFirst(E)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="7e3f9512237b529fd32d60838c5948d2fa44965b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedlist#addLast-E-&quot;&gt;&lt;code&gt;addLast(E)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;linkedlist#addLast-E-&quot;&gt; &lt;code&gt;addLast(E)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="5d6cfd107c0067d4ee4827243702402a98a58351" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;linkedlist#removeFirst--&quot;&gt;&lt;code&gt;removeFirst()&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;linkedlist#removeFirst--&quot;&gt; &lt;code&gt;removeFirst()&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="480913a4e825d16bba5cf2d5136bbd710a8bef4c" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">이 방법은 양이 무효화 된 &lt;a href=&quot;localdate#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 와 같습니다. 덧셈과 뺄셈의 작동 방식에 대한 자세한 설명은 해당 방법을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e8b6532c4d4626b0bb3bc299757ff1efa04249f1" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">이 방법은 양이 무효화 된 &lt;a href=&quot;localdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 와 같습니다. 덧셈과 뺄셈의 작동 방식에 대한 자세한 설명은 해당 방법을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="f36ce6c9cc788422d65e5cda5aef1d9b37146ed5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">이 방법은 양이 무효화 된 &lt;a href=&quot;localtime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 와 같습니다. 덧셈과 뺄셈의 작동 방식에 대한 자세한 설명은 해당 방법을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="a1f72a850286a9f076e2ecc148078b95355283f7" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;mbeanserver#instantiate-java.lang.String-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;instantiate(className, (Object[]) null, (String[]) null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;mbeanserver#instantiate-java.lang.String-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;instantiate(className, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="635a12545432754314cfce59bd929ae63656163d" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;mbeanserver#instantiate-java.lang.String-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;instantiate(className, loaderName, (Object[]) null, (String[])
 null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;mbeanserver#instantiate-java.lang.String-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;instantiate(className, loaderName, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="91d86ce256ea70e69c10b5a1bcd240081ab5edb2" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;mbeanserverconnection#createMBean(java.lang.String,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;createMBean(className, name, (Object[]) null, (String[])
 null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;mbeanserverconnection#createMBean(java.lang.String,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;createMBean(className, name, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="9071d4a9819b1b5c7be47c822ea8e88ba1b9dab1" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;mbeanserverconnection#createMBean(java.lang.String,javax.management.ObjectName,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt;&lt;code&gt;createMBean(className, name, loaderName, (Object[]) null,
 (String[]) null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;mbeanserverconnection#createMBean(java.lang.String,javax.management.ObjectName,javax.management.ObjectName,java.lang.Object%5B%5D,java.lang.String%5B%5D)&quot;&gt; &lt;code&gt;createMBean(className, name, loaderName, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt; 합니다.</target>
        </trans-unit>
        <trans-unit id="89c45209680bfeca1fdbc673b25290f6aa7ca2f2" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;mbeanserverconnection#createMBean-java.lang.String-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;createMBean(className, name, (Object[]) null, (String[])
 null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;mbeanserverconnection#createMBean-java.lang.String-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;createMBean(className, name, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="a8cafac796cf6cc290c7cdd9b8110c234115831f" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;mbeanserverconnection#createMBean-java.lang.String-javax.management.ObjectName-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt;&lt;code&gt;createMBean(className, name, loaderName, (Object[]) null,
 (String[]) null)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;mbeanserverconnection#createMBean-java.lang.String-javax.management.ObjectName-javax.management.ObjectName-java.lang.Object:A-java.lang.String:A-&quot;&gt; &lt;code&gt;createMBean(className, name, loaderName, (Object[]) null, (String[]) null)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="2a27ee3c7c2f51268d5714e413c4cafc2494dc1c" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;offsetdatetime#ofInstant(java.time.Instant,java.time.ZoneId)&quot;&gt;&lt;code&gt;OffsetDateTime.ofInstant(this, offset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;offsetdatetime#ofInstant(java.time.Instant,java.time.ZoneId)&quot;&gt; &lt;code&gt;OffsetDateTime.ofInstant(this, offset)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="9814bf1be3d3dad27dd8c2c505eec033f65cf893" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;offsetdatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt;&lt;code&gt;OffsetDateTime.ofInstant(this, offset)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;offsetdatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt; &lt;code&gt;OffsetDateTime.ofInstant(this, offset)&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="d6d59d8223469f3ae35b0245e0bff1fcceb2ea55" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;offsetdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">이 방법은 양이 무효화 된 &lt;a href=&quot;offsetdatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 와 같습니다. 덧셈과 뺄셈의 작동 방식에 대한 자세한 설명은 해당 방법을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bf56d3e110cc76842dd75c2fd043ba980b3ad666" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;offsettime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">이 방법은 양이 무효화 된 &lt;a href=&quot;offsettime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 와 같습니다. 덧셈과 뺄셈의 작동 방식에 대한 자세한 설명은 해당 방법을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fce96be4ee850ad719075e237d19a3e8ef9d43d2" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;year#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">이 방법은 양이 무효화 된 &lt;a href=&quot;year#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 와 같습니다. 덧셈과 뺄셈의 작동 방식에 대한 자세한 설명은 해당 방법을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="fbff0b66132998944d5c7ce65390d17c579c87a7" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;yearmonth#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">이 방법은 양이 무효화 된 &lt;a href=&quot;yearmonth#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 와 같습니다. 덧셈과 뺄셈의 작동 방식에 대한 자세한 설명은 해당 방법을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="ee950cddf068259b7b63828c5f80ed32dc32e4ee" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;zoneddatetime#ofInstant(java.time.Instant,java.time.ZoneId)&quot;&gt;&lt;code&gt;ZonedDateTime.ofInstant(this, zone)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;zoneddatetime#ofInstant(java.time.Instant,java.time.ZoneId)&quot;&gt; &lt;code&gt;ZonedDateTime.ofInstant(this, zone)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="f9dcad95eef5e1f66a6642d3074dd0f7a03a518a" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;zoneddatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt;&lt;code&gt;ZonedDateTime.ofInstant(this, zone)&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;zoneddatetime#ofInstant-java.time.Instant-java.time.ZoneId-&quot;&gt; &lt;code&gt;ZonedDateTime.ofInstant(this, zone)&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="e975e726acee52c4dc0454797ccfac076ba7a0b4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;a href=&quot;zoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt;&lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt;&lt;/a&gt; with the amount negated. See that method for a full description of how addition, and thus subtraction, works.</source>
          <target state="translated">이 방법은 양이 무효화 된 &lt;a href=&quot;zoneddatetime#plus-long-java.time.temporal.TemporalUnit-&quot;&gt; &lt;code&gt;plus(long, TemporalUnit)&lt;/code&gt; &lt;/a&gt; 와 같습니다. 덧셈과 뺄셈의 작동 방식에 대한 자세한 설명은 해당 방법을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="b6e4a5423f3536b44e4379b2da3db188b9402e89" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;#toString(charset)&lt;/code&gt; that takes a &lt;a href=&quot;../nio/charset/charset&quot;&gt;&lt;code&gt;charset&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 동일하다 &lt;code&gt;#toString(charset)&lt;/code&gt; 얻어 &lt;a href=&quot;../nio/charset/charset&quot;&gt; &lt;code&gt;charset&lt;/code&gt; &lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit id="8cab3b49f8a92934fe2dbdd539367f4a62c851d5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;BitSet.valueOf(ByteBuffer.wrap(bytes))&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;BitSet.valueOf(ByteBuffer.wrap(bytes))&lt;/code&gt; .</target>
        </trans-unit>
        <trans-unit id="d6935f428861ade87e7ea9856a9d29a31becd903" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;BitSet.valueOf(LongBuffer.wrap(longs))&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;BitSet.valueOf(LongBuffer.wrap(longs))&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="59048ab6f8810d2f5ada4aecb2f2426cd2b2e241" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;String.format(this, args)&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;String.format(this, args)&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="2d8b09948219057f50c5f99c3412208abd70ab8e" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;allLineLocations(vm.getDefaultStratum(),null)&lt;/code&gt; - see &lt;a href=&quot;#allLineLocations(java.lang.String,java.lang.String)&quot;&gt;&lt;code&gt;allLineLocations(String,String)&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">이 메서드는 &lt;code&gt;allLineLocations(vm.getDefaultStratum(),null)&lt;/code&gt; 과 동일합니다 . 자세한 내용 은 &lt;a href=&quot;#allLineLocations(java.lang.String,java.lang.String)&quot;&gt; &lt;code&gt;allLineLocations(String,String)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="dffec148cec737fb0cf69df66b436b2e7a053121" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;createMBeanServer(null)&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;createMBeanServer(null)&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="1c6036fd658df93950ae3fe4c440892959188969" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;datesUntil(endExclusive, Period.ofDays(1))&lt;/code&gt;.</source>
          <target state="translated">이 메서드는 &lt;code&gt;datesUntil(endExclusive, Period.ofDays(1))&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="f26e4b27c8f6a499c75deb49bcda20ff1525ae96" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;lineNumber(vm.getDefaultStratum())&lt;/code&gt; - see &lt;a href=&quot;#lineNumber(java.lang.String)&quot;&gt;&lt;code&gt;lineNumber(String)&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">이 메서드는 &lt;code&gt;lineNumber(vm.getDefaultStratum())&lt;/code&gt; 와 동일합니다 . 자세한 내용 은 &lt;a href=&quot;#lineNumber(java.lang.String)&quot;&gt; &lt;code&gt;lineNumber(String)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="1ffa14102ae3e2ad7a347713134cb61e4fd87e79" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;locationsOfLine(vm.getDefaultStratum(), null,
 lineNumber)&lt;/code&gt; - see &lt;a href=&quot;#locationsOfLine(java.lang.String,java.lang.String,int)&quot;&gt;&lt;code&gt;locationsOfLine(java.lang.String,java.lang.String,int)&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">이 메소드는 &lt;code&gt;locationsOfLine(vm.getDefaultStratum(), null, lineNumber)&lt;/code&gt; 와 동일합니다 . 자세한 내용 은 &lt;a href=&quot;#locationsOfLine(java.lang.String,java.lang.String,int)&quot;&gt; &lt;code&gt;locationsOfLine(java.lang.String,java.lang.String,int)&lt;/code&gt; &lt;/a&gt; 을 참조하세요.</target>
        </trans-unit>
        <trans-unit id="0616a07d400f5772695626b3597ddf043d782260" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;negotiate(null)&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;negotiate(null)&lt;/code&gt; 과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="71235388a486a22b38053dcdde576c9698b499d6" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;newMBeanServer(null)&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;newMBeanServer(null)&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="0967c34cd3582219ab8e2f5593c1c9a618143505" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;setInput(input, false, false)&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;setInput(input, false, false)&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="c85782e3d2b82db588781506096398e47e5e35d5" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;setInput(input, seekForwardOnly, false)&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;setInput(input, seekForwardOnly, false)&lt;/code&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="7a2d62e5bdbd4b4388f8f68d972d364e00cc20de" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;sourceName(vm.getDefaultStratum())&lt;/code&gt; - see &lt;a href=&quot;#sourceName(java.lang.String)&quot;&gt;&lt;code&gt;sourceName(String)&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">이 메서드는 &lt;code&gt;sourceName(vm.getDefaultStratum())&lt;/code&gt; 과 동일합니다 . 자세한 내용 은 &lt;a href=&quot;#sourceName(java.lang.String)&quot;&gt; &lt;code&gt;sourceName(String)&lt;/code&gt; &lt;/a&gt; 을 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="bd214db8fdff8138b049832745d1bbfac21f411b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to &lt;code&gt;sourcePath(vm.getDefaultStratum())&lt;/code&gt; - see &lt;a href=&quot;#sourcePath(java.lang.String)&quot;&gt;&lt;code&gt;sourcePath(String)&lt;/code&gt;&lt;/a&gt; for more information.</source>
          <target state="translated">이 메서드는 &lt;code&gt;sourcePath(vm.getDefaultStratum())&lt;/code&gt; 와 동일합니다 . 자세한 내용 은 &lt;a href=&quot;#sourcePath(java.lang.String)&quot;&gt; &lt;code&gt;sourcePath(String)&lt;/code&gt; &lt;/a&gt; 를 참조하십시오.</target>
        </trans-unit>
        <trans-unit id="e0820cbcc17f81d049d119b4c64c3ae608730da1" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling</source>
          <target state="translated">이 메서드는 다음을 호출하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="3af1ab758c175ff9f79dab21da14b593bfd56d46" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling &lt;code&gt;getName(X500Principal.RFC2253)&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;getName(X500Principal.RFC2253)&lt;/code&gt; 호출과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="f075d48644547d92366ba397af4b70b741827ced" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling &lt;code&gt;getSequencer(true)&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;getSequencer(true)&lt;/code&gt; 를 호출하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="e2941d45be7dc307d2080c5475534b439748562a" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling the &lt;a href=&quot;#getThreadAllocatedBytes(long)&quot;&gt;&lt;code&gt;getThreadAllocatedBytes(long)&lt;/code&gt;&lt;/a&gt; method for each thread ID in the input array &lt;code&gt;ids&lt;/code&gt; and setting the returned value in the corresponding element of the returned array.</source>
          <target state="translated">이 메서드는 입력 배열 &lt;code&gt;ids&lt;/code&gt; 의 각 스레드 ID에 대해 &lt;a href=&quot;#getThreadAllocatedBytes(long)&quot;&gt; &lt;code&gt;getThreadAllocatedBytes(long)&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하고 반환 된 배열의 해당 요소에 반환 된 값을 설정하는 것과 같습니다.</target>
        </trans-unit>
        <trans-unit id="b6395bce0b17c225d2d3df5f5eb9262ccf80a7e4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling the &lt;a href=&quot;../../../../java.management/java/lang/management/threadmxbean#getThreadCpuTime(long)&quot;&gt;&lt;code&gt;ThreadMXBean.getThreadCpuTime(long)&lt;/code&gt;&lt;/a&gt; method for each thread ID in the input array &lt;code&gt;ids&lt;/code&gt; and setting the returned value in the corresponding element of the returned array.</source>
          <target state="translated">이 메소드는 입력 배열 &lt;code&gt;ids&lt;/code&gt; 의 각 스레드 ID에 대해 &lt;a href=&quot;../../../../java.management/java/lang/management/threadmxbean#getThreadCpuTime(long)&quot;&gt; &lt;code&gt;ThreadMXBean.getThreadCpuTime(long)&lt;/code&gt; &lt;/a&gt; 메소드 를 호출 하고 리턴 된 배열의 해당 요소에 리턴 된 값을 설정하는 것과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="02dd3ddbad7cad9b1205b4a5b4d48fb15fc70a15" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling the &lt;a href=&quot;../../../../java.management/java/lang/management/threadmxbean#getThreadUserTime(long)&quot;&gt;&lt;code&gt;ThreadMXBean.getThreadUserTime(long)&lt;/code&gt;&lt;/a&gt; method for each thread ID in the input array &lt;code&gt;ids&lt;/code&gt; and setting the returned value in the corresponding element of the returned array.</source>
          <target state="translated">이 메서드는 입력 배열 &lt;code&gt;ids&lt;/code&gt; 의 각 스레드 ID에 대해 &lt;a href=&quot;../../../../java.management/java/lang/management/threadmxbean#getThreadUserTime(long)&quot;&gt; &lt;code&gt;ThreadMXBean.getThreadUserTime(long)&lt;/code&gt; &lt;/a&gt; 메서드 를 호출 하고 반환 된 배열의 해당 요소에 반환 된 값을 설정하는 것과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="ce70f0937eb327212fc0cce93b927154a630551c" translate="yes" xml:space="preserve">
          <source>This method is equivalent to calling the four-argument constructor with the arguments being &lt;code&gt;protocol&lt;/code&gt;, &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;-1&lt;/code&gt;, and &lt;code&gt;file&lt;/code&gt;. No validation of the inputs is performed by this constructor.</source>
          <target state="translated">이 메소드는 &lt;code&gt;protocol&lt;/code&gt; , &lt;code&gt;host&lt;/code&gt; , &lt;code&gt;-1&lt;/code&gt; 및 &lt;code&gt;file&lt;/code&gt; 인수를 사용하여 4 개의 인수 생성자를 호출하는 것과 같습니다 . 이 생성자는 입력의 유효성 검사를 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="e58276bc1e46bc13531c5457a1d84079eee2b94b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to invoking the 2-arg &lt;a href=&quot;#select(java.util.function.Consumer,long)&quot;&gt;&lt;code&gt;select&lt;/code&gt;&lt;/a&gt; method with a timeout of &lt;code&gt;0&lt;/code&gt; to block indefinitely.</source>
          <target state="translated">이 메서드는 시간 제한이 &lt;code&gt;0&lt;/code&gt; 인 2-arg &lt;a href=&quot;#select(java.util.function.Consumer,long)&quot;&gt; &lt;code&gt;select&lt;/code&gt; &lt;/a&gt; 메서드 를 호출하여 무기한 차단 하는 것과 같습니다 .</target>
        </trans-unit>
        <trans-unit id="3a9494d0b0f9f9762ac18a11fa9dbac5b8dede9d" translate="yes" xml:space="preserve">
          <source>This method is equivalent to method &lt;code&gt;navigableKeySet&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 &lt;code&gt;navigableKeySet&lt;/code&gt; 메소드와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="9a2db21a63f9ffea23934ca2d8003cff93279948" translate="yes" xml:space="preserve">
          <source>This method is equivalent to testing if the set of &lt;a href=&quot;#modifiers()&quot;&gt;&lt;code&gt;modifiers&lt;/code&gt;&lt;/a&gt; contains the &lt;a href=&quot;moduledescriptor.modifier#OPEN&quot;&gt;&lt;code&gt;AUTOMATIC&lt;/code&gt;&lt;/a&gt; modifier.</source>
          <target state="translated">이 메소드는 &lt;a href=&quot;#modifiers()&quot;&gt; &lt;code&gt;modifiers&lt;/code&gt; &lt;/a&gt; 세트에 &lt;a href=&quot;moduledescriptor.modifier#OPEN&quot;&gt; &lt;code&gt;AUTOMATIC&lt;/code&gt; &lt;/a&gt; 수정 자가 포함되어 있는지 테스트하는 것과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="4b595e2b228b94354bcd14d0f1c3dc39ed86a3de" translate="yes" xml:space="preserve">
          <source>This method is equivalent to testing if the set of &lt;a href=&quot;#modifiers()&quot;&gt;&lt;code&gt;modifiers&lt;/code&gt;&lt;/a&gt; contains the &lt;a href=&quot;moduledescriptor.modifier#OPEN&quot;&gt;&lt;code&gt;OPEN&lt;/code&gt;&lt;/a&gt; modifier.</source>
          <target state="translated">이 방법은 &lt;a href=&quot;#modifiers()&quot;&gt; &lt;code&gt;modifiers&lt;/code&gt; &lt;/a&gt; 세트에 &lt;a href=&quot;moduledescriptor.modifier#OPEN&quot;&gt; &lt;code&gt;OPEN&lt;/code&gt; &lt;/a&gt; 수정 자가 포함되어 있는지 테스트하는 것과 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="9aec895eff1dfa52f137329c0a08508cf3037898" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the expression:</source>
          <target state="translated">이 방법은 다음 표현식과 같습니다.</target>
        </trans-unit>
        <trans-unit id="d72ed373e62346cb1d21d1574436bb65f1419e38" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following call.</source>
          <target state="translated">이 메소드는 다음 호출과 같습니다.</target>
        </trans-unit>
        <trans-unit id="708149fca6ea3cb8c860f0b39afae0e0706d4773" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following code (though it may be more efficient):</source>
          <target state="translated">이 방법은 다음 코드와 동일하지만 더 효율적일 수 있습니다.</target>
        </trans-unit>
        <trans-unit id="9c0f236b6b979c07fb74ccf1aea85ba1c004c1d6" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following code (though it may be more efficient): &lt;code&gt;publicLookup().findVirtual(MethodHandle.class, &quot;invoke&quot;, type)&lt;/code&gt;</source>
          <target state="translated">이 메소드는 다음 코드와 동일합니다 (더 효율적일 수는 있습니다) : &lt;code&gt;publicLookup().findVirtual(MethodHandle.class, &quot;invoke&quot;, type)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="a1c2c4ed439efc36310ee4144d344bd24547f01b" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following code (though it may be more efficient): &lt;code&gt;publicLookup().findVirtual(MethodHandle.class, &quot;invokeExact&quot;, type)&lt;/code&gt;</source>
          <target state="translated">이 메소드는 다음 코드와 동일합니다 (더 효율적일 수는 있습니다) : &lt;code&gt;publicLookup().findVirtual(MethodHandle.class, &quot;invokeExact&quot;, type)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="3fa1499b72e6ecfa3a62e1b55f0eb8701d336b5a" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following code (though it may be more efficient): &lt;code&gt;publicLookup().findVirtual(VarHandle.class, accessMode.name(), type)&lt;/code&gt;</source>
          <target state="translated">이 메소드는 다음 코드와 동일합니다 (더 효율적일 수 있음). &lt;code&gt;publicLookup().findVirtual(VarHandle.class, accessMode.name(), type)&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="1810dc7467cbaffdff093edae9768626e71d3188" translate="yes" xml:space="preserve">
          <source>This method is equivalent to the following code:</source>
          <target state="translated">이 방법은 다음 코드와 같습니다.</target>
        </trans-unit>
        <trans-unit id="4666da77ba161f3de91822d32d0e17494546a560" translate="yes" xml:space="preserve">
          <source>This method is equivalent to:</source>
          <target state="translated">이 방법은 다음과 같습니다.</target>
        </trans-unit>
        <trans-unit id="e820dd51328fec0cfd7b707bf309760fc23a3bd4" translate="yes" xml:space="preserve">
          <source>This method is equivalent to: &lt;code&gt;readString(path, StandardCharsets.UTF_8) &lt;/code&gt;</source>
          <target state="translated">이 메소드는 다음과 동일합니다. &lt;code&gt;readString(path, StandardCharsets.UTF_8) &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="5b9b90c52d68ff1057d1347dae6d63c590cfaeba" translate="yes" xml:space="preserve">
          <source>This method is equivalent to: &lt;code&gt;writeString(path, test, StandardCharsets.UTF_8, options) &lt;/code&gt;</source>
          <target state="translated">이 메서드는 다음과 동일합니다. &lt;code&gt;writeString(path, test, StandardCharsets.UTF_8, options) &lt;/code&gt;</target>
        </trans-unit>
        <trans-unit id="e49b542a8893f06fd6fe2f9d42babc87187d989a" translate="yes" xml:space="preserve">
          <source>This method is expected to have the side effect of establishing the content type, and therefore setting the appropriate &lt;code&gt;EditorKit&lt;/code&gt; to use for loading the stream.</source>
          <target state="translated">이 메서드는 콘텐츠 유형을 설정 하여 스트림을로드하는 데 사용할 적절한 &lt;code&gt;EditorKit&lt;/code&gt; 을 설정하는 부작용이있을 것으로 예상됩니다 .</target>
        </trans-unit>
        <trans-unit id="d97c9cb5c9d68ff17377cf689580612ca1ea3f89" translate="yes" xml:space="preserve">
          <source>This method is first invoked early in the runtime's startup sequence, at which point it creates the system class loader and sets it as the context class loader of the invoking &lt;code&gt;Thread&lt;/code&gt;.</source>
          <target state="translated">이 메소드는 런타임 시작 순서에서 먼저 호출되며,이 시점에서 시스템 클래스 로더를 작성하고이를 호출하는 &lt;code&gt;Thread&lt;/code&gt; 의 컨텍스트 클래스 로더로 설정합니다 .</target>
        </trans-unit>
        <trans-unit id="b6a44a40b5b87ddd3879bf8845c499838cbec50d" translate="yes" xml:space="preserve">
          <source>This method is first invoked early in the runtime's startup sequence, at which point it creates the system class loader. This class loader will be the context class loader for the main application thread (for example, the thread that invokes the &lt;code&gt;main&lt;/code&gt; method of the main class).</source>
          <target state="translated">이 메서드는 런타임 시작 시퀀스의 초기에 먼저 호출되어 시스템 클래스 로더를 만듭니다. 이 클래스 로더는 기본 애플리케이션 스레드 (예 : 기본 클래스 의 &lt;code&gt;main&lt;/code&gt; 메소드 를 호출하는 스레드)의 컨텍스트 클래스 로더가 됩니다.</target>
        </trans-unit>
        <trans-unit id="2bafb551f599fd6bf4e070922d9b09831dc971ac" translate="yes" xml:space="preserve">
          <source>This method is for cases where a channel is closed when &lt;a href=&quot;../../../java.base/java/nio/channels/selectablechannel#isRegistered()&quot;&gt;&lt;code&gt;registered&lt;/code&gt;&lt;/a&gt; with one or more &lt;code&gt;Selector&lt;/code&gt;s. A channel may remain registered for some time after it is closed. This method is invoked when the channel is eventually deregistered from the last &lt;code&gt;Selector&lt;/code&gt; that it was registered with. It is invoked at most once.</source>
          <target state="translated">이 방법은 하나 이상의 &lt;code&gt;Selector&lt;/code&gt; &lt;a href=&quot;../../../java.base/java/nio/channels/selectablechannel#isRegistered()&quot;&gt; &lt;code&gt;registered&lt;/code&gt; &lt;/a&gt; 할 때 채널이 닫히는 경우에 사용됩니다 . 채널은 폐쇄 된 후에도 얼마 동안 등록 된 상태로 남아있을 수 있습니다. ㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ ㅇㅇㅇ 이 메소드는 채널이 등록 된 마지막 &lt;code&gt;Selector&lt;/code&gt; 에서 결국 등록 취소 될 때 호출됩니다 . 최대 한 번 호출됩니다.</target>
        </trans-unit>
        <trans-unit id="76ac3f6f01758b6ecc583559b53037e889468544" translate="yes" xml:space="preserve">
          <source>This method is for observers to discover the structural changes that were made. This means that only elements that existed prior to the mutation (and still exist after the mutation) need to have ElementChange records. The changes made available need not be recursive.</source>
          <target state="translated">이 방법은 관찰자가 변경된 구조를 발견하는 것입니다. 즉, 변형 이전에 존재하고 변형 후에도 여전히 존재하는 요소에만 ElementChange 레코드가 있어야합니다. 사용 가능한 변경 사항은 재귀적일 필요가 없습니다.</target>
        </trans-unit>
        <trans-unit id="3dd3187c1d03e770e6f83bd937acdd8615a19154" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to &lt;a href=&quot;#genKeyPair()&quot;&gt;&lt;code&gt;genKeyPair&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 기능적으로 &lt;a href=&quot;#genKeyPair()&quot;&gt; &lt;code&gt;genKeyPair&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="49f6d5ace2de78241a0bb5b94c37d13c87217537" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to &lt;a href=&quot;#generateKeyPair()&quot;&gt;&lt;code&gt;generateKeyPair&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메서드는 &lt;a href=&quot;#generateKeyPair()&quot;&gt; &lt;code&gt;generateKeyPair&lt;/code&gt; &lt;/a&gt; 와 기능적으로 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="b47611efdddda5528d61604e9ecb14293f370ee5" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to &lt;a href=&quot;keypairgenerator#genKeyPair--&quot;&gt;&lt;code&gt;genKeyPair&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 방법은 기능적으로 &lt;a href=&quot;keypairgenerator#genKeyPair--&quot;&gt; &lt;code&gt;genKeyPair&lt;/code&gt; &lt;/a&gt; 와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="617f5c3ccebe696f11ba21ec03006677d00dacc7" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to &lt;a href=&quot;keypairgenerator#generateKeyPair--&quot;&gt;&lt;code&gt;generateKeyPair&lt;/code&gt;&lt;/a&gt;.</source>
          <target state="translated">이 메소드는 기능적으로 &lt;a href=&quot;keypairgenerator#generateKeyPair--&quot;&gt; &lt;code&gt;generateKeyPair&lt;/code&gt; &lt;/a&gt; 와 동등합니다 .</target>
        </trans-unit>
        <trans-unit id="bcb6e40e8009089b7c765aac669715fb7c2d8a7f" translate="yes" xml:space="preserve">
          <source>This method is functionally equivalent to:</source>
          <target state="translated">이 방법은 기능적으로 다음과 동일합니다.</target>
        </trans-unit>
        <trans-unit id="da61400ab9b3619e2b481cbdab8b36bcaba8770b" translate="yes" xml:space="preserve">
          <source>This method is idempotent. It succeeds even if the terminal atomic name is not bound in the target context, but throws &lt;code&gt;NameNotFoundException&lt;/code&gt; if any of the intermediate contexts do not exist.</source>
          <target state="translated">이 방법은 dem 등원입니다. 터미널 원자 이름이 대상 컨텍스트에 바인딩되지 않은 경우에도 성공하지만 중간 컨텍스트가 존재하지 않으면 &lt;code&gt;NameNotFoundException&lt;/code&gt; 이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="7b1468159ff67e9e35f87b3d898eb55e55866de7" translate="yes" xml:space="preserve">
          <source>This method is idempotent: if the inbound side has already been closed, this method does not do anything.</source>
          <target state="translated">이 메소드는 dem 등원입니다. 인바운드 측이 이미 닫혀 있으면이 메소드는 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="8a96ed950b6f8413be59b1869a08784b43f0f1cc" translate="yes" xml:space="preserve">
          <source>This method is idempotent: if the outbound side has already been closed, this method does not do anything.</source>
          <target state="translated">이 방법은 dem 등적입니다. 아웃 바운드 측이 이미 닫혀 있으면이 방법으로 아무 작업도 수행하지 않습니다.</target>
        </trans-unit>
        <trans-unit id="9f89a0125ece62c8e80accaec6b65003e4e7847d" translate="yes" xml:space="preserve">
          <source>This method is idempotent: invoking it on a context that has already been closed has no effect. Invoking any other method on a closed context is not allowed, and results in undefined behaviour.</source>
          <target state="translated">이 메소드는 dem 등원입니다. 이미 닫힌 컨텍스트에서 호출하면 아무 효과가 없습니다. 닫힌 컨텍스트에서 다른 메소드를 호출하는 것은 허용되지 않으며 정의되지 않은 동작이 발생합니다.</target>
        </trans-unit>
        <trans-unit id="040319066f0740be6b223e2c978c42a2db5d2721" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;#add(E)&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface).</source>
          <target state="translated">이 메서드는 기능면에서 &lt;a href=&quot;#add(E)&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt; 메서드 ( &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; 인터페이스의 일부)와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="34995c581c4067a9f14c1db8e667f72ce8770c12" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;#add(int,E)&quot;&gt;&lt;code&gt;add(int, E)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface). Note that the &lt;code&gt;add&lt;/code&gt; method reverses the order of the parameters, to more closely match array usage.</source>
          <target state="translated">이 메서드는 기능면에서 &lt;a href=&quot;#add(int,E)&quot;&gt; &lt;code&gt;add(int, E)&lt;/code&gt; &lt;/a&gt; 메서드 ( &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; 인터페이스의 일부)와 동일합니다 . 참고 것을 &lt;code&gt;add&lt;/code&gt; 방법은 배열의 사용법에 맞게 파라미터의 순서를 반대로.</target>
        </trans-unit>
        <trans-unit id="d65dd2e2b66f278259e5d1b3314423b71eff9ef4" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;#clear()&quot;&gt;&lt;code&gt;clear()&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface).</source>
          <target state="translated">이 메서드는 기능면에서 &lt;a href=&quot;#clear()&quot;&gt; &lt;code&gt;clear()&lt;/code&gt; &lt;/a&gt; 메서드 ( &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; 인터페이스의 일부)와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="acaefd8a6a3fe2062709c9c76ec87f7bf1f9a4f1" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;#get(int)&quot;&gt;&lt;code&gt;get(int)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface).</source>
          <target state="translated">이 메소드는 기능면에서 &lt;a href=&quot;#get(int)&quot;&gt; &lt;code&gt;get(int)&lt;/code&gt; &lt;/a&gt; 메소드 ( &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; 인터페이스의 일부)와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="1d74ada00cc126fab24dca9149fe62a61dad376b" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;#remove(int)&quot;&gt;&lt;code&gt;remove(int)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface). Note that the &lt;code&gt;remove&lt;/code&gt; method returns the old value that was stored at the specified position.</source>
          <target state="translated">이 메서드는 기능면에서 &lt;a href=&quot;#remove(int)&quot;&gt; &lt;code&gt;remove(int)&lt;/code&gt; &lt;/a&gt;&lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; 인터페이스의 일부인 ) remove (int) 메서드와 동일합니다 . 있습니다 &lt;code&gt;remove&lt;/code&gt; 방법은 지정된 위치에 저장되어, 이전의 값을 돌려줍니다.</target>
        </trans-unit>
        <trans-unit id="b07b6fc3bcba9d57d07754893096181f0d4b88a5" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;#remove(java.lang.Object)&quot;&gt;&lt;code&gt;remove(Object)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface).</source>
          <target state="translated">이 메서드는 기능면에서 &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; 인터페이스의 일부인 &lt;a href=&quot;#remove(java.lang.Object)&quot;&gt; &lt;code&gt;remove(Object)&lt;/code&gt; &lt;/a&gt; 메서드와 동일합니다 .</target>
        </trans-unit>
        <trans-unit id="97222cc5f74e6f04324037f45884e04dd546504b" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;#set(int,E)&quot;&gt;&lt;code&gt;set(int, E)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface). Note that the &lt;code&gt;set&lt;/code&gt; method reverses the order of the parameters, to more closely match array usage. Note also that the &lt;code&gt;set&lt;/code&gt; method returns the old value that was stored at the specified position.</source>
          <target state="translated">이 메소드는 기능면에서 &lt;a href=&quot;#set(int,E)&quot;&gt; &lt;code&gt;set(int, E)&lt;/code&gt; &lt;/a&gt; 메소드 ( &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; 인터페이스의 일부)와 동일합니다 . 참고 것으로 &lt;code&gt;set&lt;/code&gt; 방법은 배열의 사용법에 맞게 파라미터의 순서를 반대로. 또한 &lt;code&gt;set&lt;/code&gt; 메서드는 지정된 위치에 저장된 이전 값을 반환합니다.</target>
        </trans-unit>
        <trans-unit id="b7f8b066278a49110a120a172d5b2d1cc50d1fbb" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;vector#add-E-&quot;&gt;&lt;code&gt;add(E)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface).</source>
          <target state="translated">이 메소드는 기능면에서 &lt;a href=&quot;vector#add-E-&quot;&gt; &lt;code&gt;add(E)&lt;/code&gt; &lt;/a&gt; 메소드와 동일 합니다 ( &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; 인터페이스의 일부 임 ).</target>
        </trans-unit>
        <trans-unit id="f6e8c2ec5f9d3776676bdd1e96762993efde14a2" translate="yes" xml:space="preserve">
          <source>This method is identical in functionality to the &lt;a href=&quot;vector#add-int-E-&quot;&gt;&lt;code&gt;add(int, E)&lt;/code&gt;&lt;/a&gt; method (which is part of the &lt;a href=&quot;list&quot;&gt;&lt;code&gt;List&lt;/code&gt;&lt;/a&gt; interface). Note that the &lt;code&gt;add&lt;/code&gt; method reverses the order of the parameters, to more closely match array usage.</source>
          <target state="translated">이 메소드는 기능적으로 &lt;a href=&quot;vector#add-int-E-&quot;&gt; &lt;code&gt;add(int, E)&lt;/code&gt; &lt;/a&gt; 메소드 ( &lt;a href=&quot;list&quot;&gt; &lt;code&gt;List&lt;/code&gt; &lt;/a&gt; 인터페이스의 일부)와 동일합니다 . 참고 것을 &lt;code&gt;add&lt;/code&gt; 방법은 배열의 사용법에 맞게 파라미터의 순서를 반대로.</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
